WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.030 --> 00:00:04.560
你好，你可能还记得最后一个

00:00:02.490 --> 00:00:06.930
进入我谈论的想法

00:00:04.560 --> 00:00:08.910
对下载进行分块

00:00:06.930 --> 00:00:11.580
所以想像一下您有大型视频

00:00:08.910 --> 00:00:13.799
大型音频文件，您想

00:00:11.580 --> 00:00:15.780
将它们塞成字节，分成一半

00:00:13.799 --> 00:00:18.480
梅格跳了什么，因为我们没有

00:00:15.780 --> 00:00:21.810
想要拉出整个视频

00:00:18.480 --> 00:00:23.789
无论从头到尾都有多大

00:00:21.810 --> 00:00:27.119
从中间切下来

00:00:23.789 --> 00:00:28.920
有道理的也许不是很好地与

00:00:27.119 --> 00:00:32.969
和我一起穿越范围

00:00:28.920 --> 00:00:37.559
现在请求，以防您未曾看到

00:00:32.969 --> 00:00:39.750
至此，当我们请求

00:00:37.559 --> 00:00:41.520
视频或视频的一部分，我们正在做某事

00:00:39.750 --> 00:00:44.280
叫范围请求，这让我

00:00:41.520 --> 00:00:46.200
字节零到一千零二

00:00:44.280 --> 00:00:49.350
一千到五千不管你

00:00:46.200 --> 00:00:51.300
为了满足我们

00:00:49.350 --> 00:00:53.969
实际上在我们的服务人员中

00:00:51.300 --> 00:00:56.570
处理范围响应，我们需要

00:00:53.969 --> 00:00:58.800
能够接受范围请求，并且

00:00:56.570 --> 00:01:01.140
从缓存满足范围响应

00:00:58.800 --> 00:01:03.300
因此，我们不想退出

00:01:01.140 --> 00:01:04.949
大量数据只是为了获得

00:01:03.300 --> 00:01:07.170
一小部分的想法

00:01:04.949 --> 00:01:09.000
首先将小瓶分块是

00:01:07.170 --> 00:01:10.080
确保我们可以拉出

00:01:09.000 --> 00:01:12.630
尽可能少的信息

00:01:10.080 --> 00:01:15.210
如此合理，只是得到一点点

00:01:12.630 --> 00:01:17.310
我们有点需要，现在把它弹出

00:01:15.210 --> 00:01:19.229
如果缓存API实际上确实喜欢它

00:01:17.310 --> 00:01:22.080
支持它，但不是，所以我们做到了

00:01:19.229 --> 00:01:25.140
自己，所以当我们上次离开东西时

00:01:22.080 --> 00:01:30.180
事实上，让我告诉你事情发生的地方

00:01:25.140 --> 00:01:34.320
到最后一次，我们有一个副本

00:01:30.180 --> 00:01:37.650
缓存中的视频如下所示

00:01:34.320 --> 00:01:40.560
所以0 1这些都是

00:01:37.650 --> 00:01:42.750
 720p视频让我告诉你发生了什么

00:01:40.560 --> 00:01:47.909
当Shocker播放器开始

00:01:42.750 --> 00:01:50.700
请求视频看这些家伙一对

00:01:47.909 --> 00:01:54.450
对的猴子，让我们来看看

00:01:50.700 --> 00:01:56.159
这些请求之一可能是

00:01:54.450 --> 00:01:59.610
标头请求是我们的选择

00:01:56.159 --> 00:02:01.950
不需要我们想要mmm 

00:01:59.610 --> 00:02:04.140
有要求的范围部分

00:02:01.950 --> 00:02:06.119
说他想要字节二六一四

00:02:04.140 --> 00:02:10.200
五零三二四有一五二

00:02:06.119 --> 00:02:11.730
二四三九好吧，让我们有一个

00:02:10.200 --> 00:02:13.470
看看服务人员，这是

00:02:11.730 --> 00:02:15.210
每当请求时获取

00:02:13.470 --> 00:02:17.250
是由页面制作而成的

00:02:15.210 --> 00:02:20.550
给服务人员获取处理程序

00:02:17.250 --> 00:02:22.290
在这里注册为立即获取

00:02:20.550 --> 00:02:25.770
我要做的第一件事就是说

00:02:22.290 --> 00:02:29.160
鉴于此请求，我将其追捕给我

00:02:25.770 --> 00:02:30.690
安排好的响应类别

00:02:29.160 --> 00:02:33.690
我们将要寻找的是

00:02:30.690 --> 00:02:35.520
片刻，我问这个范围

00:02:33.690 --> 00:02:38.460
要求证人先生要求您

00:02:35.520 --> 00:02:40.410
你能处理吗，如果不是

00:02:38.460 --> 00:02:42.090
问题的范围它将说不， 

00:02:40.410 --> 00:02:44.640
如果是范围请求，它将

00:02:42.090 --> 00:02:46.740
开始哇，我有足够的字节数吗

00:02:44.640 --> 00:02:48.540
实际处理该特定范围

00:02:46.740 --> 00:02:50.880
因为如果我不，你应该真的

00:02:48.540 --> 00:02:53.340
肯定会退回到网络，所以

00:02:50.880 --> 00:02:56.520
我们基本上从好的开始

00:02:53.340 --> 00:02:58.620
如果您确定可以继续处理， 

00:02:56.520 --> 00:03:00.420
如果不能只看一下就处理

00:02:58.620 --> 00:03:02.910
文件中是否存在匹配项

00:03:00.420 --> 00:03:04.740
缓存，因为我的意思是将范围

00:03:02.910 --> 00:03:07.920
请求，但可能是对

00:03:04.740 --> 00:03:11.700
像图标或其中之一

00:03:07.920 --> 00:03:12.930
专辑封面或帖子中的帧

00:03:11.700 --> 00:03:15.270
缓存中可能存在哪种情况

00:03:12.930 --> 00:03:16.890
我们可以直接回应

00:03:15.270 --> 00:03:18.840
从缓存中获取范围响应

00:03:16.890 --> 00:03:21.060
最后但并非最不重要的

00:03:18.840 --> 00:03:23.340
我们所没有的一切

00:03:21.060 --> 00:03:25.830
陷入标准问题

00:03:23.340 --> 00:03:28.769
网络获取它，然后带来

00:03:25.830 --> 00:03:30.660
回来，所以我所有有趣的东西

00:03:28.769 --> 00:03:33.480
认为正在发生这种安排

00:03:30.660 --> 00:03:35.550
响应级别，这是范围

00:03:33.480 --> 00:03:37.500
响应类，您可以看到

00:03:35.550 --> 00:03:40.489
这是罐头和第一个

00:03:37.500 --> 00:03:45.030
问题是范围请求

00:03:40.489 --> 00:03:46.890
因为如果不是，我们不在乎

00:03:45.030 --> 00:03:48.690
问题是当我们去请求时

00:03:46.890 --> 00:03:51.090
我们看看它的标题是否有范围

00:03:48.690 --> 00:03:55.049
标头，如果不是，那么就很棒

00:03:51.090 --> 00:03:57.510
没有等等，并假设

00:03:55.049 --> 00:03:59.880
这是范围要求下一件事情

00:03:57.510 --> 00:04:02.630
我们实际上是在寻找网址，所以我们

00:03:59.880 --> 00:04:08.640
尝试让我们在理论上得到

00:04:02.630 --> 00:04:10.680
缓存中的整个文件

00:04:08.640 --> 00:04:13.350
如果我们能对此做出回应，那么我们

00:04:10.680 --> 00:04:14.670
会，但实际上机会是我们

00:04:13.350 --> 00:04:15.150
可能甚至不需要此代码

00:04:14.670 --> 00:04:16.890
不再

00:04:15.150 --> 00:04:19.080
我可能会删除它，因为

00:04:16.890 --> 00:04:20.370
这是一个范围请求，所以

00:04:19.080 --> 00:04:22.080
回应整个回应

00:04:20.370 --> 00:04:24.419
会有点奇怪，所以我可能需要

00:04:22.080 --> 00:04:25.940
删除该代码，所以我们假设

00:04:24.419 --> 00:04:28.970
在这之后我实际上

00:04:25.940 --> 00:04:31.220
删除该代码，接下来会发生什么

00:04:28.970 --> 00:04:33.890
我们经历了，我们说正确的是

00:04:31.220 --> 00:04:34.940
是范围要求，我要求

00:04:33.890 --> 00:04:36.530
像开始和结束这样的事情

00:04:34.940 --> 00:04:39.020
因为该范围请求是一个字符串

00:04:36.530 --> 00:04:40.250
这就像字节到这里

00:04:39.020 --> 00:04:43.340
字符串中的一点点解析

00:04:40.250 --> 00:04:45.860
开始和结束，我们可以退出

00:04:43.340 --> 00:04:49.970
两个值的开始字节和结束

00:04:45.860 --> 00:04:51.320
现在字节，如果你记得我正在分块

00:04:49.970 --> 00:04:53.810
这些文件放入我认为是半个

00:04:51.320 --> 00:04:55.340
兆块，所以我要做的是

00:04:53.810 --> 00:04:58.550
考虑到开始和结束，说的很好

00:04:55.340 --> 00:05:01.310
值我们需要哪些块，我说

00:04:58.550 --> 00:05:05.240
看你是否有文件下划线说

00:05:01.310 --> 00:05:07.460
九和下划线十将是

00:05:05.240 --> 00:05:09.320
基于这些值，可能是

00:05:07.460 --> 00:05:10.730
像是九点到十二点

00:05:09.320 --> 00:05:12.380
如果你有九点和十二点

00:05:10.730 --> 00:05:14.690
你中间有十和十一

00:05:12.380 --> 00:05:17.600
这是我的假设，但

00:05:14.690 --> 00:05:19.460
你去那里，这很好

00:05:17.600 --> 00:05:22.670
对我来说，在我的特殊情况下， 

00:05:19.460 --> 00:05:23.990
我们去了，我们基本上说得很好

00:05:22.670 --> 00:05:25.520
你对每个人都有回应吗

00:05:23.990 --> 00:05:28.520
这些块中只有一个

00:05:25.520 --> 00:05:31.460
像是九点，十点或九点到十一点

00:05:28.520 --> 00:05:33.620
或其他任何答案，如果答案为是或

00:05:31.460 --> 00:05:35.840
如果答案是否定的，那么我们就保释，如果

00:05:33.620 --> 00:05:38.240
答案是肯定的，那么我必须开始

00:05:35.840 --> 00:05:39.890
再潜水一点，我有

00:05:38.240 --> 00:05:43.390
开始寻找每个块

00:05:39.890 --> 00:05:45.710
特别是最后一块记住

00:05:43.390 --> 00:05:47.390
也许在我们当时

00:05:45.710 --> 00:05:49.190
实际存储这些块中的每一个

00:05:47.390 --> 00:05:50.750
可能实际上有一部分

00:05:49.190 --> 00:05:52.550
可能没有一半

00:05:50.750 --> 00:05:55.430
最后可能有兆字节的块

00:05:52.550 --> 00:05:57.770
说200个字节，所以我存储此标头

00:05:55.430 --> 00:06:00.110
相对于实际的块大小

00:05:57.770 --> 00:06:02.360
大块，所以以后我可以说很好看

00:06:00.110 --> 00:06:04.720
告诉我，实际的数据块是

00:06:02.360 --> 00:06:08.840
因为即使你以为是你知道

00:06:04.720 --> 00:06:10.580
我海洋中的512 K是200字节，所以我需要

00:06:08.840 --> 00:06:12.710
要知道，我要做的就是说

00:06:10.580 --> 00:06:14.990
字节范围和实际值是多少

00:06:12.710 --> 00:06:16.190
我存储在最后一口

00:06:14.990 --> 00:06:18.440
如果我已经存储了整个缓存，现在就缓存

00:06:16.190 --> 00:06:20.840
离线的事情，如果我只有

00:06:18.440 --> 00:06:24.230
在这种情况下，存储文件的一部分

00:06:20.840 --> 00:06:25.970
预取前30秒

00:06:24.230 --> 00:06:28.010
最终我将要用完数据

00:06:25.970 --> 00:06:30.440
我已经预取了，这就是

00:06:28.010 --> 00:06:32.120
这真的可以帮助我们，因为

00:06:30.440 --> 00:06:34.820
这就是我们说我们的那一点

00:06:32.120 --> 00:06:36.590
绝对可以或不能处理

00:06:34.820 --> 00:06:38.479
范围，即使我们有那么一部分

00:06:36.590 --> 00:06:39.770
数据，如果我们可以完成整个字节范围

00:06:38.479 --> 00:06:44.330
我们应该说不

00:06:39.770 --> 00:06:45.800
所以最终如果

00:06:44.330 --> 00:06:48.979
末端块小于我们刚刚结束的末端

00:06:45.800 --> 00:06:50.030
说不，否则我们说确定，那是

00:06:48.979 --> 00:06:54.110
这只是我们要检查的方式

00:06:50.030 --> 00:06:55.340
现在您可以处理此范围响应

00:06:54.110 --> 00:06:57.770
您可以从以下位置创建此范围响应吗

00:06:55.340 --> 00:07:00.080
这个范围要求，所以首先

00:06:57.770 --> 00:07:02.509
然后有一些帮手

00:07:00.080 --> 00:07:06.500
这里和这里实际上是另一个

00:07:02.509 --> 00:07:08.870
创建远程响应，所以我们

00:07:06.500 --> 00:07:13.419
想做的就是我们要经历

00:07:08.870 --> 00:07:16.130
我们想知道是否在创作者中

00:07:13.419 --> 00:07:17.840
是的，从块中创建

00:07:16.130 --> 00:07:18.680
可能更有趣

00:07:17.840 --> 00:07:20.419
你可以看看这一切

00:07:18.680 --> 00:07:21.949
它在github上的源代码有一个

00:07:20.419 --> 00:07:24.560
通过该文件正确查看以查看全部

00:07:21.949 --> 00:07:26.900
我在做什么不同的事情

00:07:24.560 --> 00:07:28.310
我们从大块中创建

00:07:26.900 --> 00:07:30.380
我们已经喜欢这部影片了

00:07:28.310 --> 00:07:31.610
块，我们想得到

00:07:30.380 --> 00:07:34.479
我们需要的块并将它们弹出

00:07:31.610 --> 00:07:38.240
然后用它来创建我们的回应

00:07:34.479 --> 00:07:40.810
我们要做的是经历一次又一次

00:07:38.240 --> 00:07:44.449
处理我们发现的要求

00:07:40.810 --> 00:07:46.639
如果开始和结束我们需要索引

00:07:44.449 --> 00:07:48.889
索引完全相同，那么我们可以

00:07:46.639 --> 00:07:52.310
只要你知道我们可以捷径

00:07:48.889 --> 00:07:53.330
这是这个下一个过程，因为

00:07:52.310 --> 00:07:54.919
这只是一大块，所以你们会

00:07:53.330 --> 00:07:56.659
只是把那一块切下来

00:07:54.919 --> 00:07:58.849
你需要把它寄回去，但是如果

00:07:56.659 --> 00:08:01.279
你需要做多个块

00:07:58.849 --> 00:08:03.740
接下来，只有一堆

00:08:01.279 --> 00:08:06.409
在这里挣扎不是很多

00:08:03.740 --> 00:08:08.840
很有趣，但是我们所做的可能是

00:08:06.409 --> 00:08:10.520
至少我感兴趣的是复制

00:08:08.840 --> 00:08:11.750
缓冲区，所以我们为

00:08:10.520 --> 00:08:14.930
你知道的块的数量

00:08:11.750 --> 00:08:16.969
我们有，我们复制了每个

00:08:14.930 --> 00:08:19.190
缓冲，所以现在我们有一个大

00:08:16.969 --> 00:08:20.930
像所有自行车一样缓冲

00:08:19.190 --> 00:08:23.389
我们拉出来的大块，像九个

00:08:20.930 --> 00:08:25.520
 10 11让我们获取所有这些字节并

00:08:23.389 --> 00:08:27.199
一个和一个有足够空间的缓冲区

00:08:25.520 --> 00:08:29.750
 9 10 11都推到了那里

00:08:27.199 --> 00:08:31.340
那就是我们发送的东西，然后

00:08:29.750 --> 00:08:35.539
我们可以从

00:08:31.340 --> 00:08:37.370
我们经历并开始

00:08:35.539 --> 00:08:41.000
最后，我们切成薄片

00:08:37.370 --> 00:08:43.669
从那开始和结束

00:08:41.000 --> 00:08:45.320
我们和您拥有的特定缓冲区

00:08:43.669 --> 00:08:48.620
看到有一个偏移值

00:08:45.320 --> 00:08:50.790
在这里，因为我们已经开始进入

00:08:48.620 --> 00:08:52.650
该文件，所以如果我说我需要字节

00:08:50.790 --> 00:08:54.620
我不知道数学不能很快

00:08:52.650 --> 00:08:59.820
在这里足够了，但是如果我说我需要字节

00:08:54.620 --> 00:09:01.770
 10,000至11,000，我只给了你

00:08:59.820 --> 00:09:03.390
两千字节的数组，因为

00:09:01.770 --> 00:09:05.670
我有点抵消了你的数量

00:09:03.390 --> 00:09:07.350
我们需要抵消的块

00:09:05.670 --> 00:09:09.090
你回来，所以你的索引是

00:09:07.350 --> 00:09:10.290
你实际上正在寻找有

00:09:09.090 --> 00:09:12.810
被偏移的块数

00:09:10.290 --> 00:09:14.790
是的，我们都在吵架

00:09:12.810 --> 00:09:18.150
告诉你这一切最终都在挣扎

00:09:14.790 --> 00:09:21.060
尽管幸运的是我们可以看到

00:09:18.150 --> 00:09:26.370
回应回来了，我们确实有

00:09:21.060 --> 00:09:27.720
字节，这一切都可以做

00:09:26.370 --> 00:09:29.520
我们想要它做

00:09:27.720 --> 00:09:32.160
所以这确实意味着我们正在回应

00:09:29.520 --> 00:09:37.860
从缓存中获取

00:09:32.160 --> 00:09:40.140
需要，一切现在都在工作

00:09:37.860 --> 00:09:41.370
否则我可以向你解释一下

00:09:40.140 --> 00:09:43.800
好吧，我有一件事

00:09:41.370 --> 00:09:46.110
我觉得这很有趣

00:09:43.800 --> 00:09:48.150
在我去之前根本没有意识到

00:09:46.110 --> 00:09:49.560
这些视频文件，您将看到

00:09:48.150 --> 00:09:52.290
他们来自这只存储狗

00:09:49.560 --> 00:09:56.190
 Google API Google API的com 

00:09:52.290 --> 00:09:58.980
实际上存储在云桶中

00:09:56.190 --> 00:10:01.500
她很棒的Google云存储桶

00:09:58.980 --> 00:10:03.810
但这确实意味着我正在打电话

00:10:01.500 --> 00:10:05.240
请求，因为它们不在同一个位置

00:10:03.810 --> 00:10:06.750
起源于我，他们不是来自

00:10:05.240 --> 00:10:11.310
 localhost ：8080 

00:10:06.750 --> 00:10:12.720
我有一个相当麻烦的

00:10:11.310 --> 00:10:14.070
与原因的关系似乎从来没有

00:10:12.720 --> 00:10:17.250
为我沉沦这只是其中之一

00:10:14.070 --> 00:10:19.530
我不是很了解的事情OFA 

00:10:17.250 --> 00:10:21.240
我会对你诚实，我曾经

00:10:19.530 --> 00:10:24.990
习惯了你有

00:10:21.240 --> 00:10:26.760
访问控制允许来源和大多数

00:10:24.990 --> 00:10:28.080
如果他们愿意的话，人们会把它标榜

00:10:26.760 --> 00:10:30.150
否则他们会把具体

00:10:28.080 --> 00:10:33.450
我没有意识到的是你

00:10:30.150 --> 00:10:34.890
还需要说明请求是否可以

00:10:33.450 --> 00:10:38.310
用凭证制成，因此

00:10:34.890 --> 00:10:40.440
诸如cookie之类的东西以及

00:10:38.310 --> 00:10:44.850
允许公开的标题

00:10:40.440 --> 00:10:48.180
您可以在的访问权限中看到此处

00:10:44.850 --> 00:10:52.980
控制公开这些头之一

00:10:48.180 --> 00:10:55.500
现在是缓存头中的X 

00:10:52.980 --> 00:10:57.150
我这样做的原因是我得到了X 

00:10:55.500 --> 00:10:59.670
在这里缓存标题，因为

00:10:57.150 --> 00:11:02.610
我需要知道的时候

00:10:59.670 --> 00:11:04.550
特定的块来自缓存

00:11:02.610 --> 00:11:06.839
为什么

00:11:04.550 --> 00:11:11.190
令人震惊的球员是一个非常好的

00:11:06.839 --> 00:11:13.110
这样做的原因是

00:11:11.190 --> 00:11:16.620
基于每个带宽估计

00:11:13.110 --> 00:11:18.990
这些回应又回来了

00:11:16.620 --> 00:11:20.639
但问题是它是否来自

00:11:18.990 --> 00:11:23.250
缓存它真的会回来

00:11:20.639 --> 00:11:26.820
快速，所以它会估计

00:11:23.250 --> 00:11:28.440
带宽超好不会

00:11:26.820 --> 00:11:30.480
听起来太糟糕了，如果您做得还不错

00:11:28.440 --> 00:11:31.709
将整个视频缓存为脱机

00:11:30.480 --> 00:11:33.420
因为那并不重要

00:11:31.709 --> 00:11:34.699
认为带宽是因为

00:11:33.420 --> 00:11:37.199
我也将它锁定在特定的

00:11:34.699 --> 00:11:38.910
视频的表示形式，但是如果

00:11:37.199 --> 00:11:41.220
你处在那种情况下

00:11:38.910 --> 00:11:42.720
预装了说的前30秒

00:11:41.220 --> 00:11:45.750
视频，然后您回退

00:11:42.720 --> 00:11:48.000
到网络并在以后进行自适应

00:11:45.750 --> 00:11:49.740
在那种情况下你无法摆脱

00:11:48.000 --> 00:11:51.810
这样，你要做的就是你

00:11:49.740 --> 00:11:54.180
首先必须说正确

00:11:51.810 --> 00:11:55.980
前30秒忽略这些

00:11:54.180 --> 00:11:58.019
带宽计算就是这样

00:11:55.980 --> 00:11:59.420
外显子缓存头确实要

00:11:58.019 --> 00:12:02.730
这样做会告诉Shaka 

00:11:59.420 --> 00:12:04.529
不要在其中包括这些大块

00:12:02.730 --> 00:12:05.490
歪曲他们实际上不是

00:12:04.529 --> 00:12:07.290
你想成为的那种跳跃

00:12:05.490 --> 00:12:09.600
计算带宽的时间

00:12:07.290 --> 00:12:11.820
估计，但为了做到这一点

00:12:09.600 --> 00:12:16.230
工作以使该标头为

00:12:11.820 --> 00:12:19.620
通过你实际上不得不说

00:12:16.230 --> 00:12:20.850
这是一个很大的标题，这是一个暴露的

00:12:19.620 --> 00:12:23.300
标头和标头

00:12:20.850 --> 00:12:27.480
暴露在服务器端

00:12:23.300 --> 00:12:31.380
我为什么会这样呢

00:12:27.480 --> 00:12:34.320
从我的页面请求是

00:12:31.380 --> 00:12:38.670
由服务人员和

00:12:34.320 --> 00:12:40.500
服务人员正在使用响应

00:12:38.670 --> 00:12:44.940
对于视频等等，然后

00:12:40.500 --> 00:12:47.670
从云桶等

00:12:44.940 --> 00:12:49.319
是不是正确，我是哪个标题

00:12:47.670 --> 00:12:52.140
允许发送它，我想说的很好

00:12:49.319 --> 00:12:54.630
这是来自缓存响应的X 

00:12:52.140 --> 00:12:56.459
您会在代码中看到这是X 

00:12:54.630 --> 00:12:59.220
从缓存，但如果服务器端

00:12:56.459 --> 00:13:01.649
没有说这是允许的标题

00:12:59.220 --> 00:13:02.910
服务员会去我会去

00:13:01.649 --> 00:13:04.620
去除掉，我要过滤掉任何

00:13:02.910 --> 00:13:05.880
服务器未告知的任何标头

00:13:04.620 --> 00:13:07.680
我可以与这个特殊的

00:13:05.880 --> 00:13:09.480
回复，所以即使我将其添加到

00:13:07.680 --> 00:13:11.130
服务人员（如果在服务器端） 

00:13:09.480 --> 00:13:13.170
并没有说你可以放那个

00:13:11.130 --> 00:13:14.310
服务工作人员上的标题将进行过滤

00:13:13.170 --> 00:13:17.340
弄明白

00:13:14.310 --> 00:13:20.880
我不能只是你知道接受

00:13:17.340 --> 00:13:22.590
我自己的跨源资源附加组件

00:13:20.880 --> 00:13:25.140
自定义标题，然后预计将发布

00:13:22.590 --> 00:13:26.220
完全像我必须确保的那样

00:13:25.140 --> 00:13:27.960
该服务说那些标题

00:13:26.220 --> 00:13:31.320
被允许在第一个添加

00:13:27.960 --> 00:13:33.060
的地方，所以你去那是

00:13:31.320 --> 00:13:35.280
我发现很有趣，但我没有

00:13:33.060 --> 00:13:36.630
你知道我有点跟随

00:13:35.280 --> 00:13:39.390
逻辑到最后，但确实花了我一个

00:13:36.630 --> 00:13:40.800
稍等片刻，哦，我想知道

00:13:39.390 --> 00:13:42.390
如果这是我需要的

00:13:40.800 --> 00:13:43.380
在服务器端配置说

00:13:42.390 --> 00:13:45.900
这些标头是允许的，如果我是

00:13:43.380 --> 00:13:47.280
看着有反应的做那些

00:13:45.900 --> 00:13:48.960
标头进来了，但我都没有

00:13:47.280 --> 00:13:50.460
标头来了为什么我的

00:13:48.960 --> 00:13:51.990
标头被过滤掉，它变成

00:13:50.460 --> 00:13:53.130
如果服务器未说出，则显示为是

00:13:51.990 --> 00:13:55.530
您实际上可以将它们添加到

00:13:53.130 --> 00:13:58.350
或让他们在那里然后服务

00:13:55.530 --> 00:13:59.730
工人会让您添加它们，但全部

00:13:58.350 --> 00:14:01.380
然后将其过滤掉，然后再发送

00:13:59.730 --> 00:14:02.730
回复到页面，以便您

00:14:01.380 --> 00:14:05.820
现在走，我们都学到了一些东西

00:14:02.730 --> 00:14:07.650
令人兴奋的是，没有人说过

00:14:05.820 --> 00:14:08.580
当然你知道我今天做了什么

00:14:07.650 --> 00:14:10.950
引起万岁

00:14:08.580 --> 00:14:13.950
这不是一个有趣的地方，但它是一个非常

00:14:10.950 --> 00:14:16.560
必要的一个让你知道确保

00:14:13.950 --> 00:14:18.660
资源已正确加载到

00:14:16.560 --> 00:14:20.100
所有其他的东西，所以我看到它的价值

00:14:18.660 --> 00:14:22.050
只是不喜欢使用它而已

00:14:20.100 --> 00:14:25.290
无论如何，这些只是其中之一

00:14:22.050 --> 00:14:30.480
服务工作人员方面

00:14:25.290 --> 00:14:32.070
谦虚的块和放置

00:14:30.480 --> 00:14:34.260
事情又回到了范围

00:14:32.070 --> 00:14:37.920
回答肯定有通读

00:14:34.260 --> 00:14:40.950
该代码，我试图使其成为

00:14:37.920 --> 00:14:42.600
尽可能在六个月内

00:14:40.950 --> 00:14:45.120
当我回头看我不是

00:14:42.600 --> 00:14:46.860
完全困惑，希望

00:14:45.120 --> 00:14:49.380
意味着如果你看着它

00:14:46.860 --> 00:14:50.760
也不会完全困惑，但是

00:14:49.380 --> 00:14:53.400
如果您有很好的问题，您就会知道

00:14:50.760 --> 00:14:55.200
确切地把那些放在那里

00:14:53.400 --> 00:14:58.560
通常，别忘了你可以

00:14:55.200 --> 00:15:00.630
订阅并在Twitter上对我问好

00:14:58.560 --> 00:15:06.089
或您喜欢的任何地方，我都会抓住

00:15:00.630 --> 00:15:08.040
你哦，是的，在下一个条目中，我

00:15:06.089 --> 00:15:10.170
多久谢谢你看

00:15:08.040 --> 00:15:11.970
非常喜欢这个视频，您可能会喜欢

00:15:10.170 --> 00:15:13.829
我们也制作了其他视频，所以不要

00:15:11.970 --> 00:15:15.329
忘记您可以订阅，您将获得

00:15:13.829 --> 00:15:17.699
当我们推出新视频时收到通知

00:15:15.329 --> 00:15:19.259
那里还有更多视频

00:15:17.699 --> 00:15:20.610
在那儿取决于你

00:15:19.259 --> 00:15:23.930
立即观看YouTube 

00:15:20.610 --> 00:15:23.930
绝对点击那些

