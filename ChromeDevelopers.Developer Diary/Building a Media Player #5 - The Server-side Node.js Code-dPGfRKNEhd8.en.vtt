WEBVTT
Kind: captions
Language: en

00:00:00.500 --> 00:00:03.870
PAUL LEWIS: Hello, and welcome
to yet another developer diary.

00:00:03.870 --> 00:00:06.349
So to this point,
I've shown prototypes

00:00:06.349 --> 00:00:07.890
and explained a
little bit of theory.

00:00:07.890 --> 00:00:10.139
But finally-- finally, but
finally, we actually get on

00:00:10.139 --> 00:00:12.060
to talking about
what's been going on

00:00:12.060 --> 00:00:14.740
in the actual application code.

00:00:14.740 --> 00:00:18.090
And in this entry, I think I'm
going to mostly concentrate

00:00:18.090 --> 00:00:20.649
on the server side.

00:00:20.649 --> 00:00:22.440
So firstly, I suppose
I need to acknowledge

00:00:22.440 --> 00:00:24.510
that a lot of this code
really came from Surma.

00:00:24.510 --> 00:00:26.610
If you've not seen our
Supercharged episode

00:00:26.610 --> 00:00:28.724
where he talked about
server side rendering,

00:00:28.724 --> 00:00:29.640
definitely watch that.

00:00:29.640 --> 00:00:32.250
It was a live stream where
he took about an hour or so

00:00:32.250 --> 00:00:35.670
and built a relatively
straightforward,

00:00:35.670 --> 00:00:41.390
Handlebars-based, Express-based,
with caching headers,

00:00:41.390 --> 00:00:45.190
server side rendering
thingy setup.

00:00:45.190 --> 00:00:47.610
And I guess, yeah,
a lot of this is--

00:00:47.610 --> 00:00:50.370
the ideas, anyway-- have
been picked up from there

00:00:50.370 --> 00:00:53.790
about how to do some of
the caching and so on.

00:00:53.790 --> 00:00:56.520
And it was also
Surma who told me

00:00:56.520 --> 00:01:00.194
about Express sub-apps
or Express apps,

00:01:00.194 --> 00:01:01.860
that you can actually
have lots of them.

00:01:01.860 --> 00:01:03.930
But more of that in
a moment because,

00:01:03.930 --> 00:01:05.379
well, there's code to look at.

00:01:05.379 --> 00:01:08.560
So let's have a dive in
and see what's there.

00:01:08.560 --> 00:01:10.440
So this is actually
the server as it

00:01:10.440 --> 00:01:13.230
runs today, which
largely involves

00:01:13.230 --> 00:01:16.500
getting a copy of
Express, making an app

00:01:16.500 --> 00:01:18.600
to wrap everything else.

00:01:18.600 --> 00:01:23.760
And I'm running all my
stuff on the flex containers

00:01:23.760 --> 00:01:25.790
in Google's app engine.

00:01:25.790 --> 00:01:28.830
So what you can do
there is you can boot up

00:01:28.830 --> 00:01:33.030
a container which runs Node.

00:01:33.030 --> 00:01:34.770
It's great.

00:01:34.770 --> 00:01:35.490
It's like that.

00:01:35.490 --> 00:01:39.240
And then it wraps it in the auto
scaling, load balancing stuff.

00:01:39.240 --> 00:01:41.460
It's really quite handy
for a lot of this.

00:01:41.460 --> 00:01:45.070
But it patches in the port
as part of the environment

00:01:45.070 --> 00:01:45.570
variable.

00:01:45.570 --> 00:01:46.830
So we basically pick that up.

00:01:46.830 --> 00:01:50.640
And that's what we run on,
whatever it tells us to run on.

00:01:50.640 --> 00:01:52.200
Beyond that, there's
some middleware.

00:01:52.200 --> 00:01:54.270
And I'll come back to
some of this in a moment.

00:01:54.270 --> 00:01:57.120
I have also got
passport enabled,

00:01:57.120 --> 00:02:00.210
which is a way to
do a [INAUDIBLE]

00:02:00.210 --> 00:02:01.664
if you need to do it.

00:02:01.664 --> 00:02:03.330
And I'm not sure if
I'm going to or not,

00:02:03.330 --> 00:02:05.790
whether I'll have an
admin area or whether I'll

00:02:05.790 --> 00:02:08.190
have a place where people
can actually log in

00:02:08.190 --> 00:02:11.405
so they can see their own--

00:02:11.405 --> 00:02:13.242
what they've rated or whatever.

00:02:13.242 --> 00:02:13.950
I'm not sure yet.

00:02:13.950 --> 00:02:17.850
But I've put it in here just
for now in case I need it.

00:02:17.850 --> 00:02:22.050
But the interesting ones
actually kick in below.

00:02:22.050 --> 00:02:24.450
So there is an app
here for static.

00:02:24.450 --> 00:02:30.070
So anything that begins
/static, I hand off to this app,

00:02:30.070 --> 00:02:31.440
which is under Apps, Statics.

00:02:31.440 --> 00:02:33.854
Let me have a quick
look under there.

00:02:33.854 --> 00:02:36.270
And this is actually relatively
straightforward, this one.

00:02:36.270 --> 00:02:40.200
It's basically going
to call express.static

00:02:40.200 --> 00:02:41.700
with a path and the ops.

00:02:41.700 --> 00:02:43.950
And the ops is that we want
anything that comes from

00:02:43.950 --> 00:02:47.220
/static to have an
age of one year on it.

00:02:47.220 --> 00:02:50.730
So it will expire in one
year, not a moment sooner,

00:02:50.730 --> 00:02:51.600
apparently.

00:02:51.600 --> 00:02:52.860
But that's the idea.

00:02:52.860 --> 00:02:55.610
We're going to say anything
that begins /static,

00:02:55.610 --> 00:02:56.970
grab it from there.

00:02:56.970 --> 00:02:58.920
In this case, it actually
goes to the Client

00:02:58.920 --> 00:03:01.210
folder, which is up here,
and grabs it from there.

00:03:01.210 --> 00:03:03.610
We'll come back to that, I
suspect, in a little bit.

00:03:03.610 --> 00:03:07.620
So anything that begins /static,
which is images, the manifest,

00:03:07.620 --> 00:03:11.259
so on and so forth, go
and grab those from there.

00:03:11.259 --> 00:03:13.800
The authentication one-- I'm
not going to get into that right

00:03:13.800 --> 00:03:13.950
now.

00:03:13.950 --> 00:03:15.690
That's the stuff that
would use Passport.

00:03:15.690 --> 00:03:17.550
Because I'm not sure if it's
actually going to survive,

00:03:17.550 --> 00:03:19.350
if I actually need
it or not, there

00:03:19.350 --> 00:03:21.570
isn't a lot of point in
me showing that just yet.

00:03:21.570 --> 00:03:23.460
If I do do anything
that requires it,

00:03:23.460 --> 00:03:25.860
I'll come back and explain that.

00:03:25.860 --> 00:03:28.830
It's mostly placeholder, which
is the same with the admin.

00:03:28.830 --> 00:03:32.939
It's just me testing
the auth stuff.

00:03:32.939 --> 00:03:33.730
I'll tell you what.

00:03:33.730 --> 00:03:35.815
We'll jump over the
service worker one,

00:03:35.815 --> 00:03:37.770
and we'll come back
to it in a bit.

00:03:37.770 --> 00:03:40.350
Most of the app
is actually served

00:03:40.350 --> 00:03:43.380
through this dynamic
one, this dynamic app.

00:03:43.380 --> 00:03:46.440
So let me show you
around that a little bit.

00:03:46.440 --> 00:03:49.020
So this is not dissimilar
to the static one,

00:03:49.020 --> 00:03:50.280
except it's way, way bigger.

00:03:50.280 --> 00:03:54.360
It's its own Express app,
which I call Dynamic.

00:03:54.360 --> 00:03:55.440
I'm using Adaro.

00:03:55.440 --> 00:03:57.140
Adaro?

00:03:57.140 --> 00:03:59.640
This is the problem with
reading names online.

00:03:59.640 --> 00:04:01.230
You never know how
to pronounce them.

00:04:01.230 --> 00:04:03.090
And then you have to
say them out loud.

00:04:03.090 --> 00:04:05.310
And there's a good
chance that you're

00:04:05.310 --> 00:04:07.080
going to look like an idiot.

00:04:07.080 --> 00:04:10.350
I don't need much help
to look like an idiot,

00:04:10.350 --> 00:04:13.040
just so you know.

00:04:13.040 --> 00:04:14.210
Glad we had this chat.

00:04:14.210 --> 00:04:15.290
Anyway, I'm using--

00:04:15.290 --> 00:04:17.779
I'm going to say Adaro, I think.

00:04:17.779 --> 00:04:20.690
And if it's wrong, oh, well.

00:04:20.690 --> 00:04:23.880
And what that does
is it wraps Dust JS.

00:04:23.880 --> 00:04:29.780
So Dust JS is an alternative
to Handlebars or Dot JS--

00:04:29.780 --> 00:04:31.420
any of those, really.

00:04:31.420 --> 00:04:34.370
I wanted to give it a go
because it supports promises

00:04:34.370 --> 00:04:38.060
and streams, as I understand
it, so that you can-- in theory,

00:04:38.060 --> 00:04:39.740
at least, if you want to--

00:04:39.740 --> 00:04:41.930
make your templates--
build them async.

00:04:41.930 --> 00:04:43.430
So if you need to
do something which

00:04:43.430 --> 00:04:45.360
requires a little
bit of async work,

00:04:45.360 --> 00:04:49.400
then you're not blocking
forever while that happens.

00:04:49.400 --> 00:04:51.567
All the same, it seemed
like an interesting thing

00:04:51.567 --> 00:04:52.400
to go and play with.

00:04:52.400 --> 00:04:53.695
So that's what I'm doing.

00:04:53.695 --> 00:04:55.070
In order to make
it work in Node,

00:04:55.070 --> 00:04:57.080
though, you need to
wrap it around Dust JS.

00:04:57.080 --> 00:04:58.880
And that's what Adaro is.

00:04:58.880 --> 00:05:02.450
Then we have a bunch of
setup stuff, really, which

00:05:02.450 --> 00:05:04.310
gets me things that
I need about reading

00:05:04.310 --> 00:05:08.720
my video library, information
about the videos that I've got,

00:05:08.720 --> 00:05:10.670
information about the
actual package itself.

00:05:10.670 --> 00:05:13.128
Because I use things like the
version number in the package

00:05:13.128 --> 00:05:16.890
JSON to stamp certain files to
make sure that that all works.

00:05:16.890 --> 00:05:21.380
I have a bunch of helpers, which
again, we can come back to,

00:05:21.380 --> 00:05:23.052
which are--

00:05:23.052 --> 00:05:25.010
they're helpers that help
me with the templates

00:05:25.010 --> 00:05:28.160
that Dust JS is going to create.

00:05:28.160 --> 00:05:30.710
Finally, we have a
little bit of setup

00:05:30.710 --> 00:05:32.390
here for the actual
default view,

00:05:32.390 --> 00:05:33.848
like what the title
is going to be,

00:05:33.848 --> 00:05:38.420
the page, what scripts
we need, and so on.

00:05:38.420 --> 00:05:42.470
Then we step into the
actual config of the engine,

00:05:42.470 --> 00:05:47.870
where we can say create dust
engine, set up the views to use

00:05:47.870 --> 00:05:51.540
the view path,
and also, anything

00:05:51.540 --> 00:05:55.400
that comes from the dynamic
side is going to be HTML.

00:05:55.400 --> 00:05:58.680
And therefore, I don't
want it to cache at all.

00:05:58.680 --> 00:06:00.950
So if you remember
the stuff in /static,

00:06:00.950 --> 00:06:02.330
it had a one-year expiry.

00:06:02.330 --> 00:06:06.170
The stuff from dynamic, I
want it to expire immediately.

00:06:06.170 --> 00:06:07.520
I never want it to be cached.

00:06:07.520 --> 00:06:11.170
Because what we're going to do--

00:06:11.170 --> 00:06:13.460
I call it cache and hash.

00:06:13.460 --> 00:06:15.875
You could do cache and
grab, hash and grab, cache

00:06:15.875 --> 00:06:19.130
and hash and grab, any of
the above, whatever you like.

00:06:19.130 --> 00:06:20.900
But I call it
caching and hashing.

00:06:20.900 --> 00:06:22.580
And this is something that
I definitely got from Surma.

00:06:22.580 --> 00:06:24.510
So we'll talk about
that more in a moment.

00:06:24.510 --> 00:06:27.560
But the idea is, first of
all, anything that's HTML,

00:06:27.560 --> 00:06:28.700
don't cache that.

00:06:28.700 --> 00:06:32.330
Anything that is from /static,
definitely cache that,

00:06:32.330 --> 00:06:33.900
and cache it for a year.

00:06:33.900 --> 00:06:35.810
Right.

00:06:35.810 --> 00:06:37.430
So let's talk about--

00:06:37.430 --> 00:06:39.800
this is one of the
roots in the home page.

00:06:39.800 --> 00:06:41.810
We grab the Default
View Options.

00:06:41.810 --> 00:06:44.210
We add in the things that
we need to add specifically

00:06:44.210 --> 00:06:46.460
for that view like, which
is the featured video, which

00:06:46.460 --> 00:06:49.160
are the newest video, any
things that we want in lines,

00:06:49.160 --> 00:06:52.400
like the JavaScript and the CSS,
any particular scripts that we

00:06:52.400 --> 00:06:53.270
want to add to that.

00:06:53.270 --> 00:06:56.180
And then we finally just
call .render against it with

00:06:56.180 --> 00:06:58.920
the template that we've
got, which is home.

00:06:58.920 --> 00:07:00.044
And that's it.

00:07:00.044 --> 00:07:02.210
It will basically render
that out and send that back

00:07:02.210 --> 00:07:02.930
to the client.

00:07:02.930 --> 00:07:05.120
Works just great.

00:07:05.120 --> 00:07:10.280
OK, let's talk more about
the cache and hash stuff.

00:07:10.280 --> 00:07:15.560
The idea is that if you
have an HTML file with paths

00:07:15.560 --> 00:07:19.370
to, say, the manifest or
the JavaScript or the CSS,

00:07:19.370 --> 00:07:21.530
and any of those
change, you need

00:07:21.530 --> 00:07:23.480
to flag that to the browser.

00:07:23.480 --> 00:07:25.710
Because you've said anything
that comes from /static,

00:07:25.710 --> 00:07:27.800
like your JavaScript, like
your CSS, like your manifest,

00:07:27.800 --> 00:07:29.100
they should be
cached for a year.

00:07:29.100 --> 00:07:31.280
So what you need to do is you
need to do something probably

00:07:31.280 --> 00:07:31.988
to the file name.

00:07:31.988 --> 00:07:33.410
That's what most of us do.

00:07:33.410 --> 00:07:36.170
We put a revision
into the file name

00:07:36.170 --> 00:07:39.380
so that you can cache
that revision for a year.

00:07:39.380 --> 00:07:42.040
But if I change the HTML,
or if I change the files,

00:07:42.040 --> 00:07:45.050
the HTML will get a
new revision in there

00:07:45.050 --> 00:07:46.564
for that particular file.

00:07:46.564 --> 00:07:48.230
So let me show you
what I actually mean.

00:07:48.230 --> 00:07:50.100
Let me bring up the browser.

00:07:50.100 --> 00:07:51.070
Wrong browser.

00:07:51.070 --> 00:07:54.890
Let me switch across
to the correct browser.

00:07:54.890 --> 00:07:58.400
So I'm running the site
on 8080 at the moment.

00:07:58.400 --> 00:08:00.900
Ta-da.

00:08:00.900 --> 00:08:02.571
And let me show you.

00:08:02.571 --> 00:08:03.570
Here's a great one here.

00:08:03.570 --> 00:08:06.790
Yeah, this is ideal,
the manifest here.

00:08:06.790 --> 00:08:09.420
You can see that we've got
this-- manifest dot, and then

00:08:09.420 --> 00:08:12.210
this long string here, dot JSON.

00:08:12.210 --> 00:08:14.190
Well, how are we doing that?

00:08:14.190 --> 00:08:15.240
Let me show you here.

00:08:15.240 --> 00:08:17.630
This is one of the middlewares
that I mentioned earlier.

00:08:17.630 --> 00:08:18.820
Or is it helper?

00:08:18.820 --> 00:08:19.404
It's a helper.

00:08:19.404 --> 00:08:19.903
Sorry.

00:08:19.903 --> 00:08:22.320
It's one of the helpers, which
we've registered up here,

00:08:22.320 --> 00:08:24.810
this one here, the hash helper.

00:08:24.810 --> 00:08:29.940
What it does is it
gets handed a path.

00:08:29.940 --> 00:08:32.581
And what it does is
it opens up that file.

00:08:32.581 --> 00:08:34.289
You can see here, load
the file contents.

00:08:34.289 --> 00:08:36.690
And then it creates a hash
from the file contents

00:08:36.690 --> 00:08:39.770
by making a SHA-256, writing
the file data in there,

00:08:39.770 --> 00:08:42.000
and asking for a hex dump
out the other side, which

00:08:42.000 --> 00:08:45.390
is 64 hexadecimal digits long.

00:08:45.390 --> 00:08:48.240
And we use that, and we
replace the file name.

00:08:48.240 --> 00:08:49.600
So if it was-- you can see here.

00:08:49.600 --> 00:08:51.000
Let me actually bring--

00:08:51.000 --> 00:08:54.480
let me grab-- let
me show you this.

00:08:54.480 --> 00:08:55.990
In the header, there we are.

00:08:55.990 --> 00:08:57.970
This is what it
actually looks like.

00:08:57.970 --> 00:09:02.060
So I said, look, get the
dist client manifest.json.

00:09:02.060 --> 00:09:04.530
And it will grab that file,
look at the file contents,

00:09:04.530 --> 00:09:06.030
create the hash for that.

00:09:06.030 --> 00:09:08.910
And then it will spit
back out an updated path

00:09:08.910 --> 00:09:12.655
that looks like this, all that.

00:09:12.655 --> 00:09:13.620
There we are.

00:09:13.620 --> 00:09:15.270
Now, that's good, and it's bad.

00:09:15.270 --> 00:09:17.370
It's good because that
means this is unique.

00:09:17.370 --> 00:09:20.130
So when the manifest changes,
this hash will also change.

00:09:20.130 --> 00:09:21.000
Brilliant.

00:09:21.000 --> 00:09:23.700
But it's also on /static, which
means that it will be cached

00:09:23.700 --> 00:09:24.870
for a year.

00:09:24.870 --> 00:09:26.197
So that's all good.

00:09:26.197 --> 00:09:28.530
The only thing now is when
we actually make the request,

00:09:28.530 --> 00:09:31.380
this file doesn't
actually exist in /static.

00:09:31.380 --> 00:09:33.510
I mean,
/staticmanifest.json exists.

00:09:33.510 --> 00:09:38.166
But manifest dot all that
dot JSON doesn't exist.

00:09:38.166 --> 00:09:39.540
So what we have
on the other side

00:09:39.540 --> 00:09:41.940
is a little bit of middleware
that just simply removes

00:09:41.940 --> 00:09:42.900
the hash.

00:09:42.900 --> 00:09:49.410
If it gets given a request that
has 64 hexadecimal characters

00:09:49.410 --> 00:09:52.320
right next to one
another, A to F, 0 to 9,

00:09:52.320 --> 00:09:54.190
then it replaces those
with an empty string,

00:09:54.190 --> 00:09:55.570
and then passes
straight through.

00:09:55.570 --> 00:09:57.690
So it's a completely
silent bit of middleware

00:09:57.690 --> 00:10:00.270
that just says if you get a
URL with that long hexadecimal

00:10:00.270 --> 00:10:01.920
string, remove it.

00:10:01.920 --> 00:10:04.512
And we'll now ask for
/static/manifest.json,

00:10:04.512 --> 00:10:06.510
which means when we
come back to the server,

00:10:06.510 --> 00:10:07.620
we've asked for the file.

00:10:07.620 --> 00:10:09.250
We're going to get
whatever the server has

00:10:09.250 --> 00:10:10.291
as the most recent value.

00:10:10.291 --> 00:10:12.887
So that's a way of keeping
that all up to date.

00:10:12.887 --> 00:10:15.220
Last little bit I'm going to
show you on the server side

00:10:15.220 --> 00:10:17.490
today is around what
I've been thinking

00:10:17.490 --> 00:10:20.460
and what I've been doing to
do with the service worker.

00:10:20.460 --> 00:10:25.460
There was-- there was a service
worker app that was dedicated

00:10:25.460 --> 00:10:27.030
just to the service worker.

00:10:27.030 --> 00:10:30.340
Fairly similar, in some
ways, to the dynamic 1.

00:10:30.340 --> 00:10:35.021
But all it does is it totally
controls the service worker

00:10:35.021 --> 00:10:35.520
only.

00:10:35.520 --> 00:10:37.930
That's the only thing that
it's actually interested in.

00:10:37.930 --> 00:10:39.930
So not dissimilar
in terms of setup.

00:10:39.930 --> 00:10:44.250
We've got all the Adaro stuff,
and we've got default dust

00:10:44.250 --> 00:10:46.130
options here, and so on.

00:10:46.130 --> 00:10:48.060
But what we do is--

00:10:48.060 --> 00:10:51.265
you see that I've got this
package reader, .getversion.

00:10:51.265 --> 00:10:52.890
And all that's doing
is it's opening up

00:10:52.890 --> 00:10:54.940
the package JSON, which is--

00:10:54.940 --> 00:10:57.570
it's currently set to 1.0.0.

00:10:57.570 --> 00:11:02.210
And inside here-- inside--

00:11:02.210 --> 00:11:04.290
well, I lost it.

00:11:04.290 --> 00:11:05.610
There it is.

00:11:05.610 --> 00:11:10.710
Inside here, you can see that
I render this service worker

00:11:10.710 --> 00:11:14.280
template, and I pass
through version.

00:11:14.280 --> 00:11:16.370
So when we look over here at--

00:11:16.370 --> 00:11:18.550
I believe it's over here.

00:11:18.550 --> 00:11:19.050
Nope.

00:11:19.050 --> 00:11:21.162
That's the built
version, I think.

00:11:21.162 --> 00:11:22.500
Oh, no, it's here.

00:11:22.500 --> 00:11:24.780
You can see that we have
the curly braces version.

00:11:24.780 --> 00:11:27.030
So that means that
if I want to bump

00:11:27.030 --> 00:11:29.430
the version of the
whole site, and I

00:11:29.430 --> 00:11:31.020
want to invalidate
my service worker,

00:11:31.020 --> 00:11:32.020
I can do that just fine.

00:11:32.020 --> 00:11:33.895
Because what I'll do is
I'll bump the version

00:11:33.895 --> 00:11:34.920
in the package.JSON.

00:11:34.920 --> 00:11:37.140
And I'll deploy a new version.

00:11:37.140 --> 00:11:41.300
And then on the server
side, we'll generate a new--

00:11:41.300 --> 00:11:42.980
well, that version
number will be passed

00:11:42.980 --> 00:11:43.680
through to the service worker.

00:11:43.680 --> 00:11:45.471
So when we next request
the service worker,

00:11:45.471 --> 00:11:47.360
we'll get 1.0.1, for example.

00:11:47.360 --> 00:11:49.680
That'll be byte
different to 1.0.0.

00:11:49.680 --> 00:11:52.010
And then we'll run the whole
install activate process.

00:11:52.010 --> 00:11:53.460
So my means--

00:11:53.460 --> 00:11:55.750
I've used it before
a bunch of times now.

00:11:55.750 --> 00:11:57.000
I did it in Chrome Dev Summit.

00:11:57.000 --> 00:11:57.840
I've done it in--

00:11:57.840 --> 00:11:59.520
I think it was Voice
Memos I did it in,

00:11:59.520 --> 00:12:01.350
possibly even Guitar
Tuner as well.

00:12:01.350 --> 00:12:03.790
A bunch of the stuff
that I've built

00:12:03.790 --> 00:12:07.230
is really convenient to just
go, bump the package version,

00:12:07.230 --> 00:12:09.240
and then send that out.

00:12:09.240 --> 00:12:15.180
And that will cause your service
worker stuff to be updated.

00:12:15.180 --> 00:12:18.750
And the other thing that it also
does, or it should do-- yes,

00:12:18.750 --> 00:12:19.440
it does--

00:12:19.440 --> 00:12:22.470
is it makes sure that my
service worker is never cached.

00:12:22.470 --> 00:12:24.330
This is a super important thing.

00:12:24.330 --> 00:12:25.980
Even though,
technically, I guess,

00:12:25.980 --> 00:12:30.030
this might-- no, it
doesn't live in static.

00:12:30.030 --> 00:12:34.350
But even if Express wanted
to cache the service

00:12:34.350 --> 00:12:37.549
worker for a day or a week,
we really don't want that.

00:12:37.549 --> 00:12:39.090
Service workers,
you really want them

00:12:39.090 --> 00:12:41.310
to cache for no amount of time.

00:12:41.310 --> 00:12:43.620
And the reason is
we want to be sure

00:12:43.620 --> 00:12:45.450
that if we update
our service worker,

00:12:45.450 --> 00:12:47.274
that we definitely come back--

00:12:47.274 --> 00:12:48.690
the people who are
connected to us

00:12:48.690 --> 00:12:51.030
definitely come back and get it.

00:12:51.030 --> 00:12:53.910
As it happens, even if you
set a service worker to cache

00:12:53.910 --> 00:12:56.730
for more than a day,
the browser will always

00:12:56.730 --> 00:12:57.970
come back after one day.

00:12:57.970 --> 00:13:00.160
I believe that's in the spec.

00:13:00.160 --> 00:13:02.560
It does mean, though, that if
you set the caching headers

00:13:02.560 --> 00:13:04.185
to be like a year,
you're going to have

00:13:04.185 --> 00:13:06.670
to wait at least a day
before any changes you make

00:13:06.670 --> 00:13:08.830
to the service worker get
passed down to anybody

00:13:08.830 --> 00:13:10.121
who's already got it installed.

00:13:10.121 --> 00:13:12.154
So strong recommendation
for you there--

00:13:12.154 --> 00:13:13.570
make sure that
your service worker

00:13:13.570 --> 00:13:15.340
has some kind of
no caching headers,

00:13:15.340 --> 00:13:17.710
very much like the HTML, so
that if you make a change,

00:13:17.710 --> 00:13:21.340
it can get deployed instantly,
as in as soon as somebody hits

00:13:21.340 --> 00:13:23.074
your site, they'll
go, oh, I need

00:13:23.074 --> 00:13:24.240
to get a new service worker.

00:13:24.240 --> 00:13:26.569
And if they can, they'll
download and activate

00:13:26.569 --> 00:13:29.110
and install, and all the rest
of it, your new service worker.

00:13:29.110 --> 00:13:30.130
So there you go.

00:13:30.130 --> 00:13:33.099
All the code, as I mentioned
previously, is up on GitHub.

00:13:33.099 --> 00:13:34.640
I will link to it
in the notes below.

00:13:34.640 --> 00:13:36.930
So that's the service
side of things.

00:13:36.930 --> 00:13:39.490
Next up, I think we should
have a little bit of a chat

00:13:39.490 --> 00:13:41.830
about maybe more video stuff.

00:13:41.830 --> 00:13:43.452
Because that is
what we're building.

00:13:43.452 --> 00:13:45.410
Don't forget, you can
subscribe to the channel.

00:13:45.410 --> 00:13:47.367
Don't forget, you can
leave comments below.

00:13:47.367 --> 00:13:48.700
Loving reading all the comments.

00:13:48.700 --> 00:13:50.285
Thank you so much
for all of those.

00:13:50.285 --> 00:13:51.910
It really does make
all this worthwhile

00:13:51.910 --> 00:13:55.180
because it's so nice
to see what you think

00:13:55.180 --> 00:13:57.110
and also to get your
questions as well.

00:13:57.110 --> 00:13:59.594
So if you've got questions,
definitely pop those in.

00:13:59.594 --> 00:14:01.510
And I'll try to either
respond to them in line

00:14:01.510 --> 00:14:04.260
or in the next
video that I record.

00:14:04.260 --> 00:14:06.231
Too-da-loo.

00:14:06.231 --> 00:14:06.730
Hey, folks.

00:14:06.730 --> 00:14:07.610
Thanks for watching.

00:14:07.610 --> 00:14:09.610
Don't forget that there
is more content that you

00:14:09.610 --> 00:14:11.502
can find kind of over here-ish.

00:14:11.502 --> 00:14:13.876
And if you want to subscribe,
there's probably a button--

00:14:13.876 --> 00:14:16.550
I don't know, maybe there,
maybe somewhere around there.

00:14:16.550 --> 00:14:18.460
Click that if you've
not done not that.

00:14:18.460 --> 00:14:20.360
Brilliant.

