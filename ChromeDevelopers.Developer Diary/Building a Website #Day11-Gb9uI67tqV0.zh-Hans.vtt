WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.000 --> 00:00:05.220
好吧，我们不只是完成他们的

00:00:03.330 --> 00:00:11.340
我所在的网站

00:00:05.220 --> 00:00:15.330
觉得还好吧，让我让我

00:00:11.340 --> 00:00:17.310
列出至少要做的事

00:00:15.330 --> 00:00:19.789
基本上参加最后的会议

00:00:17.310 --> 00:00:22.949
我还在等那些

00:00:19.789 --> 00:00:28.650
如果我推送消息和通知

00:00:22.949 --> 00:00:31.320
可以及时到达，我认为在那里

00:00:28.650 --> 00:00:32.520
可能是另一件事

00:00:31.320 --> 00:00:35.399
在这个确切的时刻，如果我

00:00:32.520 --> 00:00:38.100
重要的是，如果我不想，我会记住的

00:00:35.399 --> 00:00:42.960
我们的待办事项清单

00:00:38.100 --> 00:00:45.329
在那里，但是自从我上次录制一个

00:00:42.960 --> 00:00:46.829
视频已经有几天了， 

00:00:45.329 --> 00:00:48.780
过去几天的原因是因为我

00:00:46.829 --> 00:00:51.360
一直在服务工人

00:00:48.780 --> 00:00:55.260
部分，我想尝试并获得

00:00:51.360 --> 00:00:57.210
恰到好处，它一直在工作

00:00:55.260 --> 00:01:00.570
意思是我已经有一名服务人员

00:00:57.210 --> 00:01:02.010
从一开始就不知道你是否

00:01:00.570 --> 00:01:03.989
记住，但是基本上就像

00:01:02.010 --> 00:01:07.080
通过它没有做的服务工作

00:01:03.989 --> 00:01:10.799
任何特别的要求

00:01:07.080 --> 00:01:14.010
经过它，这是一件容易的事

00:01:10.799 --> 00:01:16.140
并获取资源和下一步

00:01:14.010 --> 00:01:22.470
对我来说实际上是填充它

00:01:16.140 --> 00:01:24.750
缓存项目，您实际上知道

00:01:22.470 --> 00:01:25.979
从缓存中响应，然后做几个

00:01:24.750 --> 00:01:28.110
其他零碎的东西，让我们

00:01:25.979 --> 00:01:30.630
实际看一下代码，因为

00:01:28.110 --> 00:01:32.729
我认为那会照亮事物

00:01:30.630 --> 00:01:36.840
首先，他们将进入Python 

00:01:32.729 --> 00:01:42.380
因为我现在要讲到重点

00:01:36.840 --> 00:01:45.659
我们基本上在哪里热交换主页

00:01:42.380 --> 00:01:47.970
我实际上会很好地热插拔

00:01:45.659 --> 00:01:51.360
主页与此我现在与此项目相关

00:01:47.970 --> 00:01:53.090
有实际的Jason文件

00:01:51.360 --> 00:01:57.479
充满乐趣的会议

00:01:53.090 --> 00:01:59.880
我刚才做的废话课

00:01:57.479 --> 00:02:02.040
现在，您可以看到它是

00:01:59.880 --> 00:02:04.290
日期排序是第一个关键， 

00:02:02.040 --> 00:02:07.209
然后每个在每个时间

00:02:04.290 --> 00:02:10.700
在PST中

00:02:07.209 --> 00:02:12.709
因为那是的时区

00:02:10.700 --> 00:02:16.190
 Chrome开发者峰会在旧金山

00:02:12.709 --> 00:02:20.360
这将是PST，这意味着我

00:02:16.190 --> 00:02:24.530
认为您比UTC格林尼治标准时间晚七个小时

00:02:20.360 --> 00:02:27.260
可能会根据您的推荐方式来调用它

00:02:24.530 --> 00:02:29.360
时区，我的意思是谁不只是

00:02:27.260 --> 00:02:34.250
我知道我坐在那里指的是时代

00:02:29.360 --> 00:02:39.260
这样做，我得到了JSON文件和

00:02:34.250 --> 00:02:41.150
 JSON文件由Python和

00:02:39.260 --> 00:02:44.480
这实际上很重要，因为我确实

00:02:41.150 --> 00:02:47.239
像我这样的事情基本上开始

00:02:44.480 --> 00:02:49.519
踏出第一步，我基本上

00:02:47.239 --> 00:02:52.940
这是会话文件，现在是

00:02:49.519 --> 00:02:54.920
各种来源的来源

00:02:52.940 --> 00:02:57.410
例如网站上的片段

00:02:54.920 --> 00:03:00.260
我也将过滤器移出了

00:02:57.410 --> 00:03:03.799
到他们自己的文件中，所以我们有了

00:03:00.260 --> 00:03:08.510
喜欢获取当前会话等等

00:03:03.799 --> 00:03:10.819
我们得到当前的UTC时间，我们

00:03:08.510 --> 00:03:12.560
逐步完成所有单独的会话

00:03:10.819 --> 00:03:15.470
从该JSON文件中获取七个

00:03:12.560 --> 00:03:17.000
几个小时，她有一点

00:03:15.470 --> 00:03:20.000
日期解析的一种有趣方式

00:03:17.000 --> 00:03:22.040
通常你会通过它，但是

00:03:20.000 --> 00:03:23.630
因为我需要调整时间，我

00:03:22.040 --> 00:03:25.099
现在我可能会回到这个

00:03:23.630 --> 00:03:28.010
实际工作并整理

00:03:25.099 --> 00:03:30.230
因为我可能会要求暂停它

00:03:28.010 --> 00:03:31.639
在你知道我可以使它字符串和

00:03:30.230 --> 00:03:32.870
然后要求它正确通过

00:03:31.639 --> 00:03:35.450
比用这种方法做的有点

00:03:32.870 --> 00:03:36.680
有趣的方式来做，但是我们有东西

00:03:35.450 --> 00:03:38.510
忘记当前会话

00:03:36.680 --> 00:03:40.459
下届会议，有一些

00:03:38.510 --> 00:03:42.019
有趣的点点滴滴

00:03:40.459 --> 00:03:44.299
就像你必须确保下一个

00:03:42.019 --> 00:03:46.790
会话与

00:03:44.299 --> 00:03:49.430
当前的日子和点点滴滴

00:03:46.790 --> 00:03:52.130
那是动态的，而且还在

00:03:49.430 --> 00:03:54.380
谈到真正的家

00:03:52.130 --> 00:03:56.060
如果模板非

00:03:54.380 --> 00:04:01.160
在首页中，我们必须做一个

00:03:56.060 --> 00:04:03.319
根据时间来决定

00:04:01.160 --> 00:04:05.180
服务器认为是这样，但是还可以

00:04:03.319 --> 00:04:09.650
因为所有这些东西都在UTC中

00:04:05.180 --> 00:04:10.970
无论如何，基本上如果

00:04:09.650 --> 00:04:14.840
第一天的第一天之间

00:04:10.970 --> 00:04:18.470
会议，今天是零调整

00:04:14.840 --> 00:04:22.550
如果是PST，那就是直播日，如果

00:04:18.470 --> 00:04:24.140
这也是第二天的直播，因为

00:04:22.550 --> 00:04:27.680
我认为这些会有所不同

00:04:24.140 --> 00:04:29.600
 YouTube嵌入，所以我必须要有你

00:04:27.680 --> 00:04:32.180
知道不同有效地不同

00:04:29.600 --> 00:04:36.470
这些不同模板的文件，以及

00:04:32.180 --> 00:04:38.540
那么最后一个是nom 

00:04:36.470 --> 00:04:42.290
会议的任何一天都不能显示

00:04:38.540 --> 00:04:43.910
可以正常工作的主页

00:04:42.290 --> 00:04:45.710
事实让我告诉你发生了什么

00:04:43.910 --> 00:04:47.180
我将在没有任何服务人员的情况下进行此操作

00:04:45.710 --> 00:04:48.920
所以我们直接就是您

00:04:47.180 --> 00:04:51.110
如果您正在工作，请命令转移我们

00:04:48.920 --> 00:04:52.790
服务关闭命令转移我们的意愿

00:04:51.110 --> 00:04:54.650
实际上导致您的页面加载

00:04:52.790 --> 00:04:56.390
它在网络堆栈中导致其加载

00:04:54.650 --> 00:04:57.710
没有任何服务，尽管没有

00:04:56.390 --> 00:04:59.720
这些请求中的

00:04:57.710 --> 00:05:01.640
服务工作，所以可以

00:04:59.720 --> 00:05:03.560
成为一种很好的测试方法

00:05:01.640 --> 00:05:06.130
那是我的服务器实际上在响应

00:05:03.560 --> 00:05:10.700
在介绍之前正确的事情

00:05:06.130 --> 00:05:12.470
服务人员现在也让我

00:05:10.700 --> 00:05:15.890
我们在这里，让我更改日期

00:05:12.470 --> 00:05:18.680
和时间，所以我将其设置为昨天，如果

00:05:15.890 --> 00:05:20.810
你喜欢，所以让我们发送到第一个

00:05:18.680 --> 00:05:22.840
会议当天，然后点击

00:05:20.810 --> 00:05:26.810
命令移动我们，您可以看到

00:05:22.840 --> 00:05:30.140
不仅是我们将其移动

00:05:26.810 --> 00:05:33.020
用我会做的方式，实际上我们会

00:05:30.140 --> 00:05:34.729
回到那一点，所以你

00:05:33.020 --> 00:05:36.110
可以看到，这实际上是我选择的

00:05:34.729 --> 00:05:37.490
开发人员日记第一天，让我知道

00:05:36.110 --> 00:05:39.080
这实际上是第一天

00:05:37.490 --> 00:05:41.810
像这样，肯定是在做

00:05:39.080 --> 00:05:44.300
正确的模板留一，您会看到

00:05:41.810 --> 00:05:48.440
接下来，这个已经调整

00:05:44.300 --> 00:05:51.280
当地时间（如果我禁用javascript） 

00:05:48.440 --> 00:05:51.280
一会儿

00:05:54.300 --> 00:05:59.940
在这里这里在这里禁用JavaScript 

00:05:56.819 --> 00:06:03.479
玩小丑班吗，你看到的是

00:05:59.940 --> 00:06:04.770
太平洋标准时间上午8点，或者没有标题

00:06:03.479 --> 00:06:09.659
那里，我要回去

00:06:04.770 --> 00:06:12.000
解决此问题，如果我们能够使用JavaScript 

00:06:09.659 --> 00:06:13.620
一旦获得了相同的内容

00:06:12.000 --> 00:06:15.720
标题回到了那里，但是

00:06:13.620 --> 00:06:17.550
调整为当地时间

00:06:15.720 --> 00:06:19.860
刚在JavaScript中完成，我有一个I 

00:06:17.550 --> 00:06:22.169
拥有不断完善的JavaScript 

00:06:19.860 --> 00:06:26.280
还是不经常，而是一种手表

00:06:22.169 --> 00:06:29.129
对于时间表的变化，我

00:06:26.280 --> 00:06:33.419
如果这部影片没有，我可以告诉你吗

00:06:29.129 --> 00:06:35.639
太长了，反正理论

00:06:33.419 --> 00:06:37.650
这是第一天，你可以看到

00:06:35.639 --> 00:06:39.330
快到当地时间四点钟

00:06:37.650 --> 00:06:41.460
我大约在五个小时内

00:06:39.330 --> 00:06:43.650
大约有五个小时

00:06:41.460 --> 00:06:45.060
登记早餐，你知道

00:06:43.650 --> 00:06:48.539
显然，当我们进入另一个

00:06:45.060 --> 00:06:53.550
届会更有意义

00:06:48.539 --> 00:06:57.960
时间，所以我们说实际上是六个

00:06:53.550 --> 00:07:00.630
现在在英国，您可以看到我们已经

00:06:57.960 --> 00:07:02.969
当前会议是Alex Russell 

00:07:00.630 --> 00:07:04.830
我不好我们已经离开了

00:07:02.969 --> 00:07:06.900
早餐几乎是午餐

00:07:04.830 --> 00:07:11.340
我这时候旅行的东西是

00:07:06.900 --> 00:07:13.080
工作很好，所以无论如何

00:07:11.340 --> 00:07:15.029
你看这里我很清爽

00:07:13.080 --> 00:07:17.400
全部上市不到一分钟

00:07:15.029 --> 00:07:20.099
我们可以等一下看看会发生什么

00:07:17.400 --> 00:07:28.830
接下来我不可以给他们

00:07:20.099 --> 00:07:31.379
延时，这个mmm还在那儿等

00:07:28.830 --> 00:07:32.909
它发生了，我碰巧你可以看到

00:07:31.379 --> 00:07:37.199
接下来出现的那个变为现实

00:07:32.909 --> 00:07:39.090
现在下一个出现在

00:07:37.199 --> 00:07:41.490
清单，以便您知道

00:07:39.090 --> 00:07:43.830
播放的视频将是我

00:07:41.490 --> 00:07:45.779
基本上是交换会话，所以

00:07:43.830 --> 00:07:49.800
那就是发生了什么

00:07:45.779 --> 00:07:52.440
她非常活泼的东西

00:07:49.800 --> 00:07:54.870
很酷，代码正在启动

00:07:52.440 --> 00:07:57.750
在组件周围有现场

00:07:54.870 --> 00:08:00.210
会话信息，基本上

00:07:57.750 --> 00:08:02.219
通过许多种

00:08:00.210 --> 00:08:03.479
与这些过滤器重复的方式

00:08:02.219 --> 00:08:04.620
在服务器端，因为它必须

00:08:03.479 --> 00:08:06.270
做类似的事情

00:08:04.620 --> 00:08:07.330
通过会议杰森看，所以他们

00:08:06.270 --> 00:08:09.879
分享杰森

00:08:07.330 --> 00:08:11.860
服务器端和客户端都

00:08:09.879 --> 00:08:14.379
看着那个杰森，做一些

00:08:11.860 --> 00:08:16.330
你的决定知道下一步

00:08:14.379 --> 00:08:17.830
会话切换时间为

00:08:16.330 --> 00:08:21.879
基本上找下届

00:08:17.830 --> 00:08:24.430
找出现在的时间，然后

00:08:21.879 --> 00:08:26.949
安排一个时间基本上去做一个

00:08:24.430 --> 00:08:30.639
检查那是可行的

00:08:26.949 --> 00:08:34.060
很好，它似乎可以正常工作

00:08:30.639 --> 00:08:36.219
反正很好，所以大家都工作，如果

00:08:34.060 --> 00:08:41.950
你知道JavaScript它交换会话

00:08:36.219 --> 00:08:45.610
现在，如果我们重新加载并查看

00:08:41.950 --> 00:08:48.700
网络上所有这些请求都是

00:08:45.610 --> 00:08:52.899
实际上来自服务人员

00:08:48.700 --> 00:08:56.079
让我告诉你服务人员

00:08:52.899 --> 00:08:58.269
来自顶级进口的服务工人

00:08:56.079 --> 00:09:02.890
脚本，然后我确定你记得

00:08:58.269 --> 00:09:04.930
奇数哈希表示过滤器

00:09:02.890 --> 00:09:07.450
基本上是要确保

00:09:04.930 --> 00:09:09.610
如果这个文件改变了这个

00:09:07.450 --> 00:09:11.620
导入脚本行实际上将

00:09:09.610 --> 00:09:14.350
是不同的，所以如果我们看一下

00:09:11.620 --> 00:09:15.940
服务员本身，您可以看到

00:09:14.350 --> 00:09:19.660
这是兑现的清单，然后有

00:09:15.940 --> 00:09:21.579
一个长字母数字哈希

00:09:19.660 --> 00:09:23.380
在那里的字符串，所以如果我改变

00:09:21.579 --> 00:09:25.870
无论这个内容是什么

00:09:23.380 --> 00:09:27.339
缓存清单，然后将得到

00:09:25.870 --> 00:09:29.980
服务员将更新

00:09:27.339 --> 00:09:32.410
它会运行其安装和激活

00:09:29.980 --> 00:09:35.019
并经历其生命周期，如果

00:09:32.410 --> 00:09:37.959
你没有遇到过的方式

00:09:35.019 --> 00:09:42.040
服务人员生命周期中有一个品牌

00:09:37.959 --> 00:09:44.170
新文件指南文章的内容

00:09:42.040 --> 00:09:46.510
谷歌网络基础，我们将

00:09:44.170 --> 00:09:47.560
链接到描述中，并可能

00:09:46.510 --> 00:09:49.540
他们甚至会把其中一个看中

00:09:47.560 --> 00:09:52.810
该视频上的注释以及谁

00:09:49.540 --> 00:09:55.120
知道所以什么进入缓存

00:09:52.810 --> 00:09:57.459
清单很高兴你问了缓存

00:09:55.120 --> 00:09:58.930
清单在这里，你会看到

00:09:57.459 --> 00:10:02.890
这基本上是所有事物的清单

00:09:58.930 --> 00:10:06.810
我想要缓存和好消息

00:10:02.890 --> 00:10:11.580
不要自己创造那些

00:10:06.810 --> 00:10:13.200
还是我自己，我要做的就是

00:10:11.580 --> 00:10:15.630
将该文件称为构建资源

00:10:13.200 --> 00:10:18.480
列出，我有一堆东西

00:10:15.630 --> 00:10:21.480
希望它忽略，我有一堆

00:10:18.480 --> 00:10:23.070
喜欢我知道的网址的资源

00:10:21.480 --> 00:10:26.339
肯定想要像各种

00:10:23.070 --> 00:10:27.990
网站的此部分标志

00:10:26.339 --> 00:10:29.730
表示我实际上没有

00:10:27.990 --> 00:10:31.080
在任何会话中烘焙服务器

00:10:29.730 --> 00:10:33.029
信息只是意味着那些

00:10:31.080 --> 00:10:35.180
他们是空虚的，因为我知道

00:10:33.029 --> 00:10:37.920
 javascript将填充它们

00:10:35.180 --> 00:10:39.450
后来我也得到了会议

00:10:37.920 --> 00:10:41.610
信息，我经历了每个

00:10:39.450 --> 00:10:44.130
会话，我得到它的URL，因为我知道

00:10:41.610 --> 00:10:45.690
我想离线兑现，然后我

00:10:44.130 --> 00:10:47.790
遍历静态文件，所以我去了

00:10:45.690 --> 00:10:49.410
通过点斜线静点

00:10:47.790 --> 00:10:51.860
基本上这里的静态文件有

00:10:49.410 --> 00:10:55.080
图像jason javascripts 

00:10:51.860 --> 00:10:59.100
排除服务人员本身

00:10:55.080 --> 00:11:02.180
样式和任何第三方的东西，以及

00:10:59.100 --> 00:11:06.110
表现，以及我所说的其他

00:11:02.180 --> 00:11:09.900
导致这里的长文件很大

00:11:06.110 --> 00:11:12.060
在服务人员那里， 

00:11:09.900 --> 00:11:13.890
被进口等等

00:11:12.060 --> 00:11:16.320
基本上安装每个步骤

00:11:13.890 --> 00:11:19.830
这些，并为每个请求

00:11:16.320 --> 00:11:21.780
这些，它将等到

00:11:19.830 --> 00:11:24.150
缓存已打开，我们添加了

00:11:21.780 --> 00:11:25.800
所有这些项目，然后执行

00:11:24.150 --> 00:11:30.510
跳过等待，基本上意味着去

00:11:25.800 --> 00:11:32.040
直接进入激活阶段

00:11:30.510 --> 00:11:34.950
生命周期是其安装和

00:11:32.040 --> 00:11:36.089
然后等待直到所有的客户

00:11:34.950 --> 00:11:37.650
已连接到的服务人员

00:11:36.089 --> 00:11:39.600
与我们断开连接，您确实像一支力量

00:11:37.650 --> 00:11:41.460
全部刷新时，关闭选项卡的位置

00:11:39.600 --> 00:11:42.960
那些在Chrome的所有标签中

00:11:41.460 --> 00:11:44.880
开发者峰会站点已关闭，它将

00:11:42.960 --> 00:11:49.020
通常，然后更换服务人员

00:11:44.880 --> 00:11:50.700
跨越激活，但在这种情况下

00:11:49.020 --> 00:11:52.020
我告诉它直接去

00:11:50.700 --> 00:11:54.390
激活阶段不用担心

00:11:52.020 --> 00:11:56.370
我已经连接的任何东西

00:11:54.390 --> 00:11:57.540
希望可以解决我

00:11:56.370 --> 00:12:00.240
希望不会有任何破坏

00:11:57.540 --> 00:12:02.510
通过激活来改变

00:12:00.240 --> 00:12:05.580
本身通过以前的样子

00:12:02.510 --> 00:12:06.510
安装会缓存，因此每次我们

00:12:05.580 --> 00:12:08.760
安装服务工人

00:12:06.510 --> 00:12:11.459
我要说的是填充所有现金

00:12:08.760 --> 00:12:13.980
那些虽然不是其他的缓存

00:12:11.459 --> 00:12:15.930
这是我们刚刚填充的一个

00:12:13.980 --> 00:12:17.520
通过安装并摆脱它们

00:12:15.930 --> 00:12:19.740
删除那些缓存，这样我们就不会

00:12:17.520 --> 00:12:20.339
建立空间和空间中的空间

00:12:19.740 --> 00:12:22.230
随着时间的推移

00:12:20.339 --> 00:12:24.990
这可能可以做一点

00:12:22.230 --> 00:12:27.749
我认为它的改进

00:12:24.990 --> 00:12:29.670
应该可能有几个缓存

00:12:27.749 --> 00:12:31.350
缓存不太可能发生的事情

00:12:29.670 --> 00:12:32.639
改变并兑现它的东西

00:12:31.350 --> 00:12:35.129
更有可能像

00:12:32.639 --> 00:12:37.829
我可能会找到的JavaScript或CSS 

00:12:35.129 --> 00:12:39.540
我的小错误中的小事情

00:12:37.829 --> 00:12:41.639
只是想调整或更改或其他

00:12:39.540 --> 00:12:43.529
因此，而不是验证

00:12:41.639 --> 00:12:46.019
整个缓存并下载所有内容

00:12:43.529 --> 00:12:47.519
每次更好的版本

00:12:46.019 --> 00:12:49.170
我认为是

00:12:47.519 --> 00:12:50.819
可能改变那些应该有他们的

00:12:49.170 --> 00:12:52.199
拥有我可以删除的现金， 

00:12:50.819 --> 00:12:54.089
重新填充和我认为的事情

00:12:52.199 --> 00:12:57.449
非常静态，不太可能改变

00:12:54.089 --> 00:12:59.910
再把它们也用自己的现金

00:12:57.449 --> 00:13:03.779
这始终是时间的函数

00:12:59.910 --> 00:13:05.249
你怎么知道我们如何相处

00:13:03.779 --> 00:13:07.949
客户声称我能理解

00:13:05.249 --> 00:13:09.269
这是正确的激活时

00:13:07.949 --> 00:13:12.420
服务工作已经激活了

00:13:09.269 --> 00:13:14.579
基本上说好，我现在会回应

00:13:12.420 --> 00:13:18.089
至此以后的所有要求

00:13:14.579 --> 00:13:21.480
在页面上，然后询问图像或

00:13:18.089 --> 00:13:24.329
一个URL，我会处理它，基本上

00:13:21.480 --> 00:13:27.420
之后推老服务员

00:13:24.329 --> 00:13:30.929
哪里服务谁，因为什么时候去

00:13:27.420 --> 00:13:32.429
他们不再需要它了

00:13:30.929 --> 00:13:34.139
消息，这是一个有趣的小

00:13:32.429 --> 00:13:38.429
我的意思是我认为这很有趣

00:13:34.139 --> 00:13:43.920
我想做的小事是

00:13:38.429 --> 00:13:45.569
就像我该如何决定是否要

00:13:43.920 --> 00:13:47.189
通知某人，例如

00:13:45.569 --> 00:13:49.319
服务员更改可能是

00:13:47.189 --> 00:13:50.429
微小的变化，我真的不想

00:13:49.319 --> 00:13:52.290
有点像

00:13:50.429 --> 00:13:54.300
嘿，新版本，因为他们可能只是

00:13:52.290 --> 00:13:57.660
真的是我的利基市场可能像错字

00:13:54.300 --> 00:14:00.029
或类似的东西，我想添加它可以

00:13:57.660 --> 00:14:02.699
应付下一次我要做的是

00:14:00.029 --> 00:14:06.300
在这里烤的版本是

00:14:02.699 --> 00:14:09.269
从package.json如果它得到一个

00:14:06.300 --> 00:14:10.740
消息要求版本和那个

00:14:09.269 --> 00:14:12.749
消息将来自我将要发送的页面

00:14:10.740 --> 00:14:15.899
展示khodamam它基本上发布了一个

00:14:12.749 --> 00:14:19.710
回信说这是我的处女

00:14:15.899 --> 00:14:23.200
服务人员安装

00:14:19.710 --> 00:14:25.300
你在哪里，你在哪里，如果

00:14:23.200 --> 00:14:26.710
我们有一个积极的服务人员， 

00:14:25.300 --> 00:14:29.770
发布消息去什么版本

00:14:26.710 --> 00:14:33.220
当我们还没有回来的时候

00:14:29.770 --> 00:14:35.200
已经有一个版本，那么我们

00:14:33.220 --> 00:14:38.070
存储它，然后如果有一个

00:14:35.200 --> 00:14:40.060
随着更新，我们得到了您

00:14:38.070 --> 00:14:41.740
想像你遇到的情况

00:14:40.060 --> 00:14:43.420
服务工人，它已经安装了

00:14:41.740 --> 00:14:47.290
运行它被激活，它正在做它

00:14:43.420 --> 00:14:49.870
一件事，然后有一个新的

00:14:47.290 --> 00:14:51.610
好像很好，我接管得很好

00:14:49.870 --> 00:14:56.230
我们问了第一个，你叫什么

00:14:51.610 --> 00:14:58.870
版本，它说不指向1.0 

00:14:56.230 --> 00:15:00.370
因为它是Ember，让我来做

00:14:58.870 --> 00:15:03.250
让我们说一分零分零

00:15:00.370 --> 00:15:04.750
那本来会更好，所以

00:15:03.250 --> 00:15:07.300
我们已经获得了该版本，然后

00:15:04.750 --> 00:15:08.920
安装了一个新的，我们问

00:15:07.300 --> 00:15:11.320
你的版本是什么，它又回来了

00:15:08.920 --> 00:15:13.870
并说我2点0点0我已经

00:15:11.320 --> 00:15:15.430
基本上说我把电流分成

00:15:13.870 --> 00:15:18.520
点的新版本，我基本上

00:15:15.430 --> 00:15:20.950
说主要版本是否相同

00:15:18.520 --> 00:15:24.370
只需将其注销到控制台即可

00:15:20.950 --> 00:15:27.340
是的，我更新了服务人员，如果

00:15:24.370 --> 00:15:30.400
这是一个主要的版本更改，例如1分

00:15:27.340 --> 00:15:32.950
 0到2点0，然后我们推吐司

00:15:30.400 --> 00:15:35.500
就像真的，你知道你应该

00:15:32.950 --> 00:15:36.910
刷新网站，再次这些是

00:15:35.500 --> 00:15:40.600
我可能会改善的事情

00:15:36.910 --> 00:15:43.270
在未来的日子里，我们将看到我们如何

00:15:40.600 --> 00:15:45.550
你可以看到我是否打包

00:15:43.270 --> 00:15:49.030
杰森，我将其更改为两点

00:15:45.550 --> 00:15:53.260
我希望九点三

00:15:49.030 --> 00:15:56.830
刷新页面，但我看到网站已更新

00:15:53.260 --> 00:15:58.780
刷新以获得最新信息，如果我

00:15:56.830 --> 00:16:01.380
做两点三点两点零

00:15:58.780 --> 00:16:01.380
第四点

00:16:02.880 --> 00:16:07.630
但我在控制台中看到的是

00:16:06.040 --> 00:16:08.710
只需让此服务从

00:16:07.630 --> 00:16:10.570
两点九点三到两点

00:16:08.710 --> 00:16:13.480
九点四，这是我的一种方式

00:16:10.570 --> 00:16:16.420
决定我要多少

00:16:13.480 --> 00:16:18.880
在另一端打扰人

00:16:16.420 --> 00:16:20.770
好吧，我也不想等待

00:16:18.880 --> 00:16:23.350
你有更多的时间，但我确实认为

00:16:20.770 --> 00:16:28.540
值得一看

00:16:23.350 --> 00:16:29.770
本身就是这个功能

00:16:28.540 --> 00:16:33.970
每当你做一个会变得冷

00:16:29.770 --> 00:16:36.370
请求到页面的一件事是，如果

00:16:33.970 --> 00:16:39.280
图片以1倍结尾我总是回应

00:16:36.370 --> 00:16:41.740
 1.5倍，这意味着我可以

00:16:39.280 --> 00:16:44.350
只需抓住1.5倍，我就会

00:16:41.740 --> 00:16:45.820
只是热插拔没关系

00:16:44.350 --> 00:16:48.160
你问一个真正得到

00:16:45.820 --> 00:16:50.050
在我看来，是1.5倍

00:16:48.160 --> 00:16:51.580
背景尺寸封面，所以我可以回应

00:16:50.050 --> 00:16:53.470
具有更大的图像，这意味着我不

00:16:51.580 --> 00:16:57.070
必须兑现One X和1.5 x 

00:16:53.470 --> 00:17:00.490
离线亲爱的，如果请求本身

00:16:57.070 --> 00:17:07.300
并没有以开发者峰会结束，我只是

00:17:00.490 --> 00:17:11.020
说坚持当前的要求，但是如果

00:17:07.300 --> 00:17:14.740
但是您已经要求主页

00:17:11.020 --> 00:17:17.020
我参加了会议，我

00:17:14.740 --> 00:17:22.180
基本上每天看，我只是

00:17:17.020 --> 00:17:25.660
四个PST，然后我说如果你在里面

00:17:22.180 --> 00:17:28.200
第一天以直播第一天回应

00:17:25.660 --> 00:17:30.280
从现金，如果你在白天

00:17:28.200 --> 00:17:32.560
每天用现金回应

00:17:30.280 --> 00:17:34.960
如果不是，您将以

00:17:32.560 --> 00:17:36.910
开发者峰会/家，然后有

00:17:34.960 --> 00:17:39.160
任何错误都只是与开发人员响应

00:17:36.910 --> 00:17:41.860
首脑会议/家庭，所以这意味着我们

00:17:39.160 --> 00:17:43.630
得到的是，我们基本上先叫这个，所以

00:17:41.860 --> 00:17:45.760
我们是说要么我们只是要

00:17:43.630 --> 00:17:47.980
保留请求原样或是否为

00:17:45.760 --> 00:17:49.990
请求主页，我们可能会重新映射

00:17:47.980 --> 00:17:52.360
就像服务器在

00:17:49.990 --> 00:17:54.640
 Python，我们必须复制那个

00:17:52.360 --> 00:17:56.920
服务工作中的行为，我猜

00:17:54.640 --> 00:17:59.920
如果您有JavaScript服务器，则可能

00:17:56.920 --> 00:18:01.450
实际使用ISO moss isip和

00:17:59.920 --> 00:18:04.660
像杰克一样糟糕，他不能说同构

00:18:01.450 --> 00:18:08.590
要么同构JavaScript， 

00:18:04.660 --> 00:18:10.930
在这里做同样的逻辑

00:18:08.590 --> 00:18:13.910
会议日1天的行程

00:18:10.930 --> 00:18:15.470
 2，如果不付款， 

00:18:13.910 --> 00:18:18.440
无论年龄如何，我们都在做同样的事情

00:18:15.470 --> 00:18:20.210
那种重新映射和重写，如果

00:18:18.440 --> 00:18:23.180
我们当时没有在会议上这样做

00:18:20.210 --> 00:18:24.920
天，您可能会获得旧的主页， 

00:18:23.180 --> 00:18:26.350
您将不得不强制刷新到

00:18:24.920 --> 00:18:28.970
看到我们不想要的直播

00:18:26.350 --> 00:18:30.350
因此，如果有可能，我们可能会重新映射请求

00:18:28.970 --> 00:18:33.440
如果不需要的话，我们就离开它

00:18:30.350 --> 00:18:35.540
和现金支票一样，如果现金有

00:18:33.440 --> 00:18:37.460
得到了所有的请求

00:18:35.540 --> 00:18:43.190
除了YouTube之类的文件

00:18:37.460 --> 00:18:45.020
缩略图任何分析或它

00:18:43.190 --> 00:18:46.490
基本上不会有任何第三方的东西

00:18:45.020 --> 00:18:50.720
存在于缓存中，我们将仅获取

00:18:46.490 --> 00:18:52.730
它以及我们所做的一切

00:18:50.720 --> 00:18:55.220
从缓存将只是响应如果

00:18:52.730 --> 00:18:57.920
我们是如此的好，我是

00:18:55.220 --> 00:18:59.300
不是很多信息，但是有

00:18:57.920 --> 00:19:00.920
距离我有几天

00:18:59.300 --> 00:19:03.680
录制视频，然后就可以开始了

00:19:00.920 --> 00:19:09.680
如果我不录制它们会发生什么

00:19:03.680 --> 00:19:12.230
我经常在这一点上认为

00:19:09.680 --> 00:19:15.470
几乎可以运输，这将

00:19:12.230 --> 00:19:18.230
可能是最后一部开发日记

00:19:15.470 --> 00:19:20.090
我要记录，也许

00:19:18.230 --> 00:19:22.820
有一些东西出现在

00:19:20.090 --> 00:19:25.160
接下来的那一会儿，就像哦，我必须

00:19:22.820 --> 00:19:28.670
告诉你，我会回来的，但现在

00:19:25.160 --> 00:19:30.380
我只想说谢谢你

00:19:28.670 --> 00:19:31.760
与我一起参加这次旅程谢谢

00:19:30.380 --> 00:19:35.390
您对所有评论的所有

00:19:31.760 --> 00:19:38.150
反馈所有的ter不休，我希望

00:19:35.390 --> 00:19:40.130
您喜欢这趟旅程

00:19:38.150 --> 00:19:44.000
和我在一起很开心

00:19:40.130 --> 00:19:47.800
你知道让我们再做一次

00:19:44.000 --> 00:19:54.040
有时候，但是也许你可以做编码

00:19:47.800 --> 00:19:54.040
是的，是什么概念

00:20:05.779 --> 00:20:07.840
您

