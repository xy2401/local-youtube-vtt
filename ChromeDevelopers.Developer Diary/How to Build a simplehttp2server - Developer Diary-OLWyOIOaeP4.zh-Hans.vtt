WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.000 --> 00:00:06.750
惊喜，我回来了，这已经是一个

00:00:03.959 --> 00:00:09.000
一会儿和我道歉，但我

00:00:06.750 --> 00:00:11.130
以为我们可能已经看够了

00:00:09.000 --> 00:00:13.200
保罗的脸有一阵子，所以我想

00:00:11.130 --> 00:00:16.859
猛扑进去，你就会知道

00:00:13.200 --> 00:00:21.330
我自己的改变，所以我和我在这里

00:00:16.859 --> 00:00:23.670
以为我会告诉你简单的高清b2服务器

00:00:21.330 --> 00:00:26.550
这是我写了很长时间的工具

00:00:23.670 --> 00:00:30.840
前段时间我参加了Udacity课程

00:00:26.550 --> 00:00:33.030
 HTTP和HB 2 II大概应该

00:00:30.840 --> 00:00:34.800
将链接放在这里或

00:00:33.030 --> 00:00:37.590
描述您可能会找到一个链接

00:00:34.800 --> 00:00:39.960
到那里的Udacity课程，这是一个

00:00:37.590 --> 00:00:42.059
您刚刚下载并启动的工具

00:00:39.960 --> 00:00:45.000
它在当前目录中提供服务

00:00:42.059 --> 00:00:48.570
 HB 2，因此与Python非常相似

00:00:45.000 --> 00:00:52.289
简单的HB 2服务器，仅python简单的HP 

00:00:48.570 --> 00:00:55.020
服务器，但我的服务器不支持hb2 

00:00:52.289 --> 00:00:58.140
需要一个新工具，因为HTTP 2 by 

00:00:55.020 --> 00:01:00.500
设计总是加密并且总是

00:00:58.140 --> 00:01:02.609
需要TLS证书，并且

00:01:00.500 --> 00:01:04.589
生成这些证书真的是

00:01:02.609 --> 00:01:06.330
烦人，真的很耗时

00:01:04.589 --> 00:01:07.830
只需将其直接拉入工具即可

00:01:06.330 --> 00:01:10.170
它立即为您做到，只是

00:01:07.830 --> 00:01:12.330
启动它，它旋转起来，在那里

00:01:10.170 --> 00:01:14.189
用乙肝2我真的没去

00:01:12.330 --> 00:01:17.460
因为去的支持很早

00:01:14.189 --> 00:01:20.430
因为我只是喜欢去HB 2 

00:01:17.460 --> 00:01:22.740
回到我写的时候，他们没有

00:01:20.430 --> 00:01:24.930
支持推送，我是其中之一

00:01:22.740 --> 00:01:26.580
我想玩的大事

00:01:24.930 --> 00:01:28.380
所以我所做的基本上是

00:01:26.580 --> 00:01:30.750
从参议院图书馆获取了代码

00:01:28.380 --> 00:01:33.930
把它放在我的项目中，猴子修补

00:01:30.750 --> 00:01:38.220
支持在那里推送，但现在只是

00:01:33.930 --> 00:01:39.659
几周前go 1.8出来了

00:01:38.220 --> 00:01:40.650
你知道有很多改进

00:01:39.659 --> 00:01:42.119
在性能方面

00:01:40.650 --> 00:01:44.460
垃圾收集，但现在

00:01:42.119 --> 00:01:46.380
对推有原生支持，所以我可以

00:01:44.460 --> 00:01:49.049
终于把我的猴子扔掉了

00:01:46.380 --> 00:01:50.280
版本，我趁机会

00:01:49.049 --> 00:01:52.380
我一直在使用该工具

00:01:50.280 --> 00:01:54.149
基本上做一个整体重构

00:01:52.380 --> 00:01:57.210
你知道拆分代码是真的

00:01:54.149 --> 00:01:59.399
杂乱无章的真的变得越来越好

00:01:57.210 --> 00:02:02.070
小文件和模块，并使其

00:01:59.399 --> 00:02:04.140
所有人都可以使用

00:02:02.070 --> 00:02:06.479
谁可能希望对此工具做出贡献

00:02:04.140 --> 00:02:09.239
因为您想要功能或其他东西

00:02:06.479 --> 00:02:11.400
所以现在的代码有望更多

00:02:09.239 --> 00:02:13.680
模块化更具可读性，我想

00:02:11.400 --> 00:02:14.180
我只想深入解释一下

00:02:13.680 --> 00:02:19.519
一点

00:02:14.180 --> 00:02:21.980
现在如何工作，所以在我开始之前

00:02:19.519 --> 00:02:25.340
所谓的推动清单和这种推动

00:02:21.980 --> 00:02:27.769
清单只是您的一种方式

00:02:25.340 --> 00:02:29.510
定义应该使用哪些资源

00:02:27.769 --> 00:02:31.939
当某个请求到来时被推送

00:02:29.510 --> 00:02:33.859
和埃里克·比德尔曼（Eric bidelman）一起来

00:02:31.939 --> 00:02:36.620
这样，我们有点想

00:02:33.859 --> 00:02:38.810
制定行业标准，但是它变成了

00:02:36.620 --> 00:02:41.000
大多数人已经有一个

00:02:38.810 --> 00:02:44.180
解决方案，这些实际上是链接

00:02:41.000 --> 00:02:46.639
标头，所以现在我有点扔掉了

00:02:44.180 --> 00:02:49.430
体现想法，然后基本上回到

00:02:46.639 --> 00:02:50.720
允许您指定标题，因为

00:02:49.430 --> 00:02:52.400
这是人们想要的

00:02:50.720 --> 00:02:54.049
反正有，因为有时候你想要

00:02:52.400 --> 00:02:55.280
尝试使用缓存头或您

00:02:54.049 --> 00:02:57.200
需要为任何设置自定义标头

00:02:55.280 --> 00:03:00.590
您从事服务人员工作的原因

00:02:57.200 --> 00:03:02.120
例如，所以我添加了它并绘制了草图

00:03:00.590 --> 00:03:04.340
上传配置，因为有时您

00:03:02.120 --> 00:03:06.650
想做单页申请，所以

00:03:04.340 --> 00:03:08.750
你需要做重写，我速写了

00:03:06.650 --> 00:03:10.790
在配置上，最后我有点

00:03:08.750 --> 00:03:13.340
意识到我所拥有的几乎是

00:03:10.790 --> 00:03:16.099
与firebase的静态相同

00:03:13.340 --> 00:03:18.919
托管，所以我决定基本上只是

00:03:16.099 --> 00:03:20.870
采纳整个火力基地罪犯

00:03:18.919 --> 00:03:22.459
很酷，因为当firebase 

00:03:20.870 --> 00:03:24.079
确实有允许您离线的工具

00:03:22.459 --> 00:03:27.260
他们为静态托管开发

00:03:24.079 --> 00:03:29.060
不支持HTTP 2或push等

00:03:27.260 --> 00:03:30.620
您可以做的简单的HT新服务器

00:03:29.060 --> 00:03:32.780
那现在我的意思不是一百

00:03:30.620 --> 00:03:35.269
高保真度百分比实施

00:03:32.780 --> 00:03:36.530
我写过，但到目前为止， 

00:03:35.269 --> 00:03:39.889
我在firebase上拥有的项目

00:03:36.530 --> 00:03:41.299
以为那很酷所以是的

00:03:39.889 --> 00:03:43.449
我敢打赌，您刚刚实施并

00:03:41.299 --> 00:03:46.819
这就是我想要谈论的

00:03:43.449 --> 00:03:49.129
因此，如果您想从获取

00:03:46.819 --> 00:03:51.769
您必须继续到github的代码

00:03:49.129 --> 00:03:54.709
它在google chrome org中

00:03:51.769 --> 00:03:57.349
回购称为简单的hdu服务器谁会

00:03:54.709 --> 00:03:59.269
有思想，自述有

00:03:57.349 --> 00:04:01.189
希望您需要的所有信息

00:03:59.269 --> 00:04:03.799
如何获得它如何安装它也

00:04:01.189 --> 00:04:05.810
显然，它具有代码，因此

00:04:03.799 --> 00:04:07.790
代码主入口

00:04:05.810 --> 00:04:11.799
从字面上看，主要功能是

00:04:07.790 --> 00:04:14.030
在简单容易的服务器放手，它是

00:04:11.799 --> 00:04:15.859
从某种意义上说很简单

00:04:14.030 --> 00:04:17.720
很多手动调整，因为我在做

00:04:15.859 --> 00:04:19.669
一些我要去的棘手的东西

00:04:17.720 --> 00:04:21.530
稍后解释，但我会进行标志解析

00:04:19.669 --> 00:04:23.029
除了服务器，然后我有一个

00:04:21.530 --> 00:04:25.880
将被调用的功能

00:04:23.029 --> 00:04:27.380
永远这样的请求

00:04:25.880 --> 00:04:29.300
该功能得到

00:04:27.380 --> 00:04:30.980
非常类似于Express实际上得到

00:04:29.300 --> 00:04:32.180
您放置在其中的响应对象

00:04:30.980 --> 00:04:34.220
响应以及您的标题和

00:04:32.180 --> 00:04:37.160
响应和它具有的请求对象

00:04:34.220 --> 00:04:39.190
所有的请求数据，我基本上

00:04:37.160 --> 00:04:42.050
写了一个函数调用过程

00:04:39.190 --> 00:04:44.210
使用两个配置

00:04:42.050 --> 00:04:47.900
这些物体，然后把它们弄碎

00:04:44.210 --> 00:04:50.360
根据配置，如果

00:04:47.900 --> 00:04:53.030
请求匹配重写规则

00:04:50.360 --> 00:04:54.350
只是重写请求，如果请求

00:04:53.030 --> 00:04:56.090
匹配将添加的标头规则

00:04:54.350 --> 00:05:00.110
这三个标头

00:04:56.090 --> 00:05:01.910
响应，然后返回，什么

00:05:00.110 --> 00:05:03.080
你回来是你想出如果你

00:05:01.910 --> 00:05:05.090
必须重定向它，因为那样你

00:05:03.080 --> 00:05:08.020
停止，否则您将按

00:05:05.090 --> 00:05:11.660
资源，如果有任何链接标题或

00:05:08.020 --> 00:05:13.970
您将从文件中获取文件

00:05:11.660 --> 00:05:17.210
您需要的系统，只需推动它们

00:05:13.970 --> 00:05:21.110
给客户，我有一个出价

00:05:17.210 --> 00:05:22.160
使用了来自

00:05:21.110 --> 00:05:23.840
纽约时报，他们去

00:05:22.160 --> 00:05:25.730
 gzip的实现不使用它

00:05:23.840 --> 00:05:29.890
但对于HTTP兼容版本的

00:05:25.730 --> 00:05:32.390
 gzip只要我确定

00:05:29.890 --> 00:05:34.400
该文件的内容是基于文本的

00:05:32.390 --> 00:05:35.960
会贯穿gzip，我认为很多

00:05:34.400 --> 00:05:37.460
缺少本地开发工具

00:05:35.960 --> 00:05:40.160
在此功能上，因为

00:05:37.460 --> 00:05:42.980
您几乎总是想要的生产

00:05:40.160 --> 00:05:45.740
具有gzip启用功能，尤其适用于CSS 

00:05:42.980 --> 00:05:49.640
因为如果你有很多人会赢

00:05:45.740 --> 00:05:51.530
为CSS和本地启用gzip 

00:05:49.640 --> 00:05:53.630
政府，你有点想念这些

00:05:51.530 --> 00:05:56.090
收获，所以你可能会花时间

00:05:53.630 --> 00:05:59.120
优化不需要的东西

00:05:56.090 --> 00:06:00.500
优化如此简单，但如果您说我们

00:05:59.120 --> 00:06:01.820
始终在本地启用gzip 

00:06:00.500 --> 00:06:04.370
我认为非常重要的许可证

00:06:01.820 --> 00:06:06.220
如果是gzip，我就放一个

00:06:04.370 --> 00:06:10.940
错误，基本上就是全部

00:06:06.220 --> 00:06:13.400
请求响应周期，所以我一直

00:06:10.940 --> 00:06:15.350
提到推送，但我说我删除了

00:06:13.400 --> 00:06:19.430
推送清单，所以它现在如何工作，所以

00:06:15.350 --> 00:06:21.230
大多数CD端使用HTTP的链接头

00:06:19.430 --> 00:06:25.340
链接标头，如果它的rel等于

00:06:21.230 --> 00:06:27.740
预载城市终点，例如CloudFlare或

00:06:25.340 --> 00:06:29.810
 Akamai会将此标头转换为

00:06:27.740 --> 00:06:32.420
额外的推动，所以如果你看着

00:06:29.810 --> 00:06:34.310
阅读可能会更进一步，您将拥有一个

00:06:32.420 --> 00:06:37.280
哈里斯在这里的例子

00:06:34.310 --> 00:06:39.860
说关键是链接，所以我指定一个

00:06:37.280 --> 00:06:41.300
链接头，值是文件

00:06:39.860 --> 00:06:43.550
我想推一个角度

00:06:41.300 --> 00:06:46.190
括号，然后我说RL预载

00:06:43.550 --> 00:06:48.289
因为只有rel预加载会被推送

00:06:46.190 --> 00:06:50.060
还有预取

00:06:48.289 --> 00:06:51.470
实际上使浏览器下载并

00:06:50.060 --> 00:06:54.139
解析整个文件，所以预加载是

00:06:51.470 --> 00:06:56.120
几乎没有什么不同，通常是

00:06:54.139 --> 00:06:58.190
指定这是一个好主意

00:06:56.120 --> 00:07:00.919
文件是图片还是脚本

00:06:58.190 --> 00:07:02.900
因为浏览器可能会优先考虑

00:07:00.919 --> 00:07:05.180
大量带宽可分配给该推送

00:07:02.900 --> 00:07:06.860
但是这个工具可以让你

00:07:05.180 --> 00:07:11.080
玩一个实验

00:07:06.860 --> 00:07:13.099
现在，这就是您进行推送的方式， 

00:07:11.080 --> 00:07:15.530
我想谈谈的另一件事

00:07:13.099 --> 00:07:16.669
以为我有点聪明

00:07:15.530 --> 00:07:18.440
之后，但事实证明

00:07:16.669 --> 00:07:21.080
很多人已经做到了，但我仍然

00:07:18.440 --> 00:07:24.229
我完全以为我想到了

00:07:21.080 --> 00:07:27.770
是我应该听的劫机者

00:07:24.229 --> 00:07:31.180
我写了um，如果你研究HTTP 

00:07:27.770 --> 00:07:33.289
检测不走我在这里做什么

00:07:31.180 --> 00:07:35.900
对于Web服务器，通常您打开一个

00:07:33.289 --> 00:07:37.340
在8080端口或某些端口上监听

00:07:35.900 --> 00:07:39.729
监听传入的连接

00:07:37.340 --> 00:07:42.710
然后提供连接

00:07:39.729 --> 00:07:44.330
通常情况下，连接是交给

00:07:42.710 --> 00:07:46.159
 Web服务器和Web服务器从中读取

00:07:44.330 --> 00:07:48.349
连接执行HTTP协议

00:07:46.159 --> 00:07:50.509
解析所有那种恶作剧和

00:07:48.349 --> 00:07:53.180
发回响应紫连接

00:07:50.509 --> 00:07:55.130
这个劫机者基本上是一个

00:07:53.180 --> 00:07:58.310
插入Web服务器和

00:07:55.130 --> 00:08:02.419
听众，因为问题在于

00:07:58.310 --> 00:08:05.659
您绑定一个heb到的HTTP Web服务器

00:08:02.419 --> 00:08:08.180
实际上是端口8080，您键入

00:08:05.659 --> 00:08:09.940
浏览器中的 localhost 冒号8080 

00:08:08.180 --> 00:08:12.979
浏览器将尝试使用连接

00:08:09.940 --> 00:08:15.319
 HTTP纯文本，它只会失败

00:08:12.979 --> 00:08:17.449
因为浏览器发送的是纯文本

00:08:15.319 --> 00:08:18.919
文本请求，但服务器正在尝试

00:08:17.449 --> 00:08:20.509
进行TLS握手，这只会

00:08:18.919 --> 00:08:23.000
惨败，它将关闭

00:08:20.509 --> 00:08:25.099
连接，所以我在这里做什么

00:08:23.000 --> 00:08:26.889
基本上是我正在连接

00:08:25.099 --> 00:08:30.169
在到达服务器之前

00:08:26.889 --> 00:08:33.789
实施并检查是否首先

00:08:30.169 --> 00:08:36.469
连接上的字节是数字22 

00:08:33.789 --> 00:08:38.659
这是我正在做的检查，如果

00:08:36.469 --> 00:08:41.089
我可以确定是22号

00:08:38.659 --> 00:08:42.979
这是一个HTTP连接，因为

00:08:41.089 --> 00:08:45.829
 TLS握手的第一个字节是

00:08:42.979 --> 00:08:47.690
到22点，如果发生这种情况，那么我说我

00:08:45.829 --> 00:08:51.140
好的，请继续访问网络服务器

00:08:47.690 --> 00:08:53.029
不是，但是我基本上只是忽略

00:08:51.140 --> 00:08:55.070
客户端上的服务器是什么

00:08:53.029 --> 00:08:58.100
送我就丢

00:08:55.070 --> 00:09:00.290
将响应重定向到网络

00:08:58.100 --> 00:09:03.530
浏览器，以便浏览器知道哦，我有

00:09:00.290 --> 00:09:05.780
通过HTTP重新连接，现在它将

00:09:03.530 --> 00:09:08.270
加密的连接，所以即使

00:09:05.780 --> 00:09:09.980
您忘记输入HTTPS，它将

00:09:08.270 --> 00:09:11.840
重定向您，您甚至不会注意到

00:09:09.980 --> 00:09:13.820
所以它总是有效，我以为是

00:09:11.840 --> 00:09:16.130
超级有帮助，因为我没有

00:09:13.820 --> 00:09:17.600
之前，这很烦人

00:09:16.130 --> 00:09:21.080
就像一个非常整洁的小把戏

00:09:17.600 --> 00:09:22.730
我发现，我觉得我很酷

00:09:21.080 --> 00:09:28.430
猜想我们可以谈一点

00:09:22.730 --> 00:09:32.270
基本的firebase配置并开始

00:09:28.430 --> 00:09:34.430
您通常会使用任何类型的JSON文件

00:09:32.270 --> 00:09:37.010
通过定义一个结构，这就是我

00:09:34.430 --> 00:09:39.980
在这里做了，所以我只是写下了什么

00:09:37.010 --> 00:09:42.500
杰森看起来像一个结构和去

00:09:39.980 --> 00:09:44.120
杰森·鲍尔斯（Jason Powers）只是将填写

00:09:42.500 --> 00:09:47.900
对我来说很容易

00:09:44.120 --> 00:09:49.670
读jasonfults，然后我就拿

00:09:47.900 --> 00:09:51.800
正如我所说的，具有过程功能

00:09:49.670 --> 00:09:53.870
回应和请求，并经历所有

00:09:51.800 --> 00:09:56.840
这些规则，只要我发现

00:09:53.870 --> 00:10:00.290
与此请求相匹配的内容

00:09:56.840 --> 00:10:04.490
这里唯一的问题是基于火的

00:10:00.290 --> 00:10:07.160
展示它不是一种艺术形式，而是一种方式

00:10:04.490 --> 00:10:09.530
您定义模式以将规则限制为

00:10:07.160 --> 00:10:12.020
仅针对他们使用的某些请求

00:10:09.530 --> 00:10:13.430
所以我希望rec通常会存在

00:10:12.020 --> 00:10:16.100
但他们使用通配符，通配​​符是

00:10:13.430 --> 00:10:18.170
通常在外壳上使用的是

00:10:16.100 --> 00:10:19.970
输入类似星号J的名称，这意味着

00:10:18.170 --> 00:10:22.730
每个以点J结尾的文件都是您

00:10:19.970 --> 00:10:25.670
可能遇到了这些

00:10:22.730 --> 00:10:27.890
是扩展的glob，它增加了一些

00:10:25.670 --> 00:10:31.160
所谓的通配能力

00:10:27.890 --> 00:10:33.740
因此，虽然star只匹配

00:10:31.160 --> 00:10:36.320
当前目录star star表示全部

00:10:33.740 --> 00:10:38.530
该目录中的文件以及所有

00:10:36.320 --> 00:10:43.270
您下面的其他目录

00:10:38.530 --> 00:10:45.830
组合多个文件结尾的语法

00:10:43.270 --> 00:10:49.520
但问题是，这有点

00:10:45.830 --> 00:10:52.640
一个非常特定于节点的语法，并且有

00:10:49.520 --> 00:10:55.240
没有包装，去吧，所以我没有

00:10:52.640 --> 00:10:57.140
选择，但写我自己的，我想

00:10:55.240 --> 00:10:58.430
我不会解释它如何工作的

00:10:57.140 --> 00:11:00.500
我正在做的是我正在采取

00:10:58.430 --> 00:11:03.050
字符串并使用简单字符串

00:11:00.500 --> 00:11:07.300
替换功能将地球变成

00:11:03.050 --> 00:11:09.010
数组X，我将其保留为

00:11:07.300 --> 00:11:11.740
让我们称之为读者练习

00:11:09.010 --> 00:11:15.040
阅读此代码并理解它，并且

00:11:11.740 --> 00:11:18.670
解释为什么在里面有猪表情符号

00:11:15.040 --> 00:11:20.110
如此享受，但基本上

00:11:18.670 --> 00:11:22.390
它允许我做的是编译

00:11:20.110 --> 00:11:24.640
这些扩展的球体并将其变成

00:11:22.390 --> 00:11:26.890
 reg X，然后我可以使用旧的reg X 

00:11:24.640 --> 00:11:29.440
匹配功能以查看是否有请求

00:11:26.890 --> 00:11:32.710
是否应遵守此规则

00:11:29.440 --> 00:11:35.800
所以我觉得有点像整洁

00:11:32.710 --> 00:11:38.460
小细节和我想要的东西

00:11:35.800 --> 00:11:41.290
最后是在回购中

00:11:38.460 --> 00:11:43.510
您会找到有关如何操作的所有说明

00:11:41.290 --> 00:11:45.340
将其安装在系统上，如果有

00:11:43.510 --> 00:11:48.280
安装完毕，您可以输入go get 

00:11:45.340 --> 00:11:49.900
并安装简单的h2服务器（如果您

00:11:48.280 --> 00:11:52.060
没有安装可以找到

00:11:49.900 --> 00:11:53.380
发布部分中的二进制文件

00:11:52.060 --> 00:11:55.990
我将链接到此处，您只需单击

00:11:53.380 --> 00:11:58.900
在那里，您会看到我的每个版本

00:11:55.990 --> 00:12:00.910
上传Mac OS Linux的二进制文件，以及

00:11:58.900 --> 00:12:02.800
 Windows，无论您使用哪种系统

00:12:00.910 --> 00:12:03.940
应该没问题，我也有Linux 

00:12:02.800 --> 00:12:06.280
二进制文件，因此您可以在自己的

00:12:03.940 --> 00:12:07.480
 Raspberry Pi，如果您对我有兴趣

00:12:06.280 --> 00:12:11.320
它在家里运行我尊重Pi这是

00:12:07.480 --> 00:12:13.030
有点酷，我还加了一个冲泡配方

00:12:11.320 --> 00:12:16.170
如果您上车，这真的很容易

00:12:13.030 --> 00:12:20.190
 Mac OS只需进入

00:12:16.170 --> 00:12:22.690
酿造小桶，我认为他们称之为

00:12:20.190 --> 00:12:24.160
安装顾问并保持最新

00:12:22.690 --> 00:12:26.860
因为会随着brew自动更新

00:12:24.160 --> 00:12:28.030
最近我还添加了一个docker文件

00:12:26.860 --> 00:12:29.890
我认为这很整洁，因为

00:12:28.030 --> 00:12:30.970
你不需要什么

00:12:29.890 --> 00:12:33.550
安装在系统上

00:12:30.970 --> 00:12:35.890
除了码头工人，可以上网冲浪

00:12:33.550 --> 00:12:38.440
通过简单的hd2使用

00:12:35.890 --> 00:12:40.510
泊坞窗图片，然后，如果您想

00:12:38.440 --> 00:12:43.300
您甚至可以将Docker映像推送到

00:12:40.510 --> 00:12:45.370
云平台，您知道共享它

00:12:43.300 --> 00:12:47.860
和一个同事，但是我只想

00:12:45.370 --> 00:12:49.240
提一个简单的HTTP服务器不是

00:12:47.860 --> 00:12:52.200
生产就绪的Web服务器意味着

00:12:49.240 --> 00:12:54.430
进行本地开发，所以我什么也没做

00:12:52.200 --> 00:12:56.410
分析性能优化I 

00:12:54.430 --> 00:12:58.390
我什至没有想到安全

00:12:56.410 --> 00:13:00.100
默认情况下完全是课程

00:12:58.390 --> 00:13:01.660
启用，因此它只会打开所有内容

00:13:00.100 --> 00:13:04.300
全世界不要在生产中使用它

00:13:01.660 --> 00:13:07.150
这是为了当地发展，但如果你

00:13:04.300 --> 00:13:09.580
想修复一些东西，然后我觉得

00:13:07.150 --> 00:13:11.080
现在邀请您舒适得多

00:13:09.580 --> 00:13:13.450
进入包装器，因为现在代码是

00:13:11.080 --> 00:13:15.490
其实你知道更平易近人

00:13:13.450 --> 00:13:17.770
如果您想这样做，可以随意

00:13:15.490 --> 00:13:19.990
回购协议，我将链接到所有这些

00:13:17.770 --> 00:13:20.920
在说明中，因此您只需单击

00:13:19.990 --> 00:13:23.560
去那里

00:13:20.920 --> 00:13:25.390
也许给它加星标，如果

00:13:23.560 --> 00:13:26.769
你喜欢这部影片，还有什么困扰

00:13:25.390 --> 00:13:29.290
你你可能应该订阅

00:13:26.769 --> 00:13:33.459
因为那样您会收到有关

00:13:29.290 --> 00:13:37.750
新影片，我想就是这样

00:13:33.459 --> 00:13:39.070
对于这个视频，嗯，我很讨厌说

00:13:37.750 --> 00:13:42.640
但我想下一个视频

00:13:39.070 --> 00:13:44.440
保罗再次坚持下去，如果你想

00:13:42.640 --> 00:13:45.660
下次见

00:13:44.440 --> 00:13:45.990
 [音乐] 

00:13:45.660 --> 00:14:04.880
 [掌声] 

00:13:45.990 --> 00:14:04.880
 [音乐] 

