WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.200 --> 00:00:04.910
大家好，是Sam在这里

00:00:02.540 --> 00:00:05.779
我是圣诞老人追踪器系列的一集

00:00:04.910 --> 00:00:08.000
谈一点

00:00:05.779 --> 00:00:09.500
表现和表现

00:00:08.000 --> 00:00:11.180
我们看到的div和图层

00:00:09.500 --> 00:00:13.070
当我们查看页面时，让我们

00:00:11.180 --> 00:00:15.259
快速浏览一下网站本身

00:00:13.070 --> 00:00:17.449
我们在这里看到的是一堆div和

00:00:15.259 --> 00:00:19.310
层，如果您调出渲染选项卡

00:00:17.449 --> 00:00:20.990
在开发工具的底部，您将

00:00:19.310 --> 00:00:22.820
看到我们有油漆拖把闪烁和图层

00:00:20.990 --> 00:00:24.289
边界打开了，这就是效果

00:00:22.820 --> 00:00:26.390
你看到棕色的轮廓是

00:00:24.289 --> 00:00:28.220
 GPU知道的层以及

00:00:26.390 --> 00:00:31.010
绿色是GPU当前所在的位置

00:00:28.220 --> 00:00:32.780
绘画，所以有很多东西

00:00:31.010 --> 00:00:34.219
继续吧，你知道圣诞老人很复杂

00:00:32.780 --> 00:00:36.319
网站，我们在进行过程中渲染事物

00:00:34.219 --> 00:00:38.929
例如，沿着这个游戏正在

00:00:36.319 --> 00:00:42.289
一些重绘，你可以看到

00:00:38.929 --> 00:00:43.699
我们的某些效果没有画图

00:00:42.289 --> 00:00:45.979
一点都不花钱

00:00:43.699 --> 00:00:47.809
他们在这里驯鹿的可爱场景

00:00:45.979 --> 00:00:48.979
实际上不需要每次都重画

00:00:47.809 --> 00:00:50.690
框架，我们做了一些工作以确保

00:00:48.979 --> 00:00:53.629
它们只在GPU中发生

00:00:50.690 --> 00:00:55.519
这很酷，但是当然

00:00:53.629 --> 00:00:57.799
我们的倒数计时器

00:00:55.519 --> 00:00:59.899
每秒画一个新数字

00:00:57.799 --> 00:01:01.219
很有道理，所以我们正在尝试做

00:00:59.899 --> 00:01:02.929
减少了以前的层数

00:01:01.219 --> 00:01:04.640
绘图，所以如果您在示例中看到

00:01:02.929 --> 00:01:07.070
您会看到第二个计数器是

00:01:04.640 --> 00:01:08.719
实际上突出每一帧，我们

00:01:07.070 --> 00:01:11.149
真的不知道为什么，所以让我们

00:01:08.719 --> 00:01:13.460
看看那个，这个小柜台

00:01:11.149 --> 00:01:14.750
是我们的问题，我们也将这个div放在

00:01:13.460 --> 00:01:16.520
这个小小的绿色效果的顶部

00:01:14.750 --> 00:01:17.990
这实际上是相关的，我会

00:01:16.520 --> 00:01:20.960
解释一下为什么

00:01:17.990 --> 00:01:22.460
因此，请转到我们的源代码，我们可以

00:01:20.960 --> 00:01:24.799
其实看到我有点评论

00:01:22.460 --> 00:01:26.840
事情而不是输入

00:01:24.799 --> 00:01:29.240
我们想要改变的地方

00:01:26.840 --> 00:01:31.909
事情首先是这个元素

00:01:29.240 --> 00:01:33.320
占用约70像素高，这是

00:01:31.909 --> 00:01:34.670
好的权利就是您要使用的方式

00:01:33.320 --> 00:01:36.170
该元素，但请注意，实际上

00:01:34.670 --> 00:01:37.490
在顶部和底部变大

00:01:36.170 --> 00:01:39.049
因为我们有这种效果

00:01:37.490 --> 00:01:44.899
数字随着我们的出现而消失

00:01:39.049 --> 00:01:46.700
随着数字的变化，所以我们

00:01:44.899 --> 00:01:48.469
要做的，这是在SAS中，所以您

00:01:46.700 --> 00:01:50.749
可以看到一些美元符号变量

00:01:48.469 --> 00:01:54.560
在这里，我们将设置溢出

00:01:50.749 --> 00:01:56.149
溢出将是

00:01:54.560 --> 00:01:58.460
该元素的一半，所以我们想使

00:01:56.149 --> 00:02:00.259
这个元素在两者上都增加了一半

00:01:58.460 --> 00:02:01.850
双方，所以我们可以做的是

00:02:00.259 --> 00:02:03.829
负边距使元素

00:02:01.850 --> 00:02:05.960
更大的填充以使

00:02:03.829 --> 00:02:07.789
元素再次变小意味着什么

00:02:05.960 --> 00:02:10.190
我们可以迫使GPU做更大的

00:02:07.789 --> 00:02:12.409
真的很好，因为它将

00:02:10.190 --> 00:02:14.110
然后包含我们向上移动的元素

00:02:12.409 --> 00:02:17.230
随着我们计数

00:02:14.110 --> 00:02:18.670
我们还说过要作为索引并设置

00:02:17.230 --> 00:02:20.290
溢出：隐藏，因为我们现在可以知道

00:02:18.670 --> 00:02:22.000
浏览器嘿这一层，现在

00:02:20.290 --> 00:02:24.190
大一点什么都没有

00:02:22.000 --> 00:02:26.710
在它外面，而以前是我们的核心

00:02:24.190 --> 00:02:28.690
层实际上不能被限制

00:02:26.710 --> 00:02:34.570
是的，它会淹没那些东西

00:02:28.690 --> 00:02:36.700
确实扩大了空间，所以现在如果我们

00:02:34.570 --> 00:02:38.290
点击保存并希望刷新它

00:02:36.700 --> 00:02:40.240
自动发生，我们会看到

00:02:38.290 --> 00:02:41.530
其实我有这个更大的元素

00:02:40.240 --> 00:02:43.000
在这里，但是我们仍然有一些问题

00:02:41.530 --> 00:02:45.610
在这里这仍然闪烁着一些

00:02:43.000 --> 00:02:47.080
我们不太了解什么的原因

00:02:45.610 --> 00:02:49.030
实际上发生在这里是这分钟

00:02:47.080 --> 00:02:51.010
一秒的时间

00:02:49.030 --> 00:02:52.330
位于数字上方，但不低于

00:02:51.010 --> 00:02:53.860
数字，听起来有点

00:02:52.330 --> 00:02:55.780
违反直觉的权利，因为肯定

00:02:53.860 --> 00:02:58.030
这些数字在下面

00:02:55.780 --> 00:03:00.790
在那儿发短信，但因为他们在

00:02:58.030 --> 00:03:02.650
浏览器认为错误的方式

00:03:00.790 --> 00:03:04.510
需要每帧重绘该文本

00:03:02.650 --> 00:03:06.700
这不是真的，所以我们

00:03:04.510 --> 00:03:09.070
要去的就是下去这里说这个

00:03:06.700 --> 00:03:11.170
持有包含我们的数字的R 

00:03:09.070 --> 00:03:12.940
把它放在最上面让我们使它的Z索引更大

00:03:11.170 --> 00:03:14.500
更高，所以这里是一百

00:03:12.940 --> 00:03:15.520
只是一个随机值，因为我们在

00:03:14.500 --> 00:03:19.630
一个堆叠的上下文，它不是真的

00:03:15.520 --> 00:03:20.860
无论我们选择什么，如果我们刷新

00:03:19.630 --> 00:03:24.310
页面并自动发生

00:03:20.860 --> 00:03:27.070
您会看到现在该数字只是

00:03:24.310 --> 00:03:28.050
滴答答响，这很漂亮

00:03:27.070 --> 00:03:29.860
我今天想讲的很多

00:03:28.050 --> 00:03:31.060
希望你学到的是

00:03:29.860 --> 00:03:33.850
关于如何欺骗的一点点

00:03:31.060 --> 00:03:36.070
浏览器制作更大的div 

00:03:33.850 --> 00:03:37.900
 GPU层和基本使用的东西

00:03:36.070 --> 00:03:39.610
像Z索引基本上说服了

00:03:37.900 --> 00:03:41.650
浏览器只绘制您关心的部分

00:03:39.610 --> 00:03:43.630
关于，谢谢收看，我会

00:03:41.650 --> 00:03:44.860
下次见，谢谢收看

00:03:43.630 --> 00:03:46.600
您可以订阅谷歌浏览器

00:03:44.860 --> 00:03:50.130
开发者渠道请点击此处

00:03:46.600 --> 00:03:50.130
还有一些其他很棒的视频

