WEBVTT
Kind: captions
Language: en

00:00:00.190 --> 00:00:02.220
SURMA: Yeah, but there's
really no other way to do that.

00:00:02.220 --> 00:00:02.460
Like--

00:00:02.460 --> 00:00:04.315
JAKE ARCHIBALD: Oh,
ho, ho, ho, ho, ho.

00:00:04.315 --> 00:00:04.690
SURMA: [LAUGHS]

00:00:04.690 --> 00:00:05.940
JAKE ARCHIBALD: That's where--

00:00:05.940 --> 00:00:07.390
SURMA: That was
very intimidating.

00:00:07.390 --> 00:00:09.140
JAKE ARCHIBALD:
[LAUGHS MANIACALLY]

00:00:09.140 --> 00:00:10.180
SURMA: You activated it!

00:00:10.180 --> 00:00:13.645
[MUSIC PLAYING]

00:00:16.557 --> 00:00:17.390
JAKE ARCHIBALD: So--

00:00:17.390 --> 00:00:17.890
SURMA: So.

00:00:17.890 --> 00:00:19.020
JAKE ARCHIBALD: A
little bit different.

00:00:19.020 --> 00:00:19.519
So.

00:00:19.519 --> 00:00:20.360
So.

00:00:20.360 --> 00:00:22.946
So a little bit different.

00:00:22.946 --> 00:00:23.960
I've got the thing.

00:00:23.960 --> 00:00:24.960
SURMA: That's our faces!

00:00:24.960 --> 00:00:26.334
JAKE ARCHIBALD:
That's our faces.

00:00:26.334 --> 00:00:30.669
I've built the HTTP203
Progressive Web app.

00:00:30.669 --> 00:00:31.210
SURMA: Ah-ah!

00:00:31.210 --> 00:00:32.470
JAKE ARCHIBALD: And
this is for our podcast,

00:00:32.470 --> 00:00:35.140
because I don't know, did you
know, we do a podcast as well?

00:00:35.140 --> 00:00:36.820
SURMA: Yeah, it turns out
that most of the videos

00:00:36.820 --> 00:00:38.440
are actually podcasts
just turned into video.

00:00:38.440 --> 00:00:38.610
Yeah.

00:00:38.610 --> 00:00:38.670
JAKE ARCHIBALD: Yeah.

00:00:38.670 --> 00:00:39.300
I don't care about the video.

00:00:39.300 --> 00:00:41.635
I don't actually-- the podcast
is where our hearts are.

00:00:41.635 --> 00:00:42.343
Right, we don't--

00:00:42.343 --> 00:00:43.750
SURMA: [LAUGHS]

00:00:43.750 --> 00:00:44.620
JAKE ARCHIBALD: Give
or take this, really.

00:00:44.620 --> 00:00:46.085
We just do this,
because we have to.

00:00:46.085 --> 00:00:47.040
SURMA: Yeah, [INAUDIBLE].

00:00:47.040 --> 00:00:48.300
JAKE ARCHIBALD: But
this is the podcast.

00:00:48.300 --> 00:00:48.880
SURMA: Oh, you built--
so basically, you

00:00:48.880 --> 00:00:50.160
built a little podcast thing.

00:00:50.160 --> 00:00:50.860
JAKE ARCHIBALD: A
little podcast app.

00:00:50.860 --> 00:00:51.850
Yeah.

00:00:51.850 --> 00:00:56.500
And it works offline,
because it does.

00:00:56.500 --> 00:00:58.110
And you can download
the episodes

00:00:58.110 --> 00:00:59.240
to work offline, right?

00:00:59.240 --> 00:00:59.560
Right, right?

00:00:59.560 --> 00:01:00.518
SURMA: Oh, that's neat.

00:01:00.518 --> 00:01:02.800
JAKE ARCHIBALD: So what
I'm going to do is--

00:01:02.800 --> 00:01:04.239
well, do you know
what, I'm going

00:01:04.239 --> 00:01:05.530
to go onto a slower network.

00:01:05.530 --> 00:01:06.030
SURMA: Ooh.

00:01:06.030 --> 00:01:07.613
JAKE ARCHIBALD:
Because I think that's

00:01:07.613 --> 00:01:08.830
an interesting thing to do.

00:01:08.830 --> 00:01:11.860
So people can have a look at
all the interesting networks

00:01:11.860 --> 00:01:13.174
we have here at Google.

00:01:13.174 --> 00:01:14.590
One of them, we
have a 3G network.

00:01:14.590 --> 00:01:17.500
SURMA: So this is basically
our proper internet connection,

00:01:17.500 --> 00:01:19.637
but the access point
just makes it bad.

00:01:19.637 --> 00:01:20.470
JAKE ARCHIBALD: Yes.

00:01:20.470 --> 00:01:23.350
SURMA: So we have a quick way
of testing how things behave

00:01:23.350 --> 00:01:25.120
on a bad network, because
that's usually quite interesting

00:01:25.120 --> 00:01:25.630
to look at.

00:01:25.630 --> 00:01:26.830
JAKE ARCHIBALD: It is, yes.

00:01:26.830 --> 00:01:27.350
So right.

00:01:27.350 --> 00:01:30.190
I'm going to download one of
these episodes, like that one.

00:01:30.190 --> 00:01:31.360
SURMA: OK.

00:01:31.360 --> 00:01:34.260
JAKE ARCHIBALD: And so
it's downloading now.

00:01:34.260 --> 00:01:35.237
SURMA: Ah.

00:01:35.237 --> 00:01:36.570
JAKE ARCHIBALD: You'll see now--

00:01:36.570 --> 00:01:37.680
SURMA: Oh, there's
a mini progress bar.

00:01:37.680 --> 00:01:38.546
Look how cute!

00:01:38.546 --> 00:01:40.670
JAKE ARCHIBALD: A mini,
tiny progress bar.

00:01:40.670 --> 00:01:44.750
So if I-- let's set this one
off as well as a shorter one.

00:01:44.750 --> 00:01:48.721
Now, this is kind of how
things work on the web today.

00:01:48.721 --> 00:01:49.220
Right?

00:01:49.220 --> 00:01:49.480
SURMA: Yeah.

00:01:49.480 --> 00:01:50.563
JAKE ARCHIBALD: It's slow.

00:01:50.563 --> 00:01:51.850
Whatever.

00:01:51.850 --> 00:01:53.190
But that's fine.

00:01:53.190 --> 00:01:54.190
But here's the problem--

00:01:54.190 --> 00:01:58.810
is if this app gets closed,
which if I put the phone--

00:01:58.810 --> 00:01:59.800
this is a big phone--

00:01:59.800 --> 00:02:00.790
SURMA: [LAUGHS]

00:02:00.790 --> 00:02:03.976
JAKE ARCHIBALD: If I put the
phone in my massive pockets,

00:02:03.976 --> 00:02:05.350
then at some point,
this is going

00:02:05.350 --> 00:02:07.141
to be collected from
memory, because you'll

00:02:07.141 --> 00:02:08.050
be using other apps.

00:02:08.050 --> 00:02:11.900
These devices don't have as
much memory as other things.

00:02:11.900 --> 00:02:14.110
So we can sort of emulate
that by doing this.

00:02:14.110 --> 00:02:15.460
SURMA: Yeah, this is basically
your phone in your pocket.

00:02:15.460 --> 00:02:16.930
At some point, the
memory goes, nope!

00:02:16.930 --> 00:02:18.040
JAKE ARCHIBALD: And it might
not be the whole browser,

00:02:18.040 --> 00:02:19.414
it might just be
that tab's gone.

00:02:19.414 --> 00:02:21.500
And we go back in, and ugh!

00:02:21.500 --> 00:02:22.870
SURMA: Wait, I downloaded this.

00:02:22.870 --> 00:02:24.250
Why is it not downloaded, Jake?

00:02:24.250 --> 00:02:25.160
What did you do?

00:02:25.160 --> 00:02:25.660
Write a better app.

00:02:25.660 --> 00:02:26.660
JAKE ARCHIBALD: Exactly.

00:02:26.660 --> 00:02:29.590
And because it's the tab was in
charge of doing that download.

00:02:29.590 --> 00:02:30.820
And the tab closed.

00:02:30.820 --> 00:02:32.317
And it stopped.

00:02:32.317 --> 00:02:34.650
SURMA: Yeah, but there's
really no other way to do that.

00:02:34.650 --> 00:02:35.150
Like--

00:02:35.150 --> 00:02:36.997
JAKE ARCHIBALD:
Oh, ho, ho, ho, ho!

00:02:36.997 --> 00:02:37.580
That's where--

00:02:37.580 --> 00:02:39.480
SURMA: That was
very intimidating!

00:02:39.480 --> 00:02:40.280
[LAUGHTER]

00:02:40.280 --> 00:02:41.820
JAKE ARCHIBALD:
[LAUGHS MANIACALLY]

00:02:41.820 --> 00:02:43.182
SURMA: You activated it!

00:02:43.182 --> 00:02:45.910
[LAUGHTER]

00:02:45.910 --> 00:02:47.690
JAKE ARCHIBALD:
Things have changed.

00:02:47.690 --> 00:02:50.269
So this is the Progressive
Web App based in Canary.

00:02:50.269 --> 00:02:51.310
SURMA: It looks the same.

00:02:51.310 --> 00:02:52.747
JAKE ARCHIBALD:
It looks the same.

00:02:52.747 --> 00:02:53.830
Subtle little differences.

00:02:53.830 --> 00:02:54.587
Ooh-hoo.

00:02:54.587 --> 00:02:55.795
SURMA: Look at that Parallax!

00:02:55.795 --> 00:02:57.253
JAKE ARCHIBALD:
Parallax scrolling.

00:02:57.253 --> 00:02:58.550
This is an animation worklet.

00:02:58.550 --> 00:02:58.960
SURMA: Ooh!

00:02:58.960 --> 00:03:00.460
JAKE ARCHIBALD: I'm using
all the modern things.

00:03:00.460 --> 00:03:01.480
SURMA: We should
link to that article

00:03:01.480 --> 00:03:02.896
that someone wrote
about animation

00:03:02.896 --> 00:03:04.990
worklet in case people
don't know what it's about.

00:03:04.990 --> 00:03:05.530
JAKE ARCHIBALD: Yes, we should.

00:03:05.530 --> 00:03:06.730
Is that one of your
articles, is it?

00:03:06.730 --> 00:03:07.530
SURMA: It might be.

00:03:07.530 --> 00:03:07.960
Who knows?

00:03:07.960 --> 00:03:08.320
JAKE ARCHIBALD: Excellent.

00:03:08.320 --> 00:03:08.829
Brilliant.

00:03:08.829 --> 00:03:10.370
SURMA: People should
go and find out.

00:03:10.370 --> 00:03:11.650
JAKE ARCHIBALD: It is a
good article, actually.

00:03:11.650 --> 00:03:14.200
And it's what I used to
figure this stuff out.

00:03:14.200 --> 00:03:15.880
So I'm going to do
the same thing again.

00:03:15.880 --> 00:03:18.530
Let's download-- let's
download these two.

00:03:18.530 --> 00:03:19.360
Brilliant.

00:03:19.360 --> 00:03:22.650
Now, some things are different.

00:03:22.650 --> 00:03:24.240
SURMA: Oh, look,
it's integrated,

00:03:24.240 --> 00:03:25.240
like notification stuff.

00:03:25.240 --> 00:03:27.114
JAKE ARCHIBALD: Integrated
into notification.

00:03:27.114 --> 00:03:28.440
And we've got progress here.

00:03:28.440 --> 00:03:30.634
We've got the icon there.

00:03:30.634 --> 00:03:31.425
SURMA: That's neat.

00:03:31.425 --> 00:03:33.950
JAKE ARCHIBALD: I'm going
to do something magic.

00:03:33.950 --> 00:03:35.370
Oh, that's the Chrome Beta one.

00:03:35.370 --> 00:03:36.180
That's the old way.

00:03:36.180 --> 00:03:37.660
And this is the
Chrome Canary one.

00:03:37.660 --> 00:03:38.910
So they've gone out of memory.

00:03:38.910 --> 00:03:39.450
SURMA: Just close them all.

00:03:39.450 --> 00:03:40.110
JAKE ARCHIBALD: Close them.

00:03:40.110 --> 00:03:41.310
SURMA: Ah, look,
it's still up there.

00:03:41.310 --> 00:03:41.940
JAKE ARCHIBALD:
It's still up there.

00:03:41.940 --> 00:03:42.731
And we can go back.

00:03:42.731 --> 00:03:43.890
SURMA: Oh, that's neat!

00:03:43.890 --> 00:03:44.460
OK, so it--

00:03:44.460 --> 00:03:45.120
JAKE ARCHIBALD: And
it's still there.

00:03:45.120 --> 00:03:46.530
SURMA: So what is this,
what you're using?

00:03:46.530 --> 00:03:48.360
JAKE ARCHIBALD: This
is Background Fetch.

00:03:48.360 --> 00:03:49.130
SURMA: That's a good name.

00:03:49.130 --> 00:03:50.520
It's a fetch in the
background, isn't it?

00:03:50.520 --> 00:03:51.644
JAKE ARCHIBALD: Yes, it is.

00:03:51.644 --> 00:03:54.720
And so as you say,
yeah, it'll not just

00:03:54.720 --> 00:03:58.670
battle through things like--

00:03:58.670 --> 00:03:59.834
[? near ?] the app closing.

00:03:59.834 --> 00:04:01.750
It will go through
connection changes as well.

00:04:01.750 --> 00:04:03.458
So I'm actually going
to switch networks.

00:04:03.458 --> 00:04:05.550
So that was-- it's going
to cut the download.

00:04:05.550 --> 00:04:07.020
That's going to stop.

00:04:07.020 --> 00:04:08.715
And then it's going to--

00:04:08.715 --> 00:04:10.840
you know, once it connects
onto this other network,

00:04:10.840 --> 00:04:12.130
it's essentially
going to resume,

00:04:12.130 --> 00:04:13.740
but it'll be able to resume
from the same point it

00:04:13.740 --> 00:04:14.400
was at before.

00:04:14.400 --> 00:04:15.330
It's not lost.

00:04:15.330 --> 00:04:16.954
SURMA: Provided the
server supports it.

00:04:16.954 --> 00:04:19.470
JAKE ARCHIBALD: Provided the
server supports range requests.

00:04:19.470 --> 00:04:21.240
Good catch.

00:04:21.240 --> 00:04:25.500
Now, it's going to start
downloading a whole lot faster.

00:04:25.500 --> 00:04:26.100
There it goes.

00:04:26.100 --> 00:04:27.440
So we've just got one through.

00:04:27.440 --> 00:04:30.030
And the next one's through,
because it's this fast network.

00:04:30.030 --> 00:04:30.900
And those are now downloaded.

00:04:30.900 --> 00:04:31.044
SURMA: It actually works.

00:04:31.044 --> 00:04:31.620
That's amazing.

00:04:31.620 --> 00:04:32.620
Who would have thought?

00:04:32.620 --> 00:04:34.703
JAKE ARCHIBALD: And they're
now available offline.

00:04:34.703 --> 00:04:37.080
SURMA: So is it still a fetch?

00:04:37.080 --> 00:04:39.080
Like, is it still just a
response object from me

00:04:39.080 --> 00:04:39.875
on the code side?

00:04:39.875 --> 00:04:42.590
JAKE ARCHIBALD: Well--

00:04:42.590 --> 00:04:43.749
SURMA: OK, I'm sorry.

00:04:43.749 --> 00:04:46.040
JAKE ARCHIBALD: I thought we
could have a look at this.

00:04:46.040 --> 00:04:47.600
So this is how you
would kickstart

00:04:47.600 --> 00:04:49.150
one of those things happening.

00:04:49.150 --> 00:04:49.940
SURMA: OK.

00:04:49.940 --> 00:04:50.830
JAKE ARCHIBALD:
And like I said, I

00:04:50.830 --> 00:04:52.315
designed this API, so be nice.

00:04:52.315 --> 00:04:55.442
No, no, be brutal, be
brutal, and ask questions.

00:04:55.442 --> 00:04:56.150
SURMA: All right.

00:04:56.150 --> 00:04:58.730
So this is actually
main thread code,

00:04:58.730 --> 00:05:00.230
this is not service
worker code yet?

00:05:00.230 --> 00:05:00.440
JAKE ARCHIBALD: Yes.

00:05:00.440 --> 00:05:02.840
SURMA: So you're just waiting
for the service worker

00:05:02.840 --> 00:05:04.640
to be ready, because I guess
the service worker has something

00:05:04.640 --> 00:05:05.180
to do with it.

00:05:05.180 --> 00:05:05.960
JAKE ARCHIBALD: Yes, it does.

00:05:05.960 --> 00:05:08.230
SURMA: But you're kicking off
it from the normal Javascript

00:05:08.230 --> 00:05:08.410
[INAUDIBLE].

00:05:08.410 --> 00:05:10.040
JAKE ARCHIBALD: So it's
hooked off a service worker

00:05:10.040 --> 00:05:10.610
registration.

00:05:10.610 --> 00:05:12.485
Now, you could still do
this within a service

00:05:12.485 --> 00:05:13.450
worker or a worker.

00:05:13.450 --> 00:05:14.000
SURMA: Yeah.

00:05:14.000 --> 00:05:15.958
JAKE ARCHIBALD: This is
an example from a page,

00:05:15.958 --> 00:05:18.440
but yeah, it can
be done elsewhere.

00:05:18.440 --> 00:05:22.000
So you get
swReg.backgroundFetch.fetch.

00:05:22.000 --> 00:05:25.160
SURMA: Oh, it's just
a new fetch call,

00:05:25.160 --> 00:05:27.350
which seems to have the
same parameters, just

00:05:27.350 --> 00:05:28.565
with a name at the start?

00:05:28.565 --> 00:05:30.690
JAKE ARCHIBALD: It's slightly
different parameters.

00:05:30.690 --> 00:05:31.330
So the--

00:05:31.330 --> 00:05:31.600
SURMA: Oh.

00:05:31.600 --> 00:05:34.100
JAKE ARCHIBALD: So you're right,
it's the name at the start.

00:05:34.100 --> 00:05:36.180
And then it's URLs
or request objects.

00:05:36.180 --> 00:05:37.640
SURMA: And an array
of these, even.

00:05:37.640 --> 00:05:38.180
JAKE ARCHIBALD:
An array of them.

00:05:38.180 --> 00:05:38.680
Yes.

00:05:38.680 --> 00:05:41.620
And that's important, because
we felt like if it's a podcast,

00:05:41.620 --> 00:05:42.870
it could have artwork with it.

00:05:42.870 --> 00:05:43.400
SURMA: Yeah.

00:05:43.400 --> 00:05:44.690
JAKE ARCHIBALD:
Movies can be spread

00:05:44.690 --> 00:05:45.705
across thousands of files.

00:05:45.705 --> 00:05:46.500
So that's
[? typically how it starts. ?]

00:05:46.500 --> 00:05:47.000
SURMA: True.

00:05:47.000 --> 00:05:49.830
And you want to have, like, one
semantic group of downloads.

00:05:49.830 --> 00:05:50.220
JAKE ARCHIBALD: Yes.

00:05:50.220 --> 00:05:51.320
SURMA: Where you
could cancel one,

00:05:51.320 --> 00:05:52.800
you want to cancel
all the other ones.

00:05:52.800 --> 00:05:54.590
And that's something that
a developer shouldn't

00:05:54.590 --> 00:05:55.640
have to re-implement, I guess.

00:05:55.640 --> 00:05:55.980
JAKE ARCHIBALD: Exactly.

00:05:55.980 --> 00:05:56.700
SURMA: OK, that makes sense.

00:05:56.700 --> 00:05:57.315
JAKE ARCHIBALD: Exactly that.

00:05:57.315 --> 00:05:59.180
And then the option objects,
where you can give it a title.

00:05:59.180 --> 00:06:00.530
That's for the notification.

00:06:00.530 --> 00:06:02.582
Icons for the notification.

00:06:02.582 --> 00:06:04.040
And then the download
total, that's

00:06:04.040 --> 00:06:06.320
for the notification
kind of as well.

00:06:06.320 --> 00:06:07.400
Because if you've got--

00:06:07.400 --> 00:06:07.910
SURMA: It can figure that out?

00:06:07.910 --> 00:06:10.000
JAKE ARCHIBALD: If you've
got 1,000 downloads,

00:06:10.000 --> 00:06:14.510
we don't to block on
starting all 1,000 of those.

00:06:14.510 --> 00:06:17.689
SURMA: OK, so I guess the
notification is mandatory.

00:06:17.689 --> 00:06:19.730
Like, you're not allowed
to do a background fetch

00:06:19.730 --> 00:06:21.350
without the user
knowing about it?

00:06:21.350 --> 00:06:22.340
JAKE ARCHIBALD: Yes.

00:06:22.340 --> 00:06:23.516
So you can do--

00:06:23.516 --> 00:06:24.890
if you're fetching
one thing, you

00:06:24.890 --> 00:06:28.110
don't need permission, because
the idea is it's super visible.

00:06:28.110 --> 00:06:29.640
Like, it's in the
notification tray.

00:06:29.640 --> 00:06:31.801
You can cancel it from there.

00:06:31.801 --> 00:06:32.300
So--

00:06:32.300 --> 00:06:33.350
SURMA: But if it's
multiple thing

00:06:33.350 --> 00:06:35.030
grouped into one notification,
it's a bit diff--

00:06:35.030 --> 00:06:35.655
OK, I see that.

00:06:35.655 --> 00:06:38.420
JAKE ARCHIBALD: So it's the
same pattern as proper downloads

00:06:38.420 --> 00:06:39.170
from a website.

00:06:39.170 --> 00:06:41.610
You can start one of those
without any permission.

00:06:41.610 --> 00:06:42.650
If you try and do
multiple at once,

00:06:42.650 --> 00:06:43.500
it will ask for permission.

00:06:43.500 --> 00:06:44.000
SURMA: OK.

00:06:44.000 --> 00:06:46.820
So will the download total
get automatically corrected

00:06:46.820 --> 00:06:49.010
in case I provide a wrong value?

00:06:49.010 --> 00:06:49.850
JAKE ARCHIBALD: No.

00:06:49.850 --> 00:06:51.794
It will be enforced.

00:06:51.794 --> 00:06:53.960
So this is one of the things
we wanted with the API.

00:06:53.960 --> 00:06:54.501
SURMA: Oh-oh!

00:06:54.501 --> 00:06:58.310
JAKE ARCHIBALD: If you
say, this is 10 megabytes,

00:06:58.310 --> 00:07:01.590
and you go beyond 10 megabytes,
then you get canceled.

00:07:01.590 --> 00:07:03.380
SURMA: OK, what if
I give too much?

00:07:03.380 --> 00:07:05.630
JAKE ARCHIBALD: If you provide
a download total that's

00:07:05.630 --> 00:07:07.130
higher than what
it turns out to be,

00:07:07.130 --> 00:07:09.824
the progress bar will get
to 80%, and then it's done,

00:07:09.824 --> 00:07:10.490
and you're fine.

00:07:10.490 --> 00:07:11.929
So it's not an error.

00:07:11.929 --> 00:07:12.720
SURMA: Interesting.

00:07:12.720 --> 00:07:15.010
JAKE ARCHIBALD: So if you're
unsure about the download

00:07:15.010 --> 00:07:15.450
total going--

00:07:15.450 --> 00:07:16.130
SURMA: Be conservative and--

00:07:16.130 --> 00:07:17.310
JAKE ARCHIBALD: Yes.

00:07:17.310 --> 00:07:19.671
But the idea behind this is
we want to show the user--

00:07:19.671 --> 00:07:21.920
because if they look at that
notification and it says,

00:07:21.920 --> 00:07:22.880
this website is downloading--

00:07:22.880 --> 00:07:23.450
SURMA: You might
be using their--

00:07:23.450 --> 00:07:25.100
JAKE ARCHIBALD: --10 megabytes,
you think, I'm fine with that,

00:07:25.100 --> 00:07:27.575
you don't want them to end up
actually using 500 megabytes.

00:07:27.575 --> 00:07:29.330
SURMA: Yeah, because they might
be on their mobile plan, not

00:07:29.330 --> 00:07:29.850
Wi-Fi, right?

00:07:29.850 --> 00:07:30.350
JAKE ARCHIBALD: Yep.

00:07:30.350 --> 00:07:31.437
All of these are optional.

00:07:31.437 --> 00:07:33.020
If you don't provide
a download total,

00:07:33.020 --> 00:07:34.590
you get an indeterminate thing.

00:07:34.590 --> 00:07:35.150
[INAUDIBLE]

00:07:35.150 --> 00:07:35.780
SURMA: Oh, but that's OK?

00:07:35.780 --> 00:07:37.363
JAKE ARCHIBALD: It
is OK, but the idea

00:07:37.363 --> 00:07:40.479
is, if the site's not going
to tell you how much it's

00:07:40.479 --> 00:07:42.770
going to download, the user's
more likely to cancel it,

00:07:42.770 --> 00:07:44.945
because they're like, well, I
don't know what this is doing.

00:07:44.945 --> 00:07:46.153
I'm not getting any promises.

00:07:46.153 --> 00:07:47.700
SURMA: So what's the name for?

00:07:47.700 --> 00:07:49.503
JAKE ARCHIBALD: For
getting it later on.

00:07:49.503 --> 00:07:50.290
SURMA: Ah!

00:07:50.290 --> 00:07:50.790
OK.

00:07:50.790 --> 00:07:52.640
JAKE ARCHIBALD: So you get back
a backgroundFetch registration

00:07:52.640 --> 00:07:53.240
object.

00:07:53.240 --> 00:07:55.281
I don't actually have
the-- they didn't do a code

00:07:55.281 --> 00:07:58.930
slide for this, but you can do
swReg at backgroundFetch.get.

00:07:58.930 --> 00:08:01.910
You pass in an ID, you
get the registration back.

00:08:01.910 --> 00:08:03.710
And once you have
the registration,

00:08:03.710 --> 00:08:06.860
you can start doing
things like this.

00:08:06.860 --> 00:08:09.280
SURMA: So wait, what is bgFetch?

00:08:09.280 --> 00:08:11.732
JAKE ARCHIBALD: So
that is bgFetch here.

00:08:11.732 --> 00:08:12.440
SURMA: Oh, sorry.

00:08:12.440 --> 00:08:14.200
JAKE ARCHIBALD: This is
the registration object.

00:08:14.200 --> 00:08:15.050
So it's the same deal.

00:08:15.050 --> 00:08:15.730
SURMA: That is the registration?

00:08:15.730 --> 00:08:18.070
So a new fetch returns
your registration object?

00:08:18.070 --> 00:08:18.280
JAKE ARCHIBALD: Yes.

00:08:18.280 --> 00:08:20.440
SURMA: Not like-- a normal
fetch would return a response.

00:08:20.440 --> 00:08:22.106
This one gets you a
registration object,

00:08:22.106 --> 00:08:24.910
because progress is
probably much more

00:08:24.910 --> 00:08:26.725
important in a long-running
fetch scenario.

00:08:26.725 --> 00:08:27.850
JAKE ARCHIBALD: Yes, it is.

00:08:27.850 --> 00:08:30.380
And this is like a
grouped progress as well.

00:08:30.380 --> 00:08:31.460
It's for the whole thing.

00:08:31.460 --> 00:08:33.070
So you get these--

00:08:33.070 --> 00:08:34.850
it's very similar
to how XHR works.

00:08:34.850 --> 00:08:38.320
But this will also give you
things like .ID which is the ID

00:08:38.320 --> 00:08:39.630
you've already provided.

00:08:39.630 --> 00:08:40.539
SURMA: Yeah.

00:08:40.539 --> 00:08:42.549
JAKE ARCHIBALD:
Things like .Abort,

00:08:42.549 --> 00:08:44.039
that you can cancel
it from code.

00:08:44.039 --> 00:08:44.830
SURMA: Oh, that's good.

00:08:44.830 --> 00:08:47.400
Yeah, because you might want to
build your own UI for canceling

00:08:47.400 --> 00:08:47.830
it, right?

00:08:47.830 --> 00:08:48.130
JAKE ARCHIBALD: Exactly.

00:08:48.130 --> 00:08:49.546
SURMA: But you
have in your thing.

00:08:49.546 --> 00:08:50.940
JAKE ARCHIBALD: Exactly.

00:08:50.940 --> 00:08:53.350
SURMA: Can it also do upload?

00:08:53.350 --> 00:08:55.141
JAKE ARCHIBALD: That's
a good question.

00:08:55.141 --> 00:08:56.140
Not in Chrome right now.

00:08:56.140 --> 00:08:58.630
SURMA: Because one of
the biggest issues in--

00:08:58.630 --> 00:09:00.970
or long-running issues--
that fetchUpload still

00:09:00.970 --> 00:09:02.511
doesn't have progress,
and you always

00:09:02.511 --> 00:09:05.200
have to go back via either XHR
or do a weird second channel

00:09:05.200 --> 00:09:08.240
to the server that reports back
how much has been uploaded.

00:09:08.240 --> 00:09:10.090
So I feel like this
would be a good fit.

00:09:10.090 --> 00:09:12.048
JAKE ARCHIBALD: Chrome's
current implementation

00:09:12.048 --> 00:09:15.400
doesn't support request with
a body, but the spec does.

00:09:15.400 --> 00:09:18.030
Because one of our use cases is
uploading a gallery of photos.

00:09:18.030 --> 00:09:18.140
SURMA: Yeah.

00:09:18.140 --> 00:09:19.860
Or just like a bigger
profile picture.

00:09:19.860 --> 00:09:20.000
JAKE ARCHIBALD: And
so you want to hit

00:09:20.000 --> 00:09:22.540
Send, put the phone in
your pocket, don't care.

00:09:22.540 --> 00:09:24.460
And you could set all
that up when you're

00:09:24.460 --> 00:09:26.540
in airplane mode or offline.

00:09:26.540 --> 00:09:28.070
And it will just
figure stuff out.

00:09:28.070 --> 00:09:30.320
SURMA: That's going to be
interesting, because I think

00:09:30.320 --> 00:09:32.220
resumable uploads are tricky.

00:09:32.220 --> 00:09:34.470
JAKE ARCHIBALD: Resumable
uploads are not in the spec,

00:09:34.470 --> 00:09:36.969
and it's one of the things that
me and a couple of engineers

00:09:36.969 --> 00:09:38.260
might look at next year.

00:09:38.260 --> 00:09:38.760
SURMA: Ah!

00:09:38.760 --> 00:09:39.190
JAKE ARCHIBALD:
And that would be--

00:09:39.190 --> 00:09:41.440
SURMA: 2019, the year
of resumable uploads.

00:09:41.440 --> 00:09:42.670
JAKE ARCHIBALD: Yeah, maybe.

00:09:42.670 --> 00:09:46.030
So as well as
progress, you get--

00:09:46.030 --> 00:09:47.810
this is on the same
registration objects.

00:09:47.810 --> 00:09:49.439
You can match things.

00:09:49.439 --> 00:09:50.480
This is very similar to--

00:09:50.480 --> 00:09:52.188
SURMA: Meaning I can
look into the record

00:09:52.188 --> 00:09:54.310
of an individual file of
a grouped download thing?

00:09:54.310 --> 00:09:55.143
JAKE ARCHIBALD: Yes.

00:09:55.143 --> 00:09:57.620
So this is me
getting the podcast.

00:09:57.620 --> 00:10:01.862
It will resolve as
undefined if it's not there.

00:10:01.862 --> 00:10:03.320
Then you get a
responseReady, which

00:10:03.320 --> 00:10:05.360
is another promise
for the response.

00:10:05.360 --> 00:10:07.924
Because you might not
have the response yet.

00:10:07.924 --> 00:10:08.590
SURMA: No, true.

00:10:08.590 --> 00:10:10.440
JAKE ARCHIBALD: And the response
might even fail to arrive.

00:10:10.440 --> 00:10:11.856
SURMA: If you queue
up 1,000 files

00:10:11.856 --> 00:10:13.325
and you match on the last one--

00:10:13.325 --> 00:10:14.390
JAKE ARCHIBALD: Exactly.

00:10:14.390 --> 00:10:15.110
Exactly.

00:10:15.110 --> 00:10:18.063
But this will give you an
in-progress response as well.

00:10:18.063 --> 00:10:19.050
SURMA: Ah, neat.

00:10:19.050 --> 00:10:21.830
JAKE ARCHIBALD: So the idea is
as you're downloading the MP3,

00:10:21.830 --> 00:10:24.089
you could start playing it.

00:10:24.089 --> 00:10:25.880
But that bit's not
supported in Chrome yet.

00:10:25.880 --> 00:10:27.838
SURMA: Can I add access
to the streams as well?

00:10:27.838 --> 00:10:29.690
JAKE ARCHIBALD: Well,
the response will--

00:10:29.690 --> 00:10:30.980
SURMA: Oh, it would
be a Response object.

00:10:30.980 --> 00:10:31.910
JAKE ARCHIBALD:
So responseReady.

00:10:31.910 --> 00:10:33.350
SURMA: So the
responseReady says,

00:10:33.350 --> 00:10:35.390
the same as in Fetch,
the headers have arrived,

00:10:35.390 --> 00:10:37.170
but the body might
still be in progress.

00:10:37.170 --> 00:10:38.180
And it can start and--

00:10:38.180 --> 00:10:38.450
JAKE ARCHIBALD: Exactly.

00:10:38.450 --> 00:10:38.810
SURMA: OK, that's cool.

00:10:38.810 --> 00:10:39.810
JAKE ARCHIBALD: Exactly.

00:10:39.810 --> 00:10:40.920
Exactly that.

00:10:40.920 --> 00:10:43.890
So this is all stuff
you can do on the page.

00:10:43.890 --> 00:10:47.420
But this is what happens
in a service worker.

00:10:47.420 --> 00:10:50.039
You get top-level events,
backgroundfetchsuccess.

00:10:50.039 --> 00:10:52.080
SURMA: So I get to blame
you for this event name.

00:10:52.080 --> 00:10:53.560
JAKE ARCHIBALD: Yes, you do.

00:10:53.560 --> 00:10:55.830
I originally called it
backgroundFetched just

00:10:55.830 --> 00:10:58.400
to try and be short, but
people said that's weird.

00:10:58.400 --> 00:11:00.480
And I can see where
they're coming from,

00:11:00.480 --> 00:11:01.730
especially because we've got--

00:11:01.730 --> 00:11:03.610
SURMA: Why not bgFetch
as the success?

00:11:03.610 --> 00:11:05.276
JAKE ARCHIBALD: We've
shipped now, mate.

00:11:05.276 --> 00:11:06.077
SURMA: [LAUGHS]

00:11:06.077 --> 00:11:07.410
JAKE ARCHIBALD: Not changing it.

00:11:07.410 --> 00:11:09.375
SURMA: I've been told that as
long as only one browser has

00:11:09.375 --> 00:11:10.430
it, you can still change stuff.

00:11:10.430 --> 00:11:10.550
JAKE ARCHIBALD: Yeah.

00:11:10.550 --> 00:11:11.710
And it's not in stable yet.

00:11:11.710 --> 00:11:12.210
So--

00:11:12.210 --> 00:11:13.755
SURMA: This doesn't minify.

00:11:13.755 --> 00:11:15.170
It's a string.

00:11:15.170 --> 00:11:17.640
JAKE ARCHIBALD: Well, it will
gzip with the other-- only--

00:11:17.640 --> 00:11:18.900
actually, there will
only be one of them.

00:11:18.900 --> 00:11:20.540
Actually, you'll have
backgroundfetchfailed

00:11:20.540 --> 00:11:21.914
and backgroundfetchabort
as well.

00:11:21.914 --> 00:11:24.670
They're the three events you
get in your service worker.

00:11:24.670 --> 00:11:26.420
SURMA: I'll open an
issue on the spec.

00:11:26.420 --> 00:11:27.180
JAKE ARCHIBALD:
Thank you for that.

00:11:27.180 --> 00:11:27.680
Thank you.

00:11:27.680 --> 00:11:28.554
SURMA: [LAUGHS]

00:11:28.554 --> 00:11:29.720
JAKE ARCHIBALD: So this is--

00:11:29.720 --> 00:11:30.960
you get the registration object.

00:11:30.960 --> 00:11:31.110
SURMA: Yup.

00:11:31.110 --> 00:11:32.310
JAKE ARCHIBALD: And that's the
same that we started before.

00:11:32.310 --> 00:11:32.850
SURMA: Oh, now,
that's the same--

00:11:32.850 --> 00:11:33.762
OK, cool.

00:11:33.762 --> 00:11:35.220
JAKE ARCHIBALD:
And this is where--

00:11:35.220 --> 00:11:38.210
backgroundfetchsuccess-- after
this event, those requests

00:11:38.210 --> 00:11:40.780
and responses are gone.

00:11:40.780 --> 00:11:41.280
SURMA: Ah.

00:11:41.280 --> 00:11:44.270
So it's your responsibility
to put them in the cache.

00:11:44.270 --> 00:11:45.270
JAKE ARCHIBALD: Exactly.

00:11:45.270 --> 00:11:47.130
So this is what I'm
essentially doing here.

00:11:47.130 --> 00:11:48.588
And this is one of
the things we're

00:11:48.588 --> 00:11:51.105
thinking about making a helper
method for-- for, like, put

00:11:51.105 --> 00:11:52.260
these in that cache.

00:11:52.260 --> 00:11:52.760
SURMA: Yeah.

00:11:52.760 --> 00:11:56.297
I mean, we already
have cache.AddAll.

00:11:56.297 --> 00:11:58.380
JAKE ARCHIBALD: Yes, but
that takes just requests.

00:11:58.380 --> 00:11:59.790
SURMA: I know but I feel
it's a similar helper

00:11:59.790 --> 00:12:00.930
method on a cache--

00:12:00.930 --> 00:12:01.610
JAKE ARCHIBALD: A PutAll.

00:12:01.610 --> 00:12:02.370
SURMA: Yeah, something.

00:12:02.370 --> 00:12:04.078
JAKE ARCHIBALD: Or
some kind of transfer.

00:12:04.078 --> 00:12:05.580
Yes, that is what
we're thinking.

00:12:05.580 --> 00:12:06.420
SURMA: That seems reasonable.

00:12:06.420 --> 00:12:07.020
JAKE ARCHIBALD:
Because we also think

00:12:07.020 --> 00:12:08.160
it might be difficult
for browsers

00:12:08.160 --> 00:12:09.420
to do this without copying.

00:12:09.420 --> 00:12:10.164
And so I transfer the rest.

00:12:10.164 --> 00:12:10.260
Yeah.

00:12:10.260 --> 00:12:11.718
SURMA: So if we
think along videos,

00:12:11.718 --> 00:12:14.057
where they can be split
into multiple files

00:12:14.057 --> 00:12:15.390
and they're probably quite big--

00:12:15.390 --> 00:12:16.170
JAKE ARCHIBALD: Yes.

00:12:16.170 --> 00:12:18.128
SURMA: --what's the story
there with Cache API?

00:12:18.128 --> 00:12:20.937
Because I feel like I would get
wary about quotas and things.

00:12:20.937 --> 00:12:22.770
JAKE ARCHIBALD: Well,
if you've got it here,

00:12:22.770 --> 00:12:24.250
you're taking a quota anyway.

00:12:24.250 --> 00:12:24.750
SURMA: OK.

00:12:24.750 --> 00:12:26.875
JAKE ARCHIBALD: So as long
as we can implement this

00:12:26.875 --> 00:12:29.640
without copying, you're
not doubling the quota.

00:12:29.640 --> 00:12:31.976
That's why we're thinking
about introducing a transfer

00:12:31.976 --> 00:12:33.600
method-- to make it
easier for browsers

00:12:33.600 --> 00:12:36.465
to do that shift rather
than it be a copy operation.

00:12:36.465 --> 00:12:38.340
SURMA: I mean, this is
something you probably

00:12:38.340 --> 00:12:40.920
don't want to just easily
lose, because the browser

00:12:40.920 --> 00:12:41.820
needs to claim space.

00:12:41.820 --> 00:12:43.236
It'll probably be
a good case also

00:12:43.236 --> 00:12:45.745
to look at Persistent Storage
API, whatever it's called?

00:12:45.745 --> 00:12:48.120
JAKE ARCHIBALD: That is what
I'm using in the HTTP203 app

00:12:48.120 --> 00:12:48.640
as well.

00:12:48.640 --> 00:12:48.960
SURMA: Oh, cool.

00:12:48.960 --> 00:12:51.418
JAKE ARCHIBALD: So if you've
been added to the home screen,

00:12:51.418 --> 00:12:54.180
or bookmarked, or there's
been a strong signal of usage,

00:12:54.180 --> 00:12:56.460
you can ask for persistent
storage, and you'll get it.

00:12:56.460 --> 00:12:58.084
The thing-- it's
worth just asking for.

00:12:58.084 --> 00:12:59.770
And if you don't
get it, it's fine.

00:12:59.770 --> 00:13:01.807
SURMA: [LAUGHS]

00:13:01.807 --> 00:13:03.390
JAKE ARCHIBALD: So
another part of it.

00:13:03.390 --> 00:13:04.380
And this is the last bit.

00:13:04.380 --> 00:13:05.230
SURMA: backgroundfetchclick?

00:13:05.230 --> 00:13:06.620
JAKE ARCHIBALD:
backgroundfetchclick.

00:13:06.620 --> 00:13:07.200
This is--

00:13:07.200 --> 00:13:07.890
SURMA: Ooh, let me guess.

00:13:07.890 --> 00:13:08.760
When you tap on a notification?

00:13:08.760 --> 00:13:09.690
JAKE ARCHIBALD: When you
tap on a notification?

00:13:09.690 --> 00:13:10.530
SURMA: Yes!

00:13:10.530 --> 00:13:12.180
JAKE ARCHIBALD: And so again,
you get the registration,

00:13:12.180 --> 00:13:13.860
and you can decide
what to do based

00:13:13.860 --> 00:13:17.160
on maybe how the
background fetch is doing.

00:13:17.160 --> 00:13:19.080
SURMA: I've never
used the clients, dot

00:13:19.080 --> 00:13:20.689
thing to open something.

00:13:20.689 --> 00:13:21.730
I need to look into this.

00:13:21.730 --> 00:13:22.730
But this is really cool.

00:13:22.730 --> 00:13:24.810
So you get to decide how
you react to a click.

00:13:24.810 --> 00:13:26.490
And apparently,
you're deciding what

00:13:26.490 --> 00:13:28.650
to do depending on whether
the download is done

00:13:28.650 --> 00:13:29.715
or not, which is cool.

00:13:29.715 --> 00:13:29.970
JAKE ARCHIBALD: Yes.

00:13:29.970 --> 00:13:30.420
Exactly.

00:13:30.420 --> 00:13:32.919
Because if it's successful, we
can go to the latest podcast.

00:13:32.919 --> 00:13:34.700
If it's not successful or--

00:13:34.700 --> 00:13:37.355
so this would be if it's in
progress or it has failed.

00:13:37.355 --> 00:13:38.730
Just go into the
Download screen,

00:13:38.730 --> 00:13:40.890
and presumably, you would have
an error there or something,

00:13:40.890 --> 00:13:41.390
maybe.

00:13:41.390 --> 00:13:41.985
I don't know.

00:13:41.985 --> 00:13:42.990
SURMA: All right, cool.

00:13:42.990 --> 00:13:44.500
JAKE ARCHIBALD: I was just
kind of making this up.

00:13:44.500 --> 00:13:45.120
But yeah.

00:13:45.120 --> 00:13:48.060
And so as a result, this
is what you get for that--

00:13:48.060 --> 00:13:49.680
this kind of download
system, where

00:13:49.680 --> 00:13:52.170
you can just sort of
click a load of stuff,

00:13:52.170 --> 00:13:53.770
and it will just happen.

00:13:53.770 --> 00:13:56.220
And if the tab closes,
if you're offline when

00:13:56.220 --> 00:13:58.784
you press these things,
it will still work.

00:13:58.784 --> 00:14:00.450
SURMA: You said in
Canary behind a flag?

00:14:00.450 --> 00:14:01.780
JAKE ARCHIBALD: It's in
Canary behind a flag,

00:14:01.780 --> 00:14:03.980
and we are going to move
to an origin trial for it.

00:14:03.980 --> 00:14:04.465
SURMA: Ooh-ooh.

00:14:04.465 --> 00:14:06.270
JAKE ARCHIBALD: So the
details-- we'll have it soon.

00:14:06.270 --> 00:14:07.770
SURMA: Do we have an article
on this, by any chance?

00:14:07.770 --> 00:14:10.530
JAKE ARCHIBALD: I have it
ready to land at some point.

00:14:10.530 --> 00:14:12.170
It might have landed by the
time this video comes out.

00:14:12.170 --> 00:14:13.590
SURMA: You will find out
by looking in the notes.

00:14:13.590 --> 00:14:16.344
JAKE ARCHIBALD: In which case,
there'll be a link down the--

00:14:16.344 --> 00:14:17.010
what's that bit?

00:14:17.010 --> 00:14:17.250
SURMA: [INAUDIBLE].

00:14:17.250 --> 00:14:18.510
JAKE ARCHIBALD: Below our faces.

00:14:18.510 --> 00:14:18.980
SURMA: The [INAUDIBLE]?

00:14:18.980 --> 00:14:19.110
Yeah.

00:14:19.110 --> 00:14:21.351
Also, [INAUDIBLE] appreciating
this nice Parallax.

00:14:21.351 --> 00:14:21.850
Ooh!

00:14:21.850 --> 00:14:23.040
JAKE ARCHIBALD: And yes,
we'll link to an article

00:14:23.040 --> 00:14:24.123
of how to do that as well.

00:14:24.123 --> 00:14:24.810
SURMA: [LAUGHS]

00:14:24.810 --> 00:14:25.390
JAKE ARCHIBALD: Brilliant.

00:14:25.390 --> 00:14:27.820
We could cut out how long
this is taking to connect.

00:14:27.820 --> 00:14:30.465
SURMA: Oh, look, it's
blazingly fast to connect.

00:14:30.465 --> 00:14:32.324
I mean, it's just an
authentic experience.

00:14:32.324 --> 00:14:33.240
Is it kicking you out?

00:14:33.240 --> 00:14:34.060
JAKE ARCHIBALD: There we go.

00:14:34.060 --> 00:14:35.018
Connected, no internet.

00:14:35.018 --> 00:14:36.540
Come on, figure it out.

00:14:36.540 --> 00:14:37.590
Figure it out.

00:14:37.590 --> 00:14:39.420
Figure it out.

00:14:39.420 --> 00:14:40.190
Come on.

00:14:40.190 --> 00:14:40.790
SURMA: Ey!

00:14:40.790 --> 00:14:42.123
JAKE ARCHIBALD: Ey, that's good.

00:14:42.123 --> 00:14:42.940
Right.

