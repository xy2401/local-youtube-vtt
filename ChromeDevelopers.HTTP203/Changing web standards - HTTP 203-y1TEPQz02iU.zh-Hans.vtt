WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.030 --> 00:00:05.490
你好，这是我，我是杰克

00:00:02.970 --> 00:00:07.230
谈论indexdb和Web标准

00:00:05.490 --> 00:00:07.830
在几分钟内与我的好同事

00:00:07.230 --> 00:00:12.960
苏尔玛

00:00:07.830 --> 00:00:23.699
你好，我好需要粉饼

00:00:12.960 --> 00:00:27.420
我有光泽吗？ 

00:00:23.699 --> 00:00:29.130
所以我要尝试做一些

00:00:27.420 --> 00:00:30.269
有点不同，我可以告诉我们

00:00:29.130 --> 00:00:32.099
这里有笔记本电脑，我们没有

00:00:30.269 --> 00:00:35.210
笔记本电脑在这里通常是因为我在这里

00:00:32.099 --> 00:00:38.850
现在你还记得YouTube系列吗

00:00:35.210 --> 00:00:42.120
增压哦不是很熟悉

00:00:38.850 --> 00:00:46.050
很好，我想我会尝试并

00:00:42.120 --> 00:00:47.670
这样做基本上是说你知道这是

00:00:46.050 --> 00:00:50.460
增压结束时，您不喜欢

00:00:47.670 --> 00:00:53.070
我会带你回来渴望它

00:00:50.460 --> 00:00:53.640
好吧，让我们去做，就是这样

00:00:53.070 --> 00:00:57.600
有点扭曲

00:00:53.640 --> 00:01:00.149
嗯好吧，而不是编码一些东西

00:00:57.600 --> 00:01:04.019
就像你在建造我要去的东西

00:01:00.149 --> 00:01:05.670
编辑网络规范哦，因为它是

00:01:04.019 --> 00:01:08.729
我只有真正学会做的事

00:01:05.670 --> 00:01:10.590
在过去的几年中， 

00:01:08.729 --> 00:01:12.689
很多人我只发现一个功能

00:01:10.590 --> 00:01:14.880
我想补充的是

00:01:12.689 --> 00:01:16.080
小会整个结束

00:01:14.880 --> 00:01:18.240
我们很好，因为我从未做过

00:01:16.080 --> 00:01:20.759
实际规范编辑是我唯一要做的

00:01:18.240 --> 00:01:22.650
完成是我贡献了链接到

00:01:20.759 --> 00:01:24.720
流规范，因此我们可以单击链接

00:01:22.650 --> 00:01:26.880
并使其更具导航性，我可以

00:01:24.720 --> 00:01:29.310
我现在可以阅读赔率袋， 

00:01:26.880 --> 00:01:30.689
然后，我从未真正喜欢过

00:01:29.310 --> 00:01:33.030
通过规范部分或

00:01:30.689 --> 00:01:35.040
任何东西，没关系，我，嗯，我

00:01:33.030 --> 00:01:36.240
对所有的问题都会好起来的

00:01:35.040 --> 00:01:38.460
魔术，就是好，就是好

00:01:36.240 --> 00:01:40.710
是的，所以我要开始尝试

00:01:38.460 --> 00:01:42.570
描述问题所在

00:01:40.710 --> 00:01:45.420
 indexeddb现在有很多

00:01:42.570 --> 00:01:48.240
问题也许是坏星耶

00:01:45.420 --> 00:01:51.630
我们要谈论下一个

00:01:48.240 --> 00:01:56.009
我会好一点的

00:01:51.630 --> 00:01:59.070
更好的非常小的方法是当您这样做

00:01:56.009 --> 00:02:01.770
这样的indexeddb试图

00:01:59.070 --> 00:02:03.659
记住API可能不是你的好

00:02:01.770 --> 00:02:06.149
答应说唱是的，这是原始的

00:02:03.659 --> 00:02:10.560
 indexeddb你得到一个

00:02:06.149 --> 00:02:12.989
请求对象看到并成功

00:02:10.560 --> 00:02:18.120
真正的爱或完整的分析是

00:02:12.989 --> 00:02:19.349
 eiseley救了我，是的，我们得到了

00:02:18.120 --> 00:02:24.239
我们自己的成功，这将给我们

00:02:19.349 --> 00:02:26.220
结果数据库是的，我是

00:02:24.239 --> 00:02:27.870
记住API，因为为什么

00:02:26.220 --> 00:02:31.800
成为失败演出的参数

00:02:27.870 --> 00:02:34.590
当然不，不，不，indexdb是一个

00:02:31.800 --> 00:02:37.709
可怕的想法，这是我们的分形

00:02:34.590 --> 00:02:39.530
设计真的是的，所以您的工作方式

00:02:37.709 --> 00:02:43.560
用indexdb创建事务

00:02:39.530 --> 00:02:45.209
所以我要交易你说

00:02:43.560 --> 00:02:46.709
你给它起我的名字

00:02:45.209 --> 00:02:49.049
人们知道它是什么indexdb 

00:02:46.709 --> 00:02:50.640
就像是一个数据库

00:02:49.049 --> 00:02:52.380
客户端，您可以有多个

00:02:50.640 --> 00:02:54.180
存储，您可以将东西放进

00:02:52.380 --> 00:02:56.880
存储，您有交易

00:02:54.180 --> 00:02:59.670
我们在这里展示了一个漂亮的

00:02:56.880 --> 00:03:01.410
感觉到非常强大的API是

00:02:59.670 --> 00:03:05.400
一旦你把头缠起来

00:03:01.410 --> 00:03:08.010
那种奇怪的API已经发货了

00:03:05.400 --> 00:03:13.590
最后是的，这是非常具体的

00:03:08.010 --> 00:03:15.390
我碰到的一部分

00:03:13.590 --> 00:03:18.959
我遇到的问题是

00:03:15.390 --> 00:03:21.150
游标，所以没事，所以你是开放的

00:03:18.959 --> 00:03:24.380
渴望进行交易

00:03:21.150 --> 00:03:27.120
可以有多个的特定商店

00:03:24.380 --> 00:03:28.859
您可以访问的条目，您知道

00:03:27.120 --> 00:03:31.290
如果您想象有一个续集数据库

00:03:28.859 --> 00:03:33.410
您的表和行表将是

00:03:31.290 --> 00:03:35.790
商店，该商店中可以有多个

00:03:33.410 --> 00:03:39.389
机密数据库中的行中的条目

00:03:35.790 --> 00:03:42.120
是的，所以你必须离开

00:03:39.389 --> 00:03:45.530
一组商店的差异动作

00:03:42.120 --> 00:03:48.630
认为是的，但可能是多个

00:03:45.530 --> 00:03:49.799
正是这样，我们将继续

00:03:48.630 --> 00:03:51.840
成功在这里，这就是

00:03:49.799 --> 00:03:53.639
如何在任何cuz中打开游标

00:03:51.840 --> 00:03:56.010
基本上有一点数据电路可以

00:03:53.639 --> 00:04:02.010
您遍历一个

00:03:56.010 --> 00:04:05.100
我非常了解IDP，所以可以存储很多信息

00:04:02.010 --> 00:04:07.980
现在就转拍拍，所以这一切都沸腾了

00:04:05.100 --> 00:04:10.160
如此简单快捷，这真的很容易

00:04:07.980 --> 00:04:12.989
解释这基本上是开始

00:04:10.160 --> 00:04:15.510
样板，所以我一直在创建一个

00:04:12.989 --> 00:04:17.849
 indexeddb周围的小包装库

00:04:15.510 --> 00:04:19.120
好一阵子了，我的意思是

00:04:17.849 --> 00:04:20.859
我工作一段时间了

00:04:19.120 --> 00:04:22.780
下一个版本下一个主要版本

00:04:20.859 --> 00:04:25.270
我想打破一切的变化

00:04:22.780 --> 00:04:27.370
它被称为IDB它被称为IDB是

00:04:25.270 --> 00:04:29.169
在NPM上可以使用

00:04:27.370 --> 00:04:29.560
之所以这样，是因为我想我们应该

00:04:29.169 --> 00:04:32.229
清楚

00:04:29.560 --> 00:04:35.169
 ITB是您的库，此API称为

00:04:32.229 --> 00:04:37.720
索引数据库是的，我的意思是这很常见

00:04:35.169 --> 00:04:39.460
调用索引数据库ITB，但从技术上讲

00:04:37.720 --> 00:04:41.110
这就是为什么我认为我会接受

00:04:39.460 --> 00:04:44.620
命名空间并尝试使其听起来完整

00:04:41.110 --> 00:04:46.810
官方对他们来说很棒，所以我为什么

00:04:44.620 --> 00:04:49.860
尝试做的是创建一个API，如果

00:04:46.810 --> 00:04:52.240
您得到一个普通的索引数据库对象

00:04:49.860 --> 00:04:54.340
您可以将其传递到我的API中，它将

00:04:52.240 --> 00:04:58.090
用所有额外的东西增强它

00:04:54.340 --> 00:04:59.949
并使其更易于使用，并且

00:04:58.090 --> 00:05:02.800
我遇到的问题是游标，所以

00:04:59.949 --> 00:05:06.039
一旦有了光标，光标就会

00:05:02.800 --> 00:05:09.220
给你钥匙和价值

00:05:06.039 --> 00:05:11.620
此条目滚动它滚动它是

00:05:09.220 --> 00:05:14.310
当前在存储库中是和何时

00:05:11.620 --> 00:05:18.160
您想转到下一行

00:05:14.310 --> 00:05:21.039
光标博士继续好吧，现在这个

00:05:18.160 --> 00:05:26.500
不返回任何内容

00:05:21.039 --> 00:05:30.070
它导致对游标的请求

00:05:26.500 --> 00:05:32.169
再次触发成功事件，所以

00:05:30.070 --> 00:05:35.080
这基本上是基于隐藏的方式

00:05:32.169 --> 00:05:37.300
递归调用此函数是好的

00:05:35.080 --> 00:05:42.789
是的，这是一种非常奇怪的方式

00:05:37.300 --> 00:05:47.320
然后如果光标很好我应该说

00:05:42.789 --> 00:05:49.510
如果光标为否，那就是您所拥有的

00:05:47.320 --> 00:05:52.900
完成后，您将到达终点

00:05:49.510 --> 00:05:56.139
对象存储完全可以，所以我要面对

00:05:52.900 --> 00:05:58.780
这是一个问题，因为如果有人

00:05:56.139 --> 00:06:00.370
只是将我拥有的光标对象传递给我

00:05:58.780 --> 00:06:02.620
当你说我的意思是你的意思是

00:06:00.370 --> 00:06:05.080
 I DB的作者与库一样

00:06:02.620 --> 00:06:07.229
依此类推，或者将光标传递到

00:06:05.080 --> 00:06:10.240
另一段代码，我们保留通用

00:06:07.229 --> 00:06:11.650
您可以致电继续，但是您

00:06:10.240 --> 00:06:13.240
会，你被搞砸了，是的，你有

00:06:11.650 --> 00:06:15.130
无法听到有效的声音或

00:06:13.240 --> 00:06:17.620
失败了，因为您还需要

00:06:15.130 --> 00:06:19.930
提出要求，您需要

00:06:17.620 --> 00:06:23.919
控制不成功的处理程序是

00:06:19.930 --> 00:06:26.740
我注意到在索引数据库中

00:06:23.919 --> 00:06:29.950
那里经常有回去的路线

00:06:26.740 --> 00:06:31.840
在这个层次的链上

00:06:29.950 --> 00:06:32.810
您的层次结构，因此从商店中

00:06:31.840 --> 00:06:36.320
可以去

00:06:32.810 --> 00:06:38.510
您可以进入数据库的操作

00:06:36.320 --> 00:06:41.389
季节，我认为是电视，是的

00:06:38.510 --> 00:06:44.270
拉斯维加斯，但两者之间没有联系

00:06:41.389 --> 00:06:46.840
游标和请求的请求，所以我

00:06:44.270 --> 00:06:51.470
如果有的话我不是很好吗

00:06:46.840 --> 00:06:54.340
您在那里的要求那里我们

00:06:51.470 --> 00:06:56.750
走，然后我在图书馆可以

00:06:54.340 --> 00:06:58.580
暂时覆盖成功

00:06:56.750 --> 00:07:00.230
继续做我的工作，然后我

00:06:58.580 --> 00:07:02.060
可能会吃掉你的光标，你可以使用

00:07:00.230 --> 00:07:03.560
那个很棒的游标

00:07:02.060 --> 00:07:05.930
有杰克是很合理的事情

00:07:03.560 --> 00:07:06.979
很好地运送它，这就是我们

00:07:05.930 --> 00:07:12.229
要尝试做到这一点，我们正在

00:07:06.979 --> 00:07:13.729
今天在做，是的，所以我该如何开始

00:07:12.229 --> 00:07:16.190
你好，你怎么开始，因为现在

00:07:13.729 --> 00:07:17.690
您想在网上发布

00:07:16.190 --> 00:07:20.210
平台对，我的意思是你可以

00:07:17.690 --> 00:07:22.130
通过填充来填充它

00:07:20.210 --> 00:07:23.300
随机的东西到光标，但那

00:07:22.130 --> 00:07:25.370
您想要做到的不是标准

00:07:23.300 --> 00:07:27.020
一个标准，所以我们要求调查

00:07:25.370 --> 00:07:29.090
规格我想是的我会说我的

00:07:27.020 --> 00:07:30.950
图书馆在做什么取决于它的存在

00:07:29.090 --> 00:07:32.150
之所以打开游标，是因为

00:07:30.950 --> 00:07:34.310
那么它就需要原始的

00:07:32.150 --> 00:07:36.290
请求，然后它可以维护

00:07:34.310 --> 00:07:39.200
该链接本身，但如果您刚刚通过

00:07:36.290 --> 00:07:41.390
递归是的，是的，你被搞砸了

00:07:39.200 --> 00:07:44.870
如果我要在规格上做一些工作

00:07:41.390 --> 00:07:48.140
我会做的就是去mdn 

00:07:44.870 --> 00:07:50.780
有趣，就像我有肌肉记忆

00:07:48.140 --> 00:07:51.740
当我搜索将MD n或NPM放在

00:07:50.780 --> 00:07:53.630
一切的开始

00:07:51.740 --> 00:07:57.800
我一直把两者混在一起

00:07:53.630 --> 00:08:00.800
这种情况下我确实希望indexeddb是

00:07:57.800 --> 00:08:02.720
 Howell称为索引数据库而不是索引数据库

00:08:00.800 --> 00:08:04.340
我一直把它称为索引数据库

00:08:02.720 --> 00:08:07.310
我的意思是你从技术上说你是

00:08:04.340 --> 00:08:08.780
我错了，我的意思很多

00:08:07.310 --> 00:08:11.360
我敢肯定他们很多人都会来

00:08:08.780 --> 00:08:15.650
在这一集中点燃哦，是的，我想

00:08:11.360 --> 00:08:17.210
 md n处的索引dB总是非常好

00:08:15.650 --> 00:08:19.370
浏览器端口表并链接到规格

00:08:17.210 --> 00:08:20.870
我非常重视，如果您愿意

00:08:19.370 --> 00:08:23.120
查找定义了哪些规格

00:08:20.870 --> 00:08:24.710
在MD n中，这是我认为的最好方法

00:08:23.120 --> 00:08:27.260
进入那个，但看看我们已经有

00:08:24.710 --> 00:08:30.560
我们有两个规范Index DB API和index 

00:08:27.260 --> 00:08:31.580
成为付费版本2.0是的，它很有用

00:08:30.560 --> 00:08:34.880
是不是

00:08:31.580 --> 00:08:36.770
所以我猜光标基本上是这样

00:08:34.880 --> 00:08:39.110
我希望它会在版本中

00:08:36.770 --> 00:08:40.310
一口井到底是什么

00:08:39.110 --> 00:08:41.570
我们可能会得到不同的问题

00:08:40.310 --> 00:08:44.750
感觉是否有两个选择

00:08:41.570 --> 00:08:45.970
在两个规格之间让我们打开它们

00:08:44.750 --> 00:08:49.700
都

00:08:45.970 --> 00:08:53.720
我们将在这里查看网址

00:08:49.700 --> 00:08:56.660
这是其中一个的网址

00:08:53.720 --> 00:08:58.610
但即使有人说2.0是

00:08:56.660 --> 00:09:02.920
这是因为2.0现在已经发布， 

00:08:58.610 --> 00:09:06.800
我们现在使用的是3.0，但其中的链接

00:09:02.920 --> 00:09:10.490
如果某人每天在某处环境中阿姆

00:09:06.800 --> 00:09:11.899
规范的链接有TR，这是一个很好的

00:09:10.490 --> 00:09:12.860
机会，你正在看过时的

00:09:11.899 --> 00:09:15.260
一个是

00:09:12.860 --> 00:09:16.610
我的快照也一样

00:09:15.260 --> 00:09:18.350
在胡迪尼中学到的是

00:09:16.610 --> 00:09:19.910
像这样的快照是我们拥有的版本

00:09:18.350 --> 00:09:22.490
现在正式，这是二传手

00:09:19.910 --> 00:09:25.279
这个版本是吗，有人告诉我

00:09:22.490 --> 00:09:27.110
您应该看一下这个规格， 

00:09:25.279 --> 00:09:28.399
您找到错误草稿，那就是

00:09:27.110 --> 00:09:29.420
你看什么，会有一个

00:09:28.399 --> 00:09:31.580
通常情况下的链接是

00:09:29.420 --> 00:09:34.399
虚幻的这个或笑话是你知道的

00:09:31.580 --> 00:09:35.570
 TR代表苛刻的垃圾，不是

00:09:34.399 --> 00:09:37.100
总是正确的，因为有时那是

00:09:35.570 --> 00:09:38.839
从字面上看是该规范的最新版本

00:09:37.100 --> 00:09:40.970
但是，如果有我们在，那就永远

00:09:38.839 --> 00:09:42.260
最近我觉得一切

00:09:40.970 --> 00:09:44.450
变得更像滚动发布

00:09:42.260 --> 00:09:46.310
方法而不是工作

00:09:44.450 --> 00:09:49.070
从主要版本到主要版本

00:09:46.310 --> 00:09:50.540
是的，所以如果我们在红色条上

00:09:49.070 --> 00:09:52.160
左侧表示我们在

00:09:50.540 --> 00:09:54.560
错误的草稿，这很有可能

00:09:52.160 --> 00:09:55.910
是最新的规格

00:09:54.560 --> 00:09:57.650
并不意味着可能会有

00:09:55.910 --> 00:10:01.970
里面没有东西

00:09:57.650 --> 00:10:04.550
是的浏览器是的，但是为此

00:10:01.970 --> 00:10:06.470
用例，我们需要最新版本

00:10:04.550 --> 00:10:09.080
因为我们要使用正确的东西

00:10:06.470 --> 00:10:10.430
可能已经被创建为真哦，我们来看

00:10:09.080 --> 00:10:12.230
最新版本以查看是否已经

00:10:10.430 --> 00:10:13.880
如果没有创造，那么我们的东西应该是

00:10:12.230 --> 00:10:15.170
它添加了一些东西，你把最新的

00:10:13.880 --> 00:10:18.470
版本，所以这就是我们正在努力的原因

00:10:15.170 --> 00:10:20.120
这个是的，所以如果我正在寻找

00:10:18.470 --> 00:10:21.770
我想接触的东西

00:10:20.120 --> 00:10:25.310
我在规范中寻找的JavaScript 

00:10:21.770 --> 00:10:28.070
 API部分就在这里

00:10:25.310 --> 00:10:29.420
是的，因为那是什么，那又是什么

00:10:28.070 --> 00:10:32.180
有一个称为API的部分

00:10:29.420 --> 00:10:33.980
给您典型的Web IDL内容

00:10:32.180 --> 00:10:35.720
你就像一个几乎类型的脚本

00:10:33.980 --> 00:10:37.910
对不同事物的定义是的

00:10:35.720 --> 00:10:40.640
就是这样，这是一个

00:10:37.910 --> 00:10:43.490
光标比打字稿早很多

00:10:40.640 --> 00:10:46.250
很多年肯定它有我的类型

00:10:43.490 --> 00:10:47.839
想像是它是我的意思

00:10:46.250 --> 00:10:49.250
看看我们是否

00:10:47.839 --> 00:10:51.279
现在开始从头开始编写规格

00:10:49.250 --> 00:10:53.930
我们会用打字稿是本机吗

00:10:51.279 --> 00:10:55.820
还有一些额外的

00:10:53.930 --> 00:10:57.440
这里的注释，但它正在做

00:10:55.820 --> 00:10:59.000
相同的工作定义了

00:10:57.440 --> 00:10:59.480
所有这些东西，但是如果那是

00:10:59.000 --> 00:11:01.310
部分

00:10:59.480 --> 00:11:02.959
上面的部分是什么，因为我当时

00:11:01.310 --> 00:11:04.519
看着the角所以o指向10 

00:11:02.959 --> 00:11:08.120
那是卡萨斯，这就是我们要去的地方

00:11:04.519 --> 00:11:10.610
他们为什么如此规范

00:11:08.120 --> 00:11:12.380
分为两个部分

00:11:10.610 --> 00:11:14.360
结构或概念不同

00:11:12.380 --> 00:11:16.300
规格称它与a和this不同

00:11:14.360 --> 00:11:18.980
只是描述功能的工作原理

00:11:16.300 --> 00:11:20.959
不管JavaScript多么好

00:11:18.980 --> 00:11:23.269
 JavaScript，所以说嘿，我们来看一个

00:11:20.959 --> 00:11:25.370
数据库数据库名称为

00:11:23.269 --> 00:11:26.449
数据库有一个版本，这只是

00:11:25.370 --> 00:11:27.769
谈论结构吧

00:11:26.449 --> 00:11:29.959
并不意味着那些事情不是

00:11:27.769 --> 00:11:32.420
帮助您潜在地编写代码

00:11:29.959 --> 00:11:33.889
帮助您或可能帮助实施者

00:11:32.420 --> 00:11:36.050
了解细微差别和细节

00:11:33.889 --> 00:11:37.970
是的，这说明了

00:11:36.050 --> 00:11:40.310
系统正常工作，然后我们会看到

00:11:37.970 --> 00:11:42.500
在IDB数据库中，这说明了

00:11:40.310 --> 00:11:43.699
我们将看到JavaScript接口

00:11:42.500 --> 00:11:45.050
在版本中有名称

00:11:43.699 --> 00:11:47.570
好的，但这需要

00:11:45.050 --> 00:11:49.040
明确设置，因此当您单击

00:11:47.570 --> 00:11:51.380
在那里说名字reg我们得到我

00:11:49.040 --> 00:11:53.570
必须返回连接的名称

00:11:51.380 --> 00:11:55.190
数据库，我们单击它，然后它将链接

00:11:53.570 --> 00:11:58.850
直到这是我们的概念

00:11:55.190 --> 00:12:02.000
将他们的IDL资料连接到

00:11:58.850 --> 00:12:03.740
构造区域中的定义还可以

00:12:02.000 --> 00:12:06.709
所以这个东西在这里的顶部

00:12:03.740 --> 00:12:08.389
这生活在C ++的土地上

00:12:06.709 --> 00:12:10.459
并在所有这些线程之上

00:12:08.389 --> 00:12:12.139
那可能不仅仅是实现

00:12:10.459 --> 00:12:14.180
我们与网络无关

00:12:12.139 --> 00:12:15.800
开发人员是的，我会这么说，如果

00:12:14.180 --> 00:12:17.990
您正在寻找事物是什么

00:12:15.800 --> 00:12:20.269
有能力或者您知道API是什么

00:12:17.990 --> 00:12:22.430
直接进入API部分很酷， 

00:12:20.269 --> 00:12:23.750
我们可以在这里看到光标

00:12:22.430 --> 00:12:25.100
他的观点已经使更多在家

00:12:23.750 --> 00:12:27.380
看起来有点像

00:12:25.100 --> 00:12:28.550
 Java范围，我可以得到这个

00:12:27.380 --> 00:12:31.130
所以你可以看到这里

00:12:28.550 --> 00:12:33.639
该功能称为高级命令， 

00:12:31.130 --> 00:12:36.709
现在继续

00:12:33.639 --> 00:12:39.560
如此高级的推理需要一个数字

00:12:36.709 --> 00:12:42.110
我是说跳过五个项目，就像

00:12:39.560 --> 00:12:43.670
继续通话五次

00:12:42.110 --> 00:12:45.319
你不能打电话给你五次

00:12:43.670 --> 00:12:47.300
只能叫这些进阶之一

00:12:45.319 --> 00:12:49.010
函数一次可以告诉他们

00:12:47.300 --> 00:12:52.790
我最近在与索引电视合作

00:12:49.010 --> 00:12:56.620
不得不把规格放在我的脑海里

00:12:52.790 --> 00:12:58.699
是的，我想我会继续

00:12:56.620 --> 00:13:00.380
不成功，我可以打电话继续吗

00:12:58.699 --> 00:13:01.519
再做五遍是的，那

00:13:00.380 --> 00:13:03.860
等同于那会很好

00:13:01.519 --> 00:13:06.380
但是它也很烦人

00:13:03.860 --> 00:13:07.880
如果您尝试告诉，则将其视为错误

00:13:06.380 --> 00:13:10.040
它要做两个，因为如果你说提前

00:13:07.880 --> 00:13:12.110
提前五次看到

00:13:10.040 --> 00:13:12.590
是的，更多的是你的意思，而不是

00:13:12.110 --> 00:13:16.160
加上

00:13:12.590 --> 00:13:20.440
一起好吧，所以我们确实看到了光标

00:13:16.160 --> 00:13:23.000
没有请求权是

00:13:20.440 --> 00:13:26.120
我们期望找到什么

00:13:23.000 --> 00:13:29.740
知道它没有实施，所以我们该怎么办

00:13:26.120 --> 00:13:33.460
要做的只是添加只读属性

00:13:29.740 --> 00:13:35.930
请求并向他们显示不是，哦，好

00:13:33.460 --> 00:13:38.660
因为接下来的事情是提出

00:13:35.930 --> 00:13:40.730
功能啊，是的，你不能决定

00:13:38.660 --> 00:13:42.710
这是你自己的意思是你可以

00:13:40.730 --> 00:13:44.960
不会到达任何地方，所以你

00:13:42.710 --> 00:13:47.300
将会非常失望，所以在

00:13:44.960 --> 00:13:50.000
规格顶部，这里有一个链接

00:13:47.300 --> 00:13:52.160
问题跟踪github它主要是起床

00:13:50.000 --> 00:13:57.620
如今主要是github，所以

00:13:52.160 --> 00:13:59.570
我要去这里，这是

00:13:57.620 --> 00:14:02.390
有一个窗帘要求

00:13:59.570 --> 00:14:04.370
由杰克·阿奇博尔德（Jake Archibald）打开，是的

00:14:02.390 --> 00:14:06.740
这就是我已经在

00:14:04.370 --> 00:14:08.330
实际上，当我开始时前进了一点

00:14:06.740 --> 00:14:11.270
这样做我不是在想

00:14:08.330 --> 00:14:14.690
使其成为一集，但我所做的是

00:14:11.270 --> 00:14:17.540
我进去说这有点奇怪

00:14:14.690 --> 00:14:18.830
为什么不要求它的诅咒是

00:14:17.540 --> 00:14:19.820
本质上为什么要说得很好

00:14:18.830 --> 00:14:21.130
描述，因为有人

00:14:19.820 --> 00:14:23.420
可能想看看你如何

00:14:21.130 --> 00:14:24.110
措辞讨论如何进行

00:14:23.420 --> 00:14:25.880
究竟

00:14:24.110 --> 00:14:27.320
所以这就是我想念的原因

00:14:25.880 --> 00:14:30.140
基本上只是要求功能

00:14:27.320 --> 00:14:34.040
是的，您知道并且确实不是

00:14:30.140 --> 00:14:35.630
提出一种正式的正式语气

00:14:34.040 --> 00:14:37.220
就像我有这个主意做什么

00:14:35.630 --> 00:14:39.560
人们认为这仍然是非常人性化的

00:14:37.220 --> 00:14:40.730
即使是真正可行的方法

00:14:39.560 --> 00:14:43.339
在规范世界中

00:14:40.730 --> 00:14:45.110
是的，我描述的不是这个问题，我

00:14:43.339 --> 00:14:48.070
确实提出了解决方案，但我描述了一个

00:14:45.110 --> 00:14:50.750
首先是问题，这是常见的问题

00:14:48.070 --> 00:14:52.280
我在某些功能中看到的问题

00:14:50.750 --> 00:14:54.830
讨论有人来我要这个

00:14:52.280 --> 00:14:56.120
下一个问题是为什么

00:14:54.830 --> 00:14:58.940
从为什么开始，这是我的

00:14:56.120 --> 00:15:00.500
提案，因为那样的话

00:14:58.940 --> 00:15:03.320
比我了解更多的人

00:15:00.500 --> 00:15:04.640
东西可以说这是更好的

00:15:03.320 --> 00:15:06.230
解决您的问题的方法，或者这是一个

00:15:04.640 --> 00:15:07.970
是更好地解决问题的方法，是的

00:15:06.230 --> 00:15:11.660
不必等待您知道的回来

00:15:07.970 --> 00:15:14.089
来回证明这是乔希

00:15:11.660 --> 00:15:16.970
在实施的贝尔

00:15:14.089 --> 00:15:19.459
 chrome也不尊重工作本身

00:15:16.970 --> 00:15:21.530
他是Googler，他说的是

00:15:19.459 --> 00:15:25.070
听起来不错哦，通常不会这样

00:15:21.530 --> 00:15:26.300
发生某种程度的同意使用

00:15:25.070 --> 00:15:29.420
遇见他

00:15:26.300 --> 00:15:31.010
请其他规范人士加入

00:15:29.420 --> 00:15:34.610
然后我们从微软那里得到了Ally 

00:15:31.010 --> 00:15:36.410
 Mozilla的Andrew和Apple的Brady 

00:15:34.610 --> 00:15:38.390
所以没关系

00:15:36.410 --> 00:15:40.310
这从来没有发生过，但现在

00:15:38.390 --> 00:15:42.110
这个很快，非常非常

00:15:40.310 --> 00:15:45.050
没有摩擦，是的，我认为是

00:15:42.110 --> 00:15:47.390
因为这是一个很小的功能

00:15:45.050 --> 00:15:49.220
非常适合indexdb并且

00:15:47.390 --> 00:15:50.360
实施就像他们有一种感觉

00:15:49.220 --> 00:15:53.000
他们实施起来真的很容易

00:15:50.360 --> 00:15:55.130
是的，我的意思是那种感觉

00:15:53.000 --> 00:15:57.020
引擎盖下应该很容易做到

00:15:55.130 --> 00:15:59.000
是的，说多少钱从来没有发货

00:15:57.020 --> 00:16:01.040
我自己很好的任何新浏览器

00:15:59.000 --> 00:16:02.180
字面上只是暴露一些

00:16:01.040 --> 00:16:03.890
已经存在，可能

00:16:02.180 --> 00:16:07.700
内部已经绑定到请求

00:16:03.890 --> 00:16:09.500
无论如何准确地考试，所以这就是我

00:16:07.700 --> 00:16:11.950
以为这很好，为什么不

00:16:09.500 --> 00:16:14.390
因为感觉就像是零钱

00:16:11.950 --> 00:16:18.850
现在就开始吧，那就是

00:16:14.390 --> 00:16:18.850
此情节的简介会提示该简介

00:16:19.120 --> 00:16:25.280
我们将标题的混音

00:16:22.610 --> 00:16:28.540
增压的顺序可以吗

00:16:25.280 --> 00:16:28.540
那我们可以把漫画先生

00:16:30.940 --> 00:16:42.050
 [音乐] 

00:16:39.640 --> 00:16:45.140
所以我们要去做，我必须去做

00:16:42.050 --> 00:16:48.200
我们如何开始呢？ 

00:16:45.140 --> 00:16:52.730
需要尊重的两件事

00:16:48.200 --> 00:16:56.750
改变尊重改变然后测试

00:16:52.730 --> 00:16:58.820
有一个非常重要的，我要去

00:16:56.750 --> 00:17:01.040
你先去做测试

00:16:58.820 --> 00:17:02.420
测试驱动的开发，我不

00:17:01.040 --> 00:17:04.160
总是这样做

00:17:02.420 --> 00:17:05.630
但我一直都这样做

00:17:04.160 --> 00:17:07.370
非常成功，所以我不知道

00:17:05.630 --> 00:17:09.200
不要经常这样做，所以我们有这个

00:17:07.370 --> 00:17:11.930
所谓的网络平台测试

00:17:09.200 --> 00:17:14.570
您可以通过wpte fYI了解

00:17:11.930 --> 00:17:16.190
好吧，我会说你可以参加

00:17:14.570 --> 00:17:18.290
也来自规格，所以你不

00:17:16.190 --> 00:17:19.730
链接到我的测试套件的链接

00:17:18.290 --> 00:17:22.100
执行测试是它的存储库

00:17:19.730 --> 00:17:25.580
从字面上看是整个网络

00:17:22.100 --> 00:17:27.650
平台测试是每个API都应该

00:17:25.580 --> 00:17:29.420
在这里有一个测试套件

00:17:27.650 --> 00:17:32.390
绝对如此，这就是全部

00:17:29.420 --> 00:17:35.930
 indexdb的负载很多

00:17:32.390 --> 00:17:37.730
哦，很多年前的测试

00:17:35.930 --> 00:17:39.350
其中两年前到五天之前

00:17:37.730 --> 00:17:42.470
那是五年前的五年

00:17:39.350 --> 00:17:46.370
五年前的任何进步

00:17:42.470 --> 00:17:49.550
以前我不会那样做，所以有一个

00:17:46.370 --> 00:17:51.350
是的，文件很多，所以编写测试是

00:17:49.550 --> 00:17:53.720
一个非常好的方式为

00:17:51.350 --> 00:17:56.060
 Web平台，因为测试正在进行中

00:17:53.720 --> 00:17:57.740
 JavaScript是的，所以您不这样做

00:17:56.060 --> 00:17:59.900
需要了解规格

00:17:57.740 --> 00:18:01.520
为了贡献你的东西

00:17:59.900 --> 00:18:03.320
编写测试以描述功能

00:18:01.520 --> 00:18:06.110
你想要，我已经完成了

00:18:03.320 --> 00:18:08.080
我自己和同时贡献了一些测试

00:18:06.110 --> 00:18:10.580
这有点奇怪，因为它显然是

00:18:08.080 --> 00:18:11.840
一种有机生长的系统

00:18:10.580 --> 00:18:13.250
时间，你应该看看一些

00:18:11.840 --> 00:18:14.840
其他测试，您将掌握

00:18:13.250 --> 00:18:16.430
它很快，如何运作， 

00:18:14.840 --> 00:18:18.830
这正是我们要做的

00:18:16.430 --> 00:18:21.260
所以回购是的，它涵盖了所有

00:18:18.830 --> 00:18:22.340
大量滚动所有任务，因此

00:18:21.260 --> 00:18:24.770
如果您需要设置类似

00:18:22.340 --> 00:18:26.240
这真的有据可查

00:18:24.770 --> 00:18:27.830
设置第一个没有问题

00:18:26.240 --> 00:18:30.080
我想要的时候效果很好

00:18:27.830 --> 00:18:31.970
马上就做得很好

00:18:30.080 --> 00:18:33.620
您将检查出套件，然后

00:18:31.970 --> 00:18:34.550
遵循这些指示，因为

00:18:33.620 --> 00:18:37.910
你需要一些东西

00:18:34.550 --> 00:18:41.180
主机文件是这样的东西，所以

00:18:37.910 --> 00:18:42.860
我要做的就是不需要

00:18:41.180 --> 00:18:44.900
进行网络平台测试，因为我

00:18:42.860 --> 00:18:47.480
实际上拥有承诺权，所以我

00:18:44.900 --> 00:18:49.820
知道看看我

00:18:47.480 --> 00:18:51.350
让我们去，这是我试图

00:18:49.820 --> 00:18:55.370
记得去那里

00:18:51.350 --> 00:18:57.890
出色的网络平台测试，这是

00:18:55.370 --> 00:19:00.440
我们将要开始编辑的内容

00:18:57.890 --> 00:19:03.890
要去WPT发球是这个

00:19:00.440 --> 00:19:06.230
全部记录下来，但测试服务器

00:19:03.890 --> 00:19:08.150
看所有有意义的东西

00:19:06.230 --> 00:19:10.130
它在许多端口上启动测试服务器

00:19:08.150 --> 00:19:12.920
这就是我要使用的

00:19:10.130 --> 00:19:14.600
普通的未加密的

00:19:12.920 --> 00:19:16.250
多个端口和多个脉冲名称

00:19:14.600 --> 00:19:18.590
在此存储库中，因为有时您

00:19:16.250 --> 00:19:21.080
需要做交叉原点交叉测试

00:19:18.590 --> 00:19:24.590
起源事物交叉计划之类的事物

00:19:21.080 --> 00:19:27.200
 HTTP到HTTPS之类的东西，所以我

00:19:24.590 --> 00:19:28.640
写下所有这就是为什么可能

00:19:27.200 --> 00:19:30.380
看起来有点不知所措

00:19:28.640 --> 00:19:33.500
是的，所以我将选择其中之一

00:19:30.380 --> 00:19:35.420
好的，所以您现在在索引数据库中

00:19:33.500 --> 00:19:36.980
测试文件夹，如果您打开任何其他HTML 

00:19:35.420 --> 00:19:38.810
据我所知测试文件

00:19:36.980 --> 00:19:41.180
运行，您将看到很酷的结果

00:19:38.810 --> 00:19:43.520
我们去看看那你怎么样

00:19:41.180 --> 00:19:46.490
决定你不是哪个文件

00:19:43.520 --> 00:19:49.970
喜欢显示结果，是你

00:19:46.490 --> 00:19:53.600
要编辑不，所以这就是你

00:19:49.970 --> 00:19:55.430
知道这是一些不同的规格

00:19:53.600 --> 00:19:57.650
用不同的方式写测试是的

00:19:55.430 --> 00:19:59.090
选择了一个名为ID的文件-游标- 

00:19:57.650 --> 00:20:01.160
资源

00:19:59.090 --> 00:20:03.860
我假设我说我假设我知道

00:20:01.160 --> 00:20:09.080
他们提前看了这些

00:20:03.860 --> 00:20:11.260
游标源的测试，因此

00:20:09.080 --> 00:20:14.290
从光标对象可以转到

00:20:11.260 --> 00:20:17.810
源给你回来

00:20:14.290 --> 00:20:19.280
商店或印度，所以您可以从

00:20:17.810 --> 00:20:21.020
车看着商店，但不是

00:20:19.280 --> 00:20:24.140
请求，所以请求真的很喜欢

00:20:21.020 --> 00:20:27.770
缺少链接是的，所以很有趣

00:20:24.140 --> 00:20:28.850
我们已经有了，所以我们要进行编辑

00:20:27.770 --> 00:20:31.130
多么害怕

00:20:28.850 --> 00:20:33.620
如果我应该选择错误的文件

00:20:31.130 --> 00:20:37.430
我要清理我不确定哪个HTML 

00:20:33.620 --> 00:20:39.140
我应该添加测试文件-II表示不可以

00:20:37.430 --> 00:20:40.700
害怕对审查中的人

00:20:39.140 --> 00:20:42.080
会像个好测试一样前进

00:20:40.700 --> 00:20:43.340
请将此文件，然后

00:20:42.080 --> 00:20:45.290
成为一个非常普通的人

00:20:43.340 --> 00:20:47.450
我的经历真的很友善

00:20:45.290 --> 00:20:50.360
他们实际上非常感谢

00:20:47.450 --> 00:20:53.570
让人们正确地处理这些东西

00:20:50.360 --> 00:20:56.800
因为它非常方便，所以我们走吧

00:20:53.570 --> 00:21:00.620
用于Web平台测试

00:20:56.800 --> 00:21:03.890
在这里突破vs代码

00:21:00.620 --> 00:21:07.070
好的，是的，我们要编写测试

00:21:03.890 --> 00:21:09.680
对于未来，我现在的好处之一

00:21:07.070 --> 00:21:11.270
首先进行测试的是实施者

00:21:09.680 --> 00:21:13.280
超级敏锐的人可以开始

00:21:11.270 --> 00:21:14.840
根据您的测试来实施

00:21:13.280 --> 00:21:16.970
您实际上正在制定规范

00:21:14.840 --> 00:21:19.100
随身携带的东西发生了

00:21:16.970 --> 00:21:20.870
有趣，所以这就是为什么它真的

00:21:19.100 --> 00:21:23.180
很好的起点

00:21:20.870 --> 00:21:27.110
所以我就不皱眉了

00:21:23.180 --> 00:21:29.510
甚至要为我的新测试打开PR 

00:21:27.110 --> 00:21:31.460
如果规格变更尚未降落

00:21:29.510 --> 00:21:33.950
正确，您可以进行评论

00:21:31.460 --> 00:21:37.250
平行进行

00:21:33.950 --> 00:21:39.850
所以这是

00:21:37.250 --> 00:21:42.530
测试，我们只是看着还可以

00:21:39.850 --> 00:21:44.630
让我们来剖析一下

00:21:42.530 --> 00:21:46.520
我们有测试工具测试工具

00:21:44.630 --> 00:21:47.809
报告我们可以测试的工具

00:21:46.520 --> 00:21:49.610
现在就忽略它是广告

00:21:47.809 --> 00:21:51.500
测试线束的框架

00:21:49.610 --> 00:21:53.870
相当于摩卡咖啡和柴

00:21:51.500 --> 00:21:55.700
可能很酷的支持

00:21:53.870 --> 00:21:57.980
从字面上看，支持再次发挥作用

00:21:55.700 --> 00:22:00.110
是的，专门针对indexdb的东西

00:21:57.980 --> 00:22:01.520
正确，因为是全局文件夹

00:22:00.110 --> 00:22:03.350
支持文件，它将成为索引并

00:22:01.520 --> 00:22:03.920
我就是这样知道的

00:22:03.350 --> 00:22:07.309
那里的路径

00:22:03.920 --> 00:22:11.059
好的，本地的，其余的是测试患者

00:22:07.309 --> 00:22:14.179
是测试功能，所以是的

00:22:11.059 --> 00:22:17.000
有一个游标源测试

00:22:14.179 --> 00:22:18.860
似乎这是生成的测试

00:22:17.000 --> 00:22:23.120
因为他们正在调用此函数

00:22:18.860 --> 00:22:24.559
两次将函数传递给我

00:22:23.120 --> 00:22:26.390
会说这很复杂

00:22:24.559 --> 00:22:29.330
笔试还可以

00:22:26.390 --> 00:22:32.960
很难遵循，但其中之一

00:22:29.330 --> 00:22:37.280
对我来说重要的是

00:22:32.960 --> 00:22:38.750
这个indexeddb测试是如此特殊的indexeddb 

00:22:37.280 --> 00:22:41.059
测试功能是的，我知道这是

00:22:38.750 --> 00:22:44.150
不属于该框架的一部分

00:22:41.059 --> 00:22:47.000
网络平台测试框架，所以其中之一

00:22:44.150 --> 00:22:48.590
您可以直接从中获得的东西

00:22:47.000 --> 00:22:51.080
 Web平台自述文件的底部

00:22:48.590 --> 00:22:53.600
测试是如何编写和审查测试

00:22:51.080 --> 00:22:54.830
光线似乎很有帮助，我不知道如何

00:22:53.600 --> 00:22:59.420
链接在底部，但它是

00:22:54.830 --> 00:23:02.059
所以我们去写测试就是测试

00:22:59.420 --> 00:23:04.370
线束是那是其中之一

00:23:02.059 --> 00:23:07.010
包括我们在这里拥有的东西，它将

00:23:04.370 --> 00:23:09.290
为您提供文件管理工具和

00:23:07.010 --> 00:23:10.880
这将告诉您您知道如何

00:23:09.290 --> 00:23:12.050
打电话给测试，以便您可以做到这一点

00:23:10.880 --> 00:23:14.419
你是对的，因为我看过这些

00:23:12.050 --> 00:23:15.619
在你拥有之前

00:23:14.419 --> 00:23:17.659
这是一个测试功能，所以我

00:23:15.619 --> 00:23:19.340
惊讶地看到我索引了

00:23:17.659 --> 00:23:21.950
显然是他们自己的版本

00:23:19.340 --> 00:23:25.190
功能是是

00:23:21.950 --> 00:23:26.809
所以你可以看到这里有一个水槽测试

00:23:25.190 --> 00:23:30.470
有办法做到所有这些

00:23:26.809 --> 00:23:33.769
东西，然后是底部

00:23:30.470 --> 00:23:35.960
您会得到所有不同的列表

00:23:33.769 --> 00:23:37.279
在这里断言它们是如此确定

00:23:35.960 --> 00:23:40.460
是正确的不等于，所以这将是

00:23:37.279 --> 00:23:46.690
摩卡柴的东西是的，所以这是尝试

00:23:40.460 --> 00:23:50.840
剩下的就是马尔科姆，好吧，男爵

00:23:46.690 --> 00:23:51.950
所以indexdb测试不在这里

00:23:50.840 --> 00:23:54.259
一些特别的东西，所以可能

00:23:51.950 --> 00:23:57.200
在支持杰西那里， 

00:23:54.259 --> 00:23:58.850
回声脚本模块有多容易

00:23:57.200 --> 00:24:00.350
让我们的生活变得正确

00:23:58.850 --> 00:24:02.809
容易找到那是从哪里来的

00:24:00.350 --> 00:24:05.840
实际上是与泰森和羡慕

00:24:02.809 --> 00:24:08.869
我们可以按f12键吗，我只是

00:24:05.840 --> 00:24:10.850
要做索引汤，它要

00:24:08.869 --> 00:24:15.619
给我那个文件，我们可以看看

00:24:10.850 --> 00:24:17.539
它，它是indexeddb测试，它们是

00:24:15.619 --> 00:24:19.369
那里我们走了，所以就这样

00:24:17.539 --> 00:24:21.379
我们在引擎盖下使用辛格测试

00:24:19.369 --> 00:24:24.409
可以马上看到我们到底在乎

00:24:21.379 --> 00:24:26.779
关于您提供升级的详细信息

00:24:24.409 --> 00:24:28.369
功能和开放功能说明

00:24:26.779 --> 00:24:30.889
和选项都可以，是的

00:24:28.369 --> 00:24:33.320
所以升级功能是一些

00:24:30.889 --> 00:24:37.700
 indexeddb具有用于

00:24:33.320 --> 00:24:40.070
数据库打开功能一次准备好

00:24:37.700 --> 00:24:42.230
它一旦打开基本上就打开了

00:24:40.070 --> 00:24:43.549
或更少，我猜完全正确，然后

00:24:42.230 --> 00:24:45.529
只是这个名字，我猜他们

00:24:43.549 --> 00:24:48.679
包裹它，以确保它清理

00:24:45.529 --> 00:24:50.690
在您删除了所有的错误后

00:24:48.679 --> 00:24:52.840
开始收集对象可能是

00:24:50.690 --> 00:24:55.249
创建的会删除一个高级测试

00:24:52.840 --> 00:24:57.279
如果无法删除，请确保冻结

00:24:55.249 --> 00:24:59.600
数据库我们无法打开数据库

00:24:57.279 --> 00:25:01.669
使滥用持续存在于磁盘上，因此如果我们

00:24:59.600 --> 00:25:03.859
我们自己之后没有清理

00:25:01.669 --> 00:25:05.359
你知道阻止光盘使用吗

00:25:03.859 --> 00:25:06.739
如果你真的很乱

00:25:05.359 --> 00:25:08.840
特别是如果你得到测试

00:25:06.739 --> 00:25:12.169
彼此重叠是这样的

00:25:08.840 --> 00:25:13.970
处理所有很好的事情，所以

00:25:12.169 --> 00:25:16.789
让我们回到游标酱

00:25:13.970 --> 00:25:19.009
辉煌，所以我们可以在这里看到是的

00:25:16.789 --> 00:25:20.869
那里会有几个

00:25:19.009 --> 00:25:22.190
回调到第一个是

00:25:20.869 --> 00:25:24.349
它在哪里设置数据库

00:25:22.190 --> 00:25:26.359
升级功能，这是我想，如果我

00:25:24.349 --> 00:25:28.250
正确记住升级功能

00:25:26.359 --> 00:25:29.360
他们在一开始就说

00:25:28.250 --> 00:25:31.940
是您唯一可以使用的功能

00:25:29.360 --> 00:25:34.580
为我们创造对象是伟大的对象

00:25:31.940 --> 00:25:35.720
 URL创建索引，您可以向其中添加内容

00:25:34.580 --> 00:25:36.560
商店，但您可以在其他地方做

00:25:35.720 --> 00:25:37.670
也是啊

00:25:36.560 --> 00:25:39.050
但是是的，这是你唯一的地方

00:25:37.670 --> 00:25:41.660
可以实际修改

00:25:39.050 --> 00:25:43.460
数据库正常，然后下一个东西

00:25:41.660 --> 00:25:45.410
像这样进来实际上是我们

00:25:43.460 --> 00:25:48.410
写测试，我想是的，我们可以

00:25:45.410 --> 00:25:51.220
看到这里正在通过T 

00:25:48.410 --> 00:25:54.260
我知道是测试对象是因为

00:25:51.220 --> 00:25:58.250
这将出现在这里T点步骤

00:25:54.260 --> 00:26:00.890
功能是如何使网络

00:25:58.250 --> 00:26:02.690
平台测试已承诺进行哪些测试

00:26:00.890 --> 00:26:04.820
这么容易处理，因为

00:26:02.690 --> 00:26:07.790
你写一个异步函数，它是

00:26:04.820 --> 00:26:09.410
只是顺序的indexdb，它更多

00:26:07.790 --> 00:26:11.870
从那以后没有诺言

00:26:09.410 --> 00:26:13.370
您的图书馆因此是图书馆，所以我们

00:26:11.870 --> 00:26:15.950
处理这个步骤的功能是

00:26:13.370 --> 00:26:18.170
你宣布我给你回电

00:26:15.950 --> 00:26:20.780
那必须叫好吧，这是

00:26:18.170 --> 00:26:22.760
绝对意味着如果回调

00:26:20.780 --> 00:26:24.950
没有被叫，测试将失败

00:26:22.760 --> 00:26:26.030
实际上可能不是因为这个确定

00:26:24.950 --> 00:26:28.010
到达不会发生

00:26:26.030 --> 00:26:29.570
你知道我不确定每一件事吗

00:26:28.010 --> 00:26:32.150
回调，您必须将其包装在步骤中

00:26:29.570 --> 00:26:36.020
功能还可以，所以我通常会

00:26:32.150 --> 00:26:38.420
承诺测试，所以我们要去货运

00:26:36.020 --> 00:26:41.710
崇拜一点好吧，写

00:26:38.420 --> 00:26:44.840
我们想要的未来测试，所以我

00:26:41.710 --> 00:26:47.330
只是不能在此重复，所以你

00:26:44.840 --> 00:26:49.250
如果您复制粘贴复制粘贴课程可以吗

00:26:47.330 --> 00:26:51.410
辉煌，我们去

00:26:49.250 --> 00:26:53.660
所以我要称呼它，以便您创建

00:26:51.410 --> 00:26:57.710
一个新文件，然后会自动

00:26:53.660 --> 00:26:58.910
在何时通过现有yes运行yes 

00:26:57.710 --> 00:27:00.890
浏览器并不是所有这些测试

00:26:58.910 --> 00:27:01.220
一旦它爬过这是

00:27:00.890 --> 00:27:04.280
凉

00:27:01.220 --> 00:27:09.850
是的，我们要有身份证，因为

00:27:04.280 --> 00:27:09.850
请求我可能会改变这一点

00:27:09.940 --> 00:27:15.890
如果我拼写那是铬涂料

00:27:13.460 --> 00:27:19.010
是的，我有很好的权利

00:27:15.890 --> 00:27:20.870
并以你的名字摆脱它，我知道

00:27:19.010 --> 00:27:24.080
您知道，这样可以更轻松地输入

00:27:20.870 --> 00:27:25.900
英式键盘虽然如此所以我们

00:27:24.080 --> 00:27:28.400
要写这些测试，然后让我们

00:27:25.900 --> 00:27:29.600
删除旧的删除旧的

00:27:28.400 --> 00:27:31.130
是的，我想我们真的不需要

00:27:29.600 --> 00:27:32.810
还有其他东西，所以有点浪费

00:27:31.130 --> 00:27:34.790
每个人的时间复制并粘贴

00:27:32.810 --> 00:27:36.850
因为我们将从漂亮开始

00:27:34.790 --> 00:27:41.030
这很多

00:27:36.850 --> 00:27:42.660
所以实际上我会做的是

00:27:41.030 --> 00:27:45.060
这个星期左右

00:27:42.660 --> 00:27:47.460
供参考如何做是

00:27:45.060 --> 00:27:51.570
因为那不是我所拥有的

00:27:47.460 --> 00:27:53.520
做了大量的indexdb测试是

00:27:51.570 --> 00:27:54.980
我们有免费功能来了

00:27:53.520 --> 00:27:59.090
起来，所以这第一个是

00:27:54.980 --> 00:28:02.610
设置数据库，让我们这样做

00:27:59.090 --> 00:28:05.940
需要一个测试对象和我认为的数据库

00:28:02.610 --> 00:28:07.290
嗯，那是怎么回事啊

00:28:05.940 --> 00:28:07.440
你知道这看起来不错

00:28:07.290 --> 00:28:11.400
我

00:28:07.440 --> 00:28:14.730
我的意思是为什么我们甚至不需要

00:28:11.400 --> 00:28:18.860
索引我们不需要索引吗，所以我们

00:28:14.730 --> 00:28:23.040
需要数据我们需要数据

00:28:18.860 --> 00:28:25.700
地球数据整个数据，只是

00:28:23.040 --> 00:28:28.500
证明我没有偷

00:28:25.700 --> 00:28:30.240
现代JavaScript现在是我的了

00:28:28.500 --> 00:28:33.060
实际上是一个奇迹-因为使用

00:28:30.240 --> 00:28:37.020
使用的错误函数const是

00:28:33.060 --> 00:28:39.660
通常不可接受的JavaScript是什么

00:28:37.020 --> 00:28:42.030
归结为，因为有一个

00:28:39.660 --> 00:28:43.410
让利弊或我们的职能的时间

00:28:42.030 --> 00:28:45.750
在某些浏览器中，但在其他浏览器中

00:28:43.410 --> 00:28:48.780
绝对的，所以这个想法是使

00:28:45.750 --> 00:28:50.910
您希望这些测试可以轻松地在

00:28:48.780 --> 00:28:55.320
您希望它们实现的浏览器

00:28:50.910 --> 00:28:57.660
好的，所以我写了一些服务工

00:28:55.320 --> 00:28:59.760
测试是的，我用广播

00:28:57.660 --> 00:29:02.040
频道-您的通讯及其

00:28:59.760 --> 00:29:02.610
听起来就像您想让Safari 

00:29:02.040 --> 00:29:04.440
这个权利

00:29:02.610 --> 00:29:05.760
您需要停止使用广播频道

00:29:04.440 --> 00:29:07.110
我只是用它作为一种传递方式

00:29:05.760 --> 00:29:09.030
周围的消息不是很明显

00:29:07.110 --> 00:29:11.760
进行测试，但失败了

00:29:09.030 --> 00:29:13.980
 Safari，所以像这样

00:29:11.760 --> 00:29:15.420
被新的浏览器采用

00:29:13.980 --> 00:29:16.920
谈论新功能，因此

00:29:15.420 --> 00:29:19.800
不会有一些我们没有的东西

00:29:16.920 --> 00:29:21.930
定位，例如11退出

00:29:19.800 --> 00:29:24.540
我们是我们，我们可以最多看看

00:29:21.930 --> 00:29:26.790
所有标准的最新版本

00:29:24.540 --> 00:29:28.770
浏览器，如果他们有一定的

00:29:26.790 --> 00:29:30.300
功能很酷，可以在测试中使用

00:29:28.770 --> 00:29:33.630
是的，基本上公平的说法是绝对的

00:29:30.300 --> 00:29:35.460
可以这么说

00:29:33.630 --> 00:29:37.920
我现在要做什么，所以在哪里

00:29:35.460 --> 00:29:40.020
这来自哦，好吧，这就是

00:29:37.920 --> 00:29:45.420
他们正在通过此功能作为

00:29:40.020 --> 00:29:49.730
创建光标的方式非常理想

00:29:45.420 --> 00:29:53.670
我认为还有代码，所以让我们来做

00:29:49.730 --> 00:29:55.730
并很好地格式化，所以我们已经

00:29:53.670 --> 00:30:00.310
得到一个数据库创建一个事务

00:29:55.730 --> 00:30:00.310
起重机对象库未使用索引

00:30:00.460 --> 00:30:05.410
这将是对我们的要求

00:30:02.630 --> 00:30:10.700
光标的切割器听起来不错

00:30:05.410 --> 00:30:12.350
所以我要求圆点成功，这是

00:30:10.700 --> 00:30:15.050
我们需要引入的步骤

00:30:12.350 --> 00:30:17.540
发挥功能，因此

00:30:15.050 --> 00:30:19.880
因为我的记忆是零

00:30:17.540 --> 00:30:23.000
来看第一步真的很烦

00:30:19.880 --> 00:30:27.890
我说的是下划线，我看到了

00:30:23.000 --> 00:30:31.160
他们很多被称为蛇案是的

00:30:27.890 --> 00:30:33.410
在某种程度上，这是你的工作

00:30:31.160 --> 00:30:35.780
我想我认为是的，有些

00:30:33.410 --> 00:30:38.120
大多以骆驼案为题骆驼案

00:30:35.780 --> 00:30:42.140
这是我认为很多

00:30:38.120 --> 00:30:45.110
框架是基于Python的，所以

00:30:42.140 --> 00:30:48.170
我想可能是他的继承

00:30:45.110 --> 00:30:50.150
从它是如此可读，所以它不是

00:30:48.170 --> 00:30:51.560
太大了，我认为是的，我认为

00:30:50.150 --> 00:30:54.920
我可以通过一个函数

00:30:51.560 --> 00:30:56.870
没关系，所以我们有点

00:30:54.920 --> 00:31:00.530
现在我已经有了光标

00:30:56.870 --> 00:31:02.840
我会的，这就是为什么

00:31:00.530 --> 00:31:04.100
我们需要将数据添加到该存储中

00:31:02.840 --> 00:31:05.570
因为我们没有那样做，我们不会

00:31:04.100 --> 00:31:07.310
得到任何光标，因为有

00:31:05.570 --> 00:31:11.120
那里什么都没有，所以我

00:31:07.310 --> 00:31:13.280
要请求点结果，所以

00:31:11.120 --> 00:31:15.140
目前您没有描述

00:31:13.280 --> 00:31:15.620
该测试正在测试的内容

00:31:15.140 --> 00:31:18.950
好点子

00:31:15.620 --> 00:31:22.010
很好，这是第三个论点

00:31:18.950 --> 00:31:24.140
在这里，所以我会很好，让我们

00:31:22.010 --> 00:31:27.080
从其他人那里得到一些启发

00:31:24.140 --> 00:31:30.560
有人写他们不在

00:31:27.080 --> 00:31:32.900
辉煌的优秀，有一个测试的名字

00:31:30.560 --> 00:31:35.990
这是从哪里得到的

00:31:32.900 --> 00:31:39.560
这是第一个论点哦，我明白了

00:31:35.990 --> 00:31:42.320
他们正在拿文件哇，然后我们得到了

00:31:39.560 --> 00:31:44.270
密封，是的，为什么不，因为我

00:31:42.320 --> 00:31:45.590
应该写出来指出

00:31:44.270 --> 00:31:51.650
我在这里忘记了一点

00:31:45.590 --> 00:31:53.570
所以记录标题太麻烦了

00:31:51.650 --> 00:31:57.140
那就是那就是我们的考验

00:31:53.570 --> 00:31:59.240
那是我们的测试条，所以现在我

00:31:57.140 --> 00:32:02.390
为此需要编写一些测试

00:31:59.240 --> 00:32:03.620
我希望有人说

00:32:02.390 --> 00:32:05.510
评论这不是一个好标题

00:32:03.620 --> 00:32:08.420
测试，因为它只是ID，因为它

00:32:05.510 --> 00:32:09.800
其实不要求很好吗

00:32:08.420 --> 00:32:11.750
它是

00:32:09.800 --> 00:32:14.750
虽然这真的是因为对我和

00:32:11.750 --> 00:32:16.310
这是完全不合主题的扑克

00:32:14.750 --> 00:32:19.520
人们写给我这看起来像

00:32:16.310 --> 00:32:21.950
我们辩论的静态属性

00:32:19.520 --> 00:32:23.690
是的，不是因为我要求不是

00:32:21.950 --> 00:32:25.970
因为有建设性

00:32:23.690 --> 00:32:27.770
我已经看过ID实例了

00:32:25.970 --> 00:32:31.370
有人这样做，或者你认识你

00:32:27.770 --> 00:32:33.650
可以做哦，不，不，那是

00:32:31.370 --> 00:32:36.770
好吧，无论技术上是否正确

00:32:33.650 --> 00:32:38.930
完全正确，我想您会发现

00:32:36.770 --> 00:32:42.920
我有光标，现在我想

00:32:38.930 --> 00:32:45.710
写一些断言，我认为我要

00:32:42.920 --> 00:32:48.080
断言等于我们去了

00:32:45.710 --> 00:32:50.570
所以它是期望的实际值

00:32:48.080 --> 00:32:54.880
描述中的值可以

00:32:50.570 --> 00:32:57.590
似乎可行，因为我想要的是你

00:32:54.880 --> 00:33:00.320
我猜

00:32:57.590 --> 00:33:01.790
我通常会严格遵守吗

00:33:00.320 --> 00:33:03.020
我首先要严格II 

00:33:01.790 --> 00:33:05.300
我想我只想检查一下

00:33:03.020 --> 00:33:08.150
存在权还是不存在，是的，我

00:33:05.300 --> 00:33:11.000
我认为默认情况下可能很严格

00:33:08.150 --> 00:33:12.140
希望如此，因为如果不在

00:33:11.000 --> 00:33:15.080
科学就是我一直在做的事

00:33:12.140 --> 00:33:17.990
今天早上这么严格地写柴

00:33:15.080 --> 00:33:19.790
是的，严格来说是一个，但是在这里

00:33:17.990 --> 00:33:21.080
依靠三等分，所以依靠

00:33:19.790 --> 00:33:23.270
三倍等于做得很好，所以它使用

00:33:21.080 --> 00:33:25.130
严格在那里，然后文档

00:33:23.270 --> 00:33:28.430
才华横溢实际上是真的

00:33:25.130 --> 00:33:32.840
好医生的马马虎虎等于我要诅咒

00:33:28.430 --> 00:33:37.520
吉士诅咒或看不到

00:33:32.840 --> 00:33:42.740
拼写光标点请求，我想要

00:33:37.520 --> 00:33:48.410
等于残骸残骸光标

00:33:42.740 --> 00:33:49.370
有要求我不能-您如何获得

00:33:48.410 --> 00:33:52.360
完成的事情

00:33:49.370 --> 00:33:54.770
好吧，我不是那样的

00:33:52.360 --> 00:33:56.930
所以我们实际上已经在

00:33:54.770 --> 00:33:59.200
这一行，因为我们不仅

00:33:56.930 --> 00:34:03.440
测试了这个诅咒，以便该请求存在

00:33:59.200 --> 00:34:05.180
我们已经测试了它的类型和

00:34:03.440 --> 00:34:07.070
正确值和正确值以及

00:34:05.180 --> 00:34:08.750
这就是您要的全部

00:34:07.070 --> 00:34:10.669
只有一位亲爱的医生要求存在

00:34:08.750 --> 00:34:14.090
并且是原始请求的值

00:34:10.669 --> 00:34:15.679
是的，但是这个测试还告诉我们

00:34:14.090 --> 00:34:17.659
实施者，这不是一个新的要求

00:34:15.679 --> 00:34:20.300
是的对象代表相同

00:34:17.659 --> 00:34:21.919
基本请求实际上是

00:34:20.300 --> 00:34:23.250
在相同的javascript对象中相同的是

00:34:21.919 --> 00:34:24.540
等于等于

00:34:23.250 --> 00:34:28.070
所以实际上有趣的是

00:34:24.540 --> 00:34:30.750
您在乎的东西

00:34:28.070 --> 00:34:32.700
开发人员，如果您只想

00:34:30.750 --> 00:34:34.920
有权访问所有请求

00:34:32.700 --> 00:34:36.870
数据提供了，实际上是在乎

00:34:34.920 --> 00:34:39.270
它是完全相同的实例II 

00:34:36.870 --> 00:34:41.610
想你做，因为好吧， 

00:34:39.270 --> 00:34:43.590
很多时间你会做的等于

00:34:41.610 --> 00:34:46.530
等于等于或类似的东西，但您可能会

00:34:43.590 --> 00:34:48.540
在使用周图方面有好处，因此

00:34:46.530 --> 00:34:50.160
你想要相同的表示

00:34:48.540 --> 00:34:51.360
完全一样的同一件事

00:34:50.160 --> 00:34:53.490
是的，这是一个电话，您的希望还好

00:34:51.360 --> 00:34:56.430
是的，这是有意义的，我还将

00:34:53.490 --> 00:34:57.840
就像我要从我们那里窃取一样

00:34:56.430 --> 00:34:59.310
看看他们到这里还有什么

00:34:57.840 --> 00:35:01.940
他们正在测试我们不需要的实例

00:34:59.310 --> 00:35:04.380
为此，已经做好了

00:35:01.940 --> 00:35:06.060
已经存在的stringify对象

00:35:04.380 --> 00:35:07.800
照顾，因为如果已经

00:35:06.060 --> 00:35:12.630
通过点击是的，在其他地方

00:35:07.800 --> 00:35:14.760
但这是我们要偷的，因为我

00:35:12.630 --> 00:35:19.560
想要确保像其他

00:35:14.760 --> 00:35:22.470
光标点要求的事情正在发生

00:35:19.560 --> 00:35:24.750
是只读的，所以有

00:35:22.470 --> 00:35:26.580
实际上是不同的Soyoung通行证， 

00:35:24.750 --> 00:35:28.020
自定义请求，但名称

00:35:26.580 --> 00:35:30.750
属性，因为我猜得到

00:35:28.020 --> 00:35:32.370
属性描述符并检查

00:35:30.750 --> 00:35:34.230
只读文件是，我猜是

00:35:32.370 --> 00:35:34.920
会尝试设置它，也许我也是

00:35:34.230 --> 00:35:37.080
其实不确定

00:35:34.920 --> 00:35:38.430
实现是，但是本质上

00:35:37.080 --> 00:35:40.710
测试将使之成为现实的两件事

00:35:38.430 --> 00:35:44.280
与其他的yeah位相似，但是

00:35:40.710 --> 00:35:46.260
我们想要和我想的东西

00:35:44.280 --> 00:35:47.880
就是这样，现在我们可以运行测试并

00:35:46.260 --> 00:35:52.350
看到尾巴了，我们可以在肠子里说FL 

00:35:47.880 --> 00:35:54.450
所以我应该可以要求

00:35:52.350 --> 00:35:56.670
它失败肯定等于

00:35:54.450 --> 00:36:00.660
财务将是我所期待的错误

00:35:56.670 --> 00:36:05.190
这不是我所期待的那个

00:36:00.660 --> 00:36:06.720
它夸大了平等，否则我会的

00:36:05.190 --> 00:36:08.610
是的，看那个

00:36:06.720 --> 00:36:11.030
一次你不复制粘贴我

00:36:08.610 --> 00:36:15.030
知道我很抱歉

00:36:11.030 --> 00:36:16.230
所以他会失败预期的对象，但是

00:36:15.030 --> 00:36:17.910
有不确定的欢呼

00:36:16.230 --> 00:36:22.380
我们发现了泰莎的地狱

00:36:17.910 --> 00:36:25.860
好吧，这实际上是如果你

00:36:22.380 --> 00:36:27.540
要你在这里停下来，你有

00:36:25.860 --> 00:36:29.010
大量帮助网络标准

00:36:27.540 --> 00:36:31.800
以后你想要的未来

00:36:29.010 --> 00:36:34.920
有人告诉他编写测试很不错

00:36:31.800 --> 00:36:36.600
这只是扎实的努力，对

00:36:34.920 --> 00:36:37.740
比大多数人做的还多

00:36:36.600 --> 00:36:38.940
有他们，所以这实际上是一个真正的

00:36:37.740 --> 00:36:40.980
从某种意义上说，好点是

00:36:38.940 --> 00:36:45.150
不适应必然

00:36:40.980 --> 00:36:47.790
规范语言和所有模式

00:36:45.150 --> 00:36:50.580
和随之而来的东西是

00:36:47.790 --> 00:36:52.350
非常深入或平易近人的方式

00:36:50.580 --> 00:36:54.090
然后如何驱动功能

00:36:52.350 --> 00:36:57.090
你个人可能会想要

00:36:54.090 --> 00:36:58.110
我总是很难

00:36:57.090 --> 00:37:00.440
为没有的事情编写测试

00:36:58.110 --> 00:37:02.730
存在，因为你真的不知道如何

00:37:00.440 --> 00:37:05.100
就像你的测试真的有效吗

00:37:02.730 --> 00:37:06.990
意思是我们在那儿发现了东西，但是

00:37:05.100 --> 00:37:11.150
也许你会像我一样

00:37:06.990 --> 00:37:15.650
不知道如果我们做了光标点

00:37:11.150 --> 00:37:21.960
请求等于我们将要做的

00:37:15.650 --> 00:37:24.060
哦，对了，所以接下来

00:37:21.960 --> 00:37:26.280
测试，但向我们表明，并非如此

00:37:24.060 --> 00:37:28.500
只读的，所以我们至少知道它

00:37:26.280 --> 00:37:29.990
通过了第一次测试，所以我们可以知道

00:37:28.500 --> 00:37:33.300
这就是为什么唯一的测试实际上是

00:37:29.990 --> 00:37:34.440
重要实际上很重要，所以我们

00:37:33.300 --> 00:37:35.880
知道我们有某个地方，我们知道我们有

00:37:34.440 --> 00:37:38.400
通过了可靠的测试

00:37:35.880 --> 00:37:40.440
好吧，是的，我们现在该怎么办

00:37:38.400 --> 00:37:43.350
将提交此公关，然后我们将

00:37:40.440 --> 00:37:44.730
继续规范吧，我会做的

00:37:43.350 --> 00:37:46.560
串联，我们将在

00:37:44.730 --> 00:37:48.030
结束，但是可以，如果您希望它在这里停止

00:37:46.560 --> 00:37:50.460
你可以做到，你可以有人

00:37:48.030 --> 00:37:52.050
这已经对浏览器开发人员有所帮助

00:37:50.460 --> 00:37:55.380
完全实现此功能

00:37:52.050 --> 00:37:56.580
直接，但我们会做规格哦

00:37:55.380 --> 00:37:59.340
男孩哦男孩

00:37:56.580 --> 00:38:01.860
所以我们不用考虑我们

00:37:59.340 --> 00:38:03.180
实际上需要改变我们已经

00:38:01.860 --> 00:38:07.500
讨论了规范的结构

00:38:03.180 --> 00:38:11.100
它分为两个部分，所以我们将

00:38:07.500 --> 00:38:13.650
需要在游标之间创建链接

00:38:11.100 --> 00:38:15.690
和请求是的，然后找到一种方法

00:38:13.650 --> 00:38:17.640
我想我们检查一下

00:38:15.690 --> 00:38:21.000
首先，如果引擎盖下没有光标

00:38:17.640 --> 00:38:22.590
已经有一个链接可以找到

00:38:21.000 --> 00:38:24.780
正确要求

00:38:22.590 --> 00:38:27.960
并且以与您致电时相同的方式

00:38:24.780 --> 00:38:32.430
游标doc继续是的，它有效

00:38:27.960 --> 00:38:34.440
以某种方式使用请求是正确的

00:38:32.430 --> 00:38:36.930
它必须与某种联系

00:38:34.440 --> 00:38:39.930
引擎盖下的请求，我们将

00:38:36.930 --> 00:38:41.760
你在这里看到游标有一个要求

00:38:39.930 --> 00:38:44.580
这是用于打开

00:38:41.760 --> 00:38:46.740
光标很好的定义是

00:38:44.580 --> 00:38:49.260
只是从来没有暴露过有趣

00:38:46.740 --> 00:38:50.400
 JavaScript，所以我猜你只是

00:38:49.260 --> 00:38:52.560
说你只是略读

00:38:50.400 --> 00:38:53.970
阅读我猜对的大胆的事情

00:38:52.560 --> 00:38:55.710
这是一种想法

00:38:53.970 --> 00:38:57.410
如果您花更多的时间在

00:38:55.710 --> 00:38:59.580
规格，您可以在这里看到

00:38:57.410 --> 00:39:00.870
大量的文字，实际上没有

00:38:59.580 --> 00:39:02.700
阅读每一段

00:39:00.870 --> 00:39:06.270
我实际上发现的方式

00:39:02.700 --> 00:39:10.020
是我进入对象存储区吗

00:39:06.270 --> 00:39:12.540
打开光标，我开始

00:39:10.020 --> 00:39:13.680
阅读像如何打开光标

00:39:12.540 --> 00:39:15.630
实际工作，因为这是你的地方

00:39:13.680 --> 00:39:19.830
得到请求，让这是

00:39:15.630 --> 00:39:22.290
第五部分，我猜是算法

00:39:19.830 --> 00:39:24.360
是的，这只是两个

00:39:22.290 --> 00:39:27.330
事物被融合在一起，所以它是

00:39:24.360 --> 00:39:30.090
不完全是代码，而是散文

00:39:27.330 --> 00:39:31.800
循序渐进的时尚是的，但是有一个

00:39:30.090 --> 00:39:34.050
基本与实施者，然后转向

00:39:31.800 --> 00:39:36.900
大多数时候都转换为超级闪存代码

00:39:34.050 --> 00:39:38.700
是的，在伺服系统中是真的，是什么

00:39:36.900 --> 00:39:40.380
实际上在引擎盖下运行

00:39:38.700 --> 00:39:42.840
那是我看到第八步的地方

00:39:40.380 --> 00:39:43.320
将游标请求设置为

00:39:42.840 --> 00:39:46.620
具有讽刺意味的

00:39:43.320 --> 00:39:48.120
这样就存在并链接回去了

00:39:46.620 --> 00:39:50.730
在眼前有要求的诅咒

00:39:48.120 --> 00:39:52.400
那是那里，这意味着

00:39:50.730 --> 00:39:55.650
告诉植入物已经有

00:39:52.400 --> 00:39:57.840
在他们的代码中，光标有一个

00:39:55.650 --> 00:39:59.250
要求是，这样可以告诉我

00:39:57.840 --> 00:40:00.990
到目前为止，你告诉我的只有

00:39:59.250 --> 00:40:03.690
其实是放一些东西

00:40:00.990 --> 00:40:06.240
到API位以链接这些东西

00:40:03.690 --> 00:40:11.070
在一起非常

00:40:06.240 --> 00:40:14.220
好吧，让我们深入了解一下

00:40:11.070 --> 00:40:17.940
点你会去github克隆这个

00:40:14.220 --> 00:40:22.260
早已收获，我得到了它的副本

00:40:17.940 --> 00:40:25.500
看起来像教练很好，让我们

00:40:22.260 --> 00:40:27.120
看看它不是indexeddb吗

00:40:25.500 --> 00:40:28.350
看起来我在交叉路口做了一些工作

00:40:27.120 --> 00:40:29.990
观察者在某个时候我不记得了

00:40:28.350 --> 00:40:34.260
那足够公平

00:40:29.990 --> 00:40:36.660
这就是项目喜欢的方式

00:40:34.260 --> 00:40:41.420
调整大小是，我们去那是

00:40:36.660 --> 00:40:45.390
很好，所以如果我们看看这里是什么

00:40:41.420 --> 00:40:49.830
很多很多的东西

00:40:45.390 --> 00:40:51.810
实际规格的HTML文件，但不是

00:40:49.830 --> 00:40:54.750
生成的就是编译的

00:40:51.810 --> 00:40:58.140
输出是因为源是一个

00:40:54.750 --> 00:41:01.860
切特自行车叫的语言流下了

00:40:58.140 --> 00:41:03.930
这是这个文件，这里是索引点BS 

00:41:01.860 --> 00:41:06.270
非常有趣

00:41:03.930 --> 00:41:08.549
自行车棚，这是一种特殊格式

00:41:06.270 --> 00:41:11.520
基于markdown的一种，我的

00:41:08.549 --> 00:41:14.789
该死的财产肯定很好

00:41:11.520 --> 00:41:18.299
是的，所以我们在这里或窗口

00:41:14.789 --> 00:41:19.920
调整更多窗口的大小哦

00:41:18.299 --> 00:41:21.420
水龙头已经打开标签已经打开

00:41:19.920 --> 00:41:25.260
好像我一直在看

00:41:21.420 --> 00:41:29.190
已经是这样，如果我们等

00:41:25.260 --> 00:41:31.380
我们没有时间去经历

00:41:29.190 --> 00:41:32.640
整件事，但你写什么

00:41:31.380 --> 00:41:34.049
让我们在打开它时打招呼

00:41:32.640 --> 00:41:37.349
文件，当您打开此文件时，哦，看

00:41:34.049 --> 00:41:39.480
这是HTML，是的，您不能放HTML 

00:41:37.349 --> 00:41:41.160
它就像降价中

00:41:39.480 --> 00:41:43.799
好的，你可以看到一个清单

00:41:41.160 --> 00:41:46.890
编辑一些，这只是一个元数据

00:41:43.799 --> 00:41:48.930
部分，这是一个

00:41:46.890 --> 00:41:50.579
翻译成我们看到的部分

00:41:48.930 --> 00:41:51.750
节奏的规格

00:41:50.579 --> 00:41:54.390
所以这实际上在AK中

00:41:51.750 --> 00:41:56.819
被解析不仅是通用的

00:41:54.390 --> 00:41:59.190
是的，它实际上是被解析的

00:41:56.819 --> 00:42:03.270
并转到了链接（如果您在

00:41:59.190 --> 00:42:06.150
刚开始，所以有

00:42:03.270 --> 00:42:07.799
更多元数据有些样式，因为它是

00:42:06.150 --> 00:42:10.230
只是HTML他们有一些自定义样式

00:42:07.799 --> 00:42:11.520
无论出于什么原因在这里，然后我们

00:42:10.230 --> 00:42:12.779
开始进入降价促销，所以我

00:42:11.520 --> 00:42:13.890
降价打我喜欢这个小

00:42:12.779 --> 00:42:16.369
评论他们在这里所做的事情

00:42:13.890 --> 00:42:21.270
不需要这样做，但是看起来不错

00:42:16.369 --> 00:42:23.910
哦，柔软的包装，我不喜欢我做

00:42:21.270 --> 00:42:25.740
也是因为II可以打开包裹

00:42:23.910 --> 00:42:29.039
这就是为什么我必须要做的，还有什么

00:42:25.740 --> 00:42:31.740
专栏是这包裹似乎

00:42:29.039 --> 00:42:33.599
完全任意，就像为什么消失了

00:42:31.740 --> 00:42:36.299
是一个假设的代码，但是

00:42:33.599 --> 00:42:38.160
你会看到这样的你知道

00:42:36.299 --> 00:42:40.770
看起来很熟悉，降价，如果你

00:42:38.160 --> 00:42:43.200
在看到重量之前使用github 

00:42:40.770 --> 00:42:44.789
无论如何，这是一个不同的话题

00:42:43.200 --> 00:42:46.650
您正在阅读规格书，这是最好的选择

00:42:44.789 --> 00:42:48.960
要做的只是弄清楚是什么

00:42:46.650 --> 00:42:51.270
他们使用的样式不要不要

00:42:48.960 --> 00:42:53.640
脱颖而出，你知道使它一致

00:42:51.270 --> 00:42:55.079
尽你所能

00:42:53.640 --> 00:42:57.510
修理其他东西，因为它将使

00:42:55.079 --> 00:42:59.849
您的差异或APR很难看

00:42:57.510 --> 00:43:01.829
通过是的说是你添加使它

00:42:59.849 --> 00:43:04.859
看来这是此后再来的一部分

00:43:01.829 --> 00:43:06.779
正确，然后和某些规范使用

00:43:04.859 --> 00:43:08.880
更多HTML，其中一些使用更多

00:43:06.779 --> 00:43:10.440
共享单车是的捷径

00:43:08.880 --> 00:43:11.880
我这里的一些捷径

00:43:10.440 --> 00:43:14.819
偏爱

00:43:11.880 --> 00:43:17.700
而不是写HTML，我应该说

00:43:14.819 --> 00:43:19.500
那如果你想

00:43:17.700 --> 00:43:21.690
如果你想知道什么样的

00:43:19.500 --> 00:43:23.190
他们是骑自行车的捷径

00:43:21.690 --> 00:43:24.599
如果你想让它脱落自行车想

00:43:23.190 --> 00:43:26.670
从我们的同事Ted使用自行车棚

00:43:24.599 --> 00:43:28.740
标签Atkins的Adkins并非唯一

00:43:26.670 --> 00:43:30.299
斑点编译可用的东西

00:43:28.740 --> 00:43:32.730
我也不太了解

00:43:30.299 --> 00:43:34.520
关于尊重，所以我还没有做过

00:43:32.730 --> 00:43:37.549
之前在这些标准上做了很多工作

00:43:34.520 --> 00:43:39.690
但是有文档

00:43:37.549 --> 00:43:42.200
文档也已生成

00:43:39.690 --> 00:43:45.569
有自行车棚很好很好非常

00:43:42.200 --> 00:43:47.640
递归，所以它看起来像一个生活

00:43:45.569 --> 00:43:49.829
标准，并详细说明了所有这些

00:43:47.640 --> 00:43:51.750
快捷方式以及如何进入和启动

00:43:49.829 --> 00:43:54.150
您可能感兴趣的

00:43:51.750 --> 00:43:56.190
是的，我会说还有一个网络

00:43:54.150 --> 00:43:57.510
为您服务，您只需给它一个

00:43:56.190 --> 00:44:00.170
自行车形状文件，可为您返回HTML 

00:43:57.510 --> 00:44:04.740
边缘非常非常方便非常非常方便

00:44:00.170 --> 00:44:07.230
所以有点像我们过去

00:44:04.740 --> 00:44:08.160
要解决这个问题，在哪里做

00:44:07.230 --> 00:44:09.839
你想先走

00:44:08.160 --> 00:44:11.010
我们要去API部分吗

00:44:09.839 --> 00:44:12.630
转到API部分，得到一个

00:44:11.010 --> 00:44:14.339
双性恋的，所以我不去那里，因为

00:44:12.630 --> 00:44:16.740
有一个大文件，这是一个大文件

00:44:14.339 --> 00:44:17.369
文件引擎，所有我想要的东西

00:44:16.740 --> 00:44:22.140
文本

00:44:17.369 --> 00:44:25.790
另一件事，对了，我是说IDL 

00:44:22.140 --> 00:44:28.530
应该相当精确

00:44:25.790 --> 00:44:31.049
是的，我们是我这个词的界面

00:44:28.530 --> 00:44:32.520
思考，让我们也许吧，也许

00:44:31.049 --> 00:44:34.799
寻找这个界面会

00:44:32.520 --> 00:44:36.690
到处我可能会把整个事情都

00:44:34.799 --> 00:44:39.930
时间的事，但是否会

00:44:36.690 --> 00:44:42.260
在标签中，这看起来不错，所以这

00:44:39.930 --> 00:44:45.390
好的，我们只有几个

00:44:42.260 --> 00:44:46.710
那里是我只做粘膜界面

00:44:45.390 --> 00:44:48.750
因为这是我们想要成为的地方

00:44:46.710 --> 00:44:53.960
是我们想要成为的地方，我们想要

00:44:48.750 --> 00:44:58.049
在这里添加一个新的东西，让我们为只读

00:44:53.960 --> 00:45:00.119
现在可以通过网络IDL很好地确定属性

00:44:58.049 --> 00:45:01.950
调用一个属性，这真的

00:45:00.119 --> 00:45:03.690
很长时间以来我一直感到困惑

00:45:01.950 --> 00:45:05.520
表示HTML属性，因为那是

00:45:03.690 --> 00:45:08.609
我在规格中看到它的地方

00:45:05.520 --> 00:45:11.640
就是说这让我们得到空气

00:45:08.609 --> 00:45:13.589
如果您想看一下Web IDL 

00:45:11.640 --> 00:45:16.020
当然有，尤其是

00:45:13.589 --> 00:45:20.930
因为我们只删除了只读和

00:45:16.020 --> 00:45:23.849
只定义他们让她现在就可以

00:45:20.930 --> 00:45:27.030
我们靠L的原因往往是

00:45:23.849 --> 00:45:29.910
相当详细的是浏览器实际使用的

00:45:27.030 --> 00:45:31.480
它用于代码生成，所以在那里

00:45:29.910 --> 00:45:35.560
往往是很多信息

00:45:31.480 --> 00:45:37.120
嵌入到这些东西中，因此浏览器

00:45:35.560 --> 00:45:38.950
实际上会暂停，它将通过

00:45:37.120 --> 00:45:42.220
并指出在何处公开

00:45:38.950 --> 00:45:44.350
东西，它本质上是产生一个

00:45:42.220 --> 00:45:47.020
很多代码，开发人员必须

00:45:44.350 --> 00:45:48.820
有点像是在听到有关

00:45:47.020 --> 00:45:51.430
浏览器，但浏览器开发人员准确

00:45:48.820 --> 00:45:53.650
正是这样，我们想在这里做什么

00:45:51.430 --> 00:45:56.350
好吧，第一位是回报

00:45:53.650 --> 00:45:59.350
要求提供ID的类型

00:45:56.350 --> 00:46:01.570
你事先看过的

00:45:59.350 --> 00:46:04.120
还有接口ID 

00:46:01.570 --> 00:46:06.880
通过使用IDP请求是是，我知道

00:46:04.120 --> 00:46:10.080
就这样，我们称它为请求

00:46:06.880 --> 00:46:12.490
因为那很有意义，然后我们去了

00:46:10.080 --> 00:46:17.530
让我们看看它是否编译完成

00:46:12.490 --> 00:46:19.300
我们还没有完成哦，男孩，所以我，因为我已经

00:46:17.530 --> 00:46:24.210
装好自行车棚，是的，我可以骑自行车

00:46:19.300 --> 00:46:27.900
放下手表让我们去做

00:46:24.210 --> 00:46:27.900
有一些想法

00:46:27.990 --> 00:46:33.040
现在做得很好，我猜

00:46:31.270 --> 00:46:35.800
 HTML文件已更新

00:46:33.040 --> 00:46:37.090
是的，自行车棚会检查很多吗

00:46:35.800 --> 00:46:38.620
的东西，所以我们实际上有一个

00:46:37.090 --> 00:46:40.030
警告这里说有一个

00:46:38.620 --> 00:46:44.500
定义不是那个不是

00:46:40.030 --> 00:46:45.760
如果我删除该修改，则在本地引用

00:46:44.500 --> 00:46:47.380
我们使那个错误仍然会出现

00:46:45.760 --> 00:46:49.420
所以我总是会说先跑

00:46:47.380 --> 00:46:50.650
在编辑之前，如果有

00:46:49.420 --> 00:46:52.720
错误是您可以忽略的错误

00:46:50.650 --> 00:46:57.040
因为他们不是你的错，因为我

00:46:52.720 --> 00:46:58.300
可以很好地说明这是什么动作

00:46:57.040 --> 00:47:00.730
这意味着什么

00:46:58.300 --> 00:47:01.890
这里没有等效项，所以这

00:47:00.730 --> 00:47:05.620
这只是我的网络服务器

00:47:01.890 --> 00:47:07.180
因为不喜欢而开始

00:47:05.620 --> 00:47:08.710
为你，但也许可以，但你

00:47:07.180 --> 00:47:10.330
刚才不做，我做不了

00:47:08.710 --> 00:47:12.400
它是因为它只是一个HTML文件

00:47:10.330 --> 00:47:14.260
在我总是可以运行的任何地方都可以使用

00:47:12.400 --> 00:47:15.280
打开我们就可以打开您的文件

00:47:14.260 --> 00:47:16.930
甚至不需要网络，所以您可能

00:47:15.280 --> 00:47:20.920
可以，但我一直都在经营网络

00:47:16.930 --> 00:47:23.020
服务器在我的开发文件夹中，是的，我敢打赌

00:47:20.920 --> 00:47:24.700
发生在开始，因为我总是需要

00:47:23.020 --> 00:47:27.910
一个在某个时候，通常在

00:47:24.700 --> 00:47:29.980
该文件夹，所以我们要查找什么

00:47:27.910 --> 00:47:36.250
就是这个奇怪

00:47:29.980 --> 00:47:40.480
等价的东西，所以把它丢下来，所以我们可以

00:47:36.250 --> 00:47:42.070
只要在这里看到粗体定义

00:47:40.480 --> 00:47:43.800
因为最终结果是等效的，但

00:47:42.070 --> 00:47:45.190
实际上没有任何引用

00:47:43.800 --> 00:47:48.460
不是

00:47:45.190 --> 00:47:49.299
好吧，所以它正在标记它并继续前进

00:47:48.460 --> 00:47:52.359
你在这里有这个东西

00:47:49.299 --> 00:47:54.700
不使用Y，这很酷

00:47:52.359 --> 00:47:56.410
好吧，这对您有所帮助，您知道什么都没有

00:47:54.700 --> 00:48:00.339
问题，但我们没有写的问题

00:47:56.410 --> 00:48:05.289
让我们来看看游标API 

00:48:00.339 --> 00:48:07.630
东西哦，我的上帝看着那，但这是

00:48:05.289 --> 00:48:09.490
旧的，不可点击的杰克，是的，不是

00:48:07.630 --> 00:48:11.470
可点击的，因为不同的是

00:48:09.490 --> 00:48:13.270
只引用这个东西，因为

00:48:11.470 --> 00:48:15.010
我们没有提到其他地方好

00:48:13.270 --> 00:48:17.619
我们一直在将来源视为

00:48:15.010 --> 00:48:20.760
与我们已经意识到的类似

00:48:17.619 --> 00:48:24.160
所以它不会学习，所以这只是

00:48:20.760 --> 00:48:26.260
就发生在这个方块下面

00:48:24.160 --> 00:48:28.450
这里的源属性分散

00:48:26.260 --> 00:48:32.200
专业人员必须再次返回源

00:48:28.450 --> 00:48:34.960
光标的所有这些都链接在一起

00:48:32.200 --> 00:48:36.579
起来，我们可以看到什么

00:48:34.960 --> 00:48:41.049
是的是索引或

00:48:36.579 --> 00:48:42.940
对象存储，但尊重还可以

00:48:41.049 --> 00:48:48.039
您认为它永远不会返回null或

00:48:42.940 --> 00:48:48.430
扔那么好吧，我是的

00:48:48.039 --> 00:48:51.069
有趣

00:48:48.430 --> 00:48:53.829
所以每个人都有一份敬意的报价

00:48:51.069 --> 00:48:55.359
我会说自己的风格和怪癖

00:48:53.829 --> 00:48:58.660
像这个属性永远不会返回null 

00:48:55.359 --> 00:49:01.000
这是我会在笔记中写的东西吗

00:48:58.660 --> 00:49:04.049
因为就像从来没有

00:49:01.000 --> 00:49:06.640
返回null是在其他地方定义的

00:49:04.049 --> 00:49:08.500
好吧，这就像一个代码

00:49:06.640 --> 00:49:10.180
我将在注释中发表评论

00:49:08.500 --> 00:49:11.559
因为这不是必不可少的信息

00:49:10.180 --> 00:49:12.730
而明显的方法或错误的

00:49:11.559 --> 00:49:14.859
在那里你可以这样做

00:49:12.730 --> 00:49:16.930
你的方式似乎都是因为

00:49:14.859 --> 00:49:20.170
不是规范，所以是一回事

00:49:16.930 --> 00:49:22.180
所以这不是我写规范的方式

00:49:20.170 --> 00:49:23.260
我在规范领域看到很多东西，实际上

00:49:22.180 --> 00:49:25.720
我曾经做过的事，被告知

00:49:23.260 --> 00:49:28.119
关闭它说这将返回

00:49:25.720 --> 00:49:31.210
游标的来源，但来源

00:49:28.119 --> 00:49:35.049
指出了这件事

00:49:31.210 --> 00:49:37.059
构建良好的土地和规格

00:49:35.049 --> 00:49:40.420
没有描述如何将其转变为

00:49:37.059 --> 00:49:43.539
 JavaScript对象正确，那么您哪个

00:49:40.420 --> 00:49:45.369
应该真的很明确，这是

00:49:43.539 --> 00:49:48.339
当我一边这样做时

00:49:45.369 --> 00:49:50.260
鲍里索夫·阿西（Borisov ascii） 

00:49:48.339 --> 00:49:51.549
是Mozilla的想法，所以它说

00:49:50.260 --> 00:49:53.140
好吧，我该如何转换为

00:49:51.549 --> 00:49:55.480
好吧，不是很明显吗？ 

00:49:53.140 --> 00:49:57.190
如果您有免费的iframe，该怎么办

00:49:55.480 --> 00:49:58.170
我应该在页面中创建对象

00:49:57.190 --> 00:50:00.240
 iframe不喜欢

00:49:58.170 --> 00:50:02.700
会很蠢，但是你需要写

00:50:00.240 --> 00:50:04.560
像这样，如果你也这样

00:50:02.700 --> 00:50:07.920
两次访问鳄鱼

00:50:04.560 --> 00:50:10.560
每次都有一个新对象

00:50:07.920 --> 00:50:12.840
是的，所以想法是那个东西

00:50:10.560 --> 00:50:13.800
应该是SPECT，以便有人可以跟随

00:50:12.840 --> 00:50:17.520
这个规格书

00:50:13.800 --> 00:50:18.840
每次返回一个不同的对象

00:50:17.520 --> 00:50:19.470
代表相同的基础

00:50:18.840 --> 00:50:21.300
事情

00:50:19.470 --> 00:50:22.560
是的，留下解释的空间是

00:50:21.300 --> 00:50:24.570
导致中断问题的东西

00:50:22.560 --> 00:50:27.420
是我们一直在努力避免的事情

00:50:24.570 --> 00:50:30.480
真的真的很难，但是我们

00:50:27.420 --> 00:50:32.940
只会跟随他们所做的事情

00:50:30.480 --> 00:50:35.840
新闻是围绕对象的全部

00:50:32.940 --> 00:50:39.240
等价，我们涵盖了晚餐测试

00:50:35.840 --> 00:50:41.490
没错，即使您操纵

00:50:39.240 --> 00:50:43.890
测试可以的规范文本版本

00:50:41.490 --> 00:50:48.210
绝对消除歧义

00:50:43.890 --> 00:50:51.560
所以我要去，我看不到我喜欢我

00:50:48.210 --> 00:50:55.050
一些复制粘贴是的，所以我要

00:50:51.560 --> 00:50:58.920
将其移到此处开始

00:50:55.050 --> 00:51:01.010
对我们来说，这是自行车棚的语法

00:50:58.920 --> 00:51:05.550
是定义，是属性

00:51:01.010 --> 00:51:07.650
就ID LSP而言，ID为

00:51:05.550 --> 00:51:11.430
光标，这就是说这个东西

00:51:07.650 --> 00:51:13.500
我们定义的是ID的子项be 

00:51:11.430 --> 00:51:14.970
光标，这就是我实际上的方式

00:51:13.500 --> 00:51:17.550
他们会发誓要链接，是的

00:51:14.970 --> 00:51:23.070
引用，是的，好的

00:51:17.550 --> 00:51:25.080
在那里，吸气剂必须返回和

00:51:23.070 --> 00:51:27.330
这是ID兽，这是

00:51:25.080 --> 00:51:31.410
用于创建自行车棚的语法

00:51:27.330 --> 00:51:32.790
参考mm-hmm，您可以参考

00:51:31.410 --> 00:51:34.970
不仅是这个规格，您还可以

00:51:32.790 --> 00:51:37.050
引用此规范之外的内容哦

00:51:34.970 --> 00:51:38.520
是的，我已经看过了，看到有一个

00:51:37.050 --> 00:51:39.090
一种规格将链接的几次

00:51:38.520 --> 00:51:41.640
到另一个

00:51:39.090 --> 00:51:45.000
是的，这是因为自行车可以确保

00:51:41.640 --> 00:51:48.870
有这么大的资料库，所以如果我

00:51:45.000 --> 00:51:54.360
可以放在这里返回我不知道

00:51:48.870 --> 00:51:55.830
我们称之为URL，因此

00:51:54.360 --> 00:51:58.580
大括号表示我正在引用

00:51:55.830 --> 00:52:03.630
界面还可以

00:51:58.580 --> 00:52:05.340
所以如果我这样做了，我们应该看到

00:52:03.630 --> 00:52:07.770
重建现在告诉我们的是什么

00:52:05.340 --> 00:52:09.630
可能有多个网址，所以我

00:52:07.770 --> 00:52:11.760
要问它要放斜线

00:52:09.630 --> 00:52:13.349
那里说我想要顶级的

00:52:11.760 --> 00:52:17.900
不在属于某物的URL中

00:52:13.349 --> 00:52:20.220
否则可能仍然会中断

00:52:17.900 --> 00:52:22.109
现在看起来很好

00:52:20.220 --> 00:52:24.359
我们有多个属性定义

00:52:22.109 --> 00:52:26.400
因为我们的复制和粘贴是

00:52:24.359 --> 00:52:28.230
致命的，但仍在编译中

00:52:26.400 --> 00:52:29.460
比较是您想要的自行车棚非常适合

00:52:28.230 --> 00:52:33.119
这种事情很宽容

00:52:29.460 --> 00:52:38.040
只是完成工作，所以现在我们将

00:52:33.119 --> 00:52:39.900
看到这里源再次出现

00:52:38.040 --> 00:52:42.060
必须返回URL，因为我把那个

00:52:39.900 --> 00:52:44.420
在其中以及两个指向URL的链接

00:52:42.060 --> 00:52:47.849
规范，哦，什么工作组，它链接到

00:52:44.420 --> 00:52:48.930
 URL随便什么G都有

00:52:47.849 --> 00:52:51.510
我们现在不需要任何东西，但这是

00:52:48.930 --> 00:52:54.260
很高兴知道不，我只是对，因为

00:52:51.510 --> 00:52:59.180
我们真正需要做的改变是

00:52:54.260 --> 00:53:02.520
超级无聊的粉刺不是这样的

00:52:59.180 --> 00:53:06.089
请求属性获取器必须返回

00:53:02.520 --> 00:53:12.270
这些摆脱了这样的URL 

00:53:06.089 --> 00:53:13.560
此游标想要的源nope请求

00:53:12.270 --> 00:53:16.230
删除剩下的一切

00:53:13.560 --> 00:53:19.859
要删除其余的，现在让我们

00:53:16.230 --> 00:53:22.200
看到没有它做的构建

00:53:19.859 --> 00:53:25.619
致命的错误使我们无所不用其极

00:53:22.200 --> 00:53:27.990
之前的错误非常重要，因此

00:53:25.619 --> 00:53:30.359
现在我们可以看到ID已刷新

00:53:27.990 --> 00:53:31.710
我们的链接现在是要求提供的链接

00:53:30.359 --> 00:53:33.839
属性起床必须返回

00:53:31.710 --> 00:53:37.829
此游标的请求链接

00:53:33.839 --> 00:53:39.480
我认为那真是太神奇了

00:53:37.829 --> 00:53:43.770
现在我们将这两件事提交给我们的测试

00:53:39.480 --> 00:53:44.490
可以发现变化，所以我是公关专家，所以

00:53:43.770 --> 00:53:47.730
那就是我会做的

00:53:44.490 --> 00:53:51.420
我就像我希望跳得好，让我们

00:53:47.730 --> 00:53:54.920
创建一个分支吧，我们称之为

00:53:51.420 --> 00:53:59.099
授予我实际上没有掌握的权利

00:53:54.920 --> 00:54:03.780
不是在索引dB上

00:53:59.099 --> 00:54:05.369
索引，所以我们称其为诅咒或要求

00:54:03.780 --> 00:54:10.560
优秀的

00:54:05.369 --> 00:54:12.450
现在我喜欢我被使用了

00:54:10.560 --> 00:54:17.520
我付出的一切，因为当你

00:54:12.450 --> 00:54:19.890
放大不，你不能哦不，方便我

00:54:17.520 --> 00:54:21.569
告诉你我该怎么办

00:54:19.890 --> 00:54:23.310
所以这就是为什么我喜欢它

00:54:21.569 --> 00:54:25.380
因为我只是视觉效果很好

00:54:23.310 --> 00:54:26.910
向我展示我的变化，什么都没有

00:54:25.380 --> 00:54:28.530
潜入那里还有更多的奇怪

00:54:26.910 --> 00:54:30.480
这是一个很小的变化，很好

00:54:28.530 --> 00:54:32.070
但我喜欢这种概述

00:54:30.480 --> 00:54:34.230
一般而言，因为在

00:54:32.070 --> 00:54:35.670
我像控制台一样捕捉的时间

00:54:34.230 --> 00:54:36.510
记录调试器语句

00:54:35.670 --> 00:54:38.130
拼写错误

00:54:36.510 --> 00:54:41.190
这是我的小代码审查，我喜欢

00:54:38.130 --> 00:54:45.060
哦，是的，我会吃的，是的，我会的

00:54:41.190 --> 00:54:48.210
我不会提交HTML我

00:54:45.060 --> 00:54:50.370
不知道它告诉我什么

00:54:48.210 --> 00:54:52.260
这是一个新文件，这意味着

00:54:50.370 --> 00:54:53.550
他们会无视您，是或

00:54:52.260 --> 00:54:56.700
也许应该忽略一下

00:54:53.550 --> 00:55:00.770
我要忽略它，我要去

00:54:56.700 --> 00:55:04.950
去添加一个诅咒或点一个请求， 

00:55:00.770 --> 00:55:08.400
我会推动这些更改，是的

00:55:04.950 --> 00:55:10.950
那是被推动的，但是一件事

00:55:08.400 --> 00:55:14.970
我实际上是在编辑

00:55:10.950 --> 00:55:15.510
规范是我们有两种类型的

00:55:14.970 --> 00:55:21.150
光标

00:55:15.510 --> 00:55:26.280
那里的ID是光标，然后往下走

00:55:21.150 --> 00:55:27.570
有ID是具有值的游标

00:55:26.280 --> 00:55:28.920
扩展接口

00:55:27.570 --> 00:55:32.880
扩展接口，因为您可以获得

00:55:28.920 --> 00:55:37.010
光标仅用于存储商店的键和

00:55:32.880 --> 00:55:39.210
还不包括价值，好吧， 

00:55:37.010 --> 00:55:41.160
当我编辑规格时，它向我发送我的操作

00:55:39.210 --> 00:55:42.720
就像我会做测试我会做规格

00:55:41.160 --> 00:55:45.150
然后我会发现一些使

00:55:42.720 --> 00:55:46.290
我认为请耐心等待正确的测试

00:55:45.150 --> 00:55:50.610
在这种情况下我有点担心

00:55:46.290 --> 00:55:53.310
因为当我们进行测试时， 

00:55:50.610 --> 00:55:55.800
假设它具有价值，我们知道

00:55:53.310 --> 00:55:58.860
我们正在做对象存储对象存储

00:55:55.800 --> 00:56:00.720
是具有值的游标，我们有一个

00:55:58.860 --> 00:56:03.180
游标的值是yes 

00:56:00.720 --> 00:56:05.040
以及我们的规格变更实际上定义了

00:56:03.180 --> 00:56:07.770
它发生时具有潜在价值

00:56:05.040 --> 00:56:10.170
是的，所以很明显

00:56:07.770 --> 00:56:12.260
那就是我们想要的地方，所以这是

00:56:10.170 --> 00:56:15.960
我要去的地方，你知道

00:56:12.260 --> 00:56:18.810
我要输入光标，这是

00:56:15.960 --> 00:56:21.990
 ID，因为那些没有

00:56:18.810 --> 00:56:23.880
完全准确地估价，所以就像

00:56:21.990 --> 00:56:25.410
是的，只是要确保它在

00:56:23.880 --> 00:56:27.740
父类，而不是仅仅

00:56:25.410 --> 00:56:30.600
那是这样的东西

00:56:27.740 --> 00:56:32.040
可能会被

00:56:30.600 --> 00:56:33.390
代码审查，因为这些意见将

00:56:32.040 --> 00:56:35.490
发生在单独的存储库中

00:56:33.390 --> 00:56:37.680
是的，通常在您进行规格工作时

00:56:35.490 --> 00:56:38.850
像这样，您就可以承诺

00:56:37.680 --> 00:56:41.460
这样，人们来回走走

00:56:38.850 --> 00:56:43.110
我发现这种情况下要不要

00:56:41.460 --> 00:56:45.900
修补，确保他们签名

00:56:43.110 --> 00:56:47.700
所以不一定像致命的

00:56:45.900 --> 00:56:49.410
如果我们不带它就寄错

00:56:47.700 --> 00:56:51.840
公开踢手或堂兄

00:56:49.410 --> 00:56:53.190
正是这样，我告诉你

00:56:51.840 --> 00:56:55.500
弄清楚，因为我个人会

00:56:53.190 --> 00:56:57.600
非常害怕喜欢哦，如果我不注意

00:56:55.500 --> 00:56:58.440
如果我对网络还不够好

00:56:57.600 --> 00:57:01.050
平台测试

00:56:58.440 --> 00:57:03.060
对不，我是说人们会帮助对

00:57:01.050 --> 00:57:04.430
就像你去看看我的任何一个

00:57:03.060 --> 00:57:07.080
规格PRS 

00:57:04.430 --> 00:57:08.250
大概有50条讨论评论

00:57:07.080 --> 00:57:10.560
是的，我不知道这是否会

00:57:08.250 --> 00:57:13.050
这是因为像两行

00:57:10.560 --> 00:57:14.670
不会被打动，但是嘿，这是

00:57:13.050 --> 00:57:15.960
因为我们要从字面上看

00:57:14.670 --> 00:57:17.850
现在写这个，这样人们可以去

00:57:15.960 --> 00:57:24.210
看看公关耶，看看是否

00:57:17.850 --> 00:57:31.320
是发生了什么，所以是这样说

00:57:24.210 --> 00:57:33.780
诅咒或要求，是的，这就是我

00:57:31.320 --> 00:57:36.240
现在提交测试不会累加

00:57:33.780 --> 00:57:37.740
用我的黏糊糊做的是沙滩球

00:57:36.240 --> 00:57:41.400
没关系

00:57:37.740 --> 00:57:43.200
是的，网络平台测试非常庞大

00:57:41.400 --> 00:57:44.700
像一百个树枝，因为

00:57:43.200 --> 00:57:47.430
浏览器的默认上游

00:57:44.700 --> 00:57:49.620
他们自己是一个测试的东西，所以

00:57:47.430 --> 00:57:53.220
但是我在看那很好

00:57:49.620 --> 00:57:56.430
我确实要犯规，因为我们创造了

00:57:53.220 --> 00:58:04.260
是的，所以光标点要求我很高兴

00:57:56.430 --> 00:58:05.610
并把它推高，我们

00:58:04.260 --> 00:58:07.950
完成，我们完成了

00:58:05.610 --> 00:58:10.650
所以现在我们将打开PRS，我们将等待

00:58:07.950 --> 00:58:12.840
寻求其他浏览器的反馈

00:58:10.650 --> 00:58:14.220
供应商确切地在它上面等等

00:58:12.840 --> 00:58:16.290
希望当这集发生的时候

00:58:14.220 --> 00:58:18.240
人们只是会说

00:58:16.290 --> 00:58:20.820
很好，没有错误，你

00:58:18.240 --> 00:58:22.320
没有做错任何事，这

00:58:20.820 --> 00:58:27.090
该功能可以很容易地发货

00:58:22.320 --> 00:58:29.370
在浏览器中，非常感谢

00:58:27.090 --> 00:58:32.270
让我们哦，看着那个，看着那个

00:58:29.370 --> 00:58:35.100
调整大小完全无益，让我们

00:58:32.270 --> 00:58:37.860
玩我不会做的

00:58:35.100 --> 00:58:39.930
点击我要创建另一个窗口

00:58:37.860 --> 00:58:41.640
或很好，很好，另一个标签

00:58:39.930 --> 00:58:43.020
也会严重调整大小

00:58:41.640 --> 00:58:46.410
当然是为什么不

00:58:43.020 --> 00:58:50.720
好吧，让我们这样走吧

00:58:46.410 --> 00:58:50.720
多云，有人

