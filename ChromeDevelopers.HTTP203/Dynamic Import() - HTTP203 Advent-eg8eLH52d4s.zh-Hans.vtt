WEBVTT
Kind: captions
Language: zh-Hans

00:00:06.350 --> 00:00:12.330
 20:17是的一年即将结束， 

00:00:09.599 --> 00:00:14.490
我们即将输入2018 mm-hmm，所以我

00:00:12.330 --> 00:00:18.060
在考虑我想做什么

00:00:14.490 --> 00:00:20.490
 2018年以及让我兴奋的是我

00:00:18.060 --> 00:00:22.920
以为我会让你问我问题

00:00:20.490 --> 00:00:26.699
关于我在两件事中所做的一件事

00:00:22.920 --> 00:00:30.630
分钟，两分钟，可以导入

00:00:26.699 --> 00:00:32.009
功能还可以，功能很好

00:00:30.630 --> 00:00:34.079
从技术上讲不行，但有所不同

00:00:32.009 --> 00:00:36.960
我们已经在其中一种对我撒谎了

00:00:34.079 --> 00:00:39.270
单词不好，我们有静态导入

00:00:36.960 --> 00:00:41.610
在JavaScript中，我们在

00:00:39.270 --> 00:00:43.079
模块，所以我们说从

00:00:41.610 --> 00:00:45.390
等等等等，然后你得到一个模块

00:00:43.079 --> 00:00:47.370
你可以用它，但是有时候

00:00:45.390 --> 00:00:48.660
不想在一开始就做

00:00:47.370 --> 00:00:50.370
因为现在所有的模块

00:00:48.660 --> 00:00:52.860
必须拥有所有重要模块

00:00:50.370 --> 00:00:54.660
在其中任何一个运行之前先下载

00:00:52.860 --> 00:00:57.149
确切地，有时你有东西

00:00:54.660 --> 00:00:58.890
就像您想使用的微调器

00:00:57.149 --> 00:01:00.510
你并没有真正阻止执行

00:00:58.890 --> 00:01:02.190
您的模块正在卸载微调器

00:01:00.510 --> 00:01:03.930
你会在以后使用更多的东西

00:01:02.190 --> 00:01:05.189
好吧，你这个主意是

00:01:03.930 --> 00:01:07.290
你可以推迟加载的东西

00:01:05.189 --> 00:01:09.090
完全关闭，这样就挂了我知道你

00:01:07.290 --> 00:01:10.049
将以这种方式加载微调器是什么

00:01:09.090 --> 00:01:13.170
你要显示的时候

00:01:10.049 --> 00:01:15.299
加载正常，所以可能不是微调器

00:01:13.170 --> 00:01:17.340
不好，但是喜欢延期的路线哦

00:01:15.299 --> 00:01:19.200
是的或您想要的任何型号

00:01:17.340 --> 00:01:21.570
以后如果您认为不是

00:01:19.200 --> 00:01:23.189
不需要，以后需要

00:01:21.570 --> 00:01:24.930
然后您可以按需加载它， 

00:01:23.189 --> 00:01:26.820
那就是你现在拥有动态的地方

00:01:24.930 --> 00:01:28.020
导入起作用的小功能

00:01:26.820 --> 00:01:29.610
与设置导入相同，但是

00:01:28.020 --> 00:01:32.310
你可以在中间调用的东西

00:01:29.610 --> 00:01:34.920
您的代码并返回一个承诺啊好吧

00:01:32.310 --> 00:01:37.380
然后它解决了什么

00:01:34.920 --> 00:01:39.090
解决模块出口和

00:01:37.380 --> 00:01:42.119
特殊名称，称为default，它是

00:01:39.090 --> 00:01:43.770
默认出口出口优好吧

00:01:42.119 --> 00:01:46.770
这就是我们目前所有的骇客

00:01:43.770 --> 00:01:48.540
用于动态加载JavaScript 

00:01:46.770 --> 00:01:50.399
离开，这是一个有趣的事实，这不是

00:01:48.540 --> 00:01:53.189
功能不好玩为什么又是一个

00:01:50.399 --> 00:01:55.229
功能，因为它的语法不是

00:01:53.189 --> 00:01:56.549
一个很好的理由，我只是一个字或一个字

00:01:55.229 --> 00:01:58.560
其实不知道确切的理由

00:01:56.549 --> 00:02:00.509
但我认为他们将其作为一种语法， 

00:01:58.560 --> 00:02:02.100
不是一个功能，所以你不能破解它

00:02:00.509 --> 00:02:03.450
不能超载并钩住自己的

00:02:02.100 --> 00:02:05.520
功能应该像一个

00:02:03.450 --> 00:02:07.649
安全机制，我认为可以，但是

00:02:05.520 --> 00:02:09.270
只是一个有趣的事实

00:02:07.649 --> 00:02:10.530
那真的不应该影响你

00:02:09.270 --> 00:02:12.720
作为开发人员的日常生活

00:02:10.530 --> 00:02:13.830
太好了，我可以定期使用吗

00:02:12.720 --> 00:02:16.380
 JavaScript或仅模块

00:02:13.830 --> 00:02:18.300
只是模块，因为它是一个模块，所以

00:02:16.380 --> 00:02:20.220
在那才有意义，但我的意思是你

00:02:18.300 --> 00:02:21.720
可以只使用脚本类型模块，然后

00:02:20.220 --> 00:02:23.310
你有一个模块，你可以使用

00:02:21.720 --> 00:02:26.820
动态导入，这样就可以轻松破解

00:02:23.310 --> 00:02:29.760
离开，这将是一个伟大的你在

00:02:26.820 --> 00:02:34.890
上次的时间不是40秒

00:02:29.760 --> 00:02:37.980
左变换流变换流

00:02:34.890 --> 00:02:40.290
是我们有可读的流，对吗

00:02:37.980 --> 00:02:42.500
真正的流是什么，它会转变

00:02:40.290 --> 00:02:42.500
流

