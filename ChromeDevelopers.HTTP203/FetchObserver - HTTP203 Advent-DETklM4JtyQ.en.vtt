WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.874
[MUSIC PLAYING]

00:00:06.710 --> 00:00:11.270
JAKE: 2017 is the present,
but soon, no longer, for 2018

00:00:11.270 --> 00:00:12.350
is upon us.

00:00:12.350 --> 00:00:13.340
SURMA: The future.

00:00:13.340 --> 00:00:15.020
JAKE: The future-- well,
soon it will be the present.

00:00:15.020 --> 00:00:16.395
That's the weird
thing about time

00:00:16.395 --> 00:00:17.815
is it keeps just coming at you.

00:00:17.815 --> 00:00:19.940
But I wanted to think about
some of the things that

00:00:19.940 --> 00:00:21.876
are going to be landing
on the web in 2018.

00:00:21.876 --> 00:00:24.000
And I wanted to try and
describe one of them to you

00:00:24.000 --> 00:00:26.900
through you asking
questions in two minutes.

00:00:26.900 --> 00:00:29.969
I want to talk about
the FetchObserver.

00:00:29.969 --> 00:00:31.010
SURMA: The FetchObserver?

00:00:31.010 --> 00:00:32.479
Does it have to do
with actual fetch?

00:00:32.479 --> 00:00:33.140
JAKE: Yes, it does.

00:00:33.140 --> 00:00:33.740
SURMA: Does it observe fetches?

00:00:33.740 --> 00:00:34.531
JAKE: Yes, it does.

00:00:34.531 --> 00:00:35.570
SURMA: How?

00:00:35.570 --> 00:00:36.070
JAKE: Magic.

00:00:36.070 --> 00:00:36.983
[LAUGHTER]

00:00:36.983 --> 00:00:39.230
Through web specs that
we have yet to write,

00:00:39.230 --> 00:00:41.030
which is part of--

00:00:41.030 --> 00:00:43.535
right now, it's just
an API kind of sketch

00:00:43.535 --> 00:00:44.850
of what this will look like.

00:00:44.850 --> 00:00:45.350
SURMA: OK.

00:00:45.350 --> 00:00:47.101
But which problem does it solve?

00:00:47.101 --> 00:00:49.100
JAKE: The problem of, I
want to observe fetches.

00:00:49.100 --> 00:00:49.920
How can I do that?

00:00:49.920 --> 00:00:51.330
SURMA: What exactly do
you want to observe?

00:00:51.330 --> 00:00:53.650
Because you can usually
already know when it's done.

00:00:53.650 --> 00:00:54.470
Right?

00:00:54.470 --> 00:00:56.300
JAKE: Right, so it's
mostly about all

00:00:56.300 --> 00:00:57.920
of the stuff that
happens in between.

00:00:57.920 --> 00:00:58.790
SURMA: OK.

00:00:58.790 --> 00:00:59.900
What happens in between?

00:00:59.900 --> 00:01:04.010
JAKE: Well, things like it's
connecting to the server.

00:01:04.010 --> 00:01:05.010
It's connected.

00:01:05.010 --> 00:01:06.540
It's waiting for headers.

00:01:06.540 --> 00:01:07.790
It has headers.

00:01:07.790 --> 00:01:09.020
And then things like--

00:01:09.020 --> 00:01:12.570
well, there'll be upload
progress, download progress.

00:01:12.570 --> 00:01:13.649
SURMA: Oh, that's good.

00:01:13.649 --> 00:01:16.190
JAKE: And those two things can
happen at the same time, which

00:01:16.190 --> 00:01:16.700
I didn't know.

00:01:16.700 --> 00:01:18.530
You can be uploading
while you're downloading.

00:01:18.530 --> 00:01:20.290
This will give you that
piece of information.

00:01:20.290 --> 00:01:21.873
And it will be like
a separate object,

00:01:21.873 --> 00:01:24.710
so you can pass that to
another piece of code

00:01:24.710 --> 00:01:27.020
so they can observe the
fetch without having

00:01:27.020 --> 00:01:28.260
any control over it.

00:01:28.260 --> 00:01:30.160
SURMA: So could I--
so I do a fetch.

00:01:30.160 --> 00:01:31.340
I'm a service worker.

00:01:31.340 --> 00:01:33.881
Like, let's say a download for
a bigger file, a bigger asset.

00:01:33.881 --> 00:01:37.280
Can I take out the observer,
pass it to the main thread,

00:01:37.280 --> 00:01:40.072
and have a UI update?

00:01:40.072 --> 00:01:42.530
That's one of the things that
probably are going to happen.

00:01:42.530 --> 00:01:43.730
You want to download
something in the service

00:01:43.730 --> 00:01:45.050
worker in the
background, but have a UI

00:01:45.050 --> 00:01:47.060
that updates in real time
and with the progress?

00:01:47.060 --> 00:01:47.976
JAKE: That's exciting.

00:01:47.976 --> 00:01:50.390
That will probably
be V2, but it might

00:01:50.390 --> 00:01:52.980
be V2 that actually happens
because that's a good use case.

00:01:52.980 --> 00:01:56.434
But you will also, if you're
sending that to the page,

00:01:56.434 --> 00:01:58.100
then you'll definitely
be able to get it

00:01:58.100 --> 00:02:01.040
from the FetchObserver
from the page side.

00:02:01.040 --> 00:02:02.960
And it's also where
we can start adding

00:02:02.960 --> 00:02:06.680
extra bits of observation,
such as observing push,

00:02:06.680 --> 00:02:07.676
like H2 push.

00:02:07.676 --> 00:02:09.259
SURMA: Oh, that's
interesting because,

00:02:09.259 --> 00:02:10.880
so far, you don't know
when something gets pushed.

00:02:10.880 --> 00:02:11.390
JAKE: Nope.

00:02:11.390 --> 00:02:13.556
So the idea is we could
have, on this FetchObserver,

00:02:13.556 --> 00:02:16.180
an event that says,
you've been given this.

00:02:16.180 --> 00:02:17.000
Do you want it?

00:02:17.000 --> 00:02:20.765
And you'll have a way to sort
of consume it and bring that

00:02:20.765 --> 00:02:23.239
through the network
into a promise.

00:02:23.239 --> 00:02:24.780
SURMA: I'm really
excited about that.

00:02:24.780 --> 00:02:26.890
JAKE: Cool.

00:02:26.890 --> 00:02:29.390
[CHRISTMAS MUSIC ALARM PLAYING]

00:02:30.770 --> 00:02:32.824
SURMA: The Import function.

00:02:32.824 --> 00:02:35.092
JAKE: OK, it's a function?

00:02:35.092 --> 00:02:36.300
SURMA: Well, technically, no.

00:02:36.300 --> 00:02:37.070
But that's the difference--

00:02:37.070 --> 00:02:37.370
JAKE: What?

00:02:37.370 --> 00:02:39.869
You've already lied to me in
one of the words you just said.

00:02:39.869 --> 00:02:41.420
SURMA: I know.

