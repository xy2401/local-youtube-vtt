WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.000 --> 00:00:10.195
Paul: 现在轮到我来吐槽一下了
[MUSIC  PLAYING]  PAUL: So it's my turn to get things off my chest I feel.

00:00:10.195 --> 00:00:13.000
我最近创建了一个Chrom Dev Summit网站
I recently built the Chrome Dev Summit site.

00:00:13.000 --> 00:00:15.431
Jake：我也认为你做了一个非常棒的工作
JAKE: And a mighty fine job I thought you did, as well.

00:00:15.431 --> 00:00:16.180
Paul: 谢谢
PAUL: Thanks, pal.

00:00:16.180 --> 00:00:17.138
Jake：别客气
JAKE: That's all right.

00:00:17.138 --> 00:00:21.160
Paul：但是在我创建这个网站的过程中  我遇到了一些陷阱
PAUL: But on my journey through building that,  I discovered some gotchas.

00:00:21.160 --> 00:00:26.040
首先是 --Position Fixed--  告诉我你认为Position Fixed是什么意思
First up-- position fixed-- tell me  what you think position fixed actually does?

00:00:26.040 --> 00:00:32.525
Jake：把一个元件从网页本身分离出来 并且把元件放置在与视口（Viewport）相关的位置上
JAKE: Takes an element out of document flow,  and it positions it relative to the viewport.

00:00:32.525 --> 00:00:33.150
Paul：什么
PAUL: The what?

00:00:33.150 --> 00:00:33.500
Jake：Viewport
JAKE: The viewport.

00:00:33.500 --> 00:00:34.334
Paul：Viewport
PAUL: The viewport.

00:00:34.334 --> 00:00:34.875
Viewport
The viewport.

00:00:34.875 --> 00:00:35.440
Jake：对的
JAKE: Right.

00:00:35.440 --> 00:00:35.940
Paul：是的
PAUL: Right.

00:00:35.940 --> 00:00:37.510
Jake：我说的对吗
JAKE: Was I right?

00:00:37.510 --> 00:00:48.785
Paul：当你把一个会变形的元件的子元件设置为Position Fixed（你得到了另一个会变形的元件）并且这个子元件里面有另外一个子元件也是Position Fixed的时候
PAUL: When you apply a position fixed to a child of something  that has a transform-- so you got  another one with a transform-- and another element inside,  which is position fixed.

00:00:48.785 --> 00:00:52.210
Position Fixed的作用会改变
The position fixed behavior changes.

00:00:52.210 --> 00:00:55.590
这个会变形的子元件变成了一个新的容器元件
The transformed element becomes a new initial containing block.

00:00:55.590 --> 00:00:56.155
Jake：哇
JAKE: Whoa.

00:00:56.155 --> 00:00:56.655
真的吗
What?

00:00:56.655 --> 00:00:59.400
Paul：是的 它就像一个Viewport里面得一个新的Viewport
PAUL: Yeah, it's like a new viewport inside the viewport.

00:00:59.400 --> 00:01:09.140
所以我的做法是  因为我有一些卡片是要变形的  在变形结束后  我按比例改变所有变形的元件  这样才不会看到奇怪的效果  超级烦人的
So the way I did is it, because I  had these cards that were transforming,  at the end of the transition, I'd scale all the transforms,  so that I didn't see weirdness on the content-- so  frustrating.

00:01:09.140 --> 00:01:11.035
陷阱2号 -- Pop State
Gotcha number two-- pop state.

00:01:11.035 --> 00:01:13.920
Jake：Oh 是的 我曾经用过Pop State
JAKE: Oh, yeah, I've done pop state before.

00:01:13.920 --> 00:01:14.420
Paul：恩
PAUL: Yeah.

00:01:14.420 --> 00:01:17.170
你知道它会重置滚动条位置吗
Did you know that it restores scroll positions?

00:01:17.170 --> 00:01:18.451
Jake：不知道耶
JAKE: No, actually I didn't.

00:01:18.451 --> 00:01:18.950
Paul：是的
PAUL: Right.

00:01:18.950 --> 00:01:21.120
它也让我发狂
So this is bonkers to me.

00:01:21.120 --> 00:01:28.010
你用历史API做一些事情  你把一个state推出来  然后又把state弹走  因为你完全自己操控着APP state
You're doing something with the history API,  you're pushing states on, you're popping states off,  because you're handling app state yourself.

00:01:28.010 --> 00:01:31.810
但是浏览器会按照他们的想法来做  我知道你想做什么
But what the browsers all do is they go,  I know what you want to do.

00:01:31.810 --> 00:01:36.350
我知道你想重置滚动条的位置去你推出state的时候的位置
I know you want to restore the scroll position  at the point at which you did push state.

00:01:36.350 --> 00:01:38.430
但是如果你在做一些异步的事情  对吧
Which is, if you're doing something async, right?

00:01:38.430 --> 00:01:40.040
如果你在做一些…… Jake：就是之前我做的所有事情
If you're doing something--  JAKE: Which is what I've always done in the past.

00:01:40.040 --> 00:01:44.870
Paul：是的  就是突然的  你的页面会回到它之前滚动条的位置
PAUL: --yeah, then all of a sudden,  your page would just snap down to  its previous scroll position.

00:01:44.870 --> 00:01:46.735
我认为我可以修理好它
I thought I can fix this.

00:01:46.735 --> 00:01:49.110
我会想些偏方来解决它  手枪
I'll work around it-- gun fingers.

00:01:49.110 --> 00:01:50.650
Jake: 嘭 嘭
JAKE: [CLICKING SOUND] pow pow.

00:01:50.650 --> 00:01:58.000
Paul：我要做的是为滚动条位置创建一个Listener  如果它在关掉PopState之后改变了    它会滚动一次
PAUL: What I'll do is I'll have a single listener  for scroll position, and when it switches, after the pop state,  it'll do one scroll.

00:01:58.000 --> 00:01:58.800
滚回应该的位置
I'll reverse it.

00:01:58.800 --> 00:01:59.300
Jake：让它再滚回来
JAKE: Pull it back.

00:01:59.300 --> 00:02:02.020
Paul：然后它会像  呵呵  什么都没发生一样 完美
PAUL: And they'll be like, haha, never happened-- shazam.

00:02:02.020 --> 00:02:02.670
Jake：是的  Paul：不
JAKE：Yeah  PAUL：No.

00:02:02.670 --> 00:02:06.590
因为Chrome是这么做的  它在pop state之后做这个滚动动作
Because Chrome does that-- it does the scroll  after the pop state.

00:02:06.590 --> 00:02:08.229
而Firefox是在它之前做
Firefox does it before.

00:02:08.229 --> 00:02:11.045
所以你实际上并不知道你是从哪里开始滚动的
So you actually don't know where you scrolled from.

00:02:11.045 --> 00:02:14.800
你只是很确定地知道你不是在你之前的位置
You just know that you're pretty certain you're not  in the scroll position you were before.

00:02:14.800 --> 00:02:17.704
说到滚动 --最后一个-- Body
Talking of scrolling-- last one-- body.

00:02:17.704 --> 00:02:19.870
你知道你不能终止Body的滚动吗
Did you know you can't stop the body from scrolling?

00:02:19.870 --> 00:02:21.760
Jake：实际上  那是我下一张专辑的名字 （说笑而已）
JAKE: That's the name of my next album, actually.

00:02:21.760 --> 00:02:22.468
Paul：是的 Jake
PAUL: Yeah, Jake.

00:02:22.468 --> 00:02:23.500
那太棒了
That's great.

00:02:23.500 --> 00:02:24.530
Jake：用鼠标滑轮事件
JAKE: Mousewheel events?

00:02:24.530 --> 00:02:26.863
Paul：你可以那么做  但是在移动设备上根本不起作用
PAUL: You could, but that's not going to work on mobile.

00:02:26.863 --> 00:02:29.720
Jake：移动设备上 你有触碰事件
JAKE: On mobile-- which you have touch events.

00:02:29.720 --> 00:02:30.480
Paul：不是的
PAUL: No.

00:02:30.480 --> 00:02:30.980
没有
No.

00:02:30.980 --> 00:02:32.894
Jake：那么你就不得不重新去实现所有关于滚动的东西
JAKE: Because then you're going to have  to re-implement all of scrolling.

00:02:32.894 --> 00:02:34.530
Paul：是的 所有沿着Y轴移动的内容
PAUL: All the fling physics-y stuff.

00:02:34.530 --> 00:02:38.644
Jake：如果你这样做了  你会丢掉性能  丢掉所有的东西
JAKE: And if you do that, you've lost performance,  lost everything, your life.

00:02:38.644 --> 00:02:39.310
Paul：算了吧
PAUL: Forget it.

00:02:39.310 --> 00:02:39.840
表那样做
Not doing that.

00:02:39.840 --> 00:02:40.423
不喜欢那样
Don't like it.

00:02:40.423 --> 00:02:41.201
不想要那样
Don't want it.

00:02:41.201 --> 00:02:43.450
因为那些卡片又会被扩展
Because what happens, again, these cards, they expand.

00:02:43.450 --> 00:02:45.033
需要可滚动的内容在里面
They've got scrollable content inside.

00:02:45.033 --> 00:02:49.340
当它们到达可滚动内容的底部的时候  Body会说  我会处理这个
When they reach the bottom of their scrolling content,  the body goes, I will deal this.

00:02:49.340 --> 00:02:50.740
现在我要滚动了
I'll start scrolling now.

00:02:50.740 --> 00:02:55.020
其实有一个应急方法  开发者能做的  你知道是什么吗
Well, there is an escape hatch, an ability for a developer  to go, you know what?

00:02:55.020 --> 00:02:57.507
我想掌控这个
I want to take control of this.

00:02:57.507 --> 00:02:59.090
我知道这种情况应该做什么
I know what's supposed to happen here.

00:02:59.090 --> 00:03:00.160
我会处理这个
I will deal with it.

00:03:00.160 --> 00:03:01.610
可扩展网页会说  吁
So extensible web says, nah.

00:03:01.610 --> 00:03:03.261
Jake：吁
JAKE: Nah.

00:03:03.261 --> 00:03:03.760
Paul：是吧
PAUL: Right?

00:03:03.760 --> 00:03:05.240
是的
Exactly.

00:03:05.240 --> 00:03:07.560
好消息是
Good news, though. There is

00:03:07.560 --> 00:03:18.570
在Spec Land 在discussion world （不知道指什么）有一个beforeScroll事件  它有一个CSS属性是关于滚动应该被什么中止
In spec land, in discussion world,  there is before scroll, which is an event,  and its corresponding CSS properties around what  scrolling should be blocked on.

00:03:18.570 --> 00:03:22.010
但是默认的行为还是和今天一样
But the default behavior still remains as it is today.

00:03:22.010 --> 00:03:25.100
它给了开发者更多的选择  我知道我在做什么
It gives developers more options to say, I know what I'm doing.

00:03:25.100 --> 00:03:27.520
让我把汽车调到手动挡  Jake：手动挡
Please let me put the car into my manual--  JAKE: Manual.

00:03:27.520 --> 00:03:31.020
Paul：或者叫手动变速器  就像它以前一样  我们会从那个状态做起
PAUL: --or stick shift, as it were, and we'll go from there.

00:03:31.020 --> 00:03:34.330
所以从可扩展网页的观点来开 耶
So from an extensible web point of view, yay.

00:03:34.330 --> 00:03:34.970
Jake: 耶
JAKE: Yay.

