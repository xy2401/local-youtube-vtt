WEBVTT
Kind: captions
Language: en

00:00:00.259 --> 00:00:02.300
PAUL: You see, you've got
that look on your face,

00:00:02.300 --> 00:00:03.883
because you know
you're winding me up.

00:00:03.883 --> 00:00:04.565
JAKE: Yes, I do.

00:00:04.565 --> 00:00:05.064
PAUL: Yeah.

00:00:05.064 --> 00:00:05.720
Yeah, you are.

00:00:05.720 --> 00:00:06.912
All your problems are gone.

00:00:06.912 --> 00:00:08.620
JAKE: So what's your
problem, then, Paul?

00:00:08.620 --> 00:00:10.820
PAUL: My problem with
this is the page load

00:00:10.820 --> 00:00:13.190
time is this proxy for
all your performance

00:00:13.190 --> 00:00:14.120
problems are sorted.

00:00:14.120 --> 00:00:17.010
No, no, and again--
once again, no.

00:00:17.010 --> 00:00:17.970
Right?

00:00:17.970 --> 00:00:19.520
I've got two major
issues right now.

00:00:19.520 --> 00:00:23.910
One is to get good page load
time, people defer everything

00:00:23.910 --> 00:00:25.180
to DOM content loaded.

00:00:25.180 --> 00:00:25.680
JAKE: Right.

00:00:25.680 --> 00:00:27.471
PAUL: And they-- or
body load, or whatever.

00:00:27.471 --> 00:00:30.630
And they create-- I like to
think of as a 9:00 AM rush hour

00:00:30.630 --> 00:00:31.324
problem.

00:00:31.324 --> 00:00:32.990
They all go, you know
what we should do?

00:00:32.990 --> 00:00:35.550
We should make sure the roads
are all clear until 8:45,

00:00:35.550 --> 00:00:37.300
and then everybody
should go on the roads.

00:00:37.300 --> 00:00:39.550
JAKE: So what's the effect
of this that you're seeing?

00:00:39.550 --> 00:00:43.472
It's that as you-- as the page
loads, it has a moment of jank?

00:00:43.472 --> 00:00:44.930
PAUL: More than a
moment, actually.

00:00:44.930 --> 00:00:47.680
It's like-- honestly, it can
be at least several seconds.

00:00:47.680 --> 00:00:50.470
Because we know that when
people first hit a page,

00:00:50.470 --> 00:00:53.690
the first thing they try and
do is tap, or scroll, some kind

00:00:53.690 --> 00:00:55.050
of interaction.

00:00:55.050 --> 00:00:57.310
And it's the very
time that we've all

00:00:57.310 --> 00:00:59.260
chosen to do all our work.

00:00:59.260 --> 00:00:59.760
JAKE: Yeah.

00:00:59.760 --> 00:01:01.140
PAUL: And it drives me mad.

00:01:01.140 --> 00:01:04.400
This is not-- you can
get a good first paint,

00:01:04.400 --> 00:01:06.470
and then completely hose
the user's expectation

00:01:06.470 --> 00:01:07.150
by doing this.

00:01:07.150 --> 00:01:10.274
[MUSIC PLAYING]

00:01:14.759 --> 00:01:16.300
And then the other
thing that bothers

00:01:16.300 --> 00:01:19.704
me is this, kind of,
disregard for anything that

00:01:19.704 --> 00:01:20.870
happens after the page load.

00:01:20.870 --> 00:01:22.000
Like, I've got it on the screen.

00:01:22.000 --> 00:01:24.270
It's now the browser's problem
if it doesn't scroll well,

00:01:24.270 --> 00:01:25.769
if it doesn't
transition well, if it

00:01:25.769 --> 00:01:27.950
doesn't stick to
finger when they're

00:01:27.950 --> 00:01:29.347
interacting in some ways.

00:01:29.347 --> 00:01:30.930
JAKE: Well, 50% of
the answer will be,

00:01:30.930 --> 00:01:32.280
have you tried virtual DOM?

00:01:32.280 --> 00:01:32.870
PAUL: So vDOM.

00:01:32.870 --> 00:01:34.470
All right, fine.

00:01:34.470 --> 00:01:37.290
I think vDOM is actually
a very clever idea.

00:01:37.290 --> 00:01:39.710
Because I think
what it's doing is

00:01:39.710 --> 00:01:43.614
it's making sure you don't
shoot yourself in the foot.

00:01:43.614 --> 00:01:44.780
JAKE: This is the key to it.

00:01:44.780 --> 00:01:45.367
I don't know.

00:01:45.367 --> 00:01:47.450
When people say that to
me, it feels like-- I say,

00:01:47.450 --> 00:01:49.280
oh, god, my train
journey takes quite long.

00:01:49.280 --> 00:01:51.480
It's like 40 minutes.

00:01:51.480 --> 00:01:53.370
And people say,
ah, have you tried

00:01:53.370 --> 00:01:55.180
wearing better running shoes?

00:01:55.180 --> 00:01:58.689
It's like, well, I'm still
going to be there on the train,

00:01:58.689 --> 00:01:59.730
with those running shoes.

00:01:59.730 --> 00:02:03.340
And so if things like React
that do the virtual DOM thing,

00:02:03.340 --> 00:02:05.090
they are still going
to work with the DOM?

00:02:05.090 --> 00:02:05.590
PAUL: Yeah.

00:02:05.590 --> 00:02:07.250
JAKE: Like, if you
have 100 elements

00:02:07.250 --> 00:02:09.780
to create on the page, that
will be slower with React.

00:02:09.780 --> 00:02:10.280
PAUL: Yeah.

00:02:10.280 --> 00:02:11.830
JAKE: Because React
is on the top.

00:02:11.830 --> 00:02:12.860
PAUL: Yes.

00:02:12.860 --> 00:02:15.600
And also, I've seen
timeline traces

00:02:15.600 --> 00:02:17.560
where all the work was React.

00:02:17.560 --> 00:02:19.722
That's not React's
fault, but it struck me

00:02:19.722 --> 00:02:22.180
that the developer might be
thinking, well, essentially all

00:02:22.180 --> 00:02:24.360
the work I do in React,
or all the work I

00:02:24.360 --> 00:02:26.210
do with vDOM is free.

00:02:26.210 --> 00:02:28.805
It's only the bit at the end
that I have to pay the cost on.

00:02:28.805 --> 00:02:30.680
JAKE: But where things
like React really come

00:02:30.680 --> 00:02:33.250
into their own is where
you can just sort of-- you

00:02:33.250 --> 00:02:36.600
can create a whole load of new
objects to represent the DOM

00:02:36.600 --> 00:02:38.480
and say, this is what
it should look like.

00:02:38.480 --> 00:02:39.200
PAUL: Right.

00:02:39.200 --> 00:02:42.410
JAKE: You can write your
code really naively,

00:02:42.410 --> 00:02:45.000
and React will cater for that.

00:02:45.000 --> 00:02:47.730
And rather than create a
whole set of corresponding DOM

00:02:47.730 --> 00:02:49.980
elements, it will take
what's already there,

00:02:49.980 --> 00:02:52.510
move that all around,
change the order,

00:02:52.510 --> 00:02:54.190
and just create the
new stuff it needs.

00:02:54.190 --> 00:02:57.390
And that's the sort of
practical performance benefit.

00:02:57.390 --> 00:02:59.030
It's not the DOM that's slow.

00:02:59.030 --> 00:03:00.331
It's kind of your use of it.

00:03:00.331 --> 00:03:01.330
PAUL: I think-- exactly.

00:03:01.330 --> 00:03:02.735
It's very much your use of it.

00:03:02.735 --> 00:03:05.150
I think it's very nice
to have the headlines,

00:03:05.150 --> 00:03:06.642
like, the DOM is slow.

00:03:06.642 --> 00:03:08.730
Or always use CSS animations.

00:03:08.730 --> 00:03:09.340
But, no.

00:03:09.340 --> 00:03:11.666
Because it completely
misses the nuance.

00:03:11.666 --> 00:03:13.040
JAKE: This is
something I've been

00:03:13.040 --> 00:03:16.670
kind of exploring more and more
recently is that displaying

00:03:16.670 --> 00:03:18.500
what looks like a
complete interface,

00:03:18.500 --> 00:03:20.970
but it's not actually ready.

00:03:20.970 --> 00:03:21.620
Is that OK?

00:03:21.620 --> 00:03:23.025
Is that something you--

00:03:23.025 --> 00:03:24.470
PAUL: Yeah.

00:03:24.470 --> 00:03:27.580
Well, so long as the thing
that they want to interact with

00:03:27.580 --> 00:03:29.470
will work.

00:03:29.470 --> 00:03:32.070
JAKE: This is the problem
with what Apple recommend

00:03:32.070 --> 00:03:34.260
with their-- because
they have only

00:03:34.260 --> 00:03:36.490
a few dimensions of phones.

00:03:36.490 --> 00:03:39.485
You can include essentially
screenshots of every device

00:03:39.485 --> 00:03:41.964
as your initial render.

00:03:41.964 --> 00:03:44.130
The problem with that is
that it won't be clickable.

00:03:44.130 --> 00:03:46.338
So I think what they recommend
is just something that

00:03:46.338 --> 00:03:47.750
has the colored bars and stuff?

00:03:47.750 --> 00:03:48.250
PAUL: Yeah.

00:03:48.250 --> 00:03:50.625
JAKE: I think we should be
doing more of that on the web.

00:03:50.625 --> 00:03:53.450
But not with bitmaps, because
windows can be any size.

00:03:53.450 --> 00:03:57.750
But with something with just
a very small blob of CSS,

00:03:57.750 --> 00:03:59.235
a little bit of
HTML and Flexbox,

00:03:59.235 --> 00:04:00.750
or whatever it is, just
to do your sort of basic--

00:04:00.750 --> 00:04:01.720
PAUL: Bare bones.

00:04:01.720 --> 00:04:02.399
Yeah.

00:04:02.399 --> 00:04:03.690
I think that's absolutely fine.

00:04:03.690 --> 00:04:06.660
Like, that has to be part of it.

00:04:06.660 --> 00:04:09.920
Perceived performance is a huge
part of this whole discussion.

00:04:09.920 --> 00:04:12.840
And I think as Service
Worker is more widely

00:04:12.840 --> 00:04:16.910
used, as we get to this
kind of fast bootstrapping

00:04:16.910 --> 00:04:18.850
offline-y world,
where people are

00:04:18.850 --> 00:04:21.190
sort of tapping on things
from their home screen,

00:04:21.190 --> 00:04:23.430
well, it's all
this bit afterwards

00:04:23.430 --> 00:04:25.830
that actually is going to
shape user expectation.

00:04:25.830 --> 00:04:27.090
That's the bit they're
going to notice.

00:04:27.090 --> 00:04:28.590
They're going to
decide whether or not

00:04:28.590 --> 00:04:30.840
to use your thing not because
of how quickly it loads,

00:04:30.840 --> 00:04:33.270
because that would be a
fraction of a second, probably.

00:04:33.270 --> 00:04:34.860
But it'd be all that
other stuff afterwards.

00:04:34.860 --> 00:04:36.010
It says, what do
they care about?

00:04:36.010 --> 00:04:37.300
What do they actually notice?

00:04:37.300 --> 00:04:38.570
What do they perceive?

00:04:38.570 --> 00:04:39.695
That's the thing to target.

00:04:39.695 --> 00:04:42.278
And, of course, on the developer
side, this is the idle stuff.

00:04:42.278 --> 00:04:44.180
There's that kind of--
what can we actually

00:04:44.180 --> 00:04:45.770
give to the user
to make them feel

00:04:45.770 --> 00:04:48.450
like they're getting the right
response in the right time?

00:04:48.450 --> 00:04:51.116
But it may be that there's a bit
of sleight of hand on our part,

00:04:51.116 --> 00:04:51.670
for sure.

00:04:51.670 --> 00:04:52.170
JAKE: Hm.

00:04:52.170 --> 00:04:55.520
[MUSIC PLAYING]

