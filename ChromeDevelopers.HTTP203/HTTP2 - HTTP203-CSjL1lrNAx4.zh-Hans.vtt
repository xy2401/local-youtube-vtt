WEBVTT
Kind: captions
Language: zh-Hans

00:00:04.311 --> 00:00:06.227
 PAUL：哦，哦。 

00:00:06.227 --> 00:00:07.748
杰克：哇，耶稣，伙计。 

00:00:07.748 --> 00:00:08.676
 PAUL：对不起。 

00:00:08.676 --> 00:00:10.068
 [笑声] 

00:00:10.068 --> 00:00:12.937
您如何看待足球比赛？ 

00:00:12.937 --> 00:00:14.770
杰克：好吧，只要不是你在玩， 

00:00:14.770 --> 00:00:16.226
伴侣，因为那太荒谬了。 

00:00:16.226 --> 00:00:17.100
 PAUL：好的。 

00:00:17.100 --> 00:00:17.600
 ！ 

00:00:17.600 --> 00:00:19.230
 [音乐播放] 

00:00:25.670 --> 00:00:27.200
杰克：游戏什么时候开始？ 

00:00:27.200 --> 00:00:33.684
 PAUL：嗯-星期二。 

00:00:33.684 --> 00:00:34.183
杰克：嗯。 

00:00:37.340 --> 00:00:39.310
那时那是一次浪费的旅程。 

00:00:39.310 --> 00:00:41.360
 PAUL：不过，我们得到了很好的雨披。 

00:00:41.360 --> 00:00:42.232
杰克：嗯。 

00:00:42.232 --> 00:00:44.552
 PAUL：对英格兰来说会很好。 

00:00:44.552 --> 00:00:46.176
杰克：很难，不是吗？ 

00:00:46.176 --> 00:00:47.266
保罗：为什么？ 

00:00:47.266 --> 00:00:48.980
杰克：HTTP2。 

00:00:48.980 --> 00:00:50.260
保罗：为什么？ 

00:00:50.260 --> 00:00:52.440
杰克：好吧，我们得转身说- 

00:00:52.440 --> 00:00:53.210
 PAUL：大声笑，不。 

00:00:53.210 --> 00:00:53.960
杰克：对不起，伙计们。 

00:00:53.960 --> 00:00:54.970
 PAUL：是的，这全都坏了吧？ 

00:00:54.970 --> 00:00:56.386
杰克：你知道我们说的话吗？ 

00:00:56.386 --> 00:00:57.920
我们在说谎。 

00:00:57.920 --> 00:01:00.770
我们必须改变您所做的一切。 

00:01:00.770 --> 00:01:02.770
使用HTTP2，规则全部更改。 

00:01:02.770 --> 00:01:03.290
保罗：是的。 

00:01:03.290 --> 00:01:05.206
因为好，让我们仔细考虑一下，对吧？ 

00:01:05.206 --> 00:01:08.210
由于这些请求，它们不再那么昂贵， 

00:01:08.210 --> 00:01:09.020
是吗

00:01:09.020 --> 00:01:10.570
因为有，这是什么？ 

00:01:10.570 --> 00:01:11.942
一个TCP流还是其他？ 

00:01:11.942 --> 00:01:12.650
杰克：是的，是的。 

00:01:12.650 --> 00:01:15.950
使用HTTP2，您甚至只有一个流，一个连接。 

00:01:15.950 --> 00:01:17.750
因此，请求新文件不会

00:01:17.750 --> 00:01:19.000
必须打开一个新的连接。 

00:01:19.000 --> 00:01:21.274
它只是复用流的所有部分。 

00:01:21.274 --> 00:01:22.190
 PAUL：那你现在呢？ 

00:01:22.190 --> 00:01:24.814
就像，您可以向下发送-或发送所有这些单独的文件。 

00:01:24.814 --> 00:01:26.460
因此精神消失了。 

00:01:26.460 --> 00:01:28.150
串联消失。 

00:01:28.150 --> 00:01:29.280
你还在排队吗？ 

00:01:29.280 --> 00:01:29.945
不，您可能不会。 

00:01:29.945 --> 00:01:30.445
你会？ 

00:01:30.445 --> 00:01:33.070
杰克：好吧，可能不是。 

00:01:33.070 --> 00:01:35.570
我的意思是，您仍然需要请求和响应。 

00:01:35.570 --> 00:01:37.777
但是所有这些标头都是压缩的。 

00:01:37.777 --> 00:01:38.610
 PAUL：哦，是的。 

00:01:38.610 --> 00:01:39.985
杰克：因为他们很重要。 

00:01:39.985 --> 00:01:43.000
就像在HTTP1中一样，您有一个K和一半的标题

00:01:43.000 --> 00:01:44.810
有时还有饼干等等。 

00:01:44.810 --> 00:01:47.050
如果乘以18 

00:01:47.050 --> 00:01:49.644
请求一个页面，该页面真的会堆积起来。 

00:01:49.644 --> 00:01:50.310
 PAUL：是的。 

00:01:50.310 --> 00:01:50.435
是的

00:01:50.435 --> 00:01:50.935
是的

00:01:50.935 --> 00:01:53.309
杰克：压缩就好了。 

00:01:53.309 --> 00:01:55.850
因为大多数情况下您也没有很慢的开始。 

00:01:55.850 --> 00:01:58.540
因为您在那个TCP连接上。 

00:01:58.540 --> 00:01:59.040
是。 

00:01:59.040 --> 00:02:02.372
所以我想你可能和我一样。 

00:02:02.372 --> 00:02:03.955
编写CSS时，您是否有喜欢

00:02:03.955 --> 00:02:06.280
组件和物品的CSS文件？ 

00:02:06.280 --> 00:02:07.280
 PAUL：是的，差不多。 

00:02:07.280 --> 00:02:08.521
我会这么说，大约。 

00:02:08.521 --> 00:02:09.979
杰克：我想我们可以说到重点

00:02:09.979 --> 00:02:12.050
我们只是单独提供所有这些文件。 

00:02:12.050 --> 00:02:14.050
 PAUL：听起来确实非常非常好。 

00:02:14.050 --> 00:02:17.730
因为它确实大大减少了构建步骤。 

00:02:17.730 --> 00:02:18.377
你懂？ 

00:02:18.377 --> 00:02:20.210
您只是，这是我做的。 

00:02:20.210 --> 00:02:21.360
现场直播。 

00:02:21.360 --> 00:02:21.860
那很好。 

00:02:21.860 --> 00:02:24.110
其实说推就是

00:02:24.110 --> 00:02:26.220
还有关于HTTP2的另一件事，不是吗？ 

00:02:26.220 --> 00:02:29.090
而且您知道，您可以请求一个文件并获取所有文件。 

00:02:29.090 --> 00:02:29.590
杰克：是的。 

00:02:29.590 --> 00:02:31.499
您可以说，哦，您想要页面吗？ 

00:02:31.499 --> 00:02:33.040
好吧，我要给你页面。 

00:02:33.040 --> 00:02:36.345
但是-特别奖金-这是一些CSS。 

00:02:36.345 --> 00:02:38.770
这是我知道您需要的一些JavaScript。 

00:02:38.770 --> 00:02:39.480
它会说，这就是

00:02:39.480 --> 00:02:40.750
您的请求看起来像。 

00:02:40.750 --> 00:02:42.070
回应来了。 

00:02:42.070 --> 00:02:43.560
只是把它扔给你。 

00:02:43.560 --> 00:02:45.440
 PAUL：唐纳-如果您已经掌握了该怎么办？ 

00:02:45.440 --> 00:02:47.510
杰克：是的，我在看这个。 

00:02:47.510 --> 00:02:52.370
客户端实际上可以发送RST_Stream数据包。 

00:02:52.370 --> 00:02:53.640
 PAUL：哦，哇，很吸引人。 

00:02:53.640 --> 00:02:54.240
杰克：是的。 

00:02:54.240 --> 00:02:57.570
这将告诉它识别特定的流

00:02:57.570 --> 00:02:59.690
说，你不能，伴侣吗？ 

00:02:59.690 --> 00:03:00.940
 PAUL：您可以退后吗？ 

00:03:00.940 --> 00:03:01.110
是啊

00:03:01.110 --> 00:03:01.880
杰克：你能阻止吗？ 

00:03:01.880 --> 00:03:02.930
 PAUL：我已经知道了

00:03:02.930 --> 00:03:03.805
杰克：已经知道了。 

00:03:03.805 --> 00:03:04.380
 PAUL：是的。 

00:03:04.380 --> 00:03:07.430
杰克：你最终可能会遇到一个情况， 

00:03:07.430 --> 00:03:10.490
当您将其发送到另一端时， 

00:03:10.490 --> 00:03:13.330
无论如何，它已经向您发送了整个文件。 

00:03:13.330 --> 00:03:15.210
因此，将有一些浪费的食物。 

00:03:15.210 --> 00:03:17.240
 PAUL：而且我们不知道那太糟了吧？ 

00:03:17.240 --> 00:03:18.656
杰克：我们认为这还不错。 

00:03:18.656 --> 00:03:19.250
是的

00:03:19.250 --> 00:03:20.295
 PAUL：这样可能更好

00:03:20.295 --> 00:03:22.630
而不是一遍又一遍地要求一切

00:03:22.630 --> 00:03:23.437
一遍又一遍。 

00:03:23.437 --> 00:03:25.770
好吧，您决定要忽略保罗和杰克的

00:03:25.770 --> 00:03:28.480
建议-明智地-因为HTTP2的启动。 

00:03:28.480 --> 00:03:30.106
但问题是，并非每个客户

00:03:30.106 --> 00:03:31.230
将意识到HTTP2。 

00:03:31.230 --> 00:03:31.730
对？ 

00:03:31.730 --> 00:03:33.850
您仍然拥有HTTP1客户端。 

00:03:33.850 --> 00:03:38.637
那么开发人员如何同时处理这两种情况呢？ 

00:03:38.637 --> 00:03:41.220
杰克：好吧，我的意思是，服务器将负责处理该问题。 

00:03:41.220 --> 00:03:42.020
自动。 

00:03:42.020 --> 00:03:44.040
但我接受你的问题。 

00:03:44.040 --> 00:03:45.240
我明白你的意思。 

00:03:45.240 --> 00:03:47.750
作为开发人员，您有这个问题吗？ 

00:03:47.750 --> 00:03:50.230
发挥HTTP2的优势？ 

00:03:50.230 --> 00:03:53.450
还是您对HTTP1有所怀疑？ 

00:03:53.450 --> 00:03:55.847
 PAUL：我认为你是否建造了东西

00:03:55.847 --> 00:03:57.430
仅适用于常绿浏览器， 

00:03:57.430 --> 00:03:58.852
你可能会很安全，就像，哦，我是

00:03:58.852 --> 00:04:00.101
只是要做HTTP2，对吧？ 

00:04:00.101 --> 00:04:02.389
杰克：是的，所以有多个CSS文件，多个JS文件， 

00:04:02.389 --> 00:04:03.180
一切都很好。 

00:04:03.180 --> 00:04:06.170
 PAUL：嗯，我想，哦，HTTP2， 

00:04:06.170 --> 00:04:08.589
它发送一个升级头，不是吗？ 

00:04:08.589 --> 00:04:09.380
杰克：是的，确实如此。 

00:04:09.380 --> 00:04:10.610
 PAUL：所以您可以在这方面有所区别。 

00:04:10.610 --> 00:04:12.818
如果我得到了升级标头，您可能会像， 

00:04:12.818 --> 00:04:15.040
我将向您发送HTTP2版本。 

00:04:15.040 --> 00:04:16.790
杰克：哦，我明白你在说什么。 

00:04:16.790 --> 00:04:18.420
 PAUL：那么您可能会在自己的版本中建立两个版本

00:04:18.420 --> 00:04:19.220
构建脚本。 

00:04:19.220 --> 00:04:22.910
就像，在一个中串联，而不在另一个中串联， 

00:04:22.910 --> 00:04:24.470
然后，基本上，区分

00:04:24.470 --> 00:04:25.830
根据该标题，您是否要去哪一个？ 

00:04:25.830 --> 00:04:26.260
你会发球。 

00:04:26.260 --> 00:04:27.170
杰克：你们两者兼得？ 

00:04:27.170 --> 00:04:27.600
 PAUL：啊哈哈！ 

00:04:27.600 --> 00:04:28.180
冠军，冠军，鸡肉晚餐。 

00:04:28.180 --> 00:04:29.388
杰克：哦，那是个好主意。 

00:04:29.388 --> 00:04:30.085
 PAUL：我喜欢。 

00:04:30.085 --> 00:04:33.760
杰克：我真正希望的一件事是边缘缓存

00:04:33.760 --> 00:04:37.250
服务，例如CloudFlare，Akamai，CDN， 

00:04:37.250 --> 00:04:39.170
他们已经在支持SPDY。 

00:04:39.170 --> 00:04:41.082
我认为Akamai已经支持HTTP2。 

00:04:41.082 --> 00:04:42.790
我真的很想从那些家伙那里看到

00:04:42.790 --> 00:04:46.440
让他们了解特定的标题

00:04:46.440 --> 00:04:48.590
我们的服务会发送。 

00:04:48.590 --> 00:04:51.710
因此，即使您正在运行HTTP 1.1， 

00:04:51.710 --> 00:04:54.390
您可以像发送链接预取标头一样发送。 

00:04:54.390 --> 00:04:57.450
它会将其解释为HTTP2推送。 

00:04:57.450 --> 00:04:59.440
 PAUL：这有点像中途之家。 

00:04:59.440 --> 00:05:01.866
就像我的服务器还没准备好完全使用HTTP2一样。 

00:05:01.866 --> 00:05:03.490
但是如果我给你这些额外的东西

00:05:03.490 --> 00:05:06.010
轻推一下，然后那些真正了解它的人， 

00:05:06.010 --> 00:05:08.530
你只是给他们一点点优势

00:05:08.530 --> 00:05:08.820
在做什么。 

00:05:08.820 --> 00:05:09.130
杰克：是的。 

00:05:09.130 --> 00:05:09.500
 PAUL：是的，我喜欢。 

00:05:09.500 --> 00:05:11.265
杰克：所以你甚至可以发送一个x标题，说，哦，你

00:05:11.265 --> 00:05:12.840
知道，x优先级或其他。 

00:05:12.840 --> 00:05:16.310
那将是最后向HTTP2部分发出的信号

00:05:16.310 --> 00:05:18.980
可以用这些东西做正确的事， 

00:05:18.980 --> 00:05:21.714
在数据流中发送正确的帧。 

00:05:21.714 --> 00:05:22.880
 PAUL：无论如何，我被卖了。 

00:05:22.880 --> 00:05:24.210
我认为这将会很棒。 

00:05:24.210 --> 00:05:27.160
我怀疑我们可能只需要道歉就可以了。 

00:05:27.160 --> 00:05:28.960
我们误导了每个开发人员

00:05:28.960 --> 00:05:29.960
在过去几年间。 

00:05:29.960 --> 00:05:31.900
杰克：在此之前的任何表演演讲

00:05:31.900 --> 00:05:33.030
是无效的。 

00:05:33.030 --> 00:05:34.095
 PAUL：是的。 

00:05:34.095 --> 00:05:36.220
杰克：会让我们看起来很傻，不是吗？ 

00:05:36.220 --> 00:05:40.970
 PAUL：嗯，这很尴尬。 

00:05:40.970 --> 00:05:43.420
 [音乐播放] 

