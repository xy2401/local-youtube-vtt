WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.030 --> 00:00:04.560
好吧，我们做一集，然后我们可以

00:00:02.070 --> 00:00:09.570
也许尝试在最后做一些

00:00:04.560 --> 00:00:23.519
让卢卡斯四处走走认为可以

00:00:09.570 --> 00:00:26.010
我是什么，所以我们花了最后一个

00:00:23.519 --> 00:00:30.150
几集谈论真实

00:00:26.010 --> 00:00:32.399
真实的事情让我们停下来，我们不要做

00:00:30.150 --> 00:00:34.649
是的，我想为什么不只是说话

00:00:32.399 --> 00:00:36.960
这次我有一些虚构的东西

00:00:34.649 --> 00:00:39.870
想谈谈导入地图

00:00:36.960 --> 00:00:41.370
一项非常重要的新提案

00:00:39.870 --> 00:00:44.340
早乱

00:00:41.370 --> 00:00:46.710
是的，让我们给它一个上下文，因为

00:00:44.340 --> 00:00:51.149
我看过我们有关于这个的文章

00:00:46.710 --> 00:00:53.730
就像你有点困惑

00:00:51.149 --> 00:00:57.000
关于某些功能的稳定性

00:00:53.730 --> 00:01:00.059
对艾莉森那里好

00:00:57.000 --> 00:01:01.980
是的，在我们谈论我是什么之前

00:01:00.059 --> 00:01:04.890
会说其中一些在Chrome Canary中

00:01:01.980 --> 00:01:06.930
有点像原产地审判，所以您可以

00:01:04.890 --> 00:01:08.430
在生产中进行实验

00:01:06.930 --> 00:01:10.200
整个原产地试验生产

00:01:08.430 --> 00:01:12.390
东西，但这些都不是一成不变的

00:01:10.200 --> 00:01:14.189
所以它仍然可以改变它的方式

00:01:12.390 --> 00:01:16.170
起作用为什么这个情节可能起作用

00:01:14.189 --> 00:01:17.880
完全没用的时候

00:01:16.170 --> 00:01:19.680
出来，所以我想这也差不多

00:01:17.880 --> 00:01:22.590
铬只有在这一点上喜欢它

00:01:19.680 --> 00:01:25.860
在旗帜后面有它，不，不，只是

00:01:22.590 --> 00:01:28.229
我只有铬，那是什么，什么

00:01:25.860 --> 00:01:29.970
这到底是什么，我要

00:01:28.229 --> 00:01:34.380
回答，因为我做了幻灯片， 

00:01:29.970 --> 00:01:36.689
我们导入模块的所有内容

00:01:34.380 --> 00:01:39.090
您的征费模块脚本，请参阅我使用了

00:01:36.689 --> 00:01:42.210
是的，这些IDB Cavell是

00:01:39.090 --> 00:01:45.450
不，不，我这次改变了

00:01:42.210 --> 00:01:47.399
但是尽管它对

00:01:45.450 --> 00:01:49.560
看到这样的事情是因为

00:01:47.399 --> 00:01:51.329
便笺导入就是这样

00:01:49.560 --> 00:01:53.460
大多数捆绑软件都支持这种

00:01:51.329 --> 00:01:55.229
说明符，我们只是说只是把

00:01:53.460 --> 00:01:57.180
记录包裹名称，然后我们将解决

00:01:55.229 --> 00:01:59.790
其余的以及这实际上的工作方式

00:01:57.180 --> 00:02:02.219
在节点中它将启动它，你知道

00:01:59.790 --> 00:02:05.180
如果模块包含此内容怎么办

00:02:02.219 --> 00:02:07.229
它将贯穿所有

00:02:05.180 --> 00:02:09.660
目录所有父目录

00:02:07.229 --> 00:02:12.840
寻找有节点的导演

00:02:09.660 --> 00:02:13.650
模块并列，所以一切顺利

00:02:12.840 --> 00:02:17.640
向上并尝试

00:02:13.650 --> 00:02:19.739
找到最接近的音符

00:02:17.640 --> 00:02:20.939
找到他们全部，哦，是的，我没有

00:02:19.739 --> 00:02:23.400
浪费物品并不能全部找到

00:02:20.939 --> 00:02:25.500
然后它将在以下位置找到modules文件夹

00:02:23.400 --> 00:02:26.730
像在我的硬盘根部一样

00:02:25.500 --> 00:02:28.650
我认为那行得通

00:02:26.730 --> 00:02:30.599
是的，令人惊讶，但随后还有

00:02:28.650 --> 00:02:32.340
特别的全球性

00:02:30.599 --> 00:02:36.629
模块，以便最后

00:02:32.340 --> 00:02:37.290
系统，是的，如果您执行npm install-G 

00:02:36.629 --> 00:02:40.079
 - G 

00:02:37.290 --> 00:02:42.239
哦，有新的全球性东西

00:02:40.079 --> 00:02:43.829
从来没有想过，是的，然后

00:02:42.239 --> 00:02:45.750
它将遍历所有这些并且

00:02:43.829 --> 00:02:47.849
它将查找名为comm的目录

00:02:45.750 --> 00:02:51.150
链接每个，如果

00:02:47.849 --> 00:02:54.659
会很好，所以它将

00:02:51.150 --> 00:02:56.670
通过他们是的，所以当它发现通讯

00:02:54.659 --> 00:02:59.040
链接其中之一，它将正确

00:02:56.670 --> 00:03:00.420
这是否有一个包杰森，如果它

00:02:59.040 --> 00:03:02.670
然后我要看的主要

00:03:00.420 --> 00:03:03.780
是的，那是我的脚本

00:03:02.670 --> 00:03:06.750
如果没有它就会加载

00:03:03.780 --> 00:03:08.370
我要尝试加载索引点JSP 

00:03:06.750 --> 00:03:09.209
尝试加载索引点Jason如果

00:03:08.370 --> 00:03:12.420
那不在那里，我将尝试

00:03:09.209 --> 00:03:15.090
加载类似二进制模块的索引节点

00:03:12.420 --> 00:03:17.489
就是这样，如果他们

00:03:15.090 --> 00:03:20.220
然后不去家伙目录

00:03:17.489 --> 00:03:21.780
是的，我们别无所求

00:03:20.220 --> 00:03:23.340
网络就是你在说的

00:03:21.780 --> 00:03:24.750
问题是我们从字面上无法做到

00:03:23.340 --> 00:03:26.699
在网络上，因为想象有多少

00:03:24.750 --> 00:03:28.829
要求它必须只找到

00:03:26.699 --> 00:03:32.609
对的脚本我太互动了，两个

00:03:28.829 --> 00:03:34.260
是的，半年了，所以我们

00:03:32.609 --> 00:03:36.239
需要一个新系统才能带来

00:03:34.260 --> 00:03:39.199
到网络上，这就是导入地图

00:03:36.239 --> 00:03:42.090
这就是我们要谈论的

00:03:39.199 --> 00:03:46.530
总共您输入的是新的脚本类型

00:03:42.090 --> 00:03:51.060
我也可以把文件放进去吗

00:03:46.530 --> 00:03:53.790
可以，你不应该，我们会继续

00:03:51.060 --> 00:03:56.549
为什么这就是它的样子

00:03:53.790 --> 00:03:58.590
您会看到它实际上是一张地图

00:03:56.549 --> 00:03:59.879
就像标识符一样

00:03:58.590 --> 00:04:02.790
有趣，因为我记得

00:03:59.879 --> 00:04:04.199
有一个规则，既动态

00:04:02.790 --> 00:04:06.359
他们必须开始的输入

00:04:04.199 --> 00:04:08.489
与亲戚斜线或喜欢

00:04:06.359 --> 00:04:10.889
他们是的绝对路径没有

00:04:08.489 --> 00:04:13.079
允许以这样的方式开始

00:04:10.889 --> 00:04:17.579
网络上的模块现在必须

00:04:13.079 --> 00:04:20.150
以点mm-hmm开头，我认为它具有

00:04:17.579 --> 00:04:24.659
像点点

00:04:20.150 --> 00:04:27.280
是发现斜杠有效URL还是斜杠

00:04:24.659 --> 00:04:29.919
对对好像这样

00:04:27.280 --> 00:04:33.400
所以这会让你现在

00:04:29.919 --> 00:04:35.800
你是我们的好人，所以有comlink 

00:04:33.400 --> 00:04:37.930
所以导入地图是不可能的

00:04:35.800 --> 00:04:39.009
确定可能与现有冲突

00:04:37.930 --> 00:04:43.389
生产代码现在在那里

00:04:39.009 --> 00:04:45.129
因为那个规则啊坚持下去

00:04:43.389 --> 00:04:47.460
做到这一点，但只要你有

00:04:45.129 --> 00:04:49.810
这些之一必须先

00:04:47.460 --> 00:04:51.189
任何进口任何东西

00:04:49.810 --> 00:04:53.469
导入声明，如果您具有以下之一

00:04:51.189 --> 00:04:55.090
这些稍后会错误

00:04:53.469 --> 00:04:57.069
您将在此脚本标签上收到错误消息

00:04:55.090 --> 00:04:58.900
它将被忽略，所以这

00:04:57.069 --> 00:05:01.210
你理想地知道就在

00:04:58.900 --> 00:05:02.169
您的文档中的其他所有内容，以及

00:05:01.210 --> 00:05:03.849
这是你必须找到罗比的地方

00:05:02.169 --> 00:05:04.750
不应该将它们放在文件中，那就是

00:05:03.849 --> 00:05:09.069
为什么你可能不应该把它们放在一个

00:05:04.750 --> 00:05:10.409
文件，但是现在可以正常工作了

00:05:09.069 --> 00:05:12.460
作品

00:05:10.409 --> 00:05:13.780
谢谢你破坏我的​​下一张幻灯片

00:05:12.460 --> 00:05:16.509
多次

00:05:13.780 --> 00:05:18.370
确定我们不排练这个权利是的，我

00:05:16.509 --> 00:05:19.779
会说你可以做到这一点，它有一个

00:05:18.370 --> 00:05:21.159
特殊的mime类型，但是的，您不应该

00:05:19.779 --> 00:05:23.800
因为那样你就拥有了

00:05:21.159 --> 00:05:27.189
行相同的事情，这意味着一个

00:05:23.800 --> 00:05:28.930
脚本类型导入映射也被延迟

00:05:27.189 --> 00:05:30.909
默认情况下，因为模块被延迟

00:05:28.930 --> 00:05:33.400
由df--知道这是不是

00:05:30.909 --> 00:05:35.469
会阻止任何东西的渲染

00:05:33.400 --> 00:05:40.000
我们将立即获取，它将

00:05:35.469 --> 00:05:41.830
使用if阻止后续脚本标签

00:05:40.000 --> 00:05:43.839
您在文件上加上了X，但

00:05:41.830 --> 00:05:46.750
脚本标记很高，您仍然应该

00:05:43.839 --> 00:05:48.819
很好，但这是我的其中之一，但是

00:05:46.750 --> 00:05:50.319
你应该很好，这是有原因的，我们

00:05:48.819 --> 00:05:52.150
内联脚本正确，如果您因为

00:05:50.319 --> 00:05:53.830
如果文件很小，则

00:05:52.150 --> 00:06:00.370
您为该请求支付的金额，以及

00:05:53.830 --> 00:06:02.349
回答是一个问题，是的， 

00:06:00.370 --> 00:06:03.610
他们会很感兴趣，所以如果

00:06:02.349 --> 00:06:05.199
我们在这里介绍的一些用例

00:06:03.610 --> 00:06:07.449
我也一直想知道有多大

00:06:05.199 --> 00:06:09.069
这些可能会得到，因为我们看到的东西

00:06:07.449 --> 00:06:12.039
我会说，但更多之一

00:06:09.069 --> 00:06:14.050
无聊的用例

00:06:12.039 --> 00:06:15.580
有趣的一毫米，这就是

00:06:14.050 --> 00:06:18.969
是我们之前可以举报的例子

00:06:15.580 --> 00:06:20.199
从容不迫，因为它在导入地图中，但是

00:06:18.969 --> 00:06:24.089
似乎就是通常的事情

00:06:20.199 --> 00:06:28.360
在节点土地的节点中，你会

00:06:24.089 --> 00:06:30.969
这真的很好，你做了吗

00:06:28.360 --> 00:06:33.789
这样的事情，所以有一个特殊的

00:06:30.969 --> 00:06:37.810
规则如果事物以斜线结尾，则

00:06:33.789 --> 00:06:40.479
您正在定义前缀哦，这是

00:06:37.810 --> 00:06:43.449
我真的很想，是的

00:06:40.479 --> 00:06:45.069
必须定义任何人分析全部的原因

00:06:43.449 --> 00:06:46.990
我拥有的进口并定义一张地图

00:06:45.069 --> 00:06:48.759
真的很整洁，但他们却没有

00:06:46.990 --> 00:06:50.889
有一个规则，我只能定义最后一个

00:06:48.759 --> 00:06:55.150
一个索引，假设它像一个

00:06:50.889 --> 00:06:58.870
注意不假设没有索引，并且

00:06:55.150 --> 00:07:00.939
像在节点这样的事情，你可能会错过

00:06:58.870 --> 00:07:02.770
扩展哦，是的，不知道我的意思

00:07:00.939 --> 00:07:03.999
那不仅仅可以使用import 

00:07:02.770 --> 00:07:06.580
地图可以解决，但您将拥有

00:07:03.999 --> 00:07:08.139
正确处理每个文件以及如何

00:07:06.580 --> 00:07:09.580
定义一切就像这是

00:07:08.139 --> 00:07:11.740
没有地图扩展名的东西

00:07:09.580 --> 00:07:14.289
带有扩展名的其他东西是这样

00:07:11.740 --> 00:07:16.810
你可以做到，但是mmm可能做到了

00:07:14.289 --> 00:07:21.189
除非出于某种原因没有其他用途

00:07:16.810 --> 00:07:23.979
围绕它，你也可以这样做

00:07:21.189 --> 00:07:27.189
可以像重写一样

00:07:23.979 --> 00:07:28.360
这已经是我可以的有效导入路径

00:07:27.189 --> 00:07:30.219
现在只说你知道它到底是什么

00:07:28.360 --> 00:07:33.159
这里绝对是

00:07:30.219 --> 00:07:34.360
哦，那天晚上，你可以说

00:07:33.159 --> 00:07:35.830
可以创造很多

00:07:34.360 --> 00:07:37.180
脚本所在的代码令人困惑

00:07:35.830 --> 00:07:38.409
我认为另一件事

00:07:37.180 --> 00:07:41.490
有一个非常有趣的用例

00:07:38.409 --> 00:07:44.529
对此我感到非常兴奋

00:07:41.490 --> 00:07:47.050
所以这是一个有效的例子，但是

00:07:44.529 --> 00:07:49.419
生产，它很有可能看起来更多

00:07:47.050 --> 00:07:51.729
是这样的，因为你应该在

00:07:49.419 --> 00:07:54.159
至少应该是因为良好的缓存

00:07:51.729 --> 00:07:56.080
您需要这个，您需要唯一的文件

00:07:54.159 --> 00:07:58.449
命名，然后如果您更改文件， 

00:07:56.080 --> 00:08:01.080
会看着这个，你去改变

00:07:58.449 --> 00:08:03.129
哈希，我为您设置了这个，我知道

00:08:01.080 --> 00:08:04.749
然后就意味着您已经更改了

00:08:03.129 --> 00:08:06.430
文件，以便每个这些资源都可以

00:08:04.749 --> 00:08:08.319
永远缓存是的，因为你改变了

00:08:06.430 --> 00:08:10.120
更改文件时

00:08:08.319 --> 00:08:12.430
内容，但这是问题

00:08:10.120 --> 00:08:15.189
您现在还更改了

00:08:12.430 --> 00:08:16.300
父文件是的，所以您需要

00:08:15.189 --> 00:08:18.219
更新该文件的哈希

00:08:16.300 --> 00:08:19.749
是的，如果没有其他改变，人们会

00:08:18.219 --> 00:08:22.870
下载完全相同的文件

00:08:19.749 --> 00:08:25.389
除了进口，现在

00:08:22.870 --> 00:08:25.719
导入，我知道你要去哪里

00:08:25.389 --> 00:08:28.029
这个

00:08:25.719 --> 00:08:30.610
是的，即使一个小模块改变了你

00:08:28.029 --> 00:08:32.949
最终像大规模预验证一样进行验证

00:08:30.610 --> 00:08:34.659
实际上总是喜欢整个

00:08:32.949 --> 00:08:36.789
从哪里变化到

00:08:34.659 --> 00:08:38.949
你的事情的根源至少是那一件事

00:08:36.789 --> 00:08:40.810
分支可能会更多

00:08:38.949 --> 00:08:42.729
无效，所以这个想法是如果我们

00:08:40.810 --> 00:08:45.339
可以做到这一点，然后在你的

00:08:42.729 --> 00:08:47.380
导入地图就是一切

00:08:45.339 --> 00:08:51.100
非常好，这意味着如果您进行更改

00:08:47.380 --> 00:08:52.540
 foo，我们刚换了foo watch，所以

00:08:51.100 --> 00:08:54.400
有趣，就像我说的那样

00:08:52.540 --> 00:08:57.430
可能与

00:08:54.400 --> 00:08:59.920
 HTTP重定向或重写，因为它

00:08:57.430 --> 00:09:02.620
不会完全符合您的HTTP缓存

00:08:59.920 --> 00:09:04.090
可以在服务员那里做到

00:09:02.620 --> 00:09:06.040
可以在您的服务人员中做到这一点

00:09:04.090 --> 00:09:07.240
可以拦截所有这些东西，但是它

00:09:06.040 --> 00:09:08.530
首先不会在那里

00:09:07.240 --> 00:09:09.130
询问您的服务人员是否

00:09:08.530 --> 00:09:11.230
已安装

00:09:09.130 --> 00:09:13.270
而在更多地图中导入则为

00:09:11.230 --> 00:09:14.620
就是在那里，我们就是

00:09:13.270 --> 00:09:16.060
真正令我们兴奋的使用代码

00:09:14.620 --> 00:09:17.710
我认为这很棒，所以

00:09:16.060 --> 00:09:20.620
表示是的，用户显然会拥有

00:09:17.710 --> 00:09:23.320
下载新食物bla bla bla bla 

00:09:20.620 --> 00:09:24.820
但通常只有那个

00:09:23.320 --> 00:09:27.280
小链条无需休息即可

00:09:24.820 --> 00:09:28.870
仍然只是依靠你知道必须加载

00:09:27.280 --> 00:09:30.430
执行之前所有静态导入

00:09:28.870 --> 00:09:34.060
所以一切都会正常工作并保持

00:09:30.430 --> 00:09:38.170
我在工作，所以我认为是的

00:09:34.060 --> 00:09:40.300
一个可爱的小用例，所以这很有趣

00:09:38.170 --> 00:09:42.250
一个哦，所以没有一个游戏比

00:09:40.300 --> 00:09:44.560
虽然我说了这些

00:09:42.250 --> 00:09:46.030
这些导入地图脚本的脚本

00:09:44.560 --> 00:09:48.280
他们必须先于

00:09:46.030 --> 00:09:49.660
导入任何东西或无效无效，因此

00:09:48.280 --> 00:09:50.920
你必须是哦，他们实际上是

00:09:49.660 --> 00:09:52.540
无效，我没意识到

00:09:50.920 --> 00:09:54.310
就像上面的模块一样

00:09:52.540 --> 00:09:58.090
尊重他们，不是，这会出错

00:09:54.310 --> 00:10:01.690
忽略我可能是个好主意

00:09:58.090 --> 00:10:04.420
这样就不会出错模块

00:10:01.690 --> 00:10:06.640
对用户错误的错误不适错误

00:10:04.420 --> 00:10:09.100
是的，这是不正确的

00:10:06.640 --> 00:10:11.530
放置然后再放另一件事

00:10:09.100 --> 00:10:13.930
有无效的导入语句可以

00:10:11.530 --> 00:10:15.850
但您仍然可以创建它们

00:10:13.930 --> 00:10:17.710
只要您仍然动态

00:10:15.850 --> 00:10:19.240
在任何以下情况之前进行动态校正

00:10:17.710 --> 00:10:20.200
您的进口，我认为这是真的

00:10:19.240 --> 00:10:22.060
很酷，因为你可能有东西

00:10:20.200 --> 00:10:23.110
像这样在这里进行功能测试

00:10:22.060 --> 00:10:25.630
毫米-毫米

00:10:23.110 --> 00:10:27.160
就像哦，是因为可能像

00:10:25.630 --> 00:10:29.350
新的JavaScript东西可能是新的Dom 

00:10:27.160 --> 00:10:31.930
东西读了我们的脚本语法，你

00:10:29.350 --> 00:10:34.420
可以说现在抛弃其中之一

00:10:31.930 --> 00:10:37.870
这些导入地图，因此加载主要

00:10:34.420 --> 00:10:39.760
例如贷款我可以说你有

00:10:37.870 --> 00:10:41.350
真的会出现流转换

00:10:39.760 --> 00:10:43.660
可写流，如果我愿意，我只是

00:10:41.350 --> 00:10:45.190
创建此重定向到一个小文件

00:10:43.660 --> 00:10:47.580
我们只是出口本地

00:10:45.190 --> 00:10:49.840
应用程序，如果不加载整个

00:10:47.580 --> 00:10:52.720
 polyfill在我的代码中只是

00:10:49.840 --> 00:10:54.190
导入一个普通模块是的，他会

00:10:52.720 --> 00:10:56.410
如果需要的话，我们将获得polyfill 

00:10:54.190 --> 00:10:57.880
否则那将不完全是

00:10:56.410 --> 00:10:59.650
那真的很酷，但这意味着你

00:10:57.880 --> 00:11:01.540
可以用新的JavaScript做同样的事情

00:10:59.650 --> 00:11:03.700
语法，以便您知道范围

00:11:01.540 --> 00:11:05.410
操作员成为一件事情，让我们希望它

00:11:03.700 --> 00:11:07.240
难道不是吗，但是

00:11:05.410 --> 00:11:08.080
希望它能做到，这意味着您可以做到

00:11:07.240 --> 00:11:09.820
像这样的东西

00:11:08.080 --> 00:11:11.260
退出到另一个使用

00:11:09.820 --> 00:11:12.850
那并因此不必

00:11:11.260 --> 00:11:16.050
把那种东西翻译过来

00:11:12.850 --> 00:11:18.250
可能会更小为什么为什么要这样做

00:11:16.050 --> 00:11:21.700
你知道你知道我为什么这样做吗

00:11:18.250 --> 00:11:24.880
注意，我要问，我们做了一个表演

00:11:21.700 --> 00:11:27.490
哦，有时候我们请假

00:11:24.880 --> 00:11:30.100
只是为了一点，但你知道我

00:11:27.490 --> 00:11:32.530
我相信它一定是某种生活

00:11:30.100 --> 00:11:34.030
转义，但我不是，那只是

00:11:32.530 --> 00:11:36.280
一个普通的字符串，就像

00:11:34.030 --> 00:11:38.830
我们仅使用模板的一部分

00:11:36.280 --> 00:11:41.770
是的，HTML解析器想要

00:11:38.830 --> 00:11:43.900
输入脚本，这是您的结尾

00:11:41.770 --> 00:11:45.940
脚本是在有尖括号时

00:11:43.900 --> 00:11:47.860
斜杠脚本尖括号是

00:11:45.940 --> 00:11:50.800
脚本的结尾，所以没有这个

00:11:47.860 --> 00:11:52.720
小把戏脚本将在那里

00:11:50.800 --> 00:11:57.550
所有这些都会渗入

00:11:52.720 --> 00:12:00.490
 HTML哦，是的，是的，我记得

00:11:57.550 --> 00:12:03.100
现在是的，即使您使用字符串文字，也可以

00:12:00.490 --> 00:12:05.020
不能只用尖括号斜线

00:12:03.100 --> 00:12:07.210
脚本，因为当你父亲

00:12:05.020 --> 00:12:08.740
被解析的难题就像是的

00:12:07.210 --> 00:12:10.540
太好了，因为这是HTML 

00:12:08.740 --> 00:12:12.550
时间的力量，而不是JavaScript 

00:12:10.540 --> 00:12:14.680
解析器时间，是的，你总是会

00:12:12.550 --> 00:12:18.480
做一些事情来解决我们这是

00:12:14.680 --> 00:12:22.870
我想我第一次见过

00:12:18.480 --> 00:12:25.240
这两者都可以逃脱，但是

00:12:22.870 --> 00:12:28.930
还插入我从未使用过的相邻HTML 

00:12:25.240 --> 00:12:31.330
用过了哦，我喜欢直接插入

00:12:28.930 --> 00:12:33.790
创建元素并设置为HTML 

00:12:31.330 --> 00:12:35.260
是的，我常常以失败告终

00:12:33.790 --> 00:12:36.580
这样做或您正在使用某种

00:12:35.260 --> 00:12:38.290
本质上就是图书馆

00:12:36.580 --> 00:12:40.180
对您来说比较容易，但是为了

00:12:38.290 --> 00:12:41.860
幻灯片，这是一个旧的Microsoft API 

00:12:40.180 --> 00:12:44.460
这是不标准的事情之一

00:12:41.860 --> 00:12:47.170
之前进入Internet Explorer 

00:12:44.460 --> 00:12:49.750
可能是五点五

00:12:47.170 --> 00:12:51.070
那年那边的某个地方

00:12:49.750 --> 00:12:52.810
但他们将其标准化，因为

00:12:51.070 --> 00:12:54.940
实际上非常有用，非常奇怪的API 

00:12:52.810 --> 00:12:57.880
你可以看到我想结束之后

00:12:54.940 --> 00:12:59.500
当前脚本的方式

00:12:57.880 --> 00:13:02.770
工作，然后它将是肯定的

00:12:59.500 --> 00:13:04.360
是HTML令人恶心的恶心，但对于

00:13:02.770 --> 00:13:05.130
这种情况实际上是

00:13:04.360 --> 00:13:10.060
其实很有用

00:13:05.130 --> 00:13:12.520
无论如何还是很满意的

00:13:10.060 --> 00:13:13.150
你以前见过这种东西

00:13:12.520 --> 00:13:16.390
我当然有

00:13:13.150 --> 00:13:17.710
令人恶心的eNOS，那是什么

00:13:16.390 --> 00:13:22.300
发生在这里是他们正在尝试加载

00:13:17.710 --> 00:13:24.160
像CDN中的jQuery 

00:13:22.300 --> 00:13:25.269
你知道并希望它将

00:13:24.160 --> 00:13:27.820
已经被兑现，因为他们已经使用过

00:13:25.269 --> 00:13:29.920
它在其他网站上

00:13:27.820 --> 00:13:31.870
有些国家无法使用

00:13:29.920 --> 00:13:33.250
特别是看到目的或有时

00:13:31.870 --> 00:13:34.570
 CDN掉了东西

00:13:33.250 --> 00:13:35.860
所以你和你的剧本就像嘿

00:13:34.570 --> 00:13:37.480
如果jQuery不存在，将会进展顺利

00:13:35.860 --> 00:13:40.149
然后从我自己的服务器上加载

00:13:37.480 --> 00:13:41.950
而是document.write正在使用

00:13:40.149 --> 00:13:44.589
相邻的HTML应该不是吗

00:13:41.950 --> 00:13:46.470
应该很好用的问题

00:13:44.589 --> 00:13:48.640
那就是行为会有所不同

00:13:46.470 --> 00:13:50.529
因为那不会加载脚本

00:13:48.640 --> 00:13:52.390
同时，我们不认为这将是一个

00:13:50.529 --> 00:13:54.519
异步脚本是的，所以这就是为什么他们使用

00:13:52.390 --> 00:13:56.200
 document.write这太可怕了

00:13:54.519 --> 00:13:57.880
他们又逃脱了一点脚本

00:13:56.200 --> 00:14:03.190
通过不同的版本进行思考

00:13:57.880 --> 00:14:04.660
关于这个，所以我不那么兴奋

00:14:03.190 --> 00:14:06.910
这个功能是因为我对

00:14:04.660 --> 00:14:08.050
这将是CDN的Donald Joker 

00:14:06.910 --> 00:14:09.220
只是在您自己的服务器上看过

00:14:08.050 --> 00:14:11.230
因为那样你就不会有

00:14:09.220 --> 00:14:13.570
 Safari已经双重查询缓存

00:14:11.230 --> 00:14:15.070
就像是，没有其他网站可以放

00:14:13.570 --> 00:14:17.110
缓存中的某些内容为您和

00:14:15.070 --> 00:14:19.079
不管怎么说Safari都不会响亮

00:14:17.110 --> 00:14:21.220
铬以及双键

00:14:19.079 --> 00:14:23.620
你要打另一个联系

00:14:21.220 --> 00:14:25.149
设置时间好吗

00:14:23.620 --> 00:14:26.890
我们认为这很糟糕，但是你知道吗

00:14:25.149 --> 00:14:28.899
模块让我们谈谈

00:14:26.890 --> 00:14:31.420
他们有Maps的解决方案

00:14:28.899 --> 00:14:32.860
正如我说的那样，我并不感到非常兴奋

00:14:31.420 --> 00:14:34.630
关于它，但你可以说的是你

00:14:32.860 --> 00:14:35.070
知道jQuery并且您可以将它给您

00:14:34.630 --> 00:14:37.480
网址

00:14:35.070 --> 00:14:39.120
如果失败，我们也会尝试该人，或者

00:14:37.480 --> 00:14:42.399
是的第二次

00:14:39.120 --> 00:14:44.399
好吧，那么公平，是的，不是

00:14:42.399 --> 00:14:46.630
在那里，我只想提一提

00:14:44.399 --> 00:14:48.880
这是我更兴奋的一个

00:14:46.630 --> 00:14:52.720
关于我，我感到非常兴奋

00:14:48.880 --> 00:14:54.430
知道不是吗，所以我在这里

00:14:52.720 --> 00:14:56.440
加载就像我有foo这是

00:14:54.430 --> 00:14:58.180
指向它的foo版本要知道

00:14:56.440 --> 00:15:00.339
因为我们现在有以前的版本

00:14:58.180 --> 00:15:02.140
我也在使用的foo的过去版本

00:15:00.339 --> 00:15:05.769
 comlink但好人

00:15:02.140 --> 00:15:17.820
 comlink也使用foo但它期望

00:15:05.769 --> 00:15:20.740
版本一，您要做的正确

00:15:17.820 --> 00:15:21.070
在这种情况下，这就是您想要的

00:15:20.740 --> 00:15:23.050
做

00:15:21.070 --> 00:15:25.120
你有这个范围部分

00:15:23.050 --> 00:15:28.329
可以说他们基本上提供了

00:15:25.120 --> 00:15:29.470
导入部分的例外情况

00:15:28.329 --> 00:15:31.480
在此之下的任何模块

00:15:29.470 --> 00:15:33.069
目录，如具有该字词的目录

00:15:31.480 --> 00:15:34.600
你们又很好，他们

00:15:33.069 --> 00:15:35.980
考虑到这一点， 

00:15:34.600 --> 00:15:38.620
接待线，所以这是

00:15:35.980 --> 00:15:43.300
我们认为将会发生，你知道

00:15:38.620 --> 00:15:45.310
图书馆将停止捆绑他们的

00:15:43.300 --> 00:15:47.440
依赖关系，让它们像

00:15:45.310 --> 00:15:50.260
原始身份并将其留给您

00:15:47.440 --> 00:15:52.120
最终成为您的最终应用开发者

00:15:50.260 --> 00:15:53.650
知道以正确的方式弯曲箭头

00:15:52.120 --> 00:15:55.150
每次导入都指向实际

00:15:53.650 --> 00:15:58.450
正确的文件，我认为那是我的梦想

00:15:55.150 --> 00:16:01.450
认为梦想是找到一种方法

00:15:58.450 --> 00:16:02.860
旋转节点模块中的节点分辨率

00:16:01.450 --> 00:16:04.900
系统变成可以

00:16:02.860 --> 00:16:07.540
我想这很重要

00:16:04.900 --> 00:16:09.580
你会希望bunless输出这个

00:16:07.540 --> 00:16:11.380
对我们来说是绝对的，因为他们

00:16:09.580 --> 00:16:12.490
已经进行了整个技术分析

00:16:11.380 --> 00:16:14.050
做一切就像你知道的

00:16:12.490 --> 00:16:15.970
这是您的导入地图，只需将其放入

00:16:14.050 --> 00:16:17.380
您的HTML，我认为这些库

00:16:15.970 --> 00:16:19.270
已经像人们一样存在

00:16:17.380 --> 00:16:21.340
实验性的自我，就像你知道我们

00:16:19.270 --> 00:16:22.690
可以产生重要的基础

00:16:21.340 --> 00:16:24.790
项目，以便他们知道汇总

00:16:22.690 --> 00:16:27.100
捆绑对象几乎包含所有

00:16:24.790 --> 00:16:28.510
是我们要做的数据，是的，所以

00:16:27.100 --> 00:16:30.160
这很容易，很容易做到

00:16:28.510 --> 00:16:31.420
很好，你知道人类是否

00:16:30.160 --> 00:16:33.720
会写这个，但是

00:16:31.420 --> 00:16:35.740
由知道的捆绑器生成

00:16:33.720 --> 00:16:37.090
最后一件事，这是其中之一

00:16:35.740 --> 00:16:38.580
我最兴奋的事情

00:16:37.090 --> 00:16:43.300
好家伙

00:16:38.580 --> 00:16:46.180
像这样的进口计划

00:16:43.300 --> 00:16:47.140
从任何旧的元素上基本上都是成功的

00:16:46.180 --> 00:16:48.880
那需要你别的现在可以

00:16:47.140 --> 00:16:49.780
带有导入方案的东西，如果您

00:16:48.880 --> 00:16:51.730
在地图上查找它是什么

00:16:49.780 --> 00:16:53.980
发生的事情就是这样

00:16:51.730 --> 00:16:56.260
有什么可以支持网址的吗

00:16:53.980 --> 00:16:58.240
那是同一件事，我可以

00:16:56.260 --> 00:17:02.320
防止整个无效

00:16:58.240 --> 00:17:05.920
好的资源，这里在CSS背景下有效

00:17:02.320 --> 00:17:07.930
图像对任何人都有效

00:17:05.920 --> 00:17:11.230
甚至可以在获取中工作是的

00:17:07.930 --> 00:17:14.350
绝对是的，有一点

00:17:11.230 --> 00:17:17.680
相对URL之类的问题，因为

00:17:14.350 --> 00:17:19.060
特别是如果您在CSS领域，嗯

00:17:17.680 --> 00:17:20.650
知道它是相对于CSS文件的

00:17:19.060 --> 00:17:22.750
因为这就是在CSS中引用工作的方式

00:17:20.650 --> 00:17:25.630
但是如果您使用脚本并且

00:17:22.750 --> 00:17:26.829
获取您的任何相对URL 

00:17:25.630 --> 00:17:28.480
相对于我要去的文件

00:17:26.829 --> 00:17:31.210
我经过你一秒钟

00:17:28.480 --> 00:17:33.940
让我在网上令我发疯

00:17:31.210 --> 00:17:35.350
当您喜欢孟加拉国时，该汇总

00:17:33.940 --> 00:17:37.300
最终存放在根文件夹中

00:17:35.350 --> 00:17:39.820
文件夹了没有子

00:17:37.300 --> 00:17:41.230
目录一切都只是转储

00:17:39.820 --> 00:17:42.400
进入一个目录没有冲突

00:17:41.230 --> 00:17:45.190
因为文件中有哈希

00:17:42.400 --> 00:17:46.540
名字让事情变得更容易

00:17:45.190 --> 00:17:49.000
任何不会成为用户的东西

00:17:46.540 --> 00:17:51.880
可见，我倾向于同意，是的，我

00:17:49.000 --> 00:17:55.810
显然，我们喜欢好的网址

00:17:51.880 --> 00:17:57.820
我有的东西我有子文件夹

00:17:55.810 --> 00:17:59.650
 index.html到我的博客文章，但所有

00:17:57.820 --> 00:18:01.870
博客文章中的图片又回到了

00:17:59.650 --> 00:18:03.490
根文件夹，因此每个rel都是just或

00:18:01.870 --> 00:18:05.350
每个图像都只是一个斜线

00:18:03.490 --> 00:18:07.150
是的东西，这使得

00:18:05.350 --> 00:18:08.560
事情很简单，但这意味着

00:18:07.150 --> 00:18:10.270
相对于您的位置

00:18:08.560 --> 00:18:12.520
文档而不是相对于

00:18:10.270 --> 00:18:14.700
建议是要有一些东西

00:18:12.520 --> 00:18:17.530
像导入元

00:18:14.700 --> 00:18:19.450
 yatch将采用相对网址， 

00:18:17.530 --> 00:18:20.770
相对于模块摇滚你可以

00:18:19.450 --> 00:18:22.840
像这样实际上在这里面对

00:18:20.770 --> 00:18:24.520
真的很适合进步

00:18:22.840 --> 00:18:26.950
想当喜欢的时候增强哦

00:18:24.520 --> 00:18:28.930
那是这个浏览器有什么p支持

00:18:26.950 --> 00:18:30.310
它可以正确地弯曲导入

00:18:28.930 --> 00:18:32.290
我的意思是我们有图片元素

00:18:30.310 --> 00:18:35.170
我所知道的一切，但是现在我们

00:18:32.290 --> 00:18:36.160
很好地对其进行编程控制

00:18:35.170 --> 00:18:37.600
你知道我很高兴你说

00:18:36.160 --> 00:18:39.220
因为我意识到有一点

00:18:37.600 --> 00:18:42.910
我本来要谈论的一点

00:18:39.220 --> 00:18:45.670
我忘了进步

00:18:42.910 --> 00:18:47.620
在您所在的地方增强此模型

00:18:45.670 --> 00:18:49.840
说像地图一样食物nsj到

00:18:47.620 --> 00:18:51.730
哈希版本，您可以将其发送到

00:18:49.840 --> 00:18:54.820
不支持导入地图的浏览器

00:18:51.730 --> 00:18:56.410
只要您也有食物或MJ 

00:18:54.820 --> 00:18:58.300
您的服务器，以便您拥有此URL 

00:18:56.410 --> 00:19:00.070
这在您的服务器上具有完整

00:18:58.300 --> 00:19:01.240
缓存标题是的，你会

00:19:00.070 --> 00:19:03.700
这在您的服务器上以及

00:19:01.240 --> 00:19:05.170
没有现金的后援耶

00:19:03.700 --> 00:19:07.390
旧版浏览器并不排除它们会

00:19:05.170 --> 00:19:09.010
一种较差的负载

00:19:07.390 --> 00:19:10.870
性能是，但不是

00:19:09.010 --> 00:19:12.580
像事情仍然可以排除在外

00:19:10.870 --> 00:19:14.470
就像当它变得最喜欢

00:19:12.580 --> 00:19:16.420
浏览器有此功能，但有些仍然没有

00:19:14.470 --> 00:19:17.560
那是一个切入点，你已经

00:19:16.420 --> 00:19:19.570
完全没有教授

00:19:17.560 --> 00:19:21.280
是的，我对此感到非常兴奋

00:19:19.570 --> 00:19:23.080
现在，我相信它会有所改变

00:19:21.280 --> 00:19:24.310
在它正确安置之前

00:19:23.080 --> 00:19:27.100
是的，我认为这很重要

00:19:24.310 --> 00:19:29.560
这没有发生，但这是一个

00:19:27.100 --> 00:19:31.510
像等待这一点的实验

00:19:29.560 --> 00:19:33.370
金丝雀不稳定，因为我们有一个

00:19:31.510 --> 00:19:35.140
原产地试用，但未启用

00:19:33.370 --> 00:19:37.120
默认情况下稳定，是的

00:19:35.140 --> 00:19:39.790
正在进行的标准有讨论

00:19:37.120 --> 00:19:41.050
继续，我们应该链接到提案

00:19:39.790 --> 00:19:42.220
人们可以称重的东西

00:19:41.050 --> 00:19:43.840
他们想要又一次给它

00:19:42.220 --> 00:19:45.820
我们正在寻找开发者的反馈

00:19:43.840 --> 00:19:47.020
你喜欢它吗？你讨厌它吗？ 

00:19:45.820 --> 00:19:49.060
你喜欢你讨厌什么

00:19:47.020 --> 00:19:50.860
认为应该有所不同，现在是

00:19:49.060 --> 00:19:54.720
正确的时间让我们知道

00:19:50.860 --> 00:19:54.720
是的，所有这些东西是什么时候

00:19:57.060 --> 00:20:08.620
不要假装肌肉滑行谢谢

00:20:01.810 --> 00:20:10.750
伴侣像这些强壮的手指

00:20:08.620 --> 00:20:16.860
每天都在敲手指

00:20:10.750 --> 00:20:16.860
否则就是烂了，是的，我不能

