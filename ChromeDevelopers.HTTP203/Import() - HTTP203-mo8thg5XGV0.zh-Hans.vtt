WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.089 --> 00:00:14.040
我们将讨论动态导入

00:00:09.840 --> 00:00:16.440
我们来回顾一下，我们有进口商

00:00:14.040 --> 00:00:18.630
一个导入声明的东西

00:00:16.440 --> 00:00:23.820
最后的括号可以让您

00:00:18.630 --> 00:00:26.070
我异步导入了一个模块

00:00:23.820 --> 00:00:29.880
是的，你有模块，你可以

00:00:26.070 --> 00:00:32.189
现在不仅是静态声明

00:00:29.880 --> 00:00:34.320
您导入但使用的有点像

00:00:32.189 --> 00:00:37.170
将其放在中间的函数调用

00:00:34.320 --> 00:00:41.360
您的代码，就像这样和

00:00:37.170 --> 00:00:43.620
现在循环导入这些东西我

00:00:41.360 --> 00:00:45.390
注意到Matias有点

00:00:43.620 --> 00:00:48.239
关于此的文章，或者他有一个注释

00:00:45.390 --> 00:00:51.960
顺便说一句导入不是

00:00:48.239 --> 00:00:55.739
功能，然后我写，我一直在寻找

00:00:51.960 --> 00:01:00.120
在这一点上，就像我打开MP 

00:00:55.739 --> 00:01:02.039
括号URL模块描述符关闭

00:01:00.120 --> 00:01:04.559
是Matheson函数的参数

00:01:02.039 --> 00:01:06.299
就像你弄错了哦在李阿

00:01:04.559 --> 00:01:08.040
分号，当然可以

00:01:06.299 --> 00:01:10.409
什么或一个点然后我们文明了

00:01:08.040 --> 00:01:13.350
这里的人是，我是

00:01:10.409 --> 00:01:16.170
我同意的分号

00:01:13.350 --> 00:01:17.970
我的功能就像过去一样

00:01:16.170 --> 00:01:20.130
因为是的，就像你说的那样

00:01:17.970 --> 00:01:23.700
看起来像是的，这是因为

00:01:20.130 --> 00:01:25.560
关键字语法，我相信这是

00:01:23.700 --> 00:01:28.080
其中之一是

00:01:25.560 --> 00:01:30.060
是的，其中之一是错误的

00:01:28.080 --> 00:01:32.220
再一次，我们有这样的事情

00:01:30.060 --> 00:01:33.720
 JavaScript中还有另一件事

00:01:32.220 --> 00:01:34.470
看起来像一个函数，但不是

00:01:33.720 --> 00:01:37.500
功能

00:01:34.470 --> 00:01:41.189
是的超级是利伯

00:01:37.500 --> 00:01:43.500
超级超级是，现在是，他们是

00:01:41.189 --> 00:01:46.890
它们都不是真正的功能

00:01:43.500 --> 00:01:48.810
同样的原因，这是因为

00:01:46.890 --> 00:01:52.649
打电话给杰克吧

00:01:48.810 --> 00:01:54.509
导入你给它一个模块

00:01:52.649 --> 00:01:57.000
描述符是正确的

00:01:54.509 --> 00:02:00.500
现在它必须是

00:01:57.000 --> 00:02:03.060
特殊格式的点斜杠或其他

00:02:00.500 --> 00:02:08.450
听起来对功能可行，那是什么

00:02:03.060 --> 00:02:08.450
相对于你的脸

00:02:08.590 --> 00:02:15.370
不正确，实际上是相对于

00:02:12.280 --> 00:02:17.200
好的经文，我的意思是

00:02:15.370 --> 00:02:21.310
感觉到脚本标签也是如此

00:02:17.200 --> 00:02:23.590
是的，如果您正常使用URL，则不会

00:02:21.310 --> 00:02:25.510
相对于欧元的脚本

00:02:23.590 --> 00:02:28.030
页面爬有趣的是

00:02:25.510 --> 00:02:29.250
像工人或其他可以的东西

00:02:28.030 --> 00:02:32.620
你最终得到了这一点

00:02:29.250 --> 00:02:35.170
与此相关的特定于此

00:02:32.620 --> 00:02:37.300
相对论

00:02:35.170 --> 00:02:42.910
正确使用的英语单词谢谢

00:02:37.300 --> 00:02:44.920
你冒充我怎么说

00:02:42.910 --> 00:02:46.959
是的，它是相对于脚本文件

00:02:44.920 --> 00:02:49.690
本身还可以，所以这是一个

00:02:46.959 --> 00:02:51.310
从某种意义上说有点相同

00:02:49.690 --> 00:02:52.600
如果您有相对的意见，那就对了

00:02:51.310 --> 00:02:54.640
像URL一样精明

00:02:52.600 --> 00:02:57.190
图标或是相对于

00:02:54.640 --> 00:02:58.599
正在使用的CSS文件

00:02:57.190 --> 00:03:00.730
在右边

00:02:58.599 --> 00:03:02.920
是的，是的，它非常类似于

00:03:00.730 --> 00:03:05.200
但是在JavaScript中我们有这个

00:03:02.920 --> 00:03:07.810
领域的概念，但您拥有的一切

00:03:05.200 --> 00:03:10.769
多个词，这是如此捆绑

00:03:07.810 --> 00:03:12.760
对全球一样

00:03:10.769 --> 00:03:15.280
不像你的盟友，如果你

00:03:12.760 --> 00:03:18.670
您执行的JavaScript环境

00:03:15.280 --> 00:03:20.290
是的，把东西装进去，你知道

00:03:18.670 --> 00:03:22.630
文件来自所有不同的路径

00:03:20.290 --> 00:03:26.319
但最终以这一件事结束

00:03:22.630 --> 00:03:28.260
这个领域一个领域，所以这个相对

00:03:26.319 --> 00:03:30.880
 URL东西不是领域的属性

00:03:28.260 --> 00:03:32.650
如果您要导入的话

00:03:30.880 --> 00:03:35.410
完全来自各地的模块

00:03:32.650 --> 00:03:38.109
这就是为什么它没有意义的原因

00:03:35.410 --> 00:03:39.819
因为那个调用就像

00:03:38.109 --> 00:03:41.530
还有签证问题，如果

00:03:39.819 --> 00:03:43.720
您将导入分配给另一个

00:03:41.530 --> 00:03:46.989
命名并将其传递给另一个脚本

00:03:43.720 --> 00:03:49.900
就像您已经传递了一个函数，但是

00:03:46.989 --> 00:03:51.970
现在它的运作方式不同且相同

00:03:49.900 --> 00:03:55.930
跟超级一样，就像当你叫超级

00:03:51.970 --> 00:03:58.299
你指的是那样的职业

00:03:55.930 --> 00:03:59.799
他们的课，所以他们有点

00:03:58.299 --> 00:04:01.359
决定，因为它要么是一部分

00:03:59.799 --> 00:04:04.269
语言或他们做某事

00:04:01.359 --> 00:04:06.100
与分析堆栈跟踪非常奇怪

00:04:04.269 --> 00:04:09.160
看看有什么样的分数

00:04:06.100 --> 00:04:10.480
一个好人，这就是为什么它不是一个

00:04:09.160 --> 00:04:13.060
功能，所以你不能分配东西

00:04:10.480 --> 00:04:15.160
否则它不是功能类型

00:04:13.060 --> 00:04:18.849
不能打电话，你不能分配给

00:04:15.160 --> 00:04:19.920
是的，还有其他东西通过你

00:04:18.849 --> 00:04:30.410
拿一个

00:04:19.920 --> 00:04:30.410
财务上的缘故

