WEBVTT
Kind: captions
Language: zh-Hans

00:00:04.879 --> 00:00:13.679
我们做对了，您的目标好吗

00:00:11.570 --> 00:00:17.630
在半夜不是很好，但是

00:00:13.679 --> 00:00:20.070
我有时只是坐下我说我的意思是

00:00:17.630 --> 00:00:24.180
是的斯诺克你池

00:00:20.070 --> 00:00:28.070
或者在这种情况下，您的台球

00:00:24.180 --> 00:00:28.070
到十亿孔，我们是先生

00:00:33.170 --> 00:00:38.820
所以我做了一件事情

00:00:36.630 --> 00:00:40.320
我知道像2那样的不寻常的恐惧

00:00:38.820 --> 00:00:45.079
长达数月之久

00:00:40.320 --> 00:00:48.090
是的，这是新事物，只是一点点

00:00:45.079 --> 00:00:56.010
是的，这是一个网络应用程序，是一个网站，是的

00:00:48.090 --> 00:00:58.289
区别，我会说这是一个应用翻转

00:00:56.010 --> 00:01:00.510
硬币是应用程序，不是

00:00:58.289 --> 00:01:02.579
这是一个网站，这是一个维基百科

00:01:00.510 --> 00:01:04.650
我知道的文章查看器还可以

00:01:02.579 --> 00:01:06.119
维基百科已经做了什么，但这

00:01:04.650 --> 00:01:07.799
更像是练习

00:01:06.119 --> 00:01:10.040
像网页加载时间这样的性能

00:01:07.799 --> 00:01:13.890
表现，但您认为可以战胜

00:01:10.040 --> 00:01:17.250
服务器端的Wikipedia渲染是的，我

00:01:13.890 --> 00:01:19.020
做得很好，所以这是一件事情，我当时

00:01:17.250 --> 00:01:21.540
在github上发布，所以我正在做

00:01:19.020 --> 00:01:23.909
客户端渲染，我知道你们所有人

00:01:21.540 --> 00:01:26.549
说这似乎是一种不错的简单方法

00:01:23.909 --> 00:01:28.259
进入它，我是的，我在服役

00:01:26.549 --> 00:01:29.700
只要您了解JavaScript 

00:01:28.259 --> 00:01:31.290
电线，然后JavaScript会越来越

00:01:29.700 --> 00:01:32.729
内容将您放在页面上，我当时

00:01:31.290 --> 00:01:34.979
看到你在看我的官员

00:01:32.729 --> 00:01:38.280
第一次渲染为2.6秒

00:01:34.979 --> 00:01:40.020
还可以，内容需要4.7秒

00:01:38.280 --> 00:01:43.170
即使在那时候比

00:01:40.020 --> 00:01:44.939
维基百科的实际官方网站，但您

00:01:43.170 --> 00:01:47.310
我知道我会比这更好

00:01:44.939 --> 00:01:48.899
好，首先渲染的是什么

00:01:47.310 --> 00:01:52.860
渲染就像顶部工具栏一样

00:01:48.899 --> 00:01:54.600
像Wikipedia这样说，还可以

00:01:52.860 --> 00:01:56.130
但是您却从用户的角度

00:01:54.600 --> 00:01:57.960
他们有一些他们知道的东西

00:01:56.130 --> 00:02:00.270
好的，然后我认为是

00:01:57.960 --> 00:02:01.950
四分七秒让

00:02:00.270 --> 00:02:03.119
实际的维基百科文章下降了

00:02:01.950 --> 00:02:04.829
你实际上看到了很多

00:02:03.119 --> 00:02:06.990
在那儿旋转几秒钟

00:02:04.829 --> 00:02:09.300
您喜欢的应用似乎没有

00:02:06.990 --> 00:02:10.530
就像塞德尔在说，是的，我知道

00:02:09.300 --> 00:02:12.930
你在拉你的侧面，但不要

00:02:10.530 --> 00:02:13.450
担心那不是我愿意去的面孔

00:02:12.930 --> 00:02:16.209
好的

00:02:13.450 --> 00:02:18.000
好吧，拉动你的脸，我是

00:02:16.209 --> 00:02:23.459
其实我可以告诉你我做了什么

00:02:18.000 --> 00:02:23.459
有一个快乐的人，我的另一个注定可以

00:02:25.830 --> 00:02:32.410
所以是的，我让喷气机

00:02:29.140 --> 00:02:35.080
 JavaScript异步并添加一些标记

00:02:32.410 --> 00:02:36.940
该页面的第一个渲染是和我

00:02:35.080 --> 00:02:40.060
内联第一个渲染的CSS 

00:02:36.940 --> 00:02:41.590
好，一切正常，你说

00:02:40.060 --> 00:02:43.269
我第一次听到那个规则是正常的

00:02:41.590 --> 00:02:45.760
就像我要取出一些CSS， 

00:02:43.269 --> 00:02:49.680
把它放在头上，我就像哦，那是

00:02:45.760 --> 00:02:49.680
真的对那些人有很大的要求哦

00:02:53.549 --> 00:03:00.340
这是一个请求，伙计，是的，我知道哦，天哪

00:02:57.459 --> 00:03:02.019
我讨厌你成为埃里森，说是的

00:03:00.340 --> 00:03:04.150
下次你会问原因

00:03:02.019 --> 00:03:06.430
关于事物或使用模来推理

00:03:04.150 --> 00:03:08.170
我讨厌那个，因为那只是

00:03:06.430 --> 00:03:10.930
开发人员不想说他们不

00:03:08.170 --> 00:03:14.290
了解她为什么喜欢取模，所以我

00:03:10.930 --> 00:03:15.880
确实同意一个人太难了

00:03:14.290 --> 00:03:18.070
 CSS这是我们有的

00:03:15.880 --> 00:03:19.870
在平台上的问题是我尝试过

00:03:18.070 --> 00:03:21.880
这是垃圾，是的，我们已经加载了CSS 

00:03:19.870 --> 00:03:23.769
来自灯丝组，但有点

00:03:21.880 --> 00:03:25.690
它比您应有的脚本更多

00:03:23.769 --> 00:03:27.549
应该只是异步就应该

00:03:25.690 --> 00:03:29.799
是声明性的，但我还

00:03:27.549 --> 00:03:31.150
想想Firefox和IE在做什么

00:03:29.799 --> 00:03:32.890
时刻真的很好，这是一个

00:03:31.150 --> 00:03:34.840
如果我真的有一点非标准行为

00:03:32.890 --> 00:03:37.660
喜欢它将链接元素放在页面上

00:03:34.840 --> 00:03:41.079
在内容之前

00:03:37.660 --> 00:03:43.060
需要它，它将阻止渲染

00:03:41.079 --> 00:03:44.650
等待它会阻止渲染

00:03:43.060 --> 00:03:46.840
后续内容，直到该CSS 

00:03:44.650 --> 00:03:48.850
加载它不会阻止所有页面

00:03:46.840 --> 00:03:50.019
渲染好吧，这只是元素

00:03:48.850 --> 00:03:52.329
之后不要进入渲染触发器

00:03:50.019 --> 00:03:53.410
进一步，我们应该这样做，是的，我们

00:03:52.329 --> 00:03:54.220
应该拿那个，我们也应该

00:03:53.410 --> 00:03:57.190
还有一个水槽

00:03:54.220 --> 00:04:00.190
好吧，对了，所以我们有一个可并行化的

00:03:57.190 --> 00:04:01.569
最后一件事我了解你在哪里

00:04:00.190 --> 00:04:03.760
用来获取

00:04:01.569 --> 00:04:06.160
维基百科页面，这很疯狂

00:04:03.760 --> 00:04:07.660
所以是的，我得出了相同的结论

00:04:06.160 --> 00:04:12.970
我以为，这需要服务器和明智的选择

00:04:07.660 --> 00:04:16.120
是的，谢谢，这是最讨厌的

00:04:12.970 --> 00:04:18.090
椅子如此神圣地看着我的计算

00:04:16.120 --> 00:04:23.110
一旦我介绍了服务器渲染

00:04:18.090 --> 00:04:25.180
事情变慢了我的眼睛

00:04:23.110 --> 00:04:26.040
烦人的我的内容渲染实际上排序

00:04:25.180 --> 00:04:28.170
的下来

00:04:26.040 --> 00:04:31.850
有点不多，但我的第一个

00:04:28.170 --> 00:04:34.350
渲染为什么它变慢是因为

00:04:31.850 --> 00:04:36.180
连接断开到我的服务器，是的

00:04:34.350 --> 00:04:38.550
服务器取消对Wikipedia的访问

00:04:36.180 --> 00:04:40.140
数据返回页面发送

00:04:38.550 --> 00:04:41.250
您正在寻找白色的屏幕

00:04:40.140 --> 00:04:43.460
现在更长的时间，因为您已经

00:04:41.250 --> 00:04:45.840
第三方服务的瓶颈

00:04:43.460 --> 00:04:48.540
你知道， 

00:04:45.840 --> 00:04:50.430
 JavaScript CSS基本页面外壳是的

00:04:48.540 --> 00:04:51.990
一秒到零

00:04:50.430 --> 00:04:52.920
和事件一样好

00:04:51.990 --> 00:04:55.560
第一次渲染，因为这就是全部

00:04:52.920 --> 00:04:57.510
离线，但是这里很有趣

00:04:55.560 --> 00:04:58.860
那是我的内容渲染了

00:04:57.510 --> 00:05:00.510
因为我现在要回去做

00:04:58.860 --> 00:05:02.820
客户端渲染是的

00:05:00.510 --> 00:05:04.620
内容呈现再次上升，因为

00:05:02.820 --> 00:05:06.750
即使它来自

00:05:04.620 --> 00:05:08.910
缓存有两个问题，只有一个

00:05:06.750 --> 00:05:10.140
那是对维基百科的要求是

00:05:08.910 --> 00:05:12.390
有点延迟，因为它必须

00:05:10.140 --> 00:05:16.260
将JavaScript在pedia上传递给Wiki 

00:05:12.390 --> 00:05:17.490
阅读它被延迟了，我就像我就像嘿

00:05:16.260 --> 00:05:20.400
我不是故意的

00:05:17.490 --> 00:05:21.750
差不多，但是是的，就像减少了延迟

00:05:20.400 --> 00:05:23.280
要求一经传到

00:05:21.750 --> 00:05:24.540
服务人员得到了什么服务

00:05:23.280 --> 00:05:26.820
走了，却拿到了东西来工作

00:05:24.540 --> 00:05:28.170
好吧，那你怎么样呢

00:05:26.820 --> 00:05:29.940
因为您仍然想发送您的

00:05:28.170 --> 00:05:31.830
使用应用程序外壳回复

00:05:29.940 --> 00:05:34.380
是的，你在说什么

00:05:31.830 --> 00:05:36.750
有分块编码啊好吧，所以

00:05:34.380 --> 00:05:39.150
这是能够成为的艺术

00:05:36.750 --> 00:05:41.040
能够像

00:05:39.150 --> 00:05:42.810
不知道整个页面的内容

00:05:41.040 --> 00:05:44.610
所以我能够像

00:05:42.810 --> 00:05:46.230
第一个渲染头中的标头

00:05:44.610 --> 00:05:47.880
从本质上讲，现在浏览器知道

00:05:46.230 --> 00:05:49.890
关于额外的CSS和JavaScript需求

00:05:47.880 --> 00:05:51.360
同时或类似

00:05:49.890 --> 00:05:52.920
我的服务器可能关闭了

00:05:51.360 --> 00:05:54.480
到维基百科，是的，哈弗林

00:05:52.920 --> 00:05:56.850
是的，然后当它到达时

00:05:54.480 --> 00:05:58.770
通过and和and尖叫

00:05:56.850 --> 00:06:01.140
减少了我们谈论的渲染时间

00:05:58.770 --> 00:06:05.310
大约-好吧，我们到了1.4秒

00:06:01.140 --> 00:06:10.380
第一次渲染，我得到了官方

00:06:05.310 --> 00:06:12.270
弄清楚了就是这样

00:06:10.380 --> 00:06:13.890
到2.4秒的内容，这就是

00:06:12.270 --> 00:06:16.350
像是完全节省了两秒钟

00:06:13.890 --> 00:06:18.360
成绩单确实有80份，是的

00:06:16.350 --> 00:06:20.640
很大，真的不能得到任何

00:06:18.360 --> 00:06:23.400
比那更好的你可以哦，先生

00:06:20.640 --> 00:06:28.530
通过使用一些技术，您可能

00:06:23.400 --> 00:06:29.850
在服务人员之前没有听说过

00:06:28.530 --> 00:06:31.560
您将内容带入页面后

00:06:29.850 --> 00:06:33.990
脱机壳，那就是你可以得到

00:06:31.560 --> 00:06:36.060
第一组渲染，就像没有一点一样

00:06:33.990 --> 00:06:36.750
第二个说测量出来这个

00:06:36.060 --> 00:06:38.840
是瞬间

00:06:36.750 --> 00:06:41.150
真的是

00:06:38.840 --> 00:06:42.980
减少了9k的内容

00:06:41.150 --> 00:06:44.870
电线，一旦我把它写到

00:06:42.980 --> 00:06:46.970
页面，然后我再次写

00:06:44.870 --> 00:06:48.889
其余的，这是一个完全的黑客

00:06:46.970 --> 00:06:50.870
那就是为什么我下一个愿望

00:06:48.889 --> 00:06:53.030
用于网络的互联网

00:06:50.870 --> 00:06:54.740
标准是流，因为我想成为

00:06:53.030 --> 00:06:56.690
能够接受一些我们所需要的内容

00:06:54.740 --> 00:06:58.460
将其下载到一个元素中，然后

00:06:56.690 --> 00:07:00.680
它看起来像它，我想一​​旦我们

00:06:58.460 --> 00:07:02.449
有那样的渲染

00:07:00.680 --> 00:07:04.520
前进，我认为那是我们可以

00:07:02.449 --> 00:07:06.919
看到客户端渲染应用成为

00:07:04.520 --> 00:07:07.160
与我喝的服务器竞争

00:07:06.919 --> 00:07:09.970
那

00:07:07.160 --> 00:07:09.970
干杯

