WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.030 --> 00:00:16.340
播客的其余部分现在您只是

00:00:01.530 --> 00:00:18.570
会做一个高调的事情

00:00:16.340 --> 00:00:20.609
任何HTTP的正式起始词

00:00:18.570 --> 00:00:24.240
我一直在看的免费剧集

00:00:20.609 --> 00:00:26.910
通过一些tc39提案哦，不

00:00:24.240 --> 00:00:29.220
不，是的，这些是

00:00:26.910 --> 00:00:32.160
有点像零阶段

00:00:29.220 --> 00:00:34.380
真的很早的东西哦，好吧，我

00:00:32.160 --> 00:00:36.390
想要识别分数

00:00:34.380 --> 00:00:39.620
我将向您展示的每一个

00:00:36.390 --> 00:00:44.730
我们怎么说-1 0 1来自

00:00:39.620 --> 00:00:46.530
有趣到有趣，我想要这样

00:00:44.730 --> 00:00:47.989
我要告诉你的第一个是这个

00:00:46.530 --> 00:00:55.320
这是承诺

00:00:47.989 --> 00:00:57.449
尝试mmm有趣，我要尝试

00:00:55.320 --> 00:01:00.270
弄清楚在犹他州是什么，我是对的

00:00:57.449 --> 00:01:02.430
好吧，这基本上是相反的

00:01:00.270 --> 00:01:04.229
权重返回a的权重

00:01:02.430 --> 00:01:05.700
被拒绝的承诺扔了，这

00:01:04.229 --> 00:01:09.840
一个把扔变成拒绝

00:01:05.700 --> 00:01:12.450
承诺它将做到这一点，但其他

00:01:09.840 --> 00:01:16.439
事情，因为我你还好，所以让我们

00:01:12.450 --> 00:01:18.689
看看这是两个

00:01:16.439 --> 00:01:22.830
这些事情几乎都在做

00:01:18.689 --> 00:01:24.659
没关系，所以在这里

00:01:22.830 --> 00:01:26.280
一个异步函数，所以我可以写代码

00:01:24.659 --> 00:01:28.860
如果冻结，它将返回

00:01:26.280 --> 00:01:31.290
如果我退还一个被拒绝的承诺

00:01:28.860 --> 00:01:32.579
东西会被你打包

00:01:31.290 --> 00:01:34.100
成一个承诺，那就是P 

00:01:32.579 --> 00:01:37.250
将会是那个返回值

00:01:34.100 --> 00:01:39.960
两者之间的唯一区别是

00:01:37.250 --> 00:01:46.350
此功能是在微型计算机上提示的

00:01:39.960 --> 00:01:48.720
任务，这个没意思

00:01:46.350 --> 00:01:51.689
是的，基本上这是实现

00:01:48.720 --> 00:01:54.210
之所以尝试，是因为promise回调会

00:01:51.689 --> 00:01:59.750
马上逃避

00:01:54.210 --> 00:02:03.600
如果E为a 

00:01:59.750 --> 00:02:06.079
完全一样，所以我对

00:02:03.600 --> 00:02:07.759
保证不尝试不

00:02:06.079 --> 00:02:11.000
我过去需要这个，但是我

00:02:07.759 --> 00:02:12.170
同意晕厥是一种

00:02:11.000 --> 00:02:14.300
的代码看起来有点难看

00:02:12.170 --> 00:02:15.950
有时候我的意思是

00:02:14.300 --> 00:02:17.510
不错的是

00:02:15.950 --> 00:02:19.190
如果他总是因为你而困惑

00:02:17.510 --> 00:02:20.750
看到一个功能，那真是太酷了

00:02:19.190 --> 00:02:23.299
调用它，所以这个会很高

00:02:20.750 --> 00:02:25.730
会让它像哦，我可以在

00:02:23.299 --> 00:02:26.660
开始，您调用的是，我咬了

00:02:25.730 --> 00:02:28.790
不在主题上，但这就是为什么我

00:02:26.660 --> 00:02:30.849
我不喜欢API有回调

00:02:28.790 --> 00:02:32.959
首先然后是一些额外的东西

00:02:30.849 --> 00:02:35.720
像添加事件监听器

00:02:32.959 --> 00:02:37.730
具有所有设置的计时器是一个完美的选择

00:02:35.720 --> 00:02:40.700
一个是因为您向下滚动

00:02:37.730 --> 00:02:43.670
页面向下看它的调用代码行

00:02:40.700 --> 00:02:45.230
是的，要找出确切的，否则你就是

00:02:43.670 --> 00:02:46.310
看着这个，你知道十分之一

00:02:45.230 --> 00:02:47.599
清单我要去的这并没有真正使

00:02:46.310 --> 00:02:50.150
感觉，然后你触底

00:02:47.599 --> 00:02:51.829
就像曾经的真实一样，好吧，现在让我们

00:02:50.150 --> 00:02:54.140
再读一遍所有的内容，是的，但是

00:02:51.829 --> 00:02:57.140
无论如何下个礼拜零

00:02:54.140 --> 00:02:58.459
那大概是零阶段或一阶段

00:02:57.140 --> 00:03:02.390
这些是我没有承诺的事情

00:02:58.459 --> 00:03:04.099
记忆，在我们说他们是对的之前

00:03:02.390 --> 00:03:05.000
我知道这是怎么回事

00:03:04.099 --> 00:03:07.459
转发到那个

00:03:05.000 --> 00:03:10.670
哦，好吧，至少这样想，但我

00:03:07.459 --> 00:03:13.519
哦，杰克，这要去哪里

00:03:10.670 --> 00:03:15.350
先生很好，我们在这里做的是

00:03:13.519 --> 00:03:19.250
我们正在努力获取数据的价值

00:03:15.350 --> 00:03:22.040
点照片的长度，但这会发生

00:03:19.250 --> 00:03:23.600
如果它可能不是目标腿

00:03:22.040 --> 00:03:27.290
可以为null或未定义，或者

00:03:23.600 --> 00:03:30.889
像这样的东西

00:03:27.290 --> 00:03:34.660
场景谢谢，我得到了合并的null 

00:03:30.889 --> 00:03:37.760
运算符或某些内容是是或某些内容

00:03:34.660 --> 00:03:39.920
这些声音的重新排列提示

00:03:37.760 --> 00:03:41.150
我认为这是正确的东西

00:03:39.920 --> 00:03:43.540
实际上，是的，这里发生了什么

00:03:41.150 --> 00:03:47.650
是如果得到两张照片，而照片是

00:03:43.540 --> 00:03:50.959
诺兰定义它就停在那里

00:03:47.650 --> 00:03:52.400
有趣的存在令人兴奋

00:03:50.959 --> 00:03:55.400
因为我的意思是然后特别是当

00:03:52.400 --> 00:03:57.139
您喜欢像用户一样获取用户数据

00:03:55.400 --> 00:03:58.849
选项对象，您必须检查是否

00:03:57.139 --> 00:04:00.829
它实际上在那里，如果要的话

00:03:58.849 --> 00:04:02.419
像把它写下来一样检查

00:04:00.829 --> 00:04:02.959
一个问号，它看起来

00:04:02.419 --> 00:04:04.250
好多了

00:04:02.959 --> 00:04:05.510
确实有另一件事我想

00:04:04.250 --> 00:04:10.220
指出这里，就是我

00:04:05.510 --> 00:04:12.650
最近刚好有一只小猫，我的手是

00:04:10.220 --> 00:04:16.910
切碎，这就是为什么这种方式有效

00:04:12.650 --> 00:04:19.700
哦，是的，至少是这样

00:04:16.910 --> 00:04:22.430
如果你问的东西

00:04:19.700 --> 00:04:24.950
标记不是和整个返回值

00:04:22.430 --> 00:04:27.980
将为null，所以完全可以，所以Val 

00:04:24.950 --> 00:04:31.160
在这个例子中将为null 

00:04:27.980 --> 00:04:32.870
我也非常非常喜欢

00:04:31.160 --> 00:04:34.160
点有点令人困惑

00:04:32.870 --> 00:04:38.630
本来期望问号

00:04:34.160 --> 00:04:42.590
括号是的，我想那可能是

00:04:38.630 --> 00:04:47.120
语法冲突可能与三元

00:04:42.590 --> 00:04:48.650
运算符之类的东西

00:04:47.120 --> 00:04:50.390
这就是一个角色的未来

00:04:48.650 --> 00:04:52.430
好吧，你知道一个非空格

00:04:50.390 --> 00:04:55.490
角色向前看，决定要做什么

00:04:52.430 --> 00:04:58.370
这样做是的，但这是说，如果

00:04:55.490 --> 00:05:01.970
不管存在什么，都叫它

00:04:58.370 --> 00:05:03.470
变得不是这样，萨摩斯的核心是什么

00:05:01.970 --> 00:05:04.850
有趣的

00:05:03.470 --> 00:05:07.640
我觉得我也很喜欢

00:05:04.850 --> 00:05:09.200
你曾经结束过的一项权利

00:05:07.640 --> 00:05:11.930
用这样的代码之前，因为

00:05:09.200 --> 00:05:14.060
您要创建一个常量，但是

00:05:11.930 --> 00:05:17.000
计算该常数需要一点

00:05:14.060 --> 00:05:19.430
工作，从技术上来说，您是对的

00:05:17.000 --> 00:05:21.920
您在其中编写功能的地方

00:05:19.430 --> 00:05:24.320
功能谢谢你

00:05:21.920 --> 00:05:26.480
所以你的答案是

00:05:24.320 --> 00:05:30.130
自己一个自欺欺人的自我执行

00:05:26.480 --> 00:05:33.140
返回事物的函数

00:05:30.130 --> 00:05:38.660
出色的出色工作

00:05:33.140 --> 00:05:41.360
该提案是一个非常困难的事哦

00:05:38.660 --> 00:05:42.800
正是我们的功能，所以这是

00:05:41.360 --> 00:05:44.150
这个想法是，你可以把这个

00:05:42.800 --> 00:05:46.070
您将在哪里放置语句

00:05:44.150 --> 00:05:48.440
在JSX之类的东西中特别有用

00:05:46.070 --> 00:05:50.300
这就是你所有的陈述

00:05:48.440 --> 00:05:51.500
 Snape不能放进去，但是我们

00:05:50.300 --> 00:05:56.390
可以吗，如果

00:05:51.500 --> 00:05:58.910
在，最后的声明是

00:05:56.390 --> 00:06:01.330
有效返回的值，因此

00:05:58.910 --> 00:06:03.440
你能把什么形式的

00:06:01.330 --> 00:06:04.790
 JavaScript代码，它可以或只是

00:06:03.440 --> 00:06:07.580
子集，因为我本来期望

00:06:04.790 --> 00:06:09.470
在do块中显式返回否

00:06:07.580 --> 00:06:11.330
只是我实际上所做的最后一句话

00:06:09.470 --> 00:06:14.840
我第一次编写此代码时是一个错误

00:06:11.330 --> 00:06:16.850
因为我以为哦，错过了其他

00:06:14.840 --> 00:06:17.810
你知道我在这里，因为通常

00:06:16.850 --> 00:06:19.700
当我写这样的代码

00:06:17.810 --> 00:06:22.160
如果我返回值，我不做

00:06:19.700 --> 00:06:23.960
不要做其他事情，因为是的，只有

00:06:22.160 --> 00:06:25.280
结束代码，我刚登录

00:06:23.960 --> 00:06:27.770
出来，我就像哦，哦，我不是很

00:06:25.280 --> 00:06:29.360
就是代码，然后是最后一个

00:06:27.770 --> 00:06:31.340
最后一条语句的返回值，以及

00:06:29.360 --> 00:06:33.150
这是所有记录的陈述

00:06:31.340 --> 00:06:34.590
是的，这是一个

00:06:33.150 --> 00:06:37.080
如果是的话，那实际上是

00:06:34.590 --> 00:06:38.310
最后一件可以执行的事情

00:06:37.080 --> 00:06:40.100
那种东西会出现

00:06:38.310 --> 00:06:42.180
在控制台中，如果您将此粘贴到

00:06:40.100 --> 00:06:45.180
有趣，那么有趣

00:06:42.180 --> 00:06:47.790
是的，如果您只是这样，那就很好

00:06:45.180 --> 00:06:50.150
说可以，但话又说回来，我想

00:06:47.790 --> 00:06:53.550
爱只是成为伊芙的糖

00:06:50.150 --> 00:06:55.310
让我像早日归来一样做回报

00:06:53.550 --> 00:06:57.300
邓诺二世认为你是对的我认为

00:06:55.310 --> 00:07:00.360
这里的东西真的很好

00:06:57.300 --> 00:07:03.030
是一种有效的税收，从

00:07:00.360 --> 00:07:04.979
前几个字符的功能是

00:07:03.030 --> 00:07:06.690
会被调用amedeo只是

00:07:04.979 --> 00:07:09.990
执行该代码块

00:07:06.690 --> 00:07:12.510
返回虽然会很好，这是

00:07:09.990 --> 00:07:14.940
值得一看的问题不确定我

00:07:12.510 --> 00:07:17.639
像这样的解决方案

00:07:14.940 --> 00:07:22.470
那是索莫斯宣布他讨厌这个主意

00:07:17.639 --> 00:07:24.419
每个人都参与了39次

00:07:22.470 --> 00:07:26.430
一个，我们已经看到了这一点之前，我们已经

00:07:24.419 --> 00:07:29.760
做这样的例子，所以我们说

00:07:26.430 --> 00:07:31.260
你好世界或默认好吧

00:07:29.760 --> 00:07:35.090
好像我们要去一些它已经失去了

00:07:31.260 --> 00:07:37.560
带问号的能量是

00:07:35.090 --> 00:07:39.690
所以这里的问题是，如果世界是

00:07:37.560 --> 00:07:42.270
一个空字符串，您实际上想要它

00:07:39.690 --> 00:07:45.860
哟，你想说世界是否存在

00:07:42.270 --> 00:07:50.750
未定义或0，所以这是建议

00:07:45.860 --> 00:07:55.200
所以这意味着使用default 

00:07:50.750 --> 00:07:58.320
 world为null或未定义，但不是

00:07:55.200 --> 00:08:00.270
遇到陷阱的空字符串

00:07:58.320 --> 00:08:01.800
您正在做麦片的地方，我们有一个

00:08:00.270 --> 00:08:04.199
默认值，但是您意识到哦

00:08:01.800 --> 00:08:05.789
等待0和空字符串或实际上

00:08:04.199 --> 00:08:08.010
即使在此也被认为是错误的

00:08:05.789 --> 00:08:08.729
如果我有合法的价值观，是的

00:08:08.010 --> 00:08:10.440
究竟

00:08:08.729 --> 00:08:12.720
有趣有趣

00:08:10.440 --> 00:08:17.550
那是投票，好吧，好吧，让我们继续

00:08:12.720 --> 00:08:22.320
去做什么，它取代了

00:08:17.550 --> 00:08:24.360
第一个加号啊，带M的空格

00:08:22.320 --> 00:08:25.770
我已经遇到了很多次，如果

00:08:24.360 --> 00:08:27.389
如果我要把所有的都放

00:08:25.770 --> 00:08:29.250
你总是必须选择正确的

00:08:27.389 --> 00:08:30.479
完全像那样访问，并且

00:08:29.250 --> 00:08:32.070
可怕的权利，因为那你就在

00:08:30.479 --> 00:08:33.419
特别是如果您正在做的事情加倍

00:08:32.070 --> 00:08:35.580
加上斜线，您已经得到了所有

00:08:33.419 --> 00:08:37.409
可怕的逃避是讨厌的

00:08:35.580 --> 00:08:39.450
提案是，全部替换为是

00:08:37.409 --> 00:08:41.099
有趣的好事吗

00:08:39.450 --> 00:08:43.760
出色的光彩继续前进

00:08:41.099 --> 00:08:43.760
 o 

00:08:45.860 --> 00:08:51.140
哦，这是Ruby，这是Ruby，这是

00:08:49.100 --> 00:08:54.350
这是从哪里来的，所以我们做了什么

00:08:51.140 --> 00:08:57.290
你会怎么认为这是如此

00:08:54.350 --> 00:09:00.110
我可以看到两个版本

00:08:57.290 --> 00:09:02.090
一些函数需要参数

00:09:00.110 --> 00:09:04.880
返回一个函数，然后得到

00:09:02.090 --> 00:09:06.080
用这个东西或块调用

00:09:04.880 --> 00:09:07.640
最后变成第二个

00:09:06.080 --> 00:09:11.780
一些功能的参数第二个

00:09:07.640 --> 00:09:13.420
正确，是的，只是糖

00:09:11.780 --> 00:09:16.100
有反应的人会喜欢它

00:09:13.420 --> 00:09:19.160
对，这是一种有趣的方式

00:09:16.100 --> 00:09:21.710
语法，这是一个

00:09:19.160 --> 00:09:23.510
这是非常非常不整洁的

00:09:21.710 --> 00:09:24.740
现在是自动的，我是说如果

00:09:23.510 --> 00:09:26.600
您将功能放入

00:09:24.740 --> 00:09:28.130
根据定义的语言不是

00:09:26.600 --> 00:09:30.680
真的是惯用语了

00:09:28.130 --> 00:09:32.390
但是现在感觉很异国

00:09:30.680 --> 00:09:34.550
是的，感觉确实很外国

00:09:32.390 --> 00:09:36.710
这是很多新的语法

00:09:34.550 --> 00:09:38.840
没事的东西有多不同

00:09:36.710 --> 00:09:40.250
真的是我们真正获得了什么

00:09:38.840 --> 00:09:42.980
认为它必须看到像

00:09:40.250 --> 00:09:47.150
更多链接，因为我可以举例

00:09:42.980 --> 00:09:48.740
做一些功能然后返回一个新的

00:09:47.150 --> 00:09:50.990
函数需要一个函数

00:09:48.740 --> 00:09:53.630
将这些日志链接在一起还是

00:09:50.990 --> 00:09:55.100
我们想要允许的一些哦，是的，我

00:09:53.630 --> 00:09:59.210
甚至没有想到我不知道

00:09:55.100 --> 00:10:02.330
那是值得一看的有效语法

00:09:59.210 --> 00:10:04.130
在我的意思是我的意思是我的忠实粉丝

00:10:02.330 --> 00:10:06.350
一般的函数式编程

00:10:04.130 --> 00:10:08.800
观看我的增压系列

00:10:06.350 --> 00:10:12.410
关于功能性JavaScript编程

00:10:08.800 --> 00:10:13.460
好吧，下一个是最后一个

00:10:12.410 --> 00:10:15.410
好的

00:10:13.460 --> 00:10:19.030
熟悉此语法的数组

00:10:15.410 --> 00:10:23.570
一阵优秀的四分先生

00:10:19.030 --> 00:10:27.380
调制使您的工作成为我们的最后

00:10:23.570 --> 00:10:30.500
我记得被循环成一个项目

00:10:27.380 --> 00:10:32.210
 Twitter围绕这件事的烈火哦，是的

00:10:30.500 --> 00:10:34.640
那是我上船的最后一个项目

00:10:32.210 --> 00:10:37.250
是的，因为这是唯一的方法

00:10:34.640 --> 00:10:39.320
现在是数组尖括号和

00:10:37.250 --> 00:10:43.820
然后在他们的数组长度减去一

00:10:39.320 --> 00:10:45.890
我也认为，如果

00:10:43.820 --> 00:10:47.870
数组为空或只是为了

00:10:45.890 --> 00:10:49.550
未定义，那么你将减去数组

00:10:47.870 --> 00:10:51.410
我认为没有减数

00:10:49.550 --> 00:10:52.520
很容易就知道，然后突然

00:10:51.410 --> 00:10:54.860
你必须考虑这些圣洁

00:10:52.520 --> 00:10:56.240
数组，因此如果

00:10:54.860 --> 00:10:57.800
她可能是不确定的M 

00:10:56.240 --> 00:10:59.720
或曾经被修改过的东西

00:10:57.800 --> 00:11:01.879
这很容易

00:10:59.720 --> 00:11:03.529
阅读获取最后一个项目的方法，我

00:11:01.879 --> 00:11:06.079
同意我一直都想要这个

00:11:03.529 --> 00:11:08.420
很好，它也是二传手

00:11:06.079 --> 00:11:11.600
太好了，所以这是我制作数组1 

00:11:08.420 --> 00:11:13.759
到4是的，那东西很好

00:11:11.600 --> 00:11:14.959
我们在Twitter上拥有的是

00:11:13.759 --> 00:11:16.430
也应该有第一项

00:11:14.959 --> 00:11:18.319
嗯，实际上它是我

00:11:16.430 --> 00:11:20.990
看到有人在走，我只是我真的

00:11:18.319 --> 00:11:26.899
对我没有的第一个项目感到兴奋

00:11:20.990 --> 00:11:27.589
提到最后一个项目，因为我实际上较短

00:11:26.899 --> 00:11:29.329
好的

00:11:27.589 --> 00:11:31.490
就像我了解的兴奋

00:11:29.329 --> 00:11:33.230
我上次在提案中见面

00:11:31.490 --> 00:11:36.560
提到最后一次IME扩张第一夜

00:11:33.230 --> 00:11:39.649
所以，是的，好的，所以我就是那些

00:11:36.560 --> 00:11:42.199
你最喜欢我们有什么

00:11:39.649 --> 00:11:44.420
我认为这很酷，问不，我认为

00:11:42.199 --> 00:11:45.620
对我最大的影响可能是因为

00:11:44.420 --> 00:11:48.470
我一直在写很多像

00:11:45.620 --> 00:11:50.089
最近面向用户的斜杠库代码

00:11:48.470 --> 00:11:52.430
是的，所以你总是要处理

00:11:50.089 --> 00:11:53.959
选项对象，然后整个

00:11:52.430 --> 00:11:55.699
验证内容变得烦人

00:11:53.959 --> 00:11:57.589
是的，你总是可以传递一些东西

00:11:55.699 --> 00:11:59.329
像这样的功能

00:11:57.589 --> 00:12:01.670
最后我是一个数组，不是

00:11:59.329 --> 00:12:03.500
非常漂亮，但确实能胜任

00:12:01.670 --> 00:12:06.790
空东西到底在哪里

00:12:03.500 --> 00:12:09.050
库函数难以排序

00:12:06.790 --> 00:12:10.699
而且您必须将它们链接起来，这很奇怪

00:12:09.050 --> 00:12:12.980
不好意思

00:12:10.699 --> 00:12:15.800
是的，这就是我走进去的一切

00:12:12.980 --> 00:12:17.959
在下一次5039会议之后，他们不这样做

00:12:15.800 --> 00:12:20.449
他们有没有继续前进

00:12:17.959 --> 00:12:22.579
更多建议，所以如果我再也不能

00:12:20.449 --> 00:12:24.079
想到一个代码集来做

00:12:22.579 --> 00:12:25.279
要经历更多，我要

00:12:24.079 --> 00:12:27.740
去，我相信他们会更多

00:12:25.279 --> 00:12:29.629
那时的提案，所以我们会继续做

00:12:27.740 --> 00:12:33.500
这是一种正常的事情，直到

00:12:29.629 --> 00:12:38.000
然后就像我对待自己

00:12:33.500 --> 00:12:41.569
按摩按摩

00:12:38.000 --> 00:12:44.329
按摩我不知道我也不知道

00:12:41.569 --> 00:12:47.290
看注入的消息，我是一个大师， 

00:12:44.329 --> 00:12:47.290
消息是的

