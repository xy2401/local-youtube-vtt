WEBVTT
Kind: captions
Language: en

00:00:00.040 --> 00:00:01.249
JAKE: Where are we actually--

00:00:01.249 --> 00:00:02.873
PAUL: OK, glad you
asked, because I did

00:00:02.873 --> 00:00:05.480
think a little bit further than
you, since you started driving

00:00:05.480 --> 00:00:07.320
and you have no idea
where you're going.

00:00:07.320 --> 00:00:09.700
I thought, since we went
to the boozer in England,

00:00:09.700 --> 00:00:12.220
we could, this time,
continue the trend,

00:00:12.220 --> 00:00:13.910
but go to a vineyard.

00:00:13.910 --> 00:00:15.206
JAKE: Ooh, that's--

00:00:15.206 --> 00:00:16.080
PAUL: Keep it classy.

00:00:24.470 --> 00:00:25.700
See now, look at this.

00:00:25.700 --> 00:00:29.700
Right, I kind of feel
like, yeah, all right,

00:00:29.700 --> 00:00:32.189
like we did the pub
before, back in England,

00:00:32.189 --> 00:00:37.810
but I do think this has
a slightly better view.

00:00:37.810 --> 00:00:40.652
JAKE: How qualified do you feel?

00:00:40.652 --> 00:00:41.360
PAUL: Not at all.

00:00:41.360 --> 00:00:41.730
JAKE: Yeah.

00:00:41.730 --> 00:00:43.355
PAUL: I know you're
going through this.

00:00:43.355 --> 00:00:48.542
I know it's red, or it's
a clearish kind of color.

00:00:48.542 --> 00:00:50.000
JAKE: It's nice,
and it's not nice.

00:00:50.000 --> 00:00:50.810
It's one of those.

00:00:50.810 --> 00:00:52.590
Very binary with
my wine tasting.

00:00:52.590 --> 00:00:55.280
PAUL: And I have an upper limit
of about five pounds, or $8.

00:00:55.280 --> 00:00:57.730
And if it's more than that,
it's probably not worth it.

00:00:57.730 --> 00:00:58.850
JAKE: Anyway.

00:00:58.850 --> 00:00:59.460
PAUL: Right.

00:00:59.460 --> 00:01:00.940
So since we're here--

00:01:00.940 --> 00:01:01.507
JAKE: Yes.

00:01:01.507 --> 00:01:03.090
PAUL: --we tend to
talk about the web.

00:01:03.090 --> 00:01:04.590
And today, I think,
is no different.

00:01:04.590 --> 00:01:08.184
I want to talk about
libraries and frameworks.

00:01:08.184 --> 00:01:09.110
JAKE: Ah.

00:01:09.110 --> 00:01:11.402
Yes, because you're not big
on the frameworks, are you?

00:01:11.402 --> 00:01:13.068
PAUL: No, and neither
are you, honestly.

00:01:13.068 --> 00:01:15.470
JAKE: On the other hand, I
am not big on the frameworks.

00:01:15.470 --> 00:01:16.320
PAUL: Yeah, so I don't
think there is going

00:01:16.320 --> 00:01:17.403
to be much of an argument.

00:01:17.403 --> 00:01:20.660
But I do want to talk about
it, because it bothers me

00:01:20.660 --> 00:01:25.570
that I perceive that the
default state of developers

00:01:25.570 --> 00:01:29.930
is, I've got a blank page here,
how am I going to fill it out?

00:01:29.930 --> 00:01:31.040
Ah, I need a framework.

00:01:31.040 --> 00:01:32.367
Which one do I use?

00:01:32.367 --> 00:01:34.950
JAKE: That is a problem I have
with frameworks, that they have

00:01:34.950 --> 00:01:36.356
a way of starting projects.

00:01:36.356 --> 00:01:38.730
Like, there's an expectation
to use them from the offset.

00:01:38.730 --> 00:01:42.000
And I think if you're thinking,
what combination of frameworks

00:01:42.000 --> 00:01:43.680
should I use to render
this blank page,

00:01:43.680 --> 00:01:45.510
then I think something
has gone wrong.

00:01:45.510 --> 00:01:45.890
PAUL: Gone wrong.

00:01:45.890 --> 00:01:46.390
JAKE: Yeah.

00:01:46.390 --> 00:01:48.830
For me, it's entirely from
a performance point of view.

00:01:48.830 --> 00:01:49.330
PAUL: Oh.

00:01:49.330 --> 00:01:50.788
JAKE: Well, no,
it's not, actually.

00:01:50.788 --> 00:01:52.970
OK, step one, performance.

00:01:52.970 --> 00:01:55.530
If your page has to
load a ton of JavaScript

00:01:55.530 --> 00:01:57.750
in order to make a request
for the actual data it's

00:01:57.750 --> 00:02:00.242
going to display,
You've lost performance.

00:02:00.242 --> 00:02:02.200
And you can sort of say,
oh, but next time it's

00:02:02.200 --> 00:02:02.991
going to be cached.

00:02:02.991 --> 00:02:04.120
It might not be.

00:02:04.120 --> 00:02:06.240
You might have changed the
code, busted the cache.

00:02:06.240 --> 00:02:07.310
PAUL: And it's an
assumption that somebody's

00:02:07.310 --> 00:02:08.352
going to come back again.

00:02:08.352 --> 00:02:08.851
Right?

00:02:08.851 --> 00:02:09.484
Well it--

00:02:09.484 --> 00:02:10.900
JAKE: It's your
goal, I would say.

00:02:10.900 --> 00:02:12.170
PAUL: It's your
goal, but you don't

00:02:12.170 --> 00:02:13.050
know that somebody's going to.

00:02:13.050 --> 00:02:15.610
It's like paying a big hefty
tax on the assumption you're

00:02:15.610 --> 00:02:16.550
going to get a repeat view.

00:02:16.550 --> 00:02:16.960
JAKE: That's true.

00:02:16.960 --> 00:02:17.620
PAUL: And you might not.

00:02:17.620 --> 00:02:18.430
You might not.

00:02:18.430 --> 00:02:18.930
JAKE: Yep.

00:02:18.930 --> 00:02:20.090
And stuff falls out of
the cache all the time.

00:02:20.090 --> 00:02:21.090
PAUL: Yeah, exactly.

00:02:21.090 --> 00:02:22.881
JAKE: Not the service
worker cache, though.

00:02:22.881 --> 00:02:24.270
PAUL: Oh, you and
service worker.

00:02:24.270 --> 00:02:25.150
Here we go again!

00:02:25.150 --> 00:02:26.250
JAKE: Service worker.

00:02:26.250 --> 00:02:27.140
PAUL: Dun dun dun.

00:02:27.140 --> 00:02:28.630
One trick pony, Jake Archibald.

00:02:28.630 --> 00:02:30.440
JAKE: All right, come
on, it's got a cache,

00:02:30.440 --> 00:02:32.210
you can rely on it.

00:02:32.210 --> 00:02:34.360
PAUL: OK, performance,
that notwithstanding,

00:02:34.360 --> 00:02:39.280
I think for me, it's about
code ownership somehow.

00:02:39.280 --> 00:02:42.497
It's about a level of trust
that I don't necessarily feel.

00:02:42.497 --> 00:02:44.080
And what I want to
do is, I want to be

00:02:44.080 --> 00:02:47.360
able to feel like my application
code is the thing that's

00:02:47.360 --> 00:02:47.860
running.

00:02:47.860 --> 00:02:50.440
That I'm not running
through something else,

00:02:50.440 --> 00:02:52.350
that I don't
necessarily understand.

00:02:52.350 --> 00:02:53.480
JAKE: Well, running
through something else

00:02:53.480 --> 00:02:55.521
is fine, because that's
what a library is, right?

00:02:55.521 --> 00:02:56.066
You've got--

00:02:56.066 --> 00:02:56.609
PAUL: No.

00:02:56.609 --> 00:02:58.150
JAKE: You've got a
hold of both ends,

00:02:58.150 --> 00:02:59.880
and you're running
through bits of library

00:02:59.880 --> 00:03:00.880
that you don't understand.

00:03:00.880 --> 00:03:01.040
PAUL: Yep.

00:03:01.040 --> 00:03:02.150
JAKE: But that's fine,
because if one of them

00:03:02.150 --> 00:03:04.940
starts misbehaving, rip it
out, either code it yourself,

00:03:04.940 --> 00:03:06.440
or find a replacement library.

00:03:06.440 --> 00:03:06.939
PAUL: Yes.

00:03:06.939 --> 00:03:10.299
But when you're going
through something else, to--

00:03:10.299 --> 00:03:11.840
JAKE: Well, you're
in something else,

00:03:11.840 --> 00:03:13.520
I think, with a framework.

00:03:13.520 --> 00:03:16.434
And the framework, it
will give you scraps.

00:03:16.434 --> 00:03:18.850
PAUL: (IN A HIGH VOICE) Please,
sir, can I have some more?

00:03:18.850 --> 00:03:20.970
I'd like to work with
this application.

00:03:20.970 --> 00:03:22.460
JAKE: (IN A HIGH VOICE) Yes, can
you please send this data over

00:03:22.460 --> 00:03:22.740
here?

00:03:22.740 --> 00:03:23.345
PAUL: (IN A LOW VOICE) More?

00:03:23.345 --> 00:03:23.670
Pfft.

00:03:23.670 --> 00:03:24.290
Get out.

00:03:24.290 --> 00:03:28.560
JAKE: But then, you're
sat in a tiny bubble

00:03:28.560 --> 00:03:31.190
of the overall application
with a framework.

00:03:31.190 --> 00:03:33.390
And I feel that to get the
most out of a framework,

00:03:33.390 --> 00:03:38.410
you need to understand how
the framework is built.

00:03:38.410 --> 00:03:39.660
And these frameworks are huge.

00:03:39.660 --> 00:03:39.940
So it's really
difficult to do that.

00:03:39.940 --> 00:03:40.565
PAUL: They are.

00:03:40.565 --> 00:03:42.850
I actually feel-- and
maybe this is wrong--

00:03:42.850 --> 00:03:46.180
but it feels to me like it's
kind of, the decision is

00:03:46.180 --> 00:03:46.970
an ergonomics one.

00:03:46.970 --> 00:03:49.370
Like a developer's
saying, my ergonomics

00:03:49.370 --> 00:03:51.730
trumps the user's requirements.

00:03:51.730 --> 00:03:56.400
I want to feel like
my job is easy,

00:03:56.400 --> 00:03:58.920
and what the user gets
is what the user gets.

00:03:58.920 --> 00:04:02.260
And my whole approach is
very much the other way.

00:04:02.260 --> 00:04:05.410
I'd rather go the extra
mile and all my users

00:04:05.410 --> 00:04:09.710
benefit than my
life is a bit easier

00:04:09.710 --> 00:04:12.510
and I'll take some of
the bad performance,

00:04:12.510 --> 00:04:15.344
or the tacks of
using that framework.

00:04:15.344 --> 00:04:17.510
So I don't think that
frameworks are inherently evil

00:04:17.510 --> 00:04:18.694
and to be avoided.

00:04:18.694 --> 00:04:20.860
But I think you want to be
able to transition to one

00:04:20.860 --> 00:04:22.960
and say, yeah, now it feels
like we're getting to the point

00:04:22.960 --> 00:04:24.489
where we're going
to reinvent that.

00:04:24.489 --> 00:04:26.030
And I think you can
only do that when

00:04:26.030 --> 00:04:28.060
you've got to a certain
point with the build.

00:04:28.060 --> 00:04:31.940
JAKE: So for you, it's start
light, start with libraries,

00:04:31.940 --> 00:04:34.470
as and when you
need them, and then

00:04:34.470 --> 00:04:37.320
make the jump to frameworks
only if you have to.

00:04:37.320 --> 00:04:37.920
PAUL: Agreed.

00:04:37.920 --> 00:04:49.970
[MUSIC PLAYING]

