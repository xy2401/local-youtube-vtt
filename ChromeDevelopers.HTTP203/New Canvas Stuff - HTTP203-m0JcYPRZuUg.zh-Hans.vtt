WEBVTT
Kind: captions
Language: zh-Hans

00:00:03.080 --> 00:00:07.319
每次我不大声大声

00:00:05.400 --> 00:00:17.609
认为敲手会成功

00:00:07.319 --> 00:00:20.400
带五张哦帆布一起用

00:00:17.609 --> 00:00:21.689
像素，或者如果像素当然会出现

00:00:20.400 --> 00:00:23.820
大约有一段时间了

00:00:21.689 --> 00:00:25.350
我认为它实际上没有被充分利用

00:00:23.820 --> 00:00:27.330
因为有时候真的有喜欢

00:00:25.350 --> 00:00:29.609
影响人们喜欢向后弯腰

00:00:27.330 --> 00:00:30.060
用dom元素实现它，所以我

00:00:29.609 --> 00:00:32.219
去做

00:00:30.060 --> 00:00:34.140
这很简单，因为那时我可以使用

00:00:32.219 --> 00:00:36.570
这不是我想的那种过渡

00:00:34.140 --> 00:00:38.420
我看起来像一些微调的人一样热情

00:00:36.570 --> 00:00:41.160
在您放入Skoosh的微调器中

00:00:38.420 --> 00:00:42.809
是的，但是我得到了复制的摘要

00:00:41.160 --> 00:00:43.770
帆布，是的，那你会

00:00:42.809 --> 00:00:45.390
比较有趣

00:00:43.770 --> 00:00:48.030
实际表现是这样的

00:00:45.390 --> 00:00:51.329
在微调器上，我在HTTP上执行了

00:00:48.030 --> 00:00:52.559
一个免费的应用程序，那里有一个广播进度

00:00:51.329 --> 00:00:55.500
酒吧的事是有的

00:00:52.559 --> 00:00:56.760
 darah SVG他们不是帆布，所以我们

00:00:55.500 --> 00:00:58.410
谈论他们我只是

00:00:56.760 --> 00:01:00.320
说在SVG中做起来更容易

00:00:58.410 --> 00:01:03.059
了解为什么人们不使用画布

00:01:00.320 --> 00:01:06.060
好的，这就是结束

00:01:03.059 --> 00:01:07.500
很像我发现的画布上的圆形东西

00:01:06.060 --> 00:01:09.630
负鼠，因为你只有RS和

00:01:07.500 --> 00:01:12.930
圆的命令弧在哪里

00:01:09.630 --> 00:01:16.740
参数太不直观了，是的

00:01:12.930 --> 00:01:18.299
是的，这很烦人，但我想

00:01:16.740 --> 00:01:20.310
谈论的是新事物

00:01:18.299 --> 00:01:21.540
到了，嘿，新的东西

00:01:20.310 --> 00:01:23.220
你的东西，所以铬

00:01:21.540 --> 00:01:24.840
现在，我也想到了浏览器

00:01:23.220 --> 00:01:27.990
认为肯定是在Firefox中

00:01:24.840 --> 00:01:30.600
它的屏幕外画布是奥斯卡的前提

00:01:27.990 --> 00:01:32.220
我的意思是那是同一张画布

00:01:30.600 --> 00:01:35.729
相同的相同的API，您得到的相同

00:01:32.220 --> 00:01:37.020
是的，但是实际上你出去了

00:01:35.729 --> 00:01:39.150
有什么新消息，杰克，我不知道

00:01:37.020 --> 00:01:42.180
告诉我，请便便是同一张画布

00:01:39.150 --> 00:01:45.020
它有相同的吸引点，但是

00:01:42.180 --> 00:01:47.790
屏幕外否，是因为它在工作人员中， 

00:01:45.020 --> 00:01:49.710
是的，但后来变成了

00:01:47.790 --> 00:01:52.740
在工人和用户中建造

00:01:49.710 --> 00:01:53.790
生成图形然后发送

00:01:52.740 --> 00:01:55.350
通过神话FET，你发送给他们

00:01:53.790 --> 00:01:56.820
转到主线程，就是这样

00:01:55.350 --> 00:01:59.310
您可以在其中完成所有复杂的工作

00:01:56.820 --> 00:02:02.430
一个工人，然后不发送任何调动

00:01:59.310 --> 00:02:03.360
因为它也可以做WebGL，所以这是

00:02:02.430 --> 00:02:05.219
这是关于浏览器的事情

00:02:03.360 --> 00:02:07.500
支持就是我们支持2d和WebGL 

00:02:05.219 --> 00:02:10.020
我相信您的Firefox支持WebGL 

00:02:07.500 --> 00:02:13.530
只有WebGL是的，有趣的是

00:02:10.020 --> 00:02:16.260
他们知道做游戏的事吗

00:02:13.530 --> 00:02:18.690
专注于WebGL我对此很感兴趣

00:02:16.260 --> 00:02:20.190
做像图像解码之类的事情

00:02:18.690 --> 00:02:22.350
离开主线程，你应该

00:02:20.190 --> 00:02:24.690
能够知道我有兴趣，而我

00:02:22.350 --> 00:02:27.690
我完全不知道

00:02:24.690 --> 00:02:30.239
意味着法拉第的图像解码

00:02:27.690 --> 00:02:32.310
实际上现在有图像解码

00:02:30.239 --> 00:02:33.989
线程外解码图像，可以

00:02:32.310 --> 00:02:34.860
不确定不会给您像素

00:02:33.989 --> 00:02:36.989
我是说你知道前进，但是

00:02:34.860 --> 00:02:38.370
在这里说我想保罗·刘易斯很久了

00:02:36.989 --> 00:02:41.459
之前写了一篇博客文章，他实际上

00:02:38.370 --> 00:02:43.920
用画布在工人中解码的图像

00:02:41.459 --> 00:02:45.570
基本上不阻塞主线程

00:02:43.920 --> 00:02:47.250
过去曾经是解码的东西

00:02:45.570 --> 00:02:50.010
解码锁定主线程

00:02:47.250 --> 00:02:52.230
现在浏览器只是以不同的方式解码

00:02:50.010 --> 00:02:53.670
你想要的引擎盖下的线程

00:02:52.230 --> 00:02:55.709
达到像素或做一些

00:02:53.670 --> 00:02:57.630
操纵或扩展它并

00:02:55.709 --> 00:02:59.610
少存储在磁盘或其他东西上

00:02:57.630 --> 00:03:01.110
这真的很方便

00:02:59.610 --> 00:03:03.660
所有相机都是主线

00:03:01.110 --> 00:03:06.450
根据，是的，是的，所有的工作

00:03:03.660 --> 00:03:09.989
然后只发送完成的图像

00:03:06.450 --> 00:03:12.630
你必须喜欢创建一个屏幕外

00:03:09.989 --> 00:03:14.760
画布，然后编写管道将其携带

00:03:12.630 --> 00:03:17.549
在屏幕上完成后，非常

00:03:14.760 --> 00:03:19.769
数据，也可以从

00:03:17.549 --> 00:03:21.180
主线程到工人，然后

00:03:19.769 --> 00:03:23.070
只是在工人身上进行操作

00:03:21.180 --> 00:03:24.390
哦，那真是不可思议，是的， 

00:03:23.070 --> 00:03:25.680
一点点，所以这可能会好

00:03:24.390 --> 00:03:26.940
适用于喜欢的游戏

00:03:25.680 --> 00:03:28.019
游戏逻辑可能会遇到

00:03:26.940 --> 00:03:29.340
工作，你说就像你画一个

00:03:28.019 --> 00:03:30.750
帆布，它被涂在主体上

00:03:29.340 --> 00:03:32.250
线程，您现在获得requestanimationframe 

00:03:30.750 --> 00:03:33.750
在一个感兴趣的工人中

00:03:32.250 --> 00:03:35.040
真正需要的东西

00:03:33.750 --> 00:03:35.489
是的，您不需要的是

00:03:35.040 --> 00:03:37.140
很酷

00:03:35.489 --> 00:03:38.630
我不确定如果您已经

00:03:37.140 --> 00:03:41.190
有两个不同的显示器

00:03:38.630 --> 00:03:42.420
刷新率也许可以弄清楚

00:03:41.190 --> 00:03:44.280
因为它知道我的相机在哪里

00:03:42.420 --> 00:03:45.750
是的，Chrome已经知道

00:03:44.280 --> 00:03:47.760
分辨率和字面上一样

00:03:45.750 --> 00:03:49.079
可以从高DPI移至低dpi 

00:03:47.760 --> 00:03:52.079
它只是工作

00:03:49.079 --> 00:03:53.459
确切的是，但问题是它是一个选项卡

00:03:52.079 --> 00:03:55.019
那知道，而如果你在一个

00:03:53.459 --> 00:03:56.340
工作人员，您不在选项卡中，那么它

00:03:55.019 --> 00:03:57.900
与之紧密相关

00:03:56.340 --> 00:04:00.329
与渲染器相关联，因此

00:03:57.900 --> 00:04:03.810
它应该工作是吗，所以

00:04:00.329 --> 00:04:05.370
我认为我会有用的

00:04:03.810 --> 00:04:07.530
说实话这是完全正确的拼图

00:04:05.370 --> 00:04:08.820
好，还有其他情况可以解锁

00:04:07.530 --> 00:04:11.400
不只是您的表演案例

00:04:08.820 --> 00:04:14.400
像是你被推

00:04:11.400 --> 00:04:16.140
服务人员中的通知，您

00:04:14.400 --> 00:04:19.289
像头像一样被缓存

00:04:16.140 --> 00:04:21.750
是的，但是你是群​​发消息

00:04:19.289 --> 00:04:24.270
可以构造一个图标为true，但是

00:04:21.750 --> 00:04:26.540
由或像徽章那样组成

00:04:24.270 --> 00:04:28.550
现在有五个新消息，所以您要

00:04:26.540 --> 00:04:30.140
完全改变是的，你可以做

00:04:28.550 --> 00:04:32.000
而且不必去做

00:04:30.140 --> 00:04:33.470
这实际上是超级有用的，不是这样

00:04:32.000 --> 00:04:35.560
是的，这只是一点，我们已经

00:04:33.470 --> 00:04:37.520
我们的点击器，您也可以喜欢视频

00:04:35.560 --> 00:04:40.760
可能在工作人员中进行代码转换

00:04:37.520 --> 00:04:43.580
也许我的意思是知道你是否有碗

00:04:40.760 --> 00:04:46.490
流媒体的东西，也许我的意思是

00:04:43.580 --> 00:04:48.050
从技术上讲，画布能够播放

00:04:46.490 --> 00:04:49.640
影片，您可以采取

00:04:48.050 --> 00:04:52.120
视频元素，随处解码

00:04:49.640 --> 00:04:54.230
所以我们没有视频欢迎我

00:04:52.120 --> 00:04:55.940
那是缺少的部分

00:04:54.230 --> 00:04:57.080
立即许多媒体API是

00:04:55.940 --> 00:04:59.180
现在工人不见了

00:04:57.080 --> 00:05:01.310
他们在看帮派和我的东西

00:04:59.180 --> 00:05:03.710
尤其是想想，我们将开始

00:05:01.310 --> 00:05:05.510
做更多不真实的媒体工作

00:05:03.710 --> 00:05:06.800
基于时间，是的，我认为是在那时

00:05:05.510 --> 00:05:08.870
有道理开始

00:05:06.800 --> 00:05:10.070
工人，是的，这真的很酷，因为我

00:05:08.870 --> 00:05:12.430
现在写很多媒体

00:05:10.070 --> 00:05:15.260
流基于WebRTC 

00:05:12.430 --> 00:05:17.210
所以这一切都是基于你知道的

00:05:15.260 --> 00:05:19.790
如果不是实时的，丢帧

00:05:17.210 --> 00:05:20.720
是的，就像视频处理一样

00:05:19.790 --> 00:05:22.280
你会成为动物，我们拥有

00:05:20.720 --> 00:05:24.920
您可以在其中进行音频工作的地方

00:05:22.280 --> 00:05:26.480
音频Web音频api知道音频

00:05:24.920 --> 00:05:28.370
具体来说，但我们可以使用Web Audio API 

00:05:26.480 --> 00:05:30.680
做一个离线的背景，只是产生

00:05:28.370 --> 00:05:32.540
音频会很棒

00:05:30.680 --> 00:05:34.910
视频的东西，因为如果你

00:05:32.540 --> 00:05:36.560
想产生像

00:05:34.910 --> 00:05:38.090
像迷你视频编辑器一样酷

00:05:36.560 --> 00:05:39.500
在网络上建立并说出这一愿景

00:05:38.090 --> 00:05:41.180
编码器和已经用于Web的浏览器

00:05:39.500 --> 00:05:43.520
应用程序，您会看到我们为什么无法访问它们

00:05:41.180 --> 00:05:45.500
永远，所以这很酷

00:05:43.520 --> 00:05:48.290
很好，那是另外一个

00:05:45.500 --> 00:05:50.840
一个仅在Chrome中具有超级实验性

00:05:48.290 --> 00:05:53.180
标记后面的东西

00:05:50.840 --> 00:05:56.600
实验还可以吗

00:05:53.180 --> 00:05:58.730
低延迟画布啊，这是一个

00:05:56.600 --> 00:06:00.860
您将传递到画布的选项

00:05:58.730 --> 00:06:02.900
当你是我的时候

00:06:00.860 --> 00:06:08.590
在2d上下文中获取上下文

00:06:02.900 --> 00:06:11.720
像是什么使它具有低延迟

00:06:08.590 --> 00:06:14.450
好的，就网络标准而言，mm-hmm 

00:06:11.720 --> 00:06:17.660
它所做的是它位于外部

00:06:14.450 --> 00:06:19.460
事件循环，所以现在我们只能

00:06:17.660 --> 00:06:20.900
在那个特定点画画是的

00:06:19.460 --> 00:06:22.820
事件循环，如果还有其他事情

00:06:20.900 --> 00:06:24.890
实际阻止了您

00:06:22.820 --> 00:06:26.210
绘制说明，然后我猜我们

00:06:24.890 --> 00:06:27.770
他们是UNIX的一部分，您知道您PU 

00:06:26.210 --> 00:06:30.740
但是无论我们执行什么

00:06:27.770 --> 00:06:32.090
一批抽签，然后是，等等

00:06:30.740 --> 00:06:35.120
这意味着，如果你喜欢的东西有

00:06:32.090 --> 00:06:36.470
像Dom一样在页面上更改

00:06:35.120 --> 00:06:38.030
绘画将与

00:06:36.470 --> 00:06:40.069
帆布画就是你

00:06:38.030 --> 00:06:42.110
在很多情况下都想要

00:06:40.069 --> 00:06:43.879
这也可能会延迟事物进入

00:06:42.110 --> 00:06:45.259
画布，是的，它正在堆积所有

00:06:43.879 --> 00:06:49.099
这些电话有时正在堆积

00:06:45.259 --> 00:06:50.840
整个图像很棒，是的

00:06:49.099 --> 00:06:52.159
缓冲权是你知道这些

00:06:50.840 --> 00:06:54.259
比我好

00:06:52.159 --> 00:06:55.819
那几乎是一场游戏

00:06:54.259 --> 00:06:58.159
练习是因为当GPU渲染时

00:06:55.819 --> 00:06:59.900
首先喜欢它，您会知道

00:06:58.159 --> 00:07:01.159
然后是几个多边形

00:06:59.900 --> 00:07:02.020
在后面，所以如果你不这样做

00:07:01.159 --> 00:07:03.740
气泡缓冲

00:07:02.020 --> 00:07:06.439
 buh-buh-buh-buh-buh缓冲双

00:07:03.740 --> 00:07:08.419
缓冲，您的GPU被迫运送

00:07:06.439 --> 00:07:09.800
一帧，因为您可能会使用帧速率

00:07:08.419 --> 00:07:11.180
画面不完整，然后你

00:07:09.800 --> 00:07:12.889
变得像这样奇怪的事情

00:07:11.180 --> 00:07:14.569
泪流满面或你喜欢

00:07:12.889 --> 00:07:15.919
即使没有，也可以在框架上堆积

00:07:14.569 --> 00:07:17.779
想要那个，那就是你有一个缓冲区

00:07:15.919 --> 00:07:19.340
他们准备好了您的两张图片

00:07:17.779 --> 00:07:20.689
单独建立下一个框架

00:07:19.340 --> 00:07:23.870
缓冲区，您交换它们，所以这是

00:07:20.689 --> 00:07:26.319
第一个连同撕裂，所以如果

00:07:23.870 --> 00:07:28.759
最终只有一组字节

00:07:26.319 --> 00:07:33.229
代表那个的图像内容

00:07:28.759 --> 00:07:34.009
帆布所以如果你知道你是否

00:07:33.229 --> 00:07:36.529
没有使用requestanimationframe 

00:07:34.009 --> 00:07:38.300
正确地或您的手指伸了一半

00:07:36.529 --> 00:07:42.080
在mmm上，您将得到一半

00:07:38.300 --> 00:07:44.060
页面上的东西很好，我的意思是

00:07:42.080 --> 00:07:46.219
首先听起来像是

00:07:44.060 --> 00:07:47.330
向后退，但在另一侧

00:07:46.219 --> 00:07:49.909
另一方面让您掌控一切

00:07:47.330 --> 00:07:51.919
是不是，所以它对

00:07:49.909 --> 00:07:53.750
诸如绘图应用程序之类的地方

00:07:51.919 --> 00:07:55.129
接受手写笔输入并绘制一个

00:07:53.750 --> 00:07:56.930
马上就没有撕裂的问题

00:07:55.129 --> 00:07:58.539
是的，你真的想要一个慢

00:07:56.930 --> 00:08:00.860
延迟而不是让它感觉像

00:07:58.539 --> 00:08:02.899
你可能会自然而然的

00:08:00.860 --> 00:08:06.469
完全一样，也就像在

00:08:02.899 --> 00:08:10.279
达娜·杰夫（Dana Jeff） 

00:08:06.469 --> 00:08:11.479
实时编译现有的C ++绘图

00:08:10.279 --> 00:08:12.979
那里已经有双重缓冲

00:08:11.479 --> 00:08:15.430
正是这样，您最终会获得两倍

00:08:12.979 --> 00:08:15.430
缓冲

00:08:15.620 --> 00:08:20.659
 o结束，所以这是一种选择

00:08:18.710 --> 00:08:22.969
从那，然后你只要保持

00:08:20.659 --> 00:08:25.490
缓冲您的游戏引擎必须

00:08:22.969 --> 00:08:28.060
寻找，是的，这差不多

00:08:25.490 --> 00:08:30.289
我现在所知道的一切

00:08:28.060 --> 00:08:31.550
牧师看演示，我们将发布

00:08:30.289 --> 00:08:33.199
链接到它，我从来没有

00:08:31.550 --> 00:08:35.630
关于奥地利相机的文章

00:08:33.199 --> 00:08:39.740
后来是的，我们将链接到演示

00:08:35.630 --> 00:08:44.029
画布的低延迟画布

00:08:39.740 --> 00:08:45.890
看起来我并不孤单

00:08:44.029 --> 00:08:47.060
只是很兴奋，不是吗

00:08:45.890 --> 00:08:48.380
我很高兴这是由

00:08:47.060 --> 00:08:51.670
实施的工程师

00:08:48.380 --> 00:08:53.770
你知道我是否认为还可以

00:08:51.670 --> 00:08:55.540
我不知道他们的全名，但仅此而已

00:08:53.770 --> 00:08:57.160
可以将Chrome压碎

00:08:55.540 --> 00:08:58.480
对我来说是次

00:08:57.160 --> 00:09:00.940
我们在说话，但真的很令人兴奋

00:08:58.480 --> 00:09:02.380
我，因为它很简单

00:09:00.940 --> 00:09:04.570
绘图应用程序，我很喜欢并排

00:09:02.380 --> 00:09:06.550
例子，因为我无法确定是否

00:09:04.570 --> 00:09:08.200
就像安慰剂一样

00:09:06.550 --> 00:09:10.060
更快，因为您知道我被告知这是

00:09:08.200 --> 00:09:11.650
低延迟摄像头，如哇，看起来如何

00:09:10.060 --> 00:09:13.240
低延迟是那条线真的

00:09:11.650 --> 00:09:16.030
像我以前一样快速出现在屏幕上

00:09:13.240 --> 00:09:17.170
看到它出现了所以我你知道我是

00:09:16.030 --> 00:09:18.970
对游戏非常重要

00:09:17.170 --> 00:09:20.530
引擎，我想

00:09:18.970 --> 00:09:23.170
看一些科学背后有多快

00:09:20.530 --> 00:09:26.980
就像电话一样，特别是

00:09:23.170 --> 00:09:29.380
但是是的，有时它会占用一个

00:09:26.980 --> 00:09:31.870
麦克风一个腋下就这样

00:09:29.380 --> 00:09:33.880
是我之前，我不是去年

00:09:31.870 --> 00:09:35.350
是的，因为我选了一个

00:09:33.880 --> 00:09:37.240
我想要它作为F1穿着的T恤

00:09:35.350 --> 00:09:39.760
 T恤就像是的，当我穿上T恤时

00:09:37.240 --> 00:09:42.040
然后就在上台前

00:09:39.760 --> 00:09:44.680
我几乎只是四处寻找

00:09:42.040 --> 00:09:47.550
只是这个腋下干了一个

00:09:44.680 --> 00:09:47.550
骨头这一个

