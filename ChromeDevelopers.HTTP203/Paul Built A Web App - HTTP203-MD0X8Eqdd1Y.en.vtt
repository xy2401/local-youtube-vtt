WEBVTT
Kind: captions
Language: en

00:00:04.182 --> 00:00:04.890
JAKE: Here we go.

00:00:04.890 --> 00:00:12.140
So today I have you
hook, line and sinker,

00:00:12.140 --> 00:00:15.105
because we are going fishing.

00:00:15.105 --> 00:00:16.590
PAUL: Ooh.

00:00:16.590 --> 00:00:19.054
[MUSIC PLAYING]

00:00:24.312 --> 00:00:27.225
Jake-- why, exactly?

00:00:27.225 --> 00:00:29.865
JAKE: Well, you say, right,
that fishing is your passion?

00:00:29.865 --> 00:00:30.890
PAUL: No.

00:00:30.890 --> 00:00:31.864
No.

00:00:31.864 --> 00:00:34.030
Can't eat fish, don't like
fish, don't go near fish,

00:00:34.030 --> 00:00:35.470
don't go near anything
that lives in water.

00:00:35.470 --> 00:00:36.420
It doesn't work for me.

00:00:36.420 --> 00:00:37.120
JAKE: Let's quantify this.

00:00:37.120 --> 00:00:38.830
I mean, if I show you
a picture of fish,

00:00:38.830 --> 00:00:39.830
does your head fall off?

00:00:39.830 --> 00:00:41.430
PAUL: No, it's like
you being near the sun.

00:00:41.430 --> 00:00:41.900
Poof.

00:00:41.900 --> 00:00:42.399
Bye.

00:00:42.399 --> 00:00:43.580
JAKE: OK, yeah, fair enough.

00:00:43.580 --> 00:00:45.200
PAUL: Yeah, we all
have our things, mate.

00:00:45.200 --> 00:00:46.950
JAKE: Well, I've bought
all the stuff now,

00:00:46.950 --> 00:00:50.291
so we're going to do it,
and we're going to enjoy it.

00:00:50.291 --> 00:00:52.130
PAUL: You know what
I did recently?

00:00:52.130 --> 00:00:52.970
I built a web app.

00:00:52.970 --> 00:00:53.620
JAKE: Oh, well done, mate.

00:00:53.620 --> 00:00:54.140
PAUL: I know, right.

00:00:54.140 --> 00:00:54.760
JAKE: Congratulations.

00:00:54.760 --> 00:00:56.530
PAUL: It's actually quite
nice to realize that my skills

00:00:56.530 --> 00:00:57.620
haven't completely atrophied.

00:00:57.620 --> 00:00:58.360
JAKE: Yeah, you still got it.

00:00:58.360 --> 00:00:58.860
Well done.

00:00:58.860 --> 00:01:02.184
PAUL: It's an app that lets
you record voice memos.

00:01:02.184 --> 00:01:03.600
And the whole
thing-- I'm actually

00:01:03.600 --> 00:01:05.584
quite impressed with it-- the
whole thing is 71 kilobytes.

00:01:05.584 --> 00:01:06.000
JAKE: OK.

00:01:06.000 --> 00:01:06.700
Does it work offline?

00:01:06.700 --> 00:01:07.210
PAUL: Yes.

00:01:07.210 --> 00:01:07.840
JAKE: A star.

00:01:07.840 --> 00:01:08.740
That's all I care about.

00:01:08.740 --> 00:01:10.260
PAUL: That is all you
actually care about.

00:01:10.260 --> 00:01:10.820
JAKE: Well then,
let's see it then.

00:01:10.820 --> 00:01:11.430
Show us it.

00:01:11.430 --> 00:01:11.805
PAUL: All right.

00:01:11.805 --> 00:01:12.305
Where is it.

00:01:12.305 --> 00:01:13.390
Where is my phone.

00:01:13.390 --> 00:01:14.570
Aha.

00:01:14.570 --> 00:01:16.200
Yeah.

00:01:16.200 --> 00:01:19.600
So you've got this-- you
can record a voice memo.

00:01:19.600 --> 00:01:22.126
And like-- ta-daa!-- save it
and all that kind of stuff.

00:01:22.126 --> 00:01:24.750
It's all working offline because
I'm actually in airplane mode.

00:01:24.750 --> 00:01:25.250
Because--

00:01:25.250 --> 00:01:25.880
JAKE: Roaming.

00:01:25.880 --> 00:01:26.430
You don't want to--

00:01:26.430 --> 00:01:27.805
PAUL: I'm going
to save all this.

00:01:27.805 --> 00:01:30.390
And you can actually
listen to it and all that.

00:01:30.390 --> 00:01:31.640
It actually works really well.

00:01:31.640 --> 00:01:32.330
JAKE: OK.

00:01:32.330 --> 00:01:34.760
And so the web is
perfect, then, yeah?

00:01:34.760 --> 00:01:36.550
PAUL: I think the
problem we have

00:01:36.550 --> 00:01:39.520
is that the browsers
themselves-- they're

00:01:39.520 --> 00:01:41.710
used to encoding and
decoding stuff, right?

00:01:41.710 --> 00:01:43.860
JAKE: Yeah, we got audio
element, video element,

00:01:43.860 --> 00:01:44.680
web audio API--

00:01:44.680 --> 00:01:45.410
PAUL: Yeah.

00:01:45.410 --> 00:01:47.889
Web RTC also encodes
to send over the wire,

00:01:47.889 --> 00:01:48.930
decode on the other side.

00:01:48.930 --> 00:01:49.638
JAKE: True, true.

00:01:49.638 --> 00:01:50.160
PAUL: Right.

00:01:50.160 --> 00:01:52.940
But none of that's
available in JavaScript.

00:01:52.940 --> 00:01:54.602
JAKE: I mean, the
decoder is, right?

00:01:54.602 --> 00:01:55.310
That's web audio.

00:01:55.310 --> 00:01:58.716
PAUL: Yeah, no, it doesn't
work with our [? gopus. ?]

00:01:58.716 --> 00:02:00.340
Which does work with
the audio element,

00:02:00.340 --> 00:02:01.690
so there's a bit of
an inconsistency--

00:02:01.690 --> 00:02:03.315
JAKE: That must be
a Chrome bug, right?

00:02:03.315 --> 00:02:04.648
Because the spec says it's fine.

00:02:04.648 --> 00:02:06.700
PAUL: It's a bug, but it's
a feature request more

00:02:06.700 --> 00:02:07.510
than it's a bug.

00:02:07.510 --> 00:02:07.910
JAKE: Oh yeah.

00:02:07.910 --> 00:02:08.409
Fair enough.

00:02:08.409 --> 00:02:10.120
So these encodes
are surely already

00:02:10.120 --> 00:02:12.950
in there-- in the browser
for web RTC, right?

00:02:12.950 --> 00:02:15.150
They can already encode
speech and whatever

00:02:15.150 --> 00:02:16.210
to send across the wire.

00:02:16.210 --> 00:02:18.740
But there's no-- that's just
not exposed on the web at all.

00:02:18.740 --> 00:02:20.290
PAUL: Well, sort of.

00:02:20.290 --> 00:02:23.450
If you're in Firefox, you've
got the media recorder API,

00:02:23.450 --> 00:02:27.380
which you can get OG
video-- it's Opus, I think,

00:02:27.380 --> 00:02:28.600
for video and audio.

00:02:28.600 --> 00:02:32.525
But it's not available in Chrome
or Safari or anywhere else

00:02:32.525 --> 00:02:33.214
today.

00:02:33.214 --> 00:02:34.630
So the net result
is, the only way

00:02:34.630 --> 00:02:37.254
you can get the thing to save is
to actually create a WAV file.

00:02:37.254 --> 00:02:39.600
And thankfully there are
some very skilled people

00:02:39.600 --> 00:02:42.330
who've wrapped the whole thing
up in libraries and so on.

00:02:42.330 --> 00:02:45.480
But in any case, the
only way you can actually

00:02:45.480 --> 00:02:48.410
store these files and
have it usable everywhere,

00:02:48.410 --> 00:02:49.230
is a WAV file.

00:02:49.230 --> 00:02:50.490
JAKE: Oh, that's going to be--

00:02:50.490 --> 00:02:51.950
PAUL: I think that's bonkers.

00:02:51.950 --> 00:02:54.630
JAKE: So this is why I think
the stream spec is so important.

00:02:54.630 --> 00:02:58.420
Because you will be able
to just pipe, like, a WAV

00:02:58.420 --> 00:03:02.240
stream or whatever type into
the encoder, and get out, like,

00:03:02.240 --> 00:03:03.700
a [? U ?] intake array of bits.

00:03:03.700 --> 00:03:04.521
The encoded data.

00:03:04.521 --> 00:03:05.020
PAUL: Yes.

00:03:05.020 --> 00:03:05.686
That's part one.

00:03:05.686 --> 00:03:07.400
I think, though, the
browser shouldn't

00:03:07.400 --> 00:03:09.950
have special magical
privileges to encode things.

00:03:09.950 --> 00:03:12.580
If it's encoding things,
it should, in theory,

00:03:12.580 --> 00:03:13.706
allow developers to encode.

00:03:13.706 --> 00:03:15.621
JAKE: Well, this is the
extensible web, right?

00:03:15.621 --> 00:03:17.710
If that technology is
already in the browser,

00:03:17.710 --> 00:03:20.590
it absolutely must be
available to developers.

00:03:20.590 --> 00:03:24.170
The only excuse that you could
say to not do that is security.

00:03:24.170 --> 00:03:26.560
And there's no security issue
with exposing an encoder.

00:03:26.560 --> 00:03:27.300
PAUL: Exactly.

00:03:27.300 --> 00:03:31.210
Tell you what, though--
all that aside, there's

00:03:31.210 --> 00:03:34.320
ECMAScript six classes in
there, fat arrows, promises,

00:03:34.320 --> 00:03:36.810
IndexedDB-- there's
loads going on in there.

00:03:36.810 --> 00:03:38.260
All really good fun to use.

00:03:38.260 --> 00:03:39.210
JAKE: Yeah.

00:03:39.210 --> 00:03:43.124
PAUL: But for me the nicest
part was I tested it on Firefox,

00:03:43.124 --> 00:03:45.040
and there are a couple
of small issues to fix.

00:03:45.040 --> 00:03:45.873
It was pretty minor.

00:03:45.873 --> 00:03:47.760
JAKE: Probably because
they were adhering

00:03:47.760 --> 00:03:48.759
to the spec [INAUDIBLE].

00:03:48.759 --> 00:03:49.410
It usually is.

00:03:49.410 --> 00:03:50.610
PAUL: Probably.

00:03:50.610 --> 00:03:54.089
And then somebody out of the
blue contacted me and said,

00:03:54.089 --> 00:03:56.380
do you know what, it works
really nicely on Firefox OS.

00:03:56.380 --> 00:03:57.580
JAKE: Oh-- that's not good.

00:03:57.580 --> 00:03:59.621
PAUL: And it's just like,
it works on Firefox OS,

00:03:59.621 --> 00:04:02.340
it works on Chrome, it
works on desktop, on tablet,

00:04:02.340 --> 00:04:04.235
on the phone-- it works
on all these places.

00:04:04.235 --> 00:04:06.296
JAKE: So how big
is the app, all in?

00:04:06.296 --> 00:04:07.556
PAUL: 71 kilobytes.

00:04:07.556 --> 00:04:10.180
JAKE: I think a hell of a world
for a native app-- you're going

00:04:10.180 --> 00:04:12.090
to be hitting near a megabyte.

00:04:12.090 --> 00:04:13.370
So this is a thing.

00:04:13.370 --> 00:04:14.160
71 k.

00:04:14.160 --> 00:04:19.720
It works on mobile, tablet,
desktop, Firefox OS, Chrome OS

00:04:19.720 --> 00:04:21.560
presumably.

00:04:21.560 --> 00:04:22.170
71 k.

00:04:22.170 --> 00:04:22.882
PAUL: Boom.

00:04:22.882 --> 00:04:27.329
JAKE: That's the
benefit of the web.

00:04:27.329 --> 00:04:30.178
PAUL: I'm getting
bored of this now.

00:04:30.178 --> 00:04:31.507
JAKE: Off you get, then.

00:04:31.507 --> 00:04:32.340
I got fish to catch.

00:04:40.721 --> 00:04:41.220
Nothing.

00:04:44.920 --> 00:04:45.420
Nothing.

00:04:45.420 --> 00:04:47.220
[MUSIC PLAYING]

00:05:01.620 --> 00:05:03.170
Nothing.

