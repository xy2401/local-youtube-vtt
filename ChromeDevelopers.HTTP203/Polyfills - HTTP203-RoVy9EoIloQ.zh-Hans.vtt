WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.180 --> 00:00:01.138
瑟玛：你几岁？ 

00:00:01.138 --> 00:00:02.700
 [笑声] 

00:00:03.660 --> 00:00:06.300
那是我的伴侣所做的。 

00:00:06.300 --> 00:00:09.180
我就像-我在玩《塞尔达传说》。 

00:00:09.180 --> 00:00:09.930
然后我完成了。 

00:00:09.930 --> 00:00:12.000
我站起来，开个愚蠢的玩笑。 

00:00:12.000 --> 00:00:13.523
他就像，你29岁，队友。 

00:00:13.523 --> 00:00:14.522
杰克：（笑）哈，没有

00:00:14.522 --> 00:00:15.570
不不不。 

00:00:15.570 --> 00:00:16.984
放屁仍然很有趣。 

00:00:16.984 --> 00:00:19.404
 [主题曲] 

00:00:23.750 --> 00:00:24.250
所以。 

00:00:24.250 --> 00:00:25.090
苏尔玛：所以。 

00:00:25.090 --> 00:00:28.270
杰克：任何HTTP203情节的正式起始词。 

00:00:28.270 --> 00:00:30.270
 SURMA：我认为这次我会做一些代码。 

00:00:30.270 --> 00:00:31.103
杰克：哦，好吧。 

00:00:31.103 --> 00:00:33.640
 SURMA：因为是你，我对此感到无聊。 

00:00:33.640 --> 00:00:35.380
所以我想我会谈论一些事情

00:00:35.380 --> 00:00:38.140
我一直在遇到并意识到， 

00:00:38.140 --> 00:00:39.860
这实际上是新的。 

00:00:39.860 --> 00:00:43.060
它是polyfill，这不是新的。 

00:00:43.060 --> 00:00:46.690
但是在有条件的世界中

00:00:46.690 --> 00:00:47.914
我们都使用ES6模块。 

00:00:47.914 --> 00:00:48.580
杰克：好吧。 

00:00:48.580 --> 00:00:50.579
因为这是一件很重要的事情。 

00:00:50.579 --> 00:00:53.410
因为我们处于某些浏览器有网络的情况

00:00:53.410 --> 00:00:54.720
组件，有些则没有。 

00:00:54.720 --> 00:00:55.940
而且您不想加载所有这些polyfill 

00:00:55.940 --> 00:00:56.480
对于旧的浏览器。 

00:00:56.480 --> 00:00:57.938
 SURMA：因为它可能很大。 

00:00:57.938 --> 00:01:00.010
而且，您也不想走到最低

00:01:00.010 --> 00:01:02.721
一直都是公分母，因为那不是

00:01:02.721 --> 00:01:04.470
对于您来说，这是一个很棒的经验。 

00:01:04.470 --> 00:01:04.720
好吧。 

00:01:04.720 --> 00:01:05.303
杰克：快点。 

00:01:05.303 --> 00:01:08.040
告诉我你得到了什么。 

00:01:08.040 --> 00:01:08.540
对。 

00:01:08.540 --> 00:01:09.940
 SURMA：还不是polyfills。 

00:01:09.940 --> 00:01:13.440
但是例如，假设我要使用转换流。 

00:01:13.440 --> 00:01:15.630
就个人而言，我一直喜欢转换流。 

00:01:15.630 --> 00:01:17.070
杰克：太好了，是的。 

00:01:17.070 --> 00:01:19.320
 SURMA：不仅是做流媒体，而且我实际上

00:01:19.320 --> 00:01:21.510
只需将它们用作FIFO提示即可。 

00:01:21.510 --> 00:01:23.670
例如，如果您有一个事件处理程序， 

00:01:23.670 --> 00:01:26.370
并且您想确保之前的活动完全完成

00:01:26.370 --> 00:01:28.320
在处理下一个之前， 

00:01:28.320 --> 00:01:29.940
只需将它们传送到转换流即可。 

00:01:29.940 --> 00:01:31.800
杰克：因为如果你要兑现诺言

00:01:31.800 --> 00:01:33.266
从您的转换流处理程序中， 

00:01:33.266 --> 00:01:34.890
它不会给你下一个

00:01:34.890 --> 00:01:35.940
直到所有这些都解决了。 

00:01:35.940 --> 00:01:37.380
 SURMA：并一直缓冲到那时。 

00:01:37.380 --> 00:01:38.630
所以这实际上很整洁。 

00:01:38.630 --> 00:01:39.780
杰克：非常聪明。 

00:01:39.780 --> 00:01:40.710
对。 

00:01:40.710 --> 00:01:41.430
好。 

00:01:41.430 --> 00:01:42.540
 SURMA：不过有问题。 

00:01:42.540 --> 00:01:44.610
我们已经在Chrome中转换了流。 

00:01:44.610 --> 00:01:48.000
我认为他们一定会登陆Safari。 

00:01:48.000 --> 00:01:49.374
他们不在Firefox中吗？ 

00:01:49.374 --> 00:01:50.290
我应该查一下。 

00:01:50.290 --> 00:01:50.620
我不知道。 

00:01:50.620 --> 00:01:52.590
但基本上我要说的是风景

00:01:52.590 --> 00:01:55.080
在对转换流的支持方面不平衡。 

00:01:55.080 --> 00:01:55.580
杰克：对

00:01:55.580 --> 00:01:58.450
 SURMA：所以您要做的就是加载一个polyfill。 

00:01:58.450 --> 00:01:58.950
杰克：是的。 

00:01:58.950 --> 00:02:01.870
 SURMA：所以在过去，您会这样做，对吗？ 

00:02:01.870 --> 00:02:03.900
您只需将脚本标签放在前面， 

00:02:03.900 --> 00:02:06.870
并且您可以确定该脚本将执行

00:02:06.870 --> 00:02:08.130
在另一个执行之前。 

00:02:08.130 --> 00:02:10.436
杰克：变换流是完全可填充的。 

00:02:10.436 --> 00:02:11.060
苏尔玛：是的。 

00:02:11.060 --> 00:02:11.640
杰克：“埔里菲布尔。” 

00:02:11.640 --> 00:02:13.556
 SURMA：从技术上来说，它完全是用户界面。 

00:02:13.556 --> 00:02:15.731
但是您通常不想加载该代码。 

00:02:15.731 --> 00:02:16.230
杰克：对。 

00:02:16.230 --> 00:02:18.570
 SURMA：在这种情况下，polyfill 

00:02:18.570 --> 00:02:22.440
将其植入全球。 

00:02:22.440 --> 00:02:24.667
也许即使它还不存在。 

00:02:24.667 --> 00:02:26.250
所以你会使用原生植入

00:02:26.250 --> 00:02:27.509
因为它可能会更快。 

00:02:27.509 --> 00:02:28.800
否则，它只会添加它。 

00:02:28.800 --> 00:02:29.760
然后存在转换流， 

00:02:29.760 --> 00:02:30.760
您可以使用它。 

00:02:30.760 --> 00:02:31.301
大。 

00:02:31.301 --> 00:02:31.800
杰克：对。 

00:02:31.800 --> 00:02:32.430
辉煌。 

00:02:32.430 --> 00:02:35.200
 SURMA：问题是，现在当然是每次都变老了。 

00:02:35.200 --> 00:02:35.700
杰克：是的。 

00:02:35.700 --> 00:02:37.440
 SURMA：您可能拥有浏览器

00:02:37.440 --> 00:02:39.080
不需要加载它。 

00:02:39.080 --> 00:02:39.910
可能会- 

00:02:39.910 --> 00:02:41.081
杰克：现在就像Chrome。 

00:02:41.081 --> 00:02:41.580
像Safari。 

00:02:41.580 --> 00:02:43.282
瑟玛：如果您能避免这种情况， 

00:02:43.282 --> 00:02:44.490
您可能想要避免这种情况。 

00:02:44.490 --> 00:02:45.040
杰克：太好了。 

00:02:45.040 --> 00:02:47.581
 SURMA：现在让我们看看如何进行条件加载。 

00:02:47.581 --> 00:02:49.110
这就是我们已经开始的地方

00:02:49.110 --> 00:02:51.559
寻找进口的东西。 

00:02:51.559 --> 00:02:53.100
因为在过去，你又

00:02:53.100 --> 00:02:54.960
可能会动态创建脚本标签

00:02:54.960 --> 00:02:56.210
然后等待卸载事件。 

00:02:56.210 --> 00:02:57.729
现在我们有了动态导入。 

00:02:57.729 --> 00:02:59.520
杰克：我认为这是我错了

00:02:59.520 --> 00:03:00.436
在上一集中。 

00:03:00.436 --> 00:03:03.257
因为您甚至可以使用动态导入

00:03:03.257 --> 00:03:04.090
在常规脚本中。 

00:03:04.090 --> 00:03:04.950
 SURMA：是的，可以。 

00:03:04.950 --> 00:03:05.670
杰克：很好。 

00:03:05.670 --> 00:03:06.753
瑟玛：太令人兴奋了。 

00:03:06.753 --> 00:03:10.240
您无需使用模块脚本即可使用动态导入。 

00:03:10.240 --> 00:03:11.532
仅用于静态导入。 

00:03:11.532 --> 00:03:12.990
因此，在这种情况下，我只是在检查， 

00:03:12.990 --> 00:03:16.170
转换流是否存在于自身上？ 

00:03:16.170 --> 00:03:19.710
如果不是这种情况，就该加载东西了。 

00:03:19.710 --> 00:03:20.670
杰克：对。 

00:03:20.670 --> 00:03:24.740
因此，这是一个不返回任何内容的模块。 

00:03:24.740 --> 00:03:25.450
苏尔玛：不。 

00:03:25.450 --> 00:03:26.120
这是一个polyfill。 

00:03:26.120 --> 00:03:27.420
它只是附属于全球。 

00:03:27.420 --> 00:03:27.600
杰克：对。 

00:03:27.600 --> 00:03:27.920
好。 

00:03:27.920 --> 00:03:29.420
瑟玛：但这就是重点。 

00:03:29.420 --> 00:03:33.160
我们现在更喜欢提倡人们- 

00:03:33.160 --> 00:03:35.010
通常，polyfills不应这样做。 

00:03:35.010 --> 00:03:36.390
他们不应该依赖全球

00:03:36.390 --> 00:03:38.100
因为那样你就降落在这个地方

00:03:38.100 --> 00:03:40.530
在这里您可能要覆盖本机实现， 

00:03:40.530 --> 00:03:42.557
可能不是最新的，或者可以- 

00:03:42.557 --> 00:03:43.890
有这么多的并发症。 

00:03:43.890 --> 00:03:45.420
杰克：整个“骗局”问题。 

00:03:45.420 --> 00:03:45.780
苏尔玛：是的。 

00:03:45.780 --> 00:03:47.446
我们不想再有“ smoosh”。 

00:03:47.446 --> 00:03:50.390
因此，通常，如果您发布一个polyfill， 

00:03:50.390 --> 00:03:52.890
您使用的东西只会向您展示东西。 

00:03:52.890 --> 00:03:55.680
您可以决定是否要将其附加到全局

00:03:55.680 --> 00:03:56.670
或自己处理。 

00:03:56.670 --> 00:03:57.360
杰克：很棒。 

00:03:57.360 --> 00:03:59.550
 SURMA：因此，您可以使用模块而不是polyfill。 

00:03:59.550 --> 00:04:00.049
杰克：啊。 

00:04:00.049 --> 00:04:02.070
 SURMA：并未真正修改的内容

00:04:02.070 --> 00:04:05.520
全局的，但只是向您返回了一些东西

00:04:05.520 --> 00:04:06.450
您可以使用的。 

00:04:06.450 --> 00:04:07.440
杰克：好的。 

00:04:07.440 --> 00:04:10.500
 SURMA：在这种情况下，我们只是在导入， 

00:04:10.500 --> 00:04:11.590
并且不要使用它。 

00:04:11.590 --> 00:04:14.229
因此，在这种情况下，这仍然是不确定的。 

00:04:14.229 --> 00:04:15.770
因此，此模式不再起作用。 

00:04:15.770 --> 00:04:16.269
杰克：对。 

00:04:16.269 --> 00:04:19.380
因为期望这里附近的东西会被退回。 

00:04:19.380 --> 00:04:21.269
那将是您的模块。 

00:04:21.269 --> 00:04:22.280
对。 

00:04:22.280 --> 00:04:24.040
好。 

00:04:24.040 --> 00:04:26.460
 SURMA：因此，现在我们有了一个暴露这些东西的模块。 

00:04:26.460 --> 00:04:27.460
杰克：是的。 

00:04:27.460 --> 00:04:30.192
 SURMA：但是您不能仅仅将它们附加到全球

00:04:30.192 --> 00:04:32.150
因为您每次都必须提前加载它们。 

00:04:32.150 --> 00:04:34.140
您必须在模块开始时

00:04:34.140 --> 00:04:36.470
您现在要检查，是否存在？ 

00:04:36.470 --> 00:04:37.220
它不存在吗？ 

00:04:37.220 --> 00:04:40.760
如果不存在，请保留整个模块

00:04:40.760 --> 00:04:42.680
直到我加载了polyfill。 

00:04:42.680 --> 00:04:43.880
杰克：哦，我明白了。 

00:04:43.880 --> 00:04:46.610
 SURMA：然后我必须加载模块， 

00:04:46.610 --> 00:04:48.381
撕掉它，并将其附加到全局。 

00:04:48.381 --> 00:04:48.880
杰克：对。 

00:04:48.880 --> 00:04:50.750
因为尤其是第三方代码， 

00:04:50.750 --> 00:04:52.340
您希望所有这些都以某种方式等待。 

00:04:52.340 --> 00:04:53.720
 SURMA：真的很奇怪。 

00:04:53.720 --> 00:04:54.000
杰克：对。 

00:04:54.000 --> 00:04:54.210
好。 

00:04:54.210 --> 00:04:54.710
是的

00:04:54.710 --> 00:04:57.271
 SURMA：现在让我们继续讨论合适的现代世界ES6 

00:04:57.271 --> 00:04:57.770
模块。 

00:04:57.770 --> 00:04:58.600
我们该如何解决？ 

00:04:58.600 --> 00:05:00.050
第一个版本

00:05:00.050 --> 00:05:01.550
 JAKE：支持现代JavaScript。 

00:05:01.550 --> 00:05:01.850
苏尔玛：B。 

00:05:01.850 --> 00:05:02.990
杰克：哦，看一下现代的JavaScript。 

00:05:02.990 --> 00:05:05.510
 SURMA：我们只是将其变成非常小的两行

00:05:05.510 --> 00:05:08.120
加载模块的模块，将其附加到全局模块， 

00:05:08.120 --> 00:05:10.630
并且您在每个其他模块中都依赖此模块

00:05:10.630 --> 00:05:11.380
使用流。 

00:05:11.380 --> 00:05:11.880
杰克：对。 

00:05:11.880 --> 00:05:13.134
而且我们避免了整个过程- 

00:05:13.134 --> 00:05:15.050
我的意思是，这仍然是异步的

00:05:15.050 --> 00:05:17.216
在这方面，它不会阻塞主线程。 

00:05:17.216 --> 00:05:21.240
但是就其后的代码而言，它是同步的。 

00:05:21.240 --> 00:05:24.020
瑟玛：这是一个完全有效，完全

00:05:24.020 --> 00:05:26.060
可接受的解决方法。 

00:05:26.060 --> 00:05:26.630
对？ 

00:05:26.630 --> 00:05:26.990
杰克：对。 

00:05:26.990 --> 00:05:28.365
瑟玛：所以这在一定意义上是可行的

00:05:28.365 --> 00:05:30.830
加载polyfill，并将其附加到全局。 

00:05:30.830 --> 00:05:33.380
现在，您的所有代码现在都可以在需要时用于polyfill了， 

00:05:33.380 --> 00:05:35.610
但是我们失去了条件加载

00:05:35.610 --> 00:05:36.110
杰克：啊。 

00:05:36.110 --> 00:05:36.560
是。 

00:05:36.560 --> 00:05:37.040
当然。 

00:05:37.040 --> 00:05:38.748
 SURMA：因为没有条件加载

00:05:38.748 --> 00:05:40.400
静态导入可能。 

00:05:40.400 --> 00:05:41.810
因为它们是静态的。 

00:05:41.810 --> 00:05:42.830
杰克：是的。 

00:05:42.830 --> 00:05:43.940
那是真实的。 

00:05:43.940 --> 00:05:45.650
苏尔玛：有点隐藏。 

00:05:45.650 --> 00:05:46.640
一旦想到，就等着。 

00:05:46.640 --> 00:05:47.211
我不能做 - 

00:05:47.211 --> 00:05:49.460
杰克：是的，您不能在其中加上if语句。 

00:05:49.460 --> 00:05:50.230
导入必须是顶级的。 

00:05:50.230 --> 00:05:52.980
 SURMA：要么依赖此模块，要么不依赖。 

00:05:52.980 --> 00:05:53.480
杰克：对。 

00:05:53.480 --> 00:05:56.480
 SURMA：但是第二个您要进行条件加载

00:05:56.480 --> 00:05:58.220
您必须进行动态导入。 

00:05:58.220 --> 00:05:59.720
然后您又回到了问题所在。 

00:05:59.720 --> 00:06:02.870
因为现在我必须握住我的模块

00:06:02.870 --> 00:06:07.359
直到加载了polyfill，这真的很奇怪。 

00:06:07.359 --> 00:06:08.150
杰克：你有- 

00:06:08.150 --> 00:06:09.330
我希望这将以解决方案结束。 

00:06:09.330 --> 00:06:10.400
 SURMA：我有一个解决方案。 

00:06:10.400 --> 00:06:12.310
我认为它并不完美，但实际上我一直在使用它， 

00:06:12.310 --> 00:06:13.143
很好。 

00:06:13.143 --> 00:06:16.180
因为静态导入的第二个问题是

00:06:16.180 --> 00:06:19.090
延迟模块的执行， 

00:06:19.090 --> 00:06:22.060
即使您可能只需要转换流

00:06:22.060 --> 00:06:24.000
在某些特定方法中。 

00:06:24.000 --> 00:06:24.500
杰克：对。 

00:06:24.500 --> 00:06:25.000
我懂了。 

00:06:25.000 --> 00:06:27.840
可能还有一些互动， 

00:06:27.840 --> 00:06:28.505
或者其他的东西。 

00:06:28.505 --> 00:06:28.760
苏尔玛：是的。 

00:06:28.760 --> 00:06:30.801
因此，您可能希望将其加载到延迟的位置， 

00:06:30.801 --> 00:06:33.870
甚至按需（如果是某种后台任务）。 

00:06:33.870 --> 00:06:36.514
所以我一直在使用另一种方法， 

00:06:36.514 --> 00:06:38.680
感觉有点奇怪，但实际上，作为一种模式， 

00:06:38.680 --> 00:06:39.620
真的很好

00:06:39.620 --> 00:06:40.581
杰克：好吧。 

00:06:40.581 --> 00:06:41.830
苏玛：我正在创造一个诺言。 

00:06:41.830 --> 00:06:42.460
杰克：你是。 

00:06:42.460 --> 00:06:43.510
是。 

00:06:43.510 --> 00:06:46.430
 SURMA：因此，我正在创建一个转换流承诺。 

00:06:46.430 --> 00:06:49.750
而且，我现在可以使用if语句。 

00:06:49.750 --> 00:06:52.642
然后，如果存在转换流， 

00:06:52.642 --> 00:06:54.850
我将返回本机转换流。 

00:06:54.850 --> 00:06:56.170
杰克：我明白了。 

00:06:56.170 --> 00:07:00.550
 SURMA：如果没有，我将动态加载polyfill， 

00:07:00.550 --> 00:07:02.620
并退还那个。 

00:07:02.620 --> 00:07:03.760
杰克：是的。 

00:07:03.760 --> 00:07:05.680
瑟玛：所以现在我们有一个承诺

00:07:05.680 --> 00:07:09.320
将始终解析为转换流构造函数。 

00:07:09.320 --> 00:07:10.870
它可能是本地的。 

00:07:10.870 --> 00:07:12.686
它可能是填充的。 

00:07:12.686 --> 00:07:14.560
但是您不必再为此担心了。 

00:07:14.560 --> 00:07:15.060
杰克：对。 

00:07:15.060 --> 00:07:17.050
 SURMA：这意味着您的模块可以执行

00:07:17.050 --> 00:07:19.650
尽快或尽快

00:07:19.650 --> 00:07:22.060
并在需要的第二秒加载代码。 

00:07:22.060 --> 00:07:23.580
杰克：所以这将会是…… 

00:07:23.580 --> 00:07:25.580
您又有了异步问题，对不对？ 

00:07:25.580 --> 00:07:26.130
苏尔玛：好的。 

00:07:26.130 --> 00:07:27.890
但这通常是- 

00:07:27.890 --> 00:07:30.220
这是特定于流的点， 

00:07:30.220 --> 00:07:34.090
但是-在大多数情况下，流是在异步上下文中

00:07:34.090 --> 00:07:34.661
无论如何。 

00:07:34.661 --> 00:07:35.410
杰克：是的。 

00:07:35.410 --> 00:07:37.000
 SURMA：所以在发送方， 

00:07:37.000 --> 00:07:38.375
您不必担心它是

00:07:38.375 --> 00:07:42.160
大多数时候都是一个诺言，因为您可以解决它

00:07:42.160 --> 00:07:42.730
排队。 

00:07:42.730 --> 00:07:44.890
该函数可以更早返回，并且仅

00:07:44.890 --> 00:07:47.110
等待此问题解决，然后将其发送， 

00:07:47.110 --> 00:07:48.818
因为您不必担心。 

00:07:48.818 --> 00:07:51.130
在接收端，它还是异步的， 

00:07:51.130 --> 00:07:52.210
因为是溪流

00:07:52.210 --> 00:07:53.835
因此，您大部分时间都处于异步状态

00:07:53.835 --> 00:07:55.480
您可以用来等待这件事。 

00:07:55.480 --> 00:07:56.146
杰克：太好了。 

00:07:56.146 --> 00:07:59.200
所以这是一种非常适合代码的模式

00:07:59.200 --> 00:08:01.090
你控制的，对不对？ 

00:08:01.090 --> 00:08:02.980
因为您现在正在使用转换流

00:08:02.980 --> 00:08:04.570
承诺，而不是转变。 

00:08:04.570 --> 00:08:08.050
如果是第三方代码

00:08:08.050 --> 00:08:10.062
期望转型将在全球范围内进行， 

00:08:10.062 --> 00:08:11.770
那就是你必须开始的时候

00:08:11.770 --> 00:08:13.180
延迟加载该第三方代码。 

00:08:13.180 --> 00:08:14.470
 SURMA：话虽如此，如果您有第三方代码

00:08:14.470 --> 00:08:17.669
依靠转换流，有点

00:08:17.669 --> 00:08:18.460
出问题了吧？ 

00:08:18.460 --> 00:08:19.132
杰克：哦。 

00:08:19.132 --> 00:08:20.590
我对此有百感交集。 

00:08:20.590 --> 00:08:22.090
因为我明白你在说什么。 

00:08:22.090 --> 00:08:26.026
但是，如果每个库都在加载，那么最终可能会失败

00:08:26.026 --> 00:08:27.400
用于转换流的polyfill， 

00:08:27.400 --> 00:08:28.816
你可能会遇到这个问题

00:08:28.816 --> 00:08:31.486
您要在其中加载五个库

00:08:31.486 --> 00:08:32.860
正在使用转换流，每个

00:08:32.860 --> 00:08:34.123
加载自己的polyfill。 

00:08:34.123 --> 00:08:36.039
除非他们使用完全相同的版本。 

00:08:36.039 --> 00:08:37.960
瑟玛：虽然从这个意义上讲， 

00:08:37.960 --> 00:08:40.497
您将动态加载polyfill的位置

00:08:40.497 --> 00:08:42.580
将其附加到全局，然后动态加载

00:08:42.580 --> 00:08:43.700
第三方。 

00:08:43.700 --> 00:08:44.200
杰克：是的。 

00:08:44.200 --> 00:08:44.699
究竟。 

00:08:44.699 --> 00:08:46.630
瑟玛：那是因为有些人可能

00:08:46.630 --> 00:08:49.540
对底部的这种模式感到厌恶， 

00:08:49.540 --> 00:08:52.229
您等待一些事情，然后立即打电话给new。 

00:08:52.229 --> 00:08:54.520
您通常可以写两行，这可能更好。 

00:08:54.520 --> 00:08:55.000
杰克：当然。 

00:08:55.000 --> 00:08:56.560
 SURMA：即使回去打包

00:08:56.560 --> 00:08:58.685
备份，因为现在制造商在做什么。 

00:08:58.685 --> 00:09:01.060
杰克：如果您确信polyfill是

00:09:01.060 --> 00:09:03.040
功能齐全，规格已确定， 

00:09:03.040 --> 00:09:05.740
然后可以在此处将其分配给全局

00:09:05.740 --> 00:09:07.720
如果您正在加载第三方代码。 

00:09:07.720 --> 00:09:09.610
瑟玛：但是我感觉像是承诺

00:09:09.610 --> 00:09:13.510
如果我构造函数模式是一种非常好的加载方式

00:09:13.510 --> 00:09:17.532
按需填充，确保您运行尽可能多的代码

00:09:17.532 --> 00:09:18.990
尽可能少的请求

00:09:18.990 --> 00:09:19.930
一开始就尽可能。 

00:09:19.930 --> 00:09:21.721
杰克：而且您要提前加载

00:09:21.721 --> 00:09:23.220
同样，但异步。 

00:09:23.220 --> 00:09:23.920
 SURMA：这就是您现在的选择。 

00:09:23.920 --> 00:09:25.600
您可以决定何时加载。 

00:09:25.600 --> 00:09:26.974
如果你喜欢，实际上，我不会

00:09:26.974 --> 00:09:28.900
首先需要加载此权限。 

00:09:28.900 --> 00:09:32.560
我实际上可以加载它并请求回调， 

00:09:32.560 --> 00:09:33.850
您也可以这样做。 

00:09:33.850 --> 00:09:34.980
现在事情就是这样。 

00:09:34.980 --> 00:09:35.810
 [音乐播放] 

00:09:35.810 --> 00:09:36.740
绿巨人回来了。 

00:09:36.740 --> 00:09:38.175
杰克：（笑）绿巨人回来了吗？ 

00:09:38.175 --> 00:09:39.216
那是你的正常状态吗？ 

00:09:39.216 --> 00:09:40.490
瑟玛：你看过我的二头肌吗？ 

00:09:40.490 --> 00:09:42.650
就像是钢制的！ 

00:09:42.650 --> 00:09:43.890
杰克：由大豆制成，伴侣。 

00:09:43.890 --> 00:09:46.453
 [笑声] 

