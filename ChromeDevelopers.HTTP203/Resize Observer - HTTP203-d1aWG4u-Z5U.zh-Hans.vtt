WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.060 --> 00:00:06.509
有很多我不喜欢的观察者

00:00:02.939 --> 00:00:08.460
知道为什么我们让他们没事，因为很多

00:00:06.509 --> 00:00:10.800
其中有些像这样

00:00:08.460 --> 00:00:12.599
感觉不像是事件源或

00:00:10.800 --> 00:00:12.809
这是批处理工作或类似的东西

00:00:12.599 --> 00:00:14.990
那

00:00:12.809 --> 00:00:17.580
并且一直在创建一个

00:00:14.990 --> 00:00:18.990
它的观察者，真的不需要

00:00:17.580 --> 00:00:22.859
我们可以让你知道把三个

00:00:18.990 --> 00:00:26.430
观察者现在突变mm-hmm 

00:00:22.859 --> 00:00:35.040
调整mm-hmm交集mm-hmm我可以

00:00:26.430 --> 00:00:36.719
也想出了三个

00:00:35.040 --> 00:00:39.270
在某些时候用CSS做过一些工作

00:00:36.719 --> 00:00:41.460
在媒体上使用响应式内容

00:00:39.270 --> 00:00:45.120
查询，这样有点

00:00:41.460 --> 00:00:48.120
这个媒体查询的东西还可以的主意

00:00:45.120 --> 00:00:50.190
但我真正想要的是

00:00:48.120 --> 00:00:55.770
将此元素样式设置为与

00:00:50.190 --> 00:00:57.539
这个元素很大，然后继续

00:00:55.770 --> 00:01:00.270
 Twitter，说嘿，我过得很开心

00:00:57.539 --> 00:01:01.680
关于她和我的想法或萤火虫

00:01:00.270 --> 00:01:03.930
基本上说我做了什么

00:01:01.680 --> 00:01:06.780
这就是我几年前生气的样子

00:01:03.930 --> 00:01:08.430
是的，我们知道很多人都有

00:01:06.780 --> 00:01:11.820
有这个主意，我们不能只是这样的原因

00:01:08.430 --> 00:01:15.080
有元素查询是因为

00:01:11.820 --> 00:01:17.640
您可以通过查询结束

00:01:15.080 --> 00:01:20.460
根据宽度变化，结果

00:01:17.640 --> 00:01:22.979
变化宽度，您最终会遇到

00:01:20.460 --> 00:01:24.540
似乎是无限循环的坏主意

00:01:22.979 --> 00:01:26.759
非常糟糕，所以有一个网络标准

00:01:24.540 --> 00:01:29.159
称为调整大小的观察者，它很稳定

00:01:26.759 --> 00:01:31.560
在chrome中，元素更容易

00:01:29.159 --> 00:01:33.090
你只是说那里的元素观察

00:01:31.560 --> 00:01:37.079
是的，让我知道变化的时间

00:01:33.090 --> 00:01:39.450
好吧，这意味着

00:01:37.079 --> 00:01:42.090
他们可以做出反应，这是一个JavaScript API，因此

00:01:39.450 --> 00:01:43.770
您完全可以使用JavaScript做出反应

00:01:42.090 --> 00:01:45.090
所以我们回到了无限循环

00:01:43.770 --> 00:01:46.860
问题，所以我在看你的文章

00:01:45.090 --> 00:01:51.770
安德森（Anderson） 

00:01:46.860 --> 00:01:54.030
好在上面写一些文字

00:01:51.770 --> 00:01:55.799
更改将仅在

00:01:54.030 --> 00:01:56.939
如果调整大小元素是同一帧

00:01:55.799 --> 00:01:58.170
在Dom树中比在

00:01:56.939 --> 00:02:00.090
最浅元素过程

00:01:58.170 --> 00:02:06.659
上一个回调是一个奇怪的菜单

00:02:00.090 --> 00:02:08.310
完美的峰会

00:02:06.659 --> 00:02:10.590
只需按顺序说几句话

00:02:08.310 --> 00:02:12.660
好吧，我想我解释得很好

00:02:10.590 --> 00:02:13.920
简而言之，实际上是我写的

00:02:12.660 --> 00:02:16.140
专注一点好吗

00:02:13.920 --> 00:02:20.030
我很兴奋，明白了还可以

00:02:16.140 --> 00:02:22.980
谢谢想象你有一个元素， 

00:02:20.030 --> 00:02:25.739
有孩子是的，你知道这很普遍

00:02:22.980 --> 00:02:29.489
是的，您将大小调整观察器称为

00:02:25.739 --> 00:02:31.319
在父级上观察此元素

00:02:29.489 --> 00:02:32.880
是的，在大事上好事好事好事

00:02:31.319 --> 00:02:34.560
对的意思是每当这个元素

00:02:32.880 --> 00:02:37.140
更改器大小，您将获得回调和

00:02:34.560 --> 00:02:39.739
你可以对它做出反应

00:02:37.140 --> 00:02:41.880
现在假设您也打电话

00:02:39.739 --> 00:02:44.760
观察者的另一范围未观察到

00:02:41.880 --> 00:02:46.200
其中一个孩子还可以，因为

00:02:44.760 --> 00:02:47.580
父级更改大小二的结果

00:02:46.200 --> 00:02:49.170
孩子们可以改变视线，所以每一个

00:02:47.580 --> 00:02:52.590
希望同时收到有关两者的通知

00:02:49.170 --> 00:02:54.230
资源服务器呼啸而过

00:02:52.590 --> 00:02:57.180
回调任何将得到正确的通知

00:02:54.230 --> 00:03:00.569
让我们假设第三件事

00:02:57.180 --> 00:03:02.580
我更改的孩子的回叫之一

00:03:00.569 --> 00:03:03.870
父母的大小是JavaScript， 

00:03:02.580 --> 00:03:05.190
可能的权利我可以改变

00:03:03.870 --> 00:03:06.780
女儿身上的任何东西都可以

00:03:05.190 --> 00:03:08.069
甚至可以通过更改

00:03:06.780 --> 00:03:10.620
孩子的大小

00:03:08.069 --> 00:03:12.360
可能是如果它很低或只是附加

00:03:10.620 --> 00:03:15.510
父母可以的一些文字好吗

00:03:12.360 --> 00:03:17.519
突然长大，然后从技术上讲

00:03:15.510 --> 00:03:18.660
外部观察者的更大原因

00:03:17.519 --> 00:03:20.280
外部元素将不得不开火

00:03:18.660 --> 00:03:22.019
再次和较小的可能

00:03:20.280 --> 00:03:24.450
好，然后可能再次发生

00:03:22.019 --> 00:03:27.630
再次在视觉上以及我们如何打破这一点

00:03:24.450 --> 00:03:29.519
循环是与读取的规则

00:03:27.630 --> 00:03:31.709
观察者所有里斯的观察者都会

00:03:29.519 --> 00:03:33.600
在布局前在同一帧中触发

00:03:31.709 --> 00:03:35.519
如果您在此事件中更改， 

00:03:33.600 --> 00:03:38.790
也会在同一帧内触发

00:03:35.519 --> 00:03:40.709
除非已对

00:03:38.790 --> 00:03:42.540
处于相同级别的元素或

00:03:40.709 --> 00:03:44.430
在Dom树上更高，就像

00:03:42.540 --> 00:03:46.440
在我们如何谈论事件方面

00:03:44.430 --> 00:03:48.420
捕捉它的反面

00:03:46.440 --> 00:03:50.130
冒泡，是的，我们正在捕捉，所以

00:03:48.420 --> 00:03:51.750
就是这样，这就是方向

00:03:50.130 --> 00:03:54.630
去吧，只有你能拥有

00:03:51.750 --> 00:03:57.569
多次调用您的回调

00:03:54.630 --> 00:03:59.340
向下的树，但如果你有的话

00:03:57.569 --> 00:04:00.750
他们在树上高高的

00:03:59.340 --> 00:04:02.730
将不得不改组

00:04:00.750 --> 00:04:04.079
延迟到下一帧，所以

00:04:02.730 --> 00:04:06.239
你是说变化就像

00:04:04.079 --> 00:04:08.250
仅在以下情况下在同一帧中处理

00:04:06.239 --> 00:04:11.040
调整大小的元素在Dom中更深

00:04:08.250 --> 00:04:12.660
是的，比最浅层的元素过程

00:04:11.040 --> 00:04:14.310
在上一个回调中

00:04:12.660 --> 00:04:18.630
我说的就是我的意思

00:04:14.310 --> 00:04:20.880
写的很有意义，现在很完美

00:04:18.630 --> 00:04:22.830
那是你应该把它放在

00:04:20.880 --> 00:04:24.510
像你这样的文章，我认为

00:04:22.830 --> 00:04:25.800
第二段我想我记得写这篇

00:04:24.510 --> 00:04:27.160
文章，有很多东西

00:04:25.800 --> 00:04:28.960
改变等等

00:04:27.160 --> 00:04:31.570
但因为我是我而感到恼火

00:04:28.960 --> 00:04:35.230
从事动画工作，最后我

00:04:31.570 --> 00:04:37.810
就像在这里复制粘贴

00:04:35.230 --> 00:04:38.440
这项后勤工作做得很好

00:04:37.810 --> 00:04:40.570
是

00:04:38.440 --> 00:04:42.520
我喜欢它，我认为我们应该保留它

00:04:40.570 --> 00:04:45.190
我认为其他人应该使用的浏览器

00:04:42.520 --> 00:04:47.230
实现它就是我们要做的

00:04:45.190 --> 00:04:49.570
宣传是的，其他人应该

00:04:47.230 --> 00:04:51.190
假设请我们没有得到我们

00:04:49.570 --> 00:04:57.750
没有得到一个时尚的失重CSS 

00:04:51.190 --> 00:05:00.490
名称是布局增强器增强器

00:04:57.750 --> 00:05:04.690
我想我收到很多电子邮件

00:05:00.490 --> 00:05:07.030
关于我的垃圾邮件文件夹，所以有

00:05:04.690 --> 00:05:08.350
一个真正的咖啡馆，真的是认真的

00:05:07.030 --> 00:05:12.970
当然，这里的播客地图

00:05:08.350 --> 00:05:14.860
可能在任何地方现在当我们

00:05:12.970 --> 00:05:17.790
做我想要的2分钟片段

00:05:14.860 --> 00:05:17.790
有很好的

