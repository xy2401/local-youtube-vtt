WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.060 --> 00:00:04.980
好吧，就对了，是不是

00:00:03.240 --> 00:00:09.690
看起来好像真的不看起来

00:00:04.980 --> 00:00:24.240
直又显然不

00:00:09.690 --> 00:00:27.480
我们如此，所以我们在办公室聊天

00:00:24.240 --> 00:00:29.250
几周前，我的意思是，我们有

00:00:27.480 --> 00:00:31.679
今天也是，但是我在说

00:00:29.250 --> 00:00:36.329
具体的聊天，我们可以，具体在哪里

00:00:31.679 --> 00:00:38.940
我们正在看这样的代码

00:00:36.329 --> 00:00:41.100
好的，我们得到了您标记的所有脚本

00:00:38.940 --> 00:00:42.450
是的，脚本攻击总是好拉

00:00:41.100 --> 00:00:45.899
那里的变量mm-hm 

00:00:42.450 --> 00:00:48.270
我再一次打电话给VAR的Const，但是

00:00:45.899 --> 00:00:50.579
这个时间模块是一个好的模块

00:00:48.270 --> 00:00:52.949
然后我们提出的问题

00:00:50.579 --> 00:00:55.260
彼此都很好

00:00:52.949 --> 00:00:57.360
可以访问的内容

00:00:55.260 --> 00:00:59.850
在第三个脚本标签中

00:00:57.360 --> 00:01:01.530
情况是模块大头钉存在吗

00:00:59.850 --> 00:01:04.470
现在唯一的原因是模块标签

00:01:01.530 --> 00:01:06.060
好的，你现在让我继续

00:01:04.470 --> 00:01:07.260
切线已经是它的唯一原因

00:01:06.060 --> 00:01:08.909
不客气的模块

00:01:07.260 --> 00:01:10.860
这是因为如果是正常脚本

00:01:08.909 --> 00:01:13.530
标记这些将不会以此顺序运行哦

00:01:10.860 --> 00:01:16.890
因为模块被延迟

00:01:13.530 --> 00:01:20.880
隐式地是，所以如果它是一个脚本

00:01:16.890 --> 00:01:22.500
用defer标签什么是全部被忽略

00:01:20.880 --> 00:01:25.049
因为它是内联的，但是第一个

00:01:22.500 --> 00:01:27.900
在内联脚本上被忽略，是今天

00:01:25.049 --> 00:01:30.060
你了解到我们走了，好切线

00:01:27.900 --> 00:01:31.860
现在换种方式是我提出的唯一原因

00:01:30.060 --> 00:01:33.630
在这上键入模块是一个很好的订单，所以

00:01:31.860 --> 00:01:35.729
他们实际上执行了命令

00:01:33.630 --> 00:01:37.890
正确显示在摘要中

00:01:35.729 --> 00:01:39.630
所以你实际上只是一个Twitter民意调查

00:01:37.890 --> 00:01:41.790
你做了一个Twitter民意测验那不是我

00:01:39.630 --> 00:01:44.009
看起来不像这样，但相关

00:01:41.790 --> 00:01:47.790
非常相似，是相同的

00:01:44.009 --> 00:01:49.229
事情，我们跟随我一样

00:01:47.790 --> 00:01:50.700
想写我想发的推文

00:01:49.229 --> 00:01:54.180
所以我做了24小时的调查

00:01:50.700 --> 00:01:59.670
推特解决方案不，不，你不

00:01:54.180 --> 00:02:01.469
那是宝贵的内容

00:01:59.670 --> 00:02:07.079
这次我们实际上像半

00:02:01.469 --> 00:02:08.970
内容恰到好处的好内容

00:02:07.079 --> 00:02:10.890
是的，让我们让评论决定

00:02:08.970 --> 00:02:13.739
如果这实际上是评论决定

00:02:10.890 --> 00:02:15.689
让谁还好

00:02:13.739 --> 00:02:18.329
我认为它喜欢它，让我们开始

00:02:15.689 --> 00:02:19.829
谈论范围界定的工作原理

00:02:18.329 --> 00:02:21.989
 JavaScript是的，那是那样的

00:02:19.829 --> 00:02:22.980
一切都很好，但我们会回去

00:02:21.989 --> 00:02:26.159
从头开始

00:02:22.980 --> 00:02:27.810
所以回到过去，你们所有人

00:02:26.159 --> 00:02:29.819
 JavaScript T这就像他三岁

00:02:27.810 --> 00:02:32.730
是的，只有三遍

00:02:29.819 --> 00:02:34.230
创建一个变量是远远的，并且

00:02:32.730 --> 00:02:36.689
很好，因为那是

00:02:34.230 --> 00:02:39.239
巨大的稠密是什么变量，但是你

00:02:36.689 --> 00:02:41.099
也可以创建函数

00:02:39.239 --> 00:02:43.049
也在S3中，是的，我们有那些

00:02:41.099 --> 00:02:46.950
但是他们的表现非常相似

00:02:43.049 --> 00:02:50.129
 VAR函数的范围

00:02:46.950 --> 00:02:52.290
到父函数mm-hmm或

00:02:50.129 --> 00:02:53.700
全球，如果没有一个好的话，这里

00:02:52.290 --> 00:02:54.930
我们有两个边界

00:02:53.700 --> 00:02:57.000
它们在我得到

00:02:54.930 --> 00:03:00.599
功能，或者您拥有全局控制权

00:02:57.000 --> 00:03:03.030
哦，男孩或女孩男孩，好吧，我们

00:03:00.599 --> 00:03:06.090
是的var one在全球范围内

00:03:03.030 --> 00:03:08.790
 mmm-hmm在全球范围内有两个mmm-hmm 

00:03:06.090 --> 00:03:10.620
参加功能，因此范围仅限于

00:03:08.790 --> 00:03:13.260
功能和4也适用于它

00:03:10.620 --> 00:03:16.230
两点之内，所以你无法要求

00:03:13.260 --> 00:03:17.909
这是行不通的，是的，所以

00:03:16.230 --> 00:03:20.970
如果你做了这样的事情，如果你

00:03:17.909 --> 00:03:22.409
 VAR v是否在if和中

00:03:20.970 --> 00:03:26.069
功能六，他们实际上现在会

00:03:22.409 --> 00:03:28.049
存在于内部以能够

00:03:26.069 --> 00:03:31.650
记录它们，因为块不是

00:03:28.049 --> 00:03:34.859
作用域机制，这样您就可以天真地

00:03:31.650 --> 00:03:38.689
说唯一有范围的东西

00:03:34.859 --> 00:03:41.069
在这个时代的JavaScript中是一个函数

00:03:38.689 --> 00:03:44.069
那就是我所拥有的就是你

00:03:41.069 --> 00:03:46.109
会说有两种情况

00:03:44.069 --> 00:03:50.040
那不是真的，现在仍然不是

00:03:46.109 --> 00:03:51.269
真的好吧，所以我会给你一个

00:03:50.040 --> 00:03:54.299
提示那里好像不是这些地方

00:03:51.269 --> 00:03:57.449
您可以像这样创建变量

00:03:54.299 --> 00:04:00.239
但在某些地方有标识符

00:03:57.449 --> 00:04:00.900
范围小于

00:04:00.239 --> 00:04:04.079
功能

00:04:00.900 --> 00:04:07.620
哦，奇怪的是，措辞是如此

00:04:04.079 --> 00:04:09.599
奇怪的是，我想帮忙

00:04:07.620 --> 00:04:10.889
我喜欢把你当场做

00:04:09.599 --> 00:04:12.919
视频中有很多东西

00:04:10.889 --> 00:04:16.349
从技术上讲我也不会

00:04:12.919 --> 00:04:20.130
如果需要的话，for循环又如何呢？ 

00:04:16.349 --> 00:04:22.680
对于VAR我等于0是我可用

00:04:20.130 --> 00:04:24.029
在for循环之后，是这样

00:04:22.680 --> 00:04:27.240
将进入父级范围， 

00:04:24.029 --> 00:04:28.889
我们已经完成了有关什么的视频

00:04:27.240 --> 00:04:36.840
对，所以我不确定那是否是

00:04:28.889 --> 00:04:38.160
也有些怪异不，哦，这会

00:04:36.840 --> 00:04:39.630
短片，但我想现在我们

00:04:38.160 --> 00:04:43.650
应该坐在这里说嘿德文

00:04:39.630 --> 00:04:45.360
 es3中它自己的内存构造应该

00:04:43.650 --> 00:04:46.169
我只是告诉你，因为我不会

00:04:45.360 --> 00:04:54.300
得到这个

00:04:46.169 --> 00:04:57.240
继续那里，发现错误

00:04:54.300 --> 00:04:58.650
天也非常感谢你，但是

00:04:57.240 --> 00:05:01.050
此错误标识符仅可用

00:04:58.650 --> 00:05:03.000
在赶上有趣的好吗

00:05:01.050 --> 00:05:06.750
我看到了，但我不知道全部

00:05:03.000 --> 00:05:09.240
对了为什么新的捕捞物有范围

00:05:06.750 --> 00:05:11.490
与之相关，但实际上是因为

00:05:09.240 --> 00:05:13.199
我听说这误导了我的思考

00:05:11.490 --> 00:05:15.270
变量将在其中范围内

00:05:13.199 --> 00:05:17.880
他们再也不能在这里使用了

00:05:15.270 --> 00:05:20.849
会冒充Yossef功能

00:05:17.880 --> 00:05:22.949
或范围很好，但错误仍然存​​在

00:05:20.849 --> 00:05:25.530
在捕获块中，然后

00:05:22.949 --> 00:05:28.650
我都原谅的另一个

00:05:25.530 --> 00:05:32.159
不知道它的宽度是那种

00:05:28.650 --> 00:05:34.110
事情不是，是三个，还是

00:05:32.159 --> 00:05:35.449
我认为在严格模式下它会停止

00:05:34.110 --> 00:05:38.190
您正在使用它，但不要抱着我

00:05:35.449 --> 00:05:39.599
用什么来做就对了

00:05:38.190 --> 00:05:42.300
会做的就是就像

00:05:39.599 --> 00:05:44.219
替换范围块和块

00:05:42.300 --> 00:05:47.190
范围很好，所以它将占用所有

00:05:44.219 --> 00:05:50.150
对象的属性并创建局部

00:05:47.190 --> 00:05:53.669
网站内的变量

00:05:50.150 --> 00:05:56.009
与块，所以我相信和

00:05:53.669 --> 00:05:59.520
再次不要抱我这个我相信

00:05:56.009 --> 00:06:02.219
这是JavaScript中唯一的

00:05:59.520 --> 00:06:04.590
可以存在于其中的变量

00:06:02.219 --> 00:06:06.030
它而不是确定性的，就像你不能

00:06:04.590 --> 00:06:08.340
只是分开做，你不知道

00:06:06.030 --> 00:06:11.550
在过去的时间，我想另一部分

00:06:08.340 --> 00:06:12.659
差不多，这就是为什么

00:06:11.550 --> 00:06:14.789
这两个东西，如果你是

00:06:12.659 --> 00:06:16.590
如果您经常使用eval 

00:06:14.789 --> 00:06:17.639
引擎的性能优化

00:06:16.590 --> 00:06:18.930
刚走出窗户

00:06:17.639 --> 00:06:21.090
是的，因为他们不能事实是

00:06:18.930 --> 00:06:23.219
有时候我明白了，你知道这意味着

00:06:21.090 --> 00:06:24.690
这是一件事，这是一件事，是

00:06:23.219 --> 00:06:28.469
因此，这就是我拥有的两件事

00:06:24.690 --> 00:06:31.440
我的范围是不同的，但是对了哦

00:06:28.469 --> 00:06:35.400
是特殊行为特殊魔术

00:06:31.440 --> 00:06:38.250
行为哦，男孩是没有这个吊装的

00:06:35.400 --> 00:06:39.749
没有托管的主机有

00:06:38.250 --> 00:06:41.279
将是一个简短的视频

00:06:39.749 --> 00:06:43.289
不，我不会谈论托管

00:06:41.279 --> 00:06:45.479
人们癌症谈论托管一次

00:06:43.289 --> 00:06:47.999
很好，很好，我最喜欢的单词

00:06:45.479 --> 00:06:52.289
吊装浪费酱

00:06:47.999 --> 00:06:54.689
如果您有一个带var的全局变量

00:06:52.289 --> 00:06:57.149
或功能mm-hmm可以做一件神奇的事

00:06:54.689 --> 00:06:59.939
因为它也会很好地放

00:06:57.149 --> 00:07:01.919
在全局对象库上自动

00:06:59.939 --> 00:07:04.439
它是在那的东西

00:07:01.919 --> 00:07:06.149
你说的全局数组很好，但是那里

00:07:04.439 --> 00:07:06.989
因为你已经习惯了

00:07:06.149 --> 00:07:08.669
其实很奇怪

00:07:06.989 --> 00:07:10.499
来这个奇怪的怪异，但我想

00:07:08.669 --> 00:07:12.089
那只是整个前提

00:07:10.499 --> 00:07:13.919
 JavaScript你有这个

00:07:12.089 --> 00:07:16.079
全球范围也与特定

00:07:13.919 --> 00:07:17.849
标识符，但也许就是我

00:07:16.079 --> 00:07:18.659
进入JavaScript太晚了

00:07:17.849 --> 00:07:22.139
所有这些事情已经

00:07:18.659 --> 00:07:24.599
想通了，坚持我会

00:07:22.139 --> 00:07:26.069
说就问一旁，所以自我就是

00:07:24.599 --> 00:07:28.199
指的是全局对象

00:07:26.069 --> 00:07:31.889
那不是浏览器，是的，你

00:07:28.199 --> 00:07:33.509
也有仅在Windows中的窗口

00:07:31.889 --> 00:07:34.589
如果您当前可以说他是

00:07:33.509 --> 00:07:37.949
第三对，因为这已经

00:07:34.589 --> 00:07:39.989
与您的全局对象本身不同

00:07:37.949 --> 00:07:42.509
今天，您的全局对象是window 

00:07:39.989 --> 00:07:45.029
您在全局文档中

00:07:42.509 --> 00:07:46.199
全局节点和新的

00:07:45.029 --> 00:07:48.149
全球正在试图

00:07:46.199 --> 00:07:49.529
标准化所有这些，因为

00:07:48.149 --> 00:07:51.029
事实证明，我们无法标准化

00:07:49.529 --> 00:07:53.459
其中任何一个是因为人们使用它

00:07:51.029 --> 00:07:56.729
发现这是一种自我

00:07:53.459 --> 00:07:58.229
窗口可能不相等，也许我是

00:07:56.729 --> 00:08:00.119
错误的不是那不是不是那不是

00:07:58.229 --> 00:08:03.449
不，我绝对不知道它是否关闭

00:08:00.119 --> 00:08:05.879
我的头好吧，是的，这就是魔术

00:08:03.449 --> 00:08:08.129
情况就是怪异而神奇

00:08:05.879 --> 00:08:12.469
像全球本身的东西

00:08:08.129 --> 00:08:18.329
窗口是模块脚本标签中的是，是

00:08:12.469 --> 00:08:20.039
该死的岩石，我知道我们得到了一些

00:08:18.329 --> 00:08:21.749
新的东西我们有新的东西

00:08:20.039 --> 00:08:25.349
 JavaScript随var一起到达

00:08:21.749 --> 00:08:26.610
我们有一些新的Const 

00:08:25.349 --> 00:08:30.389
之前在节目中谈到过

00:08:26.610 --> 00:08:34.019
这些对她来说更明智

00:08:30.389 --> 00:08:36.120
会说是的，少一些非正统的话

00:08:34.019 --> 00:08:38.159
特别是块级作用域

00:08:36.120 --> 00:08:39.839
在这个里面，如果我们已经看过一个

00:08:38.159 --> 00:08:42.509
将被扔给父母

00:08:39.839 --> 00:08:45.540
通过功能或全局范围

00:08:42.509 --> 00:08:46.920
两个将仅存在于vlog中，并且

00:08:45.540 --> 00:08:53.100
与三个相同

00:08:46.920 --> 00:08:53.670
 mm-hm和解码时的真实时间

00:08:53.100 --> 00:08:57.180
大括号正确

00:08:53.670 --> 00:08:57.960
实际上你可以做到这一点

00:08:57.180 --> 00:08:59.220
然后你去

00:08:57.960 --> 00:09:00.210
它的工作原理就是这样

00:08:59.220 --> 00:09:03.300
考虑一下是否卷曲

00:09:00.210 --> 00:09:07.590
大括号二和三将要做

00:09:03.300 --> 00:09:08.730
在那里我一直在做正确的事

00:09:07.590 --> 00:09:10.650
玩耍，突然发生

00:09:08.730 --> 00:09:13.170
对我来说

00:09:10.650 --> 00:09:15.300
现在会发生什么，这不应该

00:09:13.170 --> 00:09:16.920
扔这个，我认为这会工作

00:09:15.300 --> 00:09:20.120
你认为我会发生什么，因为

00:09:16.920 --> 00:09:21.990
 var1会冒泡到

00:09:20.120 --> 00:09:23.310
包含范围可能是

00:09:21.990 --> 00:09:25.080
全局范围的功能，然后

00:09:23.310 --> 00:09:27.600
 const会阴影的，因为

00:09:25.080 --> 00:09:31.320
反正is不休是啊

00:09:27.600 --> 00:09:33.510
那真的不会发生什么事

00:09:31.320 --> 00:09:34.830
我想到了我不知道的那个

00:09:33.510 --> 00:09:37.280
同意你

00:09:34.830 --> 00:09:41.370
像运行时一样，这可能是一件事情，但是

00:09:37.280 --> 00:09:43.200
它在过去的时间失败了

00:09:41.370 --> 00:09:45.930
标识为在

00:09:43.200 --> 00:09:48.090
即使var也会做同样的范围

00:09:45.930 --> 00:09:50.250
稍微有些东西，如果

00:09:48.090 --> 00:09:54.270
你扔是是第一件事，我

00:09:50.250 --> 00:09:57.720
猜想可能是因为

00:09:54.270 --> 00:10:00.720
有一个Const块

00:09:57.720 --> 00:10:04.050
您不能在此之前提到一个

00:10:00.720 --> 00:10:05.400
在父范围内，它将告诉您

00:10:04.050 --> 00:10:07.680
正在尝试使用之前的东西

00:10:05.400 --> 00:10:09.660
宣布，所以我认为这就是

00:10:07.680 --> 00:10:11.250
来了，但是如果我移动VAR 

00:10:09.660 --> 00:10:13.380
在呼叫者括号外，就像一个

00:10:11.250 --> 00:10:15.450
正确地签名，这很有趣

00:10:13.380 --> 00:10:16.860
所以我们去那是一个

00:10:15.450 --> 00:10:18.150
毫无意义的信息，但这是

00:10:16.860 --> 00:10:22.650
我在制作时学到的东西

00:10:18.150 --> 00:10:24.480
幻灯片为此，我想第一个

00:10:22.650 --> 00:10:26.310
问题的一部分确实是我们有

00:10:24.480 --> 00:10:28.650
我们已经看过这些VAR， 

00:10:26.310 --> 00:10:31.800
这些新常数的东西，但是

00:10:28.650 --> 00:10:33.750
脚本标签如何工作

00:10:31.800 --> 00:10:37.590
哦，是的，他们怎么样？ 

00:10:33.750 --> 00:10:39.750
我们已经将工作推向了全球

00:10:37.590 --> 00:10:41.130
看到是的，我们很确定

00:10:39.750 --> 00:10:43.800
这一点有效

00:10:41.130 --> 00:10:45.240
 -已经有点多了

00:10:43.800 --> 00:10:46.830
有问题的是

00:10:45.240 --> 00:10:49.160
所以你也可以软一点

00:10:46.830 --> 00:10:51.890
足够了，是的，有问题的是- 

00:10:49.160 --> 00:10:54.870
那不是一个好句子

00:10:51.890 --> 00:10:57.180
一个太可疑了

00:10:54.870 --> 00:10:58.650
值得怀疑的是-现在没有好

00:10:57.180 --> 00:11:00.450
这样说，你知道我吗

00:10:58.650 --> 00:11:02.220
在变量上来回走动

00:11:00.450 --> 00:11:04.350
在这里命名谁一直在做BC 

00:11:02.220 --> 00:11:06.390
和D或一二三或四和我

00:11:04.350 --> 00:11:07.120
感觉我现在做对了

00:11:06.390 --> 00:11:08.620
实现

00:11:07.120 --> 00:11:10.839
我不知道这很令人困惑

00:11:08.620 --> 00:11:12.839
好吧，它比富巴好，但是

00:11:10.839 --> 00:11:17.019
这就是我开始的时候，我用光了

00:11:12.839 --> 00:11:19.089
天哪，我的意思是这个原因，哦

00:11:17.019 --> 00:11:21.990
我不记得以后不记得了

00:11:19.089 --> 00:11:24.790
它是特别无用的切线，所以

00:11:21.990 --> 00:11:27.519
我所做的测验的事情

00:11:24.790 --> 00:11:31.389
我不记得的解决方案真的很棒

00:11:27.519 --> 00:11:34.389
非常好，所以当您构成

00:11:31.389 --> 00:11:36.610
到目前为止，最高级

00:11:34.389 --> 00:11:37.329
在全球范围内行不通

00:11:36.610 --> 00:11:39.999
凉

00:11:37.329 --> 00:11:42.790
所以这有效，因为两个脚本共享

00:11:39.999 --> 00:11:44.230
与我相反的全球范围mm-hmm 

00:11:42.790 --> 00:11:46.480
认为Twitter上的大多数人都相信

00:11:44.230 --> 00:11:49.360
脚本标签不等同于like 

00:11:46.480 --> 00:11:53.860
大括号不是它的范围

00:11:49.360 --> 00:11:56.350
正确，但这就是要解决的问题

00:11:53.860 --> 00:12:01.480
是的，对，我现在记得

00:11:56.350 --> 00:12:03.730
这样是的，它也确实会继续

00:12:01.480 --> 00:12:06.519
就埃克曼脚本而言，它是全球性的

00:12:03.730 --> 00:12:08.889
是全球性的，但它没有做的是

00:12:06.519 --> 00:12:10.569
没有做奇怪的事情

00:12:08.889 --> 00:12:13.660
进入全局对象，因为

00:12:10.569 --> 00:12:17.529
从技术上讲，全局对象在

00:12:13.660 --> 00:12:19.389
实际的全球背景

00:12:17.529 --> 00:12:21.540
这就是我对杨的理解之一

00:12:19.389 --> 00:12:27.970
撰写说明的v8工程师

00:12:21.540 --> 00:12:29.709
是的，在某种程度上

00:12:27.970 --> 00:12:32.920
想要存在的全球范围是

00:12:29.709 --> 00:12:34.420
在某些方面相同

00:12:32.920 --> 00:12:36.360
他们不是因为再次像

00:12:34.420 --> 00:12:39.759
你做了一个等于一万亿的无功

00:12:36.360 --> 00:12:40.689
 const 1等于true，就像您可以想到的那样

00:12:39.759 --> 00:12:41.949
如果他们坐在一个

00:12:40.689 --> 00:12:44.079
不同的水平应该都很好

00:12:41.949 --> 00:12:46.959
但不是这样会阻止你做

00:12:44.079 --> 00:12:48.429
这是全球唯一的权利，除了我

00:12:46.959 --> 00:12:50.319
然后猜测它实际上是

00:12:48.429 --> 00:12:52.329
就像你说的那样魔力

00:12:50.319 --> 00:12:54.850
另外打入全球

00:12:52.329 --> 00:12:57.269
对象是从

00:12:54.850 --> 00:13:00.459
全局上下文是这种对象

00:12:57.269 --> 00:13:01.240
在Equus地穴中记录粉丝，那就是

00:13:00.459 --> 00:13:03.939
那是这样的

00:13:01.240 --> 00:13:06.939
所以是的，所以我们自己去做一件事情

00:13:03.939 --> 00:13:08.709
一作品两作品自我点2将

00:13:06.939 --> 00:13:13.600
是不确定的，可能是不确定的，所以那里

00:13:08.709 --> 00:13:16.319
我们可以，但是这里会发生什么

00:13:13.600 --> 00:13:20.649
我确实知道那是什么变化

00:13:16.319 --> 00:13:23.800
模块脚本也不会冒泡

00:13:20.649 --> 00:13:26.230
全球，你说得对，如果

00:13:23.800 --> 00:13:28.119
您创建它的想象，他们是

00:13:26.230 --> 00:13:29.589
正确封装在一个函数中，这样您

00:13:28.119 --> 00:13:32.470
只是在其中有一个自由浮动的变量

00:13:29.589 --> 00:13:34.029
不会结束的脚本模块标签

00:13:32.470 --> 00:13:35.949
在全球范围内还是在全球范围内

00:13:34.029 --> 00:13:37.720
对象正确，所以您仍然可以

00:13:35.949 --> 00:13:39.670
访问您看到的全局访问

00:13:37.720 --> 00:13:41.529
文件，你想放点东西

00:13:39.670 --> 00:13:44.499
在全球范围内，您必须手动执行

00:13:41.529 --> 00:13:48.490
并明确地绝对正确，那就是

00:13:44.499 --> 00:13:50.860
是的，所以我想带我们去做

00:13:48.490 --> 00:13:52.480
在任务上请求e在任务上

00:13:50.860 --> 00:13:55.779
其他老师的说法很含糊

00:13:52.480 --> 00:13:57.399
问题一是错的不是吗

00:13:55.779 --> 00:13:59.410
你知道作为老师你在说什么

00:13:57.399 --> 00:14:01.660
这个词很多，所以真的

00:13:59.410 --> 00:14:05.439
好让这个问题令人沮丧，所以我们

00:14:01.660 --> 00:14:12.249
现在知道一M两将是

00:14:05.439 --> 00:14:17.230
好吧，哦，不，我们来做一集

00:14:12.249 --> 00:14:22.389
其实在说正确的话，所以我

00:14:17.230 --> 00:14:26.379
两个是在全球范围内

00:14:22.389 --> 00:14:27.730
因此，但没有这些查询

00:14:26.379 --> 00:14:28.089
在全球范围内发生，所以这

00:14:27.730 --> 00:14:31.509
将工作

00:14:28.089 --> 00:14:34.870
因此，一个自负的人

00:14:31.509 --> 00:14:37.059
作品自我这两个将是不确定的子

00:14:34.870 --> 00:14:38.529
博士由于我们的原因将是不确定的

00:14:37.059 --> 00:14:40.689
以前做过，因为即使

00:14:38.529 --> 00:14:45.660
在脚本模块中，它在

00:14:40.689 --> 00:14:49.149
敬畏的通常方式

00:14:45.660 --> 00:14:51.790
绝对是的，我应该

00:14:49.149 --> 00:14:53.470
记住是的，因为我们将模块视为

00:14:51.790 --> 00:14:55.839
如果将它包装在一个函数中

00:14:53.470 --> 00:14:58.120
我应该自己去

00:14:55.839 --> 00:15:00.490
未声明的变量未声明的变量

00:14:58.120 --> 00:15:02.230
点三仍然不确定

00:15:00.490 --> 00:15:06.160
因为那是不同的

00:15:02.230 --> 00:15:08.829
扔看，财产是

00:15:06.160 --> 00:15:11.920
是的，所以不确定，不会

00:15:08.829 --> 00:15:13.839
投掷同样也会从耶

00:15:11.920 --> 00:15:15.549
正是因为这样，作用域才起作用

00:15:13.839 --> 00:15:17.559
 JavaScript我是说你现在就说

00:15:15.549 --> 00:15:21.449
你了解所有的模式，就像

00:15:17.559 --> 00:15:24.220
如果你依靠我只在乎你依靠

00:15:21.449 --> 00:15:29.079
脚本之间传递的变量

00:15:24.220 --> 00:15:30.819
标签可能暗含

00:15:29.079 --> 00:15:33.759
模式有些情况下你会做

00:15:30.819 --> 00:15:36.489
这是因为，如果您有一个

00:15:33.759 --> 00:15:37.869
就像你在做服务器端的事情

00:15:36.489 --> 00:15:39.639
但您也想转储最初的

00:15:37.869 --> 00:15:41.170
一组数据放入一个喷雾标签中

00:15:39.639 --> 00:15:42.939
我会在哪里工作的人

00:15:41.170 --> 00:15:44.769
说，如果你想这样做

00:15:42.939 --> 00:15:46.779
很明显，正确的自我等等

00:15:44.769 --> 00:15:48.610
等等，有趣，是的，让我们

00:15:46.779 --> 00:15:51.399
不要依赖这些隐含的规则

00:15:48.610 --> 00:15:53.139
因为那样每个人都会看这个

00:15:51.399 --> 00:15:55.869
而且必须走了，我不记得如何

00:15:53.139 --> 00:15:57.879
这些全球联络人的详细信息

00:15:55.869 --> 00:15:59.230
我会确定范围规则

00:15:57.879 --> 00:16:01.379
同意我认为整个事情

00:15:59.230 --> 00:16:03.819
大约有一个原因

00:16:01.379 --> 00:16:05.889
构成不会最终出现在全球

00:16:03.819 --> 00:16:08.259
对象，因为它很奇怪也可以

00:16:05.889 --> 00:16:09.850
我们要停止推杆

00:16:08.259 --> 00:16:11.589
全局对象上的所有内容正确

00:16:09.850 --> 00:16:14.290
因为它甚至被污染了

00:16:11.589 --> 00:16:16.779
无论如何，是的，所以我们只做那个

00:16:14.290 --> 00:16:17.920
当它是有意识的选择时发生

00:16:16.779 --> 00:16:20.619
开发人员实际写下来

00:16:17.920 --> 00:16:22.179
自我点等于好

00:16:20.619 --> 00:16:24.929
那就是，我们确实看到了

00:16:22.179 --> 00:16:27.069
未来的JavaScript以及类似的东西

00:16:24.929 --> 00:16:28.329
异步函数生成器

00:16:27.069 --> 00:16:30.269
他们是功能，他们仍然表现得像

00:16:28.329 --> 00:16:32.529
函数，但类的行为更像

00:16:30.269 --> 00:16:35.100
不断让是的，它将是

00:16:32.529 --> 00:16:39.999
像块范围，而不是

00:16:35.100 --> 00:16:41.319
全球我说这是我抬头的东西

00:16:39.999 --> 00:16:44.110
今天早上在火车上想

00:16:41.319 --> 00:16:46.119
我问了，所以我敢打赌你没问

00:16:44.110 --> 00:16:48.549
这样我就和撬棍战斗了

00:16:46.119 --> 00:16:49.869
那时我感觉很充实

00:16:48.549 --> 00:16:51.220
你用你所有的知识吗

00:16:49.869 --> 00:16:52.449
现在抬起头来，想找别的东西

00:16:51.220 --> 00:16:54.970
撒在那是我所有的知识

00:16:52.449 --> 00:16:56.679
必须在这集里给你完成

00:16:54.970 --> 00:16:59.259
非常感谢您的见解

00:16:56.679 --> 00:17:00.939
报告并习惯于穿着我的

00:16:59.259 --> 00:17:03.189
眼镜，如果现在我要去

00:17:00.939 --> 00:17:06.039
明白我可以放心拉起的那一点

00:17:03.189 --> 00:17:08.589
沙沙作响

00:17:06.039 --> 00:17:10.000
对，不，实际上是因为我有

00:17:08.589 --> 00:17:11.770
我戴眼镜，你知道是否有

00:17:10.000 --> 00:17:13.000
他们必须去的，但他们是

00:17:11.770 --> 00:17:14.620
说你知道厄运的条纹

00:17:13.000 --> 00:17:16.779
真的，我的新眼镜实际上是

00:17:14.620 --> 00:17:18.039
像那个按钮真的很刺眼等等

00:17:16.779 --> 00:17:21.449
我一直在想如果我继续

00:17:18.039 --> 00:17:21.449
穿起来会好起来的

