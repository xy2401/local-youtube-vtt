WEBVTT
Kind: captions
Language: en

00:00:00.420 --> 00:00:01.920
JAKE ARCHIBALD:
This is my favorite.

00:00:01.920 --> 00:00:03.462
It's the only reason
I do the series.

00:00:03.462 --> 00:00:05.907
[INAUDIBLE] It's why
I get really like,

00:00:05.907 --> 00:00:08.490
if it's not happening, I'm like,
whoa, whoa, whoa, whoa, whoa.

00:00:08.490 --> 00:00:11.386
Want the face massage.

00:00:11.386 --> 00:00:12.886
SPEAKER 1: Not doing
a face massage.

00:00:12.886 --> 00:00:14.947
JAKE ARCHIBALD: Well, it's--

00:00:14.947 --> 00:00:16.030
you call it what you want.

00:00:16.030 --> 00:00:17.072
I'll call it what I want.

00:00:17.072 --> 00:00:17.963
And we're all.

00:00:17.963 --> 00:00:18.796
SURMA: Brow strokes.

00:00:18.796 --> 00:00:21.700
[MUSIC PLAYING]

00:00:26.195 --> 00:00:27.570
JAKE ARCHIBALD:
We built a thing.

00:00:27.570 --> 00:00:28.100
SURMA: Did we?

00:00:28.100 --> 00:00:29.450
JAKE ARCHIBALD: We
built a thing and I'm--

00:00:29.450 --> 00:00:30.970
SURMA: Have we ever
talked about this thing?

00:00:30.970 --> 00:00:31.660
JAKE ARCHIBALD: We talk about--

00:00:31.660 --> 00:00:32.110
SURMA: On 203.

00:00:32.110 --> 00:00:33.360
JAKE ARCHIBALD: --nothing but.

00:00:33.360 --> 00:00:34.390
And this is it.

00:00:34.390 --> 00:00:34.945
This is--

00:00:34.945 --> 00:00:35.570
SURMA: Squoosh.

00:00:35.570 --> 00:00:37.070
JAKE ARCHIBALD:
--we've got the fox.

00:00:37.070 --> 00:00:39.860
It's image compression,
web app thing.

00:00:39.860 --> 00:00:41.790
All runs on the web.

00:00:41.790 --> 00:00:44.140
As you can see, image has
gone from two point whatever

00:00:44.140 --> 00:00:45.300
makes it to--

00:00:45.300 --> 00:00:46.050
SURMA: It's great.

00:00:46.050 --> 00:00:47.240
Check it out if you haven't.

00:00:47.240 --> 00:00:49.032
JAKE ARCHIBALD: Anyway,
whatever, whatever.

00:00:49.032 --> 00:00:53.790
But, but what I want you to
talk about is share target.

00:00:53.790 --> 00:00:54.568
SURMA: All right.

00:00:54.568 --> 00:00:55.860
JAKE ARCHIBALD: All right, so--

00:00:55.860 --> 00:00:59.720
SURMA: So share target
is already a thing.

00:00:59.720 --> 00:01:02.885
It's been already shipped
and is stable, right?

00:01:02.885 --> 00:01:05.260
JAKE ARCHIBALD: Parts of it
have and parts of it haven't.

00:01:05.260 --> 00:01:06.280
SURMA: Oh, it's part-- oh.

00:01:06.280 --> 00:01:08.140
JAKE ARCHIBALD: And I'm going
to go through both of them.

00:01:08.140 --> 00:01:09.098
SURMA: All right, cool.

00:01:09.098 --> 00:01:10.750
JAKE ARCHIBALD: So
here's what it does.

00:01:10.750 --> 00:01:12.430
SURMA: Oh, look at
our stupid faces.

00:01:12.430 --> 00:01:13.310
JAKE ARCHIBALD: Here's
our stupid faces.

00:01:13.310 --> 00:01:14.290
This is Google Photos.

00:01:14.290 --> 00:01:17.230
This is the native
app on Android.

00:01:17.230 --> 00:01:18.700
I'm going to hit Share.

00:01:18.700 --> 00:01:20.640
And I'm going to share to--

00:01:20.640 --> 00:01:21.970
SURMA: There's a Squoosh.

00:01:21.970 --> 00:01:24.060
JAKE ARCHIBALD: --Squoosh.

00:01:24.060 --> 00:01:25.298
[INTERPOSING VOICES]

00:01:25.298 --> 00:01:27.090
JAKE ARCHIBALD: And
this is just a web app.

00:01:27.090 --> 00:01:29.902
SURMA: So we just shared from
a native app to a web app.

00:01:29.902 --> 00:01:31.110
JAKE ARCHIBALD: To a web app.

00:01:31.110 --> 00:01:31.895
SURMA: That's pretty cool.

00:01:31.895 --> 00:01:32.320
JAKE ARCHIBALD: Which is nice.

00:01:32.320 --> 00:01:34.360
SURMA: Like even its
entire image and things.

00:01:34.360 --> 00:01:35.777
JAKE ARCHIBALD:
Yes, and it works.

00:01:35.777 --> 00:01:37.850
And it feels like a
real native experience.

00:01:37.850 --> 00:01:38.610
SURMA: So now I can actually--

00:01:38.610 --> 00:01:40.960
I mean, this is the workflow
that we have been missing,

00:01:40.960 --> 00:01:41.130
right?

00:01:41.130 --> 00:01:42.330
Because you want to
compress your image.

00:01:42.330 --> 00:01:44.520
How do you get your image
from Photos into Squoosh?

00:01:44.520 --> 00:01:46.500
You have to open Squoosh,
say load an image,

00:01:46.500 --> 00:01:47.735
select the Photos app.

00:01:47.735 --> 00:01:49.485
Then you get the
selective all the images.

00:01:49.485 --> 00:01:51.150
And now you go, image flunk.

00:01:51.150 --> 00:01:52.650
JAKE ARCHIBALD:
Yes, and so anything

00:01:52.650 --> 00:01:53.415
that can share images--

00:01:53.415 --> 00:01:54.600
SURMA: That's the
official sound, isn't it?

00:01:54.600 --> 00:01:55.430
JAKE ARCHIBALD: Flunk.

00:01:55.430 --> 00:01:55.780
Yeah.

00:01:55.780 --> 00:01:57.250
Well, it means you could
do that from Twitter.

00:01:57.250 --> 00:01:58.680
From anything that will
actually share an image,

00:01:58.680 --> 00:02:00.555
you could then take it
straight into Squoosh.

00:02:00.555 --> 00:02:02.100
SURMA: So is that only for--

00:02:02.100 --> 00:02:03.523
it's a manifest thing I presume?

00:02:03.523 --> 00:02:04.440
JAKE ARCHIBALD: It is.

00:02:04.440 --> 00:02:10.789
This is one of the few PWA
only features that we have.

00:02:10.789 --> 00:02:13.180
SURMA: You mean, only
once it's installed,

00:02:13.180 --> 00:02:14.180
it will actually work.

00:02:14.180 --> 00:02:15.180
JAKE ARCHIBALD: Exactly.

00:02:15.180 --> 00:02:15.540
Yes.

00:02:15.540 --> 00:02:17.248
SURMA: So visiting
the page, like if I've

00:02:17.248 --> 00:02:19.545
visited Squoosh in my
browser, it will not

00:02:19.545 --> 00:02:20.670
register as a share target.

00:02:20.670 --> 00:02:22.110
JAKE ARCHIBALD: It will not
register as a share target.

00:02:22.110 --> 00:02:22.410
SURMA: Cool.

00:02:22.410 --> 00:02:23.910
JAKE ARCHIBALD: The way
you do it, like you say,

00:02:23.910 --> 00:02:25.100
is in the web app manifest.

00:02:25.100 --> 00:02:25.822
So--

00:02:25.822 --> 00:02:27.030
SURMA: You know these things.

00:02:27.030 --> 00:02:27.450
OK.

00:02:27.450 --> 00:02:30.000
JAKE ARCHIBALD: Name, start
URL, that's all the usual stuff.

00:02:30.000 --> 00:02:31.200
But then oh.

00:02:31.200 --> 00:02:32.582
SURMA: Oh, share target.

00:02:32.582 --> 00:02:33.790
JAKE ARCHIBALD: Share target.

00:02:33.790 --> 00:02:35.160
OK.

00:02:35.160 --> 00:02:36.760
And then an action.

00:02:36.760 --> 00:02:42.340
Now, this is action in the
same way form action works.

00:02:42.340 --> 00:02:42.850
So--

00:02:42.850 --> 00:02:43.300
SURMA: OK.

00:02:43.300 --> 00:02:44.560
JAKE ARCHIBALD: Because what
share target's going to do,

00:02:44.560 --> 00:02:46.330
the way it's going
to share the things

00:02:46.330 --> 00:02:49.610
is it's going to make
like a form submission.

00:02:49.610 --> 00:02:51.070
SURMA: So like a POST request.

00:02:51.070 --> 00:02:52.947
JAKE ARCHIBALD: Well--

00:02:52.947 --> 00:02:53.530
SURMA: Or not.

00:02:53.530 --> 00:02:54.990
JAKE ARCHIBALD: --you get
to specify the method.

00:02:54.990 --> 00:02:55.760
And this works the same--

00:02:55.760 --> 00:02:56.220
SURMA: All right,
so in the form,

00:02:56.220 --> 00:02:57.060
you do that as well actually.

00:02:57.060 --> 00:02:57.810
Now they say that.

00:02:57.810 --> 00:02:59.920
I haven't done form in
ages, now that I say that.

00:02:59.920 --> 00:03:00.420
But yeah.

00:03:00.420 --> 00:03:01.150
JAKE ARCHIBALD: Yeah,
well, this is it.

00:03:01.150 --> 00:03:03.020
It does exactly the
same as a method does.

00:03:03.020 --> 00:03:04.020
SURMA: It's like a form.

00:03:04.020 --> 00:03:04.200
Cool.

00:03:04.200 --> 00:03:05.658
JAKE ARCHIBALD:
And you can specify

00:03:05.658 --> 00:03:08.070
the encoding type, which is
the same as how form works.

00:03:08.070 --> 00:03:09.570
SURMA: So we spare
our share target.

00:03:09.570 --> 00:03:10.890
But in coding time,
we shorten to enctype?

00:03:10.890 --> 00:03:12.240
JAKE ARCHIBALD: Because that's
the attribute on the form

00:03:12.240 --> 00:03:12.775
element.

00:03:12.775 --> 00:03:14.400
SURMA: I didn't even
know that existed.

00:03:14.400 --> 00:03:16.400
JAKE ARCHIBALD: Yeah,
yeah, no, this is a thing.

00:03:16.400 --> 00:03:18.240
If you have a file
input in a form,

00:03:18.240 --> 00:03:22.380
you have to set the enctype
to multi-part form data.

00:03:22.380 --> 00:03:25.150
Because that's the only form
encoding that supports files.

00:03:25.150 --> 00:03:25.650
SURMA: OK.

00:03:25.650 --> 00:03:27.000
JAKE ARCHIBALD:
This format doesn't.

00:03:27.000 --> 00:03:29.280
The enctype only matters
if you're on a POST method.

00:03:29.280 --> 00:03:30.738
SURMA: So x in the
form [INAUDIBLE]

00:03:30.738 --> 00:03:32.910
means all the things in
my form, whatever it is,

00:03:32.910 --> 00:03:36.660
will be appended to the action
URL as query parameters.

00:03:36.660 --> 00:03:39.955
JAKE ARCHIBALD: Well, that
depends on what method it is.

00:03:39.955 --> 00:03:40.830
SURMA: Ah, of course.

00:03:40.830 --> 00:03:41.370
JAKE ARCHIBALD:
Like if it's POST,

00:03:41.370 --> 00:03:42.840
it will be sent
as the POST body.

00:03:42.840 --> 00:03:43.140
SURMA: Yes.

00:03:43.140 --> 00:03:44.220
JAKE ARCHIBALD: If
it's GET, you're right,

00:03:44.220 --> 00:03:46.500
it's going to end up
at the end of the URL.

00:03:46.500 --> 00:03:48.563
And then you specify
these parameters.

00:03:48.563 --> 00:03:50.730
SURMA: So quick, quick
comment, because I'm curious.

00:03:50.730 --> 00:03:54.290
If I already have some query
parameters in my action URL,

00:03:54.290 --> 00:03:55.740
will it successfully merge?

00:03:55.740 --> 00:03:56.160
JAKE ARCHIBALD: Yes, it will.

00:03:56.160 --> 00:03:56.510
SURMA: Oh.

00:03:56.510 --> 00:03:57.120
JAKE ARCHIBALD: Yeah, yeah.

00:03:57.120 --> 00:03:57.900
SURMA: OK, cool.

00:03:57.900 --> 00:03:58.610
JAKE ARCHIBALD: I imagine.

00:03:58.610 --> 00:03:59.485
SURMA: [LAUGHS]

00:03:59.485 --> 00:04:01.290
JAKE ARCHIBALD:
Have not tested it.

00:04:01.290 --> 00:04:02.483
But that's what form does.

00:04:02.483 --> 00:04:03.150
SURMA: OK, cool.

00:04:03.150 --> 00:04:05.442
JAKE ARCHIBALD: So we would
expect the same thing here.

00:04:05.442 --> 00:04:08.280
And here, it's the things the
operating system may give you

00:04:08.280 --> 00:04:12.000
as part of a share is the
title, the text, the URL.

00:04:12.000 --> 00:04:15.360
SURMA: So this is the classic
text share or link share

00:04:15.360 --> 00:04:16.235
kind of thing.

00:04:16.235 --> 00:04:17.110
JAKE ARCHIBALD: Yeah.

00:04:17.110 --> 00:04:19.290
And I'm mapping it to
the form field names

00:04:19.290 --> 00:04:20.248
that I'm interested in.

00:04:20.248 --> 00:04:21.832
SURMA: So and If I
remember correctly,

00:04:21.832 --> 00:04:24.150
that is the part that is
already shipped and stable.

00:04:24.150 --> 00:04:25.942
JAKE ARCHIBALD: This
is shipped and stable.

00:04:25.942 --> 00:04:28.530
This has been in
since 71 on Android.

00:04:28.530 --> 00:04:31.020
So I've built a web
app that uses this.

00:04:31.020 --> 00:04:31.520
SURMA: OK.

00:04:31.520 --> 00:04:31.850
JAKE ARCHIBALD: Yeah?

00:04:31.850 --> 00:04:32.200
SURMA: Show me.

00:04:32.200 --> 00:04:32.550
JAKE ARCHIBALD: Yeah.

00:04:32.550 --> 00:04:34.740
SURMA: Show me your
work, your glorious--

00:04:34.740 --> 00:04:36.240
JAKE ARCHIBALD:
What this does, this

00:04:36.240 --> 00:04:38.740
is the text share target app.

00:04:38.740 --> 00:04:42.360
And what it does, it
tells you what the URL is.

00:04:42.360 --> 00:04:43.350
SURMA: That's [LAUGHS]

00:04:43.350 --> 00:04:45.630
JAKE ARCHIBALD: Very good.

00:04:45.630 --> 00:04:47.550
Look, it's a good app.

00:04:47.550 --> 00:04:49.620
And what I'm going to
do is I'm going to--

00:04:49.620 --> 00:04:50.520
SURMA: And have it
installed to home screen.

00:04:50.520 --> 00:04:51.690
Because it's that good.

00:04:51.690 --> 00:04:52.530
JAKE ARCHIBALD:
Because it's that good.

00:04:52.530 --> 00:04:53.597
I use it all the time.

00:04:53.597 --> 00:04:55.430
I'm going to go into
the YouTube native app.

00:04:55.430 --> 00:04:59.150
I'm going to go in to
look at these jokers.

00:04:59.150 --> 00:05:00.570
And I'm going to share.

00:05:00.570 --> 00:05:02.936
And I can share to that app.

00:05:02.936 --> 00:05:03.710
SURMA: All right.

00:05:03.710 --> 00:05:05.410
JAKE ARCHIBALD: And if I share--

00:05:05.410 --> 00:05:06.290
SURMA: There you go.

00:05:06.290 --> 00:05:07.748
JAKE ARCHIBALD: So
the URL is blah.

00:05:07.748 --> 00:05:08.320
SURMA: Blah.

00:05:08.320 --> 00:05:09.500
JAKE ARCHIBALD: It's
got all that stuff on.

00:05:09.500 --> 00:05:11.320
And, you know,
break it apart here.

00:05:11.320 --> 00:05:14.470
The share title is now Watch
Context and Optimizations

00:05:14.470 --> 00:05:15.260
on YouTube.

00:05:15.260 --> 00:05:17.290
And you should.

00:05:17.290 --> 00:05:20.860
And the new share
text, which is the URL.

00:05:20.860 --> 00:05:22.950
Now, it's a bit weird
that the text is the URL.

00:05:22.950 --> 00:05:23.742
And there's a URL--

00:05:23.742 --> 00:05:24.795
SURMA: Yeah, I hate that.

00:05:24.795 --> 00:05:26.420
Because you know how
when you sometimes

00:05:26.420 --> 00:05:29.297
share from the Twitter app to
like Whatsapp or something--

00:05:29.297 --> 00:05:30.130
JAKE ARCHIBALD: Yes.

00:05:30.130 --> 00:05:31.172
SURMA: --read this tweet.

00:05:31.172 --> 00:05:31.714
I'm like, no.

00:05:31.714 --> 00:05:33.089
JAKE ARCHIBALD:
And that is going

00:05:33.089 --> 00:05:34.750
to pick up that horrible text.

00:05:34.750 --> 00:05:36.732
And you're really going
to receive whatever

00:05:36.732 --> 00:05:37.940
the native app is giving you.

00:05:37.940 --> 00:05:38.440
SURMA: Yeah.

00:05:38.440 --> 00:05:40.120
JAKE ARCHIBALD:
And so you kind of

00:05:40.120 --> 00:05:42.337
have to deal with
that, which is sad.

00:05:42.337 --> 00:05:44.170
SURMA: That being said,
this is pretty cool.

00:05:44.170 --> 00:05:46.660
Like, I can share-- be a
share target for link sharing

00:05:46.660 --> 00:05:47.160
and stuff.

00:05:47.160 --> 00:05:49.390
JAKE ARCHIBALD: Yep, and
if I go into Photos now,

00:05:49.390 --> 00:05:52.870
like I did before, I
can do the same thing,

00:05:52.870 --> 00:05:54.960
share to the text share target.

00:05:54.960 --> 00:05:57.210
It's going to ask me if I
want to create a link or a--

00:05:57.210 --> 00:05:58.990
SURMA: Because it's only
a text share target.

00:05:58.990 --> 00:06:00.700
JAKE ARCHIBALD: Because it
is just a text share target.

00:06:00.700 --> 00:06:03.033
And it is-- the share text
that comes out is a link to--

00:06:03.033 --> 00:06:05.158
SURMA: And there's no
[INAUDIBLE] saying, check out

00:06:05.158 --> 00:06:06.720
this image from Jake Archibald.

00:06:06.720 --> 00:06:08.303
JAKE ARCHIBALD: Well,
yeah, so this is

00:06:08.303 --> 00:06:09.740
better that what we had before.

00:06:09.740 --> 00:06:13.690
But-- but in version
two of share target,

00:06:13.690 --> 00:06:16.260
you can share files.

00:06:16.260 --> 00:06:17.973
SURMA: Hey.

00:06:17.973 --> 00:06:19.640
JAKE ARCHIBALD: Did
you see that coming?

00:06:19.640 --> 00:06:20.400
Brilliant.

00:06:20.400 --> 00:06:22.000
SURMA: You already
showed me, mate.

00:06:22.000 --> 00:06:23.220
JAKE ARCHIBALD: Yeah.

00:06:23.220 --> 00:06:24.930
Yeah, I did sort of
destroy the surprise

00:06:24.930 --> 00:06:27.240
in the first couple of seconds
of the video, didn't I?

00:06:27.240 --> 00:06:27.750
Fair enough.

00:06:27.750 --> 00:06:29.670
SURMA: Good storyteller
right there.

00:06:29.670 --> 00:06:31.920
JAKE ARCHIBALD: So
slightly different.

00:06:31.920 --> 00:06:33.120
Back again in the manifest.

00:06:33.120 --> 00:06:33.620
SURMA: OK.

00:06:33.620 --> 00:06:35.570
JAKE ARCHIBALD: Action same.

00:06:35.570 --> 00:06:36.640
Method POST this time.

00:06:36.640 --> 00:06:38.520
Because if you're
going to receive files,

00:06:38.520 --> 00:06:39.470
it has to be POST.

00:06:39.470 --> 00:06:41.700
The encoding type is
multi-platform data.

00:06:41.700 --> 00:06:43.510
It has to be that
if you want files.

00:06:43.510 --> 00:06:44.010
SURMA: Yeah.

00:06:44.010 --> 00:06:45.030
JAKE ARCHIBALD:
And you can still

00:06:45.030 --> 00:06:46.230
put the usual parameters in.

00:06:46.230 --> 00:06:49.280
But there's this new
one, which is files.

00:06:49.280 --> 00:06:50.770
And you have an array.

00:06:50.770 --> 00:06:52.680
SURMA: So the mere
existence, it has

00:06:52.680 --> 00:06:55.320
to be POST and file to
basically make your file target?

00:06:55.320 --> 00:06:55.950
Or is files--

00:06:55.950 --> 00:06:56.270
JAKE ARCHIBALD: Yeah.

00:06:56.270 --> 00:06:56.400
SURMA: OK.

00:06:56.400 --> 00:06:57.930
JAKE ARCHIBALD: If
you have GET in there,

00:06:57.930 --> 00:07:00.110
it will throw a warning into
the console and say, er.

00:07:00.110 --> 00:07:01.190
SURMA: That doesn't make sense.

00:07:01.190 --> 00:07:02.940
JAKE ARCHIBALD: No,
it just does that. er.

00:07:02.940 --> 00:07:04.980
You have to work out
the rest yourself.

00:07:04.980 --> 00:07:07.002
SURMA: The play button.

00:07:07.002 --> 00:07:08.710
JAKE ARCHIBALD: So
here I'm saying files.

00:07:08.710 --> 00:07:09.900
And this is the mapping again.

00:07:09.900 --> 00:07:11.610
I'm saying the name of
the form field is file.

00:07:11.610 --> 00:07:12.680
I can call that whatever I want.

00:07:12.680 --> 00:07:13.710
SURMA: Oh, and you can
fill it by MIME type.

00:07:13.710 --> 00:07:14.370
That's good.

00:07:14.370 --> 00:07:15.260
JAKE ARCHIBALD: And you
can fill it by MIME type.

00:07:15.260 --> 00:07:16.760
SURMA: So if I just
have images, you

00:07:16.760 --> 00:07:18.340
can say image slash
star I presume.

00:07:18.340 --> 00:07:19.200
JAKE ARCHIBALD: Yeah,
which is actually--

00:07:19.200 --> 00:07:21.780
we had this problem in
Squoosh, because we've made it

00:07:21.780 --> 00:07:25.060
so you can load WebP in browsers
that don't support WebP.

00:07:25.060 --> 00:07:25.560
SURMA: Yeah.

00:07:25.560 --> 00:07:28.060
JAKE ARCHIBALD: But if you and
try and fill it by MIME type,

00:07:28.060 --> 00:07:30.300
the browser goes, I don't
understand what WebP is.

00:07:30.300 --> 00:07:31.615
This is not an image.

00:07:31.615 --> 00:07:33.240
So we had to sort of
do this same hack.

00:07:33.240 --> 00:07:35.455
Even though we're wanting
to receive images,

00:07:35.455 --> 00:07:37.080
we had to say well,
we accept anything.

00:07:37.080 --> 00:07:38.400
Because we will
take file formats

00:07:38.400 --> 00:07:40.170
that the operating system
browser doesn't understand.

00:07:40.170 --> 00:07:41.212
SURMA: Makes sense, yeah.

00:07:41.212 --> 00:07:42.030
OK.

00:07:42.030 --> 00:07:43.730
JAKE ARCHIBALD: So
yeah, that's that.

00:07:43.730 --> 00:07:45.997
SURMA: So you say this gives
me a POST request, right?

00:07:45.997 --> 00:07:46.830
JAKE ARCHIBALD: Yes.

00:07:46.830 --> 00:07:50.010
SURMA: So that is
not as easy to handle

00:07:50.010 --> 00:07:51.915
as a GET request
with parameters.

00:07:51.915 --> 00:07:53.790
JAKE ARCHIBALD: Yes, I
mean, by default, this

00:07:53.790 --> 00:07:54.957
will just go to your server.

00:07:54.957 --> 00:07:56.395
And your server handles it.

00:07:56.395 --> 00:07:57.490
SURMA: True.

00:07:57.490 --> 00:07:59.490
JAKE ARCHIBALD: Which
might be OK in some cases.

00:07:59.490 --> 00:07:59.760
SURMA: Yeah.

00:07:59.760 --> 00:08:02.398
JAKE ARCHIBALD: But for Squoosh,
we want it to work offline.

00:08:02.398 --> 00:08:02.940
SURMA: Right.

00:08:02.940 --> 00:08:03.900
JAKE ARCHIBALD: So
we don't want this

00:08:03.900 --> 00:08:04.950
to actually go to the server.

00:08:04.950 --> 00:08:05.980
We don't want it to
depend on a server.

00:08:05.980 --> 00:08:07.230
SURMA: There is no server.

00:08:07.230 --> 00:08:08.177
We are serverless.

00:08:08.177 --> 00:08:10.260
JAKE ARCHIBALD: We're
serverless, another buzzword

00:08:10.260 --> 00:08:13.230
that we encompass.

00:08:13.230 --> 00:08:15.698
So in order to solve
this, service worker.

00:08:15.698 --> 00:08:17.240
SURMA: Into the
service worker we go.

00:08:17.240 --> 00:08:17.350
JAKE ARCHIBALD: Yes.

00:08:17.350 --> 00:08:18.058
SURMA: All right.

00:08:18.058 --> 00:08:21.115
So now, this is, I think this
would be the first time, no

00:08:21.115 --> 00:08:22.490
the second, no
the first time I'm

00:08:22.490 --> 00:08:25.325
handling a POST request in
my service worker I think.

00:08:25.325 --> 00:08:26.200
JAKE ARCHIBALD: Yeah?

00:08:26.200 --> 00:08:28.617
SURMA: Yeah, although, I think
maybe in WordPress when you

00:08:28.617 --> 00:08:30.200
post a comment I did it, maybe.

00:08:30.200 --> 00:08:32.409
JAKE ARCHIBALD: I've
done it before to trap

00:08:32.409 --> 00:08:35.048
POST requests that didn't
work and saved them for later,

00:08:35.048 --> 00:08:35.840
that sort of thing.

00:08:35.840 --> 00:08:36.620
SURMA: Oh, with background sync.

00:08:36.620 --> 00:08:38.162
JAKE ARCHIBALD: With
background sync.

00:08:38.162 --> 00:08:41.495
But in this case, what I'm
going to do, look at the URL.

00:08:41.495 --> 00:08:43.208
And if it's the
same origin request

00:08:43.208 --> 00:08:45.750
and if it's to the share target,
this is all what we set up--

00:08:45.750 --> 00:08:45.980
SURMA: Yeah.

00:08:45.980 --> 00:08:47.990
JAKE ARCHIBALD: This is all
what we set up in the manifest.

00:08:47.990 --> 00:08:50.448
And if it's a POST thing, we're
going to do something else.

00:08:50.448 --> 00:08:52.855
We're going to do
something magic.

00:08:52.855 --> 00:08:53.480
It's not magic.

00:08:53.480 --> 00:08:54.560
SURMA: The rest stays the same.

00:08:54.560 --> 00:08:55.370
JAKE ARCHIBALD: Yeah.

00:08:55.370 --> 00:08:57.050
so you still have the rest
of your service worker logic

00:08:57.050 --> 00:08:57.560
there.

00:08:57.560 --> 00:08:59.790
We're just catching
this one case.

00:08:59.790 --> 00:09:01.215
And what we're
going to do, we're

00:09:01.215 --> 00:09:03.460
going to respond
with a redirect.

00:09:03.460 --> 00:09:04.750
SURMA: OK.

00:09:04.750 --> 00:09:06.490
JAKE ARCHIBALD: And
this is basically

00:09:06.490 --> 00:09:08.480
what you would do
on the server side.

00:09:08.480 --> 00:09:10.480
SURMA: Yeah, I think you
basically never respond

00:09:10.480 --> 00:09:12.430
to a POST request with content.

00:09:12.430 --> 00:09:14.680
You could say no
content or a redirect.

00:09:14.680 --> 00:09:16.138
JAKE ARCHIBALD:
You would sometimes

00:09:16.138 --> 00:09:18.550
respond with a content if
it was an error in the POST.

00:09:18.550 --> 00:09:18.640
SURMA: True.

00:09:18.640 --> 00:09:19.290
JAKE ARCHIBALD: Because
you would send back

00:09:19.290 --> 00:09:22.150
the form with all the data,
but one field saying this one's

00:09:22.150 --> 00:09:23.000
wrong.

00:09:23.000 --> 00:09:25.500
But if stuff is correct, you
tend to serve a redirect.

00:09:25.500 --> 00:09:28.000
And that's because-- I don't
know, you might have seen this,

00:09:28.000 --> 00:09:29.840
where you hit Refresh
on a page and it says--

00:09:29.840 --> 00:09:31.132
SURMA: Do you want to resubmit?

00:09:31.132 --> 00:09:32.170
JAKE ARCHIBALD: Exactly.

00:09:32.170 --> 00:09:35.470
And that's because this
page was a POST response,

00:09:35.470 --> 00:09:37.280
a response to a POST request.

00:09:37.280 --> 00:09:38.530
So you serve a redirect.

00:09:38.530 --> 00:09:39.820
That makes it a GET request.

00:09:39.820 --> 00:09:41.990
And the user can hit Refresh
and it's not a problem.

00:09:41.990 --> 00:09:43.032
So we're just doing that.

00:09:43.032 --> 00:09:49.390
SURMA: So with a redirect,
the body will still get--

00:09:49.390 --> 00:09:51.630
that will make the browser
to a GET request after.

00:09:51.630 --> 00:09:51.830
Right?

00:09:51.830 --> 00:09:52.000
JAKE ARCHIBALD: Yes.

00:09:52.000 --> 00:09:54.800
SURMA: So you will have to read
the body on the POST request

00:09:54.800 --> 00:09:56.883
and then pass it along to
the GET request somehow?

00:09:56.883 --> 00:09:58.050
JAKE ARCHIBALD: To the page.

00:09:58.050 --> 00:10:00.290
Well, no, we can pass it
along just to the page.

00:10:00.290 --> 00:10:01.130
SURMA: Yeah, OK

00:10:01.130 --> 00:10:02.840
JAKE ARCHIBALD: There
are redirect codes

00:10:02.840 --> 00:10:05.880
that say if this
was a POST request,

00:10:05.880 --> 00:10:09.020
you should do a POST request
again with the same data.

00:10:09.020 --> 00:10:11.673
But the default redirect
stuff doesn't do that.

00:10:11.673 --> 00:10:12.340
SURMA: Yeah, OK.

00:10:12.340 --> 00:10:13.757
So basically, what
you're doing is

00:10:13.757 --> 00:10:17.000
you're ripping out the body
from the POST requests.

00:10:17.000 --> 00:10:19.170
Meanwhile, you're
redirecting the client,

00:10:19.170 --> 00:10:22.040
which will send a GET request,
hit your normal service worker

00:10:22.040 --> 00:10:23.840
path, hit the cache,
load the page.

00:10:23.840 --> 00:10:24.420
Great.

00:10:24.420 --> 00:10:25.520
JAKE ARCHIBALD: Yeah, that's
an important detail actually.

00:10:25.520 --> 00:10:26.060
It redirects.

00:10:26.060 --> 00:10:28.060
It will send it back
through the service worker.

00:10:28.060 --> 00:10:29.150
SURMA: Yeah.

00:10:29.150 --> 00:10:31.080
So now the page is up.

00:10:31.080 --> 00:10:33.210
JAKE ARCHIBALD: Well,
the page is not up yet.

00:10:33.210 --> 00:10:34.940
Because this is
at the same time,

00:10:34.940 --> 00:10:36.460
we are going to,
as you say, we're

00:10:36.460 --> 00:10:38.312
going to get that form
data, which is what

00:10:38.312 --> 00:10:39.520
the share target's giving us.

00:10:39.520 --> 00:10:41.632
It's going to give us that file.

00:10:41.632 --> 00:10:42.590
We're going to do this.

00:10:42.590 --> 00:10:43.810
And this is a relatively--

00:10:43.810 --> 00:10:44.705
SURMA: Oh, clients.

00:10:44.705 --> 00:10:45.580
JAKE ARCHIBALD: Yeah.

00:10:45.580 --> 00:10:46.940
SURMA: So I know clients exists.

00:10:46.940 --> 00:10:49.943
It's like all the clients,
the tabs, if you want to--

00:10:49.943 --> 00:10:51.110
JAKE ARCHIBALD: And workers.

00:10:51.110 --> 00:10:54.410
SURMA: And workers simply said
that belong to the service

00:10:54.410 --> 00:10:55.060
worker.

00:10:55.060 --> 00:10:55.260
Right?

00:10:55.260 --> 00:10:55.680
JAKE ARCHIBALD: Yes.

00:10:55.680 --> 00:10:57.210
SURMA: Or that are handled
by the service worker.

00:10:57.210 --> 00:10:57.500
JAKE ARCHIBALD: Yes.

00:10:57.500 --> 00:10:58.580
The ones that are
controlled, you

00:10:58.580 --> 00:11:00.955
can actually get all of the
ones from the origin as well.

00:11:00.955 --> 00:11:01.940
SURMA: Yeah.

00:11:01.940 --> 00:11:02.820
So I never used it.

00:11:02.820 --> 00:11:03.350
I know it exists.

00:11:03.350 --> 00:11:05.990
But this would be the first time
I have seen a use case for it.

00:11:05.990 --> 00:11:06.740
JAKE ARCHIBALD: And
this is quite a new bit

00:11:06.740 --> 00:11:08.930
here, this resultingClientID.

00:11:08.930 --> 00:11:11.900
And what it's saying is
like, there's not a page yet.

00:11:11.900 --> 00:11:16.070
But here's an ID for it
for whenever it appears.

00:11:16.070 --> 00:11:16.728
SURMA: OK.

00:11:16.728 --> 00:11:18.770
JAKE ARCHIBALD: And so
when clients don't get it,

00:11:18.770 --> 00:11:21.243
it's going to wait
until that page appears.

00:11:21.243 --> 00:11:22.910
SURMA: So that will
be the page that you

00:11:22.910 --> 00:11:25.737
have spawned by the redirect.

00:11:25.737 --> 00:11:26.570
JAKE ARCHIBALD: Yes.

00:11:26.570 --> 00:11:26.840
Yes.

00:11:26.840 --> 00:11:27.110
SURMA: OK.

00:11:27.110 --> 00:11:28.940
JAKE ARCHIBALD: Well, if I
didn't redirect, it would be--

00:11:28.940 --> 00:11:29.690
SURMA: The page
that-- yeah, sure.

00:11:29.690 --> 00:11:30.815
JAKE ARCHIBALD: You create.

00:11:30.815 --> 00:11:33.598
Yes, so it's the page that
results as part of this fetch.

00:11:33.598 --> 00:11:34.640
So yes, I get the client.

00:11:34.640 --> 00:11:37.040
And that won't work
if the redirect

00:11:37.040 --> 00:11:38.120
goes to another origin.

00:11:38.120 --> 00:11:40.920
Or it won't work if the page
fails to load for that reason.

00:11:40.920 --> 00:11:41.420
SURMA: OK.

00:11:41.420 --> 00:11:42.170
JAKE ARCHIBALD: But we're
getting the client here.

00:11:42.170 --> 00:11:42.830
Because it's going to work.

00:11:42.830 --> 00:11:43.530
SURMA: It's our client.

00:11:43.530 --> 00:11:44.090
So we can have it.

00:11:44.090 --> 00:11:44.923
JAKE ARCHIBALD: Yep.

00:11:44.923 --> 00:11:46.938
Get the file out
of the form data.

00:11:46.938 --> 00:11:48.230
SURMA: From the [INAUDIBLE] OK.

00:11:48.230 --> 00:11:49.570
JAKE ARCHIBALD: Using
the name that we gave it.

00:11:49.570 --> 00:11:52.070
SURMA: So this will incorporate
all the multi-part MIME

00:11:52.070 --> 00:11:55.740
decoding under the hood and
giving you an early buffer,

00:11:55.740 --> 00:11:57.563
a blob, something, a file.

00:11:57.563 --> 00:11:59.480
JAKE ARCHIBALD: You get
a file, a file object.

00:11:59.480 --> 00:11:59.870
SURMA: Cool.

00:11:59.870 --> 00:12:00.703
JAKE ARCHIBALD: Yep.

00:12:00.703 --> 00:12:03.412
And now I'm going to
postMessage that to the page.

00:12:03.412 --> 00:12:04.370
SURMA: Oh, postMessage.

00:12:04.370 --> 00:12:05.240
There it is again.

00:12:05.240 --> 00:12:06.782
JAKE ARCHIBALD: Good
old postMessage.

00:12:06.782 --> 00:12:09.324
And that means over in my page
I can listen for that message.

00:12:09.324 --> 00:12:10.990
SURMA: Why didn't you
transfer the file?

00:12:10.990 --> 00:12:12.210
These are transferable.

00:12:12.210 --> 00:12:14.127
JAKE ARCHIBALD: I probably
should transfer it.

00:12:14.127 --> 00:12:15.683
SURMA: Ha!

00:12:15.683 --> 00:12:17.100
JAKE ARCHIBALD:
Server wins again.

00:12:17.100 --> 00:12:18.690
Well, here's an
interesting thing.

00:12:18.690 --> 00:12:21.140
I don't know how much it
saves if you transfer a file.

00:12:21.140 --> 00:12:23.240
Because it's read
only data, right?

00:12:23.240 --> 00:12:24.490
SURMA: That's a good question.

00:12:24.490 --> 00:12:25.380
I've no idea.

00:12:25.380 --> 00:12:27.870
It's not like it's-- we saw
it doesn't really make things

00:12:27.870 --> 00:12:28.370
slow.

00:12:28.370 --> 00:12:29.330
It was a pretty big image.

00:12:29.330 --> 00:12:30.205
JAKE ARCHIBALD: Yeah.

00:12:30.205 --> 00:12:31.140
We could transfer it.

00:12:31.140 --> 00:12:34.280
And through doing that,
I have another demo.

00:12:34.280 --> 00:12:35.325
SURMA: Oh, oh boy.

00:12:35.325 --> 00:12:36.200
JAKE ARCHIBALD: Yeah.

00:12:36.200 --> 00:12:36.710
Yeah.

00:12:36.710 --> 00:12:37.680
You ready?

00:12:37.680 --> 00:12:38.220
So it's--

00:12:38.220 --> 00:12:39.972
SURMA: Oh, it's the same symbol.

00:12:39.972 --> 00:12:41.930
JAKE ARCHIBALD: But it's
the file share target.

00:12:41.930 --> 00:12:43.340
And this is what it says.

00:12:43.340 --> 00:12:45.150
You can share files to this app.

00:12:45.150 --> 00:12:47.048
And it's not wrong.

00:12:47.048 --> 00:12:47.840
You absolutely can.

00:12:47.840 --> 00:12:50.007
SURMA: And that is already
an achievement for an app

00:12:50.007 --> 00:12:50.788
that you wrote.

00:12:50.788 --> 00:12:53.330
JAKE ARCHIBALD: And I will share
links to these little demos.

00:12:53.330 --> 00:12:56.330
Because they are like
good minimal cases.

00:12:56.330 --> 00:12:57.810
And so it is going
to appear here.

00:12:57.810 --> 00:12:58.040
SURMA: There it is.

00:12:58.040 --> 00:12:59.957
JAKE ARCHIBALD: There
it is file share target.

00:12:59.957 --> 00:13:01.370
SURMA: Oh, look
you even show it.

00:13:01.370 --> 00:13:02.840
It's like Squoosh.

00:13:02.840 --> 00:13:05.360
JAKE ARCHIBALD: Exactly,
just much simpler.

00:13:05.360 --> 00:13:07.210
And it just gives you
the details the file.

00:13:07.210 --> 00:13:09.650
You get the name, the
size, the MIME type.

00:13:09.650 --> 00:13:10.580
SURMA: Two megs.

00:13:10.580 --> 00:13:11.997
JAKE ARCHIBALD:
It's all in there.

00:13:11.997 --> 00:13:13.950
And it's sort of two
megs or whatever.

00:13:13.950 --> 00:13:15.775
But this is just a very like--

00:13:15.775 --> 00:13:17.650
that's exactly what
we're doing with Squoosh.

00:13:17.650 --> 00:13:20.190
But obviously, we're doing
the rest of Squoosh around it.

00:13:20.190 --> 00:13:23.990
So the result is you
can press Squoosh

00:13:23.990 --> 00:13:25.562
as if it's a native app.

00:13:25.562 --> 00:13:26.270
And there you go.

00:13:26.270 --> 00:13:28.150
And you can start
editing the image.

00:13:28.150 --> 00:13:28.670
SURMA: Hey.

00:13:28.670 --> 00:13:29.460
JAKE ARCHIBALD: And
that's the target.

00:13:29.460 --> 00:13:31.190
SURMA: So this in
Canary right now?

00:13:31.190 --> 00:13:31.940
JAKE ARCHIBALD: This is--

00:13:31.940 --> 00:13:32.300
SURMA: Right row?

00:13:32.300 --> 00:13:33.140
Right row?

00:13:33.140 --> 00:13:33.980
Right now.

00:13:33.980 --> 00:13:36.563
JAKE ARCHIBALD: Well, I
wish we were in Canary--

00:13:36.563 --> 00:13:37.730
This is in Canary right now.

00:13:37.730 --> 00:13:37.960
Yes.

00:13:37.960 --> 00:13:38.790
SURMA: All right.

00:13:38.790 --> 00:13:41.450
JAKE ARCHIBALD: They're starting
the launch process for it.

00:13:41.450 --> 00:13:41.660
SURMA: Yeah.

00:13:41.660 --> 00:13:43.285
JAKE ARCHIBALD: Just
fixing a few bugs.

00:13:43.285 --> 00:13:45.860
So this should land
in a few months.

00:13:45.860 --> 00:13:48.470
SURMA: This would be a
great origin trial actually.

00:13:48.470 --> 00:13:49.970
JAKE ARCHIBALD: I think
they're just going to ship.

00:13:49.970 --> 00:13:51.140
I'm think they've
got an agreement to--

00:13:51.140 --> 00:13:51.710
SURMA: Screw it.

00:13:51.710 --> 00:13:52.100
Ship it.

00:13:52.100 --> 00:13:52.670
JAKE ARCHIBALD: Exactly.

00:13:52.670 --> 00:13:53.610
And I think it's great.

00:13:53.610 --> 00:13:54.652
I think it's one of the--

00:13:54.652 --> 00:13:56.427
this is a huge step
towards really native.

00:13:56.427 --> 00:13:57.260
SURMA: It really is.

00:13:57.260 --> 00:13:58.580
Because if you could
actually-- you know,

00:13:58.580 --> 00:14:00.455
I've always thought
about my Android workflow

00:14:00.455 --> 00:14:01.470
as a phone works.

00:14:01.470 --> 00:14:02.485
It's like start an app.

00:14:02.485 --> 00:14:03.110
You do a thing.

00:14:03.110 --> 00:14:04.190
And you share to the next app.

00:14:04.190 --> 00:14:05.150
And you kind of have this chain.

00:14:05.150 --> 00:14:06.710
Like I remember like a
Unix pipes back in the day.

00:14:06.710 --> 00:14:08.690
And then at the end you send
it by email or whatever.

00:14:08.690 --> 00:14:09.230
Such with images.

00:14:09.230 --> 00:14:09.980
You take an image.

00:14:09.980 --> 00:14:12.290
Then you share it
to a photo editor.

00:14:12.290 --> 00:14:13.580
And you share to email.

00:14:13.580 --> 00:14:14.225
Cool.

00:14:14.225 --> 00:14:16.710
And now you can have your
web apps in that chain.

00:14:16.710 --> 00:14:16.850
JAKE ARCHIBALD: Yeah.

00:14:16.850 --> 00:14:17.630
SURMA: And that's really big.

00:14:17.630 --> 00:14:18.860
JAKE ARCHIBALD: And
it's not just images.

00:14:18.860 --> 00:14:18.990
SURMA: Sure.

00:14:18.990 --> 00:14:21.040
JAKE ARCHIBALD: It's any kind
of file that you want to accept.

00:14:21.040 --> 00:14:21.530
So there we go.

00:14:21.530 --> 00:14:22.363
That's share target.

00:14:22.363 --> 00:14:24.860
We'll link to these demos.

00:14:24.860 --> 00:14:27.623
And we'll link to articles and
stuff and the specs in the--

00:14:27.623 --> 00:14:28.540
SURMA: Thing-a-ma-bob.

00:14:28.540 --> 00:14:29.716
JAKE ARCHIBALD: --in the thing.

00:14:29.716 --> 00:14:30.216
SURMA: Yeah.

00:14:30.216 --> 00:14:30.760
Down there.

00:14:30.760 --> 00:14:32.720
Give it a try.

00:14:32.720 --> 00:14:34.160
JAKE ARCHIBALD: We good to go?

00:14:34.160 --> 00:14:35.270
SPEAKER 4: Absolutely.

00:14:35.270 --> 00:14:36.420
JAKE ARCHIBALD: Amazing.

00:14:36.420 --> 00:14:37.968
SURMA: That was a
fake confidence.

00:14:37.968 --> 00:14:38.843
JAKE ARCHIBALD: Yeah.

00:14:41.314 --> 00:14:43.737
Just got to remember
what I'm doing now.

00:14:43.737 --> 00:14:44.820
SURMA: Share target, mate.

00:14:44.820 --> 00:14:47.824
JAKE ARCHIBALD: All right,
let's do share target.

