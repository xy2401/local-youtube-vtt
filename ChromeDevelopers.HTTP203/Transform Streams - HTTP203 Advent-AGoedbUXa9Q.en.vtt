WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.872
[MUSIC PLAYING]

00:00:06.560 --> 00:00:10.600
SPEAKER 1: So 2017, the
soon-to-be so last year.

00:00:10.600 --> 00:00:11.830
So I'm excited about 2018.

00:00:11.830 --> 00:00:14.079
I've been thinking about
some of the web features that

00:00:14.079 --> 00:00:17.200
are going to be discussed or
specced or landing around then.

00:00:17.200 --> 00:00:21.790
I want to try and describe one
of them to you in two minutes.

00:00:21.790 --> 00:00:23.140
You can ask me questions.

00:00:23.140 --> 00:00:25.970
My subject is transform streams.

00:00:25.970 --> 00:00:28.570
SPEAKER 2: Transform streams.

00:00:28.570 --> 00:00:30.525
We have readable stream
and writable stream.

00:00:30.525 --> 00:00:31.150
SPEAKER 1: Yes.

00:00:31.150 --> 00:00:32.439
SPEAKER 2: What is
it, transform stream?

00:00:32.439 --> 00:00:33.855
SPEAKER 1: Well,
a readable stream

00:00:33.855 --> 00:00:36.687
is a thing you can create
and data comes out of it.

00:00:36.687 --> 00:00:38.020
SPEAKER 2: You can read from it.

00:00:38.020 --> 00:00:39.100
SPEAKER 1: You can read from it.

00:00:39.100 --> 00:00:40.720
You can see where
the name comes from.

00:00:40.720 --> 00:00:43.679
Writable stream,
you can write to it.

00:00:43.679 --> 00:00:44.470
SPEAKER 2: Amazing.

00:00:44.470 --> 00:00:46.904
SPEAKER 1: Nothing comes
out, it's just an endpoint.

00:00:46.904 --> 00:00:48.070
SPEAKER 2: Where does it go?

00:00:48.070 --> 00:00:50.390
SPEAKER 1: Well, when
you define the writable,

00:00:50.390 --> 00:00:53.654
you can get access
to this stuff.

00:00:53.654 --> 00:00:55.570
SPEAKER 2: To define the
other side with code?

00:00:55.570 --> 00:00:56.710
SPEAKER 1: Yes.

00:00:56.710 --> 00:01:00.970
Whereas a transform
stream, the object you get

00:01:00.970 --> 00:01:01.750
is pretty simple.

00:01:01.750 --> 00:01:04.311
It's just an object with
a readable and a writable.

00:01:04.311 --> 00:01:05.310
SPEAKER 2: So it's both?

00:01:05.310 --> 00:01:05.934
SPEAKER 1: Yes.

00:01:05.934 --> 00:01:08.117
It's one object
that has both on.

00:01:08.117 --> 00:01:10.200
You have an object where
dot readable is literally

00:01:10.200 --> 00:01:13.530
a readable stream, dot writable,
literally a writing stream.

00:01:13.530 --> 00:01:17.460
And stuff goes into the writable
and comes out the readable,

00:01:17.460 --> 00:01:20.230
usually changed in some way.

00:01:20.230 --> 00:01:23.075
SPEAKER 2: And you can define
how this change is happening?

00:01:23.075 --> 00:01:23.700
SPEAKER 1: Yes.

00:01:23.700 --> 00:01:25.074
So there is a
constructor for it,

00:01:25.074 --> 00:01:26.520
like a new transform stream.

00:01:26.520 --> 00:01:30.510
And you pass in the details of
how to do buffering and such.

00:01:30.510 --> 00:01:34.570
And then you have a function
that receives chunks of data in

00:01:34.570 --> 00:01:35.960
and you can push.

00:01:35.960 --> 00:01:39.820
SPEAKER 2: So basically in the
middle, it transforms the data?

00:01:39.820 --> 00:01:40.660
SPEAKER 1: Exactly.

00:01:40.660 --> 00:01:41.470
SPEAKER 2: Amazing.

00:01:41.470 --> 00:01:44.305
SPEAKER 1: And this is a
huge thing for the web,

00:01:44.305 --> 00:01:45.930
because it's what we
can start defining

00:01:45.930 --> 00:01:48.649
a lot of platform-level
features on.

00:01:48.649 --> 00:01:50.190
Because it those
stuff in the browser

00:01:50.190 --> 00:01:53.470
that we don't have
access to, like gzip.

00:01:53.470 --> 00:01:54.557
All browsers do it.

00:01:54.557 --> 00:01:56.140
SPEAKER 2: I guess
that's a transform.

00:01:56.140 --> 00:01:58.320
You put in clear text
and out comes compressed.

00:01:58.320 --> 00:02:00.660
SPEAKER 1: Well, it
will probably be bytes.

00:02:00.660 --> 00:02:02.460
SPEAKER 2: I mean,
it might clear text.

00:02:02.460 --> 00:02:05.384
It's clear bytes, and out
come compressed bytes.

00:02:05.384 --> 00:02:06.300
SPEAKER 1: Well, fine.

00:02:06.300 --> 00:02:07.480
OK, fair enough.

00:02:07.480 --> 00:02:09.150
But also things like
image compression,

00:02:09.150 --> 00:02:11.100
because all browsers
do this for Canvas.

00:02:11.100 --> 00:02:13.740
So you know what, if we could
push bytes in, get bytes out,

00:02:13.740 --> 00:02:16.800
RTC has video codecs,
the same business.

00:02:16.800 --> 00:02:19.370
So this should expose all
of that to the platform.

00:02:19.370 --> 00:02:21.420
SPEAKER 2: That
would be so good.

00:02:21.420 --> 00:02:23.572
SPEAKER 1: 2018, exciting.

00:02:23.572 --> 00:02:25.460
[MUSIC PLAYING]

00:02:28.300 --> 00:02:29.190
Go.

00:02:29.190 --> 00:02:30.192
SPEAKER 2: Workers.

00:02:30.192 --> 00:02:31.400
SPEAKER 1: I'm aware of them.

00:02:31.400 --> 00:02:32.420
SPEAKER 2: They're existing.

00:02:32.420 --> 00:02:34.120
They have been existing
for a long time,

00:02:34.120 --> 00:02:37.360
but I think we need
to start using them.

