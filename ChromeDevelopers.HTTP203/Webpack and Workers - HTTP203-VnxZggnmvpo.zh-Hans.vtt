WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.149 --> 00:00:05.339
我们需要一个段的名称是什么

00:00:02.159 --> 00:00:07.859
是2分钟的速度运行吗

00:00:05.339 --> 00:00:10.139
网络2分钟的速度运行相当

00:00:07.859 --> 00:00:14.670
很好，因为我当时想像HTTP 

00:00:10.139 --> 00:00:17.369
免费进入，但太多了

00:00:14.670 --> 00:00:25.619
数字真的不是它驱动的吗

00:00:17.369 --> 00:00:27.390
回家，所以2分钟你会说话

00:00:25.619 --> 00:00:30.689
关于一件事情以及你将要做什么

00:00:27.390 --> 00:00:33.090
谈论我要谈论我的

00:00:30.689 --> 00:00:34.770
 Web heck和

00:00:33.090 --> 00:00:38.670
工人你有两分钟

00:00:34.770 --> 00:00:41.010
去工作我们是的，我仍然知道他们

00:00:38.670 --> 00:00:43.469
认为这是我们完全一样的副本

00:00:41.010 --> 00:00:45.870
在上一集中说过，但现在

00:00:43.469 --> 00:00:48.570
假设您要加载模块

00:00:45.870 --> 00:00:50.910
在工人中，您可以拥有

00:00:48.570 --> 00:00:54.420
导入功能，但不可用

00:00:50.910 --> 00:00:56.460
在任何地方的工人中是是暂时

00:00:54.420 --> 00:00:58.530
你不能，但是很好，让我们做

00:00:56.460 --> 00:01:01.350
像卷起哦，嗨，帕特在哪里

00:00:58.530 --> 00:01:02.969
您基本上将语法转换为

00:01:01.350 --> 00:01:05.369
就像衬东西或

00:01:02.969 --> 00:01:07.290
用其他机制加载一些

00:01:05.369 --> 00:01:09.420
好吧，因为您的输入脚本主要

00:01:07.290 --> 00:01:11.850
威胁具有脚本标签，因此您可以

00:01:09.420 --> 00:01:15.420
模拟行为是的，我进入网络

00:01:11.850 --> 00:01:17.400
打包，我试图建立一点

00:01:15.420 --> 00:01:20.430
应用程序，它在worker和UI中具有逻辑

00:01:17.400 --> 00:01:21.900
主线程，并有一些模块

00:01:20.430 --> 00:01:24.810
主线程之间共享的

00:01:21.900 --> 00:01:26.070
那个工人哦，对了，这是

00:01:24.810 --> 00:01:27.840
您可以处理的事情，因为您

00:01:26.070 --> 00:01:29.610
你能说你的主页吗

00:01:27.840 --> 00:01:31.110
包括它作为脚本标签yeah或

00:01:29.610 --> 00:01:32.909
动态导入，您的工作人员可以使用

00:01:31.110 --> 00:01:34.500
那个可怕的导入脚本同步

00:01:32.909 --> 00:01:35.909
功能，但不是吗，是的，我的

00:01:34.500 --> 00:01:37.350
以为是宠物该怎么想的

00:01:35.909 --> 00:01:39.150
就像你应该看到的那样

00:01:37.350 --> 00:01:40.770
共享代码让我们将其放在

00:01:39.150 --> 00:01:42.540
使用其注释分隔文件

00:01:40.770 --> 00:01:43.950
喝东西，所以它意识到

00:01:42.540 --> 00:01:45.810
这是我的共同点

00:01:43.950 --> 00:01:48.390
与解决您的文件分开

00:01:45.810 --> 00:01:49.890
会认为不是，所以这是一个轻微的

00:01:48.390 --> 00:01:53.460
之所以不同，是因为在Web Pack中，您

00:01:49.890 --> 00:01:55.829
有入口点，这些入口点

00:01:53.460 --> 00:01:56.130
假设您选择其中一个

00:01:55.829 --> 00:01:59.250
一个时间

00:01:56.130 --> 00:02:01.320
但实际上有一个工人

00:01:59.250 --> 00:02:03.060
入口点和工人入口点

00:02:01.320 --> 00:02:05.340
在同一时间，所以有一个不同的

00:02:03.060 --> 00:02:07.500
假设，因为您实际上可以

00:02:05.340 --> 00:02:09.209
入口点之间通常是webpack 

00:02:07.500 --> 00:02:10.920
不会共享公用模块

00:02:09.209 --> 00:02:12.900
说，这是当您使用webpack时

00:02:10.920 --> 00:02:13.560
为你做魔法

00:02:12.900 --> 00:02:15.660
如果你只是做

00:02:13.560 --> 00:02:17.819
我们有两个切入点，一个没有

00:02:15.660 --> 00:02:19.890
知道所有共享模块

00:02:17.819 --> 00:02:22.260
这些还没有弄清楚，所以现在我有了

00:02:19.890 --> 00:02:24.209
在与更多讨论中提出一个问题

00:02:22.260 --> 00:02:27.330
 webhead人们如何支持

00:02:24.209 --> 00:02:29.459
工人，因为我觉得我想

00:02:27.330 --> 00:02:32.430
让2018年成为关于工人的一年，所以我们需要

00:02:29.459 --> 00:02:37.350
在工具方面的支持是

00:02:32.430 --> 00:02:40.700
很好的时机，因为很好

00:02:37.350 --> 00:02:44.580
音乐在我耳边好听，不是很好

00:02:40.700 --> 00:02:47.010
圣诞节，如果我再次出发，你

00:02:44.580 --> 00:02:48.570
想打败盒子，然后我们可以

00:02:47.010 --> 00:02:51.150
转储我在家

00:02:48.570 --> 00:02:56.750
我给你大概十也许五

00:02:51.150 --> 00:02:56.750
秒五四三二一

