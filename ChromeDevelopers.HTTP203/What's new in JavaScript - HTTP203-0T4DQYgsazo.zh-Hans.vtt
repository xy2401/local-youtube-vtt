WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.030 --> 00:00:05.210
所以我真的要上电视了

00:00:02.970 --> 00:00:09.300
就像现在，你不会把它切好

00:00:05.210 --> 00:00:11.759
如果你在电视纬度上

00:00:09.300 --> 00:00:12.230
投放它，否则就是正确的

00:00:11.759 --> 00:00:17.750
够好了

00:00:12.230 --> 00:00:20.820
 [音乐] 

00:00:17.750 --> 00:00:21.869
所以我们完全是专业观众

00:00:20.820 --> 00:00:23.939
我们已经做了一段时间了

00:00:21.869 --> 00:00:25.260
从昨天开始，我们将

00:00:23.939 --> 00:00:28.769
给你第一个问题是你

00:00:25.260 --> 00:00:33.390
告诉大家你是谁，为什么我

00:00:28.769 --> 00:00:37.290
很抱歉II在Google上从事Viet的工作

00:00:33.390 --> 00:00:45.480
引擎仅在Chrome和节点中

00:00:37.290 --> 00:00:47.640
引擎这是我的JavaScript引擎引擎

00:00:45.480 --> 00:00:52.910
给你好吧给你我闭嘴

00:00:47.640 --> 00:00:52.910
现在，为什么，因为我不了解

00:00:53.329 --> 00:00:58.379
其实

00:00:55.230 --> 00:01:00.510
现在你现在说话哦，好的，谢谢你

00:00:58.379 --> 00:01:03.120
所以我也从事v8的开发

00:01:00.510 --> 00:01:04.500
 DEA小组和是的苏联人实施

00:01:03.120 --> 00:01:05.970
 JavaScript功能以及网络

00:01:04.500 --> 00:01:07.680
组装功能是其中的一部分

00:01:05.970 --> 00:01:09.659
相同的引擎和镀铬的芯片

00:01:07.680 --> 00:01:12.060
和节点等其他事项

00:01:09.659 --> 00:01:15.030
电子是的，我喜欢他如何跳过他的

00:01:12.060 --> 00:01:16.830
是的，哦，是的，我叫Mattias，所以

00:01:15.030 --> 00:01:19.680
这是您的第一个iOS设备

00:01:16.830 --> 00:01:22.140
是的，我们很惊讶，是的，你们俩

00:01:19.680 --> 00:01:25.350
在您的第一个I / O讲话，那么

00:01:22.140 --> 00:01:26.520
驾驶室是的是的我是

00:01:25.350 --> 00:01:28.320
印象深刻，是的，你是怎么得到的

00:01:26.520 --> 00:01:30.840
很多人你在谈论现代

00:01:28.320 --> 00:01:32.430
 JavaScript功能就可以

00:01:30.840 --> 00:01:34.829
很多人正在使用javascript谁

00:01:32.430 --> 00:01:35.700
旅程还行，他们要补充什么

00:01:34.829 --> 00:01:37.530
 vbscript的东西

00:01:35.700 --> 00:01:38.880
我们会得到更多功能吗

00:01:37.530 --> 00:01:41.340
我们需要具有平价功能，是的，我

00:01:38.880 --> 00:01:42.360
就像赎回种族一样

00:01:41.340 --> 00:01:46.110
在Chrome中支持它

00:01:42.360 --> 00:01:48.030
不，这是唯一的IE，是的，甚至

00:01:46.110 --> 00:01:49.399
他们已经摆脱了，所以可以运行我们

00:01:48.030 --> 00:01:53.310
通过一些新功能

00:01:49.399 --> 00:01:54.479
好吧，那么一件大的新事我是什么

00:01:53.310 --> 00:01:58.560
最喜欢的东西真的很难

00:01:54.479 --> 00:02:00.420
问题也是不是吗，这取决于

00:01:58.560 --> 00:02:01.619
你的意思是什么，但像

00:02:00.420 --> 00:02:03.899
即将推出的功能

00:02:01.619 --> 00:02:05.070
更长的时间是模块，也许

00:02:03.899 --> 00:02:07.619
谈论这不是很酷

00:02:05.070 --> 00:02:09.479
模块，因为有是2015年我

00:02:07.619 --> 00:02:11.849
猜猜你是否看语法部分

00:02:09.479 --> 00:02:13.710
是的，但直到今天， 

00:02:11.849 --> 00:02:15.450
在所有主要的网络浏览器中都可用

00:02:13.710 --> 00:02:17.100
这非常令人兴奋，然后

00:02:15.450 --> 00:02:18.450
没有js'他们仍然在

00:02:17.100 --> 00:02:20.520
算出实际应该多少

00:02:18.450 --> 00:02:21.690
默认情况下本机工作，什么是

00:02:20.520 --> 00:02:23.400
那很好的状态

00:02:21.690 --> 00:02:25.470
我远离那整个事情

00:02:23.400 --> 00:02:28.110
社区似乎有点生气

00:02:25.470 --> 00:02:32.670
在内部，我是我的一种

00:02:28.110 --> 00:02:36.540
签出，但有点惊喜

00:02:32.670 --> 00:02:37.970
没有任何实验

00:02:36.540 --> 00:02:41.520
实现和标志后面的节点

00:02:37.970 --> 00:02:43.680
它仅支持文件模块

00:02:41.520 --> 00:02:45.270
我想用MJS扩展名

00:02:43.680 --> 00:02:47.550
那是很多人得到的地方

00:02:45.270 --> 00:02:49.290
有点沮丧，因为人们

00:02:47.550 --> 00:02:51.300
习惯于JavaScript的GS扩展

00:02:49.290 --> 00:02:52.620
但从某种程度上我认为这很有意义

00:02:51.300 --> 00:02:54.480
因为你需要使

00:02:52.620 --> 00:02:56.880
常规脚本和

00:02:54.480 --> 00:02:58.140
无论如何，因为它们被视为

00:02:56.880 --> 00:02:58.710
解释它们的不同方式

00:02:58.140 --> 00:03:00.930
不同的方法

00:02:58.710 --> 00:03:02.640
默认情况下，模块具有少量脚本，因此

00:03:00.930 --> 00:03:05.630
在那里你严格他们处于严格模式

00:03:02.640 --> 00:03:08.280
由Drupal撰写，还有其他区别

00:03:05.630 --> 00:03:09.870
运行的字符串具有导入和

00:03:08.280 --> 00:03:12.000
仅像静态变体一样导出

00:03:09.870 --> 00:03:14.210
在模块中工作而不是常规脚本，因此

00:03:12.000 --> 00:03:16.770
如果我在内部创建一个常量

00:03:14.210 --> 00:03:18.570
模块在全局范围内执行

00:03:16.770 --> 00:03:20.370
是差异之一

00:03:18.570 --> 00:03:21.720
我永远不会记住的东西

00:03:20.370 --> 00:03:23.850
进入全球范围是的，不是

00:03:21.720 --> 00:03:31.830
以我的驱动力进入全球范围

00:03:23.850 --> 00:03:33.270
不，是的，是的，你做杰克，但喜欢

00:03:31.830 --> 00:03:34.800
我们最近有一个关于

00:03:33.270 --> 00:03:36.330
类似的东西，因为你知道

00:03:34.800 --> 00:03:38.040
常量let之类的块作用域

00:03:36.330 --> 00:03:39.660
绑定，但同样的事情发生了

00:03:38.040 --> 00:03:41.790
那里的类​​声明

00:03:39.660 --> 00:03:44.130
也是一个词汇，这意味着如果你有

00:03:41.790 --> 00:03:45.360
在全球范围内的一类不是

00:03:44.130 --> 00:03:47.280
实际上是全球可用的

00:03:45.360 --> 00:03:49.080
在同一脚本文本中可用

00:03:47.280 --> 00:03:50.370
但它没有像

00:03:49.080 --> 00:03:53.550
您必须为其分配窗口对象

00:03:50.370 --> 00:03:55.740
是的，这就像我的意思是

00:03:53.550 --> 00:03:58.140
我们在v8中实现了我们重写了

00:03:55.740 --> 00:04:01.290
类声明作为类表达式

00:03:58.140 --> 00:04:04.320
在实验室变量中有赋值

00:04:01.290 --> 00:04:06.330
是的，都是语法

00:04:04.320 --> 00:04:08.100
糖是不是，然后你写

00:04:06.330 --> 00:04:10.950
只是在它的功能

00:04:08.100 --> 00:04:12.870
原型可能不好我从来没有

00:04:10.950 --> 00:04:14.670
失败了，在开始泡泡

00:04:12.870 --> 00:04:16.200
是的，我们称它为糖圈

00:04:14.670 --> 00:04:17.180
发生在所有JavaScript引擎中

00:04:16.200 --> 00:04:19.890
时间

00:04:17.180 --> 00:04:22.140
好，所以我们有了模块，我们还做了什么

00:04:19.890 --> 00:04:24.600
得到什么新的东西，我为此感到兴奋

00:04:22.140 --> 00:04:27.360
现在上课感觉就像是私人领域

00:04:24.600 --> 00:04:30.960
在课堂上

00:04:27.360 --> 00:04:32.759
这样就可以成长了

00:04:30.960 --> 00:04:35.129
酒壶来了

00:04:32.759 --> 00:04:37.199
这样实际上实现了这个，但是

00:04:35.129 --> 00:04:39.270
不是一个标志，它仍然是一个标志惊呼

00:04:37.199 --> 00:04:40.979
嗯，但那仍然是人们可以做到的

00:04:39.270 --> 00:04:43.199
玩，记得，所以很正常

00:04:40.979 --> 00:04:44.610
 JavaScript我将始终使用下划线

00:04:43.199 --> 00:04:45.900
想知道它是私人的

00:04:44.610 --> 00:04:48.150
约定，但语言不

00:04:45.900 --> 00:04:50.460
强制执行，是的，所以您仍然可以

00:04:48.150 --> 00:04:52.979
访问它，我们已经看到像人一样

00:04:50.460 --> 00:04:55.680
访问私有API来自于react和

00:04:52.979 --> 00:04:56.819
就像节点一样，所以有了私有字段

00:04:55.680 --> 00:04:58.469
没有那个问题

00:04:56.819 --> 00:05:01.289
所以不用下划线就可以

00:04:58.469 --> 00:05:03.960
只需使用创建的哈希符号

00:05:01.289 --> 00:05:06.599
属性或分配给属性，因此

00:05:03.960 --> 00:05:09.270
像这样的点散列的东西是和

00:05:06.599 --> 00:05:11.729
您只能在一个

00:05:09.270 --> 00:05:13.440
班级机构，所以在班级机构之外

00:05:11.729 --> 00:05:17.159
扔台伯河，它仍然这样做

00:05:13.440 --> 00:05:20.669
如果说如果我在设定的超时时间内工作

00:05:17.159 --> 00:05:22.979
我猜你在用箭头功能

00:05:20.669 --> 00:05:25.620
仍然可以在那里访问它，无需它

00:05:22.979 --> 00:05:27.419
如果设置的超时时间本身就很好

00:05:25.620 --> 00:05:31.039
在班级的身体里，然后确定

00:05:27.419 --> 00:05:33.270
好的，好的，所以有什么办法

00:05:31.039 --> 00:05:35.009
用反射或破坏该规则

00:05:33.270 --> 00:05:37.830
不，这是很难的私人哇

00:05:35.009 --> 00:05:39.419
好的，那很棒，而不仅仅是

00:05:37.830 --> 00:05:41.039
私人领域，只是上课

00:05:39.419 --> 00:05:42.839
字段本身是有用的

00:05:41.039 --> 00:05:44.580
因为现在您不再需要

00:05:42.839 --> 00:05:46.710
如果您只是想要构造函数

00:05:44.580 --> 00:05:48.419
初始化一些字段，您现在可以执行

00:05:46.710 --> 00:05:49.770
就像在构造函数之外一样

00:05:48.419 --> 00:05:53.669
经典问题的一部分只是为了

00:05:49.770 --> 00:05:56.009
就像在类中让X分号

00:05:53.669 --> 00:05:57.419
是的，我第一次见到你是因为

00:05:56.009 --> 00:05:59.129
你还是那个时候的那个

00:05:57.419 --> 00:06:01.440
致力于实现动态导入

00:05:59.129 --> 00:06:04.229
原子导入这个词就像

00:06:01.440 --> 00:06:06.289
自从以来最大的变化之一

00:06:04.229 --> 00:06:09.000
我们在考虑我的模块

00:06:06.289 --> 00:06:10.800
记住喜欢吧，嗯，不要

00:06:09.000 --> 00:06:13.139
冻结邮件列表，例如

00:06:10.800 --> 00:06:15.150
关于如何进行同步的争论

00:06:13.139 --> 00:06:17.460
脚本加载和所有不同的排序

00:06:15.150 --> 00:06:20.940
某种API是因为它们

00:06:17.460 --> 00:06:22.560
像免费的那些大的免费脚本

00:06:20.940 --> 00:06:24.629
加载我就像实验室里的东西

00:06:22.560 --> 00:06:26.430
需要，我每个人都不同意

00:06:24.629 --> 00:06:27.930
怎么做，就是这样

00:06:26.430 --> 00:06:29.370
很高兴看到语言出现

00:06:27.930 --> 00:06:30.659
以前不，那就像是

00:06:29.370 --> 00:06:32.819
导入您已经完成的操作，我们开始

00:06:30.659 --> 00:06:36.180
承诺现在问题已解决，等待导入

00:06:32.819 --> 00:06:38.310
蓬勃发展，所以我记得你什么时候

00:06:36.180 --> 00:06:40.660
加入我有点嫉妒好不

00:06:38.310 --> 00:06:43.030
当你后来加入它的时候

00:06:40.660 --> 00:06:46.000
一加入Google，您就可以

00:06:43.030 --> 00:06:48.730
邀请参加秘密幽灵的崩溃

00:06:46.000 --> 00:06:51.100
俱乐部哦，我什至不知道存在， 

00:06:48.730 --> 00:06:52.050
然后以后就像嘿，我知道所有

00:06:51.100 --> 00:06:55.180
沿

00:06:52.050 --> 00:06:57.310
哈哈哈，所以那是什么样子

00:06:55.180 --> 00:06:58.960
只是加入并被抛出

00:06:57.310 --> 00:07:01.000
进入那个世界，知道这主要是

00:06:58.960 --> 00:07:03.070
非常沮丧，因为我不会说话

00:07:01.000 --> 00:07:04.990
像包括我在内的任何人

00:07:03.070 --> 00:07:07.540
自己的经理或我的经理经理或

00:07:04.990 --> 00:07:08.890
我的22位经理中的任何人，但不喜欢II 

00:07:07.540 --> 00:07:10.480
表示我花了很多时间

00:07:08.890 --> 00:07:12.520
为此工作，并帮助我

00:07:10.480 --> 00:07:14.290
这个，但是我不能把它包括在我的

00:07:12.520 --> 00:07:20.380
我工作的每周报告

00:07:14.290 --> 00:07:26.110
所以我不得不以某种方式看起来富有成效

00:07:20.380 --> 00:07:27.930
是的，我只是无法提及

00:07:26.110 --> 00:07:30.190
但是就像是的，这有点不幸

00:07:27.930 --> 00:07:32.470
 v8被困在暴风雨中

00:07:30.190 --> 00:07:35.550
在那里，因为我是说我们是编译器

00:07:32.470 --> 00:07:38.950
对，我们动态地生成代码，所以

00:07:35.550 --> 00:07:41.650
让我们出问题了，是的，现在不

00:07:38.950 --> 00:07:43.330
至少在公开场合大喊大叫，我们一直

00:07:41.650 --> 00:07:45.310
我的意思是缓解几个月

00:07:43.330 --> 00:07:47.410
现在甚至在它公开之前

00:07:45.310 --> 00:07:48.910
是的，我们有这篇维基文章

00:07:47.410 --> 00:07:50.950
记录所有这些缓解措施以及如何

00:07:48.910 --> 00:07:52.540
人们可以启用它们，以及您是否

00:07:50.950 --> 00:07:54.790
想要这样做真的取决于种类

00:07:52.540 --> 00:07:55.930
嵌入的人很多

00:07:54.790 --> 00:07:58.210
忘记大部分时间都必须在这里

00:07:55.930 --> 00:08:01.030
开发人员这些东西不相关

00:07:58.210 --> 00:08:03.810
例如，因为嵌入器是铬或

00:08:01.030 --> 00:08:05.650
节点完全像一些我猜

00:08:03.810 --> 00:08:07.990
电子所有这些东西像

00:08:05.650 --> 00:08:09.730
开发人员，是要担心的事情

00:08:07.990 --> 00:08:11.680
是的，所以这些主机环境

00:08:09.730 --> 00:08:13.870
必须决定他们是否

00:08:11.680 --> 00:08:15.460
基本上运行像

00:08:13.870 --> 00:08:17.230
您访问网站的网络，您

00:08:15.460 --> 00:08:18.970
运行随机JavaScript吧

00:08:17.230 --> 00:08:20.620
从任何地方可能是

00:08:18.970 --> 00:08:22.240
通过第三方包括

00:08:20.620 --> 00:08:23.620
您不知道发生了什么的网站

00:08:22.240 --> 00:08:24.970
那里甚至不是那么稀有

00:08:23.620 --> 00:08:26.710
是的，它一直在发生

00:08:24.970 --> 00:08:28.180
一点也不罕见，那是

00:08:26.710 --> 00:08:30.070
与安全性完全不同

00:08:28.180 --> 00:08:31.870
例如，nodejs具有的模型

00:08:30.070 --> 00:08:33.550
想法是您正在运行代码

00:08:31.870 --> 00:08:35.110
就像运行Web服务器一样值得信任

00:08:33.550 --> 00:08:36.520
你写的，确定我的意思是你

00:08:35.110 --> 00:08:38.410
包括一些您可以使用的NPM模块

00:08:36.520 --> 00:08:40.000
已安装，但想法是您信任

00:08:38.410 --> 00:08:43.120
这些模块，否则你不是亚当

00:08:40.000 --> 00:08:45.310
作为依赖项，因此通常可以运行

00:08:43.120 --> 00:08:46.750
网络上的受信任代码

00:08:45.310 --> 00:08:49.030
这是狂野的西部，完全是为了

00:08:46.750 --> 00:08:51.010
所有这些都完全不同

00:08:49.030 --> 00:08:52.570
安全模型，我们现在有一个标志

00:08:51.010 --> 00:08:54.430
允许您在

00:08:52.570 --> 00:08:56.350
两种模式

00:08:54.430 --> 00:08:58.690
因为有一些性能损失

00:08:56.350 --> 00:09:01.300
如果您使用它，这就是原因

00:08:58.690 --> 00:09:03.480
我看过一些图，但是一旦我们看到了

00:09:01.300 --> 00:09:05.200
服务器集成了Spector和

00:09:03.480 --> 00:09:09.660
融化缓解非常迅速

00:09:05.200 --> 00:09:11.470
显然像服务器，然后是或

00:09:09.660 --> 00:09:14.580
取决于正确的访问权限

00:09:11.470 --> 00:09:16.510
性能下降，时间上升，是的

00:09:14.580 --> 00:09:18.700
是的，这有点难过，但是就像

00:09:16.510 --> 00:09:19.870
最终用户的安全性很大

00:09:18.700 --> 00:09:22.589
比任何一种都重要

00:09:19.870 --> 00:09:28.410
性能指标，我要说的是

00:09:22.589 --> 00:09:28.410
是的，真的答案是，所以

00:09:28.529 --> 00:09:34.660
就像我们一样，你们两个都在这里

00:09:31.500 --> 00:09:37.060
我们在JavaScript中有一个建议

00:09:34.660 --> 00:09:39.399
我们非常高兴， 

00:09:37.060 --> 00:09:42.580
而我们都为此感到兴奋

00:09:39.399 --> 00:09:45.490
可是变成了一张脸

00:09:42.580 --> 00:09:49.080
比赛结束后左手边

00:09:45.490 --> 00:09:57.760
是的，就像双重：我就像管道

00:09:49.080 --> 00:09:59.440
没关系，看它能解决什么

00:09:57.760 --> 00:10:02.950
非常复杂，但我明白了

00:09:59.440 --> 00:10:04.720
解决，但是我想要能力哦

00:10:02.950 --> 00:10:07.570
关于此功能的另一段视频

00:10:04.720 --> 00:10:10.180
就像将被调用的导入方法

00:10:07.570 --> 00:10:11.410
就像他们上课一样

00:10:10.180 --> 00:10:13.209
你会得到那棵摇动一切的树

00:10:11.410 --> 00:10:15.390
是免费的，这是

00:10:13.209 --> 00:10:20.760
绑定运算符使我们能够做到这一点，并且

00:10:15.390 --> 00:10:20.760
 tc39说这是一个或另一个原因

00:10:22.990 --> 00:10:27.310
 [笑声] 

00:10:24.750 --> 00:10:30.220
您是否知道两者都知道

00:10:27.310 --> 00:10:32.200
这些建议中，是的， 

00:10:30.220 --> 00:10:33.670
实施者您有偏好吗

00:10:32.200 --> 00:10:36.370
就像有什么地方你在想

00:10:33.670 --> 00:10:38.050
这是愚蠢的实现

00:10:36.370 --> 00:10:39.250
比较容易，还是您认为这还有更多

00:10:38.050 --> 00:10:40.510
还有其他的副作用

00:10:39.250 --> 00:10:42.579
就目前所知

00:10:40.510 --> 00:10:44.350
实施方面，我还好

00:10:42.579 --> 00:10:48.779
两者都很容易实现

00:10:44.350 --> 00:10:50.860
所以真的很像我们的外交官

00:10:48.779 --> 00:10:52.959
真正改变了人体工程学

00:10:50.860 --> 00:10:55.959
语言，它很复杂，因为我们

00:10:52.959 --> 00:10:57.760
添加更多像语法一样，所以

00:10:55.959 --> 00:11:00.040
就像我们喜欢的语法预算

00:10:57.760 --> 00:11:02.170
不断意识到，我们想超越

00:11:00.040 --> 00:11:04.320
并为我们的语言添加更多信息

00:11:02.170 --> 00:11:08.550
删除语法以释放预算

00:11:04.320 --> 00:11:08.550
真的，我们真的需要吗

00:11:08.959 --> 00:11:16.470
人们不希望他们分号

00:11:13.740 --> 00:11:21.319
如果我受到束缚，你几乎可以成为

00:11:16.470 --> 00:11:21.319
通过使用您的网站实现了我们-因此，让我们

00:11:22.399 --> 00:11:26.490
我们是否只需要摆脱一个

00:11:24.749 --> 00:11:27.870
运算符使绑定运算符正常

00:11:26.490 --> 00:11:29.249
这两个字符对两个

00:11:27.870 --> 00:11:30.360
字符，所以我们摆脱了分号

00:11:29.249 --> 00:11:33.870
还有我们去

00:11:30.360 --> 00:11:35.519
工作做好了哦，这是

00:11:33.870 --> 00:11:36.889
认真是因为我喜欢

00:11:35.519 --> 00:11:39.660
绑定之类的东西并不是真的

00:11:36.889 --> 00:11:41.670
我想我会尽力而为

00:11:39.660 --> 00:11:44.309
我们的底线就像绑定

00:11:41.670 --> 00:11:45.959
减少侵入性变化，因为它只是

00:11:44.309 --> 00:11:47.879
那只是它弹出的糖

00:11:45.959 --> 00:11:50.819
糖超过绑定时间

00:11:47.879 --> 00:11:54.350
具有不同形式的管道

00:11:50.819 --> 00:11:56.819
在提议中，拉姆做了一些魔术， 

00:11:54.350 --> 00:11:58.319
甚至还有特别聪明

00:11:56.819 --> 00:12:00.059
像问号一样的版本

00:11:58.319 --> 00:12:01.589
那是管道中的一个问题

00:12:00.059 --> 00:12:03.149
你想要位置参数，你

00:12:01.589 --> 00:12:05.069
想说好吧，我想填写这个

00:12:03.149 --> 00:12:06.959
当我通过它传递和

00:12:05.069 --> 00:12:08.040
那是每个人都应该染发的地方

00:12:06.959 --> 00:12:09.600
以便便表情符号代替

00:12:08.040 --> 00:12:11.639
问号，并将使代码

00:12:09.600 --> 00:12:15.629
不适合你，我会同意的

00:12:11.639 --> 00:12:16.980
好，从14晚开始

00:12:15.629 --> 00:12:20.459
就像你知道青少年的烦恼

00:12:16.980 --> 00:12:24.360
今晚是如此，我想你可能

00:12:20.459 --> 00:12:25.709
是的，我一直在用，但我确实认为

00:12:24.360 --> 00:12:29.009
就像骑士和堡垒

00:12:25.709 --> 00:12:30.959
在堡垒里待了14个晚上，我是

00:12:29.009 --> 00:12:33.800
确保实际上更有趣的定义

00:12:30.959 --> 00:12:33.800
不只是14晚

