WEBVTT
Kind: captions
Language: en

00:00:00.500 --> 00:00:03.936
[MUSIC PLAYING]

00:00:05.420 --> 00:00:08.100
With Chrome 42,
we're introducing

00:00:08.100 --> 00:00:10.640
a couple of features
that make it easier

00:00:10.640 --> 00:00:12.810
to re-engage with your users.

00:00:12.810 --> 00:00:14.740
So let's take a look.

00:00:14.740 --> 00:00:19.760
The Push API allows you to send
timely updates from your site

00:00:19.760 --> 00:00:22.770
to your users who have
granted you permission.

00:00:22.770 --> 00:00:25.710
This gives you a new
way to re-engage users

00:00:25.710 --> 00:00:28.970
with personalized
and timely content.

00:00:28.970 --> 00:00:31.220
Chrome uses Google
Cloud Messaging

00:00:31.220 --> 00:00:34.390
to wake up the service
worker and run JavaScript

00:00:34.390 --> 00:00:38.350
even if a user has navigated
away from the page.

00:00:38.350 --> 00:00:42.300
In this release, you must show
a user-visible notification

00:00:42.300 --> 00:00:44.680
with the notification API.

00:00:44.680 --> 00:00:47.660
Each notification includes
a site settings button--

00:00:47.660 --> 00:00:52.230
allowing users to easily disable
notifications for a site.

00:00:52.230 --> 00:00:54.850
App-installed banners
allow your users

00:00:54.850 --> 00:00:58.400
to quickly and seamlessly add
your web app to their home

00:00:58.400 --> 00:01:01.190
screen with just a single tap.

00:01:01.190 --> 00:01:03.830
Chrome will automatically
show the banner

00:01:03.830 --> 00:01:06.100
when certain criteria are met.

00:01:06.100 --> 00:01:08.700
The criteria will
evolve over time

00:01:08.700 --> 00:01:12.200
based on feedback from
users and developers alike.

00:01:12.200 --> 00:01:16.460
But today, they are a web app
manifest file that contains

00:01:16.460 --> 00:01:21.340
at least a short name and
a 144-by-144-pixel icon,

00:01:21.340 --> 00:01:27.340
a service worker, content that's
served over HTTPS, and finally,

00:01:27.340 --> 00:01:32.100
the user has visited the site on
at least two separate days over

00:01:32.100 --> 00:01:33.660
a period of two weeks.

00:01:33.660 --> 00:01:35.890
With these new
engagement features,

00:01:35.890 --> 00:01:40.100
we also wanted to make XHR-like
transfers a little bit more

00:01:40.100 --> 00:01:41.430
pleasant.

00:01:41.430 --> 00:01:45.640
The Fetch API is now available
in the window context

00:01:45.640 --> 00:01:49.950
and also for both shared
and dedicated workers.

00:01:49.950 --> 00:01:55.420
Like XmlHttpRequest, Fetch is
an API for fetching resources

00:01:55.420 --> 00:01:57.150
from a remote server.

00:01:57.150 --> 00:02:00.930
Fetch has a cleaner API and
uses Promises to eliminate

00:02:00.930 --> 00:02:03.720
the "joys" of callbacks.

00:02:03.720 --> 00:02:06.320
For example, a
traditional XHR needs

00:02:06.320 --> 00:02:09.850
calls to both open and
send, plus callbacks

00:02:09.850 --> 00:02:12.810
for onload and on-error events.

00:02:12.810 --> 00:02:17.200
But with Fetch and Promises,
this becomes much easier.

00:02:17.200 --> 00:02:19.250
These are just stuff
view of the features

00:02:19.250 --> 00:02:21.910
now available to
everyone in Chrome.

00:02:21.910 --> 00:02:24.840
To learn more, check
out these links.

00:02:24.840 --> 00:02:28.190
[MUSIC PLAYING]

