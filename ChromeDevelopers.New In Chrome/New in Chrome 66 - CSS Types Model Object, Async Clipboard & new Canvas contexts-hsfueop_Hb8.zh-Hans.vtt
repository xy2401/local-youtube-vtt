WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.030 --> 00:00:07.109
 CSS操作变得更容易

00:00:03.659 --> 00:00:09.240
新的CSS类型模型对象访问

00:00:07.109 --> 00:00:11.910
剪贴板现在是异步的， 

00:00:09.240 --> 00:00:14.340
有一个新的渲染上下文

00:00:11.910 --> 00:00:15.570
我是Pete LePage的画布元素

00:00:14.340 --> 00:00:18.770
潜入水中，看看有什么新功能

00:00:15.570 --> 00:00:22.830
 chrome 66开发人员

00:00:18.770 --> 00:00:25.140
如果您曾经更新过CSS属性

00:00:22.830 --> 00:00:27.420
通过JavaScript，您已经使用了CSS 

00:00:25.140 --> 00:00:29.840
对象模型，但它返回所有内容

00:00:27.420 --> 00:00:32.700
作为动画不透明度的字符串

00:00:29.840 --> 00:00:34.890
属性，我必须将字符串转换为

00:00:32.700 --> 00:00:37.559
一个数字，然后增加值，然后

00:00:34.890 --> 00:00:41.430
不完全应用我的更改

00:00:37.559 --> 00:00:44.160
新的CSS类型对象模型CSS 

00:00:41.430 --> 00:00:46.590
值作为类型化的JavaScript公开

00:00:44.160 --> 00:00:48.690
消除很多类型的对象

00:00:46.590 --> 00:00:51.899
操纵并提供更多

00:00:48.690 --> 00:00:54.539
使用CSS而不是CSS的理智方式

00:00:51.899 --> 00:00:57.210
使用元素样式访问

00:00:54.539 --> 00:01:01.020
通过属性样式图样式

00:00:57.210 --> 00:01:03.239
属性或样式图，他们返回一个图

00:01:01.020 --> 00:01:06.750
像是真的很容易

00:01:03.239 --> 00:01:09.119
与旧CSS相比，读取或更新

00:01:06.750 --> 00:01:11.909
对象模型的早期基准测试表明

00:01:09.119 --> 00:01:13.710
每位使用者的作业量提高30％ 

00:01:11.909 --> 00:01:15.659
第二点就是

00:01:13.710 --> 00:01:18.780
当你做的时候特别重要

00:01:15.659 --> 00:01:20.909
 JavaScript动画也有助于

00:01:18.780 --> 00:01:23.670
消除因忘记而导致的错误

00:01:20.909 --> 00:01:26.400
将值从字符串转换为数字

00:01:23.670 --> 00:01:29.040
它会自动处理舍入

00:01:26.400 --> 00:01:30.990
固定价值，还有一些

00:01:29.040 --> 00:01:33.860
相当整洁的新方法

00:01:30.990 --> 00:01:36.630
单位转换算术和相等

00:01:33.860 --> 00:01:39.270
 eric的帖子很棒，还提供了一些演示

00:01:36.630 --> 00:01:41.840
和他的解释器中的示例链接

00:01:39.270 --> 00:01:44.009
在下面的描述中

00:01:41.840 --> 00:01:46.470
同步复制和粘贴使用

00:01:44.009 --> 00:01:49.140
 document exec命令可以用于

00:01:46.470 --> 00:01:50.640
一小段文字，但还有其他内容

00:01:49.140 --> 00:01:52.860
很有可能

00:01:50.640 --> 00:01:54.930
同步性质将阻止页面

00:01:52.860 --> 00:01:57.000
给用户带来不好的体验

00:01:54.930 --> 00:02:01.020
和之间的权限模型

00:01:57.000 --> 00:02:03.299
浏览器不一致的新异步

00:02:01.020 --> 00:02:06.119
剪贴板API可以替代

00:02:03.299 --> 00:02:08.220
异步工作并与

00:02:06.119 --> 00:02:11.340
提供更好的权限API 

00:02:08.220 --> 00:02:13.680
用户体验标签可以复制

00:02:11.340 --> 00:02:16.530
通过调用写入文本到剪贴板

00:02:13.680 --> 00:02:19.260
由于API是异步的， 

00:02:16.530 --> 00:02:21.569
文本函数返回一个承诺

00:02:19.260 --> 00:02:23.970
将被解决或拒绝，具体取决于

00:02:21.569 --> 00:02:25.189
关于我们是否能够成功

00:02:23.970 --> 00:02:27.959
复制文字

00:02:25.189 --> 00:02:30.049
类似地，可以从

00:02:27.959 --> 00:02:32.489
剪贴板通过调用读取文本和

00:02:30.049 --> 00:02:35.489
等待返回的承诺

00:02:32.489 --> 00:02:37.980
用文本解决签出杰森的

00:02:35.489 --> 00:02:40.260
解释器中的帖子和演示链接

00:02:37.980 --> 00:02:43.069
在描述中他也有很棒的

00:02:40.260 --> 00:02:45.829
使用异步功能的一组示例

00:02:43.069 --> 00:02:48.959
 canvas元素可让您进行操作

00:02:45.829 --> 00:02:51.239
您可以绘制像素级别的图形

00:02:48.959 --> 00:02:54.120
图形甚至可以操作照片

00:02:51.239 --> 00:02:56.310
实时视频处理，但除非

00:02:54.120 --> 00:02:58.769
你从一块空白的画布开始

00:02:56.310 --> 00:03:01.170
需要一种在其上渲染图像的方法

00:02:58.769 --> 00:03:03.810
从历史上讲，这意味着

00:03:01.170 --> 00:03:07.019
创建一个图像标签，然后渲染其

00:03:03.810 --> 00:03:09.000
内容不幸的是在画布上

00:03:07.019 --> 00:03:11.689
这意味着浏览器需要存储

00:03:09.000 --> 00:03:14.629
内存中图像的多个副本

00:03:11.689 --> 00:03:17.129
从chrome 66开始，有一个新的

00:03:14.629 --> 00:03:19.739
异步渲染上下文

00:03:17.129 --> 00:03:22.620
精简显示图像

00:03:19.739 --> 00:03:24.810
现在可以渲染更多位图对象

00:03:22.620 --> 00:03:26.910
高效而少用

00:03:24.810 --> 00:03:29.819
异步工作并避免

00:03:26.910 --> 00:03:32.639
我只需要调用内存重复

00:03:29.819 --> 00:03:35.970
创建图像位图并将其交给图像

00:03:32.639 --> 00:03:38.760
 Blob创建图像，然后抓取

00:03:35.970 --> 00:03:40.769
位图的预渲染上下文

00:03:38.760 --> 00:03:44.060
画布并在和中传输图像

00:03:40.769 --> 00:03:46.560
完成创建并渲染图像

00:03:44.060 --> 00:03:48.810
这些只是其中的一些变化

00:03:46.560 --> 00:03:51.629
开发人员使用chrome 66 

00:03:48.810 --> 00:03:54.019
还有更多的文本区域，然后选择

00:03:51.629 --> 00:03:56.970
现在支持自动完成属性

00:03:54.019 --> 00:04:00.090
设置自动利用表格

00:03:56.970 --> 00:04:02.340
元素将适用于任何子窗体

00:04:00.090 --> 00:04:04.440
现场改善与

00:04:02.340 --> 00:04:07.680
汽车之旅的实施

00:04:04.440 --> 00:04:10.139
大写并修剪开始和修剪以及

00:04:07.680 --> 00:04:12.799
现在可以作为基于标准的

00:04:10.139 --> 00:04:15.569
从字符串修剪空白的方法

00:04:12.799 --> 00:04:17.609
所有详细信息，包括指向

00:04:15.569 --> 00:04:19.769
 docs规格以及更多内容

00:04:17.609 --> 00:04:21.359
以下说明，请务必检查

00:04:19.769 --> 00:04:23.520
淘汰最新的最新和Chrome开发工具

00:04:21.359 --> 00:04:25.770
视频，了解开发工具的新功能

00:04:23.520 --> 00:04:27.420
如果您对渐进式网络感兴趣

00:04:25.770 --> 00:04:30.300
应用检查PW 

00:04:27.420 --> 00:04:32.040
 Wave路演视频系列，然后单击

00:04:30.300 --> 00:04:34.020
订阅按钮，您将获得一个

00:04:32.040 --> 00:04:36.630
每当我们启动一个电子邮件通知

00:04:34.020 --> 00:04:38.880
新视频，我叫Pete LePage， 

00:04:36.630 --> 00:04:42.560
 chrome 67发布了，我会在这里

00:04:38.880 --> 00:04:42.560
告诉您Chrome的新功能

