WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.778
[MUSIC PLAYING]

00:00:04.002 --> 00:00:06.210
ELLIOTT MARQUEZ: Hey there,
Polycasters, I'm Elliott.

00:00:06.210 --> 00:00:07.584
Welcome back to
our series on how

00:00:07.584 --> 00:00:09.600
to build an element
in Polymer 2.

00:00:09.600 --> 00:00:11.910
Last time, we used pre-made
elements and styling

00:00:11.910 --> 00:00:14.740
to make our element look
great, but the checklist

00:00:14.740 --> 00:00:16.260
doesn't really work yet.

00:00:16.260 --> 00:00:19.410
If we take a look, pressing
the Add Task button

00:00:19.410 --> 00:00:21.430
doesn't really add tasks.

00:00:21.430 --> 00:00:23.860
So let's make that work.

00:00:23.860 --> 00:00:25.470
So when we click
the Paper button,

00:00:25.470 --> 00:00:27.300
we want something to happen.

00:00:27.300 --> 00:00:31.680
And what you want to do
is add a click listener.

00:00:31.680 --> 00:00:34.360
So Polymer has a
nice way to do this.

00:00:34.360 --> 00:00:36.960
If you look again in
your dependencies,

00:00:36.960 --> 00:00:42.380
go into the Polymer
directory, back into Lib,

00:00:42.380 --> 00:00:44.450
but in the Utilities
section, you'll

00:00:44.450 --> 00:00:47.270
see something called
gestures.html.

00:00:47.270 --> 00:00:49.670
Gestures.html allows you
to add a bunch of listeners

00:00:49.670 --> 00:00:53.277
to user actions, like tapping,
clicking, or dragging,

00:00:53.277 --> 00:00:55.360
and in this case, we want
to add a click listener.

00:00:55.360 --> 00:00:57.170
So let's import that.

00:00:57.170 --> 00:01:02.780
So Polymer, Polymer Directory
in the Lib, but it's in Utils

00:01:02.780 --> 00:01:08.330
and it's called gestures.html.

00:01:08.330 --> 00:01:09.080
Cool.

00:01:09.080 --> 00:01:10.850
Gestures.html allows
us to add listeners

00:01:10.850 --> 00:01:12.230
to the events like this.

00:01:12.230 --> 00:01:16.490
You'd type in "on-" and then
the type of event that is

00:01:16.490 --> 00:01:17.100
happening.

00:01:17.100 --> 00:01:18.920
So on-click.

00:01:18.920 --> 00:01:21.620
And on each click, we're going
to call the method addTask.

00:01:24.241 --> 00:01:24.740
All right.

00:01:24.740 --> 00:01:27.830
But now we have
to create addTask.

00:01:27.830 --> 00:01:32.090
So here, we'll go into our
Polymer Checklist class

00:01:32.090 --> 00:01:35.330
and create a addTask method.

00:01:37.880 --> 00:01:38.380
All right.

00:01:38.380 --> 00:01:40.510
So in the addTask method,
what we're going to do

00:01:40.510 --> 00:01:43.530
is add to our task list.

00:01:43.530 --> 00:01:46.840
Our task list, currently, is
one, two, three, four, five.

00:01:46.840 --> 00:01:49.700
We'll make that empty for now.

00:01:49.700 --> 00:01:52.020
And let's define a new task.

00:01:52.020 --> 00:01:57.610
So const new task.

00:01:57.610 --> 00:02:00.700
And for now, we'll make
it an empty object.

00:02:00.700 --> 00:02:04.870
And then we will add
that to the task list.

00:02:04.870 --> 00:02:06.880
So in normal JavaScript,
you would simply just

00:02:06.880 --> 00:02:09.380
push onto a variable.

00:02:09.380 --> 00:02:10.990
You would do that by doing this.

00:02:10.990 --> 00:02:13.750
You'd select the tasks
list, which in Polymer, you

00:02:13.750 --> 00:02:16.600
can select a property
by doing this dot, then

00:02:16.600 --> 00:02:18.740
the name of the property.

00:02:18.740 --> 00:02:20.860
So this.tasks.

00:02:20.860 --> 00:02:24.040
And then, in JavaScript, you
would just do dot push and then

00:02:24.040 --> 00:02:24.730
the new value.

00:02:24.730 --> 00:02:26.117
A new task.

00:02:26.117 --> 00:02:28.450
The problem with this is the
Polymer data binding system

00:02:28.450 --> 00:02:29.890
doesn't necessarily
know when you

00:02:29.890 --> 00:02:31.460
want to update the template.

00:02:31.460 --> 00:02:34.100
So here, we're going to do
something a bit different.

00:02:34.100 --> 00:02:36.370
We're going to call the
this.push method, which

00:02:36.370 --> 00:02:38.830
is defined by
Polymer, then give it

00:02:38.830 --> 00:02:41.560
the name of the property
that you want to push to,

00:02:41.560 --> 00:02:46.660
which is Tasks, and then
push the new task value.

00:02:46.660 --> 00:02:49.300
Now let's define what
goes inside of our task.

00:02:49.300 --> 00:02:51.430
So each task has about
two things in it.

00:02:51.430 --> 00:02:53.920
It has a checkbox and an input.

00:02:53.920 --> 00:02:57.370
And we're going to need two
properties to define this.

00:02:57.370 --> 00:03:01.300
So let's say the
name of the task.

00:03:01.300 --> 00:03:03.920
For now, we'll leave
that as an empty string.

00:03:03.920 --> 00:03:06.230
And then whether it's
completed or not.

00:03:06.230 --> 00:03:10.035
And we can do that
with a completed value.

00:03:10.035 --> 00:03:11.410
And for now, we'll
say it's false

00:03:11.410 --> 00:03:12.868
because you're
creating a new task,

00:03:12.868 --> 00:03:16.220
so I don't think it's
going to be finished.

00:03:16.220 --> 00:03:19.920
Let's go refresh and
let's add a few tasks.

00:03:19.920 --> 00:03:20.420
Oh.

00:03:20.420 --> 00:03:21.230
All right.

00:03:21.230 --> 00:03:22.670
We're creating tasks now.

00:03:22.670 --> 00:03:24.795
We just have something
wrong with our data binding.

00:03:24.795 --> 00:03:26.820
Let's go change that right now.

00:03:26.820 --> 00:03:29.320
So now let's go back
to our dom-repeat.

00:03:29.320 --> 00:03:31.510
In the dom-repeat, you'll
see that we're actually

00:03:31.510 --> 00:03:34.180
just passing in the task
to the paper input, which

00:03:34.180 --> 00:03:36.340
is now an object.

00:03:36.340 --> 00:03:39.100
So actually, we want to
pass in the name into here--

00:03:39.100 --> 00:03:42.472
task.name-- and then
in the paper checkbox,

00:03:42.472 --> 00:03:44.680
we want to see if it's checked.

00:03:44.680 --> 00:03:47.980
And to that, we want to data
bind whether it's completed.

00:03:47.980 --> 00:03:50.590
Task.completed.

00:03:50.590 --> 00:03:52.170
I can't type.

00:03:52.170 --> 00:03:52.890
Completed.

00:03:55.490 --> 00:03:57.030
Let's go refresh.

00:03:57.030 --> 00:03:57.530
All right.

00:03:57.530 --> 00:03:59.280
That's starting to
look a bit better.

00:03:59.280 --> 00:04:02.510
Let's see if our data
binding is actually working.

00:04:02.510 --> 00:04:05.470
So we'll go down here and
we'll change Completed to True

00:04:05.470 --> 00:04:11.500
and we'll add a test name.

00:04:14.330 --> 00:04:15.050
Refresh.

00:04:15.050 --> 00:04:16.310
Add Task.

00:04:16.310 --> 00:04:17.060
And there you go.

00:04:17.060 --> 00:04:20.630
It's checked and the
value's in there.

00:04:20.630 --> 00:04:21.130
All right.

00:04:21.130 --> 00:04:24.310
So now let's go reset this
back to an empty string.

00:04:24.310 --> 00:04:26.100
Set this to False.

00:04:26.100 --> 00:04:28.080
And that's good.

00:04:28.080 --> 00:04:32.330
So now that we have this
going, when you check things,

00:04:32.330 --> 00:04:35.124
it doesn't seem to go into
the Completed section.

00:04:35.124 --> 00:04:36.540
So let's go change
that right now.

00:04:39.200 --> 00:04:43.120
So what we want to do
is we want to first

00:04:43.120 --> 00:04:46.360
get rid of the things that
are in the To-Do section

00:04:46.360 --> 00:04:47.990
when they are checked.

00:04:47.990 --> 00:04:49.630
So if you mouse over
dom-repeat, you'll

00:04:49.630 --> 00:04:51.740
see a bit more documentation,
and at the bottom,

00:04:51.740 --> 00:04:55.140
you'll see something about
filters and observing.

00:04:55.140 --> 00:04:59.240
So let's type in
the Filter property.

00:04:59.240 --> 00:05:01.210
And you'll see that the
Polymer IDE tells you

00:05:01.210 --> 00:05:05.200
that it takes a function
and this function

00:05:05.200 --> 00:05:07.780
is used to filter an
array that is passed in,

00:05:07.780 --> 00:05:11.620
the array being the Tasks array.

00:05:11.620 --> 00:05:16.810
So we'll filter with a function
called Is Not Completed.

00:05:20.670 --> 00:05:23.520
And then we'll define the
Is Not Completed function--

00:05:23.520 --> 00:05:25.750
is not completed--

00:05:29.580 --> 00:05:31.225
and it will pass in a task.

00:05:33.970 --> 00:05:36.000
The way the dom-repeat
filter function works

00:05:36.000 --> 00:05:38.662
is the same way as an
array.filter works.

00:05:38.662 --> 00:05:40.120
You pass in a
function that returns

00:05:40.120 --> 00:05:42.790
a Boolean, true or
false, that, if true,

00:05:42.790 --> 00:05:45.050
will include the current
task in the array,

00:05:45.050 --> 00:05:47.830
and if false, will exclude it.

00:05:47.830 --> 00:05:49.720
So in the Is Not
Completed function,

00:05:49.720 --> 00:05:56.140
we will return
NotTask.Completed,

00:05:56.140 --> 00:05:59.615
so it will be the
opposite of completed.

00:05:59.615 --> 00:06:01.240
And then one more
thing is that we have

00:06:01.240 --> 00:06:03.400
to add the Observe property.

00:06:03.400 --> 00:06:06.100
The Observe property
is a string that

00:06:06.100 --> 00:06:07.750
tells the data
binding system when

00:06:07.750 --> 00:06:10.240
to recalculate this filter.

00:06:10.240 --> 00:06:15.220
And we want to recalculate this
filter whenever task.completed

00:06:15.220 --> 00:06:17.590
is changed.

00:06:17.590 --> 00:06:21.620
So we'll save that,
go over, refresh.

00:06:21.620 --> 00:06:23.270
We'll add a few tasks.

00:06:23.270 --> 00:06:29.565
We'll call this Hello, Polycast,
and we'll leave that one empty.

00:06:29.565 --> 00:06:32.010
And if you check
one, it disappears.

00:06:32.010 --> 00:06:33.510
It's getting filtered out.

00:06:33.510 --> 00:06:34.080
Cool.

00:06:34.080 --> 00:06:35.264
Only one step left.

00:06:35.264 --> 00:06:36.680
Add them to the
Completed section.

00:06:40.030 --> 00:06:43.440
So here we have our To-Do,
the Add Completed stuff,

00:06:43.440 --> 00:06:46.260
which as you saw earlier,
looks very much the same

00:06:46.260 --> 00:06:49.080
as it did to the To-Do section.

00:06:49.080 --> 00:06:54.310
So we'll just copy this,
paste it right over,

00:06:54.310 --> 00:06:58.170
and fix the tabbing.

00:06:58.170 --> 00:06:58.670
All right.

00:06:58.670 --> 00:07:01.640
So the Completed section is
basically the exact opposite

00:07:01.640 --> 00:07:04.620
of the To-Do section.

00:07:04.620 --> 00:07:08.830
So what we have to do
is remove this filter

00:07:08.830 --> 00:07:13.526
and make it Is Completed
rather than Is Not Completed.

00:07:13.526 --> 00:07:15.640
So here, we'll define
it, Is Completed.

00:07:15.640 --> 00:07:18.970
Takes a new task, and then
it just returns the opposite

00:07:18.970 --> 00:07:22.180
of Is Not Completed.

00:07:22.180 --> 00:07:24.610
So task return, task.completed.

00:07:27.800 --> 00:07:29.180
Save that.

00:07:29.180 --> 00:07:32.010
Give that a refresh.

00:07:32.010 --> 00:07:33.750
Add a few things.

00:07:33.750 --> 00:07:36.960
Hello, world.

00:07:36.960 --> 00:07:37.890
Click that.

00:07:37.890 --> 00:07:39.150
And there you go.

00:07:39.150 --> 00:07:40.990
We have a functioning checklist.

00:07:40.990 --> 00:07:41.550
All right.

00:07:41.550 --> 00:07:44.260
Now how do you actually
use this checklist element?

00:07:44.260 --> 00:07:49.060
So if you look back
in our demo directory,

00:07:49.060 --> 00:07:52.510
you'll see that we have a
Polycast checklist-- an element

00:07:52.510 --> 00:07:54.080
that we just defined.

00:07:54.080 --> 00:07:56.510
So you can actually just
copy this multiple times.

00:07:56.510 --> 00:07:58.380
You can make as
many as you want.

00:07:58.380 --> 00:08:01.600
Let's make a bunch of checklists
because we're such busy people.

00:08:01.600 --> 00:08:03.290
And here you go.

00:08:03.290 --> 00:08:05.947
That's a lot of different
stuff on the page.

00:08:05.947 --> 00:08:07.030
Let's scale it back a bit.

00:08:09.960 --> 00:08:11.810
Let's add a quick title to this.

00:08:11.810 --> 00:08:18.940
So we'll add an H2 title
and we'll call this Name,

00:08:18.940 --> 00:08:21.270
and this will be the
name of the checklist.

00:08:21.270 --> 00:08:23.910
So creating a property
should be pretty quick.

00:08:23.910 --> 00:08:25.710
Name.

00:08:25.710 --> 00:08:28.020
Type is a string.

00:08:28.020 --> 00:08:31.140
And the value-- this will
be the default value.

00:08:31.140 --> 00:08:35.085
We'll call this To-Do List.

00:08:38.289 --> 00:08:39.014
Cool.

00:08:39.014 --> 00:08:40.280
Let's refresh.

00:08:40.280 --> 00:08:41.840
Now we have To-Do List up here.

00:08:41.840 --> 00:08:43.740
It's data bound in there.

00:08:43.740 --> 00:08:45.170
And then we can change the demo.

00:08:45.170 --> 00:08:47.525
Woop, didn't mean to close that.

00:08:47.525 --> 00:08:50.150
We can change the demo
and change the name.

00:08:50.150 --> 00:08:54.320
Name, we'll call
this Shopping List.

00:08:54.320 --> 00:08:54.820
All right.

00:08:54.820 --> 00:08:57.570
So now let's test out
that this actually works.

00:08:57.570 --> 00:08:59.860
Here, you can add a few tasks.

00:08:59.860 --> 00:09:05.190
We can add tasks to
create a shopping list,

00:09:05.190 --> 00:09:08.700
finish the Polycast.

00:09:08.700 --> 00:09:11.010
And add a few tasks over here.

00:09:11.010 --> 00:09:15.870
Add some tomatoes,
add some lettuce.

00:09:15.870 --> 00:09:16.920
Check, check.

00:09:16.920 --> 00:09:21.099
And it looks like it works.

00:09:21.099 --> 00:09:23.140
And the nice thing about
having a Polymer element

00:09:23.140 --> 00:09:25.330
is that you could just
import the element

00:09:25.330 --> 00:09:27.490
and put it on your page
and then you're done.

00:09:27.490 --> 00:09:28.000
Great.

00:09:28.000 --> 00:09:29.458
That completes this
tutorial on how

00:09:29.458 --> 00:09:31.340
to build an element
in Polymer 2.

00:09:31.340 --> 00:09:33.490
For more tutorials, you
can go to the Start section

00:09:33.490 --> 00:09:37.040
of the Polymer Project site,
which I'll link down below.

00:09:37.040 --> 00:09:39.800
If you have any questions or
ideas for future Polycasts,

00:09:39.800 --> 00:09:43.670
leave us a comment on this video
or tweet us at #AskPolymer.

00:09:43.670 --> 00:09:45.290
See you next time.

00:09:45.290 --> 00:09:48.640
[MUSIC PLAYING]

