WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:02.766
[播放音乐]

00:00:02.766 --> 00:00:03.406
大家好

00:00:03.406 --> 00:00:03.906
最近在忙什么呢？

00:00:03.906 --> 00:00:04.770
我是罗布•多德森

00:00:04.770 --> 00:00:06.561
今天“Polycasts“讲座上

00:00:06.561 --> 00:00:09.000
我将展示一项很重要的技术
此技术用于编写可重用元素

00:00:09.000 --> 00:00:11.724
然后 我将会发大家派发
一大堆Polymer礼品

00:00:11.724 --> 00:00:13.390
但是 你们必须

00:00:13.390 --> 00:00:15.098
坚持听完本课程

00:00:15.098 --> 00:00:16.650
才会知道 如何获得这些礼品

00:00:16.650 --> 00:00:18.090
先来讲重要的事情

00:00:18.090 --> 00:00:19.600
我们来聊聊可重用组件

00:00:19.600 --> 00:00:20.100
好的

00:00:20.100 --> 00:00:21.040
今天我要讲的是

00:00:21.040 --> 00:00:22.790
一项非常重要的技术

00:00:22.790 --> 00:00:25.169
这项技术适用于
Polymer 0.8和0.5

00:00:25.169 --> 00:00:27.710
大多数新手在使用此技术时都会犯错

00:00:27.710 --> 00:00:31.010
因为说实话 此技术确实
容易让人产生混淆

00:00:31.010 --> 00:00:32.460
让我们先来看一个应用场景

00:00:32.460 --> 00:00:34.050
假设有一个文件夹结构

00:00:34.050 --> 00:00:35.290
我们将创建一个元素

00:00:35.290 --> 00:00:36.540
并与其他开发者分享该元素

00:00:36.540 --> 00:00:39.290
我们的项目看起来是这样的

00:00:39.290 --> 00:00:41.259
这是tiny-badge.html

00:00:41.259 --> 00:00:43.050
这是我们将要创建的标记

00:00:43.050 --> 00:00:45.070
有bower_components

00:00:45.070 --> 00:00:45.700
目录

00:00:45.700 --> 00:00:48.240
在这里面
有polymer.html文件

00:00:48.240 --> 00:00:50.582
如果打开
tiny-badge.html的定义

00:00:50.582 --> 00:00:53.040
可以看到 在最上方
我首先要做的事情是

00:00:53.040 --> 00:00:55.330
导入polymer.html

00:00:55.330 --> 00:00:58.650
我从bower_components目录
导入这个文件

00:00:58.650 --> 00:01:01.660
因此实际上
我在元素定义中

00:01:01.660 --> 00:01:03.390
明确指定
bower_components路径

00:01:03.390 --> 00:01:05.610
假设我对tiny-badge的外观
感到满意

00:01:05.610 --> 00:01:07.026
并且想要与朋友们分享它

00:01:07.026 --> 00:01:08.700
因此我将它发布到
Bower注册表

00:01:08.700 --> 00:01:10.920
我告诉大家
这个组件非常不错

00:01:10.920 --> 00:01:11.960
所有朋友都过来围观并且安装它

00:01:11.960 --> 00:01:14.240
让我们来看他们的项目是怎样的

00:01:14.240 --> 00:01:16.250
我的朋友安装了tiny-badge

00:01:16.250 --> 00:01:19.360
它位于bower_components
目录中

00:01:19.360 --> 00:01:22.490
在bower_components目录中

00:01:22.490 --> 00:01:25.600
还有同级子目录polymer
和tiny-badge

00:01:25.600 --> 00:01:26.710
请等一会儿

00:01:26.710 --> 00:01:28.800
若打开tiny-badge.html定义

00:01:28.800 --> 00:01:31.990
你应该还记得我在此
设置了bower_components

00:01:31.990 --> 00:01:33.130
的路径

00:01:33.130 --> 00:01:36.645
因此 在bower_components
目录中

00:01:36.645 --> 00:01:37.770
应有该元素的同级子项目

00:01:37.770 --> 00:01:41.140
在此目录级别
应该有其他同级子项目

00:01:41.140 --> 00:01:42.080
但是实际上没有 不是吗？

00:01:42.080 --> 00:01:45.127
这是我们朋友的
bower_components结构

00:01:45.127 --> 00:01:46.710
因为他们安装了我们的组件

00:01:46.710 --> 00:01:51.000
这里的路径将会显示为404错误

00:01:51.000 --> 00:01:54.390
我们的朋友将会为此苦恼.

00:01:54.390 --> 00:01:55.771
现在 我们可以改变这种情况

00:01:55.771 --> 00:01:56.770
我们完全可以解决这个问题

00:01:56.770 --> 00:01:59.840
可以将这个路径更改为相对路径

00:01:59.840 --> 00:02:03.720
有时候 我们将它称之为
使用规范化路径

00:02:03.720 --> 00:02:06.840
其原理是
如果使用前端包管理器

00:02:06.840 --> 00:02:10.470
你的所有package都将成为同级项目

00:02:10.470 --> 00:02:14.070
因此 如果使用../相对路径

00:02:14.070 --> 00:02:15.600
那么将会解释为

00:02:15.600 --> 00:02:18.220
引用同级目录中的

00:02:18.220 --> 00:02:18.910
某个项目

00:02:18.910 --> 00:02:20.590
因此 我们称之为规范化路径

00:02:20.590 --> 00:02:24.680
因为你的项目和依赖项之间
始终是同级关系

00:02:24.680 --> 00:02:25.890
请等一会儿

00:02:25.890 --> 00:02:27.030
让我们回顾一下

00:02:27.030 --> 00:02:29.975
这是我们的初始项目结构

00:02:29.975 --> 00:02:31.850
这是我们的组件开发方式

00:02:31.850 --> 00:02:33.950
我们之所以明确指定

00:02:33.950 --> 00:02:35.530
bower_components路径
是因为我们需要

00:02:35.530 --> 00:02:37.530
预览已经完成

00:02:37.530 --> 00:02:38.290
的工作

00:02:38.290 --> 00:02:40.240
如果更改为规范化路径

00:02:40.240 --> 00:02:42.520
将不能预览我们的元素

00:02:42.520 --> 00:02:44.760
我们就陷入了这样一个困境

00:02:44.760 --> 00:02:47.610
需要进行取舍 即在开发过程中预览
创建的组件

00:02:47.610 --> 00:02:50.140
还是在组件完成之后

00:02:50.140 --> 00:02:51.460
与朋友进行分享

00:02:51.460 --> 00:02:54.384
我们应该避免这样的情况

00:02:54.384 --> 00:02:56.050
因此在去年 我们发布了一个组件

00:02:56.050 --> 00:02:59.790
引入一种更智能的目录结构和Bower配置

00:02:59.790 --> 00:03:02.660
你可以用它来开发和预览

00:03:02.660 --> 00:03:03.980
可共享元素

00:03:03.980 --> 00:03:05.647
我将向你介绍Polymer团队

00:03:05.647 --> 00:03:07.271
开发的一个新工具

00:03:07.271 --> 00:03:08.830
这个工具消除了这些问题

00:03:08.830 --> 00:03:11.460
让你能够更高效地开发你的元素

00:03:11.460 --> 00:03:12.670
让我们来看一看

00:03:12.670 --> 00:03:15.030
这是我们要创建的元素

00:03:15.030 --> 00:03:17.200
它是一种tiny-badge元素

00:03:17.200 --> 00:03:19.750
可以将这个元素

00:03:19.750 --> 00:03:23.030
嵌入项目之中 类似于列表等

00:03:23.030 --> 00:03:25.020
让用户知道 他们有一些邮件

00:03:25.020 --> 00:03:26.160
或提醒需要查看

00:03:26.160 --> 00:03:28.826
我首先要做的事情是
创建bower.json文件

00:03:28.826 --> 00:03:30.490
我需要为元素设置一个名称

00:03:30.490 --> 00:03:32.281
然后加入一些依赖项

00:03:32.281 --> 00:03:34.590
因此我需要请求
webcomponentsjs和polymer

00:03:34.590 --> 00:03:36.230
在终端设备上上

00:03:36.230 --> 00:03:40.442
我运行bower install
列出所有依赖项

00:03:40.442 --> 00:03:42.150
接下来 我要做的事情是

00:03:42.150 --> 00:03:44.580
安装一个名称为polyserve的库

00:03:44.580 --> 00:03:46.340
为此 我运行npm命令

00:03:46.340 --> 00:03:49.990
进行全局安装以调用polyserve

00:03:49.990 --> 00:03:51.650
polyserve其实是服务器

00:03:51.650 --> 00:03:56.350
让你能够使用规范化路径URL

00:03:56.350 --> 00:03:57.930
编写你的元素

00:03:57.930 --> 00:04:01.260
然后polyserve截取这些URL
在你的本机bower_components目录

00:04:01.260 --> 00:04:04.210
提供路径服务

00:04:04.210 --> 00:04:06.420
此工具是一名Polymer团队成员创建的

00:04:06.420 --> 00:04:09.650
其目的是为了解决

00:04:09.650 --> 00:04:12.590
不能同时预览和共享同一个组件的问题

00:04:12.590 --> 00:04:15.540
因此 我将启动polyserve服务器

00:04:15.540 --> 00:04:19.399
你将看到 它使用的端口是8080

00:04:19.399 --> 00:04:22.170
它在localhost:8080/components/tiny
badge路径

00:04:22.170 --> 00:04:23.711
提供tiny-badge服务

00:04:26.870 --> 00:04:28.920
在我的项目中

00:04:28.920 --> 00:04:30.730
我将创建tiny-badge HTML文件

00:04:30.730 --> 00:04:32.188
首先要做的事情是

00:04:32.188 --> 00:04:33.930
导入Polymer定义

00:04:33.930 --> 00:04:37.470
你还会注意到
在我做这些工作时

00:04:37.470 --> 00:04:38.560
使用的是规范化路径

00:04:38.560 --> 00:04:40.480
然后 我将会为我的tiny-badge

00:04:40.480 --> 00:04:42.500
分配一个don-module和ID

00:04:42.500 --> 00:04:43.842
此ID与我注册的名称相同

00:04:43.842 --> 00:04:46.300
在模块内部
我将抛出一个

00:04:46.300 --> 00:04:46.799
内容元素

00:04:46.799 --> 00:04:49.250
最后 我调用Polymer构造函数

00:04:49.250 --> 00:04:51.080
传递进入tiny-badge名称

00:04:51.080 --> 00:04:52.960
我还要加入一个样式标记

00:04:52.960 --> 00:04:56.640
这是为了设置我的tiny-badge的

00:04:56.640 --> 00:04:57.270
观感

00:04:57.270 --> 00:05:00.490
你看到 我使用前一课中讲到的

00:05:00.490 --> 00:05:02.780
host选择器

00:05:02.780 --> 00:05:05.810
这样 我可以将锁定元素本身

00:05:05.810 --> 00:05:11.280
在demo.HTML文件中
我首先为webcomponents-lite.js

00:05:11.280 --> 00:05:14.590
添加一个脚本标记

00:05:14.590 --> 00:05:16.240
然后加入tiny-badge元素

00:05:16.240 --> 00:05:19.820
定义的HTML导入语句

00:05:19.820 --> 00:05:21.990
最后 添加一个样式标记

00:05:21.990 --> 00:05:25.720
我想要在页面上使用更漂亮的字体

00:05:25.720 --> 00:05:27.330
让我的badge看上去更美观一些

00:05:27.330 --> 00:05:31.310
然后 在正文中
我想要创建一个列表

00:05:31.310 --> 00:05:33.610
在列表内部

00:05:33.610 --> 00:05:36.470
我放入一个tiny-badge元素

00:05:36.470 --> 00:05:38.720
这样就可以创建一个虚拟收件箱

00:05:38.720 --> 00:05:41.020
现在 如果进入Chrome浏览器
预览所有内容

00:05:41.020 --> 00:05:43.249
就可以看到tiny-badge的显示效果

00:05:43.249 --> 00:05:45.040
如果你查看我在这里使用的URL

00:05:45.040 --> 00:05:45.365
就会发现它是
localhost:8080/components/tiny

00:05:45.365 --> 00:05:46.031
badge/demo.html

00:05:49.540 --> 00:05:53.060
这里一个很不错的优点是
我不仅能够创建这个组件

00:05:53.060 --> 00:05:54.380
而且还可以预览它

00:05:54.380 --> 00:05:56.740
但是我已经使用规范化路径URL

00:05:56.740 --> 00:05:58.640
指定其依赖项

00:05:58.640 --> 00:06:01.810
因此 此组件也可以
发布到Bower

00:06:01.810 --> 00:06:02.440
注册表

00:06:02.440 --> 00:06:04.455
可以与所有人共享

00:06:04.455 --> 00:06:05.330
你可以轻松得到它

00:06:05.330 --> 00:06:08.199
开发Polymer元素变得越来越简单

00:06:08.199 --> 00:06:10.240
一般来说 到这里我就要结束了

00:06:10.240 --> 00:06:12.710
我会让你订阅课程频道

00:06:12.710 --> 00:06:15.070
但是今天 我还要宣布一件事情

00:06:15.070 --> 00:06:18.037
我们已经推出一批
极有价值的Polymer礼品

00:06:18.037 --> 00:06:20.370
以馈赠给一部分幸运的观众

00:06:20.370 --> 00:06:22.209
你可以通过下面的方法来获得礼品

00:06:22.209 --> 00:06:24.500
你在评论中提出你的
Polymer相关问题

00:06:24.500 --> 00:06:27.090
每次当我们拍摄新的课程视频时
我将会查看

00:06:27.090 --> 00:06:29.131
并挑出最具有价值的问题
并在视频中做出解答

00:06:29.131 --> 00:06:31.590
如果你的问题被选中
你将会得到礼品

00:06:31.590 --> 00:06:36.130
这些礼品包括在连帽衫 贴纸 玩具
笔记本电脑装饰 五花八门

00:06:36.130 --> 00:06:40.110
如果你想要获我和小狗或海象的签名合像

00:06:40.110 --> 00:06:41.080
我们也可以提供

00:06:41.080 --> 00:06:42.319
因此请你开动脑筋

00:06:42.319 --> 00:06:43.610
在评论中提出你的问题

00:06:43.610 --> 00:06:45.360
非常感谢观看本视频

00:06:45.360 --> 00:06:46.542
下次再见

00:06:46.542 --> 00:06:47.250
嗨 Polycasters

00:06:47.250 --> 00:06:49.280
我是罗布 将推出一档全新节目

00:06:49.280 --> 00:06:50.446
名为“LazyWeb”

00:06:50.446 --> 00:06:52.320
本节目汇集前一周

00:06:52.320 --> 00:06:54.416
网络上的精彩新闻
为你带来观看乐趣

00:06:54.416 --> 00:06:56.570
你可以访问下面的链接来了解一下

00:06:56.570 --> 00:06:57.640
请记得订阅哦

00:06:57.640 --> 00:06:59.431
请在Twitter上发表意见和想法

00:06:59.431 --> 00:07:01.820
感谢观看

