WEBVTT
Kind: captions
Language: zh-CN

00:00:02.749 --> 00:00:03.790
罗布·多德森：大家好

00:00:03.790 --> 00:00:04.040
最近如何？

00:00:04.040 --> 00:00:04.880
我是罗布·多德森

00:00:04.880 --> 00:00:06.546
今天Polycast中 我将展示

00:00:06.546 --> 00:00:09.830
一个很重要的技巧

00:00:09.830 --> 00:00:10.720
如何从原始HTML继承元素

00:00:10.720 --> 00:00:13.820
这不仅会免去许多
令人头痛的辅助功能设计

00:00:13.820 --> 00:00:15.260
同时 若你想使用表单和表格

00:00:15.260 --> 00:00:17.140
它也至关重要

00:00:17.140 --> 00:00:19.030
让我们开始吧

00:00:19.030 --> 00:00:20.600
从原始元素继承

00:00:20.600 --> 00:00:24.270
根创建一个全新的标签相比
没有太大的不同

00:00:24.270 --> 00:00:26.047
你仍然需要调用

00:00:26.047 --> 00:00:26.880
Polymer的构造器

00:00:26.880 --> 00:00:29.710
所不同的是
你需要传入一个继承属性

00:00:29.710 --> 00:00:34.540
并且传入你所继承的
标签的名称

00:00:34.540 --> 00:00:36.220
使用新的元素进行标记

00:00:36.220 --> 00:00:37.386
非常简单

00:00:37.386 --> 00:00:40.600
你需要使用原始标签名
再加上一个is属性

00:00:40.600 --> 00:00:43.340
并传入你创建的扩展标签名

00:00:43.340 --> 00:00:45.080
所以这里我写的是
button is super-button

00:00:45.080 --> 00:00:46.990
若你想在JavaScript中这样做

00:00:46.990 --> 00:00:49.990
你需调用document.createElement

00:00:49.990 --> 00:00:51.490
传入原始标签名和扩展标签名

00:00:51.490 --> 00:00:53.940
通过这种方式创造的元素

00:00:53.940 --> 00:00:57.430
被称为类型扩展元素

00:00:57.430 --> 00:01:01.330
正如我之前所说
它们有一些很棒的好处

00:01:01.330 --> 00:01:03.650
比如
你使用了一个表格元素

00:01:03.650 --> 00:01:06.720
在它里面创建了

00:01:06.720 --> 00:01:07.986
fancy-td元素

00:01:07.986 --> 00:01:10.110
接下来会发生的是
解析器顺着页面进行扫描

00:01:10.110 --> 00:01:12.276
当它扫描到这里

00:01:12.276 --> 00:01:15.300
它会把这里的fancy-td元素
提到表格之外

00:01:15.300 --> 00:01:19.150
因为对某些元素来说
比如表格、无序列表以及有序列表

00:01:19.150 --> 00:01:21.235
如果它的里面

00:01:21.235 --> 00:01:22.610
包含了解析器
所不知道的内容

00:01:22.610 --> 00:01:23.810
解析器要么不会渲染它们

00:01:23.810 --> 00:01:25.890
要么直接把它们提到外面

00:01:25.890 --> 00:01:27.890
这可能并不是你打算做的

00:01:27.890 --> 00:01:30.410
它会以一种
非常奇怪的方式进行渲染

00:01:30.410 --> 00:01:32.490
所以
我们需要解决这个问题

00:01:32.490 --> 00:01:34.620
我们不再创建自定义标签

00:01:34.620 --> 00:01:37.440
取而代之 我们可以
对原始的表格数据元素进行扩展

00:01:37.440 --> 00:01:40.790
并通过这种方式
创建fancy-td 一切正常

00:01:40.790 --> 00:01:43.570
另一个
应用类型扩展的例子是表单

00:01:43.570 --> 00:01:48.030
通常来说
表单会尝试打包

00:01:48.030 --> 00:01:50.830
所有它包含的
输入元素里的值

00:01:50.830 --> 00:01:54.190
但是 如果你把这样一个标签
放到表单里

00:01:54.190 --> 00:01:56.860
解析器的反应会是
我完全不知道这是什么标签

00:01:56.860 --> 00:01:58.340
我也不知道它是否有值

00:01:58.340 --> 00:02:00.760
那我向服务器提交
有效信息的时候

00:02:00.760 --> 00:02:02.500
只好把它忽略掉了

00:02:02.500 --> 00:02:06.121
同样的
我们可以通过

00:02:06.121 --> 00:02:06.620
扩展原始输入元素的方法
解决这个问题

00:02:06.620 --> 00:02:09.130
所以这里改成
input is fancy-input

00:02:09.130 --> 00:02:12.260
这样就能让它把所有值
都发送给服务器了

00:02:12.260 --> 00:02:13.300
一切都很好

00:02:13.300 --> 00:02:17.330
另一个很酷的好处是
如果你看一下原始的输入元素

00:02:17.330 --> 00:02:20.090
并敲击键盘上的Tab键

00:02:20.090 --> 00:02:23.360
通常你会看到
它的四周会出现一个聚焦框

00:02:23.360 --> 00:02:26.837
这个聚焦状态
对于用户来说

00:02:26.837 --> 00:02:27.920
是个很重要的辅助技术

00:02:27.920 --> 00:02:30.410
有很多人无法使用鼠标

00:02:30.410 --> 00:02:31.980
与屏幕交互

00:02:31.980 --> 00:02:34.790
他们完全依靠键盘进行导航

00:02:34.790 --> 00:02:38.250
对他们来说 这些聚焦状态
是非常 非常 非常重要的

00:02:38.250 --> 00:02:41.080
如果你的类型扩展元素
是通过扩展

00:02:41.080 --> 00:02:43.570
原始输入元素得到的

00:02:43.570 --> 00:02:44.490
你将自动获得这种聚焦行为

00:02:44.490 --> 00:02:46.940
否则 如果你只是
创建了自己的标签

00:02:46.940 --> 00:02:48.855
那么你还需要
自己添加标签索引

00:02:48.855 --> 00:02:50.272
自己添加规则

00:02:50.272 --> 00:02:51.980
自己添加ARIA属性

00:02:51.980 --> 00:02:53.521
以及其他许多
对辅助功能的支持

00:02:53.521 --> 00:02:56.800
如果你没有扩展原始元素的话
这些你都得自己做

00:02:56.800 --> 00:02:59.840
因为刚刚我们是免费获得的

00:02:59.840 --> 00:03:01.970
我们来尝试实现一个
我们自己的类型扩展元素

00:03:01.970 --> 00:03:04.370
这样更能凸显

00:03:04.370 --> 00:03:05.919
刚刚提到的这些好处

00:03:05.919 --> 00:03:07.460
最开始
我需要做的是

00:03:07.460 --> 00:03:09.160
创建一个Bower JSON文件

00:03:09.160 --> 00:03:11.522
我已经创建好一个
叫做gh-button的元素

00:03:11.522 --> 00:03:12.980
它看起来
和你在GitHub上

00:03:12.980 --> 00:03:14.940
看到的按钮很像

00:03:14.940 --> 00:03:17.540
我依赖于Polymer

00:03:17.540 --> 00:03:19.820
在这里是0.8发行版

00:03:19.820 --> 00:03:22.500
在我的终端
我需要执行bower install命令

00:03:22.500 --> 00:03:24.340
从而下载这个依赖库

00:03:24.340 --> 00:03:27.185
因Polymer间接依赖
Web组件JS

00:03:27.185 --> 00:03:29.845
我也会下载获得它
这一点非常棒

00:03:29.845 --> 00:03:31.261
最后我要做的事情是

00:03:31.261 --> 00:03:33.320
运行polyserve命令

00:03:33.320 --> 00:03:35.610
如果你还记得
上次视频的内容

00:03:35.610 --> 00:03:38.710
polyserve是一个小服务器
它允许我们使用相对路径的URL

00:03:38.710 --> 00:03:40.500
来写入我们的元素

00:03:40.500 --> 00:03:42.420
如果你完全不知道我在讲什么

00:03:42.420 --> 00:03:45.895
你可以点击这里这个链接

00:03:45.895 --> 00:03:47.145
看看上一集的内容

00:03:47.145 --> 00:03:50.320
它会解释我们刚刚做的一切

00:03:50.320 --> 00:03:52.490
回到我的gh-button.html文件

00:03:52.490 --> 00:03:55.550
我们从导入
Polymer HTML开始

00:03:55.550 --> 00:03:57.600
这里我会使用
相对路径的风格

00:03:57.600 --> 00:03:59.360
来进行导入

00:03:59.360 --> 00:04:02.410
然后我创建一个DOM模块
并将ID属性设为gh-button

00:04:02.410 --> 00:04:05.504
在它里面我会添加一个模板
和一个内容元素

00:04:05.504 --> 00:04:07.670
我的脚本最后要
调用Polymer构造器

00:04:07.670 --> 00:04:09.780
并把gh-button传入其中

00:04:09.780 --> 00:04:12.450
此外我还需要传入
extends button

00:04:12.450 --> 00:04:14.550
我们就成功创建了一个
从原始按钮标签扩展的

00:04:14.550 --> 00:04:16.160
类型扩展元素了

00:04:16.160 --> 00:04:19.600
在我的demo.html文件里
首先导入

00:04:19.600 --> 00:04:21.954
webcomponents-lite.js

00:04:21.954 --> 00:04:26.640
然后
我会导入gh-button.html

00:04:26.640 --> 00:04:28.340
最后 在下面的主体标签里

00:04:28.340 --> 00:04:30.500
我会使用这些按钮元素

00:04:30.500 --> 00:04:33.840
这里我添加一个gh-button

00:04:33.840 --> 00:04:37.300
在它里面 我添加了一些
Hello World文本

00:04:37.300 --> 00:04:39.535
现在如果我回到浏览器
预览这个页面

00:04:39.535 --> 00:04:41.660
我会在上面这个角落这里

00:04:41.660 --> 00:04:42.620
得到一个小按钮

00:04:42.620 --> 00:04:45.330
你可以看到 当我点击它的时候
会得预期的行为

00:04:45.330 --> 00:04:49.090
如果按下Tab键选中它
周围会出现聚焦环

00:04:49.090 --> 00:04:53.000
最重要的是
当我调出了屏幕阅读器

00:04:53.000 --> 00:04:54.719
我可以导航到它那里

00:04:54.719 --> 00:04:56.260
你会发现屏幕阅读器

00:04:56.260 --> 00:04:58.660
会读出按钮的内容

00:04:58.660 --> 00:05:02.230
并且宣布
这是一个按钮

00:05:02.230 --> 00:05:04.870
它实际上宣布了这个元素
在这里充当的隐藏角色

00:05:04.870 --> 00:05:08.485
这一点非常非常实用

00:05:08.485 --> 00:05:10.860
最后我要做的是
给这个按钮加点料

00:05:10.860 --> 00:05:13.680
我需要添加一个风格元素

00:05:13.680 --> 00:05:16.320
这里我添加了一堆CSS

00:05:16.320 --> 00:05:19.027
它们是我从GitHub的
CSS文件里拷贝来的

00:05:19.027 --> 00:05:21.610
你不用在意这些
选择器都代表什么意思

00:05:21.610 --> 00:05:24.400
只有一点要注意的是
这里我使用了主机选择器

00:05:24.400 --> 00:05:28.060
用于设置自身的样式

00:05:28.060 --> 00:05:30.870
这里
我使用了GitHub的CSS

00:05:30.870 --> 00:05:34.560
指定聚焦状态、悬停状态

00:05:34.560 --> 00:05:35.280
以及活动状态

00:05:35.280 --> 00:05:38.220
你可以看到
如何对你的元素

00:05:38.220 --> 00:05:38.940
设置不同的伪状态

00:05:38.940 --> 00:05:42.050
这一点对辅助功能而言
非常重要

00:05:42.050 --> 00:05:45.440
回到Chrome浏览器
刷新页面

00:05:45.440 --> 00:05:48.230
你就会看到 现在我拥有一个
好看点的图标了

00:05:48.230 --> 00:05:48.960
点击它

00:05:48.960 --> 00:05:50.580
会得到与之前一样的行为

00:05:50.580 --> 00:05:53.500
我可以按下Tab键
把聚焦框聚焦到它周围

00:05:53.500 --> 00:05:56.345
而且最重要的是
我可以调出我的屏幕阅读器

00:05:56.345 --> 00:05:58.460
并导航到该按钮的位置

00:05:58.460 --> 00:06:00.230
你会发现
文本内容会被大声朗读出来

00:06:00.230 --> 00:06:04.060
我仍然会得到 这个非常棒的
隐式的钮状态

00:06:04.060 --> 00:06:06.290
现在
一个显而易见的问题是

00:06:06.290 --> 00:06:07.750
我何时应该使用类型扩展元素？

00:06:07.750 --> 00:06:10.030
什么时候应该
创建自定义标签？

00:06:10.030 --> 00:06:12.610
我的经验是
只要可能

00:06:12.610 --> 00:06:15.000
就应该尽量从原始元素扩展
特别是当辅助功能

00:06:15.000 --> 00:06:16.540
很重要的时候

00:06:16.540 --> 00:06:18.582
所以 如果我正在创建
像控件或者按钮这样

00:06:18.582 --> 00:06:20.040
可能需要
聚焦功能的元素的话

00:06:20.040 --> 00:06:22.150
我会尽可能地

00:06:22.150 --> 00:06:23.640
尝试对原始元素进行扩展

00:06:23.640 --> 00:06:24.750
这就是今天的全部内容了

00:06:24.750 --> 00:06:26.350
记得订阅我们的内容

00:06:26.350 --> 00:06:27.670
不要错过之后的本周问题精选

00:06:27.670 --> 00:06:29.420
与往常一样
非常感谢你的收看

00:06:29.420 --> 00:06:32.700
我们下次再见

00:06:32.700 --> 00:06:36.080
好的 现在是问答时间

00:06:36.080 --> 00:06:38.380
爱德华·维乔雷克
和贾斯汀·梅尔茨问到

00:06:38.380 --> 00:06:41.670
你们的计划中有打算
让Polymer支持ES6模块吗？

00:06:41.670 --> 00:06:43.780
这是个非常好的问题

00:06:43.780 --> 00:06:46.470
目前的计划是 我们打算
当ES6模块支持浏览器时

00:06:46.470 --> 00:06:48.771
就提供对它的支持

00:06:48.771 --> 00:06:50.520
而目前
如果你想使用ES6模块

00:06:50.520 --> 00:06:53.120
你必须做一些编译工作

00:06:53.120 --> 00:06:53.670
或者使用一些库

00:06:53.670 --> 00:06:56.220
而我们希望避免的恰是
让用户为了使用Polymer

00:06:56.220 --> 00:06:57.725
还不得不进行编译工作

00:06:57.725 --> 00:06:59.280
所以目前的计划是

00:06:59.280 --> 00:07:02.550
一旦它提供浏览器支持

00:07:02.550 --> 00:07:03.690
我们100％会支持它

00:07:03.690 --> 00:07:05.148
非常感谢你们的提问

00:07:05.148 --> 00:07:08.040
我会让我的部下
和你们在G+上取得联系

00:07:08.040 --> 00:07:10.522
如果你补上G+
但是也想有机会露个脸的话

00:07:10.522 --> 00:07:12.230
可以在评论区留下你的问题

00:07:12.230 --> 00:07:14.520
也许在以后的视频里
我们就会引用你的问题

00:07:14.520 --> 00:07:16.103
再次
非常感谢你的收看

00:07:16.103 --> 00:07:17.820
我们下次再见

