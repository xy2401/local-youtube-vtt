WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.290
[MUSIC PLAYING]

00:00:04.376 --> 00:00:05.500
ROB DODSON: Hey, everybody.

00:00:05.500 --> 00:00:05.999
What's up?

00:00:05.999 --> 00:00:06.730
It's Rob Dodson.

00:00:06.730 --> 00:00:08.050
Welcome back to the show.

00:00:08.050 --> 00:00:10.150
So in the last episode,
I was showing you

00:00:10.150 --> 00:00:13.240
how you set up Firebase
authentication in your Polymer

00:00:13.240 --> 00:00:14.170
project.

00:00:14.170 --> 00:00:16.210
Today, I want to
continue on from where

00:00:16.210 --> 00:00:18.190
we left off in the
last episode and start

00:00:18.190 --> 00:00:21.010
working with Firebase's
real-time database.

00:00:21.010 --> 00:00:23.200
And so what we're
going to build today

00:00:23.200 --> 00:00:26.230
is going to be kind of like
a simple note-taking app,

00:00:26.230 --> 00:00:28.360
or like a to-do
list sort of thing.

00:00:28.360 --> 00:00:30.370
So follow me over
here on my laptop.

00:00:30.370 --> 00:00:34.210
I'm already signed into
the Firebase console.

00:00:34.210 --> 00:00:39.400
And because I want to have
each user have their own space

00:00:39.400 --> 00:00:41.530
in the database for
their own unique notes,

00:00:41.530 --> 00:00:43.540
I'm going to need to
set up some database

00:00:43.540 --> 00:00:47.680
rules about who can write to
which parts of the database.

00:00:47.680 --> 00:00:49.510
So if I go to the
Database section here--

00:00:49.510 --> 00:00:52.360
I click on the Database
tab-- if you just

00:00:52.360 --> 00:00:54.956
set up your project, you'll
probably see a note right

00:00:54.956 --> 00:00:56.830
here that says, like,
"Default security rules

00:00:56.830 --> 00:00:58.434
require users to
be authenticated,"

00:00:58.434 --> 00:01:00.100
and then there's this
Learn More button.

00:01:00.100 --> 00:01:01.183
And you can click on that.

00:01:01.183 --> 00:01:03.460
And actually, it'll
open up a new tab,

00:01:03.460 --> 00:01:07.740
and it'll explain how
Firebase's database rules work.

00:01:07.740 --> 00:01:11.710
Firebase's database rules use
sort of a JSON-like syntax,

00:01:11.710 --> 00:01:12.890
which is very interesting.

00:01:12.890 --> 00:01:14.380
But the thing
that's really handy

00:01:14.380 --> 00:01:17.830
here is the Sample
Rules section.

00:01:17.830 --> 00:01:21.070
So like I said, I want
to have every user have

00:01:21.070 --> 00:01:23.410
their own unique
space in the database,

00:01:23.410 --> 00:01:26.830
and that's such a common
ask that there's already,

00:01:26.830 --> 00:01:28.420
if you click on
this User tab here,

00:01:28.420 --> 00:01:30.460
there's already
some example rules

00:01:30.460 --> 00:01:31.990
that will do that for you.

00:01:31.990 --> 00:01:34.217
And so I can walk
through how these work.

00:01:34.217 --> 00:01:36.550
So basically, we've had our
rules object, and then we're

00:01:36.550 --> 00:01:39.850
going to define it so
it matches the URLs

00:01:39.850 --> 00:01:42.020
that we'll use for
our database calls.

00:01:42.020 --> 00:01:45.100
So we're going to start
with a users object right

00:01:45.100 --> 00:01:46.630
at the root of our database.

00:01:46.630 --> 00:01:50.110
And then within that, there's
this sort of special syntax

00:01:50.110 --> 00:01:53.170
here for this $uid thing.

00:01:53.170 --> 00:01:56.020
And that is kind of
like a Firebase database

00:01:56.020 --> 00:01:57.390
variable of sorts.

00:01:57.390 --> 00:01:59.320
It's a dynamic rule.

00:01:59.320 --> 00:02:03.790
And what that will do is refer
to whatever is the current user

00:02:03.790 --> 00:02:08.650
ID that we are working with--
sort of the /users/ some user

00:02:08.650 --> 00:02:10.210
ID.

00:02:10.210 --> 00:02:11.800
And then we're
saying whoever can

00:02:11.800 --> 00:02:15.340
read to that space, their
uid or the uid space

00:02:15.340 --> 00:02:17.800
that we're trying to write
to-- that will need to match

00:02:17.800 --> 00:02:19.750
the authenticated user's uid.

00:02:19.750 --> 00:02:22.580
So that's for reading
and for writing.

00:02:22.580 --> 00:02:26.490
So I'm just going to copy
this bit of boilerplate

00:02:26.490 --> 00:02:31.677
here, go back to my console,
and click on the Rules tab.

00:02:31.677 --> 00:02:33.760
And I can highlight all
this, paste that in there,

00:02:33.760 --> 00:02:36.080
and then make sure
to click Publish so

00:02:36.080 --> 00:02:38.710
that these rules become active.

00:02:38.710 --> 00:02:39.210
Cool.

00:02:39.210 --> 00:02:41.860
We've said that
only certain users

00:02:41.860 --> 00:02:43.942
can write to certain
spots in the database.

00:02:43.942 --> 00:02:45.400
Basically, you
can't read and write

00:02:45.400 --> 00:02:47.390
to other people's to-do list.

00:02:47.390 --> 00:02:48.335
So far, so good?

00:02:48.335 --> 00:02:50.710
Now, follow me back over to
my laptop, and let's go ahead

00:02:50.710 --> 00:02:53.215
and start putting some
data in the database.

00:02:53.215 --> 00:02:59.200
So I'm going to create a new
element called my-notes.html,

00:02:59.200 --> 00:03:02.320
and I'm just going to paste
in some HTML imports that

00:03:02.320 --> 00:03:03.500
I've saved.

00:03:03.500 --> 00:03:08.830
And I'll close the sidebar there
so we can bump this up a little

00:03:08.830 --> 00:03:10.450
bit and you can
see what I've got.

00:03:10.450 --> 00:03:12.580
So in this element,
I'm importing Polymer,

00:03:12.580 --> 00:03:14.410
I'm importing firebase-auth.

00:03:14.410 --> 00:03:16.660
So I'll show you why
we need that again.

00:03:16.660 --> 00:03:18.371
I'm importing firebase-query.

00:03:18.371 --> 00:03:20.620
So this is what we'll use
to actually talk to and read

00:03:20.620 --> 00:03:22.150
from the database.

00:03:22.150 --> 00:03:25.590
Paper-input-- so the user can
enter some values, and then

00:03:25.590 --> 00:03:26.500
iron-flex-layout.

00:03:26.500 --> 00:03:28.120
And I think we've actually
maybe already imported

00:03:28.120 --> 00:03:29.980
paper-buttons somewhere
else, but it's probably good

00:03:29.980 --> 00:03:32.021
to import that here, as
well, because we're going

00:03:32.021 --> 00:03:33.490
to use a paper-button, too.

00:03:33.490 --> 00:03:36.210
So I'll say paper-button.

00:03:36.210 --> 00:03:38.830
Rad.

00:03:38.830 --> 00:03:42.170
Let us begin by
defining an element.

00:03:42.170 --> 00:03:45.370
So we're just going to
call this element my-notes.

00:03:45.370 --> 00:03:47.020
And the first thing
I'm going to do

00:03:47.020 --> 00:03:52.120
is actually use the
firebase-auth element, again,

00:03:52.120 --> 00:03:54.730
inside of my-notes.

00:03:54.730 --> 00:03:57.370
Now, I used this in
our previous episode

00:03:57.370 --> 00:04:00.052
to build our sign-in
and sign-out buttons.

00:04:00.052 --> 00:04:01.510
So here, what I'm
to do is I'm also

00:04:01.510 --> 00:04:05.729
going to expose the user
object inside of this element.

00:04:05.729 --> 00:04:08.020
And what's kind of cool about
the firebase-auth element

00:04:08.020 --> 00:04:11.320
is that whenever a user
signs in, basically,

00:04:11.320 --> 00:04:13.630
all instances of the
firebase-auth element

00:04:13.630 --> 00:04:15.880
that we have sprinkled
in our app-- all of

00:04:15.880 --> 00:04:19.950
them will simultaneously
get that new user data.

00:04:19.950 --> 00:04:22.029
They'll get the user object.

00:04:22.029 --> 00:04:25.810
And so you can treat
this element like a model

00:04:25.810 --> 00:04:29.530
that any other element can
just sort of declaratively bind

00:04:29.530 --> 00:04:33.340
to and extract information
about the user.

00:04:33.340 --> 00:04:37.060
So you can pop these auth
elements into different spots

00:04:37.060 --> 00:04:38.560
in your app, wherever
you might need

00:04:38.560 --> 00:04:41.410
to reference the user for
some reason, which is pretty

00:04:41.410 --> 00:04:43.720
interesting and pretty handy.

00:04:43.720 --> 00:04:46.150
So we're going to
combine that with

00:04:46.150 --> 00:04:48.605
the firebase-query element.

00:04:48.605 --> 00:04:50.230
So the firebase-query
element basically

00:04:50.230 --> 00:04:52.330
lets us talk to the
Firebase database,

00:04:52.330 --> 00:04:57.070
and specifically, talk to
arrays in the Firebase database.

00:04:57.070 --> 00:05:03.340
So I'm going to give this
element an ID of query.

00:05:03.340 --> 00:05:05.230
So we'll say ID is query.

00:05:05.230 --> 00:05:08.650
We will use that later to
reference it in our JavaScript.

00:05:08.650 --> 00:05:10.550
We're going to say
that it's path.

00:05:10.550 --> 00:05:13.000
So this is the path in the
database where we're going

00:05:13.000 --> 00:05:14.380
to be reading and writing to.

00:05:14.380 --> 00:05:20.440
That will be /users/, and then
we will bind to the current

00:05:20.440 --> 00:05:26.260
user's user ID, and then we will
write to their notes section.

00:05:26.260 --> 00:05:29.500
And then we'll say the data
that comes back from Firebase--

00:05:29.500 --> 00:05:35.440
we're going to expose that in
our app as this notes object.

00:05:35.440 --> 00:05:38.250
So I'll go down here to
my element definition.

00:05:38.250 --> 00:05:43.390
I will define a properties
object for that notes thing.

00:05:43.390 --> 00:05:45.625
So we'll say the type is object.

00:05:49.090 --> 00:05:53.180
And now I want to add
sort of like a list

00:05:53.180 --> 00:05:56.080
so I can render out all of those
to-dos that start coming back

00:05:56.080 --> 00:05:57.440
from the server.

00:05:57.440 --> 00:05:59.005
So let's see.

00:05:59.005 --> 00:05:59.630
So we'll start.

00:05:59.630 --> 00:06:01.020
We'll define a div.

00:06:01.020 --> 00:06:03.590
We'll just call it card
or something like that.

00:06:03.590 --> 00:06:09.490
And then inside of here,
I'm going to create maybe

00:06:09.490 --> 00:06:11.930
another div called notes.

00:06:11.930 --> 00:06:13.910
[INAUDIBLE] say notes.

00:06:13.910 --> 00:06:17.230
Inside of here,
make a ul, and we'll

00:06:17.230 --> 00:06:22.280
give it an ID of notes-list.

00:06:22.280 --> 00:06:25.230
Instead of here, I'm going
to do a dom-repeat template.

00:06:25.230 --> 00:06:32.110
So I'll say template
is dom-repeat.

00:06:32.110 --> 00:06:34.110
The items that it's
going to iterate over

00:06:34.110 --> 00:06:38.230
will be those notes that
are coming in from the user.

00:06:38.230 --> 00:06:40.480
And we will say that
we want each note to be

00:06:40.480 --> 00:06:44.140
referred to just as a note.

00:06:44.140 --> 00:06:46.690
And then inside of here,
we'll create list items.

00:06:46.690 --> 00:06:49.600
And inside of each
list item, I will just

00:06:49.600 --> 00:06:51.850
drop in a paragraph tag.

00:06:51.850 --> 00:06:55.540
I'll give it a class of
content, and I will say

00:06:55.540 --> 00:06:58.940
that I want the note.content.

00:06:58.940 --> 00:07:02.350
So we haven't really defined
what a note looks like,

00:07:02.350 --> 00:07:04.874
but I'm going to assume
that it'll have this content

00:07:04.874 --> 00:07:07.540
property on it, and that'll just
be the text content of the note

00:07:07.540 --> 00:07:08.999
itself.

00:07:08.999 --> 00:07:10.540
The next thing I
need to do is I need

00:07:10.540 --> 00:07:14.212
to add some controls so someone
can type in a note, and then

00:07:14.212 --> 00:07:16.420
a button so that they can
add it and it'll send it up

00:07:16.420 --> 00:07:17.470
to Firebase.

00:07:17.470 --> 00:07:19.390
So I've actually got
a little bit of code

00:07:19.390 --> 00:07:23.350
for this that I've just
already saved in my clipboard.

00:07:23.350 --> 00:07:25.150
So I'll just paste that
in here real quick,

00:07:25.150 --> 00:07:26.740
and we can walk through this.

00:07:26.740 --> 00:07:29.219
So I've got a paper-input
element with an ID of input.

00:07:29.219 --> 00:07:30.760
That'll be useful
later because we'll

00:07:30.760 --> 00:07:31.880
refer to it in JavaScript.

00:07:31.880 --> 00:07:33.880
And it's just got a label
that tells the person,

00:07:33.880 --> 00:07:35.560
"Hey, take a note."

00:07:35.560 --> 00:07:40.731
And then I've got inside of that
a paper-button with an ID of

00:07:40.731 --> 00:07:41.230
add.

00:07:41.230 --> 00:07:42.880
We're going to refer to
this in JavaScript, too.

00:07:42.880 --> 00:07:44.671
And basically, whenever
someone taps on it,

00:07:44.671 --> 00:07:47.440
we're just going to
run this add function.

00:07:47.440 --> 00:07:50.150
So let's implement
that add function.

00:07:50.150 --> 00:07:54.770
So right under our properties,
we'll say add is function.

00:07:54.770 --> 00:07:56.500
And so what we want
to do is we want

00:07:56.500 --> 00:08:00.696
to take the reference to
the Firebase database,

00:08:00.696 --> 00:08:02.320
and there's two things
you can do then.

00:08:02.320 --> 00:08:05.440
You can either set a value,
or you can push values.

00:08:05.440 --> 00:08:08.800
Setting is if you're just
dropping in a single object.

00:08:08.800 --> 00:08:11.590
Pushing is if you're
pushing array-like data up

00:08:11.590 --> 00:08:13.360
to the database, and
that's basically what

00:08:13.360 --> 00:08:14.170
we're doing with these to-dos.

00:08:14.170 --> 00:08:15.760
So we want to use
the push method

00:08:15.760 --> 00:08:17.530
on our Firebase instance.

00:08:17.530 --> 00:08:19.310
So to do that, we're
going to go up here.

00:08:19.310 --> 00:08:22.210
We'll look at our query element,
which has this ID of query,

00:08:22.210 --> 00:08:24.406
and we can say this.$.query.ref.

00:08:26.920 --> 00:08:30.490
So that's going to be a
reference to that path that it

00:08:30.490 --> 00:08:33.580
has defined-- so
/users, user ID, notes.

00:08:33.580 --> 00:08:36.130
So give me a reference to
that path in the database,

00:08:36.130 --> 00:08:40.090
and then push an object to it.

00:08:40.090 --> 00:08:42.700
And this object is just going
to have one property, which

00:08:42.700 --> 00:08:44.080
will be content.

00:08:44.080 --> 00:08:48.310
And then that's going to come
from this .$.input.value.

00:08:48.310 --> 00:08:50.890
So that's just our
input textfield.

00:08:50.890 --> 00:08:53.604
And after someone
hits the Add button,

00:08:53.604 --> 00:08:55.270
it'd be nice to clear
out the text field

00:08:55.270 --> 00:08:56.690
so it can keep adding to-dos.

00:08:56.690 --> 00:08:58.090
So right after we
push the value,

00:08:58.090 --> 00:09:03.255
we'll also say
this.$.input.value equals no.

00:09:05.830 --> 00:09:09.270
Let's switch over to our
terminal and fire this up.

00:09:09.270 --> 00:09:18.280
So we'll say firebase serve,
and then go to localhost 5000.

00:09:18.280 --> 00:09:23.250
We will open up our
console because errors

00:09:23.250 --> 00:09:24.850
happen sometimes.

00:09:24.850 --> 00:09:26.920
We will go, and we will
start typing a note.

00:09:26.920 --> 00:09:28.030
So let's see.

00:09:28.030 --> 00:09:32.584
We'll say, "Hello
Polycasters," and we'll add it.

00:09:32.584 --> 00:09:33.250
And there we go.

00:09:33.250 --> 00:09:35.970
Now it's showing up
inside of our list.

00:09:35.970 --> 00:09:38.770
So that just sort of confirms
that everything worked.

00:09:38.770 --> 00:09:41.650
We could, if we want, though,
go over to the Firebase console,

00:09:41.650 --> 00:09:43.540
go back to the Data
tab, and you can

00:09:43.540 --> 00:09:46.630
see these green rectangles
indicate that we just wrote

00:09:46.630 --> 00:09:48.340
some data to the database.

00:09:48.340 --> 00:09:51.850
So you can see users,
my crazy user ID, notes,

00:09:51.850 --> 00:09:53.110
and then this unique ID.

00:09:53.110 --> 00:09:55.990
So every time you push
something to Firebase--

00:09:55.990 --> 00:09:58.330
any time you're working
with array-like data--

00:09:58.330 --> 00:10:01.650
instead of using numeric
indices like 0, 1, 2,

00:10:01.650 --> 00:10:03.684
Firebase will actually
create unique IDs.

00:10:03.684 --> 00:10:05.350
And this is really
useful because if you

00:10:05.350 --> 00:10:07.510
have a bunch of different
people all trying

00:10:07.510 --> 00:10:09.920
to push to the database
at the same time,

00:10:09.920 --> 00:10:12.790
if you were using just
numeric keys like 0, 1, 2,

00:10:12.790 --> 00:10:15.160
you could probably end up
with some weird transactional

00:10:15.160 --> 00:10:15.726
issues.

00:10:15.726 --> 00:10:17.350
So instead, Firebase
creates these sort

00:10:17.350 --> 00:10:19.340
of unique identifiers.

00:10:19.340 --> 00:10:21.490
So it can do the
bookkeeping after the fact

00:10:21.490 --> 00:10:23.770
to make sure data gets
synchronized and mushed

00:10:23.770 --> 00:10:25.317
together in the right ordering.

00:10:25.317 --> 00:10:27.900
And I can see inside of here the
actual value content, "Hello,

00:10:27.900 --> 00:10:29.190
Polycasters."

00:10:29.190 --> 00:10:31.180
What's cool about the
Firebase database--

00:10:31.180 --> 00:10:33.840
this is probably my absolute
favorite feature of Firebase--

00:10:33.840 --> 00:10:36.229
is it's super easy to
play around with the data

00:10:36.229 --> 00:10:37.020
once it's in there.

00:10:37.020 --> 00:10:41.520
So for instance, if I want to
change this to finish the demo,

00:10:41.520 --> 00:10:44.460
I can just update the text--
so "Finish this demo"--

00:10:44.460 --> 00:10:45.241
and hit Enter.

00:10:45.241 --> 00:10:47.740
And now everything turns yellow
to indicate that it changed.

00:10:47.740 --> 00:10:50.650
I go back to my
note-taking app, and you

00:10:50.650 --> 00:10:54.310
can see that that value has
been updated here, as well.

00:10:54.310 --> 00:10:55.980
So we can add some more to-dos.

00:10:55.980 --> 00:10:58.560
We could say, "Go out and vote."

00:10:58.560 --> 00:11:02.270
It is November 8 as
I'm recording this.

00:11:02.270 --> 00:11:09.060
And then we will say,
"Hopefully celebrate??"

00:11:09.060 --> 00:11:12.520
So we can keep adding things
to this to-do list if we want.

00:11:12.520 --> 00:11:14.020
The next thing I
want to do, though,

00:11:14.020 --> 00:11:17.370
is I want to be able to delete
items off of my to-do list.

00:11:17.370 --> 00:11:20.200
And this is pretty
easy to do, as well.

00:11:20.200 --> 00:11:24.180
So we go back to
our code editor,

00:11:24.180 --> 00:11:27.000
and I'm going to add a
couple more imports up here

00:11:27.000 --> 00:11:27.687
to the top.

00:11:38.770 --> 00:11:40.400
So I'm going to drop in.

00:11:40.400 --> 00:11:40.980
Let's see.

00:11:40.980 --> 00:11:42.354
I've got a couple
of these saved.

00:11:42.354 --> 00:11:44.180
So I'll drop in a
paper-input button,

00:11:44.180 --> 00:11:46.510
and I'm also going to
drop in iron-icons.

00:11:46.510 --> 00:11:50.650
Now, I'm only going to use one
icon from the iron-icons set.

00:11:50.650 --> 00:11:53.370
And so normally, I
would say if you're

00:11:53.370 --> 00:11:56.850
using only a handful of icons
from the iron-icons set,

00:11:56.850 --> 00:12:00.210
it's best to go and
create your own icon set.

00:12:00.210 --> 00:12:03.150
And you can do that pretty
easily using iron-iconset-svg,

00:12:03.150 --> 00:12:05.220
and literally just copy
and pasting the stuff out

00:12:05.220 --> 00:12:07.080
of iron-icons.

00:12:07.080 --> 00:12:08.910
But because we're
just doing a demo,

00:12:08.910 --> 00:12:11.520
I'm not going to go through
making my entire icon set.

00:12:11.520 --> 00:12:13.650
So I'm going to use
iron-icons directly.

00:12:13.650 --> 00:12:15.240
But for performance
overhead, it's

00:12:15.240 --> 00:12:17.820
often a good idea just to
create your own icon set.

00:12:17.820 --> 00:12:20.190
So I'm going to include
a paper-icon-button.

00:12:20.190 --> 00:12:22.230
And then basically
right after where

00:12:22.230 --> 00:12:25.020
we've written the
content for our note,

00:12:25.020 --> 00:12:28.410
I'm just going to drop
in a paper-icon-button.

00:12:28.410 --> 00:12:32.999
I'm giving it an icon of
clear so it'll be like an x.

00:12:32.999 --> 00:12:35.040
And then I've got this
property here called note,

00:12:35.040 --> 00:12:38.040
and I'm actually just
setting a property

00:12:38.040 --> 00:12:39.280
on the paper-icon-button.

00:12:39.280 --> 00:12:44.610
I'm setting a reference
to the entire note object

00:12:44.610 --> 00:12:46.797
that this line item
is referring to.

00:12:46.797 --> 00:12:48.630
And the reason I'm doing
that is because I'm

00:12:48.630 --> 00:12:51.360
going to use the
key of that note

00:12:51.360 --> 00:12:54.690
to then go on and
delete it in Firebase.

00:12:54.690 --> 00:12:58.215
And so lastly, I've got this
on-tap event listener here,

00:12:58.215 --> 00:13:00.550
and I'm saying I want to
call this remove function.

00:13:00.550 --> 00:13:04.630
So let's implement
that remove function.

00:13:04.630 --> 00:13:09.420
So I'm going to say remove is
a function-- gets an event.

00:13:09.420 --> 00:13:11.040
So we'll say that
the key is equal

00:13:11.040 --> 00:13:13.955
to e.CurrentTarget.note.key.

00:13:18.420 --> 00:13:21.810
And I think maybe they use $key
to reference it in Firebase.

00:13:21.810 --> 00:13:24.070
Note.key-- I think that's right.

00:13:24.070 --> 00:13:25.080
Yep.

00:13:25.080 --> 00:13:31.050
And then we're going to
say this.$.query.child,

00:13:31.050 --> 00:13:32.910
and then we will
give it the key.

00:13:32.910 --> 00:13:38.070
We're giving it this value right
here-- this.child.key.remove.

00:13:38.070 --> 00:13:40.680
So that basically says
go to the database,

00:13:40.680 --> 00:13:44.040
find the object that
matches this key, delete it.

00:13:44.040 --> 00:13:46.680
So go back to [INAUDIBLE].

00:13:46.680 --> 00:13:49.710
Actually, before I do that,
I'm going to drop in some CSS,

00:13:49.710 --> 00:13:51.570
as well, to make this
look really pretty.

00:13:51.570 --> 00:13:54.095
So right above our
Firebase off, we'll

00:13:54.095 --> 00:13:56.232
drop in a big style block.

00:13:56.232 --> 00:13:58.440
And honestly, you don't
really need to worry too much

00:13:58.440 --> 00:13:59.260
about what I'm doing here.

00:13:59.260 --> 00:14:00.750
I'm just sort of
positioning things

00:14:00.750 --> 00:14:02.280
so our icon's
floating to the right

00:14:02.280 --> 00:14:04.370
and our text is
to the left using

00:14:04.370 --> 00:14:06.754
iron-flex-layout--
nothing too interesting.

00:14:06.754 --> 00:14:08.670
So I'm not going to spend
too much time on it.

00:14:08.670 --> 00:14:10.400
But I just wanted the
demo to look nice.

00:14:10.400 --> 00:14:13.930
I'd go back to [INAUDIBLE]--
refresh the page.

00:14:13.930 --> 00:14:16.470
And now we have our
notes showing up here.

00:14:16.470 --> 00:14:18.720
We've got these Xs
showing up here,

00:14:18.720 --> 00:14:20.850
and I can go and X them out.

00:14:20.850 --> 00:14:22.380
And who, we got an error.

00:14:22.380 --> 00:14:26.230
This.$.query.child
remove is not a function.

00:14:26.230 --> 00:14:26.730
What?

00:14:26.730 --> 00:14:28.442
Let's see what I
typed wrong here.

00:14:31.930 --> 00:14:34.770
I need to have ref.child.

00:14:34.770 --> 00:14:35.820
Let's try that again.

00:14:35.820 --> 00:14:40.390
Refresh the page, and we will--
boom-- start deleting items.

00:14:40.390 --> 00:14:41.550
Yeah, yeah.

00:14:41.550 --> 00:14:43.080
And we win.

00:14:43.080 --> 00:14:45.420
We're all done, I think.

00:14:45.420 --> 00:14:47.460
So that about
covers it for today.

00:14:47.460 --> 00:14:49.140
We covered some of
the basics of working

00:14:49.140 --> 00:14:50.306
with the real-time database.

00:14:50.306 --> 00:14:53.579
We've got user authentication
working with this app.

00:14:53.579 --> 00:14:55.620
The next episode, I think
I want to explore maybe

00:14:55.620 --> 00:14:58.860
how we deploy this thing and
get it working on Firebase

00:14:58.860 --> 00:15:01.749
hosting-- might try to come
up with some other interesting

00:15:01.749 --> 00:15:03.540
topics to include in
that episode, as well.

00:15:03.540 --> 00:15:05.940
If there's anything that maybe
you're interested in seeing,

00:15:05.940 --> 00:15:07.320
please leave me a
comment down below

00:15:07.320 --> 00:15:09.510
and I can try and work that
in, or you can hit me up

00:15:09.510 --> 00:15:12.313
on a social network of your
choosing at #AskPolymer.

00:15:12.313 --> 00:15:14.062
As always, thank you
so much for watching,

00:15:14.062 --> 00:15:15.516
and I'll see you next time.

00:15:15.516 --> 00:15:16.140
[MUSIC PLAYING]

00:15:16.140 --> 00:15:16.764
Hey, what's up?

00:15:16.764 --> 00:15:19.260
Thank you so much for watching
this episode of "Polycast."

00:15:19.260 --> 00:15:22.050
If you want to check out
more, I got some over here

00:15:22.050 --> 00:15:23.670
on the playlist.

00:15:23.670 --> 00:15:25.770
And you can also always
click the Subscribe button

00:15:25.770 --> 00:15:28.350
and get notified when
we launch new episodes.

00:15:28.350 --> 00:15:30.200
Thanks for watching.

