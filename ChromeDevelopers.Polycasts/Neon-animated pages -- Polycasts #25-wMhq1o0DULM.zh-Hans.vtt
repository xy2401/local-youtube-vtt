WEBVTT
Kind: captions
Language: zh-Hans

00:00:03.092 --> 00:00:04.050
各位 Polycasters  大家好
Hey there, Polycasters.

00:00:04.050 --> 00:00:05.150
我是 Rob
Rob here.

00:00:05.150 --> 00:00:09.259
对于优秀的 Web 应用来说  动画是必不可少的
Animation is one of the hallmarks of a really great web experience.

00:00:09.259 --> 00:00:11.175
不仅仅是因为它能让你的应用看上去很炫
Not only does it make your app just look cool.

00:00:11.175 --> 00:00:14.082
你还可以利用动画引导用户转向
But you can use them to navigate the user from one

00:00:14.082 --> 00:00:15.290
你希望的用户关注的页面
area of interest to the next.

00:00:15.290 --> 00:00:18.860
更重要的是动画使得网站的整体效果显得十分引人注目
And ultimately, that makes everything much more engaging.

00:00:18.860 --> 00:00:20.680
在之前的一部视频里
Now, in a previous video, I showed you

00:00:20.680 --> 00:00:24.266
我为大家展示了如何用动画为单个元素增加效果
how to animate a single item using an animation behavior.

00:00:24.266 --> 00:00:25.640
不过今天在这里我会为大家讲解
But today I want to teach you how

00:00:25.640 --> 00:00:28.120
如何为整个应用添加动画
to animate whole sections of your app,

00:00:28.120 --> 00:00:31.440
将共有的元素从当前状态转向下一个状态
bringing shared elements from one state to the next.

00:00:31.440 --> 00:00:33.980
要实现这个目标  我们需要用到一个叫做 Neon-Animated-Pages
And to do this, we're going to use a component called

00:00:33.980 --> 00:00:36.283
的元素
Neon Animated Pages.

00:00:36.283 --> 00:00:36.960
好吧
OK.

00:00:36.960 --> 00:00:38.960
这是我们要实现的第一个模块
So this is the first thing we're going to build.

00:00:38.960 --> 00:00:41.050
它是一个特别简单的应用程序
It is a very simple application.

00:00:41.050 --> 00:00:44.900
在这个页面中  我们会添加一个设置按钮
And we are going to add a little Settings menu to this page,

00:00:44.900 --> 00:00:46.780
当你点击它的时候
so that when you click on it, it's

00:00:46.780 --> 00:00:48.710
会产生一些特别漂亮的效果
going to do some really nifty transitions.

00:00:48.710 --> 00:00:51.290
它会通过滑动动画切换到另一个页面
It's going to actually slide the other page in.

00:00:51.290 --> 00:00:55.170
当你取消它的时候  它会将之前的页面
And when you cancel it, it's going to sort of push

00:00:55.170 --> 00:00:56.830
以“推”的方式切换回去
the old page back over.

00:00:56.830 --> 00:00:57.950
是吧
Right?

00:00:57.950 --> 00:00:59.550
非常棒的效果
So pretty cool stuff there.

00:00:59.550 --> 00:01:03.940
在开始之前  我们先来看看工程里的
To start off, we are going to jump into our Index file

00:01:03.940 --> 00:01:05.089
Index 文件
for this project.

00:01:05.089 --> 00:01:06.630
首先要做的是
And the first thing we're going to do

00:01:06.630 --> 00:01:09.430
添加一些 import 代码
is we are just going to load in some imports.

00:01:09.430 --> 00:01:12.180
这里我们需要引用 Neon-Animated-Pages  
So we're going to pull in Neon Animated Pages as well

00:01:12.180 --> 00:01:15.350
把它作为 iron-flex-layout 类  
as the iron-flex-layout classes, which we talked about

00:01:15.350 --> 00:01:18.620
我们在上一集视频中已经聊过相关的内容  所以这里可以直接使用
in our last episode, so we can use some layout classes.

00:01:18.620 --> 00:01:20.580
在我的 body 块的下面
And then down inside of my body, I'm

00:01:20.580 --> 00:01:23.505
我要添加一个 dom-bind 模板
going to just drop in a dom-bind template,

00:01:23.505 --> 00:01:25.880
这样我就能在这个代码空间中使用数据绑定
so I can use data bindings in this space.

00:01:25.880 --> 00:01:28.890
我会在这里添加 neon-animated-pages 元素
I'm going to add a neon-animated-pages element right there.

00:01:28.890 --> 00:01:31.473
你会发现我已经提前做了一些工作  并且用到了这里的一些布局类
And you can see that I've also gone ahead and actually applied

00:01:31.473 --> 00:01:34.360
所以我的 body 块会使用 flexbox
some of those layout classes, so that my body is using flexbox

00:01:34.360 --> 00:01:37.850
过一会大家就会看到
to allow me to, as you'll see in a second,

00:01:37.850 --> 00:01:40.440
flexbox 会拉伸 neon-animated-pages 元素
flex the neon-animated-pages element,

00:01:40.440 --> 00:01:42.750
这样它就能占满整个屏幕
so it takes up the entire screen.

00:01:42.750 --> 00:01:45.680
接下来我会为它添加一个 selected 属性
I'm also going to give it a selected attribute.

00:01:45.680 --> 00:01:48.920
这和我们上次在 Iron Pages 中所做的工作一样
And this is just like what we did in our Iron Pages demo

00:01:48.920 --> 00:01:52.600
Neon-Animated-Pages 会
last time, where Neon Animated Pages is going

00:01:52.600 --> 00:01:56.220
根据当前 selected index 的值来显示当前的子元素
to look at whatever the selected index is and display that child.

00:01:56.220 --> 00:01:59.470
如果 selected index 等于 0  那么它会显示第一个子元素
So if the selected index is 0, it's going to display its first child.

00:01:59.470 --> 00:02:02.160
如果 index 等于 1  它会显示第二个子元素  以此类推
If it's 1, it'll display the second child, and so on,

00:02:02.160 --> 00:02:04.950
就和 Iron Pages 的效果一样
just like Iron Pages does.

00:02:04.950 --> 00:02:08.830
所以它为我们提供了一套实现思路的通用框架
So that gives us a little bit of a boilerplate to work from.

00:02:08.830 --> 00:02:10.710
在这里为模板添加 ID
I'm going to add an ID to this template,

00:02:10.710 --> 00:02:14.100
这样就能在 JavaScript 中关联它
so I can select it down in JavaScript.

00:02:14.100 --> 00:02:16.390
然后再添加 script 标签
And then I will write out a little script tag.

00:02:16.390 --> 00:02:20.410
然后继续  并调用 querySelector
And just go ahead and querySelector for my app there.

00:02:20.410 --> 00:02:24.240
把它的初始值设置为 0
And give it an initial selected value of 0.

00:02:24.240 --> 00:02:26.230
这样一来  
So this way, Animated Pages is going

00:02:26.230 --> 00:02:28.181
Animated Pages 会显示第一个子元素
to try to display its first child.

00:02:28.181 --> 00:02:29.930
我们再添加两个子元素
We're going to drop in two more elements--

00:02:29.930 --> 00:02:31.319
list-page 和 settings-page
list-page and settings-page.

00:02:31.319 --> 00:02:33.360
我们会在这两个元素之间进行
Those are going to be the two elements that we're

00:02:33.360 --> 00:02:35.690
转换
going to transition between.

00:02:35.690 --> 00:02:38.050
先为它们添加一些 imports
So I'll go add some imports for them.

00:02:40.700 --> 00:02:42.680
我们基本弄得差不多了
And then we are pretty much ready to rock.

00:02:42.680 --> 00:02:46.250
接下来我们定义一下 list-page 的样式
So let's start by defining what the list page is going to look like.

00:02:46.250 --> 00:02:49.310
这样我们就能切换到那个页面
So we can switch over to that tab.

00:02:49.310 --> 00:02:51.900
这是特别典型的元素
And it's pretty typical element here.

00:02:51.900 --> 00:02:54.320
这里我已经添加了 style 标签和
I've got my style tag and my template tab

00:02:54.320 --> 00:02:57.910
template 标签页 不过由于它的代码太多  所以整块代码自动收缩了
collapsed right now, because they're full of just placeholder markup.

00:02:57.910 --> 00:03:00.320
如果我把它扩展开  你会看到这里有一大堆 HTML
So if I expand that, you can see there's a bunch of HTML in there.

00:03:00.320 --> 00:03:02.611
不过大家不需要担心这些
But you don't actually need to worry about any of that,

00:03:02.611 --> 00:03:05.319
在这个演示程序中所涉及到的元素都是特别简单的
because it's all just dummy placeholder content

00:03:05.319 --> 00:03:06.360
大家一看即懂
for the sake of the demo.

00:03:06.360 --> 00:03:10.126
所以虽然看上去一大堆东西  不过大家可以忽略大部分
So a lot of stuff, but you can pretty much ignore it.

00:03:10.126 --> 00:03:14.040
我们继续  这里需要再添加一些引用
To get rolling, though, I'm going to import a few items here.

00:03:14.040 --> 00:03:16.850
这里引用 neon-animatable-behavior
I'm going to import the neon-animatable-behavior, which

00:03:16.850 --> 00:03:20.380
大家也许还记得在之前 Neon Animation 相关的视频中也讲到过这些
you might remember from our previous episode on Neon Animation.

00:03:20.380 --> 00:03:21.810
接下来我会添加两个动画
And then I'm going to pull in two

00:03:21.810 --> 00:03:25.852
slide-from-left (从左侧滑入)动画和 fade-out-animation (淡出)动画
animations-- slide-from-left animation and fade-out-animation.

00:03:25.852 --> 00:03:27.310
slide-from-left 会使页面
So slide-from-left is going to make

00:03:27.310 --> 00:03:30.450
从屏幕左边滑入
the page appear to come from outside the left edge

00:03:30.450 --> 00:03:33.692
然后滑到页面中间  就像这样
of the screen onto the center of the page like that.

00:03:33.692 --> 00:03:35.650
而 fade-out-animation
And then the fade-out-animation, as it implies,

00:03:35.650 --> 00:03:37.800
它会将页面淡出屏幕
is just going to have the page fade out.

00:03:37.800 --> 00:03:41.270
我们往下看
So then let us go down here and like we've

00:03:41.270 --> 00:03:44.390
和我们之前实现演示应用的过程一样  这里先创建一个属性对象
done in previous animation examples, we'll create a properties object.

00:03:44.390 --> 00:03:47.810
这里我们添加一个动画设置属性
We'll create an animation config property.

00:03:47.810 --> 00:03:50.840
然后我会为它添加两个动画  一个入场动画
And then I'm going to give it two animations, an entry

00:03:50.840 --> 00:03:52.465
一个离场动画
and an exit animation.

00:03:52.465 --> 00:03:54.840
我会使用我们引用的动画
And we're going to use those animations that we imported.

00:03:54.840 --> 00:03:58.240
所以我们的入场动画就是 slide-from-left
So our entry animation will be slide from left.

00:03:58.240 --> 00:04:00.410
而我们的离场动画就是 fade-out
Our exit will be fade out.

00:04:00.410 --> 00:04:05.010
还有我们需要记得引用 neon-animation-behavior
We also need to remember to include that neon-animatable-behavior.

00:04:05.010 --> 00:04:07.910
如果大家对这个不是特别熟悉
Now, if this does not look familiar to you,

00:04:07.910 --> 00:04:10.960
请大家去看一下我们之前的关于 Neon Animation
please, please, please go check out our previous episode

00:04:10.960 --> 00:04:12.460
的视频
on Neon Animations.

00:04:12.460 --> 00:04:15.135
那部视频中会解释这些‘行为’是如何工作的
That will explain how these behaviors are working

00:04:15.135 --> 00:04:16.760
并且帮大家补充一些背景知识
and give you a little bit more context.

00:04:16.760 --> 00:04:18.760
不过大家如果对这个比较熟悉
But for those of you who are familiar with this,

00:04:18.760 --> 00:04:21.300
那么我们就可以继续了
we can just kind of steam right along.

00:04:21.300 --> 00:04:23.010
这里我们已经添加了该行为
So we've added that behavior.

00:04:23.010 --> 00:04:25.880
并且所有的动画对象都已经设置好了
We've got our animation object all set up.

00:04:25.880 --> 00:04:28.110
所以 list-page 基本上完成了
So the list page is pretty much done.

00:04:28.110 --> 00:04:31.430
我觉得应该可以从 settings-page 转向 list-page
I think we're ready to switch over to our settings page.

00:04:31.430 --> 00:04:34.240
模板里和标签里都是些特简单的内容  
And again, you know, it's full of dummy content

00:04:34.240 --> 00:04:35.850
大家懂的
in the template and in the style tag.

00:04:35.850 --> 00:04:39.859
所以大家不用关心这里的内容
So nothing that you really need to worry about there just yet.

00:04:39.859 --> 00:04:41.400
我们还要实现相同的东西
But we're going to do the same thing.

00:04:41.400 --> 00:04:44.100
先引用 neon-animatable-behavior
We're going to import the neon-animatable-behavior

00:04:44.100 --> 00:04:46.350
和一对转换动画
and then a couple transitions.

00:04:46.350 --> 00:04:48.100
从右侧滑入
Slide from right.

00:04:48.100 --> 00:04:50.010
然后向右侧滑出
And then slide right.

00:04:50.010 --> 00:04:52.260
从右侧滑入的意思就是
So slide from right means basically

00:04:52.260 --> 00:04:54.850
从屏幕的边界外面滑入到屏幕正中央
come from off screen to being on screen.

00:04:54.850 --> 00:04:58.910
而向右滑动的意思是东西本身已经在屏幕中了 
And slide right means you're already on screen, push off

00:04:58.910 --> 00:05:00.250
只是将它滑动到右边
to the right-hand side.

00:05:00.250 --> 00:05:01.410
帅吧
Cool?

00:05:01.410 --> 00:05:03.840
所以就和我们在 list 页面上所做的一样
So just like we were doing with our list page,

00:05:03.840 --> 00:05:07.680
接下来我们会继续实现这里的行为
we're going to go ahead and implement the behavior.

00:05:07.680 --> 00:05:10.194
这里我们会用到 neon-animatable
So we're going to roll in neon-animatable.

00:05:10.194 --> 00:05:11.610
我们会创建一个属性对象
We're going to create a properties

00:05:11.610 --> 00:05:16.130
它带有一个设置属性
object with an animation config property.

00:05:16.130 --> 00:05:18.010
包括入场和离场动画
Entry and exit animations.

00:05:18.010 --> 00:05:20.360
对于入场动画  
And for entry, we're going to say

00:05:20.360 --> 00:05:23.140
我觉得我们所期望的效果是
that we want this guy to-- I believe we're going

00:05:23.140 --> 00:05:24.280
从右侧滑入
to slide in from the right.

00:05:24.280 --> 00:05:24.830
好吧
Yep.

00:05:24.830 --> 00:05:27.780
而我们的离场动画  我们让页面从右边出去
And then for our exit, we will slide out to the right.

00:05:27.780 --> 00:05:29.410
而这两个动画都会
And both times, the node is just going

00:05:29.410 --> 00:05:32.040
引用这个元素本身
to refer to this element itself.

00:05:32.040 --> 00:05:33.590
所以我们搞定了页面
So we've got our two pages.

00:05:33.590 --> 00:05:36.720
同时与页面相关的动画也准备就绪了
They've got their animations already set up and ready to go.

00:05:36.720 --> 00:05:38.120
接下来我们转向浏览器
Let's switch over to the browser.

00:05:38.120 --> 00:05:39.910
我们可以先预览一下
We can actually preview this.

00:05:39.910 --> 00:05:42.290
而我只需要利用一些开发工具上的小技巧即可
And what I'm going to do is a little dev tools trickery,

00:05:42.290 --> 00:05:43.610
大家之前也看到我用过类似的方式
which you've seen me do before.

00:05:43.610 --> 00:05:47.040
在开发工具中  我已经在这里选上了 neon-animated-pages
I've got neon-animated-pages selected right here in the dev tools.

00:05:47.040 --> 00:05:48.980
同时我也打开了控制台
And I've got my console open.

00:05:48.980 --> 00:05:52.910
当我点击 $0 的时候  
So I can just hit $0, and that will actually

00:05:52.910 --> 00:05:56.720
它会帮我捕捉与 neon-animated-pages 相关的元素的引用
allow me to grab a reference to the neon-animated-pages element.

00:05:56.720 --> 00:05:59.024
所以我可以将所选的内容作为固定的值写在代码里
And I can just set selected to a hard-coded value.

00:05:59.024 --> 00:06:00.190
然后将它设置为 1
So I'll just switch it to 1.

00:06:00.190 --> 00:06:01.356
大家可以看到它的效果
And you'll see what happens.

00:06:01.356 --> 00:06:02.320
页面变化了
The page changes.

00:06:02.320 --> 00:06:03.710
当我把它变会 0 的时候
I switch it back to 0.

00:06:03.710 --> 00:06:05.880
页面回来了  对吧
The page goes back, right?

00:06:05.880 --> 00:06:07.110
设置为 1
Set it to 1.

00:06:07.110 --> 00:06:08.920
页面变化
Page changes.

00:06:08.920 --> 00:06:10.380
设置回 0  页面回来
Back to 0, page goes back.

00:06:10.380 --> 00:06:13.959
现在  我们在页面的转换中加入了非常酷的动画
Now, we've got this really cool relationship between these animations.

00:06:13.959 --> 00:06:15.500
你可以看出前后动画的衔接
You can see how they sort of play off

00:06:15.500 --> 00:06:18.372
在一些移动设备上
of one another, which looks really nice on perhaps

00:06:18.372 --> 00:06:19.580
会显得特别棒
a mobile device of some kind.

00:06:19.580 --> 00:06:21.204
手动修改这个值
It is a little bit of a bummer, though,

00:06:21.204 --> 00:06:24.410
显然是有点懒人风格的做法
to have to manually change the selected value in this way.

00:06:24.410 --> 00:06:25.472
我们来修改一下
So let's fix that.

00:06:25.472 --> 00:06:26.930
这里我们需要做的是
And what we're going to do is we're

00:06:26.930 --> 00:06:28.721
让我们的元素能够分发事件
going to have our elements dispatch events.

00:06:28.721 --> 00:06:31.810
当我们收到这些事件的时候就通知切换动画元素
When we hear those events, we'll tell the animated pages element

00:06:31.810 --> 00:06:32.820
更新页面
to update.

00:06:32.820 --> 00:06:36.160
所以我们可以在这个模板中添加实现代码
So we can actually pop inside of the template there.

00:06:36.160 --> 00:06:38.200
这里我要利用一下 Settings 按钮
And I'm going to take the Settings button

00:06:38.200 --> 00:06:41.980
在它里面加入 on-tap handler  和 showSettings 方法
and just give it an on-tap handler and a method called showSettings.

00:06:41.980 --> 00:06:44.650
要实现我们的目标  这里只要触发一个叫做 showSettings 的事件
And then to implement that, I'm just going to fire an event

00:06:44.650 --> 00:06:45.727
即可
called showSettings.

00:06:45.727 --> 00:06:47.810
然后在 Settings 页面里实现相同的事
I'll do the exact same thing on the Settings page.

00:06:47.810 --> 00:06:50.240
这回针对 Cancel 按钮  还有添加另外一个 on-tap handler
I'll find its Cancel button, another on-tap handler.

00:06:50.240 --> 00:06:52.370
这里我们称它为 showList
This time we'll say showList.

00:06:52.370 --> 00:06:54.350
我们再实现另外一个事件
And we'll do another event.

00:06:54.350 --> 00:06:55.280
也就是 dispatcher
Dispatcher basically.

00:06:55.280 --> 00:06:58.290
所以我们这里会触发另外一个叫做 showList 的事件
So we're just going to fire off another event called showList.

00:06:58.290 --> 00:07:00.374
然后在我们的 Index 页面
And then back in our Index page, this

00:07:00.374 --> 00:07:02.040
这回我们会快速并且简单地实现它
is going to be a little quick and dirty.

00:07:02.040 --> 00:07:03.581
不过这里我打算
But what I'm going to do is I'll just

00:07:03.581 --> 00:07:06.450
仅仅在文档级别上监听这些事件
listen at the document level for those events.

00:07:06.450 --> 00:07:10.180
一般来讲  你所需要的就是 neon-animated-pages
So normally, you would probably have this neon-animated-pages

00:07:10.180 --> 00:07:10.980
和这些元素
and these elements.

00:07:10.980 --> 00:07:12.688
也许你有一个更加庞大的元素
You'd probably have this inside of maybe,

00:07:12.688 --> 00:07:14.640
里面包含了这些东西
like, a bigger element of some kind.

00:07:14.640 --> 00:07:18.200
你可以用 on-dash listener 来监听这些东西
So you could use, like, on-dash listeners to listen to these things.

00:07:18.200 --> 00:07:20.783
比如说你想要监听 on-show-settings
You'd be like, oh, yeah, I want to listen to on-show-settings.

00:07:23.660 --> 00:07:29.030
当我接收到它的时候  我会更新 selected 属性
And when I hear that, that's when I'll update my selected property.

00:07:29.030 --> 00:07:31.500
由于我们这里仅仅为大家提供一个示例
In this case, we're just doing a quick little demo here,

00:07:31.500 --> 00:07:33.671
所以我在这里只是在文件中进行监听
so we'll just listen right on the document.

00:07:33.671 --> 00:07:35.670
搞定这些以后  我们基本上差不多了
With that in place, I think we're actually good.

00:07:35.670 --> 00:07:37.340
返回到 Chrome
We can switch back to Chrome.

00:07:37.340 --> 00:07:39.722
当我们点击按钮的时候
And then when we click our little button up there,

00:07:39.722 --> 00:07:41.180
它会启动事件
it's going to fire the event, which

00:07:41.180 --> 00:07:45.300
该事件会触发动画页面的更新
is going to trigger a change in animated pages.

00:07:45.300 --> 00:07:46.810
然后我们来点击以下 Cancel 按钮
And we'll click that Cancel button.

00:07:46.810 --> 00:07:48.112
同样的
And likewise.

00:07:48.112 --> 00:07:49.720
[MUSIC PLAYING]

00:07:49.720 --> 00:07:51.290
如果你希望所有的页面
Now, if you want all of your pages

00:07:51.290 --> 00:07:52.970
都具有相同的转化效果
to use the same transitions, it would

00:07:52.970 --> 00:07:56.230
那么你就得把这段代码一次又一次复制粘贴
be really inconvenient to have to copy and paste that code

00:07:56.230 --> 00:07:57.846
太不方便了
over and over and over again.

00:07:57.846 --> 00:07:59.720
不过还好  我们可以通过把它
But thankfully, we can work around that using

00:07:59.720 --> 00:08:02.291
内建到元素内部来避免反复复制粘贴
a feature that's built into the element itself.

00:08:02.291 --> 00:08:02.790
好吧
OK.

00:08:02.790 --> 00:08:07.270
而在我们的第二个 demo 中  我这里有一个特别简单的转换动画
For our second demo, I've got this very simple transition thing.

00:08:07.270 --> 00:08:08.330
每一个都是一个页面
Each one of these is a page.

00:08:08.330 --> 00:08:10.460
每个颜色块都是一个页面
Each one of these big colored blocks is actually a page.

00:08:10.460 --> 00:08:12.376
而当我点击的时候  你可以看到
And as I'm clicking, you can see that they all

00:08:12.376 --> 00:08:15.880
他们都使用了同一个转换动画
use the exact same transition animation.

00:08:15.880 --> 00:08:19.760
我们来看一下代码  它看上去和我们的之前的示例一样
So looking at our code, it looks just like our old example.

00:08:19.760 --> 00:08:21.650
这里我们已经有一个 neon-animated-pages 元素了
We've got a neon-animated-pages element here.

00:08:21.650 --> 00:08:22.150
对吧 
Right?

00:08:22.150 --> 00:08:24.480
我们还用到一些布局类
We're using some layout classes.

00:08:24.480 --> 00:08:25.290
现在来优化一下
We're flexing it.

00:08:25.290 --> 00:08:27.979
这里有一个与已选数据相关的数据集
We've got a selected binding right there.

00:08:27.979 --> 00:08:29.520
在下一个方法中我会得到一个 handler
And then I've got this little handler

00:08:29.520 --> 00:08:31.160
添加它主要为了给大家演示
that I've added just for demo purposes

00:08:31.160 --> 00:08:34.130
这个 handler 叫 on-tap  里面引用了这个“next”方法
called on-tap, where I've got this next method.

00:08:34.130 --> 00:08:36.929
这里我会遍历一下已选的数据
And I'm just looping through possible selected values.

00:08:36.929 --> 00:08:39.664
这里会一直递增直到最大值为止
So we're incrementing up until we reach the max.

00:08:39.664 --> 00:08:41.900
然后返回来再循环
And then we're looping around again.

00:08:41.900 --> 00:08:46.600
大家可以看到我这里的元素都是一样的 对吧 
Now, I've got the same element in each of these slots, right?

00:08:46.600 --> 00:08:48.820
而我希望能够通过相同的转换方法
And I know that I'm going to want all of these

00:08:48.820 --> 00:08:49.980
处理这些数据
to use the same transition.

00:08:49.980 --> 00:08:51.590
即使我们这里没有相同的元素
Even if I didn't have the same element here,

00:08:51.590 --> 00:08:54.090
我仍然希望能够使用相同的转化方法来处理他们
maybe I would want all of them to use the same transition.

00:08:54.090 --> 00:08:58.830
所以与其单独处理每一个数据
So instead of having to go into each and every one and copy

00:08:58.830 --> 00:09:01.080
将行为一遍又一遍地复制黏贴
and paste that behavior over and over again,

00:09:01.080 --> 00:09:03.490
我这里可以利用
what I'm going to do is just take advantage

00:09:03.490 --> 00:09:06.670
动画页面所提供的一个特性
of this convenience feature that animated-pages offers,

00:09:06.670 --> 00:09:09.810
首先回到代码顶部
where I can go up to the top, and I can just

00:09:09.810 --> 00:09:12.720
在这里引用我想要使用的动画
import the animations that I want it to use,

00:09:12.720 --> 00:09:15.490
就好像我们之前构造动画元素一样
as if we were building an animatable element.

00:09:15.490 --> 00:09:19.225
不过这里我仅仅使用放大动画和淡出动画
But I'll just pull in a scale-up animation and a fade-out animation.

00:09:19.225 --> 00:09:21.660
然后我们会通知动画页面
And then we're just going to tell animated pages,

00:09:21.660 --> 00:09:23.850
对于入场动画
hey, for all of your entry animations,

00:09:23.850 --> 00:09:26.975
只需要播放放大动画即可
just play the scale-up animation for all of these.

00:09:26.975 --> 00:09:28.650
无所谓它的内容是什么
It doesn't matter what it is.

00:09:28.650 --> 00:09:29.520
就播放它吧
Just play that.

00:09:29.520 --> 00:09:33.132
而对于所有的离场动画  仅播放淡出动画
And for all the exit animations, just play the fade-out animation.

00:09:33.132 --> 00:09:34.840
所以如果你希望所有的页面
So if you know you want all of your pages

00:09:34.840 --> 00:09:38.790
都使用相同的入场和离场动画
to use the exact same intro and exit animations,

00:09:38.790 --> 00:09:40.300
这是一个便捷的方式
this is some shorthand that you can

00:09:40.300 --> 00:09:42.650
它能帮你省掉不少时间
do that will save you quite a lot of typing if you have

00:09:42.650 --> 00:09:44.920
而且适用于不同元素共享相同动画
a bunch of different elements that all basically

00:09:44.920 --> 00:09:46.300
的应用场景下
need the same transitions.

00:09:46.300 --> 00:09:48.633
所以有了它  一切都搞定了
So with this in place, we're actually pretty good to go.

00:09:48.633 --> 00:09:51.020
我们打开浏览器  点击一下试试
We can switch back to the browser and click on the thing.

00:09:51.020 --> 00:09:53.600
效果差不多
And we're going to get that exact same behavior.

00:09:53.600 --> 00:09:55.899
确实省了我们不少时间
And it's saved us quite a lot of typing.

00:09:55.899 --> 00:09:57.690
最后我想要实现的是
Now, the last thing that I want to touch on

00:09:57.690 --> 00:10:00.190
我在视频开头所提到的
is something that I promised at the beginning of the video--

00:10:00.190 --> 00:10:03.480
可以将元素从一个页面传递到下一个页面
this idea of being able to take elements and transition them

00:10:03.480 --> 00:10:06.270
还记得吧
from one page to the next, right?

00:10:06.270 --> 00:10:09.640
其实也就是利用 neon-animated-pages
Actually pulling along what neon-animated-pages

00:10:09.640 --> 00:10:12.100
内部的 shared elements (共享元素)
refers to as shared elements.

00:10:12.100 --> 00:10:14.430
那么我来为大家举个例子
So let me show you an example of doing that.

00:10:14.430 --> 00:10:16.200
这里有一个比较简单的应用
I've got a very simple app here.

00:10:16.200 --> 00:10:19.859
这里有一个“登入”按钮
And it's got this sort of large Sign In button of sorts.

00:10:19.859 --> 00:10:21.650
当我点击“登入”按钮的时候
And when I go click on that Sign In button,

00:10:21.650 --> 00:10:23.570
你可以看到它在进行切换
you'll see that it's going to transition

00:10:23.570 --> 00:10:26.350
并成为我下一个页面的顶部
and become the header of my next page.

00:10:26.350 --> 00:10:28.020
我们再重新做一遍  
So let's do that again, right?

00:10:28.020 --> 00:10:29.520
我已经得到了那个元素
So I've actually taken that element,

00:10:29.520 --> 00:10:33.420
然后把它变换成另一个页面的一个元素
and sort of morphed it into an element on another page,

00:10:33.420 --> 00:10:36.600
然后将这个元素从页面一转移到页面二
and sort of carried it from page one to page two.

00:10:36.600 --> 00:10:39.120
这个就是共享元素的转换
So again, this is a shared element transition.

00:10:39.120 --> 00:10:42.400
特别是这里  这个叫做 hero transition
And in particular, this one is called a hero transition

00:10:42.400 --> 00:10:43.950
或者 hero animation
or a hero animation.

00:10:43.950 --> 00:10:45.940
实现这个特别简单
So implementing this is actually pretty easy.

00:10:45.940 --> 00:10:48.590
虽然这些效果看上去特别复杂
Though the effects themselves look very sophisticated,

00:10:48.590 --> 00:10:51.130
当大家知道原理以后  就知道其实实现起来挺简单的
they're pretty easy to implement once you know how.

00:10:51.130 --> 00:10:53.780
而在我的主页  就像之前的示例
So in my Index page, again, just like the previous examples,

00:10:53.780 --> 00:10:56.120
我们已经有了 neon-animated-pages  对吧
I've got neon-animated-pages, right?

00:10:56.120 --> 00:10:58.090
我来改改
I'm flexing it.

00:10:58.090 --> 00:11:00.460
这里有已选的数据
It's got the selected binding there.

00:11:00.460 --> 00:11:05.542
用 next 方法的 handler 来切换页面
We're using a little cheating next handler to advance the page.

00:11:05.542 --> 00:11:07.250
这里有两个元素
And I've got two elements inside of here.

00:11:07.250 --> 00:11:09.580
一个叫做 main-page  但其实我应该
One is called main-page, though maybe I should

00:11:09.580 --> 00:11:10.840
叫它 sign-in-page
have called that sign-in-page.

00:11:10.840 --> 00:11:11.950
暂且 main-page
But main-page.

00:11:11.950 --> 00:11:14.890
还有 detail-page  它将会是页面的顶部
And detail-page, which is going to be the page with the header.

00:11:14.890 --> 00:11:16.092
所以这是我们的主页面
So this is our main page.

00:11:16.092 --> 00:11:17.550
我希望大家注意到
And I want you to notice that we've

00:11:17.550 --> 00:11:20.060
这里我们有一个 id 为 circle 的 div 标签
got this div with an ID of circle here.

00:11:20.060 --> 00:11:21.630
这点非常非常重要
So this is really, really important.

00:11:21.630 --> 00:11:23.480
我们之后会再研究这里
And we're going to come back to this later.

00:11:23.480 --> 00:11:25.850
现在只要记住它在这个页面里就行了
But just know that it exists inside of this page.

00:11:25.850 --> 00:11:28.720
在我们要实现它之前  先回到最上面检查一下
And before we do anything, I'm going to go up and check out

00:11:28.720 --> 00:11:29.750
引用
our imports.

00:11:29.750 --> 00:11:31.920
与 neon-animatable-behavior 稍有区别
So instead of the neon-animatable-behavior,

00:11:31.920 --> 00:11:33.360
这里我们用到了一个和它类似
I've actually got this thing which

00:11:33.360 --> 00:11:35.437
不过有一个更长的名字
is very similar, though an even longer name,

00:11:35.437 --> 00:11:37.395
叫做 neon-shared-element-animatable-behavior
called neon shared element animatable behavior.

00:11:40.220 --> 00:11:42.360
它实现了与 neon-animatable-behavior
So this actually implements all the same stuff

00:11:42.360 --> 00:11:43.900
相类似的东西
as the neon-animatable-behavior.

00:11:43.900 --> 00:11:46.760
不过它还提供了共享元素
But it gives us this magical shared element

00:11:46.760 --> 00:11:49.626
我们接下来会用到这个特性
extra awesome sauce, which we will use in just a second.

00:11:49.626 --> 00:11:51.250
这里我有两个动画
And then I've got two animations that I

00:11:51.250 --> 00:11:54.860
hero-animation 和 fade-out-animation
pulled in here-- hero-animation and fade-out-animation.

00:11:54.860 --> 00:11:57.680
接下来把他们实现了
So let's implement both of those right now.

00:11:57.680 --> 00:12:00.280
我们到代码下部  
So we'll go down and just like we've

00:12:00.280 --> 00:12:05.560
按照我们之前做的那样来实现  我们会将这个行为添加到元素中
done in previous examples, we will add the behavior to our element.

00:12:05.560 --> 00:12:08.196
这次  我们会添加 neon-shared-element
So this time, we're going to add the neon shared element

00:12:08.196 --> 00:12:09.029
animatable-behavior
animatable behavior.

00:12:11.222 --> 00:12:12.680
我们会创建一个属性对象
We will create a properties object.

00:12:12.680 --> 00:12:14.055
在这个属性对象中
And in that properties object, we

00:12:14.055 --> 00:12:17.170
我们会传入一个设置对象
will drop in an animation config object.

00:12:17.170 --> 00:12:19.391
这里我们添加入场和离场动画
We'll have entry and exit animations.

00:12:19.391 --> 00:12:21.140
入场动画不是特别重要
The entry animation doesn't really matter,

00:12:21.140 --> 00:12:22.560
因为我们不会在这个例子里用到它
because we're not going to play it in this example,

00:12:22.560 --> 00:12:24.189
这里我们只是把它放这里而已
but I'll just throw one in there.

00:12:24.189 --> 00:12:26.230
而离场动画  请注意这里
The exit animation, though-- pay attention here--

00:12:26.230 --> 00:12:29.910
这里我实际上创建了一组动画
I'm actually creating an array of animations-- so animations

00:12:29.910 --> 00:12:32.120
所以这些动画应该同时播放
that would be playing simultaneously.

00:12:32.120 --> 00:12:35.500
第一个动画应该是 hero-animation
The first one is going to be that hero-animation.

00:12:35.500 --> 00:12:39.800
现在我们给它赋一个 ID 属性
And we're going to give it an ID property.

00:12:39.800 --> 00:12:43.120
这里我们的目的是希望将 hero-animation 添加到
And we're going to say that we want to hero-animate

00:12:43.120 --> 00:12:46.040
id 为 hero 的元素  让它动起来
a thing with the idea of hero.

00:12:46.040 --> 00:12:51.130
这里引用的不是 CSS 里的 ID  开始的时候我也搞错了
And this does not refer to a CSS ID, which confused me at first.

00:12:51.130 --> 00:12:53.030
记住这个不是 CSS 的 ID
So this is not a CSS ID.

00:12:53.030 --> 00:12:57.490
我们将在 JavaScript 中定义这个 ID
This is an ID that we are going to define in JavaScript.

00:12:57.490 --> 00:13:00.810
暂时记住我们接下来要定义它
So kind of keep that in mind for the moment.

00:13:00.810 --> 00:13:03.260
然后要说的是这里的页面是起始页面
And then we're going to say that this page right here

00:13:03.260 --> 00:13:08.510
也就是说我们所引用的 hero 元素
is the from page, meaning that this hero element that we're

00:13:08.510 --> 00:13:11.680
将来自于这个页面
going to refer to is coming from this page,

00:13:11.680 --> 00:13:14.910
然后它会转向另外一个页面  当我们后面进行实现的时候
and it's going to another page, which we will demonstrate when

00:13:14.910 --> 00:13:16.385
会实现下一个元素
we implement the next element.

00:13:16.385 --> 00:13:17.760
然后我们要实现
And then we're going to implement

00:13:17.760 --> 00:13:21.076
第二个动画  也就是淡出动画
a second animation, which is just going to be fade-out.

00:13:21.076 --> 00:13:22.450
简单地说呢
And we're going to basically say,

00:13:22.450 --> 00:13:27.220
就是当我们退出的时候  这个页面里的所有元素都会淡出
everything else on this page should fade out when we're exiting.

00:13:27.220 --> 00:13:31.390
那么我们来定义一下这个 ID
So let's go define this hero ID thing.

00:13:31.390 --> 00:13:34.550
而我们要实现它的关键点就是这个
And the way we're going to do that is through this shared

00:13:34.550 --> 00:13:36.160
共享元素对象
elements object.

00:13:36.160 --> 00:13:38.830
所以请记住  我在上面这里已经有一个 circle 了
So remember, I've got this circle up here,

00:13:38.830 --> 00:13:40.510
没错  就是这个 id 为 circle 的东西
right, this thing with ID of circle.

00:13:40.510 --> 00:13:44.440
而它就是我希望进行 " hero 动画" 的目标
And that's really what I want to hero-transition.

00:13:44.440 --> 00:13:47.080
所以这里我将添加这个共享元素对象
So I'm going to add this shared elements object.

00:13:47.080 --> 00:13:50.500
而且我会告诉它
And I'm going to tell it-- by the way,

00:13:50.500 --> 00:13:52.740
顺便说一下  它看上去很像我们的动画设置对象
it looks a lot like our animation config object.

00:13:52.740 --> 00:13:56.245
这个值可以将对象与方法相关联
It's a value that turns a function [INAUDIBLE] an object.

00:13:56.245 --> 00:13:59.160
不过我要说的是当我们提到“主角”的时候
But we're going to say that when we say hero,

00:13:59.160 --> 00:14:02.700
我们真正所指的是这个 .$circle
what we're actually talking about is this .$circle.

00:14:02.700 --> 00:14:05.130
而我们这样做的原因是
And the reason why we do this is because this term

00:14:05.130 --> 00:14:10.160
因为它会同时在两个元素中被用到  起始页面和终点页面
is going to be used in both elements-- the from page and the to page.

00:14:10.160 --> 00:14:13.440
所以它是一个共享的内容  在不同页面中
So it's a shared term referring to different things

00:14:13.440 --> 00:14:15.000
引用不同的对象
on different pages.

00:14:15.000 --> 00:14:17.770
那么这里  hero 指的是这个 circle
So here, hero refers to that circle.

00:14:17.770 --> 00:14:19.975
接下来我们来实现 下一个页面  详细内容页面
Let's go implement the next page, the detail page.

00:14:19.975 --> 00:14:23.060
大家可以看到  这里我们添加了相同的引用代码
And you'll see that we've got the same imports pretty much.

00:14:23.060 --> 00:14:28.600
我们添加了 shared-element hero-animation fade-out-animation  fade-in
We've got shared-element, hero-animation, fade-out-animation, fade-in.

00:14:28.600 --> 00:14:30.620
我们还要实现我们的行为
We're going to also implement our behavior.

00:14:33.930 --> 00:14:37.220
这里我们要添加一个动画设置对象
We're going to drop in an animation config object.

00:14:37.220 --> 00:14:39.304
而离场动画并不是很重要
And for the exit animation, doesn't really matter,

00:14:39.304 --> 00:14:40.803
因为我们并不打算播放离场动画
because we're not going to play one.

00:14:40.803 --> 00:14:42.480
这里我简单添加一个离场动画
But I'll just add an exit animation.

00:14:42.480 --> 00:14:44.438
这里我们再回到入场动画
But here we are again with the entry animation.

00:14:44.438 --> 00:14:46.250
重申一下  它是一个动画队列
Again, it's an array of animations.

00:14:46.250 --> 00:14:49.690
并且记住我们使用的是 hero-animation
And note that we're using the hero animation.

00:14:49.690 --> 00:14:51.940
这里我们所引用的 ID 也是 hero
The ID that we're referring to is still hero.

00:14:51.940 --> 00:14:53.930
不过这里我们要说的是它是目的页面
But now we're saying that this is the to page.

00:14:53.930 --> 00:14:56.410
所以第一个元素是起始页面
So the first element was the from page.

00:14:56.410 --> 00:15:00.739
而这个目的页面就是 hero 要去的地方
This is the to page where hero is going to.

00:15:00.739 --> 00:15:02.780
而对于页面里的其他内容
And then for the rest of the content on the page,

00:15:02.780 --> 00:15:06.970
当我们进入页面的时候就让他们淡入即可
we're just going to fade it in when we're doing entry.

00:15:06.970 --> 00:15:09.790
然后我们要定义它的共享元素对象
And then we're going to go define its shared elements object.

00:15:09.790 --> 00:15:11.248
而这里我们要说的是
And what we're going to say here is

00:15:11.248 --> 00:15:13.910
当我们谈到这个元素的 hero 的时候
that when we say hero in this element,

00:15:13.910 --> 00:15:18.370
我们实际上所指的是 id 为 header 的元素  对吧
we're referring to our element with the ID of header, right?

00:15:18.370 --> 00:15:20.410
所以另外一个 hero 所指的是 circle
So hero in the other one refers to circle.

00:15:20.410 --> 00:15:24.630
这里的 hero 指的是我们的 header
Hero over here refers to our header.

00:15:24.630 --> 00:15:27.960
而 hero 的引用取决于 neon-animated-pages
And it is up to neon-animated-pages now

00:15:27.960 --> 00:15:30.360
也和 hero-animation-behavior 相关
and it is up to that hero animation behavior

00:15:30.360 --> 00:15:34.480
把我们的 hero 元素插入到 A 和 B 之间
to sort of interpolate between A and B,

00:15:34.480 --> 00:15:36.640
对吧  让我们从那里转到这里
right, to get us from there to here.

00:15:36.640 --> 00:15:37.140
对吧
Right?

00:15:37.140 --> 00:15:39.380
那么我们继续  试一下
So let's go and give that a shot.

00:15:39.380 --> 00:15:43.760
我们回到浏览器  点击以下圆圈
We will go back to our browser and click on our circle.

00:15:43.760 --> 00:15:48.140
大家可以看到我们在页面头部上添加了很棒的转换动画
And you see we get that nice transition over to our header.

00:15:48.140 --> 00:15:51.680
对于这种设计模式来说  这是一个非常简单的实现
Now, this is a pretty simple implementation of this pattern

00:15:51.680 --> 00:15:53.490
而且它的效果很棒
though it is a really cool effect.

00:15:53.490 --> 00:15:55.560
不过我希望告诉大家的是
But what I'd like to show you is if you go over

00:15:55.560 --> 00:15:57.860
如果到 elements.polymerproject.org 看一下 Elements 页面
to the Elements catalog at elements.polymerproject.org.

00:15:57.860 --> 00:16:01.810
在那里点击一下下面的 Neon Animation 按钮
And you click on this Neon Animation button down here,

00:16:01.810 --> 00:16:03.260
那里有一个特别棒的指导文档
there is this really awesome guide

00:16:03.260 --> 00:16:05.800
有很多关于 Neon Animation 的内容
full of really helpful stuff on Neon Animations.

00:16:05.800 --> 00:16:08.930
而在页面的最后  有很多很好的示例
But at the bottom, there are all of these really great demos.

00:16:08.930 --> 00:16:12.030
特别提一下  我今天所实现的例子的原型
And one in particular, which I sort of based this on,

00:16:12.030 --> 00:16:14.470
我记得好像叫 Squares to Circles 或者
is this one called, like, Squares to Circles or Circles

00:16:14.470 --> 00:16:15.670
Circles to Squares 之类的
to Squares, I think.

00:16:15.670 --> 00:16:18.472
而且它比之前我为大家展示的
And it is a much more advanced implementation

00:16:18.472 --> 00:16:20.680
更加完整  所有这些圆圈
of what I just showed you, where all of these circles

00:16:20.680 --> 00:16:24.520
都是动态的 hero-transition  效果非常棒
are actually dynamic hero transitions, which is really cool.

00:16:24.520 --> 00:16:26.560
不过它涉及到更多的代码
But it involves a fair bit more code.

00:16:26.560 --> 00:16:28.900
所以当你觉得你已经理解了 hero animation 的时候
So once you feel like you understand the original hero

00:16:28.900 --> 00:16:30.700
去看看这个例子
animation, go check this one out.

00:16:30.700 --> 00:16:33.660
去看看它的效果  然后看看它的实现方法
Go try it out and see how you do.

00:16:33.660 --> 00:16:35.330
不过现在大家已经知道了实现的方法
But now you know everything that you

00:16:35.330 --> 00:16:38.950
可以在你的 Polymer 应用中构建一些
need to start creating some really, really sick animations

00:16:38.950 --> 00:16:40.211
非常非常牛叉的动画
in your Polymer apps.

00:16:40.211 --> 00:16:42.585
所以下一次当你希望在应用中
So the next time you want to add a really fancy animation

00:16:42.585 --> 00:16:44.250
添加一个很棒的动画的时候 你可以说
to your application, you can just say,

00:16:44.250 --> 00:16:46.430
矮油！ 好像有个元素可以搞定它！
hey, there's an element for that.

00:16:46.430 --> 00:16:48.746
如果大家喜欢这个视频  请到最下方
Now, if you've enjoyed this video, be sure to go down

00:16:48.746 --> 00:16:50.370
点击一下订阅按钮
and click that little Subscribe button.

00:16:50.370 --> 00:16:52.140
大家的鼓励才是我们继续努力的动力
That's actually how we get to keep making these.

00:16:52.140 --> 00:16:54.080
如果大家有什么疑问  可以在下面的讨论区
And if you have questions, you can leave them for me

00:16:54.080 --> 00:16:55.180
给我留言
down in the comments.

00:16:55.180 --> 00:16:59.770
或者在社交网站的 #AskPolymer 话题中和我单聊
Or hit me up on a social network of your choosing at #AskPolymer.

00:16:59.770 --> 00:17:02.877
同样的  非常感谢大家观看  下次再见
As always, thank you so much for watching, and I'll see you next time.

00:17:02.877 --> 00:17:07.466
[MUSIC PLAYING]

