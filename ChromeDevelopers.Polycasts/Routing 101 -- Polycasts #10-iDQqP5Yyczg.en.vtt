WEBVTT
Kind: captions
Language: en

00:00:02.717 --> 00:00:03.300
Hey, everyone.

00:00:03.300 --> 00:00:03.799
What's up?

00:00:03.799 --> 00:00:04.600
It's Rob Dodson.

00:00:04.600 --> 00:00:07.100
Today I'm going to be taking
you one step closer to building

00:00:07.100 --> 00:00:09.090
your own single page
application by showing you

00:00:09.090 --> 00:00:11.805
how to handle URL changes
with a client-side router.

00:00:11.805 --> 00:00:13.820
So let's dive in.

00:00:13.820 --> 00:00:15.510
So if you've never
heard of it before,

00:00:15.510 --> 00:00:18.120
routing is the process of
determining what code to run

00:00:18.120 --> 00:00:20.704
when a URL is requested.

00:00:20.704 --> 00:00:23.120
In the world of routing, there's
basically two approaches.

00:00:23.120 --> 00:00:24.600
You can do all your
routing in JavaScript,

00:00:24.600 --> 00:00:25.975
and that's what
I'll cover today.

00:00:25.975 --> 00:00:28.870
This is called
imperative routing.

00:00:28.870 --> 00:00:30.743
Basically, you listen
for a route change.

00:00:30.743 --> 00:00:32.659
When you hear it, you
run a callback function.

00:00:32.659 --> 00:00:34.992
And inside that callback you
can do all sorts of things.

00:00:34.992 --> 00:00:37.624
You could tell core pages to
change which item is currently

00:00:37.624 --> 00:00:39.790
selected or you could set
a bunch of scope variables

00:00:39.790 --> 00:00:41.520
and update your bindings.

00:00:41.520 --> 00:00:43.860
And there's also
declarative routing,

00:00:43.860 --> 00:00:46.000
which I'll cover in
the next episode.

00:00:46.000 --> 00:00:47.850
Basically this is
doing the same thing,

00:00:47.850 --> 00:00:51.330
but using markup
instead of JavaScript.

00:00:51.330 --> 00:00:53.730
Now the difference between
imperative and declarative

00:00:53.730 --> 00:00:56.589
routing really comes down
to style and personal taste.

00:00:56.589 --> 00:00:58.130
Polymer doesn't have
an opinion here,

00:00:58.130 --> 00:01:01.330
so I'm going to start by showing
you how to do it imperatively,

00:01:01.330 --> 00:01:03.300
next episode we'll
do it declaratively,

00:01:03.300 --> 00:01:06.452
and then you can decide
which you prefer.

00:01:06.452 --> 00:01:08.910
And the first thing I'm going
to do is hop into my terminal

00:01:08.910 --> 00:01:13.348
and install a router
called page js using Bower.

00:01:13.348 --> 00:01:17.884
Then in my index, I'll load
page js with a script tag.

00:01:17.884 --> 00:01:19.300
And scrolling up
a bit, you'll see

00:01:19.300 --> 00:01:21.750
that I've got a similar
code from my last video.

00:01:21.750 --> 00:01:24.830
I've got a core pages element
inside an autobinding template.

00:01:24.830 --> 00:01:27.800
I've dropped links in the show
notes to that previous episode

00:01:27.800 --> 00:01:29.600
so you can review
it if you need to.

00:01:29.600 --> 00:01:32.920
In my core pages here,
I've got a value attribute

00:01:32.920 --> 00:01:33.840
set to data route.

00:01:33.840 --> 00:01:37.010
And I also got a selected value
set to a scope variable called

00:01:37.010 --> 00:01:37.510
route.

00:01:37.510 --> 00:01:39.010
And what this is
going to do is it's

00:01:39.010 --> 00:01:41.450
going to look to see if
any of these children

00:01:41.450 --> 00:01:42.860
match the current route.

00:01:42.860 --> 00:01:45.480
So if the route was
set to portfolio,

00:01:45.480 --> 00:01:48.490
it would see which child has a
matching data route attribute,

00:01:48.490 --> 00:01:51.050
go down, and display
this one right here.

00:01:51.050 --> 00:01:52.860
Now hopping into
my app js file, I'm

00:01:52.860 --> 00:01:55.780
going to grab a reference
to the autobinding template

00:01:55.780 --> 00:01:58.664
and distort in a
variable called app.

00:01:58.664 --> 00:02:01.080
Then I'll call the page js
function to define some routes.

00:02:04.270 --> 00:02:05.770
And lastly I'll
configure the router

00:02:05.770 --> 00:02:08.479
to use hashbang URLs
instead of the history API.

00:02:08.479 --> 00:02:10.020
And what this means
is that my routes

00:02:10.020 --> 00:02:13.960
are going to have a little
pound symbol and an exclamation

00:02:13.960 --> 00:02:18.820
point on the end of them versus
just using pretty URLs which

00:02:18.820 --> 00:02:21.677
might just have a slash and then
the actual name of the route.

00:02:21.677 --> 00:02:23.135
And the reason I'm
going this route

00:02:23.135 --> 00:02:25.550
is because it doesn't require
us to set up a server.

00:02:25.550 --> 00:02:26.702
Pretty URLs will.

00:02:26.702 --> 00:02:28.910
So hashbangs can be a little
bit easier to work with.

00:02:28.910 --> 00:02:31.600
But I encourage you to try
both out in your application.

00:02:31.600 --> 00:02:33.433
And the last thing I
have to do is write out

00:02:33.433 --> 00:02:35.950
the functions that'll run
when these routes match.

00:02:35.950 --> 00:02:39.160
So I'll create functions for
home, portfolio, and contact.

00:02:39.160 --> 00:02:42.220
And you can see that these
functions match the routes

00:02:42.220 --> 00:02:43.380
up here.

00:02:43.380 --> 00:02:46.280
Inside of these handlers, you
could run all sorts of code.

00:02:46.280 --> 00:02:49.490
You could fetch data or you
could redirect to other routes

00:02:49.490 --> 00:02:50.075
even.

00:02:50.075 --> 00:02:51.450
But to keep it
really simple, I'm

00:02:51.450 --> 00:02:53.408
just going to tell my
template to set its route

00:02:53.408 --> 00:02:55.384
property to a matching string.

00:02:55.384 --> 00:02:56.800
Now hopping in my
browser, you can

00:02:56.800 --> 00:03:00.120
see that as I update the
URL here in the address bar,

00:03:00.120 --> 00:03:02.610
the content on the page
changes to reflect it.

00:03:02.610 --> 00:03:04.781
Pretty simple, right?

00:03:04.781 --> 00:03:05.390
All right.

00:03:05.390 --> 00:03:07.449
The last thing I want
to do is toss in a menu

00:03:07.449 --> 00:03:09.990
so the user can actually swap
between the different sections.

00:03:09.990 --> 00:03:12.640
Let's check it out.

00:03:12.640 --> 00:03:14.820
Now I've gone ahead and
dropped in a core menu

00:03:14.820 --> 00:03:17.180
and bound it to that
same route scope

00:03:17.180 --> 00:03:19.130
variable as my core pages.

00:03:19.130 --> 00:03:21.710
I've also included anchor
tags in my menu items

00:03:21.710 --> 00:03:23.270
so when a user
clicks on one, it's

00:03:23.270 --> 00:03:24.770
actually going to
trigger the router

00:03:24.770 --> 00:03:27.880
to update the URL, which will
then set the route variable.

00:03:27.880 --> 00:03:30.560
Now because the core
menu and core pages

00:03:30.560 --> 00:03:32.800
are both using that
same route variable,

00:03:32.800 --> 00:03:36.300
effectively the two are linked
and they should update in sync.

00:03:36.300 --> 00:03:38.170
Back in my browser,
you'll see that as I'm

00:03:38.170 --> 00:03:39.794
clicking on these
different menu items,

00:03:39.794 --> 00:03:42.220
the URL is changing up
here in the address bar

00:03:42.220 --> 00:03:44.860
and the content stays in sync
with the rest of the page.

00:03:44.860 --> 00:03:47.954
I can even grab the URL
and drop it into a new tab.

00:03:47.954 --> 00:03:49.370
And once that boots
up, you'll see

00:03:49.370 --> 00:03:51.490
that the content is
showing the right page

00:03:51.490 --> 00:03:54.579
and the right item is
highlighted over in our menu.

00:03:54.579 --> 00:03:56.370
OK, so you've seen the
first bit of routing

00:03:56.370 --> 00:03:58.140
that's possible in
a Polymer project.

00:03:58.140 --> 00:03:58.930
And at this point,
you're probably

00:03:58.930 --> 00:04:01.580
ready to just like run off and
go build your own application.

00:04:01.580 --> 00:04:03.516
But don't run away just yet.

00:04:03.516 --> 00:04:05.140
In the next episode,
I want to show you

00:04:05.140 --> 00:04:08.572
how to all of these exact same
tricks using nothing but HTML.

00:04:08.572 --> 00:04:10.030
So definitely stick
around for that

00:04:10.030 --> 00:04:11.780
and be sure to click
the Subscribe button.

00:04:11.780 --> 00:04:13.592
It is how I justify
my employment here.

00:04:13.592 --> 00:04:15.300
As always, thank you
so much for watching

00:04:15.300 --> 00:04:16.424
and I'll see you next time.

00:04:16.424 --> 00:04:20.360
[MUSIC PLAYING]

