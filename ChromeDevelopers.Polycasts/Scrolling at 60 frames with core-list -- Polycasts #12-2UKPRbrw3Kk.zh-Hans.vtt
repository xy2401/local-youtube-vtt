WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.000 --> 00:00:02.667
聚合物。 

00:00:02.667 --> 00:00:03.760
 “ Rob Dodson：出席” Chrome开发峰会

00:00:03.760 --> 00:00:05.700
您为创建的联系人显示了一个应用

00:00:05.700 --> 00:00:07.689
允许滚动浏览数百个朋友

00:00:07.689 --> 00:00:10.580
高速60 fps 

00:00:10.580 --> 00:00:14.396
在DOM屏幕上放置数百个或数千个项目

00:00:14.396 --> 00:00:16.260
它可能会对性能平衡产生不利影响

00:00:16.260 --> 00:00:17.730
怎么做？ 

00:00:17.730 --> 00:00:19.109
 Rob Dodson今天在Polycasts参加

00:00:19.109 --> 00:00:21.510
说明如何滚动浏览数千个项目

00:00:21.510 --> 00:00:23.600
 .HTML只用一件事。 

00:00:24.600 --> 00:00:26.680
现在的诀窍是在屏幕上显示大量内容

00:00:26.680 --> 00:00:29.130
他们实际上一次显示几个项目

00:00:29.130 --> 00:00:31.860
这些元素然后很快旋转

00:00:31.860 --> 00:00:34.859
当项目从屏幕上消失时

00:00:34.859 --> 00:00:39.270
我们将其移回列表，并在此过程中更新内容

00:00:39.270 --> 00:00:42.220
因此，我们无需支付创建数千个项目的费用

00:00:42.220 --> 00:00:44.510
只能创建包含约20个项目的组

00:00:44.510 --> 00:00:46.340
然后反复使用

00:00:46.340 --> 00:00:51.530
为此，我将使用一个名为.core-list的元素

00:00:51.530 --> 00:00:53.860
这是我最喜欢的物品之一

00:00:53.860 --> 00:00:56.910
它实际上是一个无限的虚拟列表

00:00:56.910 --> 00:01:00.450
您有一个数据提供者，它是一组对象

00:01:00.450 --> 00:01:02.530
您可以将其连接到表单

00:01:02.530 --> 00:01:05.357
该模型中的每个示例在列表中都有一个核心列表

00:01:05.357 --> 00:01:08.000
密封物品以匹配数据提供者

00:01:08.000 --> 00:01:09.630
而且擅长

00:01:09.630 --> 00:01:11.910
它可以在这种形式下使用.Data绑定

00:01:11.910 --> 00:01:14.560
 ，如果要从此处获取Name属性

00:01:14.560 --> 00:01:17.510
我可以直接将其泵送到我的模型中

00:01:17.510 --> 00:01:20.652
表格指的是实际实例

00:01:20.652 --> 00:01:23.370
提供者名称指示该属性

00:01:23.370 --> 00:01:27.670
太好了，它使您可以轻松地将所有东西放在一起

00:01:27.670 --> 00:01:30.070
这样，一小部分移动通讯录

00:01:30.070 --> 00:01:31.910
这就是我们今天要创建的

00:01:32.910 --> 00:01:34.530
现在您知道了核心列表方法

00:01:34.530 --> 00:01:36.510
让我们快速转到编辑器并立即开始工作

00:01:37.510 --> 00:01:40.390
第一步是移至bower.json文件

00:01:40.390 --> 00:01:42.360
 ，我拥有的核心图片和核心列表

00:01:42.360 --> 00:01:44.257
 faker.js和一个位于其中的库

00:01:44.257 --> 00:01:47.100
我将使用它来创建一些应用程序虚拟数据

00:01:48.100 --> 00:01:49.470
并通过终端

00:01:49.470 --> 00:01:53.340
要添加凉亭安装，我将所有内容都运行到我的项目中

00:01:53.340 --> 00:01:55.960
返回编辑器，然后打开HTML文件元素

00:01:55.960 --> 00:01:59.800
 .core-list为项目编写导入

00:01:59.800 --> 00:02:01.627
我经常发现准确的是与之合作时的核心清单

00:02:01.627 --> 00:02:04.230
是为了确保为列表选择了正确的高度

00:02:04.230 --> 00:02:06.940
在这种情况下，我希望菜单与屏幕大小相同

00:02:06.940 --> 00:02:09.639
所以我将使用一些布局属性来做到这一点

00:02:09.639 --> 00:02:14.820
我将设置文本元素以适合全屏格式

00:02:14.820 --> 00:02:16.580
及其垂直特征

00:02:16.580 --> 00:02:19.055
 core-list然后添加一个包含属性的元素flex 

00:02:19.055 --> 00:02:23.470
这将告诉元素扩展以容纳文本

00:02:23.470 --> 00:02:26.100
我将创建一个核心列表表单，然后在其中

00:02:26.100 --> 00:02:28.340
 .div在此表格中，我会标记

00:02:28.340 --> 00:02:30.130
对class div类进行分类并给出标签

00:02:30.130 --> 00:02:32.130
这是我将存储类的所有元素的地方

00:02:32.130 --> 00:02:34.150
在其他div和行内，我将创建一个标签

00:02:34.150 --> 00:02:37.995
型号名称。并给它数据绑定

00:02:37.995 --> 00:02:39.620
 ，正确列出核心，甚至可以正常工作

00:02:39.620 --> 00:02:43.590
您需要知道课程中所有元素的估计高度

00:02:43.590 --> 00:02:45.420
默认情况下，您希望row元素的高度为

00:02:45.420 --> 00:02:47.370
 。约80像素

00:02:47.370 --> 00:02:49.990
我将在其中编写一些CSS样式

00:02:49.990 --> 00:02:53.783
 div强制行标记创建为80像素的高度

00:02:53.783 --> 00:02:55.860
如果您想要一些不同尺寸的物品

00:02:55.860 --> 00:02:57.630
 height-core属性也可以在列表中设置

00:02:57.630 --> 00:03:00.930
该高度应为所有不同元素的平均值

00:03:00.930 --> 00:03:02.540
您已录制了一段视频，将显示该视频以说明如何

00:03:02.540 --> 00:03:05.870
制作可变高度的元素。 

00:03:05.870 --> 00:03:07.953
现在，因为我想将一些数据输入到列表中

00:03:07.953 --> 00:03:11.637
我将所有内容组合成一个自动链接形式

00:03:11.637 --> 00:03:14.064
应用程序以及我将提供表单ID 

00:03:14.064 --> 00:03:16.000
因此可以稍后由JavaScript引用

00:03:17.000 --> 00:03:20.064
 faker.js，然后包含一个库

00:03:20.064 --> 00:03:22.601
下方的app.js，直接在文件上方

00:03:22.601 --> 00:03:23.810
因为我想在这里使用

00:03:23.810 --> 00:03:26.393
我可以从手动组件中取出这个凉亭

00:03:26.393 --> 00:03:28.524
 app.js然后我打开

00:03:28.524 --> 00:03:32.560
在内部，创建一个名为generateContacts的函数

00:03:32.560 --> 00:03:34.600
这只是一个循环重复

00:03:34.600 --> 00:03:36.400
并且里面包含一千个元素

00:03:36.400 --> 00:03:42.150
您将通过以下方式返回.faker.js数据对象的数组

00:03:42.150 --> 00:03:44.997
然后，获取对数据绑定表单的引用

00:03:44.997 --> 00:03:47.330
我将表单数据的属性设置为自动绑定

00:03:47.330 --> 00:03:49.889
那等于.generateContacts的返回值

00:03:49.889 --> 00:03:53.210
最后一步是核心清单

00:03:53.210 --> 00:03:56.940
在表单中，我将添加

00:03:56.940 --> 00:03:59.040
然后将其链接到数据范围变量

00:03:59.040 --> 00:04:00.180
就是这样

00:04:00.180 --> 00:04:03.370
数据提供商已连接到列表，我准备工作了

00:04:03.370 --> 00:04:05.070
如果导航到浏览器

00:04:05.070 --> 00:04:07.519
您会看到我现在已经生产了大约一千件

00:04:07.519 --> 00:04:10.555
 ，在联系人列表中

00:04:10.555 --> 00:04:12.930
而在这种情况下，视频可能无法捕获

00:04:12.930 --> 00:04:16.000
但是尝试一下，您应该每秒获得约60帧

00:04:17.000 --> 00:04:18.610
因此，联系人列表既好又快速

00:04:18.610 --> 00:04:20.512
但是看着它也很无聊

00:04:20.512 --> 00:04:22.052
包含一些个人资料照片

00:04:22.052 --> 00:04:23.700
同时，我将向您展示一个绝妙的技巧

00:04:24.700 --> 00:04:26.640
 elements.html我将打开一个文件

00:04:26.640 --> 00:04:30.060
 .Import过程已添加到主图像项

00:04:30.060 --> 00:04:33.584
然后在课程中添加基本图像

00:04:33.584 --> 00:04:35.250
并提供一些基本图像一些功能

00:04:35.250 --> 00:04:36.910
 .avatar我会上课

00:04:36.910 --> 00:04:41.010
告诉她从属性中提取她的头像数据

00:04:41.010 --> 00:04:42.010
 ，然后设置一个preload属性

00:04:42.010 --> 00:04:44.090
并给它一个图案来确定封面的大小

00:04:44.090 --> 00:04:48.250
另外，告诉班级在中心水平格式化其所有分支

00:04:48.250 --> 00:04:51.480
这意味着，如果是，则该行看起来像一个矩形

00:04:51.480 --> 00:04:53.910
然后，图片会出现在左侧的头像上

00:04:53.910 --> 00:04:56.220
然后垂直放置

00:04:56.220 --> 00:04:59.650
整个表格名称的文字

00:04:59.650 --> 00:05:02.580
在此使用基本映像的原因

00:05:02.580 --> 00:05:05.420
不只是为我使用常规头像

00:05:05.420 --> 00:05:07.800
这是预加载功能吗

00:05:08.800 --> 00:05:11.870
基本上是核心列表，因为元素

00:05:11.870 --> 00:05:16.133
反复旋转其分支的虚拟列表

00:05:16.133 --> 00:05:20.150
有显示静止图像的风险

00:05:20.150 --> 00:05:22.900
如果您没有机会上传图片

00:05:22.900 --> 00:05:25.280
核心映像并具有此preload属性

00:05:25.280 --> 00:05:29.712
发生的情况是它们将显示默认的背景色

00:05:29.712 --> 00:05:31.550
或静态背景图片

00:05:31.550 --> 00:05:35.030
在等待已加载图像内容时

00:05:35.030 --> 00:05:38.230
因此，而不是看到重复的项目在我的清单上移动

00:05:38.230 --> 00:05:39.803
 ，但是他们突然改变

00:05:39.803 --> 00:05:43.600
您会看到某种占位符在列表中滚动

00:05:43.600 --> 00:05:45.101
然后加载图像本身

00:05:45.101 --> 00:05:46.310
头像以及

00:05:46.310 --> 00:05:48.830
我会给他清楚的宽度和高度

00:05:48.830 --> 00:05:52.059
以及其边界的半径是适当的和圆形的

00:05:52.059 --> 00:05:56.356
最后，加载图像时将显示背景色

00:05:56.356 --> 00:05:58.230
 ，现在，如果我们要在浏览器中预览

00:05:58.230 --> 00:06:00.620
你看我有化身

00:06:00.620 --> 00:06:02.760
 ，右边有我的联络人姓名

00:06:02.760 --> 00:06:04.715
并可以快速滚动浏览它们

00:06:04.715 --> 00:06:08.510
但是有些人在滚动时可能会发现一些有趣的东西

00:06:08.510 --> 00:06:13.920
注意这一点，看看向上滚动时会发生什么

00:06:13.920 --> 00:06:15.850
你看到了吗是同一回事

00:06:15.850 --> 00:06:17.110
那么这是怎么回事？ 

00:06:17.110 --> 00:06:21.270
 .core-list好的，我们出现列表错误

00:06:21.270 --> 00:06:23.490
如果发生错误怎么办？ 

00:06:23.490 --> 00:06:25.575
好吧，我们马上行动

00:06:25.575 --> 00:06:27.734
怪物的声音：不错的技巧

00:06:27.734 --> 00:06:29.900
 Rob Dodson：那正是我现在想做的

00:06:29.900 --> 00:06:32.556
我会告诉你如何解决这个问题

00:06:32.556 --> 00:06:34.426
但在此之前，我想指出

00:06:34.426 --> 00:06:37.570
包含GitHub问题的链接

00:06:37.570 --> 00:06:39.000
下面带有演示文稿

00:06:39.000 --> 00:06:41.990
您可以继续查看错误何时得到修复

00:06:41.990 --> 00:06:44.960
基本上，我认为这是观察物体的问题

00:06:44.960 --> 00:06:46.320
有两种解决方法

00:06:46.320 --> 00:06:48.140
要么创建自己的“聚合物”元素

00:06:48.140 --> 00:06:51.268
在core-list元素内并放入新的自定义

00:06:51.268 --> 00:06:53.060
这似乎解决了问题

00:06:53.060 --> 00:06:56.290
或者，如果需要，可以使用“自动链接”表单

00:06:56.290 --> 00:06:57.306
 ，就像我在这里一样

00:06:57.306 --> 00:07:01.624
然后，您需要包含指向菜单项索引的链接

00:07:01.624 --> 00:07:03.540
一次只能使用一次

00:07:03.540 --> 00:07:05.240
它可以藏在某个地方

00:07:05.240 --> 00:07:07.250
而我要做的就是创造

00:07:07.250 --> 00:07:11.920
基本div图片和标记中的属性

00:07:11.920 --> 00:07:15.680
我将设置此索引数据属性

00:07:15.680 --> 00:07:19.477
你发明的价值

00:07:20.620 --> 00:07:22.089
基本上会发生什么

00:07:22.089 --> 00:07:26.980
用于监视[？ on？]是对象的神奇存储

00:07:26.980 --> 00:07:29.850
现在，这些索引值将不会显示

00:07:29.850 --> 00:07:31.167
因此，这没有问题

00:07:31.167 --> 00:07:34.140
再说一次，这是对这个暂时性问题的一种解决方案

00:07:36.545 --> 00:07:38.170
 ，现在您可以在浏览器中预览

00:07:38.170 --> 00:07:41.300
您会在滚动浏览此页面时注意到

00:07:41.300 --> 00:07:45.597
背景图像显示预加载占位符的颜色

00:07:45.597 --> 00:07:47.174
这是一个验证过程

00:07:47.174 --> 00:07:51.583
退出并显示新图像，而不是先前的问题

00:07:51.583 --> 00:07:52.860
当他们被回收

00:07:53.940 --> 00:07:57.031
现在可以通过滚动几个内容来了解​​核心列表

00:07:57.031 --> 00:07:59.310
高速60 fps 

00:07:59.310 --> 00:08:01.780
这是今天的一集“请确保您按下”订阅按钮

00:08:01.780 --> 00:08:03.030
更多内容，“播客

00:08:03.030 --> 00:08:04.738
和往常一样，感谢您的观看

00:08:04.738 --> 00:08:05.943
下次见面

00:08:06.943 --> 00:08:08.943
 “观看更多”多播

