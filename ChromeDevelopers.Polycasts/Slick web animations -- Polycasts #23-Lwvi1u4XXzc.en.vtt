WEBVTT
Kind: captions
Language: en

00:00:02.767 --> 00:00:03.350
Hey, everyone.

00:00:03.350 --> 00:00:03.849
What's up?

00:00:03.849 --> 00:00:04.770
It's Rob Dodson.

00:00:04.770 --> 00:00:06.440
Welcome back to Polycast.

00:00:06.440 --> 00:00:08.690
Recently, a few of you
have left some comments

00:00:08.690 --> 00:00:12.880
asking if I could do an episode
on the neon-animation elements.

00:00:12.880 --> 00:00:15.740
Now, since we did an episode
previously on behaviors,

00:00:15.740 --> 00:00:18.070
I thought now would be
a great time to dive

00:00:18.070 --> 00:00:19.740
into the animation stuff.

00:00:19.740 --> 00:00:23.040
So come on down to tablet
town, and let's get hacking.

00:00:23.040 --> 00:00:27.640
So neon-animations, what
exactly are these things?

00:00:27.640 --> 00:00:29.530
Well, neon-animations
are a collection

00:00:29.530 --> 00:00:34.060
of behaviors and elements that
let you use Web Animations.

00:00:34.060 --> 00:00:37.010
And if you've never heard
of Web Animations before,

00:00:37.010 --> 00:00:39.100
it's basically a
new set of standards

00:00:39.100 --> 00:00:45.350
that unify CSS and
JavaScript animations.

00:00:45.350 --> 00:00:48.140
So you can write your
animation in JavaScript

00:00:48.140 --> 00:00:50.580
and do something that's really
programmatic and awesome,

00:00:50.580 --> 00:00:56.720
but have it run on the GPU
like it was a CSS animation.

00:00:56.720 --> 00:01:00.020
So this lets you turn your
kind of boring sign-in form

00:01:00.020 --> 00:01:02.947
or whatever into this crazy,
awesome, bouncy thing.

00:01:02.947 --> 00:01:05.280
And I realize that's sort of
over the top, but whatever.

00:01:05.280 --> 00:01:06.564
You get the point.

00:01:06.564 --> 00:01:07.980
So today what we're
going to do is

00:01:07.980 --> 00:01:10.040
we're going to focus
on the behaviors

00:01:10.040 --> 00:01:11.920
in the neon-animations set.

00:01:11.920 --> 00:01:14.500
And then in another episode,
I'm going to do a followup

00:01:14.500 --> 00:01:16.850
and cover the elements,
like neon-animated pages.

00:01:16.850 --> 00:01:19.290
If you're not sure
what behaviors are,

00:01:19.290 --> 00:01:21.710
you check out this
video right here

00:01:21.710 --> 00:01:25.100
and get caught up on behaviors
so you can learn how they work.

00:01:25.100 --> 00:01:26.890
And then once you've
seen that, come back

00:01:26.890 --> 00:01:28.760
and check out this video.

00:01:28.760 --> 00:01:31.080
So the behaviors we're
going to work on today are

00:01:31.080 --> 00:01:34.020
the neon-animation-behavior
and the

00:01:34.020 --> 00:01:36.010
neon-animation-runner-behavior.

00:01:36.010 --> 00:01:38.000
So the
neon-animatable-behavior--

00:01:38.000 --> 00:01:42.100
what this does is it allows
you to add animations

00:01:42.100 --> 00:01:44.265
to your elements.

00:01:44.265 --> 00:01:46.810
So you can add like
a fade-in animation

00:01:46.810 --> 00:01:49.780
or a scale-up animation, lots
of really cool stuff there.

00:01:49.780 --> 00:01:53.350
But what this doesn't do is it
doesn't allow you to actually

00:01:53.350 --> 00:01:54.770
play those animations.

00:01:54.770 --> 00:01:56.520
There's no playback
built into this thing.

00:01:56.520 --> 00:01:58.402
So for playback support,
that's when you need

00:01:58.402 --> 00:01:59.860
the
neon-animation-runner-behavior.

00:02:02.590 --> 00:02:04.170
So that gives us playback.

00:02:04.170 --> 00:02:05.545
Now, what's really
cool about the

00:02:05.545 --> 00:02:09.139
neon-animation-runner-behavior
is it actually implements this

00:02:09.139 --> 00:02:11.654
animatable-behavior as well.

00:02:11.654 --> 00:02:14.070
So for the elements that we're
going to be building today,

00:02:14.070 --> 00:02:15.900
the only behavior that
we need to work with

00:02:15.900 --> 00:02:18.480
is neon-animation-runner,
which is awesome.

00:02:18.480 --> 00:02:21.940
Now, you might wonder, why
this does behavior exist even?

00:02:21.940 --> 00:02:24.210
Well, neon-animatable
is going to become

00:02:24.210 --> 00:02:28.940
more important when we go and
we look at the animated pages

00:02:28.940 --> 00:02:31.050
elements in that
following episode.

00:02:31.050 --> 00:02:34.207
But today, we're just going to
work on neon-animation-runner.

00:02:34.207 --> 00:02:35.790
So the thing that
we're going to build

00:02:35.790 --> 00:02:38.919
is this little sort of
pop-up sign-up form thing.

00:02:38.919 --> 00:02:41.460
So you can see here I click this
Open button, it animates in.

00:02:41.460 --> 00:02:43.570
I click the Close
button, it fades out.

00:02:43.570 --> 00:02:46.329
Now, I realize there's already
a paper dialog element.

00:02:46.329 --> 00:02:48.870
And if you're building a sign-in
form, you should absolutely,

00:02:48.870 --> 00:02:51.950
100% use the paper
dialog element.

00:02:51.950 --> 00:02:55.890
I created my own one
just as a teaching aid

00:02:55.890 --> 00:02:57.800
because it's going
to help us really

00:02:57.800 --> 00:03:00.605
illustrate a lot of the concepts
in the neon-animation set.

00:03:00.605 --> 00:03:02.980
By all means, if you're actually
building a sign-in form,

00:03:02.980 --> 00:03:05.220
go use paper dialog.

00:03:05.220 --> 00:03:08.060
So for my element, here's
the bower.json for it.

00:03:08.060 --> 00:03:10.220
My element is
called login-panel.

00:03:10.220 --> 00:03:12.140
And the interesting
thing here is just

00:03:12.140 --> 00:03:14.710
to scroll down and check
out its dependencies.

00:03:14.710 --> 00:03:17.300
And you can see I'm
importing paper-elements 1.0

00:03:17.300 --> 00:03:19.400
and neon-elements 1.0.

00:03:19.400 --> 00:03:20.610
And I'm often pretty lazy.

00:03:20.610 --> 00:03:24.300
I'll import like the entire
paper- and neon-element sets

00:03:24.300 --> 00:03:29.780
when I'm developing because
from my perspective,

00:03:29.780 --> 00:03:32.760
it doesn't really matter
if you pull all these sets

00:03:32.760 --> 00:03:34.710
into your development
environment.

00:03:34.710 --> 00:03:37.390
Your file size, what you
actually ship into production,

00:03:37.390 --> 00:03:39.910
is only what you import and
only what you vulcanize.

00:03:39.910 --> 00:03:41.230
So I'm often lazy.

00:03:41.230 --> 00:03:43.440
I'll pull in the full
sets just so I can

00:03:43.440 --> 00:03:45.540
have an easier time developing.

00:03:45.540 --> 00:03:49.400
Now, inside of my editor,
this is the definition

00:03:49.400 --> 00:03:51.540
for my login-panel element.

00:03:51.540 --> 00:03:53.730
You can see that we've
got some styles here.

00:03:53.730 --> 00:03:55.660
The one to note is that
on the host element,

00:03:55.660 --> 00:03:57.340
we've set display
none by default,

00:03:57.340 --> 00:03:59.800
so you just can't see
the thing initially.

00:03:59.800 --> 00:04:02.060
And then scrolling around,
you can see the templates.

00:04:02.060 --> 00:04:03.925
Pretty vanilla Polymer.

00:04:03.925 --> 00:04:05.550
We've got paper-material
element, which

00:04:05.550 --> 00:04:06.966
is going to give
us a little card,

00:04:06.966 --> 00:04:09.440
and we've got some paper-inputs
for the sign-in form.

00:04:09.440 --> 00:04:11.870
And further down, you've
got the actual definition

00:04:11.870 --> 00:04:14.250
for the element down
here in JavaScript,

00:04:14.250 --> 00:04:16.350
so pretty typical stuff.

00:04:16.350 --> 00:04:17.589
I've called it login-panel.

00:04:17.589 --> 00:04:20.860
It's got one property right
now, this opened Boolean,

00:04:20.860 --> 00:04:24.660
and then I've got these
two methods, show and hide.

00:04:24.660 --> 00:04:27.830
What these are going to do is
just change the display style

00:04:27.830 --> 00:04:29.680
from inline-block
to none depending

00:04:29.680 --> 00:04:30.970
on if it's showing or hiding.

00:04:30.970 --> 00:04:32.970
So right now if you
just call these methods,

00:04:32.970 --> 00:04:35.053
the element's just going
to, like, blink on screen

00:04:35.053 --> 00:04:36.870
and then disappear
really, really quickly.

00:04:36.870 --> 00:04:38.850
But I want this thing
to animate, right?

00:04:38.850 --> 00:04:40.947
I want it to add
a little pizzazz.

00:04:40.947 --> 00:04:43.280
So to do that, I'll go back
up to the top of the element

00:04:43.280 --> 00:04:46.720
and I'm going to add
imports for some animations.

00:04:46.720 --> 00:04:48.990
Now, the cool thing is
the neon-animations set

00:04:48.990 --> 00:04:51.215
actually comes with a
few prefab animations

00:04:51.215 --> 00:04:52.486
that you can just drop in.

00:04:52.486 --> 00:04:54.360
So I'm going to pull in
a scale-up animation,

00:04:54.360 --> 00:04:56.700
a fade-out animation,
and then I'm

00:04:56.700 --> 00:04:59.390
also going to pull in that
animation-runner-behavior.

00:04:59.390 --> 00:05:01.314
So check out these file
paths right here just

00:05:01.314 --> 00:05:02.480
because I want you see this.

00:05:02.480 --> 00:05:05.335
So everything's coming from
the neon-animation package,

00:05:05.335 --> 00:05:08.190
and then I've got this
animations directory.

00:05:08.190 --> 00:05:10.470
This is where the prefab
animations hang out.

00:05:10.470 --> 00:05:13.150
And then also in
neon-animation package,

00:05:13.150 --> 00:05:15.520
I'm just pulling
in that behavior.

00:05:15.520 --> 00:05:17.250
So we're all set up there.

00:05:17.250 --> 00:05:21.410
Now I'm ready to scroll down
and I can add the behavior

00:05:21.410 --> 00:05:22.910
to my elements definitions.

00:05:22.910 --> 00:05:25.110
So in my behaviors
array, I'll add

00:05:25.110 --> 00:05:27.270
neon-animation-runner-behavior.

00:05:27.270 --> 00:05:28.820
And what that's
going to do is it's

00:05:28.820 --> 00:05:33.660
going to give me access to
this animationConfig property.

00:05:33.660 --> 00:05:36.010
So remember, the way
that behaviors work

00:05:36.010 --> 00:05:40.090
is they mix in properties and
methods into your elements.

00:05:40.090 --> 00:05:41.940
So by adding that
behavior, I now

00:05:41.940 --> 00:05:44.730
have access to this really
cool animationConfig thing.

00:05:44.730 --> 00:05:46.580
And this is where
I can set up all

00:05:46.580 --> 00:05:48.910
of the animations on my element.

00:05:48.910 --> 00:05:51.880
So to do this, I'm going
to return an object,

00:05:51.880 --> 00:05:54.140
and every key inside
of this object

00:05:54.140 --> 00:05:57.540
is going to be the name of an
animation that I want to run.

00:05:57.540 --> 00:06:00.210
So I'm going to create
one called entry.

00:06:00.210 --> 00:06:03.750
And the values for this
entry object, the name,

00:06:03.750 --> 00:06:06.460
is going to be the name of the
animation it should execute,

00:06:06.460 --> 00:06:08.970
which is that scale-up
animation that we imported.

00:06:08.970 --> 00:06:12.560
And then the node, this is
the target of the animation.

00:06:12.560 --> 00:06:14.200
So in this case,
we're saying, I want

00:06:14.200 --> 00:06:16.590
this element to animate itself.

00:06:16.590 --> 00:06:18.150
So I'm just passing this.

00:06:18.150 --> 00:06:20.035
But if there were
children inside of here

00:06:20.035 --> 00:06:22.160
that you wanted to animate,
you could use something

00:06:22.160 --> 00:06:24.400
like Polymer's
automatic node finding.

00:06:24.400 --> 00:06:27.420
You could be like,
I want this .$.

00:06:27.420 --> 00:06:29.930
some child to be the target.

00:06:29.930 --> 00:06:31.480
I want that thing
to animate instead.

00:06:31.480 --> 00:06:34.930
But in this case, we're just
saying, hey, animate myself

00:06:34.930 --> 00:06:36.740
with this entry animation.

00:06:36.740 --> 00:06:39.090
And then we can also
create an exit animation.

00:06:39.090 --> 00:06:40.830
So this time I'm
going to call fade-out

00:06:40.830 --> 00:06:42.151
for that exit animation.

00:06:42.151 --> 00:06:44.150
And then I'm going to go
down here into the show

00:06:44.150 --> 00:06:48.680
and hide methods and add
two calls to play animation.

00:06:48.680 --> 00:06:52.170
So remember, I said the
animatable-behavior, that's

00:06:52.170 --> 00:06:55.280
what lets us actually add
animations to an element.

00:06:55.280 --> 00:06:57.690
And then the
animation-runner-behavior,

00:06:57.690 --> 00:06:59.550
that's what gives
us playback support.

00:06:59.550 --> 00:07:02.150
So that's where these
methods come from.

00:07:02.150 --> 00:07:04.690
And again, we're just
calling the named animations

00:07:04.690 --> 00:07:05.940
that we just created up there.

00:07:05.940 --> 00:07:08.382
One thing that you might
notice if you're astute

00:07:08.382 --> 00:07:09.840
and you're sort of
paying attention

00:07:09.840 --> 00:07:13.440
here is that right here
inside of hide, we're

00:07:13.440 --> 00:07:18.440
setting display to none before
we execute the animation.

00:07:18.440 --> 00:07:21.165
So that means that this thing
would just blink off screen

00:07:21.165 --> 00:07:22.480
and we would never see it.

00:07:22.480 --> 00:07:24.650
So we can take this out.

00:07:24.650 --> 00:07:26.440
We can actually remove
that line there.

00:07:26.440 --> 00:07:28.220
I'll remove it with
a little comment.

00:07:28.220 --> 00:07:29.950
But we're going to need to
revisit this in just a bit,

00:07:29.950 --> 00:07:31.030
and I'll show you why.

00:07:31.030 --> 00:07:32.810
But first, let's
preview our element.

00:07:32.810 --> 00:07:35.700
So over here when I
click this Open button,

00:07:35.700 --> 00:07:37.200
it's going to call
that show method.

00:07:37.200 --> 00:07:38.480
When I click this
Close button, it's

00:07:38.480 --> 00:07:39.880
going to call the hide method.

00:07:39.880 --> 00:07:42.462
So I click Open, animates
in with scale-up.

00:07:42.462 --> 00:07:44.670
Then I click Close, and
watch what's going to happen.

00:07:44.670 --> 00:07:49.240
It fades out, but then it
sort of pops back to the state

00:07:49.240 --> 00:07:50.730
it was in before.

00:07:50.730 --> 00:07:51.890
So what's going on there?

00:07:51.890 --> 00:07:55.190
Well, Web Animations
don't actually

00:07:55.190 --> 00:07:59.862
preserve changes that you make
to the state of your elements.

00:07:59.862 --> 00:08:02.070
So if you're changing the
CSS properties or something

00:08:02.070 --> 00:08:05.910
like that, there's
no preservation.

00:08:05.910 --> 00:08:08.070
At first I was like,
well, that sort of sucks.

00:08:08.070 --> 00:08:09.970
I kind of wish it did
preserve those changes.

00:08:09.970 --> 00:08:12.960
But then I realized that
would be potentially very

00:08:12.960 --> 00:08:14.120
difficult to debug.

00:08:14.120 --> 00:08:16.870
If you had a complex
animation that

00:08:16.870 --> 00:08:19.480
was applying lots of styles
and properties to an element,

00:08:19.480 --> 00:08:21.313
it'd be very hard later
to figure out, like,

00:08:21.313 --> 00:08:24.110
when did that thing change
its size or whatever.

00:08:24.110 --> 00:08:27.310
So Web Animation says, hey,
that's going to be up to you.

00:08:27.310 --> 00:08:30.449
You're going to need to preserve
whatever state changes you do.

00:08:30.449 --> 00:08:31.990
And you can do that
by adding a class

00:08:31.990 --> 00:08:35.799
or just manipulating the style
property like we were doing.

00:08:35.799 --> 00:08:37.179
So how do we do that?

00:08:37.179 --> 00:08:39.169
Well, back in our
elements definition,

00:08:39.169 --> 00:08:41.341
I'm going to add a
listeners object.

00:08:41.341 --> 00:08:43.840
And if you've never worked with
the listeners object before,

00:08:43.840 --> 00:08:44.802
it's really useful.

00:08:44.802 --> 00:08:47.010
Now, this is something that
all Polymer elements get.

00:08:47.010 --> 00:08:49.000
And the listeners
object is basically

00:08:49.000 --> 00:08:51.500
shorthand for AddEventListener.

00:08:51.500 --> 00:08:53.300
So we're going to
say, hey, I want

00:08:53.300 --> 00:08:56.770
to create a listener for the
NeonAnimationFinish event.

00:08:56.770 --> 00:09:00.400
And I want it to call this
onNeonAnimationFinish method,

00:09:00.400 --> 00:09:03.030
which I'm going to
define down here below.

00:09:03.030 --> 00:09:05.510
So when the element is done
animating, call this method.

00:09:05.510 --> 00:09:07.380
And inside of this
method, we're going

00:09:07.380 --> 00:09:09.320
to check to see if
it's opened or not.

00:09:09.320 --> 00:09:13.490
And if it's not open, we'll
tell it to display none.

00:09:13.490 --> 00:09:17.010
So now we can go back and we
can check our animation out.

00:09:17.010 --> 00:09:20.400
So click the Open button, and
it animates as it was before.

00:09:20.400 --> 00:09:23.680
And now when I click Close,
that state gets preserved.

00:09:23.680 --> 00:09:24.830
Awesome.

00:09:24.830 --> 00:09:26.950
So what if you want to
add multiple animations

00:09:26.950 --> 00:09:29.840
to your element that all kind
of play at the same time?

00:09:29.840 --> 00:09:31.590
Well, that's actually
really easy to do,

00:09:31.590 --> 00:09:33.340
and I can show you how
to do it over here.

00:09:33.340 --> 00:09:35.820
But first, let's import a few
more animations to work with.

00:09:35.820 --> 00:09:39.240
So I'm going to pull
in a fade-in animation,

00:09:39.240 --> 00:09:42.610
and I'm also going to pull
in one called slide-down.

00:09:42.610 --> 00:09:46.940
And down in my animationConfig
object, instead

00:09:46.940 --> 00:09:50.210
of just having a single
entry object here,

00:09:50.210 --> 00:09:52.440
I can actually have an array.

00:09:52.440 --> 00:09:54.420
So I can have an array
of animation objects

00:09:54.420 --> 00:09:55.860
that I would like to play.

00:09:55.860 --> 00:10:01.100
You can see here that I've set
the first one, the animation

00:10:01.100 --> 00:10:02.730
name, to
slide-down-animation, and then

00:10:02.730 --> 00:10:04.670
the second one,
fade-in-animation.

00:10:04.670 --> 00:10:07.750
And these two animations are
going to play in parallel.

00:10:07.750 --> 00:10:11.150
So they're both going to be
happening at the same time.

00:10:11.150 --> 00:10:14.160
So let's go preview
that over in Chrome just

00:10:14.160 --> 00:10:15.610
to see what that does.

00:10:15.610 --> 00:10:17.670
So I'm going to click
the Open button,

00:10:17.670 --> 00:10:21.740
and you'll see it sort of
slides down and animates

00:10:21.740 --> 00:10:22.650
at the same time.

00:10:22.650 --> 00:10:25.550
So it fades in and slides
down both at the same time.

00:10:25.550 --> 00:10:27.850
Cool, but what if you
wanted to sort of change

00:10:27.850 --> 00:10:28.780
the timing of that?

00:10:28.780 --> 00:10:30.990
Maybe you want your animations
to play sequentially

00:10:30.990 --> 00:10:32.840
or you want them to
be offset slightly.

00:10:32.840 --> 00:10:34.870
Well, that's really
easy to do as well.

00:10:34.870 --> 00:10:38.860
So every animation object
also has an optional timing

00:10:38.860 --> 00:10:40.190
object that you can give it.

00:10:40.190 --> 00:10:41.980
And the timing object
has a few properties

00:10:41.980 --> 00:10:42.938
that you can work with.

00:10:42.938 --> 00:10:43.920
You could set duration.

00:10:43.920 --> 00:10:46.378
So I'm going to say that the
slide-down-animation animation

00:10:46.378 --> 00:10:50.180
should have a duration of 2,000
milliseconds, so two seconds.

00:10:50.180 --> 00:10:52.010
And my fade-in
animation should have

00:10:52.010 --> 00:10:57.980
a duration of 1,000, so one
second, and a delay of 1,000.

00:10:57.980 --> 00:11:01.500
So it's going to wait one
second before it starts playing,

00:11:01.500 --> 00:11:03.440
and then it's going to
only be a second long,

00:11:03.440 --> 00:11:06.410
so it'll end at the same time
as the slide-down-animation.

00:11:06.410 --> 00:11:09.060
And you can use delay to
have your animations play

00:11:09.060 --> 00:11:11.460
kind of like one
right after the other.

00:11:11.460 --> 00:11:14.160
Or if you want things
to be sort of offset,

00:11:14.160 --> 00:11:16.060
just kind of on
top of one another,

00:11:16.060 --> 00:11:17.650
you can do that as well.

00:11:17.650 --> 00:11:19.441
And what this is going
to do is it's really

00:11:19.441 --> 00:11:21.233
going to change the
feel of this animation.

00:11:21.233 --> 00:11:22.732
So watch this and
kind of compare it

00:11:22.732 --> 00:11:24.030
to what we were doing before.

00:11:24.030 --> 00:11:26.890
Now when I click
Open, it's a much more

00:11:26.890 --> 00:11:29.820
gradual, kind of
smoother transition

00:11:29.820 --> 00:11:31.680
that we see there
because it doesn't even

00:11:31.680 --> 00:11:33.400
start fading in until
it's about halfway

00:11:33.400 --> 00:11:35.830
through the
slide-down-animation.

00:11:35.830 --> 00:11:37.990
So just by changing
those little properties,

00:11:37.990 --> 00:11:40.920
we were able to really alter the
feel of that animation, which

00:11:40.920 --> 00:11:43.490
is pretty cool.

00:11:43.490 --> 00:11:45.947
Now, how would you go about
writing your own animation?

00:11:45.947 --> 00:11:47.530
Because it might
seem really daunting,

00:11:47.530 --> 00:11:49.040
but it's actually super easy.

00:11:49.040 --> 00:11:51.890
And what I usually do is I look
at one of the animations that's

00:11:51.890 --> 00:11:54.300
already in the
prefab animation set,

00:11:54.300 --> 00:11:56.360
and then I'll use that
as a starting point.

00:11:56.360 --> 00:11:59.160
So this is the definition
for the fade-in animation.

00:11:59.160 --> 00:12:00.780
And if we scroll
around here, you

00:12:00.780 --> 00:12:04.085
can see that it looks a lot
like any other Polymer element.

00:12:04.085 --> 00:12:07.430
There's some documentation for
the options that it supports.

00:12:07.430 --> 00:12:09.490
And we go down and we
look at its definition,

00:12:09.490 --> 00:12:12.370
and you can see that
it's just got an

00:12:12.370 --> 00:12:13.860
is property here for its name.

00:12:13.860 --> 00:12:16.105
It implements this
NeonAnimationBehavior.

00:12:16.105 --> 00:12:17.480
We haven't talked
about that yet,

00:12:17.480 --> 00:12:20.060
but that's the behavior you
need to implement if you're

00:12:20.060 --> 00:12:21.679
creating your own animation.

00:12:21.679 --> 00:12:23.220
And then it has this
config function.

00:12:23.220 --> 00:12:25.535
And this is really the
meat of the animation here,

00:12:25.535 --> 00:12:26.910
and it's really
not that complex.

00:12:26.910 --> 00:12:29.510
You can see that the
node that it's targeting

00:12:29.510 --> 00:12:32.390
is whatever node we passed
in in our configuration.

00:12:32.390 --> 00:12:34.660
And then it creates what's
called a KeyframeEffect.

00:12:34.660 --> 00:12:41.250
And this right here, this is
the Web Animations API at work.

00:12:41.250 --> 00:12:43.640
So we're creating a
KeyframeEffect Object.

00:12:43.640 --> 00:12:45.420
We're telling it
which node to target,

00:12:45.420 --> 00:12:48.110
and then we pass it this
array of key frames that

00:12:48.110 --> 00:12:50.250
are written out in JavaScript.

00:12:50.250 --> 00:12:52.950
And here we're just saying
we want it to go from 0 to 1

00:12:52.950 --> 00:12:57.180
in terms of opacity, and we
also pass in the timing stuff.

00:12:57.180 --> 00:12:58.170
So this is pretty easy.

00:12:58.170 --> 00:13:00.044
You could quickly see
how you could just kind

00:13:00.044 --> 00:13:02.070
of mimic this and implement
your own animation,

00:13:02.070 --> 00:13:03.760
and that's exactly what I did.

00:13:03.760 --> 00:13:05.550
I created a bounce-in animation.

00:13:05.550 --> 00:13:07.750
So we're going to create
kind of a bouncing effect.

00:13:07.750 --> 00:13:09.274
And I took that
scale-up animation

00:13:09.274 --> 00:13:10.440
we were working with before.

00:13:10.440 --> 00:13:13.170
I just copied it and
pasted it in here.

00:13:13.170 --> 00:13:15.975
You can see that it's got pretty
similar options to the thing we

00:13:15.975 --> 00:13:17.530
were just working with.

00:13:17.530 --> 00:13:21.340
Really, the only difference
is this transformOrigin

00:13:21.340 --> 00:13:22.910
configuration thing
here, which just

00:13:22.910 --> 00:13:26.449
lets us set the origin
point we'll be scaling from.

00:13:26.449 --> 00:13:27.990
But then everything
else is the same.

00:13:27.990 --> 00:13:31.997
And what I did was I added
all these different key frames

00:13:31.997 --> 00:13:32.580
along the way.

00:13:32.580 --> 00:13:35.150
So start at scale 0,
work up to scale 1,

00:13:35.150 --> 00:13:38.440
and then here are the key
frames sort of interstitially

00:13:38.440 --> 00:13:41.240
for getting too big and too
small and too big and too small

00:13:41.240 --> 00:13:44.820
until you have what looks like
kind of a cool bouncing effect.

00:13:44.820 --> 00:13:48.160
So really, this is
all there is to it.

00:13:48.160 --> 00:13:50.921
And if you want, you can also,
I believe, mix in other things

00:13:50.921 --> 00:13:51.420
here.

00:13:51.420 --> 00:13:54.003
So you could have transform and
opacity and a few other things

00:13:54.003 --> 00:13:56.100
running at the same time.

00:13:56.100 --> 00:13:58.400
But what this gives
us is the ability

00:13:58.400 --> 00:14:01.360
to go over to our
animationConfig object.

00:14:01.360 --> 00:14:04.130
We can replace our
entry animation

00:14:04.130 --> 00:14:06.040
with that bounce-in
animation, and then we

00:14:06.040 --> 00:14:08.090
can import its definition.

00:14:08.090 --> 00:14:09.900
And with that in
place, we're all good.

00:14:09.900 --> 00:14:11.972
We can just go and
click the Open button.

00:14:11.972 --> 00:14:13.430
And now you'll see
we get this kind

00:14:13.430 --> 00:14:17.620
of frantic bounce-in effect,
which is a little crazy.

00:14:17.620 --> 00:14:18.990
So we go back.

00:14:18.990 --> 00:14:20.550
We add some timing
to this thing,

00:14:20.550 --> 00:14:22.460
we stretch out the
duration a little bit.

00:14:22.460 --> 00:14:25.855
And now when we play it, it's a
much more digestible animation.

00:14:25.855 --> 00:14:28.844
It's a little bit smoother.

00:14:28.844 --> 00:14:30.760
Right now, these key
frames that I showed you,

00:14:30.760 --> 00:14:33.190
these are all being
evenly distributed

00:14:33.190 --> 00:14:36.847
across the life cycle or the
duration of that animation.

00:14:36.847 --> 00:14:38.430
So they all take the
exact same amount

00:14:38.430 --> 00:14:40.657
of time, which is not
really how animation works.

00:14:40.657 --> 00:14:42.490
Oftentimes, you want
some parts to be longer

00:14:42.490 --> 00:14:43.960
and some parts to be shorter.

00:14:43.960 --> 00:14:47.190
And so if you want to do
that, it's also very easy.

00:14:47.190 --> 00:14:50.950
You can just add offsets to
your key frame animations,

00:14:50.950 --> 00:14:54.070
and so you can see here
that I'm offsetting from 0

00:14:54.070 --> 00:14:56.720
and we're going to go
all the way up to 1.

00:14:56.720 --> 00:14:59.780
So you can think about this
at like 0% of your animation

00:14:59.780 --> 00:15:02.680
duration to 100% of
your animation duration.

00:15:02.680 --> 00:15:05.074
And this is the amount
of time that should go on

00:15:05.074 --> 00:15:05.990
between each of these.

00:15:05.990 --> 00:15:11.880
So from 0 to basically
80% through the lifespan

00:15:11.880 --> 00:15:13.790
of the animation,
I want to spend

00:15:13.790 --> 00:15:17.220
all that time just
scaling up to 1.5, just

00:15:17.220 --> 00:15:20.540
doing this initial sort
of key frame tween here.

00:15:20.540 --> 00:15:23.130
And then I want the
other 20% of my animation

00:15:23.130 --> 00:15:27.510
to just be occurring with the
bouncing bits at the very end.

00:15:27.510 --> 00:15:29.430
So it'll be a long
scale-up and then

00:15:29.430 --> 00:15:33.330
it'll bounce really, really
fast all at the end there.

00:15:33.330 --> 00:15:35.490
So if we go and we
preview this, you'll

00:15:35.490 --> 00:15:37.510
see now that it's
a longer scale-up

00:15:37.510 --> 00:15:39.560
and we get more of
that bounce at the end.

00:15:39.560 --> 00:15:40.300
So pretty cool.

00:15:40.300 --> 00:15:42.940
Pretty easy way to
really dial in the look

00:15:42.940 --> 00:15:45.884
and feel your animation so
you get exactly what you want.

00:15:45.884 --> 00:15:47.300
The last thing I
want to mention--

00:15:47.300 --> 00:15:50.820
as I was recording this,
I came across a little bug

00:15:50.820 --> 00:15:53.442
in the animation
system, so watch here.

00:15:53.442 --> 00:15:54.900
I'm going to click
the Open button.

00:15:54.900 --> 00:15:56.110
I'm going to play my animation.

00:15:56.110 --> 00:15:57.985
And then I'm going to
click this Close button

00:15:57.985 --> 00:16:00.430
and I'm going to click
the Close button twice.

00:16:00.430 --> 00:16:03.429
And now when I click Open again,
I no longer see my animation.

00:16:03.429 --> 00:16:04.220
So what's up there?

00:16:04.220 --> 00:16:07.280
Well, there seems to be a bug
where if your animations stack,

00:16:07.280 --> 00:16:10.060
it can break, which
means it is time

00:16:10.060 --> 00:16:14.489
to bust out our old friend
(DEEP VOICE) The Sweet Hacks.

00:16:14.489 --> 00:16:16.280
It's been a little
while since we saw them,

00:16:16.280 --> 00:16:18.380
but now they're back.

00:16:18.380 --> 00:16:20.820
What I'm going to do
is in my handlers,

00:16:20.820 --> 00:16:24.650
I'm going to add a call to
this CancelAnimation method.

00:16:24.650 --> 00:16:26.370
So when I call
CancelAnimation, it just

00:16:26.370 --> 00:16:28.965
throws out what other
animation was already playing.

00:16:28.965 --> 00:16:31.160
And now when I click
Open, it bounces.

00:16:31.160 --> 00:16:32.905
I double-click Close, it closes.

00:16:32.905 --> 00:16:35.430
I click Open, and
it works again.

00:16:35.430 --> 00:16:36.400
We're back on track.

00:16:36.400 --> 00:16:38.150
So I realize it's kind
of an annoying bug,

00:16:38.150 --> 00:16:40.460
but I wanted to include
that little pro tip for you

00:16:40.460 --> 00:16:42.911
in case anyone else
runs into that issue.

00:16:42.911 --> 00:16:43.410
All right.

00:16:43.410 --> 00:16:45.509
Wow, we covered a
ton of stuff today.

00:16:45.509 --> 00:16:47.300
And I've got to admit,
when I started this,

00:16:47.300 --> 00:16:49.600
I didn't actually know a lot
about the animation system.

00:16:49.600 --> 00:16:51.308
So it's been really
cool for me to learn,

00:16:51.308 --> 00:16:53.630
and I hope you all
enjoyed it as well.

00:16:53.630 --> 00:16:56.611
Now, I'm going to do a followup
episode on the animated pages

00:16:56.611 --> 00:16:57.110
element.

00:16:57.110 --> 00:16:59.740
So click that little Subscribe
button so you don't miss that.

00:16:59.740 --> 00:17:01.490
As always, thank you
so much for watching,

00:17:01.490 --> 00:17:03.610
and I'll see you next time.

00:17:03.610 --> 00:17:05.319
Hey, there,
Polycasters, Rob here.

00:17:05.319 --> 00:17:06.950
Q&amp;A time.

00:17:06.950 --> 00:17:09.109
Alex Shaw writes
in and asks, "What

00:17:09.109 --> 00:17:11.800
is one quick tip
you'd give someone

00:17:11.800 --> 00:17:16.310
who's moving from Polymer
0.5 to Polymer 1.0?"

00:17:16.310 --> 00:17:17.960
So good question, Alex.

00:17:17.960 --> 00:17:19.960
Recently, one of the
members of the Polymer team

00:17:19.960 --> 00:17:23.329
wrote this really, really
cool module called polyup.

00:17:23.329 --> 00:17:26.690
And it will actually take
your old Polymer 0.5 code

00:17:26.690 --> 00:17:31.340
and do crazy machinations to it
and spit out Polymer 1.0 code.

00:17:31.340 --> 00:17:32.980
It is really awesome.

00:17:32.980 --> 00:17:34.720
So you can follow
this link right here

00:17:34.720 --> 00:17:36.850
to check out the polyup website.

00:17:36.850 --> 00:17:39.184
There's a little repl where
you can drop your code in

00:17:39.184 --> 00:17:40.850
and it'll just
automatically convert it.

00:17:40.850 --> 00:17:42.520
And there's also an
MPM module that you

00:17:42.520 --> 00:17:45.760
can install and just sort of run
it from your command line, so

00:17:45.760 --> 00:17:47.310
really cool stuff there.

00:17:47.310 --> 00:17:49.540
Again, thank you, Alex,
for sending in a question.

00:17:49.540 --> 00:17:51.260
We'll have our minions
reach out to you

00:17:51.260 --> 00:17:52.820
and send you a swag pack.

00:17:52.820 --> 00:17:55.164
If you have questions, be
sure to leave them down

00:17:55.164 --> 00:17:57.080
in the comments, and we
just might feature you

00:17:57.080 --> 00:17:58.480
on a future episode of Polycast.

00:17:58.480 --> 00:18:00.460
So thank you all so
much for watching,

00:18:00.460 --> 00:18:02.570
and I'll see you next time.

