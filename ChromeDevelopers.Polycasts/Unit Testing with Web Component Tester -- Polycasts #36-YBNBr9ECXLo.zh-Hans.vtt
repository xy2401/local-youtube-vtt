WEBVTT
Kind: captions
Language: zh-Hans

00:00:03.589 --> 00:00:08.400
嘿，那里的播音员抢了很多东西

00:00:06.690 --> 00:00:10.920
你写信问我们是否可以

00:00:08.400 --> 00:00:12.300
做一系列的单元测试，所以今天开始

00:00:10.920 --> 00:00:13.769
我想向您展示的节目

00:00:12.300 --> 00:00:15.480
为您设置的Web组件测试器

00:00:13.769 --> 00:00:17.100
项目，还将演示

00:00:15.480 --> 00:00:18.740
你如何写你的第一对

00:00:17.100 --> 00:00:20.880
单元测试让我们检查一下

00:00:18.740 --> 00:00:23.580
开始，我们将需要

00:00:20.880 --> 00:00:25.859
安装Web组件测试器测试

00:00:23.580 --> 00:00:27.480
亚军，聚合物团队创造了这个

00:00:25.859 --> 00:00:29.010
测试选手，因为我们要确保

00:00:27.480 --> 00:00:31.439
当您测试元素时

00:00:29.010 --> 00:00:32.640
您是在真实的浏览器中这样做的

00:00:31.439 --> 00:00:34.860
这是网络的好处

00:00:32.640 --> 00:00:37.920
组件测试器进行设置，我们可以

00:00:34.860 --> 00:00:40.140
只需运行npm install-g Web组件

00:00:37.920 --> 00:00:43.290
测试员，这将出去， 

00:00:40.140 --> 00:00:45.989
安装所有东西，然后我们需要

00:00:43.290 --> 00:00:47.789
实际测试的元素

00:00:45.989 --> 00:00:49.710
我必须自己设置这个

00:00:47.789 --> 00:00:51.480
要做的是继续克隆一个

00:00:49.710 --> 00:00:53.550
我们创建的项目称为种子

00:00:51.480 --> 00:00:56.550
元素ac元素只是一个

00:00:53.550 --> 00:00:59.129
您可以使用的样板元素

00:00:56.550 --> 00:01:00.480
可以作为起点

00:00:59.129 --> 00:01:02.129
对于您所需要的任何元素

00:01:00.480 --> 00:01:04.439
写这件事的好处是

00:01:02.129 --> 00:01:07.229
它已经有一个测试目录

00:01:04.439 --> 00:01:09.060
设置了一些虚拟单元测试，因此一次

00:01:07.229 --> 00:01:10.830
我们已经把它拉下来，我们可以

00:01:09.060 --> 00:01:13.470
运行Web组件测试器命令

00:01:10.830 --> 00:01:16.799
只是WCT而已

00:01:13.470 --> 00:01:18.479
现在就开始我们的测试跑步者

00:01:16.799 --> 00:01:20.220
是您第一次运行Web组件

00:01:18.479 --> 00:01:21.659
测试人员有可能

00:01:20.220 --> 00:01:23.580
您会看到类似这样的内容

00:01:21.659 --> 00:01:27.150
您的测试失败，它说

00:01:23.580 --> 00:01:30.150
硒野生动物园驱动程序无法正常工作

00:01:27.150 --> 00:01:31.409
就在那时，我们在

00:01:30.150 --> 00:01:33.329
实际控制所有

00:01:31.409 --> 00:01:35.280
浏览器是这个程序叫做硒

00:01:33.329 --> 00:01:36.840
对于野生动物园，您必须安装一个

00:01:35.280 --> 00:01:38.159
额外的软件以确保

00:01:36.840 --> 00:01:40.380
它可以正常工作，您可以看到有一个

00:01:38.159 --> 00:01:44.490
此错误消息内的小网址

00:01:40.380 --> 00:01:46.979
所以如果我们在这里打开该URL 

00:01:44.490 --> 00:01:48.899
顶部有一个链接到

00:01:46.979 --> 00:01:51.210
我们可以下载的软件只是

00:01:48.899 --> 00:01:54.240
一个小的jar文件，所以有点Java 

00:01:51.210 --> 00:01:55.799
东西，它告诉您然后解压缩

00:01:54.240 --> 00:01:58.290
文件，如果您不熟悉

00:01:55.799 --> 00:01:59.729
罐子它们实际上是像

00:01:58.290 --> 00:02:01.320
 zip文件，所以一旦有了它

00:01:59.729 --> 00:02:05.579
下载后，您只需更改

00:02:01.320 --> 00:02:07.320
从jar扩展到点zip，然后

00:02:05.579 --> 00:02:10.170
双击它，这将使您

00:02:07.320 --> 00:02:11.250
解压缩然后在里面

00:02:10.170 --> 00:02:13.630
这个目录的我们将成为

00:02:11.250 --> 00:02:16.990
寻找这个叫做Safari的东西

00:02:13.630 --> 00:02:18.840
驱动程序点Safari ext Z，所以我们将

00:02:16.990 --> 00:02:25.870
浏览其中一些目录

00:02:18.840 --> 00:02:27.520
埋在这里某个地方，我们去

00:02:25.870 --> 00:02:29.320
好吧，我们要打开它

00:02:27.520 --> 00:02:31.060
双击它，实际上

00:02:29.320 --> 00:02:32.620
启动Safari并说“嘿” 

00:02:31.060 --> 00:02:36.130
要安装此网络驱动程序

00:02:32.620 --> 00:02:39.190
扩展哎呀，现在我们应该

00:02:36.130 --> 00:02:40.840
能够使用硒控制Safari，因此

00:02:39.190 --> 00:02:42.760
确保关闭Safari并

00:02:40.840 --> 00:02:45.090
这样的一切，然后我们可以去

00:02:42.760 --> 00:02:47.380
回到终端，我们可以再试一次

00:02:45.090 --> 00:02:48.520
我们将运行Bower install并确保

00:02:47.380 --> 00:02:50.380
我们已经设置好所有组件

00:02:48.520 --> 00:02:56.160
很好，然后我们将运行网络

00:02:50.380 --> 00:03:00.220
组件测试器以及您应该看到的内容

00:02:56.160 --> 00:03:01.960
一两分钟后是绿色测试

00:03:00.220 --> 00:03:04.480
好吧，所以附带的所有测试

00:03:01.960 --> 00:03:06.850
种子元素正在传递，让我们开始吧

00:03:04.480 --> 00:03:08.710
看看里面的那些测试

00:03:06.850 --> 00:03:10.990
测试目录中的C元素的位置

00:03:08.710 --> 00:03:14.200
有两个文件index.html和basic 

00:03:10.990 --> 00:03:16.840
 test.html index.html是我们可以的地方

00:03:14.200 --> 00:03:17.950
创建我们的测试套件，以便所有

00:03:16.840 --> 00:03:20.890
我们要进行的个别测试

00:03:17.950 --> 00:03:22.390
想参加一个大团体做

00:03:20.890 --> 00:03:23.650
我们要做的就是我们要去

00:03:22.390 --> 00:03:25.630
设置一个HTML文件，我们将

00:03:23.650 --> 00:03:28.120
包括Web组件light J 

00:03:25.630 --> 00:03:30.010
将包含此浏览器J的文件

00:03:28.120 --> 00:03:31.450
在脑海中也是

00:03:30.010 --> 00:03:33.340
用于控制的JavaScript 

00:03:31.450 --> 00:03:34.630
不同的浏览器，然后我们已经

00:03:33.340 --> 00:03:36.790
在这里有一个脚本标签，它调用

00:03:34.630 --> 00:03:38.830
 Web组件测试器加载糖果

00:03:36.790 --> 00:03:40.990
方法，我们可以传递数组

00:03:38.830 --> 00:03:42.970
我们要开始的文件

00:03:40.990 --> 00:03:45.160
这些文件中的每个文件都是一个文档

00:03:42.970 --> 00:03:47.530
包含一些单元测试，所以我们已经

00:03:45.160 --> 00:03:49.270
有基本的测试HTML，然后有

00:03:47.530 --> 00:03:51.340
基本测试HTML的另一个副本，但这

00:03:49.270 --> 00:03:53.470
带有一些DOM查询字符串的时间

00:03:51.340 --> 00:03:55.060
等于阴影，我们在这里做什么

00:03:53.470 --> 00:03:55.630
是说我们要测试它

00:03:55.060 --> 00:03:59.140
第一

00:03:55.630 --> 00:04:01.780
在polyfill下，第二次我们

00:03:59.140 --> 00:04:04.480
运行我们想变成本地人的基本测试

00:04:01.780 --> 00:04:05.920
影子Dom等，对于浏览器来说

00:04:04.480 --> 00:04:08.380
确实支持本地影子Dom 

00:04:05.920 --> 00:04:09.940
像Chrome和歌剧一样

00:04:08.380 --> 00:04:11.590
这样，我们可以验证两者

00:04:09.940 --> 00:04:13.959
 polyfill和本地阴影Dom 

00:04:11.590 --> 00:04:17.290
我们的元素的版本正在正常工作

00:04:13.959 --> 00:04:19.390
让我们看一下基本的测试HTML 

00:04:17.290 --> 00:04:20.470
在顶部的基本测试HTML中

00:04:19.390 --> 00:04:22.419
我们还将包括网络

00:04:20.470 --> 00:04:23.919
组件，例如jsm浏览器j / s和

00:04:22.419 --> 00:04:25.900
那是因为我们可以打开这个

00:04:23.919 --> 00:04:26.930
如果需要，可以单独独立提交文件

00:04:25.900 --> 00:04:28.970
给你

00:04:26.930 --> 00:04:30.949
然后我们要导入种子元素

00:04:28.970 --> 00:04:32.389
对，这就是种子元素的样子

00:04:30.949 --> 00:04:33.680
已经设置，但是当您切换到

00:04:32.389 --> 00:04:35.870
你自己的元素，你可以取代这个

00:04:33.680 --> 00:04:37.460
在下方加上您自己的标记

00:04:35.870 --> 00:04:39.470
看到实际的种子元素标签是

00:04:37.460 --> 00:04:41.270
只是坐在身体里然后

00:04:39.470 --> 00:04:44.479
在下面有一个脚本标签

00:04:41.270 --> 00:04:45.979
其中包含我们的单元测试，所以我们

00:04:44.479 --> 00:04:47.780
选择种子元素

00:04:45.979 --> 00:04:50.600
抓住它的参考，然后我们

00:04:47.780 --> 00:04:52.639
有这种甜蜜的方法，这就是我们

00:04:50.600 --> 00:04:54.050
为我们的环境创造一种

00:04:52.639 --> 00:04:55.850
测试，所以我们说嘿，我们要

00:04:54.050 --> 00:04:57.110
创建一个充满单元测试的存储桶

00:04:55.850 --> 00:04:59.169
在这里，你可以看到那里有一堆

00:04:57.110 --> 00:05:01.940
这里所有的测试方法

00:04:59.169 --> 00:05:03.440
主张不同的事情，所以我

00:05:01.940 --> 00:05:04.970
想做的就是接受这个第一次测试

00:05:03.440 --> 00:05:06.830
在这里说作者的名字是

00:05:04.970 --> 00:05:08.360
 Dimitri Glaazkov，我要改变

00:05:06.830 --> 00:05:10.610
它说作者的名字是

00:05:08.360 --> 00:05:14.270
 Dimitri在结尾处带有一串Z 

00:05:10.610 --> 00:05:19.070
玻璃咖啡，这应该打破

00:05:14.270 --> 00:05:20.080
因此，让我们继续吧，我们将

00:05:19.070 --> 00:05:23.090
试一试

00:05:20.080 --> 00:05:26.090
切换到我们的控制台并运行网络

00:05:23.090 --> 00:05:28.070
组件测试器，是的，我们确实看到了

00:05:26.090 --> 00:05:30.289
一堆错误吧

00:05:28.070 --> 00:05:32.210
期望这个名字是术语treet 

00:05:30.289 --> 00:05:34.820
格拉斯哥，相反，我得到了迪米特里（Dimitri）一个

00:05:32.210 --> 00:05:37.010
一堆Z的玻璃咳嗽，所以我们可以去

00:05:34.820 --> 00:05:39.139
返回，我们可以删除那些C 

00:05:37.010 --> 00:05:41.300
再次运行它，现在我们可以验证

00:05:39.139 --> 00:05:43.550
基本上，是的，这些测试是

00:05:41.300 --> 00:05:45.770
当我们修改它们时工作会中断

00:05:43.550 --> 00:05:47.990
对，所以一切都在发生，因为我们

00:05:45.770 --> 00:05:49.520
期望如此，所以种子元素是

00:05:47.990 --> 00:05:51.349
很好，但还有很多事情要做

00:05:49.520 --> 00:05:53.300
我想在这里做的下一件事情

00:05:51.349 --> 00:05:54.860
只是干净整洁而已

00:05:53.300 --> 00:05:56.300
我自己的元素，这样我就可以

00:05:54.860 --> 00:05:58.789
演示如何编写单元

00:05:56.300 --> 00:06:00.440
从头开始测试，所以现在我很友善

00:05:58.789 --> 00:06:01.849
清理的东西我

00:06:00.440 --> 00:06:03.320
删除了很多原本是

00:06:01.849 --> 00:06:05.270
已经在种子元素里面了

00:06:03.320 --> 00:06:07.039
有用的例子，但我要

00:06:05.270 --> 00:06:09.470
知道在这里创建自己的元素，所以我

00:06:07.039 --> 00:06:11.690
将名称更改为等待按钮，然后将

00:06:09.470 --> 00:06:13.220
我现在使种子变形的元素

00:06:11.690 --> 00:06:14.659
元素基本上就是这样

00:06:13.220 --> 00:06:17.389
小按钮，当您单击它时

00:06:14.659 --> 00:06:19.130
它显示了一个漂亮的纸旋转器

00:06:17.389 --> 00:06:21.650
很简单，这就是我们的行为

00:06:19.130 --> 00:06:23.300
要测试，所以看着我的元素

00:06:21.650 --> 00:06:24.680
您可以在内部看到的定义

00:06:23.300 --> 00:06:27.169
模板我只有纸旋转器

00:06:24.680 --> 00:06:29.479
其活动状态绑定到并且是

00:06:27.169 --> 00:06:31.940
等待变量，我有一个按钮

00:06:29.479 --> 00:06:34.190
它有一个点击监听器

00:06:31.940 --> 00:06:36.169
聆听将要执行的

00:06:34.190 --> 00:06:37.520
重量法，让我们下去看看

00:06:36.169 --> 00:06:39.349
在我们的来源这里，您可以看到

00:06:37.520 --> 00:06:39.860
正在等待，只是一个普通的老

00:06:39.349 --> 00:06:42.469
布尔值

00:06:39.860 --> 00:06:43.939
始于假和重量

00:06:42.469 --> 00:06:46.759
方法要做两件事

00:06:43.939 --> 00:06:48.919
触发一个名为等待的事件

00:06:46.759 --> 00:06:51.259
伴随着一点点的数据， 

00:06:48.919 --> 00:06:52.789
将要设置为真，那就是

00:06:51.259 --> 00:06:54.349
会使我们的微调器显示出来

00:06:52.789 --> 00:06:56.120
这是我们的两种行为

00:06:54.349 --> 00:06:57.379
我将在单元测试中进行测试

00:06:56.120 --> 00:06:59.000
意识到这不是传统

00:06:57.379 --> 00:07:00.800
您编写的测试驱动开发

00:06:59.000 --> 00:07:03.439
首先进行测试，然后实施

00:07:00.800 --> 00:07:05.060
行为是一种方法

00:07:03.439 --> 00:07:06.949
事情，但这只是我的方式

00:07:05.060 --> 00:07:08.539
碰巧今天做某事是

00:07:06.949 --> 00:07:09.740
完全有效，但我会成为你知道的

00:07:08.539 --> 00:07:12.229
我先写下我的行为，然后

00:07:09.740 --> 00:07:15.110
会为此写一些测试

00:07:12.229 --> 00:07:17.120
我会注意到我的基本测试HTML文件

00:07:15.110 --> 00:07:18.529
而不是仅仅放置元素

00:07:17.120 --> 00:07:19.759
在这里的文件中，我实际上已经把

00:07:18.529 --> 00:07:22.189
它在这个东西里面叫做测试

00:07:19.759 --> 00:07:25.009
夹具和测试夹具是一个真正的

00:07:22.189 --> 00:07:26.599
 Web组件测试器的简洁功能和

00:07:25.009 --> 00:07:28.699
它所做的是需要什么

00:07:26.599 --> 00:07:31.069
里面的模板和邮票

00:07:28.699 --> 00:07:34.099
找出该内容的全新实例

00:07:31.069 --> 00:07:36.590
对于每个单元测试，这是怎么做的

00:07:34.099 --> 00:07:39.319
是否确保每个单元测试都得到一个

00:07:36.590 --> 00:07:41.779
完全干净的平板版本

00:07:39.319 --> 00:07:43.699
元素，如果前一个单元是这样

00:07:41.779 --> 00:07:45.919
测试可能已经修改了

00:07:43.699 --> 00:07:47.659
通过某种方式您不会意外共享

00:07:45.919 --> 00:07:49.639
测试之间的状态，也许

00:07:47.659 --> 00:07:51.409
混淆他们并导致事情

00:07:49.639 --> 00:07:53.509
当他们真的不应该出现时显得破碎

00:07:51.409 --> 00:07:55.759
就是这样，我们只是在创建一个

00:07:53.509 --> 00:07:57.969
每次都有全新的灯具

00:07:55.759 --> 00:08:00.740
测试获取自己的标签实例

00:07:57.969 --> 00:08:03.199
现在要使用测试夹具

00:08:00.740 --> 00:08:05.060
从我的元素创建参考并

00:08:03.199 --> 00:08:07.430
然后我称之为这种设置方法

00:08:05.060 --> 00:08:09.949
安装程序将在每个单元之前运行

00:08:07.430 --> 00:08:13.189
测试，所以在设置过程中，我只是

00:08:09.949 --> 00:08:14.629
会说我的L等于我会

00:08:13.189 --> 00:08:17.029
调用Fixture方法来获取所有

00:08:14.629 --> 00:08:18.409
该模板中的内容很酷，所以现在

00:08:17.029 --> 00:08:20.659
我知道了，您知道要淘汰

00:08:18.409 --> 00:08:21.770
下一个标签上的全新实例

00:08:20.659 --> 00:08:23.689
我想做的就是写一个

00:08:21.770 --> 00:08:26.120
基本单元测试，所以我称之为测试

00:08:23.689 --> 00:08:28.580
方法，在这个测试中，我要说

00:08:26.120 --> 00:08:31.819
当用户点击按钮时

00:08:28.580 --> 00:08:34.339
在元素内部，我们想看看是否

00:08:31.819 --> 00:08:36.560
正在等待设置为true现在我需要一个

00:08:34.339 --> 00:08:37.820
在里面戳的方式

00:08:36.560 --> 00:08:39.709
元素实际单击该按钮

00:08:37.820 --> 00:08:41.269
因为它住在当地的大教堂内

00:08:39.709 --> 00:08:43.699
或阴影Dom，但是您想要

00:08:41.269 --> 00:08:46.880
引用它，所以我要使用聚合物

00:08:43.699 --> 00:08:49.399
我要获取的Dom API 

00:08:46.880 --> 00:08:51.020
元素点根属性，以便

00:08:49.399 --> 00:08:52.640
实际上让我可以访问

00:08:51.020 --> 00:08:53.660
影子根，然后我可以查询

00:08:52.640 --> 00:08:56.120
选择器周围

00:08:53.660 --> 00:08:57.379
他们的一边，然后点击一下，所以我很客气

00:08:56.120 --> 00:08:58.459
在里面戳的东西，但我

00:08:57.379 --> 00:08:59.750
知道在这种情况下我在做什么

00:08:58.459 --> 00:09:01.519
确实需要单击该按钮，我

00:08:59.750 --> 00:09:03.440
从外面不能完全做到这一点，所以

00:09:01.519 --> 00:09:05.690
我有个皮尔斯皮影堂（Dom）做

00:09:03.440 --> 00:09:07.579
现在，一旦完成，我将断言

00:09:05.690 --> 00:09:11.329
等待属性匹配

00:09:07.579 --> 00:09:13.189
到目前为止还不错，看起来不错

00:09:11.329 --> 00:09:15.439
正确，让我们切换到网络

00:09:13.189 --> 00:09:19.040
组件测试器在

00:09:15.439 --> 00:09:20.870
第二，你是的，好的，我们看到我们的

00:09:19.040 --> 00:09:22.250
测试都通过了，您会注意到

00:09:20.870 --> 00:09:25.699
它说两个测试通过了

00:09:22.250 --> 00:09:27.589
 polyfill浏览器和

00:09:25.699 --> 00:09:29.480
我们正在传递的本地影子Dom版本

00:09:27.589 --> 00:09:30.920
现在很酷，那是一个

00:09:29.480 --> 00:09:34.069
同步测试让我们尝试

00:09:30.920 --> 00:09:35.779
异步测试，所以您有时会知道

00:09:34.069 --> 00:09:37.250
你会采取一些行动

00:09:35.779 --> 00:09:39.230
一定的时间你知道

00:09:37.250 --> 00:09:42.290
可能只是下一帧

00:09:39.230 --> 00:09:44.629
一千毫秒

00:09:42.290 --> 00:09:46.339
在这些情况下，您需要一种信号来

00:09:44.629 --> 00:09:47.569
测试库在这种情况下

00:09:46.339 --> 00:09:49.339
 Honan测试的内容是什么

00:09:47.569 --> 00:09:52.220
只是使用摩卡咖啡，所以您需要一种方法

00:09:49.339 --> 00:09:54.139
摩卡信号，嘿，我的测试终于来了

00:09:52.220 --> 00:09:56.540
完成后，现在您可以继续

00:09:54.139 --> 00:09:58.339
下一个测试，实际上要做摩卡咖啡

00:09:56.540 --> 00:10:00.380
给你这个叫做完成的小方法

00:09:58.339 --> 00:10:03.920
有空就可以打电话给

00:10:00.380 --> 00:10:06.620
异步测试，所以我要做的是

00:10:03.920 --> 00:10:08.329
下一个测试，我要听

00:10:06.620 --> 00:10:11.029
对于我的元素被触发的事件

00:10:08.329 --> 00:10:11.779
您会在函数中看到

00:10:11.029 --> 00:10:14.209
我的测试

00:10:11.779 --> 00:10:16.069
我已经通过了一次论点，那是

00:10:14.209 --> 00:10:17.449
实际上有一点信号要摩卡

00:10:16.069 --> 00:10:20.480
嘿，这将是一个异步测试

00:10:17.449 --> 00:10:22.250
然后在测试中，我只是

00:10:20.480 --> 00:10:24.620
向我的元素添加了一个事件监听器

00:10:22.250 --> 00:10:27.470
我正在听等待的事件， 

00:10:24.620 --> 00:10:29.120
然后我断言

00:10:27.470 --> 00:10:32.089
来自事件的消息等于

00:10:29.120 --> 00:10:33.589
冥想的时间，毕竟

00:10:32.089 --> 00:10:36.319
到此为止，我终于只是

00:10:33.589 --> 00:10:38.509
称为完成，这将允许

00:10:36.319 --> 00:10:40.610
包装单元测试和移动的系统

00:10:38.509 --> 00:10:42.559
如果有一个，则转到下一个

00:10:40.610 --> 00:10:45.050
就像之前的测试一样

00:10:42.559 --> 00:10:46.639
使用Palmers Dom API实际点击

00:10:45.050 --> 00:10:49.309
我元素内的按钮

00:10:46.639 --> 00:10:52.189
好吧，让我们试一下

00:10:49.309 --> 00:10:55.329
我们正在使用Web组件测试器和老兄

00:10:52.189 --> 00:10:55.329
触发我们所有的浏览器

00:10:55.330 --> 00:11:00.370
是的，我们已经做好了，所以现在

00:10:58.930 --> 00:11:02.589
您已经进行了前几次测试

00:11:00.370 --> 00:11:04.660
过去了，但我还有很多

00:11:02.589 --> 00:11:06.130
想涵盖这个话题，所以离开我

00:11:04.660 --> 00:11:07.600
下面一些评论

00:11:06.130 --> 00:11:09.850
让我知道你要我讲的内容

00:11:07.600 --> 00:11:11.110
接下来，如果您有问题可以

00:11:09.850 --> 00:11:13.000
在您的社交网络上ping我

00:11:11.110 --> 00:11:14.320
选择在标签询问聚合物作为

00:11:13.000 --> 00:11:17.700
一直非常感谢您的收看

00:11:14.320 --> 00:11:17.700
下次见

