WEBVTT
Kind: captions
Language: zh-Hans

00:00:02.480 --> 00:00:08.790
六个本地模块稳定

00:00:05.609 --> 00:00:10.980
支持Chrome 60和Safari 10其他

00:00:08.790 --> 00:00:13.650
浏览器习惯于发展和落后

00:00:10.980 --> 00:00:15.900
一个标志，以便几个浏览器可以

00:00:13.650 --> 00:00:18.779
处理新的导入和导出语法

00:00:15.900 --> 00:00:20.850
其他人不能问的是做什么

00:00:18.779 --> 00:00:22.890
传统上，您将其运送到浏览器

00:00:20.850 --> 00:00:25.080
您将有两种选择使用Babel 

00:00:22.890 --> 00:00:26.789
将本机Morial语法转换为

00:00:25.080 --> 00:00:30.480
一种较旧的开源格式

00:00:26.789 --> 00:00:33.059
像commonjs AMD或System GS或bundle 

00:00:30.480 --> 00:00:35.309
将您的模块汇总到一个文件中

00:00:33.059 --> 00:00:36.989
前者需要您加载

00:00:35.309 --> 00:00:39.239
额外的装载机，而后者

00:00:36.989 --> 00:00:41.850
产生大的整体javascript文件

00:00:39.239 --> 00:00:44.940
不会非常好地缓存

00:00:41.850 --> 00:00:46.950
另一个解决方案是同时包括

00:00:44.940 --> 00:00:49.079
本地的和被移植的

00:00:46.950 --> 00:00:51.390
代码的版本

00:00:49.079 --> 00:00:53.550
版本获取on的no module属性

00:00:51.390 --> 00:00:56.520
模块版本时的脚本标签

00:00:53.550 --> 00:00:58.590
必须具有等于模块浏览器的类型

00:00:56.520 --> 00:01:00.809
支持类型等于模块

00:00:58.590 --> 00:01:03.329
忽略没有模块的脚本标签

00:01:00.809 --> 00:01:05.909
属性，因此在这种情况下， 

00:01:03.329 --> 00:01:07.979
这两个版本将被浏览器加载

00:01:05.909 --> 00:01:10.380
没有模块支持将无法加载

00:01:07.979 --> 00:01:12.390
类型等于模块脚本标记，因为它们

00:01:10.380 --> 00:01:14.790
不知道类型是什么，这些

00:01:12.390 --> 00:01:16.890
浏览器也不知道没有模块

00:01:14.790 --> 00:01:19.500
意味着这意味着他们将加载此

00:01:16.890 --> 00:01:22.380
而是您可以看到的每个脚本

00:01:19.500 --> 00:01:23.580
浏览器只会加载一个版本

00:01:22.380 --> 00:01:26.280
让您提供更好的性能

00:01:23.580 --> 00:01:29.220
到新的浏览器，而不会破坏旧的

00:01:26.280 --> 00:01:32.280
那些模块的万岁，下一步见

00:01:29.220 --> 00:01:33.960
你有时在家有时会想

00:01:32.280 --> 00:01:35.970
我真的可以使用一些实时编码

00:01:33.960 --> 00:01:38.100
现在我可以帮忙，因为

00:01:35.970 --> 00:01:39.930
我们最近的直播是对的

00:01:38.100 --> 00:01:43.040
在那边，如果你想更多的微型

00:01:39.930 --> 00:01:43.040
提示订阅

