WEBVTT
Kind: captions
Language: zh-Hans

00:00:02.520 --> 00:00:13.320
 [音乐] 

00:00:10.849 --> 00:00:15.120
您之前听说过吊装一词吗

00:00:13.320 --> 00:00:15.719
 javascript做到了，这是一个有趣的词

00:00:15.120 --> 00:00:17.940
说

00:00:15.719 --> 00:00:19.980
吊起，但实际上是什么

00:00:17.940 --> 00:00:21.570
让我们尝试清除问题

00:00:19.980 --> 00:00:23.850
在JavaScript中声明一个函数

00:00:21.570 --> 00:00:25.560
被悬挂，这意味着功能

00:00:23.850 --> 00:00:27.570
名称和正文添加到

00:00:25.560 --> 00:00:30.060
执行前的当前功能范围

00:00:27.570 --> 00:00:32.009
基本上开始第一个功能

00:00:30.060 --> 00:00:34.050
甚至可以调用第二个函数B 

00:00:32.009 --> 00:00:36.030
虽然第二个功能

00:00:34.050 --> 00:00:38.190
第一个功能实际上你甚至可以

00:00:36.030 --> 00:00:39.000
调用该函数在怪异的上方

00:00:38.190 --> 00:00:41.670
被宣布

00:00:39.000 --> 00:00:43.680
因为现在吊起重要的事情

00:00:41.670 --> 00:00:45.750
要注意的是变量声明

00:00:43.680 --> 00:00:48.090
带有恒定LED的不悬挂

00:00:45.750 --> 00:00:50.039
作用域为块，因此在存储

00:00:48.090 --> 00:00:51.840
变量中的函数是经常看到的

00:00:50.039 --> 00:00:54.449
在语义上等同于使用

00:00:51.840 --> 00:00:56.670
在此示例中不是命名函数

00:00:54.449 --> 00:00:59.100
该代码将失败，因为常量

00:00:56.670 --> 00:01:00.870
 LED不吊装，不吊装

00:00:59.100 --> 00:01:02.760
申报顺序很重要

00:01:00.870 --> 00:01:04.799
承认吊装可以有点

00:01:02.760 --> 00:01:06.330
令人困惑，但现在您知道它是如何工作的

00:01:04.799 --> 00:01:08.460
您可以做出明智的决定

00:01:06.330 --> 00:01:12.300
何时使用这两种声明方式

00:01:08.460 --> 00:01:17.100
功能很好，下次见

00:01:12.300 --> 00:01:20.530
 [音乐] 

00:01:17.100 --> 00:01:22.990
我希望你能说说邦德先生吗

00:01:20.530 --> 00:01:26.590
期待您的发展和订阅

00:01:22.990 --> 00:01:26.590
 [音乐] 

