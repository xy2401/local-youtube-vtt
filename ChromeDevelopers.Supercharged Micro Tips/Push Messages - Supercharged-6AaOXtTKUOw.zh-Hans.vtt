WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.000 --> 00:00:02.030
哦

00:00:02.110 --> 00:00:06.650
所以绝对一无所知

00:00:04.640 --> 00:00:09.110
网络推送，所以请我给这个微型

00:00:06.650 --> 00:00:10.910
开发人员开始工作时的提示

00:00:09.110 --> 00:00:12.919
推动并不完全清楚你如何

00:00:10.910 --> 00:00:15.110
可以测试推送事件中的逻辑

00:00:12.919 --> 00:00:16.880
例如，您可能会发送不同的

00:00:15.110 --> 00:00:19.820
各种有效载荷，您想看看

00:00:16.880 --> 00:00:22.039
您的推送事件可以处理它，而不是

00:00:19.820 --> 00:00:24.019
发送实际的推送消息这是一个

00:00:22.039 --> 00:00:26.330
测试逻辑的简单小技巧

00:00:24.019 --> 00:00:28.130
在chrome中的推送事件中，转到

00:00:26.330 --> 00:00:30.529
设置为可与Push一起使用的网站

00:00:28.130 --> 00:00:32.990
打开开发工具并转到控制台

00:00:30.529 --> 00:00:35.960
在这里可以更改上下文选项卡

00:00:32.990 --> 00:00:37.610
现在从顶部到您的服务人员

00:00:35.960 --> 00:00:39.620
您已经完成了所有您要执行的命令

00:00:37.610 --> 00:00:40.940
输入将实际输入并运行

00:00:39.620 --> 00:00:43.160
在您的服务人员中

00:00:40.940 --> 00:00:45.469
现在，这使我们能够调度自己的

00:00:43.160 --> 00:00:47.570
假推事件，他们就像

00:00:45.469 --> 00:00:49.579
就像普通的推送消息那样

00:00:47.570 --> 00:00:52.340
例如，我们可以用以下方法伪造推送消息

00:00:49.579 --> 00:00:55.370
通过运行自调度事件没有数据

00:00:52.340 --> 00:00:56.840
新的推送事件推送现在很酷，但是

00:00:55.370 --> 00:00:59.629
当您开始添加时，它真的很有用

00:00:56.840 --> 00:01:01.879
我们可以通过传递一个数据来

00:00:59.629 --> 00:01:04.580
对象进入我们的推送事件构造函数

00:01:01.879 --> 00:01:07.220
带有数据参数，例如

00:01:04.580 --> 00:01:09.710
模拟JSON有效负载并传递

00:01:07.220 --> 00:01:11.540
在杰森（Jason）或对一些数据进行分类，我们

00:01:09.710 --> 00:01:13.939
可以看到push事件如何处理

00:01:11.540 --> 00:01:15.170
现在，您可以开始测试

00:01:13.939 --> 00:01:17.210
您想要的各种数据

00:01:15.170 --> 00:01:19.310
实际发送以及不同的边缘

00:01:17.210 --> 00:01:20.299
情况可能像您要发送的位置

00:01:19.310 --> 00:01:22.909
实际上不是你的有效载荷

00:01:20.299 --> 00:01:25.909
祝您测试顺利

00:01:22.909 --> 00:01:27.710
感谢您的收看

00:01:25.909 --> 00:01:30.229
阅读拉和苏尔玛的农村症状

00:01:27.710 --> 00:01:32.030
你可以在这里看更多的增压

00:01:30.229 --> 00:01:33.649
如果您订阅上方的频道

00:01:32.030 --> 00:01:34.939
可以看一个更好的节目

00:01:33.649 --> 00:01:37.700
完全以我自己为特色的工具提示

00:01:34.939 --> 00:01:40.450
和阿迪

00:01:37.700 --> 00:01:40.450
 [音乐] 

