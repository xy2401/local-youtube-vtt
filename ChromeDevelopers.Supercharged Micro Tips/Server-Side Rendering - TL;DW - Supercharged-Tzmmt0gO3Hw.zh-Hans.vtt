WEBVTT
Kind: captions
Language: zh-Hans

00:00:09.650 --> 00:00:16.350
你好，欢迎来到增压TL 

00:00:12.570 --> 00:00:18.240
 DW上次Paul和我前进时

00:00:16.350 --> 00:00:20.160
通过代码并构建了一个后端

00:00:18.240 --> 00:00:21.630
为此，服务器端渲染

00:00:20.160 --> 00:00:23.939
我将向您展示实际情况

00:00:21.630 --> 00:00:26.640
意味着在浏览器中，所以如果您查看

00:00:23.939 --> 00:00:27.900
我的屏幕上看不到新的东西

00:00:26.640 --> 00:00:29.400
我们建立的先进方法

00:00:27.900 --> 00:00:31.560
可以转到所有不同的小节

00:00:29.400 --> 00:00:33.360
有了不错的过渡，我们拥有了

00:00:31.560 --> 00:00:35.610
但是，如果您查看网络面板

00:00:33.360 --> 00:00:37.770
在这种情况下，我们只传输

00:00:35.610 --> 00:00:40.290
最少的数据名称准确

00:00:37.770 --> 00:00:42.719
我们需要显示的数据

00:00:40.290 --> 00:00:45.300
该部分是关于，但如果我刷新

00:00:42.719 --> 00:00:47.850
该页面仍然有效，因为

00:00:45.300 --> 00:00:49.649
如果服务器已决定

00:00:47.850 --> 00:00:51.480
整个脚手架需要发送， 

00:00:49.649 --> 00:00:53.940
如何详细地工作，让我们开始

00:00:51.480 --> 00:00:58.859
转到理论调用者或我们称为它的地方

00:00:53.940 --> 00:01:00.989
瑜伽，欢迎来到理论康纳

00:00:58.859 --> 00:01:03.239
节点服务器就是我们构建的

00:01:00.989 --> 00:01:05.760
在节点中编写的Web服务器

00:01:03.239 --> 00:01:08.430
来自浏览器的请求这些

00:01:05.760 --> 00:01:10.350
请求可以是首页

00:01:08.430 --> 00:01:12.720
关于部分联系部分

00:01:10.350 --> 00:01:15.390
无论我们在侧面导航

00:01:12.720 --> 00:01:17.700
服务器接受此请求并读取

00:01:15.390 --> 00:01:20.220
头文件的内容和页脚

00:01:17.700 --> 00:01:22.920
打电话并组装这三个部分

00:01:20.220 --> 00:01:25.619
回复到发送回

00:01:22.920 --> 00:01:28.439
浏览器的sûreté 

00:01:25.619 --> 00:01:30.750
是查询中存在的部分标志

00:01:28.439 --> 00:01:32.909
指示服务器执行以下操作的部分

00:01:30.750 --> 00:01:34.439
只发回的内容是

00:01:32.909 --> 00:01:37.020
当我们动态地进行时会发生什么

00:01:34.439 --> 00:01:38.880
页面导航，这实际上是

00:01:37.020 --> 00:01:40.890
所谓的服务器端渲染

00:01:38.880 --> 00:01:43.680
因为如果最初的要求是

00:01:40.890 --> 00:01:46.140
关于服务器将基本上注入

00:01:43.680 --> 00:01:48.090
即将退货的内容

00:01:46.140 --> 00:01:50.729
页面进入周围的脚手架

00:01:48.090 --> 00:01:54.630
让我们回头看看实际的代码

00:01:50.729 --> 00:01:57.090
现实世界的角落让我们直接跳

00:01:54.630 --> 00:01:58.590
进入我们要开始的代码

00:01:57.090 --> 00:02:00.719
底部，因为这是合乎逻辑的

00:01:58.590 --> 00:02:03.360
要做的事情，我们正在使用Express 

00:02:00.719 --> 00:02:06.240
启动我们的网络服务器，我们正在使用

00:02:03.360 --> 00:02:08.459
迅速，因为具有讽刺意味的是实际

00:02:06.240 --> 00:02:10.860
 h-2b到模块不适用于Express 

00:02:08.459 --> 00:02:13.020
但迅速做到并为八个

00:02:10.860 --> 00:02:14.310
 -而且速度不快，所以对

00:02:13.020 --> 00:02:15.930
有，所以我们在这里有我们的证书

00:02:14.310 --> 00:02:17.730
我们正在启动一个提供服务的网络服务器

00:02:15.930 --> 00:02:22.170
我们的应用程序并将其绑定到端口

00:02:17.730 --> 00:02:24.720
 8081实际的应用程序本身包括

00:02:22.170 --> 00:02:25.830
两个处理程序我们一个处理程序

00:02:24.720 --> 00:02:27.570
稍作讨论

00:02:25.830 --> 00:02:29.900
实际上是在服务器端渲染

00:02:27.570 --> 00:02:33.240
在下面，我们只是在使用

00:02:29.900 --> 00:02:34.680
表示静态中间件

00:02:33.240 --> 00:02:36.660
直接交付中没有其他

00:02:34.680 --> 00:02:39.210
通过网络从磁盘上的文件

00:02:36.660 --> 00:02:41.550
只是静态文件传递，所以我们来谈谈

00:02:39.210 --> 00:02:43.590
关于此服务器的实际心脏

00:02:41.550 --> 00:02:46.200
这是服务器端渲染

00:02:43.590 --> 00:02:48.810
函数它是一个处理程序，它需要

00:02:46.200 --> 00:02:51.450
照顾所有的要求

00:02:48.810 --> 00:02:53.550
这些HTML网站可以有多个

00:02:51.450 --> 00:02:56.250
形状，因为它可能只是斜线

00:02:53.550 --> 00:02:58.020
可以是斜线index.html，也可以是

00:02:56.250 --> 00:03:00.840
这些小节中的任何一个

00:02:58.020 --> 00:03:02.400
最后是可选的index.html，我们

00:03:00.840 --> 00:03:04.770
把它变成一个正则表达式

00:03:02.400 --> 00:03:07.350
然后把它放进快递

00:03:04.770 --> 00:03:10.650
处理程序和我们要做的第一件事是

00:03:07.350 --> 00:03:12.150
从中提取第零个元素

00:03:10.650 --> 00:03:13.410
父母反对是第一

00:03:12.150 --> 00:03:15.420
直接表达式中的括号

00:03:13.410 --> 00:03:17.820
表示如果您是一个空字符串

00:03:15.420 --> 00:03:20.100
在主页上还是它的名称

00:03:17.820 --> 00:03:23.160
该小节，如果我们在任何

00:03:20.100 --> 00:03:25.560
小节以及我们正在研究的内容

00:03:23.160 --> 00:03:27.420
接下来是如果这是我在

00:03:25.560 --> 00:03:30.269
理论角（如果是部分要求） 

00:03:27.420 --> 00:03:32.310
或整页请求，这只是部分

00:03:30.269 --> 00:03:35.310
索取我们需要的唯一文件

00:03:32.310 --> 00:03:37.380
读的是那的index.html 

00:03:35.310 --> 00:03:40.050
小节，所以如果我们例如看

00:03:37.380 --> 00:03:42.600
 About部分的index.html 

00:03:40.050 --> 00:03:45.390
刚刚有我显示的这一行

00:03:42.600 --> 00:03:47.610
如果不是

00:03:45.390 --> 00:03:50.400
强大的要求，我们需要阅读

00:03:47.610 --> 00:03:52.350
该部分文件的头文件和

00:03:50.400 --> 00:03:55.200
页脚并将其组装以形成

00:03:52.350 --> 00:03:56.940
实际反应我们接下来要做的是

00:03:55.200 --> 00:03:58.800
成功阅读所有这些

00:03:56.940 --> 00:04:01.500
文件是我们正在将它们变成

00:03:58.800 --> 00:04:03.060
字符串，因为最初我们回来了

00:04:01.500 --> 00:04:04.680
缓冲区，我们无法真正进行

00:04:03.060 --> 00:04:08.100
缓冲区，因此将它们返回为字符串

00:04:04.680 --> 00:04:10.560
然后我们使用车把

00:04:08.100 --> 00:04:12.360
我们使用车把的原因是

00:04:10.560 --> 00:04:14.430
一个模板引擎是因为我们有

00:04:12.360 --> 00:04:17.190
在标题中进行较小的操作

00:04:14.430 --> 00:04:19.109
容纳我们要去的数据

00:04:17.190 --> 00:04:21.109
注射，我的意思是

00:04:19.109 --> 00:04:24.090
让我们来看看头文件是

00:04:21.109 --> 00:04:24.720
在头文件中，我们拥有所有

00:04:24.090 --> 00:04:27.540
意见

00:04:24.720 --> 00:04:29.580
目前不可见，但这些是

00:04:27.540 --> 00:04:31.380
的意见，只有三个，因为其中之一

00:04:29.580 --> 00:04:34.080
它们实际上将由

00:04:31.380 --> 00:04:36.630
我们的服务器端渲染逻辑，所以我们

00:04:34.080 --> 00:04:39.330
写了一个小车把

00:04:36.630 --> 00:04:41.700
将排除该远程视图

00:04:39.330 --> 00:04:44.310
目前正在使用中，所以如果我们在

00:04:41.700 --> 00:04:45.810
关于页面，这三行不会

00:04:44.310 --> 00:04:48.800
出现在输出中，因为

00:04:45.810 --> 00:04:52.080
实际上将注入数据并

00:04:48.800 --> 00:04:52.770
这将是下一步，我们有这些

00:04:52.080 --> 00:04:54.270
三个文件

00:04:52.770 --> 00:04:57.240
我们只是一步一步地组装它们

00:04:54.270 --> 00:05:00.390
连接它们，然后发送它们

00:04:57.240 --> 00:05:03.600
回到客户那里，我们

00:05:00.390 --> 00:05:06.060
也产生了这个电子技术的电子标签

00:05:03.600 --> 00:05:08.190
在那里允许高效的客户端

00:05:06.060 --> 00:05:10.260
缓存它纯粹是基于

00:05:08.190 --> 00:05:13.530
我们拥有的内容，我们只是

00:05:10.260 --> 00:05:16.290
使用sha-256校验和基于项目符号

00:05:13.530 --> 00:05:18.600
在内容上我们添加了这些

00:05:16.290 --> 00:05:21.330
通过我们的set方法攻击标头

00:05:18.600 --> 00:05:23.580
响应，我们还设置了合理的缓存

00:05:21.330 --> 00:05:26.100
控制头这些缓存控件

00:05:23.580 --> 00:05:28.169
标头表示即使客户

00:05:26.100 --> 00:05:31.020
被允许抓住他们

00:05:28.169 --> 00:05:34.200
每次重新验证请求

00:05:31.020 --> 00:05:36.390
如果出现相同的页面， 

00:05:34.200 --> 00:05:37.950
在任何这些步骤中发生错误，并且

00:05:36.390 --> 00:05:39.780
这是诺言的美丽之一

00:05:37.950 --> 00:05:42.479
我们只是在使用诺言链

00:05:39.780 --> 00:05:44.030
捕获处理程序以将状态设置为500 

00:05:42.479 --> 00:05:46.380
意味着内部服务器错误和

00:05:44.030 --> 00:05:48.300
附加我们的错误字符串，以便我们

00:05:46.380 --> 00:05:50.700
问你是否知道出了什么问题

00:05:48.300 --> 00:05:53.100
并可以幸运地修复我们的代码

00:05:50.700 --> 00:05:54.510
甚至发生在流上，所以我们永远都不会

00:05:53.100 --> 00:05:56.970
展示所有实际可行的方法， 

00:05:54.510 --> 00:05:58.710
这就是你要做的

00:05:56.970 --> 00:06:00.930
服务器端渲染

00:05:58.710 --> 00:06:02.910
 index.html您注入的内容

00:06:00.930 --> 00:06:05.760
用户实际提出要求，然后您

00:06:02.910 --> 00:06:07.740
把代码我发回给客户

00:06:05.760 --> 00:06:09.720
略读在github上，而您

00:06:07.740 --> 00:06:11.940
会在

00:06:09.720 --> 00:06:13.650
该视频的描述另一个链接

00:06:11.940 --> 00:06:15.210
您可以在说明中找到链接

00:06:13.650 --> 00:06:17.250
到完整的直播流

00:06:15.210 --> 00:06:19.860
在哪里可以看到我们的花粉

00:06:17.250 --> 00:06:21.870
逐步构建整个过程

00:06:19.860 --> 00:06:23.490
您想知道更多订阅此

00:06:21.870 --> 00:06:25.830
在YouTube上发布频道或关注我们

00:06:23.490 --> 00:06:27.759
 Twitter感谢您下次收看

00:06:25.830 --> 00:06:30.710
时间

00:06:27.759 --> 00:06:32.240
那里的灯光，您单击它们

00:06:30.710 --> 00:06:34.400
让您订阅这是一件好事

00:06:32.240 --> 00:06:36.409
而且如果你想见我惊慌

00:06:34.400 --> 00:06:38.870
生活中我无法弄清的生活

00:06:36.409 --> 00:06:40.639
为什么heb 2无法正常工作

00:06:38.870 --> 00:06:43.749
这是直播，您将拥有

00:06:40.639 --> 00:06:43.749
一个小时的纯粹娱乐

