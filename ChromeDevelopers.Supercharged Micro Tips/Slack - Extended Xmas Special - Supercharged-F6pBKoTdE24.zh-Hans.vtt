WEBVTT
Kind: captions
Language: zh-Hans

00:00:19.944 --> 00:00:20.870
你好

00:00:20.870 --> 00:00:23.950
欢迎来到这个特殊的长假集

00:00:23.950 --> 00:00:25.280
来自“增压” 

00:00:25.280 --> 00:00:26.110
我是保罗

00:00:26.110 --> 00:00:28.612
在这里“圣路易斯”准备圣诞节

00:00:28.612 --> 00:00:29.620
你好，圣诞老人。 

00:00:29.620 --> 00:00:30.769
我知道那个名字

00:00:30.769 --> 00:00:33.060
这是程序的网站

00:00:33.060 --> 00:00:35.060
你提出并浏览了，我尝试

00:00:35.060 --> 00:00:37.120
查找并修复性能问题

00:00:37.120 --> 00:00:38.800
今天也一样

00:00:38.800 --> 00:00:40.650
圣诞快乐

00:00:40.650 --> 00:00:43.420
这就是我们今天要研究的

00:00:43.420 --> 00:00:46.240
我非常喜欢Slack，我们为Slack开发了Chrome。 

00:00:46.240 --> 00:00:50.542
这将是我们今天的绩效考核目标

00:00:50.542 --> 00:00:52.250
当我问他们时，有什么事吗

00:00:52.250 --> 00:00:55.462
您注意到的具体

00:00:55.462 --> 00:00:56.670
而且您认为应该对其进行检查？ 

00:00:56.670 --> 00:00:58.280
他们回答，是的

00:00:58.280 --> 00:00:59.170
这个适配器很快

00:00:59.170 --> 00:01:01.830
如果按“ Comand-K”，则需要很长时间

00:01:01.830 --> 00:01:04.220
在屏幕出现之前，我们不知道原因

00:01:04.220 --> 00:01:04.980
好吧

00:01:05.310 --> 00:01:08.280
我们将从这里开始并在工作中

00:01:08.280 --> 00:01:10.650
我认为有几件事

00:01:10.650 --> 00:01:11.710
我们在路上看到的

00:01:11.710 --> 00:01:13.300
这很多

00:01:13.300 --> 00:01:15.902
这是一年中的更多时间

00:01:15.902 --> 00:01:17.010
我的意思是看袜子里面

00:01:17.010 --> 00:01:17.751
那里有什么？ 

00:01:17.751 --> 00:01:18.740
滚动问题

00:01:18.740 --> 00:01:19.930
还有什么？ 

00:01:19.930 --> 00:01:21.070
拥堵图

00:01:21.070 --> 00:01:23.180
有史以来最糟糕的圣诞老人

00:01:23.180 --> 00:01:24.780
他们带来了水果馅饼

00:01:26.330 --> 00:01:30.440
我们要做什么，我们将按记录

00:01:30.440 --> 00:01:33.380
然后按“ Command-K” 

00:01:33.380 --> 00:01:35.860
那我们就停止录音

00:01:35.860 --> 00:01:36.980
是的

00:01:36.980 --> 00:01:39.230
并在此处查看Keydown事件

00:01:39.230 --> 00:01:41.330
他们是绝对正确的

00:01:41.330 --> 00:01:45.640
在JavaScript方面仅落后半秒

00:01:45.640 --> 00:01:48.080
按键事件

00:01:48.080 --> 00:01:51.580
 “ Keydown”表示您按“ Command-K” 

00:01:51.580 --> 00:01:52.464
他在屏幕上的样子

00:01:52.464 --> 00:01:53.630
让我们来看看为什么

00:01:53.630 --> 00:01:55.800
我在角落看到这些红色三角形

00:01:55.800 --> 00:01:58.370
我看到一个算术图案，后面是一个图表

00:01:58.370 --> 00:02:01.160
如果是这样，请计算页面上的样式

00:02:01.160 --> 00:02:03.630
元素的布局后面是页面

00:02:03.630 --> 00:02:06.680
然后计算页面上的样式

00:02:06.680 --> 00:02:09.250
然后，在页面上布置项目

00:02:09.250 --> 00:02:11.160
这似乎太多了

00:02:11.160 --> 00:02:13.760
实际上，每一个看起来都很长

00:02:13.760 --> 00:02:16.410
首先是93毫秒

00:02:16.410 --> 00:02:18.240
在计算模式时

00:02:18.240 --> 00:02:20.640
因此，如果我们单击它，您可以在此处看到

00:02:20.640 --> 00:02:23.160
少于9,000个项目

00:02:23.160 --> 00:02:24.470
受到风格变化的影响

00:02:24.470 --> 00:02:26.780
这是本来可以

00:02:26.780 --> 00:02:28.309
受到风格变化的影响

00:02:28.309 --> 00:02:30.100
如果您要进行一些样式更改

00:02:30.100 --> 00:02:33.640
谨慎对待模式通常会很好

00:02:33.640 --> 00:02:35.160
你想申请

00:02:35.160 --> 00:02:37.910
但这可能是因为添加了太多元素

00:02:37.910 --> 00:02:40.080
在这种情况下，对于页面

00:02:40.080 --> 00:02:41.800
例如，快速转换器元件

00:02:41.800 --> 00:02:43.770
那可能是问题

00:02:43.770 --> 00:02:46.350
因为它之前是“ HTML”分析

00:02:46.350 --> 00:02:48.790
这使我认为将出现一个新的“ HTML” 

00:02:48.790 --> 00:02:50.670
他有自己的风格计算， 

00:02:50.670 --> 00:02:52.734
然后我们也输入布局

00:02:52.734 --> 00:02:54.150
一样，除了

00:02:54.150 --> 00:02:57.230
 13,000名员工

00:02:57.230 --> 00:02:59.310
再说93毫秒

00:02:59.310 --> 00:03:02.170
这是一个快速的设备

00:03:02.170 --> 00:03:05.010
这种情况在其他设备上将很困难

00:03:05.010 --> 00:03:07.090
我相信我们有一个大问题

00:03:07.090 --> 00:03:09.480
现在好消息，我们开始

00:03:09.480 --> 00:03:10.720
请参阅召回包

00:03:10.720 --> 00:03:12.610
我们可以看到为什么

00:03:12.610 --> 00:03:14.370
所谓的

00:03:14.370 --> 00:03:16.110
那是什么原因呢？ 

00:03:16.110 --> 00:03:18.420
这是这里

00:03:18.420 --> 00:03:21.340
通过单击带有图形“ bugsnag”的钩子

00:03:21.340 --> 00:03:22.840
我不确定这里的主题是什么

00:03:22.840 --> 00:03:26.595
但是他去了“ JQuery”，与此有关

00:03:26.595 --> 00:03:28.000
我不确定这是什么

00:03:28.000 --> 00:03:30.360
然后以其形式启动

00:03:30.360 --> 00:03:32.800
然后是“模态展示，模态背景” 

00:03:32.800 --> 00:03:34.000
好吧

00:03:34.000 --> 00:03:37.900
然后最后，它似乎开始显示

00:03:37.900 --> 00:03:40.710
此“汇总客户端”交互中的内容

00:03:40.710 --> 00:03:44.370
和“汇总核心”并启动

00:03:44.370 --> 00:03:46.541
现在对他们来说非常具体

00:03:46.541 --> 00:03:49.040
出于好奇，让我们快速看一下“模范秀” 

00:03:49.040 --> 00:03:49.860
微型的

00:03:49.860 --> 00:03:52.325
所以我再次告诉他们，只有你

00:03:52.325 --> 00:03:54.200
您将检查所有不是微型的东西

00:03:54.200 --> 00:03:55.680
再做一次

00:03:55.680 --> 00:03:59.780
但是如果我们开始看到添加类之类的东西

00:03:59.780 --> 00:04:01.170
我们正在改变风格

00:04:01.170 --> 00:04:03.130
我们基本上是在改变风格

00:04:03.130 --> 00:04:06.780
所以我们在这里读了一堂课，有一个“消失”课

00:04:06.780 --> 00:04:07.540
新增类别

00:04:07.540 --> 00:04:09.720
所以，您有点开始制作这张照片

00:04:09.720 --> 00:04:12.389
快速扫描图案

00:04:12.389 --> 00:04:13.680
然后更改样式

00:04:13.680 --> 00:04:16.470
然后在这个“调用堆栈”中的其他地方

00:04:16.470 --> 00:04:18.190
读取模式然后写入

00:04:18.190 --> 00:04:19.829
模式，这正是发生的情况

00:04:19.829 --> 00:04:21.130
让我们陷入这个问题

00:04:21.130 --> 00:04:22.280
我会说这是他们的代码

00:04:22.280 --> 00:04:24.320
我建议你去看看这个

00:04:24.320 --> 00:04:27.110
呼叫堆栈在这里

00:04:27.110 --> 00:04:29.210
我敢肯定，这将识别他们的代码

00:04:29.210 --> 00:04:31.130
然后是选择阶段

00:04:31.130 --> 00:04:33.254
我们说，很好，我们应该首先阅读它

00:04:33.254 --> 00:04:34.130
然后我们所有的写作

00:04:34.130 --> 00:04:36.806
像“ Fasttime”这样的库为您做到了

00:04:36.806 --> 00:04:38.180
但是你可以做到

00:04:38.180 --> 00:04:40.470
只要确保您安排好代码

00:04:40.470 --> 00:04:41.920
非常小心

00:04:41.920 --> 00:04:44.700
您可能会上当，所以有“快速” 

00:04:44.700 --> 00:04:45.830
为了帮助你做到这一点

00:04:45.830 --> 00:04:48.150
许多人很好地使用它

00:04:48.150 --> 00:04:50.590
这将是我对他们的第一个建议

00:04:50.590 --> 00:04:54.930
但是由于我在这里，所以我注意到了幻灯片更新树

00:04:54.930 --> 00:04:57.120
在他之后

00:04:57.120 --> 00:05:01.620
更新幻灯片树是“ Chrome”的组织方式

00:05:01.620 --> 00:05:03.679
页面上的所有幻灯片

00:05:03.679 --> 00:05:05.970
一切都应该连接

00:05:05.970 --> 00:05:07.730
这是73毫秒

00:05:07.730 --> 00:05:11.480
太久了

00:05:11.480 --> 00:05:14.350
同样，这是针对如此强大的设备

00:05:14.350 --> 00:05:16.580
那会怎样呢？ 

00:05:16.580 --> 00:05:18.589
好吧，幻灯片就是答案，但是如何

00:05:18.589 --> 00:05:19.880
了解更多？ 

00:05:19.880 --> 00:05:22.250
好吧，我们有一个工具

00:05:22.250 --> 00:05:23.686
我们的Chrome开发工具

00:05:23.686 --> 00:05:25.310
因此，它被称为“ Chrome开发工具” 

00:05:25.310 --> 00:05:26.990
工具中的工具

00:05:26.990 --> 00:05:30.320
要打开颜色选择器，请再次按记录

00:05:30.320 --> 00:05:33.170
而我们要做的是一点滚动

00:05:33.170 --> 00:05:36.590
我可以告诉你这很不好

00:05:39.600 --> 00:05:40.570
我们必须等待

00:05:40.570 --> 00:05:43.070
当颜色选择器打开时

00:05:43.070 --> 00:05:45.550
输入大量信息

00:05:45.550 --> 00:05:48.110
因此提取数据需要很长时间

00:05:48.110 --> 00:05:51.010
并分析并准备检查

00:05:51.010 --> 00:05:53.380
所以我们必须跳起幸福的舞

00:05:53.380 --> 00:05:58.346
圣诞节开始无处不在

00:05:58.346 --> 00:06:01.832
你去找他

00:06:01.832 --> 00:06:03.130
在这里

00:06:03.130 --> 00:06:06.480
我们现在看到的是每秒6帧

00:06:06.480 --> 00:06:07.520
每秒5帧

00:06:07.520 --> 00:06:09.145
这是颜色选择器正在运行时

00:06:09.145 --> 00:06:11.590
每秒约9或10帧

00:06:11.590 --> 00:06:14.930
当然不是每秒60帧，这是我们想要的

00:06:14.930 --> 00:06:18.610
如果我们单击幻灯片，则很抱歉，在顶部

00:06:18.610 --> 00:06:20.777
查看可点击的幻灯片标记

00:06:20.777 --> 00:06:22.610
该细分市场的信息目前不可用

00:06:22.610 --> 00:06:24.270
但它确实出现了

00:06:24.270 --> 00:06:25.890
我们走了

00:06:25.890 --> 00:06:30.351
我们可以将其扩大一点

00:06:30.351 --> 00:06:31.320
我们走了

00:06:34.210 --> 00:06:37.130
我们开始看看幻灯片是什么

00:06:37.130 --> 00:06:38.720
屏幕上所有的盒子

00:06:38.720 --> 00:06:42.500
我会告诉你我们要做什么，我们只是要搬家

00:06:42.500 --> 00:06:47.700
返回，我们在3D空间中展示出来

00:06:47.700 --> 00:06:49.372
太好了

00:06:49.372 --> 00:06:50.880
谁可能不喜欢它？ 

00:06:50.880 --> 00:06:53.360
没有人

00:06:53.360 --> 00:06:54.110
我们走了

00:06:54.110 --> 00:06:55.260
转弯

00:06:55.260 --> 00:06:56.000
回去

00:06:56.000 --> 00:06:57.299
我们走了

00:06:57.299 --> 00:06:58.000
看这个

00:06:58.000 --> 00:06:59.096
很好，不是吗？ 

00:06:59.096 --> 00:07:02.080
似乎转换器的每个元素都很快

00:07:02.080 --> 00:07:05.630
他得到了自己的切面

00:07:05.630 --> 00:07:09.905
我认为这将很难控制

00:07:09.905 --> 00:07:12.030
可以肯定，因为我们可以做

00:07:12.030 --> 00:07:15.440
是按“ Escape”，我们可以

00:07:15.440 --> 00:07:17.360
我们去显示选项

00:07:17.360 --> 00:07:18.930
如果他们不在那

00:07:18.930 --> 00:07:22.910
我们可以转到“更多工具”，然后转到“显示设置” 

00:07:22.910 --> 00:07:24.760
我们可以打开幻灯片边框视图

00:07:24.760 --> 00:07:28.630
是的，当然如我们所料

00:07:28.630 --> 00:07:31.720
每个元素都有其自己的细分

00:07:31.720 --> 00:07:33.730
实际上，即使状态图标也在里面

00:07:33.730 --> 00:07:35.320
它有自己的细分

00:07:35.320 --> 00:07:39.570
我们也将其记入“多功能框”中

00:07:39.570 --> 00:07:41.900
那是那个

00:07:41.900 --> 00:07:45.690
在这里，我们进入“ omnibox_item”，然后出现

00:07:45.690 --> 00:07:47.300
如果是这样的话

00:07:47.300 --> 00:07:50.660
现在，如果我们单击这些元素之一

00:07:50.660 --> 00:07:53.310
我们可以看到她为什么拥有自己的筹码

00:07:53.310 --> 00:07:59.380
通过父母不是亲戚！ 

00:07:59.380 --> 00:08:00.490
我不知道

00:08:00.490 --> 00:08:02.250
它可以替代其他复合内容

00:08:02.250 --> 00:08:03.450
我猜那些

00:08:03.450 --> 00:08:05.900
这是有它自己的东西

00:08:05.900 --> 00:08:08.600
其中之一可以替换

00:08:08.600 --> 00:08:10.260
好吧

00:08:10.260 --> 00:08:13.060
然后您说，您无法压缩它们，因为该芯片

00:08:13.060 --> 00:08:18.440
它具有用于压力支架的不同刀架

00:08:18.440 --> 00:08:19.600
太好了

00:08:19.600 --> 00:08:22.270
那花了我很长时间

00:08:22.270 --> 00:08:24.160
要了解它，当您寻找这些

00:08:24.160 --> 00:08:26.560
你很绝望

00:08:26.560 --> 00:08:28.810
也许可以和Chrome中的工程师谈谈。 

00:08:28.810 --> 00:08:31.210
然后我说，什么！ 

00:08:31.990 --> 00:08:36.909
他们给了我一些指示，我明白了

00:08:36.909 --> 00:08:37.820
哪个好

00:08:37.820 --> 00:08:40.339
能行吗

00:08:40.339 --> 00:08:41.039
谁知道

00:08:41.039 --> 00:08:43.219
这对我来说是令人兴奋的时刻

00:08:43.219 --> 00:08:45.010
他对表演作品一向如此

00:08:45.010 --> 00:08:47.860
你得到一些东西并做一些测试

00:08:47.860 --> 00:08:49.490
你会解决难题吗？ 

00:08:49.490 --> 00:08:50.220
谁知道

00:08:50.220 --> 00:08:51.553
令人兴奋

00:08:51.553 --> 00:08:52.680
这就是为什么我这样做

00:08:52.680 --> 00:08:55.410
是还是不是？ 

00:08:55.410 --> 00:08:57.370
那是问题

00:08:57.370 --> 00:09:01.480
人的灵魂耐心一点更合适吗

00:09:01.480 --> 00:09:04.750
命运之箭或武器毁抵抗

00:09:04.750 --> 00:09:06.380
在麻烦中

00:09:06.380 --> 00:09:08.260
面对

00:09:08.260 --> 00:09:10.240
回到我们的使命

00:09:10.240 --> 00:09:16.990
如果您查看容器元素，它会出现吗？ 

00:09:16.990 --> 00:09:21.370
我必须向上滚动

00:09:21.370 --> 00:09:25.224
有很多很多

00:09:25.224 --> 00:09:26.640
我终于到了

00:09:26.640 --> 00:09:27.650
来啦好啦

00:09:27.670 --> 00:09:30.020
 “ omnibox_results”是容器元素

00:09:30.020 --> 00:09:31.850
卷动

00:09:31.850 --> 00:09:33.990
它有宽度和高度，但是

00:09:33.990 --> 00:09:36.620
滚动条中有剩余Y，隐藏了有剩余X 

00:09:36.620 --> 00:09:39.770
所以她削减了名单，这很棒

00:09:39.770 --> 00:09:43.280
这就是我们想要发生的事情，这非常合乎逻辑

00:09:43.280 --> 00:09:46.760
但是，每个元素都在列表中

00:09:46.760 --> 00:09:49.140
他也有盈余隐藏

00:09:49.140 --> 00:09:52.729
如果每个元素削减其内容

00:09:52.729 --> 00:09:54.270
那你眨一下？好吧

00:09:54.270 --> 00:09:57.040
这有一个特别的部分，因为盈余被隐藏了

00:09:57.040 --> 00:10:02.570
这与基本作品不符

00:10:02.570 --> 00:10:05.060
所以我猜

00:10:05.060 --> 00:10:07.460
她拥有自己的细分

00:10:07.460 --> 00:10:11.340
因此，如果我们消除孩子们隐藏的剩余

00:10:11.340 --> 00:10:12.710
所有这些幻灯片都将消失

00:10:12.710 --> 00:10:15.150
我们会得到一大笔

00:10:15.150 --> 00:10:17.770
可能会更好

00:10:17.770 --> 00:10:20.540
我们将再次运行时间表并停止

00:10:20.540 --> 00:10:23.330
颜色选择器，以免占用所有其他信息

00:10:23.330 --> 00:10:28.330
我们不需要的，我们将记录并通过

00:10:28.330 --> 00:10:29.420
好吧

00:10:29.420 --> 00:10:33.182
现在我们每秒获得约30帧

00:10:33.182 --> 00:10:34.556
好吧，我们上去..好吧

00:10:34.556 --> 00:10:37.160
没有分隔符的5或6可能是9或10 

00:10:37.160 --> 00:10:39.050
颜色..到大约30 

00:10:39.050 --> 00:10:41.010
因此，我们的收购取得了一定的进展

00:10:41.010 --> 00:10:44.300
在这种情况下，使用一个大芯片代替

00:10:44.300 --> 00:10:47.090
数以百计的小幻灯片

00:10:47.090 --> 00:10:49.050
但这不是每秒60帧

00:10:49.050 --> 00:10:50.390
我们想要的是

00:10:50.390 --> 00:10:53.540
我在这张桌子的顶部看到很多紫罗兰色

00:10:53.540 --> 00:10:55.470
这当然对应于

00:10:55.470 --> 00:10:59.980
大约12毫秒的树木开发幻灯片

00:10:59.980 --> 00:11:04.935
那下降到20或24，我认为是25 

00:11:04.935 --> 00:11:07.060
他真的好些，但他还是不好

00:11:07.060 --> 00:11:09.727
理想形状应该大约一毫秒

00:11:09.727 --> 00:11:11.810
那么让我们看看是否可以看到发生了什么

00:11:11.810 --> 00:11:14.680
同样，我们可以运行颜色选择器

00:11:14.680 --> 00:11:18.200
快速运行，看看会发生什么

00:11:18.200 --> 00:11:21.180
我们需要的只是这些轮胎之一

00:11:21.180 --> 00:11:22.990
我们去等待幻灯片

00:11:22.990 --> 00:11:24.080
我们走了

00:11:24.080 --> 00:11:27.120
我们可以在这里看到列表

00:11:27.120 --> 00:11:29.230
我们将重置更改

00:11:29.230 --> 00:11:32.060
您将在快速转换器中看到项目列表

00:11:32.060 --> 00:11:34.210
是的，你会在这里看到

00:11:34.210 --> 00:11:37.980
高度为66.266像素

00:11:37.980 --> 00:11:39.840
好大

00:11:39.840 --> 00:11:43.350
这个巨大的芯片需要调整

00:11:43.350 --> 00:11:46.140
可能会暂时增加压力

00:11:46.140 --> 00:11:49.370
我们可以通过检查项目来证明这一点

00:11:49.370 --> 00:11:52.310
我们要做的是选择“多功能框”元素

00:11:52.310 --> 00:11:57.030
我们会说表演：没事

00:11:57.030 --> 00:11:59.970
这不会在列表上显示任何内容

00:11:59.970 --> 00:12:01.137
那不好

00:12:01.137 --> 00:12:02.720
但是我们能做的就是走

00:12:02.720 --> 00:12:07.090
并报废其中一些

00:12:07.090 --> 00:12:09.650
直到我们有东西要传递

00:12:09.650 --> 00:12:11.837
这需要一两分钟

00:12:15.110 --> 00:12:16.980
好吧，我们现在有一些名单

00:12:16.980 --> 00:12:20.630
我们跑了十个

00:12:20.630 --> 00:12:25.440
清单的大小不同

00:12:25.440 --> 00:12:28.556
我们将记录另一个时间表

00:12:28.556 --> 00:12:30.430
我们将在此处关闭颜色选择器

00:12:30.430 --> 00:12:33.470
没有它我们将努力

00:12:33.470 --> 00:12:36.320
别这样

00:12:36.320 --> 00:12:39.740
好吧，我们现在得到60 fps 

00:12:39.740 --> 00:12:42.660
更新了12个树状幻灯片

00:12:42.660 --> 00:12:45.480
 13毫秒至3毫秒

00:12:45.480 --> 00:12:49.755
显然，芯片的尺寸是一个重要因素

00:12:49.755 --> 00:12:51.630
但这仍然困扰着我，因为它仍然

00:12:51.630 --> 00:12:54.820
 3毫秒，大约应该是毫秒

00:12:54.820 --> 00:12:59.690
如果快速转换器之外的东西

00:12:59.690 --> 00:13:02.250
也会造成问题

00:13:02.250 --> 00:13:06.000
我的直觉告诉我，在我检查完之后

00:13:06.000 --> 00:13:09.720
这将是实际的页面内容

00:13:09.720 --> 00:13:12.050
实际上，我们可以确认这一点，因为我们可以做

00:13:12.050 --> 00:13:14.820
是确定颜色

00:13:14.820 --> 00:13:17.830
我们将快速滚动页面的内容

00:13:17.830 --> 00:13:19.080
每秒60帧

00:13:19.080 --> 00:13:23.560
我们可以在这里停下来，这会很好

00:13:23.560 --> 00:13:27.930
但是我认为芯片组更新树仍然

00:13:27.930 --> 00:13:30.790
太好了，所以我们必须看看该怎么做

00:13:30.790 --> 00:13:35.720
 ·查看分页符

00:13:35.720 --> 00:13:43.050
我们有“ msgs_scroller_div” 12.544像素

00:13:43.050 --> 00:13:45.080
和主要的分隔符

00:13:45.080 --> 00:13:50.750
看起来像以前的内容约12,000 

00:13:50.750 --> 00:13:52.270
秒和10,000 

00:13:52.270 --> 00:13:54.290
这些都是很棒的切片

00:13:54.290 --> 00:13:58.400
如果我们摆脱了这个，我们可以在这里看到

00:13:58.400 --> 00:14:02.130
走开

00:14:02.130 --> 00:14:03.080
我们走了

00:14:03.080 --> 00:14:05.940
这是下角的页面

00:14:05.940 --> 00:14:07.820
就是这样

00:14:07.820 --> 00:14:08.820
我们走了

00:14:08.820 --> 00:14:10.360
那才是真正的样子

00:14:10.360 --> 00:14:11.840
这是页面的内容

00:14:11.840 --> 00:14:14.520
我们这里还有另一个，利润也

00:14:14.520 --> 00:14:18.310
由于某种原因，我不确定

00:14:18.310 --> 00:14:22.070
但是看起来也很大

00:14:22.070 --> 00:14:25.840
我认为如果您使用的是快速转换器

00:14:25.840 --> 00:14:28.640
我将使用“回收者视图”之类的内容

00:14:28.640 --> 00:14:32.425
在哪里可以获得更小的DOM 

00:14:32.425 --> 00:14:33.716
然后您回收物品

00:14:33.716 --> 00:14:35.590
这意味着该方案将更简单

00:14:35.590 --> 00:14:37.620
样式计算应该更简单

00:14:37.620 --> 00:14:39.110
一切都应该更简单

00:14:39.110 --> 00:14:41.250
您可以使用类似“ requestIdleCallback”的名称

00:14:41.250 --> 00:14:43.450
只是为了对DOM进行更改

00:14:43.450 --> 00:14:46.040
当用户放慢速度并想要添加加速器时

00:14:46.040 --> 00:14:47.858
或类似的东西

00:14:47.858 --> 00:14:51.200
但是也许您应该对它有所不同

00:14:51.200 --> 00:14:53.080
您在哪里使用“ requestIdleCallback” 

00:14:53.080 --> 00:14:54.630
还是他们要求快速解决方案

00:14:54.630 --> 00:14:56.740
马上就做，并感到震惊

00:14:56.740 --> 00:14:59.220
您可能会被冻结片刻或变得虚弱一些

00:14:59.220 --> 00:15:01.720
但是肯定比得到更好

00:15:01.720 --> 00:15:06.730
如此大量的筹码只会增加压力

00:15:06.730 --> 00:15:07.770
一会儿

00:15:07.770 --> 00:15:10.260
所以，你在这里

00:15:10.260 --> 00:15:11.500
很多东西

00:15:11.500 --> 00:15:15.790
幻灯片调色板，颜色检查器

00:15:15.790 --> 00:15:19.120
一般的开发工具以及滚动性能问题

00:15:19.120 --> 00:15:21.520
你应该看看这个假期

00:15:21.520 --> 00:15:22.980
哇

00:15:22.980 --> 00:15:25.230
如果滚动有问题

00:15:25.230 --> 00:15:26.646
颜色不是

00:15:26.646 --> 00:15:29.640
它们可能是细分

00:15:29.640 --> 00:15:32.000
检查一下

00:15:32.000 --> 00:15:37.380
祝您假期愉快，2016年见！ 

00:15:37.380 --> 00:15:38.340
很热情

00:15:38.340 --> 00:15:39.360
新年

00:15:39.360 --> 00:15:40.661
年

