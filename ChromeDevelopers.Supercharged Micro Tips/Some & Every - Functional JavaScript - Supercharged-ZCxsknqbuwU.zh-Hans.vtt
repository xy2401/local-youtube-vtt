WEBVTT
Kind: captions
Language: zh-Hans

00:00:03.240 --> 00:00:13.780
 [音乐] 

00:00:10.950 --> 00:00:15.670
上一次我们谈到过滤器

00:00:13.780 --> 00:00:17.860
允许您抛出的擦除方法

00:00:15.670 --> 00:00:20.259
不能满足条件的数组元素

00:00:17.860 --> 00:00:22.060
谓词有时，但是你不是

00:00:20.259 --> 00:00:24.340
真的很想扔东西

00:00:22.060 --> 00:00:26.349
而是在是否会有

00:00:24.340 --> 00:00:28.689
过滤后剩下的一切

00:00:26.349 --> 00:00:31.179
由于这个原因，有一些

00:00:28.689 --> 00:00:33.670
假设我们有一个带有

00:00:31.179 --> 00:00:35.500
之前的两个必填字段

00:00:33.670 --> 00:00:37.660
提交我们要确保的表格

00:00:35.500 --> 00:00:40.540
每个必填字段都有一个值

00:00:37.660 --> 00:00:43.420
在里面，我们可以在这里使用每一个惊喜

00:00:40.540 --> 00:00:45.909
当每个

00:00:43.420 --> 00:00:49.030
数组中的元素满足给定

00:00:45.909 --> 00:00:51.339
谓词的对应词是一个

00:00:49.030 --> 00:00:53.199
如果存在，则返回true的方法

00:00:51.339 --> 00:00:55.180
数组中至少一个元素

00:00:53.199 --> 00:00:56.619
满足谓词的条件

00:00:55.180 --> 00:00:58.540
你有几个功能

00:00:56.619 --> 00:01:01.119
验证来自不同地址的地址格式

00:00:58.540 --> 00:01:03.159
您所处的国家

00:01:01.119 --> 00:01:05.379
真正感兴趣的是这些

00:01:03.159 --> 00:01:07.810
评估人员说， 

00:01:05.379 --> 00:01:10.060
用户有效且不一定

00:01:07.810 --> 00:01:12.520
这些验证者中的哪一个这么说

00:01:10.060 --> 00:01:14.229
所以每时每刻都要牢记

00:01:12.520 --> 00:01:17.620
你用这些词来形容

00:01:14.229 --> 00:01:19.810
如果您错过了我们的情况

00:01:17.620 --> 00:01:21.970
在功能上已经有一集

00:01:19.810 --> 00:01:23.740
上一次在JavaScript中使用数组方法

00:01:21.970 --> 00:01:26.320
如果你错过了那个，你应该看

00:01:23.740 --> 00:01:28.510
它在这里，如果你想知道

00:01:26.320 --> 00:01:29.980
当下一集出来时，你

00:01:28.510 --> 00:01:32.940
应该订阅这个频道

00:01:29.980 --> 00:01:32.940
收到通知

