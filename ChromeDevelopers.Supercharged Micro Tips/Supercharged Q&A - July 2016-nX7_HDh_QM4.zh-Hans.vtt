WEBVTT
Kind: captions
Language: zh-Hans

00:00:03.450 --> 00:00:06.440
 -欢迎来到参议员和吉姆的《增压》。我是保罗

00:00:06.440 --> 00:00:07.320
我是索玛

00:00:07.320 --> 00:00:08.029
是的

00:00:08.029 --> 00:00:10.950
现在，问题来自YouTube， 

00:00:10.950 --> 00:00:12.424
来自Twitter，来自不同的地方。 

00:00:12.424 --> 00:00:14.840
这次我们将回答唯一的问题。 

00:00:14.840 --> 00:00:15.650
而您选择了它。 

00:00:15.650 --> 00:00:16.670
您选择了哪一个？ 

00:00:16.670 --> 00:00:18.850
我选择了引起我好奇的问题， 

00:00:18.850 --> 00:00:20.100
因为它有很多层。 

00:00:20.100 --> 00:00:23.120
说，什么是最好的介绍方法

00:00:23.120 --> 00:00:25.557
导航中的新内容？因为展览空间很贵。 

00:00:25.557 --> 00:00:27.787
看看您是如何用列出的图层提出问题的？ 

00:00:28.907 --> 00:00:30.334
老兄，调整一下自己

00:00:30.334 --> 00:00:31.421
不好意思

00:00:31.589 --> 00:00:33.080
他说的没错

00:00:33.080 --> 00:00:36.180
内容输入的导航成本很高。 

00:00:36.180 --> 00:00:36.920
有两个原因吧？ 

00:00:36.920 --> 00:00:38.730
你动了，所以你动了。 

00:00:38.730 --> 00:00:40.670
而您想要保持一切顺畅顺畅， 

00:00:40.670 --> 00:00:41.630
每秒60帧。 

00:00:41.630 --> 00:00:44.490
然后，您激发布局和图案

00:00:44.490 --> 00:00:47.890
通过将内容链接到DOM，只需上色一次。 

00:00:47.890 --> 00:00:49.770
我很明白他的意思。 

00:00:49.770 --> 00:00:50.980
还是他的意思。 

00:00:50.980 --> 00:00:54.367
我想到的第一件事就是使用诸如“包含”之类的东西。 

00:00:54.367 --> 00:00:56.080
但这仅适用于Chrome 52。 

00:00:56.080 --> 00:00:58.370
它在任何地方都不可用。 

00:00:58.370 --> 00:01:00.840
但是你要用内容做点什么

00:01:00.840 --> 00:01:02.720
访问并将包含内容， 

00:01:02.720 --> 00:01:06.250
或严格控制，然后至少进行计划和着色

00:01:06.250 --> 00:01:07.740
因此，所有这些帐户

00:01:07.740 --> 00:01:09.750
它至少在此元素内部已解锁。 

00:01:09.750 --> 00:01:12.800
但我知道你最近在做一些工作

00:01:12.800 --> 00:01:15.110
和一些无尽量角器上的Chrome工程师一起。 

00:01:15.110 --> 00:01:17.510
您为什么不解释那里发生了什么？ 

00:01:17.510 --> 00:01:20.240
规划许可很昂贵。 

00:01:20.240 --> 00:01:23.530
但这是您无法真正克服的。 

00:01:23.530 --> 00:01:24.970
当您关联新事物时

00:01:24.970 --> 00:01:27.800
必须在文档中进行计划。 

00:01:27.800 --> 00:01:29.990
否则，浏览器将不知道将其放置在何处。 

00:01:29.990 --> 00:01:33.195
降低成本的另一种方法

00:01:33.195 --> 00:01:36.290
是保持项目数

00:01:36.290 --> 00:01:37.897
在DOM中很低。 

00:01:37.897 --> 00:01:39.380
 -所以我们以前看过，对吧？ 

00:01:39.380 --> 00:01:41.931
在“父级”回收“报价”。 

00:01:41.931 --> 00:01:43.290
这是相当标准的。 

00:01:43.290 --> 00:01:44.480
只是回收它。 

00:01:44.480 --> 00:01:45.191
知道了

00:01:45.191 --> 00:01:48.480
我们唯一要做的是

00:01:48.480 --> 00:01:51.290
我们只在屏幕上保存了项目， 

00:01:51.290 --> 00:01:52.725
并将其一部分放在顶部和底部

00:01:52.725 --> 00:01:54.640
这是当您向上或向下移动时。 

00:01:54.640 --> 00:01:56.600
但基本上，您外出的次数越多， 

00:01:56.600 --> 00:01:58.620
不会有任何物品了。 

00:01:58.620 --> 00:02:01.850
我们只将地方与空元素一起使用

00:02:01.850 --> 00:02:04.059
而不是将所有内容放在顶部。 

00:02:04.059 --> 00:02:05.700
所以你还有回收

00:02:05.700 --> 00:02:08.196
哪个会做计划，着色等等。 

00:02:08.196 --> 00:02:11.460
而这意味着通过减少DOM人口- 

00:02:11.460 --> 00:02:12.170
绝对是

00:02:12.170 --> 00:02:13.300
你基本上是- 

00:02:13.300 --> 00:02:14.934
它足够快。 

00:02:14.934 --> 00:02:16.640
足够快。 

00:02:16.640 --> 00:02:19.370
在手机还是在电脑上？ 

00:02:19.370 --> 00:02:20.380
 -实际上都是。 

00:02:20.380 --> 00:02:21.720
这是目标之一。 

00:02:21.720 --> 00:02:24.970
实际上，即使在中低档设备上，它也足够快， 

00:02:24.970 --> 00:02:26.610
如此之多，以至于他们将继续工作。 

00:02:26.610 --> 00:02:28.870
您会顺利过渡

00:02:28.870 --> 00:02:30.300
每秒60帧。 

00:02:30.300 --> 00:02:31.010
知道了

00:02:31.010 --> 00:02:33.610
我有另一个问题

00:02:33.610 --> 00:02:36.350
我知道他在做一些“墓碑”。 

00:02:36.350 --> 00:02:38.750
再次向我解释

00:02:38.750 --> 00:02:40.990
 “神殿见证人”到底有什么好处？ 

00:02:40.990 --> 00:02:43.760
 “自上而下”是一种技巧

00:02:44.380 --> 00:02:47.173
因为您还没有数据

00:02:47.173 --> 00:02:48.920
在此示例中，您正在合并

00:02:48.920 --> 00:02:50.510
网络来源，我们在这里带来数据

00:02:50.510 --> 00:02:51.430
我们要展示的。 

00:02:51.430 --> 00:02:53.560
但是有时候，人们会迅速行动， 

00:02:53.560 --> 00:02:55.470
太多了，您必须要出现在屏幕上

00:02:55.470 --> 00:02:57.160
但是您还没有数据。 

00:02:57.160 --> 00:03:00.700
因此，与其不放置任何东西，做不好的事情或锁定， 

00:03:00.700 --> 00:03:02.300
我们放了一个“神殿见证人”，他说

00:03:02.300 --> 00:03:03.910
这将在这里满足。 

00:03:03.910 --> 00:03:06.398
这是Facebook的突出表现

00:03:06.398 --> 00:03:07.360
当您打开应用程序时。 

00:03:07.360 --> 00:03:09.230
它只是表明有一篇文章。 

00:03:09.230 --> 00:03:12.100
空白行显示为无文本，只有灰色框。 

00:03:12.100 --> 00:03:12.800
知道了

00:03:12.800 --> 00:03:13.950
当数据到达时

00:03:13.950 --> 00:03:17.110
它将变成要显示的东西。 

00:03:17.110 --> 00:03:19.050
我们将做同样的事情。 

00:03:19.050 --> 00:03:21.210
当用户去

00:03:21.210 --> 00:03:22.960
比我们的追赶能力更快， 

00:03:22.960 --> 00:03:25.910
与其联系不上，致使行动不便， 

00:03:25.910 --> 00:03:27.490
我们将连接“见证神社”。 

00:03:28.780 --> 00:03:31.020
这使我们能够保持过渡的进行， 

00:03:31.020 --> 00:03:34.090
我们将解决留在同一个地方的问题

00:03:34.090 --> 00:03:36.280
当数据到达时，由于元素可以增长， 

00:03:36.280 --> 00:03:39.300
因为这是一个意想不到的巨大文本

00:03:39.300 --> 00:03:40.844
或那里有照片。 

00:03:40.844 --> 00:03:41.940
还有所有这些东西。 

00:03:41.940 --> 00:03:44.300
它使用户体验非常流畅。 

00:03:44.300 --> 00:03:46.090
我想到的事情

00:03:46.090 --> 00:03:49.970
在此方面，它更像是优先考虑过渡

00:03:49.970 --> 00:03:50.975
最重要的是

00:03:50.975 --> 00:03:52.784
这是必须的。 

00:03:52.784 --> 00:03:55.733
它代表用户交互。 

00:03:55.733 --> 00:03:57.160
是的，他们想看内容， 

00:03:57.160 --> 00:03:59.240
但是他们不希望您成为搬家的负担， 

00:03:59.240 --> 00:04:01.090
因为这不会打动人。 

00:04:01.730 --> 00:04:04.130
您是否使用类似于requestIdleCallback的方法

00:04:04.130 --> 00:04:06.940
确保主题的主要流程可用于行动

00:04:06.940 --> 00:04:09.800
在花时间尝试建立资料集之前， 

00:04:09.800 --> 00:04:12.099
还是这还没有完成？ 

00:04:12.119 --> 00:04:16.890
我们移走访存，当信息返回时，我们将对其进行检查。 

00:04:16.890 --> 00:04:18.770
我不认为我们正在使用requestIdleCallback 

00:04:18.770 --> 00:04:19.874
在演示版本中。 

00:04:19.874 --> 00:04:22.620
但是我们正在检查屏幕上的元素。 

00:04:22.620 --> 00:04:23.960
他需要绑吗？ 

00:04:23.960 --> 00:04:25.650
因为如果它已经不在屏幕上， 

00:04:25.650 --> 00:04:27.570
用户移动非常快， 

00:04:27.570 --> 00:04:29.396
无需处理计划

00:04:29.396 --> 00:04:32.890
然后再将其取下，因为它已经在屏幕外了。 

00:04:33.010 --> 00:04:35.330
所以这有点像预订。 

00:04:35.330 --> 00:04:38.580
如果我们知道屏幕上的位置，RequestIdleCallback可能很棒。 

00:04:38.580 --> 00:04:41.484
但是，您的浏览器可能正在忙于解密

00:04:41.484 --> 00:04:43.540
提取请求之类的。 

00:04:43.540 --> 00:04:45.884
最好先解密一下， 

00:04:45.884 --> 00:04:47.270
我们把浏览器变成了

00:04:47.270 --> 00:04:51.030
可用于链接数据以替换神社见证人。 

00:04:51.030 --> 00:04:51.755
知道了太好了

00:04:51.755 --> 00:04:53.639
所以我认为为了总结

00:04:53.639 --> 00:04:55.320
这是“尽可能避免”。 

00:04:55.320 --> 00:04:57.252
如果不能，请保持较低的成本。 

00:04:57.252 --> 00:04:59.990
关于工作一定是非常战术的

00:04:59.990 --> 00:05:02.180
您正在执行的操作，或者通过检查是否仍然存在

00:05:02.180 --> 00:05:04.140
在窗口中，需要对其进行处理。 

00:05:04.140 --> 00:05:05.760
甚至可能考虑一下

00:05:05.760 --> 00:05:07.006
如requestIdleCallback。 

00:05:07.006 --> 00:05:08.810
做您只需要做的工作。 

00:05:08.810 --> 00:05:10.570
这是我从中学到的东西之一。 

00:05:10.570 --> 00:05:12.729
而且我认为重要的是

00:05:12.729 --> 00:05:14.760
始终是真实设备上的体验。 

00:05:14.760 --> 00:05:16.470
就像我们的模式模拟一样

00:05:16.470 --> 00:05:20.238
这对于验证布局是否有效以及甚至可以减慢网络速度很有用。 

00:05:20.238 --> 00:05:22.520
我认为在未来的Chrome版本中， 

00:05:22.520 --> 00:05:25.780
减慢处理器以模拟速度较慢的设备。 

00:05:26.390 --> 00:05:29.600
但是你真的不知道感觉如何

00:05:29.600 --> 00:05:34.240
甚至可以在内存有限的处理器中尝试使用。 

00:05:34.240 --> 00:05:36.850
而且您意识到，即使他在办公桌上工作良好， 

00:05:36.850 --> 00:05:39.650
在笔记本电脑上，每秒将少于60帧。 

00:05:39.650 --> 00:05:41.990
这件事在我们身上发生了两次。 

00:05:41.990 --> 00:05:44.500
这仅仅是一种新的体验

00:05:44.500 --> 00:05:45.850
如果您使用的是设备。 

00:05:45.850 --> 00:05:47.205
知道了我认为就这些。 

00:05:47.205 --> 00:05:49.191
就像我们说的，尽量避免做。 

00:05:49.191 --> 00:05:51.050
表现是避免工作的艺术。 

00:05:51.050 --> 00:05:53.860
如果不能，请尽量减少。 

00:05:53.860 --> 00:05:57.420
但是，我想我们下次见。 

