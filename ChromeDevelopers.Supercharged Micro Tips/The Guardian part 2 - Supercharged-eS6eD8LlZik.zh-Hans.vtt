WEBVTT
Kind: captions
Language: zh-Hans

00:00:19.532 --> 00:00:20.990
这是“增压”。 

00:00:20.990 --> 00:00:23.544
这是我浏览的程序

00:00:23.544 --> 00:00:24.460
您提供的网站。 

00:00:24.460 --> 00:00:26.080
并寻找其性能问题。 

00:00:26.080 --> 00:00:29.895
保罗·刘易斯（Paul Lewis），天使般的声音和猪脸。 

00:00:31.230 --> 00:00:33.570
在上一集中，我们研究了页面加载性能

00:00:33.570 --> 00:00:34.320
 “卫报” 

00:00:34.320 --> 00:00:36.145
我们今天要做的事情非常相似。 

00:00:36.145 --> 00:00:38.270
将成为“卫报”，因为我们

00:00:38.270 --> 00:00:39.561
我们将充分利用它。 

00:00:39.561 --> 00:00:40.785
为什么不呢

00:00:40.785 --> 00:00:44.040
从上次澄清以来的小订单。 

00:00:44.040 --> 00:00:47.200
我提供了非常酷的书签， 

00:00:47.200 --> 00:00:49.290
要关闭并打开样式并关闭

00:00:49.290 --> 00:00:51.680
遥远的模式和离开内心的模式

00:00:51.680 --> 00:00:54.210
与页面一起发送。 

00:00:54.210 --> 00:00:56.300
该工具存在问题

00:00:56.300 --> 00:00:58.470
导致某些页面内容

00:00:58.470 --> 00:01:00.730
表现异常。 

00:01:00.730 --> 00:01:02.190
谁编写的代码有错误？ 

00:01:02.190 --> 00:01:03.010
我不是他们

00:01:03.010 --> 00:01:05.430
告诉我们源代码。 

00:01:05.430 --> 00:01:07.840
如果您愿意，可以自己使用。 

00:01:07.840 --> 00:01:09.390
我要做的是

00:01:09.390 --> 00:01:12.210
我看，应用程序中的滚动性能。 

00:01:12.210 --> 00:01:13.990
我将在移动设备上进行操作。 

00:01:13.990 --> 00:01:16.020
因为如果遇到性能问题

00:01:16.020 --> 00:01:18.270
在您的手机上，您将已经感受到。 

00:01:18.270 --> 00:01:19.810
您会真正注意到它。 

00:01:19.810 --> 00:01:21.570
所以这是一个很好的机会

00:01:21.570 --> 00:01:24.490
要加入并加入，如果我可以在手机上修复它， 

00:01:24.490 --> 00:01:27.344
它在计算机上将具有很高的速度。 

00:01:27.344 --> 00:01:28.760
因此，这确实是一个巨大的机会。 

00:01:28.760 --> 00:01:32.060
好吧，我有一个值得信赖的Nexus设备。 

00:01:32.060 --> 00:01:36.790
我先解锁

00:01:36.790 --> 00:01:39.070
因为它是锁定的。 

00:01:39.070 --> 00:01:41.150
在这个节目中，我戴着很多帽子。 

00:01:41.150 --> 00:01:43.080
在我的职业中，我戴着很多帽子。 

00:01:43.080 --> 00:01:44.820
这顶爵士帽。 

00:01:44.820 --> 00:01:46.660
我要检查Chrome。 

00:01:46.660 --> 00:01:50.730
在这里您可以看到它显示了Chrome Dev 

00:01:50.730 --> 00:01:52.070
是的，那很好。 

00:01:52.070 --> 00:01:53.440
这是一个新标签。 

00:01:53.440 --> 00:01:54.480
准备战斗了吗？ 

00:01:54.480 --> 00:01:56.220
 -什么？ 

00:01:56.220 --> 00:01:57.800
我必须回牙。 

00:01:57.800 --> 00:02:00.700
准备战斗。 

00:02:00.700 --> 00:02:02.060
等一下

00:02:02.060 --> 00:02:05.260
让我们打开一个带有URL的标签。 

00:02:05.260 --> 00:02:06.360
然后我们按一下。 

00:02:06.360 --> 00:02:07.260
并打开它。 

00:02:07.260 --> 00:02:09.419
这意味着我们可以检查它， 

00:02:09.419 --> 00:02:11.640
这带来了Chrome Dev工具。 

00:02:11.640 --> 00:02:12.800
保罗文明。 

00:02:12.800 --> 00:02:13.980
我是黑帮老大

00:02:13.980 --> 00:02:16.100
我可以照顾孩子。 

00:02:16.100 --> 00:02:18.210
我和你一样很棒。 

00:02:18.210 --> 00:02:21.384
我按时到了，这是我最喜欢的地方， 

00:02:21.384 --> 00:02:23.550
除了项目或控制台。 

00:02:23.550 --> 00:02:25.660
我只是爱-我非常爱他们。 

00:02:25.660 --> 00:02:28.380
这就像选择您喜欢的孩子。 

00:02:28.380 --> 00:02:28.964
我做不到

00:02:28.964 --> 00:02:30.546
我将检查滚动性能。 

00:02:30.546 --> 00:02:32.210
因为滚动是图形。 

00:02:32.210 --> 00:02:35.170
如果有滚动问题， 

00:02:35.170 --> 00:02:38.270
这肯定会很清楚

00:02:38.270 --> 00:02:40.610
对于本网站的用户。 

00:02:40.610 --> 00:02:42.370
而且您知道该网站的内容。 

00:02:42.370 --> 00:02:44.150
因此滚动应为60 fps。 

00:02:44.150 --> 00:02:45.108
这样的事情。 

00:02:45.108 --> 00:02:48.950
组合帽子和文明的爵士乐。 

00:02:48.950 --> 00:02:50.650
我会记录。 

00:02:50.650 --> 00:02:53.980
我会这样通过。 

00:02:53.980 --> 00:02:57.940
在滚动过程中，每当帧频下降时， 

00:02:57.940 --> 00:03:00.720
有一个亮黄色的组，JavaScript。 

00:03:00.720 --> 00:03:04.600
因此，很高兴知道它是JavaScript。 

00:03:04.600 --> 00:03:06.580
但我认为我们需要更多细节。 

00:03:06.580 --> 00:03:09.070
所以我要做的是运行探查器JavaScript。 

00:03:09.070 --> 00:03:11.250
好，探查器JavaScript已打开。 

00:03:11.250 --> 00:03:12.282
我将按注册。 

00:03:12.282 --> 00:03:14.310
我将做一些滚动。 

00:03:14.310 --> 00:03:16.720
大多数时候我依靠编辑

00:03:16.720 --> 00:03:20.810
从大麦中分离出小麦。 

00:03:20.810 --> 00:03:21.590
是啊

00:03:21.590 --> 00:03:24.580
小麦是100内的一件事

00:03:24.580 --> 00:03:26.810
告诉他值得一听。 

00:03:26.810 --> 00:03:29.090
在大多数情况下， 

00:03:29.090 --> 00:03:30.860
我不喜欢金cow豆。 

00:03:30.860 --> 00:03:32.540
这样的时间表。 

00:03:32.540 --> 00:03:35.410
时间表。 

00:03:35.410 --> 00:03:37.590
时间表。 

00:03:37.590 --> 00:03:40.950
当您查看时间表时，通常会很好

00:03:40.950 --> 00:03:43.890
尝试量身定制工作。 

00:03:43.890 --> 00:03:47.570
 JavaScript要做的一件事是探查器

00:03:47.570 --> 00:03:51.090
是它按文件为结果着色。 

00:03:51.090 --> 00:03:52.470
因此，如果您看到相同的颜色， 

00:03:52.470 --> 00:03:54.100
我知道这是同一文件。 

00:03:54.100 --> 00:03:56.099
这真的非常有用

00:03:56.099 --> 00:03:57.680
我们首先分开说， 

00:03:57.680 --> 00:04:00.280
好吧，工作来自哪里？ 

00:04:00.280 --> 00:04:02.030
谁负责这项工作？ 

00:04:02.030 --> 00:04:08.940
所以您可以看到，我认为其中大多数是缓慢加载，加载广告位

00:04:08.940 --> 00:04:10.010
有一条JS消息。 

00:04:10.010 --> 00:04:11.640
我不确定这是什么。 

00:04:11.640 --> 00:04:17.019
但是我的活动告诉我，他们正在尝试显示消息。 

00:04:17.019 --> 00:04:22.634
但是它通过捕获器Raven.js传递。 

00:04:22.634 --> 00:04:24.800
因此，我认为这可以作为网关。 

00:04:25.620 --> 00:04:26.910
 pub广告的Impl展示。 

00:04:26.910 --> 00:04:30.060
因此，有一些与广告有关的东西。 

00:04:30.060 --> 00:04:32.250
转到下一个。 

00:04:32.250 --> 00:04:34.230
另一个动画帧。 

00:04:34.230 --> 00:04:35.980
更多广告，评估脚本。 

00:04:35.980 --> 00:04:38.190
这里有一个广告。 

00:04:38.190 --> 00:04:40.216
让我们来看看。 

00:04:40.216 --> 00:04:41.530
更改就绪状态。 

00:04:41.530 --> 00:04:44.180
所以某些事情本应存在的地方发生

00:04:44.180 --> 00:04:46.160
一些Ajax。 

00:04:46.160 --> 00:04:48.350
我们这里有一些Parse HTML。 

00:04:48.350 --> 00:04:50.750
那意味着它存在

00:04:50.750 --> 00:04:52.150
疯狂地持有某种东西。 

00:04:52.150 --> 00:04:55.140
但是这种重新计算模式会导致大量重新计算。 

00:04:55.140 --> 00:04:58.320
实际上，这是很多重点

00:04:58.320 --> 00:05:00.140
大约117毫秒。 

00:05:00.140 --> 00:05:02.660
同样，所有这些都锁定了主线程。 

00:05:02.660 --> 00:05:06.109
您实际上传递了时间表。 

00:05:06.109 --> 00:05:08.400
我认为这对每个人都是很好的练习

00:05:08.400 --> 00:05:10.700
这是流量记录时间表。 

00:05:10.700 --> 00:05:13.730
并开始教授到底发生了什么。 

00:05:13.730 --> 00:05:17.850
因此，在这种情况下，存在Outbrains，一些访客正在跟踪。 

00:05:17.870 --> 00:05:22.230
关于广告，有些事情。 

00:05:22.230 --> 00:05:25.740
 “卫报”本身没什么用

00:05:25.740 --> 00:05:27.735
建立多个动画帧请求

00:05:27.735 --> 00:05:29.110
这里有一整块

00:05:29.110 --> 00:05:31.550
只有废物的收集，废物的收集， 

00:05:31.550 --> 00:05:33.180
扔垃圾。 

00:05:33.180 --> 00:05:34.470
使用浪费一词。 

00:05:34.470 --> 00:05:35.980
在英格兰，他们说垃圾这个词。 

00:05:35.980 --> 00:05:38.530
但是有趣的是这种重新计算风格。 

00:05:38.530 --> 00:05:41.442
您可以看到它重新计算了模式

00:05:41.442 --> 00:05:42.650
然后开始布局。 

00:05:42.650 --> 00:05:44.770
强制重新计算模式开始布局。 

00:05:44.770 --> 00:05:47.450
对我们来说，这是非常糟糕的情况。 

00:05:47.450 --> 00:05:49.500
但是，它是第三方代码，因此

00:05:49.500 --> 00:05:51.710
我们无能为力。 

00:05:51.710 --> 00:05:53.520
我想要记住的是

00:05:53.520 --> 00:05:55.410
当您运行第三方代码时， 

00:05:55.410 --> 00:05:57.070
它在您的代码旁边起作用。 

00:05:57.070 --> 00:05:59.670
每个人都在争夺主线， 

00:05:59.670 --> 00:06:01.510
每个人都在使用的线程。 

00:06:01.510 --> 00:06:03.870
就是这样

00:06:03.870 --> 00:06:06.280
当我在五个人的帐篷里有10个人时。 

00:06:06.280 --> 00:06:07.696
真是尴尬。 

00:06:07.696 --> 00:06:08.320
所以我们到了。 

00:06:08.320 --> 00:06:10.790
我认为他们面对的大部分事情

00:06:10.790 --> 00:06:13.950
附加到滚动性能和事实， 

00:06:13.950 --> 00:06:16.700
这段代码一次不起作用

00:06:16.700 --> 00:06:19.260
不适合浏览器和用户。 

00:06:19.260 --> 00:06:21.230
网络性能从未如此

00:06:21.230 --> 00:06:22.250
只需加载页面。 

00:06:22.250 --> 00:06:24.600
也与图形有关

00:06:24.600 --> 00:06:27.755
关于响应用户标签和类似内容。 

00:06:27.755 --> 00:06:28.880
所以我想看看。 

00:06:28.880 --> 00:06:31.640
我想看看是否有办法再改变一点

00:06:31.640 --> 00:06:33.557
直到用户处于非活动状态。 

00:06:33.557 --> 00:06:34.910
别忘了，您可以注册。 

00:06:34.910 --> 00:06:35.500
一定要

00:06:35.500 --> 00:06:36.010
做这个。 

00:06:36.010 --> 00:06:36.430
你做到了吗？ 

00:06:36.430 --> 00:06:36.980
干得好

00:06:36.980 --> 00:06:38.083
干得好，我按了一下。 

00:06:38.083 --> 00:06:38.780
干得好

00:06:38.780 --> 00:06:40.710
您也可以提交您的位置。 

00:06:40.710 --> 00:06:41.560
很好做。 

00:06:41.560 --> 00:06:42.821
我会看看它们。 

00:06:42.821 --> 00:06:45.100
下集再见。 

00:06:45.100 --> 00:06:45.600
是的

00:06:45.600 --> 00:06:46.395
加油！ 

00:06:47.700 --> 00:06:48.700
他们告诉我扔一支箭

00:06:48.700 --> 00:06:49.741
这很容易。 

00:06:49.741 --> 00:06:51.210
准备好了吗

00:06:51.210 --> 00:06:52.070
数英里远。 

00:06:52.070 --> 00:06:53.160
下一次

00:06:53.160 --> 00:06:55.010
下一次

