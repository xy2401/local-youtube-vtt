WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.000 --> 00:00:05.110
 （音乐） 

00:00:05.110 --> 00:00:08.110
第3季，简短提示“ HTTP / 2” 

00:00:08.110 --> 00:00:10.250
在此简短提示中，我想给你

00:00:10.250 --> 00:00:12.540
一个小工具，可让您操纵

00:00:12.540 --> 00:00:14.330
在本地使用HTTP / 2。 

00:00:14.330 --> 00:00:15.030
我是索玛

00:00:15.030 --> 00:00:17.190
我是编写此工具的作家。 

00:00:17.190 --> 00:00:20.310
大多数浏览器都支持HTTP / 2 

00:00:20.310 --> 00:00:23.040
并对我们的设计进行很多调整

00:00:23.040 --> 00:00:24.895
除了如何构建网络应用程序。 

00:00:24.895 --> 00:00:28.100
供应商方面缺乏支持。 

00:00:28.100 --> 00:00:29.680
所以只需快速操作

00:00:29.680 --> 00:00:32.200
这使它有点困难，特别是如果我们考虑到

00:00:32.200 --> 00:00:34.520
您需要TLS证书才能使HTTP / 2正常工作。 

00:00:34.520 --> 00:00:36.980
向本地主机颁发自签名证书

00:00:36.980 --> 00:00:38.590
是一件很无聊的工作， 

00:00:38.590 --> 00:00:41.840
对我来说，编写该工具的编程足够了催化剂。 

00:00:41.840 --> 00:00:44.300
大多数网络开发人员应注意

00:00:44.300 --> 00:00:47.160
通过在网络内设计的称为简单HTTP的Python。 

00:00:47.160 --> 00:00:49.780
通常从命令行开始。 

00:00:49.780 --> 00:00:52.610
它提供当前列表而不是HTTP。 

00:00:52.610 --> 00:00:57.380
编程的内容称为简单的HTTP / 2提供程序，其工作方式与此类似

00:00:57.380 --> 00:00:59.380
但是它改用HTTP / 2 

00:00:59.380 --> 00:01:02.140
它证明了您。 

00:01:02.140 --> 00:01:04.559
我用Go而不是Python编写了该程序，原因有两个， 

00:01:04.559 --> 00:01:06.760
 A，关于Python我不是很好

00:01:06.760 --> 00:01:09.680
 B，Go具有美丽的副作用，因此

00:01:09.680 --> 00:01:13.620
您只需要上传一个二进制文件，而无需运行时或SDK。 

00:01:13.620 --> 00:01:16.970
您可以找到Windows，Linux和OS X的所有二进制文件

00:01:16.970 --> 00:01:20.100
在GitHub存储库的版本部分中。 

00:01:20.100 --> 00:01:21.470
您安装此工具

00:01:21.470 --> 00:01:23.790
通过将二进制文件放在您的路径中。 

00:01:23.790 --> 00:01:25.790
启动工具时，您将创建

00:01:25.790 --> 00:01:27.825
 key.pem和cert.pem， 

00:01:27.825 --> 00:01:30.850
它们是证书的私有部分和常规部分。 

00:01:30.850 --> 00:01:34.480
然后，您创建服务当前路由的网络提供商。 

00:01:34.480 --> 00:01:36.960
如果您打开Def工具，请转到“网络”按钮

00:01:36.960 --> 00:01:38.540
添加一个协议列。 

00:01:38.540 --> 00:01:41.510
希望您会看到H2节目。 

00:01:41.510 --> 00:01:43.820
这是官方的HTTP / 2代码。 

00:01:43.820 --> 00:01:45.610
这意味着它有效。 

00:01:45.610 --> 00:01:48.800
 HTTP / 2中有一个有趣的功能，称为推送通知

00:01:48.800 --> 00:01:51.510
允许您将其他来源发送给客户

00:01:51.510 --> 00:01:54.050
客户至今还不知道自己需要什么。 

00:01:54.050 --> 00:01:57.050
例如，您可以将JavaScript放在CSS文件中

00:01:57.050 --> 00:01:59.680
当有人要求html索引时。 

00:01:59.680 --> 00:02:03.600
简单的HTTP / 2支持也支持此功能。 

00:02:03.600 --> 00:02:05.130
您需要编写一个JSON文件

00:02:05.130 --> 00:02:07.410
其中包含所有需要通知的来源

00:02:07.410 --> 00:02:09.310
请求特定文件时。 

00:02:09.310 --> 00:02:12.520
将该文件另存为项目根目录下的push.json 

00:02:12.520 --> 00:02:14.980
启动简单的HTTP / 2提供程序。 

00:02:14.980 --> 00:02:17.560
如您所见，缺少即时通知列表的错误

00:02:17.560 --> 00:02:19.000
现在已经不见了。 

00:02:19.000 --> 00:02:21.970
现在，处理器将按照列表中的指定进行通知。 

00:02:21.970 --> 00:02:23.290
就是这样。 

00:02:23.290 --> 00:02:25.890
别忘了体验这个工具

00:02:25.890 --> 00:02:27.210
它不是用于生产网格供应。 

00:02:27.210 --> 00:02:28.930
如果您有任何问题或疑问， 

00:02:28.930 --> 00:02:30.330
随时在Twitter上问我

00:02:30.330 --> 00:02:33.080
或在GitHub Repository存储库上打开票证。 

00:02:33.080 --> 00:02:34.470
享受HTTP / 2。 

00:02:34.470 --> 00:02:40.100
 （音乐） 

