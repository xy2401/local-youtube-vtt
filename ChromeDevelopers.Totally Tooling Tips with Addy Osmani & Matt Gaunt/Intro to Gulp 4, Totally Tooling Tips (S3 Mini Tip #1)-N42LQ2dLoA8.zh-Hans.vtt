WEBVTT
Kind: captions
Language: zh-Hans

00:00:07.890 --> 00:00:12.522
好，今天我们将讨论Gulb 4 

00:00:12.522 --> 00:00:14.190
我以为我会告诉你它的外观

00:00:14.190 --> 00:00:16.535
在JavaScript工具生态系统中。 

00:00:16.535 --> 00:00:17.910
我不会撒谎

00:00:17.910 --> 00:00:20.324
目前，这并不是对Gulp 4的最佳介绍。 

00:00:20.324 --> 00:00:21.990
你怎么说呢

00:00:21.990 --> 00:00:24.470
我们在这里有孩子的回忆

00:00:24.470 --> 00:00:28.450
升级到Babel 6并担心WebPak真是太棒了

00:00:28.450 --> 00:00:30.790
它告诉您必须重写Gulp文件。 

00:00:30.790 --> 00:00:31.814
作为NPM文本。 

00:00:31.814 --> 00:00:33.420
看起来像杰克，是的。 

00:00:33.420 --> 00:00:35.040
但是，可能为时已晚

00:00:35.040 --> 00:00:36.500
因为Make再次流行

00:00:36.500 --> 00:00:37.200
不，不是

00:00:37.200 --> 00:00:38.866
今天我们将讨论Gulp 4 

00:00:38.866 --> 00:00:41.580
我们已经使用Gulp一段时间了

00:00:41.580 --> 00:00:43.730
在Web Starter Kit项目上

00:00:43.730 --> 00:00:45.850
我们在Gulp个人资料上达到了ES 2015。 

00:00:45.850 --> 00:00:47.130
很好玩

00:00:47.130 --> 00:00:49.260
在谈论Gulp 4之前， 

00:00:49.260 --> 00:00:51.800
也许我们应该谈论Gulp 3和一些问题

00:00:51.800 --> 00:00:53.160
 Gulp 4试图解决

00:00:53.160 --> 00:00:57.510
 Gulp 3将使您能够确定任务的可靠性。 

00:00:57.510 --> 00:00:59.895
因此，这里有文本和方法。 

00:00:59.895 --> 00:01:02.350
 Gulp 3将仅确保任务完成

00:01:02.350 --> 00:01:04.964
开始原始任务之前的可靠性。 

00:01:04.964 --> 00:01:06.130
所以我们有一个假设的任务

00:01:06.130 --> 00:01:08.411
我们想同时运行文本和样式

00:01:08.411 --> 00:01:10.060
然后，我们运行默认任务。 

00:01:10.060 --> 00:01:12.060
现在，这些相同的任务也可以

00:01:12.060 --> 00:01:13.760
拥有自己的信誉。 

00:01:13.760 --> 00:01:16.280
您可能要创建自己的文本和样式

00:01:16.280 --> 00:01:18.010
清洁原始的施工指南。 

00:01:18.010 --> 00:01:20.580
您可以在完全空白的板上开始。 

00:01:20.580 --> 00:01:22.940
 Gulp 3很聪明，所以如果

00:01:22.940 --> 00:01:25.410
发现清洁涉及两项任务的特殊规定， 

00:01:25.410 --> 00:01:27.700
这将确保您执行一次任务。 

00:01:27.700 --> 00:01:30.210
因此，所有这些工作只需完成一次。 

00:01:30.210 --> 00:01:33.010
为了实现最大同步，这很棒。 

00:01:33.010 --> 00:01:34.990
但是这种方法有一些问题

00:01:34.990 --> 00:01:36.910
执行此凭证的设置

00:01:36.910 --> 00:01:38.660
一旦你成为强制

00:01:38.660 --> 00:01:40.300
以这种方式设置它们。 

00:01:40.300 --> 00:01:44.270
如果您有监视器或文件侦听器，将变得很困难

00:01:44.270 --> 00:01:46.180
谁将扫描一种类型的文件， 

00:01:46.180 --> 00:01:48.839
以JavaScript文件为例

00:01:48.839 --> 00:01:50.810
 [？它主要是？]带来了变化

00:01:50.810 --> 00:01:52.510
然后删除所有样式表

00:01:52.510 --> 00:01:53.558
在您的dist目录中

00:01:53.558 --> 00:01:55.200
这不完全是您想要的。 

00:01:55.200 --> 00:01:57.700
连续任务可能很困难

00:01:57.700 --> 00:02:01.314
除非您使用运行顺序之类的工具。 

00:02:01.314 --> 00:02:03.980
我认为大多数人每当执行Gulp任务时， 

00:02:03.980 --> 00:02:06.340
他们将使用运行顺序，这是一个命令

00:02:06.340 --> 00:02:07.674
令人惊讶的是，如果他们不

00:02:07.674 --> 00:02:09.210
是的，运行顺序是

00:02:09.210 --> 00:02:12.220
有点定了一段时间。 

00:02:12.220 --> 00:02:14.515
运行顺序的使用似乎有点像这样。 

00:02:14.515 --> 00:02:16.640
但我们会超越它，因为您在这里

00:02:16.640 --> 00:02:18.210
突出显示Gulp 4。 

00:02:18.210 --> 00:02:23.130
因此Gulp 4降低了相关系数，并安装了方括号

00:02:23.130 --> 00:02:24.036
太好了

00:02:24.036 --> 00:02:25.770
它们由实现功能代替

00:02:25.770 --> 00:02:27.391
可以代替使用。 

00:02:27.391 --> 00:02:28.410
打鼓吧。 

00:02:28.410 --> 00:02:29.110
真的- 

00:02:30.030 --> 00:02:30.930
那就是你得到的。 

00:02:30.930 --> 00:02:32.190
我们没有预算

00:02:32.190 --> 00:02:36.510
好了，我们现在有了gulp.series可以连续执行

00:02:36.510 --> 00:02:39.640
 gulp.parallel用于并行执行。 

00:02:39.640 --> 00:02:43.140
他们都给你系数

00:02:43.140 --> 00:02:45.880
命名要执行的任务，并命名另一个要执行的任务。 

00:02:45.880 --> 00:02:47.630
因此它们非常灵活。 

00:02:47.630 --> 00:02:50.995
现在，如果您想今天使用Gulp 4 

00:02:50.995 --> 00:02:52.370
首先需要的一切

00:02:52.370 --> 00:02:56.540
卸载全局版本的Gulp 3 CLI和本地版本

00:02:56.540 --> 00:03:02.640
或者只是在本地安装Gulp 4，然后使用NPM管理您的脚本

00:03:02.640 --> 00:03:04.750
相反，如果您愿意。 

00:03:04.750 --> 00:03:06.610
有些人想这样做。 

00:03:06.610 --> 00:03:09.400
否则，请安装Gulp 4 CLI 

00:03:09.400 --> 00:03:11.200
全球和本地。 

00:03:11.200 --> 00:03:13.310
该指令在记录之前是完整的

00:03:13.310 --> 00:03:16.150
这集。 

00:03:16.150 --> 00:03:18.860
是的，为Gulp VLI选择NPM信息

00:03:18.860 --> 00:03:20.580
并确认它是版本4。 

00:03:20.580 --> 00:03:22.967
如果是这样，请安装它并忽略这些说明。 

00:03:22.967 --> 00:03:25.300
是的，我希望随着这一集的发行， 

00:03:25.300 --> 00:03:28.160
 Gulp 4变得稳定，无法由用户取代

00:03:28.160 --> 00:03:31.250
完全不同的东西

00:03:31.250 --> 00:03:33.050
它仍然是相关的。 

00:03:33.050 --> 00:03:37.700
但是假设我们看其中的一句话

00:03:37.700 --> 00:03:38.680
我们早先输了

00:03:38.680 --> 00:03:41.710
如果要并行实现方法和文本， 

00:03:41.710 --> 00:03:43.630
就这么简单。 

00:03:43.630 --> 00:03:46.875
如果我们重写那些较大的字体之一

00:03:46.875 --> 00:03:48.750
我们以前有过的样子

00:03:48.750 --> 00:03:52.460
所以，如果我们想要最大程度的同步

00:03:52.460 --> 00:03:54.579
我们已经取代了所有的认可安排

00:03:54.579 --> 00:03:55.370
与gulp.parallel 

00:03:55.370 --> 00:03:57.904
听起来不错吗，马特？ 

00:03:57.904 --> 00:03:59.320
你以前说过

00:03:59.320 --> 00:04:01.080
但是我看你的下一张幻灯片。 

00:04:01.080 --> 00:04:03.147
所以我觉得它看起来不好

00:04:03.147 --> 00:04:04.230
是的，不好。 

00:04:04.230 --> 00:04:05.900
这实际上是错误的。 

00:04:05.900 --> 00:04:07.350
这会导致数百个问题。 

00:04:07.350 --> 00:04:11.290
这里清洁过程的可靠性仍然是恒定的， 

00:04:11.290 --> 00:04:13.770
而且每次都被调用

00:04:13.770 --> 00:04:15.800
具有文字或样式。 

00:04:15.800 --> 00:04:17.620
 Gulp 4在这里不检查可靠性

00:04:17.620 --> 00:04:20.450
因为它不是真正的学分。 

00:04:20.450 --> 00:04:22.880
清洁过程进行两次。 

00:04:22.880 --> 00:04:25.500
现在，要获得原始执行顺序， 

00:04:25.500 --> 00:04:27.090
我们需要清洁。 

00:04:27.090 --> 00:04:29.720
然后我们并行运行方法和文本， 

00:04:29.720 --> 00:04:31.090
然后是我们的默认任务。 

00:04:31.090 --> 00:04:34.290
我们可以使用它来完成此任务。 

00:04:34.290 --> 00:04:39.080
所以在这里，结合使用gulp.series和gulp.parallel， 

00:04:39.080 --> 00:04:41.010
我们首先要确保每一步

00:04:41.010 --> 00:04:44.010
连接完成并在gulp.parallel中分组。 

00:04:44.010 --> 00:04:46.750
其余的可以在gulp.series函数中完成

00:04:46.750 --> 00:04:48.280
默认启动命令保留

00:04:48.280 --> 00:04:50.819
和以前一样，但是所有任务都已使用

00:04:50.819 --> 00:04:51.860
对方靠自己。 

00:04:51.860 --> 00:04:55.220
您可以运行Gulp脚本和方法

00:04:55.220 --> 00:04:58.120
您不受这些信用的约束。 

00:04:58.120 --> 00:04:59.420
很好

00:04:59.420 --> 00:05:01.150
因此，我深入到主题

00:05:01.150 --> 00:05:03.191
但是，这很清楚。 

00:05:03.191 --> 00:05:06.369
在此之前，您可以声称Gulp 3的能力

00:05:06.369 --> 00:05:08.250
做正确的事纯属巧合

00:05:08.250 --> 00:05:08.985
目前尚不清楚。 

00:05:08.985 --> 00:05:11.260
所以我们讨论了run.sequence 

00:05:11.260 --> 00:05:11.990
以前

00:05:11.990 --> 00:05:16.035
如果您想从旧版本迁移

00:05:16.035 --> 00:05:19.040
对于gulp.series和gulp.parallel， 

00:05:19.040 --> 00:05:22.220
这是其外观的一个示例。 

00:05:22.220 --> 00:05:24.470
我们将覆盖它，因为它实际上在那里

00:05:24.470 --> 00:05:28.480
博客上有关移动的一些好帖子

00:05:28.480 --> 00:05:29.460
对于Gulp 4。 

00:05:29.460 --> 00:05:32.281
有一个fettblog.eu的博客文章，我们已经复制了一些示例

00:05:32.281 --> 00:05:33.020
一个。 

00:05:33.020 --> 00:05:35.360
但是这个博客的经理实际上有图表

00:05:35.360 --> 00:05:40.180
非常酷，可以展示Gulp 4的完美工作方式

00:05:40.180 --> 00:05:41.340
并将其与Gulp 3进行比较。 

00:05:41.340 --> 00:05:42.350
检查他们的工作。 

00:05:42.350 --> 00:05:46.180
一个We Are Wizards组移至Gulp 4示例。 

00:05:46.180 --> 00:05:48.590
他们解释了刀片和其他方面的差异， 

00:05:48.590 --> 00:05:50.210
这些都是有用且不错的主题

00:05:50.210 --> 00:05:53.300
因此，我希望这一集对您有所帮助。 

00:05:53.300 --> 00:05:55.650
听听他们，而不是我们， 

00:05:55.650 --> 00:05:57.150
因为我们的指导方针可能不好。 

00:05:57.150 --> 00:05:58.820
是的，我们的准则可能会使您失去能力。 

00:05:58.820 --> 00:06:00.790
我也这么认为

00:06:00.790 --> 00:06:02.632
您也可以使用Gulp 4。 

00:06:02.632 --> 00:06:03.590
快乐的孩子。 

