WEBVTT
Kind: captions
Language: zh-Hans

00:00:09.230 --> 00:00:13.049
所以我们在一家咖啡店里

00:00:12.660 --> 00:00:14.730
隧道

00:00:13.049 --> 00:00:17.970
我们不在小酒馆的咖啡店里

00:00:14.730 --> 00:00:20.609
好吧，你完全知道空酒馆

00:00:17.970 --> 00:00:24.359
好吧，我们在一家酒吧，这是有机的

00:00:20.609 --> 00:00:26.820
一个空白的地方是一个酒吧它是一个酒吧

00:00:24.359 --> 00:00:28.560
模块捆绑是一件很重要的事情

00:00:26.820 --> 00:00:30.990
其他让我们哭泣的东西

00:00:28.560 --> 00:00:32.850
说实话的日常基础，但这是

00:00:30.990 --> 00:00:35.610
必不可少的罪恶，因为那时我们得到了一切

00:00:32.850 --> 00:00:37.050
你知道2015年的美好

00:00:35.610 --> 00:00:40.440
你已经处理了很多

00:00:37.050 --> 00:00:42.840
工具，如果我将其浏览器该怎么办

00:00:40.440 --> 00:00:46.649
宝贝笑我把大腿都穿了

00:00:42.840 --> 00:00:50.760
如果我尝试过Babel则设置为当前

00:00:46.649 --> 00:00:51.149
并在没有任何困难的情况下卷起

00:00:50.760 --> 00:00:53.550
没用

00:00:51.149 --> 00:01:00.239
有人羡慕你的地方不是我

00:00:53.550 --> 00:01:02.129
是的，是的，你告诉我如何解决

00:01:00.239 --> 00:01:04.500
它，那将是伟大的事情，所以

00:01:02.129 --> 00:01:05.880
 browserify browserify很好的开始

00:01:04.500 --> 00:01:07.979
借助browserify um，它是用于

00:01:05.880 --> 00:01:09.390
编译您的节点风格注释yes 

00:01:07.979 --> 00:01:12.299
浏览器中的模块

00:01:09.390 --> 00:01:15.330
这基本上是您从NPM上获得的东西

00:01:12.299 --> 00:01:16.470
它将分析您的需求呼叫以建立一个

00:01:15.330 --> 00:01:18.090
捆绑包，您最多可以投放

00:01:16.470 --> 00:01:20.930
使用脚本标签的浏览器很漂亮

00:01:18.090 --> 00:01:23.400
是的，基本上，当您喜欢要求时

00:01:20.930 --> 00:01:25.409
放在里面的东西都放在括号里

00:01:23.400 --> 00:01:28.409
它会查看该文件，然后

00:01:25.409 --> 00:01:29.759
基本上排成一排

00:01:28.409 --> 00:01:31.770
 javascript文件，然后您创建一个

00:01:29.759 --> 00:01:33.869
 JavaScript捆绑是的，所以基本上

00:01:31.770 --> 00:01:35.670
软件包最初发布到NPM 

00:01:33.869 --> 00:01:36.990
打算用于节点将只在

00:01:35.670 --> 00:01:40.259
浏览器有点好

00:01:36.990 --> 00:01:41.549
实用程序之类的东西

00:01:40.259 --> 00:01:43.110
这很简单，所以你去

00:01:41.549 --> 00:01:44.759
并要求我不知道的东西

00:01:43.110 --> 00:01:46.259
一个叫做魔术的模块，他们可能是

00:01:44.759 --> 00:01:48.299
容易，我什至不想看它

00:01:46.259 --> 00:01:50.549
你做到了，我还没有做到

00:01:48.299 --> 00:01:52.530
继续吧，所以我们说你已经

00:01:50.549 --> 00:01:54.210
在名为“独角兽”的模块中需要

00:01:52.530 --> 00:01:56.520
然后可以像开始一样开始使用它

00:01:54.210 --> 00:01:59.310
独角兽之舞，你去运行browserify 

00:01:56.520 --> 00:02:01.259
反对它产生捆绑和何时

00:01:59.310 --> 00:02:03.659
您可以在浏览器日志中尝试一下

00:02:01.259 --> 00:02:06.960
像没有人看着的信息舞蹈

00:02:03.659 --> 00:02:09.149
因为他们不是，我会一直看着

00:02:06.960 --> 00:02:10.229
你在跳舞安妮，那是

00:02:09.149 --> 00:02:13.470
律师进来

00:02:10.229 --> 00:02:14.940
所以说到your browserify是的

00:02:13.470 --> 00:02:18.269
回到我们还必须

00:02:14.940 --> 00:02:19.860
提到网络包，所以网络包在哪里打包

00:02:18.269 --> 00:02:22.830
就像新的热门，我没有

00:02:19.860 --> 00:02:24.840
看着它，因为我上次说话

00:02:22.830 --> 00:02:27.870
给你用这个，你好像你在

00:02:24.840 --> 00:02:31.140
剧烈疼痛时，我旁边有一个水桶

00:02:27.870 --> 00:02:32.940
我眼泪的桌子刚从我的背包里出来

00:02:31.140 --> 00:02:35.280
所以什么包装很棒，这很有用

00:02:32.940 --> 00:02:36.989
只是它不是最好用的所以

00:02:35.280 --> 00:02:38.760
 Web Pack是另一个模块捆绑

00:02:36.989 --> 00:02:42.330
 practicum和gs模块您的AMD 

00:02:38.760 --> 00:02:43.890
浏览器中的模块有几个

00:02:42.330 --> 00:02:46.019
其他功能就像

00:02:43.890 --> 00:02:47.940
用于转换资源的加载程序

00:02:46.019 --> 00:02:49.380
你知道JavaScript，所以你可以

00:02:47.940 --> 00:02:51.150
采取像JSX 

00:02:49.380 --> 00:02:52.380
只是加载它做所有

00:02:51.150 --> 00:02:55.200
给你的转变

00:02:52.380 --> 00:02:58.019
加载程序有点像其他任务

00:02:55.200 --> 00:03:00.290
构建工具，以便您将其用作

00:02:58.019 --> 00:03:05.190
让您了解一些前端构建步骤

00:03:00.290 --> 00:03:06.540
我喜欢这样的东西

00:03:05.190 --> 00:03:09.239
努力弄清楚它的作用

00:03:06.540 --> 00:03:11.040
通过browserify和其他一切正常

00:03:09.239 --> 00:03:12.840
让我们忽略我所拥有的一切

00:03:11.040 --> 00:03:14.970
说那里最主要的是

00:03:12.840 --> 00:03:17.880
我喜欢Web pack的功能是

00:03:14.970 --> 00:03:19.650
代码分割权好了，布丁

00:03:17.880 --> 00:03:22.350
基本上可以让您拆分代码库

00:03:19.650 --> 00:03:25.739
成块，然后您就可以加载

00:03:22.350 --> 00:03:27.600
他们要求很好，所以

00:03:25.739 --> 00:03:29.069
这只是一种跨浏览器的方式

00:03:27.600 --> 00:03:30.690
在这些额外的块中加载

00:03:29.069 --> 00:03:32.430
 JavaScript基本上可以说可以

00:03:30.690 --> 00:03:34.889
配置您知道的内容

00:03:32.430 --> 00:03:36.750
您想如何拆分您的

00:03:34.889 --> 00:03:38.370
代码库，他们只会弄清楚

00:03:36.750 --> 00:03:40.620
其余的还不错

00:03:38.370 --> 00:03:42.989
它也有一个叫做热的锯功能

00:03:40.620 --> 00:03:43.769
你有模块更换吗

00:03:42.989 --> 00:03:47.459
以前听说过

00:03:43.769 --> 00:03:49.500
不，听起来更讨厌

00:03:47.459 --> 00:03:51.150
用来注入更新的模块

00:03:49.500 --> 00:03:53.069
进入您的活动运行时，所以说

00:03:51.150 --> 00:03:55.079
好像我不懂聊天

00:03:53.069 --> 00:03:56.639
带有某种手臂的小部件

00:03:55.079 --> 00:03:58.200
依靠一堆不同的模块

00:03:56.639 --> 00:04:00.150
以及其中一些模块

00:03:58.200 --> 00:04:02.790
更新后，您可以像

00:04:00.150 --> 00:04:05.370
更新到您正在运行的活动运行时

00:04:02.790 --> 00:04:07.230
并使其足够公平地工作

00:04:05.370 --> 00:04:10.709
有点酷，就像实时重新加载

00:04:07.230 --> 00:04:14.609
每个模块，因此现场直播是额外的

00:04:10.709 --> 00:04:16.169
现场制作是的，我正在使用现场直播

00:04:14.609 --> 00:04:17.849
 webpack非常简单

00:04:16.169 --> 00:04:19.829
全局安装它

00:04:17.849 --> 00:04:21.510
应用程序去生成捆绑，然后

00:04:19.829 --> 00:04:23.550
只需使用一些脚本标签将其包括在内

00:04:21.510 --> 00:04:24.990
这很简单

00:04:23.550 --> 00:04:26.610
来配置文件以及一切

00:04:24.990 --> 00:04:30.120
必须有自己的配置，是的，这些

00:04:26.610 --> 00:04:31.830
天，是的，你可能想知道

00:04:30.120 --> 00:04:33.240
 Web Pack和您之间的区别

00:04:31.830 --> 00:04:35.520
你不，你不在乎你是

00:04:33.240 --> 00:04:37.349
只是你只是死在里面而已

00:04:35.520 --> 00:04:38.940
可以看到有一些阿凡提

00:04:37.349 --> 00:04:42.300
同时我不认为我会

00:04:38.940 --> 00:04:44.580
使用过Web Pack功能有什么问题

00:04:42.300 --> 00:04:46.140
你到底怎么了

00:04:44.580 --> 00:04:48.810
如果我能逃脱的话，照片很有意义

00:04:46.140 --> 00:04:52.169
不使用browserify，那么我会

00:04:48.810 --> 00:04:53.460
不能这样挑选你知道这是一个

00:04:52.169 --> 00:04:55.050
我的背包和浏览器之间的选择

00:04:53.460 --> 00:04:56.520
需要比

00:04:55.050 --> 00:04:57.960
只要您知道他们俩都在

00:04:56.520 --> 00:04:59.580
如果你只关心同样的事情

00:04:57.960 --> 00:05:01.409
功能取决于功能

00:04:59.580 --> 00:05:02.789
如果您想要代码拆分或

00:05:01.409 --> 00:05:05.370
热模块更换使用

00:05:02.789 --> 00:05:09.810
 webpack是的browserify有点

00:05:05.370 --> 00:05:13.020
更小，更模块化的功能使您可以

00:05:09.810 --> 00:05:15.120
你知道选择插件并编写它们

00:05:13.020 --> 00:05:17.190
与转换，这是一个很好的Web Pack我

00:05:15.120 --> 00:05:19.710
会说带来更多功能

00:05:17.190 --> 00:05:21.750
表，并将其置于核心位置

00:05:19.710 --> 00:05:23.400
它们都可以扩展，所以尝试

00:05:21.750 --> 00:05:25.680
他们俩都用有意义的东西

00:05:23.400 --> 00:05:27.539
是的继续前进

00:05:25.680 --> 00:05:30.090
 Sam ciccone最近整理了这个

00:05:27.539 --> 00:05:32.460
回购称运输成本是

00:05:30.090 --> 00:05:34.590
 2015 CS 2016，他尝试了一个整体

00:05:32.460 --> 00:05:36.960
不同模块捆绑的范围

00:05:34.590 --> 00:05:39.270
他发现他们的策略

00:05:36.960 --> 00:05:41.039
像一些很小的差异

00:05:39.270 --> 00:05:43.919
你知道一旦你开始像

00:05:41.039 --> 00:05:46.560
 browserify并根据您的Web配置进行配置

00:05:43.919 --> 00:05:49.620
和其他零散的数字

00:05:46.560 --> 00:05:51.690
你知道他们略有不同

00:05:49.620 --> 00:05:53.669
你不会开始释放巨大的胜利

00:05:51.690 --> 00:05:56.729
直到您尝试像闭合或滚动

00:05:53.669 --> 00:05:58.590
起来，在我添加之前，请先尝试起来

00:05:56.729 --> 00:06:00.840
现在像他，我想我们有这个

00:05:58.590 --> 00:06:04.020
讨论为什么需要汇总

00:06:00.840 --> 00:06:07.260
在浏览器中5贝贝笑了我焊接，它

00:06:04.020 --> 00:06:09.090
是树在摇晃吗，所以卷起来

00:06:07.260 --> 00:06:11.010
在某些情况下假设您要去

00:06:09.090 --> 00:06:12.750
可能与es2015合作

00:06:11.010 --> 00:06:15.389
模块，它有这个不错的功能

00:06:12.750 --> 00:06:19.440
叫做摇树

00:06:15.389 --> 00:06:22.740
捆绑包Web Pack 2中未使用的导出

00:06:19.440 --> 00:06:24.930
我想说的beta已获得支持

00:06:22.740 --> 00:06:27.690
人们也想摇晃树也可以

00:06:24.930 --> 00:06:29.360
坚持使用Web Pack，但这很有用

00:06:27.690 --> 00:06:32.130
具有消除的优点

00:06:29.360 --> 00:06:35.500
那种你不是真的死代码

00:06:32.130 --> 00:06:37.840
需要我相信理查德·哈里斯（Richard Harris） 

00:06:35.500 --> 00:06:39.550
一篇很好的博客文章，介绍了

00:06:37.840 --> 00:06:41.500
摇树和

00:06:39.550 --> 00:06:43.900
死代码消除以及所有这些

00:06:41.500 --> 00:06:45.310
东西发挥出来，嗯，值得

00:06:43.900 --> 00:06:47.050
签出但汇总很漂亮

00:06:45.310 --> 00:06:49.180
易于使用，只需安装

00:06:47.050 --> 00:06:50.980
全局指定您想要的格式

00:06:49.180 --> 00:06:51.520
您的输出捆绑包是否

00:06:50.980 --> 00:06:53.430
普通js 

00:06:51.520 --> 00:06:56.560
会拥有你，它只会做自己的事

00:06:53.430 --> 00:06:58.780
事实证明汇总输出是一个

00:06:56.560 --> 00:07:00.010
我想我读了几千字节

00:06:58.780 --> 00:07:01.960
几个人尝试的地方

00:07:00.010 --> 00:07:03.580
发现的东西平均

00:07:01.960 --> 00:07:05.620
他们获得了20％或30％的胜利

00:07:03.580 --> 00:07:07.120
很好的汇总，再次假设

00:07:05.620 --> 00:07:08.890
你在玩这些2015 

00:07:07.120 --> 00:07:10.780
模块，但大概是更多地使用它

00:07:08.890 --> 00:07:12.640
实际上，更多的胜利可能会随着

00:07:10.780 --> 00:07:16.030
好吧，如果更多的图书馆正在使用

00:07:12.640 --> 00:07:18.220
是2015年，也是，这是

00:07:16.030 --> 00:07:20.530
基本上来自Sam的漂亮视觉

00:07:18.220 --> 00:07:22.300
 TLDR实际上是关闭

00:07:20.530 --> 00:07:24.250
给你最小的尺寸，如果你是

00:07:22.300 --> 00:07:26.440
看着模块粘接的东西，我们

00:07:24.250 --> 00:07:29.110
甚至没有谈论关闭

00:07:26.440 --> 00:07:32.320
除了人以外的所有人都应该检查一下

00:07:29.110 --> 00:07:35.169
回购一个大致猜想的好帮手

00:07:32.320 --> 00:07:37.030
什么会有用并正在运行

00:07:35.169 --> 00:07:39.070
通过其运行时，是的，这很好

00:07:37.030 --> 00:07:40.930
看到所有的选择，我认为这件事

00:07:39.070 --> 00:07:43.840
是归结为什么

00:07:40.930 --> 00:07:47.110
为您的项目工作，是

00:07:43.840 --> 00:07:48.640
最容易与II合作

00:07:47.110 --> 00:07:49.750
那里没有明确的赢家

00:07:48.640 --> 00:07:51.310
如果你清楚地指出它的位置

00:07:49.750 --> 00:07:53.680
做所有的痛苦，你会去

00:07:51.310 --> 00:07:57.250
很清楚，就像减少文件大小

00:07:53.680 --> 00:08:00.460
是最小的，所以如果你不是

00:07:57.250 --> 00:08:01.690
在您当前使用的是if I工具

00:08:00.460 --> 00:08:05.440
工作流程很好，什么包没有

00:08:01.690 --> 00:08:07.090
仿射它在哪里仿射看到

00:08:05.440 --> 00:08:10.840
最可悲的是我能看到它的发生

00:08:07.090 --> 00:08:12.580
现在下个星期Web Web Pack F哦，那是

00:08:10.840 --> 00:08:15.840
我们的工作慢慢使JavaScript变得更糟

00:08:12.580 --> 00:08:15.840
每周一次

