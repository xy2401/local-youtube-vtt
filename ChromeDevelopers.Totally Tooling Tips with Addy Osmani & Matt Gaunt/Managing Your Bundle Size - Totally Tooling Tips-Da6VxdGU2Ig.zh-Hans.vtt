WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.000 --> 00:00:11.010
 [音乐] 

00:00:09.110 --> 00:00:12.780
嘿书，所以今天我们要谈

00:00:11.010 --> 00:00:15.089
关于关注您的JavaScript 

00:00:12.780 --> 00:00:16.920
捆的大小非常非常重要

00:00:15.089 --> 00:00:19.109
已经被那里击中了

00:00:16.920 --> 00:00:20.699
项目数量项目是否存在

00:00:19.109 --> 00:00:24.750
几种不同的方法可以做到这一点

00:00:20.699 --> 00:00:25.920
如果您的项目在github上并且您在乎

00:00:24.750 --> 00:00:27.869
关于持续集成

00:00:25.920 --> 00:00:30.390
有一个很好的小包装叫做

00:00:27.869 --> 00:00:31.890
您可以放入的捆绑包尺寸也是

00:00:30.390 --> 00:00:34.200
 CLI，因此您也可以在本地使用它

00:00:31.890 --> 00:00:35.430
还有CLI和捆绑包大小背后的想法

00:00:34.200 --> 00:00:36.930
是你知道一旦

00:00:35.430 --> 00:00:38.700
配置你可以说我有

00:00:36.930 --> 00:00:40.200
这些捆我就像嫩

00:00:38.700 --> 00:00:42.360
捆绑我有我的主要应用程序

00:00:40.200 --> 00:00:44.820
逻辑的，我不要那些

00:00:42.360 --> 00:00:47.129
捆超过一定大小，所以

00:00:44.820 --> 00:00:48.510
你知道人们是否在提交PRS 

00:00:47.129 --> 00:00:50.430
针对您的项目很容易

00:00:48.510 --> 00:00:52.350
看看下面的内容告诉他们

00:00:50.430 --> 00:00:54.809
你知道吗，这超出了我们的预算

00:00:52.350 --> 00:00:56.699
对于JavaScript包大小，请

00:00:54.809 --> 00:00:58.410
您的代码越小越好

00:00:56.699 --> 00:01:00.480
我认为它实际上报告像

00:00:58.410 --> 00:01:02.399
就像公关大小一样

00:01:00.480 --> 00:01:03.899
特别像这个文件是这个

00:01:02.399 --> 00:01:05.760
大小这个父亲大小，即使你不是

00:01:03.899 --> 00:01:07.470
达到您的门槛，也许您可​​以

00:01:05.760 --> 00:01:11.400
说阿什利，这是一个巨大的飞跃

00:01:07.470 --> 00:01:12.990
我看到了最后一个公关，是的，另一个

00:01:11.400 --> 00:01:13.920
在你身边，不必捆绑

00:01:12.990 --> 00:01:15.479
对，你可以这样说

00:01:13.920 --> 00:01:18.689
 javascript文件大小是多少

00:01:15.479 --> 00:01:20.070
是的，只是检查是

00:01:18.689 --> 00:01:22.290
非常好，它可以关闭gzip 

00:01:20.070 --> 00:01:24.689
大小也一样

00:01:22.290 --> 00:01:27.270
您最终的最终尺寸可能是多少

00:01:24.689 --> 00:01:28.950
看起来不错，所以捆的大小

00:01:27.270 --> 00:01:31.079
我只喜欢10分钟就可以设置一个

00:01:28.950 --> 00:01:32.790
我的应用程序中的摩擦力相当低

00:01:31.079 --> 00:01:35.460
在您的程序包中处理JSON文件

00:01:32.790 --> 00:01:38.159
看看你在看一些

00:01:35.460 --> 00:01:40.380
的东西太对了，所以与工作箱

00:01:38.159 --> 00:01:41.670
我们的文件大小有点

00:01:40.380 --> 00:01:43.049
关注，我们一直在尝试喜欢

00:01:41.670 --> 00:01:44.970
弄清楚我们如何才能真正坚持下去

00:01:43.049 --> 00:01:46.500
最重要的是因为我们做了所有

00:01:44.970 --> 00:01:48.180
这项工作，我们发布了这个东西，现在

00:01:46.500 --> 00:01:50.250
我们很酷，实际文件是什么

00:01:48.180 --> 00:01:52.710
它的大小，这不是我们想要的

00:01:50.250 --> 00:01:54.689
因此，我们正在进行重写

00:01:52.710 --> 00:01:56.369
一部分是让我们进入

00:01:54.689 --> 00:01:58.680
我们的CI，这样我们就可以随时随地

00:01:56.369 --> 00:02:01.049
我们做公关当前尺寸是多少

00:01:58.680 --> 00:02:03.990
现在是吗，这个主意真好

00:02:01.049 --> 00:02:06.600
认为我们从Mosin lyft那里

00:02:03.990 --> 00:02:08.429
他实际上就像写了一个小机器人

00:02:06.600 --> 00:02:09.929
那会说这是改变

00:02:08.429 --> 00:02:12.360
这个公关下降了吗

00:02:09.929 --> 00:02:13.220
并开始像标记阈值

00:02:12.360 --> 00:02:15.010
周围

00:02:13.220 --> 00:02:17.990
增加或减少的百分比

00:02:15.010 --> 00:02:19.460
所以我一直在自己赚一点钱

00:02:17.990 --> 00:02:21.230
事情，所以我们可以做同样的事情， 

00:02:19.460 --> 00:02:22.910
也许还有一些其他的东西

00:02:21.230 --> 00:02:24.800
小插件的想法只是为了帮助

00:02:22.910 --> 00:02:26.540
我们正在追踪什么是主人

00:02:24.800 --> 00:02:28.040
拉请求在做什么，然后

00:02:26.540 --> 00:02:29.600
像那些类似的添加

00:02:28.040 --> 00:02:30.920
门槛很棒，也是不错的选择之一

00:02:29.600 --> 00:02:33.320
关于它的事情能够显示出来

00:02:30.920 --> 00:02:36.260
您的前后成本

00:02:33.320 --> 00:02:38.900
单文件是的，就像我不知道

00:02:36.260 --> 00:02:40.100
就像我认为平纹细布是第一个

00:02:38.900 --> 00:02:42.110
我实际看到的那一个像

00:02:40.100 --> 00:02:43.730
啊，这实际上完全有意义

00:02:42.110 --> 00:02:46.250
应该肯定有每个人

00:02:43.730 --> 00:02:47.690
应该只在deci中有它，是的，我

00:02:46.250 --> 00:02:49.280
希望看到更多人喜欢

00:02:47.690 --> 00:02:50.450
团队自从

00:02:49.280 --> 00:02:52.190
我认为是工作流程

00:02:50.450 --> 00:02:53.780
真的很紧，另一件事是

00:02:52.190 --> 00:02:56.150
一直在做，所以我们谈到

00:02:53.780 --> 00:02:58.280
最后的灯塔和CI 

00:02:56.150 --> 00:03:00.440
他们是他们正在结合的情节

00:02:58.280 --> 00:03:02.900
种类的捆束尺寸影响测量

00:03:00.440 --> 00:03:04.730
以及灯塔测量

00:03:02.900 --> 00:03:06.200
密切关注他们的所有跑步

00:03:04.730 --> 00:03:07.760
有点高兴看到它的

00:03:06.200 --> 00:03:09.500
好像有一种工具可以

00:03:07.760 --> 00:03:13.220
采取插件并用完并获得中心

00:03:09.500 --> 00:03:14.570
现在会超级有用

00:03:13.220 --> 00:03:17.269
如果你是另一件事，你可以做

00:03:14.570 --> 00:03:19.880
我们在本地开发

00:03:17.269 --> 00:03:21.200
 Web Pack的功能称为性能

00:03:19.880 --> 00:03:24.019
预算，想法是

00:03:21.200 --> 00:03:25.640
能够设置所需的预算

00:03:24.019 --> 00:03:28.459
您和您的团队遵循您的

00:03:25.640 --> 00:03:30.590
不同的捆绑包，因此默认情况下为Web Pack 

00:03:28.459 --> 00:03:33.080
使用约250捆的尺寸

00:03:30.590 --> 00:03:34.310
千字节您的团队，我有一些

00:03:33.080 --> 00:03:36.380
一点点更具体一点

00:03:34.310 --> 00:03:37.790
稍小一点但此功能

00:03:36.380 --> 00:03:39.019
每次都对你很有帮助

00:03:37.790 --> 00:03:40.459
您正在尝试的更改

00:03:39.019 --> 00:03:41.989
能够做一个本地账单

00:03:40.459 --> 00:03:43.730
确保你没有超过你的

00:03:41.989 --> 00:03:45.560
团队的预算与您一样多

00:03:43.730 --> 00:03:47.540
可能是这样，这将在构建时执行

00:03:45.560 --> 00:03:49.610
时间，大概它会抛出一个

00:03:47.540 --> 00:03:51.920
错误还是它仍然可以让您构建和

00:03:49.610 --> 00:03:53.900
部署，但这就像将其标记为

00:03:51.920 --> 00:03:55.400
一个问题，所以你可以做一个警告

00:03:53.900 --> 00:03:57.230
它也可能像我一样将其视为错误

00:03:55.400 --> 00:03:58.820
理解如此的噪音上帝

00:03:57.230 --> 00:04:01.250
你的基础覆盖在那里

00:03:58.820 --> 00:04:03.200
因此，这是Web Pack的性能预算

00:04:01.250 --> 00:04:05.570
具有我们本周看到的内容

00:04:03.200 --> 00:04:07.489
有点整洁是另一个工具调用

00:04:05.570 --> 00:04:10.790
这是Visual Studio代码的插件

00:04:07.489 --> 00:04:13.250
是的，叫做vs代码导入费用

00:04:10.790 --> 00:04:15.260
扩展名和真正的好人之一

00:04:13.250 --> 00:04:16.519
关于它的事情是它可以显示

00:04:15.260 --> 00:04:18.739
在工作时与编辑器保持一致

00:04:16.519 --> 00:04:20.090
在您的代码上，例如导入成本

00:04:18.739 --> 00:04:21.500
您正在研究它们，因此它向您显示

00:04:20.090 --> 00:04:23.300
就像在

00:04:21.500 --> 00:04:25.760
行尾说你知道喜欢

00:04:23.300 --> 00:04:27.139
低-只有70 KB，否则我就要

00:04:25.760 --> 00:04:28.969
说这就像突出显示

00:04:27.139 --> 00:04:31.009
确保我们剥落了几个

00:04:28.969 --> 00:04:32.749
前几集使用特定

00:04:31.009 --> 00:04:34.400
插件来帮助您解决各种问题

00:04:32.749 --> 00:04:36.460
文件大小的东西，这真的是

00:04:34.400 --> 00:04:38.810
一个很好的例子，它实际上可以弯曲它

00:04:36.460 --> 00:04:40.370
就像在您的编辑器中一样

00:04:38.810 --> 00:04:41.810
是的，这就像

00:04:40.370 --> 00:04:45.319
 pac插件背后的功能

00:04:41.810 --> 00:04:46.789
场景，所以它是四个ES模块样式

00:04:45.319 --> 00:04:48.590
包至少会是

00:04:46.789 --> 00:04:50.870
给你一个大概的

00:04:48.590 --> 00:04:52.009
缩小的尺寸看起来还可以

00:04:50.870 --> 00:04:54.050
我们也一直在和他们谈论

00:04:52.009 --> 00:04:55.610
也许突出显示gzip大小，但

00:04:54.050 --> 00:04:57.169
它仍然是一个很好的肠道检查

00:04:55.610 --> 00:04:59.270
现在是的，我不知道我认为

00:04:57.169 --> 00:05:00.860
凡能立即使您成为现实的事物

00:04:59.270 --> 00:05:03.199
觉得好吧，我要这个

00:05:00.860 --> 00:05:04.819
第三方模块就像

00:05:03.199 --> 00:05:07.400
好吧，这就是你的成功

00:05:04.819 --> 00:05:08.960
从那真的很好

00:05:07.400 --> 00:05:10.490
是非常有用的，所以我们谈到了

00:05:08.960 --> 00:05:12.349
我们谈到的持续集成

00:05:10.490 --> 00:05:14.659
你可以在当地做什么

00:05:12.349 --> 00:05:16.669
人们可能会从中受益

00:05:14.659 --> 00:05:18.710
像生产中那样测量

00:05:16.669 --> 00:05:20.930
捆绑大小的影响已经结束

00:05:18.710 --> 00:05:23.900
是时候为此提供服务了

00:05:20.930 --> 00:05:25.279
曲线和口径所以口径是

00:05:23.900 --> 00:05:26.870
你说这是我的那种工具

00:05:25.279 --> 00:05:28.849
网站，他们将继续像ping一样

00:05:26.870 --> 00:05:30.289
它会定期运行

00:05:28.849 --> 00:05:32.409
对它们进行测试，然后报告

00:05:30.289 --> 00:05:35.000
持续的基础是的

00:05:32.409 --> 00:05:36.620
因此，机芯的优点之一

00:05:35.000 --> 00:05:38.419
是您可以指定像

00:05:36.620 --> 00:05:40.009
目标设备，您可以说得很好，是的

00:05:38.419 --> 00:05:42.110
定位桌面并定位这些

00:05:40.009 --> 00:05:44.419
移动设备，它将能够显示

00:05:42.110 --> 00:05:45.560
你的捆绑包大小随着时间的推移

00:05:44.419 --> 00:05:47.300
您要发送的JavaScript 

00:05:45.560 --> 00:05:50.000
对人来说，如果您

00:05:47.300 --> 00:05:52.699
就像基本上发送不同

00:05:50.000 --> 00:05:54.379
基于类似媒体查询或

00:05:52.699 --> 00:05:56.060
用户代理或您到底拥有什么

00:05:54.379 --> 00:05:57.620
很好，如果您的团队成员

00:05:56.060 --> 00:05:59.629
像功能意外推出

00:05:57.620 --> 00:06:01.250
里面有很多JavaScript 

00:05:59.629 --> 00:06:03.050
那会减少您的时间

00:06:01.250 --> 00:06:04.669
互动对您有影响

00:06:03.050 --> 00:06:06.379
您的网页效果或是否推动

00:06:04.669 --> 00:06:07.879
发出拉取请求，这意味着

00:06:06.379 --> 00:06:09.469
一切都更快，因为

00:06:07.879 --> 00:06:11.990
捆绑包尺寸较小，让我们成为

00:06:09.469 --> 00:06:14.300
是的，是的，很好

00:06:11.990 --> 00:06:17.089
看到胜利和地方

00:06:14.300 --> 00:06:18.289
你可能应该哭，但口径是

00:06:17.089 --> 00:06:20.899
非常适合检查那些东西

00:06:18.289 --> 00:06:22.370
所以希望人们有了自己的基地

00:06:20.899 --> 00:06:24.289
覆盖你知道他们是否要检查

00:06:22.370 --> 00:06:25.909
这些东西在本地然后我知道了

00:06:24.289 --> 00:06:27.949
然后去CLI他们倒了

00:06:25.909 --> 00:06:30.500
请求，然后他们有实际

00:06:27.949 --> 00:06:32.569
生产定期测试是的， 

00:06:30.500 --> 00:06:34.310
值得一说，值得这样做

00:06:32.569 --> 00:06:36.169
前面的东西，因为

00:06:34.310 --> 00:06:37.759
现在的努力将长期为您提供帮助

00:06:36.169 --> 00:06:39.080
学期，因为它只是定期

00:06:37.759 --> 00:06:40.129
追踪，而你却没有

00:06:39.080 --> 00:06:41.659
保姆只是

00:06:40.129 --> 00:06:43.369
你知道这些东西是否只是

00:06:41.659 --> 00:06:45.139
一定要检查这些工具

00:06:43.369 --> 00:06:46.309
这些工具很棒，可以帮助您

00:06:45.139 --> 00:06:48.229
你知道只要确保你要剥离

00:06:46.309 --> 00:06:48.860
最少的JavaScript 

00:06:48.229 --> 00:06:50.029
使用者

00:06:48.860 --> 00:06:52.369
你知道将剩下的工作推迟到

00:06:50.029 --> 00:06:54.680
稍后的时间点，但是可以尝试

00:06:52.369 --> 00:07:02.699
告诉我们您的想法谢谢

00:06:54.680 --> 00:07:02.699
 [音乐] 

