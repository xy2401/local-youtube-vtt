WEBVTT
Kind: captions
Language: zh-Hans

00:00:05.488 --> 00:00:07.787
第3季小技巧＃2工具

00:00:07.787 --> 00:00:09.370
在这一集简单提示中， 

00:00:09.370 --> 00:00:11.960
我们将看一下Service Worker工具

00:00:11.960 --> 00:00:12.880
我是马特·根特

00:00:12.880 --> 00:00:15.174
我有一个奥斯曼山谷

00:00:15.174 --> 00:00:17.550
 Adi Osmani，时尚先生

00:00:19.810 --> 00:00:22.270
善待彼此。 

00:00:22.760 --> 00:00:23.540
是的

00:00:23.540 --> 00:00:25.150
服务人员工具是一个库

00:00:25.150 --> 00:00:28.867
基本上帮助配置Service Worker 

00:00:28.867 --> 00:00:30.450
做维修工具工人

00:00:30.450 --> 00:00:33.282
对于正常运行时间有用吗？ 

00:00:33.512 --> 00:00:34.220
是的

00:00:34.220 --> 00:00:36.011
通常也用于操作时间

00:00:36.011 --> 00:00:38.960
要暂时预先存放其他东西。 

00:00:38.960 --> 00:00:41.284
通常，它就像一个循环程序

00:00:41.284 --> 00:00:43.700
用于写作最好用于练习

00:00:43.700 --> 00:00:47.340
这变成了更清洁，更轻松的API 

00:00:47.340 --> 00:00:48.192
太好了

00:00:48.192 --> 00:00:49.900
这是其最终目标。 

00:00:49.900 --> 00:00:53.200
这些简单提示的总体目标是使您看到

00:00:53.200 --> 00:00:54.705
如何设置使用它。 

00:00:54.705 --> 00:00:56.080
我们要做的就是

00:00:56.080 --> 00:01:00.940
缓存主要离线工作的网页。 

00:01:00.940 --> 00:01:03.620
权限步骤将被记录为服务工作者。 

00:01:03.620 --> 00:01:06.480
然后，我们需要使用SW工具。 

00:01:06.480 --> 00:01:08.174
然后我们将预先缓存页面

00:01:08.174 --> 00:01:10.590
然后，我们将从缓存中提供页面。 

00:01:10.590 --> 00:01:12.380
 -很好看-是的

00:01:12.400 --> 00:01:13.680
阿迪指出我不需要

00:01:13.680 --> 00:01:16.180
但是，要将数字放在行号旁边的编辑器中。 

00:01:16.180 --> 00:01:17.640
有些人会认为这是琐事， 

00:01:17.640 --> 00:01:18.947
但是我不会那么说。 

00:01:18.947 --> 00:01:20.780
所以第一步是

00:01:20.780 --> 00:01:23.270
我们需要检查服务人员是否

00:01:23.270 --> 00:01:24.900
供电，我们可以使用

00:01:24.940 --> 00:01:27.120
如果（导航器中的“ serviceWorker”） 

00:01:27.140 --> 00:01:30.856
如果支持，我们需要注册服务工作者

00:01:31.356 --> 00:01:32.480
因此，我们将进行注册。 

00:01:32.480 --> 00:01:34.550
我将创建一个随机文件， 

00:01:34.620 --> 00:01:38.880
我将其称为sw.js并放入根目录

00:01:38.920 --> 00:01:40.910
扎根很重要

00:01:40.910 --> 00:01:43.759
因为这意味着它可以控制页面的任何部分。 

00:01:43.759 --> 00:01:45.050
这将兑现承诺。 

00:01:45.050 --> 00:01:46.350
然后我们就抓住了。 

00:01:46.350 --> 00:01:48.590
然后我们打电话给

00:01:48.600 --> 00:01:50.301
如果注册成功。 

00:01:50.301 --> 00:01:52.800
如果有任何错误或类似的事情，捕获将起作用。 

00:01:52.846 --> 00:01:54.755
知道了在这里使用诺言。 

00:01:54.755 --> 00:01:58.020
杰克几乎有一篇关于这些事情的文章， 

00:01:58.020 --> 00:01:59.376
去年或更早。 

00:01:59.376 --> 00:02:01.000
很好，很详细。 

00:02:01.000 --> 00:02:05.000
它可能包含有关凳子的笑话，因为Jake编写了它。 

00:02:05.000 --> 00:02:05.700
但是，是的。 

00:02:05.700 --> 00:02:07.450
我们会将它们链接到YouTube评论

00:02:07.450 --> 00:02:09.770
因为如果您不了解诺言， 

00:02:09.770 --> 00:02:11.530
绝对值得一看。 

00:02:11.530 --> 00:02:13.540
我要添加一些记录，因为， 

00:02:13.540 --> 00:02:16.100
我需要检查它是否有效。 

00:02:16.100 --> 00:02:18.930
第一次尝试时，我添加了一些愚蠢的错误。 

00:02:18.950 --> 00:02:20.261
是的做完了

00:02:20.261 --> 00:02:21.760
没有服务人员注册。 

00:02:21.760 --> 00:02:24.150
原因是sw.js文件

00:02:24.150 --> 00:02:25.760
没有现实。 

00:02:25.760 --> 00:02:28.560
因此，您应该创建它。 

00:02:28.560 --> 00:02:30.900
你看，我很会写。 

00:02:30.900 --> 00:02:33.650
而且由于服务人员只是普通的JavaScript， 

00:02:33.650 --> 00:02:35.700
我们可以添加console.log， 

00:02:35.700 --> 00:02:37.190
为了确保它起作用。 

00:02:37.190 --> 00:02:39.566
 Chrome开发工具将显示此消息。 

00:02:39.566 --> 00:02:40.300
太好了

00:02:40.300 --> 00:02:41.610
服务员打招呼

00:02:41.610 --> 00:02:42.810
是的，我必须注册。 

00:02:42.810 --> 00:02:44.277
所以一切都很好。 

00:02:44.277 --> 00:02:46.110
第一步是注册服务人员。 

00:02:46.110 --> 00:02:47.750
我们做到了。 

00:02:47.750 --> 00:02:51.196
下一步是添加软件工具。 

00:02:51.196 --> 00:02:53.070
在我们添加它们之前，您应该获取它们。 

00:02:53.070 --> 00:02:56.080
您可以从NPM或Bower获得它。 

00:02:56.080 --> 00:02:58.970
最好的NPM。 

00:02:58.970 --> 00:03:01.000
所以去吧。 

00:03:01.000 --> 00:03:04.190
 GitHub页面是您应做的事的示例， 

00:03:04.190 --> 00:03:06.440
这是导入脚本。 

00:03:06.440 --> 00:03:09.074
导入脚本的基本作用是， 

00:03:09.074 --> 00:03:11.240
对于服务人员，您将获得该文件， 

00:03:11.240 --> 00:03:13.370
但是会临时为您存储该文件

00:03:13.370 --> 00:03:15.200
并确保一切正常。 

00:03:15.200 --> 00:03:18.370
因此，您始终可以依靠它，因为- 

00:03:18.370 --> 00:03:20.430
如果有任何问题被拉

00:03:20.430 --> 00:03:22.550
否则，Service Worker将无法安装。 

00:03:22.550 --> 00:03:24.740
这一切都是美好而有用的。 

00:03:24.740 --> 00:03:26.840
因此，我们执行ImportScripts。 

00:03:26.840 --> 00:03:28.030
所有这些都很有趣。 

00:03:28.030 --> 00:03:30.440
我会因为某些原因而忽略它。 

00:03:30.440 --> 00:03:32.023
当我们导入它时，我们实际上可以

00:03:32.023 --> 00:03:33.850
通过工具使用它。 

00:03:33.850 --> 00:03:36.460
因此，我们将其添加到Global Service Worker域中。 

00:03:36.460 --> 00:03:39.030
然后我们编写toolbox.options.debug = true。 

00:03:40.520 --> 00:03:43.750
当您开始使用这些功能时，这非常有用

00:03:43.750 --> 00:03:46.020
如果您被卡住， 

00:03:46.020 --> 00:03:48.500
但是它们很快变得不受欢迎。 

00:03:48.500 --> 00:03:50.372
因此，如果发生，您会看到。 

00:03:50.372 --> 00:03:51.830
服务人员工具

00:03:51.830 --> 00:03:53.624
打印不同的记录。 

00:03:53.624 --> 00:03:56.040
当您开始更多使用它时，它将充满很多东西。 

00:03:56.040 --> 00:03:57.390
但是现在，它非常有用。 

00:03:57.390 --> 00:03:58.730
知道它有效。 

00:03:58.730 --> 00:04:02.420
所以下一步是，我们需要预先缓存

00:04:02.420 --> 00:04:03.820
到我们的主页。 

00:04:03.820 --> 00:04:06.810
这意味着安装Service Worker时

00:04:06.810 --> 00:04:09.330
将去获取页面索引并保存。 

00:04:09.330 --> 00:04:11.530
缓存权限是一种方法。 

00:04:11.530 --> 00:04:13.177
需要一个字符串数组。 

00:04:13.177 --> 00:04:14.810
它将临时存储那里的内容。 

00:04:14.810 --> 00:04:16.550
所以这是一个不同文件名的数组

00:04:16.550 --> 00:04:18.266
您想提前存储，对吗？ 

00:04:18.266 --> 00:04:21.070
是的因此，您可以随意使用CSS和Javascript文件。 

00:04:21.070 --> 00:04:23.360
这样，我们可以刷新页面。 

00:04:23.360 --> 00:04:24.818
工具将变成

00:04:24.818 --> 00:04:27.130
我有一些预存储的东西，precachelist /。 

00:04:27.130 --> 00:04:27.880
太好了

00:04:27.880 --> 00:04:30.460
因此，这些东西已预先缓存到缓冲的内存中

00:04:30.460 --> 00:04:32.400
对于Service Worker API？ 

00:04:32.400 --> 00:04:33.120
是的好漂亮

00:04:33.120 --> 00:04:35.100
因此，它与HTTP缓存不同。 

00:04:35.100 --> 00:04:36.770
这是您控制的缓存

00:04:36.770 --> 00:04:38.240
以及服务人员或网页

00:04:38.240 --> 00:04:39.752
可以看到里面的东西。 

00:04:39.752 --> 00:04:41.080
但这无能为力

00:04:41.080 --> 00:04:44.260
现在，因为我们需要告诉服务人员

00:04:44.260 --> 00:04:48.840
实际上，当您看到此请求时，请执行一些操作。 

00:04:48.840 --> 00:04:51.180
而这可以恢复您的控制。 

00:04:51.180 --> 00:04:54.880
因此，我们在这里所说的是为了对原始文件提出要求， 

00:04:54.880 --> 00:04:58.730
当/ get请求成为时，我想使用缓存的内存机制

00:04:58.730 --> 00:05:00.754
工具箱。最快。 

00:05:00.840 --> 00:05:03.280
知道了权限具有toolbox.fastest。 

00:05:03.280 --> 00:05:05.157
您还支持哪些其他选项

00:05:05.157 --> 00:05:06.115
它们有什么不同？ 

00:05:06.115 --> 00:05:08.247
只有缓存，只有网络。 

00:05:08.247 --> 00:05:09.580
她被自己注释。 

00:05:09.580 --> 00:05:11.454
但是我在这里使用了toolbox.fastest 

00:05:11.454 --> 00:05:14.670
因为它所做的是您在缓存中检查一个

00:05:14.670 --> 00:05:16.564
然后，您向网络发出一个请求。 

00:05:17.230 --> 00:05:20.470
无论最快的反应是什么。 

00:05:20.470 --> 00:05:22.230
自然，总是缓存。 

00:05:22.230 --> 00:05:24.950
但是很棒的是，当网络请求到来时， 

00:05:24.950 --> 00:05:26.870
它将修改缓存。 

00:05:26.870 --> 00:05:30.320
重要性很快就会出现

00:05:30.320 --> 00:05:33.194
因为我将向您介绍其重要性。 

00:05:33.194 --> 00:05:34.550
好漂亮

00:05:34.550 --> 00:05:36.980
我使用Control-Shift进行了一些更新

00:05:36.980 --> 00:05:40.370
因为我需要强制更新服务工作者， 

00:05:40.370 --> 00:05:42.427
 Shift实现了它。 

00:05:42.427 --> 00:05:43.760
因此，我们还有其他记录。 

00:05:43.760 --> 00:05:46.810
您现在可以看到虚拟内存策略的外观。 

00:05:46.810 --> 00:05:48.440
这是因为他们服务

00:05:48.440 --> 00:05:50.120
缓冲内存的网页。 

00:05:50.120 --> 00:05:50.829
太好了

00:05:50.829 --> 00:05:52.310
为了确保它确实有效， 

00:05:52.310 --> 00:05:54.700
您可以转到网格面板，单击“脱机”。 

00:05:54.700 --> 00:05:56.020
进行其他更新。 

00:05:56.020 --> 00:05:57.770
您会注意到该页面正在运行

00:05:57.770 --> 00:05:59.030
虽然我们离线。 

00:05:59.030 --> 00:05:59.730
太好了

00:05:59.730 --> 00:06:03.180
字体已更改，因为使用了Google字体

00:06:03.180 --> 00:06:04.930
他们不能撤回他们。 

00:06:04.930 --> 00:06:07.165
所以你可以设置工具

00:06:07.165 --> 00:06:09.540
如果需要，也可以关闭Google字体。 

00:06:09.540 --> 00:06:11.955
您肯定可以这样做，因为它支持。 

00:06:12.320 --> 00:06:15.279
因此，如果您现在更改HTML页面并且页面刷新， 

00:06:15.279 --> 00:06:16.820
由于我们处于离线状态， 

00:06:16.820 --> 00:06:19.830
它不会改变，因为它无能为力。 

00:06:19.830 --> 00:06:21.789
如果没有域控制发生变化， 

00:06:21.789 --> 00:06:24.330
它将返回行，但仍然相同。 

00:06:24.330 --> 00:06:27.650
如果再次发生，这次是最快的， 

00:06:27.650 --> 00:06:29.344
它将修改网络缓存

00:06:29.344 --> 00:06:30.510
现在我们有了新的变化。 

00:06:30.510 --> 00:06:31.885
这有点酷。 

00:06:31.885 --> 00:06:34.620
 toolbox.fastest权限就像一个安全选项

00:06:34.620 --> 00:06:37.120
因为这意味着您走路时会暂时存储东西， 

00:06:37.120 --> 00:06:41.029
但是您还可以随着时间的推移调整它们，这非常酷。 

00:06:41.029 --> 00:06:43.320
问题在于它很奢侈，因为它基本上是

00:06:43.320 --> 00:06:46.510
意味着除了拥有之外，您将不做任何其他事情

00:06:46.510 --> 00:06:48.377
暂时记忆， 

00:06:48.377 --> 00:06:50.150
 -您可以大大改善。 -是的

00:06:50.180 --> 00:06:52.096
所以有两种机制， 

00:06:52.096 --> 00:06:54.990
这集对我来说是一件大事，但是- 

00:06:54.990 --> 00:06:57.180
 -这是你说自己很懒的方式。 -不

00:06:57.210 --> 00:06:59.459
现在说，我们必须找到

00:06:59.459 --> 00:07:00.400
有更好的选择。 

00:07:00.400 --> 00:07:01.939
一切都会好起来的。 

00:07:01.939 --> 00:07:03.730
但是总的来说，有两种选择。 

00:07:03.730 --> 00:07:06.300
您可以使用类似的方法（如果它是静态网站） 

00:07:06.300 --> 00:07:09.672
可能是构建日期或某种构建版本。 

00:07:09.672 --> 00:07:11.880
如果您找到使用CSS和JavaScript之类的方法， 

00:07:11.880 --> 00:07:13.810
如果您使用文件修订， 

00:07:13.810 --> 00:07:16.400
这非常有用，因为您可以预缓存。 

00:07:16.400 --> 00:07:17.890
只需键入使用缓冲的内存

00:07:17.890 --> 00:07:19.340
因为我知道她会在那里。 

00:07:19.340 --> 00:07:22.194
基本上，当文件修订讨论时， 

00:07:22.194 --> 00:07:23.560
您的服务人员将进行调整。 

00:07:23.560 --> 00:07:25.901
然后基本上，一切都会从那里开始。 

00:07:25.901 --> 00:07:28.930
您的浏览器将修改您的Service Worker。是的

00:07:28.950 --> 00:07:30.815
还有SW预缓存

00:07:30.815 --> 00:07:34.410
和谁一起做很多疯狂的事情

00:07:34.410 --> 00:07:35.980
构建过程，基本上给你

00:07:35.980 --> 00:07:38.090
一种非常有效的做事方式。 

00:07:38.090 --> 00:07:40.460
服务人员会为您做好准备。 

00:07:40.560 --> 00:07:41.268
是的

00:07:41.268 --> 00:07:43.530
但这就像是全部还是什么都没有。 

00:07:43.530 --> 00:07:47.010
它更适合初始设置。 

00:07:47.010 --> 00:07:50.580
但是最终给出的结果是可靠的。 

00:07:50.580 --> 00:07:52.450
因此，您有两个选择。 

00:07:52.450 --> 00:07:54.310
如果SW工具很棒

00:07:54.310 --> 00:07:56.930
第一次使用Service Worker工具或Service Worker 

00:07:56.930 --> 00:07:58.230
总而言之，这非常酷。 

00:07:58.230 --> 00:07:58.980
太好了

00:07:58.980 --> 00:08:02.280
所以人们应该看看服务人员工具

00:08:02.280 --> 00:08:05.850
 SW Advance缓存显示的工具和库

00:08:05.850 --> 00:08:08.449
 Web基础知识。 

00:08:08.879 --> 00:08:09.605
是的

00:08:09.605 --> 00:08:10.634
是的，也许。 

00:08:10.634 --> 00:08:11.340
是的

00:08:11.340 --> 00:08:12.130
或GitHub。 

00:08:12.130 --> 00:08:13.580
 -或GitHub。我不介意随便

00:08:13.610 --> 00:08:15.420
 -都在那儿。 -都很好。 

