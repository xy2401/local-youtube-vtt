WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.000 --> 00:00:09.740
 [音乐] 

00:00:09.980 --> 00:00:15.450
所以今天我们要谈论Webpack 

00:00:12.960 --> 00:00:17.250
表演技巧表演

00:00:15.450 --> 00:00:19.050
您在其中提供的JavaScript 

00:00:17.250 --> 00:00:21.300
浏览器现在没有网络数据包，所以让我们

00:00:19.050 --> 00:00:22.850
从缩小开始，然后缩小

00:00:21.300 --> 00:00:24.900
您要发送的任何代码

00:00:22.850 --> 00:00:26.880
与网络包有一些

00:00:24.900 --> 00:00:29.970
有趣的细微差别首先

00:00:26.880 --> 00:00:33.120
如果要运送es5代码，该怎么做

00:00:29.970 --> 00:00:35.820
 uglify j / s插件很可能是

00:00:33.120 --> 00:00:37.860
你知道其他项目在哪里

00:00:35.820 --> 00:00:40.559
 pre ya uglify jess是一个声音

00:00:37.860 --> 00:00:42.390
是的，你必须在那儿得到一点

00:00:40.559 --> 00:00:44.550
有点创意是如果您要运送

00:00:42.390 --> 00:00:46.020
 es5以外的任何内容

00:00:44.550 --> 00:00:48.450
用户，所以很多人都在写作

00:00:46.020 --> 00:00:50.820
 es2015今天，如果您正在这样做，并且

00:00:48.450 --> 00:00:52.410
不转译CS5确保

00:00:50.820 --> 00:00:54.570
你正在使用像迪莉这样的东西

00:00:52.410 --> 00:00:56.460
还有debility web pack插件

00:00:54.570 --> 00:00:58.590
这样就可以缩小了，但是

00:00:56.460 --> 00:01:00.210
也一定了解这2015 

00:00:58.590 --> 00:01:01.739
它可以做的优化，因为它

00:01:00.210 --> 00:01:04.500
理解比

00:01:01.739 --> 00:01:05.729
丑陋的杰西，是的，接下来的事情

00:01:04.500 --> 00:01:08.310
应该确保他们正在做的是

00:01:05.729 --> 00:01:10.439
现在修改他们的CSS听起来非常

00:01:08.310 --> 00:01:13.290
简单但是如果你是

00:01:10.439 --> 00:01:15.810
使用webpack CSS在任何CSS中加载

00:01:13.290 --> 00:01:18.150
加载程序默认情况下不会

00:01:15.810 --> 00:01:20.490
有效地缩小代码

00:01:18.150 --> 00:01:21.960
将一种类型的文件格式放入

00:01:20.490 --> 00:01:23.759
另一个像这样会卡住

00:01:21.960 --> 00:01:25.290
放入您的JavaScript包中

00:01:23.759 --> 00:01:25.920
确保您通过最小化

00:01:25.290 --> 00:01:28.590
真正

00:01:25.920 --> 00:01:33.329
所以这些在一切

00:01:28.590 --> 00:01:34.710
最理想的是最小的不

00:01:33.329 --> 00:01:36.329
必须考虑一下，因为你

00:01:34.710 --> 00:01:38.820
实际提取两个CSS 

00:01:36.329 --> 00:01:40.770
完全独立的文件是我们的

00:01:38.820 --> 00:01:42.540
首选选项有好处

00:01:40.770 --> 00:01:43.799
您不必双重解析就不会

00:01:42.540 --> 00:01:46.350
必须解析顺序的JavaScript 

00:01:43.799 --> 00:01:48.180
解析您的CSS还将

00:01:46.350 --> 00:01:49.920
在浏览器上更好地缓存

00:01:48.180 --> 00:01:51.689
事情的一面，因为你不去

00:01:49.920 --> 00:01:52.920
使您的捆绑包无效

00:01:51.689 --> 00:01:54.509
当你知道你要改变的时候

00:01:52.920 --> 00:01:55.829
您的CSS您的JavaScript 

00:01:54.509 --> 00:01:57.899
使这些东西分开

00:01:55.829 --> 00:02:00.360
是的，在Web Pack中，您使用的是摘录

00:01:57.899 --> 00:02:02.130
文本插件，使它工作起来很酷

00:02:00.360 --> 00:02:05.310
听起来不错

00:02:02.130 --> 00:02:07.649
接下来的事情就是利用ES模块

00:02:05.310 --> 00:02:09.720
进口和出口摇树

00:02:07.649 --> 00:02:12.680
你的依赖图是什么树

00:02:09.720 --> 00:02:14.689
摇晃我仍然想办法解决这个问题

00:02:12.680 --> 00:02:16.670
 -再检查一次

00:02:14.689 --> 00:02:18.290
可以根据您的要求删除无效代码

00:02:16.670 --> 00:02:19.970
进口和出口，因为如果您输入

00:02:18.290 --> 00:02:23.629
东西和其他大量出口

00:02:19.970 --> 00:02:25.159
不相信他们可以被删除，我相信

00:02:23.629 --> 00:02:27.319
但是如果您从

00:02:25.159 --> 00:02:29.120
文件它将导入所有导出

00:02:27.319 --> 00:02:30.500
但那会重塑我

00:02:29.120 --> 00:02:32.510
不知道有一些时髦的东西

00:02:30.500 --> 00:02:33.920
许多类似细微差别的新事物

00:02:32.510 --> 00:02:35.750
树摇了晃，但仍然很好

00:02:33.920 --> 00:02:37.640
删除不使用的代码

00:02:35.750 --> 00:02:39.530
 Web Pack鲜为人知的事情之一

00:02:37.640 --> 00:02:41.659
是未使用的代码本身不是

00:02:39.530 --> 00:02:43.489
通过网络包删除它是由一个

00:02:41.659 --> 00:02:45.200
缩小或喜欢ugsify Jas 

00:02:43.489 --> 00:02:46.400
因此，Web Pack只会删除您的

00:02:45.200 --> 00:02:47.720
导出用于

00:02:46.400 --> 00:02:49.670
导出您实际上没有使用的

00:02:47.720 --> 00:02:51.650
您仍然需要在大火中使用

00:02:49.670 --> 00:02:53.900
除去该代码的其余部分，因此

00:02:51.650 --> 00:02:56.690
它知道永远不会吹死代码

00:02:53.900 --> 00:02:59.060
完全准确地运行

00:02:56.690 --> 00:03:00.590
另一个有用的事情是确保

00:02:59.060 --> 00:03:02.780
您正在生产中运行Web Pack 

00:03:00.590 --> 00:03:03.859
模式是的，这是一个网络类型的东西，我

00:03:02.780 --> 00:03:05.209
我第一次来的时候很困惑

00:03:03.859 --> 00:03:07.730
听说过，但是很有意义

00:03:05.209 --> 00:03:10.310
是的，所以有两种方法可以通过

00:03:07.730 --> 00:03:11.359
 Web Pack本身的破折号P选项

00:03:10.310 --> 00:03:13.459
这将照顾到两者

00:03:11.359 --> 00:03:15.439
缩小并设置笔记

00:03:13.459 --> 00:03:18.079
生产环境变量

00:03:15.439 --> 00:03:20.030
实际上，您可以做的另一件事是

00:03:18.079 --> 00:03:21.829
使用网络包定义插件

00:03:20.030 --> 00:03:24.319
相信我也是一样

00:03:21.829 --> 00:03:26.810
通常这样做我完全忘记了Web Pack 

00:03:24.319 --> 00:03:28.099
 -P很好，插件很好

00:03:26.810 --> 00:03:29.900
对于稍微复杂一些的情况

00:03:28.099 --> 00:03:32.419
我只是杰森在我的作品中串起来

00:03:29.900 --> 00:03:35.180
设置，只是想拥有它

00:03:32.419 --> 00:03:37.489
在必须切换库时很有用

00:03:35.180 --> 00:03:41.180
之间像开发或调试版本或

00:03:37.489 --> 00:03:43.430
制作吞咽是的，听起来不错

00:03:41.180 --> 00:03:44.540
另一件事是有用的

00:03:43.430 --> 00:03:46.400
知道盘点自己

00:03:44.540 --> 00:03:48.979
使用捆绑包实际出货

00:03:46.400 --> 00:03:50.989
分析器或源地图资源管理器，以便

00:03:48.979 --> 00:03:52.129
这个东西很多好的工具可以

00:03:50.989 --> 00:03:53.989
帮助您确定自己是否

00:03:52.129 --> 00:03:55.489
运输科迪没想到会

00:03:53.989 --> 00:03:57.379
运送给您的用户

00:03:55.489 --> 00:03:59.060
有类似的模块，您可以

00:03:57.379 --> 00:04:00.199
也许换个小一点

00:03:59.060 --> 00:04:01.549
备择方案

00:04:00.199 --> 00:04:03.019
腻子代码总是很好

00:04:01.549 --> 00:04:04.579
因为那只是你最终会得到

00:04:03.019 --> 00:04:06.169
所有大小的整体图

00:04:04.579 --> 00:04:08.239
实际上是从那里来的

00:04:06.169 --> 00:04:09.949
很容易感觉到百分比是多少

00:04:08.239 --> 00:04:12.340
来自另一件好事

00:04:09.949 --> 00:04:14.419
要做的就是拆分您的供应商库

00:04:12.340 --> 00:04:16.609
成一个完全独立的捆绑

00:04:14.419 --> 00:04:18.049
单独的块现在您的供应商库

00:04:16.609 --> 00:04:20.060
就像您的框架代码一样

00:04:18.049 --> 00:04:21.829
您的库代码将成为

00:04:20.060 --> 00:04:24.260
在不同的地方重用

00:04:21.829 --> 00:04:26.000
例如路线和景观，如果您

00:04:24.260 --> 00:04:26.510
移入完全独立的捆绑包

00:04:26.000 --> 00:04:28.160
浏览

00:04:26.510 --> 00:04:30.320
我可以兑现，你可能不会

00:04:28.160 --> 00:04:31.370
是唯一一次更新该代码

00:04:30.320 --> 00:04:32.990
如果你真的会改变它

00:04:31.370 --> 00:04:34.640
例如提高框架版本或

00:04:32.990 --> 00:04:36.890
库版本，否则，是的

00:04:34.640 --> 00:04:38.870
会是一样的，所以请检查

00:04:36.890 --> 00:04:42.140
查看网络hack Commons块

00:04:38.870 --> 00:04:43.730
用于获取相关设置的插件

00:04:42.140 --> 00:04:45.710
就是代码拆分

00:04:43.730 --> 00:04:47.150
所以代码拆分的费用是

00:04:45.710 --> 00:04:48.800
代码拆分是您实际所在的位置

00:04:47.150 --> 00:04:50.120
拿走你所有的代码，而不是修改它

00:04:48.800 --> 00:04:52.610
一起放在一个文件中

00:04:50.120 --> 00:04:54.050
有用地分成几个文件， 

00:04:52.610 --> 00:04:55.400
那么你实际上只会像

00:04:54.050 --> 00:04:57.260
最重要的一点，然后你可以

00:04:55.400 --> 00:04:58.400
东西正好装入其他位

00:04:57.260 --> 00:05:00.170
所以这个想法是，你只是在运送

00:04:58.400 --> 00:05:04.040
恰好满足了用户的需求

00:05:00.170 --> 00:05:06.170
当前路线或当前您和

00:05:04.040 --> 00:05:07.730
静态导入之间的区别

00:05:06.170 --> 00:05:09.830
完成这项工作是因为

00:05:07.730 --> 00:05:12.800
开始使用动态导入

00:05:09.830 --> 00:05:14.480
这是一个较新的JavaScript功能， 

00:05:12.800 --> 00:05:16.550
想法是，您只想延迟加载

00:05:14.480 --> 00:05:18.850
不需要装载的零件

00:05:16.550 --> 00:05:21.380
是的，所以您可以

00:05:18.850 --> 00:05:23.420
基本上将其移到代码中

00:05:21.380 --> 00:05:25.580
可以稍后在

00:05:23.420 --> 00:05:28.640
过程还可以，所以实际上

00:05:25.580 --> 00:05:31.100
动态导入标准的东西是和

00:05:28.640 --> 00:05:32.780
为什么帕特只是猜想考试只有你

00:05:31.100 --> 00:05:35.810
还可以利用艾玛来

00:05:32.780 --> 00:05:37.280
对于像你知道的事情反应很多

00:05:35.810 --> 00:05:38.900
反应路线或

00:05:37.280 --> 00:05:40.280
允许您在get组件中使用它

00:05:38.900 --> 00:05:41.990
但这就是更多

00:05:40.280 --> 00:05:45.500
特定于您选择的框架

00:05:41.990 --> 00:05:47.930
现在我看到很多人的另一件事

00:05:45.500 --> 00:05:50.780
像瞬间一样跳上图书馆

00:05:47.930 --> 00:05:52.820
像日期/时间库，是的，如果

00:05:50.780 --> 00:05:54.290
您默认情况下包括它

00:05:52.820 --> 00:05:57.530
较大的东西

00:05:54.290 --> 00:05:59.330
像215 216 12字节，那是因为

00:05:57.530 --> 00:06:02.360
该文件的很多地方就像

00:05:59.330 --> 00:06:04.010
本地化，是的，是的，除非

00:06:02.360 --> 00:06:05.270
你就像一个非常大的国际

00:06:04.010 --> 00:06:07.730
您可能不需要加载的网站

00:06:05.270 --> 00:06:09.050
所有这些东西都是预先准备好的，即使

00:06:07.730 --> 00:06:10.310
您需要它，您可能会很懒

00:06:09.050 --> 00:06:11.630
加载或智能化

00:06:10.310 --> 00:06:12.830
选择是的，你已经可以做

00:06:11.630 --> 00:06:14.270
无论如何，不​​同的捆绑

00:06:12.830 --> 00:06:15.800
您可能正在做的本地化

00:06:14.270 --> 00:06:17.990
已经是了

00:06:15.800 --> 00:06:19.970
所以在webpack中检查上下文

00:06:17.990 --> 00:06:21.860
替换插件将使什么

00:06:19.970 --> 00:06:25.910
你要做的基本上是可以通过这个

00:06:21.860 --> 00:06:28.010
魔术正则表达式打包程序并指定

00:06:25.910 --> 00:06:29.810
您想支持哪些语言环境

00:06:28.010 --> 00:06:32.300
也许我想支持你懂英语

00:06:29.810 --> 00:06:34.880
对于英国和美国，但忽略了一些

00:06:32.300 --> 00:06:36.410
其他的，那将为您节省一个

00:06:34.880 --> 00:06:37.880
一堆，所以我们碰巧使用这些类型

00:06:36.410 --> 00:06:39.770
图书馆只是一种手套

00:06:37.880 --> 00:06:41.840
里面的任何文件

00:06:39.770 --> 00:06:44.139
然后只把那些拉进去

00:06:41.840 --> 00:06:47.780
忽略其他一切有效

00:06:44.139 --> 00:06:49.580
低-流行的JavaScript实用程序库

00:06:47.780 --> 00:06:52.250
我们肯定在我们的项目中使用了很多

00:06:49.580 --> 00:06:53.690
低-默认情况下非常模块化

00:06:52.250 --> 00:06:55.729
你知道吗选择方法

00:06:53.690 --> 00:06:57.199
您想要的只是导入什么

00:06:55.729 --> 00:06:59.960
您需要，但我仍然看到很多人

00:06:57.199 --> 00:07:01.400
像所有低价进口商品一样

00:06:59.960 --> 00:07:02.780
实用程序

00:07:01.400 --> 00:07:04.400
整个观点就像刚刚使用的一样

00:07:02.780 --> 00:07:05.840
就像结束了学校一样

00:07:04.400 --> 00:07:06.620
上面有所有实用程序

00:07:05.840 --> 00:07:10.280
最有意义

00:07:06.620 --> 00:07:13.009
完全是一个非常整齐的包裹

00:07:10.280 --> 00:07:15.530
可以使用的是低-Web Pack插件或

00:07:13.009 --> 00:07:17.720
战斗插件低-那里的想法

00:07:15.530 --> 00:07:20.720
就是它将转变

00:07:17.720 --> 00:07:22.699
重写代码以仅包含

00:07:20.720 --> 00:07:24.530
低的特定部分-您是

00:07:22.699 --> 00:07:26.150
使用，所以您不包括整个

00:07:24.530 --> 00:07:28.370
事情，所以它只是要换掉

00:07:26.150 --> 00:07:29.720
你的下划线狗得到了它

00:07:28.370 --> 00:07:31.759
实际上会去你并使用get 

00:07:29.720 --> 00:07:33.169
所以我会把那件事放进去

00:07:31.759 --> 00:07:36.409
然后重写您的代码，是的，只需使用

00:07:33.169 --> 00:07:39.229
正是我，它表明你知道

00:07:36.409 --> 00:07:41.060
 Milo-我的捆绑包中的一部分

00:07:39.229 --> 00:07:43.270
大约是以前的10％ 

00:07:41.060 --> 00:07:45.320
一个很好的小储蓄非常好

00:07:43.270 --> 00:07:47.240
乡亲有很多技巧

00:07:45.320 --> 00:07:49.430
可以签出，但我们要链接

00:07:47.240 --> 00:07:51.050
您到一堆不同的博客文章

00:07:49.430 --> 00:07:53.360
和指南，你可以去阅读

00:07:51.050 --> 00:07:55.550
如果您有任何疑问，请随时

00:07:53.360 --> 00:07:58.880
引导他们不是向我们而是向肖恩·拉金

00:07:55.550 --> 00:08:00.139
在Twitter上，谢谢，我们现在更多了

00:07:58.880 --> 00:08:03.560
乐于回答任何问题

00:08:00.139 --> 00:08:05.210
这是一个webpack的性能，是的

00:08:03.560 --> 00:08:07.310
一天没事勒索学习，你可以

00:08:05.210 --> 00:08:08.790
只是看这个视频，这是什么

00:08:07.310 --> 00:08:17.079
回来不错

00:08:08.790 --> 00:08:17.079
 [音乐] 

