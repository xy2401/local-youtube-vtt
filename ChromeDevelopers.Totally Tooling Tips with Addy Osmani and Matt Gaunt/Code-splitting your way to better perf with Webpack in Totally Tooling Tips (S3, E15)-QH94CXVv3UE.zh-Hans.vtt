WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.000 --> 00:00:12.080
 [音乐] 

00:00:09.500 --> 00:00:14.670
所以我们以前在

00:00:12.080 --> 00:00:16.529
 JavaScript模块捆绑谎言，然后

00:00:14.670 --> 00:00:19.140
你在角落里哭了三个星期

00:00:16.529 --> 00:00:20.490
因为我们这样做显示mm-hmm，然后

00:00:19.140 --> 00:00:22.949
有人把东西拿出来

00:00:20.490 --> 00:00:24.990
我们说的是一个我不记得的笑话

00:00:22.949 --> 00:00:27.630
就像卷起什么包装一样

00:00:24.990 --> 00:00:28.619
打架或一些怪异的东西

00:00:27.630 --> 00:00:30.449
然后就变成了一件事情

00:00:28.619 --> 00:00:31.830
科学怪人的JavaScript怪物曾经是

00:00:30.449 --> 00:00:33.390
太好了，如果

00:00:31.830 --> 00:00:35.370
模块出来是科学怪人

00:00:33.390 --> 00:00:37.530
嫉妒之类的

00:00:35.370 --> 00:00:40.290
可能是图书馆呀

00:00:37.530 --> 00:00:41.579
无论如何抱歉今天你要去哪里

00:00:40.290 --> 00:00:43.440
我想多谈一点

00:00:41.579 --> 00:00:45.030
 Web Pack，专门为人们

00:00:43.440 --> 00:00:48.270
我一直在做一些研究的三个技巧

00:00:45.030 --> 00:00:50.640
最近在回应和排序网络

00:00:48.270 --> 00:00:52.829
在实际设备上的性能以及

00:00:50.640 --> 00:00:54.210
这是由调查支持的

00:00:52.829 --> 00:00:55.289
我在哪里问过我认识的人

00:00:54.210 --> 00:00:57.899
你在做什么反应物

00:00:55.289 --> 00:01:00.719
生产使用webpack的pac-12是什么

00:00:57.899 --> 00:01:02.609
 browserify他们是否捆绑在一起，并且

00:01:00.719 --> 00:01:04.290
他们是如何采摘的，是的，什么

00:01:02.609 --> 00:01:06.030
我发现很多人很多

00:01:04.290 --> 00:01:08.130
人因代码拆分而困惑

00:01:06.030 --> 00:01:10.170
但是诸如代码分割之类的概念

00:01:08.130 --> 00:01:12.210
人们正在使用它有些不是

00:01:10.170 --> 00:01:14.130
正在使用它，然后不完全使用

00:01:12.210 --> 00:01:15.479
了解如何正确做，所以我

00:01:14.130 --> 00:01:17.460
想快速涵盖一些

00:01:15.479 --> 00:01:20.070
万一精灵们那里的概念

00:01:17.460 --> 00:01:22.259
知道什么是代码拆分

00:01:20.070 --> 00:01:24.330
您基本上是这个窗口的方式

00:01:22.259 --> 00:01:26.159
这个捆绑包应该包括这些

00:01:24.330 --> 00:01:27.479
正确的文件，然后您这样说

00:01:26.159 --> 00:01:28.590
那将是一捆

00:01:27.479 --> 00:01:30.420
将捆绑两个，这可以建立一个

00:01:28.590 --> 00:01:32.369
三说权利分裂是行为

00:01:30.420 --> 00:01:33.750
确定这些线在哪里正确， 

00:01:32.369 --> 00:01:35.460
如果你聪明地做的话

00:01:33.750 --> 00:01:36.450
你只是要知道你要下船

00:01:35.460 --> 00:01:38.610
最少的JavaScript 

00:01:36.450 --> 00:01:40.860
前往或查看您的路线所必需

00:01:38.610 --> 00:01:43.290
用户，然后在其余部分中延迟加载

00:01:40.860 --> 00:01:45.450
这不是不是一个新主意Gmail 

00:01:43.290 --> 00:01:47.460
像一百万年前那样

00:01:45.450 --> 00:01:48.780
 webpack，很不错，我会说

00:01:47.460 --> 00:01:50.399
一旦您知道计数拆分的工作原理

00:01:48.780 --> 00:01:51.990
在每个项目上都很琐碎

00:01:50.399 --> 00:01:53.250
但是到了这一点

00:01:51.990 --> 00:01:55.579
要求你像个亿万富翁一样读书

00:01:53.250 --> 00:01:58.469
博客文章，所以我将在此做

00:01:55.579 --> 00:02:00.990
 510我要在15秒内覆盖

00:01:58.469 --> 00:02:03.750
在webpack中（如果您使用的是必填项） 

00:02:00.990 --> 00:02:05.189
确保您的Web Pack中有一个代码将

00:02:03.750 --> 00:02:07.170
基本上可以让您应用代码

00:02:05.189 --> 00:02:09.030
如果您使用的是webpack，则拆分两个

00:02:07.170 --> 00:02:10.619
您可以在导入时使用系统来执行

00:02:09.030 --> 00:02:12.270
同样的事情，如果它检测到你是

00:02:10.619 --> 00:02:13.510
使用它，基本上可以

00:02:12.270 --> 00:02:16.239
分开

00:02:13.510 --> 00:02:18.909
基于该特定blob的捆绑

00:02:16.239 --> 00:02:21.370
 JSP使用过，因此每次遇到

00:02:18.909 --> 00:02:23.799
需要完成确保说出一个观点

00:02:21.370 --> 00:02:25.390
将该代码放入新的块um中，如果

00:02:23.799 --> 00:02:27.879
您导航到该块，所以如果您

00:02:25.390 --> 00:02:29.950
碰巧正在使用webpack 

00:02:27.879 --> 00:02:31.810
例如反应路由器

00:02:29.950 --> 00:02:33.519
真的很好，你可以

00:02:31.810 --> 00:02:35.349
在杰西斯竞技场加载一条路线， 

00:02:33.519 --> 00:02:37.480
然后懒加载其他部分是

00:02:35.349 --> 00:02:40.810
需要人们在这里绊倒

00:02:37.480 --> 00:02:42.069
是不是他们会嗯，你知道他们会

00:02:40.810 --> 00:02:43.420
尽管认为使用代码拆分

00:02:42.069 --> 00:02:45.129
他们将使用代码拆分，因为网络

00:02:43.420 --> 00:02:48.459
包也支持其他想法

00:02:45.129 --> 00:02:49.930
叫做commons chunk插件，所以

00:02:48.459 --> 00:02:51.250
注释通常不会插入

00:02:49.930 --> 00:02:53.140
假设您使用的应用知道

00:02:51.250 --> 00:02:55.450
库或框架或其他

00:02:53.140 --> 00:02:56.890
对的你可以有多个视图

00:02:55.450 --> 00:02:59.290
其中将有类似的代码

00:02:56.890 --> 00:03:01.930
对的，这就是您的供应商

00:02:59.290 --> 00:03:04.000
捆绑权利，那是你的代码

00:03:01.930 --> 00:03:06.129
可能需要预先加载才能

00:03:04.000 --> 00:03:08.260
让您知道以任何方式有用的路线

00:03:06.129 --> 00:03:09.910
这可能是您的破破烂烂或您的反应或

00:03:08.260 --> 00:03:11.500
不管你有什么

00:03:09.910 --> 00:03:13.450
无论如何都必须加载的东西

00:03:11.500 --> 00:03:15.579
什么，它足够普遍

00:03:13.450 --> 00:03:17.049
即使它很大也应该

00:03:15.579 --> 00:03:18.160
好吧，因为每一个

00:03:17.049 --> 00:03:20.049
单页要买

00:03:18.160 --> 00:03:21.700
正是这样，注释块插件

00:03:20.049 --> 00:03:23.280
帮助您从根本上分解出东西

00:03:21.700 --> 00:03:26.260
这是你不同的共同点

00:03:23.280 --> 00:03:29.290
可以纳入通用供应商的模块

00:03:26.260 --> 00:03:30.730
捆绑正确，所以这是第二个提示

00:03:29.290 --> 00:03:32.260
人们遇到问题Co 

00:03:30.730 --> 00:03:33.549
分裂是他们正在分裂

00:03:32.260 --> 00:03:35.620
他们的代码，但它们仍然存在

00:03:33.549 --> 00:03:36.970
案件运出一大堆

00:03:35.620 --> 00:03:39.549
他们不一定需要的JavaScript 

00:03:36.970 --> 00:03:43.690
只需要路由的东西

00:03:39.549 --> 00:03:46.030
我要做的就是我在

00:03:43.690 --> 00:03:47.680
我正在分析的痕迹是一些

00:03:46.030 --> 00:03:50.079
人们正在运送像Meg 

00:03:47.680 --> 00:03:51.579
 JavaScript仅用于一条路线， 

00:03:50.079 --> 00:03:54.880
是因为他们有很多

00:03:51.579 --> 00:03:56.739
供应商JSL我有一个大型共同供应商

00:03:54.880 --> 00:03:58.389
嫉妒还是只是各种事情的混合

00:03:56.739 --> 00:04:00.099
有时是一个大型供应商捆绑包

00:03:58.389 --> 00:04:01.060
他们就像发生在哪里

00:04:00.099 --> 00:04:02.290
下船

00:04:01.060 --> 00:04:04.359
你知道那条路线的图书馆

00:04:02.290 --> 00:04:06.129
在其他情况下不需要的地方

00:04:04.359 --> 00:04:09.069
他们正在为其他人装载东西

00:04:06.129 --> 00:04:11.199
偶然的路线或只是没有被

00:04:09.069 --> 00:04:12.730
对他们的工作特别勤奋

00:04:11.199 --> 00:04:14.859
包括在每个的主要块中

00:04:12.730 --> 00:04:16.959
查看，这是一件好事，留在

00:04:14.859 --> 00:04:19.209
记住，您知道什么

00:04:16.959 --> 00:04:20.949
大小的Web Pack就像这样

00:04:19.209 --> 00:04:22.330
总结所有块大小

00:04:20.949 --> 00:04:23.680
您正在执行代码拆分，而他们

00:04:22.330 --> 00:04:25.870
一个观点只是关注

00:04:23.680 --> 00:04:26.820
我们目前所使用的尺寸

00:04:25.870 --> 00:04:30.270
在射频上工作

00:04:26.820 --> 00:04:31.920
查看webpack，以尝试提供

00:04:30.270 --> 00:04:34.080
你喜欢一些内在的表现

00:04:31.920 --> 00:04:35.280
某种性能预算，如果

00:04:34.080 --> 00:04:36.600
这样的东西我想

00:04:35.280 --> 00:04:38.160
希望使它更容易

00:04:36.600 --> 00:04:39.300
对于人们来说，这是知道他们

00:04:38.160 --> 00:04:40.620
有一个问题，事情就是你

00:04:39.300 --> 00:04:43.380
看着它可能像

00:04:40.620 --> 00:04:44.910
红线走这是X的数量

00:04:43.380 --> 00:04:47.100
千字节或兆字节，您应该

00:04:44.910 --> 00:04:50.030
认真考虑突破

00:04:47.100 --> 00:04:53.070
另一个提示是，如果您碰巧正在使用

00:04:50.030 --> 00:04:54.900
 hb2还有另一个Web Pack插件

00:04:53.070 --> 00:04:56.880
称为积极分裂插件

00:04:54.900 --> 00:04:57.900
听起来真的很暴力，是的，我说

00:04:56.880 --> 00:05:01.020
听起来不像我想要的东西

00:04:57.900 --> 00:05:03.630
需要积极的拆分插件

00:05:01.020 --> 00:05:05.610
基本上给你一种拆分的方法

00:05:03.630 --> 00:05:08.010
您的块的最大值和最小值

00:05:05.610 --> 00:05:09.570
大小，以便您可以确切指定

00:05:08.010 --> 00:05:11.970
就像您想要的上限一样

00:05:09.570 --> 00:05:15.540
会发现一些魔术

00:05:11.970 --> 00:05:18.090
使那些工作听起来非常

00:05:15.540 --> 00:05:19.950
冒险，我不知道为什么只是

00:05:18.090 --> 00:05:21.870
点燃哦，你已经达到并最大化

00:05:19.950 --> 00:05:23.250
切成两半，不用担心

00:05:21.870 --> 00:05:24.420
在实践中我认为是

00:05:23.250 --> 00:05:27.150
绝对是人们需要的东西

00:05:24.420 --> 00:05:28.530
花更多的时间，但是

00:05:27.150 --> 00:05:30.060
得到支持，很高兴知道

00:05:28.530 --> 00:05:32.400
为什么包装工会探索这些想法

00:05:30.060 --> 00:05:33.990
 h2左右，我认为除了

00:05:32.400 --> 00:05:35.460
所以我们谈到了三个技巧

00:05:33.990 --> 00:05:37.440
谈到常见的代码拆分

00:05:35.460 --> 00:05:39.780
 Strunk插件激进分裂

00:05:37.440 --> 00:05:41.820
插件一如既往，因为我们都

00:05:39.780 --> 00:05:44.010
关于服务人员，如果您要

00:05:41.820 --> 00:05:46.050
如果您要使用所有这些库

00:05:44.010 --> 00:05:48.090
这些天你帐单上的东西是

00:05:46.050 --> 00:05:50.490
不用付任何您所知道的东西真是太好了

00:05:48.090 --> 00:05:52.890
用户喜欢加载它们会付出很多成本

00:05:50.490 --> 00:05:54.210
再次拜访时再次起来，所以你知道

00:05:52.890 --> 00:05:56.670
有像serviceworker这样的插件

00:05:54.210 --> 00:05:58.590
 precache web pack插件是的，嗯， 

00:05:56.670 --> 00:06:00.570
让您使用我们的服务预缓存

00:05:58.590 --> 00:06:02.100
然后进行这个漂亮的构建

00:06:00.570 --> 00:06:04.170
在思考之前服务工作

00:06:02.100 --> 00:06:05.610
关于它节省您的用户时间，当它

00:06:04.170 --> 00:06:08.760
来一次重复拜访，所以检查一下

00:06:05.610 --> 00:06:10.290
以及更多的Web Pack提示

00:06:08.760 --> 00:06:12.630
以及我们曾经写过的一些文章

00:06:10.290 --> 00:06:14.100
最近在推特上这样写

00:06:12.630 --> 00:06:15.930
检查那些，因为我相信你已经

00:06:14.100 --> 00:06:17.900
最近我在媒体上写了很多

00:06:15.930 --> 00:06:20.310
反正在媒体上写了很多

00:06:17.900 --> 00:06:22.410
人们可以检查出这些东西是否

00:06:20.310 --> 00:06:24.600
所以请这些只是一些Web Pack 

00:06:22.410 --> 00:06:25.900
提示，希望他们会进来

00:06:24.600 --> 00:06:33.879
有用

00:06:25.900 --> 00:06:33.879
 [音乐] 

