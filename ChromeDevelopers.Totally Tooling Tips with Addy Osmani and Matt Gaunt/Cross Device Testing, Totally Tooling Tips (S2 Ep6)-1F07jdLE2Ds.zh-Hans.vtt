WEBVTT
Kind: captions
Language: zh-Hans

00:00:18.120 --> 00:00:21.561
我们在开发移动网络方面做了大量工作，对吧？ 

00:00:21.561 --> 00:00:22.270
是的

00:00:22.270 --> 00:00:25.690
在多台设备上进行测试很重要

00:00:25.690 --> 00:00:29.340
因此，它看起来不错，快速且性能适当。 

00:00:29.599 --> 00:00:30.580
我们尝试。 

00:00:30.580 --> 00:00:31.610
我们尝试。 

00:00:31.610 --> 00:00:33.890
有很多工具可以使用。 

00:00:33.890 --> 00:00:35.944
那你用什么呢？ 

00:00:35.944 --> 00:00:37.610
那里有很多工具。 

00:00:37.610 --> 00:00:40.870
尽管如此，我使用的还是一个不好的例子。 

00:00:40.870 --> 00:00:42.870
我认为我的主要问题之一

00:00:42.870 --> 00:00:46.316
这些工具中有很多真的很难安装

00:00:46.316 --> 00:00:49.500
轻松解决。 

00:00:49.500 --> 00:00:52.600
对我来说，使用Browsersync 

00:00:52.600 --> 00:00:56.095
但是我严重依赖DevTools之类的Explain Device Simulator。 

00:00:56.095 --> 00:00:59.140
我仍然测试了浏览器

00:00:59.140 --> 00:01:00.270
在各方面。 

00:01:00.270 --> 00:01:02.020
设备模式具有预设

00:01:02.020 --> 00:01:03.770
对于所有现有设备

00:01:03.770 --> 00:01:06.590
我知道，但是问题是DevTools正在运行

00:01:06.590 --> 00:01:08.590
一定的空间，那么您就可以

00:01:08.590 --> 00:01:10.330
那就是你要做的

00:01:10.330 --> 00:01:13.450
我有第二个屏幕专门用于全屏模式

00:01:13.450 --> 00:01:14.695
在DevTools中，您可以- 

00:01:14.695 --> 00:01:16.570
是的，但是我需要第二个屏幕。 

00:01:16.570 --> 00:01:19.815
因为我只是在笔记本电脑上做很多工作。 

00:01:19.815 --> 00:01:21.595
所以我明白你的意思了。 

00:01:21.595 --> 00:01:23.720
例如，如果您可以承诺放置设备，则可以。 

00:01:23.720 --> 00:01:26.720
但是DevTools与我的配合不好

00:01:26.720 --> 00:01:29.230
在我的脑海中，在一个屏幕上处于设备模式。 

00:01:29.230 --> 00:01:29.930
是的

00:01:29.930 --> 00:01:32.020
 -那是唯一的。 -看起来像什么

00:01:32.133 --> 00:01:34.010
我们可以做得更好。 

00:01:34.010 --> 00:01:37.160
因此，主要使用BrowserStack。 

00:01:37.160 --> 00:01:39.240
非常适合-BrowserStack 

00:01:39.240 --> 00:01:40.790
被认为是基于云的服务

00:01:40.790 --> 00:01:42.110
您有订阅的地方。 

00:01:42.110 --> 00:01:44.880
您可以打开URL链接

00:01:44.880 --> 00:01:48.130
在几个操作系统上，不同的移动设备。 

00:01:48.130 --> 00:01:50.470
我在这里我的网站已经上传

00:01:50.470 --> 00:01:55.370
在适用于iPhone 6 Plus的iOS上。 

00:01:55.370 --> 00:01:57.480
而且我可以控制机器。 

00:01:57.480 --> 00:01:58.919
我可以从这里导航。 

00:01:58.919 --> 00:02:00.335
这不仅仅是静态屏幕截图， 

00:02:00.335 --> 00:02:02.850
实际上，它非常有用。 

00:02:02.850 --> 00:02:05.250
我还发现BrowserStack非常有用。 

00:02:05.250 --> 00:02:08.030
支持屏幕截图和所有这些东西。 

00:02:08.030 --> 00:02:10.500
我发现BrowserStack在以下方面真的很有用

00:02:10.500 --> 00:02:12.002
通过手动测试。 

00:02:12.002 --> 00:02:14.210
因此，从字面上看，您正在进行更改-尤其是当

00:02:14.210 --> 00:02:15.667
您隧道传输到 localhost 。 

00:02:15.667 --> 00:02:17.000
您只能进行本地更改。 

00:02:17.000 --> 00:02:18.875
它将在模拟器上显示。 

00:02:18.875 --> 00:02:22.300
您可以滚动内容，很好订购

00:02:22.300 --> 00:02:23.890
手动测试。 

00:02:23.890 --> 00:02:27.110
我在创建实际脚本的地方使用了Saucelabs 

00:02:27.110 --> 00:02:30.300
要仅捕获她的屏幕截图， 

00:02:30.300 --> 00:02:32.790
然后运行快速测试，例如加载页面需要多长时间， 

00:02:32.790 --> 00:02:34.702
诸如此类。 

00:02:34.702 --> 00:02:36.660
这已经有点长了。 

00:02:36.660 --> 00:02:38.005
现在有东西网页测试

00:02:38.005 --> 00:02:39.296
测试性能和一切。 

00:02:39.296 --> 00:02:42.490
但是Saucelabs配备了更多功能，可以使测试更加自动化。 

00:02:43.030 --> 00:02:46.670
是的，所以我们将Saucelabs用于类似

00:02:46.670 --> 00:02:48.800
持续集成。 

00:02:48.800 --> 00:02:51.160
假设您有东西

00:02:51.160 --> 00:02:53.470
您想确保它能在所有浏览器上正常工作

00:02:53.470 --> 00:02:54.820
您的目标。 

00:02:54.820 --> 00:02:58.670
在这种情况下，Saucelabs是完美的。 

00:02:58.670 --> 00:03:00.356
我认为Saucelabs非常好， 

00:03:00.356 --> 00:03:01.980
如果您正在处理个人项目。 

00:03:01.980 --> 00:03:05.070
有人在使用BrowserStack 

00:03:05.070 --> 00:03:08.416
与Selenium中一样，已安装CI。 

00:03:08.416 --> 00:03:09.625
还有什么

00:03:09.625 --> 00:03:12.400
我认为我们俩都使用Browsersync。 

00:03:12.400 --> 00:03:14.594
我以前从未使用过Browsersync，因为- 

00:03:14.594 --> 00:03:16.550
然后我们见面，你的生活变得更好

00:03:16.550 --> 00:03:17.410
没有。 

00:03:17.410 --> 00:03:20.160
我从您那里了解Browsersync。 

00:03:20.160 --> 00:03:21.910
可是你从没告诉过我

00:03:21.910 --> 00:03:24.880
那是您-当您进入Gulp文件时， 

00:03:24.880 --> 00:03:31.270
您只能为Browsersync指定代理

00:03:31.270 --> 00:03:32.560
一起工作。 

00:03:32.560 --> 00:03:34.620
在某个时候，我希望您阅读- 

00:03:34.620 --> 00:03:35.510
上瘾不会发生。 

00:03:35.510 --> 00:03:36.730
它永远不会发生。 

00:03:36.730 --> 00:03:38.830
您为什么认为我们会继续这样做？ 

00:03:38.830 --> 00:03:41.210
您可以指定代理，在这种情况下

00:03:41.210 --> 00:03:43.940
我可以说他是当地的房东。 

00:03:43.940 --> 00:03:46.645
然后我得到了Nginx服务器， 

00:03:46.645 --> 00:03:49.277
然后，Browsersync将创建一个单独的端口。 

00:03:49.277 --> 00:03:50.860
 JavaScript将进入

00:03:50.860 --> 00:03:54.270
该Browsersync需要正常工作，但这并没有告诉我

00:03:54.270 --> 00:03:56.200
我一个人学的

00:03:56.200 --> 00:03:59.210
这意味着我可以得到这样的设备

00:03:59.210 --> 00:04:00.610
滚动将同步。 

00:04:00.610 --> 00:04:02.850
触摸将同步。 

00:04:02.850 --> 00:04:06.730
您可以按照我的要求做，这太好了。 

00:04:06.730 --> 00:04:09.840
是的，没有明显的变化

00:04:09.840 --> 00:04:12.510
代码映像中的最新映像将被重新加载， 

00:04:12.510 --> 00:04:15.040
它将发生，这很酷。 

00:04:15.040 --> 00:04:18.160
因为您的桌子上有这样的设备， 

00:04:18.160 --> 00:04:19.959
甚至我有几个浏览器

00:04:19.959 --> 00:04:22.570
在我的电脑上工作

00:04:22.570 --> 00:04:25.844
我可以在这里执行任何命令

00:04:25.844 --> 00:04:28.010
它将应用于所有浏览器

00:04:28.010 --> 00:04:28.840
或硬件。 

00:04:28.840 --> 00:04:30.520
是的，Browsersync很棒。 

00:04:30.520 --> 00:04:32.240
我想我们在另一集中谈论过

00:04:32.240 --> 00:04:34.520
但它也有一个非常好的用户界面

00:04:34.520 --> 00:04:36.760
要设置网络路由器， 

00:04:36.760 --> 00:04:39.980
设置是否同步点击和配置

00:04:39.980 --> 00:04:41.860
并滚动浏览所有这些东西。 

00:04:41.860 --> 00:04:45.190
因此，Browsersync通常是跨设备测试工具

00:04:45.190 --> 00:04:47.400
我的最爱

00:04:47.400 --> 00:04:49.360
我们经常使用的另一件事

00:04:49.360 --> 00:04:52.120
就像旧版安装的虚拟机VM。 

00:04:52.120 --> 00:04:54.190
有些人使用VirtualBox。 

00:04:54.190 --> 00:04:56.090
我使用VMware。 

00:04:56.090 --> 00:04:59.620
能够轻松运行旧版本真是太好了

00:04:59.620 --> 00:05:01.650
带有IE和Edge浏览器的虚拟机

00:05:01.650 --> 00:05:03.109
还有他们身上的所有东西。 

00:05:03.109 --> 00:05:04.941
是的，我没有Windows设备， 

00:05:04.941 --> 00:05:07.140
所以我完全依靠VMware虚拟版本- 

00:05:07.140 --> 00:05:11.089
抱歉，复制VirtualBox-因为对我来说， 

00:05:11.089 --> 00:05:13.380
这比将某些内容用作BrowserStack要容易得多

00:05:13.380 --> 00:05:16.857
当我想在本地进行快速测试时，请选择Saucelabs。 

00:05:16.857 --> 00:05:18.690
我认为效果更好。 

00:05:18.690 --> 00:05:22.550
与移动模拟器相同

00:05:22.550 --> 00:05:25.220
特定于Safari（iOS模拟器） 

00:05:25.220 --> 00:05:26.410
真的很好。 

00:05:26.410 --> 00:05:29.860
 Android并不多，但您知道。 

00:05:29.860 --> 00:05:32.140
真的有事

00:05:32.140 --> 00:05:36.310
我最近在东京时发现了他。 

00:05:36.310 --> 00:05:39.120
已经开发了两年的工具。 

00:05:39.120 --> 00:05:40.550
他们有点

00:05:40.550 --> 00:05:44.080
它将崩溃任何适用于Android的跨设备测试工具。 

00:05:44.080 --> 00:05:44.940
是的

00:05:44.940 --> 00:05:46.480
我认为它叫做Open STF。 

00:05:46.480 --> 00:05:51.140
由两个为Cyber​​Agent工作的年轻人开发。 

00:05:51.140 --> 00:05:55.370
它是移动设备的测试盆。 

00:05:55.370 --> 00:05:57.760
您拥有出色的视觉指标

00:05:57.760 --> 00:05:59.450
对于您已连接的所有设备。 

00:05:59.450 --> 00:06:01.880
您可以轻松控制它们。 

00:06:01.880 --> 00:06:04.980
您对DevTools中的数字屏幕显示功能有想法吗？ 

00:06:04.980 --> 00:06:05.690
是的

00:06:05.690 --> 00:06:07.150
主要是他所做的

00:06:07.150 --> 00:06:09.660
但对于所有连接的设备。 

00:06:09.660 --> 00:06:13.260
 DevTools中屏幕的数字显示非常适合一台设备。 

00:06:13.260 --> 00:06:15.190
这对其中几个人来说真是太棒了

00:06:15.190 --> 00:06:17.010
您要在其中安装硬件实验室的位置。 

00:06:17.010 --> 00:06:18.932
这很像-我一直

00:06:18.932 --> 00:06:21.390
我认为这是对Browsersync之类的补充

00:06:21.390 --> 00:06:24.650
它主要有助于控制所有设备

00:06:24.650 --> 00:06:26.427
关于运行浏览器

00:06:26.427 --> 00:06:28.260
并将它们定向到特定的URL， 

00:06:28.260 --> 00:06:30.364
这是我唯一讨厌的事情。 

00:06:30.364 --> 00:06:31.780
总的来说我是做什么的

00:06:31.780 --> 00:06:36.670
 Pete LePage的移动实验室。 

00:06:36.670 --> 00:06:40.174
所有这些都集中于如何使用此URL运行浏览器？ 

00:06:40.174 --> 00:06:42.090
看来他们拿走了

00:06:42.090 --> 00:06:44.740
他们让他兴奋剂

00:06:44.740 --> 00:06:45.820
所以变得很棒

00:06:45.820 --> 00:06:47.445
那是有史以来最好的事情。 

00:06:47.445 --> 00:06:49.134
这很酷。 

00:06:49.134 --> 00:06:51.050
我认为我们需要安装它。 

00:06:51.050 --> 00:06:53.466
是的，绝对要在Google上安装它。 

00:06:53.466 --> 00:06:55.980
许多人将从中受益。 

00:06:55.980 --> 00:06:57.120
不，不，我们会为我们保留它。 

00:06:57.120 --> 00:06:59.110
只有我们，没有其他人。 

00:06:59.110 --> 00:07:02.110
没有人会碰它。 

