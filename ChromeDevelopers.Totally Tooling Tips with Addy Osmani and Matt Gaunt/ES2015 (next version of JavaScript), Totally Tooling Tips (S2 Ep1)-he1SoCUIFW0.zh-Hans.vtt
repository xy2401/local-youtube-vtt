WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.000 --> 00:00:18.375
 [电子音乐] 

00:00:18.375 --> 00:00:21.890
马特：您认为我们生活的未来会怎样？ 

00:00:21.890 --> 00:00:23.790
艾迪：我们生活的未来？ 

00:00:23.790 --> 00:00:31.740
全球变暖，天网对我们的控制，抹杀了整个人类。 

00:00:31.750 --> 00:00:33.400
但是另一方面，我们有ES6， 

00:00:33.400 --> 00:00:34.844
这样一切都会好起来的。 

00:00:34.844 --> 00:00:36.510
 -一切都好了。 

00:00:36.510 --> 00:00:37.960
 -太好了。 

00:00:37.960 --> 00:00:39.600
 -没错，我是对的。 

00:00:39.600 --> 00:00:41.187
 ES6很棒。 

00:00:41.187 --> 00:00:42.020
 -他很棒

00:00:44.382 --> 00:00:46.590
 -我认为现在有问题， 

00:00:46.590 --> 00:00:51.220
是您还不能使用香草ES6。 

00:00:51.220 --> 00:00:54.935
 -我们在Chrome中添加了许多ES6功能

00:00:54.935 --> 00:00:56.810
和往年的V8。 

00:00:56.810 --> 00:00:59.050
其他浏览器供应商也做了出色的工作。 

00:00:59.050 --> 00:01:00.623
但是我们还没有到达舞台

00:01:00.623 --> 00:01:05.390
在哪里可以简单地使用它，而无需更改编程语言。 

00:01:05.580 --> 00:01:08.100
另一方面，很多人

00:01:08.100 --> 00:01:10.060
他们可能需要一个好的语言转换器。 

00:01:10.060 --> 00:01:12.675
我怀疑现在大多数人都在使用Babel。 

00:01:12.675 --> 00:01:14.550
 -是的，显然是一个月。 

00:01:14.550 --> 00:01:16.250
 -非常有用。 

00:01:16.250 --> 00:01:18.134
如果您使用Babel，请尝试

00:01:18.134 --> 00:01:20.550
访问您的构造以及使用的内容

00:01:20.550 --> 00:01:23.160
最有可能是Gulp-Babel等。 

00:01:23.160 --> 00:01:25.120
只需几行编程， 

00:01:25.120 --> 00:01:27.130
真的很直接

00:01:27.130 --> 00:01:29.260
我想你在做实验

00:01:29.260 --> 00:01:32.684
使用Browserify和Babelify进行打包，对吗？ 

00:01:32.684 --> 00:01:34.100
 -唯一的原因

00:01:34.100 --> 00:01:38.294
要一起使用它们，那就是Browserify将获取任何上传的文件

00:01:38.294 --> 00:01:40.460
并将它们合并到一个文件中，在其中运行

00:01:40.460 --> 00:01:42.940
通过Babelify，一切都将集中在一处

00:01:42.940 --> 00:01:45.680
他可以将所有东西汇集在一起​​。 

00:01:45.680 --> 00:01:47.570
这似乎运作良好。 

00:01:47.570 --> 00:01:50.250
您在所有教育视频中看到的东西

00:01:50.250 --> 00:01:53.220
人们只是说，定义您的编程文件

00:01:53.220 --> 00:01:54.640
通过Browserify运行

00:01:54.640 --> 00:01:57.760
通过Babel完成所有这些操作之后，一切都会正常。 

00:01:58.620 --> 00:02:00.340
它仅特定于该文件。 

00:02:00.340 --> 00:02:03.470
这是正常现象，但是添加

00:02:03.470 --> 00:02:06.084
另一个页面或其他内容的另一个文件， 

00:02:06.084 --> 00:02:07.250
所有的工作都会失败。 

00:02:07.250 --> 00:02:08.131
 -是的

00:02:08.131 --> 00:02:10.214
 -我必须在那里做一些工作

00:02:10.214 --> 00:02:12.990
那就是我使用glob.syn的时候

00:02:12.990 --> 00:02:15.180
在构造过程中检查一组文件。 

00:02:15.180 --> 00:02:18.470
它将仅在es6.js上搜索。 

00:02:18.470 --> 00:02:21.574
这些文件将通过Browserify播放， 

00:02:21.574 --> 00:02:23.240
通过Browserify运行时

00:02:23.240 --> 00:02:25.860
它将通过Babelify发送，然后将创建文件。 

00:02:25.860 --> 00:02:26.680
 -很有用。 

00:02:26.680 --> 00:02:29.290
 -我现在很享受工作， 

00:02:29.290 --> 00:02:31.120
我可以写ES6然后

00:02:31.120 --> 00:02:33.300
 ES5上的服务器已准备就绪， 

00:02:33.300 --> 00:02:34.030
准备出发。 

00:02:34.530 --> 00:02:38.186
 -因此第一步是更改编程语言。 

00:02:38.186 --> 00:02:39.560
我们通常应该做的事情

00:02:39.560 --> 00:02:43.460
他检查了代码行的错误和他的美丽。 

00:02:43.460 --> 00:02:46.190
而且主要是我用于这些事情的东西， 

00:02:46.190 --> 00:02:51.140
过去，我在调试方面一直使用JSHint 

00:02:51.140 --> 00:02:53.510
和JSCS来检查业务的美观性。 

00:02:53.510 --> 00:02:57.780
 JSCS 2.0支持Babel，因此您可以做到。 

00:02:58.310 --> 00:03:01.962
它还具有许多特殊的ES6功能， 

00:03:01.962 --> 00:03:02.920
哪个好

00:03:02.920 --> 00:03:04.600
就像ES6的规则一样。 

00:03:04.600 --> 00:03:06.630
假设我们有一个使用的程序

00:03:06.630 --> 00:03:08.130
文字序列。 

00:03:08.130 --> 00:03:11.350
我可以将规则添加到JSCS设置中

00:03:11.350 --> 00:03:13.070
我说我想让程序

00:03:13.070 --> 00:03:14.920
改用“定型”。 

00:03:14.920 --> 00:03:17.042
然后我抛出一个例外，说， 

00:03:17.042 --> 00:03:19.181
您应该使用定型文字。 

00:03:19.680 --> 00:03:22.480
 -如果您想做这种情况

00:03:22.480 --> 00:03:25.650
您可以使用箭头功能，然后强制启动

00:03:25.650 --> 00:03:26.500
作为纠正规则。 

00:03:26.500 --> 00:03:27.390
 -是的。 

00:03:27.890 --> 00:03:29.620
而且还挺酷的。 

00:03:29.620 --> 00:03:31.430
从矫正的角度来看， 

00:03:31.430 --> 00:03:36.390
有些人开始使用ESLint。 

00:03:36.390 --> 00:03:38.990
 ESLint是Nicholas Zacas创建的工具

00:03:38.990 --> 00:03:42.320
哪些尝试结合了您可能在JSCS中找到的一些功能

00:03:42.320 --> 00:03:47.490
而且是JSHint，但有人可能会说它在未来发展得有些先进。 

00:03:47.640 --> 00:03:50.190
尝试支持ES6会更好一些。 

00:03:50.190 --> 00:03:52.690
就我个人而言，我仍然使用JSHint和JSCS， 

00:03:52.690 --> 00:03:54.659
但是ESLint确实有用。 

00:03:54.659 --> 00:03:56.450
这是许多人使用的功能。 

00:03:56.450 --> 00:03:58.530
它也值得尝试。 

00:03:58.530 --> 00:03:59.290
 -是的

00:03:59.290 --> 00:04:01.610
我一直在使用JSHint和JSCS。 

00:04:01.610 --> 00:04:03.610
这很有意义，它很有用。 

00:04:03.610 --> 00:04:06.750
您唯一要做的就是添加“ esnext：true” 

00:04:06.750 --> 00:04:11.705
 .jshintrc文件及其文件。 

00:04:11.705 --> 00:04:14.880
是的，“ esnext：true”，所有纠正规则将开始起作用。 

00:04:15.001 --> 00:04:16.959
他抱怨的一切

00:04:16.959 --> 00:04:18.549
或消失，将被理解为

00:04:18.549 --> 00:04:20.144
好吧，我们使用一门课，没关系。 

00:04:20.144 --> 00:04:22.770
给你

00:04:22.770 --> 00:04:24.750
这只是我的调整， 

00:04:24.750 --> 00:04:27.041
一旦我完成调整，这就有点简单了。 

00:04:28.650 --> 00:04:30.590
我爱的最大优势

00:04:30.590 --> 00:04:32.900
你可以得到的事实

00:04:32.900 --> 00:04:34.615
在具有函数或类的文件上

00:04:34.615 --> 00:04:38.320
您基本上选择了导出， 

00:04:38.320 --> 00:04:40.840
说这部分，这个函数或这个类， 

00:04:40.840 --> 00:04:44.870
允许将其导出和导入其他类别。 

00:04:44.870 --> 00:04:47.380
仅此一点，我爱他。 

00:04:47.380 --> 00:04:50.460
关于ES6的一切都很棒。 

00:04:50.460 --> 00:04:52.750
导入能力，这意味着您可以

00:04:52.750 --> 00:04:55.260
将您的类别扩展到其他类别。 

00:04:55.260 --> 00:04:57.150
然后是所有特殊的编码

00:04:57.150 --> 00:05:01.080
使用“ .prototype”，摆脱它们，只定义函数。 

00:05:02.280 --> 00:05:04.370
例如，在我的代码中，我非常高兴

00:05:04.370 --> 00:05:06.190
它看起来多么整洁。 

00:05:06.190 --> 00:05:09.590
而且因为我来自Java编程， 

00:05:09.590 --> 00:05:13.366
这听起来让我很熟悉，这很疯狂。 

00:05:13.366 --> 00:05:14.990
您最喜欢ES6的哪些功能？ 

00:05:14.990 --> 00:05:17.680
 -我不会过多地批评Java。 

00:05:17.680 --> 00:05:20.680
但是我想要什么？ 

00:05:21.260 --> 00:05:22.540
我都喜欢

00:05:22.800 --> 00:05:24.640
我有点喜欢刻板印象。 

00:05:24.640 --> 00:05:25.441
他们很优雅。 

00:05:27.810 --> 00:05:31.580
与“简写对象文字”有关的事物，它们非常优雅， 

00:05:31.580 --> 00:05:33.620
典型代码的数量要少得多。 

00:05:33.620 --> 00:05:36.770
我喜欢“计算属性名称”。 

00:05:36.770 --> 00:05:38.360
用语言表达这是一件很棒的事情。 

00:05:38.360 --> 00:05:39.730
粗箭头也很优雅。 

00:05:39.730 --> 00:05:40.570
 “弱地图”。 

00:05:40.570 --> 00:05:42.580
 “ WeakMaps”和“ WeakSets”。 

00:05:42.580 --> 00:05:45.390
我不想忘记其中任何一个。 

00:05:45.390 --> 00:05:47.400
 -另一个遗忘的阿迪？真的吗

00:05:47.410 --> 00:05:48.820
 -我知道，你很震惊。 

00:05:48.820 --> 00:05:50.820
 -我很惊讶你没有穿衬衫

00:05:50.820 --> 00:05:52.610
它说“名字落下”。 

00:05:52.610 --> 00:05:54.729
 -不，我穿了上面写的衬衫

00:05:54.729 --> 00:05:56.020
 “别忘了软盘。” 

00:05:57.790 --> 00:05:58.770
别忘了

00:05:59.130 --> 00:06:02.060
所以我安装了一个名为ES6 Tools的仓库

00:06:02.060 --> 00:06:04.320
试图总结工具的完整视图

00:06:04.320 --> 00:06:07.960
对于ES6，ES2015或任何您想称呼的东西。 

00:06:07.960 --> 00:06:11.410
尝试用“ Grunt”和“ Gulp”捡起您需要的东西

00:06:11.410 --> 00:06:14.429
还有您需要的所有“ polyfills”以及所有其他有趣的东西。 

00:06:14.429 --> 00:06:15.970
 -所以有点像

00:06:15.970 --> 00:06:18.130
您设置的内容可以使用

00:06:18.130 --> 00:06:20.670
它会带给您所有适用于您的时间和地点的事物。 

00:06:20.670 --> 00:06:21.610
 -那是主意。 

00:06:21.640 --> 00:06:23.098
我也想提一提

00:06:23.098 --> 00:06:25.622
这是两本好书

00:06:25.622 --> 00:06:27.110
在线免费阅读

00:06:27.110 --> 00:06:29.020
如果有人想阅读有关ES6的信息。 

00:06:29.020 --> 00:06:33.150
第一本书是“ Understanding ES6”，我已经读了很多。 

00:06:33.150 --> 00:06:36.190
它由尼古拉斯·扎卡斯（Nicholas Zacas）撰写，再次是一本精彩的书。 

00:06:36.190 --> 00:06:38.580
还有另一本书《探索ES6》。 

00:06:38.580 --> 00:06:40.700
 Axel Rushmeyer着。 

00:06:40.700 --> 00:06:44.100
两本好书，两位作家都受过良好的教育。 

00:06:44.100 --> 00:06:46.070
是的，应该对其进行检查。 

00:06:46.070 --> 00:06:47.440
 -是的，我爱他们。 

00:06:47.440 --> 00:06:49.960
您可以删除的行数

00:06:49.960 --> 00:06:52.990
通过使用许多这些功能以及可维护性

00:06:52.990 --> 00:06:54.960
这种东西要干净得多。 

00:06:55.460 --> 00:06:56.640
我真的很爱她

00:06:56.640 --> 00:06:59.240
对我来说，我认为每个人都应该检查ES6 

00:06:59.240 --> 00:07:00.830
并播放一点。 

00:07:00.830 --> 00:07:03.380
正如我所说，对我来说，一切都变得像

00:07:03.380 --> 00:07:05.770
JAVA，我爱他。 

00:07:05.770 --> 00:07:06.980
 -什么？ 

00:07:06.980 --> 00:07:07.870
没有。 

00:07:07.870 --> 00:07:10.920
不，我们将带走您的ES6 

00:07:10.920 --> 00:07:13.580
不再有Matt的通天塔了。 

