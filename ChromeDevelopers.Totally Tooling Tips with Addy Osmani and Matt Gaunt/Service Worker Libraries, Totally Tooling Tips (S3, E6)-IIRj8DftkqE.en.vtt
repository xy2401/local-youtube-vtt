WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.360
[ELECTRONIC MUSIC PLAYING]

00:00:08.160 --> 00:00:11.471
SPEAKER 1: So you could write
your own service worker codes,

00:00:11.471 --> 00:00:13.970
but we've actually got a few
libraries that can help you out

00:00:13.970 --> 00:00:14.655
with this stuff.

00:00:14.655 --> 00:00:15.337
SPEAKER 2: Yeah.

00:00:15.337 --> 00:00:17.545
So I think when you start
writing some Service Worker

00:00:17.545 --> 00:00:20.260
stuff, you end up writing
a lot of boilerplate,

00:00:20.260 --> 00:00:21.550
to a certain extent.

00:00:21.550 --> 00:00:24.190
There's common patterns that
I think everyone wants to do.

00:00:24.190 --> 00:00:26.890
The first one is everyone will
have just static assets they're

00:00:26.890 --> 00:00:28.100
going to want to cache.

00:00:28.100 --> 00:00:30.433
SPEAKER 1: Yeah, stuff that
might make up an application

00:00:30.433 --> 00:00:33.920
shell, stuff that might be
just images and CSS and icons

00:00:33.920 --> 00:00:34.590
and so on.

00:00:34.590 --> 00:00:35.560
SPEAKER 2: Yeah,
things like logos

00:00:35.560 --> 00:00:36.750
are a great example
where you'd probably

00:00:36.750 --> 00:00:39.257
want to cache them up front
because they rarely change

00:00:39.257 --> 00:00:40.840
and you've got solid
control over them

00:00:40.840 --> 00:00:43.210
and they're just always there.

00:00:43.210 --> 00:00:45.430
So for the first thing
for the precaching step,

00:00:45.430 --> 00:00:47.310
there is Service
Worker precache.

00:00:47.310 --> 00:00:52.510
And basically what that
is is it's a runtime step.

00:00:52.510 --> 00:00:55.804
And all it does is you can
basically do one of two things.

00:00:55.804 --> 00:00:57.470
Well, no, you can do
two things with it.

00:00:57.470 --> 00:00:59.803
One of them is just glob for
a sentence that it follows.

00:00:59.803 --> 00:01:03.820
You pass in a path, and then
you can basically say a regex

00:01:03.820 --> 00:01:06.560
of what I want-- anything in
these directories that ends

00:01:06.560 --> 00:01:10.260
in .js, HTML, CSS,
or whatever you want.

00:01:10.260 --> 00:01:13.390
And that is just, it will go
find them, and it saves them.

00:01:13.390 --> 00:01:14.962
But it also does
far revisioning.

00:01:14.962 --> 00:01:16.420
SPEAKER 1: Yeah,
so changes to your

00:01:16.420 --> 00:01:18.260
build process will also
update your Service

00:01:18.260 --> 00:01:19.690
Workers so you don't
have to take care of file

00:01:19.690 --> 00:01:20.205
revisioning yourself.

00:01:20.205 --> 00:01:20.790
SPEAKER 2: Exactly.

00:01:20.790 --> 00:01:22.748
And the nice thing with
Service Worker precache

00:01:22.748 --> 00:01:23.940
is it's super efficient.

00:01:23.940 --> 00:01:25.890
So normally, like
when I first wrote

00:01:25.890 --> 00:01:28.340
my Service Worker, what I
ended up doing was just saying,

00:01:28.340 --> 00:01:30.640
delete the entire cache
and create a new cache

00:01:30.640 --> 00:01:32.920
with almost all of
the same assets,

00:01:32.920 --> 00:01:34.580
apart from one that had changed.

00:01:34.580 --> 00:01:36.150
So Service Worker
precache will only

00:01:36.150 --> 00:01:39.120
update that one that is
old and needs updating.

00:01:39.120 --> 00:01:39.790
Super cool.

00:01:39.790 --> 00:01:41.998
SPEAKER 1: And it's got good
best practices built in,

00:01:41.998 --> 00:01:43.300
works really well on its own.

00:01:43.300 --> 00:01:46.025
But also if you're using gulp
or grunt or whatever have you,

00:01:46.025 --> 00:01:47.400
it plays well with
those as well.

00:01:47.400 --> 00:01:49.191
SPEAKER 2: Yeah, exactly,
because it's just

00:01:49.191 --> 00:01:49.800
a node module.

00:01:49.800 --> 00:01:51.258
The other thing
that it does is you

00:01:51.258 --> 00:01:53.840
can say, for this endpoint--
so you might say from the home

00:01:53.840 --> 00:01:56.210
page-- you can also
say it's built up

00:01:56.210 --> 00:01:58.692
of these individual
files, so templates.

00:01:58.692 --> 00:02:00.400
That's also super nice
because, again, it

00:02:00.400 --> 00:02:01.983
will cache the home
page, but it won't

00:02:01.983 --> 00:02:03.215
change until it's updated.

00:02:03.215 --> 00:02:03.912
SPEAKER 1: Yeah.

00:02:03.912 --> 00:02:06.690
And Service Worker precache
uses a cache-first approach

00:02:06.690 --> 00:02:11.000
to tackling things, so you
always get your assets really,

00:02:11.000 --> 00:02:11.870
really fast.

00:02:11.870 --> 00:02:14.610
SPEAKER 2: Yes, so Service
Worker precache acts

00:02:14.610 --> 00:02:16.989
under the assumption
that basically,

00:02:16.989 --> 00:02:19.030
once you cache something,
you'll only ever get it

00:02:19.030 --> 00:02:19.910
from the cache.

00:02:19.910 --> 00:02:20.410
That's it.

00:02:20.410 --> 00:02:23.317
Until you do a new build, you
release a new Service Worker,

00:02:23.317 --> 00:02:24.275
then it'll get updated.

00:02:24.275 --> 00:02:25.630
SPEAKER 1: But it's
configurable enough

00:02:25.630 --> 00:02:26.780
to allow you to
go and switch that

00:02:26.780 --> 00:02:28.420
up to network first or another
strategy if you wanted to.

00:02:28.420 --> 00:02:29.100
SPEAKER 2: Super cool.

00:02:29.100 --> 00:02:31.433
The one thing that I would
say everyone should check out

00:02:31.433 --> 00:02:32.940
is an option called
handle fetch,

00:02:32.940 --> 00:02:35.052
which is an option
on sw-precache.

00:02:35.052 --> 00:02:37.260
And basically, while you're
developing, if you set it

00:02:37.260 --> 00:02:40.100
to false, you're
basically saying,

00:02:40.100 --> 00:02:43.152
build me a Service Worker,
but just skip the fetch event.

00:02:43.152 --> 00:02:45.110
And what that means is
while you're developing,

00:02:45.110 --> 00:02:47.840
nothing's going through the
Service Worker, which sounds

00:02:47.840 --> 00:02:49.520
kind of counter-intuitive.

00:02:49.520 --> 00:02:52.037
But once you've set up
precache and it works,

00:02:52.037 --> 00:02:54.370
you really don't want to be
using Service Worker at all.

00:02:54.370 --> 00:02:56.776
You just want it to skip,
and then you check it

00:02:56.776 --> 00:02:57.940
at another later stage.

00:02:57.940 --> 00:02:58.804
So that's awesome.

00:02:58.804 --> 00:02:59.470
SPEAKER 1: Cool.

00:02:59.470 --> 00:03:02.040
So we've talked about
the build time helper

00:03:02.040 --> 00:03:04.970
for dealing with your
shell, your static assets.

00:03:04.970 --> 00:03:07.440
What about runtime
and dynamic content?

00:03:07.440 --> 00:03:10.350
SPEAKER 2: So that's
where you have Toolbox.

00:03:10.350 --> 00:03:13.380
And what Toolbox is, is you
basically define a path.

00:03:13.380 --> 00:03:15.320
So it can be like an
express style route

00:03:15.320 --> 00:03:16.780
or it can be a regex.

00:03:16.780 --> 00:03:19.640
And then you either pass
in a caching function

00:03:19.640 --> 00:03:23.050
that Toolbox has or you
pass in your own callback.

00:03:23.050 --> 00:03:26.985
And basically what that allows
you to do is things like this.

00:03:26.985 --> 00:03:30.075
So you'd go Toolbox.router.get.

00:03:30.075 --> 00:03:31.970
You'd pass in a
regex, so in this case

00:03:31.970 --> 00:03:33.261
I'm going to say forward slash.

00:03:33.261 --> 00:03:36.490
And you might find home screen
equals true is query parameter.

00:03:36.490 --> 00:03:39.360
And for that, I want you
to do toolbox.fastest.

00:03:39.360 --> 00:03:41.400
And in this case,
toolbox.fastest,

00:03:41.400 --> 00:03:43.870
is try the network
and try the cache.

00:03:43.870 --> 00:03:46.160
And then whichever
one returns first,

00:03:46.160 --> 00:03:47.540
give that to the browser.

00:03:47.540 --> 00:03:49.248
And the nice thing
with it is the network

00:03:49.248 --> 00:03:52.310
will, once it's come back,
will be stored into the cache.

00:03:52.310 --> 00:03:54.671
SPEAKER 1: So it's good for
large or infrequently used

00:03:54.671 --> 00:03:55.170
resources.

00:03:55.170 --> 00:03:56.230
SPEAKER 2: Yeah, exactly.

00:03:56.230 --> 00:04:01.250
And Toolbox comes with a ton
of different caching mechanisms

00:04:01.250 --> 00:04:03.090
out of the box,
NetworkFirst, CacheFirst,

00:04:03.090 --> 00:04:04.380
Fastest [INAUDIBLE].

00:04:04.380 --> 00:04:06.320
There's a whole ton of them.

00:04:06.320 --> 00:04:09.879
But it's entirely geared
towards just runtime caching.

00:04:09.879 --> 00:04:11.545
And it's kind of nice
because you end up

00:04:11.545 --> 00:04:13.711
saying, for this path, do
this thing-- for this path

00:04:13.711 --> 00:04:16.320
do this thing, which you end
up writing in your own Service

00:04:16.320 --> 00:04:18.050
Worker if you just did
it all yourself anyway.

00:04:18.050 --> 00:04:18.716
SPEAKER 1: Yeah.

00:04:18.716 --> 00:04:21.890
I've heard a few people say
that Service Worker involves

00:04:21.890 --> 00:04:24.019
a lot of boilerplate or
it takes longer to learn.

00:04:24.019 --> 00:04:25.560
That wasn't my
experience personally.

00:04:25.560 --> 00:04:27.900
But using precache
and Toolbox, I

00:04:27.900 --> 00:04:30.790
found that, a lot of the
time, it takes less than 20

00:04:30.790 --> 00:04:33.100
or 30 minutes to
get things set up.

00:04:33.100 --> 00:04:34.510
It's usually pretty nice.

00:04:34.510 --> 00:04:37.960
SPEAKER 2: I wrote my Service
Worker for my site on my own.

00:04:37.960 --> 00:04:40.570
It ended up with a couple of
random weird little issues.

00:04:40.570 --> 00:04:42.135
But it was useful for learning.

00:04:42.135 --> 00:04:44.760
But afterwards, I realized that
I could replace pretty much all

00:04:44.760 --> 00:04:47.130
of it with like six
lines of Toolbox code,

00:04:47.130 --> 00:04:48.360
which is kind of depressing.

00:04:48.360 --> 00:04:50.800
But at the same time,
it's kind of reassuring

00:04:50.800 --> 00:04:53.382
that it's vaguely
on the right path.

00:04:53.382 --> 00:04:54.840
So yeah, I'd say
people should just

00:04:54.840 --> 00:04:55.964
check out and give it a go.

00:04:55.964 --> 00:04:58.560
SPEAKER 1: Yeah, it'll
definitely save you time.

00:04:58.560 --> 00:05:01.122
Check out sw-toolbox,
sw-precache

00:05:01.122 --> 00:05:02.300
and follow the links.

00:05:02.300 --> 00:05:05.440
We've also got code labs
coming up about these tools.

00:05:05.440 --> 00:05:06.657
So check those out as well.

00:05:06.657 --> 00:05:09.240
SPEAKER 2: And hit any issues,
then raise them on [INAUDIBLE].

00:05:09.240 --> 00:05:12.590
[ELECTRONIC MUSIC PLAYING]

