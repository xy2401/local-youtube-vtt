WEBVTT
Kind: captions
Language: zh-Hans

00:00:08.160 --> 00:00:11.471
这样您就可以编写服务人员代码， 

00:00:11.471 --> 00:00:13.970
但是我们有一些图书馆可以帮助您

00:00:13.970 --> 00:00:15.125
有了这些东西

00:00:15.337 --> 00:00:17.545
我认为当您开始编写一些Service Worker时

00:00:17.545 --> 00:00:20.260
你最终写了其他东西， 

00:00:20.260 --> 00:00:21.550
在一定程度上。 

00:00:21.550 --> 00:00:24.190
我认为每个人都有一个共同的模式需要做。 

00:00:24.190 --> 00:00:26.890
首先是每个人都有固定资产

00:00:26.890 --> 00:00:28.100
他想要创建她的缓存。 

00:00:28.100 --> 00:00:30.433
是的，可以用于构建应用程序窗口， 

00:00:30.433 --> 00:00:33.870
事物可能只是图像，CSS和图标

00:00:33.870 --> 00:00:34.590
依此类推。 

00:00:34.590 --> 00:00:35.560
是的，例如徽标

00:00:35.560 --> 00:00:36.750
是您可能想要的一个很好的例子

00:00:36.750 --> 00:00:39.377
将缓存移到最前面，因为它们很少更改

00:00:39.377 --> 00:00:40.840
而且您对此拥有强大的控制权， 

00:00:40.840 --> 00:00:43.210
它们一直可用。 

00:00:43.210 --> 00:00:45.430
预缓存阶段的第一件事

00:00:45.430 --> 00:00:47.310
服务工作者有一个预缓存

00:00:47.310 --> 00:00:52.510
这基本上意味着运行所需的时间。 

00:00:52.510 --> 00:00:55.804
基本上，您所做的每一件事都是两个问题。 

00:00:55.804 --> 00:00:57.470
好吧，不，您可以同时做。 

00:00:57.470 --> 00:00:59.803
一种是搜索要跟随的短语。 

00:00:59.803 --> 00:01:03.820
您通过路径，那么您可以说不使用正则表达式

00:01:03.820 --> 00:01:06.560
对于您想要的-这些目录中的所有内容都结束了

00:01:06.560 --> 00:01:10.260
使用.js，HTML，CSS或任何您想要的东西。 

00:01:10.260 --> 00:01:13.390
它将为您找到并保存它们。 

00:01:13.390 --> 00:01:14.962
但是他们也在审查。 

00:01:14.962 --> 00:01:16.420
是的，那么变化

00:01:16.420 --> 00:01:18.660
在施工过程中，服务人员将为您更新

00:01:18.660 --> 00:01:20.830
因此，您不必自己担心审核文件。 

00:01:20.830 --> 00:01:22.748
服务工作者的温和预缓存阶段

00:01:22.748 --> 00:01:23.940
它们非常有效。 

00:01:23.940 --> 00:01:25.890
很自然，就像我第一次写

00:01:25.890 --> 00:01:28.340
服务员我，我最后说的是

00:01:28.340 --> 00:01:30.640
删除所有缓存并启动新的缓存

00:01:30.640 --> 00:01:32.920
几乎所有相同的资产

00:01:32.920 --> 00:01:34.580
远离他们所发生的变化。 

00:01:34.580 --> 00:01:36.270
服务工作者的预缓存过程

00:01:36.270 --> 00:01:39.120
您将更新需要更新的旧版本。 

00:01:39.120 --> 00:01:39.850
很酷

00:01:39.850 --> 00:01:41.998
并且有很好的做法， 

00:01:41.998 --> 00:01:43.300
自动工作真的很好

00:01:43.300 --> 00:01:45.955
而且，如果您使用gulp，grant等

00:01:45.955 --> 00:01:47.400
它们与它们非常兼容。 

00:01:47.410 --> 00:01:49.771
是的，正是因为它只是一个连接单元。 

00:01:49.800 --> 00:01:51.258
他要做的另一件事是

00:01:51.258 --> 00:01:53.840
你可以说到终点-你可以说

00:01:53.840 --> 00:01:56.210
在主页上-假设它们已构建

00:01:56.210 --> 00:01:58.692
在这些单个文件中，模板也是如此。 

00:01:58.692 --> 00:02:00.250
这非常好，因为再次

00:02:00.250 --> 00:02:01.973
您将为主页创建一个缓存， 

00:02:01.983 --> 00:02:03.622
但它不会更改，直到更新。 

00:02:03.622 --> 00:02:06.690
 Service Worker预缓存过程首先使用缓存方法

00:02:06.690 --> 00:02:10.810
处理事物，因此您始终可以获取资产

00:02:10.810 --> 00:02:11.870
很快

00:02:11.870 --> 00:02:14.610
是的，服务工作者预缓存

00:02:14.610 --> 00:02:16.719
根据以下假设执行

00:02:16.719 --> 00:02:19.030
一旦对某事进行了缓存，就只会得到它

00:02:19.030 --> 00:02:19.910
的缓存。 

00:02:19.910 --> 00:02:20.730
仅此而已。 

00:02:20.730 --> 00:02:23.317
为了构建一个新的，您需要发布一个新的Service Worker， 

00:02:23.317 --> 00:02:24.275
然后它将被更新。 

00:02:24.275 --> 00:02:25.630
但这是足够可配置的

00:02:25.630 --> 00:02:26.710
你甚至可以转换

00:02:26.710 --> 00:02:28.420
首先进行网络或您想要的任何策略。 

00:02:28.420 --> 00:02:29.150
很酷

00:02:29.150 --> 00:02:31.283
我希望大家尝试的东西

00:02:31.283 --> 00:02:32.940
是称为句柄获取的选项， 

00:02:32.940 --> 00:02:35.052
 sw-precache上的一个选项。 

00:02:35.052 --> 00:02:37.040
基本上，随着您的发展

00:02:37.040 --> 00:02:39.870
如果您停用它，则告诉它， 

00:02:39.870 --> 00:02:43.152
要为您构建服务工作者，但跳过“获取”步骤。 

00:02:43.152 --> 00:02:45.110
这意味着随着您的发展， 

00:02:45.110 --> 00:02:47.260
没有东西会通过服务人员

00:02:47.260 --> 00:02:49.520
这似乎是违反直觉的

00:02:49.520 --> 00:02:51.887
但是，一旦准备好预缓存并发现它可以工作， 

00:02:51.887 --> 00:02:54.500
您根本不需要使用Service Worker 

00:02:54.500 --> 00:02:56.776
您只需要离开，然后签出

00:02:56.776 --> 00:02:57.940
在另一个后期。 

00:02:57.940 --> 00:02:58.804
太棒了

00:02:58.804 --> 00:02:59.540
太好了

00:02:59.540 --> 00:03:02.040
所以我们在构建应用程序时谈到了一个助手

00:03:02.040 --> 00:03:04.970
要处理您的结构，即固定资产。 

00:03:04.970 --> 00:03:07.440
播放和动态内容的时间呢？ 

00:03:07.440 --> 00:03:10.350
这是您拥有工具箱的地方。 

00:03:10.350 --> 00:03:13.380
该工具箱实质上是一个路径指示符。 

00:03:13.380 --> 00:03:15.320
它可以像一个富有表现力的模型路径。 

00:03:15.320 --> 00:03:16.780
或者可能是正则表达式。 

00:03:16.780 --> 00:03:19.640
然后通过缓存功能。 

00:03:19.640 --> 00:03:23.050
您在工具箱中拥有的或通过您的定期连接。 

00:03:23.050 --> 00:03:26.985
您可以那样做。 

00:03:26.985 --> 00:03:30.075
您将转到Toolbox.router.get 

00:03:30.075 --> 00:03:31.970
正则表达式已通过，在这种情况下

00:03:31.970 --> 00:03:33.261
我会说斜线。 

00:03:33.261 --> 00:03:36.490
您可能会发现等于true的主页是查询参数。 

00:03:36.490 --> 00:03:39.360
所以，我要你做toolbox.fastest 

00:03:39.360 --> 00:03:41.400
在这种情况下，toolbox.fastest， 

00:03:41.400 --> 00:03:43.870
尝试网络和缓存。 

00:03:43.870 --> 00:03:46.160
他们两个都先回来

00:03:46.160 --> 00:03:47.540
给他浏览器。 

00:03:47.540 --> 00:03:49.248
而且，它的好处是网络响应

00:03:49.248 --> 00:03:52.310
一旦到达，它将被存储在缓存中。 

00:03:52.310 --> 00:03:54.191
它们对任何重要来源都有好处

00:03:54.191 --> 00:03:55.170
并重复使用。 

00:03:55.170 --> 00:03:56.230
是的，完全正确。 

00:03:56.230 --> 00:04:00.810
该工具箱带有许多不同的缓存机制

00:04:00.810 --> 00:04:03.090
像NetworkFirst，CacheFirst， 

00:04:03.090 --> 00:04:04.380
最快的

00:04:04.380 --> 00:04:06.320
有很多。 

00:04:06.320 --> 00:04:09.879
但这仅用于缓存所需的时间

00:04:09.879 --> 00:04:11.545
很好，因为你最终

00:04:11.545 --> 00:04:13.171
通过说，沿着这条路做那件事

00:04:13.171 --> 00:04:16.710
为此，您会发现自己正在编写Service Worker， 

00:04:16.710 --> 00:04:18.050
如果您还是自己做的话。 

00:04:18.050 --> 00:04:18.796
是的

00:04:18.796 --> 00:04:21.210
我听到很多人说服务人员

00:04:21.210 --> 00:04:24.069
样板涉及过多或需要很长时间学习。 

00:04:24.069 --> 00:04:25.560
我和他的经历不是。 

00:04:25.560 --> 00:04:27.900
但是使用Precache和Toolbox。 

00:04:27.900 --> 00:04:30.170
我发现这需要很多时间

00:04:30.170 --> 00:04:33.100
不到20或30分钟即可准备一切。 

00:04:33.100 --> 00:04:34.510
通常很好。 

00:04:34.510 --> 00:04:37.960
我写了我自己的服务人员。 

00:04:37.960 --> 00:04:40.570
最后出现了一些小的奇怪问题。 

00:04:40.570 --> 00:04:42.135
但这对学习很有用。 

00:04:42.135 --> 00:04:44.760
但是后来我意识到我可以取代很多

00:04:44.760 --> 00:04:47.070
大约有6行工具箱刀片， 

00:04:47.070 --> 00:04:48.410
这有点不幸。 

00:04:48.410 --> 00:04:50.800
但同时让人放心。 

00:04:50.800 --> 00:04:53.382
它神秘地在轨道上。 

00:04:53.382 --> 00:04:55.940
是的，我认为人们应该检查并尝试。 

00:04:55.964 --> 00:04:58.560
是的，肯定会节省您的时间。 

00:04:58.560 --> 00:05:01.122
检查sw-toolbox，sw-precache 

00:05:01.122 --> 00:05:02.300
并点击链接。 

00:05:02.300 --> 00:05:05.440
这些工具中也有代码实验室。 

00:05:05.440 --> 00:05:06.657
这些工具也丢失了。 

00:05:06.657 --> 00:05:09.240
如果您有任何问题，请在这里告诉我们。 

