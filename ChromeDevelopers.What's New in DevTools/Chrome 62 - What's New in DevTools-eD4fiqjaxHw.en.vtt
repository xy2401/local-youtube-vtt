WEBVTT
Kind: captions
Language: en

00:00:05.445 --> 00:00:07.230
KAYCE BASQUES: Hey,
hey, welcome back.

00:00:07.230 --> 00:00:09.090
We've got a bunch
of new stuff coming

00:00:09.090 --> 00:00:12.750
to Dev Tools in Chrome
62, including two new ways

00:00:12.750 --> 00:00:14.310
to take screenshots.

00:00:14.310 --> 00:00:17.130
To take a screenshot of
a specific HTML node,

00:00:17.130 --> 00:00:21.480
such as this header here, select
the node in the Elements panel,

00:00:21.480 --> 00:00:24.960
open the Command menu by
pressing Command-Shift-P on Mac

00:00:24.960 --> 00:00:28.340
or Control-Shift-P
on Windows and Linux,

00:00:28.340 --> 00:00:32.680
type node, then select
Capture Node Screenshot.

00:00:32.680 --> 00:00:35.290
To take a screenshot of a
portion of the viewport,

00:00:35.290 --> 00:00:38.980
click Inspect hold
Command on Mac or Control

00:00:38.980 --> 00:00:42.190
on Windows and Linux, then drag
your mouse over the portion

00:00:42.190 --> 00:00:45.770
that you want to screenshot.

00:00:45.770 --> 00:00:47.480
Here's what's new
in the console.

00:00:47.480 --> 00:00:49.580
As you may know,
the await operator

00:00:49.580 --> 00:00:52.220
lets you write synchronous
promise-based code that

00:00:52.220 --> 00:00:54.167
doesn't block the main thread.

00:00:54.167 --> 00:00:56.000
When you're tinkering
around in the console,

00:00:56.000 --> 00:00:59.920
you can now use await in
your top-level statements.

00:00:59.920 --> 00:01:01.670
If you've got a lot
of the messages locked

00:01:01.670 --> 00:01:04.010
to your console, you can
now filter out the noise

00:01:04.010 --> 00:01:05.870
by typing a minus
sign in the filter

00:01:05.870 --> 00:01:08.520
box followed by some text.

00:01:08.520 --> 00:01:11.020
If that text occurs in
the message or the file

00:01:11.020 --> 00:01:13.260
name that created a
message, then the console

00:01:13.260 --> 00:01:16.270
hides that message.

00:01:16.270 --> 00:01:18.900
You can also filter by URLs now.

00:01:18.900 --> 00:01:21.870
In the filter box,
type URL colon

00:01:21.870 --> 00:01:24.500
followed by a portion
of a script file name,

00:01:24.500 --> 00:01:26.340
and then the console
only shows messages

00:01:26.340 --> 00:01:29.490
that came from that file.

00:01:29.490 --> 00:01:31.920
When you want to inspect all
objects of a certain type,

00:01:31.920 --> 00:01:34.410
you can now call the
new queryObjects API

00:01:34.410 --> 00:01:36.270
to get the job done quickly.

00:01:36.270 --> 00:01:38.280
Just pass in a
constructor, and DevTools

00:01:38.280 --> 00:01:40.950
returns an array of all
objects in the heap that

00:01:40.950 --> 00:01:44.050
were instantiated
with that constructor.

00:01:44.050 --> 00:01:46.450
Here we've got a page
with four buttons.

00:01:46.450 --> 00:01:49.090
Within the I-frame, we can
see a JavaScript reference

00:01:49.090 --> 00:01:50.780
to button one.

00:01:50.780 --> 00:01:52.280
And down here in
this script block,

00:01:52.280 --> 00:01:55.810
we can see references to
buttons two and three.

00:01:55.810 --> 00:01:58.950
When we pass HTML button
element to queryObjects,

00:01:58.950 --> 00:02:00.630
the console returns
an array that

00:02:00.630 --> 00:02:03.350
includes buttons two and three.

00:02:03.350 --> 00:02:05.630
For security reasons,
to use this array

00:02:05.630 --> 00:02:08.210
in subsequent statements we
need to manually store it

00:02:08.210 --> 00:02:10.600
as a global variable.

00:02:10.600 --> 00:02:12.940
Button four isn't
included because there's

00:02:12.940 --> 00:02:15.700
no reference to it in
the JavaScript heap,

00:02:15.700 --> 00:02:17.800
and button one isn't
included because it's

00:02:17.800 --> 00:02:20.310
in a different context.

00:02:20.310 --> 00:02:23.060
When we change the console
context to the I-frame

00:02:23.060 --> 00:02:25.100
and then run
queryObjects again, we

00:02:25.100 --> 00:02:28.820
can see button one, as expected.

00:02:28.820 --> 00:02:32.850
In the Elements panel, you
can now visualize CSS grids.

00:02:32.850 --> 00:02:35.790
Hover over an element that has
display grid applied to it,

00:02:35.790 --> 00:02:39.330
and you can see the grid that's
affecting the element's layout.

00:02:39.330 --> 00:02:41.400
This also works when the
parent of the element

00:02:41.400 --> 00:02:44.580
has display grid applied to it.

00:02:44.580 --> 00:02:47.010
In the Network panel, it's
now easy to share network

00:02:47.010 --> 00:02:50.070
recordings with your colleagues,
thanks to the new HAR imports

00:02:50.070 --> 00:02:51.090
feature.

00:02:51.090 --> 00:02:53.160
To load a HAR file,
just drag and drop it

00:02:53.160 --> 00:02:54.750
into the Network panel.

00:02:54.750 --> 00:02:58.290
And in case you didn't know,
to save a network recording,

00:02:58.290 --> 00:03:00.450
right click the Request
table and select

00:03:00.450 --> 00:03:03.390
Save As HAR With Content.

00:03:03.390 --> 00:03:05.700
In the Coverage tab, you
now get even more detail

00:03:05.700 --> 00:03:08.610
about which code your
page actually uses.

00:03:08.610 --> 00:03:11.400
Before, the Coverage tab
marked every line of a function

00:03:11.400 --> 00:03:14.600
as used so long as the
function was caught.

00:03:14.600 --> 00:03:16.160
But now the Coverage
tab shows you

00:03:16.160 --> 00:03:18.140
which blocks of code
within each function

00:03:18.140 --> 00:03:20.799
are actually being used.

00:03:20.799 --> 00:03:22.340
If you've built
progressive web apps,

00:03:22.340 --> 00:03:24.950
you might have noticed
that cache debugging can

00:03:24.950 --> 00:03:27.920
be a little rough
around the edges.

00:03:27.920 --> 00:03:30.590
The big problem was that the
Dev Tools UI didn't reflect

00:03:30.590 --> 00:03:32.930
cache updates in real time.

00:03:32.930 --> 00:03:36.150
In Chrome 62, the
experience is much better.

00:03:36.150 --> 00:03:39.410
Here I've got a demo that
lets me create, update,

00:03:39.410 --> 00:03:41.180
and delete the cache.

00:03:41.180 --> 00:03:43.460
The Dev Tools UI now
updates in real time

00:03:43.460 --> 00:03:47.840
when a cache is created, same
with creating a resource.

00:03:47.840 --> 00:03:50.210
Also new in Chrome
62, you can now

00:03:50.210 --> 00:03:53.700
view the contents of a
resource by clicking on it.

00:03:53.700 --> 00:03:55.540
The preview also
updates in real time

00:03:55.540 --> 00:03:57.290
when the contents of
that resource change.

00:04:00.170 --> 00:04:02.630
That does it for Chrome
62, thanks for watching.

00:04:02.630 --> 00:04:05.480
Tweet us @ChromeDevTools or
start a thread in the mailing

00:04:05.480 --> 00:04:07.479
list to discuss these changes.

00:04:07.479 --> 00:04:09.770
And subscribe to the Chrome
Developer's YouTube channel

00:04:09.770 --> 00:04:12.350
to keep up with the
latest trends in web dev.

00:04:12.350 --> 00:04:15.320
We'll be back in six
weeks for Chrome 63.

