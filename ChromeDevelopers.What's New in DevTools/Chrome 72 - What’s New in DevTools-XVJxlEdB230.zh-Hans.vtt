WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.000 --> 00:00:07.919
 [音乐] 

00:00:05.180 --> 00:00:11.190
欢迎回到这里，这是开发中的新功能

00:00:07.919 --> 00:00:13.019
 chrome 72的计时部分中的工具

00:00:11.190 --> 00:00:15.960
现在，性能面板包括

00:00:13.019 --> 00:00:17.970
这里的性能指标

00:00:15.960 --> 00:00:20.609
我们优化的性能记录

00:00:17.970 --> 00:00:22.550
网站速度教程的新性能

00:00:20.609 --> 00:00:25.380
指标位于“计时”部分

00:00:22.550 --> 00:00:27.420
 FCP代表第一内容的完整内容

00:00:25.380 --> 00:00:30.449
当浏览器呈现

00:00:27.420 --> 00:00:32.279
 dom EFMP的第一部分内容

00:00:30.449 --> 00:00:34.140
是第一个有意义的油漆

00:00:32.279 --> 00:00:38.160
估算何时有意义的内容是

00:00:34.140 --> 00:00:40.260
可见DCL是加载的Dom内容

00:00:38.160 --> 00:00:44.010
初始HTML时浏览器启动

00:00:40.260 --> 00:00:46.320
文档已加载到已解析和L 

00:00:44.010 --> 00:00:48.870
是在以下情况下触发的加载事件

00:00:46.320 --> 00:00:50.940
所有资源已完成加载

00:00:48.870 --> 00:00:52.649
您是否很好地使用了这些信息

00:00:50.940 --> 00:00:55.289
想要获得屏幕上的初始内容

00:00:52.649 --> 00:00:57.539
例如更快，您将专注于所有

00:00:55.289 --> 00:01:00.989
 FMP之前发生的活动

00:00:57.539 --> 00:01:03.449
事件推迟任何不必要的网络

00:01:00.989 --> 00:01:06.299
请求或JavaScript调用应该会有所帮助

00:01:03.449 --> 00:01:08.130
将您的FMP事件推向左侧

00:01:06.299 --> 00:01:08.850
该页面正在呈现第一位

00:01:08.130 --> 00:01:11.010
快点

00:01:08.850 --> 00:01:12.540
查看此优化的网站速度

00:01:11.010 --> 00:01:15.390
学习基础知识的教程

00:01:12.540 --> 00:01:17.400
分析负载性能悬停

00:01:15.390 --> 00:01:19.080
现在dom树中的一个文本节点

00:01:17.400 --> 00:01:22.049
在视口中突出显示该节点

00:01:19.080 --> 00:01:25.170
当我将鼠标悬停在chrome 71上时

00:01:22.049 --> 00:01:27.810
文本节点在Chrome 72中什么也没有发生

00:01:25.170 --> 00:01:30.570
当我将鼠标悬停在同一节点上时

00:01:27.810 --> 00:01:32.490
假定在视口中突出显示

00:01:30.570 --> 00:01:35.430
您正在编写一个自动化测试， 

00:01:32.490 --> 00:01:37.500
涉及单击Dom节点副本j / s 

00:01:35.430 --> 00:01:39.420
路径提供了一种获取

00:01:37.500 --> 00:01:42.810
 JavaScript对该节点的引用

00:01:39.420 --> 00:01:43.409
在此影子Dom的开发工具中

00:01:42.810 --> 00:01:44.909
教程

00:01:43.409 --> 00:01:47.549
我需要参考第一个

00:01:44.909 --> 00:01:49.979
段落，所以我右键单击该节点

00:01:47.549 --> 00:01:51.840
选择检查将打开

00:01:49.979 --> 00:01:54.600
元素面板并突出显示节点

00:01:51.840 --> 00:01:57.780
在Dom树中，然后右键单击

00:01:54.600 --> 00:02:01.740
节点去复制并选择复制j / s路径

00:01:57.780 --> 00:02:03.869
文档点查询选择器表达式

00:02:01.740 --> 00:02:06.930
现在解析此节点的副本

00:02:03.869 --> 00:02:09.709
我可以在剪贴板上确认

00:02:06.930 --> 00:02:12.930
将表达式粘贴到控制台中

00:02:09.709 --> 00:02:16.469
渴望表达价值

00:02:12.930 --> 00:02:20.430
到达预期的节点

00:02:16.469 --> 00:02:23.069
最奇怪的小组根据

00:02:20.430 --> 00:02:25.650
过去最佳做法的审计部分

00:02:23.069 --> 00:02:28.859
类别中，您会发现一个名为

00:02:25.650 --> 00:02:31.409
将JavaScript库检测为

00:02:28.859 --> 00:02:33.150
名称表明此审核列出了所有

00:02:31.409 --> 00:02:36.689
检测到的JavaScript库

00:02:33.150 --> 00:02:39.019
在页面上，这是老虎钳的小费

00:02:36.689 --> 00:02:41.939
模式可以帮助您检查媒体查询

00:02:39.019 --> 00:02:45.329
点击切换设备工具栏进入

00:02:41.939 --> 00:02:47.280
您需要处于响应状态的设备模式

00:02:45.329 --> 00:02:49.439
模式用于此功能，因此请切换回

00:02:47.280 --> 00:02:53.220
如果您要模拟一个特定的

00:02:49.439 --> 00:02:57.000
设备单击更多选项，然后选择

00:02:53.220 --> 00:02:59.159
显示媒体查询，蓝色条包含

00:02:57.000 --> 00:03:02.219
仅设置最大值的媒体查询

00:02:59.159 --> 00:03:04.859
绿色栏包含的查询

00:03:02.219 --> 00:03:07.919
设置最小宽度和最大宽度

00:03:04.859 --> 00:03:11.549
橙色栏包含的查询

00:03:07.919 --> 00:03:13.530
仅设置最小宽度单击一个查询

00:03:11.549 --> 00:03:16.230
调整视口大小，以便查询

00:03:13.530 --> 00:03:18.720
触发右键单击查询，然后

00:03:16.230 --> 00:03:21.810
选择显示和源代码以查看其

00:03:18.720 --> 00:03:24.389
源面板中的源代码（如果

00:03:21.810 --> 00:03:26.190
 CSS文件采用最小化的点击格式， 

00:03:24.389 --> 00:03:28.590
开发工具向您展示了更易读的内容

00:03:26.190 --> 00:03:31.390
查询版本感谢您的观看

00:03:28.590 --> 00:03:34.570
 Chrome 73六周后见

00:03:31.390 --> 00:03:34.570
 [音乐] 

00:03:35.210 --> 00:03:42.449
您

00:03:36.720 --> 00:03:42.449
 [音乐] 

