WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.380 --> 00:00:14.400
好的，录音很好，很好

00:00:07.020 --> 00:00:25.800
晚上，我创造了一些工作

00:00:14.400 --> 00:00:31.910
在Eclipse上的Jenkins中，基本上

00:00:25.800 --> 00:00:34.890
我应该从TCK开始TCK用于

00:00:31.910 --> 00:00:42.030
确保实施是

00:00:34.890 --> 00:00:48.600
始终对API感到满意

00:00:42.030 --> 00:00:50.879
标准，并适用于Jakarta ee8 

00:00:48.600 --> 00:00:55.410
发布，我们可能会有所不同

00:00:50.879 --> 00:00:57.719
我们要确保新事物

00:00:55.410 --> 00:01:03.390
即将发布的API 

00:00:57.719 --> 00:01:09.290
埃及即一个舒适的Java EE 

00:01:03.390 --> 00:01:15.990
 8，为此，我们想使用TCK 

00:01:09.290 --> 00:01:19.380
所以基本上的想法是，如果我们有

00:01:15.990 --> 00:01:22.049
 GlassFish的实现

00:01:19.380 --> 00:01:27.299
已经兼容，通过了所有

00:01:22.049 --> 00:01:29.759
 TCK测试，那么我们只有

00:01:27.299 --> 00:01:34.470
兼容的实现，如果

00:01:29.759 --> 00:01:39.390
我们放入新的API，然后阅读

00:01:34.470 --> 00:01:41.700
 D CK，那一切应该变成

00:01:39.390 --> 00:01:48.630
通过了，一切都应该舒服

00:01:41.700 --> 00:01:52.350
这就是另一件事

00:01:48.630 --> 00:01:58.469
我们只有很少的工作吗？ 

00:01:52.350 --> 00:02:07.069
 API需要完成以下工作

00:01:58.469 --> 00:02:09.989
被建造，所以这可能是工作

00:02:07.069 --> 00:02:12.680
我会在Jason B上向您展示

00:02:09.989 --> 00:02:17.840
我们使用的Jason B 

00:02:12.680 --> 00:02:27.829
从中构建API的构建作业

00:02:17.840 --> 00:02:35.739
从efore j8分支开始，然后我们

00:02:27.829 --> 00:02:40.819
把它做为GlassFish的API这样

00:02:35.739 --> 00:02:48.519
我们构建了我们运行的TCK捆绑包

00:02:40.819 --> 00:02:48.519
 TCG捆绑销售就是这样

00:02:48.700 --> 00:03:03.040
建立工作有哪些工件

00:02:55.069 --> 00:03:11.450
将用于我们的TCK工作，我

00:03:03.040 --> 00:03:14.989
可以在这里给你看这个GlassFish 

00:03:11.450 --> 00:03:17.829
集成工作只是采用该API， 

00:03:14.989 --> 00:03:21.819
将其集成到它具有的GlassFish中

00:03:17.829 --> 00:03:28.099
另一个工件是GlassFish 

00:03:21.819 --> 00:03:40.840
包含从e4构建的新API 

00:03:28.099 --> 00:03:43.849
 j由一个分支并且存在TC kr 

00:03:40.840 --> 00:03:50.030
只需要这个GlassFish的信封

00:03:43.849 --> 00:03:57.709
并运行以建立TC k 

00:03:50.030 --> 00:04:02.329
 GlassFish那么最重要的是什么

00:03:57.709 --> 00:04:04.699
在这些设置中是TSgt 

00:04:02.329 --> 00:04:09.099
配置文件TSgt 

00:04:04.699 --> 00:04:11.540
协作文件基本上

00:04:09.099 --> 00:04:18.380
需要的主文件

00:04:11.540 --> 00:04:23.510
配置为围绕TCK做TCK asan 

00:04:18.380 --> 00:04:25.610
基于项目，基本上是TSgt 

00:04:23.510 --> 00:04:35.180
文件主要包含类

00:04:25.610 --> 00:04:37.699
但是那是超越了阶级的

00:04:35.180 --> 00:04:45.889
但这仅用于TCK 

00:04:37.699 --> 00:04:48.800
完成，所以我是TSgt文件TSgt文件是

00:04:45.889 --> 00:04:54.590
位于

00:04:48.800 --> 00:04:58.370
原始的雅加达，例如CK仓库

00:04:54.590 --> 00:05:05.289
在您的安装文件夹中，并在每个

00:04:58.370 --> 00:05:10.129
例如Jason B的项目

00:05:05.289 --> 00:05:10.940
 TSgt文件所在的位置

00:05:10.129 --> 00:05:16.039
位于

00:05:10.940 --> 00:05:20.240
此ESET文件不完全按照

00:05:16.039 --> 00:05:22.969
普通文件，您可以看到有

00:05:20.240 --> 00:05:27.099
基本上在大多数项目中

00:05:22.969 --> 00:05:31.580
是一些Jason B班还是Jason B或

00:05:27.099 --> 00:05:37.580
导入类或类似属性

00:05:31.580 --> 00:05:43.400
需要用

00:05:37.580 --> 00:05:46.610
正确的课堂路径

00:05:43.400 --> 00:05:51.800
其他一些已经存在的属性

00:05:46.610 --> 00:05:57.409
设置，也许还有更多

00:05:51.800 --> 00:06:03.370
不是贾森B是很简单的D CK说

00:05:57.409 --> 00:06:03.370
物业不多，但

00:06:04.300 --> 00:06:16.210
詹金斯的工作为我们填补了

00:06:16.479 --> 00:06:30.069
我可以使用具有所需属性的文件

00:06:22.310 --> 00:06:35.050
如果我走到配置可以

00:06:30.069 --> 00:06:39.260
文件的设置基本上像这样

00:06:35.050 --> 00:06:47.440
那里有什么

00:06:39.260 --> 00:06:51.620
类路径和所有图表

00:06:47.440 --> 00:06:59.170
 TCK需要圆角的，并且

00:06:51.620 --> 00:07:05.000
我需要上课地点

00:06:59.170 --> 00:07:06.920
这有点不清楚

00:07:05.000 --> 00:07:13.550
分类需要上课

00:07:06.920 --> 00:07:21.050
路径基本上是原始的

00:07:13.550 --> 00:07:23.870
文档涵盖了我不

00:07:21.050 --> 00:07:26.750
认为有我们显示的文档

00:07:23.870 --> 00:07:31.090
现在的颜色

00:07:26.750 --> 00:07:36.290
也许也许我不太确定

00:07:31.090 --> 00:07:40.850
基本上，如果TCK是

00:07:36.290 --> 00:07:45.020
被构建到Java编译器

00:07:40.850 --> 00:07:48.200
没有找到任何课程或说这样的话

00:07:45.020 --> 00:07:57.290
这是需要的课程

00:07:48.200 --> 00:08:05.960
进入课堂路径，那就是

00:07:57.290 --> 00:08:07.910
大概这里有什么属性

00:08:05.960 --> 00:08:10.960
有员工我总是

00:08:07.910 --> 00:08:15.520
守卫一起钓鱼的东西

00:08:10.960 --> 00:08:21.830
 Tomcat的设置

00:08:15.520 --> 00:08:25.730
我默认使用GlassFish属性

00:08:21.830 --> 00:08:30.380
网路首页，可能不在

00:08:25.730 --> 00:08:33.590
 TSgt文件在任何地方，所以我需要附加

00:08:30.380 --> 00:08:48.560
这个属性基本上是一个快捷方式

00:08:33.590 --> 00:08:54.070
到GlassFish的家哦，是的，这是

00:08:48.560 --> 00:08:58.600
呃，这是七套房

00:08:54.070 --> 00:09:02.530
扣子是物理位置

00:08:58.600 --> 00:09:07.830
在那个詹金斯机器上

00:09:02.530 --> 00:09:19.840
 GlassFish将部署到此

00:09:07.830 --> 00:09:23.160
先生要运行，许多TC案例都使用网络

00:09:19.840 --> 00:09:26.580
服务器主页总是很低的Costa 

00:09:23.160 --> 00:09:30.220
和网络支持

00:09:26.580 --> 00:09:33.360
取决于默认值是多少

00:09:30.220 --> 00:09:36.490
 GlassFish的默认值为80 80，所以

00:09:33.360 --> 00:09:45.270
基本上就可以满足需求

00:09:36.490 --> 00:09:49.270
被定为四天的杰森B案，所以

00:09:45.270 --> 00:09:53.100
这项工作只是抓住了DSG file污的

00:09:49.270 --> 00:09:55.660
原始的然后填充

00:09:53.100 --> 00:10:00.070
下一步是什么

00:09:55.660 --> 00:10:06.130
它只是将DSG D文件存档

00:10:00.070 --> 00:10:15.970
用于tck构建和TC的文件

00:10:06.130 --> 00:10:21.490
凯伦所以当TSgt文件是

00:10:15.970 --> 00:10:26.820
创建然后可以构建t ck 

00:10:21.490 --> 00:10:35.620
 ck，如果我进入配置设置

00:10:26.820 --> 00:10:39.460
 D CK可以很好地构建TCK 

00:10:35.620 --> 00:10:43.410
建立实施或API是

00:10:39.460 --> 00:10:47.680
我需要的所有DPS和api是

00:10:43.410 --> 00:10:51.700
全部位于玻璃鱼和

00:10:47.680 --> 00:10:55.750
 GlassFish只是从专家那里抢来的

00:10:51.700 --> 00:10:59.740
中央和为d ck构建

00:10:55.750 --> 00:11:02.550
内置的，我们可以使用未经修改的

00:10:59.740 --> 00:11:02.550
玻璃鱼

00:11:02.960 --> 00:11:15.440
因此，将dck存储库克隆到

00:11:11.570 --> 00:11:20.480
进入CTS文件夹II，只需选择CES 

00:11:15.440 --> 00:11:31.040
跟随整个雅加达EDC 

00:11:20.480 --> 00:11:37.640
 case克隆在该文件夹中，即da 

00:11:31.040 --> 00:11:41.360
我克隆或抓取了媒体的jte文件

00:11:37.640 --> 00:11:45.950
我们之前填充到

00:11:41.360 --> 00:11:53.930
下载文件夹，这是一个小

00:11:45.950 --> 00:11:58.760
脚本基本上是

00:11:53.930 --> 00:12:02.209
剧本是抢T头

00:11:58.760 --> 00:12:07.520
基于手臂的项目，它期望

00:12:02.209 --> 00:12:11.920
 ck位于GC k的确切位置

00:12:07.520 --> 00:12:20.709
 TC k存储库不包含

00:12:11.920 --> 00:12:25.450
这种刮擦只是从一些

00:12:20.709 --> 00:12:31.010
网站位置并将其部署在

00:12:25.450 --> 00:12:38.510
预期的位置，所以它是

00:12:31.010 --> 00:12:44.000
 ck家和工具子文件夹等等

00:12:38.510 --> 00:12:49.760
在那里，我当然会说

00:12:44.000 --> 00:12:53.750
那个位置的家，所以蚂蚁是

00:12:49.760 --> 00:12:58.190
从那里执行我解压缩

00:12:53.750 --> 00:13:03.620
 GlassFish和大多数TC Kasich需求

00:12:58.190 --> 00:13:06.589
只需3个环境变量即可

00:13:03.620 --> 00:13:10.490
可以在TC案例可以被设置之前设置

00:13:06.589 --> 00:13:14.360
建立并执行它留在家里

00:13:10.490 --> 00:13:15.459
豪宅基本上是物业

00:13:14.360 --> 00:13:23.649
这说

00:13:15.459 --> 00:13:27.459
 TCK在哪里位于叙利亚

00:13:23.649 --> 00:13:31.269
皮带刮擦基本上是我们来自

00:13:27.459 --> 00:13:33.999
 TCK将要建造，然后在那里

00:13:31.269 --> 00:13:37.089
该属性是否可交付使用

00:13:33.999 --> 00:13:45.579
需要像这样命名

00:13:37.089 --> 00:13:49.240
 TCK中的一种脚本

00:13:45.579 --> 00:13:53.970
希望将此属性设置为um 

00:13:49.240 --> 00:14:01.300
它不仅对应于文件夹

00:13:53.970 --> 00:14:06.300
在TCK工作空间中，它也被引用

00:14:01.300 --> 00:14:15.420
在构建步骤中由脚本执行

00:14:06.300 --> 00:14:15.420
所以和

00:14:15.760 --> 00:14:24.220
有一个Java EE主页属性

00:14:17.740 --> 00:14:34.780
指向我解压缩的位置

00:14:24.220 --> 00:14:37.920
 GlassFish查看客户端TCK存储库

00:14:34.780 --> 00:14:45.940
部署在某个地方

00:14:37.920 --> 00:14:49.300
 TSgt文件被替换并构建

00:14:45.940 --> 00:14:53.980
一切都很冷，它说它创造了它

00:14:49.300 --> 00:15:06.730
在发行版中创建一些dck捆绑包

00:14:53.980 --> 00:15:11.410
文件夹，只是将其另存为

00:15:06.730 --> 00:15:22.470
 bas构建动作中的伪像，如果我

00:15:11.410 --> 00:15:25.080
告诉你这里有TCK TCK 

00:15:22.470 --> 00:15:29.020
捆绑，有一些文档

00:15:25.080 --> 00:15:32.770
其中包含一些信息

00:15:29.020 --> 00:15:36.090
节点，并且还有排除列表I 

00:15:32.770 --> 00:15:39.220
不要以为有任何排除

00:15:36.090 --> 00:15:45.640
现在在TC k中排除了测试，但

00:15:39.220 --> 00:15:49.750
也许在这个，所以这个排除列表可以

00:15:45.640 --> 00:15:57.570
在执行D CK时使用

00:15:49.750 --> 00:16:05.160
实际上，测试还没到那时

00:15:57.570 --> 00:16:10.330
所以，我们有最后的工作要做

00:16:05.160 --> 00:16:16.720
快速通过TC卡伦

00:16:10.330 --> 00:16:20.740
 DC Karen作业刚刚删除DSD 

00:16:16.720 --> 00:16:26.520
违抗它抢夺与超GlassFish 

00:16:20.740 --> 00:16:29.090
抓取TC k包的新API，请参见

00:16:26.520 --> 00:16:32.390
在这里

00:16:29.090 --> 00:16:38.390
在SGD处获取的TCK软件包

00:16:32.390 --> 00:16:42.290
文件，它抓住了GlassFish，然后再次

00:16:38.390 --> 00:16:49.670
它可以武装到确切的位置

00:16:42.290 --> 00:16:54.850
预计会在哪里以及TSgt 

00:16:49.670 --> 00:16:58.550
在TCK捆绑包中替换的文件

00:16:54.850 --> 00:17:02.110
基本上，这个ESET文件不

00:16:58.550 --> 00:17:10.070
需要与用于

00:17:02.110 --> 00:17:15.950
建立到TCK，有一次

00:17:10.070 --> 00:17:19.460
完成了TC Karen从这里开始，所以

00:17:15.950 --> 00:17:24.530
基本上只是这些命令配置

00:17:19.460 --> 00:17:26.780
我设置了一个配置目标

00:17:24.530 --> 00:17:32.660
 GlassFish它启动GlassFish 

00:17:26.780 --> 00:17:35.870
并在其中配置GE用户

00:17:32.660 --> 00:17:40.850
 glassfish可能有一些密码或

00:17:35.870 --> 00:17:44.720
其他任何所需的

00:17:40.850 --> 00:17:48.770
要做，然后被称为

00:17:44.720 --> 00:17:52.600
部署是部署所有目标的目标

00:17:48.770 --> 00:17:57.350
 t ck捆绑包中的单词和

00:17:52.600 --> 00:18:04.780
有运行所有

00:17:57.350 --> 00:18:12.050
测试，所以基本上还有更多

00:18:04.780 --> 00:18:15.020
对结果进行更多的分析，以便

00:18:12.050 --> 00:18:21.170
它可以在连续使用

00:18:15.020 --> 00:18:25.700
建立，所以如果我们将看到有

00:18:21.170 --> 00:18:30.440
一些错误或失败，然后一些电子邮件

00:18:25.700 --> 00:18:32.900
可以说我们有些

00:18:30.440 --> 00:18:36.920
测试失败，所以有人需要看看

00:18:32.900 --> 00:18:40.730
所以大概是一些

00:18:36.920 --> 00:18:44.270
如果t ck作业要用于

00:18:40.730 --> 00:18:49.290
由中使用

00:18:44.270 --> 00:18:53.130
用于检查

00:18:49.290 --> 00:18:55.800
实施仍然会很舒适

00:18:53.130 --> 00:19:04.860
从API开始

00:18:55.800 --> 00:19:13.100
规范，所以基本上就是全部

00:19:04.860 --> 00:19:13.100
这就是我们要做的所有事情

00:19:13.190 --> 00:19:19.590
不知道有什么问题

00:19:17.760 --> 00:19:21.600
这些命令是否需要在其中运行？ 

00:19:19.590 --> 00:19:24.030
这些将由项目创建， 

00:19:21.600 --> 00:19:30.870
哪一个将被共享的声音

00:19:24.030 --> 00:19:35.060
像是的，所以秩序和秩序

00:19:30.870 --> 00:19:41.670
是的，我创造了这是芒果

00:19:35.060 --> 00:19:43.830
像DJB中的文档一样

00:19:41.670 --> 00:19:47.670
不管你是否还在建造

00:19:43.830 --> 00:19:52.830
 API并将其放入GlassFish或

00:19:47.670 --> 00:19:58.560
但是你先建立他的GD文件

00:19:52.830 --> 00:20:03.360
这些步骤完成后，您可以构建

00:19:58.560 --> 00:20:09.540
带有DSGE文件的TCK，然后甚至

00:20:03.360 --> 00:20:16.560
 TCGA的工作已经建立，他可以运行

00:20:09.540 --> 00:20:20.280
 TC案件有一个北方确切命令

00:20:16.560 --> 00:20:27.750
这是需要遵循的传统知识

00:20:20.280 --> 00:20:31.920
除非您当然需要

00:20:27.750 --> 00:20:34.950
您需要快速构建TGA，以便GT 

00:20:31.920 --> 00:20:40.200
文件创建的第一个构建工作是

00:20:34.950 --> 00:20:45.510
第二轮工作是最后的遗憾

00:20:40.200 --> 00:20:49.640
另一个问题是什么

00:20:45.510 --> 00:20:52.680
只是每个项目都需要

00:20:49.640 --> 00:20:55.460
有所有这些工作，所以这是每个项目

00:20:52.680 --> 00:20:58.460
比如说要建TCK 

00:20:55.460 --> 00:20:58.460
本身

00:20:58.610 --> 00:21:06.890
是的，CCA并不是很多方法，它

00:21:03.830 --> 00:21:11.120
对项目有好处，因此

00:21:06.890 --> 00:21:14.960
该项目实际上可以撒粉所以

00:21:11.120 --> 00:21:19.940
不仅针对此特定用例

00:21:14.960 --> 00:21:23.330
可以在将来的项目中使用

00:21:19.940 --> 00:21:24.440
发展，所以只要你，如果他，如果你

00:21:23.330 --> 00:21:29.930
有你自己的

00:21:24.440 --> 00:21:40.190
 TCK，然后您可以实际测试

00:21:29.930 --> 00:21:49.400
随时兼容chmm是的，每个

00:21:40.190 --> 00:21:55.240
 DC游戏是建立完整的四个TCK 

00:21:49.400 --> 00:21:59.690
另一个选择是我们可以

00:21:55.240 --> 00:22:03.110
可以获取所有CPS或Java EE 

00:21:59.690 --> 00:22:07.190
是IEDC的纱丽外套来了

00:22:03.110 --> 00:22:12.190
整个捆绑，就像100兆字节

00:22:07.190 --> 00:22:21.310
或其他任何唯一的测试

00:22:12.190 --> 00:22:24.530
可以运行特定的测试文件夹

00:22:21.310 --> 00:22:26.900
这意味着该项目可以

00:22:24.530 --> 00:22:31.370
用它看是的，他们不需要建立

00:22:26.900 --> 00:22:34.280
自己的TCK捆绑包，但很多

00:22:31.370 --> 00:22:39.260
复杂，因为有一堂课

00:22:34.280 --> 00:22:42.230
所有CPS和属性的路径

00:22:39.260 --> 00:22:45.530
所有特定技术和

00:22:42.230 --> 00:22:51.800
这些项目可能不需要

00:22:45.530 --> 00:22:56.530
知道这一点，是的，你不会

00:22:51.800 --> 00:22:59.770
您可以使用整个CES捆绑包，但

00:22:56.530 --> 00:23:06.290
付出一些代价

00:22:59.770 --> 00:23:11.240
好吧，问题是我认为至少

00:23:06.290 --> 00:23:14.810
我认为我们应该问所有

00:23:11.240 --> 00:23:18.020
独立TC Cranston中的API流

00:23:14.810 --> 00:23:21.050
 20 ck测试，我们应该实际使用

00:23:18.020 --> 00:23:23.150
正式发布的捆绑包是

00:23:21.050 --> 00:23:26.510
从eclipse那里可以得到

00:23:23.150 --> 00:23:29.990
下载它一定在这个地方

00:23:26.510 --> 00:23:34.090
场景实际上是从

00:23:29.990 --> 00:23:38.870
来源来自主权利， 

00:23:34.090 --> 00:23:41.330
我们在TC k大师中所拥有的也许不是

00:23:38.870 --> 00:23:45.290
正是我们想要的，因为

00:23:41.330 --> 00:23:47.780
正式发布的捆绑包也许可以

00:23:45.290 --> 00:23:54.830
掌握其他一些东西

00:23:47.780 --> 00:23:57.460
之后将印度尼西亚捆绑在一起添加

00:23:54.830 --> 00:24:02.420
我们可能是这个问题

00:23:57.460 --> 00:24:11.030
证明我们有标签还是离开

00:24:02.420 --> 00:24:13.520
当时的某种提交ID 

00:24:11.030 --> 00:24:16.900
创建了这些有效的决赛，所以我们

00:24:13.520 --> 00:24:21.820
可以让源编译它们，并且

00:24:16.900 --> 00:24:24.920
基本上说这就是

00:24:21.820 --> 00:24:28.460
在那个官方包中，我们运行

00:24:24.920 --> 00:24:33.320
根据测试，我很清楚

00:24:28.460 --> 00:24:41.170
问，所以我们为j8化学制作CD 

00:24:33.320 --> 00:24:48.740
确保一个合适的人

00:24:41.170 --> 00:24:49.370
 CFG问我一个问题，这样我就

00:24:48.740 --> 00:24:51.860
跳进去

00:24:49.370 --> 00:24:55.460
而系列准备回答

00:24:51.860 --> 00:24:57.440
 TC案例，我们将继续使用

00:24:55.460 --> 00:25:04.310
现在我们要把他们推到

00:24:57.440 --> 00:25:07.940
 Eclipse下载，这里有一些

00:25:04.310 --> 00:25:10.370
将最新的内容粘贴到聊天中

00:25:07.940 --> 00:25:12.310
杰克的BT结对不起，对不起，这就是杰森

00:25:10.370 --> 00:25:14.980
被我责备

00:25:12.310 --> 00:25:17.740
是的，但是我们需要温和的联合

00:25:14.980 --> 00:25:20.290
来源也不需要井II 

00:25:17.740 --> 00:25:21.820
最终如此，最终您必须

00:25:20.290 --> 00:25:26.550
建立您必须从运行测试

00:25:21.820 --> 00:25:30.220
二进制预制的TGK是正确的否

00:25:26.550 --> 00:25:33.760
这实际上是我所关心的

00:25:30.220 --> 00:25:36.580
关于这项工作实际上是运行PC机箱

00:25:33.760 --> 00:25:38.710
从来源而不是来源构建

00:25:36.580 --> 00:25:40.870
我看到了暴力，而且来源

00:25:38.710 --> 00:25:43.960
自己的灭亡，因为阎提供

00:25:40.870 --> 00:25:45.340
那里是特别的东西

00:25:43.960 --> 00:25:47.440
它被称为文件，其中包含

00:25:45.340 --> 00:25:51.850
分类信息但表

00:25:47.440 --> 00:25:54.240
对，所以问题是我们是否有资料来源

00:25:51.850 --> 00:25:58.030
您知道的带有标签或

00:25:54.240 --> 00:25:58.810
委员会很好，是的，实际上我认为

00:25:58.030 --> 00:26:02.620
你误会了

00:25:58.810 --> 00:26:05.400
 um基本上是构建包，如果它是

00:26:02.620 --> 00:26:09.370
有空我不是我不知道

00:26:05.400 --> 00:26:13.870
比有空我想

00:26:09.370 --> 00:26:17.170
足以使用，因为这包含

00:26:13.870 --> 00:26:21.790
该捆绑包包含了所有来源

00:26:17.170 --> 00:26:25.260
包含所有二进制文件和TIG t5 

00:26:21.790 --> 00:26:29.710
可能配置不正确，但

00:26:25.260 --> 00:26:39.090
那就是您所需要的一切

00:26:29.710 --> 00:26:45.760
进行配置cerium de Java EE TCK 

00:26:39.090 --> 00:26:49.540
旧的Java EE D CK工作流程是

00:26:45.760 --> 00:26:51.420
获取此捆绑包以配置D CK 

00:26:49.540 --> 00:26:54.460
因为您必须配置它，因为

00:26:51.420 --> 00:26:57.810
你不知道供应商在哪里

00:26:54.460 --> 00:27:01.990
实施将驻留并

00:26:57.810 --> 00:27:05.050
然后在D CK周围保存我的东西

00:27:01.990 --> 00:27:07.210
想想如果我们捆绑了这个，我们

00:27:05.050 --> 00:27:10.450
不需要建造它，我们只需要我们

00:27:07.210 --> 00:27:14.440
只需运行就可以了，这意味着

00:27:10.450 --> 00:27:15.910
有捆绑广告的东西

00:27:14.440 --> 00:27:20.170
实际聊天的链接

00:27:15.910 --> 00:27:26.429
是的，可以简化您的工作，是的

00:27:20.170 --> 00:27:29.070
嗯取代了我有一份工作

00:27:26.429 --> 00:27:32.279
我不需要自己构建

00:27:29.070 --> 00:27:34.950
好的，在这种情况下，也许下一个

00:27:32.279 --> 00:27:37.740
您的行动项目实际上是

00:27:34.950 --> 00:27:40.470
今天修改您的下落，实际上

00:27:37.740 --> 00:27:44.880
使用他们的捆绑包而不是建筑

00:27:40.470 --> 00:27:45.570
 TCK本身就是我们所拥有的

00:27:44.880 --> 00:27:51.230
数量是

00:27:45.570 --> 00:27:53.700
好吧，好吧，这就是所有评论

00:27:51.230 --> 00:27:56.519
你知道目标是我们

00:27:53.700 --> 00:27:59.850
验证将要使用的TCK 

00:27:56.519 --> 00:28:02.309
运到世界上是正确的，所以

00:27:59.850 --> 00:28:04.620
在某个时候，你会知道

00:28:02.309 --> 00:28:07.740
有人提出一些二进制文件的门

00:28:04.620 --> 00:28:08.429
并说我们期望这些是

00:28:07.740 --> 00:28:10.620
完善

00:28:08.429 --> 00:28:13.139
这个TCK版本非常完美，我们

00:28:10.620 --> 00:28:15.570
将其运送到我们需要的世界

00:28:13.139 --> 00:28:18.750
有人来运行它并确认它是

00:28:15.570 --> 00:28:20.820
完美，他们不能忽略二进制

00:28:18.750 --> 00:28:22.500
并建立他们需要的另一个二进制文件

00:28:20.820 --> 00:28:23.909
使用那个二进制文件，因为那是一个

00:28:22.500 --> 00:28:27.809
其他实现将

00:28:23.909 --> 00:28:32.159
用于认证，所以这就是目标，所以我们

00:28:27.809 --> 00:28:34.350
所以我们会进行某些资格测试

00:28:32.159 --> 00:28:36.960
在他们之前的牙齿上

00:28:34.350 --> 00:28:40.470
推，所以我想问题可能是

00:28:36.960 --> 00:28:40.860
您要问的问题是什么

00:28:40.470 --> 00:28:47.429
那

00:28:40.860 --> 00:28:48.600
或预测试足以

00:28:47.429 --> 00:28:54.000
知道这肯定是一个好问题，我们

00:28:48.600 --> 00:28:55.320
可以顺利通过他们当时

00:28:54.000 --> 00:28:57.090
他们建立了，他们得到运行，他们是

00:28:55.320 --> 00:29:01.350
仅针对Eclipse类进行了测试

00:28:57.090 --> 00:29:05.159
五个关于一个建筑项目

00:29:01.350 --> 00:29:08.700
对不起，这是有道理的

00:29:05.159 --> 00:29:10.860
是的，是的，但听起来像我们

00:29:08.700 --> 00:29:14.549
能够拉下这个二进制文件并运行它

00:29:10.860 --> 00:29:16.230
就像任何人都会那样

00:29:14.549 --> 00:29:18.269
像Yun所说的zip文件包含

00:29:16.230 --> 00:29:21.179
预构建的二进制文件还包含

00:29:18.269 --> 00:29:24.029
所有来源我猜的东西

00:29:21.179 --> 00:29:27.630
我们将签名应用于的是

00:29:24.029 --> 00:29:30.539
拉链包本身，只要

00:29:27.630 --> 00:29:32.460
 D和只要兼容

00:29:30.539 --> 00:29:34.049
实现能够代表

00:29:32.460 --> 00:29:36.000
他们正在使用de运行测试

00:29:34.049 --> 00:29:37.710
捆绑我觉得好像

00:29:36.000 --> 00:29:38.770
应该足够，不用说

00:29:37.710 --> 00:29:42.040
他们正在使用正确的

00:29:38.770 --> 00:29:44.800
太好了，我认为这有点

00:29:42.040 --> 00:29:46.540
主题略有不同，因为

00:29:44.800 --> 00:29:49.480
我们现在正在讨论的是

00:29:46.540 --> 00:29:54.400
测试api是否兼容此DC 

00:29:49.480 --> 00:29:57.220
正确性的理由是我猜出来了

00:29:54.400 --> 00:30:00.580
此示范权的范围

00:29:57.220 --> 00:30:02.770
是的，我真的很难

00:30:00.580 --> 00:30:12.190
知道那是我的同一个电话

00:30:02.770 --> 00:30:13.630
好吧，只是不同而已

00:30:12.190 --> 00:30:15.510
不同的人会

00:30:13.630 --> 00:30:23.230
在PC上，来自蛀牙组

00:30:15.510 --> 00:30:26.830
好的，好的，所以当它运行时，我注意到

00:30:23.230 --> 00:30:31.150
将端口设置为8080 

00:30:26.830 --> 00:30:32.980
对，如果您有30个工作

00:30:31.150 --> 00:30:35.140
事情都在同时运行

00:30:32.980 --> 00:30:41.020
您将在同一端口上发生冲突

00:30:35.140 --> 00:30:46.390
在测试运行中，它是正确的40 

00:30:41.020 --> 00:30:49.810
一些dck旨在在以下位置运行一项测试

00:30:46.390 --> 00:30:52.060
是的，是的，当一个测试的时候

00:30:49.810 --> 00:30:55.720
完成，你可以拥有另一个

00:30:52.060 --> 00:30:57.910
测试，我们该如何处理

00:30:55.720 --> 00:31:02.230
因为如果我们有单独的项目

00:30:57.910 --> 00:31:05.560
设置这个，他们期望

00:31:02.230 --> 00:31:07.600
在8080端口启动一个玻璃鱼

00:31:05.560 --> 00:31:11.950
你知道我们不能让他们在

00:31:07.600 --> 00:31:18.670
同时是的，这是由

00:31:11.950 --> 00:31:21.630
 Jenkins在Eclipse IDE上的每项工作

00:31:18.670 --> 00:31:27.580
在虚拟环境中执行

00:31:21.630 --> 00:31:30.690
在哪里，你几乎是一个人，所以你

00:31:27.580 --> 00:31:30.690
可以开始

00:31:30.990 --> 00:31:38.910
不管有多少工作，他

00:31:34.860 --> 00:31:42.420
所有人都在8080年开始钓鱼了， 

00:31:38.910 --> 00:31:46.740
它工作得很好，我正在使用像

00:31:42.420 --> 00:31:50.400
一个码头集装箱，嗯，我不是

00:31:46.740 --> 00:31:56.820
专家，但我被告知他们是

00:31:50.400 --> 00:32:03.480
使用一些进取的

00:31:56.820 --> 00:32:10.890
是的，我不记得了

00:32:03.480 --> 00:32:14.070
名字是的，基本上是跳舞，然后

00:32:10.890 --> 00:32:16.710
看起来和博士相似是的，好吧

00:32:14.070 --> 00:32:27.030
说自己的沙箱，所以我们不应该

00:32:16.710 --> 00:32:29.640
为清洁而担心

00:32:27.030 --> 00:32:33.830
如果没有，则使用该zip文件

00:32:29.640 --> 00:32:37.650
已发布到下载目录

00:32:33.830 --> 00:32:38.310
这些步骤中的哪一个仍然是

00:32:37.650 --> 00:32:43.020
必要

00:32:38.310 --> 00:32:44.910
啊，你一定要有TSgt 

00:32:43.020 --> 00:32:48.600
是的，这是主要的

00:32:44.910 --> 00:32:52.770
配置文件，所以是TTS jte 

00:32:48.600 --> 00:32:53.520
例如，我们需要将JSON作为API 

00:32:52.770 --> 00:33:00.150
预建

00:32:53.520 --> 00:33:03.060
 API集成是的，您需要很多人

00:33:00.150 --> 00:33:06.360
需要再次有玻璃筋膜

00:33:03.060 --> 00:33:13.620
你会在TC k周围这样吗

00:33:06.360 --> 00:33:15.930
您可能需要任何您需要的

00:33:13.620 --> 00:33:18.210
构建您需要的API的工作

00:33:15.930 --> 00:33:22.200
可能会收到您需要的GlassFish的工作

00:33:18.210 --> 00:33:26.700
应将SGD文件存根的工作

00:33:22.200 --> 00:33:30.780
而你需要围绕bck的工作

00:33:26.700 --> 00:33:32.820
所以你需要工作是那四个

00:33:30.780 --> 00:33:34.410
您在页面上拥有的仅仅是因为

00:33:32.820 --> 00:33:35.850
因为你没有使用确切的词

00:33:34.410 --> 00:33:37.770
写的，我不知道是什么

00:33:35.850 --> 00:33:43.070
他们确实就是那样

00:33:37.770 --> 00:33:43.070
问题是那四个是正确的

00:33:43.510 --> 00:33:52.780
不，实际上不，这个是哦，你知道

00:33:51.580 --> 00:33:56.530
是的，你是对的

00:33:52.780 --> 00:33:58.960
嗯是有用的，所以每个项目

00:33:56.530 --> 00:34:04.770
需要那些400或类似的东西

00:33:58.960 --> 00:34:09.340
四个正确的，所以基本上每个

00:34:04.770 --> 00:34:12.130
您拥有所有目录

00:34:09.340 --> 00:34:14.080
 tsjt e的口味

00:34:12.130 --> 00:34:17.860
具有独立规格的不同规格

00:34:14.080 --> 00:34:20.649
 tcks例如ejv没有

00:34:17.860 --> 00:34:22.120
独立的TCGA，该目录在哪里

00:34:20.649 --> 00:34:29.340
你能再指出我一次吗

00:34:22.120 --> 00:34:33.940
不是CTS目录，是的-基本上

00:34:29.340 --> 00:34:38.679
它在D CK文件夹中安装

00:34:33.940 --> 00:34:43.210
技术和bin有sgt文件，所以

00:34:38.679 --> 00:34:46.600
在安装下有多少个是

00:34:43.210 --> 00:34:49.360
安装每个的Tugg文件

00:34:46.600 --> 00:34:52.870
发射技术，就是这样

00:34:49.360 --> 00:34:56.370
詹金斯的工作是多少套

00:34:52.870 --> 00:35:03.640
詹金斯（Jenkins）工作，是这个数字的四倍

00:34:56.370 --> 00:35:06.250
是的，所以我将其插入

00:35:03.640 --> 00:35:08.980
有一些独立的TZ盒

00:35:06.250 --> 00:35:11.260
没有在这里列出，所以如果他们添加那些

00:35:08.980 --> 00:35:12.460
如果您想得出一个总数

00:35:11.260 --> 00:35:15.160
是的

00:35:12.460 --> 00:35:20.730
这是目标，哪些不是

00:35:15.160 --> 00:35:22.810
列出的很好

00:35:20.730 --> 00:35:29.470
任何没有独立的东西

00:35:22.810 --> 00:35:30.850
测试EJB，我认为还有其他一些

00:35:29.470 --> 00:35:33.580
对不起，我没有这份清单

00:35:30.850 --> 00:35:36.900
从我头顶上也有斑点

00:35:33.580 --> 00:35:39.910
像CDI的Java男性一样

00:35:36.900 --> 00:35:42.190
从这个集合中提取是

00:35:39.910 --> 00:35:46.300
他还必须进行验证

00:35:42.190 --> 00:35:49.090
 IBM关于这一点，另一个

00:35:46.300 --> 00:35:54.070
从Bob Lee那里注入了我们有

00:35:49.090 --> 00:35:56.680
那个TCK，我们需要

00:35:54.070 --> 00:36:00.220
在某种程度上，那不是

00:35:56.680 --> 00:36:02.200
此刻打雷我们，是的

00:36:00.220 --> 00:36:04.780
但是我不需要的是完整的

00:36:02.200 --> 00:36:06.099
实施，但这不是

00:36:04.780 --> 00:36:08.740
不必要

00:36:06.099 --> 00:36:11.440
运行，所以我们不释放它

00:36:08.740 --> 00:36:13.720
 API jar，我们不会发布该TCK 

00:36:11.440 --> 00:36:15.690
或我们没有任何规范工作

00:36:13.720 --> 00:36:17.220
是的

00:36:15.690 --> 00:36:19.510
 [音乐] 

00:36:17.220 --> 00:36:25.089
规范项目中没有

00:36:19.510 --> 00:36:28.720
公正地做到这一点

00:36:25.089 --> 00:36:31.930
要在TCK工作中说，他逃了出来

00:36:28.720 --> 00:36:34.720
我们确实有一份工作， 

00:36:31.930 --> 00:36:40.230
运行它运行所有他们

00:36:34.720 --> 00:36:40.230
只是一个外部开发的PC机箱

00:36:44.040 --> 00:36:53.050
好吧，所以如果我们产生一个假象， 

00:36:51.250 --> 00:36:56.020
例如CDI是否要生产

00:36:53.050 --> 00:36:58.690
当时在雅加达之下的文物

00:36:56.020 --> 00:37:00.970
应该测试一下，他们会测试

00:36:58.690 --> 00:37:03.400
大概他们会测试

00:37:00.970 --> 00:37:07.030
经过测试，你知道

00:37:03.400 --> 00:37:09.359
标准最初是用um还是

00:37:07.030 --> 00:37:12.970
可以针对玻璃盘构建进行测试

00:37:09.359 --> 00:37:16.380
因为我相信在胸部的某个地方

00:37:12.970 --> 00:37:22.630
我有一个叫做CDI的工作

00:37:16.380 --> 00:37:24.010
 Stevie提醒我，我不能

00:37:22.630 --> 00:37:26.140
无论如何记得对不起这个名字

00:37:24.010 --> 00:37:30.700
士兵显然是我们有一份cgi工作

00:37:26.140 --> 00:37:35.079
那里有媒体敏捷性，让我让我添加到

00:37:30.700 --> 00:37:39.069
在Alinea，所以实际上有22 

00:37:35.079 --> 00:37:42.160
我们从这个雅加达ATC建立的tcks 

00:37:39.069 --> 00:37:47.559
小心我除了我们有恐怖

00:37:42.160 --> 00:37:51.940
我是BB，是随身携带PC机箱

00:37:47.559 --> 00:37:54.640
我们有Java男性JSF和调试

00:37:51.940 --> 00:37:57.309
支撑在外面的电子琴盒

00:37:54.640 --> 00:37:59.859
这个特殊的回购，但我们正在建立

00:37:57.309 --> 00:38:03.869
它并生成TC k按钮

00:37:59.859 --> 00:38:03.869
从位置为日食供电

00:38:11.160 --> 00:38:16.690
好的，这听起来很有帮助

00:38:14.400 --> 00:38:18.430
所以在没有

00:38:16.690 --> 00:38:22.120
独立的TZ机壳，例如

00:38:18.430 --> 00:38:24.820
 EJB，您知道每个人过得如何

00:38:22.120 --> 00:38:28.230
但是那些测试通过

00:38:24.820 --> 00:38:32.320
选择比任何先决条件

00:38:28.230 --> 00:38:34.950
 CVS的子集或将其覆盖

00:38:32.320 --> 00:38:37.480
您，当您如此看CTS时

00:38:34.950 --> 00:38:41.280
测试Runner，您会看到一大堆

00:38:37.480 --> 00:38:44.980
例如，与EJB相关的子集测试

00:38:41.280 --> 00:38:49.630
是的，只是想知道通过蚂蚁

00:38:44.980 --> 00:38:53.140
设置你好吗我忘记了因为

00:38:49.630 --> 00:38:56.590
大约一个星期，我们记录了一下

00:38:53.140 --> 00:38:58.360
显然我们期望您进行哪些测试

00:38:56.590 --> 00:39:00.460
知道签名测试有一个漂亮的

00:38:58.360 --> 00:39:02.170
具体的名字，我忘了

00:39:00.460 --> 00:39:04.650
因为已经有一段时间了

00:39:02.170 --> 00:39:07.960
我学会了他们自己看护

00:39:04.650 --> 00:39:13.150
看起来像什么，我们会怎样

00:39:07.960 --> 00:39:15.880
必须在工作中建立我们有一个

00:39:13.150 --> 00:39:18.250
 TCK没有工作的示例工作

00:39:15.880 --> 00:39:22.090
独立的，我们将有一个示例工作

00:39:18.250 --> 00:39:28.510
我们需要为TCK做的

00:39:22.090 --> 00:39:30.910
不是独立的，所以我问了几个

00:39:28.510 --> 00:39:33.340
问题是他确切记录了什么

00:39:30.910 --> 00:39:35.650
有必要运行认证egb我

00:39:33.340 --> 00:39:37.360
不知道我没看过

00:39:35.650 --> 00:39:39.970
当我们

00:39:37.360 --> 00:39:41.410
发布或当我们有资格

00:39:39.970 --> 00:39:42.970
 GlassFish大楼，我们只负责整个运营

00:39:41.410 --> 00:39:45.790
事情，等你知道，我们正在努力

00:39:42.970 --> 00:39:50.680
直到我们通过所有测试，然后

00:39:45.790 --> 00:39:54.850
我很容易跑，我不得不推迟

00:39:50.680 --> 00:39:58.200
到EJB团队或TC 

00:39:54.850 --> 00:40:02.590
如果我们想来找人

00:39:58.200 --> 00:40:07.870
建议要运行的CTS测试的子集

00:40:02.590 --> 00:40:08.680
对不起，我已经很清楚了，但是

00:40:07.870 --> 00:40:11.290
我只是好奇而已

00:40:08.680 --> 00:40:14.590
所以我忘记了签名测试

00:40:11.290 --> 00:40:16.390
在EJB集下的EJB下

00:40:14.590 --> 00:40:17.730
包装或签名测试在顶部

00:40:16.390 --> 00:40:22.330
水平

00:40:17.730 --> 00:40:23.260
是的，他们是在统一之下

00:40:22.330 --> 00:40:28.380
夹

00:40:23.260 --> 00:40:29.530
你保持你的杰西是的是瑞吉没事

00:40:28.380 --> 00:40:31.000
是的

00:40:29.530 --> 00:40:38.109
每个签名下的签名测试器

00:40:31.000 --> 00:40:42.820
技术好吗我们有

00:40:38.109 --> 00:40:44.560
我想如果你把我的屏幕做成这个

00:40:42.820 --> 00:40:47.500
好吧，对不起，我想我做错了

00:40:44.560 --> 00:40:50.170
是的，所以我们需要运行两个

00:40:47.500 --> 00:40:57.160
我们需要基本运行的测试集

00:40:50.170 --> 00:40:59.680
 TS测试DJ的通讯没有签名箱

00:40:57.160 --> 00:41:03.310
 EJB foregin是的

00:40:59.680 --> 00:41:05.380
当我们进行测试时，我们将全部运行

00:41:03.310 --> 00:41:07.750
 HIV文件夹下的测试，他是

00:41:05.380 --> 00:41:11.080
除了节拍，选择测试

00:41:07.750 --> 00:41:23.040
在签名触摸文件夹和EJB下

00:41:11.080 --> 00:41:26.410
这就是我们运行所有测试的方式，因此

00:41:23.040 --> 00:41:29.680
继续吧，我很好，就好像我可以

00:41:26.410 --> 00:41:34.380
分享我可以向您展示子集测试

00:41:29.680 --> 00:41:34.380
在他们那里开玩笑

00:41:35.010 --> 00:41:49.540
当然可以，谢谢

00:41:44.430 --> 00:41:51.430
是的，好的，这是你能看到我的吗

00:41:49.540 --> 00:41:54.329
屏幕

00:41:51.430 --> 00:41:54.329
是

00:41:54.870 --> 00:41:58.680
我想我会从头顶上掉下来

00:41:56.940 --> 00:42:02.550
说我们将全部记录下来

00:41:58.680 --> 00:42:06.150
 EJB所有这些测试

00:42:02.550 --> 00:42:09.090
从您开始jbd并正确运行，然后

00:42:06.150 --> 00:42:11.850
然后，我们有这个学生

00:42:09.090 --> 00:42:16.020
实际上是一个完全参数化的测试

00:42:11.850 --> 00:42:18.630
跑步者，您进行测试

00:42:16.020 --> 00:42:23.100
可以执行GlassFish 

00:42:18.630 --> 00:42:25.530
如果您将其构建在

00:42:23.100 --> 00:42:27.480
詹金斯系统你可以指出这一点

00:42:25.530 --> 00:42:30.420
到詹金斯去的那个地方

00:42:27.480 --> 00:42:34.200
工件已创建，然后运行

00:42:30.420 --> 00:42:37.070
这些测试并选择您可以选择

00:42:34.200 --> 00:42:41.120
您要运行的子集测试集

00:42:37.070 --> 00:42:41.120
默认情况下，它将全部选中

00:42:41.320 --> 00:42:45.960
所以你点击所有这些，然后你就

00:42:43.300 --> 00:42:48.420
说建筑参数

00:42:45.960 --> 00:42:50.550
唯一需要的是

00:42:48.420 --> 00:42:54.140
唯一需要的是你知道

00:42:50.550 --> 00:42:54.140
您完整的GlassFish捆绑包

00:43:04.280 --> 00:43:10.220
是的，我的朋友，是的，我只是继续

00:43:07.440 --> 00:43:15.150
这与工作有何关系

00:43:10.220 --> 00:43:17.040
颜秀秀所以这不是

00:43:15.150 --> 00:43:21.330
定制了Yan展示我们的内容

00:43:17.040 --> 00:43:22.590
定制的构建将继续

00:43:21.330 --> 00:43:25.740
前进并参与

00:43:22.590 --> 00:43:31.680
投影这些测试只是从

00:43:25.740 --> 00:43:35.849
建立的提升

00:43:31.680 --> 00:43:38.520
升级的PCK罐子或zip文件对不起

00:43:35.849 --> 00:43:42.650
然后他们在非常

00:43:38.520 --> 00:43:42.650
规定的设置我

00:43:42.730 --> 00:43:48.070
没有我不反对

00:43:46.270 --> 00:43:51.570
这些对不起我在看什么

00:43:48.070 --> 00:43:54.670
现在是CTS测试套件亚军

00:43:51.570 --> 00:43:58.020
我在那里我不认为有任何

00:43:54.670 --> 00:43:58.020
原因项目不能使用它

00:43:58.619 --> 00:44:04.950
我们也有与此类似的工作

00:44:01.440 --> 00:44:05.700
可以运行，可以独立运行

00:44:04.950 --> 00:44:08.270
 cks 

00:44:05.700 --> 00:44:11.670
但这又需要一条玻璃鱼

00:44:08.270 --> 00:44:14.880
先生，您知道日食的问题

00:44:11.670 --> 00:44:17.099
权限我想开个玩笑

00:44:14.880 --> 00:44:20.340
在某些方面使其成为您的一部分

00:44:17.099 --> 00:44:24.000
从某个项目启动的管道

00:44:20.340 --> 00:44:25.800
运行它的用户需要

00:44:24.000 --> 00:44:32.010
访问是

00:44:25.800 --> 00:44:34.109
 TCK正确，是，不承诺

00:44:32.010 --> 00:44:36.750
证书权利正确是正确的

00:44:34.109 --> 00:44:37.980
所以你可以克隆这个

00:44:36.750 --> 00:44:40.920
我们试图避免不得不

00:44:37.980 --> 00:44:43.170
复制此职位担任此职位这些职位

00:44:40.920 --> 00:44:47.700
或TCK测试选手都可以

00:44:43.170 --> 00:44:50.970
他们我认为John和ds1 B团队

00:44:47.700 --> 00:44:53.250
他们开始了，我想他们开始了

00:44:50.970 --> 00:44:54.690
这个，但我不应该为他们说话， 

00:44:53.250 --> 00:44:57.650
然后他们只是自定义它并摆脱了

00:44:54.690 --> 00:44:57.650
所有可以帮助我的事情

00:45:00.839 --> 00:45:09.579
我个人认为长期长期

00:45:06.900 --> 00:45:13.089
具有定制工作的结果是

00:45:09.579 --> 00:45:14.829
如果我们去的话，这绝对是必经之路

00:45:13.089 --> 00:45:17.920
达到我们只需要一些的地方

00:45:14.829 --> 00:45:22.030
完成测试的项目

00:45:17.920 --> 00:45:26.050
结果或项目是否只说II 

00:45:22.030 --> 00:45:29.440
如果没有，你知道我不需要

00:45:26.050 --> 00:45:32.740
可以运行以创建自定义作业

00:45:29.440 --> 00:45:35.050
我们可以安排让您知道

00:45:32.740 --> 00:45:40.000
只需复制并粘贴克隆作业

00:45:35.050 --> 00:45:42.640
在那个子项目中，但是

00:45:40.000 --> 00:45:46.260
否则我们可以安排进行这些测试

00:45:42.640 --> 00:45:49.830
运行，然后我们可以将结果存档

00:45:46.260 --> 00:45:52.170
所以每次运行测试都会刮胡子

00:45:49.830 --> 00:45:57.230
所有的测试结果和这些

00:45:52.170 --> 00:46:00.119
可以将SDM存档

00:45:57.230 --> 00:46:02.180
将您认识的犯罪嫌疑人提交给

00:46:00.119 --> 00:46:11.730
例如规格委员会

00:46:02.180 --> 00:46:13.850
嗯嗯还有其他吗

00:46:11.730 --> 00:46:13.850
问题

00:46:18.340 --> 00:46:24.770
好的，这意味着我名列前茅

00:46:23.120 --> 00:46:26.830
报告

00:46:24.770 --> 00:46:26.830
您

