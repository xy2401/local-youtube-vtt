WEBVTT
Kind: captions
Language: zh-Hans

00:00:04.589 --> 00:00:07.589
是的

00:00:09.139 --> 00:00:14.900
谢谢你，亲爱的我会用英语

00:00:13.610 --> 00:00:17.119
因为有些人不

00:00:14.900 --> 00:00:19.849
了解德语和第一节课

00:00:17.119 --> 00:00:22.250
已经是英文了，你就是

00:00:19.849 --> 00:00:24.860
例外，所以我从中学到的

00:00:22.250 --> 00:00:27.079
五分钟是德国电影院

00:00:24.860 --> 00:00:30.050
太糟糕了，现在我们在电影院里有了Java 

00:00:27.079 --> 00:00:32.870
 Java做得很好， 

00:00:30.050 --> 00:00:35.710
杂志是免费的，所以Java 

00:00:32.870 --> 00:00:38.270
支持德国电影院，这是一个

00:00:35.710 --> 00:00:41.120
我会说正确的高质量内容

00:00:38.270 --> 00:00:42.350
敏捷，他是否正在采取一切措施

00:00:41.120 --> 00:00:45.350
是的，这将成为主题演讲

00:00:42.350 --> 00:00:47.810
昨天我在飞机上

00:00:45.350 --> 00:00:49.040
计划整天整顿，但是

00:00:47.810 --> 00:00:50.540
这不是我的主题演讲

00:00:49.040 --> 00:00:52.820
弄些他们要告诉你的东西

00:00:50.540 --> 00:00:54.290
它实际上甚至可以工作，但是我准备了

00:00:52.820 --> 00:00:57.050
一些幻灯片并将其翻译为

00:00:54.290 --> 00:00:59.510
现在是英文，所以关于我

00:00:57.050 --> 00:01:02.030
从1995年开始使用Java的自由职业者

00:00:59.510 --> 00:01:04.189
奇怪的是我真的很喜欢

00:01:02.030 --> 00:01:06.740
它仍然，即使您知道，我也不会尝试

00:01:04.189 --> 00:01:10.640
成为经理，无论我喜欢什么

00:01:06.740 --> 00:01:12.770
黑客，所以我真的很喜欢，我

00:01:10.640 --> 00:01:14.270
对Scala代码不是很感兴趣

00:01:12.770 --> 00:01:16.790
 Linden或其他使我执行JavaScript的人

00:01:14.270 --> 00:01:18.620
 Java我很高兴，所以可能

00:01:16.790 --> 00:01:19.340
哪辆车会让我更快乐，但我

00:01:18.620 --> 00:01:22.190
不要这样

00:01:19.340 --> 00:01:24.440
所以我没有太多时间

00:01:22.190 --> 00:01:27.260
编译这是正确的问题，所以嗯

00:01:24.440 --> 00:01:29.750
我所做的是最有趣的部分

00:01:27.260 --> 00:01:31.820
是M的斧头，这是播客，为什么

00:01:29.750 --> 00:01:33.500
这样做是因为通常我没有

00:01:31.820 --> 00:01:35.600
在会议上与之交谈的时间

00:01:33.500 --> 00:01:37.610
有趣的人，所以我所做的就是我

00:01:35.600 --> 00:01:39.799
开始像播客， 

00:01:37.610 --> 00:01:41.780
像一个小时的谈话，我很好奇

00:01:39.799 --> 00:01:43.970
关于我采访艾米丽的微观概况

00:01:41.780 --> 00:01:46.430
对，所以我们做了一个播客，所以

00:01:43.970 --> 00:01:49.180
她就像微调大师

00:01:46.430 --> 00:01:51.650
并问了所有我感兴趣的问题

00:01:49.180 --> 00:01:54.080
今天最有趣的播客

00:01:51.650 --> 00:01:55.939
迈克还在建造他来自的科瓦奇

00:01:54.080 --> 00:01:58.369
 Eclipse Foundation提出了难题

00:01:55.939 --> 00:02:01.070
关于她的心对我很有趣

00:01:58.369 --> 00:02:04.759
有关雅加达a e4j和所有的问题

00:02:01.070 --> 00:02:06.020
从去年到现在的混乱

00:02:04.759 --> 00:02:09.319
了解一切，我尝试

00:02:06.020 --> 00:02:11.560
也把它翻译给你

00:02:09.319 --> 00:02:15.379
关于豁免机场的讲习班和

00:02:11.560 --> 00:02:16.920
这是我的，所以这就像乌塔卡蒙德

00:02:15.379 --> 00:02:19.590
第二

00:02:16.920 --> 00:02:22.920
你知道你看到的是什么

00:02:19.590 --> 00:02:26.280
喜欢没有黑魔法，但为什么我现在

00:02:22.920 --> 00:02:28.260
仍然说我希望局域网

00:02:26.280 --> 00:02:30.989
从来没有我的伟大，所以我没有

00:02:28.260 --> 00:02:32.550
其实想学所有的幻想

00:02:30.989 --> 00:02:35.100
我刚开始的框架

00:02:32.550 --> 00:02:38.160
坚持中间和

00:02:35.100 --> 00:02:40.920
有趣的部分是剩下的80％ 

00:02:38.160 --> 00:02:43.410
左右中间的左右

00:02:40.920 --> 00:02:45.569
在过去的20年中去世，所以我没有

00:02:43.410 --> 00:02:48.060
必须统治，一切每两个

00:02:45.569 --> 00:02:50.489
天，这可能就是为什么我仍然

00:02:48.060 --> 00:02:53.400
享受那个，现在同样发生

00:02:50.489 --> 00:02:55.260
网络，所以在网络中，我也一样

00:02:53.400 --> 00:02:59.700
尝试删除框架并开心

00:02:55.260 --> 00:03:01.440
所以现在开始使用Java 7l 

00:02:59.700 --> 00:03:03.150
任何问题只是问我应该是

00:03:01.440 --> 00:03:04.920
互动的，所以这是第一张幻灯片

00:03:03.150 --> 00:03:06.330
我必须翻译的内容

00:03:04.920 --> 00:03:09.330
从德语到英语，这就是

00:03:06.330 --> 00:03:12.420
第一个Java是七个或八个，最后一个

00:03:09.330 --> 00:03:15.870
年Java 8诞生了，我有很多

00:03:12.420 --> 00:03:18.239
两年面试的很多问题

00:03:15.870 --> 00:03:20.790
甚至三点之前我有什么感觉

00:03:18.239 --> 00:03:23.160
 Java迟到了，我说好吧

00:03:20.790 --> 00:03:25.230
必须承认我完全不同

00:03:23.160 --> 00:03:27.989
项目中的问题不像人

00:03:25.230 --> 00:03:30.090
缺少新的api更像你

00:03:27.989 --> 00:03:33.209
知道他们夸大了现有的

00:03:30.090 --> 00:03:35.549
 api，所以我在

00:03:33.209 --> 00:03:37.950
下届会议有关，但似乎

00:03:35.549 --> 00:03:39.510
我就像你知道保险公司

00:03:37.950 --> 00:03:41.340
对销售没有兴趣

00:03:39.510 --> 00:03:44.609
保险，更喜欢映射

00:03:41.340 --> 00:03:46.440
层或数据传输对象或数据

00:03:44.609 --> 00:03:48.570
访问对象或它们可以做什么

00:03:46.440 --> 00:03:50.090
只是不要触碰业务逻辑

00:03:48.570 --> 00:03:54.180
这是我项目中的问题

00:03:50.090 --> 00:03:55.709
对于市场营销Java e8很棒，但是

00:03:54.180 --> 00:03:57.299
并不是说我们会加快你的速度

00:03:55.709 --> 00:03:59.760
所有项目减少30％ 

00:03:57.299 --> 00:04:02.489
所以这是我的个人观点

00:03:59.760 --> 00:04:04.140
不是那么流行，但是Java 8出现了

00:04:02.489 --> 00:04:06.600
他们真的很高兴，所以我

00:04:04.140 --> 00:04:08.700
并在同一级别上

00:04:06.600 --> 00:04:12.480
大约在同一时间有Java 

00:04:08.700 --> 00:04:17.820
去年十月

00:04:12.480 --> 00:04:21.959
在Java 7左右，我接到了一个电话

00:04:17.820 --> 00:04:24.210
我认为那是帕亚拉人

00:04:21.959 --> 00:04:26.310
和来自Red Hat的人一起，他们问

00:04:24.210 --> 00:04:29.430
我们应该怎么做的活动

00:04:26.310 --> 00:04:31.620
甲骨文，所以我们可以尝试做

00:04:29.430 --> 00:04:33.300
并称其为微型个人资料， 

00:04:31.620 --> 00:04:35.520
我会说好的，我们可以做点什么，但是

00:04:33.300 --> 00:04:41.699
实际上Java 7的工作原理是

00:04:35.520 --> 00:04:43.650
我们可以移动得更快一些，所以我是我的我

00:04:41.699 --> 00:04:46.590
关于微轮廓的意见在

00:04:43.650 --> 00:04:49.020
首先我会说1至2年

00:04:46.590 --> 00:04:51.690
多余的东西只是为了营销所以

00:04:49.020 --> 00:04:54.630
如果有人想玩没有2 

00:04:51.690 --> 00:04:56.880
使罐子减少，并为

00:04:54.630 --> 00:04:59.160
应用服务器开始生产

00:04:56.880 --> 00:05:01.560
要减少千字节的内存

00:04:59.160 --> 00:05:05.070
微型个人资料，然后播放一点

00:05:01.560 --> 00:05:08.039
技术带来更多的好处

00:05:05.070 --> 00:05:10.440
半年前，我完全错过了

00:05:08.039 --> 00:05:12.360
并没有认出丹尼斯

00:05:10.440 --> 00:05:14.210
大多数应用服务器库存

00:05:12.360 --> 00:05:18.120
我们已经拥有的应用服务器

00:05:14.210 --> 00:05:20.910
同时支持Java 8和Micro Profile 

00:05:18.120 --> 00:05:23.550
这完全改变了我的看法

00:05:20.910 --> 00:05:25.349
因为这样我才能真正使用微型

00:05:23.550 --> 00:05:27.180
现在在大多数应用程序中配置文件

00:05:25.349 --> 00:05:29.250
服务器无需更改任何内容， 

00:05:27.180 --> 00:05:31.050
这改变了我的一切

00:05:29.250 --> 00:05:33.720
就像在项目中我不喜欢进来

00:05:31.050 --> 00:05:35.460
事实上看起来删除了我们介绍的所有内容

00:05:33.720 --> 00:05:37.500
一个新的框架，一切将要

00:05:35.460 --> 00:05:40.710
会更好，半年后

00:05:37.500 --> 00:05:42.000
你知道而不是要求

00:05:40.710 --> 00:05:43.530
然后反应框架

00:05:42.000 --> 00:05:44.910
框架或您得到的任何框架

00:05:43.530 --> 00:05:47.729
在两年内

00:05:44.910 --> 00:05:49.410
总是发生，你总是会找到一个

00:05:47.729 --> 00:05:53.849
不关注业务逻辑的原因

00:05:49.410 --> 00:05:56.190
所以现在和播客中

00:05:53.849 --> 00:05:58.349
艾米莉（Emily）还有什么有趣的事

00:05:56.190 --> 00:06:01.080
一年中有四个版本

00:05:58.349 --> 00:06:03.330
令人难以置信，所以我们得到了四个阅读版本

00:06:01.080 --> 00:06:06.840
三个Dedede Cadence的速度非常快

00:06:03.330 --> 00:06:08.310
他们在这方面非常务实

00:06:06.840 --> 00:06:11.880
同一时间或同一时间

00:06:08.310 --> 00:06:17.039
有点长才过了一年

00:06:11.880 --> 00:06:18.810
那是2017年10月我明白了

00:06:17.039 --> 00:06:22.740
在Java之前一个命令H另一个

00:06:18.810 --> 00:06:23.820
就像fo J出了甲骨文一样

00:06:22.740 --> 00:06:25.190
开源

00:06:23.820 --> 00:06:27.590
 Java EE 

00:06:25.190 --> 00:06:30.170
并像Evo Jade那样称呼他的前詹姆斯

00:06:27.590 --> 00:06:32.930
他们疯了，为什么，因为在我之前

00:06:30.170 --> 00:06:36.230
做了一些代码审查，这是

00:06:32.930 --> 00:06:38.210
相同的故事log4j简单的log4j但没有

00:06:36.230 --> 00:06:40.250
只是记录业务逻辑

00:06:38.210 --> 00:06:41.750
配置缓存和映射以及

00:06:40.250 --> 00:06:44.510
一类这样做的东西是

00:06:41.750 --> 00:06:47.750
我很好，然后Oracle发出MIDI 

00:06:44.510 --> 00:06:50.390
为玉又为J只是愚蠢的名字

00:06:47.750 --> 00:06:53.330
我讨厌它，所以我将J SL替换为J in 

00:06:50.390 --> 00:06:55.850
 e fo j和结果是什么evo J 

00:06:53.330 --> 00:06:58.640
名称真的根本没有关系， 

00:06:55.850 --> 00:07:00.590
这是我不清楚的

00:06:58.640 --> 00:07:03.200
所有，也根本不清楚

00:07:00.590 --> 00:07:05.390
蚀之所以运作，是因为我没有

00:07:03.200 --> 00:07:06.290
喜欢它的原因Eclipse IDE是我为什么

00:07:05.390 --> 00:07:08.240
不喜欢那样

00:07:06.290 --> 00:07:10.370
是的，因为你去的地方都一样

00:07:08.240 --> 00:07:12.860
到该页面，您将获得50个ID，而您

00:07:10.370 --> 00:07:14.720
实际上只想创建一个

00:07:12.860 --> 00:07:16.220
小型Java项目，您会问你

00:07:14.720 --> 00:07:18.260
您想要一个剪辑吗

00:07:16.220 --> 00:07:20.960
适用于测试人员的Model S还是我不知道

00:07:18.260 --> 00:07:22.670
炊具或任何天文学家

00:07:20.960 --> 00:07:26.300
据我所知，我会带一些

00:07:22.670 --> 00:07:28.700
代码，现在这就是

00:07:26.300 --> 00:07:30.800
问迈克，就像我不喜欢

00:07:28.700 --> 00:07:32.960
你知道最终会像

00:07:30.800 --> 00:07:35.210
蚀在哪里，如果你想

00:07:32.960 --> 00:07:37.660
我不知道的个人资料

00:07:35.210 --> 00:07:40.010
少上三堂课

00:07:37.660 --> 00:07:41.960
 WebSocket我又得到了五个类

00:07:40.010 --> 00:07:44.300
你知道两分钱是安全的

00:07:41.960 --> 00:07:48.140
生产，因为我节省了一半的RM 

00:07:44.300 --> 00:07:50.120
记忆和问题至今如何

00:07:48.140 --> 00:07:52.970
原来这个Evo J没关系

00:07:50.120 --> 00:07:55.400
就像所有容器的名称

00:07:52.970 --> 00:07:57.590
项目的实施与否

00:07:55.400 --> 00:08:00.050
有人在谈论福伊和诺亚

00:07:57.590 --> 00:08:01.730
会在源代码中看到J 

00:08:00.050 --> 00:08:02.870
一件好事，问题是什么是

00:08:01.730 --> 00:08:05.930
雅加达EE 

00:08:02.870 --> 00:08:07.280
这个雅加达就是Eclipse 

00:08:05.930 --> 00:08:10.070
没有，这是我的理解

00:08:07.280 --> 00:08:12.919
 eclipse ID上有e4j，但是有

00:08:10.070 --> 00:08:16.040
没有雅加达账户，做什么了

00:08:12.919 --> 00:08:18.440
雅加达他就像品牌一样

00:08:16.040 --> 00:08:22.070
独特也独特告诉我，这

00:08:18.440 --> 00:08:26.900
就像雅加达的JCP和

00:08:22.070 --> 00:08:29.419
人与佛吉的the废和

00:08:26.900 --> 00:08:32.419
雅加达可能会有所不同，所以我们

00:08:29.419 --> 00:08:34.010
可能只有50个版本的e4j 

00:08:32.419 --> 00:08:35.649
雅加达的一个版本是

00:08:34.010 --> 00:08:37.809
我绝对不清楚

00:08:35.649 --> 00:08:40.089
所以下一个问题很好，但是

00:08:37.809 --> 00:08:42.430
假设我有一个好主意，而我

00:08:40.089 --> 00:08:44.050
想开始我的新事，你知道我的

00:08:42.430 --> 00:08:47.279
我想要的新的日志记录框架

00:08:44.050 --> 00:08:50.439
我有J的测井光束

00:08:47.279 --> 00:08:53.230
 e4 j如何做到这一点，他们说还可以

00:08:50.439 --> 00:08:55.899
这实际上很容易

00:08:53.230 --> 00:08:58.269
开始一个新的项目

00:08:55.899 --> 00:09:00.550
 pmc，如果足够好的话

00:08:58.269 --> 00:09:02.679
以及通常如何使用

00:09:00.550 --> 00:09:04.509
因为J是您必须成为提交者

00:09:02.679 --> 00:09:06.100
如果您是提交者，这就是我们的

00:09:04.509 --> 00:09:08.170
方法，你必须贡献

00:09:06.100 --> 00:09:09.519
一个时间点，其他提交者

00:09:08.170 --> 00:09:11.019
会说让你的便宜

00:09:09.519 --> 00:09:12.759
委员会，我不必审查更改

00:09:11.019 --> 00:09:15.160
然后您成为提交者，如果

00:09:12.759 --> 00:09:16.839
您是提交者，您有投票权， 

00:09:15.160 --> 00:09:18.429
您可以投票反对

00:09:16.839 --> 00:09:20.829
其他人，这就是这样

00:09:18.429 --> 00:09:24.069
透明雅加达前夕的工作方式以及

00:09:20.829 --> 00:09:26.019
这对我来说是完美的，为什么因为我

00:09:24.069 --> 00:09:28.929
真正关心的是整个雅加达

00:09:26.019 --> 00:09:31.300
你可以按照我的邮件列表我的邮件

00:09:28.929 --> 00:09:32.740
在雅加达社区，因为

00:09:31.300 --> 00:09:34.420
邮寄，我学到的是

00:09:32.740 --> 00:09:36.490
邮件列表没有任何内容， 

00:09:34.420 --> 00:09:38.740
有话要说，所以他们可以做到

00:09:36.490 --> 00:09:40.179
梦见他们所做的一切

00:09:38.740 --> 00:09:42.850
不像平常那​​样提交

00:09:40.179 --> 00:09:45.100
很好的原因为何，因为从第一天开始

00:09:42.850 --> 00:09:47.829
他们尝试介绍更多个人资料

00:09:45.100 --> 00:09:50.290
我真的很讨厌它，所以我喜欢

00:09:47.829 --> 00:09:53.259
JAVA人吃得最多还是雅加达或微型

00:09:50.290 --> 00:09:55.420
配置文件，你得到一件事，一个依赖

00:09:53.259 --> 00:09:57.189
你开始你的项目，所以我不

00:09:55.420 --> 00:09:59.139
就像在

00:09:57.189 --> 00:10:00.309
开始哪些微资料可能是

00:09:59.139 --> 00:10:01.809
对我的东西感兴趣

00:10:00.309 --> 00:10:05.050
我想一次拥有一切

00:10:01.809 --> 00:10:07.720
并快速开始黑客攻击，看来

00:10:05.050 --> 00:10:10.059
希望它会保持不变，因为

00:10:07.720 --> 00:10:12.100
整个雅加达ii配置文件将不得不

00:10:10.059 --> 00:10:15.429
由雅加达委员会决定

00:10:12.100 --> 00:10:17.019
因此，因此不是

00:10:15.429 --> 00:10:19.360
就像有人会想到

00:10:17.019 --> 00:10:21.759
邮件列表，我们会获得新的配置文件

00:10:19.360 --> 00:10:22.929
所以我们很安全，所以它将以某种方式

00:10:21.759 --> 00:10:25.269
雅加达雅加达

00:10:22.929 --> 00:10:27.429
你可以称之为我喜欢的整体式

00:10:25.269 --> 00:10:29.470
为什么，因为我向您展示了整体性

00:10:27.429 --> 00:10:31.299
这一点在源代码和

00:10:29.470 --> 00:10:32.860
微型个人资料与您相似

00:10:31.299 --> 00:10:34.830
我现在有两个旧版本

00:10:32.860 --> 00:10:37.620
甚至两个

00:10:34.830 --> 00:10:40.200
 -OH轮胎已经支持烤箱

00:10:37.620 --> 00:10:42.360
自由思想支持-哦，还有我

00:10:40.200 --> 00:10:44.250
在生产中使用三分之一，但我不

00:10:42.360 --> 00:10:46.830
不在乎我只是想拥有

00:10:44.250 --> 00:10:48.450
我不在乎开放的API或开放的跟踪

00:10:46.830 --> 00:10:51.089
关于我想拥有

00:10:48.450 --> 00:10:54.149
我正在使用开放式API的全部或抱歉

00:10:51.089 --> 00:10:56.250
 micro Profi 201 3绝对不是

00:10:54.149 --> 00:10:58.079
有兴趣只是说错

00:10:56.250 --> 00:11:00.480
宽容但不是我不喜欢的配置

00:10:58.079 --> 00:11:02.730
照顾我必须拥有所有的原因

00:11:00.480 --> 00:11:04.980
由于速度如此微细，我们

00:11:02.730 --> 00:11:07.230
涵盖了关于什么的关系

00:11:04.980 --> 00:11:09.390
雅加达易和微个人资料我

00:11:07.230 --> 00:11:11.550
印象派雅加达二世人会

00:11:09.390 --> 00:11:14.459
喜欢整合微轮廓

00:11:11.550 --> 00:11:16.680
我会说可能不是

00:11:14.459 --> 00:11:17.760
这么聪明，因为微简介

00:11:16.680 --> 00:11:20.160
他们很快地迭代

00:11:17.760 --> 00:11:22.800
独立以及现在的样子

00:11:20.160 --> 00:11:24.510
我会说这是完美的，如果他们

00:11:22.800 --> 00:11:26.070
将融入雅加达吃他们会

00:11:24.510 --> 00:11:27.570
可能会减慢整个微观

00:11:26.070 --> 00:11:30.450
个人资料，这将是一件坏事， 

00:11:27.570 --> 00:11:32.610
现在，如果您考虑进行健康检查

00:11:30.450 --> 00:11:34.620
例如API的类很少

00:11:32.610 --> 00:11:37.769
它是由我认为由

00:11:34.620 --> 00:11:41.010
两个甚至一个人创造了这个

00:11:37.769 --> 00:11:42.720
回答问题是否存在未来

00:11:41.010 --> 00:11:44.640
企业我们有这个

00:11:42.720 --> 00:11:47.940
关键的微软所有人的方式是

00:11:44.640 --> 00:11:49.649
雅加达e ok的一部分以及如何以及如何

00:11:47.940 --> 00:11:51.620
碰巧我很好奇

00:11:49.649 --> 00:11:54.329
过程中，只有一位经理Oracle 

00:11:51.620 --> 00:11:57.180
他不再是一个可怕的甲骨文

00:11:54.329 --> 00:12:01.110
原因，但我不知道Markovic和

00:11:57.180 --> 00:12:02.520
他把迈克粉了一下，说我们想

00:12:01.110 --> 00:12:04.770
用Java做点事吗

00:12:02.520 --> 00:12:06.149
交谈，他们见了面，现在他们

00:12:04.770 --> 00:12:09.329
雅加达

00:12:06.149 --> 00:12:11.160
他们开始了evo J的名字

00:12:09.329 --> 00:12:13.050
雅加达很棒，我真的很喜欢

00:12:11.160 --> 00:12:15.240
所有其他名字都太糟糕了

00:12:13.050 --> 00:12:17.010
企业Java在这里有谁

00:12:15.240 --> 00:12:19.230
在乎，但雅加达很棒，因为我们

00:12:17.010 --> 00:12:20.880
雅加达的Apache点兽人

00:12:19.230 --> 00:12:23.459
 Java历史上有Tomcat的东西

00:12:20.880 --> 00:12:26.640
是雅加达的一部分，而Apache不

00:12:23.459 --> 00:12:28.829
捐赠了雅加达使其黯然失色

00:12:26.640 --> 00:12:31.709
比雅加达是官方的，徽标是

00:12:28.829 --> 00:12:32.940
太好了，我忘了给你看徽标，但是

00:12:31.709 --> 00:12:34.260
您拥有必须显示的徽标权利

00:12:32.940 --> 00:12:37.709
我们这看起来像帆船

00:12:34.260 --> 00:12:40.440
正确的想法和

00:12:37.709 --> 00:12:41.880
雅加达来自大卫·布列文斯（David Blevins） 

00:12:40.440 --> 00:12:44.860
来自Tomy是真的

00:12:41.880 --> 00:12:48.610
这里的想法和大卫·布列文斯·以斯帖

00:12:44.860 --> 00:12:51.730
背后打开e gb和肚子是

00:12:48.610 --> 00:12:54.030
和自由一样小

00:12:51.730 --> 00:12:56.890
应用服务器，所以现在

00:12:54.030 --> 00:12:58.780
历史如此，我将澄清

00:12:56.890 --> 00:13:00.610
那是因为我好像有很多

00:12:58.780 --> 00:13:01.120
混乱到底在发生什么

00:13:00.610 --> 00:13:03.870
是

00:13:01.120 --> 00:13:05.110
任何问题大家都清楚

00:13:03.870 --> 00:13:08.620
完善

00:13:05.110 --> 00:13:11.410
所以foj杀死了雅加达一个人的生命，所以这是

00:13:08.620 --> 00:13:12.730
重要的是我们得到释放

00:13:11.410 --> 00:13:14.530
计划到年底

00:13:12.730 --> 00:13:18.190
现在发布，问题是为什么需要

00:13:14.530 --> 00:13:19.540
这么长，因为范围更大

00:13:18.190 --> 00:13:21.130
顺便说一下，这是其中之一

00:13:19.540 --> 00:13:24.130
 Eclipse上最大的项目

00:13:21.130 --> 00:13:27.250
为什么更大，因为我做对了

00:13:24.130 --> 00:13:30.220
现在是他们创建透明的CI CD 

00:13:27.250 --> 00:13:32.260
詹金斯为每个项目准备的管道

00:13:30.220 --> 00:13:33.730
以前不存在，他们说

00:13:32.260 --> 00:13:36.220
这是我们拥有的项目的一部分

00:13:33.730 --> 00:13:38.590
透明，他们迁移了整个TCK 

00:13:36.220 --> 00:13:40.840
这不是Java的官方部分

00:13:38.590 --> 00:13:43.030
 EE发行版现已成为雅加达和

00:13:40.840 --> 00:13:45.790
这是很多工作，所以如果您有

00:13:43.030 --> 00:13:46.930
时间贡献你真的可以做我

00:13:45.790 --> 00:13:47.800
希望对您有所帮助

00:13:46.930 --> 00:13:49.480
你可以做到

00:13:47.800 --> 00:13:52.330
所以没有另一个问题是完全

00:13:49.480 --> 00:13:56.830
开放社区，他们想

00:13:52.330 --> 00:13:57.390
有一些帮助，所以提出问题后

00:13:56.830 --> 00:13:59.440
节目

00:13:57.390 --> 00:14:03.820
建立一些管道，他们很高兴

00:13:59.440 --> 00:14:05.290
所以这是行销是的，如果

00:14:03.820 --> 00:14:09.540
你想来慕尼黑

00:14:05.290 --> 00:14:13.939
是工作室，现在在这里设置

00:14:09.540 --> 00:14:16.999
 Java项目，我们称其为Jake 

00:14:13.939 --> 00:14:18.889
这就是我开始我的方式

00:14:16.999 --> 00:14:20.539
项目，因为我经常这样做

00:14:18.889 --> 00:14:23.749
说地区我不知道

00:14:20.539 --> 00:14:24.829
 vious回设置一个Java项目，所以我

00:14:23.749 --> 00:14:30.979
会告诉你这只是行家

00:14:24.829 --> 00:14:33.229
原型不能如此，您可以在其中使用它

00:14:30.979 --> 00:14:34.609
我必须在IDE中构建NetBeans 

00:14:33.229 --> 00:14:36.349
课程和设想与您的代码或

00:14:34.609 --> 00:14:38.629
随便，因为我会告诉你

00:14:36.349 --> 00:14:41.720
其他没有IDE的作品，我

00:14:38.629 --> 00:14:44.359
我通常不会开会

00:14:41.720 --> 00:14:47.629
通常通常使用一些脚本，现在

00:14:44.359 --> 00:14:51.079
称它为jquan，如果互联网是

00:14:47.629 --> 00:14:55.519
用作安装Java项目并调用

00:14:51.079 --> 00:14:57.499
它是jquan，所以现在希望该项目是

00:14:55.519 --> 00:15:01.489
将要创建它试图拉

00:14:57.499 --> 00:15:03.829
来自Maven Central的依赖关系

00:15:01.489 --> 00:15:04.999
 Apache Central Maven Central，现在我

00:15:03.829 --> 00:15:07.519
需要一个IDE 

00:15:04.999 --> 00:15:11.359
演出前有人问我我是哪个ID 

00:15:07.519 --> 00:15:13.489
我现在正在使用

00:15:11.359 --> 00:15:15.169
 NetBeans，因为我只需要Maven但我

00:15:13.489 --> 00:15:17.599
也使用越来越多的Visual Studio 

00:15:15.169 --> 00:15:19.819
代码我还是尽量避免一点

00:15:17.599 --> 00:15:22.369
蚀，我喜欢IntelliJ的问题

00:15:19.819 --> 00:15:24.559
捷径是疯狂的， 

00:15:22.369 --> 00:15:26.359
初始设置就像无法解释

00:15:24.559 --> 00:15:28.970
任何人如何设置应用程序服务器

00:15:26.359 --> 00:15:30.079
在IntelliJ中，但如果运行，它将运行，但是

00:15:28.970 --> 00:15:32.509
然后你又忘记了它

00:15:30.079 --> 00:15:34.279
确实做了and和and and人们问

00:15:32.509 --> 00:15:37.549
我可以告诉我你只是想

00:15:34.279 --> 00:15:39.919
一次部署到payara，我不能

00:15:37.549 --> 00:15:41.059
我说你，你说Java多么容易

00:15:39.919 --> 00:15:43.699
是的，他们甚至无法设置

00:15:41.059 --> 00:15:45.259
服务器再次IntelliJ我可以告诉你

00:15:43.699 --> 00:15:49.129
怎么做命令行bonatelli J是一个

00:15:45.259 --> 00:15:52.189
不同的故事好吧，现在我的意思是

00:15:49.129 --> 00:15:53.599
很简单，所以现在我切换到垃圾工作区

00:15:52.189 --> 00:15:55.939
它将希望认识到

00:15:53.599 --> 00:15:57.889
项目jquan，这也把我

00:15:55.939 --> 00:16:01.409
需要和

00:15:57.889 --> 00:16:04.349
所以这是Java时代的项目， 

00:16:01.409 --> 00:16:07.049
通常我所做的总是我所有的

00:16:04.349 --> 00:16:10.619
现在的项目不是在开玩笑

00:16:07.049 --> 00:16:13.709
一三二哦，但我会

00:16:10.619 --> 00:16:16.619
从两个哦开始，与薪pay五和我

00:16:13.709 --> 00:16:19.589
今天将使用payara我可以使用白色

00:16:16.619 --> 00:16:21.209
飞，下周我将使用开放自由

00:16:19.589 --> 00:16:23.099
对于初创公司来说，更适合

00:16:21.209 --> 00:16:24.659
开放自由，以便会议召开

00:16:23.099 --> 00:16:25.889
一个星期后，我会切换到

00:16:24.659 --> 00:16:27.689
公开地，但是问题是我没有

00:16:25.889 --> 00:16:29.069
有像会议笔记本电脑

00:16:27.689 --> 00:16:30.359
一切都由尖顶和

00:16:29.069 --> 00:16:31.829
白蝇，所以有点风险

00:16:30.359 --> 00:16:33.719
现在向您展示开放自由，因为我

00:16:31.829 --> 00:16:34.349
不知道然后尝试几个星期

00:16:33.719 --> 00:16:38.249
好的

00:16:34.349 --> 00:16:41.159
所以是的，她会告诉你打开

00:16:38.249 --> 00:16:43.529
自由，我能告诉你的是开放的

00:16:41.159 --> 00:16:45.929
现在的自由是最好的之一， 

00:16:43.529 --> 00:16:47.399
这是一个我会称之为的

00:16:45.929 --> 00:16:49.169
像下一代的WebSphere 

00:16:47.399 --> 00:16:52.739
因为那是你不应该提及

00:16:49.169 --> 00:16:56.489
如果您打开websley，是不是

00:16:52.739 --> 00:16:58.109
最小的创业公司是最快的

00:16:56.489 --> 00:16:59.609
务实的配置，所以这可以

00:16:58.109 --> 00:17:00.869
告诉你开放的自由

00:16:59.609 --> 00:17:03.659
现在完全开源，您

00:17:00.869 --> 00:17:06.899
可以毫无问题地购买支持

00:17:03.659 --> 00:17:09.449
来自IBM的原因为何我知道，因为我

00:17:06.899 --> 00:17:12.749
很好奇，和艾琳做了一个播客

00:17:09.449 --> 00:17:16.100
施纳贝尔和她是什么她

00:17:12.749 --> 00:17:19.799
她是开放的自由女神之一

00:17:16.100 --> 00:17:22.709
建筑师，所以我问她

00:17:19.799 --> 00:17:24.629
她的难题和什么让我感兴趣

00:17:22.709 --> 00:17:27.419
对于我的客户，如果我只是下载open 

00:17:24.629 --> 00:17:32.330
我可以自由购买支持吗？ 

00:17:27.419 --> 00:17:32.330
如果愿意，可以的话就不要买

00:17:38.630 --> 00:17:43.730
是的，但是有信息显示

00:17:40.820 --> 00:17:44.930
的价格，所以您可以购买支持

00:17:43.730 --> 00:17:46.670
开放的自由，但您不必

00:17:44.930 --> 00:17:48.830
所以没有限制没有像

00:17:46.670 --> 00:17:52.190
是的，您实际上对IBM有

00:17:48.830 --> 00:17:54.620
好的，那么你不是那么完美吗

00:17:52.190 --> 00:17:56.360
嗯，现在我们已经设置好一切

00:17:54.620 --> 00:18:00.200
给我留下深刻印象和有趣的是

00:17:56.360 --> 00:18:02.510
没有超级诗歌没有插件一切

00:18:00.200 --> 00:18:06.950
禁止的，所以这就是

00:18:02.510 --> 00:18:10.760
 Java 8项目的蓝图

00:18:06.950 --> 00:18:12.530
所以如果现在有个人资料

00:18:10.760 --> 00:18:15.530
我会让你知道打开

00:18:12.530 --> 00:18:17.600
微型个人资料，您会看到200 

00:18:15.530 --> 00:18:19.610
微观档案和300的依存关系

00:18:17.600 --> 00:18:22.100
我是Java EE八个配置文件

00:18:19.610 --> 00:18:24.110
对此完全不感兴趣，为什么不

00:18:22.100 --> 00:18:25.760
因为它不可维护并不简单

00:18:24.110 --> 00:18:27.410
这不是Java，所以要做些什么

00:18:25.760 --> 00:18:28.370
否则，这就是哲学

00:18:27.410 --> 00:18:31.040
完全不同

00:18:28.370 --> 00:18:33.800
同意，所以你至少应该同意

00:18:31.040 --> 00:18:36.050
这比爆炸格式更简单

00:18:33.800 --> 00:18:38.620
它被称为“同类最佳” 

00:18:36.050 --> 00:18:40.310
在池塘项目之前

00:18:38.620 --> 00:18:41.660
调查阶段，您知道哪个

00:18:40.310 --> 00:18:43.100
版本的登录框架应该

00:18:41.660 --> 00:18:45.110
选择和jax-rs版本

00:18:43.100 --> 00:18:47.210
我应该选择实施，然后

00:18:45.110 --> 00:18:52.490
在探索阶段之后，项目

00:18:47.210 --> 00:18:55.040
通常是可以的，所以现在我们可以运行

00:18:52.490 --> 00:18:57.560
它，我会在payara上运行它，为什么

00:18:55.040 --> 00:19:01.730
因为我现在在生产中使用它

00:18:57.560 --> 00:19:06.620
五火应该在哪里

00:19:01.730 --> 00:19:07.940
记住，只有白色的第14班机

00:19:06.620 --> 00:19:10.070
不支持的应用服务器

00:19:07.940 --> 00:19:13.100
所有的微轮廓规格，但它们

00:19:10.070 --> 00:19:15.620
越来越好，他们

00:19:13.100 --> 00:19:15.920
具有配置并打开跟踪

00:19:15.620 --> 00:19:17.510
艾加

00:19:15.920 --> 00:19:19.430
但他们会在接下来的支持

00:19:17.510 --> 00:19:21.470
版本越来越多的payara支持

00:19:19.430 --> 00:19:23.330
 200个完全开放的Liberty支持

00:19:21.470 --> 00:19:24.860
一切，汤米全力支持我

00:19:23.330 --> 00:19:27.270
微型个人资料，但并非所有

00:19:24.860 --> 00:19:29.160
 Java八对

00:19:27.270 --> 00:19:31.460
不完全是，所以延长了

00:19:29.160 --> 00:19:31.460
汤米

00:19:36.260 --> 00:19:39.950
好吧，汤米正在支持

00:19:38.600 --> 00:19:42.830
一切顺便说一句

00:19:39.950 --> 00:19:46.340
现在已经完全重启

00:19:42.830 --> 00:19:49.070
这里的一切就像多云

00:19:46.340 --> 00:19:52.720
开始，我们喜欢Java 8，所以

00:19:49.070 --> 00:19:54.620
现在我当然很有趣

00:19:52.720 --> 00:19:57.380
这里发生了什么

00:19:54.620 --> 00:20:02.540
杰克和唯一重要的事情

00:19:57.380 --> 00:20:05.179
对我来说就是，你看到杰克在

00:20:02.540 --> 00:20:08.150
战争是三个半K为什么它是

00:20:05.179 --> 00:20:10.100
案例，因为是的，我不必部署

00:20:08.150 --> 00:20:12.590
运送我的应用程序基础架构

00:20:10.100 --> 00:20:14.630
再次，这就是为什么我仍然在做

00:20:12.590 --> 00:20:16.880
 Java EE以及越来越多的云计算

00:20:14.630 --> 00:20:19.340
本机环境，因为推动

00:20:16.880 --> 00:20:21.410
很快，所以向你展示一下我

00:20:19.340 --> 00:20:26.090
只想创建一个码头工人

00:20:21.410 --> 00:20:28.870
部署只是为了给您一个

00:20:26.090 --> 00:20:32.600
感觉，我认为它带有

00:20:28.870 --> 00:20:37.490
 GlassFish和我想使用PI R 5 PI 

00:20:32.600 --> 00:20:41.559
 R 5所以它意味着用它

00:20:37.490 --> 00:20:46.220
使用payara 5作为基本图片， 

00:20:41.559 --> 00:20:47.470
现在我做一个完整的清洁工

00:20:46.220 --> 00:20:53.260
它不存在

00:20:47.470 --> 00:20:53.260
安装和交谈构建-T 

00:20:53.380 --> 00:20:57.990
我们称之为Jacon Jacon 

00:20:58.800 --> 00:21:06.390
没有jaqen一个权利，所以这是他的

00:21:02.700 --> 00:21:07.800
 T恤，所以我们有，希望它

00:21:06.390 --> 00:21:10.290
不会建立，现在我们已经完整建立

00:21:07.800 --> 00:21:12.870
并创建了docker映像，因此

00:21:10.290 --> 00:21:14.520
是docker图片包含的payara 

00:21:12.870 --> 00:21:15.750
傻瓜这是最大的

00:21:14.520 --> 00:21:18.150
我会说那里的应用程序

00:21:15.750 --> 00:21:20.490
我从未使用过较小的payara 

00:21:18.150 --> 00:21:23.190
因为它使用发送都没关系

00:21:20.490 --> 00:21:25.050
 OS 7最大的已知非高山Linux 

00:21:23.190 --> 00:21:26.970
并打开JDK也完全没有任何

00:21:25.050 --> 00:21:30.330
技巧，所以这种多样的可能

00:21:26.970 --> 00:21:31.980
您可以得到和获得的经验

00:21:30.330 --> 00:21:33.900
场景也正在云上运行

00:21:31.980 --> 00:21:36.270
机器，所以它不能比这慢

00:21:33.900 --> 00:21:37.770
如果这个比较慢的项目通常

00:21:36.270 --> 00:21:40.320
一切都升级了，事实证明

00:21:37.770 --> 00:21:42.270
然后他们正在运行正在运行的病毒

00:21:40.320 --> 00:21:44.100
扫描程序和病毒扫描程序扫描

00:21:42.270 --> 00:21:48.360
 JVM本身，因此它是最安全的

00:21:44.100 --> 00:21:53.310
部署，所以现在运行doc doc-D 

00:21:48.360 --> 00:21:57.120
 -PI必须注意端口H 

00:21:53.310 --> 00:21:58.800
 -H-H-8080这也没人做

00:21:57.120 --> 00:22:02.960
在生产中我通常使用的是

00:21:58.800 --> 00:22:05.490
 openshift和openshift集成

00:22:02.960 --> 00:22:07.290
 kubernetes ha代理etcd 

00:22:05.490 --> 00:22:10.110
在整个部署中，但这就是

00:22:07.290 --> 00:22:13.800
您可以从docker run开始-D- 

00:22:10.110 --> 00:22:19.970
彼得斯，然后我们称之为那个名字

00:22:13.800 --> 00:22:27.500
希望这个名字叫杰克

00:22:19.970 --> 00:22:34.929
是的，博士PS正在运行博士。路加的是

00:22:27.500 --> 00:22:34.929
运行，现在多卡历史之一

00:22:35.160 --> 00:22:42.200
 [音乐] 

00:22:37.200 --> 00:22:42.200
是的，历史越深，jaqen一

00:22:42.210 --> 00:22:51.120
所以现在我们都是年轻的开发者

00:22:48.330 --> 00:22:55.170
 Java的

00:22:51.120 --> 00:22:57.570
最年轻的新鲜语言，怎么办

00:22:55.170 --> 00:23:00.120
我们在这里，你看到两年前我

00:22:57.570 --> 00:23:03.090
安装大概送给我七

00:23:00.120 --> 00:23:05.970
猜十九年十九年

00:23:03.090 --> 00:23:09.900
十九个月前我猜是开放的

00:23:05.970 --> 00:23:13.080
 JDK之类的东西是什么

00:23:09.900 --> 00:23:15.450
有趣的是堆栈的上方，所以

00:23:13.080 --> 00:23:18.540
新鲜，所以这可能是payara 

00:23:15.450 --> 00:23:21.960
 5这是5个月大的payara 

00:23:18.540 --> 00:23:24.440
一分钟前我做了什么

00:23:21.960 --> 00:23:26.640
创建和4k大的docker映像

00:23:24.440 --> 00:23:28.860
在这个示范之后

00:23:26.640 --> 00:23:31.559
每个人实际上都喜欢Java，原因是

00:23:28.860 --> 00:23:33.870
您将整个形象推向私人

00:23:31.559 --> 00:23:37.530
您的云注册表，然后您推送

00:23:33.870 --> 00:23:39.929
你一天4k知道2,000次，所以

00:23:37.530 --> 00:23:43.980
说我的生产形象都不是

00:23:39.929 --> 00:23:47.880
 4k，但通常大多数都较小

00:23:43.980 --> 00:23:50.280
一台Mac，我们的播客就会来

00:23:47.880 --> 00:23:52.500
很快，您的图片有多大

00:23:50.280 --> 00:23:54.960
忘记了，因为你拥有整个

00:23:52.500 --> 00:23:59.100
被称为不是IBM的云技术

00:23:54.960 --> 00:24:00.519
主人不是哈德森，哈瓦那叫什么名字

00:23:59.100 --> 00:24:05.499
那家伙

00:24:00.519 --> 00:24:08.259
没有詹金斯，没有沃森的哈德森

00:24:05.499 --> 00:24:10.929
是的，他在战争中拥有沃森的一部分

00:24:08.259 --> 00:24:12.669
它仍然足够小

00:24:10.929 --> 00:24:14.769
是五个最大还是五个最大

00:24:12.669 --> 00:24:16.570
因为什么是API，但是什么

00:24:14.769 --> 00:24:18.729
很快就可以了，不是Java的一部分，所以

00:24:16.570 --> 00:24:20.469
你必须打包沃森问题

00:24:18.729 --> 00:24:20.849
关于这个，所以我可以告诉你这是

00:24:20.469 --> 00:24:23.469
我所做的

00:24:20.849 --> 00:24:26.440
演出后一直如此

00:24:23.469 --> 00:24:29.379
好的，没有具有依赖项的供稿链接，并且

00:24:26.440 --> 00:24:31.269
问题是还是我没有

00:24:29.379 --> 00:24:32.559
关心平台有多大，因为

00:24:31.269 --> 00:24:35.229
平台永远不会部署到云

00:24:32.559 --> 00:24:39.029
现在你可以说图像有多大

00:24:35.229 --> 00:24:44.669
然后这就是我可以告诉你的

00:24:39.029 --> 00:24:51.329
所以，这里的图像是您看到500混合

00:24:44.669 --> 00:24:51.329
 FiberNet这些映像很多，因此

00:24:52.190 --> 00:24:59.000
这是最后一个583分钟

00:24:55.280 --> 00:25:01.550
 70个小时以前是这样，是的

00:24:59.000 --> 00:25:05.240
 elasticsearch以及其他任何东西

00:25:01.550 --> 00:25:07.160
最大约560，所以当然不可能

00:25:05.240 --> 00:25:09.200
有那么大的硬盘

00:25:07.160 --> 00:25:11.900
图像，但daca所做的当然是

00:25:09.200 --> 00:25:14.420
 pi RS一次在我的机器上

00:25:11.900 --> 00:25:18.140
图像就像你一样指代相同

00:25:14.420 --> 00:25:20.540
知道一致的哈希Omega-3好吗

00:25:18.140 --> 00:25:22.970
所以有趣的故事是我做了一些

00:25:20.540 --> 00:25:26.210
服务Java，功能映像为

00:25:22.970 --> 00:25:27.950
比应用服务器大

00:25:26.210 --> 00:25:29.660
一个功能好吗，这个轻量级

00:25:27.950 --> 00:25:32.810
好吧，看看它的大小

00:25:29.660 --> 00:25:35.320
更大，下周我的项目

00:25:32.810 --> 00:25:38.330
正确开放自由，我们所有人都必须使用

00:25:35.320 --> 00:25:41.720
 lambda由于营销而起作用

00:25:38.330 --> 00:25:43.700
以及我们将做什么

00:25:41.720 --> 00:25:45.040
可能是因为我们的活动套餐

00:25:43.700 --> 00:25:47.120
开放自由具有lambda函数

00:25:45.040 --> 00:25:48.410
因为它更有生产力，这是

00:25:47.120 --> 00:25:51.560
足够小是否重要

00:25:48.410 --> 00:25:54.230
你知道500个混合料还是520个混合料

00:25:51.560 --> 00:25:57.470
关于这个案例，所以我只是给

00:25:54.230 --> 00:25:59.630
你的印象，所以在你辩解之前

00:25:57.470 --> 00:26:01.610
什么是轻量级或重量级的

00:25:59.630 --> 00:26:03.760
测量并查看其行为

00:26:01.610 --> 00:26:06.560
我的建议你会惊讶的知道

00:26:03.760 --> 00:26:10.230
它的实际外观

00:26:06.560 --> 00:26:12.240
生产任何问题是的

00:26:10.230 --> 00:26:15.080
不是会议我不是not悔者

00:26:12.240 --> 00:26:20.010
尽量避免会议只是黑客

00:26:15.080 --> 00:26:21.600
项目没有会议没有她问我

00:26:20.010 --> 00:26:23.550
给我客户，不，我不能

00:26:21.600 --> 00:26:24.900
到处都有NDA，你知道这是

00:26:23.550 --> 00:26:27.150
问题，如果你在那里有顾问

00:26:24.900 --> 00:26:30.470
首先，你必须像你一样签纸

00:26:27.150 --> 00:26:30.470
无法告诉任何人您正在使用Java 

00:26:30.950 --> 00:26:38.250
是的，所以现在我们有了依据

00:26:35.700 --> 00:26:40.340
关于微轮廓现在多少时间

00:26:38.250 --> 00:26:40.340
我们有

00:26:40.520 --> 00:26:48.750
马库斯这家伙多少时间在哪里

00:26:43.110 --> 00:26:50.700
花哨的15分钟非常好

00:26:48.750 --> 00:26:54.140
到目前为止发生了什么事，所以这是

00:26:50.700 --> 00:26:56.640
 Java 8具有一个单一端点，并且

00:26:54.140 --> 00:26:58.590
通常你想要的是

00:26:56.640 --> 00:27:01.440
你将不得不有一种立面

00:26:58.590 --> 00:27:02.910
我想称它为粉红色

00:27:01.440 --> 00:27:04.320
说这是服务，我将创建一个

00:27:02.910 --> 00:27:06.090
乱七八糟，因为没关系

00:27:04.320 --> 00:27:07.680
这是一个会议之后的会议

00:27:06.090 --> 00:27:11.040
弄清楚这个的结构以便我可以清洁

00:27:07.680 --> 00:27:13.620
所以现在通常都是一团糟

00:27:11.040 --> 00:27:16.260
你想有个舞台

00:27:13.620 --> 00:27:18.480
独立配置以及如何配置

00:27:16.260 --> 00:27:20.610
在本机云中工作，您将不得不

00:27:18.480 --> 00:27:22.560
在环境中查找他们的东西

00:27:20.610 --> 00:27:24.930
条目，然后在系统属性中

00:27:22.560 --> 00:27:27.150
通常或您拥有的任何来源

00:27:24.930 --> 00:27:28.770
在Java中，您通常无法执行此操作

00:27:27.150 --> 00:27:31.140
在舞台上砍掉Java，这是

00:27:28.770 --> 00:27:32.910
就像单线一样，我删除了单线

00:27:31.140 --> 00:27:36.240
因为有更好的东西

00:27:32.910 --> 00:27:38.490
叫做冲突财产，有两个

00:27:36.240 --> 00:27:40.470
命名就可以使用

00:27:38.490 --> 00:27:42.720
属性的名称将其称为消息

00:27:40.470 --> 00:27:47.310
然后您具有默认值和

00:27:42.720 --> 00:27:51.530
称它为杰克（Jake on a）杰克（Jake） 

00:27:47.310 --> 00:27:54.740
在注入说

00:27:51.530 --> 00:27:56.510
然后是字符串消息，这是

00:27:54.740 --> 00:27:58.670
已配置，并且已配置

00:27:56.510 --> 00:28:01.610
默认情况下它进入环境条目

00:27:58.670 --> 00:28:03.980
然后进入系统属性

00:28:01.610 --> 00:28:06.380
如果您不满意您

00:28:03.980 --> 00:28:08.300
可以提供您自己的配置源

00:28:06.380 --> 00:28:10.400
我从来没有做过的优先事项，但这是

00:28:08.300 --> 00:28:12.350
不，有可能这样做

00:28:10.400 --> 00:28:14.060
实例Microsoft Asia做到了

00:28:12.350 --> 00:28:15.410
他们有微软的配置源

00:28:14.060 --> 00:28:17.990
他们提供了开箱即用的亚洲

00:28:15.410 --> 00:28:21.200
微软为什么会这样，因为微软

00:28:17.990 --> 00:28:23.240
是雅加达II的一部分，为什么

00:28:21.200 --> 00:28:25.490
因为Bruno Burgess的传教士

00:28:23.240 --> 00:28:28.370
 Oracle现在可以与Microsoft合作，因此

00:28:25.490 --> 00:28:31.250
这就像一个短周期，所以现在

00:28:28.370 --> 00:28:36.140
我们有这个，说我想

00:28:31.250 --> 00:28:38.180
在这里感谢早上好，还有什么

00:28:36.140 --> 00:28:40.460
所有项目，因为现在很容易

00:28:38.180 --> 00:28:42.410
有图安娜和另一个图安娜

00:28:40.460 --> 00:28:46.760
另一个继续做图Anna和

00:28:42.410 --> 00:28:50.240
或其他伊凡娜的，问题不是

00:28:46.760 --> 00:28:53.180
去年在开玩笑，一位客户来找我

00:28:50.240 --> 00:28:54.890
说我们有很多仪表板，但是

00:28:53.180 --> 00:28:57.200
我们无法确定我们的用例是否

00:28:54.890 --> 00:28:58.760
成功的，所以我真的很好奇

00:28:57.200 --> 00:29:00.110
仪表板，我看着

00:28:58.760 --> 00:29:01.970
仪表板，他们可以告诉你

00:29:00.110 --> 00:29:04.940
一切都可能没有温度

00:29:01.970 --> 00:29:07.190
在房间和大小我不知道

00:29:04.940 --> 00:29:08.720
 CPU内部的原子，但没人能

00:29:07.190 --> 00:29:11.300
告诉别人是否真的

00:29:08.720 --> 00:29:13.010
买或不买，所以我看起来我不知道

00:29:11.300 --> 00:29:14.960
你在建造什么，但对我来说

00:29:13.010 --> 00:29:17.210
系统就像黑匣子一样

00:29:14.960 --> 00:29:20.390
进去，有些东西熄灭，我会

00:29:17.210 --> 00:29:21.980
从计算债务开始，他们开始谈论

00:29:20.390 --> 00:29:25.280
并说了你现在是天才

00:29:21.980 --> 00:29:27.320
只有你和你一起知道20年的

00:29:25.280 --> 00:29:29.030
经验可以做这样的事情

00:29:27.320 --> 00:29:30.620
他们会告诉我你知道如何

00:29:29.030 --> 00:29:32.270
垃圾收集器经常像

00:29:30.620 --> 00:29:34.490
这常常像我不知道， 

00:29:32.270 --> 00:29:36.320
我不在乎如果您出售它是否有效

00:29:34.490 --> 00:29:38.510
你的东西让它运行我的意思是，如果

00:29:36.320 --> 00:29:40.720
垃圾收集器应该足够快

00:29:38.510 --> 00:29:43.430
早上也做对的事

00:29:40.720 --> 00:29:45.470
所以那么你应该开始

00:29:43.430 --> 00:29:49.450
实例你可以做类似的事情

00:29:45.470 --> 00:29:49.450
这可以说我有很长的阿塔

00:29:50.420 --> 00:29:57.540
这是一个早上柜台，早上

00:29:55.170 --> 00:30:00.350
计数器让我们做清楚

00:29:57.540 --> 00:30:00.350
后期构造

00:30:04.000 --> 00:30:10.330
新等于是，大概有一个

00:30:08.740 --> 00:30:13.030
语言更简洁，因为那里

00:30:10.330 --> 00:30:16.540
不等于，所以尽管有

00:30:13.030 --> 00:30:23.800
我们有这个，然后今天早上

00:30:16.540 --> 00:30:24.610
计数器增加并说返回良好

00:30:23.800 --> 00:30:28.570
早上

00:30:24.610 --> 00:30:31.240
加上这则讯息

00:30:28.570 --> 00:30:33.580
所以现在，最酷的故事就是我们

00:30:31.240 --> 00:30:38.250
首先我们为什么喜欢微利

00:30:33.580 --> 00:30:40.270
以下是我们的结局

00:30:38.250 --> 00:30:44.350
早上好，在此

00:30:40.270 --> 00:30:46.390
特定项目会出售项目，因此

00:30:44.350 --> 00:30:48.190
很简单，他们说还可以，但我们保证

00:30:46.390 --> 00:30:53.800
再次使用和东西，并执行此操作

00:30:48.190 --> 00:30:57.970
像计数器然后然后

00:30:53.800 --> 00:30:59.650
您必须指定单位，这是一个

00:30:57.970 --> 00:31:01.330
有点奇怪，所以这可能是

00:30:59.650 --> 00:31:02.620
有所改善，但我们有时间，所以

00:31:01.330 --> 00:31:06.280
一年发行四个版本，因此我们可以

00:31:02.620 --> 00:31:09.250
做出贡献，就像说

00:31:06.280 --> 00:31:11.380
我说算数还是早上不算

00:31:09.250 --> 00:31:13.390
这是普罗米修斯的那个标签

00:31:11.380 --> 00:31:19.120
以后，我要做的就是说

00:31:13.390 --> 00:31:25.270
返回此计数器在哪里

00:31:19.120 --> 00:31:28.690
因此很有价值，这意味着我们拥有

00:31:25.270 --> 00:31:30.130
单调的整体式单调计数器

00:31:28.690 --> 00:31:33.580
只是增加了它的价值

00:31:30.130 --> 00:31:35.800
命名，我们将在其中看到普罗米修斯

00:31:33.580 --> 00:31:38.080
仪表板多少好多少

00:31:35.800 --> 00:31:39.670
早上实际上已经执行了，所以这

00:31:38.080 --> 00:31:41.680
我唯一拥有的业务逻辑是

00:31:39.670 --> 00:31:43.390
最有趣的一个，我不在乎

00:31:41.680 --> 00:31:44.590
关于交易数

00:31:43.390 --> 00:31:46.540
回滚，这可能很有趣

00:31:44.590 --> 00:31:48.580
调试阶段，如果您购买

00:31:46.540 --> 00:31:50.650
车最重要的是

00:31:48.580 --> 00:31:52.930
你知道这是菲利普吗？ 

00:31:50.650 --> 00:31:54.730
是的，我想看看速度

00:31:52.930 --> 00:31:59.350
否则我必须看看速度，否则我

00:31:54.730 --> 00:32:01.570
如果在德国不会有很多经营

00:31:59.350 --> 00:32:03.820
开发人员是我们的汽车设计师

00:32:01.570 --> 00:32:05.800
在仪表板中看到您知道的样子

00:32:03.820 --> 00:32:07.840
知道丹佛市的温度

00:32:05.800 --> 00:32:10.120
引擎的踢动，或者你知道

00:32:07.840 --> 00:32:11.470
排气管中的压力，但没有人

00:32:10.120 --> 00:32:13.420
会知道我们是否真的

00:32:11.470 --> 00:32:15.640
开车还是不开车，这就是我所看到的

00:32:13.420 --> 00:32:17.950
在正确的项目中，因此最能衡量

00:32:15.640 --> 00:32:20.110
重要的注释，所以你知道

00:32:17.950 --> 00:32:22.380
我知道您是开发人员，因此您可以

00:32:20.110 --> 00:32:24.760
以米开始

00:32:22.380 --> 00:32:27.200
那你滚动什么米

00:32:24.760 --> 00:32:30.409
平均和

00:32:27.200 --> 00:32:32.510
和阈值等等，还有一个

00:32:30.409 --> 00:32:34.070
顾问告诉我，他总是从

00:32:32.510 --> 00:32:36.559
计量，因为这样看起来更

00:32:34.070 --> 00:32:39.470
专业所以好吧那我就去

00:32:36.559 --> 00:32:41.000
然后，您应该然后

00:32:39.470 --> 00:32:43.039
一个时间点只是从简单开始

00:32:41.000 --> 00:32:46.010
但这只是一个柜台吧

00:32:43.039 --> 00:32:51.639
哦，汉堡的Java用户组

00:32:46.010 --> 00:32:54.529
所以现在我们可以注入这个

00:32:51.639 --> 00:32:55.820
当然，现在我的项目中发生了什么

00:32:54.529 --> 00:32:58.309
就像说你疯了

00:32:55.820 --> 00:32:59.899
你不能没有私人，所以如果

00:32:58.309 --> 00:33:01.220
你真的很喜欢我可以私下做

00:32:59.899 --> 00:33:03.620
在Java中没关系，您知道一个

00:33:01.220 --> 00:33:05.779
将能够直接访问它，所以

00:33:03.620 --> 00:33:09.019
如果您喜欢私人写的话，那是

00:33:05.779 --> 00:33:10.940
现在浪费时间，发生什么事

00:33:09.019 --> 00:33:14.000
那么你现在也知道所有来源

00:33:10.940 --> 00:33:16.340
詹金斯只是没有詹娜斯的呐喊

00:33:14.000 --> 00:33:20.330
源系统爆炸

00:33:16.340 --> 00:33:25.100
哦，代码质量很差，只有一个

00:33:20.330 --> 00:33:28.250
私人喜欢墨水，所以现在服务很好

00:33:25.100 --> 00:33:30.950
他们上周早上的代码回顾

00:33:28.250 --> 00:33:33.350
测试所有数据的默认构造函数

00:33:30.950 --> 00:33:35.090
转移对象并写了一个小

00:33:33.350 --> 00:33:39.950
无内省的错误，可调用所有

00:33:35.090 --> 00:33:43.549
 getters和setters也不错

00:33:39.950 --> 00:33:46.130
花时间，所以我们有希望

00:33:43.549 --> 00:33:50.559
它甚至可以工作一秒钟

00:33:46.130 --> 00:33:50.559
忘记了实际正在运行的内容

00:33:50.880 --> 00:33:56.510
这个没有

00:33:54.620 --> 00:33:57.920
应该是不同的输出和喜悦乔伊

00:33:56.510 --> 00:34:02.260
让我们再次运行它

00:33:57.920 --> 00:34:02.260
如果没有，我将在Daka上运行它

00:34:04.370 --> 00:34:09.289
你能了解我们吗

00:34:06.509 --> 00:34:09.289
我可以

00:34:10.409 --> 00:34:14.299
我看得很清楚

00:34:17.369 --> 00:34:20.669
我从命令运行了maven clean install 

00:34:19.589 --> 00:34:24.089
整个部署线

00:34:20.669 --> 00:34:30.389
应用程序，所以现在我应该看到

00:34:24.089 --> 00:34:35.249
有些人认为杰克和一个人在一起

00:34:30.389 --> 00:34:36.419
现在有了矩阵数据

00:34:35.249 --> 00:34:38.279
矩阵，如果你想看

00:34:36.419 --> 00:34:43.700
专业，所以您会看到的一切

00:34:38.279 --> 00:34:43.700
对了，什么是酷

00:34:45.429 --> 00:34:48.549
 [音乐] 

00:34:52.990 --> 00:34:57.170
他们有Jason的名字，所以

00:34:55.609 --> 00:34:59.599
构建简单的Web应用程序真的很容易

00:34:57.170 --> 00:35:02.180
并在没有普罗米修斯的情况下暴露他们

00:34:59.599 --> 00:35:03.740
实例，但现在更酷了

00:35:02.180 --> 00:35:06.260
真正有趣的是范围

00:35:03.740 --> 00:35:08.630
应用程序，现在您看到我的

00:35:06.260 --> 00:35:10.849
业务矩阵，这些就是袋子

00:35:08.630 --> 00:35:13.400
这样您就可以构建仪表板并查看

00:35:10.849 --> 00:35:15.740
你知道售出多少物品或如何

00:35:13.400 --> 00:35:17.839
实际上有很多欺诈行为，所以我

00:35:15.740 --> 00:35:19.160
必须承认我误用了普罗米修斯

00:35:17.839 --> 00:35:21.230
业务矩阵和轴上的所有图

00:35:19.160 --> 00:35:24.290
时间，所以我的仪表盘不是

00:35:21.230 --> 00:35:27.710
令人兴奋，但我的客户真的很喜欢

00:35:24.290 --> 00:35:29.450
好吧，现在就更远了，所以下一个

00:35:27.710 --> 00:35:36.319
问题是，但是我们需要hystrix 

00:35:29.450 --> 00:35:38.319
好的，如果您愿意，但是我们可以

00:35:36.319 --> 00:35:39.640
确实是的，顺便说一句

00:35:38.319 --> 00:35:42.370
作品

00:35:39.640 --> 00:35:46.530
偶然

00:35:42.370 --> 00:35:48.750
这将是更好的应用范围

00:35:46.530 --> 00:35:51.690
现在我们可以做什么，我们可以这样说

00:35:48.750 --> 00:35:55.260
早上好，手术真的很慢

00:35:51.690 --> 00:35:57.090
它也可能会抛出箭头，所以我

00:35:55.260 --> 00:36:00.420
可以做的是我可以应用电路

00:35:57.090 --> 00:36:03.050
断路器，例如，先生退出断路器是

00:36:00.420 --> 00:36:08.130
建筑物没有不幸的是没有

00:36:03.050 --> 00:36:10.020
历史等等，所以你的墙还在

00:36:08.130 --> 00:36:11.100
在一个项目中他们很小

00:36:10.020 --> 00:36:13.200
全面部署历史

00:36:11.100 --> 00:36:15.060
 Java EE与基础架构

00:36:13.200 --> 00:36:16.440
这样，一切都会变成两倍

00:36:15.060 --> 00:36:19.650
我可以提供的Java应用程序

00:36:16.440 --> 00:36:22.680
现在加上历史的断路器，所以我们

00:36:19.650 --> 00:36:28.370
可以说例如请求量

00:36:22.680 --> 00:36:33.020
门槛10失败率是1/2， 

00:36:28.370 --> 00:36:38.880
成功是2，所以这意味着

00:36:33.020 --> 00:36:41.970
如果10个请求中有5个失败

00:36:38.880 --> 00:36:46.170
他们的秘密断路器将打开，并且

00:36:41.970 --> 00:36:48.690
在两个超时时间之后

00:36:46.170 --> 00:36:51.150
通常我认为成功五秒钟

00:36:48.690 --> 00:36:53.820
门槛为2，它将再次关闭

00:36:51.150 --> 00:36:59.670
所以这是破环者，如果可以的话

00:36:53.820 --> 00:37:04.200
说好的，但是我需要一个备用广告， 

00:36:59.670 --> 00:37:07.220
 fallback是默认的fallback方法

00:37:04.200 --> 00:37:07.220
所以早上

00:37:13.039 --> 00:37:21.529
他们必须对应，我可以说

00:37:16.929 --> 00:37:24.650
返回仍然很好，现在又是什么

00:37:21.529 --> 00:37:28.509
发生错误是我们没有任何错误

00:37:24.650 --> 00:37:28.509
箭头，但我们可以介绍一些

00:37:37.609 --> 00:37:40.269
所以

00:37:47.099 --> 00:37:52.860
所以现在

00:37:49.210 --> 00:37:52.860
应该在哪里工作

00:37:52.930 --> 00:37:59.230
太好了，所以我们有了这个

00:37:56.319 --> 00:38:01.450
其他有趣的事情可能就是我所做的

00:37:59.230 --> 00:38:03.460
我使用的Java 8有点不同

00:38:01.450 --> 00:38:04.960
托管执行人服务并使用

00:38:03.460 --> 00:38:07.660
 jax-rs和完整的每一个未来

00:38:04.960 --> 00:38:10.750
在那里实施舱壁的管道

00:38:07.660 --> 00:38:13.900
现在更好了，我可以说我会

00:38:10.750 --> 00:38:17.880
只是说出来我可以说嘿

00:38:13.900 --> 00:38:17.880
这些是水桶

00:38:19.880 --> 00:38:26.470
铲斗没有隔板

00:38:29.990 --> 00:38:37.670
我指定了两个值

00:38:34.130 --> 00:38:41.270
这很奇怪，为什么这个价值和

00:38:37.670 --> 00:38:43.369
您正等待任务，所以我们有一个

00:38:41.270 --> 00:38:48.339
值两个，但有趣的是

00:38:43.369 --> 00:38:52.280
让我们说一个等待的任务

00:38:48.339 --> 00:38:55.700
那么我将再次删除该内容

00:38:52.280 --> 00:39:00.380
确实意味着现在只有一个线程

00:38:55.700 --> 00:39:03.200
时间可以访问该方法，如果

00:39:00.380 --> 00:39:05.599
队列适合这里，那么回退是

00:39:03.200 --> 00:39:06.800
被称为实际上

00:39:05.599 --> 00:39:09.380
容易理解背后发生的事情

00:39:06.800 --> 00:39:11.030
如果您需要的话，我是一个

00:39:09.380 --> 00:39:12.320
真的有点害怕，这也是他们

00:39:11.030 --> 00:39:13.880
从所有模式开始，然后他们

00:39:12.320 --> 00:39:15.109
首先他们会知道介绍所有吗

00:39:13.880 --> 00:39:17.180
注释所有模式和

00:39:15.109 --> 00:39:18.410
然后他们以他们的方式思考

00:39:17.180 --> 00:39:20.540
他们实际上想要建立什么

00:39:18.410 --> 00:39:22.250
但我认为您应该从

00:39:20.540 --> 00:39:24.290
开始破坏您的应用程序

00:39:22.250 --> 00:39:26.030
使用压力测试，如果

00:39:24.290 --> 00:39:29.720
应用程序中断，这真的很不错

00:39:26.030 --> 00:39:32.210
用建筑来解决这个问题

00:39:29.720 --> 00:39:34.160
注释，所以我们有两个包

00:39:32.210 --> 00:39:37.690
我将使该应用程序有点

00:39:34.160 --> 00:39:45.330
较慢的线程睡眠

00:39:37.690 --> 00:39:45.330
再说一秒钟

00:39:45.510 --> 00:39:51.210
现在让我们看看我是否很幸运，应该

00:39:48.600 --> 00:39:53.820
意思是如果我快又有一点时间

00:39:51.210 --> 00:40:00.109
应该只看到默认的早晨，直到

00:39:53.820 --> 00:40:00.109
 DQ变成空的，所以现在尝试

00:40:03.089 --> 00:40:07.549
连乔伊都太快了

00:40:13.549 --> 00:40:17.619
不，你还好

00:40:17.820 --> 00:40:23.340
不，还好，露西，它等待一秒钟

00:40:20.810 --> 00:40:24.740
它会等待，然后如果我太快直到

00:40:23.340 --> 00:40:28.650
很好的回落，然后我稍等

00:40:24.740 --> 00:40:31.970
它有效，所以这是指标，如果我

00:40:28.650 --> 00:40:35.040
太快了，它会退回

00:40:31.970 --> 00:40:39.240
内置舱壁现在的夜晚故事是

00:40:35.040 --> 00:40:41.010
甚至可以干净安装我的

00:40:39.240 --> 00:40:45.620
应用程序的增长是因为历史敲响了

00:40:41.010 --> 00:40:48.480
一切都在里面，所以现在我们有了

00:40:45.620 --> 00:40:50.310
 5k当然看起来

00:40:48.480 --> 00:40:52.770
专业，所以你可以做的可以

00:40:50.310 --> 00:40:55.020
创建你知道一些没有

00:40:52.770 --> 00:40:57.210
任何实现只是为了看起来更多

00:40:55.020 --> 00:41:00.780
专业，但这不是必需的

00:40:57.210 --> 00:41:02.880
所以现在这是我每天的工作

00:41:00.780 --> 00:41:05.820
 Java这实际上是我要做的，而不是

00:41:02.880 --> 00:41:06.870
只关注实际的初创企业

00:41:05.820 --> 00:41:08.550
这越来越多，因为那是

00:41:06.870 --> 00:41:11.580
像平时一样高效

00:41:08.550 --> 00:41:15.660
我们也不要直接玩吗

00:41:11.580 --> 00:41:17.990
 OpenShift mini移位控制台多少钱

00:41:15.660 --> 00:41:17.990
你有时间

00:41:18.849 --> 00:41:30.280
 Marko是的，您只在Facebook上

00:41:23.180 --> 00:41:32.720
一直都可以

00:41:30.280 --> 00:41:34.130
所以不是基于我的证明概念

00:41:32.720 --> 00:41:38.660
这是威尼斯的场景，这

00:41:34.130 --> 00:41:41.660
这是白色的航班14 

00:41:38.660 --> 00:41:43.940
古巴是TCD等

00:41:41.660 --> 00:41:45.109
他拥有的称为微型Java的证明概念

00:41:43.940 --> 00:41:46.609
与会议无关，但我

00:41:45.109 --> 00:41:50.930
以为我可以告诉你它的表现

00:41:46.609 --> 00:41:58.660
在云中，所以我能做些什么

00:41:50.930 --> 00:41:58.660
告诉你让我们一起去吧

00:42:04.290 --> 00:42:09.600
好吧，我现在是微，所以我想

00:42:07.230 --> 00:42:13.680
开始构建，我全力以赴

00:42:09.600 --> 00:42:20.930
 Kubernetes现在微与战争

00:42:13.680 --> 00:42:20.930
也是微的，现在如此

00:42:21.550 --> 00:42:27.510
那是什么

00:42:24.190 --> 00:42:30.880
所以这被杀死了，另一个是

00:42:27.510 --> 00:42:33.400
开始这样做，这实际上是

00:42:30.880 --> 00:42:35.650
这很慢，这是第一次

00:42:33.400 --> 00:42:39.490
今天我再做一次

00:42:35.650 --> 00:42:42.369
飞上部署Java iPod 

00:42:39.490 --> 00:42:44.140
傻瓜，不是，不是，因为不是

00:42:42.369 --> 00:42:46.440
有利润，但我会告诉你

00:42:44.140 --> 00:42:46.440
再次

00:42:47.690 --> 00:42:50.900
在哪

00:42:51.120 --> 00:42:56.960
是的

00:42:52.680 --> 00:42:56.960
所以再做一次，看这个

00:43:07.559 --> 00:43:13.469
和SS这通常是如何工作的，如果

00:43:11.339 --> 00:43:15.329
它比这通常有一个慢

00:43:13.469 --> 00:43:17.369
注册表之间的带宽问题

00:43:15.329 --> 00:43:19.499
或码头之类的东西

00:43:17.369 --> 00:43:21.719
二进制构建的，所以它的意思确实是

00:43:19.499 --> 00:43:23.939
它拉到发送到i7是白色

00:43:21.719 --> 00:43:26.939
从泊坞窗注册表中，我只是

00:43:23.939 --> 00:43:29.189
取代他们的战争，这是这个

00:43:26.939 --> 00:43:32.579
实际上是乌云密布的

00:43:29.189 --> 00:43:34.979
在ECS中工作Amazon ECS项目之一

00:43:32.579 --> 00:43:37.229
我们使用亚马逊的ECS，因此实际上和

00:43:34.979 --> 00:43:38.880
从来没有发现我们

00:43:37.229 --> 00:43:40.769
应用服务器太大

00:43:38.880 --> 00:43:44.009
因为通常总是一样

00:43:40.769 --> 00:43:46.799
 500 Meg的大小，什么是什么

00:43:44.009 --> 00:43:48.989
 Java内置约150个

00:43:46.799 --> 00:43:51.329
硬盘上已安装了兆字节或更多

00:43:48.989 --> 00:43:53.069
磁盘打开JDK发送到七个

00:43:51.329 --> 00:43:54.900
大约200种混合物，大部分

00:43:53.069 --> 00:43:56.279
应用服务器大约有200个

00:43:54.900 --> 00:43:58.410
在硬盘上，打开的Liberty是

00:43:56.279 --> 00:44:00.299
最小，但不像您知道的那样

00:43:58.410 --> 00:44:01.949
是五个混合，GlassFish有200个

00:44:00.299 --> 00:44:09.589
小姐或两个极客，他们非常非常

00:44:01.949 --> 00:44:09.589
类似的好问题是

00:44:09.860 --> 00:44:13.589
是

00:44:11.730 --> 00:44:15.570
但它们是默认值，这就是我所展示的

00:44:13.589 --> 00:44:17.369
鲜为人知的是你能做什么

00:44:15.570 --> 00:44:19.380
开始构建，我将不得不指出

00:44:17.369 --> 00:44:21.119
我们到我们的github注册表，告诉你

00:44:19.380 --> 00:44:23.790
只是工作，所以实际上更容易

00:44:21.119 --> 00:44:25.560
告诉你如果没有的话建立的STI 

00:44:23.790 --> 00:44:29.400
其他问题我会给你看

00:44:25.560 --> 00:44:33.540
我将不得不去这里粉虱和

00:44:29.400 --> 00:44:37.200
这是14个应用程序名称pink，我

00:44:33.540 --> 00:44:40.800
现在需要一个存储库，我在这里

00:44:37.200 --> 00:44:44.690
变粉红色还有其他问题吗

00:44:40.800 --> 00:44:44.690
没关系，这很有趣

00:44:47.080 --> 00:44:50.770
是的，你怎么了，你可以说

00:44:48.970 --> 00:44:54.300
这太复杂了，我们不喜欢

00:44:50.770 --> 00:44:54.300
一切都疯了

00:44:54.750 --> 00:45:00.820
我们需要生锈以提高效率或

00:44:58.390 --> 00:45:03.250
随便吧

00:45:00.820 --> 00:45:05.470
运气好，现在开始这个ping 

00:45:03.250 --> 00:45:11.220
不完整的s2我未准备好映像

00:45:05.470 --> 00:45:13.570
从dhaka提取一切

00:45:11.220 --> 00:45:14.710
所以现在开始Maven构建

00:45:13.570 --> 00:45:17.260
它是否有效，尽管我不知道

00:45:14.710 --> 00:45:21.280
我只是试着让我们看看会发生什么

00:45:17.260 --> 00:45:22.930
所以这是没有它的完整版本

00:45:21.280 --> 00:45:26.260
已经被推，所以它已经

00:45:22.930 --> 00:45:30.730
建立并推动它意味着我们拥有

00:45:26.260 --> 00:45:34.930
现在部署和粉红色这是

00:45:30.730 --> 00:45:37.050
粉红色，让我们看一下它已经

00:45:34.930 --> 00:45:40.450
开始如此不幸也很快

00:45:37.050 --> 00:45:44.170
所以我要做的就是说OC 

00:45:40.450 --> 00:45:49.500
我现在公开并公开服务粉色

00:45:44.170 --> 00:45:54.630
路由可路由地址服务粉红色

00:45:49.500 --> 00:45:58.930
是的，这是粉红色的白色

00:45:54.630 --> 00:46:01.450
我认为资源不只是粉红色而已

00:45:58.930 --> 00:46:03.490
是的，这是我来自github的项目， 

00:46:01.450 --> 00:46:05.890
现在，这是从

00:46:03.490 --> 00:46:07.030
带有打开的图像的github 

00:46:05.890 --> 00:46:09.730
转变我不知道发生了什么

00:46:07.030 --> 00:46:12.700
这是纯s2i图像，我

00:46:09.730 --> 00:46:14.440
通常使用二进制s2i映像，因此您

00:46:12.700 --> 00:46:17.260
可以直接推动战争而无需

00:46:14.440 --> 00:46:20.130
重建那个

00:46:17.260 --> 00:46:24.580
好的，还有其他问题吗？ 

00:46:20.130 --> 00:46:26.530
无论如何，现在我们有了

00:46:24.580 --> 00:46:28.090
微观配置文件，我们获得并发API 

00:46:26.530 --> 00:46:30.250
这也很好波完成

00:46:28.090 --> 00:46:31.570
控制并发

00:46:30.250 --> 00:46:34.240
有趣地建立自己的批处理

00:46:31.570 --> 00:46:36.430
工作和对您的更多控制权

00:46:34.240 --> 00:46:38.200
并发，但我必须说我真的

00:46:36.430 --> 00:46:39.850
对微轮廓感到满意，并受到

00:46:38.200 --> 00:46:42.340
我忘了的方式

00:46:39.850 --> 00:46:47.290
 dddd最酷的东西是因为我不能

00:46:42.340 --> 00:46:51.130
在项目中看到它了8080已打开

00:46:47.290 --> 00:46:53.430
 API，因此您可以默认打开或打开

00:46:51.130 --> 00:46:55.570
 API端点，无任何注释，并且

00:46:53.430 --> 00:46:58.270
如果您获得注释

00:46:55.570 --> 00:47:00.280
注释附带了微型配置文件，因此

00:46:58.270 --> 00:47:02.650
所以这意味着我看到的是

00:47:00.280 --> 00:47:03.850
彻底的招摇污染，所以一切

00:47:02.650 --> 00:47:06.430
大摇大摆的运行时

00:47:03.850 --> 00:47:08.980
注释，最好的是

00:47:06.430 --> 00:47:11.290
昂首阔步的输出，您现在将看到

00:47:08.980 --> 00:47:14.140
客户和最终文档

00:47:11.290 --> 00:47:17.020
是最好的获得客户回报的方式

00:47:14.140 --> 00:47:18.790
客户，如果他们很好，是的，如果他们

00:47:17.020 --> 00:47:21.220
懒惰获取客户或删除

00:47:18.790 --> 00:47:22.900
客户，他们删除客户yeah或

00:47:21.220 --> 00:47:24.880
如果这不是研究资源

00:47:22.900 --> 00:47:27.460
面向远程过程调用休息

00:47:24.880 --> 00:47:29.140
这是否获得客户详细信息，说明

00:47:27.460 --> 00:47:32.109
调用方法获取客户详细信息哦，我

00:47:29.140 --> 00:47:34.510
不得不说招摇不如没有肥皂一样糟糕

00:47:32.109 --> 00:47:36.430
之前和VHDL是相同的

00:47:34.510 --> 00:47:38.920
想法很好，但执行力是

00:47:36.430 --> 00:47:41.490
至少在企业项目中很糟糕

00:47:38.920 --> 00:47:41.490
好的

00:47:42.359 --> 00:47:47.429
红灯或您想让我看看

00:47:45.249 --> 00:47:47.429
某事

00:47:48.089 --> 00:47:51.809
哦，我已经超时了

00:47:51.180 --> 00:47:55.349
问题

00:47:51.809 --> 00:47:58.589
其他问题，我们可以问一个链接

00:47:55.349 --> 00:48:10.759
一秒钟我会尝试一个秤来思考哦

00:47:58.589 --> 00:48:10.759
 C刻度DC粉红副本等于2 

00:48:12.450 --> 00:48:17.960
在哪里缩放

00:48:14.820 --> 00:48:17.960
我们必须看到这个

00:48:27.470 --> 00:48:34.890
没有微型Java 

00:48:31.200 --> 00:48:41.570
我们在这里有两个部分

00:48:34.890 --> 00:48:41.570
事情-现在我们可以三个

00:48:41.840 --> 00:48:45.310
现在这是我的项目

00:48:43.610 --> 00:48:48.620
从github下载，现在我们有三个

00:48:45.310 --> 00:48:50.210
满满的粉虱我明白了

00:48:48.620 --> 00:48:53.240
为什么不使用它的白色

00:48:50.210 --> 00:48:54.890
炸薯条温暖或刺尾，我的答案

00:48:53.240 --> 00:48:55.340
你认为它会更快吗

00:48:54.890 --> 00:48:58.430
比这个

00:48:55.340 --> 00:49:02.290
如果是的话，我会使用它，如果不是，我不会

00:48:58.430 --> 00:49:02.290
好吧

00:49:03.220 --> 00:49:08.740
现在我们有三个实例落后

00:49:05.980 --> 00:49:11.200
 Java EE加微型配置文件的平衡器

00:49:08.740 --> 00:49:15.880
全栈多样的可能体验

00:49:11.200 --> 00:49:18.930
你可以得到，这是最古老的

00:49:15.880 --> 00:49:20.530
通过该设计制作书籍

00:49:18.930 --> 00:49:23.500
这是事实

00:49:20.530 --> 00:49:24.819
如果没有其他任何问题

00:49:23.500 --> 00:49:26.800
会议上，我将向您展示如何构建

00:49:24.819 --> 00:49:29.619
合理的应用程序如何构建它们

00:49:26.800 --> 00:49:35.730
工作”可能会很有趣

00:49:29.619 --> 00:49:35.730
我待在这里所以我没有问题

00:49:38.520 --> 00:49:41.520
是的

00:49:41.660 --> 00:49:45.520
是的，你的谈话是什么时候

00:49:45.630 --> 00:49:51.269
一到十五到五

00:49:49.500 --> 00:49:53.190
艾米丽（Emily）将谈论微观概况和

00:49:51.269 --> 00:49:54.990
你真的应该参加，因为她

00:49:53.190 --> 00:49:57.299
我知道我的个人资料

00:49:54.990 --> 00:49:59.220
只是一个用户，所以我正在使用这些东西， 

00:49:57.299 --> 00:50:01.230
她在设计，如果你不开心

00:49:59.220 --> 00:50:02.759
你今天看到的去找她说

00:50:01.230 --> 00:50:04.650
好吧，你必须改变你知道的

00:50:02.759 --> 00:50:10.109
这会使它复杂化

00:50:04.650 --> 00:50:12.599
真的，所以你必须参加

00:50:10.109 --> 00:50:14.299
会话就像你在说话一样

00:50:12.599 --> 00:50:18.509
在这里哦

00:50:14.299 --> 00:50:21.960
休假还有其他任何问题吗

00:50:18.509 --> 00:50:23.519
如果我下次再也不会知道

00:50:21.960 --> 00:50:26.910
只是做主题演讲，我想我会

00:50:23.519 --> 00:50:34.920
没有更多的人一些幻灯片，它的工作

00:50:26.910 --> 00:50:38.369
南使用微轮廓后是什么

00:50:34.920 --> 00:50:41.400
您喜欢反馈以及哪些领域

00:50:38.369 --> 00:50:44.819
需要改进等等

00:50:41.400 --> 00:50:46.500
您认为有效的领域

00:50:44.819 --> 00:50:49.890
有一些小事情，例如

00:50:46.500 --> 00:50:52.230
健康护士通常会检查您

00:50:49.890 --> 00:50:54.450
得到准备和活力检查

00:50:52.230 --> 00:51:07.980
他们必须分开

00:50:54.450 --> 00:51:10.769
可能已经解决了我的反馈意见是

00:51:07.980 --> 00:51:12.089
很明显，我以为我不放

00:51:10.769 --> 00:51:14.910
因为你已经在做

00:51:12.089 --> 00:51:17.400
可能和，而我不得不说

00:51:14.910 --> 00:51:19.859
我真的很喜欢这个

00:51:17.400 --> 00:51:22.140
个人资料是我们的github项目，因此您可以

00:51:19.859 --> 00:51:23.910
转到github和并且只是帮助和

00:51:22.140 --> 00:51:25.380
拉取请求和大多数人

00:51:23.910 --> 00:51:29.279
我已经知道很多德国人

00:51:25.380 --> 00:51:31.109
来自Red Hat的权利，所以您可以获得

00:51:29.279 --> 00:51:32.849
直接的反馈，你确实有一个很好的

00:51:31.109 --> 00:51:35.519
想法你可以开始自己的项目哦

00:51:32.849 --> 00:51:37.019
 Micro Profiler的另一个杀手级功能

00:51:35.519 --> 00:51:38.880
完全忘了提，但是那里

00:51:37.019 --> 00:51:41.069
我不可能一成不变地向你展示

00:51:38.880 --> 00:51:44.039
我们必须使用钥匙爪的项目

00:51:41.069 --> 00:51:46.380
踢日志打开SSO，这是

00:51:44.039 --> 00:51:49.259
 payara项目，然后您必须

00:51:46.380 --> 00:51:50.400
从from键使用servlet适配器

00:51:49.259 --> 00:51:52.380
时钟哪个

00:51:50.400 --> 00:51:55.470
您最终将拥有更多

00:51:52.380 --> 00:51:57.690
依赖性很大，因此稳定

00:51:55.470 --> 00:52:00.119
来，我们做了这个关键的时钟是

00:51:57.690 --> 00:52:03.150
也关闭了，Micro Profiler附带了

00:52:00.119 --> 00:52:05.609
 GWT Jason Web令牌如此，我们做了什么

00:52:03.150 --> 00:52:07.740
是我们在JSON网站上使用了微型配置文件

00:52:05.609 --> 00:52:10.140
没有任何依赖的标记

00:52:07.740 --> 00:52:13.019
锁，我们想打一场战争，它

00:52:10.140 --> 00:52:14.400
工作完美，这是开放的

00:52:13.019 --> 00:52:16.319
自由有更好的支持或

00:52:14.400 --> 00:52:18.599
更容易的支持是你

00:52:16.319 --> 00:52:20.369
知道我唯一要说的挑战是

00:52:18.599 --> 00:52:22.500
密钥的共享，但这是

00:52:20.369 --> 00:52:23.940
这就像一个密码，所以

00:52:22.500 --> 00:52:26.940
公钥和私钥必须分开

00:52:23.940 --> 00:52:28.799
但例如这又是什么

00:52:26.940 --> 00:52:32.369
有了微轮廓，您可以

00:52:28.799 --> 00:52:33.569
注入这些JSON Web令牌令牌或

00:52:32.369 --> 00:52:35.880
我们怎么称呼这三个部分

00:52:33.569 --> 00:52:40.140
直接进行注射

00:52:35.880 --> 00:52:41.880
 JWT用户将自动转换

00:52:40.140 --> 00:52:44.309
担任校长和所有角色

00:52:41.880 --> 00:52:46.559
开箱即用，这是作为一个

00:52:44.309 --> 00:52:51.000
我的客户很高兴他们说

00:52:46.559 --> 00:52:54.180
这真的很酷，因为我们的网络应用程序不

00:52:51.000 --> 00:52:56.599
有角的，因为我们也知道

00:52:54.180 --> 00:52:59.490
在前端合理，所以我们

00:52:56.599 --> 00:53:01.769
 Web应用程序与单键通话

00:52:59.490 --> 00:53:04.349
登录并使用C JSON Web令牌

00:53:01.769 --> 00:53:05.849
一句话可以追溯到PI时代，我们

00:53:04.349 --> 00:53:08.190
经过身份验证，这是

00:53:05.849 --> 00:53:10.079
真的很棒，所以这是一个开放的API 

00:53:08.190 --> 00:53:12.420
你也可以杀死赃物注释

00:53:10.079 --> 00:53:16.619
我真的很讨厌每个人的依赖

00:53:12.420 --> 00:53:18.059
大摇大摆，然后您将获得JSON Web令牌

00:53:16.619 --> 00:53:20.970
并且来自Java EE 

00:53:18.059 --> 00:53:24.539
帮助我认为巨大的进步是SL 

00:53:20.970 --> 00:53:27.450
我猜是375还是275是安全性API 

00:53:24.539 --> 00:53:29.130
所以你得到一个注射点，你

00:53:27.450 --> 00:53:31.380
拥有您所有的用户和所有

00:53:29.130 --> 00:53:33.180
哈希图中的角色，因此基本上您可以

00:53:31.380 --> 00:53:36.000
实现自己的商店，这非常非常

00:53:33.180 --> 00:53:38.880
内置简单的HTTP身份验证，因此

00:53:36.000 --> 00:53:40.829
我的路线看起来很棒，我的

00:53:38.880 --> 00:53:42.569
只怕优化

00:53:40.829 --> 00:53:44.940
社区将启动Java太大了

00:53:42.569 --> 00:53:46.740
需要50个配置文件，现在我们需要

00:53:44.940 --> 00:53:48.990
知道更好的品种就算了吧

00:53:46.740 --> 00:53:51.240
保持很小的样子，我会

00:53:48.990 --> 00:53:53.220
称之为X开发人员体验， 

00:53:51.240 --> 00:53:55.230
我对雅加达的期望是

00:53:53.220 --> 00:53:56.849
会说您拥有的开发人员的外观

00:53:55.230 --> 00:53:59.009
一个依赖项使用它Mac我更喜欢

00:53:56.849 --> 00:53:59.960
同样，你知道一个炸弹使用它不喜欢

00:53:59.009 --> 00:54:02.270
每个开发人员

00:53:59.960 --> 00:54:05.119
必须拉自己的依赖

00:54:02.270 --> 00:54:08.420
最糟糕的想法是第一个

00:54:05.119 --> 00:54:11.570
白色苍蝇群的版本，你有

00:54:08.420 --> 00:54:13.040
创建那里就像一个maven向导

00:54:11.570 --> 00:54:15.710
您可以在其中放置依赖项

00:54:13.040 --> 00:54:17.420
它创建了一个巨大的机制

00:54:15.710 --> 00:54:19.280
应用服务器与应用程序

00:54:17.420 --> 00:54:21.260
里面的意思是如果我建立

00:54:19.280 --> 00:54:22.700
该应用程序一旦我将重建

00:54:21.260 --> 00:54:24.500
通过应用程序的整个运行时

00:54:22.700 --> 00:54:27.349
我说你疯了，现在他们

00:54:24.500 --> 00:54:29.030
介绍中空罐子的方法更好

00:54:27.349 --> 00:54:30.500
一台应用服务器永远不会构建它

00:54:29.030 --> 00:54:34.220
再一次，你只是在建造什么

00:54:30.500 --> 00:54:37.780
改变确定并确定对比度

00:54:34.220 --> 00:54:40.609
结束，或者我们有两个小时像

00:54:37.780 --> 00:54:43.520
是的，任何问题

00:54:40.609 --> 00:54:48.140
是的，所以这个清单是

00:54:43.520 --> 00:54:54.349
至少一个，不是来自扬声器条形码

00:54:48.140 --> 00:54:57.520
从你那里，好吧，可能是坏兆头

00:54:54.349 --> 00:54:57.520
问题是两个问题

00:55:02.059 --> 00:55:08.210
你有什么经验吗

00:55:04.079 --> 00:55:11.369
带上靴子，所以不是很多，所以你

00:55:08.210 --> 00:55:14.039
其实这是一个有趣的故事

00:55:11.369 --> 00:55:15.599
好吧，去年他们雇用了我

00:55:14.039 --> 00:55:17.369
是我不知道的 spring boot 项目

00:55:15.599 --> 00:55:19.950
那，他们认为这是Java EE 

00:55:17.369 --> 00:55:21.750
他们找到了我，他们给我打电话， 

00:55:19.950 --> 00:55:23.910
他们看起来像没有Java 

00:55:21.750 --> 00:55:29.519
所以我的意思是为什么不，因为它被称为

00:55:23.910 --> 00:55:31.260
 spring boot 好吧，现在我不知道

00:55:29.519 --> 00:55:33.450
关于 spring boot ，所以我做了什么

00:55:31.260 --> 00:55:36.390
这一切都是白色的概念证明

00:55:33.450 --> 00:55:38.640
航班，他们问我为什么如此

00:55:36.390 --> 00:55:39.960
立即快速，因此快速部署

00:55:38.640 --> 00:55:42.089
对不起，我通常不认识别人

00:55:39.960 --> 00:55:43.829
抱怨文凭慢，就像没有

00:55:42.089 --> 00:55:46.109
快得令人难以置信，他们告诉我了什么

00:55:43.829 --> 00:55:48.839
他们正在做那就像我不知道

00:55:46.109 --> 00:55:51.269
那只是在 spring boot 上的一个部署

00:55:48.839 --> 00:55:53.250
花了大约一分钟，他们最终

00:55:51.269 --> 00:55:54.690
罐子里有你的一切

00:55:53.250 --> 00:55:58.529
建立一切，他们总是说是

00:55:54.690 --> 00:56:00.269
为什么我们不知道，大亚试图问

00:55:58.529 --> 00:56:01.799
会议就是他们这样做的原因-我

00:56:00.269 --> 00:56:05.160
得到一个合理的答案，而答案

00:56:01.799 --> 00:56:07.950
是所有其他的罐子，然后拿来我们的

00:56:05.160 --> 00:56:09.569
我们的帐篷在达卡之前和之前开始

00:56:07.950 --> 00:56:12.630
达卡没有层次感，所以如果您

00:56:09.569 --> 00:56:16.049
部署在裸机上获取我们的信息而无需

00:56:12.630 --> 00:56:18.390
任何这样的完美，所以白人

00:56:16.049 --> 00:56:20.730
如果您建立自己的团队，那么战斗群是有意义的

00:56:18.390 --> 00:56:23.160
在裸机上完成运行时，您

00:56:20.730 --> 00:56:24.480
启动Java-您认为很有魅力，但在

00:56:23.160 --> 00:56:26.970
云我想添加分隔

00:56:24.480 --> 00:56:29.069
所以，但是我是一个春季新秀

00:56:26.970 --> 00:56:30.630
趋势问我Java EE合二为一

00:56:29.069 --> 00:56:32.910
他们向我询问有关Java的特殊情况

00:56:30.630 --> 00:56:34.019
并且实际上有 spring boot ，但是他们

00:56:32.910 --> 00:56:36.119
最后很开心，他们继续

00:56:34.019 --> 00:56:37.890
做 spring boot ，我可以帮助他们

00:56:36.119 --> 00:56:40.049
因为最后是Java 

00:56:37.890 --> 00:56:42.619
唯一类似于Java EE的东西

00:56:40.049 --> 00:56:44.690
部署是否不同

00:56:42.619 --> 00:56:46.249
他们从一种主要方法开始

00:56:44.690 --> 00:56:50.529
他们建立了自己的服务器，这就是

00:56:46.249 --> 00:56:54.259
我可以告诉你，是这里的其他人

00:56:50.529 --> 00:56:57.109
是啊，我们什么也没用

00:56:54.259 --> 00:56:59.900
 Web Web标准，以及是否必须

00:56:57.109 --> 00:57:02.299
用我可能会用到的东西

00:56:59.900 --> 00:57:04.309
视图很好视图的问题是

00:57:02.299 --> 00:57:07.369
只是一个开发人员，因此推动因素是

00:57:04.309 --> 00:57:08.930
那里和Paulo Mia有点危险

00:57:07.369 --> 00:57:10.609
也很好，但是如果您有任何问题

00:57:08.930 --> 00:57:13.099
问题你总是可以跟着我

00:57:10.609 --> 00:57:15.920
然后让所有人都感到高兴

00:57:13.099 --> 00:57:18.410
我从未见过一个不高兴的反应开发者

00:57:15.920 --> 00:57:21.279
我从没见过真正的快乐

00:57:18.410 --> 00:57:23.329
开发商，如果他们不是你知道

00:57:21.279 --> 00:57:24.619
如果没有的话，进行函数式编程

00:57:23.329 --> 00:57:26.900
谈论业务逻辑，但是他们

00:57:24.619 --> 00:57:28.819
就像埃里克（Eric）的耶稣（Jes）一样，他们谈论

00:57:26.900 --> 00:57:31.009
美HTTP美元化

00:57:28.819 --> 00:57:32.479
我说好吧，我们正在拿走所有

00:57:31.009 --> 00:57:35.119
可以，但是这里不一样

00:57:32.479 --> 00:57:38.119
你知道不同的不同意见

00:57:35.119 --> 00:57:40.999
有角度的4或5，所以我个人的看法是

00:57:38.119 --> 00:57:44.239
角度1非常好，角度2非常大

00:57:40.999 --> 00:57:46.069
就像我的意见一样，就像所有旧的j2e 

00:57:44.239 --> 00:57:48.140
开发人员非常出色，依此类推

00:57:46.069 --> 00:57:51.109
退出建筑服务，我会说我们做

00:57:48.140 --> 00:57:54.099
在前端和一些相同

00:57:51.109 --> 00:57:57.410
 OSGi组支持的模块

00:57:54.099 --> 00:57:59.299
注射出口然后是

00:57:57.410 --> 00:58:01.369
然后他们接受了

00:57:59.299 --> 00:58:03.859
人们会帮助他们

00:58:01.369 --> 00:58:06.650
命令行界面生成一个

00:58:03.859 --> 00:58:08.900
查看我是否会后悔，我们认识你

00:58:06.650 --> 00:58:10.390
需要命令行界面来创建一个

00:58:08.900 --> 00:58:12.979
他们永远不会飞的Java EE组件

00:58:10.390 --> 00:58:14.390
你会叫我疯，但这是绝对的

00:58:12.979 --> 00:58:17.960
可以有一个命令和界面来

00:58:14.390 --> 00:58:20.749
现在在浏览器中生成一个按钮

00:58:17.960 --> 00:58:24.260
问你几个文件

00:58:20.749 --> 00:58:27.200
如果您从angular开始下载

00:58:24.260 --> 00:58:29.569
你开始想要的角度

00:58:27.200 --> 00:58:31.460
屏幕上的世界你好标准

00:58:29.569 --> 00:58:34.030
我知道多少次打架

00:58:31.460 --> 00:58:37.010
他们向您展示了为什么在节点模块中

00:58:34.030 --> 00:58:44.960
该信息1公司1周大

00:58:37.010 --> 00:58:48.579
有多少人是3000个其他人都知道

00:58:44.960 --> 00:58:51.200
超过32,000个应用服务器和

00:58:48.579 --> 00:58:53.450
为什么我知道这是因为我的备份

00:58:51.200 --> 00:58:55.130
停止工作，我不得不排除

00:58:53.450 --> 00:58:56.809
所有节点模块都无法输入

00:58:55.130 --> 00:58:58.220
所以我有完整的源代码

00:58:56.809 --> 00:58:59.569
白旗最后的愿望或服务和

00:58:58.220 --> 00:59:01.550
他们从来没有问题，现在我

00:58:59.569 --> 00:59:03.109
在角形上有几个按钮

00:59:01.550 --> 00:59:07.190
现在一切都不再起作用了， 

00:59:03.109 --> 00:59:08.960
现在有32,000个节点中的文件

00:59:07.190 --> 00:59:10.880
模块（如果您以按钮开头）和

00:59:08.960 --> 00:59:13.940
每个人都快乐，就像

00:59:10.880 --> 00:59:16.460
轻量级的框架和一点Java是

00:59:13.940 --> 00:59:21.170
慢，因为我看到了服务器中的哪一个

00:59:16.460 --> 00:59:23.780
比这个还小吧

00:59:21.170 --> 00:59:25.940
其他问题和角度是非常

00:59:23.780 --> 00:59:31.640
在欧洲和德国流行的是

00:59:25.940 --> 00:59:34.210
下降，因为它不像是的，不

00:59:31.640 --> 00:59:34.210
然后提问

00:59:34.970 --> 00:59:43.850
现在谢谢你关于什么不的最后一个问题

00:59:39.720 --> 00:59:43.850
十分钟后再见

