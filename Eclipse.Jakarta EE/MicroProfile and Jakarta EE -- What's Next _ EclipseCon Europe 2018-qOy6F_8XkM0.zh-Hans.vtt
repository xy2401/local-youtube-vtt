WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.000 --> 00:00:11.820
 3:45好的，让我们开始吧

00:00:06.629 --> 00:00:14.219
这个房间里真的有回声

00:00:11.820 --> 00:00:16.609
所以今天的会议将是

00:00:14.219 --> 00:00:20.070
谈论之间的这种关系

00:00:16.609 --> 00:00:22.050
提花EEE和云母轮廓

00:00:20.070 --> 00:00:26.070
大概是我的头号问题

00:00:22.050 --> 00:00:29.810
知道我是否参加会议

00:00:26.070 --> 00:00:35.040
来一壶，你知道附近

00:00:29.810 --> 00:00:36.690
用户群，即使在IBM中

00:00:35.040 --> 00:00:38.910
人们来了，我问好什么

00:00:36.690 --> 00:00:39.719
是这种关系，所以我写了一个博客

00:00:38.910 --> 00:00:42.360
关于它

00:00:39.719 --> 00:00:45.059
我得到了很多关注， 

00:00:42.360 --> 00:00:47.820
所以我有点转过头了

00:00:45.059 --> 00:00:57.899
哦，我一点都不在意

00:00:47.820 --> 00:01:00.719
所以把我赶走了，即使在IBM I 

00:00:57.899 --> 00:01:02.940
有人问什么是

00:01:00.719 --> 00:01:07.290
未来或这些之间的关系

00:01:02.940 --> 00:01:10.380
两个，所以我有了这个博客，我决定

00:01:07.290 --> 00:01:13.920
把它变成一个演示文稿，我这是

00:01:10.380 --> 00:01:17.509
我第一次提出它是

00:01:13.920 --> 00:01:20.939
一个演示文稿，我在

00:01:17.509 --> 00:01:24.090
食不能你在这里和在

00:01:20.939 --> 00:01:27.000
 JavaOne或oracle代码一目了然

00:01:24.090 --> 00:01:32.100
双方都接受了

00:01:27.000 --> 00:01:34.020
同一周，所以我要求我们的所有

00:01:32.100 --> 00:01:36.329
 Websphere覆盖我的会议

00:01:34.020 --> 00:01:39.030
在Oracle代码一处，这就是为什么他

00:01:36.329 --> 00:01:42.119
图表上有名字，我必须做所有

00:01:39.030 --> 00:01:45.079
工作，但他你知道他去

00:01:42.119 --> 00:01:47.460
呈现它我会为Oracle代码编写一个

00:01:45.079 --> 00:01:49.259
让我们看看这个问题是什么

00:01:47.460 --> 00:01:50.880
接下来，我们要做的一件事

00:01:49.259 --> 00:01:52.799
我有更好的会议安排吗

00:01:50.880 --> 00:01:55.680
明年，以便我们没有这个

00:01:52.799 --> 00:01:57.719
重叠的类型，所以我知道日食

00:01:55.680 --> 00:01:59.939
骗局欧洲无法改变，我们有一个

00:01:57.719 --> 00:02:01.590
合同到位，所以这不是

00:01:59.939 --> 00:02:04.380
搬来已经是同一周了

00:02:01.590 --> 00:02:06.329
十月这么多年，希望甲骨文

00:02:04.380 --> 00:02:10.399
弄清楚他们的比赛，他们可以移动

00:02:06.329 --> 00:02:10.399
到更好的时间框架

00:02:10.720 --> 00:02:18.250
关于我的一小部分

00:02:12.880 --> 00:02:22.180
在Java EE中像

00:02:18.250 --> 00:02:25.090
剖析Java EE的下层组件

00:02:22.180 --> 00:02:29.440
我去过哪个APA和JC 

00:02:25.090 --> 00:02:32.440
我来自IBM几年

00:02:29.440 --> 00:02:33.970
罗切斯特实验室和我做过的一件事

00:02:32.440 --> 00:02:36.970
我一直在寻找

00:02:33.970 --> 00:02:38.740
与周围的人

00:02:36.970 --> 00:02:40.720
会议上，他们不确定在哪里

00:02:38.740 --> 00:02:42.940
明尼苏达州罗切斯特（Rochester Minnesota）听说过

00:02:40.720 --> 00:02:44.709
纽约罗切斯特，但不是罗彻斯特

00:02:42.940 --> 00:02:46.750
明尼苏达州，所以我想我会告诉哪里

00:02:44.709 --> 00:02:49.209
那是明尼苏达州的那种

00:02:46.750 --> 00:02:52.780
美国中部靠近加拿大，但

00:02:49.209 --> 00:02:55.209
不完全是，但后来人们问

00:02:52.780 --> 00:02:57.850
好吧，众所周知，你还知道什么

00:02:55.209 --> 00:03:00.010
 IBM罗切斯特还有什么，所以也许

00:02:57.850 --> 00:03:03.490
您听说过梅奥诊所

00:03:00.010 --> 00:03:06.070
所以梅奥诊所是一个民族世界

00:03:03.490 --> 00:03:12.810
那个著名的医疗机构

00:03:06.070 --> 00:03:17.410
始于明尼苏达州罗切斯特市

00:03:12.810 --> 00:03:19.330
 Java 1 2015日元，我实际上做了

00:03:17.410 --> 00:03:23.140
 JavaOne联合会议

00:03:19.330 --> 00:03:25.030
我们以Java EE的形式问了这个问题

00:03:23.140 --> 00:03:28.510
还是相关的还是大象

00:03:25.030 --> 00:03:31.209
而背后的想法是我们没有

00:03:28.510 --> 00:03:32.950
知道Java EE发生了什么

00:03:31.209 --> 00:03:35.860
没有看到我们的进步

00:03:32.950 --> 00:03:38.110
预计当然会看到Java EE 8 

00:03:35.860 --> 00:03:41.650
还没出来还没定义

00:03:38.110 --> 00:03:44.230
那时你知道我们只是没有

00:03:41.650 --> 00:03:45.910
看到活动，所以我们不知道

00:03:44.230 --> 00:03:48.840
真的发生了，我们知道

00:03:45.910 --> 00:03:51.220
微服务真的起飞了， 

00:03:48.840 --> 00:03:55.750
我们该怎么办

00:03:51.220 --> 00:03:58.180
企业Java角度

00:03:55.750 --> 00:04:02.290
 2015年底，因为9月

00:03:58.180 --> 00:04:04.750
 2016年初的10月是

00:04:02.290 --> 00:04:06.700
在devoxx UK，我们中的一些人

00:04:04.750 --> 00:04:09.390
一起开始谈论这个

00:04:06.700 --> 00:04:11.590
问题，我们该怎么办

00:04:09.390 --> 00:04:14.560
支持微服务

00:04:11.590 --> 00:04:17.229
企业Java空间我们所需要的东西

00:04:14.560 --> 00:04:19.510
想出了微观概况

00:04:17.229 --> 00:04:22.870
其实想出了这个名字

00:04:19.510 --> 00:04:24.600
在我之前的谈话中，您知道雅加达

00:04:22.870 --> 00:04:26.830
过了一会儿

00:04:24.600 --> 00:04:28.180
我们实际上想出的Micra个人资料

00:04:26.830 --> 00:04:30.430
这个名字先于我们

00:04:28.180 --> 00:04:33.160
定义了我们想要的内容

00:04:30.430 --> 00:04:36.010
支持微服务，所以它是微服务

00:04:33.160 --> 00:04:40.780
我们认为的服务概况

00:04:36.010 --> 00:04:44.740
当时我们知道

00:04:40.780 --> 00:04:47.020
社区，我们需要它成为或

00:04:44.740 --> 00:04:50.950
新项目，我们需要它成为社区

00:04:47.020 --> 00:04:53.650
驱使我们需要人们参与

00:04:50.950 --> 00:04:55.630
不，我们不想要一个

00:04:53.650 --> 00:04:58.210
特定的卖方或个人

00:04:55.630 --> 00:05:00.130
推动我们想要共同努力

00:04:58.210 --> 00:05:03.250
社区的努力

00:05:00.130 --> 00:05:07.690
透明的非常公开的对话

00:05:03.250 --> 00:05:09.730
打开论坛，打开讨论，我认为

00:05:07.690 --> 00:05:12.640
你知道总体上我们已经完成了

00:05:09.730 --> 00:05:14.740
另一个关键是我们决定

00:05:12.640 --> 00:05:17.640
我们不希望参考实现

00:05:14.740 --> 00:05:20.290
我们知道我们想做规格

00:05:17.640 --> 00:05:23.860
 API和tcks 

00:05:20.290 --> 00:05:26.470
我们不想有一个

00:05:23.860 --> 00:05:28.540
参考实施的所有

00:05:26.470 --> 00:05:31.630
供应商必须参加

00:05:28.540 --> 00:05:33.610
创造和支持什么

00:05:31.630 --> 00:05:37.930
真正的意思是，随着我们发展

00:05:33.610 --> 00:05:40.390
规格也许戴红色帽子是

00:05:37.930 --> 00:05:43.330
驾驶规范之一等等

00:05:40.390 --> 00:05:47.200
他们开发了兼容的实现

00:05:43.330 --> 00:05:49.750
现在使用野生蝇或刺尾巴

00:05:47.200 --> 00:05:51.700
很好，然后也许iBM正在领先

00:05:49.750 --> 00:05:53.560
另一个规范，我们做一个

00:05:51.700 --> 00:05:55.810
开放兼容的实现

00:05:53.560 --> 00:05:57.010
我们决定的自由就可以了

00:05:55.810 --> 00:06:00.370
我们不想有一个

00:05:57.010 --> 00:06:03.250
参考实施及其他

00:06:00.370 --> 00:06:07.150
关键是我们要更敏捷

00:06:03.250 --> 00:06:10.450
我们习惯于迭代处理

00:06:07.150 --> 00:06:12.460
 Java EE建立新平台花了好几年

00:06:10.450 --> 00:06:14.350
出来花了好几年

00:06:12.460 --> 00:06:16.300
组件发布我的意思是甚至像

00:06:14.350 --> 00:06:17.860
需要的维护版本

00:06:16.300 --> 00:06:20.800
整个过程需要很多年

00:06:17.860 --> 00:06:22.180
而且我们不想一件事

00:06:20.800 --> 00:06:24.490
因为要花很多时间

00:06:22.180 --> 00:06:27.190
资源，但麦克您的服务是

00:06:24.490 --> 00:06:28.960
如此迅速地移动，是不可能的

00:06:27.190 --> 00:06:30.670
如果我们能够赶上

00:06:28.960 --> 00:06:33.610
没有更灵活的过程，所以

00:06:30.670 --> 00:06:35.140
这些是三个关键特征

00:06:33.610 --> 00:06:38.080
我们为微型车而努力

00:06:35.140 --> 00:06:41.379
个人资料，因此，如果您还记得

00:06:38.080 --> 00:06:43.090
我们在devoxx于2016年初谈论了它

00:06:41.379 --> 00:06:47.020
英国，我认为那是二月三月

00:06:43.090 --> 00:06:49.479
那年9月的时间表

00:06:47.020 --> 00:06:52.659
已经确定我们要成为一个团队

00:06:49.479 --> 00:06:54.759
宣布Micro Profile 1.0以及什么

00:06:52.659 --> 00:06:57.159
比在JavaOne上更好的位置

00:06:54.759 --> 00:07:01.090
这就是我们想要做的

00:06:57.159 --> 00:07:04.120
 Java当然没有我们的会议

00:07:01.090 --> 00:07:05.770
被接受，所以我们无法进去

00:07:04.120 --> 00:07:10.300
并有一个会议

00:07:05.770 --> 00:07:13.690
宣布它为一个社区

00:07:10.300 --> 00:07:16.930
实际上在另一个地方租了另一个房间

00:07:13.690 --> 00:07:17.949
酒店，我们通过了所有卡，我们

00:07:16.930 --> 00:07:20.710
说，嘿，我们要去一点

00:07:17.949 --> 00:07:23.139
你知道的公告来了， 

00:07:20.710 --> 00:07:25.810
你知道我们要宣布这一点

00:07:23.139 --> 00:07:29.169
 Micra profile 1.0我们有一个很好的

00:07:25.810 --> 00:07:31.900
现在的投票率也许是因为我们也

00:07:29.169 --> 00:07:34.090
我在酒店提供免费午餐

00:07:31.900 --> 00:07:38.440
不知道，但我们有大约120个人

00:07:34.090 --> 00:07:41.560
出现，所以我们看到了一种兴趣

00:07:38.440 --> 00:07:43.330
真的帮助我们继续前进，因为我们

00:07:41.560 --> 00:07:45.550
真的不知道我是说我们知道

00:07:43.330 --> 00:07:48.099
供应商，我们需要做些什么

00:07:45.550 --> 00:07:51.190
很好地从中获取输入

00:07:48.099 --> 00:07:54.610
当时的客户

00:07:51.190 --> 00:07:58.270
我们定义微观轮廓是这三个

00:07:54.610 --> 00:08:01.419
 Java EE中的功能CDI jax-rs 

00:07:58.270 --> 00:08:04.240
和json p，而这就是我们

00:08:01.419 --> 00:08:07.990
说那是你需要的最低要求

00:08:04.240 --> 00:08:12.190
现在创建一个微服务吧

00:08:07.990 --> 00:08:15.639
快闪两年两年

00:08:12.190 --> 00:08:18.580
上周我们的时间非常短

00:08:15.639 --> 00:08:22.000
宣布Mike的个人资料2.1 

00:08:18.580 --> 00:08:25.539
两年内第七次平台发布

00:08:22.000 --> 00:08:29.590
和第十七个组件发布

00:08:25.539 --> 00:08:31.419
打开跟踪1.2，现在您从我们知道

00:08:29.590 --> 00:08:33.370
令人印象深刻的观点

00:08:31.419 --> 00:08:36.329
两年的时间框架将其震撼

00:08:33.370 --> 00:08:39.909
许多不同规格的转速

00:08:36.329 --> 00:08:43.630
通过API更新tcks更新

00:08:39.909 --> 00:08:45.310
和兼容的实现

00:08:43.630 --> 00:08:48.190
我们可以标记一个的唯一方法

00:08:45.310 --> 00:08:50.589
规范是否完整是

00:08:48.190 --> 00:08:51.900
具有兼容的实现

00:08:50.589 --> 00:08:56.190
通过TCK 

00:08:51.900 --> 00:09:00.420
所以从我们的角度来看这很漂亮

00:08:56.190 --> 00:09:01.980
令人印象深刻的微观轮廓，我们仍然

00:09:00.420 --> 00:09:03.630
我的意思是有些积压的东西

00:09:01.980 --> 00:09:05.130
我们还没有完成，我们还有其他事情

00:09:03.630 --> 00:09:07.230
我们正在努力，我们有一些

00:09:05.130 --> 00:09:09.360
我们正在做的反应性工作

00:09:07.230 --> 00:09:12.390
看米卡的轮廓如何适合

00:09:09.360 --> 00:09:13.800
与服务网格或有一些

00:09:12.390 --> 00:09:15.360
并发完成的事情

00:09:13.800 --> 00:09:17.220
有事情要做，有一个

00:09:15.360 --> 00:09:19.529
会议于本周初

00:09:17.220 --> 00:09:21.960
长期运行或长期运行

00:09:19.529 --> 00:09:25.140
交易是否更有意义

00:09:21.960 --> 00:09:28.589
而且我们还有其他更新

00:09:25.140 --> 00:09:32.089
当前组件，所有这些都在

00:09:28.589 --> 00:09:36.510
现在的作品，我应该指出

00:09:32.089 --> 00:09:39.150
我将要发布的图表平台有一个

00:09:36.510 --> 00:09:41.670
每一个对应的页面

00:09:39.150 --> 00:09:43.860
这些技术给了一点

00:09:41.670 --> 00:09:46.860
每个链接的背景

00:09:43.860 --> 00:09:49.920
该项目并链接到我们的github和

00:09:46.860 --> 00:09:51.720
这样您可以查找更多

00:09:49.920 --> 00:09:54.420
信息，如果你想要，但因为我有

00:09:51.720 --> 00:09:58.950
涵盖这两个主题今天我不能去

00:09:54.420 --> 00:10:00.240
深入到每个细节

00:09:58.950 --> 00:10:03.900
我提到过兼容

00:10:00.240 --> 00:10:06.720
您将看到的实现就是我们

00:10:03.900 --> 00:10:11.880
有十多种兼容

00:10:06.720 --> 00:10:13.709
是的，哦，我看到了约翰

00:10:11.880 --> 00:10:21.779
那里指向我以为他是什么

00:10:13.709 --> 00:10:25.650
指着我很抱歉

00:10:21.779 --> 00:10:28.620
您让我知道还可以

00:10:25.650 --> 00:10:30.450
兼容的实现，这就是

00:10:28.620 --> 00:10:32.760
我是说我们没有参考

00:10:30.450 --> 00:10:34.800
实现位于

00:10:32.760 --> 00:10:38.790
如果您去那里，则在此页底部

00:10:34.800 --> 00:10:42.630
您可以看到带有链接的确切版本

00:10:38.790 --> 00:10:44.910
每个兼容的实现

00:10:42.630 --> 00:10:47.790
相应的组件发布为

00:10:44.910 --> 00:10:50.100
以及平台版本和

00:10:47.790 --> 00:10:52.470
页面持续了一段时间，因为

00:10:50.100 --> 00:10:54.360
所有这些活动中

00:10:52.470 --> 00:10:56.750
这些支持微型的团体

00:10:54.360 --> 00:10:56.750
轮廓

00:11:03.780 --> 00:11:08.500
好吧，那有点

00:11:06.430 --> 00:11:10.810
微型个人资料现在我要谈一点

00:11:08.500 --> 00:11:12.040
在开始之前先介绍一下提花EEE 

00:11:10.810 --> 00:11:15.340
你知道谈论这种关系

00:11:12.040 --> 00:11:18.340
在两者之间，所以如果您还记得Java 

00:11:15.340 --> 00:11:21.460
以及我们与微观个人资料的讨论

00:11:18.340 --> 00:11:27.910
开始于2015年末，但实际上

00:11:21.460 --> 00:11:30.100
在2016年起飞2017年Oracle正在尝试

00:11:27.910 --> 00:11:32.460
看到他们看到的一切

00:11:30.100 --> 00:11:35.980
他们看到的带有微轮廓的活动

00:11:32.460 --> 00:11:38.080
所有这些供应商都参与其中

00:11:35.980 --> 00:11:39.580
他们看到了进步

00:11:38.080 --> 00:11:41.530
我们正在制作此微型配置文件， 

00:11:39.580 --> 00:11:44.710
他们在说好吧，我们要做

00:11:41.530 --> 00:11:46.930
 Java EE有所不同，所以他们

00:11:44.710 --> 00:11:49.270
接触了我们一些供应商并说

00:11:46.930 --> 00:11:51.520
嗯，如果我们开门，你会怎么想

00:11:49.270 --> 00:11:53.620
 Java EE的源代码，就像我们

00:11:51.520 --> 00:11:57.610
只是说太好了，我的意思是我们一直

00:11:53.620 --> 00:12:00.160
希望将Java EE从Oracle淘汰

00:11:57.610 --> 00:12:03.100
长时间握紧，对他们来说

00:12:00.160 --> 00:12:06.340
提出这个，我们认为那只是一个

00:12:03.100 --> 00:12:08.800
如果您曾经

00:12:06.340 --> 00:12:12.840
听各种会议

00:12:08.800 --> 00:12:16.480
周这不是一件容易的事

00:12:12.840 --> 00:12:18.580
基本上我不应该说专有的

00:12:16.480 --> 00:12:21.490
但是有很多专有工具

00:12:18.580 --> 00:12:24.100
在TCK中是专有的

00:12:21.490 --> 00:12:25.690
专有信息以及

00:12:24.100 --> 00:12:28.180
一些社区推动的东西来自

00:12:25.690 --> 00:12:31.000
必须迁移到新版本中的Java EE 

00:12:28.180 --> 00:12:34.210
使用Jakarta EE及其它的Eclipse空间

00:12:31.000 --> 00:12:37.330
事情花了很多时间

00:12:34.210 --> 00:12:41.080
我们正在努力的是我们必须全力以赴

00:12:37.330 --> 00:12:43.750
我们在Java EE中的项目将其移动

00:12:41.080 --> 00:12:45.790
遮住食，使他们通过

00:12:43.750 --> 00:12:47.860
过程中，您会注意到我们在做

00:12:45.790 --> 00:12:50.680
很好，您知道大多数

00:12:47.860 --> 00:12:54.190
项目占80％，这意味着

00:12:50.680 --> 00:12:56.230
项目已全部配置

00:12:54.190 --> 00:12:58.530
所有代码都移到了我们

00:12:56.230 --> 00:13:01.090
能够构建它，我们能够对其进行测试

00:12:58.530 --> 00:13:05.650
但是大多数情况下我们还没有做

00:13:01.090 --> 00:13:09.400
却正在进行日食检查或

00:13:05.650 --> 00:13:11.410
月食释放和那里

00:13:09.400 --> 00:13:13.570
与之相关的过程

00:13:11.410 --> 00:13:17.500
看到我们有一些

00:13:13.570 --> 00:13:20.470
使那个里程碑成为其中的几个

00:13:17.500 --> 00:13:22.690
是现有的Eclipse项目，所以他们

00:13:20.470 --> 00:13:27.430
知道如何做蚀发布

00:13:22.690 --> 00:13:30.400
是的，使用json是JSONP和eclipse 

00:13:27.430 --> 00:13:33.070
链接，但您还注意到有两个

00:13:30.400 --> 00:13:34.960
其他的jax-rs和servlet，他们

00:13:33.070 --> 00:13:37.810
弄清楚了所有的过程

00:13:34.960 --> 00:13:40.270
现在就在eclipse中发布

00:13:37.810 --> 00:13:44.140
为了做释放之一

00:13:40.270 --> 00:13:46.720
我们需要的是CI CD管道

00:13:44.140 --> 00:13:49.900
这是一项重要的工作

00:13:46.720 --> 00:13:53.020
对我们来说，那些项目中的每一个

00:13:49.900 --> 00:13:56.610
我每个人只有39个

00:13:53.020 --> 00:13:59.020
他们中可能有三四个

00:13:56.610 --> 00:14:01.360
仓库github仓库和

00:13:59.020 --> 00:14:03.580
每个人都需要詹金斯

00:14:01.360 --> 00:14:08.980
进行每晚构建的管道

00:14:03.580 --> 00:14:11.980
然后在第二天上午发布版本

00:14:08.980 --> 00:14:14.650
进步给我留下了深刻的印象，我

00:14:11.980 --> 00:14:16.120
知道Dimitri是来自Oracle的那个人

00:14:14.650 --> 00:14:18.040
一个推动了很多

00:14:16.120 --> 00:14:20.800
工作，但这确实是社区的努力

00:14:18.040 --> 00:14:25.780
多人多人的地方

00:14:20.800 --> 00:14:28.540
参与其中，当我刚开始时，你知道我

00:14:25.780 --> 00:14:30.370
在我的图表中将此作为保留点

00:14:28.540 --> 00:14:33.970
甲板，当我第一次放这个

00:14:30.370 --> 00:14:37.840
大约两个星期前在一起

00:14:33.970 --> 00:14:40.060
嗯，让我们来获取光速

00:14:37.840 --> 00:14:43.240
正确，正确的数字

00:14:40.060 --> 00:14:46.900
我第一次输入此图表时说81 

00:14:43.240 --> 00:14:49.960
在一起说五个好，那只是

00:14:46.900 --> 00:14:53.710
像两个星期前，也许是两个和一个

00:14:49.960 --> 00:14:55.870
半个星期前好吧，这是81我做了

00:14:53.710 --> 00:14:57.820
剪切粘贴

00:14:55.870 --> 00:14:59.860
上周五，在我上飞机之前

00:14:57.820 --> 00:15:02.860
我以为就是今天早上

00:14:59.860 --> 00:15:06.280
想好了，我们现在在哪里可以

00:15:02.860 --> 00:15:08.740
看到我们已经98岁了，我们只剩下一个

00:15:06.280 --> 00:15:10.900
需要在这里做更多的事情

00:15:08.740 --> 00:15:13.780
被分配，所以我们做得很棒

00:15:10.900 --> 00:15:15.160
在完成这个方面的进展，所以

00:15:13.780 --> 00:15:18.520
你有点想知道所有做什么

00:15:15.160 --> 00:15:21.520
这确实与整体有关

00:15:18.520 --> 00:15:23.390
处理好我们想要的大事情

00:15:21.520 --> 00:15:27.380
获得Eclipse GlassFish 

00:15:23.390 --> 00:15:29.660
我们希望它兼容Java EE 8 

00:15:27.380 --> 00:15:32.300
为了做到这一点，我们要确保

00:15:29.660 --> 00:15:35.510
我们正在建立一切

00:15:32.300 --> 00:15:37.190
在Eclipse中，因此我们希望所有这些

00:15:35.510 --> 00:15:39.560
组件，我是说所有这些

00:15:37.190 --> 00:15:42.170
组件和所有这些存储库

00:15:39.560 --> 00:15:45.110
正在构建Eclipse工件，以便我们

00:15:42.170 --> 00:15:48.470
可以构建Eclipse GlassFish 

00:15:45.110 --> 00:15:51.890
过去的周末，我们得到了RC 

00:15:48.470 --> 00:15:53.210
 Eclipse GlassFish 5.1和我们的

00:15:51.890 --> 00:15:55.940
主要的观点

00:15:53.210 --> 00:15:57.350
现在准备的成就

00:15:55.940 --> 00:16:02.870
仍然必须完成其余的

00:15:57.350 --> 00:16:05.240
 ECI CD任务，然后您知道

00:16:02.870 --> 00:16:06.980
我们会继续，我想我们会

00:16:05.240 --> 00:16:09.050
大概会有几个RC 

00:16:06.980 --> 00:16:10.700
实际完成之前的候选人

00:16:09.050 --> 00:16:16.630
但是我们正在进步

00:16:10.700 --> 00:16:18.800
制作最终的Eclipse GlassFish 5.1 

00:16:16.630 --> 00:16:21.290
另一件事正在占用

00:16:18.800 --> 00:16:24.620
我们很多时间都在定义

00:16:21.290 --> 00:16:27.290
新的规范流程，因为我们

00:16:24.620 --> 00:16:29.650
接管我们需要的JCP 

00:16:27.290 --> 00:16:31.850
比这更严格的东西

00:16:29.650 --> 00:16:34.070
基本上我们要做的是建立个人资料

00:16:31.850 --> 00:16:37.810
我们的是你会发现一点点

00:16:34.070 --> 00:16:39.650
我们的比较宽松

00:16:37.810 --> 00:16:42.260
提花EEE 

00:16:39.650 --> 00:16:46.400
他们需要更明确的流程

00:16:42.260 --> 00:16:48.650
在这种情况下还有更多拥有权，因此我们需要

00:16:46.400 --> 00:16:51.740
这个过程会有点

00:16:48.650 --> 00:16:54.560
更接近JCP定义的

00:16:51.740 --> 00:16:57.020
有一个公共草案我会

00:16:54.560 --> 00:17:01.910
真的要敦促大家，如果有的话

00:16:57.020 --> 00:17:03.920
请对Java EE感兴趣Jakarta EE 

00:17:01.910 --> 00:17:06.380
看一下这个过程，即使

00:17:03.920 --> 00:17:08.780
你知道你是否讨厌我

00:17:06.380 --> 00:17:11.329
过程我的意思是我不喜欢它

00:17:08.780 --> 00:17:13.520
要么，但如果你看看它

00:17:11.329 --> 00:17:17.540
看看你是否知道

00:17:13.520 --> 00:17:19.370
将为您或不会为我们工作

00:17:17.540 --> 00:17:21.680
随着我们前进的项目，我们将

00:17:19.370 --> 00:17:23.600
感谢我们切断的输入

00:17:21.680 --> 00:17:26.530
十月底的审查期

00:17:23.600 --> 00:17:29.270
然后我们将不得不经历

00:17:26.530 --> 00:17:31.430
希望我们知道你不会

00:17:29.270 --> 00:17:33.410
收到大量我给我们的评论

00:17:31.430 --> 00:17:36.020
重新开始，希望我们可以

00:17:33.410 --> 00:17:36.980
你知道把那些合并，我们可以

00:17:36.020 --> 00:17:41.419
得到

00:17:36.980 --> 00:17:44.210
最后的草案已经发布，我们很幸运

00:17:41.419 --> 00:17:47.600
因为我们有一个项目

00:17:44.210 --> 00:17:50.179
自愿做豚鼠，所以它是一个

00:17:47.600 --> 00:17:52.850
新项目，很好，现有

00:17:50.179 --> 00:17:55.220
 eclipse中的项目，但它有一个

00:17:52.850 --> 00:17:56.690
实施，所以我们要做的是

00:17:55.220 --> 00:17:59.720
他们将创建一个新的

00:17:56.690 --> 00:18:01.809
提案的规格项目是

00:17:59.720 --> 00:18:04.360
公开它已经在那里

00:18:01.809 --> 00:18:06.350
他们将尝试遵循我们的

00:18:04.360 --> 00:18:09.770
我们正在定义的过程

00:18:06.350 --> 00:18:11.480
希望使用该过程，我们可以

00:18:09.770 --> 00:18:13.669
弄清楚好吗？ 

00:18:11.480 --> 00:18:16.100
我们的过程以及颠簸在哪里

00:18:13.669 --> 00:18:18.320
 jano SQL，让我们看看是否可以

00:18:16.100 --> 00:18:20.650
解决这个问题，所以团队一直非常

00:18:18.320 --> 00:18:23.390
很高兴与他们合作，他们愿意

00:18:20.650 --> 00:18:27.860
前进时遇到一些颠簸和擦伤

00:18:23.390 --> 00:18:30.470
通过这个，我们还有其他的东西

00:18:27.860 --> 00:18:33.049
当然，我们得到

00:18:30.470 --> 00:18:34.610
规范提出后甚至说

00:18:33.049 --> 00:18:36.530
因为我们已经在研究这些

00:18:34.610 --> 00:18:38.809
我们必须弄清楚是什么

00:18:36.530 --> 00:18:42.049
将成为我们的TCK合规流程

00:18:38.809 --> 00:18:45.530
好，JCP有一个将要发生的事情

00:18:42.049 --> 00:18:48.410
我们的TCK许可证

00:18:45.530 --> 00:18:51.260
在TCK获得许可，以便我们保护

00:18:48.410 --> 00:18:54.049
我们必须定义雅加达EEE的品牌

00:18:51.260 --> 00:18:56.059
那和规格许可证

00:18:54.049 --> 00:18:58.700
如果我们知道您知道类似类型的事情

00:18:56.059 --> 00:19:01.280
有需要的人员供应商项目

00:18:58.700 --> 00:19:02.299
实施即将到来的规范

00:19:01.280 --> 00:19:04.460
从雅加达EEE 

00:19:02.299 --> 00:19:07.070
那是什么许可模式，因为我们

00:19:04.460 --> 00:19:13.250
需要保护通过的IP流

00:19:07.070 --> 00:19:15.350
这整个过程还可以，所以现在我有点

00:19:13.250 --> 00:19:17.870
介绍了一些关于微

00:19:15.350 --> 00:19:20.870
在Jakarta EE上进行一些配置

00:19:17.870 --> 00:19:24.770
两者之间有什么相似之处

00:19:20.870 --> 00:19:26.059
他们很好，其中之一是我们都是我

00:19:24.770 --> 00:19:28.100
意思是如果您阅读我们的任务，他们

00:19:26.059 --> 00:19:29.990
听起来差不多，我们俩

00:19:28.100 --> 00:19:34.610
对微服务开发感兴趣

00:19:29.990 --> 00:19:37.280
和云原生Java的关键方面

00:19:34.610 --> 00:19:40.820
我们的使命宣言我们都想要更多

00:19:37.280 --> 00:19:43.970
我们都有敏捷开发实践

00:19:40.820 --> 00:19:45.559
在JCP的陪伴下长大， 

00:19:43.970 --> 00:19:47.360
花费的时间长度

00:19:45.559 --> 00:19:50.269
这样我们可以做得更好

00:19:47.360 --> 00:19:54.499
这次，我们想要

00:19:50.269 --> 00:19:56.659
编码第一心态好吧，我们要证明

00:19:54.499 --> 00:20:00.529
这些概念

00:19:56.659 --> 00:20:03.169
规范我使用的示例

00:20:00.529 --> 00:20:05.809
你回想这回去的方式

00:20:03.169 --> 00:20:08.359
但是j2ee有一点，但我不知道两点

00:20:05.809 --> 00:20:12.409
或三个，他们定义了实体光束

00:20:08.359 --> 00:20:15.469
定义的EJ B的模型

00:20:12.409 --> 00:20:18.289
没有任何经验证据

00:20:15.469 --> 00:20:21.169
编码将永远可行，那仅仅是

00:20:18.289 --> 00:20:22.879
 EJB的每个实现都失败

00:20:21.169 --> 00:20:27.729
来自所有不同的实体bean 

00:20:22.879 --> 00:20:27.729
他们根本不兼容的供应商

00:20:27.909 --> 00:20:34.789
看一下EJB的另一半

00:20:31.609 --> 00:20:36.979
与JP一起在Java EE 5中问世了

00:20:34.789 --> 00:20:39.469
那是一个成功的故事，但是为什么呢

00:20:36.979 --> 00:20:41.809
成功是因为它基于

00:20:39.469 --> 00:20:44.329
在发生的事情上

00:20:41.809 --> 00:20:46.849
行业特别是休眠

00:20:44.329 --> 00:20:49.459
 JPA和他们参加了

00:20:46.849 --> 00:20:51.469
该规范的定义，并具有

00:20:49.459 --> 00:20:56.359
从一个非常成功的

00:20:51.469 --> 00:20:58.159
持久性的立场好，所以我把

00:20:56.359 --> 00:20:59.509
备份此图表，因为这就是

00:20:58.159 --> 00:21:01.759
我们从微开始

00:20:59.509 --> 00:21:04.759
个人资料，我认为还是这样

00:21:01.759 --> 00:21:07.789
适用于Jakarta EE工作

00:21:04.759 --> 00:21:10.690
我们是社区推动的

00:21:07.789 --> 00:21:13.129
许多不同的供应商和个人

00:21:10.690 --> 00:21:15.859
两者都在工作的项目

00:21:13.129 --> 00:21:18.769
投影微轮廓和雅加达

00:21:15.859 --> 00:21:21.379
 EE无参考的想法

00:21:18.769 --> 00:21:24.079
我们一直在努力的实现

00:21:21.379 --> 00:21:27.589
雅加达EE我们把这个想法带了过来

00:21:24.079 --> 00:21:30.799
从他们购买的微型资料中

00:21:27.589 --> 00:21:33.440
所以Jakarta EE小组说好吧

00:21:30.799 --> 00:21:34.759
您现在想要参考实施

00:21:33.440 --> 00:21:36.440
澄清一些事情，因为我

00:21:34.759 --> 00:21:38.959
猜到有人在想

00:21:36.440 --> 00:21:41.539
因为我之前提到过GlassFish 

00:21:38.959 --> 00:21:43.969
好像还可以，不是GlassFish 

00:21:41.539 --> 00:21:47.379
参考实现

00:21:43.969 --> 00:21:50.119
 Java EE 8的参考实现

00:21:47.379 --> 00:21:52.369
我们必须启动并运行

00:21:50.119 --> 00:21:54.999
在eclipse中，以便我们拥有Java EE 

00:21:52.369 --> 00:21:58.190
八个参考实现相匹配

00:21:54.999 --> 00:22:01.299
好的，那点之后，当我们开始

00:21:58.190 --> 00:22:03.800
定义其他Jakarta ee9或

00:22:01.299 --> 00:22:07.050
个别组件

00:22:03.800 --> 00:22:09.360
 GlassFish也许会在我的周围

00:22:07.050 --> 00:22:12.660
您知道并且仍在使用中，但也许

00:22:09.360 --> 00:22:16.080
我们将使用野生苍蝇或荆棘故事作为

00:22:12.660 --> 00:22:16.800
实施还可以，所以

00:22:16.080 --> 00:22:19.320
向前

00:22:16.800 --> 00:22:22.140
但是我们需要GlassFish成为Java EE 

00:22:19.320 --> 00:22:26.070
八个兼容，另一个在这里

00:22:22.140 --> 00:22:29.640
我们的轻量级迭代过程

00:22:26.070 --> 00:22:31.200
知道我们不能让雅加达EE行动

00:22:29.640 --> 00:22:33.960
和我们一直在做的一样快

00:22:31.200 --> 00:22:36.780
微个人资料绝对了解

00:22:33.960 --> 00:22:40.890
但是我们确实需要比我们更快的速度

00:22:36.780 --> 00:22:42.750
使用JCP和Java EE完成了所有工作

00:22:40.890 --> 00:22:46.860
我认为是相对的方式

00:22:42.750 --> 00:22:48.180
好的，所以有些差异和

00:22:46.860 --> 00:22:53.940
我已经被一对夫妇感动了

00:22:48.180 --> 00:22:56.340
这些，所以Microsoft I Microsoft 

00:22:53.940 --> 00:22:59.870
实际上是这个成员，所以我

00:22:56.340 --> 00:23:02.910
意味着我们的Micra个人资料

00:22:59.870 --> 00:23:06.180
完善的迭代发布

00:23:02.910 --> 00:23:08.390
正如我提到的七个主要过程

00:23:06.180 --> 00:23:11.070
发布十七个组件版本

00:23:08.390 --> 00:23:12.990
 Jakarta EE无法实现

00:23:11.070 --> 00:23:16.740
跟上我们正在看的

00:23:12.990 --> 00:23:19.020
也许一或一或两个主要

00:23:16.740 --> 00:23:21.840
每年的发行量可能只是一个

00:23:19.020 --> 00:23:25.380
好吧，这是不同比例的雅加达ee 

00:23:21.840 --> 00:23:27.150
比微观轮廓大得多

00:23:25.380 --> 00:23:30.780
必须记住这不会

00:23:27.150 --> 00:23:32.730
完全匹配米迦

00:23:30.780 --> 00:23:36.210
个人资料从来都不是一个

00:23:32.730 --> 00:23:38.520
我们从未有过这样的意图

00:23:36.210 --> 00:23:40.790
弥迦简介的想法是

00:23:38.520 --> 00:23:44.040
创新，是否以及何时

00:23:40.790 --> 00:23:45.750
应该成为一个标准，那么我们将

00:23:44.040 --> 00:23:50.250
将其移至适当的位置

00:23:45.750 --> 00:23:52.650
标准机构雅加达EE无法做到

00:23:50.250 --> 00:23:55.380
使用完全相同的模型，因为

00:23:52.650 --> 00:23:57.660
他们正在取代JCP，所以我们需要

00:23:55.380 --> 00:24:00.970
更严格的东西

00:23:57.660 --> 00:24:04.120
比我们的微轮廓

00:24:00.970 --> 00:24:07.750
原因是为了保护

00:24:04.120 --> 00:24:10.270
提花品牌的EEE是有价值的

00:24:07.750 --> 00:24:13.510
品牌，我们需要能够保护

00:24:10.270 --> 00:24:16.210
它的Micah个人资料是的，我们确实有一个品牌

00:24:13.510 --> 00:24:20.310
这都是商标，但我们正在做

00:24:16.210 --> 00:24:23.190
我们拥有的荣誉系统上的所有内容

00:24:20.310 --> 00:24:26.320
由实施产生

00:24:23.190 --> 00:24:27.970
高校和他们来

00:24:26.320 --> 00:24:29.980
在他们声称

00:24:27.970 --> 00:24:32.380
是的，我们已经通过了这些测试，我们说

00:24:29.980 --> 00:24:34.120
伟大的把你的名字放在我们的维基上

00:24:32.380 --> 00:24:36.250
敞开着，他们可以继续前进

00:24:34.120 --> 00:24:39.630
它放在链接中，我们只是相信

00:24:36.250 --> 00:24:42.160
他们，所以一切都在荣誉系统上

00:24:39.630 --> 00:24:44.470
不幸的是因为提花EEE 

00:24:42.160 --> 00:24:51.310
品牌，我们将无法做到

00:24:44.470 --> 00:24:53.680
随和，我想指出一些

00:24:51.310 --> 00:24:56.830
我看到的东西正在显示

00:24:53.680 --> 00:25:02.350
微型轮廓和提花EEE 

00:24:56.830 --> 00:25:07.000
离那不远，第一个是休息

00:25:02.350 --> 00:25:09.610
客户安全类型背后的想法

00:25:07.000 --> 00:25:11.830
在微型配置文件中的其他客户

00:25:09.610 --> 00:25:15.490
实际上是来自

00:25:11.830 --> 00:25:17.740
 jax-rs团队，但jax-rs到目前为止

00:25:15.490 --> 00:25:19.720
连同她的Java EE 8可交付成果

00:25:17.740 --> 00:25:22.450
他们不可能说哦

00:25:19.720 --> 00:25:24.910
按住，我们想放点东西

00:25:22.450 --> 00:25:26.470
一些团队成员开始于

00:25:24.910 --> 00:25:31.510
微观概况，并提出其余

00:25:26.470 --> 00:25:34.300
客户，所以有时候我不是

00:25:31.510 --> 00:25:36.310
打算确切地声明何时，但我可以

00:25:34.300 --> 00:25:40.000
看到其余客户的概念

00:25:36.310 --> 00:25:41.770
被合并到jax-rs规范中

00:25:40.000 --> 00:25:44.530
我是说现在他们在

00:25:41.770 --> 00:25:46.240
 2.1版第二点我不知道

00:25:44.530 --> 00:25:47.890
可能是两点两，也许是

00:25:46.240 --> 00:25:49.360
更重要的事情可能会

00:25:47.890 --> 00:25:51.100
一点点我不知道

00:25:49.360 --> 00:25:53.710
但我看到有一种自然

00:25:51.100 --> 00:25:54.520
从微观轮廓发展到

00:25:53.710 --> 00:26:00.520
雅加达EE 

00:25:54.520 --> 00:26:01.810
我曾提到微观轮廓在哪里

00:26:00.520 --> 00:26:05.290
从来没有成为标准

00:26:01.810 --> 00:26:09.190
我们认为还可以的组织

00:26:05.290 --> 00:26:11.800
配置微道具微配置文件

00:26:09.190 --> 00:26:14.290
一直是非常受欢迎的规范

00:26:11.800 --> 00:26:18.130
和实施，所以我们

00:26:14.290 --> 00:26:20.700
摆成以前的jsr 

00:26:18.130 --> 00:26:25.360
甲骨文决定他们要搬家

00:26:20.700 --> 00:26:27.610
 Java EE和日食，所以我们有一个

00:26:25.360 --> 00:26:29.560
他们已经激活的配置jsr 

00:26:27.610 --> 00:26:32.770
产生了一些早期的草稿

00:26:29.560 --> 00:26:35.230
他们的规格还可以，但现在我们正在

00:26:32.770 --> 00:26:38.470
我们的规格文件进展

00:26:35.230 --> 00:26:41.170
我们专门的规范过程

00:26:38.470 --> 00:26:44.770
继续使用jsr有意义

00:26:41.170 --> 00:26:47.200
还是现在应该将精力转移到

00:26:44.770 --> 00:26:51.580
下面的配置规范

00:26:47.200 --> 00:26:53.680
 Jakarta EE我已经把它扔给了

00:26:51.580 --> 00:26:55.660
配置Jas我们的专家组，他们是

00:26:53.680 --> 00:26:57.820
讨论是否要这样做

00:26:55.660 --> 00:27:03.220
我还不知道，但这是一个想法

00:26:57.820 --> 00:27:05.250
他们正在看反应

00:27:03.220 --> 00:27:07.710
平台，我提到过几个

00:27:05.250 --> 00:27:10.330
正在寻找的功能

00:27:07.710 --> 00:27:13.150
 Micra配置文件的未来版本

00:27:10.330 --> 00:27:15.550
无功算子和无功

00:27:13.150 --> 00:27:18.340
之所以发消息是因为

00:27:15.550 --> 00:27:20.410
他们从光弯队写了一个

00:27:18.340 --> 00:27:22.720
很棒的博客，我不知道你们

00:27:20.410 --> 00:27:25.060
看过没看我会看一下

00:27:22.720 --> 00:27:27.010
如果您对此有疑问， 

00:27:25.060 --> 00:27:29.950
弥迦简介与

00:27:27.010 --> 00:27:33.070
 Jakarta EE这是一个非常好的博客

00:27:29.950 --> 00:27:35.410
是在他们决定之前写的，或者

00:27:33.070 --> 00:27:37.180
也许他们没有决定搬到

00:27:35.410 --> 00:27:39.070
微观资料，但不久

00:27:37.180 --> 00:27:42.910
之后，但他们谈论了他们的

00:27:39.070 --> 00:27:45.190
他们想要什么的过程

00:27:42.910 --> 00:27:47.050
这个练习，他们在看

00:27:45.190 --> 00:27:49.240
雅加达EE，他们正在看Mike 

00:27:47.050 --> 00:27:52.480
个人资料还是他们继续

00:27:49.240 --> 00:27:54.880
自己，他们有很多经验

00:27:52.480 --> 00:27:58.720
内部以及他们将如何移动

00:27:54.880 --> 00:28:01.000
这个前进，所以他们决定使用

00:27:58.720 --> 00:28:02.440
微型档案就是他们的所在

00:28:01.000 --> 00:28:05.250
他们正在努力工作

00:28:02.440 --> 00:28:08.920
规格，但长期

00:28:05.250 --> 00:28:11.530
目标不仅是进入雅加达EE 

00:28:08.920 --> 00:28:13.600
他们也在为Java提出建议

00:28:11.530 --> 00:28:17.740
 SE他们正在努力获得他们的信息流

00:28:13.600 --> 00:28:19.420
 Java SE支持API，因此它们是

00:28:17.740 --> 00:28:21.430
继续前进，他们会

00:28:19.420 --> 00:28:24.250
喜欢在主流中看到更多

00:28:21.430 --> 00:28:27.600
使用Java SE和Jakarta EE，但它们

00:28:24.250 --> 00:28:27.600
从微观轮廓开始

00:28:28.700 --> 00:28:34.530
如果需要的话，另一种集成方式

00:28:32.370 --> 00:28:37.200
称呼我们有这样的举动

00:28:34.530 --> 00:28:39.750
编程中的容错

00:28:37.200 --> 00:28:42.510
微观轮廓模型

00:28:39.750 --> 00:28:45.900
对您来说很棒，知道自动

00:28:42.510 --> 00:28:48.600
断路器回退超时

00:28:45.900 --> 00:28:50.820
处理等，但这是一个编程

00:28:48.600 --> 00:28:53.370
模型，您必须在其中修改代码

00:28:50.820 --> 00:28:56.310
为了很好地获得此功能

00:28:53.370 --> 00:28:59.100
还有服务网格的想法

00:28:56.310 --> 00:29:02.370
 STL，他们可以做很多同样的事情

00:28:59.100 --> 00:29:04.860
机制类型，无须修改

00:29:02.370 --> 00:29:06.570
他们通过截获

00:29:04.860 --> 00:29:08.580
不同微之间的通话

00:29:06.570 --> 00:29:10.650
现在服务他们唯一的

00:29:08.580 --> 00:29:12.360
不能做的是回退处理，因为

00:29:10.650 --> 00:29:14.070
我真的不知道该怎么做

00:29:12.360 --> 00:29:15.810
回退处理，因此他们无法执行

00:29:14.070 --> 00:29:18.870
那，但是他们其余的他们可以

00:29:15.810 --> 00:29:21.300
实际上这样做我们如何整合这些

00:29:18.870 --> 00:29:23.460
两个，如果有人发展

00:29:21.300 --> 00:29:25.980
使用我们的编程模型的应用程序

00:29:23.460 --> 00:29:28.950
现在它被部署到一个仓库

00:29:25.980 --> 00:29:31.470
你知道环境如何

00:29:28.950 --> 00:29:34.350
机制如何工作

00:29:31.470 --> 00:29:37.320
在一起的原因，我把这个

00:29:34.350 --> 00:29:39.960
是因为这种显示

00:29:37.320 --> 00:29:43.050
好吧，现在我不是Jakarta EE 

00:29:39.960 --> 00:29:45.720
并不是说Jakarta EE不感兴趣

00:29:43.050 --> 00:29:48.900
在我的意思是也许他们是对的

00:29:45.720 --> 00:29:52.560
现在不是，这里的想法就像

00:29:48.900 --> 00:29:55.980
个人资料可能不全是

00:29:52.560 --> 00:30:01.080
 Jakarta EE可能取决于每个

00:29:55.980 --> 00:30:03.810
个别组件，所以我有点

00:30:01.080 --> 00:30:05.610
谈到我的不同社区

00:30:03.810 --> 00:30:08.010
认为你们知道我在工作

00:30:05.610 --> 00:30:10.770
在两个社区中，我都从事Jakarta EE的工作

00:30:08.010 --> 00:30:12.570
我在云母资料上工作的东西，你看到一个

00:30:10.770 --> 00:30:15.540
我这里有很多不同的公司

00:30:12.570 --> 00:30:17.730
甚至你也早知道我的话

00:30:15.540 --> 00:30:18.180
微软，他们与雅加达在一起

00:30:17.730 --> 00:30:20.820
电子工程

00:30:18.180 --> 00:30:23.220
如果您在微观轮廓上看这里

00:30:20.820 --> 00:30:26.000
微软在那里

00:30:23.220 --> 00:30:29.340
以及，所以我们有很多

00:30:26.000 --> 00:30:31.200
项目，供应商和个人我

00:30:29.340 --> 00:30:33.810
没有把所有的个人名字都放在

00:30:31.200 --> 00:30:36.930
这些图表我很抱歉，如果你是一个

00:30:33.810 --> 00:30:40.680
他们中的一个，所以如果你同时看这两个

00:30:36.930 --> 00:30:43.290
社区中您会看到很多重叠

00:30:40.680 --> 00:30:46.110
在中间，这些都是

00:30:43.290 --> 00:30:48.360
那些非常活跃的公司或

00:30:46.110 --> 00:30:50.430
公司的项目供应商，但是您

00:30:48.360 --> 00:30:52.860
想看看这一切，非常

00:30:50.430 --> 00:30:54.810
活跃于双方的发展

00:30:52.860 --> 00:30:58.550
个人资料和雅加达EEE 

00:30:54.810 --> 00:31:01.050
我们都希望看到这两个成功

00:30:58.550 --> 00:31:03.600
根据当前时间

00:31:01.050 --> 00:31:05.640
好吧，即使是其他项目， 

00:31:03.600 --> 00:31:07.500
我有点你知道阴影

00:31:05.640 --> 00:31:10.470
我可以看到其中的一些

00:31:07.500 --> 00:31:14.870
以及继续前进

00:31:10.470 --> 00:31:18.810
定义我之间的这种关系

00:31:14.870 --> 00:31:20.580
微型个人资料和Jakarta EE，我想要

00:31:18.810 --> 00:31:22.320
指出你当然知道

00:31:20.580 --> 00:31:27.600
在Eclipse的指导下

00:31:22.320 --> 00:31:30.570
基金会，所以我知道你知道这不是

00:31:27.600 --> 00:31:31.260
一个明确的答案，我跑过一个人

00:31:30.570 --> 00:31:33.420
进入

00:31:31.260 --> 00:31:35.460
他说我不能参加你的会议

00:31:33.420 --> 00:31:37.950
你知道给我你知道一个

00:31:35.460 --> 00:31:41.300
句子的结论，就像II 

00:31:37.950 --> 00:31:45.480
不能因为没有特定的

00:31:41.300 --> 00:31:48.420
微观轮廓的定义解决方案

00:31:45.480 --> 00:31:50.490
 Jakarta EE我认为这需要一些时间

00:31:48.420 --> 00:31:52.530
你会看到很多相似之处

00:31:50.490 --> 00:31:54.510
您可以看到我们如何一起工作

00:31:52.530 --> 00:31:57.240
尝试提出正确的事情

00:31:54.510 --> 00:31:59.760
但这取决于时间

00:31:57.240 --> 00:32:01.740
与配置或故障有关的事情

00:31:59.760 --> 00:32:04.740
公差或这些其他要素

00:32:01.740 --> 00:32:07.290
在微轮廓内以及如何以及何时执行

00:32:04.740 --> 00:32:09.000
他们合并到EE中发生，但是

00:32:07.290 --> 00:32:10.980
我们一定在合作， 

00:32:09.000 --> 00:32:18.290
我们希望这种关系会继续下去

00:32:10.980 --> 00:32:18.290
进化，所以有任何问题

00:32:19.060 --> 00:32:34.040
是的，好的，问题是

00:32:30.290 --> 00:32:36.740
规范流程

00:32:34.040 --> 00:32:39.140
最终确定是否与Micro相同

00:32:36.740 --> 00:32:46.220
 Jakarta EE的个人资料是

00:32:39.140 --> 00:32:49.810
是的，没有，我们已经确定

00:32:46.220 --> 00:32:53.240
规范过程旨在

00:32:49.810 --> 00:32:54.770
工作组和工作组

00:32:53.240 --> 00:32:57.070
你必须是一个工作的成员

00:32:54.770 --> 00:33:00.710
小组参加

00:32:57.070 --> 00:33:02.690
现在进行规格说明Micra 

00:33:00.710 --> 00:33:08.060
轮廓不是提花EEE的一部分

00:33:02.690 --> 00:33:12.410
我认为工作组是零散的

00:33:08.060 --> 00:33:15.320
像jsr config这样的配置

00:33:12.410 --> 00:33:17.990
可能会过去，可能是新的

00:33:15.320 --> 00:33:19.960
在Jakarta ee下进行项目，然后他们

00:33:17.990 --> 00:33:23.870
可以遵循规范流程

00:33:19.960 --> 00:33:25.010
但就像所有

00:33:23.870 --> 00:33:27.110
我们现在正在做的事情

00:33:25.010 --> 00:33:28.580
我们的17个组件版本以及

00:33:27.110 --> 00:33:31.150
我们将要发布的平台

00:33:28.580 --> 00:33:34.010
继续使用我们当前的流程

00:33:31.150 --> 00:33:49.670
直到这些东西开始转移到

00:33:34.010 --> 00:33:51.869
雅加达好的，还有其他什么，好的，所以

00:33:49.670 --> 00:33:56.070
有兴趣吗

00:33:51.869 --> 00:34:00.409
大型云服务提供商，让我们拭目以待

00:33:56.070 --> 00:34:04.529
说亚马逊和谷歌对

00:34:00.409 --> 00:34:07.169
不直接哦，好吧，我必须

00:34:04.529 --> 00:34:10.529
在这里很快关闭，但是我们有

00:34:07.169 --> 00:34:12.629
与他们进行了一些讨论

00:34:10.529 --> 00:34:14.609
与其他公司，但你知道

00:34:12.629 --> 00:34:16.799
他们还没有签到他们在哪里

00:34:14.609 --> 00:34:19.079
实际上您知道在

00:34:16.799 --> 00:34:36.809
提花ee或微轮廓

00:34:19.079 --> 00:34:40.129
讨论，但还没有确定，是的

00:34:36.809 --> 00:34:43.200
只需在这里为麦克风重复一下

00:34:40.129 --> 00:34:45.659
 Heiko指出微软已经

00:34:43.200 --> 00:34:48.539
在这方面做过陪审员

00:34:45.659 --> 00:34:50.549
支持微型个人资料，因此不是您的个人资料

00:34:48.539 --> 00:34:54.389
亚马逊和谷歌，但他们很漂亮

00:34:50.549 --> 00:34:58.819
规模不错的云提供商也可以，所以

00:34:54.389 --> 00:34:58.819
我明白了，非常感谢你

00:34:58.970 --> 00:35:02.210
 [掌声] 

