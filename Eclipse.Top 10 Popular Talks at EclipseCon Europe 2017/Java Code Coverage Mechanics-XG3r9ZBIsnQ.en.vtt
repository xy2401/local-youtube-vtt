WEBVTT
Kind: captions
Language: en

00:00:00.260 --> 00:00:07.220 align:start position:0%
 
okay<00:00:04.069><c> hello</c><00:00:05.069><c> vertebrate</c><00:00:05.490><c> hello</c><00:00:05.970><c> everybody</c>

00:00:07.220 --> 00:00:07.230 align:start position:0%
okay hello vertebrate hello everybody
 

00:00:07.230 --> 00:00:09.080 align:start position:0%
okay hello vertebrate hello everybody
welcome<00:00:07.919><c> to</c><00:00:08.069><c> the</c><00:00:08.189><c> session</c><00:00:08.400><c> Java</c><00:00:08.880><c> code</c>

00:00:09.080 --> 00:00:09.090 align:start position:0%
welcome to the session Java code
 

00:00:09.090 --> 00:00:13.310 align:start position:0%
welcome to the session Java code
coverage<00:00:09.389><c> mechanics</c><00:00:11.269><c> my</c><00:00:12.269><c> name</c><00:00:12.480><c> is</c><00:00:12.690><c> Evgeniy</c>

00:00:13.310 --> 00:00:13.320 align:start position:0%
coverage mechanics my name is Evgeniy
 

00:00:13.320 --> 00:00:16.310 align:start position:0%
coverage mechanics my name is Evgeniy
man<00:00:13.679><c> rakov</c><00:00:13.950><c> and</c><00:00:14.190><c> together</c><00:00:14.790><c> with</c><00:00:15.299><c> Mark</c><00:00:15.809><c> Hofman</c>

00:00:16.310 --> 00:00:16.320 align:start position:0%
man rakov and together with Mark Hofman
 

00:00:16.320 --> 00:00:19.580 align:start position:0%
man rakov and together with Mark Hofman
I'm<00:00:16.740><c> one</c><00:00:17.279><c> of</c><00:00:17.430><c> the</c><00:00:17.550><c> project</c><00:00:17.940><c> leads</c><00:00:18.150><c> of</c><00:00:18.590><c> jacoco</c>

00:00:19.580 --> 00:00:19.590 align:start position:0%
I'm one of the project leads of jacoco
 

00:00:19.590 --> 00:00:20.120 align:start position:0%
I'm one of the project leads of jacoco
and

00:00:20.120 --> 00:00:20.130 align:start position:0%
and
 

00:00:20.130 --> 00:00:22.460 align:start position:0%
and
Eclipse<00:00:20.609><c> echo</c><00:00:20.939><c> I'm</c><00:00:21.270><c> a</c><00:00:21.390><c> project</c><00:00:21.810><c> that</c><00:00:22.080><c> you</c>

00:00:22.460 --> 00:00:22.470 align:start position:0%
Eclipse echo I'm a project that you
 

00:00:22.470 --> 00:00:26.779 align:start position:0%
Eclipse echo I'm a project that you
might<00:00:22.500><c> already</c><00:00:22.830><c> know</c><00:00:24.619><c> before</c><00:00:25.619><c> we</c><00:00:25.740><c> start</c><00:00:26.039><c> the</c>

00:00:26.779 --> 00:00:26.789 align:start position:0%
might already know before we start the
 

00:00:26.789 --> 00:00:28.970 align:start position:0%
might already know before we start the
usual<00:00:27.180><c> disclaimer</c><00:00:27.560><c> whatever</c><00:00:28.560><c> I'm</c><00:00:28.710><c> going</c><00:00:28.890><c> to</c>

00:00:28.970 --> 00:00:28.980 align:start position:0%
usual disclaimer whatever I'm going to
 

00:00:28.980 --> 00:00:32.209 align:start position:0%
usual disclaimer whatever I'm going to
say<00:00:29.250><c> has</c><00:00:30.179><c> no</c><00:00:30.449><c> connection</c><00:00:30.990><c> with</c><00:00:31.019><c> the</c><00:00:31.769><c> company</c>

00:00:32.209 --> 00:00:32.219 align:start position:0%
say has no connection with the company
 

00:00:32.219 --> 00:00:34.459 align:start position:0%
say has no connection with the company
where<00:00:32.790><c> I</c><00:00:32.820><c> works</c><00:00:33.180><c> on</c><00:00:33.450><c> our</c><00:00:33.570><c> source</c><00:00:33.840><c> you</c><00:00:34.320><c> might</c>

00:00:34.459 --> 00:00:34.469 align:start position:0%
where I works on our source you might
 

00:00:34.469 --> 00:00:37.819 align:start position:0%
where I works on our source you might
know<00:00:34.710><c> this</c><00:00:34.920><c> one</c><00:00:35.130><c> as</c><00:00:35.309><c> well</c><00:00:35.520><c> as</c><00:00:36.030><c> it</c><00:00:36.570><c> does</c><00:00:36.800><c> such</c><00:00:37.800><c> a</c>

00:00:37.819 --> 00:00:37.829 align:start position:0%
know this one as well as it does such a
 

00:00:37.829 --> 00:00:39.950 align:start position:0%
know this one as well as it does such a
product<00:00:38.129><c> as</c><00:00:38.399><c> sonarqube</c><00:00:38.879><c> static</c><00:00:39.450><c> source</c><00:00:39.719><c> code</c>

00:00:39.950 --> 00:00:39.960 align:start position:0%
product as sonarqube static source code
 

00:00:39.960 --> 00:00:42.170 align:start position:0%
product as sonarqube static source code
analyzer<00:00:40.170><c> if</c><00:00:41.040><c> you</c><00:00:41.219><c> want</c><00:00:41.399><c> to</c><00:00:41.489><c> chat</c><00:00:41.640><c> about</c><00:00:41.790><c> this</c>

00:00:42.170 --> 00:00:42.180 align:start position:0%
analyzer if you want to chat about this
 

00:00:42.180 --> 00:00:43.819 align:start position:0%
analyzer if you want to chat about this
you<00:00:42.329><c> can</c><00:00:42.480><c> catch</c><00:00:42.660><c> me</c><00:00:42.870><c> afterwards</c><00:00:43.530><c> this</c>

00:00:43.819 --> 00:00:43.829 align:start position:0%
you can catch me afterwards this
 

00:00:43.829 --> 00:00:45.440 align:start position:0%
you can catch me afterwards this
presentation<00:00:44.280><c> is</c><00:00:44.579><c> not</c><00:00:44.640><c> going</c><00:00:45.000><c> to</c><00:00:45.090><c> be</c><00:00:45.210><c> about</c>

00:00:45.440 --> 00:00:45.450 align:start position:0%
presentation is not going to be about
 

00:00:45.450 --> 00:00:52.250 align:start position:0%
presentation is not going to be about
that<00:00:48.469><c> also</c><00:00:49.469><c> before</c><00:00:49.829><c> the</c><00:00:49.890><c> starts</c><00:00:51.050><c> for</c><00:00:52.050><c> once</c>

00:00:52.250 --> 00:00:52.260 align:start position:0%
that also before the starts for once
 

00:00:52.260 --> 00:00:54.680 align:start position:0%
that also before the starts for once
let's<00:00:52.739><c> try</c><00:00:53.039><c> to</c><00:00:53.100><c> avoid</c><00:00:53.460><c> cliche</c><00:00:54.030><c> let's</c><00:00:54.390><c> start</c>

00:00:54.680 --> 00:00:54.690 align:start position:0%
let's try to avoid cliche let's start
 

00:00:54.690 --> 00:00:57.740 align:start position:0%
let's try to avoid cliche let's start
from<00:00:54.870><c> a</c><00:00:54.930><c> questions</c><00:00:56.300><c> more</c><00:00:57.300><c> precisely</c>

00:00:57.740 --> 00:00:57.750 align:start position:0%
from a questions more precisely
 

00:00:57.750 --> 00:01:01.099 align:start position:0%
from a questions more precisely
questions<00:00:58.289><c> from</c><00:00:58.530><c> me</c><00:00:59.270><c> I'd</c><00:01:00.270><c> like</c><00:01:00.510><c> to</c><00:01:00.539><c> know</c><00:01:00.750><c> who</c>

00:01:01.099 --> 00:01:01.109 align:start position:0%
questions from me I'd like to know who
 

00:01:01.109 --> 00:01:04.729 align:start position:0%
questions from me I'd like to know who
came<00:01:01.350><c> there</c><00:01:01.680><c> to</c><00:01:02.640><c> learn</c><00:01:02.820><c> about</c><00:01:03.379><c> code</c><00:01:04.379><c> coverage</c>

00:01:04.729 --> 00:01:04.739 align:start position:0%
came there to learn about code coverage
 

00:01:04.739 --> 00:01:06.770 align:start position:0%
came there to learn about code coverage
in<00:01:05.010><c> general</c><00:01:05.489><c> how</c><00:01:05.790><c> to</c><00:01:05.850><c> use</c><00:01:06.240><c> it</c>

00:01:06.770 --> 00:01:06.780 align:start position:0%
in general how to use it
 

00:01:06.780 --> 00:01:13.280 align:start position:0%
in general how to use it
etc<00:01:07.229><c> etc</c><00:01:09.710><c> okay</c><00:01:10.710><c> there</c><00:01:11.490><c> are</c><00:01:11.520><c> some</c><00:01:12.020><c> sorry</c><00:01:13.020><c> but</c>

00:01:13.280 --> 00:01:13.290 align:start position:0%
etc etc okay there are some sorry but
 

00:01:13.290 --> 00:01:15.320 align:start position:0%
etc etc okay there are some sorry but
for<00:01:13.560><c> you</c><00:01:13.710><c> you</c><00:01:13.920><c> still</c><00:01:14.369><c> have</c><00:01:14.549><c> a</c><00:01:14.580><c> chance</c><00:01:14.880><c> to</c><00:01:15.030><c> leave</c>

00:01:15.320 --> 00:01:15.330 align:start position:0%
for you you still have a chance to leave
 

00:01:15.330 --> 00:01:17.149 align:start position:0%
for you you still have a chance to leave
this<00:01:15.540><c> room</c><00:01:15.869><c> it's</c><00:01:16.200><c> not</c><00:01:16.320><c> going</c><00:01:16.680><c> to</c><00:01:16.770><c> be</c><00:01:16.890><c> about</c>

00:01:17.149 --> 00:01:17.159 align:start position:0%
this room it's not going to be about
 

00:01:17.159 --> 00:01:21.770 align:start position:0%
this room it's not going to be about
code<00:01:17.520><c> coverage</c><00:01:18.380><c> in</c><00:01:19.380><c> general</c><00:01:20.390><c> who</c><00:01:21.390><c> is</c><00:01:21.450><c> there</c>

00:01:21.770 --> 00:01:21.780 align:start position:0%
code coverage in general who is there
 

00:01:21.780 --> 00:01:24.770 align:start position:0%
code coverage in general who is there
who<00:01:22.740><c> already</c><00:01:23.009><c> knows</c><00:01:23.490><c> how</c><00:01:23.759><c> to</c><00:01:23.820><c> use</c><00:01:24.150><c> code</c>

00:01:24.770 --> 00:01:24.780 align:start position:0%
who already knows how to use code
 

00:01:24.780 --> 00:01:26.749 align:start position:0%
who already knows how to use code
coverage<00:01:25.140><c> and</c><00:01:25.470><c> actually</c><00:01:25.920><c> uses</c><00:01:26.220><c> jacoco</c>

00:01:26.749 --> 00:01:26.759 align:start position:0%
coverage and actually uses jacoco
 

00:01:26.759 --> 00:01:30.109 align:start position:0%
coverage and actually uses jacoco
library<00:01:27.530><c> okay</c><00:01:28.700><c> thank</c><00:01:29.700><c> you</c>

00:01:30.109 --> 00:01:30.119 align:start position:0%
library okay thank you
 

00:01:30.119 --> 00:01:32.179 align:start position:0%
library okay thank you
who<00:01:30.750><c> is</c><00:01:30.840><c> there</c><00:01:31.079><c> to</c><00:01:31.259><c> learn</c><00:01:31.439><c> something</c><00:01:31.979><c> about</c>

00:01:32.179 --> 00:01:32.189 align:start position:0%
who is there to learn something about
 

00:01:32.189 --> 00:01:36.649 align:start position:0%
who is there to learn something about
something<00:01:33.060><c> new</c><00:01:33.329><c> about</c><00:01:33.450><c> Java</c><00:01:35.060><c> okay</c><00:01:36.060><c> good</c><00:01:36.479><c> for</c>

00:01:36.649 --> 00:01:36.659 align:start position:0%
something new about Java okay good for
 

00:01:36.659 --> 00:01:40.190 align:start position:0%
something new about Java okay good for
you<00:01:37.729><c> also</c><00:01:38.729><c> to</c><00:01:38.970><c> say</c><00:01:39.329><c> that</c><00:01:39.390><c> we're</c><00:01:39.780><c> going</c><00:01:39.930><c> to</c><00:01:40.020><c> talk</c>

00:01:40.190 --> 00:01:40.200 align:start position:0%
you also to say that we're going to talk
 

00:01:40.200 --> 00:01:43.219 align:start position:0%
you also to say that we're going to talk
about<00:01:40.610><c> internal</c><00:01:41.610><c> mechanics</c><00:01:42.270><c> of</c><00:01:42.540><c> Java</c><00:01:42.990><c> and</c>

00:01:43.219 --> 00:01:43.229 align:start position:0%
about internal mechanics of Java and
 

00:01:43.229 --> 00:01:46.760 align:start position:0%
about internal mechanics of Java and
internals<00:01:44.220><c> mechanics</c><00:01:44.759><c> of</c><00:01:44.939><c> code</c><00:01:45.689><c> coverage</c><00:01:46.049><c> not</c>

00:01:46.760 --> 00:01:46.770 align:start position:0%
internals mechanics of code coverage not
 

00:01:46.770 --> 00:01:49.819 align:start position:0%
internals mechanics of code coverage not
about<00:01:47.280><c> the</c><00:01:47.610><c> actual</c><00:01:47.909><c> results</c><00:01:48.390><c> but</c><00:01:48.659><c> about</c><00:01:48.960><c> how</c>

00:01:49.819 --> 00:01:49.829 align:start position:0%
about the actual results but about how
 

00:01:49.829 --> 00:01:53.539 align:start position:0%
about the actual results but about how
we<00:01:49.890><c> do</c><00:01:50.189><c> obtain</c><00:01:50.340><c> this</c><00:01:50.670><c> result</c><00:01:50.909><c> and</c><00:01:52.250><c> sorry</c><00:01:53.250><c> here</c>

00:01:53.539 --> 00:01:53.549 align:start position:0%
we do obtain this result and sorry here
 

00:01:53.549 --> 00:01:58.910 align:start position:0%
we do obtain this result and sorry here
is<00:01:53.840><c> another</c><00:01:54.840><c> disclaimer</c><00:01:55.259><c> the</c><00:01:55.770><c> real</c><00:01:55.950><c> one</c><00:01:57.920><c> we</c>

00:01:58.910 --> 00:01:58.920 align:start position:0%
is another disclaimer the real one we
 

00:01:58.920 --> 00:02:01.969 align:start position:0%
is another disclaimer the real one we
are<00:01:58.979><c> going</c><00:01:59.130><c> to</c><00:01:59.219><c> look</c><00:01:59.369><c> into</c><00:01:59.759><c> some</c><00:02:00.799><c> internals</c><00:02:01.799><c> of</c>

00:02:01.969 --> 00:02:01.979 align:start position:0%
are going to look into some internals of
 

00:02:01.979 --> 00:02:05.899 align:start position:0%
are going to look into some internals of
G<00:02:02.189><c> I</c><00:02:02.219><c> am</c><00:02:03.229><c> sorry</c><00:02:04.229><c> facets</c><00:02:04.680><c> we're</c><00:02:05.460><c> going</c><00:02:05.640><c> to</c><00:02:05.700><c> talk</c>

00:02:05.899 --> 00:02:05.909 align:start position:0%
G I am sorry facets we're going to talk
 

00:02:05.909 --> 00:02:08.479 align:start position:0%
G I am sorry facets we're going to talk
a<00:02:06.270><c> strong</c><00:02:06.540><c> language</c><00:02:06.750><c> byte</c><00:02:07.200><c> code</c><00:02:07.469><c> again</c><00:02:08.160><c> sorry</c>

00:02:08.479 --> 00:02:08.489 align:start position:0%
a strong language byte code again sorry
 

00:02:08.489 --> 00:02:11.920 align:start position:0%
a strong language byte code again sorry
for<00:02:08.580><c> that</c><00:02:08.849><c> I</c><00:02:09.149><c> will</c><00:02:09.869><c> try</c><00:02:10.319><c> this</c><00:02:10.560><c> in</c><00:02:10.739><c> half</c><00:02:11.039><c> an</c><00:02:11.370><c> hour</c>

00:02:11.920 --> 00:02:11.930 align:start position:0%
for that I will try this in half an hour
 

00:02:11.930 --> 00:02:14.050 align:start position:0%
for that I will try this in half an hour
intense<00:02:12.260><c> violence</c><00:02:12.739><c> of</c><00:02:12.950><c> your</c><00:02:13.129><c> brain</c><00:02:13.340><c> against</c>

00:02:14.050 --> 00:02:14.060 align:start position:0%
intense violence of your brain against
 

00:02:14.060 --> 00:02:15.819 align:start position:0%
intense violence of your brain against
surface<00:02:14.299><c> that</c><00:02:14.719><c> used</c><00:02:14.959><c> to</c><00:02:15.079><c> have</c><00:02:15.290><c> a</c><00:02:15.319><c> chance</c><00:02:15.620><c> to</c>

00:02:15.819 --> 00:02:15.829 align:start position:0%
surface that used to have a chance to
 

00:02:15.829 --> 00:02:20.170 align:start position:0%
surface that used to have a chance to
live<00:02:15.980><c> the</c><00:02:16.099><c> room</c><00:02:16.250><c> and</c><00:02:17.349><c> be</c><00:02:18.349><c> worn</c><00:02:18.620><c> out</c><00:02:19.000><c> there</c><00:02:20.000><c> will</c>

00:02:20.170 --> 00:02:20.180 align:start position:0%
live the room and be worn out there will
 

00:02:20.180 --> 00:02:22.300 align:start position:0%
live the room and be worn out there will
be<00:02:20.209><c> some</c><00:02:20.510><c> implementation</c><00:02:21.200><c> details</c><00:02:21.620><c> please</c><00:02:22.099><c> do</c>

00:02:22.300 --> 00:02:22.310 align:start position:0%
be some implementation details please do
 

00:02:22.310 --> 00:02:28.500 align:start position:0%
be some implementation details please do
not<00:02:22.459><c> rely</c><00:02:22.819><c> on</c><00:02:22.849><c> this</c><00:02:23.500><c> dragon</c><00:02:24.500><c> Zahir</c><00:02:24.980><c> etc</c><00:02:25.579><c> etc</c><00:02:25.640><c> so</c>

00:02:28.500 --> 00:02:28.510 align:start position:0%
 
 

00:02:28.510 --> 00:02:35.679 align:start position:0%
 
let's<00:02:29.709><c> start</c><00:02:30.709><c> a</c><00:02:32.829><c> bit</c><00:02:33.829><c> of</c><00:02:34.010><c> history</c><00:02:34.489><c> of</c><00:02:34.819><c> Java</c>

00:02:35.679 --> 00:02:35.689 align:start position:0%
let's start a bit of history of Java
 

00:02:35.689 --> 00:02:39.009 align:start position:0%
let's start a bit of history of Java
code<00:02:35.780><c> coverage</c><00:02:36.290><c> and</c><00:02:37.219><c> jacoco</c><00:02:38.090><c> and</c><00:02:38.329><c> economic</c>

00:02:39.009 --> 00:02:39.019 align:start position:0%
code coverage and jacoco and economic
 

00:02:39.019 --> 00:02:43.050 align:start position:0%
code coverage and jacoco and economic
projects<00:02:39.879><c> in</c><00:02:40.879><c> particular</c><00:02:41.239><c> all</c><00:02:41.989><c> that</c><00:02:42.379><c> started</c>

00:02:43.050 --> 00:02:43.060 align:start position:0%
projects in particular all that started
 

00:02:43.060 --> 00:02:47.470 align:start position:0%
projects in particular all that started
more<00:02:44.060><c> than</c><00:02:44.120><c> 10</c><00:02:44.299><c> years</c><00:02:44.480><c> ago</c><00:02:44.840><c> from</c><00:02:46.150><c> such</c><00:02:47.150><c> a</c><00:02:47.180><c> nice</c>

00:02:47.470 --> 00:02:47.480 align:start position:0%
more than 10 years ago from such a nice
 

00:02:47.480 --> 00:02:50.409 align:start position:0%
more than 10 years ago from such a nice
library<00:02:47.780><c> Emma</c><00:02:48.709><c> which</c><00:02:49.069><c> had</c><00:02:49.579><c> if</c><00:02:49.970><c> I'm</c><00:02:50.209><c> not</c>

00:02:50.409 --> 00:02:50.419 align:start position:0%
library Emma which had if I'm not
 

00:02:50.419 --> 00:02:54.789 align:start position:0%
library Emma which had if I'm not
mistaken<00:02:50.980><c> one</c><00:02:51.980><c> and</c><00:02:52.280><c> only</c><00:02:53.000><c> one</c><00:02:53.180><c> release</c><00:02:53.799><c> this</c>

00:02:54.789 --> 00:02:54.799 align:start position:0%
mistaken one and only one release this
 

00:02:54.799 --> 00:02:57.429 align:start position:0%
mistaken one and only one release this
was<00:02:55.040><c> a</c><00:02:55.069><c> library</c><00:02:55.669><c> to</c><00:02:55.909><c> gather</c><00:02:56.810><c> code</c><00:02:57.109><c> coverage</c>

00:02:57.429 --> 00:02:57.439 align:start position:0%
was a library to gather code coverage
 

00:02:57.439 --> 00:02:58.270 align:start position:0%
was a library to gather code coverage
for<00:02:57.799><c> Java</c>

00:02:58.270 --> 00:02:58.280 align:start position:0%
for Java
 

00:02:58.280 --> 00:03:03.250 align:start position:0%
for Java
it<00:02:58.639><c> was</c><00:02:58.909><c> develop</c><00:02:59.299><c> it</c><00:02:59.450><c> at</c><00:02:59.599><c> a</c><00:02:59.689><c> time</c><00:02:59.870><c> of</c><00:03:00.109><c> Java</c><00:03:00.709><c> 5</c><00:03:02.260><c> as</c>

00:03:03.250 --> 00:03:03.260 align:start position:0%
it was develop it at a time of Java 5 as
 

00:03:03.260 --> 00:03:05.740 align:start position:0%
it was develop it at a time of Java 5 as
time<00:03:04.510><c> yeah</c>

00:03:05.740 --> 00:03:05.750 align:start position:0%
time yeah
 

00:03:05.750 --> 00:03:08.610 align:start position:0%
time yeah
base<00:03:06.349><c> it</c><00:03:06.530><c> on</c><00:03:06.650><c> this</c><00:03:06.859><c> plugin</c><00:03:07.180><c> sometime</c><00:03:08.180><c> later</c>

00:03:08.610 --> 00:03:08.620 align:start position:0%
base it on this plugin sometime later
 

00:03:08.620 --> 00:03:11.559 align:start position:0%
base it on this plugin sometime later
mark<00:03:09.620><c> Othman</c><00:03:10.069><c> started</c><00:03:10.579><c> the</c><00:03:10.669><c> project</c><00:03:10.909><c> echo</c>

00:03:11.559 --> 00:03:11.569 align:start position:0%
mark Othman started the project echo
 

00:03:11.569 --> 00:03:14.949 align:start position:0%
mark Othman started the project echo
Emma<00:03:11.959><c> to</c><00:03:12.739><c> bring</c><00:03:13.159><c> code</c><00:03:13.579><c> coverage</c><00:03:13.939><c> into</c><00:03:14.540><c> Eclipse</c>

00:03:14.949 --> 00:03:14.959 align:start position:0%
Emma to bring code coverage into Eclipse
 

00:03:14.959 --> 00:03:19.899 align:start position:0%
Emma to bring code coverage into Eclipse
ID<00:03:15.819><c> some</c><00:03:16.819><c> houses</c><00:03:17.449><c> got</c><00:03:17.959><c> quite</c><00:03:18.680><c> popular</c><00:03:19.250><c> it</c><00:03:19.579><c> even</c>

00:03:19.899 --> 00:03:19.909 align:start position:0%
ID some houses got quite popular it even
 

00:03:19.909 --> 00:03:23.289 align:start position:0%
ID some houses got quite popular it even
got<00:03:20.060><c> some</c><00:03:20.359><c> Eclipse</c><00:03:20.959><c> community</c><00:03:21.470><c> alerts</c><00:03:21.859><c> but</c><00:03:22.790><c> as</c>

00:03:23.289 --> 00:03:23.299 align:start position:0%
got some Eclipse community alerts but as
 

00:03:23.299 --> 00:03:26.140 align:start position:0%
got some Eclipse community alerts but as
time<00:03:23.930><c> was</c><00:03:24.229><c> going</c><00:03:24.620><c> on</c><00:03:24.919><c> it</c><00:03:25.250><c> became</c><00:03:25.699><c> obvious</c><00:03:25.909><c> that</c>

00:03:26.140 --> 00:03:26.150 align:start position:0%
time was going on it became obvious that
 

00:03:26.150 --> 00:03:29.020 align:start position:0%
time was going on it became obvious that
Emma<00:03:26.870><c> doesn't</c><00:03:27.229><c> evolve</c><00:03:27.500><c> whereas</c><00:03:28.489><c> there</c><00:03:28.760><c> is</c><00:03:28.790><c> a</c>

00:03:29.020 --> 00:03:29.030 align:start position:0%
Emma doesn't evolve whereas there is a
 

00:03:29.030 --> 00:03:33.129 align:start position:0%
Emma doesn't evolve whereas there is a
need<00:03:29.180><c> to</c><00:03:29.359><c> support</c><00:03:29.900><c> a</c><00:03:30.049><c> new</c><00:03:30.879><c> Java</c><00:03:31.879><c> versions</c><00:03:32.389><c> new</c>

00:03:33.129 --> 00:03:33.139 align:start position:0%
need to support a new Java versions new
 

00:03:33.139 --> 00:03:37.170 align:start position:0%
need to support a new Java versions new
GT<00:03:33.439><c> case</c><00:03:33.620><c> new</c><00:03:33.889><c> juries</c><00:03:34.449><c> etc</c><00:03:35.449><c> so</c><00:03:36.199><c> sometime</c><00:03:36.799><c> later</c>

00:03:37.170 --> 00:03:37.180 align:start position:0%
GT case new juries etc so sometime later
 

00:03:37.180 --> 00:03:40.330 align:start position:0%
GT case new juries etc so sometime later
mark<00:03:38.180><c> also</c><00:03:38.419><c> started</c><00:03:38.959><c> another</c><00:03:39.169><c> project</c><00:03:39.349><c> a</c><00:03:40.010><c> new</c>

00:03:40.330 --> 00:03:40.340 align:start position:0%
mark also started another project a new
 

00:03:40.340 --> 00:03:44.469 align:start position:0%
mark also started another project a new
library<00:03:40.819><c> for</c><00:03:42.069><c> for</c><00:03:43.069><c> Java</c><00:03:43.280><c> code</c><00:03:43.489><c> coverage</c><00:03:43.849><c> a</c>

00:03:44.469 --> 00:03:44.479 align:start position:0%
library for for Java code coverage a
 

00:03:44.479 --> 00:03:47.610 align:start position:0%
library for for Java code coverage a
little<00:03:45.169><c> bit</c><00:03:45.319><c> later</c><00:03:45.560><c> I</c><00:03:45.889><c> joined</c><00:03:45.949><c> his</c><00:03:46.549><c> efforts</c>

00:03:47.610 --> 00:03:47.620 align:start position:0%
little bit later I joined his efforts
 

00:03:47.620 --> 00:03:52.089 align:start position:0%
little bit later I joined his efforts
echo<00:03:48.620><c> Emma</c><00:03:49.040><c> its</c><00:03:49.900><c> second</c><00:03:50.900><c> version</c><00:03:51.109><c> was</c><00:03:51.560><c> fully</c>

00:03:52.089 --> 00:03:52.099 align:start position:0%
echo Emma its second version was fully
 

00:03:52.099 --> 00:03:58.270 align:start position:0%
echo Emma its second version was fully
based<00:03:52.370><c> it</c><00:03:52.579><c> on</c><00:03:52.729><c> a</c><00:03:52.819><c> new</c><00:03:53.120><c> library</c><00:03:55.329><c> and</c><00:03:57.069><c> let's</c><00:03:58.069><c> say</c>

00:03:58.270 --> 00:03:58.280 align:start position:0%
based it on a new library and let's say
 

00:03:58.280 --> 00:04:01.749 align:start position:0%
based it on a new library and let's say
a<00:03:58.459><c> year</c><00:03:58.819><c> ago</c><00:03:59.150><c> we</c><00:03:59.689><c> decided</c><00:04:00.290><c> to</c><00:04:00.560><c> move</c><00:04:00.709><c> echo</c><00:04:01.400><c> Emma</c>

00:04:01.749 --> 00:04:01.759 align:start position:0%
a year ago we decided to move echo Emma
 

00:04:01.759 --> 00:04:04.270 align:start position:0%
a year ago we decided to move echo Emma
into<00:04:02.150><c> Eclipse</c><00:04:02.780><c> Foundation</c><00:04:02.959><c> it's</c><00:04:03.949><c> now</c>

00:04:04.270 --> 00:04:04.280 align:start position:0%
into Eclipse Foundation it's now
 

00:04:04.280 --> 00:04:09.399 align:start position:0%
into Eclipse Foundation it's now
official<00:04:05.209><c> Eclipse</c><00:04:06.169><c> project</c><00:04:07.359><c> but</c><00:04:08.359><c> it's</c><00:04:09.079><c> not</c>

00:04:09.399 --> 00:04:09.409 align:start position:0%
official Eclipse project but it's not
 

00:04:09.409 --> 00:04:12.309 align:start position:0%
official Eclipse project but it's not
that<00:04:09.560><c> important</c><00:04:09.949><c> for</c><00:04:09.979><c> this</c><00:04:10.189><c> talk</c><00:04:10.430><c> um</c><00:04:11.319><c> one</c>

00:04:12.309 --> 00:04:12.319 align:start position:0%
that important for this talk um one
 

00:04:12.319 --> 00:04:16.180 align:start position:0%
that important for this talk um one
interesting<00:04:13.310><c> funny</c><00:04:14.060><c> fact</c><00:04:14.389><c> even</c><00:04:14.959><c> those</c><00:04:15.190><c> emma</c>

00:04:16.180 --> 00:04:16.190 align:start position:0%
interesting funny fact even those emma
 

00:04:16.190 --> 00:04:19.270 align:start position:0%
interesting funny fact even those emma
plugin<00:04:16.609><c> sorry</c><00:04:17.509><c> Emma</c><00:04:17.780><c> library</c><00:04:18.409><c> is</c><00:04:18.979><c> a</c><00:04:19.039><c> library</c>

00:04:19.270 --> 00:04:19.280 align:start position:0%
plugin sorry Emma library is a library
 

00:04:19.280 --> 00:04:23.110 align:start position:0%
plugin sorry Emma library is a library
for<00:04:20.260><c> code</c><00:04:21.260><c> coverage</c><00:04:21.620><c> for</c><00:04:22.159><c> code</c><00:04:22.460><c> coverage</c><00:04:22.789><c> by</c>

00:04:23.110 --> 00:04:23.120 align:start position:0%
for code coverage for code coverage by
 

00:04:23.120 --> 00:04:24.190 align:start position:0%
for code coverage for code coverage by
tests

00:04:24.190 --> 00:04:24.200 align:start position:0%
tests
 

00:04:24.200 --> 00:04:27.280 align:start position:0%
tests
actually<00:04:24.890><c> there</c><00:04:25.220><c> were</c><00:04:25.430><c> no</c><00:04:25.970><c> single</c><00:04:26.630><c> unit</c><00:04:27.020><c> tests</c>

00:04:27.280 --> 00:04:27.290 align:start position:0%
actually there were no single unit tests
 

00:04:27.290 --> 00:04:33.580 align:start position:0%
actually there were no single unit tests
in<00:04:27.500><c> this</c><00:04:27.800><c> library</c><00:04:30.790><c> let's</c><00:04:31.790><c> move</c><00:04:32.000><c> on</c><00:04:32.150><c> as</c><00:04:32.780><c> we</c><00:04:33.560><c> are</c>

00:04:33.580 --> 00:04:33.590 align:start position:0%
in this library let's move on as we are
 

00:04:33.590 --> 00:04:36.340 align:start position:0%
in this library let's move on as we are
talking<00:04:33.920><c> about</c><00:04:34.130><c> some</c><00:04:34.700><c> measurement</c><00:04:35.330><c> which</c><00:04:36.200><c> is</c>

00:04:36.340 --> 00:04:36.350 align:start position:0%
talking about some measurement which is
 

00:04:36.350 --> 00:04:39.190 align:start position:0%
talking about some measurement which is
code<00:04:36.560><c> coverage</c><00:04:37.090><c> it's</c><00:04:38.090><c> important</c><00:04:38.600><c> to</c><00:04:38.870><c> remind</c>

00:04:39.190 --> 00:04:39.200 align:start position:0%
code coverage it's important to remind
 

00:04:39.200 --> 00:04:42.040 align:start position:0%
code coverage it's important to remind
you<00:04:39.500><c> an</c><00:04:39.740><c> observer</c><00:04:40.160><c> effect</c><00:04:40.790><c> so</c><00:04:41.120><c> here</c><00:04:41.660><c> is</c><00:04:41.750><c> a</c><00:04:41.780><c> big</c>

00:04:42.040 --> 00:04:42.050 align:start position:0%
you an observer effect so here is a big
 

00:04:42.050 --> 00:04:45.070 align:start position:0%
you an observer effect so here is a big
quote<00:04:42.320><c> from</c><00:04:42.790><c> Wikipedia</c><00:04:43.790><c> simplifying</c><00:04:44.750><c> call</c>

00:04:45.070 --> 00:04:45.080 align:start position:0%
quote from Wikipedia simplifying call
 

00:04:45.080 --> 00:04:49.030 align:start position:0%
quote from Wikipedia simplifying call
this<00:04:45.290><c> observer</c><00:04:45.980><c> effect</c><00:04:46.430><c> is</c><00:04:46.670><c> that</c><00:04:47.500><c> any</c><00:04:48.500><c> kind</c><00:04:48.830><c> of</c>

00:04:49.030 --> 00:04:49.040 align:start position:0%
this observer effect is that any kind of
 

00:04:49.040 --> 00:04:51.900 align:start position:0%
this observer effect is that any kind of
measurement<00:04:49.310><c> any</c><00:04:49.940><c> kind</c><00:04:50.300><c> of</c><00:04:50.510><c> instrumentation</c>

00:04:51.900 --> 00:04:51.910 align:start position:0%
measurement any kind of instrumentation
 

00:04:51.910 --> 00:04:55.150 align:start position:0%
measurement any kind of instrumentation
any<00:04:52.910><c> way</c><00:04:53.240><c> is</c><00:04:53.480><c> going</c><00:04:53.720><c> to</c><00:04:53.870><c> alter</c><00:04:54.290><c> the</c><00:04:54.560><c> state</c><00:04:54.860><c> of</c>

00:04:55.150 --> 00:04:55.160 align:start position:0%
any way is going to alter the state of
 

00:04:55.160 --> 00:04:58.630 align:start position:0%
any way is going to alter the state of
what<00:04:55.730><c> is</c><00:04:55.880><c> measured</c><00:04:56.300><c> so</c><00:04:57.190><c> anyways</c><00:04:58.190><c> there</c><00:04:58.460><c> is</c>

00:04:58.630 --> 00:04:58.640 align:start position:0%
what is measured so anyways there is
 

00:04:58.640 --> 00:05:01.240 align:start position:0%
what is measured so anyways there is
some<00:04:59.030><c> side</c><00:04:59.390><c> effect</c><00:04:59.840><c> of</c><00:05:00.050><c> measure</c><00:05:00.800><c> and</c><00:05:01.070><c> cut</c>

00:05:01.240 --> 00:05:01.250 align:start position:0%
some side effect of measure and cut
 

00:05:01.250 --> 00:05:06.670 align:start position:0%
some side effect of measure and cut
coverage<00:05:02.080><c> and</c><00:05:03.080><c> this</c><00:05:03.890><c> is</c><00:05:04.040><c> important</c><00:05:04.870><c> for</c><00:05:05.870><c> us</c><00:05:06.530><c> a</c>

00:05:06.670 --> 00:05:06.680 align:start position:0%
coverage and this is important for us a
 

00:05:06.680 --> 00:05:08.650 align:start position:0%
coverage and this is important for us a
users<00:05:07.010><c> it's</c><00:05:07.280><c> important</c><00:05:07.760><c> to</c><00:05:08.030><c> know</c><00:05:08.180><c> about</c><00:05:08.300><c> this</c>

00:05:08.650 --> 00:05:08.660 align:start position:0%
users it's important to know about this
 

00:05:08.660 --> 00:05:11.020 align:start position:0%
users it's important to know about this
for<00:05:09.350><c> us</c><00:05:09.410><c> as</c><00:05:09.860><c> a</c><00:05:09.920><c> developers</c><00:05:10.580><c> it's</c><00:05:10.850><c> also</c>

00:05:11.020 --> 00:05:11.030 align:start position:0%
for us as a developers it's also
 

00:05:11.030 --> 00:05:13.750 align:start position:0%
for us as a developers it's also
important<00:05:11.510><c> to</c><00:05:11.630><c> know</c><00:05:11.780><c> about</c><00:05:11.930><c> this</c><00:05:12.290><c> in</c><00:05:13.250><c> order</c><00:05:13.490><c> to</c>

00:05:13.750 --> 00:05:13.760 align:start position:0%
important to know about this in order to
 

00:05:13.760 --> 00:05:17.170 align:start position:0%
important to know about this in order to
try<00:05:14.450><c> to</c><00:05:14.510><c> minimize</c><00:05:14.870><c> this</c><00:05:15.770><c> effect</c><00:05:15.980><c> in</c><00:05:16.640><c> order</c><00:05:16.940><c> to</c>

00:05:17.170 --> 00:05:17.180 align:start position:0%
try to minimize this effect in order to
 

00:05:17.180 --> 00:05:22.030 align:start position:0%
try to minimize this effect in order to
try<00:05:17.930><c> to</c><00:05:17.990><c> minimize</c><00:05:19.960><c> performance</c><00:05:20.960><c> impact</c><00:05:21.410><c> in</c>

00:05:22.030 --> 00:05:22.040 align:start position:0%
try to minimize performance impact in
 

00:05:22.040 --> 00:05:24.310 align:start position:0%
try to minimize performance impact in
order<00:05:22.370><c> to</c><00:05:22.520><c> not</c><00:05:22.640><c> change</c><00:05:23.090><c> the</c><00:05:23.600><c> behavior</c><00:05:24.050><c> of</c><00:05:24.200><c> the</c>

00:05:24.310 --> 00:05:24.320 align:start position:0%
order to not change the behavior of the
 

00:05:24.320 --> 00:05:27.550 align:start position:0%
order to not change the behavior of the
application<00:05:25.030><c> otherwise</c><00:05:26.290><c> we're</c><00:05:27.290><c> measuring</c>

00:05:27.550 --> 00:05:27.560 align:start position:0%
application otherwise we're measuring
 

00:05:27.560 --> 00:05:29.850 align:start position:0%
application otherwise we're measuring
something<00:05:28.160><c> strange</c><00:05:28.730><c> we</c><00:05:29.000><c> are</c><00:05:29.030><c> not</c><00:05:29.240><c> measuring</c>

00:05:29.850 --> 00:05:29.860 align:start position:0%
something strange we are not measuring
 

00:05:29.860 --> 00:05:32.170 align:start position:0%
something strange we are not measuring
actually<00:05:30.860><c> your</c><00:05:31.040><c> application</c><00:05:31.580><c> but</c><00:05:31.790><c> something</c>

00:05:32.170 --> 00:05:32.180 align:start position:0%
actually your application but something
 

00:05:32.180 --> 00:05:34.360 align:start position:0%
actually your application but something
which<00:05:32.390><c> changes</c><00:05:32.780><c> the</c><00:05:32.870><c> behavior</c><00:05:32.960><c> etc</c><00:05:33.740><c> etc</c><00:05:33.830><c> so</c>

00:05:34.360 --> 00:05:34.370 align:start position:0%
which changes the behavior etc etc so
 

00:05:34.370 --> 00:05:39.220 align:start position:0%
which changes the behavior etc etc so
let's<00:05:35.090><c> have</c><00:05:35.900><c> a</c><00:05:35.960><c> look</c><00:05:36.280><c> how</c><00:05:37.280><c> we</c><00:05:38.020><c> achieve</c><00:05:39.020><c> all</c>

00:05:39.220 --> 00:05:39.230 align:start position:0%
let's have a look how we achieve all
 

00:05:39.230 --> 00:05:45.670 align:start position:0%
let's have a look how we achieve all
these<00:05:40.330><c> so</c><00:05:41.500><c> how</c><00:05:42.730><c> how</c><00:05:43.730><c> can</c><00:05:44.270><c> we</c><00:05:44.480><c> record</c><00:05:44.720><c> execution</c>

00:05:45.670 --> 00:05:45.680 align:start position:0%
these so how how can we record execution
 

00:05:45.680 --> 00:05:48.100 align:start position:0%
these so how how can we record execution
of<00:05:45.830><c> some</c><00:05:46.640><c> applications</c><00:05:47.240><c> there</c><00:05:47.450><c> is</c><00:05:47.480><c> several</c>

00:05:48.100 --> 00:05:48.110 align:start position:0%
of some applications there is several
 

00:05:48.110 --> 00:05:52.120 align:start position:0%
of some applications there is several
approaches<00:05:48.620><c> to</c><00:05:48.770><c> this</c><00:05:49.840><c> one</c><00:05:50.840><c> of</c><00:05:51.110><c> this</c><00:05:51.770><c> approach</c>

00:05:52.120 --> 00:05:52.130 align:start position:0%
approaches to this one of this approach
 

00:05:52.130 --> 00:05:54.250 align:start position:0%
approaches to this one of this approach
is<00:05:52.400><c> some</c><00:05:52.760><c> runtime</c><00:05:52.970><c> profile</c><00:05:53.540><c> link</c><00:05:53.690><c> you</c><00:05:53.900><c> can</c><00:05:54.020><c> use</c>

00:05:54.250 --> 00:05:54.260 align:start position:0%
is some runtime profile link you can use
 

00:05:54.260 --> 00:05:59.230 align:start position:0%
is some runtime profile link you can use
some<00:05:55.870><c> interfaces</c><00:05:56.870><c> gbmpid</c><00:05:57.790><c> gmj</c><00:05:58.790><c> etcetera</c>

00:05:59.230 --> 00:05:59.240 align:start position:0%
some interfaces gbmpid gmj etcetera
 

00:05:59.240 --> 00:05:59.860 align:start position:0%
some interfaces gbmpid gmj etcetera
etcetera

00:05:59.860 --> 00:05:59.870 align:start position:0%
etcetera
 

00:05:59.870 --> 00:06:02.530 align:start position:0%
etcetera
another<00:06:00.530><c> approach</c><00:06:01.180><c> you</c><00:06:02.180><c> can</c><00:06:02.360><c> do</c>

00:06:02.530 --> 00:06:02.540 align:start position:0%
another approach you can do
 

00:06:02.540 --> 00:06:05.530 align:start position:0%
another approach you can do
instrumentation<00:06:03.530><c> you</c><00:06:03.740><c> can</c><00:06:03.950><c> modify</c><00:06:04.670><c> what</c><00:06:05.390><c> is</c>

00:06:05.530 --> 00:06:05.540 align:start position:0%
instrumentation you can modify what is
 

00:06:05.540 --> 00:06:08.440 align:start position:0%
instrumentation you can modify what is
executed<00:06:06.200><c> in</c><00:06:06.410><c> a</c><00:06:06.560><c> way</c><00:06:06.740><c> sets</c><00:06:07.040><c> will</c><00:06:07.730><c> allow</c><00:06:08.150><c> you</c><00:06:08.210><c> to</c>

00:06:08.440 --> 00:06:08.450 align:start position:0%
executed in a way sets will allow you to
 

00:06:08.450 --> 00:06:11.740 align:start position:0%
executed in a way sets will allow you to
record<00:06:09.410><c> the</c><00:06:09.800><c> execution</c><00:06:10.280><c> process</c><00:06:10.490><c> and</c><00:06:10.910><c> that's</c>

00:06:11.740 --> 00:06:11.750 align:start position:0%
record the execution process and that's
 

00:06:11.750 --> 00:06:14.290 align:start position:0%
record the execution process and that's
a<00:06:11.900><c> that's</c><00:06:12.530><c> usually</c><00:06:13.400><c> the</c><00:06:13.550><c> approach</c><00:06:13.850><c> that</c><00:06:14.150><c> is</c>

00:06:14.290 --> 00:06:14.300 align:start position:0%
a that's usually the approach that is
 

00:06:14.300 --> 00:06:16.810 align:start position:0%
a that's usually the approach that is
taken<00:06:14.480><c> by</c><00:06:14.720><c> code</c><00:06:15.140><c> coverage</c><00:06:15.440><c> tools</c><00:06:15.830><c> and</c><00:06:16.070><c> jacoco</c>

00:06:16.810 --> 00:06:16.820 align:start position:0%
taken by code coverage tools and jacoco
 

00:06:16.820 --> 00:06:20.110 align:start position:0%
taken by code coverage tools and jacoco
is<00:06:17.030><c> not</c><00:06:17.210><c> exception</c><00:06:18.730><c> one</c><00:06:19.730><c> of</c><00:06:19.910><c> such</c>

00:06:20.110 --> 00:06:20.120 align:start position:0%
is not exception one of such
 

00:06:20.120 --> 00:06:21.940 align:start position:0%
is not exception one of such
instrumentation<00:06:20.930><c> approaches</c><00:06:21.530><c> you</c><00:06:21.740><c> can</c>

00:06:21.940 --> 00:06:21.950 align:start position:0%
instrumentation approaches you can
 

00:06:21.950 --> 00:06:23.590 align:start position:0%
instrumentation approaches you can
modify<00:06:22.250><c> the</c><00:06:22.460><c> source</c><00:06:22.850><c> code</c>

00:06:23.590 --> 00:06:23.600 align:start position:0%
modify the source code
 

00:06:23.600 --> 00:06:26.410 align:start position:0%
modify the source code
this<00:06:24.200><c> approach</c><00:06:24.530><c> is</c><00:06:24.680><c> taken</c><00:06:25.010><c> by</c><00:06:25.460><c> Atlassian</c>

00:06:26.410 --> 00:06:26.420 align:start position:0%
this approach is taken by Atlassian
 

00:06:26.420 --> 00:06:30.220 align:start position:0%
this approach is taken by Atlassian
clover<00:06:26.930><c> library</c><00:06:27.940><c> another</c><00:06:28.940><c> approach</c><00:06:29.720><c> you</c><00:06:30.050><c> can</c>

00:06:30.220 --> 00:06:30.230 align:start position:0%
clover library another approach you can
 

00:06:30.230 --> 00:06:32.080 align:start position:0%
clover library another approach you can
modify<00:06:30.530><c> the</c><00:06:30.710><c> bytecode</c><00:06:31.100><c> as</c><00:06:31.490><c> a</c><00:06:31.550><c> result</c><00:06:31.910><c> of</c>

00:06:32.080 --> 00:06:32.090 align:start position:0%
modify the bytecode as a result of
 

00:06:32.090 --> 00:06:35.460 align:start position:0%
modify the bytecode as a result of
compilation<00:06:32.480><c> of</c><00:06:32.870><c> the</c><00:06:33.710><c> source</c><00:06:33.950><c> code</c>

00:06:35.460 --> 00:06:35.470 align:start position:0%
compilation of the source code
 

00:06:35.470 --> 00:06:37.710 align:start position:0%
compilation of the source code
for<00:06:36.010><c> the</c><00:06:36.100><c> modification</c><00:06:36.400><c> of</c><00:06:36.850><c> bite</c><00:06:37.120><c> cuts</c><00:06:37.420><c> you</c>

00:06:37.710 --> 00:06:37.720 align:start position:0%
for the modification of bite cuts you
 

00:06:37.720 --> 00:06:40.280 align:start position:0%
for the modification of bite cuts you
also<00:06:37.840><c> have</c><00:06:38.170><c> two</c><00:06:38.380><c> options</c><00:06:38.740><c> you</c><00:06:38.830><c> can</c><00:06:39.010><c> do</c><00:06:39.370><c> this</c>

00:06:40.280 --> 00:06:40.290 align:start position:0%
also have two options you can do this
 

00:06:40.290 --> 00:06:43.230 align:start position:0%
also have two options you can do this
so-called<00:06:41.290><c> in</c><00:06:41.800><c> a</c><00:06:41.950><c> flying</c><00:06:42.190><c> mode</c><00:06:42.430><c> before</c><00:06:42.820><c> I</c><00:06:43.090><c> know</c>

00:06:43.230 --> 00:06:43.240 align:start position:0%
so-called in a flying mode before I know
 

00:06:43.240 --> 00:06:44.940 align:start position:0%
so-called in a flying mode before I know
your<00:06:43.570><c> application</c><00:06:43.630><c> you</c><00:06:44.380><c> prepare</c><00:06:44.770><c> your</c>

00:06:44.940 --> 00:06:44.950 align:start position:0%
your application you prepare your
 

00:06:44.950 --> 00:06:48.540 align:start position:0%
your application you prepare your
classes<00:06:45.430><c> you</c><00:06:46.300><c> instrument</c><00:06:46.780><c> them</c><00:06:46.990><c> and</c><00:06:47.550><c> another</c>

00:06:48.540 --> 00:06:48.550 align:start position:0%
classes you instrument them and another
 

00:06:48.550 --> 00:06:50.790 align:start position:0%
classes you instrument them and another
approach<00:06:48.970><c> is</c><00:06:49.330><c> to</c><00:06:49.780><c> do</c><00:06:49.960><c> exactly</c><00:06:50.470><c> the</c><00:06:50.770><c> same</c>

00:06:50.790 --> 00:06:50.800 align:start position:0%
approach is to do exactly the same
 

00:06:50.800 --> 00:06:53.300 align:start position:0%
approach is to do exactly the same
transformation<00:06:51.370><c> but</c><00:06:52.060><c> to</c><00:06:52.240><c> do</c><00:06:52.360><c> this</c><00:06:52.630><c> at</c><00:06:52.930><c> runtime</c>

00:06:53.300 --> 00:06:53.310 align:start position:0%
transformation but to do this at runtime
 

00:06:53.310 --> 00:06:56.270 align:start position:0%
transformation but to do this at runtime
so<00:06:54.310><c> transparently</c><00:06:55.210><c> for</c><00:06:55.570><c> your</c><00:06:55.720><c> build</c><00:06:55.930><c> process</c>

00:06:56.270 --> 00:06:56.280 align:start position:0%
so transparently for your build process
 

00:06:56.280 --> 00:06:59.550 align:start position:0%
so transparently for your build process
without<00:06:57.280><c> touching</c><00:06:57.670><c> actual</c><00:06:58.390><c> class</c><00:06:58.690><c> files</c><00:06:59.200><c> on</c><00:06:59.500><c> a</c>

00:06:59.550 --> 00:06:59.560 align:start position:0%
without touching actual class files on a
 

00:06:59.560 --> 00:07:00.840 align:start position:0%
without touching actual class files on a
disk

00:07:00.840 --> 00:07:00.850 align:start position:0%
disk
 

00:07:00.850 --> 00:07:03.060 align:start position:0%
disk
Juuko<00:07:01.390><c> implements</c><00:07:01.870><c> both</c><00:07:02.110><c> approaches</c><00:07:02.800><c> they</c>

00:07:03.060 --> 00:07:03.070 align:start position:0%
Juuko implements both approaches they
 

00:07:03.070 --> 00:07:09.240 align:start position:0%
Juuko implements both approaches they
both<00:07:03.310><c> has</c><00:07:03.580><c> pros</c><00:07:04.210><c> cons</c><00:07:04.510><c> etc</c><00:07:05.050><c> etc</c><00:07:06.090><c> and</c><00:07:07.470><c> as</c><00:07:08.470><c> JUCO</c>

00:07:09.240 --> 00:07:09.250 align:start position:0%
both has pros cons etc etc and as JUCO
 

00:07:09.250 --> 00:07:12.450 align:start position:0%
both has pros cons etc etc and as JUCO
works<00:07:09.490><c> on</c><00:07:09.790><c> byte</c><00:07:10.480><c> codes</c><00:07:10.810><c> it's</c><00:07:11.290><c> quite</c><00:07:11.920><c> important</c>

00:07:12.450 --> 00:07:12.460 align:start position:0%
works on byte codes it's quite important
 

00:07:12.460 --> 00:07:15.030 align:start position:0%
works on byte codes it's quite important
to<00:07:12.670><c> put</c><00:07:13.120><c> exclamation</c><00:07:13.690><c> mark</c><00:07:13.930><c> on</c><00:07:14.080><c> ZZZ</c><00:07:14.260><c> Jaco</c>

00:07:15.030 --> 00:07:15.040 align:start position:0%
to put exclamation mark on ZZZ Jaco
 

00:07:15.040 --> 00:07:16.860 align:start position:0%
to put exclamation mark on ZZZ Jaco
works<00:07:15.280><c> on</c><00:07:15.550><c> class</c><00:07:15.940><c> files</c><00:07:16.300><c> only</c>

00:07:16.860 --> 00:07:16.870 align:start position:0%
works on class files only
 

00:07:16.870 --> 00:07:19.560 align:start position:0%
works on class files only
it<00:07:17.290><c> doesn't</c><00:07:17.800><c> need</c><00:07:17.980><c> actually</c><00:07:18.760><c> a</c><00:07:18.910><c> source</c><00:07:19.210><c> files</c>

00:07:19.560 --> 00:07:19.570 align:start position:0%
it doesn't need actually a source files
 

00:07:19.570 --> 00:07:24.150 align:start position:0%
it doesn't need actually a source files
so<00:07:20.500><c> how</c><00:07:20.920><c> it</c><00:07:21.070><c> works</c><00:07:21.100><c> we</c><00:07:21.790><c> have</c><00:07:21.820><c> a</c><00:07:22.000><c> class</c><00:07:22.270><c> file</c><00:07:23.160><c> we</c>

00:07:24.150 --> 00:07:24.160 align:start position:0%
so how it works we have a class file we
 

00:07:24.160 --> 00:07:26.070 align:start position:0%
so how it works we have a class file we
do<00:07:24.310><c> instrumentation</c><00:07:25.000><c> we</c><00:07:25.150><c> do</c><00:07:25.270><c> modification</c><00:07:25.900><c> of</c>

00:07:26.070 --> 00:07:26.080 align:start position:0%
do instrumentation we do modification of
 

00:07:26.080 --> 00:07:27.840 align:start position:0%
do instrumentation we do modification of
this<00:07:26.230><c> class</c><00:07:26.470><c> file</c><00:07:26.710><c> with</c><00:07:26.920><c> a</c><00:07:26.950><c> modification</c><00:07:27.400><c> of</c>

00:07:27.840 --> 00:07:27.850 align:start position:0%
this class file with a modification of
 

00:07:27.850 --> 00:07:32.550 align:start position:0%
this class file with a modification of
bytecode<00:07:28.620><c> then</c><00:07:29.620><c> we</c><00:07:29.980><c> do</c><00:07:30.130><c> execution</c><00:07:30.790><c> of</c><00:07:31.000><c> of</c><00:07:31.560><c> what</c>

00:07:32.550 --> 00:07:32.560 align:start position:0%
bytecode then we do execution of of what
 

00:07:32.560 --> 00:07:34.650 align:start position:0%
bytecode then we do execution of of what
we<00:07:32.740><c> just</c><00:07:32.770><c> modified</c><00:07:33.460><c> this</c><00:07:34.150><c> process</c><00:07:34.570><c> of</c>

00:07:34.650 --> 00:07:34.660 align:start position:0%
we just modified this process of
 

00:07:34.660 --> 00:07:38.430 align:start position:0%
we just modified this process of
execution<00:07:35.110><c> is</c><00:07:35.380><c> going</c><00:07:35.590><c> to</c><00:07:35.710><c> record</c><00:07:37.440><c> the</c>

00:07:38.430 --> 00:07:38.440 align:start position:0%
execution is going to record the
 

00:07:38.440 --> 00:07:40.440 align:start position:0%
execution is going to record the
information<00:07:38.530><c> about</c><00:07:39.280><c> execution</c><00:07:39.790><c> in</c><00:07:40.090><c> some</c>

00:07:40.440 --> 00:07:40.450 align:start position:0%
information about execution in some
 

00:07:40.450 --> 00:07:45.930 align:start position:0%
information about execution in some
binary<00:07:40.870><c> format</c><00:07:41.530><c> which</c><00:07:41.710><c> we</c><00:07:41.890><c> call</c><00:07:42.040><c> exec</c><00:07:42.520><c> and</c><00:07:44.940><c> at</c>

00:07:45.930 --> 00:07:45.940 align:start position:0%
binary format which we call exec and at
 

00:07:45.940 --> 00:07:47.880 align:start position:0%
binary format which we call exec and at
the<00:07:46.120><c> time</c><00:07:46.330><c> of</c><00:07:46.360><c> report</c><00:07:46.870><c> analysis</c><00:07:47.440><c> we</c><00:07:47.650><c> again</c>

00:07:47.880 --> 00:07:47.890 align:start position:0%
the time of report analysis we again
 

00:07:47.890 --> 00:07:49.920 align:start position:0%
the time of report analysis we again
take<00:07:48.130><c> original</c><00:07:48.910><c> class</c><00:07:49.090><c> files</c><00:07:49.360><c> and</c><00:07:49.660><c> this</c><00:07:49.780><c> is</c>

00:07:49.920 --> 00:07:49.930 align:start position:0%
take original class files and this is
 

00:07:49.930 --> 00:07:52.200 align:start position:0%
take original class files and this is
also<00:07:50.200><c> important</c><00:07:50.620><c> original</c><00:07:51.430><c> Crossfire's</c><00:07:51.880><c> not</c>

00:07:52.200 --> 00:07:52.210 align:start position:0%
also important original Crossfire's not
 

00:07:52.210 --> 00:07:54.420 align:start position:0%
also important original Crossfire's not
some<00:07:52.420><c> other</c><00:07:52.600><c> class</c><00:07:53.020><c> files</c><00:07:53.320><c> but</c><00:07:53.740><c> but</c><00:07:54.220><c> really</c>

00:07:54.420 --> 00:07:54.430 align:start position:0%
some other class files but but really
 

00:07:54.430 --> 00:07:57.720 align:start position:0%
some other class files but but really
Zeus<00:07:54.850><c> which</c><00:07:55.240><c> we</c><00:07:55.450><c> instrumented</c><00:07:55.890><c> we</c><00:07:56.890><c> combined</c>

00:07:57.720 --> 00:07:57.730 align:start position:0%
Zeus which we instrumented we combined
 

00:07:57.730 --> 00:08:00.480 align:start position:0%
Zeus which we instrumented we combined
the<00:07:58.600><c> original</c><00:07:59.110><c> class</c><00:07:59.320><c> files</c><00:07:59.620><c> with</c><00:07:59.950><c> with</c>

00:08:00.480 --> 00:08:00.490 align:start position:0%
the original class files with with
 

00:08:00.490 --> 00:08:04.410 align:start position:0%
the original class files with with
execution<00:08:01.060><c> data</c><00:08:02.130><c> then</c><00:08:03.130><c> we</c><00:08:03.340><c> do</c><00:08:03.520><c> analyzes</c><00:08:04.240><c> and</c>

00:08:04.410 --> 00:08:04.420 align:start position:0%
execution data then we do analyzes and
 

00:08:04.420 --> 00:08:08.220 align:start position:0%
execution data then we do analyzes and
we<00:08:05.110><c> get</c><00:08:05.260><c> a</c><00:08:05.290><c> report</c><00:08:05.740><c> and</c><00:08:06.210><c> source</c><00:08:07.210><c> code</c><00:08:07.480><c> plays</c><00:08:07.960><c> a</c>

00:08:08.220 --> 00:08:08.230 align:start position:0%
we get a report and source code plays a
 

00:08:08.230 --> 00:08:11.670 align:start position:0%
we get a report and source code plays a
role<00:08:08.530><c> only</c><00:08:09.070><c> in</c><00:08:09.250><c> the</c><00:08:09.370><c> UI</c><00:08:09.520><c> so</c><00:08:10.480><c> just</c><00:08:11.200><c> to</c><00:08:11.380><c> display</c>

00:08:11.670 --> 00:08:11.680 align:start position:0%
role only in the UI so just to display
 

00:08:11.680 --> 00:08:14.370 align:start position:0%
role only in the UI so just to display
you<00:08:11.920><c> the</c><00:08:12.820><c> nice</c><00:08:13.030><c> highlight</c><00:08:13.540><c> and</c><00:08:13.750><c> copy</c><00:08:13.930><c> a</c><00:08:14.110><c> source</c>

00:08:14.370 --> 00:08:14.380 align:start position:0%
you the nice highlight and copy a source
 

00:08:14.380 --> 00:08:18.180 align:start position:0%
you the nice highlight and copy a source
code<00:08:14.650><c> this</c><00:08:15.100><c> is</c><00:08:15.310><c> the</c><00:08:15.580><c> only</c><00:08:16.270><c> moment</c><00:08:16.710><c> when</c><00:08:17.710><c> source</c>

00:08:18.180 --> 00:08:18.190 align:start position:0%
code this is the only moment when source
 

00:08:18.190 --> 00:08:20.160 align:start position:0%
code this is the only moment when source
code<00:08:18.460><c> plays</c><00:08:18.730><c> the</c><00:08:18.910><c> wrong</c><00:08:19.060><c> if</c><00:08:19.600><c> you</c><00:08:19.810><c> don't</c><00:08:19.990><c> have</c>

00:08:20.160 --> 00:08:20.170 align:start position:0%
code plays the wrong if you don't have
 

00:08:20.170 --> 00:08:23.310 align:start position:0%
code plays the wrong if you don't have
source<00:08:20.440><c> code</c><00:08:20.710><c> we</c><00:08:21.490><c> anyway</c><00:08:22.030><c> can</c><00:08:22.270><c> tell</c><00:08:22.510><c> you</c><00:08:22.720><c> this</c>

00:08:23.310 --> 00:08:23.320 align:start position:0%
source code we anyway can tell you this
 

00:08:23.320 --> 00:08:25.920 align:start position:0%
source code we anyway can tell you this
amount<00:08:23.650><c> of</c><00:08:23.920><c> lines</c><00:08:24.160><c> has</c><00:08:24.910><c> been</c><00:08:25.090><c> covered</c><00:08:25.450><c> this</c>

00:08:25.920 --> 00:08:25.930 align:start position:0%
amount of lines has been covered this
 

00:08:25.930 --> 00:08:27.690 align:start position:0%
amount of lines has been covered this
amount<00:08:26.320><c> of</c><00:08:26.470><c> methods</c><00:08:26.830><c> has</c><00:08:27.010><c> been</c><00:08:27.160><c> covered</c><00:08:27.490><c> and</c>

00:08:27.690 --> 00:08:27.700 align:start position:0%
amount of methods has been covered and
 

00:08:27.700 --> 00:08:35.969 align:start position:0%
amount of methods has been covered and
etc<00:08:28.150><c> etc</c><00:08:30.780><c> and</c><00:08:32.220><c> yeah</c><00:08:34.290><c> speaking</c><00:08:35.290><c> about</c><00:08:35.620><c> how</c><00:08:35.950><c> to</c>

00:08:35.969 --> 00:08:35.979 align:start position:0%
etc etc and yeah speaking about how to
 

00:08:35.979 --> 00:08:38.010 align:start position:0%
etc etc and yeah speaking about how to
integrate<00:08:36.370><c> all</c><00:08:36.970><c> these</c><00:08:37.300><c> into</c><00:08:37.660><c> a</c><00:08:37.690><c> build</c><00:08:37.960><c> process</c>

00:08:38.010 --> 00:08:38.020 align:start position:0%
integrate all these into a build process
 

00:08:38.020 --> 00:08:41.040 align:start position:0%
integrate all these into a build process
it's<00:08:38.590><c> as</c><00:08:38.860><c> easy</c><00:08:39.070><c> as</c><00:08:39.310><c> setting</c><00:08:39.610><c> one</c><00:08:40.479><c> argument</c><00:08:40.780><c> for</c>

00:08:41.040 --> 00:08:41.050 align:start position:0%
it's as easy as setting one argument for
 

00:08:41.050 --> 00:08:46.230 align:start position:0%
it's as easy as setting one argument for
the<00:08:41.320><c> JVM</c><00:08:42.780><c> we</c><00:08:43.780><c> need</c><00:08:43.960><c> to</c><00:08:44.229><c> attach</c><00:08:44.730><c> so-called</c><00:08:45.730><c> Java</c>

00:08:46.230 --> 00:08:46.240 align:start position:0%
the JVM we need to attach so-called Java
 

00:08:46.240 --> 00:08:48.360 align:start position:0%
the JVM we need to attach so-called Java
agent<00:08:46.750><c> which</c><00:08:46.960><c> will</c><00:08:47.170><c> perform</c><00:08:47.590><c> in</c>

00:08:48.360 --> 00:08:48.370 align:start position:0%
agent which will perform in
 

00:08:48.370 --> 00:08:50.610 align:start position:0%
agent which will perform in
mutation<00:08:48.820><c> and</c><00:08:49.050><c> transformation</c><00:08:50.050><c> of</c><00:08:50.260><c> the</c><00:08:50.440><c> byte</c>

00:08:50.610 --> 00:08:50.620 align:start position:0%
mutation and transformation of the byte
 

00:08:50.620 --> 00:08:55.800 align:start position:0%
mutation and transformation of the byte
code<00:08:52.410><c> this</c><00:08:53.410><c> Java</c><00:08:53.740><c> agent</c><00:08:54.810><c> implemented</c>

00:08:55.800 --> 00:08:55.810 align:start position:0%
code this Java agent implemented
 

00:08:55.810 --> 00:09:00.480 align:start position:0%
code this Java agent implemented
something<00:08:56.080><c> like</c><00:08:56.470><c> this</c><00:08:57.900><c> it</c><00:08:58.900><c> starts</c><00:08:59.290><c> after</c><00:09:00.100><c> the</c>

00:09:00.480 --> 00:09:00.490 align:start position:0%
something like this it starts after the
 

00:09:00.490 --> 00:09:03.360 align:start position:0%
something like this it starts after the
JVM<00:09:00.880><c> startup</c><00:09:01.390><c> but</c><00:09:01.750><c> before</c><00:09:02.680><c> the</c><00:09:02.800><c> startup</c><00:09:03.220><c> of</c>

00:09:03.360 --> 00:09:03.370 align:start position:0%
JVM startup but before the startup of
 

00:09:03.370 --> 00:09:05.730 align:start position:0%
JVM startup but before the startup of
your<00:09:03.550><c> application</c><00:09:04.120><c> this</c><00:09:04.839><c> Java</c><00:09:05.110><c> agent</c><00:09:05.500><c> has</c><00:09:05.710><c> a</c>

00:09:05.730 --> 00:09:05.740 align:start position:0%
your application this Java agent has a
 

00:09:05.740 --> 00:09:08.850 align:start position:0%
your application this Java agent has a
capability<00:09:06.070><c> to</c><00:09:06.520><c> say</c><00:09:06.880><c> okay</c><00:09:07.720><c> any</c><00:09:08.440><c> class</c><00:09:08.830><c> that</c>

00:09:08.850 --> 00:09:08.860 align:start position:0%
capability to say okay any class that
 

00:09:08.860 --> 00:09:12.300 align:start position:0%
capability to say okay any class that
JVM<00:09:09.520><c> is</c><00:09:09.610><c> gonna</c><00:09:10.050><c> load</c><00:09:11.050><c> I'd</c><00:09:11.500><c> like</c><00:09:11.860><c> to</c><00:09:12.100><c> have</c><00:09:12.279><c> a</c>

00:09:12.300 --> 00:09:12.310 align:start position:0%
JVM is gonna load I'd like to have a
 

00:09:12.310 --> 00:09:17.310 align:start position:0%
JVM is gonna load I'd like to have a
chance<00:09:12.640><c> to</c><00:09:12.790><c> transform</c><00:09:13.630><c> its</c><00:09:13.870><c> bytecode</c><00:09:16.320><c> let's</c>

00:09:17.310 --> 00:09:17.320 align:start position:0%
chance to transform its bytecode let's
 

00:09:17.320 --> 00:09:19.579 align:start position:0%
chance to transform its bytecode let's
have<00:09:17.560><c> a</c><00:09:17.589><c> look</c><00:09:17.800><c> on</c><00:09:17.980><c> what</c><00:09:18.220><c> these</c><00:09:18.820><c> byte</c><00:09:19.089><c> codes</c>

00:09:19.579 --> 00:09:19.589 align:start position:0%
have a look on what these byte codes
 

00:09:19.589 --> 00:09:23.400 align:start position:0%
have a look on what these byte codes
transformation<00:09:20.589><c> is</c><00:09:21.660><c> on</c><00:09:22.660><c> the</c><00:09:22.839><c> slide</c><00:09:23.050><c> you</c><00:09:23.260><c> can</c>

00:09:23.400 --> 00:09:23.410 align:start position:0%
transformation is on the slide you can
 

00:09:23.410 --> 00:09:27.180 align:start position:0%
transformation is on the slide you can
see<00:09:23.470><c> some</c><00:09:24.660><c> control</c><00:09:25.660><c> flow</c><00:09:25.900><c> graph</c><00:09:26.260><c> of</c><00:09:26.529><c> some</c>

00:09:27.180 --> 00:09:27.190 align:start position:0%
see some control flow graph of some
 

00:09:27.190 --> 00:09:29.670 align:start position:0%
see some control flow graph of some
application<00:09:27.790><c> you</c><00:09:27.940><c> have</c><00:09:28.000><c> some</c><00:09:28.650><c> sequences</c><00:09:29.650><c> of</c>

00:09:29.670 --> 00:09:29.680 align:start position:0%
application you have some sequences of
 

00:09:29.680 --> 00:09:33.329 align:start position:0%
application you have some sequences of
instructions<00:09:30.660><c> you</c><00:09:31.660><c> have</c><00:09:31.900><c> some</c><00:09:32.339><c> conditional</c>

00:09:33.329 --> 00:09:33.339 align:start position:0%
instructions you have some conditional
 

00:09:33.339 --> 00:09:36.960 align:start position:0%
instructions you have some conditional
jumps<00:09:34.330><c> you</c><00:09:35.080><c> have</c><00:09:35.110><c> entry</c><00:09:35.650><c> point</c><00:09:35.920><c> you</c><00:09:36.339><c> have</c><00:09:36.520><c> exit</c>

00:09:36.960 --> 00:09:36.970 align:start position:0%
jumps you have entry point you have exit
 

00:09:36.970 --> 00:09:40.050 align:start position:0%
jumps you have entry point you have exit
point<00:09:37.210><c> and</c><00:09:38.250><c> in</c><00:09:39.250><c> order</c><00:09:39.520><c> to</c><00:09:39.640><c> record</c><00:09:39.850><c> the</c>

00:09:40.050 --> 00:09:40.060 align:start position:0%
point and in order to record the
 

00:09:40.060 --> 00:09:43.590 align:start position:0%
point and in order to record the
execution<00:09:41.050><c> process</c><00:09:41.760><c> just</c><00:09:42.760><c> in</c><00:09:42.940><c> certain</c><00:09:43.120><c> places</c>

00:09:43.590 --> 00:09:43.600 align:start position:0%
execution process just in certain places
 

00:09:43.600 --> 00:09:46.470 align:start position:0%
execution process just in certain places
of<00:09:44.140><c> this</c><00:09:44.589><c> control</c><00:09:45.370><c> flow</c><00:09:45.550><c> we</c><00:09:45.760><c> need</c><00:09:45.910><c> to</c><00:09:46.150><c> insert</c>

00:09:46.470 --> 00:09:46.480 align:start position:0%
of this control flow we need to insert
 

00:09:46.480 --> 00:09:51.990 align:start position:0%
of this control flow we need to insert
so-called<00:09:47.440><c> props</c><00:09:49.020><c> so</c><00:09:50.020><c> for</c><00:09:50.320><c> example</c><00:09:50.770><c> if</c><00:09:51.000><c> prop</c>

00:09:51.990 --> 00:09:52.000 align:start position:0%
so-called props so for example if prop
 

00:09:52.000 --> 00:09:54.269 align:start position:0%
so-called props so for example if prop
at<00:09:52.270><c> the</c><00:09:52.450><c> bottom</c><00:09:52.810><c> is</c><00:09:52.959><c> rigid</c><00:09:53.440><c> if</c><00:09:53.620><c> we</c><00:09:53.800><c> know</c><00:09:53.980><c> that</c>

00:09:54.269 --> 00:09:54.279 align:start position:0%
at the bottom is rigid if we know that
 

00:09:54.279 --> 00:09:56.970 align:start position:0%
at the bottom is rigid if we know that
this<00:09:54.610><c> piece</c><00:09:55.120><c> of</c><00:09:55.150><c> code</c><00:09:55.510><c> was</c><00:09:55.720><c> executed</c><00:09:55.870><c> then</c><00:09:56.830><c> we</c>

00:09:56.970 --> 00:09:56.980 align:start position:0%
this piece of code was executed then we
 

00:09:56.980 --> 00:10:00.660 align:start position:0%
this piece of code was executed then we
know<00:09:57.160><c> that</c><00:09:58.320><c> the</c><00:09:59.320><c> exit</c><00:09:59.650><c> of</c><00:09:59.830><c> the</c><00:10:00.160><c> method</c><00:10:00.459><c> was</c>

00:10:00.660 --> 00:10:00.670 align:start position:0%
know that the exit of the method was
 

00:10:00.670 --> 00:10:04.320 align:start position:0%
know that the exit of the method was
Richard<00:10:01.089><c> if</c><00:10:02.020><c> the</c><00:10:02.770><c> left</c><00:10:02.980><c> prop</c><00:10:03.310><c> was</c><00:10:03.880><c> Richard</c>

00:10:04.320 --> 00:10:04.330 align:start position:0%
Richard if the left prop was Richard
 

00:10:04.330 --> 00:10:06.260 align:start position:0%
Richard if the left prop was Richard
then<00:10:04.510><c> we</c><00:10:04.690><c> know</c><00:10:04.839><c> okay</c><00:10:05.410><c> one</c><00:10:05.650><c> branch</c><00:10:06.010><c> of</c>

00:10:06.260 --> 00:10:06.270 align:start position:0%
then we know okay one branch of
 

00:10:06.270 --> 00:10:09.210 align:start position:0%
then we know okay one branch of
conditional<00:10:07.270><c> jump</c><00:10:07.570><c> was</c><00:10:07.810><c> Richard</c><00:10:08.260><c> if</c><00:10:08.800><c> you</c><00:10:09.040><c> know</c>

00:10:09.210 --> 00:10:09.220 align:start position:0%
conditional jump was Richard if you know
 

00:10:09.220 --> 00:10:11.940 align:start position:0%
conditional jump was Richard if you know
that<00:10:09.490><c> the</c><00:10:10.300><c> right</c><00:10:10.480><c> prop</c><00:10:10.870><c> was</c><00:10:11.080><c> Richard</c><00:10:11.529><c> we</c><00:10:11.800><c> know</c>

00:10:11.940 --> 00:10:11.950 align:start position:0%
that the right prop was Richard we know
 

00:10:11.950 --> 00:10:15.690 align:start position:0%
that the right prop was Richard we know
that<00:10:12.160><c> another</c><00:10:12.520><c> branch</c><00:10:12.910><c> of</c><00:10:14.459><c> conditional</c><00:10:15.459><c> jump</c>

00:10:15.690 --> 00:10:15.700 align:start position:0%
that another branch of conditional jump
 

00:10:15.700 --> 00:10:21.630 align:start position:0%
that another branch of conditional jump
was<00:10:15.910><c> reached</c><00:10:16.709><c> a</c><00:10:19.170><c> little</c><00:10:20.170><c> bit</c><00:10:20.560><c> more</c><00:10:21.160><c> precisely</c>

00:10:21.630 --> 00:10:21.640 align:start position:0%
was reached a little bit more precisely
 

00:10:21.640 --> 00:10:25.410 align:start position:0%
was reached a little bit more precisely
on<00:10:22.150><c> how</c><00:10:22.540><c> do</c><00:10:22.600><c> we</c><00:10:22.930><c> insert</c><00:10:23.440><c> those</c><00:10:23.680><c> props</c><00:10:24.180><c> if</c><00:10:25.180><c> you</c>

00:10:25.410 --> 00:10:25.420 align:start position:0%
on how do we insert those props if you
 

00:10:25.420 --> 00:10:27.210 align:start position:0%
on how do we insert those props if you
have<00:10:25.600><c> a</c><00:10:25.810><c> sequence</c><00:10:26.200><c> of</c><00:10:26.560><c> some</c><00:10:26.830><c> bad</c><00:10:27.010><c> cut</c>

00:10:27.210 --> 00:10:27.220 align:start position:0%
have a sequence of some bad cut
 

00:10:27.220 --> 00:10:29.100 align:start position:0%
have a sequence of some bad cut
instructions<00:10:27.850><c> it's</c><00:10:28.180><c> it's</c><00:10:28.510><c> incredibly</c><00:10:29.050><c> easy</c>

00:10:29.100 --> 00:10:29.110 align:start position:0%
instructions it's it's incredibly easy
 

00:10:29.110 --> 00:10:32.340 align:start position:0%
instructions it's it's incredibly easy
you<00:10:29.410><c> just</c><00:10:29.470><c> can</c><00:10:29.950><c> insert</c><00:10:30.339><c> your</c><00:10:31.240><c> prop</c><00:10:31.510><c> in</c><00:10:31.870><c> between</c>

00:10:32.340 --> 00:10:32.350 align:start position:0%
you just can insert your prop in between
 

00:10:32.350 --> 00:10:35.130 align:start position:0%
you just can insert your prop in between
two<00:10:32.529><c> instructions</c><00:10:33.130><c> and</c><00:10:33.510><c> you</c><00:10:34.510><c> will</c><00:10:34.540><c> know</c><00:10:34.870><c> that</c>

00:10:35.130 --> 00:10:35.140 align:start position:0%
two instructions and you will know that
 

00:10:35.140 --> 00:10:37.440 align:start position:0%
two instructions and you will know that
if<00:10:35.770><c> this</c><00:10:36.070><c> prop</c><00:10:36.339><c> is</c><00:10:36.520><c> executed</c><00:10:37.060><c> then</c><00:10:37.240><c> all</c>

00:10:37.440 --> 00:10:37.450 align:start position:0%
if this prop is executed then all
 

00:10:37.450 --> 00:10:39.780 align:start position:0%
if this prop is executed then all
instructions<00:10:38.170><c> before</c><00:10:38.589><c> this</c><00:10:39.010><c> probe</c><00:10:39.279><c> has</c><00:10:39.580><c> been</c>

00:10:39.780 --> 00:10:39.790 align:start position:0%
instructions before this probe has been
 

00:10:39.790 --> 00:10:43.769 align:start position:0%
instructions before this probe has been
executed<00:10:40.980><c> if</c><00:10:41.980><c> we</c><00:10:42.220><c> have</c><00:10:42.430><c> exit</c><00:10:43.180><c> of</c><00:10:43.330><c> a</c><00:10:43.450><c> method</c>

00:10:43.769 --> 00:10:43.779 align:start position:0%
executed if we have exit of a method
 

00:10:43.779 --> 00:10:45.870 align:start position:0%
executed if we have exit of a method
it's<00:10:44.440><c> a</c><00:10:44.620><c> little</c><00:10:44.860><c> bit</c><00:10:44.980><c> more</c><00:10:45.130><c> tricky</c><00:10:45.339><c> you</c><00:10:45.670><c> can't</c>

00:10:45.870 --> 00:10:45.880 align:start position:0%
it's a little bit more tricky you can't
 

00:10:45.880 --> 00:10:48.630 align:start position:0%
it's a little bit more tricky you can't
put<00:10:46.180><c> your</c><00:10:46.930><c> prop</c><00:10:47.200><c> after</c><00:10:47.680><c> the</c><00:10:47.830><c> exit</c><00:10:48.220><c> you</c><00:10:48.250><c> need</c><00:10:48.490><c> to</c>

00:10:48.630 --> 00:10:48.640 align:start position:0%
put your prop after the exit you need to
 

00:10:48.640 --> 00:10:50.730 align:start position:0%
put your prop after the exit you need to
put<00:10:48.820><c> it</c><00:10:48.970><c> a</c><00:10:49.209><c> little</c><00:10:49.270><c> bit</c><00:10:49.720><c> before</c><00:10:49.900><c> so</c><00:10:50.320><c> we</c><00:10:50.529><c> place</c>

00:10:50.730 --> 00:10:50.740 align:start position:0%
put it a little bit before so we place
 

00:10:50.740 --> 00:10:53.400 align:start position:0%
put it a little bit before so we place
it<00:10:50.980><c> just</c><00:10:51.610><c> before</c><00:10:51.850><c> the</c><00:10:52.060><c> return</c><00:10:52.390><c> from</c><00:10:53.200><c> the</c>

00:10:53.400 --> 00:10:53.410 align:start position:0%
it just before the return from the
 

00:10:53.410 --> 00:10:58.230 align:start position:0%
it just before the return from the
method<00:10:54.300><c> if</c><00:10:55.300><c> you</c><00:10:55.510><c> have</c><00:10:55.720><c> a</c><00:10:55.959><c> jump</c><00:10:56.700><c> it's</c><00:10:57.700><c> pretty</c>

00:10:58.230 --> 00:10:58.240 align:start position:0%
method if you have a jump it's pretty
 

00:10:58.240 --> 00:11:00.329 align:start position:0%
method if you have a jump it's pretty
much<00:10:58.480><c> similar</c><00:10:58.750><c> to</c><00:10:58.990><c> the</c><00:10:59.350><c> exit</c><00:10:59.740><c> of</c><00:10:59.829><c> the</c><00:10:59.890><c> method</c>

00:11:00.329 --> 00:11:00.339 align:start position:0%
much similar to the exit of the method
 

00:11:00.339 --> 00:11:02.100 align:start position:0%
much similar to the exit of the method
you<00:11:00.670><c> you</c><00:11:01.000><c> place</c><00:11:01.240><c> the</c><00:11:01.420><c> prop</c>

00:11:02.100 --> 00:11:02.110 align:start position:0%
you you place the prop
 

00:11:02.110 --> 00:11:04.920 align:start position:0%
you you place the prop
before<00:11:02.440><c> the</c><00:11:02.560><c> jump</c><00:11:02.830><c> if</c><00:11:03.640><c> prop</c><00:11:04.030><c> is</c><00:11:04.210><c> executed</c><00:11:04.780><c> you</c>

00:11:04.920 --> 00:11:04.930 align:start position:0%
before the jump if prop is executed you
 

00:11:04.930 --> 00:11:08.670 align:start position:0%
before the jump if prop is executed you
know<00:11:04.960><c> that</c><00:11:05.380><c> jump</c><00:11:06.130><c> was</c><00:11:06.190><c> executed</c><00:11:06.930><c> in</c><00:11:07.930><c> case</c><00:11:08.470><c> of</c>

00:11:08.670 --> 00:11:08.680 align:start position:0%
know that jump was executed in case of
 

00:11:08.680 --> 00:11:12.440 align:start position:0%
know that jump was executed in case of
conditional<00:11:09.400><c> branches</c><00:11:10.260><c> conditional</c><00:11:11.260><c> jumps</c>

00:11:12.440 --> 00:11:12.450 align:start position:0%
conditional branches conditional jumps
 

00:11:12.450 --> 00:11:16.310 align:start position:0%
conditional branches conditional jumps
it's<00:11:13.450><c> a</c><00:11:13.630><c> little</c><00:11:13.900><c> bit</c><00:11:14.280><c> more</c><00:11:15.280><c> tricky</c><00:11:15.580><c> but</c>

00:11:16.310 --> 00:11:16.320 align:start position:0%
it's a little bit more tricky but
 

00:11:16.320 --> 00:11:19.170 align:start position:0%
it's a little bit more tricky but
basically<00:11:17.320><c> you</c><00:11:17.980><c> just</c><00:11:18.010><c> need</c><00:11:18.430><c> to</c><00:11:18.610><c> know</c><00:11:18.730><c> the</c><00:11:18.940><c> fact</c>

00:11:19.170 --> 00:11:19.180 align:start position:0%
basically you just need to know the fact
 

00:11:19.180 --> 00:11:21.390 align:start position:0%
basically you just need to know the fact
which<00:11:19.750><c> branches</c><00:11:20.170><c> cover</c><00:11:20.440><c> it</c><00:11:20.680><c> so</c><00:11:20.890><c> you</c><00:11:20.950><c> insert</c>

00:11:21.390 --> 00:11:21.400 align:start position:0%
which branches cover it so you insert
 

00:11:21.400 --> 00:11:24.720 align:start position:0%
which branches cover it so you insert
drop<00:11:21.760><c> on</c><00:11:22.060><c> one</c><00:11:22.330><c> of</c><00:11:22.360><c> those</c><00:11:22.750><c> branches</c><00:11:23.080><c> and</c><00:11:23.520><c> if</c><00:11:24.520><c> it</c>

00:11:24.720 --> 00:11:24.730 align:start position:0%
drop on one of those branches and if it
 

00:11:24.730 --> 00:11:26.340 align:start position:0%
drop on one of those branches and if it
is<00:11:24.880><c> executed</c><00:11:25.420><c> you</c><00:11:25.570><c> know</c><00:11:25.600><c> that</c><00:11:25.960><c> this</c><00:11:26.080><c> branch</c>

00:11:26.340 --> 00:11:26.350 align:start position:0%
is executed you know that this branch
 

00:11:26.350 --> 00:11:31.050 align:start position:0%
is executed you know that this branch
was<00:11:26.560><c> executed</c><00:11:28.800><c> and</c><00:11:29.800><c> you</c><00:11:30.370><c> can</c><00:11:30.550><c> imagine</c><00:11:30.790><c> that</c>

00:11:31.050 --> 00:11:31.060 align:start position:0%
was executed and you can imagine that
 

00:11:31.060 --> 00:11:33.810 align:start position:0%
was executed and you can imagine that
all<00:11:31.600><c> this</c><00:11:31.960><c> was</c><00:11:32.230><c> just</c><00:11:32.710><c> the</c><00:11:32.830><c> basic</c><00:11:33.190><c> strategies</c>

00:11:33.810 --> 00:11:33.820 align:start position:0%
all this was just the basic strategies
 

00:11:33.820 --> 00:11:38.130 align:start position:0%
all this was just the basic strategies
and<00:11:34.090><c> Java</c><00:11:34.750><c> compiler</c><00:11:35.140><c> actually</c><00:11:36.010><c> generates</c><00:11:37.140><c> far</c>

00:11:38.130 --> 00:11:38.140 align:start position:0%
and Java compiler actually generates far
 

00:11:38.140 --> 00:11:40.920 align:start position:0%
and Java compiler actually generates far
more<00:11:38.320><c> sophisticated</c><00:11:39.330><c> combinations</c><00:11:40.330><c> of</c><00:11:40.540><c> Zeus</c>

00:11:40.920 --> 00:11:40.930 align:start position:0%
more sophisticated combinations of Zeus
 

00:11:40.930 --> 00:11:45.440 align:start position:0%
more sophisticated combinations of Zeus
and<00:11:41.230><c> so</c><00:11:42.600><c> all</c><00:11:43.600><c> these</c><00:11:43.960><c> needed</c><00:11:44.410><c> to</c><00:11:44.530><c> be</c><00:11:44.650><c> tested</c><00:11:45.010><c> and</c>

00:11:45.440 --> 00:11:45.450 align:start position:0%
and so all these needed to be tested and
 

00:11:45.450 --> 00:11:48.200 align:start position:0%
and so all these needed to be tested and
to<00:11:46.450><c> do</c><00:11:46.570><c> such</c><00:11:46.780><c> distinct</c><00:11:47.290><c> we</c><00:11:47.500><c> have</c><00:11:47.680><c> so</c><00:11:47.890><c> called</c>

00:11:48.200 --> 00:11:48.210 align:start position:0%
to do such distinct we have so called
 

00:11:48.210 --> 00:11:51.410 align:start position:0%
to do such distinct we have so called
Joko<00:11:49.210><c> validation</c><00:11:49.780><c> test</c><00:11:49.990><c> suit</c><00:11:50.260><c> we</c><00:11:50.980><c> write</c>

00:11:51.410 --> 00:11:51.420 align:start position:0%
Joko validation test suit we write
 

00:11:51.420 --> 00:11:55.740 align:start position:0%
Joko validation test suit we write
various<00:11:52.530><c> different</c><00:11:53.530><c> pieces</c><00:11:53.920><c> of</c><00:11:54.100><c> java</c><00:11:54.670><c> code</c><00:11:54.910><c> to</c>

00:11:55.740 --> 00:11:55.750 align:start position:0%
various different pieces of java code to
 

00:11:55.750 --> 00:12:00.750 align:start position:0%
various different pieces of java code to
verify<00:11:56.110><c> that</c><00:11:56.770><c> and</c><00:11:57.160><c> and</c><00:11:57.990><c> purifies</c><00:11:58.990><c> that</c><00:11:59.760><c> record</c>

00:12:00.750 --> 00:12:00.760 align:start position:0%
verify that and and purifies that record
 

00:12:00.760 --> 00:12:03.690 align:start position:0%
verify that and and purifies that record
at<00:12:00.940><c> code</c><00:12:01.240><c> coverage</c><00:12:01.630><c> and</c><00:12:02.170><c> the</c><00:12:02.770><c> reported</c><00:12:03.310><c> result</c>

00:12:03.690 --> 00:12:03.700 align:start position:0%
at code coverage and the reported result
 

00:12:03.700 --> 00:12:08.070 align:start position:0%
at code coverage and the reported result
is<00:12:03.880><c> an</c><00:12:04.210><c> is</c><00:12:04.690><c> the</c><00:12:04.990><c> ones</c><00:12:05.230><c> that</c><00:12:05.470><c> we</c><00:12:06.040><c> expect</c><00:12:06.900><c> we</c><00:12:07.900><c> do</c>

00:12:08.070 --> 00:12:08.080 align:start position:0%
is an is the ones that we expect we do
 

00:12:08.080 --> 00:12:10.410 align:start position:0%
is an is the ones that we expect we do
this<00:12:08.290><c> by</c><00:12:08.620><c> annotating</c><00:12:09.430><c> the</c><00:12:09.460><c> source</c><00:12:09.880><c> code</c><00:12:10.180><c> with</c>

00:12:10.410 --> 00:12:10.420 align:start position:0%
this by annotating the source code with
 

00:12:10.420 --> 00:12:13.110 align:start position:0%
this by annotating the source code with
special<00:12:10.990><c> markers</c><00:12:11.470><c> later</c><00:12:12.250><c> on</c><00:12:12.580><c> we</c><00:12:12.820><c> can</c><00:12:12.940><c> do</c>

00:12:13.110 --> 00:12:13.120 align:start position:0%
special markers later on we can do
 

00:12:13.120 --> 00:12:16.380 align:start position:0%
special markers later on we can do
assertions<00:12:13.660><c> on</c><00:12:13.900><c> Zeus</c><00:12:14.110><c> markers</c><00:12:14.760><c> same</c><00:12:15.760><c> Koki</c>

00:12:16.380 --> 00:12:16.390 align:start position:0%
assertions on Zeus markers same Koki
 

00:12:16.390 --> 00:12:19.170 align:start position:0%
assertions on Zeus markers same Koki
what<00:12:17.110><c> happened</c><00:12:17.500><c> it's</c><00:12:17.680><c> at</c><00:12:18.190><c> a</c><00:12:18.250><c> line</c><00:12:18.610><c> where</c><00:12:18.970><c> we</c>

00:12:19.170 --> 00:12:19.180 align:start position:0%
what happened it's at a line where we
 

00:12:19.180 --> 00:12:28.260 align:start position:0%
what happened it's at a line where we
have<00:12:19.440><c> a</c><00:12:20.440><c> while</c><00:12:20.920><c> loop</c><00:12:22.590><c> etc</c><00:12:23.590><c> etcetera</c><00:12:25.560><c> and</c><00:12:27.030><c> so</c><00:12:28.030><c> we</c>

00:12:28.260 --> 00:12:28.270 align:start position:0%
have a while loop etc etcetera and so we
 

00:12:28.270 --> 00:12:31.950 align:start position:0%
have a while loop etc etcetera and so we
execute<00:12:28.690><c> this</c><00:12:28.870><c> test</c><00:12:29.590><c> suit</c><00:12:29.860><c> on</c><00:12:30.100><c> five</c><00:12:31.000><c> major</c><00:12:31.270><c> GDK</c>

00:12:31.950 --> 00:12:31.960 align:start position:0%
execute this test suit on five major GDK
 

00:12:31.960 --> 00:12:35.580 align:start position:0%
execute this test suit on five major GDK
versions<00:12:32.380><c> we</c><00:12:32.590><c> support</c><00:12:33.840><c> Java</c><00:12:34.840><c> agents</c><00:12:35.410><c> were</c>

00:12:35.580 --> 00:12:35.590 align:start position:0%
versions we support Java agents were
 

00:12:35.590 --> 00:12:38.370 align:start position:0%
versions we support Java agents were
introduced<00:12:36.130><c> it</c><00:12:36.340><c> in</c><00:12:36.580><c> Java</c><00:12:37.270><c> five</c><00:12:37.570><c> so</c><00:12:37.900><c> this</c><00:12:38.200><c> is</c>

00:12:38.370 --> 00:12:38.380 align:start position:0%
introduced it in Java five so this is
 

00:12:38.380 --> 00:12:41.970 align:start position:0%
introduced it in Java five so this is
our<00:12:38.670><c> minimal</c><00:12:39.670><c> supported</c><00:12:40.210><c> target</c><00:12:40.980><c> maximal</c>

00:12:41.970 --> 00:12:41.980 align:start position:0%
our minimal supported target maximal
 

00:12:41.980 --> 00:12:45.980 align:start position:0%
our minimal supported target maximal
support<00:12:42.640><c> at</c><00:12:42.760><c> one</c><00:12:43.000><c> as</c><00:12:43.270><c> of</c><00:12:43.540><c> today</c><00:12:43.870><c> is</c><00:12:44.110><c> Java</c><00:12:44.620><c> nine</c>

00:12:45.980 --> 00:12:45.990 align:start position:0%
support at one as of today is Java nine
 

00:12:45.990 --> 00:12:49.530 align:start position:0%
support at one as of today is Java nine
we<00:12:46.990><c> also</c><00:12:47.140><c> do</c><00:12:47.610><c> testing</c><00:12:48.610><c> of</c><00:12:48.820><c> early</c><00:12:49.480><c> access</c>

00:12:49.530 --> 00:12:49.540 align:start position:0%
we also do testing of early access
 

00:12:49.540 --> 00:12:55.830 align:start position:0%
we also do testing of early access
builds<00:12:50.580><c> and</c><00:12:52.860><c> thanks</c><00:12:53.860><c> to</c><00:12:54.040><c> all</c><00:12:54.250><c> this</c><00:12:54.460><c> testing</c><00:12:54.970><c> we</c>

00:12:55.830 --> 00:12:55.840 align:start position:0%
builds and thanks to all this testing we
 

00:12:55.840 --> 00:12:57.930 align:start position:0%
builds and thanks to all this testing we
dint<00:12:56.110><c> affine</c><00:12:56.380><c> not</c><00:12:56.620><c> only</c><00:12:57.040><c> issues</c><00:12:57.400><c> and</c><00:12:57.640><c> in</c>

00:12:57.930 --> 00:12:57.940 align:start position:0%
dint affine not only issues and in
 

00:12:57.940 --> 00:13:00.600 align:start position:0%
dint affine not only issues and in
jacoco<00:12:58.360><c> but</c><00:12:58.720><c> also</c><00:12:59.050><c> actually</c><00:12:59.470><c> issues</c><00:13:00.130><c> in</c><00:13:00.340><c> open</c>

00:13:00.600 --> 00:13:00.610 align:start position:0%
jacoco but also actually issues in open
 

00:13:00.610 --> 00:13:06.840 align:start position:0%
jacoco but also actually issues in open
JDK<00:13:02.250><c> if</c><00:13:03.250><c> I</c><00:13:03.640><c> may</c><00:13:03.850><c> say</c><00:13:04.240><c> I</c><00:13:04.600><c> would</c><00:13:05.140><c> even</c><00:13:05.590><c> say</c><00:13:06.070><c> we</c>

00:13:06.840 --> 00:13:06.850 align:start position:0%
JDK if I may say I would even say we
 

00:13:06.850 --> 00:13:09.450 align:start position:0%
JDK if I may say I would even say we
mainly<00:13:07.180><c> find</c><00:13:07.660><c> issues</c><00:13:08.200><c> in</c><00:13:08.410><c> open</c><00:13:08.830><c> to</c><00:13:08.950><c> decane</c><00:13:09.280><c> not</c>

00:13:09.450 --> 00:13:09.460 align:start position:0%
mainly find issues in open to decane not
 

00:13:09.460 --> 00:13:14.230 align:start position:0%
mainly find issues in open to decane not
enjoy<00:13:09.790><c> cocoa</c><00:13:10.060><c> and</c><00:13:11.160><c> apparently</c><00:13:12.210><c> we</c><00:13:13.210><c> are</c><00:13:13.420><c> among</c>

00:13:14.230 --> 00:13:14.240 align:start position:0%
enjoy cocoa and apparently we are among
 

00:13:14.240 --> 00:13:18.040 align:start position:0%
enjoy cocoa and apparently we are among
top<00:13:14.689><c> five</c><00:13:15.160><c> external</c><00:13:16.160><c> contributors</c><00:13:16.699><c> of</c><00:13:17.420><c> back</c>

00:13:18.040 --> 00:13:18.050 align:start position:0%
top five external contributors of back
 

00:13:18.050 --> 00:13:21.100 align:start position:0%
top five external contributors of back
reports<00:13:18.559><c> to</c><00:13:18.769><c> openjdk</c><00:13:19.399><c> along</c><00:13:20.119><c> such</c><00:13:20.509><c> projects</c>

00:13:21.100 --> 00:13:21.110 align:start position:0%
reports to openjdk along such projects
 

00:13:21.110 --> 00:13:23.889 align:start position:0%
reports to openjdk along such projects
as<00:13:21.379><c> actually</c><00:13:22.279><c> seen</c><00:13:22.519><c> IntelliJ</c><00:13:23.149><c> etcetera</c>

00:13:23.889 --> 00:13:23.899 align:start position:0%
as actually seen IntelliJ etcetera
 

00:13:23.899 --> 00:13:28.480 align:start position:0%
as actually seen IntelliJ etcetera
etcetera<00:13:25.089><c> and</c><00:13:26.379><c> actually</c><00:13:27.379><c> this</c><00:13:27.589><c> is</c><00:13:27.740><c> not</c><00:13:28.279><c> that</c>

00:13:28.480 --> 00:13:28.490 align:start position:0%
etcetera and actually this is not that
 

00:13:28.490 --> 00:13:33.160 align:start position:0%
etcetera and actually this is not that
hard<00:13:28.779><c> as</c><00:13:29.779><c> you</c><00:13:30.259><c> might</c><00:13:30.470><c> think</c><00:13:31.899><c> during</c><00:13:32.899><c> this</c>

00:13:33.160 --> 00:13:33.170 align:start position:0%
hard as you might think during this
 

00:13:33.170 --> 00:13:36.100 align:start position:0%
hard as you might think during this
presentation<00:13:33.559><c> let's</c><00:13:34.179><c> we</c><00:13:35.179><c> will</c><00:13:35.329><c> see</c><00:13:35.569><c> how</c><00:13:35.809><c> easy</c>

00:13:36.100 --> 00:13:36.110 align:start position:0%
presentation let's we will see how easy
 

00:13:36.110 --> 00:13:38.819 align:start position:0%
presentation let's we will see how easy
it<00:13:36.319><c> is</c><00:13:36.529><c> to</c><00:13:36.769><c> find</c><00:13:36.949><c> the</c><00:13:37.160><c> back</c><00:13:37.339><c> in</c><00:13:37.519><c> open</c><00:13:38.059><c> JDK</c><00:13:38.240><c> and</c>

00:13:38.819 --> 00:13:38.829 align:start position:0%
it is to find the back in open JDK and
 

00:13:38.829 --> 00:13:41.319 align:start position:0%
it is to find the back in open JDK and
it's<00:13:39.829><c> not</c><00:13:40.040><c> that</c><00:13:40.189><c> hard</c><00:13:40.399><c> to</c><00:13:40.639><c> come</c><00:13:40.939><c> back</c><00:13:41.119><c> and</c>

00:13:41.319 --> 00:13:41.329 align:start position:0%
it's not that hard to come back and
 

00:13:41.329 --> 00:13:47.710 align:start position:0%
it's not that hard to come back and
report<00:13:41.720><c> it</c><00:13:43.689><c> so</c><00:13:44.689><c> to</c><00:13:45.199><c> do</c><00:13:45.319><c> so</c><00:13:45.699><c> let's</c><00:13:46.699><c> have</c><00:13:47.449><c> a</c><00:13:47.509><c> look</c>

00:13:47.710 --> 00:13:47.720 align:start position:0%
report it so to do so let's have a look
 

00:13:47.720 --> 00:13:54.280 align:start position:0%
report it so to do so let's have a look
more<00:13:48.079><c> deeper</c><00:13:48.410><c> on</c><00:13:48.649><c> what</c><00:13:49.579><c> prop</c><00:13:49.910><c> is</c><00:13:51.819><c> why</c><00:13:53.230><c> it</c><00:13:54.230><c> is</c>

00:13:54.280 --> 00:13:54.290 align:start position:0%
more deeper on what prop is why it is
 

00:13:54.290 --> 00:13:58.090 align:start position:0%
more deeper on what prop is why it is
quite<00:13:55.249><c> fast</c><00:13:55.579><c> why</c><00:13:55.910><c> it</c><00:13:55.970><c> has</c><00:13:56.329><c> no</c><00:13:56.600><c> impact</c><00:13:56.929><c> on</c><00:13:57.170><c> why</c>

00:13:58.090 --> 00:13:58.100 align:start position:0%
quite fast why it has no impact on why
 

00:13:58.100 --> 00:14:00.699 align:start position:0%
quite fast why it has no impact on why
it<00:13:58.160><c> has</c><00:13:58.429><c> a</c><00:13:58.670><c> low</c><00:13:59.029><c> impact</c><00:13:59.569><c> on</c><00:13:59.839><c> your</c><00:14:00.079><c> application</c>

00:14:00.699 --> 00:14:00.709 align:start position:0%
it has a low impact on your application
 

00:14:00.709 --> 00:14:06.030 align:start position:0%
it has a low impact on your application
and<00:14:01.040><c> some</c><00:14:02.029><c> so</c><00:14:02.619><c> what</c><00:14:03.619><c> the</c><00:14:03.769><c> prop</c><00:14:03.980><c> is</c><00:14:04.660><c> first</c>

00:14:06.030 --> 00:14:06.040 align:start position:0%
and some so what the prop is first
 

00:14:06.040 --> 00:14:10.179 align:start position:0%
and some so what the prop is first
before<00:14:07.990><c> before</c><00:14:08.990><c> implements</c><00:14:09.559><c> the</c><00:14:09.649><c> prop</c><00:14:09.889><c> we</c>

00:14:10.179 --> 00:14:10.189 align:start position:0%
before before implements the prop we
 

00:14:10.189 --> 00:14:12.460 align:start position:0%
before before implements the prop we
should<00:14:10.429><c> specify</c><00:14:11.089><c> the</c><00:14:11.360><c> requirements</c><00:14:12.199><c> what</c>

00:14:12.460 --> 00:14:12.470 align:start position:0%
should specify the requirements what
 

00:14:12.470 --> 00:14:16.569 align:start position:0%
should specify the requirements what
it's<00:14:12.709><c> supposed</c><00:14:13.429><c> to</c><00:14:13.579><c> do</c><00:14:13.819><c> and</c><00:14:14.949><c> prop</c><00:14:15.949><c> as</c><00:14:16.279><c> we</c>

00:14:16.569 --> 00:14:16.579 align:start position:0%
it's supposed to do and prop as we
 

00:14:16.579 --> 00:14:18.220 align:start position:0%
it's supposed to do and prop as we
already<00:14:16.699><c> said</c><00:14:17.149><c> it</c><00:14:17.420><c> should</c><00:14:17.600><c> have</c><00:14:17.809><c> minimal</c>

00:14:18.220 --> 00:14:18.230 align:start position:0%
already said it should have minimal
 

00:14:18.230 --> 00:14:20.590 align:start position:0%
already said it should have minimal
runtime<00:14:18.619><c> overhead</c><00:14:18.649><c> it</c><00:14:19.249><c> should</c><00:14:19.459><c> be</c><00:14:19.610><c> as</c><00:14:19.790><c> fast</c><00:14:20.420><c> as</c>

00:14:20.590 --> 00:14:20.600 align:start position:0%
runtime overhead it should be as fast as
 

00:14:20.600 --> 00:14:23.859 align:start position:0%
runtime overhead it should be as fast as
possible<00:14:21.490><c> it</c><00:14:22.490><c> should</c><00:14:22.549><c> have</c><00:14:22.910><c> no</c><00:14:23.240><c> side</c><00:14:23.449><c> effects</c>

00:14:23.859 --> 00:14:23.869 align:start position:0%
possible it should have no side effects
 

00:14:23.869 --> 00:14:25.869 align:start position:0%
possible it should have no side effects
on<00:14:23.959><c> application</c><00:14:24.470><c> code</c><00:14:24.679><c> in</c><00:14:25.040><c> particular</c><00:14:25.459><c> if</c>

00:14:25.869 --> 00:14:25.879 align:start position:0%
on application code in particular if
 

00:14:25.879 --> 00:14:27.400 align:start position:0%
on application code in particular if
you've<00:14:26.119><c> got</c><00:14:26.360><c> this</c><00:14:26.509><c> thread</c><00:14:26.749><c> safe</c><00:14:26.990><c> it</c><00:14:27.230><c> should</c>

00:14:27.400 --> 00:14:27.410 align:start position:0%
you've got this thread safe it should
 

00:14:27.410 --> 00:14:29.590 align:start position:0%
you've got this thread safe it should
stay<00:14:27.649><c> state</c><00:14:28.100><c> right</c><00:14:28.369><c> safe</c><00:14:28.610><c> so</c><00:14:28.910><c> we</c><00:14:29.119><c> can't</c><00:14:29.360><c> have</c>

00:14:29.590 --> 00:14:29.600 align:start position:0%
stay state right safe so we can't have
 

00:14:29.600 --> 00:14:33.759 align:start position:0%
stay state right safe so we can't have
non<00:14:30.470><c> threat</c><00:14:30.740><c> safe</c><00:14:30.920><c> code</c><00:14:32.019><c> yeah</c><00:14:33.019><c> so</c><00:14:33.410><c> it</c><00:14:33.589><c> should</c>

00:14:33.759 --> 00:14:33.769 align:start position:0%
non threat safe code yeah so it should
 

00:14:33.769 --> 00:14:36.749 align:start position:0%
non threat safe code yeah so it should
be<00:14:33.799><c> thread</c><00:14:34.100><c> safe</c><00:14:35.110><c> obviously</c><00:14:36.110><c> it</c><00:14:36.290><c> should</c>

00:14:36.749 --> 00:14:36.759 align:start position:0%
be thread safe obviously it should
 

00:14:36.759 --> 00:14:40.119 align:start position:0%
be thread safe obviously it should
record<00:14:37.759><c> the</c><00:14:38.059><c> fact</c><00:14:38.329><c> of</c><00:14:38.540><c> execution</c><00:14:39.259><c> so</c><00:14:39.499><c> which</c><00:14:39.679><c> it</c>

00:14:40.119 --> 00:14:40.129 align:start position:0%
record the fact of execution so which it
 

00:14:40.129 --> 00:14:43.889 align:start position:0%
record the fact of execution so which it
should<00:14:40.429><c> say</c><00:14:40.670><c> okay</c><00:14:41.209><c> I've</c><00:14:41.749><c> been</c><00:14:42.170><c> executed</c><00:14:42.889><c> and</c>

00:14:43.889 --> 00:14:43.899 align:start position:0%
should say okay I've been executed and
 

00:14:43.899 --> 00:14:47.049 align:start position:0%
should say okay I've been executed and
if<00:14:44.899><c> you</c><00:14:45.139><c> just</c><00:14:45.350><c> record</c><00:14:45.619><c> fact</c><00:14:46.129><c> of</c><00:14:46.279><c> execution</c><00:14:46.850><c> we</c>

00:14:47.049 --> 00:14:47.059 align:start position:0%
if you just record fact of execution we
 

00:14:47.059 --> 00:14:49.059 align:start position:0%
if you just record fact of execution we
can't<00:14:47.269><c> map</c><00:14:47.569><c> it</c><00:14:47.749><c> back</c><00:14:48.019><c> to</c><00:14:48.259><c> the</c><00:14:48.499><c> what</c><00:14:48.860><c> was</c>

00:14:49.059 --> 00:14:49.069 align:start position:0%
can't map it back to the what was
 

00:14:49.069 --> 00:14:52.079 align:start position:0%
can't map it back to the what was
executed<00:14:49.639><c> so</c><00:14:49.819><c> it</c><00:14:50.149><c> should</c><00:14:50.420><c> also</c><00:14:50.720><c> be</c>

00:14:52.079 --> 00:14:52.089 align:start position:0%
executed so it should also be
 

00:14:52.089 --> 00:14:54.220 align:start position:0%
executed so it should also be
identifiable<00:14:53.089><c> so</c><00:14:53.329><c> it</c><00:14:53.480><c> should</c><00:14:53.660><c> provide</c><00:14:53.959><c> some</c>

00:14:54.220 --> 00:14:54.230 align:start position:0%
identifiable so it should provide some
 

00:14:54.230 --> 00:14:57.009 align:start position:0%
identifiable so it should provide some
way<00:14:54.499><c> of</c><00:14:54.740><c> identifying</c><00:14:55.420><c> what</c><00:14:56.420><c> was</c><00:14:56.689><c> actually</c>

00:14:57.009 --> 00:14:57.019 align:start position:0%
way of identifying what was actually
 

00:14:57.019 --> 00:15:01.929 align:start position:0%
way of identifying what was actually
executed<00:14:59.199><c> okay</c><00:15:00.199><c> and</c><00:15:00.439><c> here</c><00:15:01.369><c> is</c><00:15:01.490><c> another</c>

00:15:01.929 --> 00:15:01.939 align:start position:0%
executed okay and here is another
 

00:15:01.939 --> 00:15:03.519 align:start position:0%
executed okay and here is another
question<00:15:02.420><c> for</c><00:15:02.839><c> you</c>

00:15:03.519 --> 00:15:03.529 align:start position:0%
question for you
 

00:15:03.529 --> 00:15:06.669 align:start position:0%
question for you
maybe<00:15:03.949><c> you</c><00:15:04.189><c> have</c><00:15:04.399><c> some</c><00:15:04.730><c> ideas</c><00:15:04.929><c> how</c><00:15:05.929><c> such</c><00:15:06.319><c> prop</c>

00:15:06.669 --> 00:15:06.679 align:start position:0%
maybe you have some ideas how such prop
 

00:15:06.679 --> 00:15:19.070 align:start position:0%
maybe you have some ideas how such prop
could<00:15:06.980><c> look</c><00:15:07.129><c> like</c><00:15:11.079><c> any</c><00:15:12.079><c> ideas</c>

00:15:19.070 --> 00:15:19.080 align:start position:0%
 
 

00:15:19.080 --> 00:15:23.440 align:start position:0%
 
something<00:15:19.920><c> like</c><00:15:20.160><c> a</c><00:15:21.140><c> bull</c><00:15:22.140><c> honoring</c><00:15:22.589><c> exactly</c>

00:15:23.440 --> 00:15:23.450 align:start position:0%
something like a bull honoring exactly
 

00:15:23.450 --> 00:15:27.310 align:start position:0%
something like a bull honoring exactly
it<00:15:24.450><c> perfectly</c><00:15:24.990><c> meets</c><00:15:25.230><c> all</c><00:15:25.500><c> the</c><00:15:25.649><c> requirements</c>

00:15:27.310 --> 00:15:27.320 align:start position:0%
it perfectly meets all the requirements
 

00:15:27.320 --> 00:15:31.630 align:start position:0%
it perfectly meets all the requirements
array<00:15:28.320><c> index</c><00:15:28.529><c> provides</c><00:15:29.220><c> us</c><00:15:29.430><c> identification</c>

00:15:31.630 --> 00:15:31.640 align:start position:0%
array index provides us identification
 

00:15:31.640 --> 00:15:37.340 align:start position:0%
array index provides us identification
what<00:15:32.640><c> else</c><00:15:32.850><c> it's</c><00:15:33.570><c> quite</c><00:15:34.260><c> fast</c><00:15:35.000><c> writing</c><00:15:36.110><c> of</c><00:15:37.110><c> a</c>

00:15:37.340 --> 00:15:37.350 align:start position:0%
what else it's quite fast writing of a
 

00:15:37.350 --> 00:15:40.519 align:start position:0%
what else it's quite fast writing of a
value<00:15:37.649><c> into</c><00:15:37.920><c> the</c><00:15:38.040><c> boolean</c><00:15:38.279><c> array</c><00:15:39.170><c> so</c><00:15:40.170><c> it</c><00:15:40.380><c> will</c>

00:15:40.519 --> 00:15:40.529 align:start position:0%
value into the boolean array so it will
 

00:15:40.529 --> 00:15:43.910 align:start position:0%
value into the boolean array so it will
record<00:15:40.740><c> an</c><00:15:41.130><c> execution</c><00:15:41.790><c> if</c><00:15:42.029><c> if</c><00:15:42.510><c> we</c><00:15:42.839><c> wrote</c><00:15:43.350><c> a</c>

00:15:43.910 --> 00:15:43.920 align:start position:0%
record an execution if if we wrote a
 

00:15:43.920 --> 00:15:47.030 align:start position:0%
record an execution if if we wrote a
true<00:15:44.310><c> value</c><00:15:44.959><c> into</c><00:15:45.959><c> this</c><00:15:46.140><c> boolean</c><00:15:46.529><c> array</c><00:15:46.709><c> for</c>

00:15:47.030 --> 00:15:47.040 align:start position:0%
true value into this boolean array for
 

00:15:47.040 --> 00:15:50.090 align:start position:0%
true value into this boolean array for
some<00:15:47.220><c> identifier</c><00:15:47.790><c> we</c><00:15:48.060><c> know</c><00:15:48.240><c> that</c><00:15:48.890><c> the</c><00:15:49.890><c> code</c>

00:15:50.090 --> 00:15:50.100 align:start position:0%
some identifier we know that the code
 

00:15:50.100 --> 00:15:52.250 align:start position:0%
some identifier we know that the code
associated<00:15:50.490><c> let's</c><00:15:51.180><c> say</c><00:15:51.329><c> this</c><00:15:51.510><c> is</c><00:15:51.690><c> identifier</c>

00:15:52.250 --> 00:15:52.260 align:start position:0%
associated let's say this is identifier
 

00:15:52.260 --> 00:15:56.900 align:start position:0%
associated let's say this is identifier
has<00:15:52.470><c> been</c><00:15:52.740><c> executed</c><00:15:54.050><c> and</c><00:15:55.550><c> here</c><00:15:56.550><c> is</c><00:15:56.670><c> another</c>

00:15:56.900 --> 00:15:56.910 align:start position:0%
has been executed and here is another
 

00:15:56.910 --> 00:16:02.750 align:start position:0%
has been executed and here is another
question<00:15:57.089><c> why</c><00:15:57.870><c> this</c><00:15:57.930><c> is</c><00:15:58.410><c> thread</c><00:15:58.829><c> safe</c><00:16:01.610><c> what</c><00:16:02.610><c> if</c>

00:16:02.750 --> 00:16:02.760 align:start position:0%
question why this is thread safe what if
 

00:16:02.760 --> 00:16:05.000 align:start position:0%
question why this is thread safe what if
the<00:16:02.940><c> same</c><00:16:03.180><c> prop</c><00:16:03.510><c> is</c><00:16:03.690><c> executed</c><00:16:04.260><c> multiple</c><00:16:04.440><c> times</c>

00:16:05.000 --> 00:16:05.010 align:start position:0%
the same prop is executed multiple times
 

00:16:05.010 --> 00:16:19.380 align:start position:0%
the same prop is executed multiple times
sent<00:16:05.519><c> from</c><00:16:05.850><c> concurrent</c><00:16:06.360><c> threads</c>

00:16:19.380 --> 00:16:19.390 align:start position:0%
 
 

00:16:19.390 --> 00:16:22.510 align:start position:0%
 
okay<00:16:20.390><c> arrays</c><00:16:20.690><c> initialize</c><00:16:21.440><c> it</c><00:16:21.650><c> indeed</c><00:16:22.310><c> it's</c>

00:16:22.510 --> 00:16:22.520 align:start position:0%
okay arrays initialize it indeed it's
 

00:16:22.520 --> 00:16:27.700 align:start position:0%
okay arrays initialize it indeed it's
and<00:16:22.730><c> solids</c><00:16:23.120><c> defer</c><00:16:25.900><c> yes</c><00:16:26.900><c> it's</c><00:16:27.230><c> it's</c><00:16:27.440><c> just</c>

00:16:27.700 --> 00:16:27.710 align:start position:0%
and solids defer yes it's it's just
 

00:16:27.710 --> 00:16:31.300 align:start position:0%
and solids defer yes it's it's just
right<00:16:28.010><c> and</c><00:16:28.190><c> there</c><00:16:28.460><c> is</c><00:16:28.550><c> no</c><00:16:28.760><c> reads</c><00:16:28.970><c> so</c><00:16:30.190><c> there</c><00:16:31.190><c> is</c>

00:16:31.300 --> 00:16:31.310 align:start position:0%
right and there is no reads so there is
 

00:16:31.310 --> 00:16:34.120 align:start position:0%
right and there is no reads so there is
no<00:16:31.520><c> chance</c><00:16:31.760><c> for</c><00:16:32.510><c> it</c><00:16:32.570><c> to</c><00:16:32.600><c> not</c><00:16:33.050><c> be</c><00:16:33.080><c> trade</c><00:16:33.470><c> safe</c><00:16:33.680><c> if</c>

00:16:34.120 --> 00:16:34.130 align:start position:0%
no chance for it to not be trade safe if
 

00:16:34.130 --> 00:16:35.710 align:start position:0%
no chance for it to not be trade safe if
two<00:16:34.400><c> threads</c><00:16:34.550><c> are</c><00:16:34.880><c> going</c><00:16:35.060><c> to</c><00:16:35.150><c> write</c><00:16:35.330><c> a</c><00:16:35.360><c> true</c>

00:16:35.710 --> 00:16:35.720 align:start position:0%
two threads are going to write a true
 

00:16:35.720 --> 00:16:37.150 align:start position:0%
two threads are going to write a true
value<00:16:35.900><c> it</c><00:16:36.140><c> doesn't</c><00:16:36.470><c> matter</c><00:16:36.680><c> which</c><00:16:36.950><c> one</c>

00:16:37.150 --> 00:16:37.160 align:start position:0%
value it doesn't matter which one
 

00:16:37.160 --> 00:16:39.850 align:start position:0%
value it doesn't matter which one
succeeded<00:16:37.610><c> which</c><00:16:38.600><c> one</c><00:16:38.810><c> not</c><00:16:38.990><c> there</c><00:16:39.350><c> is</c><00:16:39.440><c> any</c><00:16:39.710><c> way</c>

00:16:39.850 --> 00:16:39.860 align:start position:0%
succeeded which one not there is any way
 

00:16:39.860 --> 00:16:44.020 align:start position:0%
succeeded which one not there is any way
we'll<00:16:40.070><c> get</c><00:16:40.220><c> through</c><00:16:40.400><c> Valley</c><00:16:42.160><c> about</c><00:16:43.160><c> runtime</c>

00:16:44.020 --> 00:16:44.030 align:start position:0%
we'll get through Valley about runtime
 

00:16:44.030 --> 00:16:47.730 align:start position:0%
we'll get through Valley about runtime
overhead<00:16:44.380><c> and</c><00:16:45.380><c> about</c><00:16:45.740><c> impact</c><00:16:46.250><c> on</c><00:16:46.520><c> the</c><00:16:46.760><c> size</c><00:16:47.000><c> of</c>

00:16:47.730 --> 00:16:47.740 align:start position:0%
overhead and about impact on the size of
 

00:16:47.740 --> 00:16:51.270 align:start position:0%
overhead and about impact on the size of
your<00:16:48.740><c> class</c><00:16:48.920><c> files</c><00:16:49.220><c> each</c><00:16:49.520><c> such</c><00:16:49.850><c> probe</c><00:16:50.210><c> costs</c>

00:16:51.270 --> 00:16:51.280 align:start position:0%
your class files each such probe costs
 

00:16:51.280 --> 00:16:55.120 align:start position:0%
your class files each such probe costs
from<00:16:52.280><c> 4</c><00:16:52.970><c> to</c><00:16:53.120><c> 7</c><00:16:53.390><c> bytes</c><00:16:53.810><c> additional</c><00:16:54.620><c> bytes</c><00:16:54.830><c> so</c>

00:16:55.120 --> 00:16:55.130 align:start position:0%
from 4 to 7 bytes additional bytes so
 

00:16:55.130 --> 00:16:59.530 align:start position:0%
from 4 to 7 bytes additional bytes so
depending<00:16:55.610><c> on</c><00:16:55.640><c> how</c><00:16:55.970><c> many</c><00:16:56.030><c> probes</c><00:16:56.540><c> we</c><00:16:57.320><c> had</c><00:16:58.540><c> we</c>

00:16:59.530 --> 00:16:59.540 align:start position:0%
depending on how many probes we had we
 

00:16:59.540 --> 00:17:02.860 align:start position:0%
depending on how many probes we had we
had<00:16:59.660><c> a</c><00:17:00.170><c> proportional</c><00:17:01.100><c> amount</c><00:17:01.220><c> of</c><00:17:01.760><c> bytes</c><00:17:02.570><c> into</c>

00:17:02.860 --> 00:17:02.870 align:start position:0%
had a proportional amount of bytes into
 

00:17:02.870 --> 00:17:07.059 align:start position:0%
had a proportional amount of bytes into
your<00:17:03.110><c> classes</c><00:17:04.540><c> this</c><00:17:05.540><c> is</c><00:17:05.600><c> also</c><00:17:06.350><c> an</c><00:17:06.740><c> interesting</c>

00:17:07.059 --> 00:17:07.069 align:start position:0%
your classes this is also an interesting
 

00:17:07.069 --> 00:17:11.559 align:start position:0%
your classes this is also an interesting
aspect<00:17:07.600><c> some</c><00:17:08.600><c> people</c><00:17:08.900><c> wonder</c><00:17:09.230><c> why</c><00:17:09.760><c> after</c><00:17:10.760><c> we</c>

00:17:11.559 --> 00:17:11.569 align:start position:0%
aspect some people wonder why after we
 

00:17:11.569 --> 00:17:13.750 align:start position:0%
aspect some people wonder why after we
integrated<00:17:12.199><c> code</c><00:17:12.410><c> coverage</c><00:17:12.800><c> into</c><00:17:13.339><c> our</c>

00:17:13.750 --> 00:17:13.760 align:start position:0%
integrated code coverage into our
 

00:17:13.760 --> 00:17:15.850 align:start position:0%
integrated code coverage into our
project<00:17:14.420><c> we</c><00:17:14.540><c> started</c><00:17:14.569><c> to</c><00:17:15.110><c> get</c><00:17:15.230><c> exceptions</c>

00:17:15.850 --> 00:17:15.860 align:start position:0%
project we started to get exceptions
 

00:17:15.860 --> 00:17:18.850 align:start position:0%
project we started to get exceptions
something<00:17:16.310><c> like</c><00:17:16.550><c> method</c><00:17:17.329><c> is</c><00:17:17.449><c> too</c><00:17:17.630><c> big</c><00:17:17.860><c> because</c>

00:17:18.850 --> 00:17:18.860 align:start position:0%
something like method is too big because
 

00:17:18.860 --> 00:17:20.710 align:start position:0%
something like method is too big because
there<00:17:19.280><c> is</c><00:17:19.400><c> no</c><00:17:19.579><c> free</c><00:17:19.819><c> lunch</c><00:17:20.030><c> there</c><00:17:20.150><c> is</c><00:17:20.449><c> a</c>

00:17:20.710 --> 00:17:20.720 align:start position:0%
there is no free lunch there is a
 

00:17:20.720 --> 00:17:23.260 align:start position:0%
there is no free lunch there is a
restriction<00:17:21.260><c> in</c><00:17:21.680><c> Java</c><00:17:22.250><c> Virtual</c><00:17:22.490><c> Machine</c><00:17:22.730><c> on</c><00:17:23.209><c> a</c>

00:17:23.260 --> 00:17:23.270 align:start position:0%
restriction in Java Virtual Machine on a
 

00:17:23.270 --> 00:17:27.010 align:start position:0%
restriction in Java Virtual Machine on a
maximum<00:17:23.839><c> size</c><00:17:24.050><c> of</c><00:17:24.380><c> often</c><00:17:25.339><c> added</c><00:17:25.640><c> and</c><00:17:25.880><c> as</c><00:17:26.630><c> we</c>

00:17:27.010 --> 00:17:27.020 align:start position:0%
maximum size of often added and as we
 

00:17:27.020 --> 00:17:29.050 align:start position:0%
maximum size of often added and as we
adding<00:17:27.439><c> some</c><00:17:27.740><c> additional</c><00:17:27.890><c> instructions</c><00:17:28.459><c> into</c>

00:17:29.050 --> 00:17:29.060 align:start position:0%
adding some additional instructions into
 

00:17:29.060 --> 00:17:31.870 align:start position:0%
adding some additional instructions into
this<00:17:29.300><c> method</c><00:17:29.690><c> if</c><00:17:29.840><c> you</c><00:17:29.870><c> method</c><00:17:30.320><c> was</c><00:17:30.950><c> close</c><00:17:31.610><c> to</c>

00:17:31.870 --> 00:17:31.880 align:start position:0%
this method if you method was close to
 

00:17:31.880 --> 00:17:33.640 align:start position:0%
this method if you method was close to
the<00:17:32.030><c> border</c><00:17:32.450><c> we</c><00:17:32.660><c> can</c><00:17:32.840><c> easily</c><00:17:32.990><c> cross</c><00:17:33.410><c> this</c>

00:17:33.640 --> 00:17:33.650 align:start position:0%
the border we can easily cross this
 

00:17:33.650 --> 00:17:35.680 align:start position:0%
the border we can easily cross this
border<00:17:34.000><c> after</c><00:17:35.000><c> addition</c><00:17:35.390><c> of</c><00:17:35.510><c> those</c>

00:17:35.680 --> 00:17:35.690 align:start position:0%
border after addition of those
 

00:17:35.690 --> 00:17:42.910 align:start position:0%
border after addition of those
instructions<00:17:37.180><c> bomb</c><00:17:39.400><c> next</c><00:17:40.400><c> so</c><00:17:41.120><c> ok</c><00:17:41.540><c> this</c><00:17:42.260><c> is</c><00:17:42.470><c> the</c>

00:17:42.910 --> 00:17:42.920 align:start position:0%
instructions bomb next so ok this is the
 

00:17:42.920 --> 00:17:48.250 align:start position:0%
instructions bomb next so ok this is the
process<00:17:43.400><c> of</c><00:17:43.610><c> recording</c><00:17:45.130><c> execution</c><00:17:46.130><c> of</c><00:17:47.260><c> some</c>

00:17:48.250 --> 00:17:48.260 align:start position:0%
process of recording execution of some
 

00:17:48.260 --> 00:17:51.280 align:start position:0%
process of recording execution of some
sequence<00:17:48.710><c> of</c><00:17:48.950><c> instructions</c><00:17:49.610><c> and</c><00:17:50.080><c> well</c><00:17:51.080><c> we've</c>

00:17:51.280 --> 00:17:51.290 align:start position:0%
sequence of instructions and well we've
 

00:17:51.290 --> 00:17:54.190 align:start position:0%
sequence of instructions and well we've
been<00:17:51.500><c> discussing</c><00:17:51.860><c> this</c><00:17:52.510><c> we</c><00:17:53.510><c> also</c><00:17:53.630><c> mentioned</c>

00:17:54.190 --> 00:17:54.200 align:start position:0%
been discussing this we also mentioned
 

00:17:54.200 --> 00:17:58.230 align:start position:0%
been discussing this we also mentioned
that<00:17:54.320><c> this</c><00:17:55.130><c> array</c><00:17:55.550><c> should</c><00:17:55.610><c> be</c><00:17:56.000><c> naturalized</c><00:17:56.500><c> so</c>

00:17:58.230 --> 00:17:58.240 align:start position:0%
that this array should be naturalized so
 

00:17:58.240 --> 00:18:01.210 align:start position:0%
that this array should be naturalized so
there<00:17:59.240><c> is</c><00:17:59.390><c> a</c><00:17:59.600><c> jagged</c><00:18:00.020><c> current</c><00:18:00.290><c> time</c><00:18:00.500><c> and</c><00:18:00.680><c> then</c>

00:18:01.210 --> 00:18:01.220 align:start position:0%
there is a jagged current time and then
 

00:18:01.220 --> 00:18:04.480 align:start position:0%
there is a jagged current time and then
the<00:18:01.400><c> ratio</c><00:18:01.550><c> application</c><00:18:02.330><c> and</c><00:18:02.510><c> somehow</c><00:18:03.490><c> your</c>

00:18:04.480 --> 00:18:04.490 align:start position:0%
the ratio application and somehow your
 

00:18:04.490 --> 00:18:06.340 align:start position:0%
the ratio application and somehow your
applications<00:18:05.120><c> that</c><00:18:05.300><c> contains</c><00:18:05.720><c> access</c><00:18:06.170><c> to</c>

00:18:06.340 --> 00:18:06.350 align:start position:0%
applications that contains access to
 

00:18:06.350 --> 00:18:08.950 align:start position:0%
applications that contains access to
this<00:18:06.500><c> array</c><00:18:06.830><c> should</c><00:18:06.910><c> should</c><00:18:07.910><c> get</c><00:18:08.360><c> this</c><00:18:08.570><c> array</c>

00:18:08.950 --> 00:18:08.960 align:start position:0%
this array should should get this array
 

00:18:08.960 --> 00:18:12.010 align:start position:0%
this array should should get this array
from<00:18:09.020><c> jaco</c><00:18:09.440><c> current</c><00:18:09.830><c> time</c><00:18:09.980><c> and</c><00:18:10.220><c> so</c><00:18:11.150><c> how</c><00:18:11.750><c> do</c><00:18:11.810><c> we</c>

00:18:12.010 --> 00:18:12.020 align:start position:0%
from jaco current time and so how do we
 

00:18:12.020 --> 00:18:14.350 align:start position:0%
from jaco current time and so how do we
get<00:18:12.290><c> this</c><00:18:12.890><c> array</c><00:18:13.130><c> from</c><00:18:13.310><c> Joe</c><00:18:13.760><c> Cocker</c><00:18:14.030><c> on</c><00:18:14.150><c> time</c>

00:18:14.350 --> 00:18:14.360 align:start position:0%
get this array from Joe Cocker on time
 

00:18:14.360 --> 00:18:16.630 align:start position:0%
get this array from Joe Cocker on time
in<00:18:15.110><c> order</c><00:18:15.320><c> to</c><00:18:15.440><c> answer</c><00:18:15.590><c> on</c><00:18:16.010><c> this</c><00:18:16.190><c> question</c>

00:18:16.630 --> 00:18:16.640 align:start position:0%
in order to answer on this question
 

00:18:16.640 --> 00:18:18.430 align:start position:0%
in order to answer on this question
let's<00:18:16.880><c> have</c><00:18:17.120><c> a</c><00:18:17.150><c> look</c><00:18:17.390><c> on</c><00:18:17.540><c> bytecode</c><00:18:18.290><c> of</c>

00:18:18.430 --> 00:18:18.440 align:start position:0%
let's have a look on bytecode of
 

00:18:18.440 --> 00:18:21.190 align:start position:0%
let's have a look on bytecode of
assertions<00:18:19.040><c> let's</c><00:18:19.940><c> say</c><00:18:20.120><c> I</c><00:18:20.150><c> have</c><00:18:20.510><c> such</c><00:18:21.170><c> a</c>

00:18:21.190 --> 00:18:21.200 align:start position:0%
assertions let's say I have such a
 

00:18:21.200 --> 00:18:26.080 align:start position:0%
assertions let's say I have such a
simple<00:18:21.770><c> class</c><00:18:22.730><c> it</c><00:18:23.060><c> has</c><00:18:23.620><c> only</c><00:18:24.620><c> one</c><00:18:25.100><c> method</c><00:18:25.610><c> in</c>

00:18:26.080 --> 00:18:26.090 align:start position:0%
simple class it has only one method in
 

00:18:26.090 --> 00:18:28.720 align:start position:0%
simple class it has only one method in
this<00:18:26.360><c> method</c><00:18:26.570><c> I</c><00:18:26.930><c> do</c><00:18:26.990><c> I</c><00:18:27.350><c> search</c><00:18:28.040><c> shown</c><00:18:28.340><c> on</c><00:18:28.520><c> the</c>

00:18:28.720 --> 00:18:28.730 align:start position:0%
this method I do I search shown on the
 

00:18:28.730 --> 00:18:30.800 align:start position:0%
this method I do I search shown on the
parameter

00:18:30.800 --> 00:18:30.810 align:start position:0%
parameter
 

00:18:30.810 --> 00:18:35.730 align:start position:0%
parameter
there<00:18:31.810><c> is</c><00:18:31.960><c> a</c><00:18:32.230><c> nice</c><00:18:32.530><c> -</c><00:18:32.830><c> in</c><00:18:33.820><c> GDK</c><00:18:34.480><c> called</c><00:18:34.810><c> java</c><00:18:35.530><c> p</c>

00:18:35.730 --> 00:18:35.740 align:start position:0%
there is a nice - in GDK called java p
 

00:18:35.740 --> 00:18:39.900 align:start position:0%
there is a nice - in GDK called java p
java<00:18:36.460><c> decompiler</c><00:18:36.640><c> which</c><00:18:37.270><c> can</c><00:18:38.550><c> given</c><00:18:39.550><c> a</c><00:18:39.760><c> class</c>

00:18:39.900 --> 00:18:39.910 align:start position:0%
java decompiler which can given a class
 

00:18:39.910 --> 00:18:42.720 align:start position:0%
java decompiler which can given a class
file<00:18:40.360><c> it</c><00:18:41.290><c> can</c><00:18:41.650><c> show</c><00:18:41.950><c> you</c><00:18:42.250><c> the</c><00:18:42.310><c> bytecode</c>

00:18:42.720 --> 00:18:42.730 align:start position:0%
file it can show you the bytecode
 

00:18:42.730 --> 00:18:45.180 align:start position:0%
file it can show you the bytecode
instructions<00:18:43.330><c> within</c><00:18:43.990><c> this</c><00:18:44.140><c> class</c><00:18:44.350><c> file</c><00:18:44.620><c> so</c>

00:18:45.180 --> 00:18:45.190 align:start position:0%
instructions within this class file so
 

00:18:45.190 --> 00:18:48.200 align:start position:0%
instructions within this class file so
here<00:18:45.220><c> is</c><00:18:45.640><c> a</c><00:18:45.670><c> result</c><00:18:46.150><c> of</c><00:18:46.330><c> the</c><00:18:47.110><c> compilation</c><00:18:47.440><c> of</c>

00:18:48.200 --> 00:18:48.210 align:start position:0%
here is a result of the compilation of
 

00:18:48.210 --> 00:18:53.880 align:start position:0%
here is a result of the compilation of
such<00:18:49.210><c> a</c><00:18:49.240><c> simple</c><00:18:49.540><c> program</c><00:18:50.080><c> and</c><00:18:52.560><c> here</c><00:18:53.560><c> we</c><00:18:53.740><c> can</c>

00:18:53.880 --> 00:18:53.890 align:start position:0%
such a simple program and here we can
 

00:18:53.890 --> 00:18:56.430 align:start position:0%
such a simple program and here we can
see<00:18:54.100><c> something</c><00:18:54.460><c> strange</c><00:18:54.790><c> in</c><00:18:55.360><c> this</c><00:18:55.660><c> de</c>

00:18:56.430 --> 00:18:56.440 align:start position:0%
see something strange in this de
 

00:18:56.440 --> 00:18:59.250 align:start position:0%
see something strange in this de
compilation<00:18:57.010><c> we</c><00:18:57.340><c> actually</c><00:18:57.820><c> see</c><00:18:58.060><c> that</c><00:18:58.840><c> there</c>

00:18:59.250 --> 00:18:59.260 align:start position:0%
compilation we actually see that there
 

00:18:59.260 --> 00:19:03.150 align:start position:0%
compilation we actually see that there
is<00:18:59.410><c> multiple</c><00:19:00.360><c> conditions</c><00:19:01.360><c> there</c><00:19:02.170><c> is</c><00:19:02.200><c> two</c>

00:19:03.150 --> 00:19:03.160 align:start position:0%
is multiple conditions there is two
 

00:19:03.160 --> 00:19:05.930 align:start position:0%
is multiple conditions there is two
comparisons<00:19:03.880><c> if</c><00:19:04.180><c> not</c><00:19:04.480><c> equal</c><00:19:04.750><c> if</c><00:19:05.200><c> not</c><00:19:05.470><c> equal</c>

00:19:05.930 --> 00:19:05.940 align:start position:0%
comparisons if not equal if not equal
 

00:19:05.940 --> 00:19:09.630 align:start position:0%
comparisons if not equal if not equal
there<00:19:06.940><c> is</c><00:19:06.970><c> also</c><00:19:07.270><c> access</c><00:19:07.860><c> to</c><00:19:08.860><c> a</c><00:19:08.890><c> static</c><00:19:09.370><c> field</c>

00:19:09.630 --> 00:19:09.640 align:start position:0%
there is also access to a static field
 

00:19:09.640 --> 00:19:12.750 align:start position:0%
there is also access to a static field
which<00:19:09.940><c> called</c><00:19:10.650><c> whose</c><00:19:11.650><c> name</c><00:19:11.860><c> is</c><00:19:12.100><c> assertions</c>

00:19:12.750 --> 00:19:12.760 align:start position:0%
which called whose name is assertions
 

00:19:12.760 --> 00:19:16.020 align:start position:0%
which called whose name is assertions
disabled<00:19:13.390><c> and</c><00:19:13.800><c> somehow</c><00:19:14.800><c> we</c><00:19:15.460><c> didn't</c><00:19:15.790><c> wrote</c>

00:19:16.020 --> 00:19:16.030 align:start position:0%
disabled and somehow we didn't wrote
 

00:19:16.030 --> 00:19:18.630 align:start position:0%
disabled and somehow we didn't wrote
north<00:19:16.600><c> two</c><00:19:17.260><c> conditions</c><00:19:17.860><c> in</c><00:19:18.010><c> our</c><00:19:18.160><c> source</c><00:19:18.490><c> code</c>

00:19:18.630 --> 00:19:18.640 align:start position:0%
north two conditions in our source code
 

00:19:18.640 --> 00:19:23.430 align:start position:0%
north two conditions in our source code
nor<00:19:19.600><c> we</c><00:19:19.990><c> have</c><00:19:20.370><c> no</c><00:19:21.370><c> such</c><00:19:21.580><c> field</c><00:19:22.050><c> what</c><00:19:23.050><c> what</c><00:19:23.290><c> is</c>

00:19:23.430 --> 00:19:23.440 align:start position:0%
nor we have no such field what what is
 

00:19:23.440 --> 00:19:27.840 align:start position:0%
nor we have no such field what what is
that<00:19:23.490><c> and</c><00:19:25.470><c> to</c><00:19:26.470><c> simplify</c><00:19:26.890><c> your</c><00:19:27.280><c> life</c><00:19:27.340><c> a</c><00:19:27.670><c> little</c>

00:19:27.840 --> 00:19:27.850 align:start position:0%
that and to simplify your life a little
 

00:19:27.850 --> 00:19:30.410 align:start position:0%
that and to simplify your life a little
bit

00:19:30.410 --> 00:19:30.420 align:start position:0%
 
 

00:19:30.420 --> 00:19:32.550 align:start position:0%
 
apparently<00:19:31.420><c> in</c><00:19:31.810><c> order</c><00:19:32.140><c> to</c><00:19:32.320><c> implement</c>

00:19:32.550 --> 00:19:32.560 align:start position:0%
apparently in order to implement
 

00:19:32.560 --> 00:19:37.050 align:start position:0%
apparently in order to implement
assertions<00:19:34.050><c> Java</c><00:19:35.050><c> compiler</c><00:19:35.640><c> while</c><00:19:36.640><c> compiling</c>

00:19:37.050 --> 00:19:37.060 align:start position:0%
assertions Java compiler while compiling
 

00:19:37.060 --> 00:19:41.010 align:start position:0%
assertions Java compiler while compiling
your<00:19:37.450><c> source</c><00:19:37.660><c> code</c><00:19:38.040><c> generates</c><00:19:39.040><c> a</c><00:19:40.020><c> quite</c>

00:19:41.010 --> 00:19:41.020 align:start position:0%
your source code generates a quite
 

00:19:41.020 --> 00:19:44.330 align:start position:0%
your source code generates a quite
interesting<00:19:41.770><c> bytecode</c><00:19:42.760><c> as</c><00:19:42.940><c> we</c><00:19:43.090><c> have</c><00:19:43.330><c> seen</c><00:19:43.540><c> it</c>

00:19:44.330 --> 00:19:44.340 align:start position:0%
interesting bytecode as we have seen it
 

00:19:44.340 --> 00:19:47.580 align:start position:0%
interesting bytecode as we have seen it
injects<00:19:45.340><c> a</c><00:19:45.580><c> special</c><00:19:46.240><c> field</c><00:19:46.600><c> into</c><00:19:47.260><c> your</c><00:19:47.380><c> class</c>

00:19:47.580 --> 00:19:47.590 align:start position:0%
injects a special field into your class
 

00:19:47.590 --> 00:19:51.710 align:start position:0%
injects a special field into your class
with<00:19:48.100><c> the</c><00:19:48.250><c> name</c><00:19:48.540><c> dollar</c><00:19:49.540><c> assertions</c><00:19:50.350><c> disabled</c>

00:19:51.710 --> 00:19:51.720 align:start position:0%
with the name dollar assertions disabled
 

00:19:51.720 --> 00:19:54.900 align:start position:0%
with the name dollar assertions disabled
then<00:19:52.720><c> each</c><00:19:53.140><c> assertion</c><00:19:53.950><c> is</c><00:19:54.130><c> transformed</c><00:19:54.730><c> it</c>

00:19:54.900 --> 00:19:54.910 align:start position:0%
then each assertion is transformed it
 

00:19:54.910 --> 00:19:57.300 align:start position:0%
then each assertion is transformed it
into<00:19:55.180><c> the</c><00:19:55.450><c> indeed</c><00:19:55.990><c> two</c><00:19:56.260><c> conditions</c><00:19:56.770><c> one</c><00:19:57.130><c> of</c>

00:19:57.300 --> 00:19:57.310 align:start position:0%
into the indeed two conditions one of
 

00:19:57.310 --> 00:20:00.390 align:start position:0%
into the indeed two conditions one of
the<00:19:57.490><c> conditions</c><00:19:58.000><c> is</c><00:19:58.210><c> to</c><00:19:58.690><c> check</c><00:19:59.010><c> the</c><00:20:00.010><c> value</c><00:20:00.130><c> of</c>

00:20:00.390 --> 00:20:00.400 align:start position:0%
the conditions is to check the value of
 

00:20:00.400 --> 00:20:03.180 align:start position:0%
the conditions is to check the value of
this<00:20:00.550><c> field</c><00:20:00.850><c> and</c><00:20:01.090><c> another</c><00:20:02.080><c> condition</c><00:20:02.320><c> is</c><00:20:02.800><c> an</c>

00:20:03.180 --> 00:20:03.190 align:start position:0%
this field and another condition is an
 

00:20:03.190 --> 00:20:09.210 align:start position:0%
this field and another condition is an
actual<00:20:03.580><c> condition</c><00:20:04.030><c> of</c><00:20:04.360><c> assertion</c><00:20:05.490><c> and</c><00:20:08.220><c> why</c>

00:20:09.210 --> 00:20:09.220 align:start position:0%
actual condition of assertion and why
 

00:20:09.220 --> 00:20:12.480 align:start position:0%
actual condition of assertion and why
compiler<00:20:09.730><c> does</c><00:20:10.090><c> this</c><00:20:10.330><c> the</c><00:20:11.110><c> answer</c><00:20:11.440><c> is</c><00:20:11.650><c> is</c>

00:20:12.480 --> 00:20:12.490 align:start position:0%
compiler does this the answer is is
 

00:20:12.490 --> 00:20:16.100 align:start position:0%
compiler does this the answer is is
pretty<00:20:12.880><c> simple</c><00:20:13.300><c> it's</c><00:20:14.260><c> in</c><00:20:14.470><c> order</c><00:20:14.650><c> to</c><00:20:14.740><c> reduce</c>

00:20:16.100 --> 00:20:16.110 align:start position:0%
pretty simple it's in order to reduce
 

00:20:16.110 --> 00:20:20.910 align:start position:0%
pretty simple it's in order to reduce
overheads<00:20:17.110><c> so</c><00:20:17.590><c> for</c><00:20:17.860><c> example</c><00:20:19.530><c> you</c><00:20:20.530><c> know</c><00:20:20.890><c> that</c>

00:20:20.910 --> 00:20:20.920 align:start position:0%
overheads so for example you know that
 

00:20:20.920 --> 00:20:22.620 align:start position:0%
overheads so for example you know that
you<00:20:21.220><c> can</c><00:20:21.400><c> disable</c><00:20:21.730><c> assertions</c><00:20:22.330><c> you</c><00:20:22.450><c> can</c>

00:20:22.620 --> 00:20:22.630 align:start position:0%
you can disable assertions you can
 

00:20:22.630 --> 00:20:25.440 align:start position:0%
you can disable assertions you can
enable<00:20:22.840><c> assertions</c><00:20:23.530><c> and</c><00:20:24.030><c> for</c><00:20:25.030><c> the</c><00:20:25.150><c> given</c>

00:20:25.440 --> 00:20:25.450 align:start position:0%
enable assertions and for the given
 

00:20:25.450 --> 00:20:26.840 align:start position:0%
enable assertions and for the given
class<00:20:25.600><c> in</c><00:20:25.870><c> order</c><00:20:26.110><c> to</c><00:20:26.260><c> know</c><00:20:26.440><c> whether</c>

00:20:26.840 --> 00:20:26.850 align:start position:0%
class in order to know whether
 

00:20:26.850 --> 00:20:30.150 align:start position:0%
class in order to know whether
assertions<00:20:27.850><c> are</c><00:20:28.090><c> enabled</c><00:20:28.750><c> or</c><00:20:28.930><c> disabled</c><00:20:29.560><c> for</c>

00:20:30.150 --> 00:20:30.160 align:start position:0%
assertions are enabled or disabled for
 

00:20:30.160 --> 00:20:32.490 align:start position:0%
assertions are enabled or disabled for
this<00:20:30.310><c> class</c><00:20:30.550><c> you</c><00:20:30.940><c> need</c><00:20:31.090><c> to</c><00:20:31.330><c> ask</c><00:20:31.510><c> the</c><00:20:31.780><c> JVM</c><00:20:32.200><c> could</c>

00:20:32.490 --> 00:20:32.500 align:start position:0%
this class you need to ask the JVM could
 

00:20:32.500 --> 00:20:34.860 align:start position:0%
this class you need to ask the JVM could
you<00:20:32.590><c> please</c><00:20:32.800><c> tell</c><00:20:33.040><c> me</c><00:20:33.280><c> the</c><00:20:33.490><c> current</c><00:20:34.240><c> status</c><00:20:34.540><c> of</c>

00:20:34.860 --> 00:20:34.870 align:start position:0%
you please tell me the current status of
 

00:20:34.870 --> 00:20:37.170 align:start position:0%
you please tell me the current status of
assertions<00:20:35.500><c> for</c><00:20:35.710><c> this</c><00:20:35.860><c> class</c><00:20:36.070><c> this</c><00:20:36.610><c> is</c><00:20:36.790><c> quite</c>

00:20:37.170 --> 00:20:37.180 align:start position:0%
assertions for this class this is quite
 

00:20:37.180 --> 00:20:39.570 align:start position:0%
assertions for this class this is quite
expensive<00:20:38.170><c> procedure</c><00:20:38.860><c> you</c><00:20:39.070><c> need</c><00:20:39.250><c> to</c><00:20:39.370><c> go</c><00:20:39.520><c> to</c>

00:20:39.570 --> 00:20:39.580 align:start position:0%
expensive procedure you need to go to
 

00:20:39.580 --> 00:20:42.510 align:start position:0%
expensive procedure you need to go to
some<00:20:39.970><c> runtime</c><00:20:40.380><c> this</c><00:20:41.380><c> runtime</c><00:20:41.800><c> needs</c><00:20:42.070><c> to</c><00:20:42.340><c> check</c>

00:20:42.510 --> 00:20:42.520 align:start position:0%
some runtime this runtime needs to check
 

00:20:42.520 --> 00:20:43.270 align:start position:0%
some runtime this runtime needs to check
some<00:20:42.730><c> property</c>

00:20:43.270 --> 00:20:43.280 align:start position:0%
some property
 

00:20:43.280 --> 00:20:46.570 align:start position:0%
some property
is<00:20:43.390><c> etc</c><00:20:44.390><c> etc</c><00:20:44.480><c> so</c><00:20:45.080><c> in</c><00:20:45.680><c> order</c><00:20:45.800><c> to</c><00:20:45.950><c> reduce</c><00:20:46.370><c> this</c>

00:20:46.570 --> 00:20:46.580 align:start position:0%
is etc etc so in order to reduce this
 

00:20:46.580 --> 00:20:50.110 align:start position:0%
is etc etc so in order to reduce this
overheads<00:20:47.570><c> a</c><00:20:48.560><c> trick</c><00:20:49.430><c> is</c><00:20:49.580><c> simple</c>

00:20:50.110 --> 00:20:50.120 align:start position:0%
overheads a trick is simple
 

00:20:50.120 --> 00:20:53.080 align:start position:0%
overheads a trick is simple
let's<00:20:50.330><c> ask</c><00:20:50.570><c> once</c><00:20:51.500><c> during</c><00:20:52.070><c> initialization</c><00:20:52.670><c> of</c>

00:20:53.080 --> 00:20:53.090 align:start position:0%
let's ask once during initialization of
 

00:20:53.090 --> 00:20:57.520 align:start position:0%
let's ask once during initialization of
this<00:20:53.600><c> static</c><00:20:54.380><c> final</c><00:20:54.590><c> field</c><00:20:55.040><c> and</c><00:20:55.780><c> then</c><00:20:56.780><c> later</c>

00:20:57.520 --> 00:20:57.530 align:start position:0%
this static final field and then later
 

00:20:57.530 --> 00:21:00.010 align:start position:0%
this static final field and then later
on<00:20:57.680><c> let's</c><00:20:58.220><c> reduce</c><00:20:58.580><c> the</c><00:20:59.210><c> results</c><00:20:59.690><c> that</c><00:20:59.810><c> we</c>

00:21:00.010 --> 00:21:00.020 align:start position:0%
on let's reduce the results that we
 

00:21:00.020 --> 00:21:05.050 align:start position:0%
on let's reduce the results that we
already<00:21:00.860><c> know</c><00:21:02.320><c> and</c><00:21:03.320><c> the</c><00:21:04.070><c> important</c><00:21:04.640><c> thing</c><00:21:04.880><c> to</c>

00:21:05.050 --> 00:21:05.060 align:start position:0%
already know and the important thing to
 

00:21:05.060 --> 00:21:07.810 align:start position:0%
already know and the important thing to
notice<00:21:05.420><c> here</c><00:21:05.570><c> is</c><00:21:06.020><c> that</c><00:21:06.190><c> compiler</c><00:21:07.190><c> generated</c>

00:21:07.810 --> 00:21:07.820 align:start position:0%
notice here is that compiler generated
 

00:21:07.820 --> 00:21:10.990 align:start position:0%
notice here is that compiler generated
constructions<00:21:08.660><c> a</c><00:21:08.870><c> market</c><00:21:09.260><c> as</c><00:21:09.470><c> synthetic</c><00:21:10.340><c> we</c>

00:21:10.990 --> 00:21:11.000 align:start position:0%
constructions a market as synthetic we
 

00:21:11.000 --> 00:21:14.880 align:start position:0%
constructions a market as synthetic we
will<00:21:11.180><c> see</c><00:21:11.420><c> later</c><00:21:11.570><c> on</c><00:21:11.960><c> why</c><00:21:12.230><c> this</c><00:21:12.290><c> is</c><00:21:12.500><c> important</c>

00:21:14.880 --> 00:21:14.890 align:start position:0%
will see later on why this is important
 

00:21:14.890 --> 00:21:18.850 align:start position:0%
will see later on why this is important
this<00:21:15.890><c> is</c><00:21:15.950><c> a</c><00:21:16.100><c> nice</c><00:21:16.370><c> idea</c><00:21:16.580><c> which</c><00:21:17.240><c> we</c><00:21:17.480><c> can</c><00:21:18.350><c> use</c><00:21:18.620><c> and</c>

00:21:18.850 --> 00:21:18.860 align:start position:0%
this is a nice idea which we can use and
 

00:21:18.860 --> 00:21:22.390 align:start position:0%
this is a nice idea which we can use and
which<00:21:19.610><c> we</c><00:21:19.790><c> actually</c><00:21:20.390><c> do</c><00:21:20.540><c> use</c><00:21:20.750><c> for</c><00:21:21.110><c> jacoco</c><00:21:21.500><c> in</c>

00:21:22.390 --> 00:21:22.400 align:start position:0%
which we actually do use for jacoco in
 

00:21:22.400 --> 00:21:25.030 align:start position:0%
which we actually do use for jacoco in
order<00:21:22.670><c> to</c><00:21:22.820><c> reduce</c><00:21:23.000><c> the</c><00:21:23.750><c> runtime</c><00:21:24.110><c> overhead</c><00:21:24.320><c> of</c>

00:21:25.030 --> 00:21:25.040 align:start position:0%
order to reduce the runtime overhead of
 

00:21:25.040 --> 00:21:28.480 align:start position:0%
order to reduce the runtime overhead of
getting<00:21:26.030><c> the</c><00:21:26.240><c> probes</c><00:21:26.510><c> array</c><00:21:27.200><c> we</c><00:21:28.010><c> do</c><00:21:28.160><c> the</c><00:21:28.310><c> same</c>

00:21:28.480 --> 00:21:28.490 align:start position:0%
getting the probes array we do the same
 

00:21:28.490 --> 00:21:30.910 align:start position:0%
getting the probes array we do the same
trick<00:21:28.850><c> we</c><00:21:29.180><c> ask</c><00:21:29.360><c> for</c><00:21:29.780><c> this</c><00:21:29.960><c> probe</c><00:21:30.260><c> array</c><00:21:30.620><c> once</c>

00:21:30.910 --> 00:21:30.920 align:start position:0%
trick we ask for this probe array once
 

00:21:30.920 --> 00:21:34.450 align:start position:0%
trick we ask for this probe array once
we<00:21:31.340><c> store</c><00:21:31.610><c> it</c><00:21:31.880><c> into</c><00:21:32.480><c> a</c><00:21:33.350><c> synthetic</c><00:21:33.890><c> field</c>

00:21:34.450 --> 00:21:34.460 align:start position:0%
we store it into a synthetic field
 

00:21:34.460 --> 00:21:37.210 align:start position:0%
we store it into a synthetic field
pretty<00:21:34.760><c> much</c><00:21:35.060><c> like</c><00:21:35.500><c> assertions</c><00:21:36.500><c> enabled</c><00:21:37.040><c> and</c>

00:21:37.210 --> 00:21:37.220 align:start position:0%
pretty much like assertions enabled and
 

00:21:37.220 --> 00:21:39.660 align:start position:0%
pretty much like assertions enabled and
then<00:21:37.760><c> we</c><00:21:37.940><c> simply</c><00:21:38.300><c> access</c><00:21:38.600><c> this</c><00:21:38.780><c> field</c>

00:21:39.660 --> 00:21:39.670 align:start position:0%
then we simply access this field
 

00:21:39.670 --> 00:21:42.730 align:start position:0%
then we simply access this field
similarly<00:21:40.670><c> to</c><00:21:40.940><c> the</c><00:21:41.000><c> java</c><00:21:41.690><c> compiler</c><00:21:41.960><c> we</c><00:21:42.500><c> mark</c>

00:21:42.730 --> 00:21:42.740 align:start position:0%
similarly to the java compiler we mark
 

00:21:42.740 --> 00:21:48.550 align:start position:0%
similarly to the java compiler we mark
this<00:21:43.010><c> field</c><00:21:43.340><c> as</c><00:21:43.580><c> synthetic</c><00:21:44.890><c> and</c><00:21:47.440><c> for</c><00:21:48.440><c> the</c>

00:21:48.550 --> 00:21:48.560 align:start position:0%
this field as synthetic and for the
 

00:21:48.560 --> 00:21:50.680 align:start position:0%
this field as synthetic and for the
users<00:21:48.860><c> of</c><00:21:48.890><c> jocose</c><00:21:49.550><c> this</c><00:21:49.760><c> is</c><00:21:49.910><c> also</c><00:21:50.120><c> important</c>

00:21:50.680 --> 00:21:50.690 align:start position:0%
users of jocose this is also important
 

00:21:50.690 --> 00:21:54.390 align:start position:0%
users of jocose this is also important
to<00:21:50.900><c> know</c><00:21:51.460><c> some</c><00:21:52.460><c> people</c><00:21:52.670><c> after</c><00:21:53.390><c> applying</c>

00:21:54.390 --> 00:21:54.400 align:start position:0%
to know some people after applying
 

00:21:54.400 --> 00:21:57.310 align:start position:0%
to know some people after applying
jacoco<00:21:55.400><c> on</c><00:21:55.880><c> their</c><00:21:56.270><c> project</c><00:21:56.720><c> start</c><00:21:56.990><c> to</c><00:21:57.110><c> wonder</c>

00:21:57.310 --> 00:21:57.320 align:start position:0%
jacoco on their project start to wonder
 

00:21:57.320 --> 00:21:59.670 align:start position:0%
jacoco on their project start to wonder
why<00:21:57.740><c> the</c><00:21:57.770><c> codes</c><00:21:58.460><c> that</c><00:21:58.520><c> uses</c><00:21:58.940><c> reflection</c>

00:21:59.670 --> 00:21:59.680 align:start position:0%
why the codes that uses reflection
 

00:21:59.680 --> 00:22:03.220 align:start position:0%
why the codes that uses reflection
apparently<00:22:00.680><c> starts</c><00:22:01.070><c> to</c><00:22:01.280><c> see</c><00:22:01.520><c> some</c><00:22:02.240><c> some</c>

00:22:03.220 --> 00:22:03.230 align:start position:0%
apparently starts to see some some
 

00:22:03.230 --> 00:22:06.580 align:start position:0%
apparently starts to see some some
stretch<00:22:04.000><c> fields</c><00:22:05.000><c> that</c><00:22:05.570><c> they</c><00:22:05.810><c> never</c><00:22:06.230><c> brought</c>

00:22:06.580 --> 00:22:06.590 align:start position:0%
stretch fields that they never brought
 

00:22:06.590 --> 00:22:09.700 align:start position:0%
stretch fields that they never brought
and<00:22:06.890><c> the</c><00:22:07.580><c> answer</c><00:22:07.910><c> is</c><00:22:08.060><c> that</c><00:22:08.450><c> the</c><00:22:08.870><c> code</c><00:22:09.140><c> is</c><00:22:09.350><c> not</c>

00:22:09.700 --> 00:22:09.710 align:start position:0%
and the answer is that the code is not
 

00:22:09.710 --> 00:22:12.640 align:start position:0%
and the answer is that the code is not
ignoring<00:22:10.540><c> synthetic</c><00:22:11.540><c> constructions</c><00:22:12.230><c> whereas</c>

00:22:12.640 --> 00:22:12.650 align:start position:0%
ignoring synthetic constructions whereas
 

00:22:12.650 --> 00:22:15.370 align:start position:0%
ignoring synthetic constructions whereas
it<00:22:12.890><c> should</c><00:22:12.920><c> so</c><00:22:13.910><c> please</c><00:22:14.270><c> fix</c><00:22:14.540><c> your</c><00:22:14.690><c> refraction</c>

00:22:15.370 --> 00:22:15.380 align:start position:0%
it should so please fix your refraction
 

00:22:15.380 --> 00:22:17.020 align:start position:0%
it should so please fix your refraction
to<00:22:15.530><c> ignore</c><00:22:15.800><c> the</c><00:22:15.980><c> synthetic</c><00:22:16.430><c> constructions</c>

00:22:17.020 --> 00:22:17.030 align:start position:0%
to ignore the synthetic constructions
 

00:22:17.030 --> 00:22:19.960 align:start position:0%
to ignore the synthetic constructions
you<00:22:17.510><c> can</c><00:22:17.750><c> get</c><00:22:17.960><c> zeus</c><00:22:18.260><c> even</c><00:22:18.710><c> with</c><00:22:18.890><c> plain</c><00:22:19.610><c> simple</c>

00:22:19.960 --> 00:22:19.970 align:start position:0%
you can get zeus even with plain simple
 

00:22:19.970 --> 00:22:22.660 align:start position:0%
you can get zeus even with plain simple
stupid<00:22:20.390><c> java</c><00:22:20.990><c> sources</c><00:22:21.500><c> not</c><00:22:22.010><c> only</c><00:22:22.340><c> this</c><00:22:22.460><c> joke</c>

00:22:22.660 --> 00:22:22.670 align:start position:0%
stupid java sources not only this joke
 

00:22:22.670 --> 00:22:28.120 align:start position:0%
stupid java sources not only this joke
oka<00:22:24.640><c> let's</c><00:22:25.640><c> move</c><00:22:25.820><c> on</c><00:22:25.970><c> a</c><00:22:26.570><c> neck</c><00:22:27.080><c> and</c><00:22:27.380><c> next</c>

00:22:28.120 --> 00:22:28.130 align:start position:0%
oka let's move on a neck and next
 

00:22:28.130 --> 00:22:31.120 align:start position:0%
oka let's move on a neck and next
question<00:22:28.520><c> from</c><00:22:28.730><c> me</c><00:22:28.940><c> so</c><00:22:29.660><c> you</c><00:22:30.500><c> know</c><00:22:30.650><c> already</c>

00:22:31.120 --> 00:22:31.130 align:start position:0%
question from me so you know already
 

00:22:31.130 --> 00:22:32.470 align:start position:0%
question from me so you know already
that<00:22:31.310><c> there</c><00:22:31.670><c> is</c><00:22:31.790><c> some</c><00:22:32.150><c> synthetic</c>

00:22:32.470 --> 00:22:32.480 align:start position:0%
that there is some synthetic
 

00:22:32.480 --> 00:22:34.870 align:start position:0%
that there is some synthetic
constructions<00:22:33.350><c> that</c><00:22:33.830><c> Java</c><00:22:34.490><c> compiler</c>

00:22:34.870 --> 00:22:34.880 align:start position:0%
constructions that Java compiler
 

00:22:34.880 --> 00:22:38.530 align:start position:0%
constructions that Java compiler
generates<00:22:35.860><c> do</c><00:22:36.860><c> you</c><00:22:36.980><c> have</c><00:22:37.220><c> any</c><00:22:37.520><c> ideas</c><00:22:37.970><c> of</c><00:22:38.150><c> other</c>

00:22:38.530 --> 00:22:38.540 align:start position:0%
generates do you have any ideas of other
 

00:22:38.540 --> 00:22:43.060 align:start position:0%
generates do you have any ideas of other
synthetic<00:22:38.930><c> constructions</c><00:22:41.830><c> exactly</c><00:22:42.830><c> bridge</c>

00:22:43.060 --> 00:22:43.070 align:start position:0%
synthetic constructions exactly bridge
 

00:22:43.070 --> 00:22:45.400 align:start position:0%
synthetic constructions exactly bridge
method<00:22:43.460><c> so</c><00:22:43.670><c> one</c><00:22:44.000><c> bridge</c><00:22:44.420><c> methods</c><00:22:44.810><c> so</c><00:22:45.140><c> one</c><00:22:45.380><c> of</c>

00:22:45.400 --> 00:22:45.410 align:start position:0%
method so one bridge methods so one of
 

00:22:45.410 --> 00:22:48.250 align:start position:0%
method so one bridge methods so one of
examples<00:22:46.100><c> of</c><00:22:46.250><c> bridge</c><00:22:46.520><c> methods</c><00:22:46.910><c> we</c><00:22:47.480><c> have</c><00:22:47.510><c> outer</c>

00:22:48.250 --> 00:22:48.260 align:start position:0%
examples of bridge methods we have outer
 

00:22:48.260 --> 00:22:50.710 align:start position:0%
examples of bridge methods we have outer
class<00:22:48.800><c> we</c><00:22:49.070><c> have</c><00:22:49.280><c> inner</c><00:22:49.520><c> class</c><00:22:49.880><c> inner</c><00:22:50.480><c> class</c>

00:22:50.710 --> 00:22:50.720 align:start position:0%
class we have inner class inner class
 

00:22:50.720 --> 00:22:54.970 align:start position:0%
class we have inner class inner class
does<00:22:51.410><c> an</c><00:22:51.560><c> access</c><00:22:51.920><c> of</c><00:22:53.110><c> private</c><00:22:54.110><c> fields</c><00:22:54.560><c> of</c><00:22:54.740><c> an</c>

00:22:54.970 --> 00:22:54.980 align:start position:0%
does an access of private fields of an
 

00:22:54.980 --> 00:22:56.110 align:start position:0%
does an access of private fields of an
outer<00:22:55.160><c> class</c>

00:22:56.110 --> 00:22:56.120 align:start position:0%
outer class
 

00:22:56.120 --> 00:22:58.080 align:start position:0%
outer class
according<00:22:57.080><c> to</c><00:22:57.110><c> the</c><00:22:57.470><c> Java</c><00:22:57.740><c> language</c>

00:22:58.080 --> 00:22:58.090 align:start position:0%
according to the Java language
 

00:22:58.090 --> 00:22:59.920 align:start position:0%
according to the Java language
specifications<00:22:59.090><c> this</c><00:22:59.240><c> is</c><00:22:59.390><c> perfectly</c><00:22:59.810><c> valid</c>

00:22:59.920 --> 00:22:59.930 align:start position:0%
specifications this is perfectly valid
 

00:22:59.930 --> 00:23:03.820 align:start position:0%
specifications this is perfectly valid
and<00:23:00.320><c> this</c><00:23:01.070><c> is</c><00:23:01.220><c> permitted</c><00:23:02.380><c> however</c><00:23:03.380><c> according</c>

00:23:03.820 --> 00:23:03.830 align:start position:0%
and this is permitted however according
 

00:23:03.830 --> 00:23:07.150 align:start position:0%
and this is permitted however according
to<00:23:04.570><c> Java</c><00:23:05.570><c> Virtual</c><00:23:05.840><c> Machine</c><00:23:06.160><c> specification</c>

00:23:07.150 --> 00:23:07.160 align:start position:0%
to Java Virtual Machine specification
 

00:23:07.160 --> 00:23:09.550 align:start position:0%
to Java Virtual Machine specification
these<00:23:07.760><c> two</c><00:23:07.940><c> classes</c><00:23:08.180><c> they</c><00:23:08.600><c> are</c><00:23:08.900><c> in</c><00:23:09.200><c> the</c><00:23:09.350><c> same</c>

00:23:09.550 --> 00:23:09.560 align:start position:0%
these two classes they are in the same
 

00:23:09.560 --> 00:23:13.390 align:start position:0%
these two classes they are in the same
package<00:23:09.800><c> and</c><00:23:10.630><c> in</c><00:23:11.630><c> your</c><00:23:11.900><c> class</c><00:23:12.110><c> actually</c><00:23:12.800><c> can't</c>

00:23:13.390 --> 00:23:13.400 align:start position:0%
package and in your class actually can't
 

00:23:13.400 --> 00:23:16.600 align:start position:0%
package and in your class actually can't
access<00:23:14.030><c> private</c><00:23:14.780><c> fields</c><00:23:15.590><c> of</c><00:23:15.800><c> an</c><00:23:16.040><c> outer</c><00:23:16.220><c> class</c>

00:23:16.600 --> 00:23:16.610 align:start position:0%
access private fields of an outer class
 

00:23:16.610 --> 00:23:20.740 align:start position:0%
access private fields of an outer class
so<00:23:17.360><c> in</c><00:23:17.660><c> order</c><00:23:17.780><c> to</c><00:23:18.020><c> avoid</c><00:23:18.610><c> what</c><00:23:19.610><c> says</c><00:23:19.850><c> this</c><00:23:20.150><c> a</c>

00:23:20.740 --> 00:23:20.750 align:start position:0%
so in order to avoid what says this a
 

00:23:20.750 --> 00:23:23.410 align:start position:0%
so in order to avoid what says this a
little<00:23:21.560><c> misalignment</c><00:23:22.550><c> between</c><00:23:22.610><c> Java</c>

00:23:23.410 --> 00:23:23.420 align:start position:0%
little misalignment between Java
 

00:23:23.420 --> 00:23:25.660 align:start position:0%
little misalignment between Java
language<00:23:23.570><c> specification</c><00:23:23.960><c> and</c><00:23:24.680><c> virtual</c>

00:23:25.660 --> 00:23:25.670 align:start position:0%
language specification and virtual
 

00:23:25.670 --> 00:23:28.290 align:start position:0%
language specification and virtual
machine<00:23:25.970><c> specification</c><00:23:26.630><c> compiler</c><00:23:27.080><c> generates</c>

00:23:28.290 --> 00:23:28.300 align:start position:0%
machine specification compiler generates
 

00:23:28.300 --> 00:23:32.170 align:start position:0%
machine specification compiler generates
so-called<00:23:29.300><c> bridge</c><00:23:29.990><c> methods</c><00:23:30.610><c> again</c><00:23:31.610><c> if</c><00:23:31.850><c> we</c><00:23:32.060><c> do</c>

00:23:32.170 --> 00:23:32.180 align:start position:0%
so-called bridge methods again if we do
 

00:23:32.180 --> 00:23:36.250 align:start position:0%
so-called bridge methods again if we do
compile<00:23:32.600><c> our</c><00:23:34.030><c> classes</c><00:23:35.030><c> we</c><00:23:35.660><c> can</c><00:23:35.840><c> see</c><00:23:36.050><c> that</c>

00:23:36.250 --> 00:23:36.260 align:start position:0%
compile our classes we can see that
 

00:23:36.260 --> 00:23:38.890 align:start position:0%
compile our classes we can see that
outer<00:23:36.620><c> class</c><00:23:37.160><c> after</c><00:23:37.820><c> compilation</c><00:23:38.150><c> it</c><00:23:38.660><c> has</c>

00:23:38.890 --> 00:23:38.900 align:start position:0%
outer class after compilation it has
 

00:23:38.900 --> 00:23:42.430 align:start position:0%
outer class after compilation it has
special<00:23:39.860><c> methods</c><00:23:40.460><c> with</c><00:23:41.240><c> some</c><00:23:41.600><c> generated</c><00:23:42.260><c> name</c>

00:23:42.430 --> 00:23:42.440 align:start position:0%
special methods with some generated name
 

00:23:42.440 --> 00:23:48.430 align:start position:0%
special methods with some generated name
access<00:23:43.270><c> something</c><00:23:46.360><c> which</c><00:23:47.360><c> is</c><00:23:47.540><c> again</c><00:23:48.020><c> market</c>

00:23:48.430 --> 00:23:48.440 align:start position:0%
access something which is again market
 

00:23:48.440 --> 00:23:50.830 align:start position:0%
access something which is again market
as<00:23:48.560><c> synthetic</c><00:23:48.920><c> and</c><00:23:49.310><c> if</c><00:23:49.760><c> we</c><00:23:49.970><c> compile</c><00:23:50.420><c> inner</c>

00:23:50.830 --> 00:23:50.840 align:start position:0%
as synthetic and if we compile inner
 

00:23:50.840 --> 00:23:56.110 align:start position:0%
as synthetic and if we compile inner
class<00:23:51.110><c> we</c><00:23:51.890><c> will</c><00:23:52.070><c> see</c><00:23:52.310><c> that</c><00:23:53.470><c> access</c><00:23:54.470><c> of</c><00:23:55.120><c> field</c>

00:23:56.110 --> 00:23:56.120 align:start position:0%
class we will see that access of field
 

00:23:56.120 --> 00:23:59.820 align:start position:0%
class we will see that access of field
is<00:23:56.420><c> actually</c><00:23:56.630><c> performed</c><00:23:57.440><c> through</c><00:23:57.980><c> the</c>

00:23:59.820 --> 00:23:59.830 align:start position:0%
is actually performed through the
 

00:23:59.830 --> 00:24:04.950 align:start position:0%
is actually performed through the
through<00:24:00.830><c> the</c><00:24:00.890><c> generated</c><00:24:01.640><c> synthetic</c><00:24:02.120><c> method</c>

00:24:04.950 --> 00:24:04.960 align:start position:0%
 
 

00:24:04.960 --> 00:24:08.500 align:start position:0%
 
what<00:24:05.960><c> about</c><00:24:06.110><c> methods</c><00:24:06.650><c> in</c><00:24:06.920><c> enums</c><00:24:07.360><c> you</c><00:24:08.360><c> know</c>

00:24:08.500 --> 00:24:08.510 align:start position:0%
what about methods in enums you know
 

00:24:08.510 --> 00:24:10.780 align:start position:0%
what about methods in enums you know
that<00:24:08.810><c> if</c><00:24:09.140><c> we</c><00:24:09.260><c> declare</c><00:24:09.410><c> in</c><00:24:09.800><c> ohm</c><00:24:09.980><c> with</c><00:24:10.490><c> some</c>

00:24:10.780 --> 00:24:10.790 align:start position:0%
that if we declare in ohm with some
 

00:24:10.790 --> 00:24:12.850 align:start position:0%
that if we declare in ohm with some
constants<00:24:11.450><c> we</c><00:24:11.660><c> will</c><00:24:11.840><c> get</c><00:24:12.020><c> two</c><00:24:12.440><c> additional</c>

00:24:12.850 --> 00:24:12.860 align:start position:0%
constants we will get two additional
 

00:24:12.860 --> 00:24:15.130 align:start position:0%
constants we will get two additional
methods<00:24:13.330><c> generated</c><00:24:14.330><c> by</c><00:24:14.480><c> Java</c><00:24:14.810><c> compiler</c>

00:24:15.130 --> 00:24:15.140 align:start position:0%
methods generated by Java compiler
 

00:24:15.140 --> 00:24:23.800 align:start position:0%
methods generated by Java compiler
values<00:24:16.070><c> and</c><00:24:16.370><c> value</c><00:24:16.820><c> of</c><00:24:17.060><c> as</c><00:24:17.360><c> a</c><00:24:18.140><c> synthetic</c><00:24:22.810><c> then</c>

00:24:23.800 --> 00:24:23.810 align:start position:0%
values and value of as a synthetic then
 

00:24:23.810 --> 00:24:26.490 align:start position:0%
values and value of as a synthetic then
not<00:24:24.050><c> this</c><00:24:24.860><c> is</c><00:24:25.010><c> a</c><00:24:25.040><c> common</c><00:24:25.430><c> misbelief</c><00:24:25.880><c> that</c>

00:24:26.490 --> 00:24:26.500 align:start position:0%
not this is a common misbelief that
 

00:24:26.500 --> 00:24:29.200 align:start position:0%
not this is a common misbelief that
everything<00:24:27.500><c> generated</c><00:24:28.100><c> by</c><00:24:28.250><c> Java</c><00:24:28.520><c> compiler</c><00:24:28.910><c> is</c>

00:24:29.200 --> 00:24:29.210 align:start position:0%
everything generated by Java compiler is
 

00:24:29.210 --> 00:24:31.540 align:start position:0%
everything generated by Java compiler is
synthetic<00:24:29.420><c> no</c><00:24:30.020><c> this</c><00:24:30.680><c> method</c><00:24:31.040><c> are</c><00:24:31.220><c> not</c><00:24:31.370><c> in</c>

00:24:31.540 --> 00:24:31.550 align:start position:0%
synthetic no this method are not in
 

00:24:31.550 --> 00:24:36.300 align:start position:0%
synthetic no this method are not in
synthetic<00:24:32.150><c> and</c><00:24:32.510><c> the</c><00:24:32.660><c> reason</c><00:24:32.960><c> for</c><00:24:33.140><c> this</c><00:24:33.290><c> is</c>

00:24:36.300 --> 00:24:36.310 align:start position:0%
 
 

00:24:36.310 --> 00:24:39.700 align:start position:0%
 
Java<00:24:37.310><c> compiler</c><00:24:37.820><c> doesn't</c><00:24:38.360><c> wouldn't</c><00:24:39.200><c> allow</c><00:24:39.650><c> you</c>

00:24:39.700 --> 00:24:39.710 align:start position:0%
Java compiler doesn't wouldn't allow you
 

00:24:39.710 --> 00:24:45.120 align:start position:0%
Java compiler doesn't wouldn't allow you
to<00:24:40.120><c> explicitly</c><00:24:41.440><c> refer</c><00:24:42.440><c> to</c><00:24:42.800><c> some</c><00:24:43.490><c> synthetic</c><00:24:44.080><c> so</c>

00:24:45.120 --> 00:24:45.130 align:start position:0%
to explicitly refer to some synthetic so
 

00:24:45.130 --> 00:24:48.670 align:start position:0%
to explicitly refer to some synthetic so
you<00:24:46.130><c> can't</c><00:24:46.580><c> write</c><00:24:46.940><c> a</c><00:24:47.240><c> code</c><00:24:47.570><c> that</c><00:24:47.930><c> will</c><00:24:48.140><c> compile</c>

00:24:48.670 --> 00:24:48.680 align:start position:0%
you can't write a code that will compile
 

00:24:48.680 --> 00:24:53.320 align:start position:0%
you can't write a code that will compile
and<00:24:48.980><c> it</c><00:24:49.220><c> that</c><00:24:49.580><c> will</c><00:24:50.710><c> that</c><00:24:51.710><c> will</c><00:24:51.770><c> use</c><00:24:52.330><c> synthetic</c>

00:24:53.320 --> 00:24:53.330 align:start position:0%
and it that will that will use synthetic
 

00:24:53.330 --> 00:24:56.140 align:start position:0%
and it that will that will use synthetic
methods<00:24:53.750><c> synthetic</c><00:24:54.350><c> fields</c><00:24:54.590><c> and</c><00:24:54.890><c> as</c><00:24:55.730><c> those</c>

00:24:56.140 --> 00:24:56.150 align:start position:0%
methods synthetic fields and as those
 

00:24:56.150 --> 00:24:58.930 align:start position:0%
methods synthetic fields and as those
two<00:24:56.390><c> methods</c><00:24:56.750><c> in</c><00:24:56.990><c> enums</c><00:24:57.380><c> values</c><00:24:58.100><c> and</c><00:24:58.370><c> value</c><00:24:58.730><c> of</c>

00:24:58.930 --> 00:24:58.940 align:start position:0%
two methods in enums values and value of
 

00:24:58.940 --> 00:25:03.120 align:start position:0%
two methods in enums values and value of
they<00:24:59.810><c> are</c><00:25:00.130><c> intended</c><00:25:01.130><c> to</c><00:25:01.310><c> be</c><00:25:01.580><c> accessible</c><00:25:02.420><c> by</c>

00:25:03.120 --> 00:25:03.130 align:start position:0%
they are intended to be accessible by
 

00:25:03.130 --> 00:25:05.900 align:start position:0%
they are intended to be accessible by
developers<00:25:04.130><c> they</c><00:25:04.490><c> are</c><00:25:04.550><c> not</c><00:25:04.700><c> synthetic</c>

00:25:05.900 --> 00:25:05.910 align:start position:0%
developers they are not synthetic
 

00:25:05.910 --> 00:25:08.090 align:start position:0%
developers they are not synthetic
this<00:25:06.600><c> is</c><00:25:06.750><c> important</c><00:25:07.260><c> for</c><00:25:07.470><c> code</c><00:25:07.770><c> coverage</c>

00:25:08.090 --> 00:25:08.100 align:start position:0%
this is important for code coverage
 

00:25:08.100 --> 00:25:14.600 align:start position:0%
this is important for code coverage
tools<00:25:08.510><c> because</c><00:25:12.290><c> you</c><00:25:13.290><c> don't</c><00:25:13.530><c> need</c><00:25:13.740><c> to</c><00:25:13.800><c> test</c><00:25:14.280><c> the</c>

00:25:14.600 --> 00:25:14.610 align:start position:0%
tools because you don't need to test the
 

00:25:14.610 --> 00:25:16.520 align:start position:0%
tools because you don't need to test the
code<00:25:14.790><c> that</c><00:25:14.970><c> is</c><00:25:15.150><c> generated</c><00:25:15.180><c> by</c><00:25:15.960><c> compiler</c>

00:25:16.520 --> 00:25:16.530 align:start position:0%
code that is generated by compiler
 

00:25:16.530 --> 00:25:19.610 align:start position:0%
code that is generated by compiler
you're<00:25:17.100><c> gonna</c><00:25:17.280><c> trust</c><00:25:17.790><c> the</c><00:25:18.060><c> compiler</c><00:25:18.480><c> so</c><00:25:19.260><c> this</c>

00:25:19.610 --> 00:25:19.620 align:start position:0%
you're gonna trust the compiler so this
 

00:25:19.620 --> 00:25:21.890 align:start position:0%
you're gonna trust the compiler so this
method<00:25:20.010><c> should</c><00:25:20.040><c> be</c><00:25:20.280><c> actually</c><00:25:20.670><c> excluded</c><00:25:21.600><c> from</c>

00:25:21.890 --> 00:25:21.900 align:start position:0%
method should be actually excluded from
 

00:25:21.900 --> 00:25:25.670 align:start position:0%
method should be actually excluded from
the<00:25:22.140><c> coverage</c><00:25:22.410><c> analyzers</c><00:25:24.440><c> let's</c><00:25:25.440><c> move</c>

00:25:25.670 --> 00:25:25.680 align:start position:0%
the coverage analyzers let's move
 

00:25:25.680 --> 00:25:29.420 align:start position:0%
the coverage analyzers let's move
forward<00:25:26.990><c> another</c><00:25:27.990><c> interesting</c><00:25:28.680><c> example</c><00:25:28.830><c> of</c>

00:25:29.420 --> 00:25:29.430 align:start position:0%
forward another interesting example of
 

00:25:29.430 --> 00:25:32.800 align:start position:0%
forward another interesting example of
synthetic<00:25:30.210><c> constructions</c><00:25:31.280><c> generated</c><00:25:32.280><c> by</c>

00:25:32.800 --> 00:25:32.810 align:start position:0%
synthetic constructions generated by
 

00:25:32.810 --> 00:25:37.180 align:start position:0%
synthetic constructions generated by
Java<00:25:33.810><c> compiler</c><00:25:34.200><c> is</c><00:25:35.090><c> implementation</c><00:25:36.090><c> of</c>

00:25:37.180 --> 00:25:37.190 align:start position:0%
Java compiler is implementation of
 

00:25:37.190 --> 00:25:41.870 align:start position:0%
Java compiler is implementation of
lambdas<00:25:38.190><c> so</c><00:25:39.060><c> if</c><00:25:39.390><c> you</c><00:25:39.570><c> have</c><00:25:39.780><c> a</c><00:25:40.350><c> lambda</c><00:25:40.880><c> like</c>

00:25:41.870 --> 00:25:41.880 align:start position:0%
lambdas so if you have a lambda like
 

00:25:41.880 --> 00:25:44.630 align:start position:0%
lambdas so if you have a lambda like
implementation<00:25:42.810><c> of</c><00:25:43.190><c> functional</c><00:25:44.190><c> interface</c>

00:25:44.630 --> 00:25:44.640 align:start position:0%
implementation of functional interface
 

00:25:44.640 --> 00:25:48.350 align:start position:0%
implementation of functional interface
runnable<00:25:45.830><c> like</c><00:25:46.830><c> this</c><00:25:47.130><c> again</c><00:25:47.700><c> if</c><00:25:48.030><c> you</c><00:25:48.240><c> D</c>

00:25:48.350 --> 00:25:48.360 align:start position:0%
runnable like this again if you D
 

00:25:48.360 --> 00:25:51.110 align:start position:0%
runnable like this again if you D
compile<00:25:48.720><c> it</c><00:25:49.020><c> and</c><00:25:49.350><c> here</c><00:25:50.160><c> you</c><00:25:50.310><c> might</c><00:25:50.340><c> learn</c><00:25:50.760><c> some</c>

00:25:51.110 --> 00:25:51.120 align:start position:0%
compile it and here you might learn some
 

00:25:51.120 --> 00:25:54.530 align:start position:0%
compile it and here you might learn some
new<00:25:51.150><c> option</c><00:25:51.660><c> for</c><00:25:51.690><c> java</c><00:25:52.230><c> decompiler</c><00:25:52.940><c> -</c><00:25:53.940><c> L</c><00:25:54.240><c> which</c>

00:25:54.530 --> 00:25:54.540 align:start position:0%
new option for java decompiler - L which
 

00:25:54.540 --> 00:25:58.760 align:start position:0%
new option for java decompiler - L which
will<00:25:54.810><c> display</c><00:25:55.730><c> you</c><00:25:56.730><c> align</c><00:25:57.360><c> numbers</c><00:25:57.870><c> in</c><00:25:58.380><c> the</c><00:25:58.650><c> de</c>

00:25:58.760 --> 00:25:58.770 align:start position:0%
will display you align numbers in the de
 

00:25:58.770 --> 00:26:02.530 align:start position:0%
will display you align numbers in the de
compiled<00:25:59.100><c> at</c><00:25:59.250><c> code</c><00:25:59.630><c> you</c><00:26:00.630><c> will</c><00:26:00.810><c> see</c><00:26:01.080><c> that</c>

00:26:02.530 --> 00:26:02.540 align:start position:0%
compiled at code you will see that
 

00:26:02.540 --> 00:26:05.810 align:start position:0%
compiled at code you will see that
within<00:26:03.540><c> this</c><00:26:03.840><c> class</c><00:26:04.050><c> you</c><00:26:04.440><c> will</c><00:26:04.620><c> have</c><00:26:04.650><c> one</c><00:26:05.550><c> more</c>

00:26:05.810 --> 00:26:05.820 align:start position:0%
within this class you will have one more
 

00:26:05.820 --> 00:26:08.870 align:start position:0%
within this class you will have one more
synthetic<00:26:06.290><c> methods</c><00:26:07.290><c> whose</c><00:26:08.070><c> name</c><00:26:08.280><c> starts</c><00:26:08.790><c> with</c>

00:26:08.870 --> 00:26:08.880 align:start position:0%
synthetic methods whose name starts with
 

00:26:08.880 --> 00:26:12.080 align:start position:0%
synthetic methods whose name starts with
lambdas<00:26:09.660><c> and</c><00:26:09.870><c> something</c><00:26:10.880><c> generated</c><00:26:11.880><c> and</c>

00:26:12.080 --> 00:26:12.090 align:start position:0%
lambdas and something generated and
 

00:26:12.090 --> 00:26:15.320 align:start position:0%
lambdas and something generated and
actually<00:26:13.080><c> the</c><00:26:13.470><c> content</c><00:26:13.920><c> of</c><00:26:14.550><c> this</c><00:26:14.850><c> method</c>

00:26:15.320 --> 00:26:15.330 align:start position:0%
actually the content of this method
 

00:26:15.330 --> 00:26:19.220 align:start position:0%
actually the content of this method
lines<00:26:16.520><c> lines</c><00:26:17.520><c> within</c><00:26:17.940><c> this</c><00:26:18.270><c> methods</c><00:26:18.660><c> a</c><00:26:18.840><c> map</c>

00:26:19.220 --> 00:26:19.230 align:start position:0%
lines lines within this methods a map
 

00:26:19.230 --> 00:26:23.920 align:start position:0%
lines lines within this methods a map
one<00:26:19.500><c> two</c><00:26:19.680><c> one</c><00:26:19.890><c> two</c><00:26:19.920><c> the</c><00:26:20.250><c> lines</c><00:26:20.490><c> of</c><00:26:21.210><c> your</c><00:26:21.930><c> lambda</c>

00:26:23.920 --> 00:26:23.930 align:start position:0%
one two one two the lines of your lambda
 

00:26:23.930 --> 00:26:27.530 align:start position:0%
one two one two the lines of your lambda
this<00:26:24.930><c> is</c><00:26:25.140><c> this</c><00:26:25.980><c> is</c><00:26:26.190><c> again</c><00:26:26.610><c> before</c><00:26:27.150><c> nuts</c>

00:26:27.530 --> 00:26:27.540 align:start position:0%
this is this is again before nuts
 

00:26:27.540 --> 00:26:29.840 align:start position:0%
this is this is again before nuts
dragons<00:26:28.410><c> here</c><00:26:28.770><c> this</c><00:26:29.010><c> is</c><00:26:29.160><c> implementation</c>

00:26:29.840 --> 00:26:29.850 align:start position:0%
dragons here this is implementation
 

00:26:29.850 --> 00:26:31.550 align:start position:0%
dragons here this is implementation
details<00:26:30.270><c> of</c><00:26:30.450><c> lambdas</c><00:26:30.870><c> there</c><00:26:31.050><c> is</c><00:26:31.170><c> no</c><00:26:31.380><c> guarantee</c>

00:26:31.550 --> 00:26:31.560 align:start position:0%
details of lambdas there is no guarantee
 

00:26:31.560 --> 00:26:35.390 align:start position:0%
details of lambdas there is no guarantee
that<00:26:31.800><c> tomorrow</c><00:26:32.670><c> this</c><00:26:32.970><c> wouldn't</c><00:26:33.390><c> change</c><00:26:34.400><c> why</c>

00:26:35.390 --> 00:26:35.400 align:start position:0%
that tomorrow this wouldn't change why
 

00:26:35.400 --> 00:26:37.310 align:start position:0%
that tomorrow this wouldn't change why
this<00:26:35.460><c> is</c><00:26:35.820><c> important</c><00:26:36.330><c> for</c><00:26:36.450><c> code</c><00:26:36.630><c> coverage</c><00:26:36.960><c> as</c>

00:26:37.310 --> 00:26:37.320 align:start position:0%
this is important for code coverage as
 

00:26:37.320 --> 00:26:41.560 align:start position:0%
this is important for code coverage as
we<00:26:37.500><c> said</c><00:26:37.710><c> before</c><00:26:39.380><c> some</c><00:26:40.380><c> methods</c><00:26:40.830><c> and</c>

00:26:41.560 --> 00:26:41.570 align:start position:0%
we said before some methods and
 

00:26:41.570 --> 00:26:44.450 align:start position:0%
we said before some methods and
specifically<00:26:42.570><c> the</c><00:26:42.780><c> ones</c><00:26:43.310><c> generated</c><00:26:44.310><c> by</c>

00:26:44.450 --> 00:26:44.460 align:start position:0%
specifically the ones generated by
 

00:26:44.460 --> 00:26:47.900 align:start position:0%
specifically the ones generated by
compilers<00:26:44.850><c> synthetic</c><00:26:45.600><c> and</c><00:26:45.780><c> not</c><00:26:45.990><c> synthetic</c><00:26:46.910><c> we</c>

00:26:47.900 --> 00:26:47.910 align:start position:0%
compilers synthetic and not synthetic we
 

00:26:47.910 --> 00:26:49.280 align:start position:0%
compilers synthetic and not synthetic we
should<00:26:48.090><c> ignore</c><00:26:48.300><c> for</c><00:26:48.660><c> code</c><00:26:48.810><c> coverage</c>

00:26:49.280 --> 00:26:49.290 align:start position:0%
should ignore for code coverage
 

00:26:49.290 --> 00:26:52.970 align:start position:0%
should ignore for code coverage
whereas<00:26:50.120><c> for</c><00:26:51.120><c> lambdas</c><00:26:51.510><c> even</c><00:26:51.870><c> zoos</c><00:26:52.080><c> its</c><00:26:52.470><c> market</c>

00:26:52.970 --> 00:26:52.980 align:start position:0%
whereas for lambdas even zoos its market
 

00:26:52.980 --> 00:26:54.590 align:start position:0%
whereas for lambdas even zoos its market
a<00:26:53.100><c> synthetic</c><00:26:53.340><c> we</c><00:26:53.730><c> shouldn't</c><00:26:54.120><c> ignore</c><00:26:54.300><c> it</c>

00:26:54.590 --> 00:26:54.600 align:start position:0%
a synthetic we shouldn't ignore it
 

00:26:54.600 --> 00:26:56.450 align:start position:0%
a synthetic we shouldn't ignore it
because<00:26:54.780><c> you</c><00:26:55.320><c> want</c><00:26:55.530><c> a</c><00:26:55.590><c> coverage</c><00:26:56.040><c> of</c><00:26:56.250><c> your</c>

00:26:56.450 --> 00:26:56.460 align:start position:0%
because you want a coverage of your
 

00:26:56.460 --> 00:27:00.849 align:start position:0%
because you want a coverage of your
numbers

00:27:00.849 --> 00:27:00.859 align:start position:0%
 
 

00:27:00.859 --> 00:27:04.460 align:start position:0%
 
how<00:27:01.859><c> we</c><00:27:01.919><c> do</c><00:27:02.249><c> all</c><00:27:02.279><c> these</c><00:27:02.789><c> manipulations</c><00:27:03.470><c> with</c>

00:27:04.460 --> 00:27:04.470 align:start position:0%
how we do all these manipulations with
 

00:27:04.470 --> 00:27:05.629 align:start position:0%
how we do all these manipulations with
with<00:27:04.950><c> bytecodes</c>

00:27:05.629 --> 00:27:05.639 align:start position:0%
with bytecodes
 

00:27:05.639 --> 00:27:09.499 align:start position:0%
with bytecodes
we<00:27:06.299><c> rely</c><00:27:06.659><c> on</c><00:27:06.899><c> on</c><00:27:07.559><c> a</c><00:27:07.619><c> such</c><00:27:07.889><c> a</c><00:27:07.919><c> great</c><00:27:08.299><c> library</c><00:27:09.299><c> as</c>

00:27:09.499 --> 00:27:09.509 align:start position:0%
we rely on on a such a great library as
 

00:27:09.509 --> 00:27:11.330 align:start position:0%
we rely on on a such a great library as
Isum

00:27:11.330 --> 00:27:11.340 align:start position:0%
Isum
 

00:27:11.340 --> 00:27:13.820 align:start position:0%
Isum
which<00:27:12.029><c> allows</c><00:27:12.419><c> us</c><00:27:12.690><c> readings</c><00:27:13.200><c> a</c><00:27:13.379><c> bytecode</c>

00:27:13.820 --> 00:27:13.830 align:start position:0%
which allows us readings a bytecode
 

00:27:13.830 --> 00:27:19.249 align:start position:0%
which allows us readings a bytecode
writing<00:27:14.399><c> the</c><00:27:14.580><c> byte</c><00:27:14.730><c> codes</c><00:27:15.029><c> etc</c><00:27:15.929><c> etc</c><00:27:16.470><c> and</c><00:27:18.259><c> here</c>

00:27:19.249 --> 00:27:19.259 align:start position:0%
writing the byte codes etc etc and here
 

00:27:19.259 --> 00:27:21.649 align:start position:0%
writing the byte codes etc etc and here
is<00:27:19.379><c> an</c><00:27:19.529><c> interesting</c><00:27:19.820><c> funny</c><00:27:20.820><c> fact</c><00:27:21.179><c> which</c><00:27:21.450><c> is</c>

00:27:21.649 --> 00:27:21.659 align:start position:0%
is an interesting funny fact which is
 

00:27:21.659 --> 00:27:27.019 align:start position:0%
is an interesting funny fact which is
connected<00:27:22.230><c> with</c><00:27:23.659><c> how</c><00:27:24.659><c> to</c><00:27:24.720><c> support</c><00:27:25.399><c> how</c><00:27:26.399><c> how</c><00:27:26.970><c> we</c>

00:27:27.019 --> 00:27:27.029 align:start position:0%
connected with how to support how how we
 

00:27:27.029 --> 00:27:32.060 align:start position:0%
connected with how to support how how we
did<00:27:27.450><c> brought</c><00:27:28.409><c> a</c><00:27:28.679><c> support</c><00:27:29.159><c> of</c><00:27:29.399><c> Java</c><00:27:29.940><c> 9</c><00:27:30.529><c> so</c><00:27:31.529><c> if</c><00:27:31.859><c> we</c>

00:27:32.060 --> 00:27:32.070 align:start position:0%
did brought a support of Java 9 so if we
 

00:27:32.070 --> 00:27:34.430 align:start position:0%
did brought a support of Java 9 so if we
will<00:27:32.220><c> take</c><00:27:32.429><c> Java</c><00:27:32.879><c> compiler</c><00:27:33.299><c> from</c><00:27:33.659><c> early</c>

00:27:34.430 --> 00:27:34.440 align:start position:0%
will take Java compiler from early
 

00:27:34.440 --> 00:27:38.720 align:start position:0%
will take Java compiler from early
access<00:27:34.710><c> build</c><00:27:34.980><c> of</c><00:27:35.509><c> gdk9</c><00:27:36.889><c> if</c><00:27:37.889><c> we</c><00:27:38.070><c> will</c><00:27:38.249><c> compile</c>

00:27:38.720 --> 00:27:38.730 align:start position:0%
access build of gdk9 if we will compile
 

00:27:38.730 --> 00:27:42.169 align:start position:0%
access build of gdk9 if we will compile
some<00:27:39.059><c> class</c><00:27:39.330><c> into</c><00:27:39.809><c> the</c><00:27:39.929><c> bytecode</c><00:27:40.139><c> of</c><00:27:41.039><c> Java</c><00:27:41.940><c> 9</c>

00:27:42.169 --> 00:27:42.179 align:start position:0%
some class into the bytecode of Java 9
 

00:27:42.179 --> 00:27:46.700 align:start position:0%
some class into the bytecode of Java 9
and<00:27:44.119><c> if</c><00:27:45.119><c> we</c><00:27:45.389><c> will</c><00:27:45.539><c> try</c><00:27:45.779><c> to</c><00:27:45.809><c> use</c><00:27:46.200><c> by</c><00:27:46.440><c> some</c>

00:27:46.700 --> 00:27:46.710 align:start position:0%
and if we will try to use by some
 

00:27:46.710 --> 00:27:50.450 align:start position:0%
and if we will try to use by some
library<00:27:47.220><c> at</c><00:27:47.999><c> that</c><00:27:48.330><c> time</c><00:27:48.690><c> on</c><00:27:48.989><c> this</c><00:27:49.470><c> class</c><00:27:50.190><c> file</c>

00:27:50.450 --> 00:27:50.460 align:start position:0%
library at that time on this class file
 

00:27:50.460 --> 00:27:52.849 align:start position:0%
library at that time on this class file
we<00:27:50.940><c> will</c><00:27:51.119><c> actually</c><00:27:51.269><c> get</c><00:27:51.659><c> illegal</c><00:27:52.619><c> argument</c>

00:27:52.849 --> 00:27:52.859 align:start position:0%
we will actually get illegal argument
 

00:27:52.859 --> 00:27:55.310 align:start position:0%
we will actually get illegal argument
exception<00:27:53.279><c> and</c><00:27:53.909><c> the</c><00:27:54.269><c> reason</c><00:27:54.600><c> for</c><00:27:54.629><c> this</c><00:27:54.899><c> I</c><00:27:55.080><c> same</c>

00:27:55.310 --> 00:27:55.320 align:start position:0%
exception and the reason for this I same
 

00:27:55.320 --> 00:27:58.519 align:start position:0%
exception and the reason for this I same
library<00:27:55.769><c> hasn't</c><00:27:56.220><c> yet</c><00:27:56.609><c> been</c><00:27:56.970><c> updated</c><00:27:57.179><c> for</c><00:27:57.809><c> Java</c>

00:27:58.519 --> 00:27:58.529 align:start position:0%
library hasn't yet been updated for Java
 

00:27:58.529 --> 00:27:59.029 align:start position:0%
library hasn't yet been updated for Java
9

00:27:59.029 --> 00:27:59.039 align:start position:0%
9
 

00:27:59.039 --> 00:28:05.599 align:start position:0%
9
so<00:28:01.519><c> how</c><00:28:02.519><c> we</c><00:28:02.580><c> can</c><00:28:02.789><c> support</c><00:28:03.590><c> the</c><00:28:04.590><c> Java</c><00:28:05.039><c> 9</c><00:28:05.279><c> before</c>

00:28:05.599 --> 00:28:05.609 align:start position:0%
so how we can support the Java 9 before
 

00:28:05.609 --> 00:28:08.269 align:start position:0%
so how we can support the Java 9 before
an<00:28:06.059><c> actual</c><00:28:06.359><c> release</c><00:28:06.779><c> of</c><00:28:06.989><c> SM</c><00:28:07.470><c> which</c><00:28:07.739><c> probably</c>

00:28:08.269 --> 00:28:08.279 align:start position:0%
an actual release of SM which probably
 

00:28:08.279 --> 00:28:11.599 align:start position:0%
an actual release of SM which probably
will<00:28:08.429><c> happen</c><00:28:08.639><c> after</c><00:28:09.629><c> the</c><00:28:09.840><c> release</c><00:28:10.379><c> of</c><00:28:10.649><c> Java</c><00:28:11.340><c> 9</c>

00:28:11.599 --> 00:28:11.609 align:start position:0%
will happen after the release of Java 9
 

00:28:11.609 --> 00:28:16.879 align:start position:0%
will happen after the release of Java 9
which<00:28:11.850><c> is</c><00:28:11.999><c> a</c><00:28:12.029><c> little</c><00:28:12.359><c> bit</c><00:28:12.539><c> late</c><00:28:13.379><c> for</c><00:28:13.409><c> us</c><00:28:15.889><c> and</c>

00:28:16.879 --> 00:28:16.889 align:start position:0%
which is a little bit late for us and
 

00:28:16.889 --> 00:28:19.519 align:start position:0%
which is a little bit late for us and
yeah<00:28:17.340><c> interesting</c><00:28:17.820><c> fact</c><00:28:18.330><c> fact</c><00:28:18.779><c> if</c><00:28:19.080><c> on</c><00:28:19.379><c> the</c>

00:28:19.519 --> 00:28:19.529 align:start position:0%
yeah interesting fact fact if on the
 

00:28:19.529 --> 00:28:21.950 align:start position:0%
yeah interesting fact fact if on the
same<00:28:19.769><c> class</c><00:28:20.039><c> file</c><00:28:20.340><c> we</c><00:28:20.580><c> will</c><00:28:20.759><c> use</c><00:28:20.940><c> the</c><00:28:21.570><c> standard</c>

00:28:21.950 --> 00:28:21.960 align:start position:0%
same class file we will use the standard
 

00:28:21.960 --> 00:28:25.369 align:start position:0%
same class file we will use the standard
java<00:28:22.950><c> decompiler</c><00:28:23.159><c> even</c><00:28:24.090><c> its</c><00:28:24.330><c> old</c><00:28:24.659><c> version</c>

00:28:25.369 --> 00:28:25.379 align:start position:0%
java decompiler even its old version
 

00:28:25.379 --> 00:28:29.810 align:start position:0%
java decompiler even its old version
like<00:28:25.649><c> version</c><00:28:26.220><c> 1.7</c><00:28:27.139><c> then</c><00:28:28.139><c> actually</c><00:28:28.799><c> it</c><00:28:29.549><c> will</c>

00:28:29.810 --> 00:28:29.820 align:start position:0%
like version 1.7 then actually it will
 

00:28:29.820 --> 00:28:32.090 align:start position:0%
like version 1.7 then actually it will
have<00:28:30.090><c> no</c><00:28:30.359><c> problem</c><00:28:30.840><c> to</c><00:28:30.989><c> decompile</c><00:28:31.529><c> this</c><00:28:31.859><c> class</c>

00:28:32.090 --> 00:28:32.100 align:start position:0%
have no problem to decompile this class
 

00:28:32.100 --> 00:28:35.749 align:start position:0%
have no problem to decompile this class
it<00:28:32.730><c> will</c><00:28:33.059><c> show</c><00:28:33.299><c> ok</c><00:28:33.809><c> this</c><00:28:33.869><c> this</c><00:28:34.859><c> class</c><00:28:35.129><c> file</c><00:28:35.429><c> has</c>

00:28:35.749 --> 00:28:35.759 align:start position:0%
it will show ok this this class file has
 

00:28:35.759 --> 00:28:40.340 align:start position:0%
it will show ok this this class file has
a<00:28:36.210><c> major</c><00:28:36.929><c> version</c><00:28:37.289><c> number</c><00:28:38.149><c> ZZZ</c><00:28:39.200><c> which</c><00:28:40.200><c> I</c>

00:28:40.340 --> 00:28:40.350 align:start position:0%
a major version number ZZZ which I
 

00:28:40.350 --> 00:28:43.239 align:start position:0%
a major version number ZZZ which I
probably<00:28:40.619><c> do</c><00:28:41.070><c> not</c><00:28:41.249><c> very</c><00:28:42.029><c> well</c><00:28:42.269><c> support</c><00:28:42.720><c> but</c>

00:28:43.239 --> 00:28:43.249 align:start position:0%
probably do not very well support but
 

00:28:43.249 --> 00:28:45.710 align:start position:0%
probably do not very well support but
there<00:28:44.249><c> won't</c><00:28:44.460><c> be</c><00:28:44.549><c> any</c><00:28:44.879><c> illegal</c><00:28:45.480><c> argument</c>

00:28:45.710 --> 00:28:45.720 align:start position:0%
there won't be any illegal argument
 

00:28:45.720 --> 00:28:48.349 align:start position:0%
there won't be any illegal argument
exception<00:28:46.049><c> what</c><00:28:46.769><c> this</c><00:28:47.100><c> the</c><00:28:47.279><c> compiler</c><00:28:47.639><c> can</c><00:28:47.999><c> do</c>

00:28:48.349 --> 00:28:48.359 align:start position:0%
exception what this the compiler can do
 

00:28:48.359 --> 00:28:51.109 align:start position:0%
exception what this the compiler can do
compile<00:28:48.720><c> it</c><00:28:48.960><c> to</c><00:28:49.169><c> the</c><00:28:49.619><c> compiled</c><00:28:50.009><c> and</c><00:28:50.249><c> what</c><00:28:50.970><c> it</c>

00:28:51.109 --> 00:28:51.119 align:start position:0%
compile it to the compiled and what it
 

00:28:51.119 --> 00:28:55.609 align:start position:0%
compile it to the compiled and what it
can't<00:28:51.389><c> it</c><00:28:51.809><c> can't</c><00:28:52.909><c> it's</c><00:28:53.909><c> a</c><00:28:53.940><c> pretty</c><00:28:54.119><c> much</c><00:28:54.619><c> the</c>

00:28:55.609 --> 00:28:55.619 align:start position:0%
can't it can't it's a pretty much the
 

00:28:55.619 --> 00:28:57.979 align:start position:0%
can't it can't it's a pretty much the
same<00:28:55.799><c> story</c><00:28:56.249><c> oh</c><00:28:56.869><c> sorry</c>

00:28:57.979 --> 00:28:57.989 align:start position:0%
same story oh sorry
 

00:28:57.989 --> 00:29:02.450 align:start position:0%
same story oh sorry
another<00:28:58.499><c> hidden</c><00:28:59.129><c> gem</c><00:28:59.519><c> of</c><00:28:59.700><c> this</c><00:29:01.070><c> the</c><00:29:02.070><c> compiler</c>

00:29:02.450 --> 00:29:02.460 align:start position:0%
another hidden gem of this the compiler
 

00:29:02.460 --> 00:29:06.409 align:start position:0%
another hidden gem of this the compiler
is<00:29:02.759><c> that</c><00:29:03.169><c> you</c><00:29:04.169><c> can</c><00:29:04.379><c> actually</c><00:29:04.529><c> use</c><00:29:05.009><c> some</c><00:29:05.419><c> hidden</c>

00:29:06.409 --> 00:29:06.419 align:start position:0%
is that you can actually use some hidden
 

00:29:06.419 --> 00:29:11.029 align:start position:0%
is that you can actually use some hidden
flags<00:29:06.869><c> like</c><00:29:07.200><c> -</c><00:29:07.679><c> -</c><00:29:08.570><c> -</c><00:29:09.570><c> cigs</c><00:29:09.840><c> details</c><00:29:10.349><c> and</c><00:29:10.739><c> you</c>

00:29:11.029 --> 00:29:11.039 align:start position:0%
flags like - - - cigs details and you
 

00:29:11.039 --> 00:29:12.560 align:start position:0%
flags like - - - cigs details and you
can<00:29:11.220><c> actually</c>

00:29:12.560 --> 00:29:12.570 align:start position:0%
can actually
 

00:29:12.570 --> 00:29:15.049 align:start position:0%
can actually
see<00:29:13.109><c> not</c><00:29:13.289><c> only</c><00:29:13.349><c> the</c><00:29:13.649><c> white</c><00:29:14.159><c> coats</c><00:29:14.459><c> you</c><00:29:14.849><c> can</c>

00:29:15.049 --> 00:29:15.059 align:start position:0%
see not only the white coats you can
 

00:29:15.059 --> 00:29:17.629 align:start position:0%
see not only the white coats you can
also<00:29:15.419><c> see</c><00:29:15.809><c> the</c><00:29:15.869><c> bytecode</c><00:29:16.169><c> alongside</c><00:29:16.979><c> with</c><00:29:17.549><c> the</c>

00:29:17.629 --> 00:29:17.639 align:start position:0%
also see the bytecode alongside with the
 

00:29:17.639 --> 00:29:22.789 align:start position:0%
also see the bytecode alongside with the
source<00:29:17.879><c> code</c><00:29:18.259><c> in</c><00:29:19.259><c> the</c><00:29:19.440><c> same</c><00:29:19.649><c> output</c><00:29:20.479><c> and</c><00:29:21.799><c> so</c>

00:29:22.789 --> 00:29:22.799 align:start position:0%
source code in the same output and so
 

00:29:22.799 --> 00:29:25.399 align:start position:0%
source code in the same output and so
coming<00:29:23.279><c> back</c><00:29:23.429><c> to</c><00:29:23.639><c> item</c><00:29:24.179><c> how</c><00:29:24.509><c> did</c><00:29:24.839><c> we</c><00:29:24.989><c> solve</c><00:29:25.169><c> it</c>

00:29:25.399 --> 00:29:25.409 align:start position:0%
coming back to item how did we solve it
 

00:29:25.409 --> 00:29:27.949 align:start position:0%
coming back to item how did we solve it
this<00:29:25.559><c> problem</c><00:29:26.099><c> of</c><00:29:26.249><c> supporting</c><00:29:26.789><c> Java</c><00:29:27.419><c> 9</c><00:29:27.690><c> with</c>

00:29:27.949 --> 00:29:27.959 align:start position:0%
this problem of supporting Java 9 with
 

00:29:27.959 --> 00:29:31.089 align:start position:0%
this problem of supporting Java 9 with
altered<00:29:28.440><c> version</c><00:29:28.709><c> of</c><00:29:28.739><c> item</c>

00:29:31.089 --> 00:29:31.099 align:start position:0%
altered version of item
 

00:29:31.099 --> 00:29:35.439 align:start position:0%
altered version of item
since<00:29:32.419><c> Java</c><00:29:33.419><c> 9</c><00:29:33.779><c> in</c><00:29:34.169><c> terms</c><00:29:34.559><c> of</c><00:29:34.769><c> byte</c><00:29:35.009><c> codes</c>

00:29:35.439 --> 00:29:35.449 align:start position:0%
since Java 9 in terms of byte codes
 

00:29:35.449 --> 00:29:39.349 align:start position:0%
since Java 9 in terms of byte codes
brings<00:29:36.449><c> only</c><00:29:36.779><c> model</c><00:29:37.349><c> info</c><00:29:37.879><c> which</c><00:29:38.879><c> doesn't</c>

00:29:39.349 --> 00:29:39.359 align:start position:0%
brings only model info which doesn't
 

00:29:39.359 --> 00:29:41.869 align:start position:0%
brings only model info which doesn't
contain<00:29:39.719><c> any</c><00:29:40.049><c> methods</c><00:29:40.559><c> that</c><00:29:41.009><c> we</c><00:29:41.759><c> are</c>

00:29:41.869 --> 00:29:41.879 align:start position:0%
contain any methods that we are
 

00:29:41.879 --> 00:29:44.539 align:start position:0%
contain any methods that we are
interested<00:29:42.599><c> in</c><00:29:42.779><c> because</c><00:29:43.559><c> it</c><00:29:44.099><c> doesn't</c><00:29:44.429><c> contain</c>

00:29:44.539 --> 00:29:44.549 align:start position:0%
interested in because it doesn't contain
 

00:29:44.549 --> 00:29:47.719 align:start position:0%
interested in because it doesn't contain
any<00:29:45.029><c> methods</c><00:29:45.419><c> we</c><00:29:46.079><c> can</c><00:29:46.109><c> pretend</c><00:29:46.799><c> that</c><00:29:46.979><c> each</c>

00:29:47.719 --> 00:29:47.729 align:start position:0%
any methods we can pretend that each
 

00:29:47.729 --> 00:29:50.659 align:start position:0%
any methods we can pretend that each
time<00:29:48.089><c> when</c><00:29:48.359><c> we</c><00:29:48.539><c> see</c><00:29:48.779><c> Java</c><00:29:49.229><c> 9</c><00:29:49.499><c> bytecode</c><00:29:50.069><c> we</c>

00:29:50.659 --> 00:29:50.669 align:start position:0%
time when we see Java 9 bytecode we
 

00:29:50.669 --> 00:29:53.719 align:start position:0%
time when we see Java 9 bytecode we
actually<00:29:51.119><c> see</c><00:29:51.359><c> a</c><00:29:51.539><c> Java</c><00:29:51.899><c> 8</c><00:29:52.169><c> byte</c><00:29:52.469><c> code</c><00:29:52.739><c> so</c><00:29:53.429><c> I</c>

00:29:53.719 --> 00:29:53.729 align:start position:0%
actually see a Java 8 byte code so I
 

00:29:53.729 --> 00:29:55.549 align:start position:0%
actually see a Java 8 byte code so I
assume<00:29:54.089><c> we'll</c><00:29:54.329><c> be</c><00:29:54.509><c> able</c><00:29:54.719><c> to</c><00:29:54.959><c> read</c><00:29:55.349><c> this</c>

00:29:55.549 --> 00:29:55.559 align:start position:0%
assume we'll be able to read this
 

00:29:55.559 --> 00:29:59.149 align:start position:0%
assume we'll be able to read this
bytecode<00:29:56.119><c> we</c><00:29:57.119><c> will</c><00:29:57.269><c> transform</c><00:29:57.869><c> it</c><00:29:58.109><c> as</c><00:29:58.769><c> we</c><00:29:58.979><c> want</c>

00:29:59.149 --> 00:29:59.159 align:start position:0%
bytecode we will transform it as we want
 

00:29:59.159 --> 00:30:02.989 align:start position:0%
bytecode we will transform it as we want
and<00:29:59.429><c> then</c><00:30:00.329><c> in</c><00:30:00.599><c> order</c><00:30:00.749><c> to</c><00:30:01.049><c> to</c><00:30:01.679><c> hide</c><00:30:01.979><c> this</c><00:30:02.399><c> this</c>

00:30:02.989 --> 00:30:02.999 align:start position:0%
and then in order to to hide this this
 

00:30:02.999 --> 00:30:07.009 align:start position:0%
and then in order to to hide this this
little<00:30:03.359><c> trick</c><00:30:03.629><c> we</c><00:30:04.559><c> will</c><00:30:04.589><c> upgrade</c><00:30:05.509><c> the</c><00:30:06.509><c> class</c>

00:30:07.009 --> 00:30:07.019 align:start position:0%
little trick we will upgrade the class
 

00:30:07.019 --> 00:30:09.619 align:start position:0%
little trick we will upgrade the class
file<00:30:07.259><c> version</c><00:30:07.769><c> back</c><00:30:08.009><c> so</c><00:30:08.609><c> everybody</c><00:30:09.359><c> outside</c>

00:30:09.619 --> 00:30:09.629 align:start position:0%
file version back so everybody outside
 

00:30:09.629 --> 00:30:13.639 align:start position:0%
file version back so everybody outside
will<00:30:10.259><c> see</c><00:30:10.499><c> ok</c><00:30:10.769><c> it</c><00:30:11.279><c> was</c><00:30:11.639><c> Java</c><00:30:11.999><c> 9</c><00:30:12.299><c> it</c><00:30:12.779><c> is</c><00:30:12.869><c> giovanna</c>

00:30:13.639 --> 00:30:13.649 align:start position:0%
will see ok it was Java 9 it is giovanna
 

00:30:13.649 --> 00:30:17.089 align:start position:0%
will see ok it was Java 9 it is giovanna
but<00:30:14.069><c> internally</c><00:30:14.969><c> we</c><00:30:15.229><c> we</c><00:30:16.229><c> we're</c><00:30:16.649><c> dealing</c><00:30:17.069><c> with</c>

00:30:17.089 --> 00:30:17.099 align:start position:0%
but internally we we we're dealing with
 

00:30:17.099 --> 00:30:23.719 align:start position:0%
but internally we we we're dealing with
it<00:30:17.459><c> as</c><00:30:17.699><c> Java</c><00:30:18.149><c> 8</c><00:30:20.329><c> that</c><00:30:21.329><c> was</c><00:30:21.509><c> the</c><00:30:21.659><c> trick</c><00:30:21.929><c> and</c><00:30:22.729><c> at</c>

00:30:23.719 --> 00:30:23.729 align:start position:0%
it as Java 8 that was the trick and at
 

00:30:23.729 --> 00:30:25.339 align:start position:0%
it as Java 8 that was the trick and at
this<00:30:23.909><c> moment</c><00:30:24.119><c> of</c><00:30:24.419><c> time</c><00:30:24.479><c> please</c><00:30:24.989><c> breathe</c><00:30:25.319><c> a</c>

00:30:25.339 --> 00:30:25.349 align:start position:0%
this moment of time please breathe a
 

00:30:25.349 --> 00:30:27.559 align:start position:0%
this moment of time please breathe a
little<00:30:25.589><c> bit</c><00:30:25.769><c> this</c><00:30:26.339><c> was</c><00:30:26.609><c> just</c><00:30:27.179><c> a</c><00:30:27.299><c> little</c>

00:30:27.559 --> 00:30:27.569 align:start position:0%
little bit this was just a little
 

00:30:27.569 --> 00:30:32.329 align:start position:0%
little bit this was just a little
warm-up<00:30:27.979><c> I</c><00:30:28.979><c> hope</c><00:30:29.579><c> now</c><00:30:30.149><c> your</c><00:30:30.419><c> brain</c><00:30:30.659><c> is</c><00:30:31.190><c> warm</c><00:30:32.190><c> it</c>

00:30:32.329 --> 00:30:32.339 align:start position:0%
warm-up I hope now your brain is warm it
 

00:30:32.339 --> 00:30:34.339 align:start position:0%
warm-up I hope now your brain is warm it
enough<00:30:32.609><c> we</c><00:30:32.819><c> have</c><00:30:33.029><c> not</c><00:30:33.269><c> that</c><00:30:33.419><c> much</c><00:30:33.629><c> time</c><00:30:33.869><c> so</c><00:30:34.169><c> we</c>

00:30:34.339 --> 00:30:34.349 align:start position:0%
enough we have not that much time so we
 

00:30:34.349 --> 00:30:38.329 align:start position:0%
enough we have not that much time so we
will<00:30:34.499><c> try</c><00:30:35.279><c> to</c><00:30:35.309><c> go</c><00:30:35.609><c> even</c><00:30:36.029><c> quicker</c><00:30:36.269><c> and</c><00:30:36.649><c> a</c><00:30:37.649><c> little</c>

00:30:38.329 --> 00:30:38.339 align:start position:0%
will try to go even quicker and a little
 

00:30:38.339 --> 00:30:42.709 align:start position:0%
will try to go even quicker and a little
bit<00:30:38.699><c> of</c><00:30:38.849><c> hardcore</c><00:30:39.389><c> stuff</c><00:30:40.399><c> and</c><00:30:41.399><c> please</c><00:30:42.389><c> try</c><00:30:42.690><c> to</c>

00:30:42.709 --> 00:30:42.719 align:start position:0%
bit of hardcore stuff and please try to
 

00:30:42.719 --> 00:30:45.439 align:start position:0%
bit of hardcore stuff and please try to
follow<00:30:43.079><c> me</c><00:30:43.379><c> let's</c><00:30:44.099><c> say</c><00:30:44.309><c> I</c><00:30:44.489><c> have</c><00:30:44.849><c> such</c><00:30:45.179><c> class</c>

00:30:45.439 --> 00:30:45.449 align:start position:0%
follow me let's say I have such class
 

00:30:45.449 --> 00:30:47.649 align:start position:0%
follow me let's say I have such class
this<00:30:45.809><c> class</c><00:30:45.989><c> have</c><00:30:46.349><c> a</c><00:30:46.379><c> static</c><00:30:46.859><c> initializer</c>

00:30:47.649 --> 00:30:47.659 align:start position:0%
this class have a static initializer
 

00:30:47.659 --> 00:30:51.459 align:start position:0%
this class have a static initializer
init<00:30:48.659><c> in</c><00:30:48.929><c> this</c><00:30:49.199><c> static</c><00:30:49.529><c> initializer</c><00:30:50.069><c> we</c><00:30:50.399><c> call</c>

00:30:51.459 --> 00:30:51.469 align:start position:0%
init in this static initializer we call
 

00:30:51.469 --> 00:30:53.930 align:start position:0%
init in this static initializer we call
construction<00:30:52.469><c> of</c><00:30:52.619><c> some</c><00:30:52.949><c> other</c><00:30:53.190><c> object</c><00:30:53.429><c> of</c>

00:30:53.930 --> 00:30:53.940 align:start position:0%
construction of some other object of
 

00:30:53.940 --> 00:30:56.769 align:start position:0%
construction of some other object of
some<00:30:54.119><c> class</c><00:30:54.359><c> and</c><00:30:54.539><c> we</c><00:30:54.779><c> call</c><00:30:54.989><c> a</c><00:30:55.619><c> method</c><00:30:56.039><c> on</c><00:30:56.309><c> it</c>

00:30:56.769 --> 00:30:56.779 align:start position:0%
some class and we call a method on it
 

00:30:56.779 --> 00:30:59.899 align:start position:0%
some class and we call a method on it
some<00:30:57.779><c> other</c><00:30:57.959><c> class</c><00:30:58.259><c> is</c><00:30:58.469><c> actually</c><00:30:59.129><c> a</c><00:30:59.159><c> child</c><00:30:59.609><c> of</c>

00:30:59.899 --> 00:30:59.909 align:start position:0%
some other class is actually a child of
 

00:30:59.909 --> 00:31:03.469 align:start position:0%
some other class is actually a child of
this<00:31:00.869><c> base</c><00:31:01.139><c> class</c><00:31:01.440><c> and</c><00:31:01.829><c> it</c><00:31:02.459><c> has</c><00:31:02.699><c> a</c><00:31:02.729><c> method</c><00:31:03.179><c> in</c>

00:31:03.469 --> 00:31:03.479 align:start position:0%
this base class and it has a method in
 

00:31:03.479 --> 00:31:06.079 align:start position:0%
this base class and it has a method in
in<00:31:03.779><c> this</c><00:31:04.049><c> method</c><00:31:04.259><c> we</c><00:31:04.559><c> do</c><00:31:04.679><c> an</c><00:31:04.769><c> assertion</c><00:31:05.099><c> is</c><00:31:05.729><c> one</c>

00:31:06.079 --> 00:31:06.089 align:start position:0%
in this method we do an assertion is one
 

00:31:06.089 --> 00:31:10.969 align:start position:0%
in this method we do an assertion is one
equal<00:31:06.509><c> to</c><00:31:06.659><c> 2</c><00:31:07.159><c> and</c><00:31:08.159><c> and</c><00:31:09.109><c> then</c><00:31:10.109><c> we</c><00:31:10.319><c> rerun</c><00:31:10.739><c> all</c>

00:31:10.969 --> 00:31:10.979 align:start position:0%
equal to 2 and and then we rerun all
 

00:31:10.979 --> 00:31:13.759 align:start position:0%
equal to 2 and and then we rerun all
this<00:31:11.159><c> so</c><00:31:11.549><c> a</c><00:31:11.579><c> question</c><00:31:12.029><c> for</c><00:31:12.449><c> you</c><00:31:12.599><c> what</c><00:31:13.379><c> is</c><00:31:13.559><c> going</c>

00:31:13.759 --> 00:31:13.769 align:start position:0%
this so a question for you what is going
 

00:31:13.769 --> 00:31:16.669 align:start position:0%
this so a question for you what is going
to<00:31:13.859><c> happen</c><00:31:14.159><c> if</c><00:31:14.339><c> if</c><00:31:15.179><c> I</c><00:31:15.419><c> execute</c><00:31:15.690><c> this</c><00:31:16.049><c> and</c><00:31:16.289><c> I</c><00:31:16.440><c> say</c>

00:31:16.669 --> 00:31:16.679 align:start position:0%
to happen if if I execute this and I say
 

00:31:16.679 --> 00:31:22.670 align:start position:0%
to happen if if I execute this and I say
ok<00:31:16.919><c> assertions</c><00:31:17.639><c> a</c><00:31:17.819><c> neighborhood</c>

00:31:22.670 --> 00:31:22.680 align:start position:0%
 
 

00:31:22.680 --> 00:31:25.190 align:start position:0%
 
come<00:31:23.310><c> on</c><00:31:23.460><c> your</c><00:31:23.700><c> brain</c><00:31:23.970><c> should</c><00:31:24.270><c> be</c><00:31:24.450><c> warmed</c><00:31:25.080><c> up</c>

00:31:25.190 --> 00:31:25.200 align:start position:0%
come on your brain should be warmed up
 

00:31:25.200 --> 00:31:27.260 align:start position:0%
come on your brain should be warmed up
already<00:31:25.350><c> assertions</c><00:31:26.280><c> enabled</c><00:31:26.790><c> we</c><00:31:26.940><c> have</c><00:31:27.120><c> an</c>

00:31:27.260 --> 00:31:27.270 align:start position:0%
already assertions enabled we have an
 

00:31:27.270 --> 00:31:29.390 align:start position:0%
already assertions enabled we have an
assertion<00:31:27.540><c> one</c><00:31:27.990><c> equal</c><00:31:28.320><c> to</c><00:31:28.500><c> two</c><00:31:28.710><c> it's</c><00:31:28.950><c> it's</c>

00:31:29.390 --> 00:31:29.400 align:start position:0%
assertion one equal to two it's it's
 

00:31:29.400 --> 00:31:31.790 align:start position:0%
assertion one equal to two it's it's
obviously<00:31:29.850><c> wrong</c><00:31:30.320><c> they're</c><00:31:31.320><c> going</c><00:31:31.470><c> to</c><00:31:31.560><c> be</c><00:31:31.710><c> an</c>

00:31:31.790 --> 00:31:31.800 align:start position:0%
obviously wrong they're going to be an
 

00:31:31.800 --> 00:31:34.580 align:start position:0%
obviously wrong they're going to be an
exception<00:31:33.020><c> it's</c><00:31:34.020><c> easy</c>

00:31:34.580 --> 00:31:34.590 align:start position:0%
exception it's easy
 

00:31:34.590 --> 00:31:42.350 align:start position:0%
exception it's easy
what<00:31:35.100><c> about</c><00:31:35.270><c> assertions</c><00:31:36.270><c> disabled</c><00:31:41.120><c> it</c><00:31:42.120><c> will</c>

00:31:42.350 --> 00:31:42.360 align:start position:0%
what about assertions disabled it will
 

00:31:42.360 --> 00:31:44.480 align:start position:0%
what about assertions disabled it will
just<00:31:42.600><c> run</c><00:31:42.810><c> who</c><00:31:43.470><c> thinks</c><00:31:43.740><c> that</c><00:31:43.770><c> it</c><00:31:44.070><c> will</c><00:31:44.250><c> just</c>

00:31:44.480 --> 00:31:44.490 align:start position:0%
just run who thinks that it will just
 

00:31:44.490 --> 00:31:49.010 align:start position:0%
just run who thinks that it will just
run<00:31:47.030><c> yeah</c><00:31:48.030><c> it</c><00:31:48.090><c> will</c><00:31:48.270><c> just</c><00:31:48.540><c> run</c><00:31:48.780><c> but</c>

00:31:49.010 --> 00:31:49.020 align:start position:0%
run yeah it will just run but
 

00:31:49.020 --> 00:31:51.280 align:start position:0%
run yeah it will just run but
unfortunately<00:31:49.680><c> it</c><00:31:49.830><c> will</c><00:31:49.980><c> throw</c><00:31:50.220><c> exception</c>

00:31:51.280 --> 00:31:51.290 align:start position:0%
unfortunately it will throw exception
 

00:31:51.290 --> 00:31:55.790 align:start position:0%
unfortunately it will throw exception
and<00:31:53.150><c> the</c><00:31:54.150><c> reason</c><00:31:54.480><c> for</c><00:31:54.510><c> this</c><00:31:54.900><c> if</c><00:31:55.260><c> we</c><00:31:55.530><c> again</c>

00:31:55.790 --> 00:31:55.800 align:start position:0%
and the reason for this if we again
 

00:31:55.800 --> 00:31:59.060 align:start position:0%
and the reason for this if we again
recall<00:31:56.280><c> how</c><00:31:56.540><c> assertions</c><00:31:57.540><c> enabled</c><00:31:58.140><c> there</c><00:31:58.920><c> is</c><00:31:59.040><c> a</c>

00:31:59.060 --> 00:31:59.070 align:start position:0%
recall how assertions enabled there is a
 

00:31:59.070 --> 00:32:01.340 align:start position:0%
recall how assertions enabled there is a
static<00:31:59.550><c> final</c><00:31:59.760><c> field</c><00:32:00.120><c> assertions</c><00:32:00.720><c> disabled</c>

00:32:01.340 --> 00:32:01.350 align:start position:0%
static final field assertions disabled
 

00:32:01.350 --> 00:32:03.980 align:start position:0%
static final field assertions disabled
it<00:32:02.010><c> is</c><00:32:02.280><c> initialized</c><00:32:03.090><c> in</c><00:32:03.540><c> a</c><00:32:03.660><c> static</c>

00:32:03.980 --> 00:32:03.990 align:start position:0%
it is initialized in a static
 

00:32:03.990 --> 00:32:08.690 align:start position:0%
it is initialized in a static
initializer<00:32:04.670><c> and</c><00:32:06.950><c> if</c><00:32:07.950><c> you</c><00:32:08.160><c> follow</c><00:32:08.430><c> the</c>

00:32:08.690 --> 00:32:08.700 align:start position:0%
initializer and if you follow the
 

00:32:08.700 --> 00:32:13.970 align:start position:0%
initializer and if you follow the
sequence<00:32:08.910><c> of</c><00:32:10.010><c> of</c><00:32:11.630><c> of</c><00:32:12.630><c> execution</c><00:32:13.350><c> what</c><00:32:13.560><c> what</c><00:32:13.830><c> is</c>

00:32:13.970 --> 00:32:13.980 align:start position:0%
sequence of of of execution what what is
 

00:32:13.980 --> 00:32:16.670 align:start position:0%
sequence of of of execution what what is
going<00:32:14.040><c> to</c><00:32:14.280><c> happen</c><00:32:14.670><c> in</c><00:32:15.540><c> order</c><00:32:15.750><c> to</c><00:32:16.050><c> insulite</c>

00:32:16.670 --> 00:32:16.680 align:start position:0%
going to happen in order to insulite
 

00:32:16.680 --> 00:32:20.210 align:start position:0%
going to happen in order to insulite
child<00:32:17.100><c> we</c><00:32:18.090><c> need</c><00:32:18.240><c> to</c><00:32:18.540><c> first</c><00:32:19.230><c> insulite</c><00:32:19.950><c> base</c>

00:32:20.210 --> 00:32:20.220 align:start position:0%
child we need to first insulite base
 

00:32:20.220 --> 00:32:24.140 align:start position:0%
child we need to first insulite base
during<00:32:20.880><c> consolidation</c><00:32:21.420><c> of</c><00:32:22.140><c> base</c><00:32:22.550><c> we</c><00:32:23.550><c> go</c><00:32:24.090><c> to</c>

00:32:24.140 --> 00:32:24.150 align:start position:0%
during consolidation of base we go to
 

00:32:24.150 --> 00:32:26.840 align:start position:0%
during consolidation of base we go to
child<00:32:24.630><c> and</c><00:32:24.900><c> cause</c><00:32:25.260><c> a</c><00:32:25.290><c> method</c><00:32:25.740><c> so</c><00:32:26.280><c> actually</c>

00:32:26.840 --> 00:32:26.850 align:start position:0%
child and cause a method so actually
 

00:32:26.850 --> 00:32:28.700 align:start position:0%
child and cause a method so actually
this<00:32:27.000><c> method</c><00:32:27.330><c> is</c><00:32:27.540><c> going</c><00:32:27.720><c> to</c><00:32:27.870><c> be</c><00:32:27.960><c> called</c><00:32:28.290><c> before</c>

00:32:28.700 --> 00:32:28.710 align:start position:0%
this method is going to be called before
 

00:32:28.710 --> 00:32:32.050 align:start position:0%
this method is going to be called before
the<00:32:29.070><c> initialization</c><00:32:29.910><c> of</c><00:32:30.540><c> a</c><00:32:30.720><c> child</c><00:32:31.020><c> and</c>

00:32:32.050 --> 00:32:32.060 align:start position:0%
the initialization of a child and
 

00:32:32.060 --> 00:32:34.580 align:start position:0%
the initialization of a child and
science<00:32:33.060><c> it's</c><00:32:33.240><c> called</c><00:32:33.510><c> before</c><00:32:33.750><c> installation</c>

00:32:34.580 --> 00:32:34.590 align:start position:0%
science it's called before installation
 

00:32:34.590 --> 00:32:36.710 align:start position:0%
science it's called before installation
of<00:32:34.710><c> a</c><00:32:34.800><c> child</c><00:32:35.070><c> this</c><00:32:35.790><c> field</c><00:32:36.120><c> has</c><00:32:36.300><c> a</c><00:32:36.330><c> default</c>

00:32:36.710 --> 00:32:36.720 align:start position:0%
of a child this field has a default
 

00:32:36.720 --> 00:32:39.320 align:start position:0%
of a child this field has a default
value<00:32:37.080><c> and</c><00:32:37.230><c> the</c><00:32:37.740><c> default</c><00:32:38.010><c> value</c><00:32:38.130><c> in</c><00:32:38.820><c> java</c><00:32:39.120><c> for</c>

00:32:39.320 --> 00:32:39.330 align:start position:0%
value and the default value in java for
 

00:32:39.330 --> 00:32:42.140 align:start position:0%
value and the default value in java for
boolean<00:32:39.660><c> is</c><00:32:39.930><c> false</c><00:32:40.260><c> so</c><00:32:41.220><c> assertion</c><00:32:41.760><c> disabled</c>

00:32:42.140 --> 00:32:42.150 align:start position:0%
boolean is false so assertion disabled
 

00:32:42.150 --> 00:32:44.960 align:start position:0%
boolean is false so assertion disabled
but<00:32:42.270><c> false</c><00:32:42.540><c> is</c><00:32:43.320><c> the</c><00:32:44.040><c> state</c><00:32:44.310><c> when</c><00:32:44.580><c> this</c><00:32:44.760><c> method</c>

00:32:44.960 --> 00:32:44.970 align:start position:0%
but false is the state when this method
 

00:32:44.970 --> 00:32:47.060 align:start position:0%
but false is the state when this method
will<00:32:45.270><c> be</c><00:32:45.300><c> called</c><00:32:45.420><c> and</c><00:32:45.990><c> you're</c><00:32:46.710><c> gonna</c><00:32:46.860><c> get</c>

00:32:47.060 --> 00:32:47.070 align:start position:0%
will be called and you're gonna get
 

00:32:47.070 --> 00:32:50.090 align:start position:0%
will be called and you're gonna get
assertion<00:32:47.670><c> here</c><00:32:47.910><c> why</c><00:32:48.720><c> this</c><00:32:48.780><c> and</c><00:32:49.170><c> such</c><00:32:50.070><c> a</c>

00:32:50.090 --> 00:32:50.100 align:start position:0%
assertion here why this and such a
 

00:32:50.100 --> 00:32:53.450 align:start position:0%
assertion here why this and such a
situation<00:32:50.700><c> we</c><00:32:50.850><c> call</c><00:32:51.000><c> it</c><00:32:51.180><c> a</c><00:32:51.390><c> bad</c><00:32:51.660><c> cycle</c><00:32:52.460><c> why</c>

00:32:53.450 --> 00:32:53.460 align:start position:0%
situation we call it a bad cycle why
 

00:32:53.460 --> 00:32:56.930 align:start position:0%
situation we call it a bad cycle why
this<00:32:53.520><c> is</c><00:32:53.880><c> important</c><00:32:54.420><c> because</c><00:32:55.370><c> we</c><00:32:56.370><c> base</c><00:32:56.580><c> it</c><00:32:56.610><c> our</c>

00:32:56.930 --> 00:32:56.940 align:start position:0%
this is important because we base it our
 

00:32:56.940 --> 00:32:58.880 align:start position:0%
this is important because we base it our
implementation<00:32:57.690><c> on</c><00:32:57.840><c> the</c><00:32:57.900><c> same</c><00:32:58.290><c> trick</c><00:32:58.590><c> as</c><00:32:58.710><c> a</c>

00:32:58.880 --> 00:32:58.890 align:start position:0%
implementation on the same trick as a
 

00:32:58.890 --> 00:33:02.420 align:start position:0%
implementation on the same trick as a
surgeon's<00:32:59.400><c> and</c><00:32:59.670><c> so</c><00:33:00.200><c> what</c><00:33:01.200><c> happens</c><00:33:01.650><c> with</c><00:33:01.980><c> in</c>

00:33:02.420 --> 00:33:02.430 align:start position:0%
surgeon's and so what happens with in
 

00:33:02.430 --> 00:33:04.640 align:start position:0%
surgeon's and so what happens with in
case<00:33:02.670><c> of</c><00:33:02.910><c> bad</c><00:33:03.090><c> cycles</c><00:33:03.510><c> for</c><00:33:03.690><c> jacoco</c><00:33:04.020><c> we</c><00:33:04.560><c> are</c>

00:33:04.640 --> 00:33:04.650 align:start position:0%
case of bad cycles for jacoco we are
 

00:33:04.650 --> 00:33:07.850 align:start position:0%
case of bad cycles for jacoco we are
gonna<00:33:04.830><c> get</c><00:33:05.040><c> exactly</c><00:33:05.940><c> the</c><00:33:06.480><c> same</c><00:33:06.690><c> problem</c><00:33:07.200><c> our</c>

00:33:07.850 --> 00:33:07.860 align:start position:0%
gonna get exactly the same problem our
 

00:33:07.860 --> 00:33:10.330 align:start position:0%
gonna get exactly the same problem our
field<00:33:08.370><c> is</c><00:33:09.210><c> going</c><00:33:09.510><c> to</c><00:33:09.600><c> have</c><00:33:09.750><c> a</c><00:33:09.900><c> default</c><00:33:10.170><c> value</c>

00:33:10.330 --> 00:33:10.340 align:start position:0%
field is going to have a default value
 

00:33:10.340 --> 00:33:13.340 align:start position:0%
field is going to have a default value
default<00:33:11.340><c> value</c><00:33:11.730><c> for</c><00:33:11.820><c> bullion</c><00:33:12.390><c> arrays</c><00:33:12.750><c> is</c><00:33:13.020><c> now</c>

00:33:13.340 --> 00:33:13.350 align:start position:0%
default value for bullion arrays is now
 

00:33:13.350 --> 00:33:14.900 align:start position:0%
default value for bullion arrays is now
so<00:33:13.710><c> we're</c><00:33:13.950><c> going</c><00:33:14.100><c> to</c><00:33:14.160><c> get</c><00:33:14.310><c> a</c><00:33:14.340><c> null</c><00:33:14.580><c> pointer</c>

00:33:14.900 --> 00:33:14.910 align:start position:0%
so we're going to get a null pointer
 

00:33:14.910 --> 00:33:18.560 align:start position:0%
so we're going to get a null pointer
exception<00:33:15.800><c> how</c><00:33:16.800><c> do</c><00:33:16.860><c> we</c><00:33:17.160><c> solve</c><00:33:17.400><c> this</c><00:33:17.700><c> okay</c><00:33:18.060><c> we</c>

00:33:18.560 --> 00:33:18.570 align:start position:0%
exception how do we solve this okay we
 

00:33:18.570 --> 00:33:19.760 align:start position:0%
exception how do we solve this okay we
solve<00:33:18.810><c> this</c><00:33:19.050><c> we</c><00:33:19.110><c> introduce</c><00:33:19.650><c> another</c>

00:33:19.760 --> 00:33:19.770 align:start position:0%
solve this we introduce another
 

00:33:19.770 --> 00:33:22.370 align:start position:0%
solve this we introduce another
synthetic<00:33:20.220><c> method</c><00:33:20.820><c> which</c><00:33:21.540><c> we</c><00:33:21.690><c> call</c><00:33:21.930><c> in</c><00:33:22.230><c> its</c>

00:33:22.370 --> 00:33:22.380 align:start position:0%
synthetic method which we call in its
 

00:33:22.380 --> 00:33:25.700 align:start position:0%
synthetic method which we call in its
allies<00:33:22.680><c> ation</c><00:33:23.690><c> instead</c><00:33:24.690><c> of</c><00:33:24.870><c> accessing</c><00:33:25.170><c> field</c>

00:33:25.700 --> 00:33:25.710 align:start position:0%
allies ation instead of accessing field
 

00:33:25.710 --> 00:33:27.680 align:start position:0%
allies ation instead of accessing field
directly<00:33:26.160><c> we</c><00:33:26.370><c> always</c><00:33:26.730><c> go</c><00:33:26.970><c> to</c><00:33:27.030><c> this</c><00:33:27.300><c> method</c>

00:33:27.680 --> 00:33:27.690 align:start position:0%
directly we always go to this method
 

00:33:27.690 --> 00:33:30.470 align:start position:0%
directly we always go to this method
this<00:33:27.840><c> method</c><00:33:27.900><c> checks</c><00:33:28.890><c> if</c><00:33:29.790><c> there</c><00:33:30.120><c> is</c><00:33:30.270><c> some</c>

00:33:30.470 --> 00:33:30.480 align:start position:0%
this method checks if there is some
 

00:33:30.480 --> 00:33:33.050 align:start position:0%
this method checks if there is some
value<00:33:30.870><c> then</c><00:33:31.650><c> just</c><00:33:32.190><c> returns</c><00:33:32.550><c> this</c><00:33:32.670><c> value</c><00:33:32.970><c> if</c>

00:33:33.050 --> 00:33:33.060 align:start position:0%
value then just returns this value if
 

00:33:33.060 --> 00:33:35.330 align:start position:0%
value then just returns this value if
there<00:33:33.240><c> is</c><00:33:33.360><c> no</c><00:33:33.510><c> such</c><00:33:33.720><c> value</c><00:33:33.750><c> that's</c><00:33:34.320><c> in</c><00:33:34.860><c> its</c>

00:33:35.330 --> 00:33:35.340 align:start position:0%
there is no such value that's in its
 

00:33:35.340 --> 00:33:36.290 align:start position:0%
there is no such value that's in its
allies<00:33:35.700><c> and</c><00:33:35.970><c> these</c>

00:33:36.290 --> 00:33:36.300 align:start position:0%
allies and these
 

00:33:36.300 --> 00:33:38.680 align:start position:0%
allies and these
Issus<00:33:36.840><c> is</c><00:33:36.870><c> a</c><00:33:37.080><c> good</c><00:33:37.290><c> order</c><00:33:37.680><c> of</c><00:33:37.890><c> initialization</c>

00:33:38.680 --> 00:33:38.690 align:start position:0%
Issus is a good order of initialization
 

00:33:38.690 --> 00:33:46.310 align:start position:0%
Issus is a good order of initialization
oh<00:33:43.310><c> yeah</c><00:33:44.340><c> any</c><00:33:45.120><c> problem</c><00:33:45.660><c> with</c><00:33:45.690><c> with</c><00:33:46.140><c> this</c>

00:33:46.310 --> 00:33:46.320 align:start position:0%
oh yeah any problem with with this
 

00:33:46.320 --> 00:33:47.440 align:start position:0%
oh yeah any problem with with this
solution

00:33:47.440 --> 00:33:47.450 align:start position:0%
solution
 

00:33:47.450 --> 00:33:54.910 align:start position:0%
solution
anyone<00:33:48.890><c> is</c><00:33:49.890><c> it</c><00:33:50.100><c> okay</c><00:33:50.400><c> to</c><00:33:50.460><c> do</c><00:33:50.700><c> like</c><00:33:50.880><c> this</c><00:33:52.670><c> what</c>

00:33:54.910 --> 00:33:54.920 align:start position:0%
anyone is it okay to do like this what
 

00:33:54.920 --> 00:33:58.010 align:start position:0%
anyone is it okay to do like this what
multi<00:33:55.920><c> trading</c><00:33:56.280><c> on</c><00:33:57.000><c> the</c><00:33:57.270><c> site</c><00:33:57.510><c> of</c><00:33:57.750><c> Jaco</c>

00:33:58.010 --> 00:33:58.020 align:start position:0%
multi trading on the site of Jaco
 

00:33:58.020 --> 00:34:00.380 align:start position:0%
multi trading on the site of Jaco
current<00:33:58.350><c> I'm</c><00:33:58.530><c> basically</c><00:33:59.280><c> in</c><00:33:59.820><c> this</c><00:34:00.090><c> place</c>

00:34:00.380 --> 00:34:00.390 align:start position:0%
current I'm basically in this place
 

00:34:00.390 --> 00:34:02.210 align:start position:0%
current I'm basically in this place
where<00:34:00.720><c> we</c><00:34:00.930><c> call</c><00:34:01.140><c> in</c><00:34:01.290><c> to</c><00:34:01.440><c> jackar</c><00:34:01.740><c> on</c><00:34:01.890><c> time</c><00:34:02.070><c> to</c>

00:34:02.210 --> 00:34:02.220 align:start position:0%
where we call in to jackar on time to
 

00:34:02.220 --> 00:34:04.220 align:start position:0%
where we call in to jackar on time to
get<00:34:02.340><c> an</c><00:34:02.520><c> array</c><00:34:02.760><c> we</c><00:34:03.210><c> have</c><00:34:03.360><c> a</c><00:34:03.390><c> synchronization</c>

00:34:04.220 --> 00:34:04.230 align:start position:0%
get an array we have a synchronization
 

00:34:04.230 --> 00:34:07.370 align:start position:0%
get an array we have a synchronization
so<00:34:04.950><c> if</c><00:34:05.430><c> -</c><00:34:05.760><c> we'll</c><00:34:05.970><c> try</c><00:34:06.180><c> to</c><00:34:06.300><c> install</c><00:34:06.990><c> ice</c><00:34:07.170><c> at</c><00:34:07.320><c> the</c>

00:34:07.370 --> 00:34:07.380 align:start position:0%
so if - we'll try to install ice at the
 

00:34:07.380 --> 00:34:10.220 align:start position:0%
so if - we'll try to install ice at the
same<00:34:07.650><c> time</c><00:34:08.030><c> it's</c><00:34:09.030><c> going</c><00:34:09.210><c> to</c><00:34:09.270><c> be</c><00:34:09.360><c> okay</c><00:34:09.600><c> not</c>

00:34:10.220 --> 00:34:10.230 align:start position:0%
same time it's going to be okay not
 

00:34:10.230 --> 00:34:13.580 align:start position:0%
same time it's going to be okay not
going<00:34:10.380><c> to</c><00:34:10.530><c> try</c><00:34:10.679><c> them</c><00:34:10.860><c> now</c><00:34:12.140><c> okay</c><00:34:13.140><c> in</c><00:34:13.290><c> order</c><00:34:13.380><c> to</c>

00:34:13.580 --> 00:34:13.590 align:start position:0%
going to try them now okay in order to
 

00:34:13.590 --> 00:34:16.669 align:start position:0%
going to try them now okay in order to
go<00:34:13.740><c> faster</c><00:34:14.280><c> let</c><00:34:15.000><c> me</c><00:34:15.030><c> speed</c><00:34:15.690><c> up</c><00:34:15.840><c> the</c><00:34:15.929><c> process</c><00:34:16.290><c> if</c>

00:34:16.669 --> 00:34:16.679 align:start position:0%
go faster let me speed up the process if
 

00:34:16.679 --> 00:34:18.130 align:start position:0%
go faster let me speed up the process if
you<00:34:16.920><c> will</c><00:34:17.040><c> go</c><00:34:17.220><c> to</c><00:34:17.280><c> Java</c><00:34:17.640><c> Virtual</c><00:34:17.910><c> Machine</c>

00:34:18.130 --> 00:34:18.140 align:start position:0%
you will go to Java Virtual Machine
 

00:34:18.140 --> 00:34:20.660 align:start position:0%
you will go to Java Virtual Machine
specification<00:34:19.140><c> into</c><00:34:19.500><c> specification</c><00:34:20.340><c> of</c><00:34:20.460><c> put</c>

00:34:20.660 --> 00:34:20.670 align:start position:0%
specification into specification of put
 

00:34:20.670 --> 00:34:23.540 align:start position:0%
specification into specification of put
static<00:34:21.060><c> we</c><00:34:21.210><c> will</c><00:34:21.360><c> find</c><00:34:21.630><c> that</c><00:34:22.100><c> you</c><00:34:23.100><c> can</c><00:34:23.310><c> call</c>

00:34:23.540 --> 00:34:23.550 align:start position:0%
static we will find that you can call
 

00:34:23.550 --> 00:34:29.300 align:start position:0%
static we will find that you can call
put<00:34:23.790><c> static</c><00:34:25.670><c> only</c><00:34:26.670><c> feel</c><00:34:26.910><c> if</c><00:34:27.450><c> a</c><00:34:27.630><c> field</c><00:34:27.870><c> is</c><00:34:28.310><c> final</c>

00:34:29.300 --> 00:34:29.310 align:start position:0%
put static only feel if a field is final
 

00:34:29.310 --> 00:34:32.120 align:start position:0%
put static only feel if a field is final
and<00:34:29.460><c> you</c><00:34:29.610><c> :</c><00:34:29.820><c> it</c><00:34:30.030><c> puts</c><00:34:30.570><c> that</c><00:34:30.750><c> exam</c><00:34:31.200><c> this</c><00:34:31.860><c> put</c>

00:34:32.120 --> 00:34:32.130 align:start position:0%
and you : it puts that exam this put
 

00:34:32.130 --> 00:34:35.330 align:start position:0%
and you : it puts that exam this put
static<00:34:32.520><c> instruction</c><00:34:32.960><c> must</c><00:34:33.960><c> occur</c><00:34:34.470><c> in</c><00:34:34.679><c> the</c><00:34:34.800><c> so</c>

00:34:35.330 --> 00:34:35.340 align:start position:0%
static instruction must occur in the so
 

00:34:35.340 --> 00:34:37.640 align:start position:0%
static instruction must occur in the so
called<00:34:35.640><c> class</c><00:34:36.540><c> initialization</c><00:34:36.750><c> method</c>

00:34:37.640 --> 00:34:37.650 align:start position:0%
called class initialization method
 

00:34:37.650 --> 00:34:40.280 align:start position:0%
called class initialization method
otherwise<00:34:38.460><c> an</c><00:34:38.970><c> illegal</c><00:34:39.420><c> access</c><00:34:39.720><c> here</c><00:34:40.020><c> is</c>

00:34:40.280 --> 00:34:40.290 align:start position:0%
otherwise an illegal access here is
 

00:34:40.290 --> 00:34:43.850 align:start position:0%
otherwise an illegal access here is
strong<00:34:40.790><c> and</c><00:34:41.790><c> if</c><00:34:42.360><c> we</c><00:34:42.660><c> look</c><00:34:42.840><c> back</c><00:34:43.410><c> on</c><00:34:43.650><c> our</c>

00:34:43.850 --> 00:34:43.860 align:start position:0%
strong and if we look back on our
 

00:34:43.860 --> 00:34:47.120 align:start position:0%
strong and if we look back on our
example<00:34:44.520><c> actually</c><00:34:45.210><c> this</c><00:34:46.140><c> is</c><00:34:46.290><c> a</c><00:34:46.320><c> final</c><00:34:46.860><c> field</c>

00:34:47.120 --> 00:34:47.130 align:start position:0%
example actually this is a final field
 

00:34:47.130 --> 00:34:50.480 align:start position:0%
example actually this is a final field
it<00:34:47.940><c> is</c><00:34:48.000><c> static</c><00:34:48.690><c> so</c><00:34:49.169><c> in</c><00:34:49.380><c> order</c><00:34:49.530><c> to</c><00:34:49.650><c> in</c><00:34:49.860><c> so</c><00:34:50.070><c> as</c><00:34:50.280><c> it</c>

00:34:50.480 --> 00:34:50.490 align:start position:0%
it is static so in order to in so as it
 

00:34:50.490 --> 00:34:53.450 align:start position:0%
it is static so in order to in so as it
we<00:34:50.760><c> call</c><00:34:50.970><c> a</c><00:34:51.210><c> put</c><00:34:51.450><c> static</c><00:34:51.870><c> and</c><00:34:52.110><c> this</c><00:34:52.980><c> has</c><00:34:53.250><c> been</c>

00:34:53.450 --> 00:34:53.460 align:start position:0%
we call a put static and this has been
 

00:34:53.460 --> 00:34:56.990 align:start position:0%
we call a put static and this has been
working<00:34:53.730><c> for</c><00:34:53.910><c> for</c><00:34:54.780><c> many</c><00:34:54.929><c> years</c><00:34:56.000><c> because</c>

00:34:56.990 --> 00:34:57.000 align:start position:0%
working for for many years because
 

00:34:57.000 --> 00:34:59.600 align:start position:0%
working for for many years because
apparently<00:34:57.600><c> it</c><00:34:57.780><c> was</c><00:34:57.960><c> never</c><00:34:58.350><c> checked</c><00:34:58.680><c> and</c><00:34:58.950><c> it</c>

00:34:59.600 --> 00:34:59.610 align:start position:0%
apparently it was never checked and it
 

00:34:59.610 --> 00:35:02.330 align:start position:0%
apparently it was never checked and it
started<00:35:00.090><c> to</c><00:35:00.120><c> be</c><00:35:00.330><c> check</c><00:35:00.510><c> out</c><00:35:00.660><c> since</c><00:35:01.320><c> gdk9</c><00:35:01.860><c> your</c>

00:35:02.330 --> 00:35:02.340 align:start position:0%
started to be check out since gdk9 your
 

00:35:02.340 --> 00:35:05.960 align:start position:0%
started to be check out since gdk9 your
Lexus<00:35:02.760><c> built</c><00:35:03.050><c> for</c><00:35:04.050><c> class</c><00:35:04.260><c> files</c><00:35:04.590><c> of</c><00:35:05.220><c> Java</c><00:35:05.760><c> 9</c>

00:35:05.960 --> 00:35:05.970 align:start position:0%
Lexus built for class files of Java 9
 

00:35:05.970 --> 00:35:11.560 align:start position:0%
Lexus built for class files of Java 9
version<00:35:06.420><c> so</c><00:35:08.510><c> yeah</c><00:35:09.510><c> so</c><00:35:09.720><c> we</c><00:35:09.750><c> needed</c><00:35:10.590><c> a</c><00:35:10.800><c> proper</c>

00:35:11.560 --> 00:35:11.570 align:start position:0%
version so yeah so we needed a proper
 

00:35:11.570 --> 00:35:15.560 align:start position:0%
version so yeah so we needed a proper
fix<00:35:12.570><c> for</c><00:35:12.870><c> this</c><00:35:13.050><c> and</c><00:35:13.370><c> after</c><00:35:14.370><c> many</c><00:35:15.000><c> many</c><00:35:15.210><c> years</c>

00:35:15.560 --> 00:35:15.570 align:start position:0%
fix for this and after many many years
 

00:35:15.570 --> 00:35:17.870 align:start position:0%
fix for this and after many many years
we<00:35:15.840><c> what</c><00:35:16.500><c> we</c><00:35:16.620><c> did</c><00:35:16.800><c> we</c><00:35:16.950><c> simply</c><00:35:17.310><c> remove</c><00:35:17.520><c> at</c><00:35:17.790><c> the</c>

00:35:17.870 --> 00:35:17.880 align:start position:0%
we what we did we simply remove at the
 

00:35:17.880 --> 00:35:20.770 align:start position:0%
we what we did we simply remove at the
final<00:35:18.560><c> now</c><00:35:19.560><c> it</c><00:35:19.740><c> works</c>

00:35:20.770 --> 00:35:20.780 align:start position:0%
final now it works
 

00:35:20.780 --> 00:35:25.940 align:start position:0%
final now it works
what<00:35:21.780><c> about</c><00:35:22.070><c> interfaces</c><00:35:24.170><c> one</c><00:35:25.170><c> could</c><00:35:25.440><c> say</c><00:35:25.650><c> that</c>

00:35:25.940 --> 00:35:25.950 align:start position:0%
what about interfaces one could say that
 

00:35:25.950 --> 00:35:28.400 align:start position:0%
what about interfaces one could say that
there<00:35:26.190><c> is</c><00:35:26.310><c> no</c><00:35:26.490><c> such</c><00:35:26.670><c> problems</c><00:35:27.180><c> for</c><00:35:27.750><c> interfaces</c>

00:35:28.400 --> 00:35:28.410 align:start position:0%
there is no such problems for interfaces
 

00:35:28.410 --> 00:35:33.170 align:start position:0%
there is no such problems for interfaces
because<00:35:30.170><c> everything</c><00:35:31.170><c> is</c><00:35:31.350><c> ok</c><00:35:32.150><c> everything</c><00:35:33.150><c> is</c>

00:35:33.170 --> 00:35:33.180 align:start position:0%
because everything is ok everything is
 

00:35:33.180 --> 00:35:37.460 align:start position:0%
because everything is ok everything is
static<00:35:33.750><c> final</c><00:35:33.990><c> we</c><00:35:34.500><c> can</c><00:35:34.680><c> initialize</c><00:35:35.780><c> fields</c><00:35:36.780><c> in</c>

00:35:37.460 --> 00:35:37.470 align:start position:0%
static final we can initialize fields in
 

00:35:37.470 --> 00:35:41.000 align:start position:0%
static final we can initialize fields in
static<00:35:37.950><c> initializer</c><00:35:39.590><c> interfaces</c><00:35:40.590><c> they</c><00:35:40.770><c> don't</c>

00:35:41.000 --> 00:35:41.010 align:start position:0%
static initializer interfaces they don't
 

00:35:41.010 --> 00:35:43.430 align:start position:0%
static initializer interfaces they don't
have<00:35:41.220><c> method</c><00:35:41.760><c> so</c><00:35:42.030><c> but</c><00:35:42.330><c> cycles</c><00:35:42.780><c> can't</c><00:35:43.050><c> a</c><00:35:43.170><c> curve</c>

00:35:43.430 --> 00:35:43.440 align:start position:0%
have method so but cycles can't a curve
 

00:35:43.440 --> 00:35:47.600 align:start position:0%
have method so but cycles can't a curve
is<00:35:43.590><c> interfaces</c><00:35:44.430><c> but</c><00:35:45.210><c> nope</c><00:35:45.780><c> what</c><00:35:46.650><c> about</c><00:35:46.800><c> Java</c><00:35:47.310><c> 8</c>

00:35:47.600 --> 00:35:47.610 align:start position:0%
is interfaces but nope what about Java 8
 

00:35:47.610 --> 00:35:49.970 align:start position:0%
is interfaces but nope what about Java 8
in<00:35:48.060><c> Java</c><00:35:48.960><c> it</c><00:35:49.020><c> you</c><00:35:49.380><c> do</c><00:35:49.590><c> have</c>

00:35:49.970 --> 00:35:49.980 align:start position:0%
in Java it you do have
 

00:35:49.980 --> 00:35:52.670 align:start position:0%
in Java it you do have
methods<00:35:50.270><c> in</c><00:35:51.270><c> interfaces</c><00:35:51.990><c> you</c><00:35:52.170><c> have</c><00:35:52.320><c> default</c>

00:35:52.670 --> 00:35:52.680 align:start position:0%
methods in interfaces you have default
 

00:35:52.680 --> 00:35:56.120 align:start position:0%
methods in interfaces you have default
methods<00:35:53.190><c> and</c><00:35:53.400><c> so</c><00:35:54.170><c> probably</c><00:35:55.170><c> the</c><00:35:55.380><c> the</c><00:35:55.950><c> bad</c>

00:35:56.120 --> 00:35:56.130 align:start position:0%
methods and so probably the the bad
 

00:35:56.130 --> 00:35:59.210 align:start position:0%
methods and so probably the the bad
cycles<00:35:56.640><c> can</c><00:35:57.390><c> can</c><00:35:57.750><c> occur</c><00:35:58.050><c> with</c><00:35:58.290><c> interfaces</c><00:35:58.890><c> as</c>

00:35:59.210 --> 00:35:59.220 align:start position:0%
cycles can can occur with interfaces as
 

00:35:59.220 --> 00:36:02.180 align:start position:0%
cycles can can occur with interfaces as
well<00:35:59.330><c> in</c><00:36:00.330><c> order</c><00:36:00.450><c> to</c><00:36:00.600><c> confirm</c><00:36:01.109><c> this</c><00:36:01.380><c> let's</c><00:36:02.010><c> go</c>

00:36:02.180 --> 00:36:02.190 align:start position:0%
well in order to confirm this let's go
 

00:36:02.190 --> 00:36:04.130 align:start position:0%
well in order to confirm this let's go
to<00:36:02.250><c> the</c><00:36:02.550><c> Java</c><00:36:02.790><c> language</c><00:36:02.970><c> specification</c>

00:36:04.130 --> 00:36:04.140 align:start position:0%
to the Java language specification
 

00:36:04.140 --> 00:36:06.760 align:start position:0%
to the Java language specification
let's<00:36:04.560><c> read</c><00:36:04.859><c> when</c><00:36:05.210><c> insulation</c><00:36:06.210><c> a</c><00:36:06.359><c> course</c>

00:36:06.760 --> 00:36:06.770 align:start position:0%
let's read when insulation a course
 

00:36:06.770 --> 00:36:09.230 align:start position:0%
let's read when insulation a course
class<00:36:07.770><c> or</c><00:36:07.980><c> interface</c><00:36:08.100><c> and</c><00:36:08.730><c> Salas</c><00:36:09.090><c> it</c>

00:36:09.230 --> 00:36:09.240 align:start position:0%
class or interface and Salas it
 

00:36:09.240 --> 00:36:11.480 align:start position:0%
class or interface and Salas it
immediately<00:36:09.630><c> before</c><00:36:10.070><c> instance</c><00:36:11.070><c> of</c><00:36:11.250><c> the</c><00:36:11.369><c> class</c>

00:36:11.480 --> 00:36:11.490 align:start position:0%
immediately before instance of the class
 

00:36:11.490 --> 00:36:13.970 align:start position:0%
immediately before instance of the class
created<00:36:12.090><c> or</c><00:36:12.330><c> static</c><00:36:12.810><c> method</c><00:36:13.140><c> declared</c><00:36:13.650><c> by</c><00:36:13.920><c> the</c>

00:36:13.970 --> 00:36:13.980 align:start position:0%
created or static method declared by the
 

00:36:13.980 --> 00:36:17.570 align:start position:0%
created or static method declared by the
classes<00:36:14.430><c> invoked</c><00:36:14.790><c> and</c><00:36:15.710><c> when</c><00:36:16.710><c> class</c><00:36:17.070><c> in</c><00:36:17.250><c> so</c><00:36:17.460><c> why</c>

00:36:17.570 --> 00:36:17.580 align:start position:0%
classes invoked and when class in so why
 

00:36:17.580 --> 00:36:19.490 align:start position:0%
classes invoked and when class in so why
is<00:36:17.640><c> it</c><00:36:17.700><c> any</c><00:36:18.030><c> super</c><00:36:18.359><c> interfaces</c><00:36:19.020><c> that</c><00:36:19.140><c> declare</c>

00:36:19.490 --> 00:36:19.500 align:start position:0%
is it any super interfaces that declare
 

00:36:19.500 --> 00:36:22.130 align:start position:0%
is it any super interfaces that declare
any<00:36:19.770><c> default</c><00:36:20.190><c> methods</c><00:36:20.670><c> are</c><00:36:21.030><c> also</c><00:36:21.330><c> in</c><00:36:21.630><c> so</c><00:36:21.810><c> acid</c>

00:36:22.130 --> 00:36:22.140 align:start position:0%
any default methods are also in so acid
 

00:36:22.140 --> 00:36:23.390 align:start position:0%
any default methods are also in so acid
this<00:36:22.320><c> is</c><00:36:22.470><c> what</c><00:36:22.680><c> Java</c><00:36:22.890><c> language</c><00:36:23.040><c> specification</c>

00:36:23.390 --> 00:36:23.400 align:start position:0%
this is what Java language specification
 

00:36:23.400 --> 00:36:27.140 align:start position:0%
this is what Java language specification
says<00:36:24.060><c> let's</c><00:36:24.990><c> try</c><00:36:25.290><c> to</c><00:36:25.350><c> write</c><00:36:25.920><c> a</c><00:36:26.220><c> bad</c><00:36:26.520><c> cycle</c><00:36:26.760><c> with</c>

00:36:27.140 --> 00:36:27.150 align:start position:0%
says let's try to write a bad cycle with
 

00:36:27.150 --> 00:36:29.480 align:start position:0%
says let's try to write a bad cycle with
interfaces<00:36:27.630><c> so</c><00:36:28.470><c> we</c><00:36:29.130><c> will</c><00:36:29.280><c> trigger</c>

00:36:29.480 --> 00:36:29.490 align:start position:0%
interfaces so we will trigger
 

00:36:29.490 --> 00:36:32.890 align:start position:0%
interfaces so we will trigger
initialization<00:36:30.330><c> by</c><00:36:30.540><c> creating</c><00:36:31.109><c> an</c><00:36:31.320><c> instance</c>

00:36:32.890 --> 00:36:32.900 align:start position:0%
initialization by creating an instance
 

00:36:32.900 --> 00:36:35.690 align:start position:0%
initialization by creating an instance
similarly<00:36:33.900><c> to</c><00:36:34.200><c> example</c><00:36:34.770><c> of</c><00:36:34.920><c> classes</c><00:36:35.369><c> we</c><00:36:35.520><c> will</c>

00:36:35.690 --> 00:36:35.700 align:start position:0%
similarly to example of classes we will
 

00:36:35.700 --> 00:36:37.760 align:start position:0%
similarly to example of classes we will
have<00:36:35.910><c> some</c><00:36:36.180><c> base</c><00:36:36.420><c> interface</c><00:36:36.990><c> in</c><00:36:37.350><c> order</c><00:36:37.619><c> to</c>

00:36:37.760 --> 00:36:37.770 align:start position:0%
have some base interface in order to
 

00:36:37.770 --> 00:36:39.590 align:start position:0%
have some base interface in order to
trigger<00:36:38.010><c> its</c><00:36:38.250><c> installation</c><00:36:39.090><c> we</c><00:36:39.240><c> will</c><00:36:39.420><c> have</c>

00:36:39.590 --> 00:36:39.600 align:start position:0%
trigger its installation we will have
 

00:36:39.600 --> 00:36:43.099 align:start position:0%
trigger its installation we will have
default<00:36:40.440><c> method</c><00:36:40.859><c> in</c><00:36:40.980><c> it</c><00:36:41.130><c> in</c><00:36:41.730><c> order</c><00:36:41.940><c> to</c><00:36:42.109><c> trigger</c>

00:36:43.099 --> 00:36:43.109 align:start position:0%
default method in it in order to trigger
 

00:36:43.109 --> 00:36:45.260 align:start position:0%
default method in it in order to trigger
a<00:36:43.230><c> bad</c><00:36:43.500><c> cycle</c><00:36:43.740><c> we</c><00:36:44.100><c> again</c><00:36:44.400><c> will</c><00:36:44.640><c> have</c><00:36:44.880><c> a</c><00:36:45.000><c> call</c>

00:36:45.260 --> 00:36:45.270 align:start position:0%
a bad cycle we again will have a call
 

00:36:45.270 --> 00:36:48.560 align:start position:0%
a bad cycle we again will have a call
into<00:36:45.540><c> the</c><00:36:45.690><c> child</c><00:36:46.109><c> into</c><00:36:47.010><c> as</c><00:36:47.130><c> a</c><00:36:47.160><c> child</c><00:36:47.609><c> method</c>

00:36:48.560 --> 00:36:48.570 align:start position:0%
into the child into as a child method
 

00:36:48.570 --> 00:36:53.270 align:start position:0%
into the child into as a child method
and<00:36:48.840><c> we</c><00:36:49.290><c> will</c><00:36:49.350><c> have</c><00:36:49.650><c> a</c><00:36:49.680><c> child</c><00:36:50.930><c> in</c><00:36:51.930><c> a</c><00:36:52.080><c> child</c><00:36:52.350><c> we</c>

00:36:53.270 --> 00:36:53.280 align:start position:0%
and we will have a child in a child we
 

00:36:53.280 --> 00:36:56.540 align:start position:0%
and we will have a child in a child we
will<00:36:53.490><c> have</c><00:36:54.300><c> some</c><00:36:54.900><c> output</c><00:36:55.170><c> on</c><00:36:55.800><c> it</c><00:36:56.130><c> static</c>

00:36:56.540 --> 00:36:56.550 align:start position:0%
will have some output on it static
 

00:36:56.550 --> 00:37:00.170 align:start position:0%
will have some output on it static
initialization<00:36:57.030><c> and</c><00:36:58.160><c> we</c><00:36:59.160><c> will</c><00:36:59.340><c> have</c><00:36:59.550><c> this</c>

00:37:00.170 --> 00:37:00.180 align:start position:0%
initialization and we will have this
 

00:37:00.180 --> 00:37:04.670 align:start position:0%
initialization and we will have this
method<00:37:00.540><c> and</c><00:37:01.820><c> expected</c><00:37:02.820><c> outcomes</c><00:37:03.050><c> out</c><00:37:04.050><c> of</c><00:37:04.410><c> this</c>

00:37:04.670 --> 00:37:04.680 align:start position:0%
method and expected outcomes out of this
 

00:37:04.680 --> 00:37:08.260 align:start position:0%
method and expected outcomes out of this
is<00:37:05.119><c> either</c><00:37:06.119><c> we</c><00:37:06.570><c> will</c><00:37:06.750><c> see</c><00:37:07.020><c> exception</c><00:37:07.950><c> and</c><00:37:08.190><c> so</c>

00:37:08.260 --> 00:37:08.270 align:start position:0%
is either we will see exception and so
 

00:37:08.270 --> 00:37:11.359 align:start position:0%
is either we will see exception and so
the<00:37:09.270><c> stack</c><00:37:09.570><c> trace</c><00:37:09.750><c> of</c><00:37:10.200><c> from</c><00:37:10.980><c> where</c><00:37:11.190><c> this</c>

00:37:11.359 --> 00:37:11.369 align:start position:0%
the stack trace of from where this
 

00:37:11.369 --> 00:37:13.630 align:start position:0%
the stack trace of from where this
method<00:37:11.700><c> was</c><00:37:11.880><c> called</c><00:37:12.090><c> either</c><00:37:12.600><c> we</c><00:37:13.050><c> will</c><00:37:13.230><c> see</c><00:37:13.440><c> it</c>

00:37:13.630 --> 00:37:13.640 align:start position:0%
method was called either we will see it
 

00:37:13.640 --> 00:37:15.730 align:start position:0%
method was called either we will see it
before<00:37:14.640><c> the</c><00:37:14.670><c> line</c><00:37:15.030><c> static</c><00:37:15.540><c> initialization</c>

00:37:15.730 --> 00:37:15.740 align:start position:0%
before the line static initialization
 

00:37:15.740 --> 00:37:19.340 align:start position:0%
before the line static initialization
happening<00:37:16.740><c> or</c><00:37:17.190><c> we</c><00:37:17.609><c> will</c><00:37:17.760><c> see</c><00:37:17.940><c> it</c><00:37:18.000><c> after</c><00:37:18.270><c> if</c><00:37:19.050><c> we</c>

00:37:19.340 --> 00:37:19.350 align:start position:0%
happening or we will see it after if we
 

00:37:19.350 --> 00:37:23.859 align:start position:0%
happening or we will see it after if we
see<00:37:19.590><c> it</c><00:37:19.970><c> before</c><00:37:20.970><c> them</c><00:37:22.340><c> then</c><00:37:23.340><c> this</c><00:37:23.580><c> is</c>

00:37:23.859 --> 00:37:23.869 align:start position:0%
see it before them then this is
 

00:37:23.869 --> 00:37:25.700 align:start position:0%
see it before them then this is
confirmations<00:37:24.869><c> of</c><00:37:24.990><c> bad</c><00:37:25.200><c> cycle</c><00:37:25.410><c> these</c>

00:37:25.700 --> 00:37:25.710 align:start position:0%
confirmations of bad cycle these
 

00:37:25.710 --> 00:37:28.400 align:start position:0%
confirmations of bad cycle these
interfaces<00:37:26.160><c> is</c><00:37:26.760><c> possible</c><00:37:27.450><c> if</c><00:37:27.720><c> we</c><00:37:27.960><c> see</c><00:37:28.350><c> it</c>

00:37:28.400 --> 00:37:28.410 align:start position:0%
interfaces is possible if we see it
 

00:37:28.410 --> 00:37:30.920 align:start position:0%
interfaces is possible if we see it
after<00:37:28.950><c> then</c><00:37:29.250><c> but</c><00:37:29.700><c> cycleways</c><00:37:30.210><c> interfaces</c><00:37:30.780><c> is</c>

00:37:30.920 --> 00:37:30.930 align:start position:0%
after then but cycleways interfaces is
 

00:37:30.930 --> 00:37:34.609 align:start position:0%
after then but cycleways interfaces is
not<00:37:31.109><c> possible</c><00:37:31.560><c> so</c><00:37:32.869><c> what</c><00:37:33.869><c> do</c><00:37:34.050><c> you</c><00:37:34.109><c> think</c><00:37:34.380><c> is</c>

00:37:34.609 --> 00:37:34.619 align:start position:0%
not possible so what do you think is
 

00:37:34.619 --> 00:37:39.920 align:start position:0%
not possible so what do you think is
happening<00:37:35.070><c> when</c><00:37:35.640><c> we</c><00:37:35.820><c> call</c><00:37:36.200><c> such</c><00:37:37.200><c> code</c><00:37:38.720><c> is</c><00:37:39.720><c> it</c>

00:37:39.920 --> 00:37:39.930 align:start position:0%
happening when we call such code is it
 

00:37:39.930 --> 00:37:43.310 align:start position:0%
happening when we call such code is it
before<00:37:40.320><c> or</c><00:37:40.500><c> after</c><00:37:40.530><c> who</c><00:37:41.190><c> is</c><00:37:41.250><c> for</c><00:37:42.320><c> static</c>

00:37:43.310 --> 00:37:43.320 align:start position:0%
before or after who is for static
 

00:37:43.320 --> 00:37:45.620 align:start position:0%
before or after who is for static
initialization<00:37:43.650><c> happens</c><00:37:44.340><c> before</c><00:37:45.330><c> the</c><00:37:45.420><c> call</c>

00:37:45.620 --> 00:37:45.630 align:start position:0%
initialization happens before the call
 

00:37:45.630 --> 00:37:54.480 align:start position:0%
initialization happens before the call
of<00:37:45.869><c> the</c><00:37:45.990><c> method</c><00:37:48.859><c> ok</c><00:37:49.859><c> who</c><00:37:50.430><c> thinks</c><00:37:50.730><c> after</c>

00:37:54.480 --> 00:37:54.490 align:start position:0%
 
 

00:37:54.490 --> 00:37:59.670 align:start position:0%
 
who<00:37:55.490><c> thinks</c><00:37:55.700><c> that</c><00:37:55.910><c> it</c><00:37:56.210><c> will</c><00:37:56.420><c> crash</c><00:37:58.360><c> okay</c><00:37:59.360><c> I</c>

00:37:59.670 --> 00:37:59.680 align:start position:0%
who thinks that it will crash okay I
 

00:37:59.680 --> 00:38:02.620 align:start position:0%
who thinks that it will crash okay I
actually<00:38:00.680><c> think</c><00:38:01.100><c> it</c><00:38:01.370><c> depends</c><00:38:01.820><c> and</c><00:38:02.180><c> that's</c><00:38:02.450><c> why</c>

00:38:02.620 --> 00:38:02.630 align:start position:0%
actually think it depends and that's why
 

00:38:02.630 --> 00:38:05.950 align:start position:0%
actually think it depends and that's why
I<00:38:02.660><c> raised</c><00:38:03.620><c> my</c><00:38:03.950><c> hand</c><00:38:04.190><c> three</c><00:38:04.370><c> times</c><00:38:04.610><c> it</c><00:38:05.570><c> actually</c>

00:38:05.950 --> 00:38:05.960 align:start position:0%
I raised my hand three times it actually
 

00:38:05.960 --> 00:38:10.540 align:start position:0%
I raised my hand three times it actually
depends<00:38:06.790><c> if</c><00:38:07.790><c> you</c><00:38:08.000><c> take</c><00:38:08.240><c> a</c><00:38:09.020><c> GDK</c><00:38:09.710><c> version</c><00:38:10.280><c> before</c>

00:38:10.540 --> 00:38:10.550 align:start position:0%
depends if you take a GDK version before
 

00:38:10.550 --> 00:38:14.890 align:start position:0%
depends if you take a GDK version before
JDK<00:38:11.300><c> 8</c><00:38:11.450><c> update</c><00:38:12.050><c> 40</c><00:38:12.500><c> then</c><00:38:13.480><c> you're</c><00:38:14.480><c> gonna</c><00:38:14.660><c> get</c>

00:38:14.890 --> 00:38:14.900 align:start position:0%
JDK 8 update 40 then you're gonna get
 

00:38:14.900 --> 00:38:19.690 align:start position:0%
JDK 8 update 40 then you're gonna get
these<00:38:15.080><c> seconds</c><00:38:16.150><c> if</c><00:38:17.150><c> you</c><00:38:17.210><c> and</c><00:38:18.280><c> you</c><00:38:19.280><c> actually</c>

00:38:19.690 --> 00:38:19.700 align:start position:0%
these seconds if you and you actually
 

00:38:19.700 --> 00:38:21.580 align:start position:0%
these seconds if you and you actually
going<00:38:19.820><c> to</c><00:38:19.910><c> get</c><00:38:20.030><c> a</c><00:38:20.090><c> crash</c><00:38:20.510><c> because</c><00:38:21.260><c> you're</c>

00:38:21.580 --> 00:38:21.590 align:start position:0%
going to get a crash because you're
 

00:38:21.590 --> 00:38:23.380 align:start position:0%
going to get a crash because you're
trolling<00:38:21.800><c> can</c><00:38:22.130><c> exception</c><00:38:22.610><c> so</c><00:38:22.940><c> at</c><00:38:23.120><c> the</c><00:38:23.240><c> moment</c>

00:38:23.380 --> 00:38:23.390 align:start position:0%
trolling can exception so at the moment
 

00:38:23.390 --> 00:38:24.940 align:start position:0%
trolling can exception so at the moment
of<00:38:23.660><c> throwing</c><00:38:23.960><c> an</c><00:38:24.140><c> exception</c><00:38:24.230><c> you're</c><00:38:24.680><c> going</c><00:38:24.860><c> to</c>

00:38:24.940 --> 00:38:24.950 align:start position:0%
of throwing an exception you're going to
 

00:38:24.950 --> 00:38:30.810 align:start position:0%
of throwing an exception you're going to
get<00:38:25.040><c> crushed</c><00:38:29.110><c> interestingly</c><00:38:30.110><c> if</c><00:38:30.710><c> you</c>

00:38:30.810 --> 00:38:30.820 align:start position:0%
get crushed interestingly if you
 

00:38:30.820 --> 00:38:35.170 align:start position:0%
get crushed interestingly if you
initialize<00:38:32.440><c> through</c><00:38:33.440><c> a</c><00:38:33.740><c> call</c><00:38:34.250><c> of</c><00:38:34.460><c> a</c><00:38:34.490><c> static</c>

00:38:35.170 --> 00:38:35.180 align:start position:0%
initialize through a call of a static
 

00:38:35.180 --> 00:38:37.630 align:start position:0%
initialize through a call of a static
method<00:38:35.360><c> you're</c><00:38:36.050><c> gonna</c><00:38:36.260><c> get</c><00:38:36.470><c> another</c><00:38:36.770><c> order</c><00:38:37.010><c> so</c>

00:38:37.630 --> 00:38:37.640 align:start position:0%
method you're gonna get another order so
 

00:38:37.640 --> 00:38:43.140 align:start position:0%
method you're gonna get another order so
it<00:38:37.970><c> even</c><00:38:38.540><c> was</c><00:38:38.720><c> inconsistent</c><00:38:39.880><c> if</c><00:38:40.880><c> you</c><00:38:41.120><c> do</c><00:38:41.740><c> check</c>

00:38:43.140 --> 00:38:43.150 align:start position:0%
it even was inconsistent if you do check
 

00:38:43.150 --> 00:38:46.960 align:start position:0%
it even was inconsistent if you do check
our<00:38:44.150><c> Laxus</c><00:38:44.780><c> built</c><00:38:45.050><c> of</c><00:38:45.320><c> GDK</c><00:38:46.010><c> eight</c><00:38:46.220><c> update</c><00:38:46.640><c> then</c>

00:38:46.960 --> 00:38:46.970 align:start position:0%
our Laxus built of GDK eight update then
 

00:38:46.970 --> 00:38:49.090 align:start position:0%
our Laxus built of GDK eight update then
you're<00:38:47.540><c> gonna</c><00:38:47.780><c> see</c><00:38:47.990><c> the</c><00:38:48.050><c> correct</c><00:38:48.350><c> order</c><00:38:48.890><c> where</c>

00:38:49.090 --> 00:38:49.100 align:start position:0%
you're gonna see the correct order where
 

00:38:49.100 --> 00:38:53.800 align:start position:0%
you're gonna see the correct order where
it<00:38:49.250><c> was</c><00:38:49.460><c> fixed</c><00:38:49.760><c> and</c><00:38:51.340><c> this</c><00:38:52.340><c> is</c><00:38:52.550><c> how</c><00:38:52.850><c> how</c><00:38:53.300><c> easy</c><00:38:53.330><c> to</c>

00:38:53.800 --> 00:38:53.810 align:start position:0%
it was fixed and this is how how easy to
 

00:38:53.810 --> 00:38:56.740 align:start position:0%
it was fixed and this is how how easy to
catch<00:38:54.410><c> a</c><00:38:54.530><c> back</c><00:38:54.740><c> in</c><00:38:54.950><c> GDK</c><00:38:55.490><c> and</c><00:38:55.670><c> this</c><00:38:56.330><c> one</c><00:38:56.570><c> was</c>

00:38:56.740 --> 00:38:56.750 align:start position:0%
catch a back in GDK and this one was
 

00:38:56.750 --> 00:38:58.750 align:start position:0%
catch a back in GDK and this one was
catered<00:38:57.110><c> by</c><00:38:57.260><c> us</c><00:38:57.410><c> and</c><00:38:57.650><c> we</c><00:38:57.830><c> reported</c><00:38:58.310><c> it</c><00:38:58.490><c> and</c>

00:38:58.750 --> 00:38:58.760 align:start position:0%
catered by us and we reported it and
 

00:38:58.760 --> 00:39:04.020 align:start position:0%
catered by us and we reported it and
that's<00:38:59.060><c> why</c><00:38:59.240><c> it</c><00:38:59.360><c> was</c><00:38:59.570><c> fixed</c><00:39:01.270><c> so</c><00:39:02.680><c> for</c>

00:39:04.020 --> 00:39:04.030 align:start position:0%
that's why it was fixed so for
 

00:39:04.030 --> 00:39:06.610 align:start position:0%
that's why it was fixed so for
interfaces<00:39:05.030><c> we</c><00:39:05.240><c> still</c><00:39:05.600><c> need</c><00:39:05.810><c> to</c><00:39:05.960><c> support</c><00:39:06.350><c> this</c>

00:39:06.610 --> 00:39:06.620 align:start position:0%
interfaces we still need to support this
 

00:39:06.620 --> 00:39:10.060 align:start position:0%
interfaces we still need to support this
case<00:39:06.950><c> of</c><00:39:07.220><c> that</c><00:39:07.820><c> order</c><00:39:08.240><c> so</c><00:39:08.480><c> for</c><00:39:09.410><c> interfaces</c>

00:39:10.060 --> 00:39:10.070 align:start position:0%
case of that order so for interfaces
 

00:39:10.070 --> 00:39:11.670 align:start position:0%
case of that order so for interfaces
there<00:39:10.310><c> is</c><00:39:10.460><c> a</c><00:39:10.490><c> little</c><00:39:10.970><c> bit</c><00:39:11.120><c> more</c><00:39:11.330><c> sophisticated</c>

00:39:11.670 --> 00:39:11.680 align:start position:0%
there is a little bit more sophisticated
 

00:39:11.680 --> 00:39:16.090 align:start position:0%
there is a little bit more sophisticated
strategy<00:39:13.030><c> we</c><00:39:14.030><c> can't</c><00:39:14.330><c> make</c><00:39:14.600><c> this</c><00:39:14.900><c> field</c><00:39:15.710><c> non</c>

00:39:16.090 --> 00:39:16.100 align:start position:0%
strategy we can't make this field non
 

00:39:16.100 --> 00:39:17.920 align:start position:0%
strategy we can't make this field non
final<00:39:16.400><c> because</c><00:39:16.880><c> everything</c><00:39:17.300><c> can</c><00:39:17.450><c> interface</c>

00:39:17.920 --> 00:39:17.930 align:start position:0%
final because everything can interface
 

00:39:17.930 --> 00:39:20.530 align:start position:0%
final because everything can interface
it<00:39:18.110><c> should</c><00:39:18.260><c> be</c><00:39:18.380><c> final</c><00:39:18.770><c> so</c><00:39:19.340><c> we</c><00:39:19.670><c> restore</c><00:39:20.330><c> the</c>

00:39:20.530 --> 00:39:20.540 align:start position:0%
it should be final so we restore the
 

00:39:20.540 --> 00:39:24.670 align:start position:0%
it should be final so we restore the
final<00:39:20.990><c> but</c><00:39:21.530><c> now</c><00:39:21.740><c> we</c><00:39:21.800><c> need</c><00:39:22.280><c> to</c><00:39:23.380><c> to</c><00:39:24.380><c> prevent</c>

00:39:24.670 --> 00:39:24.680 align:start position:0%
final but now we need to to prevent
 

00:39:24.680 --> 00:39:30.700 align:start position:0%
final but now we need to to prevent
writing<00:39:25.250><c> to</c><00:39:25.580><c> this</c><00:39:26.330><c> field</c><00:39:27.130><c> and</c><00:39:28.130><c> so</c><00:39:29.020><c> we</c><00:39:30.020><c> use</c>

00:39:30.700 --> 00:39:30.710 align:start position:0%
writing to this field and so we use
 

00:39:30.710 --> 00:39:32.950 align:start position:0%
writing to this field and so we use
static<00:39:30.980><c> initialization</c><00:39:31.450><c> but</c><00:39:32.450><c> before</c><00:39:32.840><c> the</c>

00:39:32.950 --> 00:39:32.960 align:start position:0%
static initialization but before the
 

00:39:32.960 --> 00:39:35.140 align:start position:0%
static initialization but before the
static<00:39:33.350><c> initialization</c><00:39:33.670><c> happens</c><00:39:34.670><c> we</c><00:39:34.850><c> still</c>

00:39:35.140 --> 00:39:35.150 align:start position:0%
static initialization happens we still
 

00:39:35.150 --> 00:39:38.170 align:start position:0%
static initialization happens we still
need<00:39:35.780><c> to</c><00:39:36.080><c> get</c><00:39:36.260><c> the</c><00:39:36.980><c> array</c><00:39:37.190><c> so</c><00:39:37.520><c> we</c><00:39:37.700><c> have</c><00:39:37.880><c> a</c><00:39:37.910><c> slow</c>

00:39:38.170 --> 00:39:38.180 align:start position:0%
need to get the array so we have a slow
 

00:39:38.180 --> 00:39:41.440 align:start position:0%
need to get the array so we have a slow
pass<00:39:38.560><c> without</c><00:39:39.560><c> assignment</c><00:39:40.370><c> for</c><00:39:40.640><c> for</c><00:39:40.940><c> some</c><00:39:41.090><c> GDK</c>

00:39:41.440 --> 00:39:41.450 align:start position:0%
pass without assignment for for some GDK
 

00:39:41.450 --> 00:39:47.530 align:start position:0%
pass without assignment for for some GDK
versions<00:39:43.990><c> we</c><00:39:44.990><c> run</c><00:39:45.530><c> out</c><00:39:45.740><c> of</c><00:39:45.800><c> time</c><00:39:46.070><c> I'm</c><00:39:46.610><c> sorry</c>

00:39:47.530 --> 00:39:47.540 align:start position:0%
versions we run out of time I'm sorry
 

00:39:47.540 --> 00:39:49.900 align:start position:0%
versions we run out of time I'm sorry
for<00:39:48.140><c> that</c><00:39:48.290><c> we</c><00:39:48.680><c> are</c><00:39:48.770><c> going</c><00:39:48.890><c> to</c><00:39:49.010><c> quick</c><00:39:49.190><c> quickly</c>

00:39:49.900 --> 00:39:49.910 align:start position:0%
for that we are going to quick quickly
 

00:39:49.910 --> 00:39:53.260 align:start position:0%
for that we are going to quick quickly
finish<00:39:50.590><c> the</c><00:39:51.590><c> last</c><00:39:51.770><c> interesting</c><00:39:52.310><c> question</c><00:39:52.760><c> for</c>

00:39:53.260 --> 00:39:53.270 align:start position:0%
finish the last interesting question for
 

00:39:53.270 --> 00:39:55.840 align:start position:0%
finish the last interesting question for
how<00:39:53.630><c> Java</c><00:39:54.170><c> code</c><00:39:54.380><c> coverage</c><00:39:54.710><c> works</c><00:39:55.040><c> is</c><00:39:55.340><c> a</c>

00:39:55.840 --> 00:39:55.850 align:start position:0%
how Java code coverage works is a
 

00:39:55.850 --> 00:39:58.570 align:start position:0%
how Java code coverage works is a
runtime<00:39:56.420><c> access</c><00:39:56.840><c> in</c><00:39:57.350><c> OSGi</c><00:39:57.890><c> world</c><00:39:58.280><c> you</c><00:39:58.460><c> know</c>

00:39:58.570 --> 00:39:58.580 align:start position:0%
runtime access in OSGi world you know
 

00:39:58.580 --> 00:40:00.640 align:start position:0%
runtime access in OSGi world you know
you<00:39:58.640><c> have</c><00:39:59.000><c> a</c><00:39:59.030><c> class</c><00:39:59.330><c> loaders</c><00:39:59.750><c> discus</c><00:40:00.230><c> loaders</c>

00:40:00.640 --> 00:40:00.650 align:start position:0%
you have a class loaders discus loaders
 

00:40:00.650 --> 00:40:02.800 align:start position:0%
you have a class loaders discus loaders
they<00:40:01.250><c> can</c><00:40:01.430><c> restrict</c><00:40:01.880><c> access</c><00:40:02.090><c> to</c><00:40:02.330><c> a</c><00:40:02.540><c> certain</c>

00:40:02.800 --> 00:40:02.810 align:start position:0%
they can restrict access to a certain
 

00:40:02.810 --> 00:40:05.140 align:start position:0%
they can restrict access to a certain
classes<00:40:03.350><c> and</c><00:40:03.530><c> provides</c><00:40:03.890><c> to</c><00:40:04.430><c> only</c><00:40:04.580><c> some</c><00:40:04.940><c> such</c>

00:40:05.140 --> 00:40:05.150 align:start position:0%
classes and provides to only some such
 

00:40:05.150 --> 00:40:06.450 align:start position:0%
classes and provides to only some such
that<00:40:05.510><c> you</c>

00:40:06.450 --> 00:40:06.460 align:start position:0%
that you
 

00:40:06.460 --> 00:40:08.580 align:start position:0%
that you
requested<00:40:07.210><c> in</c><00:40:07.330><c> particular</c><00:40:07.690><c> let's</c><00:40:08.170><c> say</c><00:40:08.290><c> we</c>

00:40:08.580 --> 00:40:08.590 align:start position:0%
requested in particular let's say we
 

00:40:08.590 --> 00:40:10.380 align:start position:0%
requested in particular let's say we
have<00:40:08.850><c> implementation</c><00:40:09.850><c> of</c><00:40:10.090><c> such</c><00:40:10.360><c> a</c>

00:40:10.380 --> 00:40:10.390 align:start position:0%
have implementation of such a
 

00:40:10.390 --> 00:40:12.540 align:start position:0%
have implementation of such a
restrictive<00:40:10.810><c> class</c><00:40:11.140><c> loader</c><00:40:11.530><c> it</c><00:40:12.070><c> gives</c><00:40:12.340><c> you</c><00:40:12.490><c> an</c>

00:40:12.540 --> 00:40:12.550 align:start position:0%
restrictive class loader it gives you an
 

00:40:12.550 --> 00:40:14.790 align:start position:0%
restrictive class loader it gives you an
access<00:40:12.700><c> obviously</c><00:40:13.600><c> to</c><00:40:13.750><c> to</c><00:40:14.170><c> everything</c><00:40:14.620><c> which</c>

00:40:14.790 --> 00:40:14.800 align:start position:0%
access obviously to to everything which
 

00:40:14.800 --> 00:40:17.480 align:start position:0%
access obviously to to everything which
is<00:40:14.830><c> java.lang</c><00:40:15.670><c> which</c><00:40:15.910><c> is</c><00:40:16.090><c> based</c><00:40:16.330><c> Java</c><00:40:16.630><c> and</c>

00:40:17.480 --> 00:40:17.490 align:start position:0%
is java.lang which is based Java and
 

00:40:17.490 --> 00:40:22.530 align:start position:0%
is java.lang which is based Java and
also<00:40:18.490><c> to</c><00:40:18.790><c> some</c><00:40:19.890><c> your</c><00:40:21.300><c> application</c><00:40:22.300><c> classes</c>

00:40:22.530 --> 00:40:22.540 align:start position:0%
also to some your application classes
 

00:40:22.540 --> 00:40:25.320 align:start position:0%
also to some your application classes
lion<00:40:23.170><c> concern</c><00:40:23.620><c> package</c><00:40:23.920><c> but</c><00:40:24.610><c> it</c><00:40:24.760><c> restricts</c>

00:40:25.320 --> 00:40:25.330 align:start position:0%
lion concern package but it restricts
 

00:40:25.330 --> 00:40:27.750 align:start position:0%
lion concern package but it restricts
access<00:40:25.450><c> to</c><00:40:25.930><c> everything</c><00:40:26.530><c> casts</c><00:40:26.980><c> in</c><00:40:27.250><c> particular</c>

00:40:27.750 --> 00:40:27.760 align:start position:0%
access to everything casts in particular
 

00:40:27.760 --> 00:40:33.120 align:start position:0%
access to everything casts in particular
it<00:40:28.090><c> restricts</c><00:40:28.780><c> access</c><00:40:28.900><c> to</c><00:40:30.540><c> to</c><00:40:31.740><c> two</c><00:40:32.740><c> jacoco</c>

00:40:33.120 --> 00:40:33.130 align:start position:0%
it restricts access to to two jacoco
 

00:40:33.130 --> 00:40:36.330 align:start position:0%
it restricts access to to two jacoco
package<00:40:33.550><c> so</c><00:40:33.910><c> how</c><00:40:34.540><c> do</c><00:40:34.600><c> we</c><00:40:34.900><c> actually</c><00:40:35.710><c> call</c><00:40:36.100><c> our</c>

00:40:36.330 --> 00:40:36.340 align:start position:0%
package so how do we actually call our
 

00:40:36.340 --> 00:40:38.340 align:start position:0%
package so how do we actually call our
runtime<00:40:36.760><c> from</c><00:40:37.270><c> the</c><00:40:37.540><c> instrumented</c><00:40:38.140><c> class</c>

00:40:38.340 --> 00:40:38.350 align:start position:0%
runtime from the instrumented class
 

00:40:38.350 --> 00:40:40.250 align:start position:0%
runtime from the instrumented class
which<00:40:38.620><c> was</c><00:40:38.830><c> loaded</c><00:40:39.100><c> by</c><00:40:39.460><c> this</c><00:40:39.520><c> class</c><00:40:39.850><c> model</c>

00:40:40.250 --> 00:40:40.260 align:start position:0%
which was loaded by this class model
 

00:40:40.260 --> 00:40:46.770 align:start position:0%
which was loaded by this class model
this<00:40:41.260><c> is</c><00:40:41.440><c> a</c><00:40:41.470><c> problem</c><00:40:43.800><c> what</c><00:40:45.420><c> page</c><00:40:46.420><c> the</c><00:40:46.600><c> class</c>

00:40:46.770 --> 00:40:46.780 align:start position:0%
this is a problem what page the class
 

00:40:46.780 --> 00:40:51.060 align:start position:0%
this is a problem what page the class
loader<00:40:47.430><c> yes</c><00:40:48.430><c> one</c><00:40:49.300><c> way</c><00:40:49.540><c> we</c><00:40:50.290><c> can</c><00:40:50.440><c> page</c><00:40:50.680><c> the</c><00:40:50.860><c> class</c>

00:40:51.060 --> 00:40:51.070 align:start position:0%
loader yes one way we can page the class
 

00:40:51.070 --> 00:40:55.500 align:start position:0%
loader yes one way we can page the class
loader<00:40:51.810><c> it</c><00:40:52.810><c> can</c><00:40:53.050><c> be</c><00:40:53.230><c> tricky</c><00:40:53.560><c> and</c><00:40:54.360><c> actually</c><00:40:55.360><c> we</c>

00:40:55.500 --> 00:40:55.510 align:start position:0%
loader it can be tricky and actually we
 

00:40:55.510 --> 00:40:59.520 align:start position:0%
loader it can be tricky and actually we
have<00:40:55.690><c> a</c><00:40:56.020><c> way</c><00:40:56.470><c> simpler</c><00:40:56.920><c> solution</c><00:40:57.720><c> as</c><00:40:58.720><c> we</c><00:40:59.170><c> have</c><00:40:59.380><c> a</c>

00:40:59.520 --> 00:40:59.530 align:start position:0%
have a way simpler solution as we have a
 

00:40:59.530 --> 00:41:04.530 align:start position:0%
have a way simpler solution as we have a
Java<00:40:59.830><c> agent</c><00:41:01.800><c> started</c><00:41:03.090><c> before</c><00:41:04.090><c> everything</c>

00:41:04.530 --> 00:41:04.540 align:start position:0%
Java agent started before everything
 

00:41:04.540 --> 00:41:08.550 align:start position:0%
Java agent started before everything
else<00:41:04.750><c> we</c><00:41:05.470><c> can</c><00:41:05.650><c> actually</c><00:41:05.800><c> page</c><00:41:06.340><c> some</c><00:41:07.000><c> class</c><00:41:07.560><c> in</c>

00:41:08.550 --> 00:41:08.560 align:start position:0%
else we can actually page some class in
 

00:41:08.560 --> 00:41:11.970 align:start position:0%
else we can actually page some class in
in<00:41:09.310><c> Java</c><00:41:09.700><c> rank</c><00:41:09.970><c> and</c><00:41:10.240><c> all</c><00:41:11.110><c> the</c><00:41:11.350><c> class</c><00:41:11.530><c> loaders</c>

00:41:11.970 --> 00:41:11.980 align:start position:0%
in Java rank and all the class loaders
 

00:41:11.980 --> 00:41:14.940 align:start position:0%
in Java rank and all the class loaders
they<00:41:12.250><c> do</c><00:41:12.310><c> have</c><00:41:12.790><c> access</c><00:41:13.000><c> to</c><00:41:13.210><c> Java</c><00:41:13.630><c> rank</c><00:41:13.900><c> as</c><00:41:14.140><c> they</c>

00:41:14.940 --> 00:41:14.950 align:start position:0%
they do have access to Java rank as they
 

00:41:14.950 --> 00:41:16.920 align:start position:0%
they do have access to Java rank as they
do<00:41:15.010><c> not</c><00:41:15.310><c> restrict</c><00:41:15.640><c> this</c><00:41:15.910><c> so</c><00:41:16.180><c> what</c><00:41:16.420><c> we</c><00:41:16.570><c> do</c><00:41:16.720><c> we</c>

00:41:16.920 --> 00:41:16.930 align:start position:0%
do not restrict this so what we do we
 

00:41:16.930 --> 00:41:21.320 align:start position:0%
do not restrict this so what we do we
simply<00:41:17.350><c> create</c><00:41:18.280><c> a</c><00:41:19.000><c> special</c><00:41:19.540><c> field</c><00:41:19.870><c> in</c><00:41:20.620><c> one</c><00:41:20.920><c> of</c>

00:41:21.320 --> 00:41:21.330 align:start position:0%
simply create a special field in one of
 

00:41:21.330 --> 00:41:25.460 align:start position:0%
simply create a special field in one of
Java<00:41:22.330><c> classes</c><00:41:22.630><c> and</c><00:41:23.080><c> I</c><00:41:24.070><c> never</c><00:41:24.400><c> told</c><00:41:24.640><c> you</c><00:41:24.850><c> so</c>

00:41:25.460 --> 00:41:25.470 align:start position:0%
Java classes and I never told you so
 

00:41:25.470 --> 00:41:29.160 align:start position:0%
Java classes and I never told you so
there<00:41:26.470><c> is</c><00:41:26.620><c> actually</c><00:41:26.770><c> no</c><00:41:27.310><c> such</c><00:41:27.550><c> field</c><00:41:28.170><c> actually</c>

00:41:29.160 --> 00:41:29.170 align:start position:0%
there is actually no such field actually
 

00:41:29.170 --> 00:41:31.890 align:start position:0%
there is actually no such field actually
to<00:41:29.650><c> be</c><00:41:29.770><c> more</c><00:41:29.950><c> precise</c><00:41:30.310><c> this</c><00:41:30.610><c> is</c><00:41:30.790><c> we</c><00:41:31.600><c> already</c>

00:41:31.890 --> 00:41:31.900 align:start position:0%
to be more precise this is we already
 

00:41:31.900 --> 00:41:34.290 align:start position:0%
to be more precise this is we already
change<00:41:32.230><c> it</c><00:41:32.380><c> a</c><00:41:32.500><c> name</c><00:41:32.860><c> of</c><00:41:33.130><c> this</c><00:41:33.430><c> class</c><00:41:33.670><c> it's</c><00:41:34.000><c> it's</c>

00:41:34.290 --> 00:41:34.300 align:start position:0%
change it a name of this class it's it's
 

00:41:34.300 --> 00:41:36.720 align:start position:0%
change it a name of this class it's it's
no<00:41:34.480><c> more</c><00:41:34.660><c> this</c><00:41:34.840><c> class</c><00:41:35.110><c> I</c><00:41:35.490><c> wouldn't</c><00:41:36.490><c> tell</c><00:41:36.670><c> you</c>

00:41:36.720 --> 00:41:36.730 align:start position:0%
no more this class I wouldn't tell you
 

00:41:36.730 --> 00:41:42.240 align:start position:0%
no more this class I wouldn't tell you
which<00:41:37.120><c> one</c><00:41:37.420><c> now</c><00:41:37.720><c> it</c><00:41:37.990><c> is</c><00:41:39.510><c> and</c><00:41:40.510><c> then</c><00:41:40.840><c> so</c><00:41:41.140><c> as</c><00:41:41.590><c> we</c>

00:41:42.240 --> 00:41:42.250 align:start position:0%
which one now it is and then so as we
 

00:41:42.250 --> 00:41:45.750 align:start position:0%
which one now it is and then so as we
can't<00:41:42.490><c> access</c><00:41:42.850><c> anything</c><00:41:43.920><c> outside</c><00:41:44.920><c> of</c><00:41:45.190><c> Java</c><00:41:45.520><c> we</c>

00:41:45.750 --> 00:41:45.760 align:start position:0%
can't access anything outside of Java we
 

00:41:45.760 --> 00:41:49.260 align:start position:0%
can't access anything outside of Java we
also<00:41:45.880><c> don't</c><00:41:46.270><c> have</c><00:41:46.800><c> an</c><00:41:47.800><c> interface</c><00:41:48.250><c> to</c><00:41:48.730><c> call</c><00:41:48.970><c> our</c>

00:41:49.260 --> 00:41:49.270 align:start position:0%
also don't have an interface to call our
 

00:41:49.270 --> 00:41:51.480 align:start position:0%
also don't have an interface to call our
runtime<00:41:49.750><c> so</c><00:41:50.290><c> we</c><00:41:50.530><c> need</c><00:41:50.680><c> to</c><00:41:50.830><c> do</c><00:41:50.980><c> this</c><00:41:51.160><c> somehow</c>

00:41:51.480 --> 00:41:51.490 align:start position:0%
runtime so we need to do this somehow
 

00:41:51.490 --> 00:41:55.920 align:start position:0%
runtime so we need to do this somehow
differently<00:41:52.390><c> and</c><00:41:53.550><c> and</c><00:41:54.550><c> so</c><00:41:54.790><c> we</c><00:41:55.150><c> speculate</c><00:41:55.690><c> on</c>

00:41:55.920 --> 00:41:55.930 align:start position:0%
differently and and so we speculate on
 

00:41:55.930 --> 00:42:00.930 align:start position:0%
differently and and so we speculate on
equals<00:41:56.830><c> method</c><00:41:57.450><c> this</c><00:41:58.450><c> jacoco</c><00:41:59.320><c> access</c><00:41:59.830><c> is</c><00:42:00.220><c> just</c>

00:42:00.930 --> 00:42:00.940 align:start position:0%
equals method this jacoco access is just
 

00:42:00.940 --> 00:42:04.140 align:start position:0%
equals method this jacoco access is just
an<00:42:01.120><c> object</c><00:42:01.740><c> this</c><00:42:02.740><c> object</c><00:42:02.950><c> has</c><00:42:03.460><c> not</c><00:42:03.760><c> that</c><00:42:03.910><c> much</c>

00:42:04.140 --> 00:42:04.150 align:start position:0%
an object this object has not that much
 

00:42:04.150 --> 00:42:07.440 align:start position:0%
an object this object has not that much
methods<00:42:04.600><c> it</c><00:42:04.750><c> has</c><00:42:04.960><c> only</c><00:42:05.230><c> equals</c><00:42:05.740><c> method</c><00:42:06.180><c> so</c><00:42:07.180><c> we</c>

00:42:07.440 --> 00:42:07.450 align:start position:0%
methods it has only equals method so we
 

00:42:07.450 --> 00:42:11.480 align:start position:0%
methods it has only equals method so we
pass<00:42:07.920><c> parameters</c><00:42:08.920><c> through</c><00:42:09.280><c> an</c><00:42:09.610><c> array</c><00:42:10.230><c> of</c>

00:42:11.480 --> 00:42:11.490 align:start position:0%
pass parameters through an array of
 

00:42:11.490 --> 00:42:14.550 align:start position:0%
pass parameters through an array of
objects<00:42:12.490><c> and</c><00:42:12.760><c> array</c><00:42:13.540><c> is</c><00:42:13.600><c> just</c><00:42:13.930><c> an</c><00:42:14.080><c> object</c><00:42:14.230><c> so</c>

00:42:14.550 --> 00:42:14.560 align:start position:0%
objects and array is just an object so
 

00:42:14.560 --> 00:42:17.370 align:start position:0%
objects and array is just an object so
we<00:42:14.740><c> can</c><00:42:14.920><c> pass</c><00:42:15.070><c> it</c><00:42:15.280><c> a</c><00:42:15.550><c> quick</c><00:42:15.970><c> question</c><00:42:16.180><c> how</c><00:42:16.840><c> how</c>

00:42:17.370 --> 00:42:17.380 align:start position:0%
we can pass it a quick question how how
 

00:42:17.380 --> 00:42:20.020 align:start position:0%
we can pass it a quick question how how
do<00:42:17.440><c> we</c><00:42:17.740><c> get</c><00:42:17.950><c> a</c><00:42:18.250><c> result</c><00:42:18.730><c> back</c><00:42:19.210><c> how</c><00:42:19.450><c> do</c><00:42:19.510><c> we</c><00:42:19.780><c> get</c>

00:42:20.020 --> 00:42:20.030 align:start position:0%
do we get a result back how do we get
 

00:42:20.030 --> 00:42:25.630 align:start position:0%
do we get a result back how do we get
a<00:42:20.150><c> prop</c><00:42:20.540><c> array</c><00:42:21.410><c> back</c><00:42:23.890><c> equals</c><00:42:24.890><c> method</c><00:42:25.280><c> returns</c>

00:42:25.630 --> 00:42:25.640 align:start position:0%
a prop array back equals method returns
 

00:42:25.640 --> 00:42:30.970 align:start position:0%
a prop array back equals method returns
boolean<00:42:26.210><c> we</c><00:42:26.780><c> need</c><00:42:26.930><c> an</c><00:42:27.080><c> array</c><00:42:29.410><c> yes</c><00:42:30.410><c> thankfully</c>

00:42:30.970 --> 00:42:30.980 align:start position:0%
boolean we need an array yes thankfully
 

00:42:30.980 --> 00:42:34.450 align:start position:0%
boolean we need an array yes thankfully
in<00:42:31.310><c> Java</c><00:42:31.610><c> arrays</c><00:42:32.450><c> immutable</c><00:42:33.260><c> so</c><00:42:33.680><c> we</c><00:42:34.100><c> can</c><00:42:34.310><c> we</c>

00:42:34.450 --> 00:42:34.460 align:start position:0%
in Java arrays immutable so we can we
 

00:42:34.460 --> 00:42:36.850 align:start position:0%
in Java arrays immutable so we can we
can<00:42:34.490><c> we</c><00:42:34.880><c> can</c><00:42:35.060><c> simply</c><00:42:35.480><c> speculate</c><00:42:36.260><c> on</c><00:42:36.290><c> the</c><00:42:36.620><c> fact</c>

00:42:36.850 --> 00:42:36.860 align:start position:0%
can we can simply speculate on the fact
 

00:42:36.860 --> 00:42:40.630 align:start position:0%
can we can simply speculate on the fact
that<00:42:37.180><c> runtime</c><00:42:38.180><c> will</c><00:42:38.420><c> modify</c><00:42:38.720><c> this</c><00:42:38.900><c> array</c><00:42:39.640><c> and</c>

00:42:40.630 --> 00:42:40.640 align:start position:0%
that runtime will modify this array and
 

00:42:40.640 --> 00:42:44.830 align:start position:0%
that runtime will modify this array and
this<00:42:41.630><c> is</c><00:42:41.780><c> how</c><00:42:42.110><c> we</c><00:42:42.170><c> do</c><00:42:42.670><c> hopefully</c><00:42:43.670><c> you</c><00:42:44.450><c> had</c><00:42:44.630><c> some</c>

00:42:44.830 --> 00:42:44.840 align:start position:0%
this is how we do hopefully you had some
 

00:42:44.840 --> 00:42:47.380 align:start position:0%
this is how we do hopefully you had some
fun<00:42:45.140><c> during</c><00:42:45.350><c> this</c><00:42:45.650><c> presentation</c><00:42:46.390><c> don't</c>

00:42:47.380 --> 00:42:47.390 align:start position:0%
fun during this presentation don't
 

00:42:47.390 --> 00:42:49.630 align:start position:0%
fun during this presentation don't
hesitate<00:42:47.870><c> to</c><00:42:47.930><c> get</c><00:42:48.410><c> involved</c><00:42:48.950><c> don't</c><00:42:49.190><c> hesitate</c>

00:42:49.630 --> 00:42:49.640 align:start position:0%
hesitate to get involved don't hesitate
 

00:42:49.640 --> 00:42:53.080 align:start position:0%
hesitate to get involved don't hesitate
to<00:42:49.700><c> test</c><00:42:50.710><c> early</c><00:42:51.710><c> access</c><00:42:52.070><c> builds</c><00:42:52.460><c> of</c><00:42:52.580><c> GDK</c><00:42:52.970><c> and</c>

00:42:53.080 --> 00:42:53.090 align:start position:0%
to test early access builds of GDK and
 

00:42:53.090 --> 00:42:54.460 align:start position:0%
to test early access builds of GDK and
report<00:42:53.450><c> bugs</c>

00:42:54.460 --> 00:42:54.470 align:start position:0%
report bugs
 

00:42:54.470 --> 00:42:57.190 align:start position:0%
report bugs
now<00:42:54.890><c> that</c><00:42:55.160><c> you</c><00:42:55.280><c> know</c><00:42:55.310><c> internals</c><00:42:56.030><c> please</c><00:42:56.840><c> help</c>

00:42:57.190 --> 00:42:57.200 align:start position:0%
now that you know internals please help
 

00:42:57.200 --> 00:42:59.260 align:start position:0%
now that you know internals please help
us<00:42:57.350><c> answering</c><00:42:57.890><c> some</c><00:42:58.220><c> user</c><00:42:58.430><c> questions</c><00:42:58.760><c> where</c>

00:42:59.260 --> 00:42:59.270 align:start position:0%
us answering some user questions where
 

00:42:59.270 --> 00:43:03.010 align:start position:0%
us answering some user questions where
reflection<00:42:59.510><c> doesn't</c><00:43:00.110><c> work</c><00:43:00.260><c> etc</c><00:43:00.470><c> etc</c><00:43:01.690><c> on</c><00:43:02.690><c> Stack</c>

00:43:03.010 --> 00:43:03.020 align:start position:0%
reflection doesn't work etc etc on Stack
 

00:43:03.020 --> 00:43:06.040 align:start position:0%
reflection doesn't work etc etc on Stack
Overflow<00:43:03.050><c> as</c><00:43:03.620><c> well</c><00:43:04.240><c> don't</c><00:43:05.240><c> hesitate</c><00:43:05.720><c> to</c><00:43:05.780><c> join</c>

00:43:06.040 --> 00:43:06.050 align:start position:0%
Overflow as well don't hesitate to join
 

00:43:06.050 --> 00:43:10.270 align:start position:0%
Overflow as well don't hesitate to join
development<00:43:06.950><c> of</c><00:43:07.300><c> Eclipse</c><00:43:08.300><c> echo</c><00:43:09.290><c> Emma</c><00:43:09.680><c> project</c>

00:43:10.270 --> 00:43:10.280 align:start position:0%
development of Eclipse echo Emma project
 

00:43:10.280 --> 00:43:14.200 align:start position:0%
development of Eclipse echo Emma project
and<00:43:10.520><c> jacoco</c><00:43:11.390><c> projects</c><00:43:11.990><c> and</c><00:43:12.800><c> that's</c><00:43:13.520><c> it</c><00:43:13.760><c> thank</c>

00:43:14.200 --> 00:43:14.210 align:start position:0%
and jacoco projects and that's it thank
 

00:43:14.210 --> 00:43:21.090 align:start position:0%
and jacoco projects and that's it thank
you<00:43:14.360><c> for</c><00:43:14.510><c> your</c><00:43:14.600><c> attention</c>

00:43:21.090 --> 00:43:21.100 align:start position:0%
 
 

00:43:21.100 --> 00:43:23.370 align:start position:0%
 
and<00:43:21.610><c> if</c><00:43:21.880><c> you</c><00:43:22.060><c> have</c><00:43:22.270><c> any</c><00:43:22.570><c> questions</c><00:43:23.080><c> as</c><00:43:23.350><c> we</c>

00:43:23.370 --> 00:43:23.380 align:start position:0%
and if you have any questions as we
 

00:43:23.380 --> 00:43:25.340 align:start position:0%
and if you have any questions as we
don't<00:43:23.770><c> have</c><00:43:24.010><c> time</c><00:43:24.490><c> please</c><00:43:24.520><c> catch</c><00:43:25.210><c> me</c>

00:43:25.340 --> 00:43:25.350 align:start position:0%
don't have time please catch me
 

00:43:25.350 --> 00:43:29.010 align:start position:0%
don't have time please catch me
somewhere<00:43:26.350><c> outside</c>

