WEBVTT
Kind: captions
Language: en

00:00:02.500 --> 00:00:04.440 align:start position:0%
 
let's<00:00:03.310><c> take</c><00:00:03.490><c> a</c><00:00:03.520><c> look</c><00:00:03.670><c> at</c><00:00:03.730><c> the</c><00:00:03.790><c> process</c><00:00:04.000><c> for</c>

00:00:04.440 --> 00:00:04.450 align:start position:0%
let's take a look at the process for
 

00:00:04.450 --> 00:00:05.849 align:start position:0%
let's take a look at the process for
debugging<00:00:04.660><c> web</c><00:00:04.930><c> application</c><00:00:05.529><c> on</c><00:00:05.680><c> an</c>

00:00:05.849 --> 00:00:05.859 align:start position:0%
debugging web application on an
 

00:00:05.859 --> 00:00:08.900 align:start position:0%
debugging web application on an
application<00:00:06.340><c> server</c><00:00:06.550><c> using</c><00:00:07.479><c> IntelliJ</c><00:00:07.840><c> IDEA</c>

00:00:08.900 --> 00:00:08.910 align:start position:0%
application server using IntelliJ IDEA
 

00:00:08.910 --> 00:00:11.940 align:start position:0%
application server using IntelliJ IDEA
so<00:00:09.910><c> IntelliJ</c><00:00:10.450><c> IDEA</c><00:00:10.720><c> supports</c><00:00:11.260><c> many</c><00:00:11.710><c> many</c>

00:00:11.940 --> 00:00:11.950 align:start position:0%
so IntelliJ IDEA supports many many
 

00:00:11.950 --> 00:00:15.470 align:start position:0%
so IntelliJ IDEA supports many many
application<00:00:12.460><c> servers</c><00:00:12.930><c> Tomcat</c><00:00:13.930><c> Tommy</c><00:00:14.770><c> Yi</c>

00:00:15.470 --> 00:00:15.480 align:start position:0%
application servers Tomcat Tommy Yi
 

00:00:15.480 --> 00:00:19.859 align:start position:0%
application servers Tomcat Tommy Yi
GlassFish<00:00:16.980><c> and</c><00:00:17.980><c> many</c><00:00:18.220><c> more</c><00:00:18.449><c> here</c><00:00:19.449><c> I</c><00:00:19.480><c> setup</c><00:00:19.720><c> a</c>

00:00:19.859 --> 00:00:19.869 align:start position:0%
GlassFish and many more here I setup a
 

00:00:19.869 --> 00:00:21.659 align:start position:0%
GlassFish and many more here I setup a
debug<00:00:20.140><c> configuration</c><00:00:20.380><c> for</c><00:00:21.160><c> the</c><00:00:21.220><c> Tomcat</c>

00:00:21.659 --> 00:00:21.669 align:start position:0%
debug configuration for the Tomcat
 

00:00:21.669 --> 00:00:24.029 align:start position:0%
debug configuration for the Tomcat
application<00:00:22.240><c> server</c><00:00:22.619><c> as</c><00:00:23.619><c> long</c><00:00:23.829><c> as</c><00:00:23.949><c> you</c>

00:00:24.029 --> 00:00:24.039 align:start position:0%
application server as long as you
 

00:00:24.039 --> 00:00:25.620 align:start position:0%
application server as long as you
installed<00:00:24.460><c> the</c><00:00:24.579><c> application</c><00:00:24.699><c> server</c><00:00:25.329><c> on</c><00:00:25.599><c> your</c>

00:00:25.620 --> 00:00:25.630 align:start position:0%
installed the application server on your
 

00:00:25.630 --> 00:00:27.450 align:start position:0%
installed the application server on your
local<00:00:25.900><c> machine</c><00:00:26.019><c> and</c><00:00:26.679><c> enabled</c><00:00:27.339><c> the</c>

00:00:27.450 --> 00:00:27.460 align:start position:0%
local machine and enabled the
 

00:00:27.460 --> 00:00:29.189 align:start position:0%
local machine and enabled the
application<00:00:27.939><c> server</c><00:00:28.089><c> integration</c><00:00:28.419><c> plug-in</c>

00:00:29.189 --> 00:00:29.199 align:start position:0%
application server integration plug-in
 

00:00:29.199 --> 00:00:31.169 align:start position:0%
application server integration plug-in
then<00:00:29.919><c> IntelliJ</c><00:00:30.279><c> IDEA</c><00:00:30.550><c> should</c><00:00:30.759><c> do</c><00:00:30.849><c> a</c><00:00:30.880><c> large</c>

00:00:31.169 --> 00:00:31.179 align:start position:0%
then IntelliJ IDEA should do a large
 

00:00:31.179 --> 00:00:32.370 align:start position:0%
then IntelliJ IDEA should do a large
part<00:00:31.509><c> of</c><00:00:31.569><c> this</c><00:00:31.689><c> for</c><00:00:32.079><c> you</c>

00:00:32.370 --> 00:00:32.380 align:start position:0%
part of this for you
 

00:00:32.380 --> 00:00:34.920 align:start position:0%
part of this for you
a<00:00:32.410><c> few</c><00:00:32.890><c> important</c><00:00:33.250><c> things</c><00:00:33.430><c> to</c><00:00:33.640><c> note</c><00:00:33.930><c> typically</c>

00:00:34.920 --> 00:00:34.930 align:start position:0%
a few important things to note typically
 

00:00:34.930 --> 00:00:35.940 align:start position:0%
a few important things to note typically
when<00:00:35.050><c> you're</c><00:00:35.140><c> developing</c><00:00:35.350><c> a</c><00:00:35.650><c> web</c><00:00:35.800><c> application</c>

00:00:35.940 --> 00:00:35.950 align:start position:0%
when you're developing a web application
 

00:00:35.950 --> 00:00:37.650 align:start position:0%
when you're developing a web application
you'll<00:00:36.610><c> be</c><00:00:36.700><c> switching</c><00:00:36.910><c> back</c><00:00:37.150><c> and</c><00:00:37.210><c> forth</c>

00:00:37.650 --> 00:00:37.660 align:start position:0%
you'll be switching back and forth
 

00:00:37.660 --> 00:00:39.900 align:start position:0%
you'll be switching back and forth
between<00:00:37.840><c> the</c><00:00:38.140><c> code</c><00:00:38.440><c> and</c><00:00:38.740><c> the</c><00:00:39.280><c> finished</c><00:00:39.550><c> result</c>

00:00:39.900 --> 00:00:39.910 align:start position:0%
between the code and the finished result
 

00:00:39.910 --> 00:00:42.300 align:start position:0%
between the code and the finished result
and<00:00:40.180><c> so</c><00:00:40.780><c> in</c><00:00:40.990><c> order</c><00:00:41.110><c> to</c><00:00:41.260><c> do</c><00:00:41.410><c> that</c><00:00:41.560><c> quickly</c><00:00:41.980><c> and</c>

00:00:42.300 --> 00:00:42.310 align:start position:0%
and so in order to do that quickly and
 

00:00:42.310 --> 00:00:44.880 align:start position:0%
and so in order to do that quickly and
efficiently<00:00:43.020><c> you</c><00:00:44.020><c> can</c><00:00:44.050><c> simply</c><00:00:44.470><c> update</c><00:00:44.620><c> your</c>

00:00:44.880 --> 00:00:44.890 align:start position:0%
efficiently you can simply update your
 

00:00:44.890 --> 00:00:47.040 align:start position:0%
efficiently you can simply update your
classes<00:00:45.370><c> and</c><00:00:45.490><c> resources</c><00:00:45.790><c> without</c><00:00:46.720><c> having</c><00:00:46.930><c> to</c>

00:00:47.040 --> 00:00:47.050 align:start position:0%
classes and resources without having to
 

00:00:47.050 --> 00:00:48.990 align:start position:0%
classes and resources without having to
redeploy<00:00:47.590><c> your</c><00:00:47.830><c> entire</c><00:00:48.220><c> application</c><00:00:48.430><c> or</c>

00:00:48.990 --> 00:00:49.000 align:start position:0%
redeploy your entire application or
 

00:00:49.000 --> 00:00:52.290 align:start position:0%
redeploy your entire application or
restart<00:00:49.480><c> the</c><00:00:49.630><c> server</c><00:00:50.880><c> if</c><00:00:51.880><c> you've</c><00:00:52.150><c> enabled</c>

00:00:52.290 --> 00:00:52.300 align:start position:0%
restart the server if you've enabled
 

00:00:52.300 --> 00:00:53.820 align:start position:0%
restart the server if you've enabled
hot-swap<00:00:52.930><c> in</c><00:00:53.050><c> your</c><00:00:53.170><c> settings</c><00:00:53.560><c> and</c><00:00:53.680><c> you're</c>

00:00:53.820 --> 00:00:53.830 align:start position:0%
hot-swap in your settings and you're
 

00:00:53.830 --> 00:00:56.010 align:start position:0%
hot-swap in your settings and you're
working<00:00:54.190><c> off</c><00:00:54.340><c> of</c><00:00:54.370><c> an</c><00:00:54.580><c> exploded</c><00:00:55.120><c> war</c><00:00:55.390><c> like</c><00:00:55.840><c> I've</c>

00:00:56.010 --> 00:00:56.020 align:start position:0%
working off of an exploded war like I've
 

00:00:56.020 --> 00:00:58.620 align:start position:0%
working off of an exploded war like I've
done<00:00:56.200><c> here</c><00:00:56.430><c> this</c><00:00:57.430><c> format</c><00:00:57.790><c> is</c><00:00:57.880><c> less</c><00:00:58.030><c> condensed</c>

00:00:58.620 --> 00:00:58.630 align:start position:0%
done here this format is less condensed
 

00:00:58.630 --> 00:01:00.060 align:start position:0%
done here this format is less condensed
enabling<00:00:59.020><c> you</c><00:00:59.080><c> to</c><00:00:59.170><c> swap</c><00:00:59.500><c> in</c><00:00:59.740><c> different</c>

00:01:00.060 --> 00:01:00.070 align:start position:0%
enabling you to swap in different
 

00:01:00.070 --> 00:01:01.819 align:start position:0%
enabling you to swap in different
components<00:01:00.579><c> inside</c><00:01:00.820><c> your</c><00:01:01.030><c> application</c>

00:01:01.819 --> 00:01:01.829 align:start position:0%
components inside your application
 

00:01:01.829 --> 00:01:04.530 align:start position:0%
components inside your application
making<00:01:02.829><c> it</c><00:01:02.950><c> easy</c><00:01:03.190><c> to</c><00:01:03.490><c> write</c><00:01:04.000><c> and</c><00:01:04.239><c> deploy</c><00:01:04.509><c> your</c>

00:01:04.530 --> 00:01:04.540 align:start position:0%
making it easy to write and deploy your
 

00:01:04.540 --> 00:01:07.290 align:start position:0%
making it easy to write and deploy your
code<00:01:04.720><c> on</c><00:01:05.049><c> the</c><00:01:05.140><c> fly</c><00:01:05.730><c> one</c><00:01:06.730><c> more</c><00:01:06.880><c> thing</c><00:01:07.030><c> you</c><00:01:07.060><c> want</c>

00:01:07.290 --> 00:01:07.300 align:start position:0%
code on the fly one more thing you want
 

00:01:07.300 --> 00:01:09.210 align:start position:0%
code on the fly one more thing you want
to<00:01:07.390><c> verify</c><00:01:07.570><c> to</c><00:01:07.870><c> get</c><00:01:08.170><c> the</c><00:01:08.260><c> full</c><00:01:08.560><c> hot-swap</c>

00:01:09.210 --> 00:01:09.220 align:start position:0%
to verify to get the full hot-swap
 

00:01:09.220 --> 00:01:12.660 align:start position:0%
to verify to get the full hot-swap
experience<00:01:09.909><c> is</c><00:01:10.240><c> to</c><00:01:10.840><c> use</c><00:01:11.050><c> update</c><00:01:11.740><c> classes</c><00:01:12.520><c> and</c>

00:01:12.660 --> 00:01:12.670 align:start position:0%
experience is to use update classes and
 

00:01:12.670 --> 00:01:15.360 align:start position:0%
experience is to use update classes and
resources<00:01:13.030><c> on</c><00:01:13.420><c> frame</c><00:01:13.900><c> deactivation</c><00:01:14.710><c> what</c>

00:01:15.360 --> 00:01:15.370 align:start position:0%
resources on frame deactivation what
 

00:01:15.370 --> 00:01:16.830 align:start position:0%
resources on frame deactivation what
this<00:01:15.550><c> does</c><00:01:15.760><c> is</c><00:01:15.940><c> whenever</c><00:01:16.120><c> you</c><00:01:16.420><c> edit</c><00:01:16.750><c> your</c>

00:01:16.830 --> 00:01:16.840 align:start position:0%
this does is whenever you edit your
 

00:01:16.840 --> 00:01:18.870 align:start position:0%
this does is whenever you edit your
classes<00:01:17.320><c> and</c><00:01:17.440><c> resources</c><00:01:18.010><c> in</c><00:01:18.130><c> IntelliJ</c><00:01:18.490><c> IDEA</c>

00:01:18.870 --> 00:01:18.880 align:start position:0%
classes and resources in IntelliJ IDEA
 

00:01:18.880 --> 00:01:20.670 align:start position:0%
classes and resources in IntelliJ IDEA
then<00:01:19.570><c> switch</c><00:01:19.840><c> over</c><00:01:19.960><c> to</c><00:01:20.080><c> your</c><00:01:20.200><c> browser</c><00:01:20.650><c> and</c>

00:01:20.670 --> 00:01:20.680 align:start position:0%
then switch over to your browser and
 

00:01:20.680 --> 00:01:23.310 align:start position:0%
then switch over to your browser and
reload<00:01:21.070><c> the</c><00:01:21.370><c> page</c><00:01:21.610><c> this</c><00:01:22.210><c> will</c><00:01:22.420><c> pull</c><00:01:22.750><c> in</c><00:01:22.930><c> those</c>

00:01:23.310 --> 00:01:23.320 align:start position:0%
reload the page this will pull in those
 

00:01:23.320 --> 00:01:26.190 align:start position:0%
reload the page this will pull in those
new<00:01:23.560><c> changes</c><00:01:24.240><c> so</c><00:01:25.240><c> whenever</c><00:01:25.390><c> the</c><00:01:25.630><c> frame</c><00:01:25.870><c> for</c>

00:01:26.190 --> 00:01:26.200 align:start position:0%
new changes so whenever the frame for
 

00:01:26.200 --> 00:01:28.830 align:start position:0%
new changes so whenever the frame for
your<00:01:26.290><c> web</c><00:01:26.500><c> application</c><00:01:27.220><c> is</c><00:01:27.430><c> deactivated</c><00:01:27.970><c> this</c>

00:01:28.830 --> 00:01:28.840 align:start position:0%
your web application is deactivated this
 

00:01:28.840 --> 00:01:31.170 align:start position:0%
your web application is deactivated this
happens<00:01:29.170><c> automatically</c><00:01:29.710><c> when</c><00:01:30.010><c> I</c><00:01:30.670><c> deploy</c><00:01:31.030><c> my</c>

00:01:31.170 --> 00:01:31.180 align:start position:0%
happens automatically when I deploy my
 

00:01:31.180 --> 00:01:32.789 align:start position:0%
happens automatically when I deploy my
application<00:01:31.210><c> I'll</c><00:01:31.930><c> want</c><00:01:32.110><c> to</c><00:01:32.200><c> launch</c><00:01:32.500><c> the</c>

00:01:32.789 --> 00:01:32.799 align:start position:0%
application I'll want to launch the
 

00:01:32.799 --> 00:01:35.160 align:start position:0%
application I'll want to launch the
browser<00:01:33.010><c> and</c><00:01:33.460><c> attach</c><00:01:34.270><c> a</c><00:01:34.360><c> JavaScript</c><00:01:34.870><c> debugger</c>

00:01:35.160 --> 00:01:35.170 align:start position:0%
browser and attach a JavaScript debugger
 

00:01:35.170 --> 00:01:37.880 align:start position:0%
browser and attach a JavaScript debugger
if<00:01:35.440><c> it's</c><00:01:35.590><c> applicable</c><00:01:35.799><c> for</c><00:01:36.130><c> my</c><00:01:36.280><c> application</c>

00:01:37.880 --> 00:01:37.890 align:start position:0%
if it's applicable for my application
 

00:01:37.890 --> 00:01:40.410 align:start position:0%
if it's applicable for my application
now<00:01:38.890><c> under</c><00:01:39.159><c> the</c><00:01:39.250><c> start</c><00:01:39.520><c> of</c><00:01:39.580><c> a</c><00:01:39.640><c> connection</c><00:01:40.120><c> tab</c>

00:01:40.410 --> 00:01:40.420 align:start position:0%
now under the start of a connection tab
 

00:01:40.420 --> 00:01:43.170 align:start position:0%
now under the start of a connection tab
you<00:01:41.320><c> can</c><00:01:41.440><c> configure</c><00:01:41.920><c> how</c><00:01:42.310><c> IntelliJ</c><00:01:42.909><c> IDEA</c>

00:01:43.170 --> 00:01:43.180 align:start position:0%
you can configure how IntelliJ IDEA
 

00:01:43.180 --> 00:01:44.850 align:start position:0%
you can configure how IntelliJ IDEA
communicates<00:01:43.720><c> with</c><00:01:43.900><c> the</c><00:01:44.020><c> application</c><00:01:44.590><c> server</c>

00:01:44.850 --> 00:01:44.860 align:start position:0%
communicates with the application server
 

00:01:44.860 --> 00:01:48.060 align:start position:0%
communicates with the application server
you<00:01:45.700><c> can</c><00:01:45.850><c> see</c><00:01:46.000><c> by</c><00:01:46.119><c> default</c><00:01:46.690><c> here</c><00:01:47.170><c> there's</c><00:01:47.920><c> some</c>

00:01:48.060 --> 00:01:48.070 align:start position:0%
you can see by default here there's some
 

00:01:48.070 --> 00:01:50.850 align:start position:0%
you can see by default here there's some
parameters<00:01:48.460><c> here</c><00:01:48.640><c> that</c><00:01:48.820><c> tell</c><00:01:49.000><c> JD</c><00:01:49.240><c> WP</c><00:01:49.960><c> which</c>

00:01:50.850 --> 00:01:50.860 align:start position:0%
parameters here that tell JD WP which
 

00:01:50.860 --> 00:01:53.370 align:start position:0%
parameters here that tell JD WP which
transport<00:01:51.460><c> protocol</c><00:01:51.880><c> to</c><00:01:52.090><c> use</c><00:01:52.119><c> the</c><00:01:52.990><c> address</c>

00:01:53.370 --> 00:01:53.380 align:start position:0%
transport protocol to use the address
 

00:01:53.380 --> 00:01:55.380 align:start position:0%
transport protocol to use the address
and<00:01:53.740><c> other</c><00:01:54.340><c> flags</c><00:01:54.760><c> that</c><00:01:54.970><c> it</c><00:01:55.090><c> should</c><00:01:55.240><c> honor</c>

00:01:55.380 --> 00:01:55.390 align:start position:0%
and other flags that it should honor
 

00:01:55.390 --> 00:01:58.140 align:start position:0%
and other flags that it should honor
during<00:01:55.990><c> the</c><00:01:56.080><c> debug</c><00:01:56.380><c> process</c><00:01:56.850><c> here</c><00:01:57.850><c> you</c><00:01:57.970><c> can</c>

00:01:58.140 --> 00:01:58.150 align:start position:0%
during the debug process here you can
 

00:01:58.150 --> 00:01:59.730 align:start position:0%
during the debug process here you can
configure<00:01:58.360><c> the</c><00:01:58.780><c> port</c><00:01:59.080><c> which</c><00:01:59.290><c> the</c><00:01:59.470><c> debugger</c>

00:01:59.730 --> 00:01:59.740 align:start position:0%
configure the port which the debugger
 

00:01:59.740 --> 00:02:02.250 align:start position:0%
configure the port which the debugger
should<00:02:00.010><c> connect</c><00:02:00.430><c> through</c><00:02:00.790><c> and</c><00:02:01.049><c> provide</c><00:02:02.049><c> any</c>

00:02:02.250 --> 00:02:02.260 align:start position:0%
should connect through and provide any
 

00:02:02.260 --> 00:02:04.710 align:start position:0%
should connect through and provide any
pre<00:02:02.560><c> launch</c><00:02:02.740><c> directives</c><00:02:03.400><c> to</c><00:02:03.700><c> IntelliJ</c><00:02:04.360><c> IDEA</c>

00:02:04.710 --> 00:02:04.720 align:start position:0%
pre launch directives to IntelliJ IDEA
 

00:02:04.720 --> 00:02:06.810 align:start position:0%
pre launch directives to IntelliJ IDEA
so<00:02:05.619><c> now</c><00:02:05.740><c> let's</c><00:02:05.890><c> apply</c><00:02:06.010><c> this</c><00:02:06.220><c> and</c><00:02:06.490><c> go</c><00:02:06.549><c> ahead</c><00:02:06.640><c> and</c>

00:02:06.810 --> 00:02:06.820 align:start position:0%
so now let's apply this and go ahead and
 

00:02:06.820 --> 00:02:11.460 align:start position:0%
so now let's apply this and go ahead and
debug<00:02:07.060><c> our</c><00:02:07.240><c> application</c><00:02:10.230><c> IntelliJ</c><00:02:11.230><c> IDEA</c><00:02:11.410><c> is</c>

00:02:11.460 --> 00:02:11.470 align:start position:0%
debug our application IntelliJ IDEA is
 

00:02:11.470 --> 00:02:13.230 align:start position:0%
debug our application IntelliJ IDEA is
compiling<00:02:11.830><c> the</c><00:02:12.040><c> artifact</c><00:02:12.459><c> and</c><00:02:12.730><c> deploying</c><00:02:13.090><c> it</c>

00:02:13.230 --> 00:02:13.240 align:start position:0%
compiling the artifact and deploying it
 

00:02:13.240 --> 00:02:16.030 align:start position:0%
compiling the artifact and deploying it
to<00:02:13.300><c> the</c><00:02:13.420><c> application</c><00:02:13.959><c> server</c><00:02:13.990><c> right</c><00:02:14.470><c> now</c>

00:02:16.030 --> 00:02:16.040 align:start position:0%
to the application server right now
 

00:02:16.040 --> 00:02:18.640 align:start position:0%
to the application server right now
it<00:02:16.250><c> opens</c><00:02:16.549><c> up</c><00:02:16.670><c> our</c><00:02:16.819><c> browser</c><00:02:17.120><c> to</c><00:02:17.840><c> the</c><00:02:17.870><c> main</c><00:02:18.290><c> page</c>

00:02:18.640 --> 00:02:18.650 align:start position:0%
it opens up our browser to the main page
 

00:02:18.650 --> 00:02:20.800 align:start position:0%
it opens up our browser to the main page
inside<00:02:19.189><c> our</c><00:02:19.310><c> application</c><00:02:19.340><c> and</c><00:02:20.060><c> the</c><00:02:20.780><c> first</c>

00:02:20.800 --> 00:02:20.810 align:start position:0%
inside our application and the first
 

00:02:20.810 --> 00:02:22.390 align:start position:0%
inside our application and the first
thing<00:02:21.170><c> you'll</c><00:02:21.290><c> notice</c><00:02:21.409><c> is</c><00:02:21.739><c> that</c><00:02:21.769><c> as</c><00:02:22.129><c> you'll</c>

00:02:22.390 --> 00:02:22.400 align:start position:0%
thing you'll notice is that as you'll
 

00:02:22.400 --> 00:02:24.160 align:start position:0%
thing you'll notice is that as you'll
remember<00:02:22.489><c> I've</c><00:02:22.909><c> enabled</c><00:02:23.239><c> the</c><00:02:23.599><c> JavaScript</c>

00:02:24.160 --> 00:02:24.170 align:start position:0%
remember I've enabled the JavaScript
 

00:02:24.170 --> 00:02:25.869 align:start position:0%
remember I've enabled the JavaScript
debugger<00:02:24.530><c> inside</c><00:02:25.010><c> my</c><00:02:25.189><c> Tomcat</c><00:02:25.640><c> run</c>

00:02:25.869 --> 00:02:25.879 align:start position:0%
debugger inside my Tomcat run
 

00:02:25.879 --> 00:02:28.569 align:start position:0%
debugger inside my Tomcat run
configuration<00:02:26.719><c> and</c><00:02:27.650><c> inside</c><00:02:27.950><c> this</c><00:02:28.099><c> file</c><00:02:28.370><c> I've</c>

00:02:28.569 --> 00:02:28.579 align:start position:0%
configuration and inside this file I've
 

00:02:28.579 --> 00:02:30.759 align:start position:0%
configuration and inside this file I've
set<00:02:28.819><c> a</c><00:02:28.849><c> JavaScript</c><00:02:29.420><c> breakpoint</c><00:02:29.959><c> on</c><00:02:30.140><c> the</c><00:02:30.500><c> first</c>

00:02:30.759 --> 00:02:30.769 align:start position:0%
set a JavaScript breakpoint on the first
 

00:02:30.769 --> 00:02:33.849 align:start position:0%
set a JavaScript breakpoint on the first
line<00:02:31.010><c> of</c><00:02:31.040><c> this</c><00:02:31.280><c> function</c><00:02:32.470><c> we</c><00:02:33.470><c> can</c><00:02:33.650><c> step</c>

00:02:33.849 --> 00:02:33.859 align:start position:0%
line of this function we can step
 

00:02:33.859 --> 00:02:35.710 align:start position:0%
line of this function we can step
through<00:02:34.069><c> the</c><00:02:34.129><c> code</c><00:02:34.189><c> and</c><00:02:34.609><c> view</c><00:02:35.060><c> all</c><00:02:35.150><c> the</c><00:02:35.269><c> values</c>

00:02:35.710 --> 00:02:35.720 align:start position:0%
through the code and view all the values
 

00:02:35.720 --> 00:02:38.319 align:start position:0%
through the code and view all the values
for<00:02:36.319><c> these</c><00:02:36.439><c> variables</c><00:02:36.859><c> inside</c><00:02:37.609><c> the</c><00:02:37.970><c> debug</c>

00:02:38.319 --> 00:02:38.329 align:start position:0%
for these variables inside the debug
 

00:02:38.329 --> 00:02:43.000 align:start position:0%
for these variables inside the debug
window<00:02:38.870><c> here</c><00:02:41.500><c> you</c><00:02:42.500><c> can</c><00:02:42.650><c> see</c><00:02:42.829><c> all</c><00:02:42.920><c> the</c>

00:02:43.000 --> 00:02:43.010 align:start position:0%
window here you can see all the
 

00:02:43.010 --> 00:02:44.800 align:start position:0%
window here you can see all the
JavaScript<00:02:43.549><c> that's</c><00:02:43.639><c> being</c><00:02:43.909><c> run</c><00:02:44.180><c> inside</c><00:02:44.659><c> the</c>

00:02:44.800 --> 00:02:44.810 align:start position:0%
JavaScript that's being run inside the
 

00:02:44.810 --> 00:02:47.410 align:start position:0%
JavaScript that's being run inside the
scripts<00:02:45.230><c> panel</c><00:02:45.349><c> of</c><00:02:46.129><c> the</c><00:02:46.519><c> debug</c><00:02:46.670><c> window</c><00:02:47.180><c> and</c>

00:02:47.410 --> 00:02:47.420 align:start position:0%
scripts panel of the debug window and
 

00:02:47.420 --> 00:02:49.330 align:start position:0%
scripts panel of the debug window and
here<00:02:48.079><c> I'm</c><00:02:48.170><c> working</c><00:02:48.290><c> with</c><00:02:48.560><c> the</c><00:02:48.680><c> jQuery</c><00:02:49.129><c> that</c>

00:02:49.330 --> 00:02:49.340 align:start position:0%
here I'm working with the jQuery that
 

00:02:49.340 --> 00:02:53.349 align:start position:0%
here I'm working with the jQuery that
comes<00:02:49.549><c> with</c><00:02:49.819><c> the</c><00:02:49.939><c> spring</c><00:02:50.269><c> application</c><00:02:52.359><c> let's</c>

00:02:53.349 --> 00:02:53.359 align:start position:0%
comes with the spring application let's
 

00:02:53.359 --> 00:02:54.699 align:start position:0%
comes with the spring application let's
resume<00:02:53.569><c> our</c><00:02:53.720><c> application</c><00:02:54.200><c> and</c><00:02:54.349><c> see</c><00:02:54.470><c> what</c><00:02:54.590><c> else</c>

00:02:54.699 --> 00:02:54.709 align:start position:0%
resume our application and see what else
 

00:02:54.709 --> 00:02:57.020 align:start position:0%
resume our application and see what else
we<00:02:54.859><c> can</c><00:02:54.889><c> do</c>

00:02:57.020 --> 00:02:57.030 align:start position:0%
we can do
 

00:02:57.030 --> 00:02:59.670 align:start position:0%
we can do
now<00:02:58.030><c> on</c><00:02:58.150><c> my</c><00:02:58.269><c> back-end</c><00:02:58.510><c> application</c><00:02:59.349><c> I've</c><00:02:59.470><c> set</c>

00:02:59.670 --> 00:02:59.680 align:start position:0%
now on my back-end application I've set
 

00:02:59.680 --> 00:03:02.490 align:start position:0%
now on my back-end application I've set
another<00:02:59.920><c> breakpoint</c><00:03:00.519><c> in</c><00:03:00.840><c> this</c><00:03:01.840><c> method</c><00:03:02.230><c> here</c>

00:03:02.490 --> 00:03:02.500 align:start position:0%
another breakpoint in this method here
 

00:03:02.500 --> 00:03:04.830 align:start position:0%
another breakpoint in this method here
and<00:03:02.620><c> so</c><00:03:03.489><c> as</c><00:03:03.610><c> soon</c><00:03:03.790><c> as</c><00:03:03.879><c> it</c><00:03:03.970><c> hits</c><00:03:04.150><c> the</c><00:03:04.330><c> first</c><00:03:04.510><c> line</c>

00:03:04.830 --> 00:03:04.840 align:start position:0%
and so as soon as it hits the first line
 

00:03:04.840 --> 00:03:07.800 align:start position:0%
and so as soon as it hits the first line
of<00:03:04.870><c> this</c><00:03:05.440><c> build</c><00:03:05.799><c> feed</c><00:03:06.129><c> entries</c><00:03:06.489><c> method</c><00:03:06.909><c> then</c>

00:03:07.800 --> 00:03:07.810 align:start position:0%
of this build feed entries method then
 

00:03:07.810 --> 00:03:10.350 align:start position:0%
of this build feed entries method then
the<00:03:07.930><c> debugger</c><00:03:08.230><c> will</c><00:03:08.379><c> pause</c><00:03:08.680><c> at</c><00:03:08.980><c> that</c><00:03:09.099><c> line</c><00:03:09.370><c> if</c>

00:03:10.350 --> 00:03:10.360 align:start position:0%
the debugger will pause at that line if
 

00:03:10.360 --> 00:03:11.940 align:start position:0%
the debugger will pause at that line if
we<00:03:10.450><c> go</c><00:03:10.569><c> back</c><00:03:10.720><c> to</c><00:03:10.840><c> our</c><00:03:10.870><c> application</c><00:03:10.989><c> and</c><00:03:11.620><c> select</c>

00:03:11.940 --> 00:03:11.950 align:start position:0%
we go back to our application and select
 

00:03:11.950 --> 00:03:15.180 align:start position:0%
we go back to our application and select
subscribe<00:03:12.730><c> to</c><00:03:12.940><c> atom</c><00:03:13.180><c> feed</c><00:03:13.769><c> then</c><00:03:14.769><c> we'll</c><00:03:14.950><c> stop</c>

00:03:15.180 --> 00:03:15.190 align:start position:0%
subscribe to atom feed then we'll stop
 

00:03:15.190 --> 00:03:16.979 align:start position:0%
subscribe to atom feed then we'll stop
at<00:03:15.370><c> this</c><00:03:15.489><c> location</c><00:03:16.030><c> we</c><00:03:16.180><c> can</c><00:03:16.299><c> inspect</c><00:03:16.690><c> all</c><00:03:16.959><c> of</c>

00:03:16.979 --> 00:03:16.989 align:start position:0%
at this location we can inspect all of
 

00:03:16.989 --> 00:03:19.470 align:start position:0%
at this location we can inspect all of
the<00:03:17.140><c> variables</c><00:03:17.650><c> on</c><00:03:17.769><c> our</c><00:03:17.890><c> stack</c><00:03:18.280><c> and</c><00:03:18.610><c> again</c>

00:03:19.470 --> 00:03:19.480 align:start position:0%
the variables on our stack and again
 

00:03:19.480 --> 00:03:23.400 align:start position:0%
the variables on our stack and again
step<00:03:19.840><c> through</c><00:03:20.080><c> our</c><00:03:20.110><c> code</c><00:03:21.989><c> so</c><00:03:22.989><c> let's</c><00:03:23.170><c> resume</c>

00:03:23.400 --> 00:03:23.410 align:start position:0%
step through our code so let's resume
 

00:03:23.410 --> 00:03:25.380 align:start position:0%
step through our code so let's resume
this<00:03:23.650><c> now</c><00:03:23.860><c> and</c><00:03:24.400><c> see</c><00:03:24.610><c> we</c><00:03:24.700><c> like</c><00:03:24.819><c> to</c><00:03:24.849><c> change</c><00:03:25.180><c> the</c>

00:03:25.380 --> 00:03:25.390 align:start position:0%
this now and see we like to change the
 

00:03:25.390 --> 00:03:28.470 align:start position:0%
this now and see we like to change the
implementation<00:03:25.540><c> of</c><00:03:26.319><c> this</c><00:03:26.590><c> method</c><00:03:27.450><c> so</c><00:03:28.450><c> here</c>

00:03:28.470 --> 00:03:28.480 align:start position:0%
implementation of this method so here
 

00:03:28.480 --> 00:03:30.360 align:start position:0%
implementation of this method so here
inside<00:03:28.870><c> each</c><00:03:29.019><c> feed</c><00:03:29.319><c> entry</c><00:03:29.620><c> I'll</c><00:03:29.799><c> just</c><00:03:29.980><c> change</c>

00:03:30.360 --> 00:03:30.370 align:start position:0%
inside each feed entry I'll just change
 

00:03:30.370 --> 00:03:34.530 align:start position:0%
inside each feed entry I'll just change
this<00:03:30.670><c> string</c><00:03:32.459><c> what</c><00:03:33.459><c> I</c><00:03:33.489><c> can</c><00:03:33.670><c> do</c><00:03:33.879><c> is</c><00:03:34.060><c> save</c><00:03:34.329><c> the</c>

00:03:34.530 --> 00:03:34.540 align:start position:0%
this string what I can do is save the
 

00:03:34.540 --> 00:03:38.660 align:start position:0%
this string what I can do is save the
application<00:03:35.549><c> reload</c><00:03:36.549><c> this</c><00:03:36.760><c> from</c><00:03:36.940><c> the</c><00:03:37.060><c> browser</c>

00:03:38.660 --> 00:03:38.670 align:start position:0%
application reload this from the browser
 

00:03:38.670 --> 00:03:40.860 align:start position:0%
application reload this from the browser
resume<00:03:39.670><c> this</c><00:03:39.910><c> and</c><00:03:40.180><c> because</c><00:03:40.480><c> we've</c><00:03:40.660><c> been</c><00:03:40.780><c> able</c>

00:03:40.860 --> 00:03:40.870 align:start position:0%
resume this and because we've been able
 

00:03:40.870 --> 00:03:43.500 align:start position:0%
resume this and because we've been able
to<00:03:41.049><c> update</c><00:03:41.500><c> on</c><00:03:41.620><c> frame</c><00:03:41.920><c> deactivation</c><00:03:42.730><c> and</c><00:03:43.329><c> will</c>

00:03:43.500 --> 00:03:43.510 align:start position:0%
to update on frame deactivation and will
 

00:03:43.510 --> 00:03:45.660 align:start position:0%
to update on frame deactivation and will
find<00:03:43.810><c> that</c><00:03:43.989><c> our</c><00:03:44.140><c> new</c><00:03:44.290><c> implementation</c><00:03:45.040><c> is</c><00:03:45.400><c> now</c>

00:03:45.660 --> 00:03:45.670 align:start position:0%
find that our new implementation is now
 

00:03:45.670 --> 00:03:50.700 align:start position:0%
find that our new implementation is now
live<00:03:46.030><c> on</c><00:03:46.060><c> the</c><00:03:46.359><c> server</c><00:03:47.700><c> good</c>

