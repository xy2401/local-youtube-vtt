WEBVTT
Kind: captions
Language: zh-Hans

00:00:02.500 --> 00:00:05.859
让我们来看看

00:00:04.450 --> 00:00:08.910
调试Web应用程序

00:00:05.859 --> 00:00:11.950
使用IntelliJ IDEA的应用程序服务器

00:00:08.910 --> 00:00:15.480
因此IntelliJ IDEA支持许多

00:00:11.950 --> 00:00:19.869
应用程序服务器Tomcat Tommy Yi 

00:00:15.480 --> 00:00:21.669
 GlassFish等在这里我设置了一个

00:00:19.869 --> 00:00:24.039
调试Tomcat的配置

00:00:21.669 --> 00:00:25.630
应用服务器只要你

00:00:24.039 --> 00:00:27.460
在您的计算机上安装了应用程序服务器

00:00:25.630 --> 00:00:29.199
本地计算机并启用了

00:00:27.460 --> 00:00:31.179
应用程序服务器集成插件

00:00:29.199 --> 00:00:32.380
那么IntelliJ IDEA应该做大

00:00:31.179 --> 00:00:34.930
这是你的一部分

00:00:32.380 --> 00:00:35.950
通常需要注意的一些重要事项

00:00:34.930 --> 00:00:37.660
在开发Web应用程序时

00:00:35.950 --> 00:00:39.910
你会来回切换

00:00:37.660 --> 00:00:42.310
在代码和最终结果之间

00:00:39.910 --> 00:00:44.890
为了快速做到这一点， 

00:00:42.310 --> 00:00:47.050
高效地，您只需更新您的

00:00:44.890 --> 00:00:49.000
类和资源，而不必

00:00:47.050 --> 00:00:52.300
重新部署您的整个应用程序或

00:00:49.000 --> 00:00:53.830
重新启动服务器（如果已启用） 

00:00:52.300 --> 00:00:56.020
热设置中的交换

00:00:53.830 --> 00:00:58.630
像我一样，正在爆发战争

00:00:56.020 --> 00:01:00.070
在此完成此格式的压缩较少

00:00:58.630 --> 00:01:01.829
使您可以交换不同的

00:01:00.070 --> 00:01:04.540
应用程序内部的组件

00:01:01.829 --> 00:01:07.300
使其易于编写和部署

00:01:04.540 --> 00:01:09.220
快速编写您想要的另一件事

00:01:07.300 --> 00:01:12.670
进行验证以获取完整的热交换

00:01:09.220 --> 00:01:15.370
经验是使用更新类和

00:01:12.670 --> 00:01:16.840
关于帧停用的资源

00:01:15.370 --> 00:01:18.880
只要您编辑自己的

00:01:16.840 --> 00:01:20.680
 IntelliJ IDEA中的类和资源

00:01:18.880 --> 00:01:23.320
然后切换到您的浏览器并

00:01:20.680 --> 00:01:26.200
重新加载页面，这将拉那些

00:01:23.320 --> 00:01:28.840
新的变化，所以每当框架

00:01:26.200 --> 00:01:31.180
您的Web应用程序已停用

00:01:28.840 --> 00:01:32.799
部署我的设备时会自动发生

00:01:31.180 --> 00:01:35.170
我要启动的应用程序

00:01:32.799 --> 00:01:37.890
浏览器并附加JavaScript调试器

00:01:35.170 --> 00:01:40.420
如果适用于我的应用

00:01:37.890 --> 00:01:43.180
现在在连接选项卡的开始下

00:01:40.420 --> 00:01:44.860
您可以配置IntelliJ IDEA 

00:01:43.180 --> 00:01:48.070
与应用服务器通信

00:01:44.860 --> 00:01:50.860
您可以默认看到这里有一些

00:01:48.070 --> 00:01:53.380
告诉JD WP的参数

00:01:50.860 --> 00:01:55.390
传输协议使用地址

00:01:53.380 --> 00:01:58.150
和它应该遵守的其他标志

00:01:55.390 --> 00:01:59.740
在调试过程中，您可以

00:01:58.150 --> 00:02:02.260
配置调试器要使用的端口

00:01:59.740 --> 00:02:04.720
应该通过连接并提供任何

00:02:02.260 --> 00:02:06.820
 IntelliJ IDEA的启动前指令

00:02:04.720 --> 00:02:11.470
所以现在让我们应用这个并继续

00:02:06.820 --> 00:02:13.240
调试我们的应用程序IntelliJ IDEA是

00:02:11.470 --> 00:02:16.040
编译工件并进行部署

00:02:13.240 --> 00:02:18.650
现在到应用程序服务器

00:02:16.040 --> 00:02:20.810
它打开我们的浏览器到主页

00:02:18.650 --> 00:02:22.400
在我们的应用程序和第一个

00:02:20.810 --> 00:02:24.170
你会注意到的是

00:02:22.400 --> 00:02:25.879
记得我已经启用了JavaScript 

00:02:24.170 --> 00:02:28.579
 Tomcat运行中的调试器

00:02:25.879 --> 00:02:30.769
配置，并在此文件中

00:02:28.579 --> 00:02:33.859
在第一个上设置JavaScript断点

00:02:30.769 --> 00:02:35.720
此功能行我们可以踩

00:02:33.859 --> 00:02:38.329
通过代码并查看所有值

00:02:35.720 --> 00:02:43.010
对于调试中的这些变量

00:02:38.329 --> 00:02:44.810
在这里的窗口，您可以看到所有

00:02:43.010 --> 00:02:47.420
正在内部运行的JavaScript 

00:02:44.810 --> 00:02:49.340
调试窗口的脚本面板和

00:02:47.420 --> 00:02:53.359
在这里，我正在使用的jQuery 

00:02:49.340 --> 00:02:54.709
附带了spring应用程序

00:02:53.359 --> 00:02:57.030
继续我们的申请，看看还有什么

00:02:54.709 --> 00:02:59.680
我们可以做的

00:02:57.030 --> 00:03:02.500
现在在我设置的后端应用程序上

00:02:59.680 --> 00:03:04.840
这种方法的另一个断点

00:03:02.500 --> 00:03:07.810
所以一到达第一行

00:03:04.840 --> 00:03:10.360
然后生成此构建提要条目方法

00:03:07.810 --> 00:03:11.950
如果出现以下情况，调试器将在该行暂停

00:03:10.360 --> 00:03:15.190
我们回到我们的应用程序并选择

00:03:11.950 --> 00:03:16.989
订阅原子供稿，然后我们将停止

00:03:15.190 --> 00:03:19.480
在这个位置，我们可以检查所有

00:03:16.989 --> 00:03:23.410
我们堆栈上的变量

00:03:19.480 --> 00:03:25.390
逐步执行我们的代码，让我们继续

00:03:23.410 --> 00:03:28.480
现在，看看我们喜欢改变

00:03:25.390 --> 00:03:30.370
这种方法的实现，所以这里

00:03:28.480 --> 00:03:34.540
在每个供稿条目中，我都会更改

00:03:30.370 --> 00:03:38.670
这个字符串我能做的就是保存

00:03:34.540 --> 00:03:40.870
应用程序从浏览器重新加载

00:03:38.670 --> 00:03:43.510
继续执行此操作，因为我们已经能够

00:03:40.870 --> 00:03:45.670
更新停用的框架，并将

00:03:43.510 --> 00:03:50.700
发现我们的新实现现在

00:03:45.670 --> 00:03:50.700
住在服务器上不错

