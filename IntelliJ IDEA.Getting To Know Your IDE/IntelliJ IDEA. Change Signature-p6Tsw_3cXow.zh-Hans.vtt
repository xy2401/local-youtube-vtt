WEBVTT
Kind: captions
Language: zh-Hans

00:00:02.739 --> 00:00:07.010
一种常见的重构

00:00:05.060 --> 00:00:09.379
特别是在什么时候遇到

00:00:07.010 --> 00:00:11.959
更改代码会修改

00:00:09.379 --> 00:00:14.179
现有的方法签名，所以如果您愿意

00:00:11.959 --> 00:00:16.129
喜欢添加新参数或更改

00:00:14.179 --> 00:00:18.320
现有方法的返回类型

00:00:16.129 --> 00:00:20.660
那么该过程可能会涉及几个

00:00:18.320 --> 00:00:23.180
方法和那里牧羊犬等等

00:00:20.660 --> 00:00:25.340
所以例如在这种情况下，如果我愿意

00:00:23.180 --> 00:00:28.520
喜欢添加一个新的字符串参数名称

00:00:25.340 --> 00:00:31.130
到方法巴兹，那么我需要

00:00:28.520 --> 00:00:34.880
在调用中传播该参数

00:00:31.130 --> 00:00:37.220
在这里堆放巴兹酒吧的所有khaalis和

00:00:34.880 --> 00:00:40.670
谁需要提供新参数

00:00:37.220 --> 00:00:43.640
名称，因为这种类型的重构是

00:00:40.670 --> 00:00:45.829
很常见，有专门的工具

00:00:43.640 --> 00:00:47.840
您可以在因子菜单中找到

00:00:45.829 --> 00:00:51.110
更改签名，使您能够

00:00:47.840 --> 00:00:53.149
向现有方法添加参数，并

00:00:51.110 --> 00:00:57.320
如果需要，传播相同的

00:00:53.149 --> 00:01:02.989
在任何层次的呼叫层次结构中使用参数

00:00:57.320 --> 00:01:05.690
如果我们应用此方法的Colley方法

00:01:02.989 --> 00:01:08.330
重构，那么您可以看到

00:01:05.690 --> 00:01:10.790
通过添加相同的参数

00:01:08.330 --> 00:01:13.070
整个呼叫层次结构，包括任何

00:01:10.790 --> 00:01:16.130
达到最终目的的中间方法

00:01:13.070 --> 00:01:19.640
目的地在这里老板你可以做的

00:01:16.130 --> 00:01:21.770
相同，但您可以选择

00:01:19.640 --> 00:01:24.260
在通话层次结构中， 

00:01:21.770 --> 00:01:30.740
要捕获的特定异常或

00:01:24.260 --> 00:01:32.689
删除时同样会抛出花圈

00:01:30.740 --> 00:01:35.780
方法签名中的元素

00:01:32.689 --> 00:01:38.990
示例此参数将提供

00:01:35.780 --> 00:01:42.770
通过传播这些变化

00:01:38.990 --> 00:01:44.869
通话层次结构以及变更

00:01:42.770 --> 00:01:47.900
保理签名使您更容易

00:01:44.869 --> 00:01:51.409
向现有方法添加参数，并

00:01:47.900 --> 00:01:54.110
更改方法签名

00:01:51.409 --> 00:01:56.030
没有大型项目的上下文

00:01:54.110 --> 00:02:00.549
必须追逐所有方法

00:01:56.030 --> 00:02:00.549
参考和牧羊犬等

00:02:02.530 --> 00:02:04.590
您

