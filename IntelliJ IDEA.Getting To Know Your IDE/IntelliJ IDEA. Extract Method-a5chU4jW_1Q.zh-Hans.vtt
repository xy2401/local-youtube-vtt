WEBVTT
Kind: captions
Language: zh-Hans

00:00:02.240 --> 00:00:07.230
的主要重构之一

00:00:04.859 --> 00:00:10.559
 IntelliJ IDEA被称为摘录

00:00:07.230 --> 00:00:12.660
重构工作方式的方法是

00:00:10.559 --> 00:00:15.150
您首先选择一个代码块

00:00:12.660 --> 00:00:17.430
您想提取一种新方法

00:00:15.150 --> 00:00:20.189
那个方块将成为方法

00:00:17.430 --> 00:00:23.430
将所有入站变量放入

00:00:20.189 --> 00:00:26.640
块将作为参数添加到

00:00:23.430 --> 00:00:30.240
您的新方法以激活它

00:00:26.640 --> 00:00:32.700
我只需按ctrl alt M并选择

00:00:30.240 --> 00:00:35.880
我想要的目的地班

00:00:32.700 --> 00:00:37.860
该方法要插入到这里

00:00:35.880 --> 00:00:39.960
它在一个匿名内部类中

00:00:37.860 --> 00:00:43.920
我会选择放在最外面

00:00:39.960 --> 00:00:51.030
我现在在这里是信使

00:00:43.920 --> 00:00:54.870
可以给这个方法命名

00:00:51.030 --> 00:00:57.480
可见性和返回类型是

00:00:54.870 --> 00:01:00.120
根据我们自动为我们设置

00:00:57.480 --> 00:01:01.829
我们选择的代码，然后声明

00:01:00.120 --> 00:01:04.619
如果我不想附加它是静态的

00:01:01.829 --> 00:01:07.350
作为实例方法，您会注意到

00:01:04.619 --> 00:01:10.020
这将为

00:01:07.350 --> 00:01:12.450
我们在此块内使用的字段

00:01:10.020 --> 00:01:15.990
因为它在

00:01:12.450 --> 00:01:17.880
静态方法我也可以选择折叠

00:01:15.990 --> 00:01:20.850
参数以及这里的内容

00:01:17.880 --> 00:01:24.530
折叠意味着折叠两个或更多

00:01:20.850 --> 00:01:28.650
将参数放入嵌套的方法调用中

00:01:24.530 --> 00:01:30.930
现在所提取的方法之外

00:01:28.650 --> 00:01:34.590
让我们应用此重构，看看

00:01:30.930 --> 00:01:37.229
会发生什么，以便您可以看到

00:01:34.590 --> 00:01:39.750
方法是调用而不是传递

00:01:37.229 --> 00:01:42.780
节点和消息在单独的位置

00:01:39.750 --> 00:01:45.390
参数，我们将它们折叠成一个

00:01:42.780 --> 00:01:49.290
嵌套方法调用然后传递

00:01:45.390 --> 00:01:52.409
将返回类型输入到我们的新发送中， 

00:01:49.290 --> 00:01:57.299
日志结果方法接受

00:01:52.409 --> 00:01:59.310
待处理结果，现在返回空

00:01:57.299 --> 00:02:04.009
让我们演示一下相同的重构

00:01:59.310 --> 00:02:04.009
没有启用参数折叠

00:02:05.960 --> 00:02:13.640
现在我们接受两个参数

00:02:10.289 --> 00:02:16.819
消息记录结果并返回

00:02:13.640 --> 00:02:19.610
避免提取方法也有

00:02:16.819 --> 00:02:21.980
检测重复块的能力以及

00:02:19.610 --> 00:02:22.819
用新方法替换它们

00:02:21.980 --> 00:02:25.700
调用

00:02:22.819 --> 00:02:30.110
所以在这里我将这个陈述解压缩到

00:02:25.700 --> 00:02:34.420
一个称为debug的新方法将声明

00:02:30.110 --> 00:02:37.580
它是静态的，然后应用重构

00:02:34.420 --> 00:02:40.250
因此提取方法将检测到那些

00:02:37.580 --> 00:02:43.610
位置并将其替换为通话

00:02:40.250 --> 00:02:47.410
到这里的新方法有三个

00:02:43.610 --> 00:02:47.410
让我们一步一脚印

00:02:49.870 --> 00:02:55.970
现在您除了可以看到

00:02:52.370 --> 00:02:57.980
声明我重构了三个

00:02:55.970 --> 00:03:02.019
其他被检测到并替换为

00:02:57.980 --> 00:03:02.019
新方法调用很好

