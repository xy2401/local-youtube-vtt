WEBVTT
Kind: captions
Language: zh-Hans

00:00:02.720 --> 00:00:08.099
有几种提取因子

00:00:05.400 --> 00:00:11.130
在IntelliJ IDEA中包括解压缩

00:00:08.099 --> 00:00:14.070
方法提取变量并提取

00:00:11.130 --> 00:00:16.609
参数和带有extract参数

00:00:14.070 --> 00:00:19.830
分解使您可以选择

00:00:16.609 --> 00:00:22.980
在方法内快速表达

00:00:19.830 --> 00:00:25.710
拉出或参数化该表达式

00:00:22.980 --> 00:00:28.500
在几个简单的击键中，您可以看到

00:00:25.710 --> 00:00:30.570
表达式返回类型将

00:00:28.500 --> 00:00:33.300
作为新参数添加到

00:00:30.570 --> 00:00:36.420
方法，然后再调用

00:00:33.300 --> 00:00:38.640
方法会将该值作为

00:00:36.420 --> 00:00:40.860
论点，因此您可以通过放置

00:00:38.640 --> 00:00:46.170
您将光标移到代码中的值上

00:00:40.860 --> 00:00:47.789
并立即按ctrl或Command alt P 

00:00:46.170 --> 00:00:51.059
如果该参数恰好在

00:00:47.789 --> 00:00:52.770
链式方法调用的形式，那么我可以

00:00:51.059 --> 00:00:55.079
只需将光标放在值上

00:00:52.770 --> 00:00:58.559
我想提取并执行相同的操作

00:00:55.079 --> 00:01:00.329
将其添加为参数，但是如果您

00:00:58.559 --> 00:01:02.910
仔细看你会发现你

00:01:00.329 --> 00:01:05.970
将无法参数化

00:01:02.910 --> 00:01:09.060
返回空类型的表达式，例如

00:01:05.970 --> 00:01:10.920
由于此调用打印行与

00:01:09.060 --> 00:01:13.470
引入lambda和功能

00:01:10.920 --> 00:01:16.470
 Java 8中的接口现在成为可能

00:01:13.470 --> 00:01:20.220
通过提取函数表达式

00:01:16.470 --> 00:01:22.680
按ctrl或命令alt shift P 

00:01:20.220 --> 00:01:25.500
会自动匹配形状

00:01:22.680 --> 00:01:28.259
入站变量和返回类型

00:01:25.500 --> 00:01:31.290
具有适当的函数式接口

00:01:28.259 --> 00:01:33.630
所以在这里我们可以按功能选择

00:01:31.290 --> 00:01:35.909
然后按功能介绍

00:01:33.630 --> 00:01:38.520
作为方法签名中的参数

00:01:35.909 --> 00:01:40.979
其定义在

00:01:38.520 --> 00:01:43.799
默认情况下，它会使用

00:01:40.979 --> 00:01:46.560
匿名内部类语法，因此可以

00:01:43.799 --> 00:01:49.110
与Java 6和7兼容

00:01:46.560 --> 00:01:51.840
您可以迁移到Java 8语法

00:01:49.110 --> 00:01:53.880
有意采取的行动，如果您愿意

00:01:51.840 --> 00:01:57.630
喜欢内联任何这些参数

00:01:53.880 --> 00:01:59.729
或反转提取参数或

00:01:57.630 --> 00:02:03.750
因素，您可以简单地通过

00:01:59.729 --> 00:02:06.090
按ctrl或命令alt n进行内联

00:02:03.750 --> 00:02:08.509
相同的参数恢复到原始状态

00:02:06.090 --> 00:02:08.509
位置

