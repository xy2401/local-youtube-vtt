WEBVTT
Kind: captions
Language: en

00:00:03.290 --> 00:00:06.710 align:start position:0%
 
now<00:00:04.290><c> let's</c><00:00:04.470><c> talk</c><00:00:04.620><c> about</c><00:00:04.680><c> inspections</c><00:00:05.720><c> so</c>

00:00:06.710 --> 00:00:06.720 align:start position:0%
now let's talk about inspections so
 

00:00:06.720 --> 00:00:08.780 align:start position:0%
now let's talk about inspections so
inspections<00:00:07.259><c> are</c><00:00:07.410><c> similar</c><00:00:07.919><c> to</c><00:00:08.069><c> intentions</c><00:00:08.639><c> in</c>

00:00:08.780 --> 00:00:08.790 align:start position:0%
inspections are similar to intentions in
 

00:00:08.790 --> 00:00:11.480 align:start position:0%
inspections are similar to intentions in
a<00:00:08.849><c> lot</c><00:00:08.970><c> of</c><00:00:09.059><c> ways</c><00:00:09.269><c> they</c><00:00:10.019><c> detect</c><00:00:10.469><c> and</c><00:00:10.769><c> correct</c>

00:00:11.480 --> 00:00:11.490 align:start position:0%
a lot of ways they detect and correct
 

00:00:11.490 --> 00:00:13.900 align:start position:0%
a lot of ways they detect and correct
anomalous<00:00:12.240><c> code</c><00:00:12.570><c> as</c><00:00:12.870><c> you're</c><00:00:13.620><c> typing</c>

00:00:13.900 --> 00:00:13.910 align:start position:0%
anomalous code as you're typing
 

00:00:13.910 --> 00:00:16.519 align:start position:0%
anomalous code as you're typing
sometimes<00:00:14.910><c> they</c><00:00:15.420><c> may</c><00:00:15.599><c> not</c><00:00:15.750><c> be</c><00:00:16.109><c> displayed</c>

00:00:16.519 --> 00:00:16.529 align:start position:0%
sometimes they may not be displayed
 

00:00:16.529 --> 00:00:18.769 align:start position:0%
sometimes they may not be displayed
inside<00:00:16.859><c> the</c><00:00:17.039><c> editor</c><00:00:17.190><c> so</c><00:00:18.180><c> you</c><00:00:18.240><c> may</c><00:00:18.449><c> have</c><00:00:18.630><c> to</c>

00:00:18.769 --> 00:00:18.779 align:start position:0%
inside the editor so you may have to
 

00:00:18.779 --> 00:00:21.529 align:start position:0%
inside the editor so you may have to
invoke<00:00:19.140><c> the</c><00:00:19.410><c> inspections</c><00:00:20.010><c> directly</c><00:00:20.670><c> and</c><00:00:20.910><c> you</c>

00:00:21.529 --> 00:00:21.539 align:start position:0%
invoke the inspections directly and you
 

00:00:21.539 --> 00:00:25.460 align:start position:0%
invoke the inspections directly and you
can<00:00:21.720><c> do</c><00:00:21.869><c> so</c><00:00:22.050><c> by</c><00:00:22.080><c> pressing</c><00:00:22.680><c> alt</c><00:00:22.920><c> shift</c><00:00:23.250><c> I</c><00:00:24.350><c> so</c><00:00:25.350><c> if</c>

00:00:25.460 --> 00:00:25.470 align:start position:0%
can do so by pressing alt shift I so if
 

00:00:25.470 --> 00:00:27.859 align:start position:0%
can do so by pressing alt shift I so if
you<00:00:25.560><c> look</c><00:00:25.740><c> inside</c><00:00:25.890><c> the</c><00:00:26.519><c> inspection</c><00:00:27.330><c> profile</c>

00:00:27.859 --> 00:00:27.869 align:start position:0%
you look inside the inspection profile
 

00:00:27.869 --> 00:00:31.279 align:start position:0%
you look inside the inspection profile
results<00:00:28.500><c> for</c><00:00:28.830><c> this</c><00:00:29.189><c> particular</c><00:00:29.490><c> file</c><00:00:30.289><c> you'll</c>

00:00:31.279 --> 00:00:31.289 align:start position:0%
results for this particular file you'll
 

00:00:31.289 --> 00:00:33.080 align:start position:0%
results for this particular file you'll
see<00:00:31.590><c> that</c><00:00:31.740><c> there</c><00:00:31.980><c> are</c><00:00:32.009><c> a</c><00:00:32.160><c> few</c><00:00:32.219><c> that</c><00:00:32.759><c> are</c><00:00:32.820><c> not</c>

00:00:33.080 --> 00:00:33.090 align:start position:0%
see that there are a few that are not
 

00:00:33.090 --> 00:00:36.860 align:start position:0%
see that there are a few that are not
highlighted<00:00:33.570><c> inside</c><00:00:34.530><c> the</c><00:00:34.710><c> editor</c><00:00:35.719><c> so</c><00:00:36.719><c> there</c>

00:00:36.860 --> 00:00:36.870 align:start position:0%
highlighted inside the editor so there
 

00:00:36.870 --> 00:00:38.720 align:start position:0%
highlighted inside the editor so there
are<00:00:36.960><c> a</c><00:00:36.989><c> few</c><00:00:37.140><c> that</c><00:00:37.260><c> are</c><00:00:37.440><c> I</c><00:00:37.710><c> can</c><00:00:38.190><c> simplify</c><00:00:38.489><c> this</c>

00:00:38.720 --> 00:00:38.730 align:start position:0%
are a few that are I can simplify this
 

00:00:38.730 --> 00:00:42.170 align:start position:0%
are a few that are I can simplify this
if<00:00:39.090><c> condition</c><00:00:39.600><c> for</c><00:00:39.809><c> example</c><00:00:40.700><c> but</c><00:00:41.700><c> let's</c><00:00:41.850><c> say</c>

00:00:42.170 --> 00:00:42.180 align:start position:0%
if condition for example but let's say
 

00:00:42.180 --> 00:00:43.660 align:start position:0%
if condition for example but let's say
let's<00:00:42.480><c> take</c><00:00:42.660><c> a</c><00:00:42.690><c> look</c><00:00:42.870><c> at</c><00:00:42.960><c> some</c><00:00:43.230><c> of</c><00:00:43.350><c> these</c>

00:00:43.660 --> 00:00:43.670 align:start position:0%
let's take a look at some of these
 

00:00:43.670 --> 00:00:47.660 align:start position:0%
let's take a look at some of these
declaration<00:00:44.670><c> redundancies</c><00:00:45.420><c> and</c><00:00:46.219><c> so</c><00:00:47.219><c> it</c><00:00:47.460><c> looks</c>

00:00:47.660 --> 00:00:47.670 align:start position:0%
declaration redundancies and so it looks
 

00:00:47.670 --> 00:00:50.930 align:start position:0%
declaration redundancies and so it looks
like<00:00:48.110><c> this</c><00:00:49.110><c> class</c><00:00:49.379><c> can</c><00:00:49.770><c> be</c><00:00:49.800><c> declared</c><00:00:50.370><c> packaged</c>

00:00:50.930 --> 00:00:50.940 align:start position:0%
like this class can be declared packaged
 

00:00:50.940 --> 00:00:52.959 align:start position:0%
like this class can be declared packaged
local<00:00:51.449><c> and</c><00:00:51.660><c> so</c><00:00:52.260><c> if</c><00:00:52.320><c> I</c><00:00:52.379><c> want</c><00:00:52.530><c> to</c><00:00:52.590><c> apply</c><00:00:52.680><c> that</c>

00:00:52.959 --> 00:00:52.969 align:start position:0%
local and so if I want to apply that
 

00:00:52.969 --> 00:00:55.819 align:start position:0%
local and so if I want to apply that
then<00:00:53.969><c> I</c><00:00:54.120><c> can</c><00:00:54.270><c> just</c><00:00:54.510><c> right</c><00:00:55.110><c> click</c><00:00:55.469><c> and</c><00:00:55.500><c> select</c>

00:00:55.819 --> 00:00:55.829 align:start position:0%
then I can just right click and select
 

00:00:55.829 --> 00:00:58.790 align:start position:0%
then I can just right click and select
make<00:00:56.280><c> class</c><00:00:56.870><c> package</c><00:00:57.870><c> local</c><00:00:58.260><c> since</c><00:00:58.469><c> it</c><00:00:58.590><c> isn't</c>

00:00:58.790 --> 00:00:58.800 align:start position:0%
make class package local since it isn't
 

00:00:58.800 --> 00:01:01.270 align:start position:0%
make class package local since it isn't
being<00:00:58.949><c> used</c><00:00:59.090><c> outside</c><00:01:00.090><c> this</c><00:01:00.270><c> package</c>

00:01:01.270 --> 00:01:01.280 align:start position:0%
being used outside this package
 

00:01:01.280 --> 00:01:04.670 align:start position:0%
being used outside this package
nice<00:01:02.280><c> call</c><00:01:02.550><c> IntelliJ</c><00:01:03.300><c> so</c><00:01:04.170><c> the</c><00:01:04.260><c> second</c><00:01:04.559><c> thing</c>

00:01:04.670 --> 00:01:04.680 align:start position:0%
nice call IntelliJ so the second thing
 

00:01:04.680 --> 00:01:07.130 align:start position:0%
nice call IntelliJ so the second thing
is<00:01:04.860><c> it</c><00:01:04.979><c> uses</c><00:01:05.400><c> the</c><00:01:05.549><c> default</c><00:01:05.729><c> file</c><00:01:06.330><c> template</c><00:01:06.930><c> I</c>

00:01:07.130 --> 00:01:07.140 align:start position:0%
is it uses the default file template I
 

00:01:07.140 --> 00:01:09.830 align:start position:0%
is it uses the default file template I
can<00:01:07.860><c> choose</c><00:01:08.250><c> to</c><00:01:08.280><c> edit</c><00:01:08.909><c> that</c><00:01:09.210><c> template</c><00:01:09.570><c> if</c><00:01:09.689><c> I'd</c>

00:01:09.830 --> 00:01:09.840 align:start position:0%
can choose to edit that template if I'd
 

00:01:09.840 --> 00:01:12.050 align:start position:0%
can choose to edit that template if I'd
like<00:01:10.080><c> using</c><00:01:10.770><c> the</c><00:01:11.010><c> velocity</c><00:01:11.159><c> template</c>

00:01:12.050 --> 00:01:12.060 align:start position:0%
like using the velocity template
 

00:01:12.060 --> 00:01:19.850 align:start position:0%
like using the velocity template
language<00:01:14.689><c> and</c><00:01:17.060><c> once</c><00:01:18.060><c> I</c><00:01:18.180><c> apply</c><00:01:18.270><c> this</c><00:01:18.680><c> then</c><00:01:19.680><c> will</c>

00:01:19.850 --> 00:01:19.860 align:start position:0%
language and once I apply this then will
 

00:01:19.860 --> 00:01:22.760 align:start position:0%
language and once I apply this then will
automatically<00:01:20.759><c> add</c><00:01:21.000><c> that</c><00:01:21.450><c> to</c><00:01:22.320><c> the</c><00:01:22.560><c> file</c>

00:01:22.760 --> 00:01:22.770 align:start position:0%
automatically add that to the file
 

00:01:22.770 --> 00:01:25.160 align:start position:0%
automatically add that to the file
header<00:01:23.070><c> you</c><00:01:23.970><c> can</c><00:01:24.180><c> run</c><00:01:24.479><c> individual</c>

00:01:25.160 --> 00:01:25.170 align:start position:0%
header you can run individual
 

00:01:25.170 --> 00:01:27.380 align:start position:0%
header you can run individual
inspections<00:01:25.740><c> by</c><00:01:25.950><c> name</c><00:01:26.280><c> as</c><00:01:26.520><c> well</c><00:01:26.700><c> by</c><00:01:26.909><c> pressing</c>

00:01:27.380 --> 00:01:27.390 align:start position:0%
inspections by name as well by pressing
 

00:01:27.390 --> 00:01:31.280 align:start position:0%
inspections by name as well by pressing
ctrl<00:01:28.290><c> alt</c><00:01:28.590><c> shift</c><00:01:28.920><c> I</c><00:01:29.610><c> and</c><00:01:30.240><c> then</c><00:01:30.720><c> typing</c><00:01:31.229><c> the</c>

00:01:31.280 --> 00:01:31.290 align:start position:0%
ctrl alt shift I and then typing the
 

00:01:31.290 --> 00:01:33.350 align:start position:0%
ctrl alt shift I and then typing the
name<00:01:31.530><c> of</c><00:01:31.680><c> the</c><00:01:31.770><c> inspection</c><00:01:32.460><c> that</c><00:01:32.640><c> you'd</c><00:01:33.180><c> like</c>

00:01:33.350 --> 00:01:33.360 align:start position:0%
name of the inspection that you'd like
 

00:01:33.360 --> 00:01:40.969 align:start position:0%
name of the inspection that you'd like
to<00:01:33.630><c> invoke</c><00:01:34.320><c> I</c><00:01:38.689><c> can</c><00:01:39.689><c> specify</c><00:01:39.930><c> the</c><00:01:40.229><c> scope</c><00:01:40.680><c> of</c><00:01:40.890><c> the</c>

00:01:40.969 --> 00:01:40.979 align:start position:0%
to invoke I can specify the scope of the
 

00:01:40.979 --> 00:01:44.090 align:start position:0%
to invoke I can specify the scope of the
inspection<00:01:41.670><c> and</c><00:01:41.880><c> configure</c><00:01:42.750><c> any</c><00:01:43.049><c> file</c><00:01:43.770><c> name</c>

00:01:44.090 --> 00:01:44.100 align:start position:0%
inspection and configure any file name
 

00:01:44.100 --> 00:01:47.300 align:start position:0%
inspection and configure any file name
filters<00:01:44.670><c> that</c><00:01:45.060><c> I'd</c><00:01:45.180><c> like</c><00:01:45.390><c> to</c><00:01:45.810><c> add</c><00:01:46.229><c> which</c><00:01:47.159><c> will</c>

00:01:47.300 --> 00:01:47.310 align:start position:0%
filters that I'd like to add which will
 

00:01:47.310 --> 00:01:49.490 align:start position:0%
filters that I'd like to add which will
automatically<00:01:47.850><c> default</c><00:01:48.090><c> to</c><00:01:48.780><c> the</c><00:01:49.020><c> source</c><00:01:49.290><c> code</c>

00:01:49.490 --> 00:01:49.500 align:start position:0%
automatically default to the source code
 

00:01:49.500 --> 00:01:52.730 align:start position:0%
automatically default to the source code
extension<00:01:50.310><c> for</c><00:01:51.240><c> type</c><00:01:51.990><c> of</c><00:01:52.140><c> project</c><00:01:52.560><c> we're</c>

00:01:52.730 --> 00:01:52.740 align:start position:0%
extension for type of project we're
 

00:01:52.740 --> 00:01:54.410 align:start position:0%
extension for type of project we're
using<00:01:52.979><c> let's</c><00:01:53.850><c> take</c><00:01:54.030><c> a</c><00:01:54.060><c> look</c><00:01:54.210><c> at</c><00:01:54.299><c> some</c>

00:01:54.410 --> 00:01:54.420 align:start position:0%
using let's take a look at some
 

00:01:54.420 --> 00:01:57.020 align:start position:0%
using let's take a look at some
inspections<00:01:55.020><c> that</c><00:01:55.320><c> help</c><00:01:56.009><c> us</c><00:01:56.130><c> migrate</c><00:01:56.610><c> between</c>

00:01:57.020 --> 00:01:57.030 align:start position:0%
inspections that help us migrate between
 

00:01:57.030 --> 00:02:00.319 align:start position:0%
inspections that help us migrate between
different<00:01:57.540><c> language</c><00:01:57.869><c> levels</c><00:01:58.200><c> in</c><00:01:58.409><c> Java</c><00:01:59.180><c> so</c><00:02:00.180><c> for</c>

00:02:00.319 --> 00:02:00.329 align:start position:0%
different language levels in Java so for
 

00:02:00.329 --> 00:02:02.780 align:start position:0%
different language levels in Java so for
instance<00:02:00.659><c> here</c><00:02:01.140><c> I</c><00:02:01.290><c> have</c><00:02:01.649><c> the</c><00:02:01.829><c> old</c><00:02:02.100><c> Java</c><00:02:02.490><c> syntax</c>

00:02:02.780 --> 00:02:02.790 align:start position:0%
instance here I have the old Java syntax
 

00:02:02.790 --> 00:02:05.270 align:start position:0%
instance here I have the old Java syntax
for<00:02:03.630><c> declaring</c><00:02:03.930><c> an</c><00:02:04.380><c> anonymous</c><00:02:04.770><c> inner</c><00:02:05.009><c> class</c>

00:02:05.270 --> 00:02:05.280 align:start position:0%
for declaring an anonymous inner class
 

00:02:05.280 --> 00:02:07.580 align:start position:0%
for declaring an anonymous inner class
and<00:02:05.640><c> what</c><00:02:05.939><c> I</c><00:02:05.969><c> can</c><00:02:06.149><c> do</c><00:02:06.299><c> here</c><00:02:06.540><c> is</c><00:02:06.719><c> replace</c><00:02:07.229><c> this</c>

00:02:07.580 --> 00:02:07.590 align:start position:0%
and what I can do here is replace this
 

00:02:07.590 --> 00:02:10.699 align:start position:0%
and what I can do here is replace this
with<00:02:08.280><c> a</c><00:02:08.640><c> lambda</c><00:02:09.270><c> and</c><00:02:09.660><c> so</c><00:02:10.379><c> this</c><00:02:10.530><c> will</c>

00:02:10.699 --> 00:02:10.709 align:start position:0%
with a lambda and so this will
 

00:02:10.709 --> 00:02:13.280 align:start position:0%
with a lambda and so this will
automatically<00:02:11.340><c> refactor</c><00:02:11.970><c> that</c><00:02:12.150><c> for</c><00:02:12.480><c> me</c>

00:02:13.280 --> 00:02:13.290 align:start position:0%
automatically refactor that for me
 

00:02:13.290 --> 00:02:16.520 align:start position:0%
automatically refactor that for me
and<00:02:13.379><c> I</c><00:02:13.530><c> can</c><00:02:13.680><c> expand</c><00:02:14.159><c> this</c><00:02:14.250><c> to</c><00:02:14.730><c> include</c><00:02:15.530><c> an</c>

00:02:16.520 --> 00:02:16.530 align:start position:0%
and I can expand this to include an
 

00:02:16.530 --> 00:02:18.770 align:start position:0%
and I can expand this to include an
expression<00:02:17.099><c> body</c><00:02:17.340><c> as</c><00:02:17.549><c> well</c><00:02:17.819><c> so</c><00:02:18.450><c> this</c><00:02:18.569><c> will</c>

00:02:18.770 --> 00:02:18.780 align:start position:0%
expression body as well so this will
 

00:02:18.780 --> 00:02:21.559 align:start position:0%
expression body as well so this will
just<00:02:18.930><c> add</c><00:02:19.170><c> some</c><00:02:19.439><c> braces</c><00:02:19.890><c> what</c><00:02:20.819><c> I</c><00:02:20.849><c> can</c><00:02:21.030><c> also</c><00:02:21.180><c> do</c>

00:02:21.559 --> 00:02:21.569 align:start position:0%
just add some braces what I can also do
 

00:02:21.569 --> 00:02:25.250 align:start position:0%
just add some braces what I can also do
is<00:02:22.069><c> migrate</c><00:02:23.069><c> away</c><00:02:23.220><c> from</c><00:02:23.400><c> loops</c><00:02:24.329><c> by</c><00:02:24.810><c> using</c><00:02:25.049><c> the</c>

00:02:25.250 --> 00:02:25.260 align:start position:0%
is migrate away from loops by using the
 

00:02:25.260 --> 00:02:28.130 align:start position:0%
is migrate away from loops by using the
new<00:02:25.439><c> streams</c><00:02:25.950><c> in</c><00:02:26.220><c> Java</c><00:02:26.459><c> 8</c><00:02:26.730><c> so</c><00:02:27.659><c> if</c><00:02:27.780><c> I</c><00:02:27.840><c> replace</c>

00:02:28.130 --> 00:02:28.140 align:start position:0%
new streams in Java 8 so if I replace
 

00:02:28.140 --> 00:02:30.589 align:start position:0%
new streams in Java 8 so if I replace
this<00:02:28.470><c> with</c><00:02:28.709><c> a</c><00:02:28.739><c> for</c><00:02:29.340><c> each</c><00:02:29.519><c> loop</c><00:02:29.549><c> then</c><00:02:30.420><c> it'll</c>

00:02:30.589 --> 00:02:30.599 align:start position:0%
this with a for each loop then it'll
 

00:02:30.599 --> 00:02:32.569 align:start position:0%
this with a for each loop then it'll
automatically<00:02:31.049><c> refactor</c><00:02:31.650><c> the</c><00:02:31.769><c> code</c><00:02:31.799><c> to</c><00:02:32.280><c> use</c>

00:02:32.569 --> 00:02:32.579 align:start position:0%
automatically refactor the code to use
 

00:02:32.579 --> 00:02:35.119 align:start position:0%
automatically refactor the code to use
the<00:02:32.610><c> streams</c><00:02:33.239><c> API</c><00:02:33.420><c> another</c><00:02:34.349><c> big</c><00:02:34.530><c> feature</c><00:02:34.680><c> in</c>

00:02:35.119 --> 00:02:35.129 align:start position:0%
the streams API another big feature in
 

00:02:35.129 --> 00:02:38.539 align:start position:0%
the streams API another big feature in
inspections<00:02:35.879><c> are</c><00:02:36.269><c> nullity</c><00:02:37.140><c> inference</c><00:02:37.590><c> and</c><00:02:38.220><c> so</c>

00:02:38.539 --> 00:02:38.549 align:start position:0%
inspections are nullity inference and so
 

00:02:38.549 --> 00:02:42.229 align:start position:0%
inspections are nullity inference and so
if<00:02:39.390><c> you</c><00:02:39.629><c> call</c><00:02:39.930><c> into</c><00:02:40.379><c> some</c><00:02:40.680><c> method</c><00:02:41.129><c> that</c><00:02:41.370><c> may</c>

00:02:42.229 --> 00:02:42.239 align:start position:0%
if you call into some method that may
 

00:02:42.239 --> 00:02:45.110 align:start position:0%
if you call into some method that may
possibly<00:02:42.720><c> return</c><00:02:43.319><c> a</c><00:02:43.379><c> null</c><00:02:43.739><c> or</c><00:02:44.010><c> is</c><00:02:44.519><c> guaranteed</c>

00:02:45.110 --> 00:02:45.120 align:start position:0%
possibly return a null or is guaranteed
 

00:02:45.120 --> 00:02:48.110 align:start position:0%
possibly return a null or is guaranteed
to<00:02:45.150><c> never</c><00:02:45.930><c> return</c><00:02:46.200><c> a</c><00:02:46.500><c> null</c><00:02:46.859><c> then</c><00:02:47.489><c> it</c><00:02:47.670><c> will</c><00:02:47.819><c> warn</c>

00:02:48.110 --> 00:02:48.120 align:start position:0%
to never return a null then it will warn
 

00:02:48.120 --> 00:02:51.199 align:start position:0%
to never return a null then it will warn
me<00:02:48.359><c> of</c><00:02:48.569><c> that</c><00:02:49.230><c> fact</c><00:02:49.609><c> since</c><00:02:50.609><c> this</c><00:02:50.790><c> is</c><00:02:50.970><c> always</c>

00:02:51.199 --> 00:02:51.209 align:start position:0%
me of that fact since this is always
 

00:02:51.209 --> 00:02:54.440 align:start position:0%
me of that fact since this is always
false<00:02:51.810><c> if</c><00:02:52.170><c> we</c><00:02:52.409><c> navigate</c><00:02:53.069><c> into</c><00:02:54.030><c> this</c><00:02:54.180><c> method</c>

00:02:54.440 --> 00:02:54.450 align:start position:0%
false if we navigate into this method
 

00:02:54.450 --> 00:02:55.940 align:start position:0%
false if we navigate into this method
you<00:02:54.720><c> can</c><00:02:54.870><c> see</c><00:02:55.109><c> that</c><00:02:55.260><c> there's</c><00:02:55.409><c> an</c><00:02:55.500><c> annotation</c>

00:02:55.940 --> 00:02:55.950 align:start position:0%
you can see that there's an annotation
 

00:02:55.950 --> 00:02:58.640 align:start position:0%
you can see that there's an annotation
in<00:02:56.310><c> the</c><00:02:56.790><c> gutter</c><00:02:57.000><c> right</c><00:02:57.329><c> this</c><00:02:58.170><c> will</c><00:02:58.349><c> never</c>

00:02:58.640 --> 00:02:58.650 align:start position:0%
in the gutter right this will never
 

00:02:58.650 --> 00:03:02.629 align:start position:0%
in the gutter right this will never
return<00:02:59.099><c> a</c><00:02:59.159><c> null</c><00:02:59.579><c> reference</c><00:03:00.530><c> so</c><00:03:01.530><c> here</c><00:03:02.310><c> the</c><00:03:02.489><c> ID</c>

00:03:02.629 --> 00:03:02.639 align:start position:0%
return a null reference so here the ID
 

00:03:02.639 --> 00:03:05.089 align:start position:0%
return a null reference so here the ID
correctly<00:03:03.329><c> informs</c><00:03:03.840><c> me</c><00:03:04.079><c> that</c><00:03:04.319><c> this</c><00:03:04.769><c> never</c>

00:03:05.089 --> 00:03:05.099 align:start position:0%
correctly informs me that this never
 

00:03:05.099 --> 00:03:07.069 align:start position:0%
correctly informs me that this never
will<00:03:05.340><c> be</c><00:03:05.489><c> null</c><00:03:05.700><c> and</c><00:03:05.849><c> so</c><00:03:06.030><c> I</c><00:03:06.060><c> can</c><00:03:06.269><c> remove</c><00:03:06.569><c> that</c><00:03:06.900><c> if</c>

00:03:07.069 --> 00:03:07.079 align:start position:0%
will be null and so I can remove that if
 

00:03:07.079 --> 00:03:08.289 align:start position:0%
will be null and so I can remove that if
statement<00:03:07.500><c> without</c><00:03:07.590><c> any</c><00:03:07.889><c> concern</c>

00:03:08.289 --> 00:03:08.299 align:start position:0%
statement without any concern
 

00:03:08.299 --> 00:03:11.030 align:start position:0%
statement without any concern
additionally<00:03:09.299><c> if</c><00:03:09.569><c> there's</c><00:03:10.019><c> a</c><00:03:10.139><c> method</c><00:03:10.769><c> that</c>

00:03:11.030 --> 00:03:11.040 align:start position:0%
additionally if there's a method that
 

00:03:11.040 --> 00:03:14.539 align:start position:0%
additionally if there's a method that
never<00:03:11.909><c> expects</c><00:03:12.629><c> the</c><00:03:13.109><c> argument</c><00:03:13.650><c> to</c><00:03:13.769><c> be</c><00:03:13.889><c> no</c><00:03:14.129><c> but</c>

00:03:14.539 --> 00:03:14.549 align:start position:0%
never expects the argument to be no but
 

00:03:14.549 --> 00:03:18.050 align:start position:0%
never expects the argument to be no but
I've<00:03:14.730><c> never</c><00:03:15.450><c> explicitly</c><00:03:16.170><c> told</c><00:03:16.639><c> the</c><00:03:17.639><c> compiler</c>

00:03:18.050 --> 00:03:18.060 align:start position:0%
I've never explicitly told the compiler
 

00:03:18.060 --> 00:03:21.050 align:start position:0%
I've never explicitly told the compiler
that<00:03:18.449><c> just</c><00:03:19.139><c> based</c><00:03:19.530><c> on</c><00:03:19.799><c> the</c><00:03:19.949><c> bytecode</c><00:03:20.160><c> analysis</c>

00:03:21.050 --> 00:03:21.060 align:start position:0%
that just based on the bytecode analysis
 

00:03:21.060 --> 00:03:24.949 align:start position:0%
that just based on the bytecode analysis
the<00:03:21.900><c> IDE</c><00:03:22.169><c> sees</c><00:03:22.530><c> that</c><00:03:22.799><c> the</c><00:03:22.980><c> first</c><00:03:23.480><c> thing</c><00:03:24.480><c> is</c><00:03:24.780><c> to</c>

00:03:24.949 --> 00:03:24.959 align:start position:0%
the IDE sees that the first thing is to
 

00:03:24.959 --> 00:03:28.539 align:start position:0%
the IDE sees that the first thing is to
call<00:03:25.199><c> some</c><00:03:25.500><c> method</c><00:03:25.680><c> on</c><00:03:26.069><c> this</c><00:03:26.970><c> argument</c><00:03:27.569><c> here</c>

00:03:28.539 --> 00:03:28.549 align:start position:0%
call some method on this argument here
 

00:03:28.549 --> 00:03:33.110 align:start position:0%
call some method on this argument here
then<00:03:29.549><c> it</c><00:03:30.239><c> will</c><00:03:30.480><c> tell</c><00:03:30.750><c> me</c><00:03:30.780><c> that</c><00:03:31.699><c> the</c><00:03:32.699><c> argument</c>

00:03:33.110 --> 00:03:33.120 align:start position:0%
then it will tell me that the argument
 

00:03:33.120 --> 00:03:35.869 align:start position:0%
then it will tell me that the argument
that<00:03:33.150><c> I'm</c><00:03:33.299><c> passing</c><00:03:33.840><c> in</c><00:03:34.139><c> is</c><00:03:34.349><c> null</c><00:03:35.099><c> and</c><00:03:35.370><c> I</c><00:03:35.819><c> don't</c>

00:03:35.869 --> 00:03:35.879 align:start position:0%
that I'm passing in is null and I don't
 

00:03:35.879 --> 00:03:37.819 align:start position:0%
that I'm passing in is null and I don't
need<00:03:36.000><c> to</c><00:03:36.060><c> do</c><00:03:36.209><c> anything</c><00:03:36.449><c> in</c><00:03:36.810><c> order</c><00:03:37.079><c> to</c><00:03:37.199><c> get</c><00:03:37.709><c> this</c>

00:03:37.819 --> 00:03:37.829 align:start position:0%
need to do anything in order to get this
 

00:03:37.829 --> 00:03:40.189 align:start position:0%
need to do anything in order to get this
to<00:03:38.040><c> work</c><00:03:38.069><c> so</c><00:03:38.540><c> for</c><00:03:39.540><c> these</c><00:03:39.690><c> and</c><00:03:39.989><c> other</c>

00:03:40.189 --> 00:03:40.199 align:start position:0%
to work so for these and other
 

00:03:40.199 --> 00:03:42.949 align:start position:0%
to work so for these and other
inspections<00:03:40.709><c> inside</c><00:03:41.370><c> your</c><00:03:41.549><c> IDE</c><00:03:42.030><c> you</c><00:03:42.449><c> can</c>

00:03:42.949 --> 00:03:42.959 align:start position:0%
inspections inside your IDE you can
 

00:03:42.959 --> 00:03:47.210 align:start position:0%
inspections inside your IDE you can
configure<00:03:43.410><c> them</c><00:03:43.739><c> on</c><00:03:43.980><c> a</c><00:03:44.040><c> project</c><00:03:44.940><c> or</c><00:03:46.220><c> default</c>

00:03:47.210 --> 00:03:47.220 align:start position:0%
configure them on a project or default
 

00:03:47.220 --> 00:03:49.520 align:start position:0%
configure them on a project or default
level<00:03:47.489><c> and</c><00:03:47.849><c> if</c><00:03:48.780><c> you</c><00:03:48.930><c> can</c><00:03:49.049><c> figure</c><00:03:49.230><c> it</c><00:03:49.319><c> on</c><00:03:49.410><c> the</c>

00:03:49.520 --> 00:03:49.530 align:start position:0%
level and if you can figure it on the
 

00:03:49.530 --> 00:03:52.400 align:start position:0%
level and if you can figure it on the
project<00:03:49.949><c> level</c><00:03:50.280><c> it</c><00:03:50.430><c> will</c><00:03:50.579><c> be</c><00:03:50.609><c> saved</c><00:03:51.410><c> under</c>

00:03:52.400 --> 00:03:52.410 align:start position:0%
project level it will be saved under
 

00:03:52.410 --> 00:03:54.619 align:start position:0%
project level it will be saved under
your<00:03:52.650><c> project</c><00:03:53.160><c> settings</c><00:03:53.400><c> if</c><00:03:54.120><c> you</c><00:03:54.269><c> save</c><00:03:54.449><c> it</c><00:03:54.540><c> on</c>

00:03:54.619 --> 00:03:54.629 align:start position:0%
your project settings if you save it on
 

00:03:54.629 --> 00:03:56.509 align:start position:0%
your project settings if you save it on
a<00:03:54.660><c> default</c><00:03:55.169><c> level</c><00:03:55.349><c> then</c><00:03:55.709><c> they'll</c><00:03:55.949><c> be</c><00:03:56.129><c> saved</c>

00:03:56.509 --> 00:03:56.519 align:start position:0%
a default level then they'll be saved
 

00:03:56.519 --> 00:03:59.390 align:start position:0%
a default level then they'll be saved
with<00:03:57.060><c> your</c><00:03:57.209><c> IDE</c><00:03:57.510><c> settings</c><00:03:57.989><c> so</c><00:03:58.949><c> for</c><00:03:59.159><c> all</c><00:03:59.280><c> of</c>

00:03:59.390 --> 00:03:59.400 align:start position:0%
with your IDE settings so for all of
 

00:03:59.400 --> 00:04:01.339 align:start position:0%
with your IDE settings so for all of
these<00:03:59.519><c> inspections</c><00:04:00.000><c> there</c><00:04:00.540><c> should</c><00:04:00.870><c> be</c><00:04:01.079><c> an</c>

00:04:01.339 --> 00:04:01.349 align:start position:0%
these inspections there should be an
 

00:04:01.349 --> 00:04:04.069 align:start position:0%
these inspections there should be an
explanation<00:04:01.739><c> or</c><00:04:02.340><c> some</c><00:04:03.000><c> sample</c><00:04:03.419><c> code</c><00:04:03.599><c> for</c><00:04:03.959><c> you</c>

00:04:04.069 --> 00:04:04.079 align:start position:0%
explanation or some sample code for you
 

00:04:04.079 --> 00:04:07.250 align:start position:0%
explanation or some sample code for you
to<00:04:04.440><c> try</c><00:04:05.099><c> out</c><00:04:05.359><c> for</c><00:04:06.359><c> more</c><00:04:06.540><c> information</c><00:04:07.079><c> about</c>

00:04:07.250 --> 00:04:07.260 align:start position:0%
to try out for more information about
 

00:04:07.260 --> 00:04:09.319 align:start position:0%
to try out for more information about
hundreds<00:04:07.949><c> of</c><00:04:08.069><c> code</c><00:04:08.250><c> inspections</c><00:04:08.790><c> available</c>

00:04:09.319 --> 00:04:09.329 align:start position:0%
hundreds of code inspections available
 

00:04:09.329 --> 00:04:11.780 align:start position:0%
hundreds of code inspections available
in<00:04:09.449><c> IntelliJ</c><00:04:09.930><c> IDEA</c><00:04:10.260><c> check</c><00:04:11.250><c> out</c><00:04:11.340><c> our</c><00:04:11.519><c> getting</c>

00:04:11.780 --> 00:04:11.790 align:start position:0%
in IntelliJ IDEA check out our getting
 

00:04:11.790 --> 00:04:13.550 align:start position:0%
in IntelliJ IDEA check out our getting
started<00:04:12.180><c> page</c><00:04:12.389><c> and</c><00:04:12.840><c> don't</c><00:04:13.229><c> forget</c><00:04:13.440><c> to</c>

00:04:13.550 --> 00:04:13.560 align:start position:0%
started page and don't forget to
 

00:04:13.560 --> 00:04:16.789 align:start position:0%
started page and don't forget to
subscribe<00:04:13.680><c> to</c><00:04:14.010><c> our</c><00:04:14.370><c> blog</c><00:04:14.669><c> at</c><00:04:15.479><c> log</c><00:04:15.900><c> JetBrains</c>

00:04:16.789 --> 00:04:16.799 align:start position:0%
subscribe to our blog at log JetBrains
 

00:04:16.799 --> 00:04:21.530 align:start position:0%
subscribe to our blog at log JetBrains
comm<00:04:17.549><c> slash</c><00:04:18.539><c> idea</c>

