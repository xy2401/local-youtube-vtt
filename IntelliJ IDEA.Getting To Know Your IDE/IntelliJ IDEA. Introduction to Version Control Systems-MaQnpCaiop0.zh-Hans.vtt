WEBVTT
Kind: captions
Language: zh-Hans

00:00:01.790 --> 00:00:06.690
在本截屏中，我们将看

00:00:05.100 --> 00:00:10.290
如何使用版本控制

00:00:06.690 --> 00:00:13.490
 IntelliJ IDEA内部的系统为此

00:00:10.290 --> 00:00:16.020
例子，我们将使用git 

00:00:13.490 --> 00:00:17.430
 IntelliJ IDEA为完成提供

00:00:16.020 --> 00:00:20.450
您的github存储库（如果您是

00:00:17.430 --> 00:00:23.220
通过IntelliJ IDEA登录到github 

00:00:20.450 --> 00:00:24.990
通常完成是足够聪明的

00:00:23.220 --> 00:00:27.900
识别中间的部分

00:00:24.990 --> 00:00:29.279
您在此演示中寻找的URL 

00:00:27.900 --> 00:00:32.879
我将项目克隆到

00:00:29.279 --> 00:00:35.690
默认位置IntelliJ IDEA 

00:00:32.879 --> 00:00:38.010
意识到这是一个Gradle项目， 

00:00:35.690 --> 00:00:41.040
自动使用Gradle导入

00:00:38.010 --> 00:00:44.430
再次创建新项目的过程

00:00:41.040 --> 00:00:46.650
我们将在此项目中使用默认值

00:00:44.430 --> 00:00:48.479
导入并构建，IntelliJ IDEA 

00:00:46.650 --> 00:00:49.920
自动了解哪个

00:00:48.479 --> 00:00:53.070
源目录和测试目录

00:00:49.920 --> 00:00:54.510
我们做个小小的改动看看

00:00:53.070 --> 00:00:58.199
中的版本控制集成

00:00:54.510 --> 00:01:00.030
这个平方类的动作有方法

00:00:58.199 --> 00:01:02.430
勾勒出来，但他们尚未

00:01:00.030 --> 00:01:04.739
如果我们现在进行测试，则已实施

00:01:02.430 --> 00:01:06.970
对于此类，我们可以启用测试

00:01:04.739 --> 00:01:09.900
用于顶点方法

00:01:06.970 --> 00:01:09.900
并运行它

00:01:10.190 --> 00:01:14.600
预计会失败，因为我们没有

00:01:11.630 --> 00:01:17.000
实现了功能但仍在发展

00:01:14.600 --> 00:01:18.830
回到实施精神

00:01:17.000 --> 00:01:20.300
测试驱动的开发，我们可以做到

00:01:18.830 --> 00:01:22.390
进行测试的最简单的更改

00:01:20.300 --> 00:01:25.540
通过

00:01:22.390 --> 00:01:27.130
现在我们已经进行了这些更改，我们可以

00:01:25.540 --> 00:01:29.980
看到装订线是一种不同的颜色

00:01:27.130 --> 00:01:32.020
我们改变的路线我们也可以

00:01:29.980 --> 00:01:36.010
点击装订线，看到更多有用的

00:01:32.020 --> 00:01:39.540
我们可以例如取消此功能

00:01:36.010 --> 00:01:39.540
如果需要，可以进行具体更改

00:01:40.700 --> 00:01:46.340
我们可以在单独的de中打开更改

00:01:43.159 --> 00:01:48.830
很少，我们可以复制原始代码

00:01:46.340 --> 00:01:52.730
现在我们已经覆盖了

00:01:48.830 --> 00:01:54.140
让我们打开版本控制窗口

00:01:52.730 --> 00:01:57.530
可以从工具窗口进入

00:01:54.140 --> 00:02:03.170
左下角的按钮，或者我们可以使用

00:01:57.530 --> 00:02:05.270
 Alt + 9或Command + 9在此处打开

00:02:03.170 --> 00:02:07.670
默认更改列表显示以下列表

00:02:05.270 --> 00:02:09.020
我们已更改的所有文件，我们可以

00:02:07.670 --> 00:02:12.650
查看尚未的任何新文件

00:02:09.020 --> 00:02:14.240
添加到版本控制中，但我们可以

00:02:12.650 --> 00:02:17.240
通过右键单击提交这些更改

00:02:14.240 --> 00:02:19.430
并选择提交，或者我们可以使用ctrl 

00:02:17.240 --> 00:02:22.820
 K或Command键打开提交

00:02:19.430 --> 00:02:25.520
对话框提交对话框显示文件

00:02:22.820 --> 00:02:28.960
我们已经更改，并且我们有任何新文件

00:02:25.520 --> 00:02:28.960
创建了我们可能想要添加的

00:02:30.030 --> 00:02:34.620
我们可以启用文件的倾斜视图

00:02:31.830 --> 00:02:36.270
底部发生了变化，我们

00:02:34.620 --> 00:02:38.910
可以循环浏览所有更改以查看

00:02:36.270 --> 00:02:41.520
如果他们还可以，我们可以输入一次提交

00:02:38.910 --> 00:02:43.900
消息和IntelliJ IDEA甚至

00:02:41.520 --> 00:02:46.269
在这里检查我们的拼写

00:02:43.900 --> 00:02:47.739
在右边有一些

00:02:46.269 --> 00:02:51.129
可以应用的自动步骤

00:02:47.739 --> 00:02:53.830
在我们提交之前，我们可以重新格式化或

00:02:51.129 --> 00:02:56.370
重新排列我们的代码，我们可以优化

00:02:53.830 --> 00:02:58.840
我要选择做的进口

00:02:56.370 --> 00:03:01.269
我们可以分析代码的潜力

00:02:58.840 --> 00:03:03.579
问题并检查是否有待办事项

00:03:01.269 --> 00:03:05.470
应该已经解决了，我要去

00:03:03.579 --> 00:03:06.700
我想把这两个都关掉

00:03:05.470 --> 00:03:09.069
提交过程尽可能快

00:03:06.700 --> 00:03:10.360
我们也可以自动清理

00:03:09.069 --> 00:03:12.730
被发现的问题

00:03:10.360 --> 00:03:15.700
我们的检查并更新任何版权

00:03:12.730 --> 00:03:18.700
现在发送文本，它可以提交我们的所有更改

00:03:15.700 --> 00:03:20.379
我们可以看到不再有

00:03:18.700 --> 00:03:24.670
默认更改列表中的已更改文件

00:03:20.379 --> 00:03:26.579
但是如果我们确实在版本文件上有一个

00:03:24.670 --> 00:03:28.900
将此文件添加到我们的git ignore文件中

00:03:26.579 --> 00:03:30.909
将会看到它不再出现在

00:03:28.900 --> 00:03:33.290
我们的本地变更视图，我们不会

00:03:30.909 --> 00:03:35.700
提示将其添加以获取

00:03:33.290 --> 00:03:38.209
另一个有用的功能是

00:03:35.700 --> 00:03:42.299
查看特定文件的获取历史记录

00:03:38.209 --> 00:03:44.129
我们可以看到每个修订的底线， 

00:03:42.299 --> 00:03:47.519
我们甚至可以将任何修订与

00:03:44.129 --> 00:03:48.930
当前版本可能是最

00:03:47.519 --> 00:03:52.379
使用版本的有用视图

00:03:48.930 --> 00:03:55.170
控制系统是您的日志视图

00:03:52.379 --> 00:03:57.900
可以看到作者和所有的修订

00:03:55.170 --> 00:04:00.930
这些修订的日期文件

00:03:57.900 --> 00:04:03.530
组成修订并看到差异

00:04:00.930 --> 00:04:03.530
对于那个文件

00:04:04.180 --> 00:04:08.709
就我们而言，我们可以看到我们的主人

00:04:07.299 --> 00:04:11.500
分支是前面的两个提交

00:04:08.709 --> 00:04:14.410
我们要推送的远程主分支

00:04:11.500 --> 00:04:17.140
那些更改到遥控器

00:04:14.410 --> 00:04:20.650
我们可以通过推菜单来做到这一点

00:04:17.140 --> 00:04:22.730
项目或使用变速控制K或变速

00:04:20.650 --> 00:04:25.700
命令K 

00:04:22.730 --> 00:04:28.040
在推送对话框中，我们可以选择一个

00:04:25.700 --> 00:04:31.400
远程推送到我们的情况下，我们只

00:04:28.040 --> 00:04:33.050
有一个，所以我们将其保留原样

00:04:31.400 --> 00:04:37.030
也可以选择推送到其他

00:04:33.050 --> 00:04:40.430
再次分支，我们将其保留为主

00:04:37.030 --> 00:04:41.750
也可以强行推动，但

00:04:40.430 --> 00:04:43.730
我们在master分支上

00:04:41.750 --> 00:04:47.960
保护分支不受强制推动

00:04:43.730 --> 00:04:50.660
现在默认，我们推送更改，我们

00:04:47.960 --> 00:04:53.120
可以看到这是成功的，让我们来看看

00:04:50.660 --> 00:04:54.710
在稍微高级的功能上

00:04:53.120 --> 00:04:56.600
分支菜单向我们显示哪个分支

00:04:54.710 --> 00:04:59.090
我们正在为您提供帮助

00:04:56.600 --> 00:05:01.610
与分支机构合作，我们可以创建一个

00:04:59.090 --> 00:05:03.530
如果需要，可以从这里创建新分支

00:05:01.610 --> 00:05:05.750
可以在日志视图中选择任何提交

00:05:03.530 --> 00:05:07.940
当我们右键单击并选择新

00:05:05.750 --> 00:05:11.930
分支，我们可以创建一个分支

00:05:07.940 --> 00:05:13.850
默认情况下，IntelliJ IDEA将进行修订

00:05:11.930 --> 00:05:15.080
签出新的分支，所以如果你

00:05:13.850 --> 00:05:18.410
不想在新的

00:05:15.080 --> 00:05:19.940
分支，您现在需要取消选中此框

00:05:18.410 --> 00:05:22.220
我们已经创建并签出了新的

00:05:19.940 --> 00:05:25.100
分支，我们可以开发一些新功能

00:05:22.220 --> 00:05:26.930
在这个分支上，我们将要实施

00:05:25.100 --> 00:05:28.820
圆形的顶点特征

00:05:26.930 --> 00:05:32.570
按照与我们相同的过程进行分支

00:05:28.820 --> 00:05:35.330
做正方形，我们进行测试，使

00:05:32.570 --> 00:05:37.070
更改并重新运行测试

00:05:35.330 --> 00:05:40.340
让我们探讨一下

00:05:37.070 --> 00:05:44.270
提交对话框，我们可以重用旧的提交

00:05:40.340 --> 00:05:46.100
消息并编辑它，如果我们希望可以的话

00:05:44.270 --> 00:05:48.320
还承诺并推动我们的改变

00:05:46.100 --> 00:05:52.330
动作，我们可以使用键盘来做到这一点

00:05:48.320 --> 00:05:54.770
快捷键ctrl Alt键或alt命令+ K 

00:05:52.330 --> 00:05:57.350
 IntelliJ IDEA向我们展示了这一点

00:05:54.770 --> 00:06:00.080
遥控器上的新分支

00:05:57.350 --> 00:06:01.550
完成此操作后，我们的日志视图将显示

00:06:00.080 --> 00:06:04.340
新分支和我们所有的提交

00:06:01.550 --> 00:06:05.990
分支，我们可以切换回

00:06:04.340 --> 00:06:08.180
右键点击主分支

00:06:05.990 --> 00:06:12.830
分支名称选择主分支

00:06:08.180 --> 00:06:14.270
菜单项，然后单击立即结帐

00:06:12.830 --> 00:06:17.750
我们可以继续进行更改

00:06:14.270 --> 00:06:20.660
通过以下方式支持我们的正方形功能

00:06:17.750 --> 00:06:23.900
通过测试，我们将这些更改提交给

00:06:20.660 --> 00:06:25.310
我们的分支是主人，当我们

00:06:23.900 --> 00:06:28.730
查看日志，我们可以看到大师

00:06:25.310 --> 00:06:30.020
分支使用我们的新提交更新

00:06:28.730 --> 00:06:32.120
可以在日志视图中看到

00:06:30.020 --> 00:06:34.850
提交到两个分支master和

00:06:32.120 --> 00:06:37.010
如果现在我们现在圈子变化

00:06:34.850 --> 00:06:38.360
想要合并我们的圈子更改，我们可以

00:06:37.010 --> 00:06:40.520
右键单击我们想要的分支

00:06:38.360 --> 00:06:44.410
合并确保正确

00:06:40.520 --> 00:06:46.760
分支并选择合并到当前

00:06:44.410 --> 00:06:48.530
 IntelliJ IDEA执行合并和

00:06:46.760 --> 00:06:50.510
让我们知道我们不需要

00:06:48.530 --> 00:06:53.780
圈子不再更改分支并提供

00:06:50.510 --> 00:06:56.180
删除该分支时将其删除

00:06:53.780 --> 00:06:58.910
我们也可以删除远程圈子

00:06:56.180 --> 00:07:00.620
更改分支，以便IntelliJ IDEA实现

00:06:58.910 --> 00:07:03.640
方便我们清理不必要的东西

00:07:00.620 --> 00:07:03.640
分支随着我们走

00:07:04.169 --> 00:07:08.249
现在我们对

00:07:06.270 --> 00:07:11.759
我们的班级，我们可以看到另一个好地方

00:07:08.249 --> 00:07:13.740
 IntelliJ IDEA中的功能针对其中的任何文件

00:07:11.759 --> 00:07:16.620
版本控制，我们可以右键单击

00:07:13.740 --> 00:07:18.060
装订线并选择对此进行注释

00:07:16.620 --> 00:07:19.819
显示作者和日期

00:07:18.060 --> 00:07:22.139
文件中每一行的最后更改

00:07:19.819 --> 00:07:23.759
将鼠标悬停在其中之一上将显示

00:07:22.139 --> 00:07:26.669
更多信息，包括提交

00:07:23.759 --> 00:07:29.300
消息双击将显示全部

00:07:26.669 --> 00:07:31.889
在提交期间更改的文件

00:07:29.300 --> 00:07:34.860
右键单击并再次选择注释

00:07:31.889 --> 00:07:37.139
关闭注释，这是我们的最后一步

00:07:34.860 --> 00:07:39.509
让我们将所有更改推送到主

00:07:37.139 --> 00:07:42.719
远程和日志视图显示

00:07:39.509 --> 00:07:44.490
现在一切都保持最新状态，您可以看到

00:07:42.719 --> 00:07:46.770
 IntelliJ与版本集成

00:07:44.490 --> 00:07:48.120
像git这样的控制系统旨在

00:07:46.770 --> 00:07:50.669
使开发人员易于工作

00:07:48.120 --> 00:07:53.180
有效地进行源代码控制谢谢

00:07:50.669 --> 00:07:53.180
观看

00:07:58.490 --> 00:08:00.550
您

