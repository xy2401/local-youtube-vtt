WEBVTT
Kind: captions
Language: zh-Hans

00:00:03.950 --> 00:00:08.639
 IntelliJ IDEA具有搜索功能

00:00:06.300 --> 00:00:10.530
用于并替换中的特定结构

00:00:08.639 --> 00:00:12.480
代码，我们将看看这个

00:00:10.530 --> 00:00:14.610
功能并查看其功能和时间

00:00:12.480 --> 00:00:17.310
您可以使用它，您可以找到

00:00:14.610 --> 00:00:20.369
编辑下的结构搜索

00:00:17.310 --> 00:00:22.019
从结构上来说是最简单的方法

00:00:20.369 --> 00:00:23.519
开始是寻找现有的

00:00:22.019 --> 00:00:26.189
符合代码种类的模板

00:00:23.519 --> 00:00:28.349
您正在寻找有很多

00:00:26.189 --> 00:00:30.179
我们将要搜索的标准搜索

00:00:28.349 --> 00:00:32.269
对于所有字段声明，就像

00:00:30.179 --> 00:00:32.269
例

00:00:32.519 --> 00:00:37.710
运行搜索将向您显示所有

00:00:34.510 --> 00:00:40.020
 Java代码中声明的字段

00:00:37.710 --> 00:00:41.910
让我们使用find动作打开

00:00:40.020 --> 00:00:45.570
这次进行结构化搜索，因此我们不会

00:00:41.910 --> 00:00:46.980
必须使用菜单，我们可以更改

00:00:45.570 --> 00:00:50.040
预定义模板以完善我们的

00:00:46.980 --> 00:00:52.860
搜索，让我们更新此内容以查找所有内容

00:00:50.040 --> 00:00:55.440
最后的字段请注意代码完成

00:00:52.860 --> 00:00:57.629
在这里我们要搜索

00:00:55.440 --> 00:00:59.280
通过我们想要的所有代码递归

00:00:57.629 --> 00:01:01.739
以匹配我们的模板值的大小写

00:00:59.280 --> 00:01:03.030
我们将在Java代码中进行搜索，但是

00:01:01.739 --> 00:01:05.470
我们可以选择

00:01:03.030 --> 00:01:07.720
整个文件类型

00:01:05.470 --> 00:01:10.570
我们还可以定义搜索范围

00:01:07.720 --> 00:01:12.040
注意IntelliJ IDEA可以告诉我们

00:01:10.570 --> 00:01:15.280
如果我们的模式不正确

00:01:12.040 --> 00:01:16.870
在我们要去的特定模块中找到

00:01:15.280 --> 00:01:19.740
改变范围只看一个

00:01:16.870 --> 00:01:22.270
单个模块以缩小我们的搜索范围

00:01:19.740 --> 00:01:25.080
现在我们的搜索结果显示所有最终的

00:01:22.270 --> 00:01:26.950
标准Java模块中的字段

00:01:25.080 --> 00:01:28.600
结构搜索功能非常强大

00:01:26.950 --> 00:01:30.909
工具，我们可以配置一些

00:01:28.600 --> 00:01:34.370
有趣的搜索

00:01:30.909 --> 00:01:36.740
这次让我们寻找方法调用

00:01:34.370 --> 00:01:38.600
如果我们按原样运行此搜索

00:01:36.740 --> 00:01:41.300
将返回很多结果，但不会

00:01:38.600 --> 00:01:42.590
在这里我们可以做很多有用的事情

00:01:41.300 --> 00:01:46.070
使用过滤器来更具体

00:01:42.590 --> 00:01:48.350
如果我们添加一个

00:01:46.070 --> 00:01:51.110
文本过滤器在这里我们可以定义名称

00:01:48.350 --> 00:01:52.610
我们正在寻找的方法

00:01:51.110 --> 00:01:55.850
寻找对称为的方法的任何调用

00:01:52.610 --> 00:01:58.490
打印'实际上只有一个

00:01:55.850 --> 00:02:00.530
代码库我们真正想要的是找到

00:01:58.490 --> 00:02:03.380
以任何开头的方法的所有调用

00:02:00.530 --> 00:02:05.510
文字印刷结构搜索

00:02:03.380 --> 00:02:07.070
支持正则表达式，所以我们可以

00:02:05.510 --> 00:02:09.080
使用它来更改标准

00:02:07.070 --> 00:02:11.470
方法名称可以是任何开始的方法

00:02:09.080 --> 00:02:11.470
带印刷

00:02:12.310 --> 00:02:18.510
我们这里有96个比赛，其中包括

00:02:15.430 --> 00:02:22.210
 system.out.print行很多

00:02:18.510 --> 00:02:24.370
还有其他方法，例如printf 

00:02:22.210 --> 00:02:25.600
我们可能会决定排除printf类型

00:02:24.370 --> 00:02:28.480
方法不止一个

00:02:25.600 --> 00:02:30.160
参数，因此我们将搜索更改为

00:02:28.480 --> 00:02:32.280
寻找只需要一个步骤的方法

00:02:30.160 --> 00:02:32.280
参数

00:02:33.819 --> 00:02:39.080
现在我们的搜索结果更少了

00:02:37.220 --> 00:02:40.460
假设我们正在搜索

00:02:39.080 --> 00:02:42.170
因为我们要替换所有这些

00:02:40.460 --> 00:02:45.140
使用记录器呼叫集的呼叫

00:02:42.170 --> 00:02:48.500
记录器方法仅采用的系统

00:02:45.140 --> 00:02:50.150
字符串值没有其他类型，因此顺序

00:02:48.500 --> 00:02:52.760
查找可以替换的方法

00:02:50.150 --> 00:02:54.260
通过日志调用轻松找到我们

00:02:52.760 --> 00:02:58.130
只有通过的方法

00:02:54.260 --> 00:02:59.570
字符串，我们可以通过更改

00:02:58.130 --> 00:03:00.680
我们正在搜索的参数类型

00:02:59.570 --> 00:03:03.700
对于

00:03:00.680 --> 00:03:03.700
到一个字符串

00:03:04.200 --> 00:03:08.190
现在我们只看到需要

00:03:06.390 --> 00:03:10.970
字符串类型，是否为文字

00:03:08.190 --> 00:03:13.379
字符串或字符串类型的变量

00:03:10.970 --> 00:03:17.099
我们已经完善了我们的结果，我们可以做到

00:03:13.379 --> 00:03:18.930
使用查找动作进行替换

00:03:17.099 --> 00:03:22.310
在结构上取代

00:03:18.930 --> 00:03:22.310
可以从精致菜单中获得

00:03:22.590 --> 00:03:28.430
我们可以说我们想要哪个代码

00:03:24.989 --> 00:03:30.660
如果我们勾选这些框，请替换为

00:03:28.430 --> 00:03:34.620
该代码将被简化， 

00:03:30.660 --> 00:03:36.599
进入文件时格式化

00:03:34.620 --> 00:03:39.140
替换框也有代码完成和

00:03:36.599 --> 00:03:39.140
建议

00:03:40.630 --> 00:03:44.920
搜索结果提供了预览

00:03:42.610 --> 00:03:46.420
哪些代码将被替换，我们可以

00:03:44.920 --> 00:03:51.180
用我们的替换单个结果

00:03:46.420 --> 00:03:53.620
新代码或替换所有结果

00:03:51.180 --> 00:03:55.000
看着这堂课，我们可以看到所有

00:03:53.620 --> 00:03:56.680
打印采用字符串的学习方法

00:03:55.000 --> 00:03:59.070
已被调用日志代替，或

00:03:56.680 --> 00:03:59.070
精细

00:04:00.050 --> 00:04:05.010
但是那些拿了对象或原始的东西

00:04:01.970 --> 00:04:06.959
值没有被触及

00:04:05.010 --> 00:04:08.310
这些可以用替换

00:04:06.959 --> 00:04:11.700
从一个地方进行结构搜索

00:04:08.310 --> 00:04:13.319
更适合这些方法

00:04:11.700 --> 00:04:15.060
结构搜索框显示所有

00:04:13.319 --> 00:04:18.199
搜索您过去执行过的操作，因此

00:04:15.060 --> 00:04:18.199
您可以重新运行其中任何一个

00:04:19.760 --> 00:04:24.950
我们还可以将搜索保存为

00:04:21.890 --> 00:04:28.540
模板给他们合适的

00:04:24.950 --> 00:04:28.540
名称，以便以后使用

00:04:29.569 --> 00:04:34.620
我们可以在下面找到这些保存模板

00:04:31.909 --> 00:04:36.960
用户定义的部分

00:04:34.620 --> 00:04:39.449
如您所见，结构搜索是

00:04:36.960 --> 00:04:40.889
功能强大且可配置性很好

00:04:39.449 --> 00:04:42.389
理解可能的方式

00:04:40.889 --> 00:04:44.520
弄清楚如何执行搜索

00:04:42.389 --> 00:04:46.530
您需要看的是现有的

00:04:44.520 --> 00:04:47.790
模板查看过滤器的状态

00:04:46.530 --> 00:04:49.489
定义并尝试改变

00:04:47.790 --> 00:04:52.229
他们

00:04:49.489 --> 00:04:54.269
如我们所见，过滤支持文本和类型

00:04:52.229 --> 00:04:57.449
但它们也支持脚本

00:04:54.269 --> 00:04:58.979
提供更大的灵活性

00:04:57.449 --> 00:05:01.379
如使用结构搜索和

00:04:58.979 --> 00:05:03.089
尽我们所能替换功能

00:05:01.379 --> 00:05:06.009
也使用这些搜索模板来

00:05:03.089 --> 00:05:08.650
创建我们自己的自定义检查

00:05:06.009 --> 00:05:10.689
为此，我们需要打开

00:05:08.650 --> 00:05:12.550
一般结构搜索检查和

00:05:10.689 --> 00:05:15.219
通过搜索进行配置

00:05:12.550 --> 00:05:18.580
模板，将仅标记特定的

00:05:15.219 --> 00:05:20.080
代码或替换模板

00:05:18.580 --> 00:05:22.680
建议替换代码

00:05:20.080 --> 00:05:25.029
我们将使用与以前相同的模板

00:05:22.680 --> 00:05:29.050
但略微更改以寻找

00:05:25.029 --> 00:05:31.360
在代码时打印int的实例

00:05:29.050 --> 00:05:33.699
像这样找到我们可以替换它

00:05:31.360 --> 00:05:37.180
与记录器调用并转换

00:05:33.699 --> 00:05:38.439
此新模板的字符串参数

00:05:37.180 --> 00:05:41.800
名称将在

00:05:38.439 --> 00:05:43.509
检查发现与我们匹配的代码

00:05:41.800 --> 00:05:46.229
可以启用所有

00:05:43.509 --> 00:05:48.610
是时候在我们编辑时显示尽可能多的代码了

00:05:46.229 --> 00:05:50.649
或者我们可以专门运行

00:05:48.610 --> 00:05:53.289
检查当前模块以

00:05:50.649 --> 00:05:56.499
查看匹配的代码在哪里

00:05:53.289 --> 00:05:57.909
与任何检查一样，我们可以修复

00:05:56.499 --> 00:06:00.479
通过检查结果的代码

00:05:57.909 --> 00:06:00.479
窗口

00:06:00.580 --> 00:06:05.979
或者我们可以快速解决问题

00:06:02.680 --> 00:06:07.870
编辑器IntelliJ IDE功能强大

00:06:05.979 --> 00:06:09.909
结构搜索和替换可以

00:06:07.870 --> 00:06:14.639
配置为查找并替换复杂

00:06:09.909 --> 00:06:14.639
代码中的模式感谢您的观看

00:06:19.390 --> 00:06:21.450
您

