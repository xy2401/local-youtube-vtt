WEBVTT
Kind: captions
Language: zh-Hans

00:00:01.850 --> 00:00:06.839
这部短片的目的是

00:00:04.380 --> 00:00:08.849
显示如何设置IntelliJ IDEA 

00:00:06.839 --> 00:00:12.840
 skaaland的开发环境

00:00:08.849 --> 00:00:15.360
发展的前提是你

00:00:12.840 --> 00:00:19.529
已经有合适的Java开发

00:00:15.360 --> 00:00:22.439
套件或适用于您平台的Java SDK，以及

00:00:19.529 --> 00:00:25.080
 IntelliJ IDEA本身的安装

00:00:22.439 --> 00:00:27.810
我们在这里使用社区版

00:00:25.080 --> 00:00:31.050
启动后的第一件事是检查

00:00:27.810 --> 00:00:34.320
更新，在这里我们很好

00:00:31.050 --> 00:00:38.460
下一步是安装所需的

00:00:34.320 --> 00:00:42.090
插件，因此我们将转到首选项

00:00:38.460 --> 00:00:45.570
向下滚动到插件并浏览

00:00:42.090 --> 00:00:48.570
存储库我们将使用的第一个插件

00:00:45.570 --> 00:00:51.840
抓取不是严格要求的，但会

00:00:48.570 --> 00:00:55.320
经常使用大桶，所以让我们抓住

00:00:51.840 --> 00:00:57.829
右键点击下载， 

00:00:55.320 --> 00:00:57.829
安装

00:01:10.050 --> 00:01:20.100
下一个是Scala插件

00:01:14.910 --> 00:01:23.790
本身就单击该鼠标右键

00:01:20.100 --> 00:01:34.470
下载并安装这有点

00:01:23.790 --> 00:01:36.900
下载时间更长，因此假设是

00:01:34.470 --> 00:01:40.500
你会关闭

00:01:36.900 --> 00:01:44.820
插件的存储库浏览器和

00:01:40.500 --> 00:01:48.530
然后允许IDE重新启动，并且

00:01:44.820 --> 00:01:52.590
下一步是创建一个新项目， 

00:01:48.530 --> 00:01:55.290
我们想要一个SBT项目SBT是Scala 

00:01:52.590 --> 00:01:57.840
简单的构建工具，使我们能够

00:01:55.290 --> 00:02:00.810
创建一个有成长空间的项目

00:01:57.840 --> 00:02:02.520
外部依赖项的条款，我们将

00:02:00.810 --> 00:02:07.460
放在我们合适的地方

00:02:02.520 --> 00:02:07.460
目录层次结构，并完成

00:02:09.950 --> 00:02:20.720
我们可以关闭工具提示和第一个

00:02:15.660 --> 00:02:25.320
要做的是创建一个合适的

00:02:20.720 --> 00:02:29.220
通过单击

00:02:25.320 --> 00:02:33.450
你好项目节点新目录，我们

00:02:29.220 --> 00:02:40.140
可以创建整个层次结构源

00:02:33.450 --> 00:02:43.350
一步一步完成主Scala 

00:02:40.140 --> 00:02:45.390
这是Scala目录的第一次

00:02:43.350 --> 00:02:46.950
可能不会以浅蓝色显示

00:02:45.390 --> 00:02:52.070
您可能要等到那

00:02:46.950 --> 00:02:55.170
发生，然后右键单击“新建”，然后

00:02:52.070 --> 00:02:58.320
如果看不到，请选择Scala类

00:02:55.170 --> 00:03:02.120
 Scala类，您将需要等待

00:02:58.320 --> 00:03:06.450
直到它处理

00:03:02.120 --> 00:03:08.070
插件并索引属于的jar 

00:03:06.450 --> 00:03:10.500
插件，所以假设我们将创建

00:03:08.070 --> 00:03:14.100
 Scala类实际上需要一个

00:03:10.500 --> 00:03:16.739
对象，让我们打个招呼， 

00:03:14.100 --> 00:03:20.190
我们将把它变成最简单的

00:03:16.739 --> 00:03:23.430
可能的Scala应用程序，因此我们将在此处添加

00:03:20.190 --> 00:03:28.469
扩展应用程序并放置为

00:03:23.430 --> 00:03:32.909
身体println你好，我们应该

00:03:28.469 --> 00:03:39.000
很好，所以现在让我们尝试运行此

00:03:32.909 --> 00:03:42.659
右键点击您好，我们

00:03:39.000 --> 00:03:46.170
还没有看到可以做到这一点的项目

00:03:42.659 --> 00:03:51.170
因为我们仍然需要添加一个JDK这样

00:03:46.170 --> 00:03:54.930
让我们转到文件项目结构， 

00:03:51.170 --> 00:03:58.409
我们在这里看到没有一个项目

00:03:54.930 --> 00:04:01.099
 SDK，如果您不这样做，我们该怎么办

00:03:58.409 --> 00:04:05.489
在此下拉列表中查看有效的SDK 

00:04:01.099 --> 00:04:12.000
我们将要创建一个新条目

00:04:05.489 --> 00:04:14.760
对于新的Java 6 SDK，我们将希望

00:04:12.000 --> 00:04:18.840
导航到相应的Java主页

00:04:14.760 --> 00:04:29.310
在您的计算机上，因此在Mac上

00:04:18.840 --> 00:04:34.440
将是Java的家，让我们尝试一下

00:04:29.310 --> 00:04:38.159
这为我们提供了默认的1.6 Java 

00:04:34.440 --> 00:04:43.520
 Mac上的SDK让我们看看这些

00:04:38.159 --> 00:04:53.789
应用后将修复的错误

00:04:43.520 --> 00:04:56.330
这种变化，现在它在某些地方重新索引

00:04:53.789 --> 00:04:56.330
罐子里

00:05:05.559 --> 00:05:10.779
现在我们应该很好走

00:05:08.649 --> 00:05:11.799
再次右键单击，实际上现在它说

00:05:10.779 --> 00:05:17.439
打个招呼

00:05:11.799 --> 00:05:21.489
让我们尝试一下，有一点

00:05:17.439 --> 00:05:24.549
错误，这是Scala中的错误

00:05:21.489 --> 00:05:29.139
据我所知，该插件

00:05:24.549 --> 00:05:33.089
解决方法是创建丢失的

00:05:29.139 --> 00:05:37.929
第一次手动输出目录

00:05:33.089 --> 00:05:44.069
所以我们将按照下面的说明进行创建

00:05:37.929 --> 00:05:44.069
目标斜线扇贝2.10斜线类

00:05:45.209 --> 00:05:57.219
所以您好新目录目标Scala-2 

00:05:52.989 --> 00:06:01.359
 。 n个斜杠类，可能还有另一个

00:05:57.219 --> 00:06:11.469
我们可能会出现的错误消息

00:06:01.359 --> 00:06:13.889
忽略让我们检查并尝试运行你好

00:06:11.469 --> 00:06:13.889
再次

00:06:40.910 --> 00:06:49.220
它在这里起作用了

00:06:44.710 --> 00:06:53.990
好的，我们成功创建了一个

00:06:49.220 --> 00:06:56.090
非常简单的Scala应用项目，我们

00:06:53.990 --> 00:06:58.550
能够执行该项目，所以这

00:06:56.090 --> 00:07:02.750
解决方法仅在第一时间是必要的

00:06:58.550 --> 00:07:05.060
你建立项目的时间还可以

00:07:02.750 --> 00:07:07.870
我想说明的另一件事是

00:07:05.060 --> 00:07:11.210
有用的Scala工作表

00:07:07.870 --> 00:07:13.460
玩转的机制

00:07:11.210 --> 00:07:17.060
代码，然后再使其成为

00:07:13.460 --> 00:07:23.180
实际的应用程序或库，因此我们可以创建一个

00:07:17.060 --> 00:07:37.670
新的Scala工作表，我们将仅致电

00:07:23.180 --> 00:07:41.270
你好-在这里我们可以写

00:07:37.670 --> 00:07:49.810
一些Java代码，例如Val X为3 

00:07:41.270 --> 00:07:49.810
然后是X，现在我们可以说运行

00:07:55.290 --> 00:08:01.440
它只是执行所有的代码

00:07:57.990 --> 00:08:04.650
工作表，所以您在这里看到它是

00:08:01.440 --> 00:08:08.480
能够定义X然后评估X 

00:08:04.650 --> 00:08:11.190
它只是评估该表达式， 

00:08:08.480 --> 00:08:14.850
返回结果值，所以如果我们

00:08:11.190 --> 00:08:22.950
更改表达式，我们可以重新执行

00:08:14.850 --> 00:08:26.970
工作表和明矾更新

00:08:22.950 --> 00:08:28.920
相应地表达，所以我们可以

00:08:26.970 --> 00:08:39.570
可能在这里有多个表达式

00:08:28.920 --> 00:08:41.250
让我们尝试一下，所以基本上你知道

00:08:39.570 --> 00:08:44.160
您可以继续修改它， 

00:08:41.250 --> 00:08:46.830
实验一下，一旦你的代码

00:08:44.160 --> 00:08:49.080
准备将片段合并

00:08:46.830 --> 00:08:55.200
进入实际项目，您可以

00:08:49.080 --> 00:08:57.870
复制并粘贴这些就可以了

00:08:55.200 --> 00:09:01.260
现在，我认为这将帮助您获得

00:08:57.870 --> 00:09:04.910
开始，我们会再回来的

00:09:01.260 --> 00:09:04.910
很快就会有进阶的东西

