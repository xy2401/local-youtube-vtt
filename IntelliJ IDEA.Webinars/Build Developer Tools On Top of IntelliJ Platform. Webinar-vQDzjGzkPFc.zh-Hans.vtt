WEBVTT
Kind: captions
Language: zh-Hans

00:00:04.600 --> 00:00:08.230
我的名字叫迪米特罗将军城

00:00:06.640 --> 00:00:10.330
我参与了JetBrains的工作

00:00:08.230 --> 00:00:12.070
智能平台可能来自

00:00:10.330 --> 00:00:15.190
它作为一个存在的开始

00:00:12.070 --> 00:00:17.110
独立的实体，今天我要去

00:00:15.190 --> 00:00:19.630
告诉我谈谈你的情况

00:00:17.110 --> 00:00:21.310
可以作为插件开发人员或产品

00:00:19.630 --> 00:00:25.079
开发人员可以利用IntelliJ 

00:00:21.310 --> 00:00:25.079
建立自己的东西的平台

00:00:25.529 --> 00:00:30.759
甚至卖掉它并赚很多

00:00:28.329 --> 00:00:32.619
钱，所以首先

00:00:30.759 --> 00:00:34.480
不是一个智能平台

00:00:32.619 --> 00:00:36.309
这种形式实际上是

00:00:34.480 --> 00:00:39.550
我们建立的所有想法

00:00:36.309 --> 00:00:42.340
它是从IntelliJ IDEA中提取的

00:00:39.550 --> 00:00:44.440
 IDE，并变得更加通用和重构

00:00:42.340 --> 00:00:46.390
现在，它不仅为

00:00:44.440 --> 00:00:48.970
我们的ID，还有其他一些工具， 

00:00:46.390 --> 00:00:51.040
这是一个完全开源和免费的

00:00:48.970 --> 00:00:53.050
并在Apache 2许可证上可用，因此

00:00:51.040 --> 00:00:57.550
您基本上可以将其用于任何种类

00:00:53.050 --> 00:01:00.670
元素本身，所以首先

00:00:57.550 --> 00:01:02.920
我们将看看我们如何使用IntelliJ 

00:01:00.670 --> 00:01:04.989
产品中的平台，可能是

00:01:02.920 --> 00:01:08.620
实际上，您可能会发现一些东西

00:01:04.989 --> 00:01:12.220
新的可能比我们更多

00:01:08.620 --> 00:01:14.380
就像我提到的实习

00:01:12.220 --> 00:01:18.580
平台开始作为

00:01:14.380 --> 00:01:19.990
 IntelliJ IDEA代码库，实际上是

00:01:18.580 --> 00:01:21.940
该ID的第一个版本没有任何

00:01:19.990 --> 00:01:23.020
任何插件API，然后逐步

00:01:21.940 --> 00:01:25.180
使它更加灵活和更多

00:01:23.020 --> 00:01:26.979
可扩展并在

00:01:25.180 --> 00:01:29.200
对其进行模块化等等

00:01:26.979 --> 00:01:31.570
如果有人对我们的方式感兴趣

00:01:29.200 --> 00:01:33.700
为此，我要给

00:01:31.570 --> 00:01:37.450
关于它的介绍

00:01:33.700 --> 00:01:39.250
 9月7日在马尔默的一天

00:01:37.450 --> 00:01:41.860
那里有一个链接，您可以

00:01:39.250 --> 00:01:43.299
用于注册，如果你有兴趣和

00:01:41.860 --> 00:01:46.450
我希望得到那些记录并

00:01:43.299 --> 00:01:48.700
现在在网上发布，现在有

00:01:46.450 --> 00:01:51.760
我们在顶部建立的小ID 

00:01:48.700 --> 00:01:54.040
约翰·露比（John Ruby）和

00:01:51.760 --> 00:01:55.600
其他所有的C ++ ID 

00:01:54.040 --> 00:01:57.700
我们最近宣布我们

00:01:55.600 --> 00:02:00.280
现在正在努力

00:01:57.700 --> 00:02:03.700
我们尚未宣布的想法

00:02:00.280 --> 00:02:05.320
但我们也在努力

00:02:03.700 --> 00:02:08.500
请继续关注我的进一步公告

00:02:05.320 --> 00:02:15.010
猜猜这些产品到底是什么

00:02:08.500 --> 00:02:16.209
基本上是收割者吗

00:02:15.010 --> 00:02:18.189
该平台的分布

00:02:16.209 --> 00:02:18.520
删除不需要的东西

00:02:18.189 --> 00:02:21.130
一点点

00:02:18.520 --> 00:02:22.930
我们将插件捆绑在一起的ID是

00:02:21.130 --> 00:02:24.490
与我们所处的市场相关

00:02:22.930 --> 00:02:25.900
谈论我们的魅力捆绑

00:02:24.490 --> 00:02:28.300
自行车插件将成为我的生命力所在

00:02:25.900 --> 00:02:30.550
 Ruby插件等并进行自定义

00:02:28.300 --> 00:02:32.190
使其最相关的用户界面

00:02:30.550 --> 00:02:34.420
最适用于目标受众

00:02:32.190 --> 00:02:37.060
从诸如新产品创建之类的东西

00:02:34.420 --> 00:02:38.830
项目设置解释器配置

00:02:37.060 --> 00:02:40.480
所以在想法上是习惯

00:02:38.830 --> 00:02:44.890
与IntelliJ中的工具不同

00:02:40.480 --> 00:02:46.150
 IDEA终极技术上都

00:02:44.890 --> 00:02:48.430
住在同一来源三年

00:02:46.150 --> 00:02:49.990
 IntelliJ IDEA本身，这使得

00:02:48.430 --> 00:02:54.880
整个整合的故事要容易得多

00:02:49.990 --> 00:02:56.800
我们，但还不是全部，所以

00:02:54.880 --> 00:02:59.470
 IntelliJ IDEA平台也用作

00:02:56.800 --> 00:03:01.630
国家统计局的一部分

00:02:59.470 --> 00:03:03.430
熟悉NPS就是这样

00:03:01.630 --> 00:03:04.720
用于元编程系统，它是

00:03:03.430 --> 00:03:06.880
本质上我们称之为

00:03:04.720 --> 00:03:08.380
 DSL工作台，所以这是一个工具

00:03:06.880 --> 00:03:11.320
让您定义自己的亲爱的

00:03:08.380 --> 00:03:12.850
它为您提供了特定领域的语言

00:03:11.320 --> 00:03:14.110
本质上是免费的

00:03:12.850 --> 00:03:16.270
这两个主要功能

00:03:14.110 --> 00:03:19.270
特定语言，您还可以

00:03:16.270 --> 00:03:22.750
指定想法单元格的生成方式

00:03:19.270 --> 00:03:24.940
变成Java代码或C之类的东西

00:03:22.750 --> 00:03:29.590
编写JavaScript代码或其他代码

00:03:24.940 --> 00:03:31.900
是目标语言，它具有

00:03:29.590 --> 00:03:33.760
有趣的用途和MP的数量

00:03:31.900 --> 00:03:35.650
实际使用的UI框架

00:03:33.760 --> 00:03:37.420
 IntelliJ IDEA，但它不使用大多数

00:03:35.650 --> 00:03:38.740
以代码为中心的功能

00:03:37.420 --> 00:03:39.670
 IntelliJ IDEA平台

00:03:38.740 --> 00:03:41.440
其实很有趣

00:03:39.670 --> 00:03:43.480
所以你发生了它不使用任何

00:03:41.440 --> 00:03:49.230
文本编辑器仅替换所有这些

00:03:43.480 --> 00:03:49.230
带有自己的面向DSL的编辑成帧器

00:03:49.410 --> 00:03:54.280
另一段使用

00:03:52.470 --> 00:03:56.410
实习框架实际上是

00:03:54.280 --> 00:03:57.580
像您一样不断地进行内容编译

00:03:56.410 --> 00:03:59.290
可能知道这是一个编程

00:03:57.580 --> 00:03:59.920
语言是我们正在开发

00:03:59.290 --> 00:04:01.660
 JetBrains 

00:03:59.920 --> 00:04:03.670
当然，我们想重用

00:04:01.660 --> 00:04:07.030
编译器本身的相同代码库

00:04:03.670 --> 00:04:08.830
而对于8lg插件，为了

00:04:07.030 --> 00:04:10.930
能够做到这一点，我们实际上提取

00:04:08.830 --> 00:04:14.350
 IntelliJ IDEA中的一小部分

00:04:10.930 --> 00:04:19.720
突尼斯平台只是穷人

00:04:14.350 --> 00:04:23.020
 psi内容Java psi和整体解析

00:04:19.720 --> 00:04:26.680
索引逻辑和程序包有一个

00:04:23.020 --> 00:04:28.450
单独的罐子并在其中使用

00:04:26.680 --> 00:04:30.040
棉花编译器，实际上相当

00:04:28.450 --> 00:04:31.770
小所以成本分配

00:04:30.040 --> 00:04:34.080
和编译器只是

00:04:31.770 --> 00:04:36.870
超过7兆字节，而我没有

00:04:34.080 --> 00:04:38.910
知道200兆字节的Internet JD 

00:04:36.870 --> 00:04:41.280
最终，这是一个很大的不同， 

00:04:38.910 --> 00:04:43.199
看到所以prod产品beta基于

00:04:41.280 --> 00:04:47.250
智能平台也可以是

00:04:43.199 --> 00:04:48.659
轻巧的另一件事是

00:04:47.250 --> 00:04:50.490
我猜是所谓的来源

00:04:48.659 --> 00:04:53.009
没有多少人知道我们

00:04:50.490 --> 00:04:55.319
最近宣布，现在

00:04:53.009 --> 00:04:56.430
它更多的是原型而不是实际的

00:04:55.319 --> 00:04:58.740
产品，但实际上是一个非常

00:04:56.430 --> 00:05:03.810
有趣的一个，所以我将展示一个

00:04:58.740 --> 00:05:05.389
现在一点点这样

00:05:03.810 --> 00:05:08.759
本质上，应用程序源是

00:05:05.389 --> 00:05:10.470
基于Web的源代码浏览器和正确的

00:05:08.759 --> 00:05:13.319
现在确定您可以吸收

00:05:10.470 --> 00:05:14.699
 acecomm是公开的，不是什么

00:05:13.319 --> 00:05:16.199
您可以将其用于自己或自己的

00:05:14.699 --> 00:05:18.240
项目，但您可以使用它进行浏览

00:05:16.199 --> 00:05:21.030
 IntelliJ IDEA社区的来源

00:05:18.240 --> 00:05:25.650
版源代码，您可以看到

00:05:21.030 --> 00:05:26.880
由于某种原因，它可以使您满意

00:05:25.650 --> 00:05:28.319
没有提供任何有用的信息

00:05:26.880 --> 00:05:30.300
实际上应该是真实的

00:05:28.319 --> 00:05:33.150
带有语法高亮显示的代码编辑器和

00:05:30.300 --> 00:05:34.469
像这样去声明的东西，但是它

00:05:33.150 --> 00:05:37.259
应用似乎坏了

00:05:34.469 --> 00:05:41.030
来源好吧，没关系，它应该

00:05:37.259 --> 00:05:49.830
非常好，但是今天不起作用

00:05:41.030 --> 00:05:54.479
至少它向您显示了提示和

00:05:49.830 --> 00:05:56.610
其他不错的东西，但我们确实有一些CR 

00:05:54.479 --> 00:05:58.110
好吧，所以现在可能没有完全

00:05:56.610 --> 00:06:00.240
为新修订版本编制索引，以便在较旧的版本中

00:05:58.110 --> 00:06:01.830
您实际上看到的版本较旧

00:06:00.240 --> 00:06:03.509
导航功能可以使您

00:06:01.830 --> 00:06:08.690
按进入宣言，您可以查看

00:06:03.509 --> 00:06:10.680
您可以跳转到的文档

00:06:08.690 --> 00:06:11.969
东西的实现，例如

00:06:10.680 --> 00:06:14.569
看所有的PSI元素

00:06:11.969 --> 00:06:18.620
实现，这或将需要

00:06:14.569 --> 00:06:21.719
花一些时间来加载所有

00:06:18.620 --> 00:06:25.680
是的，您看到了一些

00:06:21.719 --> 00:06:28.680
结果，实际上是在幕后

00:06:25.680 --> 00:06:30.630
也正在运行中

00:06:28.680 --> 00:06:37.199
精简版智能

00:06:30.630 --> 00:06:39.300
平台，所以我们有，所以我们有耳朵

00:06:37.199 --> 00:06:40.830
显然没有任何

00:06:39.300 --> 00:06:42.630
视频作为智能的一部分

00:06:40.830 --> 00:06:43.529
平台预算用户或同一部分

00:06:42.630 --> 00:06:45.659
一样的

00:06:43.529 --> 00:06:48.269
或与堂兄弟编译器一起解密

00:06:45.659 --> 00:06:49.829
也使用并增加了额外的块

00:06:48.269 --> 00:06:52.699
作为索引和项目模型，以及

00:06:49.829 --> 00:06:55.229
互操作性之类的东西，以及

00:06:52.699 --> 00:06:57.149
现在我想是Java，但我们也是

00:06:55.229 --> 00:06:59.369
计划添加其他语言，例如

00:06:57.149 --> 00:07:03.869
 XML和JavaScript在

00:06:59.369 --> 00:07:06.029
不久的将来，这基本上是

00:07:03.869 --> 00:07:09.149
我们如何使用英特尔芯片框架

00:07:06.029 --> 00:07:11.279
内部超越内部用户

00:07:09.149 --> 00:07:13.199
也是一些外部产品

00:07:11.279 --> 00:07:14.519
已经存在的那个

00:07:13.199 --> 00:07:17.159
在智能生活中被滥用

00:07:14.519 --> 00:07:18.809
列表不长，只要我们想要

00:07:17.159 --> 00:07:20.549
是的，这实际上就是我们为什么

00:07:18.809 --> 00:07:23.039
举行此网络研讨会以告诉更多人

00:07:20.549 --> 00:07:24.719
关于智能创意平台如何

00:07:23.039 --> 00:07:27.689
可以使用以及如何建立自己的

00:07:24.719 --> 00:07:29.849
最重要的是拥有自己的工具

00:07:27.689 --> 00:07:31.859
显然是Android Studio 

00:07:29.849 --> 00:07:35.909
由Google在Google I / O上宣布

00:07:31.859 --> 00:07:38.189
几个月前的会议

00:07:35.909 --> 00:07:40.979
并不是一个很好的例子

00:07:38.189 --> 00:07:43.559
平台使用，因为这是一个主意

00:07:40.979 --> 00:07:45.539
主要是重新包装

00:07:43.559 --> 00:07:49.349
 IntelliJ IDEA社区的版本

00:07:45.539 --> 00:07:51.599
版，因此没有太多新内容

00:07:49.349 --> 00:07:53.159
 Google的新开发成果

00:07:51.599 --> 00:07:55.019
使它与JTA不同

00:07:53.159 --> 00:07:56.639
社区版本身，所以有一个

00:07:55.019 --> 00:07:58.379
一定数量的新发展

00:07:56.639 --> 00:08:02.159
他们是否有一个自定义的用户界面

00:07:58.379 --> 00:08:05.579
基于Gradle的产品模型及其

00:08:02.159 --> 00:08:06.929
定制一些东西以工作方式

00:08:05.579 --> 00:08:10.139
他们想要它，显然他们有

00:08:06.929 --> 00:08:12.269
自己的品牌，但总而言之

00:08:10.139 --> 00:08:16.189
不像成熟的独立产品

00:08:12.269 --> 00:08:19.679
非常接近我们所做的

00:08:16.189 --> 00:08:21.089
 IntelliJ IDEA社区版和

00:08:19.679 --> 00:08:24.239
它完全被开发出来的方式

00:08:21.089 --> 00:08:25.859
与我们建立合作伙伴关系，因此我们甚至拥有

00:08:24.239 --> 00:08:28.169
对Google员工有很多帮助，我们

00:08:25.859 --> 00:08:34.259
一切都变得非常激动

00:08:28.169 --> 00:08:36.479
等等，我们的另一个用户

00:08:34.259 --> 00:08:38.849
产品叫一家公司

00:08:36.479 --> 00:08:40.319
导丝，您可能还没有

00:08:38.849 --> 00:08:42.469
听说过，因为它不是开发人员

00:08:40.319 --> 00:08:44.550
公司完全是为了

00:08:42.469 --> 00:08:47.279
保险构建软件

00:08:44.550 --> 00:08:49.230
基本上允许的公司

00:08:47.279 --> 00:08:51.360
计算多少英寸

00:08:49.230 --> 00:08:53.399
应对保险是如何

00:08:51.360 --> 00:08:54.600
昂贵地，您的保险单是

00:08:53.399 --> 00:08:56.340
将

00:08:54.600 --> 00:08:57.750
他们有自己的编程

00:08:56.340 --> 00:09:01.100
语言JVM编程语言称为

00:08:57.750 --> 00:09:03.810
 gosu，他们基本上在使用它

00:09:01.100 --> 00:09:06.810
给产品的用户

00:09:03.810 --> 00:09:09.420
工具程序，它们是最古老的

00:09:06.810 --> 00:09:11.220
环境，他们已经建立了一个想法

00:09:09.420 --> 00:09:13.470
在顶部使用幽灵编程语言

00:09:11.220 --> 00:09:16.200
 IntelliJ IDEA，他们已经建立

00:09:13.470 --> 00:09:17.820
也有很多自定义的用户界面

00:09:16.200 --> 00:09:21.930
他们正在执行的特定于域的子

00:09:17.820 --> 00:09:26.580
它尚未发布但正在

00:09:21.930 --> 00:09:27.900
即将发布，我们已经

00:09:26.580 --> 00:09:29.280
也一直与他们保持联系

00:09:27.900 --> 00:09:35.040
他们似乎对

00:09:29.280 --> 00:09:36.060
经历过左排

00:09:35.040 --> 00:09:38.100
我想说的是

00:09:36.060 --> 00:09:41.910
叫做更好的东西是

00:09:38.100 --> 00:09:45.060
相当新的东西，这是开放的

00:09:41.910 --> 00:09:47.040
基于MPs的源工具

00:09:45.060 --> 00:09:48.960
针对国会议员的发展

00:09:47.040 --> 00:09:52.980
嵌入式软件，好像

00:09:48.960 --> 00:09:55.290
从名字猜测，所以如果你想

00:09:52.980 --> 00:09:57.930
为我不知道你写软件

00:09:55.290 --> 00:09:59.970
冰箱或类似的东西，你可以

00:09:57.930 --> 00:10:01.740
内嵌微控制器

00:09:59.970 --> 00:10:03.720
您实际上可以使用嵌入式

00:10:01.740 --> 00:10:05.550
用漂亮的图形化高级语言编写

00:10:03.720 --> 00:10:07.380
然后生成一个低级的C代码

00:10:05.550 --> 00:10:12.030
将由平台编译

00:10:07.380 --> 00:10:13.830
设备上的编译器，因此您可以检查

00:10:12.030 --> 00:10:19.380
如果您对此感兴趣，请在此处发布博客

00:10:13.830 --> 00:10:23.610
更多细节，我不知道多少

00:10:19.380 --> 00:10:26.670
关于该工具的使用，但我们看到了

00:10:23.610 --> 00:10:28.410
这是一个非常令人兴奋的干预

00:10:26.670 --> 00:10:29.850
我要去的几个其他项目

00:10:28.410 --> 00:10:31.740
现在显示不再有效

00:10:29.850 --> 00:10:33.240
发展依旧还有

00:10:31.740 --> 00:10:35.760
一定程度的美丽成功故事

00:10:33.240 --> 00:10:37.950
获得AG平台，所以第一个是

00:10:35.760 --> 00:10:40.860
由一家名为es n dot M e的瑞典公司提供

00:10:37.950 --> 00:10:43.770
这家公司已经建立了一个网站

00:10:40.860 --> 00:10:46.560
实时Web开发框架

00:10:43.770 --> 00:10:49.560
在Python中，因此他们的目标市场是

00:10:46.560 --> 00:10:51.390
主要是游戏开发商，他们是

00:10:49.560 --> 00:10:55.320
实际用于《战地风云》系列

00:10:51.390 --> 00:10:56.760
游戏，他们建立了他们

00:10:55.320 --> 00:10:59.550
实际上非常好的框架

00:10:56.760 --> 00:11:04.530
此框架之上的好工具

00:10:59.550 --> 00:11:06.240
 biochar和解决方案，它是一个插件， 

00:11:04.530 --> 00:11:09.110
然后他们将其打包为单独的IDE 

00:11:06.240 --> 00:11:10.950
并分配给他们的成本

00:11:09.110 --> 00:11:12.600
不幸的是，他们被

00:11:10.950 --> 00:11:14.220
电子艺术，所以他们不是

00:11:12.600 --> 00:11:17.670
不再为此提供支持

00:11:14.220 --> 00:11:21.570
独立的公司，所以我想这是

00:11:17.670 --> 00:11:24.589
该工具不再公开可用，并且

00:11:21.570 --> 00:11:27.480
产品就是真正的Ixia 

00:11:24.589 --> 00:11:29.490
这是一个动作和ID 

00:11:27.480 --> 00:11:32.310
 ActionScript是B，也是

00:11:29.490 --> 00:11:35.670
基于NBS，因此他们建立了

00:11:32.310 --> 00:11:37.290
来自他们的发电机，所以他们建造了

00:11:35.670 --> 00:11:38.910
 DSL结构的DSL 

00:11:37.290 --> 00:11:40.920
 ActionScript并生成生成器

00:11:38.910 --> 00:11:43.079
到动作实际动作脚本

00:11:40.920 --> 00:11:45.930
语言，他们有一个相当不错的用户

00:11:43.079 --> 00:11:49.290
经历过它是一种商业工具，但是

00:11:45.930 --> 00:11:51.540
并非如此，我相信从来没有

00:11:49.290 --> 00:11:59.010
达到了1.0版本的开发

00:11:51.540 --> 00:12:00.720
在2010年查获，是的，现在

00:11:59.010 --> 00:12:02.100
为网站包含颜色

00:12:00.720 --> 00:12:07.620
被称为是不相关的

00:12:02.100 --> 00:12:09.120
尚未告知ActionScript 

00:12:07.620 --> 00:12:11.070
我们还没有谈论人们如何

00:12:09.120 --> 00:12:13.050
实际上是在使用直观的想法

00:12:11.070 --> 00:12:15.360
平台，现在让我们看一些

00:12:13.050 --> 00:12:16.949
里面的公司，所以你给

00:12:15.360 --> 00:12:19.949
主要模块的简要概述

00:12:16.949 --> 00:12:22.620
组成您的能源平台

00:12:19.949 --> 00:12:25.380
可以实际查看源代码

00:12:22.620 --> 00:12:28.470
在社区目录下

00:12:25.380 --> 00:12:29.670
有平台，这里有一些

00:12:28.470 --> 00:12:34.230
我要讲的模块

00:12:29.670 --> 00:12:36.089
关于或平台之类的东西

00:12:34.230 --> 00:12:37.350
就在那里，您可以看看

00:12:36.089 --> 00:12:39.470
源代码，看看它们如何适合

00:12:37.350 --> 00:12:39.470
一起

00:12:42.440 --> 00:12:46.740
所以我要提到的第一个模块是

00:12:44.730 --> 00:12:48.510
核心模块实际上是低端

00:12:46.740 --> 00:12:50.640
最底层的部分

00:12:48.510 --> 00:12:52.620
平台包含虚拟文件

00:12:50.640 --> 00:12:54.690
系统实施代码包含

00:12:52.620 --> 00:12:56.820
一般语言支持低

00:12:54.690 --> 00:12:58.199
 Lexing解析psi等功能

00:12:56.820 --> 00:13:02.070
结构参考等等

00:12:58.199 --> 00:13:05.240
并包含一些实用程序

00:13:02.070 --> 00:13:08.490
多线程集合的类

00:13:05.240 --> 00:13:11.610
我们基本上已经写了

00:13:08.490 --> 00:13:13.920
番石榴的版本等等

00:13:11.610 --> 00:13:16.260
它没有任何依赖关系

00:13:13.920 --> 00:13:18.990
没有针对特定内容的任何支持

00:13:16.260 --> 00:13:20.370
语言，但就像大多数

00:13:18.990 --> 00:13:22.709
在其之上的基本构建块

00:13:20.370 --> 00:13:24.029
可以构建一个编译器或ID或s 

00:13:22.709 --> 00:13:26.220
命令行最好的工具或

00:13:24.029 --> 00:13:27.779
这样的东西，实际上

00:13:26.220 --> 00:13:31.680
化妆品使用的部分

00:13:27.779 --> 00:13:33.750
编译器下一个模块什么都没有

00:13:31.680 --> 00:13:35.579
平台包含的称为平台

00:13:33.750 --> 00:13:36.990
实际上，我们大部分的UI内容

00:13:35.579 --> 00:13:39.810
有它包含动作系统

00:13:36.990 --> 00:13:41.820
让您将工具栏和

00:13:39.810 --> 00:13:43.950
菜单项和按钮之类的东西

00:13:41.820 --> 00:13:46.529
它包含了我们大部分的用户界面

00:13:43.950 --> 00:13:49.500
 minos对话框架租赁

00:13:46.529 --> 00:13:55.440
表格会查看所有这些弹出式窗口

00:13:49.500 --> 00:13:57.570
我们有很多它也有我们的文字

00:13:55.440 --> 00:14:03.420
编辑器实现，它还必须

00:13:57.570 --> 00:14:05.910
礼物的用户界面查看下一个

00:14:03.420 --> 00:14:09.660
模块是所谓的局域网，这

00:14:05.910 --> 00:14:11.579
包含该案的基础

00:14:09.660 --> 00:14:16.110
包含的基本实现

00:14:11.579 --> 00:14:17.880
我们的代码内部功能以及我们的方式

00:14:16.110 --> 00:14:19.170
做事情实际上是我们在做事情

00:14:17.880 --> 00:14:21.390
面积实际上与

00:14:19.170 --> 00:14:23.910
其他一些ID，因此当我们构建时

00:14:21.390 --> 00:14:26.100
一些重构或代码导航

00:14:23.910 --> 00:14:28.110
我们试图使它们成为通用的功能

00:14:26.100 --> 00:14:30.570
尽可能地提取

00:14:28.110 --> 00:14:32.640
语言无关的部分，我们把它

00:14:30.570 --> 00:14:34.440
进入lang模块，以便每个人

00:14:32.640 --> 00:14:37.350
可以使用它，然后我们建立特定的

00:14:34.440 --> 00:14:40.140
以特定语言实现

00:14:37.350 --> 00:14:42.060
例如Java或Python 

00:14:40.140 --> 00:14:43.230
模块仅包含以下部分

00:14:42.060 --> 00:14:45.750
专门用于实现此功能

00:14:43.230 --> 00:14:48.240
对于这种语言，这意味着

00:14:45.750 --> 00:14:49.860
就是通过写一个小

00:14:48.240 --> 00:14:52.740
您可以利用大量的代码

00:14:49.860 --> 00:14:54.690
我们在其中构建的大量代码

00:14:52.740 --> 00:14:57.720
平台，您可以得到很多

00:14:54.690 --> 00:15:01.170
强大的代码编辑功能，非常

00:14:57.720 --> 00:15:01.890
一点点的努力，所以你有一些

00:15:01.170 --> 00:15:03.390
那里的功能

00:15:01.890 --> 00:15:05.130
突出显示导航完成

00:15:03.390 --> 00:15:08.399
重构对其他事情有好处

00:15:05.130 --> 00:15:09.990
有点停在那里，如果你有能力

00:15:08.399 --> 00:15:11.670
为您的项目利用这些东西

00:15:09.990 --> 00:15:13.230
你就是这实际上是

00:15:11.670 --> 00:15:18.329
得到最大的好处

00:15:13.230 --> 00:15:20.880
 IntelliJ平台，所以有一堆

00:15:18.329 --> 00:15:22.380
当地历史上的其他东西

00:15:20.880 --> 00:15:23.790
平台的模数部分，所以我们

00:15:22.380 --> 00:15:24.449
自动跟踪所有

00:15:23.790 --> 00:15:27.959
变化

00:15:24.449 --> 00:15:30.589
分钟的文件能力，如果这

00:15:27.959 --> 00:15:33.720
功能节省了很多用户戴蒙德

00:15:30.589 --> 00:15:35.480
节省了很多我们经常拥有的

00:15:33.720 --> 00:15:38.489
对构建调试器的普遍青睐

00:15:35.480 --> 00:15:41.309
这显然是由我们的人使用的

00:15:38.489 --> 00:15:43.739
我们拥有的所有想法都有

00:15:41.309 --> 00:15:45.600
基于的测试运行器框架

00:15:43.739 --> 00:15:47.790
团队城市服务消息的顶部和

00:15:45.600 --> 00:15:49.739
为一个适配器编写适配器非常容易

00:15:47.790 --> 00:15:52.230
定制测试环或将其插入

00:15:49.739 --> 00:15:54.600
测试跑步者并获得果岭

00:15:52.230 --> 00:15:56.850
红色酒吧和类似目的地的东西

00:15:54.600 --> 00:15:59.249
对于您拥有的任何测试成帧器

00:15:56.850 --> 00:16:01.169
您的自定义语言，我们还有一个

00:15:59.249 --> 00:16:03.119
通用版本控制系统

00:16:01.169 --> 00:16:04.709
集成框架，因此如果需要

00:16:03.119 --> 00:16:07.169
有点集成的版本可以

00:16:04.709 --> 00:16:08.910
采用我们的VCS框架，您可以采用

00:16:07.169 --> 00:16:11.429
我们的插件支持特定

00:16:08.910 --> 00:16:12.839
版本控制系统和您的用户

00:16:11.429 --> 00:16:20.519
将获得很好的经验

00:16:12.839 --> 00:16:21.929
没有现在的版本控制，我要去

00:16:20.519 --> 00:16:23.309
谈论一些模块

00:16:21.929 --> 00:16:25.049
不严格地说是

00:16:23.309 --> 00:16:27.239
他们更多地属于IntelliJ IDEA平台

00:16:25.049 --> 00:16:33.209
正确地进入IntelliJ IDEA社区

00:16:27.239 --> 00:16:34.379
版源产品，但他们是

00:16:33.209 --> 00:16:36.629
仍然是非常有用的

00:16:34.379 --> 00:16:38.519
然后可以在其中使用的功能

00:16:36.629 --> 00:16:41.189
您的项目，如果您需要它们，那么

00:16:38.519 --> 00:16:42.720
第一个是Java psi，有p 

00:16:41.189 --> 00:16:45.449
基本上按照这里所说的进行分配

00:16:42.720 --> 00:16:47.220
 URL作为我们Java支持的一部分，因此

00:16:45.449 --> 00:16:51.529
不会为Java进行解析吗？ 

00:16:47.220 --> 00:16:53.999
解析代码解析

00:16:51.529 --> 00:16:55.350
本质上它不做代码

00:16:53.999 --> 00:16:57.029
完成，因为代码完成是

00:16:55.350 --> 00:16:59.119
不是你需要一个独立的东西

00:16:57.029 --> 00:17:02.939
工具列表，它是一个交互式功能

00:16:59.119 --> 00:17:04.289
但是如果您要建造的话

00:17:02.939 --> 00:17:05.760
构建例如独立代码

00:17:04.289 --> 00:17:08.250
分析工具类似的东西

00:17:05.760 --> 00:17:10.679
支票样式的一部分，您可以带您

00:17:08.250 --> 00:17:11.850
可以作为核心部分并确定psi 

00:17:10.679 --> 00:17:14.250
部分，我们得到了非常轻巧的

00:17:11.850 --> 00:17:18.679
 IntelliJ IDEA弹药的子集

00:17:14.250 --> 00:17:21.089
不同源代码的社区，以及

00:17:18.679 --> 00:17:23.220
本质上用它来构建自己的

00:17:21.089 --> 00:17:26.730
工具，并由我们完成很多工作

00:17:23.220 --> 00:17:29.639
免费，棉花编译器使用

00:17:26.730 --> 00:17:31.559
顺便说一句，以便它可以解析

00:17:29.639 --> 00:17:34.500
 Java类文件和Java源文件

00:17:31.559 --> 00:17:35.710
使用Java psi模块，以便您

00:17:34.500 --> 00:17:37.299
可以得到

00:17:35.710 --> 00:17:41.860
滚动符号，应将其删除，因为

00:17:37.299 --> 00:17:43.809
用Java代码编码，那么我们有很多

00:17:41.860 --> 00:17:46.029
对XML的支持涉及到所有

00:17:43.809 --> 00:17:49.390
我们的产品不仅智能

00:17:46.029 --> 00:17:51.820
版本，我们在那里有很多SAP，因此

00:17:49.390 --> 00:17:53.620
显然，我们进行解析会减少很多

00:17:51.820 --> 00:17:55.960
模式支持模式验证和

00:17:53.620 --> 00:17:58.149
根据模式完成

00:17:55.960 --> 00:18:03.190
模式可以是DTD或xml模式，也可以是

00:17:58.149 --> 00:18:06.610
放松也是很常见的任务是什么时候

00:18:03.190 --> 00:18:08.860
不同的框架都基于xml 

00:18:06.610 --> 00:18:10.980
我不知道的配置文件

00:18:08.860 --> 00:18:15.640
以四季豆为例

00:18:10.980 --> 00:18:19.059
清单文件或布局文件以及那些

00:18:15.640 --> 00:18:20.679
文件包含它们自己的

00:18:19.059 --> 00:18:23.590
结构，他们有参考

00:18:20.679 --> 00:18:25.120
 java代码等，以及支持，我们

00:18:23.590 --> 00:18:29.020
有一个叫做Dom框架的东西

00:18:25.120 --> 00:18:30.970
这使得构建非常容易

00:18:29.020 --> 00:18:32.350
最重要的是，它具有高级功能

00:18:30.970 --> 00:18:35.470
可以建立导航功能并

00:18:32.350 --> 00:18:37.179
验证功能非常容易

00:18:35.470 --> 00:18:38.620
确保你做到了

00:18:37.179 --> 00:18:40.299
轻松达到真实水平

00:18:38.620 --> 00:18:43.929
对文本的理解

00:18:40.299 --> 00:18:45.100
 IDE，并且最近作为应用程序的一部分

00:18:43.929 --> 00:18:47.470
源集成，我们也

00:18:45.100 --> 00:18:49.210
将此分为用户界面和用户界面部分

00:18:47.470 --> 00:18:51.370
因此，您将像注释行工具一样

00:18:49.210 --> 00:18:56.890
它可以用XML做一些事情

00:18:51.370 --> 00:18:58.149
那没有额外的依赖

00:18:56.890 --> 00:19:01.630
您可能会发现其他一些块

00:18:58.149 --> 00:19:04.120
有用的拼写检查图像常规

00:19:01.630 --> 00:19:05.830
表达式之类的东西，所以

00:19:04.120 --> 00:19:07.960
所有这些的根本主题是

00:19:05.830 --> 00:19:09.640
该平台是相当模块化的，您

00:19:07.960 --> 00:19:11.380
可以选择适合的模块集

00:19:09.640 --> 00:19:12.610
您的具体路径，您可以选择

00:19:11.380 --> 00:19:15.130
您想要的功能

00:19:12.610 --> 00:19:16.809
支持您的产品，您可以拉

00:19:15.130 --> 00:19:18.399
你可以拿的碎片

00:19:16.809 --> 00:19:23.799
您需要，您可以省去所有

00:19:18.399 --> 00:19:25.480
其余的一切都很好

00:19:23.799 --> 00:19:26.559
该模块正在查看我们的模型

00:19:25.480 --> 00:19:27.909
在社区版中我们也

00:19:26.559 --> 00:19:29.140
有很多可以

00:19:27.909 --> 00:19:31.840
对您有用，所以我已经

00:19:29.140 --> 00:19:33.220
提到版本控制集成我们

00:19:31.840 --> 00:19:35.020
已经建立了系统集成

00:19:33.220 --> 00:19:37.659
测试运行器集成，我们有问题

00:19:35.020 --> 00:19:40.630
跟踪器集成，这可能会或可能不会

00:19:37.659 --> 00:19:42.340
适合您的产品，但是一次

00:19:40.630 --> 00:19:42.789
再次，你可以选择采取任何

00:19:42.340 --> 00:19:44.570
你需要

00:19:42.789 --> 00:19:48.800
其余的留在外面

00:19:44.570 --> 00:19:50.570
我们有一个我们也很新

00:19:48.800 --> 00:19:53.420
我们为您准备的东西

00:19:50.570 --> 00:19:57.710
正在建立UI设计师

00:19:53.420 --> 00:20:00.680
由Android UI设计者和

00:19:57.710 --> 00:20:02.390
我们有目标的设计师

00:20:00.680 --> 00:20:05.510
我设计的侦探

00:20:02.390 --> 00:20:07.610
正在构建应用程序代码，如果您

00:20:05.510 --> 00:20:08.870
想要支持自己的表单设计者

00:20:07.610 --> 00:20:12.220
您还可以在以下产品上构建产品

00:20:08.870 --> 00:20:14.630
这个成帧器并免费获得一些东西

00:20:12.220 --> 00:20:16.190
说了我不得不提的是

00:20:14.630 --> 00:20:18.320
建立UI设计师仍然是公平的

00:20:16.190 --> 00:20:19.670
大量的工作，却没有得到全部

00:20:18.320 --> 00:20:21.830
从平台上免费获得

00:20:19.670 --> 00:20:27.650
您仍然需要很多东西

00:20:21.830 --> 00:20:29.870
现在做自己，让我们看看如何

00:20:27.650 --> 00:20:31.790
互联网创意平台相比之下有些

00:20:29.870 --> 00:20:33.580
例如模型比它睡在上面

00:20:31.790 --> 00:20:37.520
击败RCPS 

00:20:33.580 --> 00:20:40.010
所以需要做的主要事情

00:20:37.520 --> 00:20:42.710
很明显，我们不是在建立一个

00:20:40.010 --> 00:20:46.760
通用富客户端平台我们

00:20:42.710 --> 00:20:50.290
从来没有这个目标，我们没有

00:20:46.760 --> 00:20:54.680
将来有任何计划这样做

00:20:50.290 --> 00:20:57.560
你可能可以尝试对待我们

00:20:54.680 --> 00:20:59.690
这样的通用代码库

00:20:57.560 --> 00:21:01.910
 UI平台，但不会成为

00:20:59.690 --> 00:21:03.740
非常好一个，所以如果您只需要一些

00:21:01.910 --> 00:21:05.270
公司为您构建用户界面

00:21:03.740 --> 00:21:08.590
应用程序，否则您会更好

00:21:05.270 --> 00:21:13.040
如果您喜欢swing或使用netbeans 

00:21:08.590 --> 00:21:14.600
如果您喜欢SWT则会使日食黯然失色

00:21:13.040 --> 00:21:16.160
如果需要建立同心圆

00:21:14.600 --> 00:21:18.800
工具，如果您需要构建以构建工具

00:21:16.160 --> 00:21:19.730
这与源代码有关系

00:21:18.800 --> 00:21:21.350
然后是IntelliJ IDEA 

00:21:19.730 --> 00:21:22.790
那么实习平台很棒

00:21:21.350 --> 00:21:24.200
选择，因为它给您很多

00:21:22.790 --> 00:21:25.580
免费软件，它为您提供了很多

00:21:24.200 --> 00:21:29.150
将会非常重要的东西

00:21:25.580 --> 00:21:33.110
为你和你需要的东西

00:21:29.150 --> 00:21:34.940
很多时间发展自己，这是

00:21:33.110 --> 00:21:37.790
也在IntelliJ IDEA平台中

00:21:34.940 --> 00:21:40.430
对于强化训练也不是很完美

00:21:37.790 --> 00:21:42.500
 Eclipse等应用程序

00:21:40.430 --> 00:21:45.470
付出了很多努力

00:21:42.500 --> 00:21:47.380
努力建设一般

00:21:45.470 --> 00:21:49.880
图表工具的基础架构

00:21:47.380 --> 00:21:53.810
像建模工具之类的东西

00:21:49.880 --> 00:21:57.020
我们有一些聪明的人

00:21:53.810 --> 00:21:58.100
替代，但我们的框架依赖

00:21:57.020 --> 00:22:02.060
非开源

00:21:58.100 --> 00:22:03.770
图形库，因此

00:22:02.060 --> 00:22:05.600
目前还没有人做到这一点

00:22:03.770 --> 00:22:08.270
作为IntelliJ IDEA的一部分提供

00:22:05.600 --> 00:22:10.460
亚洲大黄蜂社区能源平台

00:22:08.270 --> 00:22:12.850
这可能会改变

00:22:10.460 --> 00:22:15.950
现在它仍然是将来的零件

00:22:12.850 --> 00:22:19.130
可供百夫长使用

00:22:15.950 --> 00:22:24.680
不适合那些想要建造的人

00:22:19.130 --> 00:22:26.900
该平台的产品是什么样的

00:22:24.680 --> 00:22:28.610
产品首先可以有

00:22:26.900 --> 00:22:31.160
显然，是的，我们正在构建ID， 

00:22:28.610 --> 00:22:32.900
你也可以当女士，我有

00:22:31.160 --> 00:22:34.490
刚刚列出了几种语言， 

00:22:32.900 --> 00:22:36.260
我们没有任何即时计划

00:22:34.490 --> 00:22:38.420
自己的IDE，对于其中一些人来说

00:22:36.260 --> 00:22:40.850
构建它非常好，具有良好的工具

00:22:38.420 --> 00:22:42.860
在那里，所以大概有一些

00:22:40.850 --> 00:22:45.140
对你来说很奇怪的事情，例如我

00:22:42.860 --> 00:22:46.670
知道很长时间VHDL就像不是

00:22:45.140 --> 00:22:48.260
想到的东西

00:22:46.670 --> 00:22:51.170
当您在考虑语言时

00:22:48.260 --> 00:22:53.630
成为新想法，但仍然是

00:22:51.170 --> 00:22:55.010
就我而言，基本上是编程

00:22:53.630 --> 00:22:56.960
知道他们现在拥有的工具

00:22:55.010 --> 00:23:02.570
比较不是最先进的

00:22:56.960 --> 00:23:04.580
到那里的商业机会

00:23:02.570 --> 00:23:08.000
更明显的选择是构建成帧器

00:23:04.580 --> 00:23:10.640
特定的ID，有点类似于

00:23:08.000 --> 00:23:12.170
这对SpringSource的作用

00:23:10.640 --> 00:23:14.810
以速度工具套件为例

00:23:12.170 --> 00:23:17.270
所以有很多这样的想法

00:23:14.810 --> 00:23:19.250
基于当时的日食，但那里

00:23:17.270 --> 00:23:20.900
有很多优点

00:23:19.250 --> 00:23:23.960
在IntelliJ上构建这样的东西

00:23:20.900 --> 00:23:25.400
因为我们拥有非常好的

00:23:23.960 --> 00:23:27.890
非常好的基础代码编辑

00:23:25.400 --> 00:23:30.980
框架，也开始介绍Dom 

00:23:27.890 --> 00:23:32.450
我之前提到过的

00:23:30.980 --> 00:23:34.640
让您感到优质的产品不是

00:23:32.450 --> 00:23:39.830
它不需要投资很多

00:23:34.640 --> 00:23:41.750
将时间和精力投入到另一个

00:23:39.830 --> 00:23:43.310
需要构建的是代码分析或

00:23:41.750 --> 00:23:45.140
仅此一个的代码探索工具

00:23:43.310 --> 00:23:47.150
例子，所以我们很乐意

00:23:45.140 --> 00:23:49.700
例如曲率45 

00:23:47.150 --> 00:23:52.010
与我们的平台集成

00:23:49.700 --> 00:23:54.230
还有很多其他的东西

00:23:52.010 --> 00:23:56.540
你可以建立在这个

00:23:54.230 --> 00:23:59.330
也许有可能建立

00:23:56.540 --> 00:24:00.740
游戏开发的东西，所以那里

00:23:59.330 --> 00:24:02.480
很多很多风俗

00:24:00.740 --> 00:24:04.670
我们不仅启动C ++程序

00:24:02.480 --> 00:24:07.340
诸如虚幻脚本或Lua之类的东西

00:24:04.670 --> 00:24:09.050
已经提到或统一脚本，并且

00:24:07.340 --> 00:24:11.930
也许那里有很大的机会

00:24:09.050 --> 00:24:17.630
建立强大的同心工具

00:24:11.930 --> 00:24:18.980
开发游戏的代码方面

00:24:17.630 --> 00:24:21.350
还有一个商机

00:24:18.980 --> 00:24:23.240
 ERP区域，所以像SAP这样的东西

00:24:21.350 --> 00:24:26.480
大概是这样的

00:24:23.240 --> 00:24:28.070
如果您熟悉的话，对于那些人来说是急

00:24:26.480 --> 00:24:32.060
有一些俄罗斯软件

00:24:28.070 --> 00:24:33.530
叫做101的会计

00:24:32.060 --> 00:24:35.810
也有自己的编程语言

00:24:33.530 --> 00:24:38.060
没有任何好的工具

00:24:35.810 --> 00:24:43.370
也许有人可以建立太空

00:24:38.060 --> 00:24:45.350
我们的平台当然是

00:24:43.370 --> 00:24:46.700
并非所有这些只是一些想法

00:24:45.350 --> 00:24:49.070
在我准备这个的时候

00:24:46.700 --> 00:24:50.720
网络研讨会，但显然可能有一个

00:24:49.070 --> 00:24:54.410
很多其他你不能来的东西

00:24:50.720 --> 00:24:57.140
跟自己在一起，是的，所有这些

00:24:54.410 --> 00:24:58.400
大部分是开发人员工具

00:24:57.140 --> 00:25:00.170
有可能建立一些工具

00:24:58.400 --> 00:25:04.180
这些不是针对地球的

00:25:00.170 --> 00:25:07.040
在意大利开发人员空间的平台

00:25:04.180 --> 00:25:09.050
我不知道它的功能强大

00:25:07.040 --> 00:25:10.460
文字处理工具，例如我

00:25:09.050 --> 00:25:12.320
不知道熨平板是不是写东西

00:25:10.460 --> 00:25:16.310
诸如此类或互动小说或

00:25:12.320 --> 00:25:19.430
这样的东西，但这不是我真正的

00:25:16.310 --> 00:25:23.600
我的任务是想出一切可能

00:25:19.430 --> 00:25:25.640
现在的机会如何

00:25:23.600 --> 00:25:27.500
您是否要去哪里的问题

00:25:25.640 --> 00:25:28.970
建立一个讨价还价或如果你想

00:25:27.500 --> 00:25:31.040
在上面建立一个成熟的产品

00:25:28.970 --> 00:25:32.420
所以首先无论如何你

00:25:31.040 --> 00:25:33.920
必须从插件开始，因为

00:25:32.420 --> 00:25:37.040
本质上是什么产品我

00:25:33.920 --> 00:25:39.410
提到所有产品是什么

00:25:37.040 --> 00:25:42.410
平台的自定义软件包插件

00:25:39.410 --> 00:25:44.960
在您可以这样做之前，您可以

00:25:42.410 --> 00:25:46.970
构建一个插件并释放它，看看

00:25:44.960 --> 00:25:49.190
有多少人使用它，看看它是否变成

00:25:46.970 --> 00:25:50.780
好，然后如果你决定

00:25:49.190 --> 00:25:53.330
您喜欢它，因此决定购买

00:25:50.780 --> 00:25:55.070
产品，一旦您有了产品，就可以

00:25:53.330 --> 00:25:58.550
有可能删除的东西

00:25:55.070 --> 00:25:59.960
您不想添加以更改

00:25:58.550 --> 00:26:01.850
如果你不喜欢就开始

00:25:59.960 --> 00:26:03.310
在任何情况下自定义用户体验

00:26:01.850 --> 00:26:05.140
你喜欢的方式

00:26:03.310 --> 00:26:07.150
你也可以完全控制

00:26:05.140 --> 00:26:10.000
品牌推广，让您自己制作产品

00:26:07.150 --> 00:26:12.280
命名，将您的徽标灵魂全部

00:26:10.000 --> 00:26:13.660
在我们要求您指定的地方

00:26:12.280 --> 00:26:16.360
产品由

00:26:13.660 --> 00:26:18.160
天线平台和实际

00:26:16.360 --> 00:26:21.220
许可证要求您在

00:26:18.160 --> 00:26:22.690
比重，但除此之外

00:26:21.220 --> 00:26:25.690
对如何

00:26:22.690 --> 00:26:29.140
产品外观按照许可方式

00:26:25.690 --> 00:26:30.640
没有那么大的必要性

00:26:29.140 --> 00:26:32.140
这些现在在那里的一种方式

00:26:30.640 --> 00:26:33.370
没有发布限制

00:26:32.140 --> 00:26:35.830
插件的商业插件

00:26:33.370 --> 00:26:38.410
仓库，所以你可以有插件

00:26:35.830 --> 00:26:40.750
本质上要求许可证密钥，我们

00:26:38.410 --> 00:26:42.070
不要问您任何类似的百分比

00:26:40.750 --> 00:26:46.810
收入或类似的东西

00:26:42.070 --> 00:26:49.240
并且您可以使用

00:26:46.810 --> 00:26:53.140
您可以构建具有以下特征的产品

00:26:49.240 --> 00:26:55.510
内置许可证的人，那里有

00:26:53.140 --> 00:26:57.490
没有任何限制

00:26:55.510 --> 00:26:58.720
网络研讨会中有关我们是否

00:26:57.490 --> 00:27:01.900
将要做类似应用程序的事情

00:26:58.720 --> 00:27:03.550
存储和答案，以便您

00:27:01.900 --> 00:27:06.040
用户能否获得一种不错的方式

00:27:03.550 --> 00:27:08.110
轻松分发商业物品，并且

00:27:06.040 --> 00:27:10.150
答案是现在我们

00:27:08.110 --> 00:27:12.970
根本看不到并且足够

00:27:10.150 --> 00:27:14.650
商业发展使情况更糟

00:27:12.970 --> 00:27:17.370
投资但将来

00:27:14.650 --> 00:27:20.940
也许也许这将变得有意义

00:27:17.370 --> 00:27:20.940
让我们看看进展如何

00:27:22.290 --> 00:27:27.040
至于我提到的许可

00:27:24.960 --> 00:27:28.900
平台基于Apache 2 

00:27:27.040 --> 00:27:30.310
许可，这很少

00:27:28.900 --> 00:27:31.810
直接许可的限制

00:27:30.310 --> 00:27:33.040
衍生产品，您可以将它们作为

00:27:31.810 --> 00:27:37.440
开源，您可以将它们作为

00:27:33.040 --> 00:27:40.990
以您喜欢的任何方式进行商业广告，如果您愿意

00:27:37.440 --> 00:27:42.700
如果要使用某些组件

00:27:40.990 --> 00:27:44.500
在您的浏览器中，它们仅是开发的

00:27:42.700 --> 00:27:46.330
只能作为

00:27:44.500 --> 00:27:47.860
整数您的终极，例如他们

00:27:46.330 --> 00:27:51.550
图解它已经指导了我

00:27:47.860 --> 00:27:53.140
之前提到过，否则我不知道

00:27:51.550 --> 00:27:55.120
例如perforce的东西

00:27:53.140 --> 00:27:57.100
最终可用，您可以与我们联系

00:27:55.120 --> 00:27:59.410
而且很有可能我们可以

00:27:57.100 --> 00:28:00.820
找到许可此代码使用的方法

00:27:59.410 --> 00:28:02.710
编辑器，以便您能够

00:28:00.820 --> 00:28:04.630
作为产品的一部分分发

00:28:02.710 --> 00:28:07.960
我们非常愿意就此进行讨论

00:28:04.630 --> 00:28:09.640
和我们聊很多，我相信我们会

00:28:07.960 --> 00:28:12.720
那些能够来一个

00:28:09.640 --> 00:28:12.720
满意的解决方案

00:28:13.040 --> 00:28:18.590
现在已经进行了高层概述

00:28:15.140 --> 00:28:20.000
让我们来一点技术

00:28:18.590 --> 00:28:22.640
实际看一下

00:28:20.000 --> 00:28:23.930
建立产品，这样我就不必

00:28:22.640 --> 00:28:25.640
给出完整的演练

00:28:23.930 --> 00:28:27.500
现在，因为一只手臂不会

00:28:25.640 --> 00:28:29.930
足以做到这一点，它可能会

00:28:27.500 --> 00:28:33.680
很无聊

00:28:29.930 --> 00:28:34.940
所以我基本上要离开一个系列

00:28:33.680 --> 00:28:36.830
您需要走的里程碑

00:28:34.940 --> 00:28:38.600
通过，这样当你实际上如果

00:28:36.830 --> 00:28:40.250
您实际上决定制造产品

00:28:38.600 --> 00:28:43.270
你会知道在哪里看，你

00:28:40.250 --> 00:28:43.270
不知道要问什么问题

00:28:44.590 --> 00:28:49.430
所以每个产品的关键部分是

00:28:47.930 --> 00:28:52.130
所谓的想法点平台

00:28:49.430 --> 00:28:53.570
前缀和理想平台traffix 

00:28:52.130 --> 00:28:55.280
实际上是一个系统属性

00:28:53.570 --> 00:28:57.050
控制由哪个文件加载

00:28:55.280 --> 00:28:58.700
 IntelliJ IDEA被业界视为

00:28:57.050 --> 00:29:01.280
智能平台作为描述符

00:28:58.700 --> 00:29:04.660
产品的数量，所以实际上有两个

00:29:01.280 --> 00:29:07.340
指定产品的主文件

00:29:04.660 --> 00:29:10.490
伊朗实际上是，我将谈一谈

00:29:07.340 --> 00:29:11.720
在下一张幻灯片中介绍一下它们，但

00:29:10.490 --> 00:29:13.370
关键是这个系统

00:29:11.720 --> 00:29:15.920
属性指定要去的文件

00:29:13.370 --> 00:29:17.510
要加载，您说的是

00:29:15.920 --> 00:29:20.330
默认VM选项中的此属性

00:29:17.510 --> 00:29:24.200
为您的产品，以便它总是加载

00:29:20.330 --> 00:29:25.640
您需要的东西，所以第一个

00:29:24.200 --> 00:29:28.430
这些文件是一些所谓的插件

00:29:25.640 --> 00:29:30.140
文件，因此此文件的名称是理想的

00:29:28.430 --> 00:29:34.340
从前缀医生，然后将其插入

00:29:30.140 --> 00:29:37.280
在XML上，它具有完全相同的

00:29:34.340 --> 00:29:41.290
作为常规插件XML文件的结构

00:29:37.280 --> 00:29:43.580
你需要写的

00:29:41.290 --> 00:29:44.990
显然那里有一些东西

00:29:43.580 --> 00:29:46.100
像

00:29:44.990 --> 00:29:46.570
积累，直到你建立和类似的东西

00:29:46.100 --> 00:29:49.310
那

00:29:46.570 --> 00:29:51.530
但他们的整体结构

00:29:49.310 --> 00:29:53.150
组件的动作列表

00:29:51.530 --> 00:29:55.310
扩展和扩展点是

00:29:53.150 --> 00:29:57.770
与个人完全相同

00:29:55.310 --> 00:29:59.210
插件，显然您不必

00:29:57.770 --> 00:30:02.050
列出所需的所有组件

00:29:59.210 --> 00:30:05.030
直接包含在此文件中，您可以

00:30:02.050 --> 00:30:06.830
包括必要的机会

00:30:05.030 --> 00:30:11.660
您想要的功能

00:30:06.830 --> 00:30:13.220
如此访问，所以它们是我们自己的

00:30:11.660 --> 00:30:14.960
文件的构建本质上是一棵树

00:30:13.220 --> 00:30:16.280
单独的渠道，包括每个

00:30:14.960 --> 00:30:19.550
其他，您可以选择一个

00:30:16.280 --> 00:30:21.050
您需要包含在您的产品中，因此

00:30:19.550 --> 00:30:23.930
可能是最基本的版本

00:30:21.050 --> 00:30:25.370
产品插件文件，这样您就可以

00:30:23.930 --> 00:30:26.980
你只是包括整个

00:30:25.370 --> 00:30:30.639
他们的IntelliJ IDEA插件

00:30:26.980 --> 00:30:32.169
从那开始可能是

00:30:30.639 --> 00:30:33.639
最容易得到流鼻涕的东西

00:30:32.169 --> 00:30:35.820
看起来像是建立在

00:30:33.639 --> 00:30:35.820
平台

00:30:36.059 --> 00:30:43.330
当然要看一下源代码

00:30:38.649 --> 00:30:46.750
的IntelliJ并像点中那样看想法

00:30:43.330 --> 00:30:49.179
 XML文件以获得更真实的示例

00:30:46.750 --> 00:30:52.389
看起来如何，所以你看到了

00:30:49.179 --> 00:30:55.210
 ubi声明了大部分文件

00:30:52.389 --> 00:30:56.980
包含其他文件的包含，因此

00:30:55.210 --> 00:30:59.409
包括所谓的到达平台

00:30:56.980 --> 00:31:01.240
插件调试器和十个电源

00:30:59.409 --> 00:31:05.559
注释小工具等等

00:31:01.240 --> 00:31:09.159
第四，然后您有常规列表

00:31:05.559 --> 00:31:10.929
组件和扩展

00:31:09.159 --> 00:31:19.389
要点和例外之类的东西

00:31:10.929 --> 00:31:22.659
第二个文件是应用程序

00:31:19.389 --> 00:31:24.309
信息文件，该文件实际上是

00:31:22.659 --> 00:31:25.360
所有品牌的单一入口点

00:31:24.309 --> 00:31:26.950
您所拥有的信息

00:31:25.360 --> 00:31:29.320
产品，因此它指定了合适的产品

00:31:26.950 --> 00:31:32.409
命名您使用的所有徽标版本

00:31:29.320 --> 00:31:34.690
编号生成编号依此类推

00:31:32.409 --> 00:31:36.340
通常你的构建脚本

00:31:34.690 --> 00:31:37.870
修补程序会从

00:31:36.340 --> 00:31:42.100
餐厅全部并将其匹配到

00:31:37.870 --> 00:31:43.809
正确的内部版本号，这是

00:31:42.100 --> 00:31:46.210
就像一个非常简化的例子

00:31:43.809 --> 00:31:47.500
文件，所以我删除了大部分

00:31:46.210 --> 00:31:52.779
领域，但您会看到重要的

00:31:47.500 --> 00:31:55.230
这样的公司名称和

00:31:52.779 --> 00:31:57.159
内部版本号和网址

00:31:55.230 --> 00:32:02.049
绑定盒图像和启动屏幕

00:31:57.159 --> 00:32:08.590
图片，您也可以在

00:32:02.049 --> 00:32:10.360
 IntelliJ IDEA源代码，所以这是

00:32:08.590 --> 00:32:11.950
喜欢更完整的东西，所以你

00:32:10.360 --> 00:32:14.139
看到实际上必须指定很多

00:32:11.950 --> 00:32:18.309
这里有不同的颜色和名称

00:32:14.139 --> 00:32:20.260
和网址之类的东西，但是

00:32:18.309 --> 00:32:21.580
问题是所有这些都取决于

00:32:20.260 --> 00:32:23.320
具体产品，您可以更改

00:32:21.580 --> 00:32:24.669
所有的东西，如果有的话

00:32:23.320 --> 00:32:26.260
那你无法改变的东西

00:32:24.669 --> 00:32:28.889
您可以将其归档给我们，并且

00:32:26.260 --> 00:32:28.889
我们将修复它

00:32:32.529 --> 00:32:36.190
一旦拥有了这两个文件

00:32:34.330 --> 00:32:36.840
实际构建产品

00:32:36.190 --> 00:32:39.240
某种方式

00:32:36.840 --> 00:32:41.820
现在最好的方法是

00:32:39.240 --> 00:32:43.139
只是拿建立的账单脚本

00:32:41.820 --> 00:32:44.580
 IntelliJ IDEA社区版和

00:32:43.139 --> 00:32:45.960
简单地将其分叉并使您的

00:32:44.580 --> 00:32:48.749
更改以将其加入套件

00:32:45.960 --> 00:32:51.210
脚本留下的您自己的产品

00:32:48.749 --> 00:32:54.240
和Bill /-在源代码中扭曲甘特

00:32:51.210 --> 00:32:55.830
版的代码及其方式

00:32:54.240 --> 00:32:57.419
作品首先要用一些东西

00:32:55.830 --> 00:32:59.789
叫做GPS这是我们的

00:32:57.419 --> 00:33:01.200
本地构建系统是一回事

00:32:59.789 --> 00:33:04.279
我们现在在内部使用

00:33:01.200 --> 00:33:06.450
能源作为我们的外部构建系统， 

00:33:04.279 --> 00:33:08.249
从本质上讲，您所做的一切是

00:33:06.450 --> 00:33:09.720
除非您构建一个

00:33:08.249 --> 00:33:14.159
命令中的IntelliJ IDEA产品

00:33:09.720 --> 00:33:15.720
线或从ID中选择一种方式

00:33:14.159 --> 00:33:17.279
只需构建脚本加载

00:33:15.720 --> 00:33:20.220
社区的产品档案不同

00:33:17.279 --> 00:33:22.529
它建立它得到一堆草

00:33:20.220 --> 00:33:25.049
文件，然后执行称为

00:33:22.529 --> 00:33:26.549
实际上课的布局

00:33:25.049 --> 00:33:28.350
输出目录中的文件和

00:33:26.549 --> 00:33:32.009
将它们打包成jar文件

00:33:28.350 --> 00:33:33.779
到您指定的结构，因此需要

00:33:32.009 --> 00:33:35.580
领导者和插件主管，以及

00:33:33.779 --> 00:33:39.179
将所有每个模块都放在正确的位置

00:33:35.580 --> 00:33:40.919
的地方，这实际上是非常不错的DSL 

00:33:39.179 --> 00:33:43.559
我们也在内部建立了

00:33:40.919 --> 00:33:46.379
在猫身上，当然在布局上

00:33:43.559 --> 00:33:47.789
具有用于

00:33:46.379 --> 00:33:49.289
所有平台，还有

00:33:47.789 --> 00:33:53.460
 Windows平台特定的部分

00:33:49.289 --> 00:33:55.649
以Linux和Mac为例， 

00:33:53.460 --> 00:33:57.149
少量的本机代码组件

00:33:55.649 --> 00:33:59.610
这些组件是特定于

00:33:57.149 --> 00:34:02.629
每个平台都有东西

00:33:59.610 --> 00:34:06.929
例如称为坏文件

00:34:02.629 --> 00:34:11.369
有些分布他很简单

00:34:06.929 --> 00:34:14.069
刚刚剪切的布局脚本示例

00:34:11.369 --> 00:34:16.919
从我们的主要构建脚本中删除，因此您

00:34:14.069 --> 00:34:19.020
嵌套这些即可看到Mac 

00:34:16.919 --> 00:34:22.079
您可以定义源的函数

00:34:19.020 --> 00:34:24.599
目录，然后指定jar 

00:34:22.079 --> 00:34:27.179
文件并指定将哪些模块放入

00:34:24.599 --> 00:34:29.099
每个jar文件非常好

00:34:27.179 --> 00:34:34.829
可读的DSL，我们非常喜欢

00:34:29.099 --> 00:34:37.169
是的，完整，完整，完整

00:34:34.829 --> 00:34:42.929
文件也很明显相当多

00:34:37.169 --> 00:34:45.349
更大的是最终的

00:34:42.929 --> 00:34:45.349
不是那个

00:34:45.790 --> 00:34:55.690
它仍然使用相同的结构

00:34:48.220 --> 00:34:56.980
很干净，很可读，所以一对

00:34:55.690 --> 00:34:58.120
我想做的其他事情

00:34:56.980 --> 00:35:01.420
首先提到窗户

00:34:58.120 --> 00:35:02.680
发射器，所以以前我们曾经执行4G 

00:35:01.420 --> 00:35:04.120
建立Windows启动器

00:35:02.680 --> 00:35:08.320
现在我们有自己的商品

00:35:04.120 --> 00:35:09.460
启动器是开源的，我们有

00:35:08.320 --> 00:35:11.050
所谓的发电机启动

00:35:09.460 --> 00:35:13.090
匹配它以包含正确的

00:35:11.050 --> 00:35:15.490
品牌和类似的东西

00:35:13.090 --> 00:35:17.850
并且有一个功能来构建它

00:35:15.490 --> 00:35:20.350
这是我们的甘斯（Gans）爬行游戏的一部分

00:35:17.850 --> 00:35:21.400
也想改变这个，让你的

00:35:20.350 --> 00:35:26.410
自己的启动器（如果您要构建一个

00:35:21.400 --> 00:35:27.490
然后将产品放在IntelliJ平台之上

00:35:26.410 --> 00:35:29.950
我们实际上必须建立

00:35:27.490 --> 00:35:32.620
 Windows Mac和Linux发行版

00:35:29.950 --> 00:35:34.450
现在我们不给它

00:35:32.620 --> 00:35:37.630
我们希望为此提供很多帮助

00:35:34.450 --> 00:35:39.190
给出例如脚本

00:35:37.630 --> 00:35:41.290
发布安装程序不是开源的

00:35:39.190 --> 00:35:43.180
目前是一次开源

00:35:41.290 --> 00:35:44.710
他们，这可能会发生在

00:35:43.180 --> 00:35:47.170
未来几个月，但他们无法付出

00:35:44.710 --> 00:35:49.780
不幸的是，对于Mac而言，任何承诺

00:35:47.170 --> 00:35:51.400
剧团的能力很强

00:35:49.780 --> 00:35:53.490
加上我们自己的环境

00:35:51.400 --> 00:35:56.350
将宙斯盾实际评估为

00:35:53.490 --> 00:35:58.420
 Mac机器并在其中运行脚本

00:35:56.350 --> 00:36:00.610
建立实际上是这个的dmg 

00:35:58.420 --> 00:36:02.650
未来的自我写在所有人的Perl中

00:36:00.610 --> 00:36:04.920
东西，这不是我们的东西

00:36:02.650 --> 00:36:07.360
期待开源

00:36:04.920 --> 00:36:09.850
您需要使用自己带来的

00:36:07.360 --> 00:36:12.220
幸运的是，Linux的解决方案很容易

00:36:09.850 --> 00:36:17.920
这只是黑暗的种子文件，它是

00:36:12.220 --> 00:36:20.500
非常容易构建，如果可以的话

00:36:17.920 --> 00:36:22.660
如果您一切正常

00:36:20.500 --> 00:36:24.100
正确并且与您有产品

00:36:22.660 --> 00:36:25.420
实际上你开始分发它

00:36:24.100 --> 00:36:27.300
结果很多事情，你

00:36:25.420 --> 00:36:29.500
必须在服务器端考虑

00:36:27.300 --> 00:36:31.180
所以你要考虑他们是否

00:36:29.500 --> 00:36:33.550
接受异常导入的位置

00:36:31.180 --> 00:36:35.920
如何提供自动更新以及

00:36:33.550 --> 00:36:37.720
您喜欢的部分的补丁

00:36:35.920 --> 00:36:39.280
实际上可以使用很多东西，所以

00:36:37.720 --> 00:36:41.020
批处理建筑立面是

00:36:39.280 --> 00:36:42.580
社区不同的源代码和

00:36:41.020 --> 00:36:43.720
更新文件是非常简单的XML文件

00:36:42.580 --> 00:36:45.820
你只需要放在某个地方

00:36:43.720 --> 00:36:48.370
您的服务器并告诉URL指定

00:36:45.820 --> 00:36:50.330
应用程序信息文件中的URL，因此

00:36:48.370 --> 00:36:51.800
支持它很容易

00:36:50.330 --> 00:36:52.910
你可能想弄清楚

00:36:51.800 --> 00:36:56.180
有关插件存储库的一些信息

00:36:52.910 --> 00:36:57.980
要么使用我们的Android Studio 

00:36:56.180 --> 00:36:59.900
是否或以某种方式建立自己的

00:36:57.980 --> 00:37:02.900
您必须考虑的事情

00:36:59.900 --> 00:37:04.460
用户统计信息流向何处

00:37:02.900 --> 00:37:07.820
想与我们分享它们，或者如果您

00:37:04.460 --> 00:37:10.610
想拥有自己的东西

00:37:07.820 --> 00:37:12.500
再次是应用程序信息文件

00:37:10.610 --> 00:37:16.130
您可以在其中自定义所有

00:37:12.500 --> 00:37:18.680
就是每个网址

00:37:16.130 --> 00:37:20.510
来自我的产品访问权是

00:37:18.680 --> 00:37:21.770
可定制以适应影响

00:37:20.510 --> 00:37:23.720
我们可以将所有这些东西放到您的

00:37:21.770 --> 00:37:29.450
服务器，而不是参考

00:37:23.720 --> 00:37:31.550
产生东西，所以最后一个

00:37:29.450 --> 00:37:33.020
我们答应的最后一个问题

00:37:31.550 --> 00:37:35.240
回答如何为

00:37:33.020 --> 00:37:37.520
实际上是IntelliJ IDEA平台

00:37:35.240 --> 00:37:39.080
非常容易，只需去签名即可

00:37:37.520 --> 00:37:42.740
年度贡献者许可协议

00:37:39.080 --> 00:37:44.450
通过电子邮件发送给我们，然后您就可以

00:37:42.740 --> 00:37:49.160
转到github并向我们发送池请求

00:37:44.450 --> 00:37:50.420
如果您在构建产品时

00:37:49.160 --> 00:37:52.160
你遇到了一些限制

00:37:50.420 --> 00:37:54.650
平台缺少一些API， 

00:37:52.160 --> 00:37:56.360
您可以在产品中找不到

00:37:54.650 --> 00:37:59.150
始终添加并发送给我们

00:37:56.360 --> 00:38:03.470
要求分离的核心

00:37:59.150 --> 00:38:05.090
平台，我们会努力做到

00:38:03.470 --> 00:38:07.400
审查将退步和

00:38:05.090 --> 00:38:09.380
将它们纳入产品活动

00:38:07.400 --> 00:38:10.970
显然，您需要提供一些

00:38:09.380 --> 00:38:12.290
动机为什么你想要这个，为什么

00:38:10.970 --> 00:38:14.690
这是最好的方法

00:38:12.290 --> 00:38:19.790
拿走，但总的来说，就是那些

00:38:14.690 --> 00:38:22.910
就是这样，这就是我

00:38:19.790 --> 00:38:24.770
想今天告诉你，现在我

00:38:22.910 --> 00:38:27.610
我们应该有足够的时间

00:38:24.770 --> 00:38:27.610
讨论和

00:38:33.540 --> 00:38:38.440
因此，让我们看看切换到

00:38:35.440 --> 00:38:43.180
问题和答案部分还可以，对不起

00:38:38.440 --> 00:38:45.339
是的，谢谢你，是的，所以我们

00:38:43.180 --> 00:38:46.809
收到了一些问题

00:38:45.339 --> 00:38:48.280
网络研讨会注册我

00:38:46.809 --> 00:38:50.020
猜测我们将从回答这些问题开始

00:38:48.280 --> 00:38:55.869
然后我们可以从

00:38:50.020 --> 00:38:58.540
听众是否有谢谢迪米特里

00:38:55.869 --> 00:38:59.920
现在为您的演讲我

00:38:58.540 --> 00:39:04.780
在列表中寻找哦

00:38:59.920 --> 00:39:08.290
我们从建立人那里得到的问题

00:39:04.780 --> 00:39:13.690
网络上现在有些是我们的话

00:39:08.290 --> 00:39:20.890
您的声音，但我们有一些有趣的地方

00:39:13.690 --> 00:39:23.829
那些是您的问题Ruby粉丝如此

00:39:20.890 --> 00:39:30.400
是否可以使用任何其他非je 

00:39:23.829 --> 00:39:34.089
插件或产品的语言

00:39:30.400 --> 00:39:35.770
直观的平台，现在您必须

00:39:34.089 --> 00:39:40.390
使用编译为查韦斯语的语言

00:39:35.770 --> 00:39:42.280
因此您可以使用Java或表兄弟或Scala 

00:39:40.390 --> 00:39:45.970
或三叶草

00:39:42.280 --> 00:39:48.040
或某些东西或古怪但

00:39:45.970 --> 00:39:50.319
使用Ruby会很有趣

00:39:48.040 --> 00:39:53.140
所以有可能像

00:39:50.319 --> 00:39:54.430
编译JRuby代码以构建产品

00:39:53.140 --> 00:39:59.799
但这不是我们正在做的事情

00:39:54.430 --> 00:40:05.349
在内部，所以本质上

00:39:59.799 --> 00:40:07.450
谢谢英雄们另一个问题你

00:40:05.349 --> 00:40:10.690
提到，但也许你可以

00:40:07.450 --> 00:40:17.770
提供更多细节

00:40:10.690 --> 00:40:21.760
现在有可能

00:40:17.770 --> 00:40:25.119
在...之上提供商业产品

00:40:21.760 --> 00:40:25.599
 IntelliJ平台绝对是

00:40:25.119 --> 00:40:28.599
可能

00:40:25.599 --> 00:40:30.900
而且没有任何限制

00:40:28.599 --> 00:40:30.900
那样做

00:40:32.049 --> 00:40:45.170
如果您在旅行车API之上执行此操作， 

00:40:39.769 --> 00:40:49.940
还有其他任何一种计划

00:40:45.170 --> 00:40:51.170
的App Store的插件不错，就像我一样

00:40:49.940 --> 00:40:53.089
提到这真的取决于

00:40:51.170 --> 00:40:54.799
我们目前的兴趣水平

00:40:53.089 --> 00:40:57.920
我们没有很多商业插件

00:40:54.799 --> 00:40:59.510
如果我们有它们，我们可能是

00:40:57.920 --> 00:41:03.320
打算建立这样的应用程序商店，但对于

00:40:59.510 --> 00:41:05.380
现在不是我们的近期计划

00:41:03.320 --> 00:41:05.380
您

00:41:05.560 --> 00:41:12.850
好吧，一些用户也好奇

00:41:10.150 --> 00:41:14.980
有任何保护

00:41:12.850 --> 00:41:18.220
化石权与离岸党

00:41:14.980 --> 00:41:20.110
产品，那么古德温的计划如何

00:41:18.220 --> 00:41:22.980
继续进行可能的商业订购

00:41:20.110 --> 00:41:27.910
实现

00:41:22.980 --> 00:41:29.860
实现符合条件的免费功能

00:41:27.910 --> 00:41:38.170
纳入核心功能

00:41:29.860 --> 00:41:40.270
您的产品之类的东西

00:41:38.170 --> 00:41:42.310
对此的答案是我们讨厌的阿什利

00:41:40.270 --> 00:41:43.600
做复杂的工作，所以如果有

00:41:42.310 --> 00:41:45.100
好的插件就是

00:41:43.600 --> 00:41:47.260
我们首先要在我们的产品中做

00:41:45.100 --> 00:41:48.550
我们要与开发人员交谈的所有内容

00:41:47.260 --> 00:41:51.070
的插件，并找出是否存在

00:41:48.550 --> 00:41:54.220
使用他们的代码的任何可能性

00:41:51.070 --> 00:41:55.990
其实有很多插件

00:41:54.220 --> 00:41:57.970
我们将其作为

00:41:55.990 --> 00:41:59.740
互联网ID分配

00:41:57.970 --> 00:42:02.170
最初的Pepes具有开源插件

00:41:59.740 --> 00:42:03.790
由第三方开发商开发，显然

00:42:02.170 --> 00:42:05.320
如果每次我们都请求许可并

00:42:03.790 --> 00:42:08.890
每次我们达成一些条件

00:42:05.320 --> 00:42:10.330
同意这些当事人并保持

00:42:08.890 --> 00:42:13.780
代码，如果有商业广告

00:42:10.330 --> 00:42:17.230
插件我们也有机会

00:42:13.780 --> 00:42:18.960
也愿意指出

00:42:17.230 --> 00:42:21.520
人们使用现有的解决方案

00:42:18.960 --> 00:42:23.110
保留为单独的产品，或者

00:42:21.520 --> 00:42:25.630
真的希望这个必须捆绑在一起

00:42:23.110 --> 00:42:27.130
然后我们将讨论

00:42:25.630 --> 00:42:28.840
许可现有的商业广告

00:42:27.130 --> 00:42:32.070
产品，以便我们可以将其作为

00:42:28.840 --> 00:42:32.070
它是我们代码库的一部分

00:42:33.599 --> 00:42:39.239
我沉了，下一个更多

00:42:36.699 --> 00:42:42.219
技术是关于视觉设计师的

00:42:39.239 --> 00:42:49.529
视觉设计师的API有多丰富

00:42:42.219 --> 00:42:49.529
可以在IntelliJ平台中使用

00:42:49.650 --> 00:42:57.549
仅终极版或IntelliJ 

00:42:53.859 --> 00:42:58.809
平台以及视觉设计师

00:42:57.549 --> 00:43:01.569
是他们社区的一部分

00:42:58.809 --> 00:43:02.920
源代码不是最终的一部分，因为

00:43:01.569 --> 00:43:06.009
为了保证我想你可以看看

00:43:02.920 --> 00:43:07.239
在它，看看它做什么和它

00:43:06.009 --> 00:43:08.619
基本上为您提供

00:43:07.239 --> 00:43:10.690
建立设计师的基础，但是

00:43:08.619 --> 00:43:18.309
设计师本身不是什么

00:43:10.690 --> 00:43:21.009
如果您已经建造好了，就必须

00:43:18.309 --> 00:43:25.199
如用户询问是否有任何

00:43:21.009 --> 00:43:25.199
平台中的辅助功能

00:43:26.819 --> 00:43:32.829
除了所提供的

00:43:29.109 --> 00:43:39.400
默认值否，所以我们没有任何特定的

00:43:32.829 --> 00:43:44.349
您知道的可及性

00:43:39.400 --> 00:43:46.690
问题是关于更多质量

00:43:44.349 --> 00:43:50.140
插件开发人员的公制工具

00:43:46.690 --> 00:43:51.640
可以实际使用我们最好的工具

00:43:50.140 --> 00:43:53.349
可以推荐这里是我们所使用的工具

00:43:51.640 --> 00:43:56.949
在使用自己

00:43:53.349 --> 00:43:59.229
你的孩子你的孩子我们的分析器

00:43:56.949 --> 00:44:01.359
很好的性能概述

00:43:59.229 --> 00:44:04.239
 Java应用程序用户的内存

00:44:01.359 --> 00:44:06.069
你可以用它来探索

00:44:04.239 --> 00:44:09.690
操作正在您的插件中进行

00:44:06.069 --> 00:44:09.690
以及要使用多少内存等等

00:44:12.069 --> 00:44:24.859
好吧，还有一个关于如何

00:44:20.740 --> 00:44:32.030
也许是应对变化的最好方法

00:44:24.859 --> 00:44:35.890
在API中，因此一些用户提到他们

00:44:32.030 --> 00:44:39.319
经过一些遇到问题

00:44:35.890 --> 00:44:42.160
 API的重大变化是什么才是最好的

00:44:39.319 --> 00:44:44.660
解决这个问题的方法

00:44:42.160 --> 00:44:46.789
嗯，这实际上是我们的一部分

00:44:44.660 --> 00:44:48.950
开发产品实际上可以节省您

00:44:46.789 --> 00:44:50.569
很痛苦，因为你

00:44:48.950 --> 00:44:51.980
取决于你取决于

00:44:50.569 --> 00:44:54.020
您平台的特定版本

00:44:51.980 --> 00:44:55.700
选择那是你的哪个版本

00:44:54.020 --> 00:44:57.859
选择我升级到较新的

00:44:55.700 --> 00:45:00.670
从来没有像扩大和

00:44:57.859 --> 00:45:00.670
预期破损

00:45:00.770 --> 00:45:05.030
幸运的是，如果你是

00:45:03.470 --> 00:45:08.599
不幸的是，您构建了一个插件

00:45:05.030 --> 00:45:11.720
必须处理API更改，我们尝试

00:45:08.599 --> 00:45:13.250
最小化它们，但是为了能够

00:45:11.720 --> 00:45:15.650
向方向发展平台

00:45:13.250 --> 00:45:17.869
我们想要解决它，我们只需

00:45:15.650 --> 00:45:19.849
破坏API，以便

00:45:17.869 --> 00:45:22.460
对其进行模块化并打破依赖关系

00:45:19.849 --> 00:45:26.119
那是不合适的，所有这些

00:45:22.460 --> 00:45:27.859
来源广泛，使用范围广

00:45:26.119 --> 00:45:29.599
概念试点将不可能

00:45:27.859 --> 00:45:33.069
如果我们必须保留一个

00:45:29.599 --> 00:45:33.069
版本之间的兼容性

00:45:36.690 --> 00:45:49.960
可能是第四天最好的

00:45:39.900 --> 00:45:54.720
他问有关图片博客的问题，是的

00:45:49.960 --> 00:46:02.290
我在读yeah实际上是一个问题

00:45:54.720 --> 00:46:07.690
桃园到底代表什么

00:46:02.290 --> 00:46:11.580
单一的插件产品

00:46:07.690 --> 00:46:13.570
我有魅力的故事是这样

00:46:11.580 --> 00:46:16.300
其实你可以建立一个插件

00:46:13.570 --> 00:46:18.640
同时与IntelliJ和

00:46:16.300 --> 00:46:20.050
 Python的价值以及魅力和

00:46:18.640 --> 00:46:21.550
显然酒吧的魅力是商业性的

00:46:20.050 --> 00:46:23.200
产品，如果您想建立自己的

00:46:21.550 --> 00:46:26.200
在我的魅力之上拥有自己的产品，然后你

00:46:23.200 --> 00:46:28.630
需要与需要讨论

00:46:26.200 --> 00:46:30.130
向我们提供任何设备，因为这样您

00:46:28.630 --> 00:46:32.500
本质上需要成为经销商

00:46:30.130 --> 00:46:35.890
 pycharm是这样的

00:46:32.500 --> 00:46:40.540
可能，但并非如此简单

00:46:35.890 --> 00:46:42.460
与源的东西，但技术上

00:46:40.540 --> 00:46:44.980
是的，您可以构建一个可以正常工作的插件

00:46:42.460 --> 00:46:47.820
用于由

00:46:44.980 --> 00:46:47.820
特定的api 

00:46:49.910 --> 00:46:54.380
所以还有其他问题吗

00:47:00.930 --> 00:47:10.880
那就是我们到目前为止所有的一切

00:47:08.580 --> 00:47:13.290
如果没有人有其他问题，那么

00:47:10.880 --> 00:47:15.210
谢谢您的关注，如果您

00:47:13.290 --> 00:47:17.190
有技术或非问题

00:47:15.210 --> 00:47:22.350
请与技术或业务相关

00:47:17.190 --> 00:47:25.560
请随时直接与我联系，为什么

00:47:22.350 --> 00:47:28.800
只是下雨而已

00:47:25.560 --> 00:47:31.260
在Twitter上关注我，否则我将成为我

00:47:28.800 --> 00:47:33.000
会很乐意帮助您

00:47:31.260 --> 00:47:34.530
技术或营销或业务

00:47:33.000 --> 00:47:37.260
问题，否则我会与您联系

00:47:34.530 --> 00:47:45.420
合适的人来帮助您

00:47:37.260 --> 00:47:48.840
公司，谢谢大家，我们将有

00:47:45.420 --> 00:47:53.240
报告了抱歉，请调整一下

00:47:48.840 --> 00:47:55.710
继续，是的，只是添加一些评论

00:47:53.240 --> 00:47:58.980
您可以在以下找到更多信息

00:47:55.710 --> 00:48:08.160
 IntelliJ平台首页G 

00:47:58.980 --> 00:48:10.800
大脑点组织，你也可以看到

00:48:08.160 --> 00:48:14.910
社区正面的源代码

00:48:10.800 --> 00:48:20.040
版本在github上，所以所有来源都是

00:48:14.910 --> 00:48:24.950
可用并用于插件开发

00:48:20.040 --> 00:48:30.060
您可以去我们的会议空间

00:48:24.950 --> 00:48:35.490
查找所有步骤的文档

00:48:30.060 --> 00:48:39.870
绘制插件，如果遇到任何问题

00:48:35.490 --> 00:48:42.360
问题，你可以回答自己你

00:48:39.870 --> 00:48:46.610
可以在开发者社区论坛上提问

00:48:42.360 --> 00:48:50.040
因此，我们的开发人员会监控这些

00:48:46.610 --> 00:48:53.720
这些问题，我们很乐意

00:48:50.040 --> 00:48:56.460
帮助您解决这些问题

00:48:53.720 --> 00:49:00.960
所以是的，这一切都感谢你的

00:48:56.460 --> 00:49:04.500
参加我们的Twitter帐户，如果

00:49:00.960 --> 00:49:08.670
您对合伙有任何疑问

00:49:04.500 --> 00:49:11.760
请联系与我联系的树或

00:49:08.670 --> 00:49:14.580
 Brian现在有了这个电子邮件地址，我们

00:49:11.760 --> 00:49:19.280
会带哦不

00:49:14.580 --> 00:49:25.680
从本届会议开始，并将其发布

00:49:19.280 --> 00:49:28.310
在今天之后的一个星期内，是的，谢谢

00:49:25.680 --> 00:49:28.310
好的谢谢

