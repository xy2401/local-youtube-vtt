WEBVTT
Kind: captions
Language: zh-Hans

00:00:05.690 --> 00:00:12.139
我想欢迎你们，我想我们有

00:00:08.770 --> 00:00:14.120
我们已经有很多这样的谢谢

00:00:12.139 --> 00:00:16.099
加入，我要谈谈

00:00:14.120 --> 00:00:18.200
关于将安全性从权利转移到权利

00:00:16.099 --> 00:00:20.090
剩下的第一件事是什么

00:00:18.200 --> 00:00:20.570
意味着将安全从权利转移到

00:00:20.090 --> 00:00:22.670
剩下

00:00:20.570 --> 00:00:26.390
好吧，如果您从证券看

00:00:22.670 --> 00:00:28.189
角度来看，安全是最重要的

00:00:26.390 --> 00:00:31.070
时间是在正确的锅上， 

00:00:28.189 --> 00:00:32.570
不好的意思是如果您看到一个

00:00:31.070 --> 00:00:34.730
从左到右然后在

00:00:32.570 --> 00:00:36.379
您拥有CI系统的正确路径，或者

00:00:34.730 --> 00:00:39.260
就在您投产之前

00:00:36.379 --> 00:00:44.329
我们有一个安全团队

00:00:39.260 --> 00:00:47.690
他们大多数时候会检查您的东西

00:00:44.329 --> 00:00:51.680
是唯一的安全和力量，所以您

00:00:47.690 --> 00:00:54.020
好吧，我们认为通过移动

00:00:51.680 --> 00:00:56.989
左侧的安全性

00:00:54.020 --> 00:00:59.570
开发人员关注的重点是

00:00:56.989 --> 00:01:02.270
更好，因为实际上我们是

00:00:59.570 --> 00:01:05.720
谈论那里的工作是几秒钟

00:01:02.270 --> 00:01:07.910
我个人不了解你

00:01:05.720 --> 00:01:10.220
太确定了，但我讨厌亡灵这个词

00:01:07.910 --> 00:01:12.289
体检听起来像听起来

00:01:10.220 --> 00:01:15.319
就像我想说话的祖父

00:01:12.289 --> 00:01:17.780
和很酷的孩子一起，我们有了这个

00:01:15.319 --> 00:01:19.700
这件事与开发人员和运营有关

00:01:17.780 --> 00:01:21.830
听起来他们的还行

00:01:19.700 --> 00:01:25.130
投票，所以现在我们有这个麻袋

00:01:21.830 --> 00:01:26.840
倾向于是安全的中间是

00:01:25.130 --> 00:01:30.080
到处都有，我们必须这样做

00:01:26.840 --> 00:01:32.720
到处都是，尽管我可能不喜欢

00:01:30.080 --> 00:01:35.929
 word def设置，因为我不知道

00:01:32.720 --> 00:01:39.289
认为我确实同意

00:01:35.929 --> 00:01:41.330
的心态，因为我们需要

00:01:39.289 --> 00:01:45.160
我从每个人那里都意识到安全性

00:01:41.330 --> 00:01:49.369
在我们的开发周期中的角度

00:01:45.160 --> 00:01:51.440
考虑一下，让我先

00:01:49.369 --> 00:01:53.690
自我介绍，因为好人可能

00:01:51.440 --> 00:01:55.630
不认识我，我是Brian，我为

00:01:53.690 --> 00:01:58.640
忘记了的开发人员

00:01:55.630 --> 00:02:03.080
所以现在你知道我是公司

00:01:58.640 --> 00:02:05.420
我在荷兰工作，也为

00:02:03.080 --> 00:02:07.429
巨大的橡木有点像

00:02:05.420 --> 00:02:09.560
在那边，我共同领导

00:02:07.429 --> 00:02:11.900
安全的社区开发人员

00:02:09.560 --> 00:02:13.370
和在线社区，我们将重点放在

00:02:11.900 --> 00:02:16.430
正在从

00:02:13.370 --> 00:02:18.770
我们与之合作的开发者关注重点

00:02:16.430 --> 00:02:19.610
那里的各种各样的公司

00:02:18.770 --> 00:02:21.710
所以如果你

00:02:19.610 --> 00:02:24.020
觉得这是你想要的东西

00:02:21.710 --> 00:02:26.900
随时加入更多关注

00:02:24.020 --> 00:02:29.360
在那边，然后回到两个

00:02:26.900 --> 00:02:30.980
死亡传世我们是什么我们是什么

00:02:29.360 --> 00:02:32.660
试图很好地处理聋人的设置

00:02:30.980 --> 00:02:34.550
嗯，这实际上是关于

00:02:32.660 --> 00:02:37.790
这个周期是什么问题，我们

00:02:34.550 --> 00:02:41.060
想解决我想为人民

00:02:37.790 --> 00:02:44.420
可以说银行环境

00:02:41.060 --> 00:02:46.910
或他们可能是政府机构

00:02:44.420 --> 00:02:49.820
知道十年前甚至几十年

00:02:46.910 --> 00:02:52.790
多年前他们正在部署

00:02:49.820 --> 00:02:55.040
一年两次一年三次

00:02:52.790 --> 00:02:57.500
您现在看到的是我们正在加速

00:02:55.040 --> 00:03:00.260
每个人都希望加快交货速度

00:02:57.500 --> 00:03:02.209
交货，因为我们想领先

00:03:00.260 --> 00:03:05.420
我们的竞争对手中，我们希望拥有这个

00:03:02.209 --> 00:03:08.510
我们想要创造新的商业价值

00:03:05.420 --> 00:03:10.459
在较小的迭代中分成小块

00:03:08.510 --> 00:03:12.140
当完成后，我们想做一些

00:03:10.459 --> 00:03:15.590
不断的整合和

00:03:12.140 --> 00:03:18.709
连续交付，但这意味着

00:03:15.590 --> 00:03:21.620
现在，那么你可以说

00:03:18.709 --> 00:03:23.510
他们只专注于创造他的

00:03:21.620 --> 00:03:25.580
东西，那很好，那很好

00:03:23.510 --> 00:03:28.700
我的意思是业务价值是

00:03:25.580 --> 00:03:30.890
您作为公司生存的原因或

00:03:28.700 --> 00:03:33.410
为什么你作为公司赚钱，但是

00:03:30.890 --> 00:03:35.420
另一部分更像是可以

00:03:33.410 --> 00:03:39.530
如果没有出错，那就不是

00:03:35.420 --> 00:03:41.390
正确的事情，我们没有那个

00:03:39.530 --> 00:03:44.600
我们非常注重安全性，因为我们

00:03:41.390 --> 00:03:48.860
需要加快这些事情，所以如果我们

00:03:44.600 --> 00:03:51.830
缺乏对安全性的关注

00:03:48.860 --> 00:03:55.940
那生命周期可能意味着

00:03:51.830 --> 00:03:59.350
我们确实调查了安全性，但抓住了这些

00:03:55.940 --> 00:04:01.610
事情太迟了或根本没有

00:03:59.350 --> 00:04:04.549
那是因为我们还在生活

00:04:01.610 --> 00:04:07.220
剑灵般的安全感

00:04:04.549 --> 00:04:09.170
大部分时间都向所有安全团队提供专业知识

00:04:07.220 --> 00:04:11.000
在行的结尾

00:04:09.170 --> 00:04:13.190
看门人说停止你要走

00:04:11.000 --> 00:04:15.470
投入生产，因为您确实有一个

00:04:13.190 --> 00:04:17.810
我们想要的另一方面

00:04:15.470 --> 00:04:20.900
他们想做渗透测试

00:04:17.810 --> 00:04:23.630
他们想进行审核或其他

00:04:20.900 --> 00:04:25.400
需要一些时间

00:04:23.630 --> 00:04:27.560
几天，也许一周或更长时间， 

00:04:25.400 --> 00:04:29.270
我现在每天部署两次

00:04:27.560 --> 00:04:31.550
实例，因为我们做得很酷

00:04:29.270 --> 00:04:32.840
微服务那种东西和吞

00:04:31.550 --> 00:04:33.380
持续的时间我们去了

00:04:32.840 --> 00:04:35.800
山和

00:04:33.380 --> 00:04:38.360
当他们测试我的东西时，我

00:04:35.800 --> 00:04:40.880
大概距离10次迭代

00:04:38.360 --> 00:04:43.850
但最重要的是

00:04:40.880 --> 00:04:46.310
我们不做安全或不做

00:04:43.850 --> 00:04:47.870
以正确的方式为客户提供安全保障

00:04:46.310 --> 00:04:50.330
数据可能会被泄露，这就是

00:04:47.870 --> 00:04:52.880
我们都不想发生的事情

00:04:50.330 --> 00:04:56.330
我们在这里制定了该gdpr法律

00:04:52.880 --> 00:05:00.320
欧洲，但总的来说像PII 

00:04:56.330 --> 00:05:04.340
只是为了获取数据而已

00:05:00.320 --> 00:05:07.070
好东西，那有多糟

00:05:04.340 --> 00:05:08.750
情况很好，我们有几个

00:05:07.070 --> 00:05:10.880
时代在日产，这总是

00:05:08.750 --> 00:05:14.300
我问人民的问题是

00:05:10.880 --> 00:05:15.770
您曾经听说过Equifax和很多

00:05:14.300 --> 00:05:18.500
人们都听说过Equifax 

00:05:15.770 --> 00:05:22.880
因为报纸上的这些东西

00:05:18.500 --> 00:05:24.260
或新网站，如果我问人们做了

00:05:22.880 --> 00:05:26.420
你知道三年的Equifax 

00:05:24.260 --> 00:05:27.950
一两年前有很多

00:05:26.420 --> 00:05:30.320
他们没有，所以你可以说这是

00:05:27.950 --> 00:05:33.110
良好的行销能力，但我不同意

00:05:30.320 --> 00:05:35.480
这可能是我的事

00:05:33.110 --> 00:05:37.040
大问题他们确实知道您的名字，但是

00:05:35.480 --> 00:05:39.350
 Equifax发生的是

00:05:37.040 --> 00:05:41.480
 Equifax正在使用，而我正在使用

00:05:39.350 --> 00:05:43.970
因为它也不是唯一

00:05:41.480 --> 00:05:45.770
被破坏的公司，但这是

00:05:43.970 --> 00:05:47.930
被违反的原因之一是

00:05:45.770 --> 00:05:50.420
使用对她的依赖

00:05:47.930 --> 00:05:53.180
过时的依赖关系

00:05:50.420 --> 00:05:55.600
不只是在他们的过时了

00:05:53.180 --> 00:05:58.580
他们使用的特定版本

00:05:55.600 --> 00:06:01.580
 Apache Struts有一个ADD漏洞

00:05:58.580 --> 00:06:04.940
发现某时间的能力

00:06:01.580 --> 00:06:07.250
被公开记录在案

00:06:04.940 --> 00:06:08.660
已经解决了，但是如果您这样做

00:06:07.250 --> 00:06:11.510
不知道你有没有

00:06:08.660 --> 00:06:13.280
扫描正确，否则您不会收到警告

00:06:11.510 --> 00:06:15.530
被某人使用的那个

00:06:13.280 --> 00:06:20.420
你可能最终拥有这个

00:06:15.530 --> 00:06:25.430
 143年末生产方式过长

00:06:20.420 --> 00:06:29.290
百万用户帐户或数据购买一个

00:06:25.430 --> 00:06:32.450
有443人被破坏或

00:06:29.290 --> 00:06:36.440
人们的东西在街上，所以

00:06:32.450 --> 00:06:38.330
这意味着很多人

00:06:36.440 --> 00:06:40.100
您所做的数据或重要数据

00:06:38.330 --> 00:06:42.530
不想出去的是

00:06:40.100 --> 00:06:47.129
街上又有类似的东西

00:06:42.530 --> 00:06:49.830
蝙蝠营销很好，我想是的，但是如果我们

00:06:47.129 --> 00:06:52.619
指出我的意思是最重要的

00:06:49.830 --> 00:06:55.319
我们当中可能是开发人员，如果我们

00:06:52.619 --> 00:06:58.379
看发展，我们看你

00:06:55.319 --> 00:07:02.909
应用程序，那么我们只会看到您的

00:06:58.379 --> 00:07:06.089
这样的应用程序，那么我们可以说

00:07:02.909 --> 00:07:09.110
您在其中产生的代码量

00:07:06.089 --> 00:07:13.469
应用程序可能是

00:07:09.110 --> 00:07:15.239
因为我们所做的一切，但我们

00:07:13.469 --> 00:07:17.639
只想专注于真实业务

00:07:15.239 --> 00:07:19.529
逻辑做的事情使

00:07:17.639 --> 00:07:22.769
差异，而不是所有样板

00:07:19.529 --> 00:07:24.869
诸如创建原始存储库之类的东西

00:07:22.769 --> 00:07:27.509
创建剩余存储库，确保

00:07:24.869 --> 00:07:31.139
我们完成了所有的管道工程

00:07:27.509 --> 00:07:33.269
取决于框架库和所有

00:07:31.139 --> 00:07:35.789
各种第三图书馆的第三点

00:07:33.269 --> 00:07:39.839
资料库大部分是开放的

00:07:35.789 --> 00:07:44.159
源，我们盲目地使用它，那是

00:07:39.839 --> 00:07:46.529
好还是不好，我会说这不是一个

00:07:44.159 --> 00:07:48.509
使用我们支持的开源问题

00:07:46.529 --> 00:07:50.519
开源我是开源的忠实粉丝

00:07:48.509 --> 00:07:52.949
但是我们必须确保开源

00:07:50.519 --> 00:07:54.629
只是错误的开放源而已

00:07:52.949 --> 00:07:57.059
几个维护者，也许很多

00:07:54.629 --> 00:07:59.639
维修，但如果有的话

00:07:57.059 --> 00:08:01.679
滑倒可能是一个问题

00:07:59.639 --> 00:08:05.519
很多人，因为这是

00:08:01.679 --> 00:08:07.169
被广泛使用，因此

00:08:05.519 --> 00:08:09.689
概述我有一个无服务器的示例

00:08:07.169 --> 00:08:11.519
在这里，你不必看

00:08:09.689 --> 00:08:15.539
代码，因为我不会说

00:08:11.519 --> 00:08:17.849
很漂亮，但是它是19行代码

00:08:15.539 --> 00:08:19.199
有一些依赖关系，两个直接

00:08:17.849 --> 00:08:22.399
依赖关系，众所周知

00:08:19.199 --> 00:08:24.929
每个主要依赖都有

00:08:22.399 --> 00:08:27.119
传递性依存关系

00:08:24.929 --> 00:08:29.819
依赖于依赖和依赖

00:08:27.119 --> 00:08:33.389
我们总共有19个其他依赖项

00:08:29.819 --> 00:08:35.219
依赖关系好一点

00:08:33.389 --> 00:08:38.370
可能会想到多少行代码

00:08:35.219 --> 00:08:41.399
我们实际上只是通过

00:08:38.370 --> 00:08:46.500
这两个的小服务示例

00:08:41.399 --> 00:08:49.279
直接依赖我希望你做了

00:08:46.500 --> 00:08:51.300
在你的内心猜测

00:08:49.279 --> 00:08:54.689
差不多二十万

00:08:51.300 --> 00:08:56.279
代码行，因此您会看到很多

00:08:54.689 --> 00:09:00.790
您放入的代码行

00:08:56.279 --> 00:09:04.960
生产不是你的第二个

00:09:00.790 --> 00:09:09.090
 22行代码非常简洁的应用程序

00:09:04.960 --> 00:09:13.540
因为春季服务，它有五个

00:09:09.090 --> 00:09:17.830
直接依赖这五个直接

00:09:13.540 --> 00:09:21.910
依赖导致54个依赖

00:09:17.830 --> 00:09:24.190
总共，您看到了多少行

00:09:21.910 --> 00:09:27.640
我们投入生产的代码，我们知道

00:09:24.190 --> 00:09:31.810
虽然春天对你有很大帮助

00:09:27.640 --> 00:09:33.880
这在我们的Java生态系统中如何

00:09:31.810 --> 00:09:39.760
您认为多少行代码

00:09:33.880 --> 00:09:46.090
这22222行代码将您带入

00:09:39.760 --> 00:09:50.980
您几乎可以带来生产

00:09:46.090 --> 00:09:53.500
五百万，所以你看到我们依靠

00:09:50.980 --> 00:09:55.750
很多别人的东西，并使用它

00:09:53.500 --> 00:09:59.650
那很好，因为我们不想

00:09:55.750 --> 00:10:01.750
做到这一点可能会奏效，但要做很多工作

00:09:59.650 --> 00:10:05.590
在样板上，如果已经完成

00:10:01.750 --> 00:10:10.570
正确完成了为什么不使用它

00:10:05.590 --> 00:10:14.200
另一方面，这个开源

00:10:10.570 --> 00:10:15.610
用法爆炸了持续数次

00:10:14.200 --> 00:10:18.580
好几年不是最近几年

00:10:15.610 --> 00:10:20.290
在过去十年中，如果这

00:10:18.580 --> 00:10:24.700
还是如果使用开源

00:10:20.290 --> 00:10:26.500
爆炸了，那么我们会看到，如果我们

00:10:24.700 --> 00:10:28.870
在专业中只有一种外国人的能力

00:10:26.500 --> 00:10:31.870
包，那么我们将看到很多

00:10:28.870 --> 00:10:34.440
公司很多很多程序很多

00:10:31.870 --> 00:10:36.880
应用程序容易受到攻击

00:10:34.440 --> 00:10:38.980
攻击者将陷入不同

00:10:36.880 --> 00:10:41.860
能力并随机尝试

00:10:38.980 --> 00:10:44.620
因为例如Equifax不是

00:10:41.860 --> 00:10:47.470
现在特别针对的是Equifax 

00:10:44.620 --> 00:10:49.930
好吧，我会说人

00:10:47.470 --> 00:10:52.780
尝试利用该漏洞，并发现

00:10:49.930 --> 00:10:55.270
在这家公司，他们有

00:10:52.780 --> 00:10:57.420
旧的struts库，他们可以创建

00:10:55.270 --> 00:11:00.340
也许他们在那里呆了几个月， 

00:10:57.420 --> 00:11:02.290
静静地看着系统， 

00:11:00.340 --> 00:11:02.650
找出他们在那边有什么

00:11:02.290 --> 00:11:07.990
那里

00:11:02.650 --> 00:11:09.250
因此存在开源风险

00:11:07.990 --> 00:11:11.350
你不应该使用开源

00:11:09.250 --> 00:11:14.620
再次，但您应该注意

00:11:11.350 --> 00:11:18.850
事实上，由于被广泛采用

00:11:14.620 --> 00:11:21.400
如果您有任何风险，如果我们

00:11:18.850 --> 00:11:23.800
看例如多少包

00:11:21.400 --> 00:11:26.440
生态系统中有多少

00:11:23.800 --> 00:11:29.410
打包东京索引的数量

00:11:26.440 --> 00:11:29.950
去年摸索了包装让我

00:11:29.410 --> 00:11:32.290
看到

00:11:29.950 --> 00:11:34.510
 PM显然是赢家，这是

00:11:32.290 --> 00:11:37.060
易于选择JavaScript，但是因为

00:11:34.510 --> 00:11:39.160
 NPM提供了我所知道的所有内容的软件包

00:11:37.060 --> 00:11:41.590
打包或三个或四个包裹

00:11:39.160 --> 00:11:43.750
一切，但如果我们看一条线， 

00:11:41.590 --> 00:11:46.440
 Maven Central有，因为也许在

00:11:43.750 --> 00:11:49.090
中央仍然是最大的

00:11:46.440 --> 00:11:51.520
在我们内部为您提供包裹

00:11:49.090 --> 00:11:54.400
他们看到Java生态系统这一行

00:11:51.520 --> 00:11:56.440
也非常陡峭，如果我们看一下

00:11:54.400 --> 00:11:58.900
去年有多少新漏洞

00:11:56.440 --> 00:12:02.200
或最近几年是

00:11:58.900 --> 00:12:05.020
介绍我们在Java生态系统中

00:12:02.200 --> 00:12:11.230
明确的赢家，这就是我们

00:12:05.020 --> 00:12:14.200
如果我们看的话不应该为此感到骄傲

00:12:11.230 --> 00:12:17.110
在这里，你会看到更多

00:12:14.200 --> 00:12:19.000
或更少不是我们的Java穷人

00:12:17.110 --> 00:12:21.940
生态系统，例如NPM 

00:12:19.000 --> 00:12:24.160
与其说是依赖，不如说是

00:12:21.940 --> 00:12:27.340
实际下载但依赖项

00:12:24.160 --> 00:12:31.660
如果你在下面，如果你很好

00:12:27.340 --> 00:12:34.180
你春天和春天利用的实例

00:12:31.660 --> 00:12:38.080
很多上层依赖

00:12:34.180 --> 00:12:40.420
因为例如封送处理

00:12:38.080 --> 00:12:42.970
确保有存储库

00:12:40.420 --> 00:12:45.220
驱动程序可以运行的可用状态，因此我们

00:12:42.970 --> 00:12:48.280
取决于很多事情

00:12:45.220 --> 00:12:52.120
我们可能不知道的大多数

00:12:48.280 --> 00:12:54.160
缺陷和大多数问题都在

00:12:52.120 --> 00:12:58.000
间接附录，没有那么多

00:12:54.160 --> 00:13:01.420
直接依赖，如果我们问

00:12:58.000 --> 00:13:04.750
这些保持好起来如何

00:13:01.420 --> 00:13:07.780
你对自己有信心吗

00:13:04.750 --> 00:13:11.080
拥有30％的安全知识

00:13:07.780 --> 00:13:13.510
那里的东西规模很高

00:13:11.080 --> 00:13:18.810
安全知识很高，并且63 

00:13:13.510 --> 00:13:22.660
事情还好吧，如果我们以及多少钱

00:13:18.810 --> 00:13:27.150
依靠那个好的年龄，我们做我们做我们

00:13:22.660 --> 00:13:27.150
相信那又是盲目的

00:13:28.520 --> 00:13:33.170
但是如果我们换个角度来看

00:13:30.880 --> 00:13:36.470
我们正在创建新软件

00:13:33.170 --> 00:13:37.790
开发者权利和责任人

00:13:36.470 --> 00:13:42.590
为了安全

00:13:37.790 --> 00:13:46.130
我们至少有89％的人

00:13:42.590 --> 00:13:48.920
接受采访，由陪审团完成

00:13:46.130 --> 00:13:51.860
最终完成了一项大规模调查

00:13:48.920 --> 00:13:53.510
在一份称为开放状态的报告中

00:13:51.860 --> 00:13:56.300
您可以从中下载社会保障

00:13:53.510 --> 00:13:58.460
我们的网站，但我们和在此

00:13:56.300 --> 00:14:01.880
我们与很多开源聊天的调查

00:13:58.460 --> 00:14:06.500
维护人员和应用程序开发人员

00:14:01.880 --> 00:14:08.630
总的来说，在那个调查中

00:14:06.500 --> 00:14:11.660
结果是人们认为

00:14:08.630 --> 00:14:13.460
开发人员至少应拥有81％ 

00:14:11.660 --> 00:14:17.630
被采访的人

00:14:13.460 --> 00:14:20.720
说至少89或那个开发商

00:14:17.630 --> 00:14:24.530
应该承担很多责任

00:14:20.720 --> 00:14:26.210
如果涉及安全性，那么您可能会

00:14:24.530 --> 00:14:28.070
看到它超过100％ 

00:14:26.210 --> 00:14:29.480
没错，因为您可以分享

00:14:28.070 --> 00:14:31.430
大多数人认为责任

00:14:29.480 --> 00:14:33.710
是开发人员和运营部门，还是

00:14:31.430 --> 00:14:34.940
开发人员和安全团队，但是您

00:14:33.710 --> 00:14:36.650
看到我们必须做一些

00:14:34.940 --> 00:14:40.490
开发人员，而不仅仅是制作一个新的

00:14:36.650 --> 00:14:43.960
团队合作的亮点，如果我们问别人

00:14:40.490 --> 00:14:50.420
他们如何找到任何东西

00:14:43.960 --> 00:14:53.060
 27％的漏洞可能不会或

00:14:50.420 --> 00:14:57.290
很多人只是随机扫​​描

00:14:53.060 --> 00:14:59.560
 sealy数据库，相当

00:14:57.290 --> 00:14:59.560
吓人的

00:14:59.680 --> 00:15:08.360
所以说一次依赖是一次

00:15:06.800 --> 00:15:11.300
该漏洞被发现泄露

00:15:08.360 --> 00:15:16.490
记录下来，并报告给

00:15:11.300 --> 00:15:19.250
 e给suti所有者给人民

00:15:16.490 --> 00:15:22.430
维持那个包裹

00:15:19.250 --> 00:15:25.580
修复得很好吗

00:15:22.430 --> 00:15:30.340
一般需要几天的时间

00:15:25.580 --> 00:15:30.340
这样的事情解决了你的想法

00:15:30.460 --> 00:15:36.640
在几天之内

00:15:32.370 --> 00:15:41.170
大约是16天，所以

00:15:36.640 --> 00:15:42.880
不太长，所以意味着一次

00:15:41.170 --> 00:15:45.280
那里的人很脆弱

00:15:42.880 --> 00:15:49.720
热衷于修理东西并得到

00:15:45.280 --> 00:15:51.340
出新的包裹，但换句话说

00:15:49.720 --> 00:15:53.230
周围说什么东西正在生产

00:15:51.340 --> 00:15:56.950
然后把它放在那边

00:15:53.230 --> 00:16:00.100
可能在当时可能并不脆弱

00:15:56.950 --> 00:16:01.780
点你投产多少

00:16:00.100 --> 00:16:05.370
资金能力需要几天的时间

00:16:01.780 --> 00:16:08.740
在以下文件中公开和记录

00:16:05.370 --> 00:16:15.430
一般，这不是几天

00:16:08.740 --> 00:16:17.560
这是令人震惊的几年

00:16:15.430 --> 00:16:19.720
一般大约两年半左右

00:16:17.560 --> 00:16:23.500
这意味着如果我们放一些东西

00:16:19.720 --> 00:16:27.070
现在很酷，现在可以工作了

00:16:23.500 --> 00:16:29.920
尝试深入研究，并确定

00:16:27.070 --> 00:16:31.870
他们会找到乐趣的时间

00:16:29.920 --> 00:16:33.550
速度说不是如果你

00:16:31.870 --> 00:16:35.380
一揽子计划很容易支出

00:16:33.550 --> 00:16:38.950
图片Bev ibex可用于

00:16:35.380 --> 00:16:40.630
太阳和同一件事对事物有帮助

00:16:38.950 --> 00:16:44.440
像docker我们是Dockett我们正在使用

00:16:40.630 --> 00:16:47.890
码头工人如今沉重，但如果我们看

00:16:44.440 --> 00:16:50.470
例如在docker镜像中

00:16:47.890 --> 00:16:53.230
你可以而且你可以下载

00:16:50.470 --> 00:16:56.710
从docker hub上，我们甚至看到

00:16:53.230 --> 00:17:00.820
来自他们的图像

00:16:56.710 --> 00:17:02.860
自己的供应商，因此注释图片如果

00:17:00.820 --> 00:17:05.140
您只需下载真正的笔记

00:17:02.860 --> 00:17:07.660
来自码头工人的图像，你得到这个

00:17:05.140 --> 00:17:10.030
扫描是在某个地方完成的

00:17:07.660 --> 00:17:12.579
可以提供超过500个资助者的能力，这些

00:17:10.030 --> 00:17:16.270
几乎可以追踪所有漏洞

00:17:12.579 --> 00:17:19.360
回到基本图片，就是这样

00:17:16.270 --> 00:17:21.040
很难，因为我知道des是

00:17:19.360 --> 00:17:25.270
不是不是脆弱，而是基于

00:17:21.040 --> 00:17:27.579
在成熟的Debian上的图像上

00:17:25.270 --> 00:17:30.490
可能带来所有这些的图像

00:17:27.579 --> 00:17:33.430
与他们的漏洞，它有

00:17:30.490 --> 00:17:35.530
这个D，这些都很好

00:17:33.430 --> 00:17:38.530
这些是下载次数最多的时间

00:17:35.530 --> 00:17:43.150
当时的包裹，所以我

00:17:38.530 --> 00:17:44.770
说是三月左右

00:17:43.150 --> 00:17:50.040
我们知道大多数漏洞

00:17:44.770 --> 00:17:52.810
适用于任何开源或任何形式的docker 

00:17:50.040 --> 00:17:54.730
操作系统层，如果我们问

00:17:52.810 --> 00:17:58.900
人们扫描它吗？ 

00:17:54.730 --> 00:18:03.070
你怎么知道的很多

00:17:58.900 --> 00:18:08.590
人们只是不知道，我认为

00:18:03.070 --> 00:18:11.560
这是完全一样的，如果我们把

00:18:08.590 --> 00:18:13.960
这个东西部署了，我们只是

00:18:11.560 --> 00:18:16.150
把它留在那边很多人会

00:18:13.960 --> 00:18:20.110
从来没有发现他们是否有

00:18:16.150 --> 00:18:24.010
漏洞，它并没有停止

00:18:20.110 --> 00:18:27.610
在您投入生产时， 

00:18:24.010 --> 00:18:30.130
我认为谈话就足够了

00:18:27.610 --> 00:18:33.730
我认为很酷的东西

00:18:30.130 --> 00:18:37.150
做一些黑客，我会

00:18:33.730 --> 00:18:40.570
显示地图位置让我

00:18:37.150 --> 00:18:44.580
启动它不是在那

00:18:40.570 --> 00:18:44.580
有趣的应用程序本身

00:18:45.450 --> 00:18:54.460
让我看看演示应用程序

00:18:49.210 --> 00:18:56.470
重新启动它，以确保始终会中断

00:18:54.460 --> 00:18:58.810
民主党首先要确保

00:18:56.470 --> 00:19:01.020
您的下载正常运行

00:18:58.810 --> 00:19:03.430
我的本地或本地计算机上的所有内容

00:19:01.020 --> 00:19:09.370
只是为了确保我们没有

00:19:03.430 --> 00:19:13.240
这么多的干扰，所以我有一个

00:19:09.370 --> 00:19:15.550
很好的应用程序，非常好

00:19:13.240 --> 00:19:18.430
因为好吧，你知道我很好

00:19:15.550 --> 00:19:24.130
 UX用户，我可以进行引导

00:19:18.430 --> 00:19:27.070
基本上这是一个非常简单的应用程序

00:19:24.130 --> 00:19:30.480
一定要看，我可以，我可以张贴

00:19:27.070 --> 00:19:33.430
消息结束，所以在这种情况下，我

00:19:30.480 --> 00:19:37.930
将自己注册为Brian，我给

00:19:33.430 --> 00:19:40.060
我自己的密码很酷，我可以提交

00:19:37.930 --> 00:19:41.860
所以现在我陷入混乱中， 

00:19:40.060 --> 00:19:50.310
管理员已经放了一些

00:19:41.860 --> 00:19:55.170
消息，所以我可以说是

00:19:50.310 --> 00:19:56.610
脑子，我不能放东西

00:19:55.170 --> 00:20:01.470
一切都好

00:19:56.610 --> 00:20:06.810
好吧，这还可以，这很好

00:20:01.470 --> 00:20:08.760
而且很酷，这个应用程序有一个

00:20:06.810 --> 00:20:11.400
一点认证和

00:20:08.760 --> 00:20:14.730
通过使用令牌进行授权，我将

00:20:11.400 --> 00:20:17.010
立即显示

00:20:14.730 --> 00:20:21.840
应用程序，我们有一个令牌

00:20:17.010 --> 00:20:24.750
这个令牌，基本上不是

00:20:21.840 --> 00:20:27.810
代币通常会缩短您的寿命

00:20:24.750 --> 00:20:30.680
应该做，但是对于

00:20:27.810 --> 00:20:32.730
为了争辩这个令牌是你

00:20:30.680 --> 00:20:34.470
只要努力，就能证明自己

00:20:32.730 --> 00:20:38.070
我有这个令牌，我是Brian，我可以

00:20:34.470 --> 00:20:40.800
我可以发布视图，但是

00:20:38.070 --> 00:20:43.140
我们可以做的另一件事是

00:20:40.800 --> 00:20:45.420
我们所有关于页面的信息都很棒

00:20:43.140 --> 00:20:48.240
说关于这一切

00:20:45.420 --> 00:20:51.780
最神奇的应用

00:20:48.240 --> 00:20:54.750
关于页面，由于某种原因，我们可以

00:20:51.780 --> 00:20:57.240
可以上传文件以及我们可以做什么

00:20:54.750 --> 00:20:59.040
在这里我们可以上传不是

00:20:57.240 --> 00:21:01.770
只需上传文件，我们就可以上传zip 

00:20:59.040 --> 00:21:06.360
文件，它将自动解压缩

00:21:01.770 --> 00:21:09.920
听起来真的很酷，我们要做的是

00:21:06.360 --> 00:21:12.420
我们要去吗我知道不知道为什么

00:21:09.920 --> 00:21:13.920
知道存在漏洞

00:21:12.420 --> 00:21:18.000
在那里，我们将创建一个

00:21:13.920 --> 00:21:20.250
易受攻击的zip文件，我要做什么

00:21:18.000 --> 00:21:23.310
是，我们将向您展示有关

00:21:20.250 --> 00:21:24.510
 zip文件模拟器的创建者，我希望

00:21:23.310 --> 00:21:27.780
每个人都可以看到我要走了

00:21:24.510 --> 00:21:31.050
大一点，我要做的是

00:21:27.780 --> 00:21:34.500
我将创建一个zip文件核心

00:21:31.050 --> 00:21:35.010
 JetBrains演示zip，其中包含两个

00:21:34.500 --> 00:21:40.020
东西

00:21:35.010 --> 00:21:43.670
它包含一个文本文件，其正文为

00:21:40.020 --> 00:21:47.460
有一个很好的文本文件，其中包含

00:21:43.670 --> 00:21:48.210
另一个文件是关于页面点

00:21:47.460 --> 00:21:51.480
的HTML 

00:21:48.210 --> 00:21:54.690
好吧，我正在尝试创建

00:21:51.480 --> 00:21:56.760
我现在要做的是关于页面博士

00:21:54.690 --> 00:22:00.270
开瓶器或要走一些路

00:21:56.760 --> 00:22:01.950
通常在这里遍历拉链

00:22:00.270 --> 00:22:04.490
文件将被下载或将

00:22:01.950 --> 00:22:06.900
提取到某个文件中

00:22:04.490 --> 00:22:09.300
公共项目文件或类似的东西

00:22:06.900 --> 00:22:11.190
我要回溯一下

00:22:09.300 --> 00:22:15.390
事情，或者我将尝试做到这一点， 

00:22:11.190 --> 00:22:17.760
覆盖我的“我”中的“关于”页面

00:22:15.390 --> 00:22:19.880
系统，所以我需要做的是

00:22:17.760 --> 00:22:23.850
添加关于页面的内容，以便

00:22:19.880 --> 00:22:27.210
让我们转到我要去的关于页面

00:22:23.850 --> 00:22:29.520
检查那个，然后我们可以得到

00:22:27.210 --> 00:22:30.960
来源我真的不在乎什么

00:22:29.520 --> 00:22:36.300
这里发生了什么，我只是复制并

00:22:30.960 --> 00:22:38.780
粘贴它复制它，你看到我要

00:22:36.300 --> 00:22:41.040
内容，并得到一本邪恶的书本

00:22:38.780 --> 00:22:46.670
打开邪恶哦发短信你看到一点

00:22:41.040 --> 00:22:51.060
脚本哦，他们让我先放

00:22:46.670 --> 00:22:56.010
此处的HTML，并确保

00:22:51.060 --> 00:22:59.670
脚本是HTML的一部分，现在我

00:22:56.010 --> 00:23:01.290
现在必须以这样酷的结尾

00:22:59.670 --> 00:23:04.280
你在这里看到的是，我只是

00:23:01.290 --> 00:23:07.380
里面我只是重新创建了相同的HTML 

00:23:04.280 --> 00:23:10.500
页，只是为了向您展示这是一个

00:23:07.380 --> 00:23:12.090
不一样，我会在它后面加一个点

00:23:10.500 --> 00:23:15.270
如果我们覆盖它，那么您可以看到

00:23:12.090 --> 00:23:18.240
它发生了，我插入一些

00:23:15.270 --> 00:23:20.070
带有

00:23:18.240 --> 00:23:22.560
 JavaScript我将获取或获取Cookie 

00:23:20.070 --> 00:23:25.230
我会看看你有什么饼干

00:23:22.560 --> 00:23:28.400
我将该Cookie发送到另一个网址， 

00:23:25.230 --> 00:23:32.430
什么不是网址，我会告诉你

00:23:28.400 --> 00:23:34.110
如果我现在有个好东西

00:23:32.430 --> 00:23:37.080
在这里，我给你打个招呼

00:23:34.110 --> 00:23:39.930
特里西娅然后它给了我喜特里西娅

00:23:37.080 --> 00:23:43.230
回来，但如果我看着这点

00:23:39.930 --> 00:23:48.150
应用程序有它这是我的帮助

00:23:43.230 --> 00:23:51.930
浏览器，然后您会看到其项目

00:23:48.150 --> 00:23:55.110
你看这个喜翠西亚很安全

00:23:51.930 --> 00:23:56.820
每天，所以如果我能帮您保存任何文字

00:23:55.110 --> 00:24:01.050
在这里，我只是给参数

00:23:56.820 --> 00:24:02.970
只是很酷的URL 

00:24:01.050 --> 00:24:06.120
有些事情，但我想做的是

00:24:02.970 --> 00:24:09.420
这件事在这里让你

00:24:06.120 --> 00:24:10.830
 cookie并尝试使用存储该cookie 

00:24:09.420 --> 00:24:12.750
该服务，因此只需将其重定向到

00:24:10.830 --> 00:24:16.380
另一个网址，这样我就可以窃取您的

00:24:12.750 --> 00:24:17.880
说完我想做的事

00:24:16.380 --> 00:24:23.280
这个我爱

00:24:17.880 --> 00:24:25.860
刚刚创建了使用的zip文件，并通过

00:24:23.280 --> 00:24:31.710
所以你会看到我在这里

00:24:25.860 --> 00:24:35.100
创建了这个zip文件，很酷，让我们返回

00:24:31.710 --> 00:24:37.590
进入应用程序，我将进入

00:24:35.100 --> 00:24:38.940
还是布莱恩，我正在上传这个文件

00:24:37.590 --> 00:24:40.860
谁上传都没关系，因为

00:24:38.940 --> 00:24:45.000
我们要覆盖

00:24:40.860 --> 00:24:47.220
东西，所以我要上传这个

00:24:45.000 --> 00:24:48.960
我们刚刚创建的JetBrains演示哦，让我

00:24:47.220 --> 00:24:51.870
只是告诉你这真的是一个拉链

00:24:48.960 --> 00:24:58.320
如果我进入这里的终端文件

00:24:51.870 --> 00:25:00.600
我看到我的喷气机范围演示zip是

00:24:58.320 --> 00:25:03.900
在这里，如果我们查看邮政编码信息

00:25:00.600 --> 00:25:08.910
该zip文件的内容，然后您会看到它

00:25:03.900 --> 00:25:16.220
包含一个很好的文本或一个奇怪的HTML 

00:25:08.910 --> 00:25:20.910
文件中带有一些点点斜杠，因此

00:25:16.220 --> 00:25:27.030
转到我的浏览器，我将接起这个

00:25:20.910 --> 00:25:30.180
 zip打开它，我提交它，然后我们

00:25:27.030 --> 00:25:32.970
看到这里是我们没有错误

00:25:30.180 --> 00:25:37.500
我们看到我的好文字

00:25:32.970 --> 00:25:41.480
也放进去包装并展示

00:25:37.500 --> 00:25:43.740
在这里，就是这个地方

00:25:41.480 --> 00:25:46.410
目标目录

00:25:43.740 --> 00:25:49.320
事情本来应该这样

00:25:46.410 --> 00:25:52.650
可能意味着

00:25:49.320 --> 00:25:55.950
 zip文件点lifepod关于HTML 

00:25:52.650 --> 00:25:58.380
也被解压缩并做了一些模式

00:25:55.950 --> 00:26:02.540
做一些也许做一些包装遍历

00:25:58.380 --> 00:26:06.960
也许意味着关于页面

00:26:02.540 --> 00:26:10.740
包含该点，但也意味着我的

00:26:06.960 --> 00:26:16.710
 cookie是从我的浏览器中读取的， 

00:26:10.740 --> 00:26:19.560
发送到我的其他服务器在这里，如果

00:26:16.710 --> 00:26:23.970
我刚才读的是重新运行的那个项目

00:26:19.560 --> 00:26:24.550
你看到我现在有一个令牌

00:26:23.970 --> 00:26:29.960
这是

00:26:24.550 --> 00:26:31.790
这是我现在可以使用的一个，让我

00:26:29.960 --> 00:26:35.080
把它放在我的剪贴板上让我打开她

00:26:31.790 --> 00:26:38.720
一个新的浏览器，然后转到 localhost 

00:26:35.080 --> 00:26:42.860
让我只是为了确保它

00:26:38.720 --> 00:26:51.470
作品让我登录，现在我是用户foo 

00:26:42.860 --> 00:26:55.730
我看到了，但是转到我的应用程序

00:26:51.470 --> 00:27:04.550
 Cookie删除此插入此

00:26:55.730 --> 00:27:07.010
我只是偷了酷，让我现在再试一次

00:27:04.550 --> 00:27:09.590
当然，我是Brian，这意味着

00:27:07.010 --> 00:27:12.020
这个其他浏览器我偷了你的令牌

00:27:09.590 --> 00:27:15.770
现在我可以接管您的

00:27:12.020 --> 00:27:18.110
当然这个网站不是很安全

00:27:15.770 --> 00:27:22.490
该令牌不是长期令牌，并且

00:27:18.110 --> 00:27:26.020
等等等等，但是你会发现如果一个

00:27:22.490 --> 00:27:29.270
 zip文件未正确构建，并且

00:27:26.020 --> 00:27:33.980
另一方面，这是不正确的

00:27:29.270 --> 00:27:40.250
解压缩，所以你看到我偷了

00:27:33.980 --> 00:27:44.620
你的事情，我可以做得更多，如果

00:27:40.250 --> 00:27:48.740
我去其他网页正常

00:27:44.620 --> 00:27:52.280
在这里，我去看你看到的消息

00:27:48.740 --> 00:27:53.690
我没有打这个，但另一个PD 

00:27:52.280 --> 00:27:56.390
是卖我代币的另一个人

00:27:53.690 --> 00:27:58.310
做得好，这是关于黑客攻击的部分

00:27:56.390 --> 00:28:03.110
但是现在我们将研究

00:27:58.310 --> 00:28:05.810
问题部分，所以进入您的IDE 

00:28:03.110 --> 00:28:09.140
这样的话我先去给你看

00:28:05.810 --> 00:28:11.630
问题出在哪里，我们可以做到这一点

00:28:09.140 --> 00:28:13.070
在一定数量的浪费，因为

00:28:11.630 --> 00:28:16.100
我正在使用库的解压缩部分

00:28:13.070 --> 00:28:18.800
如果我要去解决Maven问题，它将

00:28:16.100 --> 00:28:22.100
看到我会用这个CD zip吗

00:28:18.800 --> 00:28:25.730
图书馆，但是我刚从

00:28:22.100 --> 00:28:27.830
互联网上令人惊叹的中央

00:28:25.730 --> 00:28:30.919
每当我把它放进去

00:28:27.830 --> 00:28:32.809
工作，所以我们怎么能

00:28:30.919 --> 00:28:35.359
找出一些易受伤害的东西

00:28:32.809 --> 00:28:37.879
因为作为开发人员，我想知道

00:28:35.359 --> 00:28:39.499
我很脆弱，什么脆弱

00:28:37.879 --> 00:28:40.700
如果我可以解决，因为如果可以

00:28:39.499 --> 00:28:43.220
可以在我的本地机器上解决

00:28:40.700 --> 00:28:45.470
那就好多了

00:28:43.220 --> 00:28:46.909
在行的结尾，因为那时我

00:28:45.470 --> 00:28:50.090
可能不得不做一些返工

00:28:46.909 --> 00:28:51.739
也许事情无法使用，所以我不得不

00:28:50.090 --> 00:28:55.070
所以你寻找另一个包裹，如果我

00:28:51.739 --> 00:28:58.429
现在可以查一下，看看有没有包装

00:28:55.070 --> 00:29:02.149
已经脆弱或不是脆弱

00:28:58.429 --> 00:29:05.539
可能会节省我很多时间，所以我们可以

00:29:02.149 --> 00:29:08.179
我以几种方式安装了

00:29:05.539 --> 00:29:09.859
在这台机器上偷偷摸摸的工具，我

00:29:08.179 --> 00:29:12.409
不要侮辱潜行CLI，我们可以

00:29:09.859 --> 00:29:14.149
用它为我的终端，虽然

00:29:12.409 --> 00:29:16.190
你可以使用你的终端一

00:29:14.149 --> 00:29:18.950
在这里您还可以使用终端

00:29:16.190 --> 00:29:22.489
在这里，所以在这里我已经正确了

00:29:18.950 --> 00:29:24.859
部分，我只是打电话给潜行测试

00:29:22.489 --> 00:29:27.859
就是那样简单

00:29:24.859 --> 00:29:29.809
从这一点上你看到的是

00:29:27.859 --> 00:29:33.080
它将分析您的Maven依赖关系

00:29:29.809 --> 00:29:34.940
树，它将创建是，它将创建

00:29:33.080 --> 00:29:38.840
一棵树给你，它发送树

00:29:34.940 --> 00:29:40.489
进入潜行的在线系统， 

00:29:38.840 --> 00:29:43.220
偷偷摸摸的在线系统做了什么

00:29:40.489 --> 00:29:46.039
只是看你的依赖树， 

00:29:43.220 --> 00:29:48.559
看你用哪个幻想和哪个幻想

00:29:46.039 --> 00:29:51.109
他们有过境依赖，如果

00:29:48.559 --> 00:29:54.950
那里有漏洞，所以

00:29:51.109 --> 00:29:58.429
我在这里看到我有这个CT 

00:29:54.950 --> 00:30:00.859
压缩文件，它有一个问题，让

00:29:58.429 --> 00:30:02.419
我去看看问题是什么

00:30:00.859 --> 00:30:06.919
您将获得信息的网站

00:30:02.419 --> 00:30:07.940
关于某个漏洞利用，您会看到

00:30:06.919 --> 00:30:10.009
问题是，你看到哪个

00:30:07.940 --> 00:30:12.169
版本易受攻击，而哪些不易受攻击

00:30:10.009 --> 00:30:13.940
然后您在网站上看到

00:30:12.169 --> 00:30:16.700
用113代替它然后

00:30:13.940 --> 00:30:18.619
可能还可以，所以可以给您

00:30:16.700 --> 00:30:23.600
信息这有多重要

00:30:18.619 --> 00:30:26.149
这只是中等严重程度

00:30:23.600 --> 00:30:28.070
回到我在这里的终端

00:30:26.149 --> 00:30:34.480
给我一个修复建议，它

00:30:28.070 --> 00:30:38.419
说不使用12但使用13 

00:30:34.480 --> 00:30:40.279
 1.13它将解决问题，但这

00:30:38.419 --> 00:30:41.960
来自您的终端，它可以是

00:30:40.279 --> 00:30:44.809
和其他人一样好

00:30:41.960 --> 00:30:48.230
在这种情况下，CLI也会扫描

00:30:44.809 --> 00:30:50.809
对于许可问题，但我们还

00:30:48.230 --> 00:30:52.940
我们为我们创造了一些东西

00:30:50.809 --> 00:30:54.649
不用于许可的实际漏洞

00:30:52.940 --> 00:30:59.809
来自我们创建的漏洞

00:30:54.649 --> 00:31:03.769
 IntelliJ的插件，如果有的话

00:30:59.809 --> 00:31:05.210
插件可与Maven一起使用，因此对于

00:31:03.769 --> 00:31:07.730
问题它也可以使用

00:31:05.210 --> 00:31:11.629
 Gretl还不是我们正在研究的那个

00:31:07.730 --> 00:31:14.120
那是我们的积压，但只是为了显示

00:31:11.629 --> 00:31:16.490
你在使用Maven时有多容易

00:31:14.120 --> 00:31:19.279
我们看到当我们仍然从

00:31:16.490 --> 00:31:21.559
去年的JVM报告我们仍然看到

00:31:19.279 --> 00:31:26.659
那位专家仍然是最伟大的

00:31:21.559 --> 00:31:28.639
或最大，最大的二手包装

00:31:26.659 --> 00:31:32.389
管理或依赖管理

00:31:28.639 --> 00:31:37.929
管理系统，如果我打开我的主

00:31:32.389 --> 00:31:42.169
事情在这里，我打开了尼克

00:31:37.929 --> 00:31:44.269
插件AV他然后我可以，我很好

00:31:42.169 --> 00:31:45.619
让我确定它可以在这里工作

00:31:44.269 --> 00:31:47.419
你会看到我们有两个真实的

00:31:45.619 --> 00:31:50.749
漏洞，这是一个

00:31:47.419 --> 00:31:53.210
我的h2数据库的漏洞

00:31:50.749 --> 00:31:56.440
仅用于演示目的，就是这样

00:31:53.210 --> 00:31:59.119
零周转问题或两者兼而有之

00:31:56.440 --> 00:32:02.360
问题是顶级依赖关系

00:31:59.119 --> 00:32:07.909
所以这很容易，但是要说

00:32:02.360 --> 00:32:13.029
实例，我将使用2.0并

00:32:07.909 --> 00:32:16.639
这只是行不通，因为我没有- 

00:32:13.029 --> 00:32:18.139
是的，好的，所以您现在您看到我正在使用

00:32:16.639 --> 00:32:20.299
还有所有春季版本，您会看到

00:32:18.139 --> 00:32:22.039
我们还有更多的问题

00:32:20.299 --> 00:32:24.860
实例在这里与

00:32:22.039 --> 00:32:26.960
最快的毫升Jetson 

00:32:24.860 --> 00:32:28.730
打开它，您将看到实际的位置

00:32:26.960 --> 00:32:30.769
问题是不是在春天会

00:32:28.730 --> 00:32:33.320
开始约会，但春天会

00:32:30.769 --> 00:32:36.129
开始使用JSON并将其更新为

00:32:33.320 --> 00:32:38.840
另一个版本，它将帮助您

00:32:36.129 --> 00:32:40.399
我们刚刚向您展示的那个版本

00:32:38.840 --> 00:32:43.610
这边没有那个

00:32:40.399 --> 00:32:45.499
漏洞了，但让我回头

00:32:43.610 --> 00:32:47.269
然后你可以上下移动

00:32:45.499 --> 00:32:54.169
你会看到我们还有其他

00:32:47.269 --> 00:32:58.320
正确的事情就这样-我要

00:32:54.169 --> 00:33:06.330
回到我原来的

00:32:58.320 --> 00:33:08.430
没有五个人在这里释放它，而你

00:33:06.330 --> 00:33:11.010
看到他们只需要抚养能力

00:33:08.430 --> 00:33:12.630
单击它离开我会去

00:33:11.010 --> 00:33:14.970
直接放入右边的我的手掌锉

00:33:12.630 --> 00:33:21.990
声明，我知道是1或12 

00:33:14.970 --> 00:33:23.940
并通过执行1.30再一次是

00:33:21.990 --> 00:33:26.610
我也可以谁也可以

00:33:23.940 --> 00:33:28.710
自动导入，但我选择不这样做，因为

00:33:26.610 --> 00:33:31.590
通常我会大量工作

00:33:28.710 --> 00:33:33.840
零件，可能需要一段时间，而我只是

00:33:31.590 --> 00:33:37.050
现在我看到我修复了它的取笑功能

00:33:33.840 --> 00:33:41.730
通过简单地放入另一个Nimmi我

00:33:37.050 --> 00:33:45.330
这里只有这个h2剩下，所以我

00:33:41.730 --> 00:33:47.490
要重启这个演示，所以通过杀死

00:33:45.330 --> 00:33:59.460
这个和我的名字我的

00:33:47.490 --> 00:34:02.160
再次申请

00:33:59.460 --> 00:34:06.240
再次创建了zip文件

00:34:02.160 --> 00:34:08.310
因为好吧，我会自动清理它

00:34:06.240 --> 00:34:10.740
因为我不希望你以

00:34:08.310 --> 00:34:14.520
如果我要你重做那么模糊

00:34:10.740 --> 00:34:16.679
演示，但运行此zip创建器

00:34:14.520 --> 00:34:21.330
再次，我们在这里再次拥有那架喷气机

00:34:16.679 --> 00:34:27.530
台式相机拉链只是为了证明

00:34:21.330 --> 00:34:30.060
这是真的，它与页面有关

00:34:27.530 --> 00:34:34.139
我要去，我们要去做

00:34:30.060 --> 00:34:39.780
同样的事情，所以回到这里， 

00:34:34.139 --> 00:34:42.240
要做好h80吊舱，必须先登录或

00:34:39.780 --> 00:34:44.970
注册自己注册我的NX Brian 

00:34:42.240 --> 00:34:52.440
因为我使用的是H2数据库

00:34:44.970 --> 00:34:54.540
一切都消失了不，我不想

00:34:52.440 --> 00:35:00.330
这样说，我可以再次发送消息

00:34:54.540 --> 00:35:04.140
完美的作品，我要上传

00:35:00.330 --> 00:35:08.670
该文件再次成为易受攻击的文件

00:35:04.140 --> 00:35:10.920
我打开它，提交并看到

00:35:08.670 --> 00:35:12.380
宽标签错误页面，如果您看到

00:35:10.920 --> 00:35:16.080
在那里

00:35:12.380 --> 00:35:18.810
底线，您看到文件点

00:35:16.080 --> 00:35:21.450
点斜杠点斜杠目标正在尝试

00:35:18.810 --> 00:35:23.940
将目标ID保留在目录为

00:35:21.450 --> 00:35:28.800
公开上传，我们忽略了

00:35:23.940 --> 00:35:31.500
这种形式很好，这意味着如果我

00:35:28.800 --> 00:35:33.260
回到我的主页回到

00:35:31.500 --> 00:35:36.450
有商品或文字的文件

00:35:33.260 --> 00:35:45.360
但是关于页面没有点

00:35:36.450 --> 00:35:47.580
并检查HTML，我们将看到它

00:35:45.360 --> 00:35:52.680
不包含恶意

00:35:47.580 --> 00:35:55.980
底部的JavaScript，所以我们看到了

00:35:52.680 --> 00:36:00.090
在这里是通过使用另一个

00:35:55.980 --> 00:36:02.520
包装并确保我可以做

00:36:00.090 --> 00:36:06.350
从我的本地计算机上，我可以保存我的

00:36:02.520 --> 00:36:09.870
团队和世界其他地方

00:36:06.350 --> 00:36:11.910
受到很多伤害，这就是我们

00:36:09.870 --> 00:36:15.150
左移安全性的意思是

00:36:11.910 --> 00:36:17.550
我们希望能够从

00:36:15.150 --> 00:36:19.770
开发人员的角度，所以你想要

00:36:17.550 --> 00:36:21.570
为您提供帮助您的工具

00:36:19.770 --> 00:36:24.060
不仅仅是你指出

00:36:21.570 --> 00:36:29.160
有些东西是脆弱的还是不是

00:36:24.060 --> 00:36:31.590
如何解决或减少它

00:36:29.160 --> 00:36:33.600
脆弱，然后由您决定如何

00:36:31.590 --> 00:36:36.630
如果这是一个漏洞

00:36:33.600 --> 00:36:39.720
不是主要的还是不适用的

00:36:36.630 --> 00:36:44.250
给你，那么你可以选择

00:36:39.720 --> 00:36:45.840
忽略它，但是如果它是一个

00:36:44.250 --> 00:36:48.870
您可能认为的漏洞

00:36:45.840 --> 00:36:51.330
好的，这可以吗，这可能会很糟糕

00:36:48.870 --> 00:36:52.920
我们可以将其修复得很好

00:36:51.330 --> 00:36:55.430
眨眼，如果我现在能做

00:36:52.920 --> 00:36:58.650
现在将其推送给我的主存储库

00:36:55.430 --> 00:37:03.210
而不是推一个脆弱的图书馆

00:36:58.650 --> 00:37:05.940
在这一点上，并不仅如此

00:37:03.210 --> 00:37:07.800
最后，我们为自己节省了很多

00:37:05.940 --> 00:37:11.190
时代，因为它不必走那

00:37:07.800 --> 00:37:13.980
从上到下的整个周期

00:37:11.190 --> 00:37:16.140
在这里，我不必等待我的CI 

00:37:13.980 --> 00:37:17.640
系统指出我们有一个

00:37:16.140 --> 00:37:20.910
问题，我可以做到这一点

00:37:17.640 --> 00:37:23.940
发生了什么，所以实际上我们

00:37:20.910 --> 00:37:25.470
想在这里做的是我们要解决的

00:37:23.940 --> 00:37:29.700
正确的问题

00:37:25.470 --> 00:37:32.430
因此，如果我们为此寻求解决方案， 

00:37:29.700 --> 00:37:35.460
认为这是团队的三件事

00:37:32.430 --> 00:37:39.150
文化过程和工具，以及这些

00:37:35.460 --> 00:37:40.740
事情同样重要，因为

00:37:39.150 --> 00:37:42.060
工具可能很棒，但如果不是这样

00:37:40.740 --> 00:37:46.079
使您的教会适应文化或

00:37:42.060 --> 00:37:51.030
处理将注定要失败，所以如果我们看一下

00:37:46.079 --> 00:37:54.000
如果我们看团队感到冷漠

00:37:51.030 --> 00:37:56.069
船，我们必须看点

00:37:54.000 --> 00:37:58.410
做人们关心的事情

00:37:56.069 --> 00:38:00.569
好我们关心的开发人员

00:37:58.410 --> 00:38:02.970
新事物将他的新事物放得快

00:38:00.569 --> 00:38:04.829
尽可能地融入我们的产品并移动

00:38:02.970 --> 00:38:08.160
转到您想要的下一件酷事

00:38:04.829 --> 00:38:09.780
创造权利，所以我们要创造事物

00:38:08.160 --> 00:38:12.150
只有您使它起作用，我们才想

00:38:09.780 --> 00:38:14.250
建立我们和我的东西

00:38:12.150 --> 00:38:17.579
认为自己仍然是开发人员

00:38:14.250 --> 00:38:21.930
我是我们想做的开发者拥护者

00:38:17.579 --> 00:38:24.810
安全团队的大部分事情

00:38:21.930 --> 00:38:26.640
时间不在乎是否可行，或者

00:38:24.810 --> 00:38:28.770
不是因为如果它不起作用

00:38:26.640 --> 00:38:32.250
不去生产，他们不必

00:38:28.770 --> 00:38:34.589
关心安全问题，这样他们就可以

00:38:32.250 --> 00:38:34.800
我非常有另一种观点

00:38:34.589 --> 00:38:36.869
它

00:38:34.800 --> 00:38:39.119
他们唯一想到的是

00:38:36.869 --> 00:38:41.160
他们唯一关心的不是

00:38:39.119 --> 00:38:43.950
容易受到攻击

00:38:41.160 --> 00:38:47.339
被利用，并且

00:38:43.950 --> 00:38:49.859
客户是他们的安全运营人

00:38:47.339 --> 00:38:52.530
考虑可维护性

00:38:49.859 --> 00:38:54.930
轻松维护这个系统

00:38:52.530 --> 00:38:57.359
按下按钮并重置服务

00:38:54.930 --> 00:39:00.270
我可以重新部署这些东西吗

00:38:57.359 --> 00:39:01.859
可能会甚至

00:39:00.270 --> 00:39:05.010
自我修复之类的

00:39:01.859 --> 00:39:06.569
如果开发人员无法做到这一点

00:39:05.010 --> 00:39:08.099
运行良好，无法投入生产

00:39:06.569 --> 00:39:09.990
而且操作没有，而且必须

00:39:08.099 --> 00:39:11.640
维护它，他们不在乎

00:39:09.990 --> 00:39:14.010
这是安全的还是不是他们的工作

00:39:11.640 --> 00:39:16.260
对我来说是改变东西和管理

00:39:14.010 --> 00:39:17.819
好吧，我可以说我可以放心

00:39:16.260 --> 00:39:19.849
管理层是否关心

00:39:17.819 --> 00:39:22.589
钱，但他们关心获利能力

00:39:19.849 --> 00:39:26.160
使它有利可图

00:39:22.589 --> 00:39:29.660
确保您作为公司还在

00:39:26.160 --> 00:39:33.359
如果您将其与您的铅进行比较

00:39:29.660 --> 00:39:35.670
竞争对手，所以如果我们能做到这一点， 

00:39:33.359 --> 00:39:38.369
如果我们看到安全是其中的一部分

00:39:35.670 --> 00:39:39.450
每个人的工作，并带回去

00:39:38.369 --> 00:39:40.860
我们自己

00:39:39.450 --> 00:39:42.450
首先，因为我们可以改变我们

00:39:40.860 --> 00:39:44.910
不能改变别人，但是我们可以做

00:39:42.450 --> 00:39:47.610
可以改变自己，只要我们能够接受

00:39:44.910 --> 00:39:50.760
由开发人员决定，那么我们仍然必须

00:39:47.610 --> 00:39:54.600
将其放入我们的流程中，以便流程

00:39:50.760 --> 00:39:57.180
有点忙，因为没人

00:39:54.600 --> 00:40:00.900
想改变一些人

00:39:57.180 --> 00:40:03.450
可能想改变，但如果我不是真的

00:40:00.900 --> 00:40:06.060
在周围创造一个超级酷的过程

00:40:03.450 --> 00:40:07.470
人们不习惯的事情

00:40:06.060 --> 00:40:10.590
人们会在原型中犯错

00:40:07.470 --> 00:40:13.710
过程或人们只是不在乎，如果

00:40:10.590 --> 00:40:17.220
如果我们可以使用您当前的流程

00:40:13.710 --> 00:40:20.760
哪个有效并且人们熟悉

00:40:17.220 --> 00:40:23.640
并进行新的实践

00:40:20.760 --> 00:40:26.220
在已经完成的过程中工作

00:40:23.640 --> 00:40:29.340
为你工作，那么你可能会有一个

00:40:26.220 --> 00:40:31.470
如果我们想创建更多流程的机会

00:40:29.340 --> 00:40:34.700
我们将这样做两个星期

00:40:31.470 --> 00:40:38.070
然后恢复正常

00:40:34.700 --> 00:40:40.110
所以工具应该

00:40:38.070 --> 00:40:43.200
支持您的流程，以便我们拥有您

00:40:40.110 --> 00:40:45.360
选择在那里工作的工具

00:40:43.200 --> 00:40:46.980
对你来说这就是为什么我向你展示

00:40:45.360 --> 00:40:49.440
您可以从本地进行

00:40:46.980 --> 00:40:51.990
机器，所以您不仅在等待

00:40:49.440 --> 00:40:54.540
最后，但我们现在可以执行此操作

00:40:51.990 --> 00:40:57.420
当你在内部发展时

00:40:54.540 --> 00:40:59.610
您的ie，或者如果您更像一个终端

00:40:57.420 --> 00:41:01.920
像我这样的人，您可以将其用于

00:40:59.610 --> 00:41:05.180
来自终端的，如果您

00:41:01.920 --> 00:41:09.950
使用我们其余的蛇标签，您可以

00:41:05.180 --> 00:41:12.630
将您的存储库连接到我们的扫描

00:41:09.950 --> 00:41:14.490
以及每次新功能

00:41:12.630 --> 00:41:16.950
拉入请求，我们可以对其进行扫描

00:41:14.490 --> 00:41:18.840
您每次或，我们可以对其进行扫描

00:41:16.950 --> 00:41:20.610
每天为您服务，因为

00:41:18.840 --> 00:41:24.200
漏洞需要时间才能被发现

00:41:20.610 --> 00:41:27.690
而有趣的是，您可以做到这一点

00:41:24.200 --> 00:41:29.760
仍将其集成到您的CI系统中

00:41:27.690 --> 00:41:32.970
因为那仍然需要

00:41:29.760 --> 00:41:36.510
看门人，但不仅是唯一的一部分

00:41:32.970 --> 00:41:38.900
然后你就没有做完，因为一旦完成

00:41:36.510 --> 00:41:42.720
是否在生产中，我们仍然需要

00:41:38.900 --> 00:41:45.560
扫描，我们可以从我们的

00:41:42.720 --> 00:41:49.040
本地系统或

00:41:45.560 --> 00:41:52.820
从我们的CI系统中获取，但如果我只是结束

00:41:49.040 --> 00:41:54.920
从航站楼这里而不是潜行

00:41:52.820 --> 00:41:58.910
测试我已经吃了，然后偷偷摸摸

00:41:54.920 --> 00:42:01.280
监视您看到的是它将

00:41:58.910 --> 00:42:03.020
再次从中创建依赖关系树

00:42:01.280 --> 00:42:09.080
本地系统并将其发布

00:42:03.020 --> 00:42:14.450
快照到网站，并转到

00:42:09.080 --> 00:42:17.990
这个网址，您会看到我有一些

00:42:14.450 --> 00:42:21.950
许可问题，但我有

00:42:17.990 --> 00:42:25.550
与H2数据库有关的东西

00:42:21.950 --> 00:42:27.500
现在您可以每天对其进行扫描，因此

00:42:25.550 --> 00:42:29.990
当你投入生产时

00:42:27.500 --> 00:42:30.290
快照将其放入

00:42:29.990 --> 00:42:32.780
空气

00:42:30.290 --> 00:42:35.000
只有我们只采取我们只采取

00:42:32.780 --> 00:42:37.760
看你的依赖树而不是你的

00:42:35.000 --> 00:42:39.980
代码，因为正如我所说，我们不

00:42:37.760 --> 00:42:41.270
在乎您的代码，否则我们无法说

00:42:39.980 --> 00:42:44.630
关于您的代码的任何内容

00:42:41.270 --> 00:42:46.310
上下文，但我们可以扫描您的

00:42:44.630 --> 00:42:49.730
你知道的依赖

00:42:46.310 --> 00:42:51.170
您信任或使用的东西，即使

00:42:49.730 --> 00:42:54.200
他们正在生产中，你可以

00:42:51.170 --> 00:42:57.350
受到警告，没有积极寻找新的

00:42:54.200 --> 00:43:02.600
漏洞，但让我们的系统还是

00:42:57.350 --> 00:43:05.440
任何系统都会提醒您，最后

00:43:02.600 --> 00:43:09.530
我们想要我们要说的是

00:43:05.440 --> 00:43:11.300
向左转移安全性，确保您

00:43:09.530 --> 00:43:14.390
从左侧开始，从开始

00:43:11.300 --> 00:43:17.780
本地机器在其他所有地方都做

00:43:14.390 --> 00:43:19.610
在您的开发周期内通过

00:43:17.780 --> 00:43:22.430
您的主分支或扫描您的扫描

00:43:19.610 --> 00:43:26.120
您的git存储库扫描您的新

00:43:22.430 --> 00:43:31.940
请求并扫描，同时在您的

00:43:26.120 --> 00:43:33.410
在您的CI中查看Isis，并

00:43:31.940 --> 00:43:35.330
还扫描您的生产位置，但是

00:43:33.410 --> 00:43:38.690
你必须从最左边开始

00:43:35.330 --> 00:43:42.290
大多数时候是我们在当地

00:43:38.690 --> 00:43:44.840
您的IDE上的计算机，这就是为什么我们

00:43:42.290 --> 00:43:46.220
创建了插件，这就是为什么我们

00:43:44.840 --> 00:43:49.670
将维护我们将要使用的插件

00:43:46.220 --> 00:43:51.020
使用新功能扩展插件

00:43:49.670 --> 00:43:56.870
例如为了更大

00:43:51.020 --> 00:43:58.550
赢家在稍后阶段，如果现在

00:43:56.870 --> 00:43:59.369
例如您要使用Gretel 

00:43:58.550 --> 00:44:02.180
代替行家

00:43:59.369 --> 00:44:05.400
您可以通过使用CLI做到这一点，因此

00:44:02.180 --> 00:44:07.619
终端通用线工具

00:44:05.400 --> 00:44:09.779
仅支持Gradle的

00:44:07.619 --> 00:44:12.210
插件即那个，但是你看到它很好

00:44:09.779 --> 00:44:14.099
如果您可以从我们的系统中执行此操作

00:44:12.210 --> 00:44:15.839
只需单击一下，转到

00:44:14.099 --> 00:44:22.289
易受攻击的应用程序订单的创建者

00:44:15.839 --> 00:44:24.390
我修复的所有部分我都在这里结束了

00:44:22.289 --> 00:44:27.450
您会看到我的电子邮件和Twitter句柄

00:44:24.390 --> 00:44:29.930
如果您以后对

00:44:27.450 --> 00:44:36.930
在屏幕的右侧，您会看到一个

00:44:29.930 --> 00:44:39.660
现在有一个非常1980年的QR码，带有链接

00:44:36.930 --> 00:44:42.269
在那下面，那个链接是关于

00:44:39.660 --> 00:44:45.119
我们刚刚发布的新JVM调查

00:44:42.269 --> 00:44:49.769
想问每个人谁在做

00:44:45.119 --> 00:44:52.829
 Java或任何jvm语言来填写

00:44:49.769 --> 00:44:57.240
服务器不仅要给我们，还要给我们

00:44:52.829 --> 00:44:59.940
发布它，我们将发布结果

00:44:57.240 --> 00:45:03.180
无论如何让我们更好地了解

00:44:59.940 --> 00:45:07.079
整个JVM生态系统和格局

00:45:03.180 --> 00:45:10.249
与专业合作

00:45:07.079 --> 00:45:13.559
 Java世界范围内的会议

00:45:10.249 --> 00:45:15.420
 devoxx和潜水关系和jay重点以及

00:45:13.559 --> 00:45:18.509
这些家伙的专辑都出来了

00:45:15.420 --> 00:45:21.119
好，我们拥有的信息越多

00:45:18.509 --> 00:45:23.430
我们可以帮助开发人员，因为

00:45:21.119 --> 00:45:26.789
这基本上就是我们想要做的

00:45:23.430 --> 00:45:29.609
这就是我的工作的终点

00:45:26.789 --> 00:45:32.160
为此网络研讨会做准备，在那里

00:45:29.609 --> 00:45:35.249
任何问题特丽莎，那太好了

00:45:32.160 --> 00:45:37.499
谢谢，我觉得有点吓人

00:45:35.249 --> 00:45:38.730
有时候入侵是多么容易

00:45:37.499 --> 00:45:41.700
参加其他人的会议

00:45:38.730 --> 00:45:44.190
操纵东西，我们确实有一些

00:45:41.700 --> 00:45:47.759
您主要回答他们的问题

00:45:44.190 --> 00:45:49.859
在会议期间，我们有一个问题

00:45:47.759 --> 00:45:51.989
关于它对Gradle有什么作用

00:45:49.859 --> 00:45:55.019
他说Gradle的东西是一件工作

00:45:51.989 --> 00:45:58.980
正在进行中，用于插件

00:45:55.019 --> 00:46:00.480
是的，Gradle更大

00:45:58.980 --> 00:46:02.220
部分是插件的工作进度

00:46:00.480 --> 00:46:04.769
我们有扫描吗

00:46:02.220 --> 00:46:07.259
我们系统中已有的功能

00:46:04.769 --> 00:46:09.749
我们的在线系统和ECL中的印度

00:46:07.259 --> 00:46:11.489
如果你只是在你的偷偷摸摸的测试

00:46:09.749 --> 00:46:13.690
魔术终端或魔术卡车

00:46:11.489 --> 00:46:17.349
 IntelliJ中您内部的终端

00:46:13.690 --> 00:46:19.719
您已经在Gretel上获得了结果

00:46:17.349 --> 00:46:21.339
所以我工作，但是没有，但是没有

00:46:19.719 --> 00:46:23.049
在插件中我们还可以工作

00:46:21.339 --> 00:46:25.509
在程序中为我工作

00:46:23.049 --> 00:46:27.519
我被问到是否有一个

00:46:25.509 --> 00:46:30.190
时间表，但我知道他们

00:46:27.519 --> 00:46:30.880
要求估价总是很棘手的

00:46:30.190 --> 00:46:32.769
事情

00:46:30.880 --> 00:46:34.479
是的，我不会给我们

00:46:32.769 --> 00:46:36.609
那是因为我不是唯一的一个

00:46:34.479 --> 00:46:37.390
为此，我们支持

00:46:36.609 --> 00:46:39.099
很多生态系统

00:46:37.390 --> 00:46:40.690
我们试图尽快做到

00:46:39.099 --> 00:46:43.599
但与此同时，我们也在做

00:46:40.690 --> 00:46:49.479
其他东西的插件

00:46:43.599 --> 00:46:51.700
我为其他人而战我对不起

00:46:49.479 --> 00:46:54.369
对不起，但我们也是第一第一

00:46:51.700 --> 00:46:55.809
视频首先我们做了实施

00:46:54.369 --> 00:46:58.450
 teamcity的插件，以确保

00:46:55.809 --> 00:47:01.509
我们与最伟大的人之一合作

00:46:58.450 --> 00:47:03.519
 EAJA系统，这是第一个

00:47:01.509 --> 00:47:07.329
实际上，这是第一次和之后

00:47:03.519 --> 00:47:09.339
剩下的来了，是的，我们正在努力

00:47:07.329 --> 00:47:11.650
我不给你可以给你

00:47:09.339 --> 00:47:13.059
任何时间表，但都很高

00:47:11.650 --> 00:47:15.309
在我们的积压订单中，这是我唯一的事情

00:47:13.059 --> 00:47:16.989
可以说是足够公平，如果

00:47:15.309 --> 00:47:18.759
支持已经在CLI中了

00:47:16.989 --> 00:47:20.049
不喜欢Gradle无法完成

00:47:18.759 --> 00:47:22.749
只是无法通过

00:47:20.049 --> 00:47:24.880
通过专门的IDE插件

00:47:22.749 --> 00:47:26.440
您提到那里有城市插件

00:47:24.880 --> 00:47:28.299
我也觉得这很有趣

00:47:26.440 --> 00:47:29.769
意味着在IDE中拥有它确实

00:47:28.299 --> 00:47:30.789
对开发人员很有用，但拥有它

00:47:29.769 --> 00:47:34.479
持续集成的一部分

00:47:30.789 --> 00:47:36.430
管道也可能更多

00:47:34.479 --> 00:47:38.410
重要，因为您希望能够

00:47:36.430 --> 00:47:40.690
在更集中的地方抓

00:47:38.410 --> 00:47:43.449
那就需要依靠每个

00:47:40.690 --> 00:47:45.459
个人开发者权利，我想你

00:47:43.449 --> 00:47:46.869
都必须这样做，所以如果您在自己的计算机上执行此操作

00:47:45.459 --> 00:47:48.940
她在您的开发人员机器上进行开发

00:47:46.869 --> 00:47:50.890
不会得到新的新的新问题

00:47:48.940 --> 00:47:54.099
在，但您仍然必须将其放入您的

00:47:50.890 --> 00:47:56.949
在你连续的内心

00:47:54.099 --> 00:47:59.430
关于管道的整合，因为很好

00:47:56.949 --> 00:48:02.469
你不想去制作

00:47:59.430 --> 00:48:05.469
等到机器离开时

00:48:02.469 --> 00:48:07.989
直到你进入你的

00:48:05.469 --> 00:48:10.930
建立并部署它可以

00:48:07.989 --> 00:48:13.599
可能要花几个星期

00:48:10.930 --> 00:48:14.979
因为好吧，我没有签入

00:48:13.599 --> 00:48:16.359
主分支，但在

00:48:14.979 --> 00:48:18.309
单独的分支，因为我正在开发

00:48:16.359 --> 00:48:21.190
到那时，它仍然

00:48:18.309 --> 00:48:22.719
好，我张贴它，然后我们得到

00:48:21.190 --> 00:48:24.969
问题，所以我们必须这样做

00:48:22.719 --> 00:48:27.130
在此期间，您必须在各个层面上做到这一点

00:48:24.969 --> 00:48:29.650
还有所有要点

00:48:27.130 --> 00:48:32.080
您的开发周期，而不仅仅是

00:48:29.650 --> 00:48:34.270
一个或另一个我想我但是那是

00:48:32.080 --> 00:48:36.940
我在保安公司工作

00:48:34.270 --> 00:48:39.460
所以这是为你自己的合唱团传教

00:48:36.940 --> 00:48:43.120
我认为您必须在每一个步骤中都做到这一点

00:48:39.460 --> 00:48:44.470
是的，如果你想安全的话

00:48:43.120 --> 00:48:46.030
你如果你想快点有

00:48:44.470 --> 00:48:49.120
如果您想成为开发人员， 

00:48:46.030 --> 00:48:50.680
确保将其作为

00:48:49.120 --> 00:48:52.360
在像您一样投入生产之前

00:48:50.680 --> 00:48:55.810
说您在任何时候都需要

00:48:52.360 --> 00:48:57.520
这个过程，另一个问题是做

00:48:55.810 --> 00:49:02.710
我们需要安装CLI才能使用

00:48:57.520 --> 00:49:04.750
如果可以的话，您可以不使用插件

00:49:02.710 --> 00:49:07.300
安装CLI，但是您不必

00:49:04.750 --> 00:49:09.310
 Anson CLI使用您所使用的插件

00:49:07.300 --> 00:49:12.720
使用插件要做的就是

00:49:09.310 --> 00:49:16.960
从市场上下载它，然后

00:49:12.720 --> 00:49:18.510
你必须将它连接到一个时髦

00:49:16.960 --> 00:49:21.340
帐户和国家帐户是免费的

00:49:18.510 --> 00:49:22.600
我不确定您是否必须创建一个

00:49:21.340 --> 00:49:24.130
首先帐户，或者您可以坚持

00:49:22.600 --> 00:49:27.190
在当月创建不同的帐户

00:49:24.130 --> 00:49:30.400
因为好吧，我在这件事上

00:49:27.190 --> 00:49:32.290
插件有很长一段时间了，为什么要这样

00:49:30.400 --> 00:49:35.620
我安装它，所以我没有尝试

00:49:32.290 --> 00:49:39.820
我不确定，但我们必须连接

00:49:35.620 --> 00:49:42.280
您的昵称帐户即可访问该插件， 

00:49:39.820 --> 00:49:45.790
这样做将是一次性的工作，并且

00:49:42.280 --> 00:49:47.830
有任何问题吗？ 

00:49:45.790 --> 00:49:49.510
关于那种事情，如果

00:49:47.830 --> 00:49:52.870
您可以免费使用它，所以我可以

00:49:49.510 --> 00:49:55.420
有点桥，有一种

00:49:52.870 --> 00:49:56.740
与之相关的问题

00:49:55.420 --> 00:49:58.900
它与社区版本一起使用

00:49:56.740 --> 00:49:59.980
 IntelliJ IDEA以及最终版本

00:49:58.900 --> 00:50:01.060
版本，我从

00:49:59.980 --> 00:50:06.910
两者均可使用的文档

00:50:01.060 --> 00:50:11.290
社区和终极版，所以是免费的IDE 

00:50:06.910 --> 00:50:14.050
和免费的sneek帐户是，如果您这样做

00:50:11.290 --> 00:50:16.360
打开看到免费的尼克帐户有一个

00:50:14.050 --> 00:50:18.340
很少的限制，因为来自免费

00:50:16.360 --> 00:50:22.480
国家帐户，您只能这样做

00:50:18.340 --> 00:50:24.070
每月要进行200次测试，但如果

00:50:22.480 --> 00:50:27.340
你不会像两百次那样

00:50:24.070 --> 00:50:29.320
您可以连续使用它，如果您

00:50:27.340 --> 00:50:30.580
如果您是开源的，请这样做

00:50:29.320 --> 00:50:32.650
开发，因此您保持开放

00:50:30.580 --> 00:50:35.230
源码包会给你

00:50:32.650 --> 00:50:37.930
无限休息，您可以从

00:50:35.230 --> 00:50:40.600
从免费

00:50:37.930 --> 00:50:41.079
社区版本的IntelliJ或您或

00:50:40.600 --> 00:50:43.059
的

00:50:41.079 --> 00:50:46.689
付费版本没关系

00:50:43.059 --> 00:50:48.579
都适用于另一个问题

00:50:46.689 --> 00:50:50.289
因为我们需要一个偷偷摸摸的帐户

00:50:48.579 --> 00:50:54.309
本地代码被上传到潜行

00:50:50.289 --> 00:50:56.649
服务器零零仅依赖项

00:50:54.309 --> 00:50:59.199
是的，我们将创建一个依赖树

00:50:56.649 --> 00:51:01.029
以某种格式，所以基本上

00:50:59.199 --> 00:51:04.649
软件包名称，a和and版本

00:51:01.029 --> 00:51:07.269
数字，那时我们可以

00:51:04.649 --> 00:51:10.059
你说那个十字架和我们相比吗

00:51:07.269 --> 00:51:11.769
我们专有的漏洞

00:51:10.059 --> 00:51:15.249
数据库基本上就是我们要做的

00:51:11.769 --> 00:51:16.959
然后我们可以找出是否

00:51:15.249 --> 00:51:18.640
顶层或传递

00:51:16.959 --> 00:51:20.019
导致问题的依赖性

00:51:18.640 --> 00:51:22.029
严重出现，可能是什么

00:51:20.019 --> 00:51:24.279
解决方案是如果有解决方案

00:51:22.029 --> 00:51:28.419
因为对于某些软件包，没有

00:51:24.279 --> 00:51:31.419
还没有解决方案，所以没人做

00:51:28.419 --> 00:51:32.709
不，我们不会说您的代码好吗

00:51:31.419 --> 00:51:38.169
对问题的答复是

00:51:32.709 --> 00:51:39.369
真的很棒，我只是

00:51:38.169 --> 00:51:42.519
想重申他的其他话

00:51:39.369 --> 00:51:44.499
说说我那里的JVM服务器

00:51:42.519 --> 00:51:46.630
将添加到JVM服务器的链接

00:51:44.499 --> 00:51:48.639
你是从偷偷跑来的

00:51:46.630 --> 00:51:50.259
这周每月注释一次，因为

00:51:48.639 --> 00:51:51.819
就像你在说我认为这是真的

00:51:50.259 --> 00:51:53.829
收集来自

00:51:51.819 --> 00:51:55.569
一堆来自不同的开发人员

00:51:53.829 --> 00:51:57.130
不同国家的业务领域

00:51:55.569 --> 00:51:59.829
关于什么的不同背景

00:51:57.130 --> 00:52:01.809
发生在JVM世界中，以便您

00:51:59.829 --> 00:52:03.429
知道我们可以帮助所有建造的人

00:52:01.809 --> 00:52:05.619
产品是开源软件或

00:52:03.429 --> 00:52:07.709
什么都可以看到真正的开发者

00:52:05.619 --> 00:52:09.939
实际上是在现实世界中

00:52:07.709 --> 00:52:12.130
相应地量身定制我们的产品

00:52:09.939 --> 00:52:13.269
所以我强烈建议人们进去

00:52:12.130 --> 00:52:15.339
并填写该调查，因为它是

00:52:13.269 --> 00:52:18.389
对于任何人来说真的很有趣

00:52:15.339 --> 00:52:23.019
有Java或JVM相关产品

00:52:18.389 --> 00:52:24.459
这么认为，但看起来好像

00:52:23.019 --> 00:52:26.169
目前还有其他问题

00:52:24.459 --> 00:52:29.439
我们快到了

00:52:26.169 --> 00:52:30.819
无论如何，所以我认为在这一点上

00:52:29.439 --> 00:52:34.389
把你包裹起来会很好

00:52:30.819 --> 00:52:38.829
还有更多结束语或我们

00:52:34.389 --> 00:52:40.959
好，如果你想出总结

00:52:38.829 --> 00:52:43.119
问题随时可以联系我

00:52:40.959 --> 00:52:46.149
 Twitter或给我发送电子邮件，我会

00:52:43.119 --> 00:52:48.759
很高兴回答他们或重定向您

00:52:46.149 --> 00:52:51.939
给可以真正回答一个问题的人

00:52:48.759 --> 00:52:53.949
某些转弯见解，所以我们不想要

00:52:51.939 --> 00:52:55.230
谢谢大家对工作的初学者

00:52:53.949 --> 00:52:57.490
倾听

00:52:55.230 --> 00:52:59.619
非常感谢Brian的到来

00:52:57.490 --> 00:53:01.150
继续进行这个演讲，我必须承认

00:52:59.619 --> 00:53:03.010
我是那些有点

00:53:01.150 --> 00:53:06.190
懒惰的安全和任何

00:53:03.010 --> 00:53:08.589
可以使我的生活更轻松

00:53:06.190 --> 00:53:10.480
在IDE中并指出问题之前

00:53:08.589 --> 00:53:12.040
他们成为真正的问题是

00:53:10.480 --> 00:53:14.920
像我这样的人的救星

00:53:12.040 --> 00:53:17.290
就像我提到的那样非常有用

00:53:14.920 --> 00:53:19.270
在我们开始录音之前

00:53:17.290 --> 00:53:22.510
在某个时候在IntelliJ IDEA博客上

00:53:19.270 --> 00:53:24.910
在接下来的几天里，您可以随时

00:53:22.510 --> 00:53:27.010
查看以前的网络研讨会录像

00:53:24.910 --> 00:53:29.080
在我们的YouTube上进行截屏等

00:53:27.010 --> 00:53:30.280
频道，非常感谢Brian 

00:53:29.080 --> 00:53:32.080
进来展示你正在

00:53:30.280 --> 00:53:33.339
那里有很多关于

00:53:32.080 --> 00:53:36.089
问题小组说这很棒

00:53:33.339 --> 00:53:36.089
说话谢谢

00:53:42.160 --> 00:53:44.220
您

