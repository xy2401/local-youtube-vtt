WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.000 --> 00:00:05.460
大家好，下一个

00:00:03.330 --> 00:00:08.940
 40分钟我们要去的是什么

00:00:05.460 --> 00:00:11.370
要做的就是看令人兴奋的新事物

00:00:08.940 --> 00:00:14.670
 IntelliJ中的功能如何使您变得更多

00:00:11.370 --> 00:00:17.640
我猜的预测性耳语引导

00:00:14.670 --> 00:00:20.640
你们所有人都尝试过 spring boot 

00:00:17.640 --> 00:00:23.010
关于如何看待它以及什么时候做的

00:00:20.640 --> 00:00:27.119
您可能已经看过这个网站

00:00:23.010 --> 00:00:31.529
启动弹簧轨道，这是一项服务

00:00:27.119 --> 00:00:33.690
生成可立即使用的项目

00:00:31.529 --> 00:00:35.760
基本上，当您访问该网站时

00:00:33.690 --> 00:00:39.450
左边你有一些信息

00:00:35.760 --> 00:00:40.829
您要生成Maven的项目

00:00:39.450 --> 00:00:43.739
坐标或项目坐标

00:00:40.829 --> 00:00:47.579
因为您可以使用处女或更大

00:00:43.739 --> 00:00:50.309
您想要一些有关的信息

00:00:47.579 --> 00:00:52.260
您要使用的Java版本

00:00:50.309 --> 00:00:54.809
您现在要在这里使用的语言

00:00:52.260 --> 00:00:57.989
用java或电影开发汤匙好

00:00:54.809 --> 00:01:00.359
您想使用的版本

00:00:57.989 --> 00:01:03.690
并使用最新的

00:01:00.359 --> 00:01:06.380
每晚的左侧建造

00:01:03.690 --> 00:01:10.470
在右边，您有各种各样的

00:01:06.380 --> 00:01:12.510
您可以选择的技术以及什么

00:01:10.470 --> 00:01:15.270
 spring boot 要做的是基于

00:01:12.510 --> 00:01:18.900
这些库在您的存在

00:01:15.270 --> 00:01:21.450
类传递它将尝试自动配置

00:01:18.900 --> 00:01:23.220
对您来说还有其他事情，例如

00:01:21.450 --> 00:01:25.350
您想要构建一个Web应用程序，并且

00:01:23.220 --> 00:01:27.479
你一定会用时间片

00:01:25.350 --> 00:01:30.150
路径引擎，然后您可以选择那些

00:01:27.479 --> 00:01:32.460
两个，你也可以选择其他人

00:01:30.150 --> 00:01:35.970
可以例如查看还保存在

00:01:32.460 --> 00:01:37.829
使用h2深入后端，一旦完成

00:01:35.970 --> 00:01:39.659
不想圆顶就是你可以

00:01:37.829 --> 00:01:43.710
生成一个项目，这将

00:01:39.659 --> 00:01:47.790
生成一个zip文件，您基本上可以

00:01:43.710 --> 00:01:50.310
戴上你的ie，那很好

00:01:47.790 --> 00:01:52.680
但是如果可以的话会更好

00:01:50.310 --> 00:01:56.479
从DJ做所有正确的事

00:01:52.680 --> 00:01:58.829
那是这个新春天更轻

00:01:56.479 --> 00:02:01.770
制裁在这里，所以，如果您单击新建

00:01:58.829 --> 00:02:04.740
项目弹簧初始化器

00:02:01.770 --> 00:02:08.399
基本上得到正确的功能

00:02:04.740 --> 00:02:11.580
因为我的妻子被藏起来，所以这仅仅是

00:02:08.399 --> 00:02:13.140
您要选择的dko和网站，但

00:02:11.580 --> 00:02:18.180
一样大小

00:02:13.140 --> 00:02:20.610
我们之前见过，你可以看到相同的

00:02:18.180 --> 00:02:24.440
信息，我要选择java 8 

00:02:20.610 --> 00:02:24.440
例如，从现在起继续前进

00:02:25.310 --> 00:02:30.660
以及我们要做的展示

00:02:28.380 --> 00:02:33.000
我们将要介绍的IntelliJ的功能

00:02:30.660 --> 00:02:37.740
建立一个网络应用程序，我们将

00:02:33.000 --> 00:02:40.080
很快创建一个实体GP 

00:02:37.740 --> 00:02:41.610
实体，我们将创建一个

00:02:40.080 --> 00:02:45.420
仓库，我们将

00:02:41.610 --> 00:02:48.630
用作数据石，我们也是

00:02:45.420 --> 00:02:54.000
将要保护此网络应用程序，我们

00:02:48.630 --> 00:02:58.590
也将仓库公开为

00:02:54.000 --> 00:03:01.620
剩下的终点，最后是我们

00:02:58.590 --> 00:03:04.590
我们要做的是选择

00:03:01.620 --> 00:03:08.400
该库也称为执行器

00:03:04.590 --> 00:03:11.580
它提供的是它提供所有

00:03:08.400 --> 00:03:13.230
一种移动功能，全部

00:03:11.580 --> 00:03:14.940
您必须要做的各种服务

00:03:13.230 --> 00:03:18.120
一遍又一遍地开始新的

00:03:14.940 --> 00:03:20.040
应用程序，所以这个想法而不是做

00:03:18.120 --> 00:03:24.420
那些一遍又一遍的

00:03:20.040 --> 00:03:28.950
他们提供给您，所以这些是

00:03:24.420 --> 00:03:31.890
我今天想使用的技术

00:03:28.950 --> 00:03:35.519
要说我想创建一个项目

00:03:31.890 --> 00:03:39.890
分钟演示IntelliJ准备好了

00:03:35.519 --> 00:03:41.610
进入该目录，然后单击完成

00:03:39.890 --> 00:03:43.260
一段时间

00:03:41.610 --> 00:03:47.250
我的新项目就在这里

00:03:43.260 --> 00:03:50.850
从eie金属项目已经

00:03:47.250 --> 00:03:53.070
检测到，所以我要添加它，然后我

00:03:50.850 --> 00:03:56.610
我可以有一个功能齐全的项目

00:03:53.070 --> 00:03:59.460
立即使用，所以如果您知道

00:03:56.610 --> 00:04:02.100
春天你知道那条路吗

00:03:59.460 --> 00:04:03.510
开始一个好的应用程序主要是

00:04:02.100 --> 00:04:05.730
非常简单，就像右键单击一样

00:04:03.510 --> 00:04:08.490
右键单击main和您的应用程序

00:04:05.730 --> 00:04:10.770
不管它的网站是什么都会停止

00:04:08.490 --> 00:04:13.410
是否提供应用程序，因为我们提供了

00:04:10.770 --> 00:04:16.230
如果您决定使用嵌入式容器

00:04:13.410 --> 00:04:20.459
用它来建立，所以我要

00:04:16.230 --> 00:04:23.010
快速创建我正在谈论的实体

00:04:20.459 --> 00:04:29.220
大约早些时候，我将创建一个

00:04:23.010 --> 00:04:30.780
演讲者，为了不写

00:04:29.220 --> 00:04:34.590
在你面前我要使用的课程

00:04:30.780 --> 00:04:36.870
称为5模板的整数

00:04:34.590 --> 00:04:40.110
基本上可以让我创建一个类

00:04:36.870 --> 00:04:43.230
从预先填充的模板中

00:04:40.110 --> 00:04:45.570
看到扬声器是普通的GP 

00:04:43.230 --> 00:04:47.850
实体我的ID名姓

00:04:45.570 --> 00:04:53.070
为朋友命名一个Twitter帐户，并为

00:04:47.850 --> 00:04:57.930
我也要去创造一个扬声器

00:04:53.070 --> 00:04:59.850
仓库和相同的东西和

00:04:57.930 --> 00:05:02.910
扬声器存储库正在使用Spring数据

00:04:59.850 --> 00:05:05.220
甚至在这种情况下作为 spring data GPA 

00:05:02.910 --> 00:05:07.680
虽然您看不到任何汇入

00:05:05.220 --> 00:05:10.650
与GPA有关，所以这是常规

00:05:07.680 --> 00:05:13.200
演讲者堕落的批评故事

00:05:10.650 --> 00:05:16.290
只要您知道开放数据， 

00:05:13.200 --> 00:05:19.500
知道您可以在

00:05:16.290 --> 00:05:21.419
仓库接口和Spring数据

00:05:19.500 --> 00:05:24.060
将为您创建一个代理，并将

00:05:21.419 --> 00:05:25.650
确保基于

00:05:24.060 --> 00:05:28.800
方法名称，基本上，这是

00:05:25.650 --> 00:05:31.290
要在

00:05:28.800 --> 00:05:33.150
 Twitter字段，它将返回一个

00:05:31.290 --> 00:05:35.430
单扬声器和这里的同一件事

00:05:33.150 --> 00:05:39.150
返回演讲者集合

00:05:35.430 --> 00:05:42.630
具有指定的姓氏，您可以

00:05:39.150 --> 00:05:47.400
还看到它有一些弹簧数据

00:05:42.630 --> 00:05:49.680
关于它的存储库注释

00:05:47.400 --> 00:05:51.630
这种情况只是用来自定义

00:05:49.680 --> 00:05:53.250
搜索方法的方式

00:05:51.630 --> 00:05:55.160
当你要看到它时暴露

00:05:53.250 --> 00:05:58.490
一分钟

00:05:55.160 --> 00:06:04.100
这些将绑定URI属性

00:05:58.490 --> 00:06:07.130
到实际的搜索参数，所以我想要

00:06:04.100 --> 00:06:11.210
跟你一样在我的摊位上讲一些话

00:06:07.130 --> 00:06:13.100
看到我要使用H2，所以要这样做

00:06:11.210 --> 00:06:15.740
我将使用另一个简洁功能

00:06:13.100 --> 00:06:18.130
如果您创建一个名为import的文件

00:06:15.740 --> 00:06:20.960
亮片在类路径的根和

00:06:18.130 --> 00:06:24.710
有它会产生

00:06:20.960 --> 00:06:28.910
模式，如果找到这样的文件，它将

00:06:24.710 --> 00:06:30.800
基本处理并填充它

00:06:28.910 --> 00:06:33.050
我将使用它的另一个功能

00:06:30.800 --> 00:06:36.110
可以在其中称为生活模板

00:06:33.050 --> 00:06:40.850
基本上将任何快捷方式映射到任何内容

00:06:36.110 --> 00:06:43.190
你想要这个加起来，所以我

00:06:40.850 --> 00:06:48.440
如您所见，将运行它

00:06:43.190 --> 00:06:52.040
一年后40分钟进入GID 

00:06:48.440 --> 00:06:53.960
已检测到该主要类别为

00:06:52.040 --> 00:06:56.120
春天很好的应用程序，所以它提供了一个

00:06:53.960 --> 00:06:58.580
将其作为弹簧靴启动的方式

00:06:56.120 --> 00:07:06.710
应用程序作为图标在这里

00:06:58.580 --> 00:07:07.500
那样做吧，我有一个

00:07:06.710 --> 00:07:11.720
应用

00:07:07.500 --> 00:07:11.720
现在开始做一些事情

00:07:12.800 --> 00:07:19.020
好的，所以我需要登录到我的应用

00:07:17.340 --> 00:07:21.960
我需要研究我的appt的原因

00:07:19.020 --> 00:07:24.540
是因为我添加了安全性

00:07:21.960 --> 00:07:27.660
天气列表中的首发

00:07:24.540 --> 00:07:30.090
以前所以决定船是

00:07:27.660 --> 00:07:34.010
如果没有的话

00:07:30.090 --> 00:07:37.020
特殊配置或任何特殊

00:07:34.010 --> 00:07:39.720
对您的应用进行自定义是为了确保安全

00:07:37.020 --> 00:07:41.640
具有基本身份验证的一切

00:07:39.720 --> 00:07:43.530
它也将创建一个用户

00:07:41.640 --> 00:07:46.380
您至少可以登录到

00:07:43.530 --> 00:07:48.930
应用程序和默认用户使用

00:07:46.380 --> 00:07:50.970
在这个用户中，有默认

00:07:48.930 --> 00:07:53.430
密码，因为如果这样做，我们

00:07:50.970 --> 00:07:56.669
在我们的密码中写一个默认密码

00:07:53.430 --> 00:07:58.980
文档，有人碰巧

00:07:56.669 --> 00:08:01.560
忘了它，那是一个

00:07:58.980 --> 00:08:04.400
安全或可能很危险，那又如何

00:08:01.560 --> 00:08:06.870
我们要做的就是每当我们启动应用程序时

00:08:04.400 --> 00:08:08.520
为此生成一个唯一的密码

00:08:06.870 --> 00:08:11.100
因此，如果我们再次启动该应用程序

00:08:08.520 --> 00:08:14.550
密码将更改，所以我要

00:08:11.100 --> 00:08:19.040
复制在这里等待，然后我可以登录

00:08:14.550 --> 00:08:21.210
进入我的应用程序，这样我就可以看到

00:08:19.040 --> 00:08:25.080
发言人存储库具有的存储库

00:08:21.210 --> 00:08:27.240
被暴露了，我可以看到

00:08:25.080 --> 00:08:29.430
我通过它创建的扬声器

00:08:27.240 --> 00:08:37.070
我已经处理过的编码支持文件

00:08:29.430 --> 00:08:40.860
可以看作是一种宁静的资源

00:08:37.070 --> 00:08:45.330
也可以导航到此类方法

00:08:40.860 --> 00:08:47.700
通过该链接，我可以看到两个

00:08:45.330 --> 00:08:49.800
如此暴露的金属

00:08:47.700 --> 00:08:54.060
通过Twitter和网络姓氏，这样我就可以

00:08:49.800 --> 00:08:58.920
还通过Twitter和手机搜索

00:08:54.060 --> 00:09:02.339
翠西亚（Tricia）和我在这里告诉你的快乐

00:08:58.920 --> 00:09:06.210
关于执行器以及执行器是什么

00:09:02.339 --> 00:09:08.040
提供某些端点，例如

00:09:06.210 --> 00:09:11.040
信息点，这给了一些

00:09:08.040 --> 00:09:13.770
有关您的应用在地球上的信息

00:09:11.040 --> 00:09:16.620
立场检查您的应用程序是否启动

00:09:13.770 --> 00:09:18.990
运行，我可以看到每两个

00:09:16.620 --> 00:09:21.150
数据库和有关的一些信息

00:09:18.990 --> 00:09:26.430
我可以的磁盘空间

00:09:21.150 --> 00:09:28.650
我可以寻找一些指标等，好吗

00:09:26.430 --> 00:09:30.660
所以那是我的 spring boot 

00:09:28.650 --> 00:09:33.150
 10分钟从地面建造

00:09:30.660 --> 00:09:38.040
即使我在基基塔咬了一下

00:09:33.150 --> 00:09:39.570
模板，但是您有了主意，因此

00:09:38.040 --> 00:09:41.490
第一件事真的很烦

00:09:39.570 --> 00:09:44.580
关于这个应用程序是每一个

00:09:41.490 --> 00:09:46.530
时间开始，它需要你看看

00:09:44.580 --> 00:09:49.020
进入实验室以了解有关

00:09:46.530 --> 00:09:51.110
默认密码，所以您当然知道

00:09:49.020 --> 00:09:54.990
在常规应用中，您将要做的是

00:09:51.110 --> 00:09:57.810
创建适当的安全配置

00:09:54.990 --> 00:10:00.060
当我要这样做时，一件事

00:09:57.810 --> 00:10:04.110
关于跳板自动配置

00:10:00.060 --> 00:10:06.510
机制是当您想使用

00:10:04.110 --> 00:10:09.000
自动配置，所以你想

00:10:06.510 --> 00:10:10.650
保留您要配置的内容

00:10:09.000 --> 00:10:14.040
但您想稍微自定义它

00:10:10.650 --> 00:10:16.920
彼此配置晚上暴露出一个

00:10:14.040 --> 00:10:20.190
配置键集和

00:10:16.920 --> 00:10:22.650
使用指定一些自定义

00:10:20.190 --> 00:10:26.040
这些键，您可以稍微改变

00:10:22.650 --> 00:10:28.020
由于配置有效，所以

00:10:26.040 --> 00:10:31.110
我想做的第一件事是

00:10:28.020 --> 00:10:33.690
指定密码，而不要输入密码

00:10:31.110 --> 00:10:37.020
自动生成的电话，所以我需要知道

00:10:33.690 --> 00:10:39.450
我需要知道哪个国王映射的关键

00:10:37.020 --> 00:10:41.730
未来，我首先我需要知道

00:10:39.450 --> 00:10:45.390
如果你的老师存在，那么我要去的地方

00:10:41.730 --> 00:10:49.200
要做的是尝试输入pass看看

00:10:45.390 --> 00:10:51.990
发生，您在IntelliJ中得到了什么

00:10:49.200 --> 00:10:54.210
 IDEA 14加载乐趣是此内容的帮助

00:10:51.990 --> 00:10:58.440
对于配置密钥，您可以看到

00:10:54.210 --> 00:11:00.720
这里的第一项是安全性

00:10:58.440 --> 00:11:02.580
使用或密码，你有一些

00:11:00.720 --> 00:11:04.380
说明这是密码的文档

00:11:02.580 --> 00:11:08.940
对于默认用户名，您也可以使用

00:11:04.380 --> 00:11:11.460
这样的类型，让我们将其修复为

00:11:08.940 --> 00:11:13.800
改变我，所以不用这个自动

00:11:11.460 --> 00:11:16.440
配置为自动生成密码

00:11:13.800 --> 00:11:20.480
密码抱歉，您有一个要修复的密码

00:11:16.440 --> 00:11:23.780
你自己，我想改变真正的

00:11:20.480 --> 00:11:27.330
无论出于什么原因，如果我愿意的话

00:11:23.780 --> 00:11:29.940
然后我将获得默认值

00:11:27.330 --> 00:11:33.420
可能已经注意到，当我不得不登录时

00:11:29.940 --> 00:11:34.310
在那个弹出窗口中，所以我想

00:11:33.420 --> 00:11:38.770
做我想做的事

00:11:34.310 --> 00:11:41.720
打个招呼并选择一个随机值，然后

00:11:38.770 --> 00:11:44.390
 spring boot ，因为此报告

00:11:41.720 --> 00:11:46.910
随机前缀，这是一个特殊的前缀

00:11:44.390 --> 00:11:49.370
您可以在属性的应用中使用

00:11:46.910 --> 00:11:55.040
所以它知道并自动

00:11:49.370 --> 00:11:57.320
为你完成事情，然后我想

00:11:55.040 --> 00:11:59.420
指定用户将要扮演的角色

00:11:57.320 --> 00:12:01.610
拥有，这一点非常重要

00:11:59.420 --> 00:12:05.150
用户具有管理员角色，因为

00:12:01.610 --> 00:12:07.460
访问该角色所需的角色

00:12:05.150 --> 00:12:11.390
执行器的信息如此深入

00:12:07.460 --> 00:12:14.779
地球矩阵端点我只是告诉你

00:12:11.390 --> 00:12:16.580
让我们键入角色现在可以在这里看到我

00:12:14.779 --> 00:12:19.250
安全使用巨魔

00:12:16.580 --> 00:12:22.790
一个列表，在这种情况下，因为它是一个

00:12:19.250 --> 00:12:25.910
列出聪明的人知道并说

00:12:22.790 --> 00:12:28.550
我要说这个的用户

00:12:25.910 --> 00:12:33.020
我要输入任何东西

00:12:28.550 --> 00:12:35.180
这不是一个有效的数字，哦，我可以

00:12:33.020 --> 00:12:42.070
当然也输入0是行不通的

00:12:35.180 --> 00:12:45.290
一样的钥匙，我就这样

00:12:42.070 --> 00:12:48.620
记得我在说这个有影响力的东西

00:12:45.290 --> 00:12:51.800
关于有一种方法可以设置一些数据

00:12:48.620 --> 00:12:52.700
转换成JSON输出及其工作方式

00:12:51.800 --> 00:12:55.250
你看着春天好

00:12:52.700 --> 00:12:58.400
文档是您将需要设置一个

00:12:55.250 --> 00:13:02.750
关键命令前缀信息，所以信息点

00:12:58.400 --> 00:13:06.050
任何东西都将被设置为该值

00:13:02.750 --> 00:13:08.540
 JSON输出，所以如果我点击信息，那么我可以

00:13:06.050 --> 00:13:12.589
看到这是午睡，有一些

00:13:08.540 --> 00:13:14.570
关于它的文档，所以说我

00:13:12.589 --> 00:13:18.320
可以输入一些描述

00:13:14.570 --> 00:13:20.450
看到这里的描述键是

00:13:18.320 --> 00:13:25.580
显示方式不同，以便您知道

00:13:20.450 --> 00:13:28.839
这是一张地图的两个关键，假设我

00:13:25.580 --> 00:13:33.860
想自己创建一个属性

00:13:28.839 --> 00:13:37.910
显示为未知好吗

00:13:33.860 --> 00:13:43.910
假设我想将其显示为

00:13:37.910 --> 00:13:47.410
值，所以我得到这个

00:13:43.910 --> 00:13:49.760
自动完成

00:13:47.410 --> 00:13:52.520
配置，以防您可能创建

00:13:49.760 --> 00:13:55.520
你自己，你可以看到默认

00:13:52.520 --> 00:14:01.760
在这种情况下的价值，而实际

00:13:55.520 --> 00:14:03.800
在这种情况下的价值还可以

00:14:01.760 --> 00:14:09.050
 IntelliJ IDEA的特殊结局

00:14:03.800 --> 00:14:13.250
支持是日志记录级别功能，因此

00:14:09.050 --> 00:14:15.170
这是在Spring Boot中进行配置的一种方式

00:14:13.250 --> 00:14:16.790
记录而不管记录

00:14:15.170 --> 00:14:19.300
您是否会失去使用的库

00:14:16.790 --> 00:14:23.300
为Jay加载工作或其他工作

00:14:19.300 --> 00:14:25.480
您可以在此处指定一些级别，我们

00:14:23.300 --> 00:14:27.620
将根据

00:14:25.480 --> 00:14:32.060
您拥有的日志记录基础架构

00:14:27.620 --> 00:14:34.360
运行时，该工具对此有所了解

00:14:32.060 --> 00:14:37.190
它再次为您提供了很好的自动完成功能

00:14:34.360 --> 00:14:45.890
对于这种情况下的包装以及

00:14:37.190 --> 00:14:48.140
好的价值，让我们开始吧

00:14:45.890 --> 00:14:52.670
所有这些再次申请

00:14:48.140 --> 00:14:54.410
定制，看看会发生什么

00:14:52.670 --> 00:14:57.530
我们应该看到的第一件事是

00:14:54.410 --> 00:14:59.720
日志中的一些其他信息

00:14:57.530 --> 00:15:03.500
这是自动配置

00:14:59.720 --> 00:15:06.590
实际上是因为

00:15:03.500 --> 00:15:13.130
我切换了如果因为我切换了那个

00:15:06.590 --> 00:15:17.500
包进行调试，所以说我有

00:15:13.130 --> 00:15:20.960
重新登录，以便其用户可以更改

00:15:17.500 --> 00:15:23.720
改变我，你也可以在这里看到

00:15:20.960 --> 00:15:27.880
领域说ello 3这就是全部

00:15:23.720 --> 00:15:27.880
 0 0 5之间的随机值

00:15:30.080 --> 00:15:42.680
在异国情调下我可以看到

00:15:32.600 --> 00:15:45.620
设置好的值，我仍然

00:15:42.680 --> 00:15:49.820
对我的配置发出警告

00:15:45.620 --> 00:15:52.610
文件，今天早上，我也可以

00:15:49.820 --> 00:15:55.370
在这里输入一些废话，并有一个错误

00:15:52.610 --> 00:15:57.770
相反，IntelliJ会很好

00:15:55.370 --> 00:16:00.860
 IDEA实际上可以验证该文件

00:15:57.770 --> 00:16:03.320
内置的，所以有一种方法可以做到

00:16:00.860 --> 00:16:06.680
你要做的第一件事就是你

00:16:03.320 --> 00:16:10.270
必须确保在皮带下

00:16:06.680 --> 00:16:14.270
执行部署和编译器

00:16:10.270 --> 00:16:18.020
部分有一个验证子部分

00:16:14.270 --> 00:16:20.240
并重新验证您必须建立的

00:16:18.020 --> 00:16:22.400
需要启用它才能正常工作

00:16:20.240 --> 00:16:24.620
我们对这种情况感兴趣的是春天

00:16:22.400 --> 00:16:28.670
模型，但我会保留其他模型

00:16:24.620 --> 00:16:30.710
所以现在一旦您确保

00:16:28.670 --> 00:16:33.340
在新实例中启用了功能，并且

00:16:30.710 --> 00:16:38.630
你必须去项目结构

00:16:33.340 --> 00:16:44.960
方面为创建新的春天方面

00:16:38.630 --> 00:16:48.980
您的模块基本上，然后添加一个

00:16:44.960 --> 00:16:52.370
其他属性文件是

00:16:48.980 --> 00:17:00.710
我们当前正在编辑的文件

00:16:52.370 --> 00:17:05.030
这个好吧，如果我这样做，我

00:17:00.710 --> 00:17:07.100
现在处理，我可以看到警告有

00:17:05.030 --> 00:17:11.150
被整合到主要品牌

00:17:07.100 --> 00:17:13.060
窗口，我也可以尝试启动

00:17:11.150 --> 00:17:17.680
应用程序，它将无法启动，因为

00:17:13.060 --> 00:17:17.680
我的配置有问题

00:17:18.550 --> 00:17:23.760
但是我们

00:17:19.959 --> 00:17:26.620
确实将警告修正为液体

00:17:23.760 --> 00:17:29.919
我现在想告诉你的是你可能

00:17:26.620 --> 00:17:32.320
现在想知道如何狩猎EG ID 

00:17:29.919 --> 00:17:34.419
实际上建造小便，所以当你

00:17:32.320 --> 00:17:39.130
输入一些有关它的信息

00:17:34.419 --> 00:17:41.470
所有这些键和一件事是

00:17:39.130 --> 00:17:44.320
对我们建造的来说真的非常好

00:17:41.470 --> 00:17:45.730
它实际上是一个开放的基础架构

00:17:44.320 --> 00:17:47.710
您可以自己使用的东西

00:17:45.730 --> 00:17:49.330
投射一些可以用于您的东西

00:17:47.710 --> 00:17:53.710
只有按键，真的很容易做到

00:17:49.330 --> 00:17:57.370
一会儿告诉你

00:17:53.710 --> 00:18:00.640
真的是从春天开始

00:17:57.370 --> 00:18:03.309
版本1为其生成元数据

00:18:00.640 --> 00:18:05.110
定义和定义的每个配置键

00:18:03.309 --> 00:18:08.919
它以标准格式生成

00:18:05.110 --> 00:18:12.010
 JSON格式，它会在

00:18:08.919 --> 00:18:14.860
具体位置和什么IntelliJ 

00:18:12.010 --> 00:18:17.830
 IDEA确实正在寻找该文件

00:18:14.860 --> 00:18:20.820
项目中的每个罐子，基本上

00:18:17.830 --> 00:18:23.020
建立配置密钥库

00:18:20.820 --> 00:18:25.360
有两种方法可以做到

00:18:23.020 --> 00:18:26.770
手动处理极端情况

00:18:25.360 --> 00:18:28.419
我现在要告诉你

00:18:26.770 --> 00:18:31.090
那不是你应该的

00:18:28.419 --> 00:18:32.919
做你，你应该瞄准那笔交易

00:18:31.090 --> 00:18:36.520
使其成为解决方案，但我想展示

00:18:32.919 --> 00:18:40.929
您先来一份手册，以便

00:18:36.520 --> 00:18:43.330
意图在这里，所以如果你问这个工具

00:18:40.929 --> 00:18:47.230
您可以做什么，为您提供了一种

00:18:43.330 --> 00:18:51.720
定义配置键并执行

00:18:47.230 --> 00:18:55.390
再次定义的春季展位

00:18:51.720 --> 00:18:57.190
标准化是您可以放置​​文件

00:18:55.390 --> 00:18:59.649
称为附加配置弹簧

00:18:57.190 --> 00:19:02.529
配置小纹身杰森成

00:18:59.649 --> 00:19:06.190
一个Demeter inch目录，我们将

00:19:02.529 --> 00:19:09.669
查找并将其用作附加内容

00:19:06.190 --> 00:19:12.700
加上手动元数据

00:19:09.669 --> 00:19:15.610
这个项目不存在，女童问

00:19:12.700 --> 00:19:19.720
我，如果我想创建它，它也

00:19:15.610 --> 00:19:22.620
问我要在哪里创建它， 

00:19:19.720 --> 00:19:26.740
它基本上会产生一个样本

00:19:22.620 --> 00:19:29.500
入门，所以我们已经说过

00:19:26.740 --> 00:19:31.700
计数器可能是整数对

00:19:29.500 --> 00:19:34.970
不是字符串，所以

00:19:31.700 --> 00:19:38.330
我可以把它做成字符串，也可以

00:19:34.970 --> 00:19:46.389
具有不同的默认值

00:19:38.330 --> 00:19:54.380
从42我也可以说创建一个

00:19:46.389 --> 00:20:01.700
字符串类型的不同属性

00:19:54.380 --> 00:20:07.940
时间，有些时间很小

00:20:01.700 --> 00:20:09.820
您可能已经注意到的描述

00:20:07.940 --> 00:20:12.919
顶部有一个横幅

00:20:09.820 --> 00:20:15.230
告诉您嘿，您应该重新运行

00:20:12.919 --> 00:20:20.049
批注处理器要更新要更新

00:20:15.230 --> 00:20:22.909
元数据，所以它的工作方式是

00:20:20.049 --> 00:20:25.880
实现了一个注释处理器

00:20:22.909 --> 00:20:29.570
好是作为构建的一部分，当它

00:20:25.880 --> 00:20:33.529
检测其他元数据

00:20:29.570 --> 00:20:35.269
罚款我们所有的注释类

00:20:33.529 --> 00:20:38.360
我要向你展示

00:20:35.269 --> 00:20:41.240
分钟，它将在元数据中生成

00:20:38.360 --> 00:20:44.120
归档并将其放置在标准位置

00:20:41.240 --> 00:20:46.669
旋转，以便将其添加到您的

00:20:44.120 --> 00:20:50.149
项目，这很简单，您只需要

00:20:46.669 --> 00:20:53.630
添加11个依赖关系

00:20:50.149 --> 00:20:57.440
现在要做的就是所谓的弹簧靴

00:20:53.630 --> 00:20:59.720
配置处理器，因为它是

00:20:57.440 --> 00:21:01.610
作为一部分运行的注释处理器

00:20:59.720 --> 00:21:03.529
不需要阅读

00:21:01.610 --> 00:21:05.269
完全暴露给您的项目

00:21:03.529 --> 00:21:08.059
真的是本地的东西

00:21:05.269 --> 00:21:09.740
构建过程使用的项目

00:21:08.059 --> 00:21:14.889
您的项目，而不是暴露为

00:21:09.740 --> 00:21:14.889
使用您的应用程序所需的库

00:21:16.419 --> 00:21:26.550
好的，所以我确实创建了一个额外的密钥， 

00:21:24.600 --> 00:21:32.010
看到文件已经生成

00:21:26.550 --> 00:21:37.160
在这里，所以如果我回去输入足球

00:21:32.010 --> 00:21:37.160
可以在这里找到我的其他描述

00:21:38.630 --> 00:21:47.580
但是，您需要手动添加这些

00:21:44.730 --> 00:21:50.130
您也可以手动更改元数据

00:21:47.580 --> 00:21:52.290
您的代码和妆容，您会忘记

00:21:50.130 --> 00:21:54.210
更改元数据，就是这样

00:21:52.290 --> 00:21:56.040
真的有点痛苦，所以我想

00:21:54.210 --> 00:21:59.760
向您展示如何使用该功能

00:21:56.040 --> 00:22:04.530
并且具有从生成的元数据

00:21:59.760 --> 00:22:06.180
为您从卷曲中做到这一点

00:22:04.530 --> 00:22:09.450
为此，我将创建一个简单的

00:22:06.180 --> 00:22:12.390
服务一点服务要标记

00:22:09.450 --> 00:22:16.670
该其他服务并使用命令

00:22:12.390 --> 00:22:16.670
 Spring的LineRunner接口好

00:22:16.910 --> 00:22:22.560
基本上要发生的是什么时候

00:22:19.710 --> 00:22:26.400
该应用程序将启动，我会这样

00:22:22.560 --> 00:22:29.700
特定的方法将被调用，所以我

00:22:26.400 --> 00:22:32.640
想打个招呼，但我想说

00:22:29.700 --> 00:22:38.390
用一种定制的方式打招呼

00:22:32.640 --> 00:22:44.250
有一个你知道的属性类

00:22:38.390 --> 00:22:50.580
让我们创建它基本上具有的类

00:22:44.250 --> 00:22:53.580
一个前缀，我们打个招呼，它有一个

00:22:50.580 --> 00:23:00.180
目标，所以读到的东西

00:22:53.580 --> 00:23:06.060
你想打个招呼，让我们使用它

00:23:00.180 --> 00:23:08.820
在我们的服务中，我要

00:23:06.060 --> 00:23:11.160
注入黄色属性，如果

00:23:08.820 --> 00:23:13.260
你跟随计数工作，因为其他

00:23:11.160 --> 00:23:16.100
不以任何方式注释属性

00:23:13.260 --> 00:23:21.150
所以我们稍后再讲

00:23:16.100 --> 00:23:29.280
假设我要给前缀a 

00:23:21.150 --> 00:23:30.660
空间和简单的目标

00:23:29.280 --> 00:23:32.430
缺少的第一件事

00:23:30.660 --> 00:23:36.300
事情是我们要告诉春天引导

00:23:32.430 --> 00:23:38.100
该类实际上是要映射的

00:23:36.300 --> 00:23:42.210
通过配置

00:23:38.100 --> 00:23:43.590
是在您的配置中定义的，因此在

00:23:42.210 --> 00:23:46.200
系统中的命令行开关

00:23:43.590 --> 00:23:48.450
属性或此文件中的条目

00:23:46.200 --> 00:23:50.250
应用程序属性文件，所以我要去

00:23:48.450 --> 00:23:52.470
从springwood添加注释

00:23:50.250 --> 00:23:56.520
称为配置属性

00:23:52.470 --> 00:24:00.150
前缀，您可能会在上找到

00:23:56.520 --> 00:24:02.760
现在，这个特定的配置密钥是

00:24:00.150 --> 00:24:06.559
 ello点前缀，这是一个负载

00:24:02.760 --> 00:24:09.450
目标并不意味着这个

00:24:06.559 --> 00:24:12.270
配置属性由

00:24:09.450 --> 00:24:16.950
任何手段都有一个额外的注释

00:24:12.270 --> 00:24:19.289
用来做到这一点，这也正在

00:24:16.950 --> 00:24:21.480
确保这个锅这个

00:24:19.289 --> 00:24:25.260
一类是春风

00:24:21.480 --> 00:24:29.520
确保你自动穿着我

00:24:25.260 --> 00:24:31.890
听到会工作，没有目标

00:24:29.520 --> 00:24:33.900
定义，我想确保它

00:24:31.890 --> 00:24:37.970
金钱来定义一个，所以我要

00:24:33.900 --> 00:24:41.970
向该属性添加约束，然后

00:24:37.970 --> 00:24:47.190
让我们再次启动我的应用程序，您可以看到

00:24:41.970 --> 00:24:50.309
那一个现在不见了，应该

00:24:47.190 --> 00:24:56.880
失败了，那失败了，因为目标是

00:24:50.309 --> 00:25:00.650
设置不好，让我们回到我的文件

00:24:56.880 --> 00:25:03.450
你会看到它已经在那里

00:25:00.650 --> 00:25:06.090
这样的东西，注解

00:25:03.450 --> 00:25:09.030
处理器正在看的是这个

00:25:06.090 --> 00:25:11.730
配置属性注释

00:25:09.030 --> 00:25:14.700
每当你把它放在课堂上

00:25:11.730 --> 00:25:16.799
您的项目注释处理器

00:25:14.700 --> 00:25:19.770
会检测到它是目标

00:25:16.799 --> 00:25:22.530
配置孩子，它将生成

00:25:19.770 --> 00:25:24.360
相关元数据太好了

00:25:22.530 --> 00:25:26.490
看到我必须一起创造

00:25:24.360 --> 00:25:27.690
为了注入值的二传手

00:25:26.490 --> 00:25:30.510
如果您有没有

00:25:27.690 --> 00:25:32.580
二传手斯普林伍德将无法

00:25:30.510 --> 00:25:35.970
注入值，这样就不会产生

00:25:32.580 --> 00:25:37.440
该拉屎的元数据可以

00:25:35.970 --> 00:25:42.289
还可以看到默认值是

00:25:37.440 --> 00:25:42.289
发现喃喃自语，所以这是一个世界

00:25:45.100 --> 00:26:03.309
大步走好，然后我可以看到我有

00:25:57.490 --> 00:26:08.410
我在这里的消息，您还可以添加

00:26:03.309 --> 00:26:10.450
文档在某个地方，以便

00:26:08.410 --> 00:26:19.870
注释处理器可以选择

00:26:10.450 --> 00:26:24.100
我们这样做的原因与

00:26:19.870 --> 00:26:25.929
看着Javadoc ano setter是

00:26:24.100 --> 00:26:30.309
可能想提供一个非常专注的

00:26:25.929 --> 00:26:32.559
消息到配置键

00:26:30.309 --> 00:26:35.470
不会影响您的称呼方式

00:26:32.559 --> 00:26:40.000
建立，而无需更改

00:26:35.470 --> 00:26:43.210
二传手很酷，所以如果我去

00:26:40.000 --> 00:26:47.289
这样做，我再次这样做，对不起，然后我得到

00:26:43.210 --> 00:26:49.000
我和您的领域的文档

00:26:47.289 --> 00:26:51.250
可以看到箭头目标消失了

00:26:49.000 --> 00:26:54.250
现在，因为您已经定义了它

00:26:51.250 --> 00:26:56.440
已经在您这里

00:26:54.250 --> 00:27:02.559
配置它将被运送到周围

00:26:56.440 --> 00:27:05.350
通过成像自动进行，因此

00:27:02.559 --> 00:27:07.929
配置王和内容

00:27:05.350 --> 00:27:12.820
协助支持intellij的想法

00:27:07.929 --> 00:27:15.880
还提供了一件事，我们看到了

00:27:12.820 --> 00:27:19.000
那早期的intellij我

00:27:15.880 --> 00:27:20.890
支持是专用的运行配置

00:27:19.000 --> 00:27:24.370
对于 spring boot 应用程序，让我们

00:27:20.890 --> 00:27:28.600
看到让我们看到，现在您可以看到它

00:27:24.370 --> 00:27:33.250
这与常规主管道非常相似

00:27:28.600 --> 00:27:37.210
类配置他们不是，但那里

00:27:33.250 --> 00:27:40.840
这里有更多数据和专用选项

00:27:37.210 --> 00:27:46.539
我可以隐藏横幅，也可以

00:27:40.840 --> 00:27:49.480
更改/运行配置一些设置

00:27:46.539 --> 00:27:53.740
我也得到了内容和系统

00:27:49.480 --> 00:27:55.990
在这里，让我们说这个

00:27:53.740 --> 00:27:58.620
我想要这个特定的实例

00:27:55.990 --> 00:27:58.620
修改密码

00:27:59.179 --> 00:28:12.809
好吧，让我们运行这个应用程序

00:28:02.159 --> 00:28:15.230
再次，如果我去这里，我必须登录

00:28:12.809 --> 00:28:22.309
再次，您看到值已更改

00:28:15.230 --> 00:28:26.820
希望这也改变了我

00:28:22.309 --> 00:28:29.460
无论如何，所以这些确实是个好方法

00:28:26.820 --> 00:28:32.309
如果您有多种方式

00:28:29.460 --> 00:28:33.869
启动特定的弹簧靴

00:28:32.309 --> 00:28:36.509
应用程序以及是否要更改

00:28:33.869 --> 00:28:40.830
您可以直接进行某些设置

00:28:36.509 --> 00:28:42.629
在这里并有多个运行配置

00:28:40.830 --> 00:28:48.450
对于同一个应用，但略有不同

00:28:42.629 --> 00:28:52.259
设置另一件事，IntelliJ 

00:28:48.450 --> 00:28:54.029
 IDEA知道配置文件，因此配置文件

00:28:52.259 --> 00:28:56.039
那不是你，而是

00:28:54.029 --> 00:28:59.279
因此，由于春天的存在

00:28:56.039 --> 00:29:01.679
框架322及其工作方式是

00:28:59.279 --> 00:29:04.559
您可以通过以下方式启动应用程序

00:29:01.679 --> 00:29:07.739
指定一组配置文件配置文件

00:29:04.559 --> 00:29:13.019
给电池起名字，什么时候起名字

00:29:07.739 --> 00:29:14.730
当前标记为存在的垃圾箱

00:29:13.019 --> 00:29:18.690
为某些配置文件定义的将是

00:29:14.730 --> 00:29:21.720
启用的Spring Boot需要支持

00:29:18.690 --> 00:29:24.690
更进一步，让您创建

00:29:21.720 --> 00:29:26.190
具有以下名称的配置文件

00:29:24.690 --> 00:29:30.869
先知中的个人资料名称

00:29:26.190 --> 00:29:32.789
因此，假设我要创建一个

00:29:30.869 --> 00:29:35.009
死亡概况和我想要的第一件事

00:29:32.789 --> 00:29:38.820
我要做的是禁用自动

00:29:35.009 --> 00:29:41.639
完全教育，在这种情况下

00:29:38.820 --> 00:29:44.070
有一个钥匙就是这个

00:29:41.639 --> 00:29:46.279
默认是打开的，我要切换

00:29:44.070 --> 00:29:46.279
那关

00:29:48.100 --> 00:29:55.870
我也想给你看一个额外的

00:29:52.809 --> 00:29:59.320
被定义，我将使用

00:29:55.870 --> 00:30:01.210
生活印记又迟了，我们是什么

00:29:59.320 --> 00:30:04.750
当聋人档案是和

00:30:01.210 --> 00:30:07.559
曾经是我们要暴露H2 

00:30:04.750 --> 00:30:11.710
控制台，以便您实际上可以登录

00:30:07.559 --> 00:30:13.240
通过您的Web应用程序来查看

00:30:11.710 --> 00:30:16.150
数据库的状态是

00:30:13.240 --> 00:30:19.390
在开发中很有用，所以既然我想

00:30:16.150 --> 00:30:22.840
使用h 2我需要在这里删除此范围

00:30:19.390 --> 00:30:25.600
这样我就可以访问控制台的边缘

00:30:22.840 --> 00:30:29.980
一堂课，我有这个生活模板

00:30:25.600 --> 00:30:31.210
使用名为h2 console的参数

00:30:29.980 --> 00:30:35.429
当我这样做时，我唯一要做的就是

00:30:31.210 --> 00:30:38.440
要做的就是提供配置文件的名称，然后

00:30:35.429 --> 00:30:42.970
该寄存器并提取轨道上的

00:30:38.440 --> 00:30:45.730
控制台路径，所以让我们开始吧

00:30:42.970 --> 00:30:47.860
再次申请，但未指定任何

00:30:45.730 --> 00:30:53.470
个人资料只是为了证明它不是

00:30:47.860 --> 00:30:57.880
做一些不该做的事，然后

00:30:53.470 --> 00:31:02.320
您可以进入窗口，我必须再次登录

00:30:57.880 --> 00:31:05.470
这也改变了我，如果我继续

00:31:02.320 --> 00:31:12.549
控制台不起作用，没有映射

00:31:05.470 --> 00:31:15.900
为此，让我们回到运行

00:31:12.549 --> 00:31:19.630
配置在这里，让我们重复

00:31:15.900 --> 00:31:25.780
不同的配置并调用它

00:31:19.630 --> 00:31:27.340
那然后在这里我基本上可以说

00:31:25.780 --> 00:31:33.970
我想激活死亡

00:31:27.340 --> 00:31:41.720
对此应用进行配置，然后打开

00:31:33.970 --> 00:31:43.310
新的隐身窗口，因此

00:31:41.720 --> 00:31:47.410
新应用程序不安全

00:31:43.310 --> 00:31:57.950
我可以去控制台了

00:31:47.410 --> 00:31:59.540
看着我的滑雪帘，但是

00:31:57.950 --> 00:32:03.800
 IntelliJ IDEA比

00:31:59.540 --> 00:32:06.140
那也知道聋人

00:32:03.800 --> 00:32:10.520
在某些地方的配置文件值，如果

00:32:06.140 --> 00:32:12.140
您想在此处重命名此值，以便

00:32:10.520 --> 00:32:15.590
假设您要调用该开发工具

00:32:12.140 --> 00:32:17.450
无论出于什么原因，它将发现

00:32:15.590 --> 00:32:19.850
在您的项目中

00:32:17.450 --> 00:32:23.030
已经是一个尊重这一点的文件

00:32:19.850 --> 00:32:25.400
聋人档案的常规文件和

00:32:23.030 --> 00:32:27.380
它会建议您重命名文件

00:32:25.400 --> 00:32:39.290
以及因为您更改了名称

00:32:27.380 --> 00:32:42.260
那个人资料好吧，我还有几个

00:32:39.290 --> 00:32:45.290
我想告诉你的是

00:32:42.260 --> 00:32:47.720
称为智能内容辅助，因此

00:32:45.290 --> 00:32:50.600
基本上有能力

00:32:47.720 --> 00:32:54.620
 GID了解某些类型，并

00:32:50.600 --> 00:32:57.440
提供每个的智能自动完成

00:32:54.620 --> 00:32:59.510
值上的其他键，例如

00:32:57.440 --> 00:33:01.730
您还注意到我们有一个

00:32:59.510 --> 00:33:05.030
不建议使用的支持，因此如果您有钥匙

00:33:01.730 --> 00:33:06.860
而你不想再支持它

00:33:05.030 --> 00:33:09.560
但是当然您仍然需要支持

00:33:06.860 --> 00:33:11.360
从很长一段时间开始

00:33:09.560 --> 00:33:16.730
可以将其标记为已弃用

00:33:11.360 --> 00:33:18.980
被示为另一次罢工，让我们

00:33:16.730 --> 00:33:22.640
自定义该键，在这种情况下

00:33:18.980 --> 00:33:25.400
在Socal Set中，我基本上可以更改

00:33:22.640 --> 00:33:30.550
我可以看看建议

00:33:25.400 --> 00:33:33.740
其他城堡的价值也可以做到这一点

00:33:30.550 --> 00:33:36.110
内容类型，因此在这种情况下

00:33:33.740 --> 00:33:39.550
默认内容类型的内容类型

00:33:36.110 --> 00:33:39.550
及时的多维数据集

00:33:42.919 --> 00:33:50.570
我不知道的价值对不起

00:33:45.649 --> 00:33:56.299
随便什么，但我们也有一个智能汽车

00:33:50.570 --> 00:33:59.029
完成价值的潜在价值

00:33:56.299 --> 00:34:00.499
 T，所以你可能用过

00:33:59.029 --> 00:34:02.259
冬眠的过去，你知道

00:34:00.499 --> 00:34:05.600
有此设置，您可以

00:34:02.259 --> 00:34:08.599
启动时创建或更新数据库

00:34:05.600 --> 00:34:11.559
或者也许你什么也不做

00:34:08.599 --> 00:34:14.450
注意，我不需要做任何事情

00:34:11.559 --> 00:34:17.149
我不必这么做的原因

00:34:14.450 --> 00:34:20.540
自定义任何内容是因为

00:34:17.149 --> 00:34:22.760
 Spring Boot试图自动配置

00:34:20.540 --> 00:34:26.179
首先查看的数据源

00:34:22.760 --> 00:34:28.399
上下文中没有数据咸我

00:34:26.179 --> 00:34:29.839
没有定义任何东西然后开始

00:34:28.399 --> 00:34:32.839
看着十字路口，发现

00:34:29.839 --> 00:34:35.240
那里只有一个嵌入式数据库

00:34:32.839 --> 00:34:38.510
因为没有什么可以抗拒它

00:34:35.240 --> 00:34:40.220
默认情况下为我在内存中存储数据库

00:34:38.510 --> 00:34:44.119
您在其中看到的测试DD名称

00:34:40.220 --> 00:34:46.040
控制台，因为它是数据库

00:34:44.119 --> 00:34:49.520
内存，所以您将被重新创建

00:34:46.040 --> 00:34:51.349
重新创建每个自动的人

00:34:49.520 --> 00:34:54.319
配置片实际上也是

00:34:51.349 --> 00:34:56.359
促成方案的产生

00:34:54.319 --> 00:34:58.010
自动地，以便您得到您所得到的

00:34:56.359 --> 00:35:02.720
基本上期望不指定

00:34:58.010 --> 00:35:05.270
任何东西，如果我键入在这里有脖子我

00:35:02.720 --> 00:35:08.599
可以看到我可以提供一些价值

00:35:05.270 --> 00:35:16.520
引擎盖，我为那些自动完成

00:35:08.599 --> 00:35:19.819
我也可以导航到实际目标

00:35:16.520 --> 00:35:22.849
的关键，因此例如

00:35:19.819 --> 00:35:24.670
与您想要成长时一样

00:35:22.849 --> 00:35:27.710
通过方法调用方法调用

00:35:24.670 --> 00:35:29.869
所以如果我这样做，我基本上会进入

00:35:27.710 --> 00:35:31.760
弹跳木的安全特性

00:35:29.869 --> 00:35:35.630
和设置的密码，这样我就可以看到

00:35:31.760 --> 00:35:40.869
当我设置该键时也会发生

00:35:35.630 --> 00:35:45.280
钥匙的快速文档帮助

00:35:40.869 --> 00:35:45.280
使用默认值说明

00:35:48.380 --> 00:35:56.849
好了，这就是我想展示的

00:35:51.599 --> 00:35:59.369
您今天即将获得的支持是

00:35:56.849 --> 00:36:02.099
现在发布，它进入j-14点一

00:35:59.369 --> 00:36:03.630
顺便说一句，所以如果你不加载

00:36:02.099 --> 00:36:09.180
那个版本马上就可以得到所有

00:36:03.630 --> 00:36:11.250
这些功能现在，让我们看看

00:36:09.180 --> 00:36:13.650
如果有，我确定有很多

00:36:11.250 --> 00:36:17.099
我希望可以回答的问题

00:36:13.650 --> 00:36:20.280
让我们来看看谢谢斯特凡

00:36:17.099 --> 00:36:23.040
你好，这是抢劫啊，我可以证明

00:36:20.280 --> 00:36:25.650
只是为了您，好吧，所以

00:36:23.040 --> 00:36:26.849
我在这里弹出一个问题，所以我

00:36:25.650 --> 00:36:29.579
不知道他是否准备好了

00:36:26.849 --> 00:36:34.020
说我们不需要添加配置类

00:36:29.579 --> 00:36:37.440
春天方面很好，我没有添加

00:36:34.020 --> 00:36:40.079
因为我这不是这里的目标，而是

00:36:37.440 --> 00:36:42.720
您不必添加就可以了

00:36:40.079 --> 00:36:46.050
获得更多内容帮助，但这就是

00:36:42.720 --> 00:36:49.849
常规弹簧支撑而不是弹簧靴

00:36:46.050 --> 00:36:52.049
相关，所以如果您添加该应用程序

00:36:49.849 --> 00:36:54.510
该演示应用程序类，您

00:36:52.049 --> 00:36:58.280
在其中定义Bean IntelliJ IDEA 

00:36:54.510 --> 00:37:01.650
知道关于他们的知识并可以看到

00:36:58.280 --> 00:37:03.630
当您尝试再次注射到哪里时

00:37:01.650 --> 00:37:05.700
来自这样的事情，但在

00:37:03.630 --> 00:37:10.230
我想演示的情况是

00:37:05.700 --> 00:37:12.089
不是强制性的，好吧，我认为您已经输入

00:37:10.230 --> 00:37:16.290
这个你要把代码放在

00:37:12.089 --> 00:37:18.839
是的，我要做到这一点

00:37:16.290 --> 00:37:21.480
将提出不确切的应用程序，所以

00:37:18.839 --> 00:37:23.339
你可以马上玩

00:37:21.480 --> 00:37:25.829
让我知道好吧，还有另一个

00:37:23.339 --> 00:37:31.859
这里的问题是Grails如何适应春天

00:37:25.829 --> 00:37:33.869
看看Grail，生态系统还可以

00:37:31.859 --> 00:37:37.770
实际上是伟大的三点0或

00:37:33.869 --> 00:37:42.950
今天发布，上面是重写

00:37:37.770 --> 00:37:46.140
 spring boot ，所以如果您使用网格3 

00:37:42.950 --> 00:37:48.000
它基本上生成所有

00:37:46.140 --> 00:37:50.280
在后台使用良好的春天

00:37:48.000 --> 00:37:52.680
表示您最大的3个应用是

00:37:50.280 --> 00:37:57.410
其实春天会有

00:37:52.680 --> 00:37:57.410
引导方式非常关键

00:37:57.609 --> 00:38:08.150
好吧好吧问题来了

00:38:01.550 --> 00:38:10.880
现在在这里，让我看一看

00:38:08.150 --> 00:38:13.790
关于弹簧加载我可能

00:38:10.880 --> 00:38:16.369
马上回答建议就可以了

00:38:13.790 --> 00:38:20.869
我们通过VM在IntelliJ中添加弹簧加载

00:38:16.369 --> 00:38:23.569
参数，所以答案是肯定的

00:38:20.869 --> 00:38:26.569
基本上需要不知道不知道

00:38:23.569 --> 00:38:30.349
春季加载这是一项工作

00:38:26.569 --> 00:38:33.260
画在桌子上的某个地方

00:38:30.349 --> 00:38:35.869
运行配置有标记

00:38:33.260 --> 00:38:39.410
我将在春天定义

00:38:35.869 --> 00:38:41.839
与我一起加载，您将它们定义为虚拟机

00:38:39.410 --> 00:38:47.119
选项和弹簧加载将开始于

00:38:41.839 --> 00:38:48.950
下次还可以的话

00:38:47.119 --> 00:38:52.550
问题社区版本

00:38:48.950 --> 00:38:55.119
提供到目前为止的Spring Boot集成

00:38:52.550 --> 00:38:57.680
我知道较早的弹簧支撑是

00:38:55.119 --> 00:39:01.760
与您的队友版本有关

00:38:57.680 --> 00:39:04.160
春天不错的版本，但

00:39:01.760 --> 00:39:06.230
我猜是来自捷脑的人

00:39:04.160 --> 00:39:08.990
适合回答我实际使用的

00:39:06.230 --> 00:39:11.569
我不唱歌的终极版本

00:39:08.990 --> 00:39:15.020
向免费版本开放

00:39:11.569 --> 00:39:17.089
功能确定，我如何添加一些用户

00:39:15.020 --> 00:39:19.490
由支持的名称密码身份验证

00:39:17.089 --> 00:39:23.630
例如数据库表或自定义

00:39:19.490 --> 00:39:27.109
用户详细信息服务确定，因此您仍然可以

00:39:23.630 --> 00:39:30.049
看到我的屏幕对不对所有

00:39:27.109 --> 00:39:33.950
好吧，很好，你会做点什么

00:39:30.049 --> 00:39:43.130
这样，您将创建一个证券

00:39:33.950 --> 00:39:44.750
配置全局钢琴让您失望

00:39:43.130 --> 00:39:47.569
基本上会给您意见

00:39:44.750 --> 00:39:49.940
 spring boot ，你会说我不想

00:39:47.569 --> 00:39:53.119
春天好自动配置

00:39:49.940 --> 00:39:56.660
对我来说，我要定义的安全性

00:39:53.119 --> 00:39:59.900
明确地发生了什么，发生了什么

00:39:56.660 --> 00:40:03.640
当你这样做的时候，你只会改变

00:39:59.900 --> 00:40:07.160
您要配置的那部分，如果

00:40:03.640 --> 00:40:11.890
我当然很简单

00:40:07.160 --> 00:40:11.890
可以做更多更复杂的事情

00:40:12.190 --> 00:40:17.240
内存中还有gtv co 

00:40:15.050 --> 00:40:24.380
在这里设防基本上很简单

00:40:17.240 --> 00:40:26.360
定义该类的事实将产生

00:40:24.380 --> 00:40:28.160
开机将检测到它并退出

00:40:26.360 --> 00:40:29.810
自动配置部分是

00:40:28.160 --> 00:40:32.450
处理这个，因为您定义

00:40:29.810 --> 00:40:34.760
自己做些什么，以便我们可以

00:40:32.450 --> 00:40:40.810
在尝试搜索时实际尝试

00:40:34.760 --> 00:40:49.570
一个不同的问题，所以假设用户

00:40:40.810 --> 00:40:49.570
一共两个目标，对不起，用户洋葱

00:40:50.830 --> 00:40:56.540
好吧，让我们尝试一下，如果我开始

00:40:54.260 --> 00:40:59.390
之所以这样，是因为死者是

00:40:56.540 --> 00:41:12.680
身份验证完全给出0，所以我

00:40:59.390 --> 00:41:16.010
应该让用户以某种方式纹身和

00:41:12.680 --> 00:41:18.620
你走了，所以它不会逃避回答

00:41:16.010 --> 00:41:20.750
问题，因为它在内存中，但是您

00:41:18.620 --> 00:41:22.610
基本上获得了弹簧的全部力量

00:41:20.750 --> 00:41:25.490
安全性，因此您可以根据需要

00:41:22.610 --> 00:41:28.460
数据库支持的身份验证可以

00:41:25.490 --> 00:41:31.280
通过相同的机制这样做

00:41:28.460 --> 00:41:32.930
这是我们可以解决的另一个问题

00:41:31.280 --> 00:41:34.460
我们可以计算出捆绑的Web服务器

00:41:32.930 --> 00:41:41.510
定制弹簧靴

00:41:34.460 --> 00:41:43.610
配置我没有得到，让我们

00:41:41.510 --> 00:41:47.090
看到这里，也许我读了Rhonda，它说

00:41:43.610 --> 00:41:49.280
嗯，我们可以配置Web服务器

00:41:47.090 --> 00:41:52.550
捆绑有定制的弹簧靴

00:41:49.280 --> 00:41:55.120
配置哦，好吧，一个就这样

00:41:52.550 --> 00:41:58.250
您基本上可以做两件事

00:41:55.120 --> 00:42:01.490
当您添加网络启动器时

00:41:58.250 --> 00:42:06.590
网络技术使您枯萎

00:42:01.490 --> 00:42:09.110
默认情况下获取tomcat，以便您可以

00:42:06.590 --> 00:42:10.910
决定完全切换到某种东西

00:42:09.110 --> 00:42:12.620
不同，所以您可以使用李连杰

00:42:10.910 --> 00:42:16.130
可以只用脚趾

00:42:12.620 --> 00:42:18.530
替换依赖项，您还可以

00:42:16.130 --> 00:42:20.960
配置事物，以便如果您想知道

00:42:18.530 --> 00:42:24.020
您可以做什么，只需输入服务器点

00:42:20.960 --> 00:42:26.300
然后你得到所有的配置

00:42:24.020 --> 00:42:28.850
嵌入式容器的胫骨有

00:42:26.300 --> 00:42:31.460
您一些特定于Tomcat的设置

00:42:28.850 --> 00:42:34.550
将在服务器下找到Tomcat和

00:42:31.460 --> 00:42:37.250
您会发现我相信该工具

00:42:34.550 --> 00:42:40.220
我不唱歌的一些支持没有

00:42:37.250 --> 00:42:43.370
并非如此，这就是所有关键

00:42:40.220 --> 00:42:46.100
您可以定义它会稍微改变

00:42:43.370 --> 00:42:49.280
 Tomcat或嵌入式的方式

00:42:46.100 --> 00:42:52.340
容器已安装，您也可以

00:42:49.280 --> 00:42:56.390
部署将spring boot部署为

00:42:52.340 --> 00:43:00.230
常规的战争档案，所以如果我回到这个

00:42:56.390 --> 00:43:02.090
样式的弹力拨盘很快

00:43:00.230 --> 00:43:04.430
顺便说一句，IntelliJ IDEA也是如此

00:43:02.090 --> 00:43:06.920
你可以决定建立一个战争文件

00:43:04.430 --> 00:43:09.080
而不是jar文件，这样

00:43:06.920 --> 00:43:13.430
只需建立一个常规的战争文件， 

00:43:09.080 --> 00:43:15.530
可以部署在一个不错的3号轨道容器中

00:43:13.430 --> 00:43:20.590
我可以用H跟其他人咨询吗

00:43:15.530 --> 00:43:23.240
数据库没有，所以H2控制台是

00:43:20.590 --> 00:43:27.110
 h2提供的非常具体的信息

00:43:23.240 --> 00:43:28.610
它真的致力于H2我不

00:43:27.110 --> 00:43:30.470
认为您可以将其与

00:43:28.610 --> 00:43:32.240
虽然我可能是不同的数据库

00:43:30.470 --> 00:43:34.190
错了，但是如果那会令我惊讶

00:43:32.240 --> 00:43:36.560
可能是一点点

00:43:34.190 --> 00:43:37.850
更长的答案，但我们已经

00:43:36.560 --> 00:43:39.650
这个问题好几次

00:43:37.850 --> 00:43:43.630
告诉我们一些关于弹簧靴的信息， 

00:43:39.650 --> 00:43:48.860
春天的路线图春天的引导，什么

00:43:43.630 --> 00:43:50.960
春天的路线图

00:43:48.860 --> 00:43:54.380
 springwood 1 2 dot 3已发布

00:43:50.960 --> 00:43:57.950
今天实际上，我们目前

00:43:54.380 --> 00:44:02.300
在1 2 3版本上工作

00:43:57.950 --> 00:44:05.240
今年九月左右出去

00:44:02.300 --> 00:44:10.360
我们要做的是

00:44:05.240 --> 00:44:13.550
我们想要实现的主题

00:44:10.360 --> 00:44:16.040
我们要实现缓存

00:44:13.550 --> 00:44:19.130
自动配置，所以基本上

00:44:16.040 --> 00:44:22.370
自动检测缓存库的能力

00:44:19.130 --> 00:44:25.070
并提供缓存管理器和现金

00:44:22.370 --> 00:44:29.240
统计数据暴露现金统计印度

00:44:25.070 --> 00:44:31.690
叛徒我们还想改善

00:44:29.240 --> 00:44:35.750
构建用于引导的工具

00:44:31.690 --> 00:44:37.819
主要是格雷登已经改善了

00:44:35.750 --> 00:44:41.449
依赖插件的使用

00:44:37.819 --> 00:44:43.630
允许您使用一百万烧

00:44:41.449 --> 00:44:46.219
同样地，行家也是如此

00:44:43.630 --> 00:44:47.989
提供一个烧伤的参考，并有

00:44:46.219 --> 00:44:51.890
正在应用依赖项管理

00:44:47.989 --> 00:44:53.749
到您的项目，我们也将更新

00:44:51.890 --> 00:44:56.839
一个插件，以便您更轻松地进行操作

00:44:53.749 --> 00:45:00.859
基本上运行集成测试

00:44:56.839 --> 00:45:03.650
与货物类似的功能

00:45:00.859 --> 00:45:06.890
启动一个春季良好的应用程序运行

00:45:03.650 --> 00:45:08.539
集成测试，然后停止

00:45:06.890 --> 00:45:13.400
申请，无论事实

00:45:08.539 --> 00:45:16.130
桌面成功与否，还有

00:45:13.400 --> 00:45:18.410
还有很多我们想要的其他领域

00:45:16.130 --> 00:45:20.930
改善乔托配置

00:45:18.410 --> 00:45:27.410
提供更多选择，这就是我们

00:45:20.930 --> 00:45:31.279
在这一点上忙做还可以，所以

00:45:27.410 --> 00:45:33.529
也许这是1个或更少

00:45:31.279 --> 00:45:35.719
在这里，为什么不为什么不使用

00:45:33.529 --> 00:45:38.749
摇篮有一些碎裂的碎石

00:45:35.719 --> 00:45:41.839
支持和想法，也许Gradle有

00:45:38.749 --> 00:45:46.459
与Maven um相比的一些缺点

00:45:41.839 --> 00:45:49.670
没有II只是使用Maven手机，因为我

00:45:46.459 --> 00:45:52.099
我已经习惯了pmc 

00:45:49.670 --> 00:45:55.309
所以内森就像我去过的某个歌手

00:45:52.099 --> 00:45:57.380
使用了10多年了

00:45:55.309 --> 00:45:59.390
很好，所以您可以看到可以使用

00:45:57.380 --> 00:46:02.569
在度假村，你会得到

00:45:59.390 --> 00:46:06.049
相同的经验可以做到这一点

00:46:02.569 --> 00:46:10.969
马上就可以创建一个新的

00:46:06.049 --> 00:46:15.289
项目精神伊塞尔，你可以说我

00:46:10.969 --> 00:46:17.690
想要一个信贷项目，而是可以使用

00:46:15.289 --> 00:46:23.920
所有相同的选项都有网络

00:46:17.690 --> 00:46:23.920
安全西部无论GPA执行器h 2 

00:46:24.999 --> 00:46:34.459
演示渐变并将其创建为新的

00:46:29.869 --> 00:46:37.369
窗口，以便您获得相同的用户

00:46:34.459 --> 00:46:42.680
体验IntelliJ IDEA检测到的

00:46:37.369 --> 00:46:46.309
需要考虑更大的项目

00:46:42.680 --> 00:46:48.170
为你，然后它会做得很好

00:46:46.309 --> 00:46:50.470
将获得通常的更大支持

00:46:48.170 --> 00:46:53.230
 intellij的想法

00:46:50.470 --> 00:46:55.090
就食物而言

00:46:53.230 --> 00:46:56.770
两者都开始建造，所以我们有一个

00:46:55.090 --> 00:47:00.720
内置的Maven和一个插件

00:46:56.770 --> 00:47:03.550
稍后，我们将尽力而为

00:47:00.720 --> 00:47:08.109
我两个之间有相同的特征

00:47:03.550 --> 00:47:11.650
提到依赖性插件

00:47:08.109 --> 00:47:14.380
在更大的程度上，您可以使用

00:47:11.650 --> 00:47:16.900
直接从Gradle脚本中获取事件pom 

00:47:14.380 --> 00:47:18.730
这不是什么

00:47:16.900 --> 00:47:20.859
开箱即用的支持更大

00:47:18.730 --> 00:47:22.570
不支持，我们感到

00:47:20.859 --> 00:47:26.980
真的很烦人

00:47:22.570 --> 00:47:29.140
定义版本，而你可以

00:47:26.980 --> 00:47:31.119
只需使用适当的依赖项

00:47:29.140 --> 00:47:32.890
管理，所以我们实际上建立了一个

00:47:31.119 --> 00:47:37.480
自己插入，这就是我们使用的

00:47:32.890 --> 00:47:40.599
现在是从203年春季开始，所以您可以看到

00:47:37.480 --> 00:47:43.150
如您所料，我没有使用

00:47:40.599 --> 00:47:45.340
骑了很多，所以它不动了一些

00:47:43.150 --> 00:47:48.940
这里的东西很少，但这是完美的

00:47:45.340 --> 00:47:54.099
有效的项目，谢谢斯特凡夫妇

00:47:48.940 --> 00:47:55.510
链接在这里很好，我们再次总结斯特凡

00:47:54.099 --> 00:47:58.740
非常感谢您的宝贵时间， 

00:47:55.510 --> 00:48:01.240
谢谢大家加入我们

00:47:58.740 --> 00:48:05.099
很高兴看到你

00:48:01.240 --> 00:48:05.099
期待您再次访问我们

