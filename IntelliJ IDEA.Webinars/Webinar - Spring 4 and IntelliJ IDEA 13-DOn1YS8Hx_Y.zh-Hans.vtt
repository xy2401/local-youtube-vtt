WEBVTT
Kind: captions
Language: zh-Hans

00:00:03.090 --> 00:00:07.230
非常感谢大家加入我们

00:00:05.310 --> 00:00:10.139
早上或下午好，取决于

00:00:07.230 --> 00:00:13.889
哪个时间连接到此

00:00:10.139 --> 00:00:16.049
我的网路研讨会是Josh，只要我

00:00:13.889 --> 00:00:17.699
刚刚被介绍得很棒

00:00:16.049 --> 00:00:20.099
春天的开发商倡导者

00:00:17.699 --> 00:00:22.439
在关键点和关键点

00:00:20.099 --> 00:00:25.380
 by是春天的新家

00:00:22.439 --> 00:00:27.720
春季队虽然很棒

00:00:25.380 --> 00:00:30.900
您知道的开源Apache 

00:00:27.720 --> 00:00:33.870
许可证上下文等在4月移动

00:00:30.900 --> 00:00:35.790
今年是一家新公司成立

00:00:33.870 --> 00:00:38.790
在开源上，所以我们是新的

00:00:35.790 --> 00:00:41.330
春季之家，包括RabbitMQ Redis 

00:00:38.790 --> 00:00:45.030
 Grails计划电影领导

00:00:41.330 --> 00:00:46.200
你知道Tomcat的Apache领导

00:00:45.030 --> 00:00:48.510
尝试开源平台

00:00:46.200 --> 00:00:49.920
作为一种Hadoop分发

00:00:48.510 --> 00:00:53.450
你们很多人都知道，真的很棒

00:00:49.920 --> 00:00:55.590
用于处理的开源堆栈

00:00:53.450 --> 00:00:58.710
今天的问题和建设

00:00:55.590 --> 00:01:00.120
明天的需求，你知道非常非常非常

00:00:58.710 --> 00:01:02.940
前瞻性思考我们是问题，我们是

00:01:00.120 --> 00:01:05.519
面对，当然是所有人的核心

00:01:02.940 --> 00:01:08.009
今年春天是其中的一部分

00:01:05.519 --> 00:01:10.079
为您中的那些建模胶水

00:01:08.009 --> 00:01:11.880
春天，因为你知道你可能会知道

00:01:10.079 --> 00:01:13.560
那里可能有很多

00:01:11.880 --> 00:01:15.420
您知道很多不同的选择

00:01:13.560 --> 00:01:18.359
不同的选择，以便于帮助

00:01:15.420 --> 00:01:21.990
更好地了解那个领域是

00:01:18.359 --> 00:01:24.210
这个图在这里，所以顶层

00:01:21.990 --> 00:01:25.920
这是爱荷华州执行层

00:01:24.210 --> 00:01:28.380
层，如果你看图

00:01:25.920 --> 00:01:29.460
描述的是

00:01:28.380 --> 00:01:32.100
弹簧堆栈，并帮助您应对

00:01:29.460 --> 00:01:32.700
过程，当然这是一个非常

00:01:32.100 --> 00:01:35.490
低级

00:01:32.700 --> 00:01:38.100
你知道隐喻或乏味，但基本上

00:01:35.490 --> 00:01:41.429
 spring XD是用于

00:01:38.100 --> 00:01:44.280
处理大型实时数据

00:01:41.429 --> 00:01:47.399
处理解决方案和春天的模拟是

00:01:44.280 --> 00:01:49.499
我们对春季的关注

00:01:47.399 --> 00:01:51.509
应用程序是一种构建方式

00:01:49.499 --> 00:01:54.719
使用约定的应用程序

00:01:51.509 --> 00:01:56.369
尽可能的配置

00:01:54.719 --> 00:01:59.340
鹌鹑是我们的Ruby语言

00:01:56.369 --> 00:02:01.799
快速应用程序网络框架

00:01:59.340 --> 00:02:03.869
不需要介绍，所有这些

00:02:01.799 --> 00:02:08.550
技术位于富人之上

00:02:03.869 --> 00:02:10.259
丰富的ABI API和库

00:02:08.550 --> 00:02:12.569
春天提供包括支持

00:02:10.259 --> 00:02:17.010
集成批处理数据

00:02:12.569 --> 00:02:19.140
 Web应用程序反应性或其他

00:02:17.010 --> 00:02:22.590
当然，所有实习生都在

00:02:19.140 --> 00:02:24.450
通用数据支持的顶部

00:02:22.590 --> 00:02:28.470
续集新续集不仅续集和

00:02:24.450 --> 00:02:31.049
续集日期数据存储，然后全部

00:02:28.470 --> 00:02:34.200
进一步位于诸如

00:02:31.049 --> 00:02:37.140
核心框架，您知道它可以

00:02:34.200 --> 00:02:39.750
与春天一样的普通事物一起工作

00:02:37.140 --> 00:02:41.489
安全性，让您知道何时看到

00:02:39.750 --> 00:02:44.879
关键在那里我们仍然是我们

00:02:41.489 --> 00:02:46.079
仍然是同一支球队，我们只是

00:02:44.879 --> 00:02:48.030
我们在网上有了一个新家

00:02:46.079 --> 00:02:49.560
实际上我们现在正处于春天

00:02:48.030 --> 00:02:51.299
 I / O，所以如果您更好地去SpringSource 

00:02:49.560 --> 00:02:53.340
 org，您将被重定向到spring那

00:02:51.299 --> 00:02:55.670
在这里，您会发现很多很棒的东西

00:02:53.340 --> 00:02:59.849
入门指南

00:02:55.670 --> 00:03:02.190
 10至15分钟即可完成

00:02:59.849 --> 00:03:04.200
知道他完成了吗？ 

00:03:02.190 --> 00:03:05.879
指南，您可以看到

00:03:04.200 --> 00:03:11.959
完成某项任务所需的方式

00:03:05.879 --> 00:03:11.959
所以如果你想的话让我们看看

00:03:16.730 --> 00:03:22.169
当然，拥有一个

00:03:19.680 --> 00:03:23.220
浏览器，以便您可以在这里看到

00:03:22.169 --> 00:03:25.560
可以访问指南

00:03:23.220 --> 00:03:28.980
博客项目等此应用程序

00:03:25.560 --> 00:03:31.440
它本身就是运行的spring应用程序

00:03:28.980 --> 00:03:33.569
在Cloud Foundry之上

00:03:31.440 --> 00:03:38.480
本身是开源的

00:03:33.569 --> 00:03:41.609
以后再期待一点

00:03:38.480 --> 00:03:44.549
你知道春天就在附近

00:03:41.609 --> 00:03:45.569
我相信我们在

00:03:44.549 --> 00:03:47.970
说这是本月十二号

00:03:45.569 --> 00:03:49.430
实际上我们有可用的，所以您

00:03:47.970 --> 00:03:53.910
可以期待很快看到

00:03:49.430 --> 00:03:56.760
一生的春天

00:03:53.910 --> 00:03:59.930
一直是一个框架

00:03:56.760 --> 00:04:03.239
 JVM不仅是Java语言

00:03:59.930 --> 00:04:05.310
具体框架及其含义

00:04:03.239 --> 00:04:07.620
实际上是我们有很好的支持

00:04:05.310 --> 00:04:11.340
适用于不同版本的Java 

00:04:07.620 --> 00:04:13.440
当然，您知道替代支持

00:04:11.340 --> 00:04:16.410
适当的人认为你

00:04:13.440 --> 00:04:18.449
需要使用xml来配置bean和

00:04:16.410 --> 00:04:19.919
春天，这不是那么输入

00:04:18.449 --> 00:04:22.049
事实上，您需要将其用于

00:04:19.919 --> 00:04:24.330
很长一段时间你可以完全做事

00:04:22.049 --> 00:04:25.770
在Java内部，也可以使用groovy或

00:04:24.330 --> 00:04:28.740
斯卡拉或你有什么

00:04:25.770 --> 00:04:30.360
春天不在乎你在哪里我

00:04:28.740 --> 00:04:30.660
获得有关哪个的信息

00:04:30.360 --> 00:04:32.310
云

00:04:30.660 --> 00:04:33.930
您有应用程序吗？ 

00:04:32.310 --> 00:04:37.200
他们需要连接在一起等等

00:04:33.930 --> 00:04:38.820
只要您提供正确，我们

00:04:37.200 --> 00:04:42.440
提供了不同的API使用来帮助您

00:04:38.820 --> 00:04:44.490
你能解释春天的东西吗

00:04:42.440 --> 00:04:47.040
因此，例如，如果您使用的是

00:04:44.490 --> 00:04:48.300
春季学者项目再次呼吁

00:04:47.040 --> 00:04:50.070
在内部使用的好语言

00:04:48.300 --> 00:04:51.990
 IntelliJ所以没有理由你

00:04:50.070 --> 00:04:53.550
他们不能使用春季Scala 

00:04:51.990 --> 00:04:56.520
项目，那么您可以使用

00:04:53.550 --> 00:04:58.410
功能配置API在这里你

00:04:56.520 --> 00:05:01.260
可以看到我们正在定义不同的方法

00:04:58.410 --> 00:05:03.210
利用DSL的优势

00:05:01.260 --> 00:05:06.000
学者的动态特征

00:05:03.210 --> 00:05:07.530
语言，我们也可以使用Groovy Beam 

00:05:06.000 --> 00:05:09.360
建设者，这当然是

00:05:07.530 --> 00:05:11.550
在里面很长一段时间

00:05:09.360 --> 00:05:14.940
谷物突出并在弹簧内部

00:05:11.550 --> 00:05:18.630
对于它将看到它合并到核心GUI 

00:05:14.940 --> 00:05:20.910
 Bean Builder当然会再次使用

00:05:18.630 --> 00:05:22.800
 GUI语言提供的DSL 

00:05:20.910 --> 00:05:25.980
这是另一项非常有效的技术

00:05:22.800 --> 00:05:28.740
很好地在IntelliJ内部

00:05:25.980 --> 00:05:30.120
 Java具有配置，因此

00:05:28.740 --> 00:05:32.490
自从我们出现风格以来

00:05:30.120 --> 00:05:35.040
引入了春季Java配置

00:05:32.490 --> 00:05:37.710
 2000年的项目，它是4还是5 

00:05:35.040 --> 00:05:41.280
然后将支持合并到

00:05:37.710 --> 00:05:43.140
 2009年的核心，所以在这里我们有一个

00:05:41.280 --> 00:05:47.180
具有重新配置的类

00:05:43.140 --> 00:05:49.410
注释，每个bean是

00:05:47.180 --> 00:05:51.690
基本上每个引脚的描述

00:05:49.410 --> 00:05:53.610
光束法等于

00:05:51.690 --> 00:05:55.470
 XML中的bean标签

00:05:53.610 --> 00:06:00.240
返回值变为类的返回值

00:05:55.470 --> 00:06:02.580
当然，任何豆子的想法都可以

00:06:00.240 --> 00:06:05.610
在bean注释或

00:06:02.580 --> 00:06:08.880
方法名称本身可以用来

00:06:05.610 --> 00:06:09.990
派生一个bean ID，是的，有很多

00:06:08.880 --> 00:06:13.320
不同的方式来配置您的

00:06:09.990 --> 00:06:14.640
应用，当然还有东西

00:06:13.320 --> 00:06:17.010
就像 spring boot ，我们来看看

00:06:14.640 --> 00:06:19.169
有时候，通常

00:06:17.010 --> 00:06:23.010
甚至不需要做这种事情

00:06:19.169 --> 00:06:24.630
所有um Java 8的配置

00:06:23.010 --> 00:06:27.510
当然非常非常有趣

00:06:24.630 --> 00:06:29.010
摇摆应用的目的地

00:06:27.510 --> 00:06:31.860
我有很多很棒的功能

00:06:29.010 --> 00:06:33.419
真的很高兴终于看到

00:06:31.860 --> 00:06:35.640
平台，因为我敢肯定你们大多数人

00:06:33.419 --> 00:06:38.070
当然，这些功能之一是

00:06:35.640 --> 00:06:39.510
你知道的lambdas，这是东西

00:06:38.070 --> 00:06:42.120
我认为我们很多人

00:06:39.510 --> 00:06:43.940
社区一直在等待

00:06:42.120 --> 00:06:48.020
有点尴尬

00:06:43.940 --> 00:06:50.960
 C ++ commedia语言是领导机构

00:06:48.020 --> 00:06:54.080
肉，但每年一次或两次

00:06:50.960 --> 00:06:56.300
有时甚至他们已经有了lambda 

00:06:54.080 --> 00:06:58.480
而且我们不这样做，我认为那将是非常

00:06:56.300 --> 00:07:01.820
最终获得此支持非常好

00:06:58.480 --> 00:07:03.500
最后我听到了支持，让我们做一些

00:07:01.820 --> 00:07:05.240
你知道明年第一季度

00:07:03.500 --> 00:07:07.730
可能会有点滑但我这样

00:07:05.240 --> 00:07:10.340
迫在眉睫，我很兴奋

00:07:07.730 --> 00:07:12.440
当然IntelliJ也有很棒的

00:07:10.340 --> 00:07:14.750
对Java 8的支持超过一年

00:07:12.440 --> 00:07:17.090
这是你在那里的另一个原因

00:07:14.750 --> 00:07:20.450
没有理由害怕开始

00:07:17.090 --> 00:07:22.310
这东西现在是我真正的一件事

00:07:20.450 --> 00:07:24.440
你知道林的确与

00:07:22.310 --> 00:07:27.140
我喜欢的另一个功能是

00:07:24.440 --> 00:07:30.320
该方法在这里引用了语法

00:07:27.140 --> 00:07:33.740
我有一个典型的JDBC模板示例

00:07:30.320 --> 00:07:34.910
发出查询，而我通过

00:07:33.740 --> 00:07:37.580
知道第二个论点有一个

00:07:34.910 --> 00:07:39.440
 Springs行映射器行的实例

00:07:37.580 --> 00:07:41.840
映射器是只有一个接口

00:07:39.440 --> 00:07:43.840
方法，称为功能

00:07:41.840 --> 00:07:46.370
 Java 8和

00:07:43.840 --> 00:07:48.919
函数式接口可以替代

00:07:46.370 --> 00:07:50.360
对于提供

00:07:48.919 --> 00:07:52.250
相同方法的相同返回值

00:07:50.360 --> 00:07:53.570
论点无关紧要

00:07:52.250 --> 00:07:56.090
方法本身的名称当然是

00:07:53.570 --> 00:07:57.980
所以这里而不是行图或

00:07:56.090 --> 00:08:00.740
我可以返回一个匿名类

00:07:57.980 --> 00:08:03.290
只能提供一个参考

00:08:00.740 --> 00:08:05.150
地图方法，这很方便

00:08:03.290 --> 00:08:06.470
知道做到这一点很棒

00:08:05.150 --> 00:08:08.870
更加简明扼要

00:08:06.470 --> 00:08:12.620
清洁剂，您可以使用内联Lambda或

00:08:08.870 --> 00:08:14.360
没有那种匿名的兰迪斯

00:08:12.620 --> 00:08:16.669
不仅非常简洁的好处

00:08:14.360 --> 00:08:19.280
但是这是我第一次

00:08:16.669 --> 00:08:21.650
我们有推文的历史企业

00:08:19.280 --> 00:08:24.290
 Java代码非常好

00:08:21.650 --> 00:08:27.230
东西，所以在这里我实际上正在使用

00:08:24.290 --> 00:08:28.850
相同的jpz模板，但是非常使用

00:08:27.230 --> 00:08:32.030
创建一个非常简洁的符号

00:08:28.850 --> 00:08:34.099
功能参考，你知道相同的想法

00:08:32.030 --> 00:08:35.539
对于基本上创建一个

00:08:34.099 --> 00:08:37.610
您在运行时知道的界面

00:08:35.539 --> 00:08:41.270
并编码它看起来要多得多

00:08:37.610 --> 00:08:43.219
简洁的其他功能，例如J 

00:08:41.270 --> 00:08:45.620
最左端的J是3/10支持

00:08:43.219 --> 00:08:49.460
基本上是史蒂文·科尔本（Steven Colburn）和

00:08:45.620 --> 00:08:51.500
 joda-time API现在是JDK 8和

00:08:49.460 --> 00:08:52.700
当然，这种支持就是这种支持

00:08:51.500 --> 00:08:54.670
一直传播到

00:08:52.700 --> 00:08:56.900
春天，所以你实际上可以使用春天

00:08:54.670 --> 00:08:57.440
绑定和验证支持在任何地方

00:08:56.900 --> 00:09:01.300
探测

00:08:57.440 --> 00:09:04.190
与j7 3 10其他不错的功能，如

00:09:01.300 --> 00:09:06.620
狗和里面的可重复注释

00:09:04.190 --> 00:09:11.509
 H也支撑在弹簧内部

00:09:06.620 --> 00:09:14.050
当然是适当的

00:09:11.509 --> 00:09:16.839
春季4的讨论将是

00:09:14.050 --> 00:09:19.879
不谈不完的

00:09:16.839 --> 00:09:23.360
持续不断地改善休息

00:09:19.879 --> 00:09:24.649
支持尼斯这不是很大

00:09:23.360 --> 00:09:26.990
功能，但非常方便

00:09:24.649 --> 00:09:29.480
小事情是这个tres控制器

00:09:26.990 --> 00:09:32.930
注释是应用程序的语法糖

00:09:29.480 --> 00:09:35.269
控制器，然后让您下车

00:09:32.930 --> 00:09:36.889
您认识的每个人的回应主体

00:09:35.269 --> 00:09:38.990
方法，虽然这不会做任何事情

00:09:36.889 --> 00:09:41.509
您以前在技术上无法做到

00:09:38.990 --> 00:09:45.800
春天的版本很多年了

00:09:41.509 --> 00:09:47.660
确实减少了符号的种类

00:09:45.800 --> 00:09:49.250
相当多的复杂性只是因为你

00:09:47.660 --> 00:09:52.040
获得删除方法的注释

00:09:49.250 --> 00:09:53.810
所以这很好，一件事

00:09:52.040 --> 00:09:56.120
我你知道很多人在找

00:09:53.810 --> 00:09:58.279
前进到春天的里面

00:09:56.120 --> 00:09:59.930
当然我们的W​​ebSocket支持如此

00:09:58.279 --> 00:10:04.060
当然支持杰斯的春天是

00:09:59.930 --> 00:10:06.680
三五六，但我们也有

00:10:04.060 --> 00:10:09.829
改进了支持以支持几个

00:10:06.680 --> 00:10:13.250
 jsr本身不使用的用例

00:10:09.829 --> 00:10:15.709
首先见面网络插座

00:10:13.250 --> 00:10:17.630
虽然不错，但并非普遍可用

00:10:15.709 --> 00:10:21.860
在浏览器中，所以我们需要某种

00:10:17.630 --> 00:10:25.660
后备选项再次是我不会

00:10:21.860 --> 00:10:29.029
想命名名字或食指，但是

00:10:25.660 --> 00:10:32.660
一些浏览器可能有点

00:10:29.029 --> 00:10:35.300
实施起来很慢，或者你知道他们

00:10:32.660 --> 00:10:37.910
他们英勇地执行了

00:10:35.300 --> 00:10:41.000
直到说出他们没有的第十版

00:10:37.910 --> 00:10:43.220
完全支持它，我不会

00:10:41.000 --> 00:10:44.569
名字，但我想你我怀疑你

00:10:43.220 --> 00:10:48.709
伙计们可能会猜出哪个浏览器

00:10:44.569 --> 00:10:50.059
这样您就知道要回退

00:10:48.709 --> 00:10:51.759
哦，这很重要

00:10:50.059 --> 00:10:56.899
构建现代Web应用程序的一部分

00:10:51.759 --> 00:11:00.259
然后另外

00:10:56.899 --> 00:11:03.139
天是一个它是两个Web套接字什么

00:11:00.259 --> 00:11:04.910
 servlet是它起作用的两个HTTP端点

00:11:03.139 --> 00:11:06.079
但基本上，如果您想做任何事情

00:11:04.910 --> 00:11:08.509
路由最终导致您进入渠道

00:11:06.079 --> 00:11:10.800
一切都通过中央处理程序

00:11:08.509 --> 00:11:13.530
然后做一个if-then-else检查

00:11:10.800 --> 00:11:16.710
因此根据目的地进行地图评分

00:11:13.530 --> 00:11:18.060
您的消息不自然

00:11:16.710 --> 00:11:19.950
情况是因为您最终集中到

00:11:18.060 --> 00:11:23.030
您需要的这个警告信号处理程序

00:11:19.950 --> 00:11:25.710
毕竟可以使用某种控制器

00:11:23.030 --> 00:11:27.810
所以我们都解决了这两个问题

00:11:25.710 --> 00:11:29.790
在我们的支持下，我们实际上已经

00:11:27.810 --> 00:11:32.280
支持SATA jeaious，这是一个

00:11:29.790 --> 00:11:33.720
 WebSocket协议的超集，因此您

00:11:32.280 --> 00:11:37.050
可以将其与库存一起使用

00:11:33.720 --> 00:11:39.810
客户并得到优雅的降级

00:11:37.050 --> 00:11:41.340
你知道双向通道

00:11:39.810 --> 00:11:43.010
即使跨不同的浏览器

00:11:41.340 --> 00:11:45.450
本机不支持WebSockets 

00:11:43.010 --> 00:11:48.990
当然，弹簧4支持

00:11:45.450 --> 00:11:51.360
踏板协议

00:11:48.990 --> 00:11:53.730
 htb框架，我们支持它

00:11:51.360 --> 00:11:55.170
 WebSockets这是您可以使用的东西

00:11:53.730 --> 00:11:57.630
你也可以像

00:11:55.170 --> 00:11:59.520
 RabbitMQ或ActiveMQ，因此您无需

00:11:57.630 --> 00:12:01.920
你知道你可以用简单的小溪

00:11:59.520 --> 00:12:03.450
因为你在春天里面建立了

00:12:01.920 --> 00:12:05.070
 MVC或您可以使用一种插入

00:12:03.450 --> 00:12:06.600
像兔子一样的东西

00:12:05.070 --> 00:12:08.910
和一些经纪人，这给你一个

00:12:06.600 --> 00:12:10.710
通讯协议，通过这种方式，您

00:12:08.910 --> 00:12:13.500
可以利用消息传递的配偶

00:12:10.710 --> 00:12:16.920
滑稽动作没有很活跃的网络

00:12:13.500 --> 00:12:19.580
应用程序是一个示例

00:12:16.920 --> 00:12:23.640
控制器内部的端点

00:12:19.580 --> 00:12:26.610
将收到一条消息，然后您知道

00:12:23.640 --> 00:12:30.090
处理它，并把它负担给领导和

00:12:26.610 --> 00:12:33.570
您所知道的主题是

00:12:30.090 --> 00:12:35.610
它发送给动漫的消息

00:12:33.570 --> 00:12:37.080
缺少关于此类问候的话题，所以

00:12:35.610 --> 00:12:38.670
它必须只是进来，为此

00:12:37.080 --> 00:12:41.370
从客户创建，他们得到

00:12:38.670 --> 00:12:43.050
路由到主题进行斜线问候

00:12:41.370 --> 00:12:45.840
还有另一个还有另一个

00:12:43.050 --> 00:12:47.730
重要类型称为订阅事件

00:12:45.840 --> 00:12:50.940
在行动订阅事件，这给

00:12:47.730 --> 00:12:53.070
您有机会将MedCity发送回

00:12:50.940 --> 00:12:55.500
没有路由的客户端

00:12:53.070 --> 00:12:57.150
通过经纪人，所以让我们

00:12:55.500 --> 00:12:59.730
甚至处理以下订阅事件

00:12:57.150 --> 00:13:00.720
首先，这是很自然的你

00:12:59.730 --> 00:13:02.610
知道建筑的组件模型

00:13:00.720 --> 00:13:04.560
在这种情况下的应用程序路由

00:13:02.610 --> 00:13:07.110
当然是根据目的地

00:13:04.560 --> 00:13:09.090
消息的标题，所以在蝙蝠

00:13:07.110 --> 00:13:11.490
消息映射为此问候

00:13:09.090 --> 00:13:15.560
会感觉很像at 

00:13:11.490 --> 00:13:18.050
请求映射，这是一种Spring MVC 

00:13:15.560 --> 00:13:20.640
确认这样的继续

00:13:18.050 --> 00:13:22.310
 WebSocket支持当然是相当

00:13:20.640 --> 00:13:24.270
简单明了，这是一个例子

00:13:22.310 --> 00:13:26.310
配置类，我们

00:13:24.270 --> 00:13:28.920
打开它会很简单

00:13:26.310 --> 00:13:31.230
 WebSocket消息代理支持在这里

00:13:28.920 --> 00:13:35.340
打开它，因为你知道一个投资组合

00:13:31.230 --> 00:13:37.920
项目，除此之外，您还知道

00:13:35.340 --> 00:13:39.210
当然有很多很棒的功能的答案

00:13:37.920 --> 00:13:42.420
我也想给你

00:13:39.210 --> 00:13:45.270
 Java的种种招式

00:13:42.420 --> 00:13:48.570
 EE 7在一个

00:13:45.270 --> 00:13:50.520
春天已经到了新的白天，我们已经

00:13:48.570 --> 00:13:53.400
看了白天的API，但是

00:13:50.520 --> 00:13:56.060
除了bean的验证和

00:13:53.400 --> 00:13:58.860
并发API是新的servlet， 

00:13:56.060 --> 00:14:01.920
支持Sheamus和JTA剪切

00:13:58.860 --> 00:14:04.440
正如我刚刚描述的，JCR 356很好

00:14:01.920 --> 00:14:06.540
支持甚至批量追逐R 

00:14:04.440 --> 00:14:08.970
实际上我们有帮助

00:14:06.540 --> 00:14:11.100
我当然喜欢手工

00:14:08.970 --> 00:14:13.350
所以您知道我们很高兴

00:14:11.100 --> 00:14:16.080
支持Java，有很多的爱

00:14:13.350 --> 00:14:17.550
在那里，我希望你们会知道

00:14:16.080 --> 00:14:22.370
查看发布的照片

00:14:17.550 --> 00:14:32.460
被提供，所以是的

00:14:22.370 --> 00:14:37.530
你想恢复乔希吗

00:14:32.460 --> 00:14:39.840
只是为了这个喧闹的介绍

00:14:37.530 --> 00:14:52.580
问题在那里，还是我们只是

00:14:39.840 --> 00:14:55.950
现在继续，好吧，我的屏幕好吧，所以

00:14:52.580 --> 00:14:59.490
我叫润成我是

00:14:55.950 --> 00:15:04.740
 IntelliJ IDEA团队的Spring开发人员

00:14:59.490 --> 00:15:09.390
而今天，我们将专注于

00:15:04.740 --> 00:15:12.060
我很快也想要IntelliJ 13的新功能

00:15:09.390 --> 00:15:14.460
说说一些基本概念

00:15:12.060 --> 00:15:17.220
每个人也许不是很

00:15:14.460 --> 00:15:20.160
熟悉南方支持和IntelliJ 

00:15:17.220 --> 00:15:20.670
作品可以了解我们在做什么

00:15:20.160 --> 00:15:26.870
这里

00:15:20.670 --> 00:15:29.670
所以在IntelliJ中，我们有一些模块

00:15:26.870 --> 00:15:33.330
结合某些相关功能

00:15:29.670 --> 00:15:35.220
和模块可以有多个方面，我们有

00:15:33.330 --> 00:15:38.880
这里的弹簧面需要

00:15:35.220 --> 00:15:41.760
添加到一个模块，他们有

00:15:38.880 --> 00:15:45.300
构面的概念或多或少

00:15:41.760 --> 00:15:47.730
类似于应用程序联系人，因此您可以

00:15:45.300 --> 00:15:50.300
实际重塑您的应用程序

00:15:47.730 --> 00:15:54.230
上下文或多个应用程序联系人

00:15:50.300 --> 00:15:58.080
当您配置他们一个新的应用程序

00:15:54.230 --> 00:16:00.240
在这个春季，IntelliJ IDEA 

00:15:58.080 --> 00:16:02.880
会了解如何建立关系

00:16:00.240 --> 00:16:06.420
在配置文件或Java之间

00:16:02.880 --> 00:16:08.970
配置可以使我们或

00:16:06.420 --> 00:16:13.550
解析和导航以及所有这些

00:16:08.970 --> 00:16:13.550
 IDE功能按预期工作

00:16:14.960 --> 00:16:20.820
很好，可以非常快速地进行介绍

00:16:18.480 --> 00:16:23.190
进入春天，因为这非常重要

00:16:20.820 --> 00:16:26.880
正确，我们将回到这一点

00:16:23.190 --> 00:16:34.790
稍后发布，当我们展示一些新东西时

00:16:26.880 --> 00:16:37.050
在这方面，正如刚才所说

00:16:34.790 --> 00:16:41.250
所有人的春天都非常紧张

00:16:37.050 --> 00:16:45.760
与Java EE 7集成

00:16:41.250 --> 00:16:48.520
 IntelliJ 13中有一个很大的区域

00:16:45.760 --> 00:16:50.770
并增强很多，所以我们已经支持

00:16:48.520 --> 00:16:54.730
从直到的所有新规格

00:16:50.770 --> 00:16:58.540
从Java EE 7开始，我们还支持

00:16:54.730 --> 00:17:01.300
例如新的批次规范

00:16:58.540 --> 00:17:05.410
所以一切都已经可以尝试了

00:17:01.300 --> 00:17:09.430
如果你想的话出去

00:17:05.410 --> 00:17:13.660
我准备了一个小假项目

00:17:09.430 --> 00:17:17.140
在某些方面非常简单，但是

00:17:13.660 --> 00:17:20.020
我认为这是展示新事物的好方法

00:17:17.140 --> 00:17:23.620
功能而不会引入太多

00:17:20.020 --> 00:17:27.579
代码，所以我想谈的第一个问题

00:17:23.620 --> 00:17:31.180
今天是作为文档，所以

00:17:27.579 --> 00:17:34.410
你们都知道

00:17:31.180 --> 00:17:37.060
调用代码快速文档

00:17:34.410 --> 00:17:40.350
现在是一项功能，也可以使用

00:17:37.060 --> 00:17:43.090
在春豆上，所以如果我的光标现在

00:17:40.350 --> 00:17:46.240
位于像这样的Spring bean参考上

00:17:43.090 --> 00:17:49.360
现在可以使用快捷方式

00:17:46.240 --> 00:17:52.540
显示快速文档，它将

00:17:49.360 --> 00:17:57.820
给我看看弹簧的类型

00:17:52.540 --> 00:18:00.100
梁和位置，如果

00:17:57.820 --> 00:18:03.490
你的春豆有一些嵌套

00:18:00.100 --> 00:18:06.820
说明标签将包含此标签

00:18:03.490 --> 00:18:09.520
文档，所以我认为这是

00:18:06.820 --> 00:18:12.160
如果您需要快速查看，非常方便

00:18:09.520 --> 00:18:14.550
或想了解更多有关

00:18:12.160 --> 00:18:14.550
它

00:18:15.840 --> 00:18:20.860
与

00:18:18.280 --> 00:18:24.280
新文档或我们刚刚看到的内容

00:18:20.860 --> 00:18:27.030
春天的类型是小的

00:18:24.280 --> 00:18:31.600
只是板和文件

00:18:27.030 --> 00:18:34.240
这种类型现在也更聪明

00:18:31.600 --> 00:18:36.610
关于特殊的存在，所以我们有一个

00:18:34.240 --> 00:18:38.950
中性恒定光束，您将阅读

00:18:36.610 --> 00:18:42.730
两个弹簧常数

00:18:38.950 --> 00:18:47.590
弹簧梁，我们已经扩展到

00:18:42.730 --> 00:18:51.610
大部分（如果不是全部）已知的标准光束

00:18:47.590 --> 00:18:54.640
我们支持的Spring命名空间

00:18:51.610 --> 00:18:58.210
当然也可以检测到

00:18:54.640 --> 00:18:59.580
一个任务计划程序，您还可以

00:18:58.210 --> 00:19:01.230
导航到任何

00:18:59.580 --> 00:19:02.940
 Java类就从这里开始

00:19:01.230 --> 00:19:10.950
如果你想抬头很方便

00:19:02.940 --> 00:19:14.190
很快，另一件事

00:19:10.950 --> 00:19:16.200
与此有关的是

00:19:14.190 --> 00:19:21.450
演示文稿已在

00:19:16.200 --> 00:19:25.440
 IntelliJ 13因此我们没有in图标

00:19:21.450 --> 00:19:28.320
随光束而变化

00:19:25.440 --> 00:19:31.769
键入，所以这里有一个抽象光束

00:19:28.320 --> 00:19:34.759
这个抽象光束有一个小

00:19:31.769 --> 00:19:37.559
图标上的差异，以便您可以

00:19:34.759 --> 00:19:39.600
视觉上很容易辨认

00:19:37.559 --> 00:19:42.859
对于原型豆来说， 

00:19:39.600 --> 00:19:45.869
在图标上有这个小M 

00:19:42.859 --> 00:19:49.799
这些用户界面中的所有位置

00:19:45.869 --> 00:19:57.570
图标将被使用，因此非常容易

00:19:49.799 --> 00:20:00.480
抓住不同种类的别针

00:19:57.570 --> 00:20:04.379
有时您想使用

00:20:00.480 --> 00:20:06.779
施普林格定律的重构，我们

00:20:04.379 --> 00:20:09.509
长期以来要求更多

00:20:06.779 --> 00:20:12.629
重命名豆的智慧

00:20:09.509 --> 00:20:17.570
我现在要重命名此图钉

00:20:12.629 --> 00:20:20.519
在IntelliJ 13中，我们引入了

00:20:17.570 --> 00:20:23.759
重命名豆完成，那么

00:20:20.519 --> 00:20:29.210
将根据以下内容竞争或显示提案

00:20:23.759 --> 00:20:33.629
到豆的类类型，如果我

00:20:29.210 --> 00:20:37.230
选择一个已经使用过的bean ID 

00:20:33.629 --> 00:20:39.749
它也会显示一个错误以及

00:20:37.230 --> 00:20:44.850
豆的对应位置

00:20:39.749 --> 00:20:47.299
因此您不能通过以下方式引入瞄准误差

00:20:44.850 --> 00:20:47.299
事故

00:20:56.779 --> 00:21:05.070
所以我要谈的下一个功能

00:20:59.730 --> 00:21:07.710
是注射，我们有一种语言

00:21:05.070 --> 00:21:08.100
 IntelliJ中长时间注入

00:21:07.710 --> 00:21:11.539
理念

00:21:08.100 --> 00:21:17.190
由全长插件提供

00:21:11.539 --> 00:21:19.919
这允许您将语言注入

00:21:17.190 --> 00:21:23.580
例如字符串或XML属性或

00:21:19.919 --> 00:21:26.299
值，并且已扩展

00:21:23.580 --> 00:21:30.659
通过参考，所以您现在可以

00:21:26.299 --> 00:21:32.640
也可用于春季资源

00:21:30.659 --> 00:21:36.690
参考以及春季平均值

00:21:32.640 --> 00:21:42.690
参考，我有这个小例子

00:21:36.690 --> 00:21:45.470
这是自定义包装上下文

00:21:42.690 --> 00:21:50.370
例如可以位于您自己的位置

00:21:45.470 --> 00:21:55.230
一些女巫代表真实的项目

00:21:50.370 --> 00:21:57.149
它背后的应用程序上下文，让我们

00:21:55.230 --> 00:22:01.190
看看我们可以做些什么

00:21:57.149 --> 00:22:03.600
注射，所以我们在这里

00:22:01.190 --> 00:22:06.870
构建我们的环境，我们

00:22:03.600 --> 00:22:10.590
作为参数传递的位置

00:22:06.870 --> 00:22:13.289
配置文件，我现在可以

00:22:10.590 --> 00:22:17.610
用意图注入语言

00:22:13.289 --> 00:22:20.600
参考，我将注入新的

00:22:17.610 --> 00:22:24.870
参考类型的弹簧资源路径和

00:22:20.600 --> 00:22:27.840
则IntelliJ将了解

00:22:24.870 --> 00:22:29.820
字符串现在是对弹簧的引用

00:22:27.840 --> 00:22:32.760
资源或它了解课程

00:22:29.820 --> 00:22:35.880
通过前缀以及Tiare前缀

00:22:32.760 --> 00:22:39.240
从春季资源中得知

00:22:35.880 --> 00:22:42.000
键入，如果有的话这非常有用

00:22:39.240 --> 00:22:46.049
或者如果您想使用弹簧

00:22:42.000 --> 00:22:46.410
下一个位置的资源类型

00:22:46.049 --> 00:22:51.150
参考

00:22:46.410 --> 00:22:54.090
我们有春天的意思，所以让我们

00:22:51.150 --> 00:22:57.450
说我的阅读环境有一种方法

00:22:54.090 --> 00:23:00.660
通常通过其ID查找光束

00:22:57.450 --> 00:23:02.370
没有自动完成或至少没有

00:23:00.660 --> 00:23:03.059
一个非常有用的或完成的

00:23:02.370 --> 00:23:06.360
语境

00:23:03.059 --> 00:23:12.960
所以我们取消对spring的引用

00:23:06.360 --> 00:23:14.280
这种方法的梁名称，现在您

00:23:12.960 --> 00:23:16.679
将需要您自动完成

00:23:14.280 --> 00:23:20.549
已经从春季搭配中知道了

00:23:16.679 --> 00:23:23.789
芳香文件或Java配置文件以及

00:23:20.549 --> 00:23:26.450
一如既往的导航功能

00:23:23.789 --> 00:23:32.850
以及其他任何可用的东西

00:23:26.450 --> 00:23:34.890
因为春天是参考，所以最后

00:23:32.850 --> 00:23:37.370
我想快速显示注射

00:23:34.890 --> 00:23:40.590
已于13年前推出，但

00:23:37.370 --> 00:23:44.010
也许很多人不知道

00:23:40.590 --> 00:23:47.130
如果您有某种il表达式

00:23:44.010 --> 00:23:52.049
也许春天全部到这里或只是在这里

00:23:47.130 --> 00:23:54.390
您也可以在这里使用它，所以我们将

00:23:52.049 --> 00:23:59.789
只是告诉或解决的方法

00:23:54.390 --> 00:24:06.390
春天是PL表达期待交通

00:23:59.789 --> 00:24:10.799
一个春天的表情，现在你

00:24:06.390 --> 00:24:14.940
看到突出显示已更改，因此

00:24:10.799 --> 00:24:17.700
甚至可以解析所有变量，而您

00:24:14.940 --> 00:24:27.660
具有自动完成功能

00:24:17.700 --> 00:24:33.870
你春天的表情还好

00:24:27.660 --> 00:24:35.820
主题是关于配置的，所以我

00:24:33.870 --> 00:24:38.760
在春季开始时向您展示

00:24:35.820 --> 00:24:41.430
需要配置的方面

00:24:38.760 --> 00:24:45.740
欧洲的春季应用程序上下文

00:24:41.430 --> 00:24:49.560
项目，我们添加的是

00:24:45.740 --> 00:24:54.030
对项目机器人的其他检查

00:24:49.560 --> 00:24:57.320
会指导您设置弹簧

00:24:54.030 --> 00:25:00.210
上下文，以便证明这一点，我只是

00:24:57.320 --> 00:25:08.700
将要关闭该项目并重新打开

00:25:00.210 --> 00:25:11.280
它，我们在这里有此通知

00:25:08.700 --> 00:25:14.040
右上角告诉我们

00:25:11.280 --> 00:25:15.720
那些没有定罪的春天

00:25:14.040 --> 00:25:19.920
在以下位置找到配置文件

00:25:15.720 --> 00:25:24.210
这个项目，所以我们可以实际显示

00:25:19.920 --> 00:25:26.420
他们适合我，而我们

00:25:24.210 --> 00:25:29.340
我设置的课程，以便我们有一些

00:25:26.420 --> 00:25:33.300
您在此项目中的配置不正确

00:25:29.340 --> 00:25:36.480
也可以在其中打开弹簧面

00:25:33.300 --> 00:25:39.630
相应的模块，它也会

00:25:36.480 --> 00:25:41.190
在Spring Facade中重复此错误

00:25:39.630 --> 00:25:49.400
这样您就不会错过任何东西

00:25:41.190 --> 00:25:53.580
模块，当然，如果我编辑

00:25:49.400 --> 00:25:56.460
上下文在这里错误会消失

00:25:53.580 --> 00:26:04.080
因为通常应用程序正确

00:25:56.460 --> 00:26:08.310
配置这里有一个单独的条目

00:26:04.080 --> 00:26:11.280
对于程序化联系人，发现这是

00:26:08.310 --> 00:26:14.700
没有释放的东西

00:26:11.280 --> 00:26:19.020
还在工作，但是我们正在努力

00:26:14.700 --> 00:26:21.870
什么是程序化上下文

00:26:19.020 --> 00:26:24.570
人们使用程序化上下文设置

00:26:21.870 --> 00:26:26.280
对于可能的应用

00:26:24.570 --> 00:26:29.610
独立或命令行应用程序

00:26:26.280 --> 00:26:32.040
例如为了方便订购

00:26:29.610 --> 00:26:34.970
在这里我们实例化一个类解析XML 

00:26:32.040 --> 00:26:39.150
春季和春季的申请合同

00:26:34.970 --> 00:26:42.350
 IntelliJ现在突出显示用法

00:26:39.150 --> 00:26:44.940
这样的程序环境

00:26:42.350 --> 00:26:50.400
只是要结束简化

00:26:44.940 --> 00:26:52.770
现在我可以用这个意图来设定

00:26:50.400 --> 00:27:00.300
在这个流上下文中有问题

00:26:52.770 --> 00:27:03.330
上下文，它将建立上下文

00:27:00.300 --> 00:27:06.240
在Springfest对我有什么作用

00:27:03.330 --> 00:27:08.900
还没有做，那是什么

00:27:06.240 --> 00:27:12.570
丢失了，将重生

00:27:08.900 --> 00:27:16.170
 13.1正在收集所有信息

00:27:12.570 --> 00:27:18.780
关于程序化设置以及所有

00:27:16.170 --> 00:27:21.900
为您配置新的上下文

00:27:18.780 --> 00:27:23.730
春天方面，所以也很容易

00:27:21.900 --> 00:27:27.260
描绘并建立这样的环境

00:27:23.730 --> 00:27:27.260
在您的IDE中正确

00:27:27.860 --> 00:27:34.800
好的，就像我说的只是一个预告片

00:27:31.950 --> 00:27:40.320
程序性上下文注意检测

00:27:34.800 --> 00:27:47.490
来了13.1我没显示

00:27:40.320 --> 00:27:51.600
你是如何压制例如

00:27:47.490 --> 00:27:58.760
葡萄酒，所以让我们删除这个Java 

00:27:51.600 --> 00:27:58.760
再次配置以使其错误并

00:27:58.820 --> 00:28:04.309
立即它也会显示警告

00:28:01.830 --> 00:28:08.520
在编辑器中，因此您还将看到

00:28:04.309 --> 00:28:10.950
配置编辑器配置

00:28:08.520 --> 00:28:14.910
您输入或输入时编辑器中的错误

00:28:10.950 --> 00:28:18.809
你改变你的代码，当然你

00:28:14.910 --> 00:28:22.080
也可以在此处快速修复以设置

00:28:18.809 --> 00:28:24.570
应用程序上下文，您可以选择

00:28:22.080 --> 00:28:26.850
任何现有的应用程序上下文权限

00:28:24.570 --> 00:28:28.710
从这里，它将添加此

00:28:26.850 --> 00:28:31.860
配置文件到现有

00:28:28.710 --> 00:28:33.540
上下文，但您也可以创建一个新的

00:28:31.860 --> 00:28:40.559
您喜欢的应用程序上下文

00:28:33.540 --> 00:28:44.220
当然取决于您的应用程序

00:28:40.559 --> 00:28:46.610
关于配置更改

00:28:44.220 --> 00:28:46.610
和

00:28:48.020 --> 00:28:53.760
是的，这当然是很新的

00:28:51.600 --> 00:28:55.409
还可以检测未配置的Java 

00:28:53.760 --> 00:28:59.669
配置文件代码配置

00:28:55.409 --> 00:29:01.860
我们一直检测到的文件

00:28:59.669 --> 00:29:04.440
突出显示未配置的XML文件

00:29:01.860 --> 00:29:05.850
所以现在您的代码配置

00:29:04.440 --> 00:29:10.740
文件将被检查是否正确

00:29:05.850 --> 00:29:13.919
是的，重点是

00:29:10.740 --> 00:29:16.830
基于注释的配置我的键盘

00:29:13.919 --> 00:29:19.260
再次交给乔希，我们将展示

00:29:16.830 --> 00:29:21.840
一些东西放了一些实时编码

00:29:19.260 --> 00:29:27.169
大量的卫生设施

00:29:21.840 --> 00:29:29.070
冲突是的，所以我想

00:29:27.169 --> 00:29:30.419
向大家展示它的外观

00:29:29.070 --> 00:29:33.210
从创建一个全新的应用程序

00:29:30.419 --> 00:29:34.289
从头开始并完成工作

00:29:33.210 --> 00:29:36.480
尽快

00:29:34.289 --> 00:29:39.360
我在今年春天早些时候提到我

00:29:36.480 --> 00:29:40.740
网站，您可以去那些指南， 

00:29:39.360 --> 00:29:42.360
我提到过，每个都是

00:29:40.740 --> 00:29:45.450
由git仓库支持，您可以

00:29:42.360 --> 00:29:46.980
当然遵循git仓库

00:29:45.450 --> 00:29:49.850
得到不同事物的工作实例

00:29:46.980 --> 00:29:52.250
但是你知道另一个大道

00:29:49.850 --> 00:29:55.049
用 spring boot 拼凑起来

00:29:52.250 --> 00:29:56.669
我提到的春天佛陀的一种

00:29:55.049 --> 00:29:58.500
构建关注的应用程序

00:29:56.669 --> 00:30:00.809
注意您要尝试的

00:29:58.500 --> 00:30:02.580
做和做其他事情

00:30:00.809 --> 00:30:04.950
尽可能的约定

00:30:02.580 --> 00:30:07.950
春天你会知道春天一直

00:30:04.950 --> 00:30:11.280
只要您检查

00:30:07.950 --> 00:30:14.460
盒子脸颊，所以我们在这里检查

00:30:11.280 --> 00:30:16.049
看你的盒子给你

00:30:14.460 --> 00:30:18.270
我们正在查看的应用程序上下文

00:30:16.049 --> 00:30:21.020
上课的路，我们尽可能

00:30:18.270 --> 00:30:23.640
你游泳的东西没有

00:30:21.020 --> 00:30:26.580
原因不去，那些原因可能

00:30:23.640 --> 00:30:27.929
例如，您知道我们的豆子

00:30:26.580 --> 00:30:29.789
不需要提供，因为您已经

00:30:27.929 --> 00:30:31.770
已经自己提供了

00:30:29.789 --> 00:30:34.230
这些例子，我们知道我们的支持

00:30:31.770 --> 00:30:36.480
不会退缩，所有不知道的尝试

00:30:34.230 --> 00:30:38.610
为你做点事，但实际上是你的

00:30:36.480 --> 00:30:40.950
如果您在课程路径上有什么东西

00:30:38.610 --> 00:30:42.630
例如，那么您不必选择

00:30:40.950 --> 00:30:44.340
不必获得支持，那就是

00:30:42.630 --> 00:30:45.630
这是一个很好的关键，总是

00:30:44.340 --> 00:30:47.400
要做的就是将内容添加到您的课程中

00:30:45.630 --> 00:30:50.309
路径，您将获得更多功能，而您

00:30:47.400 --> 00:30:53.190
可以定制它们，但是定制是

00:30:50.309 --> 00:30:55.080
这是最小的入门方法

00:30:53.190 --> 00:30:56.490
 spring boot 就是用这个小

00:30:55.080 --> 00:31:00.000
 Web服务，您可能已经开始

00:30:56.490 --> 00:31:08.639
春天，我哦，我要说的是

00:31:00.000 --> 00:31:10.470
你知道勇气，只是赢得你知道

00:31:08.639 --> 00:31:17.490
演示当然就是

00:31:10.470 --> 00:31:19.200
这就是我们要说的

00:31:17.490 --> 00:31:20.490
我们想要正确的网络支持，所以这

00:31:19.200 --> 00:31:21.779
将带来这将产生一个

00:31:20.490 --> 00:31:23.850
为我们准备的具有所有这些功能的Maven项目

00:31:21.779 --> 00:31:25.830
预包装的网络支持，我们将

00:31:23.850 --> 00:31:26.519
继续选择他们JP支持

00:31:25.830 --> 00:31:31.309
我们将继续前进， 

00:31:26.519 --> 00:31:34.590
像这样生成一个Maven项目

00:31:31.309 --> 00:31:38.929
下载转到取景器

00:31:34.590 --> 00:31:42.450
我当然有我们的应用程序

00:31:38.929 --> 00:31:44.220
你知道像我一样害怕演示神

00:31:42.450 --> 00:31:45.990
我总是有一个备份，但只是

00:31:44.220 --> 00:31:50.220
如果我们要继续运行

00:31:45.990 --> 00:31:51.889
通过这个和自己的住所

00:31:50.220 --> 00:31:54.509
一些有趣的事情，你知道的

00:31:51.889 --> 00:31:58.580
非常非常强大，所以这是

00:31:54.509 --> 00:32:01.350
旧的继续前进并重新开始

00:31:58.580 --> 00:32:03.059
入门，然后我继续打开

00:32:01.350 --> 00:32:05.159
我有一个常规的Maven项目

00:32:03.059 --> 00:32:06.919
继续选择下一个毫升

00:32:05.159 --> 00:32:10.679
我想绝对打开项目

00:32:06.919 --> 00:32:13.289
请打开新窗口，当然这

00:32:10.679 --> 00:32:16.200
使我们进入IntelliJ 

00:32:13.289 --> 00:32:18.120
面对一个相当斯巴达的项目

00:32:16.200 --> 00:32:26.879
你有一个预建的测试

00:32:18.120 --> 00:32:29.659
基本没有什么和代码

00:32:26.879 --> 00:32:29.659
到底是怎么回事

00:32:32.140 --> 00:32:47.280
我在这里激怒了我

00:32:43.660 --> 00:32:49.530
猜猜大火是10％ 

00:32:47.280 --> 00:32:57.690
抱歉

00:32:49.530 --> 00:33:02.679
火在这里被打破哦，是的，我的错， 

00:32:57.690 --> 00:33:07.630
所以我不需要维修任何

00:33:02.679 --> 00:33:09.490
水很重要，绝对是，所以很好

00:33:07.630 --> 00:33:13.000
上课不要放“＆”号

00:33:09.490 --> 00:33:13.750
您生成的输出感谢您

00:33:13.000 --> 00:33:15.850
接得好

00:33:13.750 --> 00:33:17.020
好吧，我们有一个非常斯巴达的目录

00:33:15.850 --> 00:33:21.070
我们有一个公共静态结构

00:33:17.020 --> 00:33:22.630
主要你在一堂课里面知道的

00:33:21.070 --> 00:33:25.540
 at表自动配置

00:33:22.630 --> 00:33:27.280
这是把靴子提示告诉它要做的

00:33:25.540 --> 00:33:29.490
代表我们为我们做的一切

00:33:27.280 --> 00:33:32.020
根据惯例，记得我们已经

00:33:29.490 --> 00:33:34.780
选择启动 spring boot 

00:33:32.020 --> 00:33:37.210
网络，我们想要执行器和1jp 

00:33:34.780 --> 00:33:40.299
支持和测试支持，但

00:33:37.210 --> 00:33:42.370
现在更多，这会得到什么

00:33:40.299 --> 00:33:44.559
你就是你要去的所有图书馆

00:33:42.370 --> 00:33:45.730
可能需要做Web应用程序和

00:33:44.559 --> 00:33:49.059
所有的图书馆都会像

00:33:45.730 --> 00:33:51.760
需要做JPA数据库应用程序

00:33:49.059 --> 00:33:53.260
这是一个自以为是的事，你知道我们

00:33:51.760 --> 00:33:55.840
会竭尽所能

00:33:53.260 --> 00:33:57.040
在盒子里，让我们继续吧

00:33:55.840 --> 00:33:59.080
并构建一个简单的应用程序

00:33:57.040 --> 00:34:00.160
我们将开始使用默认值

00:33:59.080 --> 00:34:01.780
公共静态无效的方法

00:34:00.160 --> 00:34:03.160
主要我们实际上要建立一个网站

00:34:01.780 --> 00:34:04.570
申请，但您仍然可以离开

00:34:03.160 --> 00:34:07.179
这样，或者我们可以将其转换为

00:34:04.570 --> 00:34:10.510
战争，我们会这样做一点

00:34:07.179 --> 00:34:13.419
让我们想象一个虚拟的

00:34:10.510 --> 00:34:15.070
预订数据库的种类

00:34:13.419 --> 00:34:16.750
你知道我不想去的餐厅

00:34:15.070 --> 00:34:18.310
对领域模型太过深入，但我们会

00:34:16.750 --> 00:34:20.950
就用它来工作

00:34:18.310 --> 00:34:23.260
预订还可以，所以首先我们需要一个

00:34:20.950 --> 00:34:26.220
预订实体继续创建

00:34:23.260 --> 00:34:28.990
我们可能需要一个

00:34:26.220 --> 00:34:30.340
配置类正确，所以我们将

00:34:28.990 --> 00:34:33.340
为我们创建一个配置类

00:34:30.340 --> 00:34:34.899
应用程序将回来

00:34:33.340 --> 00:34:37.960
数据库，所以我们将创建一个数据库

00:34:34.899 --> 00:34:41.770
存放预订资料库

00:34:37.960 --> 00:34:43.090
否则我们需要控制器吗？ 

00:34:41.770 --> 00:34:45.970
想要一个宁静的服务来解决这个问题

00:34:43.090 --> 00:34:48.760
所以预定 rest controller 

00:34:45.970 --> 00:34:51.339
然后拥有一个网络会很好

00:34:48.760 --> 00:34:55.419
页面，所以我们继续进行构建

00:34:51.339 --> 00:34:57.310
一个MVC控制器，让我们现在看看

00:34:55.419 --> 00:34:58.650
所以这将成为JPA实体JP 

00:34:57.310 --> 00:35:03.250
应用程序，所以我要继续

00:34:58.650 --> 00:35:05.170
在此处导入JP批注，我们将

00:35:03.250 --> 00:35:06.849
只需使用它，您就会知道IntelliJ 

00:35:05.170 --> 00:35:18.880
通过这种冻结

00:35:06.849 --> 00:35:21.010
可能的话当然可以了

00:35:18.880 --> 00:35:22.180
然后我们要继续前进

00:35:21.010 --> 00:35:25.270
并生成配件和

00:35:22.180 --> 00:35:28.300
变种人控制或命令所有能力

00:35:25.270 --> 00:35:31.240
获取代码格式这当然是

00:35:28.300 --> 00:35:33.750
一个主键，他们已经产生了新的

00:35:31.240 --> 00:35:37.450
值，所以就这样

00:35:33.750 --> 00:35:43.300
然后这当然是一个习惯

00:35:37.450 --> 00:35:47.470
列，所以我将其保留为该名称

00:35:43.300 --> 00:35:48.609
谢谢您的确认，这是一个休息

00:35:47.470 --> 00:35:50.200
控制器，就像我之前提到的

00:35:48.609 --> 00:35:52.800
我们将使用弹簧地板

00:35:50.200 --> 00:35:55.599
所以我们在那里有一个方便的注释

00:35:52.800 --> 00:35:57.040
我们希望能够加载所有

00:35:55.599 --> 00:35:58.990
每当有人去预订

00:35:57.040 --> 00:36:02.380
宁静的端点，因此我们将创建一个

00:35:58.990 --> 00:36:12.400
提供以下方面的集合的端点

00:36:02.380 --> 00:36:14.410
这样的预订，现在我们

00:36:12.400 --> 00:36:15.730
没有办法满足

00:36:14.410 --> 00:36:19.720
要求，所以我们只是导入否

00:36:15.730 --> 00:36:21.700
为宁静添加控制器

00:36:19.720 --> 00:36:23.290
您知道这是一个HTML页面，并且

00:36:21.700 --> 00:36:24.310
那么我们需要存储，所以在这里我们

00:36:23.290 --> 00:36:26.890
实际带一个被称为

00:36:24.310 --> 00:36:29.380
数据带来的春季

00:36:26.890 --> 00:36:31.720
进行您认识的发现者的能力

00:36:29.380 --> 00:36:34.720
约定并销毁示例说

00:36:31.720 --> 00:36:36.880
扩展JP我要去的存储库

00:36:34.720 --> 00:36:39.579
继续说我们要去JP a 

00:36:36.880 --> 00:36:43.210
类型预订实体的存储库

00:36:39.579 --> 00:36:44.380
 ID类型为long的我可以

00:36:43.210 --> 00:36:50.430
我实际上可以在这里创建的任何东西

00:36:44.380 --> 00:36:55.140
就像按名称查找对象的列表

00:36:50.430 --> 00:36:58.089
字符串名称，我可以说你知道这是我的

00:36:55.140 --> 00:36:59.830
查询会知道

00:36:58.089 --> 00:37:02.560
将由惯例产生

00:36:59.830 --> 00:37:05.230
看这个叫spring的方法

00:37:02.560 --> 00:37:07.720
数据会说哦，你想查询

00:37:05.230 --> 00:37:09.370
通过名称和名称查找预订

00:37:07.720 --> 00:37:11.920
当然会在幕后

00:37:09.370 --> 00:37:14.370
过渡到你知道的东西

00:37:11.920 --> 00:37:14.370
好的

00:37:15.160 --> 00:37:21.460
等等，这很方便，我们不

00:37:20.320 --> 00:37:22.690
不必为此担心太多

00:37:21.460 --> 00:37:25.330
然后当然要配置所有这些

00:37:22.690 --> 00:37:26.860
您需要知道我们需要以

00:37:25.330 --> 00:37:28.780
屏幕启动具有的一些功能

00:37:26.860 --> 00:37:32.440
音频为我们开启，所以先看一下

00:37:28.780 --> 00:37:37.630
现在在一个空的配置类中

00:37:32.440 --> 00:37:40.360
当我开启交易时，我们

00:37:37.630 --> 00:37:42.460
即将开启Spring Data Web支持

00:37:40.360 --> 00:37:44.920
然后那实际上更好

00:37:42.460 --> 00:37:46.480
有任何可配置的bean 

00:37:44.920 --> 00:37:48.520
这个应用程序是因为spring boot 

00:37:46.480 --> 00:37:50.700
会为我们做很多事情

00:37:48.520 --> 00:37:54.040
向前并在这里勾勒出碎片

00:37:50.700 --> 00:37:56.440
这将是一个控制器

00:37:54.040 --> 00:37:58.180
宁静的控制器，用于我们的预订和

00:37:56.440 --> 00:38:01.840
为了使它起作用，我们要

00:37:58.180 --> 00:38:06.490
在这种情况下，注入或自动导线

00:38:01.840 --> 00:38:08.500
参考我们的预订资料库

00:38:06.490 --> 00:38:16.210
我说这死在那

00:38:08.500 --> 00:38:20.590
仓库找到所有的wallah，然后是什么

00:38:16.210 --> 00:38:22.900
否则我们需要测试我认为

00:38:20.590 --> 00:38:25.510
应该是一个好的开始，但我们可能

00:38:22.900 --> 00:38:26.920
需要一些东西来实际插入数据

00:38:25.510 --> 00:38:29.410
为了我们，我们会再去的

00:38:26.920 --> 00:38:31.030
依靠 spring boot 需要的事实

00:38:29.410 --> 00:38:32.710
约定，它可以正常工作

00:38:31.030 --> 00:38:34.390
约定，所以我想创建一个新的

00:38:32.710 --> 00:38:38.530
此目录称为源主目录

00:38:34.390 --> 00:38:42.100
这样的资源，我们会告诉

00:38:38.530 --> 00:38:44.680
 IntelliJ请继续前进

00:38:42.100 --> 00:38:46.900
知道那个新目录和春天

00:38:44.680 --> 00:38:48.580
春天来了-但默认情况下寻找

00:38:46.900 --> 00:38:51.070
该文件称为应用程序的属性

00:38:48.580 --> 00:38:52.300
当然你可以支持其他财产

00:38:51.070 --> 00:38:53.920
文件就像通常一样

00:38:52.300 --> 00:38:57.370
使用添加属性源注释

00:38:53.920 --> 00:38:59.140
或者您知道属性的上下文

00:38:57.370 --> 00:39:05.260
占位符解析使

00:38:59.140 --> 00:39:06.880
 XML，这是我要的属性

00:39:05.260 --> 00:39:09.100
我们待会儿再看

00:39:06.880 --> 00:39:12.480
现在我们还想加载数据或

00:39:09.100 --> 00:39:13.720
应用程序，因此特别是负载续集

00:39:12.480 --> 00:39:15.910
你懂

00:39:13.720 --> 00:39:17.049
每次应用程序运行时

00:39:15.910 --> 00:39:19.089
我要去用我的小东西

00:39:17.049 --> 00:39:25.510
备忘单只是说这很好

00:39:19.089 --> 00:39:31.869
像这样的时间来改变你

00:39:25.510 --> 00:39:33.520
知道我们需要那个，我当然不知道

00:39:31.869 --> 00:39:35.200
没关系

00:39:33.520 --> 00:39:37.240
好吧，我们就这样离开它

00:39:35.200 --> 00:39:38.710
当春天春天的心情开始时

00:39:37.240 --> 00:39:40.869
看到相等的数据，它将看到

00:39:38.710 --> 00:39:43.000
我们已经在数据库中配置了

00:39:40.869 --> 00:39:46.000
想成为您知道与数据库对话

00:39:43.000 --> 00:39:47.140
它也会看到我们有H2 

00:39:46.000 --> 00:39:48.819
例如，类图上的库

00:39:47.140 --> 00:39:50.680
它将为我们提供一个嵌入式数据库

00:39:48.819 --> 00:39:53.619
如果我们不自己提供一个

00:39:50.680 --> 00:39:58.480
如果我回到这里并配置一个

00:39:53.619 --> 00:40:00.250
你知道那是马铃薯派

00:39:58.480 --> 00:40:01.750
它不会为我创造一个，但是因为我

00:40:00.250 --> 00:40:03.460
只是假设我想要一个

00:40:01.750 --> 00:40:05.410
嵌入一​​个，因为它可以确定

00:40:03.460 --> 00:40:06.880
工艺路线上的图书馆是

00:40:05.410 --> 00:40:10.059
很聪明，很方便

00:40:06.880 --> 00:40:13.089
做我需要的，但是你知道不需要

00:40:10.059 --> 00:40:14.650
如果我想做某事，请顺路

00:40:13.089 --> 00:40:18.250
不同

00:40:14.650 --> 00:40:20.410
好吧，所以导语等于加载了

00:40:18.250 --> 00:40:22.500
应用程序组件在这里，我们将

00:40:20.410 --> 00:40:25.180
一秒钟后回到这个家伙， 

00:40:22.500 --> 00:40:29.589
认为这是一个好的开始，所以右键单击

00:40:25.180 --> 00:40:32.559
在此选择一个作为应用程序等待

00:40:29.589 --> 00:40:34.480
为此再次进行，是的，不启用

00:40:32.559 --> 00:40:36.039
自动配置是所有

00:40:34.480 --> 00:40:37.809
魔术正在发生，所以这是

00:40:36.039 --> 00:40:38.980
其实只是要看一下

00:40:37.809 --> 00:40:40.480
应用程序，它将在

00:40:38.980 --> 00:40:42.430
已注册的组件

00:40:40.480 --> 00:40:43.569
应用并意识到哦，这是一个网站

00:40:42.430 --> 00:40:45.069
应用程序，我们应该继续

00:40:43.569 --> 00:40:47.099
并为我们创建一个tomcat 

00:40:45.069 --> 00:40:50.980
他们可以更快地得到所有

00:40:47.099 --> 00:40:51.940
像这样的 localhost 应该让你那些

00:40:50.980 --> 00:40:53.770
四个不同的终点

00:40:51.940 --> 00:40:57.430
那当然就是休息了

00:40:53.770 --> 00:40:58.900
再次将所有这些数据全部转换为JPA 

00:40:57.430 --> 00:41:00.220
弹簧数据提供了我们的支持

00:40:58.900 --> 00:41:02.380
根本不需要写很多颜色

00:41:00.220 --> 00:41:03.940
为此，当然，因为它的春天

00:41:02.380 --> 00:41:06.400
我们正在努力帮助您实现生产

00:41:03.940 --> 00:41:08.349
准备好您甚至可以访问

00:41:06.400 --> 00:41:10.930
其他应用程序，例如env 

00:41:08.349 --> 00:41:12.190
受雇的空气开箱即用

00:41:10.930 --> 00:41:15.339
有了那个春天的摊位首发

00:41:12.190 --> 00:41:16.960
执行器库在classpath运行状况中

00:41:15.339 --> 00:41:20.740
这样方便开发人员

00:41:16.960 --> 00:41:22.299
想要你知道发生了什么

00:41:20.740 --> 00:41:24.339
等等，例如，我实际上有一个

00:41:22.299 --> 00:41:26.160
我在这里看到我的续集错误我的代码

00:41:24.339 --> 00:41:29.299
据报道

00:41:26.160 --> 00:41:32.460
很高兴知道非常高兴

00:41:29.299 --> 00:41:34.829
反正我在哪里弄回来的

00:41:32.460 --> 00:41:37.829
到那个，然后你当然会得到

00:41:34.829 --> 00:41:39.359
像豆这样的东西可以向大家展示

00:41:37.829 --> 00:41:42.989
您知道应用程序上下文的bean 

00:41:39.359 --> 00:41:45.239
您会看到指标向您显示的信息

00:41:42.989 --> 00:41:46.859
向它提出了多少个请求

00:41:45.239 --> 00:41:50.160
您知道不同的终点，并且

00:41:46.859 --> 00:41:51.569
也更相关的状态码

00:41:50.160 --> 00:41:54.089
那些不同的终点，所以我做了

00:41:51.569 --> 00:41:57.749
到具有一个

00:41:54.089 --> 00:41:59.069
响应状态码200等

00:41:57.749 --> 00:42:00.390
这些东西你只是免费获得的

00:41:59.069 --> 00:42:02.970
知道我们并没有做很多代码

00:42:00.390 --> 00:42:04.470
所有人都可以做到这一点，但我们可以做到

00:42:02.970 --> 00:42:07.319
更好，我的意思是让我们继续

00:42:04.470 --> 00:42:11.369
看看对你了解工作意味着什么

00:42:07.319 --> 00:42:13.859
从您知道的HTML页面将其转到

00:42:11.369 --> 00:42:17.130
根据以下内容再次呈现HTML页面

00:42:13.859 --> 00:42:19.400
约定Spring Boot需要模板

00:42:17.130 --> 00:42:22.079
放在模板目录中

00:42:19.400 --> 00:42:24.180
但是我们需要选择不同的

00:42:22.079 --> 00:42:26.700
我要继续的模板样式

00:42:24.180 --> 00:42:31.259
并在每个使用时间叶类型是非常

00:42:26.700 --> 00:42:33.900
您知道的非常强大的库

00:42:31.259 --> 00:42:36.420
 html5非常自然的模板

00:42:33.900 --> 00:42:39.109
与恶人的风格相似

00:42:36.420 --> 00:42:41.910
或输入历史记录模板等或

00:42:39.109 --> 00:42:44.039
虽然来自JSF， 

00:42:41.910 --> 00:42:46.289
有点麻烦，所以我去

00:42:44.039 --> 00:42:49.069
向前，并在此添加该依赖性

00:42:46.289 --> 00:42:53.130
方便我可以运用智力

00:42:49.069 --> 00:42:54.809
大理石是这里的专家支持，所以您

00:42:53.130 --> 00:42:56.670
可以看到我拥有的所有不同选项

00:42:54.809 --> 00:42:58.109
可用，已经是可传递的

00:42:56.670 --> 00:42:59.670
在依赖中

00:42:58.109 --> 00:43:01.170
从 spring boot 启动管理

00:42:59.670 --> 00:43:02.819
父母，我要做的就是导入我

00:43:01.170 --> 00:43:05.190
不必在中指定版本

00:43:02.819 --> 00:43:06.769
这种情况下，然后一旦我做到了

00:43:05.190 --> 00:43:08.849
 spring boot 具有所需的一切

00:43:06.769 --> 00:43:10.799
自动配置引擎

00:43:08.849 --> 00:43:12.660
我，知道去看模板

00:43:10.799 --> 00:43:15.329
我们想要的模板的文件夹

00:43:12.660 --> 00:43:20.339
用于渲染我要继续的东西

00:43:15.329 --> 00:43:21.809
然后在这里使用这个模板

00:43:20.339 --> 00:43:23.039
会叫这个预订只是

00:43:21.809 --> 00:43:28.349
会计算

00:43:23.039 --> 00:43:30.119
我们这里的预订没有什么花哨的

00:43:28.349 --> 00:43:33.569
只是一个非常基本的时间联赛模板

00:43:30.119 --> 00:43:37.170
您可以看到它有一个div元素

00:43:33.569 --> 00:43:39.119
有一个特殊的时间名称空间

00:43:37.170 --> 00:43:40.309
我可以使用特殊的语法预订

00:43:39.119 --> 00:43:42.049
书

00:43:40.309 --> 00:43:43.430
你知道然后准备谈论它

00:43:42.049 --> 00:43:46.760
会用类似的方式打开它

00:43:43.430 --> 00:43:48.910
 Dreamweaver您知道HTML编辑器

00:43:46.760 --> 00:43:51.019
你实际上会得到一个合理的

00:43:48.910 --> 00:43:52.460
传真这是怎么回事

00:43:51.019 --> 00:43:54.500
只是虚拟文本，这实际上不是

00:43:52.460 --> 00:43:56.480
再次在运行时呈现它

00:43:54.500 --> 00:43:59.119
天生适合创新

00:43:56.480 --> 00:44:03.470
在这里和IntelliJ但在事物上

00:43:59.119 --> 00:44:06.980
就像网上商店在哪里

00:44:03.470 --> 00:44:11.059
你知道的很棒的类型

00:44:06.980 --> 00:44:15.200
您期待它的应用程序，看看有什么

00:44:11.059 --> 00:44:18.319
否则，我们想要的最后一件事就是重新加载

00:44:15.200 --> 00:44:22.910
我们的模板，以便我们继续

00:44:18.319 --> 00:44:24.950
并使用属性文件告诉

00:44:22.910 --> 00:44:26.750
春天，我们要继续前进，而不是

00:44:24.950 --> 00:44:27.920
缓存模板，以便女人在

00:44:26.750 --> 00:44:29.660
我们正在开发或只是重新加载

00:44:27.920 --> 00:44:31.279
并以这种方式为我们重新加载

00:44:29.660 --> 00:44:33.289
等你知道每次

00:44:31.279 --> 00:44:36.079
重启只是为了更新模板，所以

00:44:33.289 --> 00:44:39.010
我继续前进，它停止了， 

00:44:36.079 --> 00:44:41.960
我们当然需要的最后一件事是

00:44:39.010 --> 00:44:45.380
实际上是我们的MVC控制器

00:44:41.960 --> 00:44:50.450
端点，所以在这里我们只使用

00:44:45.380 --> 00:44:53.569
令牌合适或创建请求

00:44:50.450 --> 00:45:02.359
映射HTML页面

00:44:53.569 --> 00:45:05.150
你知道字符串明显吗

00:45:02.359 --> 00:45:09.589
非常重要，请继续使用字符串

00:45:05.150 --> 00:45:28.279
我正在使用模型继续添加后

00:45:09.589 --> 00:45:30.890
或再次携带我的默认值

00:45:28.279 --> 00:45:32.960
只是要寻找以名字命名的视图

00:45:30.890 --> 00:45:34.609
你知道用同样的方式命名或

00:45:32.960 --> 00:45:36.019
基于约定作为字符串

00:45:34.609 --> 00:45:37.670
我们从这个控制器方法返回

00:45:36.019 --> 00:45:39.740
所以这将有这将呈现

00:45:37.670 --> 00:45:41.599
一个HTML页面并委托到这个时候

00:45:39.740 --> 00:45:43.059
我们在这里有叶子模板

00:45:41.599 --> 00:45:44.960
宁静的控制器只是呈现

00:45:43.059 --> 00:45:47.630
集合和对象直接

00:45:44.960 --> 00:45:50.420
自从我们的客户使用JSON以来我就使用JSON 

00:45:47.630 --> 00:45:52.990
作为JSON分钟的例外，我们可以

00:45:50.420 --> 00:45:52.990
现在重新启动

00:45:53.000 --> 00:45:58.110
或调试当然这毕竟是

00:45:55.560 --> 00:45:59.070
只是一个普通的Java程序，我们

00:45:58.110 --> 00:46:01.230
只是在做所有的事情

00:45:59.070 --> 00:46:03.450
编辑在这里没有理由

00:46:01.230 --> 00:46:05.340
从概念上讲，如果我们有

00:46:03.450 --> 00:46:07.530
实际指定一个数据源

00:46:05.340 --> 00:46:08.850
 IntelliJ内部的出色工具

00:46:07.530 --> 00:46:10.619
连接续集数据库和

00:46:08.850 --> 00:46:13.220
操纵一切而不是

00:46:10.619 --> 00:46:17.430
在那里完成，甚至在我们内部

00:46:13.220 --> 00:46:18.930
 HTML，我们本可以使用所有

00:46:17.430 --> 00:46:21.930
智力真的很棒CSS 

00:46:18.930 --> 00:46:23.880
 JavaScript支持，例如Web jars 

00:46:21.930 --> 00:46:26.010
是一种在罐子里度过美好的一周的方式

00:46:23.880 --> 00:46:28.140
没有比这更甜的了

00:46:26.010 --> 00:46:29.640
真正了解的好工具

00:46:28.140 --> 00:46:33.080
 JavaScript并且知道如何做出反应

00:46:29.640 --> 00:46:37.550
像JavaScript和CSS这样的东西

00:46:33.080 --> 00:46:40.560
好吧，我们的应用程序当然是备份

00:46:37.550 --> 00:46:43.140
预订仍按我们预期的方式进行

00:46:40.560 --> 00:46:45.090
到，但现在我们可以转到HTML 

00:46:43.140 --> 00:46:47.880
端点并返回相同的数据

00:46:45.090 --> 00:46:50.490
再一次，这只是

00:46:47.880 --> 00:46:52.140
我真的不需要的代码

00:46:50.490 --> 00:46:53.820
担心我想说的其他事情

00:46:52.140 --> 00:46:58.200
把所有东西都放在一类

00:46:53.820 --> 00:46:59.609
为了方便起见，但是它也是

00:46:58.200 --> 00:47:01.440
因为这很平易近人

00:46:59.609 --> 00:47:03.600
你真的必须有很多

00:47:01.440 --> 00:47:05.850
考虑到这里的担忧

00:47:03.600 --> 00:47:07.650
这全都是应用程序

00:47:05.850 --> 00:47:09.660
你会写在一包餐巾纸里

00:47:07.650 --> 00:47:12.900
这个案例实际上是女人

00:47:09.660 --> 00:47:15.000
即使是那样的形状，你也知道最后一个

00:47:12.900 --> 00:47:16.740
事情当然是你也可以

00:47:15.000 --> 00:47:18.390
现在建立这是配置

00:47:16.740 --> 00:47:20.040
配置为创建一个超级罐子，所以如果

00:47:18.390 --> 00:47:22.859
您按原样构建此应用程序

00:47:20.040 --> 00:47:25.109
行家，你会得到一个新的小鸟抽屉

00:47:22.859 --> 00:47:26.850
然后您可以使用Java jar然后运行

00:47:25.109 --> 00:47:30.750
在包括云在内的任何容器上

00:47:26.850 --> 00:47:33.840
在我们的开源平台上的示例

00:47:30.750 --> 00:47:35.460
像Heroku et cetera这样的服务，但是您

00:47:33.840 --> 00:47:37.530
可能同样容易地将其部署到

00:47:35.460 --> 00:47:38.850
服务器容器，以便这样做

00:47:37.530 --> 00:47:40.890
您将 spring boot 从

00:47:38.850 --> 00:47:45.720
初始化程序，然后您可以覆盖

00:47:40.890 --> 00:47:51.390
一次又一次地配置方法

00:47:45.720 --> 00:47:54.230
继续并指定该课程，然后

00:47:51.390 --> 00:47:54.230
最后

00:47:58.930 --> 00:48:08.980
我们在这里建立我们不需要罐子和

00:48:05.859 --> 00:48:10.630
我们可以说我们想要一个罐子在墙上

00:48:08.980 --> 00:48:12.190
我宁愿写信说你缠扰

00:48:10.630 --> 00:48:15.849
显然适合终点线

00:48:12.190 --> 00:48:17.470
并可以插入一个也许

00:48:15.849 --> 00:48:19.869
即使一切都会幸福

00:48:17.470 --> 00:48:21.400
然后我们会看到它，您知道那是在

00:48:19.869 --> 00:48:24.160
该应用程序现在很容易

00:48:21.400 --> 00:48:28.230
部署，这样我就可以继续

00:48:24.160 --> 00:48:31.900
配置它添加新的Tomcat服务器

00:48:28.230 --> 00:48:35.020
我已经有一只雄猫了哦四

00:48:31.900 --> 00:48:40.210
在本地指定了七个，所以我继续

00:48:35.020 --> 00:48:42.190
并指定所有内容，然后我们指定

00:48:40.210 --> 00:48:44.079
我想部署我的我的

00:48:42.190 --> 00:48:44.890
应用爆炸的方式

00:48:44.079 --> 00:48:48.160
很棒，因为你总是可以

00:48:44.890 --> 00:48:50.020
命令f9并控制9并获取

00:48:48.160 --> 00:48:53.920
如您所知，所有事物都会更新

00:48:50.020 --> 00:48:56.109
然后我们走了，你会停止跑步吗

00:48:53.920 --> 00:48:57.819
一并启动Web应用程序

00:48:56.109 --> 00:49:01.569
通过适当的Tomcat，当然这

00:48:57.819 --> 00:49:03.339
可以正常工作，任何其他你知道的

00:49:01.569 --> 00:49:04.539
是一个轻量级的servlet容器，例如

00:49:03.339 --> 00:49:08.309
像码头

00:49:04.539 --> 00:49:10.140
在更传统的情况下看起来也不错

00:49:08.309 --> 00:49:12.839
应用程序永远不会像

00:49:10.140 --> 00:49:15.520
 WebSphere等，然后留在波士顿

00:49:12.839 --> 00:49:16.779
随便你怎么想

00:49:15.520 --> 00:49:19.690
为他们工作的实际应用

00:49:16.779 --> 00:49:21.700
从Tomcat当然可以使用Tomcat 

00:49:19.690 --> 00:49:23.349
可以在IntelliJ里面很好

00:49:21.700 --> 00:49:25.270
似乎在术语上效果很好， 

00:49:23.349 --> 00:49:27.760
最新版本中的新功能

00:49:25.270 --> 00:49:29.500
当然是我最喜欢的需求之一

00:49:27.760 --> 00:49:31.960
知道相关性是五百

00:49:29.500 --> 00:49:35.500
支持，所以如果我们有更多时间我可以

00:49:31.960 --> 00:49:37.869
只需单击在其中创建此标志，然后

00:49:35.500 --> 00:49:39.730
然后部署，但我只需要

00:49:37.869 --> 00:49:41.859
想象力，你可以得到整个

00:49:39.730 --> 00:49:42.849
应用程序工作其余工作网站

00:49:41.859 --> 00:49:45.640
在那里的应用程序，然后

00:49:42.849 --> 00:49:47.740
在您所知的范围内全部部署到生产

00:49:45.640 --> 00:49:49.990
每十分钟五分钟

00:49:47.740 --> 00:49:52.150
网络研讨会的时间还不错，我认为，我认为

00:49:49.990 --> 00:49:54.069
这是因为该编辑器使它如此

00:49:52.150 --> 00:49:55.299
容易完成工作

00:49:54.069 --> 00:49:57.250
您知道的代码不必担心

00:49:55.299 --> 00:49:59.950
关于废话和框架

00:49:57.250 --> 00:50:04.200
 ans吟使人容易通过

00:49:59.950 --> 00:50:09.630
晚上好吧，所以你继续感谢上帝

00:50:04.200 --> 00:50:12.400
好的视频非常非常有趣， 

00:50:09.630 --> 00:50:15.819
好吧，我们现在时间很短

00:50:12.400 --> 00:50:19.299
我会匆匆完成剩下的

00:50:15.819 --> 00:50:24.730
我想在IntelliJ中显示的项目

00:50:19.299 --> 00:50:27.460
尝试记录没有问题，我们可以在这里

00:50:24.730 --> 00:50:29.019
我待会再来

00:50:27.460 --> 00:50:33.460
网络研讨会当然会提问题

00:50:29.019 --> 00:50:35.740
对，当然可以，所以我们有一个

00:50:33.460 --> 00:50:37.569
几个新的xml检查

00:50:35.740 --> 00:50:42.509
配置文件将突出显示

00:50:37.569 --> 00:50:46.079
是多余的，还是多余的

00:50:42.509 --> 00:50:49.059
配置以及错误

00:50:46.079 --> 00:50:54.700
配置时，例如混合

00:50:49.059 --> 00:50:59.680
工厂和类实例化我们

00:50:54.700 --> 00:51:01.960
当然有自动生物环检查

00:50:59.680 --> 00:51:03.369
所以这是正确的

00:51:01.960 --> 00:51:06.009
它从未被使用过，所以这就是为什么

00:51:03.369 --> 00:51:09.130
越来越多，但是这里有两个

00:51:06.009 --> 00:51:13.749
候选人，所以我能做的就是添加一个

00:51:09.130 --> 00:51:16.329
限定词，我只告诉我一个

00:51:13.749 --> 00:51:21.009
想使用，当然我可以导航

00:51:16.329 --> 00:51:22.690
 Whitacre又来了，你知道几个

00:51:21.009 --> 00:51:24.519
所有布线的其他东西

00:51:22.690 --> 00:51:27.069
也得到了改善，一件事

00:51:24.519 --> 00:51:30.210
这是非常好的改进

00:51:27.069 --> 00:51:35.650
 IntelliJ 13作为更好的消息

00:51:30.210 --> 00:51:37.690
构造函数不匹配，所以如果您有

00:51:35.650 --> 00:51:39.670
构造函数询问您的配置

00:51:37.690 --> 00:51:41.589
存在，他们与实际不符

00:51:39.670 --> 00:51:44.349
您尝试使用的构造函数

00:51:41.589 --> 00:51:46.599
您将获得非常详细的信息

00:51:44.349 --> 00:51:48.119
还有什么是错误的，什么是必须的

00:51:46.599 --> 00:51:52.839
变了

00:51:48.119 --> 00:51:56.289
还可以突出显示

00:51:52.839 --> 00:52:00.099
改进，现在已经很大

00:51:56.289 --> 00:52:03.220
 IntelliJ 13中的新增功能

00:52:00.099 --> 00:52:05.920
我们还没有的spring tool窗口

00:52:03.220 --> 00:52:07.920
显示了，所以它是做什么的和它

00:52:05.920 --> 00:52:12.160
给您一个很好的导航

00:52:07.920 --> 00:52:14.019
不仅可以看到您的模块的能力

00:52:12.160 --> 00:52:16.450
在第一列和第二列

00:52:14.019 --> 00:52:19.150
如果设置了开关，我们将显示该列

00:52:16.450 --> 00:52:23.109
在弹簧方面也进行了重新配置

00:52:19.150 --> 00:52:24.700
作为相应的春天

00:52:23.109 --> 00:52:26.530
配置文件在我们的

00:52:24.700 --> 00:52:30.010
申请文件

00:52:26.530 --> 00:52:32.620
代码文件，这里有

00:52:30.010 --> 00:52:34.800
背诵豆子以及

00:52:32.620 --> 00:52:37.780
文档窗口，因此您可以轻松

00:52:34.800 --> 00:52:40.930
滚动到您的应用程序，查看所有

00:52:37.780 --> 00:52:44.560
豆子立刻知道它们的含义

00:52:40.930 --> 00:52:46.510
将所有文档全部集中在一起

00:52:44.560 --> 00:52:49.950
的地方，所以如果你很方便

00:52:46.510 --> 00:52:52.510
正在寻找新光或一些

00:52:49.950 --> 00:52:55.350
你春天的配置问题

00:52:52.510 --> 00:53:01.320
应用程序另一个非常整洁的功能是

00:52:55.350 --> 00:53:05.500
启用图表，以便显示

00:53:01.320 --> 00:53:07.720
我们知道的小图

00:53:05.500 --> 00:53:11.250
文档或也可以禁用

00:53:07.720 --> 00:53:13.180
文档，以便您直接查看

00:53:11.250 --> 00:53:16.750
当前选择的关系

00:53:13.180 --> 00:53:19.480
您也可以导航至横梁

00:53:16.750 --> 00:53:22.060
值得点击的项目

00:53:19.480 --> 00:53:24.280
在列表中，有几个

00:53:22.060 --> 00:53:25.900
其他导航和过滤

00:53:24.280 --> 00:53:31.810
可能性也很大

00:53:25.900 --> 00:53:36.090
强大的下一件事

00:53:31.810 --> 00:53:41.550
关于我们对Spring MVC的支持

00:53:36.090 --> 00:53:45.630
致力于改善文档

00:53:41.550 --> 00:53:51.730
还有可能性，所以我们有一个

00:53:45.630 --> 00:53:53.740
非常基本的请求映射在这里，我

00:53:51.730 --> 00:53:56.280
刚要去大使馆

00:53:53.740 --> 00:53:59.680
标签，这当然也是新的

00:53:56.280 --> 00:54:02.250
 IntelliJ 13，在这里您将拥有

00:53:59.680 --> 00:54:06.430
所有网址的列表以及

00:54:02.250 --> 00:54:08.830
控制器的，这就是我的请求映射

00:54:06.430 --> 00:54:10.630
在这里我们实际上可以看到

00:54:08.830 --> 00:54:14.530
请求映射的文档为

00:54:10.630 --> 00:54:16.930
好，我准备了更多

00:54:14.530 --> 00:54:20.080
这里有一个复杂的控制器

00:54:16.930 --> 00:54:23.050
几个更多的注释和

00:54:20.080 --> 00:54:26.470
参数，它们也将是

00:54:23.050 --> 00:54:28.240
显示在文档窗口中，以便您

00:54:26.470 --> 00:54:31.960
可以实际看到路径变量为

00:54:28.240 --> 00:54:36.430
以及类型，您会看到老年人

00:54:31.960 --> 00:54:39.010
 HTTP方法只是一点点

00:54:36.430 --> 00:54:41.440
是的，映射更多，是的，这真的

00:54:39.010 --> 00:54:43.150
让很多人都知道

00:54:41.440 --> 00:54:44.980
好像有些人想要

00:54:43.150 --> 00:54:46.930
使用和配置一切

00:54:44.980 --> 00:54:48.070
春天，你看到一个中心地方， 

00:54:46.930 --> 00:54:49.510
其他人希望能够使用

00:54:48.070 --> 00:54:51.130
注释，但是他们冒着拥有

00:54:49.510 --> 00:54:53.290
他们的地图和路线

00:54:51.130 --> 00:54:54.670
现在遍布中国保监会和管制员

00:54:53.290 --> 00:54:58.060
有了这个，你可以同时拥有

00:54:54.670 --> 00:55:00.250
您方便，您知道旁边的代码

00:54:58.060 --> 00:55:01.360
您的端点和配置

00:55:00.250 --> 00:55:01.930
和点，然后仍然得到

00:55:01.360 --> 00:55:04.330
鸟瞰

00:55:01.930 --> 00:55:07.510
你知道你的应用程序控制器

00:55:04.330 --> 00:55:10.360
这个文档真的很棒

00:55:07.510 --> 00:55:13.810
也可以从任何其他地方获得

00:55:10.360 --> 00:55:16.480
从IDE，所以当我有自动

00:55:13.810 --> 00:55:19.330
在这里完成一些URL我也可以

00:55:16.480 --> 00:55:22.690
在此处调用文档并在

00:55:19.330 --> 00:55:25.480
一目了然我需要传递什么参数

00:55:22.690 --> 00:55:27.910
在它是一个气体排放者或邮政

00:55:25.480 --> 00:55:32.250
方法请求映射其他所有内容

00:55:27.910 --> 00:55:36.730
所以导航非常方便

00:55:32.250 --> 00:55:39.220
 apropos调用我们也有

00:55:36.730 --> 00:55:42.480
这里的小图标

00:55:39.220 --> 00:55:45.410
实际浏览2D的相关视图

00:55:42.480 --> 00:55:48.140
 D请求映射，因此您只需单击

00:55:45.410 --> 00:55:50.150
你去对应的视图

00:55:48.140 --> 00:55:52.900
当然我们也可以解决任何模型

00:55:50.150 --> 00:55:54.680
可以看到这里的属性

00:55:52.900 --> 00:55:58.180
当然重构过程

00:55:54.680 --> 00:56:00.560
一切，所以我认为这非常好

00:55:58.180 --> 00:56:02.690
请愿以备有文件和

00:56:00.560 --> 00:56:05.180
从春季MVC导航

00:56:02.690 --> 00:56:09.560
不知道您的Web应用程序

00:56:05.180 --> 00:56:11.450
然后我们还有另外两个主题

00:56:09.560 --> 00:56:14.480
我只想告诉你

00:56:11.450 --> 00:56:17.720
显示压模我们不支持添加

00:56:14.480 --> 00:56:21.130
用于测试的上下文层次结构注释

00:56:17.720 --> 00:56:24.470
上下文，我们也最终支持

00:56:21.130 --> 00:56:28.220
 MongoDB以及新的4G和跳跃

00:56:24.470 --> 00:56:30.200
更高版本和存储库注释为

00:56:28.220 --> 00:56:32.300
以及两个对应的XML 

00:56:30.200 --> 00:56:35.360
来自其名称空间的配置文本

00:56:32.300 --> 00:56:41.260
所以我们也要在这方面

00:56:35.360 --> 00:56:46.160
不，这就是我们所能满足的

00:56:41.260 --> 00:56:50.500
我们的网络广播很小，所以我们来了

00:56:46.160 --> 00:56:53.270
现在得出结论，非常容易

00:56:50.500 --> 00:56:57.430
是的，我们有一些，我们有一些不错的

00:56:53.270 --> 00:57:02.120
要宣布的东西，所以会发生什么

00:56:57.430 --> 00:57:06.680
 IntelliJ 13点发布

00:57:02.120 --> 00:57:09.580
我们将要发布的春季支持

00:57:06.680 --> 00:57:12.590
实际上是针对

00:57:09.580 --> 00:57:16.970
第三方包装开发商，如果您

00:57:12.590 --> 00:57:23.080
正在计划支持您自己的XML或

00:57:16.970 --> 00:57:26.150
任何春季的Java上下文注释

00:57:23.080 --> 00:57:28.100
例如插件或您自己的家

00:57:26.150 --> 00:57:31.850
建立一个弹簧框架，你将成为

00:57:28.100 --> 00:57:34.580
能够使用此开放式API和

00:57:31.850 --> 00:57:39.640
当然，我们希望我们的插件开发人员

00:57:34.580 --> 00:57:39.640
介入并可能发展更多

00:57:39.910 --> 00:57:45.380
春季支持插件

00:57:42.500 --> 00:57:51.080
 IntelliJ用于鲜为人知的Spring Sub 

00:57:45.380 --> 00:57:53.150
项目和13.1支持，我们是

00:57:51.080 --> 00:57:55.770
在春天附近要非常努力地工作

00:57:53.150 --> 00:57:58.140
和小姐支持我们

00:57:55.770 --> 00:58:00.720
致力于该行业的发展

00:57:58.140 --> 00:58:03.140
以及针对Java冲突的Java配置

00:58:00.720 --> 00:58:08.520
支持spring MVC应用程序和

00:58:03.140 --> 00:58:10.800
当然，我们会更新最新的

00:58:08.520 --> 00:58:12.630
所有弹簧的恶性释放

00:58:10.800 --> 00:58:15.440
接近已经支持的方法

00:58:12.630 --> 00:58:18.270
克罗地亚安全等等，依此类推

00:58:15.440 --> 00:58:19.710
是的，我认为这将会是

00:58:18.270 --> 00:58:22.620
有趣，特别是我们会看到

00:58:19.710 --> 00:58:26.220
即将发布的春季照片分为两部分

00:58:22.620 --> 00:58:28.470
天，我想，对，这就是我的全部

00:58:26.220 --> 00:58:34.560
所以那个很棒的人

00:58:28.470 --> 00:58:38.160
这很有趣，谢谢有我

00:58:34.560 --> 00:58:40.500
谢谢jinyoung并感谢大家

00:58:38.160 --> 00:58:42.300
参加并确保参观我们的

00:58:40.500 --> 00:58:46.110
网站并下载最新版本

00:58:42.300 --> 00:58:48.840
 IntelliJ IDEA以及春季

00:58:46.110 --> 00:58:52.290
 dot IO网站查找所有指南

00:58:48.840 --> 00:58:56.250
如何从春季开始

00:58:52.290 --> 00:59:02.000
当然是谁在Twitter上，所以您可以全部获得

00:58:56.250 --> 00:59:05.730
这个新闻绝对是的，还有更多

00:59:02.000 --> 00:59:07.710
我觉得我们有足够的时间

00:59:05.730 --> 00:59:10.500
浏览所有的清单

00:59:07.710 --> 00:59:13.010
我正在寻找的问题和文章

00:59:10.500 --> 00:59:15.480
现在也有一些

00:59:13.010 --> 00:59:17.460
一个问题是你能表明如何

00:59:15.480 --> 00:59:23.580
迁移到一场全面战争

00:59:17.460 --> 00:59:36.780
没有回答你有事吗

00:59:23.580 --> 00:59:41.640
你在那里看到任何问题我想我

00:59:36.780 --> 00:59:47.250
刚刚已经展示了如何成为伟大的狗

00:59:41.640 --> 00:59:51.920
战争是由春天的好应用程序

00:59:47.250 --> 00:59:55.830
我是STAAR的方式是在Twitter上吸引男人

00:59:51.920 --> 01:00:00.150
在那找到我，约翰和

00:59:55.830 --> 01:00:04.080
他的名字，但没有空格

01:00:00.150 --> 01:00:06.930
当它关闭时，她就要来了

01:00:04.080 --> 01:00:09.000
在春季凉爽的时候，我不知道我们是否有

01:00:06.930 --> 01:00:11.670
更加密切地支持

01:00:09.000 --> 01:00:14.430
具体计划，但之后

01:00:11.670 --> 01:00:16.440
就是一堆JVM 

01:00:14.430 --> 01:00:18.240
在一天中键入，即使我们不

01:00:16.440 --> 01:00:22.280
有特定的习惯用法整合

01:00:18.240 --> 01:00:24.690
您仍然可以从关闭使用它

01:00:22.280 --> 01:00:31.710
显然，看到一个

01:00:24.690 --> 01:00:34.040
道德主义者被当成一件事情

01:00:31.710 --> 01:00:34.040
更多问题

01:00:35.450 --> 01:00:44.280
它询问您是否不是一个人

01:00:40.740 --> 01:00:47.100
外向内向外

01:00:44.280 --> 01:00:52.050
依赖注入，因此突出了它

01:00:47.100 --> 01:00:55.320
作为IDE中的红酒之一

01:00:52.050 --> 01:00:58.590
豆用于测试目的，如何

01:00:55.320 --> 01:01:05.370
处理这个是的，你介意吗

01:00:58.590 --> 01:01:10.140
我亲自回答这个问题

01:01:05.370 --> 01:01:15.360
这是另一个更柔和的问题吗，如果

01:01:10.140 --> 01:01:21.840
您使用多个光束

01:01:15.360 --> 01:01:27.780
依赖注入和注入

01:01:21.840 --> 01:01:32.460
突出显示签证红色，可以

01:01:27.780 --> 01:01:35.400
有多种原因，所以一个原因

01:01:32.460 --> 01:01:37.410
这很常见，只是有些想念

01:01:35.400 --> 01:01:41.190
弹簧小平面的配置如此

01:01:37.410 --> 01:01:43.670
这是检查是否

01:01:41.190 --> 01:01:46.110
 IIE中的spring配置设置

01:01:43.670 --> 01:01:49.650
类似于您的应用程序实际

01:01:46.110 --> 01:01:52.950
如果那不能解决这个问题应该做

01:01:49.650 --> 01:01:57.690
请向后退以提供更多信息

01:01:52.950 --> 01:01:59.760
我们来看一下，所以

01:01:57.690 --> 01:02:03.810
如何回答这个与改变

01:01:59.760 --> 01:02:08.670
具体情况对不起荣格这个问题

01:02:03.810 --> 01:02:12.270
如果使用这里的一种豆子

01:02:08.670 --> 01:02:19.500
仅用于个人测试我给你

01:02:12.270 --> 01:02:21.030
可以使用个人资料，好吧，所以

01:02:19.500 --> 01:02:22.950
他们在那里正确地突出显示

01:02:21.030 --> 01:02:28.120
依存关系

01:02:22.950 --> 01:02:30.580
好的，所以测试的配置

01:02:28.120 --> 01:02:34.420
例如用于的上下文

01:02:30.580 --> 01:02:38.430
集成测试，通常

01:02:34.420 --> 01:02:41.080
与生产环境分开，所以

01:02:38.430 --> 01:02:43.900
您实际上不需要进行配置

01:02:41.080 --> 01:02:45.490
任何东西，你Springfest它的

01:02:43.900 --> 01:02:47.530
测试上下文，因为它将

01:02:45.490 --> 01:02:51.790
自动拿起一切

01:02:47.530 --> 01:02:53.710
从代码，所以如果你有可能

01:02:51.790 --> 01:02:55.330
配置了一些手动上下文

01:02:53.710 --> 01:02:58.420
应该删除它，然后再试一次

01:02:55.330 --> 01:03:00.820
如果没有，现在可以工作，请

01:02:58.420 --> 01:03:05.680
再次返回我将具体代码

01:03:00.820 --> 01:03:08.380
例子，我们将调查一个

01:03:05.680 --> 01:03:14.560
还有更多问题，所以彼得问我们是否

01:03:08.380 --> 01:03:19.450
乔伊的s'more两个窗口是的

01:03:14.560 --> 01:03:24.180
它的名字叫Java Enterprise，所以如果您

01:03:19.450 --> 01:03:24.180
打开任何Java EE项目，您都会找到它

01:03:29.070 --> 01:03:35.020
凉

01:03:31.650 --> 01:03:40.960
关于弹簧轮廓的另一个问题

01:03:35.020 --> 01:03:43.990
批注很酷，问是否有

01:03:40.960 --> 01:03:47.980
任何改进或修剪轮廓支持

01:03:43.990 --> 01:03:50.500
我想你是否发现一些坏东西

01:03:47.980 --> 01:03:53.500
这样你应该完整的报告

01:03:50.500 --> 01:03:55.740
因为它应该解决的

01:03:53.500 --> 01:03:55.740
性交

01:04:02.460 --> 01:04:07.960
好的，关于春天的问题

01:04:06.130 --> 01:04:13.770
和小姐的支持，特别是对于

01:04:07.960 --> 01:04:17.230
我的过去属性是非

01:04:13.770 --> 01:04:20.049
我们的支持中缺少链接， 

01:04:17.230 --> 01:04:22.990
连票都可以看

01:04:20.049 --> 01:04:25.599
在我们的博士中国王系统在

01:04:22.990 --> 01:04:28.720
我们是春季MVC改进的清单

01:04:25.599 --> 01:04:32.619
为13.1计划是问题

01:04:28.720 --> 01:04:35.380
现在验证

01:04:32.619 --> 01:04:38.470
 Spring MVC自定义文本进行跟踪

01:04:35.380 --> 01:04:42.539
件或s导航至D 

01:04:38.470 --> 01:04:42.539
例如相应的烤豆

01:04:47.880 --> 01:04:51.549
你们还没有惊喜

01:04:49.900 --> 01:04:57.640
有这个东西很容易是的，我

01:04:51.549 --> 01:05:00.099
猜得真是太好了，那是什么

01:04:57.640 --> 01:05:07.539
下一个问题对不起Gretel 

01:05:00.099 --> 01:05:12.670
是否有提供任何计划的支持

01:05:07.539 --> 01:05:15.940
叛军在春季建立或树立榜样

01:05:12.670 --> 01:05:18.760
我猜网站已经有一些例子

01:05:15.940 --> 01:05:20.680
与煎锅美丽的权利是的，所以所有

01:05:18.760 --> 01:05:23.730
我提到的那些指南中

01:05:20.680 --> 01:05:27.250
 IO for-指导的春天

01:05:23.730 --> 01:05:29.710
可作为Gradle和Maven手掌使用

01:05:27.250 --> 01:05:31.450
所以他们每个人都是

01:05:29.710 --> 01:05:34.150
我们尽可能地使用 spring boot 

01:05:31.450 --> 01:05:35.680
所以实际上有他们的指南功能

01:05:34.150 --> 01:05:38.410
 Gradle构建，然后链接到

01:05:35.680 --> 01:05:52.270
主要的，所以盖尔首先实际上和所有

01:05:38.410 --> 01:05:52.750
我希望他们对他们有帮助，谢谢

01:05:52.270 --> 01:05:55.270
你这个人

01:05:52.750 --> 01:05:57.579
哦，很好，非常感谢你

01:05:55.270 --> 01:05:59.799
再次感谢乔希

01:05:57.579 --> 01:06:02.589
加入我们，向我们展示一些

01:05:59.799 --> 01:06:07.359
蓝色的春天令人印象深刻的用法

01:06:02.589 --> 01:06:10.200
链谢谢你我带我进

01:06:07.359 --> 01:06:10.200
令人印象深刻的IntelliJ 

01:06:12.479 --> 01:06:16.259
所以每天

