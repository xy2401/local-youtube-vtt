WEBVTT
Kind: captions
Language: zh-Hans

00:00:03.620 --> 00:00:08.990
我们将涵盖对

00:00:06.200 --> 00:00:11.209
 IntelliJ IDEA 2016第2点中的单元5 

00:00:08.990 --> 00:00:14.059
我们将介绍对

00:00:11.209 --> 00:00:16.600
调试器将涵盖对

00:00:14.059 --> 00:00:20.179
版本控制将涵盖检查

00:00:16.600 --> 00:00:23.710
编辑器的几个编辑器更改了一些

00:00:20.179 --> 00:00:26.630
小小的UI更改，然后我们将介绍

00:00:23.710 --> 00:00:28.609
更改数据库工具和

00:00:26.630 --> 00:00:31.789
已进行的JavaScript变更

00:00:28.609 --> 00:00:33.110
 IntelliJ IDEA我们有一件事

00:00:31.789 --> 00:00:35.329
通常不会掉下来

00:00:33.110 --> 00:00:37.310
在西JAVA智能网络研讨会下

00:00:35.329 --> 00:00:39.080
是春天的变化，因为

00:00:37.310 --> 00:00:43.700
网络研讨会专门涵盖了这一点，所以我们

00:00:39.080 --> 00:00:45.650
不会在这一篇中涵盖

00:00:43.700 --> 00:00:48.230
我想做的第一件事

00:00:45.650 --> 00:00:50.150
涵盖的是对J单元5 I的支持

00:00:48.230 --> 00:00:51.920
还没有在其中一个谈论过

00:00:50.150 --> 00:00:53.840
截屏，我们还没有介绍

00:00:51.920 --> 00:00:56.330
它在博客文章中的任何深度都没有

00:00:53.840 --> 00:00:57.350
这是相当新的信息

00:00:56.330 --> 00:00:57.740
我要和你分享

00:00:57.350 --> 00:01:01.070
伙计们

00:00:57.740 --> 00:01:03.260
所以IntelliJ IDEA 2016第二点

00:01:01.070 --> 00:01:06.920
附带对闪亮品牌的支持

00:01:03.260 --> 00:01:08.659
新的J单元5现在我们大多数人都使用Java 

00:01:06.920 --> 00:01:11.689
开发人员应该一直在使用J单元

00:01:08.659 --> 00:01:13.939
大概很多年了，新的

00:01:11.689 --> 00:01:15.740
版本即将推出

00:01:13.939 --> 00:01:17.630
等待，可能涉及很多

00:01:15.740 --> 00:01:18.859
改变我们的方式

00:01:17.630 --> 00:01:21.020
我们以思考的方式进行测试

00:01:18.859 --> 00:01:23.359
测试，所以很高兴看到

00:01:21.020 --> 00:01:25.399
尽管IntelliJ已经支持它

00:01:23.359 --> 00:01:26.960
它仍处于发展状态

00:01:25.399 --> 00:01:32.179
让我告诉你一些看起来

00:01:26.960 --> 00:01:33.530
像这样，这是一个J单元5测试示例

00:01:32.179 --> 00:01:35.270
这是一种相当简单的

00:01:33.530 --> 00:01:37.430
我们拥有的简单示例

00:01:35.270 --> 00:01:39.140
测试经理

00:01:37.430 --> 00:01:41.030
病人，但这是新的测试

00:01:39.140 --> 00:01:43.850
注释不是不是旧的和

00:01:41.030 --> 00:01:46.310
我正在使用显示名称注释

00:01:43.850 --> 00:01:48.620
好吧，我将展示我将运行这些测试，以便

00:01:46.310 --> 00:01:51.130
您可以看到a可以正常运行，B可以

00:01:48.620 --> 00:01:51.130
看起来像

00:01:59.369 --> 00:02:03.280
所以你可以看到当我们运行这个

00:02:01.390 --> 00:02:05.500
 j单位Jupiter是新的J单位

00:02:03.280 --> 00:02:07.090
五名亚军，你可以看到

00:02:05.500 --> 00:02:09.970
实际输出的显示名称

00:02:07.090 --> 00:02:12.040
测试而不是测试方法名称

00:02:09.970 --> 00:02:13.690
您应该能够在结果中看到

00:02:12.040 --> 00:02:16.390
测试时，您应该

00:02:13.690 --> 00:02:18.069
能够看到关于

00:02:16.390 --> 00:02:20.080
是否通过了测试

00:02:18.069 --> 00:02:22.150
失败了J中的另一件事

00:02:20.080 --> 00:02:24.580
单元5是断言所有和

00:02:22.150 --> 00:02:26.530
单个中的多个断言

00:02:24.580 --> 00:02:30.390
块，并且在中受支持

00:02:26.530 --> 00:02:33.390
 IntelliJ IDEA以及

00:02:30.390 --> 00:02:33.390
这个

00:02:34.440 --> 00:02:40.960
让我们来看看这个J单元5 

00:02:37.900 --> 00:02:42.760
允许您嵌套这些测试用例，以便

00:02:40.960 --> 00:02:46.120
我在这里所做的就是将它们嵌套

00:02:42.760 --> 00:02:48.970
作为一种给定的，然后

00:02:46.120 --> 00:02:52.480
这些内部类的样式方式是

00:02:48.970 --> 00:02:55.390
一组特定的规范

00:02:52.480 --> 00:02:57.460
这种情况下，任何与之相反的快乐信息

00:02:55.390 --> 00:02:59.650
到任何悲伤的讯息，然后在里面

00:02:57.460 --> 00:03:00.700
那些我们也有嵌套测试的

00:02:59.650 --> 00:03:10.270
我会告诉你这是什么样子

00:03:00.700 --> 00:03:12.430
它运行，您可以看到嵌套

00:03:10.270 --> 00:03:15.700
规格在这里，所以你看到什么时候

00:03:12.430 --> 00:03:18.100
然后你会看到一系列的应该

00:03:15.700 --> 00:03:21.100
 IntelliJ完全支持这一切

00:03:18.100 --> 00:03:23.650
 IDEA 2016点二J单元五是

00:03:21.100 --> 00:03:25.390
目前正在开发中

00:03:23.650 --> 00:03:27.550
支持J单元五，您将看到

00:03:25.390 --> 00:03:29.080
其中一些东西，你会看到它们

00:03:27.550 --> 00:03:31.540
改变和改善这些事情

00:03:29.080 --> 00:03:32.680
继续，但是现在只知道事实

00:03:31.540 --> 00:03:34.420
如果你想开始玩

00:03:32.680 --> 00:03:41.950
使用J单元5完全支持

00:03:34.420 --> 00:03:43.330
在IDE中，所以在那里

00:03:41.950 --> 00:03:45.730
是支持它的新注释

00:03:43.330 --> 00:03:48.880
从达纳五世和展示

00:03:45.730 --> 00:03:51.400
结果我想涵盖的下一件事

00:03:48.880 --> 00:03:53.440
我们想要在测试区域上进行排序

00:03:51.400 --> 00:03:58.480
涵盖对

00:03:53.440 --> 00:04:00.340
我们合并了手表的调试器

00:03:58.480 --> 00:04:02.709
在变量窗口中，我们添加了

00:04:00.340 --> 00:04:04.180
一堆多行表达支持

00:04:02.709 --> 00:04:11.040
不同的地方，让我们来

00:04:04.180 --> 00:04:12.870
首先快速看一下这些东西

00:04:11.040 --> 00:04:16.069
让我找到

00:04:12.870 --> 00:04:16.069
如果我调试它运行

00:04:22.790 --> 00:04:27.060
现在在变量窗口中，您可以

00:04:25.230 --> 00:04:28.620
如果需要，添加监视表达式

00:04:27.060 --> 00:04:30.060
您想要一个单独的窗口

00:04:28.620 --> 00:04:31.110
手表，你仍然可以提出来， 

00:04:30.060 --> 00:04:33.150
如果您将其放在单独的窗口中

00:04:31.110 --> 00:04:35.070
喜欢，也可以将它们全部合并为一个

00:04:33.150 --> 00:04:36.690
一个地方，所以让我们举个例子

00:04:35.070 --> 00:04:45.750
在这里我们可能要添加新手表

00:04:36.690 --> 00:04:47.790
例如，然后您可以看到所有

00:04:45.750 --> 00:04:51.810
您的手表与所有手表都在同一个窗口中

00:04:47.790 --> 00:04:53.040
变量的变化，这是

00:04:51.810 --> 00:04:54.450
非常有用，这意味着我们不会

00:04:53.040 --> 00:04:56.760
必须有许多不同的

00:04:54.450 --> 00:04:58.919
看一下状态的地方

00:04:56.760 --> 00:05:00.450
各种各样的事情，但是正如我所说的

00:04:58.919 --> 00:05:07.020
你仍然可以拥有分开的东西

00:05:00.450 --> 00:05:08.730
如果您要其他主要更改

00:05:07.020 --> 00:05:11.400
这是对多行的支持

00:05:08.730 --> 00:05:14.040
表达式，所以如果我们看是否正确

00:05:11.400 --> 00:05:16.080
点击这个断点，我们可以添加一个

00:05:14.040 --> 00:05:17.640
条件条件这样

00:05:16.080 --> 00:05:21.150
断点只会在特定情况下停止

00:05:17.640 --> 00:05:23.400
现在支持的情况

00:05:21.150 --> 00:05:25.919
多行表达式，所以这里说

00:05:23.400 --> 00:05:27.690
我们想要支持我们想停下来

00:05:25.919 --> 00:05:29.640
这个断点的时候特别

00:05:27.690 --> 00:05:32.850
满足条件，这使您能够

00:05:29.640 --> 00:05:34.530
建立更复杂的表达

00:05:32.850 --> 00:05:38.310
评估以确定您是否

00:05:34.530 --> 00:05:40.370
想在此断点处停下来

00:05:38.310 --> 00:05:45.030
如果我们有这个多行表达式

00:05:40.370 --> 00:05:48.200
使那我们应该看到它的病

00:05:45.030 --> 00:05:50.310
在那种情况下停在那里

00:05:48.200 --> 00:05:54.090
在其他地方

00:05:50.310 --> 00:05:57.150
添加的是，如果我们经过这里，我们还可以

00:05:54.090 --> 00:05:59.729
在评估日志中，我们可以添加一个

00:05:57.150 --> 00:06:02.070
多行表达式也是如此

00:05:59.729 --> 00:06:04.970
也许我想记录一下

00:06:02.070 --> 00:06:12.590
该阵列是我可以把它放在这里

00:06:04.970 --> 00:06:16.130
启用，然后当我运行此

00:06:12.590 --> 00:06:16.130
让我到达那里

00:06:17.000 --> 00:06:23.880
你会看到你会看到

00:06:19.650 --> 00:06:26.270
表达式记录在这里和最后的地方

00:06:23.880 --> 00:06:33.690
支持多行表达式

00:06:26.270 --> 00:06:37.430
并且在自定义数据类型中呈现为

00:06:33.690 --> 00:06:37.430
使用动作提出来

00:06:40.580 --> 00:06:45.240
如今，渲染器允许或等待

00:06:43.050 --> 00:06:46.620
让您告诉IDE什么信息

00:06:45.240 --> 00:06:48.570
您想要显示特定类型

00:06:46.620 --> 00:06:49.770
例如，当您在调试时，如果

00:06:48.570 --> 00:06:53.280
我想看看这是什么

00:06:49.770 --> 00:06:55.020
 Twitter的连接东西是什么

00:06:53.280 --> 00:06:57.930
我用来决定如何表达

00:06:55.020 --> 00:06:59.250
显示，所以在这里我们再次有这个

00:06:57.930 --> 00:07:01.710
多行表达式，我将使用

00:06:59.250 --> 00:07:03.630
弹起弦构建器以建立一个

00:07:01.710 --> 00:07:05.760
此特定的描述性字符串

00:07:03.630 --> 00:07:07.290
反对可能是我不想

00:07:05.760 --> 00:07:08.940
可能是我不想

00:07:07.290 --> 00:07:10.680
覆盖字符串以提供一个漂亮的

00:07:08.940 --> 00:07:12.720
我可能想要此对象的字符串

00:07:10.680 --> 00:07:15.390
为IDE提供自定义字符串以

00:07:12.720 --> 00:07:18.060
显示这个，所以我在这里添加了这个

00:07:15.390 --> 00:07:22.650
在这里，让我向您展示它的工作原理

00:07:18.060 --> 00:07:24.720
所以如果我启用我会去某个地方

00:07:22.650 --> 00:07:27.210
使用的是那个

00:07:24.720 --> 00:07:35.760
 Twitter连接对象以及当我

00:07:27.210 --> 00:07:37.220
调试一下，您可以看到让我们删除它

00:07:35.760 --> 00:07:39.420
看，因为我不再需要它了

00:07:37.220 --> 00:07:42.360
您可以看到此Twitter连接是

00:07:39.420 --> 00:07:48.620
使用我的自定义表达式来显示

00:07:42.360 --> 00:07:51.540
关于它的信息还可以，所以

00:07:48.620 --> 00:07:52.920
变化的两个主要特征

00:07:51.540 --> 00:07:54.240
调试器发生了什么

00:07:52.920 --> 00:07:55.800
注意变量是否不被合并

00:07:54.240 --> 00:07:57.270
多行表达支持

00:07:55.800 --> 00:08:00.960
扩展到不同地方的数量

00:07:57.270 --> 00:08:03.470
对此有任何疑问

00:08:00.960 --> 00:08:03.470
点

00:08:06.140 --> 00:08:15.540
是的，我们有几个问题， 

00:08:11.690 --> 00:08:18.030
第一个是关于一些非常

00:08:15.540 --> 00:08:24.150
关于Spring MVC的特定问题

00:08:18.030 --> 00:08:25.950
支持，所以目前我相信这是

00:08:24.150 --> 00:08:28.980
最好向我们的追踪器报告

00:08:25.950 --> 00:08:32.880
因为我不能确定为什么

00:08:28.980 --> 00:08:35.430
发生而不看

00:08:32.880 --> 00:08:37.740
实际的代码，所以我建议

00:08:35.430 --> 00:08:40.020
去追踪器，检查是否有

00:08:37.740 --> 00:08:44.190
已经存在的问题是

00:08:40.020 --> 00:08:47.240
刚刚报告，狗必须得到它

00:08:44.190 --> 00:08:52.890
修复，所以现在这个问题是关于

00:08:47.240 --> 00:08:53.630
 Kotlin关于2016年点的任何新功能

00:08:52.890 --> 00:08:57.740
二

00:08:53.630 --> 00:09:04.300
成本不高，但如果您有

00:08:57.740 --> 00:09:04.300
实际上要使用的几个功能

00:09:05.829 --> 00:09:19.339
将其更新为最近的

00:09:13.310 --> 00:09:24.339
你知道他会在2016年建立

00:09:19.339 --> 00:09:27.889
两点一，你已经可以尝试

00:09:24.339 --> 00:09:32.300
新的拥抱插件版本已更新为

00:09:27.889 --> 00:09:35.630
一分零分三分所以新

00:09:32.300 --> 00:09:40.100
功能有点聪明的代码

00:09:35.630 --> 00:09:44.170
完成，所以现在它尊重一些

00:09:40.100 --> 00:09:50.660
具体陈述，例如by和in和

00:09:44.170 --> 00:09:56.000
建议聪明的完成他们都是

00:09:50.660 --> 00:09:58.370
他们也可以使用新动作

00:09:56.000 --> 00:10:00.860
先前左右移动元素

00:09:58.370 --> 00:10:05.089
为Java添加的，因此现在可以使用

00:10:00.860 --> 00:10:07.689
棉花和棉花字节码到窗口

00:10:05.089 --> 00:10:11.689
还可以得到一个反编译按钮

00:10:07.689 --> 00:10:14.149
反编译您的字节码并查看

00:10:11.689 --> 00:10:20.480
棉花源代码，我相信

00:10:14.149 --> 00:10:27.490
还有更多，敬请期待， 

00:10:20.480 --> 00:10:34.300
第二个问题是关于检查和

00:10:27.490 --> 00:10:37.970
问题很痛苦，所以问题是

00:10:34.300 --> 00:10:41.439
是的，当我们一次

00:10:37.970 --> 00:10:44.779
我们已经完成了检查变更

00:10:41.439 --> 00:10:46.490
我想我现在可以回答，因为它

00:10:44.779 --> 00:10:49.490
与他们的新功能无关

00:10:46.490 --> 00:10:52.990
它基本上问我们是否可以

00:10:49.490 --> 00:10:56.509
 IntelliJ IDEA显示与以下问题有关

00:10:52.990 --> 00:10:59.630
哦，不仅当前打开文件，而且

00:10:56.509 --> 00:11:02.449
例如项目中的旧文件

00:10:59.630 --> 00:11:07.160
就像叶子一样，我们确实有

00:11:02.449 --> 00:11:09.139
计划，我们考虑这样的选择

00:11:07.160 --> 00:11:10.430
还没有准备好，所以我真的希望

00:11:09.139 --> 00:11:13.329
自己看

00:11:10.430 --> 00:11:16.310
到目前为止，您可以启用自动

00:11:13.329 --> 00:11:19.819
编译您的编译器设置，然后

00:11:16.310 --> 00:11:25.310
您会看到问题工具窗口

00:11:19.819 --> 00:11:28.579
可能就是你真正的

00:11:25.310 --> 00:11:32.120
需要，但我们仍有计划

00:11:28.579 --> 00:11:33.500
为此增加了更好的支持，但是它

00:11:32.120 --> 00:11:37.939
还没准备好

00:11:33.500 --> 00:11:40.660
另一个问题是关于何时

00:11:37.939 --> 00:11:44.540
春季相关网络研讨会

00:11:40.660 --> 00:11:49.720
将会如此，我想我会发送一个

00:11:44.540 --> 00:11:49.720
链接它将在几天内

00:11:50.470 --> 00:12:00.350
是的，另一个问题是

00:11:57.589 --> 00:12:02.990
调试器是否有所改进

00:12:00.350 --> 00:12:06.230
最终进入pycharm 

00:12:02.990 --> 00:12:09.019
也可以肯定，所以pycharm是关于

00:12:06.230 --> 00:12:11.779
即将发布，它将

00:12:09.019 --> 00:12:15.500
从改进中获得全部收益

00:12:11.779 --> 00:12:18.009
来自IntelliJ IDEA，我想就是这样

00:12:15.500 --> 00:12:21.980
现在好极了

00:12:18.009 --> 00:12:28.639
所以我继续下一个

00:12:21.980 --> 00:12:29.930
是版本控制的更改，因此

00:12:28.639 --> 00:12:32.569
他们对

00:12:29.930 --> 00:12:33.860
版本控制很好，我不应该

00:12:32.569 --> 00:12:35.019
不应该说我没有小的改进

00:12:33.860 --> 00:12:37.130
知道花了多少精力

00:12:35.019 --> 00:12:39.620
实施它们，但从

00:12:37.130 --> 00:12:41.420
用户的观点有一些不错的

00:12:39.620 --> 00:12:43.579
版本有一些不错的变化

00:12:41.420 --> 00:12:44.990
控制不是很大的影响

00:12:43.579 --> 00:12:48.110
这改变了你的工作方式

00:12:44.990 --> 00:12:50.389
首先，我认为是

00:12:48.110 --> 00:12:53.600
可能是针对我的一些人

00:12:50.389 --> 00:12:56.350
挫折让我只是打开正确的门

00:12:53.600 --> 00:12:56.350
为此项目

00:12:57.590 --> 00:13:02.840
日志窗口中有许多

00:12:59.690 --> 00:13:06.020
改进，以便在版本控制中

00:13:02.840 --> 00:13:07.490
记录此窗口的性能

00:13:06.020 --> 00:13:09.350
比以前好多了

00:13:07.490 --> 00:13:11.330
是将更改加载到

00:13:09.350 --> 00:13:12.860
背景等等，而不是在

00:13:11.330 --> 00:13:13.940
我注意到的过去是

00:13:12.860 --> 00:13:16.460
你来到这个窗口需要一个

00:13:13.940 --> 00:13:18.320
加载一会儿，我发现

00:13:16.460 --> 00:13:20.210
加载要快得多

00:13:18.320 --> 00:13:21.920
还有更新的进度条

00:13:20.210 --> 00:13:23.930
出现在这些按钮的下方

00:13:21.920 --> 00:13:25.760
当它加载一些更改，但我已经

00:13:23.930 --> 00:13:27.950
自新版以来只看到过两次

00:13:25.760 --> 00:13:29.510
更新，因为更改已加载，因此

00:13:27.950 --> 00:13:32.390
很快，这个的表现

00:13:29.510 --> 00:13:37.450
屏幕要好得多

00:13:32.390 --> 00:13:37.450
这里的变化是

00:13:38.410 --> 00:13:43.640
如果我们要选择多个

00:13:40.940 --> 00:13:46.190
像这样提交一些文件

00:13:43.640 --> 00:13:47.779
一些信息和在这里提交

00:13:46.190 --> 00:13:49.430
同时选择一些不同的文件

00:13:47.779 --> 00:13:51.230
这些提交，我们可以看到合并

00:13:49.430 --> 00:13:53.420
这些提交的价值，我们可以看到

00:13:51.230 --> 00:13:55.490
消息，我们可以看到所有文件

00:13:53.420 --> 00:13:57.500
改变了，这是一个很好的方法

00:13:55.490 --> 00:13:59.450
看到你知道你是否想参加

00:13:57.500 --> 00:14:01.279
快速查看分支上的一些更改

00:13:59.450 --> 00:14:06.560
这些改变了多少

00:14:01.279 --> 00:14:08.570
个人提交和另一个快速

00:14:06.560 --> 00:14:11.720
变化是使用导航的能力

00:14:08.570 --> 00:14:13.190
命令l，如果您想知道哪个

00:14:11.720 --> 00:14:15.500
我正在使用的快捷方式在

00:14:13.190 --> 00:14:17.839
屏幕底部的命令L或

00:14:15.500 --> 00:14:20.330
 Windows和Linux的控件L需要

00:14:17.839 --> 00:14:23.060
您进入搜索框，这样我就可以

00:14:20.330 --> 00:14:27.980
键入搜索并找出任何

00:14:23.060 --> 00:14:30.410
出现在下面的消息然后找到

00:14:27.980 --> 00:14:34.640
任何提及Landers的提交

00:14:30.410 --> 00:14:36.350
举例说明有很多东西

00:14:34.640 --> 00:14:39.589
的改进围绕着应用

00:14:36.350 --> 00:14:41.330
补丁，所以一开始有几个

00:14:39.589 --> 00:14:44.110
应用这些的不同方式

00:14:41.330 --> 00:14:48.100
首先打补丁

00:14:44.110 --> 00:14:54.700
如果我们有像我们拖曳我们的东西

00:14:48.100 --> 00:14:56.500
修补到将打开的想法窗口中

00:14:54.700 --> 00:14:58.540
编码现场演示始终是

00:14:56.500 --> 00:15:06.520
这就是等待发生的事情

00:14:58.540 --> 00:15:09.580
应该让我们再试一次

00:15:06.520 --> 00:15:11.050
将会打开“应用补丁”对话框

00:15:09.580 --> 00:15:14.700
从将补丁拖到窗口中

00:15:11.050 --> 00:15:14.700
然后您可以应用该补丁

00:15:17.220 --> 00:15:23.310
您也可以说补丁是文本

00:15:20.670 --> 00:15:26.939
如果您具有以下一项，也可以

00:15:23.310 --> 00:15:29.399
如果我选择

00:15:26.939 --> 00:15:31.529
内容，然后民间搬家

00:15:29.399 --> 00:15:32.730
重点回到我还没有的IDE 

00:15:31.529 --> 00:15:34.800
任何我不需要做的新闻

00:15:32.730 --> 00:15:36.149
任何会自动尝试的东西

00:15:34.800 --> 00:15:37.589
并应用该补丁，现在是

00:15:36.149 --> 00:15:39.180
如果有人发送电子邮件，此功能特别有用

00:15:37.589 --> 00:15:40.949
您是补丁程序，还是看到补丁程序文件

00:15:39.180 --> 00:15:42.209
在网络应用程序上

00:15:40.949 --> 00:15:43.980
就像那样，你不想

00:15:42.209 --> 00:15:45.870
下载您刚刚的物理文件

00:15:43.980 --> 00:15:47.399
把它放在剪贴板上

00:15:45.870 --> 00:15:49.199
应用这些补丁的有效方法

00:15:47.399 --> 00:15:51.089
发生的另一件事

00:15:49.199 --> 00:15:52.709
关于应用补丁的是IntelliJ 

00:15:51.089 --> 00:15:55.470
刚刚变得更聪明

00:15:52.709 --> 00:15:57.540
例如在此处应用这些补丁

00:15:55.470 --> 00:16:00.660
告诉我我缺少基本文件

00:15:57.540 --> 00:16:04.649
因为此文件自

00:16:00.660 --> 00:16:06.810
补丁已创建，因此我可以选择

00:16:04.649 --> 00:16:08.639
可以选择更新的文件

00:16:06.810 --> 00:16:10.470
它将尝试做很多事情

00:16:08.639 --> 00:16:12.389
自动为您服务，这样您就不会

00:16:10.470 --> 00:16:14.759
必须做那些手动步骤

00:16:12.389 --> 00:16:16.589
我也无法复制

00:16:14.759 --> 00:16:19.050
在任何情况下

00:16:16.589 --> 00:16:21.569
这些补丁现在可以神奇地

00:16:19.050 --> 00:16:23.430
应用，但如果您在

00:16:21.569 --> 00:16:25.110
定期应用补丁的过程

00:16:23.430 --> 00:16:34.290
您应该会看到一些改进

00:16:25.110 --> 00:16:39.560
区域和其他变化之一

00:16:34.290 --> 00:16:44.230
就像是让我们打开

00:16:39.560 --> 00:16:44.230
如果我创建一个新文件，请在此文件

00:16:44.380 --> 00:16:52.430
我们称它为文件，如果我忘记了

00:16:50.450 --> 00:16:53.810
添加它以获取或决定

00:16:52.430 --> 00:16:56.990
开始我不会添加它来得到

00:16:53.810 --> 00:17:03.040
当我真正去尝试并承诺

00:16:56.990 --> 00:17:06.660
我可以做的任何改变

00:17:03.040 --> 00:17:09.610
现在在这里看到我所有的版本文件

00:17:06.660 --> 00:17:12.010
所以如果我忘记提交这个文件

00:17:09.610 --> 00:17:13.750
忘记添加它来获取它，或者它来了

00:17:12.010 --> 00:17:16.000
从另一个系统也许我也许

00:17:13.750 --> 00:17:18.579
此文件不是通过IntelliJ添加的

00:17:16.000 --> 00:17:20.650
它将允许您选择这些新

00:17:18.579 --> 00:17:22.270
文件，这样您就不会意外忘记

00:17:20.650 --> 00:17:30.000
提交可能是生成的文件等等

00:17:22.270 --> 00:17:33.730
依此类推，让我们提交

00:17:30.000 --> 00:17:37.150
另一个变化是只重命名

00:17:33.730 --> 00:17:40.090
他们以您期望的方式工作

00:17:37.150 --> 00:17:42.460
它们可以在Mac和Mac上使用

00:17:40.090 --> 00:17:47.770
 Windows，所以我在这里使用Mac，所以让我们

00:17:42.460 --> 00:17:51.640
说我重命名了这个文件，但是我称它为

00:17:47.770 --> 00:18:01.210
我只是用不同的情况归档

00:17:51.640 --> 00:18:07.929
提到那个，让我们看看那是

00:18:01.210 --> 00:18:12.820
有了新名称，就可以提交了

00:18:07.929 --> 00:18:15.340
正确地，如果我们回到日志， 

00:18:12.820 --> 00:18:19.150
可以看到我们有两个文件

00:18:15.340 --> 00:18:22.799
不同的情况，然后说我

00:18:19.150 --> 00:18:22.799
在此处回滚到此提交

00:18:29.650 --> 00:18:38.350
正确的情况，所以这些都是

00:18:35.350 --> 00:18:40.570
主要突出变化的

00:18:38.350 --> 00:18:48.760
发生在IntelliJ中的版本控制

00:18:40.570 --> 00:18:52.630
 IDEA 2016要点2接下来让我们介绍一下

00:18:48.760 --> 00:18:54.970
一些检查变更主要是

00:18:52.630 --> 00:18:56.500
检查周围的工具窗口有

00:18:54.970 --> 00:18:58.510
经过重新设计，您会注意到这一点

00:18:56.500 --> 00:19:05.650
只要您先运行第一个

00:18:58.510 --> 00:19:07.720
我看一套检查

00:19:05.650 --> 00:19:09.400
结果在这里，所以我已经

00:19:07.720 --> 00:19:11.920
通过说分析的过程

00:19:09.400 --> 00:19:13.570
检查代码并选择一个配置文件

00:19:11.920 --> 00:19:15.490
检查，这是我的结果

00:19:13.570 --> 00:19:16.900
这是相当熟悉的，但是现在当你

00:19:15.490 --> 00:19:21.070
单击您将看到的其中一项

00:19:16.900 --> 00:19:24.310
这里的代码是整个代码区

00:19:21.070 --> 00:19:26.200
围绕检查违规等等

00:19:24.310 --> 00:19:29.200
这使我可以做一些

00:19:26.200 --> 00:19:32.920
我可以应用不同的东西

00:19:29.200 --> 00:19:35.530
建议的更改在这里我可以抑制

00:19:32.920 --> 00:19:39.730
此检查的陈述

00:19:35.530 --> 00:19:45.070
该类的方法，我可以进入这里

00:19:39.730 --> 00:19:47.440
如果我愿意，可以操纵代码

00:19:45.070 --> 00:19:49.739
可以在这里的lambda上进行替换，或者如果我

00:19:47.440 --> 00:19:53.229
希望我能

00:19:49.739 --> 00:19:55.629
直接导航到代码，然后

00:19:53.229 --> 00:19:58.139
在上下文中查看代码

00:19:55.629 --> 00:20:01.029
像我以前那样的整个文件

00:19:58.139 --> 00:20:02.499
这只是一个不错的快速方法

00:20:01.029 --> 00:20:04.960
能够通过您的检查

00:20:02.499 --> 00:20:07.299
结果并应用更改（如果您

00:20:04.960 --> 00:20:09.190
想要我发现这特别有用

00:20:07.299 --> 00:20:11.919
当我尝试迁移一些我的

00:20:09.190 --> 00:20:14.200
代码以作业8例如我正在使用

00:20:11.919 --> 00:20:16.539
 Java语言Java语言级别

00:20:14.200 --> 00:20:21.239
迁移帮助很多，看看哪个

00:20:16.539 --> 00:20:21.239
我可以申请这些检查之一

00:20:29.159 --> 00:20:34.840
还有一个新的检查

00:20:33.070 --> 00:20:37.330
通常在大多数新产品中进行新检查

00:20:34.840 --> 00:20:38.859
他们倾向于弹出的ide版本

00:20:37.330 --> 00:20:40.599
而你不想要并没有真正保持

00:20:38.859 --> 00:20:45.729
最新，并注意到他们，所以让我们有

00:20:40.599 --> 00:20:47.169
看看这里的新检查

00:20:45.729 --> 00:20:48.609
实际应用过滤器来找出

00:20:47.169 --> 00:20:50.710
出现了哪些新检查

00:20:48.609 --> 00:20:52.029
我正在运行2016的最新版本

00:20:50.710 --> 00:20:55.059
点对点一

00:20:52.029 --> 00:20:56.919
 EAP，这就是我的版本

00:20:55.059 --> 00:20:58.509
到了这里，但假设我要一个

00:20:56.919 --> 00:21:02.679
看一下2016年的新检查

00:20:58.509 --> 00:21:04.450
第二点，这是一项新的检查

00:21:02.679 --> 00:21:07.359
告诉您是否要创建新的

00:21:04.450 --> 00:21:09.639
像equals hash这样的方法中的对象

00:21:07.359 --> 00:21:11.619
代码相比，因为

00:21:09.639 --> 00:21:13.960
特别是定期使用方法

00:21:11.619 --> 00:21:15.669
内部收藏等等，如果

00:21:13.960 --> 00:21:18.070
您正在创建一个全新的对象

00:21:15.669 --> 00:21:20.019
在equals方法中，例如您

00:21:18.070 --> 00:21:23.529
可能会受到重大处罚

00:21:20.019 --> 00:21:25.239
通过启用此非常启用来实现

00:21:23.529 --> 00:21:26.739
这次检查并运行

00:21:25.239 --> 00:21:28.840
检查您可能会发现一些地方

00:21:26.739 --> 00:21:40.890
您可以在其中快速获得一些性能

00:21:28.840 --> 00:21:47.220
赢了，所以有一种主要的

00:21:40.890 --> 00:21:48.330
我刚带的检查区域

00:21:47.220 --> 00:21:49.170
看看是否还有更多

00:21:48.330 --> 00:21:50.910
问题

00:21:49.170 --> 00:21:57.810
我想我会停下来提问

00:21:50.910 --> 00:22:03.390
下一节好吧，接下来一些

00:21:57.810 --> 00:22:05.280
编辑器周围的变化，我们有一些

00:22:03.390 --> 00:22:08.040
明显的变化，例如面包屑

00:22:05.280 --> 00:22:10.770
 Java我们支持连字和

00:22:08.040 --> 00:22:15.690
我们还有更多的写作支持

00:22:10.770 --> 00:22:17.610
您可能拥有的正则表达式

00:22:15.690 --> 00:22:20.850
注意到我在这里启用了面包屑

00:22:17.610 --> 00:22:23.190
您可以在此处看到顶部和顶部栏

00:22:20.850 --> 00:22:25.350
无论我在哪里，无论光标在哪里

00:22:23.190 --> 00:22:29.100
告诉我我在哪堂课上

00:22:25.350 --> 00:22:30.840
我正在使用的方法，这似乎是一个相当

00:22:29.100 --> 00:22:33.510
在我这样的情况下很简单

00:22:30.840 --> 00:22:34.860
只是在类中的方法中

00:22:33.510 --> 00:22:37.380
一旦我们开始进入嵌套

00:22:34.860 --> 00:22:42.180
让我们来看看那些测试

00:22:37.380 --> 00:22:45.720
我们很早就开始寻找

00:22:42.180 --> 00:22:49.020
当我们在里面时，让我们最小化

00:22:45.720 --> 00:22:50.970
在lambda内时的按钮

00:22:49.020 --> 00:22:52.290
表达式，然后我们可以看到哪种方法

00:22:50.970 --> 00:22:57.300
的事实，我们在

00:22:52.290 --> 00:23:01.080
 lambda我们可以，如果我们去嵌套

00:22:57.300 --> 00:23:05.160
我们有一个顶级班级的班级

00:23:01.080 --> 00:23:06.630
还有内部类和方法，然后我们

00:23:05.160 --> 00:23:08.580
面包屑告诉我们确切的位置

00:23:06.630 --> 00:23:09.750
在每种情况下，这是

00:23:08.580 --> 00:23:11.250
您可能想要选择的东西

00:23:09.750 --> 00:23:13.230
用复杂的代码打开

00:23:11.250 --> 00:23:15.870
或广泛使用事物的代码

00:23:13.230 --> 00:23:21.450
例如lambda表达式，或者您可以打开

00:23:15.870 --> 00:23:25.220
我正在使用查找动作来绑定它

00:23:21.450 --> 00:23:28.140
它关闭，但实际上您可以进入

00:23:25.220 --> 00:23:34.350
设置编辑器的一般外观和

00:23:28.140 --> 00:23:34.559
关闭显示面包屑，这样

00:23:34.350 --> 00:23:39.389
您

00:23:34.559 --> 00:23:42.539
打开或关闭它，另一个不错

00:23:39.389 --> 00:23:44.039
发生的改变是如果我们去

00:23:42.539 --> 00:23:47.429
使用lambda表达式的地方

00:23:44.039 --> 00:23:49.740
这里的Java代码有几个

00:23:47.429 --> 00:23:59.429
流中的lambda表达式

00:23:49.740 --> 00:24:02.309
我可以启用的设置我可以启用

00:23:59.429 --> 00:24:04.379
字体连字我必须选择一种字体

00:24:02.309 --> 00:24:09.990
支持像这样的字体连字

00:24:04.379 --> 00:24:11.909
例如这个或这个，所以我有

00:24:09.990 --> 00:24:13.679
知道我的字体支持

00:24:11.909 --> 00:24:18.809
文学，但如果我选择其中之一

00:24:13.679 --> 00:24:21.179
然后启用它，您将看到的是

00:24:18.809 --> 00:24:24.059
你的lambda表达式变成

00:24:21.179 --> 00:24:25.499
正确的箭头之类的东西不等于得到

00:24:24.059 --> 00:24:27.389
变成了数学符号， 

00:24:25.499 --> 00:24:28.950
等等，这只是一个

00:24:27.389 --> 00:24:33.539
渲染东西，所以我们应该能够

00:24:28.950 --> 00:24:34.649
说嘿，如果我输入的心情不相等，那么

00:24:33.539 --> 00:24:37.830
你可以看到它刚刚被转换

00:24:34.649 --> 00:24:39.240
直接使用新的表示形式

00:24:37.830 --> 00:24:40.529
在被窝里完全一样

00:24:39.240 --> 00:24:41.730
它只是在一个

00:24:40.529 --> 00:24:43.110
可能略有不同

00:24:41.730 --> 00:24:44.759
您喜欢使用的东西

00:24:43.110 --> 00:24:46.200
您使用的是更实用的样式

00:24:44.759 --> 00:24:50.070
编程或仅仅是什么

00:24:46.200 --> 00:24:52.470
让你更舒服我

00:24:50.070 --> 00:24:55.830
现在要为它辩护，所以我

00:24:52.470 --> 00:24:58.080
记得我实际上在哪一个

00:24:55.830 --> 00:25:02.159
您可以查看是否已启用此功能，但是

00:24:58.080 --> 00:25:04.110
我使用的是默认字体，然后

00:25:02.159 --> 00:25:08.240
不会看到你不会看到箭头和

00:25:04.110 --> 00:25:08.240
漂亮的等号或不等号

00:25:09.409 --> 00:25:14.290
的

00:25:10.780 --> 00:25:16.990
最终的新事物中的所有变化

00:25:14.290 --> 00:25:20.560
编辑者在帮助方面还有更多改进

00:25:16.990 --> 00:25:22.270
你写正则表达式，所以我不是

00:25:20.560 --> 00:25:24.220
确定你们，但我总是必须

00:25:22.270 --> 00:25:25.960
查找如何使用正则表达式

00:25:24.220 --> 00:25:29.620
 IntelliJ IDEA有很多东西

00:25:25.960 --> 00:25:31.510
帮助我们做到这一点，所以让我给你一个

00:25:29.620 --> 00:25:33.460
我有示例正则表达式

00:25:31.510 --> 00:25:34.720
只是用他们作弊，所以我没有

00:25:33.460 --> 00:25:37.480
必须手动将其键入

00:25:34.720 --> 00:25:38.620
确定我做对了，所以我们说

00:25:37.480 --> 00:25:42.280
我们有一个这样的正则表达式

00:25:38.620 --> 00:25:44.800
现在我们得到自动我们得到代码完成

00:25:42.280 --> 00:25:47.050
对于放在

00:25:44.800 --> 00:25:48.910
正则表达式，这样我就可以自动

00:25:47.050 --> 00:25:51.520
组上的完成代码完成

00:25:48.910 --> 00:25:53.080
名称，如果我使用它，我已经完成了

00:25:51.520 --> 00:25:55.420
我做错了

00:25:53.080 --> 00:25:57.880
情况下，我得到一些我得到

00:25:55.420 --> 00:25:59.110
错误报告给我，告诉我什么

00:25:57.880 --> 00:26:03.910
我这个常规做错了

00:25:59.110 --> 00:26:05.890
表达我当然也可以

00:26:03.910 --> 00:26:07.990
还检查我的正则表达式，并把

00:26:05.890 --> 00:26:09.730
在某些示例代码中

00:26:07.990 --> 00:26:15.910
文字以查看我是否可以找到比赛或

00:26:09.730 --> 00:26:22.660
不要因为我放回去

00:26:15.910 --> 00:26:26.380
故意有一个错误，所以

00:26:22.660 --> 00:26:28.900
接下来有一些小变化

00:26:26.380 --> 00:26:30.670
到用户界面，您可能会注意到

00:26:28.900 --> 00:26:32.790
对通知进行了一​​些更改， 

00:26:30.670 --> 00:26:35.470
添加背景图像的能力

00:26:32.790 --> 00:26:37.270
我有点期待的通知

00:26:35.470 --> 00:26:40.210
那里可能会弹出通知

00:26:37.270 --> 00:26:42.190
在使用UI的过程中有一点，但它

00:26:40.210 --> 00:26:43.690
到目前为止还没有，但是您会发现

00:26:42.190 --> 00:26:45.640
通知现在在

00:26:43.690 --> 00:26:47.110
右下角稍微

00:26:45.640 --> 00:26:49.780
气球，而不是右上角

00:26:47.110 --> 00:26:52.540
角落，您可以配置得到

00:26:49.780 --> 00:26:53.710
弹出的是什么

00:26:52.540 --> 00:26:57.160
无声无声

00:26:53.710 --> 00:26:59.290
信息或错误

00:26:57.160 --> 00:27:01.690
您可能会看到其中之一弹出

00:26:59.290 --> 00:27:04.060
正如我在整个过程中通常

00:27:01.690 --> 00:27:07.200
这是错误，尤其是在某些地方

00:27:04.060 --> 00:27:09.370
更不稳定的点点滴滴

00:27:07.200 --> 00:27:12.190
但有趣的是

00:27:09.370 --> 00:27:15.880
我可以在这里添加背景图片的能力

00:27:12.190 --> 00:27:17.539
可能想用我用过的一件事

00:27:15.880 --> 00:27:20.299
我打算去做

00:27:17.539 --> 00:27:25.519
寻找行动寻找背景

00:27:20.299 --> 00:27:28.489
图片，现在我可以导航到

00:27:25.519 --> 00:27:35.789
背景图片，让我们来选择

00:27:28.489 --> 00:27:37.619
所以如果我想骂

00:27:35.789 --> 00:27:38.879
我的用户界面看起来就可以添加

00:27:37.619 --> 00:27:42.509
背景图片，我可以做

00:27:38.879 --> 00:27:45.090
像调整树枝一样，它变得不透明

00:27:42.509 --> 00:27:47.190
看看代码的可读性

00:27:45.090 --> 00:27:49.019
该图像在其下方以及

00:27:47.190 --> 00:27:51.450
其他方式，你可以做到这一点，我得到了

00:27:49.019 --> 00:27:53.580
通过精细操作来导航

00:27:51.450 --> 00:28:02.359
到背景图片（如果有图片） 

00:27:53.580 --> 00:28:04.649
例如，在这里我也可以

00:28:02.359 --> 00:28:07.470
右键单击它，我可以将其设置为

00:28:04.649 --> 00:28:10.139
背景图片，如果我想要的话

00:28:07.470 --> 00:28:11.909
只是一种调整方式的好方法

00:28:10.139 --> 00:28:17.779
你是你的用户界面只是为了你自己

00:28:11.909 --> 00:28:21.749
个性化的亚洲人，所以有点

00:28:17.779 --> 00:28:23.429
一组基本的全面变更

00:28:21.749 --> 00:28:24.629
您可能如前所述会看到

00:28:23.429 --> 00:28:26.220
其中一些更改会在

00:28:24.629 --> 00:28:28.379
 pycharm等其他想法，以及

00:28:26.220 --> 00:28:31.499
等等还有其他问题吗

00:28:28.379 --> 00:28:35.539
到目前为止，我们只有一个

00:28:31.499 --> 00:28:39.149
有关版本控制支持的问题

00:28:35.539 --> 00:28:42.809
问题是关于新

00:28:39.149 --> 00:28:48.299
 VCS功能仅适用于git或VN为

00:28:42.809 --> 00:28:50.909
基本上，日志改进

00:28:48.299 --> 00:28:55.499
只能忘记，我相信所有

00:28:50.909 --> 00:28:59.249
其余所有其余的应该工作

00:28:55.499 --> 00:29:03.320
阿里安也是，当然也要用

00:28:59.249 --> 00:29:09.109
仅重命名的情况下也只能忘记

00:29:03.320 --> 00:29:13.049
是的，谢谢你

00:29:09.109 --> 00:29:16.799
所以接下来的两个主要领域

00:29:13.049 --> 00:29:18.389
春天我提到大脑有一个

00:29:16.799 --> 00:29:20.070
春季专题网络研讨会

00:29:18.389 --> 00:29:21.330
基本上有很多功能

00:29:20.070 --> 00:29:23.580
春天的东西在那里值得

00:29:21.330 --> 00:29:24.479
它在本周一举行的网络研讨会

00:29:23.580 --> 00:29:25.919
那是星期一

00:29:24.479 --> 00:29:29.309
所以我不会涵盖任何这些

00:29:25.919 --> 00:29:31.019
在此网络研讨会中的功能

00:29:29.309 --> 00:29:33.239
接下来我要讲的是

00:29:31.019 --> 00:29:35.549
我现在需要涵盖的两个主要领域

00:29:33.239 --> 00:29:38.639
一是与之整合的变化

00:29:35.549 --> 00:29:40.739
数据库，第二个是围绕

00:29:38.639 --> 00:29:42.419
 JavaScript的很多改进，所以

00:29:40.739 --> 00:29:45.059
让我们继续前进，看看它在

00:29:42.419 --> 00:29:47.639
当今基于工具的变化以及

00:29:45.059 --> 00:29:49.080
在这里你可以看到很多

00:29:47.639 --> 00:29:50.430
新功能的实施

00:29:49.080 --> 00:29:51.990
所以我不会读所有这些

00:29:50.430 --> 00:29:59.610
现在，我将逐步通过它们， 

00:29:51.990 --> 00:30:03.530
在我们进行演示时演示一下，让我找到我吧

00:29:59.610 --> 00:30:13.850
我用数据库找到一个项目

00:30:03.530 --> 00:30:17.610
整合首先是其中之一

00:30:13.850 --> 00:30:19.950
添加的是代码完成

00:30:17.610 --> 00:30:22.470
自动完成数据库名称

00:30:19.950 --> 00:30:32.730
当我们添加数据源时，让我添加

00:30:22.470 --> 00:30:33.549
这里有新的数据源，哦，抱歉，我

00:30:32.730 --> 00:30:35.169
可以看到

00:30:33.549 --> 00:30:38.669
我得到所有数据库的列表

00:30:35.169 --> 00:30:41.769
我可以使用此数据库连接

00:30:38.669 --> 00:30:42.909
可以测试那只是一种

00:30:41.769 --> 00:30:45.129
确保我们不会得到帮助的有用的东西

00:30:42.909 --> 00:30:48.340
任何遗漏的输入错误

00:30:45.129 --> 00:30:50.860
实际上名称中的数据库

00:30:48.340 --> 00:30:53.289
 IntelliJ版本有很多不错的功能

00:30:50.860 --> 00:30:54.999
自动方式的改进

00:30:53.289 --> 00:30:56.739
代码完成工作的方式

00:30:54.999 --> 00:30:59.139
特别是不同地区的数量

00:30:56.739 --> 00:31:04.269
围绕数据库，所以它给您很多

00:30:59.139 --> 00:31:06.999
接下来会有更多帮助

00:31:04.269 --> 00:31:10.239
开放会令我们熟悉

00:31:06.999 --> 00:31:11.859
再次备份，以便在项目中

00:31:10.239 --> 00:31:14.289
看代码等等

00:31:11.859 --> 00:31:16.059
您可以选择自动滚动

00:31:14.289 --> 00:31:18.429
从源自动滚动

00:31:16.059 --> 00:31:21.129
我们可能会在一天中使用的东西

00:31:18.429 --> 00:31:22.899
每天，现在可用

00:31:21.129 --> 00:31:25.929
在数据库窗口中为我们服务

00:31:22.899 --> 00:31:30.309
如果启用，请使用编辑器中的自动滚动

00:31:25.929 --> 00:31:35.289
那当我说这是

00:31:30.309 --> 00:31:37.269
编辑器，然后是正确的表或

00:31:35.289 --> 00:31:44.169
例行或将突出显示的内容

00:31:37.269 --> 00:31:44.570
在这里的右侧，或者如果我

00:31:44.169 --> 00:31:50.920
决定

00:31:44.570 --> 00:31:53.300
关掉它我总是可以做到的

00:31:50.920 --> 00:31:58.760
始终可以通过按手动进行操作

00:31:53.300 --> 00:32:06.110
从顶部的编辑器按钮滚动

00:31:58.760 --> 00:32:08.270
右上角所以我在说

00:32:06.110 --> 00:32:18.170
关于代码完成的一点让我们

00:32:08.270 --> 00:32:26.840
如果我现在打开我的一个控制台

00:32:18.170 --> 00:32:30.560
我在输入续集声明时

00:32:26.840 --> 00:32:32.450
它期待一个表名，然后

00:32:30.560 --> 00:32:34.570
自动完成只会提示

00:32:32.450 --> 00:32:36.620
也许两个在他们身上，所以我可以

00:32:34.570 --> 00:32:38.780
种或植物或

00:32:36.620 --> 00:32:41.300
物种不会暗示像

00:32:38.780 --> 00:32:44.030
例行程序或其他非

00:32:41.300 --> 00:32:45.140
适合这个地方，所以它仍然

00:32:44.030 --> 00:32:46.400
只是使自动清除代码

00:32:45.140 --> 00:32:52.690
完成多一点

00:32:46.400 --> 00:32:56.150
有用的，少一点噪音， 

00:32:52.690 --> 00:32:59.570
还有一点是，我们现在有

00:32:56.150 --> 00:33:08.420
功能环绕让我展示给你

00:32:59.570 --> 00:33:17.270
一个例子，让我们将其设置为

00:33:08.420 --> 00:33:17.830
我们有一个合理的例子，让我们

00:33:17.270 --> 00:33:18.909
说我们有

00:33:17.830 --> 00:33:21.730
这样的事情有很多

00:33:18.909 --> 00:33:25.779
不同的许多不同的列

00:33:21.730 --> 00:33:28.649
我们想选择我是否有东西

00:33:25.779 --> 00:33:34.929
就像我甚至可以在这里使用多光标

00:33:28.649 --> 00:33:38.860
可以将环绕声与功能配合使用

00:33:34.929 --> 00:33:41.320
以及如果我键入

00:33:38.860 --> 00:33:43.809
骆驼的情况下，如果你喜欢那里的首字母缩写

00:33:41.320 --> 00:33:45.970
例程名称的版本

00:33:43.809 --> 00:33:48.250
建议，这样我就可以输入PDS 

00:33:45.970 --> 00:33:50.679
得到漂亮的显示字符串，所以我可以

00:33:48.250 --> 00:33:54.610
选择它，然后将其应用于

00:33:50.679 --> 00:33:56.250
这两件事，所以再次

00:33:54.610 --> 00:33:58.809
这只是另一件事，可以帮助我们

00:33:56.250 --> 00:34:00.250
帮助我们写这些东西

00:33:58.809 --> 00:34:04.110
不必做太多的代码

00:34:00.250 --> 00:34:04.110
与过去一样多的打字

00:34:06.539 --> 00:34:12.510
我们得到一些的另一个领域

00:34:08.790 --> 00:34:16.240
完成应该对我们有帮助

00:34:12.510 --> 00:34:19.690
表的值，所以如果我们添加一行

00:34:16.240 --> 00:34:22.929
我开始时说不是六个

00:34:19.690 --> 00:34:25.179
键入BI可以在这里完成一些工作

00:34:22.929 --> 00:34:26.770
所以它将为我提供

00:34:25.179 --> 00:34:29.320
从已经存在的B开始，如果

00:34:26.770 --> 00:34:36.960
我想使用那些或者我可以或者我可以

00:34:29.320 --> 00:34:39.839
如果我想选择一个新的

00:34:36.960 --> 00:34:41.550
有用的是我们不

00:34:39.839 --> 00:34:43.530
必须尽可能多地使用鼠标

00:34:41.550 --> 00:34:45.270
永远知道这永远是IntelliJ的目标

00:34:43.530 --> 00:34:47.790
 IDEA是使用键盘的能力

00:34:45.270 --> 00:34:52.349
快捷方式可以工作，所以现在我们

00:34:47.790 --> 00:34:55.409
可以使用命令移位来调整列的大小

00:34:52.349 --> 00:35:01.740
和箭头或Shift Ctrl和箭头

00:34:55.409 --> 00:35:04.200
 Windows和Linux终于围绕

00:35:01.740 --> 00:35:05.580
数据库集成是许多

00:35:04.200 --> 00:35:07.680
不同的选择很多

00:35:05.580 --> 00:35:10.920
有助于您使用的功能

00:35:07.680 --> 00:35:16.609
 Postgres作为您的数据库，因此首先

00:35:10.920 --> 00:35:21.119
能够编辑这样的范围类型

00:35:16.609 --> 00:35:29.609
还可以使用

00:35:21.119 --> 00:35:35.430
时区，最后是e如果我们开放

00:35:29.609 --> 00:35:38.339
这些控制台之一，我们可以添加，我们可以

00:35:35.430 --> 00:35:40.440
在我们的搜索中添加模式和数据库

00:35:38.339 --> 00:35:43.320
路径，所以说我们将其添加到我们的

00:35:40.440 --> 00:35:45.660
搜索路径，然后我们可以

00:35:43.320 --> 00:35:47.760
还要重新排序，所以如果我移动它

00:35:45.660 --> 00:35:49.740
然后到搜索路径的顶部

00:35:47.760 --> 00:35:52.440
该表中的选项将转到

00:35:49.740 --> 00:35:55.440
出现在其他选项上方，或者我可以

00:35:52.440 --> 00:35:58.440
从那里移动，然后当我

00:35:55.440 --> 00:36:02.060
输入一些东西给我

00:35:58.440 --> 00:36:02.060
植物或动物的不同选择

00:36:09.500 --> 00:36:12.290
我可以看到有几个

00:36:10.970 --> 00:36:13.700
有关数据库的问题

00:36:12.290 --> 00:36:16.869
集成，所以也许我们会把那些

00:36:13.700 --> 00:36:19.070
现在，在我们继续前进之前

00:36:16.869 --> 00:36:23.150
是的，有几个问题

00:36:19.070 --> 00:36:26.750
首先是这些数据库功能

00:36:23.150 --> 00:36:29.630
在数据组中可用是的，他们

00:36:26.750 --> 00:36:32.710
没有一个小组出去了，所有功能

00:36:29.630 --> 00:36:38.930
显示在这里也可用

00:36:32.710 --> 00:36:41.080
另一个问题是否凯伦

00:36:38.930 --> 00:36:49.099
可用于存储的帮助

00:36:41.080 --> 00:36:51.470
程序和触发器，以及一些

00:36:49.099 --> 00:36:54.740
现在已经支持一些数据库

00:36:51.470 --> 00:36:58.310
因此您可以打开存储过程或

00:36:54.740 --> 00:37:04.270
触发编辑，但对于某些触发

00:36:58.310 --> 00:37:10.609
不被支持，所以这取决于但我

00:37:04.270 --> 00:37:13.460
希望他们所做的一切都支持

00:37:10.609 --> 00:37:15.530
相信未来的发行版

00:37:13.460 --> 00:37:18.710
取决于您是否看到不起作用的东西

00:37:15.530 --> 00:37:27.109
只需向我们的跟踪报告，我们将

00:37:18.710 --> 00:37:31.070
使它工作，还有一个问题

00:37:27.109 --> 00:37:34.670
关于对dynamo DB的支持，不是

00:37:31.070 --> 00:37:37.250
支持呢，那是不安全的

00:37:34.670 --> 00:37:40.130
数据库，对，您有计划吗

00:37:37.250 --> 00:37:42.710
不支持单个数据库，但不支持

00:37:40.130 --> 00:37:46.280
不在不久的将来，但是绝对

00:37:42.710 --> 00:37:51.440
我们希望将其包含在数据组中

00:37:46.280 --> 00:37:52.910
和基于IntelliJ IDEA的ID，最后

00:37:51.440 --> 00:37:55.280
还有一个问题，但这不是关于

00:37:52.910 --> 00:37:59.510
数据库，但它发展得更大

00:37:55.280 --> 00:38:05.500
整合展开的问题是

00:37:59.510 --> 00:38:10.700
关于是否有任何改进

00:38:05.500 --> 00:38:14.230
我恐怕调试Gradle任务

00:38:10.700 --> 00:38:17.930
现在无法回答，但我喜欢哦

00:38:14.230 --> 00:38:22.390
是的，我会尝试在后续内容中进行介绍

00:38:17.930 --> 00:38:25.970
电子邮件，是的，坐吧，让它

00:38:22.390 --> 00:38:29.150
好吧，让我们继续前进

00:38:25.970 --> 00:38:30.320
 JavaScript发生变化，然后又像

00:38:29.150 --> 00:38:31.820
数据库更改了

00:38:30.320 --> 00:38:33.560
不同的JavaScript更改次数

00:38:31.820 --> 00:38:35.630
当然javascript是广泛的

00:38:33.560 --> 00:38:38.750
不同种类的雨伞

00:38:35.630 --> 00:38:41.330
这些天的技术，所以我会

00:38:38.750 --> 00:38:43.130
通过跳一个来演示一些

00:38:41.330 --> 00:38:44.780
一些不同的项目

00:38:43.130 --> 00:38:48.920
我们需要的补充

00:38:44.780 --> 00:38:53.450
支持工作，但首先

00:38:48.920 --> 00:38:53.840
空调脚本让我们看看我们有什么

00:38:53.450 --> 00:38:58.790
这里

00:38:53.840 --> 00:39:00.980
所以我们在ekam脚本中使用了六个IntelliJ IDEA 

00:38:58.790 --> 00:39:05.900
可以建议转换回调

00:39:00.980 --> 00:39:08.900
功能变成箭头功能，所以这

00:39:05.900 --> 00:39:10.520
对我来说，基本上是Java人士

00:39:08.900 --> 00:39:12.440
这与方法非常相似

00:39:10.520 --> 00:39:15.860
匿名内部类可以得到

00:39:12.440 --> 00:39:17.330
在Java中转换为Landers等

00:39:15.860 --> 00:39:19.310
在那里，您只需将C转换为

00:39:17.330 --> 00:39:22.580
错误功能，例如

00:39:19.310 --> 00:39:25.490
你有一个稍长的形式

00:39:22.580 --> 00:39:27.740
还为您提供转换的选项

00:39:25.490 --> 00:39:30.410
这些较长形式的速记

00:39:27.740 --> 00:39:33.590
好的，那就是一个新功能

00:39:30.410 --> 00:39:36.650
在IntelliJ IDEA 2016中已添加

00:39:33.590 --> 00:39:39.440
第二点和另一件事

00:39:36.650 --> 00:39:41.390
添加的是后缀完成

00:39:39.440 --> 00:39:43.220
我已经建立了一点

00:39:41.390 --> 00:39:44.480
知道您是否使用后缀补全

00:39:43.220 --> 00:39:45.620
我一直在得到的东西

00:39:44.480 --> 00:39:49.900
在Java中掌握一点

00:39:45.620 --> 00:39:53.360
世界，但允许您添加

00:39:49.900 --> 00:39:55.160
她你可能会错过打字的东西而不是

00:39:53.360 --> 00:39:57.230
不得不回到一个开始

00:39:55.160 --> 00:39:59.510
这行代码的想法是让您

00:39:57.230 --> 00:40:01.790
继续打字以便这样做

00:39:59.510 --> 00:40:04.430
例如我们在

00:40:01.790 --> 00:40:09.320
能够将某种东西变成一种形式

00:40:04.430 --> 00:40:12.350
并输入var，然后在此

00:40:09.320 --> 00:40:14.060
版本哦，我的天哪，我必须

00:40:12.350 --> 00:40:16.610
手指笨拙地遍布

00:40:14.060 --> 00:40:20.170
放置在这个版本中，我还可以

00:40:16.610 --> 00:40:24.410
如果我想把它变成一个const 

00:40:20.170 --> 00:40:29.630
我们称其版本，或者我也可以

00:40:24.410 --> 00:40:31.820
如果我选择的话，把东西变成一盏灯

00:40:29.630 --> 00:40:33.740
我们称该模板为

00:40:31.820 --> 00:40:35.720
完美的后缀完成只是一个

00:40:33.740 --> 00:40:36.280
允许您继续操作的好方法

00:40:35.720 --> 00:40:38.590
流

00:40:36.280 --> 00:40:40.750
因此必须将光标向后移动

00:40:38.590 --> 00:40:42.340
并转发你可以做点东西

00:40:40.750 --> 00:40:44.560
还有一些捷径可以

00:40:42.340 --> 00:40:46.180
您要做共同的功能，那

00:40:44.560 --> 00:40:50.230
适用于Java和JavaScript， 

00:40:46.180 --> 00:40:53.950
一堆其他地方，所以这是为了

00:40:50.230 --> 00:41:01.150
 Ekman脚本功能让我们继续

00:40:53.950 --> 00:41:03.070
反应功能，所以在这里我有一个

00:41:01.150 --> 00:41:05.530
我定义了自己的注释框

00:41:03.070 --> 00:41:07.210
道具类型，例如标题和作者

00:41:05.530 --> 00:41:11.020
当我开始实际使用此评论时

00:41:07.210 --> 00:41:13.780
盒IntelliJ IDEA将允许我使用它

00:41:11.020 --> 00:41:16.960
将提供完整的标题

00:41:13.780 --> 00:41:23.350
和作者道具类型，所以我得到一些

00:41:16.960 --> 00:41:26.740
不错的安全代码补全那里

00:41:23.350 --> 00:41:29.520
这里的其他更改和组件

00:41:26.740 --> 00:41:29.520
生命周期方法

00:41:29.910 --> 00:41:35.380
像Component这样的东西确实挂载了

00:41:33.190 --> 00:41:37.390
未显示为的其他数量

00:41:35.380 --> 00:41:39.220
在以前的版本中不再使用

00:41:37.390 --> 00:41:41.170
 IntelliJ这些显示为未使用

00:41:39.220 --> 00:41:42.970
这有点误导，所以现在这些

00:41:41.170 --> 00:41:46.119
显示为正确使用

00:41:42.970 --> 00:41:50.920
框架的一部分和另一件事

00:41:46.119 --> 00:41:52.330
是特定于反应的属性类型

00:41:50.920 --> 00:41:57.130
被支持，所以其中一些是

00:41:52.330 --> 00:41:59.290
像钥匙和他以及我个人的东西

00:41:57.130 --> 00:42:02.680
危险设置的收藏夹

00:41:59.290 --> 00:42:04.210
 HTML我喜欢任何可以调用

00:42:02.680 --> 00:42:06.340
危险感，所以现在

00:42:04.210 --> 00:42:08.200
支持部分汽车

00:42:06.340 --> 00:42:09.910
如果在IntelliJ IDEA中完成

00:42:08.200 --> 00:42:13.480
如果您正在与React和

00:42:09.910 --> 00:42:16.330
最后一个区域是如果我正在使用

00:42:13.480 --> 00:42:17.830
点击和代码之类的事件

00:42:16.330 --> 00:42:20.170
完成将给我大括号

00:42:17.830 --> 00:42:21.850
而不是给我报价，所以

00:42:20.170 --> 00:42:23.680
只是一个很好的功能，让我可以

00:42:21.850 --> 00:42:32.380
不必继续返回并删除

00:42:23.680 --> 00:42:38.850
事物或改变事物前进

00:42:32.380 --> 00:42:43.390
角2支持，我们现在有了一些新

00:42:38.850 --> 00:42:45.310
实时模板支持angular 2，所以我

00:42:43.390 --> 00:42:49.630
可以做类似ng 2的操作

00:42:45.310 --> 00:42:51.820
组件，那只会给我

00:42:49.630 --> 00:42:53.020
所有模板的东西，所以再次按照

00:42:51.820 --> 00:42:55.359
通常只是试图减少数量

00:42:53.020 --> 00:42:59.820
我必须要做的打字

00:42:55.359 --> 00:43:02.230
现在只需直接从

00:42:59.820 --> 00:43:08.650
从事物到我想去的任何地方

00:43:02.230 --> 00:43:11.440
另一个新功能是支持

00:43:08.650 --> 00:43:15.490
为了让内部结构指令如此

00:43:11.440 --> 00:43:21.820
如果我有类似的东西，比如说我有

00:43:15.490 --> 00:43:24.850
有div，我有g4 

00:43:21.820 --> 00:43:26.500
解锁，然后我可以放进去

00:43:24.850 --> 00:43:29.080
在这里，那将得到正确的

00:43:26.500 --> 00:43:32.910
在IntelliJ IDEA I内部受支持

00:43:29.080 --> 00:43:32.910
转所有项目

00:43:36.630 --> 00:43:43.320
最后的事情

00:43:39.900 --> 00:43:47.640
角度支持是如果我要创建一个新的

00:43:43.320 --> 00:43:49.710
项目，然后我可以使用我可以使用

00:43:47.640 --> 00:43:51.600
角度CLI，所以我选择一个静态

00:43:49.710 --> 00:43:53.310
网络，我可以使用角度CLI创建一个

00:43:51.600 --> 00:43:55.320
新项目，只要您有

00:43:53.310 --> 00:43:58.860
角CLI设置并安装在您的

00:43:55.320 --> 00:44:00.180
机器，所以再说一次

00:43:58.860 --> 00:44:02.460
和碎片只是为了让你的生活

00:44:00.180 --> 00:44:06.290
在工作周围一点点容易

00:44:02.460 --> 00:44:06.290
这些JavaScript框架中的一些

00:44:06.350 --> 00:44:14.910
最后一件事是构建

00:44:12.120 --> 00:44:17.730
配置，现在我能做什么

00:44:14.910 --> 00:44:22.380
让我们删除这个我可以做的是

00:44:17.730 --> 00:44:26.370
在运行或调试配置上，我可以

00:44:22.380 --> 00:44:29.700
现在添加咕unt声或咕unt声或吞咽声

00:44:26.370 --> 00:44:31.620
任务或NPN脚本并在我运行之前

00:44:29.700 --> 00:44:34.200
发射其他东西，例如说

00:44:31.620 --> 00:44:36.240
我在这里我开始跑步可能会有

00:44:34.200 --> 00:44:38.220
我想跑一些特别的东西

00:44:36.240 --> 00:44:40.890
在我每次这样做之前，我

00:44:38.220 --> 00:44:43.710
可能要编译我的CSS或我可能

00:44:40.890 --> 00:44:47.490
想执行特定任务，我可以做

00:44:43.710 --> 00:44:52.230
对于任何咕gr声或有任务在这里，所以

00:44:47.490 --> 00:44:54.630
我可以说我们在那儿， 

00:44:52.230 --> 00:44:55.920
那我每次都会

00:44:54.630 --> 00:45:01.530
我决定运行那个特定的时间

00:44:55.920 --> 00:45:03.480
最后构建或运行配置

00:45:01.530 --> 00:45:06.860
事情不是JavaScript之类的

00:45:03.480 --> 00:45:10.830
进入Web前端的一面是

00:45:06.860 --> 00:45:12.900
 HTML的配置设置，现在

00:45:10.830 --> 00:45:15.750
当您配置HTML时

00:45:12.900 --> 00:45:18.720
显然是设置偏好编辑器

00:45:15.750 --> 00:45:21.090
 HTML，我可以决定是否生成

00:45:18.720 --> 00:45:23.250
引号是单双或不是

00:45:21.090 --> 00:45:24.600
有什么所以这应该使生活成为

00:45:23.250 --> 00:45:28.790
努力时会轻松一点

00:45:24.600 --> 00:45:28.790
保持HTML代码的一致性

00:45:34.470 --> 00:45:38.980
几乎涵盖了主要数据

00:45:37.569 --> 00:45:40.990
我现在想谈的事情

00:45:38.980 --> 00:45:42.460
有足够的时间来解决任何一个

00:45:40.990 --> 00:45:44.559
本节其余问题

00:45:42.460 --> 00:45:47.760
我们刚刚涵盖了现在或任何一般

00:45:44.559 --> 00:45:49.720
有关IntelliJ IDEA的问题

00:45:47.760 --> 00:45:52.450
谢谢一定要好

00:45:49.720 --> 00:45:53.349
到目前为止，我们只有一个演讲

00:45:52.450 --> 00:45:59.970
更多问题

00:45:53.349 --> 00:46:04.900
关于角度CLI是否

00:45:59.970 --> 00:46:12.190
其UI是否与的UI相同

00:46:04.900 --> 00:46:14.710
咕咕gu的然后是唯一的UI角度

00:46:12.190 --> 00:46:19.780
 CLI提供性项目向导

00:46:14.710 --> 00:46:22.900
我不确定我是否知道

00:46:19.780 --> 00:46:28.210
问题，如果你能改写

00:46:22.900 --> 00:46:31.780
是的，尝试回答这个问题，但是基本上

00:46:28.210 --> 00:46:36.220
角度CLI只是一个选择

00:46:31.780 --> 00:46:43.299
项目签证优惠，没有其他用户界面

00:46:36.220 --> 00:46:47.890
可在ID内找到一个问题

00:46:43.299 --> 00:46:50.740
可能是这的延续

00:46:47.890 --> 00:46:53.290
有关角度CLI的问题，以便

00:46:50.740 --> 00:47:00.220
例如，我单击一个按钮以链接其

00:46:53.290 --> 00:47:05.890
项目对不起是的，仍然还是没有

00:47:00.220 --> 00:47:09.819
没有完全理解它，但不是

00:47:05.890 --> 00:47:14.170
不，不用担心，只需将其发送到

00:47:09.819 --> 00:47:18.700
 Twitter或参议院发表评论

00:47:14.170 --> 00:47:22.470
到他们将在何处发布的博客文章

00:47:18.700 --> 00:47:25.480
他们的经济将尽力回答

00:47:22.470 --> 00:47:28.599
确定或问任何问题给我， 

00:47:25.480 --> 00:47:32.200
 Trisha Trisha在上强调了GE e 

00:47:28.599 --> 00:47:36.010
 Twitter哦，我打算将其放在

00:47:32.200 --> 00:47:39.250
我忘了里面，有

00:47:36.010 --> 00:47:41.770
还有更多问题

00:47:39.250 --> 00:47:44.770
问题有可能取代想法

00:47:41.770 --> 00:47:46.299
用Gradle建立专案

00:47:44.770 --> 00:47:48.609
关于如何调用

00:47:46.299 --> 00:47:57.789
键以及构建项目动作

00:47:48.609 --> 00:48:01.359
如果我理解，在其他地方触发

00:47:57.789 --> 00:48:04.630
正确的问题是

00:48:01.359 --> 00:48:07.929
可能记得他们的捷径

00:48:04.630 --> 00:48:15.459
代替构建项目

00:48:07.929 --> 00:48:18.519
您可以在以下位置调用已编译的任务

00:48:15.459 --> 00:48:21.699
 Gradle我相信有可能，所以你

00:48:18.519 --> 00:48:24.130
你你你肯定不会改变

00:48:21.699 --> 00:48:26.709
更改从make删除快捷方式

00:48:24.130 --> 00:48:34.449
项目并为任何项目分配一个新项目

00:48:26.709 --> 00:48:37.959
 Task Gradle部分是的，我认为就是这样

00:48:34.449 --> 00:48:42.539
如果您还有其他问题， 

00:48:37.959 --> 00:48:45.519
是的，请随时在Twitter上询问他们，或者

00:48:42.539 --> 00:48:49.749
将它们发布为对

00:48:45.519 --> 00:48:52.839
录音绝对是的，我认为那是

00:48:49.749 --> 00:48:56.559
所以谢谢Trisha的介绍

00:48:52.839 --> 00:48:58.509
我想谢谢大家的时间

00:48:56.559 --> 00:49:01.380
对于您的问题请多加注意

00:48:58.509 --> 00:49:01.380
祝你有美好的一天

