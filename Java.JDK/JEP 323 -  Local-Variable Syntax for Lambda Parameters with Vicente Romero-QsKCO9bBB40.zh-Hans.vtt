WEBVTT
Kind: captions
Language: zh-Hans

00:00:03.319 --> 00:00:10.190
嗨，我叫维森特·罗梅罗（Vicente Romero），我在

00:00:07.410 --> 00:00:13.019
哈德森在甲骨文的工作团队和

00:00:10.190 --> 00:00:16.049
今天我要见一个介绍

00:00:13.019 --> 00:00:20.000
给杰夫三二三葬

00:00:16.049 --> 00:00:20.000
其他参数的语法

00:00:21.350 --> 00:00:27.480
在本节中，我们将讨论

00:00:24.029 --> 00:00:29.660
关于lambda的局部变量语法

00:00:27.480 --> 00:00:32.759
参数，这是一个新功能

00:00:29.660 --> 00:00:34.920
包含在Java SE 11中

00:00:32.759 --> 00:00:38.579
此功能与以前的功能有关

00:00:34.920 --> 00:00:41.760
功能名称局部变量类型

00:00:38.579 --> 00:00:45.180
推论有更广泛的目标

00:00:41.760 --> 00:00:47.789
受影响的局部变量

00:00:45.180 --> 00:00:50.160
一般比

00:00:47.789 --> 00:00:53.610
这个新功能正在讨论的参数

00:00:50.160 --> 00:00:56.309
关于员工对Java所做的更改

00:00:53.610 --> 00:01:02.609
语言规范和工具，例如

00:00:56.309 --> 00:01:05.760
嫉妒和每个贝壳当地的伯洛克

00:01:02.609 --> 00:01:08.040
类型推断扩展类型推断

00:01:05.760 --> 00:01:12.240
局部变量的校正

00:01:08.040 --> 00:01:15.299
与我已经在

00:01:12.240 --> 00:01:18.590
提供示例的编译器并进行推断

00:01:15.299 --> 00:01:21.810
局部变量的类型与

00:01:18.590 --> 00:01:25.200
从初始值设定项开始

00:01:21.810 --> 00:01:29.549
来自用户的信息，这导致

00:01:25.200 --> 00:01:40.640
较少的仪式，但保持Java完全静态

00:01:29.549 --> 00:01:46.009
类型安全其他局部变量语法

00:01:40.640 --> 00:01:50.430
纳米参数概述

00:01:46.009 --> 00:01:53.070
一致性，它使

00:01:50.430 --> 00:01:56.130
形式参数声明

00:01:53.070 --> 00:01:59.810
特别是用

00:01:56.130 --> 00:02:05.969
局部变量声明的语法

00:01:59.810 --> 00:02:08.610
确保所示的两个装饰

00:02:05.969 --> 00:02:14.030
 Java编译器允许在这里

00:02:08.610 --> 00:02:14.030
并被认为是等效的

00:02:16.760 --> 00:02:23.840
作为额外的好处

00:02:20.400 --> 00:02:28.320
注释可以应用于lambda 

00:02:23.840 --> 00:02:33.960
正式而不会失去Bertie 

00:02:28.320 --> 00:02:36.300
看到在这个例子中有一些

00:02:33.960 --> 00:02:38.130
限制使用当地

00:02:36.300 --> 00:02:41.370
参数的可变语法

00:02:38.130 --> 00:02:43.830
尽管它只能用于

00:02:41.370 --> 00:02:48.120
形式参数越来越多

00:02:43.830 --> 00:02:51.540
 lambda，用于一对一

00:02:48.120 --> 00:02:55.170
表达式中的参数应为

00:02:51.540 --> 00:02:59.130
因此用于守门员

00:02:55.170 --> 00:03:03.960
以下示例被认为是合法的

00:02:59.130 --> 00:03:07.590
通过编译器有一些

00:03:03.960 --> 00:03:09.810
其他限制，例如他

00:03:07.590 --> 00:03:11.790
决定应该为了

00:03:09.810 --> 00:03:15.990
保持简明扼要

00:03:11.790 --> 00:03:19.500
语法下面的例子是

00:03:15.990 --> 00:03:28.430
被Java语言视为非法

00:03:19.500 --> 00:03:31.410
编译器Oracle是

00:03:28.430 --> 00:03:35.190
 Java提供了大量的

00:03:31.410 --> 00:03:39.210
的开发工程

00:03:35.190 --> 00:03:42.090
 Java平台和开放JDK Oracle 

00:03:39.210 --> 00:03:46.200
提供生活水平的优质支持

00:03:42.090 --> 00:03:49.890
易于购买的低成本

00:03:46.200 --> 00:03:52.190
简单的定价层级，并感谢

00:03:49.890 --> 00:03:52.190
你看

00:03:52.560 --> 00:03:54.620
您

