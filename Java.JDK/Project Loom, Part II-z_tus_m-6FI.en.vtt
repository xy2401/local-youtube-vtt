WEBVTT
Kind: captions
Language: en

00:00:00.240 --> 00:00:01.910 align:start position:0%
 
so<00:00:00.359><c> now</c><00:00:00.480><c> your</c><00:00:00.659><c> code</c><00:00:00.870><c> is</c><00:00:01.020><c> executing</c><00:00:01.589><c> but</c><00:00:01.829><c> it</c>

00:00:01.910 --> 00:00:01.920 align:start position:0%
so now your code is executing but it
 

00:00:01.920 --> 00:00:03.740 align:start position:0%
so now your code is executing but it
doesn't<00:00:02.159><c> have</c><00:00:02.250><c> all</c><00:00:02.280><c> the</c><00:00:02.550><c> frames</c><00:00:02.730><c> all</c><00:00:03.510><c> the</c>

00:00:03.740 --> 00:00:03.750 align:start position:0%
doesn't have all the frames all the
 

00:00:03.750 --> 00:00:06.349 align:start position:0%
doesn't have all the frames all the
colors<00:00:04.049><c> on</c><00:00:04.200><c> the</c><00:00:04.290><c> stack</c><00:00:04.500><c> so</c><00:00:05.210><c> yields</c><00:00:06.210><c> gonna</c>

00:00:06.349 --> 00:00:06.359 align:start position:0%
colors on the stack so yields gonna
 

00:00:06.359 --> 00:00:09.080 align:start position:0%
colors on the stack so yields gonna
return<00:00:06.629><c> to</c><00:00:06.839><c> to</c><00:00:07.259><c> the</c><00:00:07.440><c> C</c><00:00:07.919><c> method</c><00:00:08.280><c> and</c><00:00:08.550><c> he's</c><00:00:08.910><c> gonna</c>

00:00:09.080 --> 00:00:09.090 align:start position:0%
return to to the C method and he's gonna
 

00:00:09.090 --> 00:00:12.520 align:start position:0%
return to to the C method and he's gonna
run<00:00:09.389><c> and</c><00:00:10.190><c> let's</c><00:00:11.190><c> say</c><00:00:11.340><c> C</c><00:00:11.400><c> now</c><00:00:11.849><c> wants</c><00:00:12.269><c> to</c><00:00:12.300><c> return</c>

00:00:12.520 --> 00:00:12.530 align:start position:0%
run and let's say C now wants to return
 

00:00:12.530 --> 00:00:16.670 align:start position:0%
run and let's say C now wants to return
who<00:00:13.530><c> is</c><00:00:13.710><c> C</c><00:00:13.950><c> C's</c><00:00:14.549><c> callers</c><00:00:14.880><c> C's</c><00:00:15.360><c> caller</c><00:00:15.570><c> is</c><00:00:15.719><c> B</c><00:00:15.900><c> but</c>

00:00:16.670 --> 00:00:16.680 align:start position:0%
who is C C's callers C's caller is B but
 

00:00:16.680 --> 00:00:19.189 align:start position:0%
who is C C's callers C's caller is B but
it's<00:00:16.800><c> not</c><00:00:16.920><c> in</c><00:00:17.070><c> a</c><00:00:17.130><c> socket</c><00:00:17.340><c> but</c><00:00:18.330><c> when</c><00:00:18.720><c> C</c><00:00:18.869><c> returns</c>

00:00:19.189 --> 00:00:19.199 align:start position:0%
it's not in a socket but when C returns
 

00:00:19.199 --> 00:00:22.210 align:start position:0%
it's not in a socket but when C returns
is<00:00:19.350><c> going</c><00:00:19.529><c> to</c><00:00:19.590><c> hit</c><00:00:19.740><c> that</c><00:00:19.890><c> return</c><00:00:20.250><c> barrier</c><00:00:20.609><c> and</c>

00:00:22.210 --> 00:00:22.220 align:start position:0%
is going to hit that return barrier and
 

00:00:22.220 --> 00:00:24.679 align:start position:0%
is going to hit that return barrier and
that<00:00:23.220><c> return</c><00:00:23.640><c> barrier</c><00:00:23.970><c> is</c><00:00:24.090><c> gonna</c><00:00:24.269><c> call</c><00:00:24.449><c> saw</c>

00:00:24.679 --> 00:00:24.689 align:start position:0%
that return barrier is gonna call saw
 

00:00:24.689 --> 00:00:28.339 align:start position:0%
that return barrier is gonna call saw
again<00:00:25.050><c> and</c><00:00:26.720><c> that's</c><00:00:27.720><c> gonna</c><00:00:27.900><c> copy</c><00:00:28.140><c> the</c><00:00:28.289><c> next</c>

00:00:28.339 --> 00:00:28.349 align:start position:0%
again and that's gonna copy the next
 

00:00:28.349 --> 00:00:33.229 align:start position:0%
again and that's gonna copy the next
frame<00:00:29.779><c> and</c><00:00:31.070><c> does</c><00:00:32.070><c> the</c><00:00:32.399><c> whole</c><00:00:32.550><c> thing</c><00:00:32.880><c> with</c><00:00:33.030><c> oops</c>

00:00:33.229 --> 00:00:33.239 align:start position:0%
frame and does the whole thing with oops
 

00:00:33.239 --> 00:00:35.450 align:start position:0%
frame and does the whole thing with oops
again<00:00:33.390><c> it's</c><00:00:34.200><c> going</c><00:00:34.350><c> to</c><00:00:34.410><c> turn</c><00:00:34.559><c> to</c><00:00:34.710><c> B</c><00:00:34.950><c> it's</c><00:00:35.340><c> gonna</c>

00:00:35.450 --> 00:00:35.460 align:start position:0%
again it's going to turn to B it's gonna
 

00:00:35.460 --> 00:00:38.660 align:start position:0%
again it's going to turn to B it's gonna
install<00:00:35.880><c> the</c><00:00:36.090><c> return</c><00:00:36.300><c> barrier</c><00:00:36.660><c> again</c><00:00:37.670><c> but</c>

00:00:38.660 --> 00:00:38.670 align:start position:0%
install the return barrier again but
 

00:00:38.670 --> 00:00:40.160 align:start position:0%
install the return barrier again but
then<00:00:38.820><c> it's</c><00:00:38.969><c> possible</c><00:00:39.360><c> that</c><00:00:39.480><c> B</c><00:00:39.719><c> doesn't</c><00:00:40.050><c> want</c>

00:00:40.160 --> 00:00:40.170 align:start position:0%
then it's possible that B doesn't want
 

00:00:40.170 --> 00:00:41.660 align:start position:0%
then it's possible that B doesn't want
to<00:00:40.230><c> return</c><00:00:40.379><c> to</c><00:00:40.440><c> a</c><00:00:40.590><c> like</c><00:00:41.160><c> said</c><00:00:41.340><c> it</c><00:00:41.460><c> could</c><00:00:41.550><c> be</c><00:00:41.579><c> a</c>

00:00:41.660 --> 00:00:41.670 align:start position:0%
to return to a like said it could be a
 

00:00:41.670 --> 00:00:43.580 align:start position:0%
to return to a like said it could be a
hundred<00:00:41.910><c> methods</c><00:00:42.420><c> deep</c><00:00:42.629><c> and</c><00:00:43.260><c> you're</c><00:00:43.379><c> only</c>

00:00:43.580 --> 00:00:43.590 align:start position:0%
hundred methods deep and you're only
 

00:00:43.590 --> 00:00:47.869 align:start position:0%
hundred methods deep and you're only
looping<00:00:44.070><c> at</c><00:00:44.250><c> the</c><00:00:44.340><c> topmost</c><00:00:44.550><c> few</c><00:00:45.420><c> frames</c><00:00:46.700><c> so</c><00:00:47.700><c> B</c>

00:00:47.869 --> 00:00:47.879 align:start position:0%
looping at the topmost few frames so B
 

00:00:47.879 --> 00:00:49.940 align:start position:0%
looping at the topmost few frames so B
is<00:00:47.940><c> going</c><00:00:48.090><c> to</c><00:00:48.149><c> call</c><00:00:48.360><c> let's</c><00:00:48.930><c> say</c><00:00:49.050><c> D</c><00:00:49.260><c> and</c><00:00:49.559><c> D</c><00:00:49.890><c> is</c>

00:00:49.940 --> 00:00:49.950 align:start position:0%
is going to call let's say D and D is
 

00:00:49.950 --> 00:00:53.110 align:start position:0%
is going to call let's say D and D is
going<00:00:50.070><c> to</c><00:00:50.129><c> yield</c><00:00:50.309><c> so</c><00:00:51.270><c> we</c><00:00:51.390><c> only</c><00:00:51.600><c> have</c><00:00:51.930><c> those</c>

00:00:53.110 --> 00:00:53.120 align:start position:0%
going to yield so we only have those
 

00:00:53.120 --> 00:00:58.369 align:start position:0%
going to yield so we only have those
those<00:00:54.120><c> frames</c><00:00:54.510><c> to</c><00:00:54.719><c> copy</c><00:00:56.149><c> so</c><00:00:57.149><c> the</c><00:00:57.600><c> cost</c><00:00:58.109><c> of</c><00:00:58.289><c> the</c>

00:00:58.369 --> 00:00:58.379 align:start position:0%
those frames to copy so the cost of the
 

00:00:58.379 --> 00:01:00.920 align:start position:0%
those frames to copy so the cost of the
operation<00:00:58.590><c> now</c><00:00:58.980><c> is</c><00:00:59.219><c> linear</c><00:00:59.910><c> and</c><00:01:00.210><c> the</c><00:01:00.600><c> amount</c>

00:01:00.920 --> 00:01:00.930 align:start position:0%
operation now is linear and the amount
 

00:01:00.930 --> 00:01:03.229 align:start position:0%
operation now is linear and the amount
of<00:01:01.050><c> stack</c><00:01:01.260><c> you've</c><00:01:01.500><c> used</c><00:01:01.920><c> in</c><00:01:02.219><c> the</c><00:01:02.280><c> last</c><00:01:02.940><c> time</c>

00:01:03.229 --> 00:01:03.239 align:start position:0%
of stack you've used in the last time
 

00:01:03.239 --> 00:01:04.789 align:start position:0%
of stack you've used in the last time
you've<00:01:03.359><c> continued</c><00:01:03.809><c> so</c><00:01:04.260><c> it's</c><00:01:04.350><c> basically</c><00:01:04.619><c> the</c>

00:01:04.789 --> 00:01:04.799 align:start position:0%
you've continued so it's basically the
 

00:01:04.799 --> 00:01:09.140 align:start position:0%
you've continued so it's basically the
overhead<00:01:05.220><c> is</c><00:01:05.400><c> is</c><00:01:06.060><c> constant</c><00:01:07.010><c> and</c><00:01:08.010><c> the</c><00:01:08.850><c> question</c>

00:01:09.140 --> 00:01:09.150 align:start position:0%
overhead is is constant and the question
 

00:01:09.150 --> 00:01:10.700 align:start position:0%
overhead is is constant and the question
is<00:01:09.299><c> whether</c><00:01:09.659><c> or</c><00:01:09.840><c> not</c><00:01:09.869><c> we</c><00:01:10.080><c> can</c><00:01:10.260><c> make</c><00:01:10.380><c> it</c><00:01:10.500><c> fast</c>

00:01:10.700 --> 00:01:10.710 align:start position:0%
is whether or not we can make it fast
 

00:01:10.710 --> 00:01:14.240 align:start position:0%
is whether or not we can make it fast
enough<00:01:12.020><c> so</c><00:01:13.020><c> actually</c><00:01:13.350><c> this</c><00:01:13.470><c> whole</c><00:01:13.830><c> copying</c>

00:01:14.240 --> 00:01:14.250 align:start position:0%
enough so actually this whole copying
 

00:01:14.250 --> 00:01:17.200 align:start position:0%
enough so actually this whole copying
thing<00:01:14.400><c> is</c><00:01:14.520><c> very</c><00:01:14.700><c> fast</c>

00:01:17.200 --> 00:01:17.210 align:start position:0%
 
 

00:01:17.210 --> 00:01:21.020 align:start position:0%
 
it's<00:01:18.210><c> hardly</c><00:01:19.009><c> you</c><00:01:20.009><c> know</c><00:01:20.100><c> it's</c><00:01:20.580><c> it's</c><00:01:20.880><c> nothing</c>

00:01:21.020 --> 00:01:21.030 align:start position:0%
it's hardly you know it's it's nothing
 

00:01:21.030 --> 00:01:23.870 align:start position:0%
it's hardly you know it's it's nothing
to<00:01:21.299><c> worry</c><00:01:21.450><c> about</c><00:01:21.770><c> the</c><00:01:22.770><c> cost</c><00:01:23.040><c> we've</c><00:01:23.430><c> hit</c><00:01:23.640><c> right</c>

00:01:23.870 --> 00:01:23.880 align:start position:0%
to worry about the cost we've hit right
 

00:01:23.880 --> 00:01:26.420 align:start position:0%
to worry about the cost we've hit right
now<00:01:23.909><c> is</c><00:01:24.689><c> the</c><00:01:25.049><c> operations</c><00:01:25.530><c> of</c><00:01:25.619><c> actually</c>

00:01:26.420 --> 00:01:26.430 align:start position:0%
now is the operations of actually
 

00:01:26.430 --> 00:01:27.859 align:start position:0%
now is the operations of actually
walking<00:01:26.670><c> the</c><00:01:26.850><c> frames</c><00:01:27.180><c> and</c><00:01:27.390><c> and</c><00:01:27.630><c> that</c><00:01:27.750><c> is</c>

00:01:27.859 --> 00:01:27.869 align:start position:0%
walking the frames and and that is
 

00:01:27.869 --> 00:01:29.149 align:start position:0%
walking the frames and and that is
something<00:01:28.080><c> that</c><00:01:28.200><c> we're</c><00:01:28.770><c> trying</c><00:01:28.920><c> to</c><00:01:29.009><c> make</c>

00:01:29.149 --> 00:01:29.159 align:start position:0%
something that we're trying to make
 

00:01:29.159 --> 00:01:31.640 align:start position:0%
something that we're trying to make
faster<00:01:29.520><c> but</c><00:01:30.210><c> the</c><00:01:30.420><c> more</c><00:01:30.720><c> interesting</c><00:01:30.869><c> bit</c><00:01:31.409><c> is</c>

00:01:31.640 --> 00:01:31.650 align:start position:0%
faster but the more interesting bit is
 

00:01:31.650 --> 00:01:33.980 align:start position:0%
faster but the more interesting bit is
extracting<00:01:32.490><c> loops</c><00:01:32.729><c> finding</c><00:01:33.270><c> the</c><00:01:33.390><c> finding</c><00:01:33.780><c> the</c>

00:01:33.980 --> 00:01:33.990 align:start position:0%
extracting loops finding the finding the
 

00:01:33.990 --> 00:01:35.600 align:start position:0%
extracting loops finding the finding the
references<00:01:34.500><c> and</c><00:01:34.680><c> the</c><00:01:34.770><c> stack</c><00:01:35.009><c> and</c><00:01:35.189><c> extracting</c>

00:01:35.600 --> 00:01:35.610 align:start position:0%
references and the stack and extracting
 

00:01:35.610 --> 00:01:38.960 align:start position:0%
references and the stack and extracting
them<00:01:36.049><c> and</c><00:01:37.049><c> that</c><00:01:37.200><c> is</c><00:01:37.350><c> something</c><00:01:38.280><c> that</c><00:01:38.430><c> regard</c>

00:01:38.960 --> 00:01:38.970 align:start position:0%
them and that is something that regard
 

00:01:38.970 --> 00:01:41.510 align:start position:0%
them and that is something that regard
here<00:01:39.180><c> from</c><00:01:39.390><c> the</c><00:01:39.570><c> Sock'em</c><00:01:39.869><c> office</c><00:01:40.200><c> is</c><00:01:41.189><c> going</c><00:01:41.460><c> to</c>

00:01:41.510 --> 00:01:41.520 align:start position:0%
here from the Sock'em office is going to
 

00:01:41.520 --> 00:01:43.910 align:start position:0%
here from the Sock'em office is going to
try<00:01:41.670><c> to</c><00:01:41.729><c> make</c><00:01:42.299><c> faster</c><00:01:42.659><c> maybe</c><00:01:42.810><c> by</c><00:01:43.049><c> generating</c>

00:01:43.910 --> 00:01:43.920 align:start position:0%
try to make faster maybe by generating
 

00:01:43.920 --> 00:01:46.429 align:start position:0%
try to make faster maybe by generating
some<00:01:44.159><c> native</c><00:01:44.880><c> code</c><00:01:45.030><c> instead</c><00:01:45.299><c> of</c><00:01:45.439><c> generating</c>

00:01:46.429 --> 00:01:46.439 align:start position:0%
some native code instead of generating
 

00:01:46.439 --> 00:01:49.359 align:start position:0%
some native code instead of generating
machine<00:01:46.890><c> code</c><00:01:47.040><c> instead</c><00:01:47.250><c> of</c><00:01:47.310><c> doing</c><00:01:47.549><c> in</c><00:01:47.640><c> a</c><00:01:47.700><c> seats</c>

00:01:49.359 --> 00:01:49.369 align:start position:0%
machine code instead of doing in a seats
 

00:01:49.369 --> 00:01:52.999 align:start position:0%
machine code instead of doing in a seats
the<00:01:50.369><c> fallback</c><00:01:50.729><c> is</c><00:01:51.270><c> if</c><00:01:52.049><c> we</c><00:01:52.290><c> cannot</c><00:01:52.649><c> get</c><00:01:52.829><c> it</c><00:01:52.950><c> to</c>

00:01:52.999 --> 00:01:53.009 align:start position:0%
the fallback is if we cannot get it to
 

00:01:53.009 --> 00:01:57.770 align:start position:0%
the fallback is if we cannot get it to
be<00:01:53.130><c> fast</c><00:01:53.340><c> enough</c><00:01:53.490><c> is</c><00:01:55.579><c> to</c><00:01:56.579><c> change</c><00:01:56.909><c> the</c><00:01:57.390><c> compiler</c>

00:01:57.770 --> 00:01:57.780 align:start position:0%
be fast enough is to change the compiler
 

00:01:57.780 --> 00:02:00.230 align:start position:0%
be fast enough is to change the compiler
and<00:01:57.990><c> the</c><00:01:58.469><c> way</c><00:01:58.560><c> the</c><00:01:58.740><c> compilers</c><00:01:59.009><c> emit</c><00:01:59.759><c> code</c><00:01:59.969><c> but</c>

00:02:00.230 --> 00:02:00.240 align:start position:0%
and the way the compilers emit code but
 

00:02:00.240 --> 00:02:01.429 align:start position:0%
and the way the compilers emit code but
that<00:02:00.270><c> is</c><00:02:00.479><c> something</c><00:02:00.780><c> that</c><00:02:00.840><c> can</c><00:02:01.170><c> be</c><00:02:01.259><c> a</c><00:02:01.290><c> lot</c><00:02:01.409><c> of</c>

00:02:01.429 --> 00:02:01.439 align:start position:0%
that is something that can be a lot of
 

00:02:01.439 --> 00:02:05.240 align:start position:0%
that is something that can be a lot of
work<00:02:01.939><c> and</c><00:02:03.469><c> we're</c><00:02:04.469><c> trying</c><00:02:04.710><c> to</c><00:02:04.860><c> get</c><00:02:05.009><c> it</c><00:02:05.100><c> to</c><00:02:05.159><c> work</c>

00:02:05.240 --> 00:02:05.250 align:start position:0%
work and we're trying to get it to work
 

00:02:05.250 --> 00:02:07.880 align:start position:0%
work and we're trying to get it to work
for<00:02:05.310><c> first</c><00:02:06.119><c> and</c><00:02:06.390><c> then</c><00:02:06.540><c> to</c><00:02:06.659><c> make</c><00:02:06.810><c> it</c><00:02:06.840><c> fast</c>

00:02:07.880 --> 00:02:07.890 align:start position:0%
for first and then to make it fast
 

00:02:07.890 --> 00:02:11.050 align:start position:0%
for first and then to make it fast
and<00:02:08.250><c> right</c><00:02:09.179><c> now</c><00:02:09.300><c> I</c><00:02:09.330><c> think</c><00:02:09.450><c> we</c><00:02:09.690><c> think</c><00:02:09.929><c> that</c>

00:02:11.050 --> 00:02:11.060 align:start position:0%
and right now I think we think that
 

00:02:11.060 --> 00:02:13.990 align:start position:0%
and right now I think we think that
we<00:02:11.930><c> can</c><00:02:12.080><c> get</c><00:02:12.230><c> this</c><00:02:12.380><c> to</c><00:02:12.530><c> be</c><00:02:12.560><c> as</c><00:02:12.740><c> as</c><00:02:13.430><c> fast</c><00:02:13.700><c> as</c><00:02:13.880><c> we</c>

00:02:13.990 --> 00:02:14.000 align:start position:0%
we can get this to be as as fast as we
 

00:02:14.000 --> 00:02:21.280 align:start position:0%
we can get this to be as as fast as we
need<00:02:19.180><c> this</c><00:02:20.180><c> is</c><00:02:20.360><c> also</c><00:02:20.540><c> a</c><00:02:20.690><c> slide</c><00:02:20.900><c> to</c><00:02:21.050><c> show</c><00:02:21.110><c> you</c>

00:02:21.280 --> 00:02:21.290 align:start position:0%
need this is also a slide to show you
 

00:02:21.290 --> 00:02:23.380 align:start position:0%
need this is also a slide to show you
last<00:02:21.470><c> series</c><00:02:21.830><c> said</c><00:02:22.040><c> that</c><00:02:22.220><c> the</c><00:02:22.640><c> things</c><00:02:22.880><c> that</c>

00:02:23.380 --> 00:02:23.390 align:start position:0%
last series said that the things that
 

00:02:23.390 --> 00:02:25.180 align:start position:0%
last series said that the things that
are<00:02:23.780><c> going</c><00:02:23.960><c> to</c><00:02:24.050><c> be</c><00:02:24.200><c> need</c><00:02:24.650><c> to</c><00:02:24.680><c> be</c><00:02:24.830><c> retrofitted</c>

00:02:25.180 --> 00:02:25.190 align:start position:0%
are going to be need to be retrofitted
 

00:02:25.190 --> 00:02:27.550 align:start position:0%
are going to be need to be retrofitted
or<00:02:25.520><c> the</c><00:02:25.790><c> i/o</c><00:02:25.940><c> so</c><00:02:26.540><c> when</c><00:02:26.810><c> you</c><00:02:27.080><c> do</c><00:02:27.230><c> any</c><00:02:27.380><c> i/o</c>

00:02:27.550 --> 00:02:27.560 align:start position:0%
or the i/o so when you do any i/o
 

00:02:27.560 --> 00:02:29.170 align:start position:0%
or the i/o so when you do any i/o
operation<00:02:28.130><c> it's</c><00:02:28.340><c> going</c><00:02:28.520><c> to</c><00:02:28.580><c> need</c><00:02:28.670><c> to</c><00:02:28.730><c> know</c><00:02:28.820><c> not</c>

00:02:29.170 --> 00:02:29.180 align:start position:0%
operation it's going to need to know not
 

00:02:29.180 --> 00:02:33.190 align:start position:0%
operation it's going to need to know not
to<00:02:29.240><c> call</c><00:02:29.600><c> the</c><00:02:30.290><c> blocking</c><00:02:31.130><c> i/o</c><00:02:31.250><c> operations</c><00:02:32.200><c> all</c>

00:02:33.190 --> 00:02:33.200 align:start position:0%
to call the blocking i/o operations all
 

00:02:33.200 --> 00:02:35.199 align:start position:0%
to call the blocking i/o operations all
the<00:02:33.380><c> job</c><00:02:33.530><c> YouTube</c><00:02:33.740><c> concurrence</c><00:02:34.190><c> so</c><00:02:35.000><c> if</c><00:02:35.090><c> you</c>

00:02:35.199 --> 00:02:35.209 align:start position:0%
the job YouTube concurrence so if you
 

00:02:35.209 --> 00:02:37.810 align:start position:0%
the job YouTube concurrence so if you
lock<00:02:35.450><c> and</c><00:02:36.410><c> you're</c><00:02:36.650><c> inside</c><00:02:36.950><c> a</c><00:02:36.980><c> fiber</c><00:02:37.280><c> it</c><00:02:37.459><c> has</c><00:02:37.550><c> to</c>

00:02:37.810 --> 00:02:37.820 align:start position:0%
lock and you're inside a fiber it has to
 

00:02:37.820 --> 00:02:40.600 align:start position:0%
lock and you're inside a fiber it has to
block<00:02:38.000><c> the</c><00:02:38.240><c> fiber</c><00:02:38.690><c> not</c><00:02:39.440><c> the</c><00:02:40.220><c> underlying</c>

00:02:40.600 --> 00:02:40.610 align:start position:0%
block the fiber not the underlying
 

00:02:40.610 --> 00:02:44.920 align:start position:0%
block the fiber not the underlying
kernel<00:02:40.940><c> thread</c><00:02:41.950><c> and</c><00:02:42.950><c> I</c><00:02:43.880><c> also</c><00:02:44.120><c> mentioned</c><00:02:44.750><c> I</c>

00:02:44.920 --> 00:02:44.930 align:start position:0%
kernel thread and I also mentioned I
 

00:02:44.930 --> 00:02:47.790 align:start position:0%
kernel thread and I also mentioned I
think<00:02:45.590><c> some</c><00:02:45.950><c> people</c><00:02:46.070><c> asked</c><00:02:46.400><c> about</c><00:02:46.430><c> this</c><00:02:46.640><c> too</c><00:02:46.820><c> I</c>

00:02:47.790 --> 00:02:47.800 align:start position:0%
think some people asked about this too I
 

00:02:47.800 --> 00:02:53.620 align:start position:0%
think some people asked about this too I
also<00:02:48.800><c> mentioned</c><00:02:49.430><c> that</c><00:02:51.700><c> if</c><00:02:52.700><c> you</c><00:02:52.910><c> run</c><00:02:53.150><c> threads</c>

00:02:53.620 --> 00:02:53.630 align:start position:0%
also mentioned that if you run threads
 

00:02:53.630 --> 00:02:57.760 align:start position:0%
also mentioned that if you run threads
in<00:02:53.810><c> the</c><00:02:53.930><c> operating</c><00:02:54.590><c> system</c><00:02:56.290><c> most</c><00:02:57.290><c> of</c><00:02:57.410><c> the</c><00:02:57.530><c> time</c>

00:02:57.760 --> 00:02:57.770 align:start position:0%
in the operating system most of the time
 

00:02:57.770 --> 00:03:01.570 align:start position:0%
in the operating system most of the time
the<00:02:58.610><c> way</c><00:02:58.730><c> the</c><00:02:59.739><c> the</c><00:03:00.739><c> operating</c><00:03:01.130><c> system</c><00:03:01.459><c> is</c>

00:03:01.570 --> 00:03:01.580 align:start position:0%
the way the the operating system is
 

00:03:01.580 --> 00:03:03.220 align:start position:0%
the way the the operating system is
going<00:03:01.610><c> to</c><00:03:01.790><c> D</c><00:03:02.000><c> schedule</c><00:03:02.390><c> your</c><00:03:02.540><c> thread</c><00:03:02.840><c> and</c><00:03:02.870><c> run</c>

00:03:03.220 --> 00:03:03.230 align:start position:0%
going to D schedule your thread and run
 

00:03:03.230 --> 00:03:04.900 align:start position:0%
going to D schedule your thread and run
another<00:03:03.500><c> thread</c><00:03:03.770><c> in</c><00:03:03.890><c> the</c><00:03:03.980><c> same</c><00:03:04.130><c> CPU</c><00:03:04.550><c> when</c><00:03:04.820><c> you</c>

00:03:04.900 --> 00:03:04.910 align:start position:0%
another thread in the same CPU when you
 

00:03:04.910 --> 00:03:07.120 align:start position:0%
another thread in the same CPU when you
actually<00:03:05.209><c> block</c><00:03:05.420><c> an</c><00:03:05.570><c> i/o</c><00:03:05.720><c> that</c><00:03:06.440><c> is</c><00:03:06.650><c> a</c><00:03:06.680><c> normal</c>

00:03:07.120 --> 00:03:07.130 align:start position:0%
actually block an i/o that is a normal
 

00:03:07.130 --> 00:03:10.180 align:start position:0%
actually block an i/o that is a normal
case<00:03:07.310><c> but</c><00:03:08.150><c> occasionally</c><00:03:08.720><c> you</c><00:03:09.650><c> have</c><00:03:09.860><c> a</c><00:03:09.890><c> thread</c>

00:03:10.180 --> 00:03:10.190 align:start position:0%
case but occasionally you have a thread
 

00:03:10.190 --> 00:03:12.160 align:start position:0%
case but occasionally you have a thread
that's<00:03:10.489><c> just</c><00:03:11.180><c> doing</c><00:03:11.660><c> a</c><00:03:11.720><c> lot</c><00:03:11.840><c> of</c><00:03:11.900><c> computation</c>

00:03:12.160 --> 00:03:12.170 align:start position:0%
that's just doing a lot of computation
 

00:03:12.170 --> 00:03:16.660 align:start position:0%
that's just doing a lot of computation
for<00:03:12.560><c> a</c><00:03:12.620><c> very</c><00:03:13.100><c> long</c><00:03:13.340><c> time</c><00:03:13.370><c> and</c><00:03:14.830><c> after</c><00:03:15.830><c> a</c><00:03:16.400><c> certain</c>

00:03:16.660 --> 00:03:16.670 align:start position:0%
for a very long time and after a certain
 

00:03:16.670 --> 00:03:19.240 align:start position:0%
for a very long time and after a certain
while<00:03:17.180><c> the</c><00:03:18.080><c> operating</c><00:03:18.620><c> system</c><00:03:18.980><c> is</c><00:03:19.070><c> going</c><00:03:19.100><c> to</c>

00:03:19.240 --> 00:03:19.250 align:start position:0%
while the operating system is going to
 

00:03:19.250 --> 00:03:21.430 align:start position:0%
while the operating system is going to
preempt<00:03:19.700><c> it</c><00:03:19.790><c> and</c><00:03:20.030><c> say</c><00:03:20.570><c> run</c><00:03:20.870><c> for</c><00:03:21.049><c> long</c><00:03:21.200><c> enough</c>

00:03:21.430 --> 00:03:21.440 align:start position:0%
preempt it and say run for long enough
 

00:03:21.440 --> 00:03:24.490 align:start position:0%
preempt it and say run for long enough
let<00:03:21.620><c> someone</c><00:03:21.830><c> else</c><00:03:22.040><c> run</c><00:03:22.420><c> and</c><00:03:23.420><c> seeing</c><00:03:24.170><c> some</c><00:03:24.320><c> I</c>

00:03:24.490 --> 00:03:24.500 align:start position:0%
let someone else run and seeing some I
 

00:03:24.500 --> 00:03:27.100 align:start position:0%
let someone else run and seeing some I
think<00:03:24.799><c> some</c><00:03:25.070><c> people</c><00:03:25.190><c> asked</c><00:03:25.730><c> whether</c><00:03:26.570><c> we</c><00:03:26.720><c> could</c>

00:03:27.100 --> 00:03:27.110 align:start position:0%
think some people asked whether we could
 

00:03:27.110 --> 00:03:30.690 align:start position:0%
think some people asked whether we could
do<00:03:27.260><c> it</c><00:03:27.410><c> with</c><00:03:27.560><c> fibers</c><00:03:28.390><c> and</c><00:03:29.390><c> they</c><00:03:29.630><c> said</c><00:03:29.780><c> maybe</c>

00:03:30.690 --> 00:03:30.700 align:start position:0%
do it with fibers and they said maybe
 

00:03:30.700 --> 00:03:32.979 align:start position:0%
do it with fibers and they said maybe
and<00:03:31.700><c> if</c><00:03:31.910><c> we</c><00:03:32.090><c> do</c><00:03:32.209><c> we</c><00:03:32.360><c> can</c><00:03:32.510><c> rely</c><00:03:32.750><c> on</c><00:03:32.780><c> the</c>

00:03:32.979 --> 00:03:32.989 align:start position:0%
and if we do we can rely on the
 

00:03:32.989 --> 00:03:37.570 align:start position:0%
and if we do we can rely on the
safepoint<00:03:33.350><c> mechanism</c><00:03:34.390><c> and</c><00:03:36.489><c> actually</c><00:03:37.489><c> we</c>

00:03:37.570 --> 00:03:37.580 align:start position:0%
safepoint mechanism and actually we
 

00:03:37.580 --> 00:03:40.960 align:start position:0%
safepoint mechanism and actually we
ended<00:03:37.610><c> up</c><00:03:37.820><c> doing</c><00:03:38.030><c> just</c><00:03:38.330><c> that</c><00:03:39.640><c> we</c><00:03:40.640><c> are</c><00:03:40.670><c> not</c>

00:03:40.960 --> 00:03:40.970 align:start position:0%
ended up doing just that we are not
 

00:03:40.970 --> 00:03:43.150 align:start position:0%
ended up doing just that we are not
entirely<00:03:41.450><c> certain</c><00:03:42.350><c> whether</c><00:03:42.769><c> or</c><00:03:42.890><c> not</c><00:03:42.980><c> we're</c>

00:03:43.150 --> 00:03:43.160 align:start position:0%
entirely certain whether or not we're
 

00:03:43.160 --> 00:03:45.550 align:start position:0%
entirely certain whether or not we're
actually<00:03:43.310><c> gonna</c><00:03:43.549><c> need</c><00:03:43.790><c> it</c><00:03:44.049><c> and</c><00:03:45.049><c> the</c><00:03:45.200><c> reason</c><00:03:45.470><c> is</c>

00:03:45.550 --> 00:03:45.560 align:start position:0%
actually gonna need it and the reason is
 

00:03:45.560 --> 00:03:49.780 align:start position:0%
actually gonna need it and the reason is
this<00:03:45.709><c> if</c><00:03:46.640><c> you</c><00:03:47.600><c> have</c><00:03:48.430><c> something</c><00:03:49.430><c> like</c><00:03:49.519><c> eight</c>

00:03:49.780 --> 00:03:49.790 align:start position:0%
this if you have something like eight
 

00:03:49.790 --> 00:03:54.550 align:start position:0%
this if you have something like eight
cores<00:03:50.150><c> and</c><00:03:50.920><c> say</c><00:03:52.180><c> 20</c><00:03:53.180><c> threads</c><00:03:53.480><c> and</c><00:03:53.989><c> some</c><00:03:54.320><c> of</c><00:03:54.410><c> the</c>

00:03:54.550 --> 00:03:54.560 align:start position:0%
cores and say 20 threads and some of the
 

00:03:54.560 --> 00:03:57.130 align:start position:0%
cores and say 20 threads and some of the
do<00:03:55.100><c> IO</c><00:03:55.370><c> and</c><00:03:55.730><c> some</c><00:03:55.910><c> of</c><00:03:55.970><c> them</c><00:03:56.060><c> do</c><00:03:56.180><c> a</c><00:03:56.209><c> lot</c><00:03:56.390><c> of</c><00:03:56.450><c> CP</c><00:03:57.110><c> a</c>

00:03:57.130 --> 00:03:57.140 align:start position:0%
do IO and some of them do a lot of CP a
 

00:03:57.140 --> 00:04:00.250 align:start position:0%
do IO and some of them do a lot of CP a
lot<00:03:57.530><c> of</c><00:03:57.620><c> CPU</c><00:03:57.980><c> operations</c><00:03:58.459><c> it</c><00:03:59.450><c> is</c><00:03:59.690><c> certainly</c>

00:04:00.250 --> 00:04:00.260 align:start position:0%
lot of CPU operations it is certainly
 

00:04:00.260 --> 00:04:01.479 align:start position:0%
lot of CPU operations it is certainly
possible<00:04:00.350><c> that</c><00:04:00.769><c> some</c><00:04:01.010><c> of</c><00:04:01.070><c> them</c><00:04:01.190><c> will</c><00:04:01.280><c> need</c><00:04:01.370><c> to</c>

00:04:01.479 --> 00:04:01.489 align:start position:0%
possible that some of them will need to
 

00:04:01.489 --> 00:04:03.789 align:start position:0%
possible that some of them will need to
be<00:04:01.610><c> preempted</c><00:04:02.230><c> because</c><00:04:03.230><c> they</c><00:04:03.320><c> take</c><00:04:03.470><c> up</c><00:04:03.500><c> too</c>

00:04:03.789 --> 00:04:03.799 align:start position:0%
be preempted because they take up too
 

00:04:03.799 --> 00:04:05.680 align:start position:0%
be preempted because they take up too
much<00:04:03.829><c> CPU</c><00:04:04.130><c> but</c><00:04:04.640><c> if</c><00:04:04.730><c> you</c><00:04:04.820><c> have</c><00:04:05.000><c> a</c><00:04:05.030><c> million</c><00:04:05.450><c> of</c>

00:04:05.680 --> 00:04:05.690 align:start position:0%
much CPU but if you have a million of
 

00:04:05.690 --> 00:04:09.150 align:start position:0%
much CPU but if you have a million of
those<00:04:05.780><c> threads</c><00:04:06.140><c> and</c><00:04:06.820><c> say</c><00:04:07.820><c> a</c><00:04:07.870><c> thousand</c><00:04:08.870><c> of</c><00:04:08.959><c> them</c>

00:04:09.150 --> 00:04:09.160 align:start position:0%
those threads and say a thousand of them
 

00:04:09.160 --> 00:04:11.500 align:start position:0%
those threads and say a thousand of them
use<00:04:10.160><c> so</c><00:04:10.430><c> much</c><00:04:10.579><c> CPU</c><00:04:10.790><c> that</c><00:04:11.150><c> you</c><00:04:11.269><c> need</c><00:04:11.420><c> to</c>

00:04:11.500 --> 00:04:11.510 align:start position:0%
use so much CPU that you need to
 

00:04:11.510 --> 00:04:14.410 align:start position:0%
use so much CPU that you need to
forcefully<00:04:12.110><c> preempt</c><00:04:12.500><c> them</c><00:04:13.120><c> then</c><00:04:14.120><c> you're</c>

00:04:14.410 --> 00:04:14.420 align:start position:0%
forcefully preempt them then you're
 

00:04:14.420 --> 00:04:16.300 align:start position:0%
forcefully preempt them then you're
under<00:04:14.690><c> provisioned</c><00:04:15.079><c> I</c><00:04:15.560><c> mean</c><00:04:15.980><c> there's</c><00:04:16.130><c> not</c>

00:04:16.300 --> 00:04:16.310 align:start position:0%
under provisioned I mean there's not
 

00:04:16.310 --> 00:04:19.839 align:start position:0%
under provisioned I mean there's not
much<00:04:16.370><c> any</c><00:04:16.880><c> kind</c><00:04:17.180><c> of</c><00:04:17.299><c> scheduling</c><00:04:17.630><c> can</c><00:04:17.780><c> help</c><00:04:17.959><c> you</c>

00:04:19.839 --> 00:04:19.849 align:start position:0%
much any kind of scheduling can help you
 

00:04:19.849 --> 00:04:23.480 align:start position:0%
much any kind of scheduling can help you
so<00:04:20.849><c> it's</c><00:04:21.060><c> not</c><00:04:21.329><c> like</c><00:04:21.690><c> if</c><00:04:22.650><c> you</c><00:04:22.800><c> have</c><00:04:22.949><c> so</c><00:04:23.250><c> many</c>

00:04:23.480 --> 00:04:23.490 align:start position:0%
so it's not like if you have so many
 

00:04:23.490 --> 00:04:24.950 align:start position:0%
so it's not like if you have so many
threads<00:04:23.879><c> that</c><00:04:24.120><c> all</c><00:04:24.300><c> of</c><00:04:24.389><c> them</c><00:04:24.509><c> need</c><00:04:24.660><c> so</c><00:04:24.810><c> much</c>

00:04:24.950 --> 00:04:24.960 align:start position:0%
threads that all of them need so much
 

00:04:24.960 --> 00:04:27.490 align:start position:0%
threads that all of them need so much
CPU<00:04:25.199><c> that</c><00:04:25.669><c> preemption</c><00:04:26.669><c> is</c><00:04:26.789><c> what</c><00:04:26.940><c> you</c><00:04:27.060><c> need</c>

00:04:27.490 --> 00:04:27.500 align:start position:0%
CPU that preemption is what you need
 

00:04:27.500 --> 00:04:29.990 align:start position:0%
CPU that preemption is what you need
then<00:04:28.500><c> you</c><00:04:28.590><c> screwed</c><00:04:28.860><c> either</c><00:04:28.949><c> way</c>

00:04:29.990 --> 00:04:30.000 align:start position:0%
then you screwed either way
 

00:04:30.000 --> 00:04:31.640 align:start position:0%
then you screwed either way
but<00:04:30.300><c> the</c><00:04:30.449><c> reason</c><00:04:30.750><c> we</c><00:04:30.840><c> decided</c><00:04:31.229><c> to</c><00:04:31.319><c> add</c><00:04:31.440><c> this</c>

00:04:31.640 --> 00:04:31.650 align:start position:0%
but the reason we decided to add this
 

00:04:31.650 --> 00:04:37.430 align:start position:0%
but the reason we decided to add this
anyways<00:04:32.220><c> is</c><00:04:32.840><c> that</c><00:04:35.659><c> some</c><00:04:36.659><c> people</c><00:04:36.690><c> may</c><00:04:37.169><c> what</c>

00:04:37.430 --> 00:04:37.440 align:start position:0%
anyways is that some people may what
 

00:04:37.440 --> 00:04:38.930 align:start position:0%
anyways is that some people may what
they<00:04:37.590><c> may</c><00:04:37.889><c> want</c><00:04:38.099><c> to</c><00:04:38.159><c> do</c><00:04:38.280><c> is</c><00:04:38.430><c> not</c><00:04:38.580><c> to</c><00:04:38.729><c> try</c><00:04:38.909><c> to</c>

00:04:38.930 --> 00:04:38.940 align:start position:0%
they may want to do is not to try to
 

00:04:38.940 --> 00:04:41.540 align:start position:0%
they may want to do is not to try to
solve<00:04:39.270><c> the</c><00:04:39.389><c> problem</c><00:04:39.659><c> by</c><00:04:39.810><c> scheduling</c><00:04:40.550><c> fibers</c>

00:04:41.540 --> 00:04:41.550 align:start position:0%
solve the problem by scheduling fibers
 

00:04:41.550 --> 00:04:47.559 align:start position:0%
solve the problem by scheduling fibers
cleverly<00:04:41.970><c> but</c><00:04:43.789><c> if</c><00:04:44.789><c> they</c><00:04:45.270><c> see</c><00:04:45.500><c> a</c><00:04:46.500><c> fiber</c><00:04:47.039><c> that</c>

00:04:47.559 --> 00:04:47.569 align:start position:0%
cleverly but if they see a fiber that
 

00:04:47.569 --> 00:04:50.960 align:start position:0%
cleverly but if they see a fiber that
takes<00:04:48.569><c> up</c><00:04:48.870><c> too</c><00:04:49.050><c> much</c><00:04:49.080><c> CPU</c><00:04:49.770><c> they're</c><00:04:50.639><c> gonna</c><00:04:50.759><c> say</c>

00:04:50.960 --> 00:04:50.970 align:start position:0%
takes up too much CPU they're gonna say
 

00:04:50.970 --> 00:04:52.969 align:start position:0%
takes up too much CPU they're gonna say
that<00:04:51.150><c> fiber</c><00:04:51.419><c> is</c><00:04:51.569><c> misbehaving</c><00:04:51.870><c> they</c><00:04:52.440><c> want</c><00:04:52.889><c> to</c>

00:04:52.969 --> 00:04:52.979 align:start position:0%
that fiber is misbehaving they want to
 

00:04:52.979 --> 00:04:57.589 align:start position:0%
that fiber is misbehaving they want to
take<00:04:53.099><c> it</c><00:04:53.280><c> off</c><00:04:53.430><c> and</c><00:04:55.159><c> maybe</c><00:04:56.159><c> run</c><00:04:56.460><c> it</c><00:04:56.490><c> you</c><00:04:57.180><c> know</c><00:04:57.330><c> an</c>

00:04:57.589 --> 00:04:57.599 align:start position:0%
take it off and maybe run it you know an
 

00:04:57.599 --> 00:05:00.980 align:start position:0%
take it off and maybe run it you know an
hour<00:04:57.810><c> later</c><00:04:58.430><c> when</c><00:04:59.430><c> when</c><00:05:00.150><c> there</c><00:05:00.449><c> is</c><00:05:00.539><c> more</c><00:05:00.810><c> room</c>

00:05:00.980 --> 00:05:00.990 align:start position:0%
hour later when when there is more room
 

00:05:00.990 --> 00:05:05.390 align:start position:0%
hour later when when there is more room
in<00:05:01.229><c> the</c><00:05:01.319><c> machine</c><00:05:03.560><c> so</c><00:05:04.560><c> this</c><00:05:04.949><c> is</c><00:05:05.039><c> what</c><00:05:05.190><c> we</c><00:05:05.280><c> have</c>

00:05:05.390 --> 00:05:05.400 align:start position:0%
in the machine so this is what we have
 

00:05:05.400 --> 00:05:07.850 align:start position:0%
in the machine so this is what we have
now<00:05:05.550><c> I</c><00:05:05.880><c> showed</c><00:05:06.389><c> you</c><00:05:06.509><c> we</c><00:05:06.840><c> have</c><00:05:07.050><c> in</c><00:05:07.289><c> the</c><00:05:07.530><c> part</c><00:05:07.710><c> in</c>

00:05:07.850 --> 00:05:07.860 align:start position:0%
now I showed you we have in the part in
 

00:05:07.860 --> 00:05:10.070 align:start position:0%
now I showed you we have in the part in
the<00:05:08.009><c> in</c><00:05:08.250><c> the</c><00:05:08.569><c> prototype</c><00:05:09.569><c> we</c><00:05:09.720><c> have</c><00:05:09.870><c> nessa</c>

00:05:10.070 --> 00:05:10.080 align:start position:0%
the in the prototype we have nessa
 

00:05:10.080 --> 00:05:12.950 align:start position:0%
the in the prototype we have nessa
continuations<00:05:11.419><c> I'll</c><00:05:12.419><c> show</c><00:05:12.630><c> what</c><00:05:12.750><c> snack</c>

00:05:12.950 --> 00:05:12.960 align:start position:0%
continuations I'll show what snack
 

00:05:12.960 --> 00:05:16.540 align:start position:0%
continuations I'll show what snack
walking<00:05:13.349><c> is</c><00:05:13.650><c> stuff</c><00:05:14.460><c> we</c><00:05:14.610><c> don't</c><00:05:14.819><c> have</c><00:05:15.000><c> now</c>

00:05:16.540 --> 00:05:16.550 align:start position:0%
walking is stuff we don't have now
 

00:05:16.550 --> 00:05:18.230 align:start position:0%
walking is stuff we don't have now
continuations<00:05:17.550><c> are</c><00:05:17.639><c> very</c><00:05:17.909><c> low-level</c>

00:05:18.230 --> 00:05:18.240 align:start position:0%
continuations are very low-level
 

00:05:18.240 --> 00:05:22.939 align:start position:0%
continuations are very low-level
mechanism<00:05:20.479><c> some</c><00:05:21.479><c> in</c><00:05:21.900><c> some</c><00:05:22.110><c> languages</c><00:05:22.560><c> people</c>

00:05:22.939 --> 00:05:22.949 align:start position:0%
mechanism some in some languages people
 

00:05:22.949 --> 00:05:25.129 align:start position:0%
mechanism some in some languages people
use<00:05:23.130><c> continuations</c><00:05:23.729><c> directly</c><00:05:24.509><c> so</c><00:05:24.750><c> they</c><00:05:24.930><c> have</c>

00:05:25.129 --> 00:05:25.139 align:start position:0%
use continuations directly so they have
 

00:05:25.139 --> 00:05:27.020 align:start position:0%
use continuations directly so they have
like<00:05:25.680><c> higher</c><00:05:26.099><c> level</c><00:05:26.370><c> abstraction</c><00:05:26.849><c> that</c>

00:05:27.020 --> 00:05:27.030 align:start position:0%
like higher level abstraction that
 

00:05:27.030 --> 00:05:29.870 align:start position:0%
like higher level abstraction that
allows<00:05:27.659><c> you</c><00:05:27.840><c> to</c><00:05:27.990><c> pass</c><00:05:28.349><c> values</c><00:05:28.710><c> from</c><00:05:29.159><c> the</c><00:05:29.669><c> run</c>

00:05:29.870 --> 00:05:29.880 align:start position:0%
allows you to pass values from the run
 

00:05:29.880 --> 00:05:32.149 align:start position:0%
allows you to pass values from the run
point<00:05:30.090><c> to</c><00:05:30.270><c> the</c><00:05:30.419><c> yield</c><00:05:30.599><c> point</c><00:05:30.860><c> so</c><00:05:31.860><c> the</c><00:05:32.009><c> next</c>

00:05:32.149 --> 00:05:32.159 align:start position:0%
point to the yield point so the next
 

00:05:32.159 --> 00:05:33.439 align:start position:0%
point to the yield point so the next
time<00:05:32.310><c> you</c><00:05:32.460><c> continue</c><00:05:32.789><c> the</c><00:05:32.880><c> continuation</c><00:05:33.240><c> you</c>

00:05:33.439 --> 00:05:33.449 align:start position:0%
time you continue the continuation you
 

00:05:33.449 --> 00:05:35.959 align:start position:0%
time you continue the continuation you
can<00:05:33.599><c> pass</c><00:05:33.870><c> it</c><00:05:34.080><c> in</c><00:05:34.199><c> arguments</c><00:05:34.680><c> and</c><00:05:34.800><c> that's</c><00:05:35.789><c> the</c>

00:05:35.959 --> 00:05:35.969 align:start position:0%
can pass it in arguments and that's the
 

00:05:35.969 --> 00:05:37.399 align:start position:0%
can pass it in arguments and that's the
arguments<00:05:36.360><c> going</c><00:05:36.479><c> to</c><00:05:36.569><c> be</c><00:05:36.659><c> returned</c><00:05:37.199><c> from</c>

00:05:37.399 --> 00:05:37.409 align:start position:0%
arguments going to be returned from
 

00:05:37.409 --> 00:05:39.350 align:start position:0%
arguments going to be returned from
yield<00:05:37.710><c> it's</c><00:05:38.159><c> very</c><00:05:38.400><c> easy</c><00:05:38.610><c> to</c><00:05:38.789><c> implement</c><00:05:38.969><c> in</c>

00:05:39.350 --> 00:05:39.360 align:start position:0%
yield it's very easy to implement in
 

00:05:39.360 --> 00:05:41.209 align:start position:0%
yield it's very easy to implement in
Java<00:05:39.900><c> on</c><00:05:40.050><c> top</c><00:05:40.199><c> of</c><00:05:40.319><c> the</c><00:05:40.380><c> continuations</c><00:05:40.919><c> we</c><00:05:41.039><c> have</c>

00:05:41.209 --> 00:05:41.219 align:start position:0%
Java on top of the continuations we have
 

00:05:41.219 --> 00:05:43.999 align:start position:0%
Java on top of the continuations we have
just<00:05:41.819><c> we</c><00:05:41.909><c> haven't</c><00:05:42.060><c> done</c><00:05:42.210><c> it</c><00:05:42.360><c> yet</c><00:05:42.800><c> we</c><00:05:43.800><c> want</c><00:05:43.889><c> to</c>

00:05:43.999 --> 00:05:44.009 align:start position:0%
just we haven't done it yet we want to
 

00:05:44.009 --> 00:05:47.269 align:start position:0%
just we haven't done it yet we want to
be<00:05:44.099><c> able</c><00:05:44.190><c> to</c><00:05:44.340><c> clone</c><00:05:44.840><c> continuations</c><00:05:46.279><c> so</c>

00:05:47.269 --> 00:05:47.279 align:start position:0%
be able to clone continuations so
 

00:05:47.279 --> 00:05:50.240 align:start position:0%
be able to clone continuations so
continuation<00:05:47.880><c> remembers</c><00:05:48.330><c> its</c><00:05:48.509><c> own</c><00:05:49.250><c> remembers</c>

00:05:50.240 --> 00:05:50.250 align:start position:0%
continuation remembers its own remembers
 

00:05:50.250 --> 00:05:53.360 align:start position:0%
continuation remembers its own remembers
its<00:05:50.370><c> current</c><00:05:50.699><c> States</c><00:05:51.500><c> and</c><00:05:52.500><c> next</c><00:05:53.039><c> time</c><00:05:53.099><c> you</c><00:05:53.250><c> run</c>

00:05:53.360 --> 00:05:53.370 align:start position:0%
its current States and next time you run
 

00:05:53.370 --> 00:05:55.249 align:start position:0%
its current States and next time you run
it<00:05:53.520><c> it</c><00:05:53.639><c> can</c><00:05:53.819><c> so</c><00:05:54.539><c> it</c><00:05:54.599><c> remembers</c><00:05:54.750><c> its</c><00:05:55.050><c> current</c>

00:05:55.249 --> 00:05:55.259 align:start position:0%
it it can so it remembers its current
 

00:05:55.259 --> 00:05:56.719 align:start position:0%
it it can so it remembers its current
state<00:05:55.409><c> it's</c><00:05:55.620><c> puts</c><00:05:55.800><c> it</c><00:05:55.889><c> off</c><00:05:55.979><c> to</c><00:05:56.130><c> the</c><00:05:56.279><c> sides</c><00:05:56.520><c> the</c>

00:05:56.719 --> 00:05:56.729 align:start position:0%
state it's puts it off to the sides the
 

00:05:56.729 --> 00:05:58.550 align:start position:0%
state it's puts it off to the sides the
next<00:05:56.909><c> time</c><00:05:57.029><c> you</c><00:05:57.120><c> run</c><00:05:57.300><c> it</c><00:05:57.479><c> it</c><00:05:57.719><c> mutates</c><00:05:58.409><c> the</c>

00:05:58.550 --> 00:05:58.560 align:start position:0%
next time you run it it mutates the
 

00:05:58.560 --> 00:06:02.209 align:start position:0%
next time you run it it mutates the
state<00:05:58.860><c> right</c><00:05:59.810><c> but</c><00:06:00.810><c> maybe</c><00:06:01.349><c> in</c><00:06:01.529><c> some</c><00:06:01.680><c> cases</c><00:06:01.740><c> you</c>

00:06:02.209 --> 00:06:02.219 align:start position:0%
state right but maybe in some cases you
 

00:06:02.219 --> 00:06:03.860 align:start position:0%
state right but maybe in some cases you
want<00:06:02.310><c> to</c><00:06:02.460><c> go</c><00:06:02.580><c> back</c><00:06:02.759><c> in</c><00:06:02.940><c> time</c><00:06:03.150><c> and</c><00:06:03.419><c> run</c><00:06:03.569><c> the</c><00:06:03.659><c> same</c>

00:06:03.860 --> 00:06:03.870 align:start position:0%
want to go back in time and run the same
 

00:06:03.870 --> 00:06:07.100 align:start position:0%
want to go back in time and run the same
computation<00:06:04.440><c> again</c><00:06:04.500><c> from</c><00:06:04.770><c> the</c><00:06:04.830><c> same</c><00:06:04.949><c> point</c><00:06:06.110><c> so</c>

00:06:07.100 --> 00:06:07.110 align:start position:0%
computation again from the same point so
 

00:06:07.110 --> 00:06:09.649 align:start position:0%
computation again from the same point so
what<00:06:07.409><c> you</c><00:06:07.500><c> can</c><00:06:07.650><c> do</c><00:06:07.740><c> is</c><00:06:07.860><c> you</c><00:06:07.949><c> just</c><00:06:07.979><c> clone</c><00:06:08.340><c> it</c><00:06:08.659><c> so</c>

00:06:09.649 --> 00:06:09.659 align:start position:0%
what you can do is you just clone it so
 

00:06:09.659 --> 00:06:11.209 align:start position:0%
what you can do is you just clone it so
if<00:06:09.779><c> you</c><00:06:09.900><c> clone</c><00:06:10.139><c> the</c><00:06:10.259><c> continuation</c><00:06:10.590><c> you</c><00:06:11.039><c> can</c>

00:06:11.209 --> 00:06:11.219 align:start position:0%
if you clone the continuation you can
 

00:06:11.219 --> 00:06:14.240 align:start position:0%
if you clone the continuation you can
continue<00:06:11.550><c> it</c><00:06:11.669><c> multiple</c><00:06:12.150><c> times</c><00:06:13.250><c> serialization</c>

00:06:14.240 --> 00:06:14.250 align:start position:0%
continue it multiple times serialization
 

00:06:14.250 --> 00:06:16.370 align:start position:0%
continue it multiple times serialization
is<00:06:14.370><c> another</c><00:06:14.880><c> very</c><00:06:15.090><c> interesting</c><00:06:15.150><c> thing</c><00:06:15.690><c> we</c>

00:06:16.370 --> 00:06:16.380 align:start position:0%
is another very interesting thing we
 

00:06:16.380 --> 00:06:18.430 align:start position:0%
is another very interesting thing we
haven't<00:06:16.590><c> started</c><00:06:16.770><c> working</c><00:06:16.830><c> on</c><00:06:17.069><c> that</c><00:06:17.279><c> either</c>

00:06:18.430 --> 00:06:18.440 align:start position:0%
haven't started working on that either
 

00:06:18.440 --> 00:06:20.360 align:start position:0%
haven't started working on that either
so<00:06:19.440><c> you</c><00:06:19.529><c> may</c><00:06:19.800><c> want</c><00:06:20.009><c> to</c><00:06:20.099><c> block</c><00:06:20.250><c> the</c>

00:06:20.360 --> 00:06:20.370 align:start position:0%
so you may want to block the
 

00:06:20.370 --> 00:06:21.980 align:start position:0%
so you may want to block the
continuation<00:06:20.880><c> to</c><00:06:20.909><c> do</c><00:06:21.090><c> the</c><00:06:21.210><c> continuation</c><00:06:21.569><c> and</c>

00:06:21.980 --> 00:06:21.990 align:start position:0%
continuation to do the continuation and
 

00:06:21.990 --> 00:06:24.950 align:start position:0%
continuation to do the continuation and
maybe<00:06:22.169><c> continue</c><00:06:22.560><c> in</c><00:06:22.680><c> a</c><00:06:22.919><c> different</c><00:06:23.190><c> machine</c><00:06:23.960><c> or</c>

00:06:24.950 --> 00:06:24.960 align:start position:0%
maybe continue in a different machine or
 

00:06:24.960 --> 00:06:26.839 align:start position:0%
maybe continue in a different machine or
serialize<00:06:25.650><c> it</c><00:06:25.800><c> to</c><00:06:25.860><c> disk</c><00:06:26.039><c> and</c><00:06:26.219><c> continue</c><00:06:26.610><c> it</c><00:06:26.729><c> a</c>

00:06:26.839 --> 00:06:26.849 align:start position:0%
serialize it to disk and continue it a
 

00:06:26.849 --> 00:06:29.839 align:start position:0%
serialize it to disk and continue it a
month<00:06:27.149><c> from</c><00:06:27.270><c> now</c><00:06:27.330><c> and</c><00:06:28.490><c> one</c><00:06:29.490><c> serious</c>

00:06:29.839 --> 00:06:29.849 align:start position:0%
month from now and one serious
 

00:06:29.849 --> 00:06:31.430 align:start position:0%
month from now and one serious
limitation<00:06:30.300><c> we</c><00:06:30.389><c> have</c><00:06:30.509><c> now</c><00:06:30.690><c> is</c><00:06:31.080><c> I</c><00:06:31.110><c> mentioned</c>

00:06:31.430 --> 00:06:31.440 align:start position:0%
limitation we have now is I mentioned
 

00:06:31.440 --> 00:06:33.149 align:start position:0%
limitation we have now is I mentioned
that<00:06:31.800><c> if</c><00:06:32.009><c> you</c><00:06:32.130><c> have</c><00:06:32.339><c> an</c><00:06:32.460><c> eight</c>

00:06:33.149 --> 00:06:33.159 align:start position:0%
that if you have an eight
 

00:06:33.159 --> 00:06:37.469 align:start position:0%
that if you have an eight
frame<00:06:34.060><c> on</c><00:06:34.419><c> the</c><00:06:35.169><c> stack</c><00:06:35.879><c> the</c><00:06:36.879><c> continuation</c><00:06:37.360><c> is</c>

00:06:37.469 --> 00:06:37.479 align:start position:0%
frame on the stack the continuation is
 

00:06:37.479 --> 00:06:39.749 align:start position:0%
frame on the stack the continuation is
pinned<00:06:37.749><c> it</c><00:06:37.930><c> cannot</c><00:06:38.110><c> yield</c><00:06:38.680><c> that</c><00:06:39.189><c> is</c><00:06:39.249><c> probably</c>

00:06:39.749 --> 00:06:39.759 align:start position:0%
pinned it cannot yield that is probably
 

00:06:39.759 --> 00:06:41.730 align:start position:0%
pinned it cannot yield that is probably
going<00:06:39.879><c> to</c><00:06:39.939><c> stay</c><00:06:40.389><c> forever</c><00:06:40.539><c> but</c><00:06:41.379><c> a</c><00:06:41.409><c> current</c>

00:06:41.730 --> 00:06:41.740 align:start position:0%
going to stay forever but a current
 

00:06:41.740 --> 00:06:43.920 align:start position:0%
going to stay forever but a current
limitation<00:06:42.129><c> we</c><00:06:42.219><c> have</c><00:06:42.430><c> is</c><00:06:42.789><c> that</c><00:06:43.539><c> you're</c><00:06:43.689><c> also</c>

00:06:43.920 --> 00:06:43.930 align:start position:0%
limitation we have is that you're also
 

00:06:43.930 --> 00:06:46.230 align:start position:0%
limitation we have is that you're also
pinned<00:06:44.409><c> if</c><00:06:44.590><c> the</c><00:06:45.039><c> continuation</c><00:06:45.430><c> is</c><00:06:45.699><c> currently</c>

00:06:46.230 --> 00:06:46.240 align:start position:0%
pinned if the continuation is currently
 

00:06:46.240 --> 00:06:48.959 align:start position:0%
pinned if the continuation is currently
holding<00:06:46.599><c> a</c><00:06:46.840><c> native</c><00:06:47.080><c> monitor</c><00:06:47.460><c> so</c><00:06:48.460><c> if</c><00:06:48.729><c> you</c><00:06:48.909><c> are</c>

00:06:48.959 --> 00:06:48.969 align:start position:0%
holding a native monitor so if you are
 

00:06:48.969 --> 00:06:50.790 align:start position:0%
holding a native monitor so if you are
currently<00:06:49.389><c> inside</c><00:06:49.779><c> a</c><00:06:49.840><c> synchronized</c><00:06:50.409><c> method</c>

00:06:50.790 --> 00:06:50.800 align:start position:0%
currently inside a synchronized method
 

00:06:50.800 --> 00:06:54.899 align:start position:0%
currently inside a synchronized method
or<00:06:51.629><c> a</c><00:06:52.629><c> synchronized</c><00:06:53.409><c> block</c><00:06:53.680><c> and</c><00:06:54.009><c> you</c><00:06:54.639><c> try</c><00:06:54.849><c> to</c>

00:06:54.899 --> 00:06:54.909 align:start position:0%
or a synchronized block and you try to
 

00:06:54.909 --> 00:06:56.820 align:start position:0%
or a synchronized block and you try to
yield<00:06:55.270><c> while</c><00:06:55.569><c> you</c><00:06:55.870><c> are</c><00:06:56.050><c> inside</c><00:06:56.499><c> the</c>

00:06:56.820 --> 00:06:56.830 align:start position:0%
yield while you are inside the
 

00:06:56.830 --> 00:06:58.890 align:start position:0%
yield while you are inside the
synchronized<00:06:57.279><c> block</c><00:06:57.520><c> you</c><00:06:58.300><c> will</c><00:06:58.419><c> be</c><00:06:58.569><c> pinned</c><00:06:58.779><c> as</c>

00:06:58.890 --> 00:06:58.900 align:start position:0%
synchronized block you will be pinned as
 

00:06:58.900 --> 00:07:04.499 align:start position:0%
synchronized block you will be pinned as
well<00:07:00.029><c> job</c><00:07:01.029><c> ito</c><00:07:01.270><c> concurrent</c><00:07:01.719><c> locks</c><00:07:02.469><c> work</c><00:07:03.509><c> but</c>

00:07:04.499 --> 00:07:04.509 align:start position:0%
well job ito concurrent locks work but
 

00:07:04.509 --> 00:07:08.309 align:start position:0%
well job ito concurrent locks work but
native<00:07:04.900><c> monitors</c><00:07:05.639><c> will</c><00:07:06.639><c> pin</c><00:07:06.849><c> you</c><00:07:07.020><c> and</c><00:07:08.020><c> that</c><00:07:08.169><c> is</c>

00:07:08.309 --> 00:07:08.319 align:start position:0%
native monitors will pin you and that is
 

00:07:08.319 --> 00:07:11.189 align:start position:0%
native monitors will pin you and that is
a<00:07:08.729><c> limitation</c><00:07:09.729><c> that</c><00:07:09.759><c> we'll</c><00:07:10.389><c> probably</c><00:07:10.750><c> want</c><00:07:11.080><c> to</c>

00:07:11.189 --> 00:07:11.199 align:start position:0%
a limitation that we'll probably want to
 

00:07:11.199 --> 00:07:15.269 align:start position:0%
a limitation that we'll probably want to
get<00:07:12.069><c> rid</c><00:07:12.250><c> of</c><00:07:12.279><c> later</c><00:07:13.139><c> so</c><00:07:14.139><c> this</c><00:07:14.409><c> is</c><00:07:14.740><c> more</c><00:07:15.189><c> or</c><00:07:15.250><c> less</c>

00:07:15.269 --> 00:07:15.279 align:start position:0%
get rid of later so this is more or less
 

00:07:15.279 --> 00:07:18.570 align:start position:0%
get rid of later so this is more or less
the<00:07:15.520><c> API</c><00:07:15.759><c> the</c><00:07:16.210><c> API</c><00:07:16.479><c> we</c><00:07:16.689><c> have</c><00:07:16.810><c> now</c><00:07:17.310><c> so</c><00:07:18.310><c> I</c><00:07:18.340><c> showed</c>

00:07:18.570 --> 00:07:18.580 align:start position:0%
the API the API we have now so I showed
 

00:07:18.580 --> 00:07:22.230 align:start position:0%
the API the API we have now so I showed
you<00:07:18.699><c> the</c><00:07:19.469><c> the</c><00:07:20.469><c> first</c><00:07:20.710><c> few</c><00:07:20.919><c> methods</c><00:07:21.180><c> at</c><00:07:22.180><c> the</c>

00:07:22.230 --> 00:07:22.240 align:start position:0%
you the the first few methods at the
 

00:07:22.240 --> 00:07:24.869 align:start position:0%
you the the first few methods at the
beginning<00:07:22.659><c> we</c><00:07:22.840><c> have</c><00:07:23.020><c> some</c><00:07:23.259><c> stuff</c><00:07:23.469><c> to</c><00:07:23.729><c> to</c><00:07:24.729><c> let</c>

00:07:24.869 --> 00:07:24.879 align:start position:0%
beginning we have some stuff to to let
 

00:07:24.879 --> 00:07:26.129 align:start position:0%
beginning we have some stuff to to let
you<00:07:24.969><c> walk</c><00:07:25.180><c> the</c><00:07:25.330><c> stack</c><00:07:25.569><c> while</c><00:07:26.080><c> the</c>

00:07:26.129 --> 00:07:26.139 align:start position:0%
you walk the stack while the
 

00:07:26.139 --> 00:07:28.890 align:start position:0%
you walk the stack while the
continuation<00:07:26.680><c> is</c><00:07:26.770><c> unmounted</c><00:07:27.310><c> and</c><00:07:28.300><c> this</c><00:07:28.629><c> is</c>

00:07:28.890 --> 00:07:28.900 align:start position:0%
continuation is unmounted and this is
 

00:07:28.900 --> 00:07:32.399 align:start position:0%
continuation is unmounted and this is
the<00:07:29.889><c> force</c><00:07:30.580><c> preemption</c><00:07:31.029><c> thing</c><00:07:31.210><c> you</c><00:07:31.360><c> can</c><00:07:31.569><c> try</c>

00:07:32.399 --> 00:07:32.409 align:start position:0%
the force preemption thing you can try
 

00:07:32.409 --> 00:07:34.709 align:start position:0%
the force preemption thing you can try
to<00:07:32.469><c> ask</c><00:07:32.860><c> a</c><00:07:33.460><c> continuation</c><00:07:34.120><c> that's</c><00:07:34.419><c> running</c><00:07:34.569><c> in</c>

00:07:34.709 --> 00:07:34.719 align:start position:0%
to ask a continuation that's running in
 

00:07:34.719 --> 00:07:38.339 align:start position:0%
to ask a continuation that's running in
a<00:07:34.779><c> different</c><00:07:35.050><c> thread</c><00:07:36.360><c> please</c><00:07:37.360><c> yield</c><00:07:37.900><c> yourself</c>

00:07:38.339 --> 00:07:38.349 align:start position:0%
a different thread please yield yourself
 

00:07:38.349 --> 00:07:40.529 align:start position:0%
a different thread please yield yourself
and<00:07:38.650><c> the</c><00:07:38.800><c> way</c><00:07:38.949><c> that</c><00:07:39.129><c> works</c><00:07:39.370><c> is</c><00:07:39.639><c> inside</c><00:07:40.180><c> hotspot</c>

00:07:40.529 --> 00:07:40.539 align:start position:0%
and the way that works is inside hotspot
 

00:07:40.539 --> 00:07:44.309 align:start position:0%
and the way that works is inside hotspot
we<00:07:40.689><c> have</c><00:07:41.219><c> a</c><00:07:42.219><c> thread</c><00:07:42.909><c> local</c><00:07:43.029><c> handshake</c><00:07:43.599><c> it</c>

00:07:44.309 --> 00:07:44.319 align:start position:0%
we have a thread local handshake it
 

00:07:44.319 --> 00:07:47.730 align:start position:0%
we have a thread local handshake it
basically<00:07:44.589><c> takes</c><00:07:44.860><c> a</c><00:07:45.159><c> small</c><00:07:46.120><c> closure</c><00:07:46.449><c> and</c><00:07:46.779><c> asks</c>

00:07:47.730 --> 00:07:47.740 align:start position:0%
basically takes a small closure and asks
 

00:07:47.740 --> 00:07:50.550 align:start position:0%
basically takes a small closure and asks
the<00:07:48.339><c> VM</c><00:07:48.639><c> to</c><00:07:49.089><c> run</c><00:07:49.300><c> that</c><00:07:49.479><c> closure</c><00:07:49.779><c> at</c><00:07:50.110><c> the</c><00:07:50.139><c> next</c>

00:07:50.550 --> 00:07:50.560 align:start position:0%
the VM to run that closure at the next
 

00:07:50.560 --> 00:07:54.389 align:start position:0%
the VM to run that closure at the next
safe<00:07:51.009><c> point</c><00:07:51.449><c> and</c><00:07:52.529><c> if</c><00:07:53.529><c> we</c><00:07:53.680><c> do</c><00:07:53.800><c> that</c><00:07:53.949><c> at</c><00:07:54.159><c> the</c><00:07:54.219><c> next</c>

00:07:54.389 --> 00:07:54.399 align:start position:0%
safe point and if we do that at the next
 

00:07:54.399 --> 00:07:55.829 align:start position:0%
safe point and if we do that at the next
safe<00:07:54.639><c> points</c><00:07:54.969><c> it</c><00:07:55.120><c> would</c><00:07:55.180><c> call</c><00:07:55.389><c> yield</c><00:07:55.599><c> of</c>

00:07:55.829 --> 00:07:55.839 align:start position:0%
safe points it would call yield of
 

00:07:55.839 --> 00:07:58.139 align:start position:0%
safe points it would call yield of
course<00:07:56.469><c> it</c><00:07:56.740><c> may</c><00:07:56.949><c> not</c><00:07:57.069><c> succeed</c><00:07:57.460><c> because</c><00:07:57.610><c> maybe</c>

00:07:58.139 --> 00:07:58.149 align:start position:0%
course it may not succeed because maybe
 

00:07:58.149 --> 00:08:00.240 align:start position:0%
course it may not succeed because maybe
you're<00:07:58.330><c> pinned</c><00:07:58.569><c> so</c><00:07:59.560><c> you</c><00:07:59.649><c> may</c><00:07:59.800><c> need</c><00:07:59.919><c> to</c><00:07:59.979><c> try</c><00:08:00.219><c> a</c>

00:08:00.240 --> 00:08:00.250 align:start position:0%
you're pinned so you may need to try a
 

00:08:00.250 --> 00:08:03.589 align:start position:0%
you're pinned so you may need to try a
few<00:08:00.430><c> times</c><00:08:01.919><c> okay</c><00:08:02.919><c> so</c><00:08:03.189><c> far</c><00:08:03.370><c> about</c>

00:08:03.589 --> 00:08:03.599 align:start position:0%
few times okay so far about
 

00:08:03.599 --> 00:08:06.420 align:start position:0%
few times okay so far about
continuations<00:08:04.599><c> any</c><00:08:04.810><c> questions</c><00:08:05.169><c> and</c><00:08:05.979><c> then</c>

00:08:06.420 --> 00:08:06.430 align:start position:0%
continuations any questions and then
 

00:08:06.430 --> 00:08:08.159 align:start position:0%
continuations any questions and then
that<00:08:06.580><c> is</c><00:08:06.699><c> the</c><00:08:06.789><c> main</c><00:08:07.000><c> so</c><00:08:07.330><c> only</c><00:08:07.629><c> continuations</c>

00:08:08.159 --> 00:08:08.169 align:start position:0%
that is the main so only continuations
 

00:08:08.169 --> 00:08:09.809 align:start position:0%
that is the main so only continuations
are<00:08:08.229><c> implemented</c><00:08:08.830><c> in</c><00:08:08.919><c> the</c><00:08:08.979><c> VM</c><00:08:09.189><c> that</c><00:08:09.219><c> is</c><00:08:09.550><c> the</c>

00:08:09.809 --> 00:08:09.819 align:start position:0%
are implemented in the VM that is the
 

00:08:09.819 --> 00:08:13.499 align:start position:0%
are implemented in the VM that is the
main<00:08:10.680><c> portion</c><00:08:11.680><c> and</c><00:08:12.580><c> now</c><00:08:12.969><c> I'll</c><00:08:13.060><c> show</c><00:08:13.270><c> how</c>

00:08:13.499 --> 00:08:13.509 align:start position:0%
main portion and now I'll show how
 

00:08:13.509 --> 00:08:15.089 align:start position:0%
main portion and now I'll show how
fibers<00:08:14.050><c> are</c><00:08:14.139><c> implement</c><00:08:14.469><c> stop</c><00:08:14.620><c> that</c><00:08:14.800><c> but</c><00:08:14.949><c> any</c>

00:08:15.089 --> 00:08:15.099 align:start position:0%
fibers are implement stop that but any
 

00:08:15.099 --> 00:08:20.159 align:start position:0%
fibers are implement stop that but any
questions<00:08:15.399><c> so</c><00:08:15.520><c> far</c><00:08:17.099><c> okay</c>

00:08:20.159 --> 00:08:20.169 align:start position:0%
 
 

00:08:20.169 --> 00:08:21.930 align:start position:0%
 
once<00:08:20.470><c> you</c><00:08:20.560><c> have</c><00:08:20.680><c> continuations</c><00:08:21.190><c> you</c><00:08:21.699><c> can</c>

00:08:21.930 --> 00:08:21.940 align:start position:0%
once you have continuations you can
 

00:08:21.940 --> 00:08:23.780 align:start position:0%
once you have continuations you can
build<00:08:22.120><c> lightweight</c><00:08:22.600><c> threads</c><00:08:22.870><c> on</c><00:08:23.020><c> top</c><00:08:23.169><c> of</c><00:08:23.290><c> them</c>

00:08:23.780 --> 00:08:23.790 align:start position:0%
build lightweight threads on top of them
 

00:08:23.790 --> 00:08:28.680 align:start position:0%
build lightweight threads on top of them
so<00:08:24.790><c> what</c><00:08:24.940><c> are</c><00:08:25.030><c> threads</c><00:08:26.759><c> threads</c><00:08:27.759><c> require</c><00:08:28.660><c> a</c>

00:08:28.680 --> 00:08:28.690 align:start position:0%
so what are threads threads require a
 

00:08:28.690 --> 00:08:30.570 align:start position:0%
so what are threads threads require a
continuation<00:08:29.169><c> which</c><00:08:29.560><c> is</c><00:08:29.710><c> some</c><00:08:30.070><c> piece</c><00:08:30.220><c> of</c><00:08:30.250><c> code</c>

00:08:30.570 --> 00:08:30.580 align:start position:0%
continuation which is some piece of code
 

00:08:30.580 --> 00:08:33.089 align:start position:0%
continuation which is some piece of code
that<00:08:30.820><c> can</c><00:08:31.630><c> stop</c><00:08:31.930><c> and</c><00:08:32.200><c> be</c><00:08:32.289><c> resumed</c><00:08:32.650><c> at</c><00:08:32.830><c> a</c><00:08:32.890><c> later</c>

00:08:33.089 --> 00:08:33.099 align:start position:0%
that can stop and be resumed at a later
 

00:08:33.099 --> 00:08:35.490 align:start position:0%
that can stop and be resumed at a later
point<00:08:33.279><c> in</c><00:08:33.400><c> time</c><00:08:33.460><c> and</c><00:08:33.940><c> a</c><00:08:34.479><c> scheduler</c><00:08:34.930><c> which</c><00:08:35.349><c> is</c>

00:08:35.490 --> 00:08:35.500 align:start position:0%
point in time and a scheduler which is
 

00:08:35.500 --> 00:08:37.140 align:start position:0%
point in time and a scheduler which is
something<00:08:35.770><c> that</c><00:08:36.070><c> takes</c><00:08:36.610><c> many</c><00:08:36.940><c> of</c><00:08:37.060><c> these</c>

00:08:37.140 --> 00:08:37.150 align:start position:0%
something that takes many of these
 

00:08:37.150 --> 00:08:39.659 align:start position:0%
something that takes many of these
continuations<00:08:37.839><c> and</c><00:08:38.110><c> decides</c><00:08:38.710><c> when</c><00:08:39.370><c> to</c><00:08:39.490><c> run</c>

00:08:39.659 --> 00:08:39.669 align:start position:0%
continuations and decides when to run
 

00:08:39.669 --> 00:08:44.760 align:start position:0%
continuations and decides when to run
each<00:08:40.510><c> of</c><00:08:40.719><c> them</c><00:08:41.909><c> so</c><00:08:42.909><c> a</c><00:08:43.300><c> thread</c><00:08:43.630><c> can</c><00:08:43.810><c> say</c><00:08:44.050><c> now</c><00:08:44.620><c> I'm</c>

00:08:44.760 --> 00:08:44.770 align:start position:0%
each of them so a thread can say now I'm
 

00:08:44.770 --> 00:08:46.380 align:start position:0%
each of them so a thread can say now I'm
ready<00:08:44.950><c> to</c><00:08:45.100><c> run</c><00:08:45.279><c> or</c><00:08:45.430><c> now</c><00:08:45.700><c> I</c><00:08:45.730><c> want</c><00:08:45.970><c> to</c><00:08:46.029><c> block</c><00:08:46.180><c> so</c>

00:08:46.380 --> 00:08:46.390 align:start position:0%
ready to run or now I want to block so
 

00:08:46.390 --> 00:08:50.010 align:start position:0%
ready to run or now I want to block so
please<00:08:46.570><c> take</c><00:08:46.750><c> me</c><00:08:46.930><c> off</c><00:08:47.050><c> the</c><00:08:47.260><c> cpu</c><00:08:47.740><c> and</c><00:08:48.810><c> it</c><00:08:49.810><c> can</c>

00:08:50.010 --> 00:08:50.020 align:start position:0%
please take me off the cpu and it can
 

00:08:50.020 --> 00:08:51.780 align:start position:0%
please take me off the cpu and it can
get<00:08:50.110><c> a</c><00:08:50.170><c> signal</c><00:08:50.529><c> now</c><00:08:50.650><c> I'm</c><00:08:50.800><c> ready</c><00:08:50.980><c> to</c><00:08:51.190><c> run</c><00:08:51.430><c> so</c><00:08:51.700><c> it</c>

00:08:51.780 --> 00:08:51.790 align:start position:0%
get a signal now I'm ready to run so it
 

00:08:51.790 --> 00:08:53.190 align:start position:0%
get a signal now I'm ready to run so it
has<00:08:51.910><c> to</c><00:08:52.000><c> tell</c><00:08:52.180><c> the</c><00:08:52.270><c> scheduler</c><00:08:52.690><c> I'm</c><00:08:52.839><c> ready</c><00:08:53.050><c> to</c>

00:08:53.190 --> 00:08:53.200 align:start position:0%
has to tell the scheduler I'm ready to
 

00:08:53.200 --> 00:08:54.420 align:start position:0%
has to tell the scheduler I'm ready to
run<00:08:53.380><c> and</c><00:08:53.529><c> when</c><00:08:53.680><c> the</c><00:08:53.770><c> scheduler</c><00:08:54.130><c> finds</c><00:08:54.310><c> the</c>

00:08:54.420 --> 00:08:54.430 align:start position:0%
run and when the scheduler finds the
 

00:08:54.430 --> 00:08:56.130 align:start position:0%
run and when the scheduler finds the
right<00:08:54.520><c> time</c><00:08:54.700><c> it</c><00:08:54.850><c> assigns</c><00:08:55.089><c> it</c><00:08:55.209><c> to</c><00:08:55.240><c> a</c><00:08:55.330><c> CPU</c><00:08:55.690><c> so</c>

00:08:56.130 --> 00:08:56.140 align:start position:0%
right time it assigns it to a CPU so
 

00:08:56.140 --> 00:08:57.630 align:start position:0%
right time it assigns it to a CPU so
basically<00:08:56.440><c> this</c><00:08:56.680><c> is</c><00:08:56.860><c> the</c><00:08:57.130><c> same</c><00:08:57.279><c> way</c><00:08:57.430><c> it</c><00:08:57.490><c> works</c>

00:08:57.630 --> 00:08:57.640 align:start position:0%
basically this is the same way it works
 

00:08:57.640 --> 00:08:59.730 align:start position:0%
basically this is the same way it works
in<00:08:57.790><c> the</c><00:08:57.850><c> kernel</c><00:08:58.180><c> any</c><00:08:58.959><c> kind</c><00:08:59.230><c> of</c><00:08:59.350><c> thread</c><00:08:59.560><c> is</c>

00:08:59.730 --> 00:08:59.740 align:start position:0%
in the kernel any kind of thread is
 

00:08:59.740 --> 00:09:02.760 align:start position:0%
in the kernel any kind of thread is
really<00:09:00.100><c> a</c><00:09:00.970><c> thread</c><00:09:01.630><c> has</c><00:09:01.810><c> a</c><00:09:01.839><c> continuation</c><00:09:02.560><c> and</c>

00:09:02.760 --> 00:09:02.770 align:start position:0%
really a thread has a continuation and
 

00:09:02.770 --> 00:09:06.710 align:start position:0%
really a thread has a continuation and
it<00:09:03.070><c> has</c><00:09:03.190><c> a</c><00:09:03.220><c> scheduler</c><00:09:03.930><c> so</c><00:09:05.459><c> when</c><00:09:06.459><c> we</c><00:09:06.550><c> do</c>

00:09:06.710 --> 00:09:06.720 align:start position:0%
it has a scheduler so when we do
 

00:09:06.720 --> 00:09:08.970 align:start position:0%
it has a scheduler so when we do
lightweight<00:09:07.720><c> threads</c><00:09:08.050><c> and</c><00:09:08.170><c> runtime</c><00:09:08.529><c> fibers</c>

00:09:08.970 --> 00:09:08.980 align:start position:0%
lightweight threads and runtime fibers
 

00:09:08.980 --> 00:09:11.400 align:start position:0%
lightweight threads and runtime fibers
we<00:09:09.730><c> do</c><00:09:09.820><c> the</c><00:09:09.940><c> same</c><00:09:10.120><c> way</c><00:09:10.300><c> continuations</c><00:09:11.290><c> are</c>

00:09:11.400 --> 00:09:11.410 align:start position:0%
we do the same way continuations are
 

00:09:11.410 --> 00:09:14.699 align:start position:0%
we do the same way continuations are
provided<00:09:11.830><c> to</c><00:09:11.860><c> us</c><00:09:12.040><c> by</c><00:09:12.250><c> the</c><00:09:12.430><c> VM</c><00:09:12.990><c> and</c><00:09:13.990><c> the</c>

00:09:14.699 --> 00:09:14.709 align:start position:0%
provided to us by the VM and the
 

00:09:14.709 --> 00:09:18.600 align:start position:0%
provided to us by the VM and the
scheduler<00:09:15.160><c> we</c><00:09:15.370><c> use</c><00:09:15.610><c> any</c><00:09:15.970><c> Java</c><00:09:16.420><c> executor</c><00:09:17.610><c> by</c>

00:09:18.600 --> 00:09:18.610 align:start position:0%
scheduler we use any Java executor by
 

00:09:18.610 --> 00:09:20.010 align:start position:0%
scheduler we use any Java executor by
default<00:09:18.910><c> we're</c><00:09:19.060><c> using</c><00:09:19.209><c> fork/join</c><00:09:19.810><c> pool</c>

00:09:20.010 --> 00:09:20.020 align:start position:0%
default we're using fork/join pool
 

00:09:20.020 --> 00:09:22.290 align:start position:0%
default we're using fork/join pool
because<00:09:20.380><c> it's</c><00:09:20.560><c> a</c><00:09:20.650><c> great</c><00:09:20.860><c> fit</c><00:09:21.730><c> for</c><00:09:21.940><c> this</c><00:09:22.029><c> kind</c>

00:09:22.290 --> 00:09:22.300 align:start position:0%
because it's a great fit for this kind
 

00:09:22.300 --> 00:09:26.519 align:start position:0%
because it's a great fit for this kind
of<00:09:22.390><c> workload</c><00:09:24.750><c> so</c><00:09:25.750><c> every</c><00:09:25.990><c> fiber</c><00:09:26.200><c> has</c><00:09:26.500><c> a</c>

00:09:26.519 --> 00:09:26.529 align:start position:0%
of workload so every fiber has a
 

00:09:26.529 --> 00:09:28.680 align:start position:0%
of workload so every fiber has a
continuation<00:09:26.890><c> in</c><00:09:27.130><c> just</c><00:09:27.310><c> scheduler</c><00:09:27.640><c> how</c><00:09:28.510><c> are</c>

00:09:28.680 --> 00:09:28.690 align:start position:0%
continuation in just scheduler how are
 

00:09:28.690 --> 00:09:31.260 align:start position:0%
continuation in just scheduler how are
the<00:09:28.810><c> two</c><00:09:29.050><c> related</c><00:09:29.890><c> so</c><00:09:30.160><c> if</c><00:09:30.520><c> you</c><00:09:30.790><c> know</c><00:09:30.910><c> Java</c><00:09:31.150><c> chip</c>

00:09:31.260 --> 00:09:31.270 align:start position:0%
the two related so if you know Java chip
 

00:09:31.270 --> 00:09:34.290 align:start position:0%
the two related so if you know Java chip
concurrent<00:09:31.810><c> I</c><00:09:31.870><c> expect</c><00:09:32.170><c> most</c><00:09:32.560><c> of</c><00:09:32.800><c> you</c><00:09:32.890><c> do</c><00:09:33.300><c> and</c>

00:09:34.290 --> 00:09:34.300 align:start position:0%
concurrent I expect most of you do and
 

00:09:34.300 --> 00:09:39.780 align:start position:0%
concurrent I expect most of you do and
you<00:09:34.839><c> try</c><00:09:35.200><c> to</c><00:09:35.230><c> obtain</c><00:09:35.770><c> a</c><00:09:36.580><c> lock</c><00:09:37.240><c> or</c><00:09:38.370><c> there</c><00:09:39.370><c> were</c><00:09:39.730><c> a</c>

00:09:39.780 --> 00:09:39.790 align:start position:0%
you try to obtain a lock or there were a
 

00:09:39.790 --> 00:09:42.269 align:start position:0%
you try to obtain a lock or there were a
phaser<00:09:40.120><c> or</c><00:09:40.300><c> all</c><00:09:41.020><c> the</c><00:09:41.230><c> oldie</c><00:09:41.740><c> Java</c><00:09:41.980><c> trickle</c>

00:09:42.269 --> 00:09:42.279 align:start position:0%
phaser or all the oldie Java trickle
 

00:09:42.279 --> 00:09:45.240 align:start position:0%
phaser or all the oldie Java trickle
current<00:09:42.370><c> classes</c><00:09:42.850><c> and</c><00:09:43.060><c> for</c><00:09:43.720><c> some</c><00:09:43.900><c> reason</c><00:09:44.410><c> the</c>

00:09:45.240 --> 00:09:45.250 align:start position:0%
current classes and for some reason the
 

00:09:45.250 --> 00:09:47.070 align:start position:0%
current classes and for some reason the
lock<00:09:45.400><c> is</c><00:09:45.550><c> not</c><00:09:45.640><c> available</c><00:09:46.180><c> it's</c><00:09:46.839><c> held</c><00:09:47.020><c> by</c>

00:09:47.070 --> 00:09:47.080 align:start position:0%
lock is not available it's held by
 

00:09:47.080 --> 00:09:49.560 align:start position:0%
lock is not available it's held by
someone<00:09:47.470><c> else</c><00:09:47.820><c> and</c><00:09:48.820><c> now</c><00:09:49.060><c> you</c><00:09:49.120><c> need</c><00:09:49.270><c> to</c><00:09:49.390><c> block</c>

00:09:49.560 --> 00:09:49.570 align:start position:0%
someone else and now you need to block
 

00:09:49.570 --> 00:09:53.970 align:start position:0%
someone else and now you need to block
and<00:09:50.880><c> it</c><00:09:51.880><c> is</c><00:09:52.000><c> that</c><00:09:52.209><c> blocking</c><00:09:52.660><c> operation</c><00:09:53.200><c> that</c>

00:09:53.970 --> 00:09:53.980 align:start position:0%
and it is that blocking operation that
 

00:09:53.980 --> 00:09:55.710 align:start position:0%
and it is that blocking operation that
currently<00:09:54.490><c> blocks</c><00:09:54.880><c> the</c><00:09:55.150><c> current</c><00:09:55.390><c> kernel</c>

00:09:55.710 --> 00:09:55.720 align:start position:0%
currently blocks the current kernel
 

00:09:55.720 --> 00:09:57.840 align:start position:0%
currently blocks the current kernel
thread<00:09:55.959><c> and</c><00:09:56.200><c> we</c><00:09:56.529><c> want</c><00:09:56.770><c> it</c><00:09:56.950><c> so</c><00:09:57.250><c> that</c><00:09:57.520><c> if</c><00:09:57.700><c> you're</c>

00:09:57.840 --> 00:09:57.850 align:start position:0%
thread and we want it so that if you're
 

00:09:57.850 --> 00:09:59.810 align:start position:0%
thread and we want it so that if you're
in<00:09:57.970><c> a</c><00:09:58.029><c> fiber</c><00:09:58.300><c> it</c><00:09:58.510><c> would</c><00:09:58.600><c> only</c><00:09:58.750><c> block</c><00:09:59.050><c> the</c><00:09:59.200><c> fiber</c>

00:09:59.810 --> 00:09:59.820 align:start position:0%
in a fiber it would only block the fiber
 

00:09:59.820 --> 00:10:02.760 align:start position:0%
in a fiber it would only block the fiber
so<00:10:00.820><c> all</c><00:10:01.150><c> of</c><00:10:01.510><c> the</c><00:10:01.750><c> code</c><00:10:01.990><c> in</c><00:10:02.200><c> Java</c><00:10:02.560><c> till</c>

00:10:02.760 --> 00:10:02.770 align:start position:0%
so all of the code in Java till
 

00:10:02.770 --> 00:10:06.840 align:start position:0%
so all of the code in Java till
concurrent<00:10:03.279><c> that</c><00:10:05.100><c> blocks</c><00:10:06.100><c> the</c><00:10:06.250><c> kernel</c><00:10:06.670><c> thread</c>

00:10:06.840 --> 00:10:06.850 align:start position:0%
concurrent that blocks the kernel thread
 

00:10:06.850 --> 00:10:09.840 align:start position:0%
concurrent that blocks the kernel thread
today<00:10:07.209><c> goes</c><00:10:07.600><c> through</c><00:10:07.900><c> this</c><00:10:08.890><c> method</c><00:10:09.130><c> Java</c>

00:10:09.840 --> 00:10:09.850 align:start position:0%
today goes through this method Java
 

00:10:09.850 --> 00:10:12.000 align:start position:0%
today goes through this method Java
concurrent<00:10:10.300><c> locks</c><00:10:10.540><c> lock</c><00:10:10.900><c> support</c><00:10:11.290><c> Park</c>

00:10:12.000 --> 00:10:12.010 align:start position:0%
concurrent locks lock support Park
 

00:10:12.010 --> 00:10:16.019 align:start position:0%
concurrent locks lock support Park
that's<00:10:12.459><c> the</c><00:10:12.640><c> method</c><00:10:13.110><c> so</c><00:10:14.110><c> this</c><00:10:14.380><c> is</c><00:10:14.560><c> a</c><00:10:14.880><c> not</c><00:10:15.880><c> too</c>

00:10:16.019 --> 00:10:16.029 align:start position:0%
that's the method so this is a not too
 

00:10:16.029 --> 00:10:17.130 align:start position:0%
that's the method so this is a not too
different<00:10:16.240><c> from</c><00:10:16.390><c> the</c><00:10:16.600><c> code</c><00:10:16.720><c> we</c><00:10:16.839><c> have</c><00:10:16.959><c> in</c><00:10:17.080><c> the</c>

00:10:17.130 --> 00:10:17.140 align:start position:0%
different from the code we have in the
 

00:10:17.140 --> 00:10:18.570 align:start position:0%
different from the code we have in the
prototype<00:10:17.470><c> today</c><00:10:17.650><c> just</c><00:10:17.890><c> took</c><00:10:18.010><c> up</c><00:10:18.160><c> a</c><00:10:18.250><c> few</c><00:10:18.430><c> bits</c>

00:10:18.570 --> 00:10:18.580 align:start position:0%
prototype today just took up a few bits
 

00:10:18.580 --> 00:10:20.990 align:start position:0%
prototype today just took up a few bits
about<00:10:18.730><c> you</c><00:10:19.420><c> know</c><00:10:19.540><c> bookkeeping</c><00:10:20.440><c> there's</c><00:10:20.830><c> a</c>

00:10:20.990 --> 00:10:21.000 align:start position:0%
about you know bookkeeping there's a
 

00:10:21.000 --> 00:10:23.610 align:start position:0%
about you know bookkeeping there's a
call<00:10:22.000><c> of</c><00:10:22.060><c> the</c><00:10:22.150><c> blocker</c><00:10:22.390><c> we</c><00:10:22.660><c> keep</c><00:10:23.050><c> track</c><00:10:23.260><c> of</c><00:10:23.320><c> who</c>

00:10:23.610 --> 00:10:23.620 align:start position:0%
call of the blocker we keep track of who
 

00:10:23.620 --> 00:10:27.360 align:start position:0%
call of the blocker we keep track of who
wanted<00:10:23.890><c> to</c><00:10:24.040><c> block</c><00:10:24.250><c> you</c><00:10:25.800><c> but</c><00:10:26.800><c> basically</c><00:10:27.130><c> this</c>

00:10:27.360 --> 00:10:27.370 align:start position:0%
wanted to block you but basically this
 

00:10:27.370 --> 00:10:30.660 align:start position:0%
wanted to block you but basically this
is<00:10:27.490><c> it</c><00:10:27.520><c> we</c><00:10:27.850><c> ask</c><00:10:28.150><c> for</c><00:10:28.690><c> whether</c><00:10:29.350><c> we</c><00:10:29.620><c> first</c><00:10:30.459><c> of</c><00:10:30.610><c> all</c>

00:10:30.660 --> 00:10:30.670 align:start position:0%
is it we ask for whether we first of all
 

00:10:30.670 --> 00:10:32.910 align:start position:0%
is it we ask for whether we first of all
we<00:10:30.820><c> ask</c><00:10:31.000><c> whether</c><00:10:31.209><c> we're</c><00:10:31.450><c> running</c><00:10:31.839><c> in</c><00:10:31.990><c> ordinary</c>

00:10:32.910 --> 00:10:32.920 align:start position:0%
we ask whether we're running in ordinary
 

00:10:32.920 --> 00:10:33.720 align:start position:0%
we ask whether we're running in ordinary
thread

00:10:33.720 --> 00:10:33.730 align:start position:0%
thread
 

00:10:33.730 --> 00:10:40.259 align:start position:0%
thread
or<00:10:33.790><c> we</c><00:10:34.779><c> have</c><00:10:34.959><c> or</c><00:10:35.709><c> we're</c><00:10:35.949><c> inside</c><00:10:36.279><c> a</c><00:10:36.309><c> fiber</c><00:10:39.089><c> so</c><00:10:40.089><c> we</c>

00:10:40.259 --> 00:10:40.269 align:start position:0%
or we have or we're inside a fiber so we
 

00:10:40.269 --> 00:10:42.689 align:start position:0%
or we have or we're inside a fiber so we
call<00:10:40.540><c> that</c><00:10:40.569><c> concept</c><00:10:41.199><c> a</c><00:10:41.470><c> strand</c><00:10:42.189><c> so</c><00:10:42.399><c> a</c><00:10:42.429><c> strand</c>

00:10:42.689 --> 00:10:42.699 align:start position:0%
call that concept a strand so a strand
 

00:10:42.699 --> 00:10:44.849 align:start position:0%
call that concept a strand so a strand
is<00:10:42.790><c> either</c><00:10:43.079><c> kernel</c><00:10:44.079><c> thread</c><00:10:44.290><c> or</c><00:10:44.529><c> lightwei</c>

00:10:44.849 --> 00:10:44.859 align:start position:0%
is either kernel thread or lightwei
 

00:10:44.859 --> 00:10:47.340 align:start position:0%
is either kernel thread or lightwei
thread<00:10:45.069><c> over</c><00:10:45.189><c> fiber</c><00:10:45.369><c> I</c><00:10:46.299><c> talked</c><00:10:46.989><c> about</c><00:10:47.169><c> it</c><00:10:47.290><c> a</c>

00:10:47.340 --> 00:10:47.350 align:start position:0%
thread over fiber I talked about it a
 

00:10:47.350 --> 00:10:51.539 align:start position:0%
thread over fiber I talked about it a
bit<00:10:47.470><c> last</c><00:10:47.769><c> year</c><00:10:48.600><c> since</c><00:10:49.600><c> then</c><00:10:49.869><c> I</c><00:10:50.429><c> said</c><00:10:51.429><c> them</c>

00:10:51.539 --> 00:10:51.549 align:start position:0%
bit last year since then I said them
 

00:10:51.549 --> 00:10:53.999 align:start position:0%
bit last year since then I said them
maybe<00:10:51.730><c> we'll</c><00:10:51.970><c> add</c><00:10:52.119><c> like</c><00:10:52.389><c> a</c><00:10:52.419><c> super</c><00:10:52.929><c> type</c><00:10:53.139><c> for</c>

00:10:53.999 --> 00:10:54.009 align:start position:0%
maybe we'll add like a super type for
 

00:10:54.009 --> 00:10:56.970 align:start position:0%
maybe we'll add like a super type for
threads<00:10:54.339><c> and</c><00:10:54.459><c> fibers</c><00:10:54.879><c> called</c><00:10:55.059><c> strands</c><00:10:55.509><c> we</c><00:10:56.499><c> we</c>

00:10:56.970 --> 00:10:56.980 align:start position:0%
threads and fibers called strands we we
 

00:10:56.980 --> 00:10:58.979 align:start position:0%
threads and fibers called strands we we
had<00:10:57.160><c> that</c><00:10:57.309><c> in</c><00:10:57.399><c> an</c><00:10:57.489><c> earlier</c><00:10:57.579><c> prototype</c><00:10:58.059><c> we</c><00:10:58.839><c> took</c>

00:10:58.979 --> 00:10:58.989 align:start position:0%
had that in an earlier prototype we took
 

00:10:58.989 --> 00:11:01.289 align:start position:0%
had that in an earlier prototype we took
it<00:10:59.139><c> out</c><00:10:59.259><c> because</c><00:10:59.679><c> there</c><00:11:00.339><c> was</c><00:11:00.489><c> very</c><00:11:00.579><c> little</c><00:11:01.059><c> to</c>

00:11:01.289 --> 00:11:01.299 align:start position:0%
it out because there was very little to
 

00:11:01.299 --> 00:11:04.259 align:start position:0%
it out because there was very little to
do<00:11:01.419><c> in</c><00:11:01.449><c> uh</c><00:11:01.660><c> in</c><00:11:02.350><c> strands</c><00:11:03.309><c> so</c><00:11:03.819><c> right</c><00:11:03.970><c> now</c><00:11:04.089><c> it's</c>

00:11:04.259 --> 00:11:04.269 align:start position:0%
do in uh in strands so right now it's
 

00:11:04.269 --> 00:11:07.019 align:start position:0%
do in uh in strands so right now it's
basically<00:11:04.509><c> just</c><00:11:04.779><c> an</c><00:11:04.899><c> object</c><00:11:05.369><c> but</c><00:11:06.369><c> but</c><00:11:06.730><c> I'll</c>

00:11:07.019 --> 00:11:07.029 align:start position:0%
basically just an object but but I'll
 

00:11:07.029 --> 00:11:10.109 align:start position:0%
basically just an object but but I'll
get<00:11:07.239><c> to</c><00:11:07.329><c> that</c><00:11:07.359><c> to</c><00:11:07.629><c> the</c><00:11:07.720><c> design</c><00:11:07.989><c> a</c><00:11:08.019><c> bit</c><00:11:08.730><c> so</c><00:11:09.730><c> if</c><00:11:09.970><c> it</c>

00:11:10.109 --> 00:11:10.119 align:start position:0%
get to that to the design a bit so if it
 

00:11:10.119 --> 00:11:13.139 align:start position:0%
get to that to the design a bit so if it
is<00:11:10.269><c> a</c><00:11:10.480><c> thread</c><00:11:11.290><c> we</c><00:11:11.949><c> call</c><00:11:12.129><c> unsafe</c><00:11:12.489><c> lock</c><00:11:12.669><c> Park</c><00:11:12.879><c> and</c>

00:11:13.139 --> 00:11:13.149 align:start position:0%
is a thread we call unsafe lock Park and
 

00:11:13.149 --> 00:11:15.569 align:start position:0%
is a thread we call unsafe lock Park and
that<00:11:13.329><c> asks</c><00:11:13.869><c> the</c><00:11:14.019><c> kernel</c><00:11:14.470><c> to</c><00:11:14.739><c> suspend</c><00:11:15.489><c> the</c>

00:11:15.569 --> 00:11:15.579 align:start position:0%
that asks the kernel to suspend the
 

00:11:15.579 --> 00:11:18.720 align:start position:0%
that asks the kernel to suspend the
current<00:11:15.850><c> thread</c><00:11:16.089><c> but</c><00:11:16.720><c> if</c><00:11:16.809><c> it</c><00:11:16.899><c> is</c><00:11:16.989><c> a</c><00:11:17.019><c> fiber</c><00:11:17.730><c> this</c>

00:11:18.720 --> 00:11:18.730 align:start position:0%
current thread but if it is a fiber this
 

00:11:18.730 --> 00:11:22.919 align:start position:0%
current thread but if it is a fiber this
just<00:11:19.029><c> yields</c><00:11:19.899><c> the</c><00:11:20.730><c> fibers</c><00:11:21.730><c> continuation</c><00:11:22.269><c> so</c>

00:11:22.919 --> 00:11:22.929 align:start position:0%
just yields the fibers continuation so
 

00:11:22.929 --> 00:11:25.169 align:start position:0%
just yields the fibers continuation so
this<00:11:23.139><c> is</c><00:11:23.350><c> this</c><00:11:23.649><c> is</c><00:11:23.769><c> what</c><00:11:23.889><c> Park</c><00:11:24.189><c> would</c><00:11:24.609><c> do</c><00:11:24.759><c> say</c>

00:11:25.169 --> 00:11:25.179 align:start position:0%
this is this is what Park would do say
 

00:11:25.179 --> 00:11:27.329 align:start position:0%
this is this is what Park would do say
if<00:11:25.540><c> you</c><00:11:25.839><c> can't</c><00:11:26.079><c> get</c><00:11:26.230><c> the</c><00:11:26.379><c> lock</c><00:11:26.559><c> it</c><00:11:26.889><c> will</c><00:11:27.160><c> just</c>

00:11:27.329 --> 00:11:27.339 align:start position:0%
if you can't get the lock it will just
 

00:11:27.339 --> 00:11:29.340 align:start position:0%
if you can't get the lock it will just
get<00:11:27.519><c> translated</c><00:11:28.149><c> to</c><00:11:28.329><c> a</c><00:11:28.449><c> continuation</c><00:11:29.019><c> yield</c>

00:11:29.340 --> 00:11:29.350 align:start position:0%
get translated to a continuation yield
 

00:11:29.350 --> 00:11:33.109 align:start position:0%
get translated to a continuation yield
on<00:11:29.589><c> the</c><00:11:29.919><c> fibers</c><00:11:30.839><c> on</c><00:11:31.839><c> the</c><00:11:32.049><c> fibers</c><00:11:32.319><c> continuation</c>

00:11:33.109 --> 00:11:33.119 align:start position:0%
on the fibers on the fibers continuation
 

00:11:33.119 --> 00:11:36.179 align:start position:0%
on the fibers on the fibers continuation
and<00:11:34.119><c> if</c><00:11:34.959><c> you're</c><00:11:35.109><c> already</c><00:11:35.319><c> holding</c><00:11:35.859><c> the</c><00:11:35.919><c> lock</c>

00:11:36.179 --> 00:11:36.189 align:start position:0%
and if you're already holding the lock
 

00:11:36.189 --> 00:11:38.309 align:start position:0%
and if you're already holding the lock
and<00:11:36.429><c> now</c><00:11:36.970><c> you</c><00:11:37.029><c> want</c><00:11:37.269><c> to</c><00:11:37.299><c> release</c><00:11:37.569><c> it</c><00:11:37.600><c> what</c><00:11:38.199><c> you</c>

00:11:38.309 --> 00:11:38.319 align:start position:0%
and now you want to release it what you
 

00:11:38.319 --> 00:11:43.039 align:start position:0%
and now you want to release it what you
do<00:11:38.439><c> there</c><00:11:38.649><c> is</c><00:11:38.739><c> a</c><00:11:38.769><c> list</c><00:11:39.100><c> of</c><00:11:40.499><c> there's</c><00:11:41.499><c> a</c><00:11:41.559><c> queue</c><00:11:41.829><c> of</c>

00:11:43.039 --> 00:11:43.049 align:start position:0%
do there is a list of there's a queue of
 

00:11:43.049 --> 00:11:46.049 align:start position:0%
do there is a list of there's a queue of
threads<00:11:44.049><c> are</c><00:11:44.199><c> waiting</c><00:11:44.649><c> and</c><00:11:44.829><c> you</c><00:11:45.489><c> take</c><00:11:45.669><c> the</c>

00:11:46.049 --> 00:11:46.059 align:start position:0%
threads are waiting and you take the
 

00:11:46.059 --> 00:11:47.819 align:start position:0%
threads are waiting and you take the
first<00:11:46.269><c> one</c><00:11:46.449><c> and</c><00:11:46.779><c> you</c><00:11:46.809><c> wake</c><00:11:47.109><c> them</c><00:11:47.259><c> up</c><00:11:47.350><c> and</c><00:11:47.589><c> this</c>

00:11:47.819 --> 00:11:47.829 align:start position:0%
first one and you wake them up and this
 

00:11:47.829 --> 00:11:50.039 align:start position:0%
first one and you wake them up and this
is<00:11:48.009><c> done</c><00:11:48.249><c> in</c><00:11:48.459><c> Java</c><00:11:48.549><c> took</c><00:11:49.269><c> current</c><00:11:49.660><c> always</c>

00:11:50.039 --> 00:11:50.049 align:start position:0%
is done in Java took current always
 

00:11:50.049 --> 00:11:53.309 align:start position:0%
is done in Java took current always
through<00:11:50.259><c> this</c><00:11:50.439><c> method</c><00:11:50.649><c> on</c><00:11:51.220><c> Park</c><00:11:51.609><c> and</c><00:11:52.019><c> if</c><00:11:53.019><c> it</c><00:11:53.199><c> is</c>

00:11:53.309 --> 00:11:53.319 align:start position:0%
through this method on Park and if it is
 

00:11:53.319 --> 00:11:56.220 align:start position:0%
through this method on Park and if it is
a<00:11:53.350><c> thread</c><00:11:53.769><c> it's</c><00:11:54.339><c> gonna</c><00:11:54.609><c> go</c><00:11:55.480><c> to</c><00:11:55.539><c> unsafe</c><00:11:55.929><c> and</c><00:11:56.109><c> ask</c>

00:11:56.220 --> 00:11:56.230 align:start position:0%
a thread it's gonna go to unsafe and ask
 

00:11:56.230 --> 00:11:58.379 align:start position:0%
a thread it's gonna go to unsafe and ask
the<00:11:56.439><c> kernel</c><00:11:56.769><c> to</c><00:11:56.889><c> do</c><00:11:57.009><c> that</c><00:11:57.160><c> for</c><00:11:57.369><c> you</c><00:11:57.519><c> but</c><00:11:58.209><c> if</c><00:11:58.299><c> it</c>

00:11:58.379 --> 00:11:58.389 align:start position:0%
the kernel to do that for you but if it
 

00:11:58.389 --> 00:12:00.809 align:start position:0%
the kernel to do that for you but if it
is<00:11:58.480><c> a</c><00:11:58.509><c> fiber</c><00:11:59.039><c> it's</c><00:12:00.039><c> going</c><00:12:00.279><c> to</c><00:12:00.339><c> take</c><00:12:00.489><c> the</c><00:12:00.639><c> fiber</c>

00:12:00.809 --> 00:12:00.819 align:start position:0%
is a fiber it's going to take the fiber
 

00:12:00.819 --> 00:12:03.449 align:start position:0%
is a fiber it's going to take the fiber
scheduler<00:12:01.419><c> and</c><00:12:01.769><c> it's</c><00:12:02.769><c> just</c><00:12:02.919><c> going</c><00:12:03.039><c> to</c><00:12:03.129><c> submit</c>

00:12:03.449 --> 00:12:03.459 align:start position:0%
scheduler and it's just going to submit
 

00:12:03.459 --> 00:12:07.049 align:start position:0%
scheduler and it's just going to submit
the<00:12:03.609><c> fibers</c><00:12:03.910><c> continuation</c><00:12:04.889><c> so</c><00:12:05.889><c> the</c><00:12:06.519><c> scheduler</c>

00:12:07.049 --> 00:12:07.059 align:start position:0%
the fibers continuation so the scheduler
 

00:12:07.059 --> 00:12:09.590 align:start position:0%
the fibers continuation so the scheduler
is<00:12:07.299><c> going</c><00:12:07.539><c> to</c><00:12:07.600><c> get</c><00:12:07.809><c> submitted</c><00:12:08.559><c> a</c><00:12:08.739><c> task</c><00:12:08.949><c> and</c>

00:12:09.590 --> 00:12:09.600 align:start position:0%
is going to get submitted a task and
 

00:12:09.600 --> 00:12:11.729 align:start position:0%
is going to get submitted a task and
when<00:12:10.600><c> the</c><00:12:10.689><c> scheduler</c><00:12:11.079><c> gets</c><00:12:11.259><c> around</c><00:12:11.470><c> to</c><00:12:11.619><c> it</c>

00:12:11.729 --> 00:12:11.739 align:start position:0%
when the scheduler gets around to it
 

00:12:11.739 --> 00:12:12.989 align:start position:0%
when the scheduler gets around to it
it's<00:12:11.859><c> going</c><00:12:11.980><c> to</c><00:12:12.039><c> run</c><00:12:12.220><c> that</c><00:12:12.339><c> task</c><00:12:12.579><c> and</c><00:12:12.879><c> it's</c>

00:12:12.989 --> 00:12:12.999 align:start position:0%
it's going to run that task and it's
 

00:12:12.999 --> 00:12:14.909 align:start position:0%
it's going to run that task and it's
going<00:12:13.119><c> to</c><00:12:13.179><c> call</c><00:12:13.359><c> the</c><00:12:13.480><c> run</c><00:12:13.629><c> method</c><00:12:13.809><c> on</c><00:12:14.169><c> the</c><00:12:14.709><c> task</c>

00:12:14.909 --> 00:12:14.919 align:start position:0%
going to call the run method on the task
 

00:12:14.919 --> 00:12:18.029 align:start position:0%
going to call the run method on the task
but<00:12:15.639><c> for</c><00:12:15.850><c> continuation</c><00:12:16.269><c> run</c><00:12:17.079><c> continues</c><00:12:17.829><c> from</c>

00:12:18.029 --> 00:12:18.039 align:start position:0%
but for continuation run continues from
 

00:12:18.039 --> 00:12:20.220 align:start position:0%
but for continuation run continues from
the<00:12:18.160><c> yield</c><00:12:18.309><c> point</c><00:12:18.539><c> so</c><00:12:19.539><c> this</c><00:12:19.749><c> gives</c><00:12:20.019><c> you</c>

00:12:20.220 --> 00:12:20.230 align:start position:0%
the yield point so this gives you
 

00:12:20.230 --> 00:12:22.199 align:start position:0%
the yield point so this gives you
exactly<00:12:21.009><c> the</c><00:12:21.129><c> same</c><00:12:21.369><c> behavior</c><00:12:21.519><c> is</c><00:12:21.819><c> blocking</c>

00:12:22.199 --> 00:12:22.209 align:start position:0%
exactly the same behavior is blocking
 

00:12:22.209 --> 00:12:23.340 align:start position:0%
exactly the same behavior is blocking
you're<00:12:22.449><c> going</c><00:12:22.569><c> to</c><00:12:22.629><c> continue</c><00:12:22.899><c> from</c><00:12:23.169><c> the</c><00:12:23.319><c> last</c>

00:12:23.340 --> 00:12:23.350 align:start position:0%
you're going to continue from the last
 

00:12:23.350 --> 00:12:24.929 align:start position:0%
you're going to continue from the last
point<00:12:23.619><c> from</c><00:12:24.069><c> the</c><00:12:24.220><c> point</c><00:12:24.339><c> where</c><00:12:24.579><c> you</c><00:12:24.669><c> blocked</c>

00:12:24.929 --> 00:12:24.939 align:start position:0%
point from the point where you blocked
 

00:12:24.939 --> 00:12:29.549 align:start position:0%
point from the point where you blocked
and<00:12:25.319><c> this</c><00:12:26.319><c> is</c><00:12:26.529><c> how</c><00:12:27.720><c> fibers</c><00:12:28.720><c> and</c><00:12:28.989><c> continuations</c>

00:12:29.549 --> 00:12:29.559 align:start position:0%
and this is how fibers and continuations
 

00:12:29.559 --> 00:12:32.549 align:start position:0%
and this is how fibers and continuations
relate<00:12:29.859><c> so</c><00:12:30.669><c> a</c><00:12:30.699><c> fiber</c><00:12:30.999><c> as</c><00:12:31.329><c> a</c><00:12:31.689><c> scheduler</c><00:12:32.289><c> and</c><00:12:32.470><c> a</c>

00:12:32.549 --> 00:12:32.559 align:start position:0%
relate so a fiber as a scheduler and a
 

00:12:32.559 --> 00:12:37.780 align:start position:0%
relate so a fiber as a scheduler and a
continuation<00:12:34.589><c> so</c>

00:12:37.780 --> 00:12:37.790 align:start position:0%
 
 

00:12:37.790 --> 00:12:45.199 align:start position:0%
 
right<00:12:38.790><c> now</c><00:12:39.050><c> in</c><00:12:40.639><c> fibers</c><00:12:41.639><c> have</c><00:12:41.910><c> a</c><00:12:41.939><c> very</c><00:12:43.790><c> thin</c><00:12:44.790><c> and</c>

00:12:45.199 --> 00:12:45.209 align:start position:0%
right now in fibers have a very thin and
 

00:12:45.209 --> 00:12:47.689 align:start position:0%
right now in fibers have a very thin and
minimal<00:12:45.839><c> API</c><00:12:46.139><c> and</c><00:12:46.350><c> it</c><00:12:46.439><c> also</c><00:12:47.069><c> changes</c><00:12:47.220><c> like</c>

00:12:47.689 --> 00:12:47.699 align:start position:0%
minimal API and it also changes like
 

00:12:47.699 --> 00:12:52.970 align:start position:0%
minimal API and it also changes like
every<00:12:48.180><c> week</c><00:12:50.389><c> explain</c><00:12:51.389><c> why</c><00:12:51.540><c> in</c><00:12:51.600><c> a</c><00:12:51.749><c> bit</c><00:12:51.920><c> but</c><00:12:52.920><c> if</c>

00:12:52.970 --> 00:12:52.980 align:start position:0%
every week explain why in a bit but if
 

00:12:52.980 --> 00:12:54.530 align:start position:0%
every week explain why in a bit but if
you<00:12:53.069><c> want</c><00:12:53.220><c> to</c><00:12:53.279><c> create</c><00:12:53.430><c> a</c><00:12:53.550><c> new</c><00:12:53.639><c> fiber</c><00:12:53.850><c> this</c><00:12:54.480><c> is</c>

00:12:54.530 --> 00:12:54.540 align:start position:0%
you want to create a new fiber this is
 

00:12:54.540 --> 00:12:56.499 align:start position:0%
you want to create a new fiber this is
how<00:12:54.749><c> you</c><00:12:54.809><c> do</c><00:12:54.959><c> it</c>

00:12:56.499 --> 00:12:56.509 align:start position:0%
how you do it
 

00:12:56.509 --> 00:12:58.850 align:start position:0%
how you do it
currently<00:12:57.509><c> fibers</c><00:12:57.870><c> can</c><00:12:58.019><c> return</c><00:12:58.319><c> results</c>

00:12:58.850 --> 00:12:58.860 align:start position:0%
currently fibers can return results
 

00:12:58.860 --> 00:13:01.129 align:start position:0%
currently fibers can return results
unlike<00:12:59.129><c> threads</c><00:12:59.550><c> so</c><00:13:00.509><c> this</c><00:13:00.689><c> is</c><00:13:00.749><c> how</c><00:13:00.809><c> you</c><00:13:00.870><c> join</c><00:13:01.079><c> a</c>

00:13:01.129 --> 00:13:01.139 align:start position:0%
unlike threads so this is how you join a
 

00:13:01.139 --> 00:13:05.090 align:start position:0%
unlike threads so this is how you join a
fiber<00:13:01.410><c> and</c><00:13:01.499><c> you</c><00:13:01.620><c> get</c><00:13:01.769><c> the</c><00:13:01.889><c> results</c><00:13:03.709><c> all</c><00:13:04.709><c> the</c>

00:13:05.090 --> 00:13:05.100 align:start position:0%
fiber and you get the results all the
 

00:13:05.100 --> 00:13:06.769 align:start position:0%
fiber and you get the results all the
code<00:13:05.279><c> in</c><00:13:05.430><c> libraries</c><00:13:05.819><c> javi</c><00:13:06.209><c> took</c><00:13:06.389><c> concurrence</c>

00:13:06.769 --> 00:13:06.779 align:start position:0%
code in libraries javi took concurrence
 

00:13:06.779 --> 00:13:09.619 align:start position:0%
code in libraries javi took concurrence
all<00:13:06.990><c> of</c><00:13:07.290><c> the</c><00:13:07.379><c> i/o</c><00:13:07.499><c> has</c><00:13:08.430><c> been</c><00:13:08.579><c> retrofitted</c><00:13:09.420><c> to</c>

00:13:09.619 --> 00:13:09.629 align:start position:0%
all of the i/o has been retrofitted to
 

00:13:09.629 --> 00:13:12.650 align:start position:0%
all of the i/o has been retrofitted to
work<00:13:09.839><c> with</c><00:13:10.050><c> fibers</c><00:13:11.209><c> one</c><00:13:12.209><c> thing</c><00:13:12.389><c> you</c><00:13:12.449><c> got</c><00:13:12.569><c> to</c>

00:13:12.650 --> 00:13:12.660 align:start position:0%
work with fibers one thing you got to
 

00:13:12.660 --> 00:13:15.139 align:start position:0%
work with fibers one thing you got to
say<00:13:12.749><c> they're</c><00:13:12.899><c> one</c><00:13:13.110><c> of</c><00:13:13.139><c> the</c><00:13:13.730><c> niño</c><00:13:14.730><c> was</c>

00:13:15.139 --> 00:13:15.149 align:start position:0%
say they're one of the niño was
 

00:13:15.149 --> 00:13:17.600 align:start position:0%
say they're one of the niño was
retrofitted<00:13:15.509><c> to</c><00:13:15.779><c> work</c><00:13:15.930><c> with</c><00:13:16.499><c> fibers</c><00:13:17.069><c> a</c><00:13:17.100><c> while</c>

00:13:17.600 --> 00:13:17.610 align:start position:0%
retrofitted to work with fibers a while
 

00:13:17.610 --> 00:13:19.790 align:start position:0%
retrofitted to work with fibers a while
ago<00:13:17.999><c> but</c><00:13:18.899><c> something</c><00:13:19.170><c> happened</c><00:13:19.529><c> just</c><00:13:19.620><c> in</c><00:13:19.740><c> the</c>

00:13:19.790 --> 00:13:19.800 align:start position:0%
ago but something happened just in the
 

00:13:19.800 --> 00:13:22.819 align:start position:0%
ago but something happened just in the
last<00:13:19.920><c> few</c><00:13:20.399><c> weeks</c><00:13:20.430><c> is</c><00:13:20.999><c> that</c><00:13:21.360><c> all</c><00:13:21.899><c> of</c><00:13:21.959><c> the</c><00:13:22.620><c> old</c>

00:13:22.819 --> 00:13:22.829 align:start position:0%
last few weeks is that all of the old
 

00:13:22.829 --> 00:13:26.119 align:start position:0%
last few weeks is that all of the old
i/o<00:13:23.629><c> the</c><00:13:24.629><c> old</c><00:13:24.779><c> network</c><00:13:25.230><c> hanging</c><00:13:25.470><c> api</c><00:13:25.740><c> the</c><00:13:25.860><c> old</c>

00:13:26.119 --> 00:13:26.129 align:start position:0%
i/o the old network hanging api the old
 

00:13:26.129 --> 00:13:27.799 align:start position:0%
i/o the old network hanging api the old
sockets<00:13:26.459><c> API</c><00:13:26.670><c> has</c><00:13:26.850><c> been</c><00:13:26.999><c> retrofitted</c><00:13:27.269><c> as</c><00:13:27.569><c> well</c>

00:13:27.799 --> 00:13:27.809 align:start position:0%
sockets API has been retrofitted as well
 

00:13:27.809 --> 00:13:29.239 align:start position:0%
sockets API has been retrofitted as well
in<00:13:27.959><c> the</c><00:13:28.019><c> way</c><00:13:28.050><c> that's</c><00:13:28.379><c> done</c><00:13:28.529><c> now</c><00:13:28.709><c> is</c><00:13:28.980><c> actually</c>

00:13:29.239 --> 00:13:29.249 align:start position:0%
in the way that's done now is actually
 

00:13:29.249 --> 00:13:31.790 align:start position:0%
in the way that's done now is actually
pretty<00:13:29.639><c> exciting</c><00:13:30.259><c> for</c><00:13:31.259><c> us</c><00:13:31.290><c> at</c><00:13:31.529><c> least</c><00:13:31.680><c> as</c>

00:13:31.790 --> 00:13:31.800 align:start position:0%
pretty exciting for us at least as
 

00:13:31.800 --> 00:13:36.470 align:start position:0%
pretty exciting for us at least as
maintainer<00:13:32.189><c> of</c><00:13:32.579><c> the</c><00:13:33.029><c> VM</c><00:13:33.240><c> is</c><00:13:34.139><c> that</c><00:13:34.970><c> all</c><00:13:35.970><c> viola</c>

00:13:36.470 --> 00:13:36.480 align:start position:0%
maintainer of the VM is that all viola
 

00:13:36.480 --> 00:13:38.299 align:start position:0%
maintainer of the VM is that all viola
old<00:13:36.689><c> i/o</c><00:13:36.839><c> is</c><00:13:37.170><c> 20</c><00:13:37.620><c> year</c><00:13:37.709><c> old</c><00:13:37.829><c> code</c><00:13:38.040><c> that's</c>

00:13:38.299 --> 00:13:38.309 align:start position:0%
old i/o is 20 year old code that's
 

00:13:38.309 --> 00:13:41.749 align:start position:0%
old i/o is 20 year old code that's
written<00:13:38.670><c> in</c><00:13:38.850><c> C</c><00:13:39.089><c> and</c><00:13:39.980><c> what</c><00:13:40.980><c> Allen</c><00:13:41.249><c> has</c><00:13:41.370><c> done</c><00:13:41.519><c> he</c>

00:13:41.749 --> 00:13:41.759 align:start position:0%
written in C and what Allen has done he
 

00:13:41.759 --> 00:13:44.150 align:start position:0%
written in C and what Allen has done he
has<00:13:41.790><c> really</c><00:13:42.360><c> implemented</c><00:13:43.050><c> the</c><00:13:43.350><c> old</c><00:13:43.559><c> i/o</c><00:13:43.740><c> on</c>

00:13:44.150 --> 00:13:44.160 align:start position:0%
has really implemented the old i/o on
 

00:13:44.160 --> 00:13:47.480 align:start position:0%
has really implemented the old i/o on
top<00:13:44.999><c> of</c><00:13:45.149><c> nao</c><00:13:45.389><c> so</c><00:13:46.079><c> old</c><00:13:46.290><c> i/o</c><00:13:46.439><c> is</c><00:13:46.679><c> now</c><00:13:46.829><c> implemented</c>

00:13:47.480 --> 00:13:47.490 align:start position:0%
top of nao so old i/o is now implemented
 

00:13:47.490 --> 00:13:50.480 align:start position:0%
top of nao so old i/o is now implemented
entirely<00:13:47.879><c> in</c><00:13:48.029><c> java</c><00:13:48.740><c> and</c><00:13:49.740><c> he</c><00:13:49.889><c> got</c><00:13:50.040><c> it</c><00:13:50.129><c> to</c><00:13:50.249><c> pass</c>

00:13:50.480 --> 00:13:50.490 align:start position:0%
entirely in java and he got it to pass
 

00:13:50.490 --> 00:13:54.079 align:start position:0%
entirely in java and he got it to pass
all<00:13:50.730><c> the</c><00:13:50.819><c> tests</c><00:13:51.259><c> there</c><00:13:52.259><c> would</c><00:13:52.470><c> still</c><00:13:52.679><c> be</c><00:13:53.089><c> maybe</c>

00:13:54.079 --> 00:13:54.089 align:start position:0%
all the tests there would still be maybe
 

00:13:54.089 --> 00:13:55.579 align:start position:0%
all the tests there would still be maybe
some<00:13:54.179><c> corner</c><00:13:54.540><c> cases</c><00:13:54.569><c> because</c><00:13:55.110><c> it's</c><00:13:55.259><c> very</c><00:13:55.379><c> old</c>

00:13:55.579 --> 00:13:55.589 align:start position:0%
some corner cases because it's very old
 

00:13:55.589 --> 00:13:58.790 align:start position:0%
some corner cases because it's very old
code<00:13:55.860><c> so</c><00:13:56.730><c> we</c><00:13:56.819><c> expect</c><00:13:57.089><c> that</c><00:13:57.209><c> for</c><00:13:57.660><c> maybe</c><00:13:58.499><c> for</c><00:13:58.769><c> a</c>

00:13:58.790 --> 00:13:58.800 align:start position:0%
code so we expect that for maybe for a
 

00:13:58.800 --> 00:14:00.799 align:start position:0%
code so we expect that for maybe for a
version<00:13:59.730><c> or</c><00:13:59.939><c> two</c><00:14:00.120><c> people</c><00:14:00.360><c> would</c><00:14:00.540><c> have</c><00:14:00.689><c> the</c>

00:14:00.799 --> 00:14:00.809 align:start position:0%
version or two people would have the
 

00:14:00.809 --> 00:14:02.720 align:start position:0%
version or two people would have the
option<00:14:00.959><c> of</c><00:14:01.290><c> either</c><00:14:01.589><c> using</c><00:14:01.949><c> the</c><00:14:01.980><c> old</c><00:14:02.160><c> C</c><00:14:02.339><c> code</c><00:14:02.550><c> or</c>

00:14:02.720 --> 00:14:02.730 align:start position:0%
option of either using the old C code or
 

00:14:02.730 --> 00:14:05.509 align:start position:0%
option of either using the old C code or
the<00:14:02.819><c> new</c><00:14:02.910><c> implementation</c><00:14:03.089><c> of</c><00:14:03.889><c> old</c><00:14:04.889><c> i/o</c><00:14:05.189><c> in</c>

00:14:05.509 --> 00:14:05.519 align:start position:0%
the new implementation of old i/o in
 

00:14:05.519 --> 00:14:08.090 align:start position:0%
the new implementation of old i/o in
Java<00:14:05.929><c> but</c><00:14:06.929><c> eventually</c><00:14:07.139><c> that</c><00:14:07.559><c> C</c><00:14:07.769><c> code</c><00:14:07.889><c> is</c><00:14:08.009><c> going</c>

00:14:08.090 --> 00:14:08.100 align:start position:0%
Java but eventually that C code is going
 

00:14:08.100 --> 00:14:12.369 align:start position:0%
Java but eventually that C code is going
to<00:14:08.160><c> go</c><00:14:08.279><c> away</c><00:14:08.399><c> it's</c><00:14:08.639><c> gonna</c><00:14:08.730><c> be</c><00:14:08.819><c> just</c><00:14:09.029><c> Java</c><00:14:10.639><c> it</c><00:14:11.639><c> is</c>

00:14:12.369 --> 00:14:12.379 align:start position:0%
to go away it's gonna be just Java it is
 

00:14:12.379 --> 00:14:18.199 align:start position:0%
to go away it's gonna be just Java it is
also<00:14:13.379><c> easy</c><00:14:13.589><c> to</c><00:14:13.730><c> mix</c><00:14:14.730><c> fibers</c><00:14:15.149><c> with</c><00:14:15.329><c> futures</c><00:14:17.209><c> one</c>

00:14:18.199 --> 00:14:18.209 align:start position:0%
also easy to mix fibers with futures one
 

00:14:18.209 --> 00:14:20.059 align:start position:0%
also easy to mix fibers with futures one
thing<00:14:18.420><c> here</c><00:14:18.629><c> just</c><00:14:18.870><c> so</c><00:14:18.929><c> you</c><00:14:18.959><c> see</c><00:14:19.230><c> the</c><00:14:19.379><c> the</c><00:14:19.800><c> kind</c>

00:14:20.059 --> 00:14:20.069 align:start position:0%
thing here just so you see the the kind
 

00:14:20.069 --> 00:14:21.949 align:start position:0%
thing here just so you see the the kind
of<00:14:20.129><c> difficulties</c><00:14:20.670><c> that</c><00:14:20.850><c> arise</c><00:14:20.970><c> and</c><00:14:21.569><c> and</c><00:14:21.809><c> when</c>

00:14:21.949 --> 00:14:21.959 align:start position:0%
of difficulties that arise and and when
 

00:14:21.959 --> 00:14:23.569 align:start position:0%
of difficulties that arise and and when
you<00:14:22.050><c> try</c><00:14:22.230><c> to</c><00:14:22.259><c> put</c><00:14:22.800><c> something</c><00:14:23.009><c> new</c><00:14:23.249><c> like</c><00:14:23.429><c> this</c>

00:14:23.569 --> 00:14:23.579 align:start position:0%
you try to put something new like this
 

00:14:23.579 --> 00:14:31.549 align:start position:0%
you try to put something new like this
into<00:14:25.790><c> the</c><00:14:26.790><c> old</c><00:14:27.389><c> JDK</c><00:14:29.870><c> you</c><00:14:30.870><c> can</c><00:14:31.079><c> turn</c><00:14:31.230><c> a</c><00:14:31.290><c> fiber</c>

00:14:31.549 --> 00:14:31.559 align:start position:0%
into the old JDK you can turn a fiber
 

00:14:31.559 --> 00:14:33.259 align:start position:0%
into the old JDK you can turn a fiber
into<00:14:31.800><c> a</c><00:14:31.829><c> future</c><00:14:32.249><c> but</c><00:14:32.550><c> a</c><00:14:32.579><c> fiber</c><00:14:32.879><c> does</c><00:14:33.120><c> not</c>

00:14:33.259 --> 00:14:33.269 align:start position:0%
into a future but a fiber does not
 

00:14:33.269 --> 00:14:36.499 align:start position:0%
into a future but a fiber does not
implement<00:14:33.569><c> future</c><00:14:34.819><c> why</c><00:14:35.819><c> is</c><00:14:35.879><c> that</c><00:14:35.999><c> because</c>

00:14:36.499 --> 00:14:36.509 align:start position:0%
implement future why is that because
 

00:14:36.509 --> 00:14:37.840 align:start position:0%
implement future why is that because
future<00:14:37.079><c> has</c><00:14:37.230><c> some</c><00:14:37.439><c> very</c><00:14:37.589><c> interesting</c>

00:14:37.840 --> 00:14:37.850 align:start position:0%
future has some very interesting
 

00:14:37.850 --> 00:14:40.299 align:start position:0%
future has some very interesting
semantics<00:14:38.850><c> defined</c><00:14:39.329><c> in</c><00:14:39.449><c> the</c><00:14:39.509><c> specification</c>

00:14:40.299 --> 00:14:40.309 align:start position:0%
semantics defined in the specification
 

00:14:40.309 --> 00:14:43.819 align:start position:0%
semantics defined in the specification
for<00:14:41.309><c> example</c><00:14:41.879><c> if</c><00:14:42.720><c> you</c><00:14:43.019><c> have</c><00:14:43.199><c> a</c><00:14:43.230><c> future</c><00:14:43.559><c> and</c><00:14:43.740><c> you</c>

00:14:43.819 --> 00:14:43.829 align:start position:0%
for example if you have a future and you
 

00:14:43.829 --> 00:14:46.879 align:start position:0%
for example if you have a future and you
call<00:14:43.949><c> cancel</c><00:14:44.720><c> that</c><00:14:45.720><c> cancellation</c><00:14:46.230><c> is</c><00:14:46.529><c> atomic</c>

00:14:46.879 --> 00:14:46.889 align:start position:0%
call cancel that cancellation is atomic
 

00:14:46.889 --> 00:14:49.369 align:start position:0%
call cancel that cancellation is atomic
the<00:14:47.370><c> next</c><00:14:47.639><c> time</c><00:14:47.819><c> if</c><00:14:48.059><c> you</c><00:14:48.480><c> ask</c><00:14:48.689><c> the</c><00:14:48.899><c> future</c><00:14:49.170><c> if</c>

00:14:49.369 --> 00:14:49.379 align:start position:0%
the next time if you ask the future if
 

00:14:49.379 --> 00:14:50.360 align:start position:0%
the next time if you ask the future if
you're<00:14:49.559><c> done</c>

00:14:50.360 --> 00:14:50.370 align:start position:0%
you're done
 

00:14:50.370 --> 00:14:52.880 align:start position:0%
you're done
even<00:14:51.060><c> if</c><00:14:51.150><c> it</c><00:14:51.270><c> hasn't</c><00:14:51.480><c> completed</c><00:14:52.320><c> executing</c>

00:14:52.880 --> 00:14:52.890 align:start position:0%
even if it hasn't completed executing
 

00:14:52.890 --> 00:14:54.580 align:start position:0%
even if it hasn't completed executing
yet<00:14:53.010><c> it</c><00:14:53.250><c> will</c><00:14:53.340><c> say</c><00:14:53.520><c> yes</c>

00:14:54.580 --> 00:14:54.590 align:start position:0%
yet it will say yes
 

00:14:54.590 --> 00:14:58.400 align:start position:0%
yet it will say yes
that's<00:14:55.590><c> the</c><00:14:55.710><c> API</c><00:14:55.830><c> for</c><00:14:56.040><c> futures</c><00:14:56.750><c> for</c><00:14:57.750><c> fibers</c><00:14:58.140><c> if</c>

00:14:58.400 --> 00:14:58.410 align:start position:0%
that's the API for futures for fibers if
 

00:14:58.410 --> 00:15:00.080 align:start position:0%
that's the API for futures for fibers if
you<00:14:58.620><c> want</c><00:14:58.800><c> to</c><00:14:58.890><c> ask</c><00:14:58.980><c> whether</c><00:14:59.340><c> you're</c><00:14:59.550><c> done</c><00:14:59.820><c> we</c>

00:15:00.080 --> 00:15:00.090 align:start position:0%
you want to ask whether you're done we
 

00:15:00.090 --> 00:15:01.520 align:start position:0%
you want to ask whether you're done we
really<00:15:00.510><c> want</c><00:15:00.660><c> to</c><00:15:00.690><c> know</c><00:15:00.780><c> if</c><00:15:00.930><c> you're</c><00:15:01.050><c> terminated</c>

00:15:01.520 --> 00:15:01.530 align:start position:0%
really want to know if you're terminated
 

00:15:01.530 --> 00:15:03.730 align:start position:0%
really want to know if you're terminated
so<00:15:02.400><c> even</c><00:15:02.610><c> though</c><00:15:02.700><c> the</c><00:15:02.850><c> methods</c><00:15:03.240><c> are</c><00:15:03.360><c> the</c><00:15:03.480><c> same</c>

00:15:03.730 --> 00:15:03.740 align:start position:0%
so even though the methods are the same
 

00:15:03.740 --> 00:15:06.530 align:start position:0%
so even though the methods are the same
the<00:15:04.740><c> semantics</c><00:15:05.160><c> are</c><00:15:05.280><c> different</c><00:15:05.610><c> so</c><00:15:06.300><c> instead</c>

00:15:06.530 --> 00:15:06.540 align:start position:0%
the semantics are different so instead
 

00:15:06.540 --> 00:15:09.620 align:start position:0%
the semantics are different so instead
of<00:15:06.600><c> having</c><00:15:06.810><c> fiber</c><00:15:07.200><c> implements</c><00:15:07.920><c> futures</c><00:15:08.640><c> you</c>

00:15:09.620 --> 00:15:09.630 align:start position:0%
of having fiber implements futures you
 

00:15:09.630 --> 00:15:11.420 align:start position:0%
of having fiber implements futures you
can<00:15:10.050><c> we</c><00:15:10.260><c> can</c><00:15:10.470><c> ask</c><00:15:10.620><c> to</c><00:15:10.680><c> convert</c><00:15:11.070><c> them</c><00:15:11.250><c> to</c><00:15:11.280><c> a</c>

00:15:11.420 --> 00:15:11.430 align:start position:0%
can we can ask to convert them to a
 

00:15:11.430 --> 00:15:14.210 align:start position:0%
can we can ask to convert them to a
future<00:15:12.380><c> we</c><00:15:13.380><c> have</c><00:15:13.500><c> some</c><00:15:13.710><c> support</c><00:15:14.070><c> in</c><00:15:14.130><c> the</c>

00:15:14.210 --> 00:15:14.220 align:start position:0%
future we have some support in the
 

00:15:14.220 --> 00:15:16.430 align:start position:0%
future we have some support in the
debugger<00:15:14.550><c> already</c><00:15:14.910><c> so</c><00:15:15.870><c> you</c><00:15:15.930><c> can</c><00:15:16.080><c> step</c><00:15:16.290><c> through</c>

00:15:16.430 --> 00:15:16.440 align:start position:0%
debugger already so you can step through
 

00:15:16.440 --> 00:15:19.820 align:start position:0%
debugger already so you can step through
fibers<00:15:16.910><c> you</c><00:15:17.910><c> can</c><00:15:18.090><c> get</c><00:15:18.900><c> a</c><00:15:18.930><c> list</c><00:15:19.140><c> see</c><00:15:19.530><c> a</c><00:15:19.560><c> bit</c><00:15:19.800><c> of</c>

00:15:19.820 --> 00:15:19.830 align:start position:0%
fibers you can get a list see a bit of
 

00:15:19.830 --> 00:15:21.800 align:start position:0%
fibers you can get a list see a bit of
see<00:15:20.640><c> a</c><00:15:20.670><c> list</c><00:15:20.910><c> of</c><00:15:21.000><c> the</c><00:15:21.120><c> fibers</c><00:15:21.390><c> but</c><00:15:21.570><c> this</c><00:15:21.660><c> is</c>

00:15:21.800 --> 00:15:21.810 align:start position:0%
see a list of the fibers but this is
 

00:15:21.810 --> 00:15:24.020 align:start position:0%
see a list of the fibers but this is
another<00:15:21.990><c> problem</c><00:15:22.610><c> again</c><00:15:23.610><c> so</c><00:15:23.730><c> you</c><00:15:23.820><c> got</c><00:15:23.940><c> to</c>

00:15:24.020 --> 00:15:24.030 align:start position:0%
another problem again so you got to
 

00:15:24.030 --> 00:15:26.780 align:start position:0%
another problem again so you got to
think<00:15:24.120><c> about</c><00:15:24.210><c> debugging</c><00:15:24.780><c> and</c><00:15:25.190><c> unlike</c><00:15:26.190><c> threads</c>

00:15:26.780 --> 00:15:26.790 align:start position:0%
think about debugging and unlike threads
 

00:15:26.790 --> 00:15:28.490 align:start position:0%
think about debugging and unlike threads
you<00:15:26.970><c> can</c><00:15:27.030><c> have</c><00:15:27.300><c> maybe</c><00:15:27.750><c> a</c><00:15:27.900><c> couple</c><00:15:28.110><c> of</c><00:15:28.230><c> thousands</c>

00:15:28.490 --> 00:15:28.500 align:start position:0%
you can have maybe a couple of thousands
 

00:15:28.500 --> 00:15:30.290 align:start position:0%
you can have maybe a couple of thousands
of<00:15:28.590><c> them</c><00:15:28.680><c> here</c><00:15:28.860><c> you</c><00:15:28.920><c> can</c><00:15:29.010><c> have</c><00:15:29.100><c> millions</c><00:15:29.520><c> so</c>

00:15:30.290 --> 00:15:30.300 align:start position:0%
of them here you can have millions so
 

00:15:30.300 --> 00:15:31.700 align:start position:0%
of them here you can have millions so
obviously<00:15:30.660><c> just</c><00:15:30.840><c> sending</c><00:15:31.230><c> the</c><00:15:31.320><c> list</c><00:15:31.560><c> of</c>

00:15:31.700 --> 00:15:31.710 align:start position:0%
obviously just sending the list of
 

00:15:31.710 --> 00:15:34.520 align:start position:0%
obviously just sending the list of
fibers<00:15:32.040><c> to</c><00:15:32.250><c> the</c><00:15:32.520><c> to</c><00:15:33.330><c> the</c><00:15:33.780><c> debugger</c><00:15:34.260><c> is</c><00:15:34.380><c> going</c>

00:15:34.520 --> 00:15:34.530 align:start position:0%
fibers to the to the debugger is going
 

00:15:34.530 --> 00:15:36.590 align:start position:0%
fibers to the to the debugger is going
to<00:15:34.590><c> take</c><00:15:34.710><c> a</c><00:15:34.740><c> while</c><00:15:35.000><c> so</c><00:15:36.000><c> you</c><00:15:36.060><c> have</c><00:15:36.210><c> to</c><00:15:36.330><c> think</c><00:15:36.540><c> how</c>

00:15:36.590 --> 00:15:36.600 align:start position:0%
to take a while so you have to think how
 

00:15:36.600 --> 00:15:39.230 align:start position:0%
to take a while so you have to think how
to<00:15:36.660><c> do</c><00:15:36.810><c> that</c><00:15:36.960><c> so</c><00:15:37.650><c> maybe</c><00:15:37.800><c> just</c><00:15:37.890><c> certain</c><00:15:38.820><c> fibers</c>

00:15:39.230 --> 00:15:39.240 align:start position:0%
to do that so maybe just certain fibers
 

00:15:39.240 --> 00:15:40.970 align:start position:0%
to do that so maybe just certain fibers
at<00:15:39.330><c> you</c><00:15:39.390><c> mark</c><00:15:39.690><c> maybe</c><00:15:40.050><c> just</c><00:15:40.320><c> the</c><00:15:40.440><c> fibers</c><00:15:40.800><c> that</c>

00:15:40.970 --> 00:15:40.980 align:start position:0%
at you mark maybe just the fibers that
 

00:15:40.980 --> 00:15:43.760 align:start position:0%
at you mark maybe just the fibers that
you<00:15:41.490><c> set</c><00:15:41.790><c> a</c><00:15:41.820><c> breakpoint</c><00:15:42.090><c> on</c><00:15:42.650><c> there</c><00:15:43.650><c> is</c><00:15:43.740><c> some</c>

00:15:43.760 --> 00:15:43.770 align:start position:0%
you set a breakpoint on there is some
 

00:15:43.770 --> 00:15:47.540 align:start position:0%
you set a breakpoint on there is some
stuff<00:15:44.520><c> there</c><00:15:45.860><c> when</c><00:15:46.860><c> it</c><00:15:46.980><c> comes</c><00:15:47.130><c> to</c><00:15:47.250><c> management</c>

00:15:47.540 --> 00:15:47.550 align:start position:0%
stuff there when it comes to management
 

00:15:47.550 --> 00:15:51.220 align:start position:0%
stuff there when it comes to management
and<00:15:47.790><c> JFR</c><00:15:48.410><c> we</c><00:15:49.410><c> haven't</c><00:15:49.740><c> even</c><00:15:50.220><c> started</c><00:15:50.460><c> that</c><00:15:50.730><c> yet</c>

00:15:51.220 --> 00:15:51.230 align:start position:0%
and JFR we haven't even started that yet
 

00:15:51.230 --> 00:15:54.290 align:start position:0%
and JFR we haven't even started that yet
I'm<00:15:52.230><c> ashamed</c><00:15:52.470><c> I</c><00:15:52.650><c> have</c><00:15:52.800><c> almost</c><00:15:53.490><c> nothing</c><00:15:53.850><c> okay</c>

00:15:54.290 --> 00:15:54.300 align:start position:0%
I'm ashamed I have almost nothing okay
 

00:15:54.300 --> 00:15:58.160 align:start position:0%
I'm ashamed I have almost nothing okay
so<00:15:54.360><c> I'm</c><00:15:54.480><c> gonna</c><00:15:54.600><c> skip</c><00:15:54.840><c> that</c><00:15:56.900><c> alright</c><00:15:57.900><c> so</c><00:15:57.930><c> in</c>

00:15:58.160 --> 00:15:58.170 align:start position:0%
so I'm gonna skip that alright so in
 

00:15:58.170 --> 00:16:02.420 align:start position:0%
so I'm gonna skip that alright so in
terms<00:15:58.410><c> of</c><00:16:00.200><c> what</c><00:16:01.200><c> we've</c><00:16:01.320><c> accomplished</c><00:16:01.770><c> of</c>

00:16:02.420 --> 00:16:02.430 align:start position:0%
terms of what we've accomplished of
 

00:16:02.430 --> 00:16:07.250 align:start position:0%
terms of what we've accomplished of
making<00:16:02.970><c> them</c><00:16:03.060><c> lightweight</c><00:16:03.420><c> a</c><00:16:04.640><c> thread</c><00:16:05.640><c> has</c><00:16:06.260><c> in</c>

00:16:07.250 --> 00:16:07.260 align:start position:0%
making them lightweight a thread has in
 

00:16:07.260 --> 00:16:09.770 align:start position:0%
making them lightweight a thread has in
Java<00:16:07.830><c> has</c><00:16:08.070><c> two</c><00:16:08.640><c> kilobytes</c><00:16:08.910><c> of</c><00:16:09.150><c> metadata</c><00:16:09.450><c> and</c>

00:16:09.770 --> 00:16:09.780 align:start position:0%
Java has two kilobytes of metadata and
 

00:16:09.780 --> 00:16:12.560 align:start position:0%
Java has two kilobytes of metadata and
by<00:16:10.380><c> default</c><00:16:10.650><c> one</c><00:16:10.890><c> megabyte</c><00:16:11.160><c> of</c><00:16:11.340><c> stack</c><00:16:11.580><c> for</c>

00:16:12.560 --> 00:16:12.570 align:start position:0%
by default one megabyte of stack for
 

00:16:12.570 --> 00:16:15.500 align:start position:0%
by default one megabyte of stack for
fibers<00:16:13.220><c> it's</c><00:16:14.220><c> two</c><00:16:14.940><c> hundred</c><00:16:15.300><c> three</c><00:16:15.390><c> hundred</c>

00:16:15.500 --> 00:16:15.510 align:start position:0%
fibers it's two hundred three hundred
 

00:16:15.510 --> 00:16:17.650 align:start position:0%
fibers it's two hundred three hundred
bytes<00:16:15.810><c> of</c><00:16:15.930><c> metadata</c><00:16:16.200><c> it's</c><00:16:16.440><c> going</c><00:16:16.590><c> to</c><00:16:16.650><c> go</c><00:16:16.860><c> down</c>

00:16:17.650 --> 00:16:17.660 align:start position:0%
bytes of metadata it's going to go down
 

00:16:17.660 --> 00:16:20.600 align:start position:0%
bytes of metadata it's going to go down
and<00:16:18.660><c> the</c><00:16:19.140><c> stack</c><00:16:19.350><c> grows</c><00:16:19.620><c> and</c><00:16:20.040><c> shrink</c><00:16:20.250><c> as</c><00:16:20.400><c> you</c><00:16:20.490><c> go</c>

00:16:20.600 --> 00:16:20.610 align:start position:0%
and the stack grows and shrink as you go
 

00:16:20.610 --> 00:16:22.220 align:start position:0%
and the stack grows and shrink as you go
because<00:16:20.880><c> it's</c><00:16:21.000><c> in</c><00:16:21.120><c> the</c><00:16:21.180><c> heap</c><00:16:21.330><c> and</c><00:16:21.630><c> we</c><00:16:21.840><c> allocate</c>

00:16:22.220 --> 00:16:22.230 align:start position:0%
because it's in the heap and we allocate
 

00:16:22.230 --> 00:16:23.990 align:start position:0%
because it's in the heap and we allocate
it<00:16:22.320><c> as</c><00:16:22.440><c> needed</c><00:16:22.650><c> can</c><00:16:23.160><c> be</c><00:16:23.280><c> a</c><00:16:23.310><c> few</c><00:16:23.460><c> bytes</c><00:16:23.670><c> it</c><00:16:23.910><c> can</c>

00:16:23.990 --> 00:16:24.000 align:start position:0%
it as needed can be a few bytes it can
 

00:16:24.000 --> 00:16:26.140 align:start position:0%
it as needed can be a few bytes it can
be<00:16:24.090><c> a</c><00:16:24.120><c> few</c><00:16:24.270><c> kilobytes</c><00:16:24.540><c> me</c><00:16:25.020><c> a</c><00:16:25.080><c> few</c><00:16:25.230><c> megabytes</c>

00:16:26.140 --> 00:16:26.150 align:start position:0%
be a few kilobytes me a few megabytes
 

00:16:26.150 --> 00:16:28.310 align:start position:0%
be a few kilobytes me a few megabytes
the<00:16:27.150><c> task</c><00:16:27.360><c> switching</c><00:16:27.540><c> calls</c><00:16:27.810><c> for</c><00:16:27.960><c> threads</c><00:16:28.170><c> is</c>

00:16:28.310 --> 00:16:28.320 align:start position:0%
the task switching calls for threads is
 

00:16:28.320 --> 00:16:30.080 align:start position:0%
the task switching calls for threads is
between<00:16:28.650><c> like</c><00:16:28.860><c> one</c><00:16:29.100><c> and</c><00:16:29.250><c> ten</c><00:16:29.430><c> microseconds</c><00:16:30.030><c> it</c>

00:16:30.080 --> 00:16:30.090 align:start position:0%
between like one and ten microseconds it
 

00:16:30.090 --> 00:16:32.360 align:start position:0%
between like one and ten microseconds it
can<00:16:30.360><c> be</c><00:16:30.450><c> even</c><00:16:30.720><c> more</c><00:16:30.900><c> we're</c><00:16:31.830><c> still</c><00:16:32.040><c> working</c><00:16:32.310><c> on</c>

00:16:32.360 --> 00:16:32.370 align:start position:0%
can be even more we're still working on
 

00:16:32.370 --> 00:16:34.220 align:start position:0%
can be even more we're still working on
performance<00:16:32.640><c> so</c><00:16:32.910><c> we</c><00:16:33.060><c> don't</c><00:16:33.240><c> know</c><00:16:33.420><c> what</c><00:16:34.140><c> the</c>

00:16:34.220 --> 00:16:34.230 align:start position:0%
performance so we don't know what the
 

00:16:34.230 --> 00:16:37.550 align:start position:0%
performance so we don't know what the
SAS<00:16:34.380><c> wishing</c><00:16:34.710><c> calls</c><00:16:34.860><c> for</c><00:16:35.010><c> fibers</c><00:16:35.460><c> is</c><00:16:36.380><c> but</c><00:16:37.380><c> it's</c>

00:16:37.550 --> 00:16:37.560 align:start position:0%
SAS wishing calls for fibers is but it's
 

00:16:37.560 --> 00:16:44.180 align:start position:0%
SAS wishing calls for fibers is but it's
gonna<00:16:37.710><c> be</c><00:16:37.860><c> substantially</c><00:16:38.400><c> less</c><00:16:40.880><c> so</c><00:16:43.160><c> less</c><00:16:44.160><c> than</c>

00:16:44.180 --> 00:16:44.190 align:start position:0%
gonna be substantially less so less than
 

00:16:44.190 --> 00:16:45.500 align:start position:0%
gonna be substantially less so less than
five<00:16:44.430><c> minutes</c><00:16:44.670><c> okay</c>

00:16:45.500 --> 00:16:45.510 align:start position:0%
five minutes okay
 

00:16:45.510 --> 00:16:52.090 align:start position:0%
five minutes okay
so<00:16:47.660><c> so</c><00:16:48.660><c> far</c><00:16:48.950><c> my</c><00:16:49.950><c> hope</c><00:16:50.220><c> was</c><00:16:50.460><c> that</c><00:16:50.720><c> you</c><00:16:51.720><c> know</c>

00:16:52.090 --> 00:16:52.100 align:start position:0%
so so far my hope was that you know
 

00:16:52.100 --> 00:16:54.050 align:start position:0%
so so far my hope was that you know
fibers<00:16:53.100><c> are</c><00:16:53.250><c> just</c><00:16:53.460><c> implementation</c><00:16:53.970><c> of</c>

00:16:54.050 --> 00:16:54.060 align:start position:0%
fibers are just implementation of
 

00:16:54.060 --> 00:16:56.240 align:start position:0%
fibers are just implementation of
threads<00:16:54.300><c> let's</c><00:16:54.720><c> just</c><00:16:54.960><c> take</c><00:16:55.620><c> the</c><00:16:55.770><c> thread</c><00:16:55.950><c> API</c>

00:16:56.240 --> 00:16:56.250 align:start position:0%
threads let's just take the thread API
 

00:16:56.250 --> 00:16:58.190 align:start position:0%
threads let's just take the thread API
we<00:16:56.520><c> have</c><00:16:56.550><c> maybe</c><00:16:57.000><c> add</c><00:16:57.210><c> a</c><00:16:57.240><c> new</c><00:16:57.510><c> constructor</c><00:16:58.050><c> that</c>

00:16:58.190 --> 00:16:58.200 align:start position:0%
we have maybe add a new constructor that
 

00:16:58.200 --> 00:17:00.650 align:start position:0%
we have maybe add a new constructor that
was<00:16:58.500><c> my</c><00:16:58.620><c> dream</c><00:16:58.800><c> just</c><00:16:59.040><c> I</c><00:16:59.490><c> don't</c><00:17:00.120><c> like</c><00:17:00.210><c> coming</c><00:17:00.510><c> up</c>

00:17:00.650 --> 00:17:00.660 align:start position:0%
was my dream just I don't like coming up
 

00:17:00.660 --> 00:17:03.290 align:start position:0%
was my dream just I don't like coming up
with<00:17:00.690><c> new</c><00:17:00.870><c> api's</c><00:17:01.200><c> so</c><00:17:02.190><c> I</c><00:17:02.220><c> thought</c>

00:17:03.290 --> 00:17:03.300 align:start position:0%
with new api's so I thought
 

00:17:03.300 --> 00:17:04.539 align:start position:0%
with new api's so I thought
[Music]

00:17:04.539 --> 00:17:04.549 align:start position:0%
[Music]
 

00:17:04.549 --> 00:17:07.730 align:start position:0%
[Music]
we<00:17:05.549><c> already</c><00:17:05.699><c> have</c><00:17:06.000><c> an</c><00:17:06.120><c> API</c><00:17:06.389><c> for</c><00:17:06.449><c> threading</c><00:17:06.779><c> if</c>

00:17:07.730 --> 00:17:07.740 align:start position:0%
we already have an API for threading if
 

00:17:07.740 --> 00:17:10.069 align:start position:0%
we already have an API for threading if
we<00:17:07.889><c> could</c><00:17:08.069><c> just</c><00:17:08.100><c> get</c><00:17:08.370><c> another</c><00:17:09.079><c> constructor</c>

00:17:10.069 --> 00:17:10.079 align:start position:0%
we could just get another constructor
 

00:17:10.079 --> 00:17:11.600 align:start position:0%
we could just get another constructor
for<00:17:10.199><c> thread</c><00:17:10.500><c> that</c><00:17:10.679><c> maybe</c><00:17:10.829><c> takes</c><00:17:11.069><c> a</c><00:17:11.159><c> scheduler</c>

00:17:11.600 --> 00:17:11.610 align:start position:0%
for thread that maybe takes a scheduler
 

00:17:11.610 --> 00:17:13.669 align:start position:0%
for thread that maybe takes a scheduler
parameter<00:17:12.000><c> and</c><00:17:12.120><c> then</c><00:17:12.179><c> you</c><00:17:12.360><c> get</c><00:17:12.510><c> a</c><00:17:12.539><c> fiber</c><00:17:12.839><c> and</c>

00:17:13.669 --> 00:17:13.679 align:start position:0%
parameter and then you get a fiber and
 

00:17:13.679 --> 00:17:15.620 align:start position:0%
parameter and then you get a fiber and
that's<00:17:13.799><c> it</c><00:17:13.980><c> that</c><00:17:14.399><c> would</c><00:17:14.669><c> be</c><00:17:14.789><c> do</c><00:17:15.269><c> a</c><00:17:15.299><c> lot</c><00:17:15.480><c> of</c><00:17:15.539><c> work</c>

00:17:15.620 --> 00:17:15.630 align:start position:0%
that's it that would be do a lot of work
 

00:17:15.630 --> 00:17:17.539 align:start position:0%
that's it that would be do a lot of work
in<00:17:15.750><c> the</c><00:17:15.809><c> VM</c><00:17:15.990><c> some</c><00:17:16.529><c> working</c><00:17:16.769><c> libraries</c><00:17:17.189><c> but</c><00:17:17.459><c> in</c>

00:17:17.539 --> 00:17:17.549 align:start position:0%
in the VM some working libraries but in
 

00:17:17.549 --> 00:17:19.009 align:start position:0%
in the VM some working libraries but in
terms<00:17:17.730><c> of</c><00:17:17.819><c> API</c><00:17:18.089><c> design</c><00:17:18.480><c> we'll</c><00:17:18.689><c> use</c><00:17:18.809><c> whatever</c>

00:17:19.009 --> 00:17:19.019 align:start position:0%
terms of API design we'll use whatever
 

00:17:19.019 --> 00:17:22.639 align:start position:0%
terms of API design we'll use whatever
we<00:17:19.260><c> have</c><00:17:19.789><c> but</c><00:17:20.789><c> then</c><00:17:20.909><c> we</c><00:17:21.689><c> talk</c><00:17:21.899><c> to</c><00:17:22.139><c> the</c>

00:17:22.639 --> 00:17:22.649 align:start position:0%
we have but then we talk to the
 

00:17:22.649 --> 00:17:25.519 align:start position:0%
we have but then we talk to the
architects<00:17:23.159><c> mark</c><00:17:23.639><c> John</c><00:17:23.819><c> and</c><00:17:24.089><c> Brian</c><00:17:24.380><c> and</c><00:17:25.380><c> they</c>

00:17:25.519 --> 00:17:25.529 align:start position:0%
architects mark John and Brian and they
 

00:17:25.529 --> 00:17:29.060 align:start position:0%
architects mark John and Brian and they
said<00:17:25.709><c> listen</c><00:17:27.500><c> you're</c><00:17:28.500><c> working</c><00:17:28.950><c> with</c>

00:17:29.060 --> 00:17:29.070 align:start position:0%
said listen you're working with
 

00:17:29.070 --> 00:17:32.659 align:start position:0%
said listen you're working with
concurrency<00:17:29.720><c> and</c><00:17:30.720><c> after</c><00:17:31.169><c> 20</c><00:17:31.440><c> years</c><00:17:31.679><c> there's</c><00:17:32.549><c> a</c>

00:17:32.659 --> 00:17:32.669 align:start position:0%
concurrency and after 20 years there's a
 

00:17:32.669 --> 00:17:35.149 align:start position:0%
concurrency and after 20 years there's a
good<00:17:32.789><c> opportunity</c><00:17:33.029><c> to</c><00:17:33.840><c> make</c><00:17:34.440><c> some</c><00:17:34.590><c> changes</c><00:17:34.919><c> so</c>

00:17:35.149 --> 00:17:35.159 align:start position:0%
good opportunity to make some changes so
 

00:17:35.159 --> 00:17:38.210 align:start position:0%
good opportunity to make some changes so
maybe<00:17:35.850><c> start</c><00:17:36.059><c> the</c><00:17:36.179><c> beginning</c><00:17:36.510><c> and</c><00:17:36.710><c> so</c><00:17:37.710><c> this</c><00:17:38.070><c> is</c>

00:17:38.210 --> 00:17:38.220 align:start position:0%
maybe start the beginning and so this is
 

00:17:38.220 --> 00:17:40.639 align:start position:0%
maybe start the beginning and so this is
I<00:17:38.370><c> think</c><00:17:38.399><c> the</c><00:17:38.700><c> difference</c><00:17:39.120><c> between</c><00:17:39.500><c> Java</c><00:17:40.500><c> and</c>

00:17:40.639 --> 00:17:40.649 align:start position:0%
I think the difference between Java and
 

00:17:40.649 --> 00:17:42.049 align:start position:0%
I think the difference between Java and
maybe<00:17:40.950><c> other</c><00:17:41.100><c> languages</c><00:17:41.460><c> other</c><00:17:41.639><c> languages</c>

00:17:42.049 --> 00:17:42.059 align:start position:0%
maybe other languages other languages
 

00:17:42.059 --> 00:17:45.259 align:start position:0%
maybe other languages other languages
want<00:17:42.600><c> to</c><00:17:42.690><c> get</c><00:17:42.779><c> many</c><00:17:43.019><c> users</c><00:17:43.380><c> and</c><00:17:44.029><c> they</c><00:17:45.029><c> try</c><00:17:45.240><c> to</c>

00:17:45.259 --> 00:17:45.269 align:start position:0%
want to get many users and they try to
 

00:17:45.269 --> 00:17:48.649 align:start position:0%
want to get many users and they try to
to<00:17:45.990><c> get</c><00:17:46.380><c> the</c><00:17:46.559><c> attractive</c><00:17:47.519><c> features</c><00:17:47.850><c> in</c><00:17:48.149><c> as</c>

00:17:48.649 --> 00:17:48.659 align:start position:0%
to get the attractive features in as
 

00:17:48.659 --> 00:17:51.830 align:start position:0%
to get the attractive features in as
quickly<00:17:48.899><c> as</c><00:17:49.080><c> possible</c><00:17:49.490><c> for</c><00:17:50.490><c> us</c><00:17:50.639><c> we</c><00:17:51.269><c> know</c><00:17:51.389><c> we've</c>

00:17:51.830 --> 00:17:51.840 align:start position:0%
quickly as possible for us we know we've
 

00:17:51.840 --> 00:17:53.330 align:start position:0%
quickly as possible for us we know we've
been<00:17:51.960><c> around</c><00:17:52.080><c> for</c><00:17:52.320><c> a</c><00:17:52.380><c> long</c><00:17:52.470><c> time</c><00:17:52.529><c> and</c><00:17:53.250><c> this</c>

00:17:53.330 --> 00:17:53.340 align:start position:0%
been around for a long time and this
 

00:17:53.340 --> 00:17:54.259 align:start position:0%
been around for a long time and this
point<00:17:53.610><c> we're</c><00:17:53.730><c> certain</c><00:17:53.909><c> we're</c><00:17:54.000><c> gonna</c><00:17:54.120><c> be</c>

00:17:54.259 --> 00:17:54.269 align:start position:0%
point we're certain we're gonna be
 

00:17:54.269 --> 00:17:57.289 align:start position:0%
point we're certain we're gonna be
around<00:17:54.480><c> for</c><00:17:54.840><c> a</c><00:17:54.870><c> long</c><00:17:54.960><c> time</c><00:17:55.200><c> yet</c><00:17:55.740><c> so</c><00:17:56.519><c> we</c><00:17:57.059><c> need</c><00:17:57.210><c> to</c>

00:17:57.289 --> 00:17:57.299 align:start position:0%
around for a long time yet so we need to
 

00:17:57.299 --> 00:17:59.629 align:start position:0%
around for a long time yet so we need to
when<00:17:57.630><c> we</c><00:17:57.809><c> do</c><00:17:58.230><c> something</c><00:17:58.470><c> we</c><00:17:58.860><c> try</c><00:17:59.340><c> to</c><00:17:59.399><c> think</c>

00:17:59.629 --> 00:17:59.639 align:start position:0%
when we do something we try to think
 

00:17:59.639 --> 00:18:00.980 align:start position:0%
when we do something we try to think
whether<00:17:59.850><c> that's</c><00:18:00.360><c> gonna</c><00:18:00.480><c> be</c><00:18:00.630><c> the</c><00:18:00.690><c> right</c><00:18:00.809><c> thing</c>

00:18:00.980 --> 00:18:00.990 align:start position:0%
whether that's gonna be the right thing
 

00:18:00.990 --> 00:18:03.350 align:start position:0%
whether that's gonna be the right thing
for<00:18:01.019><c> the</c><00:18:01.169><c> next</c><00:18:01.350><c> 20</c><00:18:01.559><c> years</c><00:18:01.760><c> so</c><00:18:02.760><c> you</c><00:18:02.909><c> say</c><00:18:03.029><c> ok</c><00:18:03.299><c> so</c>

00:18:03.350 --> 00:18:03.360 align:start position:0%
for the next 20 years so you say ok so
 

00:18:03.360 --> 00:18:04.460 align:start position:0%
for the next 20 years so you say ok so
you're<00:18:03.539><c> touching</c><00:18:03.779><c> the</c><00:18:03.840><c> concepts</c><00:18:04.169><c> of</c><00:18:04.260><c> threads</c>

00:18:04.460 --> 00:18:04.470 align:start position:0%
you're touching the concepts of threads
 

00:18:04.470 --> 00:18:06.950 align:start position:0%
you're touching the concepts of threads
maybe<00:18:04.740><c> try</c><00:18:05.610><c> start</c><00:18:06.029><c> with</c><00:18:06.120><c> nothing</c><00:18:06.480><c> and</c><00:18:06.690><c> see</c>

00:18:06.950 --> 00:18:06.960 align:start position:0%
maybe try start with nothing and see
 

00:18:06.960 --> 00:18:08.600 align:start position:0%
maybe try start with nothing and see
what<00:18:07.080><c> he</c><00:18:07.139><c> actually</c><00:18:07.289><c> needs</c><00:18:07.649><c> so</c><00:18:07.919><c> instead</c><00:18:08.519><c> of</c>

00:18:08.600 --> 00:18:08.610 align:start position:0%
what he actually needs so instead of
 

00:18:08.610 --> 00:18:10.519 align:start position:0%
what he actually needs so instead of
using<00:18:08.760><c> a</c><00:18:08.970><c> thread</c><00:18:09.120><c> API</c><00:18:09.419><c> certain</c><00:18:10.139><c> something</c>

00:18:10.519 --> 00:18:10.529 align:start position:0%
using a thread API certain something
 

00:18:10.529 --> 00:18:12.620 align:start position:0%
using a thread API certain something
that<00:18:10.769><c> has</c><00:18:11.100><c> nothing</c><00:18:11.309><c> there</c><00:18:11.639><c> and</c><00:18:11.850><c> rethink</c>

00:18:12.620 --> 00:18:12.630 align:start position:0%
that has nothing there and rethink
 

00:18:12.630 --> 00:18:14.750 align:start position:0%
that has nothing there and rethink
threads<00:18:12.899><c> so</c><00:18:13.559><c> I</c><00:18:13.620><c> thought</c><00:18:13.860><c> it</c><00:18:14.549><c> would</c><00:18:14.610><c> probably</c>

00:18:14.750 --> 00:18:14.760 align:start position:0%
threads so I thought it would probably
 

00:18:14.760 --> 00:18:16.490 align:start position:0%
threads so I thought it would probably
end<00:18:15.029><c> up</c><00:18:15.059><c> with</c><00:18:15.179><c> the</c><00:18:15.299><c> same</c><00:18:15.480><c> thing</c><00:18:15.510><c> so</c><00:18:15.960><c> I</c><00:18:16.019><c> didn't</c>

00:18:16.490 --> 00:18:16.500 align:start position:0%
end up with the same thing so I didn't
 

00:18:16.500 --> 00:18:18.320 align:start position:0%
end up with the same thing so I didn't
know<00:18:16.590><c> really</c><00:18:17.159><c> what's</c><00:18:17.639><c> gonna</c><00:18:17.730><c> be</c><00:18:17.880><c> the</c><00:18:18.000><c> result</c>

00:18:18.320 --> 00:18:18.330 align:start position:0%
know really what's gonna be the result
 

00:18:18.330 --> 00:18:21.139 align:start position:0%
know really what's gonna be the result
but<00:18:19.260><c> shortly</c><00:18:19.679><c> afterwards</c><00:18:20.220><c> I</c><00:18:20.340><c> ran</c><00:18:20.639><c> into</c><00:18:20.760><c> a</c><00:18:20.880><c> blog</c>

00:18:21.139 --> 00:18:21.149 align:start position:0%
but shortly afterwards I ran into a blog
 

00:18:21.149 --> 00:18:23.870 align:start position:0%
but shortly afterwards I ran into a blog
post<00:18:21.649><c> was</c><00:18:22.649><c> actually</c><00:18:23.100><c> two</c><00:18:23.309><c> blog</c><00:18:23.519><c> posts</c><00:18:23.549><c> these</c>

00:18:23.870 --> 00:18:23.880 align:start position:0%
post was actually two blog posts these
 

00:18:23.880 --> 00:18:26.419 align:start position:0%
post was actually two blog posts these
one<00:18:24.029><c> these</c><00:18:24.659><c> ones</c><00:18:24.870><c> by</c><00:18:25.049><c> a</c><00:18:25.080><c> Nathaniel</c><00:18:25.830><c> J</c><00:18:26.010><c> Smith</c>

00:18:26.419 --> 00:18:26.429 align:start position:0%
one these ones by a Nathaniel J Smith
 

00:18:26.429 --> 00:18:28.039 align:start position:0%
one these ones by a Nathaniel J Smith
writes<00:18:26.970><c> live</c><00:18:27.210><c> worship</c><00:18:27.360><c> Python</c><00:18:27.809><c> about</c>

00:18:28.039 --> 00:18:28.049 align:start position:0%
writes live worship Python about
 

00:18:28.049 --> 00:18:29.210 align:start position:0%
writes live worship Python about
something<00:18:28.620><c> called</c><00:18:28.769><c> a</c><00:18:28.980><c> structured</c>

00:18:29.210 --> 00:18:29.220 align:start position:0%
something called a structured
 

00:18:29.220 --> 00:18:31.279 align:start position:0%
something called a structured
concurrency<00:18:29.940><c> he</c><00:18:30.720><c> actually</c><00:18:30.960><c> didn't</c><00:18:31.139><c> come</c><00:18:31.260><c> up</c>

00:18:31.279 --> 00:18:31.289 align:start position:0%
concurrency he actually didn't come up
 

00:18:31.289 --> 00:18:33.409 align:start position:0%
concurrency he actually didn't come up
with<00:18:31.440><c> the</c><00:18:31.559><c> idea</c><00:18:31.769><c> the</c><00:18:31.889><c> idea</c><00:18:32.059><c> yes</c><00:18:33.059><c> he</c><00:18:33.210><c> is</c>

00:18:33.409 --> 00:18:33.419 align:start position:0%
with the idea the idea yes he is
 

00:18:33.419 --> 00:18:36.250 align:start position:0%
with the idea the idea yes he is
attributed<00:18:33.870><c> to</c><00:18:33.899><c> Martin</c><00:18:34.769><c> sauce</c><00:18:35.010><c> trick</c><00:18:35.220><c> and</c>

00:18:36.250 --> 00:18:36.260 align:start position:0%
attributed to Martin sauce trick and
 

00:18:36.260 --> 00:18:39.350 align:start position:0%
attributed to Martin sauce trick and
structure<00:18:37.260><c> when</c><00:18:38.190><c> I</c><00:18:38.220><c> read</c><00:18:38.549><c> at</c><00:18:38.669><c> least</c><00:18:38.730><c> it</c><00:18:39.120><c> was</c>

00:18:39.350 --> 00:18:39.360 align:start position:0%
structure when I read at least it was
 

00:18:39.360 --> 00:18:43.360 align:start position:0%
structure when I read at least it was
one<00:18:39.630><c> of</c><00:18:39.720><c> these</c><00:18:39.809><c> rare</c><00:18:40.380><c> occasions</c><00:18:41.010><c> when</c><00:18:41.850><c> you</c>

00:18:43.360 --> 00:18:43.370 align:start position:0%
one of these rare occasions when you
 

00:18:43.370 --> 00:18:45.710 align:start position:0%
one of these rare occasions when you
read<00:18:44.370><c> a</c><00:18:44.399><c> technical</c><00:18:44.820><c> blog</c><00:18:44.970><c> post</c><00:18:45.210><c> and</c><00:18:45.419><c> you</c><00:18:45.480><c> say</c>

00:18:45.710 --> 00:18:45.720 align:start position:0%
read a technical blog post and you say
 

00:18:45.720 --> 00:18:47.960 align:start position:0%
read a technical blog post and you say
yeah<00:18:46.529><c> obviously</c><00:18:46.679><c> that</c><00:18:47.190><c> that</c><00:18:47.460><c> is</c><00:18:47.669><c> the</c><00:18:47.820><c> right</c>

00:18:47.960 --> 00:18:47.970 align:start position:0%
yeah obviously that that is the right
 

00:18:47.970 --> 00:18:50.899 align:start position:0%
yeah obviously that that is the right
way<00:18:48.090><c> to</c><00:18:48.149><c> do</c><00:18:48.299><c> it</c><00:18:48.860><c> it</c><00:18:49.860><c> hasn't</c><00:18:50.490><c> happened</c><00:18:50.580><c> to</c><00:18:50.789><c> me</c>

00:18:50.899 --> 00:18:50.909 align:start position:0%
way to do it it hasn't happened to me
 

00:18:50.909 --> 00:18:52.669 align:start position:0%
way to do it it hasn't happened to me
many<00:18:51.120><c> times</c><00:18:51.210><c> during</c><00:18:51.450><c> my</c><00:18:51.570><c> career</c><00:18:51.720><c> but</c><00:18:52.409><c> this</c><00:18:52.529><c> was</c>

00:18:52.669 --> 00:18:52.679 align:start position:0%
many times during my career but this was
 

00:18:52.679 --> 00:18:56.649 align:start position:0%
many times during my career but this was
one<00:18:52.860><c> of</c><00:18:52.950><c> them</c><00:18:53.779><c> and</c><00:18:54.779><c> we</c><00:18:55.350><c> passed</c><00:18:55.590><c> around</c><00:18:55.830><c> and</c>

00:18:56.649 --> 00:18:56.659 align:start position:0%
one of them and we passed around and
 

00:18:56.659 --> 00:19:00.470 align:start position:0%
one of them and we passed around and
pretty<00:18:57.659><c> much</c><00:18:57.750><c> everyone</c><00:18:58.049><c> liked</c><00:18:58.230><c> it</c><00:18:59.299><c> so</c><00:19:00.299><c> the</c>

00:19:00.470 --> 00:19:00.480 align:start position:0%
pretty much everyone liked it so the
 

00:19:00.480 --> 00:19:02.149 align:start position:0%
pretty much everyone liked it so the
idea<00:19:00.510><c> of</c><00:19:00.720><c> structured</c><00:19:01.080><c> concurrency</c><00:19:01.559><c> is</c><00:19:01.799><c> that</c>

00:19:02.149 --> 00:19:02.159 align:start position:0%
idea of structured concurrency is that
 

00:19:02.159 --> 00:19:05.299 align:start position:0%
idea of structured concurrency is that
instead<00:19:02.909><c> of</c><00:19:03.029><c> taking</c><00:19:03.630><c> threads</c><00:19:03.899><c> and</c><00:19:04.309><c> just</c>

00:19:05.299 --> 00:19:05.309 align:start position:0%
instead of taking threads and just
 

00:19:05.309 --> 00:19:08.029 align:start position:0%
instead of taking threads and just
starting<00:19:05.580><c> them</c><00:19:05.700><c> and</c><00:19:06.169><c> letting</c><00:19:07.169><c> them</c><00:19:07.320><c> run</c><00:19:07.350><c> and</c>

00:19:08.029 --> 00:19:08.039 align:start position:0%
starting them and letting them run and
 

00:19:08.039 --> 00:19:10.490 align:start position:0%
starting them and letting them run and
complete<00:19:09.000><c> whenever</c><00:19:09.240><c> they</c><00:19:09.330><c> want</c><00:19:09.510><c> we</c><00:19:10.049><c> manage</c>

00:19:10.490 --> 00:19:10.500 align:start position:0%
complete whenever they want we manage
 

00:19:10.500 --> 00:19:14.930 align:start position:0%
complete whenever they want we manage
their<00:19:10.740><c> life</c><00:19:11.070><c> time</c><00:19:11.370><c> more</c><00:19:11.760><c> closely</c><00:19:13.730><c> so</c><00:19:14.730><c> we</c><00:19:14.850><c> have</c>

00:19:14.930 --> 00:19:14.940 align:start position:0%
their life time more closely so we have
 

00:19:14.940 --> 00:19:16.039 align:start position:0%
their life time more closely so we have
this<00:19:15.059><c> thing</c><00:19:15.269><c> that</c><00:19:15.419><c> is</c><00:19:15.570><c> currently</c><00:19:15.899><c> called</c>

00:19:16.039 --> 00:19:16.049 align:start position:0%
this thing that is currently called
 

00:19:16.049 --> 00:19:17.360 align:start position:0%
this thing that is currently called
fiber<00:19:16.350><c> scope</c><00:19:16.649><c> we</c><00:19:16.980><c> already</c>

00:19:17.360 --> 00:19:17.370 align:start position:0%
fiber scope we already
 

00:19:17.370 --> 00:19:18.560 align:start position:0%
fiber scope we already
have<00:19:17.430><c> continuation</c><00:19:17.970><c> scope</c><00:19:18.180><c> but</c><00:19:18.300><c> we</c><00:19:18.420><c> have</c>

00:19:18.560 --> 00:19:18.570 align:start position:0%
have continuation scope but we have
 

00:19:18.570 --> 00:19:20.930 align:start position:0%
have continuation scope but we have
another<00:19:18.960><c> kind</c><00:19:19.140><c> of</c><00:19:19.290><c> scope</c><00:19:19.500><c> so</c><00:19:19.830><c> the</c><00:19:20.309><c> names</c><00:19:20.490><c> will</c>

00:19:20.930 --> 00:19:20.940 align:start position:0%
another kind of scope so the names will
 

00:19:20.940 --> 00:19:24.200 align:start position:0%
another kind of scope so the names will
probably<00:19:21.270><c> change</c><00:19:22.670><c> so</c><00:19:23.670><c> you</c><00:19:23.760><c> have</c><00:19:23.880><c> a</c><00:19:23.910><c> scope</c><00:19:24.120><c> and</c>

00:19:24.200 --> 00:19:24.210 align:start position:0%
probably change so you have a scope and
 

00:19:24.210 --> 00:19:26.750 align:start position:0%
probably change so you have a scope and
to<00:19:24.300><c> try</c><00:19:24.450><c> with</c><00:19:24.660><c> resources</c><00:19:25.470><c> block</c><00:19:25.860><c> and</c><00:19:26.250><c> the</c>

00:19:26.750 --> 00:19:26.760 align:start position:0%
to try with resources block and the
 

00:19:26.760 --> 00:19:28.580 align:start position:0%
to try with resources block and the
fibers<00:19:27.240><c> that</c><00:19:27.270><c> you</c><00:19:27.480><c> schedule</c><00:19:27.690><c> inside</c><00:19:28.380><c> that</c>

00:19:28.580 --> 00:19:28.590 align:start position:0%
fibers that you schedule inside that
 

00:19:28.590 --> 00:19:31.700 align:start position:0%
fibers that you schedule inside that
block<00:19:29.180><c> you</c><00:19:30.180><c> cannot</c><00:19:30.510><c> exit</c><00:19:30.930><c> the</c><00:19:31.050><c> block</c><00:19:31.140><c> until</c>

00:19:31.700 --> 00:19:31.710 align:start position:0%
block you cannot exit the block until
 

00:19:31.710 --> 00:19:33.980 align:start position:0%
block you cannot exit the block until
they<00:19:32.010><c> are</c><00:19:32.100><c> terminated</c><00:19:32.550><c> so</c><00:19:33.210><c> when</c><00:19:33.570><c> you</c><00:19:33.660><c> try</c><00:19:33.960><c> to</c>

00:19:33.980 --> 00:19:33.990 align:start position:0%
they are terminated so when you try to
 

00:19:33.990 --> 00:19:36.080 align:start position:0%
they are terminated so when you try to
so<00:19:34.620><c> when</c><00:19:34.920><c> you</c><00:19:35.010><c> exit</c><00:19:35.400><c> this</c><00:19:35.520><c> block</c><00:19:35.760><c> its</c><00:19:35.940><c> going</c><00:19:36.030><c> to</c>

00:19:36.080 --> 00:19:36.090 align:start position:0%
so when you exit this block its going to
 

00:19:36.090 --> 00:19:38.390 align:start position:0%
so when you exit this block its going to
call<00:19:36.270><c> the</c><00:19:36.420><c> close</c><00:19:36.900><c> method</c><00:19:37.290><c> on</c><00:19:37.950><c> whatever</c><00:19:38.280><c> this</c>

00:19:38.390 --> 00:19:38.400 align:start position:0%
call the close method on whatever this
 

00:19:38.400 --> 00:19:41.390 align:start position:0%
call the close method on whatever this
returns<00:19:39.020><c> it's</c><00:19:40.020><c> going</c><00:19:40.170><c> to</c><00:19:40.230><c> block</c><00:19:40.440><c> until</c><00:19:40.650><c> luck</c>

00:19:41.390 --> 00:19:41.400 align:start position:0%
returns it's going to block until luck
 

00:19:41.400 --> 00:19:43.070 align:start position:0%
returns it's going to block until luck
when<00:19:41.970><c> they</c><00:19:42.059><c> say</c><00:19:42.180><c> block</c><00:19:42.360><c> not</c><00:19:42.570><c> necessarily</c>

00:19:43.070 --> 00:19:43.080 align:start position:0%
when they say block not necessarily
 

00:19:43.080 --> 00:19:45.170 align:start position:0%
when they say block not necessarily
Colonel<00:19:43.890><c> the</c><00:19:44.190><c> kernel</c><00:19:44.430><c> thread</c><00:19:44.610><c> right</c><00:19:44.850><c> so</c><00:19:45.059><c> V</c>

00:19:45.170 --> 00:19:45.180 align:start position:0%
Colonel the kernel thread right so V
 

00:19:45.180 --> 00:19:47.270 align:start position:0%
Colonel the kernel thread right so V
block<00:19:45.390><c> we</c><00:19:45.570><c> can</c><00:19:45.600><c> block</c><00:19:45.840><c> fibers</c><00:19:46.230><c> but</c><00:19:47.100><c> it's</c><00:19:47.190><c> going</c>

00:19:47.270 --> 00:19:47.280 align:start position:0%
block we can block fibers but it's going
 

00:19:47.280 --> 00:19:49.700 align:start position:0%
block we can block fibers but it's going
to<00:19:47.340><c> block</c><00:19:47.520><c> until</c><00:19:47.960><c> all</c><00:19:48.960><c> the</c><00:19:49.140><c> fibers</c><00:19:49.470><c> in</c><00:19:49.559><c> there</c>

00:19:49.700 --> 00:19:49.710 align:start position:0%
to block until all the fibers in there
 

00:19:49.710 --> 00:19:52.910 align:start position:0%
to block until all the fibers in there
have<00:19:49.890><c> terminated</c><00:19:50.370><c> so</c><00:19:51.360><c> we</c><00:19:51.570><c> know</c><00:19:51.780><c> that</c><00:19:52.050><c> anything</c>

00:19:52.910 --> 00:19:52.920 align:start position:0%
have terminated so we know that anything
 

00:19:52.920 --> 00:19:54.980 align:start position:0%
have terminated so we know that anything
and<00:19:53.190><c> even</c><00:19:53.640><c> if</c><00:19:53.880><c> they</c><00:19:54.000><c> schedule</c><00:19:54.360><c> other</c><00:19:54.570><c> fibers</c>

00:19:54.980 --> 00:19:54.990 align:start position:0%
and even if they schedule other fibers
 

00:19:54.990 --> 00:19:56.750 align:start position:0%
and even if they schedule other fibers
everything<00:19:55.530><c> the</c><00:19:55.620><c> entire</c><00:19:55.710><c> tree</c><00:19:56.160><c> of</c><00:19:56.250><c> fibers</c><00:19:56.580><c> is</c>

00:19:56.750 --> 00:19:56.760 align:start position:0%
everything the entire tree of fibers is
 

00:19:56.760 --> 00:20:00.110 align:start position:0%
everything the entire tree of fibers is
going<00:19:57.120><c> to</c><00:19:57.179><c> terminate</c><00:19:57.510><c> when</c><00:19:57.720><c> we</c><00:19:57.900><c> exit</c><00:19:58.970><c> we</c><00:19:59.970><c> can</c>

00:20:00.110 --> 00:20:00.120 align:start position:0%
going to terminate when we exit we can
 

00:20:00.120 --> 00:20:04.549 align:start position:0%
going to terminate when we exit we can
esos<00:20:00.450><c> scopes</c><00:20:00.780><c> and</c><00:20:02.990><c> yes</c><00:20:03.990><c> and</c><00:20:04.110><c> you</c><00:20:04.200><c> can</c><00:20:04.350><c> cancel</c>

00:20:04.549 --> 00:20:04.559 align:start position:0%
esos scopes and yes and you can cancel
 

00:20:04.559 --> 00:20:07.850 align:start position:0%
esos scopes and yes and you can cancel
the<00:20:04.770><c> entire</c><00:20:04.980><c> scope</c><00:20:05.280><c> and</c><00:20:05.990><c> if</c><00:20:06.990><c> they</c><00:20:07.530><c> are</c>

00:20:07.850 --> 00:20:07.860 align:start position:0%
the entire scope and if they are
 

00:20:07.860 --> 00:20:10.460 align:start position:0%
the entire scope and if they are
currently<00:20:08.490><c> doing</c><00:20:08.580><c> an</c><00:20:08.880><c> eye</c><00:20:09.150><c> operation</c><00:20:09.870><c> that</c>

00:20:10.460 --> 00:20:10.470 align:start position:0%
currently doing an eye operation that
 

00:20:10.470 --> 00:20:12.260 align:start position:0%
currently doing an eye operation that
i/o<00:20:10.650><c> operation</c><00:20:11.070><c> is</c><00:20:11.130><c> going</c><00:20:11.280><c> to</c><00:20:11.340><c> return</c><00:20:11.550><c> and</c>

00:20:12.260 --> 00:20:12.270 align:start position:0%
i/o operation is going to return and
 

00:20:12.270 --> 00:20:16.480 align:start position:0%
i/o operation is going to return and
signal<00:20:12.690><c> somehow</c><00:20:12.929><c> that</c><00:20:13.110><c> it's</c><00:20:13.470><c> been</c><00:20:13.950><c> canceled</c>

00:20:16.480 --> 00:20:16.490 align:start position:0%
signal somehow that it's been canceled
 

00:20:16.490 --> 00:20:19.610 align:start position:0%
signal somehow that it's been canceled
this<00:20:17.490><c> can</c><00:20:18.240><c> do</c><00:20:18.390><c> so</c><00:20:18.660><c> you</c><00:20:18.780><c> can</c><00:20:18.900><c> do</c><00:20:18.990><c> some</c><00:20:19.170><c> clever</c>

00:20:19.610 --> 00:20:19.620 align:start position:0%
this can do so you can do some clever
 

00:20:19.620 --> 00:20:21.110 align:start position:0%
this can do so you can do some clever
things<00:20:19.740><c> with</c><00:20:20.010><c> it</c><00:20:20.250><c> for</c><00:20:20.490><c> example</c><00:20:20.550><c> if</c><00:20:20.880><c> you</c><00:20:20.970><c> want</c>

00:20:21.110 --> 00:20:21.120 align:start position:0%
things with it for example if you want
 

00:20:21.120 --> 00:20:22.700 align:start position:0%
things with it for example if you want
to<00:20:21.179><c> run</c><00:20:21.300><c> multiple</c><00:20:21.510><c> things</c><00:20:21.840><c> in</c><00:20:21.990><c> parallel</c><00:20:22.290><c> and</c>

00:20:22.700 --> 00:20:22.710 align:start position:0%
to run multiple things in parallel and
 

00:20:22.710 --> 00:20:27.200 align:start position:0%
to run multiple things in parallel and
only<00:20:22.920><c> wait</c><00:20:23.070><c> for</c><00:20:23.280><c> the</c><00:20:23.340><c> first</c><00:20:23.580><c> one</c><00:20:24.590><c> so</c><00:20:25.940><c> you</c><00:20:26.940><c> start</c>

00:20:27.200 --> 00:20:27.210 align:start position:0%
only wait for the first one so you start
 

00:20:27.210 --> 00:20:30.290 align:start position:0%
only wait for the first one so you start
a<00:20:27.270><c> fiber</c><00:20:28.050><c> for</c><00:20:28.650><c> each</c><00:20:28.770><c> of</c><00:20:28.890><c> the</c><00:20:28.980><c> tasks</c><00:20:29.340><c> and</c><00:20:29.940><c> then</c>

00:20:30.290 --> 00:20:30.300 align:start position:0%
a fiber for each of the tasks and then
 

00:20:30.300 --> 00:20:32.060 align:start position:0%
a fiber for each of the tasks and then
if<00:20:30.600><c> we</c><00:20:30.780><c> just</c><00:20:30.960><c> ended</c><00:20:31.170><c> here</c><00:20:31.440><c> it</c><00:20:31.590><c> would</c><00:20:31.740><c> wait</c><00:20:31.890><c> for</c>

00:20:32.060 --> 00:20:32.070 align:start position:0%
if we just ended here it would wait for
 

00:20:32.070 --> 00:20:35.110 align:start position:0%
if we just ended here it would wait for
all<00:20:32.220><c> of</c><00:20:32.250><c> them</c><00:20:32.400><c> to</c><00:20:32.490><c> terminate</c><00:20:32.850><c> but</c><00:20:33.450><c> instead</c>

00:20:35.110 --> 00:20:35.120 align:start position:0%
all of them to terminate but instead
 

00:20:35.120 --> 00:20:39.169 align:start position:0%
all of them to terminate but instead
they<00:20:36.740><c> they</c><00:20:37.740><c> get</c><00:20:38.070><c> they</c><00:20:38.550><c> all</c><00:20:38.670><c> get</c><00:20:38.850><c> put</c><00:20:39.030><c> in</c><00:20:39.120><c> a</c>

00:20:39.169 --> 00:20:39.179 align:start position:0%
they they get they all get put in a
 

00:20:39.179 --> 00:20:42.130 align:start position:0%
they they get they all get put in a
queue<00:20:39.450><c> ordered</c><00:20:39.929><c> by</c><00:20:40.080><c> the</c><00:20:40.140><c> termination</c><00:20:40.920><c> order</c>

00:20:42.130 --> 00:20:42.140 align:start position:0%
queue ordered by the termination order
 

00:20:42.140 --> 00:20:45.560 align:start position:0%
queue ordered by the termination order
you<00:20:43.340><c> wait</c><00:20:44.340><c> until</c><00:20:44.670><c> the</c><00:20:44.790><c> first</c><00:20:44.940><c> one</c><00:20:45.179><c> terminates</c>

00:20:45.560 --> 00:20:45.570 align:start position:0%
you wait until the first one terminates
 

00:20:45.570 --> 00:20:53.030 align:start position:0%
you wait until the first one terminates
and<00:20:46.970><c> then</c><00:20:47.970><c> you</c><00:20:48.360><c> cancel</c><00:20:48.600><c> all</c><00:20:49.020><c> the</c><00:20:49.200><c> others</c><00:20:52.040><c> the</c>

00:20:53.030 --> 00:20:53.040 align:start position:0%
and then you cancel all the others the
 

00:20:53.040 --> 00:20:55.669 align:start position:0%
and then you cancel all the others the
you<00:20:53.730><c> can</c><00:20:53.880><c> also</c><00:20:54.000><c> put</c><00:20:54.420><c> a</c><00:20:54.450><c> deadline</c><00:20:54.690><c> on</c><00:20:54.870><c> them</c><00:20:55.170><c> so</c>

00:20:55.669 --> 00:20:55.679 align:start position:0%
you can also put a deadline on them so
 

00:20:55.679 --> 00:20:58.970 align:start position:0%
you can also put a deadline on them so
if<00:20:55.920><c> none</c><00:20:56.160><c> of</c><00:20:56.190><c> them</c><00:20:56.340><c> terminates</c><00:20:56.760><c> then</c><00:20:57.679><c> all</c><00:20:58.679><c> them</c>

00:20:58.970 --> 00:20:58.980 align:start position:0%
if none of them terminates then all them
 

00:20:58.980 --> 00:21:02.240 align:start position:0%
if none of them terminates then all them
won't<00:20:59.100><c> get</c><00:20:59.280><c> cancelled</c><00:20:59.700><c> and</c><00:21:00.770><c> the</c><00:21:01.770><c> last</c><00:21:02.010><c> thing</c>

00:21:02.240 --> 00:21:02.250 align:start position:0%
won't get cancelled and the last thing
 

00:21:02.250 --> 00:21:06.080 align:start position:0%
won't get cancelled and the last thing
on<00:21:02.550><c> top</c><00:21:02.730><c> in</c><00:21:02.850><c> the</c><00:21:02.910><c> last</c><00:21:03.059><c> minutes</c><00:21:03.390><c> is</c><00:21:05.090><c> thread</c>

00:21:06.080 --> 00:21:06.090 align:start position:0%
on top in the last minutes is thread
 

00:21:06.090 --> 00:21:07.549 align:start position:0%
on top in the last minutes is thread
locals<00:21:06.450><c> we</c><00:21:06.780><c> want</c><00:21:06.960><c> to</c><00:21:07.020><c> replace</c><00:21:07.200><c> them</c><00:21:07.380><c> too</c>

00:21:07.549 --> 00:21:07.559 align:start position:0%
locals we want to replace them too
 

00:21:07.559 --> 00:21:09.200 align:start position:0%
locals we want to replace them too
because<00:21:08.520><c> they're</c><00:21:08.610><c> also</c><00:21:08.790><c> kind</c><00:21:09.090><c> of</c>

00:21:09.200 --> 00:21:09.210 align:start position:0%
because they're also kind of
 

00:21:09.210 --> 00:21:10.910 align:start position:0%
because they're also kind of
fire-and-forget<00:21:09.570><c> you</c><00:21:10.020><c> set</c><00:21:10.200><c> a</c><00:21:10.230><c> value</c><00:21:10.410><c> and</c>

00:21:10.910 --> 00:21:10.920 align:start position:0%
fire-and-forget you set a value and
 

00:21:10.920 --> 00:21:14.870 align:start position:0%
fire-and-forget you set a value and
maybe<00:21:11.820><c> remember</c><00:21:12.270><c> to</c><00:21:12.420><c> reset</c><00:21:12.780><c> it</c><00:21:12.870><c> maybe</c><00:21:13.050><c> not</c><00:21:13.880><c> so</c>

00:21:14.870 --> 00:21:14.880 align:start position:0%
maybe remember to reset it maybe not so
 

00:21:14.880 --> 00:21:16.010 align:start position:0%
maybe remember to reset it maybe not so
we're<00:21:14.970><c> trying</c><00:21:15.179><c> to</c><00:21:15.240><c> do</c><00:21:15.360><c> something</c><00:21:15.780><c> that's</c>

00:21:16.010 --> 00:21:16.020 align:start position:0%
we're trying to do something that's
 

00:21:16.020 --> 00:21:18.660 align:start position:0%
we're trying to do something that's
maybe<00:21:16.320><c> more</c><00:21:16.440><c> like</c>

00:21:18.660 --> 00:21:18.670 align:start position:0%
maybe more like
 

00:21:18.670 --> 00:21:23.490 align:start position:0%
maybe more like
dynamic<00:21:19.420><c> variables</c><00:21:19.810><c> and</c><00:21:19.960><c> scheme</c><00:21:21.570><c> where</c><00:21:22.570><c> these</c>

00:21:23.490 --> 00:21:23.500 align:start position:0%
dynamic variables and scheme where these
 

00:21:23.500 --> 00:21:25.650 align:start position:0%
dynamic variables and scheme where these
thread<00:21:24.400><c> load</c><00:21:24.550><c> new</c><00:21:24.790><c> thread</c><00:21:25.060><c> locals</c><00:21:25.450><c> called</c>

00:21:25.650 --> 00:21:25.660 align:start position:0%
thread load new thread locals called
 

00:21:25.660 --> 00:21:30.510 align:start position:0%
thread load new thread locals called
scoff<00:21:26.170><c> locals</c><00:21:26.880><c> have</c><00:21:27.880><c> a</c><00:21:27.910><c> scope</c><00:21:28.500><c> and</c><00:21:29.500><c> you've</c><00:21:30.310><c> set</c>

00:21:30.510 --> 00:21:30.520 align:start position:0%
scoff locals have a scope and you've set
 

00:21:30.520 --> 00:21:32.370 align:start position:0%
scoff locals have a scope and you've set
the<00:21:30.640><c> value</c><00:21:30.940><c> inside</c><00:21:31.420><c> that</c><00:21:31.840><c> scope</c><00:21:32.080><c> is</c><00:21:32.200><c> going</c><00:21:32.230><c> to</c>

00:21:32.370 --> 00:21:32.380 align:start position:0%
the value inside that scope is going to
 

00:21:32.380 --> 00:21:35.760 align:start position:0%
the value inside that scope is going to
be<00:21:32.500><c> that</c><00:21:32.650><c> value</c><00:21:33.540><c> not</c><00:21:34.540><c> necessarily</c><00:21:35.080><c> it</c><00:21:35.530><c> can</c><00:21:35.680><c> be</c>

00:21:35.760 --> 00:21:35.770 align:start position:0%
be that value not necessarily it can be
 

00:21:35.770 --> 00:21:37.950 align:start position:0%
be that value not necessarily it can be
deep<00:21:36.250><c> in</c><00:21:36.370><c> the</c><00:21:36.460><c> staff</c><00:21:36.670><c> right</c><00:21:36.850><c> so</c><00:21:37.060><c> it's</c><00:21:37.270><c> it</c><00:21:37.810><c> works</c>

00:21:37.950 --> 00:21:37.960 align:start position:0%
deep in the staff right so it's it works
 

00:21:37.960 --> 00:21:39.930 align:start position:0%
deep in the staff right so it's it works
like<00:21:38.260><c> three</c><00:21:38.470><c> locals</c><00:21:38.860><c> you</c><00:21:39.460><c> can</c><00:21:39.610><c> access</c><00:21:39.790><c> them</c>

00:21:39.930 --> 00:21:39.940 align:start position:0%
like three locals you can access them
 

00:21:39.940 --> 00:21:42.030 align:start position:0%
like three locals you can access them
anywhere<00:21:40.270><c> but</c><00:21:40.840><c> once</c><00:21:41.110><c> you</c><00:21:41.260><c> exit</c><00:21:41.650><c> the</c><00:21:41.800><c> scope</c>

00:21:42.030 --> 00:21:42.040 align:start position:0%
anywhere but once you exit the scope
 

00:21:42.040 --> 00:21:44.730 align:start position:0%
anywhere but once you exit the scope
they<00:21:42.640><c> get</c><00:21:42.820><c> reset</c><00:21:43.240><c> to</c><00:21:43.780><c> their</c><00:21:43.960><c> old</c><00:21:44.140><c> value</c><00:21:44.530><c> and</c>

00:21:44.730 --> 00:21:44.740 align:start position:0%
they get reset to their old value and
 

00:21:44.740 --> 00:21:48.870 align:start position:0%
they get reset to their old value and
because<00:21:45.730><c> we</c><00:21:45.910><c> have</c><00:21:47.160><c> fibers</c><00:21:48.160><c> we</c><00:21:48.310><c> also</c><00:21:48.490><c> control</c>

00:21:48.870 --> 00:21:48.880 align:start position:0%
because we have fibers we also control
 

00:21:48.880 --> 00:21:50.640 align:start position:0%
because we have fibers we also control
the<00:21:48.940><c> lifetime</c><00:21:49.450><c> if</c><00:21:49.690><c> you</c><00:21:49.720><c> start</c><00:21:50.140><c> new</c><00:21:50.260><c> fibers</c>

00:21:50.640 --> 00:21:50.650 align:start position:0%
the lifetime if you start new fibers
 

00:21:50.650 --> 00:21:54.020 align:start position:0%
the lifetime if you start new fibers
here<00:21:50.830><c> maybe</c><00:21:51.430><c> they'll</c><00:21:51.580><c> also</c><00:21:52.710><c> they</c><00:21:53.710><c> will</c><00:21:53.830><c> also</c>

00:21:54.020 --> 00:21:54.030 align:start position:0%
here maybe they'll also they will also
 

00:21:54.030 --> 00:21:56.700 align:start position:0%
here maybe they'll also they will also
inherit<00:21:55.030><c> this</c><00:21:55.300><c> value</c><00:21:55.600><c> but</c><00:21:56.050><c> these</c><00:21:56.380><c> are</c><00:21:56.530><c> just</c>

00:21:56.700 --> 00:21:56.710 align:start position:0%
inherit this value but these are just
 

00:21:56.710 --> 00:21:58.350 align:start position:0%
inherit this value but these are just
early<00:21:57.010><c> ideas</c><00:21:57.280><c> we</c><00:21:57.400><c> actually</c><00:21:57.700><c> we</c><00:21:57.970><c> don't</c><00:21:58.120><c> have</c>

00:21:58.350 --> 00:21:58.360 align:start position:0%
early ideas we actually we don't have
 

00:21:58.360 --> 00:22:00.510 align:start position:0%
early ideas we actually we don't have
this<00:21:58.480><c> in</c><00:21:58.660><c> the</c><00:21:58.750><c> prototype</c><00:21:59.020><c> yet</c><00:21:59.320><c> and</c><00:21:59.530><c> that</c><00:21:59.560><c> is</c>

00:22:00.510 --> 00:22:00.520 align:start position:0%
this in the prototype yet and that is
 

00:22:00.520 --> 00:22:16.530 align:start position:0%
this in the prototype yet and that is
all<00:22:01.480><c> I</c><00:22:01.540><c> have</c><00:22:01.660><c> to</c><00:22:01.750><c> say</c><00:22:15.390><c> sorry</c>

00:22:16.530 --> 00:22:16.540 align:start position:0%
all I have to say sorry
 

00:22:16.540 --> 00:22:18.330 align:start position:0%
all I have to say sorry
any<00:22:16.660><c> questions</c><00:22:17.050><c> for</c><00:22:17.230><c> Ron</c><00:22:17.650><c> I'll</c><00:22:17.890><c> start</c><00:22:18.160><c> with</c>

00:22:18.330 --> 00:22:18.340 align:start position:0%
any questions for Ron I'll start with
 

00:22:18.340 --> 00:22:20.580 align:start position:0%
any questions for Ron I'll start with
one<00:22:18.580><c> actually</c><00:22:19.060><c> tell</c><00:22:19.900><c> me</c><00:22:20.050><c> about</c><00:22:20.140><c> your</c><00:22:20.410><c> most</c>

00:22:20.580 --> 00:22:20.590 align:start position:0%
one actually tell me about your most
 

00:22:20.590 --> 00:22:22.770 align:start position:0%
one actually tell me about your most
interesting<00:22:21.070><c> and</c><00:22:21.670><c> impressive</c><00:22:21.970><c> benchmarking</c>

00:22:22.770 --> 00:22:22.780 align:start position:0%
interesting and impressive benchmarking
 

00:22:22.780 --> 00:22:26.400 align:start position:0%
interesting and impressive benchmarking
results<00:22:23.260><c> so</c><00:22:23.380><c> far</c><00:22:23.410><c> if</c><00:22:23.980><c> you</c><00:22:24.130><c> have</c><00:22:24.250><c> any</c>

