WEBVTT
Kind: captions
Language: en

00:00:04.400 --> 00:00:07.639 align:start position:0%
 
hi<00:00:05.400><c> my</c><00:00:05.879><c> name</c><00:00:06.060><c> is</c><00:00:06.089><c> Chris</c><00:00:06.390><c> Haggerty</c><00:00:06.810><c> I</c><00:00:06.990><c> work</c><00:00:07.529><c> in</c>

00:00:07.639 --> 00:00:07.649 align:start position:0%
hi my name is Chris Haggerty I work in
 

00:00:07.649 --> 00:00:09.259 align:start position:0%
hi my name is Chris Haggerty I work in
the<00:00:07.740><c> Java</c><00:00:07.950><c> platform</c><00:00:08.189><c> group</c><00:00:08.610><c> at</c><00:00:08.790><c> Oracle</c><00:00:09.090><c> and</c>

00:00:09.259 --> 00:00:09.269 align:start position:0%
the Java platform group at Oracle and
 

00:00:09.269 --> 00:00:10.879 align:start position:0%
the Java platform group at Oracle and
today<00:00:10.050><c> I'm</c><00:00:10.139><c> gonna</c><00:00:10.290><c> be</c><00:00:10.380><c> talking</c><00:00:10.530><c> about</c><00:00:10.710><c> the</c>

00:00:10.879 --> 00:00:10.889 align:start position:0%
today I'm gonna be talking about the
 

00:00:10.889 --> 00:00:17.000 align:start position:0%
today I'm gonna be talking about the
road<00:00:11.099><c> to</c><00:00:11.639><c> the</c><00:00:11.730><c> Java</c><00:00:11.969><c> 11</c><00:00:12.360><c> HTTP</c><00:00:13.080><c> client</c><00:00:15.830><c> in</c><00:00:16.830><c> this</c>

00:00:17.000 --> 00:00:17.010 align:start position:0%
road to the Java 11 HTTP client in this
 

00:00:17.010 --> 00:00:18.710 align:start position:0%
road to the Java 11 HTTP client in this
session<00:00:17.279><c> were</c><00:00:17.850><c> going</c><00:00:18.060><c> to</c><00:00:18.150><c> be</c><00:00:18.210><c> answering</c><00:00:18.510><c> three</c>

00:00:18.710 --> 00:00:18.720 align:start position:0%
session were going to be answering three
 

00:00:18.720 --> 00:00:21.740 align:start position:0%
session were going to be answering three
questions<00:00:19.369><c> why</c><00:00:20.369><c> are</c><00:00:20.520><c> we</c><00:00:20.640><c> adding</c><00:00:20.789><c> a</c><00:00:21.000><c> new</c><00:00:21.119><c> HTTP</c>

00:00:21.740 --> 00:00:21.750 align:start position:0%
questions why are we adding a new HTTP
 

00:00:21.750 --> 00:00:24.500 align:start position:0%
questions why are we adding a new HTTP
client<00:00:22.250><c> how</c><00:00:23.250><c> long</c><00:00:23.400><c> does</c><00:00:23.550><c> it</c><00:00:23.609><c> take</c><00:00:23.910><c> and</c><00:00:24.150><c> what</c><00:00:24.269><c> is</c>

00:00:24.500 --> 00:00:24.510 align:start position:0%
client how long does it take and what is
 

00:00:24.510 --> 00:00:26.870 align:start position:0%
client how long does it take and what is
the<00:00:24.630><c> role</c><00:00:24.779><c> that</c><00:00:24.810><c> development</c><00:00:25.380><c> look</c><00:00:25.529><c> like</c><00:00:25.880><c> and</c>

00:00:26.870 --> 00:00:26.880 align:start position:0%
the role that development look like and
 

00:00:26.880 --> 00:00:28.700 align:start position:0%
the role that development look like and
what<00:00:27.029><c> are</c><00:00:27.060><c> the</c><00:00:27.240><c> benefits</c><00:00:27.420><c> at</c><00:00:27.779><c> you</c><00:00:27.990><c> as</c><00:00:28.560><c> an</c>

00:00:28.700 --> 00:00:28.710 align:start position:0%
what are the benefits at you as an
 

00:00:28.710 --> 00:00:30.769 align:start position:0%
what are the benefits at you as an
application<00:00:29.099><c> developer</c><00:00:29.279><c> can</c><00:00:29.849><c> get</c><00:00:30.060><c> from</c><00:00:30.689><c> the</c>

00:00:30.769 --> 00:00:30.779 align:start position:0%
application developer can get from the
 

00:00:30.779 --> 00:00:36.709 align:start position:0%
application developer can get from the
new<00:00:30.960><c> HTTP</c><00:00:31.650><c> client</c><00:00:32.070><c> in</c><00:00:32.430><c> Java</c><00:00:32.820><c> 11</c><00:00:35.719><c> enhancements</c>

00:00:36.709 --> 00:00:36.719 align:start position:0%
new HTTP client in Java 11 enhancements
 

00:00:36.719 --> 00:00:39.470 align:start position:0%
new HTTP client in Java 11 enhancements
to<00:00:36.899><c> JDK</c><00:00:37.410><c> are</c><00:00:37.890><c> done</c><00:00:38.129><c> through</c><00:00:38.340><c> jdk</c><00:00:38.879><c> enhancement</c>

00:00:39.470 --> 00:00:39.480 align:start position:0%
to JDK are done through jdk enhancement
 

00:00:39.480 --> 00:00:41.350 align:start position:0%
to JDK are done through jdk enhancement
proposals<00:00:40.020><c> jeff's</c>

00:00:41.350 --> 00:00:41.360 align:start position:0%
proposals jeff's
 

00:00:41.360 --> 00:00:44.180 align:start position:0%
proposals jeff's
Djebbour<00:00:42.360><c> 10</c><00:00:42.690><c> is</c><00:00:42.870><c> one</c><00:00:43.530><c> of</c><00:00:43.649><c> the</c><00:00:43.739><c> first</c><00:00:43.950><c> stop</c>

00:00:44.180 --> 00:00:44.190 align:start position:0%
Djebbour 10 is one of the first stop
 

00:00:44.190 --> 00:00:47.569 align:start position:0%
Djebbour 10 is one of the first stop
publishing<00:00:44.430><c> on</c><00:00:45.210><c> the</c><00:00:45.420><c> HTTP</c><00:00:46.050><c> client</c><00:00:46.440><c> and</c><00:00:46.620><c> it</c><00:00:47.460><c> is</c>

00:00:47.569 --> 00:00:47.579 align:start position:0%
publishing on the HTTP client and it is
 

00:00:47.579 --> 00:00:49.369 align:start position:0%
publishing on the HTTP client and it is
useful<00:00:47.940><c> to</c><00:00:47.969><c> look</c><00:00:48.090><c> at</c><00:00:48.300><c> the</c><00:00:48.420><c> motivation</c><00:00:48.750><c> section</c>

00:00:49.369 --> 00:00:49.379 align:start position:0%
useful to look at the motivation section
 

00:00:49.379 --> 00:00:52.520 align:start position:0%
useful to look at the motivation section
in<00:00:49.559><c> this</c><00:00:49.800><c> gem</c><00:00:50.719><c> it</c><00:00:51.719><c> contains</c><00:00:52.110><c> a</c><00:00:52.260><c> number</c><00:00:52.289><c> of</c>

00:00:52.520 --> 00:00:52.530 align:start position:0%
in this gem it contains a number of
 

00:00:52.530 --> 00:00:54.650 align:start position:0%
in this gem it contains a number of
points<00:00:52.980><c> discussing</c><00:00:53.489><c> the</c><00:00:53.610><c> URL</c><00:00:53.910><c> connection</c><00:00:54.180><c> API</c>

00:00:54.650 --> 00:00:54.660 align:start position:0%
points discussing the URL connection API
 

00:00:54.660 --> 00:00:57.439 align:start position:0%
points discussing the URL connection API
which<00:00:55.590><c> is</c><00:00:55.739><c> the</c><00:00:55.829><c> current</c><00:00:56.100><c> API</c><00:00:56.399><c> for</c><00:00:57.000><c> performing</c>

00:00:57.439 --> 00:00:57.449 align:start position:0%
which is the current API for performing
 

00:00:57.449 --> 00:01:01.610 align:start position:0%
which is the current API for performing
HTTP<00:00:58.140><c> exchanges</c><00:00:59.719><c> URL</c><00:01:00.719><c> connection</c><00:01:01.020><c> was</c><00:01:01.289><c> added</c>

00:01:01.610 --> 00:01:01.620 align:start position:0%
HTTP exchanges URL connection was added
 

00:01:01.620 --> 00:01:05.539 align:start position:0%
HTTP exchanges URL connection was added
in<00:01:01.739><c> JDK</c><00:01:02.160><c> $1</c><00:01:02.640><c> back</c><00:01:03.329><c> in</c><00:01:03.539><c> 1996</c><00:01:04.409><c> and</c><00:01:04.650><c> is</c><00:01:05.100><c> protocol</c>

00:01:05.539 --> 00:01:05.549 align:start position:0%
in JDK $1 back in 1996 and is protocol
 

00:01:05.549 --> 00:01:08.270 align:start position:0%
in JDK $1 back in 1996 and is protocol
agnostic<00:01:06.140><c> it</c><00:01:07.140><c> supports</c><00:01:07.560><c> multiple</c><00:01:07.710><c> protocols</c>

00:01:08.270 --> 00:01:08.280 align:start position:0%
agnostic it supports multiple protocols
 

00:01:08.280 --> 00:01:12.170 align:start position:0%
agnostic it supports multiple protocols
like<00:01:08.640><c> FTP</c><00:01:08.900><c> mail</c><00:01:09.900><c> to</c><00:01:10.170><c> file</c><00:01:10.920><c> access</c><00:01:11.340><c> at</c><00:01:11.970><c> one</c>

00:01:12.170 --> 00:01:12.180 align:start position:0%
like FTP mail to file access at one
 

00:01:12.180 --> 00:01:16.969 align:start position:0%
like FTP mail to file access at one
point<00:01:12.420><c> gopher</c><00:01:12.900><c> as</c><00:01:13.080><c> well</c><00:01:13.799><c> as</c><00:01:13.950><c> HTTP</c><00:01:15.979><c> URL</c>

00:01:16.969 --> 00:01:16.979 align:start position:0%
point gopher as well as HTTP URL
 

00:01:16.979 --> 00:01:21.460 align:start position:0%
point gopher as well as HTTP URL
connection<00:01:17.009><c> in</c><00:01:17.580><c> fact</c><00:01:17.820><c> predates</c><00:01:18.500><c> HTTP</c><00:01:19.500><c> 1</c><00:01:19.680><c> 1</c>

00:01:21.460 --> 00:01:21.470 align:start position:0%
connection in fact predates HTTP 1 1
 

00:01:21.470 --> 00:01:24.740 align:start position:0%
connection in fact predates HTTP 1 1
looking<00:01:22.470><c> at</c><00:01:22.590><c> the</c><00:01:22.680><c> HTTP</c><00:01:23.340><c> timeline</c><00:01:23.820><c> we</c><00:01:24.390><c> can</c><00:01:24.420><c> see</c>

00:01:24.740 --> 00:01:24.750 align:start position:0%
looking at the HTTP timeline we can see
 

00:01:24.750 --> 00:01:27.920 align:start position:0%
looking at the HTTP timeline we can see
that<00:01:24.930><c> the</c><00:01:25.080><c> RFC</c><00:01:25.590><c> for</c><00:01:25.830><c> HTTP</c><00:01:26.460><c> 1</c><00:01:26.640><c> 0</c><00:01:26.939><c> was</c><00:01:27.540><c> published</c>

00:01:27.920 --> 00:01:27.930 align:start position:0%
that the RFC for HTTP 1 0 was published
 

00:01:27.930 --> 00:01:32.840 align:start position:0%
that the RFC for HTTP 1 0 was published
in<00:01:28.080><c> 1996</c><00:01:29.329><c> 1:1</c><00:01:30.329><c> in</c><00:01:30.479><c> 1999</c><00:01:31.229><c> and</c><00:01:31.500><c> more</c><00:01:32.460><c> recently</c>

00:01:32.840 --> 00:01:32.850 align:start position:0%
in 1996 1:1 in 1999 and more recently
 

00:01:32.850 --> 00:01:38.929 align:start position:0%
in 1996 1:1 in 1999 and more recently
HTTP<00:01:33.630><c> 2</c><00:01:33.840><c> into</c><00:01:34.740><c> 2015</c><00:01:37.700><c> there</c><00:01:38.700><c> have</c><00:01:38.729><c> been</c>

00:01:38.929 --> 00:01:38.939 align:start position:0%
HTTP 2 into 2015 there have been
 

00:01:38.939 --> 00:01:41.660 align:start position:0%
HTTP 2 into 2015 there have been
countless<00:01:39.210><c> bug</c><00:01:39.720><c> fixes</c><00:01:40.140><c> in</c><00:01:40.259><c> the</c><00:01:40.350><c> HTTP</c><00:01:41.100><c> protocol</c>

00:01:41.660 --> 00:01:41.670 align:start position:0%
countless bug fixes in the HTTP protocol
 

00:01:41.670 --> 00:01:44.139 align:start position:0%
countless bug fixes in the HTTP protocol
implementation<00:01:42.390><c> and</c><00:01:42.649><c> numerous</c><00:01:43.649><c> enhancements</c>

00:01:44.139 --> 00:01:44.149 align:start position:0%
implementation and numerous enhancements
 

00:01:44.149 --> 00:01:47.060 align:start position:0%
implementation and numerous enhancements
such<00:01:45.149><c> as</c><00:01:45.210><c> larger</c><00:01:45.899><c> than</c><00:01:46.049><c> 2</c><00:01:46.229><c> gigabyte</c><00:01:46.619><c> content</c>

00:01:47.060 --> 00:01:47.070 align:start position:0%
such as larger than 2 gigabyte content
 

00:01:47.070 --> 00:01:49.580 align:start position:0%
such as larger than 2 gigabyte content
lengths<00:01:47.369><c> and</c><00:01:47.549><c> they</c><00:01:48.299><c> expect</c><00:01:48.689><c> 100</c><00:01:49.170><c> continue</c>

00:01:49.580 --> 00:01:49.590 align:start position:0%
lengths and they expect 100 continue
 

00:01:49.590 --> 00:01:52.190 align:start position:0%
lengths and they expect 100 continue
header<00:01:49.770><c> to</c><00:01:50.189><c> name</c><00:01:50.340><c> but</c><00:01:50.520><c> a</c><00:01:50.579><c> few</c><00:01:51.200><c> the</c>

00:01:52.190 --> 00:01:52.200 align:start position:0%
header to name but a few the
 

00:01:52.200 --> 00:01:54.050 align:start position:0%
header to name but a few the
implementation<00:01:52.890><c> has</c><00:01:53.040><c> reached</c><00:01:53.310><c> its</c><00:01:53.579><c> limit</c><00:01:53.640><c> for</c>

00:01:54.050 --> 00:01:54.060 align:start position:0%
implementation has reached its limit for
 

00:01:54.060 --> 00:01:56.270 align:start position:0%
implementation has reached its limit for
complexity<00:01:54.509><c> after</c><00:01:55.470><c> been</c><00:01:55.590><c> around</c><00:01:55.890><c> for</c><00:01:56.159><c> more</c>

00:01:56.270 --> 00:01:56.280 align:start position:0%
complexity after been around for more
 

00:01:56.280 --> 00:02:00.080 align:start position:0%
complexity after been around for more
than<00:01:56.310><c> 20</c><00:01:56.729><c> years</c><00:01:58.790><c> given</c><00:01:59.790><c> that</c><00:01:59.909><c> you</c><00:02:00.060><c> are</c>

00:02:00.080 --> 00:02:00.090 align:start position:0%
than 20 years given that you are
 

00:02:00.090 --> 00:02:02.749 align:start position:0%
than 20 years given that you are
connections<00:02:00.780><c> protocol</c><00:02:01.259><c> agnostic</c><00:02:01.799><c> then</c><00:02:02.640><c> it</c>

00:02:02.749 --> 00:02:02.759 align:start position:0%
connections protocol agnostic then it
 

00:02:02.759 --> 00:02:04.219 align:start position:0%
connections protocol agnostic then it
can<00:02:02.880><c> be</c><00:02:02.939><c> a</c><00:02:02.969><c> little</c><00:02:03.090><c> cumbersome</c><00:02:03.570><c> to</c><00:02:03.840><c> use</c><00:02:03.869><c> for</c>

00:02:04.219 --> 00:02:04.229 align:start position:0%
can be a little cumbersome to use for
 

00:02:04.229 --> 00:02:07.399 align:start position:0%
can be a little cumbersome to use for
HTTP<00:02:04.890><c> since</c><00:02:05.700><c> it</c><00:02:05.820><c> suffers</c><00:02:06.210><c> from</c><00:02:06.899><c> restrictions</c>

00:02:07.399 --> 00:02:07.409 align:start position:0%
HTTP since it suffers from restrictions
 

00:02:07.409 --> 00:02:11.210 align:start position:0%
HTTP since it suffers from restrictions
of<00:02:07.740><c> being</c><00:02:07.950><c> a</c><00:02:08.039><c> common</c><00:02:08.399><c> protocol</c><00:02:08.849><c> API</c><00:02:10.220><c> while</c>

00:02:11.210 --> 00:02:11.220 align:start position:0%
of being a common protocol API while
 

00:02:11.220 --> 00:02:13.640 align:start position:0%
of being a common protocol API while
there<00:02:11.400><c> is</c><00:02:11.489><c> a</c><00:02:11.520><c> concrete</c><00:02:11.819><c> HTTP</c><00:02:12.780><c> URL</c><00:02:13.110><c> connection</c>

00:02:13.640 --> 00:02:13.650 align:start position:0%
there is a concrete HTTP URL connection
 

00:02:13.650 --> 00:02:16.970 align:start position:0%
there is a concrete HTTP URL connection
sub-type<00:02:14.010><c> in</c><00:02:14.909><c> many</c><00:02:15.120><c> cases</c><00:02:15.599><c> still</c><00:02:16.349><c> just</c><00:02:16.650><c> isn't</c>

00:02:16.970 --> 00:02:16.980 align:start position:0%
sub-type in many cases still just isn't
 

00:02:16.980 --> 00:02:18.890 align:start position:0%
sub-type in many cases still just isn't
any<00:02:17.159><c> natural</c><00:02:17.400><c> place</c><00:02:17.819><c> to</c><00:02:18.150><c> document</c><00:02:18.360><c> some</c><00:02:18.870><c> of</c>

00:02:18.890 --> 00:02:18.900 align:start position:0%
any natural place to document some of
 

00:02:18.900 --> 00:02:23.809 align:start position:0%
any natural place to document some of
the<00:02:19.319><c> HTTP</c><00:02:20.040><c> specific</c><00:02:20.640><c> behavior</c><00:02:22.819><c> neural</c>

00:02:23.809 --> 00:02:23.819 align:start position:0%
the HTTP specific behavior neural
 

00:02:23.819 --> 00:02:25.759 align:start position:0%
the HTTP specific behavior neural
connection<00:02:24.299><c> is</c><00:02:24.390><c> based</c><00:02:24.629><c> on</c><00:02:24.810><c> java</c><00:02:25.049><c> io</c><00:02:25.260><c> streams</c>

00:02:25.759 --> 00:02:25.769 align:start position:0%
connection is based on java io streams
 

00:02:25.769 --> 00:02:29.089 align:start position:0%
connection is based on java io streams
which<00:02:26.640><c> are</c><00:02:26.790><c> inherently</c><00:02:27.239><c> blocking</c><00:02:27.890><c> this</c><00:02:28.890><c> may</c>

00:02:29.089 --> 00:02:29.099 align:start position:0%
which are inherently blocking this may
 

00:02:29.099 --> 00:02:30.710 align:start position:0%
which are inherently blocking this may
not<00:02:29.280><c> have</c><00:02:29.430><c> been</c><00:02:29.549><c> such</c><00:02:29.760><c> a</c><00:02:29.790><c> limitation</c><00:02:30.209><c> back</c><00:02:30.569><c> in</c>

00:02:30.710 --> 00:02:30.720 align:start position:0%
not have been such a limitation back in
 

00:02:30.720 --> 00:02:35.360 align:start position:0%
not have been such a limitation back in
1996<00:02:31.500><c> but</c><00:02:32.489><c> it</c><00:02:32.609><c> is</c><00:02:32.760><c> today</c><00:02:34.099><c> treads</c><00:02:35.099><c> are</c><00:02:35.310><c> a</c>

00:02:35.360 --> 00:02:35.370 align:start position:0%
1996 but it is today treads are a
 

00:02:35.370 --> 00:02:37.490 align:start position:0%
1996 but it is today treads are a
valuable<00:02:35.730><c> costly</c><00:02:36.299><c> resource</c><00:02:36.659><c> and</c><00:02:36.959><c> we</c><00:02:37.319><c> don't</c>

00:02:37.490 --> 00:02:37.500 align:start position:0%
valuable costly resource and we don't
 

00:02:37.500 --> 00:02:39.130 align:start position:0%
valuable costly resource and we don't
want<00:02:37.709><c> to</c><00:02:37.769><c> unnecessarily</c><00:02:38.400><c> tied</c><00:02:38.700><c> them</c><00:02:38.819><c> up</c>

00:02:39.130 --> 00:02:39.140 align:start position:0%
want to unnecessarily tied them up
 

00:02:39.140 --> 00:02:41.149 align:start position:0%
want to unnecessarily tied them up
especially<00:02:40.140><c> waiting</c><00:02:40.560><c> for</c><00:02:40.769><c> data</c><00:02:40.950><c> to</c><00:02:41.129><c> be</c>

00:02:41.149 --> 00:02:41.159 align:start position:0%
especially waiting for data to be
 

00:02:41.159 --> 00:02:45.229 align:start position:0%
especially waiting for data to be
received<00:02:41.579><c> from</c><00:02:41.730><c> the</c><00:02:41.849><c> network</c><00:02:43.939><c> looking</c><00:02:44.939><c> again</c>

00:02:45.229 --> 00:02:45.239 align:start position:0%
received from the network looking again
 

00:02:45.239 --> 00:02:49.460 align:start position:0%
received from the network looking again
at<00:02:45.450><c> the</c><00:02:45.510><c> HTTP</c><00:02:46.230><c> timeline</c><00:02:46.709><c> the</c><00:02:47.670><c> HTTP</c><00:02:48.420><c> to</c><00:02:48.629><c> RFC</c><00:02:49.079><c> was</c>

00:02:49.460 --> 00:02:49.470 align:start position:0%
at the HTTP timeline the HTTP to RFC was
 

00:02:49.470 --> 00:02:54.050 align:start position:0%
at the HTTP timeline the HTTP to RFC was
published<00:02:49.920><c> in</c><00:02:50.159><c> May</c><00:02:50.790><c> 2015</c><00:02:51.420><c> the</c><00:02:53.060><c> application</c>

00:02:54.050 --> 00:02:54.060 align:start position:0%
published in May 2015 the application
 

00:02:54.060 --> 00:02:57.020 align:start position:0%
published in May 2015 the application
semantics<00:02:54.599><c> of</c><00:02:54.780><c> HDTV</c><00:02:55.290><c> 2</c><00:02:55.620><c> are</c><00:02:56.010><c> mainly</c><00:02:56.609><c> the</c><00:02:56.790><c> same</c>

00:02:57.020 --> 00:02:57.030 align:start position:0%
semantics of HDTV 2 are mainly the same
 

00:02:57.030 --> 00:03:00.319 align:start position:0%
semantics of HDTV 2 are mainly the same
as<00:02:57.269><c> that</c><00:02:57.420><c> of</c><00:02:57.480><c> HTTP</c><00:02:58.349><c> 1</c><00:02:58.530><c> 1</c><00:02:58.819><c> all</c><00:02:59.819><c> the</c><00:03:00.120><c> core</c>

00:03:00.319 --> 00:03:00.329 align:start position:0%
as that of HTTP 1 1 all the core
 

00:03:00.329 --> 00:03:04.190 align:start position:0%
as that of HTTP 1 1 all the core
concepts<00:03:00.989><c> such</c><00:03:01.650><c> as</c><00:03:01.680><c> requests</c><00:03:02.430><c> responses</c><00:03:03.200><c> HTTP</c>

00:03:04.190 --> 00:03:04.200 align:start position:0%
concepts such as requests responses HTTP
 

00:03:04.200 --> 00:03:07.309 align:start position:0%
concepts such as requests responses HTTP
methods<00:03:04.650><c> status</c><00:03:05.069><c> codes</c><00:03:05.400><c> URI</c><00:03:05.670><c> and</c><00:03:06.090><c> headers</c><00:03:06.900><c> are</c>

00:03:07.309 --> 00:03:07.319 align:start position:0%
methods status codes URI and headers are
 

00:03:07.319 --> 00:03:11.360 align:start position:0%
methods status codes URI and headers are
mainly<00:03:07.680><c> the</c><00:03:07.769><c> same</c><00:03:08.510><c> instead</c><00:03:09.510><c> HTTP</c><00:03:10.319><c> 2</c><00:03:10.530><c> modifiers</c>

00:03:11.360 --> 00:03:11.370 align:start position:0%
mainly the same instead HTTP 2 modifiers
 

00:03:11.370 --> 00:03:14.420 align:start position:0%
mainly the same instead HTTP 2 modifiers
how<00:03:12.329><c> to</c><00:03:12.389><c> data</c><00:03:12.689><c> is</c><00:03:12.870><c> formatted</c><00:03:13.139><c> and</c><00:03:13.590><c> transported</c>

00:03:14.420 --> 00:03:14.430 align:start position:0%
how to data is formatted and transported
 

00:03:14.430 --> 00:03:17.780 align:start position:0%
how to data is formatted and transported
between<00:03:14.549><c> the</c><00:03:14.819><c> client</c><00:03:15.209><c> and</c><00:03:15.329><c> server</c><00:03:16.579><c> HTTP</c><00:03:17.579><c> 2</c>

00:03:17.780 --> 00:03:17.790 align:start position:0%
between the client and server HTTP 2
 

00:03:17.790 --> 00:03:20.180 align:start position:0%
between the client and server HTTP 2
does<00:03:18.359><c> however</c><00:03:18.780><c> bring</c><00:03:19.230><c> some</c><00:03:19.410><c> new</c><00:03:19.590><c> concepts</c>

00:03:20.180 --> 00:03:20.190 align:start position:0%
does however bring some new concepts
 

00:03:20.190 --> 00:03:22.220 align:start position:0%
does however bring some new concepts
that<00:03:20.940><c> would</c><00:03:21.090><c> have</c><00:03:21.180><c> been</c><00:03:21.299><c> very</c><00:03:21.329><c> difficult</c><00:03:21.780><c> or</c>

00:03:22.220 --> 00:03:22.230 align:start position:0%
that would have been very difficult or
 

00:03:22.230 --> 00:03:24.319 align:start position:0%
that would have been very difficult or
almost<00:03:22.530><c> impossible</c><00:03:23.129><c> to</c><00:03:23.489><c> model</c><00:03:23.730><c> in</c><00:03:23.940><c> the</c><00:03:24.030><c> URL</c>

00:03:24.319 --> 00:03:24.329 align:start position:0%
almost impossible to model in the URL
 

00:03:24.329 --> 00:03:27.500 align:start position:0%
almost impossible to model in the URL
connection<00:03:24.629><c> API</c><00:03:25.109><c> like</c><00:03:26.010><c> server</c><00:03:26.310><c> push</c><00:03:26.609><c> which</c>

00:03:27.500 --> 00:03:27.510 align:start position:0%
connection API like server push which
 

00:03:27.510 --> 00:03:30.830 align:start position:0%
connection API like server push which
we'll<00:03:27.660><c> take</c><00:03:27.810><c> a</c><00:03:27.870><c> look</c><00:03:28.079><c> at</c><00:03:28.199><c> later</c><00:03:28.940><c> the</c><00:03:29.940><c> HTTP</c><00:03:30.659><c> 2</c>

00:03:30.830 --> 00:03:30.840 align:start position:0%
we'll take a look at later the HTTP 2
 

00:03:30.840 --> 00:03:33.020 align:start position:0%
we'll take a look at later the HTTP 2
implementation<00:03:31.590><c> is</c><00:03:31.739><c> very</c><00:03:32.190><c> different</c><00:03:32.669><c> from</c>

00:03:33.020 --> 00:03:33.030 align:start position:0%
implementation is very different from
 

00:03:33.030 --> 00:03:39.020 align:start position:0%
implementation is very different from
that<00:03:33.120><c> of</c><00:03:33.329><c> HTTP</c><00:03:34.290><c> 1</c><00:03:34.500><c> 1</c><00:03:36.949><c> defining</c><00:03:37.949><c> a</c><00:03:38.040><c> new</c><00:03:38.069><c> HTTP</c>

00:03:39.020 --> 00:03:39.030 align:start position:0%
that of HTTP 1 1 defining a new HTTP
 

00:03:39.030 --> 00:03:41.659 align:start position:0%
that of HTTP 1 1 defining a new HTTP
client<00:03:39.480><c> API</c><00:03:40.049><c> for</c><00:03:40.470><c> the</c><00:03:40.530><c> Java</c><00:03:40.769><c> SE</c><00:03:41.069><c> platform</c><00:03:41.579><c> is</c>

00:03:41.659 --> 00:03:41.669 align:start position:0%
client API for the Java SE platform is
 

00:03:41.669 --> 00:03:44.180 align:start position:0%
client API for the Java SE platform is
not<00:03:41.819><c> easy</c><00:03:42.030><c> especially</c><00:03:42.530><c> if</c><00:03:43.530><c> we</c><00:03:43.590><c> expected</c><00:03:44.069><c> to</c><00:03:44.129><c> be</c>

00:03:44.180 --> 00:03:44.190 align:start position:0%
not easy especially if we expected to be
 

00:03:44.190 --> 00:03:47.659 align:start position:0%
not easy especially if we expected to be
around<00:03:44.430><c> for</c><00:03:44.699><c> the</c><00:03:44.760><c> next</c><00:03:44.909><c> 20</c><00:03:45.329><c> years</c><00:03:46.159><c> jack</c><00:03:47.159><c> 110</c>

00:03:47.659 --> 00:03:47.669 align:start position:0%
around for the next 20 years jack 110
 

00:03:47.669 --> 00:03:51.199 align:start position:0%
around for the next 20 years jack 110
was<00:03:48.030><c> created</c><00:03:48.510><c> in</c><00:03:48.659><c> May</c><00:03:48.900><c> 2014</c><00:03:49.639><c> almost</c><00:03:50.639><c> exactly</c>

00:03:51.199 --> 00:03:51.209 align:start position:0%
was created in May 2014 almost exactly
 

00:03:51.209 --> 00:03:54.319 align:start position:0%
was created in May 2014 almost exactly
one<00:03:51.510><c> year</c><00:03:51.540><c> before</c><00:03:52.019><c> the</c><00:03:52.229><c> HTTP</c><00:03:53.010><c> 2</c><00:03:53.220><c> or</c><00:03:53.459><c> C</c><00:03:54.150><c> was</c>

00:03:54.319 --> 00:03:54.329 align:start position:0%
one year before the HTTP 2 or C was
 

00:03:54.329 --> 00:03:57.140 align:start position:0%
one year before the HTTP 2 or C was
published<00:03:55.099><c> work</c><00:03:56.099><c> actually</c><00:03:56.430><c> began</c><00:03:56.849><c> well</c>

00:03:57.140 --> 00:03:57.150 align:start position:0%
published work actually began well
 

00:03:57.150 --> 00:03:59.180 align:start position:0%
published work actually began well
before<00:03:57.180><c> the</c><00:03:57.629><c> states</c><00:03:57.900><c> in</c><00:03:58.530><c> fact</c><00:03:58.680><c> some</c><00:03:58.979><c> of</c><00:03:59.010><c> the</c>

00:03:59.180 --> 00:03:59.190 align:start position:0%
before the states in fact some of the
 

00:03:59.190 --> 00:04:01.640 align:start position:0%
before the states in fact some of the
early<00:03:59.489><c> product</c><00:03:59.879><c> types</c><00:04:00.209><c> that</c><00:04:00.989><c> went</c><00:04:01.169><c> to</c><00:04:01.319><c> several</c>

00:04:01.640 --> 00:04:01.650 align:start position:0%
early product types that went to several
 

00:04:01.650 --> 00:04:04.640 align:start position:0%
early product types that went to several
iterations<00:04:02.180><c> were</c><00:04:03.180><c> done</c><00:04:03.419><c> around</c><00:04:03.750><c> the</c><00:04:04.139><c> Java</c><00:04:04.379><c> 7</c>

00:04:04.640 --> 00:04:04.650 align:start position:0%
iterations were done around the Java 7
 

00:04:04.650 --> 00:04:07.369 align:start position:0%
iterations were done around the Java 7
time<00:04:05.129><c> frame</c><00:04:05.400><c> in</c><00:04:06.000><c> an</c><00:04:06.150><c> open</c><00:04:06.419><c> source</c><00:04:06.659><c> project</c><00:04:06.959><c> on</c>

00:04:07.369 --> 00:04:07.379 align:start position:0%
time frame in an open source project on
 

00:04:07.379 --> 00:04:10.250 align:start position:0%
time frame in an open source project on
the<00:04:07.650><c> now-defunct</c><00:04:07.949><c> java.net</c><00:04:08.849><c> site</c><00:04:09.180><c> which</c><00:04:10.109><c> is</c>

00:04:10.250 --> 00:04:10.260 align:start position:0%
the now-defunct java.net site which is
 

00:04:10.260 --> 00:04:12.920 align:start position:0%
the now-defunct java.net site which is
still<00:04:10.409><c> available</c><00:04:10.859><c> in</c><00:04:10.949><c> the</c><00:04:10.979><c> archives</c><00:04:11.400><c> so</c><00:04:11.930><c> this</c>

00:04:12.920 --> 00:04:12.930 align:start position:0%
still available in the archives so this
 

00:04:12.930 --> 00:04:15.439 align:start position:0%
still available in the archives so this
project<00:04:13.169><c> has</c><00:04:13.530><c> been</c><00:04:13.560><c> worked</c><00:04:13.889><c> on</c><00:04:14.129><c> by</c><00:04:14.449><c> several</c>

00:04:15.439 --> 00:04:15.449 align:start position:0%
project has been worked on by several
 

00:04:15.449 --> 00:04:17.420 align:start position:0%
project has been worked on by several
engineers<00:04:15.900><c> and</c><00:04:16.199><c> spans</c><00:04:16.590><c> over</c><00:04:16.949><c> a</c><00:04:17.070><c> number</c><00:04:17.250><c> of</c>

00:04:17.420 --> 00:04:17.430 align:start position:0%
engineers and spans over a number of
 

00:04:17.430 --> 00:04:23.110 align:start position:0%
engineers and spans over a number of
years<00:04:19.940><c> Jeff</c><00:04:20.940><c> content</c><00:04:21.449><c> was</c><00:04:21.810><c> integrated</c><00:04:22.409><c> in</c><00:04:22.529><c> JDK</c>

00:04:23.110 --> 00:04:23.120 align:start position:0%
years Jeff content was integrated in JDK
 

00:04:23.120 --> 00:04:27.180 align:start position:0%
years Jeff content was integrated in JDK
9nj<00:04:24.120><c> tk9</c><00:04:24.599><c> shipped</c><00:04:24.930><c> in</c><00:04:25.139><c> September</c><00:04:25.650><c> 2017</c>

00:04:27.180 --> 00:04:27.190 align:start position:0%
9nj tk9 shipped in September 2017
 

00:04:27.190 --> 00:04:30.210 align:start position:0%
9nj tk9 shipped in September 2017
as<00:04:28.090><c> you</c><00:04:28.240><c> will</c><00:04:28.360><c> know</c><00:04:28.510><c> Java</c><00:04:29.260><c> 9</c><00:04:29.560><c> brought</c><00:04:29.800><c> a</c><00:04:29.890><c> large</c>

00:04:30.210 --> 00:04:30.220 align:start position:0%
as you will know Java 9 brought a large
 

00:04:30.220 --> 00:04:32.160 align:start position:0%
as you will know Java 9 brought a large
language<00:04:30.820><c> change</c><00:04:31.150><c> in</c><00:04:31.450><c> the</c><00:04:31.690><c> form</c><00:04:31.900><c> of</c><00:04:32.020><c> the</c>

00:04:32.160 --> 00:04:32.170 align:start position:0%
language change in the form of the
 

00:04:32.170 --> 00:04:34.860 align:start position:0%
language change in the form of the
module<00:04:32.470><c> system</c><00:04:32.800><c> and</c><00:04:33.010><c> the</c><00:04:33.910><c> Java</c><00:04:34.120><c> Runtime</c><00:04:34.570><c> image</c>

00:04:34.860 --> 00:04:34.870 align:start position:0%
module system and the Java Runtime image
 

00:04:34.870 --> 00:04:37.220 align:start position:0%
module system and the Java Runtime image
is<00:04:35.080><c> comprised</c><00:04:35.590><c> at</c><00:04:35.830><c> a</c><00:04:35.860><c> set</c><00:04:36.130><c> of</c><00:04:36.310><c> modules</c>

00:04:37.220 --> 00:04:37.230 align:start position:0%
is comprised at a set of modules
 

00:04:37.230 --> 00:04:39.810 align:start position:0%
is comprised at a set of modules
alongside<00:04:38.230><c> the</c><00:04:38.650><c> module</c><00:04:38.950><c> system</c><00:04:39.310><c> a</c><00:04:39.430><c> new</c>

00:04:39.810 --> 00:04:39.820 align:start position:0%
alongside the module system a new
 

00:04:39.820 --> 00:04:42.080 align:start position:0%
alongside the module system a new
concept<00:04:40.300><c> of</c><00:04:40.540><c> incubating</c><00:04:41.050><c> features</c><00:04:41.500><c> was</c><00:04:41.680><c> added</c>

00:04:42.080 --> 00:04:42.090 align:start position:0%
concept of incubating features was added
 

00:04:42.090 --> 00:04:44.640 align:start position:0%
concept of incubating features was added
we'll<00:04:43.090><c> take</c><00:04:43.300><c> a</c><00:04:43.330><c> deeper</c><00:04:43.780><c> look</c><00:04:43.960><c> at</c><00:04:44.140><c> incubating</c>

00:04:44.640 --> 00:04:44.650 align:start position:0%
we'll take a deeper look at incubating
 

00:04:44.650 --> 00:04:46.920 align:start position:0%
we'll take a deeper look at incubating
features<00:04:44.950><c> in</c><00:04:45.070><c> the</c><00:04:45.130><c> moment</c><00:04:45.490><c> but</c><00:04:46.180><c> for</c><00:04:46.360><c> now</c><00:04:46.540><c> all</c>

00:04:46.920 --> 00:04:46.930 align:start position:0%
features in the moment but for now all
 

00:04:46.930 --> 00:04:49.350 align:start position:0%
features in the moment but for now all
we<00:04:47.140><c> need</c><00:04:47.500><c> to</c><00:04:47.620><c> know</c><00:04:47.770><c> is</c><00:04:48.010><c> that</c><00:04:48.070><c> the</c><00:04:48.340><c> HTTP</c><00:04:49.000><c> client</c>

00:04:49.350 --> 00:04:49.360 align:start position:0%
we need to know is that the HTTP client
 

00:04:49.360 --> 00:04:52.020 align:start position:0%
we need to know is that the HTTP client
was<00:04:49.510><c> added</c><00:04:49.840><c> in</c><00:04:49.990><c> jdk</c><00:04:50.440><c> 9</c><00:04:50.650><c> as</c><00:04:50.920><c> an</c><00:04:51.400><c> incubating</c>

00:04:52.020 --> 00:04:52.030 align:start position:0%
was added in jdk 9 as an incubating
 

00:04:52.030 --> 00:04:55.830 align:start position:0%
was added in jdk 9 as an incubating
feature<00:04:52.270><c> a</c><00:04:52.830><c> new</c><00:04:53.830><c> incubator</c><00:04:54.370><c> module</c><00:04:54.850><c> named</c><00:04:55.180><c> jdk</c>

00:04:55.830 --> 00:04:55.840 align:start position:0%
feature a new incubator module named jdk
 

00:04:55.840 --> 00:05:00.000 align:start position:0%
feature a new incubator module named jdk
incubator<00:04:56.730><c> HTTP</c><00:04:57.730><c> client</c><00:04:58.180><c> was</c><00:04:58.390><c> added</c><00:04:59.010><c> that</c>

00:05:00.000 --> 00:05:00.010 align:start position:0%
incubator HTTP client was added that
 

00:05:00.010 --> 00:05:02.670 align:start position:0%
incubator HTTP client was added that
module<00:05:00.430><c> exports</c><00:05:01.030><c> a</c><00:05:01.120><c> single</c><00:05:01.450><c> package</c><00:05:01.810><c> jdk</c>

00:05:02.670 --> 00:05:02.680 align:start position:0%
module exports a single package jdk
 

00:05:02.680 --> 00:05:05.340 align:start position:0%
module exports a single package jdk
incubator<00:05:03.160><c> HTTP</c><00:05:03.970><c> that</c><00:05:04.180><c> contains</c><00:05:05.170><c> two</c>

00:05:05.340 --> 00:05:05.350 align:start position:0%
incubator HTTP that contains two
 

00:05:05.350 --> 00:05:11.490 align:start position:0%
incubator HTTP that contains two
complete<00:05:05.680><c> HTTP</c><00:05:06.670><c> api</c><00:05:09.750><c> jeff</c><00:05:10.750><c> 11</c><00:05:11.170><c> is</c><00:05:11.290><c> an</c>

00:05:11.490 --> 00:05:11.500 align:start position:0%
complete HTTP api jeff 11 is an
 

00:05:11.500 --> 00:05:13.410 align:start position:0%
complete HTTP api jeff 11 is an
informational<00:05:12.160><c> jet</c><00:05:12.430><c> that</c><00:05:12.760><c> describes</c><00:05:13.180><c> what</c>

00:05:13.410 --> 00:05:13.420 align:start position:0%
informational jet that describes what
 

00:05:13.420 --> 00:05:16.140 align:start position:0%
informational jet that describes what
incubating<00:05:14.230><c> features</c><00:05:14.590><c> are</c><00:05:14.860><c> their</c><00:05:15.760><c> purpose</c>

00:05:16.140 --> 00:05:16.150 align:start position:0%
incubating features are their purpose
 

00:05:16.150 --> 00:05:18.300 align:start position:0%
incubating features are their purpose
and<00:05:16.390><c> their</c><00:05:17.050><c> delivery</c><00:05:17.200><c> mechanism</c><00:05:17.950><c> through</c>

00:05:18.300 --> 00:05:18.310 align:start position:0%
and their delivery mechanism through
 

00:05:18.310 --> 00:05:19.760 align:start position:0%
and their delivery mechanism through
incubator<00:05:18.790><c> modules</c>

00:05:19.760 --> 00:05:19.770 align:start position:0%
incubator modules
 

00:05:19.770 --> 00:05:23.580 align:start position:0%
incubator modules
simply<00:05:20.770><c> put</c><00:05:21.270><c> incubator</c><00:05:22.270><c> modules</c><00:05:22.750><c> are</c><00:05:22.960><c> a</c><00:05:22.990><c> means</c>

00:05:23.580 --> 00:05:23.590 align:start position:0%
simply put incubator modules are a means
 

00:05:23.590 --> 00:05:26.340 align:start position:0%
simply put incubator modules are a means
of<00:05:23.890><c> putting</c><00:05:24.150><c> non-final</c><00:05:25.150><c> api's</c><00:05:25.720><c> in</c><00:05:26.050><c> the</c><00:05:26.110><c> hands</c>

00:05:26.340 --> 00:05:26.350 align:start position:0%
of putting non-final api's in the hands
 

00:05:26.350 --> 00:05:28.440 align:start position:0%
of putting non-final api's in the hands
of<00:05:26.410><c> developers</c><00:05:26.820><c> while</c><00:05:27.820><c> the</c><00:05:27.910><c> API</c><00:05:28.330><c> is</c>

00:05:28.440 --> 00:05:28.450 align:start position:0%
of developers while the API is
 

00:05:28.450 --> 00:05:30.300 align:start position:0%
of developers while the API is
progressed<00:05:28.990><c> towards</c><00:05:29.380><c> finalization</c><00:05:30.160><c> or</c>

00:05:30.300 --> 00:05:30.310 align:start position:0%
progressed towards finalization or
 

00:05:30.310 --> 00:05:35.610 align:start position:0%
progressed towards finalization or
removal<00:05:31.180><c> in</c><00:05:31.330><c> a</c><00:05:31.450><c> future</c><00:05:31.780><c> release</c><00:05:34.620><c> incubating</c>

00:05:35.610 --> 00:05:35.620 align:start position:0%
removal in a future release incubating
 

00:05:35.620 --> 00:05:37.909 align:start position:0%
removal in a future release incubating
an<00:05:35.740><c> API</c><00:05:36.040><c> is</c><00:05:36.190><c> desirable</c><00:05:36.940><c> as</c><00:05:37.210><c> it</c><00:05:37.570><c> allows</c><00:05:37.840><c> the</c>

00:05:37.909 --> 00:05:37.919 align:start position:0%
an API is desirable as it allows the
 

00:05:37.919 --> 00:05:40.830 align:start position:0%
an API is desirable as it allows the
standardization<00:05:38.919><c> of</c><00:05:39.040><c> an</c><00:05:39.280><c> API</c><00:05:39.550><c> to</c><00:05:40.240><c> be</c><00:05:40.330><c> deferred</c>

00:05:40.830 --> 00:05:40.840 align:start position:0%
standardization of an API to be deferred
 

00:05:40.840 --> 00:05:43.830 align:start position:0%
standardization of an API to be deferred
for<00:05:41.140><c> a</c><00:05:41.200><c> short</c><00:05:41.470><c> period</c><00:05:41.740><c> of</c><00:05:42.010><c> time</c><00:05:42.450><c> the</c><00:05:43.450><c> API</c><00:05:43.780><c> is</c>

00:05:43.830 --> 00:05:43.840 align:start position:0%
for a short period of time the API is
 

00:05:43.840 --> 00:05:46.530 align:start position:0%
for a short period of time the API is
still<00:05:44.110><c> part</c><00:05:44.440><c> of</c><00:05:44.500><c> the</c><00:05:44.770><c> JDK</c><00:05:44.980><c> download</c><00:05:45.669><c> so</c><00:05:46.419><c> is</c>

00:05:46.530 --> 00:05:46.540 align:start position:0%
still part of the JDK download so is
 

00:05:46.540 --> 00:05:48.330 align:start position:0%
still part of the JDK download so is
available<00:05:47.020><c> to</c><00:05:47.230><c> the</c><00:05:47.350><c> large</c><00:05:47.560><c> number</c><00:05:47.980><c> of</c><00:05:48.010><c> Java</c>

00:05:48.330 --> 00:05:48.340 align:start position:0%
available to the large number of Java
 

00:05:48.340 --> 00:05:51.810 align:start position:0%
available to the large number of Java
developers<00:05:49.290><c> the</c><00:05:50.290><c> incubation</c><00:05:50.860><c> time</c><00:05:51.100><c> allows</c>

00:05:51.810 --> 00:05:51.820 align:start position:0%
developers the incubation time allows
 

00:05:51.820 --> 00:05:53.520 align:start position:0%
developers the incubation time allows
for<00:05:52.090><c> these</c><00:05:52.210><c> developers</c><00:05:52.810><c> to</c><00:05:52.960><c> provide</c><00:05:53.080><c> feedback</c>

00:05:53.520 --> 00:05:53.530 align:start position:0%
for these developers to provide feedback
 

00:05:53.530 --> 00:05:56.100 align:start position:0%
for these developers to provide feedback
on<00:05:53.770><c> the</c><00:05:54.040><c> API</c><00:05:54.310><c> as</c><00:05:55.150><c> well</c><00:05:55.210><c> as</c><00:05:55.510><c> the</c><00:05:55.630><c> ability</c><00:05:55.750><c> for</c>

00:05:56.100 --> 00:05:56.110 align:start position:0%
on the API as well as the ability for
 

00:05:56.110 --> 00:05:58.170 align:start position:0%
on the API as well as the ability for
the<00:05:56.410><c> API</c><00:05:56.740><c> to</c><00:05:56.860><c> incorporate</c><00:05:57.610><c> its</c><00:05:57.790><c> feedback</c>

00:05:58.170 --> 00:05:58.180 align:start position:0%
the API to incorporate its feedback
 

00:05:58.180 --> 00:06:01.590 align:start position:0%
the API to incorporate its feedback
before<00:05:58.810><c> it</c><00:05:58.930><c> is</c><00:05:59.080><c> standardized</c><00:05:59.590><c> an</c><00:06:00.600><c> incubating</c>

00:06:01.590 --> 00:06:01.600 align:start position:0%
before it is standardized an incubating
 

00:06:01.600 --> 00:06:03.600 align:start position:0%
before it is standardized an incubating
API<00:06:01.960><c> is</c><00:06:02.110><c> expected</c><00:06:02.890><c> to</c><00:06:03.040><c> be</c><00:06:03.160><c> relatively</c>

00:06:03.600 --> 00:06:03.610 align:start position:0%
API is expected to be relatively
 

00:06:03.610 --> 00:06:06.510 align:start position:0%
API is expected to be relatively
short-lived<00:06:04.350><c> in</c><00:06:05.350><c> all</c><00:06:05.500><c> cases</c><00:06:05.830><c> it</c><00:06:06.160><c> will</c><00:06:06.310><c> be</c>

00:06:06.510 --> 00:06:06.520 align:start position:0%
short-lived in all cases it will be
 

00:06:06.520 --> 00:06:08.670 align:start position:0%
short-lived in all cases it will be
removed<00:06:06.880><c> in</c><00:06:07.060><c> a</c><00:06:07.150><c> future</c><00:06:07.450><c> release</c><00:06:07.680><c> either</c>

00:06:08.670 --> 00:06:08.680 align:start position:0%
removed in a future release either
 

00:06:08.680 --> 00:06:11.159 align:start position:0%
removed in a future release either
because<00:06:09.040><c> it</c><00:06:09.190><c> is</c><00:06:09.340><c> standardized</c><00:06:09.910><c> in</c><00:06:10.210><c> which</c><00:06:10.900><c> case</c>

00:06:11.159 --> 00:06:11.169 align:start position:0%
because it is standardized in which case
 

00:06:11.169 --> 00:06:12.570 align:start position:0%
because it is standardized in which case
its<00:06:11.380><c> module</c><00:06:11.740><c> and</c><00:06:11.919><c> package</c><00:06:12.190><c> name</c><00:06:12.370><c> will</c><00:06:12.550><c> change</c>

00:06:12.570 --> 00:06:12.580 align:start position:0%
its module and package name will change
 

00:06:12.580 --> 00:06:15.540 align:start position:0%
its module and package name will change
or<00:06:13.360><c> if</c><00:06:14.230><c> some</c><00:06:14.440><c> fatal</c><00:06:14.740><c> design</c><00:06:15.190><c> flaw</c><00:06:15.490><c> is</c>

00:06:15.540 --> 00:06:15.550 align:start position:0%
or if some fatal design flaw is
 

00:06:15.550 --> 00:06:19.670 align:start position:0%
or if some fatal design flaw is
discovered<00:06:16.120><c> then</c><00:06:16.750><c> it</c><00:06:16.870><c> will</c><00:06:16.990><c> be</c><00:06:17.080><c> dropped</c>

00:06:19.670 --> 00:06:19.680 align:start position:0%
 
 

00:06:19.680 --> 00:06:22.920 align:start position:0%
 
looking<00:06:20.680><c> at</c><00:06:20.800><c> the</c><00:06:20.860><c> HTTP</c><00:06:21.520><c> client</c><00:06:21.940><c> class</c><00:06:22.150><c> from</c>

00:06:22.920 --> 00:06:22.930 align:start position:0%
looking at the HTTP client class from
 

00:06:22.930 --> 00:06:27.420 align:start position:0%
looking at the HTTP client class from
JDK<00:06:23.470><c> Nayanar</c><00:06:23.800><c> JDK</c><00:06:24.280><c> 10</c><00:06:25.740><c> you</c><00:06:26.740><c> will</c><00:06:26.830><c> see</c><00:06:27.040><c> that</c><00:06:27.220><c> its</c>

00:06:27.420 --> 00:06:27.430 align:start position:0%
JDK Nayanar JDK 10 you will see that its
 

00:06:27.430 --> 00:06:29.100 align:start position:0%
JDK Nayanar JDK 10 you will see that its
module<00:06:27.790><c> and</c><00:06:28.000><c> package</c><00:06:28.300><c> name</c><00:06:28.540><c> clearly</c>

00:06:29.100 --> 00:06:29.110 align:start position:0%
module and package name clearly
 

00:06:29.110 --> 00:06:32.790 align:start position:0%
module and package name clearly
identified<00:06:29.770><c> as</c><00:06:30.010><c> being</c><00:06:30.220><c> incubating</c><00:06:31.710><c> there</c><00:06:32.710><c> is</c>

00:06:32.790 --> 00:06:32.800 align:start position:0%
identified as being incubating there is
 

00:06:32.800 --> 00:06:35.070 align:start position:0%
identified as being incubating there is
also<00:06:32.950><c> a</c><00:06:33.130><c> more</c><00:06:33.460><c> scary-looking</c><00:06:34.210><c> warning</c><00:06:34.660><c> that</c>

00:06:35.070 --> 00:06:35.080 align:start position:0%
also a more scary-looking warning that
 

00:06:35.080 --> 00:06:37.590 align:start position:0%
also a more scary-looking warning that
the<00:06:35.200><c> API</c><00:06:35.560><c> is</c><00:06:35.710><c> an</c><00:06:35.919><c> incubating</c><00:06:36.370><c> feature</c><00:06:36.610><c> and</c><00:06:36.970><c> as</c>

00:06:37.590 --> 00:06:37.600 align:start position:0%
the API is an incubating feature and as
 

00:06:37.600 --> 00:06:40.239 align:start position:0%
the API is an incubating feature and as
such<00:06:37.900><c> will</c><00:06:38.169><c> be</c><00:06:38.289><c> removed</c><00:06:38.650><c> in</c><00:06:38.860><c> a</c><00:06:38.950><c> future</c><00:06:39.220><c> release</c>

00:06:40.239 --> 00:06:40.249 align:start position:0%
such will be removed in a future release
 

00:06:40.249 --> 00:06:42.459 align:start position:0%
such will be removed in a future release
all<00:06:40.729><c> this</c><00:06:40.999><c> helps</c><00:06:41.359><c> to</c><00:06:41.449><c> notify</c><00:06:41.839><c> the</c><00:06:41.899><c> developer</c>

00:06:42.459 --> 00:06:42.469 align:start position:0%
all this helps to notify the developer
 

00:06:42.469 --> 00:06:45.189 align:start position:0%
all this helps to notify the developer
that<00:06:43.099><c> if</c><00:06:43.249><c> they</c><00:06:43.429><c> are</c><00:06:43.519><c> using</c><00:06:43.759><c> this</c><00:06:43.999><c> API</c><00:06:44.199><c> then</c>

00:06:45.189 --> 00:06:45.199 align:start position:0%
that if they are using this API then
 

00:06:45.199 --> 00:06:47.199 align:start position:0%
that if they are using this API then
they<00:06:45.319><c> will</c><00:06:45.469><c> need</c><00:06:45.619><c> to</c><00:06:45.709><c> take</c><00:06:45.859><c> some</c><00:06:46.159><c> action</c><00:06:46.369><c> when</c>

00:06:47.199 --> 00:06:47.209 align:start position:0%
they will need to take some action when
 

00:06:47.209 --> 00:06:51.959 align:start position:0%
they will need to take some action when
updating<00:06:47.629><c> it</c><00:06:47.929><c> to</c><00:06:47.959><c> a</c><00:06:48.169><c> future</c><00:06:48.549><c> JDK</c><00:06:49.549><c> release</c>

00:06:51.959 --> 00:06:51.969 align:start position:0%
 
 

00:06:51.969 --> 00:06:54.369 align:start position:0%
 
incubator<00:06:52.969><c> incubator</c><00:06:53.659><c> modules</c><00:06:54.109><c> are</c><00:06:54.319><c> not</c>

00:06:54.369 --> 00:06:54.379 align:start position:0%
incubator incubator modules are not
 

00:06:54.379 --> 00:06:56.829 align:start position:0%
incubator incubator modules are not
resolved<00:06:55.219><c> at</c><00:06:55.399><c> compile</c><00:06:55.789><c> time</c><00:06:55.819><c> so</c><00:06:56.719><c> an</c>

00:06:56.829 --> 00:06:56.839 align:start position:0%
resolved at compile time so an
 

00:06:56.839 --> 00:06:58.809 align:start position:0%
resolved at compile time so an
additional<00:06:57.079><c> command-line</c><00:06:57.859><c> option</c><00:06:58.279><c> needs</c><00:06:58.639><c> to</c>

00:06:58.809 --> 00:06:58.819 align:start position:0%
additional command-line option needs to
 

00:06:58.819 --> 00:07:01.839 align:start position:0%
additional command-line option needs to
be<00:06:58.879><c> specified</c><00:06:59.149><c> to</c><00:07:00.049><c> tell</c><00:07:00.259><c> the</c><00:07:00.379><c> compiler</c><00:07:00.709><c> to</c><00:07:01.699><c> add</c>

00:07:01.839 --> 00:07:01.849 align:start position:0%
be specified to tell the compiler to add
 

00:07:01.849 --> 00:07:03.999 align:start position:0%
be specified to tell the compiler to add
the<00:07:02.029><c> incubator</c><00:07:02.479><c> module</c><00:07:02.929><c> and</c><00:07:03.109><c> make</c><00:07:03.559><c> its</c><00:07:03.739><c> types</c>

00:07:03.999 --> 00:07:04.009 align:start position:0%
the incubator module and make its types
 

00:07:04.009 --> 00:07:07.749 align:start position:0%
the incubator module and make its types
available<00:07:05.319><c> here</c><00:07:06.319><c> we</c><00:07:06.499><c> are</c><00:07:06.619><c> making</c><00:07:06.829><c> the</c><00:07:07.069><c> HTTP</c>

00:07:07.749 --> 00:07:07.759 align:start position:0%
available here we are making the HTTP
 

00:07:07.759 --> 00:07:11.079 align:start position:0%
available here we are making the HTTP
client<00:07:08.209><c> module</c><00:07:09.019><c> available</c><00:07:09.789><c> so</c><00:07:10.789><c> the</c><00:07:10.939><c> add</c>

00:07:11.079 --> 00:07:11.089 align:start position:0%
client module available so the add
 

00:07:11.089 --> 00:07:13.299 align:start position:0%
client module available so the add
modules<00:07:11.659><c> command-line</c><00:07:12.199><c> option</c><00:07:12.589><c> is</c><00:07:12.739><c> specified</c>

00:07:13.299 --> 00:07:13.309 align:start position:0%
modules command-line option is specified
 

00:07:13.309 --> 00:07:15.429 align:start position:0%
modules command-line option is specified
with<00:07:13.610><c> the</c><00:07:13.639><c> name</c><00:07:13.909><c> of</c><00:07:14.149><c> the</c><00:07:14.299><c> HTTP</c><00:07:14.989><c> client</c>

00:07:15.429 --> 00:07:15.439 align:start position:0%
with the name of the HTTP client
 

00:07:15.439 --> 00:07:19.899 align:start position:0%
with the name of the HTTP client
incubator<00:07:15.979><c> module</c><00:07:18.309><c> similarly</c><00:07:19.309><c> incubator</c>

00:07:19.899 --> 00:07:19.909 align:start position:0%
incubator module similarly incubator
 

00:07:19.909 --> 00:07:22.869 align:start position:0%
incubator module similarly incubator
modules<00:07:20.329><c> are</c><00:07:20.479><c> not</c><00:07:20.659><c> resolved</c><00:07:21.110><c> at</c><00:07:21.199><c> runtime</c><00:07:21.879><c> so</c>

00:07:22.869 --> 00:07:22.879 align:start position:0%
modules are not resolved at runtime so
 

00:07:22.879 --> 00:07:24.909 align:start position:0%
modules are not resolved at runtime so
the<00:07:22.999><c> add</c><00:07:23.329><c> modules</c><00:07:23.929><c> command-line</c><00:07:24.409><c> option</c><00:07:24.799><c> is</c>

00:07:24.909 --> 00:07:24.919 align:start position:0%
the add modules command-line option is
 

00:07:24.919 --> 00:07:27.850 align:start position:0%
the add modules command-line option is
heated<00:07:25.399><c> again</c><00:07:25.519><c> with</c><00:07:26.509><c> the</c><00:07:26.629><c> same</c><00:07:26.809><c> value</c><00:07:27.259><c> the</c>

00:07:27.850 --> 00:07:27.860 align:start position:0%
heated again with the same value the
 

00:07:27.860 --> 00:07:31.739 align:start position:0%
heated again with the same value the
name<00:07:28.039><c> of</c><00:07:28.279><c> the</c><00:07:28.369><c> HTTP</c><00:07:29.059><c> client</c><00:07:29.509><c> incubator</c><00:07:29.929><c> module</c>

00:07:31.739 --> 00:07:31.749 align:start position:0%
name of the HTTP client incubator module
 

00:07:31.749 --> 00:07:34.809 align:start position:0%
name of the HTTP client incubator module
alternatively<00:07:32.749><c> a</c><00:07:33.049><c> modular</c><00:07:33.860><c> application</c><00:07:34.489><c> can</c>

00:07:34.809 --> 00:07:34.819 align:start position:0%
alternatively a modular application can
 

00:07:34.819 --> 00:07:36.699 align:start position:0%
alternatively a modular application can
include<00:07:35.089><c> an</c><00:07:35.269><c> explicit</c><00:07:35.779><c> requires</c><00:07:36.139><c> directive</c>

00:07:36.699 --> 00:07:36.709 align:start position:0%
include an explicit requires directive
 

00:07:36.709 --> 00:07:39.279 align:start position:0%
include an explicit requires directive
in<00:07:36.860><c> its</c><00:07:37.009><c> module</c><00:07:37.399><c> info</c><00:07:37.729><c> source</c><00:07:38.029><c> file</c><00:07:38.289><c> naming</c>

00:07:39.279 --> 00:07:39.289 align:start position:0%
in its module info source file naming
 

00:07:39.289 --> 00:07:43.379 align:start position:0%
in its module info source file naming
the<00:07:39.559><c> HTTP</c><00:07:40.309><c> client</c><00:07:40.699><c> incubator</c><00:07:41.119><c> module</c>

00:07:43.379 --> 00:07:43.389 align:start position:0%
the HTTP client incubator module
 

00:07:43.389 --> 00:07:45.759 align:start position:0%
the HTTP client incubator module
regardless<00:07:44.389><c> of</c><00:07:44.509><c> how</c><00:07:44.659><c> incubator</c><00:07:45.169><c> modules</c><00:07:45.589><c> are</c>

00:07:45.759 --> 00:07:45.769 align:start position:0%
regardless of how incubator modules are
 

00:07:45.769 --> 00:07:48.429 align:start position:0%
regardless of how incubator modules are
resolved<00:07:46.339><c> either</c><00:07:47.149><c> true</c><00:07:47.509><c> explicit</c><00:07:48.049><c> requires</c>

00:07:48.429 --> 00:07:48.439 align:start position:0%
resolved either true explicit requires
 

00:07:48.439 --> 00:07:50.139 align:start position:0%
resolved either true explicit requires
directives<00:07:48.979><c> in</c><00:07:49.129><c> the</c><00:07:49.339><c> module</c><00:07:49.639><c> info</c><00:07:49.909><c> source</c>

00:07:50.139 --> 00:07:50.149 align:start position:0%
directives in the module info source
 

00:07:50.149 --> 00:07:52.269 align:start position:0%
directives in the module info source
file<00:07:50.419><c> or</c><00:07:50.629><c> true</c><00:07:51.319><c> commandlineoptions</c>

00:07:52.269 --> 00:07:52.279 align:start position:0%
file or true commandlineoptions
 

00:07:52.279 --> 00:07:54.639 align:start position:0%
file or true commandlineoptions
a<00:07:52.509><c> warning</c><00:07:53.509><c> is</c><00:07:53.599><c> emitted</c><00:07:54.019><c> at</c><00:07:54.229><c> both</c>

00:07:54.639 --> 00:07:54.649 align:start position:0%
a warning is emitted at both
 

00:07:54.649 --> 00:07:57.399 align:start position:0%
a warning is emitted at both
compile-time<00:07:55.069><c> and</c><00:07:55.549><c> run-time</c><00:07:55.959><c> to</c><00:07:56.959><c> indicate</c>

00:07:57.399 --> 00:07:57.409 align:start position:0%
compile-time and run-time to indicate
 

00:07:57.409 --> 00:08:00.059 align:start position:0%
compile-time and run-time to indicate
that<00:07:57.559><c> an</c><00:07:57.860><c> incubating</c><00:07:58.429><c> feature</c><00:07:58.639><c> is</c><00:07:58.969><c> being</c><00:07:59.119><c> used</c>

00:08:00.059 --> 00:08:00.069 align:start position:0%
that an incubating feature is being used
 

00:08:00.069 --> 00:08:02.889 align:start position:0%
that an incubating feature is being used
the<00:08:01.069><c> warning</c><00:08:01.429><c> includes</c><00:08:01.939><c> the</c><00:08:02.269><c> name</c><00:08:02.509><c> of</c><00:08:02.779><c> the</c>

00:08:02.889 --> 00:08:02.899 align:start position:0%
the warning includes the name of the
 

00:08:02.899 --> 00:08:05.229 align:start position:0%
the warning includes the name of the
particular<00:08:03.169><c> incubating</c><00:08:03.949><c> modules</c><00:08:04.339><c> that</c><00:08:05.059><c> are</c>

00:08:05.229 --> 00:08:05.239 align:start position:0%
particular incubating modules that are
 

00:08:05.239 --> 00:08:07.869 align:start position:0%
particular incubating modules that are
in<00:08:05.419><c> use</c><00:08:05.659><c> in</c><00:08:06.439><c> this</c><00:08:06.619><c> case</c><00:08:06.860><c> just</c><00:08:07.219><c> the</c><00:08:07.279><c> incubating</c>

00:08:07.869 --> 00:08:07.879 align:start position:0%
in use in this case just the incubating
 

00:08:07.879 --> 00:08:11.169 align:start position:0%
in use in this case just the incubating
HTTP<00:08:08.539><c> client</c><00:08:08.869><c> module</c><00:08:09.169><c> has</c><00:08:09.289><c> been</c><00:08:09.469><c> used</c><00:08:10.179><c> again</c>

00:08:11.169 --> 00:08:11.179 align:start position:0%
HTTP client module has been used again
 

00:08:11.179 --> 00:08:13.959 align:start position:0%
HTTP client module has been used again
this<00:08:11.479><c> warning</c><00:08:11.989><c> is</c><00:08:12.169><c> intended</c><00:08:13.159><c> to</c><00:08:13.189><c> help</c><00:08:13.279><c> notify</c>

00:08:13.959 --> 00:08:13.969 align:start position:0%
this warning is intended to help notify
 

00:08:13.969 --> 00:08:16.149 align:start position:0%
this warning is intended to help notify
the<00:08:14.029><c> developer</c><00:08:14.689><c> that</c><00:08:15.319><c> an</c><00:08:15.439><c> incubating</c><00:08:15.949><c> feature</c>

00:08:16.149 --> 00:08:16.159 align:start position:0%
the developer that an incubating feature
 

00:08:16.159 --> 00:08:18.939 align:start position:0%
the developer that an incubating feature
is<00:08:16.369><c> in</c><00:08:16.519><c> use</c><00:08:16.699><c> and</c><00:08:16.909><c> that</c><00:08:17.689><c> an</c><00:08:17.899><c> action</c><00:08:18.529><c> will</c><00:08:18.739><c> need</c>

00:08:18.939 --> 00:08:18.949 align:start position:0%
is in use and that an action will need
 

00:08:18.949 --> 00:08:21.100 align:start position:0%
is in use and that an action will need
to<00:08:19.099><c> be</c><00:08:19.189><c> taken</c><00:08:19.610><c> when</c><00:08:19.969><c> updating</c><00:08:20.539><c> to</c><00:08:20.689><c> a</c><00:08:20.719><c> future</c>

00:08:21.100 --> 00:08:21.110 align:start position:0%
to be taken when updating to a future
 

00:08:21.110 --> 00:08:26.609 align:start position:0%
to be taken when updating to a future
release<00:08:22.719><c> so</c><00:08:23.719><c> that's</c><00:08:23.899><c> what</c><00:08:24.049><c> we</c><00:08:24.139><c> did</c><00:08:24.259><c> in</c><00:08:24.319><c> JDK</c><00:08:24.979><c> 9</c>

00:08:26.609 --> 00:08:26.619 align:start position:0%
release so that's what we did in JDK 9
 

00:08:26.619 --> 00:08:29.499 align:start position:0%
release so that's what we did in JDK 9
JDK<00:08:27.619><c> 10</c><00:08:27.860><c> the</c><00:08:28.189><c> implementation</c><00:08:28.909><c> was</c><00:08:29.029><c> completely</c>

00:08:29.499 --> 00:08:29.509 align:start position:0%
JDK 10 the implementation was completely
 

00:08:29.509 --> 00:08:32.350 align:start position:0%
JDK 10 the implementation was completely
overhauled<00:08:29.989><c> to</c><00:08:30.289><c> improve</c><00:08:30.919><c> reliability</c><00:08:31.249><c> and</c><00:08:31.909><c> to</c>

00:08:32.350 --> 00:08:32.360 align:start position:0%
overhauled to improve reliability and to
 

00:08:32.360 --> 00:08:35.439 align:start position:0%
overhauled to improve reliability and to
make<00:08:32.509><c> it</c><00:08:32.629><c> more</c><00:08:32.779><c> robust</c><00:08:33.490><c> the</c><00:08:34.490><c> API</c><00:08:34.819><c> was</c><00:08:35.120><c> also</c>

00:08:35.439 --> 00:08:35.449 align:start position:0%
make it more robust the API was also
 

00:08:35.449 --> 00:08:37.449 align:start position:0%
make it more robust the API was also
updated<00:08:35.959><c> to</c><00:08:36.079><c> incorporate</c><00:08:36.379><c> the</c><00:08:36.740><c> feedback</c><00:08:36.889><c> that</c>

00:08:37.449 --> 00:08:37.459 align:start position:0%
updated to incorporate the feedback that
 

00:08:37.459 --> 00:08:39.429 align:start position:0%
updated to incorporate the feedback that
was<00:08:37.550><c> received</c><00:08:37.849><c> on</c><00:08:38.149><c> the</c><00:08:38.269><c> incubating</c><00:08:38.779><c> JDK</c><00:08:39.229><c> 9</c>

00:08:39.429 --> 00:08:39.439 align:start position:0%
was received on the incubating JDK 9
 

00:08:39.439 --> 00:08:43.990 align:start position:0%
was received on the incubating JDK 9
version<00:08:42.490><c> 4</c><00:08:43.490><c> Java</c>

00:08:43.990 --> 00:08:44.000 align:start position:0%
version 4 Java
 

00:08:44.000 --> 00:08:46.870 align:start position:0%
version 4 Java
a<00:08:44.030><c> new</c><00:08:44.690><c> JDK</c><00:08:45.290><c> enhancement</c><00:08:45.950><c> proposal</c><00:08:46.460><c> was</c><00:08:46.640><c> filed</c>

00:08:46.870 --> 00:08:46.880 align:start position:0%
a new JDK enhancement proposal was filed
 

00:08:46.880 --> 00:08:51.550 align:start position:0%
a new JDK enhancement proposal was filed
jeb<00:08:47.690><c> 321</c><00:08:48.410><c> to</c><00:08:49.250><c> standardize</c><00:08:49.730><c> the</c><00:08:49.910><c> API</c><00:08:50.560><c> this</c>

00:08:51.550 --> 00:08:51.560 align:start position:0%
jeb 321 to standardize the API this
 

00:08:51.560 --> 00:08:53.710 align:start position:0%
jeb 321 to standardize the API this
required<00:08:51.980><c> giving</c><00:08:52.400><c> the</c><00:08:52.520><c> HTTP</c><00:08:53.120><c> client</c><00:08:53.570><c> a</c>

00:08:53.710 --> 00:08:53.720 align:start position:0%
required giving the HTTP client a
 

00:08:53.720 --> 00:08:56.320 align:start position:0%
required giving the HTTP client a
standard<00:08:54.260><c> module</c><00:08:54.620><c> a</c><00:08:54.650><c> package</c><00:08:55.070><c> named</c><00:08:55.280><c> davon</c><00:08:56.030><c> F</c>

00:08:56.320 --> 00:08:56.330 align:start position:0%
standard module a package named davon F
 

00:08:56.330 --> 00:09:00.100 align:start position:0%
standard module a package named davon F
HTTP<00:08:57.340><c> this</c><00:08:58.340><c> standard</c><00:08:58.760><c> package</c><00:08:59.180><c> now</c><00:08:59.660><c> includes</c>

00:09:00.100 --> 00:09:00.110 align:start position:0%
HTTP this standard package now includes
 

00:09:00.110 --> 00:09:02.710 align:start position:0%
HTTP this standard package now includes
the<00:09:00.290><c> complete</c><00:09:00.530><c> API</c><00:09:00.830><c> and</c><00:09:01.400><c> the</c><00:09:02.060><c> incubating</c>

00:09:02.710 --> 00:09:02.720 align:start position:0%
the complete API and the incubating
 

00:09:02.720 --> 00:09:05.740 align:start position:0%
the complete API and the incubating
version<00:09:03.140><c> has</c><00:09:03.320><c> been</c><00:09:03.350><c> completely</c><00:09:03.950><c> removed</c><00:09:04.750><c> any</c>

00:09:05.740 --> 00:09:05.750 align:start position:0%
version has been completely removed any
 

00:09:05.750 --> 00:09:08.560 align:start position:0%
version has been completely removed any
code<00:09:06.140><c> that</c><00:09:06.530><c> runs</c><00:09:06.680><c> on</c><00:09:06.890><c> JD</c><00:09:07.070><c> k</c><00:09:07.310><c> 9r</c><00:09:07.670><c> JDK</c><00:09:08.090><c> 10</c><00:09:08.330><c> and</c>

00:09:08.560 --> 00:09:08.570 align:start position:0%
code that runs on JD k 9r JDK 10 and
 

00:09:08.570 --> 00:09:11.560 align:start position:0%
code that runs on JD k 9r JDK 10 and
uses<00:09:09.530><c> the</c><00:09:09.590><c> incubating</c><00:09:10.250><c> API</c><00:09:10.610><c> will</c><00:09:11.060><c> need</c><00:09:11.300><c> to</c><00:09:11.450><c> be</c>

00:09:11.560 --> 00:09:11.570 align:start position:0%
uses the incubating API will need to be
 

00:09:11.570 --> 00:09:14.500 align:start position:0%
uses the incubating API will need to be
updated<00:09:12.070><c> at</c><00:09:13.070><c> the</c><00:09:13.100><c> very</c><00:09:13.400><c> minimum</c><00:09:13.760><c> the</c><00:09:14.150><c> import</c>

00:09:14.500 --> 00:09:14.510 align:start position:0%
updated at the very minimum the import
 

00:09:14.510 --> 00:09:16.270 align:start position:0%
updated at the very minimum the import
statements<00:09:15.020><c> will</c><00:09:15.140><c> need</c><00:09:15.350><c> to</c><00:09:15.440><c> be</c><00:09:15.530><c> changed</c><00:09:16.010><c> to</c>

00:09:16.270 --> 00:09:16.280 align:start position:0%
statements will need to be changed to
 

00:09:16.280 --> 00:09:19.480 align:start position:0%
statements will need to be changed to
reflect<00:09:16.790><c> a</c><00:09:17.150><c> new</c><00:09:17.300><c> package</c><00:09:17.690><c> name</c><00:09:17.930><c> and</c><00:09:18.220><c> also</c><00:09:19.220><c> any</c>

00:09:19.480 --> 00:09:19.490 align:start position:0%
reflect a new package name and also any
 

00:09:19.490 --> 00:09:21.670 align:start position:0%
reflect a new package name and also any
module<00:09:19.880><c> info</c><00:09:20.180><c> source</c><00:09:20.450><c> files</c><00:09:20.720><c> that</c><00:09:21.530><c> contain</c>

00:09:21.670 --> 00:09:21.680 align:start position:0%
module info source files that contain
 

00:09:21.680 --> 00:09:24.730 align:start position:0%
module info source files that contain
requires<00:09:22.430><c> directives</c><00:09:23.060><c> naming</c><00:09:23.930><c> the</c><00:09:24.020><c> HTTP</c>

00:09:24.730 --> 00:09:24.740 align:start position:0%
requires directives naming the HTTP
 

00:09:24.740 --> 00:09:27.310 align:start position:0%
requires directives naming the HTTP
client<00:09:25.130><c> incubator</c><00:09:25.640><c> module</c><00:09:26.060><c> will</c><00:09:26.810><c> now</c><00:09:27.020><c> need</c><00:09:27.290><c> to</c>

00:09:27.310 --> 00:09:27.320 align:start position:0%
client incubator module will now need to
 

00:09:27.320 --> 00:09:30.090 align:start position:0%
client incubator module will now need to
use<00:09:27.500><c> the</c><00:09:27.830><c> new</c><00:09:27.980><c> standard</c><00:09:28.430><c> module</c><00:09:28.760><c> name</c>

00:09:30.090 --> 00:09:30.100 align:start position:0%
use the new standard module name
 

00:09:30.100 --> 00:09:32.680 align:start position:0%
use the new standard module name
similarly<00:09:31.100><c> any</c><00:09:31.730><c> command</c><00:09:32.090><c> line</c><00:09:32.270><c> options</c>

00:09:32.680 --> 00:09:32.690 align:start position:0%
similarly any command line options
 

00:09:32.690 --> 00:09:35.170 align:start position:0%
similarly any command line options
specifying<00:09:33.350><c> the</c><00:09:33.590><c> incubating</c><00:09:34.190><c> module</c><00:09:34.940><c> name</c>

00:09:35.170 --> 00:09:35.180 align:start position:0%
specifying the incubating module name
 

00:09:35.180 --> 00:09:38.530 align:start position:0%
specifying the incubating module name
will<00:09:35.990><c> need</c><00:09:36.170><c> to</c><00:09:36.290><c> be</c><00:09:36.380><c> updated</c><00:09:36.860><c> or</c><00:09:37.070><c> may</c><00:09:38.000><c> even</c><00:09:38.390><c> not</c>

00:09:38.530 --> 00:09:38.540 align:start position:0%
will need to be updated or may even not
 

00:09:38.540 --> 00:09:41.650 align:start position:0%
will need to be updated or may even not
be<00:09:39.050><c> necessary</c><00:09:39.620><c> since</c><00:09:40.460><c> all</c><00:09:40.730><c> standard</c><00:09:41.240><c> modules</c>

00:09:41.650 --> 00:09:41.660 align:start position:0%
be necessary since all standard modules
 

00:09:41.660 --> 00:09:44.080 align:start position:0%
be necessary since all standard modules
that<00:09:42.080><c> are</c><00:09:42.230><c> part</c><00:09:42.440><c> of</c><00:09:42.530><c> the</c><00:09:42.950><c> Java</c><00:09:43.190><c> SE</c><00:09:43.550><c> platform</c>

00:09:44.080 --> 00:09:44.090 align:start position:0%
that are part of the Java SE platform
 

00:09:44.090 --> 00:09:46.660 align:start position:0%
that are part of the Java SE platform
are<00:09:44.300><c> resolved</c><00:09:44.780><c> by</c><00:09:44.840><c> default</c><00:09:45.290><c> when</c><00:09:46.220><c> running</c><00:09:46.460><c> an</c>

00:09:46.660 --> 00:09:46.670 align:start position:0%
are resolved by default when running an
 

00:09:46.670 --> 00:09:50.829 align:start position:0%
are resolved by default when running an
application<00:09:47.270><c> on</c><00:09:47.420><c> the</c><00:09:47.510><c> class</c><00:09:47.690><c> path</c><00:09:49.570><c> let's</c><00:09:50.570><c> take</c>

00:09:50.829 --> 00:09:50.839 align:start position:0%
application on the class path let's take
 

00:09:50.839 --> 00:09:57.640 align:start position:0%
application on the class path let's take
a<00:09:50.870><c> look</c><00:09:51.080><c> at</c><00:09:51.200><c> how</c><00:09:51.320><c> to</c><00:09:51.380><c> do</c><00:09:51.560><c> that</c><00:09:56.080><c> okay</c><00:09:57.080><c> so</c><00:09:57.380><c> here</c><00:09:57.620><c> we</c>

00:09:57.640 --> 00:09:57.650 align:start position:0%
a look at how to do that okay so here we
 

00:09:57.650 --> 00:10:00.520 align:start position:0%
a look at how to do that okay so here we
have<00:09:57.920><c> a</c><00:09:57.950><c> utility</c><00:09:58.250><c> guest</c><00:09:58.700><c> method</c><00:09:59.110><c> it</c><00:10:00.110><c> retrieves</c>

00:10:00.520 --> 00:10:00.530 align:start position:0%
have a utility guest method it retrieves
 

00:10:00.530 --> 00:10:02.980 align:start position:0%
have a utility guest method it retrieves
given<00:10:00.980><c> your</c><00:10:01.190><c> I</c><00:10:01.220><c> and</c><00:10:01.760><c> returns</c><00:10:02.180><c> response</c><00:10:02.720><c> body</c>

00:10:02.980 --> 00:10:02.990 align:start position:0%
given your I and returns response body
 

00:10:02.990 --> 00:10:07.180 align:start position:0%
given your I and returns response body
as<00:10:03.500><c> a</c><00:10:03.560><c> string</c><00:10:04.660><c> first</c><00:10:05.660><c> it</c><00:10:05.810><c> creates</c><00:10:05.960><c> a</c><00:10:06.260><c> new</c><00:10:06.440><c> HTTP</c>

00:10:07.180 --> 00:10:07.190 align:start position:0%
as a string first it creates a new HTTP
 

00:10:07.190 --> 00:10:08.740 align:start position:0%
as a string first it creates a new HTTP
client<00:10:07.580><c> over</c><00:10:07.850><c> which</c><00:10:08.000><c> the</c><00:10:08.210><c> request</c><00:10:08.420><c> will</c><00:10:08.720><c> be</c>

00:10:08.740 --> 00:10:08.750 align:start position:0%
client over which the request will be
 

00:10:08.750 --> 00:10:13.060 align:start position:0%
client over which the request will be
sent<00:10:09.700><c> then</c><00:10:10.700><c> it</c><00:10:10.790><c> builds</c><00:10:11.000><c> a</c><00:10:11.300><c> new</c><00:10:11.540><c> request</c><00:10:12.070><c> with</c>

00:10:13.060 --> 00:10:13.070 align:start position:0%
sent then it builds a new request with
 

00:10:13.070 --> 00:10:16.390 align:start position:0%
sent then it builds a new request with
the<00:10:13.160><c> given</c><00:10:13.430><c> URI</c><00:10:14.410><c> then</c><00:10:15.410><c> the</c><00:10:15.560><c> send</c><00:10:15.800><c> async</c><00:10:16.339><c> method</c>

00:10:16.390 --> 00:10:16.400 align:start position:0%
the given URI then the send async method
 

00:10:16.400 --> 00:10:19.540 align:start position:0%
the given URI then the send async method
is<00:10:16.850><c> invoked</c><00:10:17.030><c> to</c><00:10:17.690><c> send</c><00:10:17.930><c> a</c><00:10:18.050><c> request</c><00:10:18.260><c> and</c><00:10:19.250><c> a</c><00:10:19.339><c> body</c>

00:10:19.540 --> 00:10:19.550 align:start position:0%
is invoked to send a request and a body
 

00:10:19.550 --> 00:10:22.000 align:start position:0%
is invoked to send a request and a body
handler<00:10:19.970><c> a</c><00:10:20.120><c> string</c><00:10:20.510><c> factory</c><00:10:20.990><c> method</c><00:10:21.290><c> returns</c>

00:10:22.000 --> 00:10:22.010 align:start position:0%
handler a string factory method returns
 

00:10:22.010 --> 00:10:24.880 align:start position:0%
handler a string factory method returns
a<00:10:22.130><c> body</c><00:10:22.310><c> hunger</c><00:10:22.760><c> that</c><00:10:23.300><c> converts</c><00:10:23.720><c> the</c><00:10:24.050><c> response</c>

00:10:24.880 --> 00:10:24.890 align:start position:0%
a body hunger that converts the response
 

00:10:24.890 --> 00:10:28.000 align:start position:0%
a body hunger that converts the response
body<00:10:25.070><c> bytes</c><00:10:25.430><c> to</c><00:10:25.850><c> a</c><00:10:25.880><c> string</c><00:10:26.410><c> the</c><00:10:27.410><c> send</c><00:10:27.620><c> async</c>

00:10:28.000 --> 00:10:28.010 align:start position:0%
body bytes to a string the send async
 

00:10:28.010 --> 00:10:31.950 align:start position:0%
body bytes to a string the send async
method<00:10:28.100><c> returns</c><00:10:28.850><c> a</c><00:10:29.060><c> HTTP</c><00:10:29.960><c> response</c><00:10:30.440><c> of</c><00:10:30.680><c> string</c>

00:10:31.950 --> 00:10:31.960 align:start position:0%
method returns a HTTP response of string
 

00:10:31.960 --> 00:10:34.990 align:start position:0%
method returns a HTTP response of string
that<00:10:32.960><c> can</c><00:10:33.140><c> be</c><00:10:33.260><c> done</c><00:10:33.440><c> chained</c><00:10:34.310><c> up</c><00:10:34.520><c> with</c><00:10:34.820><c> the</c>

00:10:34.990 --> 00:10:35.000 align:start position:0%
that can be done chained up with the
 

00:10:35.000 --> 00:10:37.000 align:start position:0%
that can be done chained up with the
then<00:10:35.420><c> apply</c><00:10:35.750><c> method</c><00:10:36.170><c> from</c><00:10:36.260><c> completable</c>

00:10:37.000 --> 00:10:37.010 align:start position:0%
then apply method from completable
 

00:10:37.010 --> 00:10:40.900 align:start position:0%
then apply method from completable
future<00:10:37.430><c> to</c><00:10:38.270><c> map</c><00:10:38.540><c> the</c><00:10:39.380><c> HTTP</c><00:10:40.280><c> response</c><00:10:40.550><c> of</c>

00:10:40.900 --> 00:10:40.910 align:start position:0%
future to map the HTTP response of
 

00:10:40.910 --> 00:10:43.150 align:start position:0%
future to map the HTTP response of
string<00:10:41.210><c> to</c><00:10:41.510><c> its</c><00:10:41.660><c> body</c><00:10:41.839><c> type</c><00:10:42.200><c> which</c><00:10:42.740><c> is</c><00:10:42.890><c> string</c>

00:10:43.150 --> 00:10:43.160 align:start position:0%
string to its body type which is string
 

00:10:43.160 --> 00:10:45.610 align:start position:0%
string to its body type which is string
in<00:10:43.280><c> our</c><00:10:43.400><c> case</c><00:10:43.610><c> and</c><00:10:43.910><c> a</c><00:10:44.630><c> completable</c><00:10:45.050><c> future</c><00:10:45.440><c> of</c>

00:10:45.610 --> 00:10:45.620 align:start position:0%
in our case and a completable future of
 

00:10:45.620 --> 00:10:50.230 align:start position:0%
in our case and a completable future of
string<00:10:46.010><c> is</c><00:10:46.190><c> returned</c><00:10:48.640><c> the</c><00:10:49.640><c> main</c><00:10:49.850><c> method</c>

00:10:50.230 --> 00:10:50.240 align:start position:0%
string is returned the main method
 

00:10:50.240 --> 00:10:52.780 align:start position:0%
string is returned the main method
simply<00:10:50.630><c> calls</c><00:10:51.020><c> get</c><00:10:51.350><c> with</c><00:10:51.800><c> the</c><00:10:51.890><c> given</c><00:10:52.160><c> URI</c><00:10:52.400><c> and</c>

00:10:52.780 --> 00:10:52.790 align:start position:0%
simply calls get with the given URI and
 

00:10:52.790 --> 00:10:55.480 align:start position:0%
simply calls get with the given URI and
then<00:10:53.570><c> join</c><00:10:53.870><c> to</c><00:10:54.230><c> block</c><00:10:54.470><c> until</c><00:10:54.980><c> the</c><00:10:55.070><c> completed</c>

00:10:55.480 --> 00:10:55.490 align:start position:0%
then join to block until the completed
 

00:10:55.490 --> 00:10:57.210 align:start position:0%
then join to block until the completed
the<00:10:55.580><c> future</c><00:10:55.910><c> completes</c>

00:10:57.210 --> 00:10:57.220 align:start position:0%
the future completes
 

00:10:57.220 --> 00:11:03.100 align:start position:0%
the future completes
then<00:10:58.220><c> response</c><00:10:58.670><c> body</c><00:10:58.880><c> is</c><00:10:59.089><c> printed</c><00:10:59.420><c> out</c><00:11:02.110><c> this</c>

00:11:03.100 --> 00:11:03.110 align:start position:0%
then response body is printed out this
 

00:11:03.110 --> 00:11:05.199 align:start position:0%
then response body is printed out this
is<00:11:03.320><c> using</c><00:11:03.529><c> the</c><00:11:03.980><c> incubating</c><00:11:04.700><c> version</c><00:11:05.029><c> of</c><00:11:05.120><c> the</c>

00:11:05.199 --> 00:11:05.209 align:start position:0%
is using the incubating version of the
 

00:11:05.209 --> 00:11:12.910 align:start position:0%
is using the incubating version of the
API<00:11:05.540><c> from</c><00:11:06.230><c> JDK</c><00:11:06.680><c> 9</c><00:11:08.740><c> so</c><00:11:09.740><c> let's</c><00:11:09.920><c> run</c><00:11:10.070><c> that</c><00:11:11.740><c> we</c><00:11:12.740><c> can</c>

00:11:12.910 --> 00:11:12.920 align:start position:0%
API from JDK 9 so let's run that we can
 

00:11:12.920 --> 00:11:15.460 align:start position:0%
API from JDK 9 so let's run that we can
see<00:11:13.130><c> the</c><00:11:13.339><c> warning</c><00:11:13.910><c> that</c><00:11:14.899><c> an</c><00:11:15.019><c> incubating</c>

00:11:15.460 --> 00:11:15.470 align:start position:0%
see the warning that an incubating
 

00:11:15.470 --> 00:11:17.290 align:start position:0%
see the warning that an incubating
module<00:11:15.800><c> has</c><00:11:15.890><c> been</c><00:11:15.920><c> used</c><00:11:16.310><c> and</c><00:11:16.730><c> the</c><00:11:16.910><c> name</c><00:11:17.089><c> of</c><00:11:17.180><c> the</c>

00:11:17.290 --> 00:11:17.300 align:start position:0%
module has been used and the name of the
 

00:11:17.300 --> 00:11:19.660 align:start position:0%
module has been used and the name of the
module<00:11:17.420><c> and</c><00:11:18.070><c> then</c><00:11:19.070><c> the</c><00:11:19.190><c> program</c><00:11:19.550><c> executes</c>

00:11:19.660 --> 00:11:19.670 align:start position:0%
module and then the program executes
 

00:11:19.670 --> 00:11:21.940 align:start position:0%
module and then the program executes
some<00:11:20.300><c> princess</c><00:11:20.750><c> response</c><00:11:21.170><c> body</c><00:11:21.410><c> is</c><00:11:21.560><c> a</c><00:11:21.589><c> string</c>

00:11:21.940 --> 00:11:21.950 align:start position:0%
some princess response body is a string
 

00:11:21.950 --> 00:11:28.000 align:start position:0%
some princess response body is a string
which<00:11:22.940><c> is</c><00:11:23.060><c> just</c><00:11:23.269><c> some</c><00:11:23.420><c> XML</c><00:11:26.500><c> there's</c><00:11:27.500><c> also</c><00:11:27.800><c> a</c>

00:11:28.000 --> 00:11:28.010 align:start position:0%
which is just some XML there's also a
 

00:11:28.010 --> 00:11:30.389 align:start position:0%
which is just some XML there's also a
modular<00:11:28.730><c> version</c><00:11:29.089><c> of</c><00:11:29.300><c> the</c><00:11:29.510><c> same</c><00:11:29.690><c> code</c>

00:11:30.389 --> 00:11:30.399 align:start position:0%
modular version of the same code
 

00:11:30.399 --> 00:11:33.370 align:start position:0%
modular version of the same code
it's<00:11:31.399><c> module</c><00:11:31.790><c> info</c><00:11:32.120><c> requires</c><00:11:32.540><c> the</c><00:11:32.899><c> JDK</c>

00:11:33.370 --> 00:11:33.380 align:start position:0%
it's module info requires the JDK
 

00:11:33.380 --> 00:11:36.699 align:start position:0%
it's module info requires the JDK
incubator<00:11:33.890><c> HTTP</c><00:11:34.640><c> client</c><00:11:35.029><c> module</c><00:11:35.209><c> and</c><00:11:35.709><c> exports</c>

00:11:36.699 --> 00:11:36.709 align:start position:0%
incubator HTTP client module and exports
 

00:11:36.709 --> 00:11:39.100 align:start position:0%
incubator HTTP client module and exports
a<00:11:36.740><c> single</c><00:11:37.040><c> package</c><00:11:37.339><c> P</c><00:11:37.579><c> that</c><00:11:38.510><c> contains</c><00:11:38.839><c> the</c>

00:11:39.100 --> 00:11:39.110 align:start position:0%
a single package P that contains the
 

00:11:39.110 --> 00:11:45.370 align:start position:0%
a single package P that contains the
code<00:11:42.610><c> the</c><00:11:43.610><c> code</c><00:11:43.640><c> is</c><00:11:44.029><c> almost</c><00:11:44.600><c> identical</c><00:11:45.230><c> the</c>

00:11:45.370 --> 00:11:45.380 align:start position:0%
code the code is almost identical the
 

00:11:45.380 --> 00:11:48.579 align:start position:0%
code the code is almost identical the
previous<00:11:46.370><c> code</c><00:11:46.579><c> only</c><00:11:46.850><c> prints</c><00:11:47.120><c> ed</c><00:11:47.589><c> modular</c>

00:11:48.579 --> 00:11:48.589 align:start position:0%
previous code only prints ed modular
 

00:11:48.589 --> 00:11:49.960 align:start position:0%
previous code only prints ed modular
tests<00:11:48.860><c> so</c><00:11:49.160><c> we</c><00:11:49.190><c> know</c><00:11:49.459><c> that</c><00:11:49.490><c> this</c><00:11:49.760><c> code</c><00:11:49.940><c> is</c>

00:11:49.960 --> 00:11:49.970 align:start position:0%
tests so we know that this code is
 

00:11:49.970 --> 00:11:52.800 align:start position:0%
tests so we know that this code is
actually<00:11:50.300><c> executing</c><00:11:51.040><c> so</c><00:11:52.040><c> let's</c><00:11:52.220><c> run</c><00:11:52.430><c> the</c>

00:11:52.800 --> 00:11:52.810 align:start position:0%
actually executing so let's run the
 

00:11:52.810 --> 00:11:58.420 align:start position:0%
actually executing so let's run the
configuration<00:11:56.320><c> again</c><00:11:57.320><c> with</c><00:11:57.470><c> a</c><00:11:57.500><c> warning</c><00:11:57.800><c> from</c>

00:11:58.420 --> 00:11:58.430 align:start position:0%
configuration again with a warning from
 

00:11:58.430 --> 00:12:01.090 align:start position:0%
configuration again with a warning from
the<00:11:58.519><c> compiler</c><00:11:58.880><c> and</c><00:11:59.380><c> from</c><00:12:00.380><c> the</c><00:12:00.529><c> runtime</c><00:12:00.890><c> that</c>

00:12:01.090 --> 00:12:01.100 align:start position:0%
the compiler and from the runtime that
 

00:12:01.100 --> 00:12:04.540 align:start position:0%
the compiler and from the runtime that
incubating<00:12:01.940><c> HTTP</c><00:12:02.660><c> client</c><00:12:03.050><c> has</c><00:12:03.380><c> been</c><00:12:03.560><c> used</c><00:12:03.829><c> and</c>

00:12:04.540 --> 00:12:04.550 align:start position:0%
incubating HTTP client has been used and
 

00:12:04.550 --> 00:12:08.530 align:start position:0%
incubating HTTP client has been used and
again<00:12:04.760><c> a</c><00:12:04.940><c> response</c><00:12:05.329><c> body</c><00:12:05.540><c> is</c><00:12:05.779><c> printed</c><00:12:06.110><c> out</c><00:12:07.540><c> so</c>

00:12:08.530 --> 00:12:08.540 align:start position:0%
again a response body is printed out so
 

00:12:08.540 --> 00:12:12.130 align:start position:0%
again a response body is printed out so
let's<00:12:08.690><c> update</c><00:12:08.870><c> this</c><00:12:09.170><c> code</c><00:12:09.500><c> for</c><00:12:10.040><c> jdk</c><00:12:10.459><c> 11</c><00:12:11.140><c> first</c>

00:12:12.130 --> 00:12:12.140 align:start position:0%
let's update this code for jdk 11 first
 

00:12:12.140 --> 00:12:13.960 align:start position:0%
let's update this code for jdk 11 first
thing<00:12:12.290><c> we</c><00:12:12.410><c> do</c><00:12:12.589><c> so</c><00:12:12.949><c> we</c><00:12:13.010><c> can</c><00:12:13.130><c> update</c><00:12:13.279><c> the</c><00:12:13.610><c> STK</c>

00:12:13.960 --> 00:12:13.970 align:start position:0%
thing we do so we can update the STK
 

00:12:13.970 --> 00:12:18.040 align:start position:0%
thing we do so we can update the STK
being<00:12:14.870><c> used</c><00:12:15.140><c> by</c><00:12:15.620><c> the</c><00:12:15.680><c> IDE</c><00:12:16.040><c> and</c><00:12:16.810><c> now</c><00:12:17.810><c> we</c><00:12:17.870><c> have</c><00:12:18.019><c> a</c>

00:12:18.040 --> 00:12:18.050 align:start position:0%
being used by the IDE and now we have a
 

00:12:18.050 --> 00:12:20.199 align:start position:0%
being used by the IDE and now we have a
lot<00:12:18.199><c> of</c><00:12:18.230><c> errors</c><00:12:18.649><c> because</c><00:12:19.100><c> the</c><00:12:19.370><c> incubating</c><00:12:19.910><c> API</c>

00:12:20.199 --> 00:12:20.209 align:start position:0%
lot of errors because the incubating API
 

00:12:20.209 --> 00:12:24.069 align:start position:0%
lot of errors because the incubating API
is<00:12:20.600><c> no</c><00:12:21.320><c> longer</c><00:12:21.560><c> present</c><00:12:21.980><c> in</c><00:12:22.160><c> JDK</c><00:12:22.640><c> 11</c><00:12:22.970><c> so</c><00:12:23.870><c> let's</c>

00:12:24.069 --> 00:12:24.079 align:start position:0%
is no longer present in JDK 11 so let's
 

00:12:24.079 --> 00:12:26.500 align:start position:0%
is no longer present in JDK 11 so let's
update<00:12:24.290><c> the</c><00:12:24.800><c> import</c><00:12:25.100><c> statements</c><00:12:25.640><c> to</c><00:12:25.940><c> reflect</c>

00:12:26.500 --> 00:12:26.510 align:start position:0%
update the import statements to reflect
 

00:12:26.510 --> 00:12:30.009 align:start position:0%
update the import statements to reflect
the<00:12:27.079><c> new</c><00:12:27.320><c> standard</c><00:12:27.980><c> package</c><00:12:28.310><c> name</c><00:12:28.870><c> which</c><00:12:29.870><c> is</c>

00:12:30.009 --> 00:12:30.019 align:start position:0%
the new standard package name which is
 

00:12:30.019 --> 00:12:38.110 align:start position:0%
the new standard package name which is
Java<00:12:30.290><c> net</c><00:12:34.990><c> HTTP</c><00:12:36.430><c> we</c><00:12:37.430><c> can</c><00:12:37.579><c> still</c><00:12:37.820><c> see</c><00:12:38.000><c> that</c>

00:12:38.110 --> 00:12:38.120 align:start position:0%
Java net HTTP we can still see that
 

00:12:38.120 --> 00:12:39.960 align:start position:0%
Java net HTTP we can still see that
there's<00:12:38.329><c> red</c><00:12:38.480><c> lines</c><00:12:38.750><c> and</c><00:12:39.079><c> this</c><00:12:39.199><c> is</c><00:12:39.350><c> because</c>

00:12:39.960 --> 00:12:39.970 align:start position:0%
there's red lines and this is because
 

00:12:39.970 --> 00:12:42.699 align:start position:0%
there's red lines and this is because
the<00:12:40.970><c> require</c><00:12:41.300><c> statement</c><00:12:41.630><c> is</c><00:12:41.959><c> not</c><00:12:42.110><c> right</c><00:12:42.350><c> so</c>

00:12:42.699 --> 00:12:42.709 align:start position:0%
the require statement is not right so
 

00:12:42.709 --> 00:12:48.540 align:start position:0%
the require statement is not right so
let's<00:12:42.920><c> update</c><00:12:43.160><c> the</c><00:12:43.430><c> module</c><00:12:43.730><c> name</c><00:12:43.880><c> there</c><00:12:44.120><c> first</c>

00:12:48.540 --> 00:12:48.550 align:start position:0%
 
 

00:12:48.550 --> 00:12:52.180 align:start position:0%
 
okay<00:12:49.550><c> our</c><00:12:49.670><c> import</c><00:12:50.000><c> statements</c><00:12:50.949><c> seem</c><00:12:51.949><c> to</c><00:12:52.100><c> be</c>

00:12:52.180 --> 00:12:52.190 align:start position:0%
okay our import statements seem to be
 

00:12:52.190 --> 00:12:58.319 align:start position:0%
okay our import statements seem to be
accepted<00:12:52.670><c> now</c>

00:12:58.319 --> 00:12:58.329 align:start position:0%
 
 

00:12:58.329 --> 00:13:03.519 align:start position:0%
 
oops<00:13:01.449><c> the</c><00:13:02.449><c> factory</c><00:13:02.899><c> methods</c><00:13:03.229><c> have</c><00:13:03.379><c> been</c>

00:13:03.519 --> 00:13:03.529 align:start position:0%
oops the factory methods have been
 

00:13:03.529 --> 00:13:09.189 align:start position:0%
oops the factory methods have been
renamed<00:13:03.979><c> in</c><00:13:04.519><c> JDK</c><00:13:04.970><c> 11</c><00:13:07.269><c> they</c><00:13:08.269><c> are</c><00:13:08.419><c> all</c><00:13:08.569><c> prefixed</c>

00:13:09.189 --> 00:13:09.199 align:start position:0%
renamed in JDK 11 they are all prefixed
 

00:13:09.199 --> 00:13:09.789 align:start position:0%
renamed in JDK 11 they are all prefixed
oops

00:13:09.789 --> 00:13:09.799 align:start position:0%
oops
 

00:13:09.799 --> 00:13:13.989 align:start position:0%
oops
with<00:13:10.009><c> love</c><00:13:10.929><c> and</c><00:13:12.309><c> they've</c><00:13:13.309><c> moved</c><00:13:13.519><c> to</c><00:13:13.759><c> the</c><00:13:13.849><c> body</c>

00:13:13.989 --> 00:13:13.999 align:start position:0%
with love and they've moved to the body
 

00:13:13.999 --> 00:13:18.069 align:start position:0%
with love and they've moved to the body
handlers<00:13:14.449><c> class</c><00:13:16.089><c> so</c><00:13:17.089><c> body</c><00:13:17.359><c> handlers</c><00:13:17.779><c> have</c>

00:13:18.069 --> 00:13:18.079 align:start position:0%
handlers class so body handlers have
 

00:13:18.079 --> 00:13:22.210 align:start position:0%
handlers class so body handlers have
string<00:13:20.169><c> so</c><00:13:21.169><c> let's</c><00:13:21.349><c> run</c><00:13:21.529><c> that</c><00:13:21.739><c> now</c><00:13:21.949><c> and</c><00:13:22.129><c> see</c>

00:13:22.210 --> 00:13:22.220 align:start position:0%
string so let's run that now and see
 

00:13:22.220 --> 00:13:29.769 align:start position:0%
string so let's run that now and see
what<00:13:22.339><c> happens</c><00:13:27.729><c> okay</c><00:13:28.729><c> we've</c><00:13:29.029><c> got</c><00:13:29.179><c> an</c><00:13:29.329><c> error</c><00:13:29.599><c> a</c>

00:13:29.769 --> 00:13:29.779 align:start position:0%
what happens okay we've got an error a
 

00:13:29.779 --> 00:13:32.319 align:start position:0%
what happens okay we've got an error a
compile<00:13:30.139><c> time</c><00:13:30.169><c> because</c><00:13:31.069><c> the</c><00:13:31.339><c> JDK</c><00:13:31.849><c> Incubator</c>

00:13:32.319 --> 00:13:32.329 align:start position:0%
compile time because the JDK Incubator
 

00:13:32.329 --> 00:13:36.609 align:start position:0%
compile time because the JDK Incubator
HTTP<00:13:33.139><c> client</c><00:13:33.529><c> module</c><00:13:34.369><c> is</c><00:13:34.549><c> not</c><00:13:34.759><c> found</c><00:13:35.229><c> my</c><00:13:36.229><c> IDE</c>

00:13:36.609 --> 00:13:36.619 align:start position:0%
HTTP client module is not found my IDE
 

00:13:36.619 --> 00:13:38.460 align:start position:0%
HTTP client module is not found my IDE
is<00:13:36.829><c> being</c><00:13:37.039><c> configured</c><00:13:37.459><c> in</c><00:13:37.579><c> its</c><00:13:37.729><c> preferences</c>

00:13:38.460 --> 00:13:38.470 align:start position:0%
is being configured in its preferences
 

00:13:38.470 --> 00:13:42.819 align:start position:0%
is being configured in its preferences
you<00:13:39.470><c> add</c><00:13:39.970><c> Incubator</c><00:13:40.970><c> module</c><00:13:41.529><c> it's</c><00:13:42.529><c> a</c><00:13:42.559><c> command</c>

00:13:42.819 --> 00:13:42.829 align:start position:0%
you add Incubator module it's a command
 

00:13:42.829 --> 00:13:44.649 align:start position:0%
you add Incubator module it's a command
line<00:13:42.979><c> option</c><00:13:43.339><c> so</c><00:13:43.609><c> let's</c><00:13:43.789><c> remove</c><00:13:43.970><c> that</c><00:13:44.209><c> you</c><00:13:44.449><c> no</c>

00:13:44.649 --> 00:13:44.659 align:start position:0%
line option so let's remove that you no
 

00:13:44.659 --> 00:13:47.859 align:start position:0%
line option so let's remove that you no
longer<00:13:44.689><c> need</c><00:13:44.989><c> that</c><00:13:45.579><c> and</c><00:13:46.579><c> run</c><00:13:47.419><c> the</c><00:13:47.539><c> modular</c>

00:13:47.859 --> 00:13:47.869 align:start position:0%
longer need that and run the modular
 

00:13:47.869 --> 00:13:56.430 align:start position:0%
longer need that and run the modular
application<00:13:48.019><c> again</c>

00:13:56.430 --> 00:13:56.440 align:start position:0%
 
 

00:13:56.440 --> 00:14:02.009 align:start position:0%
 
okay<00:13:57.040><c> great</c><00:13:57.250><c> it</c><00:13:57.430><c> works</c><00:14:00.360><c> this</c><00:14:01.360><c> application</c>

00:14:02.009 --> 00:14:02.019 align:start position:0%
okay great it works this application
 

00:14:02.019 --> 00:14:04.769 align:start position:0%
okay great it works this application
only<00:14:02.230><c> uses</c><00:14:02.649><c> the</c><00:14:02.680><c> HTTP</c><00:14:03.490><c> module</c><00:14:03.639><c> so</c><00:14:04.540><c> it</c><00:14:04.660><c> only</c>

00:14:04.769 --> 00:14:04.779 align:start position:0%
only uses the HTTP module so it only
 

00:14:04.779 --> 00:14:07.590 align:start position:0%
only uses the HTTP module so it only
needs<00:14:05.019><c> to</c><00:14:05.139><c> require</c><00:14:05.440><c> Java</c><00:14:05.769><c> net</c><00:14:06.009><c> HTTP</c><00:14:06.699><c> it</c><00:14:07.389><c> could</c>

00:14:07.590 --> 00:14:07.600 align:start position:0%
needs to require Java net HTTP it could
 

00:14:07.600 --> 00:14:10.889 align:start position:0%
needs to require Java net HTTP it could
of<00:14:07.720><c> course</c><00:14:07.899><c> have</c><00:14:08.800><c> required</c><00:14:09.220><c> Java</c><00:14:09.579><c> SE</c><00:14:09.970><c> which</c>

00:14:10.889 --> 00:14:10.899 align:start position:0%
of course have required Java SE which
 

00:14:10.899 --> 00:14:18.749 align:start position:0%
of course have required Java SE which
gives<00:14:11.170><c> you</c><00:14:11.350><c> the</c><00:14:11.620><c> full</c><00:14:11.860><c> job</c><00:14:12.279><c> SC</c><00:14:12.670><c> platform</c><00:14:17.759><c> and</c>

00:14:18.749 --> 00:14:18.759 align:start position:0%
gives you the full job SC platform and
 

00:14:18.759 --> 00:14:20.340 align:start position:0%
gives you the full job SC platform and
again<00:14:18.970><c> that</c><00:14:19.149><c> runs</c><00:14:19.389><c> and</c><00:14:19.629><c> prints</c><00:14:19.839><c> out</c><00:14:19.930><c> response</c>

00:14:20.340 --> 00:14:20.350 align:start position:0%
again that runs and prints out response
 

00:14:20.350 --> 00:14:23.429 align:start position:0%
again that runs and prints out response
body<00:14:21.089><c> so</c><00:14:22.089><c> let's</c><00:14:22.120><c> update</c><00:14:22.569><c> the</c><00:14:22.990><c> non-modular</c>

00:14:23.429 --> 00:14:23.439 align:start position:0%
body so let's update the non-modular
 

00:14:23.439 --> 00:14:47.910 align:start position:0%
body so let's update the non-modular
application<00:14:24.220><c> as</c><00:14:24.310><c> well</c><00:14:25.110><c> in</c><00:14:26.110><c> the</c><00:14:26.230><c> same</c><00:14:26.500><c> way</c>

00:14:47.910 --> 00:14:47.920 align:start position:0%
 
 

00:14:47.920 --> 00:14:51.689 align:start position:0%
 
again<00:14:49.619><c> the</c><00:14:50.619><c> factory</c><00:14:50.980><c> methods</c><00:14:51.309><c> have</c><00:14:51.519><c> been</c>

00:14:51.689 --> 00:14:51.699 align:start position:0%
again the factory methods have been
 

00:14:51.699 --> 00:14:54.780 align:start position:0%
again the factory methods have been
moved<00:14:51.910><c> and</c><00:14:52.119><c> renamed</c><00:14:53.369><c> so</c><00:14:54.369><c> I</c><00:14:54.399><c> just</c><00:14:54.549><c> ruined</c><00:14:54.759><c> a</c>

00:14:54.780 --> 00:14:54.790 align:start position:0%
moved and renamed so I just ruined a
 

00:14:54.790 --> 00:14:56.669 align:start position:0%
moved and renamed so I just ruined a
configuration<00:14:55.239><c> for</c><00:14:55.989><c> the</c><00:14:56.109><c> non</c><00:14:56.259><c> modular</c>

00:14:56.669 --> 00:14:56.679 align:start position:0%
configuration for the non modular
 

00:14:56.679 --> 00:14:58.919 align:start position:0%
configuration for the non modular
application<00:14:57.299><c> there's</c><00:14:58.299><c> an</c><00:14:58.420><c> application</c>

00:14:58.919 --> 00:14:58.929 align:start position:0%
application there's an application
 

00:14:58.929 --> 00:15:03.090 align:start position:0%
application there's an application
running<00:14:59.319><c> on</c><00:14:59.470><c> the</c><00:14:59.559><c> class</c><00:14:59.739><c> pad</c><00:15:01.410><c> and</c><00:15:02.410><c> it</c><00:15:02.619><c> again</c>

00:15:03.090 --> 00:15:03.100 align:start position:0%
running on the class pad and it again
 

00:15:03.100 --> 00:15:05.069 align:start position:0%
running on the class pad and it again
mentions<00:15:03.759><c> the</c><00:15:03.999><c> fact</c><00:15:04.149><c> that</c><00:15:04.569><c> the</c><00:15:04.749><c> incubator</c>

00:15:05.069 --> 00:15:05.079 align:start position:0%
mentions the fact that the incubator
 

00:15:05.079 --> 00:15:07.710 align:start position:0%
mentions the fact that the incubator
module<00:15:05.470><c> is</c><00:15:05.529><c> not</c><00:15:05.679><c> found</c><00:15:06.239><c> so</c><00:15:07.239><c> we</c><00:15:07.269><c> need</c><00:15:07.480><c> to</c><00:15:07.569><c> edit</c>

00:15:07.710 --> 00:15:07.720 align:start position:0%
module is not found so we need to edit
 

00:15:07.720 --> 00:15:10.349 align:start position:0%
module is not found so we need to edit
the<00:15:07.959><c> configuration</c><00:15:08.489><c> not</c><00:15:09.489><c> this</c><00:15:09.699><c> oops</c>

00:15:10.349 --> 00:15:10.359 align:start position:0%
the configuration not this oops
 

00:15:10.359 --> 00:15:14.249 align:start position:0%
the configuration not this oops
edit<00:15:11.139><c> the</c><00:15:11.169><c> configuration</c><00:15:12.629><c> and</c><00:15:13.629><c> remove</c><00:15:13.989><c> the</c>

00:15:14.249 --> 00:15:14.259 align:start position:0%
edit the configuration and remove the
 

00:15:14.259 --> 00:15:17.009 align:start position:0%
edit the configuration and remove the
explicit<00:15:14.589><c> add</c><00:15:14.919><c> modules</c><00:15:15.399><c> that</c><00:15:16.269><c> was</c><00:15:16.419><c> used</c><00:15:16.809><c> as</c><00:15:16.989><c> a</c>

00:15:17.009 --> 00:15:17.019 align:start position:0%
explicit add modules that was used as a
 

00:15:17.019 --> 00:15:19.999 align:start position:0%
explicit add modules that was used as a
runtime<00:15:17.379><c> argument</c><00:15:17.889><c> when</c><00:15:18.399><c> were</c><00:15:18.549><c> using</c><00:15:18.879><c> JDK</c><00:15:19.389><c> 9</c>

00:15:19.999 --> 00:15:20.009 align:start position:0%
runtime argument when were using JDK 9
 

00:15:20.009 --> 00:15:27.239 align:start position:0%
runtime argument when were using JDK 9
so<00:15:21.009><c> that's</c><00:15:21.189><c> let's</c><00:15:21.910><c> run</c><00:15:22.119><c> that</c><00:15:22.239><c> again</c><00:15:26.129><c> and</c><00:15:27.129><c> it</c>

00:15:27.239 --> 00:15:27.249 align:start position:0%
so that's let's run that again and it
 

00:15:27.249 --> 00:15:27.689 align:start position:0%
so that's let's run that again and it
works

00:15:27.689 --> 00:15:27.699 align:start position:0%
works
 

00:15:27.699 --> 00:15:30.720 align:start position:0%
works
princess<00:15:28.059><c> responds</c><00:15:28.449><c> body</c><00:15:29.129><c> so</c><00:15:30.129><c> we've</c><00:15:30.279><c> seen</c><00:15:30.489><c> how</c>

00:15:30.720 --> 00:15:30.730 align:start position:0%
princess responds body so we've seen how
 

00:15:30.730 --> 00:15:32.759 align:start position:0%
princess responds body so we've seen how
to<00:15:30.790><c> update</c><00:15:30.999><c> a</c><00:15:31.419><c> modular</c><00:15:31.929><c> and</c><00:15:32.109><c> non</c><00:15:32.439><c> module</c>

00:15:32.759 --> 00:15:32.769 align:start position:0%
to update a modular and non module
 

00:15:32.769 --> 00:15:34.859 align:start position:0%
to update a modular and non module
application<00:15:33.369><c> to</c><00:15:34.179><c> update</c><00:15:34.449><c> the</c><00:15:34.569><c> import</c>

00:15:34.859 --> 00:15:34.869 align:start position:0%
application to update the import
 

00:15:34.869 --> 00:15:37.470 align:start position:0%
application to update the import
statements<00:15:35.379><c> to</c><00:15:35.589><c> reflect</c><00:15:35.949><c> the</c><00:15:36.309><c> new</c><00:15:36.519><c> package</c>

00:15:37.470 --> 00:15:37.480 align:start position:0%
statements to reflect the new package
 

00:15:37.480 --> 00:15:39.929 align:start position:0%
statements to reflect the new package
name<00:15:37.689><c> in</c><00:15:37.959><c> jdk</c><00:15:38.379><c> 11</c><00:15:38.709><c> as</c><00:15:38.859><c> well</c><00:15:39.279><c> as</c><00:15:39.579><c> the</c><00:15:39.669><c> new</c><00:15:39.759><c> module</c>

00:15:39.929 --> 00:15:39.939 align:start position:0%
name in jdk 11 as well as the new module
 

00:15:39.939 --> 00:15:43.079 align:start position:0%
name in jdk 11 as well as the new module
name<00:15:40.299><c> in</c><00:15:40.660><c> the</c><00:15:40.809><c> module</c><00:15:41.079><c> info</c><00:15:41.639><c> as</c><00:15:42.639><c> well</c><00:15:42.879><c> as</c><00:15:42.970><c> some</c>

00:15:43.079 --> 00:15:43.089 align:start position:0%
name in the module info as well as some
 

00:15:43.089 --> 00:15:45.599 align:start position:0%
name in the module info as well as some
other<00:15:43.629><c> minor</c><00:15:43.899><c> changes</c><00:15:44.379><c> around</c><00:15:44.949><c> the</c><00:15:45.249><c> renaming</c>

00:15:45.599 --> 00:15:45.609 align:start position:0%
other minor changes around the renaming
 

00:15:45.609 --> 00:15:47.609 align:start position:0%
other minor changes around the renaming
and<00:15:45.910><c> moving</c><00:15:46.689><c> of</c><00:15:46.899><c> some</c><00:15:47.109><c> of</c><00:15:47.199><c> the</c><00:15:47.290><c> factory</c>

00:15:47.609 --> 00:15:47.619 align:start position:0%
and moving of some of the factory
 

00:15:47.619 --> 00:15:51.989 align:start position:0%
and moving of some of the factory
methods<00:15:49.949><c> there</c><00:15:50.949><c> are</c><00:15:50.980><c> a</c><00:15:51.129><c> number</c><00:15:51.399><c> of</c><00:15:51.549><c> benefits</c>

00:15:51.989 --> 00:15:51.999 align:start position:0%
methods there are a number of benefits
 

00:15:51.999 --> 00:15:54.179 align:start position:0%
methods there are a number of benefits
that<00:15:52.119><c> application</c><00:15:52.989><c> developers</c><00:15:53.470><c> can</c><00:15:53.679><c> get</c><00:15:53.919><c> from</c>

00:15:54.179 --> 00:15:54.189 align:start position:0%
that application developers can get from
 

00:15:54.189 --> 00:15:56.909 align:start position:0%
that application developers can get from
using<00:15:54.369><c> the</c><00:15:54.610><c> new</c><00:15:54.759><c> HTTP</c><00:15:55.509><c> client</c><00:15:55.929><c> and</c><00:15:56.139><c> we'll</c><00:15:56.649><c> take</c>

00:15:56.909 --> 00:15:56.919 align:start position:0%
using the new HTTP client and we'll take
 

00:15:56.919 --> 00:15:58.350 align:start position:0%
using the new HTTP client and we'll take
a<00:15:56.949><c> look</c><00:15:57.220><c> at</c><00:15:57.339><c> the</c><00:15:57.399><c> most</c><00:15:57.549><c> significant</c><00:15:58.119><c> of</c><00:15:58.209><c> these</c>

00:15:58.350 --> 00:15:58.360 align:start position:0%
a look at the most significant of these
 

00:15:58.360 --> 00:16:02.189 align:start position:0%
a look at the most significant of these
over<00:15:58.839><c> the</c><00:15:58.929><c> next</c><00:15:59.110><c> number</c><00:15:59.529><c> of</c><00:15:59.679><c> slides</c><00:16:00.069><c> here</c><00:16:01.199><c> are</c>

00:16:02.189 --> 00:16:02.199 align:start position:0%
over the next number of slides here are
 

00:16:02.199 --> 00:16:03.900 align:start position:0%
over the next number of slides here are
some<00:16:02.799><c> of</c><00:16:02.889><c> the</c><00:16:03.009><c> goals</c><00:16:03.220><c> that</c><00:16:03.369><c> are</c><00:16:03.489><c> listed</c><00:16:03.730><c> in</c>

00:16:03.900 --> 00:16:03.910 align:start position:0%
some of the goals that are listed in
 

00:16:03.910 --> 00:16:08.309 align:start position:0%
some of the goals that are listed in
Japan<00:16:04.360><c> 10</c><00:16:05.129><c> support</c><00:16:06.129><c> for</c><00:16:06.309><c> HTTP</c><00:16:06.970><c> 2</c><00:16:07.209><c> of</c><00:16:07.869><c> course</c><00:16:08.169><c> as</c>

00:16:08.309 --> 00:16:08.319 align:start position:0%
Japan 10 support for HTTP 2 of course as
 

00:16:08.319 --> 00:16:11.729 align:start position:0%
Japan 10 support for HTTP 2 of course as
well<00:16:08.470><c> as</c><00:16:08.619><c> HTTP</c><00:16:09.279><c> 1</c><00:16:09.489><c> 1</c><00:16:10.079><c> provide</c><00:16:11.079><c> an</c><00:16:11.230><c> asynchronous</c>

00:16:11.729 --> 00:16:11.739 align:start position:0%
well as HTTP 1 1 provide an asynchronous
 

00:16:11.739 --> 00:16:14.489 align:start position:0%
well as HTTP 1 1 provide an asynchronous
API<00:16:12.389><c> so</c><00:16:13.389><c> as</c><00:16:13.480><c> to</c><00:16:13.569><c> get</c><00:16:13.689><c> away</c><00:16:13.809><c> from</c><00:16:13.929><c> the</c><00:16:14.139><c> blocking</c>

00:16:14.489 --> 00:16:14.499 align:start position:0%
API so as to get away from the blocking
 

00:16:14.499 --> 00:16:16.999 align:start position:0%
API so as to get away from the blocking
semantics<00:16:15.009><c> of</c><00:16:15.220><c> the</c><00:16:15.339><c> existing</c><00:16:15.759><c> URL</c><00:16:15.910><c> connection</c>

00:16:16.999 --> 00:16:17.009 align:start position:0%
semantics of the existing URL connection
 

00:16:17.009 --> 00:16:20.280 align:start position:0%
semantics of the existing URL connection
use<00:16:18.009><c> more</c><00:16:18.279><c> modern</c><00:16:18.459><c> language</c><00:16:19.059><c> features</c><00:16:19.449><c> like</c>

00:16:20.280 --> 00:16:20.290 align:start position:0%
use more modern language features like
 

00:16:20.290 --> 00:16:22.379 align:start position:0%
use more modern language features like
generics<00:16:20.769><c> and</c><00:16:20.889><c> lambda</c><00:16:21.309><c> as</c><00:16:21.819><c> well</c><00:16:22.059><c> as</c><00:16:22.209><c> more</c>

00:16:22.379 --> 00:16:22.389 align:start position:0%
generics and lambda as well as more
 

00:16:22.389 --> 00:16:24.809 align:start position:0%
generics and lambda as well as more
modern<00:16:22.540><c> platform</c><00:16:23.169><c> api</c><00:16:23.439><c> is</c><00:16:23.559><c> like</c><00:16:23.860><c> completable</c>

00:16:24.809 --> 00:16:24.819 align:start position:0%
modern platform api is like completable
 

00:16:24.819 --> 00:16:26.309 align:start position:0%
modern platform api is like completable
future<00:16:25.239><c> and</c><00:16:25.480><c> the</c><00:16:25.689><c> reactive</c><00:16:26.049><c> streams</c>

00:16:26.309 --> 00:16:26.319 align:start position:0%
future and the reactive streams
 

00:16:26.319 --> 00:16:29.999 align:start position:0%
future and the reactive streams
interfaces<00:16:27.839><c> additionally</c><00:16:28.839><c> there</c><00:16:29.439><c> is</c><00:16:29.470><c> support</c>

00:16:29.999 --> 00:16:30.009 align:start position:0%
interfaces additionally there is support
 

00:16:30.009 --> 00:16:31.470 align:start position:0%
interfaces additionally there is support
for<00:16:30.189><c> the</c><00:16:30.309><c> handling</c><00:16:30.669><c> of</c><00:16:30.819><c> the</c><00:16:30.939><c> WebSocket</c>

00:16:31.470 --> 00:16:31.480 align:start position:0%
for the handling of the WebSocket
 

00:16:31.480 --> 00:16:35.539 align:start position:0%
for the handling of the WebSocket
upgrade<00:16:31.839><c> and</c><00:16:32.110><c> a</c><00:16:32.529><c> low-level</c><00:16:32.919><c> web</c><00:16:33.249><c> socket</c><00:16:33.639><c> API</c>

00:16:35.539 --> 00:16:35.549 align:start position:0%
upgrade and a low-level web socket API
 

00:16:35.549 --> 00:16:38.489 align:start position:0%
upgrade and a low-level web socket API
as<00:16:36.549><c> I</c><00:16:36.759><c> said</c><00:16:36.939><c> earlier</c><00:16:37.329><c> the</c><00:16:37.929><c> application</c>

00:16:38.489 --> 00:16:38.499 align:start position:0%
as I said earlier the application
 

00:16:38.499 --> 00:16:41.429 align:start position:0%
as I said earlier the application
semantics<00:16:39.009><c> of</c><00:16:39.100><c> HTTP</c><00:16:39.819><c> 2</c><00:16:40.029><c> are</c><00:16:40.839><c> similar</c><00:16:41.199><c> to</c><00:16:41.319><c> that</c>

00:16:41.429 --> 00:16:41.439 align:start position:0%
semantics of HTTP 2 are similar to that
 

00:16:41.439 --> 00:16:42.900 align:start position:0%
semantics of HTTP 2 are similar to that
of<00:16:41.619><c> HTTP</c><00:16:42.249><c> 1</c><00:16:42.459><c> 1</c>

00:16:42.900 --> 00:16:42.910 align:start position:0%
of HTTP 1 1
 

00:16:42.910 --> 00:16:45.119 align:start position:0%
of HTTP 1 1
there<00:16:43.839><c> are</c><00:16:44.019><c> however</c><00:16:44.289><c> significant</c>

00:16:45.119 --> 00:16:45.129 align:start position:0%
there are however significant
 

00:16:45.129 --> 00:16:46.949 align:start position:0%
there are however significant
differences<00:16:45.609><c> in</c><00:16:45.819><c> how</c><00:16:46.089><c> the</c><00:16:46.149><c> two</c><00:16:46.419><c> protocol</c>

00:16:46.949 --> 00:16:46.959 align:start position:0%
differences in how the two protocol
 

00:16:46.959 --> 00:16:50.999 align:start position:0%
differences in how the two protocol
versions<00:16:47.350><c> operate</c><00:16:49.049><c> HTTP</c><00:16:50.049><c> 2</c><00:16:50.230><c> uses</c><00:16:50.739><c> just</c><00:16:50.889><c> a</c>

00:16:50.999 --> 00:16:51.009 align:start position:0%
versions operate HTTP 2 uses just a
 

00:16:51.009 --> 00:16:52.799 align:start position:0%
versions operate HTTP 2 uses just a
single<00:16:51.369><c> connection</c><00:16:51.699><c> between</c><00:16:52.059><c> the</c><00:16:52.329><c> client</c><00:16:52.689><c> and</c>

00:16:52.799 --> 00:16:52.809 align:start position:0%
single connection between the client and
 

00:16:52.809 --> 00:16:55.229 align:start position:0%
single connection between the client and
server<00:16:52.980><c> which</c><00:16:53.980><c> reduces</c><00:16:54.429><c> the</c><00:16:54.549><c> overhead</c><00:16:54.879><c> of</c>

00:16:55.229 --> 00:16:55.239 align:start position:0%
server which reduces the overhead of
 

00:16:55.239 --> 00:16:57.600 align:start position:0%
server which reduces the overhead of
setting<00:16:55.569><c> up</c><00:16:55.660><c> new</c><00:16:55.869><c> connections</c>

00:16:57.600 --> 00:16:57.610 align:start position:0%
setting up new connections
 

00:16:57.610 --> 00:17:00.780 align:start position:0%
setting up new connections
for<00:16:57.820><c> HTTP</c><00:16:58.660><c> where</c><00:16:59.440><c> the</c><00:16:59.500><c> TLS</c><00:16:59.890><c> handshake</c><00:16:59.920><c> can</c>

00:17:00.780 --> 00:17:00.790 align:start position:0%
for HTTP where the TLS handshake can
 

00:17:00.790 --> 00:17:03.870 align:start position:0%
for HTTP where the TLS handshake can
take<00:17:01.029><c> some</c><00:17:01.240><c> time</c><00:17:01.480><c> to</c><00:17:01.630><c> complete</c><00:17:02.339><c> this</c><00:17:03.339><c> single</c>

00:17:03.870 --> 00:17:03.880 align:start position:0%
take some time to complete this single
 

00:17:03.880 --> 00:17:05.220 align:start position:0%
take some time to complete this single
connection<00:17:04.179><c> between</c><00:17:04.449><c> the</c><00:17:04.689><c> client</c><00:17:05.049><c> and</c><00:17:05.140><c> server</c>

00:17:05.220 --> 00:17:05.230 align:start position:0%
connection between the client and server
 

00:17:05.230 --> 00:17:07.860 align:start position:0%
connection between the client and server
can<00:17:06.010><c> have</c><00:17:06.130><c> multiple</c><00:17:06.490><c> HTTP</c><00:17:07.270><c> requests</c>

00:17:07.860 --> 00:17:07.870 align:start position:0%
can have multiple HTTP requests
 

00:17:07.870 --> 00:17:12.539 align:start position:0%
can have multiple HTTP requests
multiplexed<00:17:08.740><c> on</c><00:17:08.860><c> it</c><00:17:09.010><c> at</c><00:17:09.189><c> the</c><00:17:09.640><c> same</c><00:17:09.819><c> time</c><00:17:11.549><c> HTTP</c>

00:17:12.539 --> 00:17:12.549 align:start position:0%
multiplexed on it at the same time HTTP
 

00:17:12.549 --> 00:17:14.730 align:start position:0%
multiplexed on it at the same time HTTP
2<00:17:12.760><c> provides</c><00:17:13.240><c> a</c><00:17:13.360><c> new</c><00:17:13.540><c> mechanism</c><00:17:14.110><c> called</c><00:17:14.350><c> server</c>

00:17:14.730 --> 00:17:14.740 align:start position:0%
2 provides a new mechanism called server
 

00:17:14.740 --> 00:17:19.530 align:start position:0%
2 provides a new mechanism called server
push<00:17:15.150><c> where</c><00:17:16.150><c> a</c><00:17:16.179><c> server</c><00:17:17.819><c> upon</c><00:17:18.819><c> receipt</c><00:17:19.240><c> of</c><00:17:19.420><c> a</c>

00:17:19.530 --> 00:17:19.540 align:start position:0%
push where a server upon receipt of a
 

00:17:19.540 --> 00:17:22.770 align:start position:0%
push where a server upon receipt of a
request<00:17:19.890><c> can</c><00:17:20.890><c> if</c><00:17:21.250><c> the</c><00:17:21.459><c> if</c><00:17:21.819><c> determines</c>

00:17:22.770 --> 00:17:22.780 align:start position:0%
request can if the if determines
 

00:17:22.780 --> 00:17:25.140 align:start position:0%
request can if the if determines
appropriate<00:17:23.319><c> issues</c><00:17:23.949><c> syntactic</c><00:17:24.490><c> requests</c><00:17:25.000><c> to</c>

00:17:25.140 --> 00:17:25.150 align:start position:0%
appropriate issues syntactic requests to
 

00:17:25.150 --> 00:17:27.270 align:start position:0%
appropriate issues syntactic requests to
the<00:17:25.240><c> client</c><00:17:25.600><c> resources</c><00:17:26.260><c> that</c><00:17:26.770><c> it</c><00:17:26.949><c> believes</c>

00:17:27.270 --> 00:17:27.280 align:start position:0%
the client resources that it believes
 

00:17:27.280 --> 00:17:29.310 align:start position:0%
the client resources that it believes
the<00:17:27.429><c> client</c><00:17:27.760><c> will</c><00:17:27.880><c> likely</c><00:17:28.089><c> need</c><00:17:28.420><c> along</c><00:17:29.170><c> with</c>

00:17:29.310 --> 00:17:29.320 align:start position:0%
the client will likely need along with
 

00:17:29.320 --> 00:17:31.860 align:start position:0%
the client will likely need along with
the<00:17:29.410><c> original</c><00:17:29.559><c> request</c><00:17:30.210><c> this</c><00:17:31.210><c> can</c><00:17:31.450><c> be</c><00:17:31.570><c> used</c><00:17:31.750><c> to</c>

00:17:31.860 --> 00:17:31.870 align:start position:0%
the original request this can be used to
 

00:17:31.870 --> 00:17:33.990 align:start position:0%
the original request this can be used to
speed<00:17:32.110><c> up</c><00:17:32.380><c> the</c><00:17:32.620><c> retrieval</c><00:17:32.740><c> of</c><00:17:33.190><c> resources</c><00:17:33.730><c> with</c>

00:17:33.990 --> 00:17:34.000 align:start position:0%
speed up the retrieval of resources with
 

00:17:34.000 --> 00:17:36.630 align:start position:0%
speed up the retrieval of resources with
a<00:17:34.030><c> large</c><00:17:34.330><c> number</c><00:17:34.630><c> of</c><00:17:34.750><c> embedded</c><00:17:35.200><c> links</c><00:17:35.640><c> the</c>

00:17:36.630 --> 00:17:36.640 align:start position:0%
a large number of embedded links the
 

00:17:36.640 --> 00:17:38.760 align:start position:0%
a large number of embedded links the
unwire<00:17:37.120><c> format</c><00:17:37.720><c> has</c><00:17:38.080><c> been</c><00:17:38.290><c> updated</c>

00:17:38.760 --> 00:17:38.770 align:start position:0%
unwire format has been updated
 

00:17:38.770 --> 00:17:43.830 align:start position:0%
unwire format has been updated
significantly<00:17:39.429><c> from</c><00:17:39.970><c> data</c><00:17:40.240><c> HTTP</c><00:17:40.990><c> 1</c><00:17:41.200><c> 1</c><00:17:42.630><c> HTTP</c><00:17:43.630><c> 2</c>

00:17:43.830 --> 00:17:43.840 align:start position:0%
significantly from data HTTP 1 1 HTTP 2
 

00:17:43.840 --> 00:17:46.289 align:start position:0%
significantly from data HTTP 1 1 HTTP 2
uses<00:17:44.230><c> a</c><00:17:44.260><c> more</c><00:17:44.590><c> compact</c><00:17:45.100><c> binary</c><00:17:45.520><c> format</c><00:17:46.090><c> and</c>

00:17:46.289 --> 00:17:46.299 align:start position:0%
uses a more compact binary format and
 

00:17:46.299 --> 00:17:48.510 align:start position:0%
uses a more compact binary format and
headers<00:17:47.049><c> are</c><00:17:47.230><c> compressed</c><00:17:47.650><c> using</c><00:17:47.950><c> H</c><00:17:48.280><c> PAC</c>

00:17:48.510 --> 00:17:48.520 align:start position:0%
headers are compressed using H PAC
 

00:17:48.520 --> 00:17:53.070 align:start position:0%
headers are compressed using H PAC
compression<00:17:50.580><c> the</c><00:17:51.580><c> HTTP</c><00:17:52.299><c> client</c><00:17:52.750><c> supports</c>

00:17:53.070 --> 00:17:53.080 align:start position:0%
compression the HTTP client supports
 

00:17:53.080 --> 00:17:56.880 align:start position:0%
compression the HTTP client supports
both<00:17:53.230><c> HTTP</c><00:17:54.040><c> 1</c><00:17:54.250><c> 1</c><00:17:54.490><c> and</c><00:17:54.730><c> HTTP</c><00:17:55.540><c> 2</c><00:17:55.780><c> but</c><00:17:56.500><c> prefers</c>

00:17:56.880 --> 00:17:56.890 align:start position:0%
both HTTP 1 1 and HTTP 2 but prefers
 

00:17:56.890 --> 00:18:01.470 align:start position:0%
both HTTP 1 1 and HTTP 2 but prefers
HTTP<00:17:57.760><c> 2</c><00:17:57.970><c> by</c><00:17:58.210><c> default</c><00:17:59.040><c> for</c><00:18:00.040><c> new</c><00:18:00.250><c> clear</c><00:18:00.700><c> non</c><00:18:01.030><c> TLS</c>

00:18:01.470 --> 00:18:01.480 align:start position:0%
HTTP 2 by default for new clear non TLS
 

00:18:01.480 --> 00:18:03.690 align:start position:0%
HTTP 2 by default for new clear non TLS
connections<00:18:02.049><c> the</c><00:18:02.679><c> client</c><00:18:03.010><c> automatically</c>

00:18:03.690 --> 00:18:03.700 align:start position:0%
connections the client automatically
 

00:18:03.700 --> 00:18:05.909 align:start position:0%
connections the client automatically
adds<00:18:03.880><c> the</c><00:18:04.120><c> appropriate</c><00:18:04.630><c> protocol</c><00:18:05.110><c> of</c><00:18:05.350><c> great</c>

00:18:05.909 --> 00:18:05.919 align:start position:0%
adds the appropriate protocol of great
 

00:18:05.919 --> 00:18:08.460 align:start position:0%
adds the appropriate protocol of great
headers<00:18:06.280><c> to</c><00:18:06.520><c> let</c><00:18:07.210><c> us</c><00:18:07.330><c> server</c><00:18:07.540><c> know</c><00:18:07.900><c> that</c><00:18:08.350><c> the</c>

00:18:08.460 --> 00:18:08.470 align:start position:0%
headers to let us server know that the
 

00:18:08.470 --> 00:18:11.460 align:start position:0%
headers to let us server know that the
client<00:18:08.770><c> supports</c><00:18:09.130><c> HTTP</c><00:18:09.820><c> 2</c><00:18:10.059><c> if</c><00:18:10.419><c> the</c><00:18:11.230><c> server</c>

00:18:11.460 --> 00:18:11.470 align:start position:0%
client supports HTTP 2 if the server
 

00:18:11.470 --> 00:18:14.700 align:start position:0%
client supports HTTP 2 if the server
also<00:18:11.770><c> supports</c><00:18:12.400><c> HTTP</c><00:18:13.120><c> 2</c><00:18:13.330><c> then</c><00:18:13.960><c> it</c><00:18:14.200><c> can</c><00:18:14.380><c> reply</c>

00:18:14.700 --> 00:18:14.710 align:start position:0%
also supports HTTP 2 then it can reply
 

00:18:14.710 --> 00:18:16.350 align:start position:0%
also supports HTTP 2 then it can reply
as<00:18:14.770><c> appropriate</c><00:18:15.370><c> and</c><00:18:15.520><c> the</c><00:18:15.760><c> connection</c><00:18:16.179><c> will</c>

00:18:16.350 --> 00:18:16.360 align:start position:0%
as appropriate and the connection will
 

00:18:16.360 --> 00:18:20.909 align:start position:0%
as appropriate and the connection will
be<00:18:16.510><c> upgraded</c><00:18:17.429><c> for</c><00:18:18.429><c> HTTP</c><00:18:19.150><c> over</c><00:18:19.419><c> TLS</c><00:18:19.780><c> the</c><00:18:20.530><c> client</c>

00:18:20.909 --> 00:18:20.919 align:start position:0%
be upgraded for HTTP over TLS the client
 

00:18:20.919 --> 00:18:23.070 align:start position:0%
be upgraded for HTTP over TLS the client
uses<00:18:21.429><c> the</c><00:18:21.549><c> application</c><00:18:22.270><c> layer</c><00:18:22.510><c> protocol</c>

00:18:23.070 --> 00:18:23.080 align:start position:0%
uses the application layer protocol
 

00:18:23.080 --> 00:18:26.159 align:start position:0%
uses the application layer protocol
negotiation<00:18:23.610><c> TLS</c><00:18:24.610><c> extension</c><00:18:25.240><c> to</c><00:18:25.870><c> try</c><00:18:26.110><c> to</c>

00:18:26.159 --> 00:18:26.169 align:start position:0%
negotiation TLS extension to try to
 

00:18:26.169 --> 00:18:29.640 align:start position:0%
negotiation TLS extension to try to
negotiate<00:18:26.500><c> h2</c><00:18:27.460><c> with</c><00:18:27.730><c> the</c><00:18:27.850><c> server</c><00:18:28.090><c> if</c><00:18:28.840><c> the</c><00:18:29.440><c> cert</c>

00:18:29.640 --> 00:18:29.650 align:start position:0%
negotiate h2 with the server if the cert
 

00:18:29.650 --> 00:18:33.350 align:start position:0%
negotiate h2 with the server if the cert
server<00:18:29.919><c> supports</c><00:18:30.460><c> H</c><00:18:30.610><c> 2</c><00:18:30.910><c> then</c><00:18:31.570><c> H</c><00:18:31.840><c> 2</c><00:18:32.110><c> is</c><00:18:32.230><c> used</c><00:18:32.410><c> in</c>

00:18:33.350 --> 00:18:33.360 align:start position:0%
server supports H 2 then H 2 is used in
 

00:18:33.360 --> 00:18:36.630 align:start position:0%
server supports H 2 then H 2 is used in
all<00:18:34.360><c> cases</c><00:18:34.750><c> if</c><00:18:35.110><c> the</c><00:18:35.650><c> server</c><00:18:35.890><c> does</c><00:18:36.100><c> not</c><00:18:36.130><c> support</c>

00:18:36.630 --> 00:18:36.640 align:start position:0%
all cases if the server does not support
 

00:18:36.640 --> 00:18:39.510 align:start position:0%
all cases if the server does not support
HTTP<00:18:37.419><c> 2</c><00:18:37.630><c> then</c><00:18:38.380><c> the</c><00:18:38.500><c> connection</c><00:18:38.919><c> falls</c><00:18:39.190><c> back</c><00:18:39.490><c> to</c>

00:18:39.510 --> 00:18:39.520 align:start position:0%
HTTP 2 then the connection falls back to
 

00:18:39.520 --> 00:18:44.610 align:start position:0%
HTTP 2 then the connection falls back to
HTTP<00:18:40.330><c> 1</c><00:18:40.570><c> 1</c><00:18:40.780><c> as</c><00:18:41.710><c> of</c><00:18:42.280><c> JDK</c><00:18:42.610><c> 11</c><00:18:43.059><c> the</c><00:18:43.660><c> TLS</c><00:18:44.020><c> 1.3</c>

00:18:44.610 --> 00:18:44.620 align:start position:0%
HTTP 1 1 as of JDK 11 the TLS 1.3
 

00:18:44.620 --> 00:18:47.940 align:start position:0%
HTTP 1 1 as of JDK 11 the TLS 1.3
protocol<00:18:45.190><c> is</c><00:18:45.340><c> supported</c><00:18:45.850><c> the</c><00:18:46.750><c> HTTP</c><00:18:47.530><c> client</c>

00:18:47.940 --> 00:18:47.950 align:start position:0%
protocol is supported the HTTP client
 

00:18:47.950 --> 00:18:49.799 align:start position:0%
protocol is supported the HTTP client
leverages<00:18:48.549><c> this</c><00:18:48.760><c> and</c><00:18:49.030><c> attempts</c><00:18:49.690><c> to</c><00:18:49.720><c> negotiate</c>

00:18:49.799 --> 00:18:49.809 align:start position:0%
leverages this and attempts to negotiate
 

00:18:49.809 --> 00:18:57.360 align:start position:0%
leverages this and attempts to negotiate
TLS<00:18:50.710><c> 1.3</c><00:18:51.370><c> for</c><00:18:52.120><c> all</c><00:18:52.480><c> new</c><00:18:53.020><c> TLS</c><00:18:53.620><c> connections</c><00:18:56.370><c> the</c>

00:18:57.360 --> 00:18:57.370 align:start position:0%
TLS 1.3 for all new TLS connections the
 

00:18:57.370 --> 00:18:59.549 align:start position:0%
TLS 1.3 for all new TLS connections the
HTTP<00:18:58.090><c> client</c><00:18:58.510><c> supports</c><00:18:58.929><c> an</c><00:18:59.020><c> asynchronous</c>

00:18:59.549 --> 00:18:59.559 align:start position:0%
HTTP client supports an asynchronous
 

00:18:59.559 --> 00:19:02.730 align:start position:0%
HTTP client supports an asynchronous
mode<00:18:59.919><c> of</c><00:19:00.100><c> operation</c><00:19:00.900><c> request</c><00:19:01.900><c> sent</c><00:19:02.350><c> with</c><00:19:02.620><c> the</c>

00:19:02.730 --> 00:19:02.740 align:start position:0%
mode of operation request sent with the
 

00:19:02.740 --> 00:19:05.340 align:start position:0%
mode of operation request sent with the
send<00:19:03.010><c> async</c><00:19:03.610><c> method</c><00:19:03.720><c> return</c><00:19:04.720><c> a</c><00:19:04.750><c> compatible</c>

00:19:05.340 --> 00:19:05.350 align:start position:0%
send async method return a compatible
 

00:19:05.350 --> 00:19:08.669 align:start position:0%
send async method return a compatible
future<00:19:05.679><c> of</c><00:19:05.770><c> HTTP</c><00:19:06.490><c> response</c><00:19:07.679><c> compatible</c>

00:19:08.669 --> 00:19:08.679 align:start position:0%
future of HTTP response compatible
 

00:19:08.679 --> 00:19:10.620 align:start position:0%
future of HTTP response compatible
future<00:19:08.980><c> provides</c><00:19:09.400><c> a</c><00:19:09.550><c> number</c><00:19:09.850><c> of</c><00:19:09.940><c> methods</c><00:19:10.210><c> for</c>

00:19:10.620 --> 00:19:10.630 align:start position:0%
future provides a number of methods for
 

00:19:10.630 --> 00:19:11.919 align:start position:0%
future provides a number of methods for
building<00:19:10.990><c> chains</c>

00:19:11.919 --> 00:19:11.929 align:start position:0%
building chains
 

00:19:11.929 --> 00:19:14.200 align:start position:0%
building chains
dependent<00:19:12.440><c> actions</c><00:19:12.830><c> that</c><00:19:13.429><c> can</c><00:19:13.610><c> be</c><00:19:13.669><c> run</c><00:19:13.999><c> either</c>

00:19:14.200 --> 00:19:14.210 align:start position:0%
dependent actions that can be run either
 

00:19:14.210 --> 00:19:17.889 align:start position:0%
dependent actions that can be run either
synchronously<00:19:14.809><c> or</c><00:19:15.049><c> asynchronously</c><00:19:15.519><c> in</c><00:19:16.899><c> this</c>

00:19:17.889 --> 00:19:17.899 align:start position:0%
synchronously or asynchronously in this
 

00:19:17.899 --> 00:19:20.649 align:start position:0%
synchronously or asynchronously in this
example<00:19:18.289><c> same-day</c><00:19:19.190><c> sync</c><00:19:19.639><c> is</c><00:19:19.850><c> given</c><00:19:20.570><c> to</c>

00:19:20.649 --> 00:19:20.659 align:start position:0%
example same-day sync is given to
 

00:19:20.659 --> 00:19:22.989 align:start position:0%
example same-day sync is given to
request<00:19:20.960><c> to</c><00:19:21.110><c> be</c><00:19:21.139><c> sent</c><00:19:21.470><c> and</c><00:19:21.710><c> also</c><00:19:22.580><c> a</c><00:19:22.610><c> body</c>

00:19:22.989 --> 00:19:22.999 align:start position:0%
request to be sent and also a body
 

00:19:22.999 --> 00:19:24.820 align:start position:0%
request to be sent and also a body
handler<00:19:23.419><c> that</c><00:19:23.600><c> converts</c><00:19:24.080><c> the</c><00:19:24.289><c> response</c><00:19:24.590><c> body</c>

00:19:24.820 --> 00:19:24.830 align:start position:0%
handler that converts the response body
 

00:19:24.830 --> 00:19:29.049 align:start position:0%
handler that converts the response body
bytes<00:19:25.159><c> to</c><00:19:25.700><c> a</c><00:19:25.730><c> string</c><00:19:27.129><c> the</c><00:19:28.129><c> comparable</c><00:19:28.669><c> future</c>

00:19:29.049 --> 00:19:29.059 align:start position:0%
bytes to a string the comparable future
 

00:19:29.059 --> 00:19:32.859 align:start position:0%
bytes to a string the comparable future
denne<00:19:29.419><c> apply</c><00:19:29.779><c> method</c><00:19:30.399><c> maps</c><00:19:31.399><c> to</c><00:19:31.669><c> HTTP</c><00:19:32.389><c> response</c>

00:19:32.859 --> 00:19:32.869 align:start position:0%
denne apply method maps to HTTP response
 

00:19:32.869 --> 00:19:35.259 align:start position:0%
denne apply method maps to HTTP response
to<00:19:33.139><c> its</c><00:19:33.259><c> body</c><00:19:33.440><c> type</c><00:19:33.740><c> which</c><00:19:34.549><c> in</c><00:19:34.700><c> this</c><00:19:34.820><c> case</c><00:19:35.029><c> is</c><00:19:35.240><c> a</c>

00:19:35.259 --> 00:19:35.269 align:start position:0%
to its body type which in this case is a
 

00:19:35.269 --> 00:19:39.070 align:start position:0%
to its body type which in this case is a
string<00:19:36.009><c> the</c><00:19:37.009><c> den</c><00:19:37.220><c> accept</c><00:19:37.669><c> method</c><00:19:38.080><c> consumes</c>

00:19:39.070 --> 00:19:39.080 align:start position:0%
string the den accept method consumes
 

00:19:39.080 --> 00:19:42.239 align:start position:0%
string the den accept method consumes
the<00:19:39.320><c> string</c><00:19:39.590><c> and</c><00:19:39.799><c> just</c><00:19:39.889><c> prints</c><00:19:40.369><c> it</c><00:19:40.460><c> out</c>

00:19:42.239 --> 00:19:42.249 align:start position:0%
the string and just prints it out
 

00:19:42.249 --> 00:19:45.009 align:start position:0%
the string and just prints it out
finally<00:19:43.249><c> the</c><00:19:43.429><c> join</c><00:19:43.639><c> method</c><00:19:43.909><c> blocks</c><00:19:44.330><c> until</c><00:19:44.779><c> the</c>

00:19:45.009 --> 00:19:45.019 align:start position:0%
finally the join method blocks until the
 

00:19:45.019 --> 00:19:49.480 align:start position:0%
finally the join method blocks until the
response<00:19:45.409><c> string</c><00:19:45.769><c> is</c><00:19:46.009><c> printed</c><00:19:47.860><c> the</c><00:19:48.860><c> HTTP</c>

00:19:49.480 --> 00:19:49.490 align:start position:0%
response string is printed the HTTP
 

00:19:49.490 --> 00:19:51.399 align:start position:0%
response string is printed the HTTP
client<00:19:49.970><c> follows</c><00:19:50.419><c> the</c><00:19:50.570><c> familiar</c><00:19:50.960><c> Builder</c>

00:19:51.399 --> 00:19:51.409 align:start position:0%
client follows the familiar Builder
 

00:19:51.409 --> 00:19:54.129 align:start position:0%
client follows the familiar Builder
pattern<00:19:51.940><c> there</c><00:19:52.940><c> are</c><00:19:52.970><c> factories</c><00:19:53.509><c> for</c><00:19:53.690><c> creating</c>

00:19:54.129 --> 00:19:54.139 align:start position:0%
pattern there are factories for creating
 

00:19:54.139 --> 00:19:57.220 align:start position:0%
pattern there are factories for creating
builders<00:19:54.590><c> for</c><00:19:55.429><c> both</c><00:19:55.639><c> the</c><00:19:55.970><c> top-level</c><00:19:56.450><c> HTTP</c>

00:19:57.220 --> 00:19:57.230 align:start position:0%
builders for both the top-level HTTP
 

00:19:57.230 --> 00:20:01.269 align:start position:0%
builders for both the top-level HTTP
client<00:19:57.710><c> and</c><00:19:57.860><c> HTTP</c><00:19:58.789><c> requests</c><00:19:59.299><c> types</c><00:20:00.070><c> in</c><00:20:01.070><c> this</c>

00:20:01.269 --> 00:20:01.279 align:start position:0%
client and HTTP requests types in this
 

00:20:01.279 --> 00:20:04.989 align:start position:0%
client and HTTP requests types in this
example<00:20:01.669><c> the</c><00:20:02.450><c> HTTP</c><00:20:03.169><c> client</c><00:20:03.590><c> new</c><00:20:04.490><c> builder</c>

00:20:04.989 --> 00:20:04.999 align:start position:0%
example the HTTP client new builder
 

00:20:04.999 --> 00:20:07.419 align:start position:0%
example the HTTP client new builder
static<00:20:05.899><c> factory</c><00:20:06.080><c> method</c><00:20:06.619><c> returns</c><00:20:07.129><c> a</c><00:20:07.279><c> new</c>

00:20:07.419 --> 00:20:07.429 align:start position:0%
static factory method returns a new
 

00:20:07.429 --> 00:20:10.720 align:start position:0%
static factory method returns a new
builder<00:20:07.820><c> of</c><00:20:07.850><c> HTTP</c><00:20:08.600><c> clients</c><00:20:09.080><c> I</c><00:20:09.730><c> connect</c>

00:20:10.720 --> 00:20:10.730 align:start position:0%
builder of HTTP clients I connect
 

00:20:10.730 --> 00:20:13.119 align:start position:0%
builder of HTTP clients I connect
timeout<00:20:11.269><c> for</c><00:20:11.509><c> new</c><00:20:11.659><c> connections</c><00:20:12.110><c> is</c><00:20:12.289><c> set</c><00:20:12.470><c> to</c><00:20:12.799><c> 20</c>

00:20:13.119 --> 00:20:13.129 align:start position:0%
timeout for new connections is set to 20
 

00:20:13.129 --> 00:20:18.369 align:start position:0%
timeout for new connections is set to 20
seconds<00:20:13.549><c> and</c><00:20:13.700><c> the</c><00:20:14.659><c> client</c><00:20:14.990><c> is</c><00:20:15.110><c> built</c><00:20:16.659><c> the</c><00:20:17.659><c> HTTP</c>

00:20:18.369 --> 00:20:18.379 align:start position:0%
seconds and the client is built the HTTP
 

00:20:18.379 --> 00:20:20.590 align:start position:0%
seconds and the client is built the HTTP
request<00:20:18.799><c> has</c><00:20:19.070><c> a</c><00:20:19.100><c> similar</c><00:20:19.519><c> new</c><00:20:20.210><c> builder</c>

00:20:20.590 --> 00:20:20.600 align:start position:0%
request has a similar new builder
 

00:20:20.600 --> 00:20:24.600 align:start position:0%
request has a similar new builder
factory<00:20:21.549><c> then</c><00:20:22.549><c> requests</c><00:20:23.029><c> Uriah</c><00:20:23.690><c> set</c><00:20:24.049><c> a</c>

00:20:24.600 --> 00:20:24.610 align:start position:0%
factory then requests Uriah set a
 

00:20:24.610 --> 00:20:28.989 align:start position:0%
factory then requests Uriah set a
request<00:20:25.610><c> specific</c><00:20:25.999><c> timeout</c><00:20:26.779><c> a</c><00:20:27.999><c> header</c>

00:20:28.989 --> 00:20:28.999 align:start position:0%
request specific timeout a header
 

00:20:28.999 --> 00:20:31.389 align:start position:0%
request specific timeout a header
indicating<00:20:29.690><c> the</c><00:20:29.779><c> content</c><00:20:30.200><c> type</c><00:20:30.409><c> since</c><00:20:31.249><c> this</c>

00:20:31.389 --> 00:20:31.399 align:start position:0%
indicating the content type since this
 

00:20:31.399 --> 00:20:34.629 align:start position:0%
indicating the content type since this
will<00:20:31.580><c> be</c><00:20:31.639><c> a</c><00:20:31.789><c> post</c><00:20:32.090><c> request</c><00:20:33.460><c> the</c><00:20:34.460><c> body</c>

00:20:34.629 --> 00:20:34.639 align:start position:0%
will be a post request the body
 

00:20:34.639 --> 00:20:37.720 align:start position:0%
will be a post request the body
publishers<00:20:35.330><c> of</c><00:20:35.749><c> file</c><00:20:36.529><c> factory</c><00:20:37.039><c> method</c><00:20:37.369><c> is</c>

00:20:37.720 --> 00:20:37.730 align:start position:0%
publishers of file factory method is
 

00:20:37.730 --> 00:20:39.970 align:start position:0%
publishers of file factory method is
used<00:20:38.029><c> to</c><00:20:38.149><c> return</c><00:20:38.450><c> a</c><00:20:38.720><c> request</c><00:20:39.080><c> body</c><00:20:39.409><c> publisher</c>

00:20:39.970 --> 00:20:39.980 align:start position:0%
used to return a request body publisher
 

00:20:39.980 --> 00:20:42.580 align:start position:0%
used to return a request body publisher
that<00:20:40.730><c> publishes</c><00:20:41.269><c> the</c><00:20:41.389><c> content</c><00:20:41.899><c> of</c><00:20:42.080><c> the</c><00:20:42.259><c> given</c>

00:20:42.580 --> 00:20:42.590 align:start position:0%
that publishes the content of the given
 

00:20:42.590 --> 00:20:48.519 align:start position:0%
that publishes the content of the given
file<00:20:42.830><c> path</c><00:20:44.080><c> the</c><00:20:45.080><c> request</c><00:20:45.409><c> is</c><00:20:45.559><c> then</c><00:20:45.679><c> sent</c><00:20:47.529><c> the</c>

00:20:48.519 --> 00:20:48.529 align:start position:0%
file path the request is then sent the
 

00:20:48.529 --> 00:20:50.440 align:start position:0%
file path the request is then sent the
Java<00:20:48.769><c> platform</c><00:20:49.070><c> provides</c><00:20:49.850><c> the</c><00:20:49.999><c> board</c><00:20:50.240><c> for</c>

00:20:50.440 --> 00:20:50.450 align:start position:0%
Java platform provides the board for
 

00:20:50.450 --> 00:20:51.879 align:start position:0%
Java platform provides the board for
reactive<00:20:50.809><c> streams</c><00:20:51.110><c> through</c><00:20:51.499><c> a</c><00:20:51.529><c> number</c><00:20:51.830><c> of</c>

00:20:51.879 --> 00:20:51.889 align:start position:0%
reactive streams through a number of
 

00:20:51.889 --> 00:20:54.070 align:start position:0%
reactive streams through a number of
interfaces<00:20:52.190><c> in</c><00:20:52.700><c> a</c><00:20:52.940><c> Java</c><00:20:53.210><c> util</c><00:20:53.539><c> concurrent</c>

00:20:54.070 --> 00:20:54.080 align:start position:0%
interfaces in a Java util concurrent
 

00:20:54.080 --> 00:20:56.739 align:start position:0%
interfaces in a Java util concurrent
flow<00:20:54.289><c> class</c><00:20:54.970><c> there</c><00:20:55.970><c> is</c><00:20:56.059><c> a</c><00:20:56.090><c> publisher</c><00:20:56.570><c> for</c>

00:20:56.739 --> 00:20:56.749 align:start position:0%
flow class there is a publisher for
 

00:20:56.749 --> 00:20:59.320 align:start position:0%
flow class there is a publisher for
producing<00:20:57.169><c> items</c><00:20:57.529><c> a</c><00:20:58.210><c> subscriber</c><00:20:59.210><c> for</c>

00:20:59.320 --> 00:20:59.330 align:start position:0%
producing items a subscriber for
 

00:20:59.330 --> 00:21:02.859 align:start position:0%
producing items a subscriber for
consuming<00:20:59.990><c> items</c><00:21:00.320><c> a</c><00:21:01.269><c> subscriber</c><00:21:02.269><c> subscribes</c>

00:21:02.859 --> 00:21:02.869 align:start position:0%
consuming items a subscriber subscribes
 

00:21:02.869 --> 00:21:05.499 align:start position:0%
consuming items a subscriber subscribes
to<00:21:03.049><c> a</c><00:21:03.139><c> publisher</c><00:21:03.649><c> and</c><00:21:03.860><c> can</c><00:21:04.820><c> issue</c><00:21:04.940><c> a</c><00:21:05.090><c> request</c>

00:21:05.499 --> 00:21:05.509 align:start position:0%
to a publisher and can issue a request
 

00:21:05.509 --> 00:21:06.840 align:start position:0%
to a publisher and can issue a request
for<00:21:05.690><c> items</c><00:21:06.019><c> as</c><00:21:06.200><c> needed</c>

00:21:06.840 --> 00:21:06.850 align:start position:0%
for items as needed
 

00:21:06.850 --> 00:21:09.879 align:start position:0%
for items as needed
this<00:21:07.850><c> request</c><00:21:08.240><c> mechanism</c><00:21:09.080><c> provides</c><00:21:09.649><c> the</c>

00:21:09.879 --> 00:21:09.889 align:start position:0%
this request mechanism provides the
 

00:21:09.889 --> 00:21:12.460 align:start position:0%
this request mechanism provides the
subscriber<00:21:10.429><c> with</c><00:21:10.730><c> back</c><00:21:10.940><c> pressure</c><00:21:11.210><c> since</c><00:21:12.200><c> it</c>

00:21:12.460 --> 00:21:12.470 align:start position:0%
subscriber with back pressure since it
 

00:21:12.470 --> 00:21:14.259 align:start position:0%
subscriber with back pressure since it
is<00:21:12.649><c> in</c><00:21:12.799><c> control</c><00:21:13.159><c> of</c><00:21:13.340><c> the</c><00:21:13.429><c> maximum</c><00:21:13.909><c> number</c><00:21:14.240><c> of</c>

00:21:14.259 --> 00:21:14.269 align:start position:0%
is in control of the maximum number of
 

00:21:14.269 --> 00:21:18.759 align:start position:0%
is in control of the maximum number of
items<00:21:14.480><c> that</c><00:21:15.019><c> may</c><00:21:15.379><c> be</c><00:21:15.440><c> sent</c><00:21:15.830><c> to</c><00:21:16.190><c> it</c><00:21:17.350><c> as</c><00:21:18.350><c> we</c><00:21:18.529><c> just</c>

00:21:18.759 --> 00:21:18.769 align:start position:0%
items that may be sent to it as we just
 

00:21:18.769 --> 00:21:20.430 align:start position:0%
items that may be sent to it as we just
seen<00:21:19.009><c> in</c><00:21:19.220><c> the</c><00:21:19.249><c> last</c><00:21:19.460><c> slide</c>

00:21:20.430 --> 00:21:20.440 align:start position:0%
seen in the last slide
 

00:21:20.440 --> 00:21:23.139 align:start position:0%
seen in the last slide
HTTP<00:21:21.440><c> request</c><00:21:21.889><c> body</c><00:21:22.100><c> is</c><00:21:22.369><c> provided</c><00:21:22.940><c> through</c><00:21:23.119><c> a</c>

00:21:23.139 --> 00:21:23.149 align:start position:0%
HTTP request body is provided through a
 

00:21:23.149 --> 00:21:25.600 align:start position:0%
HTTP request body is provided through a
body<00:21:23.509><c> publisher</c><00:21:24.490><c> by</c>

00:21:25.600 --> 00:21:25.610 align:start position:0%
body publisher by
 

00:21:25.610 --> 00:21:27.820 align:start position:0%
body publisher by
publisher<00:21:26.059><c> is</c><00:21:26.210><c> a</c><00:21:26.240><c> subtype</c><00:21:26.809><c> of</c><00:21:26.840><c> flow</c><00:21:27.290><c> publisher</c>

00:21:27.820 --> 00:21:27.830 align:start position:0%
publisher is a subtype of flow publisher
 

00:21:27.830 --> 00:21:31.680 align:start position:0%
publisher is a subtype of flow publisher
that<00:21:28.460><c> publishes</c><00:21:29.000><c> httprequest</c><00:21:29.900><c> body</c><00:21:30.620><c> as</c><00:21:30.860><c> bytes</c>

00:21:31.680 --> 00:21:31.690 align:start position:0%
that publishes httprequest body as bytes
 

00:21:31.690 --> 00:21:34.930 align:start position:0%
that publishes httprequest body as bytes
the<00:21:32.690><c> HTTP</c><00:21:33.500><c> requests</c><00:21:34.190><c> by</c><00:21:34.340><c> the</c><00:21:34.370><c> publishers</c>

00:21:34.930 --> 00:21:34.940 align:start position:0%
the HTTP requests by the publishers
 

00:21:34.940 --> 00:21:37.270 align:start position:0%
the HTTP requests by the publishers
class<00:21:35.179><c> provides</c><00:21:36.110><c> a</c><00:21:36.260><c> collection</c><00:21:36.440><c> of</c><00:21:36.770><c> factoring</c>

00:21:37.270 --> 00:21:37.280 align:start position:0%
class provides a collection of factoring
 

00:21:37.280 --> 00:21:39.700 align:start position:0%
class provides a collection of factoring
methods<00:21:37.730><c> for</c><00:21:37.970><c> creating</c><00:21:38.420><c> publishers</c><00:21:38.960><c> for</c><00:21:39.530><c> most</c>

00:21:39.700 --> 00:21:39.710 align:start position:0%
methods for creating publishers for most
 

00:21:39.710 --> 00:21:43.480 align:start position:0%
methods for creating publishers for most
common<00:21:39.980><c> use</c><00:21:40.220><c> cases</c><00:21:40.870><c> for</c><00:21:41.870><c> example</c><00:21:42.490><c> publishing</c>

00:21:43.480 --> 00:21:43.490 align:start position:0%
common use cases for example publishing
 

00:21:43.490 --> 00:21:45.030 align:start position:0%
common use cases for example publishing
request<00:21:43.850><c> body</c><00:21:44.090><c> from</c><00:21:44.299><c> a</c><00:21:44.420><c> string</c><00:21:44.690><c> are</c>

00:21:45.030 --> 00:21:45.040 align:start position:0%
request body from a string are
 

00:21:45.040 --> 00:21:47.320 align:start position:0%
request body from a string are
publishing<00:21:46.040><c> request</c><00:21:46.580><c> body</c><00:21:46.790><c> from</c><00:21:47.059><c> the</c><00:21:47.120><c> file</c>

00:21:47.320 --> 00:21:47.330 align:start position:0%
publishing request body from the file
 

00:21:47.330 --> 00:21:51.549 align:start position:0%
publishing request body from the file
and<00:21:47.630><c> more</c><00:21:48.320><c> besides</c><00:21:50.350><c> similarly</c><00:21:51.350><c> under</c>

00:21:51.549 --> 00:21:51.559 align:start position:0%
and more besides similarly under
 

00:21:51.559 --> 00:21:54.789 align:start position:0%
and more besides similarly under
receiving<00:21:52.100><c> side</c><00:21:52.340><c> the</c><00:21:53.240><c> HTTP</c><00:21:54.049><c> response</c><00:21:54.260><c> body</c>

00:21:54.789 --> 00:21:54.799 align:start position:0%
receiving side the HTTP response body
 

00:21:54.799 --> 00:21:57.490 align:start position:0%
receiving side the HTTP response body
subscriber<00:21:55.370><c> is</c><00:21:55.640><c> a</c><00:21:56.000><c> subtype</c><00:21:56.690><c> of</c><00:21:56.720><c> java.util</c>

00:21:57.490 --> 00:21:57.500 align:start position:0%
subscriber is a subtype of java.util
 

00:21:57.500 --> 00:22:00.220 align:start position:0%
subscriber is a subtype of java.util
concurrent<00:21:57.980><c> flow</c><00:21:58.190><c> subscriber</c><00:21:58.990><c> it</c><00:21:59.990><c> is</c><00:22:00.200><c> a</c>

00:22:00.220 --> 00:22:00.230 align:start position:0%
concurrent flow subscriber it is a
 

00:22:00.230 --> 00:22:03.640 align:start position:0%
concurrent flow subscriber it is a
subscriber<00:22:00.860><c> of</c><00:22:01.070><c> response</c><00:22:01.520><c> body</c><00:22:01.790><c> bytes</c><00:22:02.650><c> again</c>

00:22:03.640 --> 00:22:03.650 align:start position:0%
subscriber of response body bytes again
 

00:22:03.650 --> 00:22:05.980 align:start position:0%
subscriber of response body bytes again
there's<00:22:03.980><c> a</c><00:22:04.100><c> class</c><00:22:04.309><c> body</c><00:22:04.669><c> subscribers</c><00:22:05.390><c> that</c>

00:22:05.980 --> 00:22:05.990 align:start position:0%
there's a class body subscribers that
 

00:22:05.990 --> 00:22:07.690 align:start position:0%
there's a class body subscribers that
provides<00:22:06.260><c> a</c><00:22:06.410><c> number</c><00:22:06.559><c> of</c><00:22:06.710><c> factory</c><00:22:07.160><c> methods</c><00:22:07.520><c> for</c>

00:22:07.690 --> 00:22:07.700 align:start position:0%
provides a number of factory methods for
 

00:22:07.700 --> 00:22:09.460 align:start position:0%
provides a number of factory methods for
creating<00:22:08.179><c> body</c><00:22:08.390><c> subscribers</c><00:22:09.080><c> for</c><00:22:09.200><c> most</c>

00:22:09.460 --> 00:22:09.470 align:start position:0%
creating body subscribers for most
 

00:22:09.470 --> 00:22:13.419 align:start position:0%
creating body subscribers for most
common<00:22:09.770><c> use</c><00:22:10.070><c> cases</c><00:22:11.080><c> for</c><00:22:12.080><c> example</c><00:22:12.429><c> converting</c>

00:22:13.419 --> 00:22:13.429 align:start position:0%
common use cases for example converting
 

00:22:13.429 --> 00:22:16.419 align:start position:0%
common use cases for example converting
response<00:22:13.940><c> body</c><00:22:14.179><c> bytes</c><00:22:14.510><c> into</c><00:22:15.169><c> a</c><00:22:15.320><c> string</c><00:22:15.679><c> or</c>

00:22:16.419 --> 00:22:16.429 align:start position:0%
response body bytes into a string or
 

00:22:16.429 --> 00:22:19.510 align:start position:0%
response body bytes into a string or
streaming<00:22:16.880><c> the</c><00:22:17.090><c> bytes</c><00:22:17.270><c> to</c><00:22:17.480><c> a</c><00:22:17.510><c> file</c><00:22:18.520><c> custom</c>

00:22:19.510 --> 00:22:19.520 align:start position:0%
streaming the bytes to a file custom
 

00:22:19.520 --> 00:22:21.280 align:start position:0%
streaming the bytes to a file custom
publishers<00:22:20.030><c> and</c><00:22:20.270><c> subscribers</c><00:22:20.299><c> can</c><00:22:21.110><c> be</c>

00:22:21.280 --> 00:22:21.290 align:start position:0%
publishers and subscribers can be
 

00:22:21.290 --> 00:22:23.049 align:start position:0%
publishers and subscribers can be
written<00:22:21.500><c> by</c><00:22:22.070><c> implementing</c><00:22:22.580><c> the</c><00:22:22.850><c> body</c>

00:22:23.049 --> 00:22:23.059 align:start position:0%
written by implementing the body
 

00:22:23.059 --> 00:22:27.450 align:start position:0%
written by implementing the body
publisher<00:22:23.570><c> and</c><00:22:23.720><c> body</c><00:22:24.380><c> subscriber</c><00:22:24.950><c> interfaces</c>

00:22:27.450 --> 00:22:27.460 align:start position:0%
publisher and body subscriber interfaces
 

00:22:27.460 --> 00:22:31.659 align:start position:0%
publisher and body subscriber interfaces
to<00:22:28.460><c> summarize</c><00:22:29.140><c> the</c><00:22:30.140><c> standard</c><00:22:30.530><c> HTTP</c><00:22:31.220><c> client</c>

00:22:31.659 --> 00:22:31.669 align:start position:0%
to summarize the standard HTTP client
 

00:22:31.669 --> 00:22:34.620 align:start position:0%
to summarize the standard HTTP client
added<00:22:32.210><c> in</c><00:22:32.330><c> java</c><00:22:32.540><c> 11</c><00:22:32.960><c> is</c><00:22:33.110><c> a</c><00:22:33.620><c> replacement</c><00:22:34.070><c> for</c>

00:22:34.620 --> 00:22:34.630 align:start position:0%
added in java 11 is a replacement for
 

00:22:34.630 --> 00:22:37.600 align:start position:0%
added in java 11 is a replacement for
performing<00:22:35.630><c> HTTP</c><00:22:36.410><c> access</c><00:22:36.620><c> through</c><00:22:37.309><c> the</c><00:22:37.429><c> URL</c>

00:22:37.600 --> 00:22:37.610 align:start position:0%
performing HTTP access through the URL
 

00:22:37.610 --> 00:22:40.690 align:start position:0%
performing HTTP access through the URL
connection<00:22:38.059><c> api</c><00:22:38.740><c> which</c><00:22:39.740><c> as</c><00:22:40.010><c> we've</c><00:22:40.190><c> seen</c><00:22:40.220><c> is</c>

00:22:40.690 --> 00:22:40.700 align:start position:0%
connection api which as we've seen is
 

00:22:40.700 --> 00:22:44.380 align:start position:0%
connection api which as we've seen is
now<00:22:41.030><c> more</c><00:22:41.270><c> than</c><00:22:41.419><c> twenty</c><00:22:41.720><c> years</c><00:22:41.929><c> old</c><00:22:42.730><c> the</c><00:22:43.730><c> HTTP</c>

00:22:44.380 --> 00:22:44.390 align:start position:0%
now more than twenty years old the HTTP
 

00:22:44.390 --> 00:22:47.010 align:start position:0%
now more than twenty years old the HTTP
client<00:22:44.809><c> api</c><00:22:45.080><c> was</c><00:22:45.410><c> incubated</c><00:22:46.010><c> in</c><00:22:46.040><c> jdk</c><00:22:46.610><c> 9</c>

00:22:47.010 --> 00:22:47.020 align:start position:0%
client api was incubated in jdk 9
 

00:22:47.020 --> 00:22:49.840 align:start position:0%
client api was incubated in jdk 9
refreshed<00:22:48.020><c> in</c><00:22:48.200><c> jdk</c><00:22:48.590><c> 10</c><00:22:48.860><c> and</c><00:22:49.100><c> finally</c>

00:22:49.840 --> 00:22:49.850 align:start position:0%
refreshed in jdk 10 and finally
 

00:22:49.850 --> 00:22:53.830 align:start position:0%
refreshed in jdk 10 and finally
standardized<00:22:50.540><c> in</c><00:22:50.720><c> Java</c><00:22:50.960><c> 11</c><00:22:52.330><c> code</c><00:22:53.330><c> using</c><00:22:53.809><c> the</c>

00:22:53.830 --> 00:22:53.840 align:start position:0%
standardized in Java 11 code using the
 

00:22:53.840 --> 00:22:56.470 align:start position:0%
standardized in Java 11 code using the
incubating<00:22:54.440><c> version</c><00:22:54.799><c> of</c><00:22:54.950><c> the</c><00:22:55.040><c> API</c><00:22:55.340><c> will</c><00:22:56.210><c> need</c>

00:22:56.470 --> 00:22:56.480 align:start position:0%
incubating version of the API will need
 

00:22:56.480 --> 00:22:59.620 align:start position:0%
incubating version of the API will need
to<00:22:56.600><c> be</c><00:22:56.690><c> updated</c><00:22:57.169><c> for</c><00:22:57.290><c> Java</c><00:22:57.500><c> 11</c><00:22:58.270><c> minimally</c><00:22:59.270><c> the</c>

00:22:59.620 --> 00:22:59.630 align:start position:0%
to be updated for Java 11 minimally the
 

00:22:59.630 --> 00:23:01.450 align:start position:0%
to be updated for Java 11 minimally the
import<00:23:00.020><c> statements</c><00:23:00.559><c> will</c><00:23:00.710><c> need</c><00:23:00.890><c> to</c><00:23:00.980><c> reflect</c><00:23:01.340><c> a</c>

00:23:01.450 --> 00:23:01.460 align:start position:0%
import statements will need to reflect a
 

00:23:01.460 --> 00:23:04.750 align:start position:0%
import statements will need to reflect a
new<00:23:01.490><c> standard</c><00:23:02.030><c> package</c><00:23:02.330><c> name</c><00:23:03.130><c> the</c><00:23:04.130><c> HTTP</c>

00:23:04.750 --> 00:23:04.760 align:start position:0%
new standard package name the HTTP
 

00:23:04.760 --> 00:23:07.240 align:start position:0%
new standard package name the HTTP
client<00:23:05.179><c> API</c><00:23:05.450><c> uses</c><00:23:06.169><c> more</c><00:23:06.380><c> modern</c><00:23:06.770><c> language</c>

00:23:07.240 --> 00:23:07.250 align:start position:0%
client API uses more modern language
 

00:23:07.250 --> 00:23:09.520 align:start position:0%
client API uses more modern language
features<00:23:07.610><c> like</c><00:23:08.390><c> generics</c><00:23:08.870><c> and</c><00:23:09.049><c> lambda</c><00:23:09.380><c> as</c>

00:23:09.520 --> 00:23:09.530 align:start position:0%
features like generics and lambda as
 

00:23:09.530 --> 00:23:12.190 align:start position:0%
features like generics and lambda as
well<00:23:10.220><c> as</c><00:23:10.370><c> more</c><00:23:10.549><c> modern</c><00:23:10.730><c> platform</c><00:23:11.510><c> api</c><00:23:11.809><c> is</c><00:23:11.929><c> like</c>

00:23:12.190 --> 00:23:12.200 align:start position:0%
well as more modern platform api is like
 

00:23:12.200 --> 00:23:14.320 align:start position:0%
well as more modern platform api is like
compatible<00:23:12.710><c> future</c><00:23:13.040><c> and</c><00:23:13.250><c> reactive</c><00:23:13.970><c> reactive</c>

00:23:14.320 --> 00:23:14.330 align:start position:0%
compatible future and reactive reactive
 

00:23:14.330 --> 00:23:19.150 align:start position:0%
compatible future and reactive reactive
streams<00:23:14.600><c> interfaces</c><00:23:17.290><c> you</c><00:23:18.290><c> can</c><00:23:18.440><c> download</c><00:23:18.650><c> Java</c>

00:23:19.150 --> 00:23:19.160 align:start position:0%
streams interfaces you can download Java
 

00:23:19.160 --> 00:23:22.720 align:start position:0%
streams interfaces you can download Java
now<00:23:19.460><c> 11</c><00:23:19.940><c> now</c><00:23:20.120><c> at</c><00:23:20.390><c> this</c><00:23:20.540><c> URL</c><00:23:21.100><c> please</c><00:23:22.100><c> join</c><00:23:22.400><c> us</c><00:23:22.429><c> at</c>

00:23:22.720 --> 00:23:22.730 align:start position:0%
now 11 now at this URL please join us at
 

00:23:22.730 --> 00:23:26.110 align:start position:0%
now 11 now at this URL please join us at
open<00:23:23.000><c> JDK</c><00:23:23.500><c> follow</c><00:23:24.500><c> us</c><00:23:24.679><c> on</c><00:23:24.890><c> Twitter</c><00:23:25.160><c> at</c><00:23:25.429><c> open</c>

00:23:26.110 --> 00:23:26.120 align:start position:0%
open JDK follow us on Twitter at open
 

00:23:26.120 --> 00:23:30.130 align:start position:0%
open JDK follow us on Twitter at open
JDK<00:23:26.299><c> or</c><00:23:26.840><c> hashtag</c><00:23:27.770><c> Java</c><00:23:28.280><c> 11</c><00:23:28.660><c> my</c><00:23:29.660><c> own</c><00:23:29.809><c> twitter</c>

00:23:30.130 --> 00:23:30.140 align:start position:0%
JDK or hashtag Java 11 my own twitter
 

00:23:30.140 --> 00:23:36.910 align:start position:0%
JDK or hashtag Java 11 my own twitter
handle<00:23:30.559><c> is</c><00:23:30.710><c> at</c><00:23:31.370><c> checker</c><00:23:31.910><c> 999</c><00:23:35.559><c> oracle</c><00:23:36.559><c> is</c><00:23:36.679><c> the</c>

00:23:36.910 --> 00:23:36.920 align:start position:0%
handle is at checker 999 oracle is the
 

00:23:36.920 --> 00:23:39.070 align:start position:0%
handle is at checker 999 oracle is the
stuartt<00:23:37.220><c> of</c><00:23:37.370><c> java</c><00:23:37.640><c> providing</c><00:23:38.360><c> a</c><00:23:38.480><c> large</c><00:23:38.720><c> amount</c>

00:23:39.070 --> 00:23:39.080 align:start position:0%
stuartt of java providing a large amount
 

00:23:39.080 --> 00:23:41.110 align:start position:0%
stuartt of java providing a large amount
of<00:23:39.230><c> development</c><00:23:39.470><c> engineering</c><00:23:40.160><c> funding</c><00:23:40.640><c> for</c>

00:23:41.110 --> 00:23:41.120 align:start position:0%
of development engineering funding for
 

00:23:41.120 --> 00:23:44.800 align:start position:0%
of development engineering funding for
the<00:23:41.210><c> Java</c><00:23:41.450><c> SE</c><00:23:41.780><c> platform</c><00:23:42.320><c> and</c><00:23:42.500><c> open</c><00:23:42.740><c> JDK</c><00:23:43.810><c> Oracle</c>

00:23:44.800 --> 00:23:44.810 align:start position:0%
the Java SE platform and open JDK Oracle
 

00:23:44.810 --> 00:23:47.260 align:start position:0%
the Java SE platform and open JDK Oracle
provides<00:23:45.140><c> leading</c><00:23:45.770><c> class</c><00:23:46.010><c> premier</c><00:23:46.910><c> support</c>

00:23:47.260 --> 00:23:47.270 align:start position:0%
provides leading class premier support
 

00:23:47.270 --> 00:23:49.810 align:start position:0%
provides leading class premier support
for<00:23:47.600><c> a</c><00:23:47.630><c> low</c><00:23:47.780><c> cost</c><00:23:48.160><c> that's</c><00:23:49.160><c> easy</c><00:23:49.400><c> to</c><00:23:49.610><c> purchase</c>

00:23:49.810 --> 00:23:49.820 align:start position:0%
for a low cost that's easy to purchase
 

00:23:49.820 --> 00:23:53.140 align:start position:0%
for a low cost that's easy to purchase
with<00:23:50.600><c> simple</c><00:23:51.020><c> pricing</c><00:23:51.290><c> tiers</c><00:23:51.880><c> thank</c><00:23:52.880><c> you</c><00:23:53.000><c> for</c>

00:23:53.140 --> 00:23:53.150 align:start position:0%
with simple pricing tiers thank you for
 

00:23:53.150 --> 00:23:54.160 align:start position:0%
with simple pricing tiers thank you for
watching

00:23:54.160 --> 00:23:54.170 align:start position:0%
watching
 

00:23:54.170 --> 00:23:58.319 align:start position:0%
watching
[Music]

