WEBVTT
Kind: captions
Language: zh-Hans

00:00:02.960 --> 00:00:08.510
大家好，欢迎来到Java 11 

00:00:06.020 --> 00:00:11.090
概述会议，我叫banal 

00:00:08.510 --> 00:00:14.240
遍历“我是

00:00:11.090 --> 00:00:16.309
我是Java平台的工程

00:00:14.240 --> 00:00:18.770
负责Java SE开发

00:00:16.309 --> 00:00:22.279
我一直在Java平台上工作

00:00:18.770 --> 00:00:25.220
自1998年以来，我一直管理Java 

00:00:22.279 --> 00:00:27.950
自Java 7首次开发平台以来

00:00:25.220 --> 00:00:28.399
我们将讨论新的六个月

00:00:27.950 --> 00:00:31.250
彼此

00:00:28.399 --> 00:00:34.250
其次，我们将概述

00:00:31.250 --> 00:00:37.309
 Java 11中引入的新功能

00:00:34.250 --> 00:00:40.579
第三，我们将讨论主要优势

00:00:37.309 --> 00:00:44.179
升级到Java 11 4，我们将讨论

00:00:40.579 --> 00:00:47.899
最近推出的新的每月Java 

00:00:44.179 --> 00:00:50.359
 AC支持订阅免费的gdk9 

00:00:47.899 --> 00:00:52.969
真正神圣的周期四大gdka 

00:00:50.359 --> 00:00:55.309
我们计划时论文将要使用

00:00:52.969 --> 00:00:58.129
三年了，因为很不幸

00:00:55.309 --> 00:01:01.760
具有大而复杂特征的情况

00:00:58.129 --> 00:01:04.730
驱动项目，我们最终处理了

00:01:01.760 --> 00:01:07.610
放行超过12个月，以确保

00:01:04.730 --> 00:01:11.409
漫长的秋天里有lambda 

00:01:07.610 --> 00:01:14.180
 gdk9模块中的PDA我们已经完全完成

00:01:11.409 --> 00:01:17.000
虽然这个词是模型工作正常

00:01:14.180 --> 00:01:19.969
 Java多年来的进步

00:01:17.000 --> 00:01:22.820
现代已发展了要求

00:01:19.969 --> 00:01:25.100
由于更频繁的软件等级

00:01:22.820 --> 00:01:26.540
安全问题和行业

00:01:25.100 --> 00:01:29.630
尝试使用持续集成

00:01:26.540 --> 00:01:32.659
经常升级的系统都有

00:01:29.630 --> 00:01:35.840
引导我们探索更快，更多

00:01:32.659 --> 00:01:37.579
用他的工作模型可以预测

00:01:35.840 --> 00:01:39.710
杰西卡·柯兰（Jessica Curran） 

00:01:37.579 --> 00:01:42.079
软件行业已经发现

00:01:39.710 --> 00:01:44.390
这是我经常更新的

00:01:42.079 --> 00:01:47.869
使功能交付更快，并且

00:01:44.390 --> 00:01:50.570
更安全的Java也不例外

00:01:47.869 --> 00:01:52.820
通过开放的JDK社区，我们移至

00:01:50.570 --> 00:01:54.259
六个月后，我们再次

00:01:52.820 --> 00:01:56.780
搬到他的六个月

00:01:54.259 --> 00:01:59.539
指导我们也抓住了机会

00:01:56.780 --> 00:02:02.840
修改军营的JDK版本

00:01:59.539 --> 00:02:04.939
我们基于简单的编号方案

00:02:02.840 --> 00:02:08.119
增加专业是数字

00:02:04.939 --> 00:02:10.729
每六个月一个

00:02:08.119 --> 00:02:13.250
总体方案使我们能够交付

00:02:10.729 --> 00:02:16.880
 Java语言生产力的提高

00:02:13.250 --> 00:02:18.440
在六个月内与杰西·皮耶罗（Jesse Pierrot） 

00:02:16.880 --> 00:02:20.990
语言对Java的更改

00:02:18.440 --> 00:02:23.990
规格要求

00:02:20.990 --> 00:02:25.760
在旁边增加多数数

00:02:23.990 --> 00:02:28.820
从八到九的挑战

00:02:25.760 --> 00:02:31.100
总体反馈是，我们

00:02:28.820 --> 00:02:34.580
移至9发现移至10 

00:02:31.100 --> 00:02:37.130
举个例子，海蒂（Heidi）支持

00:02:34.580 --> 00:02:40.430
新的框和文本功能以及制作

00:02:37.130 --> 00:02:42.680
 GDK 10的发布还为时过早

00:02:40.430 --> 00:02:44.990
有一个共同系统需要过渡到

00:02:42.680 --> 00:02:46.880
新模式，但我们仍然乐观

00:02:44.990 --> 00:02:49.820
新六个月的节奏

00:02:46.880 --> 00:02:51.590
我们将继续成功

00:02:49.820 --> 00:02:53.810
正在考虑发布更快的版本

00:02:51.590 --> 00:02:56.890
节奏，我们也承认

00:02:53.810 --> 00:02:59.810
大多数长期支持的人已经

00:02:56.890 --> 00:03:02.590
许多企业的工作负载可能会

00:02:59.810 --> 00:03:05.750
需要更多时间来吸收新的javadi 

00:03:02.590 --> 00:03:08.330
为了解决这个问题，我们决定

00:03:05.750 --> 00:03:11.000
大约每三年确定一次

00:03:08.330 --> 00:03:13.940
六个月的克里斯·卡伦（长期） 

00:03:11.000 --> 00:03:17.720
六个月的模型支持

00:03:13.940 --> 00:03:19.820
而且长期发行或LTS发行不是新的

00:03:17.720 --> 00:03:22.310
在我们的行业中并且已经

00:03:19.820 --> 00:03:25.340
被许多软件发行所使用，例如

00:03:22.310 --> 00:03:28.040
作为Linux，总结六个月

00:03:25.340 --> 00:03:30.380
查询都是关于快节奏的

00:03:28.040 --> 00:03:34.190
创新可以提高绩效并

00:03:30.380 --> 00:03:37.340
持续集成LTS版本是

00:03:34.190 --> 00:03:39.890
关于长期致力于

00:03:37.340 --> 00:03:43.040
提供稳定性和安全性更新

00:03:39.890 --> 00:03:45.470
 y12为我们不断变化的用户

00:03:43.040 --> 00:03:47.390
半径模型我们也看到了

00:03:45.470 --> 00:03:51.140
是解决反馈的合适时机

00:03:47.390 --> 00:03:53.870
 Java繁忙生活中的二进制卡

00:03:51.140 --> 00:03:56.150
许可证或BCL占主导地位

00:03:53.870 --> 00:03:59.540
 Java技术的许可证

00:03:56.150 --> 00:04:00.650
我们已经准备好澄清许可

00:03:59.540 --> 00:04:04.490
向前走

00:04:00.650 --> 00:04:07.400
甲骨文现在将产生真实

00:04:04.490 --> 00:04:10.550
我不记得GDK发行版了吗

00:04:07.400 --> 00:04:12.250
所有相同的OpenJDK源代码

00:04:10.550 --> 00:04:15.650
平台可用

00:04:12.250 --> 00:04:18.770
 oracle open JDK将在

00:04:15.650 --> 00:04:21.069
免费或用户的GPL许可证

00:04:18.770 --> 00:04:24.229
通常习惯于PCL 

00:04:21.069 --> 00:04:25.819
 Oracle下的Oracle JDK女士

00:04:24.229 --> 00:04:28.400
商业许可证

00:04:25.819 --> 00:04:31.699
运输这种过渡非常顺利

00:04:28.400 --> 00:04:34.910
好，我们现在正在生产Oracle 

00:04:31.699 --> 00:04:39.650
 OpenJDK帐单和所有在Oracle中被承认的帐单

00:04:34.910 --> 00:04:42.259
自Billiken以来的GDP，我们现在达到了99％ 

00:04:39.650 --> 00:04:46.130
与Oracle之间的转换打开

00:04:42.259 --> 00:04:49.460
 GDP和Oracle GDP是常见的

00:04:46.130 --> 00:04:51.889
对Oracle JDK 11的误解

00:04:49.460 --> 00:04:54.650
商业和Java不是免费的

00:04:51.889 --> 00:04:57.770
不再是现在我们也是

00:04:54.650 --> 00:05:01.099
制作或我致电Angelique Liberty 

00:04:57.770 --> 00:05:03.590
他们是免费的DP盟友，所以您

00:05:01.099 --> 00:05:07.550
应该考虑新的oracle打开JDK 

00:05:03.590 --> 00:05:09.080
建立为所有事实上的公共更新

00:05:07.550 --> 00:05:11.539
和他在一起总是六个月

00:05:09.080 --> 00:05:16.190
 GDP指导数字

00:05:11.539 --> 00:05:19.430
从80 20 80 40开始时有所不同

00:05:16.190 --> 00:05:21.139
到80 60那你就六个月了

00:05:19.430 --> 00:05:24.110
其平衡大致相同

00:05:21.139 --> 00:05:28.759
范围，因此您需要考虑免费

00:05:24.110 --> 00:05:33.919
用于记录打开的JDK 12 13和14半径

00:05:28.759 --> 00:05:36.020
具有所有编号11 2011更新40和

00:05:33.919 --> 00:05:40.789
 11个椭圆是

00:05:36.020 --> 00:05:43.400
 Java是免费的JDK 11正在交付17 

00:05:40.789 --> 00:05:45.259
新的主要功能我将不介绍所有

00:05:43.400 --> 00:05:47.990
这部影片的新功能

00:05:45.259 --> 00:05:51.139
鼓励您观看其他视频

00:05:47.990 --> 00:05:53.690
我们已经在这张图表上发布了

00:05:51.139 --> 00:05:57.740
内部JVM功能改进

00:05:53.690 --> 00:05:59.900
 GBM的效率，例如戳戳181 

00:05:57.740 --> 00:06:03.650
基于嵌套的访问控制

00:05:59.900 --> 00:06:06.169
我想要的Jeb 209动态常数

00:06:03.650 --> 00:06:09.469
提到杰布321 

00:06:06.169 --> 00:06:11.930
即将毕业的新HTTP堆栈

00:06:09.469 --> 00:06:14.330
从成为功能的孵化器和

00:06:11.930 --> 00:06:15.400
将大大改善HTTP 

00:06:14.330 --> 00:06:20.180
性能

00:06:15.400 --> 00:06:22.580
 Jeb 331提供了非常低的轮廓

00:06:20.180 --> 00:06:25.460
是Google的贡献，因为我们

00:06:22.580 --> 00:06:27.639
宣布我们将删除Java中的Kaba 

00:06:25.460 --> 00:06:31.159
 GE的EE组件

00:06:27.639 --> 00:06:33.770
 Java EE模块中的kolba仍然是

00:06:31.159 --> 00:06:34.700
作为单独的模块提供，以确保

00:06:33.770 --> 00:06:38.420
光滑

00:06:34.700 --> 00:06:41.870
对我们的Java EE用户的构想

00:06:38.420 --> 00:06:45.770
 J11中另一个宣布我们的意图

00:06:41.870 --> 00:06:48.500
现在已经过时的国民

00:06:45.770 --> 00:06:51.200
 Java有一个模块系统，我们可以更多

00:06:48.500 --> 00:06:53.420
明确将可选模块与

00:06:51.200 --> 00:06:55.570
核心平台，让那些模块

00:06:53.420 --> 00:06:58.130
按照自己的节奏发展

00:06:55.570 --> 00:07:02.030
当归11我们正在推出新的

00:06:58.130 --> 00:07:05.300
简化新Java入门的功能

00:07:02.030 --> 00:07:07.880
 aggeliki 11开发人员可让您

00:07:05.300 --> 00:07:10.220
从一个启​​动单个Java源文件

00:07:07.880 --> 00:07:13.940
单个命令，而不是前两个

00:07:10.220 --> 00:07:16.280
一步编译，然后运行

00:07:13.940 --> 00:07:19.790
减少摩擦的方向

00:07:16.280 --> 00:07:22.130
对于新开发者启动器，我们非常

00:07:19.790 --> 00:07:27.550
激动地推出GD 11 

00:07:22.130 --> 00:07:31.760
实验性新低延迟G戳戳333 

00:07:27.550 --> 00:07:34.730
 VG的VDC实现了一种新颖的方法

00:07:31.760 --> 00:07:37.310
逗弄并发

00:07:34.730 --> 00:07:40.850
智慧与障碍的集合

00:07:37.310 --> 00:07:43.400
可以提供可预测的

00:07:40.850 --> 00:07:46.940
过去几毫秒的时间很短

00:07:43.400 --> 00:07:49.760
全部都在TB级

00:07:46.940 --> 00:07:53.780
这些只有一小撮

00:07:49.760 --> 00:07:56.150
减少少于15个姿势

00:07:53.780 --> 00:07:59.660
 GC要求我们查看

00:07:56.150 --> 00:08:02.810
一次整个JVM Layton的GC 

00:07:59.660 --> 00:08:05.810
编译器让我们感到非常兴奋

00:08:02.810 --> 00:08:08.060
 GC将采取的未来

00:08:05.810 --> 00:08:10.820
考虑到硬件内存延迟

00:08:08.060 --> 00:08:13.150
优化对象的特征

00:08:10.820 --> 00:08:15.440
在不同地区的位置

00:08:13.150 --> 00:08:17.630
安全是一个问题

00:08:15.440 --> 00:08:19.940
关键要素的关键部分

00:08:17.630 --> 00:08:22.670
我们大规模的Java区块

00:08:19.940 --> 00:08:26.060
投资安全性以保留Java 

00:08:22.670 --> 00:08:30.560
平台生病的刺戳332 

00:08:26.060 --> 00:08:33.650
正在实施TLS 1.3 TLS 1.3是

00:08:30.560 --> 00:08:36.169
 TLS协议的主要整体

00:08:33.650 --> 00:08:37.510
提供重要的安全性

00:08:36.169 --> 00:08:40.700
性能

00:08:37.510 --> 00:08:44.990
 Kilis受伤3被先前取代

00:08:40.700 --> 00:08:47.270
 TLS版本，包括版本1 

00:08:44.990 --> 00:08:49.460
我们也很高兴跟随

00:08:47.270 --> 00:08:52.580
通过我们对开放的承诺

00:08:49.460 --> 00:08:55.630
来源Java fly Recorder商业版

00:08:52.580 --> 00:08:58.460
 Java fly Recorder提供的功能

00:08:55.630 --> 00:09:02.090
平均极低的申请

00:08:58.460 --> 00:09:06.080
功能创新和归档窗口

00:09:02.090 --> 00:09:08.180
始终在JVM能量内深入计费

00:09:06.080 --> 00:09:10.490
在生产部署中

00:09:08.180 --> 00:09:13.040
关键任务Rockler更多

00:09:10.490 --> 00:09:15.980
准确分配与

00:09:13.040 --> 00:09:18.470
自动内存泄漏检测

00:09:15.980 --> 00:09:21.290
很棒的功能有很多原因

00:09:18.470 --> 00:09:24.530
为什么要升级到GDP水平

00:09:21.290 --> 00:09:28.160
尤其是如果您还在使用GD GD 

00:09:24.530 --> 00:09:31.010
不能九个专用能量TP 11 

00:09:28.160 --> 00:09:32.690
引入了显着的稳定性

00:09:31.010 --> 00:09:36.200
功能和性能

00:09:32.690 --> 00:09:36.740
与GDP相比的改善

00:09:36.200 --> 00:09:39.620
几个

00:09:36.740 --> 00:09:43.460
紧凑的琴弦减少了占地面积， 

00:09:39.620 --> 00:09:47.720
开始减少30％，减少20％ 

00:09:43.460 --> 00:09:50.630
 star c2g编译器crypto固有

00:09:47.720 --> 00:09:54.560
英特尔最高30％的加密货币政府

00:09:50.630 --> 00:09:57.670
支持g1的总体改进

00:09:54.560 --> 00:10:01.040
成为AI中的默认GC引擎

00:09:57.670 --> 00:10:04.130
应用程序类数据共享高达30％ 

00:10:01.040 --> 00:10:06.410
占地20％的改进之星

00:10:04.130 --> 00:10:09.890
减少了另一个商业特征

00:10:06.410 --> 00:10:13.030
我们开源了Java模式

00:10:09.890 --> 00:10:15.230
强烈建议您对GDP表示赞赏

00:10:13.030 --> 00:10:17.780
我们最近很高兴

00:10:15.230 --> 00:10:20.420
推出了新的简化版

00:10:17.780 --> 00:10:22.880
负担得起的Java EE支持订阅

00:10:20.420 --> 00:10:26.510
给我们的企业客户新的

00:10:22.880 --> 00:10:30.470
定价模式为每台相机$ 25 

00:10:26.510 --> 00:10:33.980
服务器的处理器$ 2.50每月

00:10:30.470 --> 00:10:35.690
每位用户可获得desta大幅折扣

00:10:33.980 --> 00:10:38.090
可用于大型部署

00:10:35.690 --> 00:10:40.880
例如，如果您正在寻找

00:10:38.090 --> 00:10:45.140
 20,000个处理器支持，如果我们

00:10:40.880 --> 00:10:47.240
在我们的用户中以12美元的50％折扣

00:10:45.140 --> 00:10:50.690
准备使Java支持负担得起

00:10:47.240 --> 00:10:53.260
给每个人我们的客户

00:10:50.690 --> 00:10:56.150
查找有关提供的更多信息

00:10:53.260 --> 00:10:59.210
为什么选择Oracle商业版

00:10:56.150 --> 00:11:01.430
支持只是因为您想要支持

00:10:59.210 --> 00:11:03.740
来自Java平台的ste world 

00:11:01.430 --> 00:11:06.320
领导该公司的公司

00:11:03.740 --> 00:11:09.470
 NDK中Java的开发

00:11:06.320 --> 00:11:12.080
最深的专业知识来解决你们中的任何一个

00:11:09.470 --> 00:11:15.200
各个领域的关键任务问题

00:11:12.080 --> 00:11:19.460
从客户端安全到

00:11:15.200 --> 00:11:23.150
库GBM GC的运行时JIT编译器

00:11:19.460 --> 00:11:25.010
语言的可服务性超过90％ 

00:11:23.150 --> 00:11:28.550
 Java平台的开发

00:11:25.010 --> 00:11:30.890
由Oracle工程师在开放GDP中完成

00:11:28.550 --> 00:11:33.590
您将获得性能

00:11:30.890 --> 00:11:34.480
稳定性和更新直接来自

00:11:33.590 --> 00:11:37.430
甲骨文

00:11:34.480 --> 00:11:40.520
除了JDK的需求支持之外，您还将

00:11:37.430 --> 00:11:44.420
可以使用GT钥匙八和七十

00:11:40.520 --> 00:11:47.000
 3个更新，每24个7支持和访问

00:11:44.420 --> 00:11:49.490
对重要的错误修复程序进行修复

00:11:47.000 --> 00:11:52.940
包含在所有公开资料库中

00:11:49.490 --> 00:11:56.750
这些只需简单的每月订阅

00:11:52.940 --> 00:12:00.020
价格按照您使用的方式支付，按您的价格支付

00:11:56.750 --> 00:12:02.210
总而言之，我们的业务发展顺利

00:12:00.020 --> 00:12:04.520
加快了创新的步伐

00:12:02.210 --> 00:12:07.040
 Java轻松六个月

00:12:04.520 --> 00:12:10.340
提供稳定的安全性和

00:12:07.040 --> 00:12:13.730
我对企业用户的承诺

00:12:10.340 --> 00:12:16.700
诚挚的关键思想技能GDK 11是

00:12:13.730 --> 00:12:20.000
充满了创新的安全性

00:12:16.700 --> 00:12:22.610
 DVD和性能我们会跟进

00:12:20.000 --> 00:12:26.090
我们致力于开源我们所有的

00:12:22.610 --> 00:12:29.600
商业功能gf4黑曜石和

00:12:26.090 --> 00:12:31.400
优势，使Java更开放，更自由

00:12:29.600 --> 00:12:33.800
我们简化了

00:12:31.400 --> 00:12:36.550
通过过渡出Java许可

00:12:33.800 --> 00:12:39.800
 BCA许可证并立即交付，但

00:12:36.550 --> 00:12:42.890
 oracle在免费GPL下打开GD密钥

00:12:39.800 --> 00:12:44.060
许可证和Oracle GDP及其

00:12:42.890 --> 00:12:46.970
商业许可证

00:12:44.060 --> 00:12:49.430
支持，我们将继续购买

00:12:46.970 --> 00:12:52.310
免费，我们推出了新的支持

00:12:49.430 --> 00:12:55.060
订阅使Java成为长期合作伙伴

00:12:52.310 --> 00:12:58.120
支持每个人都负担得起的

00:12:55.060 --> 00:13:01.060
除了Java 11，我们还有一个非常扎实的

00:12:58.120 --> 00:13:02.500
我想要的令人兴奋的技术

00:13:01.060 --> 00:13:06.390
借此机会特别

00:13:02.500 --> 00:13:09.280
感谢为GE 11做出贡献的所有人

00:13:06.390 --> 00:13:11.860
让我们继续在

00:13:09.280 --> 00:13:14.160
 Java平台一起感谢

00:13:11.860 --> 00:13:14.160
观看

