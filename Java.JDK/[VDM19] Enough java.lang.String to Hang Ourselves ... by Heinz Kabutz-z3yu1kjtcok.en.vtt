WEBVTT
Kind: captions
Language: en

00:00:00.030 --> 00:00:03.949 align:start position:0%
 
so<00:00:00.930><c> I</c><00:00:00.960><c> grew</c><00:00:01.170><c> up</c><00:00:01.230><c> and</c><00:00:01.469><c> kept</c><00:00:02.070><c> on</c><00:00:02.389><c> next</c><00:00:03.389><c> to</c><00:00:03.600><c> an</c>

00:00:03.949 --> 00:00:03.959 align:start position:0%
so I grew up and kept on next to an
 

00:00:03.959 --> 00:00:07.340 align:start position:0%
so I grew up and kept on next to an
Italian<00:00:04.500><c> family</c><00:00:05.480><c> so</c><00:00:06.480><c> we</c><00:00:06.600><c> were</c><00:00:06.750><c> a</c><00:00:06.810><c> German</c>

00:00:07.340 --> 00:00:07.350 align:start position:0%
Italian family so we were a German
 

00:00:07.350 --> 00:00:10.070 align:start position:0%
Italian family so we were a German
family<00:00:07.560><c> mixed</c><00:00:08.099><c> in</c><00:00:08.220><c> Italian</c><00:00:08.639><c> family</c><00:00:09.120><c> and</c><00:00:09.870><c> we</c>

00:00:10.070 --> 00:00:10.080 align:start position:0%
family mixed in Italian family and we
 

00:00:10.080 --> 00:00:11.990 align:start position:0%
family mixed in Italian family and we
got<00:00:10.260><c> on</c><00:00:10.410><c> really</c><00:00:10.740><c> well</c><00:00:11.099><c> except</c><00:00:11.730><c> there</c><00:00:11.820><c> was</c><00:00:11.969><c> one</c>

00:00:11.990 --> 00:00:12.000 align:start position:0%
got on really well except there was one
 

00:00:12.000 --> 00:00:15.849 align:start position:0%
got on really well except there was one
day<00:00:12.540><c> we</c><00:00:13.380><c> we</c><00:00:13.500><c> didn't</c><00:00:13.740><c> like</c><00:00:13.950><c> them</c><00:00:14.190><c> very</c><00:00:14.219><c> much</c>

00:00:15.849 --> 00:00:15.859 align:start position:0%
day we we didn't like them very much
 

00:00:15.859 --> 00:00:20.779 align:start position:0%
day we we didn't like them very much
no<00:00:16.880><c> 1982</c><00:00:18.350><c> July</c><00:00:19.350><c> the</c><00:00:19.410><c> live</c><00:00:19.800><c> but</c><00:00:20.279><c> besides</c><00:00:20.640><c> that</c>

00:00:20.779 --> 00:00:20.789 align:start position:0%
no 1982 July the live but besides that
 

00:00:20.789 --> 00:00:25.220 align:start position:0%
no 1982 July the live but besides that
we<00:00:21.060><c> got</c><00:00:21.210><c> on</c><00:00:21.330><c> very</c><00:00:21.359><c> well</c><00:00:23.119><c> so</c><00:00:24.119><c> let's</c><00:00:24.960><c> have</c><00:00:25.050><c> a</c><00:00:25.109><c> look</c>

00:00:25.220 --> 00:00:25.230 align:start position:0%
we got on very well so let's have a look
 

00:00:25.230 --> 00:00:32.959 align:start position:0%
we got on very well so let's have a look
at<00:00:25.410><c> Java</c><00:00:26.250><c> names</c><00:00:26.430><c> string</c><00:00:26.849><c> Oh</c><00:00:31.340><c> missile</c><00:00:32.340><c> is</c><00:00:32.610><c> here</c>

00:00:32.959 --> 00:00:32.969 align:start position:0%
at Java names string Oh missile is here
 

00:00:32.969 --> 00:00:34.819 align:start position:0%
at Java names string Oh missile is here
we've<00:00:33.059><c> got</c><00:00:33.180><c> a</c><00:00:33.239><c> little</c><00:00:33.600><c> way</c><00:00:34.380><c> in</c><00:00:34.559><c> which</c><00:00:34.710><c> we</c>

00:00:34.819 --> 00:00:34.829 align:start position:0%
we've got a little way in which we
 

00:00:34.829 --> 00:00:38.209 align:start position:0%
we've got a little way in which we
convert<00:00:35.399><c> an</c><00:00:35.670><c> int</c><00:00:36.000><c> to</c><00:00:36.300><c> a</c><00:00:36.809><c> string</c><00:00:37.350><c> and</c><00:00:37.770><c> the</c>

00:00:38.209 --> 00:00:38.219 align:start position:0%
convert an int to a string and the
 

00:00:38.219 --> 00:00:46.220 align:start position:0%
convert an int to a string and the
question<00:00:38.610><c> is</c><00:00:38.760><c> which</c><00:00:39.629><c> is</c><00:00:39.660><c> the</c><00:00:39.840><c> best</c><00:00:39.899><c> way</c><00:00:45.230><c> what</c>

00:00:46.220 --> 00:00:46.230 align:start position:0%
question is which is the best way what
 

00:00:46.230 --> 00:00:54.830 align:start position:0%
question is which is the best way what
jdk<00:00:47.390><c> that's</c><00:00:48.390><c> a</c><00:00:48.450><c> good</c><00:00:48.570><c> question</c><00:00:52.850><c> was</c><00:00:53.850><c> it</c><00:00:54.059><c> what</c>

00:00:54.830 --> 00:00:54.840 align:start position:0%
jdk that's a good question was it what
 

00:00:54.840 --> 00:00:58.849 align:start position:0%
jdk that's a good question was it what
Teddy<00:00:55.079><c> K</c><00:00:55.289><c> good</c><00:00:55.710><c> question</c><00:00:57.649><c> section</c><00:00:58.649><c> where</c><00:00:58.739><c> it</c>

00:00:58.849 --> 00:00:58.859 align:start position:0%
Teddy K good question section where it
 

00:00:58.859 --> 00:01:01.100 align:start position:0%
Teddy K good question section where it
was

00:01:01.100 --> 00:01:01.110 align:start position:0%
 
 

00:01:01.110 --> 00:01:13.310 align:start position:0%
 
okay<00:01:11.300><c> so</c><00:01:12.300><c> one</c><00:01:12.480><c> way</c><00:01:12.600><c> is</c><00:01:12.630><c> you</c><00:01:12.810><c> can</c><00:01:12.900><c> just</c><00:01:13.110><c> do</c><00:01:13.230><c> the</c>

00:01:13.310 --> 00:01:13.320 align:start position:0%
okay so one way is you can just do the
 

00:01:13.320 --> 00:01:16.210 align:start position:0%
okay so one way is you can just do the
lazy<00:01:13.500><c> way</c><00:01:13.910><c> double</c><00:01:14.910><c> quotes</c><00:01:15.120><c> plus</c><00:01:15.450><c> the</c><00:01:15.930><c> well</c>

00:01:16.210 --> 00:01:16.220 align:start position:0%
lazy way double quotes plus the well
 

00:01:16.220 --> 00:01:18.140 align:start position:0%
lazy way double quotes plus the well
which<00:01:17.220><c> of</c><00:01:17.430><c> course</c><00:01:17.460><c> you</c><00:01:17.670><c> should</c><00:01:17.880><c> never</c><00:01:18.030><c> do</c>

00:01:18.140 --> 00:01:18.150 align:start position:0%
which of course you should never do
 

00:01:18.150 --> 00:01:19.610 align:start position:0%
which of course you should never do
because<00:01:18.270><c> you</c><00:01:18.840><c> shouldn't</c><00:01:19.050><c> be</c><00:01:19.140><c> lazy</c><00:01:19.380><c> as</c><00:01:19.590><c> a</c>

00:01:19.610 --> 00:01:19.620 align:start position:0%
because you shouldn't be lazy as a
 

00:01:19.620 --> 00:01:21.860 align:start position:0%
because you shouldn't be lazy as a
programmer<00:01:20.070><c> the</c><00:01:20.850><c> other</c><00:01:20.970><c> one</c><00:01:21.150><c> is</c><00:01:21.330><c> if</c><00:01:21.479><c> your</c><00:01:21.690><c> to</c>

00:01:21.860 --> 00:01:21.870 align:start position:0%
programmer the other one is if your to
 

00:01:21.870 --> 00:01:24.680 align:start position:0%
programmer the other one is if your to
string<00:01:22.170><c> others</c><00:01:22.770><c> interests</c><00:01:23.040><c> of</c><00:01:23.100><c> value</c><00:01:23.400><c> of</c><00:01:23.690><c> the</c>

00:01:24.680 --> 00:01:24.690 align:start position:0%
string others interests of value of the
 

00:01:24.690 --> 00:01:26.480 align:start position:0%
string others interests of value of the
in<00:01:24.810><c> string</c><00:01:25.020><c> that</c><00:01:25.140><c> value</c><00:01:25.440><c> of</c><00:01:25.560><c> an</c><00:01:26.010><c> integer</c><00:01:26.370><c> of</c>

00:01:26.480 --> 00:01:26.490 align:start position:0%
in string that value of an integer of
 

00:01:26.490 --> 00:01:29.150 align:start position:0%
in string that value of an integer of
Kate<00:01:26.700><c> integer</c><00:01:27.180><c> so</c><00:01:27.600><c> who</c><00:01:28.290><c> sees</c><00:01:28.500><c> the</c><00:01:28.680><c> first</c><00:01:28.920><c> is</c>

00:01:29.150 --> 00:01:29.160 align:start position:0%
Kate integer so who sees the first is
 

00:01:29.160 --> 00:01:32.450 align:start position:0%
Kate integer so who sees the first is
the<00:01:29.280><c> fastest</c><00:01:29.760><c> way</c><00:01:30.110><c> let's</c><00:01:31.110><c> say</c><00:01:31.290><c> Java</c><00:01:31.530><c> 12</c><00:01:31.979><c> let's</c>

00:01:32.450 --> 00:01:32.460 align:start position:0%
the fastest way let's say Java 12 let's
 

00:01:32.460 --> 00:01:34.070 align:start position:0%
the fastest way let's say Java 12 let's
take<00:01:32.640><c> cyclocross</c><00:01:33.030><c> why</c><00:01:33.750><c> not</c>

00:01:34.070 --> 00:01:34.080 align:start position:0%
take cyclocross why not
 

00:01:34.080 --> 00:01:38.420 align:start position:0%
take cyclocross why not
are<00:01:34.770><c> you</c><00:01:34.950><c> have</c><00:01:35.250><c> used</c><00:01:35.490><c> other</c><00:01:35.610><c> 12</c><00:01:35.940><c> okay</c><00:01:37.190><c> who</c><00:01:38.190><c> sees</c>

00:01:38.420 --> 00:01:38.430 align:start position:0%
are you have used other 12 okay who sees
 

00:01:38.430 --> 00:01:43.550 align:start position:0%
are you have used other 12 okay who sees
a<00:01:38.460><c> second</c><00:01:38.940><c> this</c><00:01:39.090><c> faster</c><00:01:42.200><c> who</c><00:01:43.200><c> see</c><00:01:43.380><c> it's</c><00:01:43.500><c> a</c>

00:01:43.550 --> 00:01:43.560 align:start position:0%
a second this faster who see it's a
 

00:01:43.560 --> 00:01:45.260 align:start position:0%
a second this faster who see it's a
third<00:01:43.590><c> as</c><00:01:43.920><c> a</c><00:01:43.979><c> fastest</c><00:01:44.369><c> way</c><00:01:44.460><c> to</c><00:01:44.490><c> do</c><00:01:44.729><c> it</c><00:01:44.790><c> it's</c>

00:01:45.260 --> 00:01:45.270 align:start position:0%
third as a fastest way to do it it's
 

00:01:45.270 --> 00:01:48.109 align:start position:0%
third as a fastest way to do it it's
gonna<00:01:45.390><c> be</c><00:01:45.509><c> somebody</c><00:01:45.840><c> saying</c><00:01:46.050><c> a</c><00:01:46.140><c> third</c><00:01:47.119><c> okay</c>

00:01:48.109 --> 00:01:48.119 align:start position:0%
gonna be somebody saying a third okay
 

00:01:48.119 --> 00:01:49.760 align:start position:0%
gonna be somebody saying a third okay
pretty<00:01:48.360><c> thank</c><00:01:48.630><c> you</c>

00:01:49.760 --> 00:01:49.770 align:start position:0%
pretty thank you
 

00:01:49.770 --> 00:01:53.270 align:start position:0%
pretty thank you
this<00:01:50.430><c> is</c><00:01:50.610><c> a</c><00:01:50.670><c> fourth</c><00:01:50.970><c> is</c><00:01:51.119><c> faster</c><00:01:51.979><c> okay</c><00:01:52.979><c> we're</c>

00:01:53.270 --> 00:01:53.280 align:start position:0%
this is a fourth is faster okay we're
 

00:01:53.280 --> 00:01:55.550 align:start position:0%
this is a fourth is faster okay we're
getting<00:01:53.369><c> a</c><00:01:53.520><c> bit</c><00:01:53.640><c> warmer</c><00:01:54.000><c> classy</c><00:01:54.540><c> and</c><00:01:54.690><c> the</c>

00:01:55.550 --> 00:01:55.560 align:start position:0%
getting a bit warmer classy and the
 

00:01:55.560 --> 00:02:01.639 align:start position:0%
getting a bit warmer classy and the
fifth<00:01:56.009><c> one</c><00:01:59.360><c> first</c><00:02:00.360><c> one</c><00:02:00.509><c> okay</c><00:02:00.840><c> very</c><00:02:01.170><c> good</c>

00:02:01.639 --> 00:02:01.649 align:start position:0%
fifth one first one okay very good
 

00:02:01.649 --> 00:02:04.340 align:start position:0%
fifth one first one okay very good
and<00:02:02.240><c> another</c><00:02:03.240><c> one</c><00:02:03.479><c> another</c><00:02:03.720><c> city</c><00:02:03.990><c> question</c>

00:02:04.340 --> 00:02:04.350 align:start position:0%
and another one another city question
 

00:02:04.350 --> 00:02:05.660 align:start position:0%
and another one another city question
these<00:02:04.560><c> are</c><00:02:04.619><c> all</c><00:02:04.740><c> silly</c><00:02:05.009><c> questions</c><00:02:05.400><c> just</c><00:02:05.580><c> to</c>

00:02:05.660 --> 00:02:05.670 align:start position:0%
these are all silly questions just to
 

00:02:05.670 --> 00:02:10.729 align:start position:0%
these are all silly questions just to
get<00:02:05.820><c> us</c><00:02:05.909><c> thinking</c><00:02:06.090><c> but</c><00:02:06.450><c> and</c><00:02:09.500><c> which</c><00:02:10.500><c> is</c><00:02:10.649><c> the</c>

00:02:10.729 --> 00:02:10.739 align:start position:0%
get us thinking but and which is the
 

00:02:10.739 --> 00:02:12.710 align:start position:0%
get us thinking but and which is the
fastest<00:02:11.130><c> way</c><00:02:11.310><c> to</c><00:02:11.340><c> append</c><00:02:12.120><c> strings</c><00:02:12.360><c> together</c>

00:02:12.710 --> 00:02:12.720 align:start position:0%
fastest way to append strings together
 

00:02:12.720 --> 00:02:16.009 align:start position:0%
fastest way to append strings together
so<00:02:13.080><c> the</c><00:02:13.170><c> first</c><00:02:13.380><c> one</c><00:02:13.650><c> I</c><00:02:13.890><c> am</c><00:02:14.640><c> I'm</c><00:02:15.150><c> using</c><00:02:15.660><c> plus</c>

00:02:16.009 --> 00:02:16.019 align:start position:0%
so the first one I am I'm using plus
 

00:02:16.019 --> 00:02:18.170 align:start position:0%
so the first one I am I'm using plus
which<00:02:16.350><c> of</c><00:02:16.530><c> course</c><00:02:16.560><c> is</c><00:02:16.950><c> the</c><00:02:16.980><c> can't</c><00:02:17.670><c> be</c><00:02:17.790><c> fastest</c>

00:02:18.170 --> 00:02:18.180 align:start position:0%
which of course is the can't be fastest
 

00:02:18.180 --> 00:02:21.800 align:start position:0%
which of course is the can't be fastest
because<00:02:18.269><c> it's</c><00:02:18.920><c> shortest</c><00:02:20.420><c> false</c><00:02:21.420><c> code</c><00:02:21.630><c> has</c><00:02:21.780><c> to</c>

00:02:21.800 --> 00:02:21.810 align:start position:0%
because it's shortest false code has to
 

00:02:21.810 --> 00:02:24.860 align:start position:0%
because it's shortest false code has to
be<00:02:22.019><c> long</c><00:02:22.200><c> of</c><00:02:22.380><c> a</c><00:02:22.500><c> bus</c><00:02:22.940><c> the</c><00:02:23.940><c> second</c><00:02:24.330><c> one</c><00:02:24.480><c> I'm</c>

00:02:24.860 --> 00:02:24.870 align:start position:0%
be long of a bus the second one I'm
 

00:02:24.870 --> 00:02:26.780 align:start position:0%
be long of a bus the second one I'm
making<00:02:25.350><c> a</c><00:02:25.410><c> string</c><00:02:25.680><c> builder</c><00:02:25.830><c> and</c><00:02:26.160><c> I'm</c><00:02:26.430><c> sure</c><00:02:26.640><c> if</c>

00:02:26.780 --> 00:02:26.790 align:start position:0%
making a string builder and I'm sure if
 

00:02:26.790 --> 00:02:28.250 align:start position:0%
making a string builder and I'm sure if
you've<00:02:26.940><c> worked</c><00:02:27.209><c> with</c><00:02:27.420><c> code</c><00:02:27.690><c> long</c><00:02:27.959><c> enough</c>

00:02:28.250 --> 00:02:28.260 align:start position:0%
you've worked with code long enough
 

00:02:28.260 --> 00:02:31.789 align:start position:0%
you've worked with code long enough
you've<00:02:28.739><c> seen</c><00:02:29.070><c> code</c><00:02:29.370><c> like</c><00:02:29.610><c> that</c><00:02:29.640><c> and</c><00:02:30.560><c> the</c><00:02:31.560><c> third</c>

00:02:31.789 --> 00:02:31.799 align:start position:0%
you've seen code like that and the third
 

00:02:31.799 --> 00:02:33.800 align:start position:0%
you've seen code like that and the third
one<00:02:32.040><c> you</c><00:02:32.280><c> see</c><00:02:32.910><c> the</c><00:02:33.030><c> things</c><00:02:33.269><c> when</c><00:02:33.450><c> you</c><00:02:33.540><c> a</c><00:02:33.570><c> string</c>

00:02:33.800 --> 00:02:33.810 align:start position:0%
one you see the things when you a string
 

00:02:33.810 --> 00:02:35.570 align:start position:0%
one you see the things when you a string
builder<00:02:33.930><c> you're</c><00:02:34.170><c> you're</c><00:02:34.410><c> making</c><00:02:34.680><c> new</c><00:02:34.860><c> char</c><00:02:35.310><c> s</c>

00:02:35.570 --> 00:02:35.580 align:start position:0%
builder you're you're making new char s
 

00:02:35.580 --> 00:02:38.870 align:start position:0%
builder you're you're making new char s
all<00:02:35.820><c> the</c><00:02:35.880><c> time</c><00:02:36.060><c> so</c><00:02:36.769><c> the</c><00:02:37.769><c> third</c><00:02:37.980><c> one</c><00:02:38.190><c> we</c><00:02:38.760><c> have</c>

00:02:38.870 --> 00:02:38.880 align:start position:0%
all the time so the third one we have
 

00:02:38.880 --> 00:02:40.729 align:start position:0%
all the time so the third one we have
first<00:02:39.120><c> working</c><00:02:39.480><c> out</c><00:02:39.600><c> how</c><00:02:39.900><c> big</c><00:02:40.230><c> is</c><00:02:40.380><c> the</c><00:02:40.500><c> array</c>

00:02:40.729 --> 00:02:40.739 align:start position:0%
first working out how big is the array
 

00:02:40.739 --> 00:02:43.370 align:start position:0%
first working out how big is the array
is<00:02:40.799><c> supposed</c><00:02:41.190><c> to</c><00:02:41.280><c> be</c><00:02:41.430><c> and</c><00:02:41.670><c> then</c><00:02:42.269><c> we</c><00:02:42.510><c> we</c><00:02:43.019><c> add</c><00:02:43.200><c> all</c>

00:02:43.370 --> 00:02:43.380 align:start position:0%
is supposed to be and then we we add all
 

00:02:43.380 --> 00:02:45.740 align:start position:0%
is supposed to be and then we we add all
the<00:02:43.470><c> strings</c><00:02:43.709><c> together</c><00:02:44.209><c> so</c><00:02:45.209><c> who</c><00:02:45.360><c> says</c><00:02:45.600><c> the</c>

00:02:45.740 --> 00:02:45.750 align:start position:0%
the strings together so who says the
 

00:02:45.750 --> 00:02:50.660 align:start position:0%
the strings together so who says the
first<00:02:45.989><c> is</c><00:02:46.140><c> the</c><00:02:46.230><c> fastest</c><00:02:47.510><c> okay</c><00:02:49.459><c> which</c><00:02:50.459><c> trade</c>

00:02:50.660 --> 00:02:50.670 align:start position:0%
first is the fastest okay which trade
 

00:02:50.670 --> 00:02:52.280 align:start position:0%
first is the fastest okay which trade
okay<00:02:51.080><c> okay</c>

00:02:52.280 --> 00:02:52.290 align:start position:0%
okay okay
 

00:02:52.290 --> 00:02:54.380 align:start position:0%
okay okay
anything<00:02:52.739><c> after</c><00:02:52.890><c> Java</c><00:02:53.250><c> 7</c><00:02:53.459><c> Java</c><00:02:53.940><c> 7</c><00:02:54.150><c> and</c>

00:02:54.380 --> 00:02:54.390 align:start position:0%
anything after Java 7 Java 7 and
 

00:02:54.390 --> 00:02:55.850 align:start position:0%
anything after Java 7 Java 7 and
afterwards<00:02:54.840><c> who</c><00:02:55.080><c> says</c><00:02:55.290><c> the</c><00:02:55.410><c> first</c><00:02:55.650><c> is</c><00:02:55.830><c> a</c>

00:02:55.850 --> 00:02:55.860 align:start position:0%
afterwards who says the first is a
 

00:02:55.860 --> 00:03:00.560 align:start position:0%
afterwards who says the first is a
fastest<00:02:57.170><c> okay</c><00:02:58.200><c> who</c><00:02:59.160><c> says</c><00:02:59.579><c> the</c><00:02:59.940><c> second</c><00:03:00.420><c> is</c><00:03:00.540><c> a</c>

00:03:00.560 --> 00:03:00.570 align:start position:0%
fastest okay who says the second is a
 

00:03:00.570 --> 00:03:03.710 align:start position:0%
fastest okay who says the second is a
fastest<00:03:01.700><c> okay</c><00:03:02.700><c> good</c><00:03:03.120><c> very</c><00:03:03.510><c> good</c>

00:03:03.710 --> 00:03:03.720 align:start position:0%
fastest okay good very good
 

00:03:03.720 --> 00:03:05.690 align:start position:0%
fastest okay good very good
who<00:03:04.650><c> do</c><00:03:04.709><c> you</c><00:03:04.769><c> say</c><00:03:04.950><c> it's</c><00:03:05.070><c> a</c><00:03:05.130><c> third</c><00:03:05.400><c> is</c><00:03:05.579><c> the</c>

00:03:05.690 --> 00:03:05.700 align:start position:0%
who do you say it's a third is the
 

00:03:05.700 --> 00:03:09.080 align:start position:0%
who do you say it's a third is the
fastest<00:03:07.040><c> okay</c><00:03:08.040><c> now</c><00:03:08.190><c> who</c><00:03:08.370><c> didn't</c><00:03:08.670><c> put</c><00:03:08.790><c> up</c><00:03:08.910><c> their</c>

00:03:09.080 --> 00:03:09.090 align:start position:0%
fastest okay now who didn't put up their
 

00:03:09.090 --> 00:03:10.520 align:start position:0%
fastest okay now who didn't put up their
hand<00:03:09.270><c> anybody</c><00:03:09.660><c> didn't</c><00:03:09.870><c> program</c><00:03:10.170><c> please</c><00:03:10.349><c> what</c>

00:03:10.520 --> 00:03:10.530 align:start position:0%
hand anybody didn't program please what
 

00:03:10.530 --> 00:03:11.890 align:start position:0%
hand anybody didn't program please what
granda

00:03:11.890 --> 00:03:11.900 align:start position:0%
granda
 

00:03:11.900 --> 00:03:14.660 align:start position:0%
granda
okay<00:03:12.900><c> you're</c><00:03:13.110><c> right</c><00:03:13.260><c> thank</c><00:03:13.590><c> you</c><00:03:13.920><c> so</c><00:03:14.549><c> though</c>

00:03:14.660 --> 00:03:14.670 align:start position:0%
okay you're right thank you so though
 

00:03:14.670 --> 00:03:16.339 align:start position:0%
okay you're right thank you so though
all<00:03:14.790><c> the</c><00:03:14.879><c> same</c><00:03:15.060><c> exactly</c><00:03:15.599><c> the</c><00:03:15.659><c> same</c><00:03:15.870><c> and</c><00:03:16.079><c> the</c>

00:03:16.339 --> 00:03:16.349 align:start position:0%
all the same exactly the same and the
 

00:03:16.349 --> 00:03:17.809 align:start position:0%
all the same exactly the same and the
reason<00:03:16.379><c> they're</c><00:03:16.709><c> the</c><00:03:16.799><c> same</c><00:03:17.010><c> it's</c><00:03:17.280><c> because</c><00:03:17.310><c> I</c>

00:03:17.809 --> 00:03:17.819 align:start position:0%
reason they're the same it's because I
 

00:03:17.819 --> 00:03:19.160 align:start position:0%
reason they're the same it's because I
won't<00:03:18.420><c> tell</c><00:03:18.540><c> you</c><00:03:18.659><c> I</c><00:03:18.720><c> will</c><00:03:18.870><c> tell</c><00:03:18.959><c> you</c><00:03:19.049><c> later</c>

00:03:19.160 --> 00:03:19.170 align:start position:0%
won't tell you I will tell you later
 

00:03:19.170 --> 00:03:23.179 align:start position:0%
won't tell you I will tell you later
okay<00:03:21.319><c> now</c><00:03:22.319><c> I</c><00:03:22.349><c> want</c><00:03:22.590><c> to</c><00:03:22.620><c> go</c><00:03:22.739><c> back</c><00:03:22.890><c> to</c><00:03:23.069><c> history</c>

00:03:23.179 --> 00:03:23.189 align:start position:0%
okay now I want to go back to history
 

00:03:23.189 --> 00:03:25.100 align:start position:0%
okay now I want to go back to history
when<00:03:23.730><c> the</c><00:03:23.849><c> dinosaurs</c><00:03:24.360><c> roamed</c><00:03:24.420><c> the</c><00:03:24.750><c> earth</c><00:03:24.780><c> Java</c>

00:03:25.100 --> 00:03:25.110 align:start position:0%
when the dinosaurs roamed the earth Java
 

00:03:25.110 --> 00:03:28.910 align:start position:0%
when the dinosaurs roamed the earth Java
hundreds<00:03:25.409><c> era</c><00:03:25.879><c> okay</c><00:03:26.879><c> and</c><00:03:27.230><c> in</c><00:03:28.230><c> those</c><00:03:28.470><c> days</c><00:03:28.530><c> they</c>

00:03:28.910 --> 00:03:28.920 align:start position:0%
hundreds era okay and in those days they
 

00:03:28.920 --> 00:03:31.869 align:start position:0%
hundreds era okay and in those days they
actually<00:03:29.159><c> starts</c><00:03:29.489><c> by</c><00:03:29.609><c> saying</c><00:03:29.849><c> private</c><00:03:30.840><c> cha</c><00:03:31.019><c> Lu</c>

00:03:31.869 --> 00:03:31.879 align:start position:0%
actually starts by saying private cha Lu
 

00:03:31.879 --> 00:03:34.220 align:start position:0%
actually starts by saying private cha Lu
square<00:03:32.879><c> brackets</c><00:03:33.299><c> you</c><00:03:33.659><c> know</c><00:03:33.780><c> these</c><00:03:33.900><c> were</c><00:03:34.049><c> C</c>

00:03:34.220 --> 00:03:34.230 align:start position:0%
square brackets you know these were C
 

00:03:34.230 --> 00:03:38.240 align:start position:0%
square brackets you know these were C
programmers<00:03:35.030><c> and</c><00:03:36.409><c> in</c><00:03:37.409><c> those</c><00:03:37.620><c> days</c><00:03:37.829><c> when</c><00:03:38.069><c> their</c>

00:03:38.240 --> 00:03:38.250 align:start position:0%
programmers and in those days when their
 

00:03:38.250 --> 00:03:40.069 align:start position:0%
programmers and in those days when their
hash<00:03:38.519><c> code</c><00:03:38.819><c> that</c><00:03:39.000><c> was</c><00:03:39.150><c> bigger</c><00:03:39.510><c> than</c><00:03:39.720><c> 16</c>

00:03:40.069 --> 00:03:40.079 align:start position:0%
hash code that was bigger than 16
 

00:03:40.079 --> 00:03:43.039 align:start position:0%
hash code that was bigger than 16
characters<00:03:40.799><c> they</c><00:03:41.489><c> made</c><00:03:42.030><c> samples</c><00:03:42.599><c> of</c><00:03:42.780><c> it</c><00:03:42.900><c> so</c>

00:03:43.039 --> 00:03:43.049 align:start position:0%
characters they made samples of it so
 

00:03:43.049 --> 00:03:46.009 align:start position:0%
characters they made samples of it so
basically<00:03:43.370><c> looked</c><00:03:44.370><c> at</c><00:03:44.519><c> every</c><00:03:44.940><c> X</c><00:03:45.389><c> number</c><00:03:45.989><c> of</c>

00:03:46.009 --> 00:03:46.019 align:start position:0%
basically looked at every X number of
 

00:03:46.019 --> 00:03:47.750 align:start position:0%
basically looked at every X number of
characters<00:03:46.650><c> so</c><00:03:47.040><c> no</c><00:03:47.310><c> sorry</c>

00:03:47.750 --> 00:03:47.760 align:start position:0%
characters so no sorry
 

00:03:47.760 --> 00:03:49.220 align:start position:0%
characters so no sorry
that's<00:03:48.030><c> one</c><00:03:48.150><c> way</c><00:03:48.209><c> that</c><00:03:48.239><c> it</c><00:03:48.450><c> looked</c><00:03:48.599><c> a</c><00:03:48.690><c> tiny</c><00:03:48.900><c> I</c>

00:03:49.220 --> 00:03:49.230 align:start position:0%
that's one way that it looked a tiny I
 

00:03:49.230 --> 00:03:51.170 align:start position:0%
that's one way that it looked a tiny I
think<00:03:49.739><c> 30</c><00:03:49.980><c> characters</c><00:03:50.370><c> off</c><00:03:50.639><c> their</c><00:03:50.819><c> course</c><00:03:51.090><c> I</c>

00:03:51.170 --> 00:03:51.180 align:start position:0%
think 30 characters off their course I
 

00:03:51.180 --> 00:03:54.050 align:start position:0%
think 30 characters off their course I
sample<00:03:51.870><c> off</c><00:03:51.989><c> all</c><00:03:52.170><c> the</c><00:03:52.290><c> strings</c><00:03:52.519><c> and</c><00:03:53.519><c> it</c><00:03:53.909><c> was</c>

00:03:54.050 --> 00:03:54.060 align:start position:0%
sample off all the strings and it was
 

00:03:54.060 --> 00:03:55.940 align:start position:0%
sample off all the strings and it was
obviously<00:03:54.450><c> not</c><00:03:54.510><c> very</c><00:03:54.900><c> it</c><00:03:55.379><c> wasn't</c><00:03:55.739><c> very</c><00:03:55.829><c> good</c>

00:03:55.940 --> 00:03:55.950 align:start position:0%
obviously not very it wasn't very good
 

00:03:55.950 --> 00:03:59.210 align:start position:0%
obviously not very it wasn't very good
hash<00:03:56.549><c> code</c><00:03:56.849><c> at</c><00:03:57.090><c> the</c><00:03:57.569><c> end</c><00:03:58.010><c> because</c><00:03:59.010><c> if</c><00:03:59.099><c> it</c>

00:03:59.210 --> 00:03:59.220 align:start position:0%
hash code at the end because if it
 

00:03:59.220 --> 00:04:01.280 align:start position:0%
hash code at the end because if it
several<00:03:59.849><c> big</c><00:04:00.090><c> strings</c><00:04:00.480><c> they</c><00:04:00.840><c> would</c><00:04:00.989><c> be</c><00:04:01.139><c> have</c>

00:04:01.280 --> 00:04:01.290 align:start position:0%
several big strings they would be have
 

00:04:01.290 --> 00:04:03.199 align:start position:0%
several big strings they would be have
almost<00:04:01.530><c> very</c><00:04:02.280><c> very</c><00:04:02.459><c> similar</c><00:04:02.639><c> hash</c><00:04:02.879><c> curves</c><00:04:03.090><c> or</c>

00:04:03.199 --> 00:04:03.209 align:start position:0%
almost very very similar hash curves or
 

00:04:03.209 --> 00:04:05.599 align:start position:0%
almost very very similar hash curves or
the<00:04:03.299><c> same</c><00:04:03.450><c> hash</c><00:04:03.629><c> codes</c><00:04:04.280><c> and</c><00:04:05.280><c> some</c><00:04:05.459><c> other</c>

00:04:05.599 --> 00:04:05.609 align:start position:0%
the same hash codes and some other
 

00:04:05.609 --> 00:04:07.039 align:start position:0%
the same hash codes and some other
things<00:04:05.819><c> like</c><00:04:05.939><c> equals</c><00:04:06.569><c> didn't</c><00:04:06.810><c> check</c><00:04:06.930><c> of</c>

00:04:07.039 --> 00:04:07.049 align:start position:0%
things like equals didn't check of
 

00:04:07.049 --> 00:04:08.589 align:start position:0%
things like equals didn't check of
objects<00:04:07.349><c> we</c><00:04:07.470><c> were</c><00:04:07.530><c> actually</c><00:04:07.829><c> the</c><00:04:07.889><c> same</c>

00:04:08.589 --> 00:04:08.599 align:start position:0%
objects we were actually the same
 

00:04:08.599 --> 00:04:11.390 align:start position:0%
objects we were actually the same
internet<00:04:09.599><c> aesthetic</c><00:04:10.079><c> hash</c><00:04:10.260><c> table</c><00:04:10.739><c> which</c>

00:04:11.390 --> 00:04:11.400 align:start position:0%
internet aesthetic hash table which
 

00:04:11.400 --> 00:04:14.960 align:start position:0%
internet aesthetic hash table which
happened<00:04:11.879><c> to</c><00:04:11.939><c> be</c><00:04:12.299><c> a</c><00:04:12.420><c> memory</c><00:04:12.689><c> and</c><00:04:13.639><c> a</c><00:04:14.639><c> string</c>

00:04:14.960 --> 00:04:14.970 align:start position:0%
happened to be a memory and a string
 

00:04:14.970 --> 00:04:18.860 align:start position:0%
happened to be a memory and a string
buffer<00:04:16.130><c> was</c><00:04:17.130><c> basically</c><00:04:17.579><c> a</c><00:04:17.760><c> modifiable</c><00:04:18.329><c> string</c>

00:04:18.860 --> 00:04:18.870 align:start position:0%
buffer was basically a modifiable string
 

00:04:18.870 --> 00:04:20.860 align:start position:0%
buffer was basically a modifiable string
safe<00:04:19.199><c> version</c><00:04:19.560><c> that</c><00:04:20.370><c> you</c><00:04:20.459><c> could</c><00:04:20.579><c> use</c><00:04:20.789><c> for</c>

00:04:20.860 --> 00:04:20.870 align:start position:0%
safe version that you could use for
 

00:04:20.870 --> 00:04:24.140 align:start position:0%
safe version that you could use for
changing<00:04:21.870><c> once</c><00:04:22.109><c> you</c><00:04:22.349><c> had</c><00:04:22.500><c> constructed</c><00:04:23.160><c> it</c><00:04:23.250><c> now</c>

00:04:24.140 --> 00:04:24.150 align:start position:0%
changing once you had constructed it now
 

00:04:24.150 --> 00:04:26.270 align:start position:0%
changing once you had constructed it now
when<00:04:24.510><c> you</c><00:04:24.599><c> call</c><00:04:24.780><c> to</c><00:04:25.110><c> string</c><00:04:25.470><c> on</c><00:04:25.680><c> the</c><00:04:25.889><c> chart</c><00:04:26.160><c> on</c>

00:04:26.270 --> 00:04:26.280 align:start position:0%
when you call to string on the chart on
 

00:04:26.280 --> 00:04:27.680 align:start position:0%
when you call to string on the chart on
the<00:04:26.310><c> string</c><00:04:26.669><c> buffer</c><00:04:26.820><c> what</c><00:04:27.120><c> was</c><00:04:27.240><c> really</c><00:04:27.510><c> cool</c>

00:04:27.680 --> 00:04:27.690 align:start position:0%
the string buffer what was really cool
 

00:04:27.690 --> 00:04:30.080 align:start position:0%
the string buffer what was really cool
with<00:04:27.840><c> that</c><00:04:27.960><c> was</c><00:04:28.590><c> that</c><00:04:28.620><c> it</c><00:04:28.800><c> she'd</c><00:04:29.699><c> the</c><00:04:29.880><c> same</c>

00:04:30.080 --> 00:04:30.090 align:start position:0%
with that was that it she'd the same
 

00:04:30.090 --> 00:04:33.320 align:start position:0%
with that was that it she'd the same
underlying<00:04:30.419><c> chareth</c><00:04:31.669><c> so</c><00:04:32.669><c> we</c><00:04:32.760><c> didn't</c><00:04:32.970><c> have</c><00:04:33.090><c> a</c>

00:04:33.320 --> 00:04:33.330 align:start position:0%
underlying chareth so we didn't have a
 

00:04:33.330 --> 00:04:35.450 align:start position:0%
underlying chareth so we didn't have a
new<00:04:34.050><c> char</c><00:04:34.409><c> a</c><00:04:34.590><c> being</c><00:04:34.800><c> made</c><00:04:34.949><c> every</c><00:04:35.130><c> time</c><00:04:35.250><c> we</c><00:04:35.340><c> call</c>

00:04:35.450 --> 00:04:35.460 align:start position:0%
new char a being made every time we call
 

00:04:35.460 --> 00:04:37.550 align:start position:0%
new char a being made every time we call
to<00:04:35.729><c> string</c><00:04:36.000><c> so</c><00:04:36.570><c> this</c><00:04:36.720><c> was</c><00:04:36.870><c> some</c><00:04:37.020><c> of</c><00:04:37.050><c> the</c><00:04:37.260><c> magic</c>

00:04:37.550 --> 00:04:37.560 align:start position:0%
to string so this was some of the magic
 

00:04:37.560 --> 00:04:39.439 align:start position:0%
to string so this was some of the magic
that<00:04:37.590><c> happens</c><00:04:38.010><c> brilliant</c><00:04:38.340><c> I</c><00:04:38.550><c> mean</c><00:04:39.330><c> if</c><00:04:39.389><c> you</c>

00:04:39.439 --> 00:04:39.449 align:start position:0%
that happens brilliant I mean if you
 

00:04:39.449 --> 00:04:41.060 align:start position:0%
that happens brilliant I mean if you
look<00:04:39.599><c> at</c><00:04:39.659><c> the</c><00:04:39.780><c> way</c><00:04:39.870><c> that</c><00:04:40.050><c> the</c><00:04:40.199><c> source</c><00:04:40.440><c> code</c><00:04:40.740><c> if</c>

00:04:41.060 --> 00:04:41.070 align:start position:0%
look at the way that the source code if
 

00:04:41.070 --> 00:04:42.290 align:start position:0%
look at the way that the source code if
you<00:04:41.220><c> look</c><00:04:41.340><c> at</c><00:04:41.430><c> the</c><00:04:41.520><c> Java</c><00:04:41.820><c> source</c><00:04:42.150><c> code</c>

00:04:42.290 --> 00:04:42.300 align:start position:0%
you look at the Java source code
 

00:04:42.300 --> 00:04:44.960 align:start position:0%
you look at the Java source code
nowadays<00:04:42.930><c> you</c><00:04:43.800><c> will</c><00:04:43.949><c> see</c><00:04:44.130><c> that</c><00:04:44.340><c> in</c><00:04:44.520><c> the</c><00:04:44.610><c> Java</c>

00:04:44.960 --> 00:04:44.970 align:start position:0%
nowadays you will see that in the Java
 

00:04:44.970 --> 00:04:46.700 align:start position:0%
nowadays you will see that in the Java
source<00:04:45.330><c> code</c><00:04:45.630><c> when</c><00:04:45.810><c> you</c><00:04:45.900><c> say</c><00:04:46.050><c> to</c><00:04:46.260><c> string</c><00:04:46.500><c> it</c>

00:04:46.700 --> 00:04:46.710 align:start position:0%
source code when you say to string it
 

00:04:46.710 --> 00:04:49.180 align:start position:0%
source code when you say to string it
makes<00:04:47.190><c> a</c><00:04:47.370><c> new</c><00:04:47.699><c> array</c><00:04:48.000><c> every</c><00:04:48.479><c> time</c><00:04:48.659><c> we</c><00:04:48.780><c> call</c><00:04:48.960><c> it</c>

00:04:49.180 --> 00:04:49.190 align:start position:0%
makes a new array every time we call it
 

00:04:49.190 --> 00:04:51.700 align:start position:0%
makes a new array every time we call it
we'll<00:04:50.190><c> get</c><00:04:50.280><c> back</c><00:04:50.430><c> to</c><00:04:50.610><c> that</c><00:04:50.729><c> in</c><00:04:50.789><c> a</c><00:04:50.909><c> moment</c>

00:04:51.700 --> 00:04:51.710 align:start position:0%
we'll get back to that in a moment
 

00:04:51.710 --> 00:04:53.750 align:start position:0%
we'll get back to that in a moment
this<00:04:52.710><c> is</c><00:04:52.800><c> what</c><00:04:52.949><c> the</c><00:04:53.039><c> hash</c><00:04:53.220><c> code</c><00:04:53.430><c> looked</c><00:04:53.610><c> like</c>

00:04:53.750 --> 00:04:53.760 align:start position:0%
this is what the hash code looked like
 

00:04:53.760 --> 00:04:56.600 align:start position:0%
this is what the hash code looked like
had<00:04:53.940><c> streamed</c><00:04:54.180><c> up</c><00:04:54.270><c> 11.0</c><00:04:55.169><c> you</c><00:04:56.010><c> can</c><00:04:56.130><c> see</c><00:04:56.280><c> that</c><00:04:56.430><c> if</c>

00:04:56.600 --> 00:04:56.610 align:start position:0%
had streamed up 11.0 you can see that if
 

00:04:56.610 --> 00:05:00.200 align:start position:0%
had streamed up 11.0 you can see that if
the<00:04:56.760><c> length</c><00:04:56.940><c> is</c><00:04:57.150><c> less</c><00:04:57.479><c> than</c><00:04:57.690><c> 16</c><00:04:58.110><c> and</c><00:04:59.210><c> it</c>

00:05:00.200 --> 00:05:00.210 align:start position:0%
the length is less than 16 and it
 

00:05:00.210 --> 00:05:03.260 align:start position:0%
the length is less than 16 and it
actually<00:05:01.310><c> adds</c><00:05:02.310><c> up</c><00:05:02.669><c> the</c><00:05:02.699><c> numbers</c><00:05:03.060><c> as</c><00:05:03.180><c> a</c>

00:05:03.260 --> 00:05:03.270 align:start position:0%
actually adds up the numbers as a
 

00:05:03.270 --> 00:05:05.930 align:start position:0%
actually adds up the numbers as a
multiplier<00:05:03.720><c> otherwise</c><00:05:04.590><c> it</c><00:05:05.310><c> looks</c><00:05:05.340><c> at</c><00:05:05.669><c> only</c>

00:05:05.930 --> 00:05:05.940 align:start position:0%
multiplier otherwise it looks at only
 

00:05:05.940 --> 00:05:07.430 align:start position:0%
multiplier otherwise it looks at only
eight<00:05:06.150><c> of</c><00:05:06.479><c> the</c><00:05:06.750><c> characters</c>

00:05:07.430 --> 00:05:07.440 align:start position:0%
eight of the characters
 

00:05:07.440 --> 00:05:10.010 align:start position:0%
eight of the characters
it<00:05:07.919><c> says</c><00:05:08.190><c> the</c><00:05:08.909><c> skippers</c><00:05:09.330><c> length</c><00:05:09.539><c> divided</c><00:05:09.900><c> by</c>

00:05:10.010 --> 00:05:10.020 align:start position:0%
it says the skippers length divided by
 

00:05:10.020 --> 00:05:11.540 align:start position:0%
it says the skippers length divided by
eight<00:05:10.169><c> so</c><00:05:10.409><c> at</c><00:05:10.500><c> index</c><00:05:10.770><c> of</c><00:05:10.919><c> eight</c><00:05:11.099><c> of</c><00:05:11.250><c> the</c><00:05:11.370><c> code</c>

00:05:11.540 --> 00:05:11.550 align:start position:0%
eight so at index of eight of the code
 

00:05:11.550 --> 00:05:13.760 align:start position:0%
eight so at index of eight of the code
so<00:05:11.669><c> if</c><00:05:11.729><c> you</c><00:05:12.090><c> have</c><00:05:12.180><c> 1,000</c><00:05:12.750><c> characters</c><00:05:12.930><c> it</c><00:05:13.590><c> only</c>

00:05:13.760 --> 00:05:13.770 align:start position:0%
so if you have 1,000 characters it only
 

00:05:13.770 --> 00:05:15.020 align:start position:0%
so if you have 1,000 characters it only
looks<00:05:13.949><c> at</c><00:05:14.010><c> eight</c><00:05:14.250><c> of</c><00:05:14.400><c> them</c><00:05:14.580><c> to</c><00:05:14.729><c> work</c><00:05:14.880><c> out</c><00:05:15.000><c> a</c>

00:05:15.020 --> 00:05:15.030 align:start position:0%
looks at eight of them to work out a
 

00:05:15.030 --> 00:05:18.800 align:start position:0%
looks at eight of them to work out a
hash<00:05:15.210><c> code</c><00:05:15.419><c> and</c><00:05:17.240><c> the</c><00:05:18.240><c> bad</c><00:05:18.389><c> way</c><00:05:18.510><c> this</c><00:05:18.690><c> is</c>

00:05:18.800 --> 00:05:18.810 align:start position:0%
hash code and the bad way this is
 

00:05:18.810 --> 00:05:22.870 align:start position:0%
hash code and the bad way this is
demetri<00:05:19.229><c> demetri</c><00:05:19.940><c> demetri</c><00:05:20.940><c> is</c><00:05:21.900><c> a</c>

00:05:22.870 --> 00:05:22.880 align:start position:0%
demetri demetri demetri is a
 

00:05:22.880 --> 00:05:25.290 align:start position:0%
demetri demetri demetri is a
soft<00:05:23.150><c> engineer</c><00:05:23.540><c> he's</c><00:05:23.840><c> our</c><00:05:24.140><c> chief</c>

00:05:25.290 --> 00:05:25.300 align:start position:0%
soft engineer he's our chief
 

00:05:25.300 --> 00:05:29.470 align:start position:0%
soft engineer he's our chief
troublemaker<00:05:26.300><c> disorganized</c><00:05:27.290><c> @j</c><00:05:27.680><c> creep</c><00:05:28.480><c> he</c>

00:05:29.470 --> 00:05:29.480 align:start position:0%
troublemaker disorganized @j creep he
 

00:05:29.480 --> 00:05:31.960 align:start position:0%
troublemaker disorganized @j creep he
was<00:05:29.870><c> trying</c><00:05:30.140><c> not</c><00:05:30.200><c> to</c><00:05:30.350><c> come</c><00:05:30.650><c> he</c><00:05:31.190><c> tried</c><00:05:31.580><c> to</c><00:05:31.760><c> he</c>

00:05:31.960 --> 00:05:31.970 align:start position:0%
was trying not to come he tried to he
 

00:05:31.970 --> 00:05:35.800 align:start position:0%
was trying not to come he tried to he
tells<00:05:32.450><c> me</c><00:05:32.630><c> that</c><00:05:32.840><c> he</c><00:05:33.560><c> he</c><00:05:34.520><c> hurt</c><00:05:34.850><c> his</c><00:05:35.120><c> his</c><00:05:35.570><c> leg</c>

00:05:35.800 --> 00:05:35.810 align:start position:0%
tells me that he he hurt his his leg
 

00:05:35.810 --> 00:05:38.440 align:start position:0%
tells me that he he hurt his his leg
skiing<00:05:36.050><c> but</c><00:05:36.920><c> actually</c><00:05:37.370><c> last</c><00:05:37.760><c> night</c><00:05:37.910><c> he</c><00:05:38.330><c> got</c>

00:05:38.440 --> 00:05:38.450 align:start position:0%
skiing but actually last night he got
 

00:05:38.450 --> 00:05:39.940 align:start position:0%
skiing but actually last night he got
beaten<00:05:38.690><c> up</c><00:05:38.900><c> because</c><00:05:39.020><c> he</c><00:05:39.230><c> asked</c><00:05:39.500><c> for</c><00:05:39.530><c> Hawaiian</c>

00:05:39.940 --> 00:05:39.950 align:start position:0%
beaten up because he asked for Hawaiian
 

00:05:39.950 --> 00:05:43.990 align:start position:0%
beaten up because he asked for Hawaiian
pizza<00:05:41.500><c> yes</c><00:05:42.500><c> this</c><00:05:42.950><c> is</c><00:05:43.100><c> high</c><00:05:43.250><c> in</c><00:05:43.310><c> ski</c><00:05:43.490><c> boots</c><00:05:43.520><c> the</c>

00:05:43.990 --> 00:05:44.000 align:start position:0%
pizza yes this is high in ski boots the
 

00:05:44.000 --> 00:05:46.120 align:start position:0%
pizza yes this is high in ski boots the
troublemaker<00:05:44.540><c> the</c><00:05:44.930><c> creator</c><00:05:45.440><c> which</c><00:05:45.680><c> a</c><00:05:45.800><c> Cretan</c>

00:05:46.120 --> 00:05:46.130 align:start position:0%
troublemaker the creator which a Cretan
 

00:05:46.130 --> 00:05:48.060 align:start position:0%
troublemaker the creator which a Cretan
con<00:05:46.370><c> from</c><00:05:46.610><c> Java</c><00:05:46.820><c> specialist</c><00:05:47.270><c> newsletter</c><00:05:47.660><c> and</c>

00:05:48.060 --> 00:05:48.070 align:start position:0%
con from Java specialist newsletter and
 

00:05:48.070 --> 00:05:50.230 align:start position:0%
con from Java specialist newsletter and
will<00:05:49.070><c> try</c><00:05:49.280><c> to</c><00:05:49.340><c> entertain</c><00:05:49.640><c> you</c><00:05:49.910><c> with</c><00:05:50.060><c> this</c>

00:05:50.230 --> 00:05:50.240 align:start position:0%
will try to entertain you with this
 

00:05:50.240 --> 00:05:55.720 align:start position:0%
will try to entertain you with this
string<00:05:50.660><c> he's</c><00:05:51.470><c> three</c><00:05:51.710><c> yeah</c><00:05:51.950><c> yeah</c><00:05:54.010><c> so</c><00:05:55.010><c> just</c><00:05:55.520><c> by</c>

00:05:55.720 --> 00:05:55.730 align:start position:0%
string he's three yeah yeah so just by
 

00:05:55.730 --> 00:05:57.610 align:start position:0%
string he's three yeah yeah so just by
the<00:05:55.760><c> way</c><00:05:55.940><c> if</c><00:05:56.060><c> you're</c><00:05:56.180><c> not</c><00:05:56.300><c> there</c><00:05:57.260><c> to</c><00:05:57.380><c> please</c>

00:05:57.610 --> 00:05:57.620 align:start position:0%
the way if you're not there to please
 

00:05:57.620 --> 00:05:59.920 align:start position:0%
the way if you're not there to please
join<00:05:57.860><c> also</c><00:05:58.670><c> I've</c><00:05:58.850><c> got</c><00:05:59.060><c> I've</c><00:05:59.360><c> got</c><00:05:59.390><c> a</c><00:05:59.540><c> surprise</c>

00:05:59.920 --> 00:05:59.930 align:start position:0%
join also I've got I've got a surprise
 

00:05:59.930 --> 00:06:03.100 align:start position:0%
join also I've got I've got a surprise
gift<00:06:00.530><c> which</c><00:06:01.310><c> will</c><00:06:01.790><c> sort</c><00:06:02.330><c> of</c><00:06:02.390><c> not</c><00:06:02.600><c> work</c><00:06:02.810><c> after</c>

00:06:03.100 --> 00:06:03.110 align:start position:0%
gift which will sort of not work after
 

00:06:03.110 --> 00:06:04.930 align:start position:0%
gift which will sort of not work after
7:00<00:06:03.770><c> tonight</c><00:06:03.950><c> so</c><00:06:04.280><c> if</c><00:06:04.370><c> you</c><00:06:04.490><c> look</c><00:06:04.610><c> at</c><00:06:04.760><c> that</c>

00:06:04.930 --> 00:06:04.940 align:start position:0%
7:00 tonight so if you look at that
 

00:06:04.940 --> 00:06:06.940 align:start position:0%
7:00 tonight so if you look at that
after<00:06:05.660><c> 7:00</c><00:06:05.930><c> you'll</c><00:06:06.050><c> get</c><00:06:06.200><c> a</c><00:06:06.230><c> not</c><00:06:06.500><c> so</c><00:06:06.710><c> a</c><00:06:06.770><c> big</c>

00:06:06.940 --> 00:06:06.950 align:start position:0%
after 7:00 you'll get a not so a big
 

00:06:06.950 --> 00:06:09.100 align:start position:0%
after 7:00 you'll get a not so a big
surprise<00:06:07.250><c> gift</c><00:06:07.640><c> if</c><00:06:08.180><c> you</c><00:06:08.360><c> did</c><00:06:08.450><c> before</c><00:06:08.600><c> 7:00</c>

00:06:09.100 --> 00:06:09.110 align:start position:0%
surprise gift if you did before 7:00
 

00:06:09.110 --> 00:06:10.300 align:start position:0%
surprise gift if you did before 7:00
you'll<00:06:09.200><c> get</c><00:06:09.290><c> a</c><00:06:09.320><c> big</c><00:06:09.560><c> surprise</c><00:06:09.590><c> gift</c><00:06:10.160><c> but</c>

00:06:10.300 --> 00:06:10.310 align:start position:0%
you'll get a big surprise gift but
 

00:06:10.310 --> 00:06:11.830 align:start position:0%
you'll get a big surprise gift but
office<00:06:10.730><c> ever</c><00:06:10.880><c> won't</c><00:06:11.090><c> be</c><00:06:11.180><c> as</c><00:06:11.360><c> great</c>

00:06:11.830 --> 00:06:11.840 align:start position:0%
office ever won't be as great
 

00:06:11.840 --> 00:06:14.920 align:start position:0%
office ever won't be as great
so<00:06:12.260><c> that</c><00:06:12.860><c> tinier</c><00:06:13.250><c> old</c><00:06:13.430><c> Vox</c><00:06:13.670><c> will</c><00:06:14.000><c> mmm</c><00:06:14.270><c> ro</c><00:06:14.420><c> 19</c>

00:06:14.920 --> 00:06:14.930 align:start position:0%
so that tinier old Vox will mmm ro 19
 

00:06:14.930 --> 00:06:17.770 align:start position:0%
so that tinier old Vox will mmm ro 19
have<00:06:15.590><c> a</c><00:06:15.620><c> look</c><00:06:15.770><c> at</c><00:06:15.860><c> that</c><00:06:16.010><c> if</c><00:06:16.190><c> you</c><00:06:16.280><c> want</c><00:06:16.780><c> you'll</c>

00:06:17.770 --> 00:06:17.780 align:start position:0%
have a look at that if you want you'll
 

00:06:17.780 --> 00:06:20.560 align:start position:0%
have a look at that if you want you'll
get<00:06:17.900><c> something</c><00:06:18.140><c> if</c><00:06:18.530><c> you</c><00:06:18.710><c> do</c><00:06:18.970><c> the</c><00:06:19.970><c> links</c><00:06:20.420><c> also</c>

00:06:20.560 --> 00:06:20.570 align:start position:0%
get something if you do the links also
 

00:06:20.570 --> 00:06:24.070 align:start position:0%
get something if you do the links also
here<00:06:20.840><c> the</c><00:06:21.020><c> on</c><00:06:21.500><c> the</c><00:06:21.650><c> side</c><00:06:21.940><c> as</c><00:06:22.940><c> I</c><00:06:23.060><c> said</c><00:06:23.210><c> it's</c><00:06:23.810><c> a</c>

00:06:24.070 --> 00:06:24.080 align:start position:0%
here the on the side as I said it's a
 

00:06:24.080 --> 00:06:25.540 align:start position:0%
here the on the side as I said it's a
changes<00:06:24.530><c> off</c><00:06:24.710><c> to</c><00:06:24.920><c> save</c><00:06:25.130><c> them</c><00:06:25.250><c> tonight</c><00:06:25.520><c> you</c>

00:06:25.540 --> 00:06:25.550 align:start position:0%
changes off to save them tonight you
 

00:06:25.550 --> 00:06:27.240 align:start position:0%
changes off to save them tonight you
know<00:06:25.790><c> once</c><00:06:25.970><c> the</c><00:06:26.090><c> beer</c><00:06:26.240><c> starts</c><00:06:26.540><c> the</c><00:06:26.900><c> gift</c>

00:06:27.240 --> 00:06:27.250 align:start position:0%
know once the beer starts the gift
 

00:06:27.250 --> 00:06:32.320 align:start position:0%
know once the beer starts the gift
diminishes<00:06:28.250><c> significantly</c><00:06:30.160><c> so</c><00:06:31.330><c> Drive</c>

00:06:32.320 --> 00:06:32.330 align:start position:0%
diminishes significantly so Drive
 

00:06:32.330 --> 00:06:33.670 align:start position:0%
diminishes significantly so Drive
wondered<00:06:32.630><c> wonder</c><00:06:32.870><c> changed</c><00:06:33.260><c> things</c><00:06:33.380><c> of</c><00:06:33.560><c> it</c>

00:06:33.670 --> 00:06:33.680 align:start position:0%
wondered wonder changed things of it
 

00:06:33.680 --> 00:06:36.370 align:start position:0%
wondered wonder changed things of it
first<00:06:34.250><c> of</c><00:06:34.340><c> all</c><00:06:34.490><c> the</c><00:06:34.760><c> the</c><00:06:34.940><c> field</c><00:06:35.630><c> stay</c><00:06:35.930><c> the</c><00:06:36.140><c> same</c>

00:06:36.370 --> 00:06:36.380 align:start position:0%
first of all the the field stay the same
 

00:06:36.380 --> 00:06:39.580 align:start position:0%
first of all the the field stay the same
but<00:06:37.190><c> an</c><00:06:37.430><c> hashcode</c><00:06:37.850><c> was</c><00:06:38.000><c> still</c><00:06:38.210><c> sampling</c><00:06:38.660><c> they</c>

00:06:39.580 --> 00:06:39.590 align:start position:0%
but an hashcode was still sampling they
 

00:06:39.590 --> 00:06:41.830 align:start position:0%
but an hashcode was still sampling they
they<00:06:40.010><c> moved</c><00:06:40.250><c> the</c><00:06:40.370><c> intern</c><00:06:40.640><c> to</c><00:06:40.910><c> to</c><00:06:41.330><c> some</c><00:06:41.510><c> native</c>

00:06:41.830 --> 00:06:41.840 align:start position:0%
they moved the intern to to some native
 

00:06:41.840 --> 00:06:45.430 align:start position:0%
they moved the intern to to some native
code<00:06:42.310><c> which</c><00:06:43.310><c> wasn't</c><00:06:43.610><c> necessarily</c><00:06:44.380><c> going</c><00:06:45.380><c> to</c>

00:06:45.430 --> 00:06:45.440 align:start position:0%
code which wasn't necessarily going to
 

00:06:45.440 --> 00:06:46.650 align:start position:0%
code which wasn't necessarily going to
be<00:06:45.500><c> better</c><00:06:45.680><c> than</c><00:06:45.860><c> Java</c>

00:06:46.650 --> 00:06:46.660 align:start position:0%
be better than Java
 

00:06:46.660 --> 00:06:49.840 align:start position:0%
be better than Java
and<00:06:47.660><c> yeah</c><00:06:48.290><c> so</c><00:06:48.650><c> all</c><00:06:48.890><c> sorts</c><00:06:49.370><c> of</c><00:06:49.430><c> weird</c><00:06:49.580><c> stuff</c>

00:06:49.840 --> 00:06:49.850 align:start position:0%
and yeah so all sorts of weird stuff
 

00:06:49.850 --> 00:06:52.870 align:start position:0%
and yeah so all sorts of weird stuff
like<00:06:50.030><c> chopper</c><00:06:50.330><c> case</c><00:06:50.600><c> had</c><00:06:51.440><c> some</c><00:06:52.370><c> weird</c><00:06:52.610><c> edge</c>

00:06:52.870 --> 00:06:52.880 align:start position:0%
like chopper case had some weird edge
 

00:06:52.880 --> 00:06:57.220 align:start position:0%
like chopper case had some weird edge
cases<00:06:53.180><c> like</c><00:06:53.660><c> the</c><00:06:54.200><c> German</c><00:06:54.880><c> SF</c><00:06:55.880><c> became</c><00:06:56.360><c> too</c><00:06:57.200><c> big</c>

00:06:57.220 --> 00:06:57.230 align:start position:0%
cases like the German SF became too big
 

00:06:57.230 --> 00:07:01.810 align:start position:0%
cases like the German SF became too big
big<00:06:57.950><c> asses</c><00:06:58.900><c> so</c><00:06:59.900><c> so</c><00:07:00.800><c> the</c><00:07:00.920><c> lethal</c><00:07:01.400><c> stream</c><00:07:01.700><c> could</c>

00:07:01.810 --> 00:07:01.820 align:start position:0%
big asses so so the lethal stream could
 

00:07:01.820 --> 00:07:04.090 align:start position:0%
big asses so so the lethal stream could
change<00:07:02.060><c> we</c><00:07:02.240><c> needed</c><00:07:02.480><c> to</c><00:07:02.630><c> uppercase</c><00:07:03.020><c> and</c><00:07:03.200><c> kind</c>

00:07:04.090 --> 00:07:04.100 align:start position:0%
change we needed to uppercase and kind
 

00:07:04.100 --> 00:07:07.000 align:start position:0%
change we needed to uppercase and kind
of<00:07:04.130><c> weird</c><00:07:04.340><c> in</c><00:07:04.940><c> traveler</c><00:07:05.930><c> wonder</c><00:07:06.170><c> to</c><00:07:06.470><c> the</c><00:07:06.710><c> field</c>

00:07:07.000 --> 00:07:07.010 align:start position:0%
of weird in traveler wonder to the field
 

00:07:07.010 --> 00:07:08.740 align:start position:0%
of weird in traveler wonder to the field
stayed<00:07:07.310><c> the</c><00:07:07.460><c> same</c><00:07:07.490><c> but</c><00:07:08.180><c> they</c><00:07:08.330><c> changed</c><00:07:08.660><c> the</c>

00:07:08.740 --> 00:07:08.750 align:start position:0%
stayed the same but they changed the
 

00:07:08.750 --> 00:07:09.430 align:start position:0%
stayed the same but they changed the
hashcode

00:07:09.430 --> 00:07:09.440 align:start position:0%
hashcode
 

00:07:09.440 --> 00:07:11.530 align:start position:0%
hashcode
and<00:07:10.100><c> that</c><00:07:10.220><c> was</c><00:07:10.310><c> the</c><00:07:10.460><c> last</c><00:07:10.640><c> time</c><00:07:10.970><c> there</c><00:07:11.210><c> dared</c>

00:07:11.530 --> 00:07:11.540 align:start position:0%
and that was the last time there dared
 

00:07:11.540 --> 00:07:13.360 align:start position:0%
and that was the last time there dared
to<00:07:11.900><c> do</c><00:07:12.080><c> that</c><00:07:12.260><c> because</c><00:07:12.470><c> the</c><00:07:12.830><c> backlash</c><00:07:13.340><c> you</c>

00:07:13.360 --> 00:07:13.370 align:start position:0%
to do that because the backlash you
 

00:07:13.370 --> 00:07:15.910 align:start position:0%
to do that because the backlash you
can't<00:07:13.730><c> imagine</c><00:07:14.050><c> even</c><00:07:15.050><c> one</c><00:07:15.320><c> or</c><00:07:15.470><c> two</c><00:07:15.650><c> they</c><00:07:15.830><c> were</c>

00:07:15.910 --> 00:07:15.920 align:start position:0%
can't imagine even one or two they were
 

00:07:15.920 --> 00:07:17.500 align:start position:0%
can't imagine even one or two they were
reading<00:07:16.160><c> so</c><00:07:16.520><c> much</c><00:07:16.640><c> legacy</c><00:07:17.150><c> code</c><00:07:17.330><c> out</c><00:07:17.480><c> there</c>

00:07:17.500 --> 00:07:17.510 align:start position:0%
reading so much legacy code out there
 

00:07:17.510 --> 00:07:19.570 align:start position:0%
reading so much legacy code out there
and<00:07:17.810><c> people</c><00:07:18.080><c> like</c><00:07:18.230><c> my</c><00:07:18.620><c> user</c><00:07:18.980><c> cysts</c><00:07:19.370><c> are</c><00:07:19.460><c> not</c>

00:07:19.570 --> 00:07:19.580 align:start position:0%
and people like my user cysts are not
 

00:07:19.580 --> 00:07:21.520 align:start position:0%
and people like my user cysts are not
working<00:07:19.730><c> anymore</c><00:07:20.210><c> you</c><00:07:20.540><c> know</c><00:07:20.660><c> your</c><00:07:21.260><c> dues</c>

00:07:21.520 --> 00:07:21.530 align:start position:0%
working anymore you know your dues
 

00:07:21.530 --> 00:07:23.740 align:start position:0%
working anymore you know your dues
martin<00:07:22.010><c> was</c><00:07:22.100><c> talking</c><00:07:22.460><c> about</c><00:07:22.490><c> about</c><00:07:22.910><c> crybabies</c>

00:07:23.740 --> 00:07:23.750 align:start position:0%
martin was talking about about crybabies
 

00:07:23.750 --> 00:07:26.050 align:start position:0%
martin was talking about about crybabies
a<00:07:23.780><c> lot</c><00:07:24.020><c> of</c><00:07:24.110><c> crybabies</c><00:07:24.320><c> in</c><00:07:24.740><c> those</c><00:07:24.890><c> days</c><00:07:25.130><c> and</c><00:07:25.400><c> so</c>

00:07:26.050 --> 00:07:26.060 align:start position:0%
a lot of crybabies in those days and so
 

00:07:26.060 --> 00:07:27.970 align:start position:0%
a lot of crybabies in those days and so
what<00:07:26.240><c> did</c><00:07:26.390><c> it</c><00:07:26.510><c> was</c><00:07:26.660><c> they</c><00:07:26.900><c> instead</c><00:07:27.380><c> of</c><00:07:27.500><c> counting</c>

00:07:27.970 --> 00:07:27.980 align:start position:0%
what did it was they instead of counting
 

00:07:27.980 --> 00:07:30.190 align:start position:0%
what did it was they instead of counting
only<00:07:28.310><c> eight</c><00:07:28.520><c> characters</c><00:07:29.090><c> they</c><00:07:29.270><c> added</c><00:07:29.750><c> up</c><00:07:29.960><c> all</c>

00:07:30.190 --> 00:07:30.200 align:start position:0%
only eight characters they added up all
 

00:07:30.200 --> 00:07:33.310 align:start position:0%
only eight characters they added up all
the<00:07:30.440><c> characters</c><00:07:30.919><c> and</c><00:07:31.690><c> it</c><00:07:32.690><c> broke</c><00:07:32.960><c> a</c><00:07:32.990><c> bunch</c><00:07:33.200><c> of</c>

00:07:33.310 --> 00:07:33.320 align:start position:0%
the characters and it broke a bunch of
 

00:07:33.320 --> 00:07:35.260 align:start position:0%
the characters and it broke a bunch of
tests<00:07:33.710><c> which</c><00:07:34.100><c> was</c><00:07:34.370><c> probably</c><00:07:34.820><c> not</c><00:07:34.910><c> such</c><00:07:35.090><c> a</c><00:07:35.150><c> bad</c>

00:07:35.260 --> 00:07:35.270 align:start position:0%
tests which was probably not such a bad
 

00:07:35.270 --> 00:07:36.150 align:start position:0%
tests which was probably not such a bad
thing

00:07:36.150 --> 00:07:36.160 align:start position:0%
thing
 

00:07:36.160 --> 00:07:38.160 align:start position:0%
thing
also<00:07:36.550><c> they</c><00:07:36.880><c> add</c><00:07:37.120><c> the</c><00:07:37.480><c> comparable</c><00:07:38.110><c> interface</c>

00:07:38.160 --> 00:07:38.170 align:start position:0%
also they add the comparable interface
 

00:07:38.170 --> 00:07:40.080 align:start position:0%
also they add the comparable interface
and<00:07:38.680><c> we'll</c><00:07:38.770><c> get</c><00:07:38.890><c> back</c><00:07:39.040><c> to</c><00:07:39.250><c> that</c><00:07:39.280><c> a</c><00:07:39.640><c> little</c><00:07:39.970><c> bit</c>

00:07:40.080 --> 00:07:40.090 align:start position:0%
and we'll get back to that a little bit
 

00:07:40.090 --> 00:07:42.660 align:start position:0%
and we'll get back to that a little bit
later<00:07:40.270><c> what</c><00:07:40.660><c> that</c><00:07:40.840><c> means</c><00:07:41.610><c> now</c><00:07:42.610><c> the</c>

00:07:42.660 --> 00:07:42.670 align:start position:0%
later what that means now the
 

00:07:42.670 --> 00:07:45.000 align:start position:0%
later what that means now the
performance<00:07:43.030><c> in</c><00:07:43.480><c> the</c><00:07:43.660><c> past</c><00:07:43.900><c> was</c><00:07:44.200><c> constant</c>

00:07:45.000 --> 00:07:45.010 align:start position:0%
performance in the past was constant
 

00:07:45.010 --> 00:07:47.070 align:start position:0%
performance in the past was constant
time<00:07:45.190><c> performance</c><00:07:45.550><c> so</c><00:07:46.360><c> it</c><00:07:46.600><c> didn't</c><00:07:46.810><c> matter</c><00:07:46.870><c> how</c>

00:07:47.070 --> 00:07:47.080 align:start position:0%
time performance so it didn't matter how
 

00:07:47.080 --> 00:07:49.920 align:start position:0%
time performance so it didn't matter how
big<00:07:47.320><c> the</c><00:07:47.530><c> the</c><00:07:47.800><c> the</c><00:07:48.640><c> string</c><00:07:48.910><c> was</c><00:07:49.180><c> it</c><00:07:49.480><c> took</c><00:07:49.750><c> the</c>

00:07:49.920 --> 00:07:49.930 align:start position:0%
big the the the string was it took the
 

00:07:49.930 --> 00:07:53.280 align:start position:0%
big the the the string was it took the
same<00:07:50.140><c> amount</c><00:07:50.260><c> of</c><00:07:50.470><c> time</c><00:07:50.820><c> in</c><00:07:51.820><c> constant</c><00:07:52.330><c> time</c><00:07:52.450><c> not</c>

00:07:53.280 --> 00:07:53.290 align:start position:0%
same amount of time in constant time not
 

00:07:53.290 --> 00:07:55.680 align:start position:0%
same amount of time in constant time not
the<00:07:53.410><c> same</c><00:07:53.560><c> but</c><00:07:53.680><c> constant</c><00:07:54.220><c> to</c><00:07:54.700><c> calculate</c><00:07:55.270><c> the</c>

00:07:55.680 --> 00:07:55.690 align:start position:0%
the same but constant to calculate the
 

00:07:55.690 --> 00:07:58.440 align:start position:0%
the same but constant to calculate the
the<00:07:56.220><c> asylum</c><00:07:57.220><c> there</c><00:07:57.340><c> the</c><00:07:57.490><c> hashcode</c><00:07:57.670><c> wears</c><00:07:58.390><c> a</c>

00:07:58.440 --> 00:07:58.450 align:start position:0%
the asylum there the hashcode wears a
 

00:07:58.450 --> 00:08:00.300 align:start position:0%
the asylum there the hashcode wears a
change<00:07:58.780><c> to</c><00:07:58.990><c> linear</c><00:07:59.290><c> time</c><00:07:59.530><c> now</c><00:07:59.890><c> of</c><00:07:59.980><c> course</c><00:08:00.130><c> we</c>

00:08:00.300 --> 00:08:00.310 align:start position:0%
change to linear time now of course we
 

00:08:00.310 --> 00:08:02.250 align:start position:0%
change to linear time now of course we
all<00:08:00.400><c> know</c><00:08:00.430><c> what</c><00:08:01.090><c> that</c><00:08:01.120><c> means</c><00:08:01.300><c> it</c><00:08:01.660><c> can</c><00:08:01.870><c> become</c>

00:08:02.250 --> 00:08:02.260 align:start position:0%
all know what that means it can become
 

00:08:02.260 --> 00:08:05.130 align:start position:0%
all know what that means it can become
significant<00:08:02.890><c> is</c><00:08:03.250><c> slower</c><00:08:03.520><c> to</c><00:08:03.990><c> calculate</c><00:08:04.990><c> the</c>

00:08:05.130 --> 00:08:05.140 align:start position:0%
significant is slower to calculate the
 

00:08:05.140 --> 00:08:07.980 align:start position:0%
significant is slower to calculate the
hash<00:08:05.320><c> and</c><00:08:05.560><c> so</c><00:08:06.250><c> the</c><00:08:06.970><c> book</c><00:08:07.180><c> was</c><00:08:07.420><c> written</c><00:08:07.600><c> and</c>

00:08:07.980 --> 00:08:07.990 align:start position:0%
hash and so the book was written and
 

00:08:07.990 --> 00:08:10.260 align:start position:0%
hash and so the book was written and
called<00:08:08.920><c> the</c><00:08:09.010><c> driver</c><00:08:09.280><c> performance</c><00:08:09.520><c> an</c><00:08:09.910><c> idiot</c>

00:08:10.260 --> 00:08:10.270 align:start position:0%
called the driver performance an idiot
 

00:08:10.270 --> 00:08:16.080 align:start position:0%
called the driver performance an idiot
guide<00:08:10.950><c> know</c><00:08:13.890><c> the</c><00:08:14.890><c> idiom</c><00:08:15.250><c> the</c><00:08:15.580><c> idiom</c><00:08:15.880><c> guide</c>

00:08:16.080 --> 00:08:16.090 align:start position:0%
guide know the idiom the idiom guide
 

00:08:16.090 --> 00:08:17.670 align:start position:0%
guide know the idiom the idiom guide
idiom<00:08:16.420><c> guide</c><00:08:16.570><c> right</c><00:08:16.690><c> here</c><00:08:16.750><c> you</c><00:08:16.930><c> know</c><00:08:17.350><c> it</c><00:08:17.470><c> was</c><00:08:17.590><c> a</c>

00:08:17.670 --> 00:08:17.680 align:start position:0%
idiom guide right here you know it was a
 

00:08:17.680 --> 00:08:20.010 align:start position:0%
idiom guide right here you know it was a
good<00:08:17.890><c> book</c><00:08:18.070><c> when</c><00:08:18.280><c> they</c><00:08:18.430><c> wrote</c><00:08:18.640><c> it</c><00:08:18.880><c> it</c><00:08:19.210><c> was</c><00:08:19.420><c> but</c>

00:08:20.010 --> 00:08:20.020 align:start position:0%
good book when they wrote it it was but
 

00:08:20.020 --> 00:08:22.410 align:start position:0%
good book when they wrote it it was but
performance<00:08:20.560><c> books</c><00:08:20.800><c> they</c><00:08:21.280><c> they've</c><00:08:22.150><c> got</c><00:08:22.390><c> a</c>

00:08:22.410 --> 00:08:22.420 align:start position:0%
performance books they they've got a
 

00:08:22.420 --> 00:08:24.330 align:start position:0%
performance books they they've got a
shelf<00:08:22.690><c> life</c><00:08:22.930><c> of</c><00:08:23.050><c> about</c><00:08:23.110><c> three</c><00:08:23.560><c> months</c><00:08:23.710><c> right</c>

00:08:24.330 --> 00:08:24.340 align:start position:0%
shelf life of about three months right
 

00:08:24.340 --> 00:08:26.250 align:start position:0%
shelf life of about three months right
until<00:08:24.880><c> the</c><00:08:24.970><c> next</c><00:08:25.180><c> job</c><00:08:25.360><c> version</c><00:08:25.660><c> comes</c><00:08:25.840><c> out</c><00:08:26.020><c> and</c>

00:08:26.250 --> 00:08:26.260 align:start position:0%
until the next job version comes out and
 

00:08:26.260 --> 00:08:28.470 align:start position:0%
until the next job version comes out and
then<00:08:26.380><c> there</c><00:08:26.590><c> you</c><00:08:26.800><c> can</c><00:08:26.980><c> you</c><00:08:27.280><c> can</c><00:08:27.460><c> throw</c><00:08:28.360><c> them</c>

00:08:28.470 --> 00:08:28.480 align:start position:0%
then there you can you can throw them
 

00:08:28.480 --> 00:08:32.219 align:start position:0%
then there you can you can throw them
away<00:08:29.610><c> it's</c><00:08:30.610><c> a</c><00:08:30.700><c> problem</c><00:08:31.000><c> they</c><00:08:31.600><c> wrote</c><00:08:31.960><c> a</c><00:08:31.990><c> good</c>

00:08:32.219 --> 00:08:32.229 align:start position:0%
away it's a problem they wrote a good
 

00:08:32.229 --> 00:08:34.980 align:start position:0%
away it's a problem they wrote a good
book<00:08:32.289><c> but</c><00:08:32.620><c> in</c><00:08:32.880><c> sort</c><00:08:33.880><c> of</c><00:08:33.910><c> one</c><00:08:34.419><c> of</c><00:08:34.539><c> the</c><00:08:34.660><c> biggest</c>

00:08:34.980 --> 00:08:34.990 align:start position:0%
book but in sort of one of the biggest
 

00:08:34.990 --> 00:08:36.510 align:start position:0%
book but in sort of one of the biggest
arguments<00:08:35.800><c> in</c><00:08:35.860><c> the</c><00:08:35.919><c> book</c><00:08:36.070><c> was</c><00:08:36.250><c> you</c><00:08:36.370><c> should</c>

00:08:36.510 --> 00:08:36.520 align:start position:0%
arguments in the book was you should
 

00:08:36.520 --> 00:08:38.940 align:start position:0%
arguments in the book was you should
always<00:08:36.700><c> cash</c><00:08:37.120><c> your</c><00:08:37.330><c> hash</c><00:08:37.479><c> code</c><00:08:37.720><c> so</c><00:08:38.710><c> you</c><00:08:38.740><c> must</c>

00:08:38.940 --> 00:08:38.950 align:start position:0%
always cash your hash code so you must
 

00:08:38.950 --> 00:08:40.920 align:start position:0%
always cash your hash code so you must
must<00:08:39.190><c> never</c><00:08:39.400><c> use</c><00:08:39.490><c> string</c><00:08:39.820><c> as</c><00:08:39.940><c> a</c><00:08:39.970><c> hash</c><00:08:40.120><c> code</c><00:08:40.390><c> it</c>

00:08:40.920 --> 00:08:40.930 align:start position:0%
must never use string as a hash code it
 

00:08:40.930 --> 00:08:42.390 align:start position:0%
must never use string as a hash code it
was<00:08:41.080><c> have</c><00:08:41.229><c> to</c><00:08:41.260><c> put</c><00:08:41.680><c> string</c><00:08:41.919><c> inside</c><00:08:42.130><c> an</c><00:08:42.280><c> object</c>

00:08:42.390 --> 00:08:42.400 align:start position:0%
was have to put string inside an object
 

00:08:42.400 --> 00:08:45.870 align:start position:0%
was have to put string inside an object
and<00:08:42.789><c> then</c><00:08:43.120><c> catch</c><00:08:43.780><c> the</c><00:08:43.930><c> hash</c><00:08:44.080><c> code</c><00:08:44.260><c> and</c><00:08:44.880><c> shortly</c>

00:08:45.870 --> 00:08:45.880 align:start position:0%
and then catch the hash code and shortly
 

00:08:45.880 --> 00:08:47.280 align:start position:0%
and then catch the hash code and shortly
after<00:08:46.120><c> the</c><00:08:46.180><c> wrote</c><00:08:46.270><c> the</c><00:08:46.420><c> book</c><00:08:46.600><c> Java</c><00:08:46.870><c> 3</c><00:08:47.080><c> came</c><00:08:47.260><c> out</c>

00:08:47.280 --> 00:08:47.290 align:start position:0%
after the wrote the book Java 3 came out
 

00:08:47.290 --> 00:08:50.750 align:start position:0%
after the wrote the book Java 3 came out
and<00:08:47.680><c> they</c><00:08:47.800><c> cashed</c><00:08:48.340><c> the</c><00:08:48.520><c> hash</c><00:08:48.640><c> code</c><00:08:48.880><c> right</c><00:08:49.510><c> now</c>

00:08:50.750 --> 00:08:50.760 align:start position:0%
and they cashed the hash code right now
 

00:08:50.760 --> 00:08:53.700 align:start position:0%
and they cashed the hash code right now
the<00:08:51.760><c> thing</c><00:08:52.120><c> is</c><00:08:52.150><c> that</c><00:08:52.390><c> the</c><00:08:52.840><c> idea</c><00:08:53.170><c> was</c><00:08:53.320><c> caching</c>

00:08:53.700 --> 00:08:53.710 align:start position:0%
the thing is that the idea was caching
 

00:08:53.710 --> 00:08:56.640 align:start position:0%
the thing is that the idea was caching
the<00:08:53.740><c> hash</c><00:08:53.950><c> code</c><00:08:54.390><c> doesn't</c><00:08:55.390><c> actually</c><00:08:56.170><c> help</c><00:08:56.560><c> us</c>

00:08:56.640 --> 00:08:56.650 align:start position:0%
the hash code doesn't actually help us
 

00:08:56.650 --> 00:08:59.940 align:start position:0%
the hash code doesn't actually help us
that<00:08:56.800><c> often</c><00:08:56.980><c> in</c><00:08:57.760><c> many</c><00:08:58.000><c> cases</c><00:08:58.390><c> because</c><00:08:58.950><c> the</c>

00:08:59.940 --> 00:08:59.950 align:start position:0%
that often in many cases because the
 

00:08:59.950 --> 00:09:01.830 align:start position:0%
that often in many cases because the
whole<00:09:00.130><c> point</c><00:09:00.400><c> of</c><00:09:00.460><c> a</c><00:09:00.580><c> map</c><00:09:00.820><c> is</c><00:09:01.120><c> to</c><00:09:01.240><c> put</c><00:09:01.420><c> things</c><00:09:01.570><c> in</c>

00:09:01.830 --> 00:09:01.840 align:start position:0%
whole point of a map is to put things in
 

00:09:01.840 --> 00:09:04.860 align:start position:0%
whole point of a map is to put things in
which<00:09:02.050><c> you</c><00:09:02.110><c> can</c><00:09:02.290><c> get</c><00:09:02.410><c> back</c><00:09:02.620><c> later</c><00:09:02.920><c> so</c><00:09:03.360><c> you</c><00:09:04.360><c> put</c>

00:09:04.860 --> 00:09:04.870 align:start position:0%
which you can get back later so you put
 

00:09:04.870 --> 00:09:06.810 align:start position:0%
which you can get back later so you put
in<00:09:04.990><c> the</c><00:09:05.140><c> value</c><00:09:05.470><c> you</c><00:09:05.830><c> throw</c><00:09:06.100><c> away</c><00:09:06.280><c> the</c><00:09:06.340><c> key</c><00:09:06.610><c> and</c>

00:09:06.810 --> 00:09:06.820 align:start position:0%
in the value you throw away the key and
 

00:09:06.820 --> 00:09:07.830 align:start position:0%
in the value you throw away the key and
later<00:09:07.000><c> on</c><00:09:07.180><c> when</c><00:09:07.270><c> you</c><00:09:07.330><c> know</c><00:09:07.420><c> what</c><00:09:07.540><c> the</c><00:09:07.570><c> object</c>

00:09:07.830 --> 00:09:07.840 align:start position:0%
later on when you know what the object
 

00:09:07.840 --> 00:09:09.840 align:start position:0%
later on when you know what the object
back<00:09:08.200><c> again</c><00:09:08.470><c> you</c><00:09:08.890><c> regenerate</c><00:09:09.310><c> the</c><00:09:09.640><c> key</c><00:09:09.790><c> and</c>

00:09:09.840 --> 00:09:09.850 align:start position:0%
back again you regenerate the key and
 

00:09:09.850 --> 00:09:11.220 align:start position:0%
back again you regenerate the key and
you<00:09:09.940><c> find</c><00:09:10.180><c> the</c><00:09:10.300><c> value</c><00:09:10.540><c> again</c><00:09:10.600><c> that's</c><00:09:11.050><c> sort</c><00:09:11.140><c> of</c>

00:09:11.220 --> 00:09:11.230 align:start position:0%
you find the value again that's sort of
 

00:09:11.230 --> 00:09:14.640 align:start position:0%
you find the value again that's sort of
hard<00:09:11.380><c> map</c><00:09:11.620><c> works</c><00:09:11.860><c> it's</c><00:09:12.310><c> used</c><00:09:12.610><c> um</c><00:09:12.930><c> and</c><00:09:13.930><c> and</c><00:09:14.320><c> if</c>

00:09:14.640 --> 00:09:14.650 align:start position:0%
hard map works it's used um and and if
 

00:09:14.650 --> 00:09:16.320 align:start position:0%
hard map works it's used um and and if
you<00:09:14.740><c> look</c><00:09:14.860><c> at</c><00:09:14.950><c> this</c><00:09:15.070><c> here</c><00:09:15.370><c> I'm</c><00:09:15.520><c> I've</c><00:09:16.000><c> got</c><00:09:16.180><c> hash</c>

00:09:16.320 --> 00:09:16.330 align:start position:0%
you look at this here I'm I've got hash
 

00:09:16.330 --> 00:09:17.370 align:start position:0%
you look at this here I'm I've got hash
table<00:09:16.510><c> which</c><00:09:16.600><c> takes</c><00:09:16.840><c> a</c><00:09:16.900><c> hundred</c><00:09:17.140><c> milliseconds</c>

00:09:17.370 --> 00:09:17.380 align:start position:0%
table which takes a hundred milliseconds
 

00:09:17.380 --> 00:09:20.640 align:start position:0%
table which takes a hundred milliseconds
just<00:09:17.860><c> to</c><00:09:17.950><c> make</c><00:09:18.070><c> it</c><00:09:18.100><c> really</c><00:09:18.190><c> slow</c><00:09:18.760><c> and</c><00:09:19.650><c> actually</c>

00:09:20.640 --> 00:09:20.650 align:start position:0%
just to make it really slow and actually
 

00:09:20.650 --> 00:09:22.500 align:start position:0%
just to make it really slow and actually
the<00:09:20.920><c> amount</c><00:09:21.040><c> of</c><00:09:21.220><c> time</c><00:09:21.490><c> it</c><00:09:21.640><c> takes</c><00:09:21.820><c> to</c><00:09:22.240><c> put</c>

00:09:22.500 --> 00:09:22.510 align:start position:0%
the amount of time it takes to put
 

00:09:22.510 --> 00:09:24.420 align:start position:0%
the amount of time it takes to put
thirty<00:09:22.840><c> elements</c><00:09:23.320><c> and</c><00:09:23.440><c> get</c><00:09:23.620><c> them</c><00:09:23.830><c> there's</c>

00:09:24.420 --> 00:09:24.430 align:start position:0%
thirty elements and get them there's
 

00:09:24.430 --> 00:09:26.100 align:start position:0%
thirty elements and get them there's
exactly<00:09:24.730><c> the</c><00:09:24.940><c> same</c><00:09:25.120><c> with</c><00:09:25.270><c> you</c><00:09:25.360><c> cash</c><00:09:25.690><c> will</c><00:09:25.930><c> not</c>

00:09:26.100 --> 00:09:26.110 align:start position:0%
exactly the same with you cash will not
 

00:09:26.110 --> 00:09:29.010 align:start position:0%
exactly the same with you cash will not
cash<00:09:26.380><c> the</c><00:09:27.190><c> key</c><00:09:27.400><c> the</c><00:09:28.060><c> three</c><00:09:28.360><c> directors</c><00:09:28.750><c> make</c><00:09:28.930><c> it</c>

00:09:29.010 --> 00:09:29.020 align:start position:0%
cash the key the three directors make it
 

00:09:29.020 --> 00:09:30.900 align:start position:0%
cash the key the three directors make it
does<00:09:29.530><c> make</c><00:09:29.710><c> a</c><00:09:29.740><c> difference</c><00:09:29.800><c> because</c><00:09:30.190><c> inside</c>

00:09:30.900 --> 00:09:30.910 align:start position:0%
does make a difference because inside
 

00:09:30.910 --> 00:09:32.790 align:start position:0%
does make a difference because inside
the<00:09:31.150><c> hash</c><00:09:31.300><c> marks</c><00:09:31.510><c> gonna</c><00:09:31.660><c> catch</c><00:09:31.900><c> anyone</c><00:09:32.320><c> the</c>

00:09:32.790 --> 00:09:32.800 align:start position:0%
the hash marks gonna catch anyone the
 

00:09:32.800 --> 00:09:34.920 align:start position:0%
the hash marks gonna catch anyone the
the<00:09:33.310><c> action</c><00:09:33.700><c> hash</c><00:09:33.850><c> code</c><00:09:34.030><c> value</c><00:09:34.270><c> so</c><00:09:34.420><c> it</c><00:09:34.720><c> really</c>

00:09:34.920 --> 00:09:34.930 align:start position:0%
the action hash code value so it really
 

00:09:34.930 --> 00:09:37.140 align:start position:0%
the action hash code value so it really
doesn't<00:09:35.110><c> prove</c><00:09:35.320><c> that</c><00:09:35.380><c> much</c><00:09:35.680><c> but</c><00:09:36.340><c> anyway</c><00:09:36.820><c> they</c>

00:09:37.140 --> 00:09:37.150 align:start position:0%
doesn't prove that much but anyway they
 

00:09:37.150 --> 00:09:38.700 align:start position:0%
doesn't prove that much but anyway they
added<00:09:37.600><c> this</c><00:09:37.750><c> this</c><00:09:38.110><c> thing</c><00:09:38.290><c> called</c><00:09:38.500><c> the</c><00:09:38.560><c> hash</c>

00:09:38.700 --> 00:09:38.710 align:start position:0%
added this this thing called the hash
 

00:09:38.710 --> 00:09:41.720 align:start position:0%
added this this thing called the hash
and<00:09:39.270><c> what</c><00:09:40.270><c> was</c><00:09:40.360><c> interesting</c><00:09:40.570><c> is</c><00:09:40.900><c> at</c><00:09:41.020><c> the</c><00:09:41.140><c> time</c>

00:09:41.720 --> 00:09:41.730 align:start position:0%
and what was interesting is at the time
 

00:09:41.730 --> 00:09:46.770 align:start position:0%
and what was interesting is at the time
the<00:09:42.730><c> the</c><00:09:43.510><c> memory</c><00:09:43.810><c> for</c><00:09:44.140><c> that</c><00:09:44.260><c> hash</c><00:09:44.470><c> was</c><00:09:44.710><c> free</c>

00:09:46.770 --> 00:09:46.780 align:start position:0%
the the memory for that hash was free
 

00:09:46.780 --> 00:09:49.640 align:start position:0%
the the memory for that hash was free
okay<00:09:47.500><c> on</c><00:09:47.680><c> a</c><00:09:47.760><c> 32-bit</c><00:09:48.760><c> machine</c><00:09:49.120><c> at</c><00:09:49.240><c> least</c>

00:09:49.640 --> 00:09:49.650 align:start position:0%
okay on a 32-bit machine at least
 

00:09:49.650 --> 00:09:53.520 align:start position:0%
okay on a 32-bit machine at least
because<00:09:50.650><c> the</c><00:09:51.550><c> the</c><00:09:51.940><c> value</c><00:09:52.300><c> was</c><00:09:53.140><c> a</c><00:09:53.170><c> char</c><00:09:53.500><c> array</c>

00:09:53.520 --> 00:09:53.530 align:start position:0%
because the the value was a char array
 

00:09:53.530 --> 00:09:57.390 align:start position:0%
because the the value was a char array
and<00:09:54.720><c> that's</c><00:09:55.720><c> four</c><00:09:55.900><c> bytes</c><00:09:56.110><c> the</c><00:09:56.710><c> point</c><00:09:57.100><c> two</c><00:09:57.250><c> to</c>

00:09:57.390 --> 00:09:57.400 align:start position:0%
and that's four bytes the point two to
 

00:09:57.400 --> 00:09:59.850 align:start position:0%
and that's four bytes the point two to
the<00:09:57.520><c> Troy</c><00:09:57.700><c> was</c><00:09:57.910><c> four</c><00:09:58.060><c> bytes</c><00:09:58.240><c> then</c><00:09:59.080><c> int</c><00:09:59.470><c> is</c><00:09:59.830><c> four</c>

00:09:59.850 --> 00:09:59.860 align:start position:0%
the Troy was four bytes then int is four
 

00:09:59.860 --> 00:10:02.370 align:start position:0%
the Troy was four bytes then int is four
bytes<00:10:00.250><c> offset</c><00:10:01.180><c> the</c><00:10:01.390><c> opposite</c><00:10:01.840><c> accountant</c><00:10:02.260><c> has</c>

00:10:02.370 --> 00:10:02.380 align:start position:0%
bytes offset the opposite accountant has
 

00:10:02.380 --> 00:10:04.980 align:start position:0%
bytes offset the opposite accountant has
use<00:10:02.560><c> of</c><00:10:02.650><c> four</c><00:10:02.860><c> bytes</c><00:10:03.010><c> and</c><00:10:03.480><c> it</c><00:10:04.480><c> indicates</c>

00:10:04.980 --> 00:10:04.990 align:start position:0%
use of four bytes and it indicates
 

00:10:04.990 --> 00:10:07.650 align:start position:0%
use of four bytes and it indicates
anyway<00:10:05.560><c> in</c><00:10:05.860><c> multiples</c><00:10:06.400><c> of</c><00:10:06.490><c> eight</c><00:10:06.820><c> therefore</c>

00:10:07.650 --> 00:10:07.660 align:start position:0%
anyway in multiples of eight therefore
 

00:10:07.660 --> 00:10:12.180 align:start position:0%
anyway in multiples of eight therefore
it<00:10:08.320><c> basically</c><00:10:08.770><c> was</c><00:10:08.980><c> for</c><00:10:09.220><c> free</c><00:10:09.430><c> having</c><00:10:11.100><c> put</c><00:10:12.100><c> in</c>

00:10:12.180 --> 00:10:12.190 align:start position:0%
it basically was for free having put in
 

00:10:12.190 --> 00:10:15.510 align:start position:0%
it basically was for free having put in
s<00:10:12.340><c> in</c><00:10:13.440><c> those</c><00:10:14.440><c> day</c><00:10:14.650><c> and</c><00:10:14.770><c> of</c><00:10:14.830><c> course</c><00:10:15.040><c> depending</c>

00:10:15.510 --> 00:10:15.520 align:start position:0%
s in those day and of course depending
 

00:10:15.520 --> 00:10:17.490 align:start position:0%
s in those day and of course depending
on<00:10:15.850><c> what</c><00:10:16.030><c> you're</c><00:10:16.300><c> running</c><00:10:16.600><c> on</c><00:10:16.720><c> its</c><00:10:16.930><c> 32-bit</c>

00:10:17.490 --> 00:10:17.500 align:start position:0%
on what you're running on its 32-bit
 

00:10:17.500 --> 00:10:20.820 align:start position:0%
on what you're running on its 32-bit
64-bit<00:10:18.330><c> copies</c><00:10:19.330><c> Cobras</c><00:10:19.750><c> oops</c><00:10:20.020><c> or</c><00:10:20.200><c> not</c><00:10:20.350><c> it'll</c>

00:10:20.820 --> 00:10:20.830 align:start position:0%
64-bit copies Cobras oops or not it'll
 

00:10:20.830 --> 00:10:22.380 align:start position:0%
64-bit copies Cobras oops or not it'll
make<00:10:21.160><c> a</c><00:10:21.190><c> difference</c><00:10:21.610><c> but</c><00:10:21.760><c> in</c><00:10:21.910><c> those</c><00:10:22.000><c> days</c><00:10:22.060><c> was</c>

00:10:22.380 --> 00:10:22.390 align:start position:0%
make a difference but in those days was
 

00:10:22.390 --> 00:10:28.890 align:start position:0%
make a difference but in those days was
issued<00:10:22.660><c> for</c><00:10:22.750><c> free</c><00:10:25.560><c> and</c><00:10:27.060><c> you</c><00:10:28.060><c> know</c><00:10:28.180><c> we</c><00:10:28.660><c> hope</c><00:10:28.780><c> we</c>

00:10:28.890 --> 00:10:28.900 align:start position:0%
issued for free and you know we hope we
 

00:10:28.900 --> 00:10:30.390 align:start position:0%
issued for free and you know we hope we
all<00:10:29.020><c> know</c><00:10:29.200><c> that</c><00:10:29.380><c> string</c><00:10:29.650><c> is</c><00:10:29.770><c> immutable</c><00:10:29.890><c> in</c>

00:10:30.390 --> 00:10:30.400 align:start position:0%
all know that string is immutable in
 

00:10:30.400 --> 00:10:33.000 align:start position:0%
all know that string is immutable in
fact<00:10:30.550><c> even</c><00:10:30.790><c> say</c><00:10:30.970><c> that</c><00:10:31.150><c> the</c><00:10:31.240><c> documentation</c><00:10:32.050><c> it</c>

00:10:33.000 --> 00:10:33.010 align:start position:0%
fact even say that the documentation it
 

00:10:33.010 --> 00:10:34.230 align:start position:0%
fact even say that the documentation it
actually<00:10:33.310><c> does</c><00:10:33.460><c> change</c><00:10:33.490><c> of</c><00:10:33.970><c> the</c><00:10:34.060><c> hash</c>

00:10:34.230 --> 00:10:34.240 align:start position:0%
actually does change of the hash
 

00:10:34.240 --> 00:10:36.720 align:start position:0%
actually does change of the hash
internally<00:10:35.230><c> when</c><00:10:35.500><c> you</c><00:10:35.710><c> when</c><00:10:36.280><c> you</c><00:10:36.370><c> call</c><00:10:36.550><c> hash</c>

00:10:36.720 --> 00:10:36.730 align:start position:0%
internally when you when you call hash
 

00:10:36.730 --> 00:10:38.880 align:start position:0%
internally when you when you call hash
code<00:10:36.940><c> it</c><00:10:37.060><c> changes</c><00:10:37.390><c> it</c><00:10:37.510><c> into</c><00:10:37.660><c> your</c><00:10:37.870><c> state</c><00:10:38.110><c> it's</c>

00:10:38.880 --> 00:10:38.890 align:start position:0%
code it changes it into your state it's
 

00:10:38.890 --> 00:10:40.590 align:start position:0%
code it changes it into your state it's
not<00:10:38.920><c> visible</c><00:10:39.340><c> from</c><00:10:39.490><c> outside</c><00:10:39.640><c> and</c><00:10:39.970><c> it's</c><00:10:40.240><c> it's</c><00:10:40.510><c> a</c>

00:10:40.590 --> 00:10:40.600 align:start position:0%
not visible from outside and it's it's a
 

00:10:40.600 --> 00:10:43.290 align:start position:0%
not visible from outside and it's it's a
data<00:10:40.810><c> race</c><00:10:41.140><c> which</c><00:10:41.410><c> is</c><00:10:41.650><c> a</c><00:10:41.860><c> benign</c><00:10:42.730><c> dare</c><00:10:43.000><c> to</c><00:10:43.150><c> race</c>

00:10:43.290 --> 00:10:43.300 align:start position:0%
data race which is a benign dare to race
 

00:10:43.300 --> 00:10:46.800 align:start position:0%
data race which is a benign dare to race
because<00:10:43.750><c> the</c><00:10:44.680><c> the</c><00:10:44.950><c> Roth</c><00:10:45.490><c> will</c><00:10:45.700><c> be</c><00:10:45.790><c> the</c><00:10:45.910><c> same</c><00:10:46.150><c> no</c>

00:10:46.800 --> 00:10:46.810 align:start position:0%
because the the Roth will be the same no
 

00:10:46.810 --> 00:10:49.530 align:start position:0%
because the the Roth will be the same no
matter<00:10:46.840><c> how</c><00:10:47.080><c> many</c><00:10:47.290><c> times</c><00:10:47.530><c> call</c><00:10:47.800><c> it</c><00:10:48.270><c> so</c><00:10:49.270><c> the</c><00:10:49.510><c> the</c>

00:10:49.530 --> 00:10:49.540 align:start position:0%
matter how many times call it so the the
 

00:10:49.540 --> 00:10:51.990 align:start position:0%
matter how many times call it so the the
is<00:10:49.870><c> a</c><00:10:49.900><c> day</c><00:10:50.170><c> to</c><00:10:50.230><c> race</c><00:10:50.500><c> but</c><00:10:50.770><c> it</c><00:10:51.220><c> doesn't</c><00:10:51.790><c> matter</c>

00:10:51.990 --> 00:10:52.000 align:start position:0%
is a day to race but it doesn't matter
 

00:10:52.000 --> 00:10:54.300 align:start position:0%
is a day to race but it doesn't matter
because<00:10:52.360><c> in</c><00:10:52.810><c> the</c><00:10:52.930><c> end</c><00:10:53.020><c> the</c><00:10:53.650><c> value</c><00:10:53.980><c> is</c><00:10:54.100><c> still</c>

00:10:54.300 --> 00:10:54.310 align:start position:0%
because in the end the value is still
 

00:10:54.310 --> 00:10:56.580 align:start position:0%
because in the end the value is still
going<00:10:54.520><c> to</c><00:10:54.640><c> be</c><00:10:54.730><c> 42</c><00:10:55.210><c> so</c><00:10:56.080><c> it</c><00:10:56.200><c> doesn't</c><00:10:56.470><c> matter</c>

00:10:56.580 --> 00:10:56.590 align:start position:0%
going to be 42 so it doesn't matter
 

00:10:56.590 --> 00:10:59.460 align:start position:0%
going to be 42 so it doesn't matter
which<00:10:56.800><c> way</c><00:10:56.920><c> you</c><00:10:56.980><c> call</c><00:10:57.190><c> it</c><00:10:57.690><c> now</c><00:10:58.690><c> look</c><00:10:59.290><c> at</c><00:10:59.380><c> these</c>

00:10:59.460 --> 00:10:59.470 align:start position:0%
which way you call it now look at these
 

00:10:59.470 --> 00:11:02.880 align:start position:0%
which way you call it now look at these
strings<00:10:59.830><c> this</c><00:11:00.670><c> is</c><00:11:00.850><c> some</c><00:11:01.710><c> Ukrainian</c><00:11:02.710><c> which</c>

00:11:02.880 --> 00:11:02.890 align:start position:0%
strings this is some Ukrainian which
 

00:11:02.890 --> 00:11:05.310 align:start position:0%
strings this is some Ukrainian which
I've<00:11:03.040><c> found</c><00:11:03.280><c> some</c><00:11:03.550><c> it's</c><00:11:03.730><c> it's</c><00:11:04.060><c> it's</c><00:11:04.330><c> a</c><00:11:04.510><c> it's</c>

00:11:05.310 --> 00:11:05.320 align:start position:0%
I've found some it's it's it's a it's
 

00:11:05.320 --> 00:11:07.110 align:start position:0%
I've found some it's it's it's a it's
it's<00:11:05.620><c> a</c><00:11:05.770><c> 10-4</c><00:11:06.130><c> directory</c><00:11:06.580><c> from</c><00:11:06.730><c> the</c><00:11:06.790><c> Ukraine</c>

00:11:07.110 --> 00:11:07.120 align:start position:0%
it's a 10-4 directory from the Ukraine
 

00:11:07.120 --> 00:11:16.560 align:start position:0%
it's a 10-4 directory from the Ukraine
right<00:11:11.340><c> so</c><00:11:14.130><c> hungry</c><00:11:15.130><c> hunk</c><00:11:15.790><c> units</c><00:11:16.090><c> too</c><00:11:16.240><c> short</c><00:11:16.450><c> the</c>

00:11:16.560 --> 00:11:16.570 align:start position:0%
right so hungry hunk units too short the
 

00:11:16.570 --> 00:11:19.200 align:start position:0%
right so hungry hunk units too short the
names<00:11:16.720><c> are</c><00:11:16.840><c> too</c><00:11:16.960><c> short</c><00:11:17.110><c> so</c><00:11:17.970><c> what</c><00:11:18.970><c> do</c><00:11:19.090><c> these</c>

00:11:19.200 --> 00:11:19.210 align:start position:0%
names are too short so what do these
 

00:11:19.210 --> 00:11:24.350 align:start position:0%
names are too short so what do these
things<00:11:19.510><c> have</c><00:11:19.630><c> in</c><00:11:19.660><c> common</c><00:11:21.900><c> the</c><00:11:22.900><c> hash</c><00:11:23.020><c> code</c><00:11:23.230><c> is</c>

00:11:24.350 --> 00:11:24.360 align:start position:0%
things have in common the hash code is
 

00:11:24.360 --> 00:11:28.260 align:start position:0%
things have in common the hash code is
zero<00:11:25.360><c> right</c><00:11:26.350><c> so</c><00:11:27.310><c> the</c><00:11:27.430><c> hash</c><00:11:27.580><c> code</c><00:11:27.850><c> is</c><00:11:27.970><c> always</c>

00:11:28.260 --> 00:11:28.270 align:start position:0%
zero right so the hash code is always
 

00:11:28.270 --> 00:11:30.750 align:start position:0%
zero right so the hash code is always
zero<00:11:28.600><c> each</c><00:11:28.870><c> of</c><00:11:29.110><c> these</c><00:11:29.230><c> strings</c><00:11:29.590><c> the</c><00:11:30.310><c> hash</c><00:11:30.490><c> code</c>

00:11:30.750 --> 00:11:30.760 align:start position:0%
zero each of these strings the hash code
 

00:11:30.760 --> 00:11:33.630 align:start position:0%
zero each of these strings the hash code
is<00:11:30.880><c> zero</c><00:11:31.120><c> and</c><00:11:31.770><c> if</c><00:11:32.770><c> I</c><00:11:32.860><c> don't</c><00:11:33.010><c> know</c><00:11:33.070><c> how</c><00:11:33.310><c> I</c><00:11:33.340><c> found</c>

00:11:33.630 --> 00:11:33.640 align:start position:0%
is zero and if I don't know how I found
 

00:11:33.640 --> 00:11:36.930 align:start position:0%
is zero and if I don't know how I found
them<00:11:34.590><c> well</c><00:11:35.590><c> okay</c><00:11:35.950><c> there</c><00:11:36.100><c> isn't</c><00:11:36.340><c> algorithm</c>

00:11:36.930 --> 00:11:36.940 align:start position:0%
them well okay there isn't algorithm
 

00:11:36.940 --> 00:11:40.170 align:start position:0%
them well okay there isn't algorithm
that<00:11:37.090><c> somebody</c><00:11:37.420><c> wrote</c><00:11:38.910><c> contramar</c><00:11:39.910><c> than</c><00:11:40.090><c> that</c>

00:11:40.170 --> 00:11:40.180 align:start position:0%
that somebody wrote contramar than that
 

00:11:40.180 --> 00:11:42.840 align:start position:0%
that somebody wrote contramar than that
food<00:11:40.390><c> was</c><00:11:40.860><c> somebody</c><00:11:41.860><c> really</c><00:11:42.130><c> famous</c><00:11:42.160><c> and</c><00:11:42.640><c> I</c>

00:11:42.840 --> 00:11:42.850 align:start position:0%
food was somebody really famous and I
 

00:11:42.850 --> 00:11:44.810 align:start position:0%
food was somebody really famous and I
don't<00:11:43.120><c> remove</c><00:11:43.270><c> his</c><00:11:43.390><c> name</c><00:11:43.570><c> now</c><00:11:43.750><c> so</c><00:11:44.020><c> it's</c><00:11:44.350><c> really</c>

00:11:44.810 --> 00:11:44.820 align:start position:0%
don't remove his name now so it's really
 

00:11:44.820 --> 00:11:48.120 align:start position:0%
don't remove his name now so it's really
no<00:11:45.820><c> it</c><00:11:45.940><c> was</c><00:11:46.090><c> more</c><00:11:46.270><c> reinholt</c><00:11:47.050><c> I</c><00:11:47.140><c> think</c><00:11:47.380><c> I</c><00:11:47.680><c> think</c>

00:11:48.120 --> 00:11:48.130 align:start position:0%
no it was more reinholt I think I think
 

00:11:48.130 --> 00:11:49.110 align:start position:0%
no it was more reinholt I think I think
it<00:11:48.190><c> was</c><00:11:48.280><c> mark</c><00:11:48.550><c> Reinhold</c>

00:11:49.110 --> 00:11:49.120 align:start position:0%
it was mark Reinhold
 

00:11:49.120 --> 00:11:50.940 align:start position:0%
it was mark Reinhold
somebody<00:11:49.720><c> really</c><00:11:49.900><c> famous</c><00:11:49.930><c> wrote</c><00:11:50.440><c> an</c>

00:11:50.940 --> 00:11:50.950 align:start position:0%
somebody really famous wrote an
 

00:11:50.950 --> 00:11:54.450 align:start position:0%
somebody really famous wrote an
algorithm<00:11:51.360><c> where</c><00:11:52.360><c> he</c><00:11:52.660><c> he</c><00:11:53.080><c> reversed</c><00:11:53.710><c> a</c><00:11:54.130><c> hash</c>

00:11:54.450 --> 00:11:54.460 align:start position:0%
algorithm where he he reversed a hash
 

00:11:54.460 --> 00:11:56.880 align:start position:0%
algorithm where he he reversed a hash
code<00:11:54.760><c> so</c><00:11:55.000><c> if</c><00:11:55.570><c> you</c><00:11:55.840><c> want</c><00:11:56.320><c> to</c><00:11:56.410><c> have</c><00:11:56.500><c> a</c><00:11:56.530><c> hash</c><00:11:56.710><c> code</c>

00:11:56.880 --> 00:11:56.890 align:start position:0%
code so if you want to have a hash code
 

00:11:56.890 --> 00:11:59.670 align:start position:0%
code so if you want to have a hash code
of<00:11:56.980><c> 25</c><00:11:57.750><c> you</c><00:11:58.750><c> say</c><00:11:58.930><c> I</c><00:11:58.960><c> want</c><00:11:59.170><c> the</c><00:11:59.230><c> penny</c><00:11:59.410><c> father</c>

00:11:59.670 --> 00:11:59.680 align:start position:0%
of 25 you say I want the penny father
 

00:11:59.680 --> 00:12:00.400 align:start position:0%
of 25 you say I want the penny father
then

00:12:00.400 --> 00:12:00.410 align:start position:0%
then
 

00:12:00.410 --> 00:12:02.410 align:start position:0%
then
generates<00:12:00.830><c> a</c><00:12:00.920><c> string</c><00:12:01.250><c> for</c><00:12:02.030><c> you</c><00:12:02.150><c> with</c><00:12:02.300><c> the</c>

00:12:02.410 --> 00:12:02.420 align:start position:0%
generates a string for you with the
 

00:12:02.420 --> 00:12:04.810 align:start position:0%
generates a string for you with the
hashcode<00:12:02.570><c> 25</c><00:12:03.350><c> per</c><00:12:03.500><c> simply</c><00:12:03.770><c> going</c><00:12:04.370><c> in</c><00:12:04.550><c> reverse</c>

00:12:04.810 --> 00:12:04.820 align:start position:0%
hashcode 25 per simply going in reverse
 

00:12:04.820 --> 00:12:08.710 align:start position:0%
hashcode 25 per simply going in reverse
to<00:12:05.120><c> get</c><00:12:05.270><c> to</c><00:12:05.450><c> the</c><00:12:05.540><c> hashcode</c><00:12:06.190><c> so</c><00:12:07.190><c> so</c><00:12:07.940><c> I</c><00:12:08.270><c> tried</c>

00:12:08.710 --> 00:12:08.720 align:start position:0%
to get to the hashcode so so I tried
 

00:12:08.720 --> 00:12:11.230 align:start position:0%
to get to the hashcode so so I tried
using<00:12:08.900><c> the</c><00:12:09.020><c> algorithm</c><00:12:09.620><c> to</c><00:12:09.800><c> generate</c><00:12:10.240><c> strings</c>

00:12:11.230 --> 00:12:11.240 align:start position:0%
using the algorithm to generate strings
 

00:12:11.240 --> 00:12:13.540 align:start position:0%
using the algorithm to generate strings
but<00:12:11.930><c> the</c><00:12:12.380><c> problem</c><00:12:12.680><c> is</c><00:12:12.740><c> it</c><00:12:12.920><c> will</c><00:12:13.040><c> give</c><00:12:13.220><c> you</c><00:12:13.340><c> a</c>

00:12:13.540 --> 00:12:13.550 align:start position:0%
but the problem is it will give you a
 

00:12:13.550 --> 00:12:16.780 align:start position:0%
but the problem is it will give you a
string<00:12:14.180><c> with</c><00:12:15.020><c> those</c><00:12:15.410><c> with</c><00:12:15.890><c> a</c><00:12:15.920><c> number</c><00:12:16.280><c> but</c><00:12:16.730><c> I</c>

00:12:16.780 --> 00:12:16.790 align:start position:0%
string with those with a number but I
 

00:12:16.790 --> 00:12:18.820 align:start position:0%
string with those with a number but I
wanted<00:12:17.180><c> to</c><00:12:17.240><c> find</c><00:12:17.450><c> lots</c><00:12:17.930><c> of</c><00:12:18.080><c> strings</c><00:12:18.320><c> with</c><00:12:18.560><c> the</c>

00:12:18.820 --> 00:12:18.830 align:start position:0%
wanted to find lots of strings with the
 

00:12:18.830 --> 00:12:20.650 align:start position:0%
wanted to find lots of strings with the
hash<00:12:19.010><c> code</c><00:12:19.220><c> of</c><00:12:19.340><c> zero</c><00:12:19.550><c> so</c><00:12:20.150><c> I</c><00:12:20.180><c> just</c><00:12:20.420><c> stood</c><00:12:20.540><c> at</c>

00:12:20.650 --> 00:12:20.660 align:start position:0%
hash code of zero so I just stood at
 

00:12:20.660 --> 00:12:22.630 align:start position:0%
hash code of zero so I just stood at
brute<00:12:20.870><c> force</c><00:12:21.170><c> are</c><00:12:21.410><c> apologized</c><00:12:21.950><c> but</c><00:12:22.130><c> it</c><00:12:22.250><c> did</c>

00:12:22.630 --> 00:12:22.640 align:start position:0%
brute force are apologized but it did
 

00:12:22.640 --> 00:12:25.270 align:start position:0%
brute force are apologized but it did
work<00:12:22.790><c> an</c><00:12:23.030><c> end</c><00:12:23.210><c> to</c><00:12:23.720><c> the</c><00:12:23.840><c> brute</c><00:12:24.050><c> force</c><00:12:24.320><c> and</c><00:12:24.740><c> so</c>

00:12:25.270 --> 00:12:25.280 align:start position:0%
work an end to the brute force and so
 

00:12:25.280 --> 00:12:27.100 align:start position:0%
work an end to the brute force and so
here<00:12:25.580><c> and</c><00:12:25.790><c> the</c><00:12:26.300><c> limbs</c><00:12:26.480><c> in</c><00:12:26.630><c> smoothly</c><00:12:26.930><c> with</c>

00:12:27.100 --> 00:12:27.110 align:start position:0%
here and the limbs in smoothly with
 

00:12:27.110 --> 00:12:30.070 align:start position:0%
here and the limbs in smoothly with
these<00:12:27.230><c> strings</c><00:12:27.560><c> is</c><00:12:27.770><c> they</c><00:12:28.640><c> all</c><00:12:28.880><c> have</c><00:12:29.180><c> hash</c><00:12:29.840><c> code</c>

00:12:30.070 --> 00:12:30.080 align:start position:0%
these strings is they all have hash code
 

00:12:30.080 --> 00:12:32.730 align:start position:0%
these strings is they all have hash code
of<00:12:30.170><c> zero</c><00:12:30.410><c> and</c><00:12:30.710><c> if</c><00:12:31.580><c> I</c><00:12:31.790><c> add</c><00:12:32.060><c> them</c><00:12:32.390><c> together</c>

00:12:32.730 --> 00:12:32.740 align:start position:0%
of zero and if I add them together
 

00:12:32.740 --> 00:12:35.350 align:start position:0%
of zero and if I add them together
anyone<00:12:33.740><c> to</c><00:12:33.920><c> any</c><00:12:34.190><c> two</c><00:12:34.400><c> together</c><00:12:34.610><c> even</c><00:12:35.120><c> the</c><00:12:35.210><c> same</c>

00:12:35.350 --> 00:12:35.360 align:start position:0%
anyone to any two together even the same
 

00:12:35.360 --> 00:12:38.250 align:start position:0%
anyone to any two together even the same
one<00:12:35.480><c> together</c><00:12:35.630><c> the</c><00:12:36.290><c> hash</c><00:12:36.500><c> code</c><00:12:36.650><c> is</c><00:12:36.800><c> ginn</c><00:12:37.120><c> zero</c>

00:12:38.250 --> 00:12:38.260 align:start position:0%
one together the hash code is ginn zero
 

00:12:38.260 --> 00:12:40.810 align:start position:0%
one together the hash code is ginn zero
because<00:12:39.260><c> once</c><00:12:39.500><c> you</c><00:12:39.560><c> get</c><00:12:39.650><c> a</c><00:12:39.680><c> 0</c><00:12:39.950><c> you</c><00:12:40.040><c> can</c><00:12:40.340><c> you</c>

00:12:40.810 --> 00:12:40.820 align:start position:0%
because once you get a 0 you can you
 

00:12:40.820 --> 00:12:42.640 align:start position:0%
because once you get a 0 you can you
start<00:12:41.060><c> from</c><00:12:41.450><c> the</c><00:12:41.600><c> beginning</c><00:12:41.690><c> to</c><00:12:42.260><c> get</c><00:12:42.380><c> back</c><00:12:42.560><c> to</c>

00:12:42.640 --> 00:12:42.650 align:start position:0%
start from the beginning to get back to
 

00:12:42.650 --> 00:12:44.860 align:start position:0%
start from the beginning to get back to
zero<00:12:43.030><c> so</c><00:12:44.030><c> the</c><00:12:44.150><c> interesting</c><00:12:44.360><c> thing</c><00:12:44.600><c> with</c><00:12:44.690><c> that</c>

00:12:44.860 --> 00:12:44.870 align:start position:0%
zero so the interesting thing with that
 

00:12:44.870 --> 00:12:47.050 align:start position:0%
zero so the interesting thing with that
is<00:12:45.410><c> because</c><00:12:46.130><c> they</c><00:12:46.280><c> thought</c><00:12:46.490><c> the</c><00:12:46.640><c> hash</c><00:12:46.790><c> code</c><00:12:46.970><c> of</c>

00:12:47.050 --> 00:12:47.060 align:start position:0%
is because they thought the hash code of
 

00:12:47.060 --> 00:12:50.170 align:start position:0%
is because they thought the hash code of
zero<00:12:47.710><c> any</c><00:12:48.710><c> combination</c><00:12:49.520><c> of</c><00:12:49.640><c> these</c><00:12:49.820><c> strings</c>

00:12:50.170 --> 00:12:50.180 align:start position:0%
zero any combination of these strings
 

00:12:50.180 --> 00:12:52.560 align:start position:0%
zero any combination of these strings
also<00:12:50.450><c> gives</c><00:12:50.960><c> you</c><00:12:51.080><c> hash</c><00:12:51.260><c> to</c><00:12:51.410><c> the</c><00:12:51.440><c> zero</c><00:12:51.770><c> and</c>

00:12:52.560 --> 00:12:52.570 align:start position:0%
also gives you hash to the zero and
 

00:12:52.570 --> 00:12:54.910 align:start position:0%
also gives you hash to the zero and
let's<00:12:53.570><c> have</c><00:12:53.630><c> a</c><00:12:53.720><c> look</c><00:12:53.780><c> at</c><00:12:53.930><c> why</c><00:12:54.170><c> that</c><00:12:54.200><c> is</c><00:12:54.530><c> so</c><00:12:54.710><c> bad</c>

00:12:54.910 --> 00:12:54.920 align:start position:0%
let's have a look at why that is so bad
 

00:12:54.920 --> 00:12:56.200 align:start position:0%
let's have a look at why that is so bad
I'm<00:12:55.100><c> going</c><00:12:55.190><c> to</c><00:12:55.250><c> look</c><00:12:55.370><c> at</c><00:12:55.460><c> different</c><00:12:55.640><c> versions</c>

00:12:56.200 --> 00:12:56.210 align:start position:0%
I'm going to look at different versions
 

00:12:56.210 --> 00:12:59.950 align:start position:0%
I'm going to look at different versions
of<00:12:56.300><c> Java</c><00:12:56.510><c> and</c><00:12:58.240><c> let's</c><00:12:59.240><c> go</c><00:12:59.360><c> back</c><00:12:59.540><c> to</c><00:12:59.690><c> the</c><00:12:59.810><c> how</c><00:12:59.900><c> do</c>

00:12:59.950 --> 00:12:59.960 align:start position:0%
of Java and let's go back to the how do
 

00:12:59.960 --> 00:13:04.840 align:start position:0%
of Java and let's go back to the how do
you<00:13:00.020><c> eat</c><00:13:02.500><c> so</c><00:13:03.500><c> my</c><00:13:03.770><c> neighbors</c><00:13:04.130><c> in</c><00:13:04.160><c> South</c><00:13:04.490><c> Africa</c>

00:13:04.840 --> 00:13:04.850 align:start position:0%
you eat so my neighbors in South Africa
 

00:13:04.850 --> 00:13:07.990 align:start position:0%
you eat so my neighbors in South Africa
were<00:13:05.440><c> a</c><00:13:06.440><c> little</c><00:13:06.950><c> bit</c><00:13:07.040><c> shorter</c><00:13:07.520><c> than</c><00:13:07.640><c> the</c>

00:13:07.990 --> 00:13:08.000 align:start position:0%
were a little bit shorter than the
 

00:13:08.000 --> 00:13:10.660 align:start position:0%
were a little bit shorter than the
German<00:13:08.330><c> neighbors</c><00:13:08.450><c> and</c><00:13:09.130><c> so</c><00:13:10.130><c> I</c><00:13:10.160><c> see</c><00:13:10.460><c> why</c><00:13:10.610><c> this</c>

00:13:10.660 --> 00:13:10.670 align:start position:0%
German neighbors and so I see why this
 

00:13:10.670 --> 00:13:13.480 align:start position:0%
German neighbors and so I see why this
is<00:13:10.820><c> so</c><00:13:11.090><c> low</c><00:13:11.300><c> here</c><00:13:11.570><c> and</c><00:13:11.950><c> it's</c><00:13:12.950><c> trying</c><00:13:13.310><c> to</c><00:13:13.370><c> get</c>

00:13:13.480 --> 00:13:13.490 align:start position:0%
is so low here and it's trying to get
 

00:13:13.490 --> 00:13:16.780 align:start position:0%
is so low here and it's trying to get
this<00:13:13.640><c> is</c><00:13:13.760><c> working</c><00:13:14.680><c> okay</c><00:13:15.680><c> so</c><00:13:15.740><c> here's</c><00:13:16.550><c> the</c><00:13:16.610><c> code</c>

00:13:16.780 --> 00:13:16.790 align:start position:0%
this is working okay so here's the code
 

00:13:16.790 --> 00:13:20.440 align:start position:0%
this is working okay so here's the code
that's<00:13:17.570><c> before</c><00:13:17.870><c> and</c><00:13:18.400><c> it's</c><00:13:19.400><c> basically</c><00:13:19.790><c> I've</c>

00:13:20.440 --> 00:13:20.450 align:start position:0%
that's before and it's basically I've
 

00:13:20.450 --> 00:13:23.200 align:start position:0%
that's before and it's basically I've
got<00:13:20.510><c> the</c><00:13:20.870><c> zero</c><00:13:21.110><c> hash</c><00:13:21.410><c> codes</c><00:13:21.740><c> and</c><00:13:22.010><c> the</c><00:13:23.000><c> zero</c>

00:13:23.200 --> 00:13:23.210 align:start position:0%
got the zero hash codes and the zero
 

00:13:23.210 --> 00:13:25.390 align:start position:0%
got the zero hash codes and the zero
hash<00:13:23.360><c> codes</c><00:13:23.660><c> just</c><00:13:24.530><c> to</c><00:13:24.590><c> feel</c><00:13:24.740><c> the</c><00:13:24.770><c> strings</c><00:13:25.070><c> and</c>

00:13:25.390 --> 00:13:25.400 align:start position:0%
hash codes just to feel the strings and
 

00:13:25.400 --> 00:13:27.880 align:start position:0%
hash codes just to feel the strings and
then<00:13:25.580><c> I</c><00:13:25.640><c> simply</c><00:13:25.820><c> combine</c><00:13:26.720><c> them</c><00:13:26.930><c> together</c><00:13:27.110><c> like</c>

00:13:27.880 --> 00:13:27.890 align:start position:0%
then I simply combine them together like
 

00:13:27.890 --> 00:13:29.140 align:start position:0%
then I simply combine them together like
you<00:13:28.070><c> can</c><00:13:28.190><c> you</c><00:13:28.490><c> can</c><00:13:28.610><c> have</c><00:13:28.730><c> an</c><00:13:28.790><c> infinite</c><00:13:29.120><c> number</c>

00:13:29.140 --> 00:13:29.150 align:start position:0%
you can you can have an infinite number
 

00:13:29.150 --> 00:13:31.210 align:start position:0%
you can you can have an infinite number
of<00:13:29.420><c> almost</c><00:13:29.840><c> exchange</c><00:13:30.170><c> generated</c><00:13:30.770><c> in</c><00:13:31.010><c> fact</c>

00:13:31.210 --> 00:13:31.220 align:start position:0%
of almost exchange generated in fact
 

00:13:31.220 --> 00:13:33.310 align:start position:0%
of almost exchange generated in fact
practically<00:13:31.850><c> generated</c><00:13:32.360><c> with</c><00:13:32.840><c> hash</c><00:13:33.050><c> code</c><00:13:33.230><c> of</c>

00:13:33.310 --> 00:13:33.320 align:start position:0%
practically generated with hash code of
 

00:13:33.320 --> 00:13:35.890 align:start position:0%
practically generated with hash code of
zero<00:13:33.500><c> so</c><00:13:34.340><c> and</c><00:13:34.730><c> so</c><00:13:35.330><c> what</c><00:13:35.450><c> I'm</c><00:13:35.510><c> going</c><00:13:35.600><c> to</c><00:13:35.660><c> do</c><00:13:35.810><c> is</c>

00:13:35.890 --> 00:13:35.900 align:start position:0%
zero so and so what I'm going to do is
 

00:13:35.900 --> 00:13:37.450 align:start position:0%
zero so and so what I'm going to do is
I'm<00:13:36.110><c> going</c><00:13:36.230><c> to</c><00:13:36.320><c> run</c><00:13:36.590><c> this</c><00:13:36.770><c> first</c><00:13:37.040><c> of</c><00:13:37.130><c> all</c><00:13:37.280><c> with</c>

00:13:37.450 --> 00:13:37.460 align:start position:0%
I'm going to run this first of all with
 

00:13:37.460 --> 00:13:42.670 align:start position:0%
I'm going to run this first of all with
Java<00:13:37.760><c> 6</c><00:13:38.980><c> okay</c><00:13:39.980><c> and</c><00:13:40.360><c> here's</c><00:13:41.360><c> a</c><00:13:41.420><c> as</c><00:13:41.750><c> you</c><00:13:42.140><c> see</c><00:13:42.290><c> as</c><00:13:42.470><c> I</c>

00:13:42.670 --> 00:13:42.680 align:start position:0%
Java 6 okay and here's a as you see as I
 

00:13:42.680 --> 00:13:46.180 align:start position:0%
Java 6 okay and here's a as you see as I
double<00:13:43.160><c> the</c><00:13:43.280><c> number</c><00:13:43.670><c> of</c><00:13:43.700><c> off</c><00:13:44.150><c> strings</c><00:13:45.190><c> and</c>

00:13:46.180 --> 00:13:46.190 align:start position:0%
double the number of off strings and
 

00:13:46.190 --> 00:13:49.120 align:start position:0%
double the number of off strings and
it's<00:13:46.430><c> actually</c><00:13:46.640><c> not</c><00:13:46.700><c> that</c><00:13:46.790><c> many</c><00:13:47.440><c> and</c><00:13:48.440><c> every</c>

00:13:49.120 --> 00:13:49.130 align:start position:0%
it's actually not that many and every
 

00:13:49.130 --> 00:13:52.150 align:start position:0%
it's actually not that many and every
time<00:13:49.250><c> I</c><00:13:49.340><c> make</c><00:13:49.520><c> it</c><00:13:49.550><c> twice</c><00:13:50.330><c> as</c><00:13:50.390><c> much</c><00:13:50.800><c> the</c><00:13:51.800><c> the</c>

00:13:52.150 --> 00:13:52.160 align:start position:0%
time I make it twice as much the the
 

00:13:52.160 --> 00:13:54.820 align:start position:0%
time I make it twice as much the the
speed<00:13:52.580><c> gets</c><00:13:53.120><c> also</c><00:13:53.600><c> approximately</c><00:13:54.320><c> twice</c><00:13:54.590><c> as</c>

00:13:54.820 --> 00:13:54.830 align:start position:0%
speed gets also approximately twice as
 

00:13:54.830 --> 00:13:59.140 align:start position:0%
speed gets also approximately twice as
slow<00:13:55.390><c> so</c><00:13:56.390><c> you</c><00:13:57.040><c> can</c><00:13:58.040><c> see</c><00:13:58.160><c> that</c><00:13:58.340><c> the</c><00:13:58.490><c> hash</c><00:13:58.730><c> the</c>

00:13:59.140 --> 00:13:59.150 align:start position:0%
slow so you can see that the hash the
 

00:13:59.150 --> 00:14:01.780 align:start position:0%
slow so you can see that the hash the
hash<00:13:59.300><c> code</c><00:13:59.540><c> lookup</c><00:14:00.100><c> so</c><00:14:01.100><c> we</c><00:14:01.220><c> look</c><00:14:01.370><c> from</c><00:14:01.460><c> about</c>

00:14:01.780 --> 00:14:01.790 align:start position:0%
hash code lookup so we look from about
 

00:14:01.790 --> 00:14:04.510 align:start position:0%
hash code lookup so we look from about
one<00:14:02.030><c> second</c><00:14:02.590><c> to</c><00:14:03.590><c> about</c><00:14:03.830><c> two</c><00:14:04.040><c> seconds</c><00:14:04.370><c> those</c>

00:14:04.510 --> 00:14:04.520 align:start position:0%
one second to about two seconds those
 

00:14:04.520 --> 00:14:07.420 align:start position:0%
one second to about two seconds those
are<00:14:04.640><c> the</c><00:14:04.730><c> roughly</c><00:14:05.150><c> the</c><00:14:05.540><c> Oh</c><00:14:05.570><c> rod</c><00:14:06.170><c> about</c><00:14:06.350><c> so</c><00:14:07.070><c> and</c>

00:14:07.420 --> 00:14:07.430 align:start position:0%
are the roughly the Oh rod about so and
 

00:14:07.430 --> 00:14:09.940 align:start position:0%
are the roughly the Oh rod about so and
so<00:14:07.570><c> what</c><00:14:08.570><c> you</c><00:14:08.690><c> can</c><00:14:08.720><c> say</c><00:14:09.050><c> is</c><00:14:09.230><c> that</c><00:14:09.410><c> this</c><00:14:09.589><c> this</c>

00:14:09.940 --> 00:14:09.950 align:start position:0%
so what you can say is that this this
 

00:14:09.950 --> 00:14:11.360 align:start position:0%
so what you can say is that this this
actually<00:14:10.310><c> the</c><00:14:10.670><c> hash</c>

00:14:11.360 --> 00:14:11.370 align:start position:0%
actually the hash
 

00:14:11.370 --> 00:14:14.180 align:start position:0%
actually the hash
look<00:14:11.790><c> up</c><00:14:11.970><c> there</c><00:14:12.150><c> the</c><00:14:12.300><c> hashcode</c><00:14:12.560><c> so</c><00:14:13.560><c> to</c><00:14:13.950><c> find</c>

00:14:14.180 --> 00:14:14.190 align:start position:0%
look up there the hashcode so to find
 

00:14:14.190 --> 00:14:15.920 align:start position:0%
look up there the hashcode so to find
the<00:14:14.400><c> value</c><00:14:14.550><c> even</c><00:14:15.180><c> though</c><00:14:15.420><c> the</c><00:14:15.510><c> hashcode</c><00:14:15.660><c> is</c>

00:14:15.920 --> 00:14:15.930 align:start position:0%
the value even though the hashcode is
 

00:14:15.930 --> 00:14:20.120 align:start position:0%
the value even though the hashcode is
cached<00:14:16.610><c> ends</c><00:14:17.610><c> up</c><00:14:17.730><c> being</c><00:14:18.480><c> being</c><00:14:19.350><c> being</c><00:14:19.440><c> linear</c>

00:14:20.120 --> 00:14:20.130 align:start position:0%
cached ends up being being being linear
 

00:14:20.130 --> 00:14:22.610 align:start position:0%
cached ends up being being being linear
now<00:14:20.490><c> the</c><00:14:20.970><c> problem</c><00:14:21.330><c> with</c><00:14:21.570><c> is</c><00:14:21.960><c> not</c><00:14:22.230><c> that</c><00:14:22.500><c> the</c>

00:14:22.610 --> 00:14:22.620 align:start position:0%
now the problem with is not that the
 

00:14:22.620 --> 00:14:24.500 align:start position:0%
now the problem with is not that the
hash<00:14:22.830><c> code</c><00:14:23.070><c> is</c><00:14:23.250><c> cashed</c><00:14:23.490><c> in</c><00:14:23.610><c> lost</c><00:14:23.790><c> cash</c><00:14:24.060><c> the</c>

00:14:24.500 --> 00:14:24.510 align:start position:0%
hash code is cashed in lost cash the
 

00:14:24.510 --> 00:14:26.150 align:start position:0%
hash code is cashed in lost cash the
problem<00:14:24.840><c> is</c><00:14:24.900><c> that</c><00:14:25.020><c> all</c><00:14:25.260><c> of</c><00:14:25.470><c> the</c><00:14:25.650><c> strings</c><00:14:25.890><c> end</c>

00:14:26.150 --> 00:14:26.160 align:start position:0%
problem is that all of the strings end
 

00:14:26.160 --> 00:14:27.740 align:start position:0%
problem is that all of the strings end
up<00:14:26.250><c> in</c><00:14:26.370><c> the</c><00:14:26.460><c> same</c><00:14:26.640><c> bucket</c><00:14:26.880><c> inside</c><00:14:27.510><c> the</c><00:14:27.600><c> hash</c>

00:14:27.740 --> 00:14:27.750 align:start position:0%
up in the same bucket inside the hash
 

00:14:27.750 --> 00:14:30.050 align:start position:0%
up in the same bucket inside the hash
map<00:14:27.990><c> but</c><00:14:28.650><c> that's</c><00:14:29.160><c> why</c><00:14:29.340><c> we</c><00:14:29.580><c> end</c><00:14:29.700><c> up</c><00:14:29.850><c> with</c><00:14:30.030><c> a</c>

00:14:30.050 --> 00:14:30.060 align:start position:0%
map but that's why we end up with a
 

00:14:30.060 --> 00:14:34.880 align:start position:0%
map but that's why we end up with a
linear<00:14:30.390><c> look</c><00:14:30.900><c> up</c><00:14:31.080><c> and</c><00:14:31.590><c> it's</c><00:14:31.740><c> going</c><00:14:31.860><c> from</c><00:14:33.890><c> the</c>

00:14:34.880 --> 00:14:34.890 align:start position:0%
linear look up and it's going from the
 

00:14:34.890 --> 00:14:37.070 align:start position:0%
linear look up and it's going from the
hash<00:14:35.220><c> map</c><00:14:35.490><c> degrades</c><00:14:35.880><c> the</c><00:14:36.120><c> linked</c><00:14:36.360><c> list</c><00:14:36.390><c> right</c>

00:14:37.070 --> 00:14:37.080 align:start position:0%
hash map degrades the linked list right
 

00:14:37.080 --> 00:14:39.500 align:start position:0%
hash map degrades the linked list right
in<00:14:37.290><c> Java</c><00:14:37.500><c> 6</c><00:14:37.800><c> now</c><00:14:38.490><c> something</c><00:14:39.120><c> went</c><00:14:39.330><c> wrong</c>

00:14:39.500 --> 00:14:39.510 align:start position:0%
in Java 6 now something went wrong
 

00:14:39.510 --> 00:14:42.140 align:start position:0%
in Java 6 now something went wrong
probably<00:14:39.960><c> we</c><00:14:40.530><c> exceeded</c><00:14:41.220><c> some</c><00:14:41.490><c> size</c><00:14:41.760><c> where</c>

00:14:42.140 --> 00:14:42.150 align:start position:0%
probably we exceeded some size where
 

00:14:42.150 --> 00:14:44.240 align:start position:0%
probably we exceeded some size where
things<00:14:43.140><c> are</c><00:14:43.290><c> not</c><00:14:43.380><c> not</c><00:14:43.620><c> happy</c><00:14:43.890><c> anymore</c><00:14:43.950><c> but</c>

00:14:44.240 --> 00:14:44.250 align:start position:0%
things are not not happy anymore but
 

00:14:44.250 --> 00:14:48.230 align:start position:0%
things are not not happy anymore but
it's<00:14:45.150><c> generally</c><00:14:45.360><c> going</c><00:14:45.750><c> to</c><00:14:45.840><c> be</c><00:14:45.900><c> linear</c><00:14:46.640><c> now</c><00:14:47.640><c> um</c>

00:14:48.230 --> 00:14:48.240 align:start position:0%
it's generally going to be linear now um
 

00:14:48.240 --> 00:14:50.960 align:start position:0%
it's generally going to be linear now um
in<00:14:48.630><c> Java</c><00:14:48.840><c> 7</c><00:14:49.110><c> they</c><00:14:49.890><c> actually</c><00:14:50.430><c> did</c><00:14:50.700><c> something</c>

00:14:50.960 --> 00:14:50.970 align:start position:0%
in Java 7 they actually did something
 

00:14:50.970 --> 00:14:55.460 align:start position:0%
in Java 7 they actually did something
which<00:14:51.360><c> was</c><00:14:51.600><c> quite</c><00:14:52.380><c> interesting</c><00:14:52.860><c> and</c><00:14:54.470><c> they</c>

00:14:55.460 --> 00:14:55.470 align:start position:0%
which was quite interesting and they
 

00:14:55.470 --> 00:14:58.270 align:start position:0%
which was quite interesting and they
they<00:14:56.100><c> wanted</c><00:14:56.520><c> to</c><00:14:56.700><c> stop</c><00:14:57.090><c> this</c><00:14:57.600><c> from</c><00:14:57.840><c> happening</c>

00:14:58.270 --> 00:14:58.280 align:start position:0%
they wanted to stop this from happening
 

00:14:58.280 --> 00:15:01.550 align:start position:0%
they wanted to stop this from happening
they<00:14:59.280><c> wanted</c><00:14:59.610><c> to</c><00:14:59.700><c> stop</c><00:15:00.030><c> its</c><00:15:00.720><c> people</c><00:15:01.440><c> from</c>

00:15:01.550 --> 00:15:01.560 align:start position:0%
they wanted to stop its people from
 

00:15:01.560 --> 00:15:03.680 align:start position:0%
they wanted to stop its people from
attacking<00:15:01.980><c> web</c><00:15:02.340><c> servers</c><00:15:02.820><c> by</c><00:15:03.060><c> sending</c><00:15:03.570><c> the</c>

00:15:03.680 --> 00:15:03.690 align:start position:0%
attacking web servers by sending the
 

00:15:03.690 --> 00:15:05.930 align:start position:0%
attacking web servers by sending the
same<00:15:03.900><c> string</c><00:15:04.230><c> over</c><00:15:04.410><c> sensory</c><00:15:05.310><c> multiple</c>

00:15:05.930 --> 00:15:05.940 align:start position:0%
same string over sensory multiple
 

00:15:05.940 --> 00:15:07.280 align:start position:0%
same string over sensory multiple
strings<00:15:06.120><c> was</c><00:15:06.300><c> all</c><00:15:06.510><c> over</c><00:15:06.660><c> hash</c><00:15:06.780><c> code</c><00:15:06.960><c> of</c><00:15:07.050><c> zero</c>

00:15:07.280 --> 00:15:07.290 align:start position:0%
strings was all over hash code of zero
 

00:15:07.290 --> 00:15:09.260 align:start position:0%
strings was all over hash code of zero
and<00:15:07.590><c> then</c><00:15:08.100><c> summer</c><00:15:08.340><c> ended</c><00:15:08.610><c> up</c><00:15:08.700><c> in</c><00:15:08.790><c> astonishment</c>

00:15:09.260 --> 00:15:09.270 align:start position:0%
and then summer ended up in astonishment
 

00:15:09.270 --> 00:15:10.850 align:start position:0%
and then summer ended up in astonishment
when<00:15:09.660><c> we</c><00:15:09.810><c> do</c><00:15:09.930><c> cookie</c><00:15:10.200><c> greater</c><00:15:10.380><c> the</c><00:15:10.500><c> hash</c><00:15:10.650><c> brown</c>

00:15:10.850 --> 00:15:10.860 align:start position:0%
when we do cookie greater the hash brown
 

00:15:10.860 --> 00:15:15.200 align:start position:0%
when we do cookie greater the hash brown
and<00:15:11.850><c> so</c><00:15:12.680><c> as</c><00:15:13.680><c> we</c><00:15:13.890><c> saw</c><00:15:14.100><c> with</c><00:15:14.310><c> with</c><00:15:14.580><c> with</c><00:15:15.060><c> this</c>

00:15:15.200 --> 00:15:15.210 align:start position:0%
and so as we saw with with with this
 

00:15:15.210 --> 00:15:22.130 align:start position:0%
and so as we saw with with with this
with<00:15:15.810><c> Java</c><00:15:16.110><c> 6</c><00:15:16.320><c> it</c><00:15:16.980><c> became</c><00:15:17.370><c> a</c><00:15:17.400><c> problem</c><00:15:19.850><c> now</c><00:15:21.140><c> Java</c>

00:15:22.130 --> 00:15:22.140 align:start position:0%
with Java 6 it became a problem now Java
 

00:15:22.140 --> 00:15:25.280 align:start position:0%
with Java 6 it became a problem now Java
for<00:15:23.150><c> now</c><00:15:24.150><c> of</c><00:15:24.270><c> course</c><00:15:24.390><c> I</c><00:15:24.480><c> don't</c><00:15:24.510><c> have</c><00:15:24.660><c> Java</c><00:15:24.930><c> 3</c>

00:15:25.280 --> 00:15:25.290 align:start position:0%
for now of course I don't have Java 3
 

00:15:25.290 --> 00:15:26.960 align:start position:0%
for now of course I don't have Java 3
arm<00:15:25.410><c> our</c><00:15:25.500><c> machine</c><00:15:25.710><c> and</c><00:15:25.860><c> Java</c><00:15:26.310><c> for</c><00:15:26.550><c> the</c><00:15:26.670><c> fields</c>

00:15:26.960 --> 00:15:26.970 align:start position:0%
arm our machine and Java for the fields
 

00:15:26.970 --> 00:15:30.260 align:start position:0%
arm our machine and Java for the fields
of<00:15:27.060><c> the</c><00:15:27.120><c> same</c><00:15:27.300><c> as</c><00:15:27.450><c> 2</c><00:15:27.540><c> over</c><00:15:27.660><c> 3</c><00:15:27.990><c> and</c><00:15:28.640><c> they</c><00:15:29.640><c> they</c>

00:15:30.260 --> 00:15:30.270 align:start position:0%
of the same as 2 over 3 and they they
 

00:15:30.270 --> 00:15:32.540 align:start position:0%
of the same as 2 over 3 and they they
and<00:15:30.630><c> introduced</c><00:15:31.140><c> such</c><00:15:31.290><c> a</c><00:15:31.470><c> sequence</c><00:15:31.950><c> interface</c>

00:15:32.540 --> 00:15:32.550 align:start position:0%
and introduced such a sequence interface
 

00:15:32.550 --> 00:15:34.220 align:start position:0%
and introduced such a sequence interface
so<00:15:33.030><c> that</c><00:15:33.060><c> you</c><00:15:33.300><c> could</c><00:15:33.480><c> either</c><00:15:33.630><c> speak</c><00:15:33.960><c> to</c><00:15:34.050><c> draw</c><00:15:34.200><c> a</c>

00:15:34.220 --> 00:15:34.230 align:start position:0%
so that you could either speak to draw a
 

00:15:34.230 --> 00:15:36.830 align:start position:0%
so that you could either speak to draw a
sequence<00:15:34.650><c> or</c><00:15:34.800><c> to</c><00:15:35.100><c> string</c><00:15:35.670><c> and</c><00:15:35.940><c> also</c><00:15:36.750><c> had</c>

00:15:36.830 --> 00:15:36.840 align:start position:0%
sequence or to string and also had
 

00:15:36.840 --> 00:15:40.190 align:start position:0%
sequence or to string and also had
regular<00:15:37.140><c> expressions</c><00:15:37.590><c> which</c><00:15:37.800><c> are</c><00:15:38.870><c> not</c><00:15:39.870><c> all</c>

00:15:40.190 --> 00:15:40.200 align:start position:0%
regular expressions which are not all
 

00:15:40.200 --> 00:15:41.750 align:start position:0%
regular expressions which are not all
sort<00:15:40.410><c> of</c><00:15:40.440><c> the</c><00:15:40.560><c> fastest</c><00:15:41.100><c> you</c><00:15:41.310><c> talked</c><00:15:41.520><c> a</c><00:15:41.550><c> bit</c>

00:15:41.750 --> 00:15:41.760 align:start position:0%
sort of the fastest you talked a bit
 

00:15:41.760 --> 00:15:43.370 align:start position:0%
sort of the fastest you talked a bit
about<00:15:41.790><c> that</c><00:15:42.120><c> I</c><00:15:42.300><c> think</c><00:15:42.450><c> when</c><00:15:42.810><c> we</c><00:15:42.900><c> get</c><00:15:43.020><c> to</c><00:15:43.230><c> the</c>

00:15:43.370 --> 00:15:43.380 align:start position:0%
about that I think when we get to the
 

00:15:43.380 --> 00:15:48.830 align:start position:0%
about that I think when we get to the
format<00:15:43.710><c> maybe</c><00:15:44.480><c> mention</c><00:15:45.480><c> that</c><00:15:46.430><c> now</c><00:15:47.430><c> of</c><00:15:47.840><c> course</c>

00:15:48.830 --> 00:15:48.840 align:start position:0%
format maybe mention that now of course
 

00:15:48.840 --> 00:15:50.300 align:start position:0%
format maybe mention that now of course
in<00:15:49.080><c> the</c><00:15:49.110><c> past</c><00:15:49.380><c> when</c><00:15:49.680><c> he</c><00:15:49.710><c> added</c><00:15:49.920><c> strings</c>

00:15:50.300 --> 00:15:50.310 align:start position:0%
in the past when he added strings
 

00:15:50.310 --> 00:15:52.820 align:start position:0%
in the past when he added strings
together<00:15:50.490><c> like</c><00:15:50.760><c> hello</c><00:15:51.000><c> class</c><00:15:51.390><c> Arg</c><00:15:51.660><c> 0</c><00:15:51.960><c> it</c><00:15:52.530><c> would</c>

00:15:52.820 --> 00:15:52.830 align:start position:0%
together like hello class Arg 0 it would
 

00:15:52.830 --> 00:15:55.400 align:start position:0%
together like hello class Arg 0 it would
generate<00:15:53.100><c> a</c><00:15:53.340><c> string</c><00:15:53.700><c> buffer</c><00:15:54.020><c> and</c><00:15:55.020><c> they</c><00:15:55.140><c> pulled</c>

00:15:55.400 --> 00:15:55.410 align:start position:0%
generate a string buffer and they pulled
 

00:15:55.410 --> 00:15:57.800 align:start position:0%
generate a string buffer and they pulled
our<00:15:55.530><c> paint</c><00:15:55.830><c> alert</c><00:15:56.100><c> on</c><00:15:56.280><c> a</c><00:15:56.310><c> pin</c><00:15:56.580><c> dogs</c><00:15:56.910><c> note</c><00:15:57.240><c> got</c>

00:15:57.800 --> 00:15:57.810 align:start position:0%
our paint alert on a pin dogs note got
 

00:15:57.810 --> 00:16:00.440 align:start position:0%
our paint alert on a pin dogs note got
to<00:15:58.080><c> string</c><00:15:58.610><c> and</c><00:15:59.610><c> this</c><00:15:59.760><c> new</c><00:16:00.000><c> string</c><00:16:00.270><c> buffer</c>

00:16:00.440 --> 00:16:00.450 align:start position:0%
to string and this new string buffer
 

00:16:00.450 --> 00:16:02.420 align:start position:0%
to string and this new string buffer
would<00:16:00.660><c> would</c><00:16:00.960><c> in</c><00:16:01.170><c> the</c><00:16:01.410><c> Java</c><00:16:01.650><c> code</c><00:16:01.890><c> make</c><00:16:02.220><c> an</c>

00:16:02.420 --> 00:16:02.430 align:start position:0%
would would in the Java code make an
 

00:16:02.430 --> 00:16:07.430 align:start position:0%
would would in the Java code make an
array<00:16:02.700><c> of</c><00:16:02.730><c> 16</c><00:16:03.240><c> characters</c><00:16:05.270><c> in</c><00:16:06.270><c> Java</c><00:16:06.660><c> 5</c><00:16:06.990><c> the</c>

00:16:07.430 --> 00:16:07.440 align:start position:0%
array of 16 characters in Java 5 the
 

00:16:07.440 --> 00:16:09.050 align:start position:0%
array of 16 characters in Java 5 the
fields<00:16:07.770><c> of</c><00:16:07.860><c> Santa's</c><00:16:08.220><c> job</c><00:16:08.340><c> or</c><00:16:08.490><c> not</c><00:16:08.580><c> 3</c><00:16:08.760><c> but</c><00:16:08.790><c> the</c>

00:16:09.050 --> 00:16:09.060 align:start position:0%
fields of Santa's job or not 3 but the
 

00:16:09.060 --> 00:16:10.370 align:start position:0%
fields of Santa's job or not 3 but the
mark<00:16:09.270><c> them</c><00:16:09.450><c> final</c><00:16:09.810><c> except</c><00:16:10.050><c> for</c><00:16:10.170><c> the</c><00:16:10.230><c> hash</c>

00:16:10.370 --> 00:16:10.380 align:start position:0%
mark them final except for the hash
 

00:16:10.380 --> 00:16:12.020 align:start position:0%
mark them final except for the hash
which<00:16:10.860><c> you</c><00:16:11.100><c> know</c><00:16:11.220><c> one</c><00:16:11.430><c> should</c><00:16:11.580><c> always</c><00:16:11.670><c> try</c><00:16:11.970><c> and</c>

00:16:12.020 --> 00:16:12.030 align:start position:0%
which you know one should always try and
 

00:16:12.030 --> 00:16:14.570 align:start position:0%
which you know one should always try and
mark<00:16:12.270><c> fields</c><00:16:12.600><c> final</c><00:16:13.140><c> where</c><00:16:13.620><c> you</c><00:16:13.710><c> can</c><00:16:13.920><c> and</c><00:16:14.160><c> they</c>

00:16:14.570 --> 00:16:14.580 align:start position:0%
mark fields final where you can and they
 

00:16:14.580 --> 00:16:16.430 align:start position:0%
mark fields final where you can and they
had<00:16:14.700><c> code</c><00:16:14.970><c> points</c><00:16:15.390><c> so</c><00:16:15.540><c> a</c><00:16:15.750><c> character</c><00:16:16.200><c> could</c>

00:16:16.430 --> 00:16:16.440 align:start position:0%
had code points so a character could
 

00:16:16.440 --> 00:16:18.260 align:start position:0%
had code points so a character could
actually<00:16:16.560><c> be</c><00:16:16.770><c> a</c><00:16:17.040><c> combination</c><00:16:17.760><c> of</c><00:16:18.060><c> two</c>

00:16:18.260 --> 00:16:18.270 align:start position:0%
actually be a combination of two
 

00:16:18.270 --> 00:16:20.720 align:start position:0%
actually be a combination of two
characters<00:16:18.860><c> also</c><00:16:19.860><c> we</c><00:16:20.220><c> had</c><00:16:20.310><c> sort</c><00:16:20.520><c> of</c><00:16:20.610><c> the</c>

00:16:20.720 --> 00:16:20.730 align:start position:0%
characters also we had sort of the
 

00:16:20.730 --> 00:16:21.680 align:start position:0%
characters also we had sort of the
string<00:16:21.000><c> builder</c><00:16:21.180><c> which</c><00:16:21.480><c> was</c><00:16:21.660><c> a</c>

00:16:21.680 --> 00:16:21.690 align:start position:0%
string builder which was a
 

00:16:21.690 --> 00:16:23.319 align:start position:0%
string builder which was a
unsynchronized<00:16:22.290><c> version</c>

00:16:23.319 --> 00:16:23.329 align:start position:0%
unsynchronized version
 

00:16:23.329 --> 00:16:26.679 align:start position:0%
unsynchronized version
off<00:16:23.480><c> the</c><00:16:23.839><c> string</c><00:16:24.110><c> buffer</c><00:16:24.319><c> and</c><00:16:25.239><c> and</c><00:16:26.239><c> the</c><00:16:26.389><c> char</c>

00:16:26.679 --> 00:16:26.689 align:start position:0%
off the string buffer and and the char
 

00:16:26.689 --> 00:16:28.689 align:start position:0%
off the string buffer and and the char
array<00:16:26.809><c> would</c><00:16:27.709><c> no</c><00:16:27.889><c> longer</c><00:16:27.920><c> be</c><00:16:28.160><c> shared</c><00:16:28.489><c> with</c>

00:16:28.689 --> 00:16:28.699 align:start position:0%
array would no longer be shared with
 

00:16:28.699 --> 00:16:31.479 align:start position:0%
array would no longer be shared with
with<00:16:28.970><c> created</c><00:16:29.420><c> streets</c><00:16:29.920><c> now</c><00:16:30.920><c> the</c><00:16:31.249><c> thing</c><00:16:31.459><c> is</c>

00:16:31.479 --> 00:16:31.489 align:start position:0%
with created streets now the thing is
 

00:16:31.489 --> 00:16:33.639 align:start position:0%
with created streets now the thing is
that<00:16:31.639><c> when</c><00:16:32.209><c> we</c><00:16:32.239><c> went</c><00:16:32.540><c> from</c><00:16:32.629><c> Java</c><00:16:32.899><c> for</c><00:16:33.259><c> taught</c>

00:16:33.639 --> 00:16:33.649 align:start position:0%
that when we went from Java for taught
 

00:16:33.649 --> 00:16:35.619 align:start position:0%
that when we went from Java for taught
Java<00:16:33.860><c> fibrates</c><00:16:34.369><c> who</c><00:16:34.519><c> actually</c><00:16:34.670><c> recompile</c><00:16:35.449><c> the</c>

00:16:35.619 --> 00:16:35.629 align:start position:0%
Java fibrates who actually recompile the
 

00:16:35.629 --> 00:16:38.229 align:start position:0%
Java fibrates who actually recompile the
code<00:16:35.660><c> to</c><00:16:36.529><c> take</c><00:16:36.709><c> advantage</c><00:16:37.249><c> of</c><00:16:37.489><c> this</c><00:16:37.670><c> of</c><00:16:38.059><c> this</c>

00:16:38.229 --> 00:16:38.239 align:start position:0%
code to take advantage of this of this
 

00:16:38.239 --> 00:16:42.280 align:start position:0%
code to take advantage of this of this
new<00:16:38.600><c> new</c><00:16:38.989><c> feature</c><00:16:39.230><c> I</c><00:16:39.589><c> actually</c><00:16:40.459><c> at</c><00:16:41.119><c> one</c><00:16:42.019><c> point</c>

00:16:42.280 --> 00:16:42.290 align:start position:0%
new new feature I actually at one point
 

00:16:42.290 --> 00:16:45.850 align:start position:0%
new new feature I actually at one point
I<00:16:42.649><c> was</c><00:16:42.799><c> working</c><00:16:43.369><c> with</c><00:16:43.459><c> the</c><00:16:43.579><c> library</c><00:16:43.970><c> and</c><00:16:44.829><c> and</c>

00:16:45.850 --> 00:16:45.860 align:start position:0%
I was working with the library and and
 

00:16:45.860 --> 00:16:48.699 align:start position:0%
I was working with the library and and
and<00:16:46.129><c> I</c><00:16:46.279><c> changed</c><00:16:46.759><c> the</c><00:16:47.029><c> string</c><00:16:47.480><c> plus</c><00:16:47.779><c> with</c><00:16:48.290><c> just</c>

00:16:48.699 --> 00:16:48.709 align:start position:0%
and I changed the string plus with just
 

00:16:48.709 --> 00:16:51.220 align:start position:0%
and I changed the string plus with just
normal<00:16:48.799><c> plus</c><00:16:49.129><c> appending</c><00:16:49.610><c> to</c><00:16:50.329><c> use</c><00:16:50.569><c> string</c>

00:16:51.220 --> 00:16:51.230 align:start position:0%
normal plus appending to use string
 

00:16:51.230 --> 00:16:54.100 align:start position:0%
normal plus appending to use string
buffers<00:16:51.679><c> with</c><00:16:51.920><c> the</c><00:16:52.069><c> preset</c><00:16:52.579><c> size</c><00:16:52.869><c> because</c><00:16:53.869><c> it</c>

00:16:54.100 --> 00:16:54.110 align:start position:0%
buffers with the preset size because it
 

00:16:54.110 --> 00:16:56.470 align:start position:0%
buffers with the preset size because it
did<00:16:54.619><c> make</c><00:16:55.009><c> the</c><00:16:55.309><c> noticeable</c><00:16:55.819><c> difference</c><00:16:56.329><c> in</c>

00:16:56.470 --> 00:16:56.480 align:start position:0%
did make the noticeable difference in
 

00:16:56.480 --> 00:16:58.660 align:start position:0%
did make the noticeable difference in
the<00:16:56.569><c> performance</c><00:16:56.839><c> so</c><00:16:57.410><c> I</c><00:16:57.679><c> shared</c><00:16:58.279><c> that</c><00:16:58.429><c> about</c>

00:16:58.660 --> 00:16:58.670 align:start position:0%
the performance so I shared that about
 

00:16:58.670 --> 00:16:59.379 align:start position:0%
the performance so I shared that about
10%

00:16:59.379 --> 00:16:59.389 align:start position:0%
10%
 

00:16:59.389 --> 00:17:02.410 align:start position:0%
10%
I<00:16:59.660><c> made</c><00:17:00.470><c> it</c><00:17:00.559><c> by</c><00:17:00.679><c> 10%</c><00:17:00.920><c> faster</c><00:17:01.399><c> with</c><00:17:02.269><c> that</c>

00:17:02.410 --> 00:17:02.420 align:start position:0%
I made it by 10% faster with that
 

00:17:02.420 --> 00:17:04.809 align:start position:0%
I made it by 10% faster with that
optimization<00:17:03.199><c> when</c><00:17:03.499><c> it</c><00:17:03.619><c> went</c><00:17:03.739><c> back</c><00:17:04.519><c> into</c><00:17:04.730><c> our</c>

00:17:04.809 --> 00:17:04.819 align:start position:0%
optimization when it went back into our
 

00:17:04.819 --> 00:17:07.090 align:start position:0%
optimization when it went back into our
before<00:17:05.149><c> so</c><00:17:06.049><c> the</c><00:17:06.649><c> problem</c><00:17:06.980><c> is</c><00:17:07.039><c> that</c>

00:17:07.090 --> 00:17:07.100 align:start position:0%
before so the problem is that
 

00:17:07.100 --> 00:17:09.399 align:start position:0%
before so the problem is that
optimization<00:17:07.909><c> actually</c><00:17:08.569><c> wouldn't</c><00:17:08.839><c> work</c>

00:17:09.399 --> 00:17:09.409 align:start position:0%
optimization actually wouldn't work
 

00:17:09.409 --> 00:17:11.259 align:start position:0%
optimization actually wouldn't work
Java<00:17:10.010><c> five</c><00:17:10.309><c> hundreds</c><00:17:10.699><c> because</c><00:17:10.819><c> North</c><00:17:11.059><c> no</c>

00:17:11.259 --> 00:17:11.269 align:start position:0%
Java five hundreds because North no
 

00:17:11.269 --> 00:17:12.939 align:start position:0%
Java five hundreds because North no
longer<00:17:11.299><c> string</c><00:17:11.720><c> buffer</c><00:17:11.870><c> it's</c><00:17:12.439><c> doing</c><00:17:12.620><c> bullet</c>

00:17:12.939 --> 00:17:12.949 align:start position:0%
longer string buffer it's doing bullet
 

00:17:12.949 --> 00:17:14.889 align:start position:0%
longer string buffer it's doing bullet
so<00:17:13.159><c> you</c><00:17:13.549><c> actually</c><00:17:13.669><c> had</c><00:17:14.240><c> to</c><00:17:14.329><c> go</c><00:17:14.419><c> back</c><00:17:14.689><c> and</c>

00:17:14.889 --> 00:17:14.899 align:start position:0%
so you actually had to go back and
 

00:17:14.899 --> 00:17:16.090 align:start position:0%
so you actually had to go back and
change<00:17:15.139><c> in</c><00:17:15.380><c> stream</c><00:17:15.529><c> buffers</c><00:17:15.799><c> of</c><00:17:15.919><c> string</c>

00:17:16.090 --> 00:17:16.100 align:start position:0%
change in stream buffers of string
 

00:17:16.100 --> 00:17:20.699 align:start position:0%
change in stream buffers of string
builders<00:17:16.429><c> and</c><00:17:16.689><c> recompile</c><00:17:17.689><c> or</c><00:17:17.870><c> it</c><00:17:17.990><c> hurt</c><00:17:18.760><c> okay</c>

00:17:20.699 --> 00:17:20.709 align:start position:0%
builders and recompile or it hurt okay
 

00:17:20.709 --> 00:17:24.009 align:start position:0%
builders and recompile or it hurt okay
Java<00:17:21.709><c> six</c><00:17:22.269><c> nothing</c><00:17:23.269><c> much</c><00:17:23.510><c> change</c><00:17:23.870><c> in</c><00:17:23.990><c> the</c>

00:17:24.009 --> 00:17:24.019 align:start position:0%
Java six nothing much change in the
 

00:17:24.019 --> 00:17:26.590 align:start position:0%
Java six nothing much change in the
structure<00:17:24.470><c> but</c><00:17:25.039><c> that</c><00:17:25.220><c> did</c><00:17:25.399><c> add</c><00:17:25.639><c> the</c><00:17:25.970><c> speech</c><00:17:26.360><c> of</c>

00:17:26.590 --> 00:17:26.600 align:start position:0%
structure but that did add the speech of
 

00:17:26.600 --> 00:17:29.500 align:start position:0%
structure but that did add the speech of
compressed<00:17:27.139><c> strings</c><00:17:27.679><c> we</c><00:17:27.919><c> sometimes</c><00:17:28.250><c> a</c><00:17:28.940><c> sting</c>

00:17:29.500 --> 00:17:29.510 align:start position:0%
compressed strings we sometimes a sting
 

00:17:29.510 --> 00:17:31.000 align:start position:0%
compressed strings we sometimes a sting
would<00:17:29.600><c> use</c><00:17:29.779><c> a</c><00:17:29.809><c> char</c><00:17:30.260><c> array</c><00:17:30.380><c> and</c><00:17:30.649><c> other</c><00:17:30.769><c> times</c>

00:17:31.000 --> 00:17:31.010 align:start position:0%
would use a char array and other times
 

00:17:31.010 --> 00:17:33.940 align:start position:0%
would use a char array and other times
of<00:17:31.190><c> byte</c><00:17:31.429><c> array</c><00:17:31.730><c> as</c><00:17:31.970><c> as</c><00:17:32.600><c> a</c><00:17:32.659><c> foundation</c><00:17:33.409><c> where</c>

00:17:33.940 --> 00:17:33.950 align:start position:0%
of byte array as as a foundation where
 

00:17:33.950 --> 00:17:35.590 align:start position:0%
of byte array as as a foundation where
and<00:17:34.159><c> for</c><00:17:34.370><c> the</c><00:17:34.490><c> for</c><00:17:34.760><c> keeping</c><00:17:35.120><c> the</c><00:17:35.179><c> characters</c>

00:17:35.590 --> 00:17:35.600 align:start position:0%
and for the for keeping the characters
 

00:17:35.600 --> 00:17:37.720 align:start position:0%
and for the for keeping the characters
which<00:17:36.110><c> was</c><00:17:36.260><c> kind</c><00:17:36.590><c> of</c><00:17:36.710><c> weird</c><00:17:37.070><c> if</c><00:17:37.429><c> you</c><00:17:37.519><c> work</c><00:17:37.700><c> with</c>

00:17:37.720 --> 00:17:37.730 align:start position:0%
which was kind of weird if you work with
 

00:17:37.730 --> 00:17:39.759 align:start position:0%
which was kind of weird if you work with
reflection<00:17:38.510><c> and</c><00:17:39.019><c> you</c><00:17:39.110><c> look</c><00:17:39.260><c> at</c><00:17:39.380><c> the</c><00:17:39.529><c> string</c>

00:17:39.759 --> 00:17:39.769 align:start position:0%
reflection and you look at the string
 

00:17:39.769 --> 00:17:41.169 align:start position:0%
reflection and you look at the string
and<00:17:39.919><c> sometimes</c><00:17:40.279><c> it's</c><00:17:40.399><c> uh</c><00:17:40.490><c> bitrates</c><00:17:40.880><c> I</c><00:17:40.970><c> was</c><00:17:41.090><c> the</c>

00:17:41.169 --> 00:17:41.179 align:start position:0%
and sometimes it's uh bitrates I was the
 

00:17:41.179 --> 00:17:44.680 align:start position:0%
and sometimes it's uh bitrates I was the
char<00:17:41.360><c> array</c><00:17:41.450><c> the</c><00:17:42.080><c> things</c><00:17:42.620><c> got</c><00:17:42.799><c> funky</c><00:17:43.690><c> they</c>

00:17:44.680 --> 00:17:44.690 align:start position:0%
char array the things got funky they
 

00:17:44.690 --> 00:17:46.870 align:start position:0%
char array the things got funky they
also<00:17:44.899><c> added</c><00:17:45.380><c> optimized</c><00:17:46.070><c> stinking</c><00:17:46.610><c> cat</c><00:17:46.789><c> at</c>

00:17:46.870 --> 00:17:46.880 align:start position:0%
also added optimized stinking cat at
 

00:17:46.880 --> 00:17:49.840 align:start position:0%
also added optimized stinking cat at
some<00:17:47.090><c> Java</c><00:17:47.419><c> six</c><00:17:47.720><c> version</c><00:17:48.080><c> and</c><00:17:48.610><c> which</c><00:17:49.610><c> meant</c>

00:17:49.840 --> 00:17:49.850 align:start position:0%
some Java six version and which meant
 

00:17:49.850 --> 00:17:52.899 align:start position:0%
some Java six version and which meant
that<00:17:49.909><c> your</c><00:17:50.210><c> char</c><00:17:50.600><c> a</c><00:17:51.070><c> could</c><00:17:52.070><c> could</c><00:17:52.549><c> at</c><00:17:52.730><c> that</c>

00:17:52.899 --> 00:17:52.909 align:start position:0%
that your char a could could at that
 

00:17:52.909 --> 00:17:55.360 align:start position:0%
that your char a could could at that
would<00:17:53.149><c> also</c><00:17:53.419><c> be</c><00:17:53.630><c> shared</c><00:17:54.080><c> between</c><00:17:54.799><c> your</c><00:17:55.130><c> string</c>

00:17:55.360 --> 00:17:55.370 align:start position:0%
would also be shared between your string
 

00:17:55.370 --> 00:17:57.100 align:start position:0%
would also be shared between your string
buffer<00:17:55.549><c> string</c><00:17:56.000><c> build</c><00:17:56.210><c> and</c><00:17:56.389><c> string</c><00:17:56.720><c> so</c>

00:17:57.100 --> 00:17:57.110 align:start position:0%
buffer string build and string so
 

00:17:57.110 --> 00:17:58.779 align:start position:0%
buffer string build and string so
remember<00:17:57.860><c> when</c><00:17:57.980><c> we</c><00:17:58.010><c> when</c><00:17:58.309><c> I</c><00:17:58.340><c> first</c><00:17:58.669><c> showed</c>

00:17:58.779 --> 00:17:58.789 align:start position:0%
remember when we when I first showed
 

00:17:58.789 --> 00:18:01.060 align:start position:0%
remember when we when I first showed
I've<00:17:59.149><c> wanted</c><00:17:59.450><c> zero</c><00:17:59.690><c> that</c><00:18:00.139><c> they</c><00:18:00.350><c> they</c><00:18:00.740><c> shared</c>

00:18:01.060 --> 00:18:01.070 align:start position:0%
I've wanted zero that they they shared
 

00:18:01.070 --> 00:18:02.379 align:start position:0%
I've wanted zero that they they shared
the<00:18:01.220><c> char</c><00:18:01.490><c> array</c><00:18:01.580><c> between</c><00:18:01.940><c> the</c><00:18:02.029><c> string</c><00:18:02.240><c> but</c>

00:18:02.379 --> 00:18:02.389 align:start position:0%
the char array between the string but
 

00:18:02.389 --> 00:18:04.240 align:start position:0%
the char array between the string but
from<00:18:02.510><c> the</c><00:18:02.600><c> string</c><00:18:02.840><c> that</c><00:18:03.679><c> happens</c>

00:18:04.240 --> 00:18:04.250 align:start position:0%
from the string that happens
 

00:18:04.250 --> 00:18:07.060 align:start position:0%
from the string that happens
automatically<00:18:04.880><c> from</c><00:18:05.149><c> Java</c><00:18:05.389><c> 6</c><00:18:05.630><c> onwards</c><00:18:05.809><c> so</c><00:18:06.620><c> if</c>

00:18:07.060 --> 00:18:07.070 align:start position:0%
automatically from Java 6 onwards so if
 

00:18:07.070 --> 00:18:08.529 align:start position:0%
automatically from Java 6 onwards so if
you<00:18:07.190><c> look</c><00:18:07.309><c> at</c><00:18:07.370><c> the</c><00:18:07.490><c> Java</c><00:18:07.730><c> code</c><00:18:08.029><c> it</c><00:18:08.240><c> doesn't</c>

00:18:08.529 --> 00:18:08.539 align:start position:0%
you look at the Java code it doesn't
 

00:18:08.539 --> 00:18:10.210 align:start position:0%
you look at the Java code it doesn't
happen<00:18:08.720><c> but</c><00:18:09.289><c> in</c><00:18:09.440><c> the</c><00:18:09.529><c> real</c><00:18:09.679><c> world</c><00:18:09.889><c> that</c><00:18:10.039><c> does</c>

00:18:10.210 --> 00:18:10.220 align:start position:0%
happen but in the real world that does
 

00:18:10.220 --> 00:18:13.389 align:start position:0%
happen but in the real world that does
happen<00:18:10.429><c> so</c><00:18:10.730><c> that</c><00:18:10.880><c> that's</c><00:18:11.090><c> quite</c><00:18:11.269><c> cool</c><00:18:12.399><c> here's</c>

00:18:13.389 --> 00:18:13.399 align:start position:0%
happen so that that's quite cool here's
 

00:18:13.399 --> 00:18:16.419 align:start position:0%
happen so that that's quite cool here's
some<00:18:13.580><c> so</c><00:18:14.450><c> the</c><00:18:14.570><c> first</c><00:18:14.809><c> benchmark</c><00:18:15.279><c> we</c><00:18:16.279><c> were</c>

00:18:16.419 --> 00:18:16.429 align:start position:0%
some so the first benchmark we were
 

00:18:16.429 --> 00:18:18.549 align:start position:0%
some so the first benchmark we were
adding<00:18:16.669><c> only</c><00:18:17.000><c> strings</c><00:18:17.419><c> together</c><00:18:17.630><c> I</c><00:18:18.019><c> mean</c>

00:18:18.549 --> 00:18:18.559 align:start position:0%
adding only strings together I mean
 

00:18:18.559 --> 00:18:20.710 align:start position:0%
adding only strings together I mean
you're<00:18:18.710><c> only</c><00:18:18.889><c> adding</c><00:18:19.130><c> strings</c><00:18:19.580><c> together</c><00:18:19.880><c> it</c>

00:18:20.710 --> 00:18:20.720 align:start position:0%
you're only adding strings together it
 

00:18:20.720 --> 00:18:22.299 align:start position:0%
you're only adding strings together it
doesn't<00:18:21.049><c> matter</c><00:18:21.169><c> which</c><00:18:21.350><c> which</c><00:18:21.769><c> way</c><00:18:21.919><c> you</c><00:18:21.980><c> do</c><00:18:22.279><c> it</c>

00:18:22.299 --> 00:18:22.309 align:start position:0%
doesn't matter which which way you do it
 

00:18:22.309 --> 00:18:25.570 align:start position:0%
doesn't matter which which way you do it
it's<00:18:22.700><c> exactly</c><00:18:22.970><c> the</c><00:18:23.360><c> same</c><00:18:23.570><c> speed</c><00:18:24.100><c> so</c><00:18:25.100><c> when</c><00:18:25.519><c> you</c>

00:18:25.570 --> 00:18:25.580 align:start position:0%
it's exactly the same speed so when you
 

00:18:25.580 --> 00:18:29.710 align:start position:0%
it's exactly the same speed so when you
look<00:18:25.730><c> at</c><00:18:25.850><c> these</c><00:18:25.970><c> values</c><00:18:27.220><c> the</c><00:18:28.220><c> the</c><00:18:28.940><c> pain</c><00:18:29.210><c> basic</c>

00:18:29.710 --> 00:18:29.720 align:start position:0%
look at these values the the pain basic
 

00:18:29.720 --> 00:18:32.139 align:start position:0%
look at these values the the pain basic
is<00:18:29.929><c> that</c><00:18:30.139><c> was</c><00:18:30.529><c> this</c><00:18:30.649><c> with</c><00:18:30.830><c> plus</c><00:18:31.070><c> the</c><00:18:31.909><c> pain</c>

00:18:32.139 --> 00:18:32.149 align:start position:0%
is that was this with plus the pain
 

00:18:32.149 --> 00:18:33.320 align:start position:0%
is that was this with plus the pain
string<00:18:32.539><c> is</c><00:18:32.960><c> with</c>

00:18:33.320 --> 00:18:33.330 align:start position:0%
string is with
 

00:18:33.330 --> 00:18:35.420 align:start position:0%
string is with
a stringbuilder<00:18:34.560><c> and</c><00:18:34.770><c> a</c><00:18:34.860><c> pin</c><00:18:35.010><c> stringbuilder</c>

00:18:35.420 --> 00:18:35.430 align:start position:0%
a stringbuilder and a pin stringbuilder
 

00:18:35.430 --> 00:18:38.090 align:start position:0%
a stringbuilder and a pin stringbuilder
of<00:18:35.640><c> the</c><00:18:35.760><c> size</c><00:18:36.050><c> you</c><00:18:37.050><c> notice</c><00:18:37.320><c> that</c><00:18:37.440><c> they</c><00:18:37.650><c> create</c>

00:18:38.090 --> 00:18:38.100 align:start position:0%
of the size you notice that they create
 

00:18:38.100 --> 00:18:41.030 align:start position:0%
of the size you notice that they create
the<00:18:38.400><c> same</c><00:18:38.640><c> number</c><00:18:39.000><c> of</c><00:18:39.030><c> bytes</c><00:18:39.890><c> hundred</c><00:18:40.890><c> eight</c>

00:18:41.030 --> 00:18:41.040 align:start position:0%
the same number of bytes hundred eight
 

00:18:41.040 --> 00:18:43.820 align:start position:0%
the same number of bytes hundred eight
bytes<00:18:41.310><c> Java</c><00:18:42.060><c> seven</c><00:18:42.420><c> hundred</c><00:18:42.750><c> bytes</c><00:18:42.900><c> Java</c>

00:18:43.820 --> 00:18:43.830 align:start position:0%
bytes Java seven hundred bytes Java
 

00:18:43.830 --> 00:18:46.370 align:start position:0%
bytes Java seven hundred bytes Java
eight<00:18:43.920><c> hundred</c><00:18:44.310><c> bytes</c><00:18:44.490><c> 12</c><00:18:45.210><c> 11</c><00:18:45.450><c> 100</c><00:18:45.780><c> 20</c><00:18:46.260><c> bytes</c>

00:18:46.370 --> 00:18:46.380 align:start position:0%
eight hundred bytes 12 11 100 20 bytes
 

00:18:46.380 --> 00:18:48.380 align:start position:0%
eight hundred bytes 12 11 100 20 bytes
we'll<00:18:46.590><c> talk</c><00:18:46.710><c> more</c><00:18:46.890><c> but</c><00:18:47.070><c> Java</c><00:18:47.940><c> level</c><00:18:48.180><c> versus</c>

00:18:48.380 --> 00:18:48.390 align:start position:0%
we'll talk more but Java level versus
 

00:18:48.390 --> 00:18:50.360 align:start position:0%
we'll talk more but Java level versus
Java<00:18:48.540><c> 18</c><00:18:48.930><c> moment</c><00:18:49.230><c> and</c><00:18:49.350><c> that</c><00:18:49.860><c> includes</c><00:18:50.160><c> driver</c>

00:18:50.360 --> 00:18:50.370 align:start position:0%
Java 18 moment and that includes driver
 

00:18:50.370 --> 00:18:54.590 align:start position:0%
Java 18 moment and that includes driver
9<00:18:50.580><c> as</c><00:18:50.730><c> well</c><00:18:50.760><c> why</c><00:18:51.420><c> that's</c><00:18:51.690><c> nice</c><00:18:53.030><c> Java</c><00:18:54.030><c> 7</c><00:18:54.240><c> I</c>

00:18:54.590 --> 00:18:54.600 align:start position:0%
9 as well why that's nice Java 7 I
 

00:18:54.600 --> 00:18:56.420 align:start position:0%
9 as well why that's nice Java 7 I
mentioned<00:18:55.230><c> in</c><00:18:55.350><c> that</c><00:18:55.470><c> day</c><00:18:55.620><c> that</c><00:18:55.650><c> they</c><00:18:56.100><c> were</c>

00:18:56.420 --> 00:18:56.430 align:start position:0%
mentioned in that day that they were
 

00:18:56.430 --> 00:18:58.340 align:start position:0%
mentioned in that day that they were
concerned<00:18:56.820><c> about</c><00:18:57.120><c> these</c><00:18:57.360><c> the</c><00:18:57.930><c> plus</c><00:18:58.170><c> will</c>

00:18:58.340 --> 00:18:58.350 align:start position:0%
concerned about these the plus will
 

00:18:58.350 --> 00:19:01.100 align:start position:0%
concerned about these the plus will
attack<00:18:58.710><c> on</c><00:18:58.950><c> on</c><00:18:59.130><c> servers</c><00:18:59.880><c> by</c><00:19:00.060><c> having</c><00:19:00.390><c> lots</c><00:19:00.870><c> lots</c>

00:19:01.100 --> 00:19:01.110 align:start position:0%
attack on on servers by having lots lots
 

00:19:01.110 --> 00:19:03.410 align:start position:0%
attack on on servers by having lots lots
of<00:19:01.260><c> strings</c><00:19:01.530><c> of</c><00:19:01.740><c> hash</c><00:19:02.010><c> code</c><00:19:02.250><c> of</c><00:19:02.370><c> zero</c><00:19:02.610><c> so</c><00:19:03.240><c> they</c>

00:19:03.410 --> 00:19:03.420 align:start position:0%
of strings of hash code of zero so they
 

00:19:03.420 --> 00:19:06.260 align:start position:0%
of strings of hash code of zero so they
solved<00:19:03.810><c> that</c><00:19:03.840><c> by</c><00:19:04.170><c> having</c><00:19:04.760><c> but</c><00:19:05.760><c> by</c><00:19:06.060><c> by</c><00:19:06.240><c> having</c>

00:19:06.260 --> 00:19:06.270 align:start position:0%
solved that by having but by by having
 

00:19:06.270 --> 00:19:09.890 align:start position:0%
solved that by having but by by having
another<00:19:06.930><c> hash</c><00:19:07.260><c> code</c><00:19:07.730><c> int</c><00:19:08.730><c> it's</c><00:19:09.300><c> a</c><00:19:09.420><c> called</c><00:19:09.690><c> hash</c>

00:19:09.890 --> 00:19:09.900 align:start position:0%
another hash code int it's a called hash
 

00:19:09.900 --> 00:19:11.750 align:start position:0%
another hash code int it's a called hash
32<00:19:10.410><c> now</c><00:19:10.740><c> when</c><00:19:10.890><c> I</c><00:19:10.980><c> saw</c><00:19:11.130><c> that</c><00:19:11.220><c> I</c><00:19:11.310><c> was</c><00:19:11.400><c> got</c><00:19:11.520><c> really</c>

00:19:11.750 --> 00:19:11.760 align:start position:0%
32 now when I saw that I was got really
 

00:19:11.760 --> 00:19:13.730 align:start position:0%
32 now when I saw that I was got really
excited<00:19:12.180><c> I</c><00:19:12.240><c> thought</c><00:19:12.360><c> awesome</c><00:19:13.200><c> now</c><00:19:13.380><c> all</c><00:19:13.590><c> my</c>

00:19:13.730 --> 00:19:13.740 align:start position:0%
excited I thought awesome now all my
 

00:19:13.740 --> 00:19:17.000 align:start position:0%
excited I thought awesome now all my
systems<00:19:14.160><c> are</c><00:19:14.280><c> going</c><00:19:14.400><c> to</c><00:19:14.460><c> be</c><00:19:14.520><c> faster</c><00:19:14.970><c> and</c><00:19:15.860><c> and</c><00:19:16.860><c> I</c>

00:19:17.000 --> 00:19:17.010 align:start position:0%
systems are going to be faster and and I
 

00:19:17.010 --> 00:19:19.400 align:start position:0%
systems are going to be faster and and I
use<00:19:17.250><c> it</c><00:19:17.430><c> for</c><00:19:17.580><c> many</c><00:19:17.700><c> years</c><00:19:18.000><c> without</c><00:19:18.410><c> realizing</c>

00:19:19.400 --> 00:19:19.410 align:start position:0%
use it for many years without realizing
 

00:19:19.410 --> 00:19:22.460 align:start position:0%
use it for many years without realizing
that<00:19:19.700><c> it</c><00:19:20.700><c> doesn't</c><00:19:21.180><c> work</c><00:19:21.450><c> until</c><00:19:21.900><c> new</c><00:19:22.110><c> it's</c>

00:19:22.460 --> 00:19:22.470 align:start position:0%
that it doesn't work until new it's
 

00:19:22.470 --> 00:19:26.630 align:start position:0%
that it doesn't work until new it's
explicitly<00:19:23.040><c> turned</c><00:19:23.310><c> it</c><00:19:23.400><c> on</c><00:19:25.130><c> any</c><00:19:26.130><c> redundant</c><00:19:26.580><c> of</c>

00:19:26.630 --> 00:19:26.640 align:start position:0%
explicitly turned it on any redundant of
 

00:19:26.640 --> 00:19:29.210 align:start position:0%
explicitly turned it on any redundant of
supremist<00:19:27.120><c> talk</c><00:19:27.360><c> was</c><00:19:27.660><c> like</c><00:19:27.750><c> oh</c><00:19:27.930><c> it</c><00:19:28.830><c> wasn't</c>

00:19:29.210 --> 00:19:29.220 align:start position:0%
supremist talk was like oh it wasn't
 

00:19:29.220 --> 00:19:32.090 align:start position:0%
supremist talk was like oh it wasn't
wasn't<00:19:29.520><c> never</c><00:19:29.730><c> used</c><00:19:30.090><c> right</c><00:19:30.390><c> so</c><00:19:31.260><c> the</c><00:19:31.800><c> good</c>

00:19:32.090 --> 00:19:32.100 align:start position:0%
wasn't never used right so the good
 

00:19:32.100 --> 00:19:33.770 align:start position:0%
wasn't never used right so the good
thing<00:19:32.130><c> with</c><00:19:32.400><c> having</c><00:19:32.610><c> hash</c><00:19:32.940><c> 32</c><00:19:33.360><c> it's</c><00:19:33.510><c> still</c><00:19:33.750><c> a</c>

00:19:33.770 --> 00:19:33.780 align:start position:0%
thing with having hash 32 it's still a
 

00:19:33.780 --> 00:19:37.070 align:start position:0%
thing with having hash 32 it's still a
linear<00:19:34.050><c> cost</c><00:19:34.560><c> but</c><00:19:35.460><c> they</c><00:19:36.420><c> use</c><00:19:36.900><c> some</c>

00:19:37.070 --> 00:19:37.080 align:start position:0%
linear cost but they use some
 

00:19:37.080 --> 00:19:39.020 align:start position:0%
linear cost but they use some
randomization<00:19:37.530><c> to</c><00:19:38.160><c> stop</c><00:19:38.400><c> you</c><00:19:38.580><c> from</c><00:19:38.790><c> being</c>

00:19:39.020 --> 00:19:39.030 align:start position:0%
randomization to stop you from being
 

00:19:39.030 --> 00:19:41.030 align:start position:0%
randomization to stop you from being
able<00:19:39.180><c> to</c><00:19:39.510><c> make</c><00:19:39.690><c> always</c><00:19:40.410><c> the</c><00:19:40.590><c> same</c><00:19:40.770><c> hashcode</c>

00:19:41.030 --> 00:19:41.040 align:start position:0%
able to make always the same hashcode
 

00:19:41.040 --> 00:19:44.300 align:start position:0%
able to make always the same hashcode
and<00:19:41.400><c> and</c><00:19:42.180><c> they</c><00:19:42.750><c> default</c><00:19:43.170><c> as</c><00:19:43.320><c> hash</c><00:19:43.500><c> of</c><00:19:43.680><c> one</c><00:19:43.950><c> not</c>

00:19:44.300 --> 00:19:44.310 align:start position:0%
and and they default as hash of one not
 

00:19:44.310 --> 00:19:46.580 align:start position:0%
and and they default as hash of one not
hash<00:19:44.610><c> of</c><00:19:44.790><c> zero</c><00:19:45.030><c> so</c><00:19:45.330><c> if</c><00:19:45.780><c> it's</c><00:19:45.990><c> not</c><00:19:46.110><c> initially</c>

00:19:46.580 --> 00:19:46.590 align:start position:0%
hash of zero so if it's not initially
 

00:19:46.590 --> 00:19:48.530 align:start position:0%
hash of zero so if it's not initially
it's<00:19:46.740><c> gonna</c><00:19:46.860><c> be</c><00:19:46.950><c> hash</c><00:19:47.130><c> of</c><00:19:47.280><c> hash</c><00:19:47.610><c> of</c><00:19:47.760><c> one</c><00:19:47.940><c> so</c>

00:19:48.530 --> 00:19:48.540 align:start position:0%
it's gonna be hash of hash of one so
 

00:19:48.540 --> 00:19:51.260 align:start position:0%
it's gonna be hash of hash of one so
it's<00:19:49.320><c> it</c><00:19:49.650><c> hops</c><00:19:49.950><c> a</c><00:19:50.070><c> lot</c><00:19:50.190><c> so</c><00:19:50.340><c> if</c><00:19:50.610><c> you</c><00:19:50.940><c> run</c><00:19:51.150><c> this</c>

00:19:51.260 --> 00:19:51.270 align:start position:0%
it's it hops a lot so if you run this
 

00:19:51.270 --> 00:19:54.830 align:start position:0%
it's it hops a lot so if you run this
with<00:19:51.480><c> Java</c><00:19:51.750><c> 7</c><00:19:52.700><c> they</c><00:19:53.700><c> must</c><00:19:53.880><c> quickly</c><00:19:54.000><c> copy</c><00:19:54.630><c> the</c>

00:19:54.830 --> 00:19:54.840 align:start position:0%
with Java 7 they must quickly copy the
 

00:19:54.840 --> 00:19:57.700 align:start position:0%
with Java 7 they must quickly copy the
server

00:19:57.700 --> 00:19:57.710 align:start position:0%
 
 

00:19:57.710 --> 00:20:01.040 align:start position:0%
 
so<00:19:58.710><c> if</c><00:19:58.860><c> we</c><00:19:58.980><c> go</c><00:19:59.070><c> back</c><00:19:59.100><c> to</c><00:19:59.520><c> our</c><00:19:59.940><c> our</c><00:20:00.300><c> test</c><00:20:00.780><c> here</c>

00:20:01.040 --> 00:20:01.050 align:start position:0%
so if we go back to our our test here
 

00:20:01.050 --> 00:20:03.190 align:start position:0%
so if we go back to our our test here
run<00:20:01.350><c> Java</c><00:20:01.710><c> 7</c>

00:20:03.190 --> 00:20:03.200 align:start position:0%
run Java 7
 

00:20:03.200 --> 00:20:05.990 align:start position:0%
run Java 7
the<00:20:04.200><c> first</c><00:20:04.500><c> version</c><00:20:04.890><c> is</c><00:20:04.980><c> going</c><00:20:05.130><c> to</c><00:20:05.250><c> be</c><00:20:05.340><c> exactly</c>

00:20:05.990 --> 00:20:06.000 align:start position:0%
the first version is going to be exactly
 

00:20:06.000 --> 00:20:08.120 align:start position:0%
the first version is going to be exactly
the<00:20:06.150><c> same</c><00:20:06.360><c> as</c><00:20:06.540><c> Java</c><00:20:06.750><c> 6</c><00:20:06.930><c> also</c><00:20:07.710><c> linear</c>

00:20:08.120 --> 00:20:08.130 align:start position:0%
the same as Java 6 also linear
 

00:20:08.130 --> 00:20:11.150 align:start position:0%
the same as Java 6 also linear
degradation<00:20:09.030><c> as</c><00:20:09.450><c> we</c><00:20:10.200><c> double</c><00:20:10.530><c> the</c><00:20:10.590><c> size</c><00:20:10.800><c> of</c><00:20:10.950><c> int</c>

00:20:11.150 --> 00:20:11.160 align:start position:0%
degradation as we double the size of int
 

00:20:11.160 --> 00:20:14.410 align:start position:0%
degradation as we double the size of int
gets<00:20:11.490><c> about</c><00:20:11.790><c> twice</c><00:20:12.090><c> as</c><00:20:12.270><c> slow</c><00:20:12.650><c> the</c><00:20:13.650><c> proximity</c>

00:20:14.410 --> 00:20:14.420 align:start position:0%
gets about twice as slow the proximity
 

00:20:14.420 --> 00:20:16.160 align:start position:0%
gets about twice as slow the proximity
obviously<00:20:15.420><c> there's</c><00:20:15.540><c> some</c><00:20:15.630><c> bumps</c><00:20:15.870><c> in</c><00:20:15.900><c> the</c><00:20:15.990><c> road</c>

00:20:16.160 --> 00:20:16.170 align:start position:0%
obviously there's some bumps in the road
 

00:20:16.170 --> 00:20:19.640 align:start position:0%
obviously there's some bumps in the road
but<00:20:16.350><c> that's</c><00:20:17.100><c> sort</c><00:20:17.280><c> of</c><00:20:17.370><c> what</c><00:20:17.520><c> happens</c><00:20:17.550><c> and</c><00:20:18.650><c> then</c>

00:20:19.640 --> 00:20:19.650 align:start position:0%
but that's sort of what happens and then
 

00:20:19.650 --> 00:20:22.820 align:start position:0%
but that's sort of what happens and then
if<00:20:19.800><c> I</c><00:20:19.980><c> if</c><00:20:20.550><c> I</c><00:20:20.790><c> add</c><00:20:21.060><c> the</c><00:20:21.270><c> field</c><00:20:21.630><c> sorry</c><00:20:22.260><c> that</c><00:20:22.560><c> that</c>

00:20:22.820 --> 00:20:22.830 align:start position:0%
if I if I add the field sorry that that
 

00:20:22.830 --> 00:20:27.620 align:start position:0%
if I if I add the field sorry that that
environment<00:20:23.550><c> variable</c><00:20:24.350><c> then</c><00:20:26.210><c> okay</c><00:20:27.210><c> let's</c><00:20:27.450><c> put</c>

00:20:27.620 --> 00:20:27.630 align:start position:0%
environment variable then okay let's put
 

00:20:27.630 --> 00:20:30.530 align:start position:0%
environment variable then okay let's put
this<00:20:27.780><c> in</c><00:20:27.960><c> here</c><00:20:28.170><c> now</c><00:20:29.090><c> look</c><00:20:30.090><c> at</c><00:20:30.180><c> the</c><00:20:30.270><c> Proms</c>

00:20:30.530 --> 00:20:30.540 align:start position:0%
this in here now look at the Proms
 

00:20:30.540 --> 00:20:33.980 align:start position:0%
this in here now look at the Proms
because<00:20:30.960><c> it</c><00:20:31.620><c> first</c><00:20:31.950><c> gets</c><00:20:32.220><c> worse</c><00:20:32.750><c> once</c><00:20:33.750><c> we</c><00:20:33.870><c> can</c>

00:20:33.980 --> 00:20:33.990 align:start position:0%
because it first gets worse once we can
 

00:20:33.990 --> 00:20:36.740 align:start position:0%
because it first gets worse once we can
over<00:20:34.260><c> threshold</c><00:20:35.180><c> then</c><00:20:36.180><c> it</c><00:20:36.300><c> starts</c><00:20:36.630><c> either</c>

00:20:36.740 --> 00:20:36.750 align:start position:0%
over threshold then it starts either
 

00:20:36.750 --> 00:20:40.460 align:start position:0%
over threshold then it starts either
using<00:20:37.320><c> this</c><00:20:37.470><c> in</c><00:20:37.680><c> 32</c><00:20:38.810><c> so</c><00:20:39.810><c> once</c><00:20:40.140><c> it</c><00:20:40.260><c> gets</c><00:20:40.350><c> past</c>

00:20:40.460 --> 00:20:40.470 align:start position:0%
using this in 32 so once it gets past
 

00:20:40.470 --> 00:20:44.660 align:start position:0%
using this in 32 so once it gets past
256<00:20:41.370><c> it</c><00:20:41.790><c> uses</c><00:20:42.450><c> this</c><00:20:42.720><c> in</c><00:20:42.960><c> 32</c><00:20:43.470><c> and</c><00:20:44.310><c> then</c><00:20:44.460><c> it</c><00:20:44.580><c> gets</c>

00:20:44.660 --> 00:20:44.670 align:start position:0%
256 it uses this in 32 and then it gets
 

00:20:44.670 --> 00:20:46.130 align:start position:0%
256 it uses this in 32 and then it gets
bit<00:20:44.940><c> faster</c><00:20:45.360><c> I</c><00:20:45.510><c> hope</c>

00:20:46.130 --> 00:20:46.140 align:start position:0%
bit faster I hope
 

00:20:46.140 --> 00:20:49.430 align:start position:0%
bit faster I hope
I<00:20:47.059><c> know</c><00:20:48.059><c> I've</c><00:20:48.540><c> done</c><00:20:48.600><c> something</c><00:20:49.080><c> wrong</c>

00:20:49.430 --> 00:20:49.440 align:start position:0%
I know I've done something wrong
 

00:20:49.440 --> 00:20:54.830 align:start position:0%
I know I've done something wrong
some<00:20:49.799><c> are</c><00:20:49.920><c> still</c><00:20:50.040><c> using</c><00:20:50.309><c> Java</c><00:20:50.510><c> 6</c><00:20:53.480><c> now</c><00:20:54.480><c> that</c><00:20:54.660><c> the</c>

00:20:54.830 --> 00:20:54.840 align:start position:0%
some are still using Java 6 now that the
 

00:20:54.840 --> 00:20:58.160 align:start position:0%
some are still using Java 6 now that the
compiler<00:20:55.230><c> to</c><00:20:55.410><c> the</c><00:20:55.650><c> thing</c><00:20:55.830><c> issue</c><00:20:56.040><c> I</c><00:20:56.600><c> am</c><00:20:57.600><c> sure</c>

00:20:58.160 --> 00:20:58.170 align:start position:0%
compiler to the thing issue I am sure
 

00:20:58.170 --> 00:20:59.750 align:start position:0%
compiler to the thing issue I am sure
but<00:20:58.380><c> I</c><00:20:58.410><c> might</c><00:20:58.620><c> be</c><00:20:58.740><c> to</c><00:20:58.890><c> be</c><00:20:58.980><c> so</c><00:20:59.130><c> using</c><00:20:59.309><c> forever</c><00:20:59.460><c> 6</c>

00:20:59.750 --> 00:20:59.760 align:start position:0%
but I might be to be so using forever 6
 

00:20:59.760 --> 00:21:06.260 align:start position:0%
but I might be to be so using forever 6
I<00:21:01.520><c> may</c><00:21:02.520><c> have</c><00:21:02.580><c> got</c><00:21:02.790><c> the</c><00:21:03.650><c> something</c><00:21:04.650><c> wrong</c><00:21:05.270><c> and</c>

00:21:06.260 --> 00:21:06.270 align:start position:0%
I may have got the something wrong and
 

00:21:06.270 --> 00:21:08.419 align:start position:0%
I may have got the something wrong and
it's<00:21:06.420><c> something</c><00:21:06.570><c> wrong</c><00:21:06.870><c> I</c><00:21:07.080><c> don't</c><00:21:08.040><c> feel</c><00:21:08.309><c> quite</c>

00:21:08.419 --> 00:21:08.429 align:start position:0%
it's something wrong I don't feel quite
 

00:21:08.429 --> 00:21:09.280 align:start position:0%
it's something wrong I don't feel quite
sure<00:21:08.490><c> what</c>

00:21:09.280 --> 00:21:09.290 align:start position:0%
sure what
 

00:21:09.290 --> 00:21:13.160 align:start position:0%
sure what
it's<00:21:10.290><c> a</c><00:21:10.410><c> DMS</c><00:21:10.710><c> first</c><00:21:11.040><c> person</c><00:21:11.460><c> at</c><00:21:11.549><c> work</c><00:21:12.110><c> and</c><00:21:13.110><c> I</c>

00:21:13.160 --> 00:21:13.170 align:start position:0%
it's a DMS first person at work and I
 

00:21:13.170 --> 00:21:14.990 align:start position:0%
it's a DMS first person at work and I
shouldn't<00:21:13.590><c> have</c><00:21:13.650><c> to</c><00:21:13.830><c> recompile</c><00:21:14.280><c> it</c><00:21:14.460><c> almost</c>

00:21:14.990 --> 00:21:15.000 align:start position:0%
shouldn't have to recompile it almost
 

00:21:15.000 --> 00:21:17.600 align:start position:0%
shouldn't have to recompile it almost
certainly<00:21:15.330><c> not</c><00:21:15.890><c> I'm</c><00:21:16.890><c> going</c><00:21:17.070><c> to</c><00:21:17.130><c> recompile</c><00:21:17.490><c> it</c>

00:21:17.600 --> 00:21:17.610 align:start position:0%
certainly not I'm going to recompile it
 

00:21:17.610 --> 00:21:22.820 align:start position:0%
certainly not I'm going to recompile it
just<00:21:17.850><c> to</c><00:21:18.059><c> make</c><00:21:18.570><c> sure</c><00:21:18.600><c> that</c><00:21:18.960><c> no</c><00:21:19.799><c> that's</c><00:21:21.679><c> I'm</c><00:21:22.679><c> not</c>

00:21:22.820 --> 00:21:22.830 align:start position:0%
just to make sure that no that's I'm not
 

00:21:22.830 --> 00:21:23.419 align:start position:0%
just to make sure that no that's I'm not
gonna<00:21:22.950><c> do</c><00:21:23.070><c> that</c>

00:21:23.419 --> 00:21:23.429 align:start position:0%
gonna do that
 

00:21:23.429 --> 00:21:27.980 align:start position:0%
gonna do that
the<00:21:23.640><c> threshold</c><00:21:24.090><c> oh</c><00:21:26.360><c> yeah</c><00:21:27.360><c> of</c><00:21:27.450><c> course</c><00:21:27.480><c> I've</c><00:21:27.840><c> got</c>

00:21:27.980 --> 00:21:27.990 align:start position:0%
the threshold oh yeah of course I've got
 

00:21:27.990 --> 00:21:29.330 align:start position:0%
the threshold oh yeah of course I've got
the<00:21:28.140><c> look</c><00:21:28.530><c> I've</c><00:21:28.650><c> got</c><00:21:28.799><c> different</c><00:21:28.950><c> there</c><00:21:29.190><c> the</c>

00:21:29.330 --> 00:21:29.340 align:start position:0%
the look I've got different there the
 

00:21:29.340 --> 00:21:32.470 align:start position:0%
the look I've got different there the
flag<00:21:29.520><c> in</c><00:21:29.669><c> the</c><00:21:29.730><c> wrong</c><00:21:29.850><c> place</c><00:21:30.030><c> so</c><00:21:30.360><c> it's</c><00:21:31.110><c> simple</c>

00:21:32.470 --> 00:21:32.480 align:start position:0%
flag in the wrong place so it's simple
 

00:21:32.480 --> 00:21:35.750 align:start position:0%
flag in the wrong place so it's simple
stupidity<00:21:33.480><c> so</c><00:21:34.220><c> it</c><00:21:35.220><c> should</c><00:21:35.370><c> mean</c><00:21:35.520><c> the</c>

00:21:35.750 --> 00:21:35.760 align:start position:0%
stupidity so it should mean the
 

00:21:35.760 --> 00:21:39.650 align:start position:0%
stupidity so it should mean the
beginning<00:21:37.370><c> so</c><00:21:38.370><c> you</c><00:21:38.429><c> see</c><00:21:38.610><c> what</c><00:21:38.790><c> it</c><00:21:39.000><c> initially</c>

00:21:39.650 --> 00:21:39.660 align:start position:0%
beginning so you see what it initially
 

00:21:39.660 --> 00:21:42.169 align:start position:0%
beginning so you see what it initially
it<00:21:39.750><c> runs</c><00:21:40.410><c> and</c><00:21:40.679><c> then</c><00:21:40.770><c> once</c><00:21:41.429><c> it</c><00:21:41.610><c> once</c><00:21:41.910><c> it</c><00:21:42.059><c> gets</c>

00:21:42.169 --> 00:21:42.179 align:start position:0%
it runs and then once it once it gets
 

00:21:42.179 --> 00:21:45.260 align:start position:0%
it runs and then once it once it gets
past<00:21:42.240><c> a</c><00:21:42.570><c> threshold</c><00:21:43.010><c> it</c><00:21:44.010><c> really</c><00:21:44.790><c> speeds</c><00:21:45.090><c> up</c>

00:21:45.260 --> 00:21:45.270 align:start position:0%
past a threshold it really speeds up
 

00:21:45.270 --> 00:21:49.669 align:start position:0%
past a threshold it really speeds up
right<00:21:45.990><c> so</c><00:21:46.799><c> the</c><00:21:47.270><c> the</c><00:21:48.270><c> hashmap</c><00:21:48.750><c> lookup</c><00:21:49.380><c> is</c><00:21:49.530><c> no</c>

00:21:49.669 --> 00:21:49.679 align:start position:0%
right so the the hashmap lookup is no
 

00:21:49.679 --> 00:21:52.400 align:start position:0%
right so the the hashmap lookup is no
longer<00:21:49.970><c> linear</c><00:21:50.970><c> because</c><00:21:51.840><c> you</c><00:21:52.020><c> don't</c><00:21:52.230><c> have</c><00:21:52.350><c> a</c>

00:21:52.400 --> 00:21:52.410 align:start position:0%
longer linear because you don't have a
 

00:21:52.410 --> 00:21:55.850 align:start position:0%
longer linear because you don't have a
little<00:21:52.679><c> linked</c><00:21:53.070><c> list</c><00:21:53.280><c> off</c><00:21:53.580><c> of</c><00:21:53.790><c> elements</c><00:21:54.360><c> of</c><00:21:55.290><c> as</c>

00:21:55.850 --> 00:21:55.860 align:start position:0%
little linked list off of elements of as
 

00:21:55.860 --> 00:21:57.950 align:start position:0%
little linked list off of elements of as
keys<00:21:56.130><c> but</c><00:21:57.120><c> but</c><00:21:57.330><c> you</c><00:21:57.419><c> had</c><00:21:57.510><c> to</c><00:21:57.600><c> turn</c><00:21:57.750><c> on</c>

00:21:57.950 --> 00:21:57.960 align:start position:0%
keys but but you had to turn on
 

00:21:57.960 --> 00:21:59.360 align:start position:0%
keys but but you had to turn on
explicitly<00:21:58.530><c> didn't</c><00:21:58.770><c> do</c><00:21:58.860><c> that</c><00:21:59.010><c> didn't</c><00:21:59.280><c> have</c>

00:21:59.360 --> 00:21:59.370 align:start position:0%
explicitly didn't do that didn't have
 

00:21:59.370 --> 00:22:00.770 align:start position:0%
explicitly didn't do that didn't have
any<00:21:59.490><c> of</c><00:21:59.549><c> this</c><00:21:59.640><c> any</c><00:21:59.880><c> of</c><00:22:00.000><c> these</c><00:22:00.090><c> benefits</c><00:22:00.510><c> and</c>

00:22:00.770 --> 00:22:00.780 align:start position:0%
any of this any of these benefits and
 

00:22:00.780 --> 00:22:03.350 align:start position:0%
any of this any of these benefits and
again<00:22:01.350><c> the</c><00:22:01.590><c> reason</c><00:22:01.710><c> why</c><00:22:01.980><c> they</c><00:22:02.160><c> didn't</c><00:22:02.309><c> want</c><00:22:02.760><c> to</c>

00:22:03.350 --> 00:22:03.360 align:start position:0%
again the reason why they didn't want to
 

00:22:03.360 --> 00:22:04.880 align:start position:0%
again the reason why they didn't want to
do<00:22:03.480><c> automatically</c><00:22:04.110><c> is</c><00:22:04.200><c> because</c><00:22:04.530><c> yet</c><00:22:04.710><c> two</c>

00:22:04.880 --> 00:22:04.890 align:start position:0%
do automatically is because yet two
 

00:22:04.890 --> 00:22:06.680 align:start position:0%
do automatically is because yet two
people<00:22:05.580><c> would</c><00:22:05.700><c> complain</c><00:22:06.030><c> that</c><00:22:06.090><c> their</c><00:22:06.419><c> tests</c>

00:22:06.680 --> 00:22:06.690 align:start position:0%
people would complain that their tests
 

00:22:06.690 --> 00:22:07.520 align:start position:0%
people would complain that their tests
don't<00:22:06.840><c> work</c><00:22:06.990><c> anymore</c>

00:22:07.520 --> 00:22:07.530 align:start position:0%
don't work anymore
 

00:22:07.530 --> 00:22:11.870 align:start position:0%
don't work anymore
um<00:22:09.500><c> alright</c><00:22:10.500><c> and</c><00:22:11.340><c> also</c><00:22:11.490><c> there</c><00:22:11.730><c> was</c><00:22:11.820><c> another</c>

00:22:11.870 --> 00:22:11.880 align:start position:0%
um alright and also there was another
 

00:22:11.880 --> 00:22:15.740 align:start position:0%
um alright and also there was another
constructor<00:22:12.809><c> which</c><00:22:13.080><c> we</c><00:22:13.350><c> could</c><00:22:13.559><c> abuse</c><00:22:14.750><c> which</c>

00:22:15.740 --> 00:22:15.750 align:start position:0%
constructor which we could abuse which
 

00:22:15.750 --> 00:22:19.000 align:start position:0%
constructor which we could abuse which
made<00:22:16.110><c> which</c><00:22:16.950><c> we</c><00:22:17.250><c> passed</c><00:22:17.549><c> an</c><00:22:17.700><c> array</c><00:22:18.450><c> and</c>

00:22:19.000 --> 00:22:19.010 align:start position:0%
made which we passed an array and
 

00:22:19.010 --> 00:22:23.150 align:start position:0%
made which we passed an array and
boolean<00:22:20.010><c> and</c><00:22:20.250><c> shade</c><00:22:20.549><c> now</c><00:22:21.270><c> this</c><00:22:21.450><c> was</c><00:22:21.600><c> a</c><00:22:22.160><c> this</c>

00:22:23.150 --> 00:22:23.160 align:start position:0%
boolean and shade now this was a this
 

00:22:23.160 --> 00:22:26.330 align:start position:0%
boolean and shade now this was a this
this<00:22:23.429><c> class</c><00:22:23.700><c> was</c><00:22:24.030><c> as</c><00:22:24.630><c> method</c><00:22:25.049><c> was</c><00:22:25.230><c> was</c><00:22:25.530><c> an</c><00:22:25.770><c> it</c>

00:22:26.330 --> 00:22:26.340 align:start position:0%
this class was as method was was an it
 

00:22:26.340 --> 00:22:28.220 align:start position:0%
this class was as method was was an it
was<00:22:26.610><c> package</c><00:22:26.970><c> access</c><00:22:27.360><c> but</c><00:22:27.600><c> you</c><00:22:27.630><c> could</c><00:22:27.870><c> access</c>

00:22:28.220 --> 00:22:28.230 align:start position:0%
was package access but you could access
 

00:22:28.230 --> 00:22:31.220 align:start position:0%
was package access but you could access
it<00:22:28.410><c> with</c><00:22:28.620><c> shade</c><00:22:29.429><c> secrets</c><00:22:30.000><c> get</c><00:22:30.660><c> java.lang</c>

00:22:31.220 --> 00:22:31.230 align:start position:0%
it with shade secrets get java.lang
 

00:22:31.230 --> 00:22:34.430 align:start position:0%
it with shade secrets get java.lang
access<00:22:31.710><c> new</c><00:22:32.429><c> string</c><00:22:32.820><c> unsafe</c><00:22:33.360><c> with</c><00:22:33.990><c> the</c><00:22:34.140><c> char</c>

00:22:34.430 --> 00:22:34.440 align:start position:0%
access new string unsafe with the char
 

00:22:34.440 --> 00:22:37.039 align:start position:0%
access new string unsafe with the char
array<00:22:34.850><c> and</c><00:22:35.850><c> that</c><00:22:35.880><c> would</c><00:22:36.240><c> then</c><00:22:36.270><c> hat</c><00:22:36.750><c> that</c>

00:22:37.039 --> 00:22:37.049 align:start position:0%
array and that would then hat that
 

00:22:37.049 --> 00:22:39.830 align:start position:0%
array and that would then hat that
wasn't<00:22:37.260><c> it</c><00:22:37.320><c> is</c><00:22:37.410><c> the</c><00:22:37.530><c> same</c><00:22:37.770><c> tray</c><00:22:38.419><c> as</c><00:22:39.419><c> you</c><00:22:39.630><c> pass</c>

00:22:39.830 --> 00:22:39.840 align:start position:0%
wasn't it is the same tray as you pass
 

00:22:39.840 --> 00:22:41.840 align:start position:0%
wasn't it is the same tray as you pass
in<00:22:40.080><c> for</c><00:22:40.290><c> the</c><00:22:40.380><c> string</c><00:22:40.620><c> so</c><00:22:41.220><c> if</c><00:22:41.340><c> you</c><00:22:41.460><c> wanted</c><00:22:41.730><c> to</c>

00:22:41.840 --> 00:22:41.850 align:start position:0%
in for the string so if you wanted to
 

00:22:41.850 --> 00:22:44.150 align:start position:0%
in for the string so if you wanted to
minimize<00:22:42.240><c> a</c><00:22:42.510><c> memory</c><00:22:42.929><c> usage</c><00:22:43.200><c> you</c><00:22:43.919><c> could</c><00:22:44.100><c> do</c>

00:22:44.150 --> 00:22:44.160 align:start position:0%
minimize a memory usage you could do
 

00:22:44.160 --> 00:22:45.440 align:start position:0%
minimize a memory usage you could do
that<00:22:44.280><c> now</c><00:22:44.340><c> they've</c><00:22:44.700><c> moved</c><00:22:45.030><c> that</c><00:22:45.179><c> out</c><00:22:45.330><c> of</c>

00:22:45.440 --> 00:22:45.450 align:start position:0%
that now they've moved that out of
 

00:22:45.450 --> 00:22:47.510 align:start position:0%
that now they've moved that out of
harm's<00:22:45.780><c> way</c><00:22:45.840><c> for</c><00:22:46.049><c> Java</c><00:22:46.500><c> 9</c><00:22:46.710><c> and</c><00:22:46.890><c> it</c><00:22:47.340><c> wouldn't</c>

00:22:47.510 --> 00:22:47.520 align:start position:0%
harm's way for Java 9 and it wouldn't
 

00:22:47.520 --> 00:22:48.830 align:start position:0%
harm's way for Java 9 and it wouldn't
really<00:22:47.640><c> work</c><00:22:47.790><c> drama</c><00:22:48.179><c> line</c><00:22:48.330><c> anywhere</c><00:22:48.660><c> because</c>

00:22:48.830 --> 00:22:48.840 align:start position:0%
really work drama line anywhere because
 

00:22:48.840 --> 00:22:50.450 align:start position:0%
really work drama line anywhere because
now<00:22:49.110><c> they're</c><00:22:49.320><c> caught</c><00:22:49.500><c> by</c><00:22:49.740><c> tracing</c><00:22:50.100><c> sort</c><00:22:50.400><c> of</c>

00:22:50.450 --> 00:22:50.460 align:start position:0%
now they're caught by tracing sort of
 

00:22:50.460 --> 00:22:53.150 align:start position:0%
now they're caught by tracing sort of
tourism<00:22:51.320><c> another</c><00:22:52.320><c> thing</c><00:22:52.559><c> which</c><00:22:52.679><c> that</c><00:22:52.919><c> change</c>

00:22:53.150 --> 00:22:53.160 align:start position:0%
tourism another thing which that change
 

00:22:53.160 --> 00:22:57.290 align:start position:0%
tourism another thing which that change
was<00:22:53.370><c> the</c><00:22:53.850><c> the</c><00:22:54.590><c> substring</c><00:22:55.590><c> in</c><00:22:56.370><c> the</c><00:22:56.520><c> past</c><00:22:56.820><c> used</c>

00:22:57.290 --> 00:22:57.300 align:start position:0%
was the the substring in the past used
 

00:22:57.300 --> 00:22:58.840 align:start position:0%
was the the substring in the past used
to

00:22:58.840 --> 00:22:58.850 align:start position:0%
to
 

00:22:58.850 --> 00:23:00.370 align:start position:0%
to
a<00:22:58.880><c> new</c><00:22:59.210><c> string</c><00:22:59.510><c> that</c><00:22:59.630><c> pointed</c><00:23:00.020><c> to</c><00:23:00.050><c> the</c><00:23:00.170><c> same</c>

00:23:00.370 --> 00:23:00.380 align:start position:0%
a new string that pointed to the same
 

00:23:00.380 --> 00:23:02.320 align:start position:0%
a new string that pointed to the same
char<00:23:00.710><c> array</c><00:23:00.830><c> but</c><00:23:01.400><c> was</c><00:23:01.580><c> different</c><00:23:01.880><c> it</c><00:23:01.970><c> offset</c>

00:23:02.320 --> 00:23:02.330 align:start position:0%
char array but was different it offset
 

00:23:02.330 --> 00:23:05.080 align:start position:0%
char array but was different it offset
and<00:23:02.480><c> length</c><00:23:02.660><c> and</c><00:23:03.170><c> that</c><00:23:03.380><c> changed</c><00:23:03.830><c> that</c><00:23:03.980><c> to</c><00:23:04.220><c> be</c><00:23:04.370><c> a</c>

00:23:05.080 --> 00:23:05.090 align:start position:0%
and length and that changed that to be a
 

00:23:05.090 --> 00:23:07.390 align:start position:0%
and length and that changed that to be a
new<00:23:05.570><c> tire</c><00:23:05.870><c> every</c><00:23:06.110><c> time</c><00:23:06.320><c> which</c><00:23:06.470><c> which</c><00:23:07.130><c> which</c>

00:23:07.390 --> 00:23:07.400 align:start position:0%
new tire every time which which which
 

00:23:07.400 --> 00:23:09.310 align:start position:0%
new tire every time which which which
caused<00:23:07.700><c> this</c><00:23:08.120><c> is</c><00:23:08.330><c> for</c><00:23:08.570><c> quite</c><00:23:08.780><c> a</c><00:23:08.810><c> few</c><00:23:09.050><c> companies</c>

00:23:09.310 --> 00:23:09.320 align:start position:0%
caused this is for quite a few companies
 

00:23:09.320 --> 00:23:12.760 align:start position:0%
caused this is for quite a few companies
where<00:23:10.180><c> you</c><00:23:11.180><c> can</c><00:23:11.660><c> easily</c><00:23:11.750><c> get</c><00:23:12.200><c> around</c><00:23:12.380><c> that</c><00:23:12.590><c> by</c>

00:23:12.760 --> 00:23:12.770 align:start position:0%
where you can easily get around that by
 

00:23:12.770 --> 00:23:14.770 align:start position:0%
where you can easily get around that by
making<00:23:13.550><c> your</c><00:23:13.610><c> own</c><00:23:13.670><c> subbable</c><00:23:14.210><c> string</c><00:23:14.480><c> but</c><00:23:14.660><c> it's</c>

00:23:14.770 --> 00:23:14.780 align:start position:0%
making your own subbable string but it's
 

00:23:14.780 --> 00:23:21.130 align:start position:0%
making your own subbable string but it's
a<00:23:15.110><c> bit</c><00:23:15.230><c> messy</c><00:23:15.350><c> so</c><00:23:16.100><c> that's</c><00:23:19.870><c> but</c><00:23:20.870><c> the</c><00:23:20.990><c> whole</c>

00:23:21.130 --> 00:23:21.140 align:start position:0%
a bit messy so that's but the whole
 

00:23:21.140 --> 00:23:22.720 align:start position:0%
a bit messy so that's but the whole
reason<00:23:21.320><c> to</c><00:23:21.500><c> remove</c><00:23:21.770><c> that</c><00:23:21.920><c> was</c><00:23:22.130><c> to</c><00:23:22.310><c> what</c><00:23:22.460><c> memory</c>

00:23:22.720 --> 00:23:22.730 align:start position:0%
reason to remove that was to what memory
 

00:23:22.730 --> 00:23:24.490 align:start position:0%
reason to remove that was to what memory
leaks<00:23:22.910><c> if</c><00:23:23.120><c> you</c><00:23:23.240><c> get</c><00:23:23.390><c> the</c><00:23:23.510><c> big</c><00:23:23.660><c> XML</c><00:23:24.140><c> document</c>

00:23:24.490 --> 00:23:24.500 align:start position:0%
leaks if you get the big XML document
 

00:23:24.500 --> 00:23:26.620 align:start position:0%
leaks if you get the big XML document
which<00:23:24.590><c> is</c><00:23:24.710><c> one</c><00:23:24.860><c> gigabyte</c><00:23:25.250><c> and</c><00:23:25.310><c> you</c><00:23:25.490><c> take</c><00:23:25.700><c> user</c>

00:23:26.620 --> 00:23:26.630 align:start position:0%
which is one gigabyte and you take user
 

00:23:26.630 --> 00:23:28.750 align:start position:0%
which is one gigabyte and you take user
ID<00:23:26.900><c> or</c><00:23:26.990><c> something</c><00:23:27.440><c> out</c><00:23:27.620><c> of</c><00:23:27.680><c> it</c><00:23:27.950><c> you</c><00:23:28.310><c> still</c><00:23:28.550><c> have</c>

00:23:28.750 --> 00:23:28.760 align:start position:0%
ID or something out of it you still have
 

00:23:28.760 --> 00:23:30.340 align:start position:0%
ID or something out of it you still have
a<00:23:28.790><c> pointer</c><00:23:29.180><c> to</c><00:23:29.210><c> the</c><00:23:29.390><c> original</c><00:23:29.720><c> array</c><00:23:29.900><c> so</c><00:23:30.260><c> you</c>

00:23:30.340 --> 00:23:30.350 align:start position:0%
a pointer to the original array so you
 

00:23:30.350 --> 00:23:31.420 align:start position:0%
a pointer to the original array so you
lick<00:23:30.500><c> in</c><00:23:30.620><c> memory</c><00:23:30.920><c> even</c><00:23:31.070><c> though</c><00:23:31.280><c> you</c><00:23:31.340><c> just</c>

00:23:31.420 --> 00:23:31.430 align:start position:0%
lick in memory even though you just
 

00:23:31.430 --> 00:23:33.580 align:start position:0%
lick in memory even though you just
think<00:23:31.700><c> you</c><00:23:31.790><c> just</c><00:23:32.090><c> have</c><00:23:32.330><c> user</c><00:23:32.600><c> ID</c><00:23:32.840><c> that's</c><00:23:33.410><c> was</c>

00:23:33.580 --> 00:23:33.590 align:start position:0%
think you just have user ID that's was
 

00:23:33.590 --> 00:23:35.440 align:start position:0%
think you just have user ID that's was
the<00:23:33.710><c> reason</c><00:23:33.950><c> to</c><00:23:34.040><c> remove</c><00:23:34.220><c> by</c><00:23:34.760><c> the</c><00:23:34.820><c> way</c><00:23:34.970><c> jar</c><00:23:35.150><c> Java</c>

00:23:35.440 --> 00:23:35.450 align:start position:0%
the reason to remove by the way jar Java
 

00:23:35.450 --> 00:23:37.480 align:start position:0%
the reason to remove by the way jar Java
is<00:23:35.540><c> not</c><00:23:35.570><c> the</c><00:23:35.780><c> only</c><00:23:36.020><c> one</c><00:23:36.770><c> time</c><00:23:36.980><c> that</c><00:23:37.010><c> had</c><00:23:37.370><c> this</c>

00:23:37.480 --> 00:23:37.490 align:start position:0%
is not the only one time that had this
 

00:23:37.490 --> 00:23:40.540 align:start position:0%
is not the only one time that had this
so<00:23:38.030><c> v8</c><00:23:38.360><c> for</c><00:23:38.630><c> instance</c><00:23:39.040><c> from</c><00:23:40.040><c> Google</c>

00:23:40.540 --> 00:23:40.550 align:start position:0%
so v8 for instance from Google
 

00:23:40.550 --> 00:23:42.220 align:start position:0%
so v8 for instance from Google
they<00:23:40.880><c> had</c><00:23:41.090><c> this</c><00:23:41.300><c> optimization</c><00:23:41.810><c> then</c><00:23:42.110><c> they</c>

00:23:42.220 --> 00:23:42.230 align:start position:0%
they had this optimization then they
 

00:23:42.230 --> 00:23:43.480 align:start position:0%
they had this optimization then they
removed<00:23:42.530><c> it</c><00:23:42.620><c> and</c><00:23:42.800><c> they</c><00:23:42.860><c> put</c><00:23:43.070><c> it</c><00:23:43.100><c> back</c><00:23:43.310><c> because</c>

00:23:43.480 --> 00:23:43.490 align:start position:0%
removed it and they put it back because
 

00:23:43.490 --> 00:23:50.350 align:start position:0%
removed it and they put it back because
users<00:23:43.880><c> complained</c><00:23:44.210><c> well</c><00:23:44.390><c> JavaScript</c><00:23:48.820><c> yes</c><00:23:49.820><c> so</c>

00:23:50.350 --> 00:23:50.360 align:start position:0%
users complained well JavaScript yes so
 

00:23:50.360 --> 00:23:54.100 align:start position:0%
users complained well JavaScript yes so
it's<00:23:50.510><c> it's</c><00:23:51.260><c> it's</c><00:23:51.500><c> it's</c><00:23:51.850><c> ya</c><00:23:52.850><c> know</c><00:23:53.150><c> nobody</c><00:23:53.990><c> can</c>

00:23:54.100 --> 00:23:54.110 align:start position:0%
it's it's it's it's ya know nobody can
 

00:23:54.110 --> 00:23:56.170 align:start position:0%
it's it's it's it's ya know nobody can
be<00:23:54.200><c> happy</c><00:23:54.410><c> with</c><00:23:55.370><c> both</c><00:23:55.550><c> option</c><00:23:56.000><c> you</c><00:23:56.060><c> know</c>

00:23:56.170 --> 00:23:56.180 align:start position:0%
be happy with both option you know
 

00:23:56.180 --> 00:23:57.610 align:start position:0%
be happy with both option you know
something's<00:23:56.900><c> always</c><00:23:57.080><c> gonna</c><00:23:57.170><c> complain</c><00:23:57.440><c> does</c>

00:23:57.610 --> 00:23:57.620 align:start position:0%
something's always gonna complain does
 

00:23:57.620 --> 00:24:00.520 align:start position:0%
something's always gonna complain does
matter<00:23:57.770><c> what</c><00:23:57.830><c> you</c><00:23:57.950><c> do</c><00:23:59.380><c> okay</c>

00:24:00.520 --> 00:24:00.530 align:start position:0%
matter what you do okay
 

00:24:00.530 --> 00:24:04.300 align:start position:0%
matter what you do okay
Java<00:24:01.010><c> 8</c><00:24:01.190><c> they</c><00:24:02.090><c> they've</c><00:24:02.450><c> got</c><00:24:02.660><c> the</c><00:24:03.080><c> value</c><00:24:03.920><c> the</c>

00:24:04.300 --> 00:24:04.310 align:start position:0%
Java 8 they they've got the value the
 

00:24:04.310 --> 00:24:07.660 align:start position:0%
Java 8 they they've got the value the
value<00:24:04.610><c> as</c><00:24:04.820><c> a</c><00:24:04.850><c> char</c><00:24:05.120><c> array</c><00:24:05.150><c> and</c><00:24:05.540><c> in</c><00:24:06.020><c> -</c><00:24:06.670><c> the</c>

00:24:07.660 --> 00:24:07.670 align:start position:0%
value as a char array and in - the
 

00:24:07.670 --> 00:24:11.050 align:start position:0%
value as a char array and in - the
adrenaline<00:24:07.880><c> hash</c><00:24:08.360><c> 32</c><00:24:08.780><c> again</c><00:24:09.520><c> because</c><00:24:10.520><c> they</c>

00:24:11.050 --> 00:24:11.060 align:start position:0%
adrenaline hash 32 again because they
 

00:24:11.060 --> 00:24:14.080 align:start position:0%
adrenaline hash 32 again because they
solved<00:24:11.720><c> the</c><00:24:11.900><c> problem</c><00:24:12.320><c> with</c><00:24:12.860><c> the</c><00:24:13.100><c> birther</c><00:24:13.610><c> with</c>

00:24:14.080 --> 00:24:14.090 align:start position:0%
solved the problem with the birther with
 

00:24:14.090 --> 00:24:16.000 align:start position:0%
solved the problem with the birther with
the<00:24:14.420><c> link</c><00:24:14.660><c> with</c><00:24:14.870><c> with</c><00:24:15.260><c> the</c><00:24:15.770><c> linear</c>

00:24:16.000 --> 00:24:16.010 align:start position:0%
the link with with the linear
 

00:24:16.010 --> 00:24:19.140 align:start position:0%
the link with with the linear
performance<00:24:16.610><c> of</c><00:24:16.670><c> a</c><00:24:16.790><c> map</c><00:24:16.970><c> in</c><00:24:17.600><c> a</c><00:24:17.780><c> general</c><00:24:18.170><c> way</c>

00:24:19.140 --> 00:24:19.150 align:start position:0%
performance of a map in a general way
 

00:24:19.150 --> 00:24:22.570 align:start position:0%
performance of a map in a general way
and<00:24:20.380><c> what</c><00:24:21.380><c> they</c><00:24:21.530><c> do</c><00:24:21.680><c> with</c><00:24:21.770><c> hash</c><00:24:22.010><c> map</c><00:24:22.280><c> since</c>

00:24:22.570 --> 00:24:22.580 align:start position:0%
and what they do with hash map since
 

00:24:22.580 --> 00:24:24.160 align:start position:0%
and what they do with hash map since
Java<00:24:22.880><c> is</c><00:24:23.330><c> as</c><00:24:23.480><c> soon</c><00:24:23.660><c> as</c><00:24:23.720><c> you</c><00:24:23.780><c> have</c><00:24:23.840><c> committee</c>

00:24:24.160 --> 00:24:24.170 align:start position:0%
Java is as soon as you have committee
 

00:24:24.170 --> 00:24:26.500 align:start position:0%
Java is as soon as you have committee
collisions<00:24:24.710><c> they</c><00:24:25.370><c> actually</c><00:24:25.760><c> create</c><00:24:26.150><c> a</c><00:24:26.180><c> binary</c>

00:24:26.500 --> 00:24:26.510 align:start position:0%
collisions they actually create a binary
 

00:24:26.510 --> 00:24:29.230 align:start position:0%
collisions they actually create a binary
tree<00:24:26.800><c> in</c><00:24:27.800><c> order</c><00:24:28.250><c> for</c><00:24:28.400><c> that</c><00:24:28.490><c> to</c><00:24:28.550><c> work</c><00:24:28.730><c> properly</c>

00:24:29.230 --> 00:24:29.240 align:start position:0%
tree in order for that to work properly
 

00:24:29.240 --> 00:24:31.960 align:start position:0%
tree in order for that to work properly
your<00:24:29.690><c> key</c><00:24:30.020><c> has</c><00:24:30.770><c> to</c><00:24:30.800><c> be</c><00:24:31.130><c> what</c><00:24:31.520><c> should</c><00:24:31.790><c> be</c>

00:24:31.960 --> 00:24:31.970 align:start position:0%
your key has to be what should be
 

00:24:31.970 --> 00:24:35.410 align:start position:0%
your key has to be what should be
comparable<00:24:33.070><c> this</c><00:24:34.070><c> is</c><00:24:34.250><c> why</c><00:24:34.370><c> since</c><00:24:34.760><c> Java</c><00:24:35.090><c> 8</c><00:24:35.210><c> you</c>

00:24:35.410 --> 00:24:35.420 align:start position:0%
comparable this is why since Java 8 you
 

00:24:35.420 --> 00:24:38.170 align:start position:0%
comparable this is why since Java 8 you
should<00:24:35.600><c> always</c><00:24:35.840><c> make</c><00:24:36.050><c> all</c><00:24:36.680><c> keys</c><00:24:37.100><c> -</c><00:24:37.790><c> code</c>

00:24:38.170 --> 00:24:38.180 align:start position:0%
should always make all keys - code
 

00:24:38.180 --> 00:24:40.750 align:start position:0%
should always make all keys - code
equals<00:24:38.630><c> and</c><00:24:38.840><c> comparable</c><00:24:39.500><c> so</c><00:24:40.370><c> that</c><00:24:40.520><c> you</c><00:24:40.610><c> can</c>

00:24:40.750 --> 00:24:40.760 align:start position:0%
equals and comparable so that you can
 

00:24:40.760 --> 00:24:42.880 align:start position:0%
equals and comparable so that you can
take<00:24:40.910><c> advantage</c><00:24:41.420><c> of</c><00:24:41.630><c> the</c><00:24:41.870><c> great</c><00:24:42.440><c> performance</c>

00:24:42.880 --> 00:24:42.890 align:start position:0%
take advantage of the great performance
 

00:24:42.890 --> 00:24:44.650 align:start position:0%
take advantage of the great performance
improvements<00:24:43.310><c> you</c><00:24:43.790><c> have</c><00:24:43.940><c> each</c><00:24:44.060><c> other</c><00:24:44.240><c> 8</c><00:24:44.420><c> going</c>

00:24:44.650 --> 00:24:44.660 align:start position:0%
improvements you have each other 8 going
 

00:24:44.660 --> 00:24:47.560 align:start position:0%
improvements you have each other 8 going
forward<00:24:45.790><c> also</c><00:24:46.790><c> you've</c><00:24:47.060><c> got</c><00:24:47.090><c> top</c><00:24:47.330><c> some</c>

00:24:47.560 --> 00:24:47.570 align:start position:0%
forward also you've got top some
 

00:24:47.570 --> 00:24:49.750 align:start position:0%
forward also you've got top some
deduplication<00:24:48.410><c> of</c><00:24:48.740><c> char</c><00:24:49.040><c> array</c><00:24:49.130><c> so</c><00:24:49.310><c> I'll</c><00:24:49.520><c> show</c>

00:24:49.750 --> 00:24:49.760 align:start position:0%
deduplication of char array so I'll show
 

00:24:49.760 --> 00:24:51.340 align:start position:0%
deduplication of char array so I'll show
you<00:24:49.790><c> that</c><00:24:49.850><c> in</c><00:24:50.120><c> a</c><00:24:50.210><c> second</c><00:24:50.600><c> but</c><00:24:50.990><c> I</c><00:24:51.020><c> want</c><00:24:51.200><c> to</c><00:24:51.260><c> run</c>

00:24:51.340 --> 00:24:51.350 align:start position:0%
you that in a second but I want to run
 

00:24:51.350 --> 00:24:56.410 align:start position:0%
you that in a second but I want to run
that<00:24:51.470><c> test</c><00:24:51.680><c> again</c><00:24:51.830><c> with</c><00:24:52.010><c> Java</c><00:24:52.460><c> 8</c><00:24:52.720><c> so</c><00:24:53.860><c> let's</c><00:24:55.420><c> go</c>

00:24:56.410 --> 00:24:56.420 align:start position:0%
that test again with Java 8 so let's go
 

00:24:56.420 --> 00:25:00.350 align:start position:0%
that test again with Java 8 so let's go
to<00:24:56.480><c> Java</c><00:24:56.720><c> head</c>

00:25:00.350 --> 00:25:00.360 align:start position:0%
 
 

00:25:00.360 --> 00:25:03.980 align:start position:0%
 
provide<00:25:01.230><c> and</c><00:25:01.620><c> this</c><00:25:02.610><c> time</c><00:25:02.820><c> without</c><00:25:03.120><c> any</c><00:25:03.390><c> sort</c>

00:25:03.980 --> 00:25:03.990 align:start position:0%
provide and this time without any sort
 

00:25:03.990 --> 00:25:07.370 align:start position:0%
provide and this time without any sort
of<00:25:04.049><c> funny</c><00:25:04.320><c> settings</c><00:25:05.269><c> straight</c><00:25:06.269><c> off</c><00:25:06.390><c> a</c><00:25:06.480><c> box</c><00:25:06.659><c> you</c>

00:25:07.370 --> 00:25:07.380 align:start position:0%
of funny settings straight off a box you
 

00:25:07.380 --> 00:25:09.950 align:start position:0%
of funny settings straight off a box you
can<00:25:07.529><c> see</c><00:25:07.679><c> that</c><00:25:07.860><c> as</c><00:25:08.039><c> we</c><00:25:08.309><c> as</c><00:25:08.549><c> we</c><00:25:09.510><c> increase</c><00:25:09.929><c> the</c>

00:25:09.950 --> 00:25:09.960 align:start position:0%
can see that as we as we increase the
 

00:25:09.960 --> 00:25:11.960 align:start position:0%
can see that as we as we increase the
size<00:25:10.080><c> of</c><00:25:10.409><c> map</c><00:25:10.620><c> the</c><00:25:11.250><c> performance</c><00:25:11.760><c> does</c><00:25:11.940><c> not</c>

00:25:11.960 --> 00:25:11.970 align:start position:0%
size of map the performance does not
 

00:25:11.970 --> 00:25:15.620 align:start position:0%
size of map the performance does not
degrade<00:25:12.960><c> as</c><00:25:13.559><c> badly</c><00:25:14.100><c> as</c><00:25:14.309><c> it</c><00:25:14.399><c> did</c><00:25:14.549><c> before</c><00:25:14.669><c> and</c>

00:25:15.620 --> 00:25:15.630 align:start position:0%
degrade as badly as it did before and
 

00:25:15.630 --> 00:25:17.630 align:start position:0%
degrade as badly as it did before and
here<00:25:16.380><c> all</c><00:25:16.590><c> the</c><00:25:16.799><c> elements</c><00:25:17.159><c> are</c><00:25:17.250><c> still</c><00:25:17.429><c> in</c><00:25:17.549><c> the</c>

00:25:17.630 --> 00:25:17.640 align:start position:0%
here all the elements are still in the
 

00:25:17.640 --> 00:25:20.210 align:start position:0%
here all the elements are still in the
same<00:25:17.850><c> bucket</c><00:25:18.260><c> but</c><00:25:19.260><c> it's</c><00:25:19.409><c> a</c><00:25:19.470><c> binary</c><00:25:19.710><c> tree</c><00:25:19.890><c> not</c>

00:25:20.210 --> 00:25:20.220 align:start position:0%
same bucket but it's a binary tree not
 

00:25:20.220 --> 00:25:22.130 align:start position:0%
same bucket but it's a binary tree not
so<00:25:20.519><c> it's</c><00:25:20.700><c> it's</c><00:25:20.940><c> declaratory</c><00:25:21.539><c> grading</c><00:25:21.990><c> with</c>

00:25:22.130 --> 00:25:22.140 align:start position:0%
so it's it's declaratory grading with
 

00:25:22.140 --> 00:25:24.610 align:start position:0%
so it's it's declaratory grading with
with<00:25:22.830><c> order</c><00:25:23.130><c> log</c><00:25:23.399><c> in</c><00:25:23.549><c> or</c><00:25:23.700><c> whatever</c><00:25:23.820><c> it</c><00:25:24.179><c> means</c>

00:25:24.610 --> 00:25:24.620 align:start position:0%
with order log in or whatever it means
 

00:25:24.620 --> 00:25:29.600 align:start position:0%
with order log in or whatever it means
yeah<00:25:27.679><c> and</c><00:25:28.679><c> this</c><00:25:28.830><c> behavior</c><00:25:29.039><c> you'll</c><00:25:29.370><c> see</c><00:25:29.549><c> or</c>

00:25:29.600 --> 00:25:29.610 align:start position:0%
yeah and this behavior you'll see or
 

00:25:29.610 --> 00:25:34.750 align:start position:0%
yeah and this behavior you'll see or
some<00:25:29.789><c> Java</c><00:25:30.029><c> eleven</c><00:25:30.690><c> as</c><00:25:30.809><c> well</c><00:25:31.760><c> same</c><00:25:32.760><c> top</c><00:25:33.059><c> thing</c>

00:25:34.750 --> 00:25:34.760 align:start position:0%
some Java eleven as well same top thing
 

00:25:34.760 --> 00:25:37.730 align:start position:0%
some Java eleven as well same top thing
now<00:25:35.760><c> of</c><00:25:36.330><c> course</c><00:25:36.480><c> you</c><00:25:36.630><c> were</c><00:25:36.690><c> at</c><00:25:36.809><c> the</c><00:25:36.870><c> DC</c><00:25:37.380><c> comic</c>

00:25:37.730 --> 00:25:37.740 align:start position:0%
now of course you were at the DC comic
 

00:25:37.740 --> 00:25:39.919 align:start position:0%
now of course you were at the DC comic
desert<00:25:38.190><c> you</c><00:25:38.880><c> lost</c><00:25:39.269><c> might</c><00:25:39.419><c> be</c><00:25:39.510><c> exactly</c><00:25:39.720><c> the</c>

00:25:39.919 --> 00:25:39.929 align:start position:0%
desert you lost might be exactly the
 

00:25:39.929 --> 00:25:41.210 align:start position:0%
desert you lost might be exactly the
same<00:25:39.960><c> but</c><00:25:40.200><c> you</c><00:25:40.289><c> can</c><00:25:40.380><c> see</c><00:25:40.500><c> the</c><00:25:40.649><c> the</c><00:25:40.950><c> performance</c>

00:25:41.210 --> 00:25:41.220 align:start position:0%
same but you can see the the performance
 

00:25:41.220 --> 00:25:43.610 align:start position:0%
same but you can see the the performance
is<00:25:41.490><c> not</c><00:25:41.610><c> degrading</c><00:25:42.120><c> as</c><00:25:42.210><c> badly</c><00:25:42.419><c> as</c><00:25:42.750><c> number</c><00:25:43.440><c> six</c>

00:25:43.610 --> 00:25:43.620 align:start position:0%
is not degrading as badly as number six
 

00:25:43.620 --> 00:25:47.000 align:start position:0%
is not degrading as badly as number six
so<00:25:44.010><c> so</c><00:25:44.279><c> for</c><00:25:44.340><c> example</c><00:25:44.760><c> for</c><00:25:44.909><c> 65,000</c><00:25:45.889><c> you</c><00:25:46.889><c> know</c>

00:25:47.000 --> 00:25:47.010 align:start position:0%
so so for example for 65,000 you know
 

00:25:47.010 --> 00:25:49.490 align:start position:0%
so so for example for 65,000 you know
elements<00:25:47.490><c> the</c><00:25:47.580><c> map</c><00:25:47.760><c> in</c><00:25:47.970><c> one</c><00:25:48.210><c> in</c><00:25:48.510><c> one</c><00:25:48.570><c> entry</c><00:25:49.049><c> we</c>

00:25:49.490 --> 00:25:49.500 align:start position:0%
elements the map in one in one entry we
 

00:25:49.500 --> 00:25:52.190 align:start position:0%
elements the map in one in one entry we
still<00:25:49.740><c> mean</c><00:25:50.240><c> I'm</c><00:25:51.240><c> looking</c><00:25:51.480><c> doing</c><00:25:51.960><c> lots</c><00:25:52.139><c> of</c>

00:25:52.190 --> 00:25:52.200 align:start position:0%
still mean I'm looking doing lots of
 

00:25:52.200 --> 00:25:53.899 align:start position:0%
still mean I'm looking doing lots of
lookup<00:25:52.470><c> not</c><00:25:52.620><c> just</c><00:25:52.769><c> one</c><00:25:52.860><c> look</c><00:25:53.010><c> up</c><00:25:53.159><c> it's</c><00:25:53.669><c> still</c>

00:25:53.899 --> 00:25:53.909 align:start position:0%
lookup not just one look up it's still
 

00:25:53.909 --> 00:25:58.490 align:start position:0%
lookup not just one look up it's still
performant<00:25:54.470><c> performance</c><00:25:55.470><c> enough</c><00:25:57.500><c> now</c>

00:25:58.490 --> 00:25:58.500 align:start position:0%
performant performance enough now
 

00:25:58.500 --> 00:25:59.870 align:start position:0%
performant performance enough now
deduplication<00:25:59.130><c> is</c><00:25:59.429><c> quite</c><00:25:59.610><c> a</c><00:25:59.639><c> nice</c><00:25:59.850><c> little</c>

00:25:59.870 --> 00:25:59.880 align:start position:0%
deduplication is quite a nice little
 

00:25:59.880 --> 00:26:02.690 align:start position:0%
deduplication is quite a nice little
feature<00:26:00.360><c> you</c><00:26:01.019><c> get</c><00:26:01.139><c> this</c><00:26:01.289><c> in</c><00:26:01.440><c> g1</c><00:26:01.679><c> not</c><00:26:02.460><c> in</c><00:26:02.610><c> the</c>

00:26:02.690 --> 00:26:02.700 align:start position:0%
feature you get this in g1 not in the
 

00:26:02.700 --> 00:26:03.590 align:start position:0%
feature you get this in g1 not in the
other<00:26:02.820><c> three</c><00:26:03.179><c> C's</c>

00:26:03.590 --> 00:26:03.600 align:start position:0%
other three C's
 

00:26:03.600 --> 00:26:05.960 align:start position:0%
other three C's
I<00:26:03.630><c> don't</c><00:26:04.470><c> know</c><00:26:04.529><c> why</c><00:26:04.710><c> there</c><00:26:05.669><c> probably</c><00:26:05.880><c> could</c>

00:26:05.960 --> 00:26:05.970 align:start position:0%
I don't know why there probably could
 

00:26:05.970 --> 00:26:07.970 align:start position:0%
I don't know why there probably could
add<00:26:06.179><c> another</c><00:26:06.330><c> one</c><00:26:06.510><c> spa</c><00:26:06.690><c> but</c><00:26:06.870><c> the</c><00:26:07.679><c> idea</c><00:26:07.889><c> is</c><00:26:07.919><c> that</c>

00:26:07.970 --> 00:26:07.980 align:start position:0%
add another one spa but the idea is that
 

00:26:07.980 --> 00:26:11.000 align:start position:0%
add another one spa but the idea is that
is<00:26:08.399><c> that</c><00:26:08.610><c> they</c><00:26:08.850><c> if</c><00:26:09.630><c> you've</c><00:26:09.809><c> got</c><00:26:10.019><c> multiple</c>

00:26:11.000 --> 00:26:11.010 align:start position:0%
is that they if you've got multiple
 

00:26:11.010 --> 00:26:13.250 align:start position:0%
is that they if you've got multiple
strings<00:26:11.519><c> which</c><00:26:12.029><c> have</c><00:26:12.059><c> the</c><00:26:12.360><c> same</c><00:26:12.570><c> content</c><00:26:12.899><c> or</c>

00:26:13.250 --> 00:26:13.260 align:start position:0%
strings which have the same content or
 

00:26:13.260 --> 00:26:14.659 align:start position:0%
strings which have the same content or
they<00:26:13.380><c> you</c><00:26:13.590><c> know</c><00:26:13.710><c> they're</c><00:26:14.100><c> different</c><00:26:14.190><c> strings</c>

00:26:14.659 --> 00:26:14.669 align:start position:0%
they you know they're different strings
 

00:26:14.669 --> 00:26:17.149 align:start position:0%
they you know they're different strings
but<00:26:14.850><c> they've</c><00:26:15.029><c> got</c><00:26:15.179><c> you</c><00:26:15.659><c> know</c><00:26:15.830><c> the</c><00:26:16.830><c> effort</c><00:26:17.100><c> of</c>

00:26:17.149 --> 00:26:17.159 align:start position:0%
but they've got you know the effort of
 

00:26:17.159 --> 00:26:19.210 align:start position:0%
but they've got you know the effort of
interest<00:26:17.639><c> isn't</c><00:26:17.820><c> the</c><00:26:18.000><c> Creator</c><00:26:18.419><c> separately</c>

00:26:19.210 --> 00:26:19.220 align:start position:0%
interest isn't the Creator separately
 

00:26:19.220 --> 00:26:22.340 align:start position:0%
interest isn't the Creator separately
then<00:26:20.220><c> before</c><00:26:20.970><c> the</c><00:26:21.330><c> object</c><00:26:21.450><c> gets</c><00:26:21.779><c> moved</c><00:26:22.019><c> to</c><00:26:22.200><c> the</c>

00:26:22.340 --> 00:26:22.350 align:start position:0%
then before the object gets moved to the
 

00:26:22.350 --> 00:26:25.789 align:start position:0%
then before the object gets moved to the
old<00:26:22.649><c> space</c><00:26:23.059><c> it's</c><00:26:24.059><c> the</c><00:26:24.450><c> the</c><00:26:24.929><c> Quattro</c><00:26:25.409><c> Reigate</c>

00:26:25.789 --> 00:26:25.799 align:start position:0%
old space it's the the Quattro Reigate
 

00:26:25.799 --> 00:26:27.919 align:start position:0%
old space it's the the Quattro Reigate
shade<00:26:26.130><c> with</c><00:26:26.639><c> other</c><00:26:26.970><c> strengths</c><00:26:27.570><c> which</c><00:26:27.750><c> have</c>

00:26:27.919 --> 00:26:27.929 align:start position:0%
shade with other strengths which have
 

00:26:27.929 --> 00:26:30.529 align:start position:0%
shade with other strengths which have
the<00:26:28.019><c> same</c><00:26:28.230><c> the</c><00:26:28.980><c> same</c><00:26:29.010><c> value</c><00:26:29.460><c> so</c><00:26:30.120><c> here</c><00:26:30.269><c> are</c>

00:26:30.529 --> 00:26:30.539 align:start position:0%
the same the same value so here are
 

00:26:30.539 --> 00:26:32.210 align:start position:0%
the same the same value so here are
making<00:26:30.840><c> two</c><00:26:31.019><c> strings</c><00:26:31.350><c> with</c><00:26:31.649><c> tooth</c><00:26:31.919><c> with</c><00:26:32.190><c> the</c>

00:26:32.210 --> 00:26:32.220 align:start position:0%
making two strings with tooth with the
 

00:26:32.220 --> 00:26:34.250 align:start position:0%
making two strings with tooth with the
same<00:26:32.460><c> two</c><00:26:32.610><c> are</c><00:26:32.730><c> a</c><00:26:32.850><c> so</c><00:26:33.389><c> it's</c><00:26:33.630><c> going</c><00:26:33.809><c> to</c><00:26:33.899><c> be</c><00:26:34.019><c> two</c>

00:26:34.250 --> 00:26:34.260 align:start position:0%
same two are a so it's going to be two
 

00:26:34.260 --> 00:26:37.310 align:start position:0%
same two are a so it's going to be two
strings<00:26:34.529><c> with</c><00:26:34.769><c> with</c><00:26:35.429><c> different</c><00:26:36.230><c> Shara's</c><00:26:37.230><c> you</c>

00:26:37.310 --> 00:26:37.320 align:start position:0%
strings with with different Shara's you
 

00:26:37.320 --> 00:26:39.169 align:start position:0%
strings with with different Shara's you
can<00:26:37.409><c> see</c><00:26:37.590><c> it</c><00:26:37.679><c> here</c><00:26:37.830><c> with</c><00:26:38.130><c> reflection</c><00:26:38.639><c> and</c>

00:26:39.169 --> 00:26:39.179 align:start position:0%
can see it here with reflection and
 

00:26:39.179 --> 00:26:41.330 align:start position:0%
can see it here with reflection and
printing<00:26:39.600><c> out</c><00:26:39.750><c> get</c><00:26:40.230><c> a</c><00:26:40.409><c> snort</c><00:26:40.830><c> and</c><00:26:41.010><c> get</c><00:26:41.190><c> this</c>

00:26:41.330 --> 00:26:41.340 align:start position:0%
printing out get a snort and get this
 

00:26:41.340 --> 00:26:42.919 align:start position:0%
printing out get a snort and get this
one<00:26:41.549><c> and</c><00:26:42.090><c> you</c><00:26:42.210><c> can</c><00:26:42.240><c> see</c><00:26:42.389><c> the</c><00:26:42.510><c> Torah</c><00:26:42.779><c> that</c>

00:26:42.919 --> 00:26:42.929 align:start position:0%
one and you can see the Torah that
 

00:26:42.929 --> 00:26:46.129 align:start position:0%
one and you can see the Torah that
torres<00:26:43.440><c> are</c><00:26:43.590><c> different</c><00:26:44.240><c> after</c><00:26:45.240><c> the</c><00:26:45.450><c> GC</c><00:26:45.809><c> is</c><00:26:45.899><c> run</c>

00:26:46.129 --> 00:26:46.139 align:start position:0%
torres are different after the GC is run
 

00:26:46.139 --> 00:26:48.680 align:start position:0%
torres are different after the GC is run
now<00:26:46.470><c> I'm</c><00:26:46.710><c> quoting</c><00:26:47.220><c> explicitly</c><00:26:47.850><c> GC</c><00:26:48.179><c> it</c><00:26:48.570><c> will</c>

00:26:48.680 --> 00:26:48.690 align:start position:0%
now I'm quoting explicitly GC it will
 

00:26:48.690 --> 00:26:50.149 align:start position:0%
now I'm quoting explicitly GC it will
happen<00:26:48.929><c> even</c><00:26:49.019><c> if</c><00:26:49.139><c> you</c><00:26:49.260><c> don't</c><00:26:49.500><c> do</c><00:26:49.740><c> that</c><00:26:49.860><c> will</c>

00:26:50.149 --> 00:26:50.159 align:start position:0%
happen even if you don't do that will
 

00:26:50.159 --> 00:26:52.850 align:start position:0%
happen even if you don't do that will
still<00:26:50.399><c> go</c><00:26:51.029><c> and</c><00:26:51.269><c> undo</c><00:26:51.779><c> the</c><00:26:51.870><c> deduplication</c><00:26:52.409><c> the</c>

00:26:52.850 --> 00:26:52.860 align:start position:0%
still go and undo the deduplication the
 

00:26:52.860 --> 00:26:54.860 align:start position:0%
still go and undo the deduplication the
fourth<00:26:53.130><c> curse</c><00:26:53.370><c> the</c><00:26:53.519><c> old</c><00:26:53.700><c> space</c><00:26:53.970><c> will</c><00:26:54.539><c> do</c><00:26:54.690><c> that</c>

00:26:54.860 --> 00:26:54.870 align:start position:0%
fourth curse the old space will do that
 

00:26:54.870 --> 00:26:57.409 align:start position:0%
fourth curse the old space will do that
and<00:26:55.370><c> afterwards</c><00:26:56.370><c> you'll</c><00:26:56.490><c> see</c><00:26:56.730><c> that</c><00:26:56.909><c> it's</c><00:26:57.179><c> now</c>

00:26:57.409 --> 00:26:57.419 align:start position:0%
and afterwards you'll see that it's now
 

00:26:57.419 --> 00:27:00.860 align:start position:0%
and afterwards you'll see that it's now
there's<00:26:57.929><c> the</c><00:26:58.169><c> same</c><00:26:58.440><c> char</c><00:26:58.889><c> a</c><00:26:59.269><c> so</c><00:27:00.269><c> this</c><00:27:00.389><c> can</c><00:27:00.630><c> save</c>

00:27:00.860 --> 00:27:00.870 align:start position:0%
there's the same char a so this can save
 

00:27:00.870 --> 00:27:03.620 align:start position:0%
there's the same char a so this can save
your<00:27:01.110><c> memory</c><00:27:01.470><c> without</c><00:27:01.860><c> any</c><00:27:02.340><c> real</c><00:27:03.090><c> efforts</c>

00:27:03.620 --> 00:27:03.630 align:start position:0%
your memory without any real efforts
 

00:27:03.630 --> 00:27:07.909 align:start position:0%
your memory without any real efforts
well<00:27:04.110><c> it</c><00:27:05.070><c> it</c><00:27:05.549><c> will</c><00:27:05.789><c> it</c><00:27:06.210><c> should</c><00:27:06.990><c> it</c><00:27:07.320><c> usually</c>

00:27:07.909 --> 00:27:07.919 align:start position:0%
well it it will it should it usually
 

00:27:07.919 --> 00:27:10.940 align:start position:0%
well it it will it should it usually
does<00:27:08.100><c> from</c><00:27:08.370><c> our</c><00:27:08.490><c> C</c><00:27:09.320><c> make</c><00:27:10.320><c> things</c><00:27:10.559><c> a</c><00:27:10.649><c> little</c><00:27:10.770><c> bit</c>

00:27:10.940 --> 00:27:10.950 align:start position:0%
does from our C make things a little bit
 

00:27:10.950 --> 00:27:11.300 align:start position:0%
does from our C make things a little bit
slow

00:27:11.300 --> 00:27:11.310 align:start position:0%
slow
 

00:27:11.310 --> 00:27:13.970 align:start position:0%
slow
so<00:27:11.850><c> performance</c><00:27:12.360><c> can</c><00:27:12.630><c> be</c><00:27:12.660><c> affected</c><00:27:13.140><c> by</c><00:27:13.260><c> it</c><00:27:13.290><c> but</c>

00:27:13.970 --> 00:27:13.980 align:start position:0%
so performance can be affected by it but
 

00:27:13.980 --> 00:27:15.620 align:start position:0%
so performance can be affected by it but
and<00:27:14.580><c> it's</c><00:27:14.700><c> not</c><00:27:14.790><c> won</c><00:27:14.910><c> by</c><00:27:14.970><c> default</c><00:27:15.090><c> you</c><00:27:15.480><c> have</c><00:27:15.510><c> to</c>

00:27:15.620 --> 00:27:15.630 align:start position:0%
and it's not won by default you have to
 

00:27:15.630 --> 00:27:16.940 align:start position:0%
and it's not won by default you have to
turn<00:27:15.780><c> around</c><00:27:15.840><c> explicitly</c><00:27:16.440><c> and</c><00:27:16.620><c> it</c><00:27:16.680><c> only</c><00:27:16.770><c> works</c>

00:27:16.940 --> 00:27:16.950 align:start position:0%
turn around explicitly and it only works
 

00:27:16.950 --> 00:27:20.180 align:start position:0%
turn around explicitly and it only works
with<00:27:17.160><c> g1</c><00:27:17.490><c> but</c><00:27:18.480><c> besides</c><00:27:18.840><c> that</c><00:27:18.990><c> I</c><00:27:19.800><c> think</c><00:27:19.950><c> it's</c>

00:27:20.180 --> 00:27:20.190 align:start position:0%
with g1 but besides that I think it's
 

00:27:20.190 --> 00:27:25.790 align:start position:0%
with g1 but besides that I think it's
pretty<00:27:20.340><c> cool</c><00:27:21.380><c> now</c><00:27:23.900><c> in</c><00:27:24.900><c> terms</c><00:27:25.320><c> been</c><00:27:25.590><c> with</c><00:27:25.740><c> us</c>

00:27:25.790 --> 00:27:25.800 align:start position:0%
pretty cool now in terms been with us
 

00:27:25.800 --> 00:27:27.970 align:start position:0%
pretty cool now in terms been with us
for<00:27:25.980><c> a</c><00:27:26.010><c> long</c><00:27:26.100><c> time</c><00:27:26.370><c> and</c><00:27:26.550><c> what</c><00:27:26.670><c> in</c><00:27:26.820><c> turn</c><00:27:27.090><c> does</c><00:27:27.420><c> is</c>

00:27:27.970 --> 00:27:27.980 align:start position:0%
for a long time and what in turn does is
 

00:27:27.980 --> 00:27:30.680 align:start position:0%
for a long time and what in turn does is
it<00:27:28.980><c> gives</c><00:27:29.520><c> you</c><00:27:29.700><c> a</c><00:27:29.730><c> strength</c><00:27:30.060><c> from</c><00:27:30.240><c> the</c><00:27:30.420><c> shade</c>

00:27:30.680 --> 00:27:30.690 align:start position:0%
it gives you a strength from the shade
 

00:27:30.690 --> 00:27:35.720 align:start position:0%
it gives you a strength from the shade
string<00:27:31.320><c> table</c><00:27:31.800><c> and</c><00:27:33.200><c> we</c><00:27:34.310><c> Dimitra</c><00:27:35.310><c> now</c><00:27:35.430><c> I</c><00:27:35.460><c> gave</c><00:27:35.670><c> a</c>

00:27:35.720 --> 00:27:35.730 align:start position:0%
string table and we Dimitra now I gave a
 

00:27:35.730 --> 00:27:41.930 align:start position:0%
string table and we Dimitra now I gave a
talk<00:27:36.060><c> at</c><00:27:36.660><c> JavaOne</c><00:27:37.820><c> Ostia</c><00:27:40.460><c> cut</c><00:27:41.460><c> a</c><00:27:41.490><c> code</c><00:27:41.790><c> one</c>

00:27:41.930 --> 00:27:41.940 align:start position:0%
talk at JavaOne Ostia cut a code one
 

00:27:41.940 --> 00:27:45.440 align:start position:0%
talk at JavaOne Ostia cut a code one
called<00:27:42.600><c> cold</c><00:27:42.990><c> one</c><00:27:43.200><c> and</c><00:27:43.500><c> at</c><00:27:44.370><c> code</c><00:27:44.670><c> one</c><00:27:44.880><c> we</c><00:27:45.300><c> gave</c>

00:27:45.440 --> 00:27:45.450 align:start position:0%
called cold one and at code one we gave
 

00:27:45.450 --> 00:27:48.860 align:start position:0%
called cold one and at code one we gave
a<00:27:45.480><c> talk</c><00:27:45.570><c> and</c><00:27:46.100><c> we</c><00:27:47.100><c> lied</c><00:27:47.370><c> to</c><00:27:47.400><c> the</c><00:27:47.730><c> people</c><00:27:47.880><c> but</c><00:27:48.720><c> we</c>

00:27:48.860 --> 00:27:48.870 align:start position:0%
a talk and we lied to the people but we
 

00:27:48.870 --> 00:27:52.460 align:start position:0%
a talk and we lied to the people but we
didn't<00:27:49.110><c> do</c><00:27:49.380><c> on</c><00:27:49.800><c> purpose</c><00:27:50.220><c> you</c><00:27:50.550><c> know</c><00:27:51.470><c> because</c>

00:27:52.460 --> 00:27:52.470 align:start position:0%
didn't do on purpose you know because
 

00:27:52.470 --> 00:27:54.440 align:start position:0%
didn't do on purpose you know because
they<00:27:52.590><c> changed</c><00:27:52.950><c> something</c><00:27:53.160><c> in</c><00:27:53.820><c> Java</c><00:27:54.090><c> livin</c>

00:27:54.440 --> 00:27:54.450 align:start position:0%
they changed something in Java livin
 

00:27:54.450 --> 00:27:58.070 align:start position:0%
they changed something in Java livin
without<00:27:55.440><c> telling</c><00:27:56.040><c> anybody</c><00:27:56.660><c> we</c><00:27:57.660><c> still</c><00:27:57.870><c> haven't</c>

00:27:58.070 --> 00:27:58.080 align:start position:0%
without telling anybody we still haven't
 

00:27:58.080 --> 00:27:59.780 align:start position:0%
without telling anybody we still haven't
figured<00:27:58.230><c> out</c><00:27:58.380><c> a</c><00:27:58.440><c> way</c><00:27:58.680><c> they</c><00:27:58.890><c> actually</c><00:27:59.070><c> did</c><00:27:59.640><c> that</c>

00:27:59.780 --> 00:27:59.790 align:start position:0%
figured out a way they actually did that
 

00:27:59.790 --> 00:28:03.050 align:start position:0%
figured out a way they actually did that
or<00:28:00.240><c> way</c><00:28:00.630><c> they</c><00:28:00.870><c> they</c><00:28:01.670><c> document</c><00:28:02.670><c> that</c><00:28:02.790><c> what</c><00:28:02.940><c> they</c>

00:28:03.050 --> 00:28:03.060 align:start position:0%
or way they they document that what they
 

00:28:03.060 --> 00:28:06.020 align:start position:0%
or way they they document that what they
were<00:28:03.120><c> doing</c><00:28:03.800><c> but</c><00:28:04.800><c> what</c><00:28:05.370><c> did</c><00:28:05.550><c> it</c><00:28:05.670><c> was</c><00:28:05.850><c> some</c>

00:28:06.020 --> 00:28:06.030 align:start position:0%
were doing but what did it was some
 

00:28:06.030 --> 00:28:07.940 align:start position:0%
were doing but what did it was some
driver<00:28:06.270><c> live</c><00:28:06.780><c> and</c><00:28:06.990><c> they</c><00:28:07.110><c> changed</c><00:28:07.620><c> whether</c><00:28:07.770><c> the</c>

00:28:07.940 --> 00:28:07.950 align:start position:0%
driver live and they changed whether the
 

00:28:07.950 --> 00:28:11.270 align:start position:0%
driver live and they changed whether the
intern<00:28:08.250><c> table</c><00:28:08.820><c> is</c><00:28:08.970><c> structured</c><00:28:09.480><c> up</c><00:28:10.350><c> until</c><00:28:10.800><c> Java</c>

00:28:11.270 --> 00:28:11.280 align:start position:0%
intern table is structured up until Java
 

00:28:11.280 --> 00:28:17.030 align:start position:0%
intern table is structured up until Java
Tim<00:28:11.580><c> the</c><00:28:12.120><c> intern</c><00:28:12.510><c> table</c><00:28:14.810><c> was</c><00:28:15.810><c> was</c><00:28:16.410><c> was</c><00:28:16.620><c> a</c><00:28:16.650><c> fixed</c>

00:28:17.030 --> 00:28:17.040 align:start position:0%
Tim the intern table was was was a fixed
 

00:28:17.040 --> 00:28:19.880 align:start position:0%
Tim the intern table was was was a fixed
sized<00:28:17.250><c> table</c><00:28:18.080><c> and</c><00:28:19.080><c> was</c><00:28:19.290><c> always</c><00:28:19.440><c> a</c><00:28:19.560><c> prime</c>

00:28:19.880 --> 00:28:19.890 align:start position:0%
sized table and was always a prime
 

00:28:19.890 --> 00:28:22.100 align:start position:0%
sized table and was always a prime
number<00:28:19.920><c> you</c><00:28:20.400><c> know</c><00:28:20.520><c> that</c><00:28:20.700><c> all</c><00:28:20.820><c> the</c><00:28:21.030><c> the</c><00:28:21.600><c> typical</c>

00:28:22.100 --> 00:28:22.110 align:start position:0%
number you know that all the the typical
 

00:28:22.110 --> 00:28:26.090 align:start position:0%
number you know that all the the typical
hashing<00:28:22.850><c> magic</c><00:28:23.850><c> they</c><00:28:24.060><c> and</c><00:28:24.530><c> their</c><00:28:25.530><c> changed</c><00:28:25.950><c> it</c>

00:28:26.090 --> 00:28:26.100 align:start position:0%
hashing magic they and their changed it
 

00:28:26.100 --> 00:28:29.120 align:start position:0%
hashing magic they and their changed it
in<00:28:26.310><c> Java</c><00:28:26.520><c> eleven</c><00:28:26.970><c> to</c><00:28:27.180><c> be</c><00:28:27.650><c> changing</c><00:28:28.650><c> seven</c><00:28:28.980><c> and</c>

00:28:29.120 --> 00:28:29.130 align:start position:0%
in Java eleven to be changing seven and
 

00:28:29.130 --> 00:28:31.490 align:start position:0%
in Java eleven to be changing seven and
also<00:28:29.220><c> power</c><00:28:29.850><c> of</c><00:28:29.970><c> two</c><00:28:30.210><c> so</c><00:28:30.930><c> it</c><00:28:31.020><c> starts</c><00:28:31.350><c> within</c>

00:28:31.490 --> 00:28:31.500 align:start position:0%
also power of two so it starts within
 

00:28:31.500 --> 00:28:34.220 align:start position:0%
also power of two so it starts within
65,000<00:28:32.490><c> you</c><00:28:32.820><c> know</c><00:28:32.940><c> and</c><00:28:33.540><c> then</c><00:28:33.690><c> it</c><00:28:33.810><c> keeps</c><00:28:33.990><c> on</c>

00:28:34.220 --> 00:28:34.230 align:start position:0%
65,000 you know and then it keeps on
 

00:28:34.230 --> 00:28:36.710 align:start position:0%
65,000 you know and then it keeps on
growing<00:28:34.410><c> as</c><00:28:34.770><c> you</c><00:28:35.340><c> add</c><00:28:35.520><c> more</c><00:28:35.550><c> more</c><00:28:35.940><c> strings</c><00:28:36.210><c> in</c>

00:28:36.710 --> 00:28:36.720 align:start position:0%
growing as you add more more strings in
 

00:28:36.720 --> 00:28:40.760 align:start position:0%
growing as you add more more strings in
order<00:28:36.930><c> to</c><00:28:37.110><c> reduce</c><00:28:37.560><c> the</c><00:28:38.190><c> amount</c><00:28:38.780><c> the</c><00:28:39.780><c> the</c>

00:28:40.760 --> 00:28:40.770 align:start position:0%
order to reduce the amount the the
 

00:28:40.770 --> 00:28:42.740 align:start position:0%
order to reduce the amount the the
mountain<00:28:41.160><c> above</c><00:28:41.250><c> caches</c><00:28:41.760><c> that</c><00:28:41.970><c> you</c><00:28:42.630><c> have</c>

00:28:42.740 --> 00:28:42.750 align:start position:0%
mountain above caches that you have
 

00:28:42.750 --> 00:28:43.520 align:start position:0%
mountain above caches that you have
inside<00:28:42.990><c> the</c><00:28:43.140><c> hashmap</c>

00:28:43.520 --> 00:28:43.530 align:start position:0%
inside the hashmap
 

00:28:43.530 --> 00:28:45.530 align:start position:0%
inside the hashmap
inside<00:28:44.010><c> the</c><00:28:44.130><c> string</c><00:28:44.340><c> table</c><00:28:44.640><c> so</c><00:28:45.180><c> the</c>

00:28:45.530 --> 00:28:45.540 align:start position:0%
inside the string table so the
 

00:28:45.540 --> 00:28:48.230 align:start position:0%
inside the string table so the
performance<00:28:45.810><c> is</c><00:28:46.290><c> still</c><00:28:47.250><c> not</c><00:28:47.490><c> great</c><00:28:47.730><c> for</c><00:28:48.150><c> the</c>

00:28:48.230 --> 00:28:48.240 align:start position:0%
performance is still not great for the
 

00:28:48.240 --> 00:28:51.260 align:start position:0%
performance is still not great for the
intern<00:28:48.600><c> table</c><00:28:49.440><c> it's</c><00:28:50.220><c> it's</c><00:28:50.520><c> you</c><00:28:50.760><c> can</c><00:28:50.910><c> get</c><00:28:51.060><c> much</c>

00:28:51.260 --> 00:28:51.270 align:start position:0%
intern table it's it's you can get much
 

00:28:51.270 --> 00:28:53.930 align:start position:0%
intern table it's it's you can get much
better<00:28:51.450><c> performance</c><00:28:51.540><c> if</c><00:28:52.200><c> you</c><00:28:52.800><c> if</c><00:28:53.580><c> you</c><00:28:53.790><c> make</c>

00:28:53.930 --> 00:28:53.940 align:start position:0%
better performance if you if you make
 

00:28:53.940 --> 00:28:55.970 align:start position:0%
better performance if you if you make
your<00:28:54.060><c> own</c><00:28:54.300><c> for</c><00:28:54.810><c> example</c><00:28:55.110><c> concurrent</c><00:28:55.530><c> hash</c><00:28:55.560><c> map</c>

00:28:55.970 --> 00:28:55.980 align:start position:0%
your own for example concurrent hash map
 

00:28:55.980 --> 00:28:59.600 align:start position:0%
your own for example concurrent hash map
and<00:28:56.250><c> use</c><00:28:56.730><c> that</c><00:28:56.970><c> to</c><00:28:57.390><c> to</c><00:28:57.840><c> stall</c><00:28:58.400><c> duplicates</c><00:28:59.400><c> of</c>

00:28:59.600 --> 00:28:59.610 align:start position:0%
and use that to to stall duplicates of
 

00:28:59.610 --> 00:29:04.610 align:start position:0%
and use that to to stall duplicates of
strings<00:29:00.240><c> but</c><00:29:02.120><c> it's</c><00:29:03.120><c> it's</c><00:29:03.420><c> not</c><00:29:03.510><c> as</c><00:29:03.930><c> bad</c><00:29:04.290><c> as</c><00:29:04.530><c> it</c>

00:29:04.610 --> 00:29:04.620 align:start position:0%
strings but it's it's not as bad as it
 

00:29:04.620 --> 00:29:05.180 align:start position:0%
strings but it's it's not as bad as it
used<00:29:04.800><c> to</c><00:29:04.860><c> be</c>

00:29:05.180 --> 00:29:05.190 align:start position:0%
used to be
 

00:29:05.190 --> 00:29:07.550 align:start position:0%
used to be
prior<00:29:05.730><c> to</c><00:29:05.760><c> Java</c><00:29:06.180><c> travel</c><00:29:06.690><c> if</c><00:29:06.780><c> it's</c><00:29:06.900><c> a</c><00:29:06.960><c> java</c><00:29:07.140><c> java</c>

00:29:07.550 --> 00:29:07.560 align:start position:0%
prior to Java travel if it's a java java
 

00:29:07.560 --> 00:29:09.560 align:start position:0%
prior to Java travel if it's a java java
level<00:29:07.800><c> it's</c><00:29:07.950><c> not</c><00:29:08.070><c> change</c><00:29:08.370><c> this</c><00:29:08.580><c> but</c><00:29:08.790><c> and</c><00:29:09.000><c> drop</c>

00:29:09.560 --> 00:29:09.570 align:start position:0%
level it's not change this but and drop
 

00:29:09.570 --> 00:29:13.130 align:start position:0%
level it's not change this but and drop
a<00:29:09.600><c> 12</c><00:29:09.930><c> is</c><00:29:10.110><c> the</c><00:29:10.590><c> same</c><00:29:10.830><c> as</c><00:29:10.950><c> 12</c><00:29:11.010><c> 11</c><00:29:11.340><c> and</c><00:29:12.140><c> what's</c>

00:29:13.130 --> 00:29:13.140 align:start position:0%
a 12 is the same as 12 11 and what's
 

00:29:13.140 --> 00:29:17.480 align:start position:0%
a 12 is the same as 12 11 and what's
changed<00:29:13.680><c> okay</c><00:29:14.220><c> the</c><00:29:15.170><c> because</c><00:29:16.490><c> identification</c>

00:29:17.480 --> 00:29:17.490 align:start position:0%
changed okay the because identification
 

00:29:17.490 --> 00:29:20.440 align:start position:0%
changed okay the because identification
will<00:29:18.390><c> save</c><00:29:18.720><c> some</c><00:29:18.990><c> memory</c><00:29:19.140><c> because</c><00:29:19.500><c> you're</c><00:29:19.620><c> not</c>

00:29:20.440 --> 00:29:20.450 align:start position:0%
will save some memory because you're not
 

00:29:20.450 --> 00:29:22.910 align:start position:0%
will save some memory because you're not
deduplicating<00:29:21.450><c> in</c><00:29:21.510><c> the</c><00:29:21.570><c> torah</c><00:29:21.840><c> but</c><00:29:22.560><c> of</c><00:29:22.680><c> course</c>

00:29:22.910 --> 00:29:22.920 align:start position:0%
deduplicating in the torah but of course
 

00:29:22.920 --> 00:29:25.170 align:start position:0%
deduplicating in the torah but of course
if<00:29:23.070><c> you</c><00:29:23.100><c> if</c><00:29:23.580><c> you've</c><00:29:24.270><c> got</c><00:29:24.300><c> a</c>

00:29:25.170 --> 00:29:25.180 align:start position:0%
if you if you've got a
 

00:29:25.180 --> 00:29:28.860 align:start position:0%
if you if you've got a
a<00:29:25.210><c> complete</c><00:29:26.220><c> if</c><00:29:27.220><c> you</c><00:29:27.430><c> intern</c><00:29:27.910><c> or</c><00:29:28.240><c> concurrent</c>

00:29:28.860 --> 00:29:28.870 align:start position:0%
a complete if you intern or concurrent
 

00:29:28.870 --> 00:29:30.720 align:start position:0%
a complete if you intern or concurrent
hash<00:29:28.900><c> map</c><00:29:29.260><c> it</c><00:29:29.770><c> will</c><00:29:29.890><c> actually</c><00:29:30.160><c> be</c><00:29:30.250><c> using</c>

00:29:30.720 --> 00:29:30.730 align:start position:0%
hash map it will actually be using
 

00:29:30.730 --> 00:29:42.590 align:start position:0%
hash map it will actually be using
saving<00:29:31.150><c> even</c><00:29:31.240><c> more</c><00:29:31.330><c> memory</c><00:29:32.610><c> no</c><00:29:33.960><c> other</c><00:29:34.960><c> to</c><00:29:35.110><c> you</c>

00:29:42.590 --> 00:29:42.600 align:start position:0%
 
 

00:29:42.600 --> 00:29:44.580 align:start position:0%
 
I'll<00:29:43.600><c> talk</c><00:29:43.809><c> about</c><00:29:43.840><c> the</c><00:29:44.080><c> structure</c><00:29:44.320><c> beauty</c>

00:29:44.580 --> 00:29:44.590 align:start position:0%
I'll talk about the structure beauty
 

00:29:44.590 --> 00:29:46.530 align:start position:0%
I'll talk about the structure beauty
we'll<00:29:44.710><c> talk</c><00:29:44.860><c> about</c><00:29:44.980><c> the</c><00:29:45.370><c> the</c><00:29:45.910><c> results</c><00:29:46.330><c> or</c>

00:29:46.530 --> 00:29:46.540 align:start position:0%
we'll talk about the the results or
 

00:29:46.540 --> 00:29:48.810 align:start position:0%
we'll talk about the the results or
effects<00:29:47.140><c> of</c><00:29:47.230><c> the</c><00:29:47.380><c> this</c><00:29:47.740><c> job</c><00:29:48.430><c> and</c><00:29:48.580><c> I'm</c><00:29:48.670><c> they</c>

00:29:48.810 --> 00:29:48.820 align:start position:0%
effects of the this job and I'm they
 

00:29:48.820 --> 00:29:50.130 align:start position:0%
effects of the this job and I'm they
changed<00:29:49.150><c> the</c><00:29:49.240><c> battery</c><00:29:49.570><c> I'm</c><00:29:49.870><c> sure</c><00:29:50.050><c> you've</c>

00:29:50.130 --> 00:29:50.140 align:start position:0%
changed the battery I'm sure you've
 

00:29:50.140 --> 00:29:52.080 align:start position:0%
changed the battery I'm sure you've
heard<00:29:50.230><c> that</c><00:29:50.290><c> they're</c><00:29:50.980><c> also</c><00:29:51.190><c> got</c><00:29:51.280><c> a</c><00:29:51.309><c> coded</c><00:29:51.940><c> by</c><00:29:52.059><c> a</c>

00:29:52.080 --> 00:29:52.090 align:start position:0%
heard that they're also got a coded by a
 

00:29:52.090 --> 00:29:54.510 align:start position:0%
heard that they're also got a coded by a
coda<00:29:52.600><c> bite</c><00:29:52.809><c> to</c><00:29:53.290><c> say</c><00:29:53.470><c> what</c><00:29:53.710><c> the</c><00:29:53.830><c> encoding</c><00:29:54.250><c> is</c><00:29:54.340><c> if</c>

00:29:54.510 --> 00:29:54.520 align:start position:0%
coda bite to say what the encoding is if
 

00:29:54.520 --> 00:29:57.690 align:start position:0%
coda bite to say what the encoding is if
its<00:29:54.700><c> YouTube</c><00:29:55.710><c> you</c><00:29:56.710><c> know</c><00:29:56.830><c> if</c><00:29:56.950><c> it's</c><00:29:57.160><c> YouTube</c>

00:29:57.690 --> 00:29:57.700 align:start position:0%
its YouTube you know if it's YouTube
 

00:29:57.700 --> 00:30:01.080 align:start position:0%
its YouTube you know if it's YouTube
sixteen<00:29:58.090><c> or</c><00:29:58.240><c> utf-16</c><00:29:58.870><c> or</c><00:29:59.350><c> or</c><00:29:59.920><c> latin-1</c><00:30:00.670><c> that's</c>

00:30:01.080 --> 00:30:01.090 align:start position:0%
sixteen or utf-16 or or latin-1 that's
 

00:30:01.090 --> 00:30:03.870 align:start position:0%
sixteen or utf-16 or or latin-1 that's
right<00:30:01.380><c> they</c><00:30:02.380><c> don't</c><00:30:02.530><c> like</c><00:30:02.650><c> the</c><00:30:02.800><c> Greeks</c><00:30:03.010><c> anyone</c>

00:30:03.870 --> 00:30:03.880 align:start position:0%
right they don't like the Greeks anyone
 

00:30:03.880 --> 00:30:07.710 align:start position:0%
right they don't like the Greeks anyone
lerton<00:30:04.179><c> one</c><00:30:04.300><c> um</c><00:30:04.660><c> and</c><00:30:06.030><c> they're</c><00:30:07.030><c> also</c><00:30:07.210><c> changed</c>

00:30:07.710 --> 00:30:07.720 align:start position:0%
lerton one um and they're also changed
 

00:30:07.720 --> 00:30:09.720 align:start position:0%
lerton one um and they're also changed
the<00:30:07.840><c> way</c><00:30:07.870><c> that</c><00:30:08.110><c> they</c><00:30:08.350><c> that</c><00:30:09.309><c> they</c><00:30:09.460><c> do</c><00:30:09.520><c> the</c>

00:30:09.720 --> 00:30:09.730 align:start position:0%
the way that they that they do the
 

00:30:09.730 --> 00:30:11.370 align:start position:0%
the way that they that they do the
string<00:30:09.910><c> concatenation</c><00:30:10.090><c> is</c><00:30:10.870><c> remember</c><00:30:11.260><c> when</c>

00:30:11.370 --> 00:30:11.380 align:start position:0%
string concatenation is remember when
 

00:30:11.380 --> 00:30:13.530 align:start position:0%
string concatenation is remember when
we're<00:30:11.500><c> in</c><00:30:11.559><c> front</c><00:30:11.770><c> of</c><00:30:11.890><c> four</c><00:30:12.100><c> to</c><00:30:12.250><c> five</c><00:30:12.490><c> we</c><00:30:13.300><c> had</c><00:30:13.390><c> to</c>

00:30:13.530 --> 00:30:13.540 align:start position:0%
we're in front of four to five we had to
 

00:30:13.540 --> 00:30:17.340 align:start position:0%
we're in front of four to five we had to
recompile<00:30:14.200><c> all</c><00:30:14.410><c> our</c><00:30:14.559><c> code</c><00:30:14.800><c> and</c><00:30:16.110><c> this</c><00:30:17.110><c> means</c>

00:30:17.340 --> 00:30:17.350 align:start position:0%
recompile all our code and this means
 

00:30:17.350 --> 00:30:18.960 align:start position:0%
recompile all our code and this means
that<00:30:17.620><c> and</c><00:30:17.920><c> the</c><00:30:18.040><c> way</c><00:30:18.130><c> that</c><00:30:18.340><c> build</c><00:30:18.580><c> things</c><00:30:18.790><c> the</c>

00:30:18.960 --> 00:30:18.970 align:start position:0%
that and the way that build things the
 

00:30:18.970 --> 00:30:21.419 align:start position:0%
that and the way that build things the
past<00:30:19.150><c> they</c><00:30:19.390><c> couldn't</c><00:30:19.830><c> optimize</c><00:30:20.830><c> the</c><00:30:21.100><c> curtain</c>

00:30:21.419 --> 00:30:21.429 align:start position:0%
past they couldn't optimize the curtain
 

00:30:21.429 --> 00:30:23.760 align:start position:0%
past they couldn't optimize the curtain
had<00:30:21.580><c> been</c><00:30:21.700><c> compiled</c><00:30:22.179><c> already</c><00:30:22.540><c> by</c><00:30:23.290><c> change</c><00:30:23.650><c> of</c>

00:30:23.760 --> 00:30:23.770 align:start position:0%
had been compiled already by change of
 

00:30:23.770 --> 00:30:24.930 align:start position:0%
had been compiled already by change of
the<00:30:23.860><c> algorithm</c><00:30:24.280><c> and</c><00:30:24.520><c> I</c><00:30:24.550><c> think</c><00:30:24.730><c> now</c><00:30:24.820><c> it's</c>

00:30:24.930 --> 00:30:24.940 align:start position:0%
the algorithm and I think now it's
 

00:30:24.940 --> 00:30:36.930 align:start position:0%
the algorithm and I think now it's
definitely<00:30:25.270><c> over</c><00:30:25.390><c> to</c><00:30:25.540><c> Dimitri</c><00:30:35.130><c> so</c><00:30:36.130><c> we</c><00:30:36.309><c> did</c><00:30:36.490><c> a</c>

00:30:36.930 --> 00:30:36.940 align:start position:0%
definitely over to Dimitri so we did a
 

00:30:36.940 --> 00:30:39.990 align:start position:0%
definitely over to Dimitri so we did a
little<00:30:37.300><c> wrote</c><00:30:38.080><c> little</c><00:30:38.350><c> benchmark</c><00:30:38.800><c> to</c><00:30:38.980><c> to</c><00:30:39.820><c> show</c>

00:30:39.990 --> 00:30:40.000 align:start position:0%
little wrote little benchmark to to show
 

00:30:40.000 --> 00:30:42.570 align:start position:0%
little wrote little benchmark to to show
how<00:30:40.179><c> these</c><00:30:40.360><c> things</c><00:30:40.570><c> affect</c><00:30:40.809><c> the</c><00:30:41.590><c> code</c><00:30:41.770><c> so</c><00:30:42.429><c> what</c>

00:30:42.570 --> 00:30:42.580 align:start position:0%
how these things affect the code so what
 

00:30:42.580 --> 00:30:44.370 align:start position:0%
how these things affect the code so what
you<00:30:42.700><c> see</c><00:30:42.880><c> on</c><00:30:42.970><c> the</c><00:30:43.059><c> screen</c><00:30:43.120><c> we</c><00:30:43.540><c> we</c><00:30:44.230><c> have</c><00:30:44.350><c> a</c>

00:30:44.370 --> 00:30:44.380 align:start position:0%
you see on the screen we we have a
 

00:30:44.380 --> 00:30:46.560 align:start position:0%
you see on the screen we we have a
benchmark<00:30:44.650><c> where</c><00:30:45.010><c> we</c><00:30:45.309><c> add</c><00:30:45.550><c> together</c><00:30:45.820><c> strings</c>

00:30:46.560 --> 00:30:46.570 align:start position:0%
benchmark where we add together strings
 

00:30:46.570 --> 00:30:49.380 align:start position:0%
benchmark where we add together strings
with<00:30:46.809><c> a</c><00:30:46.840><c> plus</c><00:30:47.250><c> with</c><00:30:48.250><c> string</c><00:30:48.490><c> builder</c><00:30:48.580><c> in</c><00:30:49.150><c> Java</c>

00:30:49.380 --> 00:30:49.390 align:start position:0%
with a plus with string builder in Java
 

00:30:49.390 --> 00:30:52.860 align:start position:0%
with a plus with string builder in Java
5<00:30:49.600><c> onwards</c><00:30:50.280><c> using</c><00:30:51.280><c> a</c><00:30:51.400><c> string</c><00:30:51.760><c> concatenated</c><00:30:52.330><c> by</c>

00:30:52.860 --> 00:30:52.870 align:start position:0%
5 onwards using a string concatenated by
 

00:30:52.870 --> 00:30:55.410 align:start position:0%
5 onwards using a string concatenated by
the<00:30:52.929><c> way</c><00:30:53.080><c> that</c><00:30:53.260><c> exists</c><00:30:53.679><c> and</c><00:30:54.250><c> stream</c><00:30:55.179><c> for</c>

00:30:55.410 --> 00:30:55.420 align:start position:0%
the way that exists and stream for
 

00:30:55.420 --> 00:30:57.510 align:start position:0%
the way that exists and stream for
format<00:30:55.809><c> and</c><00:30:56.050><c> what</c><00:30:56.380><c> you</c><00:30:56.530><c> see</c><00:30:56.770><c> like</c><00:30:57.010><c> across</c><00:30:57.400><c> the</c>

00:30:57.510 --> 00:30:57.520 align:start position:0%
format and what you see like across the
 

00:30:57.520 --> 00:31:01.919 align:start position:0%
format and what you see like across the
versions<00:30:58.230><c> 6</c><00:30:59.230><c> 7</c><00:30:59.800><c> &amp;</c><00:30:59.980><c> 8</c><00:31:00.220><c> more</c><00:31:00.670><c> or</c><00:31:00.730><c> less</c><00:31:00.850><c> always</c><00:31:01.630><c> a</c>

00:31:01.919 --> 00:31:01.929 align:start position:0%
versions 6 7 &amp; 8 more or less always a
 

00:31:01.929 --> 00:31:04.460 align:start position:0%
versions 6 7 &amp; 8 more or less always a
string<00:31:02.200><c> builder</c><00:31:02.320><c> was</c><00:31:02.650><c> winning</c><00:31:03.010><c> or</c><00:31:03.429><c> rather</c>

00:31:04.460 --> 00:31:04.470 align:start position:0%
string builder was winning or rather
 

00:31:04.470 --> 00:31:08.549 align:start position:0%
string builder was winning or rather
plus<00:31:05.470><c> and</c><00:31:05.710><c> stringbuilder</c><00:31:06.010><c> size</c><00:31:06.490><c> tape</c><00:31:07.559><c> the</c>

00:31:08.549 --> 00:31:08.559 align:start position:0%
plus and stringbuilder size tape the
 

00:31:08.559 --> 00:31:09.930 align:start position:0%
plus and stringbuilder size tape the
plus<00:31:08.770><c> a</c><00:31:08.800><c> string</c><00:31:09.130><c> builder</c><00:31:09.280><c> is</c><00:31:09.580><c> the</c><00:31:09.610><c> same</c>

00:31:09.930 --> 00:31:09.940 align:start position:0%
plus a string builder is the same
 

00:31:09.940 --> 00:31:11.190 align:start position:0%
plus a string builder is the same
because<00:31:10.150><c> that's</c><00:31:10.300><c> exactly</c><00:31:10.480><c> what</c><00:31:10.750><c> java</c><00:31:10.929><c> c</c><00:31:11.110><c> would</c>

00:31:11.190 --> 00:31:11.200 align:start position:0%
because that's exactly what java c would
 

00:31:11.200 --> 00:31:14.580 align:start position:0%
because that's exactly what java c would
emit<00:31:11.470><c> so</c><00:31:11.679><c> if</c><00:31:11.860><c> you'd</c><00:31:12.010><c> run</c><00:31:12.280><c> write</c><00:31:13.120><c> a</c><00:31:13.390><c> plus</c><00:31:13.780><c> 5</c><00:31:14.080><c> the</c>

00:31:14.580 --> 00:31:14.590 align:start position:0%
emit so if you'd run write a plus 5 the
 

00:31:14.590 --> 00:31:16.410 align:start position:0%
emit so if you'd run write a plus 5 the
code<00:31:15.370><c> we</c><00:31:15.520><c> generated</c><00:31:15.970><c> new</c><00:31:16.059><c> string</c><00:31:16.300><c> builder</c>

00:31:16.410 --> 00:31:16.420 align:start position:0%
code we generated new string builder
 

00:31:16.420 --> 00:31:20.130 align:start position:0%
code we generated new string builder
append<00:31:16.990><c> a</c><00:31:17.350><c> append</c><00:31:17.920><c> 5</c><00:31:18.100><c> so</c><00:31:18.940><c> that's</c><00:31:19.510><c> why</c><00:31:19.690><c> plus</c><00:31:19.960><c> is</c>

00:31:20.130 --> 00:31:20.140 align:start position:0%
append a append 5 so that's why plus is
 

00:31:20.140 --> 00:31:22.620 align:start position:0%
append a append 5 so that's why plus is
doing<00:31:20.320><c> billy</c><00:31:20.500><c> the</c><00:31:20.620><c> same</c><00:31:20.830><c> and</c><00:31:21.100><c> if</c><00:31:21.400><c> you</c><00:31:21.640><c> knew</c><00:31:21.850><c> the</c>

00:31:22.620 --> 00:31:22.630 align:start position:0%
doing billy the same and if you knew the
 

00:31:22.630 --> 00:31:24.330 align:start position:0%
doing billy the same and if you knew the
size<00:31:22.870><c> of</c><00:31:23.110><c> the</c><00:31:23.200><c> string</c><00:31:23.380><c> upfront</c><00:31:23.800><c> so</c><00:31:23.950><c> string</c><00:31:24.190><c> in</c>

00:31:24.330 --> 00:31:24.340 align:start position:0%
size of the string upfront so string in
 

00:31:24.340 --> 00:31:27.540 align:start position:0%
size of the string upfront so string in
size<00:31:24.550><c> that</c><00:31:24.880><c> was</c><00:31:25.630><c> always</c><00:31:25.990><c> faster</c><00:31:26.710><c> now</c><00:31:27.250><c> if</c><00:31:27.429><c> you</c>

00:31:27.540 --> 00:31:27.550 align:start position:0%
size that was always faster now if you
 

00:31:27.550 --> 00:31:29.970 align:start position:0%
size that was always faster now if you
switch<00:31:27.850><c> and</c><00:31:28.059><c> you</c><00:31:28.179><c> look</c><00:31:28.360><c> to</c><00:31:28.630><c> java</c><00:31:28.900><c> 11</c><00:31:29.350><c> then</c><00:31:29.950><c> the</c>

00:31:29.970 --> 00:31:29.980 align:start position:0%
switch and you look to java 11 then the
 

00:31:29.980 --> 00:31:32.820 align:start position:0%
switch and you look to java 11 then the
plus<00:31:30.490><c> actually</c><00:31:30.910><c> wins</c><00:31:31.230><c> wins</c><00:31:32.230><c> big</c><00:31:32.440><c> deal</c><00:31:32.620><c> and</c>

00:31:32.820 --> 00:31:32.830 align:start position:0%
plus actually wins wins big deal and
 

00:31:32.830 --> 00:31:35.430 align:start position:0%
plus actually wins wins big deal and
especially<00:31:33.700><c> if</c><00:31:33.910><c> you</c><00:31:34.000><c> look</c><00:31:34.150><c> when</c><00:31:34.360><c> moment</c><00:31:35.230><c> of</c>

00:31:35.430 --> 00:31:35.440 align:start position:0%
especially if you look when moment of
 

00:31:35.440 --> 00:31:37.340 align:start position:0%
especially if you look when moment of
bytes<00:31:35.650><c> allocated</c>

00:31:37.340 --> 00:31:37.350 align:start position:0%
bytes allocated
 

00:31:37.350 --> 00:31:40.700 align:start position:0%
bytes allocated
so<00:31:37.610><c> exactly</c><00:31:38.610><c> here</c><00:31:38.940><c> you</c><00:31:39.150><c> see</c><00:31:39.360><c> an</c><00:31:40.110><c> interplay</c><00:31:40.679><c> of</c>

00:31:40.700 --> 00:31:40.710 align:start position:0%
so exactly here you see an interplay of
 

00:31:40.710 --> 00:31:42.830 align:start position:0%
so exactly here you see an interplay of
two<00:31:40.860><c> features</c><00:31:41.039><c> one</c><00:31:41.520><c> is</c><00:31:41.669><c> compact</c><00:31:42.030><c> strings</c><00:31:42.330><c> you</c>

00:31:42.830 --> 00:31:42.840 align:start position:0%
two features one is compact strings you
 

00:31:42.840 --> 00:31:44.960 align:start position:0%
two features one is compact strings you
remember<00:31:43.230><c> in</c><00:31:43.320><c> Java</c><00:31:43.530><c> six</c><00:31:43.860><c> they</c><00:31:44.100><c> added</c><00:31:44.520><c> byte</c>

00:31:44.960 --> 00:31:44.970 align:start position:0%
remember in Java six they added byte
 

00:31:44.970 --> 00:31:46.940 align:start position:0%
remember in Java six they added byte
array<00:31:45.299><c> char</c><00:31:45.630><c> erasing</c><00:31:46.110><c> that</c><00:31:46.140><c> there</c><00:31:46.770><c> was</c><00:31:46.919><c> a</c>

00:31:46.940 --> 00:31:46.950 align:start position:0%
array char erasing that there was a
 

00:31:46.950 --> 00:31:49.130 align:start position:0%
array char erasing that there was a
special<00:31:47.250><c> flag</c><00:31:47.640><c> it</c><00:31:48.059><c> was</c><00:31:48.299><c> retired</c><00:31:48.660><c> somewhere</c>

00:31:49.130 --> 00:31:49.140 align:start position:0%
special flag it was retired somewhere
 

00:31:49.140 --> 00:31:51.110 align:start position:0%
special flag it was retired somewhere
between<00:31:49.289><c> seven</c><00:31:49.740><c> and</c><00:31:49.830><c> eight</c><00:31:49.950><c> because</c><00:31:50.910><c> they</c>

00:31:51.110 --> 00:31:51.120 align:start position:0%
between seven and eight because they
 

00:31:51.120 --> 00:31:53.900 align:start position:0%
between seven and eight because they
realized<00:31:51.600><c> it</c><00:31:51.720><c> was</c><00:31:51.840><c> not</c><00:31:51.990><c> such</c><00:31:52.200><c> a</c><00:31:52.230><c> good</c><00:31:52.910><c> good</c>

00:31:53.900 --> 00:31:53.910 align:start position:0%
realized it was not such a good good
 

00:31:53.910 --> 00:31:56.150 align:start position:0%
realized it was not such a good good
idea<00:31:54.150><c> but</c><00:31:54.780><c> what</c><00:31:55.049><c> they</c><00:31:55.230><c> also</c><00:31:55.470><c> realized</c><00:31:55.980><c> is</c><00:31:56.130><c> that</c>

00:31:56.150 --> 00:31:56.160 align:start position:0%
idea but what they also realized is that
 

00:31:56.160 --> 00:31:58.940 align:start position:0%
idea but what they also realized is that
if<00:31:56.549><c> you</c><00:31:56.789><c> analyze</c><00:31:57.210><c> the</c><00:31:57.330><c> heap</c><00:31:57.480><c> dance</c><00:31:57.720><c> in</c><00:31:58.679><c> general</c>

00:31:58.940 --> 00:31:58.950 align:start position:0%
if you analyze the heap dance in general
 

00:31:58.950 --> 00:32:03.380 align:start position:0%
if you analyze the heap dance in general
lots<00:31:59.940><c> of</c><00:32:00.090><c> stuff</c><00:32:00.419><c> about</c><00:32:01.400><c> 25%</c><00:32:02.400><c> of</c><00:32:02.520><c> things</c><00:32:02.850><c> in</c><00:32:03.179><c> new</c>

00:32:03.380 --> 00:32:03.390 align:start position:0%
lots of stuff about 25% of things in new
 

00:32:03.390 --> 00:32:06.529 align:start position:0%
lots of stuff about 25% of things in new
Java<00:32:03.630><c> hits</c><00:32:03.809><c> as</c><00:32:03.990><c> strings</c><00:32:04.380><c> and</c><00:32:05.330><c> majority</c><00:32:06.330><c> of</c><00:32:06.419><c> the</c>

00:32:06.529 --> 00:32:06.539 align:start position:0%
Java hits as strings and majority of the
 

00:32:06.539 --> 00:32:08.360 align:start position:0%
Java hits as strings and majority of the
strings<00:32:06.840><c> are</c><00:32:07.080><c> letting</c><00:32:07.470><c> one</c><00:32:07.620><c> encoded</c><00:32:07.860><c> so</c><00:32:08.190><c> it's</c>

00:32:08.360 --> 00:32:08.370 align:start position:0%
strings are letting one encoded so it's
 

00:32:08.370 --> 00:32:11.230 align:start position:0%
strings are letting one encoded so it's
basically<00:32:09.120><c> ASCII</c><00:32:09.630><c> plus</c><00:32:10.140><c> plus</c><00:32:10.500><c> letting</c><00:32:10.799><c> one</c>

00:32:11.230 --> 00:32:11.240 align:start position:0%
basically ASCII plus plus letting one
 

00:32:11.240 --> 00:32:14.810 align:start position:0%
basically ASCII plus plus letting one
couple<00:32:12.240><c> more</c><00:32:12.360><c> characters</c><00:32:12.750><c> but</c><00:32:13.100><c> the</c><00:32:14.100><c> the</c><00:32:14.640><c> thing</c>

00:32:14.810 --> 00:32:14.820 align:start position:0%
couple more characters but the the thing
 

00:32:14.820 --> 00:32:16.340 align:start position:0%
couple more characters but the the thing
with<00:32:14.940><c> Latin</c><00:32:15.210><c> once-through</c><00:32:15.630><c> was</c><00:32:15.960><c> letting</c><00:32:16.200><c> one</c>

00:32:16.340 --> 00:32:16.350 align:start position:0%
with Latin once-through was letting one
 

00:32:16.350 --> 00:32:18.980 align:start position:0%
with Latin once-through was letting one
character<00:32:16.710><c> said</c><00:32:16.919><c> it</c><00:32:17.100><c> fits</c><00:32:17.340><c> in</c><00:32:17.460><c> one</c><00:32:17.640><c> bite</c><00:32:17.990><c> Java</c>

00:32:18.980 --> 00:32:18.990 align:start position:0%
character said it fits in one bite Java
 

00:32:18.990 --> 00:32:21.020 align:start position:0%
character said it fits in one bite Java
used<00:32:19.350><c> to</c><00:32:19.500><c> have</c><00:32:19.679><c> strings</c><00:32:20.309><c> always</c><00:32:20.580><c> utf-16</c>

00:32:21.020 --> 00:32:21.030 align:start position:0%
used to have strings always utf-16
 

00:32:21.030 --> 00:32:22.700 align:start position:0%
used to have strings always utf-16
encoded<00:32:21.659><c> which</c><00:32:21.780><c> means</c><00:32:21.990><c> need</c><00:32:22.260><c> two</c><00:32:22.470><c> bytes</c>

00:32:22.700 --> 00:32:22.710 align:start position:0%
encoded which means need two bytes
 

00:32:22.710 --> 00:32:25.340 align:start position:0%
encoded which means need two bytes
that's<00:32:23.700><c> why</c><00:32:23.880><c> we</c><00:32:23.970><c> had</c><00:32:24.090><c> character</c><00:32:24.539><c> array</c><00:32:24.720><c> so</c>

00:32:25.340 --> 00:32:25.350 align:start position:0%
that's why we had character array so
 

00:32:25.350 --> 00:32:28.190 align:start position:0%
that's why we had character array so
with<00:32:25.980><c> Java</c><00:32:26.309><c> nine</c><00:32:26.460><c> plus</c><00:32:26.700><c> that</c><00:32:27.450><c> is</c><00:32:27.630><c> replaced</c><00:32:27.990><c> so</c>

00:32:28.190 --> 00:32:28.200 align:start position:0%
with Java nine plus that is replaced so
 

00:32:28.200 --> 00:32:30.169 align:start position:0%
with Java nine plus that is replaced so
even<00:32:28.470><c> on</c><00:32:28.590><c> the</c><00:32:28.650><c> Java</c><00:32:28.860><c> source</c><00:32:29.190><c> there</c><00:32:29.789><c> is</c><00:32:29.850><c> no</c><00:32:30.000><c> more</c>

00:32:30.169 --> 00:32:30.179 align:start position:0%
even on the Java source there is no more
 

00:32:30.179 --> 00:32:31.960 align:start position:0%
even on the Java source there is no more
character<00:32:30.510><c> array</c><00:32:30.659><c> it's</c><00:32:30.929><c> always</c><00:32:31.260><c> by</c><00:32:31.470><c> three</c>

00:32:31.960 --> 00:32:31.970 align:start position:0%
character array it's always by three
 

00:32:31.970 --> 00:32:34.640 align:start position:0%
character array it's always by three
which<00:32:32.970><c> brings</c><00:32:33.480><c> a</c><00:32:33.840><c> couple</c><00:32:34.350><c> of</c><00:32:34.409><c> interesting</c>

00:32:34.640 --> 00:32:34.650 align:start position:0%
which brings a couple of interesting
 

00:32:34.650 --> 00:32:38.120 align:start position:0%
which brings a couple of interesting
things<00:32:35.100><c> if</c><00:32:35.940><c> we</c><00:32:36.090><c> go</c><00:32:36.240><c> on</c><00:32:36.390><c> just</c><00:32:36.710><c> the</c><00:32:37.710><c> quiz</c><00:32:37.950><c> not</c>

00:32:38.120 --> 00:32:38.130 align:start position:0%
things if we go on just the quiz not
 

00:32:38.130 --> 00:32:40.399 align:start position:0%
things if we go on just the quiz not
asked<00:32:38.429><c> me</c><00:32:38.520><c> us</c><00:32:38.610><c> at</c><00:32:38.789><c> the</c><00:32:38.880><c> beginning</c><00:32:39.200><c> was</c><00:32:40.200><c> a</c><00:32:40.230><c> bit</c>

00:32:40.399 --> 00:32:40.409 align:start position:0%
asked me us at the beginning was a bit
 

00:32:40.409 --> 00:32:41.810 align:start position:0%
asked me us at the beginning was a bit
different<00:32:40.620><c> to</c><00:32:40.890><c> this</c><00:32:41.010><c> benchmark</c><00:32:41.610><c> because</c>

00:32:41.810 --> 00:32:41.820 align:start position:0%
different to this benchmark because
 

00:32:41.820 --> 00:32:43.760 align:start position:0%
different to this benchmark because
there<00:32:42.240><c> in</c><00:32:42.330><c> the</c><00:32:42.419><c> quiz</c><00:32:42.659><c> we</c><00:32:42.809><c> only</c><00:32:43.049><c> appended</c>

00:32:43.760 --> 00:32:43.770 align:start position:0%
there in the quiz we only appended
 

00:32:43.770 --> 00:32:46.880 align:start position:0%
there in the quiz we only appended
strings<00:32:44.070><c> together</c><00:32:44.450><c> and</c><00:32:45.450><c> in</c><00:32:46.440><c> this</c><00:32:46.530><c> benchmark</c>

00:32:46.880 --> 00:32:46.890 align:start position:0%
strings together and in this benchmark
 

00:32:46.890 --> 00:32:49.070 align:start position:0%
strings together and in this benchmark
we<00:32:47.250><c> mix</c><00:32:47.549><c> parameters</c><00:32:48.210><c> we</c><00:32:48.330><c> had</c><00:32:48.419><c> some</c><00:32:48.690><c> inter</c>

00:32:49.070 --> 00:32:49.080 align:start position:0%
we mix parameters we had some inter
 

00:32:49.080 --> 00:32:51.950 align:start position:0%
we mix parameters we had some inter
think<00:32:49.289><c> implants</c><00:32:50.100><c> int</c><00:32:50.460><c> long</c><00:32:50.730><c> double</c><00:32:51.360><c> I</c><00:32:51.480><c> think</c><00:32:51.690><c> I</c>

00:32:51.950 --> 00:32:51.960 align:start position:0%
think implants int long double I think I
 

00:32:51.960 --> 00:32:54.049 align:start position:0%
think implants int long double I think I
don't<00:32:52.890><c> double</c><00:32:53.159><c> but</c><00:32:53.280><c> at</c><00:32:53.400><c> least</c><00:32:53.490><c> we</c><00:32:53.669><c> have</c><00:32:53.789><c> we</c><00:32:53.940><c> had</c>

00:32:54.049 --> 00:32:54.059 align:start position:0%
don't double but at least we have we had
 

00:32:54.059 --> 00:32:55.460 align:start position:0%
don't double but at least we have we had
some<00:32:54.270><c> numbers</c><00:32:54.630><c> and</c><00:32:54.750><c> some</c><00:32:54.960><c> strings</c><00:32:55.260><c> together</c>

00:32:55.460 --> 00:32:55.470 align:start position:0%
some numbers and some strings together
 

00:32:55.470 --> 00:32:57.230 align:start position:0%
some numbers and some strings together
and<00:32:56.280><c> when</c><00:32:56.370><c> you</c><00:32:56.520><c> when</c><00:32:56.730><c> you</c><00:32:56.820><c> makes</c><00:32:57.059><c> you</c><00:32:57.150><c> the</c>

00:32:57.230 --> 00:32:57.240 align:start position:0%
and when you when you makes you the
 

00:32:57.240 --> 00:32:58.370 align:start position:0%
and when you when you makes you the
parameters<00:32:57.390><c> then</c><00:32:57.750><c> it</c><00:32:57.870><c> does</c><00:32:58.080><c> make</c><00:32:58.350><c> a</c>

00:32:58.370 --> 00:32:58.380 align:start position:0%
parameters then it does make a
 

00:32:58.380 --> 00:33:00.100 align:start position:0%
parameters then it does make a
difference<00:32:58.530><c> if</c><00:32:58.950><c> using</c><00:32:59.250><c> plus</c><00:32:59.549><c> or</c>

00:33:00.100 --> 00:33:00.110 align:start position:0%
difference if using plus or
 

00:33:00.110 --> 00:33:02.419 align:start position:0%
difference if using plus or
stringbuilder<00:33:01.110><c> sized</c><00:33:01.500><c> or</c><00:33:01.830><c> string</c><00:33:02.070><c> bold</c><00:33:02.280><c> then</c>

00:33:02.419 --> 00:33:02.429 align:start position:0%
stringbuilder sized or string bold then
 

00:33:02.429 --> 00:33:04.210 align:start position:0%
stringbuilder sized or string bold then
it<00:33:02.520><c> actually</c><00:33:02.850><c> does</c><00:33:02.940><c> make</c><00:33:03.120><c> a</c><00:33:03.150><c> difference</c><00:33:03.240><c> I</c>

00:33:04.210 --> 00:33:04.220 align:start position:0%
it actually does make a difference I
 

00:33:04.220 --> 00:33:06.350 align:start position:0%
it actually does make a difference I
just<00:33:05.220><c> want</c><00:33:05.370><c> to</c><00:33:05.460><c> mention</c><00:33:05.580><c> one</c><00:33:05.850><c> more</c><00:33:05.880><c> thing</c><00:33:06.059><c> if</c>

00:33:06.350 --> 00:33:06.360 align:start position:0%
just want to mention one more thing if
 

00:33:06.360 --> 00:33:08.539 align:start position:0%
just want to mention one more thing if
you<00:33:06.450><c> look</c><00:33:06.600><c> at</c><00:33:06.780><c> the</c><00:33:06.900><c> string</c><00:33:07.169><c> format</c><00:33:07.620><c> down</c><00:33:08.309><c> there</c>

00:33:08.539 --> 00:33:08.549 align:start position:0%
you look at the string format down there
 

00:33:08.549 --> 00:33:12.799 align:start position:0%
you look at the string format down there
it's<00:33:09.120><c> just</c><00:33:09.450><c> horrible</c><00:33:10.230><c> it's</c><00:33:10.860><c> like</c><00:33:11.429><c> 15</c><00:33:12.240><c> times</c><00:33:12.480><c> so</c>

00:33:12.799 --> 00:33:12.809 align:start position:0%
it's just horrible it's like 15 times so
 

00:33:12.809 --> 00:33:16.820 align:start position:0%
it's just horrible it's like 15 times so
15<00:33:13.710><c> X</c><00:33:14.330><c> loses</c><00:33:15.330><c> two</c><00:33:15.510><c> to</c><00:33:15.690><c> the</c><00:33:15.780><c> plus</c><00:33:15.960><c> well</c><00:33:16.500><c> all</c><00:33:16.710><c> is</c>

00:33:16.820 --> 00:33:16.830 align:start position:0%
15 X loses two to the plus well all is
 

00:33:16.830 --> 00:33:18.649 align:start position:0%
15 X loses two to the plus well all is
not<00:33:16.950><c> lost</c><00:33:17.010><c> there</c><00:33:17.700><c> is</c><00:33:17.730><c> a</c><00:33:17.820><c> Jap</c><00:33:18.090><c> three</c><00:33:18.330><c> four</c><00:33:18.539><c> eight</c>

00:33:18.649 --> 00:33:18.659 align:start position:0%
not lost there is a Jap three four eight
 

00:33:18.659 --> 00:33:20.600 align:start position:0%
not lost there is a Jap three four eight
and<00:33:18.929><c> currently</c><00:33:19.470><c> in</c><00:33:19.620><c> candidate</c><00:33:20.070><c> state</c><00:33:20.280><c> is</c><00:33:20.429><c> not</c>

00:33:20.600 --> 00:33:20.610 align:start position:0%
and currently in candidate state is not
 

00:33:20.610 --> 00:33:23.029 align:start position:0%
and currently in candidate state is not
slated<00:33:20.820><c> for</c><00:33:21.000><c> any</c><00:33:21.240><c> job</c><00:33:21.480><c> release</c><00:33:21.720><c> yet</c><00:33:21.990><c> but</c><00:33:22.740><c> what</c>

00:33:23.029 --> 00:33:23.039 align:start position:0%
slated for any job release yet but what
 

00:33:23.039 --> 00:33:24.440 align:start position:0%
slated for any job release yet but what
do<00:33:23.130><c> you</c><00:33:23.190><c> want</c><00:33:23.460><c> to</c><00:33:23.549><c> do</c><00:33:23.700><c> they</c><00:33:23.880><c> want</c><00:33:23.909><c> to</c><00:33:24.179><c> enter</c><00:33:24.360><c> in</c>

00:33:24.440 --> 00:33:24.450 align:start position:0%
do you want to do they want to enter in
 

00:33:24.450 --> 00:33:26.600 align:start position:0%
do you want to do they want to enter in
safai<00:33:24.780><c> the</c><00:33:24.840><c> string</c><00:33:25.230><c> format</c><00:33:25.650><c> so</c><00:33:26.220><c> essentially</c>

00:33:26.600 --> 00:33:26.610 align:start position:0%
safai the string format so essentially
 

00:33:26.610 --> 00:33:28.310 align:start position:0%
safai the string format so essentially
turning<00:33:27.179><c> string</c><00:33:27.480><c> format</c><00:33:27.840><c> call</c><00:33:28.049><c> into</c>

00:33:28.310 --> 00:33:28.320 align:start position:0%
turning string format call into
 

00:33:28.320 --> 00:33:29.659 align:start position:0%
turning string format call into
something<00:33:28.710><c> like</c><00:33:28.830><c> string</c><00:33:29.159><c> concatenation</c>

00:33:29.659 --> 00:33:29.669 align:start position:0%
something like string concatenation
 

00:33:29.669 --> 00:33:31.520 align:start position:0%
something like string concatenation
because<00:33:30.419><c> the</c><00:33:30.539><c> problem</c><00:33:30.809><c> string</c><00:33:31.049><c> format</c><00:33:31.409><c> is</c>

00:33:31.520 --> 00:33:31.530 align:start position:0%
because the problem string format is
 

00:33:31.530 --> 00:33:32.600 align:start position:0%
because the problem string format is
that<00:33:31.650><c> first</c><00:33:31.860><c> to</c><00:33:31.980><c> get</c><00:33:32.100><c> the</c><00:33:32.220><c> format</c><00:33:32.490><c> string</c>

00:33:32.600 --> 00:33:32.610 align:start position:0%
that first to get the format string
 

00:33:32.610 --> 00:33:34.970 align:start position:0%
that first to get the format string
which<00:33:33.090><c> you</c><00:33:33.270><c> need</c><00:33:33.360><c> to</c><00:33:33.419><c> parse</c><00:33:33.750><c> to</c><00:33:34.500><c> see</c><00:33:34.710><c> where</c><00:33:34.890><c> the</c>

00:33:34.970 --> 00:33:34.980 align:start position:0%
which you need to parse to see where the
 

00:33:34.980 --> 00:33:37.010 align:start position:0%
which you need to parse to see where the
armies<00:33:35.340><c> are</c><00:33:35.520><c> the</c><00:33:36.150><c> arguments</c><00:33:36.480><c> that</c><00:33:36.690><c> you</c><00:33:36.780><c> pass</c>

00:33:37.010 --> 00:33:37.020 align:start position:0%
armies are the arguments that you pass
 

00:33:37.020 --> 00:33:39.110 align:start position:0%
armies are the arguments that you pass
to<00:33:37.230><c> string</c><00:33:37.470><c> format</c><00:33:37.890><c> need</c><00:33:38.460><c> to</c><00:33:38.580><c> be</c><00:33:38.700><c> boxed</c><00:33:39.000><c> into</c>

00:33:39.110 --> 00:33:39.120 align:start position:0%
to string format need to be boxed into
 

00:33:39.120 --> 00:33:41.270 align:start position:0%
to string format need to be boxed into
objects<00:33:39.570><c> the</c><00:33:40.169><c> array</c><00:33:40.500><c> needs</c><00:33:40.890><c> to</c><00:33:41.070><c> be</c><00:33:41.159><c> allocated</c>

00:33:41.270 --> 00:33:41.280 align:start position:0%
objects the array needs to be allocated
 

00:33:41.280 --> 00:33:43.940 align:start position:0%
objects the array needs to be allocated
and<00:33:41.820><c> there's</c><00:33:42.030><c> a</c><00:33:42.059><c> lot</c><00:33:42.299><c> of</c><00:33:42.450><c> overhead</c><00:33:42.690><c> and</c><00:33:42.960><c> for</c>

00:33:43.940 --> 00:33:43.950 align:start position:0%
and there's a lot of overhead and for
 

00:33:43.950 --> 00:33:45.740 align:start position:0%
and there's a lot of overhead and for
example<00:33:44.250><c> stinking</c><00:33:44.640><c> card</c><00:33:44.850><c> now</c><00:33:45.419><c> can</c><00:33:45.630><c> take</c>

00:33:45.740 --> 00:33:45.750 align:start position:0%
example stinking card now can take
 

00:33:45.750 --> 00:33:47.090 align:start position:0%
example stinking card now can take
advantage<00:33:46.169><c> and</c><00:33:46.320><c> do</c><00:33:46.409><c> stuff</c><00:33:46.650><c> without</c>

00:33:47.090 --> 00:33:47.100 align:start position:0%
advantage and do stuff without
 

00:33:47.100 --> 00:33:48.560 align:start position:0%
advantage and do stuff without
allocating<00:33:47.790><c> objects</c>

00:33:48.560 --> 00:33:48.570 align:start position:0%
allocating objects
 

00:33:48.570 --> 00:33:52.669 align:start position:0%
allocating objects
can<00:33:49.469><c> you</c><00:33:49.529><c> talk</c><00:33:49.679><c> about</c><00:33:49.739><c> it</c><00:33:49.949><c> late</c><00:33:50.239><c> so</c><00:33:51.239><c> a</c><00:33:51.679><c> string</c>

00:33:52.669 --> 00:33:52.679 align:start position:0%
can you talk about it late so a string
 

00:33:52.679 --> 00:33:54.769 align:start position:0%
can you talk about it late so a string
concatenation<00:33:53.190><c> starting</c><00:33:53.999><c> with</c><00:33:54.149><c> JDK</c><00:33:54.570><c> nine</c>

00:33:54.769 --> 00:33:54.779 align:start position:0%
concatenation starting with JDK nine
 

00:33:54.779 --> 00:33:58.279 align:start position:0%
concatenation starting with JDK nine
Jeff<00:33:55.229><c> 280</c><00:33:55.849><c> as</c><00:33:56.849><c> Heinz</c><00:33:57.089><c> mentioned</c><00:33:57.599><c> the</c><00:33:58.019><c> problem</c>

00:33:58.279 --> 00:33:58.289 align:start position:0%
Jeff 280 as Heinz mentioned the problem
 

00:33:58.289 --> 00:34:00.199 align:start position:0%
Jeff 280 as Heinz mentioned the problem
string<00:33:58.440><c> concatenation</c><00:33:58.919><c> it</c><00:33:59.219><c> was</c><00:33:59.489><c> a</c><00:33:59.519><c> Java</c><00:33:59.909><c> C</c>

00:34:00.199 --> 00:34:00.209 align:start position:0%
string concatenation it was a Java C
 

00:34:00.209 --> 00:34:02.989 align:start position:0%
string concatenation it was a Java C
feature<00:34:00.989><c> so</c><00:34:01.649><c> every</c><00:34:02.009><c> time</c><00:34:02.159><c> you</c><00:34:02.399><c> compiled</c><00:34:02.789><c> code</c>

00:34:02.989 --> 00:34:02.999 align:start position:0%
feature so every time you compiled code
 

00:34:02.999 --> 00:34:05.539 align:start position:0%
feature so every time you compiled code
Java<00:34:03.269><c> C</c><00:34:03.449><c> will</c><00:34:03.599><c> emit</c><00:34:03.809><c> bytecode</c><00:34:04.289><c> and</c><00:34:04.529><c> the</c><00:34:05.009><c> Jade</c>

00:34:05.539 --> 00:34:05.549 align:start position:0%
Java C will emit bytecode and the Jade
 

00:34:05.549 --> 00:34:07.099 align:start position:0%
Java C will emit bytecode and the Jade
would<00:34:05.759><c> have</c><00:34:05.969><c> to</c><00:34:06.179><c> live</c><00:34:06.329><c> with</c><00:34:06.509><c> that</c><00:34:06.539><c> bytecode</c>

00:34:07.099 --> 00:34:07.109 align:start position:0%
would have to live with that bytecode
 

00:34:07.109 --> 00:34:08.720 align:start position:0%
would have to live with that bytecode
for<00:34:07.139><c> error</c><00:34:07.469><c> so</c><00:34:07.919><c> they</c><00:34:08.099><c> try</c><00:34:08.369><c> to</c><00:34:08.429><c> optimize</c>

00:34:08.720 --> 00:34:08.730 align:start position:0%
for error so they try to optimize
 

00:34:08.730 --> 00:34:10.579 align:start position:0%
for error so they try to optimize
certain<00:34:09.240><c> things</c><00:34:09.450><c> they</c><00:34:09.659><c> did</c><00:34:10.139><c> a</c><00:34:10.169><c> lot</c><00:34:10.319><c> of</c><00:34:10.349><c> stuff</c>

00:34:10.579 --> 00:34:10.589 align:start position:0%
certain things they did a lot of stuff
 

00:34:10.589 --> 00:34:12.139 align:start position:0%
certain things they did a lot of stuff
then<00:34:11.009><c> they</c><00:34:11.099><c> realize</c><00:34:11.429><c> there</c><00:34:11.639><c> is</c><00:34:11.669><c> too</c><00:34:12.000><c> much</c>

00:34:12.139 --> 00:34:12.149 align:start position:0%
then they realize there is too much
 

00:34:12.149 --> 00:34:15.019 align:start position:0%
then they realize there is too much
effort<00:34:12.509><c> to</c><00:34:13.200><c> support</c><00:34:13.500><c> JIT</c><00:34:13.829><c> to</c><00:34:14.339><c> have</c><00:34:14.519><c> optimized</c>

00:34:15.019 --> 00:34:15.029 align:start position:0%
effort to support JIT to have optimized
 

00:34:15.029 --> 00:34:17.629 align:start position:0%
effort to support JIT to have optimized
strings<00:34:15.750><c> so</c><00:34:16.259><c> what</c><00:34:16.679><c> if</c><00:34:16.889><c> we</c><00:34:17.129><c> do</c><00:34:17.250><c> something</c>

00:34:17.629 --> 00:34:17.639 align:start position:0%
strings so what if we do something
 

00:34:17.639 --> 00:34:18.019 align:start position:0%
strings so what if we do something
different

00:34:18.019 --> 00:34:18.029 align:start position:0%
different
 

00:34:18.029 --> 00:34:19.879 align:start position:0%
different
what<00:34:18.210><c> if</c><00:34:18.329><c> you</c><00:34:18.450><c> compile</c><00:34:18.839><c> strings</c><00:34:19.259><c> to</c><00:34:19.500><c> a</c><00:34:19.529><c> point</c>

00:34:19.879 --> 00:34:19.889 align:start position:0%
what if you compile strings to a point
 

00:34:19.889 --> 00:34:24.589 align:start position:0%
what if you compile strings to a point
which<00:34:20.789><c> we</c><00:34:21.509><c> made</c><00:34:21.690><c> different</c><00:34:21.839><c> bytecode</c><00:34:22.500><c> and</c><00:34:23.599><c> let</c>

00:34:24.589 --> 00:34:24.599 align:start position:0%
which we made different bytecode and let
 

00:34:24.599 --> 00:34:27.440 align:start position:0%
which we made different bytecode and let
the<00:34:24.990><c> VM</c><00:34:25.289><c> optimize</c><00:34:25.829><c> it</c><00:34:25.980><c> so</c><00:34:26.460><c> starting</c><00:34:26.909><c> with</c><00:34:27.000><c> JDK</c>

00:34:27.440 --> 00:34:27.450 align:start position:0%
the VM optimize it so starting with JDK
 

00:34:27.450 --> 00:34:30.289 align:start position:0%
the VM optimize it so starting with JDK
nine<00:34:27.859><c> actually</c><00:34:28.859><c> if</c><00:34:28.980><c> you</c><00:34:29.129><c> do</c><00:34:29.879><c> have</c><00:34:30.059><c> a</c><00:34:30.089><c> site</c>

00:34:30.289 --> 00:34:30.299 align:start position:0%
nine actually if you do have a site
 

00:34:30.299 --> 00:34:34.659 align:start position:0%
nine actually if you do have a site
about<00:34:30.480><c> Java</c><00:34:31.200><c> P</c><00:34:31.440><c> output</c><00:34:31.829><c> and</c><00:34:32.009><c> how</c><00:34:32.099><c> this</c><00:34:32.279><c> compile</c>

00:34:34.659 --> 00:34:34.669 align:start position:0%
 
 

00:34:34.669 --> 00:34:38.419 align:start position:0%
 
okay<00:34:35.669><c> anyways</c><00:34:36.509><c> so</c><00:34:37.289><c> what</c><00:34:37.500><c> what</c><00:34:37.859><c> happens</c><00:34:38.250><c> is</c><00:34:38.339><c> the</c>

00:34:38.419 --> 00:34:38.429 align:start position:0%
okay anyways so what what happens is the
 

00:34:38.429 --> 00:34:40.430 align:start position:0%
okay anyways so what what happens is the
bytecode<00:34:38.609><c> levels</c><00:34:39.059><c> so</c><00:34:39.179><c> if</c><00:34:39.419><c> you</c><00:34:39.659><c> compile</c><00:34:40.169><c> so</c>

00:34:40.430 --> 00:34:40.440 align:start position:0%
bytecode levels so if you compile so
 

00:34:40.440 --> 00:34:42.019 align:start position:0%
bytecode levels so if you compile so
first<00:34:40.740><c> of</c><00:34:40.859><c> all</c><00:34:40.980><c> you</c><00:34:41.279><c> would</c><00:34:41.429><c> have</c><00:34:41.549><c> to</c><00:34:41.700><c> recompile</c>

00:34:42.019 --> 00:34:42.029 align:start position:0%
first of all you would have to recompile
 

00:34:42.029 --> 00:34:44.269 align:start position:0%
first of all you would have to recompile
the<00:34:42.179><c> code</c><00:34:42.319><c> you</c><00:34:43.319><c> would</c><00:34:43.440><c> not</c><00:34:43.649><c> be</c><00:34:43.829><c> able</c><00:34:43.919><c> to</c><00:34:44.069><c> take</c>

00:34:44.269 --> 00:34:44.279 align:start position:0%
the code you would not be able to take
 

00:34:44.279 --> 00:34:45.889 align:start position:0%
the code you would not be able to take
advantage<00:34:44.700><c> of</c><00:34:44.819><c> new</c><00:34:44.879><c> string</c><00:34:45.359><c> concatenation</c>

00:34:45.889 --> 00:34:45.899 align:start position:0%
advantage of new string concatenation
 

00:34:45.899 --> 00:34:48.799 align:start position:0%
advantage of new string concatenation
unless<00:34:46.470><c> you</c><00:34:46.649><c> compile</c><00:34:47.009><c> with</c><00:34:47.819><c> let's</c><00:34:48.569><c> say</c><00:34:48.659><c> with</c>

00:34:48.799 --> 00:34:48.809 align:start position:0%
unless you compile with let's say with
 

00:34:48.809 --> 00:34:51.289 align:start position:0%
unless you compile with let's say with
Java<00:34:49.019><c> 11</c><00:34:49.379><c> so</c><00:34:50.159><c> what</c><00:34:50.309><c> would</c><00:34:50.429><c> happen</c><00:34:50.639><c> is</c><00:34:51.029><c> that</c><00:34:51.059><c> you</c>

00:34:51.289 --> 00:34:51.299 align:start position:0%
Java 11 so what would happen is that you
 

00:34:51.299 --> 00:34:52.999 align:start position:0%
Java 11 so what would happen is that you
would<00:34:51.659><c> have</c><00:34:51.690><c> invoked</c><00:34:52.259><c> dynamic</c><00:34:52.740><c> instruction</c>

00:34:52.999 --> 00:34:53.009 align:start position:0%
would have invoked dynamic instruction
 

00:34:53.009 --> 00:34:55.940 align:start position:0%
would have invoked dynamic instruction
emitted<00:34:53.579><c> in</c><00:34:53.759><c> the</c><00:34:53.849><c> code</c><00:34:54.029><c> and</c><00:34:54.649><c> invoke</c><00:34:55.649><c> invoke</c>

00:34:55.940 --> 00:34:55.950 align:start position:0%
emitted in the code and invoke invoke
 

00:34:55.950 --> 00:34:58.940 align:start position:0%
emitted in the code and invoke invoke
dynamic<00:34:56.220><c> for</c><00:34:56.669><c> those</c><00:34:56.900><c> of</c><00:34:57.900><c> you</c><00:34:58.079><c> who</c><00:34:58.289><c> doesn't</c>

00:34:58.940 --> 00:34:58.950 align:start position:0%
dynamic for those of you who doesn't
 

00:34:58.950 --> 00:35:01.190 align:start position:0%
dynamic for those of you who doesn't
know<00:34:59.130><c> is</c><00:34:59.369><c> basically</c><00:35:00.089><c> like</c><00:35:00.359><c> it's</c><00:35:00.750><c> a</c><00:35:00.839><c> two-stage</c>

00:35:01.190 --> 00:35:01.200 align:start position:0%
know is basically like it's a two-stage
 

00:35:01.200 --> 00:35:03.740 align:start position:0%
know is basically like it's a two-stage
process<00:35:01.369><c> so</c><00:35:02.369><c> when</c><00:35:02.789><c> it's</c><00:35:02.940><c> getting</c><00:35:03.180><c> cold</c><00:35:03.420><c> it</c>

00:35:03.740 --> 00:35:03.750 align:start position:0%
process so when it's getting cold it
 

00:35:03.750 --> 00:35:05.269 align:start position:0%
process so when it's getting cold it
first<00:35:04.079><c> needs</c><00:35:04.200><c> to</c><00:35:04.380><c> call</c><00:35:04.529><c> the</c><00:35:04.619><c> bootstrap</c><00:35:04.980><c> method</c>

00:35:05.269 --> 00:35:05.279 align:start position:0%
first needs to call the bootstrap method
 

00:35:05.279 --> 00:35:07.039 align:start position:0%
first needs to call the bootstrap method
to<00:35:05.369><c> know</c><00:35:05.490><c> what</c><00:35:05.670><c> do</c><00:35:05.789><c> I</c><00:35:05.819><c> need</c><00:35:05.940><c> to</c><00:35:06.089><c> do</c><00:35:06.240><c> the</c><00:35:06.720><c> booster</c>

00:35:07.039 --> 00:35:07.049 align:start position:0%
to know what do I need to do the booster
 

00:35:07.049 --> 00:35:08.630 align:start position:0%
to know what do I need to do the booster
pettite<00:35:07.319><c> returns</c><00:35:07.680><c> at</c><00:35:07.829><c> the</c><00:35:07.920><c> call</c><00:35:08.099><c> side</c><00:35:08.369><c> and</c>

00:35:08.630 --> 00:35:08.640 align:start position:0%
pettite returns at the call side and
 

00:35:08.640 --> 00:35:10.339 align:start position:0%
pettite returns at the call side and
from<00:35:09.029><c> now</c><00:35:09.180><c> on</c><00:35:09.210><c> it</c><00:35:09.569><c> will</c><00:35:09.720><c> always</c><00:35:09.900><c> call</c><00:35:10.200><c> this</c>

00:35:10.339 --> 00:35:10.349 align:start position:0%
from now on it will always call this
 

00:35:10.349 --> 00:35:12.200 align:start position:0%
from now on it will always call this
call<00:35:10.529><c> side</c><00:35:10.740><c> so</c><00:35:11.430><c> they</c><00:35:11.640><c> basically</c><00:35:11.789><c> use</c><00:35:12.180><c> a</c>

00:35:12.200 --> 00:35:12.210 align:start position:0%
call side so they basically use a
 

00:35:12.210 --> 00:35:13.640 align:start position:0%
call side so they basically use a
feature<00:35:12.450><c> that</c><00:35:12.660><c> was</c><00:35:12.779><c> added</c><00:35:12.839><c> originally</c><00:35:13.529><c> for</c>

00:35:13.640 --> 00:35:13.650 align:start position:0%
feature that was added originally for
 

00:35:13.650 --> 00:35:15.920 align:start position:0%
feature that was added originally for
dynamic<00:35:13.980><c> languages</c><00:35:14.279><c> that</c><00:35:15.089><c> was</c><00:35:15.299><c> later</c><00:35:15.509><c> on</c><00:35:15.720><c> used</c>

00:35:15.920 --> 00:35:15.930 align:start position:0%
dynamic languages that was later on used
 

00:35:15.930 --> 00:35:18.559 align:start position:0%
dynamic languages that was later on used
from<00:35:16.140><c> Java</c><00:35:16.440><c> 8</c><00:35:16.589><c> for</c><00:35:16.920><c> lambdas</c><00:35:17.460><c> and</c><00:35:17.640><c> now</c><00:35:18.390><c> in</c>

00:35:18.559 --> 00:35:18.569 align:start position:0%
from Java 8 for lambdas and now in
 

00:35:18.569 --> 00:35:20.269 align:start position:0%
from Java 8 for lambdas and now in
general<00:35:18.750><c> 9</c><00:35:19.019><c> we</c><00:35:19.230><c> use</c><00:35:19.380><c> it</c><00:35:19.529><c> also</c><00:35:19.680><c> for</c><00:35:19.829><c> student</c>

00:35:20.269 --> 00:35:20.279 align:start position:0%
general 9 we use it also for student
 

00:35:20.279 --> 00:35:21.710 align:start position:0%
general 9 we use it also for student
catenation<00:35:20.579><c> so</c><00:35:20.849><c> this</c><00:35:21.000><c> thing</c><00:35:21.180><c> is</c><00:35:21.299><c> getting</c><00:35:21.450><c> more</c>

00:35:21.710 --> 00:35:21.720 align:start position:0%
catenation so this thing is getting more
 

00:35:21.720 --> 00:35:23.990 align:start position:0%
catenation so this thing is getting more
and<00:35:21.779><c> more</c><00:35:21.930><c> used</c><00:35:22.829><c> throughout</c><00:35:23.069><c> vm</c><00:35:23.460><c> and</c><00:35:23.670><c> she</c>

00:35:23.990 --> 00:35:24.000 align:start position:0%
and more used throughout vm and she
 

00:35:24.000 --> 00:35:26.089 align:start position:0%
and more used throughout vm and she
actually<00:35:24.210><c> brings</c><00:35:24.630><c> two</c><00:35:24.750><c> superpowers</c><00:35:25.019><c> if</c><00:35:25.890><c> you</c>

00:35:26.089 --> 00:35:26.099 align:start position:0%
actually brings two superpowers if you
 

00:35:26.099 --> 00:35:28.999 align:start position:0%
actually brings two superpowers if you
look<00:35:26.279><c> inside</c><00:35:26.549><c> of</c><00:35:27.119><c> the</c><00:35:27.569><c> actual</c><00:35:28.500><c> bootstrap</c>

00:35:28.999 --> 00:35:29.009 align:start position:0%
look inside of the actual bootstrap
 

00:35:29.009 --> 00:35:30.230 align:start position:0%
look inside of the actual bootstrap
implementation<00:35:29.609><c> there</c><00:35:29.700><c> is</c><00:35:29.789><c> a</c><00:35:29.819><c> string</c><00:35:30.059><c> called</c>

00:35:30.230 --> 00:35:30.240 align:start position:0%
implementation there is a string called
 

00:35:30.240 --> 00:35:34.490 align:start position:0%
implementation there is a string called
card<00:35:30.450><c> factory</c><00:35:30.660><c> in</c><00:35:31.339><c> in</c><00:35:32.339><c> jdk</c><00:35:32.849><c> angel</c><00:35:33.299><c> on</c><00:35:33.480><c> there</c><00:35:34.349><c> is</c>

00:35:34.490 --> 00:35:34.500 align:start position:0%
card factory in in jdk angel on there is
 

00:35:34.500 --> 00:35:35.960 align:start position:0%
card factory in in jdk angel on there is
actually<00:35:34.890><c> six</c><00:35:35.099><c> different</c><00:35:35.190><c> strategies</c><00:35:35.849><c> to</c>

00:35:35.960 --> 00:35:35.970 align:start position:0%
actually six different strategies to
 

00:35:35.970 --> 00:35:38.930 align:start position:0%
actually six different strategies to
concatenate<00:35:36.210><c> strings</c><00:35:36.750><c> so</c><00:35:37.559><c> that</c><00:35:38.369><c> roughly</c><00:35:38.759><c> two</c>

00:35:38.930 --> 00:35:38.940 align:start position:0%
concatenate strings so that roughly two
 

00:35:38.940 --> 00:35:41.599 align:start position:0%
concatenate strings so that roughly two
groups<00:35:39.180><c> one</c><00:35:39.869><c> is</c><00:35:39.900><c> the</c><00:35:40.259><c> bytecode</c><00:35:40.799><c> generated</c>

00:35:41.599 --> 00:35:41.609 align:start position:0%
groups one is the bytecode generated
 

00:35:41.609 --> 00:35:43.999 align:start position:0%
groups one is the bytecode generated
based<00:35:41.819><c> on</c><00:35:42.119><c> the</c><00:35:42.200><c> string</c><00:35:43.200><c> builder</c><00:35:43.319><c> so</c><00:35:43.859><c> it's</c>

00:35:43.999 --> 00:35:44.009 align:start position:0%
based on the string builder so it's
 

00:35:44.009 --> 00:35:46.519 align:start position:0%
based on the string builder so it's
basically<00:35:44.539><c> byte</c><00:35:45.539><c> code</c><00:35:45.839><c> to</c><00:35:45.990><c> generate</c><00:35:46.109><c> string</c>

00:35:46.519 --> 00:35:46.529 align:start position:0%
basically byte code to generate string
 

00:35:46.529 --> 00:35:48.710 align:start position:0%
basically byte code to generate string
build<00:35:46.710><c> like</c><00:35:46.950><c> it</c><00:35:47.099><c> was</c><00:35:47.250><c> before</c><00:35:47.609><c> or</c><00:35:47.849><c> it</c><00:35:48.329><c> uses</c><00:35:48.630><c> the</c>

00:35:48.710 --> 00:35:48.720 align:start position:0%
build like it was before or it uses the
 

00:35:48.720 --> 00:35:50.240 align:start position:0%
build like it was before or it uses the
method<00:35:48.869><c> handles</c><00:35:49.319><c> all</c><00:35:49.470><c> the</c><00:35:49.589><c> way</c><00:35:49.680><c> down</c><00:35:49.890><c> and</c>

00:35:50.240 --> 00:35:50.250 align:start position:0%
method handles all the way down and
 

00:35:50.250 --> 00:35:52.099 align:start position:0%
method handles all the way down and
there<00:35:51.029><c> are</c><00:35:51.089><c> different</c><00:35:51.359><c> variations</c><00:35:51.480><c> where</c>

00:35:52.099 --> 00:35:52.109 align:start position:0%
there are different variations where
 

00:35:52.109 --> 00:35:54.259 align:start position:0%
there are different variations where
they<00:35:52.529><c> all</c><00:35:52.710><c> use</c><00:35:52.920><c> string</c><00:35:53.190><c> builder</c><00:35:53.339><c> but</c><00:35:54.119><c> the</c>

00:35:54.259 --> 00:35:54.269 align:start position:0%
they all use string builder but the
 

00:35:54.269 --> 00:35:56.120 align:start position:0%
they all use string builder but the
default<00:35:54.420><c> one</c><00:35:54.809><c> is</c><00:35:54.839><c> different</c><00:35:55.319><c> so</c><00:35:55.799><c> the</c><00:35:55.980><c> default</c>

00:35:56.120 --> 00:35:56.130 align:start position:0%
default one is different so the default
 

00:35:56.130 --> 00:35:58.999 align:start position:0%
default one is different so the default
one<00:35:56.519><c> is</c><00:35:56.960><c> not</c><00:35:57.960><c> allocated</c><00:35:58.500><c> string</c><00:35:58.710><c> builder</c><00:35:58.799><c> at</c>

00:35:58.999 --> 00:35:59.009 align:start position:0%
one is not allocated string builder at
 

00:35:59.009 --> 00:35:59.690 align:start position:0%
one is not allocated string builder at
all

00:35:59.690 --> 00:35:59.700 align:start position:0%
all
 

00:35:59.700 --> 00:36:01.160 align:start position:0%
all
so<00:35:59.820><c> what</c><00:35:59.970><c> they</c><00:36:00.089><c> do</c><00:36:00.150><c> instead</c><00:36:00.480><c> they</c><00:36:00.810><c> say</c><00:36:00.990><c> okay</c>

00:36:01.160 --> 00:36:01.170 align:start position:0%
so what they do instead they say okay
 

00:36:01.170 --> 00:36:02.630 align:start position:0%
so what they do instead they say okay
you're<00:36:01.320><c> concatenated</c><00:36:01.920><c> something</c><00:36:02.280><c> what</c><00:36:02.460><c> at</c>

00:36:02.630 --> 00:36:02.640 align:start position:0%
you're concatenated something what at
 

00:36:02.640 --> 00:36:04.670 align:start position:0%
you're concatenated something what at
the<00:36:02.760><c> end</c><00:36:02.940><c> you</c><00:36:03.359><c> gonna</c><00:36:03.570><c> create</c><00:36:03.750><c> a</c><00:36:03.810><c> string</c><00:36:04.079><c> string</c>

00:36:04.670 --> 00:36:04.680 align:start position:0%
the end you gonna create a string string
 

00:36:04.680 --> 00:36:06.710 align:start position:0%
the end you gonna create a string string
that<00:36:04.770><c> I</c><00:36:04.829><c> have</c><00:36:04.980><c> a</c><00:36:05.010><c> byte</c><00:36:05.250><c> array</c><00:36:05.520><c> so</c><00:36:06.119><c> why</c><00:36:06.329><c> not</c><00:36:06.510><c> we</c>

00:36:06.710 --> 00:36:06.720 align:start position:0%
that I have a byte array so why not we
 

00:36:06.720 --> 00:36:08.270 align:start position:0%
that I have a byte array so why not we
just<00:36:06.900><c> allocate</c><00:36:07.230><c> the</c><00:36:07.349><c> byte</c><00:36:07.500><c> array</c><00:36:07.770><c> and</c><00:36:07.980><c> write</c>

00:36:08.270 --> 00:36:08.280 align:start position:0%
just allocate the byte array and write
 

00:36:08.280 --> 00:36:10.490 align:start position:0%
just allocate the byte array and write
bytes<00:36:08.550><c> into</c><00:36:08.820><c> the</c><00:36:09.000><c> back</c><00:36:09.150><c> right</c><00:36:09.390><c> array</c><00:36:09.630><c> and</c><00:36:09.839><c> when</c>

00:36:10.490 --> 00:36:10.500 align:start position:0%
bytes into the back right array and when
 

00:36:10.500 --> 00:36:12.079 align:start position:0%
bytes into the back right array and when
they<00:36:10.680><c> create</c><00:36:10.950><c> a</c><00:36:10.980><c> string</c><00:36:11.339><c> they</c><00:36:11.579><c> will</c><00:36:11.700><c> share</c><00:36:11.940><c> the</c>

00:36:12.079 --> 00:36:12.089 align:start position:0%
they create a string they will share the
 

00:36:12.089 --> 00:36:13.640 align:start position:0%
they create a string they will share the
byte<00:36:12.270><c> array</c><00:36:12.510><c> with</c><00:36:12.690><c> a</c><00:36:12.720><c> string</c><00:36:13.050><c> so</c><00:36:13.470><c> there</c><00:36:13.589><c> will</c>

00:36:13.640 --> 00:36:13.650 align:start position:0%
byte array with a string so there will
 

00:36:13.650 --> 00:36:15.829 align:start position:0%
byte array with a string so there will
be<00:36:13.710><c> no</c><00:36:13.980><c> extra</c><00:36:14.250><c> purpose</c><00:36:14.609><c> whatever</c><00:36:14.940><c> so</c><00:36:15.450><c> the</c>

00:36:15.829 --> 00:36:15.839 align:start position:0%
be no extra purpose whatever so the
 

00:36:15.839 --> 00:36:17.870 align:start position:0%
be no extra purpose whatever so the
numbers<00:36:16.170><c> you</c><00:36:16.320><c> saw</c><00:36:16.530><c> there</c><00:36:16.710><c> like</c><00:36:16.890><c> 150</c><00:36:17.550><c> bytes</c><00:36:17.730><c> on</c>

00:36:17.870 --> 00:36:17.880 align:start position:0%
numbers you saw there like 150 bytes on
 

00:36:17.880 --> 00:36:19.670 align:start position:0%
numbers you saw there like 150 bytes on
whatever<00:36:18.180><c> that's</c><00:36:18.450><c> exactly</c><00:36:18.990><c> number</c><00:36:19.320><c> of</c><00:36:19.410><c> bytes</c>

00:36:19.670 --> 00:36:19.680 align:start position:0%
whatever that's exactly number of bytes
 

00:36:19.680 --> 00:36:21.440 align:start position:0%
whatever that's exactly number of bytes
that<00:36:19.800><c> pankot</c><00:36:20.280><c> needs</c><00:36:20.460><c> to</c><00:36:20.579><c> do</c><00:36:20.700><c> this</c><00:36:21.210><c> is</c><00:36:21.300><c> not</c><00:36:21.420><c> a</c>

00:36:21.440 --> 00:36:21.450 align:start position:0%
that pankot needs to do this is not a
 

00:36:21.450 --> 00:36:23.930 align:start position:0%
that pankot needs to do this is not a
single<00:36:21.780><c> byte</c><00:36:21.960><c> wasted</c><00:36:22.380><c> when</c><00:36:23.160><c> I</c><00:36:23.220><c> find</c><00:36:23.430><c> it</c><00:36:23.490><c> pretty</c>

00:36:23.930 --> 00:36:23.940 align:start position:0%
single byte wasted when I find it pretty
 

00:36:23.940 --> 00:36:27.589 align:start position:0%
single byte wasted when I find it pretty
awesome<00:36:24.390><c> this</c><00:36:24.950><c> and</c><00:36:25.950><c> we</c><00:36:26.670><c> have</c><00:36:26.820><c> now</c><00:36:27.000><c> and</c>

00:36:27.589 --> 00:36:27.599 align:start position:0%
awesome this and we have now and
 

00:36:27.599 --> 00:36:29.810 align:start position:0%
awesome this and we have now and
benchmark<00:36:28.530><c> two</c><00:36:28.770><c> to</c><00:36:29.160><c> show</c><00:36:29.339><c> the</c><00:36:29.490><c> difference</c>

00:36:29.810 --> 00:36:29.820 align:start position:0%
benchmark two to show the difference
 

00:36:29.820 --> 00:36:31.790 align:start position:0%
benchmark two to show the difference
between<00:36:30.000><c> the</c><00:36:30.329><c> things</c><00:36:31.020><c> you</c><00:36:31.200><c> see</c><00:36:31.380><c> the</c><00:36:31.500><c> default</c>

00:36:31.790 --> 00:36:31.800 align:start position:0%
between the things you see the default
 

00:36:31.800 --> 00:36:34.849 align:start position:0%
between the things you see the default
one<00:36:32.040><c> is</c><00:36:32.220><c> the</c><00:36:32.339><c> fastest</c><00:36:33.290><c> and</c><00:36:34.290><c> then</c><00:36:34.560><c> we</c><00:36:34.710><c> have</c>

00:36:34.849 --> 00:36:34.859 align:start position:0%
one is the fastest and then we have
 

00:36:34.859 --> 00:36:40.190 align:start position:0%
one is the fastest and then we have
different<00:36:35.250><c> variations</c><00:36:35.760><c> of</c><00:36:37.460><c> wins</c><00:36:38.460><c> but</c><00:36:38.849><c> I</c><00:36:39.200><c> don't</c>

00:36:40.190 --> 00:36:40.200 align:start position:0%
different variations of wins but I don't
 

00:36:40.200 --> 00:36:42.040 align:start position:0%
different variations of wins but I don't
know<00:36:40.260><c> who</c><00:36:40.650><c> would</c><00:36:40.859><c> ever</c><00:36:41.130><c> change</c><00:36:41.579><c> the</c>

00:36:42.040 --> 00:36:42.050 align:start position:0%
know who would ever change the
 

00:36:42.050 --> 00:36:44.329 align:start position:0%
know who would ever change the
concatenation<00:36:43.050><c> structure</c><00:36:43.560><c> it's</c><00:36:43.710><c> probably</c>

00:36:44.329 --> 00:36:44.339 align:start position:0%
concatenation structure it's probably
 

00:36:44.339 --> 00:36:46.940 align:start position:0%
concatenation structure it's probably
just<00:36:44.550><c> like</c><00:36:44.700><c> a</c><00:36:44.880><c> kill</c><00:36:45.119><c> switch</c><00:36:45.210><c> so</c><00:36:45.540><c> you</c><00:36:45.630><c> can</c><00:36:45.740><c> if</c><00:36:46.740><c> it</c>

00:36:46.940 --> 00:36:46.950 align:start position:0%
just like a kill switch so you can if it
 

00:36:46.950 --> 00:36:49.220 align:start position:0%
just like a kill switch so you can if it
has<00:36:47.160><c> a</c><00:36:47.190><c> bug</c><00:36:47.430><c> so</c><00:36:47.640><c> you</c><00:36:47.730><c> have</c><00:36:47.849><c> an</c><00:36:47.970><c> option</c><00:36:48.270><c> to</c><00:36:48.300><c> you</c>

00:36:49.220 --> 00:36:49.230 align:start position:0%
has a bug so you have an option to you
 

00:36:49.230 --> 00:36:51.319 align:start position:0%
has a bug so you have an option to you
know<00:36:49.320><c> fix</c><00:36:49.530><c> the</c><00:36:49.680><c> bug</c><00:36:49.829><c> without</c><00:36:50.060><c> installing</c><00:36:51.060><c> the</c>

00:36:51.319 --> 00:36:51.329 align:start position:0%
know fix the bug without installing the
 

00:36:51.329 --> 00:36:55.819 align:start position:0%
know fix the bug without installing the
new<00:36:51.680><c> right</c><00:36:52.680><c> so</c><00:36:53.670><c> now</c><00:36:53.820><c> back</c><00:36:53.970><c> to</c><00:36:54.030><c> the</c><00:36:54.829><c> divide</c>

00:36:55.819 --> 00:36:55.829 align:start position:0%
new right so now back to the divide
 

00:36:55.829 --> 00:36:57.490 align:start position:0%
new right so now back to the divide
thing<00:36:56.070><c> so</c><00:36:56.280><c> as</c><00:36:56.460><c> I</c><00:36:56.579><c> explained</c><00:36:56.940><c> about</c>

00:36:57.490 --> 00:36:57.500 align:start position:0%
thing so as I explained about
 

00:36:57.500 --> 00:37:00.410 align:start position:0%
thing so as I explained about
compressing<00:36:58.500><c> char</c><00:36:58.890><c> to</c><00:36:59.070><c> legend</c><00:36:59.400><c> one</c><00:36:59.579><c> and</c><00:36:59.970><c> there</c>

00:37:00.410 --> 00:37:00.420 align:start position:0%
compressing char to legend one and there
 

00:37:00.420 --> 00:37:02.839 align:start position:0%
compressing char to legend one and there
is<00:37:00.480><c> a</c><00:37:00.510><c> kill</c><00:37:00.720><c> switch</c><00:37:01.130><c> compact</c><00:37:02.130><c> strings</c><00:37:02.460><c> which</c>

00:37:02.839 --> 00:37:02.849 align:start position:0%
is a kill switch compact strings which
 

00:37:02.849 --> 00:37:06.589 align:start position:0%
is a kill switch compact strings which
you<00:37:03.089><c> can</c><00:37:03.270><c> disable</c><00:37:03.540><c> that</c><00:37:03.810><c> and</c><00:37:05.240><c> it</c><00:37:06.240><c> should</c><00:37:06.450><c> it's</c>

00:37:06.589 --> 00:37:06.599 align:start position:0%
you can disable that and it should it's
 

00:37:06.599 --> 00:37:08.359 align:start position:0%
you can disable that and it should it's
interesting<00:37:06.839><c> during</c><00:37:07.410><c> development</c><00:37:07.619><c> they</c><00:37:08.160><c> had</c>

00:37:08.359 --> 00:37:08.369 align:start position:0%
interesting during development they had
 

00:37:08.369 --> 00:37:12.440 align:start position:0%
interesting during development they had
a<00:37:08.400><c> bit</c><00:37:08.780><c> catch-22</c><00:37:09.780><c> problem</c><00:37:10.200><c> because</c><00:37:11.450><c> compact</c>

00:37:12.440 --> 00:37:12.450 align:start position:0%
a bit catch-22 problem because compact
 

00:37:12.450 --> 00:37:15.079 align:start position:0%
a bit catch-22 problem because compact
strings<00:37:12.780><c> is</c><00:37:13.050><c> a</c><00:37:13.170><c> common</c><00:37:13.619><c> line</c><00:37:13.770><c> flag</c><00:37:14.040><c> and</c><00:37:14.369><c> common</c>

00:37:15.079 --> 00:37:15.089 align:start position:0%
strings is a common line flag and common
 

00:37:15.089 --> 00:37:18.230 align:start position:0%
strings is a common line flag and common
line<00:37:15.270><c> flags</c><00:37:15.599><c> are</c><00:37:15.869><c> strings</c><00:37:16.369><c> now</c><00:37:17.369><c> you</c><00:37:18.030><c> are</c>

00:37:18.230 --> 00:37:18.240 align:start position:0%
line flags are strings now you are
 

00:37:18.240 --> 00:37:19.790 align:start position:0%
line flags are strings now you are
inside<00:37:18.540><c> a</c><00:37:18.569><c> string</c><00:37:18.839><c> class</c><00:37:19.079><c> and</c><00:37:19.440><c> you</c><00:37:19.500><c> need</c><00:37:19.650><c> to</c>

00:37:19.790 --> 00:37:19.800 align:start position:0%
inside a string class and you need to
 

00:37:19.800 --> 00:37:22.670 align:start position:0%
inside a string class and you need to
look<00:37:19.920><c> to</c><00:37:20.670><c> look</c><00:37:20.849><c> up</c><00:37:21.030><c> a</c><00:37:21.119><c> common</c><00:37:21.420><c> line</c><00:37:21.569><c> flag</c><00:37:21.810><c> so</c>

00:37:22.670 --> 00:37:22.680 align:start position:0%
look to look up a common line flag so
 

00:37:22.680 --> 00:37:25.280 align:start position:0%
look to look up a common line flag so
that<00:37:22.859><c> doesn't</c><00:37:23.040><c> work</c><00:37:23.359><c> so</c><00:37:24.359><c> they</c><00:37:24.839><c> had</c><00:37:25.020><c> to</c><00:37:25.140><c> do</c>

00:37:25.280 --> 00:37:25.290 align:start position:0%
that doesn't work so they had to do
 

00:37:25.290 --> 00:37:27.230 align:start position:0%
that doesn't work so they had to do
something<00:37:25.740><c> really</c><00:37:25.890><c> weird</c><00:37:26.160><c> to</c><00:37:26.670><c> be</c><00:37:26.819><c> able</c><00:37:26.940><c> to</c>

00:37:27.230 --> 00:37:27.240 align:start position:0%
something really weird to be able to
 

00:37:27.240 --> 00:37:29.359 align:start position:0%
something really weird to be able to
solve<00:37:27.420><c> the</c><00:37:27.540><c> problem</c><00:37:27.960><c> where</c><00:37:28.619><c> they</c><00:37:28.859><c> have</c><00:37:29.339><c> a</c>

00:37:29.359 --> 00:37:29.369 align:start position:0%
solve the problem where they have a
 

00:37:29.369 --> 00:37:30.800 align:start position:0%
solve the problem where they have a
constant<00:37:29.880><c> which</c><00:37:30.000><c> is</c><00:37:30.119><c> not</c><00:37:30.240><c> a</c><00:37:30.270><c> constant</c><00:37:30.660><c> that</c><00:37:30.750><c> is</c>

00:37:30.800 --> 00:37:30.810 align:start position:0%
constant which is not a constant that is
 

00:37:30.810 --> 00:37:32.720 align:start position:0%
constant which is not a constant that is
replaced<00:37:31.200><c> by</c><00:37:31.260><c> VM</c><00:37:31.619><c> because</c><00:37:31.980><c> there</c><00:37:32.369><c> is</c><00:37:32.460><c> no</c><00:37:32.579><c> other</c>

00:37:32.720 --> 00:37:32.730 align:start position:0%
replaced by VM because there is no other
 

00:37:32.730 --> 00:37:34.400 align:start position:0%
replaced by VM because there is no other
way<00:37:32.970><c> of</c><00:37:33.000><c> doing</c><00:37:33.119><c> it</c><00:37:33.300><c> they</c><00:37:33.480><c> try</c><00:37:33.720><c> to</c><00:37:33.780><c> use</c><00:37:33.930><c> unsafe</c>

00:37:34.400 --> 00:37:34.410 align:start position:0%
way of doing it they try to use unsafe
 

00:37:34.410 --> 00:37:36.470 align:start position:0%
way of doing it they try to use unsafe
and<00:37:34.619><c> everything</c><00:37:34.920><c> else</c><00:37:35.069><c> but</c><00:37:35.670><c> the</c><00:37:35.819><c> string</c><00:37:36.089><c> is</c><00:37:36.270><c> so</c>

00:37:36.470 --> 00:37:36.480 align:start position:0%
and everything else but the string is so
 

00:37:36.480 --> 00:37:38.420 align:start position:0%
and everything else but the string is so
important<00:37:36.960><c> to</c><00:37:37.079><c> JVM</c><00:37:37.470><c> startup</c><00:37:37.920><c> that</c><00:37:38.069><c> if</c><00:37:38.190><c> we</c><00:37:38.280><c> just</c>

00:37:38.420 --> 00:37:38.430 align:start position:0%
important to JVM startup that if we just
 

00:37:38.430 --> 00:37:40.190 align:start position:0%
important to JVM startup that if we just
crush<00:37:38.670><c> we</c><00:37:38.819><c> am</c><00:37:38.940><c> every</c><00:37:39.210><c> time</c><00:37:39.390><c> they</c><00:37:39.569><c> did</c><00:37:40.079><c> try</c>

00:37:40.190 --> 00:37:40.200 align:start position:0%
crush we am every time they did try
 

00:37:40.200 --> 00:37:41.930 align:start position:0%
crush we am every time they did try
different<00:37:40.410><c> things</c><00:37:40.619><c> if</c><00:37:41.280><c> you</c><00:37:41.400><c> understand</c><00:37:41.760><c> more</c>

00:37:41.930 --> 00:37:41.940 align:start position:0%
different things if you understand more
 

00:37:41.940 --> 00:37:43.190 align:start position:0%
different things if you understand more
look<00:37:42.540><c> up</c>

00:37:43.190 --> 00:37:43.200 align:start position:0%
look up
 

00:37:43.200 --> 00:37:45.440 align:start position:0%
look up
Alex's<00:37:43.800><c> ship</c><00:37:43.920><c> let's</c><00:37:44.130><c> talk</c><00:37:44.339><c> on</c><00:37:44.520><c> that</c><00:37:44.670><c> he</c><00:37:45.300><c> goes</c>

00:37:45.440 --> 00:37:45.450 align:start position:0%
Alex's ship let's talk on that he goes
 

00:37:45.450 --> 00:37:47.630 align:start position:0%
Alex's ship let's talk on that he goes
to<00:37:45.480><c> detail</c><00:37:45.900><c> how</c><00:37:46.109><c> they</c><00:37:46.260><c> fight</c><00:37:46.470><c> the</c><00:37:46.680><c> VM</c><00:37:46.950><c> to</c><00:37:46.980><c> just</c>

00:37:47.630 --> 00:37:47.640 align:start position:0%
to detail how they fight the VM to just
 

00:37:47.640 --> 00:37:51.650 align:start position:0%
to detail how they fight the VM to just
have<00:37:48.089><c> something</c><00:37:48.300><c> like</c><00:37:48.540><c> this</c><00:37:48.630><c> stupid</c><00:37:48.960><c> flag</c><00:37:50.660><c> so</c>

00:37:51.650 --> 00:37:51.660 align:start position:0%
have something like this stupid flag so
 

00:37:51.660 --> 00:37:54.319 align:start position:0%
have something like this stupid flag so
now<00:37:52.349><c> it</c><00:37:52.560><c> is</c><00:37:52.589><c> back</c><00:37:52.859><c> back</c><00:37:53.220><c> to</c><00:37:53.430><c> our</c><00:37:53.550><c> benchmark</c><00:37:54.119><c> and</c>

00:37:54.319 --> 00:37:54.329 align:start position:0%
now it is back back to our benchmark and
 

00:37:54.329 --> 00:37:57.020 align:start position:0%
now it is back back to our benchmark and
just<00:37:54.930><c> the</c><00:37:55.050><c> fact</c><00:37:55.260><c> of</c><00:37:55.640><c> having</c><00:37:56.640><c> or</c><00:37:56.910><c> not</c><00:37:56.940><c> having</c>

00:37:57.020 --> 00:37:57.030 align:start position:0%
just the fact of having or not having
 

00:37:57.030 --> 00:37:59.480 align:start position:0%
just the fact of having or not having
compact<00:37:57.630><c> strings</c><00:37:57.900><c> and</c><00:37:58.079><c> if</c><00:37:58.170><c> you</c><00:37:58.290><c> see</c><00:37:58.500><c> and</c><00:37:59.190><c> the</c>

00:37:59.480 --> 00:37:59.490 align:start position:0%
compact strings and if you see and the
 

00:37:59.490 --> 00:38:02.089 align:start position:0%
compact strings and if you see and the
plus<00:37:59.700><c> up</c><00:38:00.420><c> there</c><00:38:00.690><c> we</c><00:38:01.319><c> see</c><00:38:01.470><c> the</c><00:38:01.530><c> difference</c><00:38:01.920><c> in</c>

00:38:02.089 --> 00:38:02.099 align:start position:0%
plus up there we see the difference in
 

00:38:02.099 --> 00:38:03.890 align:start position:0%
plus up there we see the difference in
the<00:38:02.190><c> bytes</c><00:38:02.369><c> allocated</c><00:38:03.089><c> if</c><00:38:03.390><c> the</c><00:38:03.569><c> strings</c><00:38:03.810><c> are</c>

00:38:03.890 --> 00:38:03.900 align:start position:0%
the bytes allocated if the strings are
 

00:38:03.900 --> 00:38:06.200 align:start position:0%
the bytes allocated if the strings are
compacted<00:38:04.410><c> or</c><00:38:04.500><c> compact</c><00:38:04.859><c> it's</c><00:38:05.250><c> not</c><00:38:05.430><c> exactly</c><00:38:05.760><c> 2x</c>

00:38:06.200 --> 00:38:06.210 align:start position:0%
compacted or compact it's not exactly 2x
 

00:38:06.210 --> 00:38:08.660 align:start position:0%
compacted or compact it's not exactly 2x
you<00:38:06.569><c> would</c><00:38:06.869><c> think</c><00:38:07.260><c> because</c><00:38:07.740><c> string</c><00:38:08.310><c> object</c>

00:38:08.660 --> 00:38:08.670 align:start position:0%
you would think because string object
 

00:38:08.670 --> 00:38:10.250 align:start position:0%
you would think because string object
has<00:38:08.849><c> you</c><00:38:09.119><c> know</c><00:38:09.210><c> pointers</c><00:38:09.569><c> to</c><00:38:09.690><c> the</c><00:38:09.780><c> array</c><00:38:10.079><c> and</c>

00:38:10.250 --> 00:38:10.260 align:start position:0%
has you know pointers to the array and
 

00:38:10.260 --> 00:38:11.260 align:start position:0%
has you know pointers to the array and
hash<00:38:10.349><c> code</c><00:38:10.589><c> and</c><00:38:10.770><c> other</c><00:38:10.859><c> stuff</c>

00:38:11.260 --> 00:38:11.270 align:start position:0%
hash code and other stuff
 

00:38:11.270 --> 00:38:15.010 align:start position:0%
hash code and other stuff
other<00:38:12.020><c> things</c><00:38:12.290><c> around</c><00:38:12.410><c> it</c><00:38:12.710><c> but</c><00:38:13.250><c> and</c><00:38:14.180><c> the</c><00:38:14.869><c> more</c>

00:38:15.010 --> 00:38:15.020 align:start position:0%
other things around it but and the more
 

00:38:15.020 --> 00:38:21.220 align:start position:0%
other things around it but and the more
memories<00:38:15.350><c> allocated</c><00:38:18.580><c> i</c><00:38:19.990><c> wanna</c><00:38:20.990><c> quickly</c>

00:38:21.220 --> 00:38:21.230 align:start position:0%
memories allocated i wanna quickly
 

00:38:21.230 --> 00:38:25.990 align:start position:0%
memories allocated i wanna quickly
button<00:38:21.680><c> and</c><00:38:21.860><c> say</c><00:38:22.070><c> there's</c><00:38:24.010><c> this</c><00:38:25.010><c> to</c><00:38:25.340><c> me</c><00:38:25.520><c> feels</c>

00:38:25.990 --> 00:38:26.000 align:start position:0%
button and say there's this to me feels
 

00:38:26.000 --> 00:38:30.640 align:start position:0%
button and say there's this to me feels
but<00:38:26.270><c> Fulks</c><00:38:26.780><c> bargain</c><00:38:27.350><c> ish</c><00:38:28.300><c> because</c><00:38:29.440><c> some</c><00:38:30.440><c> case</c>

00:38:30.640 --> 00:38:30.650 align:start position:0%
but Fulks bargain ish because some case
 

00:38:30.650 --> 00:38:33.370 align:start position:0%
but Fulks bargain ish because some case
I've<00:38:30.860><c> made</c><00:38:31.160><c> I've</c><00:38:31.700><c> done</c><00:38:32.050><c> seemed</c><00:38:33.050><c> to</c><00:38:33.170><c> him</c><00:38:33.290><c> to</c>

00:38:33.370 --> 00:38:33.380 align:start position:0%
I've made I've done seemed to him to
 

00:38:33.380 --> 00:38:35.770 align:start position:0%
I've made I've done seemed to him to
indicate<00:38:33.740><c> that</c><00:38:34.010><c> it</c><00:38:34.190><c> actually</c><00:38:34.510><c> does</c><00:38:35.510><c> make</c><00:38:35.750><c> a</c>

00:38:35.770 --> 00:38:35.780 align:start position:0%
indicate that it actually does make a
 

00:38:35.780 --> 00:38:38.380 align:start position:0%
indicate that it actually does make a
difference<00:38:35.900><c> of</c><00:38:36.320><c> performance</c><00:38:36.830><c> if</c><00:38:37.100><c> it's</c><00:38:37.390><c> at</c>

00:38:38.380 --> 00:38:38.390 align:start position:0%
difference of performance if it's at
 

00:38:38.390 --> 00:38:41.109 align:start position:0%
difference of performance if it's at
least<00:38:38.450><c> versus</c><00:38:38.960><c> between</c><00:38:39.230><c> Java</c><00:38:39.470><c> 8</c><00:38:39.619><c> 2009</c><00:38:40.119><c> with</c>

00:38:41.109 --> 00:38:41.119 align:start position:0%
least versus between Java 8 2009 with
 

00:38:41.119 --> 00:38:43.359 align:start position:0%
least versus between Java 8 2009 with
having<00:38:41.390><c> these</c><00:38:41.480><c> compact</c><00:38:41.900><c> strings</c><00:38:42.200><c> that</c><00:38:43.010><c> record</c>

00:38:43.359 --> 00:38:43.369 align:start position:0%
having these compact strings that record
 

00:38:43.369 --> 00:38:46.750 align:start position:0%
having these compact strings that record
optimize<00:38:43.760><c> as</c><00:38:44.000><c> much</c><00:38:44.300><c> but</c><00:38:45.260><c> so</c><00:38:45.890><c> far</c><00:38:46.160><c> we</c><00:38:46.520><c> haven't</c>

00:38:46.750 --> 00:38:46.760 align:start position:0%
optimize as much but so far we haven't
 

00:38:46.760 --> 00:38:48.160 align:start position:0%
optimize as much but so far we haven't
been<00:38:46.940><c> able</c><00:38:47.090><c> to</c><00:38:47.360><c> write</c><00:38:47.510><c> the</c><00:38:47.660><c> benchmark</c><00:38:48.050><c> we</c>

00:38:48.160 --> 00:38:48.170 align:start position:0%
been able to write the benchmark we
 

00:38:48.170 --> 00:38:50.650 align:start position:0%
been able to write the benchmark we
tried<00:38:48.440><c> quite</c><00:38:48.710><c> hard</c><00:38:49.010><c> to</c><00:38:49.640><c> write</c><00:38:49.790><c> benchmark</c><00:38:50.360><c> two</c>

00:38:50.650 --> 00:38:50.660 align:start position:0%
tried quite hard to write benchmark two
 

00:38:50.660 --> 00:38:54.190 align:start position:0%
tried quite hard to write benchmark two
to<00:38:51.170><c> prove</c><00:38:51.590><c> that</c><00:38:52.400><c> it</c><00:38:52.700><c> is</c><00:38:52.940><c> a</c><00:38:52.970><c> problem</c><00:38:53.390><c> in</c><00:38:53.750><c> Java</c><00:38:53.960><c> 9</c>

00:38:54.190 --> 00:38:54.200 align:start position:0%
to prove that it is a problem in Java 9
 

00:38:54.200 --> 00:38:57.550 align:start position:0%
to prove that it is a problem in Java 9
but<00:38:55.190><c> it's</c><00:38:55.460><c> almost</c><00:38:55.700><c> like</c><00:38:55.910><c> you</c><00:38:56.600><c> know</c><00:38:56.750><c> somehow</c>

00:38:57.550 --> 00:38:57.560 align:start position:0%
but it's almost like you know somehow
 

00:38:57.560 --> 00:38:59.410 align:start position:0%
but it's almost like you know somehow
there's<00:38:58.369><c> something</c><00:38:58.670><c> going</c><00:38:58.940><c> on</c><00:38:59.060><c> that</c><00:38:59.119><c> to</c>

00:38:59.410 --> 00:38:59.420 align:start position:0%
there's something going on that to
 

00:38:59.420 --> 00:39:01.090 align:start position:0%
there's something going on that to
figure<00:38:59.720><c> out</c><00:38:59.840><c> that</c><00:39:00.140><c> we're</c><00:39:00.290><c> testing</c><00:39:00.440><c> it</c><00:39:00.830><c> I</c><00:39:00.920><c> don't</c>

00:39:01.090 --> 00:39:01.100 align:start position:0%
figure out that we're testing it I don't
 

00:39:01.100 --> 00:39:02.550 align:start position:0%
figure out that we're testing it I don't
know

00:39:02.550 --> 00:39:02.560 align:start position:0%
know
 

00:39:02.560 --> 00:39:06.420 align:start position:0%
know
you<00:39:03.560><c> know</c><00:39:03.680><c> admission</c><00:39:04.250><c> testing</c><00:39:04.700><c> is</c><00:39:04.790><c> going</c><00:39:05.000><c> on</c>

00:39:06.420 --> 00:39:06.430 align:start position:0%
you know admission testing is going on
 

00:39:06.430 --> 00:39:08.770 align:start position:0%
you know admission testing is going on
there<00:39:07.430><c> are</c><00:39:07.580><c> some</c><00:39:07.730><c> interesting</c><00:39:08.119><c> edge</c><00:39:08.480><c> cases</c>

00:39:08.770 --> 00:39:08.780 align:start position:0%
there are some interesting edge cases
 

00:39:08.780 --> 00:39:11.470 align:start position:0%
there are some interesting edge cases
first<00:39:09.470><c> edge</c><00:39:09.680><c> case</c><00:39:09.950><c> is</c><00:39:10.220><c> the</c><00:39:10.550><c> maximum</c><00:39:11.180><c> size</c><00:39:11.330><c> of</c>

00:39:11.470 --> 00:39:11.480 align:start position:0%
first edge case is the maximum size of
 

00:39:11.480 --> 00:39:15.359 align:start position:0%
first edge case is the maximum size of
the<00:39:11.540><c> string</c><00:39:11.840><c> so</c><00:39:12.800><c> if</c><00:39:13.070><c> in</c><00:39:13.250><c> JDK</c><00:39:13.760><c> 8</c><00:39:13.790><c> you</c><00:39:14.270><c> allocate</c>

00:39:15.359 --> 00:39:15.369 align:start position:0%
the string so if in JDK 8 you allocate
 

00:39:15.369 --> 00:39:17.680 align:start position:0%
the string so if in JDK 8 you allocate
essentially<00:39:16.369><c> you</c><00:39:16.490><c> can</c><00:39:16.670><c> say</c><00:39:16.940><c> a</c><00:39:17.150><c> new</c><00:39:17.330><c> character</c>

00:39:17.680 --> 00:39:17.690 align:start position:0%
essentially you can say a new character
 

00:39:17.690 --> 00:39:20.950 align:start position:0%
essentially you can say a new character
array<00:39:18.550><c> integer</c><00:39:19.550><c> max</c><00:39:19.730><c> value</c><00:39:20.030><c> -2</c><00:39:20.540><c> that's</c><00:39:20.780><c> a</c>

00:39:20.950 --> 00:39:20.960 align:start position:0%
array integer max value -2 that's a
 

00:39:20.960 --> 00:39:22.900 align:start position:0%
array integer max value -2 that's a
maximum<00:39:21.380><c> array</c><00:39:21.619><c> size</c><00:39:21.830><c> in</c><00:39:21.980><c> Java</c><00:39:22.340><c> you</c><00:39:22.880><c> can</c>

00:39:22.900 --> 00:39:22.910 align:start position:0%
maximum array size in Java you can
 

00:39:22.910 --> 00:39:25.240 align:start position:0%
maximum array size in Java you can
create<00:39:23.270><c> a</c><00:39:23.300><c> string</c><00:39:23.570><c> of</c><00:39:23.660><c> that</c><00:39:23.810><c> size</c><00:39:24.020><c> so</c><00:39:24.590><c> it's</c><00:39:24.770><c> 2</c>

00:39:25.240 --> 00:39:25.250 align:start position:0%
create a string of that size so it's 2
 

00:39:25.250 --> 00:39:28.210 align:start position:0%
create a string of that size so it's 2
billion<00:39:25.580><c> elements</c><00:39:25.700><c> array</c><00:39:26.240><c> well</c><00:39:27.109><c> in</c><00:39:27.350><c> gdk9</c><00:39:27.740><c> plus</c>

00:39:28.210 --> 00:39:28.220 align:start position:0%
billion elements array well in gdk9 plus
 

00:39:28.220 --> 00:39:30.730 align:start position:0%
billion elements array well in gdk9 plus
you<00:39:28.400><c> can't</c><00:39:28.869><c> because</c><00:39:29.869><c> you</c><00:39:30.050><c> have</c><00:39:30.200><c> a</c><00:39:30.230><c> byte</c><00:39:30.470><c> array</c>

00:39:30.730 --> 00:39:30.740 align:start position:0%
you can't because you have a byte array
 

00:39:30.740 --> 00:39:33.570 align:start position:0%
you can't because you have a byte array
so<00:39:30.980><c> it's</c><00:39:31.310><c> still</c><00:39:31.550><c> 2</c><00:39:32.119><c> billion</c><00:39:32.540><c> elements</c><00:39:32.690><c> of</c>

00:39:33.570 --> 00:39:33.580 align:start position:0%
so it's still 2 billion elements of
 

00:39:33.580 --> 00:39:36.820 align:start position:0%
so it's still 2 billion elements of
bytes<00:39:34.580><c> and</c><00:39:34.940><c> now</c><00:39:35.420><c> here's</c><00:39:35.780><c> the</c><00:39:35.900><c> trick</c><00:39:36.109><c> if</c><00:39:36.560><c> your</c>

00:39:36.820 --> 00:39:36.830 align:start position:0%
bytes and now here's the trick if your
 

00:39:36.830 --> 00:39:39.460 align:start position:0%
bytes and now here's the trick if your
string<00:39:37.160><c> is</c><00:39:37.190><c> compressible</c><00:39:38.030><c> you</c><00:39:38.960><c> can</c><00:39:39.170><c> do</c><00:39:39.290><c> that</c>

00:39:39.460 --> 00:39:39.470 align:start position:0%
string is compressible you can do that
 

00:39:39.470 --> 00:39:41.430 align:start position:0%
string is compressible you can do that
your<00:39:39.710><c> code</c><00:39:39.890><c> will</c><00:39:40.070><c> work</c><00:39:40.100><c> if</c><00:39:40.790><c> your</c><00:39:41.030><c> string</c><00:39:41.359><c> is</c>

00:39:41.430 --> 00:39:41.440 align:start position:0%
your code will work if your string is
 

00:39:41.440 --> 00:39:44.230 align:start position:0%
your code will work if your string is
utf-16<00:39:42.440><c> string</c><00:39:42.920><c> you</c><00:39:43.340><c> need</c><00:39:43.490><c> twice</c><00:39:43.700><c> twice</c><00:39:44.090><c> the</c>

00:39:44.230 --> 00:39:44.240 align:start position:0%
utf-16 string you need twice twice the
 

00:39:44.240 --> 00:39:45.820 align:start position:0%
utf-16 string you need twice twice the
size<00:39:44.390><c> of</c><00:39:44.540><c> the</c><00:39:44.660><c> array</c><00:39:44.810><c> array</c><00:39:45.230><c> is</c><00:39:45.290><c> half</c><00:39:45.590><c> of</c><00:39:45.740><c> it</c>

00:39:45.820 --> 00:39:45.830 align:start position:0%
size of the array array is half of it
 

00:39:45.830 --> 00:39:47.590 align:start position:0%
size of the array array is half of it
you<00:39:46.250><c> will</c><00:39:46.369><c> get</c><00:39:46.520><c> and</c><00:39:46.760><c> finally</c><00:39:47.060><c> out</c><00:39:47.180><c> of</c><00:39:47.359><c> memory</c>

00:39:47.590 --> 00:39:47.600 align:start position:0%
you will get and finally out of memory
 

00:39:47.600 --> 00:39:50.290 align:start position:0%
you will get and finally out of memory
error<00:39:48.350><c> saying</c><00:39:48.710><c> you</c><00:39:49.430><c> cannot</c><00:39:49.730><c> allocate</c><00:39:49.970><c> that</c>

00:39:50.290 --> 00:39:50.300 align:start position:0%
error saying you cannot allocate that
 

00:39:50.300 --> 00:39:51.730 align:start position:0%
error saying you cannot allocate that
big<00:39:50.450><c> of</c><00:39:50.570><c> a</c><00:39:50.630><c> string</c><00:39:50.869><c> and</c><00:39:51.020><c> it</c><00:39:51.080><c> gives</c><00:39:51.350><c> you</c><00:39:51.500><c> 1</c>

00:39:51.730 --> 00:39:51.740 align:start position:0%
big of a string and it gives you 1
 

00:39:51.740 --> 00:39:53.680 align:start position:0%
big of a string and it gives you 1
billion<00:39:51.980><c> during</c><00:39:52.730><c> the</c><00:39:52.910><c> max</c><00:39:53.119><c> value</c><00:39:53.420><c> can</c><00:39:53.600><c> be</c>

00:39:53.680 --> 00:39:53.690 align:start position:0%
billion during the max value can be
 

00:39:53.690 --> 00:39:55.390 align:start position:0%
billion during the max value can be
that's<00:39:54.080><c> first</c><00:39:54.320><c> thing</c><00:39:54.440><c> and</c><00:39:54.650><c> second</c><00:39:54.980><c> thing</c><00:39:55.190><c> and</c>

00:39:55.390 --> 00:39:55.400 align:start position:0%
that's first thing and second thing and
 

00:39:55.400 --> 00:39:58.420 align:start position:0%
that's first thing and second thing and
certain<00:39:56.240><c> operations</c><00:39:56.690><c> like</c><00:39:57.280><c> substring</c><00:39:58.280><c> and</c>

00:39:58.420 --> 00:39:58.430 align:start position:0%
certain operations like substring and
 

00:39:58.430 --> 00:40:01.150 align:start position:0%
certain operations like substring and
other<00:39:58.609><c> stuff</c><00:39:58.910><c> might</c><00:39:59.900><c> get</c><00:40:00.500><c> into</c><00:40:00.740><c> trouble</c>

00:40:01.150 --> 00:40:01.160 align:start position:0%
other stuff might get into trouble
 

00:40:01.160 --> 00:40:05.770 align:start position:0%
other stuff might get into trouble
because<00:40:01.480><c> you're</c><00:40:02.480><c> walking</c><00:40:02.660><c> a</c><00:40:03.670><c> like</c><00:40:04.670><c> when</c><00:40:05.660><c> you</c>

00:40:05.770 --> 00:40:05.780 align:start position:0%
because you're walking a like when you
 

00:40:05.780 --> 00:40:09.370 align:start position:0%
because you're walking a like when you
for<00:40:05.990><c> instance</c><00:40:06.250><c> go</c><00:40:07.250><c> from</c><00:40:08.260><c> compressed</c><00:40:09.260><c> and</c>

00:40:09.370 --> 00:40:09.380 align:start position:0%
for instance go from compressed and
 

00:40:09.380 --> 00:40:12.280 align:start position:0%
for instance go from compressed and
uncompressed<00:40:09.470><c> things</c><00:40:10.369><c> but</c><00:40:10.600><c> I'm</c><00:40:11.600><c> getting</c><00:40:11.960><c> too</c>

00:40:12.280 --> 00:40:12.290 align:start position:0%
uncompressed things but I'm getting too
 

00:40:12.290 --> 00:40:20.290 align:start position:0%
uncompressed things but I'm getting too
much<00:40:12.320><c> into</c><00:40:14.200><c> let's</c><00:40:15.200><c> talk</c><00:40:15.380><c> about</c><00:40:17.650><c> intrinsic</c><00:40:19.300><c> ok</c>

00:40:20.290 --> 00:40:20.300 align:start position:0%
much into let's talk about intrinsic ok
 

00:40:20.300 --> 00:40:22.470 align:start position:0%
much into let's talk about intrinsic ok
yes

00:40:22.470 --> 00:40:22.480 align:start position:0%
yes
 

00:40:22.480 --> 00:40:24.750 align:start position:0%
yes
so<00:40:22.809><c> another</c><00:40:23.619><c> thing</c><00:40:23.859><c> if</c><00:40:24.069><c> you</c><00:40:24.190><c> look</c><00:40:24.309><c> at</c><00:40:24.460><c> strings</c>

00:40:24.750 --> 00:40:24.760 align:start position:0%
so another thing if you look at strings
 

00:40:24.760 --> 00:40:27.000 align:start position:0%
so another thing if you look at strings
and<00:40:24.970><c> Java</c><00:40:25.540><c> coding</c><00:40:25.839><c> in</c><00:40:26.079><c> general</c><00:40:26.440><c> there</c><00:40:26.829><c> is</c><00:40:26.920><c> this</c>

00:40:27.000 --> 00:40:27.010 align:start position:0%
and Java coding in general there is this
 

00:40:27.010 --> 00:40:28.260 align:start position:0%
and Java coding in general there is this
thing<00:40:27.190><c> called</c><00:40:27.250><c> intrinsic</c><00:40:27.730><c> so</c><00:40:28.000><c> certain</c>

00:40:28.260 --> 00:40:28.270 align:start position:0%
thing called intrinsic so certain
 

00:40:28.270 --> 00:40:30.480 align:start position:0%
thing called intrinsic so certain
operations<00:40:28.450><c> in</c><00:40:28.869><c> Java</c><00:40:29.140><c> and</c><00:40:29.500><c> you</c><00:40:29.530><c> see</c><00:40:30.339><c> that</c>

00:40:30.480 --> 00:40:30.490 align:start position:0%
operations in Java and you see that
 

00:40:30.490 --> 00:40:32.309 align:start position:0%
operations in Java and you see that
there<00:40:30.640><c> is</c><00:40:30.700><c> a</c><00:40:30.730><c> Java</c><00:40:30.970><c> code</c><00:40:31.210><c> for</c><00:40:31.390><c> them</c><00:40:31.510><c> but</c><00:40:32.079><c> it's</c>

00:40:32.309 --> 00:40:32.319 align:start position:0%
there is a Java code for them but it's
 

00:40:32.319 --> 00:40:34.289 align:start position:0%
there is a Java code for them but it's
actually<00:40:32.680><c> not</c><00:40:32.829><c> what</c><00:40:33.040><c> a</c><00:40:33.339><c> JVM</c><00:40:33.640><c> is</c><00:40:33.730><c> executing</c><00:40:34.240><c> if</c>

00:40:34.289 --> 00:40:34.299 align:start position:0%
actually not what a JVM is executing if
 

00:40:34.299 --> 00:40:36.930 align:start position:0%
actually not what a JVM is executing if
you<00:40:34.390><c> run</c><00:40:34.510><c> them</c><00:40:34.690><c> this</c><00:40:34.869><c> is</c><00:40:34.990><c> just</c><00:40:35.200><c> a</c><00:40:35.349><c> list</c><00:40:35.680><c> of</c><00:40:35.940><c> some</c>

00:40:36.930 --> 00:40:36.940 align:start position:0%
you run them this is just a list of some
 

00:40:36.940 --> 00:40:39.120 align:start position:0%
you run them this is just a list of some
of<00:40:36.970><c> spring</c><00:40:37.390><c> related</c><00:40:37.720><c> intrinsic</c><00:40:38.410><c> sin</c><00:40:38.589><c> and</c><00:40:38.890><c> JDK</c>

00:40:39.120 --> 00:40:39.130 align:start position:0%
of spring related intrinsic sin and JDK
 

00:40:39.130 --> 00:40:44.760 align:start position:0%
of spring related intrinsic sin and JDK
8<00:40:39.780><c> and</c><00:40:41.010><c> if</c><00:40:42.010><c> you</c><00:40:42.130><c> look</c><00:40:42.280><c> at</c><00:40:42.400><c> 11</c><00:40:43.559><c> it's</c><00:40:44.559><c> far</c><00:40:44.740><c> more</c>

00:40:44.760 --> 00:40:44.770 align:start position:0%
8 and if you look at 11 it's far more
 

00:40:44.770 --> 00:40:47.700 align:start position:0%
8 and if you look at 11 it's far more
well<00:40:45.250><c> the</c><00:40:45.640><c> reason</c><00:40:45.940><c> we</c><00:40:46.420><c> basically</c><00:40:46.900><c> doubled</c><00:40:47.319><c> all</c>

00:40:47.700 --> 00:40:47.710 align:start position:0%
well the reason we basically doubled all
 

00:40:47.710 --> 00:40:49.920 align:start position:0%
well the reason we basically doubled all
the<00:40:48.250><c> overhead</c><00:40:48.520><c> of</c><00:40:48.819><c> string</c><00:40:49.059><c> working</c><00:40:49.450><c> so</c><00:40:49.599><c> before</c>

00:40:49.920 --> 00:40:49.930 align:start position:0%
the overhead of string working so before
 

00:40:49.930 --> 00:40:52.079 align:start position:0%
the overhead of string working so before
we<00:40:50.049><c> just</c><00:40:50.380><c> set</c><00:40:50.530><c> one</c><00:40:50.559><c> string</c><00:40:50.980><c> class</c><00:40:51.190><c> now</c><00:40:51.700><c> inside</c>

00:40:52.079 --> 00:40:52.089 align:start position:0%
we just set one string class now inside
 

00:40:52.089 --> 00:40:54.510 align:start position:0%
we just set one string class now inside
there<00:40:52.240><c> is</c><00:40:52.299><c> like</c><00:40:52.480><c> Latin</c><00:40:52.720><c> one</c><00:40:53.020><c> in</c><00:40:53.140><c> utf-16</c><00:40:53.530><c> so</c><00:40:53.980><c> we</c>

00:40:54.510 --> 00:40:54.520 align:start position:0%
there is like Latin one in utf-16 so we
 

00:40:54.520 --> 00:40:56.430 align:start position:0%
there is like Latin one in utf-16 so we
double<00:40:54.849><c> that</c><00:40:55.030><c> and</c><00:40:55.270><c> there</c><00:40:55.869><c> were</c><00:40:55.960><c> moment</c><00:40:56.260><c> in</c>

00:40:56.430 --> 00:40:56.440 align:start position:0%
double that and there were moment in
 

00:40:56.440 --> 00:40:59.549 align:start position:0%
double that and there were moment in
this<00:40:56.559><c> editor</c><00:40:58.140><c> now</c><00:40:59.140><c> there</c><00:40:59.319><c> is</c><00:40:59.410><c> another</c>

00:40:59.549 --> 00:40:59.559 align:start position:0%
this editor now there is another
 

00:40:59.559 --> 00:41:01.440 align:start position:0%
this editor now there is another
interesting<00:40:59.799><c> thing</c><00:41:00.099><c> if</c><00:41:00.430><c> you</c><00:41:00.520><c> look</c><00:41:00.730><c> on</c><00:41:00.880><c> JDK</c><00:41:01.299><c> 9</c>

00:41:01.440 --> 00:41:01.450 align:start position:0%
interesting thing if you look on JDK 9
 

00:41:01.450 --> 00:41:03.150 align:start position:0%
interesting thing if you look on JDK 9
plus<00:41:01.720><c> how</c><00:41:02.020><c> equals</c><00:41:02.410><c> is</c><00:41:02.559><c> implemented</c><00:41:03.069><c> for</c>

00:41:03.150 --> 00:41:03.160 align:start position:0%
plus how equals is implemented for
 

00:41:03.160 --> 00:41:07.140 align:start position:0%
plus how equals is implemented for
example<00:41:03.839><c> there</c><00:41:04.839><c> is</c><00:41:04.930><c> this</c><00:41:05.520><c> this</c><00:41:06.520><c> check</c><00:41:06.819><c> at</c><00:41:07.089><c> the</c>

00:41:07.140 --> 00:41:07.150 align:start position:0%
example there is this this check at the
 

00:41:07.150 --> 00:41:09.089 align:start position:0%
example there is this this check at the
beginning<00:41:07.569><c> and</c><00:41:07.750><c> then</c><00:41:07.839><c> if</c><00:41:07.990><c> it's</c><00:41:08.140><c> string</c><00:41:08.500><c> first</c>

00:41:09.089 --> 00:41:09.099 align:start position:0%
beginning and then if it's string first
 

00:41:09.099 --> 00:41:10.559 align:start position:0%
beginning and then if it's string first
thing<00:41:09.220><c> they</c><00:41:09.339><c> do</c><00:41:09.430><c> they</c><00:41:09.700><c> compare</c><00:41:09.970><c> coda</c>

00:41:10.559 --> 00:41:10.569 align:start position:0%
thing they do they compare coda
 

00:41:10.569 --> 00:41:12.180 align:start position:0%
thing they do they compare coda
so<00:41:10.900><c> this</c><00:41:11.020><c> is</c><00:41:11.140><c> a</c><00:41:11.170><c> special</c><00:41:11.380><c> case</c><00:41:11.740><c> if</c><00:41:11.980><c> you</c><00:41:12.099><c> have</c>

00:41:12.180 --> 00:41:12.190 align:start position:0%
so this is a special case if you have
 

00:41:12.190 --> 00:41:14.010 align:start position:0%
so this is a special case if you have
two<00:41:12.309><c> strings</c><00:41:12.549><c> of</c><00:41:12.760><c> different</c><00:41:13.089><c> encoding</c><00:41:13.329><c> they</c>

00:41:14.010 --> 00:41:14.020 align:start position:0%
two strings of different encoding they
 

00:41:14.020 --> 00:41:16.440 align:start position:0%
two strings of different encoding they
by<00:41:14.200><c> definition</c><00:41:14.260><c> cannot</c><00:41:14.950><c> be</c><00:41:15.160><c> equal</c><00:41:15.549><c> so</c><00:41:16.150><c> this</c><00:41:16.299><c> is</c>

00:41:16.440 --> 00:41:16.450 align:start position:0%
by definition cannot be equal so this is
 

00:41:16.450 --> 00:41:18.150 align:start position:0%
by definition cannot be equal so this is
a<00:41:16.510><c> short</c><00:41:16.750><c> circuit</c><00:41:16.930><c> inside</c><00:41:17.440><c> ok</c><00:41:17.680><c> if</c><00:41:17.770><c> you</c><00:41:17.859><c> compare</c>

00:41:18.150 --> 00:41:18.160 align:start position:0%
a short circuit inside ok if you compare
 

00:41:18.160 --> 00:41:19.740 align:start position:0%
a short circuit inside ok if you compare
strings<00:41:18.369><c> that</c><00:41:18.520><c> are</c><00:41:18.670><c> not</c><00:41:18.819><c> of</c><00:41:19.569><c> the</c><00:41:19.720><c> same</c>

00:41:19.740 --> 00:41:19.750 align:start position:0%
strings that are not of the same
 

00:41:19.750 --> 00:41:22.319 align:start position:0%
strings that are not of the same
encoding<00:41:20.109><c> we</c><00:41:20.740><c> can</c><00:41:20.890><c> skip</c><00:41:21.130><c> that</c><00:41:21.250><c> thing</c><00:41:21.460><c> and</c><00:41:21.910><c> then</c>

00:41:22.319 --> 00:41:22.329 align:start position:0%
encoding we can skip that thing and then
 

00:41:22.329 --> 00:41:24.270 align:start position:0%
encoding we can skip that thing and then
they<00:41:22.480><c> check</c><00:41:22.690><c> what</c><00:41:23.079><c> is</c><00:41:23.230><c> the</c><00:41:23.260><c> common</c><00:41:23.859><c> encoding</c>

00:41:24.270 --> 00:41:24.280 align:start position:0%
they check what is the common encoding
 

00:41:24.280 --> 00:41:28.079 align:start position:0%
they check what is the common encoding
called<00:41:24.579><c> one</c><00:41:24.760><c> of</c><00:41:24.790><c> these</c><00:41:25.089><c> methods</c><00:41:26.670><c> so</c><00:41:27.670><c> to</c><00:41:27.730><c> make</c><00:41:28.059><c> a</c>

00:41:28.079 --> 00:41:28.089 align:start position:0%
called one of these methods so to make a
 

00:41:28.089 --> 00:41:30.120 align:start position:0%
called one of these methods so to make a
point<00:41:28.299><c> about</c><00:41:28.450><c> intrinsic</c><00:41:28.869><c> let's</c><00:41:29.619><c> look</c><00:41:29.829><c> at</c><00:41:29.980><c> how</c>

00:41:30.120 --> 00:41:30.130 align:start position:0%
point about intrinsic let's look at how
 

00:41:30.130 --> 00:41:31.950 align:start position:0%
point about intrinsic let's look at how
one<00:41:30.430><c> of</c><00:41:30.549><c> this</c><00:41:30.640><c> methods</c><00:41:30.790><c> is</c><00:41:31.299><c> implemented</c><00:41:31.839><c> like</c>

00:41:31.950 --> 00:41:31.960 align:start position:0%
one of this methods is implemented like
 

00:41:31.960 --> 00:41:34.289 align:start position:0%
one of this methods is implemented like
letting<00:41:32.319><c> 1</c><00:41:32.500><c> equals</c><00:41:32.950><c> so</c><00:41:33.490><c> basically</c><00:41:33.880><c> we</c><00:41:34.089><c> just</c>

00:41:34.289 --> 00:41:34.299 align:start position:0%
letting 1 equals so basically we just
 

00:41:34.299 --> 00:41:36.329 align:start position:0%
letting 1 equals so basically we just
walk<00:41:34.540><c> the</c><00:41:34.690><c> array</c><00:41:34.960><c> element</c><00:41:35.650><c> by</c><00:41:35.770><c> element</c><00:41:35.799><c> if</c><00:41:36.220><c> you</c>

00:41:36.329 --> 00:41:36.339 align:start position:0%
walk the array element by element if you
 

00:41:36.339 --> 00:41:37.890 align:start position:0%
walk the array element by element if you
find<00:41:36.579><c> that</c><00:41:36.700><c> any</c><00:41:36.910><c> unequal</c><00:41:37.540><c> will</c><00:41:37.660><c> stop</c>

00:41:37.890 --> 00:41:37.900 align:start position:0%
find that any unequal will stop
 

00:41:37.900 --> 00:41:39.450 align:start position:0%
find that any unequal will stop
otherwise<00:41:38.200><c> we</c><00:41:38.440><c> have</c><00:41:38.530><c> to</c><00:41:38.650><c> walk</c><00:41:38.829><c> all</c><00:41:39.040><c> the</c><00:41:39.250><c> all</c>

00:41:39.450 --> 00:41:39.460 align:start position:0%
otherwise we have to walk all the all
 

00:41:39.460 --> 00:41:41.490 align:start position:0%
otherwise we have to walk all the all
the<00:41:39.670><c> area</c><00:41:39.910><c> to</c><00:41:39.970><c> the</c><00:41:40.119><c> end</c><00:41:40.270><c> see</c><00:41:41.079><c> this</c><00:41:41.230><c> little</c>

00:41:41.490 --> 00:41:41.500 align:start position:0%
the area to the end see this little
 

00:41:41.500 --> 00:41:43.589 align:start position:0%
the area to the end see this little
annotation<00:41:41.950><c> hotspot</c><00:41:42.730><c> intrinsic</c><00:41:43.150><c> candidate</c>

00:41:43.589 --> 00:41:43.599 align:start position:0%
annotation hotspot intrinsic candidate
 

00:41:43.599 --> 00:41:47.069 align:start position:0%
annotation hotspot intrinsic candidate
it<00:41:44.049><c> tells</c><00:41:44.410><c> the</c><00:41:44.559><c> VM</c><00:41:44.829><c> that</c><00:41:44.859><c> this</c><00:41:45.609><c> code</c><00:41:46.030><c> should</c><00:41:46.420><c> be</c>

00:41:47.069 --> 00:41:47.079 align:start position:0%
it tells the VM that this code should be
 

00:41:47.079 --> 00:41:49.890 align:start position:0%
it tells the VM that this code should be
potentially<00:41:47.680><c> replaced</c><00:41:48.040><c> with</c><00:41:48.510><c> something</c><00:41:49.510><c> else</c>

00:41:49.890 --> 00:41:49.900 align:start position:0%
potentially replaced with something else
 

00:41:49.900 --> 00:41:52.410 align:start position:0%
potentially replaced with something else
if<00:41:50.770><c> the</c><00:41:51.190><c> something</c><00:41:51.400><c> else</c><00:41:51.670><c> works</c><00:41:52.089><c> on</c><00:41:52.270><c> this</c>

00:41:52.410 --> 00:41:52.420 align:start position:0%
if the something else works on this
 

00:41:52.420 --> 00:41:53.910 align:start position:0%
if the something else works on this
particular<00:41:52.690><c> platform</c><00:41:53.020><c> so</c><00:41:53.410><c> this</c><00:41:53.589><c> is</c><00:41:53.710><c> platform</c>

00:41:53.910 --> 00:41:53.920 align:start position:0%
particular platform so this is platform
 

00:41:53.920 --> 00:41:56.849 align:start position:0%
particular platform so this is platform
dependent<00:41:54.280><c> and</c><00:41:54.970><c> some</c><00:41:55.869><c> other</c><00:41:55.990><c> things</c><00:41:56.230><c> come</c>

00:41:56.849 --> 00:41:56.859 align:start position:0%
dependent and some other things come
 

00:41:56.859 --> 00:42:03.900 align:start position:0%
dependent and some other things come
into<00:41:56.980><c> play</c><00:41:57.210><c> and</c><00:42:01.020><c> yeah</c><00:42:02.020><c> we</c><00:42:02.430><c> the</c><00:42:03.430><c> reason</c><00:42:03.640><c> we</c><00:42:03.760><c> show</c>

00:42:03.900 --> 00:42:03.910 align:start position:0%
into play and yeah we the reason we show
 

00:42:03.910 --> 00:42:05.730 align:start position:0%
into play and yeah we the reason we show
the<00:42:04.030><c> RS</c><00:42:04.299><c> mismatch</c><00:42:04.630><c> this</c><00:42:04.839><c> like</c><00:42:04.990><c> did</c><00:42:05.530><c> yet</c>

00:42:05.730 --> 00:42:05.740 align:start position:0%
the RS mismatch this like did yet
 

00:42:05.740 --> 00:42:07.970 align:start position:0%
the RS mismatch this like did yet
another<00:42:05.980><c> way</c><00:42:06.220><c> to</c><00:42:06.280><c> do</c><00:42:06.490><c> that</c><00:42:06.730><c> starting</c><00:42:07.270><c> with</c><00:42:07.390><c> jdk</c>

00:42:07.970 --> 00:42:07.980 align:start position:0%
another way to do that starting with jdk
 

00:42:07.980 --> 00:42:11.240 align:start position:0%
another way to do that starting with jdk
9<00:42:08.980><c> so</c><00:42:09.549><c> let's</c><00:42:09.730><c> let's</c><00:42:10.180><c> measure</c><00:42:10.359><c> the</c><00:42:10.540><c> performance</c>

00:42:11.240 --> 00:42:11.250 align:start position:0%
9 so let's let's measure the performance
 

00:42:11.250 --> 00:42:14.880 align:start position:0%
9 so let's let's measure the performance
so<00:42:12.250><c> if</c><00:42:12.460><c> we</c><00:42:12.700><c> call</c><00:42:13.599><c> string</c><00:42:13.930><c> equals</c><00:42:14.290><c> with</c>

00:42:14.880 --> 00:42:14.890 align:start position:0%
so if we call string equals with
 

00:42:14.890 --> 00:42:17.760 align:start position:0%
so if we call string equals with
different<00:42:15.190><c> length</c><00:42:15.369><c> of</c><00:42:15.460><c> the</c><00:42:15.579><c> strings</c><00:42:16.770><c> it's</c>

00:42:17.760 --> 00:42:17.770 align:start position:0%
different length of the strings it's
 

00:42:17.770 --> 00:42:21.299 align:start position:0%
different length of the strings it's
basically<00:42:18.220><c> made</c><00:42:18.940><c> fast</c><00:42:19.299><c> right</c><00:42:19.599><c> it's</c><00:42:20.380><c> close</c>

00:42:21.299 --> 00:42:21.309 align:start position:0%
basically made fast right it's close
 

00:42:21.309 --> 00:42:24.150 align:start position:0%
basically made fast right it's close
linearly<00:42:21.819><c> was</c><00:42:22.089><c> so</c><00:42:22.240><c> string</c><00:42:22.599><c> but</c><00:42:22.780><c> it's</c><00:42:23.049><c> fast</c><00:42:23.290><c> if</c>

00:42:24.150 --> 00:42:24.160 align:start position:0%
linearly was so string but it's fast if
 

00:42:24.160 --> 00:42:26.400 align:start position:0%
linearly was so string but it's fast if
we<00:42:24.400><c> do</c><00:42:24.549><c> it</c><00:42:24.700><c> manually</c><00:42:25.089><c> like</c><00:42:25.270><c> they</c><00:42:25.930><c> did</c><00:42:26.109><c> it</c><00:42:26.230><c> then</c>

00:42:26.400 --> 00:42:26.410 align:start position:0%
we do it manually like they did it then
 

00:42:26.410 --> 00:42:28.710 align:start position:0%
we do it manually like they did it then
they<00:42:26.559><c> like</c><00:42:26.890><c> working</c><00:42:27.040><c> the</c><00:42:27.309><c> array</c><00:42:27.549><c> manually</c><00:42:28.329><c> you</c>

00:42:28.710 --> 00:42:28.720 align:start position:0%
they like working the array manually you
 

00:42:28.720 --> 00:42:31.859 align:start position:0%
they like working the array manually you
see<00:42:28.930><c> that</c><00:42:29.140><c> it</c><00:42:29.650><c> degrades</c><00:42:30.040><c> way</c><00:42:30.910><c> faster</c><00:42:31.390><c> so</c><00:42:31.720><c> we</c>

00:42:31.859 --> 00:42:31.869 align:start position:0%
see that it degrades way faster so we
 

00:42:31.869 --> 00:42:33.960 align:start position:0%
see that it degrades way faster so we
have<00:42:32.049><c> some</c><00:42:32.500><c> performance</c><00:42:32.920><c> problem</c><00:42:33.190><c> and</c><00:42:33.700><c> if</c><00:42:33.849><c> you</c>

00:42:33.960 --> 00:42:33.970 align:start position:0%
have some performance problem and if you
 

00:42:33.970 --> 00:42:37.070 align:start position:0%
have some performance problem and if you
use<00:42:34.089><c> some</c><00:42:34.299><c> new</c><00:42:34.480><c> arrays</c><00:42:35.290><c> mismatch</c><00:42:35.650><c> stuff</c>

00:42:37.070 --> 00:42:37.080 align:start position:0%
use some new arrays mismatch stuff
 

00:42:37.080 --> 00:42:39.860 align:start position:0%
use some new arrays mismatch stuff
it's<00:42:37.770><c> almost</c><00:42:38.550><c> as</c><00:42:38.910><c> close</c><00:42:39.060><c> to</c><00:42:39.480><c> string</c><00:42:39.750><c> equals</c>

00:42:39.860 --> 00:42:39.870 align:start position:0%
it's almost as close to string equals
 

00:42:39.870 --> 00:42:41.510 align:start position:0%
it's almost as close to string equals
them<00:42:40.260><c> so</c><00:42:40.710><c> what</c><00:42:40.860><c> we</c><00:42:41.010><c> see</c><00:42:41.160><c> in</c><00:42:41.220><c> the</c><00:42:41.310><c> play</c><00:42:41.460><c> is</c>

00:42:41.510 --> 00:42:41.520 align:start position:0%
them so what we see in the play is
 

00:42:41.520 --> 00:42:43.700 align:start position:0%
them so what we see in the play is
actually<00:42:41.670><c> the</c><00:42:42.000><c> intrinsic</c><00:42:42.270><c> so</c><00:42:43.140><c> the</c><00:42:43.320><c> code</c><00:42:43.530><c> that</c>

00:42:43.700 --> 00:42:43.710 align:start position:0%
actually the intrinsic so the code that
 

00:42:43.710 --> 00:42:45.920 align:start position:0%
actually the intrinsic so the code that
we<00:42:43.920><c> we</c><00:42:44.430><c> saw</c><00:42:44.580><c> on</c><00:42:44.640><c> the</c><00:42:44.790><c> screen</c><00:42:44.850><c> we</c><00:42:45.240><c> copied</c><00:42:45.660><c> it</c><00:42:45.750><c> and</c>

00:42:45.920 --> 00:42:45.930 align:start position:0%
we we saw on the screen we copied it and
 

00:42:45.930 --> 00:42:48.080 align:start position:0%
we we saw on the screen we copied it and
try<00:42:46.140><c> to</c><00:42:46.200><c> run</c><00:42:46.440><c> that</c><00:42:46.620><c> but</c><00:42:47.070><c> it's</c><00:42:47.220><c> not</c><00:42:47.370><c> sure</c><00:42:47.520><c> it's</c>

00:42:48.080 --> 00:42:48.090 align:start position:0%
try to run that but it's not sure it's
 

00:42:48.090 --> 00:42:49.430 align:start position:0%
try to run that but it's not sure it's
not<00:42:48.180><c> the</c><00:42:48.300><c> coldest</c><00:42:48.660><c> thing</c><00:42:48.690><c> equals</c><00:42:49.080><c> is</c><00:42:49.200><c> using</c>

00:42:49.430 --> 00:42:49.440 align:start position:0%
not the coldest thing equals is using
 

00:42:49.440 --> 00:42:51.650 align:start position:0%
not the coldest thing equals is using
the<00:42:49.650><c> code</c><00:42:49.800><c> is</c><00:42:49.950><c> replaced</c><00:42:50.310><c> was</c><00:42:50.550><c> a</c><00:42:50.660><c> vectorized</c>

00:42:51.650 --> 00:42:51.660 align:start position:0%
the code is replaced was a vectorized
 

00:42:51.660 --> 00:42:53.450 align:start position:0%
the code is replaced was a vectorized
loop<00:42:51.990><c> essentially</c><00:42:52.650><c> instead</c><00:42:53.130><c> of</c><00:42:53.220><c> walking</c>

00:42:53.450 --> 00:42:53.460 align:start position:0%
loop essentially instead of walking
 

00:42:53.460 --> 00:42:56.210 align:start position:0%
loop essentially instead of walking
every<00:42:54.030><c> element</c><00:42:54.660><c> at</c><00:42:54.930><c> a</c><00:42:55.050><c> time</c><00:42:55.170><c> one</c><00:42:55.590><c> byte</c><00:42:55.770><c> they</c>

00:42:56.210 --> 00:42:56.220 align:start position:0%
every element at a time one byte they
 

00:42:56.220 --> 00:42:57.710 align:start position:0%
every element at a time one byte they
walk<00:42:56.430><c> eight</c><00:42:56.640><c> bytes</c><00:42:56.910><c> in</c><00:42:57.120><c> strides</c><00:42:57.480><c> of</c><00:42:57.600><c> eight</c>

00:42:57.710 --> 00:42:57.720 align:start position:0%
walk eight bytes in strides of eight
 

00:42:57.720 --> 00:43:00.020 align:start position:0%
walk eight bytes in strides of eight
bytes<00:42:57.960><c> so</c><00:42:58.560><c> you</c><00:42:59.100><c> basically</c><00:42:59.250><c> get</c><00:42:59.580><c> the</c><00:42:59.640><c> chunks</c>

00:43:00.020 --> 00:43:00.030 align:start position:0%
bytes so you basically get the chunks
 

00:43:00.030 --> 00:43:04.130 align:start position:0%
bytes so you basically get the chunks
and<00:43:00.150><c> you</c><00:43:00.330><c> he</c><00:43:01.020><c> goes</c><00:43:01.170><c> from</c><00:43:01.290><c> memory</c><00:43:01.620><c> foster</c><00:43:03.140><c> yes</c>

00:43:04.130 --> 00:43:04.140 align:start position:0%
and you he goes from memory foster yes
 

00:43:04.140 --> 00:43:05.570 align:start position:0%
and you he goes from memory foster yes
so<00:43:04.290><c> the</c><00:43:04.560><c> one</c><00:43:04.680><c> thing</c><00:43:04.890><c> which</c><00:43:05.040><c> is</c><00:43:05.070><c> interesting</c><00:43:05.250><c> is</c>

00:43:05.570 --> 00:43:05.580 align:start position:0%
so the one thing which is interesting is
 

00:43:05.580 --> 00:43:07.160 align:start position:0%
so the one thing which is interesting is
that<00:43:05.610><c> they</c><00:43:05.880><c> don't</c><00:43:05.940><c> actually</c><00:43:06.150><c> take</c><00:43:06.720><c> you</c><00:43:06.930><c> can't</c>

00:43:07.160 --> 00:43:07.170 align:start position:0%
that they don't actually take you can't
 

00:43:07.170 --> 00:43:11.480 align:start position:0%
that they don't actually take you can't
for<00:43:07.520><c> deduplication</c><00:43:08.750><c> right</c><00:43:09.750><c> so</c><00:43:10.350><c> the</c><00:43:10.800><c> in</c><00:43:11.340><c> the</c>

00:43:11.480 --> 00:43:11.490 align:start position:0%
for deduplication right so the in the
 

00:43:11.490 --> 00:43:13.550 align:start position:0%
for deduplication right so the in the
equals<00:43:11.820><c> they</c><00:43:11.970><c> it</c><00:43:12.150><c> would</c><00:43:12.300><c> make</c><00:43:12.570><c> sense</c><00:43:12.780><c> to</c><00:43:12.930><c> see</c>

00:43:13.550 --> 00:43:13.560 align:start position:0%
equals they it would make sense to see
 

00:43:13.560 --> 00:43:15.470 align:start position:0%
equals they it would make sense to see
all<00:43:13.770><c> this</c><00:43:14.040><c> other</c><00:43:14.400><c> areas</c><00:43:14.820><c> the</c><00:43:14.940><c> same</c><00:43:15.120><c> there</c><00:43:15.360><c> is</c>

00:43:15.470 --> 00:43:15.480 align:start position:0%
all this other areas the same there is
 

00:43:15.480 --> 00:43:17.570 align:start position:0%
all this other areas the same there is
the<00:43:15.570><c> same</c><00:43:15.750><c> instance</c><00:43:16.260><c> you</c><00:43:16.740><c> can</c><00:43:16.860><c> see</c><00:43:17.310><c> return</c>

00:43:17.570 --> 00:43:17.580 align:start position:0%
the same instance you can see return
 

00:43:17.580 --> 00:43:20.270 align:start position:0%
the same instance you can see return
true<00:43:17.820><c> in</c><00:43:18.120><c> the</c><00:43:18.360><c> current</c><00:43:18.690><c> string</c><00:43:18.960><c> structure</c><00:43:19.500><c> so</c>

00:43:20.270 --> 00:43:20.280 align:start position:0%
true in the current string structure so
 

00:43:20.280 --> 00:43:22.400 align:start position:0%
true in the current string structure so
that<00:43:20.580><c> would</c><00:43:21.000><c> speed</c><00:43:21.240><c> things</c><00:43:21.270><c> up</c><00:43:21.630><c> if</c><00:43:21.810><c> you're</c>

00:43:22.400 --> 00:43:22.410 align:start position:0%
that would speed things up if you're
 

00:43:22.410 --> 00:43:26.600 align:start position:0%
that would speed things up if you're
comparing<00:43:22.770><c> equal</c><00:43:23.160><c> strings</c><00:43:25.250><c> there's</c><00:43:26.250><c> a</c><00:43:26.370><c> few</c>

00:43:26.600 --> 00:43:26.610 align:start position:0%
comparing equal strings there's a few
 

00:43:26.610 --> 00:43:29.600 align:start position:0%
comparing equal strings there's a few
lessons<00:43:26.880><c> from</c><00:43:27.090><c> today</c><00:43:27.420><c> um</c><00:43:27.980><c> use</c><00:43:28.980><c> plus</c><00:43:29.310><c> and</c><00:43:29.520><c> set</c>

00:43:29.600 --> 00:43:29.610 align:start position:0%
lessons from today um use plus and set
 

00:43:29.610 --> 00:43:31.160 align:start position:0%
lessons from today um use plus and set
of<00:43:29.700><c> string</c><00:43:29.940><c> builder</c><00:43:30.060><c> wherever</c><00:43:30.630><c> possible</c><00:43:30.780><c> and</c>

00:43:31.160 --> 00:43:31.170 align:start position:0%
of string builder wherever possible and
 

00:43:31.170 --> 00:43:33.320 align:start position:0%
of string builder wherever possible and
you'd<00:43:31.800><c> have</c><00:43:31.890><c> to</c><00:43:32.040><c> recompile</c><00:43:32.550><c> your</c><00:43:32.760><c> code</c><00:43:33.060><c> to</c>

00:43:33.320 --> 00:43:33.330 align:start position:0%
you'd have to recompile your code to
 

00:43:33.330 --> 00:43:36.470 align:start position:0%
you'd have to recompile your code to
take<00:43:33.810><c> advantage</c><00:43:34.290><c> of</c><00:43:34.500><c> the</c><00:43:35.240><c> opportunity</c><00:43:36.240><c> Chazz</c>

00:43:36.470 --> 00:43:36.480 align:start position:0%
take advantage of the opportunity Chazz
 

00:43:36.480 --> 00:43:38.930 align:start position:0%
take advantage of the opportunity Chazz
we've<00:43:36.630><c> got</c><00:43:36.810><c> there</c><00:43:36.990><c> also</c><00:43:37.800><c> if</c><00:43:38.370><c> you're</c><00:43:38.670><c> gonna</c><00:43:38.790><c> use</c>

00:43:38.930 --> 00:43:38.940 align:start position:0%
we've got there also if you're gonna use
 

00:43:38.940 --> 00:43:40.370 align:start position:0%
we've got there also if you're gonna use
if<00:43:39.150><c> you</c><00:43:39.270><c> isn't</c><00:43:39.420><c> turning</c><00:43:39.750><c> your</c><00:43:39.960><c> code</c><00:43:40.170><c> and</c><00:43:40.320><c> I've</c>

00:43:40.370 --> 00:43:40.380 align:start position:0%
if you isn't turning your code and I've
 

00:43:40.380 --> 00:43:42.020 align:start position:0%
if you isn't turning your code and I've
seen<00:43:40.560><c> the</c><00:43:40.800><c> same</c><00:43:41.010><c> code</c><00:43:41.220><c> bases</c><00:43:41.670><c> where</c><00:43:41.850><c> they</c><00:43:41.970><c> are</c>

00:43:42.020 --> 00:43:42.030 align:start position:0%
seen the same code bases where they are
 

00:43:42.030 --> 00:43:44.600 align:start position:0%
seen the same code bases where they are
used<00:43:42.300><c> in</c><00:43:42.450><c> turn</c><00:43:42.630><c> extensively</c><00:43:43.320><c> rather</c><00:43:44.250><c> see</c><00:43:44.550><c> if</c>

00:43:44.600 --> 00:43:44.610 align:start position:0%
used in turn extensively rather see if
 

00:43:44.610 --> 00:43:46.190 align:start position:0%
used in turn extensively rather see if
you<00:43:44.730><c> use</c><00:43:44.850><c> your</c><00:43:44.970><c> own</c><00:43:45.090><c> cache</c><00:43:45.390><c> because</c><00:43:45.780><c> it</c><00:43:45.900><c> can</c><00:43:46.080><c> be</c>

00:43:46.190 --> 00:43:46.200 align:start position:0%
you use your own cache because it can be
 

00:43:46.200 --> 00:43:48.890 align:start position:0%
you use your own cache because it can be
many<00:43:46.530><c> factors</c><00:43:47.070><c> faster</c><00:43:47.550><c> even</c><00:43:48.360><c> with</c><00:43:48.750><c> an</c>

00:43:48.890 --> 00:43:48.900 align:start position:0%
many factors faster even with an
 

00:43:48.900 --> 00:43:51.350 align:start position:0%
many factors faster even with an
improved<00:43:49.260><c> Java</c><00:43:49.530><c> Devon</c><00:43:49.860><c> version</c><00:43:50.190><c> we</c><00:43:50.970><c> found</c><00:43:51.240><c> it</c>

00:43:51.350 --> 00:43:51.360 align:start position:0%
improved Java Devon version we found it
 

00:43:51.360 --> 00:43:53.420 align:start position:0%
improved Java Devon version we found it
to<00:43:51.450><c> be</c><00:43:51.480><c> in</c><00:43:51.750><c> a</c><00:43:51.840><c> many</c><00:43:52.110><c> many</c><00:43:52.380><c> factors</c><00:43:52.830><c> faster</c><00:43:53.280><c> to</c>

00:43:53.420 --> 00:43:53.430 align:start position:0%
to be in a many many factors faster to
 

00:43:53.430 --> 00:43:56.000 align:start position:0%
to be in a many many factors faster to
be<00:43:53.550><c> to</c><00:43:54.090><c> use</c><00:43:54.240><c> your</c><00:43:54.660><c> own</c><00:43:54.990><c> concurrent</c><00:43:55.590><c> hash</c><00:43:55.620><c> map</c>

00:43:56.000 --> 00:43:56.010 align:start position:0%
be to use your own concurrent hash map
 

00:43:56.010 --> 00:43:57.440 align:start position:0%
be to use your own concurrent hash map
for<00:43:56.310><c> especially</c><00:43:56.730><c> return</c><00:43:57.060><c> of</c><00:43:57.150><c> too</c><00:43:57.300><c> many</c>

00:43:57.440 --> 00:43:57.450 align:start position:0%
for especially return of too many
 

00:43:57.450 --> 00:44:00.500 align:start position:0%
for especially return of too many
strings<00:43:57.660><c> it</c><00:43:58.200><c> can</c><00:43:58.410><c> make</c><00:43:58.560><c> big</c><00:43:58.740><c> difference</c><00:43:59.510><c> how</c>

00:44:00.500 --> 00:44:00.510 align:start position:0%
strings it can make big difference how
 

00:44:00.510 --> 00:44:01.960 align:start position:0%
strings it can make big difference how
she<00:44:00.570><c> can</c><00:44:00.900><c> be</c><00:44:00.930><c> expensive</c><00:44:01.320><c> on</c><00:44:01.500><c> strings</c>

00:44:01.960 --> 00:44:01.970 align:start position:0%
she can be expensive on strings
 

00:44:01.970 --> 00:44:04.490 align:start position:0%
she can be expensive on strings
especially<00:44:02.970><c> if</c><00:44:03.390><c> the</c><00:44:03.450><c> hash</c><00:44:03.600><c> resolves</c><00:44:04.140><c> to</c><00:44:04.200><c> zero</c>

00:44:04.490 --> 00:44:04.500 align:start position:0%
especially if the hash resolves to zero
 

00:44:04.500 --> 00:44:06.470 align:start position:0%
especially if the hash resolves to zero
and<00:44:05.190><c> there's</c><00:44:05.340><c> not</c><00:44:05.430><c> much</c><00:44:05.730><c> they</c><00:44:05.970><c> can</c><00:44:06.030><c> do</c><00:44:06.300><c> about</c>

00:44:06.470 --> 00:44:06.480 align:start position:0%
and there's not much they can do about
 

00:44:06.480 --> 00:44:06.950 align:start position:0%
and there's not much they can do about
that

00:44:06.950 --> 00:44:06.960 align:start position:0%
that
 

00:44:06.960 --> 00:44:08.420 align:start position:0%
that
you<00:44:07.080><c> know</c><00:44:07.200><c> they</c><00:44:07.320><c> can't</c><00:44:07.710><c> change</c><00:44:07.980><c> the</c><00:44:08.070><c> default</c>

00:44:08.420 --> 00:44:08.430 align:start position:0%
you know they can't change the default
 

00:44:08.430 --> 00:44:10.280 align:start position:0%
you know they can't change the default
value<00:44:08.700><c> of</c><00:44:08.730><c> hash</c><00:44:08.970><c> because</c><00:44:09.510><c> that</c><00:44:09.840><c> would</c><00:44:10.110><c> produce</c>

00:44:10.280 --> 00:44:10.290 align:start position:0%
value of hash because that would produce
 

00:44:10.290 --> 00:44:13.190 align:start position:0%
value of hash because that would produce
a<00:44:11.010><c> data</c><00:44:11.730><c> race</c><00:44:12.030><c> on</c><00:44:12.240><c> the</c><00:44:12.450><c> string</c><00:44:12.660><c> itself</c><00:44:12.960><c> which</c>

00:44:13.190 --> 00:44:13.200 align:start position:0%
a data race on the string itself which
 

00:44:13.200 --> 00:44:15.440 align:start position:0%
a data race on the string itself which
we've<00:44:13.350><c> quite</c><00:44:13.500><c> dangerous</c><00:44:13.770><c> to</c><00:44:13.950><c> have</c><00:44:14.450><c> doing</c>

00:44:15.440 --> 00:44:15.450 align:start position:0%
we've quite dangerous to have doing
 

00:44:15.450 --> 00:44:18.080 align:start position:0%
we've quite dangerous to have doing
absolutely<00:44:15.780><c> cannot</c><00:44:16.050><c> have</c><00:44:16.260><c> a</c><00:44:16.700><c> dangerous</c><00:44:17.700><c> data</c>

00:44:18.080 --> 00:44:18.090 align:start position:0%
absolutely cannot have a dangerous data
 

00:44:18.090 --> 00:44:21.350 align:start position:0%
absolutely cannot have a dangerous data
rate<00:44:18.380><c> happen</c><00:44:19.380><c> and</c><00:44:19.560><c> also</c><00:44:20.550><c> since</c><00:44:20.940><c> over</c><00:44:21.210><c> nine</c>

00:44:21.350 --> 00:44:21.360 align:start position:0%
rate happen and also since over nine
 

00:44:21.360 --> 00:44:23.450 align:start position:0%
rate happen and also since over nine
we've<00:44:21.660><c> had</c><00:44:21.870><c> byte</c><00:44:22.260><c> arrays</c><00:44:22.650><c> for</c><00:44:22.920><c> Strings</c><00:44:23.190><c> not</c>

00:44:23.450 --> 00:44:23.460 align:start position:0%
we've had byte arrays for Strings not
 

00:44:23.460 --> 00:44:25.220 align:start position:0%
we've had byte arrays for Strings not
Charlie's<00:44:24.000><c> just</c><00:44:24.660><c> remember</c><00:44:24.960><c> when</c><00:44:25.080><c> you're</c>

00:44:25.220 --> 00:44:25.230 align:start position:0%
Charlie's just remember when you're
 

00:44:25.230 --> 00:44:28.610 align:start position:0%
Charlie's just remember when you're
looking<00:44:25.290><c> at</c><00:44:25.650><c> your</c><00:44:26.330><c> at</c><00:44:27.330><c> your</c><00:44:27.440><c> profiling</c><00:44:28.440><c> that</c>

00:44:28.610 --> 00:44:28.620 align:start position:0%
looking at your at your profiling that
 

00:44:28.620 --> 00:44:30.350 align:start position:0%
looking at your at your profiling that
you're<00:44:29.100><c> looking</c><00:44:29.310><c> for</c><00:44:29.490><c> byte</c><00:44:29.670><c> arrays</c><00:44:30.000><c> for</c>

00:44:30.350 --> 00:44:30.360 align:start position:0%
you're looking for byte arrays for
 

00:44:30.360 --> 00:44:32.270 align:start position:0%
you're looking for byte arrays for
Strings<00:44:30.600><c> not</c><00:44:30.810><c> Charles</c><00:44:31.380><c> since</c><00:44:31.740><c> Java</c><00:44:31.950><c> nine</c>

00:44:32.270 --> 00:44:32.280 align:start position:0%
Strings not Charles since Java nine
 

00:44:32.280 --> 00:44:35.390 align:start position:0%
Strings not Charles since Java nine
onwards<00:44:32.700><c> we've</c><00:44:33.690><c> got</c><00:44:33.900><c> the</c><00:44:34.110><c> the</c><00:44:34.380><c> benchmarks</c><00:44:34.980><c> on</c>

00:44:35.390 --> 00:44:35.400 align:start position:0%
onwards we've got the the benchmarks on
 

00:44:35.400 --> 00:44:38.750 align:start position:0%
onwards we've got the the benchmarks on
our<00:44:35.820><c> on</c><00:44:35.970><c> my</c><00:44:36.150><c> on</c><00:44:36.480><c> my</c><00:44:36.660><c> github</c><00:44:37.350><c> carpet</c><00:44:38.040><c> string</c>

00:44:38.750 --> 00:44:38.760 align:start position:0%
our on my on my github carpet string
 

00:44:38.760 --> 00:44:41.720 align:start position:0%
our on my on my github carpet string
performance<00:44:39.210><c> and</c><00:44:39.600><c> you</c><00:44:40.560><c> mother</c><00:44:41.010><c> welcome</c><00:44:41.310><c> to</c><00:44:41.520><c> to</c>

00:44:41.720 --> 00:44:41.730 align:start position:0%
performance and you mother welcome to to
 

00:44:41.730 --> 00:44:43.820 align:start position:0%
performance and you mother welcome to to
comment<00:44:42.090><c> and</c><00:44:42.240><c> to</c><00:44:42.300><c> run</c><00:44:43.140><c> the</c><00:44:43.170><c> taste</c><00:44:43.500><c> this</c><00:44:43.620><c> off</c>

00:44:43.820 --> 00:44:43.830 align:start position:0%
comment and to run the taste this off
 

00:44:43.830 --> 00:44:46.120 align:start position:0%
comment and to run the taste this off
and<00:44:44.070><c> try</c><00:44:44.310><c> and</c><00:44:44.430><c> break</c><00:44:45.000><c> as</c><00:44:45.270><c> much</c><00:44:45.420><c> as</c><00:44:45.600><c> you</c><00:44:45.690><c> can</c>

00:44:46.120 --> 00:44:46.130 align:start position:0%
and try and break as much as you can
 

00:44:46.130 --> 00:44:48.810 align:start position:0%
and try and break as much as you can
always<00:44:47.130><c> happy</c><00:44:47.520><c> for</c><00:44:47.640><c> feedback</c>

00:44:48.810 --> 00:44:48.820 align:start position:0%
always happy for feedback
 

00:44:48.820 --> 00:44:51.210 align:start position:0%
always happy for feedback
is<00:44:49.540><c> what</c><00:44:50.020><c> one</c><00:44:50.260><c> last</c><00:44:50.500><c> thing</c><00:44:50.710><c> which</c><00:44:50.830><c> was</c><00:44:51.070><c> quite</c>

00:44:51.210 --> 00:44:51.220 align:start position:0%
is what one last thing which was quite
 

00:44:51.220 --> 00:44:53.120 align:start position:0%
is what one last thing which was quite
interesting<00:44:51.280><c> with</c><00:44:51.730><c> intrinsics</c>

00:44:53.120 --> 00:44:53.130 align:start position:0%
interesting with intrinsics
 

00:44:53.130 --> 00:44:58.020 align:start position:0%
interesting with intrinsics
just<00:44:54.130><c> a</c><00:44:54.280><c> weird</c><00:44:54.760><c> puzzle</c><00:44:55.030><c> so</c><00:44:56.490><c> Intel</c><00:44:57.490><c> had</c><00:44:58.000><c> a</c>

00:44:58.020 --> 00:44:58.030 align:start position:0%
just a weird puzzle so Intel had a
 

00:44:58.030 --> 00:45:02.250 align:start position:0%
just a weird puzzle so Intel had a
machine<00:44:58.980><c> at</c><00:44:59.980><c> inter</c><00:45:00.720><c> other</c><00:45:01.720><c> performance</c>

00:45:02.250 --> 00:45:02.260 align:start position:0%
machine at inter other performance
 

00:45:02.260 --> 00:45:03.990 align:start position:0%
machine at inter other performance
course<00:45:02.500><c> the</c><00:45:02.740><c> end</c><00:45:02.860><c> and</c><00:45:03.130><c> are</c><00:45:03.460><c> often</c><00:45:03.610><c> attributed</c>

00:45:03.990 --> 00:45:04.000 align:start position:0%
course the end and are often attributed
 

00:45:04.000 --> 00:45:07.920 align:start position:0%
course the end and are often attributed
machine<00:45:04.540><c> way</c><00:45:05.230><c> sometimes</c><00:45:05.950><c> the</c><00:45:06.820><c> the</c><00:45:07.240><c> equals</c>

00:45:07.920 --> 00:45:07.930 align:start position:0%
machine way sometimes the the equals
 

00:45:07.930 --> 00:45:10.800 align:start position:0%
machine way sometimes the the equals
method<00:45:08.080><c> now</c><00:45:08.920><c> sometimes</c><00:45:09.370><c> the</c><00:45:09.520><c> the</c><00:45:10.060><c> compare</c><00:45:10.540><c> to</c>

00:45:10.800 --> 00:45:10.810 align:start position:0%
method now sometimes the the compare to
 

00:45:10.810 --> 00:45:13.650 align:start position:0%
method now sometimes the the compare to
method<00:45:11.250><c> would</c><00:45:12.250><c> come</c><00:45:12.520><c> back</c><00:45:12.670><c> with</c><00:45:12.730><c> zero</c><00:45:13.240><c> on</c><00:45:13.420><c> on</c>

00:45:13.650 --> 00:45:13.660 align:start position:0%
method would come back with zero on on
 

00:45:13.660 --> 00:45:17.250 align:start position:0%
method would come back with zero on on
two<00:45:13.990><c> different</c><00:45:14.200><c> strings</c><00:45:15.960><c> so</c><00:45:16.960><c> two</c><00:45:17.140><c> different</c>

00:45:17.250 --> 00:45:17.260 align:start position:0%
two different strings so two different
 

00:45:17.260 --> 00:45:19.650 align:start position:0%
two different strings so two different
strings<00:45:17.710><c> on</c><00:45:18.040><c> that</c><00:45:18.220><c> one</c><00:45:18.430><c> machine</c><00:45:18.660><c> would</c>

00:45:19.650 --> 00:45:19.660 align:start position:0%
strings on that one machine would
 

00:45:19.660 --> 00:45:21.780 align:start position:0%
strings on that one machine would
sometimes<00:45:19.960><c> give</c><00:45:20.500><c> back</c><00:45:20.710><c> 0</c><00:45:20.950><c> when</c><00:45:21.190><c> it</c><00:45:21.280><c> was</c><00:45:21.460><c> two</c>

00:45:21.780 --> 00:45:21.790 align:start position:0%
sometimes give back 0 when it was two
 

00:45:21.790 --> 00:45:26.130 align:start position:0%
sometimes give back 0 when it was two
different<00:45:22.090><c> strings</c><00:45:23.220><c> okay</c><00:45:24.220><c> and</c><00:45:24.600><c> and</c><00:45:25.600><c> we</c><00:45:25.780><c> we</c>

00:45:26.130 --> 00:45:26.140 align:start position:0%
different strings okay and and we we
 

00:45:26.140 --> 00:45:28.410 align:start position:0%
different strings okay and and we we
actually<00:45:26.500><c> got</c><00:45:26.770><c> it</c><00:45:26.920><c> down</c><00:45:27.100><c> to</c><00:45:27.310><c> a</c><00:45:27.460><c> race</c><00:45:27.910><c> condition</c>

00:45:28.410 --> 00:45:28.420 align:start position:0%
actually got it down to a race condition
 

00:45:28.420 --> 00:45:31.860 align:start position:0%
actually got it down to a race condition
between<00:45:28.510><c> intrinsics</c><00:45:29.290><c> and</c><00:45:29.610><c> and</c><00:45:30.610><c> and</c><00:45:31.450><c> and</c><00:45:31.810><c> the</c>

00:45:31.860 --> 00:45:31.870 align:start position:0%
between intrinsics and and and and the
 

00:45:31.870 --> 00:45:34.950 align:start position:0%
between intrinsics and and and and the
normal<00:45:32.200><c> you</c><00:45:32.440><c> know</c><00:45:32.470><c> interpreted</c><00:45:33.160><c> code</c><00:45:33.750><c> way</c><00:45:34.750><c> it</c>

00:45:34.950 --> 00:45:34.960 align:start position:0%
normal you know interpreted code way it
 

00:45:34.960 --> 00:45:37.110 align:start position:0%
normal you know interpreted code way it
and<00:45:35.320><c> when</c><00:45:35.710><c> they</c><00:45:35.830><c> turned</c><00:45:36.070><c> off</c><00:45:36.310><c> intrinsics</c>

00:45:37.110 --> 00:45:37.120 align:start position:0%
and when they turned off intrinsics
 

00:45:37.120 --> 00:45:39.150 align:start position:0%
and when they turned off intrinsics
this<00:45:37.480><c> was</c><00:45:37.630><c> a</c><00:45:37.660><c> very</c><00:45:38.050><c> specific</c><00:45:38.290><c> version</c><00:45:38.860><c> of</c><00:45:38.920><c> Java</c>

00:45:39.150 --> 00:45:39.160 align:start position:0%
this was a very specific version of Java
 

00:45:39.160 --> 00:45:41.190 align:start position:0%
this was a very specific version of Java
eight<00:45:39.340><c> running</c><00:45:40.060><c> on</c><00:45:40.150><c> a</c><00:45:40.240><c> very</c><00:45:40.480><c> very</c><00:45:40.600><c> specific</c>

00:45:41.190 --> 00:45:41.200 align:start position:0%
eight running on a very very specific
 

00:45:41.200 --> 00:45:43.380 align:start position:0%
eight running on a very very specific
machine<00:45:41.890><c> so</c><00:45:42.490><c> it</c><00:45:42.550><c> could</c><00:45:42.700><c> have</c><00:45:42.790><c> been</c><00:45:42.880><c> a</c><00:45:42.940><c> hard</c><00:45:43.270><c> way</c>

00:45:43.380 --> 00:45:43.390 align:start position:0%
machine so it could have been a hard way
 

00:45:43.390 --> 00:45:45.600 align:start position:0%
machine so it could have been a hard way
back<00:45:43.630><c> quite</c><00:45:43.960><c> quite</c><00:45:44.200><c> possibly</c><00:45:44.650><c> because</c><00:45:45.430><c> then</c>

00:45:45.600 --> 00:45:45.610 align:start position:0%
back quite quite possibly because then
 

00:45:45.610 --> 00:45:46.800 align:start position:0%
back quite quite possibly because then
they're<00:45:45.760><c> upgraded</c><00:45:46.210><c> the</c><00:45:46.270><c> hard</c><00:45:46.450><c> way</c><00:45:46.600><c> and</c><00:45:46.630><c> that</c>

00:45:46.800 --> 00:45:46.810 align:start position:0%
they're upgraded the hard way and that
 

00:45:46.810 --> 00:45:48.180 align:start position:0%
they're upgraded the hard way and that
bug<00:45:47.020><c> went</c><00:45:47.260><c> away</c><00:45:47.410><c> so</c><00:45:47.530><c> we</c><00:45:47.740><c> can</c><00:45:47.830><c> never</c><00:45:47.980><c> reproduce</c>

00:45:48.180 --> 00:45:48.190 align:start position:0%
bug went away so we can never reproduce
 

00:45:48.190 --> 00:45:49.980 align:start position:0%
bug went away so we can never reproduce
it<00:45:48.460><c> again</c><00:45:48.640><c> there's</c><00:45:49.300><c> quite</c><00:45:49.480><c> quite</c><00:45:49.690><c> a</c><00:45:49.720><c> funny</c>

00:45:49.980 --> 00:45:49.990 align:start position:0%
it again there's quite quite a funny
 

00:45:49.990 --> 00:45:52.980 align:start position:0%
it again there's quite quite a funny
little<00:45:50.160><c> race</c><00:45:51.160><c> conditioning</c><00:45:51.670><c> so</c><00:45:52.510><c> this</c><00:45:52.660><c> is</c><00:45:52.840><c> it</c>

00:45:52.980 --> 00:45:52.990 align:start position:0%
little race conditioning so this is it
 

00:45:52.990 --> 00:45:55.020 align:start position:0%
little race conditioning so this is it
from<00:45:53.170><c> us</c><00:45:53.320><c> thanks</c><00:45:54.160><c> much</c><00:45:54.310><c> for</c><00:45:54.340><c> listening</c><00:45:54.730><c> thanks</c>

00:45:55.020 --> 00:45:55.030 align:start position:0%
from us thanks much for listening thanks
 

00:45:55.030 --> 00:45:57.780 align:start position:0%
from us thanks much for listening thanks
Dimitri<00:45:55.210><c> and</c><00:45:55.950><c> else</c><00:45:56.950><c> if</c><00:45:57.160><c> there</c><00:45:57.250><c> is</c><00:45:57.340><c> a</c><00:45:57.370><c> surprise</c>

00:45:57.780 --> 00:45:57.790 align:start position:0%
Dimitri and else if there is a surprise
 

00:45:57.790 --> 00:46:00.870 align:start position:0%
Dimitri and else if there is a surprise
if<00:45:58.000><c> you</c><00:45:58.030><c> go</c><00:45:58.270><c> there</c><00:45:58.650><c> if</c><00:45:59.650><c> you</c><00:45:59.800><c> don't</c><00:45:59.980><c> well</c><00:46:00.340><c> later</c>

00:46:00.870 --> 00:46:00.880 align:start position:0%
if you go there if you don't well later
 

00:46:00.880 --> 00:46:02.100 align:start position:0%
if you go there if you don't well later
on<00:46:01.030><c> there'll</c><00:46:01.210><c> be</c><00:46:01.270><c> another</c><00:46:01.450><c> surprise</c><00:46:01.840><c> on</c><00:46:02.020><c> this</c>

00:46:02.100 --> 00:46:02.110 align:start position:0%
on there'll be another surprise on this
 

00:46:02.110 --> 00:46:03.810 align:start position:0%
on there'll be another surprise on this
deal<00:46:02.290><c> thanks</c><00:46:03.100><c> any</c><00:46:03.190><c> questions</c><00:46:03.580><c> we've</c><00:46:03.670><c> got</c>

00:46:03.810 --> 00:46:03.820 align:start position:0%
deal thanks any questions we've got
 

00:46:03.820 --> 00:46:05.730 align:start position:0%
deal thanks any questions we've got
about<00:46:04.020><c> there</c><00:46:05.020><c> for</c><00:46:05.170><c> four</c><00:46:05.350><c> minutes</c><00:46:05.620><c> for</c>

00:46:05.730 --> 00:46:05.740 align:start position:0%
about there for four minutes for
 

00:46:05.740 --> 00:46:06.210 align:start position:0%
about there for four minutes for
questions

00:46:06.210 --> 00:46:06.220 align:start position:0%
questions
 

00:46:06.220 --> 00:46:12.640 align:start position:0%
questions
lots<00:46:07.000><c> of</c><00:46:07.120><c> lots</c><00:46:07.330><c> of</c><00:46:07.480><c> time</c><00:46:08.700><c> yes</c><00:46:09.700><c> sir</c>

00:46:12.640 --> 00:46:12.650 align:start position:0%
 
 

00:46:12.650 --> 00:46:15.860 align:start position:0%
 
Java<00:46:13.650><c> theá--</c><00:46:13.980><c> we've</c><00:46:14.700><c> got</c><00:46:14.910><c> in</c><00:46:15.090><c> Java</c><00:46:15.360><c> 12</c><00:46:15.660><c> that's</c>

00:46:15.860 --> 00:46:15.870 align:start position:0%
Java theá-- we've got in Java 12 that's
 

00:46:15.870 --> 00:46:18.080 align:start position:0%
Java theá-- we've got in Java 12 that's
not<00:46:16.320><c> enough</c><00:46:16.560><c> changes</c><00:46:16.920><c> we've</c><00:46:17.130><c> that</c><00:46:17.820><c> we</c><00:46:17.940><c> could</c>

00:46:18.080 --> 00:46:18.090 align:start position:0%
not enough changes we've that we could
 

00:46:18.090 --> 00:46:20.000 align:start position:0%
not enough changes we've that we could
attend<00:46:18.360><c> so</c><00:46:18.600><c> driver</c><00:46:19.140><c> 12</c><00:46:19.350><c> is</c><00:46:19.440><c> the</c><00:46:19.470><c> same</c><00:46:19.680><c> store</c>

00:46:20.000 --> 00:46:20.010 align:start position:0%
attend so driver 12 is the same store
 

00:46:20.010 --> 00:46:23.030 align:start position:0%
attend so driver 12 is the same store
whatever<00:46:20.360><c> they've</c><00:46:21.360><c> got</c><00:46:21.600><c> these</c><00:46:21.750><c> these</c><00:46:22.710><c> are</c>

00:46:23.030 --> 00:46:23.040 align:start position:0%
whatever they've got these these are
 

00:46:23.040 --> 00:46:30.790 align:start position:0%
whatever they've got these these are
what<00:46:23.670><c> are</c><00:46:23.790><c> called</c><00:46:23.940><c> the</c><00:46:24.000><c> strings</c><00:46:28.760><c> one</c><00:46:29.760><c> is</c><00:46:29.970><c> the</c>

00:46:30.790 --> 00:46:30.800 align:start position:0%
what are called the strings one is the
 

00:46:30.800 --> 00:46:33.220 align:start position:0%
what are called the strings one is the
string<00:46:31.800><c> literals</c><00:46:32.250><c> where</c><00:46:32.520><c> you</c><00:46:32.670><c> can</c><00:46:32.880><c> you</c><00:46:33.030><c> know</c>

00:46:33.220 --> 00:46:33.230 align:start position:0%
string literals where you can you know
 

00:46:33.230 --> 00:46:36.740 align:start position:0%
string literals where you can you know
like<00:46:34.230><c> have</c><00:46:35.010><c> three</c><00:46:35.520><c> quotes</c><00:46:35.820><c> open</c><00:46:36.480><c> and</c><00:46:36.630><c> then</c>

00:46:36.740 --> 00:46:36.750 align:start position:0%
like have three quotes open and then
 

00:46:36.750 --> 00:46:38.840 align:start position:0%
like have three quotes open and then
write<00:46:36.960><c> free-floating</c><00:46:37.500><c> thing</c><00:46:37.950><c> that's</c><00:46:38.610><c> gonna</c>

00:46:38.840 --> 00:46:38.850 align:start position:0%
write free-floating thing that's gonna
 

00:46:38.850 --> 00:46:40.580 align:start position:0%
write free-floating thing that's gonna
happen<00:46:39.330><c> and</c><00:46:39.510><c> bunch</c><00:46:39.720><c> of</c><00:46:39.870><c> methods</c><00:46:40.020><c> that</c><00:46:40.230><c> relate</c>

00:46:40.580 --> 00:46:40.590 align:start position:0%
happen and bunch of methods that relate
 

00:46:40.590 --> 00:46:42.860 align:start position:0%
happen and bunch of methods that relate
to<00:46:40.620><c> that</c><00:46:40.770><c> when</c><00:46:41.760><c> we</c><00:46:41.790><c> don't</c><00:46:42.030><c> know</c><00:46:42.180><c> maybe</c><00:46:42.390><c> 13</c>

00:46:42.860 --> 00:46:42.870 align:start position:0%
to that when we don't know maybe 13
 

00:46:42.870 --> 00:46:44.480 align:start position:0%
to that when we don't know maybe 13
maybe<00:46:43.110><c> not</c><00:46:43.290><c> they</c><00:46:43.440><c> pushed</c><00:46:43.680><c> it</c><00:46:43.740><c> out</c><00:46:43.860><c> of</c><00:46:44.070><c> 12</c><00:46:44.310><c> so</c>

00:46:44.480 --> 00:46:44.490 align:start position:0%
maybe not they pushed it out of 12 so
 

00:46:44.490 --> 00:46:48.410 align:start position:0%
maybe not they pushed it out of 12 so
that<00:46:44.520><c> might</c><00:46:44.820><c> come</c><00:46:45.320><c> other</c><00:46:46.320><c> one</c><00:46:46.620><c> is</c><00:46:46.860><c> the</c><00:46:47.420><c> string</c>

00:46:48.410 --> 00:46:48.420 align:start position:0%
that might come other one is the string
 

00:46:48.420 --> 00:46:50.690 align:start position:0%
that might come other one is the string
format<00:46:48.930><c> and</c><00:46:49.230><c> the</c><00:46:49.320><c> original</c><00:46:49.650><c> object</c><00:46:49.800><c> objects</c>

00:46:50.690 --> 00:46:50.700 align:start position:0%
format and the original object objects
 

00:46:50.700 --> 00:46:54.500 align:start position:0%
format and the original object objects
hash<00:46:50.880><c> code</c><00:46:51.150><c> that's</c><00:46:51.840><c> the</c><00:46:52.110><c> the</c><00:46:52.470><c> amber</c><00:46:53.280><c> stuff</c><00:46:54.120><c> as</c>

00:46:54.500 --> 00:46:54.510 align:start position:0%
hash code that's the the amber stuff as
 

00:46:54.510 --> 00:46:56.030 align:start position:0%
hash code that's the the amber stuff as
I<00:46:54.570><c> said</c><00:46:54.840><c> there</c><00:46:54.990><c> is</c><00:46:55.020><c> jab</c><00:46:55.290><c> three</c><00:46:55.590><c> four</c><00:46:55.950><c> eight</c>

00:46:56.030 --> 00:46:56.040 align:start position:0%
I said there is jab three four eight
 

00:46:56.040 --> 00:46:57.620 align:start position:0%
I said there is jab three four eight
candidate<00:46:56.640><c> state</c><00:46:56.880><c> it's</c><00:46:57.090><c> not</c><00:46:57.270><c> slated</c><00:46:57.600><c> for</c>

00:46:57.620 --> 00:46:57.630 align:start position:0%
candidate state it's not slated for
 

00:46:57.630 --> 00:46:59.960 align:start position:0%
candidate state it's not slated for
release<00:46:57.840><c> so</c><00:46:58.710><c> that's</c><00:46:59.220><c> another</c><00:46:59.460><c> thing</c><00:46:59.580><c> that</c><00:46:59.820><c> has</c>

00:46:59.960 --> 00:46:59.970 align:start position:0%
release so that's another thing that has
 

00:46:59.970 --> 00:47:02.330 align:start position:0%
release so that's another thing that has
gonna<00:47:00.120><c> happen</c><00:47:00.540><c> and</c><00:47:00.780><c> but</c><00:47:01.770><c> other</c><00:47:02.100><c> than</c><00:47:02.280><c> that</c>

00:47:02.330 --> 00:47:02.340 align:start position:0%
gonna happen and but other than that
 

00:47:02.340 --> 00:47:04.820 align:start position:0%
gonna happen and but other than that
string<00:47:02.910><c> specific</c><00:47:03.450><c> guys</c><00:47:03.630><c> I</c><00:47:03.960><c> don't</c><00:47:04.260><c> know</c><00:47:04.380><c> so</c>

00:47:04.820 --> 00:47:04.830 align:start position:0%
string specific guys I don't know so
 

00:47:04.830 --> 00:47:07.670 align:start position:0%
string specific guys I don't know so
there's<00:47:05.310><c> two</c><00:47:05.490><c> things</c><00:47:05.670><c> I</c><00:47:06.030><c> mean</c><00:47:06.450><c> the</c><00:47:06.540><c> changes</c><00:47:06.990><c> as</c>

00:47:07.670 --> 00:47:07.680 align:start position:0%
there's two things I mean the changes as
 

00:47:07.680 --> 00:47:09.170 align:start position:0%
there's two things I mean the changes as
you<00:47:07.770><c> know</c><00:47:07.890><c> from</c><00:47:08.100><c> Java</c><00:47:08.370><c> cemetery</c><00:47:08.820><c> we're</c><00:47:09.000><c> quite</c>

00:47:09.170 --> 00:47:09.180 align:start position:0%
you know from Java cemetery we're quite
 

00:47:09.180 --> 00:47:11.330 align:start position:0%
you know from Java cemetery we're quite
dramatic<00:47:09.690><c> and</c><00:47:10.470><c> drop</c><00:47:10.650><c> eighty-nine</c><00:47:11.040><c> squatter</c>

00:47:11.330 --> 00:47:11.340 align:start position:0%
dramatic and drop eighty-nine squatter
 

00:47:11.340 --> 00:47:12.710 align:start position:0%
dramatic and drop eighty-nine squatter
met<00:47:11.550><c> nowadays</c><00:47:11.910><c> it's</c><00:47:12.120><c> like</c><00:47:12.270><c> you</c><00:47:12.510><c> know</c><00:47:12.600><c> every</c>

00:47:12.710 --> 00:47:12.720 align:start position:0%
met nowadays it's like you know every
 

00:47:12.720 --> 00:47:14.240 align:start position:0%
met nowadays it's like you know every
half<00:47:12.990><c> a</c><00:47:13.110><c> year</c><00:47:13.290><c> but</c><00:47:13.440><c> the</c><00:47:13.590><c> change</c><00:47:13.830><c> is</c><00:47:13.920><c> not</c><00:47:14.100><c> it's</c>

00:47:14.240 --> 00:47:14.250 align:start position:0%
half a year but the change is not it's
 

00:47:14.250 --> 00:47:17.690 align:start position:0%
half a year but the change is not it's
not<00:47:14.340><c> as</c><00:47:14.580><c> big</c><00:47:14.790><c> impact</c><00:47:15.150><c> anymore</c><00:47:15.540><c> so</c><00:47:16.260><c> I</c><00:47:16.680><c> don't</c><00:47:17.040><c> I'm</c>

00:47:17.690 --> 00:47:17.700 align:start position:0%
not as big impact anymore so I don't I'm
 

00:47:17.700 --> 00:47:19.760 align:start position:0%
not as big impact anymore so I don't I'm
not<00:47:17.880><c> sure</c><00:47:18.030><c> what</c><00:47:18.180><c> they'll</c><00:47:18.360><c> do</c><00:47:18.510><c> is</c><00:47:19.320><c> anybody</c>

00:47:19.760 --> 00:47:19.770 align:start position:0%
not sure what they'll do is anybody
 

00:47:19.770 --> 00:47:27.340 align:start position:0%
not sure what they'll do is anybody
using<00:47:20.220><c> something</c><00:47:20.460><c> other</c><00:47:20.820><c> than</c><00:47:21.030><c> eight</c><00:47:21.270><c> like</c>

00:47:27.340 --> 00:47:27.350 align:start position:0%
 
 

00:47:27.350 --> 00:47:33.440 align:start position:0%
 
this<00:47:28.350><c> obviously</c><00:47:28.770><c> obviously</c><00:47:31.970><c> cartoons</c><00:47:32.970><c> Java</c><00:47:33.240><c> 8</c>

00:47:33.440 --> 00:47:33.450 align:start position:0%
this obviously obviously cartoons Java 8
 

00:47:33.450 --> 00:47:35.240 align:start position:0%
this obviously obviously cartoons Java 8
introduction<00:47:34.200><c> safely</c><00:47:34.830><c> anymore</c><00:47:35.100><c> I</c><00:47:35.130><c> don't</c>

00:47:35.240 --> 00:47:35.250 align:start position:0%
introduction safely anymore I don't
 

00:47:35.250 --> 00:47:42.670 align:start position:0%
introduction safely anymore I don't
think

00:47:42.670 --> 00:47:42.680 align:start position:0%
 
 

00:47:42.680 --> 00:47:48.100 align:start position:0%
 
[Applause]

