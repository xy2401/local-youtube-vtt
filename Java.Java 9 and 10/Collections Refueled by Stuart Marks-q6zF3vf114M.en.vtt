WEBVTT
Kind: captions
Language: en

00:00:00.200 --> 00:00:02.860 align:start position:0%
 
[Music]

00:00:02.860 --> 00:00:02.870 align:start position:0%
[Music]
 

00:00:02.870 --> 00:00:03.980 align:start position:0%
[Music]
coming

00:00:03.980 --> 00:00:03.990 align:start position:0%
coming
 

00:00:03.990 --> 00:00:06.110 align:start position:0%
coming
my<00:00:04.140><c> name</c><00:00:04.290><c> is</c><00:00:04.380><c> two</c><00:00:04.529><c> remarks</c><00:00:04.890><c> to</c><00:00:05.250><c> work</c><00:00:05.430><c> in</c><00:00:06.000><c> the</c>

00:00:06.110 --> 00:00:06.120 align:start position:0%
my name is two remarks to work in the
 

00:00:06.120 --> 00:00:09.230 align:start position:0%
my name is two remarks to work in the
core<00:00:06.450><c> libraries</c><00:00:06.779><c> team</c><00:00:07.220><c> in</c><00:00:08.220><c> the</c><00:00:08.790><c> Java</c><00:00:09.030><c> platform</c>

00:00:09.230 --> 00:00:09.240 align:start position:0%
core libraries team in the Java platform
 

00:00:09.240 --> 00:00:11.870 align:start position:0%
core libraries team in the Java platform
group<00:00:09.630><c> at</c><00:00:09.900><c> Oracle</c><00:00:10.290><c> I</c><00:00:10.469><c> work</c><00:00:10.740><c> on</c><00:00:10.889><c> Java</c><00:00:11.219><c> and</c><00:00:11.460><c> the</c>

00:00:11.870 --> 00:00:11.880 align:start position:0%
group at Oracle I work on Java and the
 

00:00:11.880 --> 00:00:14.600 align:start position:0%
group at Oracle I work on Java and the
JDK<00:00:12.300><c> and</c><00:00:12.570><c> one</c><00:00:13.139><c> of</c><00:00:13.230><c> the</c><00:00:13.290><c> things</c><00:00:13.469><c> I</c><00:00:13.769><c> work</c><00:00:14.070><c> on</c><00:00:14.280><c> is</c>

00:00:14.600 --> 00:00:14.610 align:start position:0%
JDK and one of the things I work on is
 

00:00:14.610 --> 00:00:17.810 align:start position:0%
JDK and one of the things I work on is
the<00:00:14.880><c> collections</c><00:00:15.240><c> framework</c><00:00:15.890><c> so</c><00:00:16.890><c> the</c><00:00:17.369><c> talk</c>

00:00:17.810 --> 00:00:17.820 align:start position:0%
the collections framework so the talk
 

00:00:17.820 --> 00:00:21.260 align:start position:0%
the collections framework so the talk
today<00:00:17.970><c> is</c><00:00:18.090><c> collections</c><00:00:18.900><c> refueled</c><00:00:19.770><c> and</c><00:00:20.699><c> so</c>

00:00:21.260 --> 00:00:21.270 align:start position:0%
today is collections refueled and so
 

00:00:21.270 --> 00:00:23.000 align:start position:0%
today is collections refueled and so
collections<00:00:22.020><c> has</c><00:00:22.140><c> long</c><00:00:22.320><c> history</c><00:00:22.740><c> I'm</c><00:00:22.949><c> going</c>

00:00:23.000 --> 00:00:23.010 align:start position:0%
collections has long history I'm going
 

00:00:23.010 --> 00:00:25.179 align:start position:0%
collections has long history I'm going
to<00:00:23.100><c> do</c><00:00:23.250><c> a</c><00:00:23.279><c> very</c><00:00:23.760><c> very</c><00:00:24.119><c> brief</c><00:00:24.330><c> history</c><00:00:24.660><c> that</c><00:00:24.869><c> I</c>

00:00:25.179 --> 00:00:25.189 align:start position:0%
to do a very very brief history that I
 

00:00:25.189 --> 00:00:27.650 align:start position:0%
to do a very very brief history that I
am<00:00:26.189><c> going</c><00:00:26.460><c> to</c><00:00:26.550><c> spend</c><00:00:26.789><c> some</c><00:00:27.269><c> time</c><00:00:27.480><c> talking</c>

00:00:27.650 --> 00:00:27.660 align:start position:0%
am going to spend some time talking
 

00:00:27.660 --> 00:00:28.880 align:start position:0%
am going to spend some time talking
about<00:00:27.869><c> Java</c><00:00:28.289><c> 8</c>

00:00:28.880 --> 00:00:28.890 align:start position:0%
about Java 8
 

00:00:28.890 --> 00:00:30.290 align:start position:0%
about Java 8
even<00:00:29.160><c> though</c><00:00:29.250><c> Java</c><00:00:29.490><c> 8</c><00:00:29.699><c> has</c><00:00:29.820><c> been</c><00:00:29.849><c> out</c><00:00:30.060><c> for</c>

00:00:30.290 --> 00:00:30.300 align:start position:0%
even though Java 8 has been out for
 

00:00:30.300 --> 00:00:34.360 align:start position:0%
even though Java 8 has been out for
almost<00:00:30.510><c> 3</c><00:00:31.170><c> years</c><00:00:31.199><c> now</c><00:00:32.540><c> there</c><00:00:33.540><c> are</c><00:00:33.809><c> some</c>

00:00:34.360 --> 00:00:34.370 align:start position:0%
almost 3 years now there are some
 

00:00:34.370 --> 00:00:36.889 align:start position:0%
almost 3 years now there are some
interesting<00:00:35.370><c> features</c><00:00:35.880><c> that</c><00:00:36.210><c> were</c><00:00:36.540><c> added</c><00:00:36.570><c> to</c>

00:00:36.889 --> 00:00:36.899 align:start position:0%
interesting features that were added to
 

00:00:36.899 --> 00:00:38.780 align:start position:0%
interesting features that were added to
collections<00:00:37.260><c> Java</c><00:00:37.559><c> 8</c><00:00:37.800><c> that</c><00:00:38.010><c> don't</c><00:00:38.219><c> seem</c><00:00:38.520><c> to</c>

00:00:38.780 --> 00:00:38.790 align:start position:0%
collections Java 8 that don't seem to
 

00:00:38.790 --> 00:00:40.040 align:start position:0%
collections Java 8 that don't seem to
get<00:00:38.969><c> enough</c><00:00:39.059><c> publicity</c><00:00:39.660><c> so</c><00:00:39.809><c> I'm</c><00:00:39.899><c> going</c><00:00:40.020><c> to</c>

00:00:40.040 --> 00:00:40.050 align:start position:0%
get enough publicity so I'm going to
 

00:00:40.050 --> 00:00:41.840 align:start position:0%
get enough publicity so I'm going to
talk<00:00:40.230><c> about</c><00:00:40.379><c> those</c><00:00:40.710><c> a</c><00:00:40.739><c> little</c><00:00:40.980><c> bit</c><00:00:41.129><c> and</c><00:00:41.460><c> then</c>

00:00:41.840 --> 00:00:41.850 align:start position:0%
talk about those a little bit and then
 

00:00:41.850 --> 00:00:44.529 align:start position:0%
talk about those a little bit and then
move<00:00:42.030><c> on</c><00:00:42.180><c> to</c><00:00:42.329><c> some</c><00:00:42.660><c> new</c><00:00:42.690><c> features</c><00:00:43.079><c> in</c><00:00:43.230><c> Java</c><00:00:43.410><c> 9</c>

00:00:44.529 --> 00:00:44.539 align:start position:0%
move on to some new features in Java 9
 

00:00:44.539 --> 00:00:47.900 align:start position:0%
move on to some new features in Java 9
so<00:00:45.539><c> there's</c><00:00:45.840><c> a</c><00:00:45.899><c> Twitter</c><00:00:46.170><c> hashtag</c><00:00:46.910><c> collections</c>

00:00:47.900 --> 00:00:47.910 align:start position:0%
so there's a Twitter hashtag collections
 

00:00:47.910 --> 00:00:49.279 align:start position:0%
so there's a Twitter hashtag collections
revealed<00:00:48.329><c> you</c><00:00:48.480><c> can</c><00:00:48.570><c> see</c><00:00:48.719><c> that</c><00:00:48.870><c> up</c><00:00:48.989><c> at</c><00:00:49.110><c> the</c>

00:00:49.279 --> 00:00:49.289 align:start position:0%
revealed you can see that up at the
 

00:00:49.289 --> 00:00:53.299 align:start position:0%
revealed you can see that up at the
upper<00:00:49.860><c> right</c><00:00:50.360><c> so</c><00:00:51.360><c> if</c><00:00:51.480><c> you</c><00:00:51.600><c> want</c><00:00:51.780><c> to</c><00:00:51.960><c> tweet</c><00:00:52.680><c> to</c>

00:00:53.299 --> 00:00:53.309 align:start position:0%
upper right so if you want to tweet to
 

00:00:53.309 --> 00:00:55.340 align:start position:0%
upper right so if you want to tweet to
me<00:00:53.699><c> during</c><00:00:53.969><c> or</c><00:00:54.270><c> after</c><00:00:54.480><c> the</c><00:00:54.690><c> presentation</c><00:00:55.230><c> I</c>

00:00:55.340 --> 00:00:55.350 align:start position:0%
me during or after the presentation I
 

00:00:55.350 --> 00:00:59.000 align:start position:0%
me during or after the presentation I
will<00:00:55.500><c> look</c><00:00:56.070><c> at</c><00:00:56.160><c> that</c><00:00:56.250><c> hashtag</c><00:00:56.489><c> and</c><00:00:57.920><c> respond</c><00:00:58.920><c> to</c>

00:00:59.000 --> 00:00:59.010 align:start position:0%
will look at that hashtag and respond to
 

00:00:59.010 --> 00:01:01.069 align:start position:0%
will look at that hashtag and respond to
any<00:00:59.129><c> questions</c><00:00:59.250><c> there</c><00:00:59.699><c> or</c><00:00:59.910><c> it's</c><00:01:00.359><c> a</c><00:01:00.480><c> small</c><00:01:00.840><c> it's</c>

00:01:01.069 --> 00:01:01.079 align:start position:0%
any questions there or it's a small it's
 

00:01:01.079 --> 00:01:02.959 align:start position:0%
any questions there or it's a small it's
a<00:01:01.199><c> small</c><00:01:01.440><c> crowd</c><00:01:01.620><c> if</c><00:01:01.800><c> I</c><00:01:01.859><c> have</c><00:01:02.010><c> time</c><00:01:02.219><c> we</c><00:01:02.370><c> can</c><00:01:02.520><c> take</c>

00:01:02.959 --> 00:01:02.969 align:start position:0%
a small crowd if I have time we can take
 

00:01:02.969 --> 00:01:05.359 align:start position:0%
a small crowd if I have time we can take
questions<00:01:03.090><c> at</c><00:01:03.480><c> the</c><00:01:03.510><c> end</c><00:01:03.799><c> and</c><00:01:04.799><c> I'll</c><00:01:05.040><c> be</c><00:01:05.159><c> around</c>

00:01:05.359 --> 00:01:05.369 align:start position:0%
questions at the end and I'll be around
 

00:01:05.369 --> 00:01:06.289 align:start position:0%
questions at the end and I'll be around
the<00:01:05.460><c> conference</c><00:01:05.820><c> for</c><00:01:05.909><c> the</c><00:01:06.000><c> rest</c><00:01:06.150><c> of</c><00:01:06.240><c> the</c>

00:01:06.289 --> 00:01:06.299 align:start position:0%
the conference for the rest of the
 

00:01:06.299 --> 00:01:11.359 align:start position:0%
the conference for the rest of the
afternoon<00:01:06.420><c> as</c><00:01:06.869><c> well</c><00:01:09.200><c> alright</c><00:01:10.200><c> so</c><00:01:10.260><c> history</c><00:01:11.070><c> of</c>

00:01:11.359 --> 00:01:11.369 align:start position:0%
afternoon as well alright so history of
 

00:01:11.369 --> 00:01:15.590 align:start position:0%
afternoon as well alright so history of
collections<00:01:12.170><c> so</c><00:01:13.170><c> Java</c><00:01:13.950><c> is</c><00:01:14.250><c> now</c><00:01:14.610><c> over</c><00:01:15.150><c> 20</c><00:01:15.420><c> years</c>

00:01:15.590 --> 00:01:15.600 align:start position:0%
collections so Java is now over 20 years
 

00:01:15.600 --> 00:01:24.530 align:start position:0%
collections so Java is now over 20 years
old<00:01:15.840><c> and</c><00:01:19.220><c> the</c><00:01:22.490><c> collections</c><00:01:23.490><c> framework</c><00:01:23.640><c> is</c><00:01:24.030><c> not</c>

00:01:24.530 --> 00:01:24.540 align:start position:0%
old and the collections framework is not
 

00:01:24.540 --> 00:01:27.770 align:start position:0%
old and the collections framework is not
quite<00:01:24.990><c> as</c><00:01:25.229><c> old</c><00:01:25.439><c> as</c><00:01:25.619><c> Java</c><00:01:25.890><c> it</c><00:01:26.159><c> is</c><00:01:26.700><c> is</c><00:01:27.509><c> almost</c>

00:01:27.770 --> 00:01:27.780 align:start position:0%
quite as old as Java it is is almost
 

00:01:27.780 --> 00:01:32.319 align:start position:0%
quite as old as Java it is is almost
almost<00:01:28.590><c> twenty</c><00:01:28.920><c> years</c><00:01:28.950><c> old</c><00:01:29.310><c> the</c><00:01:29.960><c> java</c><00:01:30.960><c> 1.0</c><00:01:31.590><c> was</c>

00:01:32.319 --> 00:01:32.329 align:start position:0%
almost twenty years old the java 1.0 was
 

00:01:32.329 --> 00:01:34.280 align:start position:0%
almost twenty years old the java 1.0 was
introduced<00:01:33.329><c> with</c><00:01:33.540><c> what</c><00:01:33.780><c> we</c><00:01:33.869><c> now</c><00:01:34.020><c> call</c><00:01:34.229><c> the</c>

00:01:34.280 --> 00:01:34.290 align:start position:0%
introduced with what we now call the
 

00:01:34.290 --> 00:01:35.870 align:start position:0%
introduced with what we now call the
legacy<00:01:34.829><c> collection</c><00:01:35.040><c> so</c><00:01:35.520><c> there</c><00:01:35.670><c> was</c><00:01:35.759><c> no</c>

00:01:35.870 --> 00:01:35.880 align:start position:0%
legacy collection so there was no
 

00:01:35.880 --> 00:01:37.310 align:start position:0%
legacy collection so there was no
collections<00:01:36.360><c> framework</c><00:01:36.509><c> in</c><00:01:37.020><c> the</c><00:01:37.140><c> very</c>

00:01:37.310 --> 00:01:37.320 align:start position:0%
collections framework in the very
 

00:01:37.320 --> 00:01:40.520 align:start position:0%
collections framework in the very
beginning<00:01:37.470><c> the</c><00:01:38.310><c> old</c><00:01:38.460><c> things</c><00:01:38.759><c> vector</c><00:01:39.659><c> and</c><00:01:39.990><c> hash</c>

00:01:40.520 --> 00:01:40.530 align:start position:0%
beginning the old things vector and hash
 

00:01:40.530 --> 00:01:43.039 align:start position:0%
beginning the old things vector and hash
table<00:01:40.920><c> or</c><00:01:41.189><c> hash</c><00:01:41.670><c> table</c><00:01:42.000><c> as</c><00:01:42.180><c> some</c><00:01:42.570><c> of</c><00:01:42.689><c> us</c><00:01:42.780><c> call</c>

00:01:43.039 --> 00:01:43.049 align:start position:0%
table or hash table as some of us call
 

00:01:43.049 --> 00:01:46.219 align:start position:0%
table or hash table as some of us call
it<00:01:43.170><c> but</c><00:01:44.070><c> those</c><00:01:44.189><c> were</c><00:01:44.399><c> replaced</c><00:01:44.790><c> in</c><00:01:44.970><c> jdk</c><00:01:45.390><c> 1.2</c>

00:01:46.219 --> 00:01:46.229 align:start position:0%
it but those were replaced in jdk 1.2
 

00:01:46.229 --> 00:01:48.139 align:start position:0%
it but those were replaced in jdk 1.2
and<00:01:46.590><c> that's</c><00:01:46.979><c> the</c><00:01:47.159><c> collection</c><00:01:47.520><c> framework</c><00:01:47.939><c> that</c>

00:01:48.139 --> 00:01:48.149 align:start position:0%
and that's the collection framework that
 

00:01:48.149 --> 00:01:49.789 align:start position:0%
and that's the collection framework that
we're<00:01:48.329><c> all</c><00:01:48.450><c> familiar</c><00:01:48.600><c> with</c><00:01:48.899><c> with</c><00:01:49.649><c> the</c>

00:01:49.789 --> 00:01:49.799 align:start position:0%
we're all familiar with with the
 

00:01:49.799 --> 00:01:52.700 align:start position:0%
we're all familiar with with the
interfaces<00:01:50.369><c> collection</c><00:01:50.970><c> list</c><00:01:51.329><c> set</c><00:01:52.049><c> map</c><00:01:52.350><c> and</c>

00:01:52.700 --> 00:01:52.710 align:start position:0%
interfaces collection list set map and
 

00:01:52.710 --> 00:01:55.010 align:start position:0%
interfaces collection list set map and
so<00:01:52.950><c> forth</c><00:01:53.189><c> and</c><00:01:53.369><c> the</c><00:01:54.119><c> concrete</c><00:01:54.390><c> classes</c><00:01:54.689><c> to</c>

00:01:55.010 --> 00:01:55.020 align:start position:0%
so forth and the concrete classes to
 

00:01:55.020 --> 00:01:58.880 align:start position:0%
so forth and the concrete classes to
back<00:01:55.170><c> them</c><00:01:55.380><c> up</c><00:01:55.880><c> the</c><00:01:56.880><c> usual</c><00:01:57.570><c> usual</c><00:01:58.380><c> suspects</c>

00:01:58.880 --> 00:01:58.890 align:start position:0%
back them up the usual usual suspects
 

00:01:58.890 --> 00:02:02.510 align:start position:0%
back them up the usual usual suspects
ArrayList<00:01:59.610><c> hash</c><00:02:00.299><c> map</c><00:02:00.570><c> hash</c><00:02:00.960><c> set</c><00:02:01.259><c> and</c><00:02:01.500><c> so</c><00:02:02.250><c> forth</c>

00:02:02.510 --> 00:02:02.520 align:start position:0%
ArrayList hash map hash set and so forth
 

00:02:02.520 --> 00:02:05.240 align:start position:0%
ArrayList hash map hash set and so forth
so<00:02:03.329><c> those</c><00:02:03.479><c> were</c><00:02:03.630><c> introduced</c><00:02:04.049><c> in</c><00:02:04.200><c> 1998</c><00:02:04.770><c> and</c><00:02:05.159><c> so</c>

00:02:05.240 --> 00:02:05.250 align:start position:0%
so those were introduced in 1998 and so
 

00:02:05.250 --> 00:02:08.089 align:start position:0%
so those were introduced in 1998 and so
that<00:02:05.340><c> was</c><00:02:05.460><c> nineteen</c><00:02:05.909><c> years</c><00:02:06.119><c> ago</c><00:02:06.270><c> and</c><00:02:06.750><c> so</c><00:02:07.530><c> those</c>

00:02:08.089 --> 00:02:08.099 align:start position:0%
that was nineteen years ago and so those
 

00:02:08.099 --> 00:02:12.949 align:start position:0%
that was nineteen years ago and so those
are<00:02:08.340><c> in</c><00:02:08.610><c> in</c><00:02:08.970><c> use</c><00:02:10.069><c> daily</c><00:02:11.099><c> in</c><00:02:12.030><c> fact</c><00:02:12.599><c> the</c><00:02:12.750><c> paper</c>

00:02:12.949 --> 00:02:12.959 align:start position:0%
are in in use daily in fact the paper
 

00:02:12.959 --> 00:02:13.559 align:start position:0%
are in in use daily in fact the paper
just<00:02:13.170><c> came</c><00:02:13.260><c> out</c>

00:02:13.559 --> 00:02:13.569 align:start position:0%
just came out
 

00:02:13.569 --> 00:02:16.229 align:start position:0%
just came out
a few<00:02:14.140><c> weeks</c><00:02:14.230><c> ago</c><00:02:14.379><c> or</c><00:02:14.790><c> actuals</c><00:02:15.790><c> pre-published</c>

00:02:16.229 --> 00:02:16.239 align:start position:0%
a few weeks ago or actuals pre-published
 

00:02:16.239 --> 00:02:17.250 align:start position:0%
a few weeks ago or actuals pre-published
it's<00:02:16.420><c> going</c><00:02:16.540><c> to</c><00:02:16.599><c> be</c><00:02:16.689><c> published</c><00:02:17.140><c> at</c><00:02:17.230><c> the</c>

00:02:17.250 --> 00:02:17.260 align:start position:0%
it's going to be published at the
 

00:02:17.260 --> 00:02:19.970 align:start position:0%
it's going to be published at the
conference<00:02:17.680><c> this</c><00:02:17.909><c> this</c><00:02:18.909><c> summer</c><00:02:19.150><c> I</c><00:02:19.239><c> think</c>

00:02:19.970 --> 00:02:19.980 align:start position:0%
conference this this summer I think
 

00:02:19.980 --> 00:02:22.530 align:start position:0%
conference this this summer I think
basically<00:02:20.980><c> did</c><00:02:21.159><c> an</c><00:02:21.489><c> empirical</c><00:02:22.060><c> study</c><00:02:22.299><c> of</c><00:02:22.389><c> the</c>

00:02:22.530 --> 00:02:22.540 align:start position:0%
basically did an empirical study of the
 

00:02:22.540 --> 00:02:24.179 align:start position:0%
basically did an empirical study of the
usage<00:02:22.870><c> of</c><00:02:22.959><c> collections</c><00:02:23.469><c> and</c><00:02:23.620><c> it</c><00:02:23.920><c> turns</c><00:02:24.099><c> out</c>

00:02:24.179 --> 00:02:24.189 align:start position:0%
usage of collections and it turns out
 

00:02:24.189 --> 00:02:26.069 align:start position:0%
usage of collections and it turns out
ArrayList<00:02:24.730><c> surprise</c><00:02:25.150><c> surprise</c><00:02:25.510><c> is</c><00:02:25.749><c> the</c><00:02:25.900><c> most</c>

00:02:26.069 --> 00:02:26.079 align:start position:0%
ArrayList surprise surprise is the most
 

00:02:26.079 --> 00:02:28.649 align:start position:0%
ArrayList surprise surprise is the most
used<00:02:26.290><c> collection</c><00:02:26.709><c> in</c><00:02:26.859><c> Java</c><00:02:27.099><c> some</c><00:02:27.730><c> some</c><00:02:28.299><c> very</c>

00:02:28.649 --> 00:02:28.659 align:start position:0%
used collection in Java some some very
 

00:02:28.659 --> 00:02:30.869 align:start position:0%
used collection in Java some some very
large<00:02:28.840><c> fraction</c><00:02:29.170><c> might</c><00:02:30.159><c> have</c><00:02:30.280><c> even</c><00:02:30.519><c> been</c><00:02:30.730><c> a</c>

00:02:30.869 --> 00:02:30.879 align:start position:0%
large fraction might have even been a
 

00:02:30.879 --> 00:02:32.569 align:start position:0%
large fraction might have even been a
majority<00:02:31.150><c> of</c><00:02:31.389><c> uses</c><00:02:31.719><c> of</c><00:02:31.750><c> collections</c><00:02:32.349><c> our</c>

00:02:32.569 --> 00:02:32.579 align:start position:0%
majority of uses of collections our
 

00:02:32.579 --> 00:02:37.740 align:start position:0%
majority of uses of collections our
ArrayList<00:02:34.230><c> so</c><00:02:35.230><c> moving</c><00:02:35.620><c> on</c><00:02:35.799><c> quickly</c><00:02:36.069><c> in</c><00:02:36.609><c> Java</c><00:02:37.269><c> 5</c>

00:02:37.740 --> 00:02:37.750 align:start position:0%
ArrayList so moving on quickly in Java 5
 

00:02:37.750 --> 00:02:41.069 align:start position:0%
ArrayList so moving on quickly in Java 5
in<00:02:38.310><c> 2004</c><00:02:39.510><c> generics</c><00:02:40.510><c> were</c><00:02:40.629><c> added</c><00:02:40.959><c> to</c><00:02:41.019><c> the</c>

00:02:41.069 --> 00:02:41.079 align:start position:0%
in 2004 generics were added to the
 

00:02:41.079 --> 00:02:43.709 align:start position:0%
in 2004 generics were added to the
language<00:02:41.200><c> and</c><00:02:41.739><c> that</c><00:02:41.829><c> had</c><00:02:42.700><c> a</c><00:02:42.730><c> huge</c><00:02:43.120><c> impact</c><00:02:43.299><c> on</c>

00:02:43.709 --> 00:02:43.719 align:start position:0%
language and that had a huge impact on
 

00:02:43.719 --> 00:02:45.780 align:start position:0%
language and that had a huge impact on
the<00:02:43.930><c> collections</c><00:02:44.379><c> api's</c><00:02:44.799><c> and</c><00:02:45.249><c> so</c><00:02:45.370><c> by</c><00:02:45.579><c> now</c><00:02:45.760><c> I</c>

00:02:45.780 --> 00:02:45.790 align:start position:0%
the collections api's and so by now I
 

00:02:45.790 --> 00:02:47.399 align:start position:0%
the collections api's and so by now I
hope<00:02:46.060><c> everybody</c><00:02:46.540><c> is</c><00:02:46.599><c> converted</c><00:02:47.079><c> over</c><00:02:47.290><c> to</c>

00:02:47.399 --> 00:02:47.409 align:start position:0%
hope everybody is converted over to
 

00:02:47.409 --> 00:02:50.339 align:start position:0%
hope everybody is converted over to
using<00:02:47.980><c> genericized</c><00:02:48.969><c> collections</c><00:02:49.719><c> instead</c><00:02:50.200><c> of</c>

00:02:50.339 --> 00:02:50.349 align:start position:0%
using genericized collections instead of
 

00:02:50.349 --> 00:02:52.379 align:start position:0%
using genericized collections instead of
instead<00:02:50.859><c> of</c><00:02:51.010><c> the</c><00:02:51.129><c> original</c><00:02:51.219><c> raw</c><00:02:51.760><c> collections</c>

00:02:52.379 --> 00:02:52.389 align:start position:0%
instead of the original raw collections
 

00:02:52.389 --> 00:02:57.569 align:start position:0%
instead of the original raw collections
and<00:02:55.079><c> the</c><00:02:56.079><c> other</c><00:02:56.260><c> big</c><00:02:56.409><c> addition</c><00:02:56.769><c> in</c><00:02:56.889><c> Java</c><00:02:57.099><c> 5</c><00:02:57.370><c> was</c>

00:02:57.569 --> 00:02:57.579 align:start position:0%
and the other big addition in Java 5 was
 

00:02:57.579 --> 00:02:59.099 align:start position:0%
and the other big addition in Java 5 was
the<00:02:57.730><c> addition</c><00:02:58.060><c> of</c><00:02:58.269><c> the</c><00:02:58.480><c> concurrent</c>

00:02:59.099 --> 00:02:59.109 align:start position:0%
the addition of the concurrent
 

00:02:59.109 --> 00:03:01.379 align:start position:0%
the addition of the concurrent
collections<00:02:59.760><c> I'm</c><00:03:00.760><c> not</c><00:03:00.969><c> going</c><00:03:01.090><c> to</c><00:03:01.150><c> be</c><00:03:01.209><c> talking</c>

00:03:01.379 --> 00:03:01.389 align:start position:0%
collections I'm not going to be talking
 

00:03:01.389 --> 00:03:02.759 align:start position:0%
collections I'm not going to be talking
about<00:03:01.540><c> those</c><00:03:01.810><c> today</c><00:03:02.109><c> but</c><00:03:02.139><c> that's</c><00:03:02.469><c> a</c><00:03:02.590><c> whole</c>

00:03:02.759 --> 00:03:02.769 align:start position:0%
about those today but that's a whole
 

00:03:02.769 --> 00:03:05.789 align:start position:0%
about those today but that's a whole
whole<00:03:03.310><c> kind</c><00:03:03.549><c> of</c><00:03:03.609><c> related</c><00:03:04.389><c> framework</c><00:03:04.959><c> that</c><00:03:05.590><c> has</c>

00:03:05.789 --> 00:03:05.799 align:start position:0%
whole kind of related framework that has
 

00:03:05.799 --> 00:03:07.140 align:start position:0%
whole kind of related framework that has
some<00:03:06.040><c> overlap</c><00:03:06.340><c> with</c><00:03:06.639><c> the</c><00:03:06.730><c> collections</c>

00:03:07.140 --> 00:03:07.150 align:start position:0%
some overlap with the collections
 

00:03:07.150 --> 00:03:10.080 align:start position:0%
some overlap with the collections
framework<00:03:07.799><c> and</c><00:03:08.799><c> then</c><00:03:08.889><c> along</c><00:03:09.189><c> the</c><00:03:09.219><c> way</c><00:03:09.340><c> various</c>

00:03:10.080 --> 00:03:10.090 align:start position:0%
framework and then along the way various
 

00:03:10.090 --> 00:03:13.110 align:start position:0%
framework and then along the way various
individual<00:03:10.810><c> implementations</c><00:03:11.560><c> were</c><00:03:11.709><c> added</c><00:03:12.120><c> in</c>

00:03:13.110 --> 00:03:13.120 align:start position:0%
individual implementations were added in
 

00:03:13.120 --> 00:03:14.970 align:start position:0%
individual implementations were added in
various<00:03:13.480><c> releases</c><00:03:13.959><c> such</c><00:03:14.199><c> as</c><00:03:14.409><c> a</c><00:03:14.439><c> ray</c><00:03:14.739><c> deck</c>

00:03:14.970 --> 00:03:14.980 align:start position:0%
various releases such as a ray deck
 

00:03:14.980 --> 00:03:17.399 align:start position:0%
various releases such as a ray deck
priority<00:03:15.489><c> to</c><00:03:15.699><c> you</c><00:03:16.299><c> know</c><00:03:16.419><c> new</c><00:03:16.840><c> mapping</c><00:03:17.109><c> room</c>

00:03:17.399 --> 00:03:17.409 align:start position:0%
priority to you know new mapping room
 

00:03:17.409 --> 00:03:19.530 align:start position:0%
priority to you know new mapping room
set<00:03:17.680><c> and</c><00:03:17.949><c> so</c><00:03:18.310><c> forth</c><00:03:18.549><c> so</c><00:03:19.150><c> those</c><00:03:19.299><c> are</c><00:03:19.419><c> very</c>

00:03:19.530 --> 00:03:19.540 align:start position:0%
set and so forth so those are very
 

00:03:19.540 --> 00:03:20.939 align:start position:0%
set and so forth so those are very
specialized<00:03:20.049><c> collections</c><00:03:20.530><c> they</c><00:03:20.680><c> don't</c><00:03:20.829><c> get</c>

00:03:20.939 --> 00:03:20.949 align:start position:0%
specialized collections they don't get
 

00:03:20.949 --> 00:03:22.679 align:start position:0%
specialized collections they don't get
much<00:03:21.159><c> general</c><00:03:21.549><c> use</c><00:03:21.790><c> but</c><00:03:22.030><c> when</c><00:03:22.180><c> you</c><00:03:22.299><c> need</c><00:03:22.509><c> them</c>

00:03:22.679 --> 00:03:22.689 align:start position:0%
much general use but when you need them
 

00:03:22.689 --> 00:03:24.860 align:start position:0%
much general use but when you need them
they're<00:03:22.989><c> there</c><00:03:23.229><c> and</c><00:03:23.439><c> they</c><00:03:23.949><c> are</c><00:03:23.979><c> really</c><00:03:24.129><c> useful</c>

00:03:24.860 --> 00:03:24.870 align:start position:0%
they're there and they are really useful
 

00:03:24.870 --> 00:03:28.439 align:start position:0%
they're there and they are really useful
alright<00:03:25.900><c> so</c><00:03:26.169><c> Java</c><00:03:26.769><c> 8</c><00:03:27.449><c> collections</c>

00:03:28.439 --> 00:03:28.449 align:start position:0%
alright so Java 8 collections
 

00:03:28.449 --> 00:03:32.399 align:start position:0%
alright so Java 8 collections
enhancements<00:03:29.430><c> so</c><00:03:30.430><c> I</c><00:03:30.790><c> think</c><00:03:31.419><c> most</c><00:03:31.689><c> people</c><00:03:32.109><c> are</c>

00:03:32.399 --> 00:03:32.409 align:start position:0%
enhancements so I think most people are
 

00:03:32.409 --> 00:03:35.339 align:start position:0%
enhancements so I think most people are
aware<00:03:32.709><c> that</c><00:03:32.769><c> the</c><00:03:33.549><c> big</c><00:03:33.729><c> features</c><00:03:34.090><c> of</c><00:03:34.120><c> Java</c><00:03:35.079><c> 8</c>

00:03:35.339 --> 00:03:35.349 align:start position:0%
aware that the big features of Java 8
 

00:03:35.349 --> 00:03:37.890 align:start position:0%
aware that the big features of Java 8
were<00:03:35.709><c> lambdas</c><00:03:36.669><c> were</c><00:03:37.419><c> added</c><00:03:37.750><c> to</c><00:03:37.870><c> the</c>

00:03:37.890 --> 00:03:37.900 align:start position:0%
were lambdas were added to the
 

00:03:37.900 --> 00:03:39.869 align:start position:0%
were lambdas were added to the
programming<00:03:38.500><c> language</c><00:03:38.829><c> and</c><00:03:39.069><c> the</c><00:03:39.129><c> streams</c><00:03:39.669><c> API</c>

00:03:39.869 --> 00:03:39.879 align:start position:0%
programming language and the streams API
 

00:03:39.879 --> 00:03:43.830 align:start position:0%
programming language and the streams API
was<00:03:40.870><c> was</c><00:03:41.530><c> added</c><00:03:41.829><c> to</c><00:03:41.949><c> the</c><00:03:42.009><c> core</c><00:03:42.159><c> libraries</c><00:03:42.840><c> so</c>

00:03:43.830 --> 00:03:43.840 align:start position:0%
was was added to the core libraries so
 

00:03:43.840 --> 00:03:46.379 align:start position:0%
was was added to the core libraries so
you<00:03:44.439><c> know</c><00:03:44.759><c> really</c><00:03:45.759><c> interesting</c><00:03:46.209><c> feature</c>

00:03:46.379 --> 00:03:46.389 align:start position:0%
you know really interesting feature
 

00:03:46.389 --> 00:03:48.539 align:start position:0%
you know really interesting feature
really<00:03:46.780><c> useful</c><00:03:47.139><c> I</c><00:03:47.379><c> hope</c><00:03:47.739><c> everybody</c><00:03:48.280><c> is</c><00:03:48.370><c> using</c>

00:03:48.539 --> 00:03:48.549 align:start position:0%
really useful I hope everybody is using
 

00:03:48.549 --> 00:03:53.159 align:start position:0%
really useful I hope everybody is using
them<00:03:49.769><c> but</c><00:03:51.120><c> backing</c><00:03:52.120><c> them</c><00:03:52.269><c> up</c><00:03:52.419><c> are</c><00:03:52.689><c> some</c>

00:03:53.159 --> 00:03:53.169 align:start position:0%
them but backing them up are some
 

00:03:53.169 --> 00:03:55.110 align:start position:0%
them but backing them up are some
additional<00:03:53.560><c> language</c><00:03:54.519><c> features</c><00:03:54.849><c> in</c>

00:03:55.110 --> 00:03:55.120 align:start position:0%
additional language features in
 

00:03:55.120 --> 00:03:57.780 align:start position:0%
additional language features in
particular<00:03:56.159><c> interfaces</c><00:03:57.159><c> can</c><00:03:57.370><c> now</c><00:03:57.519><c> have</c>

00:03:57.780 --> 00:03:57.790 align:start position:0%
particular interfaces can now have
 

00:03:57.790 --> 00:04:00.689 align:start position:0%
particular interfaces can now have
default<00:03:58.359><c> methods</c><00:03:58.810><c> and</c><00:03:59.049><c> static</c><00:03:59.949><c> methods</c><00:04:00.310><c> so</c>

00:04:00.689 --> 00:04:00.699 align:start position:0%
default methods and static methods so
 

00:04:00.699 --> 00:04:02.189 align:start position:0%
default methods and static methods so
that's<00:04:00.909><c> that's</c><00:04:01.150><c> an</c><00:04:01.359><c> interesting</c><00:04:01.840><c> language</c>

00:04:02.189 --> 00:04:02.199 align:start position:0%
that's that's an interesting language
 

00:04:02.199 --> 00:04:04.140 align:start position:0%
that's that's an interesting language
feature<00:04:02.409><c> I'm</c><00:04:03.040><c> not</c><00:04:03.189><c> going</c><00:04:03.340><c> to</c><00:04:03.400><c> talk</c><00:04:03.579><c> about</c><00:04:03.909><c> the</c>

00:04:04.140 --> 00:04:04.150 align:start position:0%
feature I'm not going to talk about the
 

00:04:04.150 --> 00:04:07.289 align:start position:0%
feature I'm not going to talk about the
language<00:04:05.219><c> enhancements</c><00:04:06.219><c> themselves</c><00:04:06.939><c> what</c><00:04:07.269><c> I</c>

00:04:07.289 --> 00:04:07.299 align:start position:0%
language enhancements themselves what I
 

00:04:07.299 --> 00:04:10.319 align:start position:0%
language enhancements themselves what I
do<00:04:07.419><c> want</c><00:04:07.810><c> to</c><00:04:07.870><c> talk</c><00:04:08.049><c> about</c><00:04:08.379><c> is</c><00:04:08.680><c> the</c><00:04:09.310><c> way</c><00:04:09.549><c> we</c><00:04:09.849><c> use</c>

00:04:10.319 --> 00:04:10.329 align:start position:0%
do want to talk about is the way we use
 

00:04:10.329 --> 00:04:13.619 align:start position:0%
do want to talk about is the way we use
those<00:04:10.689><c> language</c><00:04:11.169><c> features</c><00:04:11.530><c> in</c><00:04:11.829><c> the</c><00:04:12.759><c> JDK</c><00:04:13.209><c> to</c>

00:04:13.619 --> 00:04:13.629 align:start position:0%
those language features in the JDK to
 

00:04:13.629 --> 00:04:16.439 align:start position:0%
those language features in the JDK to
enhance<00:04:13.989><c> the</c><00:04:14.169><c> collection</c><00:04:14.590><c> framework</c><00:04:14.979><c> in</c><00:04:15.449><c> JDK</c>

00:04:16.439 --> 00:04:16.449 align:start position:0%
enhance the collection framework in JDK
 

00:04:16.449 --> 00:04:19.979 align:start position:0%
enhance the collection framework in JDK
8<00:04:16.479><c> and</c><00:04:17.019><c> so</c><00:04:17.590><c> what</c><00:04:17.769><c> we</c><00:04:17.859><c> did</c><00:04:18.009><c> was</c><00:04:18.630><c> for</c><00:04:19.630><c> the</c><00:04:19.750><c> first</c>

00:04:19.979 --> 00:04:19.989 align:start position:0%
8 and so what we did was for the first
 

00:04:19.989 --> 00:04:22.379 align:start position:0%
8 and so what we did was for the first
time<00:04:20.199><c> I</c><00:04:20.500><c> say</c><00:04:20.889><c> the</c><00:04:21.009><c> first</c><00:04:21.190><c> time</c><00:04:21.310><c> ever</c><00:04:21.579><c> in</c><00:04:21.849><c> 15</c>

00:04:22.379 --> 00:04:22.389 align:start position:0%
time I say the first time ever in 15
 

00:04:22.389 --> 00:04:24.719 align:start position:0%
time I say the first time ever in 15
years<00:04:22.599><c> I</c><00:04:22.719><c> think</c><00:04:22.750><c> for</c><00:04:22.990><c> the</c><00:04:23.050><c> first</c><00:04:23.199><c> time</c><00:04:23.469><c> ever</c><00:04:23.770><c> we</c>

00:04:24.719 --> 00:04:24.729 align:start position:0%
years I think for the first time ever we
 

00:04:24.729 --> 00:04:26.920 align:start position:0%
years I think for the first time ever we
actually<00:04:25.419><c> added</c>

00:04:26.920 --> 00:04:26.930 align:start position:0%
actually added
 

00:04:26.930 --> 00:04:29.439 align:start position:0%
actually added
methods<00:04:27.590><c> to</c><00:04:27.770><c> the</c><00:04:28.400><c> collections</c><00:04:28.850><c> interfaces</c>

00:04:29.439 --> 00:04:29.449 align:start position:0%
methods to the collections interfaces
 

00:04:29.449 --> 00:04:31.360 align:start position:0%
methods to the collections interfaces
and<00:04:29.630><c> so</c><00:04:29.990><c> that</c><00:04:30.110><c> was</c><00:04:30.259><c> a</c><00:04:30.290><c> big</c><00:04:30.530><c> deal</c><00:04:30.710><c> about</c><00:04:30.919><c> default</c>

00:04:31.360 --> 00:04:31.370 align:start position:0%
and so that was a big deal about default
 

00:04:31.370 --> 00:04:33.580 align:start position:0%
and so that was a big deal about default
methods<00:04:31.759><c> prior</c><00:04:32.509><c> to</c><00:04:32.810><c> default</c><00:04:33.110><c> methods</c><00:04:33.440><c> you</c>

00:04:33.580 --> 00:04:33.590 align:start position:0%
methods prior to default methods you
 

00:04:33.590 --> 00:04:36.400 align:start position:0%
methods prior to default methods you
could<00:04:33.830><c> not</c><00:04:34.040><c> compatibly</c><00:04:34.820><c> add</c><00:04:35.090><c> methods</c><00:04:35.810><c> to</c><00:04:35.930><c> an</c>

00:04:36.400 --> 00:04:36.410 align:start position:0%
could not compatibly add methods to an
 

00:04:36.410 --> 00:04:38.680 align:start position:0%
could not compatibly add methods to an
interface<00:04:36.680><c> otherwise</c><00:04:37.280><c> would</c><00:04:37.550><c> Budhia</c><00:04:38.030><c> it</c>

00:04:38.680 --> 00:04:38.690 align:start position:0%
interface otherwise would Budhia it
 

00:04:38.690 --> 00:04:39.850 align:start position:0%
interface otherwise would Budhia it
would<00:04:38.810><c> be</c><00:04:38.930><c> an</c><00:04:39.020><c> incompatibility</c>

00:04:39.850 --> 00:04:39.860 align:start position:0%
would be an incompatibility
 

00:04:39.860 --> 00:04:41.830 align:start position:0%
would be an incompatibility
so<00:04:40.340><c> in</c><00:04:40.430><c> java</c><00:04:40.639><c> 8</c><00:04:40.910><c> with</c><00:04:41.180><c> the</c><00:04:41.300><c> addition</c><00:04:41.690><c> of</c>

00:04:41.830 --> 00:04:41.840 align:start position:0%
so in java 8 with the addition of
 

00:04:41.840 --> 00:04:43.960 align:start position:0%
so in java 8 with the addition of
default<00:04:42.199><c> methods</c><00:04:42.590><c> it's</c><00:04:42.830><c> now</c><00:04:43.070><c> possible</c><00:04:43.370><c> to</c><00:04:43.669><c> add</c>

00:04:43.960 --> 00:04:43.970 align:start position:0%
default methods it's now possible to add
 

00:04:43.970 --> 00:04:48.310 align:start position:0%
default methods it's now possible to add
methods<00:04:44.600><c> to</c><00:04:45.009><c> interfaces</c><00:04:46.009><c> and</c><00:04:46.240><c> we</c><00:04:47.240><c> went</c><00:04:48.229><c> ahead</c>

00:04:48.310 --> 00:04:48.320 align:start position:0%
methods to interfaces and we went ahead
 

00:04:48.320 --> 00:04:51.400 align:start position:0%
methods to interfaces and we went ahead
it<00:04:48.530><c> did</c><00:04:48.680><c> so</c><00:04:48.889><c> and</c><00:04:49.220><c> so</c><00:04:49.639><c> collection</c><00:04:50.389><c> let's</c><00:04:51.169><c> get</c><00:04:51.380><c> er</c>

00:04:51.400 --> 00:04:51.410 align:start position:0%
it did so and so collection let's get er
 

00:04:51.410 --> 00:04:53.439 align:start position:0%
it did so and so collection let's get er
able<00:04:51.680><c> ya</c><00:04:52.039><c> iterable</c><00:04:52.520><c> collection</c><00:04:52.940><c> list</c><00:04:53.180><c> got</c><00:04:53.389><c> a</c>

00:04:53.439 --> 00:04:53.449 align:start position:0%
able ya iterable collection list got a
 

00:04:53.449 --> 00:04:56.200 align:start position:0%
able ya iterable collection list got a
few<00:04:53.630><c> new</c><00:04:53.750><c> methods</c><00:04:54.110><c> map</c><00:04:54.550><c> map</c><00:04:55.550><c> and</c><00:04:55.759><c> comparator</c>

00:04:56.200 --> 00:04:56.210 align:start position:0%
few new methods map map and comparator
 

00:04:56.210 --> 00:04:57.730 align:start position:0%
few new methods map map and comparator
and<00:04:56.240><c> spend</c><00:04:56.690><c> a</c><00:04:56.750><c> little</c><00:04:56.840><c> more</c><00:04:57.050><c> time</c><00:04:57.259><c> on</c><00:04:57.500><c> because</c>

00:04:57.730 --> 00:04:57.740 align:start position:0%
and spend a little more time on because
 

00:04:57.740 --> 00:04:59.529 align:start position:0%
and spend a little more time on because
they<00:04:57.860><c> got</c><00:04:58.039><c> quite</c><00:04:58.490><c> a</c><00:04:58.580><c> number</c><00:04:58.910><c> of</c><00:04:59.000><c> new</c><00:04:59.150><c> methods</c>

00:04:59.529 --> 00:04:59.539 align:start position:0%
they got quite a number of new methods
 

00:04:59.539 --> 00:05:02.469 align:start position:0%
they got quite a number of new methods
the<00:05:00.080><c> interesting</c><00:05:00.650><c> thing</c><00:05:00.919><c> about</c><00:05:01.130><c> this</c><00:05:01.610><c> well</c>

00:05:02.469 --> 00:05:02.479 align:start position:0%
the interesting thing about this well
 

00:05:02.479 --> 00:05:03.909 align:start position:0%
the interesting thing about this well
couple<00:05:02.780><c> interest</c><00:05:03.139><c> a</c><00:05:03.410><c> bunch</c><00:05:03.620><c> of</c><00:05:03.680><c> interesting</c>

00:05:03.909 --> 00:05:03.919 align:start position:0%
couple interest a bunch of interesting
 

00:05:03.919 --> 00:05:08.469 align:start position:0%
couple interest a bunch of interesting
things<00:05:05.500><c> those</c><00:05:06.500><c> new</c><00:05:06.710><c> methods</c><00:05:07.130><c> were</c><00:05:07.760><c> i</c><00:05:08.060><c> mean</c><00:05:08.120><c> it</c>

00:05:08.469 --> 00:05:08.479 align:start position:0%
things those new methods were i mean it
 

00:05:08.479 --> 00:05:10.719 align:start position:0%
things those new methods were i mean it
it's<00:05:09.139><c> not</c><00:05:09.289><c> a</c><00:05:09.350><c> requirement</c><00:05:10.039><c> that</c><00:05:10.070><c> new</c><00:05:10.340><c> methods</c>

00:05:10.719 --> 00:05:10.729 align:start position:0%
it's not a requirement that new methods
 

00:05:10.729 --> 00:05:12.700 align:start position:0%
it's not a requirement that new methods
have<00:05:10.850><c> to</c><00:05:10.880><c> use</c><00:05:11.120><c> lambda</c><00:05:11.389><c> but</c><00:05:12.020><c> a</c><00:05:12.229><c> lot</c><00:05:12.470><c> of</c><00:05:12.590><c> those</c>

00:05:12.700 --> 00:05:12.710 align:start position:0%
have to use lambda but a lot of those
 

00:05:12.710 --> 00:05:15.100 align:start position:0%
have to use lambda but a lot of those
new<00:05:12.889><c> methods</c><00:05:13.270><c> were</c><00:05:14.270><c> added</c><00:05:14.750><c> from</c><00:05:15.050><c> the</c>

00:05:15.100 --> 00:05:15.110 align:start position:0%
new methods were added from the
 

00:05:15.110 --> 00:05:16.689 align:start position:0%
new methods were added from the
standpoint<00:05:15.440><c> of</c><00:05:15.710><c> oh</c><00:05:15.949><c> now</c><00:05:16.220><c> that</c><00:05:16.250><c> we</c><00:05:16.460><c> have</c><00:05:16.580><c> this</c>

00:05:16.689 --> 00:05:16.699 align:start position:0%
standpoint of oh now that we have this
 

00:05:16.699 --> 00:05:21.219 align:start position:0%
standpoint of oh now that we have this
new<00:05:16.880><c> method</c><00:05:19.210><c> when</c><00:05:20.210><c> we</c><00:05:20.240><c> when</c><00:05:20.750><c> that</c><00:05:20.900><c> new</c><00:05:21.050><c> method</c>

00:05:21.219 --> 00:05:21.229 align:start position:0%
new method when we when that new method
 

00:05:21.229 --> 00:05:23.500 align:start position:0%
new method when we when that new method
can<00:05:21.500><c> accept</c><00:05:21.860><c> a</c><00:05:21.979><c> lambda</c><00:05:22.220><c> it</c><00:05:22.610><c> can</c><00:05:22.789><c> do</c><00:05:22.910><c> many</c><00:05:23.210><c> more</c>

00:05:23.500 --> 00:05:23.510 align:start position:0%
can accept a lambda it can do many more
 

00:05:23.510 --> 00:05:25.150 align:start position:0%
can accept a lambda it can do many more
powerful<00:05:23.990><c> things</c><00:05:24.169><c> so</c><00:05:24.560><c> i</c><00:05:24.590><c> have</c><00:05:24.800><c> a</c><00:05:24.860><c> bunch</c><00:05:25.039><c> of</c>

00:05:25.150 --> 00:05:25.160 align:start position:0%
powerful things so i have a bunch of
 

00:05:25.160 --> 00:05:28.420 align:start position:0%
powerful things so i have a bunch of
examples<00:05:25.699><c> of</c><00:05:26.060><c> that</c><00:05:26.680><c> starting</c><00:05:27.680><c> effect</c><00:05:27.979><c> on</c><00:05:28.220><c> the</c>

00:05:28.420 --> 00:05:28.430 align:start position:0%
examples of that starting effect on the
 

00:05:28.430 --> 00:05:32.050 align:start position:0%
examples of that starting effect on the
next<00:05:28.639><c> slide</c><00:05:28.789><c> so</c><00:05:30.010><c> the</c><00:05:31.010><c> iterable</c><00:05:31.430><c> interface</c><00:05:31.610><c> has</c>

00:05:32.050 --> 00:05:32.060 align:start position:0%
next slide so the iterable interface has
 

00:05:32.060 --> 00:05:35.620 align:start position:0%
next slide so the iterable interface has
been<00:05:32.120><c> there</c><00:05:32.500><c> since</c><00:05:33.500><c> java</c><00:05:33.949><c> 5</c><00:05:34.550><c> but</c><00:05:35.150><c> basically</c><00:05:35.449><c> it</c>

00:05:35.620 --> 00:05:35.630 align:start position:0%
been there since java 5 but basically it
 

00:05:35.630 --> 00:05:37.360 align:start position:0%
been there since java 5 but basically it
allows<00:05:35.840><c> you</c><00:05:36.080><c> to</c><00:05:36.260><c> use</c><00:05:36.470><c> the</c><00:05:36.680><c> enhanced</c><00:05:37.130><c> for-loop</c>

00:05:37.360 --> 00:05:37.370 align:start position:0%
allows you to use the enhanced for-loop
 

00:05:37.370 --> 00:05:40.450 align:start position:0%
allows you to use the enhanced for-loop
so<00:05:38.300><c> in</c><00:05:38.539><c> java</c><00:05:38.750><c> 7</c><00:05:38.990><c> here</c><00:05:39.260><c> I've</c><00:05:39.349><c> kind</c><00:05:39.919><c> of</c><00:05:39.949><c> pairs</c><00:05:40.280><c> of</c>

00:05:40.450 --> 00:05:40.460 align:start position:0%
so in java 7 here I've kind of pairs of
 

00:05:40.460 --> 00:05:42.790 align:start position:0%
so in java 7 here I've kind of pairs of
code<00:05:40.669><c> snippets</c><00:05:41.060><c> on</c><00:05:41.210><c> the</c><00:05:41.330><c> top</c><00:05:41.539><c> there's</c><00:05:42.380><c> Java</c><00:05:42.590><c> 7</c>

00:05:42.790 --> 00:05:42.800 align:start position:0%
code snippets on the top there's Java 7
 

00:05:42.800 --> 00:05:44.740 align:start position:0%
code snippets on the top there's Java 7
and<00:05:43.159><c> then</c><00:05:43.250><c> down</c><00:05:43.430><c> below</c><00:05:43.460><c> a</c><00:05:43.760><c> rewrite</c><00:05:44.240><c> of</c><00:05:44.419><c> that</c><00:05:44.570><c> in</c>

00:05:44.740 --> 00:05:44.750 align:start position:0%
and then down below a rewrite of that in
 

00:05:44.750 --> 00:05:47.680 align:start position:0%
and then down below a rewrite of that in
Java<00:05:44.960><c> 8</c><00:05:45.199><c> and</c><00:05:45.470><c> so</c><00:05:46.190><c> in</c><00:05:46.490><c> Java</c><00:05:46.729><c> 7</c><00:05:47.000><c> if</c><00:05:47.270><c> you</c><00:05:47.360><c> wanted</c><00:05:47.570><c> to</c>

00:05:47.680 --> 00:05:47.690 align:start position:0%
Java 8 and so in Java 7 if you wanted to
 

00:05:47.690 --> 00:05:49.680 align:start position:0%
Java 8 and so in Java 7 if you wanted to
iterate<00:05:47.990><c> over</c><00:05:48.020><c> lists</c><00:05:48.500><c> you</c><00:05:48.680><c> could</c><00:05:48.860><c> use</c><00:05:49.039><c> the</c><00:05:49.280><c> the</c>

00:05:49.680 --> 00:05:49.690 align:start position:0%
iterate over lists you could use the the
 

00:05:49.690 --> 00:05:51.490 align:start position:0%
iterate over lists you could use the the
officially<00:05:50.690><c> it's</c><00:05:50.780><c> called</c><00:05:50.930><c> the</c><00:05:51.020><c> enhanced</c>

00:05:51.490 --> 00:05:51.500 align:start position:0%
officially it's called the enhanced
 

00:05:51.500 --> 00:05:53.320 align:start position:0%
officially it's called the enhanced
for-loop<00:05:51.770><c> some</c><00:05:52.280><c> people</c><00:05:52.550><c> call</c><00:05:52.760><c> it</c><00:05:52.789><c> the</c><00:05:53.030><c> for</c>

00:05:53.320 --> 00:05:53.330 align:start position:0%
for-loop some people call it the for
 

00:05:53.330 --> 00:05:55.360 align:start position:0%
for-loop some people call it the for
each<00:05:53.360><c> loop</c><00:05:53.510><c> I</c><00:05:54.020><c> tend</c><00:05:54.560><c> to</c><00:05:54.590><c> avoid</c><00:05:54.740><c> calling</c><00:05:55.280><c> in</c>

00:05:55.360 --> 00:05:55.370 align:start position:0%
each loop I tend to avoid calling in
 

00:05:55.370 --> 00:05:56.920 align:start position:0%
each loop I tend to avoid calling in
that<00:05:55.400><c> because</c><00:05:55.699><c> there's</c><00:05:55.880><c> now</c><00:05:56.000><c> a</c><00:05:56.030><c> method</c><00:05:56.599><c> called</c>

00:05:56.920 --> 00:05:56.930 align:start position:0%
that because there's now a method called
 

00:05:56.930 --> 00:05:59.950 align:start position:0%
that because there's now a method called
for<00:05:57.560><c> each</c><00:05:57.740><c> so</c><00:05:58.699><c> Java</c><00:05:59.000><c> 7</c><00:05:59.240><c> you</c><00:05:59.570><c> write</c><00:05:59.810><c> the</c>

00:05:59.950 --> 00:05:59.960 align:start position:0%
for each so Java 7 you write the
 

00:05:59.960 --> 00:06:00.879 align:start position:0%
for each so Java 7 you write the
enhanced<00:06:00.409><c> for-loop</c>

00:06:00.879 --> 00:06:00.889 align:start position:0%
enhanced for-loop
 

00:06:00.889 --> 00:06:03.129 align:start position:0%
enhanced for-loop
but<00:06:01.639><c> in</c><00:06:01.760><c> Java</c><00:06:01.940><c> 8</c><00:06:02.210><c> what</c><00:06:02.449><c> you</c><00:06:02.570><c> can</c><00:06:02.720><c> do</c><00:06:02.810><c> is</c><00:06:03.020><c> call</c>

00:06:03.129 --> 00:06:03.139 align:start position:0%
but in Java 8 what you can do is call
 

00:06:03.139 --> 00:06:05.050 align:start position:0%
but in Java 8 what you can do is call
the<00:06:03.289><c> for</c><00:06:03.500><c> each</c><00:06:03.620><c> method</c><00:06:03.860><c> and</c><00:06:04.220><c> pass</c><00:06:04.430><c> it</c><00:06:04.639><c> a</c><00:06:04.760><c> lambda</c>

00:06:05.050 --> 00:06:05.060 align:start position:0%
the for each method and pass it a lambda
 

00:06:05.060 --> 00:06:06.760 align:start position:0%
the for each method and pass it a lambda
and<00:06:05.659><c> what</c><00:06:05.810><c> it</c><00:06:05.900><c> does</c><00:06:06.020><c> is</c><00:06:06.199><c> it</c><00:06:06.289><c> executes</c><00:06:06.440><c> that</c>

00:06:06.760 --> 00:06:06.770 align:start position:0%
and what it does is it executes that
 

00:06:06.770 --> 00:06:11.260 align:start position:0%
and what it does is it executes that
lambda<00:06:07.130><c> on</c><00:06:07.570><c> each</c><00:06:08.570><c> element</c><00:06:09.470><c> in</c><00:06:09.620><c> that</c><00:06:09.680><c> list</c><00:06:10.400><c> and</c>

00:06:11.260 --> 00:06:11.270 align:start position:0%
lambda on each element in that list and
 

00:06:11.270 --> 00:06:13.450 align:start position:0%
lambda on each element in that list and
so<00:06:11.630><c> that's</c><00:06:11.840><c> that's</c><00:06:12.169><c> a</c><00:06:12.320><c> little</c><00:06:12.860><c> syntactic</c>

00:06:13.450 --> 00:06:13.460 align:start position:0%
so that's that's a little syntactic
 

00:06:13.460 --> 00:06:18.070 align:start position:0%
so that's that's a little syntactic
nicety<00:06:15.340><c> but</c><00:06:16.389><c> interval</c><00:06:17.389><c> is</c><00:06:17.539><c> inherited</c><00:06:17.960><c> by</c>

00:06:18.070 --> 00:06:18.080 align:start position:0%
nicety but interval is inherited by
 

00:06:18.080 --> 00:06:21.159 align:start position:0%
nicety but interval is inherited by
every<00:06:18.620><c> collection</c><00:06:19.520><c> implementation</c><00:06:20.330><c> so</c><00:06:20.630><c> all</c>

00:06:21.159 --> 00:06:21.169 align:start position:0%
every collection implementation so all
 

00:06:21.169 --> 00:06:23.140 align:start position:0%
every collection implementation so all
the<00:06:21.650><c> collections</c><00:06:22.099><c> are</c><00:06:22.280><c> now</c><00:06:22.430><c> enhanced</c><00:06:23.030><c> by</c>

00:06:23.140 --> 00:06:23.150 align:start position:0%
the collections are now enhanced by
 

00:06:23.150 --> 00:06:25.540 align:start position:0%
the collections are now enhanced by
having<00:06:23.360><c> this</c><00:06:23.750><c> for</c><00:06:24.409><c> each</c><00:06:24.560><c> method</c><00:06:24.800><c> on</c><00:06:25.159><c> them</c><00:06:25.370><c> and</c>

00:06:25.540 --> 00:06:25.550 align:start position:0%
having this for each method on them and
 

00:06:25.550 --> 00:06:27.939 align:start position:0%
having this for each method on them and
in<00:06:25.849><c> fact</c><00:06:25.880><c> indeed</c><00:06:26.419><c> all</c><00:06:26.780><c> the</c><00:06:27.289><c> other</c><00:06:27.409><c> methods</c><00:06:27.620><c> all</c>

00:06:27.939 --> 00:06:27.949 align:start position:0%
in fact indeed all the other methods all
 

00:06:27.949 --> 00:06:29.500 align:start position:0%
in fact indeed all the other methods all
the<00:06:28.099><c> other</c><00:06:28.220><c> default</c><00:06:28.580><c> methods</c><00:06:28.940><c> are</c><00:06:29.120><c> inherited</c>

00:06:29.500 --> 00:06:29.510 align:start position:0%
the other default methods are inherited
 

00:06:29.510 --> 00:06:31.750 align:start position:0%
the other default methods are inherited
all<00:06:29.750><c> the</c><00:06:29.870><c> way</c><00:06:29.930><c> down</c><00:06:30.139><c> the</c><00:06:30.260><c> hierarchy</c><00:06:30.800><c> so</c><00:06:31.310><c> what</c>

00:06:31.750 --> 00:06:31.760 align:start position:0%
all the way down the hierarchy so what
 

00:06:31.760 --> 00:06:34.360 align:start position:0%
all the way down the hierarchy so what
we've<00:06:31.909><c> done</c><00:06:32.090><c> is</c><00:06:32.630><c> by</c><00:06:33.169><c> adding</c><00:06:33.440><c> default</c><00:06:33.919><c> methods</c>

00:06:34.360 --> 00:06:34.370 align:start position:0%
we've done is by adding default methods
 

00:06:34.370 --> 00:06:36.700 align:start position:0%
we've done is by adding default methods
we<00:06:34.669><c> have</c><00:06:34.789><c> enhanced</c><00:06:35.060><c> every</c><00:06:35.930><c> existing</c>

00:06:36.700 --> 00:06:36.710 align:start position:0%
we have enhanced every existing
 

00:06:36.710 --> 00:06:39.129 align:start position:0%
we have enhanced every existing
collection<00:06:37.310><c> even</c><00:06:37.520><c> ones</c><00:06:37.820><c> that</c><00:06:38.330><c> were</c><00:06:38.570><c> were</c><00:06:39.080><c> not</c>

00:06:39.129 --> 00:06:39.139 align:start position:0%
collection even ones that were were not
 

00:06:39.139 --> 00:06:40.260 align:start position:0%
collection even ones that were were not
introduced

00:06:40.260 --> 00:06:40.270 align:start position:0%
introduced
 

00:06:40.270 --> 00:06:43.770 align:start position:0%
introduced
in<00:06:40.330><c> Java</c><00:06:40.660><c> 8</c><00:06:41.730><c> alright</c><00:06:42.730><c> continuing</c><00:06:43.270><c> on</c><00:06:43.570><c> the</c>

00:06:43.770 --> 00:06:43.780 align:start position:0%
in Java 8 alright continuing on the
 

00:06:43.780 --> 00:06:46.320 align:start position:0%
in Java 8 alright continuing on the
iterable<00:06:44.200><c> actually</c><00:06:45.040><c> this</c><00:06:45.160><c> is</c><00:06:45.340><c> iterator</c><00:06:46.060><c> not</c>

00:06:46.320 --> 00:06:46.330 align:start position:0%
iterable actually this is iterator not
 

00:06:46.330 --> 00:06:49.800 align:start position:0%
iterable actually this is iterator not
iterable<00:06:47.490><c> but</c><00:06:48.490><c> if</c><00:06:48.700><c> you've</c><00:06:48.850><c> ever</c><00:06:49.030><c> written</c><00:06:49.420><c> an</c>

00:06:49.800 --> 00:06:49.810 align:start position:0%
iterable but if you've ever written an
 

00:06:49.810 --> 00:06:52.830 align:start position:0%
iterable but if you've ever written an
iterator<00:06:50.350><c> you</c><00:06:51.250><c> had</c><00:06:51.670><c> to</c><00:06:51.760><c> write</c><00:06:51.910><c> has</c><00:06:52.510><c> next</c>

00:06:52.830 --> 00:06:52.840 align:start position:0%
iterator you had to write has next
 

00:06:52.840 --> 00:06:56.010 align:start position:0%
iterator you had to write has next
method<00:06:53.020><c> and</c><00:06:53.380><c> a</c><00:06:53.860><c> next</c><00:06:54.130><c> method</c><00:06:54.490><c> and</c><00:06:54.670><c> oh</c><00:06:55.330><c> that's</c>

00:06:56.010 --> 00:06:56.020 align:start position:0%
method and a next method and oh that's
 

00:06:56.020 --> 00:06:57.720 align:start position:0%
method and a next method and oh that's
right<00:06:56.260><c> you</c><00:06:56.470><c> have</c><00:06:56.590><c> to</c><00:06:56.710><c> also</c><00:06:56.890><c> write</c><00:06:57.280><c> the</c><00:06:57.460><c> remove</c>

00:06:57.720 --> 00:06:57.730 align:start position:0%
right you have to also write the remove
 

00:06:57.730 --> 00:06:58.680 align:start position:0%
right you have to also write the remove
method<00:06:58.060><c> well</c><00:06:58.180><c> I</c><00:06:58.210><c> don't</c><00:06:58.390><c> want</c><00:06:58.510><c> to</c><00:06:58.570><c> support</c>

00:06:58.680 --> 00:06:58.690 align:start position:0%
method well I don't want to support
 

00:06:58.690 --> 00:07:01.350 align:start position:0%
method well I don't want to support
removal<00:06:59.230><c> so</c><00:06:59.380><c> you</c><00:06:59.440><c> always</c><00:06:59.650><c> wrote</c><00:07:00.210><c> throw</c><00:07:01.210><c> new</c>

00:07:01.350 --> 00:07:01.360 align:start position:0%
removal so you always wrote throw new
 

00:07:01.360 --> 00:07:03.390 align:start position:0%
removal so you always wrote throw new
unsupported<00:07:01.870><c> operation</c><00:07:02.290><c> exception</c><00:07:02.680><c> and</c><00:07:02.860><c> so</c>

00:07:03.390 --> 00:07:03.400 align:start position:0%
unsupported operation exception and so
 

00:07:03.400 --> 00:07:08.090 align:start position:0%
unsupported operation exception and so
now<00:07:03.640><c> there's</c><00:07:03.910><c> a</c><00:07:03.970><c> default</c><00:07:04.390><c> method</c><00:07:04.630><c> on</c><00:07:05.850><c> iterator</c>

00:07:08.090 --> 00:07:08.100 align:start position:0%
now there's a default method on iterator
 

00:07:08.100 --> 00:07:09.210 align:start position:0%
now there's a default method on iterator
called

00:07:09.210 --> 00:07:09.220 align:start position:0%
called
 

00:07:09.220 --> 00:07:10.770 align:start position:0%
called
remove<00:07:09.610><c> there's</c><00:07:10.060><c> a</c><00:07:10.150><c> default</c><00:07:10.510><c> implementation</c>

00:07:10.770 --> 00:07:10.780 align:start position:0%
remove there's a default implementation
 

00:07:10.780 --> 00:07:13.290 align:start position:0%
remove there's a default implementation
which<00:07:11.620><c> simply</c><00:07:12.070><c> throws</c><00:07:12.640><c> unsupported</c>

00:07:13.290 --> 00:07:13.300 align:start position:0%
which simply throws unsupported
 

00:07:13.300 --> 00:07:15.120 align:start position:0%
which simply throws unsupported
operation<00:07:13.780><c> exceptions</c><00:07:14.230><c> so</c><00:07:14.560><c> this</c><00:07:14.710><c> is</c><00:07:14.860><c> really</c>

00:07:15.120 --> 00:07:15.130 align:start position:0%
operation exceptions so this is really
 

00:07:15.130 --> 00:07:17.160 align:start position:0%
operation exceptions so this is really
nothing<00:07:15.310><c> more</c><00:07:15.610><c> than</c><00:07:15.670><c> convenience</c><00:07:16.480><c> if</c><00:07:16.690><c> you're</c>

00:07:17.160 --> 00:07:17.170 align:start position:0%
nothing more than convenience if you're
 

00:07:17.170 --> 00:07:19.650 align:start position:0%
nothing more than convenience if you're
writing<00:07:17.530><c> your</c><00:07:17.620><c> own</c><00:07:17.740><c> iterator</c><00:07:18.220><c> you</c><00:07:18.880><c> simply</c><00:07:19.270><c> if</c>

00:07:19.650 --> 00:07:19.660 align:start position:0%
writing your own iterator you simply if
 

00:07:19.660 --> 00:07:22.640 align:start position:0%
writing your own iterator you simply if
you<00:07:19.870><c> if</c><00:07:20.260><c> you</c><00:07:20.500><c> don't</c><00:07:20.740><c> override</c><00:07:21.250><c> remove</c><00:07:21.760><c> you</c><00:07:22.120><c> you</c>

00:07:22.640 --> 00:07:22.650 align:start position:0%
you if you don't override remove you you
 

00:07:22.650 --> 00:07:24.720 align:start position:0%
you if you don't override remove you you
well<00:07:23.650><c> you</c><00:07:23.740><c> don't</c><00:07:23.830><c> have</c><00:07:23.980><c> to</c><00:07:24.070><c> override</c><00:07:24.340><c> remove</c>

00:07:24.720 --> 00:07:24.730 align:start position:0%
well you don't have to override remove
 

00:07:24.730 --> 00:07:26.310 align:start position:0%
well you don't have to override remove
anymore<00:07:25.060><c> and</c><00:07:25.330><c> if</c><00:07:25.420><c> you</c><00:07:25.510><c> don't</c><00:07:25.750><c> you</c><00:07:25.990><c> get</c><00:07:26.200><c> the</c>

00:07:26.310 --> 00:07:26.320 align:start position:0%
anymore and if you don't you get the
 

00:07:26.320 --> 00:07:28.290 align:start position:0%
anymore and if you don't you get the
default<00:07:26.590><c> behavior</c><00:07:26.770><c> which</c><00:07:27.520><c> is</c><00:07:27.670><c> to</c><00:07:27.880><c> throw</c><00:07:28.150><c> an</c>

00:07:28.290 --> 00:07:28.300 align:start position:0%
default behavior which is to throw an
 

00:07:28.300 --> 00:07:30.630 align:start position:0%
default behavior which is to throw an
exception<00:07:28.390><c> which</c><00:07:29.140><c> is</c><00:07:29.170><c> pretty</c><00:07:30.040><c> often</c><00:07:30.250><c> what</c><00:07:30.490><c> you</c>

00:07:30.630 --> 00:07:30.640 align:start position:0%
exception which is pretty often what you
 

00:07:30.640 --> 00:07:32.370 align:start position:0%
exception which is pretty often what you
want<00:07:30.820><c> because</c><00:07:31.120><c> they're</c><00:07:31.360><c> relatively</c><00:07:32.020><c> few</c>

00:07:32.370 --> 00:07:32.380 align:start position:0%
want because they're relatively few
 

00:07:32.380 --> 00:07:35.520 align:start position:0%
want because they're relatively few
iterators<00:07:32.950><c> support</c><00:07:33.640><c> removal</c><00:07:34.110><c> but</c><00:07:35.110><c> if</c><00:07:35.200><c> you</c><00:07:35.290><c> do</c>

00:07:35.520 --> 00:07:35.530 align:start position:0%
iterators support removal but if you do
 

00:07:35.530 --> 00:07:37.260 align:start position:0%
iterators support removal but if you do
want<00:07:35.860><c> to</c><00:07:35.920><c> support</c><00:07:36.100><c> removal</c><00:07:36.640><c> in</c><00:07:36.790><c> your</c><00:07:36.910><c> iterator</c>

00:07:37.260 --> 00:07:37.270 align:start position:0%
want to support removal in your iterator
 

00:07:37.270 --> 00:07:39.240 align:start position:0%
want to support removal in your iterator
you<00:07:37.480><c> just</c><00:07:37.930><c> go</c><00:07:38.260><c> ahead</c><00:07:38.350><c> and</c><00:07:38.620><c> override</c><00:07:38.950><c> it</c><00:07:39.100><c> like</c>

00:07:39.240 --> 00:07:39.250 align:start position:0%
you just go ahead and override it like
 

00:07:39.250 --> 00:07:41.720 align:start position:0%
you just go ahead and override it like
you<00:07:39.400><c> always</c><00:07:39.430><c> did</c>

00:07:41.720 --> 00:07:41.730 align:start position:0%
you always did
 

00:07:41.730 --> 00:07:43.830 align:start position:0%
you always did
alright<00:07:42.730><c> now</c><00:07:42.820><c> he</c><00:07:42.910><c> thinks</c><00:07:43.450><c> getting</c><00:07:43.690><c> a</c><00:07:43.750><c> little</c>

00:07:43.830 --> 00:07:43.840 align:start position:0%
alright now he thinks getting a little
 

00:07:43.840 --> 00:07:45.810 align:start position:0%
alright now he thinks getting a little
more<00:07:44.020><c> interesting</c><00:07:44.320><c> here</c><00:07:44.830><c> because</c><00:07:45.130><c> instead</c><00:07:45.730><c> of</c>

00:07:45.810 --> 00:07:45.820 align:start position:0%
more interesting here because instead of
 

00:07:45.820 --> 00:07:47.580 align:start position:0%
more interesting here because instead of
just<00:07:46.030><c> sort</c><00:07:46.180><c> of</c><00:07:46.270><c> syntactic</c><00:07:46.750><c> niceties</c><00:07:47.380><c> we're</c>

00:07:47.580 --> 00:07:47.590 align:start position:0%
just sort of syntactic niceties we're
 

00:07:47.590 --> 00:07:49.860 align:start position:0%
just sort of syntactic niceties we're
getting<00:07:47.860><c> into</c><00:07:48.100><c> some</c><00:07:48.130><c> bulk</c><00:07:48.490><c> operations</c><00:07:48.870><c> so</c>

00:07:49.860 --> 00:07:49.870 align:start position:0%
getting into some bulk operations so
 

00:07:49.870 --> 00:07:51.540 align:start position:0%
getting into some bulk operations so
suppose<00:07:50.500><c> you</c><00:07:50.650><c> have</c><00:07:50.770><c> a</c><00:07:50.800><c> case</c><00:07:51.010><c> where</c><00:07:51.280><c> you</c><00:07:51.340><c> want</c>

00:07:51.540 --> 00:07:51.550 align:start position:0%
suppose you have a case where you want
 

00:07:51.550 --> 00:07:53.010 align:start position:0%
suppose you have a case where you want
to<00:07:51.670><c> run</c><00:07:51.820><c> through</c><00:07:52.000><c> a</c><00:07:52.090><c> list</c><00:07:52.300><c> and</c><00:07:52.570><c> remove</c>

00:07:53.010 --> 00:07:53.020 align:start position:0%
to run through a list and remove
 

00:07:53.020 --> 00:07:56.190 align:start position:0%
to run through a list and remove
elements<00:07:53.680><c> that</c><00:07:54.130><c> match</c><00:07:54.490><c> some</c><00:07:54.820><c> criterion</c><00:07:55.450><c> so</c><00:07:56.080><c> in</c>

00:07:56.190 --> 00:07:56.200 align:start position:0%
elements that match some criterion so in
 

00:07:56.200 --> 00:07:59.670 align:start position:0%
elements that match some criterion so in
Java<00:07:56.440><c> 7</c><00:07:57.690><c> you</c><00:07:58.690><c> could</c><00:07:58.870><c> you</c><00:07:59.170><c> had</c><00:07:59.320><c> to</c><00:07:59.410><c> write</c><00:07:59.530><c> the</c>

00:07:59.670 --> 00:07:59.680 align:start position:0%
Java 7 you could you had to write the
 

00:07:59.680 --> 00:08:01.440 align:start position:0%
Java 7 you could you had to write the
for<00:07:59.890><c> loop</c><00:08:00.130><c> you</c><00:08:00.340><c> had</c><00:08:00.580><c> to</c><00:08:00.640><c> write</c><00:08:00.790><c> it</c><00:08:00.910><c> out</c><00:08:01.030><c> kind</c><00:08:01.360><c> of</c>

00:08:01.440 --> 00:08:01.450 align:start position:0%
for loop you had to write it out kind of
 

00:08:01.450 --> 00:08:03.870 align:start position:0%
for loop you had to write it out kind of
the<00:08:01.540><c> old</c><00:08:01.690><c> way</c><00:08:01.810><c> by</c><00:08:02.290><c> using</c><00:08:02.560><c> an</c><00:08:02.800><c> iterator</c><00:08:03.220><c> so</c><00:08:03.820><c> you</c>

00:08:03.870 --> 00:08:03.880 align:start position:0%
the old way by using an iterator so you
 

00:08:03.880 --> 00:08:07.620 align:start position:0%
the old way by using an iterator so you
a<00:08:05.130><c> key</c><00:08:06.130><c> point</c><00:08:06.370><c> here</c><00:08:06.460><c> is</c><00:08:06.790><c> that</c><00:08:06.820><c> you</c><00:08:07.180><c> cannot</c><00:08:07.570><c> use</c>

00:08:07.620 --> 00:08:07.630 align:start position:0%
a key point here is that you cannot use
 

00:08:07.630 --> 00:08:11.700 align:start position:0%
a key point here is that you cannot use
the<00:08:08.230><c> enhanced</c><00:08:08.770><c> for</c><00:08:09.010><c> loop</c><00:08:09.240><c> because</c><00:08:10.410><c> you</c><00:08:11.410><c> can't</c>

00:08:11.700 --> 00:08:11.710 align:start position:0%
the enhanced for loop because you can't
 

00:08:11.710 --> 00:08:13.560 align:start position:0%
the enhanced for loop because you can't
remove<00:08:12.130><c> things</c><00:08:12.460><c> from</c><00:08:12.820><c> within</c><00:08:13.330><c> a</c><00:08:13.420><c> loop</c>

00:08:13.560 --> 00:08:13.570 align:start position:0%
remove things from within a loop
 

00:08:13.570 --> 00:08:15.690 align:start position:0%
remove things from within a loop
otherwise<00:08:14.140><c> you</c><00:08:14.350><c> will</c><00:08:14.500><c> get</c><00:08:14.680><c> a</c><00:08:14.980><c> concurrent</c>

00:08:15.690 --> 00:08:15.700 align:start position:0%
otherwise you will get a concurrent
 

00:08:15.700 --> 00:08:17.670 align:start position:0%
otherwise you will get a concurrent
modification<00:08:15.850><c> exception</c><00:08:16.780><c> and</c><00:08:16.990><c> so</c><00:08:17.410><c> what</c><00:08:17.560><c> you</c>

00:08:17.670 --> 00:08:17.680 align:start position:0%
modification exception and so what you
 

00:08:17.680 --> 00:08:20.130 align:start position:0%
modification exception and so what you
had<00:08:17.890><c> to</c><00:08:18.040><c> do</c><00:08:18.190><c> was</c><00:08:18.580><c> fall</c><00:08:19.270><c> back</c><00:08:19.480><c> to</c><00:08:19.660><c> the</c><00:08:19.750><c> original</c>

00:08:20.130 --> 00:08:20.140 align:start position:0%
had to do was fall back to the original
 

00:08:20.140 --> 00:08:23.130 align:start position:0%
had to do was fall back to the original
loop<00:08:20.320><c> loop</c><00:08:20.980><c> using</c><00:08:21.280><c> an</c><00:08:21.700><c> iterator</c><00:08:22.240><c> and</c><00:08:22.540><c> then</c><00:08:22.960><c> if</c>

00:08:23.130 --> 00:08:23.140 align:start position:0%
loop loop using an iterator and then if
 

00:08:23.140 --> 00:08:24.990 align:start position:0%
loop loop using an iterator and then if
something<00:08:23.350><c> matched</c><00:08:23.710><c> you</c><00:08:24.040><c> called</c><00:08:24.280><c> remove</c><00:08:24.700><c> on</c>

00:08:24.990 --> 00:08:25.000 align:start position:0%
something matched you called remove on
 

00:08:25.000 --> 00:08:27.300 align:start position:0%
something matched you called remove on
the<00:08:25.270><c> iterator</c><00:08:25.780><c> so</c><00:08:26.200><c> that's</c><00:08:26.350><c> the</c><00:08:26.500><c> java</c><00:08:26.740><c> 7</c><00:08:26.980><c> code</c>

00:08:27.300 --> 00:08:27.310 align:start position:0%
the iterator so that's the java 7 code
 

00:08:27.310 --> 00:08:30.360 align:start position:0%
the iterator so that's the java 7 code
and<00:08:27.610><c> it</c><00:08:28.510><c> it's</c><00:08:29.170><c> it's</c><00:08:29.740><c> kind</c><00:08:29.950><c> of</c><00:08:30.010><c> bulky</c>

00:08:30.360 --> 00:08:30.370 align:start position:0%
and it it's it's kind of bulky
 

00:08:30.370 --> 00:08:32.780 align:start position:0%
and it it's it's kind of bulky
especially<00:08:30.850><c> you</c><00:08:31.030><c> know</c><00:08:31.120><c> even</c><00:08:31.660><c> compared</c><00:08:31.990><c> to</c><00:08:32.050><c> the</c>

00:08:32.780 --> 00:08:32.790 align:start position:0%
especially you know even compared to the
 

00:08:32.790 --> 00:08:36.390 align:start position:0%
especially you know even compared to the
to<00:08:33.790><c> the</c><00:08:33.880><c> enhanced</c><00:08:34.270><c> Fork</c><00:08:34.540><c> of</c><00:08:34.720><c> the</c><00:08:35.400><c> enhanced</c>

00:08:36.390 --> 00:08:36.400 align:start position:0%
to the enhanced Fork of the enhanced
 

00:08:36.400 --> 00:08:38.550 align:start position:0%
to the enhanced Fork of the enhanced
for-loop<00:08:36.610><c> code</c><00:08:37.000><c> that</c><00:08:37.240><c> that</c><00:08:38.110><c> you</c><00:08:38.260><c> would</c><00:08:38.410><c> write</c>

00:08:38.550 --> 00:08:38.560 align:start position:0%
for-loop code that that you would write
 

00:08:38.560 --> 00:08:40.710 align:start position:0%
for-loop code that that you would write
if<00:08:38.830><c> you</c><00:08:38.860><c> weren't</c><00:08:39.190><c> removing</c><00:08:39.640><c> something</c><00:08:39.850><c> now</c><00:08:40.540><c> in</c>

00:08:40.710 --> 00:08:40.720 align:start position:0%
if you weren't removing something now in
 

00:08:40.720 --> 00:08:43.020 align:start position:0%
if you weren't removing something now in
java<00:08:40.930><c> 8</c><00:08:41.170><c> there's</c><00:08:41.470><c> a</c><00:08:41.530><c> new</c><00:08:41.680><c> method</c><00:08:41.890><c> remove</c><00:08:42.700><c> if</c>

00:08:43.020 --> 00:08:43.030 align:start position:0%
java 8 there's a new method remove if
 

00:08:43.030 --> 00:08:46.440 align:start position:0%
java 8 there's a new method remove if
that<00:08:43.870><c> takes</c><00:08:44.140><c> a</c><00:08:44.230><c> predicate</c><00:08:44.650><c> and</c><00:08:45.000><c> the</c><00:08:46.000><c> semantics</c>

00:08:46.440 --> 00:08:46.450 align:start position:0%
that takes a predicate and the semantics
 

00:08:46.450 --> 00:08:48.990 align:start position:0%
that takes a predicate and the semantics
are<00:08:46.570><c> that</c><00:08:46.960><c> predicate</c><00:08:47.440><c> is</c><00:08:47.770><c> applied</c><00:08:48.190><c> to</c><00:08:48.670><c> each</c>

00:08:48.990 --> 00:08:49.000 align:start position:0%
are that predicate is applied to each
 

00:08:49.000 --> 00:08:52.380 align:start position:0%
are that predicate is applied to each
element<00:08:49.720><c> of</c><00:08:50.140><c> that</c><00:08:50.980><c> collection</c><00:08:51.370><c> and</c><00:08:51.700><c> if</c><00:08:52.300><c> the</c>

00:08:52.380 --> 00:08:52.390 align:start position:0%
element of that collection and if the
 

00:08:52.390 --> 00:08:53.769 align:start position:0%
element of that collection and if the
predicate<00:08:52.630><c> returns</c><00:08:53.050><c> true</c>

00:08:53.769 --> 00:08:53.779 align:start position:0%
predicate returns true
 

00:08:53.779 --> 00:08:55.780 align:start position:0%
predicate returns true
then<00:08:54.050><c> it</c><00:08:54.920><c> removes</c><00:08:55.339><c> it</c><00:08:55.430><c> from</c><00:08:55.459><c> the</c><00:08:55.639><c> collection</c>

00:08:55.780 --> 00:08:55.790 align:start position:0%
then it removes it from the collection
 

00:08:55.790 --> 00:08:58.239 align:start position:0%
then it removes it from the collection
and<00:08:56.209><c> so</c><00:08:56.689><c> that's</c><00:08:56.870><c> that's</c><00:08:57.499><c> pretty</c><00:08:57.680><c> nice</c><00:08:57.860><c> I</c><00:08:58.129><c> mean</c>

00:08:58.239 --> 00:08:58.249 align:start position:0%
and so that's that's pretty nice I mean
 

00:08:58.249 --> 00:09:00.129 align:start position:0%
and so that's that's pretty nice I mean
so<00:08:58.430><c> you</c><00:08:58.490><c> look</c><00:08:58.730><c> that</c><00:08:58.939><c> that</c><00:08:59.420><c> you</c><00:08:59.749><c> know</c><00:08:59.839><c> four</c><00:09:00.050><c> or</c>

00:09:00.129 --> 00:09:00.139 align:start position:0%
so you look that that you know four or
 

00:09:00.139 --> 00:09:01.869 align:start position:0%
so you look that that you know four or
five<00:09:00.290><c> line</c><00:09:00.589><c> four</c><00:09:00.980><c> loop</c><00:09:01.160><c> there</c><00:09:01.339><c> collapse</c><00:09:01.670><c> down</c>

00:09:01.869 --> 00:09:01.879 align:start position:0%
five line four loop there collapse down
 

00:09:01.879 --> 00:09:05.309 align:start position:0%
five line four loop there collapse down
to<00:09:02.089><c> a</c><00:09:02.120><c> single</c><00:09:02.569><c> line</c><00:09:02.860><c> makes</c><00:09:03.860><c> things</c><00:09:04.069><c> much</c><00:09:04.220><c> nicer</c>

00:09:05.309 --> 00:09:05.319 align:start position:0%
to a single line makes things much nicer
 

00:09:05.319 --> 00:09:10.360 align:start position:0%
to a single line makes things much nicer
but<00:09:06.319><c> it's</c><00:09:06.560><c> not</c><00:09:06.829><c> only</c><00:09:07.220><c> a</c><00:09:08.499><c> syntactic</c><00:09:09.499><c> advantage</c>

00:09:10.360 --> 00:09:10.370 align:start position:0%
but it's not only a syntactic advantage
 

00:09:10.370 --> 00:09:12.040 align:start position:0%
but it's not only a syntactic advantage
it's<00:09:10.939><c> actually</c><00:09:11.329><c> a</c><00:09:11.360><c> performance</c><00:09:11.899><c> advantage</c>

00:09:12.040 --> 00:09:12.050 align:start position:0%
it's actually a performance advantage
 

00:09:12.050 --> 00:09:14.499 align:start position:0%
it's actually a performance advantage
and<00:09:12.680><c> so</c><00:09:12.920><c> if</c><00:09:13.040><c> you</c><00:09:13.129><c> consider</c><00:09:13.339><c> iterating</c><00:09:14.209><c> over</c><00:09:14.329><c> an</c>

00:09:14.499 --> 00:09:14.509 align:start position:0%
and so if you consider iterating over an
 

00:09:14.509 --> 00:09:16.629 align:start position:0%
and so if you consider iterating over an
ArrayList<00:09:15.050><c> if</c><00:09:15.620><c> you</c><00:09:15.769><c> remove</c><00:09:16.160><c> something</c><00:09:16.459><c> from</c>

00:09:16.629 --> 00:09:16.639 align:start position:0%
ArrayList if you remove something from
 

00:09:16.639 --> 00:09:19.030 align:start position:0%
ArrayList if you remove something from
an<00:09:16.879><c> ArrayList</c><00:09:17.360><c> it</c><00:09:17.569><c> has</c><00:09:17.749><c> to</c><00:09:17.959><c> have</c><00:09:18.410><c> to</c><00:09:18.589><c> shift</c><00:09:18.860><c> all</c>

00:09:19.030 --> 00:09:19.040 align:start position:0%
an ArrayList it has to have to shift all
 

00:09:19.040 --> 00:09:22.059 align:start position:0%
an ArrayList it has to have to shift all
the<00:09:19.069><c> elements</c><00:09:19.699><c> up</c><00:09:20.300><c> in</c><00:09:20.779><c> place</c><00:09:21.050><c> and</c><00:09:21.379><c> so</c><00:09:21.860><c> if</c><00:09:21.949><c> you</c>

00:09:22.059 --> 00:09:22.069 align:start position:0%
the elements up in place and so if you
 

00:09:22.069 --> 00:09:23.980 align:start position:0%
the elements up in place and so if you
do<00:09:22.220><c> that</c><00:09:22.370><c> repeatedly</c><00:09:23.059><c> within</c><00:09:23.240><c> an</c><00:09:23.480><c> ArrayList</c>

00:09:23.980 --> 00:09:23.990 align:start position:0%
do that repeatedly within an ArrayList
 

00:09:23.990 --> 00:09:26.850 align:start position:0%
do that repeatedly within an ArrayList
then<00:09:24.709><c> you</c><00:09:24.949><c> get</c><00:09:25.160><c> an</c><00:09:25.430><c> order</c><00:09:25.670><c> n-squared</c>

00:09:26.850 --> 00:09:26.860 align:start position:0%
then you get an order n-squared
 

00:09:26.860 --> 00:09:29.049 align:start position:0%
then you get an order n-squared
performance<00:09:27.860><c> because</c><00:09:28.249><c> it's</c><00:09:28.459><c> repeatedly</c>

00:09:29.049 --> 00:09:29.059 align:start position:0%
performance because it's repeatedly
 

00:09:29.059 --> 00:09:31.569 align:start position:0%
performance because it's repeatedly
shifting<00:09:29.480><c> the</c><00:09:29.899><c> tail</c><00:09:30.170><c> of</c><00:09:30.470><c> the</c><00:09:30.620><c> ArrayList</c><00:09:31.069><c> back</c>

00:09:31.569 --> 00:09:31.579 align:start position:0%
shifting the tail of the ArrayList back
 

00:09:31.579 --> 00:09:34.049 align:start position:0%
shifting the tail of the ArrayList back
up<00:09:31.819><c> as</c><00:09:32.029><c> as</c><00:09:32.360><c> elements</c><00:09:33.259><c> are</c><00:09:33.379><c> deleted</c><00:09:33.769><c> and</c><00:09:33.949><c> so</c>

00:09:34.049 --> 00:09:34.059 align:start position:0%
up as as elements are deleted and so
 

00:09:34.059 --> 00:09:37.689 align:start position:0%
up as as elements are deleted and so
remove<00:09:35.059><c> if</c><00:09:35.269><c> in</c><00:09:35.509><c> Java</c><00:09:36.079><c> eight</c><00:09:36.350><c> is</c><00:09:36.620><c> optimized</c><00:09:37.339><c> for</c>

00:09:37.689 --> 00:09:37.699 align:start position:0%
remove if in Java eight is optimized for
 

00:09:37.699 --> 00:09:40.299 align:start position:0%
remove if in Java eight is optimized for
ArrayList<00:09:38.660><c> what</c><00:09:39.110><c> it</c><00:09:39.199><c> does</c><00:09:39.350><c> is</c><00:09:39.529><c> it</c><00:09:39.680><c> is</c><00:09:39.829><c> it</c><00:09:40.129><c> keeps</c>

00:09:40.299 --> 00:09:40.309 align:start position:0%
ArrayList what it does is it is it keeps
 

00:09:40.309 --> 00:09:43.030 align:start position:0%
ArrayList what it does is it is it keeps
track<00:09:40.579><c> of</c><00:09:40.610><c> which</c><00:09:41.149><c> things</c><00:09:41.480><c> are</c><00:09:41.749><c> removed</c><00:09:42.529><c> and</c>

00:09:43.030 --> 00:09:43.040 align:start position:0%
track of which things are removed and
 

00:09:43.040 --> 00:09:45.939 align:start position:0%
track of which things are removed and
then<00:09:43.220><c> does</c><00:09:43.490><c> the</c><00:09:43.639><c> copy</c><00:09:43.879><c> and</c><00:09:44.149><c> operation</c><00:09:44.749><c> all</c><00:09:45.499><c> at</c>

00:09:45.939 --> 00:09:45.949 align:start position:0%
then does the copy and operation all at
 

00:09:45.949 --> 00:09:48.100 align:start position:0%
then does the copy and operation all at
once<00:09:46.129><c> and</c><00:09:46.459><c> so</c><00:09:46.490><c> we've</c><00:09:46.910><c> reduced</c><00:09:47.449><c> the</c><00:09:47.660><c> algorithm</c>

00:09:48.100 --> 00:09:48.110 align:start position:0%
once and so we've reduced the algorithm
 

00:09:48.110 --> 00:09:51.819 align:start position:0%
once and so we've reduced the algorithm
from<00:09:48.290><c> N</c><00:09:48.529><c> squared</c><00:09:48.949><c> to</c><00:09:49.459><c> order</c><00:09:49.759><c> n</c><00:09:49.910><c> at</c><00:09:50.589><c> the</c><00:09:51.589><c> same</c>

00:09:51.819 --> 00:09:51.829 align:start position:0%
from N squared to order n at the same
 

00:09:51.829 --> 00:09:53.710 align:start position:0%
from N squared to order n at the same
time<00:09:52.069><c> we've</c><00:09:52.339><c> made</c><00:09:52.490><c> the</c><00:09:52.730><c> code</c><00:09:53.269><c> a</c><00:09:53.300><c> lot</c><00:09:53.660><c> more</c>

00:09:53.710 --> 00:09:53.720 align:start position:0%
time we've made the code a lot more
 

00:09:53.720 --> 00:09:56.259 align:start position:0%
time we've made the code a lot more
concise<00:09:54.350><c> and</c><00:09:54.649><c> so</c><00:09:54.980><c> the</c><00:09:55.129><c> the</c><00:09:55.639><c> benefit</c><00:09:56.029><c> here</c><00:09:56.240><c> is</c>

00:09:56.259 --> 00:09:56.269 align:start position:0%
concise and so the the benefit here is
 

00:09:56.269 --> 00:09:58.540 align:start position:0%
concise and so the the benefit here is
that<00:09:56.420><c> the</c><00:09:56.689><c> remove</c><00:09:57.019><c> if</c><00:09:57.199><c> operation</c><00:09:57.800><c> it's</c><00:09:58.160><c> its</c>

00:09:58.540 --> 00:09:58.550 align:start position:0%
that the remove if operation it's its
 

00:09:58.550 --> 00:10:02.290 align:start position:0%
that the remove if operation it's its
internal<00:09:59.269><c> iteration</c><00:09:59.779><c> and</c><00:10:00.730><c> it's</c><00:10:01.730><c> raised</c><00:10:02.089><c> the</c>

00:10:02.290 --> 00:10:02.300 align:start position:0%
internal iteration and it's raised the
 

00:10:02.300 --> 00:10:04.569 align:start position:0%
internal iteration and it's raised the
semantic<00:10:02.779><c> level</c><00:10:02.959><c> of</c><00:10:03.230><c> the</c><00:10:03.350><c> API</c><00:10:03.649><c> so</c><00:10:04.309><c> instead</c><00:10:04.519><c> of</c>

00:10:04.569 --> 00:10:04.579 align:start position:0%
semantic level of the API so instead of
 

00:10:04.579 --> 00:10:05.740 align:start position:0%
semantic level of the API so instead of
looking<00:10:04.759><c> at</c><00:10:05.029><c> the</c><00:10:05.180><c> collection</c><00:10:05.449><c> from</c><00:10:05.660><c> the</c>

00:10:05.740 --> 00:10:05.750 align:start position:0%
looking at the collection from the
 

00:10:05.750 --> 00:10:07.660 align:start position:0%
looking at the collection from the
outside<00:10:06.079><c> and</c><00:10:06.319><c> picking</c><00:10:06.920><c> at</c><00:10:07.040><c> things</c><00:10:07.250><c> one</c><00:10:07.490><c> at</c><00:10:07.610><c> a</c>

00:10:07.660 --> 00:10:07.670 align:start position:0%
outside and picking at things one at a
 

00:10:07.670 --> 00:10:10.780 align:start position:0%
outside and picking at things one at a
time<00:10:07.910><c> we're</c><00:10:08.540><c> now</c><00:10:08.660><c> saying</c><00:10:08.930><c> okay</c><00:10:09.639><c> remove</c><00:10:10.639><c> all</c>

00:10:10.780 --> 00:10:10.790 align:start position:0%
time we're now saying okay remove all
 

00:10:10.790 --> 00:10:12.579 align:start position:0%
time we're now saying okay remove all
the<00:10:10.910><c> elements</c><00:10:11.300><c> remove</c><00:10:12.019><c> all</c><00:10:12.170><c> the</c><00:10:12.290><c> matching</c>

00:10:12.579 --> 00:10:12.589 align:start position:0%
the elements remove all the matching
 

00:10:12.589 --> 00:10:14.230 align:start position:0%
the elements remove all the matching
elements<00:10:12.980><c> that's</c><00:10:13.370><c> basically</c><00:10:13.790><c> what</c><00:10:14.029><c> this</c><00:10:14.180><c> says</c>

00:10:14.230 --> 00:10:14.240 align:start position:0%
elements that's basically what this says
 

00:10:14.240 --> 00:10:16.480 align:start position:0%
elements that's basically what this says
so<00:10:15.019><c> the</c><00:10:15.139><c> implementation</c><00:10:15.410><c> takes</c><00:10:15.949><c> advantage</c><00:10:16.399><c> of</c>

00:10:16.480 --> 00:10:16.490 align:start position:0%
so the implementation takes advantage of
 

00:10:16.490 --> 00:10:20.079 align:start position:0%
so the implementation takes advantage of
that<00:10:16.579><c> with</c><00:10:16.879><c> a</c><00:10:17.120><c> better</c><00:10:17.660><c> algorithm</c><00:10:18.910><c> all</c><00:10:19.910><c> right</c>

00:10:20.079 --> 00:10:20.089 align:start position:0%
that with a better algorithm all right
 

00:10:20.089 --> 00:10:23.699 align:start position:0%
that with a better algorithm all right
moving<00:10:20.300><c> on</c><00:10:20.600><c> more</c><00:10:20.990><c> more</c><00:10:21.500><c> new</c><00:10:21.740><c> default</c><00:10:22.069><c> methods</c>

00:10:23.699 --> 00:10:23.709 align:start position:0%
moving on more more new default methods
 

00:10:23.709 --> 00:10:27.340 align:start position:0%
moving on more more new default methods
the<00:10:25.120><c> list</c><00:10:26.120><c> interface</c><00:10:26.449><c> has</c><00:10:26.870><c> couple</c><00:10:27.259><c> new</c>

00:10:27.340 --> 00:10:27.350 align:start position:0%
the list interface has couple new
 

00:10:27.350 --> 00:10:29.470 align:start position:0%
the list interface has couple new
methods<00:10:27.709><c> on</c><00:10:27.829><c> it</c><00:10:27.860><c> one</c><00:10:28.220><c> of</c><00:10:28.339><c> them</c><00:10:28.430><c> is</c><00:10:28.730><c> replace</c><00:10:29.240><c> all</c>

00:10:29.470 --> 00:10:29.480 align:start position:0%
methods on it one of them is replace all
 

00:10:29.480 --> 00:10:33.990 align:start position:0%
methods on it one of them is replace all
and<00:10:30.019><c> so</c><00:10:30.439><c> what</c><00:10:30.559><c> that</c><00:10:30.589><c> does</c><00:10:30.920><c> is</c><00:10:31.250><c> it</c><00:10:31.759><c> it</c><00:10:32.319><c> replaces</c>

00:10:33.990 --> 00:10:34.000 align:start position:0%
and so what that does is it it replaces
 

00:10:34.000 --> 00:10:36.910 align:start position:0%
and so what that does is it it replaces
every<00:10:35.000><c> element</c><00:10:35.329><c> in</c><00:10:35.540><c> list</c><00:10:36.199><c> with</c><00:10:36.470><c> something</c>

00:10:36.910 --> 00:10:36.920 align:start position:0%
every element in list with something
 

00:10:36.920 --> 00:10:39.850 align:start position:0%
every element in list with something
else<00:10:37.040><c> so</c><00:10:38.000><c> suppose</c><00:10:38.809><c> you</c><00:10:38.929><c> wanted</c><00:10:39.170><c> to</c><00:10:39.230><c> do</c><00:10:39.379><c> that</c><00:10:39.529><c> in</c>

00:10:39.850 --> 00:10:39.860 align:start position:0%
else so suppose you wanted to do that in
 

00:10:39.860 --> 00:10:43.269 align:start position:0%
else so suppose you wanted to do that in
in<00:10:40.370><c> Java</c><00:10:41.029><c> 7</c><00:10:41.300><c> again</c><00:10:41.779><c> you</c><00:10:41.959><c> could</c><00:10:42.139><c> use</c><00:10:42.350><c> the</c><00:10:42.620><c> the</c>

00:10:43.269 --> 00:10:43.279 align:start position:0%
in Java 7 again you could use the the
 

00:10:43.279 --> 00:10:45.549 align:start position:0%
in Java 7 again you could use the the
old<00:10:43.699><c> fashioned</c><00:10:44.240><c> or</c><00:10:44.420><c> the</c><00:10:44.569><c> original</c><00:10:44.990><c> style</c><00:10:45.199><c> of</c>

00:10:45.549 --> 00:10:45.559 align:start position:0%
old fashioned or the original style of
 

00:10:45.559 --> 00:10:48.119 align:start position:0%
old fashioned or the original style of
for<00:10:45.769><c> loop</c><00:10:45.949><c> using</c><00:10:46.220><c> a</c><00:10:46.429><c> list</c><00:10:46.699><c> iterator</c><00:10:47.089><c> and</c><00:10:47.360><c> then</c>

00:10:48.119 --> 00:10:48.129 align:start position:0%
for loop using a list iterator and then
 

00:10:48.129 --> 00:10:50.559 align:start position:0%
for loop using a list iterator and then
the<00:10:49.129><c> the</c><00:10:49.399><c> example</c><00:10:49.579><c> here</c><00:10:49.939><c> is</c><00:10:50.149><c> suppose</c><00:10:50.449><c> you</c>

00:10:50.559 --> 00:10:50.569 align:start position:0%
the the example here is suppose you
 

00:10:50.569 --> 00:10:51.819 align:start position:0%
the the example here is suppose you
wanted<00:10:50.809><c> to</c><00:10:50.870><c> run</c><00:10:50.990><c> through</c><00:10:51.199><c> a</c><00:10:51.259><c> list</c><00:10:51.410><c> of</c><00:10:51.559><c> strings</c>

00:10:51.819 --> 00:10:51.829 align:start position:0%
wanted to run through a list of strings
 

00:10:51.829 --> 00:10:54.970 align:start position:0%
wanted to run through a list of strings
and<00:10:52.160><c> convert</c><00:10:52.730><c> them</c><00:10:52.850><c> all</c><00:10:52.970><c> to</c><00:10:53.089><c> uppercase</c><00:10:53.480><c> so</c><00:10:54.319><c> you</c>

00:10:54.970 --> 00:10:54.980 align:start position:0%
and convert them all to uppercase so you
 

00:10:54.980 --> 00:10:57.189 align:start position:0%
and convert them all to uppercase so you
could<00:10:55.220><c> run</c><00:10:55.490><c> a</c><00:10:55.519><c> list</c><00:10:55.730><c> iterator</c><00:10:56.179><c> over</c><00:10:56.870><c> the</c><00:10:56.990><c> list</c>

00:10:57.189 --> 00:10:57.199 align:start position:0%
could run a list iterator over the list
 

00:10:57.199 --> 00:11:00.489 align:start position:0%
could run a list iterator over the list
and<00:10:57.439><c> set</c><00:10:58.249><c> each</c><00:10:58.519><c> element</c><00:10:59.089><c> to</c><00:10:59.389><c> the</c><00:10:59.720><c> element</c>

00:11:00.489 --> 00:11:00.499 align:start position:0%
and set each element to the element
 

00:11:00.499 --> 00:11:02.619 align:start position:0%
and set each element to the element
converted<00:11:01.129><c> uppercase</c><00:11:01.579><c> so</c><00:11:02.120><c> that's</c><00:11:02.269><c> the</c><00:11:02.420><c> top</c>

00:11:02.619 --> 00:11:02.629 align:start position:0%
converted uppercase so that's the top
 

00:11:02.629 --> 00:11:05.829 align:start position:0%
converted uppercase so that's the top
code<00:11:03.290><c> snippet</c><00:11:03.679><c> there</c><00:11:04.300><c> but</c><00:11:05.300><c> most</c><00:11:05.480><c> people</c><00:11:05.750><c> don't</c>

00:11:05.829 --> 00:11:05.839 align:start position:0%
code snippet there but most people don't
 

00:11:05.839 --> 00:11:07.600 align:start position:0%
code snippet there but most people don't
do<00:11:06.019><c> that</c><00:11:06.230><c> I</c><00:11:06.259><c> don't</c><00:11:06.410><c> does</c><00:11:06.980><c> anybody</c><00:11:07.189><c> ever</c>

00:11:07.600 --> 00:11:07.610 align:start position:0%
do that I don't does anybody ever
 

00:11:07.610 --> 00:11:09.880 align:start position:0%
do that I don't does anybody ever
you<00:11:07.730><c> list</c><00:11:08.029><c> iterators</c><00:11:08.510><c> any</c><00:11:09.320><c> show</c><00:11:09.649><c> of</c><00:11:09.709><c> hands</c>

00:11:09.880 --> 00:11:09.890 align:start position:0%
you list iterators any show of hands
 

00:11:09.890 --> 00:11:13.090 align:start position:0%
you list iterators any show of hands
here<00:11:10.450><c> no</c><00:11:11.450><c> I</c><00:11:11.480><c> think</c><00:11:11.779><c> Lissa</c><00:11:12.350><c> diretor</c><00:11:12.620><c> I</c><00:11:12.920><c> mean</c>

00:11:13.090 --> 00:11:13.100 align:start position:0%
here no I think Lissa diretor I mean
 

00:11:13.100 --> 00:11:14.680 align:start position:0%
here no I think Lissa diretor I mean
it's<00:11:13.250><c> it's</c><00:11:13.519><c> interesting</c><00:11:13.880><c> and</c><00:11:14.180><c> powerful</c><00:11:14.269><c> but</c><00:11:14.630><c> I</c>

00:11:14.680 --> 00:11:14.690 align:start position:0%
it's it's interesting and powerful but I
 

00:11:14.690 --> 00:11:18.460 align:start position:0%
it's it's interesting and powerful but I
think<00:11:14.870><c> nobody</c><00:11:15.140><c> uses</c><00:11:15.470><c> it</c><00:11:15.500><c> and</c><00:11:15.800><c> well</c><00:11:16.870><c> and</c><00:11:17.870><c> the</c>

00:11:18.460 --> 00:11:18.470 align:start position:0%
think nobody uses it and well and the
 

00:11:18.470 --> 00:11:23.470 align:start position:0%
think nobody uses it and well and the
reason<00:11:18.800><c> is</c><00:11:18.950><c> a</c><00:11:19.779><c> if</c><00:11:20.800><c> if</c><00:11:21.800><c> you</c><00:11:22.670><c> had</c><00:11:22.940><c> different</c>

00:11:23.470 --> 00:11:23.480 align:start position:0%
reason is a if if you had different
 

00:11:23.480 --> 00:11:24.790 align:start position:0%
reason is a if if you had different
kinds<00:11:23.720><c> of</c><00:11:23.810><c> lists</c><00:11:24.140><c> then</c><00:11:24.320><c> you</c><00:11:24.440><c> would</c><00:11:24.560><c> want</c><00:11:24.740><c> to</c>

00:11:24.790 --> 00:11:24.800 align:start position:0%
kinds of lists then you would want to
 

00:11:24.800 --> 00:11:28.180 align:start position:0%
kinds of lists then you would want to
use<00:11:24.950><c> an</c><00:11:25.100><c> abstract</c><00:11:25.870><c> way</c><00:11:26.870><c> to</c><00:11:26.930><c> iterate</c><00:11:27.470><c> over</c><00:11:27.500><c> them</c>

00:11:28.180 --> 00:11:28.190 align:start position:0%
use an abstract way to iterate over them
 

00:11:28.190 --> 00:11:29.620 align:start position:0%
use an abstract way to iterate over them
using<00:11:28.610><c> lists</c><00:11:28.880><c> iterators</c><00:11:29.269><c> but</c><00:11:29.480><c> since</c>

00:11:29.620 --> 00:11:29.630 align:start position:0%
using lists iterators but since
 

00:11:29.630 --> 00:11:31.750 align:start position:0%
using lists iterators but since
everybody<00:11:30.050><c> is</c><00:11:30.170><c> using</c><00:11:30.350><c> an</c><00:11:30.529><c> ArrayList</c><00:11:31.070><c> you</c>

00:11:31.750 --> 00:11:31.760 align:start position:0%
everybody is using an ArrayList you
 

00:11:31.760 --> 00:11:33.400 align:start position:0%
everybody is using an ArrayList you
might<00:11:31.910><c> as</c><00:11:32.029><c> well</c><00:11:32.120><c> just</c><00:11:32.360><c> index</c><00:11:32.779><c> into</c><00:11:33.079><c> it</c><00:11:33.200><c> and</c><00:11:33.350><c> so</c>

00:11:33.400 --> 00:11:33.410 align:start position:0%
might as well just index into it and so
 

00:11:33.410 --> 00:11:34.960 align:start position:0%
might as well just index into it and so
that's<00:11:33.529><c> the</c><00:11:33.740><c> second</c><00:11:34.100><c> code</c><00:11:34.279><c> block</c><00:11:34.550><c> here</c><00:11:34.820><c> and</c><00:11:34.940><c> I</c>

00:11:34.960 --> 00:11:34.970 align:start position:0%
that's the second code block here and I
 

00:11:34.970 --> 00:11:36.759 align:start position:0%
that's the second code block here and I
think<00:11:35.180><c> everybody</c><00:11:35.810><c> would</c><00:11:35.959><c> probably</c><00:11:36.110><c> write</c><00:11:36.620><c> it</c>

00:11:36.759 --> 00:11:36.769 align:start position:0%
think everybody would probably write it
 

00:11:36.769 --> 00:11:38.860 align:start position:0%
think everybody would probably write it
this<00:11:36.890><c> way</c><00:11:37.130><c> or</c><00:11:37.640><c> you</c><00:11:37.730><c> just</c><00:11:37.880><c> index</c><00:11:38.240><c> from</c><00:11:38.450><c> zero</c><00:11:38.720><c> to</c>

00:11:38.860 --> 00:11:38.870 align:start position:0%
this way or you just index from zero to
 

00:11:38.870 --> 00:11:42.130 align:start position:0%
this way or you just index from zero to
size<00:11:39.079><c> and</c><00:11:39.620><c> then</c><00:11:40.160><c> set</c><00:11:40.610><c> you</c><00:11:41.420><c> know</c><00:11:41.540><c> just</c><00:11:41.750><c> call</c><00:11:41.870><c> set</c>

00:11:42.130 --> 00:11:42.140 align:start position:0%
size and then set you know just call set
 

00:11:42.140 --> 00:11:44.680 align:start position:0%
size and then set you know just call set
and<00:11:42.320><c> get</c><00:11:42.500><c> using</c><00:11:43.010><c> using</c><00:11:43.730><c> the</c><00:11:43.820><c> index</c><00:11:44.089><c> operation</c>

00:11:44.680 --> 00:11:44.690 align:start position:0%
and get using using the index operation
 

00:11:44.690 --> 00:11:46.449 align:start position:0%
and get using using the index operation
and<00:11:44.899><c> that's</c><00:11:45.320><c> perfectly</c><00:11:45.740><c> fine</c><00:11:45.800><c> if</c><00:11:46.220><c> you</c><00:11:46.310><c> know</c>

00:11:46.449 --> 00:11:46.459 align:start position:0%
and that's perfectly fine if you know
 

00:11:46.459 --> 00:11:48.970 align:start position:0%
and that's perfectly fine if you know
you're<00:11:46.670><c> operating</c><00:11:47.000><c> on</c><00:11:47.209><c> an</c><00:11:47.360><c> ArrayList</c><00:11:47.980><c> if</c>

00:11:48.970 --> 00:11:48.980 align:start position:0%
you're operating on an ArrayList if
 

00:11:48.980 --> 00:11:50.650 align:start position:0%
you're operating on an ArrayList if
you're<00:11:49.160><c> operating</c><00:11:49.370><c> a</c><00:11:49.579><c> linked</c><00:11:49.880><c> list</c><00:11:50.060><c> then</c><00:11:50.329><c> that</c>

00:11:50.650 --> 00:11:50.660 align:start position:0%
you're operating a linked list then that
 

00:11:50.660 --> 00:11:52.870 align:start position:0%
you're operating a linked list then that
will<00:11:50.839><c> slow</c><00:11:51.140><c> drastically</c><00:11:52.100><c> but</c><00:11:52.370><c> you</c><00:11:52.579><c> should</c><00:11:52.730><c> be</c>

00:11:52.870 --> 00:11:52.880 align:start position:0%
will slow drastically but you should be
 

00:11:52.880 --> 00:11:54.639 align:start position:0%
will slow drastically but you should be
using<00:11:53.000><c> linked</c><00:11:53.360><c> lists</c><00:11:53.540><c> anyway</c><00:11:53.870><c> and</c><00:11:54.170><c> that's</c>

00:11:54.639 --> 00:11:54.649 align:start position:0%
using linked lists anyway and that's
 

00:11:54.649 --> 00:11:59.019 align:start position:0%
using linked lists anyway and that's
that's<00:11:55.190><c> a</c><00:11:55.339><c> different</c><00:11:55.640><c> talk</c><00:11:57.339><c> so</c><00:11:58.339><c> anyway</c><00:11:58.760><c> in</c>

00:11:59.019 --> 00:11:59.029 align:start position:0%
that's a different talk so anyway in
 

00:11:59.029 --> 00:12:01.300 align:start position:0%
that's a different talk so anyway in
Java<00:11:59.540><c> eight</c><00:11:59.779><c> this</c><00:12:00.079><c> gets</c><00:12:00.350><c> even</c><00:12:00.470><c> better</c><00:12:00.740><c> so</c><00:12:01.160><c> we</c>

00:12:01.300 --> 00:12:01.310 align:start position:0%
Java eight this gets even better so we
 

00:12:01.310 --> 00:12:03.009 align:start position:0%
Java eight this gets even better so we
just<00:12:01.490><c> called</c><00:12:01.700><c> the</c><00:12:01.790><c> replace</c><00:12:02.180><c> all</c><00:12:02.390><c> method</c><00:12:02.810><c> and</c>

00:12:03.009 --> 00:12:03.019 align:start position:0%
just called the replace all method and
 

00:12:03.019 --> 00:12:05.110 align:start position:0%
just called the replace all method and
give<00:12:03.470><c> it</c><00:12:03.680><c> a</c><00:12:03.860><c> lambda</c><00:12:04.519><c> function</c><00:12:04.910><c> or</c><00:12:05.089><c> method</c>

00:12:05.110 --> 00:12:05.120 align:start position:0%
give it a lambda function or method
 

00:12:05.120 --> 00:12:08.710 align:start position:0%
give it a lambda function or method
reference<00:12:05.930><c> in</c><00:12:06.140><c> this</c><00:12:06.410><c> case</c><00:12:06.730><c> that</c><00:12:07.730><c> transforms</c>

00:12:08.710 --> 00:12:08.720 align:start position:0%
reference in this case that transforms
 

00:12:08.720 --> 00:12:11.949 align:start position:0%
reference in this case that transforms
the<00:12:08.990><c> element</c><00:12:09.890><c> so</c><00:12:10.250><c> we</c><00:12:10.399><c> say</c><00:12:10.550><c> string</c><00:12:11.029><c> colon</c><00:12:11.660><c> colon</c>

00:12:11.949 --> 00:12:11.959 align:start position:0%
the element so we say string colon colon
 

00:12:11.959 --> 00:12:13.509 align:start position:0%
the element so we say string colon colon
to<00:12:12.110><c> uppercase</c><00:12:12.560><c> so</c><00:12:12.949><c> it</c><00:12:13.040><c> takes</c><00:12:13.220><c> a</c><00:12:13.279><c> string</c>

00:12:13.509 --> 00:12:13.519 align:start position:0%
to uppercase so it takes a string
 

00:12:13.519 --> 00:12:16.420 align:start position:0%
to uppercase so it takes a string
converts<00:12:13.970><c> it</c><00:12:14.089><c> to</c><00:12:14.120><c> uppercase</c><00:12:14.899><c> and</c><00:12:15.220><c> replace</c><00:12:16.220><c> all</c>

00:12:16.420 --> 00:12:16.430 align:start position:0%
converts it to uppercase and replace all
 

00:12:16.430 --> 00:12:18.790 align:start position:0%
converts it to uppercase and replace all
just<00:12:16.820><c> runs</c><00:12:17.060><c> through</c><00:12:17.320><c> for</c><00:12:18.320><c> every</c><00:12:18.529><c> element</c>

00:12:18.790 --> 00:12:18.800 align:start position:0%
just runs through for every element
 

00:12:18.800 --> 00:12:20.980 align:start position:0%
just runs through for every element
replaces<00:12:19.010><c> it</c><00:12:19.430><c> with</c><00:12:19.459><c> its</c><00:12:19.699><c> with</c><00:12:20.300><c> its</c><00:12:20.449><c> uppercase</c>

00:12:20.980 --> 00:12:20.990 align:start position:0%
replaces it with its with its uppercase
 

00:12:20.990 --> 00:12:24.100 align:start position:0%
replaces it with its with its uppercase
equivalent<00:12:21.709><c> and</c><00:12:21.860><c> so</c><00:12:21.890><c> in</c><00:12:22.790><c> one</c><00:12:23.060><c> line</c><00:12:23.300><c> we've</c>

00:12:24.100 --> 00:12:24.110 align:start position:0%
equivalent and so in one line we've
 

00:12:24.110 --> 00:12:26.139 align:start position:0%
equivalent and so in one line we've
replaced<00:12:24.589><c> those</c><00:12:25.130><c> loops</c><00:12:25.459><c> that</c><00:12:25.670><c> kind</c><00:12:25.910><c> of</c><00:12:26.000><c> did</c>

00:12:26.139 --> 00:12:26.149 align:start position:0%
replaced those loops that kind of did
 

00:12:26.149 --> 00:12:28.689 align:start position:0%
replaced those loops that kind of did
things<00:12:26.360><c> sort</c><00:12:26.899><c> of</c><00:12:26.990><c> one</c><00:12:27.260><c> at</c><00:12:27.410><c> a</c><00:12:27.470><c> time</c><00:12:27.649><c> now</c><00:12:28.430><c> when</c>

00:12:28.689 --> 00:12:28.699 align:start position:0%
things sort of one at a time now when
 

00:12:28.699 --> 00:12:30.280 align:start position:0%
things sort of one at a time now when
people<00:12:28.880><c> see</c><00:12:29.180><c> this</c><00:12:29.360><c> they</c><00:12:29.420><c> often</c><00:12:29.839><c> say</c><00:12:29.959><c> oh</c><00:12:29.990><c> I</c><00:12:30.110><c> want</c>

00:12:30.280 --> 00:12:30.290 align:start position:0%
people see this they often say oh I want
 

00:12:30.290 --> 00:12:32.110 align:start position:0%
people see this they often say oh I want
to<00:12:30.440><c> change</c><00:12:30.589><c> I</c><00:12:30.949><c> want</c><00:12:31.220><c> to</c><00:12:31.250><c> change</c><00:12:31.399><c> this</c><00:12:31.640><c> list</c><00:12:31.940><c> so</c>

00:12:32.110 --> 00:12:32.120 align:start position:0%
to change I want to change this list so
 

00:12:32.120 --> 00:12:36.009 align:start position:0%
to change I want to change this list so
that<00:12:33.040><c> every</c><00:12:34.040><c> element</c><00:12:34.310><c> is</c><00:12:34.610><c> is</c><00:12:35.089><c> transformed</c>

00:12:36.009 --> 00:12:36.019 align:start position:0%
that every element is is transformed
 

00:12:36.019 --> 00:12:37.720 align:start position:0%
that every element is is transformed
into<00:12:36.110><c> something</c><00:12:36.320><c> different</c><00:12:36.769><c> of</c><00:12:36.920><c> a</c><00:12:37.459><c> different</c>

00:12:37.720 --> 00:12:37.730 align:start position:0%
into something different of a different
 

00:12:37.730 --> 00:12:40.480 align:start position:0%
into something different of a different
type<00:12:37.910><c> and</c><00:12:38.180><c> you</c><00:12:38.899><c> cannot</c><00:12:39.320><c> do</c><00:12:39.709><c> that</c><00:12:39.740><c> with</c><00:12:39.920><c> replace</c>

00:12:40.480 --> 00:12:40.490 align:start position:0%
type and you cannot do that with replace
 

00:12:40.490 --> 00:12:42.220 align:start position:0%
type and you cannot do that with replace
all<00:12:40.730><c> for</c><00:12:41.120><c> that</c><00:12:41.240><c> you</c><00:12:41.449><c> need</c><00:12:41.570><c> to</c><00:12:41.600><c> use</c><00:12:41.779><c> a</c><00:12:41.810><c> stream</c>

00:12:42.220 --> 00:12:42.230 align:start position:0%
all for that you need to use a stream
 

00:12:42.230 --> 00:12:44.860 align:start position:0%
all for that you need to use a stream
stream<00:12:43.070><c> out</c><00:12:43.220><c> the</c><00:12:43.370><c> elements</c><00:12:43.790><c> transform</c><00:12:44.690><c> them</c>

00:12:44.860 --> 00:12:44.870 align:start position:0%
stream out the elements transform them
 

00:12:44.870 --> 00:12:46.150 align:start position:0%
stream out the elements transform them
into<00:12:45.019><c> something</c><00:12:45.260><c> of</c><00:12:45.500><c> different</c><00:12:45.769><c> type</c><00:12:45.920><c> and</c>

00:12:46.150 --> 00:12:46.160 align:start position:0%
into something of different type and
 

00:12:46.160 --> 00:12:49.980 align:start position:0%
into something of different type and
then<00:12:46.279><c> collect</c><00:12:47.029><c> them</c><00:12:47.180><c> into</c><00:12:47.420><c> a</c><00:12:47.449><c> new</c><00:12:47.630><c> list</c>

00:12:49.980 --> 00:12:49.990 align:start position:0%
 
 

00:12:49.990 --> 00:12:53.920 align:start position:0%
 
alright<00:12:50.990><c> so</c><00:12:51.320><c> another</c><00:12:52.149><c> method</c><00:12:53.149><c> that</c><00:12:53.390><c> was</c><00:12:53.570><c> added</c>

00:12:53.920 --> 00:12:53.930 align:start position:0%
alright so another method that was added
 

00:12:53.930 --> 00:12:57.400 align:start position:0%
alright so another method that was added
to<00:12:54.019><c> the</c><00:12:54.110><c> list</c><00:12:54.230><c> interface</c><00:12:54.560><c> is</c><00:12:54.980><c> sort</c><00:12:56.050><c> so</c><00:12:57.050><c> well</c>

00:12:57.400 --> 00:12:57.410 align:start position:0%
to the list interface is sort so well
 

00:12:57.410 --> 00:13:00.189 align:start position:0%
to the list interface is sort so well
big<00:12:58.310><c> deal</c><00:12:58.339><c> instead</c><00:12:59.269><c> of</c><00:12:59.390><c> calling</c><00:12:59.600><c> collections</c>

00:13:00.189 --> 00:13:00.199 align:start position:0%
big deal instead of calling collections
 

00:13:00.199 --> 00:13:02.230 align:start position:0%
big deal instead of calling collections
lot<00:13:00.350><c> sort</c><00:13:00.649><c> on</c><00:13:00.829><c> a</c><00:13:00.860><c> list</c><00:13:01.160><c> just</c><00:13:01.670><c> called</c><00:13:01.910><c> list</c><00:13:02.120><c> dot</c>

00:13:02.230 --> 00:13:02.240 align:start position:0%
lot sort on a list just called list dot
 

00:13:02.240 --> 00:13:04.269 align:start position:0%
lot sort on a list just called list dot
sort<00:13:02.510><c> what</c><00:13:02.930><c> does</c><00:13:03.050><c> that</c><00:13:03.079><c> buy</c><00:13:03.350><c> you</c><00:13:03.410><c> well</c><00:13:04.250><c> a</c>

00:13:04.269 --> 00:13:04.279 align:start position:0%
sort what does that buy you well a
 

00:13:04.279 --> 00:13:13.150 align:start position:0%
sort what does that buy you well a
couple<00:13:04.699><c> things</c><00:13:05.199><c> so</c><00:13:07.990><c> the</c><00:13:11.199><c> the</c><00:13:12.199><c> collections</c><00:13:12.890><c> dot</c>

00:13:13.150 --> 00:13:13.160 align:start position:0%
couple things so the the collections dot
 

00:13:13.160 --> 00:13:18.550 align:start position:0%
couple things so the the collections dot
sort<00:13:13.579><c> method</c><00:13:15.790><c> had</c><00:13:16.790><c> to</c><00:13:16.910><c> operate</c><00:13:17.300><c> on</c><00:13:17.480><c> a</c><00:13:17.959><c> list</c><00:13:18.319><c> of</c>

00:13:18.550 --> 00:13:18.560 align:start position:0%
sort method had to operate on a list of
 

00:13:18.560 --> 00:13:21.040 align:start position:0%
sort method had to operate on a list of
any<00:13:19.399><c> implementation</c><00:13:20.270><c> of</c>

00:13:21.040 --> 00:13:21.050 align:start position:0%
any implementation of
 

00:13:21.050 --> 00:13:23.859 align:start position:0%
any implementation of
and<00:13:21.139><c> so</c><00:13:21.769><c> the</c><00:13:22.399><c> the</c><00:13:22.699><c> most</c><00:13:22.910><c> generic</c><00:13:23.329><c> way</c><00:13:23.569><c> to</c><00:13:23.629><c> do</c>

00:13:23.859 --> 00:13:23.869 align:start position:0%
and so the the most generic way to do
 

00:13:23.869 --> 00:13:27.730 align:start position:0%
and so the the most generic way to do
that<00:13:24.050><c> is</c><00:13:24.379><c> to</c><00:13:25.600><c> copy</c><00:13:26.600><c> out</c><00:13:26.899><c> the</c><00:13:26.930><c> list</c><00:13:27.290><c> elements</c>

00:13:27.730 --> 00:13:27.740 align:start position:0%
that is to copy out the list elements
 

00:13:27.740 --> 00:13:31.210 align:start position:0%
that is to copy out the list elements
into<00:13:28.069><c> an</c><00:13:28.160><c> array</c><00:13:28.720><c> sort</c><00:13:29.720><c> that</c><00:13:29.899><c> in</c><00:13:30.110><c> it</c><00:13:30.410><c> would</c><00:13:31.040><c> be</c><00:13:31.189><c> a</c>

00:13:31.210 --> 00:13:31.220 align:start position:0%
into an array sort that in it would be a
 

00:13:31.220 --> 00:13:33.879 align:start position:0%
into an array sort that in it would be a
temporary<00:13:31.459><c> array</c><00:13:32.350><c> that</c><00:13:33.350><c> was</c><00:13:33.470><c> temporarily</c>

00:13:33.879 --> 00:13:33.889 align:start position:0%
temporary array that was temporarily
 

00:13:33.889 --> 00:13:35.290 align:start position:0%
temporary array that was temporarily
allocated<00:13:34.459><c> just</c><00:13:34.699><c> for</c><00:13:34.850><c> the</c><00:13:34.910><c> purpose</c><00:13:35.180><c> of</c>

00:13:35.290 --> 00:13:35.300 align:start position:0%
allocated just for the purpose of
 

00:13:35.300 --> 00:13:37.960 align:start position:0%
allocated just for the purpose of
sorting<00:13:35.689><c> sort</c><00:13:36.559><c> the</c><00:13:36.680><c> array</c><00:13:36.709><c> in</c><00:13:37.129><c> place</c><00:13:37.369><c> and</c><00:13:37.670><c> then</c>

00:13:37.960 --> 00:13:37.970 align:start position:0%
sorting sort the array in place and then
 

00:13:37.970 --> 00:13:43.569 align:start position:0%
sorting sort the array in place and then
copy<00:13:38.269><c> all</c><00:13:38.420><c> those</c><00:13:38.779><c> elements</c><00:13:39.259><c> back</c><00:13:39.889><c> and</c><00:13:41.290><c> so</c><00:13:42.579><c> the</c>

00:13:43.569 --> 00:13:43.579 align:start position:0%
copy all those elements back and so the
 

00:13:43.579 --> 00:13:45.369 align:start position:0%
copy all those elements back and so the
default<00:13:43.879><c> implementation</c><00:13:44.059><c> of</c><00:13:44.689><c> list</c><00:13:44.899><c> dot</c><00:13:45.079><c> sort</c>

00:13:45.369 --> 00:13:45.379 align:start position:0%
default implementation of list dot sort
 

00:13:45.379 --> 00:13:48.790 align:start position:0%
default implementation of list dot sort
does<00:13:46.009><c> exactly</c><00:13:46.369><c> that</c><00:13:46.550><c> because</c><00:13:47.480><c> it</c><00:13:48.079><c> doesn't</c>

00:13:48.790 --> 00:13:48.800 align:start position:0%
does exactly that because it doesn't
 

00:13:48.800 --> 00:13:50.980 align:start position:0%
does exactly that because it doesn't
know<00:13:48.889><c> who</c><00:13:49.129><c> it's</c><00:13:49.279><c> inherited</c><00:13:49.790><c> by</c><00:13:49.990><c> however</c>

00:13:50.980 --> 00:13:50.990 align:start position:0%
know who it's inherited by however
 

00:13:50.990 --> 00:13:53.590 align:start position:0%
know who it's inherited by however
ArrayList<00:13:51.829><c> dot</c><00:13:52.069><c> sort</c><00:13:52.339><c> again</c><00:13:52.730><c> ArrayList</c><00:13:53.329><c> being</c>

00:13:53.590 --> 00:13:53.600 align:start position:0%
ArrayList dot sort again ArrayList being
 

00:13:53.600 --> 00:13:55.049 align:start position:0%
ArrayList dot sort again ArrayList being
the<00:13:53.689><c> most</c><00:13:53.839><c> commonly</c><00:13:54.259><c> used</c><00:13:54.379><c> collection</c>

00:13:55.049 --> 00:13:55.059 align:start position:0%
the most commonly used collection
 

00:13:55.059 --> 00:13:57.850 align:start position:0%
the most commonly used collection
ArrayList<00:13:56.059><c> dot</c><00:13:56.300><c> sort</c><00:13:56.600><c> overrides</c><00:13:57.290><c> the</c><00:13:57.559><c> default</c>

00:13:57.850 --> 00:13:57.860 align:start position:0%
ArrayList dot sort overrides the default
 

00:13:57.860 --> 00:14:01.600 align:start position:0%
ArrayList dot sort overrides the default
implementation<00:13:58.040><c> and</c><00:13:58.850><c> says</c><00:13:59.480><c> hey</c><00:14:00.290><c> I</c><00:14:00.589><c> am</c><00:14:01.519><c> an</c>

00:14:01.600 --> 00:14:01.610 align:start position:0%
implementation and says hey I am an
 

00:14:01.610 --> 00:14:03.699 align:start position:0%
implementation and says hey I am an
ArrayList<00:14:02.029><c> I</c><00:14:02.209><c> know</c><00:14:02.269><c> I</c><00:14:02.449><c> have</c><00:14:03.019><c> all</c><00:14:03.319><c> my</c><00:14:03.529><c> elements</c>

00:14:03.699 --> 00:14:03.709 align:start position:0%
ArrayList I know I have all my elements
 

00:14:03.709 --> 00:14:06.129 align:start position:0%
ArrayList I know I have all my elements
stored<00:14:04.129><c> in</c><00:14:04.339><c> internal</c><00:14:04.850><c> in</c><00:14:05.269><c> an</c><00:14:05.569><c> internal</c><00:14:05.869><c> array</c>

00:14:06.129 --> 00:14:06.139 align:start position:0%
stored in internal in an internal array
 

00:14:06.139 --> 00:14:08.290 align:start position:0%
stored in internal in an internal array
I'll<00:14:06.410><c> just</c><00:14:07.040><c> sort</c><00:14:07.339><c> them</c><00:14:07.550><c> in</c><00:14:07.670><c> place</c><00:14:07.910><c> in</c><00:14:08.119><c> fact</c>

00:14:08.290 --> 00:14:08.300 align:start position:0%
I'll just sort them in place in fact
 

00:14:08.300 --> 00:14:09.460 align:start position:0%
I'll just sort them in place in fact
there's<00:14:08.480><c> something</c><00:14:08.629><c> called</c><00:14:08.839><c> arrays</c><00:14:09.199><c> dot</c><00:14:09.410><c> sort</c>

00:14:09.460 --> 00:14:09.470 align:start position:0%
there's something called arrays dot sort
 

00:14:09.470 --> 00:14:12.280 align:start position:0%
there's something called arrays dot sort
so<00:14:10.160><c> all</c><00:14:10.309><c> it</c><00:14:10.429><c> does</c><00:14:10.610><c> is</c><00:14:10.910><c> turn</c><00:14:11.569><c> around</c><00:14:11.600><c> and</c><00:14:12.079><c> call</c><00:14:12.230><c> a</c>

00:14:12.280 --> 00:14:12.290 align:start position:0%
so all it does is turn around and call a
 

00:14:12.290 --> 00:14:15.759 align:start position:0%
so all it does is turn around and call a
raised<00:14:12.589><c> dot</c><00:14:12.829><c> sort</c><00:14:13.100><c> on</c><00:14:13.459><c> on</c><00:14:14.269><c> its</c><00:14:14.990><c> internal</c><00:14:15.379><c> array</c>

00:14:15.759 --> 00:14:15.769 align:start position:0%
raised dot sort on on its internal array
 

00:14:15.769 --> 00:14:19.179 align:start position:0%
raised dot sort on on its internal array
and<00:14:16.100><c> so</c><00:14:16.879><c> we've</c><00:14:17.480><c> we've</c><00:14:18.110><c> saved</c><00:14:18.529><c> a</c><00:14:18.889><c> bunch</c><00:14:19.069><c> of</c>

00:14:19.179 --> 00:14:19.189 align:start position:0%
and so we've we've saved a bunch of
 

00:14:19.189 --> 00:14:20.980 align:start position:0%
and so we've we've saved a bunch of
memory<00:14:19.490><c> allocation</c><00:14:20.059><c> and</c><00:14:20.269><c> we</c><00:14:20.329><c> saved</c><00:14:20.720><c> a</c><00:14:20.839><c> copy</c>

00:14:20.980 --> 00:14:20.990 align:start position:0%
memory allocation and we saved a copy
 

00:14:20.990 --> 00:14:24.040 align:start position:0%
memory allocation and we saved a copy
out<00:14:21.170><c> and</c><00:14:21.559><c> a</c><00:14:21.589><c> copy</c><00:14:21.800><c> back</c><00:14:22.040><c> in</c><00:14:22.309><c> so</c><00:14:23.029><c> the</c><00:14:23.389><c> override</c>

00:14:24.040 --> 00:14:24.050 align:start position:0%
out and a copy back in so the override
 

00:14:24.050 --> 00:14:26.590 align:start position:0%
out and a copy back in so the override
of<00:14:24.439><c> raela</c><00:14:25.069><c> store</c><00:14:25.519><c> actually</c><00:14:25.759><c> is</c><00:14:26.059><c> buying</c><00:14:26.329><c> us</c>

00:14:26.590 --> 00:14:26.600 align:start position:0%
of raela store actually is buying us
 

00:14:26.600 --> 00:14:30.639 align:start position:0%
of raela store actually is buying us
quite<00:14:27.170><c> a</c><00:14:27.199><c> bit</c><00:14:27.439><c> here</c><00:14:27.709><c> and</c><00:14:28.629><c> in</c><00:14:29.629><c> turn</c><00:14:29.990><c> collections</c>

00:14:30.639 --> 00:14:30.649 align:start position:0%
quite a bit here and in turn collections
 

00:14:30.649 --> 00:14:32.350 align:start position:0%
quite a bit here and in turn collections
that<00:14:30.800><c> sort</c><00:14:31.069><c> simply</c><00:14:31.399><c> turns</c><00:14:31.610><c> around</c><00:14:31.790><c> and</c><00:14:32.120><c> called</c>

00:14:32.350 --> 00:14:32.360 align:start position:0%
that sort simply turns around and called
 

00:14:32.360 --> 00:14:36.309 align:start position:0%
that sort simply turns around and called
sort<00:14:32.749><c> on</c><00:14:33.850><c> on</c><00:14:34.850><c> the</c><00:14:35.300><c> list</c><00:14:35.480><c> that</c><00:14:35.720><c> it's</c><00:14:35.870><c> provided</c>

00:14:36.309 --> 00:14:36.319 align:start position:0%
sort on on the list that it's provided
 

00:14:36.319 --> 00:14:37.509 align:start position:0%
sort on on the list that it's provided
so<00:14:36.499><c> you</c><00:14:36.529><c> don't</c><00:14:36.769><c> even</c><00:14:36.889><c> have</c><00:14:37.009><c> to</c><00:14:37.189><c> change</c><00:14:37.339><c> your</c>

00:14:37.509 --> 00:14:37.519 align:start position:0%
so you don't even have to change your
 

00:14:37.519 --> 00:14:39.369 align:start position:0%
so you don't even have to change your
code<00:14:37.670><c> so</c><00:14:37.999><c> if</c><00:14:38.089><c> your</c><00:14:38.209><c> code</c><00:14:38.449><c> is</c><00:14:38.689><c> using</c><00:14:39.230><c> array</c>

00:14:39.369 --> 00:14:39.379 align:start position:0%
code so if your code is using array
 

00:14:39.379 --> 00:14:40.869 align:start position:0%
code so if your code is using array
lists<00:14:39.740><c> and</c><00:14:39.829><c> you</c><00:14:39.889><c> call</c><00:14:40.100><c> collection</c><00:14:40.519><c> dot</c><00:14:40.639><c> sort</c>

00:14:40.869 --> 00:14:40.879 align:start position:0%
lists and you call collection dot sort
 

00:14:40.879 --> 00:14:46.840 align:start position:0%
lists and you call collection dot sort
you<00:14:41.480><c> get</c><00:14:41.720><c> this</c><00:14:41.929><c> new</c><00:14:42.199><c> behavior</c><00:14:42.379><c> for</c><00:14:42.889><c> free</c><00:14:45.850><c> all</c>

00:14:46.840 --> 00:14:46.850 align:start position:0%
you get this new behavior for free all
 

00:14:46.850 --> 00:14:52.720 align:start position:0%
you get this new behavior for free all
right<00:14:47.059><c> now</c><00:14:47.389><c> I'm</c><00:14:47.600><c> moving</c><00:14:47.870><c> on</c><00:14:47.990><c> to</c><00:14:48.290><c> map</c><00:14:51.519><c> there</c><00:14:52.519><c> are</c>

00:14:52.720 --> 00:14:52.730 align:start position:0%
right now I'm moving on to map there are
 

00:14:52.730 --> 00:14:54.249 align:start position:0%
right now I'm moving on to map there are
a<00:14:52.790><c> whole</c><00:14:53.029><c> bunch</c><00:14:53.059><c> of</c><00:14:53.360><c> methods</c><00:14:53.540><c> added</c><00:14:53.990><c> to</c><00:14:54.079><c> map</c>

00:14:54.249 --> 00:14:54.259 align:start position:0%
a whole bunch of methods added to map
 

00:14:54.259 --> 00:14:56.049 align:start position:0%
a whole bunch of methods added to map
but<00:14:54.649><c> I'm</c><00:14:54.980><c> going</c><00:14:55.279><c> to</c><00:14:55.339><c> run</c><00:14:55.519><c> through</c><00:14:55.730><c> I</c><00:14:55.759><c> think</c><00:14:55.910><c> the</c>

00:14:56.049 --> 00:14:56.059 align:start position:0%
but I'm going to run through I think the
 

00:14:56.059 --> 00:14:57.850 align:start position:0%
but I'm going to run through I think the
most<00:14:56.269><c> some</c><00:14:57.079><c> of</c><00:14:57.170><c> the</c><00:14:57.230><c> more</c><00:14:57.379><c> interesting</c><00:14:57.679><c> ones</c>

00:14:57.850 --> 00:14:57.860 align:start position:0%
most some of the more interesting ones
 

00:14:57.860 --> 00:14:59.769 align:start position:0%
most some of the more interesting ones
here<00:14:58.249><c> but</c><00:14:58.459><c> they're</c><00:14:58.970><c> a</c><00:14:58.999><c> lot</c><00:14:59.120><c> more</c><00:14:59.179><c> than</c><00:14:59.509><c> I</c><00:14:59.600><c> can</c>

00:14:59.769 --> 00:14:59.779 align:start position:0%
here but they're a lot more than I can
 

00:14:59.779 --> 00:15:03.519 align:start position:0%
here but they're a lot more than I can
cover<00:15:00.259><c> in</c><00:15:00.439><c> this</c><00:15:00.529><c> talk</c><00:15:01.360><c> so</c><00:15:02.360><c> in</c><00:15:02.480><c> Java</c><00:15:02.660><c> 7</c><00:15:02.959><c> if</c><00:15:03.350><c> you</c>

00:15:03.519 --> 00:15:03.529 align:start position:0%
cover in this talk so in Java 7 if you
 

00:15:03.529 --> 00:15:06.340 align:start position:0%
cover in this talk so in Java 7 if you
wanted<00:15:03.829><c> to</c><00:15:03.980><c> do</c><00:15:04.100><c> something</c><00:15:04.549><c> for</c><00:15:05.179><c> every</c><00:15:05.959><c> element</c>

00:15:06.340 --> 00:15:06.350 align:start position:0%
wanted to do something for every element
 

00:15:06.350 --> 00:15:08.590 align:start position:0%
wanted to do something for every element
of<00:15:06.470><c> the</c><00:15:06.559><c> map</c><00:15:06.740><c> like</c><00:15:07.069><c> print</c><00:15:07.399><c> out</c><00:15:07.549><c> you</c><00:15:08.299><c> know</c><00:15:08.389><c> print</c>

00:15:08.590 --> 00:15:08.600 align:start position:0%
of the map like print out you know print
 

00:15:08.600 --> 00:15:11.049 align:start position:0%
of the map like print out you know print
out<00:15:08.720><c> the</c><00:15:08.839><c> key</c><00:15:09.049><c> the</c><00:15:09.679><c> key</c><00:15:09.860><c> value</c><00:15:10.309><c> you</c><00:15:10.610><c> know</c><00:15:10.670><c> print</c>

00:15:11.049 --> 00:15:11.059 align:start position:0%
out the key the key value you know print
 

00:15:11.059 --> 00:15:15.179 align:start position:0%
out the key the key value you know print
out<00:15:11.149><c> each</c><00:15:11.299><c> key</c><00:15:11.540><c> in</c><00:15:11.629><c> value</c><00:15:11.959><c> you'd</c><00:15:12.559><c> use</c><00:15:14.110><c> you</c>

00:15:15.179 --> 00:15:15.189 align:start position:0%
out each key in value you'd use you
 

00:15:15.189 --> 00:15:19.059 align:start position:0%
out each key in value you'd use you
usually<00:15:16.189><c> do</c><00:15:16.759><c> a</c><00:15:17.089><c> loop</c><00:15:17.360><c> over</c><00:15:18.019><c> the</c><00:15:18.259><c> entry</c><00:15:18.649><c> set</c><00:15:18.860><c> of</c>

00:15:19.059 --> 00:15:19.069 align:start position:0%
usually do a loop over the entry set of
 

00:15:19.069 --> 00:15:20.919 align:start position:0%
usually do a loop over the entry set of
the<00:15:19.189><c> map</c><00:15:19.339><c> and</c><00:15:19.639><c> then</c><00:15:20.089><c> do</c><00:15:20.299><c> something</c><00:15:20.540><c> useful</c>

00:15:20.919 --> 00:15:20.929 align:start position:0%
the map and then do something useful
 

00:15:20.929 --> 00:15:23.169 align:start position:0%
the map and then do something useful
within<00:15:21.319><c> that</c><00:15:21.529><c> for</c><00:15:21.829><c> loop</c><00:15:21.980><c> and</c><00:15:22.160><c> so</c><00:15:22.610><c> in</c><00:15:22.730><c> java</c><00:15:22.939><c> 8</c>

00:15:23.169 --> 00:15:23.179 align:start position:0%
within that for loop and so in java 8
 

00:15:23.179 --> 00:15:25.900 align:start position:0%
within that for loop and so in java 8
there's<00:15:23.809><c> a</c><00:15:23.899><c> for</c><00:15:24.350><c> each</c><00:15:24.499><c> on</c><00:15:24.829><c> a</c><00:15:24.889><c> map</c><00:15:25.399><c> it's</c><00:15:25.759><c> just</c>

00:15:25.900 --> 00:15:25.910 align:start position:0%
there's a for each on a map it's just
 

00:15:25.910 --> 00:15:27.789 align:start position:0%
there's a for each on a map it's just
kind<00:15:26.269><c> of</c><00:15:26.360><c> like</c><00:15:26.420><c> the</c><00:15:26.720><c> for</c><00:15:26.929><c> each</c><00:15:27.049><c> on</c><00:15:27.319><c> interval</c>

00:15:27.789 --> 00:15:27.799 align:start position:0%
kind of like the for each on interval
 

00:15:27.799 --> 00:15:31.660 align:start position:0%
kind of like the for each on interval
except<00:15:28.519><c> that</c><00:15:28.670><c> instead</c><00:15:28.850><c> of</c><00:15:29.059><c> taking</c><00:15:30.579><c> instead</c><00:15:31.579><c> of</c>

00:15:31.660 --> 00:15:31.670 align:start position:0%
except that instead of taking instead of
 

00:15:31.670 --> 00:15:32.949 align:start position:0%
except that instead of taking instead of
taking<00:15:31.939><c> a</c><00:15:31.999><c> function</c><00:15:32.329><c> that</c><00:15:32.360><c> takes</c><00:15:32.540><c> one</c>

00:15:32.949 --> 00:15:32.959 align:start position:0%
taking a function that takes one
 

00:15:32.959 --> 00:15:34.420 align:start position:0%
taking a function that takes one
argument

00:15:34.420 --> 00:15:34.430 align:start position:0%
argument
 

00:15:34.430 --> 00:15:37.460 align:start position:0%
argument
by<00:15:35.430><c> function</c><00:15:35.940><c> which</c><00:15:36.180><c> takes</c><00:15:36.420><c> two</c><00:15:37.200><c> arguments</c>

00:15:37.460 --> 00:15:37.470 align:start position:0%
by function which takes two arguments
 

00:15:37.470 --> 00:15:38.690 align:start position:0%
by function which takes two arguments
the<00:15:37.710><c> key</c><00:15:37.950><c> and</c><00:15:38.070><c> the</c><00:15:38.160><c> value</c>

00:15:38.690 --> 00:15:38.700 align:start position:0%
the key and the value
 

00:15:38.700 --> 00:15:39.950 align:start position:0%
the key and the value
so<00:15:39.090><c> you</c><00:15:39.150><c> can</c><00:15:39.270><c> write</c><00:15:39.420><c> a</c><00:15:39.450><c> lambda</c><00:15:39.720><c> expression</c>

00:15:39.950 --> 00:15:39.960 align:start position:0%
so you can write a lambda expression
 

00:15:39.960 --> 00:15:44.300 align:start position:0%
so you can write a lambda expression
that<00:15:40.410><c> does</c><00:15:40.590><c> that</c><00:15:40.830><c> and</c><00:15:41.570><c> it</c><00:15:42.920><c> you</c><00:15:43.920><c> know</c><00:15:43.950><c> it's</c>

00:15:44.300 --> 00:15:44.310 align:start position:0%
that does that and it you know it's
 

00:15:44.310 --> 00:15:46.100 align:start position:0%
that does that and it you know it's
mostly<00:15:44.520><c> a</c><00:15:44.730><c> syntactic</c><00:15:45.120><c> nicety</c><00:15:45.690><c> but</c><00:15:45.870><c> what</c><00:15:46.020><c> it</c>

00:15:46.100 --> 00:15:46.110 align:start position:0%
mostly a syntactic nicety but what it
 

00:15:46.110 --> 00:15:47.690 align:start position:0%
mostly a syntactic nicety but what it
does<00:15:46.260><c> is</c><00:15:46.500><c> it</c><00:15:46.680><c> instead</c><00:15:47.040><c> of</c><00:15:47.100><c> you</c><00:15:47.310><c> having</c><00:15:47.550><c> to</c>

00:15:47.690 --> 00:15:47.700 align:start position:0%
does is it instead of you having to
 

00:15:47.700 --> 00:15:49.850 align:start position:0%
does is it instead of you having to
iterate<00:15:48.330><c> over</c><00:15:48.360><c> the</c><00:15:48.690><c> map</c><00:15:48.840><c> entries</c><00:15:49.260><c> and</c><00:15:49.530><c> then</c><00:15:49.680><c> do</c>

00:15:49.850 --> 00:15:49.860 align:start position:0%
iterate over the map entries and then do
 

00:15:49.860 --> 00:15:52.040 align:start position:0%
iterate over the map entries and then do
get<00:15:50.100><c> key</c><00:15:50.310><c> and</c><00:15:50.520><c> get</c><00:15:50.670><c> value</c><00:15:51.030><c> it</c><00:15:51.270><c> just</c><00:15:51.510><c> hands</c><00:15:51.870><c> you</c>

00:15:52.040 --> 00:15:52.050 align:start position:0%
get key and get value it just hands you
 

00:15:52.050 --> 00:15:54.590 align:start position:0%
get key and get value it just hands you
the<00:15:52.110><c> key</c><00:15:52.470><c> and</c><00:15:52.650><c> value</c><00:15:52.800><c> separately</c><00:15:53.580><c> so</c><00:15:54.150><c> it's</c>

00:15:54.590 --> 00:15:54.600 align:start position:0%
the key and value separately so it's
 

00:15:54.600 --> 00:15:58.970 align:start position:0%
the key and value separately so it's
much<00:15:55.080><c> more</c><00:15:55.230><c> convenient</c><00:15:55.620><c> in</c><00:15:55.890><c> that</c><00:15:56.010><c> way</c><00:15:57.980><c> similar</c>

00:15:58.970 --> 00:15:58.980 align:start position:0%
much more convenient in that way similar
 

00:15:58.980 --> 00:16:01.220 align:start position:0%
much more convenient in that way similar
to<00:15:59.190><c> lists</c><00:15:59.610><c> there's</c><00:15:59.850><c> also</c><00:16:00.000><c> a</c><00:16:00.120><c> replace</c><00:16:00.600><c> all</c><00:16:00.930><c> on</c>

00:16:01.220 --> 00:16:01.230 align:start position:0%
to lists there's also a replace all on
 

00:16:01.230 --> 00:16:05.330 align:start position:0%
to lists there's also a replace all on
map<00:16:01.560><c> and</c><00:16:01.950><c> so</c><00:16:02.340><c> again</c><00:16:02.850><c> you</c><00:16:03.060><c> can</c><00:16:03.270><c> you</c><00:16:03.900><c> can</c><00:16:04.170><c> in</c><00:16:05.070><c> Java</c>

00:16:05.330 --> 00:16:05.340 align:start position:0%
map and so again you can you can in Java
 

00:16:05.340 --> 00:16:08.390 align:start position:0%
map and so again you can you can in Java
7<00:16:05.550><c> you</c><00:16:05.760><c> have</c><00:16:05.880><c> to</c><00:16:06.000><c> write</c><00:16:06.150><c> a</c><00:16:06.680><c> for</c><00:16:07.680><c> loop</c><00:16:07.710><c> over</c><00:16:08.040><c> each</c>

00:16:08.390 --> 00:16:08.400 align:start position:0%
7 you have to write a for loop over each
 

00:16:08.400 --> 00:16:12.620 align:start position:0%
7 you have to write a for loop over each
entry<00:16:08.930><c> map</c><00:16:09.930><c> entry</c><00:16:10.380><c> has</c><00:16:10.950><c> a</c><00:16:11.460><c> set</c><00:16:12.060><c> value</c><00:16:12.600><c> method</c>

00:16:12.620 --> 00:16:12.630 align:start position:0%
entry map entry has a set value method
 

00:16:12.630 --> 00:16:15.800 align:start position:0%
entry map entry has a set value method
so<00:16:13.560><c> you</c><00:16:13.620><c> can</c><00:16:13.830><c> actually</c><00:16:14.030><c> modify</c><00:16:15.030><c> the</c><00:16:15.060><c> the</c>

00:16:15.800 --> 00:16:15.810 align:start position:0%
so you can actually modify the the
 

00:16:15.810 --> 00:16:18.650 align:start position:0%
so you can actually modify the the
underlying<00:16:16.050><c> entry</c><00:16:16.560><c> in</c><00:16:16.740><c> place</c><00:16:17.300><c> but</c><00:16:18.300><c> replace</c>

00:16:18.650 --> 00:16:18.660 align:start position:0%
underlying entry in place but replace
 

00:16:18.660 --> 00:16:20.270 align:start position:0%
underlying entry in place but replace
all<00:16:18.840><c> does</c><00:16:19.080><c> that</c><00:16:19.290><c> for</c><00:16:19.560><c> you</c><00:16:19.710><c> and</c><00:16:19.920><c> so</c><00:16:20.100><c> the</c>

00:16:20.270 --> 00:16:20.280 align:start position:0%
all does that for you and so the
 

00:16:20.280 --> 00:16:21.920 align:start position:0%
all does that for you and so the
semantics<00:16:20.760><c> here</c><00:16:20.910><c> are</c><00:16:21.150><c> this</c><00:16:21.360><c> takes</c><00:16:21.600><c> a</c><00:16:21.690><c> lambda</c>

00:16:21.920 --> 00:16:21.930 align:start position:0%
semantics here are this takes a lambda
 

00:16:21.930 --> 00:16:24.650 align:start position:0%
semantics here are this takes a lambda
that<00:16:22.830><c> takes</c><00:16:23.010><c> two</c><00:16:23.220><c> arguments</c><00:16:23.490><c> the</c><00:16:23.820><c> key</c><00:16:24.300><c> and</c><00:16:24.570><c> the</c>

00:16:24.650 --> 00:16:24.660 align:start position:0%
that takes two arguments the key and the
 

00:16:24.660 --> 00:16:27.140 align:start position:0%
that takes two arguments the key and the
value<00:16:24.690><c> and</c><00:16:25.290><c> the</c><00:16:25.770><c> return</c><00:16:26.130><c> value</c><00:16:26.610><c> is</c><00:16:26.640><c> the</c>

00:16:27.140 --> 00:16:27.150 align:start position:0%
value and the return value is the
 

00:16:27.150 --> 00:16:30.680 align:start position:0%
value and the return value is the
replacement<00:16:28.140><c> value</c><00:16:28.980><c> and</c><00:16:29.250><c> so</c><00:16:29.880><c> if</c><00:16:30.120><c> we</c><00:16:30.240><c> want</c><00:16:30.450><c> to</c>

00:16:30.680 --> 00:16:30.690 align:start position:0%
replacement value and so if we want to
 

00:16:30.690 --> 00:16:33.200 align:start position:0%
replacement value and so if we want to
change<00:16:31.500><c> all</c><00:16:31.800><c> of</c><00:16:31.950><c> them</c><00:16:32.100><c> the</c><00:16:32.370><c> values</c><00:16:32.820><c> in</c><00:16:32.970><c> the</c><00:16:33.030><c> map</c>

00:16:33.200 --> 00:16:33.210 align:start position:0%
change all of them the values in the map
 

00:16:33.210 --> 00:16:36.110 align:start position:0%
change all of them the values in the map
to<00:16:33.420><c> uppercase</c><00:16:33.840><c> we</c><00:16:34.170><c> just</c><00:16:34.440><c> write</c><00:16:34.950><c> it</c><00:16:35.100><c> here</c><00:16:35.130><c> k</c><00:16:35.910><c> v</c>

00:16:36.110 --> 00:16:36.120 align:start position:0%
to uppercase we just write it here k v
 

00:16:36.120 --> 00:16:38.830 align:start position:0%
to uppercase we just write it here k v
arrow<00:16:36.360><c> and</c><00:16:36.810><c> then</c><00:16:36.930><c> call</c><00:16:37.170><c> v</c><00:16:37.770><c> dot</c><00:16:38.010><c> to</c><00:16:38.220><c> uppercase</c>

00:16:38.830 --> 00:16:38.840 align:start position:0%
arrow and then call v dot to uppercase
 

00:16:38.840 --> 00:16:41.360 align:start position:0%
arrow and then call v dot to uppercase
so<00:16:39.840><c> this</c><00:16:40.020><c> is</c><00:16:40.170><c> kind</c><00:16:40.410><c> of</c><00:16:40.470><c> limited</c><00:16:40.950><c> i</c><00:16:41.040><c> mean</c><00:16:41.190><c> if</c><00:16:41.280><c> you</c>

00:16:41.360 --> 00:16:41.370 align:start position:0%
so this is kind of limited i mean if you
 

00:16:41.370 --> 00:16:42.740 align:start position:0%
so this is kind of limited i mean if you
want<00:16:41.550><c> to</c><00:16:41.640><c> do</c><00:16:41.730><c> exactly</c><00:16:41.940><c> this</c><00:16:42.390><c> it's</c><00:16:42.570><c> wonderful</c>

00:16:42.740 --> 00:16:42.750 align:start position:0%
want to do exactly this it's wonderful
 

00:16:42.750 --> 00:16:45.890 align:start position:0%
want to do exactly this it's wonderful
but<00:16:43.500><c> it</c><00:16:43.590><c> can</c><00:16:43.710><c> only</c><00:16:43.740><c> change</c><00:16:44.430><c> the</c><00:16:45.000><c> values</c><00:16:45.570><c> in</c><00:16:45.780><c> the</c>

00:16:45.890 --> 00:16:45.900 align:start position:0%
but it can only change the values in the
 

00:16:45.900 --> 00:16:48.050 align:start position:0%
but it can only change the values in the
map<00:16:46.080><c> you</c><00:16:46.290><c> can't</c><00:16:46.500><c> change</c><00:16:46.710><c> keys</c><00:16:47.070><c> and</c><00:16:47.700><c> you</c><00:16:47.790><c> can't</c>

00:16:48.050 --> 00:16:48.060 align:start position:0%
map you can't change keys and you can't
 

00:16:48.060 --> 00:16:50.090 align:start position:0%
map you can't change keys and you can't
change<00:16:48.150><c> the</c><00:16:49.050><c> types</c><00:16:49.320><c> of</c><00:16:49.500><c> either</c><00:16:49.680><c> the</c><00:16:49.830><c> key</c><00:16:49.980><c> to</c>

00:16:50.090 --> 00:16:50.100 align:start position:0%
change the types of either the key to
 

00:16:50.100 --> 00:16:51.980 align:start position:0%
change the types of either the key to
the<00:16:50.190><c> value</c><00:16:50.280><c> so</c><00:16:50.790><c> there</c><00:16:51.060><c> are</c><00:16:51.180><c> limitations</c><00:16:51.750><c> there</c>

00:16:51.980 --> 00:16:51.990 align:start position:0%
the value so there are limitations there
 

00:16:51.990 --> 00:16:53.480 align:start position:0%
the value so there are limitations there
if<00:16:52.380><c> you</c><00:16:52.470><c> want</c><00:16:52.620><c> to</c><00:16:52.710><c> do</c><00:16:52.800><c> those</c><00:16:52.950><c> things</c><00:16:53.010><c> you</c><00:16:53.400><c> have</c>

00:16:53.480 --> 00:16:53.490 align:start position:0%
if you want to do those things you have
 

00:16:53.490 --> 00:16:55.760 align:start position:0%
if you want to do those things you have
to<00:16:53.640><c> go</c><00:16:53.790><c> over</c><00:16:53.970><c> to</c><00:16:54.000><c> streams</c><00:16:54.390><c> and</c><00:16:54.720><c> stream</c><00:16:55.500><c> over</c>

00:16:55.760 --> 00:16:55.770 align:start position:0%
to go over to streams and stream over
 

00:16:55.770 --> 00:16:57.650 align:start position:0%
to go over to streams and stream over
the<00:16:55.860><c> map</c><00:16:56.010><c> entries</c><00:16:56.430><c> and</c><00:16:56.700><c> transform</c><00:16:57.510><c> things</c>

00:16:57.650 --> 00:16:57.660 align:start position:0%
the map entries and transform things
 

00:16:57.660 --> 00:17:01.340 align:start position:0%
the map entries and transform things
that<00:16:57.930><c> way</c><00:16:59.090><c> all</c><00:17:00.090><c> right</c><00:17:00.150><c> now</c><00:17:00.360><c> here</c><00:17:00.690><c> is</c><00:17:00.870><c> kind</c><00:17:01.260><c> of</c>

00:17:01.340 --> 00:17:01.350 align:start position:0%
that way all right now here is kind of
 

00:17:01.350 --> 00:17:03.800 align:start position:0%
that way all right now here is kind of
an<00:17:01.530><c> extended</c><00:17:02.040><c> example</c><00:17:02.360><c> and</c><00:17:03.360><c> i'm</c><00:17:03.450><c> going</c><00:17:03.540><c> to</c><00:17:03.600><c> set</c>

00:17:03.800 --> 00:17:03.810 align:start position:0%
an extended example and i'm going to set
 

00:17:03.810 --> 00:17:05.960 align:start position:0%
an extended example and i'm going to set
this<00:17:03.960><c> up</c><00:17:04.140><c> by</c><00:17:04.350><c> talking</c><00:17:04.740><c> about</c><00:17:04.830><c> multi</c><00:17:05.760><c> maps</c>

00:17:05.960 --> 00:17:05.970 align:start position:0%
this up by talking about multi maps
 

00:17:05.970 --> 00:17:08.630 align:start position:0%
this up by talking about multi maps
which<00:17:06.300><c> many</c><00:17:07.080><c> people</c><00:17:07.170><c> are</c><00:17:07.440><c> familiar</c><00:17:07.620><c> with</c><00:17:07.890><c> but</c>

00:17:08.630 --> 00:17:08.640 align:start position:0%
which many people are familiar with but
 

00:17:08.640 --> 00:17:12.040 align:start position:0%
which many people are familiar with but
if<00:17:08.850><c> you</c><00:17:09.300><c> have</c><00:17:09.540><c> a</c><00:17:10.220><c> one</c><00:17:11.220><c> of</c><00:17:11.310><c> the</c><00:17:11.370><c> things</c><00:17:11.430><c> about</c><00:17:11.700><c> a</c>

00:17:12.040 --> 00:17:12.050 align:start position:0%
if you have a one of the things about a
 

00:17:12.050 --> 00:17:16.430 align:start position:0%
if you have a one of the things about a
built-in<00:17:13.050><c> map</c><00:17:13.260><c> takes</c><00:17:13.950><c> a</c><00:17:14.540><c> has</c><00:17:15.540><c> key</c><00:17:15.870><c> value</c><00:17:16.200><c> pairs</c>

00:17:16.430 --> 00:17:16.440 align:start position:0%
built-in map takes a has key value pairs
 

00:17:16.440 --> 00:17:19.040 align:start position:0%
built-in map takes a has key value pairs
but<00:17:17.220><c> most</c><00:17:17.460><c> importantly</c><00:17:17.880><c> they're</c><00:17:18.240><c> for</c><00:17:18.690><c> every</c>

00:17:19.040 --> 00:17:19.050 align:start position:0%
but most importantly they're for every
 

00:17:19.050 --> 00:17:22.070 align:start position:0%
but most importantly they're for every
key<00:17:19.320><c> there</c><00:17:19.680><c> is</c><00:17:19.770><c> exactly</c><00:17:20.070><c> one</c><00:17:20.340><c> value</c><00:17:20.910><c> and</c><00:17:21.360><c> in</c>

00:17:22.070 --> 00:17:22.080 align:start position:0%
key there is exactly one value and in
 

00:17:22.080 --> 00:17:24.110 align:start position:0%
key there is exactly one value and in
many<00:17:22.260><c> cases</c><00:17:22.530><c> you</c><00:17:22.980><c> might</c><00:17:23.340><c> want</c><00:17:23.550><c> to</c><00:17:23.610><c> have</c><00:17:23.760><c> a</c><00:17:23.790><c> data</c>

00:17:24.110 --> 00:17:24.120 align:start position:0%
many cases you might want to have a data
 

00:17:24.120 --> 00:17:26.030 align:start position:0%
many cases you might want to have a data
structure<00:17:24.510><c> where</c><00:17:24.780><c> you</c><00:17:24.840><c> have</c><00:17:24.990><c> a</c><00:17:25.140><c> key</c><00:17:25.440><c> that</c><00:17:25.470><c> maps</c>

00:17:26.030 --> 00:17:26.040 align:start position:0%
structure where you have a key that maps
 

00:17:26.040 --> 00:17:29.720 align:start position:0%
structure where you have a key that maps
to<00:17:26.220><c> multiple</c><00:17:27.000><c> values</c><00:17:27.420><c> and</c><00:17:27.690><c> so</c><00:17:28.530><c> the</c><00:17:29.400><c> various</c>

00:17:29.720 --> 00:17:29.730 align:start position:0%
to multiple values and so the various
 

00:17:29.730 --> 00:17:31.580 align:start position:0%
to multiple values and so the various
libraries<00:17:30.150><c> such</c><00:17:30.360><c> as</c><00:17:30.390><c> eclipse</c><00:17:30.930><c> collections</c><00:17:31.410><c> in</c>

00:17:31.580 --> 00:17:31.590 align:start position:0%
libraries such as eclipse collections in
 

00:17:31.590 --> 00:17:34.610 align:start position:0%
libraries such as eclipse collections in
guava<00:17:31.830><c> have</c><00:17:32.220><c> multi</c><00:17:32.910><c> set</c><00:17:33.150><c> excuse</c><00:17:33.840><c> me</c><00:17:33.930><c> multi</c><00:17:34.290><c> map</c>

00:17:34.610 --> 00:17:34.620 align:start position:0%
guava have multi set excuse me multi map
 

00:17:34.620 --> 00:17:37.760 align:start position:0%
guava have multi set excuse me multi map
data<00:17:35.370><c> structures</c><00:17:35.790><c> built</c><00:17:36.060><c> in</c><00:17:36.470><c> JDK</c><00:17:37.470><c> does</c><00:17:37.650><c> not</c>

00:17:37.760 --> 00:17:37.770 align:start position:0%
data structures built in JDK does not
 

00:17:37.770 --> 00:17:41.960 align:start position:0%
data structures built in JDK does not
have<00:17:38.010><c> one</c><00:17:38.660><c> and</c><00:17:39.660><c> sometimes</c><00:17:40.100><c> if</c><00:17:41.100><c> you</c><00:17:41.490><c> can't</c><00:17:41.790><c> use</c>

00:17:41.960 --> 00:17:41.970 align:start position:0%
have one and sometimes if you can't use
 

00:17:41.970 --> 00:17:43.400 align:start position:0%
have one and sometimes if you can't use
one<00:17:42.120><c> of</c><00:17:42.150><c> those</c><00:17:42.300><c> libraries</c><00:17:42.570><c> what</c><00:17:43.020><c> you</c><00:17:43.140><c> have</c><00:17:43.260><c> to</c>

00:17:43.400 --> 00:17:43.410 align:start position:0%
one of those libraries what you have to
 

00:17:43.410 --> 00:17:45.890 align:start position:0%
one of those libraries what you have to
do<00:17:43.530><c> is</c><00:17:43.860><c> say</c><00:17:44.040><c> okay</c><00:17:44.460><c> I</c><00:17:44.610><c> can't</c><00:17:45.150><c> use</c><00:17:45.300><c> a</c><00:17:45.330><c> multi</c><00:17:45.750><c> map</c>

00:17:45.890 --> 00:17:45.900 align:start position:0%
do is say okay I can't use a multi map
 

00:17:45.900 --> 00:17:48.140 align:start position:0%
do is say okay I can't use a multi map
so<00:17:46.530><c> instead</c><00:17:46.860><c> I'll</c><00:17:47.100><c> write</c><00:17:47.340><c> out</c><00:17:47.520><c> a</c><00:17:47.730><c> map</c>

00:17:48.140 --> 00:17:48.150 align:start position:0%
so instead I'll write out a map
 

00:17:48.150 --> 00:17:52.730 align:start position:0%
so instead I'll write out a map
up<00:17:48.500><c> from</c><00:17:49.500><c> say</c><00:17:50.330><c> if</c><00:17:51.330><c> I</c><00:17:51.450><c> want</c><00:17:51.660><c> a</c><00:17:51.720><c> map</c><00:17:52.140><c> from</c><00:17:52.350><c> string</c>

00:17:52.730 --> 00:17:52.740 align:start position:0%
up from say if I want a map from string
 

00:17:52.740 --> 00:17:55.670 align:start position:0%
up from say if I want a map from string
to<00:17:52.770><c> multiple</c><00:17:53.250><c> integers</c><00:17:53.640><c> I</c><00:17:53.970><c> would</c><00:17:54.360><c> have</c><00:17:54.680><c> map</c>

00:17:55.670 --> 00:17:55.680 align:start position:0%
to multiple integers I would have map
 

00:17:55.680 --> 00:17:58.520 align:start position:0%
to multiple integers I would have map
from<00:17:56.010><c> string</c><00:17:56.310><c> to</c><00:17:56.550><c> set</c><00:17:56.850><c> of</c><00:17:56.940><c> integers</c><00:17:57.300><c> and</c><00:17:57.530><c> just</c>

00:17:58.520 --> 00:17:58.530 align:start position:0%
from string to set of integers and just
 

00:17:58.530 --> 00:18:01.160 align:start position:0%
from string to set of integers and just
store<00:17:58.830><c> that</c><00:17:58.860><c> in</c><00:17:59.160><c> a</c><00:17:59.250><c> regular</c><00:17:59.370><c> hash</c><00:17:59.730><c> map</c><00:17:59.970><c> and</c><00:18:00.210><c> in</c>

00:18:01.160 --> 00:18:01.170 align:start position:0%
store that in a regular hash map and in
 

00:18:01.170 --> 00:18:04.040 align:start position:0%
store that in a regular hash map and in
seven<00:18:01.860><c> in</c><00:18:02.040><c> Java</c><00:18:02.580><c> 7</c><00:18:02.790><c> and</c><00:18:03.090><c> earlier</c><00:18:03.180><c> this</c><00:18:03.810><c> can</c>

00:18:04.040 --> 00:18:04.050 align:start position:0%
seven in Java 7 and earlier this can
 

00:18:04.050 --> 00:18:06.530 align:start position:0%
seven in Java 7 and earlier this can
actually<00:18:04.350><c> get</c><00:18:04.680><c> pretty</c><00:18:04.920><c> painful</c><00:18:05.270><c> so</c><00:18:06.270><c> here's</c>

00:18:06.530 --> 00:18:06.540 align:start position:0%
actually get pretty painful so here's
 

00:18:06.540 --> 00:18:09.740 align:start position:0%
actually get pretty painful so here's
some<00:18:06.690><c> code</c><00:18:06.840><c> to</c><00:18:06.900><c> do</c><00:18:07.170><c> that</c><00:18:07.200><c> if</c><00:18:07.680><c> I</c><00:18:08.070><c> want</c><00:18:08.310><c> to</c><00:18:08.610><c> put</c><00:18:09.450><c> a</c>

00:18:09.740 --> 00:18:09.750 align:start position:0%
some code to do that if I want to put a
 

00:18:09.750 --> 00:18:13.310 align:start position:0%
some code to do that if I want to put a
value<00:18:10.500><c> string</c><00:18:11.040><c> string</c><00:18:11.640><c> and</c><00:18:11.790><c> an</c><00:18:11.850><c> integer</c><00:18:12.320><c> into</c>

00:18:13.310 --> 00:18:13.320 align:start position:0%
value string string and an integer into
 

00:18:13.320 --> 00:18:20.080 align:start position:0%
value string string and an integer into
my<00:18:13.860><c> multi</c><00:18:14.670><c> map</c><00:18:15.020><c> then</c><00:18:16.020><c> I</c><00:18:16.050><c> first</c><00:18:16.590><c> have</c><00:18:16.740><c> to</c><00:18:16.890><c> say</c><00:18:17.070><c> ok</c>

00:18:20.080 --> 00:18:20.090 align:start position:0%
 
 

00:18:20.090 --> 00:18:22.310 align:start position:0%
 
get<00:18:21.090><c> the</c><00:18:21.210><c> value</c><00:18:21.540><c> for</c><00:18:21.720><c> the</c><00:18:21.780><c> key</c><00:18:21.900><c> to</c><00:18:22.080><c> see</c><00:18:22.230><c> if</c>

00:18:22.310 --> 00:18:22.320 align:start position:0%
get the value for the key to see if
 

00:18:22.320 --> 00:18:24.110 align:start position:0%
get the value for the key to see if
there's<00:18:22.500><c> a</c><00:18:22.560><c> set</c><00:18:22.800><c> already</c><00:18:23.190><c> there</c><00:18:23.430><c> if</c><00:18:23.670><c> there</c>

00:18:24.110 --> 00:18:24.120 align:start position:0%
there's a set already there if there
 

00:18:24.120 --> 00:18:25.580 align:start position:0%
there's a set already there if there
isn't<00:18:24.300><c> then</c><00:18:24.660><c> I</c><00:18:24.720><c> have</c><00:18:24.840><c> to</c><00:18:24.960><c> create</c><00:18:25.170><c> a</c><00:18:25.230><c> set</c><00:18:25.440><c> and</c>

00:18:25.580 --> 00:18:25.590 align:start position:0%
isn't then I have to create a set and
 

00:18:25.590 --> 00:18:28.490 align:start position:0%
isn't then I have to create a set and
put<00:18:25.800><c> it</c><00:18:25.920><c> into</c><00:18:26.130><c> the</c><00:18:26.220><c> map</c><00:18:26.400><c> and</c><00:18:26.700><c> then</c><00:18:27.500><c> finally</c>

00:18:28.490 --> 00:18:28.500 align:start position:0%
put it into the map and then finally
 

00:18:28.500 --> 00:18:31.310 align:start position:0%
put it into the map and then finally
after<00:18:28.770><c> that</c><00:18:28.920><c> I</c><00:18:28.950><c> have</c><00:18:29.310><c> to</c><00:18:29.490><c> add</c><00:18:29.850><c> the</c><00:18:30.660><c> new</c><00:18:30.810><c> integer</c>

00:18:31.310 --> 00:18:31.320 align:start position:0%
after that I have to add the new integer
 

00:18:31.320 --> 00:18:34.250 align:start position:0%
after that I have to add the new integer
value<00:18:31.680><c> into</c><00:18:32.010><c> that</c><00:18:32.040><c> set</c><00:18:32.870><c> there's</c><00:18:33.870><c> a</c><00:18:33.960><c> similar</c>

00:18:34.250 --> 00:18:34.260 align:start position:0%
value into that set there's a similar
 

00:18:34.260 --> 00:18:36.200 align:start position:0%
value into that set there's a similar
thing<00:18:34.440><c> for</c><00:18:34.710><c> rule</c><00:18:35.010><c> except</c><00:18:35.490><c> kind</c><00:18:35.700><c> of</c><00:18:35.790><c> in</c><00:18:35.880><c> Reverse</c>

00:18:36.200 --> 00:18:36.210 align:start position:0%
thing for rule except kind of in Reverse
 

00:18:36.210 --> 00:18:40.010 align:start position:0%
thing for rule except kind of in Reverse
I<00:18:36.480><c> ask</c><00:18:36.960><c> you</c><00:18:37.100><c> get</c><00:18:38.100><c> the</c><00:18:38.910><c> value</c><00:18:39.360><c> corresponding</c><00:18:39.600><c> to</c>

00:18:40.010 --> 00:18:40.020 align:start position:0%
I ask you get the value corresponding to
 

00:18:40.020 --> 00:18:43.310 align:start position:0%
I ask you get the value corresponding to
this<00:18:40.200><c> key</c><00:18:40.440><c> and</c><00:18:40.830><c> if</c><00:18:41.790><c> it's</c><00:18:42.090><c> non</c><00:18:42.300><c> null</c><00:18:42.660><c> then</c><00:18:43.050><c> I</c><00:18:43.110><c> go</c>

00:18:43.310 --> 00:18:43.320 align:start position:0%
this key and if it's non null then I go
 

00:18:43.320 --> 00:18:45.350 align:start position:0%
this key and if it's non null then I go
ahead<00:18:43.530><c> and</c><00:18:43.680><c> remove</c><00:18:43.890><c> it</c><00:18:43.920><c> from</c><00:18:44.070><c> the</c><00:18:44.250><c> set</c><00:18:44.490><c> oh</c><00:18:44.700><c> but</c>

00:18:45.350 --> 00:18:45.360 align:start position:0%
ahead and remove it from the set oh but
 

00:18:45.360 --> 00:18:47.540 align:start position:0%
ahead and remove it from the set oh but
also<00:18:45.510><c> if</c><00:18:46.050><c> the</c><00:18:46.260><c> set</c><00:18:46.440><c> now</c><00:18:46.560><c> became</c><00:18:46.890><c> empty</c><00:18:47.190><c> I</c><00:18:47.250><c> want</c>

00:18:47.540 --> 00:18:47.550 align:start position:0%
also if the set now became empty I want
 

00:18:47.550 --> 00:18:49.280 align:start position:0%
also if the set now became empty I want
to<00:18:47.670><c> remove</c><00:18:47.970><c> the</c><00:18:48.120><c> whole</c><00:18:48.270><c> thing</c><00:18:48.480><c> and</c><00:18:48.720><c> in</c><00:18:49.020><c> fact</c>

00:18:49.280 --> 00:18:49.290 align:start position:0%
to remove the whole thing and in fact
 

00:18:49.290 --> 00:18:51.470 align:start position:0%
to remove the whole thing and in fact
all<00:18:49.890><c> right</c><00:18:50.040><c> I'm</c><00:18:50.250><c> out</c><00:18:50.670><c> of</c><00:18:50.700><c> room</c><00:18:50.970><c> on</c><00:18:51.120><c> the</c><00:18:51.270><c> slide</c>

00:18:51.470 --> 00:18:51.480 align:start position:0%
all right I'm out of room on the slide
 

00:18:51.480 --> 00:18:53.840 align:start position:0%
all right I'm out of room on the slide
so<00:18:51.840><c> it's</c><00:18:51.990><c> already</c><00:18:52.200><c> it's</c><00:18:52.620><c> already</c><00:18:53.190><c> the</c><00:18:53.580><c> code</c><00:18:53.730><c> is</c>

00:18:53.840 --> 00:18:53.850 align:start position:0%
so it's already it's already the code is
 

00:18:53.850 --> 00:18:57.980 align:start position:0%
so it's already it's already the code is
already<00:18:54.120><c> too</c><00:18:54.240><c> bulky</c><00:18:56.120><c> so</c><00:18:57.120><c> it</c><00:18:57.390><c> turns</c><00:18:57.570><c> out</c><00:18:57.720><c> there</c>

00:18:57.980 --> 00:18:57.990 align:start position:0%
already too bulky so it turns out there
 

00:18:57.990 --> 00:18:59.960 align:start position:0%
already too bulky so it turns out there
are<00:18:58.050><c> a</c><00:18:58.110><c> bunch</c><00:18:58.350><c> of</c><00:18:58.500><c> new</c><00:18:58.710><c> methods</c><00:18:58.890><c> in</c><00:18:59.310><c> Java</c><00:18:59.610><c> 8</c>

00:18:59.960 --> 00:18:59.970 align:start position:0%
are a bunch of new methods in Java 8
 

00:18:59.970 --> 00:19:01.970 align:start position:0%
are a bunch of new methods in Java 8
that<00:19:00.480><c> make</c><00:19:00.810><c> things</c><00:19:01.170><c> like</c><00:19:01.380><c> doing</c><00:19:01.710><c> things</c><00:19:01.920><c> like</c>

00:19:01.970 --> 00:19:01.980 align:start position:0%
that make things like doing things like
 

00:19:01.980 --> 00:19:05.080 align:start position:0%
that make things like doing things like
this<00:19:02.160><c> really</c><00:19:02.490><c> easy</c><00:19:02.760><c> so</c><00:19:03.450><c> one</c><00:19:03.780><c> of</c><00:19:03.810><c> them</c><00:19:03.990><c> is</c>

00:19:05.080 --> 00:19:05.090 align:start position:0%
this really easy so one of them is
 

00:19:05.090 --> 00:19:08.210 align:start position:0%
this really easy so one of them is
compute<00:19:06.090><c> if</c><00:19:06.210><c> absent</c><00:19:06.720><c> what's</c><00:19:07.620><c> interesting</c><00:19:07.830><c> is</c>

00:19:08.210 --> 00:19:08.220 align:start position:0%
compute if absent what's interesting is
 

00:19:08.220 --> 00:19:11.150 align:start position:0%
compute if absent what's interesting is
that<00:19:08.250><c> the</c><00:19:08.850><c> the</c><00:19:09.300><c> concurrent</c><00:19:10.110><c> hash</c><00:19:10.170><c> map</c><00:19:10.530><c> prior</c>

00:19:11.150 --> 00:19:11.160 align:start position:0%
that the the concurrent hash map prior
 

00:19:11.160 --> 00:19:13.700 align:start position:0%
that the the concurrent hash map prior
to<00:19:11.340><c> Java</c><00:19:11.580><c> 8</c><00:19:11.820><c> had</c><00:19:12.090><c> some</c><00:19:12.390><c> of</c><00:19:12.510><c> these</c><00:19:12.600><c> because</c><00:19:13.020><c> you</c>

00:19:13.700 --> 00:19:13.710 align:start position:0%
to Java 8 had some of these because you
 

00:19:13.710 --> 00:19:16.700 align:start position:0%
to Java 8 had some of these because you
really<00:19:14.010><c> need</c><00:19:14.390><c> atomic</c><00:19:15.390><c> composite</c><00:19:16.200><c> operations</c>

00:19:16.700 --> 00:19:16.710 align:start position:0%
really need atomic composite operations
 

00:19:16.710 --> 00:19:19.850 align:start position:0%
really need atomic composite operations
on<00:19:16.950><c> concurrent</c><00:19:17.580><c> on</c><00:19:18.360><c> a</c><00:19:18.420><c> concurrent</c><00:19:18.900><c> map</c><00:19:19.050><c> so</c>

00:19:19.850 --> 00:19:19.860 align:start position:0%
on concurrent on a concurrent map so
 

00:19:19.860 --> 00:19:21.920 align:start position:0%
on concurrent on a concurrent map so
these<00:19:20.400><c> some</c><00:19:20.820><c> of</c><00:19:20.880><c> these</c><00:19:21.000><c> have</c><00:19:21.240><c> been</c><00:19:21.390><c> promoted</c>

00:19:21.920 --> 00:19:21.930 align:start position:0%
these some of these have been promoted
 

00:19:21.930 --> 00:19:26.570 align:start position:0%
these some of these have been promoted
to<00:19:22.260><c> the</c><00:19:22.740><c> main</c><00:19:23.280><c> map</c><00:19:23.670><c> interface</c><00:19:24.120><c> in</c><00:19:24.390><c> Java</c><00:19:24.450><c> 8</c>

00:19:26.570 --> 00:19:26.580 align:start position:0%
to the main map interface in Java 8
 

00:19:26.580 --> 00:19:28.850 align:start position:0%
to the main map interface in Java 8
anyway<00:19:27.270><c> so</c><00:19:27.540><c> compute</c><00:19:28.110><c> if</c><00:19:28.200><c> absent</c><00:19:28.590><c> is</c><00:19:28.710><c> an</c>

00:19:28.850 --> 00:19:28.860 align:start position:0%
anyway so compute if absent is an
 

00:19:28.860 --> 00:19:30.920 align:start position:0%
anyway so compute if absent is an
interesting<00:19:29.160><c> thing</c><00:19:29.520><c> here</c><00:19:29.790><c> what</c><00:19:30.240><c> it</c><00:19:30.330><c> does</c><00:19:30.480><c> is</c>

00:19:30.920 --> 00:19:30.930 align:start position:0%
interesting thing here what it does is
 

00:19:30.930 --> 00:19:33.620 align:start position:0%
interesting thing here what it does is
it<00:19:31.320><c> evaluates</c><00:19:32.070><c> the</c><00:19:32.250><c> lambda</c><00:19:32.610><c> expression</c><00:19:33.180><c> that</c>

00:19:33.620 --> 00:19:33.630 align:start position:0%
it evaluates the lambda expression that
 

00:19:33.630 --> 00:19:38.570 align:start position:0%
it evaluates the lambda expression that
you<00:19:33.810><c> pass</c><00:19:34.020><c> it</c><00:19:34.290><c> if</c><00:19:35.360><c> if</c><00:19:36.360><c> the</c><00:19:36.870><c> key</c><00:19:37.110><c> is</c><00:19:37.430><c> absent</c><00:19:38.430><c> and</c>

00:19:38.570 --> 00:19:38.580 align:start position:0%
you pass it if if the key is absent and
 

00:19:38.580 --> 00:19:40.790 align:start position:0%
you pass it if if the key is absent and
then<00:19:39.570><c> it</c><00:19:39.690><c> takes</c><00:19:39.840><c> the</c><00:19:39.930><c> result</c><00:19:40.230><c> of</c><00:19:40.380><c> that</c><00:19:40.470><c> and</c>

00:19:40.790 --> 00:19:40.800 align:start position:0%
then it takes the result of that and
 

00:19:40.800 --> 00:19:44.440 align:start position:0%
then it takes the result of that and
stores<00:19:41.340><c> it</c><00:19:41.520><c> in</c><00:19:41.610><c> the</c><00:19:41.700><c> map</c><00:19:41.880><c> and</c><00:19:43.040><c> interestingly</c>

00:19:44.440 --> 00:19:44.450 align:start position:0%
stores it in the map and interestingly
 

00:19:44.450 --> 00:19:46.610 align:start position:0%
stores it in the map and interestingly
regardless<00:19:45.450><c> of</c><00:19:45.630><c> whether</c><00:19:45.870><c> it</c><00:19:46.050><c> actually</c><00:19:46.440><c> did</c>

00:19:46.610 --> 00:19:46.620 align:start position:0%
regardless of whether it actually did
 

00:19:46.620 --> 00:19:49.790 align:start position:0%
regardless of whether it actually did
that<00:19:46.740><c> computation</c><00:19:47.370><c> or</c><00:19:47.460><c> not</c><00:19:47.610><c> it</c><00:19:47.880><c> returns</c><00:19:48.800><c> the</c>

00:19:49.790 --> 00:19:49.800 align:start position:0%
that computation or not it returns the
 

00:19:49.800 --> 00:19:53.600 align:start position:0%
that computation or not it returns the
value<00:19:50.070><c> corresponding</c><00:19:51.000><c> to</c><00:19:51.060><c> the</c><00:19:51.270><c> key</c><00:19:51.450><c> so</c><00:19:52.610><c> you</c>

00:19:53.600 --> 00:19:53.610 align:start position:0%
value corresponding to the key so you
 

00:19:53.610 --> 00:19:54.860 align:start position:0%
value corresponding to the key so you
have<00:19:53.760><c> to</c><00:19:53.880><c> pick</c><00:19:54.090><c> through</c><00:19:54.300><c> this</c><00:19:54.450><c> a</c><00:19:54.480><c> little</c><00:19:54.660><c> bit</c>

00:19:54.860 --> 00:19:54.870 align:start position:0%
have to pick through this a little bit
 

00:19:54.870 --> 00:19:56.840 align:start position:0%
have to pick through this a little bit
carefully<00:19:55.350><c> but</c><00:19:55.830><c> basically</c><00:19:56.340><c> what</c><00:19:56.460><c> this</c><00:19:56.610><c> does</c>

00:19:56.840 --> 00:19:56.850 align:start position:0%
carefully but basically what this does
 

00:19:56.850 --> 00:20:00.289 align:start position:0%
carefully but basically what this does
is<00:19:57.360><c> add</c><00:19:57.600><c> the</c><00:19:58.170><c> new</c><00:19:58.290><c> hash</c><00:19:58.530><c> set</c><00:19:58.770><c> if</c><00:19:59.040><c> it's</c><00:19:59.250><c> absent</c>

00:20:00.289 --> 00:20:00.299 align:start position:0%
is add the new hash set if it's absent
 

00:20:00.299 --> 00:20:03.409 align:start position:0%
is add the new hash set if it's absent
and<00:20:00.389><c> then</c><00:20:00.719><c> so</c><00:20:01.679><c> so</c><00:20:02.039><c> that</c><00:20:02.190><c> we</c><00:20:02.399><c> have</c><00:20:02.519><c> a</c><00:20:02.549><c> set</c><00:20:02.909><c> valued</c>

00:20:03.409 --> 00:20:03.419 align:start position:0%
and then so so that we have a set valued
 

00:20:03.419 --> 00:20:05.690 align:start position:0%
and then so so that we have a set valued
multi<00:20:03.989><c> map</c><00:20:04.169><c> and</c><00:20:04.469><c> so</c><00:20:04.589><c> what</c><00:20:04.889><c> the</c><00:20:05.129><c> return</c><00:20:05.489><c> from</c>

00:20:05.690 --> 00:20:05.700 align:start position:0%
multi map and so what the return from
 

00:20:05.700 --> 00:20:07.489 align:start position:0%
multi map and so what the return from
compute<00:20:06.089><c> of</c><00:20:06.149><c> absent</c><00:20:06.539><c> is</c><00:20:06.690><c> the</c><00:20:06.929><c> set</c><00:20:07.200><c> of</c><00:20:07.409><c> integers</c>

00:20:07.489 --> 00:20:07.499 align:start position:0%
compute of absent is the set of integers
 

00:20:07.499 --> 00:20:09.799 align:start position:0%
compute of absent is the set of integers
and<00:20:08.009><c> then</c><00:20:08.339><c> we</c><00:20:08.489><c> just</c><00:20:08.669><c> go</c><00:20:08.820><c> ahead</c><00:20:08.909><c> and</c><00:20:09.179><c> add</c><00:20:09.330><c> it</c><00:20:09.570><c> and</c>

00:20:09.799 --> 00:20:09.809 align:start position:0%
and then we just go ahead and add it and
 

00:20:09.809 --> 00:20:11.509 align:start position:0%
and then we just go ahead and add it and
so<00:20:10.589><c> I'm</c><00:20:10.739><c> not</c><00:20:10.859><c> going</c><00:20:10.979><c> to</c><00:20:11.039><c> go</c><00:20:11.159><c> through</c><00:20:11.369><c> all</c><00:20:11.489><c> of</c>

00:20:11.509 --> 00:20:11.519 align:start position:0%
so I'm not going to go through all of
 

00:20:11.519 --> 00:20:13.159 align:start position:0%
so I'm not going to go through all of
these<00:20:11.729><c> in</c><00:20:11.940><c> detail</c><00:20:12.299><c> but</c><00:20:12.539><c> you</c><00:20:12.599><c> can</c><00:20:12.839><c> kind</c><00:20:12.989><c> of</c><00:20:13.049><c> see</c>

00:20:13.159 --> 00:20:13.169 align:start position:0%
these in detail but you can kind of see
 

00:20:13.169 --> 00:20:15.499 align:start position:0%
these in detail but you can kind of see
they<00:20:13.289><c> have</c><00:20:13.409><c> the</c><00:20:13.529><c> same</c><00:20:13.679><c> flavor</c><00:20:13.979><c> remove</c><00:20:14.940><c> is</c><00:20:15.269><c> kind</c>

00:20:15.499 --> 00:20:15.509 align:start position:0%
they have the same flavor remove is kind
 

00:20:15.509 --> 00:20:16.849 align:start position:0%
they have the same flavor remove is kind
of<00:20:15.570><c> the</c><00:20:15.690><c> same</c><00:20:15.899><c> way</c><00:20:16.109><c> there's</c><00:20:16.349><c> kind</c><00:20:16.709><c> of</c>

00:20:16.849 --> 00:20:16.859 align:start position:0%
of the same way there's kind of
 

00:20:16.859 --> 00:20:18.979 align:start position:0%
of the same way there's kind of
complicated<00:20:17.339><c> expression</c><00:20:17.909><c> there</c><00:20:18.089><c> but</c><00:20:18.690><c> what</c>

00:20:18.979 --> 00:20:18.989 align:start position:0%
complicated expression there but what
 

00:20:18.989 --> 00:20:22.699 align:start position:0%
complicated expression there but what
remove<00:20:19.409><c> can</c><00:20:19.679><c> do</c><00:20:19.859><c> is</c><00:20:20.099><c> actually</c><00:20:21.259><c> so</c><00:20:22.259><c> there's</c>

00:20:22.699 --> 00:20:22.709 align:start position:0%
remove can do is actually so there's
 

00:20:22.709 --> 00:20:25.009 align:start position:0%
remove can do is actually so there's
there's<00:20:23.070><c> a</c><00:20:23.129><c> there's</c><00:20:23.489><c> a</c><00:20:23.580><c> dual</c><00:20:23.849><c> to</c><00:20:24.299><c> compute</c><00:20:24.929><c> if</c>

00:20:25.009 --> 00:20:25.019 align:start position:0%
there's a there's a dual to compute if
 

00:20:25.019 --> 00:20:29.229 align:start position:0%
there's a there's a dual to compute if
absent<00:20:25.409><c> which</c><00:20:25.679><c> is</c><00:20:25.889><c> compute</c><00:20:26.729><c> if</c><00:20:26.820><c> present</c><00:20:27.209><c> and</c>

00:20:29.229 --> 00:20:29.239 align:start position:0%
absent which is compute if present and
 

00:20:29.239 --> 00:20:32.629 align:start position:0%
absent which is compute if present and
what<00:20:30.239><c> these</c><00:20:30.389><c> can</c><00:20:30.629><c> do</c><00:20:30.779><c> is</c><00:20:31.139><c> if</c><00:20:31.440><c> the</c><00:20:32.009><c> return</c><00:20:32.279><c> value</c>

00:20:32.629 --> 00:20:32.639 align:start position:0%
what these can do is if the return value
 

00:20:32.639 --> 00:20:34.190 align:start position:0%
what these can do is if the return value
is<00:20:32.669><c> null</c><00:20:32.969><c> and</c><00:20:33.209><c> actually</c><00:20:33.509><c> has</c><00:20:33.659><c> the</c><00:20:33.809><c> effect</c><00:20:34.079><c> of</c>

00:20:34.190 --> 00:20:34.200 align:start position:0%
is null and actually has the effect of
 

00:20:34.200 --> 00:20:37.719 align:start position:0%
is null and actually has the effect of
removing<00:20:34.829><c> a</c><00:20:34.979><c> mapping</c><00:20:35.429><c> from</c><00:20:36.089><c> the</c><00:20:36.329><c> map</c><00:20:36.539><c> and</c><00:20:36.929><c> so</c>

00:20:37.719 --> 00:20:37.729 align:start position:0%
removing a mapping from the map and so
 

00:20:37.729 --> 00:20:40.369 align:start position:0%
removing a mapping from the map and so
if<00:20:38.729><c> you</c><00:20:38.879><c> run</c><00:20:39.059><c> through</c><00:20:39.239><c> a</c><00:20:39.329><c> multi</c><00:20:39.690><c> map</c><00:20:39.929><c> style</c>

00:20:40.369 --> 00:20:40.379 align:start position:0%
if you run through a multi map style
 

00:20:40.379 --> 00:20:44.209 align:start position:0%
if you run through a multi map style
collection<00:20:40.829><c> their</c><00:20:41.519><c> usual</c><00:20:42.619><c> map</c><00:20:43.619><c> kind</c><00:20:44.039><c> of</c>

00:20:44.209 --> 00:20:44.219 align:start position:0%
collection their usual map kind of
 

00:20:44.219 --> 00:20:46.759 align:start position:0%
collection their usual map kind of
operations<00:20:44.820><c> like</c><00:20:44.940><c> I</c><00:20:45.450><c> show</c><00:20:45.749><c> put</c><00:20:46.049><c> remove</c>

00:20:46.759 --> 00:20:46.769 align:start position:0%
operations like I show put remove
 

00:20:46.769 --> 00:20:48.440 align:start position:0%
operations like I show put remove
contain<00:20:47.190><c> size</c><00:20:47.519><c> values</c><00:20:48.119><c> and</c><00:20:48.299><c> so</c><00:20:48.419><c> forth</c>

00:20:48.440 --> 00:20:48.450 align:start position:0%
contain size values and so forth
 

00:20:48.450 --> 00:20:51.169 align:start position:0%
contain size values and so forth
basically<00:20:49.320><c> with</c><00:20:49.829><c> the</c><00:20:49.979><c> new</c><00:20:50.190><c> default</c><00:20:50.759><c> methods</c>

00:20:51.169 --> 00:20:51.179 align:start position:0%
basically with the new default methods
 

00:20:51.179 --> 00:20:53.629 align:start position:0%
basically with the new default methods
on<00:20:51.299><c> map</c><00:20:51.539><c> all</c><00:20:52.169><c> of</c><00:20:52.229><c> these</c><00:20:52.559><c> turn</c><00:20:52.799><c> into</c><00:20:53.039><c> one-liners</c>

00:20:53.629 --> 00:20:53.639 align:start position:0%
on map all of these turn into one-liners
 

00:20:53.639 --> 00:20:56.119 align:start position:0%
on map all of these turn into one-liners
and<00:20:53.849><c> so</c><00:20:54.599><c> if</c><00:20:54.839><c> you</c><00:20:55.139><c> don't</c><00:20:55.379><c> need</c><00:20:55.559><c> to</c><00:20:55.679><c> have</c><00:20:55.829><c> a</c><00:20:55.859><c> full</c>

00:20:56.119 --> 00:20:56.129 align:start position:0%
and so if you don't need to have a full
 

00:20:56.129 --> 00:20:58.369 align:start position:0%
and so if you don't need to have a full
multi<00:20:56.519><c> map</c><00:20:56.700><c> implementation</c><00:20:56.909><c> and</c><00:20:57.749><c> most</c>

00:20:58.369 --> 00:20:58.379 align:start position:0%
multi map implementation and most
 

00:20:58.379 --> 00:20:59.930 align:start position:0%
multi map implementation and most
applications<00:20:58.979><c> don't</c><00:20:59.159><c> maybe</c><00:20:59.399><c> you</c><00:20:59.549><c> just</c><00:20:59.669><c> put</c><00:20:59.909><c> a</c>

00:20:59.930 --> 00:20:59.940 align:start position:0%
applications don't maybe you just put a
 

00:20:59.940 --> 00:21:01.789 align:start position:0%
applications don't maybe you just put a
bunch<00:21:00.119><c> of</c><00:21:00.209><c> stuff</c><00:21:00.389><c> in</c><00:21:00.629><c> and</c><00:21:00.989><c> then</c><00:21:01.109><c> say</c><00:21:01.349><c> okay</c><00:21:01.769><c> I</c>

00:21:01.789 --> 00:21:01.799 align:start position:0%
bunch of stuff in and then say okay I
 

00:21:01.799 --> 00:21:04.039 align:start position:0%
bunch of stuff in and then say okay I
want<00:21:02.129><c> to</c><00:21:02.219><c> you</c><00:21:03.029><c> know</c><00:21:03.119><c> I</c><00:21:03.299><c> want</c><00:21:03.509><c> to</c><00:21:03.659><c> I</c><00:21:03.779><c> want</c><00:21:03.929><c> to</c>

00:21:04.039 --> 00:21:04.049 align:start position:0%
want to you know I want to I want to
 

00:21:04.049 --> 00:21:06.229 align:start position:0%
want to you know I want to I want to
deal<00:21:04.200><c> with</c><00:21:04.259><c> these</c><00:21:04.649><c> particular</c><00:21:05.099><c> cases</c><00:21:05.249><c> you</c><00:21:06.029><c> can</c>

00:21:06.229 --> 00:21:06.239 align:start position:0%
deal with these particular cases you can
 

00:21:06.239 --> 00:21:08.389 align:start position:0%
deal with these particular cases you can
you<00:21:06.599><c> can</c><00:21:06.779><c> kind</c><00:21:07.019><c> of</c><00:21:07.109><c> get</c><00:21:07.259><c> the</c><00:21:07.379><c> effect</c><00:21:07.709><c> of</c><00:21:07.919><c> your</c>

00:21:08.389 --> 00:21:08.399 align:start position:0%
you can kind of get the effect of your
 

00:21:08.399 --> 00:21:10.940 align:start position:0%
you can kind of get the effect of your
own<00:21:08.519><c> multi</c><00:21:08.909><c> map</c><00:21:09.059><c> just</c><00:21:09.419><c> by</c><00:21:09.659><c> implementing</c><00:21:10.469><c> a</c><00:21:10.739><c> few</c>

00:21:10.940 --> 00:21:10.950 align:start position:0%
own multi map just by implementing a few
 

00:21:10.950 --> 00:21:14.599 align:start position:0%
own multi map just by implementing a few
of<00:21:11.039><c> these</c><00:21:11.129><c> one-liners</c><00:21:11.959><c> so</c><00:21:13.279><c> in</c><00:21:14.279><c> fact</c><00:21:14.459><c> this</c>

00:21:14.599 --> 00:21:14.609 align:start position:0%
of these one-liners so in fact this
 

00:21:14.609 --> 00:21:16.190 align:start position:0%
of these one-liners so in fact this
isn't<00:21:14.909><c> even</c><00:21:14.999><c> the</c><00:21:15.209><c> half</c><00:21:15.359><c> of</c><00:21:15.539><c> it</c><00:21:15.659><c> so</c><00:21:15.809><c> I</c><00:21:15.929><c> show</c>

00:21:16.190 --> 00:21:16.200 align:start position:0%
isn't even the half of it so I show
 

00:21:16.200 --> 00:21:18.199 align:start position:0%
isn't even the half of it so I show
computer<00:21:16.649><c> if</c><00:21:16.709><c> absent</c><00:21:17.129><c> computer</c><00:21:17.609><c> present</c><00:21:18.029><c> and</c>

00:21:18.199 --> 00:21:18.209 align:start position:0%
computer if absent computer present and
 

00:21:18.209 --> 00:21:20.359 align:start position:0%
computer if absent computer present and
get<00:21:18.570><c> our</c><00:21:18.719><c> default</c><00:21:19.049><c> which</c><00:21:19.379><c> are</c><00:21:19.529><c> new</c><00:21:19.739><c> methods</c>

00:21:20.359 --> 00:21:20.369 align:start position:0%
get our default which are new methods
 

00:21:20.369 --> 00:21:23.539 align:start position:0%
get our default which are new methods
new<00:21:21.029><c> default</c><00:21:21.299><c> methods</c><00:21:21.690><c> on</c><00:21:21.839><c> map</c><00:21:22.079><c> there</c><00:21:22.589><c> are</c><00:21:22.889><c> I</c>

00:21:23.539 --> 00:21:23.549 align:start position:0%
new default methods on map there are I
 

00:21:23.549 --> 00:21:25.039 align:start position:0%
new default methods on map there are I
think<00:21:23.729><c> there's</c><00:21:24.029><c> well</c><00:21:24.299><c> I'm</c><00:21:24.509><c> not</c><00:21:24.659><c> even</c><00:21:24.869><c> going</c><00:21:25.019><c> to</c>

00:21:25.039 --> 00:21:25.049 align:start position:0%
think there's well I'm not even going to
 

00:21:25.049 --> 00:21:26.269 align:start position:0%
think there's well I'm not even going to
go<00:21:25.169><c> through</c><00:21:25.349><c> them</c><00:21:25.499><c> all</c><00:21:25.559><c> they're</c><00:21:25.769><c> a</c><00:21:25.799><c> bunch</c><00:21:26.009><c> more</c>

00:21:26.269 --> 00:21:26.279 align:start position:0%
go through them all they're a bunch more
 

00:21:26.279 --> 00:21:28.459 align:start position:0%
go through them all they're a bunch more
and<00:21:26.549><c> what</c><00:21:27.299><c> you</c><00:21:27.419><c> have</c><00:21:27.539><c> to</c><00:21:27.570><c> do</c><00:21:27.749><c> is</c><00:21:27.959><c> go</c><00:21:28.440><c> through</c>

00:21:28.459 --> 00:21:28.469 align:start position:0%
and what you have to do is go through
 

00:21:28.469 --> 00:21:31.009 align:start position:0%
and what you have to do is go through
the<00:21:28.950><c> Java</c><00:21:29.249><c> doc</c><00:21:29.459><c> and</c><00:21:29.759><c> look</c><00:21:29.909><c> for</c><00:21:30.119><c> things</c><00:21:30.359><c> things</c>

00:21:31.009 --> 00:21:31.019 align:start position:0%
the Java doc and look for things things
 

00:21:31.019 --> 00:21:32.389 align:start position:0%
the Java doc and look for things things
on<00:21:31.169><c> the</c><00:21:31.229><c> map</c><00:21:31.349><c> interface</c><00:21:31.649><c> that</c><00:21:31.979><c> are</c><00:21:32.129><c> since</c>

00:21:32.389 --> 00:21:32.399 align:start position:0%
on the map interface that are since
 

00:21:32.399 --> 00:21:36.619 align:start position:0%
on the map interface that are since
since<00:21:33.389><c> 1.8</c><00:21:34.969><c> but</c><00:21:35.969><c> anyway</c><00:21:36.209><c> I</c><00:21:36.239><c> think</c><00:21:36.389><c> these</c><00:21:36.570><c> are</c>

00:21:36.619 --> 00:21:36.629 align:start position:0%
since 1.8 but anyway I think these are
 

00:21:36.629 --> 00:21:39.649 align:start position:0%
since 1.8 but anyway I think these are
the<00:21:36.749><c> most</c><00:21:36.899><c> interesting</c><00:21:37.440><c> ones</c><00:21:37.619><c> here</c><00:21:38.509><c> all</c><00:21:39.509><c> right</c>

00:21:39.649 --> 00:21:39.659 align:start position:0%
the most interesting ones here all right
 

00:21:39.659 --> 00:21:41.149 align:start position:0%
the most interesting ones here all right
so<00:21:39.839><c> there's</c><00:21:40.019><c> another</c><00:21:40.320><c> interface</c><00:21:40.799><c> that</c><00:21:41.039><c> we</c>

00:21:41.149 --> 00:21:41.159 align:start position:0%
so there's another interface that we
 

00:21:41.159 --> 00:21:43.849 align:start position:0%
so there's another interface that we
spent<00:21:41.429><c> a</c><00:21:41.459><c> lot</c><00:21:41.579><c> of</c><00:21:41.639><c> time</c><00:21:41.879><c> on</c><00:21:42.209><c> in</c><00:21:42.779><c> Java</c><00:21:43.379><c> 8</c><00:21:43.589><c> which</c>

00:21:43.849 --> 00:21:43.859 align:start position:0%
spent a lot of time on in Java 8 which
 

00:21:43.859 --> 00:21:52.039 align:start position:0%
spent a lot of time on in Java 8 which
is<00:21:43.889><c> comparator</c><00:21:46.190><c> now</c><00:21:47.419><c> comparators</c><00:21:48.419><c> are</c><00:21:51.049><c> in</c>

00:21:52.039 --> 00:21:52.049 align:start position:0%
is comparator now comparators are in
 

00:21:52.049 --> 00:21:54.349 align:start position:0%
is comparator now comparators are in
their<00:21:52.289><c> simplest</c><00:21:52.559><c> form</c><00:21:52.679><c> are</c><00:21:53.190><c> pretty</c><00:21:53.700><c> easy</c><00:21:53.909><c> but</c>

00:21:54.349 --> 00:21:54.359 align:start position:0%
their simplest form are pretty easy but
 

00:21:54.359 --> 00:21:55.639 align:start position:0%
their simplest form are pretty easy but
when<00:21:54.509><c> they</c><00:21:54.599><c> get</c><00:21:54.690><c> complicated</c><00:21:55.079><c> they</c><00:21:55.469><c> get</c>

00:21:55.639 --> 00:21:55.649 align:start position:0%
when they get complicated they get
 

00:21:55.649 --> 00:21:58.579 align:start position:0%
when they get complicated they get
really<00:21:56.009><c> complicated</c><00:21:56.339><c> and</c><00:21:56.940><c> error-prone</c><00:21:57.570><c> and</c><00:21:57.899><c> I</c>

00:21:58.579 --> 00:21:58.589 align:start position:0%
really complicated and error-prone and I
 

00:21:58.589 --> 00:21:59.989 align:start position:0%
really complicated and error-prone and I
think<00:21:58.799><c> there's</c><00:21:59.009><c> there's</c><00:21:59.309><c> a</c><00:21:59.369><c> whole</c><00:21:59.399><c> other</c><00:21:59.700><c> talk</c>

00:21:59.989 --> 00:21:59.999 align:start position:0%
think there's there's a whole other talk
 

00:21:59.999 --> 00:22:02.269 align:start position:0%
think there's there's a whole other talk
to<00:22:00.269><c> be</c><00:22:00.359><c> done</c><00:22:00.539><c> about</c><00:22:00.869><c> comparators</c><00:22:01.679><c> themselves</c>

00:22:02.269 --> 00:22:02.279 align:start position:0%
to be done about comparators themselves
 

00:22:02.279 --> 00:22:05.779 align:start position:0%
to be done about comparators themselves
but<00:22:03.119><c> what</c><00:22:03.299><c> we</c><00:22:03.419><c> did</c><00:22:03.599><c> in</c><00:22:03.989><c> Java</c><00:22:04.409><c> 8</c><00:22:04.709><c> was</c><00:22:05.219><c> add</c><00:22:05.729><c> a</c>

00:22:05.779 --> 00:22:05.789 align:start position:0%
but what we did in Java 8 was add a
 

00:22:05.789 --> 00:22:07.969 align:start position:0%
but what we did in Java 8 was add a
bunch<00:22:06.029><c> of</c><00:22:06.149><c> helper</c><00:22:06.539><c> methods</c><00:22:06.899><c> or</c><00:22:07.109><c> combinators</c>

00:22:07.969 --> 00:22:07.979 align:start position:0%
bunch of helper methods or combinators
 

00:22:07.979 --> 00:22:11.089 align:start position:0%
bunch of helper methods or combinators
which<00:22:08.549><c> take</c><00:22:08.879><c> which</c><00:22:09.809><c> which</c><00:22:10.169><c> construct</c><00:22:10.710><c> simple</c>

00:22:11.089 --> 00:22:11.099 align:start position:0%
which take which which construct simple
 

00:22:11.099 --> 00:22:14.320 align:start position:0%
which take which which construct simple
comparators<00:22:11.729><c> for</c><00:22:11.909><c> you</c><00:22:12.119><c> and</c><00:22:12.329><c> then</c><00:22:12.719><c> also</c><00:22:12.929><c> come</c>

00:22:14.320 --> 00:22:14.330 align:start position:0%
comparators for you and then also come
 

00:22:14.330 --> 00:22:18.770 align:start position:0%
comparators for you and then also come
comparators<00:22:15.330><c> to</c><00:22:16.160><c> return</c><00:22:17.160><c> to</c><00:22:18.000><c> create</c><00:22:18.390><c> new</c>

00:22:18.770 --> 00:22:18.780 align:start position:0%
comparators to return to create new
 

00:22:18.780 --> 00:22:21.530 align:start position:0%
comparators to return to create new
comparators<00:22:19.440><c> that</c><00:22:19.920><c> give</c><00:22:20.220><c> more</c><00:22:20.730><c> complex</c><00:22:21.300><c> and</c>

00:22:21.530 --> 00:22:21.540 align:start position:0%
comparators that give more complex and
 

00:22:21.540 --> 00:22:24.470 align:start position:0%
comparators that give more complex and
interesting<00:22:21.660><c> behavior</c><00:22:22.500><c> and</c><00:22:22.800><c> so</c><00:22:23.580><c> what</c><00:22:24.240><c> that</c>

00:22:24.470 --> 00:22:24.480 align:start position:0%
interesting behavior and so what that
 

00:22:24.480 --> 00:22:26.090 align:start position:0%
interesting behavior and so what that
should<00:22:24.840><c> allow</c><00:22:25.080><c> you</c><00:22:25.140><c> to</c><00:22:25.290><c> do</c><00:22:25.500><c> and</c><00:22:25.830><c> it's</c><00:22:25.950><c> not</c>

00:22:26.090 --> 00:22:26.100 align:start position:0%
should allow you to do and it's not
 

00:22:26.100 --> 00:22:28.760 align:start position:0%
should allow you to do and it's not
quite<00:22:26.460><c> there</c><00:22:26.700><c> yet</c><00:22:26.760><c> but</c><00:22:27.179><c> probably</c><00:22:27.390><c> in</c><00:22:27.780><c> a</c><00:22:28.559><c> large</c>

00:22:28.760 --> 00:22:28.770 align:start position:0%
quite there yet but probably in a large
 

00:22:28.770 --> 00:22:31.430 align:start position:0%
quite there yet but probably in a large
fraction<00:22:29.250><c> of</c><00:22:29.370><c> cases</c><00:22:29.880><c> what</c><00:22:30.690><c> these</c><00:22:30.840><c> new</c><00:22:31.050><c> methods</c>

00:22:31.430 --> 00:22:31.440 align:start position:0%
fraction of cases what these new methods
 

00:22:31.440 --> 00:22:33.710 align:start position:0%
fraction of cases what these new methods
allow<00:22:31.590><c> you</c><00:22:31.650><c> to</c><00:22:31.830><c> do</c><00:22:31.980><c> is</c><00:22:32.280><c> take</c><00:22:32.670><c> a</c><00:22:32.700><c> bunch</c><00:22:33.059><c> of</c><00:22:33.360><c> hand</c>

00:22:33.710 --> 00:22:33.720 align:start position:0%
allow you to do is take a bunch of hand
 

00:22:33.720 --> 00:22:37.900 align:start position:0%
allow you to do is take a bunch of hand
coded<00:22:34.140><c> open</c><00:22:34.530><c> logic</c><00:22:34.980><c> and</c><00:22:35.160><c> compress</c><00:22:35.970><c> it</c><00:22:36.150><c> into</c>

00:22:37.900 --> 00:22:37.910 align:start position:0%
coded open logic and compress it into
 

00:22:37.910 --> 00:22:41.299 align:start position:0%
coded open logic and compress it into
function<00:22:38.910><c> essentially</c><00:22:39.620><c> successive</c><00:22:40.620><c> calls</c><00:22:40.920><c> to</c>

00:22:41.299 --> 00:22:41.309 align:start position:0%
function essentially successive calls to
 

00:22:41.309 --> 00:22:44.299 align:start position:0%
function essentially successive calls to
these<00:22:42.000><c> comparator</c><00:22:42.960><c> methods</c><00:22:43.320><c> that</c><00:22:43.800><c> provide</c>

00:22:44.299 --> 00:22:44.309 align:start position:0%
these comparator methods that provide
 

00:22:44.309 --> 00:22:48.770 align:start position:0%
these comparator methods that provide
that<00:22:46.040><c> provide</c><00:22:47.040><c> composite</c><00:22:48.030><c> functionality</c><00:22:48.630><c> and</c>

00:22:48.770 --> 00:22:48.780 align:start position:0%
that provide composite functionality and
 

00:22:48.780 --> 00:22:51.200 align:start position:0%
that provide composite functionality and
make<00:22:49.260><c> things</c><00:22:49.410><c> much</c><00:22:49.679><c> neater</c><00:22:49.920><c> alright</c><00:22:50.760><c> so</c><00:22:50.940><c> I'm</c>

00:22:51.200 --> 00:22:51.210 align:start position:0%
make things much neater alright so I'm
 

00:22:51.210 --> 00:22:52.730 align:start position:0%
make things much neater alright so I'm
going<00:22:51.330><c> to</c><00:22:51.390><c> run</c><00:22:51.540><c> through</c><00:22:51.780><c> a</c><00:22:51.900><c> quick</c><00:22:52.710><c> example</c>

00:22:52.730 --> 00:22:52.740 align:start position:0%
going to run through a quick example
 

00:22:52.740 --> 00:22:55.460 align:start position:0%
going to run through a quick example
here<00:22:53.190><c> which</c><00:22:53.610><c> is</c><00:22:53.820><c> a</c><00:22:54.090><c> two-level</c><00:22:54.360><c> sort</c><00:22:54.900><c> so</c>

00:22:55.460 --> 00:22:55.470 align:start position:0%
here which is a two-level sort so
 

00:22:55.470 --> 00:22:58.430 align:start position:0%
here which is a two-level sort so
suppose<00:22:55.800><c> you</c><00:22:55.920><c> have</c><00:22:56.270><c> is</c><00:22:57.270><c> it</c><00:22:57.420><c> a</c><00:22:57.480><c> person</c><00:22:57.929><c> class</c><00:22:58.200><c> no</c>

00:22:58.430 --> 00:22:58.440 align:start position:0%
suppose you have is it a person class no
 

00:22:58.440 --> 00:22:59.750 align:start position:0%
suppose you have is it a person class no
student<00:22:58.860><c> class</c><00:22:59.100><c> or</c><00:22:59.370><c> something</c><00:22:59.520><c> like</c><00:22:59.700><c> that</c>

00:22:59.750 --> 00:22:59.760 align:start position:0%
student class or something like that
 

00:22:59.760 --> 00:23:02.270 align:start position:0%
student class or something like that
just<00:23:00.420><c> say</c><00:23:00.570><c> student</c><00:23:01.350><c> has</c><00:23:01.440><c> a</c><00:23:01.470><c> last</c><00:23:01.800><c> name</c><00:23:02.010><c> and</c>

00:23:02.270 --> 00:23:02.280 align:start position:0%
just say student has a last name and
 

00:23:02.280 --> 00:23:04.280 align:start position:0%
just say student has a last name and
first<00:23:02.400><c> name</c><00:23:02.550><c> so</c><00:23:02.910><c> I</c><00:23:02.940><c> want</c><00:23:03.240><c> to</c><00:23:03.300><c> do</c><00:23:03.450><c> the</c><00:23:04.140><c> first</c>

00:23:04.280 --> 00:23:04.290 align:start position:0%
first name so I want to do the first
 

00:23:04.290 --> 00:23:06.680 align:start position:0%
first name so I want to do the first
level<00:23:04.620><c> sort</c><00:23:04.830><c> on</c><00:23:05.040><c> the</c><00:23:05.730><c> students</c><00:23:06.059><c> last</c><00:23:06.210><c> name</c><00:23:06.360><c> and</c>

00:23:06.680 --> 00:23:06.690 align:start position:0%
level sort on the students last name and
 

00:23:06.690 --> 00:23:09.410 align:start position:0%
level sort on the students last name and
then<00:23:07.500><c> for</c><00:23:08.370><c> students</c><00:23:08.850><c> that</c><00:23:08.970><c> have</c><00:23:09.030><c> the</c><00:23:09.240><c> same</c>

00:23:09.410 --> 00:23:09.420 align:start position:0%
then for students that have the same
 

00:23:09.420 --> 00:23:11.330 align:start position:0%
then for students that have the same
last<00:23:09.660><c> name</c><00:23:09.900><c> I</c><00:23:10.230><c> want</c><00:23:10.530><c> to</c><00:23:10.590><c> do</c><00:23:10.650><c> a</c><00:23:10.679><c> second</c><00:23:11.100><c> level</c>

00:23:11.330 --> 00:23:11.340 align:start position:0%
last name I want to do a second level
 

00:23:11.340 --> 00:23:13.730 align:start position:0%
last name I want to do a second level
sort<00:23:11.550><c> on</c><00:23:11.790><c> the</c><00:23:12.120><c> first</c><00:23:12.330><c> name</c><00:23:12.480><c> but</c><00:23:13.440><c> there's</c><00:23:13.590><c> also</c>

00:23:13.730 --> 00:23:13.740 align:start position:0%
sort on the first name but there's also
 

00:23:13.740 --> 00:23:15.710 align:start position:0%
sort on the first name but there's also
a<00:23:13.860><c> catch</c><00:23:14.130><c> because</c><00:23:14.550><c> maybe</c><00:23:14.970><c> we</c><00:23:15.150><c> don't</c><00:23:15.330><c> have</c><00:23:15.480><c> the</c>

00:23:15.710 --> 00:23:15.720 align:start position:0%
a catch because maybe we don't have the
 

00:23:15.720 --> 00:23:18.200 align:start position:0%
a catch because maybe we don't have the
maybe<00:23:16.620><c> we</c><00:23:17.130><c> don't</c><00:23:17.280><c> have</c><00:23:17.400><c> a</c><00:23:17.520><c> first</c><00:23:17.730><c> name</c><00:23:17.940><c> for</c><00:23:18.090><c> all</c>

00:23:18.200 --> 00:23:18.210 align:start position:0%
maybe we don't have a first name for all
 

00:23:18.210 --> 00:23:19.760 align:start position:0%
maybe we don't have a first name for all
the<00:23:18.300><c> students</c><00:23:18.690><c> and</c><00:23:19.080><c> the</c><00:23:19.200><c> first</c><00:23:19.350><c> name</c><00:23:19.530><c> might</c><00:23:19.740><c> be</c>

00:23:19.760 --> 00:23:19.770 align:start position:0%
the students and the first name might be
 

00:23:19.770 --> 00:23:22.310 align:start position:0%
the students and the first name might be
null<00:23:20.190><c> so</c><00:23:20.970><c> if</c><00:23:21.120><c> the</c><00:23:21.240><c> students</c><00:23:21.540><c> first</c><00:23:21.720><c> name</c><00:23:22.020><c> is</c>

00:23:22.310 --> 00:23:22.320 align:start position:0%
null so if the students first name is
 

00:23:22.320 --> 00:23:25.870 align:start position:0%
null so if the students first name is
null<00:23:22.650><c> then</c><00:23:23.390><c> those</c><00:23:24.390><c> should</c><00:23:24.809><c> sort</c><00:23:25.170><c> before</c>

00:23:25.870 --> 00:23:25.880 align:start position:0%
null then those should sort before
 

00:23:25.880 --> 00:23:28.940 align:start position:0%
null then those should sort before
before<00:23:26.880><c> all</c><00:23:27.210><c> other</c><00:23:27.990><c> students</c><00:23:28.470><c> that</c><00:23:28.679><c> have</c><00:23:28.920><c> a</c>

00:23:28.940 --> 00:23:28.950 align:start position:0%
before all other students that have a
 

00:23:28.950 --> 00:23:31.850 align:start position:0%
before all other students that have a
non<00:23:29.400><c> null</c><00:23:29.700><c> first</c><00:23:30.240><c> name</c><00:23:30.480><c> all</c><00:23:31.230><c> right</c><00:23:31.290><c> so</c><00:23:31.650><c> let's</c>

00:23:31.850 --> 00:23:31.860 align:start position:0%
non null first name all right so let's
 

00:23:31.860 --> 00:23:34.430 align:start position:0%
non null first name all right so let's
look<00:23:32.160><c> at</c><00:23:32.640><c> what</c><00:23:32.820><c> you</c><00:23:32.940><c> have</c><00:23:33.059><c> to</c><00:23:33.179><c> do</c><00:23:33.300><c> in</c><00:23:33.600><c> Java</c><00:23:33.840><c> 7</c><00:23:34.140><c> to</c>

00:23:34.430 --> 00:23:34.440 align:start position:0%
look at what you have to do in Java 7 to
 

00:23:34.440 --> 00:23:35.930 align:start position:0%
look at what you have to do in Java 7 to
do<00:23:34.559><c> that</c><00:23:34.740><c> I'm</c><00:23:35.190><c> not</c><00:23:35.370><c> going</c><00:23:35.520><c> to</c><00:23:35.580><c> pick</c><00:23:35.700><c> through</c>

00:23:35.930 --> 00:23:35.940 align:start position:0%
do that I'm not going to pick through
 

00:23:35.940 --> 00:23:37.190 align:start position:0%
do that I'm not going to pick through
all<00:23:36.030><c> this</c><00:23:36.179><c> code</c><00:23:36.420><c> but</c><00:23:36.720><c> you</c><00:23:36.750><c> can</c><00:23:36.990><c> kind</c><00:23:37.140><c> of</c>

00:23:37.190 --> 00:23:37.200 align:start position:0%
all this code but you can kind of
 

00:23:37.200 --> 00:23:38.990 align:start position:0%
all this code but you can kind of
eyeball<00:23:37.559><c> it</c><00:23:37.590><c> and</c><00:23:37.770><c> say</c><00:23:37.890><c> ok</c><00:23:38.460><c> we</c><00:23:38.580><c> get</c><00:23:38.700><c> the</c><00:23:38.820><c> last</c>

00:23:38.990 --> 00:23:39.000 align:start position:0%
eyeball it and say ok we get the last
 

00:23:39.000 --> 00:23:40.970 align:start position:0%
eyeball it and say ok we get the last
name<00:23:39.120><c> you</c><00:23:39.210><c> compare</c><00:23:39.630><c> it</c><00:23:39.809><c> and</c><00:23:39.870><c> then</c><00:23:40.080><c> alright</c><00:23:40.590><c> so</c>

00:23:40.970 --> 00:23:40.980 align:start position:0%
name you compare it and then alright so
 

00:23:40.980 --> 00:23:43.520 align:start position:0%
name you compare it and then alright so
so<00:23:41.520><c> if</c><00:23:42.240><c> the</c><00:23:42.450><c> last</c><00:23:42.600><c> names</c><00:23:42.809><c> are</c><00:23:42.929><c> equal</c><00:23:43.200><c> then</c><00:23:43.350><c> and</c>

00:23:43.520 --> 00:23:43.530 align:start position:0%
so if the last names are equal then and
 

00:23:43.530 --> 00:23:45.049 align:start position:0%
so if the last names are equal then and
get<00:23:43.620><c> the</c><00:23:43.710><c> first</c><00:23:43.890><c> names</c><00:23:44.070><c> then</c><00:23:44.280><c> we</c><00:23:44.370><c> do</c><00:23:44.520><c> null</c><00:23:44.790><c> test</c>

00:23:45.049 --> 00:23:45.059 align:start position:0%
get the first names then we do null test
 

00:23:45.059 --> 00:23:46.250 align:start position:0%
get the first names then we do null test
and<00:23:45.390><c> then</c><00:23:45.510><c> you</c><00:23:45.750><c> know</c><00:23:45.840><c> there's</c><00:23:46.020><c> a</c><00:23:46.050><c> little</c><00:23:46.170><c> bit</c>

00:23:46.250 --> 00:23:46.260 align:start position:0%
and then you know there's a little bit
 

00:23:46.260 --> 00:23:48.680 align:start position:0%
and then you know there's a little bit
of<00:23:46.440><c> dancing</c><00:23:46.590><c> around</c><00:23:46.860><c> here</c><00:23:47.280><c> and</c><00:23:47.429><c> I'm</c><00:23:48.270><c> pretty</c>

00:23:48.680 --> 00:23:48.690 align:start position:0%
of dancing around here and I'm pretty
 

00:23:48.690 --> 00:23:51.290 align:start position:0%
of dancing around here and I'm pretty
sure<00:23:48.809><c> this</c><00:23:49.110><c> code</c><00:23:49.320><c> is</c><00:23:49.440><c> correct</c><00:23:50.090><c> but</c><00:23:51.090><c> I'm</c><00:23:51.179><c> not</c>

00:23:51.290 --> 00:23:51.300 align:start position:0%
sure this code is correct but I'm not
 

00:23:51.300 --> 00:23:52.669 align:start position:0%
sure this code is correct but I'm not
entirely<00:23:51.570><c> sure</c><00:23:51.780><c> you</c><00:23:52.020><c> could</c><00:23:52.170><c> pick</c><00:23:52.320><c> through</c><00:23:52.559><c> it</c>

00:23:52.669 --> 00:23:52.679 align:start position:0%
entirely sure you could pick through it
 

00:23:52.679 --> 00:23:55.390 align:start position:0%
entirely sure you could pick through it
and<00:23:52.920><c> in</c><00:23:53.160><c> fact</c><00:23:53.309><c> if</c><00:23:53.490><c> I</c><00:23:53.580><c> introduced</c><00:23:54.000><c> the</c><00:23:54.150><c> bug</c><00:23:54.300><c> then</c>

00:23:55.390 --> 00:23:55.400 align:start position:0%
and in fact if I introduced the bug then
 

00:23:55.400 --> 00:23:58.040 align:start position:0%
and in fact if I introduced the bug then
it<00:23:56.400><c> would</c><00:23:56.550><c> be</c><00:23:56.640><c> really</c><00:23:57.000><c> hard</c><00:23:57.210><c> to</c><00:23:57.300><c> see</c><00:23:57.390><c> that</c>

00:23:58.040 --> 00:23:58.050 align:start position:0%
it would be really hard to see that
 

00:23:58.050 --> 00:23:59.840 align:start position:0%
it would be really hard to see that
there<00:23:58.500><c> actually</c><00:23:58.650><c> was</c><00:23:58.890><c> a</c><00:23:59.010><c> bug</c><00:23:59.250><c> because</c><00:23:59.490><c> there's</c>

00:23:59.840 --> 00:23:59.850 align:start position:0%
there actually was a bug because there's
 

00:23:59.850 --> 00:24:01.940 align:start position:0%
there actually was a bug because there's
lots<00:24:00.090><c> of</c><00:24:00.360><c> lots</c><00:24:00.900><c> of</c><00:24:01.080><c> little</c><00:24:01.290><c> conditionals</c><00:24:01.830><c> in</c>

00:24:01.940 --> 00:24:01.950 align:start position:0%
lots of lots of little conditionals in
 

00:24:01.950 --> 00:24:04.190 align:start position:0%
lots of lots of little conditionals in
here<00:24:02.160><c> lots</c><00:24:02.429><c> of</c><00:24:02.550><c> little</c><00:24:02.760><c> details</c><00:24:02.910><c> if</c><00:24:03.720><c> you</c><00:24:03.900><c> swap</c>

00:24:04.190 --> 00:24:04.200 align:start position:0%
here lots of little details if you swap
 

00:24:04.200 --> 00:24:05.900 align:start position:0%
here lots of little details if you swap
a<00:24:04.230><c> one</c><00:24:04.559><c> and</c><00:24:04.710><c> a</c><00:24:04.770><c> minus</c><00:24:04.890><c> one</c><00:24:05.250><c> in</c><00:24:05.429><c> the</c><00:24:05.490><c> wrong</c><00:24:05.640><c> place</c>

00:24:05.900 --> 00:24:05.910 align:start position:0%
a one and a minus one in the wrong place
 

00:24:05.910 --> 00:24:11.390 align:start position:0%
a one and a minus one in the wrong place
you<00:24:06.240><c> know</c><00:24:07.200><c> boy</c><00:24:08.270><c> it's</c><00:24:09.270><c> really</c><00:24:09.390><c> hard</c><00:24:09.840><c> to</c><00:24:10.400><c> it's</c>

00:24:11.390 --> 00:24:11.400 align:start position:0%
you know boy it's really hard to it's
 

00:24:11.400 --> 00:24:12.590 align:start position:0%
you know boy it's really hard to it's
really<00:24:11.610><c> hard</c><00:24:11.760><c> to</c><00:24:11.880><c> determine</c><00:24:12.240><c> that</c><00:24:12.360><c> by</c>

00:24:12.590 --> 00:24:12.600 align:start position:0%
really hard to determine that by
 

00:24:12.600 --> 00:24:13.220 align:start position:0%
really hard to determine that by
inspection

00:24:13.220 --> 00:24:13.230 align:start position:0%
inspection
 

00:24:13.230 --> 00:24:15.799 align:start position:0%
inspection
unless<00:24:14.100><c> what</c><00:24:14.309><c> you</c><00:24:14.400><c> do</c><00:24:14.520><c> is</c><00:24:14.640><c> you</c><00:24:14.730><c> go</c><00:24:14.910><c> out</c><00:24:14.940><c> and</c><00:24:15.390><c> get</c>

00:24:15.799 --> 00:24:15.809 align:start position:0%
unless what you do is you go out and get
 

00:24:15.809 --> 00:24:17.510 align:start position:0%
unless what you do is you go out and get
some<00:24:15.990><c> sample</c><00:24:16.320><c> data</c><00:24:16.470><c> and</c><00:24:16.559><c> pick</c><00:24:16.920><c> through</c><00:24:17.190><c> it</c><00:24:17.220><c> or</c>

00:24:17.510 --> 00:24:17.520 align:start position:0%
some sample data and pick through it or
 

00:24:17.520 --> 00:24:19.040 align:start position:0%
some sample data and pick through it or
step<00:24:17.850><c> through</c><00:24:18.059><c> it</c><00:24:18.150><c> any</c><00:24:18.330><c> bug</c><00:24:18.570><c> or</c><00:24:18.750><c> something</c>

00:24:19.040 --> 00:24:19.050 align:start position:0%
step through it any bug or something
 

00:24:19.050 --> 00:24:22.130 align:start position:0%
step through it any bug or something
like<00:24:19.290><c> that</c><00:24:19.500><c> so</c><00:24:20.120><c> this</c><00:24:21.120><c> stuff</c><00:24:21.360><c> writing</c><00:24:22.020><c> this</c>

00:24:22.130 --> 00:24:22.140 align:start position:0%
like that so this stuff writing this
 

00:24:22.140 --> 00:24:24.610 align:start position:0%
like that so this stuff writing this
kind<00:24:22.380><c> of</c><00:24:22.440><c> stuff</c><00:24:22.650><c> is</c><00:24:22.890><c> really</c><00:24:23.090><c> error-prone</c>

00:24:24.610 --> 00:24:24.620 align:start position:0%
kind of stuff is really error-prone
 

00:24:24.620 --> 00:24:26.590 align:start position:0%
kind of stuff is really error-prone
and<00:24:24.740><c> I</c><00:24:25.100><c> see</c><00:24:25.340><c> a</c><00:24:25.370><c> lot</c><00:24:25.550><c> of</c><00:24:25.580><c> questions</c><00:24:26.030><c> on</c><00:24:26.270><c> Stack</c>

00:24:26.590 --> 00:24:26.600 align:start position:0%
and I see a lot of questions on Stack
 

00:24:26.600 --> 00:24:28.390 align:start position:0%
and I see a lot of questions on Stack
Overflow<00:24:26.630><c> and</c><00:24:27.140><c> forums</c><00:24:27.740><c> about</c><00:24:27.950><c> what's</c><00:24:28.220><c> wrong</c>

00:24:28.390 --> 00:24:28.400 align:start position:0%
Overflow and forums about what's wrong
 

00:24:28.400 --> 00:24:30.490 align:start position:0%
Overflow and forums about what's wrong
with<00:24:28.610><c> my</c><00:24:28.730><c> comparator</c><00:24:29.300><c> and</c><00:24:29.330><c> so</c><00:24:29.570><c> forth</c><00:24:29.809><c> and</c><00:24:30.080><c> it's</c>

00:24:30.490 --> 00:24:30.500 align:start position:0%
with my comparator and so forth and it's
 

00:24:30.500 --> 00:24:32.049 align:start position:0%
with my comparator and so forth and it's
not<00:24:30.650><c> surprising</c><00:24:30.800><c> because</c><00:24:31.280><c> this</c><00:24:31.580><c> is</c><00:24:31.730><c> really</c>

00:24:32.049 --> 00:24:32.059 align:start position:0%
not surprising because this is really
 

00:24:32.059 --> 00:24:34.420 align:start position:0%
not surprising because this is really
it's<00:24:32.420><c> really</c><00:24:32.720><c> detailed</c><00:24:32.900><c> and</c><00:24:33.380><c> if</c><00:24:34.100><c> you</c><00:24:34.220><c> don't</c>

00:24:34.420 --> 00:24:34.430 align:start position:0%
it's really detailed and if you don't
 

00:24:34.430 --> 00:24:35.980 align:start position:0%
it's really detailed and if you don't
get<00:24:34.520><c> it</c><00:24:34.640><c> exactly</c><00:24:34.970><c> right</c><00:24:35.210><c> you</c><00:24:35.540><c> have</c><00:24:35.720><c> a</c><00:24:35.750><c> subtle</c>

00:24:35.980 --> 00:24:35.990 align:start position:0%
get it exactly right you have a subtle
 

00:24:35.990 --> 00:24:40.360 align:start position:0%
get it exactly right you have a subtle
bug<00:24:36.230><c> that</c><00:24:37.000><c> that</c><00:24:38.000><c> can</c><00:24:38.150><c> creep</c><00:24:38.360><c> in</c><00:24:38.950><c> alright</c><00:24:39.950><c> so</c><00:24:40.190><c> in</c>

00:24:40.360 --> 00:24:40.370 align:start position:0%
bug that that can creep in alright so in
 

00:24:40.370 --> 00:24:42.940 align:start position:0%
bug that that can creep in alright so in
Java<00:24:40.640><c> 8</c><00:24:40.960><c> alright</c><00:24:41.960><c> so</c><00:24:42.260><c> this</c><00:24:42.350><c> is</c><00:24:42.530><c> this</c><00:24:42.770><c> is</c><00:24:42.920><c> a</c>

00:24:42.940 --> 00:24:42.950 align:start position:0%
Java 8 alright so this is this is a
 

00:24:42.950 --> 00:24:44.620 align:start position:0%
Java 8 alright so this is this is a
little<00:24:43.250><c> bit</c><00:24:43.370><c> of</c><00:24:43.460><c> a</c><00:24:43.550><c> refactoring</c><00:24:43.850><c> so</c><00:24:44.390><c> instead</c>

00:24:44.620 --> 00:24:44.630 align:start position:0%
little bit of a refactoring so instead
 

00:24:44.630 --> 00:24:47.470 align:start position:0%
little bit of a refactoring so instead
of<00:24:44.690><c> calling</c><00:24:45.220><c> collection</c><00:24:46.220><c> stop</c><00:24:46.430><c> sort</c><00:24:46.790><c> we</c><00:24:47.300><c> call</c>

00:24:47.470 --> 00:24:47.480 align:start position:0%
of calling collection stop sort we call
 

00:24:47.480 --> 00:24:49.360 align:start position:0%
of calling collection stop sort we call
students<00:24:47.990><c> thought</c><00:24:48.110><c> sort</c><00:24:48.470><c> and</c><00:24:48.770><c> instead</c><00:24:49.309><c> of</c>

00:24:49.360 --> 00:24:49.370 align:start position:0%
students thought sort and instead of
 

00:24:49.370 --> 00:24:51.130 align:start position:0%
students thought sort and instead of
using<00:24:49.640><c> an</c><00:24:49.910><c> anonymous</c><00:24:50.120><c> inner</c><00:24:50.600><c> class</c><00:24:50.840><c> we</c>

00:24:51.130 --> 00:24:51.140 align:start position:0%
using an anonymous inner class we
 

00:24:51.140 --> 00:24:54.310 align:start position:0%
using an anonymous inner class we
convert<00:24:51.410><c> it</c><00:24:51.530><c> to</c><00:24:51.559><c> a</c><00:24:51.650><c> lambda</c><00:24:52.040><c> and</c><00:24:52.750><c> you</c><00:24:53.750><c> know</c><00:24:53.840><c> that</c>

00:24:54.310 --> 00:24:54.320 align:start position:0%
convert it to a lambda and you know that
 

00:24:54.320 --> 00:24:57.130 align:start position:0%
convert it to a lambda and you know that
helps<00:24:54.650><c> by</c><00:24:54.980><c> you</c><00:24:55.700><c> know</c><00:24:55.820><c> 10%</c><00:24:56.450><c> right</c><00:24:56.690><c> so</c><00:24:56.900><c> we</c><00:24:56.990><c> got</c>

00:24:57.130 --> 00:24:57.140 align:start position:0%
helps by you know 10% right so we got
 

00:24:57.140 --> 00:24:58.960 align:start position:0%
helps by you know 10% right so we got
rid<00:24:57.380><c> of</c><00:24:57.440><c> a</c><00:24:57.800><c> line</c><00:24:58.010><c> or</c><00:24:58.160><c> to</c><00:24:58.250><c> a</c><00:24:58.280><c> boilerplate</c><00:24:58.790><c> code</c>

00:24:58.960 --> 00:24:58.970 align:start position:0%
rid of a line or to a boilerplate code
 

00:24:58.970 --> 00:25:02.710 align:start position:0%
rid of a line or to a boilerplate code
but<00:24:59.390><c> basically</c><00:24:59.780><c> that</c><00:24:59.900><c> bulk</c><00:25:00.410><c> of</c><00:25:01.570><c> custom</c><00:25:02.570><c> logic</c>

00:25:02.710 --> 00:25:02.720 align:start position:0%
but basically that bulk of custom logic
 

00:25:02.720 --> 00:25:05.680 align:start position:0%
but basically that bulk of custom logic
inside<00:25:03.650><c> the</c><00:25:03.830><c> comparator</c><00:25:04.400><c> itself</c><00:25:04.790><c> is</c><00:25:05.000><c> the</c><00:25:05.480><c> same</c>

00:25:05.680 --> 00:25:05.690 align:start position:0%
inside the comparator itself is the same
 

00:25:05.690 --> 00:25:07.030 align:start position:0%
inside the comparator itself is the same
and<00:25:05.929><c> it</c><00:25:05.990><c> suffers</c><00:25:06.260><c> from</c><00:25:06.290><c> all</c><00:25:06.620><c> the</c><00:25:06.860><c> same</c>

00:25:07.030 --> 00:25:07.040 align:start position:0%
and it suffers from all the same
 

00:25:07.040 --> 00:25:11.740 align:start position:0%
and it suffers from all the same
problems<00:25:07.370><c> and</c><00:25:10.120><c> unfortunately</c><00:25:11.120><c> I</c><00:25:11.150><c> don't</c><00:25:11.570><c> have</c>

00:25:11.740 --> 00:25:11.750 align:start position:0%
problems and unfortunately I don't have
 

00:25:11.750 --> 00:25:14.310 align:start position:0%
problems and unfortunately I don't have
time<00:25:11.929><c> to</c><00:25:12.050><c> go</c><00:25:12.170><c> through</c><00:25:12.200><c> this</c><00:25:12.530><c> in</c><00:25:12.740><c> detail</c><00:25:13.130><c> but</c>

00:25:14.310 --> 00:25:14.320 align:start position:0%
time to go through this in detail but
 

00:25:14.320 --> 00:25:16.810 align:start position:0%
time to go through this in detail but
you'll<00:25:15.320><c> have</c><00:25:15.470><c> to</c><00:25:15.559><c> believe</c><00:25:15.860><c> me</c><00:25:15.890><c> that</c><00:25:16.070><c> this</c><00:25:16.520><c> code</c>

00:25:16.810 --> 00:25:16.820 align:start position:0%
you'll have to believe me that this code
 

00:25:16.820 --> 00:25:20.080 align:start position:0%
you'll have to believe me that this code
is<00:25:17.150><c> the</c><00:25:17.780><c> equivalent</c><00:25:18.440><c> of</c><00:25:18.640><c> the</c><00:25:19.640><c> code</c><00:25:19.850><c> on</c><00:25:20.000><c> the</c>

00:25:20.080 --> 00:25:20.090 align:start position:0%
is the equivalent of the code on the
 

00:25:20.090 --> 00:25:22.570 align:start position:0%
is the equivalent of the code on the
previous<00:25:20.420><c> slide</c><00:25:20.630><c> and</c><00:25:20.900><c> so</c><00:25:21.620><c> what</c><00:25:21.860><c> we</c><00:25:21.980><c> do</c><00:25:22.190><c> is</c>

00:25:22.570 --> 00:25:22.580 align:start position:0%
previous slide and so what we do is
 

00:25:22.580 --> 00:25:24.280 align:start position:0%
previous slide and so what we do is
there's<00:25:23.210><c> a</c><00:25:23.330><c> there's</c><00:25:23.750><c> a</c><00:25:23.780><c> new</c><00:25:23.900><c> method</c><00:25:24.260><c> called</c>

00:25:24.280 --> 00:25:24.290 align:start position:0%
there's a there's a new method called
 

00:25:24.290 --> 00:25:27.910 align:start position:0%
there's a there's a new method called
comparator<00:25:25.160><c> dot</c><00:25:25.490><c> comparing</c><00:25:26.270><c> and</c><00:25:26.679><c> it</c><00:25:27.679><c> takes</c>

00:25:27.910 --> 00:25:27.920 align:start position:0%
comparator dot comparing and it takes
 

00:25:27.920 --> 00:25:29.950 align:start position:0%
comparator dot comparing and it takes
what<00:25:28.250><c> we</c><00:25:28.280><c> call</c><00:25:28.490><c> a</c><00:25:28.520><c> key</c><00:25:28.760><c> extractor</c><00:25:29.390><c> so</c><00:25:29.750><c> in</c><00:25:29.840><c> this</c>

00:25:29.950 --> 00:25:29.960 align:start position:0%
what we call a key extractor so in this
 

00:25:29.960 --> 00:25:31.780 align:start position:0%
what we call a key extractor so in this
case<00:25:30.170><c> it's</c><00:25:30.440><c> get</c><00:25:30.860><c> last</c><00:25:31.100><c> name</c><00:25:31.340><c> it's</c><00:25:31.550><c> just</c><00:25:31.700><c> a</c>

00:25:31.780 --> 00:25:31.790 align:start position:0%
case it's get last name it's just a
 

00:25:31.790 --> 00:25:33.970 align:start position:0%
case it's get last name it's just a
function<00:25:32.000><c> or</c><00:25:32.390><c> just</c><00:25:32.840><c> a</c><00:25:32.900><c> method</c><00:25:33.080><c> that</c><00:25:33.590><c> gets</c><00:25:33.860><c> a</c>

00:25:33.970 --> 00:25:33.980 align:start position:0%
function or just a method that gets a
 

00:25:33.980 --> 00:25:36.250 align:start position:0%
function or just a method that gets a
field<00:25:34.220><c> out</c><00:25:34.490><c> of</c><00:25:34.550><c> out</c><00:25:35.150><c> of</c><00:25:35.210><c> your</c><00:25:35.330><c> object</c><00:25:35.809><c> but</c>

00:25:36.250 --> 00:25:36.260 align:start position:0%
field out of out of your object but
 

00:25:36.260 --> 00:25:39.400 align:start position:0%
field out of out of your object but
what's<00:25:37.100><c> interesting</c><00:25:37.220><c> is</c><00:25:37.760><c> a</c><00:25:38.030><c> typical</c><00:25:38.900><c> Parador</c>

00:25:39.400 --> 00:25:39.410 align:start position:0%
what's interesting is a typical Parador
 

00:25:39.410 --> 00:25:42.100 align:start position:0%
what's interesting is a typical Parador
is<00:25:39.559><c> highly</c><00:25:40.250><c> stylized</c><00:25:40.550><c> code</c><00:25:41.150><c> I</c><00:25:41.450><c> want</c><00:25:41.929><c> to</c><00:25:42.020><c> get</c>

00:25:42.100 --> 00:25:42.110 align:start position:0%
is highly stylized code I want to get
 

00:25:42.110 --> 00:25:44.530 align:start position:0%
is highly stylized code I want to get
the<00:25:42.260><c> field</c><00:25:42.470><c> from</c><00:25:42.770><c> this</c><00:25:43.220><c> object</c><00:25:43.640><c> I</c><00:25:43.790><c> want</c><00:25:44.330><c> to</c><00:25:44.450><c> get</c>

00:25:44.530 --> 00:25:44.540 align:start position:0%
the field from this object I want to get
 

00:25:44.540 --> 00:25:46.150 align:start position:0%
the field from this object I want to get
the<00:25:44.630><c> field</c><00:25:44.840><c> from</c><00:25:44.960><c> this</c><00:25:45.200><c> object</c><00:25:45.380><c> and</c><00:25:45.740><c> then</c>

00:25:46.150 --> 00:25:46.160 align:start position:0%
the field from this object and then
 

00:25:46.160 --> 00:25:48.130 align:start position:0%
the field from this object and then
compare<00:25:46.550><c> them</c><00:25:46.760><c> and</c><00:25:46.970><c> so</c><00:25:47.450><c> instead</c><00:25:47.630><c> of</c><00:25:47.750><c> writing</c>

00:25:48.130 --> 00:25:48.140 align:start position:0%
compare them and so instead of writing
 

00:25:48.140 --> 00:25:51.250 align:start position:0%
compare them and so instead of writing
that<00:25:48.230><c> out</c><00:25:48.290><c> by</c><00:25:48.559><c> hand</c><00:25:49.240><c> comparative</c><00:25:50.260><c> comparator</c>

00:25:51.250 --> 00:25:51.260 align:start position:0%
that out by hand comparative comparator
 

00:25:51.260 --> 00:25:54.700 align:start position:0%
that out by hand comparative comparator
dot<00:25:51.559><c> comparing</c><00:25:52.330><c> does</c><00:25:53.330><c> that</c><00:25:53.600><c> for</c><00:25:53.960><c> you</c><00:25:54.140><c> and</c><00:25:54.350><c> so</c>

00:25:54.700 --> 00:25:54.710 align:start position:0%
dot comparing does that for you and so
 

00:25:54.710 --> 00:25:56.350 align:start position:0%
dot comparing does that for you and so
you<00:25:54.800><c> just</c><00:25:54.830><c> say</c><00:25:55.100><c> which</c><00:25:55.340><c> field</c><00:25:55.670><c> you</c><00:25:55.850><c> want</c><00:25:56.000><c> I</c><00:25:56.210><c> want</c>

00:25:56.350 --> 00:25:56.360 align:start position:0%
you just say which field you want I want
 

00:25:56.360 --> 00:25:58.720 align:start position:0%
you just say which field you want I want
to<00:25:56.420><c> get</c><00:25:56.480><c> the</c><00:25:56.600><c> last</c><00:25:56.720><c> name</c><00:25:56.900><c> ok</c><00:25:57.710><c> boom</c><00:25:58.340><c> there's</c><00:25:58.670><c> a</c>

00:25:58.720 --> 00:25:58.730 align:start position:0%
to get the last name ok boom there's a
 

00:25:58.730 --> 00:26:00.660 align:start position:0%
to get the last name ok boom there's a
comparator<00:25:59.300><c> that</c><00:25:59.330><c> compares</c><00:25:59.809><c> last</c><00:26:00.080><c> name</c>

00:26:00.660 --> 00:26:00.670 align:start position:0%
comparator that compares last name
 

00:26:00.670 --> 00:26:04.870 align:start position:0%
comparator that compares last name
there's<00:26:01.670><c> another</c><00:26:02.510><c> method</c><00:26:02.900><c> on</c><00:26:03.880><c> comparator</c>

00:26:04.870 --> 00:26:04.880 align:start position:0%
there's another method on comparator
 

00:26:04.880 --> 00:26:05.740 align:start position:0%
there's another method on comparator
called

00:26:05.740 --> 00:26:05.750 align:start position:0%
called
 

00:26:05.750 --> 00:26:09.640 align:start position:0%
called
then<00:26:06.440><c> comparing</c><00:26:07.130><c> and</c><00:26:07.550><c> so</c><00:26:07.970><c> if</c><00:26:08.120><c> I</c><00:26:08.240><c> have</c><00:26:08.620><c> five</c><00:26:09.620><c> a</c>

00:26:09.640 --> 00:26:09.650 align:start position:0%
then comparing and so if I have five a
 

00:26:09.650 --> 00:26:13.750 align:start position:0%
then comparing and so if I have five a
comparator<00:26:10.280><c> and</c><00:26:10.600><c> this</c><00:26:11.600><c> first</c><00:26:11.809><c> comparator</c><00:26:12.760><c> the</c>

00:26:13.750 --> 00:26:13.760 align:start position:0%
comparator and this first comparator the
 

00:26:13.760 --> 00:26:14.919 align:start position:0%
comparator and this first comparator the
result<00:26:14.150><c> of</c><00:26:14.270><c> this</c><00:26:14.330><c> calling</c><00:26:14.690><c> the</c><00:26:14.750><c> first</c>

00:26:14.919 --> 00:26:14.929 align:start position:0%
result of this calling the first
 

00:26:14.929 --> 00:26:18.120 align:start position:0%
result of this calling the first
comparator<00:26:15.410><c> is</c><00:26:15.650><c> that</c><00:26:16.190><c> the</c><00:26:17.030><c> values</c><00:26:17.420><c> are</c><00:26:17.540><c> equal</c>

00:26:18.120 --> 00:26:18.130 align:start position:0%
comparator is that the values are equal
 

00:26:18.130 --> 00:26:21.310 align:start position:0%
comparator is that the values are equal
then<00:26:19.130><c> I</c><00:26:19.580><c> want</c><00:26:19.880><c> to</c><00:26:19.970><c> apply</c><00:26:20.240><c> a</c><00:26:20.270><c> second-level</c><00:26:20.870><c> sort</c>

00:26:21.310 --> 00:26:21.320 align:start position:0%
then I want to apply a second-level sort
 

00:26:21.320 --> 00:26:23.380 align:start position:0%
then I want to apply a second-level sort
and<00:26:21.620><c> that's</c><00:26:21.830><c> what</c><00:26:22.040><c> then</c><00:26:22.309><c> comparing</c><00:26:22.820><c> does</c><00:26:23.090><c> so</c>

00:26:23.380 --> 00:26:23.390 align:start position:0%
and that's what then comparing does so
 

00:26:23.390 --> 00:26:25.750 align:start position:0%
and that's what then comparing does so
it<00:26:23.510><c> takes</c><00:26:23.690><c> two</c><00:26:24.020><c> comparators</c><00:26:24.559><c> and</c><00:26:24.860><c> smashes</c>

00:26:25.750 --> 00:26:25.760 align:start position:0%
it takes two comparators and smashes
 

00:26:25.760 --> 00:26:27.669 align:start position:0%
it takes two comparators and smashes
them<00:26:25.880><c> together</c><00:26:26.150><c> in</c><00:26:26.420><c> this</c><00:26:26.510><c> particular</c><00:26:27.020><c> way</c><00:26:27.200><c> to</c>

00:26:27.669 --> 00:26:27.679 align:start position:0%
them together in this particular way to
 

00:26:27.679 --> 00:26:30.190 align:start position:0%
them together in this particular way to
give<00:26:27.860><c> you</c><00:26:28.070><c> a</c><00:26:28.309><c> two-level</c><00:26:29.059><c> sort</c><00:26:29.300><c> so</c><00:26:29.840><c> instead</c><00:26:30.140><c> of</c>

00:26:30.190 --> 00:26:30.200 align:start position:0%
give you a two-level sort so instead of
 

00:26:30.200 --> 00:26:31.810 align:start position:0%
give you a two-level sort so instead of
having<00:26:30.380><c> a</c><00:26:30.590><c> bunch</c><00:26:30.710><c> of</c><00:26:30.830><c> conditional</c><00:26:31.340><c> logic</c><00:26:31.460><c> that</c>

00:26:31.810 --> 00:26:31.820 align:start position:0%
having a bunch of conditional logic that
 

00:26:31.820 --> 00:26:33.940 align:start position:0%
having a bunch of conditional logic that
does<00:26:32.000><c> that</c><00:26:32.150><c> for</c><00:26:32.420><c> you</c><00:26:32.600><c> it</c><00:26:32.870><c> it</c><00:26:33.170><c> allows</c><00:26:33.620><c> you</c><00:26:33.860><c> to</c>

00:26:33.940 --> 00:26:33.950 align:start position:0%
does that for you it it allows you to
 

00:26:33.950 --> 00:26:36.400 align:start position:0%
does that for you it it allows you to
build<00:26:34.250><c> up</c><00:26:34.490><c> this</c><00:26:34.730><c> composite</c><00:26:35.150><c> comparator</c><00:26:35.840><c> from</c>

00:26:36.400 --> 00:26:36.410 align:start position:0%
build up this composite comparator from
 

00:26:36.410 --> 00:26:37.590 align:start position:0%
build up this composite comparator from
smaller<00:26:36.740><c> comparators</c>

00:26:37.590 --> 00:26:37.600 align:start position:0%
smaller comparators
 

00:26:37.600 --> 00:26:40.170 align:start position:0%
smaller comparators
and<00:26:38.530><c> then</c><00:26:38.830><c> Noel's</c><00:26:39.160><c> first</c><00:26:39.520><c> is</c><00:26:39.760><c> kind</c><00:26:40.000><c> of</c><00:26:40.090><c> the</c>

00:26:40.170 --> 00:26:40.180 align:start position:0%
and then Noel's first is kind of the
 

00:26:40.180 --> 00:26:43.710 align:start position:0%
and then Noel's first is kind of the
same<00:26:40.390><c> thing</c><00:26:40.720><c> so</c><00:26:42.150><c> generally</c><00:26:43.150><c> we</c><00:26:43.300><c> want</c><00:26:43.510><c> to</c><00:26:43.600><c> do</c><00:26:43.690><c> a</c>

00:26:43.710 --> 00:26:43.720 align:start position:0%
same thing so generally we want to do a
 

00:26:43.720 --> 00:26:46.680 align:start position:0%
same thing so generally we want to do a
string<00:26:44.050><c> comparison</c><00:26:44.710><c> but</c><00:26:45.400><c> what</c><00:26:46.240><c> if</c><00:26:46.330><c> the</c><00:26:46.450><c> string</c>

00:26:46.680 --> 00:26:46.690 align:start position:0%
string comparison but what if the string
 

00:26:46.690 --> 00:26:48.090 align:start position:0%
string comparison but what if the string
is<00:26:46.720><c> null</c><00:26:47.050><c> well</c><00:26:47.410><c> you're</c><00:26:47.560><c> going</c><00:26:47.650><c> to</c><00:26:47.710><c> get</c><00:26:47.860><c> a</c><00:26:47.890><c> null</c>

00:26:48.090 --> 00:26:48.100 align:start position:0%
is null well you're going to get a null
 

00:26:48.100 --> 00:26:49.020 align:start position:0%
is null well you're going to get a null
pointer<00:26:48.430><c> exception</c>

00:26:49.020 --> 00:26:49.030 align:start position:0%
pointer exception
 

00:26:49.030 --> 00:26:51.030 align:start position:0%
pointer exception
well<00:26:49.180><c> nulls</c><00:26:49.870><c> first</c><00:26:50.230><c> is</c><00:26:50.470><c> another</c><00:26:50.710><c> utility</c>

00:26:51.030 --> 00:26:51.040 align:start position:0%
well nulls first is another utility
 

00:26:51.040 --> 00:26:53.310 align:start position:0%
well nulls first is another utility
method<00:26:51.550><c> that</c><00:26:51.730><c> says</c><00:26:51.940><c> okay</c><00:26:52.660><c> I'm</c><00:26:52.960><c> going</c><00:26:53.110><c> to</c><00:26:53.170><c> do</c><00:26:53.290><c> a</c>

00:26:53.310 --> 00:26:53.320 align:start position:0%
method that says okay I'm going to do a
 

00:26:53.320 --> 00:26:55.290 align:start position:0%
method that says okay I'm going to do a
comparison<00:26:53.650><c> and</c><00:26:54.520><c> I</c><00:26:54.580><c> want</c><00:26:54.760><c> to</c><00:26:54.820><c> sort</c><00:26:54.970><c> nulls</c>

00:26:55.290 --> 00:26:55.300 align:start position:0%
comparison and I want to sort nulls
 

00:26:55.300 --> 00:26:57.630 align:start position:0%
comparison and I want to sort nulls
first<00:26:55.630><c> so</c><00:26:55.840><c> it</c><00:26:55.960><c> sets</c><00:26:56.230><c> those</c><00:26:56.440><c> aside</c><00:26:56.770><c> and</c><00:26:57.160><c> then</c>

00:26:57.630 --> 00:26:57.640 align:start position:0%
first so it sets those aside and then
 

00:26:57.640 --> 00:26:59.400 align:start position:0%
first so it sets those aside and then
for<00:26:57.820><c> non</c><00:26:57.970><c> null</c><00:26:58.180><c> things</c><00:26:58.450><c> it</c><00:26:58.660><c> just</c><00:26:58.690><c> calls</c><00:26:59.110><c> the</c>

00:26:59.400 --> 00:26:59.410 align:start position:0%
for non null things it just calls the
 

00:26:59.410 --> 00:27:01.680 align:start position:0%
for non null things it just calls the
calls<00:27:00.010><c> the</c><00:27:00.160><c> regular</c><00:27:00.490><c> comparator</c><00:27:01.030><c> so</c><00:27:01.420><c> again</c>

00:27:01.680 --> 00:27:01.690 align:start position:0%
calls the regular comparator so again
 

00:27:01.690 --> 00:27:03.750 align:start position:0%
calls the regular comparator so again
the<00:27:02.320><c> flavor</c><00:27:02.620><c> here</c><00:27:02.950><c> is</c><00:27:03.130><c> that</c><00:27:03.310><c> we're</c><00:27:03.460><c> building</c>

00:27:03.750 --> 00:27:03.760 align:start position:0%
the flavor here is that we're building
 

00:27:03.760 --> 00:27:06.900 align:start position:0%
the flavor here is that we're building
up<00:27:04.120><c> a</c><00:27:04.420><c> complex</c><00:27:05.350><c> comparator</c><00:27:06.130><c> with</c><00:27:06.340><c> lots</c><00:27:06.640><c> of</c>

00:27:06.900 --> 00:27:06.910 align:start position:0%
up a complex comparator with lots of
 

00:27:06.910 --> 00:27:08.520 align:start position:0%
up a complex comparator with lots of
weird<00:27:07.240><c> conditionals</c><00:27:07.930><c> and</c><00:27:08.080><c> stuff</c><00:27:08.290><c> that</c><00:27:08.320><c> you</c>

00:27:08.520 --> 00:27:08.530 align:start position:0%
weird conditionals and stuff that you
 

00:27:08.530 --> 00:27:11.190 align:start position:0%
weird conditionals and stuff that you
saw<00:27:08.860><c> on</c><00:27:09.130><c> the</c><00:27:09.490><c> previous</c><00:27:09.670><c> slide</c><00:27:09.910><c> by</c><00:27:10.780><c> composing</c>

00:27:11.190 --> 00:27:11.200 align:start position:0%
saw on the previous slide by composing
 

00:27:11.200 --> 00:27:13.290 align:start position:0%
saw on the previous slide by composing
little<00:27:11.620><c> bits</c><00:27:11.800><c> of</c><00:27:11.920><c> pieces</c><00:27:12.160><c> so</c><00:27:12.790><c> we</c><00:27:12.850><c> start</c><00:27:13.120><c> with</c><00:27:13.240><c> a</c>

00:27:13.290 --> 00:27:13.300 align:start position:0%
little bits of pieces so we start with a
 

00:27:13.300 --> 00:27:17.310 align:start position:0%
little bits of pieces so we start with a
natural<00:27:13.720><c> order</c><00:27:14.020><c> we</c><00:27:15.270><c> we</c><00:27:16.270><c> sort</c><00:27:16.690><c> the</c><00:27:16.810><c> nulls</c><00:27:16.990><c> first</c>

00:27:17.310 --> 00:27:17.320 align:start position:0%
natural order we we sort the nulls first
 

00:27:17.320 --> 00:27:21.930 align:start position:0%
natural order we we sort the nulls first
and<00:27:17.670><c> we</c><00:27:18.750><c> then</c><00:27:19.750><c> we're</c><00:27:19.900><c> sorting</c><00:27:20.230><c> the</c><00:27:20.730><c> results</c><00:27:21.730><c> of</c>

00:27:21.930 --> 00:27:21.940 align:start position:0%
and we then we're sorting the results of
 

00:27:21.940 --> 00:27:23.610 align:start position:0%
and we then we're sorting the results of
first<00:27:22.300><c> name</c><00:27:22.480><c> on</c><00:27:22.510><c> that</c><00:27:22.870><c> and</c><00:27:23.140><c> that's</c><00:27:23.470><c> the</c>

00:27:23.610 --> 00:27:23.620 align:start position:0%
first name on that and that's the
 

00:27:23.620 --> 00:27:25.560 align:start position:0%
first name on that and that's the
second-level<00:27:24.070><c> comparison</c><00:27:24.850><c> within</c><00:27:25.120><c> the</c>

00:27:25.560 --> 00:27:25.570 align:start position:0%
second-level comparison within the
 

00:27:25.570 --> 00:27:27.930 align:start position:0%
second-level comparison within the
first-level<00:27:26.410><c> comparison</c><00:27:27.070><c> of</c><00:27:27.280><c> get</c><00:27:27.460><c> last</c><00:27:27.700><c> name</c>

00:27:27.930 --> 00:27:27.940 align:start position:0%
first-level comparison of get last name
 

00:27:27.940 --> 00:27:29.850 align:start position:0%
first-level comparison of get last name
so<00:27:28.510><c> there's</c><00:27:28.630><c> a</c><00:27:28.780><c> lot</c><00:27:29.020><c> of</c><00:27:29.230><c> stuff</c><00:27:29.410><c> going</c><00:27:29.590><c> on</c><00:27:29.800><c> in</c>

00:27:29.850 --> 00:27:29.860 align:start position:0%
so there's a lot of stuff going on in
 

00:27:29.860 --> 00:27:35.610 align:start position:0%
so there's a lot of stuff going on in
this<00:27:30.070><c> code</c><00:27:30.310><c> that</c><00:27:32.910><c> that</c><00:27:33.910><c> saves</c><00:27:34.540><c> you</c><00:27:34.810><c> the</c><00:27:35.410><c> effort</c>

00:27:35.610 --> 00:27:35.620 align:start position:0%
this code that that saves you the effort
 

00:27:35.620 --> 00:27:37.650 align:start position:0%
this code that that saves you the effort
of<00:27:35.950><c> writing</c><00:27:36.250><c> all</c><00:27:36.700><c> the</c><00:27:36.880><c> complicated</c>

00:27:37.650 --> 00:27:37.660 align:start position:0%
of writing all the complicated
 

00:27:37.660 --> 00:27:39.510 align:start position:0%
of writing all the complicated
conditional<00:27:38.200><c> logic</c><00:27:38.320><c> on</c><00:27:38.710><c> the</c><00:27:38.770><c> previous</c><00:27:39.310><c> slide</c>

00:27:39.510 --> 00:27:39.520 align:start position:0%
conditional logic on the previous slide
 

00:27:39.520 --> 00:27:41.190 align:start position:0%
conditional logic on the previous slide
I<00:27:39.790><c> should</c><00:27:40.480><c> have</c><00:27:40.570><c> put</c><00:27:40.690><c> up</c><00:27:40.780><c> this</c><00:27:40.900><c> slide</c><00:27:41.080><c> because</c>

00:27:41.190 --> 00:27:41.200 align:start position:0%
I should have put up this slide because
 

00:27:41.200 --> 00:27:44.220 align:start position:0%
I should have put up this slide because
this<00:27:41.410><c> sort</c><00:27:41.560><c> of</c><00:27:41.650><c> explains</c><00:27:42.040><c> it</c><00:27:42.190><c> here</c><00:27:42.690><c> but</c><00:27:43.690><c> anyway</c>

00:27:44.220 --> 00:27:44.230 align:start position:0%
this sort of explains it here but anyway
 

00:27:44.230 --> 00:27:46.260 align:start position:0%
this sort of explains it here but anyway
that<00:27:44.440><c> this</c><00:27:44.710><c> basically</c><00:27:45.040><c> says</c><00:27:45.550><c> what</c><00:27:45.850><c> I</c><00:27:45.880><c> what</c><00:27:46.240><c> I</c>

00:27:46.260 --> 00:27:46.270 align:start position:0%
that this basically says what I what I
 

00:27:46.270 --> 00:27:48.630 align:start position:0%
that this basically says what I what I
just<00:27:46.570><c> tried</c><00:27:47.110><c> to</c><00:27:47.230><c> explain</c><00:27:47.470><c> and</c><00:27:47.740><c> so</c><00:27:47.890><c> I'll</c><00:27:48.220><c> make</c>

00:27:48.630 --> 00:27:48.640 align:start position:0%
just tried to explain and so I'll make
 

00:27:48.640 --> 00:27:50.250 align:start position:0%
just tried to explain and so I'll make
sure<00:27:48.790><c> this</c><00:27:48.940><c> slide</c><00:27:49.180><c> that</c><00:27:49.210><c> gets</c><00:27:49.570><c> posted</c><00:27:49.750><c> and</c><00:27:50.230><c> so</c>

00:27:50.250 --> 00:27:50.260 align:start position:0%
sure this slide that gets posted and so
 

00:27:50.260 --> 00:27:51.960 align:start position:0%
sure this slide that gets posted and so
you<00:27:50.470><c> can</c><00:27:50.710><c> take</c><00:27:51.190><c> a</c><00:27:51.220><c> closer</c><00:27:51.490><c> look</c><00:27:51.700><c> at</c><00:27:51.850><c> this</c>

00:27:51.960 --> 00:27:51.970 align:start position:0%
you can take a closer look at this
 

00:27:51.970 --> 00:27:59.460 align:start position:0%
you can take a closer look at this
afterwards<00:27:56.640><c> all</c><00:27:57.640><c> right</c><00:27:57.730><c> so</c><00:27:58.090><c> after</c><00:27:58.390><c> this</c><00:27:58.690><c> now</c>

00:27:59.460 --> 00:27:59.470 align:start position:0%
afterwards all right so after this now
 

00:27:59.470 --> 00:28:01.920 align:start position:0%
afterwards all right so after this now
that's<00:27:59.920><c> the</c><00:28:00.250><c> end</c><00:28:00.490><c> of</c><00:28:00.640><c> the</c><00:28:00.790><c> Java</c><00:28:01.060><c> 8</c><00:28:01.300><c> segment</c><00:28:01.810><c> and</c>

00:28:01.920 --> 00:28:01.930 align:start position:0%
that's the end of the Java 8 segment and
 

00:28:01.930 --> 00:28:06.360 align:start position:0%
that's the end of the Java 8 segment and
I<00:28:01.960><c> can</c><00:28:02.080><c> start</c><00:28:02.230><c> talking</c><00:28:02.380><c> about</c><00:28:02.530><c> Java</c><00:28:02.860><c> 9</c><00:28:03.100><c> now</c><00:28:05.370><c> all</c>

00:28:06.360 --> 00:28:06.370 align:start position:0%
I can start talking about Java 9 now all
 

00:28:06.370 --> 00:28:07.190 align:start position:0%
I can start talking about Java 9 now all
right

00:28:07.190 --> 00:28:07.200 align:start position:0%
right
 

00:28:07.200 --> 00:28:12.480 align:start position:0%
right
ok<00:28:08.250><c> so</c><00:28:09.250><c> what</c><00:28:10.110><c> the</c><00:28:11.110><c> the</c><00:28:11.440><c> little</c><00:28:11.950><c> bit</c><00:28:12.130><c> of</c><00:28:12.220><c> history</c>

00:28:12.480 --> 00:28:12.490 align:start position:0%
ok so what the the little bit of history
 

00:28:12.490 --> 00:28:16.830 align:start position:0%
ok so what the the little bit of history
of<00:28:12.690><c> of</c><00:28:13.690><c> what</c><00:28:13.960><c> went</c><00:28:14.110><c> into</c><00:28:14.230><c> Java</c><00:28:14.470><c> 9</c><00:28:15.630><c> there</c><00:28:16.630><c> have</c>

00:28:16.830 --> 00:28:16.840 align:start position:0%
of of what went into Java 9 there have
 

00:28:16.840 --> 00:28:18.690 align:start position:0%
of of what went into Java 9 there have
been<00:28:16.960><c> a</c><00:28:17.020><c> couple</c><00:28:17.080><c> efforts</c><00:28:17.740><c> over</c><00:28:18.040><c> the</c><00:28:18.160><c> years</c><00:28:18.430><c> in</c>

00:28:18.690 --> 00:28:18.700 align:start position:0%
been a couple efforts over the years in
 

00:28:18.700 --> 00:28:21.630 align:start position:0%
been a couple efforts over the years in
Java<00:28:19.000><c> to</c><00:28:19.360><c> add</c><00:28:19.720><c> collection</c><00:28:20.590><c> literals</c><00:28:21.040><c> these</c>

00:28:21.630 --> 00:28:21.640 align:start position:0%
Java to add collection literals these
 

00:28:21.640 --> 00:28:24.480 align:start position:0%
Java to add collection literals these
have<00:28:21.880><c> always</c><00:28:22.180><c> been</c><00:28:22.380><c> proposed</c><00:28:23.380><c> as</c><00:28:23.740><c> language</c>

00:28:24.480 --> 00:28:24.490 align:start position:0%
have always been proposed as language
 

00:28:24.490 --> 00:28:27.330 align:start position:0%
have always been proposed as language
enhancements<00:28:25.180><c> in</c><00:28:25.990><c> Java</c><00:28:26.260><c> 7</c><00:28:26.500><c> there</c><00:28:26.800><c> was</c><00:28:26.920><c> project</c>

00:28:27.330 --> 00:28:27.340 align:start position:0%
enhancements in Java 7 there was project
 

00:28:27.340 --> 00:28:29.310 align:start position:0%
enhancements in Java 7 there was project
coin<00:28:27.670><c> and</c><00:28:28.000><c> one</c><00:28:28.420><c> of</c><00:28:28.540><c> the</c><00:28:28.600><c> proposals</c><00:28:28.900><c> that</c><00:28:29.140><c> was</c>

00:28:29.310 --> 00:28:29.320 align:start position:0%
coin and one of the proposals that was
 

00:28:29.320 --> 00:28:31.050 align:start position:0%
coin and one of the proposals that was
entertained<00:28:29.740><c> was</c><00:28:30.130><c> to</c><00:28:30.430><c> add</c><00:28:30.550><c> collection</c>

00:28:31.050 --> 00:28:31.060 align:start position:0%
entertained was to add collection
 

00:28:31.060 --> 00:28:33.360 align:start position:0%
entertained was to add collection
literals<00:28:31.420><c> and</c><00:28:31.630><c> some</c><00:28:32.320><c> proposals</c><00:28:32.920><c> were</c><00:28:33.040><c> floated</c>

00:28:33.360 --> 00:28:33.370 align:start position:0%
literals and some proposals were floated
 

00:28:33.370 --> 00:28:35.570 align:start position:0%
literals and some proposals were floated
around<00:28:33.430><c> but</c><00:28:33.790><c> that</c><00:28:33.820><c> that</c><00:28:34.570><c> never</c><00:28:34.780><c> went</c><00:28:35.020><c> anywhere</c>

00:28:35.570 --> 00:28:35.580 align:start position:0%
around but that that never went anywhere
 

00:28:35.580 --> 00:28:39.630 align:start position:0%
around but that that never went anywhere
after<00:28:36.580><c> Java</c><00:28:37.300><c> 8</c><00:28:37.600><c> there</c><00:28:37.960><c> was</c><00:28:38.170><c> a</c><00:28:38.200><c> JEP</c><00:28:38.680><c> JDK</c>

00:28:39.630 --> 00:28:39.640 align:start position:0%
after Java 8 there was a JEP JDK
 

00:28:39.640 --> 00:28:42.270 align:start position:0%
after Java 8 there was a JEP JDK
enhancement<00:28:40.210><c> proposal</c><00:28:40.660><c> it</c><00:28:40.810><c> was</c><00:28:41.380><c> a</c><00:28:41.770><c> little</c><00:28:42.160><c> odd</c>

00:28:42.270 --> 00:28:42.280 align:start position:0%
enhancement proposal it was a little odd
 

00:28:42.280 --> 00:28:44.400 align:start position:0%
enhancement proposal it was a little odd
it<00:28:42.460><c> was</c><00:28:42.490><c> a</c><00:28:42.580><c> research</c><00:28:43.120><c> jet</c><00:28:43.480><c> but</c><00:28:43.750><c> basically</c><00:28:44.200><c> the</c>

00:28:44.400 --> 00:28:44.410 align:start position:0%
it was a research jet but basically the
 

00:28:44.410 --> 00:28:46.920 align:start position:0%
it was a research jet but basically the
idea<00:28:44.710><c> was</c><00:28:44.950><c> to</c><00:28:45.250><c> was</c><00:28:45.820><c> to</c><00:28:45.850><c> scope</c><00:28:46.360><c> out</c><00:28:46.510><c> what</c><00:28:46.540><c> was</c>

00:28:46.920 --> 00:28:46.930 align:start position:0%
idea was to was to scope out what was
 

00:28:46.930 --> 00:28:49.800 align:start position:0%
idea was to was to scope out what was
required<00:28:47.260><c> to</c><00:28:47.680><c> add</c><00:28:48.000><c> collection</c><00:28:49.000><c> literals</c><00:28:49.360><c> to</c>

00:28:49.800 --> 00:28:49.810 align:start position:0%
required to add collection literals to
 

00:28:49.810 --> 00:28:51.060 align:start position:0%
required to add collection literals to
the<00:28:49.900><c> language</c><00:28:50.230><c> and</c><00:28:50.440><c> the</c>

00:28:51.060 --> 00:28:51.070 align:start position:0%
the language and the
 

00:28:51.070 --> 00:28:54.330 align:start position:0%
the language and the
result<00:28:51.309><c> of</c><00:28:51.490><c> that</c><00:28:51.639><c> was</c><00:28:52.090><c> a</c><00:28:52.769><c> decision</c><00:28:53.769><c> that</c><00:28:53.950><c> we</c>

00:28:54.330 --> 00:28:54.340 align:start position:0%
result of that was a decision that we
 

00:28:54.340 --> 00:28:56.340 align:start position:0%
result of that was a decision that we
would<00:28:54.519><c> not</c><00:28:54.700><c> add</c><00:28:55.000><c> collection</c><00:28:55.659><c> literals</c><00:28:56.080><c> to</c><00:28:56.259><c> the</c>

00:28:56.340 --> 00:28:56.350 align:start position:0%
would not add collection literals to the
 

00:28:56.350 --> 00:29:02.549 align:start position:0%
would not add collection literals to the
language<00:28:56.620><c> and</c><00:28:58.620><c> it's</c><00:28:59.620><c> it's</c><00:29:00.039><c> I</c><00:29:00.659><c> think</c><00:29:01.659><c> the</c><00:29:01.990><c> the</c>

00:29:02.549 --> 00:29:02.559 align:start position:0%
language and it's it's I think the the
 

00:29:02.559 --> 00:29:05.879 align:start position:0%
language and it's it's I think the the
most<00:29:02.590><c> succinct</c><00:29:03.549><c> way</c><00:29:03.669><c> to</c><00:29:04.860><c> explain</c><00:29:05.860><c> that</c>

00:29:05.879 --> 00:29:05.889 align:start position:0%
most succinct way to explain that
 

00:29:05.889 --> 00:29:09.659 align:start position:0%
most succinct way to explain that
decision<00:29:06.460><c> is</c><00:29:06.820><c> to</c><00:29:07.179><c> observe</c><00:29:07.600><c> that</c><00:29:08.429><c> unlike</c><00:29:09.429><c> many</c>

00:29:09.659 --> 00:29:09.669 align:start position:0%
decision is to observe that unlike many
 

00:29:09.669 --> 00:29:13.470 align:start position:0%
decision is to observe that unlike many
other<00:29:09.880><c> languages</c><00:29:10.389><c> and</c><00:29:10.630><c> systems</c><00:29:11.190><c> Java</c><00:29:12.190><c> has</c><00:29:12.850><c> has</c>

00:29:13.470 --> 00:29:13.480 align:start position:0%
other languages and systems Java has has
 

00:29:13.480 --> 00:29:16.230 align:start position:0%
other languages and systems Java has has
clearly<00:29:14.049><c> defined</c><00:29:14.350><c> architecture</c><00:29:14.980><c> where</c><00:29:15.549><c> the</c>

00:29:16.230 --> 00:29:16.240 align:start position:0%
clearly defined architecture where the
 

00:29:16.240 --> 00:29:18.509 align:start position:0%
clearly defined architecture where the
JVM<00:29:16.720><c> is</c><00:29:17.049><c> separate</c><00:29:17.740><c> from</c><00:29:17.919><c> the</c><00:29:18.190><c> java</c>

00:29:18.509 --> 00:29:18.519 align:start position:0%
JVM is separate from the java
 

00:29:18.519 --> 00:29:20.580 align:start position:0%
JVM is separate from the java
programming<00:29:19.000><c> language</c><00:29:19.480><c> and</c><00:29:19.690><c> the</c><00:29:19.750><c> programming</c>

00:29:20.580 --> 00:29:20.590 align:start position:0%
programming language and the programming
 

00:29:20.590 --> 00:29:22.499 align:start position:0%
programming language and the programming
language<00:29:21.009><c> is</c><00:29:21.130><c> in</c><00:29:21.279><c> turn</c><00:29:21.460><c> separate</c><00:29:22.269><c> from</c><00:29:22.450><c> the</c>

00:29:22.499 --> 00:29:22.509 align:start position:0%
language is in turn separate from the
 

00:29:22.509 --> 00:29:25.019 align:start position:0%
language is in turn separate from the
libraries<00:29:23.019><c> and</c><00:29:23.200><c> collections</c><00:29:23.679><c> are</c><00:29:24.340><c> a</c><00:29:24.610><c> library</c>

00:29:25.019 --> 00:29:25.029 align:start position:0%
libraries and collections are a library
 

00:29:25.029 --> 00:29:29.909 align:start position:0%
libraries and collections are a library
construct<00:29:25.720><c> and</c><00:29:25.929><c> so</c><00:29:26.500><c> if</c><00:29:26.710><c> you</c><00:29:27.220><c> mix</c><00:29:27.809><c> the</c><00:29:28.830><c> idea</c><00:29:29.830><c> of</c>

00:29:29.909 --> 00:29:29.919 align:start position:0%
construct and so if you mix the idea of
 

00:29:29.919 --> 00:29:32.129 align:start position:0%
construct and so if you mix the idea of
collections<00:29:30.460><c> too</c><00:29:30.850><c> closely</c><00:29:31.210><c> into</c><00:29:31.480><c> the</c>

00:29:32.129 --> 00:29:32.139 align:start position:0%
collections too closely into the
 

00:29:32.139 --> 00:29:35.669 align:start position:0%
collections too closely into the
programming<00:29:32.710><c> language</c><00:29:33.070><c> itself</c><00:29:33.539><c> then</c><00:29:34.679><c> things</c>

00:29:35.669 --> 00:29:35.679 align:start position:0%
programming language itself then things
 

00:29:35.679 --> 00:29:38.100 align:start position:0%
programming language itself then things
get<00:29:35.889><c> to</c><00:29:36.039><c> be</c><00:29:36.159><c> very</c><00:29:36.820><c> uncomfortable</c><00:29:37.509><c> so</c><00:29:38.019><c> the</c>

00:29:38.100 --> 00:29:38.110 align:start position:0%
get to be very uncomfortable so the
 

00:29:38.110 --> 00:29:40.700 align:start position:0%
get to be very uncomfortable so the
question<00:29:38.440><c> is</c><00:29:38.559><c> suppose</c><00:29:38.860><c> so</c><00:29:39.549><c> as</c><00:29:39.639><c> we</c><00:29:39.759><c> have</c><00:29:39.909><c> a</c>

00:29:40.700 --> 00:29:40.710 align:start position:0%
question is suppose so as we have a
 

00:29:40.710 --> 00:29:42.810 align:start position:0%
question is suppose so as we have a
programming<00:29:41.710><c> language</c><00:29:41.740><c> syntax</c><00:29:42.370><c> that</c><00:29:42.490><c> creates</c>

00:29:42.810 --> 00:29:42.820 align:start position:0%
programming language syntax that creates
 

00:29:42.820 --> 00:29:45.840 align:start position:0%
programming language syntax that creates
a<00:29:42.909><c> list</c><00:29:43.169><c> okay</c><00:29:44.200><c> well</c><00:29:44.529><c> what</c><00:29:45.039><c> what</c><00:29:45.460><c> lists</c><00:29:45.759><c> your</c>

00:29:45.840 --> 00:29:45.850 align:start position:0%
a list okay well what what lists your
 

00:29:45.850 --> 00:29:47.700 align:start position:0%
a list okay well what what lists your
that<00:29:45.970><c> Beach</c><00:29:46.120><c> should</c><00:29:46.330><c> that</c><00:29:46.480><c> be</c><00:29:46.600><c> ArrayList</c><00:29:47.049><c> well</c>

00:29:47.700 --> 00:29:47.710 align:start position:0%
that Beach should that be ArrayList well
 

00:29:47.710 --> 00:29:50.279 align:start position:0%
that Beach should that be ArrayList well
ArrayList<00:29:48.700><c> is</c><00:29:49.000><c> fine</c><00:29:49.570><c> for</c><00:29:49.809><c> many</c><00:29:49.960><c> things</c><00:29:50.110><c> but</c>

00:29:50.279 --> 00:29:50.289 align:start position:0%
ArrayList is fine for many things but
 

00:29:50.289 --> 00:29:52.409 align:start position:0%
ArrayList is fine for many things but
suppose<00:29:50.590><c> I</c><00:29:50.710><c> wanted</c><00:29:50.950><c> it</c><00:29:51.070><c> be</c><00:29:51.190><c> mutable</c><00:29:51.610><c> suppose</c><00:29:52.269><c> I</c>

00:29:52.409 --> 00:29:52.419 align:start position:0%
suppose I wanted it be mutable suppose I
 

00:29:52.419 --> 00:29:54.149 align:start position:0%
suppose I wanted it be mutable suppose I
wanted<00:29:52.720><c> it</c><00:29:52.870><c> to</c><00:29:52.960><c> be</c><00:29:53.080><c> sparse</c><00:29:53.409><c> or</c><00:29:53.649><c> suppose</c><00:29:53.860><c> I</c><00:29:53.980><c> want</c>

00:29:54.149 --> 00:29:54.159 align:start position:0%
wanted it to be sparse or suppose I want
 

00:29:54.159 --> 00:29:58.860 align:start position:0%
wanted it to be sparse or suppose I want
it<00:29:54.250><c> to</c><00:29:54.309><c> be</c><00:29:54.490><c> something</c><00:29:54.940><c> else</c><00:29:55.350><c> and</c><00:29:56.350><c> so</c><00:29:57.870><c> it</c>

00:29:58.860 --> 00:29:58.870 align:start position:0%
it to be something else and so it
 

00:29:58.870 --> 00:29:59.970 align:start position:0%
it to be something else and so it
wouldn't<00:29:59.169><c> be</c><00:29:59.230><c> too</c><00:29:59.379><c> difficult</c><00:29:59.409><c> to</c><00:29:59.860><c> do</c>

00:29:59.970 --> 00:29:59.980 align:start position:0%
wouldn't be too difficult to do
 

00:29:59.980 --> 00:30:01.860 align:start position:0%
wouldn't be too difficult to do
something<00:30:00.340><c> simplistic</c><00:30:00.909><c> in</c><00:30:01.090><c> the</c><00:30:01.210><c> language</c><00:30:01.629><c> but</c>

00:30:01.860 --> 00:30:01.870 align:start position:0%
something simplistic in the language but
 

00:30:01.870 --> 00:30:03.869 align:start position:0%
something simplistic in the language but
then<00:30:02.019><c> that</c><00:30:02.200><c> would</c><00:30:02.350><c> bind</c><00:30:02.679><c> too</c><00:30:03.100><c> tightly</c><00:30:03.429><c> to</c>

00:30:03.869 --> 00:30:03.879 align:start position:0%
then that would bind too tightly to
 

00:30:03.879 --> 00:30:05.669 align:start position:0%
then that would bind too tightly to
particular<00:30:04.480><c> implementations</c><00:30:05.289><c> in</c><00:30:05.500><c> the</c>

00:30:05.669 --> 00:30:05.679 align:start position:0%
particular implementations in the
 

00:30:05.679 --> 00:30:08.639 align:start position:0%
particular implementations in the
library<00:30:06.070><c> and</c><00:30:06.629><c> so</c><00:30:07.629><c> if</c><00:30:07.779><c> we</c><00:30:07.899><c> didn't</c><00:30:08.289><c> want</c><00:30:08.470><c> that</c>

00:30:08.639 --> 00:30:08.649 align:start position:0%
library and so if we didn't want that
 

00:30:08.649 --> 00:30:10.740 align:start position:0%
library and so if we didn't want that
tight<00:30:08.889><c> binding</c><00:30:09.340><c> then</c><00:30:09.940><c> we'd</c><00:30:10.179><c> have</c><00:30:10.330><c> to</c><00:30:10.480><c> design</c><00:30:10.720><c> a</c>

00:30:10.740 --> 00:30:10.750 align:start position:0%
tight binding then we'd have to design a
 

00:30:10.750 --> 00:30:13.549 align:start position:0%
tight binding then we'd have to design a
programming<00:30:11.350><c> language</c><00:30:11.379><c> that</c><00:30:11.740><c> that</c><00:30:12.450><c> somehow</c>

00:30:13.549 --> 00:30:13.559 align:start position:0%
programming language that that somehow
 

00:30:13.559 --> 00:30:17.070 align:start position:0%
programming language that that somehow
had<00:30:14.559><c> a</c><00:30:14.950><c> looser</c><00:30:15.370><c> coupling</c><00:30:15.850><c> with</c><00:30:16.360><c> the</c><00:30:16.539><c> library</c>

00:30:17.070 --> 00:30:17.080 align:start position:0%
had a looser coupling with the library
 

00:30:17.080 --> 00:30:20.039 align:start position:0%
had a looser coupling with the library
maybe<00:30:17.559><c> ended</c><00:30:18.070><c> up</c><00:30:18.389><c> calling</c><00:30:19.389><c> collections</c>

00:30:20.039 --> 00:30:20.049 align:start position:0%
maybe ended up calling collections
 

00:30:20.049 --> 00:30:21.960 align:start position:0%
maybe ended up calling collections
builders<00:30:20.529><c> or</c><00:30:20.740><c> something</c><00:30:21.100><c> but</c><00:30:21.580><c> basically</c>

00:30:21.960 --> 00:30:21.970 align:start position:0%
builders or something but basically
 

00:30:21.970 --> 00:30:24.180 align:start position:0%
builders or something but basically
since<00:30:22.539><c> the</c><00:30:22.629><c> language</c><00:30:23.200><c> and</c><00:30:23.350><c> the</c><00:30:23.470><c> library</c><00:30:23.889><c> are</c>

00:30:24.180 --> 00:30:24.190 align:start position:0%
since the language and the library are
 

00:30:24.190 --> 00:30:28.049 align:start position:0%
since the language and the library are
are<00:30:25.440><c> architectural</c><00:30:26.440><c> II</c><00:30:26.679><c> distinct</c><00:30:27.309><c> building</c>

00:30:28.049 --> 00:30:28.059 align:start position:0%
are architectural II distinct building
 

00:30:28.059 --> 00:30:29.310 align:start position:0%
are architectural II distinct building
something<00:30:28.269><c> like</c><00:30:28.419><c> collection</c><00:30:28.960><c> literals</c>

00:30:29.310 --> 00:30:29.320 align:start position:0%
something like collection literals
 

00:30:29.320 --> 00:30:32.700 align:start position:0%
something like collection literals
across<00:30:29.649><c> that</c><00:30:30.059><c> turns</c><00:30:31.059><c> out</c><00:30:31.179><c> to</c><00:30:31.210><c> be</c><00:30:31.470><c> great</c><00:30:32.470><c> amount</c>

00:30:32.700 --> 00:30:32.710 align:start position:0%
across that turns out to be great amount
 

00:30:32.710 --> 00:30:34.860 align:start position:0%
across that turns out to be great amount
of<00:30:32.799><c> effort</c><00:30:32.950><c> if</c><00:30:33.490><c> we</c><00:30:34.179><c> want</c><00:30:34.360><c> to</c><00:30:34.450><c> preserve</c><00:30:34.600><c> the</c>

00:30:34.860 --> 00:30:34.870 align:start position:0%
of effort if we want to preserve the
 

00:30:34.870 --> 00:30:38.399 align:start position:0%
of effort if we want to preserve the
flexibility<00:30:35.440><c> of</c><00:30:36.029><c> keeping</c><00:30:37.029><c> the</c><00:30:37.509><c> collections</c>

00:30:38.399 --> 00:30:38.409 align:start position:0%
flexibility of keeping the collections
 

00:30:38.409 --> 00:30:40.680 align:start position:0%
flexibility of keeping the collections
framework<00:30:38.559><c> at</c><00:30:39.100><c> arm's</c><00:30:39.879><c> length</c><00:30:39.940><c> from</c><00:30:40.419><c> the</c>

00:30:40.680 --> 00:30:40.690 align:start position:0%
framework at arm's length from the
 

00:30:40.690 --> 00:30:43.470 align:start position:0%
framework at arm's length from the
programming<00:30:41.169><c> language</c><00:30:41.470><c> so</c><00:30:42.429><c> anyway</c><00:30:42.850><c> so</c><00:30:43.389><c> the</c>

00:30:43.470 --> 00:30:43.480 align:start position:0%
programming language so anyway so the
 

00:30:43.480 --> 00:30:45.749 align:start position:0%
programming language so anyway so the
upshot<00:30:43.600><c> of</c><00:30:43.779><c> that</c><00:30:43.929><c> is</c><00:30:44.049><c> we</c><00:30:44.830><c> decided</c><00:30:45.100><c> not</c><00:30:45.370><c> to</c><00:30:45.429><c> add</c>

00:30:45.749 --> 00:30:45.759 align:start position:0%
upshot of that is we decided not to add
 

00:30:45.759 --> 00:30:47.820 align:start position:0%
upshot of that is we decided not to add
collection<00:30:46.330><c> literals</c><00:30:46.690><c> to</c><00:30:47.139><c> the</c><00:30:47.259><c> language</c><00:30:47.590><c> and</c>

00:30:47.820 --> 00:30:47.830 align:start position:0%
collection literals to the language and
 

00:30:47.830 --> 00:30:50.580 align:start position:0%
collection literals to the language and
instead<00:30:48.460><c> what</c><00:30:48.759><c> we</c><00:30:48.850><c> said</c><00:30:49.059><c> was</c><00:30:49.299><c> let's</c><00:30:49.990><c> add</c><00:30:50.230><c> some</c>

00:30:50.580 --> 00:30:50.590 align:start position:0%
instead what we said was let's add some
 

00:30:50.590 --> 00:30:53.100 align:start position:0%
instead what we said was let's add some
convenience<00:30:51.159><c> api's</c><00:30:51.549><c> to</c><00:30:52.149><c> the</c><00:30:52.330><c> existing</c>

00:30:53.100 --> 00:30:53.110 align:start position:0%
convenience api's to the existing
 

00:30:53.110 --> 00:30:55.649 align:start position:0%
convenience api's to the existing
collections<00:30:53.529><c> framework</c><00:30:53.679><c> and</c><00:30:54.240><c> that</c><00:30:55.240><c> will</c><00:30:55.450><c> get</c>

00:30:55.649 --> 00:30:55.659 align:start position:0%
collections framework and that will get
 

00:30:55.659 --> 00:31:00.980 align:start position:0%
collections framework and that will get
us<00:30:55.840><c> probably</c><00:30:56.649><c> 80%</c><00:30:57.009><c> of</c><00:30:57.490><c> the</c><00:30:57.610><c> benefit</c><00:30:58.029><c> of</c>

00:31:00.980 --> 00:31:00.990 align:start position:0%
 
 

00:31:00.990 --> 00:31:04.340 align:start position:0%
 
of<00:31:01.220><c> collection</c><00:31:02.220><c> literals</c><00:31:02.870><c> but</c><00:31:03.870><c> it's</c><00:31:03.990><c> much</c>

00:31:04.340 --> 00:31:04.350 align:start position:0%
of collection literals but it's much
 

00:31:04.350 --> 00:31:06.410 align:start position:0%
of collection literals but it's much
much<00:31:04.590><c> simpler</c><00:31:04.950><c> to</c><00:31:05.070><c> do</c><00:31:05.309><c> right</c><00:31:05.820><c> it's</c><00:31:06.090><c> a</c><00:31:06.179><c> library</c>

00:31:06.410 --> 00:31:06.420 align:start position:0%
much simpler to do right it's a library
 

00:31:06.420 --> 00:31:08.990 align:start position:0%
much simpler to do right it's a library
only<00:31:06.780><c> construct</c><00:31:07.290><c> so</c><00:31:07.440><c> it's</c><00:31:07.590><c> just</c><00:31:07.830><c> AP</c><00:31:08.220><c> is</c><00:31:08.340><c> we</c>

00:31:08.990 --> 00:31:09.000 align:start position:0%
only construct so it's just AP is we
 

00:31:09.000 --> 00:31:10.610 align:start position:0%
only construct so it's just AP is we
didn't<00:31:09.270><c> have</c><00:31:09.300><c> to</c><00:31:09.600><c> we</c><00:31:10.140><c> didn't</c><00:31:10.320><c> have</c><00:31:10.440><c> to</c><00:31:10.500><c> make</c>

00:31:10.610 --> 00:31:10.620 align:start position:0%
didn't have to we didn't have to make
 

00:31:10.620 --> 00:31:13.400 align:start position:0%
didn't have to we didn't have to make
any<00:31:10.830><c> changes</c><00:31:11.250><c> to</c><00:31:11.309><c> the</c><00:31:11.730><c> the</c><00:31:12.690><c> JVM</c><00:31:13.080><c> or</c><00:31:13.110><c> the</c>

00:31:13.400 --> 00:31:13.410 align:start position:0%
any changes to the the JVM or the
 

00:31:13.410 --> 00:31:14.840 align:start position:0%
any changes to the the JVM or the
programming<00:31:13.860><c> language</c><00:31:14.190><c> or</c><00:31:14.280><c> the</c><00:31:14.429><c> compiler</c><00:31:14.820><c> or</c>

00:31:14.840 --> 00:31:14.850 align:start position:0%
programming language or the compiler or
 

00:31:14.850 --> 00:31:16.130 align:start position:0%
programming language or the compiler or
anything<00:31:15.059><c> they're</c><00:31:15.330><c> just</c><00:31:15.540><c> they're</c><00:31:15.809><c> just</c><00:31:15.990><c> new</c>

00:31:16.130 --> 00:31:16.140 align:start position:0%
anything they're just they're just new
 

00:31:16.140 --> 00:31:19.250 align:start position:0%
anything they're just they're just new
library<00:31:16.530><c> api's</c><00:31:16.890><c> and</c><00:31:17.720><c> they're</c><00:31:18.720><c> pretty</c><00:31:18.990><c> useful</c>

00:31:19.250 --> 00:31:19.260 align:start position:0%
library api's and they're pretty useful
 

00:31:19.260 --> 00:31:21.260 align:start position:0%
library api's and they're pretty useful
there<00:31:19.770><c> are</c><00:31:20.010><c> a</c><00:31:20.040><c> few</c><00:31:20.370><c> cases</c><00:31:20.520><c> where</c><00:31:20.970><c> it</c><00:31:21.150><c> would</c><00:31:21.179><c> be</c>

00:31:21.260 --> 00:31:21.270 align:start position:0%
there are a few cases where it would be
 

00:31:21.270 --> 00:31:23.240 align:start position:0%
there are a few cases where it would be
nice<00:31:21.570><c> to</c><00:31:21.750><c> have</c><00:31:21.840><c> language</c><00:31:22.080><c> support</c><00:31:22.590><c> for</c><00:31:22.800><c> it</c><00:31:22.920><c> but</c>

00:31:23.240 --> 00:31:23.250 align:start position:0%
nice to have language support for it but
 

00:31:23.250 --> 00:31:27.590 align:start position:0%
nice to have language support for it but
I'll<00:31:24.179><c> talk</c><00:31:24.540><c> about</c><00:31:24.600><c> those</c><00:31:24.929><c> in</c><00:31:24.990><c> a</c><00:31:25.170><c> minute</c><00:31:26.600><c> but</c>

00:31:27.590 --> 00:31:27.600 align:start position:0%
I'll talk about those in a minute but
 

00:31:27.600 --> 00:31:29.240 align:start position:0%
I'll talk about those in a minute but
otherwise<00:31:27.840><c> I</c><00:31:27.990><c> think</c><00:31:28.559><c> it</c><00:31:28.770><c> came</c><00:31:28.890><c> out</c><00:31:29.040><c> pretty</c>

00:31:29.240 --> 00:31:29.250 align:start position:0%
otherwise I think it came out pretty
 

00:31:29.250 --> 00:31:31.190 align:start position:0%
otherwise I think it came out pretty
well<00:31:29.400><c> and</c><00:31:29.850><c> they're</c><00:31:29.970><c> quite</c><00:31:30.179><c> useful</c><00:31:30.360><c> and</c><00:31:30.840><c> I</c>

00:31:31.190 --> 00:31:31.200 align:start position:0%
well and they're quite useful and I
 

00:31:31.200 --> 00:31:32.419 align:start position:0%
well and they're quite useful and I
think<00:31:31.230><c> you'll</c><00:31:31.590><c> you'll</c><00:31:31.950><c> like</c><00:31:32.130><c> them</c>

00:31:32.419 --> 00:31:32.429 align:start position:0%
think you'll you'll like them
 

00:31:32.429 --> 00:31:36.460 align:start position:0%
think you'll you'll like them
alright<00:31:33.120><c> so</c><00:31:33.330><c> the</c><00:31:33.540><c> design</c><00:31:33.809><c> goals</c><00:31:34.050><c> for</c><00:31:34.410><c> the</c>

00:31:36.460 --> 00:31:36.470 align:start position:0%
alright so the design goals for the
 

00:31:36.470 --> 00:31:39.049 align:start position:0%
alright so the design goals for the
basically<00:31:37.470><c> so</c><00:31:37.710><c> their</c><00:31:37.860><c> convenience</c><00:31:38.280><c> api's</c><00:31:38.670><c> and</c>

00:31:39.049 --> 00:31:39.059 align:start position:0%
basically so their convenience api's and
 

00:31:39.059 --> 00:31:40.700 align:start position:0%
basically so their convenience api's and
basically<00:31:39.630><c> they</c><00:31:39.900><c> are</c><00:31:39.960><c> all</c><00:31:40.110><c> static</c><00:31:40.530><c> factory</c>

00:31:40.700 --> 00:31:40.710 align:start position:0%
basically they are all static factory
 

00:31:40.710 --> 00:31:44.630 align:start position:0%
basically they are all static factory
methods<00:31:41.340><c> so</c><00:31:41.960><c> we</c><00:31:42.960><c> are</c><00:31:43.110><c> adding</c><00:31:43.350><c> methods</c><00:31:44.130><c> to</c>

00:31:44.630 --> 00:31:44.640 align:start position:0%
methods so we are adding methods to
 

00:31:44.640 --> 00:31:46.850 align:start position:0%
methods so we are adding methods to
static<00:31:45.510><c> methods</c><00:31:45.840><c> to</c><00:31:45.990><c> the</c><00:31:46.020><c> interfaces</c><00:31:46.620><c> to</c>

00:31:46.850 --> 00:31:46.860 align:start position:0%
static methods to the interfaces to
 

00:31:46.860 --> 00:31:49.990 align:start position:0%
static methods to the interfaces to
produce<00:31:48.080><c> collections</c><00:31:49.080><c> collections</c>

00:31:49.990 --> 00:31:50.000 align:start position:0%
produce collections collections
 

00:31:50.000 --> 00:31:53.360 align:start position:0%
produce collections collections
instances<00:31:51.000><c> so</c><00:31:51.840><c> the</c><00:31:51.929><c> main</c><00:31:52.080><c> goals</c><00:31:52.320><c> of</c><00:31:52.650><c> these</c><00:31:52.980><c> new</c>

00:31:53.360 --> 00:31:53.370 align:start position:0%
instances so the main goals of these new
 

00:31:53.370 --> 00:31:56.750 align:start position:0%
instances so the main goals of these new
api's<00:31:53.760><c> are</c><00:31:54.210><c> convenience</c><00:31:54.870><c> and</c><00:31:55.020><c> brevity</c><00:31:55.580><c> to</c><00:31:56.580><c> be</c>

00:31:56.750 --> 00:31:56.760 align:start position:0%
api's are convenience and brevity to be
 

00:31:56.760 --> 00:31:58.790 align:start position:0%
api's are convenience and brevity to be
as<00:31:57.000><c> close</c><00:31:57.540><c> as</c><00:31:57.570><c> possible</c><00:31:57.780><c> to</c><00:31:58.260><c> collection</c>

00:31:58.790 --> 00:31:58.800 align:start position:0%
as close as possible to collection
 

00:31:58.800 --> 00:32:01.880 align:start position:0%
as close as possible to collection
literals<00:31:59.190><c> as</c><00:31:59.400><c> possible</c><00:31:59.910><c> but</c><00:32:00.840><c> we</c><00:32:01.410><c> wanted</c><00:32:01.770><c> them</c>

00:32:01.880 --> 00:32:01.890 align:start position:0%
literals as possible but we wanted them
 

00:32:01.890 --> 00:32:04.190 align:start position:0%
literals as possible but we wanted them
to<00:32:01.950><c> be</c><00:32:02.100><c> space</c><00:32:02.460><c> efficient</c><00:32:02.940><c> you</c><00:32:03.660><c> can</c><00:32:03.809><c> gain</c><00:32:03.990><c> some</c>

00:32:04.190 --> 00:32:04.200 align:start position:0%
to be space efficient you can gain some
 

00:32:04.200 --> 00:32:06.260 align:start position:0%
to be space efficient you can gain some
space<00:32:04.410><c> efficiency</c><00:32:04.890><c> if</c><00:32:05.820><c> you</c><00:32:05.970><c> have</c><00:32:06.120><c> an</c>

00:32:06.260 --> 00:32:06.270 align:start position:0%
space efficiency if you have an
 

00:32:06.270 --> 00:32:09.380 align:start position:0%
space efficiency if you have an
immutable<00:32:06.510><c> collection</c><00:32:07.670><c> since</c><00:32:08.670><c> it</c><00:32:09.120><c> doesn't</c>

00:32:09.380 --> 00:32:09.390 align:start position:0%
immutable collection since it doesn't
 

00:32:09.390 --> 00:32:10.880 align:start position:0%
immutable collection since it doesn't
need<00:32:09.480><c> to</c><00:32:09.570><c> be</c><00:32:09.660><c> modified</c><00:32:09.960><c> you</c><00:32:10.290><c> can</c><00:32:10.440><c> pack</c><00:32:10.650><c> things</c>

00:32:10.880 --> 00:32:10.890 align:start position:0%
need to be modified you can pack things
 

00:32:10.890 --> 00:32:13.760 align:start position:0%
need to be modified you can pack things
in<00:32:11.070><c> in</c><00:32:11.220><c> a</c><00:32:11.730><c> different</c><00:32:11.850><c> way</c><00:32:12.150><c> and</c><00:32:12.530><c> save</c><00:32:13.530><c> a</c><00:32:13.559><c> lot</c><00:32:13.740><c> of</c>

00:32:13.760 --> 00:32:13.770 align:start position:0%
in in a different way and save a lot of
 

00:32:13.770 --> 00:32:18.230 align:start position:0%
in in a different way and save a lot of
space<00:32:13.890><c> and</c><00:32:15.230><c> also</c><00:32:16.230><c> the</c><00:32:16.830><c> the</c><00:32:17.240><c> collections</c>

00:32:18.230 --> 00:32:18.240 align:start position:0%
space and also the the collections
 

00:32:18.240 --> 00:32:20.270 align:start position:0%
space and also the the collections
instances<00:32:18.780><c> returned</c><00:32:19.170><c> are</c><00:32:19.470><c> actually</c>

00:32:20.270 --> 00:32:20.280 align:start position:0%
instances returned are actually
 

00:32:20.280 --> 00:32:22.340 align:start position:0%
instances returned are actually
immutable<00:32:20.940><c> which</c><00:32:21.420><c> is</c><00:32:21.570><c> kind</c><00:32:21.780><c> of</c><00:32:21.840><c> a</c><00:32:21.929><c> new</c><00:32:22.080><c> thing</c>

00:32:22.340 --> 00:32:22.350 align:start position:0%
immutable which is kind of a new thing
 

00:32:22.350 --> 00:32:28.940 align:start position:0%
immutable which is kind of a new thing
in<00:32:22.620><c> in</c><00:32:23.460><c> the</c><00:32:23.850><c> JDK</c><00:32:25.940><c> all</c><00:32:26.940><c> right</c><00:32:27.210><c> so</c><00:32:28.050><c> anyway</c><00:32:28.290><c> so</c><00:32:28.410><c> JDK</c>

00:32:28.940 --> 00:32:28.950 align:start position:0%
in in the JDK all right so anyway so JDK
 

00:32:28.950 --> 00:32:30.230 align:start position:0%
in in the JDK all right so anyway so JDK
9<00:32:29.130><c> is</c><00:32:29.400><c> work</c><00:32:29.640><c> in</c><00:32:29.790><c> progress</c>

00:32:30.230 --> 00:32:30.240 align:start position:0%
9 is work in progress
 

00:32:30.240 --> 00:32:32.030 align:start position:0%
9 is work in progress
this<00:32:30.540><c> work</c><00:32:30.750><c> was</c><00:32:30.900><c> integrated</c><00:32:31.470><c> quite</c><00:32:31.650><c> some</c><00:32:31.860><c> time</c>

00:32:32.030 --> 00:32:32.040 align:start position:0%
this work was integrated quite some time
 

00:32:32.040 --> 00:32:34.490 align:start position:0%
this work was integrated quite some time
ago<00:32:32.190><c> so</c><00:32:32.520><c> any</c><00:32:32.730><c> any</c><00:32:33.240><c> recent</c><00:32:33.630><c> build</c><00:32:33.809><c> of</c><00:32:33.990><c> JDK</c><00:32:34.230><c> 9</c>

00:32:34.490 --> 00:32:34.500 align:start position:0%
ago so any any recent build of JDK 9
 

00:32:34.500 --> 00:32:37.310 align:start position:0%
ago so any any recent build of JDK 9
will<00:32:34.710><c> have</c><00:32:34.860><c> these</c><00:32:35.070><c> in</c><00:32:35.190><c> it</c><00:32:35.309><c> and</c><00:32:35.990><c> so</c><00:32:36.990><c> I</c><00:32:37.020><c> encourage</c>

00:32:37.310 --> 00:32:37.320 align:start position:0%
will have these in it and so I encourage
 

00:32:37.320 --> 00:32:40.120 align:start position:0%
will have these in it and so I encourage
you<00:32:37.620><c> to</c><00:32:37.650><c> download</c><00:32:38.100><c> JDK</c><00:32:38.820><c> 9</c><00:32:39.000><c> and</c><00:32:39.270><c> try</c><00:32:39.480><c> them</c><00:32:39.630><c> out</c>

00:32:40.120 --> 00:32:40.130 align:start position:0%
you to download JDK 9 and try them out
 

00:32:40.130 --> 00:32:42.410 align:start position:0%
you to download JDK 9 and try them out
but<00:32:41.130><c> the</c><00:32:41.220><c> interesting</c><00:32:41.610><c> thing</c><00:32:41.670><c> about</c><00:32:41.820><c> this</c><00:32:42.179><c> is</c>

00:32:42.410 --> 00:32:42.420 align:start position:0%
but the interesting thing about this is
 

00:32:42.420 --> 00:32:44.870 align:start position:0%
but the interesting thing about this is
this<00:32:42.660><c> on</c><00:32:42.900><c> it</c><00:32:43.080><c> on</c><00:32:43.230><c> its</c><00:32:43.440><c> surface</c><00:32:43.790><c> adding</c><00:32:44.790><c> these</c>

00:32:44.870 --> 00:32:44.880 align:start position:0%
this on it on its surface adding these
 

00:32:44.880 --> 00:32:47.210 align:start position:0%
this on it on its surface adding these
API<00:32:45.179><c> is</c><00:32:45.300><c> like</c><00:32:45.780><c> well</c><00:32:45.990><c> gee</c><00:32:46.350><c> you</c><00:32:46.530><c> know</c><00:32:46.590><c> with</c><00:32:47.130><c> an</c>

00:32:47.210 --> 00:32:47.220 align:start position:0%
API is like well gee you know with an
 

00:32:47.220 --> 00:32:48.500 align:start position:0%
API is like well gee you know with an
hour's<00:32:47.490><c> thought</c><00:32:47.670><c> you</c><00:32:47.880><c> could</c><00:32:48.059><c> write</c><00:32:48.330><c> out</c><00:32:48.480><c> a</c>

00:32:48.500 --> 00:32:48.510 align:start position:0%
hour's thought you could write out a
 

00:32:48.510 --> 00:32:50.120 align:start position:0%
hour's thought you could write out a
bunch<00:32:48.750><c> of</c><00:32:48.900><c> write</c><00:32:49.290><c> out</c><00:32:49.410><c> the</c><00:32:49.530><c> api's</c><00:32:49.860><c> and</c>

00:32:50.120 --> 00:32:50.130 align:start position:0%
bunch of write out the api's and
 

00:32:50.130 --> 00:32:52.850 align:start position:0%
bunch of write out the api's and
implementations<00:32:50.730><c> and</c><00:32:50.880><c> I</c><00:32:50.970><c> think</c><00:32:51.179><c> I</c><00:32:51.380><c> did</c><00:32:52.380><c> so</c><00:32:52.559><c> in</c>

00:32:52.850 --> 00:32:52.860 align:start position:0%
implementations and I think I did so in
 

00:32:52.860 --> 00:32:55.610 align:start position:0%
implementations and I think I did so in
fact<00:32:53.070><c> I</c><00:32:53.190><c> did</c><00:32:53.370><c> so</c><00:32:53.490><c> several</c><00:32:53.730><c> times</c><00:32:54.290><c> but</c><00:32:55.290><c> what</c><00:32:55.470><c> was</c>

00:32:55.610 --> 00:32:55.620 align:start position:0%
fact I did so several times but what was
 

00:32:55.620 --> 00:32:57.080 align:start position:0%
fact I did so several times but what was
what<00:32:55.950><c> was</c><00:32:56.040><c> interesting</c><00:32:56.220><c> was</c><00:32:56.640><c> that</c><00:32:56.670><c> there</c><00:32:57.059><c> a</c>

00:32:57.080 --> 00:32:57.090 align:start position:0%
what was interesting was that there a
 

00:32:57.090 --> 00:32:58.820 align:start position:0%
what was interesting was that there a
surprising<00:32:57.660><c> number</c><00:32:57.780><c> of</c><00:32:57.960><c> issues</c><00:32:58.320><c> lurking</c>

00:32:58.820 --> 00:32:58.830 align:start position:0%
surprising number of issues lurking
 

00:32:58.830 --> 00:33:00.710 align:start position:0%
surprising number of issues lurking
under<00:32:59.040><c> the</c><00:32:59.070><c> surface</c><00:32:59.309><c> and</c><00:32:59.670><c> design</c><00:33:00.270><c> decisions</c>

00:33:00.710 --> 00:33:00.720 align:start position:0%
under the surface and design decisions
 

00:33:00.720 --> 00:33:02.600 align:start position:0%
under the surface and design decisions
that<00:33:00.990><c> we</c><00:33:01.710><c> had</c><00:33:01.830><c> to</c><00:33:01.920><c> go</c><00:33:02.040><c> through</c><00:33:02.220><c> so</c><00:33:02.460><c> that's</c>

00:33:02.600 --> 00:33:02.610 align:start position:0%
that we had to go through so that's
 

00:33:02.610 --> 00:33:04.340 align:start position:0%
that we had to go through so that's
that's<00:33:03.120><c> what</c><00:33:03.360><c> the</c><00:33:03.480><c> rest</c><00:33:03.690><c> of</c><00:33:03.929><c> this</c><00:33:04.050><c> talk</c><00:33:04.290><c> is</c>

00:33:04.340 --> 00:33:04.350 align:start position:0%
that's what the rest of this talk is
 

00:33:04.350 --> 00:33:08.030 align:start position:0%
that's what the rest of this talk is
about<00:33:04.760><c> so</c><00:33:05.760><c> quickly</c><00:33:06.300><c> here</c><00:33:06.720><c> is</c><00:33:06.900><c> the</c><00:33:07.230><c> overview</c><00:33:07.620><c> of</c>

00:33:08.030 --> 00:33:08.040 align:start position:0%
about so quickly here is the overview of
 

00:33:08.040 --> 00:33:12.710 align:start position:0%
about so quickly here is the overview of
the<00:33:08.250><c> new</c><00:33:08.570><c> API</c><00:33:09.570><c> is</c><00:33:09.690><c> in</c><00:33:09.990><c> JDK</c><00:33:10.919><c> 9</c><00:33:11.130><c> so</c><00:33:11.730><c> there</c><00:33:11.970><c> is</c><00:33:12.300><c> a</c>

00:33:12.710 --> 00:33:12.720 align:start position:0%
the new API is in JDK 9 so there is a
 

00:33:12.720 --> 00:33:14.760 align:start position:0%
the new API is in JDK 9 so there is a
list<00:33:13.620><c> of</c>

00:33:14.760 --> 00:33:14.770 align:start position:0%
list of
 

00:33:14.770 --> 00:33:18.180 align:start position:0%
list of
taking<00:33:15.100><c> zero</c><00:33:15.580><c> one</c><00:33:16.030><c> two</c><00:33:16.630><c> actually</c><00:33:17.560><c> up</c><00:33:17.710><c> to</c><00:33:17.860><c> ten</c>

00:33:18.180 --> 00:33:18.190 align:start position:0%
taking zero one two actually up to ten
 

00:33:18.190 --> 00:33:20.340 align:start position:0%
taking zero one two actually up to ten
arguments<00:33:18.730><c> and</c><00:33:18.850><c> then</c><00:33:19.300><c> list</c><00:33:19.570><c> out</c><00:33:19.750><c> of</c><00:33:19.780><c> taking</c>

00:33:20.340 --> 00:33:20.350 align:start position:0%
arguments and then list out of taking
 

00:33:20.350 --> 00:33:22.620 align:start position:0%
arguments and then list out of taking
varargs<00:33:20.890><c> so</c><00:33:21.460><c> that</c><00:33:21.730><c> will</c><00:33:21.880><c> create</c><00:33:22.060><c> a</c><00:33:22.150><c> list</c><00:33:22.360><c> with</c>

00:33:22.620 --> 00:33:22.630 align:start position:0%
varargs so that will create a list with
 

00:33:22.630 --> 00:33:24.540 align:start position:0%
varargs so that will create a list with
however<00:33:22.990><c> many</c><00:33:23.320><c> elements</c><00:33:23.950><c> you</c><00:33:24.070><c> pass</c>

00:33:24.540 --> 00:33:24.550 align:start position:0%
however many elements you pass
 

00:33:24.550 --> 00:33:27.830 align:start position:0%
however many elements you pass
there's<00:33:24.940><c> set</c><00:33:25.540><c> of</c><00:33:26.080><c> which</c><00:33:26.350><c> is</c><00:33:26.530><c> the</c><00:33:26.920><c> same</c><00:33:27.100><c> thing</c>

00:33:27.830 --> 00:33:27.840 align:start position:0%
there's set of which is the same thing
 

00:33:27.840 --> 00:33:31.200 align:start position:0%
there's set of which is the same thing
there's<00:33:28.840><c> also</c><00:33:29.080><c> map</c><00:33:29.320><c> thought</c><00:33:29.590><c> of</c><00:33:29.800><c> and</c><00:33:30.070><c> math</c><00:33:30.970><c> is</c>

00:33:31.200 --> 00:33:31.210 align:start position:0%
there's also map thought of and math is
 

00:33:31.210 --> 00:33:35.220 align:start position:0%
there's also map thought of and math is
different<00:33:31.360><c> because</c><00:33:31.750><c> it</c><00:33:32.320><c> doesn't</c><00:33:34.230><c> doesn't</c>

00:33:35.220 --> 00:33:35.230 align:start position:0%
different because it doesn't doesn't
 

00:33:35.230 --> 00:33:37.560 align:start position:0%
different because it doesn't doesn't
take<00:33:35.500><c> elements</c><00:33:36.040><c> of</c><00:33:36.310><c> a</c><00:33:36.430><c> single</c><00:33:36.700><c> type</c><00:33:36.910><c> instead</c>

00:33:37.560 --> 00:33:37.570 align:start position:0%
take elements of a single type instead
 

00:33:37.570 --> 00:33:40.650 align:start position:0%
take elements of a single type instead
it<00:33:37.690><c> has</c><00:33:37.780><c> to</c><00:33:37.930><c> take</c><00:33:38.050><c> key</c><00:33:38.290><c> value</c><00:33:38.650><c> pairs</c><00:33:38.890><c> so</c><00:33:39.790><c> for</c><00:33:40.630><c> a</c>

00:33:40.650 --> 00:33:40.660 align:start position:0%
it has to take key value pairs so for a
 

00:33:40.660 --> 00:33:42.510 align:start position:0%
it has to take key value pairs so for a
fixed<00:33:41.020><c> number</c><00:33:41.170><c> for</c><00:33:41.740><c> a</c><00:33:41.770><c> small</c><00:33:41.980><c> number</c><00:33:42.160><c> of</c><00:33:42.280><c> key</c>

00:33:42.510 --> 00:33:42.520 align:start position:0%
fixed number for a small number of key
 

00:33:42.520 --> 00:33:45.180 align:start position:0%
fixed number for a small number of key
value<00:33:42.790><c> pairs</c><00:33:43.030><c> we</c><00:33:43.300><c> pass</c><00:33:43.770><c> alternating</c><00:33:44.770><c> keys</c><00:33:44.980><c> and</c>

00:33:45.180 --> 00:33:45.190 align:start position:0%
value pairs we pass alternating keys and
 

00:33:45.190 --> 00:33:48.660 align:start position:0%
value pairs we pass alternating keys and
values<00:33:45.220><c> but</c><00:33:46.120><c> if</c><00:33:46.240><c> you</c><00:33:46.360><c> want</c><00:33:46.570><c> more</c><00:33:47.460><c> more</c><00:33:48.460><c> than</c>

00:33:48.660 --> 00:33:48.670 align:start position:0%
values but if you want more more than
 

00:33:48.670 --> 00:33:50.850 align:start position:0%
values but if you want more more than
and<00:33:48.940><c> there's</c><00:33:49.270><c> no</c><00:33:49.420><c> way</c><00:33:49.600><c> to</c><00:33:49.660><c> do</c><00:33:49.810><c> a</c><00:33:49.840><c> varargs</c><00:33:50.320><c> for</c>

00:33:50.850 --> 00:33:50.860 align:start position:0%
and there's no way to do a varargs for
 

00:33:50.860 --> 00:33:52.410 align:start position:0%
and there's no way to do a varargs for
that<00:33:51.010><c> so</c><00:33:51.430><c> if</c><00:33:51.490><c> you</c><00:33:51.580><c> want</c><00:33:51.760><c> more</c><00:33:51.910><c> that</c><00:33:52.180><c> we've</c>

00:33:52.410 --> 00:33:52.420 align:start position:0%
that so if you want more that we've
 

00:33:52.420 --> 00:33:55.160 align:start position:0%
that so if you want more that we've
added<00:33:52.600><c> a</c><00:33:52.810><c> new</c><00:33:52.930><c> method</c><00:33:53.320><c> map</c><00:33:53.710><c> dot</c><00:33:54.040><c> of</c><00:33:54.280><c> entries</c>

00:33:55.160 --> 00:33:55.170 align:start position:0%
added a new method map dot of entries
 

00:33:55.170 --> 00:33:58.860 align:start position:0%
added a new method map dot of entries
alright<00:33:56.170><c> so</c><00:33:56.440><c> for</c><00:33:56.920><c> efficiency</c><00:33:57.700><c> reasons</c><00:33:57.870><c> so</c>

00:33:58.860 --> 00:33:58.870 align:start position:0%
alright so for efficiency reasons so
 

00:33:58.870 --> 00:34:01.260 align:start position:0%
alright so for efficiency reasons so
this<00:33:59.050><c> is</c><00:33:59.230><c> a</c><00:33:59.260><c> snapshot</c><00:34:00.010><c> of</c><00:34:00.280><c> the</c><00:34:00.520><c> Javadoc</c><00:34:00.850><c> for</c>

00:34:01.260 --> 00:34:01.270 align:start position:0%
this is a snapshot of the Javadoc for
 

00:34:01.270 --> 00:34:03.540 align:start position:0%
this is a snapshot of the Javadoc for
the<00:34:01.450><c> the</c><00:34:01.720><c> map</c><00:34:01.870><c> interface</c><00:34:02.200><c> so</c><00:34:02.800><c> for</c><00:34:03.010><c> efficiency</c>

00:34:03.540 --> 00:34:03.550 align:start position:0%
the the map interface so for efficiency
 

00:34:03.550 --> 00:34:06.800 align:start position:0%
the the map interface so for efficiency
reasons<00:34:03.730><c> we've</c><00:34:04.150><c> provided</c><00:34:04.980><c> zero</c><00:34:05.980><c> through</c><00:34:06.370><c> ten</c>

00:34:06.800 --> 00:34:06.810 align:start position:0%
reasons we've provided zero through ten
 

00:34:06.810 --> 00:34:09.419 align:start position:0%
reasons we've provided zero through ten
over<00:34:07.810><c> six</c><00:34:08.290><c> tardes</c>

00:34:09.419 --> 00:34:09.429 align:start position:0%
over six tardes
 

00:34:09.429 --> 00:34:13.200 align:start position:0%
over six tardes
because<00:34:10.060><c> varargs</c><00:34:11.280><c> unavoidably</c><00:34:12.280><c> has</c><00:34:12.700><c> an</c>

00:34:13.200 --> 00:34:13.210 align:start position:0%
because varargs unavoidably has an
 

00:34:13.210 --> 00:34:15.630 align:start position:0%
because varargs unavoidably has an
overhead<00:34:13.720><c> of</c><00:34:13.990><c> constructing</c><00:34:14.950><c> and</c><00:34:15.130><c> copying</c>

00:34:15.630 --> 00:34:15.640 align:start position:0%
overhead of constructing and copying
 

00:34:15.640 --> 00:34:17.700 align:start position:0%
overhead of constructing and copying
elements<00:34:16.149><c> into</c><00:34:16.360><c> an</c><00:34:16.450><c> array</c><00:34:16.690><c> and</c><00:34:16.960><c> so</c><00:34:17.409><c> in</c><00:34:17.590><c> order</c>

00:34:17.700 --> 00:34:17.710 align:start position:0%
elements into an array and so in order
 

00:34:17.710 --> 00:34:19.800 align:start position:0%
elements into an array and so in order
to<00:34:17.860><c> avoid</c><00:34:18.100><c> avoid</c><00:34:18.640><c> that</c><00:34:18.820><c> we</c><00:34:19.000><c> provide</c><00:34:19.300><c> six</c><00:34:19.659><c> dog</c>

00:34:19.800 --> 00:34:19.810 align:start position:0%
to avoid avoid that we provide six dog
 

00:34:19.810 --> 00:34:24.840 align:start position:0%
to avoid avoid that we provide six dog
overloads<00:34:20.320><c> and</c><00:34:21.419><c> so</c><00:34:22.419><c> I</c><00:34:23.159><c> don't</c><00:34:24.159><c> know</c><00:34:24.340><c> how</c><00:34:24.669><c> many</c>

00:34:24.840 --> 00:34:24.850 align:start position:0%
overloads and so I don't know how many
 

00:34:24.850 --> 00:34:26.159 align:start position:0%
overloads and so I don't know how many
of<00:34:24.970><c> you</c><00:34:25.090><c> were</c><00:34:25.240><c> here</c><00:34:25.270><c> at</c><00:34:25.570><c> the</c><00:34:25.690><c> opening</c><00:34:25.990><c> keynote</c>

00:34:26.159 --> 00:34:26.169 align:start position:0%
of you were here at the opening keynote
 

00:34:26.169 --> 00:34:28.530 align:start position:0%
of you were here at the opening keynote
when<00:34:26.530><c> chet</c><00:34:27.100><c> haase</c><00:34:27.280><c> gave</c><00:34:27.730><c> his</c><00:34:27.940><c> you</c><00:34:28.450><c> know</c>

00:34:28.530 --> 00:34:28.540 align:start position:0%
when chet haase gave his you know
 

00:34:28.540 --> 00:34:30.630 align:start position:0%
when chet haase gave his you know
technology<00:34:29.080><c> business</c><00:34:29.409><c> talk</c><00:34:29.620><c> I</c><00:34:29.890><c> thought</c><00:34:30.520><c> he</c>

00:34:30.630 --> 00:34:30.640 align:start position:0%
technology business talk I thought he
 

00:34:30.640 --> 00:34:31.320 align:start position:0%
technology business talk I thought he
was<00:34:30.790><c> pretty</c><00:34:30.909><c> funny</c>

00:34:31.320 --> 00:34:31.330 align:start position:0%
was pretty funny
 

00:34:31.330 --> 00:34:35.210 align:start position:0%
was pretty funny
I<00:34:31.950><c> would</c><00:34:32.950><c> like</c><00:34:33.159><c> to</c><00:34:33.460><c> be</c><00:34:34.120><c> as</c><00:34:34.330><c> funny</c><00:34:34.540><c> as</c><00:34:34.720><c> chat</c><00:34:34.899><c> was</c>

00:34:35.210 --> 00:34:35.220 align:start position:0%
I would like to be as funny as chat was
 

00:34:35.220 --> 00:34:37.620 align:start position:0%
I would like to be as funny as chat was
but<00:34:36.220><c> I'm</c><00:34:36.310><c> still</c><00:34:36.520><c> working</c><00:34:36.669><c> on</c><00:34:36.909><c> it</c><00:34:37.090><c> but</c><00:34:37.510><c> I</c><00:34:37.570><c> think</c>

00:34:37.620 --> 00:34:37.630 align:start position:0%
but I'm still working on it but I think
 

00:34:37.630 --> 00:34:39.899 align:start position:0%
but I'm still working on it but I think
I<00:34:37.870><c> have</c><00:34:38.020><c> potential</c><00:34:38.380><c> because</c><00:34:38.950><c> when</c><00:34:39.399><c> I</c><00:34:39.429><c> posted</c>

00:34:39.899 --> 00:34:39.909 align:start position:0%
I have potential because when I posted
 

00:34:39.909 --> 00:34:41.790 align:start position:0%
I have potential because when I posted
this<00:34:40.060><c> API</c><00:34:40.390><c> to</c><00:34:40.510><c> read</c><00:34:40.750><c> it</c><00:34:40.929><c> somebody</c><00:34:41.350><c> said</c><00:34:41.560><c> is</c>

00:34:41.790 --> 00:34:41.800 align:start position:0%
this API to read it somebody said is
 

00:34:41.800 --> 00:34:48.630 align:start position:0%
this API to read it somebody said is
this<00:34:42.040><c> a</c><00:34:42.100><c> joke</c><00:34:44.669><c> so</c><00:34:45.669><c> anyway</c><00:34:47.159><c> here</c><00:34:48.159><c> are</c><00:34:48.370><c> some</c>

00:34:48.630 --> 00:34:48.640 align:start position:0%
this a joke so anyway here are some
 

00:34:48.640 --> 00:34:51.510 align:start position:0%
this a joke so anyway here are some
examples<00:34:49.090><c> of</c><00:34:49.380><c> the</c><00:34:50.380><c> new</c><00:34:50.470><c> API</c><00:34:50.770><c> is</c><00:34:50.860><c> in</c><00:34:50.980><c> action</c><00:34:51.340><c> in</c>

00:34:51.510 --> 00:34:51.520 align:start position:0%
examples of the new API is in action in
 

00:34:51.520 --> 00:34:54.000 align:start position:0%
examples of the new API is in action in
Java<00:34:52.419><c> 8</c><00:34:52.690><c> actually</c><00:34:53.290><c> this</c><00:34:53.380><c> is</c><00:34:53.530><c> kind</c><00:34:53.679><c> of</c><00:34:53.770><c> three</c>

00:34:54.000 --> 00:34:54.010 align:start position:0%
Java 8 actually this is kind of three
 

00:34:54.010 --> 00:34:55.350 align:start position:0%
Java 8 actually this is kind of three
examples<00:34:54.490><c> glom</c><00:34:54.760><c> together</c>

00:34:55.350 --> 00:34:55.360 align:start position:0%
examples glom together
 

00:34:55.360 --> 00:34:58.890 align:start position:0%
examples glom together
there's<00:34:55.720><c> list</c><00:34:56.110><c> set</c><00:34:56.350><c> and</c><00:34:56.500><c> map</c><00:34:56.649><c> and</c><00:34:56.919><c> so</c><00:34:57.780><c> if</c><00:34:58.780><c> you</c>

00:34:58.890 --> 00:34:58.900 align:start position:0%
there's list set and map and so if you
 

00:34:58.900 --> 00:35:00.630 align:start position:0%
there's list set and map and so if you
needed<00:34:59.110><c> to</c><00:34:59.260><c> create</c><00:34:59.350><c> a</c><00:34:59.470><c> list</c><00:34:59.650><c> arrays</c><00:35:00.310><c> out</c><00:35:00.490><c> as</c>

00:35:00.630 --> 00:35:00.640 align:start position:0%
needed to create a list arrays out as
 

00:35:00.640 --> 00:35:03.240 align:start position:0%
needed to create a list arrays out as
list<00:35:00.940><c> isn't</c><00:35:01.150><c> too</c><00:35:01.360><c> bad</c><00:35:01.540><c> if</c><00:35:02.530><c> you</c><00:35:02.710><c> need</c><00:35:02.890><c> to</c><00:35:03.070><c> create</c>

00:35:03.240 --> 00:35:03.250 align:start position:0%
list isn't too bad if you need to create
 

00:35:03.250 --> 00:35:05.520 align:start position:0%
list isn't too bad if you need to create
a<00:35:03.340><c> hash</c><00:35:03.610><c> set</c><00:35:03.910><c> containing</c><00:35:04.810><c> specific</c><00:35:05.110><c> things</c>

00:35:05.520 --> 00:35:05.530 align:start position:0%
a hash set containing specific things
 

00:35:05.530 --> 00:35:07.080 align:start position:0%
a hash set containing specific things
well<00:35:05.800><c> the</c><00:35:06.070><c> easiest</c><00:35:06.310><c> thing</c><00:35:06.520><c> was</c><00:35:06.670><c> to</c><00:35:06.850><c> create</c><00:35:07.000><c> a</c>

00:35:07.080 --> 00:35:07.090 align:start position:0%
well the easiest thing was to create a
 

00:35:07.090 --> 00:35:08.910 align:start position:0%
well the easiest thing was to create a
list<00:35:07.300><c> and</c><00:35:07.510><c> then</c><00:35:07.600><c> put</c><00:35:07.840><c> it</c><00:35:07.930><c> into</c><00:35:08.080><c> a</c><00:35:08.200><c> hash</c><00:35:08.410><c> set</c><00:35:08.620><c> and</c>

00:35:08.910 --> 00:35:08.920 align:start position:0%
list and then put it into a hash set and
 

00:35:08.920 --> 00:35:10.950 align:start position:0%
list and then put it into a hash set and
then<00:35:09.160><c> map</c><00:35:09.400><c> I</c><00:35:09.640><c> think</c><00:35:09.670><c> is</c><00:35:09.940><c> the</c><00:35:10.060><c> worst</c><00:35:10.210><c> you</c><00:35:10.840><c> have</c>

00:35:10.950 --> 00:35:10.960 align:start position:0%
then map I think is the worst you have
 

00:35:10.960 --> 00:35:13.590 align:start position:0%
then map I think is the worst you have
to<00:35:11.050><c> create</c><00:35:11.410><c> a</c><00:35:11.740><c> map</c><00:35:12.430><c> and</c><00:35:12.760><c> then</c><00:35:12.850><c> call</c><00:35:13.270><c> put</c>

00:35:13.590 --> 00:35:13.600 align:start position:0%
to create a map and then call put
 

00:35:13.600 --> 00:35:15.990 align:start position:0%
to create a map and then call put
successively<00:35:14.200><c> into</c><00:35:14.470><c> it</c><00:35:14.680><c> and</c><00:35:14.890><c> on</c><00:35:15.580><c> the</c><00:35:15.670><c> bottom</c>

00:35:15.990 --> 00:35:16.000 align:start position:0%
successively into it and on the bottom
 

00:35:16.000 --> 00:35:18.690 align:start position:0%
successively into it and on the bottom
you<00:35:16.030><c> can</c><00:35:16.300><c> see</c><00:35:16.530><c> Java</c><00:35:17.530><c> and</c><00:35:17.680><c> I</c><00:35:17.770><c> mean</c><00:35:18.010><c> say</c><00:35:18.160><c> list</c><00:35:18.400><c> of</c>

00:35:18.690 --> 00:35:18.700 align:start position:0%
you can see Java and I mean say list of
 

00:35:18.700 --> 00:35:21.990 align:start position:0%
you can see Java and I mean say list of
set<00:35:19.030><c> of</c><00:35:19.390><c> and</c><00:35:19.750><c> math</c><00:35:20.110><c> autos</c><00:35:20.470><c> and</c><00:35:20.830><c> it's</c><00:35:21.640><c> all</c><00:35:21.790><c> right</c>

00:35:21.990 --> 00:35:22.000 align:start position:0%
set of and math autos and it's all right
 

00:35:22.000 --> 00:35:27.240 align:start position:0%
set of and math autos and it's all right
there<00:35:22.210><c> and</c><00:35:22.240><c> it's</c><00:35:22.510><c> pretty</c><00:35:22.720><c> nice</c><00:35:24.210><c> so</c><00:35:26.160><c> so</c>

00:35:27.240 --> 00:35:27.250 align:start position:0%
there and it's pretty nice so so
 

00:35:27.250 --> 00:35:29.340 align:start position:0%
there and it's pretty nice so so
now<00:35:27.430><c> so</c><00:35:28.120><c> there's</c><00:35:28.300><c> a</c><00:35:28.330><c> variation</c><00:35:28.900><c> here</c><00:35:28.930><c> which</c><00:35:29.200><c> is</c>

00:35:29.340 --> 00:35:29.350 align:start position:0%
now so there's a variation here which is
 

00:35:29.350 --> 00:35:32.550 align:start position:0%
now so there's a variation here which is
if<00:35:29.470><c> you</c><00:35:29.560><c> wanted</c><00:35:29.800><c> to</c><00:35:30.840><c> to</c><00:35:31.840><c> create</c><00:35:31.960><c> a</c><00:35:32.080><c> map</c><00:35:32.260><c> with</c><00:35:32.470><c> an</c>

00:35:32.550 --> 00:35:32.560 align:start position:0%
if you wanted to to create a map with an
 

00:35:32.560 --> 00:35:35.100 align:start position:0%
if you wanted to to create a map with an
arbitrary<00:35:33.040><c> number</c><00:35:33.370><c> of</c><00:35:33.400><c> pairs</c><00:35:33.760><c> then</c><00:35:34.510><c> you</c><00:35:34.990><c> have</c>

00:35:35.100 --> 00:35:35.110 align:start position:0%
arbitrary number of pairs then you have
 

00:35:35.110 --> 00:35:36.870 align:start position:0%
arbitrary number of pairs then you have
to<00:35:35.260><c> switch</c><00:35:35.470><c> over</c><00:35:35.620><c> to</c><00:35:35.770><c> this</c><00:35:35.950><c> map</c><00:35:36.280><c> dot</c><00:35:36.640><c> of</c>

00:35:36.870 --> 00:35:36.880 align:start position:0%
to switch over to this map dot of
 

00:35:36.880 --> 00:35:40.670 align:start position:0%
to switch over to this map dot of
entries<00:35:37.680><c> method</c><00:35:38.680><c> which</c><00:35:39.250><c> takes</c><00:35:39.550><c> a</c><00:35:39.700><c> varargs</c>

00:35:40.670 --> 00:35:40.680 align:start position:0%
entries method which takes a varargs
 

00:35:40.680 --> 00:35:44.510 align:start position:0%
entries method which takes a varargs
varargs<00:35:41.680><c> parameter</c><00:35:42.250><c> of</c><00:35:42.430><c> map</c><00:35:43.120><c> entries</c><00:35:43.840><c> and</c><00:35:44.110><c> so</c>

00:35:44.510 --> 00:35:44.520 align:start position:0%
varargs parameter of map entries and so
 

00:35:44.520 --> 00:35:48.120 align:start position:0%
varargs parameter of map entries and so
creating<00:35:45.520><c> a</c><00:35:45.580><c> map</c><00:35:45.790><c> entry</c><00:35:46.300><c> is</c><00:35:46.540><c> kind</c><00:35:47.140><c> of</c><00:35:47.470><c> can</c><00:35:48.100><c> be</c>

00:35:48.120 --> 00:35:48.130 align:start position:0%
creating a map entry is kind of can be
 

00:35:48.130 --> 00:35:50.490 align:start position:0%
creating a map entry is kind of can be
kind<00:35:48.430><c> of</c><00:35:48.520><c> complicated</c><00:35:49.140><c> because</c><00:35:50.140><c> there's</c>

00:35:50.490 --> 00:35:50.500 align:start position:0%
kind of complicated because there's
 

00:35:50.500 --> 00:35:52.860 align:start position:0%
kind of complicated because there's
there's<00:35:50.830><c> a</c><00:35:50.890><c> map</c><00:35:51.040><c> the</c><00:35:51.760><c> the</c><00:35:51.790><c> most</c><00:35:52.510><c> common</c>

00:35:52.860 --> 00:35:52.870 align:start position:0%
there's a map the the most common
 

00:35:52.870 --> 00:35:55.830 align:start position:0%
there's a map the the most common
implementation<00:35:53.500><c> of</c><00:35:53.680><c> map</c><00:35:53.920><c> entry</c><00:35:54.340><c> is</c><00:35:54.840><c> abstract</c>

00:35:55.830 --> 00:35:55.840 align:start position:0%
implementation of map entry is abstract
 

00:35:55.840 --> 00:35:57.540 align:start position:0%
implementation of map entry is abstract
map<00:35:56.050><c> sought</c><00:35:56.290><c> simple</c><00:35:56.680><c> immutable</c><00:35:57.040><c> entry</c><00:35:57.310><c> which</c>

00:35:57.540 --> 00:35:57.550 align:start position:0%
map sought simple immutable entry which
 

00:35:57.550 --> 00:36:00.150 align:start position:0%
map sought simple immutable entry which
is<00:35:57.700><c> quite</c><00:35:57.940><c> a</c><00:35:57.970><c> mouthful</c><00:35:58.360><c> so</c><00:35:58.770><c> so</c><00:35:59.770><c> one</c><00:36:00.010><c> of</c><00:36:00.040><c> the</c>

00:36:00.150 --> 00:36:00.160 align:start position:0%
is quite a mouthful so so one of the
 

00:36:00.160 --> 00:36:02.520 align:start position:0%
is quite a mouthful so so one of the
other<00:36:00.190><c> things</c><00:36:00.550><c> that</c><00:36:00.640><c> this</c><00:36:00.880><c> adds</c><00:36:01.120><c> is</c><00:36:01.660><c> a</c><00:36:01.930><c> static</c>

00:36:02.520 --> 00:36:02.530 align:start position:0%
other things that this adds is a static
 

00:36:02.530 --> 00:36:05.400 align:start position:0%
other things that this adds is a static
factory<00:36:02.680><c> method</c><00:36:03.310><c> called</c><00:36:03.970><c> math</c><00:36:04.510><c> dot</c><00:36:04.870><c> entry</c>

00:36:05.400 --> 00:36:05.410 align:start position:0%
factory method called math dot entry
 

00:36:05.410 --> 00:36:08.070 align:start position:0%
factory method called math dot entry
lower<00:36:05.860><c> case</c><00:36:06.130><c> entry</c><00:36:06.540><c> that</c><00:36:07.540><c> just</c><00:36:07.780><c> takes</c><00:36:07.930><c> two</c>

00:36:08.070 --> 00:36:08.080 align:start position:0%
lower case entry that just takes two
 

00:36:08.080 --> 00:36:09.840 align:start position:0%
lower case entry that just takes two
arguments<00:36:08.350><c> a</c><00:36:08.590><c> key</c><00:36:08.740><c> and</c><00:36:08.860><c> a</c><00:36:08.890><c> value</c><00:36:08.920><c> and</c><00:36:09.490><c> returns</c>

00:36:09.840 --> 00:36:09.850 align:start position:0%
arguments a key and a value and returns
 

00:36:09.850 --> 00:36:13.200 align:start position:0%
arguments a key and a value and returns
a<00:36:10.120><c> map</c><00:36:10.570><c> entry</c><00:36:10.960><c> instance</c><00:36:11.410><c> and</c><00:36:12.040><c> so</c><00:36:12.760><c> here's</c><00:36:13.090><c> an</c>

00:36:13.200 --> 00:36:13.210 align:start position:0%
a map entry instance and so here's an
 

00:36:13.210 --> 00:36:15.420 align:start position:0%
a map entry instance and so here's an
example<00:36:13.420><c> of</c><00:36:13.630><c> that</c><00:36:13.780><c> because</c><00:36:14.470><c> this</c><00:36:14.650><c> exceeds</c><00:36:15.160><c> the</c>

00:36:15.420 --> 00:36:15.430 align:start position:0%
example of that because this exceeds the
 

00:36:15.430 --> 00:36:17.610 align:start position:0%
example of that because this exceeds the
number<00:36:15.640><c> the</c><00:36:16.030><c> six</c><00:36:16.270><c> starred</c><00:36:16.480><c> variation</c><00:36:17.230><c> the</c>

00:36:17.610 --> 00:36:17.620 align:start position:0%
number the six starred variation the
 

00:36:17.620 --> 00:36:20.520 align:start position:0%
number the six starred variation the
fixed<00:36:17.830><c> arg</c><00:36:17.980><c> overloads</c><00:36:18.430><c> of</c><00:36:18.760><c> mapped</c><00:36:19.240><c> of</c><00:36:19.660><c> so</c><00:36:20.410><c> we</c>

00:36:20.520 --> 00:36:20.530 align:start position:0%
fixed arg overloads of mapped of so we
 

00:36:20.530 --> 00:36:22.140 align:start position:0%
fixed arg overloads of mapped of so we
have<00:36:20.560><c> to</c><00:36:20.800><c> we</c><00:36:21.160><c> have</c><00:36:21.190><c> to</c><00:36:21.370><c> use</c><00:36:21.490><c> map</c><00:36:21.730><c> dot</c><00:36:21.970><c> of</c>

00:36:22.140 --> 00:36:22.150 align:start position:0%
have to we have to use map dot of
 

00:36:22.150 --> 00:36:25.380 align:start position:0%
have to we have to use map dot of
entries<00:36:22.930><c> and</c><00:36:22.960><c> then</c><00:36:23.380><c> pass</c><00:36:23.650><c> it</c><00:36:24.240><c> you</c><00:36:25.240><c> know</c><00:36:25.330><c> a</c>

00:36:25.380 --> 00:36:25.390 align:start position:0%
entries and then pass it you know a
 

00:36:25.390 --> 00:36:34.320 align:start position:0%
entries and then pass it you know a
succession<00:36:25.870><c> of</c><00:36:26.940><c> entry</c><00:36:27.940><c> objects</c><00:36:32.640><c> all</c><00:36:33.640><c> right</c><00:36:33.790><c> so</c>

00:36:34.320 --> 00:36:34.330 align:start position:0%
succession of entry objects all right so
 

00:36:34.330 --> 00:36:36.540 align:start position:0%
succession of entry objects all right so
they're<00:36:34.480><c> a</c><00:36:34.510><c> bunch</c><00:36:34.720><c> of</c><00:36:35.400><c> design</c><00:36:36.400><c> and</c>

00:36:36.540 --> 00:36:36.550 align:start position:0%
they're a bunch of design and
 

00:36:36.550 --> 00:36:38.700 align:start position:0%
they're a bunch of design and
implementation<00:36:36.940><c> issues</c><00:36:37.360><c> that</c><00:36:38.200><c> I</c><00:36:38.230><c> alluded</c><00:36:38.530><c> to</c>

00:36:38.700 --> 00:36:38.710 align:start position:0%
implementation issues that I alluded to
 

00:36:38.710 --> 00:36:40.440 align:start position:0%
implementation issues that I alluded to
earlier<00:36:38.830><c> and</c><00:36:39.280><c> so</c><00:36:39.370><c> I'm</c><00:36:39.460><c> going</c><00:36:39.580><c> to</c><00:36:39.700><c> step</c><00:36:40.240><c> through</c>

00:36:40.440 --> 00:36:40.450 align:start position:0%
earlier and so I'm going to step through
 

00:36:40.450 --> 00:36:42.420 align:start position:0%
earlier and so I'm going to step through
these<00:36:40.630><c> pretty</c><00:36:40.870><c> quickly</c><00:36:40.990><c> here</c><00:36:41.500><c> and</c><00:36:41.650><c> the</c><00:36:42.280><c> time</c>

00:36:42.420 --> 00:36:42.430 align:start position:0%
these pretty quickly here and the time
 

00:36:42.430 --> 00:36:45.390 align:start position:0%
these pretty quickly here and the time
remaining<00:36:43.050><c> so</c><00:36:44.050><c> handling</c><00:36:44.650><c> handling</c><00:36:45.100><c> an</c>

00:36:45.390 --> 00:36:45.400 align:start position:0%
remaining so handling handling an
 

00:36:45.400 --> 00:36:47.430 align:start position:0%
remaining so handling handling an
arbitrary<00:36:45.820><c> number</c><00:36:45.970><c> of</c><00:36:46.150><c> mappings</c><00:36:46.570><c> is</c><00:36:46.990><c> what</c><00:36:47.410><c> I</c>

00:36:47.430 --> 00:36:47.440 align:start position:0%
arbitrary number of mappings is what I
 

00:36:47.440 --> 00:36:50.190 align:start position:0%
arbitrary number of mappings is what I
just<00:36:47.680><c> what</c><00:36:48.040><c> I</c><00:36:48.070><c> just</c><00:36:48.310><c> talked</c><00:36:48.490><c> about</c><00:36:48.900><c> we</c><00:36:49.900><c> ended</c>

00:36:50.190 --> 00:36:50.200 align:start position:0%
just what I just talked about we ended
 

00:36:50.200 --> 00:36:53.070 align:start position:0%
just what I just talked about we ended
up<00:36:50.260><c> at</c><00:36:50.440><c> that</c><00:36:50.560><c> solution</c><00:36:51.090><c> after</c><00:36:52.090><c> considering</c>

00:36:53.070 --> 00:36:53.080 align:start position:0%
up at that solution after considering
 

00:36:53.080 --> 00:36:55.110 align:start position:0%
up at that solution after considering
about<00:36:53.260><c> fifteen</c><00:36:53.830><c> other</c><00:36:54.130><c> alternatives</c><00:36:54.880><c> I</c>

00:36:55.110 --> 00:36:55.120 align:start position:0%
about fifteen other alternatives I
 

00:36:55.120 --> 00:36:57.120 align:start position:0%
about fifteen other alternatives I
should<00:36:55.780><c> I</c><00:36:56.020><c> should</c><00:36:56.050><c> write</c><00:36:56.320><c> those</c><00:36:56.500><c> up</c><00:36:56.710><c> sometime</c>

00:36:57.120 --> 00:36:57.130 align:start position:0%
should I should write those up sometime
 

00:36:57.130 --> 00:36:58.710 align:start position:0%
should I should write those up sometime
those<00:36:57.370><c> are</c><00:36:57.520><c> those</c><00:36:57.820><c> are</c><00:36:57.880><c> interesting</c><00:36:58.480><c> they</c><00:36:58.600><c> all</c>

00:36:58.710 --> 00:36:58.720 align:start position:0%
those are those are interesting they all
 

00:36:58.720 --> 00:37:02.250 align:start position:0%
those are those are interesting they all
have<00:36:58.900><c> pros</c><00:36:59.110><c> and</c><00:36:59.350><c> cons</c><00:36:59.530><c> but</c><00:37:00.180><c> but</c><00:37:01.180><c> when</c><00:37:02.020><c> you</c><00:37:02.080><c> have</c>

00:37:02.250 --> 00:37:02.260 align:start position:0%
have pros and cons but but when you have
 

00:37:02.260 --> 00:37:03.480 align:start position:0%
have pros and cons but but when you have
when<00:37:02.530><c> you're</c><00:37:02.650><c> faced</c><00:37:02.800><c> with</c><00:37:02.830><c> a</c><00:37:03.010><c> lot</c><00:37:03.190><c> of</c><00:37:03.280><c> choices</c>

00:37:03.480 --> 00:37:03.490 align:start position:0%
when you're faced with a lot of choices
 

00:37:03.490 --> 00:37:05.490 align:start position:0%
when you're faced with a lot of choices
you<00:37:04.450><c> can't</c><00:37:04.660><c> just</c><00:37:04.840><c> look</c><00:37:04.900><c> at</c><00:37:05.020><c> and</c><00:37:05.170><c> say</c><00:37:05.260><c> I</c><00:37:05.350><c> like</c>

00:37:05.490 --> 00:37:05.500 align:start position:0%
you can't just look at and say I like
 

00:37:05.500 --> 00:37:07.080 align:start position:0%
you can't just look at and say I like
this<00:37:05.650><c> one</c><00:37:05.830><c> better</c><00:37:05.980><c> than</c><00:37:06.130><c> that</c><00:37:06.220><c> one</c><00:37:06.490><c> so</c><00:37:07.060><c> I</c>

00:37:07.080 --> 00:37:07.090 align:start position:0%
this one better than that one so I
 

00:37:07.090 --> 00:37:08.220 align:start position:0%
this one better than that one so I
actually<00:37:07.270><c> did</c><00:37:07.570><c> come</c><00:37:07.750><c> up</c><00:37:07.870><c> with</c><00:37:07.900><c> a</c><00:37:08.020><c> set</c><00:37:08.200><c> of</c>

00:37:08.220 --> 00:37:08.230 align:start position:0%
actually did come up with a set of
 

00:37:08.230 --> 00:37:10.110 align:start position:0%
actually did come up with a set of
criteria<00:37:08.470><c> for</c><00:37:09.010><c> what</c><00:37:09.190><c> what</c><00:37:09.580><c> I</c><00:37:09.610><c> wanted</c><00:37:09.970><c> out</c><00:37:10.060><c> of</c>

00:37:10.110 --> 00:37:10.120 align:start position:0%
criteria for what what I wanted out of
 

00:37:10.120 --> 00:37:13.110 align:start position:0%
criteria for what what I wanted out of
this<00:37:10.240><c> API</c><00:37:10.600><c> and</c><00:37:11.560><c> so</c><00:37:12.130><c> obviously</c><00:37:12.550><c> simpler</c><00:37:13.000><c> is</c>

00:37:13.110 --> 00:37:13.120 align:start position:0%
this API and so obviously simpler is
 

00:37:13.120 --> 00:37:16.380 align:start position:0%
this API and so obviously simpler is
better<00:37:13.150><c> less</c><00:37:14.080><c> boilerplate</c><00:37:15.150><c> but</c><00:37:16.150><c> an</c>

00:37:16.380 --> 00:37:16.390 align:start position:0%
better less boilerplate but an
 

00:37:16.390 --> 00:37:20.310 align:start position:0%
better less boilerplate but an
interesting<00:37:16.930><c> one</c><00:37:17.050><c> is</c><00:37:18.030><c> the</c><00:37:19.030><c> API</c><00:37:19.270><c> should</c><00:37:19.360><c> be</c><00:37:19.630><c> a</c>

00:37:20.310 --> 00:37:20.320 align:start position:0%
interesting one is the API should be a
 

00:37:20.320 --> 00:37:22.560 align:start position:0%
interesting one is the API should be a
compile<00:37:20.770><c> time</c><00:37:20.800><c> type</c><00:37:21.220><c> safe</c><00:37:21.460><c> so</c><00:37:22.180><c> some</c><00:37:22.420><c> of</c><00:37:22.450><c> the</c>

00:37:22.560 --> 00:37:22.570 align:start position:0%
compile time type safe so some of the
 

00:37:22.570 --> 00:37:24.120 align:start position:0%
compile time type safe so some of the
alternatives<00:37:23.080><c> and</c><00:37:23.320><c> some</c><00:37:23.980><c> of</c><00:37:24.040><c> the</c>

00:37:24.120 --> 00:37:24.130 align:start position:0%
alternatives and some of the
 

00:37:24.130 --> 00:37:26.190 align:start position:0%
alternatives and some of the
alternatives<00:37:24.490><c> that</c><00:37:24.580><c> people</c><00:37:24.910><c> proposed</c><00:37:25.360><c> if</c><00:37:25.630><c> you</c>

00:37:26.190 --> 00:37:26.200 align:start position:0%
alternatives that people proposed if you
 

00:37:26.200 --> 00:37:28.350 align:start position:0%
alternatives that people proposed if you
have<00:37:26.320><c> keys</c><00:37:26.500><c> and</c><00:37:26.680><c> values</c><00:37:26.710><c> of</c><00:37:27.370><c> of</c><00:37:27.730><c> different</c>

00:37:28.350 --> 00:37:28.360 align:start position:0%
have keys and values of of different
 

00:37:28.360 --> 00:37:30.450 align:start position:0%
have keys and values of of different
types<00:37:28.540><c> then</c><00:37:28.990><c> the</c><00:37:29.470><c> most</c><00:37:29.710><c> common</c><00:37:30.070><c> super-tight</c>

00:37:30.450 --> 00:37:30.460 align:start position:0%
types then the most common super-tight
 

00:37:30.460 --> 00:37:33.180 align:start position:0%
types then the most common super-tight
might<00:37:30.670><c> be</c><00:37:30.820><c> object</c><00:37:31.270><c> and</c><00:37:31.450><c> so</c><00:37:32.380><c> how</c><00:37:32.590><c> do</c><00:37:32.650><c> you</c><00:37:32.830><c> and</c>

00:37:33.180 --> 00:37:33.190 align:start position:0%
might be object and so how do you and
 

00:37:33.190 --> 00:37:35.310 align:start position:0%
might be object and so how do you and
and<00:37:33.790><c> you</c><00:37:34.000><c> you</c><00:37:34.030><c> can't</c><00:37:34.420><c> have</c><00:37:34.540><c> a</c><00:37:34.570><c> VAR</c><00:37:34.810><c> args</c><00:37:35.020><c> that</c>

00:37:35.310 --> 00:37:35.320 align:start position:0%
and you you can't have a VAR args that
 

00:37:35.320 --> 00:37:37.230 align:start position:0%
and you you can't have a VAR args that
has<00:37:35.440><c> different</c><00:37:35.800><c> types</c><00:37:35.950><c> and</c><00:37:36.190><c> so</c><00:37:36.730><c> some</c><00:37:36.970><c> people</c>

00:37:37.230 --> 00:37:37.240 align:start position:0%
has different types and so some people
 

00:37:37.240 --> 00:37:38.940 align:start position:0%
has different types and so some people
said<00:37:37.390><c> oh</c><00:37:37.510><c> just</c><00:37:37.810><c> take</c><00:37:37.930><c> a</c><00:37:37.960><c> VAR</c><00:37:38.200><c> args</c><00:37:38.350><c> of</c><00:37:38.560><c> object</c>

00:37:38.940 --> 00:37:38.950 align:start position:0%
said oh just take a VAR args of object
 

00:37:38.950 --> 00:37:40.770 align:start position:0%
said oh just take a VAR args of object
and<00:37:39.130><c> you</c><00:37:39.400><c> know</c><00:37:39.520><c> yeah</c><00:37:39.880><c> we'll</c><00:37:40.090><c> deal</c><00:37:40.270><c> with</c><00:37:40.330><c> type</c>

00:37:40.770 --> 00:37:40.780 align:start position:0%
and you know yeah we'll deal with type
 

00:37:40.780 --> 00:37:41.040 align:start position:0%
and you know yeah we'll deal with type
of

00:37:41.040 --> 00:37:41.050 align:start position:0%
of
 

00:37:41.050 --> 00:37:43.110 align:start position:0%
of
safety<00:37:41.260><c> that's</c><00:37:41.440><c> okay</c><00:37:41.740><c> it's</c><00:37:41.950><c> like</c><00:37:42.040><c> wow</c><00:37:42.280><c> I</c><00:37:42.550><c> don't</c>

00:37:43.110 --> 00:37:43.120 align:start position:0%
safety that's okay it's like wow I don't
 

00:37:43.120 --> 00:37:45.930 align:start position:0%
safety that's okay it's like wow I don't
think<00:37:43.180><c> so</c><00:37:43.480><c> job</c><00:37:43.780><c> is</c><00:37:43.960><c> very</c><00:37:44.290><c> very</c><00:37:45.010><c> much</c><00:37:45.220><c> very</c><00:37:45.550><c> much</c>

00:37:45.930 --> 00:37:45.940 align:start position:0%
think so job is very very much very much
 

00:37:45.940 --> 00:37:49.080 align:start position:0%
think so job is very very much very much
focused<00:37:46.510><c> on</c><00:37:47.190><c> static</c><00:37:48.190><c> static</c><00:37:48.730><c> type</c><00:37:49.060><c> checking</c>

00:37:49.080 --> 00:37:49.090 align:start position:0%
focused on static static type checking
 

00:37:49.090 --> 00:37:51.060 align:start position:0%
focused on static static type checking
and<00:37:49.510><c> compile</c><00:37:49.780><c> time</c><00:37:50.050><c> so</c><00:37:50.350><c> having</c><00:37:50.710><c> arguments</c>

00:37:51.060 --> 00:37:51.070 align:start position:0%
and compile time so having arguments
 

00:37:51.070 --> 00:37:53.430 align:start position:0%
and compile time so having arguments
that<00:37:51.400><c> are</c><00:37:51.460><c> not</c><00:37:51.940><c> checked</c><00:37:52.390><c> at</c><00:37:52.540><c> compile</c><00:37:52.870><c> time</c><00:37:52.900><c> is</c>

00:37:53.430 --> 00:37:53.440 align:start position:0%
that are not checked at compile time is
 

00:37:53.440 --> 00:37:58.140 align:start position:0%
that are not checked at compile time is
is<00:37:53.620><c> kind</c><00:37:54.490><c> of</c><00:37:54.550><c> a</c><00:37:54.640><c> dodgy</c><00:37:54.910><c> thing</c><00:37:55.270><c> to</c><00:37:55.360><c> do</c><00:37:57.150><c> so</c>

00:37:58.140 --> 00:37:58.150 align:start position:0%
is kind of a dodgy thing to do so
 

00:37:58.150 --> 00:38:00.120 align:start position:0%
is kind of a dodgy thing to do so
another<00:37:58.330><c> thing</c><00:37:58.480><c> is</c><00:37:58.660><c> we</c><00:37:59.350><c> wanted</c><00:37:59.620><c> the</c><00:37:59.680><c> number</c><00:37:59.890><c> of</c>

00:38:00.120 --> 00:38:00.130 align:start position:0%
another thing is we wanted the number of
 

00:38:00.130 --> 00:38:02.670 align:start position:0%
another thing is we wanted the number of
elements<00:38:00.460><c> to</c><00:38:00.640><c> be</c><00:38:00.730><c> known</c><00:38:00.970><c> at</c><00:38:01.450><c> compile</c><00:38:02.050><c> time</c><00:38:02.080><c> and</c>

00:38:02.670 --> 00:38:02.680 align:start position:0%
elements to be known at compile time and
 

00:38:02.680 --> 00:38:04.020 align:start position:0%
elements to be known at compile time and
so<00:38:02.890><c> you</c><00:38:02.980><c> can</c><00:38:03.160><c> have</c><00:38:03.310><c> a</c><00:38:03.340><c> you</c><00:38:03.820><c> know</c><00:38:03.850><c> an</c>

00:38:04.020 --> 00:38:04.030 align:start position:0%
so you can have a you know an
 

00:38:04.030 --> 00:38:05.640 align:start position:0%
so you can have a you know an
alternative<00:38:04.150><c> was</c><00:38:04.630><c> to</c><00:38:04.660><c> have</c><00:38:04.840><c> a</c><00:38:04.900><c> builder</c><00:38:05.380><c> so</c><00:38:05.590><c> you</c>

00:38:05.640 --> 00:38:05.650 align:start position:0%
alternative was to have a builder so you
 

00:38:05.650 --> 00:38:07.410 align:start position:0%
alternative was to have a builder so you
just<00:38:05.890><c> call</c><00:38:06.070><c> build</c><00:38:06.370><c> you</c><00:38:06.610><c> know</c><00:38:06.700><c> add</c><00:38:06.880><c> add</c><00:38:07.120><c> add</c><00:38:07.150><c> add</c>

00:38:07.410 --> 00:38:07.420 align:start position:0%
just call build you know add add add add
 

00:38:07.420 --> 00:38:09.360 align:start position:0%
just call build you know add add add add
add<00:38:07.660><c> or</c><00:38:08.140><c> something</c><00:38:08.380><c> like</c><00:38:08.470><c> that</c><00:38:08.560><c> and</c><00:38:09.160><c> the</c>

00:38:09.360 --> 00:38:09.370 align:start position:0%
add or something like that and the
 

00:38:09.370 --> 00:38:12.270 align:start position:0%
add or something like that and the
problem<00:38:09.550><c> there</c><00:38:09.910><c> is</c><00:38:09.940><c> you</c><00:38:10.390><c> have</c><00:38:10.540><c> to</c><00:38:10.770><c> in</c><00:38:11.770><c> the</c>

00:38:12.270 --> 00:38:12.280 align:start position:0%
problem there is you have to in the
 

00:38:12.280 --> 00:38:13.620 align:start position:0%
problem there is you have to in the
process<00:38:12.610><c> of</c><00:38:12.730><c> building</c><00:38:12.880><c> you</c><00:38:13.300><c> have</c><00:38:13.450><c> to</c>

00:38:13.620 --> 00:38:13.630 align:start position:0%
process of building you have to
 

00:38:13.630 --> 00:38:16.050 align:start position:0%
process of building you have to
accumulate<00:38:14.230><c> those</c><00:38:14.620><c> and</c><00:38:14.980><c> that</c><00:38:15.610><c> could</c><00:38:15.820><c> involve</c>

00:38:16.050 --> 00:38:16.060 align:start position:0%
accumulate those and that could involve
 

00:38:16.060 --> 00:38:20.400 align:start position:0%
accumulate those and that could involve
successive<00:38:18.570><c> reallocations</c><00:38:19.570><c> and</c><00:38:19.960><c> copies</c>

00:38:20.400 --> 00:38:20.410 align:start position:0%
successive reallocations and copies
 

00:38:20.410 --> 00:38:22.020 align:start position:0%
successive reallocations and copies
because<00:38:21.010><c> you</c><00:38:21.100><c> don't</c><00:38:21.370><c> know</c><00:38:21.490><c> how</c><00:38:21.610><c> many</c><00:38:21.790><c> times</c>

00:38:22.020 --> 00:38:22.030 align:start position:0%
because you don't know how many times
 

00:38:22.030 --> 00:38:25.800 align:start position:0%
because you don't know how many times
the<00:38:22.240><c> guy</c><00:38:22.360><c> is</c><00:38:22.720><c> going</c><00:38:22.960><c> to</c><00:38:23.080><c> add</c><00:38:23.550><c> entries</c><00:38:24.810><c> before</c>

00:38:25.800 --> 00:38:25.810 align:start position:0%
the guy is going to add entries before
 

00:38:25.810 --> 00:38:27.930 align:start position:0%
the guy is going to add entries before
building<00:38:26.410><c> the</c><00:38:26.590><c> final</c><00:38:26.920><c> map</c><00:38:27.070><c> and</c><00:38:27.430><c> so</c><00:38:27.640><c> what</c><00:38:27.850><c> we</c>

00:38:27.930 --> 00:38:27.940 align:start position:0%
building the final map and so what we
 

00:38:27.940 --> 00:38:30.050 align:start position:0%
building the final map and so what we
wanted<00:38:28.210><c> to</c><00:38:28.270><c> do</c><00:38:28.450><c> is</c><00:38:28.780><c> again</c><00:38:29.140><c> at</c><00:38:29.470><c> compile</c><00:38:29.890><c> time</c>

00:38:30.050 --> 00:38:30.060 align:start position:0%
wanted to do is again at compile time
 

00:38:30.060 --> 00:38:34.410 align:start position:0%
wanted to do is again at compile time
have<00:38:31.060><c> the</c><00:38:31.450><c> size</c><00:38:31.840><c> be</c><00:38:32.200><c> statically</c><00:38:32.800><c> known</c><00:38:33.330><c> or</c><00:38:34.330><c> at</c>

00:38:34.410 --> 00:38:34.420 align:start position:0%
have the size be statically known or at
 

00:38:34.420 --> 00:38:37.370 align:start position:0%
have the size be statically known or at
least<00:38:34.570><c> not</c><00:38:34.900><c> statically</c><00:38:35.440><c> known</c><00:38:35.680><c> but</c><00:38:35.950><c> known</c><00:38:36.250><c> at</c>

00:38:37.370 --> 00:38:37.380 align:start position:0%
least not statically known but known at
 

00:38:37.380 --> 00:38:40.620 align:start position:0%
least not statically known but known at
the<00:38:38.380><c> initial</c><00:38:38.950><c> entry</c><00:38:39.160><c> and</c><00:38:39.580><c> so</c><00:38:39.940><c> varargs</c><00:38:40.330><c> does</c>

00:38:40.620 --> 00:38:40.630 align:start position:0%
the initial entry and so varargs does
 

00:38:40.630 --> 00:38:42.690 align:start position:0%
the initial entry and so varargs does
have<00:38:40.840><c> that</c><00:38:41.080><c> because</c><00:38:41.500><c> when</c><00:38:41.860><c> you</c><00:38:42.010><c> receive</c><00:38:42.370><c> a</c><00:38:42.400><c> VAR</c>

00:38:42.690 --> 00:38:42.700 align:start position:0%
have that because when you receive a VAR
 

00:38:42.700 --> 00:38:44.790 align:start position:0%
have that because when you receive a VAR
x<00:38:42.880><c> parameter</c><00:38:43.210><c> you</c><00:38:43.360><c> get</c><00:38:43.630><c> an</c><00:38:43.810><c> array</c><00:38:44.230><c> of</c><00:38:44.410><c> a</c><00:38:44.500><c> fixed</c>

00:38:44.790 --> 00:38:44.800 align:start position:0%
x parameter you get an array of a fixed
 

00:38:44.800 --> 00:38:46.680 align:start position:0%
x parameter you get an array of a fixed
size<00:38:44.980><c> and</c><00:38:45.400><c> so</c><00:38:45.520><c> you</c><00:38:45.580><c> know</c><00:38:45.850><c> that</c><00:38:46.120><c> that</c><00:38:46.540><c> that's</c>

00:38:46.680 --> 00:38:46.690 align:start position:0%
size and so you know that that that's
 

00:38:46.690 --> 00:38:50.460 align:start position:0%
size and so you know that that that's
the<00:38:46.870><c> number</c><00:38:47.110><c> of</c><00:38:47.200><c> elements</c><00:38:47.500><c> you</c><00:38:47.650><c> have</c><00:38:49.470><c> so</c>

00:38:50.460 --> 00:38:50.470 align:start position:0%
the number of elements you have so
 

00:38:50.470 --> 00:38:51.990 align:start position:0%
the number of elements you have so
another<00:38:50.710><c> common</c><00:38:50.950><c> one</c><00:38:51.190><c> somebody</c><00:38:51.580><c> said</c><00:38:51.670><c> oh</c><00:38:51.700><c> just</c>

00:38:51.990 --> 00:38:52.000 align:start position:0%
another common one somebody said oh just
 

00:38:52.000 --> 00:38:54.240 align:start position:0%
another common one somebody said oh just
have<00:38:52.150><c> just</c><00:38:52.690><c> have</c><00:38:52.870><c> two</c><00:38:53.200><c> two</c><00:38:53.530><c> arrays</c><00:38:53.830><c> of</c>

00:38:54.240 --> 00:38:54.250 align:start position:0%
have just have two two arrays of
 

00:38:54.250 --> 00:38:56.790 align:start position:0%
have just have two two arrays of
different<00:38:55.030><c> things</c><00:38:55.210><c> and</c><00:38:55.450><c> and</c><00:38:56.140><c> that's</c><00:38:56.590><c> that's</c>

00:38:56.790 --> 00:38:56.800 align:start position:0%
different things and and that's that's
 

00:38:56.800 --> 00:38:58.860 align:start position:0%
different things and and that's that's
fine<00:38:57.100><c> two</c><00:38:57.910><c> arrays</c><00:38:58.120><c> at</c><00:38:58.330><c> different</c><00:38:58.600><c> types</c><00:38:58.690><c> an</c>

00:38:58.860 --> 00:38:58.870 align:start position:0%
fine two arrays at different types an
 

00:38:58.870 --> 00:39:01.140 align:start position:0%
fine two arrays at different types an
array<00:38:59.050><c> of</c><00:38:59.080><c> keys</c><00:38:59.350><c> an</c><00:38:59.530><c> array</c><00:38:59.710><c> of</c><00:38:59.740><c> values</c><00:39:00.190><c> and</c><00:39:00.370><c> and</c>

00:39:01.140 --> 00:39:01.150 align:start position:0%
array of keys an array of values and and
 

00:39:01.150 --> 00:39:02.730 align:start position:0%
array of keys an array of values and and
that's<00:39:01.300><c> fine</c><00:39:01.540><c> that's</c><00:39:01.990><c> fine</c><00:39:02.080><c> that</c><00:39:02.500><c> kind</c><00:39:02.680><c> of</c>

00:39:02.730 --> 00:39:02.740 align:start position:0%
that's fine that's fine that kind of
 

00:39:02.740 --> 00:39:04.080 align:start position:0%
that's fine that's fine that kind of
works<00:39:02.950><c> you</c><00:39:03.160><c> have</c><00:39:03.190><c> to</c><00:39:03.370><c> do</c><00:39:03.460><c> some</c><00:39:03.610><c> cross</c><00:39:03.820><c> checking</c>

00:39:04.080 --> 00:39:04.090 align:start position:0%
works you have to do some cross checking
 

00:39:04.090 --> 00:39:06.000 align:start position:0%
works you have to do some cross checking
to<00:39:04.300><c> make</c><00:39:04.360><c> sure</c><00:39:04.480><c> that</c><00:39:04.810><c> the</c><00:39:04.990><c> arrays</c><00:39:05.680><c> are</c><00:39:05.890><c> the</c>

00:39:06.000 --> 00:39:06.010 align:start position:0%
to make sure that the arrays are the
 

00:39:06.010 --> 00:39:08.520 align:start position:0%
to make sure that the arrays are the
same<00:39:06.190><c> size</c><00:39:06.430><c> but</c><00:39:07.420><c> when</c><00:39:07.900><c> you</c><00:39:07.990><c> write</c><00:39:08.140><c> out</c><00:39:08.200><c> code</c>

00:39:08.520 --> 00:39:08.530 align:start position:0%
same size but when you write out code
 

00:39:08.530 --> 00:39:10.260 align:start position:0%
same size but when you write out code
that<00:39:08.710><c> does</c><00:39:08.890><c> that</c><00:39:08.920><c> then</c><00:39:09.490><c> the</c><00:39:09.760><c> keys</c><00:39:10.000><c> and</c><00:39:10.210><c> the</c>

00:39:10.260 --> 00:39:10.270 align:start position:0%
that does that then the keys and the
 

00:39:10.270 --> 00:39:12.540 align:start position:0%
that does that then the keys and the
values<00:39:10.690><c> unless</c><00:39:11.350><c> you</c><00:39:11.620><c> contort</c><00:39:12.190><c> your</c><00:39:12.280><c> source</c>

00:39:12.540 --> 00:39:12.550 align:start position:0%
values unless you contort your source
 

00:39:12.550 --> 00:39:14.520 align:start position:0%
values unless you contort your source
code<00:39:12.730><c> in</c><00:39:12.880><c> a</c><00:39:12.940><c> very</c><00:39:13.090><c> strange</c><00:39:13.390><c> way</c><00:39:13.510><c> your</c><00:39:14.110><c> keys</c><00:39:14.380><c> are</c>

00:39:14.520 --> 00:39:14.530 align:start position:0%
code in a very strange way your keys are
 

00:39:14.530 --> 00:39:16.500 align:start position:0%
code in a very strange way your keys are
going<00:39:14.680><c> to</c><00:39:14.800><c> be</c><00:39:14.890><c> very</c><00:39:15.100><c> far</c><00:39:15.430><c> away</c><00:39:15.460><c> from</c><00:39:15.760><c> your</c><00:39:16.180><c> the</c>

00:39:16.500 --> 00:39:16.510 align:start position:0%
going to be very far away from your the
 

00:39:16.510 --> 00:39:19.080 align:start position:0%
going to be very far away from your the
corresponding<00:39:17.080><c> values</c><00:39:17.470><c> and</c><00:39:17.740><c> so</c><00:39:18.490><c> it's</c><00:39:18.910><c> like</c>

00:39:19.080 --> 00:39:19.090 align:start position:0%
corresponding values and so it's like
 

00:39:19.090 --> 00:39:21.360 align:start position:0%
corresponding values and so it's like
yes<00:39:19.720><c> you</c><00:39:19.960><c> can</c><00:39:19.990><c> do</c><00:39:20.380><c> that</c><00:39:20.410><c> functionally</c><00:39:21.220><c> in</c><00:39:21.310><c> the</c>

00:39:21.360 --> 00:39:21.370 align:start position:0%
yes you can do that functionally in the
 

00:39:21.370 --> 00:39:24.750 align:start position:0%
yes you can do that functionally in the
API<00:39:21.640><c> but</c><00:39:22.330><c> we</c><00:39:22.420><c> need</c><00:39:22.510><c> write</c><00:39:22.690><c> source</c><00:39:22.990><c> code</c><00:39:23.760><c> it's</c>

00:39:24.750 --> 00:39:24.760 align:start position:0%
API but we need write source code it's
 

00:39:24.760 --> 00:39:29.070 align:start position:0%
API but we need write source code it's
just<00:39:25.000><c> not</c><00:39:25.180><c> going</c><00:39:25.330><c> to</c><00:39:25.390><c> work</c><00:39:25.830><c> so</c><00:39:27.270><c> anyway</c><00:39:28.270><c> and</c>

00:39:29.070 --> 00:39:29.080 align:start position:0%
just not going to work so anyway and
 

00:39:29.080 --> 00:39:31.050 align:start position:0%
just not going to work so anyway and
then<00:39:29.260><c> ideally</c><00:39:30.010><c> we</c><00:39:30.430><c> would</c><00:39:30.550><c> like</c><00:39:30.580><c> to</c><00:39:30.790><c> avoid</c>

00:39:31.050 --> 00:39:31.060 align:start position:0%
then ideally we would like to avoid
 

00:39:31.060 --> 00:39:33.930 align:start position:0%
then ideally we would like to avoid
boxing<00:39:31.720><c> where</c><00:39:31.900><c> possible</c><00:39:32.350><c> and</c><00:39:33.100><c> it</c><00:39:33.520><c> turns</c><00:39:33.730><c> out</c>

00:39:33.930 --> 00:39:33.940 align:start position:0%
boxing where possible and it turns out
 

00:39:33.940 --> 00:39:35.670 align:start position:0%
boxing where possible and it turns out
that<00:39:34.210><c> we</c><00:39:34.540><c> were</c><00:39:34.750><c> able</c><00:39:34.930><c> to</c><00:39:35.080><c> satisfy</c><00:39:35.260><c> all</c><00:39:35.650><c> of</c>

00:39:35.670 --> 00:39:35.680 align:start position:0%
that we were able to satisfy all of
 

00:39:35.680 --> 00:39:39.600 align:start position:0%
that we were able to satisfy all of
those<00:39:35.890><c> accept</c><00:39:36.370><c> accept</c><00:39:36.850><c> boxing</c><00:39:38.190><c> so</c><00:39:39.190><c> I</c><00:39:39.250><c> went</c>

00:39:39.600 --> 00:39:39.610 align:start position:0%
those accept accept boxing so I went
 

00:39:39.610 --> 00:39:40.710 align:start position:0%
those accept accept boxing so I went
over<00:39:39.670><c> this</c><00:39:39.910><c> already</c><00:39:40.060><c> there's</c><00:39:40.510><c> a</c><00:39:40.570><c> new</c>

00:39:40.710 --> 00:39:40.720 align:start position:0%
over this already there's a new
 

00:39:40.720 --> 00:39:43.260 align:start position:0%
over this already there's a new
convenience<00:39:41.020><c> method</c><00:39:41.560><c> called</c><00:39:42.490><c> entry</c><00:39:43.030><c> which</c>

00:39:43.260 --> 00:39:43.270 align:start position:0%
convenience method called entry which
 

00:39:43.270 --> 00:39:45.150 align:start position:0%
convenience method called entry which
takes<00:39:43.480><c> a</c><00:39:43.570><c> key</c><00:39:43.690><c> and</c><00:39:43.780><c> a</c><00:39:43.840><c> value</c><00:39:43.870><c> you</c><00:39:44.740><c> can</c><00:39:44.920><c> pass</c><00:39:45.130><c> a</c>

00:39:45.150 --> 00:39:45.160 align:start position:0%
takes a key and a value you can pass a
 

00:39:45.160 --> 00:39:47.850 align:start position:0%
takes a key and a value you can pass a
succession<00:39:45.670><c> of</c><00:39:45.850><c> those</c><00:39:46.060><c> to</c><00:39:46.420><c> the</c><00:39:47.020><c> map</c><00:39:47.380><c> dot</c><00:39:47.620><c> of</c>

00:39:47.850 --> 00:39:47.860 align:start position:0%
succession of those to the map dot of
 

00:39:47.860 --> 00:39:50.130 align:start position:0%
succession of those to the map dot of
entries<00:39:48.340><c> method</c><00:39:48.670><c> so</c><00:39:48.910><c> that's</c><00:39:49.060><c> what</c><00:39:49.210><c> we</c><00:39:49.390><c> we</c>

00:39:50.130 --> 00:39:50.140 align:start position:0%
entries method so that's what we we
 

00:39:50.140 --> 00:39:53.280 align:start position:0%
entries method so that's what we we
ended<00:39:50.410><c> up</c><00:39:50.470><c> with</c><00:39:50.680><c> it's</c><00:39:51.340><c> not</c><00:39:51.430><c> perfect</c><00:39:52.200><c> it's</c><00:39:53.200><c> a</c>

00:39:53.280 --> 00:39:53.290 align:start position:0%
ended up with it's not perfect it's a
 

00:39:53.290 --> 00:39:54.450 align:start position:0%
ended up with it's not perfect it's a
little<00:39:53.530><c> bit</c><00:39:53.620><c> more</c><00:39:53.740><c> verbose</c><00:39:54.100><c> than</c><00:39:54.130><c> I</c><00:39:54.340><c> would</c>

00:39:54.450 --> 00:39:54.460 align:start position:0%
little bit more verbose than I would
 

00:39:54.460 --> 00:39:54.779 align:start position:0%
little bit more verbose than I would
like

00:39:54.779 --> 00:39:54.789 align:start position:0%
like
 

00:39:54.789 --> 00:39:56.640 align:start position:0%
like
but<00:39:54.880><c> I</c><00:39:54.910><c> think</c><00:39:55.059><c> it</c><00:39:55.269><c> does</c><00:39:55.449><c> satisfy</c><00:39:56.229><c> most</c><00:39:56.410><c> of</c><00:39:56.589><c> the</c>

00:39:56.640 --> 00:39:56.650 align:start position:0%
but I think it does satisfy most of the
 

00:39:56.650 --> 00:40:00.539 align:start position:0%
but I think it does satisfy most of the
criteria<00:39:56.829><c> and</c><00:39:57.429><c> it</c><00:39:57.729><c> works</c><00:39:57.939><c> well</c><00:39:59.249><c> all</c><00:40:00.249><c> right</c><00:40:00.309><c> so</c>

00:40:00.539 --> 00:40:00.549 align:start position:0%
criteria and it works well all right so
 

00:40:00.549 --> 00:40:02.039 align:start position:0%
criteria and it works well all right so
here's<00:40:00.759><c> something</c><00:40:00.999><c> here's</c><00:40:01.630><c> something</c><00:40:01.869><c> fairly</c>

00:40:02.039 --> 00:40:02.049 align:start position:0%
here's something here's something fairly
 

00:40:02.049 --> 00:40:04.469 align:start position:0%
here's something here's something fairly
new<00:40:02.380><c> in</c><00:40:02.769><c> the</c><00:40:02.799><c> Java</c><00:40:03.189><c> world</c><00:40:03.309><c> which</c><00:40:03.789><c> is</c><00:40:03.969><c> immutable</c>

00:40:04.469 --> 00:40:04.479 align:start position:0%
new in the Java world which is immutable
 

00:40:04.479 --> 00:40:10.469 align:start position:0%
new in the Java world which is immutable
data<00:40:04.989><c> structures</c><00:40:05.859><c> and</c><00:40:08.249><c> so</c><00:40:09.249><c> the</c><00:40:09.549><c> the</c><00:40:09.880><c> instances</c>

00:40:10.469 --> 00:40:10.479 align:start position:0%
data structures and so the the instances
 

00:40:10.479 --> 00:40:11.999 align:start position:0%
data structures and so the the instances
returned<00:40:10.869><c> by</c><00:40:11.049><c> these</c><00:40:11.259><c> new</c><00:40:11.469><c> methods</c><00:40:11.799><c> are</c>

00:40:11.999 --> 00:40:12.009 align:start position:0%
returned by these new methods are
 

00:40:12.009 --> 00:40:14.189 align:start position:0%
returned by these new methods are
immutable<00:40:12.699><c> which</c><00:40:13.179><c> means</c><00:40:13.390><c> that</c><00:40:13.630><c> you</c><00:40:13.839><c> cannot</c>

00:40:14.189 --> 00:40:14.199 align:start position:0%
immutable which means that you cannot
 

00:40:14.199 --> 00:40:16.169 align:start position:0%
immutable which means that you cannot
modify<00:40:14.559><c> them</c><00:40:14.859><c> so</c><00:40:15.009><c> I</c><00:40:15.339><c> want</c><00:40:15.579><c> to</c><00:40:15.640><c> stress</c><00:40:15.880><c> that</c>

00:40:16.169 --> 00:40:16.179 align:start position:0%
modify them so I want to stress that
 

00:40:16.179 --> 00:40:18.089 align:start position:0%
modify them so I want to stress that
this<00:40:16.959><c> is</c><00:40:17.019><c> what</c><00:40:17.380><c> I</c><00:40:17.559><c> guess</c><00:40:17.739><c> what</c><00:40:17.859><c> we</c><00:40:17.949><c> call</c>

00:40:18.089 --> 00:40:18.099 align:start position:0%
this is what I guess what we call
 

00:40:18.099 --> 00:40:20.099 align:start position:0%
this is what I guess what we call
conventional<00:40:18.429><c> immutability</c><00:40:19.329><c> so</c><00:40:19.779><c> it's</c><00:40:19.929><c> just</c>

00:40:20.099 --> 00:40:20.109 align:start position:0%
conventional immutability so it's just
 

00:40:20.109 --> 00:40:22.109 align:start position:0%
conventional immutability so it's just
like<00:40:20.289><c> a</c><00:40:20.349><c> regular</c><00:40:20.619><c> Java</c><00:40:21.099><c> collection</c><00:40:21.609><c> it's</c><00:40:21.910><c> just</c>

00:40:22.109 --> 00:40:22.119 align:start position:0%
like a regular Java collection it's just
 

00:40:22.119 --> 00:40:24.359 align:start position:0%
like a regular Java collection it's just
that<00:40:22.269><c> if</c><00:40:22.419><c> you</c><00:40:22.509><c> call</c><00:40:22.689><c> a</c><00:40:23.019><c> mutator</c><00:40:23.859><c> method</c><00:40:24.219><c> like</c>

00:40:24.359 --> 00:40:24.369 align:start position:0%
that if you call a mutator method like
 

00:40:24.369 --> 00:40:27.630 align:start position:0%
that if you call a mutator method like
add<00:40:24.640><c> or</c><00:40:24.669><c> put</c><00:40:25.329><c> then</c><00:40:25.989><c> that</c><00:40:26.499><c> is</c><00:40:26.679><c> rejected</c><00:40:27.009><c> with</c><00:40:27.400><c> an</c>

00:40:27.630 --> 00:40:27.640 align:start position:0%
add or put then that is rejected with an
 

00:40:27.640 --> 00:40:30.390 align:start position:0%
add or put then that is rejected with an
unsupported<00:40:28.630><c> operation</c><00:40:29.049><c> exception</c><00:40:29.499><c> I</c><00:40:29.619><c> want</c>

00:40:30.390 --> 00:40:30.400 align:start position:0%
unsupported operation exception I want
 

00:40:30.400 --> 00:40:31.829 align:start position:0%
unsupported operation exception I want
to<00:40:30.459><c> contrast</c><00:40:30.640><c> that</c><00:40:30.969><c> with</c><00:40:31.269><c> other</c><00:40:31.539><c> libraries</c>

00:40:31.829 --> 00:40:31.839 align:start position:0%
to contrast that with other libraries
 

00:40:31.839 --> 00:40:34.489 align:start position:0%
to contrast that with other libraries
and<00:40:32.380><c> other</c><00:40:32.499><c> language</c><00:40:32.949><c> systems</c><00:40:33.279><c> that</c><00:40:33.489><c> have</c>

00:40:34.489 --> 00:40:34.499 align:start position:0%
and other language systems that have
 

00:40:34.499 --> 00:40:37.140 align:start position:0%
and other language systems that have
persistent<00:40:35.499><c> or</c><00:40:35.709><c> immutable</c><00:40:36.309><c> persistent</c><00:40:36.999><c> data</c>

00:40:37.140 --> 00:40:37.150 align:start position:0%
persistent or immutable persistent data
 

00:40:37.150 --> 00:40:40.259 align:start position:0%
persistent or immutable persistent data
structures<00:40:37.660><c> where</c><00:40:38.169><c> you</c><00:40:38.439><c> can</c><00:40:38.799><c> sort</c><00:40:39.369><c> of</c><00:40:39.519><c> modify</c>

00:40:40.259 --> 00:40:40.269 align:start position:0%
structures where you can sort of modify
 

00:40:40.269 --> 00:40:41.609 align:start position:0%
structures where you can sort of modify
the<00:40:40.329><c> data</c><00:40:40.599><c> structure</c><00:40:40.959><c> but</c><00:40:40.989><c> what</c><00:40:41.199><c> you</c><00:40:41.349><c> get</c><00:40:41.499><c> is</c><00:40:41.589><c> a</c>

00:40:41.609 --> 00:40:41.619 align:start position:0%
the data structure but what you get is a
 

00:40:41.619 --> 00:40:43.380 align:start position:0%
the data structure but what you get is a
new<00:40:41.829><c> data</c><00:40:42.009><c> structure</c><00:40:42.369><c> that</c><00:40:42.489><c> has</c><00:40:42.789><c> sharing</c><00:40:43.269><c> with</c>

00:40:43.380 --> 00:40:43.390 align:start position:0%
new data structure that has sharing with
 

00:40:43.390 --> 00:40:45.479 align:start position:0%
new data structure that has sharing with
you<00:40:43.509><c> old</c><00:40:43.630><c> one</c><00:40:43.749><c> that</c><00:40:43.989><c> is</c><00:40:44.410><c> not</c><00:40:44.799><c> what</c><00:40:45.099><c> this</c><00:40:45.249><c> is</c>

00:40:45.479 --> 00:40:45.489 align:start position:0%
you old one that is not what this is
 

00:40:45.489 --> 00:40:46.979 align:start position:0%
you old one that is not what this is
this<00:40:45.759><c> is</c><00:40:45.910><c> kind</c><00:40:46.119><c> of</c><00:40:46.150><c> conventional</c>

00:40:46.979 --> 00:40:46.989 align:start position:0%
this is kind of conventional
 

00:40:46.989 --> 00:40:52.370 align:start position:0%
this is kind of conventional
immutability<00:40:48.630><c> anyway</c><00:40:49.630><c> this</c><00:40:50.259><c> is</c><00:40:50.439><c> good</c><00:40:50.650><c> because</c>

00:40:52.370 --> 00:40:52.380 align:start position:0%
immutability anyway this is good because
 

00:40:52.380 --> 00:40:55.229 align:start position:0%
immutability anyway this is good because
there<00:40:53.380><c> are</c><00:40:53.439><c> a</c><00:40:53.469><c> lot</c><00:40:53.559><c> of</c><00:40:53.589><c> cases</c><00:40:53.799><c> where</c><00:40:54.279><c> people</c>

00:40:55.229 --> 00:40:55.239 align:start position:0%
there are a lot of cases where people
 

00:40:55.239 --> 00:40:57.120 align:start position:0%
there are a lot of cases where people
could<00:40:55.509><c> use</c><00:40:55.689><c> immutable</c><00:40:56.289><c> data</c><00:40:56.319><c> structures</c><00:40:56.739><c> if</c>

00:40:57.120 --> 00:40:57.130 align:start position:0%
could use immutable data structures if
 

00:40:57.130 --> 00:40:59.370 align:start position:0%
could use immutable data structures if
they<00:40:57.309><c> had</c><00:40:57.519><c> them</c><00:40:57.759><c> in</c><00:40:57.969><c> Java</c><00:40:58.239><c> and</c><00:40:58.479><c> so</c><00:40:59.140><c> the</c><00:40:59.229><c> very</c>

00:40:59.370 --> 00:40:59.380 align:start position:0%
they had them in Java and so the very
 

00:40:59.380 --> 00:41:01.169 align:start position:0%
they had them in Java and so the very
common<00:40:59.709><c> case</c><00:40:59.829><c> to</c><00:41:00.069><c> initialize</c><00:41:00.549><c> a</c><00:41:00.579><c> table</c><00:41:01.089><c> of</c>

00:41:01.169 --> 00:41:01.179 align:start position:0%
common case to initialize a table of
 

00:41:01.179 --> 00:41:04.019 align:start position:0%
common case to initialize a table of
things<00:41:01.390><c> or</c><00:41:01.689><c> list</c><00:41:01.929><c> or</c><00:41:02.199><c> something</c><00:41:02.890><c> at</c><00:41:03.159><c> the</c><00:41:03.519><c> at</c>

00:41:04.019 --> 00:41:04.029 align:start position:0%
things or list or something at the at
 

00:41:04.029 --> 00:41:05.609 align:start position:0%
things or list or something at the at
the<00:41:04.119><c> beginning</c><00:41:04.419><c> of</c><00:41:04.449><c> a</c><00:41:04.509><c> program</c><00:41:04.659><c> and</c><00:41:05.019><c> never</c>

00:41:05.609 --> 00:41:05.619 align:start position:0%
the beginning of a program and never
 

00:41:05.619 --> 00:41:06.809 align:start position:0%
the beginning of a program and never
change<00:41:05.919><c> it</c><00:41:06.039><c> for</c><00:41:06.219><c> the</c><00:41:06.249><c> lifetime</c><00:41:06.640><c> of</c><00:41:06.669><c> the</c>

00:41:06.809 --> 00:41:06.819 align:start position:0%
change it for the lifetime of the
 

00:41:06.819 --> 00:41:09.239 align:start position:0%
change it for the lifetime of the
program<00:41:06.939><c> and</c><00:41:07.390><c> so</c><00:41:08.169><c> you</c><00:41:08.619><c> don't</c><00:41:08.890><c> want</c><00:41:09.099><c> those</c>

00:41:09.239 --> 00:41:09.249 align:start position:0%
program and so you don't want those
 

00:41:09.249 --> 00:41:11.699 align:start position:0%
program and so you don't want those
accidentally<00:41:10.119><c> being</c><00:41:10.329><c> changed</c><00:41:10.659><c> and</c><00:41:10.929><c> if</c>

00:41:11.699 --> 00:41:11.709 align:start position:0%
accidentally being changed and if
 

00:41:11.709 --> 00:41:13.199 align:start position:0%
accidentally being changed and if
there's<00:41:11.890><c> a</c><00:41:11.949><c> space</c><00:41:12.219><c> efficient</c><00:41:12.699><c> way</c><00:41:12.819><c> to</c><00:41:12.849><c> store</c>

00:41:13.199 --> 00:41:13.209 align:start position:0%
there's a space efficient way to store
 

00:41:13.209 --> 00:41:15.259 align:start position:0%
there's a space efficient way to store
them<00:41:13.479><c> then</c><00:41:13.749><c> you</c><00:41:13.929><c> want</c><00:41:14.079><c> to</c><00:41:14.199><c> do</c><00:41:14.319><c> that</c><00:41:14.529><c> because</c>

00:41:15.259 --> 00:41:15.269 align:start position:0%
them then you want to do that because
 

00:41:15.269 --> 00:41:18.209 align:start position:0%
them then you want to do that because
you<00:41:16.269><c> know</c><00:41:16.390><c> if</c><00:41:16.539><c> you</c><00:41:16.659><c> know</c><00:41:16.900><c> that</c><00:41:16.929><c> the</c><00:41:17.499><c> destructor</c>

00:41:18.209 --> 00:41:18.219 align:start position:0%
you know if you know that the destructor
 

00:41:18.219 --> 00:41:20.370 align:start position:0%
you know if you know that the destructor
is<00:41:18.459><c> never</c><00:41:18.669><c> going</c><00:41:18.880><c> to</c><00:41:18.969><c> be</c><00:41:19.119><c> changed</c><00:41:19.569><c> then</c><00:41:19.839><c> why</c>

00:41:20.370 --> 00:41:20.380 align:start position:0%
is never going to be changed then why
 

00:41:20.380 --> 00:41:22.319 align:start position:0%
is never going to be changed then why
pay<00:41:20.679><c> a</c><00:41:20.709><c> space</c><00:41:20.979><c> penalty</c><00:41:21.400><c> for</c><00:41:21.579><c> the</c><00:41:21.729><c> flexibility</c>

00:41:22.319 --> 00:41:22.329 align:start position:0%
pay a space penalty for the flexibility
 

00:41:22.329 --> 00:41:26.009 align:start position:0%
pay a space penalty for the flexibility
of<00:41:23.669><c> potentially</c><00:41:24.669><c> modifying</c><00:41:25.179><c> the</c><00:41:25.569><c> data</c><00:41:25.749><c> if</c>

00:41:26.009 --> 00:41:26.019 align:start position:0%
of potentially modifying the data if
 

00:41:26.019 --> 00:41:32.249 align:start position:0%
of potentially modifying the data if
you're<00:41:26.169><c> never</c><00:41:26.380><c> going</c><00:41:26.650><c> to</c><00:41:26.709><c> do</c><00:41:26.890><c> that</c><00:41:29.819><c> so</c><00:41:31.259><c> there</c>

00:41:32.249 --> 00:41:32.259 align:start position:0%
you're never going to do that so there
 

00:41:32.259 --> 00:41:34.589 align:start position:0%
you're never going to do that so there
were<00:41:32.589><c> they're</c><00:41:33.009><c> there</c><00:41:33.579><c> historically</c><00:41:33.849><c> have</c>

00:41:34.589 --> 00:41:34.599 align:start position:0%
were they're there historically have
 

00:41:34.599 --> 00:41:38.009 align:start position:0%
were they're there historically have
been<00:41:34.890><c> unmodifiable</c><00:41:35.890><c> wrappers</c><00:41:36.729><c> in</c><00:41:37.019><c> the</c>

00:41:38.009 --> 00:41:38.019 align:start position:0%
been unmodifiable wrappers in the
 

00:41:38.019 --> 00:41:39.269 align:start position:0%
been unmodifiable wrappers in the
collections<00:41:38.469><c> framework</c><00:41:38.799><c> and</c><00:41:38.919><c> that's</c><00:41:39.039><c> kind</c><00:41:39.219><c> of</c>

00:41:39.269 --> 00:41:39.279 align:start position:0%
collections framework and that's kind of
 

00:41:39.279 --> 00:41:41.549 align:start position:0%
collections framework and that's kind of
the<00:41:39.400><c> closest</c><00:41:40.029><c> thing</c><00:41:40.269><c> to</c><00:41:40.559><c> general-purpose</c>

00:41:41.549 --> 00:41:41.559 align:start position:0%
the closest thing to general-purpose
 

00:41:41.559 --> 00:41:43.890 align:start position:0%
the closest thing to general-purpose
immutability<00:41:42.279><c> that</c><00:41:42.669><c> was</c><00:41:42.880><c> there</c><00:41:43.119><c> up</c><00:41:43.390><c> until</c><00:41:43.539><c> now</c>

00:41:43.890 --> 00:41:43.900 align:start position:0%
immutability that was there up until now
 

00:41:43.900 --> 00:41:45.630 align:start position:0%
immutability that was there up until now
so<00:41:44.499><c> what</c><00:41:44.619><c> you</c><00:41:44.709><c> had</c><00:41:44.829><c> to</c><00:41:44.949><c> do</c><00:41:45.069><c> is</c><00:41:45.249><c> create</c><00:41:45.609><c> a</c>

00:41:45.630 --> 00:41:45.640 align:start position:0%
so what you had to do is create a
 

00:41:45.640 --> 00:41:47.789 align:start position:0%
so what you had to do is create a
mutable<00:41:46.209><c> data</c><00:41:46.329><c> structure</c><00:41:46.900><c> populate</c><00:41:47.529><c> it</c><00:41:47.679><c> and</c>

00:41:47.789 --> 00:41:47.799 align:start position:0%
mutable data structure populate it and
 

00:41:47.799 --> 00:41:52.319 align:start position:0%
mutable data structure populate it and
then<00:41:48.219><c> wrap</c><00:41:48.549><c> it</c><00:41:48.819><c> in</c><00:41:48.999><c> an</c><00:41:49.150><c> unmodified</c><00:41:49.659><c> alrea</c>

00:41:52.319 --> 00:41:52.329 align:start position:0%
 
 

00:41:52.329 --> 00:41:54.569 align:start position:0%
 
oh<00:41:52.359><c> and</c><00:41:52.779><c> then</c><00:41:52.900><c> throw</c><00:41:53.469><c> away</c><00:41:53.739><c> the</c><00:41:54.039><c> reference</c><00:41:54.400><c> to</c>

00:41:54.569 --> 00:41:54.579 align:start position:0%
oh and then throw away the reference to
 

00:41:54.579 --> 00:41:56.609 align:start position:0%
oh and then throw away the reference to
the<00:41:54.669><c> underlying</c><00:41:55.059><c> one</c><00:41:55.329><c> and</c><00:41:55.900><c> that</c><00:41:56.049><c> sort</c><00:41:56.439><c> of</c>

00:41:56.609 --> 00:41:56.619 align:start position:0%
the underlying one and that sort of
 

00:41:56.619 --> 00:41:59.249 align:start position:0%
the underlying one and that sort of
gives<00:41:56.829><c> you</c><00:41:56.979><c> immunity</c><00:41:57.249><c> mutability</c><00:41:58.209><c> as</c><00:41:58.449><c> long</c><00:41:59.169><c> as</c>

00:41:59.249 --> 00:41:59.259 align:start position:0%
gives you immunity mutability as long as
 

00:41:59.259 --> 00:42:00.479 align:start position:0%
gives you immunity mutability as long as
you<00:41:59.319><c> remember</c><00:41:59.559><c> to</c><00:41:59.709><c> throw</c><00:42:00.069><c> away</c><00:42:00.279><c> the</c>

00:42:00.479 --> 00:42:00.489 align:start position:0%
you remember to throw away the
 

00:42:00.489 --> 00:42:03.899 align:start position:0%
you remember to throw away the
underlying<00:42:00.849><c> reference</c><00:42:01.919><c> but</c><00:42:02.919><c> unmodifiable</c><00:42:03.579><c> is</c>

00:42:03.899 --> 00:42:03.909 align:start position:0%
underlying reference but unmodifiable is
 

00:42:03.909 --> 00:42:07.049 align:start position:0%
underlying reference but unmodifiable is
actually<00:42:04.239><c> a</c><00:42:04.269><c> different</c><00:42:04.689><c> concept</c><00:42:05.159><c> so</c><00:42:06.159><c> in</c><00:42:06.279><c> the</c>

00:42:07.049 --> 00:42:07.059 align:start position:0%
actually a different concept so in the
 

00:42:07.059 --> 00:42:08.580 align:start position:0%
actually a different concept so in the
idea<00:42:07.329><c> the</c><00:42:07.449><c> unmodifiable</c><00:42:08.019><c> wrap</c>

00:42:08.580 --> 00:42:08.590 align:start position:0%
idea the unmodifiable wrap
 

00:42:08.590 --> 00:42:11.520 align:start position:0%
idea the unmodifiable wrap
is<00:42:08.830><c> that</c><00:42:09.070><c> they</c><00:42:09.220><c> are</c><00:42:09.400><c> views</c><00:42:10.270><c> onto</c><00:42:10.810><c> another</c>

00:42:11.520 --> 00:42:11.530 align:start position:0%
is that they are views onto another
 

00:42:11.530 --> 00:42:14.270 align:start position:0%
is that they are views onto another
collection<00:42:11.830><c> that</c><00:42:12.460><c> are</c><00:42:12.790><c> that</c><00:42:13.420><c> do</c><00:42:13.630><c> not</c><00:42:13.750><c> permit</c>

00:42:14.270 --> 00:42:14.280 align:start position:0%
collection that are that do not permit
 

00:42:14.280 --> 00:42:16.650 align:start position:0%
collection that are that do not permit
modification<00:42:15.280><c> but</c><00:42:15.880><c> if</c><00:42:16.030><c> you</c><00:42:16.150><c> still</c><00:42:16.390><c> have</c><00:42:16.630><c> a</c>

00:42:16.650 --> 00:42:16.660 align:start position:0%
modification but if you still have a
 

00:42:16.660 --> 00:42:18.840 align:start position:0%
modification but if you still have a
handle<00:42:17.080><c> on</c><00:42:17.230><c> the</c><00:42:17.350><c> underlying</c><00:42:17.740><c> collection</c><00:42:18.250><c> then</c>

00:42:18.840 --> 00:42:18.850 align:start position:0%
handle on the underlying collection then
 

00:42:18.850 --> 00:42:24.060 align:start position:0%
handle on the underlying collection then
you<00:42:19.390><c> can</c><00:42:19.540><c> modify</c><00:42:19.690><c> that</c><00:42:20.580><c> so</c><00:42:21.580><c> so</c><00:42:22.420><c> even</c><00:42:22.750><c> so</c><00:42:23.020><c> if</c><00:42:23.290><c> you</c>

00:42:24.060 --> 00:42:24.070 align:start position:0%
you can modify that so so even so if you
 

00:42:24.070 --> 00:42:25.530 align:start position:0%
you can modify that so so even so if you
if<00:42:24.370><c> you</c><00:42:24.490><c> call</c><00:42:24.640><c> into</c><00:42:24.880><c> somewhere</c><00:42:25.150><c> and</c><00:42:25.300><c> it</c><00:42:25.360><c> gives</c>

00:42:25.530 --> 00:42:25.540 align:start position:0%
if you call into somewhere and it gives
 

00:42:25.540 --> 00:42:28.140 align:start position:0%
if you call into somewhere and it gives
you<00:42:25.660><c> a</c><00:42:25.690><c> nun</c><00:42:25.930><c> modifiable</c><00:42:26.410><c> view</c><00:42:26.860><c> that</c><00:42:27.730><c> means</c><00:42:27.940><c> you</c>

00:42:28.140 --> 00:42:28.150 align:start position:0%
you a nun modifiable view that means you
 

00:42:28.150 --> 00:42:30.510 align:start position:0%
you a nun modifiable view that means you
can't<00:42:28.420><c> modify</c><00:42:28.600><c> it</c><00:42:28.930><c> but</c><00:42:29.590><c> you</c><00:42:29.800><c> cannot</c><00:42:30.130><c> trust</c>

00:42:30.510 --> 00:42:30.520 align:start position:0%
can't modify it but you cannot trust
 

00:42:30.520 --> 00:42:32.460 align:start position:0%
can't modify it but you cannot trust
that<00:42:30.850><c> it</c><00:42:31.390><c> will</c><00:42:31.420><c> never</c><00:42:31.720><c> change</c>

00:42:32.460 --> 00:42:32.470 align:start position:0%
that it will never change
 

00:42:32.470 --> 00:42:34.650 align:start position:0%
that it will never change
so<00:42:32.880><c> because</c><00:42:33.880><c> somebody</c><00:42:34.180><c> else</c><00:42:34.330><c> might</c><00:42:34.510><c> be</c>

00:42:34.650 --> 00:42:34.660 align:start position:0%
so because somebody else might be
 

00:42:34.660 --> 00:42:36.210 align:start position:0%
so because somebody else might be
modifying<00:42:35.110><c> it</c><00:42:35.320><c> so</c><00:42:35.680><c> this</c><00:42:35.800><c> idea</c><00:42:35.950><c> of</c>

00:42:36.210 --> 00:42:36.220 align:start position:0%
modifying it so this idea of
 

00:42:36.220 --> 00:42:38.780 align:start position:0%
modifying it so this idea of
unmodifiable<00:42:37.180><c> that</c><00:42:37.570><c> already</c><00:42:37.960><c> exists</c><00:42:38.530><c> in</c><00:42:38.680><c> the</c>

00:42:38.780 --> 00:42:38.790 align:start position:0%
unmodifiable that already exists in the
 

00:42:38.790 --> 00:42:40.710 align:start position:0%
unmodifiable that already exists in the
collections<00:42:39.790><c> framework</c><00:42:39.910><c> really</c><00:42:40.630><c> is</c>

00:42:40.710 --> 00:42:40.720 align:start position:0%
collections framework really is
 

00:42:40.720 --> 00:42:44.280 align:start position:0%
collections framework really is
different<00:42:40.990><c> from</c><00:42:41.380><c> immutability</c><00:42:42.070><c> and</c><00:42:42.430><c> so</c><00:42:43.290><c> these</c>

00:42:44.280 --> 00:42:44.290 align:start position:0%
different from immutability and so these
 

00:42:44.290 --> 00:42:47.010 align:start position:0%
different from immutability and so these
collections<00:42:44.920><c> cannot</c><00:42:45.880><c> be</c><00:42:46.060><c> modified</c><00:42:46.330><c> unless</c>

00:42:47.010 --> 00:42:47.020 align:start position:0%
collections cannot be modified unless
 

00:42:47.020 --> 00:42:48.960 align:start position:0%
collections cannot be modified unless
you<00:42:47.200><c> go</c><00:42:47.350><c> in</c><00:42:47.530><c> like</c><00:42:47.770><c> with</c><00:42:47.920><c> reflection</c><00:42:48.460><c> or</c><00:42:48.610><c> unsafe</c>

00:42:48.960 --> 00:42:48.970 align:start position:0%
you go in like with reflection or unsafe
 

00:42:48.970 --> 00:42:50.280 align:start position:0%
you go in like with reflection or unsafe
or<00:42:49.000><c> something</c><00:42:49.420><c> like</c><00:42:49.510><c> that</c><00:42:49.570><c> there</c><00:42:50.080><c> are</c><00:42:50.170><c> no</c>

00:42:50.280 --> 00:42:50.290 align:start position:0%
or something like that there are no
 

00:42:50.290 --> 00:42:54.020 align:start position:0%
or something like that there are no
api's<00:42:50.770><c> that</c><00:42:51.610><c> modify</c><00:42:52.120><c> these</c><00:42:52.180><c> collections</c>

00:42:54.020 --> 00:42:54.030 align:start position:0%
api's that modify these collections
 

00:42:54.030 --> 00:42:56.670 align:start position:0%
api's that modify these collections
alright<00:42:55.030><c> so</c><00:42:55.240><c> here</c><00:42:55.540><c> is</c><00:42:55.570><c> here's</c><00:42:56.350><c> an</c><00:42:56.470><c> interesting</c>

00:42:56.670 --> 00:42:56.680 align:start position:0%
alright so here is here's an interesting
 

00:42:56.680 --> 00:43:01.680 align:start position:0%
alright so here is here's an interesting
wrinkle<00:42:58.860><c> that</c><00:42:59.860><c> bears</c><00:43:00.190><c> some</c><00:43:00.400><c> explanation</c><00:43:01.000><c> the</c>

00:43:01.680 --> 00:43:01.690 align:start position:0%
wrinkle that bears some explanation the
 

00:43:01.690 --> 00:43:05.310 align:start position:0%
wrinkle that bears some explanation the
iteration<00:43:02.380><c> order</c><00:43:02.740><c> of</c><00:43:02.920><c> the</c><00:43:03.760><c> hashed</c><00:43:04.360><c> set</c><00:43:05.050><c> and</c>

00:43:05.310 --> 00:43:05.320 align:start position:0%
iteration order of the hashed set and
 

00:43:05.320 --> 00:43:07.980 align:start position:0%
iteration order of the hashed set and
map<00:43:05.740><c> implementations</c><00:43:06.550><c> that</c><00:43:06.760><c> are</c><00:43:07.420><c> that</c><00:43:07.870><c> are</c>

00:43:07.980 --> 00:43:07.990 align:start position:0%
map implementations that are that are
 

00:43:07.990 --> 00:43:09.810 align:start position:0%
map implementations that are that are
returned<00:43:08.320><c> by</c><00:43:08.620><c> the</c><00:43:08.680><c> new</c><00:43:08.980><c> collection</c><00:43:09.310><c> factories</c>

00:43:09.810 --> 00:43:09.820 align:start position:0%
returned by the new collection factories
 

00:43:09.820 --> 00:43:12.330 align:start position:0%
returned by the new collection factories
the<00:43:10.300><c> iteration</c><00:43:10.780><c> order</c><00:43:11.020><c> is</c><00:43:11.200><c> randomized</c><00:43:11.950><c> and</c><00:43:12.190><c> it</c>

00:43:12.330 --> 00:43:12.340 align:start position:0%
the iteration order is randomized and it
 

00:43:12.340 --> 00:43:16.050 align:start position:0%
the iteration order is randomized and it
literally<00:43:12.880><c> is</c><00:43:13.060><c> randomized</c><00:43:14.190><c> now</c><00:43:15.190><c> if</c><00:43:15.490><c> you</c><00:43:15.790><c> look</c>

00:43:16.050 --> 00:43:16.060 align:start position:0%
literally is randomized now if you look
 

00:43:16.060 --> 00:43:18.720 align:start position:0%
literally is randomized now if you look
at<00:43:16.300><c> sets</c><00:43:16.780><c> and</c><00:43:17.050><c> maps</c><00:43:17.230><c> in</c><00:43:17.530><c> the</c><00:43:17.920><c> existing</c>

00:43:18.720 --> 00:43:18.730 align:start position:0%
at sets and maps in the existing
 

00:43:18.730 --> 00:43:21.150 align:start position:0%
at sets and maps in the existing
collection<00:43:19.120><c> framework</c><00:43:19.570><c> then</c><00:43:20.140><c> there's</c><00:43:20.980><c> some</c>

00:43:21.150 --> 00:43:21.160 align:start position:0%
collection framework then there's some
 

00:43:21.160 --> 00:43:22.860 align:start position:0%
collection framework then there's some
words<00:43:21.340><c> in</c><00:43:21.460><c> there</c><00:43:21.640><c> about</c><00:43:21.850><c> the</c><00:43:21.970><c> iteration</c><00:43:22.570><c> order</c>

00:43:22.860 --> 00:43:22.870 align:start position:0%
words in there about the iteration order
 

00:43:22.870 --> 00:43:25.560 align:start position:0%
words in there about the iteration order
is<00:43:23.020><c> unspecified</c><00:43:23.800><c> but</c><00:43:24.700><c> historically</c><00:43:25.300><c> the</c>

00:43:25.560 --> 00:43:25.570 align:start position:0%
is unspecified but historically the
 

00:43:25.570 --> 00:43:27.830 align:start position:0%
is unspecified but historically the
iteration<00:43:26.080><c> order</c><00:43:26.350><c> has</c><00:43:26.800><c> been</c><00:43:27.070><c> pretty</c><00:43:27.340><c> stable</c>

00:43:27.830 --> 00:43:27.840 align:start position:0%
iteration order has been pretty stable
 

00:43:27.840 --> 00:43:32.370 align:start position:0%
iteration order has been pretty stable
so<00:43:28.840><c> from</c><00:43:29.710><c> from</c><00:43:30.280><c> if</c><00:43:31.210><c> you</c><00:43:31.390><c> iterate</c><00:43:31.840><c> over</c><00:43:32.050><c> the</c>

00:43:32.370 --> 00:43:32.380 align:start position:0%
so from from if you iterate over the
 

00:43:32.380 --> 00:43:33.750 align:start position:0%
so from from if you iterate over the
same<00:43:32.560><c> collection</c><00:43:32.740><c> multiple</c><00:43:33.220><c> times</c><00:43:33.430><c> it</c><00:43:33.670><c> will</c>

00:43:33.750 --> 00:43:33.760 align:start position:0%
same collection multiple times it will
 

00:43:33.760 --> 00:43:34.740 align:start position:0%
same collection multiple times it will
be<00:43:33.880><c> in</c><00:43:33.970><c> the</c><00:43:34.060><c> same</c><00:43:34.240><c> order</c>

00:43:34.740 --> 00:43:34.750 align:start position:0%
be in the same order
 

00:43:34.750 --> 00:43:38.040 align:start position:0%
be in the same order
even<00:43:35.410><c> from</c><00:43:35.740><c> run</c><00:43:36.010><c> to</c><00:43:36.040><c> run</c><00:43:36.190><c> or</c><00:43:36.670><c> even</c><00:43:37.360><c> from</c><00:43:37.570><c> JDK</c>

00:43:38.040 --> 00:43:38.050 align:start position:0%
even from run to run or even from JDK
 

00:43:38.050 --> 00:43:40.800 align:start position:0%
even from run to run or even from JDK
release<00:43:38.440><c> to</c><00:43:38.680><c> JDK</c><00:43:39.070><c> release</c><00:43:39.450><c> if</c><00:43:40.450><c> you</c><00:43:40.570><c> put</c><00:43:40.690><c> the</c>

00:43:40.800 --> 00:43:40.810 align:start position:0%
release to JDK release if you put the
 

00:43:40.810 --> 00:43:43.050 align:start position:0%
release to JDK release if you put the
same<00:43:41.020><c> elements</c><00:43:41.590><c> into</c><00:43:41.980><c> a</c><00:43:42.010><c> hash</c><00:43:42.340><c> map</c><00:43:42.580><c> or</c><00:43:42.850><c> hash</c>

00:43:43.050 --> 00:43:43.060 align:start position:0%
same elements into a hash map or hash
 

00:43:43.060 --> 00:43:45.240 align:start position:0%
same elements into a hash map or hash
set<00:43:43.390><c> they'll</c><00:43:43.960><c> probably</c><00:43:44.380><c> come</c><00:43:44.860><c> out</c><00:43:44.890><c> in</c><00:43:45.160><c> the</c>

00:43:45.240 --> 00:43:45.250 align:start position:0%
set they'll probably come out in the
 

00:43:45.250 --> 00:43:47.670 align:start position:0%
set they'll probably come out in the
same<00:43:45.400><c> order</c><00:43:45.460><c> and</c><00:43:46.300><c> the</c><00:43:46.390><c> problem</c><00:43:46.780><c> is</c><00:43:46.960><c> that</c><00:43:47.290><c> a</c><00:43:47.500><c> lot</c>

00:43:47.670 --> 00:43:47.680 align:start position:0%
same order and the problem is that a lot
 

00:43:47.680 --> 00:43:50.220 align:start position:0%
same order and the problem is that a lot
of<00:43:47.800><c> code</c><00:43:48.040><c> grows</c><00:43:48.460><c> to</c><00:43:48.760><c> depend</c><00:43:49.120><c> on</c><00:43:49.480><c> very</c><00:43:49.900><c> stable</c>

00:43:50.220 --> 00:43:50.230 align:start position:0%
of code grows to depend on very stable
 

00:43:50.230 --> 00:43:52.520 align:start position:0%
of code grows to depend on very stable
iteration<00:43:50.920><c> order</c><00:43:51.190><c> and</c><00:43:51.370><c> from</c><00:43:52.090><c> time</c><00:43:52.270><c> to</c><00:43:52.450><c> time</c>

00:43:52.520 --> 00:43:52.530 align:start position:0%
iteration order and from time to time
 

00:43:52.530 --> 00:43:54.480 align:start position:0%
iteration order and from time to time
something<00:43:53.530><c> will</c><00:43:53.650><c> happen</c><00:43:53.830><c> that</c><00:43:54.130><c> will</c><00:43:54.280><c> change</c>

00:43:54.480 --> 00:43:54.490 align:start position:0%
something will happen that will change
 

00:43:54.490 --> 00:43:56.610 align:start position:0%
something will happen that will change
the<00:43:54.700><c> iteration</c><00:43:55.150><c> order</c><00:43:55.390><c> like</c><00:43:55.810><c> if</c><00:43:56.050><c> your</c><00:43:56.200><c> program</c>

00:43:56.610 --> 00:43:56.620 align:start position:0%
the iteration order like if your program
 

00:43:56.620 --> 00:43:59.520 align:start position:0%
the iteration order like if your program
gets<00:43:56.950><c> different</c><00:43:57.550><c> input</c><00:43:57.970><c> it</c><00:43:58.600><c> might</c><00:43:59.050><c> cause</c><00:43:59.260><c> the</c>

00:43:59.520 --> 00:43:59.530 align:start position:0%
gets different input it might cause the
 

00:43:59.530 --> 00:44:02.010 align:start position:0%
gets different input it might cause the
hash<00:44:00.010><c> set</c><00:44:00.220><c> to</c><00:44:00.400><c> the</c><00:44:01.090><c> half</c><00:44:01.210><c> of</c><00:44:01.360><c> the</c><00:44:01.450><c> hash</c><00:44:01.600><c> set</c><00:44:01.840><c> or</c>

00:44:02.010 --> 00:44:02.020 align:start position:0%
hash set to the half of the hash set or
 

00:44:02.020 --> 00:44:04.710 align:start position:0%
hash set to the half of the hash set or
hash<00:44:02.140><c> map</c><00:44:02.410><c> to</c><00:44:02.950><c> rehash</c><00:44:03.790><c> everything</c><00:44:04.030><c> and</c><00:44:04.540><c> then</c>

00:44:04.710 --> 00:44:04.720 align:start position:0%
hash map to rehash everything and then
 

00:44:04.720 --> 00:44:05.850 align:start position:0%
hash map to rehash everything and then
things<00:44:05.020><c> will</c><00:44:05.110><c> come</c><00:44:05.260><c> out</c><00:44:05.380><c> in</c><00:44:05.680><c> a</c><00:44:05.740><c> different</c>

00:44:05.850 --> 00:44:05.860 align:start position:0%
things will come out in a different
 

00:44:05.860 --> 00:44:09.300 align:start position:0%
things will come out in a different
order<00:44:06.190><c> and</c><00:44:06.460><c> your</c><00:44:07.030><c> program</c><00:44:07.660><c> will</c><00:44:07.810><c> break</c><00:44:08.050><c> or</c><00:44:08.320><c> in</c>

00:44:09.300 --> 00:44:09.310 align:start position:0%
order and your program will break or in
 

00:44:09.310 --> 00:44:11.280 align:start position:0%
order and your program will break or in
the<00:44:09.460><c> JDK</c><00:44:09.910><c> sometimes</c><00:44:10.510><c> we've</c><00:44:10.720><c> had</c><00:44:10.930><c> to</c><00:44:11.110><c> make</c><00:44:11.230><c> some</c>

00:44:11.280 --> 00:44:11.290 align:start position:0%
the JDK sometimes we've had to make some
 

00:44:11.290 --> 00:44:13.350 align:start position:0%
the JDK sometimes we've had to make some
performance<00:44:12.250><c> enhancements</c><00:44:12.940><c> or</c><00:44:13.120><c> some</c>

00:44:13.350 --> 00:44:13.360 align:start position:0%
performance enhancements or some
 

00:44:13.360 --> 00:44:15.300 align:start position:0%
performance enhancements or some
security<00:44:13.990><c> vulnerabilities</c><00:44:14.770><c> or</c><00:44:14.950><c> something</c>

00:44:15.300 --> 00:44:15.310 align:start position:0%
security vulnerabilities or something
 

00:44:15.310 --> 00:44:17.580 align:start position:0%
security vulnerabilities or something
where<00:44:15.760><c> we</c><00:44:15.910><c> would</c><00:44:16.060><c> change</c><00:44:16.390><c> the</c><00:44:16.840><c> iteration</c>

00:44:17.580 --> 00:44:17.590 align:start position:0%
where we would change the iteration
 

00:44:17.590 --> 00:44:19.800 align:start position:0%
where we would change the iteration
order<00:44:17.860><c> of</c><00:44:18.040><c> a</c><00:44:18.100><c> hash</c><00:44:18.400><c> map</c><00:44:18.640><c> and</c><00:44:18.940><c> people</c><00:44:19.480><c> yell</c><00:44:19.660><c> at</c>

00:44:19.800 --> 00:44:19.810 align:start position:0%
order of a hash map and people yell at
 

00:44:19.810 --> 00:44:21.090 align:start position:0%
order of a hash map and people yell at
us<00:44:19.900><c> a</c><00:44:19.990><c> lot</c><00:44:20.170><c> when</c><00:44:20.410><c> you</c><00:44:20.500><c> did</c><00:44:20.650><c> that</c><00:44:20.800><c> because</c><00:44:21.070><c> you</c>

00:44:21.090 --> 00:44:21.100 align:start position:0%
us a lot when you did that because you
 

00:44:21.100 --> 00:44:22.350 align:start position:0%
us a lot when you did that because you
broke<00:44:21.520><c> our</c><00:44:21.700><c> code</c><00:44:21.940><c> it's</c><00:44:22.150><c> like</c>

00:44:22.350 --> 00:44:22.360 align:start position:0%
broke our code it's like
 

00:44:22.360 --> 00:44:24.780 align:start position:0%
broke our code it's like
well<00:44:22.510><c> you</c><00:44:23.170><c> know</c><00:44:23.290><c> we</c><00:44:23.950><c> come</c><00:44:24.130><c> back</c><00:44:24.310><c> with</c><00:44:24.490><c> a</c><00:44:24.550><c> finger</c>

00:44:24.780 --> 00:44:24.790 align:start position:0%
well you know we come back with a finger
 

00:44:24.790 --> 00:44:26.730 align:start position:0%
well you know we come back with a finger
right<00:44:24.910><c> yeah</c><00:44:25.540><c> you're</c><00:44:25.900><c> not</c><00:44:26.050><c> supposed</c><00:44:26.470><c> to</c><00:44:26.560><c> just</c>

00:44:26.730 --> 00:44:26.740 align:start position:0%
right yeah you're not supposed to just
 

00:44:26.740 --> 00:44:28.620 align:start position:0%
right yeah you're not supposed to just
hand<00:44:26.950><c> on</c><00:44:27.130><c> the</c><00:44:27.280><c> iteration</c><00:44:27.760><c> or</c><00:44:27.850><c> but</c><00:44:28.240><c> but</c><00:44:28.420><c> we</c>

00:44:28.620 --> 00:44:28.630 align:start position:0%
hand on the iteration or but but we
 

00:44:28.630 --> 00:44:30.540 align:start position:0%
hand on the iteration or but but we
can't<00:44:28.900><c> we</c><00:44:29.320><c> can't</c><00:44:29.590><c> take</c><00:44:29.770><c> that</c><00:44:29.890><c> line</c><00:44:30.100><c> too</c><00:44:30.310><c> hard</c>

00:44:30.540 --> 00:44:30.550 align:start position:0%
can't we can't take that line too hard
 

00:44:30.550 --> 00:44:32.190 align:start position:0%
can't we can't take that line too hard
because<00:44:30.760><c> when</c><00:44:31.180><c> we</c><00:44:31.300><c> change</c><00:44:31.510><c> the</c><00:44:31.660><c> iteration</c><00:44:32.110><c> of</c>

00:44:32.190 --> 00:44:32.200 align:start position:0%
because when we change the iteration of
 

00:44:32.200 --> 00:44:36.540 align:start position:0%
because when we change the iteration of
hashmap<00:44:32.950><c> our</c><00:44:33.160><c> own</c><00:44:33.670><c> code</c><00:44:34.030><c> breaks</c><00:44:34.740><c> right</c><00:44:35.740><c> and</c><00:44:36.010><c> so</c>

00:44:36.540 --> 00:44:36.550 align:start position:0%
hashmap our own code breaks right and so
 

00:44:36.550 --> 00:44:39.480 align:start position:0%
hashmap our own code breaks right and so
what<00:44:36.730><c> happens</c><00:44:37.120><c> is</c><00:44:37.270><c> it's</c><00:44:37.480><c> like</c><00:44:37.630><c> oh</c><00:44:38.250><c> where's</c><00:44:39.250><c> the</c>

00:44:39.480 --> 00:44:39.490 align:start position:0%
what happens is it's like oh where's the
 

00:44:39.490 --> 00:44:41.580 align:start position:0%
what happens is it's like oh where's the
where's<00:44:39.880><c> the</c><00:44:40.060><c> dependent</c><00:44:40.600><c> interdependent</c><00:44:41.200><c> in</c>

00:44:41.580 --> 00:44:41.590 align:start position:0%
where's the dependent interdependent in
 

00:44:41.590 --> 00:44:43.050 align:start position:0%
where's the dependent interdependent in
ordered<00:44:41.890><c> pendency</c><00:44:42.280><c> in</c><00:44:42.340><c> this</c><00:44:42.460><c> code</c><00:44:42.670><c> I</c><00:44:42.910><c> don't</c>

00:44:43.050 --> 00:44:43.060 align:start position:0%
ordered pendency in this code I don't
 

00:44:43.060 --> 00:44:44.910 align:start position:0%
ordered pendency in this code I don't
know<00:44:43.120><c> where</c><00:44:43.300><c> it</c><00:44:43.390><c> is</c><00:44:43.510><c> just</c><00:44:44.110><c> just</c><00:44:44.530><c> change</c><00:44:44.770><c> it</c><00:44:44.890><c> to</c>

00:44:44.910 --> 00:44:44.920 align:start position:0%
know where it is just just change it to
 

00:44:44.920 --> 00:44:46.410 align:start position:0%
know where it is just just change it to
a<00:44:45.040><c> linked</c><00:44:45.400><c> hash</c><00:44:45.580><c> map</c><00:44:45.880><c> that</c><00:44:46.150><c> will</c><00:44:46.240><c> give</c><00:44:46.390><c> us</c>

00:44:46.410 --> 00:44:46.420 align:start position:0%
a linked hash map that will give us
 

00:44:46.420 --> 00:44:48.000 align:start position:0%
a linked hash map that will give us
stable<00:44:46.840><c> iteration</c><00:44:47.290><c> order</c><00:44:47.470><c> and</c><00:44:47.680><c> then</c><00:44:47.890><c> the</c>

00:44:48.000 --> 00:44:48.010 align:start position:0%
stable iteration order and then the
 

00:44:48.010 --> 00:44:51.240 align:start position:0%
stable iteration order and then the
problems<00:44:48.400><c> go</c><00:44:48.610><c> away</c><00:44:48.640><c> and</c><00:44:49.180><c> it's</c><00:44:49.690><c> like</c><00:44:49.870><c> ah</c><00:44:50.250><c> so</c>

00:44:51.240 --> 00:44:51.250 align:start position:0%
problems go away and it's like ah so
 

00:44:51.250 --> 00:44:52.950 align:start position:0%
problems go away and it's like ah so
that's<00:44:51.370><c> that's</c><00:44:51.670><c> really</c><00:44:52.030><c> uncomfortable</c><00:44:52.600><c> but</c>

00:44:52.950 --> 00:44:52.960 align:start position:0%
that's that's really uncomfortable but
 

00:44:52.960 --> 00:44:56.970 align:start position:0%
that's that's really uncomfortable but
the<00:44:53.080><c> fact</c><00:44:53.350><c> is</c><00:44:53.910><c> we</c><00:44:54.910><c> have</c><00:44:55.000><c> the</c><00:44:55.120><c> worst</c><00:44:55.330><c> of</c><00:44:55.980><c> prior</c>

00:44:56.970 --> 00:44:56.980 align:start position:0%
the fact is we have the worst of prior
 

00:44:56.980 --> 00:44:58.890 align:start position:0%
the fact is we have the worst of prior
to<00:44:57.190><c> Java</c><00:44:57.400><c> 9</c><00:44:57.640><c> we</c><00:44:57.910><c> have</c><00:44:58.030><c> the</c><00:44:58.150><c> worst</c><00:44:58.630><c> of</c><00:44:58.840><c> both</c>

00:44:58.890 --> 00:44:58.900 align:start position:0%
to Java 9 we have the worst of both
 

00:44:58.900 --> 00:45:01.770 align:start position:0%
to Java 9 we have the worst of both
worlds<00:44:59.500><c> we</c><00:44:59.860><c> have</c><00:45:00.270><c> iteration</c><00:45:01.270><c> order</c><00:45:01.510><c> that</c><00:45:01.660><c> is</c>

00:45:01.770 --> 00:45:01.780 align:start position:0%
worlds we have iteration order that is
 

00:45:01.780 --> 00:45:04.740 align:start position:0%
worlds we have iteration order that is
unspecified<00:45:02.260><c> but</c><00:45:02.980><c> that</c><00:45:03.460><c> is</c><00:45:03.580><c> stable</c><00:45:04.120><c> enough</c><00:45:04.180><c> to</c>

00:45:04.740 --> 00:45:04.750 align:start position:0%
unspecified but that is stable enough to
 

00:45:04.750 --> 00:45:07.830 align:start position:0%
unspecified but that is stable enough to
low<00:45:05.110><c> people</c><00:45:05.410><c> into</c><00:45:05.740><c> thinking</c><00:45:06.130><c> that</c><00:45:06.160><c> that</c><00:45:06.970><c> it</c>

00:45:07.830 --> 00:45:07.840 align:start position:0%
low people into thinking that that it
 

00:45:07.840 --> 00:45:09.570 align:start position:0%
low people into thinking that that it
actually<00:45:08.050><c> is</c><00:45:08.350><c> stable</c><00:45:08.770><c> and</c><00:45:08.890><c> then</c><00:45:09.280><c> when</c><00:45:09.460><c> it</c>

00:45:09.570 --> 00:45:09.580 align:start position:0%
actually is stable and then when it
 

00:45:09.580 --> 00:45:10.110 align:start position:0%
actually is stable and then when it
changes

00:45:10.110 --> 00:45:10.120 align:start position:0%
changes
 

00:45:10.120 --> 00:45:13.530 align:start position:0%
changes
lots<00:45:10.480><c> of</c><00:45:10.630><c> stuff</c><00:45:10.840><c> breaks</c><00:45:11.400><c> so</c><00:45:12.400><c> the</c><00:45:12.940><c> solution</c><00:45:13.450><c> to</c>

00:45:13.530 --> 00:45:13.540 align:start position:0%
lots of stuff breaks so the solution to
 

00:45:13.540 --> 00:45:15.720 align:start position:0%
lots of stuff breaks so the solution to
that<00:45:13.600><c> for</c><00:45:14.350><c> the</c><00:45:14.440><c> new</c><00:45:14.680><c> collections</c><00:45:15.160><c> only</c><00:45:15.490><c> is</c>

00:45:15.720 --> 00:45:15.730 align:start position:0%
that for the new collections only is
 

00:45:15.730 --> 00:45:18.330 align:start position:0%
that for the new collections only is
that<00:45:16.360><c> the</c><00:45:16.570><c> iteration</c><00:45:17.140><c> order</c><00:45:17.410><c> is</c><00:45:17.560><c> randomized</c>

00:45:18.330 --> 00:45:18.340 align:start position:0%
that the iteration order is randomized
 

00:45:18.340 --> 00:45:21.530 align:start position:0%
that the iteration order is randomized
so<00:45:19.000><c> what</c><00:45:19.090><c> happens</c><00:45:19.420><c> is</c><00:45:19.540><c> that</c><00:45:19.570><c> the</c><00:45:19.920><c> @vm</c><00:45:20.920><c> launch</c>

00:45:21.530 --> 00:45:21.540 align:start position:0%
so what happens is that the @vm launch
 

00:45:21.540 --> 00:45:24.630 align:start position:0%
so what happens is that the @vm launch
basically<00:45:22.540><c> gets</c><00:45:22.780><c> a</c><00:45:22.960><c> random</c><00:45:23.370><c> random</c><00:45:24.370><c> number</c>

00:45:24.630 --> 00:45:24.640 align:start position:0%
basically gets a random random number
 

00:45:24.640 --> 00:45:27.120 align:start position:0%
basically gets a random random number
which<00:45:24.820><c> is</c><00:45:25.210><c> XOR</c><00:45:26.020><c> it</c><00:45:26.110><c> into</c><00:45:26.350><c> the</c><00:45:26.470><c> internet</c><00:45:26.860><c> hash</c>

00:45:27.120 --> 00:45:27.130 align:start position:0%
which is XOR it into the internet hash
 

00:45:27.130 --> 00:45:30.300 align:start position:0%
which is XOR it into the internet hash
code<00:45:27.370><c> and</c><00:45:27.640><c> so</c><00:45:28.210><c> the</c><00:45:28.480><c> effect</c><00:45:28.720><c> is</c><00:45:28.840><c> that</c><00:45:28.950><c> from</c><00:45:29.950><c> one</c>

00:45:30.300 --> 00:45:30.310 align:start position:0%
code and so the effect is that from one
 

00:45:30.310 --> 00:45:33.600 align:start position:0%
code and so the effect is that from one
run<00:45:30.940><c> of</c><00:45:31.150><c> the</c><00:45:31.240><c> JVM</c><00:45:31.600><c> to</c><00:45:31.840><c> the</c><00:45:31.930><c> next</c><00:45:32.290><c> the</c><00:45:32.980><c> iteration</c>

00:45:33.600 --> 00:45:33.610 align:start position:0%
run of the JVM to the next the iteration
 

00:45:33.610 --> 00:45:37.110 align:start position:0%
run of the JVM to the next the iteration
order<00:45:33.910><c> of</c><00:45:34.260><c> the</c><00:45:35.260><c> set</c><00:45:35.530><c> and</c><00:45:35.770><c> maps</c><00:45:36.160><c> returned</c><00:45:36.790><c> by</c>

00:45:37.110 --> 00:45:37.120 align:start position:0%
order of the set and maps returned by
 

00:45:37.120 --> 00:45:39.990 align:start position:0%
order of the set and maps returned by
the<00:45:37.600><c> new</c><00:45:37.750><c> factories</c><00:45:38.340><c> the</c><00:45:39.340><c> iteration</c><00:45:39.790><c> order</c>

00:45:39.990 --> 00:45:40.000 align:start position:0%
the new factories the iteration order
 

00:45:40.000 --> 00:45:42.480 align:start position:0%
the new factories the iteration order
will<00:45:40.210><c> change</c><00:45:40.240><c> from</c><00:45:40.720><c> one</c><00:45:41.260><c> JVM</c><00:45:41.770><c> run</c><00:45:41.980><c> to</c><00:45:42.100><c> the</c><00:45:42.190><c> next</c>

00:45:42.480 --> 00:45:42.490 align:start position:0%
will change from one JVM run to the next
 

00:45:42.490 --> 00:45:45.270 align:start position:0%
will change from one JVM run to the next
and<00:45:42.670><c> so</c><00:45:42.700><c> the</c><00:45:43.270><c> hope</c><00:45:43.450><c> is</c><00:45:43.810><c> that</c><00:45:44.050><c> this</c><00:45:44.440><c> will</c><00:45:44.680><c> flush</c>

00:45:45.270 --> 00:45:45.280 align:start position:0%
and so the hope is that this will flush
 

00:45:45.280 --> 00:45:48.420 align:start position:0%
and so the hope is that this will flush
out<00:45:45.490><c> any</c><00:45:46.060><c> any</c><00:45:46.840><c> code</c><00:45:47.440><c> that</c><00:45:47.680><c> has</c><00:45:47.830><c> latent</c>

00:45:48.420 --> 00:45:48.430 align:start position:0%
out any any code that has latent
 

00:45:48.430 --> 00:45:50.790 align:start position:0%
out any any code that has latent
dependencies<00:45:49.090><c> on</c><00:45:49.360><c> iteration</c><00:45:49.990><c> order</c><00:45:50.260><c> and</c><00:45:50.440><c> that</c>

00:45:50.790 --> 00:45:50.800 align:start position:0%
dependencies on iteration order and that
 

00:45:50.800 --> 00:45:52.650 align:start position:0%
dependencies on iteration order and that
those<00:45:51.340><c> problems</c><00:45:51.790><c> will</c><00:45:52.030><c> be</c><00:45:52.150><c> flushed</c><00:45:52.480><c> out</c>

00:45:52.650 --> 00:45:52.660 align:start position:0%
those problems will be flushed out
 

00:45:52.660 --> 00:45:54.660 align:start position:0%
those problems will be flushed out
during<00:45:53.200><c> development</c><00:45:53.770><c> and</c><00:45:53.890><c> testing</c><00:45:54.280><c> and</c><00:45:54.520><c> so</c>

00:45:54.660 --> 00:45:54.670 align:start position:0%
during development and testing and so
 

00:45:54.670 --> 00:45:57.330 align:start position:0%
during development and testing and so
that<00:45:54.820><c> they</c><00:45:54.970><c> they</c><00:45:55.840><c> won't</c><00:45:56.140><c> come</c><00:45:57.040><c> out</c><00:45:57.130><c> in</c>

00:45:57.330 --> 00:45:57.340 align:start position:0%
that they they won't come out in
 

00:45:57.340 --> 00:46:00.360 align:start position:0%
that they they won't come out in
production<00:45:57.850><c> but</c><00:45:58.780><c> also</c><00:45:58.810><c> actually</c><00:45:59.740><c> it's</c><00:46:00.130><c> also</c>

00:46:00.360 --> 00:46:00.370 align:start position:0%
production but also actually it's also
 

00:46:00.370 --> 00:46:02.160 align:start position:0%
production but also actually it's also
buying<00:46:00.670><c> ourselves</c><00:46:00.910><c> some</c><00:46:01.390><c> flexibility</c><00:46:01.990><c> here</c>

00:46:02.160 --> 00:46:02.170 align:start position:0%
buying ourselves some flexibility here
 

00:46:02.170 --> 00:46:04.320 align:start position:0%
buying ourselves some flexibility here
which<00:46:02.380><c> is</c><00:46:02.590><c> we</c><00:46:03.280><c> may</c><00:46:03.430><c> want</c><00:46:03.640><c> to</c><00:46:03.760><c> go</c><00:46:03.880><c> in</c><00:46:04.090><c> and</c>

00:46:04.320 --> 00:46:04.330 align:start position:0%
which is we may want to go in and
 

00:46:04.330 --> 00:46:08.010 align:start position:0%
which is we may want to go in and
reorganize<00:46:05.050><c> the</c><00:46:05.350><c> internals</c><00:46:06.070><c> of</c><00:46:06.250><c> of</c><00:46:07.210><c> the</c><00:46:07.870><c> way</c>

00:46:08.010 --> 00:46:08.020 align:start position:0%
reorganize the internals of of the way
 

00:46:08.020 --> 00:46:10.380 align:start position:0%
reorganize the internals of of the way
that<00:46:08.380><c> entries</c><00:46:08.800><c> are</c><00:46:08.980><c> stored</c><00:46:09.340><c> in</c><00:46:09.700><c> these</c><00:46:09.880><c> maps</c><00:46:10.120><c> or</c>

00:46:10.380 --> 00:46:10.390 align:start position:0%
that entries are stored in these maps or
 

00:46:10.390 --> 00:46:12.270 align:start position:0%
that entries are stored in these maps or
sets<00:46:10.660><c> and</c><00:46:10.930><c> we</c><00:46:11.350><c> want</c><00:46:11.530><c> the</c><00:46:11.650><c> freedom</c><00:46:11.890><c> to</c><00:46:12.040><c> be</c><00:46:12.220><c> able</c>

00:46:12.270 --> 00:46:12.280 align:start position:0%
sets and we want the freedom to be able
 

00:46:12.280 --> 00:46:14.640 align:start position:0%
sets and we want the freedom to be able
to<00:46:12.460><c> do</c><00:46:12.640><c> that</c><00:46:12.910><c> and</c><00:46:13.270><c> get</c><00:46:13.750><c> you</c><00:46:13.960><c> you</c><00:46:14.350><c> know</c><00:46:14.440><c> better</c>

00:46:14.640 --> 00:46:14.650 align:start position:0%
to do that and get you you know better
 

00:46:14.650 --> 00:46:16.650 align:start position:0%
to do that and get you you know better
you<00:46:15.250><c> know</c><00:46:15.340><c> better</c><00:46:15.580><c> performance</c><00:46:16.120><c> better</c><00:46:16.360><c> space</c>

00:46:16.650 --> 00:46:16.660 align:start position:0%
you know better performance better space
 

00:46:16.660 --> 00:46:18.600 align:start position:0%
you know better performance better space
efficiency<00:46:17.080><c> and</c><00:46:17.320><c> so</c><00:46:17.440><c> forth</c><00:46:17.710><c> without</c><00:46:18.070><c> having</c>

00:46:18.600 --> 00:46:18.610 align:start position:0%
efficiency and so forth without having
 

00:46:18.610 --> 00:46:20.280 align:start position:0%
efficiency and so forth without having
to<00:46:18.670><c> worry</c><00:46:18.850><c> about</c><00:46:18.970><c> preserving</c><00:46:19.600><c> iteration</c>

00:46:20.280 --> 00:46:20.290 align:start position:0%
to worry about preserving iteration
 

00:46:20.290 --> 00:46:21.780 align:start position:0%
to worry about preserving iteration
order<00:46:20.560><c> so</c><00:46:20.950><c> that's</c><00:46:21.070><c> one</c><00:46:21.280><c> of</c><00:46:21.310><c> the</c><00:46:21.430><c> toughest</c>

00:46:21.780 --> 00:46:21.790 align:start position:0%
order so that's one of the toughest
 

00:46:21.790 --> 00:46:24.210 align:start position:0%
order so that's one of the toughest
things<00:46:21.820><c> if</c><00:46:22.480><c> if</c><00:46:22.990><c> you</c><00:46:23.650><c> have</c><00:46:23.800><c> to</c><00:46:23.950><c> preserve</c>

00:46:24.210 --> 00:46:24.220 align:start position:0%
things if if you have to preserve
 

00:46:24.220 --> 00:46:26.460 align:start position:0%
things if if you have to preserve
iteration<00:46:24.760><c> order</c><00:46:24.970><c> that's</c><00:46:25.150><c> a</c><00:46:25.270><c> cost</c><00:46:25.690><c> that</c><00:46:26.230><c> needs</c>

00:46:26.460 --> 00:46:26.470 align:start position:0%
iteration order that's a cost that needs
 

00:46:26.470 --> 00:46:29.490 align:start position:0%
iteration order that's a cost that needs
to<00:46:26.620><c> be</c><00:46:26.770><c> paid</c><00:46:27.330><c> even</c><00:46:28.330><c> if</c><00:46:28.780><c> it's</c><00:46:28.990><c> not</c><00:46:29.170><c> actually</c>

00:46:29.490 --> 00:46:29.500 align:start position:0%
to be paid even if it's not actually
 

00:46:29.500 --> 00:46:32.270 align:start position:0%
to be paid even if it's not actually
specified<00:46:30.280><c> and</c><00:46:30.640><c> so</c><00:46:31.030><c> we</c><00:46:31.180><c> wanted</c><00:46:31.450><c> to</c><00:46:31.510><c> avoid</c><00:46:31.870><c> that</c>

00:46:32.270 --> 00:46:32.280 align:start position:0%
specified and so we wanted to avoid that
 

00:46:32.280 --> 00:46:34.680 align:start position:0%
specified and so we wanted to avoid that
so<00:46:33.280><c> again</c><00:46:33.490><c> this</c><00:46:33.640><c> applies</c><00:46:33.910><c> only</c><00:46:34.090><c> to</c><00:46:34.270><c> the</c><00:46:34.480><c> new</c>

00:46:34.680 --> 00:46:34.690 align:start position:0%
so again this applies only to the new
 

00:46:34.690 --> 00:46:35.730 align:start position:0%
so again this applies only to the new
collections

00:46:35.730 --> 00:46:35.740 align:start position:0%
collections
 

00:46:35.740 --> 00:46:37.560 align:start position:0%
collections
returned<00:46:36.100><c> by</c><00:46:36.310><c> the</c><00:46:36.369><c> new</c><00:46:36.610><c> collections</c><00:46:37.210><c> factory</c>

00:46:37.560 --> 00:46:37.570 align:start position:0%
returned by the new collections factory
 

00:46:37.570 --> 00:46:40.260 align:start position:0%
returned by the new collections factory
methods<00:46:37.930><c> the</c><00:46:38.320><c> existing</c><00:46:38.860><c> collections</c><00:46:39.340><c> you</c>

00:46:40.260 --> 00:46:40.270 align:start position:0%
methods the existing collections you
 

00:46:40.270 --> 00:46:41.609 align:start position:0%
methods the existing collections you
know<00:46:40.360><c> those</c><00:46:40.630><c> are</c><00:46:40.750><c> going</c><00:46:40.869><c> to</c><00:46:40.930><c> stay</c><00:46:41.110><c> the</c><00:46:41.230><c> same</c><00:46:41.260><c> I</c>

00:46:41.609 --> 00:46:41.619 align:start position:0%
know those are going to stay the same I
 

00:46:41.619 --> 00:46:43.410 align:start position:0%
know those are going to stay the same I
think<00:46:41.680><c> adding</c><00:46:42.430><c> randomized</c><00:46:42.850><c> iteration</c><00:46:43.330><c> of</c>

00:46:43.410 --> 00:46:43.420 align:start position:0%
think adding randomized iteration of
 

00:46:43.420 --> 00:46:46.350 align:start position:0%
think adding randomized iteration of
those<00:46:44.460><c> randomized</c><00:46:45.460><c> iteration</c><00:46:45.910><c> order</c><00:46:46.150><c> to</c><00:46:46.270><c> the</c>

00:46:46.350 --> 00:46:46.360 align:start position:0%
those randomized iteration order to the
 

00:46:46.360 --> 00:46:49.109 align:start position:0%
those randomized iteration order to the
existing<00:46:46.750><c> collections</c><00:46:47.200><c> is</c><00:46:47.460><c> is</c><00:46:48.460><c> not</c><00:46:48.640><c> something</c>

00:46:49.109 --> 00:46:49.119 align:start position:0%
existing collections is is not something
 

00:46:49.119 --> 00:46:51.120 align:start position:0%
existing collections is is not something
that<00:46:49.630><c> certainly</c><00:46:50.260><c> not</c><00:46:50.530><c> something</c><00:46:50.830><c> we're</c><00:46:50.980><c> going</c>

00:46:51.120 --> 00:46:51.130 align:start position:0%
that certainly not something we're going
 

00:46:51.130 --> 00:46:53.340 align:start position:0%
that certainly not something we're going
to<00:46:51.190><c> do</c><00:46:51.280><c> by</c><00:46:51.460><c> default</c><00:46:51.520><c> maybe</c><00:46:52.510><c> there</c><00:46:53.050><c> would</c><00:46:53.170><c> be</c><00:46:53.200><c> an</c>

00:46:53.340 --> 00:46:53.350 align:start position:0%
to do by default maybe there would be an
 

00:46:53.350 --> 00:46:56.700 align:start position:0%
to do by default maybe there would be an
opt-in<00:46:53.730><c> thing</c><00:46:54.730><c> for</c><00:46:55.110><c> for</c><00:46:56.110><c> debugging</c><00:46:56.560><c> purposes</c>

00:46:56.700 --> 00:46:56.710 align:start position:0%
opt-in thing for for debugging purposes
 

00:46:56.710 --> 00:46:59.540 align:start position:0%
opt-in thing for for debugging purposes
but<00:46:57.369><c> nothing</c><00:46:57.760><c> more</c><00:46:57.910><c> than</c><00:46:57.970><c> that</c>

00:46:59.540 --> 00:46:59.550 align:start position:0%
but nothing more than that
 

00:46:59.550 --> 00:47:01.980 align:start position:0%
but nothing more than that
okay<00:47:00.550><c> another</c><00:47:00.850><c> characteristic</c><00:47:01.390><c> of</c><00:47:01.720><c> the</c><00:47:01.869><c> new</c>

00:47:01.980 --> 00:47:01.990 align:start position:0%
okay another characteristic of the new
 

00:47:01.990 --> 00:47:04.760 align:start position:0%
okay another characteristic of the new
collections<00:47:02.470><c> is</c><00:47:02.710><c> that</c><00:47:02.920><c> nulls</c><00:47:03.310><c> are</c><00:47:03.700><c> disallowed</c>

00:47:04.760 --> 00:47:04.770 align:start position:0%
collections is that nulls are disallowed
 

00:47:04.770 --> 00:47:11.250 align:start position:0%
collections is that nulls are disallowed
so<00:47:05.770><c> I</c><00:47:08.220><c> think</c><00:47:09.220><c> in</c><00:47:09.430><c> retrospect</c><00:47:09.790><c> the</c><00:47:10.690><c> new</c>

00:47:11.250 --> 00:47:11.260 align:start position:0%
so I think in retrospect the new
 

00:47:11.260 --> 00:47:13.290 align:start position:0%
so I think in retrospect the new
collections<00:47:11.740><c> introduced</c><00:47:12.250><c> sorry</c><00:47:12.730><c> but</c><00:47:12.910><c> when</c>

00:47:13.290 --> 00:47:13.300 align:start position:0%
collections introduced sorry but when
 

00:47:13.300 --> 00:47:14.940 align:start position:0%
collections introduced sorry but when
the<00:47:13.390><c> collections</c><00:47:13.840><c> framework</c><00:47:14.020><c> was</c><00:47:14.500><c> originally</c>

00:47:14.940 --> 00:47:14.950 align:start position:0%
the collections framework was originally
 

00:47:14.950 --> 00:47:17.070 align:start position:0%
the collections framework was originally
introduced<00:47:15.310><c> back</c><00:47:15.490><c> in</c><00:47:15.550><c> one</c><00:47:15.820><c> point</c><00:47:16.060><c> to</c><00:47:16.300><c> the</c><00:47:16.869><c> main</c>

00:47:17.070 --> 00:47:17.080 align:start position:0%
introduced back in one point to the main
 

00:47:17.080 --> 00:47:19.859 align:start position:0%
introduced back in one point to the main
collections<00:47:17.560><c> did</c><00:47:17.950><c> allow</c><00:47:18.250><c> nulls</c><00:47:18.610><c> and</c><00:47:19.060><c> in</c>

00:47:19.859 --> 00:47:19.869 align:start position:0%
collections did allow nulls and in
 

00:47:19.869 --> 00:47:21.660 align:start position:0%
collections did allow nulls and in
retrospect<00:47:20.320><c> that's</c><00:47:20.680><c> that's</c><00:47:21.070><c> been</c><00:47:21.280><c> regarded</c>

00:47:21.660 --> 00:47:21.670 align:start position:0%
retrospect that's that's been regarded
 

00:47:21.670 --> 00:47:24.390 align:start position:0%
retrospect that's that's been regarded
as<00:47:21.790><c> a</c><00:47:21.850><c> mistake</c><00:47:22.560><c> nothing</c><00:47:23.560><c> recent</c><00:47:23.770><c> has</c><00:47:24.190><c> allowed</c>

00:47:24.390 --> 00:47:24.400 align:start position:0%
as a mistake nothing recent has allowed
 

00:47:24.400 --> 00:47:27.420 align:start position:0%
as a mistake nothing recent has allowed
allowed<00:47:25.240><c> nulls</c><00:47:25.540><c> in</c><00:47:25.950><c> particular</c><00:47:26.950><c> the</c><00:47:27.070><c> concur</c>

00:47:27.420 --> 00:47:27.430 align:start position:0%
allowed nulls in particular the concur
 

00:47:27.430 --> 00:47:29.040 align:start position:0%
allowed nulls in particular the concur
none<00:47:27.700><c> of</c><00:47:27.730><c> the</c><00:47:27.880><c> concurrent</c><00:47:28.150><c> collections</c><00:47:28.690><c> allow</c>

00:47:29.040 --> 00:47:29.050 align:start position:0%
none of the concurrent collections allow
 

00:47:29.050 --> 00:47:32.280 align:start position:0%
none of the concurrent collections allow
null<00:47:29.800><c> entries</c><00:47:30.310><c> and</c><00:47:30.810><c> the</c><00:47:31.810><c> reason</c><00:47:32.110><c> they're</c><00:47:32.260><c> a</c>

00:47:32.280 --> 00:47:32.290 align:start position:0%
null entries and the reason they're a
 

00:47:32.290 --> 00:47:34.440 align:start position:0%
null entries and the reason they're a
couple<00:47:32.500><c> reasons</c><00:47:32.619><c> that</c><00:47:32.950><c> one</c><00:47:33.190><c> is</c><00:47:33.430><c> null</c><00:47:33.940><c> shows</c><00:47:34.270><c> up</c>

00:47:34.440 --> 00:47:34.450 align:start position:0%
couple reasons that one is null shows up
 

00:47:34.450 --> 00:47:36.630 align:start position:0%
couple reasons that one is null shows up
in<00:47:34.660><c> special</c><00:47:35.110><c> kit</c><00:47:35.290><c> in</c><00:47:35.440><c> special</c><00:47:35.920><c> places</c><00:47:36.130><c> in</c><00:47:36.310><c> the</c>

00:47:36.630 --> 00:47:36.640 align:start position:0%
in special kit in special places in the
 

00:47:36.640 --> 00:47:40.950 align:start position:0%
in special kit in special places in the
api's<00:47:37.260><c> so</c><00:47:38.260><c> there's</c><00:47:38.440><c> the</c><00:47:38.800><c> case</c><00:47:39.460><c> of</c><00:47:39.730><c> math</c><00:47:40.000><c> get</c><00:47:40.570><c> if</c>

00:47:40.950 --> 00:47:40.960 align:start position:0%
api's so there's the case of math get if
 

00:47:40.960 --> 00:47:43.380 align:start position:0%
api's so there's the case of math get if
that<00:47:41.260><c> returns</c><00:47:41.619><c> null</c><00:47:42.010><c> does</c><00:47:42.760><c> that</c><00:47:42.910><c> mean</c><00:47:43.119><c> the</c>

00:47:43.380 --> 00:47:43.390 align:start position:0%
that returns null does that mean the
 

00:47:43.390 --> 00:47:46.230 align:start position:0%
that returns null does that mean the
entry<00:47:43.750><c> is</c><00:47:44.290><c> absent</c><00:47:44.859><c> or</c><00:47:45.400><c> does</c><00:47:45.820><c> it</c><00:47:45.910><c> mean</c><00:47:46.060><c> the</c>

00:47:46.230 --> 00:47:46.240 align:start position:0%
entry is absent or does it mean the
 

00:47:46.240 --> 00:47:47.880 align:start position:0%
entry is absent or does it mean the
entry<00:47:46.450><c> was</c><00:47:46.570><c> present</c><00:47:46.960><c> but</c><00:47:47.140><c> its</c><00:47:47.290><c> value</c><00:47:47.560><c> is</c><00:47:47.680><c> null</c>

00:47:47.880 --> 00:47:47.890 align:start position:0%
entry was present but its value is null
 

00:47:47.890 --> 00:47:49.620 align:start position:0%
entry was present but its value is null
so<00:47:48.550><c> you</c><00:47:48.609><c> have</c><00:47:48.790><c> to</c><00:47:48.940><c> you</c><00:47:49.150><c> have</c><00:47:49.180><c> to</c><00:47:49.300><c> do</c><00:47:49.450><c> something</c>

00:47:49.620 --> 00:47:49.630 align:start position:0%
so you have to you have to do something
 

00:47:49.630 --> 00:47:51.630 align:start position:0%
so you have to you have to do something
else<00:47:49.840><c> to</c><00:47:50.020><c> disambiguate</c><00:47:50.440><c> but</c><00:47:51.100><c> there</c><00:47:51.220><c> also</c><00:47:51.340><c> some</c>

00:47:51.630 --> 00:47:51.640 align:start position:0%
else to disambiguate but there also some
 

00:47:51.640 --> 00:47:54.030 align:start position:0%
else to disambiguate but there also some
things<00:47:51.850><c> in</c><00:47:52.150><c> the</c><00:47:52.750><c> especially</c><00:47:53.500><c> in</c><00:47:53.590><c> concurrent</c>

00:47:54.030 --> 00:47:54.040 align:start position:0%
things in the especially in concurrent
 

00:47:54.040 --> 00:47:58.800 align:start position:0%
things in the especially in concurrent
collections<00:47:55.350><c> the</c><00:47:56.760><c> like</c><00:47:57.760><c> map</c><00:47:58.180><c> dot</c><00:47:58.420><c> compute</c>

00:47:58.800 --> 00:47:58.810 align:start position:0%
collections the like map dot compute
 

00:47:58.810 --> 00:48:00.810 align:start position:0%
collections the like map dot compute
like<00:47:59.020><c> I</c><00:47:59.140><c> mentioned</c><00:47:59.500><c> before</c><00:47:59.770><c> if</c><00:48:00.040><c> if</c><00:48:00.580><c> your</c>

00:48:00.810 --> 00:48:00.820 align:start position:0%
like I mentioned before if if your
 

00:48:00.820 --> 00:48:02.670 align:start position:0%
like I mentioned before if if your
lambda<00:48:01.150><c> expression</c><00:48:01.510><c> returns</c><00:48:01.660><c> null</c><00:48:02.170><c> that</c><00:48:02.200><c> has</c>

00:48:02.670 --> 00:48:02.680 align:start position:0%
lambda expression returns null that has
 

00:48:02.680 --> 00:48:04.349 align:start position:0%
lambda expression returns null that has
the<00:48:02.800><c> effect</c><00:48:02.890><c> of</c><00:48:03.160><c> removing</c><00:48:03.730><c> the</c><00:48:03.850><c> entry</c><00:48:04.180><c> as</c>

00:48:04.349 --> 00:48:04.359 align:start position:0%
the effect of removing the entry as
 

00:48:04.359 --> 00:48:07.440 align:start position:0%
the effect of removing the entry as
opposed<00:48:04.869><c> to</c><00:48:05.190><c> storing</c><00:48:06.190><c> a</c><00:48:06.580><c> null</c><00:48:06.790><c> into</c><00:48:07.180><c> the</c><00:48:07.270><c> map</c>

00:48:07.440 --> 00:48:07.450 align:start position:0%
opposed to storing a null into the map
 

00:48:07.450 --> 00:48:11.370 align:start position:0%
opposed to storing a null into the map
and<00:48:07.750><c> so</c><00:48:08.640><c> null</c><00:48:09.640><c> is</c><00:48:09.940><c> is</c><00:48:10.210><c> very</c><00:48:10.780><c> important</c><00:48:11.109><c> special</c>

00:48:11.370 --> 00:48:11.380 align:start position:0%
and so null is is very important special
 

00:48:11.380 --> 00:48:14.330 align:start position:0%
and so null is is very important special
case<00:48:11.410><c> that's</c><00:48:11.800><c> useful</c><00:48:12.010><c> for</c><00:48:12.160><c> AP</c><00:48:12.490><c> is</c><00:48:12.670><c> in</c><00:48:13.000><c> that</c><00:48:13.119><c> way</c>

00:48:14.330 --> 00:48:14.340 align:start position:0%
case that's useful for AP is in that way
 

00:48:14.340 --> 00:48:17.670 align:start position:0%
case that's useful for AP is in that way
also<00:48:15.340><c> it's</c><00:48:16.300><c> really</c><00:48:16.570><c> useful</c><00:48:16.900><c> to</c><00:48:16.930><c> have</c><00:48:17.080><c> nulls</c>

00:48:17.670 --> 00:48:17.680 align:start position:0%
also it's really useful to have nulls
 

00:48:17.680 --> 00:48:19.590 align:start position:0%
also it's really useful to have nulls
inside<00:48:18.400><c> the</c><00:48:18.550><c> collection</c><00:48:18.940><c> as</c><00:48:19.090><c> special</c>

00:48:19.590 --> 00:48:19.600 align:start position:0%
inside the collection as special
 

00:48:19.600 --> 00:48:23.370 align:start position:0%
inside the collection as special
sentinels<00:48:20.190><c> and</c><00:48:21.190><c> so</c><00:48:21.460><c> it</c><00:48:21.820><c> makes</c><00:48:22.119><c> you</c><00:48:22.420><c> know</c><00:48:22.510><c> if</c>

00:48:23.370 --> 00:48:23.380 align:start position:0%
sentinels and so it makes you know if
 

00:48:23.380 --> 00:48:25.080 align:start position:0%
sentinels and so it makes you know if
you<00:48:23.560><c> actually</c><00:48:23.740><c> look</c><00:48:24.070><c> at</c><00:48:24.190><c> what</c><00:48:24.369><c> the</c><00:48:24.550><c> what</c>

00:48:25.080 --> 00:48:25.090 align:start position:0%
you actually look at what the what
 

00:48:25.090 --> 00:48:28.770 align:start position:0%
you actually look at what the what
things<00:48:25.359><c> like</c><00:48:25.950><c> hash</c><00:48:26.950><c> map</c><00:48:27.220><c> the</c><00:48:27.700><c> the</c><00:48:28.030><c> regular</c><00:48:28.600><c> old</c>

00:48:28.770 --> 00:48:28.780 align:start position:0%
things like hash map the the regular old
 

00:48:28.780 --> 00:48:30.390 align:start position:0%
things like hash map the the regular old
java.util<00:48:29.350><c> hash</c><00:48:29.560><c> map</c><00:48:29.770><c> has</c><00:48:29.950><c> to</c><00:48:29.980><c> have</c><00:48:30.190><c> a</c><00:48:30.220><c> bunch</c>

00:48:30.390 --> 00:48:30.400 align:start position:0%
java.util hash map has to have a bunch
 

00:48:30.400 --> 00:48:33.060 align:start position:0%
java.util hash map has to have a bunch
of<00:48:30.520><c> special</c><00:48:30.820><c> cases</c><00:48:31.030><c> in</c><00:48:31.570><c> case</c><00:48:32.109><c> somebody</c><00:48:32.830><c> wants</c>

00:48:33.060 --> 00:48:33.070 align:start position:0%
of special cases in case somebody wants
 

00:48:33.070 --> 00:48:34.590 align:start position:0%
of special cases in case somebody wants
to<00:48:33.100><c> store</c><00:48:33.400><c> a</c><00:48:33.430><c> null</c><00:48:33.700><c> in</c><00:48:33.910><c> the</c><00:48:34.000><c> hash</c><00:48:34.150><c> maps</c><00:48:34.420><c> because</c>

00:48:34.590 --> 00:48:34.600 align:start position:0%
to store a null in the hash maps because
 

00:48:34.600 --> 00:48:36.570 align:start position:0%
to store a null in the hash maps because
by<00:48:35.230><c> default</c><00:48:35.380><c> null</c><00:48:35.800><c> means</c><00:48:36.070><c> there's</c><00:48:36.280><c> nothing</c>

00:48:36.570 --> 00:48:36.580 align:start position:0%
by default null means there's nothing
 

00:48:36.580 --> 00:48:39.540 align:start position:0%
by default null means there's nothing
there<00:48:36.790><c> and</c><00:48:37.060><c> so</c><00:48:37.800><c> so</c><00:48:38.800><c> there's</c><00:48:38.980><c> special</c><00:48:39.250><c> cases</c>

00:48:39.540 --> 00:48:39.550 align:start position:0%
there and so so there's special cases
 

00:48:39.550 --> 00:48:40.710 align:start position:0%
there and so so there's special cases
sprinkled<00:48:39.910><c> throughout</c><00:48:40.060><c> the</c><00:48:40.240><c> code</c><00:48:40.420><c> and</c><00:48:40.630><c> it</c>

00:48:40.710 --> 00:48:40.720 align:start position:0%
sprinkled throughout the code and it
 

00:48:40.720 --> 00:48:43.320 align:start position:0%
sprinkled throughout the code and it
just<00:48:41.190><c> just</c><00:48:42.190><c> makes</c><00:48:42.609><c> things</c><00:48:42.790><c> more</c><00:48:42.970><c> complicated</c>

00:48:43.320 --> 00:48:43.330 align:start position:0%
just just makes things more complicated
 

00:48:43.330 --> 00:48:46.830 align:start position:0%
just just makes things more complicated
in<00:48:43.690><c> error-prone</c><00:48:45.600><c> alright</c><00:48:46.600><c> so</c><00:48:46.750><c> another</c>

00:48:46.830 --> 00:48:46.840 align:start position:0%
in error-prone alright so another
 

00:48:46.840 --> 00:48:49.690 align:start position:0%
in error-prone alright so another
another<00:48:47.350><c> wrinkle</c><00:48:47.859><c> here</c><00:48:48.130><c> is</c><00:48:48.340><c> that</c>

00:48:49.690 --> 00:48:49.700 align:start position:0%
another wrinkle here is that
 

00:48:49.700 --> 00:48:53.599 align:start position:0%
another wrinkle here is that
when<00:48:50.700><c> you're</c><00:48:50.880><c> populating</c><00:48:51.420><c> a</c><00:48:51.839><c> set</c><00:48:52.079><c> arm</c><00:48:52.289><c> map</c><00:48:52.609><c> it</c>

00:48:53.599 --> 00:48:53.609 align:start position:0%
when you're populating a set arm map it
 

00:48:53.609 --> 00:48:56.059 align:start position:0%
when you're populating a set arm map it
throws<00:48:53.970><c> exceptions</c><00:48:54.690><c> on</c><00:48:54.990><c> duplicate</c><00:48:55.710><c> entries</c>

00:48:56.059 --> 00:48:56.069 align:start position:0%
throws exceptions on duplicate entries
 

00:48:56.069 --> 00:48:57.829 align:start position:0%
throws exceptions on duplicate entries
and<00:48:56.369><c> there's</c><00:48:56.940><c> a</c><00:48:57.029><c> bit</c><00:48:57.150><c> of</c><00:48:57.180><c> rationale</c><00:48:57.599><c> here</c><00:48:57.779><c> I</c>

00:48:57.829 --> 00:48:57.839 align:start position:0%
and there's a bit of rationale here I
 

00:48:57.839 --> 00:48:59.569 align:start position:0%
and there's a bit of rationale here I
think<00:48:58.079><c> I</c><00:48:58.109><c> need</c><00:48:58.289><c> to</c><00:48:58.410><c> move</c><00:48:58.920><c> on</c><00:48:59.099><c> a</c><00:48:59.130><c> little</c><00:48:59.460><c> more</c>

00:48:59.569 --> 00:48:59.579 align:start position:0%
think I need to move on a little more
 

00:48:59.579 --> 00:49:02.120 align:start position:0%
think I need to move on a little more
quickly<00:48:59.789><c> but</c><00:49:00.569><c> if</c><00:49:00.779><c> you</c><00:49:01.200><c> have</c><00:49:01.349><c> a</c><00:49:01.380><c> big</c><00:49:01.619><c> table</c><00:49:01.829><c> like</c>

00:49:02.120 --> 00:49:02.130 align:start position:0%
quickly but if you have a big table like
 

00:49:02.130 --> 00:49:03.769 align:start position:0%
quickly but if you have a big table like
this<00:49:02.339><c> here's</c><00:49:02.700><c> an</c><00:49:02.760><c> example</c><00:49:02.970><c> there's</c><00:49:03.359><c> a</c><00:49:03.420><c> there's</c>

00:49:03.769 --> 00:49:03.779 align:start position:0%
this here's an example there's a there's
 

00:49:03.779 --> 00:49:06.130 align:start position:0%
this here's an example there's a there's
a<00:49:03.839><c> duplicate</c><00:49:04.349><c> entry</c><00:49:04.799><c> in</c><00:49:04.950><c> here</c><00:49:05.160><c> and</c><00:49:05.369><c> I</c><00:49:05.670><c> think</c>

00:49:06.130 --> 00:49:06.140 align:start position:0%
a duplicate entry in here and I think
 

00:49:06.140 --> 00:49:09.680 align:start position:0%
a duplicate entry in here and I think
either<00:49:07.140><c> you</c><00:49:07.740><c> know</c><00:49:08.430><c> most</c><00:49:08.819><c> most</c><00:49:09.240><c> systems</c><00:49:09.630><c> use</c>

00:49:09.680 --> 00:49:09.690 align:start position:0%
either you know most most systems use
 

00:49:09.690 --> 00:49:12.529 align:start position:0%
either you know most most systems use
last<00:49:10.079><c> one</c><00:49:10.319><c> wins</c><00:49:10.559><c> which</c><00:49:11.160><c> means</c><00:49:11.190><c> that</c><00:49:11.789><c> if</c><00:49:12.059><c> you</c>

00:49:12.529 --> 00:49:12.539 align:start position:0%
last one wins which means that if you
 

00:49:12.539 --> 00:49:14.359 align:start position:0%
last one wins which means that if you
put<00:49:12.569><c> this</c><00:49:12.960><c> if</c><00:49:13.260><c> you</c><00:49:13.650><c> compile</c><00:49:13.890><c> this</c><00:49:14.069><c> into</c><00:49:14.250><c> your</c>

00:49:14.359 --> 00:49:14.369 align:start position:0%
put this if you compile this into your
 

00:49:14.369 --> 00:49:16.130 align:start position:0%
put this if you compile this into your
program<00:49:14.760><c> you</c><00:49:15.420><c> would</c><00:49:15.510><c> actually</c><00:49:15.630><c> have</c><00:49:15.900><c> one</c>

00:49:16.130 --> 00:49:16.140 align:start position:0%
program you would actually have one
 

00:49:16.140 --> 00:49:18.079 align:start position:0%
program you would actually have one
fewer<00:49:16.559><c> entry</c><00:49:16.920><c> than</c><00:49:17.069><c> you</c><00:49:17.160><c> expected</c><00:49:17.640><c> and</c><00:49:17.940><c> you'd</c>

00:49:18.079 --> 00:49:18.089 align:start position:0%
fewer entry than you expected and you'd
 

00:49:18.089 --> 00:49:20.420 align:start position:0%
fewer entry than you expected and you'd
have<00:49:18.299><c> some</c><00:49:18.510><c> weird</c><00:49:18.720><c> behavior</c><00:49:19.109><c> runtime</c><00:49:19.619><c> but</c><00:49:20.339><c> if</c>

00:49:20.420 --> 00:49:20.430 align:start position:0%
have some weird behavior runtime but if
 

00:49:20.430 --> 00:49:22.970 align:start position:0%
have some weird behavior runtime but if
you<00:49:20.519><c> actually</c><00:49:20.700><c> put</c><00:49:21.059><c> this</c><00:49:21.269><c> into</c><00:49:22.079><c> Java</c><00:49:22.410><c> 9</c><00:49:22.680><c> and</c>

00:49:22.970 --> 00:49:22.980 align:start position:0%
you actually put this into Java 9 and
 

00:49:22.980 --> 00:49:23.870 align:start position:0%
you actually put this into Java 9 and
we'll<00:49:23.069><c> throw</c><00:49:23.279><c> in</c><00:49:23.400><c> a</c><00:49:23.490><c> legal</c><00:49:23.760><c> argument</c>

00:49:23.870 --> 00:49:23.880 align:start position:0%
we'll throw in a legal argument
 

00:49:23.880 --> 00:49:26.120 align:start position:0%
we'll throw in a legal argument
exception<00:49:24.390><c> and</c><00:49:24.809><c> say</c><00:49:25.049><c> that</c><00:49:25.319><c> well</c><00:49:25.500><c> hey</c><00:49:25.740><c> this</c><00:49:25.980><c> is</c>

00:49:26.120 --> 00:49:26.130 align:start position:0%
exception and say that well hey this is
 

00:49:26.130 --> 00:49:29.089 align:start position:0%
exception and say that well hey this is
a<00:49:26.160><c> duplicate</c><00:49:26.700><c> entry</c><00:49:27.079><c> and</c><00:49:28.079><c> so</c><00:49:28.260><c> the</c><00:49:28.799><c> point</c><00:49:28.980><c> here</c>

00:49:29.089 --> 00:49:29.099 align:start position:0%
a duplicate entry and so the point here
 

00:49:29.099 --> 00:49:31.789 align:start position:0%
a duplicate entry and so the point here
is<00:49:29.250><c> that</c><00:49:29.490><c> this</c><00:49:29.730><c> is</c><00:49:29.910><c> a</c><00:49:29.940><c> this</c><00:49:30.420><c> is</c><00:49:30.480><c> a</c><00:49:30.839><c> library</c><00:49:31.289><c> API</c>

00:49:31.789 --> 00:49:31.799 align:start position:0%
is that this is a this is a library API
 

00:49:31.799 --> 00:49:37.359 align:start position:0%
is that this is a this is a library API
that<00:49:32.010><c> is</c><00:49:32.160><c> modeling</c><00:49:32.809><c> collection</c><00:49:33.809><c> literals</c><00:49:35.059><c> and</c>

00:49:37.359 --> 00:49:37.369 align:start position:0%
that is modeling collection literals and
 

00:49:37.369 --> 00:49:39.740 align:start position:0%
that is modeling collection literals and
so<00:49:38.369><c> if</c><00:49:38.460><c> you</c><00:49:38.549><c> have</c><00:49:38.640><c> a</c><00:49:38.700><c> collection</c><00:49:38.880><c> literal</c><00:49:39.510><c> that</c>

00:49:39.740 --> 00:49:39.750 align:start position:0%
so if you have a collection literal that
 

00:49:39.750 --> 00:49:41.240 align:start position:0%
so if you have a collection literal that
means<00:49:39.990><c> you're</c><00:49:40.140><c> writing</c><00:49:40.500><c> out</c><00:49:40.559><c> all</c><00:49:40.619><c> the</c><00:49:40.769><c> values</c>

00:49:41.240 --> 00:49:41.250 align:start position:0%
means you're writing out all the values
 

00:49:41.250 --> 00:49:42.920 align:start position:0%
means you're writing out all the values
and<00:49:41.460><c> so</c><00:49:41.609><c> if</c><00:49:41.730><c> you</c><00:49:41.880><c> put</c><00:49:42.029><c> in</c><00:49:42.210><c> duplicates</c><00:49:42.690><c> that's</c>

00:49:42.920 --> 00:49:42.930 align:start position:0%
and so if you put in duplicates that's
 

00:49:42.930 --> 00:49:49.759 align:start position:0%
and so if you put in duplicates that's
probably<00:49:43.619><c> an</c><00:49:43.950><c> error</c><00:49:48.140><c> I'm</c><00:49:49.140><c> very</c><00:49:49.470><c> sorry</c><00:49:49.710><c> about</c>

00:49:49.759 --> 00:49:49.769 align:start position:0%
probably an error I'm very sorry about
 

00:49:49.769 --> 00:49:51.589 align:start position:0%
probably an error I'm very sorry about
this<00:49:50.010><c> I'm</c><00:49:50.190><c> running</c><00:49:50.549><c> short</c><00:49:50.700><c> on</c><00:49:50.849><c> time</c><00:49:51.119><c> so</c><00:49:51.180><c> I</c><00:49:51.420><c> have</c>

00:49:51.589 --> 00:49:51.599 align:start position:0%
this I'm running short on time so I have
 

00:49:51.599 --> 00:49:53.120 align:start position:0%
this I'm running short on time so I have
a<00:49:51.630><c> bunch</c><00:49:51.809><c> of</c><00:49:51.990><c> stuff</c><00:49:52.260><c> to</c><00:49:52.319><c> say</c><00:49:52.619><c> about</c><00:49:52.799><c> space</c>

00:49:53.120 --> 00:49:53.130 align:start position:0%
a bunch of stuff to say about space
 

00:49:53.130 --> 00:49:57.339 align:start position:0%
a bunch of stuff to say about space
efficiency<00:49:53.609><c> but</c><00:49:54.299><c> really</c><00:49:55.250><c> the</c><00:49:56.250><c> existing</c><00:49:56.970><c> I</c>

00:49:57.339 --> 00:49:57.349 align:start position:0%
efficiency but really the existing I
 

00:49:57.349 --> 00:49:59.930 align:start position:0%
efficiency but really the existing I
just<00:49:58.349><c> want</c><00:49:58.470><c> to</c><00:49:58.559><c> say</c><00:49:58.859><c> very</c><00:49:59.130><c> briefly</c><00:49:59.190><c> the</c>

00:49:59.930 --> 00:49:59.940 align:start position:0%
just want to say very briefly the
 

00:49:59.940 --> 00:50:02.240 align:start position:0%
just want to say very briefly the
existing<00:50:00.660><c> collections</c><00:50:01.140><c> especially</c><00:50:02.039><c> things</c>

00:50:02.240 --> 00:50:02.250 align:start position:0%
existing collections especially things
 

00:50:02.250 --> 00:50:04.609 align:start position:0%
existing collections especially things
like<00:50:02.309><c> hash</c><00:50:02.640><c> that</c><00:50:02.910><c> are</c><00:50:03.230><c> pretty</c><00:50:04.230><c> space</c>

00:50:04.609 --> 00:50:04.619 align:start position:0%
like hash that are pretty space
 

00:50:04.619 --> 00:50:06.620 align:start position:0%
like hash that are pretty space
inefficient<00:50:05.279><c> they</c><00:50:05.430><c> use</c><00:50:05.579><c> lots</c><00:50:05.910><c> of</c><00:50:06.059><c> objects</c><00:50:06.539><c> and</c>

00:50:06.620 --> 00:50:06.630 align:start position:0%
inefficient they use lots of objects and
 

00:50:06.630 --> 00:50:08.390 align:start position:0%
inefficient they use lots of objects and
lots<00:50:06.900><c> of</c><00:50:07.109><c> pointers</c><00:50:07.529><c> to</c><00:50:07.559><c> different</c><00:50:08.009><c> objects</c>

00:50:08.390 --> 00:50:08.400 align:start position:0%
lots of pointers to different objects
 

00:50:08.400 --> 00:50:10.549 align:start position:0%
lots of pointers to different objects
and<00:50:08.579><c> so</c><00:50:09.059><c> if</c><00:50:09.240><c> you</c><00:50:09.329><c> put</c><00:50:09.509><c> a</c><00:50:09.539><c> couple</c><00:50:09.720><c> entries</c><00:50:10.230><c> into</c>

00:50:10.549 --> 00:50:10.559 align:start position:0%
and so if you put a couple entries into
 

00:50:10.559 --> 00:50:14.690 align:start position:0%
and so if you put a couple entries into
a<00:50:10.859><c> hash</c><00:50:11.279><c> set</c><00:50:11.519><c> it</c><00:50:11.940><c> takes</c><00:50:13.250><c> 152</c><00:50:14.250><c> bytes</c><00:50:14.490><c> to</c>

00:50:14.690 --> 00:50:14.700 align:start position:0%
a hash set it takes 152 bytes to
 

00:50:14.700 --> 00:50:17.359 align:start position:0%
a hash set it takes 152 bytes to
represent<00:50:15.150><c> a</c><00:50:15.240><c> hash</c><00:50:15.420><c> set</c><00:50:15.660><c> with</c><00:50:16.140><c> two</c><00:50:16.349><c> entries</c><00:50:16.710><c> so</c>

00:50:17.359 --> 00:50:17.369 align:start position:0%
represent a hash set with two entries so
 

00:50:17.369 --> 00:50:20.779 align:start position:0%
represent a hash set with two entries so
the<00:50:17.519><c> new</c><00:50:17.750><c> set</c><00:50:18.750><c> implementation</c><00:50:19.440><c> is</c><00:50:19.619><c> much</c><00:50:20.549><c> more</c>

00:50:20.779 --> 00:50:20.789 align:start position:0%
the new set implementation is much more
 

00:50:20.789 --> 00:50:25.249 align:start position:0%
the new set implementation is much more
compact<00:50:21.240><c> so</c><00:50:21.900><c> if</c><00:50:21.990><c> you</c><00:50:22.079><c> have</c><00:50:22.230><c> a</c><00:50:23.539><c> new</c><00:50:24.539><c> immutable</c>

00:50:25.249 --> 00:50:25.259 align:start position:0%
compact so if you have a new immutable
 

00:50:25.259 --> 00:50:27.650 align:start position:0%
compact so if you have a new immutable
set<00:50:25.529><c> with</c><00:50:25.890><c> two</c><00:50:26.130><c> entries</c><00:50:26.460><c> it</c><00:50:26.789><c> only</c><00:50:26.940><c> takes</c><00:50:27.210><c> 20</c>

00:50:27.650 --> 00:50:27.660 align:start position:0%
set with two entries it only takes 20
 

00:50:27.660 --> 00:50:33.259 align:start position:0%
set with two entries it only takes 20
bytes<00:50:27.960><c> instead</c><00:50:28.950><c> of</c><00:50:29.240><c> 152</c><00:50:30.240><c> bytes</c><00:50:31.789><c> so</c><00:50:32.789><c> once</c><00:50:33.000><c> again</c>

00:50:33.259 --> 00:50:33.269 align:start position:0%
bytes instead of 152 bytes so once again
 

00:50:33.269 --> 00:50:38.029 align:start position:0%
bytes instead of 152 bytes so once again
I<00:50:33.990><c> will</c><00:50:35.210><c> have</c><00:50:36.210><c> to</c><00:50:36.480><c> skip</c><00:50:37.259><c> beyond</c><00:50:37.589><c> this</c><00:50:37.799><c> there</c>

00:50:38.029 --> 00:50:38.039 align:start position:0%
I will have to skip beyond this there
 

00:50:38.039 --> 00:50:39.440 align:start position:0%
I will have to skip beyond this there
couple<00:50:38.369><c> a</c><00:50:38.579><c> couple</c><00:50:38.640><c> things</c><00:50:39.059><c> the</c><00:50:39.210><c> design</c>

00:50:39.440 --> 00:50:39.450 align:start position:0%
couple a couple things the design
 

00:50:39.450 --> 00:50:42.049 align:start position:0%
couple a couple things the design
rationale<00:50:39.900><c> here</c><00:50:40.109><c> I'll</c><00:50:40.259><c> post</c><00:50:40.589><c> these</c><00:50:40.740><c> slides</c><00:50:41.059><c> on</c>

00:50:42.049 --> 00:50:42.059 align:start position:0%
rationale here I'll post these slides on
 

00:50:42.059 --> 00:50:45.430 align:start position:0%
rationale here I'll post these slides on
on<00:50:42.869><c> the</c><00:50:43.109><c> web</c><00:50:43.259><c> so</c><00:50:43.500><c> that</c><00:50:43.619><c> you</c><00:50:43.740><c> can</c><00:50:43.859><c> see</c><00:50:43.980><c> them</c><00:50:44.190><c> and</c>

00:50:45.430 --> 00:50:45.440 align:start position:0%
on the web so that you can see them and
 

00:50:45.440 --> 00:50:49.160 align:start position:0%
on the web so that you can see them and
I'll<00:50:46.440><c> also</c><00:50:46.650><c> be</c><00:50:46.769><c> available</c><00:50:47.099><c> for</c><00:50:47.750><c> for</c><00:50:48.750><c> questions</c>

00:50:49.160 --> 00:50:49.170 align:start position:0%
I'll also be available for for questions
 

00:50:49.170 --> 00:50:51.380 align:start position:0%
I'll also be available for for questions
afterwards<00:50:49.730><c> but</c><00:50:50.730><c> I'll</c><00:50:50.849><c> just</c><00:50:51.029><c> move</c><00:50:51.150><c> directly</c>

00:50:51.380 --> 00:50:51.390 align:start position:0%
afterwards but I'll just move directly
 

00:50:51.390 --> 00:50:54.019 align:start position:0%
afterwards but I'll just move directly
on<00:50:51.779><c> to</c><00:50:52.109><c> my</c><00:50:52.380><c> summary</c><00:50:52.799><c> here</c><00:50:53.069><c> so</c><00:50:53.519><c> the</c><00:50:53.640><c> collections</c>

00:50:54.019 --> 00:50:54.029 align:start position:0%
on to my summary here so the collections
 

00:50:54.029 --> 00:50:57.380 align:start position:0%
on to my summary here so the collections
framework<00:50:54.210><c> is</c><00:50:54.660><c> 19</c><00:50:55.140><c> years</c><00:50:55.170><c> old</c><00:50:55.500><c> and</c><00:50:56.000><c> it's</c><00:50:57.000><c> it's</c>

00:50:57.380 --> 00:50:57.390 align:start position:0%
framework is 19 years old and it's it's
 

00:50:57.390 --> 00:50:59.210 align:start position:0%
framework is 19 years old and it's it's
old<00:50:57.660><c> but</c><00:50:58.049><c> we're</c><00:50:58.259><c> still</c><00:50:58.589><c> working</c><00:50:58.950><c> on</c><00:50:59.039><c> it</c>

00:50:59.210 --> 00:50:59.220 align:start position:0%
old but we're still working on it
 

00:50:59.220 --> 00:51:00.740 align:start position:0%
old but we're still working on it
there<00:50:59.460><c> are</c><00:50:59.549><c> lots</c><00:50:59.730><c> of</c><00:50:59.849><c> new</c><00:51:00.000><c> enhancements</c><00:51:00.630><c> in</c>

00:51:00.740 --> 00:51:00.750 align:start position:0%
there are lots of new enhancements in
 

00:51:00.750 --> 00:51:02.509 align:start position:0%
there are lots of new enhancements in
Java<00:51:00.990><c> 8</c><00:51:01.230><c> we</c><00:51:01.500><c> saw</c><00:51:01.650><c> all</c><00:51:01.890><c> those</c><00:51:02.069><c> new</c><00:51:02.279><c> default</c>

00:51:02.509 --> 00:51:02.519 align:start position:0%
Java 8 we saw all those new default
 

00:51:02.519 --> 00:51:02.930 align:start position:0%
Java 8 we saw all those new default
method

00:51:02.930 --> 00:51:02.940 align:start position:0%
method
 

00:51:02.940 --> 00:51:05.480 align:start position:0%
method
that<00:51:03.270><c> add</c><00:51:03.930><c> new</c><00:51:04.170><c> functionality</c><00:51:04.589><c> to</c><00:51:05.069><c> all</c><00:51:05.310><c> the</c>

00:51:05.480 --> 00:51:05.490 align:start position:0%
that add new functionality to all the
 

00:51:05.490 --> 00:51:07.339 align:start position:0%
that add new functionality to all the
existing<00:51:05.700><c> collections</c><00:51:06.300><c> and</c><00:51:06.630><c> then</c><00:51:06.960><c> in</c><00:51:07.109><c> Java</c>

00:51:07.339 --> 00:51:07.349 align:start position:0%
existing collections and then in Java
 

00:51:07.349 --> 00:51:09.920 align:start position:0%
existing collections and then in Java
nine<00:51:07.650><c> we</c><00:51:08.099><c> have</c><00:51:08.339><c> our</c><00:51:08.670><c> collections</c><00:51:09.450><c> convenience</c>

00:51:09.920 --> 00:51:09.930 align:start position:0%
nine we have our collections convenience
 

00:51:09.930 --> 00:51:13.900 align:start position:0%
nine we have our collections convenience
factories<00:51:10.550><c> that</c><00:51:11.550><c> provide</c><00:51:12.260><c> new</c><00:51:13.260><c> compact</c>

00:51:13.900 --> 00:51:13.910 align:start position:0%
factories that provide new compact
 

00:51:13.910 --> 00:51:16.400 align:start position:0%
factories that provide new compact
immutable<00:51:14.910><c> collections</c><00:51:15.420><c> and</c><00:51:15.660><c> they're</c><00:51:16.170><c> much</c>

00:51:16.400 --> 00:51:16.410 align:start position:0%
immutable collections and they're much
 

00:51:16.410 --> 00:51:18.980 align:start position:0%
immutable collections and they're much
much<00:51:16.980><c> more</c><00:51:17.160><c> convenient</c><00:51:17.520><c> to</c><00:51:17.670><c> write</c><00:51:17.900><c> and</c><00:51:18.900><c> I</c>

00:51:18.980 --> 00:51:18.990 align:start position:0%
much more convenient to write and I
 

00:51:18.990 --> 00:51:21.470 align:start position:0%
much more convenient to write and I
encourage<00:51:19.380><c> you</c><00:51:19.410><c> to</c><00:51:19.560><c> go</c><00:51:20.069><c> to</c><00:51:20.130><c> the</c><00:51:20.940><c> JDK</c><00:51:21.300><c> 9</c>

00:51:21.470 --> 00:51:21.480 align:start position:0%
encourage you to go to the JDK 9
 

00:51:21.480 --> 00:51:24.589 align:start position:0%
encourage you to go to the JDK 9
download<00:51:22.079><c> page</c><00:51:22.319><c> and</c><00:51:22.680><c> download</c><00:51:23.400><c> JDK</c><00:51:23.910><c> 9</c><00:51:24.089><c> it</c>

00:51:24.589 --> 00:51:24.599 align:start position:0%
download page and download JDK 9 it
 

00:51:24.599 --> 00:51:26.349 align:start position:0%
download page and download JDK 9 it
should<00:51:24.780><c> be</c><00:51:24.900><c> in</c><00:51:25.020><c> any</c><00:51:25.380><c> recent</c><00:51:25.829><c> build</c><00:51:25.980><c> and</c>

00:51:26.349 --> 00:51:26.359 align:start position:0%
should be in any recent build and
 

00:51:26.359 --> 00:51:29.240 align:start position:0%
should be in any recent build and
encourage<00:51:27.359><c> you</c><00:51:27.450><c> to</c><00:51:27.510><c> try</c><00:51:27.720><c> them</c><00:51:27.810><c> out</c><00:51:28.010><c> so</c><00:51:29.010><c> thank</c>

00:51:29.240 --> 00:51:29.250 align:start position:0%
encourage you to try them out so thank
 

00:51:29.250 --> 00:51:30.800 align:start position:0%
encourage you to try them out so thank
you<00:51:29.369><c> I'm</c><00:51:29.520><c> sorry</c><00:51:29.760><c> I</c><00:51:29.910><c> don't</c><00:51:30.030><c> think</c><00:51:30.210><c> I</c><00:51:30.359><c> have</c><00:51:30.510><c> time</c>

00:51:30.800 --> 00:51:30.810 align:start position:0%
you I'm sorry I don't think I have time
 

00:51:30.810 --> 00:51:31.940 align:start position:0%
you I'm sorry I don't think I have time
for<00:51:30.839><c> questions</c><00:51:31.109><c> but</c><00:51:31.560><c> I'll</c><00:51:31.710><c> be</c><00:51:31.859><c> available</c>

00:51:31.940 --> 00:51:31.950 align:start position:0%
for questions but I'll be available
 

00:51:31.950 --> 00:51:34.810 align:start position:0%
for questions but I'll be available
afterwards<00:51:32.520><c> for</c><00:51:32.849><c> a</c><00:51:32.910><c> conversation</c><00:51:33.510><c> thank</c><00:51:34.140><c> you</c>

00:51:34.810 --> 00:51:34.820 align:start position:0%
afterwards for a conversation thank you
 

00:51:34.820 --> 00:51:41.349 align:start position:0%
afterwards for a conversation thank you
[Music]

