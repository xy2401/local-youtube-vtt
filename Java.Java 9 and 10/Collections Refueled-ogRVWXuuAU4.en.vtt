WEBVTT
Kind: captions
Language: en

00:00:03.189 --> 00:00:05.460 align:start position:0%
 
good<00:00:03.820><c> morning</c><00:00:04.089><c> thanks</c><00:00:05.080><c> for</c><00:00:05.109><c> coming</c><00:00:05.410><c> this</c>

00:00:05.460 --> 00:00:05.470 align:start position:0%
good morning thanks for coming this
 

00:00:05.470 --> 00:00:08.749 align:start position:0%
good morning thanks for coming this
morning<00:00:05.559><c> I</c><00:00:06.009><c> know</c><00:00:06.100><c> it's</c><00:00:06.309><c> an</c><00:00:06.430><c> early</c><00:00:06.609><c> start</c><00:00:07.139><c> but</c>

00:00:08.749 --> 00:00:08.759 align:start position:0%
morning I know it's an early start but
 

00:00:08.759 --> 00:00:10.560 align:start position:0%
morning I know it's an early start but
thanks<00:00:09.759><c> for</c><00:00:09.790><c> coming</c><00:00:10.090><c> in</c><00:00:10.179><c> today</c>

00:00:10.560 --> 00:00:10.570 align:start position:0%
thanks for coming in today
 

00:00:10.570 --> 00:00:13.200 align:start position:0%
thanks for coming in today
my<00:00:11.019><c> name</c><00:00:11.170><c> is</c><00:00:11.290><c> Stewart</c><00:00:11.530><c> Marx</c><00:00:11.800><c> I</c><00:00:12.010><c> work</c><00:00:12.580><c> at</c><00:00:12.760><c> Oracle</c>

00:00:13.200 --> 00:00:13.210 align:start position:0%
my name is Stewart Marx I work at Oracle
 

00:00:13.210 --> 00:00:16.439 align:start position:0%
my name is Stewart Marx I work at Oracle
on<00:00:13.480><c> the</c><00:00:14.349><c> JDK</c><00:00:15.040><c> work</c><00:00:15.519><c> in</c><00:00:15.730><c> the</c><00:00:15.849><c> core</c><00:00:16.029><c> libraries</c>

00:00:16.439 --> 00:00:16.449 align:start position:0%
on the JDK work in the core libraries
 

00:00:16.449 --> 00:00:17.970 align:start position:0%
on the JDK work in the core libraries
team<00:00:16.689><c> and</c><00:00:16.960><c> one</c><00:00:17.199><c> of</c><00:00:17.230><c> the</c><00:00:17.349><c> things</c><00:00:17.500><c> I</c><00:00:17.619><c> do</c><00:00:17.679><c> is</c>

00:00:17.970 --> 00:00:17.980 align:start position:0%
team and one of the things I do is
 

00:00:17.980 --> 00:00:19.620 align:start position:0%
team and one of the things I do is
maintain<00:00:18.160><c> the</c><00:00:18.519><c> collections</c><00:00:18.970><c> framework</c><00:00:19.150><c> and</c>

00:00:19.620 --> 00:00:19.630 align:start position:0%
maintain the collections framework and
 

00:00:19.630 --> 00:00:21.810 align:start position:0%
maintain the collections framework and
so<00:00:20.380><c> the</c><00:00:20.619><c> title</c><00:00:20.769><c> of</c><00:00:20.890><c> this</c><00:00:21.009><c> talk</c><00:00:21.070><c> is</c><00:00:21.220><c> collections</c>

00:00:21.810 --> 00:00:21.820 align:start position:0%
so the title of this talk is collections
 

00:00:21.820 --> 00:00:24.960 align:start position:0%
so the title of this talk is collections
refueled<00:00:22.239><c> so</c><00:00:22.480><c> I'm</c><00:00:22.599><c> going</c><00:00:22.869><c> to</c><00:00:23.050><c> be</c><00:00:23.249><c> covering</c><00:00:24.249><c> the</c>

00:00:24.960 --> 00:00:24.970 align:start position:0%
refueled so I'm going to be covering the
 

00:00:24.970 --> 00:00:29.279 align:start position:0%
refueled so I'm going to be covering the
collections<00:00:25.449><c> enhancements</c><00:00:26.169><c> in</c><00:00:26.640><c> JDK</c><00:00:27.640><c> 9</c><00:00:27.819><c> and</c><00:00:28.289><c> a</c>

00:00:29.279 --> 00:00:29.289 align:start position:0%
collections enhancements in JDK 9 and a
 

00:00:29.289 --> 00:00:31.200 align:start position:0%
collections enhancements in JDK 9 and a
little<00:00:29.769><c> bit</c><00:00:30.009><c> of</c><00:00:30.220><c> a</c><00:00:30.310><c> glimpse</c><00:00:30.519><c> of</c><00:00:30.699><c> what</c><00:00:30.939><c> we</c><00:00:31.060><c> might</c>

00:00:31.200 --> 00:00:31.210 align:start position:0%
little bit of a glimpse of what we might
 

00:00:31.210 --> 00:00:34.610 align:start position:0%
little bit of a glimpse of what we might
be<00:00:31.329><c> working</c><00:00:31.479><c> on</c><00:00:31.720><c> in</c><00:00:31.929><c> the</c><00:00:31.989><c> future</c><00:00:32.760><c> so</c><00:00:33.760><c> let's</c><00:00:34.300><c> see</c>

00:00:34.610 --> 00:00:34.620 align:start position:0%
be working on in the future so let's see
 

00:00:34.620 --> 00:00:37.380 align:start position:0%
be working on in the future so let's see
this<00:00:35.620><c> is</c><00:00:35.800><c> only</c><00:00:35.890><c> a</c><00:00:36.010><c> 45-minute</c><00:00:36.280><c> session</c><00:00:37.060><c> and</c><00:00:37.270><c> so</c>

00:00:37.380 --> 00:00:37.390 align:start position:0%
this is only a 45-minute session and so
 

00:00:37.390 --> 00:00:39.060 align:start position:0%
this is only a 45-minute session and so
I<00:00:37.420><c> had</c><00:00:37.540><c> to</c><00:00:37.600><c> trim</c><00:00:37.780><c> this</c><00:00:37.900><c> down</c><00:00:37.960><c> from</c><00:00:38.350><c> an</c><00:00:38.440><c> hour</c><00:00:38.680><c> I</c>

00:00:39.060 --> 00:00:39.070 align:start position:0%
I had to trim this down from an hour I
 

00:00:39.070 --> 00:00:40.590 align:start position:0%
I had to trim this down from an hour I
might<00:00:39.400><c> or</c><00:00:39.850><c> might</c><00:00:39.970><c> not</c><00:00:40.030><c> have</c><00:00:40.360><c> time</c><00:00:40.540><c> for</c>

00:00:40.590 --> 00:00:40.600 align:start position:0%
might or might not have time for
 

00:00:40.600 --> 00:00:43.320 align:start position:0%
might or might not have time for
questions<00:00:41.050><c> at</c><00:00:41.170><c> the</c><00:00:41.200><c> end</c><00:00:41.320><c> but</c><00:00:42.100><c> if</c><00:00:42.610><c> there's</c><00:00:43.270><c> a</c>

00:00:43.320 --> 00:00:43.330 align:start position:0%
questions at the end but if there's a
 

00:00:43.330 --> 00:00:45.030 align:start position:0%
questions at the end but if there's a
question<00:00:43.450><c> that</c><00:00:43.690><c> you</c><00:00:43.930><c> have</c><00:00:44.110><c> that</c><00:00:44.440><c> you</c><00:00:44.890><c> don't</c>

00:00:45.030 --> 00:00:45.040 align:start position:0%
question that you have that you don't
 

00:00:45.040 --> 00:00:46.470 align:start position:0%
question that you have that you don't
get<00:00:45.100><c> a</c><00:00:45.160><c> chance</c><00:00:45.340><c> to</c><00:00:45.520><c> ask</c><00:00:45.640><c> me</c><00:00:45.880><c> in</c><00:00:46.030><c> the</c><00:00:46.060><c> session</c>

00:00:46.470 --> 00:00:46.480 align:start position:0%
get a chance to ask me in the session
 

00:00:46.480 --> 00:00:48.980 align:start position:0%
get a chance to ask me in the session
then<00:00:47.200><c> please</c><00:00:47.650><c> tweet</c><00:00:47.980><c> on</c><00:00:48.250><c> this</c><00:00:48.430><c> hashtag</c>

00:00:48.980 --> 00:00:48.990 align:start position:0%
then please tweet on this hashtag
 

00:00:48.990 --> 00:00:52.350 align:start position:0%
then please tweet on this hashtag
collections<00:00:49.990><c> refueled</c><00:00:50.530><c> and</c><00:00:51.220><c> I</c><00:00:52.060><c> will</c><00:00:52.180><c> try</c><00:00:52.330><c> to</c>

00:00:52.350 --> 00:00:52.360 align:start position:0%
collections refueled and I will try to
 

00:00:52.360 --> 00:00:56.690 align:start position:0%
collections refueled and I will try to
get<00:00:52.540><c> to</c><00:00:52.600><c> it</c><00:00:52.770><c> after</c><00:00:53.770><c> the</c><00:00:54.100><c> after</c><00:00:54.340><c> the</c><00:00:54.760><c> session</c>

00:00:56.690 --> 00:00:56.700 align:start position:0%
get to it after the after the session
 

00:00:56.700 --> 00:01:00.510 align:start position:0%
get to it after the after the session
alright<00:00:57.700><c> so</c><00:00:57.910><c> one</c><00:00:58.210><c> slide</c><00:00:58.600><c> on</c><00:00:59.430><c> history</c><00:01:00.430><c> of</c><00:01:00.460><c> the</c>

00:01:00.510 --> 00:01:00.520 align:start position:0%
alright so one slide on history of the
 

00:01:00.520 --> 00:01:03.090 align:start position:0%
alright so one slide on history of the
collections<00:01:00.940><c> framework</c><00:01:01.120><c> so</c><00:01:01.750><c> in</c><00:01:01.900><c> JDK</c><00:01:02.290><c> 1.0</c><00:01:02.860><c> in</c>

00:01:03.090 --> 00:01:03.100 align:start position:0%
collections framework so in JDK 1.0 in
 

00:01:03.100 --> 00:01:05.310 align:start position:0%
collections framework so in JDK 1.0 in
1996<00:01:03.940><c> there</c><00:01:04.600><c> were</c><00:01:04.720><c> there</c><00:01:04.900><c> wasn't</c><00:01:05.140><c> anything</c>

00:01:05.310 --> 00:01:05.320 align:start position:0%
1996 there were there wasn't anything
 

00:01:05.320 --> 00:01:06.929 align:start position:0%
1996 there were there wasn't anything
called<00:01:05.619><c> the</c><00:01:05.710><c> collections</c><00:01:06.159><c> fairmark</c><00:01:06.610><c> there</c>

00:01:06.929 --> 00:01:06.939 align:start position:0%
called the collections fairmark there
 

00:01:06.939 --> 00:01:08.969 align:start position:0%
called the collections fairmark there
were<00:01:07.090><c> some</c><00:01:07.329><c> collections</c><00:01:07.780><c> there</c><00:01:08.049><c> which</c><00:01:08.469><c> we</c><00:01:08.649><c> we</c>

00:01:08.969 --> 00:01:08.979 align:start position:0%
were some collections there which we we
 

00:01:08.979 --> 00:01:11.669 align:start position:0%
were some collections there which we we
now<00:01:09.189><c> retrospectively</c><00:01:09.969><c> call</c><00:01:10.299><c> the</c><00:01:11.140><c> legacy</c>

00:01:11.669 --> 00:01:11.679 align:start position:0%
now retrospectively call the legacy
 

00:01:11.679 --> 00:01:13.289 align:start position:0%
now retrospectively call the legacy
collections<00:01:12.130><c> those</c><00:01:12.549><c> are</c><00:01:12.700><c> the</c><00:01:12.759><c> classes</c><00:01:13.149><c> like</c>

00:01:13.289 --> 00:01:13.299 align:start position:0%
collections those are the classes like
 

00:01:13.299 --> 00:01:15.450 align:start position:0%
collections those are the classes like
vector<00:01:13.810><c> and</c><00:01:14.109><c> hash</c><00:01:14.499><c> table</c><00:01:14.950><c> which</c><00:01:15.159><c> you</c><00:01:15.310><c> might</c>

00:01:15.450 --> 00:01:15.460 align:start position:0%
vector and hash table which you might
 

00:01:15.460 --> 00:01:17.779 align:start position:0%
vector and hash table which you might
remember<00:01:15.700><c> I</c><00:01:16.119><c> hope</c><00:01:16.689><c> you're</c><00:01:16.840><c> not</c><00:01:16.869><c> using</c><00:01:17.170><c> those</c>

00:01:17.779 --> 00:01:17.789 align:start position:0%
remember I hope you're not using those
 

00:01:17.789 --> 00:01:20.160 align:start position:0%
remember I hope you're not using those
although<00:01:18.789><c> I</c><00:01:18.819><c> did</c><00:01:19.060><c> see</c><00:01:19.240><c> them</c><00:01:19.389><c> in</c><00:01:19.509><c> a</c><00:01:19.600><c> stack</c><00:01:19.899><c> trace</c>

00:01:20.160 --> 00:01:20.170 align:start position:0%
although I did see them in a stack trace
 

00:01:20.170 --> 00:01:24.899 align:start position:0%
although I did see them in a stack trace
in<00:01:20.619><c> the</c><00:01:20.969><c> in</c><00:01:21.969><c> the</c><00:01:22.149><c> keynote</c><00:01:22.479><c> yesterday</c><00:01:23.219><c> hmm</c><00:01:24.219><c> okay</c>

00:01:24.899 --> 00:01:24.909 align:start position:0%
in the in the keynote yesterday hmm okay
 

00:01:24.909 --> 00:01:27.300 align:start position:0%
in the in the keynote yesterday hmm okay
so<00:01:25.149><c> in</c><00:01:25.240><c> jdk</c><00:01:25.600><c> 1.2</c><00:01:26.259><c> now</c><00:01:26.619><c> that</c><00:01:26.799><c> was</c><00:01:27.009><c> when</c><00:01:27.189><c> the</c>

00:01:27.300 --> 00:01:27.310 align:start position:0%
so in jdk 1.2 now that was when the
 

00:01:27.310 --> 00:01:29.190 align:start position:0%
so in jdk 1.2 now that was when the
collections<00:01:27.759><c> framework</c><00:01:27.969><c> was</c><00:01:28.539><c> actually</c>

00:01:29.190 --> 00:01:29.200 align:start position:0%
collections framework was actually
 

00:01:29.200 --> 00:01:31.739 align:start position:0%
collections framework was actually
introduced<00:01:29.619><c> so</c><00:01:29.889><c> joshua</c><00:01:30.310><c> bloch</c><00:01:30.630><c> designed</c><00:01:31.630><c> to</c>

00:01:31.739 --> 00:01:31.749 align:start position:0%
introduced so joshua bloch designed to
 

00:01:31.749 --> 00:01:33.330 align:start position:0%
introduced so joshua bloch designed to
develop<00:01:31.959><c> those</c><00:01:32.259><c> and</c><00:01:32.560><c> integrated</c><00:01:33.009><c> those</c><00:01:33.130><c> into</c>

00:01:33.330 --> 00:01:33.340 align:start position:0%
develop those and integrated those into
 

00:01:33.340 --> 00:01:34.949 align:start position:0%
develop those and integrated those into
the<00:01:33.429><c> JDK</c><00:01:33.850><c> back</c><00:01:34.090><c> in</c><00:01:34.270><c> 1998</c>

00:01:34.949 --> 00:01:34.959 align:start position:0%
the JDK back in 1998
 

00:01:34.959 --> 00:01:37.559 align:start position:0%
the JDK back in 1998
so<00:01:35.439><c> the</c><00:01:35.590><c> collections</c><00:01:36.130><c> framework</c><00:01:36.340><c> is</c><00:01:36.789><c> a</c><00:01:37.119><c> little</c>

00:01:37.559 --> 00:01:37.569 align:start position:0%
so the collections framework is a little
 

00:01:37.569 --> 00:01:39.359 align:start position:0%
so the collections framework is a little
bit<00:01:37.689><c> younger</c><00:01:37.840><c> than</c><00:01:38.049><c> Java</c><00:01:38.409><c> so</c><00:01:38.679><c> it's</c><00:01:38.770><c> about</c><00:01:38.889><c> 19</c>

00:01:39.359 --> 00:01:39.369 align:start position:0%
bit younger than Java so it's about 19
 

00:01:39.369 --> 00:01:41.669 align:start position:0%
bit younger than Java so it's about 19
years<00:01:39.609><c> old</c><00:01:39.759><c> at</c><00:01:39.999><c> this</c><00:01:40.119><c> point</c><00:01:40.359><c> and</c><00:01:41.259><c> so</c><00:01:41.469><c> that's</c>

00:01:41.669 --> 00:01:41.679 align:start position:0%
years old at this point and so that's
 

00:01:41.679 --> 00:01:43.770 align:start position:0%
years old at this point and so that's
what<00:01:41.889><c> introduced</c><00:01:42.340><c> the</c><00:01:42.909><c> set</c><00:01:43.119><c> of</c><00:01:43.240><c> interfaces</c>

00:01:43.770 --> 00:01:43.780 align:start position:0%
what introduced the set of interfaces
 

00:01:43.780 --> 00:01:45.769 align:start position:0%
what introduced the set of interfaces
that<00:01:43.929><c> we</c><00:01:44.170><c> that</c><00:01:44.619><c> were</c><00:01:44.709><c> so</c><00:01:44.859><c> familiar</c><00:01:45.039><c> with</c>

00:01:45.769 --> 00:01:45.779 align:start position:0%
that we that were so familiar with
 

00:01:45.779 --> 00:01:48.929 align:start position:0%
that we that were so familiar with
collection<00:01:46.779><c> list</c><00:01:47.229><c> set</c><00:01:47.709><c> math</c><00:01:48.130><c> and</c><00:01:48.459><c> so</c><00:01:48.700><c> forth</c>

00:01:48.929 --> 00:01:48.939 align:start position:0%
collection list set math and so forth
 

00:01:48.939 --> 00:01:52.139 align:start position:0%
collection list set math and so forth
and<00:01:49.119><c> also</c><00:01:50.109><c> the</c><00:01:50.529><c> collections</c><00:01:50.950><c> that</c><00:01:51.149><c> that</c>

00:01:52.139 --> 00:01:52.149 align:start position:0%
and also the collections that that
 

00:01:52.149 --> 00:01:54.569 align:start position:0%
and also the collections that that
probably<00:01:53.049><c> everybody</c><00:01:53.350><c> uses</c><00:01:53.829><c> like</c><00:01:54.039><c> ArrayList</c>

00:01:54.569 --> 00:01:54.579 align:start position:0%
probably everybody uses like ArrayList
 

00:01:54.579 --> 00:01:58.289 align:start position:0%
probably everybody uses like ArrayList
and<00:01:54.700><c> hash</c><00:01:54.939><c> map</c><00:01:55.179><c> and</c><00:01:55.950><c> so</c><00:01:56.950><c> I</c><00:01:57.310><c> don't</c><00:01:58.060><c> have</c><00:01:58.209><c> the</c>

00:01:58.289 --> 00:01:58.299 align:start position:0%
and hash map and so I don't have the
 

00:01:58.299 --> 00:01:59.819 align:start position:0%
and hash map and so I don't have the
reference<00:01:58.659><c> on</c><00:01:58.749><c> my</c><00:01:58.899><c> fingertips</c><00:01:59.319><c> but</c><00:01:59.499><c> there</c><00:01:59.679><c> was</c>

00:01:59.819 --> 00:01:59.829 align:start position:0%
reference on my fingertips but there was
 

00:01:59.829 --> 00:02:01.589 align:start position:0%
reference on my fingertips but there was
some<00:02:00.039><c> paper</c><00:02:00.520><c> that</c><00:02:00.759><c> did</c><00:02:00.909><c> an</c><00:02:01.029><c> empirical</c><00:02:01.509><c> study</c>

00:02:01.589 --> 00:02:01.599 align:start position:0%
some paper that did an empirical study
 

00:02:01.599 --> 00:02:05.699 align:start position:0%
some paper that did an empirical study
of<00:02:02.310><c> of</c><00:02:03.359><c> collection</c><00:02:04.359><c> usage</c><00:02:04.689><c> and</c><00:02:04.929><c> ArrayList</c><00:02:05.619><c> and</c>

00:02:05.699 --> 00:02:05.709 align:start position:0%
of of collection usage and ArrayList and
 

00:02:05.709 --> 00:02:07.709 align:start position:0%
of of collection usage and ArrayList and
hash<00:02:05.950><c> map</c><00:02:06.189><c> are</c><00:02:06.459><c> by</c><00:02:06.670><c> far</c><00:02:06.969><c> the</c><00:02:07.029><c> two</c><00:02:07.299><c> most</c>

00:02:07.709 --> 00:02:07.719 align:start position:0%
hash map are by far the two most
 

00:02:07.719 --> 00:02:09.660 align:start position:0%
hash map are by far the two most
frequently<00:02:08.349><c> used</c><00:02:08.380><c> collections</c><00:02:08.979><c> in</c><00:02:09.190><c> Java</c>

00:02:09.660 --> 00:02:09.670 align:start position:0%
frequently used collections in Java
 

00:02:09.670 --> 00:02:11.520 align:start position:0%
frequently used collections in Java
programs<00:02:10.060><c> so</c><00:02:10.539><c> it's</c><00:02:10.690><c> pretty</c><00:02:10.840><c> amazing</c><00:02:11.020><c> now</c>

00:02:11.520 --> 00:02:11.530 align:start position:0%
programs so it's pretty amazing now
 

00:02:11.530 --> 00:02:12.510 align:start position:0%
programs so it's pretty amazing now
these<00:02:11.740><c> these</c><00:02:11.980><c> classes</c><00:02:12.370><c> have</c><00:02:12.490><c> been</c>

00:02:12.510 --> 00:02:12.520 align:start position:0%
these these classes have been
 

00:02:12.520 --> 00:02:13.600 align:start position:0%
these these classes have been
reimplemented<00:02:13.060><c> over</c><00:02:13.390><c> the</c>

00:02:13.600 --> 00:02:13.610 align:start position:0%
reimplemented over the
 

00:02:13.610 --> 00:02:16.630 align:start position:0%
reimplemented over the
but<00:02:14.270><c> the</c><00:02:14.990><c> the</c><00:02:15.320><c> basics</c><00:02:15.740><c> of</c><00:02:15.890><c> these</c><00:02:16.070><c> classes</c><00:02:16.520><c> were</c>

00:02:16.630 --> 00:02:16.640 align:start position:0%
but the the basics of these classes were
 

00:02:16.640 --> 00:02:18.130 align:start position:0%
but the the basics of these classes were
introduced<00:02:17.060><c> nineteen</c><00:02:17.390><c> years</c><00:02:17.570><c> ago</c><00:02:17.630><c> and</c>

00:02:18.130 --> 00:02:18.140 align:start position:0%
introduced nineteen years ago and
 

00:02:18.140 --> 00:02:19.660 align:start position:0%
introduced nineteen years ago and
there's<00:02:18.350><c> still</c><00:02:18.500><c> the</c><00:02:18.590><c> most</c><00:02:18.770><c> among</c><00:02:19.430><c> the</c><00:02:19.550><c> most</c>

00:02:19.660 --> 00:02:19.670 align:start position:0%
there's still the most among the most
 

00:02:19.670 --> 00:02:22.680 align:start position:0%
there's still the most among the most
popular<00:02:20.620><c> collection</c><00:02:21.620><c> classes</c><00:02:21.800><c> in</c><00:02:22.100><c> use</c><00:02:22.220><c> today</c>

00:02:22.680 --> 00:02:22.690 align:start position:0%
popular collection classes in use today
 

00:02:22.690 --> 00:02:25.930 align:start position:0%
popular collection classes in use today
now<00:02:23.690><c> the</c><00:02:23.810><c> next</c><00:02:24.110><c> big</c><00:02:24.320><c> step</c><00:02:24.560><c> up</c><00:02:24.770><c> was</c><00:02:24.980><c> in</c><00:02:25.130><c> 2004</c>

00:02:25.930 --> 00:02:25.940 align:start position:0%
now the next big step up was in 2004
 

00:02:25.940 --> 00:02:29.170 align:start position:0%
now the next big step up was in 2004
with<00:02:26.420><c> Java</c><00:02:26.720><c> SE</c><00:02:27.170><c> 5</c><00:02:27.620><c> when</c><00:02:28.400><c> generics</c><00:02:29.030><c> were</c>

00:02:29.170 --> 00:02:29.180 align:start position:0%
with Java SE 5 when generics were
 

00:02:29.180 --> 00:02:31.960 align:start position:0%
with Java SE 5 when generics were
introduced<00:02:29.690><c> and</c><00:02:29.960><c> so</c><00:02:30.770><c> as</c><00:02:31.220><c> part</c><00:02:31.550><c> of</c><00:02:31.760><c> the</c>

00:02:31.960 --> 00:02:31.970 align:start position:0%
introduced and so as part of the
 

00:02:31.970 --> 00:02:33.730 align:start position:0%
introduced and so as part of the
introduction<00:02:32.510><c> of</c><00:02:32.870><c> generics</c><00:02:33.470><c> to</c><00:02:33.560><c> the</c>

00:02:33.730 --> 00:02:33.740 align:start position:0%
introduction of generics to the
 

00:02:33.740 --> 00:02:36.640 align:start position:0%
introduction of generics to the
programming<00:02:34.250><c> language</c><00:02:35.200><c> the</c><00:02:36.200><c> collection</c>

00:02:36.640 --> 00:02:36.650 align:start position:0%
programming language the collection
 

00:02:36.650 --> 00:02:38.980 align:start position:0%
programming language the collection
libraries<00:02:37.220><c> were</c><00:02:37.400><c> upgraded</c><00:02:38.090><c> to</c><00:02:38.120><c> be</c><00:02:38.420><c> genera</c>

00:02:38.980 --> 00:02:38.990 align:start position:0%
libraries were upgraded to be genera
 

00:02:38.990 --> 00:02:41.230 align:start position:0%
libraries were upgraded to be genera
fide<00:02:39.320><c> and</c><00:02:39.740><c> so</c><00:02:39.890><c> you</c><00:02:39.950><c> got</c><00:02:40.130><c> better</c><00:02:40.430><c> type-checking</c>

00:02:41.230 --> 00:02:41.240 align:start position:0%
fide and so you got better type-checking
 

00:02:41.240 --> 00:02:43.930 align:start position:0%
fide and so you got better type-checking
when<00:02:41.600><c> you</c><00:02:41.720><c> put</c><00:02:42.050><c> elements</c><00:02:42.860><c> into</c><00:02:43.220><c> and</c><00:02:43.550><c> removed</c>

00:02:43.930 --> 00:02:43.940 align:start position:0%
when you put elements into and removed
 

00:02:43.940 --> 00:02:48.330 align:start position:0%
when you put elements into and removed
elements<00:02:44.090><c> from</c><00:02:44.630><c> collections</c><00:02:45.410><c> and</c><00:02:45.850><c> in</c><00:02:46.850><c> Java</c><00:02:47.150><c> 8</c>

00:02:48.330 --> 00:02:48.340 align:start position:0%
elements from collections and in Java 8
 

00:02:48.340 --> 00:02:51.310 align:start position:0%
elements from collections and in Java 8
the<00:02:49.340><c> language</c><00:02:49.730><c> was</c><00:02:49.940><c> once</c><00:02:50.360><c> again</c><00:02:50.630><c> operated</c><00:02:51.110><c> big</c>

00:02:51.310 --> 00:02:51.320 align:start position:0%
the language was once again operated big
 

00:02:51.320 --> 00:02:53.260 align:start position:0%
the language was once again operated big
upgrade<00:02:51.709><c> to</c><00:02:51.890><c> add</c><00:02:52.010><c> lambda</c><00:02:52.580><c> in</c><00:02:52.850><c> the</c><00:02:53.000><c> streams</c>

00:02:53.260 --> 00:02:53.270 align:start position:0%
upgrade to add lambda in the streams
 

00:02:53.270 --> 00:02:55.420 align:start position:0%
upgrade to add lambda in the streams
library<00:02:53.750><c> now</c><00:02:54.080><c> the</c><00:02:54.140><c> streams</c><00:02:54.410><c> library</c><00:02:54.860><c> is</c><00:02:55.010><c> kind</c>

00:02:55.420 --> 00:02:55.430 align:start position:0%
library now the streams library is kind
 

00:02:55.430 --> 00:02:57.040 align:start position:0%
library now the streams library is kind
of<00:02:55.580><c> not</c><00:02:55.760><c> officially</c><00:02:56.570><c> part</c><00:02:56.600><c> of</c><00:02:56.989><c> the</c>

00:02:57.040 --> 00:02:57.050 align:start position:0%
of not officially part of the
 

00:02:57.050 --> 00:02:59.020 align:start position:0%
of not officially part of the
collections<00:02:57.590><c> framework</c><00:02:57.770><c> but</c><00:02:58.430><c> basically</c><00:02:58.790><c> it</c>

00:02:59.020 --> 00:02:59.030 align:start position:0%
collections framework but basically it
 

00:02:59.030 --> 00:03:02.470 align:start position:0%
collections framework but basically it
it<00:02:59.510><c> the</c><00:02:59.989><c> the</c><00:03:00.200><c> most</c><00:03:00.410><c> frequent</c><00:03:01.160><c> stream</c><00:03:02.150><c> source</c>

00:03:02.470 --> 00:03:02.480 align:start position:0%
it the the most frequent stream source
 

00:03:02.480 --> 00:03:04.449 align:start position:0%
it the the most frequent stream source
and<00:03:02.870><c> stream</c><00:03:03.110><c> destination</c><00:03:03.770><c> are</c><00:03:03.920><c> collections</c>

00:03:04.449 --> 00:03:04.459 align:start position:0%
and stream destination are collections
 

00:03:04.459 --> 00:03:06.640 align:start position:0%
and stream destination are collections
so<00:03:05.030><c> the</c><00:03:05.120><c> streams</c><00:03:05.420><c> library</c><00:03:05.870><c> works</c><00:03:06.140><c> very</c>

00:03:06.640 --> 00:03:06.650 align:start position:0%
so the streams library works very
 

00:03:06.650 --> 00:03:08.370 align:start position:0%
so the streams library works very
closely<00:03:06.830><c> with</c><00:03:07.160><c> the</c><00:03:07.730><c> collections</c><00:03:08.150><c> framework</c>

00:03:08.370 --> 00:03:08.380 align:start position:0%
closely with the collections framework
 

00:03:08.380 --> 00:03:10.660 align:start position:0%
closely with the collections framework
but<00:03:09.380><c> there's</c><00:03:09.560><c> another</c><00:03:09.800><c> language</c><00:03:10.220><c> feature</c><00:03:10.459><c> in</c>

00:03:10.660 --> 00:03:10.670 align:start position:0%
but there's another language feature in
 

00:03:10.670 --> 00:03:13.690 align:start position:0%
but there's another language feature in
Java<00:03:10.910><c> 8</c><00:03:11.180><c> which</c><00:03:11.870><c> is</c><00:03:11.980><c> default</c><00:03:12.980><c> methods</c><00:03:13.489><c> on</c>

00:03:13.690 --> 00:03:13.700 align:start position:0%
Java 8 which is default methods on
 

00:03:13.700 --> 00:03:16.330 align:start position:0%
Java 8 which is default methods on
interfaces<00:03:14.600><c> and</c><00:03:15.020><c> so</c><00:03:15.080><c> that</c><00:03:15.770><c> got</c><00:03:15.920><c> slipped</c><00:03:16.190><c> in</c>

00:03:16.330 --> 00:03:16.340 align:start position:0%
interfaces and so that got slipped in
 

00:03:16.340 --> 00:03:17.620 align:start position:0%
interfaces and so that got slipped in
there<00:03:16.489><c> you</c><00:03:16.610><c> probably</c><00:03:16.760><c> are</c><00:03:17.150><c> familiar</c><00:03:17.510><c> with</c>

00:03:17.620 --> 00:03:17.630 align:start position:0%
there you probably are familiar with
 

00:03:17.630 --> 00:03:19.690 align:start position:0%
there you probably are familiar with
that<00:03:17.690><c> but</c><00:03:18.080><c> one</c><00:03:18.680><c> of</c><00:03:18.799><c> the</c><00:03:18.860><c> things</c><00:03:19.040><c> that</c><00:03:19.250><c> did</c><00:03:19.459><c> was</c>

00:03:19.690 --> 00:03:19.700 align:start position:0%
that but one of the things that did was
 

00:03:19.700 --> 00:03:22.600 align:start position:0%
that but one of the things that did was
add<00:03:19.940><c> a</c><00:03:20.420><c> bunch</c><00:03:20.660><c> of</c><00:03:20.870><c> methods</c><00:03:21.049><c> to</c><00:03:21.500><c> those</c><00:03:22.130><c> old</c>

00:03:22.600 --> 00:03:22.610 align:start position:0%
add a bunch of methods to those old
 

00:03:22.610 --> 00:03:24.940 align:start position:0%
add a bunch of methods to those old
collection<00:03:23.299><c> interfaces</c><00:03:23.840><c> like</c><00:03:23.950><c> collection</c>

00:03:24.940 --> 00:03:24.950 align:start position:0%
collection interfaces like collection
 

00:03:24.950 --> 00:03:27.670 align:start position:0%
collection interfaces like collection
list<00:03:25.250><c> set</c><00:03:25.670><c> math</c><00:03:26.000><c> and</c><00:03:26.299><c> so</c><00:03:26.480><c> forth</c><00:03:26.750><c> and</c><00:03:27.019><c> so</c><00:03:27.500><c> what</c>

00:03:27.670 --> 00:03:27.680 align:start position:0%
list set math and so forth and so what
 

00:03:27.680 --> 00:03:29.170 align:start position:0%
list set math and so forth and so what
that<00:03:27.830><c> did</c><00:03:28.070><c> is</c><00:03:28.280><c> that</c><00:03:28.400><c> had</c><00:03:28.580><c> the</c><00:03:28.730><c> effect</c><00:03:28.820><c> of</c>

00:03:29.170 --> 00:03:29.180 align:start position:0%
that did is that had the effect of
 

00:03:29.180 --> 00:03:31.180 align:start position:0%
that did is that had the effect of
enhancing<00:03:29.750><c> every</c><00:03:30.230><c> single</c><00:03:30.650><c> existing</c>

00:03:31.180 --> 00:03:31.190 align:start position:0%
enhancing every single existing
 

00:03:31.190 --> 00:03:32.949 align:start position:0%
enhancing every single existing
collection<00:03:31.670><c> even</c><00:03:32.209><c> if</c><00:03:32.510><c> that</c><00:03:32.630><c> collection</c>

00:03:32.949 --> 00:03:32.959 align:start position:0%
collection even if that collection
 

00:03:32.959 --> 00:03:35.440 align:start position:0%
collection even if that collection
hadn't<00:03:33.380><c> explicitly</c><00:03:34.040><c> been</c><00:03:34.190><c> upgraded</c><00:03:34.820><c> to</c><00:03:35.000><c> Java</c>

00:03:35.440 --> 00:03:35.450 align:start position:0%
hadn't explicitly been upgraded to Java
 

00:03:35.450 --> 00:03:37.660 align:start position:0%
hadn't explicitly been upgraded to Java
8<00:03:35.720><c> the</c><00:03:36.140><c> default</c><00:03:36.470><c> methods</c><00:03:36.890><c> really</c><00:03:37.100><c> added</c><00:03:37.459><c> a</c><00:03:37.519><c> lot</c>

00:03:37.660 --> 00:03:37.670 align:start position:0%
8 the default methods really added a lot
 

00:03:37.670 --> 00:03:38.860 align:start position:0%
8 the default methods really added a lot
of<00:03:37.760><c> power</c><00:03:37.970><c> to</c><00:03:38.209><c> the</c><00:03:38.269><c> collections</c><00:03:38.660><c> framework</c>

00:03:38.860 --> 00:03:38.870 align:start position:0%
of power to the collections framework
 

00:03:38.870 --> 00:03:40.660 align:start position:0%
of power to the collections framework
without<00:03:39.620><c> changing</c><00:03:40.130><c> the</c><00:03:40.220><c> collections</c>

00:03:40.660 --> 00:03:40.670 align:start position:0%
without changing the collections
 

00:03:40.670 --> 00:03:42.880 align:start position:0%
without changing the collections
framework<00:03:40.910><c> at</c><00:03:41.780><c> all</c><00:03:41.959><c> so</c><00:03:42.290><c> it</c><00:03:42.350><c> was</c><00:03:42.470><c> actually</c><00:03:42.860><c> very</c>

00:03:42.880 --> 00:03:42.890 align:start position:0%
framework at all so it was actually very
 

00:03:42.890 --> 00:03:45.580 align:start position:0%
framework at all so it was actually very
interesting<00:03:43.130><c> enhancement</c><00:03:44.090><c> now</c><00:03:45.080><c> along</c><00:03:45.440><c> the</c>

00:03:45.580 --> 00:03:45.590 align:start position:0%
interesting enhancement now along the
 

00:03:45.590 --> 00:03:47.920 align:start position:0%
interesting enhancement now along the
way<00:03:45.709><c> there</c><00:03:45.980><c> have</c><00:03:46.010><c> been</c><00:03:46.160><c> a</c><00:03:46.220><c> few</c><00:03:46.310><c> other</c><00:03:46.930><c> classes</c>

00:03:47.920 --> 00:03:47.930 align:start position:0%
way there have been a few other classes
 

00:03:47.930 --> 00:03:50.740 align:start position:0%
way there have been a few other classes
added<00:03:48.730><c> collections</c><00:03:49.730><c> implementations</c><00:03:50.420><c> added</c>

00:03:50.740 --> 00:03:50.750 align:start position:0%
added collections implementations added
 

00:03:50.750 --> 00:03:52.810 align:start position:0%
added collections implementations added
here<00:03:50.959><c> and</c><00:03:51.049><c> there</c><00:03:51.170><c> such</c><00:03:51.500><c> as</c><00:03:51.709><c> priority</c><00:03:52.549><c> queue</c>

00:03:52.810 --> 00:03:52.820 align:start position:0%
here and there such as priority queue
 

00:03:52.820 --> 00:03:55.539 align:start position:0%
here and there such as priority queue
and<00:03:53.180><c> array</c><00:03:53.480><c> deck</c><00:03:53.690><c> and</c><00:03:53.900><c> so</c><00:03:54.049><c> forth</c><00:03:54.290><c> but</c><00:03:54.980><c> really</c>

00:03:55.539 --> 00:03:55.549 align:start position:0%
and array deck and so forth but really
 

00:03:55.549 --> 00:03:57.640 align:start position:0%
and array deck and so forth but really
these<00:03:55.700><c> are</c><00:03:55.850><c> the</c><00:03:55.910><c> highlights</c><00:03:56.330><c> of</c><00:03:56.510><c> the</c><00:03:57.230><c> history</c>

00:03:57.640 --> 00:03:57.650 align:start position:0%
these are the highlights of the history
 

00:03:57.650 --> 00:04:00.100 align:start position:0%
these are the highlights of the history
of<00:03:57.980><c> the</c><00:03:58.430><c> collections</c><00:03:58.790><c> framework</c><00:03:58.970><c> up</c><00:03:59.660><c> until</c>

00:04:00.100 --> 00:04:00.110 align:start position:0%
of the collections framework up until
 

00:04:00.110 --> 00:04:03.490 align:start position:0%
of the collections framework up until
now<00:04:00.320><c> alright</c><00:04:01.280><c> so</c><00:04:01.340><c> in</c><00:04:01.549><c> Java</c><00:04:01.790><c> 9</c><00:04:02.120><c> the</c><00:04:02.930><c> main</c>

00:04:03.490 --> 00:04:03.500 align:start position:0%
now alright so in Java 9 the main
 

00:04:03.500 --> 00:04:04.900 align:start position:0%
now alright so in Java 9 the main
enhancement<00:04:04.070><c> to</c><00:04:04.130><c> the</c><00:04:04.220><c> collections</c><00:04:04.580><c> framework</c>

00:04:04.900 --> 00:04:04.910 align:start position:0%
enhancement to the collections framework
 

00:04:04.910 --> 00:04:07.350 align:start position:0%
enhancement to the collections framework
is<00:04:05.239><c> called</c><00:04:05.810><c> the</c><00:04:05.959><c> convenience</c><00:04:06.530><c> collection</c>

00:04:07.350 --> 00:04:07.360 align:start position:0%
is called the convenience collection
 

00:04:07.360 --> 00:04:09.670 align:start position:0%
is called the convenience collection
collections<00:04:08.360><c> convenience</c><00:04:08.870><c> factory</c><00:04:09.260><c> methods</c>

00:04:09.670 --> 00:04:09.680 align:start position:0%
collections convenience factory methods
 

00:04:09.680 --> 00:04:12.009 align:start position:0%
collections convenience factory methods
so<00:04:10.130><c> they're</c><00:04:10.310><c> factory</c><00:04:10.790><c> methods</c><00:04:11.209><c> for</c><00:04:11.540><c> creating</c>

00:04:12.009 --> 00:04:12.019 align:start position:0%
so they're factory methods for creating
 

00:04:12.019 --> 00:04:15.039 align:start position:0%
so they're factory methods for creating
instances<00:04:12.680><c> of</c><00:04:13.100><c> new</c><00:04:13.549><c> collections</c><00:04:14.090><c> and</c><00:04:14.420><c> so</c>

00:04:15.039 --> 00:04:15.049 align:start position:0%
instances of new collections and so
 

00:04:15.049 --> 00:04:16.569 align:start position:0%
instances of new collections and so
these<00:04:15.350><c> are</c><00:04:15.500><c> the</c><00:04:15.590><c> three</c><00:04:15.769><c> main</c><00:04:15.920><c> goals</c><00:04:16.160><c> here</c>

00:04:16.569 --> 00:04:16.579 align:start position:0%
these are the three main goals here
 

00:04:16.579 --> 00:04:19.449 align:start position:0%
these are the three main goals here
convenience<00:04:17.239><c> and</c><00:04:17.510><c> brevity</c><00:04:17.859><c> space</c><00:04:18.859><c> efficiency</c>

00:04:19.449 --> 00:04:19.459 align:start position:0%
convenience and brevity space efficiency
 

00:04:19.459 --> 00:04:22.210 align:start position:0%
convenience and brevity space efficiency
and<00:04:20.079><c> unmodifiable</c><00:04:21.079><c> 'ti</c><00:04:21.530><c> so</c><00:04:21.770><c> I'm</c><00:04:21.890><c> going</c><00:04:22.039><c> to</c><00:04:22.070><c> go</c>

00:04:22.210 --> 00:04:22.220 align:start position:0%
and unmodifiable 'ti so I'm going to go
 

00:04:22.220 --> 00:04:25.600 align:start position:0%
and unmodifiable 'ti so I'm going to go
through<00:04:22.910><c> those</c><00:04:23.060><c> in</c><00:04:23.479><c> some</c><00:04:24.140><c> detail</c>

00:04:25.600 --> 00:04:25.610 align:start position:0%
through those in some detail
 

00:04:25.610 --> 00:04:28.879 align:start position:0%
through those in some detail
all<00:04:26.610><c> right</c><00:04:26.820><c> so</c><00:04:27.090><c> a</c><00:04:27.539><c> bit</c><00:04:27.930><c> of</c><00:04:28.020><c> history</c><00:04:28.350><c> here</c><00:04:28.710><c> this</c>

00:04:28.879 --> 00:04:28.889 align:start position:0%
all right so a bit of history here this
 

00:04:28.889 --> 00:04:33.379 align:start position:0%
all right so a bit of history here this
is<00:04:29.009><c> a</c><00:04:29.039><c> library</c><00:04:29.520><c> only</c><00:04:30.120><c> API</c><00:04:30.720><c> and</c><00:04:31.199><c> so</c><00:04:31.380><c> a</c><00:04:31.410><c> mark</c><00:04:32.389><c> what</c>

00:04:33.379 --> 00:04:33.389 align:start position:0%
is a library only API and so a mark what
 

00:04:33.389 --> 00:04:35.090 align:start position:0%
is a library only API and so a mark what
was<00:04:33.509><c> this</c><00:04:33.630><c> no</c><00:04:33.780><c> this</c><00:04:33.960><c> was</c><00:04:34.110><c> actually</c><00:04:34.289><c> in</c><00:04:34.650><c> the</c><00:04:34.800><c> ask</c>

00:04:35.090 --> 00:04:35.100 align:start position:0%
was this no this was actually in the ask
 

00:04:35.100 --> 00:04:38.570 align:start position:0%
was this no this was actually in the ask
the<00:04:35.310><c> architects</c><00:04:36.350><c> session</c><00:04:37.350><c> yesterday</c><00:04:37.949><c> so</c><00:04:38.190><c> so</c>

00:04:38.570 --> 00:04:38.580 align:start position:0%
the architects session yesterday so so
 

00:04:38.580 --> 00:04:40.249 align:start position:0%
the architects session yesterday so so
one<00:04:38.729><c> of</c><00:04:38.850><c> the</c><00:04:38.910><c> things</c><00:04:39.150><c> that</c><00:04:39.360><c> other</c><00:04:39.570><c> languages</c>

00:04:40.249 --> 00:04:40.259 align:start position:0%
one of the things that other languages
 

00:04:40.259 --> 00:04:42.290 align:start position:0%
one of the things that other languages
have<00:04:40.500><c> is</c><00:04:40.889><c> something</c><00:04:41.340><c> called</c><00:04:41.490><c> collection</c>

00:04:42.290 --> 00:04:42.300 align:start position:0%
have is something called collection
 

00:04:42.300 --> 00:04:46.430 align:start position:0%
have is something called collection
literals<00:04:42.720><c> and</c><00:04:43.400><c> so</c><00:04:44.690><c> there</c><00:04:45.690><c> have</c><00:04:46.050><c> been</c><00:04:46.259><c> efforts</c>

00:04:46.430 --> 00:04:46.440 align:start position:0%
literals and so there have been efforts
 

00:04:46.440 --> 00:04:48.409 align:start position:0%
literals and so there have been efforts
to<00:04:46.770><c> add</c><00:04:46.949><c> collection</c><00:04:47.400><c> literals</c><00:04:47.759><c> to</c><00:04:48.030><c> the</c><00:04:48.210><c> java</c>

00:04:48.409 --> 00:04:48.419 align:start position:0%
to add collection literals to the java
 

00:04:48.419 --> 00:04:51.290 align:start position:0%
to add collection literals to the java
programming<00:04:48.630><c> language</c><00:04:49.350><c> but</c><00:04:50.150><c> there's</c><00:04:51.150><c> some</c>

00:04:51.290 --> 00:04:51.300 align:start position:0%
programming language but there's some
 

00:04:51.300 --> 00:04:52.730 align:start position:0%
programming language but there's some
problems<00:04:51.780><c> so</c><00:04:51.930><c> the</c><00:04:52.020><c> way</c><00:04:52.139><c> that</c><00:04:52.169><c> Java</c><00:04:52.560><c> is</c>

00:04:52.730 --> 00:04:52.740 align:start position:0%
problems so the way that Java is
 

00:04:52.740 --> 00:04:56.420 align:start position:0%
problems so the way that Java is
designed<00:04:53.100><c> is</c><00:04:53.490><c> the</c><00:04:53.880><c> core</c><00:04:54.539><c> aggregations</c><00:04:55.410><c> if</c><00:04:56.220><c> you</c>

00:04:56.420 --> 00:04:56.430 align:start position:0%
designed is the core aggregations if you
 

00:04:56.430 --> 00:04:58.400 align:start position:0%
designed is the core aggregations if you
want<00:04:56.580><c> to</c><00:04:56.669><c> aggregate</c><00:04:57.060><c> certain</c><00:04:57.539><c> data</c><00:04:57.780><c> in</c><00:04:58.080><c> the</c>

00:04:58.400 --> 00:04:58.410 align:start position:0%
want to aggregate certain data in the
 

00:04:58.410 --> 00:05:00.379 align:start position:0%
want to aggregate certain data in the
java<00:04:58.590><c> programming</c><00:04:59.039><c> language</c><00:04:59.210><c> you</c><00:05:00.210><c> have</c>

00:05:00.379 --> 00:05:00.389 align:start position:0%
java programming language you have
 

00:05:00.389 --> 00:05:02.089 align:start position:0%
java programming language you have
arrays<00:05:00.900><c> which</c><00:05:01.349><c> are</c><00:05:01.440><c> built</c><00:05:01.710><c> into</c><00:05:01.889><c> the</c><00:05:02.009><c> language</c>

00:05:02.089 --> 00:05:02.099 align:start position:0%
arrays which are built into the language
 

00:05:02.099 --> 00:05:04.790 align:start position:0%
arrays which are built into the language
and<00:05:02.580><c> you</c><00:05:02.940><c> have</c><00:05:03.120><c> classes</c><00:05:03.960><c> which</c><00:05:04.289><c> are</c><00:05:04.380><c> built</c><00:05:04.650><c> in</c>

00:05:04.790 --> 00:05:04.800 align:start position:0%
and you have classes which are built in
 

00:05:04.800 --> 00:05:07.460 align:start position:0%
and you have classes which are built in
a<00:05:04.889><c> language</c><00:05:05.250><c> you</c><00:05:05.310><c> can</c><00:05:05.639><c> add</c><00:05:06.330><c> fields</c><00:05:06.990><c> to</c><00:05:07.139><c> a</c><00:05:07.169><c> class</c>

00:05:07.460 --> 00:05:07.470 align:start position:0%
a language you can add fields to a class
 

00:05:07.470 --> 00:05:09.379 align:start position:0%
a language you can add fields to a class
and<00:05:07.800><c> that's</c><00:05:07.979><c> how</c><00:05:08.130><c> you</c><00:05:08.220><c> that's</c><00:05:08.910><c> how</c><00:05:09.030><c> you</c><00:05:09.060><c> group</c>

00:05:09.379 --> 00:05:09.389 align:start position:0%
and that's how you that's how you group
 

00:05:09.389 --> 00:05:11.960 align:start position:0%
and that's how you that's how you group
unrelated<00:05:10.080><c> data</c><00:05:10.289><c> into</c><00:05:10.770><c> into</c><00:05:11.580><c> a</c><00:05:11.610><c> higher-level</c>

00:05:11.960 --> 00:05:11.970 align:start position:0%
unrelated data into into a higher-level
 

00:05:11.970 --> 00:05:13.879 align:start position:0%
unrelated data into into a higher-level
construct<00:05:12.720><c> that</c><00:05:12.870><c> that</c><00:05:13.229><c> creates</c><00:05:13.830><c> a</c>

00:05:13.879 --> 00:05:13.889 align:start position:0%
construct that that creates a
 

00:05:13.889 --> 00:05:16.460 align:start position:0%
construct that that creates a
relationship<00:05:14.400><c> between</c><00:05:14.550><c> them</c><00:05:14.880><c> but</c><00:05:15.419><c> kind</c><00:05:16.380><c> of</c>

00:05:16.460 --> 00:05:16.470 align:start position:0%
relationship between them but kind of
 

00:05:16.470 --> 00:05:18.710 align:start position:0%
relationship between them but kind of
higher<00:05:16.740><c> level</c><00:05:16.770><c> abstractions</c><00:05:17.729><c> like</c><00:05:17.849><c> a</c><00:05:18.030><c> set</c><00:05:18.419><c> or</c>

00:05:18.710 --> 00:05:18.720 align:start position:0%
higher level abstractions like a set or
 

00:05:18.720 --> 00:05:21.800 align:start position:0%
higher level abstractions like a set or
or<00:05:19.259><c> some</c><00:05:20.190><c> higher</c><00:05:20.580><c> level</c><00:05:20.610><c> data</c><00:05:21.060><c> structure</c><00:05:21.509><c> is</c>

00:05:21.800 --> 00:05:21.810 align:start position:0%
or some higher level data structure is
 

00:05:21.810 --> 00:05:24.680 align:start position:0%
or some higher level data structure is
really<00:05:22.520><c> delegated</c><00:05:23.520><c> to</c><00:05:23.639><c> the</c><00:05:23.789><c> libraries</c><00:05:24.389><c> in</c><00:05:24.599><c> the</c>

00:05:24.680 --> 00:05:24.690 align:start position:0%
really delegated to the libraries in the
 

00:05:24.690 --> 00:05:27.469 align:start position:0%
really delegated to the libraries in the
way<00:05:24.900><c> Java</c><00:05:25.199><c> has</c><00:05:25.410><c> been</c><00:05:25.650><c> set</c><00:05:25.860><c> up</c><00:05:25.889><c> and</c><00:05:26.250><c> so</c><00:05:26.789><c> if</c><00:05:27.060><c> you</c>

00:05:27.469 --> 00:05:27.479 align:start position:0%
way Java has been set up and so if you
 

00:05:27.479 --> 00:05:31.120 align:start position:0%
way Java has been set up and so if you
created<00:05:28.470><c> a</c><00:05:28.620><c> language</c><00:05:28.979><c> feature</c><00:05:29.430><c> call</c><00:05:30.300><c> that</c>

00:05:31.120 --> 00:05:31.130 align:start position:0%
created a language feature call that
 

00:05:31.130 --> 00:05:36.020 align:start position:0%
created a language feature call that
that<00:05:32.130><c> allowed</c><00:05:32.550><c> you</c><00:05:32.880><c> to</c><00:05:32.909><c> write</c><00:05:33.630><c> a</c><00:05:34.639><c> that</c><00:05:35.639><c> allowed</c>

00:05:36.020 --> 00:05:36.030 align:start position:0%
that allowed you to write a that allowed
 

00:05:36.030 --> 00:05:38.149 align:start position:0%
that allowed you to write a that allowed
you<00:05:36.180><c> to</c><00:05:36.210><c> declare</c><00:05:36.690><c> a</c><00:05:36.900><c> collection</c><00:05:37.500><c> in</c><00:05:37.919><c> the</c>

00:05:38.149 --> 00:05:38.159 align:start position:0%
you to declare a collection in the
 

00:05:38.159 --> 00:05:41.330 align:start position:0%
you to declare a collection in the
programming<00:05:38.580><c> language</c><00:05:38.729><c> that</c><00:05:39.510><c> would</c><00:05:39.690><c> tie</c><00:05:40.380><c> the</c>

00:05:41.330 --> 00:05:41.340 align:start position:0%
programming language that would tie the
 

00:05:41.340 --> 00:05:43.580 align:start position:0%
programming language that would tie the
programming<00:05:42.060><c> language</c><00:05:42.389><c> to</c><00:05:42.570><c> the</c><00:05:42.659><c> library</c><00:05:43.169><c> too</c>

00:05:43.580 --> 00:05:43.590 align:start position:0%
programming language to the library too
 

00:05:43.590 --> 00:05:46.490 align:start position:0%
programming language to the library too
tightly<00:05:43.979><c> and</c><00:05:44.400><c> they're</c><00:05:45.240><c> a</c><00:05:45.270><c> bunch</c><00:05:45.539><c> of</c><00:05:45.900><c> design</c>

00:05:46.490 --> 00:05:46.500 align:start position:0%
tightly and they're a bunch of design
 

00:05:46.500 --> 00:05:48.140 align:start position:0%
tightly and they're a bunch of design
issues<00:05:46.830><c> that</c><00:05:47.010><c> fell</c><00:05:47.220><c> out</c><00:05:47.250><c> of</c><00:05:47.400><c> that</c><00:05:47.520><c> but</c><00:05:47.849><c> I</c><00:05:47.880><c> don't</c>

00:05:48.140 --> 00:05:48.150 align:start position:0%
issues that fell out of that but I don't
 

00:05:48.150 --> 00:05:50.270 align:start position:0%
issues that fell out of that but I don't
have<00:05:48.240><c> time</c><00:05:48.479><c> to</c><00:05:48.630><c> go</c><00:05:48.720><c> into</c><00:05:48.900><c> detail</c><00:05:49.500><c> so</c><00:05:50.039><c> you</c><00:05:50.070><c> do</c>

00:05:50.270 --> 00:05:50.280 align:start position:0%
have time to go into detail so you do
 

00:05:50.280 --> 00:05:51.500 align:start position:0%
have time to go into detail so you do
something<00:05:50.580><c> simple</c><00:05:50.849><c> but</c><00:05:51.240><c> that</c><00:05:51.270><c> would</c><00:05:51.479><c> be</c>

00:05:51.500 --> 00:05:51.510 align:start position:0%
something simple but that would be
 

00:05:51.510 --> 00:05:54.320 align:start position:0%
something simple but that would be
unsatisfactory<00:05:52.430><c> if</c><00:05:53.430><c> you</c><00:05:53.550><c> wanted</c><00:05:53.820><c> to</c><00:05:53.970><c> avoid</c>

00:05:54.320 --> 00:05:54.330 align:start position:0%
unsatisfactory if you wanted to avoid
 

00:05:54.330 --> 00:05:56.810 align:start position:0%
unsatisfactory if you wanted to avoid
that<00:05:54.659><c> that</c><00:05:55.320><c> solve</c><00:05:56.039><c> the</c><00:05:56.159><c> problems</c><00:05:56.550><c> with</c><00:05:56.699><c> that</c>

00:05:56.810 --> 00:05:56.820 align:start position:0%
that that solve the problems with that
 

00:05:56.820 --> 00:05:58.939 align:start position:0%
that that solve the problems with that
cause<00:05:57.090><c> it</c><00:05:58.020><c> turns</c><00:05:58.289><c> out</c><00:05:58.440><c> that</c><00:05:58.560><c> it</c><00:05:58.650><c> would</c><00:05:58.740><c> get</c><00:05:58.889><c> a</c>

00:05:58.939 --> 00:05:58.949 align:start position:0%
cause it turns out that it would get a
 

00:05:58.949 --> 00:06:01.370 align:start position:0%
cause it turns out that it would get a
lot<00:05:59.159><c> more</c><00:05:59.370><c> complex</c><00:05:59.729><c> and</c><00:06:00.000><c> so</c><00:06:00.509><c> we</c><00:06:00.690><c> set</c><00:06:00.930><c> aside</c><00:06:01.050><c> the</c>

00:06:01.370 --> 00:06:01.380 align:start position:0%
lot more complex and so we set aside the
 

00:06:01.380 --> 00:06:04.070 align:start position:0%
lot more complex and so we set aside the
notion<00:06:01.500><c> of</c><00:06:02.030><c> adding</c><00:06:03.030><c> collection</c><00:06:03.539><c> literals</c><00:06:03.900><c> to</c>

00:06:04.070 --> 00:06:04.080 align:start position:0%
notion of adding collection literals to
 

00:06:04.080 --> 00:06:05.839 align:start position:0%
notion of adding collection literals to
the<00:06:04.169><c> programming</c><00:06:04.680><c> language</c><00:06:05.070><c> and</c><00:06:05.340><c> decided</c><00:06:05.789><c> to</c>

00:06:05.839 --> 00:06:05.849 align:start position:0%
the programming language and decided to
 

00:06:05.849 --> 00:06:07.820 align:start position:0%
the programming language and decided to
focus<00:06:06.060><c> on</c><00:06:06.449><c> making</c><00:06:06.870><c> collections</c><00:06:07.139><c> easier</c><00:06:07.740><c> to</c>

00:06:07.820 --> 00:06:07.830 align:start position:0%
focus on making collections easier to
 

00:06:07.830 --> 00:06:15.290 align:start position:0%
focus on making collections easier to
use<00:06:08.070><c> using</c><00:06:09.030><c> only</c><00:06:09.770><c> library</c><00:06:10.770><c> API</c><00:06:11.490><c> construct</c><00:06:14.300><c> all</c>

00:06:15.290 --> 00:06:15.300 align:start position:0%
use using only library API construct all
 

00:06:15.300 --> 00:06:16.999 align:start position:0%
use using only library API construct all
right<00:06:15.479><c> and</c><00:06:15.690><c> so</c><00:06:15.840><c> here</c><00:06:16.080><c> it</c><00:06:16.169><c> is</c><00:06:16.289><c> this</c><00:06:16.500><c> is</c><00:06:16.650><c> a</c><00:06:16.680><c> quick</c>

00:06:16.999 --> 00:06:17.009 align:start position:0%
right and so here it is this is a quick
 

00:06:17.009 --> 00:06:19.550 align:start position:0%
right and so here it is this is a quick
rundown<00:06:17.280><c> of</c><00:06:17.490><c> the</c><00:06:18.360><c> the</c><00:06:18.750><c> new</c><00:06:18.840><c> API</c><00:06:19.169><c> that</c><00:06:19.259><c> were</c>

00:06:19.550 --> 00:06:19.560 align:start position:0%
rundown of the the new API that were
 

00:06:19.560 --> 00:06:23.089 align:start position:0%
rundown of the the new API that were
added<00:06:19.770><c> in</c><00:06:20.159><c> JDK</c><00:06:21.090><c> 9</c><00:06:21.300><c> so</c><00:06:21.900><c> there's</c><00:06:22.169><c> a</c><00:06:22.259><c> family</c><00:06:22.860><c> of</c>

00:06:23.089 --> 00:06:23.099 align:start position:0%
added in JDK 9 so there's a family of
 

00:06:23.099 --> 00:06:26.810 align:start position:0%
added in JDK 9 so there's a family of
methods<00:06:23.970><c> named</c><00:06:24.270><c> of</c><00:06:24.680><c> that</c><00:06:25.680><c> have</c><00:06:25.949><c> been</c><00:06:26.099><c> added</c><00:06:26.400><c> to</c>

00:06:26.810 --> 00:06:26.820 align:start position:0%
methods named of that have been added to
 

00:06:26.820 --> 00:06:29.149 align:start position:0%
methods named of that have been added to
the<00:06:27.270><c> list</c><00:06:27.509><c> method</c><00:06:27.780><c> these</c><00:06:28.050><c> are</c><00:06:28.110><c> static</c><00:06:28.740><c> methods</c>

00:06:29.149 --> 00:06:29.159 align:start position:0%
the list method these are static methods
 

00:06:29.159 --> 00:06:32.180 align:start position:0%
the list method these are static methods
on<00:06:29.370><c> the</c><00:06:29.400><c> list</c><00:06:29.820><c> interface</c><00:06:30.180><c> so</c><00:06:31.020><c> list</c><00:06:31.620><c> dot</c><00:06:31.979><c> of</c>

00:06:32.180 --> 00:06:32.190 align:start position:0%
on the list interface so list dot of
 

00:06:32.190 --> 00:06:36.190 align:start position:0%
on the list interface so list dot of
with<00:06:32.669><c> 0</c><00:06:33.539><c> 1</c><00:06:34.260><c> 2</c><00:06:34.740><c> all</c><00:06:35.039><c> the</c><00:06:35.130><c> way</c><00:06:35.159><c> up</c><00:06:35.250><c> to</c>

00:06:36.190 --> 00:06:36.200 align:start position:0%
with 0 1 2 all the way up to
 

00:06:36.200 --> 00:06:38.620 align:start position:0%
with 0 1 2 all the way up to
ten<00:06:36.410><c> arguments</c><00:06:36.890><c> or</c><00:06:37.040><c> there's</c><00:06:37.550><c> also</c><00:06:37.700><c> a</c><00:06:37.850><c> varargs</c>

00:06:38.620 --> 00:06:38.630 align:start position:0%
ten arguments or there's also a varargs
 

00:06:38.630 --> 00:06:41.080 align:start position:0%
ten arguments or there's also a varargs
version<00:06:39.620><c> so</c><00:06:39.800><c> you</c><00:06:39.890><c> can</c><00:06:40.040><c> pass</c><00:06:40.280><c> an</c><00:06:40.520><c> arbitrary</c>

00:06:41.080 --> 00:06:41.090 align:start position:0%
version so you can pass an arbitrary
 

00:06:41.090 --> 00:06:43.120 align:start position:0%
version so you can pass an arbitrary
number<00:06:41.360><c> of</c><00:06:41.420><c> elements</c><00:06:41.900><c> to</c><00:06:42.050><c> the</c><00:06:42.440><c> list</c><00:06:42.650><c> dot</c><00:06:42.860><c> of</c>

00:06:43.120 --> 00:06:43.130 align:start position:0%
number of elements to the list dot of
 

00:06:43.130 --> 00:06:46.860 align:start position:0%
number of elements to the list dot of
method<00:06:43.880><c> no</c><00:06:44.150><c> officially</c><00:06:45.080><c> they're</c><00:06:45.500><c> actually</c><00:06:46.100><c> a</c>

00:06:46.860 --> 00:06:46.870 align:start position:0%
method no officially they're actually a
 

00:06:46.870 --> 00:06:49.750 align:start position:0%
method no officially they're actually a
let's<00:06:47.870><c> see</c><00:06:47.990><c> zero</c><00:06:48.530><c> through</c><00:06:48.770><c> ten</c><00:06:48.950><c> plus</c><00:06:49.280><c> VAR</c><00:06:49.580><c> arc</c>

00:06:49.750 --> 00:06:49.760 align:start position:0%
let's see zero through ten plus VAR arc
 

00:06:49.760 --> 00:06:50.830 align:start position:0%
let's see zero through ten plus VAR arc
so<00:06:49.910><c> that's</c><00:06:50.090><c> there</c><00:06:50.270><c> are</c><00:06:50.330><c> actually</c><00:06:50.600><c> 12</c>

00:06:50.830 --> 00:06:50.840 align:start position:0%
so that's there are actually 12
 

00:06:50.840 --> 00:06:53.590 align:start position:0%
so that's there are actually 12
different<00:06:50.990><c> overloads</c><00:06:51.650><c> of</c><00:06:51.920><c> list</c><00:06:52.580><c> dot</c><00:06:52.730><c> of</c><00:06:53.000><c> but</c>

00:06:53.590 --> 00:06:53.600 align:start position:0%
different overloads of list dot of but
 

00:06:53.600 --> 00:06:54.610 align:start position:0%
different overloads of list dot of but
when<00:06:53.840><c> you</c><00:06:53.930><c> write</c><00:06:54.080><c> the</c><00:06:54.260><c> code</c><00:06:54.290><c> it</c><00:06:54.590><c> doesn't</c>

00:06:54.610 --> 00:06:54.620 align:start position:0%
when you write the code it doesn't
 

00:06:54.620 --> 00:06:56.620 align:start position:0%
when you write the code it doesn't
actually<00:06:55.070><c> matter</c><00:06:55.430><c> you</c><00:06:55.640><c> just</c><00:06:55.850><c> say</c><00:06:55.940><c> list</c><00:06:56.180><c> dot</c><00:06:56.390><c> of</c>

00:06:56.620 --> 00:06:56.630 align:start position:0%
actually matter you just say list dot of
 

00:06:56.630 --> 00:06:58.780 align:start position:0%
actually matter you just say list dot of
and<00:06:56.960><c> just</c><00:06:57.470><c> a</c><00:06:57.560><c> comma</c><00:06:57.770><c> separated</c><00:06:58.340><c> set</c><00:06:58.550><c> of</c>

00:06:58.780 --> 00:06:58.790 align:start position:0%
and just a comma separated set of
 

00:06:58.790 --> 00:07:01.630 align:start position:0%
and just a comma separated set of
elements<00:06:59.270><c> and</c><00:06:59.600><c> those</c><00:06:59.780><c> get</c><00:07:00.110><c> added</c><00:07:01.100><c> to</c><00:07:01.220><c> a</c><00:07:01.250><c> newly</c>

00:07:01.630 --> 00:07:01.640 align:start position:0%
elements and those get added to a newly
 

00:07:01.640 --> 00:07:04.720 align:start position:0%
elements and those get added to a newly
created<00:07:02.060><c> list</c><00:07:02.590><c> same</c><00:07:03.590><c> thing</c><00:07:03.830><c> with</c><00:07:04.010><c> set</c><00:07:04.310><c> dot</c>

00:07:04.720 --> 00:07:04.730 align:start position:0%
created list same thing with set dot
 

00:07:04.730 --> 00:07:06.490 align:start position:0%
created list same thing with set dot
ah've<00:07:04.970><c> there</c><00:07:05.360><c> are</c><00:07:05.660><c> a</c><00:07:05.690><c> bunch</c><00:07:05.900><c> of</c><00:07:06.080><c> fixed</c><00:07:06.350><c> arg</c>

00:07:06.490 --> 00:07:06.500 align:start position:0%
ah've there are a bunch of fixed arg
 

00:07:06.500 --> 00:07:09.940 align:start position:0%
ah've there are a bunch of fixed arg
overloads<00:07:07.010><c> and</c><00:07:07.220><c> VAR</c><00:07:08.120><c> arg</c><00:07:08.330><c> overloads</c><00:07:08.950><c> but</c>

00:07:09.940 --> 00:07:09.950 align:start position:0%
overloads and VAR arg overloads but
 

00:07:09.950 --> 00:07:12.070 align:start position:0%
overloads and VAR arg overloads but
mainly<00:07:10.280><c> just</c><00:07:10.520><c> say</c><00:07:10.700><c> set</c><00:07:11.030><c> thought</c><00:07:11.270><c> of</c><00:07:11.450><c> and</c><00:07:11.780><c> you</c>

00:07:12.070 --> 00:07:12.080 align:start position:0%
mainly just say set thought of and you
 

00:07:12.080 --> 00:07:13.960 align:start position:0%
mainly just say set thought of and you
provide<00:07:12.560><c> a</c><00:07:12.590><c> comma</c><00:07:12.860><c> separated</c><00:07:13.040><c> list</c><00:07:13.430><c> of</c><00:07:13.820><c> the</c>

00:07:13.960 --> 00:07:13.970 align:start position:0%
provide a comma separated list of the
 

00:07:13.970 --> 00:07:16.930 align:start position:0%
provide a comma separated list of the
elements<00:07:14.360><c> for</c><00:07:15.050><c> the</c><00:07:15.200><c> set</c><00:07:15.380><c> now</c><00:07:16.280><c> map</c><00:07:16.580><c> thought</c><00:07:16.790><c> of</c>

00:07:16.930 --> 00:07:16.940 align:start position:0%
elements for the set now map thought of
 

00:07:16.940 --> 00:07:19.690 align:start position:0%
elements for the set now map thought of
is<00:07:17.090><c> a</c><00:07:17.120><c> little</c><00:07:17.480><c> bit</c><00:07:17.690><c> different</c><00:07:18.440><c> because</c><00:07:18.700><c> unlike</c>

00:07:19.690 --> 00:07:19.700 align:start position:0%
is a little bit different because unlike
 

00:07:19.700 --> 00:07:23.260 align:start position:0%
is a little bit different because unlike
set<00:07:20.090><c> and</c><00:07:20.330><c> list</c><00:07:20.570><c> map</c><00:07:21.200><c> has</c><00:07:21.560><c> different</c><00:07:22.100><c> types</c><00:07:22.520><c> for</c>

00:07:23.260 --> 00:07:23.270 align:start position:0%
set and list map has different types for
 

00:07:23.270 --> 00:07:25.870 align:start position:0%
set and list map has different types for
the<00:07:23.390><c> key</c><00:07:23.660><c> and</c><00:07:23.960><c> the</c><00:07:24.320><c> value</c><00:07:24.460><c> so</c><00:07:25.460><c> what</c><00:07:25.640><c> we</c><00:07:25.760><c> did</c>

00:07:25.870 --> 00:07:25.880 align:start position:0%
the key and the value so what we did
 

00:07:25.880 --> 00:07:27.670 align:start position:0%
the key and the value so what we did
instead<00:07:26.060><c> of</c><00:07:26.330><c> was</c><00:07:26.420><c> he</c><00:07:26.480><c> said</c><00:07:26.690><c> math</c><00:07:26.930><c> dot</c><00:07:27.170><c> of</c><00:07:27.350><c> and</c>

00:07:27.670 --> 00:07:27.680 align:start position:0%
instead of was he said math dot of and
 

00:07:27.680 --> 00:07:31.540 align:start position:0%
instead of was he said math dot of and
then<00:07:28.220><c> alternating</c><00:07:29.150><c> key</c><00:07:29.780><c> and</c><00:07:30.140><c> value</c><00:07:30.550><c> elements</c>

00:07:31.540 --> 00:07:31.550 align:start position:0%
then alternating key and value elements
 

00:07:31.550 --> 00:07:34.450 align:start position:0%
then alternating key and value elements
now<00:07:32.150><c> the</c><00:07:32.960><c> problem</c><00:07:33.350><c> there</c><00:07:33.530><c> is</c><00:07:33.740><c> that</c><00:07:33.770><c> you</c><00:07:34.070><c> if</c><00:07:34.430><c> you</c>

00:07:34.450 --> 00:07:34.460 align:start position:0%
now the problem there is that you if you
 

00:07:34.460 --> 00:07:36.580 align:start position:0%
now the problem there is that you if you
have<00:07:34.580><c> things</c><00:07:35.540><c> of</c><00:07:35.810><c> different</c><00:07:36.140><c> types</c><00:07:36.350><c> you</c>

00:07:36.580 --> 00:07:36.590 align:start position:0%
have things of different types you
 

00:07:36.590 --> 00:07:39.700 align:start position:0%
have things of different types you
really<00:07:36.950><c> can't</c><00:07:37.250><c> have</c><00:07:37.490><c> a</c><00:07:37.910><c> varargs</c><00:07:38.870><c> overload</c><00:07:39.560><c> of</c>

00:07:39.700 --> 00:07:39.710 align:start position:0%
really can't have a varargs overload of
 

00:07:39.710 --> 00:07:41.800 align:start position:0%
really can't have a varargs overload of
that<00:07:39.860><c> and</c><00:07:40.100><c> make</c><00:07:40.250><c> that</c><00:07:40.400><c> work</c><00:07:40.640><c> the</c><00:07:40.850><c> same</c><00:07:40.880><c> way</c><00:07:41.090><c> so</c>

00:07:41.800 --> 00:07:41.810 align:start position:0%
that and make that work the same way so
 

00:07:41.810 --> 00:07:44.350 align:start position:0%
that and make that work the same way so
instead<00:07:41.930><c> what</c><00:07:42.440><c> we</c><00:07:42.560><c> had</c><00:07:42.710><c> to</c><00:07:42.800><c> do</c><00:07:42.950><c> is</c><00:07:43.340><c> if</c><00:07:44.000><c> you</c><00:07:44.180><c> want</c>

00:07:44.350 --> 00:07:44.360 align:start position:0%
instead what we had to do is if you want
 

00:07:44.360 --> 00:07:46.390 align:start position:0%
instead what we had to do is if you want
to<00:07:44.450><c> create</c><00:07:44.630><c> a</c><00:07:44.720><c> map</c><00:07:45.020><c> with</c><00:07:45.590><c> an</c><00:07:45.800><c> arbitrary</c><00:07:46.070><c> number</c>

00:07:46.390 --> 00:07:46.400 align:start position:0%
to create a map with an arbitrary number
 

00:07:46.400 --> 00:07:49.540 align:start position:0%
to create a map with an arbitrary number
of<00:07:46.610><c> elements</c><00:07:47.030><c> you</c><00:07:47.180><c> first</c><00:07:47.630><c> have</c><00:07:47.840><c> to</c><00:07:48.100><c> box</c><00:07:49.100><c> the</c>

00:07:49.540 --> 00:07:49.550 align:start position:0%
of elements you first have to box the
 

00:07:49.550 --> 00:07:51.970 align:start position:0%
of elements you first have to box the
key<00:07:49.700><c> in</c><00:07:49.790><c> the</c><00:07:49.850><c> value</c><00:07:50.210><c> into</c><00:07:50.690><c> a</c><00:07:50.720><c> map</c><00:07:50.960><c> entry</c><00:07:51.470><c> so</c><00:07:51.860><c> we</c>

00:07:51.970 --> 00:07:51.980 align:start position:0%
key in the value into a map entry so we
 

00:07:51.980 --> 00:07:54.190 align:start position:0%
key in the value into a map entry so we
added<00:07:52.190><c> another</c><00:07:52.580><c> we</c><00:07:53.360><c> have</c><00:07:53.510><c> added</c><00:07:53.780><c> a</c><00:07:53.840><c> static</c>

00:07:54.190 --> 00:07:54.200 align:start position:0%
added another we have added a static
 

00:07:54.200 --> 00:07:58.090 align:start position:0%
added another we have added a static
method<00:07:54.320><c> called</c><00:07:54.650><c> map</c><00:07:54.890><c> entry</c><00:07:55.640><c> it's</c><00:07:56.630><c> a</c><00:07:56.810><c> method</c><00:07:57.710><c> as</c>

00:07:58.090 --> 00:07:58.100 align:start position:0%
method called map entry it's a method as
 

00:07:58.100 --> 00:08:00.730 align:start position:0%
method called map entry it's a method as
distinct<00:07:58.550><c> from</c><00:07:58.760><c> the</c><00:07:59.090><c> type</c><00:07:59.570><c> mount</c><00:08:00.020><c> dot</c><00:08:00.320><c> capital</c>

00:08:00.730 --> 00:08:00.740 align:start position:0%
distinct from the type mount dot capital
 

00:08:00.740 --> 00:08:04.330 align:start position:0%
distinct from the type mount dot capital
entry<00:08:02.620><c> and</c><00:08:03.620><c> that</c><00:08:03.740><c> takes</c><00:08:03.950><c> the</c><00:08:04.070><c> key</c><00:08:04.190><c> in</c><00:08:04.250><c> the</c>

00:08:04.330 --> 00:08:04.340 align:start position:0%
entry and that takes the key in the
 

00:08:04.340 --> 00:08:06.670 align:start position:0%
entry and that takes the key in the
value<00:08:04.640><c> and</c><00:08:04.670><c> puts</c><00:08:05.000><c> them</c><00:08:05.150><c> into</c><00:08:05.420><c> an</c><00:08:05.960><c> instance</c><00:08:06.500><c> of</c>

00:08:06.670 --> 00:08:06.680 align:start position:0%
value and puts them into an instance of
 

00:08:06.680 --> 00:08:09.850 align:start position:0%
value and puts them into an instance of
math<00:08:07.100><c> dot</c><00:08:07.340><c> entry</c><00:08:07.640><c> and</c><00:08:07.880><c> then</c><00:08:08.360><c> you</c><00:08:08.510><c> have</c><00:08:09.320><c> another</c>

00:08:09.850 --> 00:08:09.860 align:start position:0%
math dot entry and then you have another
 

00:08:09.860 --> 00:08:13.270 align:start position:0%
math dot entry and then you have another
method<00:08:10.130><c> mount</c><00:08:10.700><c> dot</c><00:08:11.000><c> of</c><00:08:11.210><c> entries</c><00:08:12.040><c> which</c><00:08:13.040><c> takes</c>

00:08:13.270 --> 00:08:13.280 align:start position:0%
method mount dot of entries which takes
 

00:08:13.280 --> 00:08:14.020 align:start position:0%
method mount dot of entries which takes
a<00:08:13.400><c> varargs</c>

00:08:14.020 --> 00:08:14.030 align:start position:0%
a varargs
 

00:08:14.030 --> 00:08:15.880 align:start position:0%
a varargs
list<00:08:14.540><c> of</c><00:08:14.750><c> those</c><00:08:14.960><c> so</c><00:08:15.110><c> you</c><00:08:15.170><c> can</c><00:08:15.350><c> create</c><00:08:15.620><c> a</c><00:08:15.680><c> map</c>

00:08:15.880 --> 00:08:15.890 align:start position:0%
list of those so you can create a map
 

00:08:15.890 --> 00:08:18.600 align:start position:0%
list of those so you can create a map
with<00:08:16.130><c> an</c><00:08:16.250><c> arbitrary</c><00:08:16.580><c> number</c><00:08:16.940><c> of</c><00:08:17.120><c> pairs</c>

00:08:18.600 --> 00:08:18.610 align:start position:0%
with an arbitrary number of pairs
 

00:08:18.610 --> 00:08:20.680 align:start position:0%
with an arbitrary number of pairs
alright<00:08:19.610><c> so</c><00:08:19.760><c> this</c><00:08:19.850><c> is</c><00:08:20.030><c> what</c><00:08:20.060><c> it</c><00:08:20.240><c> looks</c><00:08:20.390><c> like</c><00:08:20.450><c> in</c>

00:08:20.680 --> 00:08:20.690 align:start position:0%
alright so this is what it looks like in
 

00:08:20.690 --> 00:08:22.780 align:start position:0%
alright so this is what it looks like in
the<00:08:20.780><c> Javadoc</c><00:08:21.110><c> so</c><00:08:22.070><c> you</c><00:08:22.160><c> can</c><00:08:22.280><c> see</c><00:08:22.430><c> all</c><00:08:22.640><c> the</c>

00:08:22.780 --> 00:08:22.790 align:start position:0%
the Javadoc so you can see all the
 

00:08:22.790 --> 00:08:25.030 align:start position:0%
the Javadoc so you can see all the
overloads<00:08:23.240><c> there</c><00:08:23.570><c> and</c><00:08:23.840><c> it's</c><00:08:24.620><c> amazing</c><00:08:24.800><c> how</c>

00:08:25.030 --> 00:08:25.040 align:start position:0%
overloads there and it's amazing how
 

00:08:25.040 --> 00:08:28.120 align:start position:0%
overloads there and it's amazing how
people<00:08:25.340><c> react</c><00:08:25.910><c> to</c><00:08:26.060><c> this</c><00:08:26.180><c> when</c><00:08:27.080><c> when</c><00:08:27.590><c> this</c><00:08:27.740><c> when</c>

00:08:28.120 --> 00:08:28.130 align:start position:0%
people react to this when when this when
 

00:08:28.130 --> 00:08:30.010 align:start position:0%
people react to this when when this when
this<00:08:28.220><c> first</c><00:08:28.460><c> got</c><00:08:28.610><c> posted</c><00:08:29.030><c> there</c><00:08:29.840><c> was</c><00:08:29.960><c> a</c>

00:08:30.010 --> 00:08:30.020 align:start position:0%
this first got posted there was a
 

00:08:30.020 --> 00:08:31.510 align:start position:0%
this first got posted there was a
discussion<00:08:30.350><c> about</c><00:08:30.560><c> this</c><00:08:30.740><c> on</c><00:08:30.920><c> reddit</c><00:08:31.220><c> and</c>

00:08:31.510 --> 00:08:31.520 align:start position:0%
discussion about this on reddit and
 

00:08:31.520 --> 00:08:35.740 align:start position:0%
discussion about this on reddit and
somebody<00:08:31.820><c> said</c><00:08:32.060><c> is</c><00:08:32.390><c> this</c><00:08:32.780><c> a</c><00:08:32.810><c> joke</c><00:08:34.360><c> but</c><00:08:35.360><c> no</c><00:08:35.510><c> this</c>

00:08:35.740 --> 00:08:35.750 align:start position:0%
somebody said is this a joke but no this
 

00:08:35.750 --> 00:08:38.110 align:start position:0%
somebody said is this a joke but no this
is<00:08:35.900><c> not</c><00:08:36.050><c> a</c><00:08:36.080><c> joke</c><00:08:36.410><c> but</c><00:08:36.979><c> i</c><00:08:37.280><c> think</c><00:08:37.520><c> the</c><00:08:37.610><c> main</c><00:08:37.940><c> point</c>

00:08:38.110 --> 00:08:38.120 align:start position:0%
is not a joke but i think the main point
 

00:08:38.120 --> 00:08:40.390 align:start position:0%
is not a joke but i think the main point
here<00:08:38.240><c> is</c><00:08:38.419><c> this</c><00:08:38.750><c> yeah</c><00:08:39.349><c> this</c><00:08:39.590><c> this</c><00:08:39.890><c> is</c><00:08:40.070><c> a</c><00:08:40.099><c> certain</c>

00:08:40.390 --> 00:08:40.400 align:start position:0%
here is this yeah this this is a certain
 

00:08:40.400 --> 00:08:43.120 align:start position:0%
here is this yeah this this is a certain
amount<00:08:40.490><c> of</c><00:08:40.640><c> ugliness</c><00:08:41.030><c> in</c><00:08:41.419><c> the</c><00:08:41.599><c> api</c><00:08:41.870><c> but</c><00:08:42.740><c> you</c><00:08:42.950><c> do</c>

00:08:43.120 --> 00:08:43.130 align:start position:0%
amount of ugliness in the api but you do
 

00:08:43.130 --> 00:08:45.370 align:start position:0%
amount of ugliness in the api but you do
not<00:08:43.280><c> see</c><00:08:43.340><c> this</c><00:08:43.669><c> ugliness</c><00:08:44.030><c> when</c><00:08:44.660><c> you</c><00:08:44.840><c> program</c>

00:08:45.370 --> 00:08:45.380 align:start position:0%
not see this ugliness when you program
 

00:08:45.380 --> 00:08:47.450 align:start position:0%
not see this ugliness when you program
because<00:08:45.830><c> you</c><00:08:45.950><c> just</c><00:08:46.100><c> see</c><00:08:46.250><c> in</c><00:08:46.340><c> the</c><00:08:46.430><c> source</c><00:08:46.610><c> code</c>

00:08:47.450 --> 00:08:47.460 align:start position:0%
because you just see in the source code
 

00:08:47.460 --> 00:08:49.340 align:start position:0%
because you just see in the source code
what<00:08:48.060><c> did</c><00:08:48.150><c> I</c><00:08:48.240><c> what</c><00:08:48.510><c> did</c><00:08:48.540><c> I</c><00:08:48.660><c> use</c><00:08:48.690><c> here</c><00:08:48.900><c> math</c><00:08:49.110><c> dot</c>

00:08:49.340 --> 00:08:49.350 align:start position:0%
what did I what did I use here math dot
 

00:08:49.350 --> 00:08:51.410 align:start position:0%
what did I what did I use here math dot
of<00:08:49.530><c> mapped</c><00:08:49.980><c> out</c><00:08:50.190><c> of</c><00:08:50.340><c> or</c><00:08:50.640><c> list</c><00:08:50.940><c> out</c><00:08:51.120><c> of</c><00:08:51.150><c> or</c>

00:08:51.410 --> 00:08:51.420 align:start position:0%
of mapped out of or list out of or
 

00:08:51.420 --> 00:08:53.540 align:start position:0%
of mapped out of or list out of or
whatever<00:08:51.630><c> you</c><00:08:52.200><c> just</c><00:08:52.470><c> list</c><00:08:52.740><c> the</c><00:08:52.860><c> arguments</c><00:08:53.370><c> and</c>

00:08:53.540 --> 00:08:53.550 align:start position:0%
whatever you just list the arguments and
 

00:08:53.550 --> 00:08:55.430 align:start position:0%
whatever you just list the arguments and
the<00:08:54.330><c> fact</c><00:08:54.570><c> that</c><00:08:54.660><c> they</c><00:08:54.870><c> are</c><00:08:54.930><c> fixed</c><00:08:55.290><c> Arg</c>

00:08:55.430 --> 00:08:55.440 align:start position:0%
the fact that they are fixed Arg
 

00:08:55.440 --> 00:08:57.560 align:start position:0%
the fact that they are fixed Arg
overloads<00:08:55.890><c> and</c><00:08:56.190><c> variable</c><00:08:57.150><c> argument</c>

00:08:57.560 --> 00:08:57.570 align:start position:0%
overloads and variable argument
 

00:08:57.570 --> 00:09:00.560 align:start position:0%
overloads and variable argument
overloads<00:08:58.020><c> is</c><00:08:58.280><c> immaterial</c><00:08:59.280><c> to</c><00:08:59.370><c> you</c><00:08:59.580><c> except</c><00:09:00.450><c> in</c>

00:09:00.560 --> 00:09:00.570 align:start position:0%
overloads is immaterial to you except in
 

00:09:00.570 --> 00:09:02.840 align:start position:0%
overloads is immaterial to you except in
the<00:09:00.750><c> in</c><00:09:00.990><c> the</c><00:09:01.170><c> math</c><00:09:01.800><c> case</c><00:09:02.100><c> and</c><00:09:02.520><c> I'll</c><00:09:02.610><c> show</c><00:09:02.760><c> an</c>

00:09:02.840 --> 00:09:02.850 align:start position:0%
the in the math case and I'll show an
 

00:09:02.850 --> 00:09:06.620 align:start position:0%
the in the math case and I'll show an
example<00:09:02.940><c> of</c><00:09:03.420><c> the</c><00:09:03.750><c> map</c><00:09:03.900><c> case</c><00:09:04.140><c> later</c><00:09:04.410><c> on</c><00:09:05.510><c> but</c><00:09:06.510><c> the</c>

00:09:06.620 --> 00:09:06.630 align:start position:0%
example of the map case later on but the
 

00:09:06.630 --> 00:09:10.040 align:start position:0%
example of the map case later on but the
point<00:09:06.840><c> here</c><00:09:06.930><c> is</c><00:09:07.230><c> that</c><00:09:07.430><c> in</c><00:09:08.430><c> in</c><00:09:09.270><c> the</c><00:09:09.480><c> library</c>

00:09:10.040 --> 00:09:10.050 align:start position:0%
point here is that in in the library
 

00:09:10.050 --> 00:09:11.660 align:start position:0%
point here is that in in the library
when<00:09:10.350><c> we</c><00:09:10.500><c> are</c><00:09:10.590><c> developing</c><00:09:10.800><c> the</c><00:09:11.460><c> core</c>

00:09:11.660 --> 00:09:11.670 align:start position:0%
when we are developing the core
 

00:09:11.670 --> 00:09:13.040 align:start position:0%
when we are developing the core
libraries<00:09:12.180><c> and</c><00:09:12.390><c> the</c><00:09:12.450><c> collections</c><00:09:12.870><c> framework</c>

00:09:13.040 --> 00:09:13.050 align:start position:0%
libraries and the collections framework
 

00:09:13.050 --> 00:09:14.960 align:start position:0%
libraries and the collections framework
we're<00:09:13.710><c> willing</c><00:09:13.920><c> to</c><00:09:14.040><c> take</c><00:09:14.280><c> on</c><00:09:14.520><c> some</c><00:09:14.820><c> of</c><00:09:14.850><c> this</c>

00:09:14.960 --> 00:09:14.970 align:start position:0%
we're willing to take on some of this
 

00:09:14.970 --> 00:09:17.000 align:start position:0%
we're willing to take on some of this
ugliness<00:09:15.390><c> so</c><00:09:15.840><c> you</c><00:09:15.900><c> don't</c><00:09:16.260><c> have</c><00:09:16.470><c> to</c><00:09:16.680><c> so</c><00:09:16.920><c> it</c>

00:09:17.000 --> 00:09:17.010 align:start position:0%
ugliness so you don't have to so it
 

00:09:17.010 --> 00:09:18.590 align:start position:0%
ugliness so you don't have to so it
really<00:09:17.220><c> makes</c><00:09:17.400><c> your</c><00:09:17.550><c> code</c><00:09:17.850><c> much</c><00:09:18.390><c> more</c>

00:09:18.590 --> 00:09:18.600 align:start position:0%
really makes your code much more
 

00:09:18.600 --> 00:09:20.510 align:start position:0%
really makes your code much more
convenient<00:09:18.960><c> so</c><00:09:19.740><c> let</c><00:09:19.890><c> me</c><00:09:20.010><c> show</c><00:09:20.160><c> you</c><00:09:20.220><c> some</c>

00:09:20.510 --> 00:09:20.520 align:start position:0%
convenient so let me show you some
 

00:09:20.520 --> 00:09:24.470 align:start position:0%
convenient so let me show you some
examples<00:09:20.550><c> of</c><00:09:21.330><c> this</c><00:09:21.600><c> in</c><00:09:22.020><c> action</c><00:09:22.410><c> so</c><00:09:23.250><c> I</c><00:09:24.000><c> think</c>

00:09:24.470 --> 00:09:24.480 align:start position:0%
examples of this in action so I think
 

00:09:24.480 --> 00:09:25.850 align:start position:0%
examples of this in action so I think
mark<00:09:24.810><c> Reinhold</c><00:09:25.200><c> might</c><00:09:25.350><c> have</c><00:09:25.440><c> demonstrated</c>

00:09:25.850 --> 00:09:25.860 align:start position:0%
mark Reinhold might have demonstrated
 

00:09:25.860 --> 00:09:27.100 align:start position:0%
mark Reinhold might have demonstrated
some<00:09:26.160><c> of</c><00:09:26.280><c> this</c><00:09:26.370><c> in</c><00:09:26.580><c> the</c><00:09:26.670><c> keynote</c><00:09:26.850><c> yesterday</c>

00:09:27.100 --> 00:09:27.110 align:start position:0%
some of this in the keynote yesterday
 

00:09:27.110 --> 00:09:30.050 align:start position:0%
some of this in the keynote yesterday
but<00:09:28.110><c> if</c><00:09:28.710><c> you</c><00:09:29.100><c> wanted</c><00:09:29.340><c> to</c><00:09:29.460><c> have</c><00:09:29.670><c> an</c>

00:09:30.050 --> 00:09:30.060 align:start position:0%
but if you wanted to have an
 

00:09:30.060 --> 00:09:32.210 align:start position:0%
but if you wanted to have an
unmodifiable<00:09:31.050><c> list</c><00:09:31.500><c> with</c><00:09:31.740><c> a</c><00:09:31.770><c> few</c><00:09:32.070><c> elements</c>

00:09:32.210 --> 00:09:32.220 align:start position:0%
unmodifiable list with a few elements
 

00:09:32.220 --> 00:09:34.790 align:start position:0%
unmodifiable list with a few elements
you<00:09:33.030><c> could</c><00:09:33.240><c> you</c><00:09:33.540><c> could</c><00:09:33.690><c> wrap</c><00:09:34.470><c> up</c><00:09:34.680><c> those</c>

00:09:34.790 --> 00:09:34.800 align:start position:0%
you could you could wrap up those
 

00:09:34.800 --> 00:09:37.100 align:start position:0%
you could you could wrap up those
elements<00:09:35.190><c> in</c><00:09:35.460><c> arrays</c><00:09:35.730><c> not</c><00:09:36.180><c> as</c><00:09:36.390><c> lists</c><00:09:36.720><c> and</c><00:09:36.990><c> then</c>

00:09:37.100 --> 00:09:37.110 align:start position:0%
elements in arrays not as lists and then
 

00:09:37.110 --> 00:09:39.590 align:start position:0%
elements in arrays not as lists and then
wrap<00:09:37.410><c> wrap</c><00:09:37.980><c> that</c><00:09:38.190><c> and</c><00:09:38.220><c> turn</c><00:09:38.640><c> inside</c><00:09:39.240><c> of</c>

00:09:39.590 --> 00:09:39.600 align:start position:0%
wrap wrap that and turn inside of
 

00:09:39.600 --> 00:09:42.260 align:start position:0%
wrap wrap that and turn inside of
collections<00:09:40.320><c> on</c><00:09:40.440><c> unmodifiable</c><00:09:41.010><c> list</c><00:09:41.400><c> and</c><00:09:41.640><c> so</c>

00:09:42.260 --> 00:09:42.270 align:start position:0%
collections on unmodifiable list and so
 

00:09:42.270 --> 00:09:45.230 align:start position:0%
collections on unmodifiable list and so
in<00:09:42.420><c> Java</c><00:09:42.630><c> dot</c><00:09:42.810><c> 9</c><00:09:42.990><c> it's</c><00:09:43.290><c> just</c><00:09:43.470><c> list</c><00:09:43.860><c> dot</c><00:09:44.160><c> of</c><00:09:44.340><c> ABC</c>

00:09:45.230 --> 00:09:45.240 align:start position:0%
in Java dot 9 it's just list dot of ABC
 

00:09:45.240 --> 00:09:47.260 align:start position:0%
in Java dot 9 it's just list dot of ABC
that's<00:09:45.930><c> really</c><00:09:46.290><c> nice</c><00:09:46.500><c> makes</c><00:09:46.890><c> your</c><00:09:47.010><c> code</c>

00:09:47.260 --> 00:09:47.270 align:start position:0%
that's really nice makes your code
 

00:09:47.270 --> 00:09:49.940 align:start position:0%
that's really nice makes your code
pretty<00:09:48.270><c> compact</c><00:09:48.690><c> I'm</c><00:09:49.260><c> sorry</c><00:09:49.530><c> I</c><00:09:49.590><c> don't</c><00:09:49.680><c> have</c><00:09:49.830><c> to</c>

00:09:49.940 --> 00:09:49.950 align:start position:0%
pretty compact I'm sorry I don't have to
 

00:09:49.950 --> 00:09:52.880 align:start position:0%
pretty compact I'm sorry I don't have to
I<00:09:50.160><c> don't</c><00:09:50.280><c> have</c><00:09:50.490><c> time</c><00:09:50.760><c> for</c><00:09:50.790><c> questions</c><00:09:51.800><c> but</c><00:09:52.800><c> if</c>

00:09:52.880 --> 00:09:52.890 align:start position:0%
I don't have time for questions but if
 

00:09:52.890 --> 00:09:54.080 align:start position:0%
I don't have time for questions but if
you're<00:09:52.980><c> on</c><00:09:53.100><c> Twitter</c><00:09:53.310><c> please</c><00:09:53.550><c> tweet</c><00:09:53.820><c> and</c><00:09:54.030><c> I'll</c>

00:09:54.080 --> 00:09:54.090 align:start position:0%
you're on Twitter please tweet and I'll
 

00:09:54.090 --> 00:09:58.070 align:start position:0%
you're on Twitter please tweet and I'll
get<00:09:54.240><c> back</c><00:09:54.390><c> to</c><00:09:54.420><c> you</c><00:09:55.850><c> all</c><00:09:56.850><c> right</c><00:09:56.910><c> so</c><00:09:57.360><c> with</c><00:09:57.840><c> the</c>

00:09:58.070 --> 00:09:58.080 align:start position:0%
get back to you all right so with the
 

00:09:58.080 --> 00:10:00.080 align:start position:0%
get back to you all right so with the
set<00:09:58.320><c> interface</c><00:09:58.740><c> again</c><00:09:59.130><c> there's</c><00:09:59.670><c> something</c>

00:10:00.080 --> 00:10:00.090 align:start position:0%
set interface again there's something
 

00:10:00.090 --> 00:10:01.910 align:start position:0%
set interface again there's something
very<00:10:00.330><c> similar</c><00:10:00.780><c> now</c><00:10:01.230><c> it's</c><00:10:01.470><c> a</c><00:10:01.560><c> little</c><00:10:01.740><c> worse</c>

00:10:01.910 --> 00:10:01.920 align:start position:0%
very similar now it's a little worse
 

00:10:01.920 --> 00:10:04.160 align:start position:0%
very similar now it's a little worse
because<00:10:02.190><c> you</c><00:10:02.340><c> have</c><00:10:02.610><c> to</c><00:10:02.790><c> if</c><00:10:03.300><c> you</c><00:10:03.480><c> have</c><00:10:03.630><c> certain</c>

00:10:04.160 --> 00:10:04.170 align:start position:0%
because you have to if you have certain
 

00:10:04.170 --> 00:10:07.810 align:start position:0%
because you have to if you have certain
elements<00:10:04.560><c> going</c><00:10:04.770><c> into</c><00:10:05.280><c> a</c><00:10:05.990><c> set</c><00:10:06.990><c> you</c><00:10:07.230><c> have</c><00:10:07.530><c> to</c>

00:10:07.810 --> 00:10:07.820 align:start position:0%
elements going into a set you have to
 

00:10:07.820 --> 00:10:10.880 align:start position:0%
elements going into a set you have to
take<00:10:08.820><c> those</c><00:10:09.000><c> elements</c><00:10:09.360><c> and</c><00:10:09.630><c> the</c><00:10:10.470><c> only</c><00:10:10.620><c> way</c><00:10:10.830><c> to</c>

00:10:10.880 --> 00:10:10.890 align:start position:0%
take those elements and the only way to
 

00:10:10.890 --> 00:10:12.650 align:start position:0%
take those elements and the only way to
pass<00:10:11.100><c> multiple</c><00:10:11.370><c> elements</c><00:10:12.060><c> to</c><00:10:12.240><c> initialize</c><00:10:12.630><c> a</c>

00:10:12.650 --> 00:10:12.660 align:start position:0%
pass multiple elements to initialize a
 

00:10:12.660 --> 00:10:15.620 align:start position:0%
pass multiple elements to initialize a
hat<00:10:12.990><c> is</c><00:10:13.380><c> to</c><00:10:13.650><c> put</c><00:10:13.830><c> them</c><00:10:13.950><c> inside</c><00:10:14.100><c> an</c><00:10:14.580><c> array</c><00:10:14.850><c> using</c>

00:10:15.620 --> 00:10:15.630 align:start position:0%
hat is to put them inside an array using
 

00:10:15.630 --> 00:10:17.300 align:start position:0%
hat is to put them inside an array using
arrays<00:10:15.960><c> dot</c><00:10:16.110><c> as</c><00:10:16.290><c> lists</c><00:10:16.560><c> then</c><00:10:16.980><c> put</c><00:10:17.190><c> those</c>

00:10:17.300 --> 00:10:17.310 align:start position:0%
arrays dot as lists then put those
 

00:10:17.310 --> 00:10:19.340 align:start position:0%
arrays dot as lists then put those
inside<00:10:17.520><c> a</c><00:10:17.670><c> hash</c><00:10:17.880><c> set</c><00:10:18.060><c> then</c><00:10:18.480><c> put</c><00:10:18.750><c> those</c><00:10:18.900><c> inside</c>

00:10:19.340 --> 00:10:19.350 align:start position:0%
inside a hash set then put those inside
 

00:10:19.350 --> 00:10:22.340 align:start position:0%
inside a hash set then put those inside
of<00:10:19.380><c> an</c><00:10:19.620><c> unmodifiable</c><00:10:20.280><c> set</c><00:10:20.730><c> and</c><00:10:21.000><c> so</c><00:10:21.660><c> once</c><00:10:22.080><c> again</c>

00:10:22.340 --> 00:10:22.350 align:start position:0%
of an unmodifiable set and so once again
 

00:10:22.350 --> 00:10:24.560 align:start position:0%
of an unmodifiable set and so once again
it<00:10:22.470><c> gets</c><00:10:22.530><c> much</c><00:10:22.830><c> more</c><00:10:23.040><c> simple</c><00:10:23.370><c> in</c><00:10:23.580><c> JDK</c><00:10:24.150><c> 9</c><00:10:24.360><c> you</c>

00:10:24.560 --> 00:10:24.570 align:start position:0%
it gets much more simple in JDK 9 you
 

00:10:24.570 --> 00:10:29.420 align:start position:0%
it gets much more simple in JDK 9 you
just<00:10:24.780><c> say</c><00:10:24.870><c> set</c><00:10:25.170><c> dot</c><00:10:25.380><c> of</c><00:10:25.640><c> ABC</c><00:10:28.250><c> alright</c><00:10:29.250><c> so</c>

00:10:29.420 --> 00:10:29.430 align:start position:0%
just say set dot of ABC alright so
 

00:10:29.430 --> 00:10:31.070 align:start position:0%
just say set dot of ABC alright so
here's<00:10:29.700><c> here's</c><00:10:30.330><c> where</c><00:10:30.570><c> I</c><00:10:30.600><c> have</c><00:10:30.660><c> a</c><00:10:30.780><c> slightly</c>

00:10:31.070 --> 00:10:31.080 align:start position:0%
here's here's where I have a slightly
 

00:10:31.080 --> 00:10:33.320 align:start position:0%
here's here's where I have a slightly
different<00:10:31.290><c> example</c><00:10:31.500><c> from</c><00:10:32.100><c> what</c><00:10:32.700><c> Mark</c><00:10:32.970><c> did</c><00:10:33.180><c> in</c>

00:10:33.320 --> 00:10:33.330 align:start position:0%
different example from what Mark did in
 

00:10:33.330 --> 00:10:36.050 align:start position:0%
different example from what Mark did in
the<00:10:33.450><c> keynote</c><00:10:34.140><c> yesterday</c><00:10:34.580><c> this</c><00:10:35.580><c> is</c><00:10:35.640><c> kind</c><00:10:35.940><c> of</c><00:10:35.970><c> a</c>

00:10:36.050 --> 00:10:36.060 align:start position:0%
the keynote yesterday this is kind of a
 

00:10:36.060 --> 00:10:37.760 align:start position:0%
the keynote yesterday this is kind of a
conventional<00:10:36.660><c> way</c><00:10:36.810><c> at</c><00:10:37.050><c> the</c><00:10:37.170><c> top</c><00:10:37.320><c> of</c><00:10:37.500><c> the</c><00:10:37.590><c> slide</c>

00:10:37.760 --> 00:10:37.770 align:start position:0%
conventional way at the top of the slide
 

00:10:37.770 --> 00:10:39.740 align:start position:0%
conventional way at the top of the slide
a<00:10:37.830><c> conventional</c><00:10:38.550><c> way</c><00:10:38.670><c> to</c><00:10:38.730><c> initialize</c><00:10:39.390><c> a</c><00:10:39.420><c> map</c>

00:10:39.740 --> 00:10:39.750 align:start position:0%
a conventional way to initialize a map
 

00:10:39.750 --> 00:10:42.410 align:start position:0%
a conventional way to initialize a map
just<00:10:39.990><c> create</c><00:10:40.620><c> the</c><00:10:40.740><c> map</c><00:10:40.890><c> empty</c><00:10:41.400><c> and</c><00:10:41.640><c> then</c><00:10:42.150><c> call</c>

00:10:42.410 --> 00:10:42.420 align:start position:0%
just create the map empty and then call
 

00:10:42.420 --> 00:10:44.000 align:start position:0%
just create the map empty and then call
put<00:10:42.780><c> on</c><00:10:43.020><c> it</c><00:10:43.200><c> several</c><00:10:43.530><c> times</c>

00:10:44.000 --> 00:10:44.010 align:start position:0%
put on it several times
 

00:10:44.010 --> 00:10:45.470 align:start position:0%
put on it several times
I<00:10:44.100><c> think</c><00:10:44.610><c> everybody's</c><00:10:45.000><c> written</c><00:10:45.330><c> this</c><00:10:45.420><c> code</c>

00:10:45.470 --> 00:10:45.480 align:start position:0%
I think everybody's written this code
 

00:10:45.480 --> 00:10:47.860 align:start position:0%
I think everybody's written this code
they're<00:10:45.810><c> variations</c><00:10:46.380><c> of</c><00:10:46.470><c> how</c><00:10:46.620><c> to</c><00:10:46.680><c> do</c><00:10:46.860><c> that</c><00:10:47.040><c> a</c>

00:10:47.860 --> 00:10:47.870 align:start position:0%
they're variations of how to do that a
 

00:10:47.870 --> 00:10:50.450 align:start position:0%
they're variations of how to do that a
bunch<00:10:48.870><c> of</c><00:10:48.960><c> advantage</c><00:10:49.530><c> that</c><00:10:49.680><c> this</c><00:10:49.800><c> manages</c><00:10:50.310><c> but</c>

00:10:50.450 --> 00:10:50.460 align:start position:0%
bunch of advantage that this manages but
 

00:10:50.460 --> 00:10:51.680 align:start position:0%
bunch of advantage that this manages but
this<00:10:50.580><c> is</c><00:10:50.700><c> the</c><00:10:50.790><c> most</c><00:10:50.970><c> straightforward</c><00:10:51.210><c> way</c>

00:10:51.680 --> 00:10:51.690 align:start position:0%
this is the most straightforward way
 

00:10:51.690 --> 00:10:53.720 align:start position:0%
this is the most straightforward way
once<00:10:52.380><c> you've</c><00:10:52.590><c> finished</c><00:10:52.860><c> adding</c><00:10:53.250><c> things</c><00:10:53.640><c> to</c>

00:10:53.720 --> 00:10:53.730 align:start position:0%
once you've finished adding things to
 

00:10:53.730 --> 00:10:55.319 align:start position:0%
once you've finished adding things to
the<00:10:53.880><c> map</c><00:10:54.060><c> then</c><00:10:54.270><c> you</c><00:10:54.390><c> can</c><00:10:54.540><c> wrap</c><00:10:54.690><c> it</c><00:10:54.750><c> in</c><00:10:55.110><c> an</c>

00:10:55.319 --> 00:10:55.329 align:start position:0%
the map then you can wrap it in an
 

00:10:55.329 --> 00:10:57.419 align:start position:0%
the map then you can wrap it in an
unmodifiable<00:10:55.989><c> wrapper</c><00:10:56.649><c> and</c><00:10:56.829><c> so</c><00:10:57.279><c> that's</c>

00:10:57.419 --> 00:10:57.429 align:start position:0%
unmodifiable wrapper and so that's
 

00:10:57.429 --> 00:10:59.220 align:start position:0%
unmodifiable wrapper and so that's
pretty<00:10:57.699><c> tedious</c><00:10:57.939><c> and</c><00:10:58.420><c> so</c><00:10:58.749><c> here's</c><00:10:58.959><c> where</c><00:10:59.110><c> the</c>

00:10:59.220 --> 00:10:59.230 align:start position:0%
pretty tedious and so here's where the
 

00:10:59.230 --> 00:11:04.439 align:start position:0%
pretty tedious and so here's where the
big<00:10:59.259><c> win</c><00:10:59.759><c> is</c><00:11:00.759><c> in</c><00:11:01.269><c> Java</c><00:11:01.689><c> nine</c><00:11:01.959><c> I</c><00:11:02.319><c> just</c><00:11:03.100><c> say</c><00:11:03.449><c> math</c>

00:11:04.439 --> 00:11:04.449 align:start position:0%
big win is in Java nine I just say math
 

00:11:04.449 --> 00:11:07.679 align:start position:0%
big win is in Java nine I just say math
dot<00:11:04.749><c> of</c><00:11:04.929><c> a</c><00:11:05.290><c> comma</c><00:11:06.040><c> one</c><00:11:06.309><c> B</c><00:11:06.579><c> comma</c><00:11:06.850><c> two</c><00:11:07.119><c> C</c><00:11:07.449><c> comma</c>

00:11:07.679 --> 00:11:07.689 align:start position:0%
dot of a comma one B comma two C comma
 

00:11:07.689 --> 00:11:10.400 align:start position:0%
dot of a comma one B comma two C comma
three<00:11:08.019><c> and</c><00:11:08.379><c> you</c><00:11:08.470><c> can</c><00:11:08.559><c> see</c><00:11:08.769><c> here</c><00:11:09.129><c> we're</c><00:11:09.759><c> mixing</c>

00:11:10.400 --> 00:11:10.410 align:start position:0%
three and you can see here we're mixing
 

00:11:10.410 --> 00:11:15.479 align:start position:0%
three and you can see here we're mixing
types<00:11:11.410><c> of</c><00:11:11.799><c> string</c><00:11:12.220><c> and</c><00:11:12.429><c> int</c><00:11:12.699><c> for</c><00:11:13.420><c> the</c><00:11:14.369><c> for</c><00:11:15.369><c> the</c>

00:11:15.479 --> 00:11:15.489 align:start position:0%
types of string and int for the for the
 

00:11:15.489 --> 00:11:19.049 align:start position:0%
types of string and int for the for the
key<00:11:15.670><c> and</c><00:11:15.879><c> the</c><00:11:16.029><c> value</c><00:11:16.949><c> now</c><00:11:17.949><c> so</c><00:11:18.220><c> this</c><00:11:18.369><c> only</c><00:11:18.639><c> works</c>

00:11:19.049 --> 00:11:19.059 align:start position:0%
key and the value now so this only works
 

00:11:19.059 --> 00:11:22.919 align:start position:0%
key and the value now so this only works
for<00:11:19.449><c> up</c><00:11:19.629><c> to</c><00:11:19.809><c> ten</c><00:11:20.049><c> key</c><00:11:20.319><c> value</c><00:11:20.709><c> pairs</c><00:11:21.449><c> so</c><00:11:22.449><c> if</c><00:11:22.720><c> you</c>

00:11:22.919 --> 00:11:22.929 align:start position:0%
for up to ten key value pairs so if you
 

00:11:22.929 --> 00:11:26.340 align:start position:0%
for up to ten key value pairs so if you
have<00:11:23.220><c> more</c><00:11:24.220><c> than</c><00:11:24.610><c> ten</c><00:11:24.939><c> key</c><00:11:25.540><c> value</c><00:11:25.899><c> pairs</c><00:11:26.110><c> that</c>

00:11:26.340 --> 00:11:26.350 align:start position:0%
have more than ten key value pairs that
 

00:11:26.350 --> 00:11:27.720 align:start position:0%
have more than ten key value pairs that
you<00:11:26.499><c> want</c><00:11:26.709><c> here's</c><00:11:27.069><c> where</c><00:11:27.309><c> we</c><00:11:27.429><c> have</c><00:11:27.459><c> to</c><00:11:27.610><c> use</c>

00:11:27.720 --> 00:11:27.730 align:start position:0%
you want here's where we have to use
 

00:11:27.730 --> 00:11:29.369 align:start position:0%
you want here's where we have to use
that<00:11:27.850><c> that</c><00:11:28.389><c> extra</c><00:11:28.809><c> thing</c><00:11:28.989><c> I</c><00:11:29.110><c> was</c><00:11:29.230><c> talking</c>

00:11:29.369 --> 00:11:29.379 align:start position:0%
that that extra thing I was talking
 

00:11:29.379 --> 00:11:29.879 align:start position:0%
that that extra thing I was talking
about

00:11:29.879 --> 00:11:29.889 align:start position:0%
about
 

00:11:29.889 --> 00:11:33.769 align:start position:0%
about
so<00:11:30.040><c> the</c><00:11:30.429><c> math</c><00:11:30.699><c> dot</c><00:11:31.029><c> entry</c><00:11:31.600><c> static</c><00:11:32.319><c> method</c><00:11:32.709><c> so</c>

00:11:33.769 --> 00:11:33.779 align:start position:0%
so the math dot entry static method so
 

00:11:33.779 --> 00:11:36.869 align:start position:0%
so the math dot entry static method so
here<00:11:34.779><c> I</c><00:11:34.959><c> kind</c><00:11:35.860><c> of</c><00:11:35.949><c> made</c><00:11:36.129><c> up</c><00:11:36.249><c> this</c><00:11:36.399><c> type</c><00:11:36.639><c> called</c>

00:11:36.869 --> 00:11:36.879 align:start position:0%
here I kind of made up this type called
 

00:11:36.879 --> 00:11:39.269 align:start position:0%
here I kind of made up this type called
token<00:11:37.299><c> type</c><00:11:37.480><c> we</c><00:11:37.839><c> have</c><00:11:37.959><c> a</c><00:11:38.379><c> map</c><00:11:38.709><c> from</c><00:11:38.980><c> string</c><00:11:39.249><c> to</c>

00:11:39.269 --> 00:11:39.279 align:start position:0%
token type we have a map from string to
 

00:11:39.279 --> 00:11:41.429 align:start position:0%
token type we have a map from string to
token<00:11:39.579><c> type</c><00:11:39.819><c> and</c><00:11:40.149><c> we</c><00:11:40.329><c> want</c><00:11:40.480><c> to</c><00:11:40.569><c> have</c><00:11:40.660><c> more</c><00:11:41.079><c> than</c>

00:11:41.429 --> 00:11:41.439 align:start position:0%
token type and we want to have more than
 

00:11:41.439 --> 00:11:43.499 align:start position:0%
token type and we want to have more than
ten<00:11:41.679><c> entries</c><00:11:41.889><c> there</c><00:11:42.309><c> so</c><00:11:42.759><c> there</c><00:11:42.999><c> instead</c><00:11:43.449><c> of</c>

00:11:43.499 --> 00:11:43.509 align:start position:0%
ten entries there so there instead of
 

00:11:43.509 --> 00:11:46.619 align:start position:0%
ten entries there so there instead of
just<00:11:43.629><c> having</c><00:11:44.049><c> strings</c><00:11:45.009><c> and</c><00:11:45.279><c> token</c><00:11:45.639><c> types</c><00:11:45.850><c> side</c>

00:11:46.619 --> 00:11:46.629 align:start position:0%
just having strings and token types side
 

00:11:46.629 --> 00:11:49.289 align:start position:0%
just having strings and token types side
by<00:11:46.809><c> side</c><00:11:47.079><c> we</c><00:11:47.350><c> have</c><00:11:47.529><c> to</c><00:11:47.679><c> first</c><00:11:48.069><c> wrap</c><00:11:48.610><c> each</c><00:11:48.910><c> one</c>

00:11:49.289 --> 00:11:49.299 align:start position:0%
by side we have to first wrap each one
 

00:11:49.299 --> 00:11:53.699 align:start position:0%
by side we have to first wrap each one
of<00:11:49.449><c> those</c><00:11:49.629><c> up</c><00:11:49.899><c> into</c><00:11:50.379><c> a</c><00:11:50.860><c> map</c><00:11:51.489><c> entry</c><00:11:51.999><c> and</c><00:11:52.709><c> then</c>

00:11:53.699 --> 00:11:53.709 align:start position:0%
of those up into a map entry and then
 

00:11:53.709 --> 00:11:57.479 align:start position:0%
of those up into a map entry and then
pass<00:11:54.129><c> all</c><00:11:54.489><c> of</c><00:11:54.670><c> those</c><00:11:54.850><c> as</c><00:11:55.239><c> varargs</c><00:11:56.230><c> to</c><00:11:56.589><c> a</c><00:11:56.889><c> new</c>

00:11:57.479 --> 00:11:57.489 align:start position:0%
pass all of those as varargs to a new
 

00:11:57.489 --> 00:12:04.530 align:start position:0%
pass all of those as varargs to a new
method<00:11:57.879><c> map</c><00:11:58.269><c> dot</c><00:11:58.689><c> of</c><00:11:58.959><c> entries</c><00:12:03.149><c> all</c><00:12:04.149><c> right</c><00:12:04.329><c> so</c>

00:12:04.530 --> 00:12:04.540 align:start position:0%
method map dot of entries all right so
 

00:12:04.540 --> 00:12:06.840 align:start position:0%
method map dot of entries all right so
so<00:12:05.470><c> I</c><00:12:05.499><c> just</c><00:12:05.589><c> talked</c><00:12:05.889><c> about</c><00:12:05.980><c> the</c><00:12:06.189><c> API</c><00:12:06.459><c> but</c><00:12:06.790><c> I</c>

00:12:06.840 --> 00:12:06.850 align:start position:0%
so I just talked about the API but I
 

00:12:06.850 --> 00:12:09.539 align:start position:0%
so I just talked about the API but I
haven't<00:12:07.029><c> told</c><00:12:07.269><c> you</c><00:12:07.389><c> very</c><00:12:07.660><c> much</c><00:12:07.869><c> about</c><00:12:08.549><c> what</c>

00:12:09.539 --> 00:12:09.549 align:start position:0%
haven't told you very much about what
 

00:12:09.549 --> 00:12:11.970 align:start position:0%
haven't told you very much about what
gets<00:12:09.730><c> returned</c><00:12:10.179><c> from</c><00:12:10.569><c> these</c><00:12:10.689><c> api's</c><00:12:11.139><c> now</c><00:12:11.709><c> these</c>

00:12:11.970 --> 00:12:11.980 align:start position:0%
gets returned from these api's now these
 

00:12:11.980 --> 00:12:14.729 align:start position:0%
gets returned from these api's now these
the<00:12:12.540><c> implementations</c><00:12:13.540><c> that</c><00:12:13.989><c> are</c><00:12:14.169><c> returned</c><00:12:14.559><c> by</c>

00:12:14.729 --> 00:12:14.739 align:start position:0%
the implementations that are returned by
 

00:12:14.739 --> 00:12:17.280 align:start position:0%
the implementations that are returned by
these<00:12:15.069><c> conform</c><00:12:15.850><c> to</c><00:12:16.089><c> the</c><00:12:16.209><c> list</c><00:12:16.540><c> set</c><00:12:16.839><c> and</c><00:12:17.049><c> map</c>

00:12:17.280 --> 00:12:17.290 align:start position:0%
these conform to the list set and map
 

00:12:17.290 --> 00:12:19.199 align:start position:0%
these conform to the list set and map
interfaces<00:12:18.009><c> but</c><00:12:18.489><c> there</c><00:12:18.669><c> are</c><00:12:18.730><c> different</c>

00:12:19.199 --> 00:12:19.209 align:start position:0%
interfaces but there are different
 

00:12:19.209 --> 00:12:21.119 align:start position:0%
interfaces but there are different
implementations<00:12:19.929><c> from</c><00:12:20.499><c> what</c><00:12:20.649><c> we've</c><00:12:20.829><c> seen</c><00:12:20.949><c> in</c>

00:12:21.119 --> 00:12:21.129 align:start position:0%
implementations from what we've seen in
 

00:12:21.129 --> 00:12:22.739 align:start position:0%
implementations from what we've seen in
the<00:12:21.189><c> past</c><00:12:21.339><c> so</c><00:12:21.730><c> you</c><00:12:21.819><c> don't</c><00:12:22.059><c> get</c><00:12:22.209><c> a</c><00:12:22.269><c> regular</c>

00:12:22.739 --> 00:12:22.749 align:start position:0%
the past so you don't get a regular
 

00:12:22.749 --> 00:12:26.129 align:start position:0%
the past so you don't get a regular
array<00:12:23.139><c> list</c><00:12:23.439><c> or</c><00:12:23.619><c> a</c><00:12:23.649><c> hash</c><00:12:23.889><c> map</c><00:12:24.129><c> out</c><00:12:24.519><c> of</c><00:12:24.549><c> these</c><00:12:25.139><c> so</c>

00:12:26.129 --> 00:12:26.139 align:start position:0%
array list or a hash map out of these so
 

00:12:26.139 --> 00:12:27.900 align:start position:0%
array list or a hash map out of these so
they<00:12:26.589><c> have</c><00:12:26.799><c> quite</c><00:12:27.129><c> a</c><00:12:27.160><c> quite</c><00:12:27.610><c> a</c><00:12:27.639><c> number</c><00:12:27.759><c> of</c>

00:12:27.900 --> 00:12:27.910 align:start position:0%
they have quite a quite a number of
 

00:12:27.910 --> 00:12:29.999 align:start position:0%
they have quite a quite a number of
different<00:12:28.029><c> characteristics</c><00:12:28.899><c> from</c><00:12:29.169><c> from</c><00:12:29.799><c> the</c>

00:12:29.999 --> 00:12:30.009 align:start position:0%
different characteristics from from the
 

00:12:30.009 --> 00:12:32.400 align:start position:0%
different characteristics from from the
existing<00:12:30.790><c> collection</c><00:12:31.149><c> implementations</c><00:12:31.839><c> so</c>

00:12:32.400 --> 00:12:32.410 align:start position:0%
existing collection implementations so
 

00:12:32.410 --> 00:12:34.739 align:start position:0%
existing collection implementations so
in<00:12:32.589><c> particular</c><00:12:33.129><c> they</c><00:12:33.429><c> are</c><00:12:33.459><c> unmodifiable</c><00:12:34.239><c> and</c>

00:12:34.739 --> 00:12:34.749 align:start position:0%
in particular they are unmodifiable and
 

00:12:34.749 --> 00:12:38.009 align:start position:0%
in particular they are unmodifiable and
there's<00:12:36.149><c> well</c><00:12:37.149><c> I'll</c><00:12:37.389><c> go</c><00:12:37.540><c> into</c><00:12:37.720><c> all</c><00:12:37.839><c> of</c><00:12:37.869><c> these</c>

00:12:38.009 --> 00:12:38.019 align:start position:0%
there's well I'll go into all of these
 

00:12:38.019 --> 00:12:40.739 align:start position:0%
there's well I'll go into all of these
in<00:12:38.079><c> detail</c><00:12:38.499><c> we</c><00:12:38.949><c> disallowed</c><00:12:39.369><c> nulls</c><00:12:39.749><c> randomized</c>

00:12:40.739 --> 00:12:40.749 align:start position:0%
in detail we disallowed nulls randomized
 

00:12:40.749 --> 00:12:42.299 align:start position:0%
in detail we disallowed nulls randomized
iteration<00:12:41.230><c> or</c><00:12:41.290><c> that's</c><00:12:41.559><c> a</c><00:12:41.649><c> big</c><00:12:41.829><c> deal</c><00:12:41.980><c> I'll</c><00:12:42.160><c> try</c>

00:12:42.299 --> 00:12:42.309 align:start position:0%
iteration or that's a big deal I'll try
 

00:12:42.309 --> 00:12:45.449 align:start position:0%
iteration or that's a big deal I'll try
to<00:12:42.369><c> spend</c><00:12:42.579><c> some</c><00:12:42.790><c> time</c><00:12:42.819><c> on</c><00:12:42.970><c> that</c><00:12:43.980><c> we</c><00:12:44.980><c> disallowed</c>

00:12:45.449 --> 00:12:45.459 align:start position:0%
to spend some time on that we disallowed
 

00:12:45.459 --> 00:12:47.909 align:start position:0%
to spend some time on that we disallowed
duplicates<00:12:46.029><c> in</c><00:12:46.239><c> the</c><00:12:46.360><c> list</c><00:12:46.569><c> so</c><00:12:46.899><c> probably</c><00:12:47.619><c> it's</c>

00:12:47.909 --> 00:12:47.919 align:start position:0%
duplicates in the list so probably it's
 

00:12:47.919 --> 00:12:49.919 align:start position:0%
duplicates in the list so probably it's
a<00:12:48.009><c> programming</c><00:12:48.489><c> error</c><00:12:48.699><c> if</c><00:12:48.970><c> you</c><00:12:49.239><c> if</c><00:12:49.569><c> you</c><00:12:49.749><c> put</c>

00:12:49.919 --> 00:12:49.929 align:start position:0%
a programming error if you if you put
 

00:12:49.929 --> 00:12:51.329 align:start position:0%
a programming error if you if you put
duplicates<00:12:50.410><c> if</c><00:12:50.559><c> you're</c><00:12:50.709><c> listing</c><00:12:51.009><c> out</c><00:12:51.100><c> a</c><00:12:51.129><c> bunch</c>

00:12:51.329 --> 00:12:51.339 align:start position:0%
duplicates if you're listing out a bunch
 

00:12:51.339 --> 00:12:52.590 align:start position:0%
duplicates if you're listing out a bunch
of<00:12:51.429><c> elements</c><00:12:51.610><c> explicit</c><00:12:52.269><c> thing</c><00:12:52.389><c> you</c><00:12:52.480><c> have</c>

00:12:52.590 --> 00:12:52.600 align:start position:0%
of elements explicit thing you have
 

00:12:52.600 --> 00:12:56.069 align:start position:0%
of elements explicit thing you have
duplicates<00:12:53.110><c> for</c><00:12:53.889><c> sets</c><00:12:54.100><c> and</c><00:12:54.249><c> maps</c><00:12:54.399><c> I</c><00:12:55.119><c> think</c><00:12:55.989><c> a</c>

00:12:56.069 --> 00:12:56.079 align:start position:0%
duplicates for sets and maps I think a
 

00:12:56.079 --> 00:12:58.769 align:start position:0%
duplicates for sets and maps I think a
very<00:12:56.799><c> interesting</c><00:12:57.009><c> point</c><00:12:57.519><c> is</c><00:12:57.790><c> that</c><00:12:58.029><c> they</c><00:12:58.449><c> are</c>

00:12:58.769 --> 00:12:58.779 align:start position:0%
very interesting point is that they are
 

00:12:58.779 --> 00:13:00.619 align:start position:0%
very interesting point is that they are
much<00:12:59.110><c> more</c><00:12:59.350><c> space</c><00:12:59.649><c> efficient</c><00:13:00.129><c> than</c><00:13:00.339><c> the</c>

00:13:00.619 --> 00:13:00.629 align:start position:0%
much more space efficient than the
 

00:13:00.629 --> 00:13:04.810 align:start position:0%
much more space efficient than the
existing<00:13:01.629><c> collections</c><00:13:02.579><c> particularly</c><00:13:03.579><c> hasha</c>

00:13:04.810 --> 00:13:04.820 align:start position:0%
existing collections particularly hasha
 

00:13:04.820 --> 00:13:07.540 align:start position:0%
existing collections particularly hasha
and<00:13:05.260><c> there</c><00:13:06.260><c> are</c><00:13:06.500><c> some</c><00:13:06.770><c> wrinkles</c><00:13:07.130><c> to</c><00:13:07.310><c> do</c><00:13:07.430><c> with</c>

00:13:07.540 --> 00:13:07.550 align:start position:0%
and there are some wrinkles to do with
 

00:13:07.550 --> 00:13:16.150 align:start position:0%
and there are some wrinkles to do with
serialization<00:13:08.060><c> which</c><00:13:08.420><c> I'll</c><00:13:08.600><c> cover</c><00:13:08.810><c> all</c><00:13:15.160><c> right</c>

00:13:16.150 --> 00:13:16.160 align:start position:0%
serialization which I'll cover all right
 

00:13:16.160 --> 00:13:18.280 align:start position:0%
serialization which I'll cover all right
so<00:13:16.400><c> the</c><00:13:16.610><c> new</c><00:13:16.730><c> static</c><00:13:17.060><c> factory</c><00:13:17.660><c> methods</c><00:13:18.050><c> all</c>

00:13:18.280 --> 00:13:18.290 align:start position:0%
so the new static factory methods all
 

00:13:18.290 --> 00:13:20.230 align:start position:0%
so the new static factory methods all
returned<00:13:19.010><c> collection</c><00:13:19.490><c> instances</c><00:13:20.030><c> that</c><00:13:20.180><c> are</c>

00:13:20.230 --> 00:13:20.240 align:start position:0%
returned collection instances that are
 

00:13:20.240 --> 00:13:24.400 align:start position:0%
returned collection instances that are
unmodifiable<00:13:21.230><c> and</c><00:13:21.680><c> so</c><00:13:22.220><c> by</c><00:13:22.700><c> that</c><00:13:22.880><c> we</c><00:13:23.300><c> mean</c><00:13:23.410><c> it's</c>

00:13:24.400 --> 00:13:24.410 align:start position:0%
unmodifiable and so by that we mean it's
 

00:13:24.410 --> 00:13:26.320 align:start position:0%
unmodifiable and so by that we mean it's
the<00:13:24.500><c> same</c><00:13:24.710><c> old</c><00:13:24.860><c> interface</c><00:13:25.250><c> but</c><00:13:25.700><c> and</c><00:13:26.090><c> so</c><00:13:26.240><c> you</c>

00:13:26.320 --> 00:13:26.330 align:start position:0%
the same old interface but and so you
 

00:13:26.330 --> 00:13:28.780 align:start position:0%
the same old interface but and so you
can<00:13:26.480><c> say</c><00:13:26.630><c> get</c><00:13:26.900><c> or</c><00:13:27.260><c> you</c><00:13:27.380><c> can</c><00:13:27.710><c> iterate</c><00:13:27.950><c> over</c><00:13:28.160><c> the</c>

00:13:28.780 --> 00:13:28.790 align:start position:0%
can say get or you can iterate over the
 

00:13:28.790 --> 00:13:30.730 align:start position:0%
can say get or you can iterate over the
collection<00:13:29.120><c> or</c><00:13:29.570><c> whatever</c><00:13:29.900><c> as</c><00:13:30.140><c> usual</c><00:13:30.500><c> things</c>

00:13:30.730 --> 00:13:30.740 align:start position:0%
collection or whatever as usual things
 

00:13:30.740 --> 00:13:31.930 align:start position:0%
collection or whatever as usual things
that<00:13:30.890><c> read</c><00:13:31.160><c> from</c><00:13:31.370><c> the</c><00:13:31.430><c> collection</c><00:13:31.790><c> work</c>

00:13:31.930 --> 00:13:31.940 align:start position:0%
that read from the collection work
 

00:13:31.940 --> 00:13:34.360 align:start position:0%
that read from the collection work
exactly<00:13:32.420><c> the</c><00:13:33.110><c> same</c><00:13:33.320><c> as</c><00:13:33.530><c> they</c><00:13:33.650><c> do</c><00:13:33.710><c> with</c><00:13:34.310><c> a</c>

00:13:34.360 --> 00:13:34.370 align:start position:0%
exactly the same as they do with a
 

00:13:34.370 --> 00:13:37.120 align:start position:0%
exactly the same as they do with a
conventional<00:13:35.380><c> conventional</c><00:13:36.380><c> clock</c><00:13:36.860><c> or</c><00:13:37.010><c> the</c>

00:13:37.120 --> 00:13:37.130 align:start position:0%
conventional conventional clock or the
 

00:13:37.130 --> 00:13:40.420 align:start position:0%
conventional conventional clock or the
the<00:13:37.370><c> existing</c><00:13:38.360><c> collections</c><00:13:38.950><c> however</c><00:13:39.950><c> if</c><00:13:40.220><c> you</c>

00:13:40.420 --> 00:13:40.430 align:start position:0%
the existing collections however if you
 

00:13:40.430 --> 00:13:44.710 align:start position:0%
the existing collections however if you
attempt<00:13:41.210><c> to</c><00:13:41.480><c> add</c><00:13:42.020><c> or</c><00:13:42.890><c> remove</c><00:13:43.370><c> or</c><00:13:43.910><c> set</c><00:13:44.450><c> an</c>

00:13:44.710 --> 00:13:44.720 align:start position:0%
attempt to add or remove or set an
 

00:13:44.720 --> 00:13:47.740 align:start position:0%
attempt to add or remove or set an
element<00:13:45.460><c> in</c><00:13:46.460><c> one</c><00:13:46.730><c> of</c><00:13:46.850><c> these</c><00:13:46.940><c> collections</c><00:13:47.480><c> it</c>

00:13:47.740 --> 00:13:47.750 align:start position:0%
element in one of these collections it
 

00:13:47.750 --> 00:13:50.650 align:start position:0%
element in one of these collections it
will<00:13:48.080><c> throw</c><00:13:48.320><c> an</c><00:13:48.350><c> unmodified</c><00:13:49.660><c> unsupported</c>

00:13:50.650 --> 00:13:50.660 align:start position:0%
will throw an unmodified unsupported
 

00:13:50.660 --> 00:13:52.750 align:start position:0%
will throw an unmodified unsupported
operation<00:13:51.140><c> exception</c><00:13:51.590><c> and</c><00:13:51.740><c> then</c><00:13:52.100><c> it's</c><00:13:52.670><c> very</c>

00:13:52.750 --> 00:13:52.760 align:start position:0%
operation exception and then it's very
 

00:13:52.760 --> 00:13:55.840 align:start position:0%
operation exception and then it's very
similar<00:13:53.240><c> to</c><00:13:54.130><c> the</c><00:13:55.130><c> behavior</c><00:13:55.280><c> of</c><00:13:55.670><c> the</c>

00:13:55.840 --> 00:13:55.850 align:start position:0%
similar to the behavior of the
 

00:13:55.850 --> 00:13:57.340 align:start position:0%
similar to the behavior of the
collection<00:13:56.330><c> you</c><00:13:56.360><c> get</c><00:13:56.570><c> when</c><00:13:57.050><c> you</c><00:13:57.140><c> wrap</c>

00:13:57.340 --> 00:13:57.350 align:start position:0%
collection you get when you wrap
 

00:13:57.350 --> 00:13:58.780 align:start position:0%
collection you get when you wrap
something<00:13:57.800><c> with</c><00:13:57.950><c> collections</c><00:13:58.370><c> dot</c>

00:13:58.780 --> 00:13:58.790 align:start position:0%
something with collections dot
 

00:13:58.790 --> 00:14:01.300 align:start position:0%
something with collections dot
unmodifiable<00:13:59.600><c> list</c><00:14:00.020><c> or</c><00:14:00.260><c> or</c><00:14:00.710><c> map</c><00:14:00.920><c> or</c><00:14:01.160><c> something</c>

00:14:01.300 --> 00:14:01.310 align:start position:0%
unmodifiable list or or map or something
 

00:14:01.310 --> 00:14:03.340 align:start position:0%
unmodifiable list or or map or something
like<00:14:01.550><c> that</c><00:14:01.700><c> so</c><00:14:02.270><c> I've</c><00:14:02.870><c> talked</c><00:14:03.080><c> a</c><00:14:03.140><c> lot</c><00:14:03.230><c> about</c>

00:14:03.340 --> 00:14:03.350 align:start position:0%
like that so I've talked a lot about
 

00:14:03.350 --> 00:14:05.830 align:start position:0%
like that so I've talked a lot about
unmodified<00:14:04.040><c> unmodified</c><00:14:04.910><c> bility</c><00:14:05.270><c> what</c><00:14:05.630><c> good</c>

00:14:05.830 --> 00:14:05.840 align:start position:0%
unmodified unmodified bility what good
 

00:14:05.840 --> 00:14:08.350 align:start position:0%
unmodified unmodified bility what good
is<00:14:06.050><c> because</c><00:14:06.290><c> G</c><00:14:06.710><c> don't</c><00:14:06.920><c> you</c><00:14:07.070><c> don't</c><00:14:08.060><c> you</c><00:14:08.120><c> want</c><00:14:08.300><c> to</c>

00:14:08.350 --> 00:14:08.360 align:start position:0%
is because G don't you don't you want to
 

00:14:08.360 --> 00:14:10.390 align:start position:0%
is because G don't you don't you want to
create<00:14:08.660><c> a</c><00:14:09.050><c> data</c><00:14:09.410><c> structure</c><00:14:09.800><c> so</c><00:14:09.980><c> that</c><00:14:10.010><c> you</c><00:14:10.220><c> can</c>

00:14:10.390 --> 00:14:10.400 align:start position:0%
create a data structure so that you can
 

00:14:10.400 --> 00:14:12.460 align:start position:0%
create a data structure so that you can
add<00:14:10.580><c> and</c><00:14:10.760><c> remove</c><00:14:10.820><c> things</c><00:14:11.210><c> to</c><00:14:11.420><c> it</c><00:14:11.540><c> well</c><00:14:12.050><c> often</c>

00:14:12.460 --> 00:14:12.470 align:start position:0%
add and remove things to it well often
 

00:14:12.470 --> 00:14:13.780 align:start position:0%
add and remove things to it well often
you<00:14:12.590><c> do</c><00:14:12.770><c> and</c><00:14:13.160><c> in</c><00:14:13.250><c> that</c><00:14:13.370><c> case</c><00:14:13.580><c> you</c><00:14:13.760><c> probably</c>

00:14:13.780 --> 00:14:13.790 align:start position:0%
you do and in that case you probably
 

00:14:13.790 --> 00:14:15.760 align:start position:0%
you do and in that case you probably
should<00:14:14.330><c> continue</c><00:14:14.720><c> to</c><00:14:14.750><c> want</c><00:14:14.990><c> use</c><00:14:15.290><c> one</c><00:14:15.500><c> of</c><00:14:15.530><c> the</c>

00:14:15.760 --> 00:14:15.770 align:start position:0%
should continue to want use one of the
 

00:14:15.770 --> 00:14:19.180 align:start position:0%
should continue to want use one of the
existing<00:14:16.310><c> collection</c><00:14:17.060><c> implementations</c><00:14:18.190><c> but</c>

00:14:19.180 --> 00:14:19.190 align:start position:0%
existing collection implementations but
 

00:14:19.190 --> 00:14:22.420 align:start position:0%
existing collection implementations but
it's<00:14:19.370><c> actually</c><00:14:19.700><c> very</c><00:14:19.730><c> common</c><00:14:20.210><c> case</c><00:14:20.800><c> where</c><00:14:21.800><c> you</c>

00:14:22.420 --> 00:14:22.430 align:start position:0%
it's actually very common case where you
 

00:14:22.430 --> 00:14:24.370 align:start position:0%
it's actually very common case where you
want<00:14:22.610><c> to</c><00:14:22.820><c> initialize</c><00:14:23.330><c> a</c><00:14:23.390><c> collection</c><00:14:23.870><c> from</c><00:14:24.080><c> a</c>

00:14:24.370 --> 00:14:24.380 align:start position:0%
want to initialize a collection from a
 

00:14:24.380 --> 00:14:28.300 align:start position:0%
want to initialize a collection from a
known<00:14:24.680><c> set</c><00:14:25.040><c> of</c><00:14:26.020><c> constant</c><00:14:27.020><c> values</c><00:14:27.410><c> and</c><00:14:27.770><c> then</c>

00:14:28.300 --> 00:14:28.310 align:start position:0%
known set of constant values and then
 

00:14:28.310 --> 00:14:32.170 align:start position:0%
known set of constant values and then
never<00:14:28.700><c> touch</c><00:14:29.030><c> it</c><00:14:29.060><c> later</c><00:14:29.420><c> on</c><00:14:29.690><c> and</c><00:14:30.080><c> so</c><00:14:30.890><c> you</c><00:14:31.700><c> could</c>

00:14:32.170 --> 00:14:32.180 align:start position:0%
never touch it later on and so you could
 

00:14:32.180 --> 00:14:33.730 align:start position:0%
never touch it later on and so you could
just<00:14:32.210><c> make</c><00:14:32.870><c> sure</c><00:14:33.080><c> in</c><00:14:33.260><c> your</c><00:14:33.290><c> program</c><00:14:33.710><c> that</c>

00:14:33.730 --> 00:14:33.740 align:start position:0%
just make sure in your program that
 

00:14:33.740 --> 00:14:36.340 align:start position:0%
just make sure in your program that
nothing<00:14:34.460><c> ever</c><00:14:34.580><c> modifies</c><00:14:35.030><c> it</c><00:14:35.240><c> later</c><00:14:35.390><c> on</c><00:14:35.630><c> and</c>

00:14:36.340 --> 00:14:36.350 align:start position:0%
nothing ever modifies it later on and
 

00:14:36.350 --> 00:14:37.840 align:start position:0%
nothing ever modifies it later on and
that<00:14:36.380><c> and</c><00:14:36.770><c> that</c><00:14:36.890><c> would</c><00:14:36.980><c> be</c><00:14:37.040><c> fine</c><00:14:37.340><c> but</c><00:14:37.760><c> if</c>

00:14:37.840 --> 00:14:37.850 align:start position:0%
that and that would be fine but if
 

00:14:37.850 --> 00:14:39.700 align:start position:0%
that and that would be fine but if
something<00:14:38.150><c> modified</c><00:14:38.510><c> it</c><00:14:38.660><c> by</c><00:14:38.780><c> accident</c><00:14:39.050><c> then</c>

00:14:39.700 --> 00:14:39.710 align:start position:0%
something modified it by accident then
 

00:14:39.710 --> 00:14:41.830 align:start position:0%
something modified it by accident then
that<00:14:39.860><c> might</c><00:14:40.070><c> be</c><00:14:40.250><c> a</c><00:14:40.280><c> source</c><00:14:40.520><c> of</c><00:14:40.760><c> subtle</c><00:14:41.060><c> bugs</c><00:14:41.270><c> so</c>

00:14:41.830 --> 00:14:41.840 align:start position:0%
that might be a source of subtle bugs so
 

00:14:41.840 --> 00:14:44.050 align:start position:0%
that might be a source of subtle bugs so
you<00:14:42.350><c> might</c><00:14:42.560><c> go</c><00:14:42.740><c> the</c><00:14:42.860><c> extra</c><00:14:42.980><c> step</c><00:14:43.220><c> of</c><00:14:43.640><c> wrapping</c>

00:14:44.050 --> 00:14:44.060 align:start position:0%
you might go the extra step of wrapping
 

00:14:44.060 --> 00:14:46.000 align:start position:0%
you might go the extra step of wrapping
it<00:14:44.210><c> in</c><00:14:44.240><c> an</c><00:14:44.600><c> unmodified</c><00:14:45.020><c> will</c><00:14:45.440><c> wrap</c><00:14:45.590><c> ur</c><00:14:45.800><c> and</c>

00:14:46.000 --> 00:14:46.010 align:start position:0%
it in an unmodified will wrap ur and
 

00:14:46.010 --> 00:14:47.290 align:start position:0%
it in an unmodified will wrap ur and
that<00:14:46.340><c> would</c><00:14:46.490><c> be</c><00:14:46.610><c> helpful</c><00:14:46.880><c> that</c><00:14:47.210><c> would</c>

00:14:47.290 --> 00:14:47.300 align:start position:0%
that would be helpful that would
 

00:14:47.300 --> 00:14:49.090 align:start position:0%
that would be helpful that would
probably<00:14:47.480><c> be</c><00:14:47.690><c> a</c><00:14:47.960><c> thing</c><00:14:48.350><c> we</c><00:14:48.470><c> would</c><00:14:48.680><c> recommend</c>

00:14:49.090 --> 00:14:49.100 align:start position:0%
probably be a thing we would recommend
 

00:14:49.100 --> 00:14:52.180 align:start position:0%
probably be a thing we would recommend
that<00:14:49.280><c> you</c><00:14:49.460><c> do</c><00:14:49.640><c> in</c><00:14:50.000><c> Java</c><00:14:50.780><c> 8</c><00:14:51.050><c> and</c><00:14:51.320><c> earlier</c><00:14:51.650><c> but</c>

00:14:52.180 --> 00:14:52.190 align:start position:0%
that you do in Java 8 and earlier but
 

00:14:52.190 --> 00:14:54.160 align:start position:0%
that you do in Java 8 and earlier but
with<00:14:52.340><c> these</c><00:14:52.520><c> these</c><00:14:53.030><c> new</c><00:14:53.360><c> convenience</c>

00:14:54.160 --> 00:14:54.170 align:start position:0%
with these these new convenience
 

00:14:54.170 --> 00:14:55.540 align:start position:0%
with these these new convenience
factoring<00:14:54.710><c> methods</c><00:14:55.010><c> you</c><00:14:55.130><c> get</c><00:14:55.310><c> a</c><00:14:55.340><c> none</c>

00:14:55.540 --> 00:14:55.550 align:start position:0%
factoring methods you get a none
 

00:14:55.550 --> 00:14:58.210 align:start position:0%
factoring methods you get a none
modifiable<00:14:56.090><c> list</c><00:14:56.360><c> automatically</c><00:14:57.140><c> now</c><00:14:57.830><c> if</c><00:14:58.100><c> you</c>

00:14:58.210 --> 00:14:58.220 align:start position:0%
modifiable list automatically now if you
 

00:14:58.220 --> 00:15:01.330 align:start position:0%
modifiable list automatically now if you
want<00:14:58.370><c> to</c><00:14:58.490><c> pre</c><00:14:58.730><c> initialize</c><00:14:59.180><c> a</c><00:14:59.540><c> a</c><00:15:00.350><c> collection</c>

00:15:01.330 --> 00:15:01.340 align:start position:0%
want to pre initialize a a collection
 

00:15:01.340 --> 00:15:03.310 align:start position:0%
want to pre initialize a a collection
with<00:15:01.610><c> a</c><00:15:01.640><c> set</c><00:15:01.880><c> of</c><00:15:01.970><c> elements</c><00:15:02.120><c> that</c><00:15:02.540><c> you</c><00:15:03.020><c> might</c>

00:15:03.310 --> 00:15:03.320 align:start position:0%
with a set of elements that you might
 

00:15:03.320 --> 00:15:06.820 align:start position:0%
with a set of elements that you might
later<00:15:03.560><c> want</c><00:15:03.860><c> to</c><00:15:03.980><c> modify</c><00:15:04.370><c> or</c><00:15:04.550><c> add</c><00:15:04.580><c> to</c><00:15:05.110><c> the</c><00:15:06.110><c> these</c>

00:15:06.820 --> 00:15:06.830 align:start position:0%
later want to modify or add to the these
 

00:15:06.830 --> 00:15:08.560 align:start position:0%
later want to modify or add to the these
collection<00:15:07.550><c> factors</c><00:15:07.880><c> they're</c><00:15:08.090><c> still</c><00:15:08.330><c> useful</c>

00:15:08.560 --> 00:15:08.570 align:start position:0%
collection factors they're still useful
 

00:15:08.570 --> 00:15:12.040 align:start position:0%
collection factors they're still useful
as<00:15:09.430><c> initializers</c><00:15:10.430><c> for</c><00:15:11.120><c> the</c><00:15:11.630><c> existing</c>

00:15:12.040 --> 00:15:12.050 align:start position:0%
as initializers for the existing
 

00:15:12.050 --> 00:15:14.440 align:start position:0%
as initializers for the existing
collections<00:15:12.560><c> so</c><00:15:13.100><c> if</c><00:15:13.220><c> you</c><00:15:13.340><c> had</c><00:15:13.520><c> if</c><00:15:14.120><c> you</c><00:15:14.240><c> wanted</c>

00:15:14.440 --> 00:15:14.450 align:start position:0%
collections so if you had if you wanted
 

00:15:14.450 --> 00:15:16.360 align:start position:0%
collections so if you had if you wanted
to<00:15:14.570><c> pre</c><00:15:14.720><c> initialize</c><00:15:15.110><c> something</c><00:15:15.350><c> like</c><00:15:15.860><c> like</c><00:15:16.340><c> a</c>

00:15:16.360 --> 00:15:16.370 align:start position:0%
to pre initialize something like like a
 

00:15:16.370 --> 00:15:17.879 align:start position:0%
to pre initialize something like like a
hash<00:15:16.610><c> set</c><00:15:16.820><c> you</c><00:15:16.970><c> could</c><00:15:17.090><c> say</c><00:15:17.240><c> new</c>

00:15:17.879 --> 00:15:17.889 align:start position:0%
hash set you could say new
 

00:15:17.889 --> 00:15:21.599 align:start position:0%
hash set you could say new
set<00:15:18.189><c> with</c><00:15:19.089><c> lists</c><00:15:19.779><c> of</c><00:15:20.009><c> ABC</c><00:15:21.009><c> or</c><00:15:21.220><c> something</c><00:15:21.489><c> like</c>

00:15:21.599 --> 00:15:21.609 align:start position:0%
set with lists of ABC or something like
 

00:15:21.609 --> 00:15:24.119 align:start position:0%
set with lists of ABC or something like
that<00:15:21.670><c> so</c><00:15:22.089><c> even</c><00:15:22.749><c> even</c><00:15:22.929><c> if</c><00:15:23.410><c> you</c><00:15:23.559><c> want</c><00:15:23.739><c> to</c><00:15:23.859><c> modify</c>

00:15:24.119 --> 00:15:24.129 align:start position:0%
that so even even if you want to modify
 

00:15:24.129 --> 00:15:25.499 align:start position:0%
that so even even if you want to modify
something<00:15:24.549><c> later</c><00:15:24.730><c> on</c><00:15:24.970><c> these</c><00:15:25.149><c> are</c><00:15:25.329><c> still</c>

00:15:25.499 --> 00:15:25.509 align:start position:0%
something later on these are still
 

00:15:25.509 --> 00:15:27.720 align:start position:0%
something later on these are still
useful<00:15:25.929><c> for</c><00:15:26.139><c> initializing</c><00:15:26.889><c> the</c><00:15:27.249><c> conventional</c>

00:15:27.720 --> 00:15:27.730 align:start position:0%
useful for initializing the conventional
 

00:15:27.730 --> 00:15:31.530 align:start position:0%
useful for initializing the conventional
collections<00:15:29.040><c> there</c><00:15:30.040><c> are</c><00:15:30.220><c> other</c><00:15:30.549><c> there</c><00:15:31.449><c> are</c>

00:15:31.530 --> 00:15:31.540 align:start position:0%
collections there are other there are
 

00:15:31.540 --> 00:15:33.359 align:start position:0%
collections there are other there are
other<00:15:31.629><c> reasons</c><00:15:31.809><c> too</c><00:15:32.259><c> to</c><00:15:32.619><c> use</c><00:15:32.739><c> unmodifiable</c>

00:15:33.359 --> 00:15:33.369 align:start position:0%
other reasons too to use unmodifiable
 

00:15:33.369 --> 00:15:36.150 align:start position:0%
other reasons too to use unmodifiable
sets<00:15:33.759><c> if</c><00:15:34.029><c> you</c><00:15:34.329><c> have</c><00:15:34.449><c> a</c><00:15:34.480><c> class</c><00:15:34.779><c> that</c><00:15:35.259><c> has</c><00:15:35.980><c> an</c>

00:15:36.150 --> 00:15:36.160 align:start position:0%
sets if you have a class that has an
 

00:15:36.160 --> 00:15:37.530 align:start position:0%
sets if you have a class that has an
internal<00:15:36.459><c> data</c><00:15:36.699><c> structure</c><00:15:37.119><c> which</c><00:15:37.389><c> is</c>

00:15:37.530 --> 00:15:37.540 align:start position:0%
internal data structure which is
 

00:15:37.540 --> 00:15:39.659 align:start position:0%
internal data structure which is
represented<00:15:38.109><c> by</c><00:15:38.139><c> a</c><00:15:38.259><c> collection</c><00:15:38.619><c> I</c><00:15:38.919><c> got</c><00:15:39.279><c> a</c><00:15:39.309><c> list</c>

00:15:39.659 --> 00:15:39.669 align:start position:0%
represented by a collection I got a list
 

00:15:39.669 --> 00:15:42.629 align:start position:0%
represented by a collection I got a list
of<00:15:39.879><c> something</c><00:15:40.029><c> and</c><00:15:40.829><c> you</c><00:15:41.829><c> have</c><00:15:41.949><c> a</c><00:15:41.980><c> getter</c><00:15:42.220><c> that</c>

00:15:42.629 --> 00:15:42.639 align:start position:0%
of something and you have a getter that
 

00:15:42.639 --> 00:15:44.609 align:start position:0%
of something and you have a getter that
that<00:15:43.029><c> gets</c><00:15:43.359><c> that</c><00:15:43.569><c> list</c><00:15:43.839><c> of</c><00:15:43.989><c> something</c><00:15:44.199><c> well</c>

00:15:44.609 --> 00:15:44.619 align:start position:0%
that gets that list of something well
 

00:15:44.619 --> 00:15:48.780 align:start position:0%
that gets that list of something well
you<00:15:44.709><c> could</c><00:15:44.980><c> just</c><00:15:45.279><c> hand</c><00:15:45.579><c> out</c><00:15:45.850><c> the</c><00:15:47.069><c> list</c><00:15:48.069><c> but</c>

00:15:48.780 --> 00:15:48.790 align:start position:0%
you could just hand out the list but
 

00:15:48.790 --> 00:15:51.509 align:start position:0%
you could just hand out the list but
that<00:15:48.999><c> would</c><00:15:49.269><c> let</c><00:15:49.419><c> the</c><00:15:49.540><c> caller</c><00:15:50.339><c> modify</c><00:15:51.339><c> your</c>

00:15:51.509 --> 00:15:51.519 align:start position:0%
that would let the caller modify your
 

00:15:51.519 --> 00:15:52.949 align:start position:0%
that would let the caller modify your
internal<00:15:51.970><c> data</c><00:15:52.149><c> structures</c><00:15:52.600><c> which</c><00:15:52.809><c> is</c>

00:15:52.949 --> 00:15:52.959 align:start position:0%
internal data structures which is
 

00:15:52.959 --> 00:15:55.079 align:start position:0%
internal data structures which is
probably<00:15:53.379><c> not</c><00:15:53.559><c> what</c><00:15:53.769><c> you</c><00:15:53.889><c> want</c><00:15:54.069><c> to</c><00:15:54.189><c> do</c><00:15:54.339><c> and</c><00:15:54.639><c> so</c>

00:15:55.079 --> 00:15:55.089 align:start position:0%
probably not what you want to do and so
 

00:15:55.089 --> 00:15:56.639 align:start position:0%
probably not what you want to do and so
again<00:15:55.389><c> you</c><00:15:55.449><c> could</c><00:15:55.749><c> be</c><00:15:55.779><c> very</c><00:15:56.049><c> careful</c><00:15:56.470><c> and</c><00:15:56.619><c> make</c>

00:15:56.639 --> 00:15:56.649 align:start position:0%
again you could be very careful and make
 

00:15:56.649 --> 00:15:58.019 align:start position:0%
again you could be very careful and make
sure<00:15:56.769><c> that</c><00:15:57.040><c> none</c><00:15:57.189><c> of</c><00:15:57.220><c> your</c><00:15:57.399><c> callers</c><00:15:57.639><c> ever</c>

00:15:58.019 --> 00:15:58.029 align:start position:0%
sure that none of your callers ever
 

00:15:58.029 --> 00:16:01.019 align:start position:0%
sure that none of your callers ever
modified<00:15:58.569><c> that</c><00:15:58.779><c> but</c><00:15:59.470><c> if</c><00:15:59.739><c> by</c><00:16:00.220><c> accident</c><00:16:00.429><c> or</c>

00:16:01.019 --> 00:16:01.029 align:start position:0%
modified that but if by accident or
 

00:16:01.029 --> 00:16:03.329 align:start position:0%
modified that but if by accident or
malice<00:16:01.839><c> actually</c><00:16:02.379><c> unfortunately</c><00:16:02.649><c> we</c><00:16:03.100><c> have</c><00:16:03.220><c> to</c>

00:16:03.329 --> 00:16:03.339 align:start position:0%
malice actually unfortunately we have to
 

00:16:03.339 --> 00:16:05.549 align:start position:0%
malice actually unfortunately we have to
think<00:16:03.519><c> about</c><00:16:03.579><c> that</c><00:16:03.910><c> the</c><00:16:04.449><c> caller</c><00:16:04.779><c> decided</c><00:16:05.439><c> to</c>

00:16:05.549 --> 00:16:05.559 align:start position:0%
think about that the caller decided to
 

00:16:05.559 --> 00:16:07.739 align:start position:0%
think about that the caller decided to
modify<00:16:05.919><c> the</c><00:16:06.100><c> list</c><00:16:06.489><c> that</c><00:16:06.730><c> was</c><00:16:06.850><c> returned</c><00:16:07.269><c> then</c>

00:16:07.739 --> 00:16:07.749 align:start position:0%
modify the list that was returned then
 

00:16:07.749 --> 00:16:09.749 align:start position:0%
modify the list that was returned then
that<00:16:07.869><c> would</c><00:16:08.019><c> create</c><00:16:08.290><c> some</c><00:16:08.679><c> subtle</c><00:16:09.279><c> bugs</c><00:16:09.489><c> or</c>

00:16:09.749 --> 00:16:09.759 align:start position:0%
that would create some subtle bugs or
 

00:16:09.759 --> 00:16:12.329 align:start position:0%
that would create some subtle bugs or
even<00:16:10.029><c> security</c><00:16:10.540><c> holes</c><00:16:10.720><c> so</c><00:16:11.319><c> a</c><00:16:11.649><c> class</c><00:16:12.069><c> can</c>

00:16:12.329 --> 00:16:12.339 align:start position:0%
even security holes so a class can
 

00:16:12.339 --> 00:16:17.729 align:start position:0%
even security holes so a class can
protect<00:16:12.699><c> itself</c><00:16:13.199><c> if</c><00:16:14.199><c> it</c><00:16:14.439><c> has</c><00:16:14.679><c> a</c><00:16:16.739><c> unmodified</c>

00:16:17.729 --> 00:16:17.739 align:start position:0%
protect itself if it has a unmodified
 

00:16:17.739 --> 00:16:20.069 align:start position:0%
protect itself if it has a unmodified
has<00:16:17.919><c> a</c><00:16:18.279><c> collection</c><00:16:18.999><c> that's</c><00:16:19.119><c> using</c><00:16:19.540><c> internally</c>

00:16:20.069 --> 00:16:20.079 align:start position:0%
has a collection that's using internally
 

00:16:20.079 --> 00:16:22.739 align:start position:0%
has a collection that's using internally
it<00:16:20.559><c> can</c><00:16:20.919><c> wrap</c><00:16:21.429><c> that</c><00:16:21.459><c> in</c><00:16:21.850><c> an</c><00:16:21.970><c> unmodified</c><00:16:22.329><c> little</c>

00:16:22.739 --> 00:16:22.749 align:start position:0%
it can wrap that in an unmodified little
 

00:16:22.749 --> 00:16:25.590 align:start position:0%
it can wrap that in an unmodified little
wrapper<00:16:23.110><c> and</c><00:16:23.290><c> then</c><00:16:23.999><c> pass</c><00:16:24.999><c> it</c><00:16:25.239><c> to</c><00:16:25.299><c> the</c><00:16:25.389><c> caller</c>

00:16:25.590 --> 00:16:25.600 align:start position:0%
wrapper and then pass it to the caller
 

00:16:25.600 --> 00:16:27.929 align:start position:0%
wrapper and then pass it to the caller
which<00:16:26.169><c> is</c><00:16:26.350><c> then</c><00:16:26.499><c> prohibited</c><00:16:27.100><c> from</c><00:16:27.369><c> modifying</c>

00:16:27.929 --> 00:16:27.939 align:start position:0%
which is then prohibited from modifying
 

00:16:27.939 --> 00:16:31.789 align:start position:0%
which is then prohibited from modifying
it<00:16:28.179><c> so</c><00:16:29.049><c> with</c><00:16:29.559><c> the</c><00:16:29.829><c> new</c><00:16:30.249><c> collection</c><00:16:30.610><c> factories</c>

00:16:31.789 --> 00:16:31.799 align:start position:0%
it so with the new collection factories
 

00:16:31.799 --> 00:16:34.739 align:start position:0%
it so with the new collection factories
you<00:16:32.799><c> kind</c><00:16:33.040><c> of</c><00:16:33.100><c> get</c><00:16:33.309><c> that</c><00:16:33.339><c> for</c><00:16:33.669><c> free</c><00:16:33.850><c> so</c><00:16:34.360><c> if</c><00:16:34.629><c> you</c>

00:16:34.739 --> 00:16:34.749 align:start position:0%
you kind of get that for free so if you
 

00:16:34.749 --> 00:16:36.780 align:start position:0%
you kind of get that for free so if you
pre<00:16:35.049><c> initialize</c><00:16:35.410><c> a</c><00:16:35.439><c> data</c><00:16:35.709><c> structure</c><00:16:36.220><c> it's</c>

00:16:36.780 --> 00:16:36.790 align:start position:0%
pre initialize a data structure it's
 

00:16:36.790 --> 00:16:38.999 align:start position:0%
pre initialize a data structure it's
unmodifiable<00:16:37.540><c> already</c><00:16:38.079><c> and</c><00:16:38.410><c> so</c><00:16:38.589><c> you</c><00:16:38.679><c> can</c><00:16:38.980><c> just</c>

00:16:38.999 --> 00:16:39.009 align:start position:0%
unmodifiable already and so you can just
 

00:16:39.009 --> 00:16:42.809 align:start position:0%
unmodifiable already and so you can just
hand<00:16:39.399><c> it</c><00:16:39.549><c> out</c><00:16:40.169><c> with</c><00:16:41.169><c> impunity</c><00:16:41.619><c> and</c><00:16:42.100><c> you</c><00:16:42.610><c> know</c>

00:16:42.809 --> 00:16:42.819 align:start position:0%
hand it out with impunity and you know
 

00:16:42.819 --> 00:16:44.819 align:start position:0%
hand it out with impunity and you know
that<00:16:43.179><c> nobody</c><00:16:43.540><c> else</c><00:16:43.869><c> can</c><00:16:44.110><c> modify</c><00:16:44.379><c> it</c><00:16:44.559><c> and</c>

00:16:44.819 --> 00:16:44.829 align:start position:0%
that nobody else can modify it and
 

00:16:44.829 --> 00:16:49.079 align:start position:0%
that nobody else can modify it and
corrupt<00:16:45.579><c> your</c><00:16:45.699><c> internal</c><00:16:46.059><c> data</c><00:16:46.239><c> structures</c><00:16:48.089><c> so</c>

00:16:49.079 --> 00:16:49.089 align:start position:0%
corrupt your internal data structures so
 

00:16:49.089 --> 00:16:50.879 align:start position:0%
corrupt your internal data structures so
there's<00:16:49.629><c> another</c><00:16:49.869><c> aspect</c><00:16:50.379><c> of</c><00:16:50.470><c> a</c><00:16:50.649><c> collection</c>

00:16:50.879 --> 00:16:50.889 align:start position:0%
there's another aspect of a collection
 

00:16:50.889 --> 00:16:54.389 align:start position:0%
there's another aspect of a collection
being<00:16:51.100><c> unmodifiable</c><00:16:51.730><c> which</c><00:16:52.179><c> is</c><00:16:52.360><c> that</c><00:16:53.009><c> the</c><00:16:54.009><c> the</c>

00:16:54.389 --> 00:16:54.399 align:start position:0%
being unmodifiable which is that the the
 

00:16:54.399 --> 00:16:56.489 align:start position:0%
being unmodifiable which is that the the
the<00:16:54.999><c> conventional</c><00:16:55.540><c> collections</c><00:16:56.049><c> like</c><00:16:56.259><c> hash</c>

00:16:56.489 --> 00:16:56.499 align:start position:0%
the conventional collections like hash
 

00:16:56.499 --> 00:17:00.139 align:start position:0%
the conventional collections like hash
map<00:16:56.799><c> are</c><00:16:57.100><c> geared</c><00:16:57.999><c> towards</c><00:16:58.480><c> general-purpose</c>

00:17:00.139 --> 00:17:00.149 align:start position:0%
map are geared towards general-purpose
 

00:17:00.149 --> 00:17:03.090 align:start position:0%
map are geared towards general-purpose
operations<00:17:01.149><c> including</c><00:17:02.019><c> updates</c><00:17:02.529><c> and</c><00:17:02.860><c> so</c><00:17:02.980><c> they</c>

00:17:03.090 --> 00:17:03.100 align:start position:0%
operations including updates and so they
 

00:17:03.100 --> 00:17:04.529 align:start position:0%
operations including updates and so they
have<00:17:03.249><c> to</c><00:17:03.369><c> handle</c><00:17:03.759><c> a</c><00:17:03.850><c> bunch</c><00:17:04.029><c> of</c><00:17:04.179><c> different</c>

00:17:04.529 --> 00:17:04.539 align:start position:0%
have to handle a bunch of different
 

00:17:04.539 --> 00:17:07.500 align:start position:0%
have to handle a bunch of different
cases<00:17:04.750><c> that</c><00:17:05.189><c> an</c><00:17:06.189><c> unmodifiable</c><00:17:06.909><c> collection</c>

00:17:07.500 --> 00:17:07.510 align:start position:0%
cases that an unmodifiable collection
 

00:17:07.510 --> 00:17:10.649 align:start position:0%
cases that an unmodifiable collection
does<00:17:07.689><c> not</c><00:17:07.929><c> so</c><00:17:08.559><c> on</c><00:17:08.829><c> the</c><00:17:09.490><c> implementation</c><00:17:09.880><c> of</c><00:17:10.510><c> an</c>

00:17:10.649 --> 00:17:10.659 align:start position:0%
does not so on the implementation of an
 

00:17:10.659 --> 00:17:12.750 align:start position:0%
does not so on the implementation of an
unmodifiable<00:17:11.260><c> collection</c><00:17:11.829><c> is</c><00:17:11.919><c> actually</c><00:17:12.069><c> can</c>

00:17:12.750 --> 00:17:12.760 align:start position:0%
unmodifiable collection is actually can
 

00:17:12.760 --> 00:17:14.850 align:start position:0%
unmodifiable collection is actually can
actually<00:17:13.089><c> be</c><00:17:13.179><c> quite</c><00:17:13.329><c> a</c><00:17:13.419><c> bit</c><00:17:13.630><c> simpler</c><00:17:14.049><c> than</c><00:17:14.559><c> one</c>

00:17:14.850 --> 00:17:14.860 align:start position:0%
actually be quite a bit simpler than one
 

00:17:14.860 --> 00:17:16.889 align:start position:0%
actually be quite a bit simpler than one
of<00:17:15.130><c> the</c><00:17:15.429><c> conventional</c><00:17:15.939><c> ones</c><00:17:16.120><c> since</c><00:17:16.569><c> it</c><00:17:16.689><c> never</c>

00:17:16.889 --> 00:17:16.899 align:start position:0%
of the conventional ones since it never
 

00:17:16.899 --> 00:17:19.319 align:start position:0%
of the conventional ones since it never
has<00:17:17.139><c> to</c><00:17:17.289><c> be</c><00:17:17.409><c> modified</c><00:17:17.829><c> so</c><00:17:18.429><c> in</c><00:17:18.730><c> particular</c><00:17:19.209><c> the</c>

00:17:19.319 --> 00:17:19.329 align:start position:0%
has to be modified so in particular the
 

00:17:19.329 --> 00:17:21.480 align:start position:0%
has to be modified so in particular the
implementations<00:17:19.959><c> we</c><00:17:20.110><c> have</c><00:17:20.319><c> in</c><00:17:20.500><c> JDK</c><00:17:20.889><c> 9</c><00:17:21.159><c> are</c>

00:17:21.480 --> 00:17:21.490 align:start position:0%
implementations we have in JDK 9 are
 

00:17:21.490 --> 00:17:24.329 align:start position:0%
implementations we have in JDK 9 are
packed<00:17:22.120><c> much</c><00:17:22.360><c> more</c><00:17:22.569><c> tightly</c><00:17:22.870><c> because</c><00:17:23.559><c> wait</c>

00:17:24.329 --> 00:17:24.339 align:start position:0%
packed much more tightly because wait
 

00:17:24.339 --> 00:17:26.279 align:start position:0%
packed much more tightly because wait
once<00:17:24.970><c> once</c><00:17:25.329><c> something</c><00:17:25.630><c> lands</c><00:17:25.899><c> in</c><00:17:25.990><c> a</c><00:17:26.079><c> certain</c>

00:17:26.279 --> 00:17:26.289 align:start position:0%
once once something lands in a certain
 

00:17:26.289 --> 00:17:28.470 align:start position:0%
once once something lands in a certain
place<00:17:26.409><c> it</c><00:17:26.679><c> never</c><00:17:26.949><c> needs</c><00:17:27.159><c> to</c><00:17:27.309><c> move</c><00:17:27.549><c> and</c><00:17:27.970><c> it</c>

00:17:28.470 --> 00:17:28.480 align:start position:0%
place it never needs to move and it
 

00:17:28.480 --> 00:17:30.269 align:start position:0%
place it never needs to move and it
never<00:17:28.600><c> needs</c><00:17:28.840><c> to</c><00:17:28.960><c> be</c><00:17:29.139><c> replaced</c><00:17:29.470><c> so</c><00:17:29.830><c> we</c><00:17:30.070><c> just</c>

00:17:30.269 --> 00:17:30.279 align:start position:0%
never needs to be replaced so we just
 

00:17:30.279 --> 00:17:31.030 align:start position:0%
never needs to be replaced so we just
don't<00:17:30.789><c> have</c>

00:17:31.030 --> 00:17:31.040 align:start position:0%
don't have
 

00:17:31.040 --> 00:17:33.070 align:start position:0%
don't have
to<00:17:31.100><c> worry</c><00:17:31.220><c> about</c><00:17:31.370><c> that</c><00:17:31.670><c> case</c><00:17:31.910><c> so</c><00:17:32.450><c> we</c><00:17:32.750><c> can</c><00:17:32.780><c> take</c>

00:17:33.070 --> 00:17:33.080 align:start position:0%
to worry about that case so we can take
 

00:17:33.080 --> 00:17:34.390 align:start position:0%
to worry about that case so we can take
advantage<00:17:33.470><c> of</c><00:17:33.590><c> that</c><00:17:33.680><c> and</c><00:17:33.920><c> make</c><00:17:34.160><c> the</c><00:17:34.280><c> data</c>

00:17:34.390 --> 00:17:34.400 align:start position:0%
advantage of that and make the data
 

00:17:34.400 --> 00:17:37.360 align:start position:0%
advantage of that and make the data
structure<00:17:34.820><c> much</c><00:17:35.000><c> more</c><00:17:35.210><c> compact</c><00:17:35.770><c> and</c><00:17:36.770><c> also</c><00:17:37.130><c> the</c>

00:17:37.360 --> 00:17:37.370 align:start position:0%
structure much more compact and also the
 

00:17:37.370 --> 00:17:43.110 align:start position:0%
structure much more compact and also the
the<00:17:37.400><c> code</c><00:17:38.000><c> complexity</c><00:17:38.480><c> is</c><00:17:38.870><c> is</c><00:17:39.250><c> much</c><00:17:40.250><c> reduced</c>

00:17:43.110 --> 00:17:43.120 align:start position:0%
 
 

00:17:43.120 --> 00:17:46.270 align:start position:0%
 
so<00:17:44.120><c> so</c><00:17:44.720><c> there</c><00:17:45.080><c> is</c><00:17:45.200><c> a</c><00:17:45.230><c> distinction</c><00:17:45.710><c> here</c><00:17:46.130><c> though</c>

00:17:46.270 --> 00:17:46.280 align:start position:0%
so so there is a distinction here though
 

00:17:46.280 --> 00:17:49.300 align:start position:0%
so so there is a distinction here though
between<00:17:46.490><c> the</c><00:17:47.420><c> unmodifiable</c><00:17:48.290><c> wrappers</c><00:17:49.010><c> like</c>

00:17:49.300 --> 00:17:49.310 align:start position:0%
between the unmodifiable wrappers like
 

00:17:49.310 --> 00:17:52.440 align:start position:0%
between the unmodifiable wrappers like
collections<00:17:50.240><c> dot</c><00:17:50.660><c> unmodifiable</c><00:17:51.530><c> list</c><00:17:52.040><c> and</c>

00:17:52.440 --> 00:17:52.450 align:start position:0%
collections dot unmodifiable list and
 

00:17:52.450 --> 00:17:55.660 align:start position:0%
collections dot unmodifiable list and
the<00:17:53.450><c> unmodifiable</c><00:17:54.320><c> collection</c><00:17:54.920><c> you</c><00:17:55.040><c> get</c><00:17:55.280><c> from</c>

00:17:55.660 --> 00:17:55.670 align:start position:0%
the unmodifiable collection you get from
 

00:17:55.670 --> 00:18:00.010 align:start position:0%
the unmodifiable collection you get from
list<00:17:56.480><c> dot</c><00:17:56.930><c> of</c><00:17:57.490><c> so</c><00:17:58.490><c> in</c><00:17:58.850><c> the</c><00:17:59.060><c> first</c><00:17:59.360><c> actually</c>

00:18:00.010 --> 00:18:00.020 align:start position:0%
list dot of so in the first actually
 

00:18:00.020 --> 00:18:01.570 align:start position:0%
list dot of so in the first actually
actually<00:18:00.530><c> i'll</c><00:18:00.740><c> cover</c><00:18:00.950><c> that</c><00:18:01.130><c> on</c><00:18:01.310><c> the</c><00:18:01.430><c> next</c>

00:18:01.570 --> 00:18:01.580 align:start position:0%
actually i'll cover that on the next
 

00:18:01.580 --> 00:18:04.570 align:start position:0%
actually i'll cover that on the next
slide<00:18:02.140><c> so</c><00:18:03.140><c> so</c><00:18:03.800><c> here</c><00:18:04.010><c> so</c><00:18:04.160><c> I'm</c><00:18:04.220><c> talking</c><00:18:04.400><c> about</c>

00:18:04.570 --> 00:18:04.580 align:start position:0%
slide so so here so I'm talking about
 

00:18:04.580 --> 00:18:08.500 align:start position:0%
slide so so here so I'm talking about
the<00:18:04.910><c> unmodifiable</c><00:18:05.600><c> list</c><00:18:06.020><c> wrapper</c><00:18:07.510><c> versus</c>

00:18:08.500 --> 00:18:08.510 align:start position:0%
the unmodifiable list wrapper versus
 

00:18:08.510 --> 00:18:11.230 align:start position:0%
the unmodifiable list wrapper versus
list<00:18:09.200><c> thought</c><00:18:09.500><c> of</c><00:18:09.680><c> so</c><00:18:10.370><c> so</c><00:18:10.640><c> let's</c><00:18:10.850><c> take</c><00:18:11.060><c> this</c>

00:18:11.230 --> 00:18:11.240 align:start position:0%
list thought of so so let's take this
 

00:18:11.240 --> 00:18:14.590 align:start position:0%
list thought of so so let's take this
real<00:18:12.110><c> simple</c><00:18:12.320><c> code</c><00:18:12.620><c> example</c><00:18:13.070><c> here</c><00:18:13.280><c> we</c><00:18:13.820><c> have</c><00:18:14.060><c> we</c>

00:18:14.590 --> 00:18:14.600 align:start position:0%
real simple code example here we have we
 

00:18:14.600 --> 00:18:16.600 align:start position:0%
real simple code example here we have we
have<00:18:14.720><c> a</c><00:18:14.750><c> list</c><00:18:15.050><c> inner</c><00:18:15.380><c> which</c><00:18:15.860><c> consists</c><00:18:16.460><c> of</c>

00:18:16.600 --> 00:18:16.610 align:start position:0%
have a list inner which consists of
 

00:18:16.610 --> 00:18:19.960 align:start position:0%
have a list inner which consists of
integers<00:18:17.210><c> 1</c><00:18:17.420><c> 2</c><00:18:17.630><c> &amp;</c><00:18:17.780><c> 3</c><00:18:17.810><c> now</c><00:18:18.650><c> we</c><00:18:18.710><c> create</c><00:18:19.190><c> 1</c><00:18:19.670><c> list</c>

00:18:19.960 --> 00:18:19.970 align:start position:0%
integers 1 2 &amp; 3 now we create 1 list
 

00:18:19.970 --> 00:18:23.800 align:start position:0%
integers 1 2 &amp; 3 now we create 1 list
which<00:18:20.630><c> is</c><00:18:20.870><c> an</c><00:18:21.550><c> unmodifiable</c><00:18:22.550><c> list</c><00:18:23.000><c> wrapper</c>

00:18:23.800 --> 00:18:23.810 align:start position:0%
which is an unmodifiable list wrapper
 

00:18:23.810 --> 00:18:26.380 align:start position:0%
which is an unmodifiable list wrapper
around<00:18:24.350><c> that</c><00:18:24.710><c> list</c><00:18:25.070><c> and</c><00:18:25.850><c> then</c><00:18:26.000><c> you</c><00:18:26.060><c> create</c><00:18:26.270><c> a</c>

00:18:26.380 --> 00:18:26.390 align:start position:0%
around that list and then you create a
 

00:18:26.390 --> 00:18:30.760 align:start position:0%
around that list and then you create a
second<00:18:26.960><c> list</c><00:18:27.200><c> which</c><00:18:28.130><c> is</c><00:18:28.400><c> list</c><00:18:29.030><c> dot</c><00:18:29.240><c> of</c><00:18:29.480><c> 1</c><00:18:30.200><c> 2</c><00:18:30.530><c> 3</c>

00:18:30.760 --> 00:18:30.770 align:start position:0%
second list which is list dot of 1 2 3
 

00:18:30.770 --> 00:18:32.440 align:start position:0%
second list which is list dot of 1 2 3
now<00:18:31.370><c> what's</c><00:18:31.550><c> the</c><00:18:31.670><c> difference</c><00:18:31.970><c> between</c><00:18:32.090><c> those</c>

00:18:32.440 --> 00:18:32.450 align:start position:0%
now what's the difference between those
 

00:18:32.450 --> 00:18:34.300 align:start position:0%
now what's the difference between those
well<00:18:33.200><c> first</c><00:18:33.500><c> let's</c><00:18:33.710><c> talk</c><00:18:33.830><c> about</c><00:18:33.950><c> what's</c><00:18:34.190><c> the</c>

00:18:34.300 --> 00:18:34.310 align:start position:0%
well first let's talk about what's the
 

00:18:34.310 --> 00:18:36.760 align:start position:0%
well first let's talk about what's the
same<00:18:34.550><c> so</c><00:18:35.180><c> you</c><00:18:35.450><c> can</c><00:18:35.600><c> certainly</c><00:18:35.750><c> read</c><00:18:36.170><c> from</c><00:18:36.650><c> both</c>

00:18:36.760 --> 00:18:36.770 align:start position:0%
same so you can certainly read from both
 

00:18:36.770 --> 00:18:38.410 align:start position:0%
same so you can certainly read from both
of<00:18:36.920><c> those</c><00:18:37.010><c> you</c><00:18:37.160><c> can</c><00:18:37.280><c> do</c><00:18:37.400><c> get</c><00:18:37.610><c> you</c><00:18:37.880><c> can</c><00:18:38.030><c> do</c><00:18:38.180><c> even</c>

00:18:38.410 --> 00:18:38.420 align:start position:0%
of those you can do get you can do even
 

00:18:38.420 --> 00:18:40.810 align:start position:0%
of those you can do get you can do even
you<00:18:38.960><c> can</c><00:18:39.110><c> do</c><00:18:39.710><c> for</c><00:18:39.950><c> each</c><00:18:39.980><c> loop</c><00:18:40.310><c> over</c><00:18:40.550><c> them</c><00:18:40.670><c> and</c>

00:18:40.810 --> 00:18:40.820 align:start position:0%
you can do for each loop over them and
 

00:18:40.820 --> 00:18:43.540 align:start position:0%
you can do for each loop over them and
so<00:18:40.880><c> forth</c><00:18:41.200><c> however</c><00:18:42.200><c> if</c><00:18:42.740><c> you</c><00:18:42.920><c> attempt</c><00:18:43.280><c> to</c><00:18:43.310><c> call</c>

00:18:43.540 --> 00:18:43.550 align:start position:0%
so forth however if you attempt to call
 

00:18:43.550 --> 00:18:48.250 align:start position:0%
so forth however if you attempt to call
add<00:18:43.790><c> or</c><00:18:44.590><c> call</c><00:18:45.590><c> the</c><00:18:45.770><c> set</c><00:18:46.010><c> method</c><00:18:46.810><c> both</c><00:18:47.810><c> will</c>

00:18:48.250 --> 00:18:48.260 align:start position:0%
add or call the set method both will
 

00:18:48.260 --> 00:18:50.470 align:start position:0%
add or call the set method both will
throw<00:18:48.530><c> unsupported</c><00:18:49.220><c> operation</c><00:18:49.700><c> exception</c><00:18:50.120><c> so</c>

00:18:50.470 --> 00:18:50.480 align:start position:0%
throw unsupported operation exception so
 

00:18:50.480 --> 00:18:52.060 align:start position:0%
throw unsupported operation exception so
in<00:18:50.630><c> that</c><00:18:50.690><c> sense</c><00:18:50.960><c> they're</c><00:18:51.200><c> both</c><00:18:51.350><c> unmodifiable</c>

00:18:52.060 --> 00:18:52.070 align:start position:0%
in that sense they're both unmodifiable
 

00:18:52.070 --> 00:18:53.620 align:start position:0%
in that sense they're both unmodifiable
that's<00:18:52.520><c> why</c><00:18:52.640><c> I'm</c><00:18:52.730><c> using</c><00:18:52.850><c> the</c><00:18:53.120><c> same</c><00:18:53.330><c> word</c>

00:18:53.620 --> 00:18:53.630 align:start position:0%
that's why I'm using the same word
 

00:18:53.630 --> 00:18:56.980 align:start position:0%
that's why I'm using the same word
unmodifiable<00:18:55.240><c> to</c><00:18:56.240><c> describe</c><00:18:56.510><c> both</c><00:18:56.690><c> of</c><00:18:56.900><c> those</c>

00:18:56.980 --> 00:18:56.990 align:start position:0%
unmodifiable to describe both of those
 

00:18:56.990 --> 00:18:59.320 align:start position:0%
unmodifiable to describe both of those
but<00:18:57.650><c> there</c><00:18:57.800><c> is</c><00:18:57.920><c> a</c><00:18:57.950><c> difference</c><00:18:58.490><c> which</c><00:18:58.970><c> is</c><00:18:59.180><c> that</c>

00:18:59.320 --> 00:18:59.330 align:start position:0%
but there is a difference which is that
 

00:18:59.330 --> 00:19:04.450 align:start position:0%
but there is a difference which is that
list<00:18:59.690><c> 1</c><00:19:00.050><c> is</c><00:19:00.440><c> an</c><00:19:01.010><c> unmodifiable</c><00:19:01.940><c> view</c><00:19:02.810><c> of</c><00:19:03.460><c> the</c>

00:19:04.450 --> 00:19:04.460 align:start position:0%
list 1 is an unmodifiable view of the
 

00:19:04.460 --> 00:19:06.820 align:start position:0%
list 1 is an unmodifiable view of the
other<00:19:04.640><c> list</c><00:19:05.030><c> which</c><00:19:05.330><c> i've</c><00:19:05.510><c> called</c><00:19:05.540><c> inner</c><00:19:06.290><c> here</c>

00:19:06.820 --> 00:19:06.830 align:start position:0%
other list which i've called inner here
 

00:19:06.830 --> 00:19:09.490 align:start position:0%
other list which i've called inner here
now<00:19:07.310><c> so</c><00:19:07.640><c> so</c><00:19:07.940><c> it's</c><00:19:08.060><c> actually</c><00:19:08.210><c> a</c><00:19:08.390><c> bit</c><00:19:08.570><c> subtle</c><00:19:08.810><c> the</c>

00:19:09.490 --> 00:19:09.500 align:start position:0%
now so so it's actually a bit subtle the
 

00:19:09.500 --> 00:19:12.490 align:start position:0%
now so so it's actually a bit subtle the
list<00:19:09.740><c> named</c><00:19:10.070><c> inner</c><00:19:10.400><c> actually</c><00:19:11.210><c> is</c><00:19:11.500><c> modifiable</c>

00:19:12.490 --> 00:19:12.500 align:start position:0%
list named inner actually is modifiable
 

00:19:12.500 --> 00:19:17.950 align:start position:0%
list named inner actually is modifiable
you<00:19:12.950><c> can</c><00:19:13.100><c> say</c><00:19:13.340><c> inner</c><00:19:13.910><c> dot</c><00:19:14.420><c> set</c><00:19:16.480><c> inner</c><00:19:17.480><c> dot</c><00:19:17.720><c> set</c>

00:19:17.950 --> 00:19:17.960 align:start position:0%
you can say inner dot set inner dot set
 

00:19:17.960 --> 00:19:21.220 align:start position:0%
you can say inner dot set inner dot set
0<00:19:18.580><c> 17</c><00:19:19.580><c> it'll</c><00:19:20.090><c> actually</c><00:19:20.270><c> it'll</c><00:19:21.110><c> actually</c>

00:19:21.220 --> 00:19:21.230 align:start position:0%
0 17 it'll actually it'll actually
 

00:19:21.230 --> 00:19:23.200 align:start position:0%
0 17 it'll actually it'll actually
change<00:19:21.440><c> that</c><00:19:21.890><c> value</c><00:19:22.070><c> there</c><00:19:22.430><c> so</c><00:19:22.580><c> it's</c><00:19:22.970><c> it's</c>

00:19:23.200 --> 00:19:23.210 align:start position:0%
change that value there so it's it's
 

00:19:23.210 --> 00:19:25.210 align:start position:0%
change that value there so it's it's
actually<00:19:23.330><c> a</c><00:19:23.540><c> common</c><00:19:24.320><c> point</c><00:19:24.440><c> of</c><00:19:24.620><c> confusion</c><00:19:25.100><c> is</c>

00:19:25.210 --> 00:19:25.220 align:start position:0%
actually a common point of confusion is
 

00:19:25.220 --> 00:19:27.340 align:start position:0%
actually a common point of confusion is
that<00:19:25.400><c> people</c><00:19:26.120><c> often</c><00:19:26.390><c> think</c><00:19:26.570><c> that</c><00:19:26.810><c> the</c><00:19:26.930><c> the</c>

00:19:27.340 --> 00:19:27.350 align:start position:0%
that people often think that the the
 

00:19:27.350 --> 00:19:29.830 align:start position:0%
that people often think that the the
list<00:19:27.560><c> return</c><00:19:27.890><c> from</c><00:19:28.400><c> arrays</c><00:19:28.820><c> dot</c><00:19:29.030><c> as</c><00:19:29.270><c> list</c><00:19:29.600><c> is</c>

00:19:29.830 --> 00:19:29.840 align:start position:0%
list return from arrays dot as list is
 

00:19:29.840 --> 00:19:32.920 align:start position:0%
list return from arrays dot as list is
is<00:19:30.740><c> unmodifiable</c><00:19:31.670><c> or</c><00:19:32.060><c> even</c><00:19:32.300><c> i've</c><00:19:32.540><c> even</c><00:19:32.810><c> heard</c>

00:19:32.920 --> 00:19:32.930 align:start position:0%
is unmodifiable or even i've even heard
 

00:19:32.930 --> 00:19:34.660 align:start position:0%
is unmodifiable or even i've even heard
it<00:19:33.050><c> called</c><00:19:33.230><c> immutable</c><00:19:33.800><c> that's</c><00:19:34.190><c> not</c><00:19:34.370><c> correct</c>

00:19:34.660 --> 00:19:34.670 align:start position:0%
it called immutable that's not correct
 

00:19:34.670 --> 00:19:36.630 align:start position:0%
it called immutable that's not correct
you<00:19:34.880><c> can</c><00:19:35.030><c> actually</c><00:19:35.240><c> change</c>

00:19:36.630 --> 00:19:36.640 align:start position:0%
you can actually change
 

00:19:36.640 --> 00:19:40.299 align:start position:0%
you can actually change
the<00:19:38.200><c> elements</c><00:19:39.200><c> in</c><00:19:39.529><c> that</c><00:19:39.710><c> set</c><00:19:39.770><c> although</c><00:19:40.220><c> you</c>

00:19:40.299 --> 00:19:40.309 align:start position:0%
the elements in that set although you
 

00:19:40.309 --> 00:19:42.580 align:start position:0%
the elements in that set although you
cannot<00:19:40.549><c> change</c><00:19:40.850><c> its</c><00:19:41.029><c> size</c><00:19:41.299><c> which</c><00:19:41.840><c> which</c><00:19:42.320><c> gives</c>

00:19:42.580 --> 00:19:42.590 align:start position:0%
cannot change its size which which gives
 

00:19:42.590 --> 00:19:45.850 align:start position:0%
cannot change its size which which gives
people<00:19:44.080><c> which</c><00:19:45.080><c> I</c><00:19:45.200><c> think</c><00:19:45.380><c> leads</c><00:19:45.500><c> to</c><00:19:45.650><c> that</c>

00:19:45.850 --> 00:19:45.860 align:start position:0%
people which I think leads to that
 

00:19:45.860 --> 00:19:48.549 align:start position:0%
people which I think leads to that
confusion<00:19:46.159><c> but</c><00:19:46.909><c> anyway</c><00:19:47.240><c> so</c><00:19:47.809><c> so</c><00:19:48.140><c> back</c><00:19:48.320><c> to</c><00:19:48.350><c> the</c>

00:19:48.549 --> 00:19:48.559 align:start position:0%
confusion but anyway so so back to the
 

00:19:48.559 --> 00:19:50.560 align:start position:0%
confusion but anyway so so back to the
wrapper<00:19:48.919><c> though</c><00:19:49.070><c> if</c><00:19:49.250><c> you</c><00:19:49.370><c> have</c><00:19:49.549><c> lists</c><00:19:50.059><c> one</c><00:19:50.330><c> as</c>

00:19:50.560 --> 00:19:50.570 align:start position:0%
wrapper though if you have lists one as
 

00:19:50.570 --> 00:19:53.049 align:start position:0%
wrapper though if you have lists one as
a<00:19:50.600><c> wrapper</c><00:19:50.960><c> around</c><00:19:51.380><c> the</c><00:19:51.740><c> inner</c><00:19:52.010><c> list</c><00:19:52.370><c> so</c><00:19:52.940><c> if</c>

00:19:53.049 --> 00:19:53.059 align:start position:0%
a wrapper around the inner list so if
 

00:19:53.059 --> 00:19:55.600 align:start position:0%
a wrapper around the inner list so if
you<00:19:53.179><c> change</c><00:19:53.690><c> the</c><00:19:54.559><c> contents</c><00:19:55.100><c> of</c><00:19:55.190><c> the</c><00:19:55.400><c> inner</c>

00:19:55.600 --> 00:19:55.610 align:start position:0%
you change the contents of the inner
 

00:19:55.610 --> 00:19:59.350 align:start position:0%
you change the contents of the inner
list<00:19:55.970><c> then</c><00:19:56.690><c> list</c><00:19:57.559><c> one</c><00:19:57.890><c> can</c><00:19:58.549><c> see</c><00:19:58.909><c> those</c><00:19:59.120><c> changes</c>

00:19:59.350 --> 00:19:59.360 align:start position:0%
list then list one can see those changes
 

00:19:59.360 --> 00:20:01.659 align:start position:0%
list then list one can see those changes
so<00:20:00.110><c> if</c><00:20:00.230><c> you</c><00:20:00.350><c> have</c><00:20:00.529><c> a</c><00:20:00.559><c> reference</c><00:20:00.890><c> to</c><00:20:01.279><c> list</c><00:20:01.460><c> one</c>

00:20:01.659 --> 00:20:01.669 align:start position:0%
so if you have a reference to list one
 

00:20:01.669 --> 00:20:03.640 align:start position:0%
so if you have a reference to list one
you<00:20:02.179><c> can</c><00:20:02.330><c> iterate</c><00:20:02.510><c> through</c><00:20:02.840><c> it</c><00:20:03.020><c> and</c><00:20:03.169><c> look</c><00:20:03.529><c> at</c>

00:20:03.640 --> 00:20:03.650 align:start position:0%
you can iterate through it and look at
 

00:20:03.650 --> 00:20:05.560 align:start position:0%
you can iterate through it and look at
those<00:20:03.799><c> and</c><00:20:04.010><c> then</c><00:20:04.100><c> some</c><00:20:04.820><c> some</c><00:20:05.120><c> other</c><00:20:05.240><c> piece</c><00:20:05.450><c> of</c>

00:20:05.560 --> 00:20:05.570 align:start position:0%
those and then some some other piece of
 

00:20:05.570 --> 00:20:07.570 align:start position:0%
those and then some some other piece of
your<00:20:05.720><c> code</c><00:20:05.900><c> changes</c><00:20:06.409><c> the</c><00:20:06.500><c> inner</c><00:20:06.679><c> list</c><00:20:06.950><c> and</c><00:20:07.250><c> if</c>

00:20:07.570 --> 00:20:07.580 align:start position:0%
your code changes the inner list and if
 

00:20:07.580 --> 00:20:10.510 align:start position:0%
your code changes the inner list and if
you<00:20:07.700><c> iterate</c><00:20:08.090><c> over</c><00:20:08.120><c> list</c><00:20:08.570><c> one</c><00:20:08.779><c> again</c><00:20:09.520><c> its</c>

00:20:10.510 --> 00:20:10.520 align:start position:0%
you iterate over list one again its
 

00:20:10.520 --> 00:20:13.000 align:start position:0%
you iterate over list one again its
contents<00:20:10.970><c> are</c><00:20:11.029><c> different</c><00:20:11.390><c> now</c><00:20:11.960><c> you</c><00:20:12.559><c> can</c><00:20:12.770><c> call</c>

00:20:13.000 --> 00:20:13.010 align:start position:0%
contents are different now you can call
 

00:20:13.010 --> 00:20:14.799 align:start position:0%
contents are different now you can call
methods<00:20:13.220><c> on</c><00:20:13.520><c> list</c><00:20:13.789><c> one</c><00:20:14.000><c> and</c><00:20:14.299><c> you</c><00:20:14.450><c> cannot</c>

00:20:14.799 --> 00:20:14.809 align:start position:0%
methods on list one and you cannot
 

00:20:14.809 --> 00:20:16.779 align:start position:0%
methods on list one and you cannot
modify<00:20:15.200><c> it</c><00:20:15.350><c> so</c><00:20:15.950><c> that's</c><00:20:16.130><c> why</c><00:20:16.250><c> we</c><00:20:16.370><c> call</c><00:20:16.520><c> this</c><00:20:16.640><c> an</c>

00:20:16.779 --> 00:20:16.789 align:start position:0%
modify it so that's why we call this an
 

00:20:16.789 --> 00:20:19.240 align:start position:0%
modify it so that's why we call this an
unmodifiable<00:20:17.450><c> view</c><00:20:17.929><c> so</c><00:20:18.350><c> it</c><00:20:18.470><c> has</c><00:20:18.620><c> a</c><00:20:18.649><c> view</c><00:20:19.220><c> of</c>

00:20:19.240 --> 00:20:19.250 align:start position:0%
unmodifiable view so it has a view of
 

00:20:19.250 --> 00:20:20.860 align:start position:0%
unmodifiable view so it has a view of
some<00:20:19.549><c> other</c><00:20:19.700><c> collection</c><00:20:20.210><c> which</c><00:20:20.450><c> might</c><00:20:20.690><c> be</c>

00:20:20.860 --> 00:20:20.870 align:start position:0%
some other collection which might be
 

00:20:20.870 --> 00:20:23.260 align:start position:0%
some other collection which might be
modifiable<00:20:21.350><c> but</c><00:20:22.130><c> you</c><00:20:22.279><c> can't</c><00:20:22.640><c> modify</c><00:20:22.970><c> things</c>

00:20:23.260 --> 00:20:23.270 align:start position:0%
modifiable but you can't modify things
 

00:20:23.270 --> 00:20:26.169 align:start position:0%
modifiable but you can't modify things
through<00:20:24.049><c> this</c><00:20:24.320><c> view</c><00:20:24.890><c> and</c><00:20:25.190><c> so</c><00:20:25.640><c> so</c><00:20:26.059><c> the</c>

00:20:26.169 --> 00:20:26.179 align:start position:0%
through this view and so so the
 

00:20:26.179 --> 00:20:29.019 align:start position:0%
through this view and so so the
unmodifiable<00:20:26.960><c> views</c><00:20:27.500><c> have</c><00:20:27.799><c> have</c><00:20:28.220><c> existed</c><00:20:28.730><c> in</c>

00:20:29.019 --> 00:20:29.029 align:start position:0%
unmodifiable views have have existed in
 

00:20:29.029 --> 00:20:32.049 align:start position:0%
unmodifiable views have have existed in
in<00:20:29.390><c> in</c><00:20:30.260><c> the</c><00:20:30.380><c> JDK</c><00:20:30.770><c> for</c><00:20:31.100><c> quite</c><00:20:31.370><c> a</c><00:20:31.399><c> long</c><00:20:31.549><c> time</c><00:20:31.610><c> I</c>

00:20:32.049 --> 00:20:32.059 align:start position:0%
in in the JDK for quite a long time I
 

00:20:32.059 --> 00:20:33.789 align:start position:0%
in in the JDK for quite a long time I
think<00:20:32.240><c> going</c><00:20:32.600><c> all</c><00:20:32.779><c> the</c><00:20:32.870><c> way</c><00:20:32.899><c> back</c><00:20:32.990><c> perhaps</c><00:20:33.529><c> to</c>

00:20:33.789 --> 00:20:33.799 align:start position:0%
think going all the way back perhaps to
 

00:20:33.799 --> 00:20:37.779 align:start position:0%
think going all the way back perhaps to
one<00:20:34.250><c> point</c><00:20:34.549><c> to</c><00:20:35.080><c> now</c><00:20:36.080><c> what's</c><00:20:36.289><c> new</c><00:20:36.529><c> is</c><00:20:36.890><c> that</c><00:20:36.950><c> in</c>

00:20:37.779 --> 00:20:37.789 align:start position:0%
one point to now what's new is that in
 

00:20:37.789 --> 00:20:40.240 align:start position:0%
one point to now what's new is that in
JDK<00:20:38.270><c> 9</c><00:20:38.480><c> we</c><00:20:38.750><c> have</c><00:20:38.990><c> these</c><00:20:39.200><c> new</c><00:20:39.529><c> collections</c><00:20:40.130><c> that</c>

00:20:40.240 --> 00:20:40.250 align:start position:0%
JDK 9 we have these new collections that
 

00:20:40.250 --> 00:20:42.610 align:start position:0%
JDK 9 we have these new collections that
are<00:20:40.460><c> themselves</c><00:20:41.020><c> unmodifiable</c><00:20:42.020><c> they're</c><00:20:42.470><c> not</c>

00:20:42.610 --> 00:20:42.620 align:start position:0%
are themselves unmodifiable they're not
 

00:20:42.620 --> 00:20:45.000 align:start position:0%
are themselves unmodifiable they're not
a<00:20:42.649><c> view</c><00:20:42.950><c> of</c><00:20:43.039><c> something</c><00:20:43.250><c> else</c><00:20:43.549><c> so</c><00:20:44.120><c> list</c><00:20:44.539><c> 2</c>

00:20:45.000 --> 00:20:45.010 align:start position:0%
a view of something else so list 2
 

00:20:45.010 --> 00:20:47.830 align:start position:0%
a view of something else so list 2
contains<00:20:46.010><c> the</c><00:20:46.159><c> elements</c><00:20:46.610><c> itself</c><00:20:46.880><c> and</c><00:20:47.299><c> it's</c>

00:20:47.830 --> 00:20:47.840 align:start position:0%
contains the elements itself and it's
 

00:20:47.840 --> 00:20:49.870 align:start position:0%
contains the elements itself and it's
unmodifiable<00:20:48.440><c> so</c><00:20:49.399><c> there's</c><00:20:49.549><c> no</c><00:20:49.669><c> other</c>

00:20:49.870 --> 00:20:49.880 align:start position:0%
unmodifiable so there's no other
 

00:20:49.880 --> 00:20:52.029 align:start position:0%
unmodifiable so there's no other
collection<00:20:50.480><c> floating</c><00:20:51.380><c> around</c><00:20:51.470><c> somewhere</c>

00:20:52.029 --> 00:20:52.039 align:start position:0%
collection floating around somewhere
 

00:20:52.039 --> 00:20:54.220 align:start position:0%
collection floating around somewhere
that<00:20:52.370><c> could</c><00:20:52.730><c> be</c><00:20:52.820><c> modified</c><00:20:53.000><c> that</c><00:20:53.870><c> this</c><00:20:54.080><c> is</c><00:20:54.200><c> a</c>

00:20:54.220 --> 00:20:54.230 align:start position:0%
that could be modified that this is a
 

00:20:54.230 --> 00:20:56.710 align:start position:0%
that could be modified that this is a
view<00:20:54.470><c> of</c><00:20:54.529><c> Solus</c><00:20:55.130><c> dot</c><00:20:55.370><c> 2</c><00:20:55.610><c> is</c><00:20:55.880><c> the</c><00:20:56.090><c> list</c><00:20:56.299><c> itself</c>

00:20:56.710 --> 00:20:56.720 align:start position:0%
view of Solus dot 2 is the list itself
 

00:20:56.720 --> 00:21:02.590 align:start position:0%
view of Solus dot 2 is the list itself
and<00:20:57.049><c> it</c><00:20:57.559><c> is</c><00:20:57.860><c> unmodifiable</c><00:20:59.350><c> so</c><00:21:00.580><c> you</c><00:21:01.580><c> if</c><00:21:02.419><c> you</c>

00:21:02.590 --> 00:21:02.600 align:start position:0%
and it is unmodifiable so you if you
 

00:21:02.600 --> 00:21:04.210 align:start position:0%
and it is unmodifiable so you if you
look<00:21:02.809><c> at</c><00:21:02.929><c> other</c><00:21:03.020><c> materials</c><00:21:03.529><c> on</c><00:21:03.620><c> the</c><00:21:03.679><c> web</c><00:21:03.830><c> that</c>

00:21:04.210 --> 00:21:04.220 align:start position:0%
look at other materials on the web that
 

00:21:04.220 --> 00:21:06.399 align:start position:0%
look at other materials on the web that
that<00:21:04.490><c> I've</c><00:21:04.640><c> produced</c><00:21:05.000><c> previous</c><00:21:05.929><c> talks</c><00:21:06.140><c> I've</c>

00:21:06.399 --> 00:21:06.409 align:start position:0%
that I've produced previous talks I've
 

00:21:06.409 --> 00:21:10.090 align:start position:0%
that I've produced previous talks I've
said<00:21:06.799><c> I've</c><00:21:07.429><c> used</c><00:21:07.669><c> the</c><00:21:07.760><c> term</c><00:21:07.909><c> immutable</c><00:21:09.100><c> to</c>

00:21:10.090 --> 00:21:10.100 align:start position:0%
said I've used the term immutable to
 

00:21:10.100 --> 00:21:12.250 align:start position:0%
said I've used the term immutable to
describe<00:21:10.429><c> these</c><00:21:10.580><c> collections</c><00:21:11.059><c> and</c><00:21:11.299><c> I've</c>

00:21:12.250 --> 00:21:12.260 align:start position:0%
describe these collections and I've
 

00:21:12.260 --> 00:21:14.289 align:start position:0%
describe these collections and I've
moved<00:21:12.799><c> away</c><00:21:13.010><c> from</c><00:21:13.130><c> that</c><00:21:13.309><c> I</c><00:21:13.460><c> think</c><00:21:13.640><c> I</c><00:21:14.149><c> deserve</c>

00:21:14.289 --> 00:21:14.299 align:start position:0%
moved away from that I think I deserve
 

00:21:14.299 --> 00:21:16.000 align:start position:0%
moved away from that I think I deserve
to<00:21:14.870><c> give</c><00:21:15.409><c> you</c><00:21:15.470><c> a</c><00:21:15.559><c> little</c><00:21:15.679><c> bit</c><00:21:15.830><c> of</c><00:21:15.919><c> an</c>

00:21:16.000 --> 00:21:16.010 align:start position:0%
to give you a little bit of an
 

00:21:16.010 --> 00:21:18.310 align:start position:0%
to give you a little bit of an
explanation<00:21:16.580><c> for</c><00:21:16.970><c> that</c><00:21:17.029><c> you</c><00:21:17.539><c> there's</c><00:21:18.140><c> a</c><00:21:18.200><c> lot</c>

00:21:18.310 --> 00:21:18.320 align:start position:0%
explanation for that you there's a lot
 

00:21:18.320 --> 00:21:19.510 align:start position:0%
explanation for that you there's a lot
of<00:21:18.409><c> material</c><00:21:18.799><c> out</c><00:21:18.890><c> there</c><00:21:18.919><c> on</c><00:21:19.159><c> the</c><00:21:19.250><c> web</c><00:21:19.370><c> that</c>

00:21:19.510 --> 00:21:19.520 align:start position:0%
of material out there on the web that
 

00:21:19.520 --> 00:21:21.159 align:start position:0%
of material out there on the web that
other<00:21:19.700><c> people</c><00:21:19.970><c> have</c><00:21:20.059><c> written</c><00:21:20.179><c> we</c><00:21:20.419><c> just</c><00:21:20.630><c> copied</c>

00:21:21.159 --> 00:21:21.169 align:start position:0%
other people have written we just copied
 

00:21:21.169 --> 00:21:22.899 align:start position:0%
other people have written we just copied
me<00:21:21.289><c> that</c><00:21:21.620><c> have</c><00:21:21.740><c> called</c><00:21:22.039><c> these</c><00:21:22.220><c> immutable</c>

00:21:22.899 --> 00:21:22.909 align:start position:0%
me that have called these immutable
 

00:21:22.909 --> 00:21:26.760 align:start position:0%
me that have called these immutable
collections<00:21:23.510><c> and</c><00:21:24.490><c> list2</c><00:21:25.490><c> is</c><00:21:25.970><c> in</c><00:21:26.270><c> fact</c>

00:21:26.760 --> 00:21:26.770 align:start position:0%
collections and list2 is in fact
 

00:21:26.770 --> 00:21:30.100 align:start position:0%
collections and list2 is in fact
immutable<00:21:27.770><c> but</c><00:21:28.730><c> only</c><00:21:28.940><c> because</c><00:21:29.330><c> its</c><00:21:29.539><c> contents</c>

00:21:30.100 --> 00:21:30.110 align:start position:0%
immutable but only because its contents
 

00:21:30.110 --> 00:21:32.970 align:start position:0%
immutable but only because its contents
are<00:21:30.289><c> immutable</c><00:21:30.590><c> so</c><00:21:31.309><c> these</c><00:21:31.730><c> get</c><00:21:31.909><c> boxed</c><00:21:32.330><c> into</c>

00:21:32.970 --> 00:21:32.980 align:start position:0%
are immutable so these get boxed into
 

00:21:32.980 --> 00:21:36.399 align:start position:0%
are immutable so these get boxed into
java.lang<00:21:33.980><c> integer</c><00:21:34.730><c> classes</c><00:21:35.510><c> which</c><00:21:36.140><c> are</c>

00:21:36.399 --> 00:21:36.409 align:start position:0%
java.lang integer classes which are
 

00:21:36.409 --> 00:21:39.519 align:start position:0%
java.lang integer classes which are
immutable<00:21:37.340><c> so</c><00:21:37.820><c> if</c><00:21:37.940><c> you</c><00:21:38.059><c> have</c><00:21:38.529><c> immutable</c>

00:21:39.519 --> 00:21:39.529 align:start position:0%
immutable so if you have immutable
 

00:21:39.529 --> 00:21:41.590 align:start position:0%
immutable so if you have immutable
objects<00:21:40.010><c> inside</c><00:21:40.429><c> an</c><00:21:40.640><c> unmodifiable</c>

00:21:41.590 --> 00:21:41.600 align:start position:0%
objects inside an unmodifiable
 

00:21:41.600 --> 00:21:44.110 align:start position:0%
objects inside an unmodifiable
collection<00:21:42.260><c> the</c><00:21:42.649><c> whole</c><00:21:42.830><c> thing</c><00:21:43.100><c> is</c><00:21:43.370><c> immutable</c>

00:21:44.110 --> 00:21:44.120 align:start position:0%
collection the whole thing is immutable
 

00:21:44.120 --> 00:21:46.659 align:start position:0%
collection the whole thing is immutable
but<00:21:44.960><c> imagine</c><00:21:45.350><c> if</c><00:21:45.440><c> you</c><00:21:45.530><c> took</c><00:21:45.559><c> some</c><00:21:46.010><c> string</c>

00:21:46.659 --> 00:21:46.669 align:start position:0%
but imagine if you took some string
 

00:21:46.669 --> 00:21:49.210 align:start position:0%
but imagine if you took some string
buffer<00:21:46.820><c> instances</c><00:21:47.510><c> and</c><00:21:47.720><c> said</c><00:21:47.840><c> list</c><00:21:48.200><c> out</c><00:21:48.440><c> of</c>

00:21:49.210 --> 00:21:49.220 align:start position:0%
buffer instances and said list out of
 

00:21:49.220 --> 00:21:51.159 align:start position:0%
buffer instances and said list out of
ring<00:21:49.340><c> buffer</c><00:21:49.520><c> one</c><00:21:49.850><c> string</c><00:21:50.270><c> buffer</c><00:21:50.450><c> two</c><00:21:50.750><c> string</c>

00:21:51.159 --> 00:21:51.169 align:start position:0%
ring buffer one string buffer two string
 

00:21:51.169 --> 00:21:53.710 align:start position:0%
ring buffer one string buffer two string
buffer<00:21:51.350><c> three</c><00:21:51.760><c> you</c><00:21:52.760><c> can</c><00:21:52.909><c> modify</c><00:21:53.210><c> those</c><00:21:53.480><c> string</c>

00:21:53.710 --> 00:21:53.720 align:start position:0%
buffer three you can modify those string
 

00:21:53.720 --> 00:21:57.279 align:start position:0%
buffer three you can modify those string
buffers<00:21:54.049><c> so</c><00:21:54.590><c> in</c><00:21:54.919><c> in</c><00:21:55.159><c> no</c><00:21:55.340><c> sense</c><00:21:55.640><c> is</c><00:21:56.020><c> list</c><00:21:57.020><c> not</c><00:21:57.169><c> of</c>

00:21:57.279 --> 00:21:57.289 align:start position:0%
buffers so in in no sense is list not of
 

00:21:57.289 --> 00:21:58.960 align:start position:0%
buffers so in in no sense is list not of
returning<00:21:57.710><c> an</c><00:21:58.070><c> immutable</c><00:21:58.370><c> collection</c>

00:21:58.960 --> 00:21:58.970 align:start position:0%
returning an immutable collection
 

00:21:58.970 --> 00:22:01.120 align:start position:0%
returning an immutable collection
because<00:21:59.299><c> everything</c><00:22:00.049><c> in</c><00:22:00.169><c> it</c><00:22:00.320><c> is</c><00:22:00.559><c> modifiable</c>

00:22:01.120 --> 00:22:01.130 align:start position:0%
because everything in it is modifiable
 

00:22:01.130 --> 00:22:03.580 align:start position:0%
because everything in it is modifiable
so<00:22:01.940><c> really</c><00:22:02.360><c> so</c><00:22:02.659><c> that's</c><00:22:02.809><c> the</c><00:22:02.960><c> explanation</c><00:22:03.440><c> for</c>

00:22:03.580 --> 00:22:03.590 align:start position:0%
so really so that's the explanation for
 

00:22:03.590 --> 00:22:06.010 align:start position:0%
so really so that's the explanation for
why<00:22:03.650><c> I've</c><00:22:04.000><c> started</c><00:22:05.000><c> to</c><00:22:05.270><c> steer</c><00:22:05.900><c> the</c>

00:22:06.010 --> 00:22:06.020 align:start position:0%
why I've started to steer the
 

00:22:06.020 --> 00:22:08.560 align:start position:0%
why I've started to steer the
terminology<00:22:06.650><c> over</c><00:22:06.980><c> to</c><00:22:07.309><c> unmodifiable</c><00:22:08.120><c> so</c><00:22:08.450><c> we</c>

00:22:08.560 --> 00:22:08.570 align:start position:0%
terminology over to unmodifiable so we
 

00:22:08.570 --> 00:22:10.330 align:start position:0%
terminology over to unmodifiable so we
say<00:22:08.750><c> that</c><00:22:08.929><c> the</c><00:22:09.049><c> collection</c><00:22:09.440><c> is</c><00:22:09.679><c> unmodifiable</c>

00:22:10.330 --> 00:22:10.340 align:start position:0%
say that the collection is unmodifiable
 

00:22:10.340 --> 00:22:12.789 align:start position:0%
say that the collection is unmodifiable
and<00:22:10.820><c> that's</c><00:22:11.120><c> a</c><00:22:11.240><c> completely</c><00:22:11.799><c> separate</c>

00:22:12.789 --> 00:22:12.799 align:start position:0%
and that's a completely separate
 

00:22:12.799 --> 00:22:14.919 align:start position:0%
and that's a completely separate
statement<00:22:13.309><c> from</c><00:22:13.669><c> any</c><00:22:14.240><c> statement</c><00:22:14.720><c> you</c><00:22:14.780><c> might</c>

00:22:14.919 --> 00:22:14.929 align:start position:0%
statement from any statement you might
 

00:22:14.929 --> 00:22:16.659 align:start position:0%
statement from any statement you might
make<00:22:15.140><c> about</c><00:22:15.409><c> the</c><00:22:15.710><c> contents</c><00:22:16.400><c> of</c><00:22:16.580><c> the</c>

00:22:16.659 --> 00:22:16.669 align:start position:0%
make about the contents of the
 

00:22:16.669 --> 00:22:22.480 align:start position:0%
make about the contents of the
collection<00:22:18.909><c> okay</c><00:22:19.909><c> so</c><00:22:19.970><c> moving</c><00:22:20.299><c> on</c><00:22:20.539><c> so</c><00:22:20.929><c> one</c><00:22:21.650><c> one</c>

00:22:22.480 --> 00:22:22.490 align:start position:0%
collection okay so moving on so one one
 

00:22:22.490 --> 00:22:26.560 align:start position:0%
collection okay so moving on so one one
design<00:22:23.150><c> decision</c><00:22:23.510><c> we</c><00:22:23.630><c> made</c><00:22:23.860><c> was</c><00:22:25.059><c> to</c><00:22:26.059><c> disallow</c>

00:22:26.560 --> 00:22:26.570 align:start position:0%
design decision we made was to disallow
 

00:22:26.570 --> 00:22:27.310 align:start position:0%
design decision we made was to disallow
nulls

00:22:27.310 --> 00:22:27.320 align:start position:0%
nulls
 

00:22:27.320 --> 00:22:30.310 align:start position:0%
nulls
in<00:22:27.470><c> the</c><00:22:27.860><c> new</c><00:22:28.039><c> collection</c><00:22:28.400><c> instances</c><00:22:29.200><c> so</c><00:22:30.200><c> if</c>

00:22:30.310 --> 00:22:30.320 align:start position:0%
in the new collection instances so if
 

00:22:30.320 --> 00:22:31.899 align:start position:0%
in the new collection instances so if
you<00:22:30.440><c> attempt</c><00:22:30.740><c> to</c><00:22:30.799><c> say</c><00:22:31.039><c> list</c><00:22:31.280><c> out</c><00:22:31.429><c> of</c><00:22:31.610><c> one</c>

00:22:31.899 --> 00:22:31.909 align:start position:0%
you attempt to say list out of one
 

00:22:31.909 --> 00:22:34.360 align:start position:0%
you attempt to say list out of one
common<00:22:32.570><c> all</c><00:22:32.870><c> comma</c><00:22:33.260><c> three</c><00:22:33.679><c> or</c><00:22:33.950><c> something</c><00:22:34.159><c> like</c>

00:22:34.360 --> 00:22:34.370 align:start position:0%
common all comma three or something like
 

00:22:34.370 --> 00:22:36.299 align:start position:0%
common all comma three or something like
that<00:22:34.580><c> it'll</c><00:22:35.090><c> throw</c><00:22:35.299><c> a</c><00:22:35.390><c> nullpointerexception</c>

00:22:36.299 --> 00:22:36.309 align:start position:0%
that it'll throw a nullpointerexception
 

00:22:36.309 --> 00:22:43.270 align:start position:0%
that it'll throw a nullpointerexception
so<00:22:37.309><c> I</c><00:22:39.789><c> in</c><00:22:40.870><c> retrospect</c><00:22:41.870><c> if</c><00:22:42.230><c> you</c><00:22:42.559><c> if</c><00:22:42.770><c> you</c><00:22:42.890><c> look</c><00:22:43.100><c> at</c>

00:22:43.270 --> 00:22:43.280 align:start position:0%
so I in retrospect if you if you look at
 

00:22:43.280 --> 00:22:44.490 align:start position:0%
so I in retrospect if you if you look at
the<00:22:43.429><c> collections</c><00:22:43.880><c> that</c><00:22:43.970><c> were</c><00:22:44.059><c> introduced</c>

00:22:44.490 --> 00:22:44.500 align:start position:0%
the collections that were introduced
 

00:22:44.500 --> 00:22:48.399 align:start position:0%
the collections that were introduced
originally<00:22:45.500><c> in</c><00:22:46.039><c> JDK</c><00:22:46.730><c> 1.2</c><00:22:47.390><c> they</c><00:22:47.990><c> did</c><00:22:48.289><c> allow</c>

00:22:48.399 --> 00:22:48.409 align:start position:0%
originally in JDK 1.2 they did allow
 

00:22:48.409 --> 00:22:50.860 align:start position:0%
originally in JDK 1.2 they did allow
nulls<00:22:48.860><c> so</c><00:22:49.280><c> you</c><00:22:49.340><c> can</c><00:22:49.580><c> put</c><00:22:49.789><c> nulls</c><00:22:50.059><c> in</c><00:22:50.360><c> ArrayList</c>

00:22:50.860 --> 00:22:50.870 align:start position:0%
nulls so you can put nulls in ArrayList
 

00:22:50.870 --> 00:22:53.560 align:start position:0%
nulls so you can put nulls in ArrayList
you<00:22:51.200><c> can</c><00:22:51.350><c> put</c><00:22:51.559><c> nulls</c><00:22:51.830><c> in</c><00:22:52.039><c> hashmap</c><00:22:52.760><c> but</c><00:22:53.480><c> it</c>

00:22:53.560 --> 00:22:53.570 align:start position:0%
you can put nulls in hashmap but it
 

00:22:53.570 --> 00:22:54.970 align:start position:0%
you can put nulls in hashmap but it
turns<00:22:53.720><c> out</c><00:22:53.840><c> that</c><00:22:53.900><c> no</c><00:22:54.380><c> other</c><00:22:54.530><c> collection</c>

00:22:54.970 --> 00:22:54.980 align:start position:0%
turns out that no other collection
 

00:22:54.980 --> 00:22:57.190 align:start position:0%
turns out that no other collection
supports<00:22:55.370><c> that</c><00:22:55.570><c> well</c><00:22:56.570><c> very</c><00:22:56.809><c> few</c><00:22:57.080><c> other</c>

00:22:57.190 --> 00:22:57.200 align:start position:0%
supports that well very few other
 

00:22:57.200 --> 00:23:00.190 align:start position:0%
supports that well very few other
collections<00:22:57.710><c> do</c><00:22:57.919><c> in</c><00:22:58.190><c> fact</c><00:22:58.580><c> most</c><00:22:59.000><c> of</c><00:22:59.299><c> the</c>

00:23:00.190 --> 00:23:00.200 align:start position:0%
collections do in fact most of the
 

00:23:00.200 --> 00:23:01.659 align:start position:0%
collections do in fact most of the
collections<00:23:00.620><c> that</c><00:23:00.679><c> were</c><00:23:00.860><c> introduced</c><00:23:01.340><c> after</c>

00:23:01.659 --> 00:23:01.669 align:start position:0%
collections that were introduced after
 

00:23:01.669 --> 00:23:05.860 align:start position:0%
collections that were introduced after
one<00:23:02.360><c> point</c><00:23:02.659><c> two</c><00:23:02.870><c> do</c><00:23:03.620><c> not</c><00:23:03.650><c> support</c><00:23:04.280><c> nulls</c><00:23:04.870><c> none</c>

00:23:05.860 --> 00:23:05.870 align:start position:0%
one point two do not support nulls none
 

00:23:05.870 --> 00:23:07.659 align:start position:0%
one point two do not support nulls none
of<00:23:06.200><c> the</c><00:23:06.350><c> collections</c><00:23:06.799><c> in</c><00:23:07.039><c> java.util</c>

00:23:07.659 --> 00:23:07.669 align:start position:0%
of the collections in java.util
 

00:23:07.669 --> 00:23:10.360 align:start position:0%
of the collections in java.util
concurrent<00:23:08.270><c> support</c><00:23:08.809><c> nulls</c><00:23:09.080><c> and</c><00:23:09.440><c> there's</c>

00:23:10.360 --> 00:23:10.370 align:start position:0%
concurrent support nulls and there's
 

00:23:10.370 --> 00:23:11.770 align:start position:0%
concurrent support nulls and there's
there's<00:23:10.820><c> a</c><00:23:10.880><c> reason</c><00:23:11.000><c> for</c><00:23:11.150><c> that</c><00:23:11.270><c> well</c><00:23:11.450><c> one</c><00:23:11.600><c> is</c>

00:23:11.770 --> 00:23:11.780 align:start position:0%
there's a reason for that well one is
 

00:23:11.780 --> 00:23:14.260 align:start position:0%
there's a reason for that well one is
null<00:23:12.020><c> as</c><00:23:12.200><c> bad</c><00:23:12.440><c> we've</c><00:23:13.059><c> probably</c><00:23:14.059><c> I</c><00:23:14.150><c> should</c>

00:23:14.260 --> 00:23:14.270 align:start position:0%
null as bad we've probably I should
 

00:23:14.270 --> 00:23:15.640 align:start position:0%
null as bad we've probably I should
probably<00:23:14.360><c> give</c><00:23:14.600><c> an</c><00:23:14.690><c> entire</c><00:23:14.900><c> talk</c><00:23:15.140><c> about</c><00:23:15.409><c> null</c>

00:23:15.640 --> 00:23:15.650 align:start position:0%
probably give an entire talk about null
 

00:23:15.650 --> 00:23:16.360 align:start position:0%
probably give an entire talk about null
at<00:23:15.799><c> some</c><00:23:15.950><c> point</c>

00:23:16.360 --> 00:23:16.370 align:start position:0%
at some point
 

00:23:16.370 --> 00:23:17.320 align:start position:0%
at some point
although<00:23:16.580><c> we</c><00:23:16.669><c> do</c><00:23:16.760><c> have</c><00:23:16.880><c> to</c><00:23:16.970><c> talk</c><00:23:17.059><c> about</c>

00:23:17.320 --> 00:23:17.330 align:start position:0%
although we do have to talk about
 

00:23:17.330 --> 00:23:19.840 align:start position:0%
although we do have to talk about
optional<00:23:17.809><c> on</c><00:23:17.900><c> Thursday</c><00:23:18.400><c> which</c><00:23:19.400><c> is</c><00:23:19.429><c> closely</c>

00:23:19.840 --> 00:23:19.850 align:start position:0%
optional on Thursday which is closely
 

00:23:19.850 --> 00:23:24.580 align:start position:0%
optional on Thursday which is closely
related<00:23:20.000><c> but</c><00:23:21.100><c> there's</c><00:23:23.260><c> but</c><00:23:24.260><c> there's</c><00:23:24.289><c> another</c>

00:23:24.580 --> 00:23:24.590 align:start position:0%
related but there's but there's another
 

00:23:24.590 --> 00:23:27.070 align:start position:0%
related but there's but there's another
reason<00:23:24.679><c> which</c><00:23:25.130><c> is</c><00:23:25.370><c> that</c><00:23:25.580><c> nulls</c><00:23:26.090><c> make</c><00:23:26.720><c> things</c>

00:23:27.070 --> 00:23:27.080 align:start position:0%
reason which is that nulls make things
 

00:23:27.080 --> 00:23:28.659 align:start position:0%
reason which is that nulls make things
hard<00:23:27.380><c> to</c><00:23:27.470><c> program</c><00:23:27.650><c> so</c><00:23:28.100><c> if</c><00:23:28.190><c> you</c><00:23:28.280><c> look</c><00:23:28.429><c> at</c><00:23:28.549><c> the</c>

00:23:28.659 --> 00:23:28.669 align:start position:0%
hard to program so if you look at the
 

00:23:28.669 --> 00:23:32.500 align:start position:0%
hard to program so if you look at the
map<00:23:28.909><c> dot</c><00:23:29.240><c> get</c><00:23:29.679><c> method</c><00:23:30.679><c> you</c><00:23:31.490><c> pass</c><00:23:31.700><c> it</c><00:23:31.850><c> a</c><00:23:31.940><c> key</c><00:23:32.150><c> and</c>

00:23:32.500 --> 00:23:32.510 align:start position:0%
map dot get method you pass it a key and
 

00:23:32.510 --> 00:23:34.779 align:start position:0%
map dot get method you pass it a key and
it<00:23:32.840><c> returns</c><00:23:33.169><c> the</c><00:23:33.650><c> value</c><00:23:33.830><c> corresponding</c><00:23:34.309><c> to</c>

00:23:34.779 --> 00:23:34.789 align:start position:0%
it returns the value corresponding to
 

00:23:34.789 --> 00:23:38.140 align:start position:0%
it returns the value corresponding to
that<00:23:34.940><c> key</c><00:23:35.240><c> well</c><00:23:35.870><c> what</c><00:23:36.080><c> happens</c><00:23:36.530><c> if</c><00:23:37.159><c> that</c><00:23:37.669><c> key</c>

00:23:38.140 --> 00:23:38.150 align:start position:0%
that key well what happens if that key
 

00:23:38.150 --> 00:23:40.330 align:start position:0%
that key well what happens if that key
is<00:23:38.330><c> not</c><00:23:38.510><c> present</c><00:23:39.110><c> in</c><00:23:39.260><c> the</c><00:23:39.409><c> map</c><00:23:39.590><c> well</c><00:23:40.250><c> it</c>

00:23:40.330 --> 00:23:40.340 align:start position:0%
is not present in the map well it
 

00:23:40.340 --> 00:23:44.320 align:start position:0%
is not present in the map well it
returns<00:23:40.700><c> null</c><00:23:41.830><c> okay</c><00:23:42.830><c> now</c><00:23:43.250><c> what</c><00:23:43.640><c> if</c><00:23:43.909><c> in</c><00:23:44.210><c> that</c>

00:23:44.320 --> 00:23:44.330 align:start position:0%
returns null okay now what if in that
 

00:23:44.330 --> 00:23:46.600 align:start position:0%
returns null okay now what if in that
map<00:23:44.630><c> in</c><00:23:44.929><c> a</c><00:23:45.080><c> hash</c><00:23:45.260><c> map</c><00:23:45.500><c> that</c><00:23:45.830><c> key</c><00:23:46.100><c> is</c><00:23:46.340><c> actually</c>

00:23:46.600 --> 00:23:46.610 align:start position:0%
map in a hash map that key is actually
 

00:23:46.610 --> 00:23:50.649 align:start position:0%
map in a hash map that key is actually
mapped<00:23:47.169><c> to</c><00:23:48.169><c> the</c><00:23:48.380><c> value</c><00:23:48.799><c> null</c><00:23:49.179><c> it</c><00:23:50.179><c> also</c><00:23:50.330><c> returns</c>

00:23:50.649 --> 00:23:50.659 align:start position:0%
mapped to the value null it also returns
 

00:23:50.659 --> 00:23:53.140 align:start position:0%
mapped to the value null it also returns
null<00:23:51.020><c> so</c><00:23:51.559><c> if</c><00:23:51.620><c> you</c><00:23:51.710><c> say</c><00:23:51.860><c> map</c><00:23:52.100><c> get</c><00:23:52.640><c> and</c><00:23:52.880><c> you</c><00:23:52.970><c> get</c><00:23:53.120><c> a</c>

00:23:53.140 --> 00:23:53.150 align:start position:0%
null so if you say map get and you get a
 

00:23:53.150 --> 00:23:55.810 align:start position:0%
null so if you say map get and you get a
null<00:23:53.390><c> back</c><00:23:53.600><c> you</c><00:23:53.900><c> don't</c><00:23:54.260><c> know</c><00:23:54.559><c> whether</c><00:23:55.370><c> the</c><00:23:55.640><c> key</c>

00:23:55.810 --> 00:23:55.820 align:start position:0%
null back you don't know whether the key
 

00:23:55.820 --> 00:23:57.610 align:start position:0%
null back you don't know whether the key
was<00:23:56.090><c> present</c><00:23:56.480><c> or</c><00:23:56.600><c> absent</c><00:23:56.720><c> and</c><00:23:57.380><c> that's</c><00:23:57.530><c> a</c>

00:23:57.610 --> 00:23:57.620 align:start position:0%
was present or absent and that's a
 

00:23:57.620 --> 00:23:59.649 align:start position:0%
was present or absent and that's a
fundamental<00:23:57.830><c> ambiguity</c><00:23:58.730><c> that</c><00:23:59.179><c> arises</c><00:23:59.480><c> from</c>

00:23:59.649 --> 00:23:59.659 align:start position:0%
fundamental ambiguity that arises from
 

00:23:59.659 --> 00:24:01.490 align:start position:0%
fundamental ambiguity that arises from
allowing<00:24:00.080><c> null</c><00:24:00.500><c> and</c>

00:24:01.490 --> 00:24:01.500 align:start position:0%
allowing null and
 

00:24:01.500 --> 00:24:04.190 align:start position:0%
allowing null and
as<00:24:01.620><c> an</c><00:24:01.890><c> actual</c><00:24:02.280><c> value</c><00:24:02.490><c> instead</c><00:24:03.420><c> of</c><00:24:03.660><c> using</c><00:24:03.900><c> it</c>

00:24:04.190 --> 00:24:04.200 align:start position:0%
as an actual value instead of using it
 

00:24:04.200 --> 00:24:07.400 align:start position:0%
as an actual value instead of using it
as<00:24:04.380><c> a</c><00:24:04.410><c> sentinel</c><00:24:04.980><c> which</c><00:24:05.220><c> it</c><00:24:05.370><c> actually</c><00:24:05.760><c> is</c><00:24:05.940><c> so</c><00:24:06.410><c> so</c>

00:24:07.400 --> 00:24:07.410 align:start position:0%
as a sentinel which it actually is so so
 

00:24:07.410 --> 00:24:09.200 align:start position:0%
as a sentinel which it actually is so so
that<00:24:07.590><c> occurs</c><00:24:07.950><c> in</c><00:24:08.100><c> several</c><00:24:08.220><c> places</c><00:24:08.550><c> in</c><00:24:08.850><c> the</c><00:24:08.940><c> API</c>

00:24:09.200 --> 00:24:09.210 align:start position:0%
that occurs in several places in the API
 

00:24:09.210 --> 00:24:12.020 align:start position:0%
that occurs in several places in the API
where<00:24:09.630><c> it's</c><00:24:10.050><c> hard</c><00:24:10.290><c> to</c><00:24:10.410><c> tell</c><00:24:10.590><c> whether</c><00:24:10.890><c> no</c><00:24:11.250><c> means</c>

00:24:12.020 --> 00:24:12.030 align:start position:0%
where it's hard to tell whether no means
 

00:24:12.030 --> 00:24:15.440 align:start position:0%
where it's hard to tell whether no means
well<00:24:12.630><c> the</c><00:24:12.720><c> actual</c><00:24:13.140><c> value</c><00:24:13.470><c> is</c><00:24:13.620><c> null</c><00:24:13.860><c> or</c><00:24:14.450><c> there</c>

00:24:15.440 --> 00:24:15.450 align:start position:0%
well the actual value is null or there
 

00:24:15.450 --> 00:24:17.870 align:start position:0%
well the actual value is null or there
is<00:24:15.660><c> no</c><00:24:15.900><c> value</c><00:24:16.350><c> so</c><00:24:16.590><c> that's</c><00:24:17.280><c> a</c><00:24:17.490><c> fundamental</c>

00:24:17.870 --> 00:24:17.880 align:start position:0%
is no value so that's a fundamental
 

00:24:17.880 --> 00:24:21.980 align:start position:0%
is no value so that's a fundamental
problem<00:24:18.570><c> with</c><00:24:18.750><c> semantics</c><00:24:19.290><c> of</c><00:24:19.440><c> no</c><00:24:20.300><c> also</c><00:24:21.300><c> no</c><00:24:21.720><c> is</c>

00:24:21.980 --> 00:24:21.990 align:start position:0%
problem with semantics of no also no is
 

00:24:21.990 --> 00:24:24.290 align:start position:0%
problem with semantics of no also no is
very<00:24:22.710><c> very</c><00:24:23.100><c> useful</c><00:24:23.370><c> inside</c><00:24:24.060><c> of</c>

00:24:24.290 --> 00:24:24.300 align:start position:0%
very very useful inside of
 

00:24:24.300 --> 00:24:26.930 align:start position:0%
very very useful inside of
implementations<00:24:24.990><c> as</c><00:24:25.200><c> a</c><00:24:25.500><c> sentinel</c><00:24:26.070><c> value</c><00:24:26.130><c> so</c>

00:24:26.930 --> 00:24:26.940 align:start position:0%
implementations as a sentinel value so
 

00:24:26.940 --> 00:24:29.030 align:start position:0%
implementations as a sentinel value so
the<00:24:27.150><c> the</c><00:24:27.570><c> collections</c><00:24:28.260><c> implementations</c><00:24:28.920><c> we</c>

00:24:29.030 --> 00:24:29.040 align:start position:0%
the the collections implementations we
 

00:24:29.040 --> 00:24:31.190 align:start position:0%
the the collections implementations we
have<00:24:29.250><c> use</c><00:24:29.700><c> null</c><00:24:30.030><c> to</c><00:24:30.330><c> mean</c><00:24:30.480><c> there</c><00:24:30.720><c> is</c><00:24:30.930><c> no</c>

00:24:31.190 --> 00:24:31.200 align:start position:0%
have use null to mean there is no
 

00:24:31.200 --> 00:24:34.250 align:start position:0%
have use null to mean there is no
element<00:24:31.710><c> here</c><00:24:32.070><c> and</c><00:24:32.190><c> so</c><00:24:32.940><c> if</c><00:24:33.720><c> you</c><00:24:33.870><c> look</c><00:24:34.020><c> at</c><00:24:34.140><c> the</c>

00:24:34.250 --> 00:24:34.260 align:start position:0%
element here and so if you look at the
 

00:24:34.260 --> 00:24:36.110 align:start position:0%
element here and so if you look at the
set<00:24:34.500><c> implementation</c><00:24:35.280><c> it</c><00:24:35.430><c> uses</c><00:24:35.700><c> closed</c>

00:24:36.110 --> 00:24:36.120 align:start position:0%
set implementation it uses closed
 

00:24:36.120 --> 00:24:37.820 align:start position:0%
set implementation it uses closed
hashing<00:24:36.570><c> in</c><00:24:36.660><c> a</c><00:24:36.720><c> single</c><00:24:37.020><c> array</c><00:24:37.230><c> so</c><00:24:37.290><c> it's</c><00:24:37.620><c> very</c>

00:24:37.820 --> 00:24:37.830 align:start position:0%
hashing in a single array so it's very
 

00:24:37.830 --> 00:24:40.280 align:start position:0%
hashing in a single array so it's very
compact<00:24:38.250><c> but</c><00:24:38.820><c> null</c><00:24:39.090><c> means</c><00:24:39.420><c> the</c><00:24:39.630><c> absence</c><00:24:40.050><c> of</c><00:24:40.140><c> an</c>

00:24:40.280 --> 00:24:40.290 align:start position:0%
compact but null means the absence of an
 

00:24:40.290 --> 00:24:42.410 align:start position:0%
compact but null means the absence of an
entry<00:24:40.590><c> so</c><00:24:41.100><c> searching</c><00:24:41.430><c> can</c><00:24:41.760><c> stop</c><00:24:42.060><c> at</c><00:24:42.300><c> that</c>

00:24:42.410 --> 00:24:42.420 align:start position:0%
entry so searching can stop at that
 

00:24:42.420 --> 00:24:42.830 align:start position:0%
entry so searching can stop at that
point

00:24:42.830 --> 00:24:42.840 align:start position:0%
point
 

00:24:42.840 --> 00:24:45.650 align:start position:0%
point
so<00:24:43.200><c> there's</c><00:24:43.350><c> no</c><00:24:43.560><c> possible</c><00:24:44.040><c> if</c><00:24:44.360><c> well</c><00:24:45.360><c> we</c><00:24:45.510><c> can</c>

00:24:45.650 --> 00:24:45.660 align:start position:0%
so there's no possible if well we can
 

00:24:45.660 --> 00:24:49.580 align:start position:0%
so there's no possible if well we can
only<00:24:45.690><c> do</c><00:24:46.290><c> that</c><00:24:46.320><c> if</c><00:24:46.740><c> we</c><00:24:46.920><c> disallow</c><00:24:47.370><c> no</c><00:24:48.090><c> as</c><00:24:48.510><c> of</c><00:24:49.290><c> an</c>

00:24:49.580 --> 00:24:49.590 align:start position:0%
only do that if we disallow no as of an
 

00:24:49.590 --> 00:24:52.370 align:start position:0%
only do that if we disallow no as of an
actual<00:24:50.070><c> value</c><00:24:50.400><c> that</c><00:24:50.880><c> can</c><00:24:51.180><c> be</c><00:24:51.270><c> present</c><00:24:51.450><c> in</c><00:24:51.840><c> the</c>

00:24:52.370 --> 00:24:52.380 align:start position:0%
actual value that can be present in the
 

00:24:52.380 --> 00:24:56.840 align:start position:0%
actual value that can be present in the
set<00:24:52.620><c> or</c><00:24:52.860><c> in</c><00:24:53.160><c> the</c><00:24:53.250><c> map</c><00:24:54.740><c> okay</c><00:24:55.740><c> moving</c><00:24:56.160><c> on</c><00:24:56.310><c> to</c><00:24:56.550><c> two</c>

00:24:56.840 --> 00:24:56.850 align:start position:0%
set or in the map okay moving on to two
 

00:24:56.850 --> 00:24:58.970 align:start position:0%
set or in the map okay moving on to two
other<00:24:57.030><c> issues</c><00:24:57.380><c> randomized</c><00:24:58.380><c> the</c><00:24:58.560><c> iteration</c>

00:24:58.970 --> 00:24:58.980 align:start position:0%
other issues randomized the iteration
 

00:24:58.980 --> 00:25:00.440 align:start position:0%
other issues randomized the iteration
order<00:24:59.310><c> so</c><00:24:59.430><c> this</c><00:24:59.550><c> is</c><00:24:59.700><c> a</c><00:24:59.730><c> this</c><00:25:00.000><c> is</c><00:25:00.120><c> a</c><00:25:00.150><c> bit</c><00:25:00.300><c> of</c><00:25:00.390><c> a</c>

00:25:00.440 --> 00:25:00.450 align:start position:0%
order so this is a this is a bit of a
 

00:25:00.450 --> 00:25:01.940 align:start position:0%
order so this is a this is a bit of a
controversy<00:25:00.990><c> so</c><00:25:01.440><c> if</c><00:25:01.530><c> you</c><00:25:01.620><c> look</c><00:25:01.770><c> at</c><00:25:01.860><c> the</c>

00:25:01.940 --> 00:25:01.950 align:start position:0%
controversy so if you look at the
 

00:25:01.950 --> 00:25:06.730 align:start position:0%
controversy so if you look at the
history<00:25:02.460><c> of</c><00:25:02.840><c> most</c><00:25:04.010><c> most</c><00:25:05.010><c> of</c><00:25:05.160><c> the</c><00:25:05.220><c> collections</c>

00:25:06.730 --> 00:25:06.740 align:start position:0%
history of most most of the collections
 

00:25:06.740 --> 00:25:09.170 align:start position:0%
history of most most of the collections
particularly<00:25:07.740><c> basically</c><00:25:08.670><c> the</c><00:25:08.790><c> hash</c><00:25:08.970><c> based</c>

00:25:09.170 --> 00:25:09.180 align:start position:0%
particularly basically the hash based
 

00:25:09.180 --> 00:25:10.970 align:start position:0%
particularly basically the hash based
one<00:25:09.480><c> so</c><00:25:09.690><c> if</c><00:25:09.810><c> you</c><00:25:09.900><c> look</c><00:25:10.050><c> at</c><00:25:10.200><c> hash</c><00:25:10.440><c> map</c><00:25:10.710><c> for</c>

00:25:10.970 --> 00:25:10.980 align:start position:0%
one so if you look at hash map for
 

00:25:10.980 --> 00:25:13.700 align:start position:0%
one so if you look at hash map for
instance<00:25:11.240><c> if</c><00:25:12.240><c> you</c><00:25:12.780><c> read</c><00:25:12.960><c> the</c><00:25:13.050><c> specification</c>

00:25:13.700 --> 00:25:13.710 align:start position:0%
instance if you read the specification
 

00:25:13.710 --> 00:25:17.720 align:start position:0%
instance if you read the specification
carefully<00:25:14.190><c> it</c><00:25:14.460><c> says</c><00:25:15.740><c> the</c><00:25:16.740><c> elements</c><00:25:17.280><c> if</c><00:25:17.520><c> you</c>

00:25:17.720 --> 00:25:17.730 align:start position:0%
carefully it says the elements if you
 

00:25:17.730 --> 00:25:21.220 align:start position:0%
carefully it says the elements if you
iterate<00:25:18.210><c> over</c><00:25:18.420><c> the</c><00:25:18.780><c> entries</c><00:25:19.530><c> of</c><00:25:19.830><c> a</c><00:25:19.980><c> hash</c><00:25:20.160><c> map</c>

00:25:21.220 --> 00:25:21.230 align:start position:0%
iterate over the entries of a hash map
 

00:25:21.230 --> 00:25:23.900 align:start position:0%
iterate over the entries of a hash map
you<00:25:22.230><c> will</c><00:25:22.380><c> get</c><00:25:22.620><c> the</c><00:25:22.770><c> elements</c><00:25:23.280><c> in</c><00:25:23.430><c> no</c>

00:25:23.900 --> 00:25:23.910 align:start position:0%
you will get the elements in no
 

00:25:23.910 --> 00:25:27.920 align:start position:0%
you will get the elements in no
particular<00:25:24.240><c> order</c><00:25:25.370><c> and</c><00:25:26.370><c> the</c><00:25:26.520><c> problem</c><00:25:27.030><c> is</c><00:25:27.270><c> that</c>

00:25:27.920 --> 00:25:27.930 align:start position:0%
particular order and the problem is that
 

00:25:27.930 --> 00:25:30.980 align:start position:0%
particular order and the problem is that
the<00:25:28.680><c> order</c><00:25:29.070><c> actually</c><00:25:29.340><c> was</c><00:25:30.120><c> quite</c><00:25:30.390><c> predictable</c>

00:25:30.980 --> 00:25:30.990 align:start position:0%
the order actually was quite predictable
 

00:25:30.990 --> 00:25:34.390 align:start position:0%
the order actually was quite predictable
even<00:25:31.380><c> though</c><00:25:31.500><c> it</c><00:25:31.590><c> was</c><00:25:31.740><c> not</c><00:25:31.860><c> specified</c><00:25:32.700><c> and</c>

00:25:34.390 --> 00:25:34.400 align:start position:0%
even though it was not specified and
 

00:25:34.400 --> 00:25:38.570 align:start position:0%
even though it was not specified and
even<00:25:35.400><c> worse</c><00:25:35.960><c> most</c><00:25:36.960><c> often</c><00:25:37.530><c> in</c><00:25:37.800><c> hash</c><00:25:38.070><c> map</c><00:25:38.340><c> the</c>

00:25:38.570 --> 00:25:38.580 align:start position:0%
even worse most often in hash map the
 

00:25:38.580 --> 00:25:42.620 align:start position:0%
even worse most often in hash map the
oft-used<00:25:39.570><c> key</c><00:25:40.140><c> type</c><00:25:40.380><c> in</c><00:25:40.680><c> hash</c><00:25:40.890><c> map</c><00:25:41.160><c> is</c><00:25:41.630><c> string</c>

00:25:42.620 --> 00:25:42.630 align:start position:0%
oft-used key type in hash map is string
 

00:25:42.630 --> 00:25:45.650 align:start position:0%
oft-used key type in hash map is string
and<00:25:42.960><c> strings</c><00:25:43.530><c> have</c><00:25:43.830><c> a</c><00:25:43.860><c> notoriously</c><00:25:44.400><c> bad</c><00:25:44.660><c> hash</c>

00:25:45.650 --> 00:25:45.660 align:start position:0%
and strings have a notoriously bad hash
 

00:25:45.660 --> 00:25:48.020 align:start position:0%
and strings have a notoriously bad hash
code<00:25:46.050><c> so</c><00:25:46.680><c> if</c><00:25:46.830><c> you</c><00:25:46.950><c> put</c><00:25:47.130><c> a</c><00:25:47.160><c> bunch</c><00:25:47.340><c> of</c><00:25:47.460><c> strings</c><00:25:47.760><c> in</c>

00:25:48.020 --> 00:25:48.030 align:start position:0%
code so if you put a bunch of strings in
 

00:25:48.030 --> 00:25:50.510 align:start position:0%
code so if you put a bunch of strings in
they'll<00:25:49.020><c> actually</c><00:25:49.200><c> and</c><00:25:49.620><c> and</c><00:25:49.920><c> if</c><00:25:50.280><c> you</c><00:25:50.370><c> put</c><00:25:50.490><c> a</c>

00:25:50.510 --> 00:25:50.520 align:start position:0%
they'll actually and and if you put a
 

00:25:50.520 --> 00:25:52.430 align:start position:0%
they'll actually and and if you put a
bunch<00:25:50.730><c> of</c><00:25:50.820><c> strings</c><00:25:51.150><c> into</c><00:25:51.510><c> a</c><00:25:51.540><c> hash</c><00:25:51.810><c> set</c><00:25:52.050><c> or</c><00:25:52.230><c> hash</c>

00:25:52.430 --> 00:25:52.440 align:start position:0%
bunch of strings into a hash set or hash
 

00:25:52.440 --> 00:25:54.740 align:start position:0%
bunch of strings into a hash set or hash
map<00:25:52.710><c> and</c><00:25:53.010><c> then</c><00:25:53.190><c> iterate</c><00:25:53.520><c> over</c><00:25:53.730><c> them</c><00:25:54.030><c> they'll</c>

00:25:54.740 --> 00:25:54.750 align:start position:0%
map and then iterate over them they'll
 

00:25:54.750 --> 00:25:58.070 align:start position:0%
map and then iterate over them they'll
actually<00:25:55.080><c> come</c><00:25:55.560><c> out</c><00:25:55.590><c> in</c><00:25:56.040><c> sorted</c><00:25:56.730><c> order</c><00:25:56.760><c> and</c><00:25:57.390><c> so</c>

00:25:58.070 --> 00:25:58.080 align:start position:0%
actually come out in sorted order and so
 

00:25:58.080 --> 00:26:00.860 align:start position:0%
actually come out in sorted order and so
the<00:25:58.410><c> problem</c><00:25:58.800><c> is</c><00:25:58.920><c> if</c><00:25:59.130><c> you</c><00:25:59.280><c> start</c><00:25:59.640><c> to</c><00:25:59.820><c> depend</c><00:26:00.480><c> on</c>

00:26:00.860 --> 00:26:00.870 align:start position:0%
the problem is if you start to depend on
 

00:26:00.870 --> 00:26:03.610 align:start position:0%
the problem is if you start to depend on
that<00:26:01.440><c> order</c><00:26:01.920><c> and</c><00:26:02.280><c> then</c><00:26:02.430><c> somebody</c><00:26:02.820><c> adds</c>

00:26:03.610 --> 00:26:03.620 align:start position:0%
that order and then somebody adds
 

00:26:03.620 --> 00:26:05.660 align:start position:0%
that order and then somebody adds
another<00:26:04.620><c> value</c><00:26:05.100><c> that</c><00:26:05.280><c> which</c><00:26:05.370><c> you</c><00:26:05.490><c> weren't</c>

00:26:05.660 --> 00:26:05.670 align:start position:0%
another value that which you weren't
 

00:26:05.670 --> 00:26:08.960 align:start position:0%
another value that which you weren't
expecting<00:26:06.180><c> and</c><00:26:06.500><c> causes</c><00:26:07.500><c> the</c><00:26:07.740><c> the</c><00:26:07.950><c> hash</c><00:26:08.100><c> map</c><00:26:08.370><c> to</c>

00:26:08.960 --> 00:26:08.970 align:start position:0%
expecting and causes the the hash map to
 

00:26:08.970 --> 00:26:10.850 align:start position:0%
expecting and causes the the hash map to
to<00:26:09.360><c> rehash</c><00:26:09.720><c> itself</c><00:26:10.140><c> and</c><00:26:10.350><c> put</c><00:26:10.530><c> things</c><00:26:10.710><c> in</c>

00:26:10.850 --> 00:26:10.860 align:start position:0%
to rehash itself and put things in
 

00:26:10.860 --> 00:26:12.530 align:start position:0%
to rehash itself and put things in
different<00:26:11.010><c> buckets</c><00:26:11.250><c> then</c><00:26:12.000><c> that</c><00:26:12.210><c> order</c>

00:26:12.530 --> 00:26:12.540 align:start position:0%
different buckets then that order
 

00:26:12.540 --> 00:26:14.830 align:start position:0%
different buckets then that order
changes<00:26:13.020><c> and</c><00:26:13.260><c> it</c><00:26:13.590><c> might</c><00:26:13.830><c> break</c><00:26:14.040><c> your</c><00:26:14.220><c> code</c>

00:26:14.830 --> 00:26:14.840 align:start position:0%
changes and it might break your code
 

00:26:14.840 --> 00:26:18.820 align:start position:0%
changes and it might break your code
now<00:26:15.559><c> maybe</c><00:26:16.519><c> you've</c><00:26:17.509><c> you</c><00:26:18.350><c> you</c><00:26:18.559><c> might</c><00:26:18.799><c> have</c>

00:26:18.820 --> 00:26:18.830 align:start position:0%
now maybe you've you you might have
 

00:26:18.830 --> 00:26:20.830 align:start position:0%
now maybe you've you you might have
designed<00:26:19.610><c> your</c><00:26:19.730><c> code</c><00:26:19.999><c> to</c><00:26:20.029><c> be</c><00:26:20.210><c> more</c><00:26:20.480><c> resilient</c>

00:26:20.830 --> 00:26:20.840 align:start position:0%
designed your code to be more resilient
 

00:26:20.840 --> 00:26:23.499 align:start position:0%
designed your code to be more resilient
to<00:26:21.049><c> that</c><00:26:21.139><c> but</c><00:26:21.679><c> actually</c><00:26:22.100><c> in</c><00:26:22.370><c> in</c><00:26:22.789><c> practice</c><00:26:23.330><c> what</c>

00:26:23.499 --> 00:26:23.509 align:start position:0%
to that but actually in in practice what
 

00:26:23.509 --> 00:26:25.570 align:start position:0%
to that but actually in in practice what
happens<00:26:23.539><c> is</c><00:26:24.080><c> that</c><00:26:24.320><c> once</c><00:26:24.559><c> a</c><00:26:24.649><c> hashmap</c><00:26:24.860><c> is</c><00:26:25.249><c> loaded</c>

00:26:25.570 --> 00:26:25.580 align:start position:0%
happens is that once a hashmap is loaded
 

00:26:25.580 --> 00:26:26.950 align:start position:0%
happens is that once a hashmap is loaded
with<00:26:25.639><c> something</c><00:26:25.940><c> it</c><00:26:26.090><c> tends</c><00:26:26.360><c> not</c><00:26:26.450><c> to</c><00:26:26.600><c> change</c>

00:26:26.950 --> 00:26:26.960 align:start position:0%
with something it tends not to change
 

00:26:26.960 --> 00:26:28.989 align:start position:0%
with something it tends not to change
that<00:26:27.169><c> much</c><00:26:27.379><c> so</c><00:26:27.980><c> what</c><00:26:28.129><c> happens</c><00:26:28.460><c> is</c><00:26:28.610><c> the</c><00:26:28.700><c> code</c>

00:26:28.989 --> 00:26:28.999 align:start position:0%
that much so what happens is the code
 

00:26:28.999 --> 00:26:32.019 align:start position:0%
that much so what happens is the code
tends<00:26:29.570><c> to</c><00:26:29.749><c> build</c><00:26:29.960><c> up</c><00:26:30.169><c> an</c><00:26:30.320><c> implicit</c><00:26:31.279><c> dependency</c>

00:26:32.019 --> 00:26:32.029 align:start position:0%
tends to build up an implicit dependency
 

00:26:32.029 --> 00:26:35.289 align:start position:0%
tends to build up an implicit dependency
on<00:26:32.240><c> the</c><00:26:32.629><c> iteration</c><00:26:33.259><c> order</c><00:26:33.679><c> of</c><00:26:33.830><c> the</c><00:26:34.309><c> keys</c><00:26:34.549><c> of</c><00:26:34.850><c> a</c>

00:26:35.289 --> 00:26:35.299 align:start position:0%
on the iteration order of the keys of a
 

00:26:35.299 --> 00:26:39.100 align:start position:0%
on the iteration order of the keys of a
hash<00:26:35.480><c> map</c><00:26:36.429><c> now</c><00:26:37.429><c> the</c><00:26:38.149><c> other</c><00:26:38.360><c> problem</c><00:26:38.690><c> is</c><00:26:39.080><c> that</c>

00:26:39.100 --> 00:26:39.110 align:start position:0%
hash map now the other problem is that
 

00:26:39.110 --> 00:26:42.279 align:start position:0%
hash map now the other problem is that
from<00:26:39.620><c> time</c><00:26:39.860><c> to</c><00:26:39.980><c> time</c><00:26:40.009><c> in</c><00:26:40.490><c> the</c><00:26:40.549><c> JDK</c><00:26:41.149><c> we</c><00:26:41.809><c> change</c>

00:26:42.279 --> 00:26:42.289 align:start position:0%
from time to time in the JDK we change
 

00:26:42.289 --> 00:26:44.350 align:start position:0%
from time to time in the JDK we change
the<00:26:42.590><c> iteration</c><00:26:43.100><c> order</c><00:26:43.340><c> of</c><00:26:43.460><c> a</c><00:26:43.519><c> hash</c><00:26:43.700><c> map</c><00:26:43.909><c> right</c>

00:26:44.350 --> 00:26:44.360 align:start position:0%
the iteration order of a hash map right
 

00:26:44.360 --> 00:26:45.759 align:start position:0%
the iteration order of a hash map right
the<00:26:44.509><c> specification</c><00:26:45.169><c> says</c><00:26:45.409><c> they're</c><00:26:45.620><c> not</c>

00:26:45.759 --> 00:26:45.769 align:start position:0%
the specification says they're not
 

00:26:45.769 --> 00:26:47.980 align:start position:0%
the specification says they're not
returned<00:26:46.159><c> in</c><00:26:46.279><c> any</c><00:26:46.429><c> particular</c><00:26:46.669><c> order</c><00:26:46.970><c> so</c><00:26:47.720><c> we</c>

00:26:47.980 --> 00:26:47.990 align:start position:0%
returned in any particular order so we
 

00:26:47.990 --> 00:26:49.899 align:start position:0%
returned in any particular order so we
might<00:26:48.230><c> change</c><00:26:48.860><c> the</c><00:26:49.070><c> iteration</c><00:26:49.580><c> order</c><00:26:49.820><c> of</c><00:26:49.879><c> a</c>

00:26:49.899 --> 00:26:49.909 align:start position:0%
might change the iteration order of a
 

00:26:49.909 --> 00:26:52.359 align:start position:0%
might change the iteration order of a
hash<00:26:50.119><c> map</c><00:26:50.389><c> in</c><00:26:50.690><c> order</c><00:26:50.809><c> to</c><00:26:51.110><c> optimize</c><00:26:51.529><c> things</c><00:26:51.799><c> or</c>

00:26:52.359 --> 00:26:52.369 align:start position:0%
hash map in order to optimize things or
 

00:26:52.369 --> 00:26:54.070 align:start position:0%
hash map in order to optimize things or
in<00:26:52.549><c> order</c><00:26:52.669><c> to</c><00:26:52.850><c> protect</c><00:26:53.179><c> against</c><00:26:53.539><c> security</c>

00:26:54.070 --> 00:26:54.080 align:start position:0%
in order to protect against security
 

00:26:54.080 --> 00:26:55.960 align:start position:0%
in order to protect against security
vulnerabilities<00:26:54.710><c> and</c><00:26:54.950><c> so</c><00:26:55.129><c> forth</c><00:26:55.399><c> and</c><00:26:55.610><c> this</c>

00:26:55.960 --> 00:26:55.970 align:start position:0%
vulnerabilities and so forth and this
 

00:26:55.970 --> 00:26:58.389 align:start position:0%
vulnerabilities and so forth and this
does<00:26:56.240><c> happen</c><00:26:56.480><c> from</c><00:26:56.749><c> time</c><00:26:56.840><c> to</c><00:26:57.110><c> time</c><00:26:57.249><c> with</c><00:26:58.249><c> the</c>

00:26:58.389 --> 00:26:58.399 align:start position:0%
does happen from time to time with the
 

00:26:58.399 --> 00:27:01.090 align:start position:0%
does happen from time to time with the
frequency<00:26:58.970><c> of</c><00:26:58.999><c> JDK</c><00:26:59.840><c> releases</c><00:27:00.440><c> being</c><00:27:00.590><c> fairly</c>

00:27:01.090 --> 00:27:01.100 align:start position:0%
frequency of JDK releases being fairly
 

00:27:01.100 --> 00:27:03.700 align:start position:0%
frequency of JDK releases being fairly
low<00:27:01.369><c> this</c><00:27:01.850><c> didn't</c><00:27:02.179><c> happen</c><00:27:02.509><c> very</c><00:27:02.539><c> often</c><00:27:02.960><c> and</c><00:27:03.320><c> in</c>

00:27:03.700 --> 00:27:03.710 align:start position:0%
low this didn't happen very often and in
 

00:27:03.710 --> 00:27:05.710 align:start position:0%
low this didn't happen very often and in
fact<00:27:03.860><c> it</c><00:27:04.039><c> happened</c><00:27:04.369><c> with</c><00:27:05.149><c> about</c><00:27:05.360><c> the</c><00:27:05.480><c> worst</c>

00:27:05.710 --> 00:27:05.720 align:start position:0%
fact it happened with about the worst
 

00:27:05.720 --> 00:27:09.430 align:start position:0%
fact it happened with about the worst
possible<00:27:06.230><c> frequency</c><00:27:06.710><c> it</c><00:27:07.159><c> would</c><00:27:07.309><c> happen</c><00:27:07.720><c> so</c><00:27:08.720><c> we</c>

00:27:09.430 --> 00:27:09.440 align:start position:0%
possible frequency it would happen so we
 

00:27:09.440 --> 00:27:11.560 align:start position:0%
possible frequency it would happen so we
released<00:27:10.009><c> a</c><00:27:10.070><c> JDK</c><00:27:10.490><c> a</c><00:27:10.519><c> bunch</c><00:27:10.970><c> of</c><00:27:11.059><c> code</c><00:27:11.299><c> would</c><00:27:11.509><c> be</c>

00:27:11.560 --> 00:27:11.570 align:start position:0%
released a JDK a bunch of code would be
 

00:27:11.570 --> 00:27:14.680 align:start position:0%
released a JDK a bunch of code would be
written<00:27:11.809><c> that</c><00:27:12.220><c> depended</c><00:27:13.220><c> on</c><00:27:13.399><c> the</c><00:27:14.210><c> hashmap</c>

00:27:14.680 --> 00:27:14.690 align:start position:0%
written that depended on the hashmap
 

00:27:14.690 --> 00:27:18.580 align:start position:0%
written that depended on the hashmap
order<00:27:15.470><c> in</c><00:27:16.340><c> this</c><00:27:16.580><c> version</c><00:27:16.759><c> of</c><00:27:16.909><c> the</c><00:27:17.029><c> JDK</c><00:27:17.590><c> years</c>

00:27:18.580 --> 00:27:18.590 align:start position:0%
order in this version of the JDK years
 

00:27:18.590 --> 00:27:20.889 align:start position:0%
order in this version of the JDK years
later<00:27:18.889><c> we'd</c><00:27:19.490><c> change</c><00:27:19.940><c> the</c><00:27:20.090><c> iteration</c><00:27:20.539><c> order</c><00:27:20.809><c> of</c>

00:27:20.889 --> 00:27:20.899 align:start position:0%
later we'd change the iteration order of
 

00:27:20.899 --> 00:27:23.799 align:start position:0%
later we'd change the iteration order of
hash<00:27:21.049><c> map</c><00:27:21.320><c> and</c><00:27:22.240><c> then</c><00:27:23.240><c> it</c><00:27:23.330><c> would</c><00:27:23.450><c> break</c>

00:27:23.799 --> 00:27:23.809 align:start position:0%
hash map and then it would break
 

00:27:23.809 --> 00:27:25.840 align:start position:0%
hash map and then it would break
everything<00:27:24.139><c> and</c><00:27:24.499><c> so</c><00:27:25.369><c> there</c><00:27:25.490><c> would</c><00:27:25.549><c> be</c><00:27:25.610><c> a</c><00:27:25.700><c> bunch</c>

00:27:25.840 --> 00:27:25.850 align:start position:0%
everything and so there would be a bunch
 

00:27:25.850 --> 00:27:28.210 align:start position:0%
everything and so there would be a bunch
of<00:27:25.970><c> complaints</c><00:27:26.419><c> about</c><00:27:26.509><c> it</c><00:27:26.659><c> and</c><00:27:27.190><c> you</c><00:27:28.190><c> know</c>

00:27:28.210 --> 00:27:28.220 align:start position:0%
of complaints about it and you know
 

00:27:28.220 --> 00:27:30.460 align:start position:0%
of complaints about it and you know
maybe<00:27:28.759><c> rightly</c><00:27:29.240><c> you</c><00:27:29.360><c> know</c><00:27:29.450><c> you</c><00:27:29.960><c> can</c><00:27:30.200><c> only</c><00:27:30.320><c> get</c>

00:27:30.460 --> 00:27:30.470 align:start position:0%
maybe rightly you know you can only get
 

00:27:30.470 --> 00:27:32.409 align:start position:0%
maybe rightly you know you can only get
so<00:27:30.619><c> far</c><00:27:30.649><c> by</c><00:27:30.950><c> saying</c><00:27:31.159><c> I'm</c><00:27:31.549><c> sorry</c><00:27:31.970><c> if</c><00:27:32.119><c> you</c><00:27:32.210><c> read</c>

00:27:32.409 --> 00:27:32.419 align:start position:0%
so far by saying I'm sorry if you read
 

00:27:32.419 --> 00:27:34.210 align:start position:0%
so far by saying I'm sorry if you read
the<00:27:32.570><c> spec</c><00:27:32.809><c> your</c><00:27:33.110><c> code</c><00:27:33.379><c> is</c><00:27:33.559><c> wrong</c><00:27:33.769><c> you'd</c><00:27:34.070><c> have</c>

00:27:34.210 --> 00:27:34.220 align:start position:0%
the spec your code is wrong you'd have
 

00:27:34.220 --> 00:27:35.080 align:start position:0%
the spec your code is wrong you'd have
to<00:27:34.309><c> go</c><00:27:34.399><c> fix</c><00:27:34.669><c> it</c><00:27:34.789><c> right</c>

00:27:35.080 --> 00:27:35.090 align:start position:0%
to go fix it right
 

00:27:35.090 --> 00:27:36.970 align:start position:0%
to go fix it right
that<00:27:35.269><c> gets</c><00:27:35.419><c> tiresome</c><00:27:35.899><c> after</c><00:27:36.230><c> a</c><00:27:36.259><c> while</c><00:27:36.470><c> it</c><00:27:36.860><c> gets</c>

00:27:36.970 --> 00:27:36.980 align:start position:0%
that gets tiresome after a while it gets
 

00:27:36.980 --> 00:27:39.220 align:start position:0%
that gets tiresome after a while it gets
tiresome<00:27:37.309><c> for</c><00:27:37.399><c> everybody</c><00:27:37.909><c> and</c><00:27:38.149><c> so</c><00:27:38.779><c> and</c><00:27:39.019><c> the</c>

00:27:39.220 --> 00:27:39.230 align:start position:0%
tiresome for everybody and so and the
 

00:27:39.230 --> 00:27:41.379 align:start position:0%
tiresome for everybody and so and the
problem<00:27:39.559><c> is</c><00:27:39.710><c> and</c><00:27:39.919><c> and</c><00:27:40.460><c> and</c><00:27:40.639><c> and</c><00:27:40.999><c> it</c><00:27:41.240><c> seeped</c>

00:27:41.379 --> 00:27:41.389 align:start position:0%
problem is and and and and it seeped
 

00:27:41.389 --> 00:27:42.759 align:start position:0%
problem is and and and and it seeped
it's<00:27:41.600><c> very</c><00:27:41.779><c> easy</c><00:27:41.929><c> to</c><00:27:42.080><c> say</c><00:27:42.200><c> you</c><00:27:42.259><c> guys</c><00:27:42.529><c> need</c><00:27:42.740><c> to</c>

00:27:42.759 --> 00:27:42.769 align:start position:0%
it's very easy to say you guys need to
 

00:27:42.769 --> 00:27:44.259 align:start position:0%
it's very easy to say you guys need to
fix<00:27:42.980><c> your</c><00:27:43.129><c> code</c><00:27:43.279><c> and</c><00:27:43.519><c> so</c><00:27:43.700><c> I</c><00:27:43.730><c> don't</c><00:27:43.999><c> want</c><00:27:44.119><c> to</c><00:27:44.149><c> say</c>

00:27:44.259 --> 00:27:44.269 align:start position:0%
fix your code and so I don't want to say
 

00:27:44.269 --> 00:27:46.389 align:start position:0%
fix your code and so I don't want to say
that<00:27:44.450><c> because</c><00:27:44.600><c> our</c><00:27:45.139><c> code</c><00:27:45.619><c> has</c><00:27:45.860><c> the</c><00:27:46.100><c> same</c>

00:27:46.389 --> 00:27:46.399 align:start position:0%
that because our code has the same
 

00:27:46.399 --> 00:27:48.340 align:start position:0%
that because our code has the same
problem<00:27:46.999><c> we</c><00:27:47.419><c> had</c><00:27:47.450><c> a</c><00:27:47.539><c> we</c><00:27:47.809><c> had</c><00:27:47.929><c> a</c><00:27:47.960><c> bug</c><00:27:48.139><c> in</c><00:27:48.289><c> the</c>

00:27:48.340 --> 00:27:48.350 align:start position:0%
problem we had a we had a bug in the
 

00:27:48.350 --> 00:27:50.289 align:start position:0%
problem we had a we had a bug in the
compiler<00:27:48.470><c> that</c><00:27:48.860><c> was</c><00:27:49.220><c> due</c><00:27:49.490><c> to</c><00:27:49.519><c> the</c><00:27:49.730><c> exact</c><00:27:50.090><c> same</c>

00:27:50.289 --> 00:27:50.299 align:start position:0%
compiler that was due to the exact same
 

00:27:50.299 --> 00:27:53.259 align:start position:0%
compiler that was due to the exact same
thing<00:27:50.600><c> and</c><00:27:50.779><c> it</c><00:27:51.559><c> was</c><00:27:51.679><c> mystifying</c><00:27:52.249><c> and</c><00:27:52.519><c> so</c><00:27:53.179><c> we</c>

00:27:53.259 --> 00:27:53.269 align:start position:0%
thing and it was mystifying and so we
 

00:27:53.269 --> 00:27:54.999 align:start position:0%
thing and it was mystifying and so we
said<00:27:53.419><c> you</c><00:27:53.539><c> know</c><00:27:53.570><c> let's</c><00:27:54.200><c> change</c><00:27:54.499><c> that</c><00:27:54.740><c> to</c><00:27:54.799><c> a</c>

00:27:54.999 --> 00:27:55.009 align:start position:0%
said you know let's change that to a
 

00:27:55.009 --> 00:27:56.470 align:start position:0%
said you know let's change that to a
linked<00:27:55.279><c> hash</c><00:27:55.429><c> map</c><00:27:55.700><c> and</c><00:27:55.879><c> the</c><00:27:55.940><c> problem</c><00:27:56.299><c> went</c>

00:27:56.470 --> 00:27:56.480 align:start position:0%
linked hash map and the problem went
 

00:27:56.480 --> 00:27:59.739 align:start position:0%
linked hash map and the problem went
away<00:27:56.619><c> so</c><00:27:57.619><c> it's</c><00:27:58.340><c> clear</c><00:27:58.669><c> there's</c><00:27:59.240><c> a</c><00:27:59.330><c> there's</c><00:27:59.659><c> a</c>

00:27:59.739 --> 00:27:59.749 align:start position:0%
away so it's clear there's a there's a
 

00:27:59.749 --> 00:28:02.619 align:start position:0%
away so it's clear there's a there's a
very<00:27:59.990><c> serious</c><00:28:00.169><c> problem</c><00:28:00.440><c> which</c><00:28:00.830><c> is</c><00:28:01.179><c> code</c><00:28:02.179><c> all</c>

00:28:02.619 --> 00:28:02.629 align:start position:0%
very serious problem which is code all
 

00:28:02.629 --> 00:28:06.340 align:start position:0%
very serious problem which is code all
too<00:28:03.019><c> easily</c><00:28:03.200><c> depends</c><00:28:03.889><c> on</c><00:28:04.090><c> implicit</c><00:28:05.350><c> ordering</c>

00:28:06.340 --> 00:28:06.350 align:start position:0%
too easily depends on implicit ordering
 

00:28:06.350 --> 00:28:10.629 align:start position:0%
too easily depends on implicit ordering
in<00:28:06.980><c> a</c><00:28:07.190><c> hash</c><00:28:07.369><c> map</c><00:28:07.690><c> so</c><00:28:08.860><c> that's</c><00:28:09.860><c> all</c><00:28:10.070><c> introduction</c>

00:28:10.629 --> 00:28:10.639 align:start position:0%
in a hash map so that's all introduction
 

00:28:10.639 --> 00:28:12.759 align:start position:0%
in a hash map so that's all introduction
to<00:28:10.789><c> what</c><00:28:11.269><c> we're</c><00:28:11.419><c> doing</c><00:28:11.690><c> here</c><00:28:11.899><c> with</c><00:28:12.139><c> the</c><00:28:12.200><c> new</c>

00:28:12.759 --> 00:28:12.769 align:start position:0%
to what we're doing here with the new
 

00:28:12.769 --> 00:28:14.830 align:start position:0%
to what we're doing here with the new
collection<00:28:13.249><c> implementations</c><00:28:14.090><c> of</c><00:28:14.360><c> set</c><00:28:14.659><c> and</c>

00:28:14.830 --> 00:28:14.840 align:start position:0%
collection implementations of set and
 

00:28:14.840 --> 00:28:18.249 align:start position:0%
collection implementations of set and
math<00:28:15.110><c> in</c><00:28:15.409><c> JDK</c><00:28:15.950><c> 9</c><00:28:16.159><c> the</c><00:28:16.970><c> iteration</c><00:28:17.629><c> order</c><00:28:18.080><c> is</c>

00:28:18.249 --> 00:28:18.259 align:start position:0%
math in JDK 9 the iteration order is
 

00:28:18.259 --> 00:28:21.789 align:start position:0%
math in JDK 9 the iteration order is
randomized<00:28:19.220><c> so</c><00:28:20.059><c> at</c><00:28:20.210><c> the</c><00:28:20.330><c> start</c><00:28:20.659><c> when</c><00:28:21.470><c> it</c><00:28:21.590><c> when</c>

00:28:21.789 --> 00:28:21.799 align:start position:0%
randomized so at the start when it when
 

00:28:21.799 --> 00:28:23.859 align:start position:0%
randomized so at the start when it when
it<00:28:21.950><c> when</c><00:28:22.100><c> the</c><00:28:22.159><c> JVM</c><00:28:22.610><c> starts</c><00:28:23.000><c> it</c><00:28:23.179><c> cups</c><00:28:23.480><c> up</c><00:28:23.629><c> comes</c>

00:28:23.859 --> 00:28:23.869 align:start position:0%
it when the JVM starts it cups up comes
 

00:28:23.869 --> 00:28:26.049 align:start position:0%
it when the JVM starts it cups up comes
up<00:28:24.019><c> with</c><00:28:24.139><c> hash</c><00:28:24.379><c> seed</c><00:28:24.649><c> and</c><00:28:24.950><c> uses</c><00:28:25.399><c> that</c><00:28:25.549><c> as</c><00:28:25.789><c> part</c>

00:28:26.049 --> 00:28:26.059 align:start position:0%
up with hash seed and uses that as part
 

00:28:26.059 --> 00:28:27.120 align:start position:0%
up with hash seed and uses that as part
of<00:28:26.179><c> the</c><00:28:26.269><c> hash</c><00:28:26.450><c> computation</c>

00:28:27.120 --> 00:28:27.130 align:start position:0%
of the hash computation
 

00:28:27.130 --> 00:28:29.640 align:start position:0%
of the hash computation
so<00:28:27.700><c> from</c><00:28:28.090><c> one</c><00:28:28.330><c> run</c><00:28:28.630><c> to</c><00:28:28.840><c> the</c><00:28:28.960><c> next</c><00:28:29.110><c> the</c>

00:28:29.640 --> 00:28:29.650 align:start position:0%
so from one run to the next the
 

00:28:29.650 --> 00:28:32.190 align:start position:0%
so from one run to the next the
iteration<00:28:30.220><c> order</c><00:28:30.580><c> of</c><00:28:30.789><c> a</c><00:28:30.910><c> set</c><00:28:31.150><c> or</c><00:28:31.360><c> map</c><00:28:31.660><c> that</c><00:28:32.080><c> you</c>

00:28:32.190 --> 00:28:32.200 align:start position:0%
iteration order of a set or map that you
 

00:28:32.200 --> 00:28:35.310 align:start position:0%
iteration order of a set or map that you
get<00:28:32.350><c> from</c><00:28:32.500><c> these</c><00:28:32.650><c> new</c><00:28:32.860><c> api's</c><00:28:33.280><c> is</c><00:28:33.900><c> is</c><00:28:34.900><c> going</c><00:28:35.230><c> to</c>

00:28:35.310 --> 00:28:35.320 align:start position:0%
get from these new api's is is going to
 

00:28:35.320 --> 00:28:38.580 align:start position:0%
get from these new api's is is going to
be<00:28:35.410><c> different</c><00:28:35.860><c> so</c><00:28:36.450><c> you</c><00:28:37.450><c> might</c><00:28:37.600><c> say</c><00:28:37.809><c> oh</c><00:28:37.990><c> oh</c><00:28:38.320><c> my</c>

00:28:38.580 --> 00:28:38.590 align:start position:0%
be different so you might say oh oh my
 

00:28:38.590 --> 00:28:40.680 align:start position:0%
be different so you might say oh oh my
gosh<00:28:38.830><c> this</c><00:28:39.070><c> is</c><00:28:39.130><c> gonna</c><00:28:39.340><c> this</c><00:28:39.640><c> is</c><00:28:39.820><c> gonna</c><00:28:40.030><c> this</c><00:28:40.450><c> is</c>

00:28:40.680 --> 00:28:40.690 align:start position:0%
gosh this is gonna this is gonna this is
 

00:28:40.690 --> 00:28:44.190 align:start position:0%
gosh this is gonna this is gonna this is
gonna<00:28:40.900><c> break</c><00:28:41.080><c> my</c><00:28:41.289><c> code</c><00:28:42.090><c> yes</c><00:28:43.090><c> I</c><00:28:43.419><c> wanted</c><00:28:44.140><c> to</c>

00:28:44.190 --> 00:28:44.200 align:start position:0%
gonna break my code yes I wanted to
 

00:28:44.200 --> 00:28:45.600 align:start position:0%
gonna break my code yes I wanted to
break<00:28:44.380><c> your</c><00:28:44.500><c> code</c><00:28:44.710><c> while</c><00:28:45.160><c> you're</c><00:28:45.400><c> developing</c>

00:28:45.600 --> 00:28:45.610 align:start position:0%
break your code while you're developing
 

00:28:45.610 --> 00:28:48.960 align:start position:0%
break your code while you're developing
it<00:28:46.000><c> and</c><00:28:46.179><c> testing</c><00:28:46.660><c> it</c><00:28:46.809><c> so</c><00:28:47.260><c> that</c><00:28:47.440><c> way</c><00:28:47.679><c> you</c><00:28:48.549><c> you</c>

00:28:48.960 --> 00:28:48.970 align:start position:0%
it and testing it so that way you you
 

00:28:48.970 --> 00:28:50.880 align:start position:0%
it and testing it so that way you you
don't<00:28:49.299><c> get</c><00:28:49.480><c> broken</c><00:28:49.720><c> when</c><00:28:50.169><c> you</c><00:28:50.289><c> upgrade</c><00:28:50.500><c> to</c><00:28:50.799><c> the</c>

00:28:50.880 --> 00:28:50.890 align:start position:0%
don't get broken when you upgrade to the
 

00:28:50.890 --> 00:28:53.789 align:start position:0%
don't get broken when you upgrade to the
next<00:28:51.010><c> version</c><00:28:51.160><c> of</c><00:28:51.549><c> the</c><00:28:51.910><c> JDK</c><00:28:52.210><c> so</c><00:28:53.169><c> I</c><00:28:53.200><c> think</c><00:28:53.470><c> that</c>

00:28:53.789 --> 00:28:53.799 align:start position:0%
next version of the JDK so I think that
 

00:28:53.799 --> 00:28:58.470 align:start position:0%
next version of the JDK so I think that
the<00:28:54.190><c> the</c><00:28:54.789><c> the</c><00:28:55.000><c> principle</c><00:28:55.419><c> here</c><00:28:55.660><c> is</c><00:28:55.840><c> that</c><00:28:57.480><c> the</c>

00:28:58.470 --> 00:28:58.480 align:start position:0%
the the the principle here is that the
 

00:28:58.480 --> 00:29:01.289 align:start position:0%
the the the principle here is that the
specification<00:28:59.320><c> allows</c><00:29:00.070><c> the</c><00:29:00.640><c> implementation</c>

00:29:01.289 --> 00:29:01.299 align:start position:0%
specification allows the implementation
 

00:29:01.299 --> 00:29:03.180 align:start position:0%
specification allows the implementation
to<00:29:01.419><c> change</c><00:29:01.780><c> but</c><00:29:02.409><c> we</c><00:29:02.559><c> made</c><00:29:02.740><c> this</c><00:29:02.890><c> sort</c><00:29:03.100><c> of</c>

00:29:03.180 --> 00:29:03.190 align:start position:0%
to change but we made this sort of
 

00:29:03.190 --> 00:29:05.010 align:start position:0%
to change but we made this sort of
implicit<00:29:03.520><c> promise</c><00:29:04.030><c> with</c><00:29:04.210><c> hashmap</c><00:29:04.630><c> not</c><00:29:04.870><c> to</c>

00:29:05.010 --> 00:29:05.020 align:start position:0%
implicit promise with hashmap not to
 

00:29:05.020 --> 00:29:07.049 align:start position:0%
implicit promise with hashmap not to
change<00:29:05.260><c> it</c><00:29:05.350><c> very</c><00:29:05.500><c> often</c><00:29:05.770><c> and</c><00:29:06.159><c> I</c><00:29:06.730><c> think</c><00:29:06.940><c> that</c>

00:29:07.049 --> 00:29:07.059 align:start position:0%
change it very often and I think that
 

00:29:07.059 --> 00:29:07.649 align:start position:0%
change it very often and I think that
was<00:29:07.210><c> a</c><00:29:07.240><c> mistake</c>

00:29:07.649 --> 00:29:07.659 align:start position:0%
was a mistake
 

00:29:07.659 --> 00:29:10.049 align:start position:0%
was a mistake
and<00:29:08.200><c> so</c><00:29:08.350><c> what</c><00:29:08.500><c> we're</c><00:29:08.650><c> doing</c><00:29:08.679><c> here</c><00:29:08.950><c> is</c><00:29:09.460><c> we</c><00:29:10.030><c> have</c>

00:29:10.049 --> 00:29:10.059 align:start position:0%
and so what we're doing here is we have
 

00:29:10.059 --> 00:29:12.779 align:start position:0%
and so what we're doing here is we have
the<00:29:10.270><c> same</c><00:29:10.570><c> promise</c><00:29:10.870><c> which</c><00:29:11.289><c> is</c><00:29:11.500><c> the</c><00:29:12.400><c> elements</c>

00:29:12.779 --> 00:29:12.789 align:start position:0%
the same promise which is the elements
 

00:29:12.789 --> 00:29:15.060 align:start position:0%
the same promise which is the elements
are<00:29:13.210><c> returned</c><00:29:13.570><c> in</c><00:29:13.780><c> no</c><00:29:13.990><c> particular</c><00:29:14.169><c> order</c><00:29:14.470><c> but</c>

00:29:15.060 --> 00:29:15.070 align:start position:0%
are returned in no particular order but
 

00:29:15.070 --> 00:29:16.289 align:start position:0%
are returned in no particular order but
we<00:29:15.250><c> were</c><00:29:15.400><c> going</c><00:29:15.610><c> to</c><00:29:15.700><c> change</c><00:29:15.880><c> it</c><00:29:16.090><c> pretty</c>

00:29:16.289 --> 00:29:16.299 align:start position:0%
we were going to change it pretty
 

00:29:16.299 --> 00:29:18.480 align:start position:0%
we were going to change it pretty
frequently<00:29:16.750><c> to</c><00:29:17.200><c> make</c><00:29:17.409><c> sure</c><00:29:17.710><c> that</c><00:29:18.130><c> code</c><00:29:18.460><c> that</c>

00:29:18.480 --> 00:29:18.490 align:start position:0%
frequently to make sure that code that
 

00:29:18.490 --> 00:29:22.980 align:start position:0%
frequently to make sure that code that
uses<00:29:19.030><c> this</c><00:29:19.419><c> is</c><00:29:19.980><c> resilient</c><00:29:20.980><c> to</c><00:29:21.809><c> changing</c><00:29:22.809><c> of</c>

00:29:22.980 --> 00:29:22.990 align:start position:0%
uses this is resilient to changing of
 

00:29:22.990 --> 00:29:25.020 align:start position:0%
uses this is resilient to changing of
iteration<00:29:23.650><c> order</c><00:29:23.980><c> and</c><00:29:24.250><c> I'm</c><00:29:24.490><c> hoping</c><00:29:24.850><c> that</c>

00:29:25.020 --> 00:29:25.030 align:start position:0%
iteration order and I'm hoping that
 

00:29:25.030 --> 00:29:26.880 align:start position:0%
iteration order and I'm hoping that
everybody<00:29:25.299><c> has</c><00:29:25.630><c> a</c><00:29:25.990><c> continuous</c><00:29:26.770><c> integration</c>

00:29:26.880 --> 00:29:26.890 align:start position:0%
everybody has a continuous integration
 

00:29:26.890 --> 00:29:28.799 align:start position:0%
everybody has a continuous integration
system<00:29:27.580><c> that</c><00:29:27.789><c> runs</c><00:29:27.909><c> the</c><00:29:28.120><c> tests</c><00:29:28.390><c> frequently</c>

00:29:28.799 --> 00:29:28.809 align:start position:0%
system that runs the tests frequently
 

00:29:28.809 --> 00:29:31.430 align:start position:0%
system that runs the tests frequently
that'll<00:29:29.230><c> flush</c><00:29:29.590><c> out</c><00:29:29.799><c> these</c><00:29:29.980><c> bugs</c><00:29:30.280><c> before</c>

00:29:31.430 --> 00:29:31.440 align:start position:0%
that'll flush out these bugs before
 

00:29:31.440 --> 00:29:35.100 align:start position:0%
that'll flush out these bugs before
before<00:29:32.440><c> they</c><00:29:32.590><c> reach</c><00:29:32.770><c> production</c><00:29:33.600><c> now</c><00:29:34.600><c> there's</c>

00:29:35.100 --> 00:29:35.110 align:start position:0%
before they reach production now there's
 

00:29:35.110 --> 00:29:36.899 align:start position:0%
before they reach production now there's
there's<00:29:35.470><c> also</c><00:29:35.710><c> an</c><00:29:35.950><c> investment</c><00:29:36.490><c> here</c><00:29:36.669><c> too</c>

00:29:36.899 --> 00:29:36.909 align:start position:0%
there's also an investment here too
 

00:29:36.909 --> 00:29:39.899 align:start position:0%
there's also an investment here too
which<00:29:37.179><c> is</c><00:29:37.360><c> that</c><00:29:37.570><c> we</c><00:29:38.140><c> may</c><00:29:38.320><c> want</c><00:29:38.500><c> to</c><00:29:38.650><c> change</c><00:29:39.220><c> the</c>

00:29:39.899 --> 00:29:39.909 align:start position:0%
which is that we may want to change the
 

00:29:39.909 --> 00:29:42.779 align:start position:0%
which is that we may want to change the
organization<00:29:40.120><c> of</c><00:29:40.929><c> these</c><00:29:41.830><c> new</c><00:29:42.100><c> set</c><00:29:42.429><c> and</c><00:29:42.460><c> map</c>

00:29:42.779 --> 00:29:42.789 align:start position:0%
organization of these new set and map
 

00:29:42.789 --> 00:29:45.510 align:start position:0%
organization of these new set and map
implementations<00:29:43.600><c> and</c><00:29:43.840><c> so</c><00:29:44.230><c> now</c><00:29:44.650><c> if</c><00:29:45.010><c> we</c><00:29:45.039><c> believe</c>

00:29:45.510 --> 00:29:45.520 align:start position:0%
implementations and so now if we believe
 

00:29:45.520 --> 00:29:47.659 align:start position:0%
implementations and so now if we believe
that<00:29:45.789><c> the</c><00:29:45.970><c> code</c><00:29:46.179><c> that's</c><00:29:46.419><c> using</c><00:29:46.900><c> these</c><00:29:47.080><c> is</c>

00:29:47.659 --> 00:29:47.669 align:start position:0%
that the code that's using these is
 

00:29:47.669 --> 00:29:49.950 align:start position:0%
that the code that's using these is
resilient<00:29:48.669><c> to</c><00:29:48.760><c> changes</c><00:29:49.120><c> in</c><00:29:49.150><c> iteration</c><00:29:49.570><c> order</c>

00:29:49.950 --> 00:29:49.960 align:start position:0%
resilient to changes in iteration order
 

00:29:49.960 --> 00:29:51.870 align:start position:0%
resilient to changes in iteration order
we<00:29:50.380><c> can</c><00:29:50.530><c> completely</c><00:29:51.039><c> rewrite</c><00:29:51.490><c> this</c><00:29:51.640><c> data</c>

00:29:51.870 --> 00:29:51.880 align:start position:0%
we can completely rewrite this data
 

00:29:51.880 --> 00:29:53.610 align:start position:0%
we can completely rewrite this data
structure<00:29:52.330><c> to</c><00:29:52.360><c> make</c><00:29:52.570><c> it</c><00:29:52.720><c> even</c><00:29:53.020><c> more</c><00:29:53.049><c> compact</c>

00:29:53.610 --> 00:29:53.620 align:start position:0%
structure to make it even more compact
 

00:29:53.620 --> 00:29:55.649 align:start position:0%
structure to make it even more compact
or<00:29:53.919><c> more</c><00:29:54.400><c> efficient</c><00:29:54.880><c> or</c><00:29:55.030><c> something</c><00:29:55.510><c> like</c><00:29:55.600><c> that</c>

00:29:55.649 --> 00:29:55.659 align:start position:0%
or more efficient or something like that
 

00:29:55.659 --> 00:29:59.120 align:start position:0%
or more efficient or something like that
and<00:29:56.289><c> if</c><00:29:56.950><c> that</c><00:29:57.100><c> changes</c><00:29:57.490><c> the</c><00:29:57.580><c> iteration</c><00:29:58.059><c> order</c>

00:29:59.120 --> 00:29:59.130 align:start position:0%
and if that changes the iteration order
 

00:29:59.130 --> 00:30:02.039 align:start position:0%
and if that changes the iteration order
doesn't<00:30:00.130><c> matter</c><00:30:00.340><c> because</c><00:30:00.880><c> all</c><00:30:01.390><c> the</c><00:30:01.720><c> code</c><00:30:01.900><c> out</c>

00:30:02.039 --> 00:30:02.049 align:start position:0%
doesn't matter because all the code out
 

00:30:02.049 --> 00:30:04.380 align:start position:0%
doesn't matter because all the code out
there<00:30:02.080><c> is</c><00:30:02.470><c> already</c><00:30:02.770><c> resilient</c><00:30:03.760><c> to</c><00:30:04.120><c> whatever</c>

00:30:04.380 --> 00:30:04.390 align:start position:0%
there is already resilient to whatever
 

00:30:04.390 --> 00:30:07.950 align:start position:0%
there is already resilient to whatever
iteration<00:30:05.169><c> order</c><00:30:05.470><c> that</c><00:30:06.360><c> that</c><00:30:07.360><c> it's</c><00:30:07.630><c> presented</c>

00:30:07.950 --> 00:30:07.960 align:start position:0%
iteration order that that it's presented
 

00:30:07.960 --> 00:30:11.180 align:start position:0%
iteration order that that it's presented
in<00:30:08.230><c> now</c><00:30:09.190><c> if</c><00:30:09.549><c> you</c><00:30:09.820><c> are</c><00:30:10.090><c> still</c><00:30:10.299><c> worried</c><00:30:10.900><c> about</c>

00:30:11.180 --> 00:30:11.190 align:start position:0%
in now if you are still worried about
 

00:30:11.190 --> 00:30:15.779 align:start position:0%
in now if you are still worried about
iteration<00:30:12.190><c> order</c><00:30:12.549><c> then</c><00:30:13.830><c> first</c><00:30:14.830><c> the</c><00:30:15.250><c> existing</c>

00:30:15.779 --> 00:30:15.789 align:start position:0%
iteration order then first the existing
 

00:30:15.789 --> 00:30:18.060 align:start position:0%
iteration order then first the existing
implementations<00:30:16.539><c> like</c><00:30:16.690><c> hash</c><00:30:17.140><c> map</c><00:30:17.409><c> and</c><00:30:17.679><c> hash</c>

00:30:18.060 --> 00:30:18.070 align:start position:0%
implementations like hash map and hash
 

00:30:18.070 --> 00:30:21.120 align:start position:0%
implementations like hash map and hash
that<00:30:18.370><c> are</c><00:30:18.580><c> not</c><00:30:19.090><c> changing</c><00:30:19.630><c> however</c><00:30:20.350><c> there's</c>

00:30:21.120 --> 00:30:21.130 align:start position:0%
that are not changing however there's
 

00:30:21.130 --> 00:30:22.200 align:start position:0%
that are not changing however there's
still<00:30:21.250><c> a</c><00:30:21.400><c> possibility</c><00:30:21.610><c> in</c><00:30:22.090><c> the</c><00:30:22.179><c> future</c>

00:30:22.200 --> 00:30:22.210 align:start position:0%
still a possibility in the future
 

00:30:22.210 --> 00:30:24.779 align:start position:0%
still a possibility in the future
release<00:30:23.200><c> of</c><00:30:23.350><c> the</c><00:30:23.409><c> JDK</c><00:30:23.590><c> we</c><00:30:24.010><c> might</c><00:30:24.280><c> need</c><00:30:24.490><c> to</c><00:30:24.549><c> make</c>

00:30:24.779 --> 00:30:24.789 align:start position:0%
release of the JDK we might need to make
 

00:30:24.789 --> 00:30:27.419 align:start position:0%
release of the JDK we might need to make
a<00:30:25.059><c> change</c><00:30:25.510><c> that</c><00:30:25.809><c> that</c><00:30:26.530><c> does</c><00:30:26.830><c> change</c><00:30:27.370><c> the</c>

00:30:27.419 --> 00:30:27.429 align:start position:0%
a change that that does change the
 

00:30:27.429 --> 00:30:29.520 align:start position:0%
a change that that does change the
iteration<00:30:27.970><c> order</c><00:30:28.210><c> if</c><00:30:28.690><c> that</c><00:30:29.049><c> is</c><00:30:29.200><c> a</c><00:30:29.230><c> problem</c>

00:30:29.520 --> 00:30:29.530 align:start position:0%
iteration order if that is a problem
 

00:30:29.530 --> 00:30:31.830 align:start position:0%
iteration order if that is a problem
then<00:30:30.190><c> you</c><00:30:30.400><c> should</c><00:30:30.580><c> use</c><00:30:30.610><c> linked</c><00:30:31.419><c> hash</c><00:30:31.570><c> map</c>

00:30:31.830 --> 00:30:31.840 align:start position:0%
then you should use linked hash map
 

00:30:31.840 --> 00:30:34.200 align:start position:0%
then you should use linked hash map
because<00:30:32.200><c> that</c><00:30:32.409><c> guarantees</c><00:30:33.190><c> a</c><00:30:33.490><c> particular</c>

00:30:34.200 --> 00:30:34.210 align:start position:0%
because that guarantees a particular
 

00:30:34.210 --> 00:30:36.270 align:start position:0%
because that guarantees a particular
iteration<00:30:34.720><c> order</c><00:30:35.380><c> or</c><00:30:35.530><c> you</c><00:30:35.830><c> can</c><00:30:35.950><c> use</c><00:30:36.070><c> something</c>

00:30:36.270 --> 00:30:36.280 align:start position:0%
iteration order or you can use something
 

00:30:36.280 --> 00:30:37.640 align:start position:0%
iteration order or you can use something
like<00:30:36.400><c> a</c><00:30:36.549><c> sorted</c><00:30:37.059><c> map</c>

00:30:37.640 --> 00:30:37.650 align:start position:0%
like a sorted map
 

00:30:37.650 --> 00:30:39.410 align:start position:0%
like a sorted map
that<00:30:37.980><c> that</c><00:30:38.250><c> also</c><00:30:38.400><c> guarantees</c><00:30:38.910><c> particular</c>

00:30:39.410 --> 00:30:39.420 align:start position:0%
that that also guarantees particular
 

00:30:39.420 --> 00:30:40.730 align:start position:0%
that that also guarantees particular
order<00:30:39.690><c> but</c><00:30:39.840><c> there's</c><00:30:39.990><c> some</c><00:30:40.200><c> additional</c>

00:30:40.730 --> 00:30:40.740 align:start position:0%
order but there's some additional
 

00:30:40.740 --> 00:30:42.890 align:start position:0%
order but there's some additional
expense<00:30:41.280><c> having</c><00:30:41.610><c> to</c><00:30:41.700><c> do</c><00:30:41.790><c> with</c><00:30:41.940><c> that</c><00:30:42.090><c> so</c><00:30:42.750><c> but</c>

00:30:42.890 --> 00:30:42.900 align:start position:0%
expense having to do with that so but
 

00:30:42.900 --> 00:30:44.720 align:start position:0%
expense having to do with that so but
that's<00:30:43.020><c> something</c><00:30:43.650><c> to</c><00:30:43.740><c> think</c><00:30:43.890><c> about</c><00:30:44.010><c> that</c><00:30:44.400><c> has</c>

00:30:44.720 --> 00:30:44.730 align:start position:0%
that's something to think about that has
 

00:30:44.730 --> 00:30:47.840 align:start position:0%
that's something to think about that has
has<00:30:45.300><c> been</c><00:30:45.510><c> a</c><00:30:45.540><c> problem</c><00:30:45.870><c> recurringly</c><00:30:46.740><c> that</c><00:30:47.280><c> that</c>

00:30:47.840 --> 00:30:47.850 align:start position:0%
has been a problem recurringly that that
 

00:30:47.850 --> 00:30:51.740 align:start position:0%
has been a problem recurringly that that
hasn't<00:30:48.060><c> gotten</c><00:30:48.360><c> enough</c><00:30:48.540><c> attention</c><00:30:50.570><c> all</c><00:30:51.570><c> right</c>

00:30:51.740 --> 00:30:51.750 align:start position:0%
hasn't gotten enough attention all right
 

00:30:51.750 --> 00:30:54.500 align:start position:0%
hasn't gotten enough attention all right
I<00:30:51.870><c> covered</c><00:30:52.500><c> most</c><00:30:52.710><c> of</c><00:30:52.860><c> this</c><00:30:52.950><c> already</c><00:30:53.130><c> I</c><00:30:53.940><c> do</c><00:30:54.270><c> want</c>

00:30:54.500 --> 00:30:54.510 align:start position:0%
I covered most of this already I do want
 

00:30:54.510 --> 00:30:56.870 align:start position:0%
I covered most of this already I do want
to<00:30:54.540><c> say</c><00:30:54.690><c> that</c><00:30:54.930><c> Java</c><00:30:55.260><c> is</c><00:30:55.380><c> not</c><00:30:55.470><c> unique</c><00:30:55.980><c> in</c><00:30:56.190><c> this</c><00:30:56.370><c> I</c>

00:30:56.870 --> 00:30:56.880 align:start position:0%
to say that Java is not unique in this I
 

00:30:56.880 --> 00:31:00.350 align:start position:0%
to say that Java is not unique in this I
think<00:30:57.270><c> other</c><00:30:57.600><c> systems</c><00:30:58.200><c> have</c><00:30:58.460><c> have</c><00:30:59.460><c> proceeded</c>

00:31:00.350 --> 00:31:00.360 align:start position:0%
think other systems have have proceeded
 

00:31:00.360 --> 00:31:02.690 align:start position:0%
think other systems have have proceeded
along<00:31:00.690><c> the</c><00:31:00.870><c> same</c><00:31:01.050><c> lines</c><00:31:01.350><c> in</c><00:31:01.710><c> particular</c><00:31:02.250><c> the</c>

00:31:02.690 --> 00:31:02.700 align:start position:0%
along the same lines in particular the
 

00:31:02.700 --> 00:31:06.530 align:start position:0%
along the same lines in particular the
go<00:31:02.910><c> language</c><00:31:03.390><c> has</c><00:31:03.750><c> had</c><00:31:04.520><c> math.random</c><00:31:05.540><c> actually</c>

00:31:06.530 --> 00:31:06.540 align:start position:0%
go language has had math.random actually
 

00:31:06.540 --> 00:31:09.440 align:start position:0%
go language has had math.random actually
randomized<00:31:07.350><c> iteration</c><00:31:07.980><c> order</c><00:31:08.340><c> since</c><00:31:08.880><c> day</c><00:31:09.210><c> one</c>

00:31:09.440 --> 00:31:09.450 align:start position:0%
randomized iteration order since day one
 

00:31:09.450 --> 00:31:10.850 align:start position:0%
randomized iteration order since day one
I<00:31:09.690><c> believe</c><00:31:09.840><c> or</c><00:31:10.110><c> at</c><00:31:10.170><c> least</c><00:31:10.290><c> since</c><00:31:10.470><c> one</c><00:31:10.620><c> point</c>

00:31:10.850 --> 00:31:10.860 align:start position:0%
I believe or at least since one point
 

00:31:10.860 --> 00:31:13.280 align:start position:0%
I believe or at least since one point
now<00:31:11.120><c> python</c><00:31:12.120><c> is</c><00:31:12.300><c> interesting</c><00:31:12.750><c> it's</c><00:31:12.870><c> gone</c><00:31:13.020><c> back</c>

00:31:13.280 --> 00:31:13.290 align:start position:0%
now python is interesting it's gone back
 

00:31:13.290 --> 00:31:16.220 align:start position:0%
now python is interesting it's gone back
and<00:31:13.470><c> forth</c><00:31:13.680><c> in</c><00:31:14.520><c> the</c><00:31:14.610><c> Python</c><00:31:14.910><c> 2x</c><00:31:15.120><c> there</c><00:31:16.050><c> was</c><00:31:16.200><c> a</c>

00:31:16.220 --> 00:31:16.230 align:start position:0%
and forth in the Python 2x there was a
 

00:31:16.230 --> 00:31:19.190 align:start position:0%
and forth in the Python 2x there was a
single<00:31:16.680><c> implementation</c><00:31:17.430><c> of</c><00:31:17.610><c> a</c><00:31:17.730><c> dict</c><00:31:18.000><c> and</c><00:31:18.270><c> it</c>

00:31:19.190 --> 00:31:19.200 align:start position:0%
single implementation of a dict and it
 

00:31:19.200 --> 00:31:20.810 align:start position:0%
single implementation of a dict and it
had<00:31:19.380><c> some</c><00:31:19.650><c> predictable</c><00:31:20.100><c> iteration</c><00:31:20.550><c> order</c>

00:31:20.810 --> 00:31:20.820 align:start position:0%
had some predictable iteration order
 

00:31:20.820 --> 00:31:24.770 align:start position:0%
had some predictable iteration order
between<00:31:21.630><c> versions</c><00:31:22.560><c> 3.0</c><00:31:23.070><c> and</c><00:31:23.250><c> 3.5</c><00:31:23.820><c> it</c><00:31:24.510><c> was</c>

00:31:24.770 --> 00:31:24.780 align:start position:0%
between versions 3.0 and 3.5 it was
 

00:31:24.780 --> 00:31:28.280 align:start position:0%
between versions 3.0 and 3.5 it was
actually<00:31:25.380><c> randomized</c><00:31:26.420><c> 3.6</c><00:31:27.420><c> they</c><00:31:27.960><c> got</c><00:31:28.080><c> a</c><00:31:28.110><c> new</c>

00:31:28.280 --> 00:31:28.290 align:start position:0%
actually randomized 3.6 they got a new
 

00:31:28.290 --> 00:31:29.600 align:start position:0%
actually randomized 3.6 they got a new
implementation<00:31:28.890><c> that</c><00:31:28.950><c> was</c><00:31:29.070><c> much</c><00:31:29.250><c> better</c><00:31:29.490><c> but</c>

00:31:29.600 --> 00:31:29.610 align:start position:0%
implementation that was much better but
 

00:31:29.610 --> 00:31:32.210 align:start position:0%
implementation that was much better but
actually<00:31:30.240><c> provides</c><00:31:30.540><c> predictable</c><00:31:31.220><c> iteration</c>

00:31:32.210 --> 00:31:32.220 align:start position:0%
actually provides predictable iteration
 

00:31:32.220 --> 00:31:33.650 align:start position:0%
actually provides predictable iteration
order<00:31:32.490><c> and</c><00:31:32.640><c> so</c><00:31:32.700><c> they</c><00:31:32.820><c> have</c><00:31:32.940><c> some</c><00:31:33.090><c> you</c><00:31:33.600><c> know</c>

00:31:33.650 --> 00:31:33.660 align:start position:0%
order and so they have some you know
 

00:31:33.660 --> 00:31:35.360 align:start position:0%
order and so they have some you know
like<00:31:34.140><c> us</c><00:31:34.350><c> they've</c><00:31:34.650><c> had</c><00:31:34.710><c> some</c><00:31:34.980><c> very</c><00:31:35.220><c> long</c>

00:31:35.360 --> 00:31:35.370 align:start position:0%
like us they've had some very long
 

00:31:35.370 --> 00:31:37.910 align:start position:0%
like us they've had some very long
discussions<00:31:36.030><c> about</c><00:31:36.210><c> whether</c><00:31:36.920><c> randomization</c>

00:31:37.910 --> 00:31:37.920 align:start position:0%
discussions about whether randomization
 

00:31:37.920 --> 00:31:39.740 align:start position:0%
discussions about whether randomization
was<00:31:38.070><c> good</c><00:31:38.250><c> or</c><00:31:38.460><c> predictable</c><00:31:39.030><c> iteration</c><00:31:39.510><c> order</c>

00:31:39.740 --> 00:31:39.750 align:start position:0%
was good or predictable iteration order
 

00:31:39.750 --> 00:31:43.340 align:start position:0%
was good or predictable iteration order
was<00:31:39.930><c> good</c><00:31:40.170><c> it's</c><00:31:41.010><c> actually</c><00:31:41.960><c> it's</c><00:31:42.960><c> interesting</c>

00:31:43.340 --> 00:31:43.350 align:start position:0%
was good it's actually it's interesting
 

00:31:43.350 --> 00:31:46.310 align:start position:0%
was good it's actually it's interesting
to<00:31:43.680><c> watch</c><00:31:43.800><c> those</c><00:31:44.100><c> because</c><00:31:44.490><c> I'm</c><00:31:44.790><c> you</c><00:31:45.750><c> know</c><00:31:45.870><c> it's</c>

00:31:46.310 --> 00:31:46.320 align:start position:0%
to watch those because I'm you know it's
 

00:31:46.320 --> 00:31:48.590 align:start position:0%
to watch those because I'm you know it's
a<00:31:46.380><c> completely</c><00:31:46.530><c> different</c><00:31:47.040><c> system</c><00:31:47.700><c> from</c><00:31:48.330><c> Java</c>

00:31:48.590 --> 00:31:48.600 align:start position:0%
a completely different system from Java
 

00:31:48.600 --> 00:31:53.360 align:start position:0%
a completely different system from Java
but<00:31:49.140><c> they're</c><00:31:49.710><c> having</c><00:31:49.800><c> the</c><00:31:50.010><c> same</c><00:31:50.160><c> arguments</c><00:31:52.370><c> so</c>

00:31:53.360 --> 00:31:53.370 align:start position:0%
but they're having the same arguments so
 

00:31:53.370 --> 00:31:55.190 align:start position:0%
but they're having the same arguments so
again<00:31:53.700><c> I</c><00:31:53.910><c> want</c><00:31:54.060><c> to</c><00:31:54.120><c> reiterate</c><00:31:54.240><c> that</c><00:31:54.600><c> the</c>

00:31:55.190 --> 00:31:55.200 align:start position:0%
again I want to reiterate that the
 

00:31:55.200 --> 00:31:57.110 align:start position:0%
again I want to reiterate that the
randomized<00:31:55.770><c> iteration</c><00:31:56.310><c> order</c><00:31:56.520><c> applies</c><00:31:56.760><c> only</c>

00:31:57.110 --> 00:31:57.120 align:start position:0%
randomized iteration order applies only
 

00:31:57.120 --> 00:31:59.690 align:start position:0%
randomized iteration order applies only
to<00:31:57.600><c> the</c><00:31:58.110><c> new</c><00:31:58.290><c> collections</c><00:31:58.830><c> that</c><00:31:59.040><c> you</c><00:31:59.100><c> get</c><00:31:59.400><c> from</c>

00:31:59.690 --> 00:31:59.700 align:start position:0%
to the new collections that you get from
 

00:31:59.700 --> 00:32:01.760 align:start position:0%
to the new collections that you get from
set<00:32:00.090><c> thought</c><00:32:00.300><c> of</c><00:32:00.480><c> and</c><00:32:00.720><c> math</c><00:32:01.170><c> thought</c><00:32:01.410><c> of</c><00:32:01.560><c> so</c>

00:32:01.760 --> 00:32:01.770 align:start position:0%
set thought of and math thought of so
 

00:32:01.770 --> 00:32:03.740 align:start position:0%
set thought of and math thought of so
the<00:32:01.890><c> existing</c><00:32:02.340><c> hashmap</c><00:32:02.790><c> implementations</c><00:32:03.540><c> are</c>

00:32:03.740 --> 00:32:03.750 align:start position:0%
the existing hashmap implementations are
 

00:32:03.750 --> 00:32:07.850 align:start position:0%
the existing hashmap implementations are
not<00:32:04.260><c> changing</c><00:32:04.710><c> as</c><00:32:04.800><c> part</c><00:32:05.040><c> of</c><00:32:05.100><c> this</c><00:32:06.710><c> all</c><00:32:07.710><c> right</c>

00:32:07.850 --> 00:32:07.860 align:start position:0%
not changing as part of this all right
 

00:32:07.860 --> 00:32:12.950 align:start position:0%
not changing as part of this all right
so<00:32:08.670><c> moving</c><00:32:09.120><c> on</c><00:32:10.310><c> so</c><00:32:11.310><c> if</c><00:32:12.120><c> you</c><00:32:12.270><c> think</c><00:32:12.450><c> about</c><00:32:12.600><c> the</c>

00:32:12.950 --> 00:32:12.960 align:start position:0%
so moving on so if you think about the
 

00:32:12.960 --> 00:32:16.160 align:start position:0%
so moving on so if you think about the
the<00:32:13.320><c> the</c><00:32:13.350><c> the</c><00:32:13.910><c> origin</c><00:32:14.910><c> of</c><00:32:14.940><c> this</c><00:32:15.420><c> feature</c><00:32:15.660><c> was</c>

00:32:16.160 --> 00:32:16.170 align:start position:0%
the the the origin of this feature was
 

00:32:16.170 --> 00:32:19.340 align:start position:0%
the the the origin of this feature was
in<00:32:16.380><c> collection</c><00:32:16.980><c> literals</c><00:32:17.340><c> so</c><00:32:17.810><c> the</c><00:32:18.810><c> idea</c><00:32:19.110><c> there</c>

00:32:19.340 --> 00:32:19.350 align:start position:0%
in collection literals so the idea there
 

00:32:19.350 --> 00:32:21.590 align:start position:0%
in collection literals so the idea there
is<00:32:19.380><c> you</c><00:32:19.620><c> want</c><00:32:20.040><c> to</c><00:32:20.130><c> declare</c><00:32:20.280><c> a</c><00:32:20.910><c> collection</c><00:32:21.510><c> of</c>

00:32:21.590 --> 00:32:21.600 align:start position:0%
is you want to declare a collection of
 

00:32:21.600 --> 00:32:24.170 align:start position:0%
is you want to declare a collection of
some<00:32:21.780><c> type</c><00:32:21.990><c> and</c><00:32:22.490><c> explicitly</c><00:32:23.490><c> list</c><00:32:23.850><c> out</c><00:32:24.000><c> the</c>

00:32:24.170 --> 00:32:24.180 align:start position:0%
some type and explicitly list out the
 

00:32:24.180 --> 00:32:26.420 align:start position:0%
some type and explicitly list out the
elements<00:32:24.630><c> that</c><00:32:24.960><c> would</c><00:32:25.140><c> be</c><00:32:25.290><c> in</c><00:32:25.470><c> it</c><00:32:25.590><c> so</c><00:32:26.010><c> certain</c>

00:32:26.420 --> 00:32:26.430 align:start position:0%
elements that would be in it so certain
 

00:32:26.430 --> 00:32:31.190 align:start position:0%
elements that would be in it so certain
things<00:32:26.610><c> like</c><00:32:27.000><c> well</c><00:32:27.660><c> set</c><00:32:28.530><c> and</c><00:32:28.770><c> map</c><00:32:28.950><c> again</c><00:32:30.200><c> what</c>

00:32:31.190 --> 00:32:31.200 align:start position:0%
things like well set and map again what
 

00:32:31.200 --> 00:32:32.840 align:start position:0%
things like well set and map again what
should<00:32:31.320><c> be</c><00:32:31.440><c> the</c><00:32:31.530><c> behavior</c><00:32:31.680><c> if</c><00:32:32.250><c> you</c><00:32:32.280><c> list</c><00:32:32.670><c> the</c>

00:32:32.840 --> 00:32:32.850 align:start position:0%
should be the behavior if you list the
 

00:32:32.850 --> 00:32:38.890 align:start position:0%
should be the behavior if you list the
same<00:32:33.500><c> same</c><00:32:34.500><c> element</c><00:32:34.980><c> multiple</c><00:32:35.940><c> times</c>

00:32:38.890 --> 00:32:38.900 align:start position:0%
 
 

00:32:38.900 --> 00:32:42.190 align:start position:0%
 
so<00:32:39.800><c> if</c><00:32:40.760><c> you're</c><00:32:41.240><c> writing</c><00:32:41.540><c> out</c><00:32:41.600><c> the</c><00:32:41.750><c> elements</c><00:32:42.140><c> in</c>

00:32:42.190 --> 00:32:42.200 align:start position:0%
so if you're writing out the elements in
 

00:32:42.200 --> 00:32:43.960 align:start position:0%
so if you're writing out the elements in
the<00:32:42.260><c> collection</c><00:32:42.380><c> literal</c><00:32:42.980><c> that's</c><00:32:43.340><c> probably</c><00:32:43.880><c> a</c>

00:32:43.960 --> 00:32:43.970 align:start position:0%
the collection literal that's probably a
 

00:32:43.970 --> 00:32:46.600 align:start position:0%
the collection literal that's probably a
programming<00:32:44.540><c> error</c><00:32:44.780><c> now</c><00:32:45.350><c> what</c><00:32:45.890><c> what</c><00:32:46.370><c> many</c>

00:32:46.600 --> 00:32:46.610 align:start position:0%
programming error now what what many
 

00:32:46.610 --> 00:32:48.730 align:start position:0%
programming error now what what many
other<00:32:46.790><c> systems</c><00:32:47.210><c> do</c><00:32:47.450><c> is</c><00:32:47.780><c> they</c><00:32:48.020><c> they</c><00:32:48.290><c> apply</c><00:32:48.530><c> some</c>

00:32:48.730 --> 00:32:48.740 align:start position:0%
other systems do is they they apply some
 

00:32:48.740 --> 00:32:53.350 align:start position:0%
other systems do is they they apply some
rule<00:32:48.950><c> like</c><00:32:49.220><c> last</c><00:32:49.610><c> one</c><00:32:49.880><c> wins</c><00:32:50.180><c> and</c><00:32:51.110><c> I</c><00:32:52.150><c> think</c><00:32:53.150><c> what</c>

00:32:53.350 --> 00:32:53.360 align:start position:0%
rule like last one wins and I think what
 

00:32:53.360 --> 00:32:58.000 align:start position:0%
rule like last one wins and I think what
what<00:32:53.720><c> that</c><00:32:53.900><c> tends</c><00:32:54.350><c> to</c><00:32:54.590><c> do</c><00:32:54.770><c> is</c><00:32:55.190><c> is</c><00:32:55.850><c> let</c><00:32:57.010><c> subtle</c>

00:32:58.000 --> 00:32:58.010 align:start position:0%
what that tends to do is is let subtle
 

00:32:58.010 --> 00:33:01.030 align:start position:0%
what that tends to do is is let subtle
bugs<00:32:58.900><c> creep</c><00:32:59.900><c> into</c><00:33:00.110><c> production</c><00:33:00.650><c> so</c><00:33:00.860><c> if</c><00:33:00.950><c> you</c>

00:33:01.030 --> 00:33:01.040 align:start position:0%
bugs creep into production so if you
 

00:33:01.040 --> 00:33:05.049 align:start position:0%
bugs creep into production so if you
have<00:33:01.250><c> if</c><00:33:01.820><c> you</c><00:33:01.880><c> have</c><00:33:01.970><c> a</c><00:33:02.120><c> map</c><00:33:02.390><c> actually</c><00:33:04.059><c> yeah</c>

00:33:05.049 --> 00:33:05.059 align:start position:0%
have if you have a map actually yeah
 

00:33:05.059 --> 00:33:06.580 align:start position:0%
have if you have a map actually yeah
there<00:33:05.270><c> there</c><00:33:05.510><c> are</c><00:33:05.660><c> a</c><00:33:05.690><c> couple</c><00:33:05.900><c> other</c><00:33:06.080><c> systems</c>

00:33:06.580 --> 00:33:06.590 align:start position:0%
there there are a couple other systems
 

00:33:06.590 --> 00:33:09.070 align:start position:0%
there there are a couple other systems
that<00:33:06.860><c> that</c><00:33:07.190><c> actually</c><00:33:07.640><c> detect</c><00:33:08.000><c> duplicates</c><00:33:08.420><c> win</c>

00:33:09.070 --> 00:33:09.080 align:start position:0%
that that actually detect duplicates win
 

00:33:09.080 --> 00:33:11.799 align:start position:0%
that that actually detect duplicates win
at<00:33:09.320><c> initialization</c><00:33:10.250><c> time</c><00:33:10.490><c> but</c><00:33:11.480><c> let</c><00:33:11.600><c> me</c><00:33:11.690><c> show</c>

00:33:11.799 --> 00:33:11.809 align:start position:0%
at initialization time but let me show
 

00:33:11.809 --> 00:33:13.780 align:start position:0%
at initialization time but let me show
you<00:33:11.900><c> an</c><00:33:12.020><c> example</c><00:33:12.080><c> here</c><00:33:12.650><c> so</c><00:33:12.800><c> this</c><00:33:13.429><c> is</c><00:33:13.580><c> a</c><00:33:13.610><c> very</c>

00:33:13.780 --> 00:33:13.790 align:start position:0%
you an example here so this is a very
 

00:33:13.790 --> 00:33:15.160 align:start position:0%
you an example here so this is a very
similar<00:33:13.970><c> example</c><00:33:14.480><c> to</c><00:33:14.570><c> what</c><00:33:14.690><c> I</c><00:33:14.720><c> showed</c><00:33:14.960><c> earlier</c>

00:33:15.160 --> 00:33:15.170 align:start position:0%
similar example to what I showed earlier
 

00:33:15.170 --> 00:33:17.919 align:start position:0%
similar example to what I showed earlier
where<00:33:15.679><c> you</c><00:33:15.800><c> want</c><00:33:15.980><c> to</c><00:33:16.100><c> initialize</c><00:33:16.580><c> a</c><00:33:16.880><c> map</c><00:33:17.510><c> with</c>

00:33:17.919 --> 00:33:17.929 align:start position:0%
where you want to initialize a map with
 

00:33:17.929 --> 00:33:20.470 align:start position:0%
where you want to initialize a map with
a<00:33:18.200><c> bunch</c><00:33:18.470><c> of</c><00:33:18.740><c> math</c><00:33:19.160><c> entries</c><00:33:19.580><c> now</c><00:33:20.030><c> it</c><00:33:20.150><c> turns</c><00:33:20.300><c> out</c>

00:33:20.470 --> 00:33:20.480 align:start position:0%
a bunch of math entries now it turns out
 

00:33:20.480 --> 00:33:23.049 align:start position:0%
a bunch of math entries now it turns out
there's<00:33:20.660><c> a</c><00:33:20.750><c> duplicate</c><00:33:21.170><c> in</c><00:33:21.230><c> here</c><00:33:21.559><c> and</c><00:33:22.400><c> if</c><00:33:22.970><c> you</c>

00:33:23.049 --> 00:33:23.059 align:start position:0%
there's a duplicate in here and if you
 

00:33:23.059 --> 00:33:24.250 align:start position:0%
there's a duplicate in here and if you
have<00:33:23.150><c> sharp</c><00:33:23.360><c> eyes</c><00:33:23.540><c> you'll</c><00:33:23.750><c> be</c><00:33:23.809><c> able</c><00:33:23.929><c> to</c><00:33:24.080><c> spot</c>

00:33:24.250 --> 00:33:24.260 align:start position:0%
have sharp eyes you'll be able to spot
 

00:33:24.260 --> 00:33:26.140 align:start position:0%
have sharp eyes you'll be able to spot
it<00:33:24.440><c> pretty</c><00:33:24.620><c> quickly</c><00:33:24.890><c> but</c><00:33:25.550><c> there</c><00:33:25.700><c> are</c><00:33:25.760><c> a</c><00:33:25.790><c> lot</c><00:33:25.850><c> of</c>

00:33:26.140 --> 00:33:26.150 align:start position:0%
it pretty quickly but there are a lot of
 

00:33:26.150 --> 00:33:31.870 align:start position:0%
it pretty quickly but there are a lot of
them<00:33:26.330><c> and</c><00:33:28.270><c> in</c><00:33:29.270><c> if</c><00:33:30.140><c> you</c><00:33:30.590><c> are</c><00:33:30.710><c> just</c><00:33:31.010><c> initializing</c>

00:33:31.870 --> 00:33:31.880 align:start position:0%
them and in if you are just initializing
 

00:33:31.880 --> 00:33:34.870 align:start position:0%
them and in if you are just initializing
a<00:33:31.970><c> map</c><00:33:32.179><c> using</c><00:33:32.690><c> the</c><00:33:32.840><c> put</c><00:33:33.080><c> calls</c><00:33:33.380><c> then</c><00:33:34.010><c> the</c><00:33:34.610><c> the</c>

00:33:34.870 --> 00:33:34.880 align:start position:0%
a map using the put calls then the the
 

00:33:34.880 --> 00:33:38.710 align:start position:0%
a map using the put calls then the the
later<00:33:35.059><c> one</c><00:33:35.330><c> would</c><00:33:35.870><c> would</c><00:33:36.850><c> would</c><00:33:37.850><c> replace</c><00:33:38.240><c> the</c>

00:33:38.710 --> 00:33:38.720 align:start position:0%
later one would would would replace the
 

00:33:38.720 --> 00:33:40.510 align:start position:0%
later one would would would replace the
previous<00:33:39.080><c> one</c><00:33:39.290><c> and</c><00:33:39.470><c> so</c><00:33:39.890><c> you</c><00:33:39.950><c> might</c><00:33:40.130><c> I</c><00:33:40.340><c> actually</c>

00:33:40.510 --> 00:33:40.520 align:start position:0%
previous one and so you might I actually
 

00:33:40.520 --> 00:33:42.490 align:start position:0%
previous one and so you might I actually
don't<00:33:40.850><c> know</c><00:33:40.940><c> how</c><00:33:41.090><c> many</c><00:33:41.150><c> elements</c><00:33:41.510><c> are</c><00:33:42.080><c> how</c>

00:33:42.490 --> 00:33:42.500 align:start position:0%
don't know how many elements are how
 

00:33:42.500 --> 00:33:43.600 align:start position:0%
don't know how many elements are how
many<00:33:42.650><c> entries</c><00:33:42.950><c> there</c><00:33:43.160><c> are</c><00:33:43.250><c> in</c><00:33:43.370><c> there</c><00:33:43.460><c> maybe</c>

00:33:43.600 --> 00:33:43.610 align:start position:0%
many entries there are in there maybe
 

00:33:43.610 --> 00:33:45.970 align:start position:0%
many entries there are in there maybe
they're<00:33:43.820><c> twelve</c><00:33:44.120><c> right</c><00:33:44.510><c> so</c><00:33:45.020><c> you</c><00:33:45.470><c> might</c><00:33:45.500><c> you</c>

00:33:45.970 --> 00:33:45.980 align:start position:0%
they're twelve right so you might you
 

00:33:45.980 --> 00:33:47.230 align:start position:0%
they're twelve right so you might you
might<00:33:46.130><c> count</c><00:33:46.400><c> the</c><00:33:46.520><c> lines</c><00:33:46.670><c> in</c><00:33:46.910><c> here</c><00:33:47.000><c> and</c><00:33:47.150><c> say</c>

00:33:47.230 --> 00:33:47.240 align:start position:0%
might count the lines in here and say
 

00:33:47.240 --> 00:33:48.669 align:start position:0%
might count the lines in here and say
there<00:33:47.420><c> are</c><00:33:47.480><c> twelve</c><00:33:47.660><c> entries</c><00:33:48.020><c> and</c><00:33:48.230><c> then</c>

00:33:48.669 --> 00:33:48.679 align:start position:0%
there are twelve entries and then
 

00:33:48.679 --> 00:33:50.560 align:start position:0%
there are twelve entries and then
there's<00:33:49.100><c> some</c><00:33:49.309><c> weird</c><00:33:49.550><c> problem</c><00:33:49.940><c> in</c><00:33:50.059><c> production</c>

00:33:50.560 --> 00:33:50.570 align:start position:0%
there's some weird problem in production
 

00:33:50.570 --> 00:33:52.290 align:start position:0%
there's some weird problem in production
and<00:33:50.780><c> you</c><00:33:50.870><c> go</c><00:33:50.990><c> to</c><00:33:51.050><c> debug</c><00:33:51.350><c> yet</c><00:33:51.530><c> and</c><00:33:51.679><c> it's</c><00:33:51.770><c> like</c>

00:33:52.290 --> 00:33:52.300 align:start position:0%
and you go to debug yet and it's like
 

00:33:52.300 --> 00:33:56.350 align:start position:0%
and you go to debug yet and it's like
huh<00:33:53.300><c> this</c><00:33:54.200><c> map</c><00:33:54.530><c> has</c><00:33:55.250><c> only</c><00:33:55.580><c> eleven</c><00:33:55.910><c> entries</c><00:33:56.210><c> in</c>

00:33:56.350 --> 00:33:56.360 align:start position:0%
huh this map has only eleven entries in
 

00:33:56.360 --> 00:33:58.660 align:start position:0%
huh this map has only eleven entries in
it<00:33:56.390><c> why</c><00:33:57.050><c> is</c><00:33:57.110><c> that</c><00:33:57.260><c> and</c><00:33:57.890><c> then</c><00:33:58.010><c> you</c><00:33:58.130><c> go</c><00:33:58.250><c> back</c><00:33:58.429><c> and</c>

00:33:58.660 --> 00:33:58.670 align:start position:0%
it why is that and then you go back and
 

00:33:58.670 --> 00:34:00.580 align:start position:0%
it why is that and then you go back and
you<00:33:58.760><c> stare</c><00:33:59.030><c> at</c><00:33:59.059><c> this</c><00:33:59.300><c> and</c><00:33:59.510><c> you</c><00:33:59.900><c> might</c><00:34:00.050><c> spot</c><00:34:00.380><c> the</c>

00:34:00.580 --> 00:34:00.590 align:start position:0%
you stare at this and you might spot the
 

00:34:00.590 --> 00:34:02.590 align:start position:0%
you stare at this and you might spot the
might<00:34:01.130><c> might</c><00:34:01.429><c> spot</c><00:34:01.640><c> the</c><00:34:01.760><c> problem</c><00:34:01.880><c> immediately</c>

00:34:02.590 --> 00:34:02.600 align:start position:0%
might might spot the problem immediately
 

00:34:02.600 --> 00:34:04.960 align:start position:0%
might might spot the problem immediately
or<00:34:02.780><c> if</c><00:34:03.380><c> it</c><00:34:03.530><c> were</c><00:34:03.710><c> like</c><00:34:04.190><c> 1:30</c><00:34:04.700><c> in</c><00:34:04.850><c> the</c><00:34:04.880><c> morning</c>

00:34:04.960 --> 00:34:04.970 align:start position:0%
or if it were like 1:30 in the morning
 

00:34:04.970 --> 00:34:06.700 align:start position:0%
or if it were like 1:30 in the morning
because<00:34:05.480><c> you</c><00:34:05.510><c> got</c><00:34:05.750><c> pulled</c><00:34:06.290><c> out</c><00:34:06.380><c> of</c><00:34:06.410><c> your</c><00:34:06.530><c> bed</c>

00:34:06.700 --> 00:34:06.710 align:start position:0%
because you got pulled out of your bed
 

00:34:06.710 --> 00:34:08.560 align:start position:0%
because you got pulled out of your bed
by<00:34:06.860><c> a</c><00:34:06.890><c> pager</c><00:34:07.130><c> call</c><00:34:07.460><c> it</c><00:34:07.790><c> might</c><00:34:08.000><c> take</c><00:34:08.179><c> you</c><00:34:08.270><c> a</c><00:34:08.330><c> long</c>

00:34:08.560 --> 00:34:08.570 align:start position:0%
by a pager call it might take you a long
 

00:34:08.570 --> 00:34:11.440 align:start position:0%
by a pager call it might take you a long
time<00:34:08.899><c> to</c><00:34:09.379><c> see</c><00:34:09.530><c> this</c><00:34:09.710><c> and</c><00:34:09.980><c> so</c><00:34:10.700><c> so</c><00:34:11.120><c> what</c><00:34:11.210><c> we</c><00:34:11.330><c> do</c>

00:34:11.440 --> 00:34:11.450 align:start position:0%
time to see this and so so what we do
 

00:34:11.450 --> 00:34:13.780 align:start position:0%
time to see this and so so what we do
instead<00:34:11.629><c> is</c><00:34:12.139><c> if</c><00:34:12.379><c> you're</c><00:34:12.830><c> listing</c><00:34:13.280><c> out</c><00:34:13.460><c> the</c>

00:34:13.780 --> 00:34:13.790 align:start position:0%
instead is if you're listing out the
 

00:34:13.790 --> 00:34:15.700 align:start position:0%
instead is if you're listing out the
elements<00:34:14.480><c> like</c><00:34:14.629><c> this</c><00:34:14.810><c> it's</c><00:34:15.110><c> probably</c><00:34:15.679><c> a</c>

00:34:15.700 --> 00:34:15.710 align:start position:0%
elements like this it's probably a
 

00:34:15.710 --> 00:34:19.330 align:start position:0%
elements like this it's probably a
mistake<00:34:16.190><c> if</c><00:34:16.490><c> you</c><00:34:16.760><c> have</c><00:34:17.919><c> duplicate</c><00:34:18.919><c> elements</c>

00:34:19.330 --> 00:34:19.340 align:start position:0%
mistake if you have duplicate elements
 

00:34:19.340 --> 00:34:20.889 align:start position:0%
mistake if you have duplicate elements
because<00:34:19.639><c> what</c><00:34:19.790><c> it</c><00:34:19.909><c> means</c><00:34:20.090><c> is</c><00:34:20.240><c> that</c><00:34:20.270><c> you</c><00:34:20.690><c> put</c>

00:34:20.889 --> 00:34:20.899 align:start position:0%
because what it means is that you put
 

00:34:20.899 --> 00:34:21.909 align:start position:0%
because what it means is that you put
something<00:34:21.110><c> in</c><00:34:21.290><c> there</c><00:34:21.470><c> that</c><00:34:21.649><c> is</c><00:34:21.679><c> actually</c>

00:34:21.909 --> 00:34:21.919 align:start position:0%
something in there that is actually
 

00:34:21.919 --> 00:34:24.580 align:start position:0%
something in there that is actually
being<00:34:22.399><c> ignored</c><00:34:22.790><c> so</c><00:34:23.510><c> what</c><00:34:23.899><c> we</c><00:34:24.020><c> do</c><00:34:24.139><c> we</c><00:34:24.320><c> can't</c>

00:34:24.580 --> 00:34:24.590 align:start position:0%
being ignored so what we do we can't
 

00:34:24.590 --> 00:34:26.430 align:start position:0%
being ignored so what we do we can't
catch<00:34:24.830><c> that</c><00:34:25.070><c> at</c><00:34:25.250><c> compile</c><00:34:25.610><c> time</c><00:34:25.639><c> unfortunately</c>

00:34:26.430 --> 00:34:26.440 align:start position:0%
catch that at compile time unfortunately
 

00:34:26.440 --> 00:34:29.470 align:start position:0%
catch that at compile time unfortunately
ideally<00:34:27.440><c> it</c><00:34:27.560><c> would</c><00:34:27.710><c> be</c><00:34:27.860><c> but</c><00:34:28.190><c> we</c><00:34:29.149><c> do</c><00:34:29.270><c> catch</c><00:34:29.450><c> it</c>

00:34:29.470 --> 00:34:29.480 align:start position:0%
ideally it would be but we do catch it
 

00:34:29.480 --> 00:34:32.590 align:start position:0%
ideally it would be but we do catch it
at<00:34:29.690><c> run</c><00:34:29.840><c> time</c><00:34:29.870><c> so</c><00:34:30.260><c> as</c><00:34:30.379><c> soon</c><00:34:30.620><c> as</c><00:34:30.919><c> map</c><00:34:31.790><c> dot</c><00:34:32.360><c> of</c>

00:34:32.590 --> 00:34:32.600 align:start position:0%
at run time so as soon as map dot of
 

00:34:32.600 --> 00:34:35.680 align:start position:0%
at run time so as soon as map dot of
entries<00:34:33.320><c> or</c><00:34:33.620><c> map</c><00:34:33.800><c> thought</c><00:34:34.040><c> of</c><00:34:34.510><c> tries</c><00:34:35.510><c> to</c>

00:34:35.680 --> 00:34:35.690 align:start position:0%
entries or map thought of tries to
 

00:34:35.690 --> 00:34:40.270 align:start position:0%
entries or map thought of tries to
initialize<00:34:36.110><c> a</c><00:34:36.470><c> map</c><00:34:37.149><c> with</c><00:34:38.649><c> duplicate</c><00:34:39.649><c> keys</c><00:34:39.919><c> it</c>

00:34:40.270 --> 00:34:40.280 align:start position:0%
initialize a map with duplicate keys it
 

00:34:40.280 --> 00:34:42.790 align:start position:0%
initialize a map with duplicate keys it
will<00:34:40.669><c> throw</c><00:34:40.909><c> runtime</c><00:34:41.360><c> exception</c><00:34:41.870><c> and</c><00:34:42.620><c> the</c>

00:34:42.790 --> 00:34:42.800 align:start position:0%
will throw runtime exception and the
 

00:34:42.800 --> 00:34:46.040 align:start position:0%
will throw runtime exception and the
same<00:34:43.010><c> thing</c><00:34:43.190><c> applies</c><00:34:43.460><c> to</c><00:34:43.490><c> set</c><00:34:43.970><c> dot</c><00:34:44.179><c> off</c>

00:34:46.040 --> 00:34:46.050 align:start position:0%
same thing applies to set dot off
 

00:34:46.050 --> 00:34:47.790 align:start position:0%
same thing applies to set dot off
alright<00:34:47.050><c> let</c><00:34:47.169><c> me</c><00:34:47.200><c> talk</c><00:34:47.379><c> about</c><00:34:47.560><c> space</c>

00:34:47.790 --> 00:34:47.800 align:start position:0%
alright let me talk about space
 

00:34:47.800 --> 00:34:50.790 align:start position:0%
alright let me talk about space
efficiency<00:34:48.250><c> now</c><00:34:49.290><c> so</c><00:34:50.290><c> one</c><00:34:50.530><c> thing</c><00:34:50.679><c> you</c><00:34:50.740><c> might</c>

00:34:50.790 --> 00:34:50.800 align:start position:0%
efficiency now so one thing you might
 

00:34:50.800 --> 00:34:52.919 align:start position:0%
efficiency now so one thing you might
notice<00:34:51.040><c> is</c><00:34:51.520><c> that</c><00:34:51.550><c> this</c><00:34:51.909><c> is</c><00:34:52.090><c> a</c><00:34:52.119><c> departure</c><00:34:52.510><c> from</c>

00:34:52.919 --> 00:34:52.929 align:start position:0%
notice is that this is a departure from
 

00:34:52.929 --> 00:34:56.399 align:start position:0%
notice is that this is a departure from
the<00:34:53.429><c> from</c><00:34:54.429><c> the</c><00:34:54.520><c> API</c><00:34:54.790><c> of</c><00:34:55.210><c> the</c><00:34:56.020><c> previous</c>

00:34:56.399 --> 00:34:56.409 align:start position:0%
the from the API of the previous
 

00:34:56.409 --> 00:34:57.990 align:start position:0%
the from the API of the previous
collection<00:34:56.740><c> frameworks</c><00:34:57.160><c> the</c><00:34:57.610><c> the</c><00:34:57.820><c> way</c><00:34:57.970><c> that</c>

00:34:57.990 --> 00:34:58.000 align:start position:0%
collection frameworks the the way that
 

00:34:58.000 --> 00:35:02.190 align:start position:0%
collection frameworks the the way that
that<00:34:58.630><c> the</c><00:34:59.080><c> collection</c><00:34:59.440><c> framework</c><00:35:01.200><c> existing</c>

00:35:02.190 --> 00:35:02.200 align:start position:0%
that the collection framework existing
 

00:35:02.200 --> 00:35:04.650 align:start position:0%
that the collection framework existing
classes<00:35:02.410><c> work</c><00:35:02.770><c> is</c><00:35:03.130><c> they</c><00:35:03.610><c> would</c><00:35:03.760><c> expose</c><00:35:04.270><c> a</c>

00:35:04.650 --> 00:35:04.660 align:start position:0%
classes work is they would expose a
 

00:35:04.660 --> 00:35:07.950 align:start position:0%
classes work is they would expose a
public<00:35:05.440><c> class</c><00:35:05.950><c> that</c><00:35:06.850><c> was</c><00:35:07.090><c> an</c><00:35:07.270><c> implementation</c>

00:35:07.950 --> 00:35:07.960 align:start position:0%
public class that was an implementation
 

00:35:07.960 --> 00:35:10.500 align:start position:0%
public class that was an implementation
and<00:35:08.200><c> there</c><00:35:08.650><c> were</c><00:35:08.850><c> there</c><00:35:09.850><c> would</c><00:35:10.030><c> be</c><00:35:10.060><c> a</c><00:35:10.180><c> variety</c>

00:35:10.500 --> 00:35:10.510 align:start position:0%
and there were there would be a variety
 

00:35:10.510 --> 00:35:12.359 align:start position:0%
and there were there would be a variety
of<00:35:10.750><c> constructors</c><00:35:11.350><c> for</c><00:35:11.380><c> it</c><00:35:11.740><c> so</c><00:35:11.920><c> if</c><00:35:11.980><c> you</c><00:35:12.070><c> wanted</c>

00:35:12.359 --> 00:35:12.369 align:start position:0%
of constructors for it so if you wanted
 

00:35:12.369 --> 00:35:14.040 align:start position:0%
of constructors for it so if you wanted
if<00:35:12.700><c> you</c><00:35:12.760><c> wanted</c><00:35:12.970><c> a</c><00:35:13.030><c> hash</c><00:35:13.180><c> map</c><00:35:13.420><c> you'd</c><00:35:13.660><c> say</c><00:35:13.840><c> new</c>

00:35:14.040 --> 00:35:14.050 align:start position:0%
if you wanted a hash map you'd say new
 

00:35:14.050 --> 00:35:16.020 align:start position:0%
if you wanted a hash map you'd say new
hash<00:35:14.260><c> map</c><00:35:14.500><c> and</c><00:35:14.830><c> then</c><00:35:15.400><c> you</c><00:35:15.520><c> could</c><00:35:15.640><c> initialize</c>

00:35:16.020 --> 00:35:16.030 align:start position:0%
hash map and then you could initialize
 

00:35:16.030 --> 00:35:17.970 align:start position:0%
hash map and then you could initialize
that<00:35:16.210><c> with</c><00:35:16.360><c> a</c><00:35:16.390><c> size</c><00:35:16.660><c> or</c><00:35:17.050><c> you</c><00:35:17.470><c> can</c><00:35:17.619><c> initialize</c>

00:35:17.970 --> 00:35:17.980 align:start position:0%
that with a size or you can initialize
 

00:35:17.980 --> 00:35:19.620 align:start position:0%
that with a size or you can initialize
that<00:35:18.190><c> from</c><00:35:18.490><c> another</c><00:35:18.790><c> map</c><00:35:19.030><c> that</c><00:35:19.060><c> would</c><00:35:19.390><c> copy</c>

00:35:19.620 --> 00:35:19.630 align:start position:0%
that from another map that would copy
 

00:35:19.630 --> 00:35:23.250 align:start position:0%
that from another map that would copy
the<00:35:19.840><c> elements</c><00:35:20.230><c> in</c><00:35:20.440><c> and</c><00:35:21.510><c> there</c><00:35:22.510><c> are</c><00:35:22.540><c> no</c><00:35:22.840><c> public</c>

00:35:23.250 --> 00:35:23.260 align:start position:0%
the elements in and there are no public
 

00:35:23.260 --> 00:35:24.420 align:start position:0%
the elements in and there are no public
class<00:35:23.440><c> names</c><00:35:23.740><c> for</c><00:35:24.190><c> these</c><00:35:24.280><c> new</c>

00:35:24.420 --> 00:35:24.430 align:start position:0%
class names for these new
 

00:35:24.430 --> 00:35:26.310 align:start position:0%
class names for these new
implementations<00:35:25.150><c> and</c><00:35:25.360><c> then</c><00:35:25.660><c> that</c><00:35:25.990><c> that's</c><00:35:26.230><c> a</c>

00:35:26.310 --> 00:35:26.320 align:start position:0%
implementations and then that that's a
 

00:35:26.320 --> 00:35:27.420 align:start position:0%
implementations and then that that's a
little<00:35:26.470><c> difficult</c><00:35:26.650><c> because</c><00:35:27.010><c> it</c><00:35:27.160><c> makes</c><00:35:27.310><c> them</c>

00:35:27.420 --> 00:35:27.430 align:start position:0%
little difficult because it makes them
 

00:35:27.430 --> 00:35:28.950 align:start position:0%
little difficult because it makes them
hard<00:35:27.610><c> to</c><00:35:27.700><c> talk</c><00:35:27.820><c> about</c><00:35:27.880><c> so</c><00:35:28.330><c> I</c><00:35:28.360><c> always</c><00:35:28.690><c> have</c><00:35:28.840><c> to</c>

00:35:28.950 --> 00:35:28.960 align:start position:0%
hard to talk about so I always have to
 

00:35:28.960 --> 00:35:30.540 align:start position:0%
hard to talk about so I always have to
say<00:35:29.110><c> the</c><00:35:29.500><c> collections</c><00:35:29.950><c> implementation</c>

00:35:30.540 --> 00:35:30.550 align:start position:0%
say the collections implementation
 

00:35:30.550 --> 00:35:32.520 align:start position:0%
say the collections implementation
returned<00:35:30.940><c> by</c><00:35:31.090><c> this</c><00:35:31.150><c> nut</c><00:35:31.510><c> off</c><00:35:31.630><c> because</c><00:35:32.140><c> because</c>

00:35:32.520 --> 00:35:32.530 align:start position:0%
returned by this nut off because because
 

00:35:32.530 --> 00:35:34.170 align:start position:0%
returned by this nut off because because
they<00:35:32.650><c> have</c><00:35:32.800><c> no</c><00:35:32.980><c> names</c><00:35:33.250><c> now</c><00:35:33.520><c> obviously</c><00:35:33.940><c> if</c><00:35:34.090><c> you</c>

00:35:34.170 --> 00:35:34.180 align:start position:0%
they have no names now obviously if you
 

00:35:34.180 --> 00:35:35.520 align:start position:0%
they have no names now obviously if you
look<00:35:34.300><c> in</c><00:35:34.450><c> the</c><00:35:34.540><c> source</c><00:35:34.660><c> code</c><00:35:34.960><c> they</c><00:35:35.170><c> do</c><00:35:35.230><c> have</c>

00:35:35.520 --> 00:35:35.530 align:start position:0%
look in the source code they do have
 

00:35:35.530 --> 00:35:38.400 align:start position:0%
look in the source code they do have
names<00:35:35.710><c> but</c><00:35:36.369><c> but</c><00:35:37.330><c> those</c><00:35:37.480><c> names</c><00:35:37.720><c> are</c><00:35:37.900><c> not</c><00:35:38.020><c> public</c>

00:35:38.400 --> 00:35:38.410 align:start position:0%
names but but those names are not public
 

00:35:38.410 --> 00:35:40.890 align:start position:0%
names but but those names are not public
and<00:35:39.040><c> there's</c><00:35:39.700><c> a</c><00:35:39.760><c> reason</c><00:35:40.060><c> for</c><00:35:40.090><c> that</c><00:35:40.300><c> which</c><00:35:40.570><c> is</c>

00:35:40.890 --> 00:35:40.900 align:start position:0%
and there's a reason for that which is
 

00:35:40.900 --> 00:35:43.859 align:start position:0%
and there's a reason for that which is
that<00:35:41.290><c> preserves</c><00:35:42.010><c> the</c><00:35:42.310><c> freedom</c><00:35:42.820><c> of</c><00:35:43.090><c> the</c>

00:35:43.859 --> 00:35:43.869 align:start position:0%
that preserves the freedom of the
 

00:35:43.869 --> 00:35:46.109 align:start position:0%
that preserves the freedom of the
implementers<00:35:44.380><c> namely</c><00:35:44.890><c> me</c><00:35:45.190><c> to</c><00:35:45.670><c> completely</c>

00:35:46.109 --> 00:35:46.119 align:start position:0%
implementers namely me to completely
 

00:35:46.119 --> 00:35:48.540 align:start position:0%
implementers namely me to completely
reorganize<00:35:46.660><c> things</c><00:35:46.869><c> in</c><00:35:47.050><c> the</c><00:35:47.140><c> future</c><00:35:47.260><c> in</c><00:35:47.650><c> a</c>

00:35:48.540 --> 00:35:48.550 align:start position:0%
reorganize things in the future in a
 

00:35:48.550 --> 00:35:52.349 align:start position:0%
reorganize things in the future in a
fully<00:35:48.880><c> binary</c><00:35:49.330><c> compatible</c><00:35:49.840><c> way</c><00:35:51.150><c> so</c><00:35:52.150><c> in</c>

00:35:52.349 --> 00:35:52.359 align:start position:0%
fully binary compatible way so in
 

00:35:52.359 --> 00:35:53.670 align:start position:0%
fully binary compatible way so in
particular<00:35:52.869><c> I'll</c><00:35:53.020><c> tell</c><00:35:53.200><c> you</c><00:35:53.320><c> about</c><00:35:53.440><c> the</c>

00:35:53.670 --> 00:35:53.680 align:start position:0%
particular I'll tell you about the
 

00:35:53.680 --> 00:35:55.320 align:start position:0%
particular I'll tell you about the
implementation<00:35:54.310><c> we</c><00:35:54.430><c> have</c><00:35:54.460><c> in</c><00:35:54.910><c> place</c><00:35:55.119><c> today</c>

00:35:55.320 --> 00:35:55.330 align:start position:0%
implementation we have in place today
 

00:35:55.330 --> 00:35:59.700 align:start position:0%
implementation we have in place today
which<00:35:56.170><c> is</c><00:35:56.200><c> four</c><00:35:56.770><c> sets</c><00:35:57.130><c> and</c><00:35:57.369><c> maps</c><00:35:58.230><c> are</c><00:35:59.230><c> actually</c>

00:35:59.700 --> 00:35:59.710 align:start position:0%
which is four sets and maps are actually
 

00:35:59.710 --> 00:36:01.290 align:start position:0%
which is four sets and maps are actually
four<00:35:59.950><c> four</c><00:36:00.190><c> lists</c><00:36:00.400><c> and</c><00:36:00.609><c> sets</c><00:36:00.850><c> and</c><00:36:01.090><c> there's</c><00:36:01.210><c> a</c>

00:36:01.290 --> 00:36:01.300 align:start position:0%
four four lists and sets and there's a
 

00:36:01.300 --> 00:36:03.180 align:start position:0%
four four lists and sets and there's a
slight<00:36:01.540><c> variation</c><00:36:01.840><c> of</c><00:36:02.109><c> this</c><00:36:02.200><c> for</c><00:36:02.410><c> maps</c><00:36:02.590><c> but</c>

00:36:03.180 --> 00:36:03.190 align:start position:0%
slight variation of this for maps but
 

00:36:03.190 --> 00:36:06.890 align:start position:0%
slight variation of this for maps but
for<00:36:03.640><c> listening</c><00:36:04.000><c> sets</c><00:36:04.210><c> the</c><00:36:05.310><c> selection</c><00:36:06.310><c> this</c>

00:36:06.890 --> 00:36:06.900 align:start position:0%
for listening sets the selection this
 

00:36:06.900 --> 00:36:09.240 align:start position:0%
for listening sets the selection this
don't<00:36:07.900><c> have</c><00:36:08.140><c> an</c><00:36:08.260><c> array</c><00:36:08.500><c> at</c><00:36:08.680><c> all</c><00:36:08.859><c> so</c><00:36:09.100><c> if</c><00:36:09.160><c> you</c>

00:36:09.240 --> 00:36:09.250 align:start position:0%
don't have an array at all so if you
 

00:36:09.250 --> 00:36:11.040 align:start position:0%
don't have an array at all so if you
look<00:36:09.400><c> at</c><00:36:09.490><c> an</c><00:36:09.580><c> ArrayList</c><00:36:10.060><c> an</c><00:36:10.420><c> ArrayList</c><00:36:10.810><c> stores</c>

00:36:11.040 --> 00:36:11.050 align:start position:0%
look at an ArrayList an ArrayList stores
 

00:36:11.050 --> 00:36:12.630 align:start position:0%
look at an ArrayList an ArrayList stores
this<00:36:11.170><c> element</c><00:36:11.680><c> in</c><00:36:11.859><c> an</c><00:36:11.980><c> array</c><00:36:12.070><c> which</c><00:36:12.490><c> is</c><00:36:12.520><c> a</c>

00:36:12.630 --> 00:36:12.640 align:start position:0%
this element in an array which is a
 

00:36:12.640 --> 00:36:16.230 align:start position:0%
this element in an array which is a
completely<00:36:13.119><c> separate</c><00:36:13.390><c> object</c><00:36:13.869><c> inside</c><00:36:15.240><c> even</c>

00:36:16.230 --> 00:36:16.240 align:start position:0%
completely separate object inside even
 

00:36:16.240 --> 00:36:18.060 align:start position:0%
completely separate object inside even
if<00:36:16.300><c> you</c><00:36:16.450><c> have</c><00:36:16.600><c> one</c><00:36:16.869><c> element</c><00:36:17.050><c> it</c><00:36:17.619><c> creates</c><00:36:18.010><c> a</c>

00:36:18.060 --> 00:36:18.070 align:start position:0%
if you have one element it creates a
 

00:36:18.070 --> 00:36:19.440 align:start position:0%
if you have one element it creates a
whole<00:36:18.220><c> array</c><00:36:18.460><c> for</c><00:36:18.670><c> it</c><00:36:18.790><c> and</c><00:36:18.910><c> stores</c><00:36:19.150><c> that</c><00:36:19.270><c> one</c>

00:36:19.440 --> 00:36:19.450 align:start position:0%
whole array for it and stores that one
 

00:36:19.450 --> 00:36:24.240 align:start position:0%
whole array for it and stores that one
element<00:36:19.900><c> in</c><00:36:19.990><c> there</c><00:36:21.300><c> so</c><00:36:22.350><c> since</c><00:36:23.350><c> we</c><00:36:23.500><c> know</c><00:36:23.530><c> these</c>

00:36:24.240 --> 00:36:24.250 align:start position:0%
element in there so since we know these
 

00:36:24.250 --> 00:36:26.220 align:start position:0%
element in there so since we know these
chain<00:36:24.609><c> these</c><00:36:24.910><c> collections</c><00:36:25.540><c> are</c><00:36:25.720><c> never</c><00:36:26.020><c> going</c>

00:36:26.220 --> 00:36:26.230 align:start position:0%
chain these collections are never going
 

00:36:26.230 --> 00:36:28.260 align:start position:0%
chain these collections are never going
to<00:36:26.350><c> be</c><00:36:26.470><c> modified</c><00:36:26.890><c> if</c><00:36:27.190><c> you</c><00:36:27.640><c> want</c><00:36:27.790><c> a</c><00:36:27.880><c> set</c><00:36:28.119><c> that</c>

00:36:28.260 --> 00:36:28.270 align:start position:0%
to be modified if you want a set that
 

00:36:28.270 --> 00:36:31.020 align:start position:0%
to be modified if you want a set that
contains<00:36:28.330><c> one</c><00:36:28.840><c> element</c><00:36:29.020><c> then</c><00:36:29.800><c> we</c><00:36:30.250><c> just</c><00:36:30.790><c> have</c><00:36:31.000><c> a</c>

00:36:31.020 --> 00:36:31.030 align:start position:0%
contains one element then we just have a
 

00:36:31.030 --> 00:36:32.820 align:start position:0%
contains one element then we just have a
particular<00:36:31.630><c> implementation</c><00:36:32.230><c> that</c><00:36:32.410><c> that</c>

00:36:32.820 --> 00:36:32.830 align:start position:0%
particular implementation that that
 

00:36:32.830 --> 00:36:34.530 align:start position:0%
particular implementation that that
contains<00:36:33.160><c> that</c><00:36:33.280><c> element</c><00:36:33.640><c> in</c><00:36:33.790><c> exactly</c><00:36:34.270><c> one</c>

00:36:34.530 --> 00:36:34.540 align:start position:0%
contains that element in exactly one
 

00:36:34.540 --> 00:36:37.380 align:start position:0%
contains that element in exactly one
field<00:36:34.900><c> and</c><00:36:35.320><c> so</c><00:36:35.650><c> for</c><00:36:36.160><c> special</c><00:36:36.490><c> cases</c><00:36:36.640><c> zero</c><00:36:37.150><c> one</c>

00:36:37.380 --> 00:36:37.390 align:start position:0%
field and so for special cases zero one
 

00:36:37.390 --> 00:36:39.180 align:start position:0%
field and so for special cases zero one
and<00:36:37.420><c> two</c><00:36:37.600><c> we</c><00:36:38.140><c> store</c><00:36:38.470><c> the</c><00:36:38.619><c> elements</c><00:36:39.040><c> of</c><00:36:39.130><c> the</c>

00:36:39.180 --> 00:36:39.190 align:start position:0%
and two we store the elements of the
 

00:36:39.190 --> 00:36:41.430 align:start position:0%
and two we store the elements of the
collection<00:36:39.430><c> in</c><00:36:39.970><c> a</c><00:36:40.210><c> field</c><00:36:40.480><c> there</c><00:36:40.960><c> are</c><00:36:40.990><c> actually</c>

00:36:41.430 --> 00:36:41.440 align:start position:0%
collection in a field there are actually
 

00:36:41.440 --> 00:36:43.320 align:start position:0%
collection in a field there are actually
different<00:36:41.619><c> classes</c><00:36:42.310><c> that</c><00:36:42.730><c> implement</c><00:36:42.910><c> those</c>

00:36:43.320 --> 00:36:43.330 align:start position:0%
different classes that implement those
 

00:36:43.330 --> 00:36:45.540 align:start position:0%
different classes that implement those
now<00:36:43.840><c> for</c><00:36:44.109><c> more</c><00:36:44.290><c> than</c><00:36:44.500><c> two</c><00:36:44.650><c> elements</c><00:36:45.100><c> we</c><00:36:45.400><c> go</c>

00:36:45.540 --> 00:36:45.550 align:start position:0%
now for more than two elements we go
 

00:36:45.550 --> 00:36:47.130 align:start position:0%
now for more than two elements we go
ahead<00:36:45.700><c> and</c><00:36:45.820><c> create</c><00:36:46.030><c> an</c><00:36:46.119><c> array</c><00:36:46.359><c> and</c><00:36:46.720><c> of</c><00:36:46.900><c> the</c>

00:36:47.130 --> 00:36:47.140 align:start position:0%
ahead and create an array and of the
 

00:36:47.140 --> 00:36:50.359 align:start position:0%
ahead and create an array and of the
right<00:36:47.290><c> size</c><00:36:47.560><c> and</c><00:36:47.950><c> and</c><00:36:48.190><c> populate</c><00:36:48.940><c> it</c>

00:36:50.359 --> 00:36:50.369 align:start position:0%
right size and and populate it
 

00:36:50.369 --> 00:36:53.010 align:start position:0%
right size and and populate it
but<00:36:51.369><c> there's</c><00:36:51.520><c> nothing</c><00:36:51.609><c> magical</c><00:36:52.150><c> about</c><00:36:52.210><c> 0</c><00:36:52.660><c> 1</c><00:36:52.869><c> &amp;</c>

00:36:53.010 --> 00:36:53.020 align:start position:0%
but there's nothing magical about 0 1 &amp;
 

00:36:53.020 --> 00:36:54.750 align:start position:0%
but there's nothing magical about 0 1 &amp;
2<00:36:53.140><c> you</c><00:36:53.170><c> can't</c><00:36:53.680><c> tell</c><00:36:53.920><c> this</c><00:36:54.069><c> by</c><00:36:54.250><c> looking</c><00:36:54.280><c> at</c><00:36:54.640><c> the</c>

00:36:54.750 --> 00:36:54.760 align:start position:0%
2 you can't tell this by looking at the
 

00:36:54.760 --> 00:36:57.089 align:start position:0%
2 you can't tell this by looking at the
API<00:36:55.030><c> you</c><00:36:55.510><c> can</c><00:36:55.660><c> only</c><00:36:55.809><c> tell</c><00:36:56.109><c> by</c><00:36:56.589><c> if</c><00:36:56.799><c> you</c><00:36:56.920><c> use</c><00:36:57.069><c> a</c>

00:36:57.089 --> 00:36:57.099 align:start position:0%
API you can only tell by if you use a
 

00:36:57.099 --> 00:36:59.730 align:start position:0%
API you can only tell by if you use a
reflection<00:36:57.670><c> or</c><00:36:57.790><c> something</c><00:36:58.119><c> to</c><00:36:58.630><c> go</c><00:36:58.990><c> in</c><00:36:59.170><c> but</c><00:36:59.619><c> the</c>

00:36:59.730 --> 00:36:59.740 align:start position:0%
reflection or something to go in but the
 

00:36:59.740 --> 00:37:03.150 align:start position:0%
reflection or something to go in but the
benefit<00:37:00.099><c> of</c><00:37:00.220><c> course</c><00:37:00.460><c> is</c><00:37:00.730><c> that</c><00:37:01.480><c> the</c><00:37:02.200><c> the</c><00:37:02.680><c> amount</c>

00:37:03.150 --> 00:37:03.160 align:start position:0%
benefit of course is that the the amount
 

00:37:03.160 --> 00:37:05.760 align:start position:0%
benefit of course is that the the amount
of<00:37:03.369><c> space</c><00:37:04.059><c> required</c><00:37:04.210><c> for</c><00:37:04.660><c> storing</c><00:37:05.109><c> these</c><00:37:05.380><c> in</c>

00:37:05.760 --> 00:37:05.770 align:start position:0%
of space required for storing these in
 

00:37:05.770 --> 00:37:08.370 align:start position:0%
of space required for storing these in
memory<00:37:06.280><c> is</c><00:37:06.490><c> much</c><00:37:07.059><c> reduced</c><00:37:07.240><c> compared</c><00:37:07.930><c> to</c><00:37:08.140><c> the</c>

00:37:08.370 --> 00:37:08.380 align:start position:0%
memory is much reduced compared to the
 

00:37:08.380 --> 00:37:10.859 align:start position:0%
memory is much reduced compared to the
conventional<00:37:08.589><c> collections</c><00:37:09.510><c> and</c><00:37:10.510><c> they're</c>

00:37:10.859 --> 00:37:10.869 align:start position:0%
conventional collections and they're
 

00:37:10.869 --> 00:37:13.289 align:start position:0%
conventional collections and they're
less<00:37:11.109><c> spread</c><00:37:11.380><c> out</c><00:37:11.589><c> in</c><00:37:11.859><c> memory</c><00:37:12.339><c> so</c><00:37:12.849><c> the</c>

00:37:13.289 --> 00:37:13.299 align:start position:0%
less spread out in memory so the
 

00:37:13.299 --> 00:37:15.170 align:start position:0%
less spread out in memory so the
locality<00:37:13.960><c> of</c><00:37:13.990><c> reference</c><00:37:14.079><c> should</c><00:37:14.589><c> be</c><00:37:14.710><c> improved</c>

00:37:15.170 --> 00:37:15.180 align:start position:0%
locality of reference should be improved
 

00:37:15.180 --> 00:37:17.579 align:start position:0%
locality of reference should be improved
so<00:37:16.180><c> let's</c><00:37:16.390><c> run</c><00:37:16.569><c> through</c><00:37:16.750><c> an</c><00:37:16.869><c> example</c><00:37:17.260><c> very</c>

00:37:17.579 --> 00:37:17.589 align:start position:0%
so let's run through an example very
 

00:37:17.589 --> 00:37:19.950 align:start position:0%
so let's run through an example very
quickly<00:37:17.740><c> here</c><00:37:18.280><c> so</c><00:37:18.880><c> let's</c><00:37:19.089><c> say</c><00:37:19.359><c> that</c><00:37:19.390><c> we</c><00:37:19.750><c> want</c>

00:37:19.950 --> 00:37:19.960 align:start position:0%
quickly here so let's say that we want
 

00:37:19.960 --> 00:37:21.599 align:start position:0%
quickly here so let's say that we want
to<00:37:20.049><c> have</c><00:37:20.200><c> a</c><00:37:20.230><c> set</c><00:37:20.559><c> with</c><00:37:20.770><c> two</c><00:37:20.980><c> elements</c><00:37:21.400><c> in</c><00:37:21.490><c> it</c>

00:37:21.599 --> 00:37:21.609 align:start position:0%
to have a set with two elements in it
 

00:37:21.609 --> 00:37:26.190 align:start position:0%
to have a set with two elements in it
and<00:37:22.589><c> store</c><00:37:23.589><c> that</c><00:37:23.619><c> in</c><00:37:24.190><c> an</c><00:37:24.760><c> unmodified</c><00:37:25.390><c> map</c><00:37:25.930><c> in</c>

00:37:26.190 --> 00:37:26.200 align:start position:0%
and store that in an unmodified map in
 

00:37:26.200 --> 00:37:29.670 align:start position:0%
and store that in an unmodified map in
the<00:37:26.349><c> conventional</c><00:37:26.950><c> Java</c><00:37:27.940><c> Java</c><00:37:28.510><c> 8</c><00:37:28.720><c> fashion</c><00:37:29.200><c> so</c>

00:37:29.670 --> 00:37:29.680 align:start position:0%
the conventional Java Java 8 fashion so
 

00:37:29.680 --> 00:37:31.770 align:start position:0%
the conventional Java Java 8 fashion so
we<00:37:30.099><c> create</c><00:37:30.400><c> a</c><00:37:30.430><c> new</c><00:37:30.490><c> hash</c><00:37:30.730><c> set</c><00:37:31.030><c> which</c><00:37:31.359><c> has</c><00:37:31.390><c> three</c>

00:37:31.770 --> 00:37:31.780 align:start position:0%
we create a new hash set which has three
 

00:37:31.780 --> 00:37:33.059 align:start position:0%
we create a new hash set which has three
buckets<00:37:32.140><c> because</c><00:37:32.470><c> we</c><00:37:32.559><c> don't</c><00:37:32.770><c> want</c><00:37:32.920><c> it</c><00:37:32.980><c> to</c>

00:37:33.059 --> 00:37:33.069 align:start position:0%
buckets because we don't want it to
 

00:37:33.069 --> 00:37:35.220 align:start position:0%
buckets because we don't want it to
resize<00:37:33.369><c> so</c><00:37:34.329><c> it</c><00:37:34.390><c> has</c><00:37:34.540><c> to</c><00:37:34.630><c> have</c><00:37:34.750><c> three</c><00:37:34.930><c> buckets</c>

00:37:35.220 --> 00:37:35.230 align:start position:0%
resize so it has to have three buckets
 

00:37:35.230 --> 00:37:37.410 align:start position:0%
resize so it has to have three buckets
in<00:37:35.380><c> order</c><00:37:35.559><c> to</c><00:37:35.680><c> store</c><00:37:35.829><c> to</c><00:37:36.099><c> two</c><00:37:36.430><c> elements</c><00:37:36.849><c> we</c><00:37:37.180><c> add</c>

00:37:37.410 --> 00:37:37.420 align:start position:0%
in order to store to two elements we add
 

00:37:37.420 --> 00:37:39.510 align:start position:0%
in order to store to two elements we add
the<00:37:37.690><c> two</c><00:37:37.839><c> elements</c><00:37:38.290><c> to</c><00:37:38.440><c> it</c><00:37:38.589><c> and</c><00:37:38.710><c> then</c><00:37:39.190><c> we</c><00:37:39.339><c> wrap</c>

00:37:39.510 --> 00:37:39.520 align:start position:0%
the two elements to it and then we wrap
 

00:37:39.520 --> 00:37:42.270 align:start position:0%
the two elements to it and then we wrap
that<00:37:39.790><c> in</c><00:37:40.030><c> an</c><00:37:40.329><c> unmodified</c><00:37:40.990><c> ball</c><00:37:41.559><c> wrapper</c>

00:37:42.270 --> 00:37:42.280 align:start position:0%
that in an unmodified ball wrapper
 

00:37:42.280 --> 00:37:44.940 align:start position:0%
that in an unmodified ball wrapper
okay<00:37:42.819><c> so</c><00:37:43.359><c> let's</c><00:37:43.630><c> count</c><00:37:44.049><c> the</c><00:37:44.200><c> objects</c><00:37:44.680><c> that</c><00:37:44.799><c> are</c>

00:37:44.940 --> 00:37:44.950 align:start position:0%
okay so let's count the objects that are
 

00:37:44.950 --> 00:37:45.270 align:start position:0%
okay so let's count the objects that are
there

00:37:45.270 --> 00:37:45.280 align:start position:0%
there
 

00:37:45.280 --> 00:37:47.579 align:start position:0%
there
there's<00:37:45.549><c> the</c><00:37:45.700><c> unmodifiable</c><00:37:46.240><c> wrapper</c><00:37:46.869><c> there's</c>

00:37:47.579 --> 00:37:47.589 align:start position:0%
there's the unmodifiable wrapper there's
 

00:37:47.589 --> 00:37:49.740 align:start position:0%
there's the unmodifiable wrapper there's
the<00:37:47.770><c> hash</c><00:37:48.040><c> set</c><00:37:48.339><c> now</c><00:37:48.849><c> it</c><00:37:49.000><c> turns</c><00:37:49.240><c> out</c><00:37:49.450><c> that</c><00:37:49.690><c> a</c>

00:37:49.740 --> 00:37:49.750 align:start position:0%
the hash set now it turns out that a
 

00:37:49.750 --> 00:37:51.870 align:start position:0%
the hash set now it turns out that a
hash<00:37:50.049><c> set</c><00:37:50.290><c> is</c><00:37:50.530><c> implemented</c><00:37:51.160><c> in</c><00:37:51.309><c> terms</c><00:37:51.549><c> of</c><00:37:51.790><c> a</c>

00:37:51.870 --> 00:37:51.880 align:start position:0%
hash set is implemented in terms of a
 

00:37:51.880 --> 00:37:54.690 align:start position:0%
hash set is implemented in terms of a
hash<00:37:52.059><c> map</c><00:37:52.299><c> so</c><00:37:52.960><c> a</c><00:37:52.990><c> hash</c><00:37:53.230><c> map</c><00:37:53.530><c> sorry</c><00:37:54.099><c> a</c><00:37:54.160><c> hash</c><00:37:54.460><c> set</c>

00:37:54.690 --> 00:37:54.700 align:start position:0%
hash map so a hash map sorry a hash set
 

00:37:54.700 --> 00:37:57.240 align:start position:0%
hash map so a hash map sorry a hash set
contains<00:37:55.599><c> an</c><00:37:55.930><c> instance</c><00:37:56.470><c> of</c><00:37:56.589><c> hash</c><00:37:56.799><c> map</c><00:37:57.040><c> so</c>

00:37:57.240 --> 00:37:57.250 align:start position:0%
contains an instance of hash map so
 

00:37:57.250 --> 00:37:59.309 align:start position:0%
contains an instance of hash map so
that's<00:37:57.400><c> our</c><00:37:57.520><c> third</c><00:37:57.700><c> object</c><00:37:58.180><c> now</c><00:37:58.720><c> a</c><00:37:58.780><c> hash</c><00:37:59.049><c> map</c>

00:37:59.309 --> 00:37:59.319 align:start position:0%
that's our third object now a hash map
 

00:37:59.319 --> 00:38:01.829 align:start position:0%
that's our third object now a hash map
has<00:37:59.920><c> an</c><00:38:00.250><c> array</c><00:38:00.790><c> which</c><00:38:01.180><c> is</c><00:38:01.210><c> the</c><00:38:01.359><c> table</c><00:38:01.750><c> of</c>

00:38:01.829 --> 00:38:01.839 align:start position:0%
has an array which is the table of
 

00:38:01.839 --> 00:38:03.809 align:start position:0%
has an array which is the table of
entries<00:38:02.170><c> and</c><00:38:02.380><c> an</c><00:38:02.890><c> array</c><00:38:03.130><c> to</c><00:38:03.190><c> another</c><00:38:03.579><c> object</c>

00:38:03.809 --> 00:38:03.819 align:start position:0%
entries and an array to another object
 

00:38:03.819 --> 00:38:06.740 align:start position:0%
entries and an array to another object
so<00:38:04.150><c> that's</c><00:38:04.299><c> four</c><00:38:04.540><c> objects</c><00:38:04.990><c> and</c><00:38:05.200><c> then</c><00:38:06.069><c> each</c>

00:38:06.740 --> 00:38:06.750 align:start position:0%
so that's four objects and then each
 

00:38:06.750 --> 00:38:10.170 align:start position:0%
so that's four objects and then each
entry<00:38:07.750><c> of</c><00:38:07.990><c> the</c><00:38:08.440><c> hash</c><00:38:08.619><c> map</c><00:38:08.890><c> is</c><00:38:09.220><c> stored</c><00:38:09.970><c> in</c><00:38:10.119><c> a</c>

00:38:10.170 --> 00:38:10.180 align:start position:0%
entry of the hash map is stored in a
 

00:38:10.180 --> 00:38:13.789 align:start position:0%
entry of the hash map is stored in a
node<00:38:10.359><c> object</c><00:38:10.540><c> so</c><00:38:10.990><c> now</c><00:38:11.079><c> we</c><00:38:11.170><c> have</c><00:38:11.440><c> six</c><00:38:12.339><c> objects</c>

00:38:13.789 --> 00:38:13.799 align:start position:0%
node object so now we have six objects
 

00:38:13.799 --> 00:38:17.490 align:start position:0%
node object so now we have six objects
and<00:38:14.799><c> so</c><00:38:15.250><c> here</c><00:38:15.670><c> is</c><00:38:15.880><c> a</c><00:38:16.270><c> diagram</c><00:38:16.690><c> of</c><00:38:17.200><c> what</c><00:38:17.410><c> that</c>

00:38:17.490 --> 00:38:17.500 align:start position:0%
and so here is a diagram of what that
 

00:38:17.500 --> 00:38:19.170 align:start position:0%
and so here is a diagram of what that
looks<00:38:17.710><c> like</c><00:38:17.829><c> we</c><00:38:18.040><c> have</c><00:38:18.190><c> we</c><00:38:18.790><c> have</c><00:38:18.880><c> the</c><00:38:19.000><c> set</c>

00:38:19.170 --> 00:38:19.180 align:start position:0%
looks like we have we have the set
 

00:38:19.180 --> 00:38:20.520 align:start position:0%
looks like we have we have the set
reference<00:38:19.359><c> pointing</c><00:38:19.839><c> to</c><00:38:19.900><c> the</c><00:38:19.990><c> unmodifiable</c>

00:38:20.520 --> 00:38:20.530 align:start position:0%
reference pointing to the unmodifiable
 

00:38:20.530 --> 00:38:22.920 align:start position:0%
reference pointing to the unmodifiable
wrapper<00:38:20.980><c> at</c><00:38:21.069><c> the</c><00:38:21.160><c> hash</c><00:38:21.309><c> set</c><00:38:21.579><c> the</c><00:38:21.910><c> hash</c><00:38:22.089><c> map</c><00:38:22.299><c> the</c>

00:38:22.920 --> 00:38:22.930 align:start position:0%
wrapper at the hash set the hash map the
 

00:38:22.930 --> 00:38:24.960 align:start position:0%
wrapper at the hash set the hash map the
table<00:38:23.349><c> which</c><00:38:23.559><c> is</c><00:38:23.680><c> an</c><00:38:23.770><c> array</c><00:38:23.980><c> and</c><00:38:24.250><c> then</c><00:38:24.280><c> two</c>

00:38:24.960 --> 00:38:24.970 align:start position:0%
table which is an array and then two
 

00:38:24.970 --> 00:38:27.390 align:start position:0%
table which is an array and then two
node<00:38:25.180><c> elements</c><00:38:25.660><c> so</c><00:38:25.750><c> that's</c><00:38:25.930><c> that's</c><00:38:26.230><c> your</c><00:38:26.380><c> six</c>

00:38:27.390 --> 00:38:27.400 align:start position:0%
node elements so that's that's your six
 

00:38:27.400 --> 00:38:29.400 align:start position:0%
node elements so that's that's your six
that's<00:38:28.030><c> your</c><00:38:28.180><c> six</c><00:38:28.359><c> objects</c><00:38:28.690><c> no</c><00:38:28.930><c> note</c><00:38:29.109><c> I'm</c><00:38:29.260><c> not</c>

00:38:29.400 --> 00:38:29.410 align:start position:0%
that's your six objects no note I'm not
 

00:38:29.410 --> 00:38:32.819 align:start position:0%
that's your six objects no note I'm not
talking<00:38:29.859><c> about</c><00:38:29.980><c> the</c><00:38:30.700><c> the</c><00:38:31.420><c> the</c><00:38:31.680><c> contents</c><00:38:32.680><c> or</c>

00:38:32.819 --> 00:38:32.829 align:start position:0%
talking about the the the contents or
 

00:38:32.829 --> 00:38:34.680 align:start position:0%
talking about the the the contents or
the<00:38:33.010><c> payload</c><00:38:33.400><c> itself</c><00:38:33.609><c> right</c><00:38:34.089><c> so</c><00:38:34.150><c> I'm</c><00:38:34.540><c> not</c>

00:38:34.680 --> 00:38:34.690 align:start position:0%
the payload itself right so I'm not
 

00:38:34.690 --> 00:38:36.720 align:start position:0%
the payload itself right so I'm not
counting<00:38:34.930><c> the</c><00:38:35.260><c> strings</c><00:38:35.680><c> and</c><00:38:36.069><c> there's</c><00:38:36.670><c> a</c>

00:38:36.720 --> 00:38:36.730 align:start position:0%
counting the strings and there's a
 

00:38:36.730 --> 00:38:40.470 align:start position:0%
counting the strings and there's a
special<00:38:38.609><c> there's</c><00:38:39.609><c> a</c><00:38:39.700><c> special</c><00:38:40.000><c> value</c><00:38:40.180><c> there</c>

00:38:40.470 --> 00:38:40.480 align:start position:0%
special there's a special value there
 

00:38:40.480 --> 00:38:43.260 align:start position:0%
special there's a special value there
when<00:38:40.720><c> you</c><00:38:40.809><c> for</c><00:38:41.530><c> a</c><00:38:41.559><c> hash</c><00:38:41.799><c> map</c><00:38:42.040><c> when</c><00:38:42.369><c> when</c><00:38:43.089><c> it's</c>

00:38:43.260 --> 00:38:43.270 align:start position:0%
when you for a hash map when when it's
 

00:38:43.270 --> 00:38:44.940 align:start position:0%
when you for a hash map when when it's
implemented<00:38:43.839><c> as</c><00:38:43.900><c> part</c><00:38:43.960><c> of</c><00:38:44.140><c> a</c><00:38:44.200><c> hash</c><00:38:44.319><c> set</c><00:38:44.559><c> I'm</c>

00:38:44.940 --> 00:38:44.950 align:start position:0%
implemented as part of a hash set I'm
 

00:38:44.950 --> 00:38:47.010 align:start position:0%
implemented as part of a hash set I'm
only<00:38:45.250><c> counting</c><00:38:45.549><c> the</c><00:38:45.790><c> things</c><00:38:46.089><c> the</c><00:38:46.569><c> objects</c>

00:38:47.010 --> 00:38:47.020 align:start position:0%
only counting the things the objects
 

00:38:47.020 --> 00:38:49.049 align:start position:0%
only counting the things the objects
that<00:38:47.109><c> are</c><00:38:47.260><c> created</c><00:38:47.349><c> as</c><00:38:47.710><c> overhead</c><00:38:48.190><c> for</c><00:38:48.880><c> the</c>

00:38:49.049 --> 00:38:49.059 align:start position:0%
that are created as overhead for the
 

00:38:49.059 --> 00:38:51.150 align:start position:0%
that are created as overhead for the
collection<00:38:49.569><c> itself</c><00:38:50.140><c> so</c><00:38:50.380><c> there's</c><00:38:50.559><c> six</c><00:38:50.710><c> objects</c>

00:38:51.150 --> 00:38:51.160 align:start position:0%
collection itself so there's six objects
 

00:38:51.160 --> 00:38:54.510 align:start position:0%
collection itself so there's six objects
there<00:38:51.839><c> alright</c><00:38:52.839><c> so</c><00:38:52.990><c> how</c><00:38:53.290><c> much</c><00:38:53.559><c> memory</c><00:38:54.099><c> does</c>

00:38:54.510 --> 00:38:54.520 align:start position:0%
there alright so how much memory does
 

00:38:54.520 --> 00:38:57.539 align:start position:0%
there alright so how much memory does
each<00:38:54.700><c> object</c><00:38:55.240><c> take</c><00:38:55.450><c> so</c><00:38:55.990><c> in</c><00:38:56.380><c> a</c><00:38:56.559><c> typical</c><00:38:56.799><c> JVM</c>

00:38:57.539 --> 00:38:57.549 align:start position:0%
each object take so in a typical JVM
 

00:38:57.549 --> 00:39:00.480 align:start position:0%
each object take so in a typical JVM
every<00:38:58.450><c> object</c><00:38:58.900><c> has</c><00:38:58.960><c> a</c><00:38:59.109><c> twelve</c><00:38:59.589><c> byte</c><00:38:59.920><c> object</c>

00:39:00.480 --> 00:39:00.490 align:start position:0%
every object has a twelve byte object
 

00:39:00.490 --> 00:39:03.300 align:start position:0%
every object has a twelve byte object
header<00:39:00.640><c> plus</c><00:39:01.510><c> about</c><00:39:02.040><c> four</c><00:39:03.040><c> by</c>

00:39:03.300 --> 00:39:03.310 align:start position:0%
header plus about four by
 

00:39:03.310 --> 00:39:06.870 align:start position:0%
header plus about four by
for<00:39:03.610><c> every</c><00:39:03.970><c> object</c><00:39:04.690><c> reference</c><00:39:05.080><c> or</c><00:39:05.520><c> int</c><00:39:06.520><c> field</c>

00:39:06.870 --> 00:39:06.880 align:start position:0%
for every object reference or int field
 

00:39:06.880 --> 00:39:10.050 align:start position:0%
for every object reference or int field
or<00:39:07.210><c> smaller</c><00:39:08.050><c> smaller</c><00:39:08.680><c> primitive</c><00:39:09.160><c> field</c><00:39:09.340><c> and</c>

00:39:10.050 --> 00:39:10.060 align:start position:0%
or smaller smaller primitive field and
 

00:39:10.060 --> 00:39:11.430 align:start position:0%
or smaller smaller primitive field and
so<00:39:10.180><c> these</c><00:39:10.300><c> aren't</c><00:39:10.510><c> exact</c><00:39:10.840><c> it</c><00:39:11.050><c> depends</c><00:39:11.380><c> on</c>

00:39:11.430 --> 00:39:11.440 align:start position:0%
so these aren't exact it depends on
 

00:39:11.440 --> 00:39:13.560 align:start position:0%
so these aren't exact it depends on
exactly<00:39:11.890><c> what</c><00:39:12.160><c> you're</c><00:39:12.310><c> using</c><00:39:12.550><c> what</c><00:39:13.210><c> what</c><00:39:13.420><c> your</c>

00:39:13.560 --> 00:39:13.570 align:start position:0%
exactly what you're using what what your
 

00:39:13.570 --> 00:39:15.510 align:start position:0%
exactly what you're using what what your
JVM<00:39:14.050><c> configuration</c><00:39:14.710><c> is</c><00:39:14.830><c> but</c><00:39:15.220><c> this</c><00:39:15.340><c> is</c><00:39:15.490><c> a</c>

00:39:15.510 --> 00:39:15.520 align:start position:0%
JVM configuration is but this is a
 

00:39:15.520 --> 00:39:17.910 align:start position:0%
JVM configuration is but this is a
ballpark<00:39:15.940><c> estimate</c><00:39:16.150><c> so</c><00:39:16.960><c> it</c><00:39:17.080><c> turns</c><00:39:17.260><c> out</c><00:39:17.440><c> with</c>

00:39:17.910 --> 00:39:17.920 align:start position:0%
ballpark estimate so it turns out with
 

00:39:17.920 --> 00:39:21.180 align:start position:0%
ballpark estimate so it turns out with
six<00:39:18.430><c> objects</c><00:39:18.910><c> with</c><00:39:19.570><c> with</c><00:39:20.080><c> all</c><00:39:20.320><c> of</c><00:39:20.500><c> with</c><00:39:20.860><c> all</c><00:39:21.070><c> of</c>

00:39:21.180 --> 00:39:21.190 align:start position:0%
six objects with with all of with all of
 

00:39:21.190 --> 00:39:24.360 align:start position:0%
six objects with with all of with all of
other<00:39:21.280><c> fields</c><00:39:21.550><c> and</c><00:39:21.760><c> so</c><00:39:22.240><c> forth</c><00:39:22.480><c> a</c><00:39:22.720><c> set</c><00:39:23.560><c> with</c><00:39:24.130><c> an</c>

00:39:24.360 --> 00:39:24.370 align:start position:0%
other fields and so forth a set with an
 

00:39:24.370 --> 00:39:27.020 align:start position:0%
other fields and so forth a set with an
unmodifiable<00:39:25.180><c> set</c><00:39:25.540><c> with</c><00:39:25.690><c> two</c><00:39:25.870><c> elements</c><00:39:26.350><c> takes</c>

00:39:27.020 --> 00:39:27.030 align:start position:0%
unmodifiable set with two elements takes
 

00:39:27.030 --> 00:39:31.080 align:start position:0%
unmodifiable set with two elements takes
152<00:39:28.030><c> bytes</c><00:39:28.590><c> that's</c><00:39:29.590><c> surprisingly</c><00:39:30.400><c> large</c><00:39:30.670><c> but</c>

00:39:31.080 --> 00:39:31.090 align:start position:0%
152 bytes that's surprisingly large but
 

00:39:31.090 --> 00:39:32.490 align:start position:0%
152 bytes that's surprisingly large but
we've<00:39:31.210><c> lived</c><00:39:31.510><c> with</c><00:39:31.720><c> that</c><00:39:31.750><c> for</c><00:39:31.870><c> a</c><00:39:32.080><c> long</c><00:39:32.230><c> time</c>

00:39:32.490 --> 00:39:32.500 align:start position:0%
we've lived with that for a long time
 

00:39:32.500 --> 00:39:36.450 align:start position:0%
we've lived with that for a long time
and<00:39:32.920><c> and</c><00:39:33.360><c> amazingly</c><00:39:34.360><c> it</c><00:39:35.080><c> hasn't</c><00:39:36.070><c> really</c><00:39:36.370><c> been</c>

00:39:36.450 --> 00:39:36.460 align:start position:0%
and and amazingly it hasn't really been
 

00:39:36.460 --> 00:39:38.160 align:start position:0%
and and amazingly it hasn't really been
a<00:39:36.520><c> problem</c><00:39:36.700><c> until</c><00:39:36.970><c> recently</c><00:39:37.510><c> I'm</c><00:39:37.780><c> not</c><00:39:37.930><c> quite</c>

00:39:38.160 --> 00:39:38.170 align:start position:0%
a problem until recently I'm not quite
 

00:39:38.170 --> 00:39:39.960 align:start position:0%
a problem until recently I'm not quite
sure<00:39:38.200><c> why</c><00:39:38.500><c> but</c><00:39:38.800><c> this</c><00:39:38.950><c> is</c><00:39:39.130><c> this</c><00:39:39.430><c> is</c><00:39:39.490><c> gaining</c>

00:39:39.960 --> 00:39:39.970 align:start position:0%
sure why but this is this is gaining
 

00:39:39.970 --> 00:39:41.700 align:start position:0%
sure why but this is this is gaining
currency<00:39:40.450><c> which</c><00:39:40.660><c> is</c><00:39:40.690><c> that</c><00:39:40.990><c> I</c><00:39:41.230><c> think</c><00:39:41.530><c> people</c>

00:39:41.700 --> 00:39:41.710 align:start position:0%
currency which is that I think people
 

00:39:41.710 --> 00:39:43.350 align:start position:0%
currency which is that I think people
are<00:39:42.010><c> trying</c><00:39:42.100><c> to</c><00:39:42.280><c> pack</c><00:39:42.460><c> more</c><00:39:42.820><c> they're</c><00:39:43.060><c> trying</c>

00:39:43.350 --> 00:39:43.360 align:start position:0%
are trying to pack more they're trying
 

00:39:43.360 --> 00:39:44.610 align:start position:0%
are trying to pack more they're trying
to<00:39:43.420><c> get</c><00:39:43.510><c> more</c><00:39:43.660><c> efficiency</c><00:39:44.140><c> out</c><00:39:44.260><c> of</c><00:39:44.410><c> their</c>

00:39:44.610 --> 00:39:44.620 align:start position:0%
to get more efficiency out of their
 

00:39:44.620 --> 00:39:46.760 align:start position:0%
to get more efficiency out of their
systems<00:39:44.950><c> if</c><00:39:45.730><c> you</c><00:39:45.790><c> if</c><00:39:46.090><c> you're</c><00:39:46.210><c> running</c>

00:39:46.760 --> 00:39:46.770 align:start position:0%
systems if you if you're running
 

00:39:46.770 --> 00:39:49.650 align:start position:0%
systems if you if you're running
thousands<00:39:47.770><c> of</c><00:39:47.830><c> instances</c><00:39:48.130><c> in</c><00:39:48.400><c> a</c><00:39:48.460><c> cloud</c><00:39:48.700><c> then</c>

00:39:49.650 --> 00:39:49.660 align:start position:0%
thousands of instances in a cloud then
 

00:39:49.660 --> 00:39:52.380 align:start position:0%
thousands of instances in a cloud then
if<00:39:50.500><c> if</c><00:39:51.220><c> you're</c><00:39:51.520><c> heaps</c><00:39:51.760><c> are</c><00:39:51.940><c> too</c><00:39:52.060><c> large</c><00:39:52.210><c> that</c>

00:39:52.380 --> 00:39:52.390 align:start position:0%
if if you're heaps are too large that
 

00:39:52.390 --> 00:39:54.900 align:start position:0%
if if you're heaps are too large that
means<00:39:52.600><c> the</c><00:39:53.380><c> number</c><00:39:53.710><c> of</c><00:39:53.920><c> instances</c><00:39:54.430><c> you</c><00:39:54.790><c> can</c>

00:39:54.900 --> 00:39:54.910 align:start position:0%
means the number of instances you can
 

00:39:54.910 --> 00:39:57.810 align:start position:0%
means the number of instances you can
run<00:39:55.090><c> on</c><00:39:55.210><c> each</c><00:39:55.330><c> physical</c><00:39:56.070><c> node</c><00:39:57.070><c> in</c><00:39:57.490><c> the</c><00:39:57.610><c> cloud</c>

00:39:57.810 --> 00:39:57.820 align:start position:0%
run on each physical node in the cloud
 

00:39:57.820 --> 00:39:59.540 align:start position:0%
run on each physical node in the cloud
is<00:39:58.240><c> reduced</c><00:39:58.750><c> and</c><00:39:59.020><c> so</c><00:39:59.110><c> people</c><00:39:59.320><c> are</c>

00:39:59.540 --> 00:39:59.550 align:start position:0%
is reduced and so people are
 

00:39:59.550 --> 00:40:01.830 align:start position:0%
is reduced and so people are
concentrating<00:40:00.550><c> on</c><00:40:00.700><c> reducing</c><00:40:01.510><c> their</c><00:40:01.660><c> heap</c>

00:40:01.830 --> 00:40:01.840 align:start position:0%
concentrating on reducing their heap
 

00:40:01.840 --> 00:40:03.390 align:start position:0%
concentrating on reducing their heap
sizes<00:40:02.320><c> and</c><00:40:02.470><c> so</c><00:40:02.560><c> forth</c><00:40:02.800><c> so</c><00:40:02.950><c> that's</c><00:40:03.100><c> how</c><00:40:03.220><c> this</c>

00:40:03.390 --> 00:40:03.400 align:start position:0%
sizes and so forth so that's how this
 

00:40:03.400 --> 00:40:05.750 align:start position:0%
sizes and so forth so that's how this
this<00:40:03.850><c> issue</c><00:40:04.060><c> has</c><00:40:04.270><c> started</c><00:40:04.540><c> to</c><00:40:04.600><c> come</c><00:40:04.780><c> up</c><00:40:04.810><c> a</c><00:40:05.110><c> lot</c>

00:40:05.750 --> 00:40:05.760 align:start position:0%
this issue has started to come up a lot
 

00:40:05.760 --> 00:40:08.190 align:start position:0%
this issue has started to come up a lot
all<00:40:06.760><c> right</c><00:40:06.820><c> so</c><00:40:07.120><c> let's</c><00:40:07.330><c> compare</c><00:40:07.630><c> this</c><00:40:07.810><c> to</c><00:40:07.870><c> the</c>

00:40:08.190 --> 00:40:08.200 align:start position:0%
all right so let's compare this to the
 

00:40:08.200 --> 00:40:09.930 align:start position:0%
all right so let's compare this to the
to<00:40:08.620><c> the</c><00:40:08.770><c> new</c><00:40:09.010><c> implementation</c><00:40:09.790><c> that's</c>

00:40:09.930 --> 00:40:09.940 align:start position:0%
to the new implementation that's
 

00:40:09.940 --> 00:40:12.540 align:start position:0%
to the new implementation that's
returned<00:40:10.330><c> by</c><00:40:10.510><c> set</c><00:40:10.840><c> dot</c><00:40:11.080><c> of</c><00:40:11.290><c> so</c><00:40:12.010><c> the</c><00:40:12.130><c> code</c><00:40:12.310><c> here</c>

00:40:12.540 --> 00:40:12.550 align:start position:0%
returned by set dot of so the code here
 

00:40:12.550 --> 00:40:14.670 align:start position:0%
returned by set dot of so the code here
is<00:40:12.640><c> we</c><00:40:12.760><c> say</c><00:40:12.940><c> set</c><00:40:13.240><c> dot</c><00:40:13.420><c> of</c><00:40:13.570><c> foo</c><00:40:13.870><c> bar</c><00:40:14.140><c> so</c><00:40:14.560><c> the</c>

00:40:14.670 --> 00:40:14.680 align:start position:0%
is we say set dot of foo bar so the
 

00:40:14.680 --> 00:40:17.580 align:start position:0%
is we say set dot of foo bar so the
source<00:40:14.980><c> code</c><00:40:15.280><c> is</c><00:40:15.580><c> nice</c><00:40:16.480><c> and</c><00:40:16.660><c> simpler</c><00:40:16.990><c> but</c><00:40:17.440><c> if</c>

00:40:17.580 --> 00:40:17.590 align:start position:0%
source code is nice and simpler but if
 

00:40:17.590 --> 00:40:19.200 align:start position:0%
source code is nice and simpler but if
you<00:40:17.680><c> look</c><00:40:17.860><c> at</c><00:40:17.950><c> the</c><00:40:18.040><c> objects</c><00:40:18.520><c> that</c><00:40:18.940><c> are</c><00:40:19.090><c> created</c>

00:40:19.200 --> 00:40:19.210 align:start position:0%
you look at the objects that are created
 

00:40:19.210 --> 00:40:21.030 align:start position:0%
you look at the objects that are created
there's<00:40:19.930><c> an</c><00:40:20.200><c> internal</c><00:40:20.770><c> implementation</c>

00:40:21.030 --> 00:40:21.040 align:start position:0%
there's an internal implementation
 

00:40:21.040 --> 00:40:24.060 align:start position:0%
there's an internal implementation
called<00:40:21.730><c> set</c><00:40:22.150><c> two</c><00:40:22.480><c> which</c><00:40:23.290><c> is</c><00:40:23.470><c> a</c><00:40:23.500><c> set</c><00:40:23.800><c> that</c><00:40:24.010><c> has</c>

00:40:24.060 --> 00:40:24.070 align:start position:0%
called set two which is a set that has
 

00:40:24.070 --> 00:40:26.310 align:start position:0%
called set two which is a set that has
exactly<00:40:24.580><c> two</c><00:40:24.910><c> elements</c><00:40:25.390><c> which</c><00:40:25.780><c> are</c><00:40:25.900><c> stored</c><00:40:26.200><c> in</c>

00:40:26.310 --> 00:40:26.320 align:start position:0%
exactly two elements which are stored in
 

00:40:26.320 --> 00:40:30.360 align:start position:0%
exactly two elements which are stored in
the<00:40:26.380><c> field</c><00:40:26.650><c> and</c><00:40:27.180><c> so</c><00:40:28.180><c> that</c><00:40:28.930><c> only</c><00:40:29.170><c> takes</c><00:40:29.560><c> 20</c>

00:40:30.360 --> 00:40:30.370 align:start position:0%
the field and so that only takes 20
 

00:40:30.370 --> 00:40:34.860 align:start position:0%
the field and so that only takes 20
bytes<00:40:30.550><c> so</c><00:40:31.300><c> if</c><00:40:31.660><c> you</c><00:40:32.080><c> have</c><00:40:32.560><c> if</c><00:40:33.340><c> you</c><00:40:33.430><c> have</c><00:40:33.550><c> a</c><00:40:33.870><c> data</c>

00:40:34.860 --> 00:40:34.870 align:start position:0%
bytes so if you have if you have a data
 

00:40:34.870 --> 00:40:36.570 align:start position:0%
bytes so if you have if you have a data
structure<00:40:35.140><c> like</c><00:40:35.380><c> this</c><00:40:35.530><c> you</c><00:40:35.800><c> can</c><00:40:35.980><c> reduce</c><00:40:36.340><c> your</c>

00:40:36.570 --> 00:40:36.580 align:start position:0%
structure like this you can reduce your
 

00:40:36.580 --> 00:40:38.430 align:start position:0%
structure like this you can reduce your
space<00:40:36.760><c> consumption</c><00:40:37.330><c> from</c><00:40:37.570><c> this</c><00:40:37.990><c> is</c><00:40:38.140><c> again</c>

00:40:38.430 --> 00:40:38.440 align:start position:0%
space consumption from this is again
 

00:40:38.440 --> 00:40:39.960 align:start position:0%
space consumption from this is again
this<00:40:38.560><c> is</c><00:40:38.620><c> overhead</c><00:40:39.160><c> you</c><00:40:39.370><c> can</c><00:40:39.490><c> reduce</c><00:40:39.760><c> the</c>

00:40:39.960 --> 00:40:39.970 align:start position:0%
this is overhead you can reduce the
 

00:40:39.970 --> 00:40:43.560 align:start position:0%
this is overhead you can reduce the
overhead<00:40:40.690><c> of</c><00:40:40.930><c> storing</c><00:40:41.710><c> these</c><00:40:42.330><c> these</c><00:40:43.330><c> data</c>

00:40:43.560 --> 00:40:43.570 align:start position:0%
overhead of storing these these data
 

00:40:43.570 --> 00:40:47.250 align:start position:0%
overhead of storing these these data
items<00:40:43.960><c> from</c><00:40:44.500><c> 152</c><00:40:45.280><c> bytes</c><00:40:45.580><c> to</c><00:40:46.090><c> 20</c><00:40:46.390><c> bytes</c><00:40:46.570><c> so</c><00:40:47.110><c> we</c>

00:40:47.250 --> 00:40:47.260 align:start position:0%
items from 152 bytes to 20 bytes so we
 

00:40:47.260 --> 00:40:50.750 align:start position:0%
items from 152 bytes to 20 bytes so we
think<00:40:47.410><c> that's</c><00:40:47.560><c> a</c><00:40:48.040><c> really</c><00:40:48.840><c> really</c><00:40:49.840><c> useful</c>

00:40:50.750 --> 00:40:50.760 align:start position:0%
think that's a really really useful
 

00:40:50.760 --> 00:40:55.080 align:start position:0%
think that's a really really useful
space<00:40:51.760><c> optimization</c><00:40:52.030><c> in</c><00:40:52.840><c> particular</c><00:40:53.580><c> the</c><00:40:54.580><c> JDK</c>

00:40:55.080 --> 00:40:55.090 align:start position:0%
space optimization in particular the JDK
 

00:40:55.090 --> 00:40:56.610 align:start position:0%
space optimization in particular the JDK
itself<00:40:55.570><c> has</c><00:40:55.780><c> started</c><00:40:56.140><c> to</c><00:40:56.260><c> use</c><00:40:56.440><c> these</c>

00:40:56.610 --> 00:40:56.620 align:start position:0%
itself has started to use these
 

00:40:56.620 --> 00:40:58.410 align:start position:0%
itself has started to use these
implementations<00:40:57.310><c> as</c><00:40:57.490><c> part</c><00:40:57.820><c> of</c><00:40:57.910><c> its</c><00:40:58.060><c> internal</c>

00:40:58.410 --> 00:40:58.420 align:start position:0%
implementations as part of its internal
 

00:40:58.420 --> 00:41:00.390 align:start position:0%
implementations as part of its internal
startup<00:40:58.990><c> and</c><00:40:59.230><c> as</c><00:40:59.470><c> part</c><00:40:59.680><c> of</c><00:40:59.710><c> the</c><00:40:59.830><c> internal</c><00:41:00.250><c> data</c>

00:41:00.390 --> 00:41:00.400 align:start position:0%
startup and as part of the internal data
 

00:41:00.400 --> 00:41:03.270 align:start position:0%
startup and as part of the internal data
structures<00:41:00.970><c> for</c><00:41:01.630><c> say</c><00:41:02.110><c> the</c><00:41:02.140><c> module</c><00:41:02.620><c> system</c><00:41:02.800><c> and</c>

00:41:03.270 --> 00:41:03.280 align:start position:0%
structures for say the module system and
 

00:41:03.280 --> 00:41:05.220 align:start position:0%
structures for say the module system and
those<00:41:03.610><c> guys</c><00:41:03.790><c> are</c><00:41:04.210><c> pleased</c><00:41:04.690><c> this</c><00:41:04.840><c> punch</c><00:41:05.080><c> with</c>

00:41:05.220 --> 00:41:05.230 align:start position:0%
those guys are pleased this punch with
 

00:41:05.230 --> 00:41:06.750 align:start position:0%
those guys are pleased this punch with
this<00:41:05.410><c> not</c><00:41:05.620><c> only</c><00:41:05.950><c> does</c><00:41:06.130><c> it</c><00:41:06.160><c> make</c><00:41:06.340><c> their</c><00:41:06.550><c> source</c>

00:41:06.750 --> 00:41:06.760 align:start position:0%
this not only does it make their source
 

00:41:06.760 --> 00:41:08.760 align:start position:0%
this not only does it make their source
code<00:41:06.880><c> nicer</c><00:41:07.420><c> but</c><00:41:07.840><c> it</c><00:41:07.960><c> actually</c><00:41:08.290><c> reduces</c><00:41:08.710><c> the</c>

00:41:08.760 --> 00:41:08.770 align:start position:0%
code nicer but it actually reduces the
 

00:41:08.770 --> 00:41:11.760 align:start position:0%
code nicer but it actually reduces the
space<00:41:09.190><c> that's</c><00:41:09.730><c> consumed</c><00:41:10.240><c> so</c><00:41:10.720><c> we</c><00:41:10.960><c> can</c><00:41:11.140><c> we</c><00:41:11.620><c> can</c>

00:41:11.760 --> 00:41:11.770 align:start position:0%
space that's consumed so we can we can
 

00:41:11.770 --> 00:41:15.049 align:start position:0%
space that's consumed so we can we can
deliver<00:41:11.980><c> a</c><00:41:12.540><c> JDK</c><00:41:13.540><c> that</c><00:41:13.780><c> has</c>

00:41:15.049 --> 00:41:15.059 align:start position:0%
deliver a JDK that has
 

00:41:15.059 --> 00:41:17.839 align:start position:0%
deliver a JDK that has
reduced<00:41:15.930><c> heat</c><00:41:16.529><c> consumption</c><00:41:17.010><c> at</c><00:41:17.400><c> at</c><00:41:17.700><c> the</c>

00:41:17.839 --> 00:41:17.849 align:start position:0%
reduced heat consumption at at the
 

00:41:17.849 --> 00:41:20.480 align:start position:0%
reduced heat consumption at at the
beginning<00:41:18.150><c> of</c><00:41:18.559><c> at</c><00:41:19.559><c> the</c><00:41:19.680><c> start</c><00:41:19.740><c> of</c><00:41:20.010><c> Maine</c><00:41:20.250><c> it</c>

00:41:20.480 --> 00:41:20.490 align:start position:0%
beginning of at the start of Maine it
 

00:41:20.490 --> 00:41:22.880 align:start position:0%
beginning of at the start of Maine it
actually<00:41:20.789><c> uses</c><00:41:20.970><c> well</c><00:41:21.690><c> it's</c><00:41:22.289><c> doing</c><00:41:22.559><c> more</c><00:41:22.710><c> work</c>

00:41:22.880 --> 00:41:22.890 align:start position:0%
actually uses well it's doing more work
 

00:41:22.890 --> 00:41:24.650 align:start position:0%
actually uses well it's doing more work
because<00:41:23.190><c> of</c><00:41:23.220><c> the</c><00:41:23.309><c> module</c><00:41:23.609><c> system</c><00:41:23.789><c> but</c><00:41:24.420><c> it's</c>

00:41:24.650 --> 00:41:24.660 align:start position:0%
because of the module system but it's
 

00:41:24.660 --> 00:41:27.200 align:start position:0%
because of the module system but it's
it's<00:41:24.990><c> less</c><00:41:25.380><c> this</c><00:41:25.770><c> is</c><00:41:25.980><c> less</c><00:41:26.220><c> and</c><00:41:26.490><c> it</c><00:41:26.819><c> would</c><00:41:27.029><c> have</c>

00:41:27.200 --> 00:41:27.210 align:start position:0%
it's less this is less and it would have
 

00:41:27.210 --> 00:41:30.250 align:start position:0%
it's less this is less and it would have
if<00:41:27.539><c> we</c><00:41:27.750><c> had</c><00:41:27.869><c> used</c><00:41:28.079><c> conventional</c><00:41:28.470><c> collections</c>

00:41:30.250 --> 00:41:30.260 align:start position:0%
if we had used conventional collections
 

00:41:30.260 --> 00:41:32.779 align:start position:0%
if we had used conventional collections
alright<00:41:31.260><c> a</c><00:41:31.289><c> quick</c><00:41:31.619><c> word</c><00:41:31.799><c> on</c><00:41:31.950><c> serialization</c>

00:41:32.779 --> 00:41:32.789 align:start position:0%
alright a quick word on serialization
 

00:41:32.789 --> 00:41:35.630 align:start position:0%
alright a quick word on serialization
yes<00:41:33.390><c> the</c><00:41:33.779><c> elements</c><00:41:34.559><c> are</c><00:41:34.740><c> the</c><00:41:34.920><c> the</c><00:41:35.220><c> collection</c>

00:41:35.630 --> 00:41:35.640 align:start position:0%
yes the elements are the the collection
 

00:41:35.640 --> 00:41:38.359 align:start position:0%
yes the elements are the the collection
implementations<00:41:36.390><c> returned</c><00:41:37.160><c> from</c><00:41:38.160><c> these</c>

00:41:38.359 --> 00:41:38.369 align:start position:0%
implementations returned from these
 

00:41:38.369 --> 00:41:41.299 align:start position:0%
implementations returned from these
methods<00:41:38.819><c> are</c><00:41:39.150><c> serializable</c><00:41:40.039><c> people</c><00:41:41.039><c> really</c>

00:41:41.299 --> 00:41:41.309 align:start position:0%
methods are serializable people really
 

00:41:41.309 --> 00:41:45.230 align:start position:0%
methods are serializable people really
use<00:41:41.460><c> serialization</c><00:41:43.339><c> but</c><00:41:44.339><c> we</c><00:41:45.089><c> use</c><00:41:45.210><c> a</c>

00:41:45.230 --> 00:41:45.240 align:start position:0%
use serialization but we use a
 

00:41:45.240 --> 00:41:48.410 align:start position:0%
use serialization but we use a
serialization<00:41:45.869><c> proxy</c><00:41:46.380><c> mechanism</c><00:41:46.920><c> to</c><00:41:47.420><c> keep</c>

00:41:48.410 --> 00:41:48.420 align:start position:0%
serialization proxy mechanism to keep
 

00:41:48.420 --> 00:41:50.630 align:start position:0%
serialization proxy mechanism to keep
those<00:41:48.660><c> internal</c><00:41:49.109><c> implementations</c><00:41:49.829><c> hidden</c><00:41:50.220><c> so</c>

00:41:50.630 --> 00:41:50.640 align:start position:0%
those internal implementations hidden so
 

00:41:50.640 --> 00:41:53.809 align:start position:0%
those internal implementations hidden so
we<00:41:50.789><c> can</c><00:41:50.940><c> reimplementation</c><00:41:52.819><c> remains</c>

00:41:53.809 --> 00:41:53.819 align:start position:0%
we can reimplementation remains
 

00:41:53.819 --> 00:41:56.779 align:start position:0%
we can reimplementation remains
compatible<00:41:54.180><c> with</c><00:41:55.020><c> itself</c><00:41:55.410><c> I</c><00:41:56.010><c> think</c><00:41:56.430><c> the</c><00:41:56.579><c> main</c>

00:41:56.779 --> 00:41:56.789 align:start position:0%
compatible with itself I think the main
 

00:41:56.789 --> 00:41:59.089 align:start position:0%
compatible with itself I think the main
thing<00:41:57.059><c> the</c><00:41:57.779><c> main</c><00:41:57.809><c> takeaway</c><00:41:58.319><c> is</c><00:41:58.619><c> if</c><00:41:58.890><c> you</c><00:41:59.010><c> are</c>

00:41:59.089 --> 00:41:59.099 align:start position:0%
thing the main takeaway is if you are
 

00:41:59.099 --> 00:42:01.579 align:start position:0%
thing the main takeaway is if you are
serializing<00:41:59.940><c> existing</c><00:42:00.839><c> collections</c><00:42:01.289><c> like</c>

00:42:01.579 --> 00:42:01.589 align:start position:0%
serializing existing collections like
 

00:42:01.589 --> 00:42:06.519 align:start position:0%
serializing existing collections like
ArrayList<00:42:02.400><c> or</c><00:42:02.700><c> hashmap</c><00:42:03.470><c> the</c><00:42:04.470><c> those</c><00:42:05.220><c> will</c><00:42:05.430><c> that</c>

00:42:06.519 --> 00:42:06.529 align:start position:0%
ArrayList or hashmap the those will that
 

00:42:06.529 --> 00:42:09.380 align:start position:0%
ArrayList or hashmap the those will that
those<00:42:07.529><c> will</c><00:42:07.710><c> continue</c><00:42:08.250><c> I</c><00:42:08.549><c> mean</c><00:42:08.819><c> those</c><00:42:09.240><c> are</c>

00:42:09.380 --> 00:42:09.390 align:start position:0%
those will continue I mean those are
 

00:42:09.390 --> 00:42:10.760 align:start position:0%
those will continue I mean those are
serializable<00:42:09.690><c> they'll</c><00:42:10.170><c> continue</c><00:42:10.410><c> to</c><00:42:10.619><c> work</c>

00:42:10.760 --> 00:42:10.770 align:start position:0%
serializable they'll continue to work
 

00:42:10.770 --> 00:42:13.309 align:start position:0%
serializable they'll continue to work
between<00:42:11.130><c> JDK</c><00:42:12.089><c> 8</c><00:42:12.119><c> and</c><00:42:12.480><c> JDK</c><00:42:12.750><c> 9</c>

00:42:13.309 --> 00:42:13.319 align:start position:0%
between JDK 8 and JDK 9
 

00:42:13.319 --> 00:42:16.250 align:start position:0%
between JDK 8 and JDK 9
however<00:42:13.920><c> if</c><00:42:14.400><c> you</c><00:42:14.849><c> create</c><00:42:15.240><c> instances</c><00:42:15.809><c> of</c><00:42:16.049><c> these</c>

00:42:16.250 --> 00:42:16.260 align:start position:0%
however if you create instances of these
 

00:42:16.260 --> 00:42:18.680 align:start position:0%
however if you create instances of these
new<00:42:16.589><c> collections</c><00:42:17.130><c> and</c><00:42:17.309><c> serialize</c><00:42:17.940><c> them</c><00:42:18.180><c> they</c>

00:42:18.680 --> 00:42:18.690 align:start position:0%
new collections and serialize them they
 

00:42:18.690 --> 00:42:21.950 align:start position:0%
new collections and serialize them they
cannot<00:42:19.079><c> be</c><00:42:19.319><c> deserialized</c><00:42:20.039><c> on</c><00:42:20.510><c> JDK</c><00:42:21.510><c> 8</c><00:42:21.539><c> and</c>

00:42:21.950 --> 00:42:21.960 align:start position:0%
cannot be deserialized on JDK 8 and
 

00:42:21.960 --> 00:42:24.260 align:start position:0%
cannot be deserialized on JDK 8 and
earlier<00:42:22.349><c> and</c><00:42:22.619><c> so</c><00:42:23.460><c> you</c><00:42:23.549><c> think</c><00:42:23.670><c> about</c><00:42:23.789><c> it</c><00:42:24.089><c> well</c>

00:42:24.260 --> 00:42:24.270 align:start position:0%
earlier and so you think about it well
 

00:42:24.270 --> 00:42:26.089 align:start position:0%
earlier and so you think about it well
these<00:42:24.359><c> classes</c><00:42:24.839><c> didn't</c><00:42:25.230><c> exist</c><00:42:25.650><c> on</c><00:42:25.920><c> those</c>

00:42:26.089 --> 00:42:26.099 align:start position:0%
these classes didn't exist on those
 

00:42:26.099 --> 00:42:28.160 align:start position:0%
these classes didn't exist on those
early<00:42:26.460><c> releases</c><00:42:26.789><c> but</c><00:42:27.539><c> if</c><00:42:27.750><c> you</c><00:42:27.900><c> have</c><00:42:28.049><c> an</c>

00:42:28.160 --> 00:42:28.170 align:start position:0%
early releases but if you have an
 

00:42:28.170 --> 00:42:29.839 align:start position:0%
early releases but if you have an
environment<00:42:28.619><c> where</c><00:42:28.920><c> your</c><00:42:29.309><c> serializing</c>

00:42:29.839 --> 00:42:29.849 align:start position:0%
environment where your serializing
 

00:42:29.849 --> 00:42:31.940 align:start position:0%
environment where your serializing
things<00:42:30.089><c> and</c><00:42:30.390><c> going</c><00:42:30.569><c> across</c><00:42:31.049><c> different</c><00:42:31.529><c> JVM</c>

00:42:31.940 --> 00:42:31.950 align:start position:0%
things and going across different JVM
 

00:42:31.950 --> 00:42:34.640 align:start position:0%
things and going across different JVM
versions<00:42:32.460><c> or</c><00:42:32.640><c> JDK</c><00:42:33.029><c> versions</c><00:42:33.480><c> you</c><00:42:34.079><c> probably</c>

00:42:34.640 --> 00:42:34.650 align:start position:0%
versions or JDK versions you probably
 

00:42:34.650 --> 00:42:36.589 align:start position:0%
versions or JDK versions you probably
should<00:42:34.890><c> stay</c><00:42:35.099><c> away</c><00:42:35.220><c> from</c><00:42:35.339><c> these</c><00:42:35.609><c> until</c><00:42:36.240><c> every</c>

00:42:36.589 --> 00:42:36.599 align:start position:0%
should stay away from these until every
 

00:42:36.599 --> 00:42:40.839 align:start position:0%
should stay away from these until every
until<00:42:37.170><c> every</c><00:42:37.440><c> instance</c><00:42:37.829><c> is</c><00:42:38.010><c> up</c><00:42:38.549><c> on</c><00:42:38.910><c> JDK</c><00:42:39.480><c> 9</c>

00:42:40.839 --> 00:42:40.849 align:start position:0%
until every instance is up on JDK 9
 

00:42:40.849 --> 00:42:44.510 align:start position:0%
until every instance is up on JDK 9
alright<00:42:41.849><c> a</c><00:42:42.000><c> quick</c><00:42:42.299><c> word</c><00:42:42.569><c> on</c><00:42:43.130><c> some</c><00:42:44.130><c> things</c><00:42:44.339><c> that</c>

00:42:44.510 --> 00:42:44.520 align:start position:0%
alright a quick word on some things that
 

00:42:44.520 --> 00:42:47.029 align:start position:0%
alright a quick word on some things that
I'm<00:42:44.609><c> working</c><00:42:44.640><c> on</c><00:42:45.000><c> for</c><00:42:45.119><c> the</c><00:42:45.329><c> next</c><00:42:45.420><c> release</c><00:42:46.039><c> JDK</c>

00:42:47.029 --> 00:42:47.039 align:start position:0%
I'm working on for the next release JDK
 

00:42:47.039 --> 00:42:49.549 align:start position:0%
I'm working on for the next release JDK
10<00:42:47.309><c> no</c><00:42:48.059><c> I</c><00:42:48.089><c> guess</c><00:42:48.539><c> it's</c><00:42:48.690><c> actually</c><00:42:48.990><c> called</c><00:42:49.109><c> JDK</c>

00:42:49.549 --> 00:42:49.559 align:start position:0%
10 no I guess it's actually called JDK
 

00:42:49.559 --> 00:42:54.170 align:start position:0%
10 no I guess it's actually called JDK
18.3<00:42:50.430><c> now</c><00:42:52.250><c> it's</c><00:42:53.250><c> it's</c><00:42:53.520><c> actually</c><00:42:53.940><c> pretty</c>

00:42:54.170 --> 00:42:54.180 align:start position:0%
18.3 now it's it's actually pretty
 

00:42:54.180 --> 00:42:57.650 align:start position:0%
18.3 now it's it's actually pretty
difficult<00:42:54.270><c> to</c><00:42:55.140><c> create</c><00:42:56.240><c> instances</c><00:42:57.240><c> of</c><00:42:57.510><c> these</c>

00:42:57.650 --> 00:42:57.660 align:start position:0%
difficult to create instances of these
 

00:42:57.660 --> 00:42:59.900 align:start position:0%
difficult to create instances of these
collections<00:42:58.170><c> with</c><00:42:58.380><c> arbitrary</c><00:42:58.920><c> elements</c><00:42:59.579><c> that</c>

00:42:59.900 --> 00:42:59.910 align:start position:0%
collections with arbitrary elements that
 

00:42:59.910 --> 00:43:02.329 align:start position:0%
collections with arbitrary elements that
are<00:43:00.240><c> computed</c><00:43:00.930><c> if</c><00:43:01.109><c> you</c><00:43:01.500><c> list</c><00:43:01.740><c> them</c><00:43:01.890><c> out</c><00:43:02.010><c> I</c>

00:43:02.329 --> 00:43:02.339 align:start position:0%
are computed if you list them out I
 

00:43:02.339 --> 00:43:04.130 align:start position:0%
are computed if you list them out I
showed<00:43:02.730><c> you</c><00:43:02.819><c> the</c><00:43:02.940><c> API</c><00:43:03.150><c> is</c><00:43:03.270><c> for</c><00:43:03.420><c> doing</c><00:43:03.539><c> that</c><00:43:03.750><c> but</c>

00:43:04.130 --> 00:43:04.140 align:start position:0%
showed you the API is for doing that but
 

00:43:04.140 --> 00:43:05.900 align:start position:0%
showed you the API is for doing that but
sometimes<00:43:04.349><c> what</c><00:43:04.680><c> you</c><00:43:04.770><c> want</c><00:43:04.950><c> to</c><00:43:05.039><c> do</c><00:43:05.130><c> is</c><00:43:05.400><c> read</c>

00:43:05.900 --> 00:43:05.910 align:start position:0%
sometimes what you want to do is read
 

00:43:05.910 --> 00:43:07.490 align:start position:0%
sometimes what you want to do is read
them<00:43:06.089><c> from</c><00:43:06.210><c> somewhere</c><00:43:06.569><c> or</c><00:43:06.869><c> compute</c><00:43:07.200><c> them</c><00:43:07.349><c> from</c>

00:43:07.490 --> 00:43:07.500 align:start position:0%
them from somewhere or compute them from
 

00:43:07.500 --> 00:43:10.970 align:start position:0%
them from somewhere or compute them from
somewhere<00:43:07.799><c> and</c><00:43:08.520><c> and</c><00:43:08.880><c> get</c><00:43:09.650><c> get</c><00:43:10.650><c> a</c><00:43:10.680><c> bunch</c><00:43:10.890><c> of</c>

00:43:10.970 --> 00:43:10.980 align:start position:0%
somewhere and and get get a bunch of
 

00:43:10.980 --> 00:43:13.069 align:start position:0%
somewhere and and get get a bunch of
elements<00:43:11.460><c> and</c><00:43:11.609><c> then</c><00:43:12.059><c> load</c><00:43:12.359><c> them</c><00:43:12.510><c> into</c><00:43:12.690><c> an</c>

00:43:13.069 --> 00:43:13.079 align:start position:0%
elements and then load them into an
 

00:43:13.079 --> 00:43:16.760 align:start position:0%
elements and then load them into an
unmodifiable<00:43:13.829><c> collection</c><00:43:14.520><c> and</c><00:43:14.700><c> so</c><00:43:15.770><c> i've</c>

00:43:16.760 --> 00:43:16.770 align:start position:0%
unmodifiable collection and so i've
 

00:43:16.770 --> 00:43:18.829 align:start position:0%
unmodifiable collection and so i've
proposed<00:43:17.160><c> adding</c><00:43:17.430><c> new</c><00:43:17.760><c> copy</c><00:43:18.119><c> of</c><00:43:18.359><c> methods</c><00:43:18.750><c> that</c>

00:43:18.829 --> 00:43:18.839 align:start position:0%
proposed adding new copy of methods that
 

00:43:18.839 --> 00:43:20.809 align:start position:0%
proposed adding new copy of methods that
will<00:43:19.049><c> copy</c><00:43:19.349><c> from</c><00:43:19.559><c> an</c><00:43:19.710><c> existing</c><00:43:19.950><c> collection</c><00:43:20.279><c> or</c>

00:43:20.809 --> 00:43:20.819 align:start position:0%
will copy from an existing collection or
 

00:43:20.819 --> 00:43:21.460 align:start position:0%
will copy from an existing collection or
map

00:43:21.460 --> 00:43:21.470 align:start position:0%
map
 

00:43:21.470 --> 00:43:25.270 align:start position:0%
map
and<00:43:21.560><c> then</c><00:43:22.010><c> also</c><00:43:22.280><c> at</c><00:43:22.730><c> the</c><00:43:22.790><c> end</c><00:43:23.090><c> of</c><00:43:23.510><c> a</c><00:43:23.660><c> stream</c><00:43:24.280><c> you</c>

00:43:25.270 --> 00:43:25.280 align:start position:0%
and then also at the end of a stream you
 

00:43:25.280 --> 00:43:26.890 align:start position:0%
and then also at the end of a stream you
might<00:43:25.430><c> want</c><00:43:25.640><c> to</c><00:43:25.760><c> do</c><00:43:25.880><c> with</c><00:43:25.970><c> dream</c><00:43:26.210><c> computation</c>

00:43:26.890 --> 00:43:26.900 align:start position:0%
might want to do with dream computation
 

00:43:26.900 --> 00:43:28.780 align:start position:0%
might want to do with dream computation
and<00:43:27.050><c> then</c><00:43:27.320><c> dump</c><00:43:27.830><c> the</c><00:43:27.980><c> elements</c><00:43:28.400><c> that</c><00:43:28.460><c> come</c><00:43:28.609><c> out</c>

00:43:28.780 --> 00:43:28.790 align:start position:0%
and then dump the elements that come out
 

00:43:28.790 --> 00:43:30.160 align:start position:0%
and then dump the elements that come out
at<00:43:28.910><c> the</c><00:43:29.000><c> end</c><00:43:29.119><c> of</c><00:43:29.210><c> the</c><00:43:29.270><c> stream</c><00:43:29.510><c> into</c><00:43:30.050><c> an</c>

00:43:30.160 --> 00:43:30.170 align:start position:0%
at the end of the stream into an
 

00:43:30.170 --> 00:43:32.830 align:start position:0%
at the end of the stream into an
unmodifiable<00:43:30.770><c> collection</c><00:43:31.760><c> so</c><00:43:32.270><c> I've</c><00:43:32.420><c> proposed</c>

00:43:32.830 --> 00:43:32.840 align:start position:0%
unmodifiable collection so I've proposed
 

00:43:32.840 --> 00:43:35.620 align:start position:0%
unmodifiable collection so I've proposed
a<00:43:33.109><c> family</c><00:43:33.710><c> of</c><00:43:33.890><c> new</c><00:43:34.099><c> collectors</c><00:43:34.730><c> so</c><00:43:35.420><c> again</c>

00:43:35.620 --> 00:43:35.630 align:start position:0%
a family of new collectors so again
 

00:43:35.630 --> 00:43:37.960 align:start position:0%
a family of new collectors so again
these<00:43:35.750><c> are</c><00:43:35.900><c> not</c><00:43:35.930><c> in</c><00:43:36.290><c> Java</c><00:43:36.800><c> 9</c><00:43:37.160><c> unfortunately</c>

00:43:37.960 --> 00:43:37.970 align:start position:0%
these are not in Java 9 unfortunately
 

00:43:37.970 --> 00:43:40.300 align:start position:0%
these are not in Java 9 unfortunately
but<00:43:38.480><c> they</c><00:43:38.630><c> are</c><00:43:38.690><c> proposed</c><00:43:39.080><c> for</c><00:43:39.470><c> the</c><00:43:40.099><c> next</c>

00:43:40.300 --> 00:43:40.310 align:start position:0%
but they are proposed for the next
 

00:43:40.310 --> 00:43:42.760 align:start position:0%
but they are proposed for the next
release<00:43:40.550><c> which</c><00:43:40.910><c> is</c><00:43:41.560><c> there's</c><00:43:42.560><c> going</c><00:43:42.650><c> to</c><00:43:42.710><c> be</c>

00:43:42.760 --> 00:43:42.770 align:start position:0%
release which is there's going to be
 

00:43:42.770 --> 00:43:44.170 align:start position:0%
release which is there's going to be
some<00:43:43.010><c> discussion</c><00:43:43.280><c> about</c><00:43:43.550><c> this</c><00:43:43.730><c> but</c><00:43:44.030><c> our</c>

00:43:44.170 --> 00:43:44.180 align:start position:0%
some discussion about this but our
 

00:43:44.180 --> 00:43:47.710 align:start position:0%
some discussion about this but our
working<00:43:44.420><c> number</c><00:43:44.869><c> is</c><00:43:45.080><c> 18</c><00:43:45.590><c> point</c><00:43:45.800><c> 3</c><00:43:46.070><c> so</c><00:43:46.520><c> JDK</c><00:43:46.910><c> 18.3</c>

00:43:47.710 --> 00:43:47.720 align:start position:0%
working number is 18 point 3 so JDK 18.3
 

00:43:47.720 --> 00:43:51.609 align:start position:0%
working number is 18 point 3 so JDK 18.3
these<00:43:48.410><c> are</c><00:43:48.560><c> proposed</c><00:43:48.890><c> for</c><00:43:50.349><c> alright</c><00:43:51.349><c> quick</c>

00:43:51.609 --> 00:43:51.619 align:start position:0%
these are proposed for alright quick
 

00:43:51.619 --> 00:43:54.310 align:start position:0%
these are proposed for alright quick
summary<00:43:51.980><c> and</c><00:43:52.790><c> then</c><00:43:53.030><c> we</c><00:43:53.180><c> might</c><00:43:53.300><c> have</c><00:43:53.510><c> time</c><00:43:54.290><c> for</c>

00:43:54.310 --> 00:43:54.320 align:start position:0%
summary and then we might have time for
 

00:43:54.320 --> 00:43:56.710 align:start position:0%
summary and then we might have time for
one<00:43:54.650><c> or</c><00:43:55.160><c> two</c><00:43:55.190><c> questions</c><00:43:55.359><c> collect</c><00:43:56.359><c> the</c>

00:43:56.710 --> 00:43:56.720 align:start position:0%
one or two questions collect the
 

00:43:56.720 --> 00:43:58.599 align:start position:0%
one or two questions collect the
collections<00:43:57.109><c> framework</c><00:43:57.260><c> is</c><00:43:57.680><c> 19</c><00:43:58.280><c> years</c><00:43:58.310><c> old</c>

00:43:58.599 --> 00:43:58.609 align:start position:0%
collections framework is 19 years old
 

00:43:58.609 --> 00:44:00.580 align:start position:0%
collections framework is 19 years old
and<00:43:58.970><c> so</c><00:43:59.240><c> it's</c><00:43:59.420><c> almost</c><00:43:59.630><c> as</c><00:43:59.900><c> old</c><00:44:00.020><c> as</c><00:44:00.170><c> the</c><00:44:00.290><c> rest</c><00:44:00.440><c> of</c>

00:44:00.580 --> 00:44:00.590 align:start position:0%
and so it's almost as old as the rest of
 

00:44:00.590 --> 00:44:03.310 align:start position:0%
and so it's almost as old as the rest of
Java<00:44:00.800><c> but</c><00:44:01.609><c> it</c><00:44:01.970><c> still</c><00:44:02.330><c> has</c><00:44:02.480><c> a</c><00:44:02.510><c> lot</c><00:44:02.690><c> of</c><00:44:02.750><c> legs</c><00:44:03.020><c> I</c>

00:44:03.310 --> 00:44:03.320 align:start position:0%
Java but it still has a lot of legs I
 

00:44:03.320 --> 00:44:05.589 align:start position:0%
Java but it still has a lot of legs I
think<00:44:03.950><c> it's</c><00:44:04.130><c> very</c><00:44:04.250><c> useful</c><00:44:04.490><c> I</c><00:44:05.060><c> believe</c>

00:44:05.589 --> 00:44:05.599 align:start position:0%
think it's very useful I believe
 

00:44:05.599 --> 00:44:07.630 align:start position:0%
think it's very useful I believe
everybody's<00:44:06.020><c> using</c><00:44:06.349><c> it</c><00:44:06.440><c> today</c><00:44:06.590><c> and</c><00:44:07.070><c> so</c><00:44:07.430><c> we're</c>

00:44:07.630 --> 00:44:07.640 align:start position:0%
everybody's using it today and so we're
 

00:44:07.640 --> 00:44:09.730 align:start position:0%
everybody's using it today and so we're
continuing<00:44:07.790><c> to</c><00:44:08.570><c> enhance</c><00:44:08.810><c> it</c><00:44:09.170><c> and</c><00:44:09.290><c> make</c><00:44:09.710><c> it</c>

00:44:09.730 --> 00:44:09.740 align:start position:0%
continuing to enhance it and make it
 

00:44:09.740 --> 00:44:13.180 align:start position:0%
continuing to enhance it and make it
more<00:44:10.010><c> useful</c><00:44:10.990><c> the</c><00:44:11.990><c> highlight</c><00:44:12.410><c> of</c><00:44:12.440><c> JDK</c><00:44:12.859><c> Nine's</c>

00:44:13.180 --> 00:44:13.190 align:start position:0%
more useful the highlight of JDK Nine's
 

00:44:13.190 --> 00:44:14.800 align:start position:0%
more useful the highlight of JDK Nine's
collections<00:44:13.730><c> are</c><00:44:14.030><c> the</c><00:44:14.270><c> new</c><00:44:14.420><c> collection</c>

00:44:14.800 --> 00:44:14.810 align:start position:0%
collections are the new collection
 

00:44:14.810 --> 00:44:16.420 align:start position:0%
collections are the new collection
factory<00:44:15.230><c> methods</c><00:44:15.560><c> which</c><00:44:15.710><c> i've</c><00:44:15.859><c> just</c><00:44:15.890><c> met</c><00:44:16.310><c> the</c>

00:44:16.420 --> 00:44:16.430 align:start position:0%
factory methods which i've just met the
 

00:44:16.430 --> 00:44:18.970 align:start position:0%
factory methods which i've just met the
past<00:44:16.580><c> 45</c><00:44:17.000><c> minutes</c><00:44:17.030><c> talking</c><00:44:17.450><c> about</c><00:44:17.599><c> and</c><00:44:17.930><c> JDK</c><00:44:18.650><c> 9</c>

00:44:18.970 --> 00:44:18.980 align:start position:0%
past 45 minutes talking about and JDK 9
 

00:44:18.980 --> 00:44:21.010 align:start position:0%
past 45 minutes talking about and JDK 9
is<00:44:19.190><c> now</c><00:44:19.340><c> shipping</c><00:44:19.670><c> it</c><00:44:19.970><c> was</c><00:44:20.060><c> quite</c><00:44:20.540><c> a</c><00:44:20.570><c> quite</c><00:44:20.990><c> a</c>

00:44:21.010 --> 00:44:21.020 align:start position:0%
is now shipping it was quite a quite a
 

00:44:21.020 --> 00:44:22.900 align:start position:0%
is now shipping it was quite a quite a
pleasure<00:44:21.260><c> to</c><00:44:21.440><c> update</c><00:44:21.740><c> this</c><00:44:21.980><c> I've</c><00:44:22.310><c> been</c><00:44:22.460><c> giving</c>

00:44:22.900 --> 00:44:22.910 align:start position:0%
pleasure to update this I've been giving
 

00:44:22.910 --> 00:44:25.089 align:start position:0%
pleasure to update this I've been giving
this<00:44:22.940><c> talk</c><00:44:23.180><c> for</c><00:44:23.480><c> a</c><00:44:23.510><c> year</c><00:44:24.200><c> or</c><00:44:24.260><c> so</c><00:44:24.440><c> and</c><00:44:24.740><c> now</c><00:44:24.800><c> I</c><00:44:24.830><c> can</c>

00:44:25.089 --> 00:44:25.099 align:start position:0%
this talk for a year or so and now I can
 

00:44:25.099 --> 00:44:28.300 align:start position:0%
this talk for a year or so and now I can
say<00:44:25.280><c> JDK</c><00:44:26.030><c> 9</c><00:44:26.180><c> is</c><00:44:26.359><c> really</c><00:44:26.630><c> out</c><00:44:26.750><c> there</c><00:44:26.990><c> and</c><00:44:27.310><c> you</c>

00:44:28.300 --> 00:44:28.310 align:start position:0%
say JDK 9 is really out there and you
 

00:44:28.310 --> 00:44:30.520 align:start position:0%
say JDK 9 is really out there and you
can<00:44:28.460><c> download</c><00:44:28.640><c> from</c><00:44:29.119><c> either</c><00:44:29.420><c> open</c><00:44:29.839><c> GT</c><00:44:29.990><c> open</c>

00:44:30.520 --> 00:44:30.530 align:start position:0%
can download from either open GT open
 

00:44:30.530 --> 00:44:35.200 align:start position:0%
can download from either open GT open
JDK<00:44:30.680><c> or</c><00:44:31.540><c> from</c><00:44:32.540><c> Oracle's</c><00:44:33.140><c> Java</c><00:44:33.230><c> website</c><00:44:34.119><c> so</c><00:44:35.119><c> you</c>

00:44:35.200 --> 00:44:35.210 align:start position:0%
JDK or from Oracle's Java website so you
 

00:44:35.210 --> 00:44:37.780 align:start position:0%
JDK or from Oracle's Java website so you
can<00:44:35.480><c> contact</c><00:44:35.810><c> me</c><00:44:35.930><c> on</c><00:44:36.290><c> Twitter</c><00:44:36.830><c> or</c><00:44:37.430><c> you</c><00:44:37.580><c> can</c><00:44:37.700><c> use</c>

00:44:37.780 --> 00:44:37.790 align:start position:0%
can contact me on Twitter or you can use
 

00:44:37.790 --> 00:44:39.609 align:start position:0%
can contact me on Twitter or you can use
the<00:44:37.880><c> hash</c><00:44:38.060><c> tag</c><00:44:38.089><c> in</c><00:44:38.570><c> the</c><00:44:38.690><c> upper</c><00:44:39.230><c> right</c><00:44:39.380><c> corner</c>

00:44:39.609 --> 00:44:39.619 align:start position:0%
the hash tag in the upper right corner
 

00:44:39.619 --> 00:44:43.150 align:start position:0%
the hash tag in the upper right corner
and<00:44:40.900><c> you</c><00:44:41.900><c> might</c><00:44:42.050><c> have</c><00:44:42.200><c> time</c><00:44:42.410><c> for</c><00:44:42.440><c> one</c><00:44:42.859><c> or</c><00:44:42.890><c> two</c>

00:44:43.150 --> 00:44:43.160 align:start position:0%
and you might have time for one or two
 

00:44:43.160 --> 00:44:44.859 align:start position:0%
and you might have time for one or two
quick<00:44:43.400><c> questions</c><00:44:43.790><c> before</c><00:44:43.849><c> we're</c><00:44:44.540><c> out</c><00:44:44.570><c> any</c>

00:44:44.859 --> 00:44:44.869 align:start position:0%
quick questions before we're out any
 

00:44:44.869 --> 00:44:57.800 align:start position:0%
quick questions before we're out any
does<00:44:45.080><c> anybody</c><00:44:45.260><c> have</c><00:44:45.500><c> any</c><00:44:46.480><c> yes</c><00:44:47.480><c> right</c><00:44:47.750><c> there</c>

00:44:57.800 --> 00:44:57.810 align:start position:0%
 
 

00:44:57.810 --> 00:45:15.359 align:start position:0%
 
right<00:44:58.810><c> okay</c><00:44:59.410><c> so</c><00:45:00.400><c> is</c><00:45:00.520><c> that</c><00:45:00.580><c> the</c><00:45:00.730><c> question</c><00:45:01.030><c> I</c><00:45:14.369><c> can</c>

00:45:15.359 --> 00:45:15.369 align:start position:0%
right okay so is that the question I can
 

00:45:15.369 --> 00:45:16.770 align:start position:0%
right okay so is that the question I can
hear<00:45:15.580><c> you</c><00:45:15.700><c> but</c><00:45:15.850><c> but</c><00:45:16.210><c> we're</c><00:45:16.420><c> running</c><00:45:16.510><c> out</c><00:45:16.720><c> of</c>

00:45:16.770 --> 00:45:16.780 align:start position:0%
hear you but but we're running out of
 

00:45:16.780 --> 00:45:18.420 align:start position:0%
hear you but but we're running out of
time<00:45:16.869><c> so</c><00:45:17.140><c> let</c><00:45:17.170><c> me</c><00:45:17.320><c> let</c><00:45:17.770><c> me</c><00:45:17.800><c> let</c><00:45:18.100><c> me</c><00:45:18.190><c> try</c><00:45:18.369><c> to</c>

00:45:18.420 --> 00:45:18.430 align:start position:0%
time so let me let me let me try to
 

00:45:18.430 --> 00:45:19.680 align:start position:0%
time so let me let me let me try to
respond<00:45:18.820><c> and</c><00:45:19.030><c> then</c><00:45:19.150><c> I</c><00:45:19.210><c> can</c><00:45:19.359><c> talk</c><00:45:19.510><c> to</c><00:45:19.630><c> you</c>

00:45:19.680 --> 00:45:19.690 align:start position:0%
respond and then I can talk to you
 

00:45:19.690 --> 00:45:21.270 align:start position:0%
respond and then I can talk to you
afterwards<00:45:20.020><c> but</c><00:45:20.320><c> the</c><00:45:20.680><c> question</c><00:45:20.980><c> was</c><00:45:21.130><c> about</c>

00:45:21.270 --> 00:45:21.280 align:start position:0%
afterwards but the question was about
 

00:45:21.280 --> 00:45:23.820 align:start position:0%
afterwards but the question was about
about<00:45:21.609><c> the</c><00:45:22.210><c> duplicate</c><00:45:22.840><c> duplicate</c><00:45:23.590><c> key</c>

00:45:23.820 --> 00:45:23.830 align:start position:0%
about the duplicate duplicate key
 

00:45:23.830 --> 00:45:25.710 align:start position:0%
about the duplicate duplicate key
behavior<00:45:24.310><c> that</c><00:45:24.730><c> does</c><00:45:24.910><c> not</c><00:45:25.060><c> apply</c><00:45:25.300><c> to</c><00:45:25.390><c> hash</c>

00:45:25.710 --> 00:45:25.720 align:start position:0%
behavior that does not apply to hash
 

00:45:25.720 --> 00:45:28.490 align:start position:0%
behavior that does not apply to hash
math<00:45:25.990><c> hash</c><00:45:26.800><c> map</c><00:45:27.100><c> java.util</c><00:45:27.850><c> hashmaps</c>

00:45:28.490 --> 00:45:28.500 align:start position:0%
math hash map java.util hashmaps
 

00:45:28.500 --> 00:45:31.440 align:start position:0%
math hash map java.util hashmaps
behavior<00:45:29.500><c> is</c><00:45:29.619><c> unchanged</c><00:45:30.310><c> so</c><00:45:30.820><c> the</c><00:45:31.119><c> the</c>

00:45:31.440 --> 00:45:31.450 align:start position:0%
behavior is unchanged so the the
 

00:45:31.450 --> 00:45:34.650 align:start position:0%
behavior is unchanged so the the
duplicate<00:45:31.960><c> key</c><00:45:32.320><c> is</c><00:45:32.560><c> only</c><00:45:32.800><c> for</c><00:45:33.550><c> the</c><00:45:33.670><c> new</c><00:45:33.940><c> api's</c>

00:45:34.650 --> 00:45:34.660 align:start position:0%
duplicate key is only for the new api's
 

00:45:34.660 --> 00:45:38.430 align:start position:0%
duplicate key is only for the new api's
math<00:45:35.140><c> dot</c><00:45:35.500><c> of</c><00:45:35.680><c> math</c><00:45:36.280><c> dot</c><00:45:36.550><c> of</c><00:45:36.760><c> entries</c><00:45:37.300><c> and</c><00:45:37.510><c> yeah</c>

00:45:38.430 --> 00:45:38.440 align:start position:0%
math dot of math dot of entries and yeah
 

00:45:38.440 --> 00:45:39.750 align:start position:0%
math dot of math dot of entries and yeah
there's<00:45:38.710><c> there's</c><00:45:39.040><c> some</c><00:45:39.160><c> controversy</c><00:45:39.400><c> about</c>

00:45:39.750 --> 00:45:39.760 align:start position:0%
there's there's some controversy about
 

00:45:39.760 --> 00:45:42.630 align:start position:0%
there's there's some controversy about
that<00:45:40.260><c> but</c><00:45:41.260><c> why</c><00:45:41.500><c> don't</c><00:45:41.560><c> we</c><00:45:41.680><c> talk</c><00:45:41.859><c> about</c><00:45:42.010><c> this</c>

00:45:42.630 --> 00:45:42.640 align:start position:0%
that but why don't we talk about this
 

00:45:42.640 --> 00:45:44.490 align:start position:0%
that but why don't we talk about this
afterwards<00:45:43.030><c> and</c><00:45:43.480><c> I</c><00:45:43.780><c> might</c><00:45:44.020><c> be</c><00:45:44.140><c> able</c><00:45:44.260><c> to</c><00:45:44.380><c> help</c>

00:45:44.490 --> 00:45:44.500 align:start position:0%
afterwards and I might be able to help
 

00:45:44.500 --> 00:45:45.349 align:start position:0%
afterwards and I might be able to help
you<00:45:44.619><c> with</c><00:45:44.770><c> it</c>

00:45:45.349 --> 00:45:45.359 align:start position:0%
you with it
 

00:45:45.359 --> 00:45:57.350 align:start position:0%
you with it
one<00:45:46.359><c> more</c><00:45:46.510><c> question</c>

00:45:57.350 --> 00:45:57.360 align:start position:0%
 
 

00:45:57.360 --> 00:45:59.850 align:start position:0%
 
okay<00:45:58.360><c> so</c><00:45:58.420><c> this</c><00:45:59.110><c> question</c><00:45:59.290><c> was</c><00:45:59.590><c> about</c><00:45:59.740><c> the</c>

00:45:59.850 --> 00:45:59.860 align:start position:0%
okay so this question was about the
 

00:45:59.860 --> 00:46:01.800 align:start position:0%
okay so this question was about the
internal<00:46:00.460><c> implementations</c><00:46:01.060><c> why</c><00:46:01.300><c> did</c><00:46:01.510><c> I</c><00:46:01.600><c> stop</c>

00:46:01.800 --> 00:46:01.810 align:start position:0%
internal implementations why did I stop
 

00:46:01.810 --> 00:46:05.250 align:start position:0%
internal implementations why did I stop
at<00:46:02.020><c> two</c><00:46:02.230><c> fields</c><00:46:02.650><c> instead</c><00:46:02.890><c> of</c><00:46:03.100><c> ten</c><00:46:03.390><c> well</c><00:46:04.390><c> so</c><00:46:05.020><c> in</c>

00:46:05.250 --> 00:46:05.260 align:start position:0%
at two fields instead of ten well so in
 

00:46:05.260 --> 00:46:06.630 align:start position:0%
at two fields instead of ten well so in
a<00:46:05.380><c> sense</c><00:46:05.530><c> it's</c><00:46:05.710><c> arbitrary</c>

00:46:06.630 --> 00:46:06.640 align:start position:0%
a sense it's arbitrary
 

00:46:06.640 --> 00:46:08.460 align:start position:0%
a sense it's arbitrary
I<00:46:06.670><c> believe</c><00:46:07.210><c> there's</c><00:46:07.510><c> kind</c><00:46:07.780><c> of</c><00:46:07.840><c> an</c><00:46:07.960><c> exponential</c>

00:46:08.460 --> 00:46:08.470 align:start position:0%
I believe there's kind of an exponential
 

00:46:08.470 --> 00:46:11.640 align:start position:0%
I believe there's kind of an exponential
decay<00:46:08.710><c> of</c><00:46:08.890><c> the</c><00:46:09.430><c> number</c><00:46:09.730><c> of</c><00:46:10.260><c> elements</c><00:46:11.260><c> in</c><00:46:11.500><c> a</c><00:46:11.620><c> set</c>

00:46:11.640 --> 00:46:11.650 align:start position:0%
decay of the number of elements in a set
 

00:46:11.650 --> 00:46:13.800 align:start position:0%
decay of the number of elements in a set
so<00:46:12.040><c> the</c><00:46:12.190><c> the</c><00:46:12.490><c> space</c><00:46:12.790><c> advantage</c><00:46:13.270><c> you</c><00:46:13.390><c> get</c><00:46:13.600><c> from</c>

00:46:13.800 --> 00:46:13.810 align:start position:0%
so the the space advantage you get from
 

00:46:13.810 --> 00:46:17.670 align:start position:0%
so the the space advantage you get from
having<00:46:14.430><c> five</c><00:46:15.430><c> fields</c><00:46:16.000><c> or</c><00:46:16.090><c> ten</c><00:46:16.360><c> feet</c><00:46:16.600><c> yeah</c><00:46:17.290><c> you</c>

00:46:17.670 --> 00:46:17.680 align:start position:0%
having five fields or ten feet yeah you
 

00:46:17.680 --> 00:46:20.010 align:start position:0%
having five fields or ten feet yeah you
know<00:46:17.770><c> a</c><00:46:17.800><c> specialized</c><00:46:18.520><c> set</c><00:46:19.270><c> implementation</c>

00:46:20.010 --> 00:46:20.020 align:start position:0%
know a specialized set implementation
 

00:46:20.020 --> 00:46:23.700 align:start position:0%
know a specialized set implementation
that<00:46:20.170><c> had</c><00:46:20.940><c> fields</c><00:46:21.940><c> for</c><00:46:22.120><c> five</c><00:46:22.600><c> elements</c><00:46:23.290><c> would</c>

00:46:23.700 --> 00:46:23.710 align:start position:0%
that had fields for five elements would
 

00:46:23.710 --> 00:46:26.610 align:start position:0%
that had fields for five elements would
be<00:46:23.770><c> much</c><00:46:24.070><c> less</c><00:46:24.280><c> useful</c><00:46:24.430><c> than</c><00:46:25.170><c> one</c><00:46:26.170><c> for</c><00:46:26.410><c> say</c>

00:46:26.610 --> 00:46:26.620 align:start position:0%
be much less useful than one for say
 

00:46:26.620 --> 00:46:29.220 align:start position:0%
be much less useful than one for say
zero<00:46:27.040><c> one</c><00:46:27.250><c> and</c><00:46:27.280><c> two</c><00:46:27.460><c> elements</c><00:46:28.000><c> because</c><00:46:28.510><c> you</c>

00:46:29.220 --> 00:46:29.230 align:start position:0%
zero one and two elements because you
 

00:46:29.230 --> 00:46:31.620 align:start position:0%
zero one and two elements because you
know<00:46:29.320><c> sets</c><00:46:29.620><c> with</c><00:46:29.860><c> with</c><00:46:30.280><c> more</c><00:46:30.670><c> elements</c><00:46:31.240><c> occur</c>

00:46:31.620 --> 00:46:31.630 align:start position:0%
know sets with with more elements occur
 

00:46:31.630 --> 00:46:35.130 align:start position:0%
know sets with with more elements occur
less<00:46:32.080><c> frequently</c><00:46:32.280><c> but</c><00:46:33.280><c> the</c><00:46:33.910><c> you</c><00:46:34.450><c> know</c><00:46:34.570><c> as</c><00:46:34.870><c> we</c>

00:46:35.130 --> 00:46:35.140 align:start position:0%
less frequently but the you know as we
 

00:46:35.140 --> 00:46:37.710 align:start position:0%
less frequently but the you know as we
gather<00:46:35.350><c> more</c><00:46:35.500><c> data</c><00:46:35.800><c> we</c><00:46:36.370><c> may</c><00:46:36.520><c> come</c><00:46:37.090><c> across</c><00:46:37.120><c> some</c>

00:46:37.710 --> 00:46:37.720 align:start position:0%
gather more data we may come across some
 

00:46:37.720 --> 00:46:39.540 align:start position:0%
gather more data we may come across some
case<00:46:37.930><c> where</c><00:46:38.140><c> somebody</c><00:46:38.410><c> says</c><00:46:38.590><c> you</c><00:46:38.860><c> know</c><00:46:38.980><c> I</c><00:46:39.010><c> use</c>

00:46:39.540 --> 00:46:39.550 align:start position:0%
case where somebody says you know I use
 

00:46:39.550 --> 00:46:41.310 align:start position:0%
case where somebody says you know I use
sets<00:46:39.880><c> with</c><00:46:40.060><c> three</c><00:46:40.390><c> elements</c><00:46:40.780><c> all</c><00:46:40.900><c> the</c><00:46:41.080><c> time</c>

00:46:41.310 --> 00:46:41.320 align:start position:0%
sets with three elements all the time
 

00:46:41.320 --> 00:46:43.410 align:start position:0%
sets with three elements all the time
and<00:46:41.680><c> we</c><00:46:41.890><c> pay</c><00:46:42.040><c> this</c><00:46:42.220><c> extra</c><00:46:42.640><c> cost</c><00:46:42.850><c> for</c><00:46:43.000><c> storing</c>

00:46:43.410 --> 00:46:43.420 align:start position:0%
and we pay this extra cost for storing
 

00:46:43.420 --> 00:46:45.060 align:start position:0%
and we pay this extra cost for storing
those<00:46:43.540><c> in</c><00:46:43.720><c> an</c><00:46:43.810><c> array</c><00:46:43.990><c> so</c><00:46:44.440><c> we</c><00:46:44.470><c> might</c><00:46:44.800><c> add</c><00:46:45.040><c> a</c>

00:46:45.060 --> 00:46:45.070 align:start position:0%
those in an array so we might add a
 

00:46:45.070 --> 00:46:47.280 align:start position:0%
those in an array so we might add a
third<00:46:45.610><c> a</c><00:46:45.910><c> third</c><00:46:46.270><c> set</c><00:46:46.510><c> implementation</c><00:46:47.140><c> for</c>

00:46:47.280 --> 00:46:47.290 align:start position:0%
third a third set implementation for
 

00:46:47.290 --> 00:46:49.230 align:start position:0%
third a third set implementation for
that<00:46:47.410><c> or</c><00:46:47.590><c> actually</c><00:46:48.220><c> we</c><00:46:48.580><c> might</c><00:46:48.760><c> even</c><00:46:48.790><c> go</c><00:46:49.090><c> the</c>

00:46:49.230 --> 00:46:49.240 align:start position:0%
that or actually we might even go the
 

00:46:49.240 --> 00:46:50.760 align:start position:0%
that or actually we might even go the
other<00:46:49.360><c> way</c><00:46:49.450><c> there's</c><00:46:49.990><c> some</c><00:46:50.170><c> other</c><00:46:50.290><c> reasons</c><00:46:50.650><c> we</c>

00:46:50.760 --> 00:46:50.770 align:start position:0%
other way there's some other reasons we
 

00:46:50.770 --> 00:46:52.140 align:start position:0%
other way there's some other reasons we
might<00:46:50.950><c> want</c><00:46:51.190><c> to</c><00:46:51.250><c> reduce</c><00:46:51.670><c> the</c><00:46:51.880><c> number</c><00:46:52.120><c> of</c>

00:46:52.140 --> 00:46:52.150 align:start position:0%
might want to reduce the number of
 

00:46:52.150 --> 00:46:53.850 align:start position:0%
might want to reduce the number of
classes<00:46:52.450><c> because</c><00:46:53.200><c> it</c><00:46:53.320><c> affects</c><00:46:53.560><c> JIT</c>

00:46:53.850 --> 00:46:53.860 align:start position:0%
classes because it affects JIT
 

00:46:53.860 --> 00:46:55.290 align:start position:0%
classes because it affects JIT
compilation<00:46:54.010><c> and</c><00:46:54.610><c> in</c><00:46:54.730><c> a</c><00:46:55.000><c> particularly</c>

00:46:55.290 --> 00:46:55.300 align:start position:0%
compilation and in a particularly
 

00:46:55.300 --> 00:46:58.110 align:start position:0%
compilation and in a particularly
obscure<00:46:55.810><c> fashion</c><00:46:56.290><c> so</c><00:46:56.770><c> the</c><00:46:57.310><c> point</c><00:46:57.550><c> is</c><00:46:57.670><c> we</c><00:46:57.940><c> can</c>

00:46:58.110 --> 00:46:58.120 align:start position:0%
obscure fashion so the point is we can
 

00:46:58.120 --> 00:46:59.580 align:start position:0%
obscure fashion so the point is we can
change<00:46:58.270><c> the</c><00:46:58.480><c> implementations</c><00:46:59.080><c> completely</c>

00:46:59.580 --> 00:46:59.590 align:start position:0%
change the implementations completely
 

00:46:59.590 --> 00:47:02.670 align:start position:0%
change the implementations completely
transparently<00:47:00.280><c> and</c><00:47:00.550><c> and</c><00:47:01.330><c> compatibly</c><00:47:01.990><c> and</c><00:47:02.290><c> so</c>

00:47:02.670 --> 00:47:02.680 align:start position:0%
transparently and and compatibly and so
 

00:47:02.680 --> 00:47:04.110 align:start position:0%
transparently and and compatibly and so
your<00:47:02.890><c> code</c><00:47:03.130><c> doesn't</c><00:47:03.340><c> have</c><00:47:03.550><c> to</c><00:47:03.670><c> change</c><00:47:03.910><c> you</c>

00:47:04.110 --> 00:47:04.120 align:start position:0%
your code doesn't have to change you
 

00:47:04.120 --> 00:47:05.850 align:start position:0%
your code doesn't have to change you
don't<00:47:04.270><c> have</c><00:47:04.390><c> to</c><00:47:04.510><c> recompile</c><00:47:04.960><c> and</c><00:47:05.290><c> the</c><00:47:05.470><c> API</c><00:47:05.740><c> is</c>

00:47:05.850 --> 00:47:05.860 align:start position:0%
don't have to recompile and the API is
 

00:47:05.860 --> 00:47:08.220 align:start position:0%
don't have to recompile and the API is
don't<00:47:06.520><c> have</c><00:47:06.700><c> to</c><00:47:06.790><c> change</c><00:47:07.030><c> either</c><00:47:07.300><c> all</c><00:47:07.900><c> right</c><00:47:08.080><c> so</c>

00:47:08.220 --> 00:47:08.230 align:start position:0%
don't have to change either all right so
 

00:47:08.230 --> 00:47:09.660 align:start position:0%
don't have to change either all right so
at<00:47:08.350><c> that</c><00:47:08.440><c> point</c><00:47:08.650><c> we're</c><00:47:08.860><c> out</c><00:47:08.980><c> of</c><00:47:09.010><c> time</c><00:47:09.280><c> thanks</c>

00:47:09.660 --> 00:47:09.670 align:start position:0%
at that point we're out of time thanks
 

00:47:09.670 --> 00:47:10.960 align:start position:0%
at that point we're out of time thanks
very<00:47:09.820><c> much</c><00:47:10.060><c> enjoy</c><00:47:10.600><c> the</c><00:47:10.690><c> copy</c>

00:47:10.960 --> 00:47:10.970 align:start position:0%
very much enjoy the copy
 

00:47:10.970 --> 00:47:16.150 align:start position:0%
very much enjoy the copy
[Applause]

