WEBVTT
Kind: captions
Language: en

00:00:03.149 --> 00:00:05.840 align:start position:0%
 
so<00:00:03.899><c> hello</c><00:00:04.319><c> everybody</c><00:00:04.710><c> my</c><00:00:05.460><c> name</c><00:00:05.580><c> is</c><00:00:05.640><c> Mills</c>

00:00:05.840 --> 00:00:05.850 align:start position:0%
so hello everybody my name is Mills
 

00:00:05.850 --> 00:00:07.699 align:start position:0%
so hello everybody my name is Mills
oopah<00:00:06.180><c> I'm</c><00:00:06.450><c> a</c><00:00:06.479><c> software</c><00:00:06.990><c> developer</c><00:00:07.410><c> at</c><00:00:07.529><c> DNA</c>

00:00:07.699 --> 00:00:07.709 align:start position:0%
oopah I'm a software developer at DNA
 

00:00:07.709 --> 00:00:09.350 align:start position:0%
oopah I'm a software developer at DNA
stack<00:00:08.010><c> where</c><00:00:08.430><c> we've</c><00:00:08.850><c> built</c><00:00:09.059><c> a</c><00:00:09.150><c> called</c>

00:00:09.350 --> 00:00:09.360 align:start position:0%
stack where we've built a called
 

00:00:09.360 --> 00:00:11.959 align:start position:0%
stack where we've built a called
platform<00:00:09.750><c> for</c><00:00:09.900><c> genomics</c><00:00:10.490><c> our</c><00:00:11.490><c> platform</c><00:00:11.880><c> is</c>

00:00:11.959 --> 00:00:11.969 align:start position:0%
platform for genomics our platform is
 

00:00:11.969 --> 00:00:13.400 align:start position:0%
platform for genomics our platform is
written<00:00:12.240><c> primarily</c><00:00:12.509><c> in</c><00:00:12.870><c> Java</c><00:00:13.080><c> so</c><00:00:13.290><c> we've</c>

00:00:13.400 --> 00:00:13.410 align:start position:0%
written primarily in Java so we've
 

00:00:13.410 --> 00:00:14.629 align:start position:0%
written primarily in Java so we've
started<00:00:13.589><c> looking</c><00:00:13.740><c> into</c><00:00:14.040><c> what's</c><00:00:14.250><c> new</c><00:00:14.339><c> in</c><00:00:14.429><c> Java</c>

00:00:14.629 --> 00:00:14.639 align:start position:0%
started looking into what's new in Java
 

00:00:14.639 --> 00:00:16.070 align:start position:0%
started looking into what's new in Java
9<00:00:14.849><c> and</c><00:00:15.089><c> I</c><00:00:15.120><c> thought</c><00:00:15.660><c> it</c><00:00:15.750><c> would</c><00:00:15.839><c> be</c><00:00:15.900><c> interesting</c>

00:00:16.070 --> 00:00:16.080 align:start position:0%
9 and I thought it would be interesting
 

00:00:16.080 --> 00:00:19.040 align:start position:0%
9 and I thought it would be interesting
to<00:00:16.290><c> share</c><00:00:16.470><c> this</c><00:00:16.590><c> information</c><00:00:17.689><c> so</c><00:00:18.689><c> the</c><00:00:18.810><c> goal</c><00:00:18.930><c> of</c>

00:00:19.040 --> 00:00:19.050 align:start position:0%
to share this information so the goal of
 

00:00:19.050 --> 00:00:21.620 align:start position:0%
to share this information so the goal of
this<00:00:19.169><c> talk</c><00:00:19.439><c> is</c><00:00:19.829><c> to</c><00:00:20.220><c> go</c><00:00:20.700><c> through</c><00:00:21.180><c> a</c><00:00:21.210><c> couple</c><00:00:21.509><c> of</c>

00:00:21.620 --> 00:00:21.630 align:start position:0%
this talk is to go through a couple of
 

00:00:21.630 --> 00:00:24.080 align:start position:0%
this talk is to go through a couple of
my<00:00:21.750><c> favorite</c><00:00:22.079><c> API</c><00:00:22.290><c> in</c><00:00:22.649><c> Java</c><00:00:22.829><c> 9</c><00:00:23.009><c> we're</c><00:00:23.820><c> not</c>

00:00:24.080 --> 00:00:24.090 align:start position:0%
my favorite API in Java 9 we're not
 

00:00:24.090 --> 00:00:25.609 align:start position:0%
my favorite API in Java 9 we're not
going<00:00:24.329><c> to</c><00:00:24.360><c> talk</c><00:00:24.540><c> about</c><00:00:24.599><c> modularity</c><00:00:25.140><c> or</c>

00:00:25.609 --> 00:00:25.619 align:start position:0%
going to talk about modularity or
 

00:00:25.619 --> 00:00:27.350 align:start position:0%
going to talk about modularity or
language<00:00:26.070><c> improvements</c><00:00:26.610><c> I</c><00:00:26.759><c> feel</c><00:00:27.090><c> like</c><00:00:27.239><c> that</c>

00:00:27.350 --> 00:00:27.360 align:start position:0%
language improvements I feel like that
 

00:00:27.360 --> 00:00:28.900 align:start position:0%
language improvements I feel like that
has<00:00:27.540><c> been</c><00:00:27.660><c> sufficiently</c><00:00:28.079><c> covered</c><00:00:28.259><c> elsewhere</c>

00:00:28.900 --> 00:00:28.910 align:start position:0%
has been sufficiently covered elsewhere
 

00:00:28.910 --> 00:00:31.159 align:start position:0%
has been sufficiently covered elsewhere
well<00:00:29.910><c> you're</c><00:00:30.029><c> going</c><00:00:30.210><c> to</c><00:00:30.390><c> focus</c><00:00:30.540><c> on</c><00:00:30.840><c> our</c>

00:00:31.159 --> 00:00:31.169 align:start position:0%
well you're going to focus on our
 

00:00:31.169 --> 00:00:34.130 align:start position:0%
well you're going to focus on our
library<00:00:31.469><c> api's</c><00:00:32.009><c> and</c><00:00:32.719><c> particularly</c><00:00:33.719><c> smaller</c>

00:00:34.130 --> 00:00:34.140 align:start position:0%
library api's and particularly smaller
 

00:00:34.140 --> 00:00:36.740 align:start position:0%
library api's and particularly smaller
api<00:00:34.469><c> api's</c><00:00:35.040><c> that</c><00:00:35.250><c> don't</c><00:00:35.489><c> get</c><00:00:35.699><c> get</c><00:00:36.329><c> that</c><00:00:36.600><c> much</c>

00:00:36.740 --> 00:00:36.750 align:start position:0%
api api's that don't get get that much
 

00:00:36.750 --> 00:00:38.630 align:start position:0%
api api's that don't get get that much
emphasis<00:00:37.170><c> or</c><00:00:37.379><c> that</c><00:00:37.800><c> I</c><00:00:37.859><c> think</c><00:00:38.039><c> are</c><00:00:38.129><c> underrated</c>

00:00:38.630 --> 00:00:38.640 align:start position:0%
emphasis or that I think are underrated
 

00:00:38.640 --> 00:00:40.549 align:start position:0%
emphasis or that I think are underrated
or<00:00:38.879><c> just</c><00:00:39.539><c> API</c><00:00:39.839><c> is</c><00:00:39.929><c> that</c><00:00:40.019><c> make</c><00:00:40.230><c> it</c><00:00:40.350><c> easier</c><00:00:40.530><c> for</c>

00:00:40.549 --> 00:00:40.559 align:start position:0%
or just API is that make it easier for
 

00:00:40.559 --> 00:00:42.889 align:start position:0%
or just API is that make it easier for
it<00:00:40.800><c> to</c><00:00:40.829><c> write</c><00:00:41.039><c> cleaner</c><00:00:41.280><c> code</c><00:00:41.660><c> so</c><00:00:42.660><c> we're</c><00:00:42.780><c> going</c>

00:00:42.889 --> 00:00:42.899 align:start position:0%
it to write cleaner code so we're going
 

00:00:42.899 --> 00:00:45.470 align:start position:0%
it to write cleaner code so we're going
to<00:00:42.989><c> take</c><00:00:43.199><c> a</c><00:00:43.230><c> look</c><00:00:43.410><c> at</c><00:00:43.850><c> the</c><00:00:44.850><c> existing</c><00:00:45.120><c> API</c>

00:00:45.470 --> 00:00:45.480 align:start position:0%
to take a look at the existing API
 

00:00:45.480 --> 00:00:48.349 align:start position:0%
to take a look at the existing API
that's<00:00:46.260><c> the</c><00:00:47.039><c> collections</c><00:00:47.399><c> API</c><00:00:47.699><c> streams</c><00:00:48.210><c> API</c>

00:00:48.349 --> 00:00:48.359 align:start position:0%
that's the collections API streams API
 

00:00:48.359 --> 00:00:51.259 align:start position:0%
that's the collections API streams API
and<00:00:48.899><c> completable</c><00:00:49.469><c> future</c><00:00:49.829><c> api's</c><00:00:50.159><c> and</c><00:00:50.429><c> the</c>

00:00:51.259 --> 00:00:51.269 align:start position:0%
and completable future api's and the
 

00:00:51.269 --> 00:00:52.520 align:start position:0%
and completable future api's and the
improvements<00:00:51.749><c> that</c><00:00:51.780><c> they</c><00:00:51.929><c> got</c><00:00:52.079><c> in</c><00:00:52.199><c> the</c><00:00:52.289><c> latest</c>

00:00:52.520 --> 00:00:52.530 align:start position:0%
improvements that they got in the latest
 

00:00:52.530 --> 00:00:54.529 align:start position:0%
improvements that they got in the latest
release<00:00:52.800><c> of</c><00:00:52.949><c> the</c><00:00:53.010><c> java</c><00:00:53.159><c> platform</c><00:00:53.309><c> as</c><00:00:54.239><c> well</c><00:00:54.480><c> as</c>

00:00:54.529 --> 00:00:54.539 align:start position:0%
release of the java platform as well as
 

00:00:54.539 --> 00:00:57.049 align:start position:0%
release of the java platform as well as
the<00:00:55.409><c> new</c><00:00:55.589><c> api</c><00:00:55.980><c> is</c><00:00:56.069><c> in</c><00:00:56.219><c> the</c><00:00:56.280><c> release</c><00:00:56.550><c> and</c><00:00:56.789><c> that's</c>

00:00:57.049 --> 00:00:57.059 align:start position:0%
the new api is in the release and that's
 

00:00:57.059 --> 00:00:59.899 align:start position:0%
the new api is in the release and that's
the<00:00:57.329><c> stack</c><00:00:57.659><c> volker</c><00:00:58.019><c> process</c><00:00:58.620><c> handle</c><00:00:58.949><c> and</c><00:00:59.129><c> HTTP</c>

00:00:59.899 --> 00:00:59.909 align:start position:0%
the stack volker process handle and HTTP
 

00:00:59.909 --> 00:01:03.709 align:start position:0%
the stack volker process handle and HTTP
to<00:00:59.999><c> client</c><00:01:00.329><c> and</c><00:01:01.819><c> that's</c><00:01:02.819><c> as</c><00:01:03.059><c> far</c><00:01:03.269><c> as</c><00:01:03.329><c> I'm</c><00:01:03.539><c> gonna</c>

00:01:03.709 --> 00:01:03.719 align:start position:0%
to client and that's as far as I'm gonna
 

00:01:03.719 --> 00:01:05.780 align:start position:0%
to client and that's as far as I'm gonna
go<00:01:03.809><c> with</c><00:01:03.960><c> slides</c><00:01:04.229><c> I</c><00:01:04.710><c> feel</c><00:01:05.370><c> like</c><00:01:05.489><c> the</c><00:01:05.580><c> smaller</c>

00:01:05.780 --> 00:01:05.790 align:start position:0%
go with slides I feel like the smaller
 

00:01:05.790 --> 00:01:08.540 align:start position:0%
go with slides I feel like the smaller
api's<00:01:06.240><c> are</c><00:01:06.540><c> best</c><00:01:07.080><c> explained</c><00:01:07.500><c> using</c><00:01:07.950><c> examples</c>

00:01:08.540 --> 00:01:08.550 align:start position:0%
api's are best explained using examples
 

00:01:08.550 --> 00:01:11.500 align:start position:0%
api's are best explained using examples
so<00:01:08.820><c> we're</c><00:01:08.940><c> just</c><00:01:08.970><c> gonna</c><00:01:09.180><c> do</c><00:01:09.390><c> a</c><00:01:09.420><c> live</c><00:01:09.570><c> demo</c><00:01:09.870><c> and</c>

00:01:11.500 --> 00:01:11.510 align:start position:0%
so we're just gonna do a live demo and
 

00:01:11.510 --> 00:01:14.150 align:start position:0%
so we're just gonna do a live demo and
we're<00:01:12.510><c> going</c><00:01:12.780><c> to</c><00:01:12.810><c> write</c><00:01:13.170><c> all</c><00:01:13.410><c> the</c><00:01:13.500><c> examples</c><00:01:13.770><c> in</c>

00:01:14.150 --> 00:01:14.160 align:start position:0%
we're going to write all the examples in
 

00:01:14.160 --> 00:01:17.540 align:start position:0%
we're going to write all the examples in
J<00:01:14.430><c> shell</c><00:01:15.140><c> and</c><00:01:16.140><c> basically</c><00:01:16.950><c> for</c><00:01:17.100><c> each</c><00:01:17.130><c> API</c><00:01:17.430><c> I</c>

00:01:17.540 --> 00:01:17.550 align:start position:0%
J shell and basically for each API I
 

00:01:17.550 --> 00:01:19.040 align:start position:0%
J shell and basically for each API I
would<00:01:17.790><c> like</c><00:01:17.910><c> to</c><00:01:18.030><c> show</c><00:01:18.180><c> how</c><00:01:18.720><c> this</c><00:01:18.870><c> was</c>

00:01:19.040 --> 00:01:19.050 align:start position:0%
would like to show how this was
 

00:01:19.050 --> 00:01:21.020 align:start position:0%
would like to show how this was
approached<00:01:19.410><c> prior</c><00:01:19.860><c> to</c><00:01:20.040><c> Java</c><00:01:20.250><c> 9</c><00:01:20.430><c> will</c><00:01:20.670><c> API</c><00:01:20.940><c> so</c>

00:01:21.020 --> 00:01:21.030 align:start position:0%
approached prior to Java 9 will API so
 

00:01:21.030 --> 00:01:22.730 align:start position:0%
approached prior to Java 9 will API so
we<00:01:21.150><c> had</c><00:01:21.270><c> available</c><00:01:21.390><c> then</c><00:01:21.810><c> and</c><00:01:21.990><c> how</c><00:01:22.440><c> this</c><00:01:22.590><c> can</c>

00:01:22.730 --> 00:01:22.740 align:start position:0%
we had available then and how this can
 

00:01:22.740 --> 00:01:25.340 align:start position:0%
we had available then and how this can
be<00:01:22.860><c> done</c><00:01:22.890><c> better</c><00:01:23.100><c> in</c><00:01:23.460><c> July</c><00:01:23.670><c> 9</c><00:01:24.080><c> so</c><00:01:25.080><c> I</c><00:01:25.110><c> hope</c><00:01:25.260><c> you</c>

00:01:25.340 --> 00:01:25.350 align:start position:0%
be done better in July 9 so I hope you
 

00:01:25.350 --> 00:01:27.440 align:start position:0%
be done better in July 9 so I hope you
can<00:01:25.470><c> all</c><00:01:25.530><c> see</c><00:01:25.800><c> this</c><00:01:25.950><c> what</c><00:01:26.850><c> you</c><00:01:26.910><c> can</c><00:01:27.060><c> see</c><00:01:27.210><c> here</c>

00:01:27.440 --> 00:01:27.450 align:start position:0%
can all see this what you can see here
 

00:01:27.450 --> 00:01:35.230 align:start position:0%
can all see this what you can see here
is<00:01:27.660><c> J</c><00:01:28.440><c> shell</c><00:01:28.650><c> which</c><00:01:29.430><c> is</c><00:01:29.460><c> the</c><00:01:29.640><c> tool</c><00:01:29.820><c> oh</c><00:01:30.150><c> really</c>

00:01:35.230 --> 00:01:35.240 align:start position:0%
 
 

00:01:35.240 --> 00:01:37.670 align:start position:0%
 
yeah<00:01:36.270><c> can</c><00:01:36.990><c> we</c><00:01:37.080><c> do</c><00:01:37.170><c> something</c><00:01:37.350><c> about</c><00:01:37.530><c> the</c>

00:01:37.670 --> 00:01:37.680 align:start position:0%
yeah can we do something about the
 

00:01:37.680 --> 00:01:47.340 align:start position:0%
yeah can we do something about the
lights<00:01:37.860><c> here</c>

00:01:47.340 --> 00:01:47.350 align:start position:0%
 
 

00:01:47.350 --> 00:02:07.710 align:start position:0%
 
has<00:01:47.890><c> this</c><00:01:50.460><c> not</c><00:01:51.460><c> sure</c><00:01:51.610><c> how</c><00:01:51.790><c> to</c><00:01:51.850><c> be</c><00:01:52.150><c> honest</c>

00:02:07.710 --> 00:02:07.720 align:start position:0%
 
 

00:02:07.720 --> 00:02:09.900 align:start position:0%
 
yeah<00:02:08.290><c> I</c><00:02:08.350><c> think</c><00:02:08.470><c> we're</c><00:02:08.710><c> we're</c><00:02:09.460><c> stuck</c><00:02:09.640><c> with</c><00:02:09.729><c> this</c>

00:02:09.900 --> 00:02:09.910 align:start position:0%
yeah I think we're we're stuck with this
 

00:02:09.910 --> 00:02:17.490 align:start position:0%
yeah I think we're we're stuck with this
is<00:02:10.360><c> this</c><00:02:10.479><c> readable</c><00:02:11.190><c> yeah</c><00:02:12.190><c> okay</c><00:02:13.980><c> great</c><00:02:16.440><c> okay</c><00:02:17.440><c> so</c>

00:02:17.490 --> 00:02:17.500 align:start position:0%
is this readable yeah okay great okay so
 

00:02:17.500 --> 00:02:20.430 align:start position:0%
is this readable yeah okay great okay so
J<00:02:18.370><c> shell</c><00:02:18.610><c> is</c><00:02:18.940><c> a</c><00:02:19.090><c> tool</c><00:02:19.390><c> bundled</c><00:02:19.870><c> with</c><00:02:19.930><c> the</c><00:02:20.050><c> JDK</c>

00:02:20.430 --> 00:02:20.440 align:start position:0%
J shell is a tool bundled with the JDK
 

00:02:20.440 --> 00:02:24.720 align:start position:0%
J shell is a tool bundled with the JDK
and<00:02:22.110><c> it's</c><00:02:23.110><c> essentially</c><00:02:23.890><c> Java</c><00:02:24.070><c> implementation</c>

00:02:24.720 --> 00:02:24.730 align:start position:0%
and it's essentially Java implementation
 

00:02:24.730 --> 00:02:26.670 align:start position:0%
and it's essentially Java implementation
of<00:02:24.820><c> ripe</c><00:02:25.030><c> old</c><00:02:25.090><c> read</c><00:02:25.360><c> eval</c><00:02:25.480><c> print</c><00:02:25.600><c> loop</c><00:02:25.840><c> so</c><00:02:26.560><c> it's</c>

00:02:26.670 --> 00:02:26.680 align:start position:0%
of ripe old read eval print loop so it's
 

00:02:26.680 --> 00:02:28.950 align:start position:0%
of ripe old read eval print loop so it's
a<00:02:26.740><c> tool</c><00:02:26.950><c> that</c><00:02:26.980><c> loops</c><00:02:27.880><c> continuously</c><00:02:28.660><c> reads</c>

00:02:28.950 --> 00:02:28.960 align:start position:0%
a tool that loops continuously reads
 

00:02:28.960 --> 00:02:30.660 align:start position:0%
a tool that loops continuously reads
your<00:02:29.110><c> input</c><00:02:29.380><c> evaluates</c><00:02:29.980><c> it</c><00:02:30.130><c> prints</c><00:02:30.520><c> out</c><00:02:30.610><c> the</c>

00:02:30.660 --> 00:02:30.670 align:start position:0%
your input evaluates it prints out the
 

00:02:30.670 --> 00:02:33.170 align:start position:0%
your input evaluates it prints out the
output<00:02:31.320><c> so</c><00:02:32.320><c> it's</c><00:02:32.440><c> basically</c><00:02:32.710><c> similar</c><00:02:32.950><c> to</c>

00:02:33.170 --> 00:02:33.180 align:start position:0%
output so it's basically similar to
 

00:02:33.180 --> 00:02:35.430 align:start position:0%
output so it's basically similar to
common<00:02:34.180><c> line</c><00:02:34.420><c> interfaces</c><00:02:34.840><c> that</c><00:02:35.140><c> you're</c><00:02:35.260><c> used</c>

00:02:35.430 --> 00:02:35.440 align:start position:0%
common line interfaces that you're used
 

00:02:35.440 --> 00:02:36.990 align:start position:0%
common line interfaces that you're used
to<00:02:35.500><c> from</c><00:02:35.590><c> other</c><00:02:35.830><c> languages</c><00:02:36.130><c> such</c><00:02:36.520><c> as</c><00:02:36.580><c> groovy</c>

00:02:36.990 --> 00:02:37.000 align:start position:0%
to from other languages such as groovy
 

00:02:37.000 --> 00:02:39.660 align:start position:0%
to from other languages such as groovy
Scala<00:02:37.780><c> Python</c><00:02:38.650><c> they</c><00:02:38.800><c> all</c><00:02:38.920><c> had</c><00:02:39.070><c> that</c><00:02:39.160><c> before</c>

00:02:39.660 --> 00:02:39.670 align:start position:0%
Scala Python they all had that before
 

00:02:39.670 --> 00:02:41.900 align:start position:0%
Scala Python they all had that before
and<00:02:39.760><c> finally</c><00:02:40.450><c> Java</c><00:02:40.630><c> is</c><00:02:40.780><c> getting</c><00:02:40.990><c> one</c><00:02:41.080><c> as</c><00:02:41.170><c> well</c>

00:02:41.900 --> 00:02:41.910 align:start position:0%
and finally Java is getting one as well
 

00:02:41.910 --> 00:02:44.160 align:start position:0%
and finally Java is getting one as well
it's<00:02:42.910><c> a</c><00:02:42.970><c> really</c><00:02:43.180><c> good</c><00:02:43.300><c> tool</c><00:02:43.480><c> for</c><00:02:43.900><c> when</c><00:02:44.080><c> you</c>

00:02:44.160 --> 00:02:44.170 align:start position:0%
it's a really good tool for when you
 

00:02:44.170 --> 00:02:46.470 align:start position:0%
it's a really good tool for when you
need<00:02:44.290><c> to</c><00:02:44.500><c> try</c><00:02:44.710><c> something</c><00:02:45.040><c> very</c><00:02:45.070><c> quickly</c><00:02:45.480><c> so</c>

00:02:46.470 --> 00:02:46.480 align:start position:0%
need to try something very quickly so
 

00:02:46.480 --> 00:02:48.180 align:start position:0%
need to try something very quickly so
it's<00:02:46.600><c> good</c><00:02:46.720><c> for</c><00:02:46.750><c> prototyping</c><00:02:47.140><c> just</c><00:02:47.740><c> exploring</c>

00:02:48.180 --> 00:02:48.190 align:start position:0%
it's good for prototyping just exploring
 

00:02:48.190 --> 00:02:50.970 align:start position:0%
it's good for prototyping just exploring
you<00:02:48.250><c> api's</c><00:02:48.640><c> or</c><00:02:49.440><c> learning</c><00:02:50.440><c> the</c><00:02:50.470><c> language</c><00:02:50.830><c> if</c>

00:02:50.970 --> 00:02:50.980 align:start position:0%
you api's or learning the language if
 

00:02:50.980 --> 00:02:54.150 align:start position:0%
you api's or learning the language if
you're<00:02:51.100><c> new</c><00:02:51.190><c> to</c><00:02:51.220><c> java</c><00:02:52.680><c> the</c><00:02:53.680><c> main</c><00:02:53.830><c> thing</c><00:02:54.130><c> that</c>

00:02:54.150 --> 00:02:54.160 align:start position:0%
you're new to java the main thing that
 

00:02:54.160 --> 00:02:56.130 align:start position:0%
you're new to java the main thing that
you<00:02:54.520><c> need</c><00:02:54.640><c> to</c><00:02:54.730><c> know</c><00:02:54.820><c> about</c><00:02:54.940><c> J</c><00:02:55.180><c> shell</c><00:02:55.390><c> is</c><00:02:55.720><c> that</c>

00:02:56.130 --> 00:02:56.140 align:start position:0%
you need to know about J shell is that
 

00:02:56.140 --> 00:02:59.070 align:start position:0%
you need to know about J shell is that
it<00:02:56.380><c> accepts</c><00:02:56.710><c> two</c><00:02:57.130><c> types</c><00:02:57.400><c> of</c><00:02:57.520><c> inputs</c><00:02:57.990><c> there</c><00:02:58.990><c> are</c>

00:02:59.070 --> 00:02:59.080 align:start position:0%
it accepts two types of inputs there are
 

00:02:59.080 --> 00:02:59.700 align:start position:0%
it accepts two types of inputs there are
snippets

00:02:59.700 --> 00:02:59.710 align:start position:0%
snippets
 

00:02:59.710 --> 00:03:01.290 align:start position:0%
snippets
so<00:03:00.100><c> the</c><00:03:00.220><c> actual</c><00:03:00.430><c> Java</c><00:03:00.700><c> code</c><00:03:00.880><c> that</c><00:03:00.910><c> you</c><00:03:01.090><c> want</c><00:03:01.240><c> to</c>

00:03:01.290 --> 00:03:01.300 align:start position:0%
so the actual Java code that you want to
 

00:03:01.300 --> 00:03:04.200 align:start position:0%
so the actual Java code that you want to
evaluate<00:03:01.450><c> and</c><00:03:02.670><c> there's</c><00:03:03.670><c> commands</c><00:03:04.000><c> to</c><00:03:04.180><c> the</c>

00:03:04.200 --> 00:03:04.210 align:start position:0%
evaluate and there's commands to the
 

00:03:04.210 --> 00:03:05.820 align:start position:0%
evaluate and there's commands to the
actualization<00:03:04.570><c> tool</c><00:03:05.020><c> which</c><00:03:05.290><c> always</c><00:03:05.500><c> start</c>

00:03:05.820 --> 00:03:05.830 align:start position:0%
actualization tool which always start
 

00:03:05.830 --> 00:03:07.230 align:start position:0%
actualization tool which always start
with<00:03:05.890><c> a</c><00:03:05.980><c> slash</c><00:03:06.220><c> and</c><00:03:06.790><c> we're</c><00:03:06.880><c> going</c><00:03:07.030><c> to</c><00:03:07.060><c> show</c><00:03:07.210><c> a</c>

00:03:07.230 --> 00:03:07.240 align:start position:0%
with a slash and we're going to show a
 

00:03:07.240 --> 00:03:10.170 align:start position:0%
with a slash and we're going to show a
couple<00:03:07.390><c> of</c><00:03:07.540><c> these</c><00:03:07.660><c> for</c><00:03:07.720><c> this</c><00:03:08.020><c> talk</c><00:03:08.970><c> but</c><00:03:09.970><c> let's</c>

00:03:10.170 --> 00:03:10.180 align:start position:0%
couple of these for this talk but let's
 

00:03:10.180 --> 00:03:12.270 align:start position:0%
couple of these for this talk but let's
start<00:03:10.420><c> with</c><00:03:10.570><c> something</c><00:03:10.780><c> really</c><00:03:11.080><c> simple</c><00:03:11.280><c> I'm</c>

00:03:12.270 --> 00:03:12.280 align:start position:0%
start with something really simple I'm
 

00:03:12.280 --> 00:03:15.420 align:start position:0%
start with something really simple I'm
just<00:03:12.370><c> gonna</c><00:03:12.640><c> do</c><00:03:12.850><c> one</c><00:03:13.540><c> plus</c><00:03:13.720><c> one</c><00:03:13.900><c> here</c><00:03:14.400><c> you</c><00:03:15.400><c> can</c>

00:03:15.420 --> 00:03:15.430 align:start position:0%
just gonna do one plus one here you can
 

00:03:15.430 --> 00:03:17.820 align:start position:0%
just gonna do one plus one here you can
see<00:03:15.700><c> two</c><00:03:16.090><c> interesting</c><00:03:16.450><c> things</c><00:03:16.660><c> here</c><00:03:16.840><c> first</c><00:03:17.739><c> of</c>

00:03:17.820 --> 00:03:17.830 align:start position:0%
see two interesting things here first of
 

00:03:17.830 --> 00:03:20.000 align:start position:0%
see two interesting things here first of
all<00:03:17.950><c> one</c><00:03:18.550><c> plus</c><00:03:18.730><c> one</c><00:03:18.880><c> is</c><00:03:19.150><c> two</c>

00:03:20.000 --> 00:03:20.010 align:start position:0%
all one plus one is two
 

00:03:20.010 --> 00:03:22.500 align:start position:0%
all one plus one is two
second<00:03:21.010><c> of</c><00:03:21.070><c> all</c><00:03:21.250><c> two</c><00:03:21.940><c> was</c><00:03:22.120><c> assigned</c><00:03:22.420><c> to</c>

00:03:22.500 --> 00:03:22.510 align:start position:0%
second of all two was assigned to
 

00:03:22.510 --> 00:03:24.630 align:start position:0%
second of all two was assigned to
something<00:03:22.780><c> called</c><00:03:22.930><c> dollar</c><00:03:23.110><c> one</c><00:03:23.350><c> here</c><00:03:23.650><c> and</c><00:03:23.830><c> the</c>

00:03:24.630 --> 00:03:24.640 align:start position:0%
something called dollar one here and the
 

00:03:24.640 --> 00:03:26.130 align:start position:0%
something called dollar one here and the
other<00:03:24.730><c> one</c><00:03:24.940><c> is</c><00:03:25.120><c> an</c><00:03:25.239><c> implicit</c><00:03:25.480><c> variable</c><00:03:26.020><c> that</c>

00:03:26.130 --> 00:03:26.140 align:start position:0%
other one is an implicit variable that
 

00:03:26.140 --> 00:03:27.810 align:start position:0%
other one is an implicit variable that
J's<00:03:26.380><c> all</c><00:03:26.530><c> created</c><00:03:26.860><c> for</c><00:03:26.980><c> me</c><00:03:27.130><c> and</c><00:03:27.370><c> it</c><00:03:27.550><c> does</c><00:03:27.670><c> that</c>

00:03:27.810 --> 00:03:27.820 align:start position:0%
J's all created for me and it does that
 

00:03:27.820 --> 00:03:29.070 align:start position:0%
J's all created for me and it does that
whenever<00:03:28.090><c> you</c><00:03:28.300><c> have</c><00:03:28.420><c> an</c><00:03:28.510><c> expression</c><00:03:28.900><c> that</c><00:03:28.930><c> you</c>

00:03:29.070 --> 00:03:29.080 align:start position:0%
whenever you have an expression that you
 

00:03:29.080 --> 00:03:31.260 align:start position:0%
whenever you have an expression that you
don't<00:03:29.260><c> assign</c><00:03:29.500><c> to</c><00:03:29.650><c> anything</c><00:03:29.950><c> I</c><00:03:30.220><c> could</c><00:03:31.030><c> have</c><00:03:31.090><c> of</c>

00:03:31.260 --> 00:03:31.270 align:start position:0%
don't assign to anything I could have of
 

00:03:31.270 --> 00:03:33.150 align:start position:0%
don't assign to anything I could have of
course<00:03:31.600><c> created</c><00:03:31.989><c> my</c><00:03:32.110><c> own</c><00:03:32.140><c> variable</c><00:03:32.739><c> I</c><00:03:32.950><c> could</c>

00:03:33.150 --> 00:03:33.160 align:start position:0%
course created my own variable I could
 

00:03:33.160 --> 00:03:34.500 align:start position:0%
course created my own variable I could
have<00:03:33.250><c> just</c><00:03:33.430><c> something</c><00:03:33.580><c> she's</c><00:03:34.150><c> done</c><00:03:34.180><c> something</c>

00:03:34.500 --> 00:03:34.510 align:start position:0%
have just something she's done something
 

00:03:34.510 --> 00:03:36.660 align:start position:0%
have just something she's done something
like<00:03:34.600><c> this</c><00:03:35.040><c> and</c><00:03:36.040><c> this</c><00:03:36.190><c> is</c><00:03:36.340><c> the</c><00:03:36.400><c> name</c><00:03:36.519><c> of</c><00:03:36.550><c> the</c>

00:03:36.660 --> 00:03:36.670 align:start position:0%
like this and this is the name of the
 

00:03:36.670 --> 00:03:38.970 align:start position:0%
like this and this is the name of the
variable<00:03:36.760><c> X</c><00:03:37.350><c> and</c><00:03:38.350><c> you've</c><00:03:38.470><c> seen</c><00:03:38.650><c> the</c><00:03:38.769><c> first</c>

00:03:38.970 --> 00:03:38.980 align:start position:0%
variable X and you've seen the first
 

00:03:38.980 --> 00:03:41.280 align:start position:0%
variable X and you've seen the first
shortcuts<00:03:39.430><c> that</c><00:03:39.670><c> I</c><00:03:39.760><c> used</c><00:03:39.940><c> here</c><00:03:40.209><c> Michelle</c><00:03:41.140><c> has</c>

00:03:41.280 --> 00:03:41.290 align:start position:0%
shortcuts that I used here Michelle has
 

00:03:41.290 --> 00:03:43.500 align:start position:0%
shortcuts that I used here Michelle has
a<00:03:41.320><c> couple</c><00:03:41.590><c> of</c><00:03:41.650><c> these</c><00:03:41.790><c> shape</c><00:03:42.790><c> tab</c><00:03:43.090><c> and</c><00:03:43.330><c> we</c>

00:03:43.500 --> 00:03:43.510 align:start position:0%
a couple of these shape tab and we
 

00:03:43.510 --> 00:03:45.630 align:start position:0%
a couple of these shape tab and we
infers<00:03:44.380><c> a</c><00:03:44.650><c> type</c><00:03:44.830><c> of</c><00:03:44.980><c> variable</c><00:03:45.400><c> from</c><00:03:45.580><c> the</c>

00:03:45.630 --> 00:03:45.640 align:start position:0%
infers a type of variable from the
 

00:03:45.640 --> 00:03:47.460 align:start position:0%
infers a type of variable from the
expression<00:03:46.209><c> and</c><00:03:46.420><c> then</c><00:03:46.720><c> introduces</c><00:03:47.290><c> a</c><00:03:47.320><c> new</c>

00:03:47.460 --> 00:03:47.470 align:start position:0%
expression and then introduces a new
 

00:03:47.470 --> 00:03:49.410 align:start position:0%
expression and then introduces a new
variable<00:03:47.769><c> of</c><00:03:47.980><c> that</c><00:03:48.130><c> type</c><00:03:48.340><c> I'm</c><00:03:48.820><c> going</c><00:03:49.209><c> to</c><00:03:49.269><c> use</c>

00:03:49.410 --> 00:03:49.420 align:start position:0%
variable of that type I'm going to use
 

00:03:49.420 --> 00:03:52.229 align:start position:0%
variable of that type I'm going to use
this<00:03:49.510><c> extensively</c><00:03:50.019><c> for</c><00:03:50.170><c> the</c><00:03:50.320><c> talk</c><00:03:51.239><c> jeschill</c>

00:03:52.229 --> 00:03:52.239 align:start position:0%
this extensively for the talk jeschill
 

00:03:52.239 --> 00:03:54.509 align:start position:0%
this extensively for the talk jeschill
also<00:03:52.450><c> features</c><00:03:52.920><c> standard</c><00:03:53.920><c> tab</c><00:03:54.160><c> completion</c>

00:03:54.509 --> 00:03:54.519 align:start position:0%
also features standard tab completion
 

00:03:54.519 --> 00:03:56.729 align:start position:0%
also features standard tab completion
that<00:03:55.030><c> you're</c><00:03:55.209><c> used</c><00:03:55.390><c> to</c><00:03:55.450><c> from</c><00:03:55.570><c> other</c><00:03:55.720><c> shells</c><00:03:56.050><c> so</c>

00:03:56.729 --> 00:03:56.739 align:start position:0%
that you're used to from other shells so
 

00:03:56.739 --> 00:03:58.800 align:start position:0%
that you're used to from other shells so
I<00:03:56.800><c> can</c><00:03:57.040><c> take</c><00:03:57.340><c> advantage</c><00:03:57.700><c> of</c><00:03:57.790><c> this</c><00:03:58.030><c> where</c><00:03:58.480><c> I</c>

00:03:58.800 --> 00:03:58.810 align:start position:0%
I can take advantage of this where I
 

00:03:58.810 --> 00:04:02.690 align:start position:0%
I can take advantage of this where I
would<00:03:59.320><c> say</c><00:03:59.590><c> print</c><00:04:00.160><c> out</c><00:04:00.370><c> my</c><00:04:00.550><c> variable</c>

00:04:02.690 --> 00:04:02.700 align:start position:0%
would say print out my variable
 

00:04:02.700 --> 00:04:07.860 align:start position:0%
would say print out my variable
something<00:04:03.700><c> like</c><00:04:03.880><c> this</c><00:04:04.230><c> and</c><00:04:05.910><c> that's</c><00:04:06.910><c> do</c><00:04:07.180><c> so</c>

00:04:07.860 --> 00:04:07.870 align:start position:0%
something like this and that's do so
 

00:04:07.870 --> 00:04:09.630 align:start position:0%
something like this and that's do so
there's<00:04:08.019><c> a</c><00:04:08.110><c> couple</c><00:04:08.260><c> of</c><00:04:08.440><c> syntactic</c><00:04:09.130><c> shortcuts</c>

00:04:09.630 --> 00:04:09.640 align:start position:0%
there's a couple of syntactic shortcuts
 

00:04:09.640 --> 00:04:12.190 align:start position:0%
there's a couple of syntactic shortcuts
as<00:04:09.760><c> well</c><00:04:09.790><c> you</c>

00:04:12.190 --> 00:04:12.200 align:start position:0%
as well you
 

00:04:12.200 --> 00:04:21.040 align:start position:0%
as well you
Oh

00:04:21.040 --> 00:04:21.050 align:start position:0%
 
 

00:04:21.050 --> 00:04:27.020 align:start position:0%
 
that's<00:04:22.050><c> good</c><00:04:22.820><c> great</c><00:04:25.640><c> yes</c><00:04:26.640><c> so</c><00:04:26.790><c> these</c><00:04:26.910><c> are</c>

00:04:27.020 --> 00:04:27.030 align:start position:0%
that's good great yes so these are
 

00:04:27.030 --> 00:04:29.030 align:start position:0%
that's good great yes so these are
syntactic<00:04:27.210><c> shortcuts</c><00:04:27.840><c> you've</c><00:04:28.590><c> noticed</c><00:04:28.950><c> that</c>

00:04:29.030 --> 00:04:29.040 align:start position:0%
syntactic shortcuts you've noticed that
 

00:04:29.040 --> 00:04:31.310 align:start position:0%
syntactic shortcuts you've noticed that
I<00:04:29.130><c> didn't</c><00:04:29.940><c> need</c><00:04:30.000><c> to</c><00:04:30.120><c> read</c><00:04:30.330><c> my</c><00:04:30.480><c> expression</c><00:04:31.050><c> in</c>

00:04:31.310 --> 00:04:31.320 align:start position:0%
I didn't need to read my expression in
 

00:04:31.320 --> 00:04:33.200 align:start position:0%
I didn't need to read my expression in
anything<00:04:31.530><c> it's</c><00:04:32.010><c> just</c><00:04:32.070><c> one</c><00:04:32.640><c> plus</c><00:04:32.820><c> one</c><00:04:32.940><c> like</c>

00:04:33.200 --> 00:04:33.210 align:start position:0%
anything it's just one plus one like
 

00:04:33.210 --> 00:04:35.870 align:start position:0%
anything it's just one plus one like
this<00:04:33.360><c> I</c><00:04:33.630><c> also</c><00:04:34.350><c> need</c><00:04:34.590><c> to</c><00:04:34.620><c> didn't</c><00:04:35.430><c> need</c><00:04:35.520><c> to</c><00:04:35.670><c> put</c><00:04:35.850><c> a</c>

00:04:35.870 --> 00:04:35.880 align:start position:0%
this I also need to didn't need to put a
 

00:04:35.880 --> 00:04:37.700 align:start position:0%
this I also need to didn't need to put a
semicolon<00:04:36.360><c> at</c><00:04:36.630><c> the</c><00:04:36.660><c> end</c><00:04:36.750><c> of</c><00:04:36.900><c> my</c><00:04:36.990><c> statement</c><00:04:37.470><c> I</c>

00:04:37.700 --> 00:04:37.710 align:start position:0%
semicolon at the end of my statement I
 

00:04:37.710 --> 00:04:38.660 align:start position:0%
semicolon at the end of my statement I
wouldn't<00:04:38.010><c> need</c><00:04:38.100><c> to</c><00:04:38.130><c> worry</c><00:04:38.340><c> about</c><00:04:38.400><c> catching</c>

00:04:38.660 --> 00:04:38.670 align:start position:0%
wouldn't need to worry about catching
 

00:04:38.670 --> 00:04:40.070 align:start position:0%
wouldn't need to worry about catching
checked<00:04:39.060><c> exceptions</c><00:04:39.570><c> and</c><00:04:39.720><c> a</c><00:04:39.780><c> couple</c><00:04:39.990><c> of</c>

00:04:40.070 --> 00:04:40.080 align:start position:0%
checked exceptions and a couple of
 

00:04:40.080 --> 00:04:42.950 align:start position:0%
checked exceptions and a couple of
things<00:04:40.140><c> like</c><00:04:40.350><c> that</c><00:04:41.330><c> so</c><00:04:42.330><c> this</c><00:04:42.480><c> brings</c><00:04:42.720><c> us</c><00:04:42.930><c> to</c>

00:04:42.950 --> 00:04:42.960 align:start position:0%
things like that so this brings us to
 

00:04:42.960 --> 00:04:45.590 align:start position:0%
things like that so this brings us to
the<00:04:43.140><c> first</c><00:04:43.350><c> command</c><00:04:43.740><c> and</c><00:04:44.040><c> that's</c><00:04:44.550><c> worse</c><00:04:44.850><c> which</c>

00:04:45.590 --> 00:04:45.600 align:start position:0%
the first command and that's worse which
 

00:04:45.600 --> 00:04:47.240 align:start position:0%
the first command and that's worse which
simply<00:04:46.020><c> lists</c><00:04:46.350><c> all</c><00:04:46.500><c> the</c><00:04:46.680><c> variables</c><00:04:47.070><c> that</c><00:04:47.160><c> I've</c>

00:04:47.240 --> 00:04:47.250 align:start position:0%
simply lists all the variables that I've
 

00:04:47.250 --> 00:04:50.120 align:start position:0%
simply lists all the variables that I've
declared<00:04:48.050><c> similarly</c><00:04:49.050><c> to</c><00:04:49.170><c> days</c><00:04:49.350><c> I</c><00:04:49.710><c> can</c><00:04:49.980><c> type</c>

00:04:50.120 --> 00:04:50.130 align:start position:0%
declared similarly to days I can type
 

00:04:50.130 --> 00:04:51.890 align:start position:0%
declared similarly to days I can type
the<00:04:50.310><c> methods</c><00:04:50.580><c> and</c><00:04:50.730><c> classes</c><00:04:50.790><c> in</c><00:04:51.060><c> J</c><00:04:51.240><c> shell</c><00:04:51.480><c> and</c>

00:04:51.890 --> 00:04:51.900 align:start position:0%
the methods and classes in J shell and
 

00:04:51.900 --> 00:04:53.420 align:start position:0%
the methods and classes in J shell and
there's<00:04:52.080><c> the</c><00:04:52.200><c> respective</c><00:04:52.590><c> commands</c><00:04:52.890><c> for</c><00:04:53.070><c> that</c>

00:04:53.420 --> 00:04:53.430 align:start position:0%
there's the respective commands for that
 

00:04:53.430 --> 00:04:55.760 align:start position:0%
there's the respective commands for that
that's<00:04:54.120><c> it</c><00:04:54.240><c> super</c><00:04:54.480><c> types</c><00:04:54.750><c> but</c><00:04:55.320><c> of</c><00:04:55.440><c> course</c><00:04:55.620><c> I</c>

00:04:55.760 --> 00:04:55.770 align:start position:0%
that's it super types but of course I
 

00:04:55.770 --> 00:04:57.220 align:start position:0%
that's it super types but of course I
don't<00:04:55.830><c> have</c><00:04:55.950><c> anything</c><00:04:56.190><c> here</c><00:04:56.400><c> at</c><00:04:56.520><c> this</c><00:04:56.640><c> point</c>

00:04:57.220 --> 00:04:57.230 align:start position:0%
don't have anything here at this point
 

00:04:57.230 --> 00:05:01.400 align:start position:0%
don't have anything here at this point
there's<00:04:58.230><c> also</c><00:04:58.650><c> lists</c><00:04:59.510><c> that</c><00:05:00.510><c> lists</c><00:05:00.930><c> all</c><00:05:01.080><c> my</c>

00:05:01.400 --> 00:05:01.410 align:start position:0%
there's also lists that lists all my
 

00:05:01.410 --> 00:05:03.680 align:start position:0%
there's also lists that lists all my
snippets<00:05:01.770><c> and</c><00:05:02.040><c> Rochelle</c><00:05:02.820><c> has</c><00:05:02.940><c> this</c><00:05:03.120><c> prefix</c>

00:05:03.680 --> 00:05:03.690 align:start position:0%
snippets and Rochelle has this prefix
 

00:05:03.690 --> 00:05:04.940 align:start position:0%
snippets and Rochelle has this prefix
mention<00:05:04.050><c> going</c><00:05:04.200><c> on</c><00:05:04.380><c> so</c><00:05:04.530><c> as</c><00:05:04.620><c> long</c><00:05:04.740><c> as</c><00:05:04.860><c> you</c>

00:05:04.940 --> 00:05:04.950 align:start position:0%
mention going on so as long as you
 

00:05:04.950 --> 00:05:07.310 align:start position:0%
mention going on so as long as you
specify<00:05:05.340><c> a</c><00:05:05.370><c> unique</c><00:05:05.670><c> prefix</c><00:05:06.270><c> of</c><00:05:06.420><c> a</c><00:05:06.510><c> command</c><00:05:06.810><c> it</c>

00:05:07.310 --> 00:05:07.320 align:start position:0%
specify a unique prefix of a command it
 

00:05:07.320 --> 00:05:08.570 align:start position:0%
specify a unique prefix of a command it
can<00:05:07.500><c> actually</c><00:05:07.770><c> find</c><00:05:07.980><c> the</c><00:05:08.070><c> command</c><00:05:08.370><c> and</c>

00:05:08.570 --> 00:05:08.580 align:start position:0%
can actually find the command and
 

00:05:08.580 --> 00:05:09.800 align:start position:0%
can actually find the command and
execute<00:05:09.090><c> it</c><00:05:09.210><c> so</c><00:05:09.240><c> I</c><00:05:09.420><c> could</c><00:05:09.540><c> have</c><00:05:09.630><c> done</c><00:05:09.780><c> just</c>

00:05:09.800 --> 00:05:09.810 align:start position:0%
execute it so I could have done just
 

00:05:09.810 --> 00:05:13.220 align:start position:0%
execute it so I could have done just
something<00:05:10.500><c> like</c><00:05:10.590><c> this</c><00:05:10.770><c> and</c><00:05:11.760><c> the</c><00:05:12.720><c> last</c><00:05:12.840><c> meant</c>

00:05:13.220 --> 00:05:13.230 align:start position:0%
something like this and the last meant
 

00:05:13.230 --> 00:05:16.310 align:start position:0%
something like this and the last meant
here<00:05:13.560><c> is</c><00:05:13.830><c> command</c><00:05:14.520><c> help</c><00:05:14.850><c> that</c><00:05:15.840><c> just</c><00:05:16.050><c> gives</c><00:05:16.230><c> you</c>

00:05:16.310 --> 00:05:16.320 align:start position:0%
here is command help that just gives you
 

00:05:16.320 --> 00:05:17.930 align:start position:0%
here is command help that just gives you
information<00:05:16.530><c> about</c><00:05:16.980><c> everything</c><00:05:17.730><c> else</c><00:05:17.850><c> that</c>

00:05:17.930 --> 00:05:17.940 align:start position:0%
information about everything else that
 

00:05:17.940 --> 00:05:20.180 align:start position:0%
information about everything else that
you<00:05:18.090><c> can</c><00:05:18.180><c> do</c><00:05:18.300><c> with</c><00:05:18.450><c> your</c><00:05:18.570><c> channel</c><00:05:19.190><c> that's</c>

00:05:20.180 --> 00:05:20.190 align:start position:0%
you can do with your channel that's
 

00:05:20.190 --> 00:05:21.980 align:start position:0%
you can do with your channel that's
pretty<00:05:20.340><c> much</c><00:05:20.460><c> all</c><00:05:20.580><c> that</c><00:05:20.730><c> you</c><00:05:20.790><c> need</c><00:05:20.940><c> to</c><00:05:20.970><c> know</c><00:05:21.150><c> J</c>

00:05:21.980 --> 00:05:21.990 align:start position:0%
pretty much all that you need to know J
 

00:05:21.990 --> 00:05:23.810 align:start position:0%
pretty much all that you need to know J
was<00:05:22.230><c> a</c><00:05:22.260><c> tool</c><00:05:22.470><c> is</c><00:05:22.590><c> extremely</c><00:05:23.340><c> easy</c><00:05:23.520><c> to</c><00:05:23.610><c> figure</c>

00:05:23.810 --> 00:05:23.820 align:start position:0%
was a tool is extremely easy to figure
 

00:05:23.820 --> 00:05:26.620 align:start position:0%
was a tool is extremely easy to figure
out<00:05:24.290><c> so</c><00:05:25.290><c> let's</c><00:05:25.440><c> move</c><00:05:25.530><c> on</c><00:05:25.710><c> to</c><00:05:25.740><c> the</c><00:05:25.920><c> first</c><00:05:26.040><c> API</c>

00:05:26.620 --> 00:05:26.630 align:start position:0%
out so let's move on to the first API
 

00:05:26.630 --> 00:05:29.420 align:start position:0%
out so let's move on to the first API
the<00:05:27.630><c> first</c><00:05:27.870><c> on</c><00:05:27.990><c> the</c><00:05:28.080><c> list</c><00:05:28.200><c> our</c><00:05:28.680><c> convenience</c>

00:05:29.420 --> 00:05:29.430 align:start position:0%
the first on the list our convenience
 

00:05:29.430 --> 00:05:31.150 align:start position:0%
the first on the list our convenience
factoring<00:05:29.820><c> methods</c><00:05:30.090><c> for</c><00:05:30.270><c> collections</c><00:05:30.690><c> and</c>

00:05:31.150 --> 00:05:31.160 align:start position:0%
factoring methods for collections and
 

00:05:31.160 --> 00:05:33.230 align:start position:0%
factoring methods for collections and
Java<00:05:32.160><c> 9</c><00:05:32.340><c> makes</c><00:05:32.580><c> it</c><00:05:32.670><c> really</c><00:05:32.820><c> easy</c><00:05:32.910><c> to</c><00:05:33.060><c> create</c>

00:05:33.230 --> 00:05:33.240 align:start position:0%
Java 9 makes it really easy to create
 

00:05:33.240 --> 00:05:35.210 align:start position:0%
Java 9 makes it really easy to create
immutable<00:05:33.960><c> collections</c><00:05:34.320><c> of</c><00:05:34.470><c> small</c><00:05:34.830><c> sizes</c>

00:05:35.210 --> 00:05:35.220 align:start position:0%
immutable collections of small sizes
 

00:05:35.220 --> 00:05:36.920 align:start position:0%
immutable collections of small sizes
this<00:05:35.820><c> is</c><00:05:35.970><c> something</c><00:05:36.270><c> that</c><00:05:36.300><c> was</c><00:05:36.510><c> relatively</c>

00:05:36.920 --> 00:05:36.930 align:start position:0%
this is something that was relatively
 

00:05:36.930 --> 00:05:38.900 align:start position:0%
this is something that was relatively
tedious<00:05:37.320><c> to</c><00:05:37.440><c> do</c><00:05:37.560><c> prior</c><00:05:38.040><c> to</c><00:05:38.070><c> Java</c><00:05:38.460><c> 9</c><00:05:38.640><c> and</c><00:05:38.820><c> I'm</c>

00:05:38.900 --> 00:05:38.910 align:start position:0%
tedious to do prior to Java 9 and I'm
 

00:05:38.910 --> 00:05:40.700 align:start position:0%
tedious to do prior to Java 9 and I'm
sure<00:05:39.030><c> everybody</c><00:05:39.360><c> knows</c><00:05:39.480><c> Israel</c><00:05:39.870><c> if</c><00:05:40.170><c> I</c><00:05:40.500><c> wanted</c>

00:05:40.700 --> 00:05:40.710 align:start position:0%
sure everybody knows Israel if I wanted
 

00:05:40.710 --> 00:05:43.070 align:start position:0%
sure everybody knows Israel if I wanted
to<00:05:40.830><c> create</c><00:05:41.040><c> a</c><00:05:41.070><c> set</c><00:05:41.310><c> for</c><00:05:41.490><c> example</c><00:05:41.550><c> I</c><00:05:42.090><c> would</c><00:05:42.930><c> have</c>

00:05:43.070 --> 00:05:43.080 align:start position:0%
to create a set for example I would have
 

00:05:43.080 --> 00:05:45.830 align:start position:0%
to create a set for example I would have
to<00:05:43.200><c> do</c><00:05:43.440><c> something</c><00:05:43.800><c> like</c><00:05:44.040><c> this</c><00:05:44.600><c> let's</c><00:05:45.600><c> say</c><00:05:45.720><c> a</c>

00:05:45.830 --> 00:05:45.840 align:start position:0%
to do something like this let's say a
 

00:05:45.840 --> 00:05:49.660 align:start position:0%
to do something like this let's say a
set<00:05:46.170><c> of</c><00:05:46.290><c> string</c><00:05:47.060><c> and</c><00:05:48.060><c> let's</c><00:05:49.020><c> call</c><00:05:49.200><c> it</c><00:05:49.320><c> a</c><00:05:49.380><c> set</c>

00:05:49.660 --> 00:05:49.670 align:start position:0%
set of string and let's call it a set
 

00:05:49.670 --> 00:05:55.270 align:start position:0%
set of string and let's call it a set
then<00:05:50.670><c> I</c><00:05:50.760><c> would</c><00:05:50.910><c> add</c><00:05:51.180><c> a</c><00:05:51.210><c> couple</c><00:05:51.540><c> of</c><00:05:51.630><c> elements</c>

00:05:55.270 --> 00:05:55.280 align:start position:0%
 
 

00:05:55.280 --> 00:05:58.310 align:start position:0%
 
let's<00:05:56.280><c> say</c><00:05:56.460><c> like</c><00:05:56.610><c> this</c><00:05:56.910><c> and</c><00:05:57.870><c> then</c><00:05:58.050><c> to</c><00:05:58.170><c> make</c><00:05:58.290><c> it</c>

00:05:58.310 --> 00:05:58.320 align:start position:0%
let's say like this and then to make it
 

00:05:58.320 --> 00:06:01.310 align:start position:0%
let's say like this and then to make it
immutable<00:05:58.860><c> I</c><00:05:59.240><c> would</c><00:06:00.240><c> wrap</c><00:06:00.480><c> it</c><00:06:00.630><c> in</c><00:06:00.720><c> an</c><00:06:00.840><c> in</c><00:06:01.080><c> a</c>

00:06:01.310 --> 00:06:01.320 align:start position:0%
immutable I would wrap it in an in a
 

00:06:01.320 --> 00:06:07.680 align:start position:0%
immutable I would wrap it in an in a
modifiable<00:06:01.860><c> set</c><00:06:05.510><c> like</c><00:06:06.510><c> this</c>

00:06:07.680 --> 00:06:07.690 align:start position:0%
modifiable set like this
 

00:06:07.690 --> 00:06:09.780 align:start position:0%
modifiable set like this
and<00:06:07.780><c> there</c><00:06:08.560><c> are</c><00:06:08.620><c> a</c><00:06:08.650><c> couple</c><00:06:08.770><c> of</c><00:06:08.890><c> issues</c><00:06:09.520><c> with</c>

00:06:09.780 --> 00:06:09.790 align:start position:0%
and there are a couple of issues with
 

00:06:09.790 --> 00:06:11.580 align:start position:0%
and there are a couple of issues with
this<00:06:10.060><c> approach</c><00:06:10.330><c> first</c><00:06:10.960><c> of</c><00:06:11.080><c> all</c><00:06:11.200><c> it's</c><00:06:11.380><c> pretty</c>

00:06:11.580 --> 00:06:11.590 align:start position:0%
this approach first of all it's pretty
 

00:06:11.590 --> 00:06:13.470 align:start position:0%
this approach first of all it's pretty
verbose<00:06:11.920><c> so</c><00:06:12.340><c> you</c><00:06:12.400><c> have</c><00:06:12.610><c> static</c><00:06:12.940><c> variables</c><00:06:13.330><c> you</c>

00:06:13.470 --> 00:06:13.480 align:start position:0%
verbose so you have static variables you
 

00:06:13.480 --> 00:06:14.850 align:start position:0%
verbose so you have static variables you
need<00:06:13.600><c> to</c><00:06:13.690><c> do</c><00:06:13.780><c> a</c><00:06:13.810><c> static</c><00:06:14.080><c> initializer</c><00:06:14.560><c> block</c>

00:06:14.850 --> 00:06:14.860 align:start position:0%
need to do a static initializer block
 

00:06:14.860 --> 00:06:16.230 align:start position:0%
need to do a static initializer block
that's<00:06:15.250><c> not</c><00:06:15.400><c> really</c><00:06:15.580><c> convenient</c>

00:06:16.230 --> 00:06:16.240 align:start position:0%
that's not really convenient
 

00:06:16.240 --> 00:06:19.980 align:start position:0%
that's not really convenient
there's<00:06:16.780><c> also</c><00:06:17.140><c> performance</c><00:06:17.830><c> overhead</c><00:06:18.990><c> this</c>

00:06:19.980 --> 00:06:19.990 align:start position:0%
there's also performance overhead this
 

00:06:19.990 --> 00:06:21.540 align:start position:0%
there's also performance overhead this
is<00:06:20.200><c> no</c><00:06:20.350><c> really</c><00:06:20.650><c> an</c><00:06:20.830><c> immutable</c><00:06:21.040><c> collection</c>

00:06:21.540 --> 00:06:21.550 align:start position:0%
is no really an immutable collection
 

00:06:21.550 --> 00:06:23.190 align:start position:0%
is no really an immutable collection
it's<00:06:21.730><c> more</c><00:06:21.850><c> like</c><00:06:22.030><c> an</c><00:06:22.120><c> immutable</c><00:06:22.450><c> view</c><00:06:22.870><c> of</c><00:06:23.110><c> an</c>

00:06:23.190 --> 00:06:23.200 align:start position:0%
it's more like an immutable view of an
 

00:06:23.200 --> 00:06:25.230 align:start position:0%
it's more like an immutable view of an
existing<00:06:23.530><c> collection</c><00:06:23.650><c> so</c><00:06:24.460><c> if</c><00:06:24.730><c> I</c><00:06:24.790><c> kept</c><00:06:25.120><c> the</c>

00:06:25.230 --> 00:06:25.240 align:start position:0%
existing collection so if I kept the
 

00:06:25.240 --> 00:06:26.700 align:start position:0%
existing collection so if I kept the
reference<00:06:25.600><c> to</c><00:06:25.750><c> the</c><00:06:25.840><c> original</c><00:06:26.140><c> set</c><00:06:26.350><c> I</c><00:06:26.560><c> would</c>

00:06:26.700 --> 00:06:26.710 align:start position:0%
reference to the original set I would
 

00:06:26.710 --> 00:06:28.470 align:start position:0%
reference to the original set I would
still<00:06:26.980><c> be</c><00:06:27.070><c> able</c><00:06:27.190><c> to</c><00:06:27.370><c> modify</c><00:06:27.610><c> it</c><00:06:27.790><c> and</c><00:06:28.030><c> there's</c>

00:06:28.470 --> 00:06:28.480 align:start position:0%
still be able to modify it and there's
 

00:06:28.480 --> 00:06:29.970 align:start position:0%
still be able to modify it and there's
performance<00:06:28.960><c> overhead</c><00:06:29.140><c> associated</c><00:06:29.470><c> with</c>

00:06:29.970 --> 00:06:29.980 align:start position:0%
performance overhead associated with
 

00:06:29.980 --> 00:06:32.190 align:start position:0%
performance overhead associated with
supporting<00:06:30.610><c> mutability</c><00:06:31.060><c> not</c><00:06:31.690><c> to</c><00:06:31.810><c> mention</c><00:06:31.960><c> all</c>

00:06:32.190 --> 00:06:32.200 align:start position:0%
supporting mutability not to mention all
 

00:06:32.200 --> 00:06:33.360 align:start position:0%
supporting mutability not to mention all
the<00:06:32.230><c> extra</c><00:06:32.530><c> objects</c><00:06:32.800><c> that</c><00:06:32.890><c> I</c><00:06:32.920><c> had</c><00:06:33.070><c> to</c><00:06:33.160><c> create</c>

00:06:33.360 --> 00:06:33.370 align:start position:0%
the extra objects that I had to create
 

00:06:33.370 --> 00:06:34.560 align:start position:0%
the extra objects that I had to create
in<00:06:33.490><c> the</c><00:06:33.550><c> process</c><00:06:33.910><c> just</c><00:06:34.120><c> to</c><00:06:34.180><c> get</c><00:06:34.360><c> to</c><00:06:34.480><c> the</c>

00:06:34.560 --> 00:06:34.570 align:start position:0%
in the process just to get to the
 

00:06:34.570 --> 00:06:36.810 align:start position:0%
in the process just to get to the
immutable<00:06:34.930><c> collection</c><00:06:35.490><c> but</c><00:06:36.490><c> that's</c><00:06:36.640><c> much</c>

00:06:36.810 --> 00:06:36.820 align:start position:0%
immutable collection but that's much
 

00:06:36.820 --> 00:06:39.300 align:start position:0%
immutable collection but that's much
easier<00:06:37.030><c> in</c><00:06:37.420><c> Gemini</c><00:06:37.870><c> on</c><00:06:37.930><c> Java</c><00:06:38.470><c> 9</c><00:06:38.680><c> has</c><00:06:38.980><c> static</c>

00:06:39.300 --> 00:06:39.310 align:start position:0%
easier in Gemini on Java 9 has static
 

00:06:39.310 --> 00:06:41.100 align:start position:0%
easier in Gemini on Java 9 has static
factory<00:06:39.430><c> methods</c><00:06:39.970><c> on</c><00:06:40.180><c> all</c><00:06:40.780><c> the</c><00:06:40.960><c> many</c>

00:06:41.100 --> 00:06:41.110 align:start position:0%
factory methods on all the many
 

00:06:41.110 --> 00:06:44.580 align:start position:0%
factory methods on all the many
interfaces<00:06:41.940><c> listed</c><00:06:42.940><c> on</c><00:06:43.060><c> map</c><00:06:43.240><c> I</c><00:06:43.510><c> can</c><00:06:44.170><c> easily</c>

00:06:44.580 --> 00:06:44.590 align:start position:0%
interfaces listed on map I can easily
 

00:06:44.590 --> 00:06:46.590 align:start position:0%
interfaces listed on map I can easily
create<00:06:44.770><c> a</c><00:06:44.890><c> collection</c><00:06:45.250><c> like</c><00:06:45.280><c> this</c><00:06:45.600><c> it's</c>

00:06:46.590 --> 00:06:46.600 align:start position:0%
create a collection like this it's
 

00:06:46.600 --> 00:06:48.840 align:start position:0%
create a collection like this it's
overall<00:06:46.870><c> with</c><00:06:47.020><c> a</c><00:06:47.050><c> bunch</c><00:06:47.380><c> of</c><00:06:47.500><c> times</c><00:06:47.800><c> 12</c><00:06:48.610><c> to</c><00:06:48.730><c> be</c>

00:06:48.840 --> 00:06:48.850 align:start position:0%
overall with a bunch of times 12 to be
 

00:06:48.850 --> 00:06:51.690 align:start position:0%
overall with a bunch of times 12 to be
exact<00:06:49.150><c> so</c><00:06:49.420><c> it's</c><00:06:49.690><c> always</c><00:06:49.840><c> 0</c><00:06:50.830><c> to</c><00:06:50.980><c> 10</c><00:06:51.130><c> arguments</c>

00:06:51.690 --> 00:06:51.700 align:start position:0%
exact so it's always 0 to 10 arguments
 

00:06:51.700 --> 00:06:53.220 align:start position:0%
exact so it's always 0 to 10 arguments
and<00:06:51.850><c> then</c><00:06:52.150><c> the</c><00:06:52.270><c> last</c><00:06:52.390><c> one</c><00:06:52.540><c> is</c><00:06:52.570><c> power</c><00:06:52.810><c> arcs</c><00:06:53.080><c> and</c>

00:06:53.220 --> 00:06:53.230 align:start position:0%
and then the last one is power arcs and
 

00:06:53.230 --> 00:06:55.310 align:start position:0%
and then the last one is power arcs and
the<00:06:53.830><c> reason</c><00:06:54.070><c> it's</c><00:06:54.190><c> done</c><00:06:54.310><c> this</c><00:06:54.400><c> way</c><00:06:54.610><c> it's</c>

00:06:55.310 --> 00:06:55.320 align:start position:0%
the reason it's done this way it's
 

00:06:55.320 --> 00:06:57.510 align:start position:0%
the reason it's done this way it's
because<00:06:56.320><c> there's</c><00:06:56.500><c> performance</c><00:06:57.070><c> overhead</c>

00:06:57.510 --> 00:06:57.520 align:start position:0%
because there's performance overhead
 

00:06:57.520 --> 00:06:59.430 align:start position:0%
because there's performance overhead
associated<00:06:57.940><c> with</c><00:06:58.330><c> creating</c><00:06:58.690><c> the</c><00:06:58.810><c> array</c><00:06:59.050><c> to</c>

00:06:59.430 --> 00:06:59.440 align:start position:0%
associated with creating the array to
 

00:06:59.440 --> 00:07:01.500 align:start position:0%
associated with creating the array to
back<00:06:59.620><c> up</c><00:06:59.740><c> the</c><00:06:59.860><c> fire</c><00:06:59.980><c> arc</c><00:07:00.190><c> so</c><00:07:01.090><c> if</c><00:07:01.390><c> you're</c>

00:07:01.500 --> 00:07:01.510 align:start position:0%
back up the fire arc so if you're
 

00:07:01.510 --> 00:07:02.880 align:start position:0%
back up the fire arc so if you're
creating<00:07:01.690><c> reasonably</c><00:07:02.230><c> small</c><00:07:02.380><c> collections</c>

00:07:02.880 --> 00:07:02.890 align:start position:0%
creating reasonably small collections
 

00:07:02.890 --> 00:07:04.350 align:start position:0%
creating reasonably small collections
which<00:07:03.220><c> presumably</c><00:07:03.760><c> is</c><00:07:03.970><c> going</c><00:07:04.000><c> to</c><00:07:04.240><c> satisfy</c>

00:07:04.350 --> 00:07:04.360 align:start position:0%
which presumably is going to satisfy
 

00:07:04.360 --> 00:07:06.480 align:start position:0%
which presumably is going to satisfy
vast<00:07:04.780><c> majority</c><00:07:05.140><c> of</c><00:07:05.200><c> use</c><00:07:05.350><c> cases</c><00:07:05.530><c> you</c><00:07:05.890><c> want</c><00:07:06.400><c> to</c>

00:07:06.480 --> 00:07:06.490 align:start position:0%
vast majority of use cases you want to
 

00:07:06.490 --> 00:07:08.640 align:start position:0%
vast majority of use cases you want to
avoid<00:07:06.640><c> this</c><00:07:06.760><c> panel</c><00:07:07.060><c> thing</c><00:07:07.240><c> so</c><00:07:08.110><c> I</c><00:07:08.140><c> can</c><00:07:08.230><c> create</c><00:07:08.530><c> a</c>

00:07:08.640 --> 00:07:08.650 align:start position:0%
avoid this panel thing so I can create a
 

00:07:08.650 --> 00:07:11.760 align:start position:0%
avoid this panel thing so I can create a
list<00:07:08.890><c> just</c><00:07:09.520><c> easily</c><00:07:09.850><c> like</c><00:07:10.090><c> this</c><00:07:10.530><c> let's</c><00:07:11.530><c> call</c>

00:07:11.760 --> 00:07:11.770 align:start position:0%
list just easily like this let's call
 

00:07:11.770 --> 00:07:14.460 align:start position:0%
list just easily like this let's call
this<00:07:11.920><c> a</c><00:07:11.980><c> list</c><00:07:12.390><c> and</c><00:07:13.390><c> then</c><00:07:13.870><c> if</c><00:07:13.990><c> I</c><00:07:14.050><c> try</c><00:07:14.110><c> to</c><00:07:14.290><c> add</c>

00:07:14.460 --> 00:07:14.470 align:start position:0%
this a list and then if I try to add
 

00:07:14.470 --> 00:07:17.100 align:start position:0%
this a list and then if I try to add
something<00:07:14.830><c> to</c><00:07:15.040><c> this</c><00:07:15.130><c> list</c><00:07:15.690><c> you</c><00:07:16.690><c> can</c><00:07:16.750><c> see</c><00:07:16.990><c> that</c>

00:07:17.100 --> 00:07:17.110 align:start position:0%
something to this list you can see that
 

00:07:17.110 --> 00:07:18.330 align:start position:0%
something to this list you can see that
really<00:07:17.320><c> it's</c><00:07:17.560><c> immutable</c><00:07:17.770><c> it's</c><00:07:18.070><c> gonna</c><00:07:18.220><c> throw</c>

00:07:18.330 --> 00:07:18.340 align:start position:0%
really it's immutable it's gonna throw
 

00:07:18.340 --> 00:07:19.430 align:start position:0%
really it's immutable it's gonna throw
an<00:07:18.460><c> exception</c>

00:07:19.430 --> 00:07:19.440 align:start position:0%
an exception
 

00:07:19.440 --> 00:07:21.540 align:start position:0%
an exception
similarly<00:07:20.440><c> you</c><00:07:20.710><c> like</c><00:07:20.860><c> to</c><00:07:21.010><c> try</c><00:07:21.190><c> to</c><00:07:21.250><c> get</c><00:07:21.460><c> the</c>

00:07:21.540 --> 00:07:21.550 align:start position:0%
similarly you like to try to get the
 

00:07:21.550 --> 00:07:23.850 align:start position:0%
similarly you like to try to get the
class<00:07:22.230><c> it's</c><00:07:23.230><c> going</c><00:07:23.440><c> to</c><00:07:23.560><c> tell</c><00:07:23.710><c> me</c><00:07:23.830><c> that</c>

00:07:23.850 --> 00:07:23.860 align:start position:0%
class it's going to tell me that
 

00:07:23.860 --> 00:07:25.710 align:start position:0%
class it's going to tell me that
something<00:07:24.220><c> immutable</c><00:07:24.760><c> but</c><00:07:25.210><c> an</c><00:07:25.360><c> interesting</c>

00:07:25.710 --> 00:07:25.720 align:start position:0%
something immutable but an interesting
 

00:07:25.720 --> 00:07:30.600 align:start position:0%
something immutable but an interesting
thing<00:07:25.750><c> to</c><00:07:25.990><c> note</c><00:07:26.110><c> here</c><00:07:26.320><c> is</c><00:07:28.260><c> these</c><00:07:29.610><c> immutable</c>

00:07:30.600 --> 00:07:30.610 align:start position:0%
thing to note here is these immutable
 

00:07:30.610 --> 00:07:32.250 align:start position:0%
thing to note here is these immutable
classes<00:07:30.850><c> are</c><00:07:31.360><c> not</c><00:07:31.600><c> really</c><00:07:31.840><c> a</c><00:07:31.870><c> part</c><00:07:32.110><c> of</c><00:07:32.169><c> the</c>

00:07:32.250 --> 00:07:32.260 align:start position:0%
classes are not really a part of the
 

00:07:32.260 --> 00:07:34.380 align:start position:0%
classes are not really a part of the
public<00:07:32.530><c> API</c><00:07:32.650><c> so</c><00:07:33.490><c> we</c><00:07:33.550><c> can</c><00:07:33.669><c> only</c><00:07:33.820><c> rely</c><00:07:34.060><c> on</c><00:07:34.180><c> the</c>

00:07:34.380 --> 00:07:34.390 align:start position:0%
public API so we can only rely on the
 

00:07:34.390 --> 00:07:36.540 align:start position:0%
public API so we can only rely on the
interface<00:07:34.720><c> here</c><00:07:34.900><c> and</c><00:07:35.110><c> similarly</c><00:07:35.860><c> the</c><00:07:36.250><c> factory</c>

00:07:36.540 --> 00:07:36.550 align:start position:0%
interface here and similarly the factory
 

00:07:36.550 --> 00:07:38.490 align:start position:0%
interface here and similarly the factory
methods<00:07:36.910><c> are</c><00:07:37.090><c> methods</c><00:07:37.360><c> on</c><00:07:37.419><c> the</c><00:07:37.450><c> interface</c><00:07:37.870><c> so</c>

00:07:38.490 --> 00:07:38.500 align:start position:0%
methods are methods on the interface so
 

00:07:38.500 --> 00:07:39.780 align:start position:0%
methods are methods on the interface so
they're<00:07:38.650><c> not</c><00:07:38.740><c> inherited</c><00:07:39.250><c> you</c><00:07:39.340><c> cannot</c><00:07:39.520><c> invoke</c>

00:07:39.780 --> 00:07:39.790 align:start position:0%
they're not inherited you cannot invoke
 

00:07:39.790 --> 00:07:41.700 align:start position:0%
they're not inherited you cannot invoke
them<00:07:40.000><c> for</c><00:07:40.180><c> an</c><00:07:40.390><c> implementing</c><00:07:40.870><c> class</c><00:07:41.050><c> so</c><00:07:41.590><c> this</c>

00:07:41.700 --> 00:07:41.710 align:start position:0%
them for an implementing class so this
 

00:07:41.710 --> 00:07:42.870 align:start position:0%
them for an implementing class so this
is<00:07:41.830><c> pretty</c><00:07:41.950><c> much</c><00:07:42.040><c> the</c><00:07:42.160><c> only</c><00:07:42.460><c> way</c><00:07:42.550><c> to</c><00:07:42.610><c> create</c>

00:07:42.870 --> 00:07:42.880 align:start position:0%
is pretty much the only way to create
 

00:07:42.880 --> 00:07:45.390 align:start position:0%
is pretty much the only way to create
this<00:07:42.970><c> list</c><00:07:43.180><c> and</c><00:07:43.450><c> that's</c><00:07:44.320><c> just</c><00:07:44.500><c> a</c><00:07:44.620><c> nice</c><00:07:44.980><c> design</c>

00:07:45.390 --> 00:07:45.400 align:start position:0%
this list and that's just a nice design
 

00:07:45.400 --> 00:07:49.350 align:start position:0%
this list and that's just a nice design
pattern<00:07:45.640><c> to</c><00:07:45.760><c> point</c><00:07:45.940><c> out</c><00:07:47.190><c> so</c><00:07:48.190><c> first</c><00:07:48.430><c> set</c><00:07:48.700><c> it's</c>

00:07:49.350 --> 00:07:49.360 align:start position:0%
pattern to point out so first set it's
 

00:07:49.360 --> 00:07:51.780 align:start position:0%
pattern to point out so first set it's
pretty<00:07:50.110><c> much</c><00:07:50.230><c> the</c><00:07:50.350><c> same</c><00:07:50.410><c> thing</c><00:07:50.770><c> for</c><00:07:51.550><c> a</c><00:07:51.580><c> map</c>

00:07:51.780 --> 00:07:51.790 align:start position:0%
pretty much the same thing for a map
 

00:07:51.790 --> 00:07:56.730 align:start position:0%
pretty much the same thing for a map
it's<00:07:52.630><c> a</c><00:07:52.750><c> bit</c><00:07:52.900><c> different</c><00:07:53.230><c> though</c><00:07:55.320><c> for</c><00:07:56.320><c> a</c><00:07:56.350><c> map</c><00:07:56.530><c> we</c>

00:07:56.730 --> 00:07:56.740 align:start position:0%
it's a bit different though for a map we
 

00:07:56.740 --> 00:07:58.830 align:start position:0%
it's a bit different though for a map we
have<00:07:56.860><c> eleven</c><00:07:57.340><c> methods</c><00:07:57.669><c> here</c><00:07:58.030><c> so</c><00:07:58.540><c> it's</c><00:07:58.690><c> always</c>

00:07:58.830 --> 00:07:58.840 align:start position:0%
have eleven methods here so it's always
 

00:07:58.840 --> 00:08:01.920 align:start position:0%
have eleven methods here so it's always
a<00:07:58.960><c> zero</c><00:07:59.110><c> to</c><00:07:59.410><c> ten</c><00:08:00.400><c> elements</c><00:08:00.850><c> or</c><00:08:01.000><c> in</c><00:08:01.630><c> this</c><00:08:01.750><c> case</c>

00:08:01.920 --> 00:08:01.930 align:start position:0%
a zero to ten elements or in this case
 

00:08:01.930 --> 00:08:03.870 align:start position:0%
a zero to ten elements or in this case
twenty<00:08:02.290><c> because</c><00:08:02.410><c> you</c><00:08:02.620><c> always</c><00:08:02.710><c> specify</c><00:08:03.190><c> key</c>

00:08:03.870 --> 00:08:03.880 align:start position:0%
twenty because you always specify key
 

00:08:03.880 --> 00:08:06.960 align:start position:0%
twenty because you always specify key
and<00:08:04.210><c> value</c><00:08:04.840><c> interchangeably</c><00:08:05.800><c> there's</c><00:08:06.580><c> no</c><00:08:06.730><c> VAR</c>

00:08:06.960 --> 00:08:06.970 align:start position:0%
and value interchangeably there's no VAR
 

00:08:06.970 --> 00:08:08.670 align:start position:0%
and value interchangeably there's no VAR
arc<00:08:07.120><c> version</c><00:08:07.480><c> of</c><00:08:07.570><c> this</c><00:08:07.690><c> methods</c><00:08:08.050><c> and</c><00:08:08.380><c> that's</c>

00:08:08.670 --> 00:08:08.680 align:start position:0%
arc version of this methods and that's
 

00:08:08.680 --> 00:08:10.140 align:start position:0%
arc version of this methods and that's
because<00:08:08.980><c> keys</c><00:08:09.280><c> and</c><00:08:09.520><c> values</c><00:08:09.550><c> can</c><00:08:10.000><c> have</c>

00:08:10.140 --> 00:08:10.150 align:start position:0%
because keys and values can have
 

00:08:10.150 --> 00:08:11.640 align:start position:0%
because keys and values can have
different<00:08:10.540><c> types</c><00:08:10.750><c> and</c><00:08:11.020><c> you</c><00:08:11.140><c> cannot</c><00:08:11.320><c> have</c><00:08:11.470><c> two</c>

00:08:11.640 --> 00:08:11.650 align:start position:0%
different types and you cannot have two
 

00:08:11.650 --> 00:08:13.950 align:start position:0%
different types and you cannot have two
arguments<00:08:12.220><c> the</c><00:08:12.520><c> same</c><00:08:12.669><c> method</c><00:08:12.940><c> so</c><00:08:13.810><c> what</c>

00:08:13.950 --> 00:08:13.960 align:start position:0%
arguments the same method so what
 

00:08:13.960 --> 00:08:15.270 align:start position:0%
arguments the same method so what
they've<00:08:14.110><c> done</c><00:08:14.140><c> with</c><00:08:14.470><c> this</c><00:08:14.680><c> is</c><00:08:14.950><c> actually</c>

00:08:15.270 --> 00:08:15.280 align:start position:0%
they've done with this is actually
 

00:08:15.280 --> 00:08:17.850 align:start position:0%
they've done with this is actually
created<00:08:15.700><c> a</c><00:08:15.850><c> separate</c><00:08:16.360><c> method</c><00:08:16.570><c> which</c><00:08:17.560><c> takes</c>

00:08:17.850 --> 00:08:17.860 align:start position:0%
created a separate method which takes
 

00:08:17.860 --> 00:08:21.050 align:start position:0%
created a separate method which takes
just<00:08:18.640><c> one</c><00:08:18.700><c> var</c><00:08:19.000><c> arc</c><00:08:19.210><c> of</c><00:08:19.479><c> my</c><00:08:19.690><c> entries</c><00:08:20.080><c> so</c>

00:08:21.050 --> 00:08:21.060 align:start position:0%
just one var arc of my entries so
 

00:08:21.060 --> 00:08:22.879 align:start position:0%
just one var arc of my entries so
to<00:08:21.120><c> take</c><00:08:21.300><c> advantage</c><00:08:21.750><c> of</c><00:08:21.840><c> this</c><00:08:22.050><c> I</c><00:08:22.440><c> could</c><00:08:22.620><c> just</c>

00:08:22.879 --> 00:08:22.889 align:start position:0%
to take advantage of this I could just
 

00:08:22.889 --> 00:08:26.770 align:start position:0%
to take advantage of this I could just
create<00:08:23.040><c> a</c><00:08:23.130><c> map</c><00:08:23.690><c> doing</c><00:08:24.690><c> something</c><00:08:25.050><c> like</c><00:08:25.080><c> this</c>

00:08:26.770 --> 00:08:26.780 align:start position:0%
create a map doing something like this
 

00:08:26.780 --> 00:08:29.420 align:start position:0%
create a map doing something like this
and<00:08:27.780><c> I</c><00:08:27.900><c> have</c><00:08:28.050><c> a</c><00:08:28.080><c> map</c><00:08:28.350><c> where</c><00:08:28.680><c> key</c><00:08:28.980><c> is</c><00:08:29.040><c> an</c><00:08:29.190><c> integer</c>

00:08:29.420 --> 00:08:29.430 align:start position:0%
and I have a map where key is an integer
 

00:08:29.430 --> 00:08:32.240 align:start position:0%
and I have a map where key is an integer
and<00:08:29.910><c> value</c><00:08:30.419><c> is</c><00:08:30.510><c> a</c><00:08:30.540><c> string</c><00:08:30.919><c> and</c><00:08:31.919><c> that's</c><00:08:32.130><c> pretty</c>

00:08:32.240 --> 00:08:32.250 align:start position:0%
and value is a string and that's pretty
 

00:08:32.250 --> 00:08:35.719 align:start position:0%
and value is a string and that's pretty
much<00:08:32.430><c> all</c><00:08:32.640><c> there</c><00:08:32.789><c> is</c><00:08:33.409><c> to</c><00:08:34.409><c> know</c><00:08:34.440><c> about</c><00:08:34.729><c> these</c>

00:08:35.719 --> 00:08:35.729 align:start position:0%
much all there is to know about these
 

00:08:35.729 --> 00:08:37.250 align:start position:0%
much all there is to know about these
factory<00:08:36.240><c> methods</c><00:08:36.539><c> so</c><00:08:36.659><c> it's</c><00:08:36.810><c> just</c><00:08:36.990><c> a</c><00:08:37.080><c> really</c>

00:08:37.250 --> 00:08:37.260 align:start position:0%
factory methods so it's just a really
 

00:08:37.260 --> 00:08:40.610 align:start position:0%
factory methods so it's just a really
nice<00:08:37.349><c> convenience</c><00:08:37.860><c> feature</c><00:08:39.620><c> collections</c>

00:08:40.610 --> 00:08:40.620 align:start position:0%
nice convenience feature collections
 

00:08:40.620 --> 00:08:42.529 align:start position:0%
nice convenience feature collections
play<00:08:40.919><c> very</c><00:08:41.580><c> nicely</c><00:08:41.789><c> when</c><00:08:42.060><c> the</c><00:08:42.180><c> streams</c><00:08:42.390><c> API</c>

00:08:42.529 --> 00:08:42.539 align:start position:0%
play very nicely when the streams API
 

00:08:42.539 --> 00:08:44.980 align:start position:0%
play very nicely when the streams API
which<00:08:43.409><c> was</c><00:08:43.650><c> introduced</c><00:08:44.250><c> in</c><00:08:44.310><c> Java</c><00:08:44.490><c> eight</c><00:08:44.700><c> and</c>

00:08:44.980 --> 00:08:44.990 align:start position:0%
which was introduced in Java eight and
 

00:08:44.990 --> 00:08:46.970 align:start position:0%
which was introduced in Java eight and
streams<00:08:45.990><c> learned</c><00:08:46.200><c> a</c><00:08:46.320><c> couple</c><00:08:46.440><c> of</c><00:08:46.589><c> new</c><00:08:46.650><c> tricks</c>

00:08:46.970 --> 00:08:46.980 align:start position:0%
streams learned a couple of new tricks
 

00:08:46.980 --> 00:08:49.220 align:start position:0%
streams learned a couple of new tricks
in<00:08:47.160><c> Java</c><00:08:47.339><c> night</c><00:08:47.520><c> as</c><00:08:47.640><c> well</c><00:08:47.900><c> so</c><00:08:48.900><c> the</c><00:08:49.020><c> first</c>

00:08:49.220 --> 00:08:49.230 align:start position:0%
in Java night as well so the first
 

00:08:49.230 --> 00:08:50.210 align:start position:0%
in Java night as well so the first
feature<00:08:49.410><c> that</c><00:08:49.620><c> I</c><00:08:49.680><c> would</c><00:08:49.800><c> like</c><00:08:49.890><c> to</c><00:08:49.980><c> talk</c><00:08:50.100><c> about</c>

00:08:50.210 --> 00:08:50.220 align:start position:0%
feature that I would like to talk about
 

00:08:50.220 --> 00:08:52.790 align:start position:0%
feature that I would like to talk about
here<00:08:50.610><c> is</c><00:08:50.820><c> a</c><00:08:51.450><c> job</c><00:08:51.990><c> while</c><00:08:52.170><c> and</c><00:08:52.410><c> take</c><00:08:52.589><c> well</c>

00:08:52.790 --> 00:08:52.800 align:start position:0%
here is a job while and take well
 

00:08:52.800 --> 00:08:55.840 align:start position:0%
here is a job while and take well
methods<00:08:53.270><c> so</c><00:08:54.270><c> let's</c><00:08:54.450><c> just</c><00:08:54.630><c> let's</c><00:08:55.170><c> just</c><00:08:55.320><c> go</c><00:08:55.410><c> back</c>

00:08:55.840 --> 00:08:55.850 align:start position:0%
methods so let's just let's just go back
 

00:08:55.850 --> 00:08:59.030 align:start position:0%
methods so let's just let's just go back
and<00:08:56.850><c> have</c><00:08:57.600><c> a</c><00:08:57.660><c> look</c><00:08:57.839><c> at</c><00:08:57.900><c> what</c><00:08:58.050><c> we</c><00:08:58.170><c> could</c><00:08:58.650><c> do</c><00:08:58.830><c> in</c>

00:08:59.030 --> 00:08:59.040 align:start position:0%
and have a look at what we could do in
 

00:08:59.040 --> 00:08:59.360 align:start position:0%
and have a look at what we could do in
Java

00:08:59.360 --> 00:08:59.370 align:start position:0%
Java
 

00:08:59.370 --> 00:09:01.820 align:start position:0%
Java
eight<00:08:59.850><c> it</c><00:09:00.510><c> created</c><00:09:00.900><c> a</c><00:09:01.020><c> stream</c><00:09:01.410><c> of</c><00:09:01.560><c> ins</c>

00:09:01.820 --> 00:09:01.830 align:start position:0%
eight it created a stream of ins
 

00:09:01.830 --> 00:09:06.230 align:start position:0%
eight it created a stream of ins
something<00:09:02.790><c> like</c><00:09:02.940><c> this</c><00:09:03.260><c> let's</c><00:09:04.260><c> say</c><00:09:05.150><c> zero</c><00:09:06.150><c> to</c>

00:09:06.230 --> 00:09:06.240 align:start position:0%
something like this let's say zero to
 

00:09:06.240 --> 00:09:11.329 align:start position:0%
something like this let's say zero to
nine<00:09:07.070><c> and</c><00:09:08.070><c> then</c><00:09:08.310><c> just</c><00:09:08.490><c> printed</c><00:09:10.190><c> I'm</c><00:09:11.190><c> just</c>

00:09:11.329 --> 00:09:11.339 align:start position:0%
nine and then just printed I'm just
 

00:09:11.339 --> 00:09:13.660 align:start position:0%
nine and then just printed I'm just
gonna<00:09:11.490><c> use</c><00:09:11.640><c> a</c><00:09:11.670><c> quick</c><00:09:11.910><c> method</c><00:09:12.779><c> reference</c><00:09:13.260><c> here</c>

00:09:13.660 --> 00:09:13.670 align:start position:0%
gonna use a quick method reference here
 

00:09:13.670 --> 00:09:18.500 align:start position:0%
gonna use a quick method reference here
and<00:09:14.670><c> I</c><00:09:15.570><c> have</c><00:09:15.720><c> numbers</c><00:09:16.050><c> 0</c><00:09:16.740><c> to</c><00:09:16.830><c> 9</c><00:09:17.300><c> what</c><00:09:18.300><c> I</c><00:09:18.330><c> also</c>

00:09:18.500 --> 00:09:18.510 align:start position:0%
and I have numbers 0 to 9 what I also
 

00:09:18.510 --> 00:09:20.240 align:start position:0%
and I have numbers 0 to 9 what I also
had<00:09:18.750><c> available</c><00:09:18.960><c> in</c><00:09:19.170><c> java</c><00:09:19.320><c> 8</c><00:09:19.560><c> were</c><00:09:19.920><c> methods</c>

00:09:20.240 --> 00:09:20.250 align:start position:0%
had available in java 8 were methods
 

00:09:20.250 --> 00:09:22.370 align:start position:0%
had available in java 8 were methods
lina<00:09:20.460><c> done</c><00:09:20.700><c> skip</c><00:09:21.000><c> so</c><00:09:21.720><c> i</c><00:09:21.750><c> could</c><00:09:21.990><c> do</c><00:09:22.080><c> something</c>

00:09:22.370 --> 00:09:22.380 align:start position:0%
lina done skip so i could do something
 

00:09:22.380 --> 00:09:25.160 align:start position:0%
lina done skip so i could do something
like<00:09:22.410><c> this</c><00:09:22.940><c> limit</c><00:09:23.940><c> 5</c><00:09:24.120><c> which</c><00:09:24.750><c> gives</c><00:09:24.930><c> me</c><00:09:25.080><c> the</c>

00:09:25.160 --> 00:09:25.170 align:start position:0%
like this limit 5 which gives me the
 

00:09:25.170 --> 00:09:27.350 align:start position:0%
like this limit 5 which gives me the
first<00:09:25.350><c> 5</c><00:09:25.530><c> elements</c><00:09:25.890><c> of</c><00:09:25.950><c> the</c><00:09:26.040><c> stream</c><00:09:26.280><c> and</c><00:09:27.270><c> a</c>

00:09:27.350 --> 00:09:27.360 align:start position:0%
first 5 elements of the stream and a
 

00:09:27.360 --> 00:09:30.200 align:start position:0%
first 5 elements of the stream and a
complimentary<00:09:27.839><c> method</c><00:09:28.230><c> scape</c><00:09:28.970><c> gives</c><00:09:29.970><c> me</c><00:09:30.120><c> the</c>

00:09:30.200 --> 00:09:30.210 align:start position:0%
complimentary method scape gives me the
 

00:09:30.210 --> 00:09:34.760 align:start position:0%
complimentary method scape gives me the
rest<00:09:30.330><c> of</c><00:09:30.420><c> the</c><00:09:30.480><c> string</c><00:09:30.780><c> so</c><00:09:32.240><c> that</c><00:09:33.240><c> was</c><00:09:33.570><c> good</c><00:09:33.900><c> but</c>

00:09:34.760 --> 00:09:34.770 align:start position:0%
rest of the string so that was good but
 

00:09:34.770 --> 00:09:36.560 align:start position:0%
rest of the string so that was good but
the<00:09:34.920><c> problem</c><00:09:35.070><c> with</c><00:09:35.370><c> this</c><00:09:35.490><c> was</c><00:09:35.880><c> that</c><00:09:36.180><c> in</c>

00:09:36.560 --> 00:09:36.570 align:start position:0%
the problem with this was that in
 

00:09:36.570 --> 00:09:39.079 align:start position:0%
the problem with this was that in
certain<00:09:36.780><c> situations</c><00:09:37.410><c> you</c><00:09:37.770><c> don't</c><00:09:38.370><c> know</c><00:09:38.610><c> this</c>

00:09:39.079 --> 00:09:39.089 align:start position:0%
certain situations you don't know this
 

00:09:39.089 --> 00:09:40.940 align:start position:0%
certain situations you don't know this
number<00:09:39.270><c> beforehand</c><00:09:40.260><c> you</c><00:09:40.440><c> just</c><00:09:40.620><c> know</c><00:09:40.710><c> that</c><00:09:40.740><c> you</c>

00:09:40.940 --> 00:09:40.950 align:start position:0%
number beforehand you just know that you
 

00:09:40.950 --> 00:09:42.440 align:start position:0%
number beforehand you just know that you
want<00:09:41.130><c> to</c><00:09:41.190><c> keep</c><00:09:41.310><c> taking</c><00:09:41.700><c> elements</c><00:09:42.030><c> while</c><00:09:42.420><c> a</c>

00:09:42.440 --> 00:09:42.450 align:start position:0%
want to keep taking elements while a
 

00:09:42.450 --> 00:09:44.450 align:start position:0%
want to keep taking elements while a
certain<00:09:42.810><c> condition</c><00:09:43.140><c> is</c><00:09:43.200><c> met</c><00:09:43.350><c> and</c><00:09:44.040><c> that</c><00:09:44.190><c> at</c>

00:09:44.450 --> 00:09:44.460 align:start position:0%
certain condition is met and that at
 

00:09:44.460 --> 00:09:45.890 align:start position:0%
certain condition is met and that at
some<00:09:44.490><c> point</c><00:09:44.790><c> you</c><00:09:44.850><c> have</c><00:09:44.970><c> enough</c><00:09:45.180><c> but</c><00:09:45.810><c> there</c>

00:09:45.890 --> 00:09:45.900 align:start position:0%
some point you have enough but there
 

00:09:45.900 --> 00:09:47.300 align:start position:0%
some point you have enough but there
wasn't<00:09:46.050><c> really</c><00:09:46.410><c> an</c><00:09:46.620><c> easy</c><00:09:46.740><c> way</c><00:09:46.830><c> to</c><00:09:46.980><c> express</c>

00:09:47.300 --> 00:09:47.310 align:start position:0%
wasn't really an easy way to express
 

00:09:47.310 --> 00:09:50.180 align:start position:0%
wasn't really an easy way to express
this<00:09:47.430><c> in</c><00:09:47.580><c> java</c><00:09:47.760><c> age</c><00:09:48.000><c> in</c><00:09:48.960><c> general</c><00:09:49.020><c> 9</c><00:09:49.380><c> however</c><00:09:49.830><c> we</c>

00:09:50.180 --> 00:09:50.190 align:start position:0%
this in java age in general 9 however we
 

00:09:50.190 --> 00:09:52.130 align:start position:0%
this in java age in general 9 however we
have<00:09:50.339><c> take</c><00:09:50.550><c> well</c><00:09:50.760><c> in</c><00:09:50.910><c> job</c><00:09:51.060><c> well</c><00:09:51.210><c> methods</c><00:09:51.600><c> so</c><00:09:52.110><c> i</c>

00:09:52.130 --> 00:09:52.140 align:start position:0%
have take well in job well methods so i
 

00:09:52.140 --> 00:09:54.980 align:start position:0%
have take well in job well methods so i
can<00:09:52.320><c> specify</c><00:09:52.500><c> something</c><00:09:53.040><c> like</c><00:09:53.160><c> this</c><00:09:53.990><c> let's</c>

00:09:54.980 --> 00:09:54.990 align:start position:0%
can specify something like this let's
 

00:09:54.990 --> 00:10:00.800 align:start position:0%
can specify something like this let's
say<00:09:55.260><c> X</c><00:09:55.890><c> is</c><00:09:57.440><c> less</c><00:09:58.440><c> than</c><00:09:58.470><c> 5</c><00:09:59.210><c> and</c><00:10:00.210><c> a</c><00:10:00.300><c> complimentary</c>

00:10:00.800 --> 00:10:00.810 align:start position:0%
say X is less than 5 and a complimentary
 

00:10:00.810 --> 00:10:07.670 align:start position:0%
say X is less than 5 and a complimentary
operation<00:10:02.810><c> job</c><00:10:03.810><c> while</c><00:10:06.140><c> so</c><00:10:07.140><c> these</c><00:10:07.320><c> are</c><00:10:07.470><c> kind</c><00:10:07.560><c> of</c>

00:10:07.670 --> 00:10:07.680 align:start position:0%
operation job while so these are kind of
 

00:10:07.680 --> 00:10:09.079 align:start position:0%
operation job while so these are kind of
like<00:10:07.830><c> versions</c><00:10:08.160><c> of</c><00:10:08.250><c> limited</c><00:10:08.550><c> escape</c><00:10:08.790><c> that</c>

00:10:09.079 --> 00:10:09.089 align:start position:0%
like versions of limited escape that
 

00:10:09.089 --> 00:10:10.430 align:start position:0%
like versions of limited escape that
take<00:10:09.240><c> a</c><00:10:09.270><c> predicate</c><00:10:09.690><c> instead</c><00:10:10.050><c> of</c><00:10:10.140><c> a</c><00:10:10.200><c> fixed</c>

00:10:10.430 --> 00:10:10.440 align:start position:0%
take a predicate instead of a fixed
 

00:10:10.440 --> 00:10:12.770 align:start position:0%
take a predicate instead of a fixed
value<00:10:10.530><c> and</c><00:10:11.040><c> it's</c><00:10:12.030><c> just</c><00:10:12.240><c> really</c><00:10:12.360><c> nice</c><00:10:12.480><c> to</c><00:10:12.570><c> have</c>

00:10:12.770 --> 00:10:12.780 align:start position:0%
value and it's just really nice to have
 

00:10:12.780 --> 00:10:15.949 align:start position:0%
value and it's just really nice to have
this<00:10:12.900><c> here</c><00:10:13.700><c> another</c><00:10:14.700><c> new</c><00:10:14.910><c> method</c><00:10:15.209><c> here</c><00:10:15.450><c> is</c><00:10:15.660><c> the</c>

00:10:15.949 --> 00:10:15.959 align:start position:0%
this here another new method here is the
 

00:10:15.959 --> 00:10:20.320 align:start position:0%
this here another new method here is the
method<00:10:16.230><c> iterate</c><00:10:17.540><c> let's</c><00:10:18.540><c> take</c><00:10:18.720><c> a</c><00:10:18.750><c> look</c><00:10:19.020><c> at</c><00:10:19.110><c> it</c>

00:10:20.320 --> 00:10:20.330 align:start position:0%
method iterate let's take a look at it
 

00:10:20.330 --> 00:10:22.460 align:start position:0%
method iterate let's take a look at it
you<00:10:21.330><c> can</c><00:10:21.480><c> see</c><00:10:21.600><c> that</c><00:10:21.720><c> our</c><00:10:21.810><c> two</c><00:10:21.839><c> versions</c><00:10:22.410><c> of</c>

00:10:22.460 --> 00:10:22.470 align:start position:0%
you can see that our two versions of
 

00:10:22.470 --> 00:10:24.829 align:start position:0%
you can see that our two versions of
this<00:10:22.589><c> method</c><00:10:22.970><c> the</c><00:10:23.970><c> first</c><00:10:24.209><c> one</c><00:10:24.420><c> was</c><00:10:24.720><c> available</c>

00:10:24.829 --> 00:10:24.839 align:start position:0%
this method the first one was available
 

00:10:24.839 --> 00:10:27.199 align:start position:0%
this method the first one was available
in<00:10:25.230><c> Java</c><00:10:25.410><c> age</c><00:10:25.620><c> the</c><00:10:26.339><c> second</c><00:10:26.700><c> one</c><00:10:26.790><c> was</c><00:10:26.940><c> added</c><00:10:27.120><c> in</c>

00:10:27.199 --> 00:10:27.209 align:start position:0%
in Java age the second one was added in
 

00:10:27.209 --> 00:10:28.940 align:start position:0%
in Java age the second one was added in
Java<00:10:27.300><c> 9</c><00:10:27.570><c> and</c><00:10:27.750><c> the</c><00:10:28.440><c> difference</c><00:10:28.709><c> is</c><00:10:28.830><c> the</c>

00:10:28.940 --> 00:10:28.950 align:start position:0%
Java 9 and the difference is the
 

00:10:28.950 --> 00:10:30.890 align:start position:0%
Java 9 and the difference is the
predicate<00:10:29.220><c> here</c><00:10:29.520><c> so</c><00:10:30.420><c> let's</c><00:10:30.570><c> take</c><00:10:30.720><c> an</c><00:10:30.810><c> example</c>

00:10:30.890 --> 00:10:30.900 align:start position:0%
predicate here so let's take an example
 

00:10:30.900 --> 00:10:33.530 align:start position:0%
predicate here so let's take an example
let's<00:10:31.410><c> say</c><00:10:31.620><c> let's</c><00:10:32.160><c> say</c><00:10:32.310><c> I</c><00:10:32.339><c> want</c><00:10:32.790><c> to</c><00:10:32.850><c> list</c><00:10:33.089><c> all</c>

00:10:33.530 --> 00:10:33.540 align:start position:0%
let's say let's say I want to list all
 

00:10:33.540 --> 00:10:34.610 align:start position:0%
let's say let's say I want to list all
the<00:10:33.660><c> even</c><00:10:34.320><c> number</c>

00:10:34.610 --> 00:10:34.620 align:start position:0%
the even number
 

00:10:34.620 --> 00:10:37.040 align:start position:0%
the even number
that<00:10:34.980><c> are</c><00:10:35.070><c> less</c><00:10:35.250><c> than</c><00:10:35.370><c> 100</c><00:10:35.580><c> now</c><00:10:36.540><c> a</c><00:10:36.570><c> very</c><00:10:36.810><c> naive</c>

00:10:37.040 --> 00:10:37.050 align:start position:0%
that are less than 100 now a very naive
 

00:10:37.050 --> 00:10:39.290 align:start position:0%
that are less than 100 now a very naive
approach<00:10:37.320><c> to</c><00:10:37.800><c> do</c><00:10:37.890><c> this</c><00:10:37.980><c> in</c><00:10:38.160><c> Java</c><00:10:38.400><c> age</c><00:10:38.550><c> would</c><00:10:39.180><c> be</c>

00:10:39.290 --> 00:10:39.300 align:start position:0%
approach to do this in Java age would be
 

00:10:39.300 --> 00:10:41.150 align:start position:0%
approach to do this in Java age would be
to<00:10:39.420><c> do</c><00:10:39.510><c> something</c><00:10:39.690><c> like</c><00:10:39.810><c> this</c><00:10:40.080><c> I'm</c><00:10:40.800><c> gonna</c>

00:10:41.150 --> 00:10:41.160 align:start position:0%
to do something like this I'm gonna
 

00:10:41.160 --> 00:10:44.630 align:start position:0%
to do something like this I'm gonna
iterate<00:10:41.310><c> from</c><00:10:41.730><c> zero</c><00:10:42.590><c> let's</c><00:10:43.590><c> increment</c><00:10:43.890><c> by</c><00:10:44.430><c> one</c>

00:10:44.630 --> 00:10:44.640 align:start position:0%
iterate from zero let's increment by one
 

00:10:44.640 --> 00:10:49.070 align:start position:0%
iterate from zero let's increment by one
by<00:10:44.940><c> two</c><00:10:45.380><c> and</c><00:10:46.850><c> then</c><00:10:47.850><c> I'm</c><00:10:47.940><c> going</c><00:10:48.180><c> to</c><00:10:48.210><c> print</c><00:10:48.930><c> all</c>

00:10:49.070 --> 00:10:49.080 align:start position:0%
by two and then I'm going to print all
 

00:10:49.080 --> 00:10:57.520 align:start position:0%
by two and then I'm going to print all
of<00:10:49.200><c> these</c><00:10:53.300><c> and</c><00:10:54.300><c> the</c><00:10:54.510><c> method</c><00:10:54.810><c> reference</c><00:10:55.140><c> here</c>

00:10:57.520 --> 00:10:57.530 align:start position:0%
of these and the method reference here
 

00:10:57.530 --> 00:11:00.910 align:start position:0%
of these and the method reference here
just<00:10:58.530><c> like</c><00:10:58.650><c> this</c><00:10:58.830><c> and</c><00:10:59.100><c> you</c><00:10:59.880><c> can</c><00:11:00.030><c> see</c><00:11:00.180><c> that</c><00:11:00.330><c> it</c>

00:11:00.910 --> 00:11:00.920 align:start position:0%
just like this and you can see that it
 

00:11:00.920 --> 00:11:05.930 align:start position:0%
just like this and you can see that it
kind<00:11:01.920><c> of</c><00:11:02.070><c> worked</c><00:11:02.310><c> up</c><00:11:03.530><c> not</c><00:11:04.530><c> really</c><00:11:04.730><c> because</c><00:11:05.730><c> I</c>

00:11:05.930 --> 00:11:05.940 align:start position:0%
kind of worked up not really because I
 

00:11:05.940 --> 00:11:09.440 align:start position:0%
kind of worked up not really because I
forgot<00:11:06.180><c> a</c><00:11:06.240><c> filter</c><00:11:07.460><c> so</c><00:11:08.460><c> I</c><00:11:08.490><c> would</c><00:11:08.820><c> filter</c><00:11:09.240><c> this</c>

00:11:09.440 --> 00:11:09.450 align:start position:0%
forgot a filter so I would filter this
 

00:11:09.450 --> 00:11:16.130 align:start position:0%
forgot a filter so I would filter this
let's<00:11:10.380><c> say</c><00:11:10.650><c> I</c><00:11:11.990><c> think</c><00:11:12.990><c> I</c><00:11:13.200><c> said</c><00:11:13.410><c> 100</c><00:11:13.950><c> I</c><00:11:15.050><c> can</c><00:11:16.050><c> do</c>

00:11:16.130 --> 00:11:16.140 align:start position:0%
let's say I think I said 100 I can do
 

00:11:16.140 --> 00:11:19.760 align:start position:0%
let's say I think I said 100 I can do
this<00:11:16.320><c> and</c><00:11:16.700><c> this</c><00:11:17.700><c> almost</c><00:11:18.480><c> works</c><00:11:18.960><c> and</c><00:11:19.320><c> the</c>

00:11:19.760 --> 00:11:19.770 align:start position:0%
this and this almost works and the
 

00:11:19.770 --> 00:11:21.350 align:start position:0%
this and this almost works and the
reason<00:11:20.040><c> this</c><00:11:20.130><c> doesn't</c><00:11:20.490><c> work</c><00:11:20.610><c> even</c><00:11:21.150><c> though</c><00:11:21.240><c> it</c>

00:11:21.350 --> 00:11:21.360 align:start position:0%
reason this doesn't work even though it
 

00:11:21.360 --> 00:11:23.270 align:start position:0%
reason this doesn't work even though it
seems<00:11:21.510><c> like</c><00:11:21.570><c> a</c><00:11:21.690><c> very</c><00:11:21.750><c> simple</c><00:11:21.990><c> example</c><00:11:22.560><c> is</c><00:11:22.860><c> that</c>

00:11:23.270 --> 00:11:23.280 align:start position:0%
seems like a very simple example is that
 

00:11:23.280 --> 00:11:25.100 align:start position:0%
seems like a very simple example is that
I<00:11:23.340><c> did</c><00:11:23.550><c> filter</c><00:11:23.850><c> the</c><00:11:24.000><c> first</c><00:11:24.120><c> 100</c><00:11:24.570><c> elements</c><00:11:24.900><c> here</c>

00:11:25.100 --> 00:11:25.110 align:start position:0%
I did filter the first 100 elements here
 

00:11:25.110 --> 00:11:27.890 align:start position:0%
I did filter the first 100 elements here
but<00:11:26.010><c> I</c><00:11:26.250><c> created</c><00:11:26.460><c> an</c><00:11:26.700><c> infinite</c><00:11:27.030><c> stream</c><00:11:27.300><c> so</c>

00:11:27.890 --> 00:11:27.900 align:start position:0%
but I created an infinite stream so
 

00:11:27.900 --> 00:11:29.630 align:start position:0%
but I created an infinite stream so
after<00:11:28.320><c> a</c><00:11:28.350><c> while</c><00:11:28.560><c> the</c><00:11:28.800><c> stream</c><00:11:29.010><c> kept</c><00:11:29.160><c> going</c><00:11:29.460><c> at</c>

00:11:29.630 --> 00:11:29.640 align:start position:0%
after a while the stream kept going at
 

00:11:29.640 --> 00:11:31.190 align:start position:0%
after a while the stream kept going at
some<00:11:29.850><c> point</c><00:11:30.030><c> it</c><00:11:30.120><c> went</c><00:11:30.330><c> over</c><00:11:30.540><c> and</c><00:11:30.750><c> suddenly</c><00:11:31.020><c> all</c>

00:11:31.190 --> 00:11:31.200 align:start position:0%
some point it went over and suddenly all
 

00:11:31.200 --> 00:11:33.770 align:start position:0%
some point it went over and suddenly all
my<00:11:31.320><c> integers</c><00:11:31.770><c> were</c><00:11:31.920><c> less</c><00:11:32.100><c> than</c><00:11:32.250><c> 100</c><00:11:32.780><c> there</c>

00:11:33.770 --> 00:11:33.780 align:start position:0%
my integers were less than 100 there
 

00:11:33.780 --> 00:11:35.570 align:start position:0%
my integers were less than 100 there
wasn't<00:11:34.080><c> really</c><00:11:34.200><c> a</c><00:11:34.350><c> good</c><00:11:34.530><c> way</c><00:11:34.680><c> of</c><00:11:34.710><c> expressing</c>

00:11:35.570 --> 00:11:35.580 align:start position:0%
wasn't really a good way of expressing
 

00:11:35.580 --> 00:11:38.030 align:start position:0%
wasn't really a good way of expressing
this<00:11:35.820><c> boundary</c><00:11:36.120><c> condition</c><00:11:36.540><c> in</c><00:11:36.690><c> July</c><00:11:37.020><c> 8</c><00:11:37.140><c> but</c><00:11:37.890><c> in</c>

00:11:38.030 --> 00:11:38.040 align:start position:0%
this boundary condition in July 8 but in
 

00:11:38.040 --> 00:11:38.720 align:start position:0%
this boundary condition in July 8 but in
Java<00:11:38.220><c> 9</c>

00:11:38.720 --> 00:11:38.730 align:start position:0%
Java 9
 

00:11:38.730 --> 00:11:40.490 align:start position:0%
Java 9
I<00:11:38.760><c> can</c><00:11:39.090><c> actually</c><00:11:39.210><c> easily</c><00:11:39.600><c> do</c><00:11:39.870><c> this</c><00:11:40.050><c> I'm</c><00:11:40.350><c> just</c>

00:11:40.490 --> 00:11:40.500 align:start position:0%
I can actually easily do this I'm just
 

00:11:40.500 --> 00:11:43.070 align:start position:0%
I can actually easily do this I'm just
gonna<00:11:40.620><c> remove</c><00:11:40.920><c> the</c><00:11:41.040><c> filter</c><00:11:41.340><c> here</c><00:11:41.550><c> I</c><00:11:41.870><c> can</c><00:11:42.870><c> add</c>

00:11:43.070 --> 00:11:43.080 align:start position:0%
gonna remove the filter here I can add
 

00:11:43.080 --> 00:11:47.090 align:start position:0%
gonna remove the filter here I can add
another<00:11:43.260><c> condition</c><00:11:43.620><c> here</c><00:11:45.890><c> something</c><00:11:46.890><c> like</c>

00:11:47.090 --> 00:11:47.100 align:start position:0%
another condition here something like
 

00:11:47.100 --> 00:11:51.380 align:start position:0%
another condition here something like
this<00:11:48.080><c> this</c><00:11:49.080><c> is</c><00:11:49.200><c> going</c><00:11:49.350><c> to</c><00:11:49.500><c> work</c><00:11:49.620><c> correctly</c><00:11:50.390><c> so</c>

00:11:51.380 --> 00:11:51.390 align:start position:0%
this this is going to work correctly so
 

00:11:51.390 --> 00:11:53.810 align:start position:0%
this this is going to work correctly so
if<00:11:51.480><c> you</c><00:11:51.570><c> look</c><00:11:51.750><c> at</c><00:11:51.870><c> it</c><00:11:52.020><c> it</c><00:11:52.470><c> reads</c><00:11:53.040><c> essentially</c>

00:11:53.810 --> 00:11:53.820 align:start position:0%
if you look at it it reads essentially
 

00:11:53.820 --> 00:11:55.520 align:start position:0%
if you look at it it reads essentially
like<00:11:53.970><c> a</c><00:11:54.000><c> four</c><00:11:54.240><c> cycle</c><00:11:54.450><c> and</c><00:11:54.840><c> that's</c><00:11:55.170><c> basically</c>

00:11:55.520 --> 00:11:55.530 align:start position:0%
like a four cycle and that's basically
 

00:11:55.530 --> 00:11:56.960 align:start position:0%
like a four cycle and that's basically
what<00:11:55.680><c> it</c><00:11:55.770><c> is</c><00:11:55.830><c> it's</c><00:11:56.070><c> like</c><00:11:56.190><c> a</c><00:11:56.220><c> stream</c><00:11:56.490><c> e5</c><00:11:56.700><c> version</c>

00:11:56.960 --> 00:11:56.970 align:start position:0%
what it is it's like a stream e5 version
 

00:11:56.970 --> 00:11:59.750 align:start position:0%
what it is it's like a stream e5 version
of<00:11:57.060><c> 4</c><00:11:57.270><c> so</c><00:11:58.260><c> just</c><00:11:58.440><c> a</c><00:11:58.500><c> really</c><00:11:58.740><c> really</c><00:11:59.340><c> nice</c><00:11:59.430><c> handy</c>

00:11:59.750 --> 00:11:59.760 align:start position:0%
of 4 so just a really really nice handy
 

00:11:59.760 --> 00:12:03.680 align:start position:0%
of 4 so just a really really nice handy
feature<00:11:59.940><c> here</c><00:12:01.280><c> now</c><00:12:02.280><c> the</c><00:12:02.970><c> last</c><00:12:03.150><c> method</c><00:12:03.390><c> that</c><00:12:03.630><c> I</c>

00:12:03.680 --> 00:12:03.690 align:start position:0%
feature here now the last method that I
 

00:12:03.690 --> 00:12:05.750 align:start position:0%
feature here now the last method that I
wanted<00:12:03.930><c> to</c><00:12:04.050><c> mention</c><00:12:04.230><c> here</c><00:12:04.410><c> is</c><00:12:04.800><c> method</c><00:12:05.430><c> of</c>

00:12:05.750 --> 00:12:05.760 align:start position:0%
wanted to mention here is method of
 

00:12:05.760 --> 00:12:06.410 align:start position:0%
wanted to mention here is method of
knowledge

00:12:06.410 --> 00:12:06.420 align:start position:0%
knowledge
 

00:12:06.420 --> 00:12:09.340 align:start position:0%
knowledge
so<00:12:07.290><c> in</c><00:12:07.440><c> Java</c><00:12:07.620><c> 8</c><00:12:07.830><c> I</c><00:12:08.100><c> could</c><00:12:08.280><c> create</c><00:12:08.520><c> streams</c><00:12:08.910><c> of</c>

00:12:09.340 --> 00:12:09.350 align:start position:0%
so in Java 8 I could create streams of
 

00:12:09.350 --> 00:12:11.450 align:start position:0%
so in Java 8 I could create streams of
certain<00:12:10.350><c> specific</c><00:12:10.530><c> elements</c><00:12:11.160><c> using</c><00:12:11.370><c> a</c>

00:12:11.450 --> 00:12:11.460 align:start position:0%
certain specific elements using a
 

00:12:11.460 --> 00:12:13.070 align:start position:0%
certain specific elements using a
factory<00:12:11.760><c> method</c><00:12:12.090><c> I</c><00:12:12.330><c> could</c><00:12:12.630><c> do</c><00:12:12.720><c> something</c><00:12:12.930><c> like</c>

00:12:13.070 --> 00:12:13.080 align:start position:0%
factory method I could do something like
 

00:12:13.080 --> 00:12:15.230 align:start position:0%
factory method I could do something like
this<00:12:13.460><c> which</c><00:12:14.460><c> would</c><00:12:14.550><c> give</c><00:12:14.760><c> me</c><00:12:14.880><c> a</c><00:12:14.910><c> stream</c>

00:12:15.230 --> 00:12:15.240 align:start position:0%
this which would give me a stream
 

00:12:15.240 --> 00:12:16.670 align:start position:0%
this which would give me a stream
containing<00:12:15.600><c> a</c><00:12:15.720><c> single</c><00:12:15.840><c> element</c><00:12:16.170><c> and</c><00:12:16.530><c> an</c>

00:12:16.670 --> 00:12:16.680 align:start position:0%
containing a single element and an
 

00:12:16.680 --> 00:12:19.310 align:start position:0%
containing a single element and an
element<00:12:17.010><c> is</c><00:12:17.070><c> one</c><00:12:17.390><c> what</c><00:12:18.390><c> I</c><00:12:18.420><c> couldn't</c><00:12:18.750><c> do</c><00:12:18.900><c> is</c>

00:12:19.310 --> 00:12:19.320 align:start position:0%
element is one what I couldn't do is
 

00:12:19.320 --> 00:12:21.620 align:start position:0%
element is one what I couldn't do is
something<00:12:19.800><c> like</c><00:12:20.010><c> this</c><00:12:20.300><c> which</c><00:12:21.300><c> makes</c><00:12:21.540><c> sense</c>

00:12:21.620 --> 00:12:21.630 align:start position:0%
something like this which makes sense
 

00:12:21.630 --> 00:12:22.790 align:start position:0%
something like this which makes sense
because<00:12:21.960><c> you</c><00:12:22.200><c> don't</c><00:12:22.350><c> want</c><00:12:22.470><c> to</c><00:12:22.530><c> have</c><00:12:22.620><c> knowledge</c>

00:12:22.790 --> 00:12:22.800 align:start position:0%
because you don't want to have knowledge
 

00:12:22.800 --> 00:12:23.920 align:start position:0%
because you don't want to have knowledge
in<00:12:23.130><c> your</c><00:12:23.250><c> streams</c>

00:12:23.920 --> 00:12:23.930 align:start position:0%
in your streams
 

00:12:23.930 --> 00:12:28.420 align:start position:0%
in your streams
however<00:12:24.930><c> in</c><00:12:25.080><c> German</c><00:12:25.380><c> I</c><00:12:25.850><c> can</c><00:12:26.850><c> do</c><00:12:27.000><c> off</c><00:12:27.150><c> nullable</c>

00:12:28.420 --> 00:12:28.430 align:start position:0%
however in German I can do off nullable
 

00:12:28.430 --> 00:12:31.400 align:start position:0%
however in German I can do off nullable
pass<00:12:29.430><c> now</c><00:12:29.700><c> it'll</c><00:12:30.510><c> actually</c><00:12:30.660><c> gives</c><00:12:31.050><c> me</c><00:12:31.260><c> a</c>

00:12:31.400 --> 00:12:31.410 align:start position:0%
pass now it'll actually gives me a
 

00:12:31.410 --> 00:12:33.770 align:start position:0%
pass now it'll actually gives me a
stream<00:12:31.740><c> and</c><00:12:32.040><c> if</c><00:12:32.670><c> I</c><00:12:32.790><c> have</c><00:12:33.060><c> a</c><00:12:33.090><c> look</c><00:12:33.240><c> at</c><00:12:33.390><c> it</c><00:12:33.540><c> and</c>

00:12:33.770 --> 00:12:33.780 align:start position:0%
stream and if I have a look at it and
 

00:12:33.780 --> 00:12:35.390 align:start position:0%
stream and if I have a look at it and
call<00:12:33.960><c> the</c><00:12:34.050><c> method</c><00:12:34.290><c> count</c><00:12:34.500><c> it</c><00:12:34.980><c> tells</c><00:12:35.190><c> me</c><00:12:35.370><c> that</c>

00:12:35.390 --> 00:12:35.400 align:start position:0%
call the method count it tells me that
 

00:12:35.400 --> 00:12:37.580 align:start position:0%
call the method count it tells me that
it's<00:12:35.610><c> actually</c><00:12:35.880><c> an</c><00:12:35.940><c> empty</c><00:12:36.210><c> stream</c><00:12:36.480><c> so</c><00:12:37.200><c> Gemini</c>

00:12:37.580 --> 00:12:37.590 align:start position:0%
it's actually an empty stream so Gemini
 

00:12:37.590 --> 00:12:40.040 align:start position:0%
it's actually an empty stream so Gemini
is<00:12:37.800><c> smart</c><00:12:38.250><c> enough</c><00:12:38.340><c> to</c><00:12:38.490><c> treat</c><00:12:39.060><c> now</c><00:12:39.300><c> as</c><00:12:39.600><c> kind</c><00:12:40.020><c> of</c>

00:12:40.040 --> 00:12:40.050 align:start position:0%
is smart enough to treat now as kind of
 

00:12:40.050 --> 00:12:43.280 align:start position:0%
is smart enough to treat now as kind of
an<00:12:40.170><c> empty</c><00:12:40.350><c> stream</c><00:12:40.700><c> so</c><00:12:41.700><c> where</c><00:12:42.240><c> is</c><00:12:42.330><c> it</c><00:12:42.420><c> useful</c><00:12:42.630><c> it</c>

00:12:43.280 --> 00:12:43.290 align:start position:0%
an empty stream so where is it useful it
 

00:12:43.290 --> 00:12:45.260 align:start position:0%
an empty stream so where is it useful it
basically<00:12:43.740><c> makes</c><00:12:43.980><c> integration</c><00:12:44.520><c> better</c><00:12:44.700><c> so</c>

00:12:45.260 --> 00:12:45.270 align:start position:0%
basically makes integration better so
 

00:12:45.270 --> 00:12:46.610 align:start position:0%
basically makes integration better so
you're<00:12:45.390><c> writing</c><00:12:45.660><c> along</c><00:12:45.930><c> streams</c><00:12:46.260><c> and</c><00:12:46.500><c> you</c>

00:12:46.610 --> 00:12:46.620 align:start position:0%
you're writing along streams and you
 

00:12:46.620 --> 00:12:46.950 align:start position:0%
you're writing along streams and you
have<00:12:46.740><c> a</c>

00:12:46.950 --> 00:12:46.960 align:start position:0%
have a
 

00:12:46.960 --> 00:12:49.110 align:start position:0%
have a
of<00:12:47.110><c> chained</c><00:12:47.470><c> operations</c><00:12:48.010><c> especially</c><00:12:48.340><c> maps</c><00:12:48.790><c> at</c>

00:12:49.110 --> 00:12:49.120 align:start position:0%
of chained operations especially maps at
 

00:12:49.120 --> 00:12:50.430 align:start position:0%
of chained operations especially maps at
some<00:12:49.540><c> point</c><00:12:49.750><c> you're</c><00:12:49.900><c> gonna</c><00:12:50.020><c> end</c><00:12:50.260><c> up</c><00:12:50.380><c> with</c>

00:12:50.430 --> 00:12:50.440 align:start position:0%
some point you're gonna end up with
 

00:12:50.440 --> 00:12:52.260 align:start position:0%
some point you're gonna end up with
nulls<00:12:50.890><c> and</c><00:12:51.160><c> you</c><00:12:51.370><c> will</c><00:12:51.490><c> need</c><00:12:51.640><c> to</c><00:12:51.760><c> filter</c><00:12:51.940><c> result</c>

00:12:52.260 --> 00:12:52.270 align:start position:0%
nulls and you will need to filter result
 

00:12:52.270 --> 00:12:53.220 align:start position:0%
nulls and you will need to filter result
because<00:12:52.570><c> you</c><00:12:52.630><c> don't</c><00:12:52.750><c> wanna</c><00:12:52.870><c> have</c><00:12:52.990><c> them</c><00:12:53.140><c> in</c>

00:12:53.220 --> 00:12:53.230 align:start position:0%
because you don't wanna have them in
 

00:12:53.230 --> 00:12:54.330 align:start position:0%
because you don't wanna have them in
your<00:12:53.320><c> streams</c><00:12:53.590><c> you</c><00:12:53.830><c> don't</c><00:12:53.950><c> want</c><00:12:54.070><c> to</c><00:12:54.130><c> have</c><00:12:54.220><c> Mel</c>

00:12:54.330 --> 00:12:54.340 align:start position:0%
your streams you don't want to have Mel
 

00:12:54.340 --> 00:12:56.040 align:start position:0%
your streams you don't want to have Mel
upon<00:12:54.460><c> your</c><00:12:54.610><c> exceptions</c><00:12:55.000><c> so</c><00:12:55.750><c> at</c><00:12:55.840><c> some</c><00:12:55.990><c> point</c>

00:12:56.040 --> 00:12:56.050 align:start position:0%
upon your exceptions so at some point
 

00:12:56.050 --> 00:12:57.330 align:start position:0%
upon your exceptions so at some point
you<00:12:56.410><c> will</c><00:12:56.530><c> have</c><00:12:56.650><c> a</c><00:12:56.680><c> block</c><00:12:56.950><c> with</c><00:12:57.160><c> an</c><00:12:57.250><c> e</c>

00:12:57.330 --> 00:12:57.340 align:start position:0%
you will have a block with an e
 

00:12:57.340 --> 00:12:59.370 align:start position:0%
you will have a block with an e
statement<00:12:57.940><c> or</c><00:12:58.150><c> a</c><00:12:58.210><c> ternary</c><00:12:58.480><c> operator</c><00:12:59.020><c> that</c>

00:12:59.370 --> 00:12:59.380 align:start position:0%
statement or a ternary operator that
 

00:12:59.380 --> 00:13:02.220 align:start position:0%
statement or a ternary operator that
gets<00:12:59.800><c> rid</c><00:12:59.950><c> of</c><00:13:00.700><c> these</c><00:13:00.880><c> nails</c><00:13:01.120><c> and</c><00:13:01.390><c> that's</c><00:13:01.990><c> just</c>

00:13:02.220 --> 00:13:02.230 align:start position:0%
gets rid of these nails and that's just
 

00:13:02.230 --> 00:13:04.080 align:start position:0%
gets rid of these nails and that's just
not<00:13:02.350><c> really</c><00:13:02.500><c> nice</c><00:13:02.770><c> coat</c><00:13:03.070><c> you</c><00:13:03.220><c> have</c><00:13:03.250><c> so</c><00:13:03.940><c> this</c>

00:13:04.080 --> 00:13:04.090 align:start position:0%
not really nice coat you have so this
 

00:13:04.090 --> 00:13:05.310 align:start position:0%
not really nice coat you have so this
allows<00:13:04.360><c> you</c><00:13:04.540><c> to</c><00:13:04.660><c> get</c><00:13:04.750><c> rid</c><00:13:04.930><c> of</c><00:13:04.960><c> those</c><00:13:05.110><c> null</c>

00:13:05.310 --> 00:13:05.320 align:start position:0%
allows you to get rid of those null
 

00:13:05.320 --> 00:13:07.890 align:start position:0%
allows you to get rid of those null
checks<00:13:06.120><c> just</c><00:13:07.120><c> a</c><00:13:07.150><c> nice</c><00:13:07.270><c> convenience</c><00:13:07.720><c> feature</c>

00:13:07.890 --> 00:13:07.900 align:start position:0%
checks just a nice convenience feature
 

00:13:07.900 --> 00:13:11.610 align:start position:0%
checks just a nice convenience feature
there<00:13:09.390><c> another</c><00:13:10.390><c> API</c><00:13:10.750><c> the</c><00:13:10.900><c> plays</c><00:13:11.380><c> really</c>

00:13:11.610 --> 00:13:11.620 align:start position:0%
there another API the plays really
 

00:13:11.620 --> 00:13:13.890 align:start position:0%
there another API the plays really
nicely<00:13:11.770><c> with</c><00:13:12.070><c> streams</c><00:13:12.490><c> is</c><00:13:12.820><c> the</c><00:13:13.360><c> completable</c>

00:13:13.890 --> 00:13:13.900 align:start position:0%
nicely with streams is the completable
 

00:13:13.900 --> 00:13:17.760 align:start position:0%
nicely with streams is the completable
future<00:13:14.230><c> api</c><00:13:14.820><c> completable</c><00:13:15.820><c> futures</c><00:13:16.770><c> basically</c>

00:13:17.760 --> 00:13:17.770 align:start position:0%
future api completable futures basically
 

00:13:17.770 --> 00:13:19.590 align:start position:0%
future api completable futures basically
provide<00:13:18.130><c> framework</c><00:13:18.820><c> for</c><00:13:19.060><c> a</c><00:13:19.090><c> synchronous</c>

00:13:19.590 --> 00:13:19.600 align:start position:0%
provide framework for a synchronous
 

00:13:19.600 --> 00:13:21.690 align:start position:0%
provide framework for a synchronous
programming<00:13:19.660><c> in</c><00:13:20.140><c> Java</c><00:13:20.350><c> they</c><00:13:21.160><c> were</c><00:13:21.220><c> introduced</c>

00:13:21.690 --> 00:13:21.700 align:start position:0%
programming in Java they were introduced
 

00:13:21.700 --> 00:13:23.760 align:start position:0%
programming in Java they were introduced
in<00:13:21.880><c> in</c><00:13:22.180><c> Java</c><00:13:22.450><c> 8</c><00:13:22.660><c> and</c><00:13:22.870><c> they're</c><00:13:23.320><c> kind</c><00:13:23.500><c> of</c><00:13:23.560><c> build</c>

00:13:23.760 --> 00:13:23.770 align:start position:0%
in in Java 8 and they're kind of build
 

00:13:23.770 --> 00:13:25.830 align:start position:0%
in in Java 8 and they're kind of build
around<00:13:23.890><c> the</c><00:13:24.130><c> class</c><00:13:24.310><c> called</c><00:13:24.840><c> completable</c>

00:13:25.830 --> 00:13:25.840 align:start position:0%
around the class called completable
 

00:13:25.840 --> 00:13:30.030 align:start position:0%
around the class called completable
future<00:13:27.990><c> and</c><00:13:28.990><c> as</c><00:13:29.620><c> the</c><00:13:29.710><c> name</c><00:13:29.860><c> would</c><00:13:29.890><c> suggest</c>

00:13:30.030 --> 00:13:30.040 align:start position:0%
future and as the name would suggest
 

00:13:30.040 --> 00:13:31.740 align:start position:0%
future and as the name would suggest
this<00:13:30.550><c> is</c><00:13:30.610><c> essentially</c><00:13:31.090><c> a</c><00:13:31.120><c> future</c><00:13:31.420><c> that</c><00:13:31.540><c> can</c><00:13:31.660><c> be</c>

00:13:31.740 --> 00:13:31.750 align:start position:0%
this is essentially a future that can be
 

00:13:31.750 --> 00:13:34.140 align:start position:0%
this is essentially a future that can be
explicitly<00:13:32.200><c> completed</c><00:13:32.820><c> so</c><00:13:33.820><c> what</c><00:13:33.940><c> this</c><00:13:34.030><c> is</c>

00:13:34.140 --> 00:13:34.150 align:start position:0%
explicitly completed so what this is
 

00:13:34.150 --> 00:13:36.570 align:start position:0%
explicitly completed so what this is
used<00:13:34.330><c> for</c><00:13:34.450><c> is</c><00:13:34.870><c> you</c><00:13:35.740><c> typically</c><00:13:36.100><c> use</c><00:13:36.250><c> this</c><00:13:36.400><c> to</c>

00:13:36.570 --> 00:13:36.580 align:start position:0%
used for is you typically use this to
 

00:13:36.580 --> 00:13:39.150 align:start position:0%
used for is you typically use this to
model<00:13:36.910><c> tasks</c><00:13:37.750><c> particularly</c><00:13:38.680><c> a</c><00:13:38.710><c> synchronous</c>

00:13:39.150 --> 00:13:39.160 align:start position:0%
model tasks particularly a synchronous
 

00:13:39.160 --> 00:13:40.980 align:start position:0%
model tasks particularly a synchronous
tasks<00:13:39.520><c> in</c><00:13:39.910><c> a</c><00:13:40.150><c> bigger</c><00:13:40.300><c> computation</c><00:13:40.960><c> that</c>

00:13:40.980 --> 00:13:40.990 align:start position:0%
tasks in a bigger computation that
 

00:13:40.990 --> 00:13:43.710 align:start position:0%
tasks in a bigger computation that
consists<00:13:41.650><c> of</c><00:13:41.800><c> many</c><00:13:42.040><c> tasks</c><00:13:42.430><c> so</c><00:13:43.090><c> you</c><00:13:43.120><c> can</c><00:13:43.510><c> change</c>

00:13:43.710 --> 00:13:43.720 align:start position:0%
consists of many tasks so you can change
 

00:13:43.720 --> 00:13:45.060 align:start position:0%
consists of many tasks so you can change
the<00:13:43.840><c> status</c><00:13:44.170><c> and</c><00:13:44.350><c> the</c><00:13:44.410><c> value</c><00:13:44.650><c> of</c><00:13:44.740><c> the</c><00:13:44.860><c> future</c>

00:13:45.060 --> 00:13:45.070 align:start position:0%
the status and the value of the future
 

00:13:45.070 --> 00:13:46.980 align:start position:0%
the status and the value of the future
and<00:13:45.490><c> you</c><00:13:45.820><c> also</c><00:13:45.970><c> have</c><00:13:46.180><c> IP</c><00:13:46.300><c> is</c><00:13:46.570><c> for</c><00:13:46.840><c> creating</c>

00:13:46.980 --> 00:13:46.990 align:start position:0%
and you also have IP is for creating
 

00:13:46.990 --> 00:13:48.690 align:start position:0%
and you also have IP is for creating
dependencies<00:13:47.650><c> between</c><00:13:47.740><c> futures</c><00:13:48.250><c> so</c><00:13:48.520><c> we</c><00:13:48.580><c> can</c>

00:13:48.690 --> 00:13:48.700 align:start position:0%
dependencies between futures so we can
 

00:13:48.700 --> 00:13:50.730 align:start position:0%
dependencies between futures so we can
express<00:13:49.000><c> things</c><00:13:49.270><c> like</c><00:13:49.720><c> ok</c><00:13:50.260><c> when</c><00:13:50.440><c> this</c><00:13:50.590><c> feature</c>

00:13:50.730 --> 00:13:50.740 align:start position:0%
express things like ok when this feature
 

00:13:50.740 --> 00:13:54.210 align:start position:0%
express things like ok when this feature
is<00:13:50.980><c> done</c><00:13:51.220><c> triggered</c><00:13:52.210><c> this</c><00:13:52.360><c> action</c><00:13:52.690><c> so</c><00:13:53.220><c> let's</c>

00:13:54.210 --> 00:13:54.220 align:start position:0%
is done triggered this action so let's
 

00:13:54.220 --> 00:13:55.860 align:start position:0%
is done triggered this action so let's
just<00:13:54.340><c> have</c><00:13:54.460><c> a</c><00:13:54.490><c> look</c><00:13:54.670><c> at</c><00:13:54.880><c> the</c><00:13:55.510><c> really</c><00:13:55.750><c> basic</c>

00:13:55.860 --> 00:13:55.870 align:start position:0%
just have a look at the really basic
 

00:13:55.870 --> 00:13:58.470 align:start position:0%
just have a look at the really basic
functionality<00:13:56.560><c> here</c><00:13:56.790><c> you</c><00:13:57.790><c> can</c><00:13:57.910><c> create</c><00:13:58.210><c> a</c><00:13:58.300><c> new</c>

00:13:58.470 --> 00:13:58.480 align:start position:0%
functionality here you can create a new
 

00:13:58.480 --> 00:14:03.060 align:start position:0%
functionality here you can create a new
future<00:13:58.860><c> let's</c><00:13:59.860><c> say</c><00:14:00.040><c> future</c><00:14:00.400><c> of</c><00:14:00.520><c> string</c><00:14:02.070><c> so</c>

00:14:03.060 --> 00:14:03.070 align:start position:0%
future let's say future of string so
 

00:14:03.070 --> 00:14:06.630 align:start position:0%
future let's say future of string so
let's<00:14:03.220><c> call</c><00:14:03.430><c> it</c><00:14:03.580><c> CF</c><00:14:04.440><c> then</c><00:14:05.440><c> I</c><00:14:05.530><c> can</c><00:14:05.770><c> complete</c><00:14:06.460><c> the</c>

00:14:06.630 --> 00:14:06.640 align:start position:0%
let's call it CF then I can complete the
 

00:14:06.640 --> 00:14:08.550 align:start position:0%
let's call it CF then I can complete the
future<00:14:06.970><c> with</c><00:14:07.450><c> a</c><00:14:07.480><c> value</c><00:14:07.840><c> it</c><00:14:08.200><c> might</c><00:14:08.380><c> get</c><00:14:08.500><c> a</c>

00:14:08.550 --> 00:14:08.560 align:start position:0%
future with a value it might get a
 

00:14:08.560 --> 00:14:12.990 align:start position:0%
future with a value it might get a
string<00:14:11.130><c> and</c><00:14:12.130><c> you</c><00:14:12.400><c> can</c><00:14:12.550><c> see</c><00:14:12.700><c> that</c><00:14:12.820><c> now</c><00:14:12.970><c> the</c>

00:14:12.990 --> 00:14:13.000 align:start position:0%
string and you can see that now the
 

00:14:13.000 --> 00:14:15.180 align:start position:0%
string and you can see that now the
feature<00:14:13.300><c> is</c><00:14:13.510><c> completed</c><00:14:13.930><c> normally</c><00:14:14.290><c> and</c><00:14:14.890><c> if</c><00:14:15.130><c> I</c>

00:14:15.180 --> 00:14:15.190 align:start position:0%
feature is completed normally and if I
 

00:14:15.190 --> 00:14:18.930 align:start position:0%
feature is completed normally and if I
try<00:14:15.400><c> to</c><00:14:15.850><c> extract</c><00:14:16.120><c> the</c><00:14:16.240><c> value</c><00:14:17.640><c> it's</c><00:14:18.640><c> actually</c>

00:14:18.930 --> 00:14:18.940 align:start position:0%
try to extract the value it's actually
 

00:14:18.940 --> 00:14:21.750 align:start position:0%
try to extract the value it's actually
going<00:14:19.090><c> to</c><00:14:19.240><c> give</c><00:14:19.360><c> me</c><00:14:19.480><c> that</c><00:14:19.600><c> value</c><00:14:20.610><c> so</c><00:14:21.610><c> what</c>

00:14:21.750 --> 00:14:21.760 align:start position:0%
going to give me that value so what
 

00:14:21.760 --> 00:14:23.550 align:start position:0%
going to give me that value so what
happens<00:14:22.030><c> if</c><00:14:22.150><c> I</c><00:14:22.210><c> don't</c><00:14:22.270><c> complete</c><00:14:22.900><c> the</c><00:14:22.990><c> future</c>

00:14:23.550 --> 00:14:23.560 align:start position:0%
happens if I don't complete the future
 

00:14:23.560 --> 00:14:27.690 align:start position:0%
happens if I don't complete the future
let's<00:14:24.400><c> reinitialize</c><00:14:25.030><c> this</c><00:14:25.240><c> here</c><00:14:25.570><c> and</c><00:14:26.700><c> I'm</c>

00:14:27.690 --> 00:14:27.700 align:start position:0%
let's reinitialize this here and I'm
 

00:14:27.700 --> 00:14:29.220 align:start position:0%
let's reinitialize this here and I'm
just<00:14:27.940><c> going</c><00:14:28.120><c> to</c><00:14:28.180><c> call</c><00:14:28.390><c> the</c><00:14:28.570><c> get</c><00:14:28.690><c> method</c><00:14:28.810><c> direct</c>

00:14:29.220 --> 00:14:29.230 align:start position:0%
just going to call the get method direct
 

00:14:29.230 --> 00:14:31.500 align:start position:0%
just going to call the get method direct
thing<00:14:29.460><c> and</c><00:14:30.460><c> you</c><00:14:30.640><c> can</c><00:14:30.790><c> see</c><00:14:30.910><c> that</c><00:14:31.000><c> in</c><00:14:31.120><c> this</c><00:14:31.240><c> case</c>

00:14:31.500 --> 00:14:31.510 align:start position:0%
thing and you can see that in this case
 

00:14:31.510 --> 00:14:33.660 align:start position:0%
thing and you can see that in this case
it<00:14:31.840><c> just</c><00:14:32.110><c> keeps</c><00:14:32.320><c> blocking</c><00:14:32.500><c> and</c><00:14:32.890><c> this</c><00:14:33.130><c> so</c><00:14:33.280><c> it's</c>

00:14:33.660 --> 00:14:33.670 align:start position:0%
it just keeps blocking and this so it's
 

00:14:33.670 --> 00:14:35.010 align:start position:0%
it just keeps blocking and this so it's
essentially<00:14:34.030><c> waiting</c><00:14:34.390><c> for</c><00:14:34.540><c> somebody</c><00:14:34.690><c> else</c><00:14:34.900><c> to</c>

00:14:35.010 --> 00:14:35.020 align:start position:0%
essentially waiting for somebody else to
 

00:14:35.020 --> 00:14:36.210 align:start position:0%
essentially waiting for somebody else to
complete<00:14:35.290><c> the</c><00:14:35.380><c> feature</c><00:14:35.560><c> from</c><00:14:35.830><c> different</c>

00:14:36.210 --> 00:14:36.220 align:start position:0%
complete the feature from different
 

00:14:36.220 --> 00:14:38.690 align:start position:0%
complete the feature from different
threads<00:14:36.310><c> and</c><00:14:36.640><c> that's</c><00:14:37.630><c> basically</c><00:14:37.960><c> how</c><00:14:38.050><c> you</c>

00:14:38.690 --> 00:14:38.700 align:start position:0%
threads and that's basically how you
 

00:14:38.700 --> 00:14:42.780 align:start position:0%
threads and that's basically how you
synchronize<00:14:39.700><c> using</c><00:14:40.060><c> this</c><00:14:40.180><c> constructor</c><00:14:41.790><c> you</c>

00:14:42.780 --> 00:14:42.790 align:start position:0%
synchronize using this constructor you
 

00:14:42.790 --> 00:14:44.100 align:start position:0%
synchronize using this constructor you
can<00:14:42.910><c> also</c><00:14:43.090><c> complete</c><00:14:43.600><c> the</c><00:14:43.810><c> future</c>

00:14:44.100 --> 00:14:44.110 align:start position:0%
can also complete the future
 

00:14:44.110 --> 00:14:46.920 align:start position:0%
can also complete the future
exceptionally<00:14:45.210><c> which</c><00:14:46.210><c> allows</c><00:14:46.480><c> you</c><00:14:46.630><c> to</c><00:14:46.750><c> give</c>

00:14:46.920 --> 00:14:46.930 align:start position:0%
exceptionally which allows you to give
 

00:14:46.930 --> 00:14:50.100 align:start position:0%
exceptionally which allows you to give
it<00:14:47.050><c> a</c><00:14:47.470><c> file</c><00:14:48.070><c> in</c><00:14:48.850><c> this</c><00:14:49.090><c> case</c><00:14:49.150><c> I'm</c><00:14:49.690><c> just</c><00:14:49.870><c> going</c><00:14:50.050><c> to</c>

00:14:50.100 --> 00:14:50.110 align:start position:0%
it a file in this case I'm just going to
 

00:14:50.110 --> 00:14:53.340 align:start position:0%
it a file in this case I'm just going to
pass<00:14:50.380><c> any</c><00:14:51.280><c> legal</c><00:14:51.580><c> state</c><00:14:51.820><c> exception</c><00:14:52.350><c> for</c>

00:14:53.340 --> 00:14:53.350 align:start position:0%
pass any legal state exception for
 

00:14:53.350 --> 00:14:56.880 align:start position:0%
pass any legal state exception for
example<00:14:53.830><c> and</c><00:14:54.360><c> now</c><00:14:55.360><c> if</c><00:14:56.080><c> I</c><00:14:56.230><c> try</c><00:14:56.470><c> to</c><00:14:56.530><c> obtain</c><00:14:56.740><c> the</c>

00:14:56.880 --> 00:14:56.890 align:start position:0%
example and now if I try to obtain the
 

00:14:56.890 --> 00:14:57.920 align:start position:0%
example and now if I try to obtain the
value<00:14:57.190><c> of</c><00:14:57.310><c> the</c><00:14:57.400><c> future</c>

00:14:57.920 --> 00:14:57.930 align:start position:0%
value of the future
 

00:14:57.930 --> 00:14:59.900 align:start position:0%
value of the future
it's<00:14:58.740><c> actually</c><00:14:59.040><c> going</c><00:14:59.190><c> to</c><00:14:59.370><c> fail</c><00:14:59.580><c> with</c><00:14:59.790><c> that</c>

00:14:59.900 --> 00:14:59.910 align:start position:0%
it's actually going to fail with that
 

00:14:59.910 --> 00:15:02.660 align:start position:0%
it's actually going to fail with that
exception<00:15:00.180><c> they</c><00:15:00.420><c> gave</c><00:15:00.630><c> it</c><00:15:01.160><c> so</c><00:15:02.160><c> that's</c><00:15:02.340><c> kind</c><00:15:02.610><c> of</c>

00:15:02.660 --> 00:15:02.670 align:start position:0%
exception they gave it so that's kind of
 

00:15:02.670 --> 00:15:03.680 align:start position:0%
exception they gave it so that's kind of
the<00:15:02.790><c> basic</c><00:15:03.060><c> functionality</c><00:15:03.450><c> around</c>

00:15:03.680 --> 00:15:03.690 align:start position:0%
the basic functionality around
 

00:15:03.690 --> 00:15:07.820 align:start position:0%
the basic functionality around
completable<00:15:04.170><c> futures</c><00:15:05.420><c> Java</c><00:15:06.420><c> 9</c><00:15:06.710><c> introduced</c><00:15:07.710><c> a</c>

00:15:07.820 --> 00:15:07.830 align:start position:0%
completable futures Java 9 introduced a
 

00:15:07.830 --> 00:15:10.510 align:start position:0%
completable futures Java 9 introduced a
bunch<00:15:08.010><c> of</c><00:15:08.100><c> things</c><00:15:08.450><c> quite</c><00:15:09.450><c> a</c><00:15:09.480><c> few</c><00:15:09.660><c> actually</c>

00:15:10.510 --> 00:15:10.520 align:start position:0%
bunch of things quite a few actually
 

00:15:10.520 --> 00:15:12.770 align:start position:0%
bunch of things quite a few actually
completable<00:15:11.520><c> future</c><00:15:11.850><c> is</c><00:15:12.060><c> a</c><00:15:12.090><c> pretty</c><00:15:12.420><c> big</c><00:15:12.630><c> class</c>

00:15:12.770 --> 00:15:12.780 align:start position:0%
completable future is a pretty big class
 

00:15:12.780 --> 00:15:14.240 align:start position:0%
completable future is a pretty big class
almost<00:15:13.080><c> three</c><00:15:13.290><c> thousand</c><00:15:13.530><c> lines</c><00:15:13.680><c> of</c><00:15:13.740><c> code</c><00:15:13.800><c> and</c>

00:15:14.240 --> 00:15:14.250 align:start position:0%
almost three thousand lines of code and
 

00:15:14.250 --> 00:15:15.890 align:start position:0%
almost three thousand lines of code and
it<00:15:14.580><c> has</c><00:15:14.730><c> a</c><00:15:14.760><c> bunch</c><00:15:14.940><c> of</c><00:15:15.060><c> methods</c><00:15:15.180><c> and</c><00:15:15.600><c> a</c><00:15:15.630><c> bunch</c><00:15:15.810><c> of</c>

00:15:15.890 --> 00:15:15.900 align:start position:0%
it has a bunch of methods and a bunch of
 

00:15:15.900 --> 00:15:17.840 align:start position:0%
it has a bunch of methods and a bunch of
public<00:15:16.140><c> methods</c><00:15:16.410><c> as</c><00:15:16.500><c> well</c><00:15:16.680><c> and</c><00:15:17.370><c> quite</c><00:15:17.730><c> a</c><00:15:17.760><c> few</c>

00:15:17.840 --> 00:15:17.850 align:start position:0%
public methods as well and quite a few
 

00:15:17.850 --> 00:15:20.150 align:start position:0%
public methods as well and quite a few
of<00:15:18.030><c> these</c><00:15:18.150><c> were</c><00:15:18.330><c> added</c><00:15:18.510><c> in</c><00:15:18.660><c> Java</c><00:15:18.780><c> 9</c><00:15:19.070><c> most</c><00:15:20.070><c> of</c>

00:15:20.150 --> 00:15:20.160 align:start position:0%
of these were added in Java 9 most of
 

00:15:20.160 --> 00:15:22.280 align:start position:0%
of these were added in Java 9 most of
them<00:15:20.310><c> are</c><00:15:20.490><c> not</c><00:15:20.700><c> very</c><00:15:20.910><c> exciting</c><00:15:21.300><c> it's</c><00:15:21.900><c> mostly</c>

00:15:22.280 --> 00:15:22.290 align:start position:0%
them are not very exciting it's mostly
 

00:15:22.290 --> 00:15:24.950 align:start position:0%
them are not very exciting it's mostly
stuff<00:15:22.790><c> regular</c><00:15:23.790><c> methods</c><00:15:24.210><c> factory</c><00:15:24.630><c> methods</c>

00:15:24.950 --> 00:15:24.960 align:start position:0%
stuff regular methods factory methods
 

00:15:24.960 --> 00:15:26.720 align:start position:0%
stuff regular methods factory methods
methods<00:15:25.890><c> that</c><00:15:26.010><c> make</c><00:15:26.190><c> it</c><00:15:26.280><c> easier</c><00:15:26.460><c> for</c><00:15:26.490><c> you</c><00:15:26.700><c> to</c>

00:15:26.720 --> 00:15:26.730 align:start position:0%
methods that make it easier for you to
 

00:15:26.730 --> 00:15:28.400 align:start position:0%
methods that make it easier for you to
subclass<00:15:27.150><c> computable</c><00:15:27.600><c> future</c><00:15:27.930><c> and</c><00:15:28.170><c> stuff</c>

00:15:28.400 --> 00:15:28.410 align:start position:0%
subclass computable future and stuff
 

00:15:28.410 --> 00:15:30.560 align:start position:0%
subclass computable future and stuff
like<00:15:28.470><c> that</c><00:15:28.650><c> there</c><00:15:29.460><c> are</c><00:15:29.550><c> three</c><00:15:29.880><c> however</c><00:15:30.090><c> them</c>

00:15:30.560 --> 00:15:30.570 align:start position:0%
like that there are three however them
 

00:15:30.570 --> 00:15:33.290 align:start position:0%
like that there are three however them
really<00:15:30.810><c> excited</c><00:15:31.140><c> about</c><00:15:31.730><c> and</c><00:15:32.730><c> Gemini</c><00:15:33.180><c> and</c>

00:15:33.290 --> 00:15:33.300 align:start position:0%
really excited about and Gemini and
 

00:15:33.300 --> 00:15:34.850 align:start position:0%
really excited about and Gemini and
basically<00:15:33.690><c> provided</c><00:15:34.260><c> a</c><00:15:34.440><c> new</c><00:15:34.650><c> way</c><00:15:34.830><c> of</c>

00:15:34.850 --> 00:15:34.860 align:start position:0%
basically provided a new way of
 

00:15:34.860 --> 00:15:37.580 align:start position:0%
basically provided a new way of
completing<00:15:35.580><c> futures</c><00:15:36.000><c> based</c><00:15:36.660><c> on</c><00:15:36.840><c> a</c><00:15:36.900><c> time</c><00:15:37.110><c> out</c>

00:15:37.580 --> 00:15:37.590 align:start position:0%
completing futures based on a time out
 

00:15:37.590 --> 00:15:40.600 align:start position:0%
completing futures based on a time out
so<00:15:38.280><c> in</c><00:15:38.400><c> Java</c><00:15:38.550><c> nine</c><00:15:38.820><c> I</c><00:15:39.150><c> can</c><00:15:39.720><c> do</c><00:15:39.840><c> something</c>

00:15:40.600 --> 00:15:40.610 align:start position:0%
so in Java nine I can do something
 

00:15:40.610 --> 00:15:43.730 align:start position:0%
so in Java nine I can do something
something<00:15:41.610><c> like</c><00:15:41.850><c> this</c><00:15:42.090><c> let's</c><00:15:42.740><c> reinitialize</c>

00:15:43.730 --> 00:15:43.740 align:start position:0%
something like this let's reinitialize
 

00:15:43.740 --> 00:15:47.270 align:start position:0%
something like this let's reinitialize
this<00:15:43.920><c> here</c><00:15:45.020><c> and</c><00:15:46.020><c> can</c><00:15:46.200><c> call</c><00:15:46.440><c> complete</c><00:15:47.130><c> on</c><00:15:47.250><c> time</c>

00:15:47.270 --> 00:15:47.280 align:start position:0%
this here and can call complete on time
 

00:15:47.280 --> 00:15:51.830 align:start position:0%
this here and can call complete on time
out<00:15:47.780><c> which</c><00:15:48.780><c> takes</c><00:15:49.110><c> a</c><00:15:49.260><c> value</c><00:15:50.300><c> turned</c><00:15:51.300><c> out</c><00:15:51.480><c> and</c>

00:15:51.830 --> 00:15:51.840 align:start position:0%
out which takes a value turned out and
 

00:15:51.840 --> 00:15:54.980 align:start position:0%
out which takes a value turned out and
then<00:15:52.710><c> the</c><00:15:52.890><c> actual</c><00:15:53.160><c> time</c><00:15:53.370><c> so</c><00:15:54.120><c> let's</c><00:15:54.330><c> say</c><00:15:54.570><c> I'm</c>

00:15:54.980 --> 00:15:54.990 align:start position:0%
then the actual time so let's say I'm
 

00:15:54.990 --> 00:16:01.730 align:start position:0%
then the actual time so let's say I'm
going<00:15:55.080><c> to</c><00:15:55.380><c> give</c><00:15:55.530><c> it</c><00:15:55.650><c> five</c><00:15:56.580><c> seconds</c><00:16:00.080><c> so</c><00:16:01.080><c> now</c><00:16:01.260><c> if</c>

00:16:01.730 --> 00:16:01.740 align:start position:0%
going to give it five seconds so now if
 

00:16:01.740 --> 00:16:03.740 align:start position:0%
going to give it five seconds so now if
I<00:16:01.890><c> have</c><00:16:02.010><c> a</c><00:16:02.070><c> look</c><00:16:02.190><c> at</c><00:16:02.370><c> this</c><00:16:02.490><c> future</c><00:16:02.880><c> not</c>

00:16:03.740 --> 00:16:03.750 align:start position:0%
I have a look at this future not
 

00:16:03.750 --> 00:16:07.550 align:start position:0%
I have a look at this future not
completed<00:16:04.200><c> yet</c><00:16:05.150><c> still</c><00:16:06.150><c> not</c><00:16:06.330><c> completed</c><00:16:06.720><c> and</c>

00:16:07.550 --> 00:16:07.560 align:start position:0%
completed yet still not completed and
 

00:16:07.560 --> 00:16:11.030 align:start position:0%
completed yet still not completed and
now<00:16:08.010><c> it</c><00:16:08.130><c> completely</c><00:16:08.520><c> normally</c><00:16:09.050><c> and</c><00:16:10.050><c> the</c><00:16:10.800><c> value</c>

00:16:11.030 --> 00:16:11.040 align:start position:0%
now it completely normally and the value
 

00:16:11.040 --> 00:16:14.450 align:start position:0%
now it completely normally and the value
is<00:16:11.130><c> actually</c><00:16:11.280><c> timed</c><00:16:11.670><c> out</c><00:16:11.900><c> so</c><00:16:13.010><c> this</c><00:16:14.010><c> is</c><00:16:14.070><c> really</c>

00:16:14.450 --> 00:16:14.460 align:start position:0%
is actually timed out so this is really
 

00:16:14.460 --> 00:16:16.370 align:start position:0%
is actually timed out so this is really
useful<00:16:14.580><c> when</c><00:16:14.850><c> you</c><00:16:15.090><c> have</c><00:16:15.120><c> sort</c><00:16:15.900><c> of</c><00:16:15.960><c> distributed</c>

00:16:16.370 --> 00:16:16.380 align:start position:0%
useful when you have sort of distributed
 

00:16:16.380 --> 00:16:17.540 align:start position:0%
useful when you have sort of distributed
computation<00:16:16.920><c> let's</c><00:16:17.250><c> say</c><00:16:17.340><c> you</c><00:16:17.400><c> have</c><00:16:17.520><c> a</c>

00:16:17.540 --> 00:16:17.550 align:start position:0%
computation let's say you have a
 

00:16:17.550 --> 00:16:19.700 align:start position:0%
computation let's say you have a
computation<00:16:18.210><c> that</c><00:16:18.240><c> involves</c><00:16:18.780><c> talking</c><00:16:19.470><c> to</c>

00:16:19.700 --> 00:16:19.710 align:start position:0%
computation that involves talking to
 

00:16:19.710 --> 00:16:22.040 align:start position:0%
computation that involves talking to
several<00:16:19.860><c> micro</c><00:16:20.190><c> services</c><00:16:20.610><c> and</c><00:16:20.820><c> for</c><00:16:21.750><c> each</c><00:16:21.870><c> one</c>

00:16:22.040 --> 00:16:22.050 align:start position:0%
several micro services and for each one
 

00:16:22.050 --> 00:16:23.060 align:start position:0%
several micro services and for each one
of<00:16:22.080><c> those</c><00:16:22.260><c> you</c><00:16:22.440><c> want</c><00:16:22.500><c> to</c><00:16:22.590><c> express</c><00:16:22.890><c> something</c>

00:16:23.060 --> 00:16:23.070 align:start position:0%
of those you want to express something
 

00:16:23.070 --> 00:16:24.830 align:start position:0%
of those you want to express something
like<00:16:23.340><c> okay</c><00:16:23.640><c> wait</c><00:16:23.790><c> for</c><00:16:24.000><c> this</c><00:16:24.090><c> result</c><00:16:24.480><c> from</c><00:16:24.660><c> this</c>

00:16:24.830 --> 00:16:24.840 align:start position:0%
like okay wait for this result from this
 

00:16:24.840 --> 00:16:26.900 align:start position:0%
like okay wait for this result from this
micro<00:16:25.080><c> service</c><00:16:25.380><c> for</c><00:16:25.650><c> five</c><00:16:25.800><c> seconds</c><00:16:26.160><c> if</c><00:16:26.790><c> it</c>

00:16:26.900 --> 00:16:26.910 align:start position:0%
micro service for five seconds if it
 

00:16:26.910 --> 00:16:28.670 align:start position:0%
micro service for five seconds if it
completes<00:16:27.270><c> that's</c><00:16:27.690><c> fine</c><00:16:27.930><c> if</c><00:16:28.290><c> it</c><00:16:28.440><c> doesn't</c>

00:16:28.670 --> 00:16:28.680 align:start position:0%
completes that's fine if it doesn't
 

00:16:28.680 --> 00:16:30.710 align:start position:0%
completes that's fine if it doesn't
complete<00:16:29.010><c> I'm</c><00:16:29.280><c> going</c><00:16:29.700><c> to</c><00:16:29.850><c> load</c><00:16:30.300><c> the</c><00:16:30.420><c> default</c>

00:16:30.710 --> 00:16:30.720 align:start position:0%
complete I'm going to load the default
 

00:16:30.720 --> 00:16:32.570 align:start position:0%
complete I'm going to load the default
value<00:16:30.960><c> or</c><00:16:31.170><c> load</c><00:16:31.320><c> the</c><00:16:31.410><c> value</c><00:16:31.530><c> from</c><00:16:31.710><c> cache</c><00:16:31.980><c> or</c>

00:16:32.570 --> 00:16:32.580 align:start position:0%
value or load the value from cache or
 

00:16:32.580 --> 00:16:34.790 align:start position:0%
value or load the value from cache or
something<00:16:32.880><c> like</c><00:16:32.970><c> that</c><00:16:33.200><c> you</c><00:16:34.200><c> can</c><00:16:34.350><c> also</c><00:16:34.470><c> fail</c>

00:16:34.790 --> 00:16:34.800 align:start position:0%
something like that you can also fail
 

00:16:34.800 --> 00:16:36.350 align:start position:0%
something like that you can also fail
the<00:16:34.950><c> future</c><00:16:35.310><c> if</c><00:16:35.520><c> something</c><00:16:35.850><c> doesn't</c><00:16:36.000><c> complete</c>

00:16:36.350 --> 00:16:36.360 align:start position:0%
the future if something doesn't complete
 

00:16:36.360 --> 00:16:38.510 align:start position:0%
the future if something doesn't complete
in<00:16:36.450><c> time</c><00:16:36.690><c> I'm</c><00:16:37.680><c> just</c><00:16:37.890><c> going</c><00:16:38.040><c> to</c><00:16:38.100><c> reinitialize</c>

00:16:38.510 --> 00:16:38.520 align:start position:0%
in time I'm just going to reinitialize
 

00:16:38.520 --> 00:16:42.470 align:start position:0%
in time I'm just going to reinitialize
this<00:16:38.880><c> here</c><00:16:40.790><c> that's</c><00:16:41.790><c> accomplished</c><00:16:42.030><c> through</c>

00:16:42.470 --> 00:16:42.480 align:start position:0%
this here that's accomplished through
 

00:16:42.480 --> 00:16:45.730 align:start position:0%
this here that's accomplished through
the<00:16:42.510><c> method</c><00:16:42.930><c> or</c><00:16:43.470><c> timeout</c><00:16:44.120><c> which</c><00:16:45.120><c> just</c><00:16:45.510><c> takes</c>

00:16:45.730 --> 00:16:45.740 align:start position:0%
the method or timeout which just takes
 

00:16:45.740 --> 00:16:49.250 align:start position:0%
the method or timeout which just takes
time<00:16:46.800><c> so</c><00:16:47.760><c> I'll</c><00:16:47.850><c> give</c><00:16:48.150><c> it</c><00:16:48.270><c> five</c><00:16:48.600><c> seconds</c><00:16:49.020><c> again</c>

00:16:49.250 --> 00:16:49.260 align:start position:0%
time so I'll give it five seconds again
 

00:16:49.260 --> 00:16:54.020 align:start position:0%
time so I'll give it five seconds again
and<00:16:50.450><c> now</c><00:16:51.450><c> if</c><00:16:51.810><c> I</c><00:16:51.930><c> try</c><00:16:52.170><c> to</c><00:16:52.230><c> get</c><00:16:53.130><c> the</c><00:16:53.250><c> value</c><00:16:53.580><c> it's</c>

00:16:54.020 --> 00:16:54.030 align:start position:0%
and now if I try to get the value it's
 

00:16:54.030 --> 00:16:55.660 align:start position:0%
and now if I try to get the value it's
going<00:16:54.210><c> to</c><00:16:54.330><c> wait</c><00:16:54.480><c> for</c><00:16:54.690><c> five</c><00:16:54.810><c> seconds</c><00:16:55.200><c> and</c><00:16:55.440><c> then</c>

00:16:55.660 --> 00:16:55.670 align:start position:0%
going to wait for five seconds and then
 

00:16:55.670 --> 00:16:57.710 align:start position:0%
going to wait for five seconds and then
it's<00:16:56.670><c> going</c><00:16:56.910><c> to</c><00:16:57.000><c> fail</c><00:16:57.210><c> with</c><00:16:57.480><c> a</c><00:16:57.510><c> timeout</c>

00:16:57.710 --> 00:16:57.720 align:start position:0%
it's going to fail with a timeout
 

00:16:57.720 --> 00:17:00.020 align:start position:0%
it's going to fail with a timeout
exception<00:16:58.260><c> so</c><00:16:59.250><c> these</c><00:16:59.400><c> are</c><00:16:59.580><c> sort</c><00:16:59.760><c> of</c><00:16:59.850><c> two</c>

00:17:00.020 --> 00:17:00.030 align:start position:0%
exception so these are sort of two
 

00:17:00.030 --> 00:17:02.120 align:start position:0%
exception so these are sort of two
methods<00:17:00.180><c> that</c><00:17:00.420><c> allow</c><00:17:00.840><c> you</c><00:17:00.960><c> to</c><00:17:01.080><c> express</c><00:17:01.890><c> time</c>

00:17:02.120 --> 00:17:02.130 align:start position:0%
methods that allow you to express time
 

00:17:02.130 --> 00:17:05.600 align:start position:0%
methods that allow you to express time
dependencies

00:17:05.600 --> 00:17:05.610 align:start position:0%
 
 

00:17:05.610 --> 00:17:07.490 align:start position:0%
 
the<00:17:06.179><c> final</c><00:17:06.510><c> method</c><00:17:06.630><c> that</c><00:17:06.959><c> I</c><00:17:07.020><c> wanted</c><00:17:07.289><c> to</c><00:17:07.350><c> talk</c>

00:17:07.490 --> 00:17:07.500 align:start position:0%
the final method that I wanted to talk
 

00:17:07.500 --> 00:17:10.960 align:start position:0%
the final method that I wanted to talk
about<00:17:07.559><c> here</c><00:17:08.039><c> is</c><00:17:08.309><c> the</c><00:17:08.850><c> method</c><00:17:09.030><c> copy</c><00:17:09.419><c> and</c><00:17:09.809><c> copy</c>

00:17:10.960 --> 00:17:10.970 align:start position:0%
about here is the method copy and copy
 

00:17:10.970 --> 00:17:12.860 align:start position:0%
about here is the method copy and copy
essentially<00:17:11.970><c> allows</c><00:17:12.240><c> you</c><00:17:12.390><c> to</c><00:17:12.539><c> create</c><00:17:12.750><c> a</c>

00:17:12.860 --> 00:17:12.870 align:start position:0%
essentially allows you to create a
 

00:17:12.870 --> 00:17:15.260 align:start position:0%
essentially allows you to create a
defensive<00:17:13.470><c> copy</c><00:17:13.589><c> of</c><00:17:13.799><c> a</c><00:17:13.890><c> future</c><00:17:14.220><c> so</c><00:17:14.939><c> this</c><00:17:15.120><c> is</c>

00:17:15.260 --> 00:17:15.270 align:start position:0%
defensive copy of a future so this is
 

00:17:15.270 --> 00:17:16.549 align:start position:0%
defensive copy of a future so this is
really<00:17:15.449><c> useful</c><00:17:15.600><c> when</c><00:17:15.870><c> you're</c><00:17:16.020><c> designing</c><00:17:16.260><c> a</c>

00:17:16.549 --> 00:17:16.559 align:start position:0%
really useful when you're designing a
 

00:17:16.559 --> 00:17:17.990 align:start position:0%
really useful when you're designing a
synchronous<00:17:16.919><c> api's</c><00:17:17.309><c> where</c><00:17:17.730><c> you're</c><00:17:17.850><c> actually</c>

00:17:17.990 --> 00:17:18.000 align:start position:0%
synchronous api's where you're actually
 

00:17:18.000 --> 00:17:20.150 align:start position:0%
synchronous api's where you're actually
returning<00:17:18.539><c> completable</c><00:17:18.900><c> futures</c><00:17:19.289><c> you</c><00:17:19.949><c> want</c>

00:17:20.150 --> 00:17:20.160 align:start position:0%
returning completable futures you want
 

00:17:20.160 --> 00:17:21.500 align:start position:0%
returning completable futures you want
the<00:17:20.250><c> clients</c><00:17:20.669><c> to</c><00:17:20.760><c> be</c><00:17:20.880><c> able</c><00:17:20.970><c> to</c><00:17:21.120><c> take</c><00:17:21.390><c> these</c>

00:17:21.500 --> 00:17:21.510 align:start position:0%
the clients to be able to take these
 

00:17:21.510 --> 00:17:23.240 align:start position:0%
the clients to be able to take these
futures<00:17:21.929><c> and</c><00:17:22.230><c> respond</c><00:17:22.650><c> to</c><00:17:22.679><c> the</c><00:17:22.799><c> changes</c><00:17:23.130><c> in</c>

00:17:23.240 --> 00:17:23.250 align:start position:0%
futures and respond to the changes in
 

00:17:23.250 --> 00:17:24.860 align:start position:0%
futures and respond to the changes in
these<00:17:23.309><c> futures</c><00:17:23.669><c> but</c><00:17:24.179><c> you</c><00:17:24.299><c> don't</c><00:17:24.480><c> want</c><00:17:24.630><c> them</c><00:17:24.750><c> to</c>

00:17:24.860 --> 00:17:24.870 align:start position:0%
these futures but you don't want them to
 

00:17:24.870 --> 00:17:26.120 align:start position:0%
these futures but you don't want them to
be<00:17:24.959><c> able</c><00:17:25.049><c> to</c><00:17:25.199><c> write</c><00:17:25.439><c> back</c><00:17:25.650><c> you</c><00:17:25.860><c> don't</c><00:17:26.010><c> want</c>

00:17:26.120 --> 00:17:26.130 align:start position:0%
be able to write back you don't want
 

00:17:26.130 --> 00:17:27.710 align:start position:0%
be able to write back you don't want
them<00:17:26.250><c> to</c><00:17:26.339><c> be</c><00:17:26.429><c> able</c><00:17:26.610><c> to</c><00:17:26.730><c> complete</c><00:17:27.240><c> the</c><00:17:27.419><c> future</c>

00:17:27.710 --> 00:17:27.720 align:start position:0%
them to be able to complete the future
 

00:17:27.720 --> 00:17:29.570 align:start position:0%
them to be able to complete the future
that<00:17:27.870><c> you're</c><00:17:27.990><c> using</c><00:17:28.140><c> internally</c><00:17:28.679><c> and</c><00:17:28.890><c> that's</c>

00:17:29.570 --> 00:17:29.580 align:start position:0%
that you're using internally and that's
 

00:17:29.580 --> 00:17:30.799 align:start position:0%
that you're using internally and that's
what<00:17:29.700><c> copy</c><00:17:29.940><c> does</c><00:17:30.059><c> so</c><00:17:30.330><c> it's</c><00:17:30.450><c> kind</c><00:17:30.600><c> of</c><00:17:30.660><c> like</c><00:17:30.780><c> a</c>

00:17:30.799 --> 00:17:30.809 align:start position:0%
what copy does so it's kind of like a
 

00:17:30.809 --> 00:17:33.260 align:start position:0%
what copy does so it's kind of like a
one-way<00:17:31.169><c> synchronization</c><00:17:31.880><c> and</c><00:17:32.880><c> let's</c><00:17:33.059><c> take</c><00:17:33.240><c> a</c>

00:17:33.260 --> 00:17:33.270 align:start position:0%
one-way synchronization and let's take a
 

00:17:33.270 --> 00:17:35.570 align:start position:0%
one-way synchronization and let's take a
look<00:17:33.480><c> at</c><00:17:33.570><c> this</c><00:17:33.690><c> let's</c><00:17:34.650><c> reinitialize</c><00:17:35.370><c> this</c>

00:17:35.570 --> 00:17:35.580 align:start position:0%
look at this let's reinitialize this
 

00:17:35.580 --> 00:17:38.440 align:start position:0%
look at this let's reinitialize this
here<00:17:36.020><c> and</c><00:17:37.020><c> I'm</c><00:17:37.380><c> going</c><00:17:37.620><c> to</c><00:17:37.770><c> create</c><00:17:37.980><c> a</c><00:17:38.070><c> copy</c>

00:17:38.440 --> 00:17:38.450 align:start position:0%
here and I'm going to create a copy
 

00:17:38.450 --> 00:17:41.990 align:start position:0%
here and I'm going to create a copy
let's<00:17:39.450><c> call</c><00:17:39.720><c> it</c><00:17:39.809><c> a</c><00:17:39.870><c> copy</c><00:17:40.610><c> and</c><00:17:41.610><c> then</c><00:17:41.789><c> you</c><00:17:41.880><c> can</c>

00:17:41.990 --> 00:17:42.000 align:start position:0%
let's call it a copy and then you can
 

00:17:42.000 --> 00:17:44.980 align:start position:0%
let's call it a copy and then you can
see<00:17:42.179><c> that</c><00:17:42.390><c> none</c><00:17:43.200><c> of</c><00:17:43.230><c> them</c><00:17:43.440><c> is</c><00:17:43.530><c> completed</c><00:17:43.950><c> yet</c>

00:17:44.980 --> 00:17:44.990 align:start position:0%
see that none of them is completed yet
 

00:17:44.990 --> 00:17:52.580 align:start position:0%
see that none of them is completed yet
obviously<00:17:45.990><c> if</c><00:17:46.470><c> I</c><00:17:46.590><c> complete</c><00:17:46.919><c> the</c><00:17:47.039><c> original</c><00:17:51.590><c> the</c>

00:17:52.580 --> 00:17:52.590 align:start position:0%
obviously if I complete the original the
 

00:17:52.590 --> 00:17:55.880 align:start position:0%
obviously if I complete the original the
original<00:17:52.620><c> is</c><00:17:53.010><c> completed</c><00:17:53.460><c> now</c><00:17:53.580><c> and</c><00:17:54.710><c> the</c><00:17:55.710><c> copy</c>

00:17:55.880 --> 00:17:55.890 align:start position:0%
original is completed now and the copy
 

00:17:55.890 --> 00:17:57.770 align:start position:0%
original is completed now and the copy
is<00:17:56.190><c> completed</c><00:17:56.610><c> as</c><00:17:56.669><c> well</c><00:17:56.700><c> so</c><00:17:57.360><c> the</c><00:17:57.480><c> change</c><00:17:57.659><c> was</c>

00:17:57.770 --> 00:17:57.780 align:start position:0%
is completed as well so the change was
 

00:17:57.780 --> 00:17:59.779 align:start position:0%
is completed as well so the change was
propagated<00:17:58.380><c> for</c><00:17:58.770><c> the</c><00:17:58.860><c> client</c><00:17:59.130><c> to</c><00:17:59.220><c> react</c><00:17:59.490><c> so</c>

00:17:59.779 --> 00:17:59.789 align:start position:0%
propagated for the client to react so
 

00:17:59.789 --> 00:18:02.409 align:start position:0%
propagated for the client to react so
what<00:18:00.659><c> happens</c><00:18:00.929><c> if</c><00:18:01.020><c> I</c><00:18:01.080><c> do</c><00:18:01.140><c> added</c><00:18:01.380><c> a</c><00:18:01.470><c> very</c><00:18:01.770><c> round</c>

00:18:02.409 --> 00:18:02.419 align:start position:0%
what happens if I do added a very round
 

00:18:02.419 --> 00:18:05.659 align:start position:0%
what happens if I do added a very round
let's<00:18:03.419><c> reinitialize</c><00:18:04.020><c> CF</c><00:18:04.490><c> reinitialize</c><00:18:05.490><c> the</c>

00:18:05.659 --> 00:18:05.669 align:start position:0%
let's reinitialize CF reinitialize the
 

00:18:05.669 --> 00:18:09.680 align:start position:0%
let's reinitialize CF reinitialize the
copy<00:18:06.169><c> and</c><00:18:07.169><c> now</c><00:18:07.830><c> I'm</c><00:18:08.159><c> going</c><00:18:08.400><c> to</c><00:18:08.610><c> complete</c><00:18:09.570><c> the</c>

00:18:09.680 --> 00:18:09.690 align:start position:0%
copy and now I'm going to complete the
 

00:18:09.690 --> 00:18:18.340 align:start position:0%
copy and now I'm going to complete the
copy<00:18:09.900><c> here</c><00:18:14.120><c> and</c><00:18:15.169><c> copy</c><00:18:16.169><c> is</c><00:18:16.380><c> done</c><00:18:17.120><c> the</c><00:18:18.120><c> original</c>

00:18:18.340 --> 00:18:18.350 align:start position:0%
copy here and copy is done the original
 

00:18:18.350 --> 00:18:20.690 align:start position:0%
copy here and copy is done the original
didn't<00:18:19.350><c> change</c><00:18:19.559><c> so</c><00:18:19.830><c> it's</c><00:18:20.250><c> like</c><00:18:20.370><c> a</c><00:18:20.400><c> one-way</c>

00:18:20.690 --> 00:18:20.700 align:start position:0%
didn't change so it's like a one-way
 

00:18:20.700 --> 00:18:23.210 align:start position:0%
didn't change so it's like a one-way
synchronization<00:18:21.299><c> thing</c><00:18:21.480><c> and</c><00:18:22.049><c> that's</c><00:18:22.230><c> that's</c>

00:18:23.210 --> 00:18:23.220 align:start position:0%
synchronization thing and that's that's
 

00:18:23.220 --> 00:18:25.430 align:start position:0%
synchronization thing and that's that's
a<00:18:23.340><c> really</c><00:18:23.640><c> nice</c><00:18:23.760><c> feature</c><00:18:23.970><c> to</c><00:18:24.210><c> have</c><00:18:24.240><c> so</c><00:18:25.200><c> I</c><00:18:25.289><c> think</c>

00:18:25.430 --> 00:18:25.440 align:start position:0%
a really nice feature to have so I think
 

00:18:25.440 --> 00:18:28.640 align:start position:0%
a really nice feature to have so I think
it's<00:18:25.650><c> going</c><00:18:25.799><c> to</c><00:18:25.830><c> be</c><00:18:26.010><c> really</c><00:18:26.190><c> useful</c><00:18:27.620><c> so</c><00:18:28.620><c> I</c>

00:18:28.640 --> 00:18:28.650 align:start position:0%
it's going to be really useful so I
 

00:18:28.650 --> 00:18:31.010 align:start position:0%
it's going to be really useful so I
think<00:18:28.799><c> that's</c><00:18:29.039><c> enough</c><00:18:29.280><c> about</c><00:18:29.490><c> these</c><00:18:30.450><c> tiny</c>

00:18:31.010 --> 00:18:31.020 align:start position:0%
think that's enough about these tiny
 

00:18:31.020 --> 00:18:32.990 align:start position:0%
think that's enough about these tiny
additions<00:18:31.470><c> to</c><00:18:31.559><c> existing</c><00:18:31.650><c> api's</c><00:18:32.309><c> let's</c><00:18:32.850><c> have</c><00:18:32.970><c> a</c>

00:18:32.990 --> 00:18:33.000 align:start position:0%
additions to existing api's let's have a
 

00:18:33.000 --> 00:18:34.520 align:start position:0%
additions to existing api's let's have a
look<00:18:33.150><c> at</c><00:18:33.210><c> some</c><00:18:33.360><c> new</c><00:18:33.450><c> ideas</c><00:18:33.809><c> in</c><00:18:33.929><c> Java</c><00:18:34.110><c> 9</c><00:18:34.289><c> and</c><00:18:34.470><c> the</c>

00:18:34.520 --> 00:18:34.530 align:start position:0%
look at some new ideas in Java 9 and the
 

00:18:34.530 --> 00:18:36.610 align:start position:0%
look at some new ideas in Java 9 and the
first<00:18:34.740><c> one</c><00:18:34.890><c> on</c><00:18:34.980><c> the</c><00:18:35.130><c> list</c><00:18:35.340><c> is</c><00:18:35.669><c> stack</c><00:18:36.030><c> poker</c>

00:18:36.610 --> 00:18:36.620 align:start position:0%
first one on the list is stack poker
 

00:18:36.620 --> 00:18:40.520 align:start position:0%
first one on the list is stack poker
stuck<00:18:37.620><c> poker</c><00:18:38.070><c> gives</c><00:18:38.760><c> us</c><00:18:38.970><c> easy</c><00:18:39.210><c> lazy</c><00:18:40.110><c> and</c>

00:18:40.520 --> 00:18:40.530 align:start position:0%
stuck poker gives us easy lazy and
 

00:18:40.530 --> 00:18:42.350 align:start position:0%
stuck poker gives us easy lazy and
stream<00:18:40.980><c> friendly</c><00:18:41.370><c> access</c><00:18:41.730><c> to</c><00:18:41.940><c> stack</c><00:18:42.120><c> traces</c>

00:18:42.350 --> 00:18:42.360 align:start position:0%
stream friendly access to stack traces
 

00:18:42.360 --> 00:18:44.870 align:start position:0%
stream friendly access to stack traces
so<00:18:43.200><c> prior</c><00:18:43.440><c> to</c><00:18:43.470><c> Java</c><00:18:43.860><c> 9</c><00:18:44.070><c> I</c><00:18:44.309><c> could</c><00:18:44.490><c> do</c><00:18:44.580><c> something</c>

00:18:44.870 --> 00:18:44.880 align:start position:0%
so prior to Java 9 I could do something
 

00:18:44.880 --> 00:18:47.539 align:start position:0%
so prior to Java 9 I could do something
like<00:18:44.909><c> this</c><00:18:45.270><c> could</c><00:18:46.260><c> have</c><00:18:46.409><c> a</c><00:18:46.440><c> fröbel</c><00:18:47.039><c> and</c><00:18:47.280><c> call</c>

00:18:47.539 --> 00:18:47.549 align:start position:0%
like this could have a fröbel and call
 

00:18:47.549 --> 00:18:50.630 align:start position:0%
like this could have a fröbel and call
the<00:18:47.700><c> get</c><00:18:47.850><c> stack</c><00:18:48.090><c> trace</c><00:18:48.299><c> method</c><00:18:48.890><c> and</c><00:18:49.890><c> this</c>

00:18:50.630 --> 00:18:50.640 align:start position:0%
the get stack trace method and this
 

00:18:50.640 --> 00:18:52.640 align:start position:0%
the get stack trace method and this
gives<00:18:50.880><c> me</c><00:18:51.120><c> an</c><00:18:51.390><c> array</c><00:18:52.080><c> of</c><00:18:52.110><c> stack</c><00:18:52.500><c> trace</c>

00:18:52.640 --> 00:18:52.650 align:start position:0%
gives me an array of stack trace
 

00:18:52.650 --> 00:18:55.940 align:start position:0%
gives me an array of stack trace
elements<00:18:53.210><c> so</c><00:18:54.210><c> I</c><00:18:54.240><c> print</c><00:18:54.600><c> is</c><00:18:54.690><c> here</c><00:18:54.990><c> this</c><00:18:55.770><c> is</c><00:18:55.830><c> my</c>

00:18:55.940 --> 00:18:55.950 align:start position:0%
elements so I print is here this is my
 

00:18:55.950 --> 00:19:00.919 align:start position:0%
elements so I print is here this is my
stack<00:18:56.250><c> trace</c><00:18:56.460><c> at</c><00:18:57.000><c> this</c><00:18:57.210><c> point</c><00:18:57.419><c> in</c><00:18:57.480><c> time</c><00:18:59.929><c> there</c>

00:19:00.919 --> 00:19:00.929 align:start position:0%
stack trace at this point in time there
 

00:19:00.929 --> 00:19:03.169 align:start position:0%
stack trace at this point in time there
are<00:19:00.960><c> a</c><00:19:01.049><c> few</c><00:19:01.260><c> issues</c><00:19:01.350><c> with</c><00:19:01.679><c> this</c><00:19:01.850><c> issue</c><00:19:02.850><c> number</c>

00:19:03.169 --> 00:19:03.179 align:start position:0%
are a few issues with this issue number
 

00:19:03.179 --> 00:19:05.570 align:start position:0%
are a few issues with this issue number
one<00:19:03.330><c> this</c><00:19:03.539><c> is</c><00:19:03.600><c> pretty</c><00:19:03.870><c> expensive</c><00:19:04.549><c> it</c><00:19:05.549><c> doesn't</c>

00:19:05.570 --> 00:19:05.580 align:start position:0%
one this is pretty expensive it doesn't
 

00:19:05.580 --> 00:19:07.190 align:start position:0%
one this is pretty expensive it doesn't
matter<00:19:05.970><c> whether</c><00:19:06.090><c> I</c><00:19:06.179><c> only</c><00:19:06.510><c> the</c><00:19:06.720><c> first</c><00:19:06.929><c> few</c>

00:19:07.190 --> 00:19:07.200 align:start position:0%
matter whether I only the first few
 

00:19:07.200 --> 00:19:09.470 align:start position:0%
matter whether I only the first few
frames<00:19:07.440><c> or</c><00:19:08.309><c> the</c><00:19:08.460><c> first</c><00:19:08.909><c> few</c><00:19:09.030><c> elements</c><00:19:09.360><c> of</c><00:19:09.419><c> the</c>

00:19:09.470 --> 00:19:09.480 align:start position:0%
frames or the first few elements of the
 

00:19:09.480 --> 00:19:12.440 align:start position:0%
frames or the first few elements of the
stack<00:19:09.659><c> trace</c><00:19:09.750><c> the</c><00:19:10.530><c> JVM</c><00:19:10.919><c> always</c><00:19:11.400><c> need</c><00:19:11.610><c> to</c><00:19:11.789><c> needs</c>

00:19:12.440 --> 00:19:12.450 align:start position:0%
stack trace the JVM always need to needs
 

00:19:12.450 --> 00:19:15.770 align:start position:0%
stack trace the JVM always need to needs
to<00:19:12.720><c> eagerly</c><00:19:13.200><c> capture</c><00:19:13.650><c> the</c><00:19:13.770><c> whole</c><00:19:13.860><c> stack</c><00:19:14.780><c> there</c>

00:19:15.770 --> 00:19:15.780 align:start position:0%
to eagerly capture the whole stack there
 

00:19:15.780 --> 00:19:17.240 align:start position:0%
to eagerly capture the whole stack there
are<00:19:15.840><c> also</c><00:19:15.960><c> no</c><00:19:16.230><c> convenience</c><00:19:16.679><c> methods</c><00:19:16.980><c> account</c>

00:19:17.240 --> 00:19:17.250 align:start position:0%
are also no convenience methods account
 

00:19:17.250 --> 00:19:18.210 align:start position:0%
are also no convenience methods account
easily<00:19:17.669><c> filter</c>

00:19:18.210 --> 00:19:18.220 align:start position:0%
easily filter
 

00:19:18.220 --> 00:19:20.610 align:start position:0%
easily filter
out<00:19:18.490><c> I</c><00:19:18.850><c> can</c><00:19:19.360><c> easily</c><00:19:19.629><c> get</c><00:19:19.929><c> access</c><00:19:20.289><c> to</c><00:19:20.320><c> the</c>

00:19:20.610 --> 00:19:20.620 align:start position:0%
out I can easily get access to the
 

00:19:20.620 --> 00:19:22.440 align:start position:0%
out I can easily get access to the
actual<00:19:20.769><c> class</c><00:19:21.100><c> instances</c><00:19:21.669><c> of</c><00:19:21.879><c> the</c><00:19:22.090><c> classes</c>

00:19:22.440 --> 00:19:22.450 align:start position:0%
actual class instances of the classes
 

00:19:22.450 --> 00:19:25.259 align:start position:0%
actual class instances of the classes
that<00:19:22.659><c> declared</c><00:19:22.960><c> the</c><00:19:23.019><c> methods</c><00:19:23.320><c> and</c><00:19:24.029><c> on</c><00:19:25.029><c> top</c><00:19:25.179><c> of</c>

00:19:25.259 --> 00:19:25.269 align:start position:0%
that declared the methods and on top of
 

00:19:25.269 --> 00:19:26.700 align:start position:0%
that declared the methods and on top of
that<00:19:25.389><c> I</c><00:19:25.539><c> cannot</c><00:19:25.720><c> even</c><00:19:25.779><c> rely</c><00:19:26.200><c> on</c><00:19:26.230><c> this</c><00:19:26.500><c> stack</c>

00:19:26.700 --> 00:19:26.710 align:start position:0%
that I cannot even rely on this stack
 

00:19:26.710 --> 00:19:28.080 align:start position:0%
that I cannot even rely on this stack
trace<00:19:26.889><c> to</c><00:19:27.009><c> be</c><00:19:27.100><c> complete</c><00:19:27.429><c> the</c><00:19:27.669><c> specification</c>

00:19:28.080 --> 00:19:28.090 align:start position:0%
trace to be complete the specification
 

00:19:28.090 --> 00:19:30.480 align:start position:0%
trace to be complete the specification
says<00:19:28.450><c> that</c><00:19:28.899><c> JVM</c><00:19:29.259><c> can</c><00:19:29.440><c> omit</c><00:19:29.740><c> certain</c><00:19:29.919><c> elements</c>

00:19:30.480 --> 00:19:30.490 align:start position:0%
says that JVM can omit certain elements
 

00:19:30.490 --> 00:19:33.330 align:start position:0%
says that JVM can omit certain elements
if<00:19:30.610><c> it</c><00:19:30.700><c> helps</c><00:19:30.879><c> performance</c><00:19:31.980><c> thankfully</c><00:19:32.980><c> all</c>

00:19:33.330 --> 00:19:33.340 align:start position:0%
if it helps performance thankfully all
 

00:19:33.340 --> 00:19:35.159 align:start position:0%
if it helps performance thankfully all
these<00:19:33.549><c> disadvantages</c><00:19:34.210><c> are</c><00:19:34.480><c> addressed</c><00:19:34.840><c> in</c>

00:19:35.159 --> 00:19:35.169 align:start position:0%
these disadvantages are addressed in
 

00:19:35.169 --> 00:19:37.409 align:start position:0%
these disadvantages are addressed in
Java<00:19:35.409><c> 9</c><00:19:35.649><c> through</c><00:19:36.460><c> a</c><00:19:36.490><c> class</c><00:19:36.730><c> called</c><00:19:37.090><c> stack</c>

00:19:37.409 --> 00:19:37.419 align:start position:0%
Java 9 through a class called stack
 

00:19:37.419 --> 00:19:41.460 align:start position:0%
Java 9 through a class called stack
Walker<00:19:39.360><c> so</c><00:19:40.360><c> stuck</c><00:19:40.570><c> Walker</c><00:19:40.929><c> is</c><00:19:41.169><c> actually</c>

00:19:41.460 --> 00:19:41.470 align:start position:0%
Walker so stuck Walker is actually
 

00:19:41.470 --> 00:19:43.320 align:start position:0%
Walker so stuck Walker is actually
pretty<00:19:41.649><c> easy</c><00:19:41.769><c> to</c><00:19:41.919><c> use</c><00:19:42.220><c> you</c><00:19:42.700><c> can</c><00:19:42.879><c> just</c><00:19:42.909><c> obtain</c>

00:19:43.320 --> 00:19:43.330 align:start position:0%
pretty easy to use you can just obtain
 

00:19:43.330 --> 00:19:45.690 align:start position:0%
pretty easy to use you can just obtain
an<00:19:43.629><c> instance</c><00:19:43.990><c> here</c><00:19:44.350><c> and</c><00:19:44.529><c> the</c><00:19:45.279><c> main</c><00:19:45.429><c> method</c>

00:19:45.690 --> 00:19:45.700 align:start position:0%
an instance here and the main method
 

00:19:45.700 --> 00:19:48.810 align:start position:0%
an instance here and the main method
here<00:19:45.940><c> is</c><00:19:46.149><c> walk</c><00:19:46.450><c> that</c><00:19:47.440><c> allows</c><00:19:47.710><c> me</c><00:19:47.980><c> to</c><00:19:48.009><c> access</c>

00:19:48.810 --> 00:19:48.820 align:start position:0%
here is walk that allows me to access
 

00:19:48.820 --> 00:19:51.350 align:start position:0%
here is walk that allows me to access
deck<00:19:49.330><c> traces</c><00:19:49.720><c> as</c><00:19:49.899><c> streams</c><00:19:50.230><c> so</c><00:19:50.799><c> I</c><00:19:50.860><c> can</c><00:19:51.070><c> do</c>

00:19:51.350 --> 00:19:51.360 align:start position:0%
deck traces as streams so I can do
 

00:19:51.360 --> 00:19:55.340 align:start position:0%
deck traces as streams so I can do
something<00:19:52.360><c> like</c><00:19:52.659><c> this</c><00:19:52.899><c> I</c><00:19:53.379><c> can</c><00:19:53.950><c> collect</c><00:19:54.820><c> this</c>

00:19:55.340 --> 00:19:55.350 align:start position:0%
something like this I can collect this
 

00:19:55.350 --> 00:20:01.340 align:start position:0%
something like this I can collect this
stream<00:19:56.350><c> and</c><00:19:57.129><c> just</c><00:19:57.190><c> use</c><00:19:57.580><c> collectors</c><00:19:58.389><c> to</c><00:19:59.080><c> a</c><00:19:59.110><c> list</c>

00:20:01.340 --> 00:20:01.350 align:start position:0%
stream and just use collectors to a list
 

00:20:01.350 --> 00:20:04.440 align:start position:0%
stream and just use collectors to a list
and<00:20:02.350><c> this</c><00:20:03.190><c> gives</c><00:20:03.399><c> me</c><00:20:03.639><c> the</c><00:20:03.850><c> full</c><00:20:04.000><c> structure</c><00:20:04.240><c> is</c>

00:20:04.440 --> 00:20:04.450 align:start position:0%
and this gives me the full structure is
 

00:20:04.450 --> 00:20:05.759 align:start position:0%
and this gives me the full structure is
very<00:20:04.600><c> similar</c><00:20:04.809><c> to</c><00:20:04.929><c> the</c><00:20:05.110><c> one</c><00:20:05.230><c> that</c><00:20:05.259><c> we</c><00:20:05.470><c> got</c><00:20:05.500><c> from</c>

00:20:05.759 --> 00:20:05.769 align:start position:0%
very similar to the one that we got from
 

00:20:05.769 --> 00:20:08.369 align:start position:0%
very similar to the one that we got from
the<00:20:05.919><c> get</c><00:20:06.190><c> sectaries</c><00:20:06.580><c> method</c><00:20:06.929><c> however</c><00:20:07.929><c> in</c><00:20:08.259><c> this</c>

00:20:08.369 --> 00:20:08.379 align:start position:0%
the get sectaries method however in this
 

00:20:08.379 --> 00:20:09.930 align:start position:0%
the get sectaries method however in this
case<00:20:08.440><c> I</c><00:20:08.980><c> can</c><00:20:09.190><c> take</c><00:20:09.340><c> advantage</c><00:20:09.429><c> of</c><00:20:09.759><c> all</c><00:20:09.850><c> the</c>

00:20:09.930 --> 00:20:09.940 align:start position:0%
case I can take advantage of all the
 

00:20:09.940 --> 00:20:12.149 align:start position:0%
case I can take advantage of all the
stream<00:20:10.149><c> operations</c><00:20:10.690><c> so</c><00:20:11.320><c> if</c><00:20:11.740><c> I</c><00:20:11.860><c> was</c><00:20:12.039><c> only</c>

00:20:12.149 --> 00:20:12.159 align:start position:0%
stream operations so if I was only
 

00:20:12.159 --> 00:20:13.769 align:start position:0%
stream operations so if I was only
interested<00:20:12.370><c> in</c><00:20:12.669><c> stack</c><00:20:12.879><c> trace</c><00:20:13.059><c> of</c><00:20:13.179><c> that</c><00:20:13.360><c> tree</c>

00:20:13.769 --> 00:20:13.779 align:start position:0%
interested in stack trace of that tree
 

00:20:13.779 --> 00:20:17.600 align:start position:0%
interested in stack trace of that tree
for<00:20:14.049><c> example</c><00:20:14.080><c> I</c><00:20:14.649><c> could</c><00:20:14.830><c> just</c><00:20:15.100><c> do</c><00:20:15.250><c> a</c><00:20:15.490><c> limit</c><00:20:16.360><c> tree</c>

00:20:17.600 --> 00:20:17.610 align:start position:0%
for example I could just do a limit tree
 

00:20:17.610 --> 00:20:19.440 align:start position:0%
for example I could just do a limit tree
this<00:20:18.610><c> just</c><00:20:18.789><c> gives</c><00:20:18.970><c> me</c><00:20:19.120><c> the</c><00:20:19.240><c> top</c><00:20:19.419><c> three</c>

00:20:19.440 --> 00:20:19.450 align:start position:0%
this just gives me the top three
 

00:20:19.450 --> 00:20:21.960 align:start position:0%
this just gives me the top three
elements<00:20:20.169><c> of</c><00:20:20.230><c> the</c><00:20:20.320><c> stack</c><00:20:20.590><c> I</c><00:20:20.799><c> can</c><00:20:21.669><c> also</c><00:20:21.789><c> easily</c>

00:20:21.960 --> 00:20:21.970 align:start position:0%
elements of the stack I can also easily
 

00:20:21.970 --> 00:20:25.139 align:start position:0%
elements of the stack I can also easily
get<00:20:22.269><c> access</c><00:20:22.389><c> to</c><00:20:22.679><c> to</c><00:20:23.679><c> the</c><00:20:23.769><c> class</c><00:20:23.950><c> instances</c><00:20:24.519><c> you</c>

00:20:25.139 --> 00:20:25.149 align:start position:0%
get access to to the class instances you
 

00:20:25.149 --> 00:20:28.259 align:start position:0%
get access to to the class instances you
can<00:20:25.269><c> install</c><00:20:25.600><c> the</c><00:20:26.110><c> stack</c><00:20:26.320><c> driver</c><00:20:26.559><c> to</c><00:20:27.269><c> retain</c>

00:20:28.259 --> 00:20:28.269 align:start position:0%
can install the stack driver to retain
 

00:20:28.269 --> 00:20:32.519 align:start position:0%
can install the stack driver to retain
the<00:20:28.389><c> references</c><00:20:29.580><c> and</c><00:20:30.840><c> then</c><00:20:31.840><c> I'm</c><00:20:32.139><c> just</c><00:20:32.350><c> going</c>

00:20:32.519 --> 00:20:32.529 align:start position:0%
the references and then I'm just going
 

00:20:32.529 --> 00:20:35.430 align:start position:0%
the references and then I'm just going
to<00:20:32.620><c> remove</c><00:20:32.919><c> this</c><00:20:33.070><c> limit</c><00:20:33.399><c> here</c><00:20:34.049><c> I'm</c><00:20:35.049><c> gonna</c><00:20:35.289><c> use</c>

00:20:35.430 --> 00:20:35.440 align:start position:0%
to remove this limit here I'm gonna use
 

00:20:35.440 --> 00:20:38.279 align:start position:0%
to remove this limit here I'm gonna use
a<00:20:35.470><c> map</c><00:20:35.830><c> to</c><00:20:36.429><c> extract</c><00:20:36.789><c> this</c><00:20:36.850><c> information</c><00:20:37.289><c> so</c>

00:20:38.279 --> 00:20:38.289 align:start position:0%
a map to extract this information so
 

00:20:38.289 --> 00:20:40.320 align:start position:0%
a map to extract this information so
I'll<00:20:38.440><c> do</c><00:20:38.620><c> for</c><00:20:39.100><c> each</c><00:20:39.279><c> frame</c>

00:20:40.320 --> 00:20:40.330 align:start position:0%
I'll do for each frame
 

00:20:40.330 --> 00:20:45.299 align:start position:0%
I'll do for each frame
give<00:20:41.320><c> me</c><00:20:41.559><c> the</c><00:20:42.070><c> declaring</c><00:20:42.519><c> class</c><00:20:43.200><c> and</c><00:20:44.309><c> these</c>

00:20:45.299 --> 00:20:45.309 align:start position:0%
give me the declaring class and these
 

00:20:45.309 --> 00:20:47.249 align:start position:0%
give me the declaring class and these
are<00:20:45.490><c> all</c><00:20:45.730><c> the</c><00:20:45.879><c> classes</c><00:20:46.269><c> involving</c><00:20:46.990><c> a</c><00:20:47.080><c> stack</c>

00:20:47.249 --> 00:20:47.259 align:start position:0%
are all the classes involving a stack
 

00:20:47.259 --> 00:20:50.940 align:start position:0%
are all the classes involving a stack
trace<00:20:48.509><c> so</c><00:20:49.509><c> it's</c><00:20:49.629><c> really</c><00:20:49.750><c> nice</c><00:20:49.870><c> it's</c><00:20:50.289><c> it's</c><00:20:50.830><c> a</c>

00:20:50.940 --> 00:20:50.950 align:start position:0%
trace so it's really nice it's it's a
 

00:20:50.950 --> 00:20:54.080 align:start position:0%
trace so it's really nice it's it's a
great<00:20:51.159><c> convenience</c><00:20:52.090><c> API</c><00:20:52.360><c> to</c><00:20:52.480><c> have</c><00:20:52.809><c> in</c><00:20:53.320><c> Java</c>

00:20:54.080 --> 00:20:54.090 align:start position:0%
great convenience API to have in Java
 

00:20:54.090 --> 00:20:57.330 align:start position:0%
great convenience API to have in Java
another<00:20:55.090><c> API</c><00:20:55.360><c> I'm</c><00:20:56.080><c> really</c><00:20:56.409><c> excited</c><00:20:56.590><c> about</c><00:20:56.769><c> and</c>

00:20:57.330 --> 00:20:57.340 align:start position:0%
another API I'm really excited about and
 

00:20:57.340 --> 00:20:58.769 align:start position:0%
another API I'm really excited about and
I<00:20:57.549><c> think</c><00:20:57.730><c> it's</c><00:20:57.850><c> actually</c><00:20:57.970><c> probably</c><00:20:58.450><c> the</c><00:20:58.659><c> most</c>

00:20:58.769 --> 00:20:58.779 align:start position:0%
I think it's actually probably the most
 

00:20:58.779 --> 00:21:00.330 align:start position:0%
I think it's actually probably the most
underrated<00:20:59.080><c> feature</c><00:20:59.379><c> in</c><00:20:59.590><c> Java</c><00:20:59.799><c> 9</c><00:20:59.980><c> for</c><00:21:00.250><c> me</c>

00:21:00.330 --> 00:21:00.340 align:start position:0%
underrated feature in Java 9 for me
 

00:21:00.340 --> 00:21:03.480 align:start position:0%
underrated feature in Java 9 for me
personally<00:21:00.820><c> is</c><00:21:01.000><c> the</c><00:21:01.539><c> process</c><00:21:02.019><c> handle</c><00:21:02.289><c> API</c><00:21:02.529><c> so</c>

00:21:03.480 --> 00:21:03.490 align:start position:0%
personally is the process handle API so
 

00:21:03.490 --> 00:21:05.820 align:start position:0%
personally is the process handle API so
the<00:21:03.610><c> new</c><00:21:03.730><c> process</c><00:21:04.149><c> handle</c><00:21:04.419><c> API</c><00:21:04.720><c> allows</c><00:21:05.500><c> me</c><00:21:05.710><c> to</c>

00:21:05.820 --> 00:21:05.830 align:start position:0%
the new process handle API allows me to
 

00:21:05.830 --> 00:21:07.710 align:start position:0%
the new process handle API allows me to
easily<00:21:05.950><c> get</c><00:21:06.250><c> information</c><00:21:06.490><c> about</c><00:21:07.000><c> processes</c>

00:21:07.710 --> 00:21:07.720 align:start position:0%
easily get information about processes
 

00:21:07.720 --> 00:21:10.320 align:start position:0%
easily get information about processes
so<00:21:08.649><c> what</c><00:21:08.799><c> we</c><00:21:08.919><c> had</c><00:21:09.039><c> available</c><00:21:09.129><c> in</c><00:21:09.549><c> Java</c><00:21:09.789><c> prior</c>

00:21:10.320 --> 00:21:10.330 align:start position:0%
so what we had available in Java prior
 

00:21:10.330 --> 00:21:12.960 align:start position:0%
so what we had available in Java prior
to<00:21:10.509><c> Java</c><00:21:10.720><c> 9</c><00:21:10.929><c> since</c><00:21:11.230><c> gentleman</c><00:21:11.649><c> 5</c><00:21:11.830><c> actually</c><00:21:12.250><c> was</c>

00:21:12.960 --> 00:21:12.970 align:start position:0%
to Java 9 since gentleman 5 actually was
 

00:21:12.970 --> 00:21:14.639 align:start position:0%
to Java 9 since gentleman 5 actually was
the<00:21:13.149><c> process</c><00:21:13.360><c> builder</c><00:21:13.720><c> API</c><00:21:14.019><c> that</c><00:21:14.350><c> made</c><00:21:14.500><c> it</c>

00:21:14.639 --> 00:21:14.649 align:start position:0%
the process builder API that made it
 

00:21:14.649 --> 00:21:16.350 align:start position:0%
the process builder API that made it
really<00:21:14.679><c> easy</c><00:21:15.039><c> to</c><00:21:15.250><c> launch</c><00:21:15.519><c> external</c><00:21:15.909><c> processes</c>

00:21:16.350 --> 00:21:16.360 align:start position:0%
really easy to launch external processes
 

00:21:16.360 --> 00:21:18.529 align:start position:0%
really easy to launch external processes
so<00:21:16.809><c> I</c><00:21:16.840><c> could</c><00:21:17.049><c> do</c><00:21:17.139><c> something</c><00:21:17.350><c> like</c><00:21:17.470><c> this</c>

00:21:18.529 --> 00:21:18.539 align:start position:0%
so I could do something like this
 

00:21:18.539 --> 00:21:21.710 align:start position:0%
so I could do something like this
process<00:21:19.539><c> builder</c>

00:21:21.710 --> 00:21:21.720 align:start position:0%
process builder
 

00:21:21.720 --> 00:21:25.730 align:start position:0%
process builder
and<00:21:22.320><c> I</c><00:21:22.440><c> forgot</c><00:21:22.679><c> to</c><00:21:22.799><c> close</c><00:21:22.980><c> this</c><00:21:24.080><c> command</c><00:21:25.080><c> let's</c>

00:21:25.730 --> 00:21:25.740 align:start position:0%
and I forgot to close this command let's
 

00:21:25.740 --> 00:21:27.169 align:start position:0%
and I forgot to close this command let's
say<00:21:25.919><c> I</c><00:21:26.129><c> want</c><00:21:26.340><c> to</c><00:21:26.399><c> list</c><00:21:26.610><c> all</c><00:21:26.909><c> the</c><00:21:27.029><c> Java</c>

00:21:27.169 --> 00:21:27.179 align:start position:0%
say I want to list all the Java
 

00:21:27.179 --> 00:21:29.930 align:start position:0%
say I want to list all the Java
processes<00:21:27.659><c> in</c><00:21:27.779><c> my</c><00:21:27.870><c> system</c><00:21:28.519><c> it's</c><00:21:29.519><c> going</c><00:21:29.610><c> to</c><00:21:29.820><c> do</c>

00:21:29.930 --> 00:21:29.940 align:start position:0%
processes in my system it's going to do
 

00:21:29.940 --> 00:21:34.279 align:start position:0%
processes in my system it's going to do
JPS<00:21:31.129><c> start</c><00:21:32.129><c> and</c><00:21:32.460><c> this</c><00:21:33.240><c> starts</c><00:21:33.659><c> an</c><00:21:33.840><c> external</c>

00:21:34.279 --> 00:21:34.289 align:start position:0%
JPS start and this starts an external
 

00:21:34.289 --> 00:21:38.029 align:start position:0%
JPS start and this starts an external
process<00:21:34.710><c> JPS</c><00:21:35.840><c> now</c><00:21:36.840><c> the</c><00:21:37.259><c> main</c><00:21:37.409><c> limitation</c><00:21:37.919><c> of</c>

00:21:38.029 --> 00:21:38.039 align:start position:0%
process JPS now the main limitation of
 

00:21:38.039 --> 00:21:39.830 align:start position:0%
process JPS now the main limitation of
this<00:21:38.159><c> API</c><00:21:38.460><c> is</c><00:21:38.759><c> that</c><00:21:38.850><c> I</c><00:21:39.240><c> cannot</c><00:21:39.480><c> get</c><00:21:39.659><c> any</c>

00:21:39.830 --> 00:21:39.840 align:start position:0%
this API is that I cannot get any
 

00:21:39.840 --> 00:21:41.090 align:start position:0%
this API is that I cannot get any
information<00:21:40.080><c> about</c><00:21:40.350><c> the</c><00:21:40.590><c> process</c><00:21:40.919><c> even</c>

00:21:41.090 --> 00:21:41.100 align:start position:0%
information about the process even
 

00:21:41.100 --> 00:21:42.590 align:start position:0%
information about the process even
really<00:21:41.460><c> simple</c><00:21:41.730><c> things</c><00:21:41.909><c> such</c><00:21:42.120><c> as</c><00:21:42.240><c> the</c><00:21:42.360><c> PID</c>

00:21:42.590 --> 00:21:42.600 align:start position:0%
really simple things such as the PID
 

00:21:42.600 --> 00:21:44.450 align:start position:0%
really simple things such as the PID
that's<00:21:43.110><c> available</c><00:21:43.259><c> in</c><00:21:43.559><c> Java</c><00:21:43.740><c> 9</c><00:21:43.919><c> but</c><00:21:44.159><c> it</c><00:21:44.250><c> wasn't</c>

00:21:44.450 --> 00:21:44.460 align:start position:0%
that's available in Java 9 but it wasn't
 

00:21:44.460 --> 00:21:46.879 align:start position:0%
that's available in Java 9 but it wasn't
easy<00:21:44.549><c> to</c><00:21:44.700><c> access</c><00:21:44.940><c> before</c><00:21:45.090><c> the</c><00:21:45.330><c> dish</c><00:21:45.769><c> so</c><00:21:46.769><c> what</c>

00:21:46.879 --> 00:21:46.889 align:start position:0%
easy to access before the dish so what
 

00:21:46.889 --> 00:21:49.039 align:start position:0%
easy to access before the dish so what
people<00:21:47.100><c> ended</c><00:21:47.279><c> up</c><00:21:47.370><c> doing</c><00:21:47.610><c> is</c><00:21:47.940><c> either</c><00:21:48.629><c> using</c>

00:21:49.039 --> 00:21:49.049 align:start position:0%
people ended up doing is either using
 

00:21:49.049 --> 00:21:51.110 align:start position:0%
people ended up doing is either using
jmx<00:21:49.440><c> which</c><00:21:49.889><c> is</c><00:21:50.009><c> really</c><00:21:50.220><c> hacky</c><00:21:50.519><c> or</c><00:21:50.820><c> they</c><00:21:51.000><c> would</c>

00:21:51.110 --> 00:21:51.120 align:start position:0%
jmx which is really hacky or they would
 

00:21:51.120 --> 00:21:52.879 align:start position:0%
jmx which is really hacky or they would
write<00:21:51.360><c> their</c><00:21:51.600><c> own</c><00:21:51.690><c> tools</c><00:21:52.019><c> so</c><00:21:52.409><c> typically</c><00:21:52.740><c> you</c>

00:21:52.879 --> 00:21:52.889 align:start position:0%
write their own tools so typically you
 

00:21:52.889 --> 00:21:54.560 align:start position:0%
write their own tools so typically you
would<00:21:52.980><c> call</c><00:21:53.159><c> something</c><00:21:53.460><c> like</c><00:21:53.580><c> a</c><00:21:53.610><c> PS</c><00:21:53.940><c> and</c><00:21:54.330><c> grab</c>

00:21:54.560 --> 00:21:54.570 align:start position:0%
would call something like a PS and grab
 

00:21:54.570 --> 00:21:55.909 align:start position:0%
would call something like a PS and grab
and<00:21:54.870><c> it</c><00:21:55.169><c> would</c><00:21:55.259><c> essentially</c><00:21:55.559><c> obtain</c>

00:21:55.909 --> 00:21:55.919 align:start position:0%
and it would essentially obtain
 

00:21:55.919 --> 00:21:57.499 align:start position:0%
and it would essentially obtain
information<00:21:56.129><c> about</c><00:21:56.399><c> the</c><00:21:56.580><c> process</c><00:21:56.940><c> from</c><00:21:57.299><c> the</c>

00:21:57.499 --> 00:21:57.509 align:start position:0%
information about the process from the
 

00:21:57.509 --> 00:22:00.019 align:start position:0%
information about the process from the
outside<00:21:57.870><c> which</c><00:21:58.860><c> is</c><00:21:59.039><c> just</c><00:21:59.669><c> really</c><00:21:59.789><c> unnecessary</c>

00:22:00.019 --> 00:22:00.029 align:start position:0%
outside which is just really unnecessary
 

00:22:00.029 --> 00:22:02.810 align:start position:0%
outside which is just really unnecessary
tedious<00:22:00.809><c> to</c><00:22:00.929><c> write</c><00:22:01.139><c> not</c><00:22:01.980><c> to</c><00:22:02.070><c> mention</c><00:22:02.220><c> all</c><00:22:02.759><c> the</c>

00:22:02.810 --> 00:22:02.820 align:start position:0%
tedious to write not to mention all the
 

00:22:02.820 --> 00:22:04.850 align:start position:0%
tedious to write not to mention all the
portability<00:22:03.480><c> issues</c><00:22:03.539><c> so</c><00:22:04.440><c> it's</c><00:22:04.559><c> really</c><00:22:04.679><c> great</c>

00:22:04.850 --> 00:22:04.860 align:start position:0%
portability issues so it's really great
 

00:22:04.860 --> 00:22:07.249 align:start position:0%
portability issues so it's really great
to<00:22:04.950><c> see</c><00:22:05.220><c> this</c><00:22:05.340><c> finally</c><00:22:06.240><c> resolved</c><00:22:06.840><c> as</c><00:22:06.960><c> part</c><00:22:07.169><c> of</c>

00:22:07.249 --> 00:22:07.259 align:start position:0%
to see this finally resolved as part of
 

00:22:07.259 --> 00:22:11.269 align:start position:0%
to see this finally resolved as part of
the<00:22:07.350><c> JDK</c><00:22:08.179><c> so</c><00:22:09.179><c> JDK</c><00:22:09.600><c> 9</c><00:22:09.840><c> provides</c><00:22:10.740><c> an</c><00:22:10.860><c> interface</c>

00:22:11.269 --> 00:22:11.279 align:start position:0%
the JDK so JDK 9 provides an interface
 

00:22:11.279 --> 00:22:13.639 align:start position:0%
the JDK so JDK 9 provides an interface
called<00:22:11.490><c> process</c><00:22:11.940><c> handle</c><00:22:12.360><c> which</c><00:22:13.139><c> allows</c><00:22:13.169><c> me</c><00:22:13.620><c> to</c>

00:22:13.639 --> 00:22:13.649 align:start position:0%
called process handle which allows me to
 

00:22:13.649 --> 00:22:17.450 align:start position:0%
called process handle which allows me to
get<00:22:13.980><c> all</c><00:22:14.429><c> sorts</c><00:22:14.970><c> of</c><00:22:15.029><c> information</c><00:22:15.230><c> about</c><00:22:16.460><c> the</c>

00:22:17.450 --> 00:22:17.460 align:start position:0%
get all sorts of information about the
 

00:22:17.460 --> 00:22:19.009 align:start position:0%
get all sorts of information about the
actual<00:22:17.639><c> process</c><00:22:17.850><c> so</c><00:22:18.120><c> I</c><00:22:18.210><c> can</c><00:22:18.330><c> obtain</c><00:22:18.450><c> a</c><00:22:18.570><c> handle</c>

00:22:19.009 --> 00:22:19.019 align:start position:0%
actual process so I can obtain a handle
 

00:22:19.019 --> 00:22:22.460 align:start position:0%
actual process so I can obtain a handle
to<00:22:19.710><c> my</c><00:22:19.830><c> current</c><00:22:20.100><c> process</c><00:22:20.549><c> and</c><00:22:21.080><c> there</c><00:22:22.080><c> I</c><00:22:22.110><c> can</c>

00:22:22.460 --> 00:22:22.470 align:start position:0%
to my current process and there I can
 

00:22:22.470 --> 00:22:26.529 align:start position:0%
to my current process and there I can
easily<00:22:22.799><c> extract</c><00:22:22.950><c> the</c><00:22:23.759><c> PID</c><00:22:24.470><c> just</c><00:22:25.470><c> like</c><00:22:25.590><c> this</c><00:22:25.799><c> I</c>

00:22:26.529 --> 00:22:26.539 align:start position:0%
easily extract the PID just like this I
 

00:22:26.539 --> 00:22:29.060 align:start position:0%
easily extract the PID just like this I
can<00:22:27.539><c> also</c><00:22:27.659><c> get</c><00:22:27.840><c> access</c><00:22:27.960><c> to</c><00:22:28.139><c> all</c><00:22:28.740><c> sorts</c><00:22:29.039><c> of</c>

00:22:29.060 --> 00:22:29.070 align:start position:0%
can also get access to all sorts of
 

00:22:29.070 --> 00:22:30.529 align:start position:0%
can also get access to all sorts of
other<00:22:29.129><c> information</c><00:22:29.460><c> through</c><00:22:30.210><c> the</c><00:22:30.299><c> info</c>

00:22:30.529 --> 00:22:30.539 align:start position:0%
other information through the info
 

00:22:30.539 --> 00:22:33.320 align:start position:0%
other information through the info
interface<00:22:31.190><c> you</c><00:22:32.190><c> can</c><00:22:32.309><c> see</c><00:22:32.519><c> this</c><00:22:32.879><c> gives</c><00:22:33.090><c> me</c>

00:22:33.320 --> 00:22:33.330 align:start position:0%
interface you can see this gives me
 

00:22:33.330 --> 00:22:36.169 align:start position:0%
interface you can see this gives me
quite<00:22:33.990><c> a</c><00:22:34.049><c> few</c><00:22:34.200><c> things</c><00:22:34.350><c> and</c><00:22:34.970><c> there's</c><00:22:35.970><c> kind</c><00:22:36.090><c> of</c>

00:22:36.169 --> 00:22:36.179 align:start position:0%
quite a few things and there's kind of
 

00:22:36.179 --> 00:22:38.149 align:start position:0%
quite a few things and there's kind of
convenience<00:22:36.600><c> methods</c><00:22:36.899><c> for</c><00:22:37.019><c> everything</c><00:22:37.409><c> so</c><00:22:37.769><c> I</c>

00:22:38.149 --> 00:22:38.159 align:start position:0%
convenience methods for everything so I
 

00:22:38.159 --> 00:22:40.009 align:start position:0%
convenience methods for everything so I
think<00:22:38.370><c> once</c><00:22:38.850><c> that</c><00:22:39.029><c> it's</c><00:22:39.419><c> going</c><00:22:39.570><c> to</c><00:22:39.750><c> be</c><00:22:39.870><c> used</c>

00:22:40.009 --> 00:22:40.019 align:start position:0%
think once that it's going to be used
 

00:22:40.019 --> 00:22:43.310 align:start position:0%
think once that it's going to be used
pretty<00:22:40.139><c> frequently</c><00:22:41.000><c> it's</c><00:22:42.000><c> common</c><00:22:42.360><c> line</c><00:22:42.539><c> which</c>

00:22:43.310 --> 00:22:43.320 align:start position:0%
pretty frequently it's common line which
 

00:22:43.320 --> 00:22:45.049 align:start position:0%
pretty frequently it's common line which
essentially<00:22:43.679><c> tells</c><00:22:44.039><c> you</c><00:22:44.190><c> how</c><00:22:44.519><c> your</c><00:22:44.730><c> java</c>

00:22:45.049 --> 00:22:45.059 align:start position:0%
essentially tells you how your java
 

00:22:45.059 --> 00:22:46.879 align:start position:0%
essentially tells you how your java
application<00:22:45.570><c> was</c><00:22:45.720><c> launched</c><00:22:46.049><c> so</c><00:22:46.649><c> it's</c><00:22:46.799><c> the</c>

00:22:46.879 --> 00:22:46.889 align:start position:0%
application was launched so it's the
 

00:22:46.889 --> 00:22:48.649 align:start position:0%
application was launched so it's the
full<00:22:47.070><c> full</c><00:22:47.639><c> Java</c><00:22:47.820><c> command</c><00:22:48.090><c> all</c><00:22:48.330><c> the</c><00:22:48.360><c> arguments</c>

00:22:48.649 --> 00:22:48.659 align:start position:0%
full full Java command all the arguments
 

00:22:48.659 --> 00:22:52.299 align:start position:0%
full full Java command all the arguments
everything<00:22:50.059><c> so</c><00:22:51.059><c> that's</c><00:22:51.210><c> really</c><00:22:51.330><c> useful</c><00:22:51.480><c> you</c>

00:22:52.299 --> 00:22:52.309 align:start position:0%
everything so that's really useful you
 

00:22:52.309 --> 00:22:55.700 align:start position:0%
everything so that's really useful you
can<00:22:53.309><c> also</c><00:22:53.580><c> get</c><00:22:54.570><c> information</c><00:22:54.720><c> about</c><00:22:55.500><c> other</c>

00:22:55.700 --> 00:22:55.710 align:start position:0%
can also get information about other
 

00:22:55.710 --> 00:23:01.639 align:start position:0%
can also get information about other
processes<00:22:56.220><c> in</c><00:22:56.309><c> your</c><00:22:56.340><c> system</c><00:22:56.789><c> so</c><00:22:57.659><c> I</c><00:22:57.690><c> can</c><00:22:57.809><c> do</c><00:23:00.649><c> can</c>

00:23:01.639 --> 00:23:01.649 align:start position:0%
processes in your system so I can do can
 

00:23:01.649 --> 00:23:04.669 align:start position:0%
processes in your system so I can do can
do<00:23:01.799><c> something</c><00:23:02.220><c> like</c><00:23:02.250><c> process</c><00:23:03.149><c> handle</c><00:23:03.679><c> all</c>

00:23:04.669 --> 00:23:04.679 align:start position:0%
do something like process handle all
 

00:23:04.679 --> 00:23:06.860 align:start position:0%
do something like process handle all
processes<00:23:05.309><c> which</c><00:23:05.909><c> gives</c><00:23:06.179><c> me</c><00:23:06.330><c> a</c><00:23:06.360><c> stream</c><00:23:06.600><c> and</c>

00:23:06.860 --> 00:23:06.870 align:start position:0%
processes which gives me a stream and
 

00:23:06.870 --> 00:23:09.379 align:start position:0%
processes which gives me a stream and
then<00:23:07.710><c> I</c><00:23:07.799><c> can</c><00:23:08.129><c> extract</c><00:23:08.580><c> some</c><00:23:08.669><c> information</c><00:23:09.269><c> from</c>

00:23:09.379 --> 00:23:09.389 align:start position:0%
then I can extract some information from
 

00:23:09.389 --> 00:23:14.320 align:start position:0%
then I can extract some information from
this<00:23:09.659><c> let's</c><00:23:10.470><c> say</c><00:23:11.000><c> for</c><00:23:12.000><c> each</c><00:23:12.149><c> process</c><00:23:12.809><c> give</c><00:23:13.740><c> me</c>

00:23:14.320 --> 00:23:14.330 align:start position:0%
this let's say for each process give me
 

00:23:14.330 --> 00:23:18.019 align:start position:0%
this let's say for each process give me
info<00:23:15.330><c> and</c><00:23:15.690><c> then</c><00:23:15.990><c> the</c><00:23:16.110><c> command</c><00:23:16.440><c> and</c><00:23:17.370><c> then</c><00:23:17.879><c> I'm</c>

00:23:18.019 --> 00:23:18.029 align:start position:0%
info and then the command and then I'm
 

00:23:18.029 --> 00:23:24.260 align:start position:0%
info and then the command and then I'm
just<00:23:18.149><c> going</c><00:23:18.389><c> to</c><00:23:18.570><c> collect</c><00:23:18.870><c> this</c>

00:23:24.260 --> 00:23:24.270 align:start position:0%
 
 

00:23:24.270 --> 00:23:27.090 align:start position:0%
 
and<00:23:25.270><c> this</c><00:23:26.050><c> gives</c><00:23:26.230><c> me</c><00:23:26.470><c> all</c><00:23:26.680><c> the</c><00:23:26.710><c> commands</c>

00:23:27.090 --> 00:23:27.100 align:start position:0%
and this gives me all the commands
 

00:23:27.100 --> 00:23:30.450 align:start position:0%
and this gives me all the commands
running<00:23:27.370><c> in</c><00:23:27.460><c> my</c><00:23:27.550><c> system</c><00:23:28.800><c> another</c><00:23:29.800><c> really</c>

00:23:30.450 --> 00:23:30.460 align:start position:0%
running in my system another really
 

00:23:30.460 --> 00:23:32.310 align:start position:0%
running in my system another really
useful<00:23:30.580><c> part</c><00:23:31.030><c> of</c><00:23:31.120><c> this</c><00:23:31.510><c> API</c><00:23:31.810><c> that's</c><00:23:32.050><c> new</c><00:23:32.230><c> in</c>

00:23:32.310 --> 00:23:32.320 align:start position:0%
useful part of this API that's new in
 

00:23:32.320 --> 00:23:35.640 align:start position:0%
useful part of this API that's new in
Java<00:23:32.500><c> 9</c><00:23:32.740><c> is</c><00:23:33.240><c> method</c><00:23:34.240><c> on</c><00:23:34.390><c> exit</c><00:23:34.750><c> which</c><00:23:35.350><c> allows</c>

00:23:35.640 --> 00:23:35.650 align:start position:0%
Java 9 is method on exit which allows
 

00:23:35.650 --> 00:23:37.980 align:start position:0%
Java 9 is method on exit which allows
you<00:23:35.860><c> to</c><00:23:36.270><c> essentially</c><00:23:37.270><c> trigger</c><00:23:37.600><c> an</c><00:23:37.840><c> action</c>

00:23:37.980 --> 00:23:37.990 align:start position:0%
you to essentially trigger an action
 

00:23:37.990 --> 00:23:40.530 align:start position:0%
you to essentially trigger an action
when<00:23:38.320><c> an</c><00:23:38.410><c> external</c><00:23:38.620><c> process</c><00:23:39.070><c> completes</c><00:23:39.540><c> and</c>

00:23:40.530 --> 00:23:40.540 align:start position:0%
when an external process completes and
 

00:23:40.540 --> 00:23:42.480 align:start position:0%
when an external process completes and
that's<00:23:40.780><c> that's</c><00:23:41.440><c> really</c><00:23:41.620><c> useful</c><00:23:42.010><c> so</c><00:23:42.160><c> let's</c><00:23:42.190><c> try</c>

00:23:42.480 --> 00:23:42.490 align:start position:0%
that's that's really useful so let's try
 

00:23:42.490 --> 00:23:45.750 align:start position:0%
that's that's really useful so let's try
something<00:23:42.700><c> here</c><00:23:43.200><c> I'm</c><00:23:44.200><c> just</c><00:23:44.380><c> going</c><00:23:44.590><c> to</c><00:23:44.760><c> create</c>

00:23:45.750 --> 00:23:45.760 align:start position:0%
something here I'm just going to create
 

00:23:45.760 --> 00:23:49.700 align:start position:0%
something here I'm just going to create
a<00:23:45.940><c> process</c><00:23:46.240><c> that</c><00:23:46.660><c> has</c><00:23:47.070><c> predictable</c><00:23:48.070><c> run</c><00:23:48.400><c> time</c>

00:23:49.700 --> 00:23:49.710 align:start position:0%
a process that has predictable run time
 

00:23:49.710 --> 00:23:54.450 align:start position:0%
a process that has predictable run time
so<00:23:50.710><c> let's</c><00:23:51.040><c> call</c><00:23:52.320><c> let's</c><00:23:53.320><c> go</c><00:23:53.470><c> sleep</c><00:23:53.740><c> for</c><00:23:54.070><c> example</c>

00:23:54.450 --> 00:23:54.460 align:start position:0%
so let's call let's go sleep for example
 

00:23:54.460 --> 00:23:58.190 align:start position:0%
so let's call let's go sleep for example
I'm<00:23:55.300><c> going</c><00:23:55.510><c> to</c><00:23:55.600><c> tell</c><00:23:55.870><c> it</c><00:23:55.900><c> sleep</c><00:23:56.680><c> for</c><00:23:56.950><c> 3</c><00:23:57.790><c> seconds</c>

00:23:58.190 --> 00:23:58.200 align:start position:0%
I'm going to tell it sleep for 3 seconds
 

00:23:58.200 --> 00:24:00.600 align:start position:0%
I'm going to tell it sleep for 3 seconds
and<00:23:59.200><c> I</c><00:23:59.320><c> can</c><00:23:59.500><c> just</c><00:23:59.620><c> start</c><00:23:59.740><c> the</c><00:23:59.950><c> process</c><00:24:00.340><c> and</c>

00:24:00.600 --> 00:24:00.610 align:start position:0%
and I can just start the process and
 

00:24:00.610 --> 00:24:03.080 align:start position:0%
and I can just start the process and
immediately<00:24:01.420><c> obtain</c><00:24:01.870><c> the</c><00:24:02.380><c> handle</c><00:24:02.680><c> to</c><00:24:02.800><c> it</c>

00:24:03.080 --> 00:24:03.090 align:start position:0%
immediately obtain the handle to it
 

00:24:03.090 --> 00:24:05.520 align:start position:0%
immediately obtain the handle to it
and<00:24:04.090><c> then</c><00:24:04.240><c> I</c><00:24:04.330><c> can</c><00:24:04.510><c> call</c><00:24:04.720><c> the</c><00:24:04.870><c> method</c><00:24:04.960><c> on</c><00:24:05.170><c> exit</c>

00:24:05.520 --> 00:24:05.530 align:start position:0%
and then I can call the method on exit
 

00:24:05.530 --> 00:24:08.070 align:start position:0%
and then I can call the method on exit
which<00:24:06.190><c> gives</c><00:24:06.430><c> me</c><00:24:06.640><c> the</c><00:24:07.180><c> completable</c><00:24:07.720><c> future</c>

00:24:08.070 --> 00:24:08.080 align:start position:0%
which gives me the completable future
 

00:24:08.080 --> 00:24:10.590 align:start position:0%
which gives me the completable future
and<00:24:08.490><c> we've</c><00:24:09.490><c> seen</c><00:24:09.640><c> the</c><00:24:09.760><c> API</c><00:24:10.030><c> for</c><00:24:10.120><c> computable</c>

00:24:10.590 --> 00:24:10.600 align:start position:0%
and we've seen the API for computable
 

00:24:10.600 --> 00:24:13.020 align:start position:0%
and we've seen the API for computable
futures<00:24:10.960><c> I</c><00:24:11.200><c> can</c><00:24:11.380><c> easily</c><00:24:12.070><c> just</c><00:24:12.310><c> do</c><00:24:12.640><c> something</c>

00:24:13.020 --> 00:24:13.030 align:start position:0%
futures I can easily just do something
 

00:24:13.030 --> 00:24:16.710 align:start position:0%
futures I can easily just do something
like<00:24:13.150><c> then</c><00:24:13.570><c> accept</c><00:24:14.170><c> and</c><00:24:15.120><c> there</c><00:24:16.120><c> I</c><00:24:16.390><c> will</c><00:24:16.690><c> just</c>

00:24:16.710 --> 00:24:16.720 align:start position:0%
like then accept and there I will just
 

00:24:16.720 --> 00:24:20.790 align:start position:0%
like then accept and there I will just
print<00:24:17.230><c> I</c><00:24:18.870><c> can</c><00:24:19.870><c> just</c><00:24:20.050><c> print</c><00:24:20.230><c> the</c><00:24:20.410><c> whole</c><00:24:20.500><c> process</c>

00:24:20.790 --> 00:24:20.800 align:start position:0%
print I can just print the whole process
 

00:24:20.800 --> 00:24:22.440 align:start position:0%
print I can just print the whole process
handle<00:24:21.130><c> actually</c><00:24:21.220><c> so</c><00:24:21.910><c> the</c><00:24:22.060><c> two</c><00:24:22.180><c> string</c>

00:24:22.440 --> 00:24:22.450 align:start position:0%
handle actually so the two string
 

00:24:22.450 --> 00:24:24.870 align:start position:0%
handle actually so the two string
they're<00:24:22.660><c> essentially</c><00:24:23.290><c> prints</c><00:24:23.470><c> the</c><00:24:23.590><c> PID</c><00:24:23.880><c> so</c>

00:24:24.870 --> 00:24:24.880 align:start position:0%
they're essentially prints the PID so
 

00:24:24.880 --> 00:24:26.310 align:start position:0%
they're essentially prints the PID so
just<00:24:25.060><c> to</c><00:24:25.150><c> recap</c><00:24:25.480><c> what</c><00:24:25.660><c> I'm</c><00:24:25.840><c> expecting</c><00:24:26.050><c> to</c>

00:24:26.310 --> 00:24:26.320 align:start position:0%
just to recap what I'm expecting to
 

00:24:26.320 --> 00:24:28.800 align:start position:0%
just to recap what I'm expecting to
happen<00:24:26.440><c> here</c><00:24:26.830><c> is</c><00:24:26.950><c> a</c><00:24:27.700><c> process</c><00:24:28.090><c> starts</c><00:24:28.630><c> a</c>

00:24:28.800 --> 00:24:28.810 align:start position:0%
happen here is a process starts a
 

00:24:28.810 --> 00:24:30.780 align:start position:0%
happen here is a process starts a
synchronously<00:24:29.470><c> and</c><00:24:29.740><c> then</c><00:24:30.160><c> three</c><00:24:30.460><c> seconds</c>

00:24:30.780 --> 00:24:30.790 align:start position:0%
synchronously and then three seconds
 

00:24:30.790 --> 00:24:33.210 align:start position:0%
synchronously and then three seconds
later<00:24:30.910><c> I'm</c><00:24:31.540><c> going</c><00:24:31.930><c> to</c><00:24:32.110><c> see</c><00:24:32.260><c> the</c><00:24:32.410><c> PID</c><00:24:32.590><c> of</c><00:24:33.010><c> the</c>

00:24:33.210 --> 00:24:33.220 align:start position:0%
later I'm going to see the PID of the
 

00:24:33.220 --> 00:24:36.630 align:start position:0%
later I'm going to see the PID of the
now-deceased<00:24:33.820><c> process</c><00:24:35.190><c> straight</c><00:24:36.190><c> it's</c><00:24:36.340><c> here</c>

00:24:36.630 --> 00:24:36.640 align:start position:0%
now-deceased process straight it's here
 

00:24:36.640 --> 00:24:40.440 align:start position:0%
now-deceased process straight it's here
process<00:24:37.630><c> started</c><00:24:38.010><c> and</c><00:24:39.010><c> now</c><00:24:39.760><c> I</c><00:24:40.060><c> can</c><00:24:40.300><c> see</c><00:24:40.420><c> the</c>

00:24:40.440 --> 00:24:40.450 align:start position:0%
process started and now I can see the
 

00:24:40.450 --> 00:24:43.440 align:start position:0%
process started and now I can see the
PID<00:24:40.800><c> so</c><00:24:41.800><c> that's</c><00:24:41.950><c> really</c><00:24:42.130><c> useful</c><00:24:42.310><c> and</c><00:24:42.850><c> I</c><00:24:43.270><c> also</c>

00:24:43.440 --> 00:24:43.450 align:start position:0%
PID so that's really useful and I also
 

00:24:43.450 --> 00:24:45.780 align:start position:0%
PID so that's really useful and I also
don't<00:24:43.660><c> need</c><00:24:43.780><c> to</c><00:24:43.990><c> limit</c><00:24:44.260><c> myself</c><00:24:44.410><c> to</c><00:24:44.790><c> managing</c>

00:24:45.780 --> 00:24:45.790 align:start position:0%
don't need to limit myself to managing
 

00:24:45.790 --> 00:24:48.630 align:start position:0%
don't need to limit myself to managing
individual<00:24:46.300><c> processes</c><00:24:46.780><c> I</c><00:24:47.740><c> can</c><00:24:48.370><c> build</c><00:24:48.550><c> the</c>

00:24:48.630 --> 00:24:48.640 align:start position:0%
individual processes I can build the
 

00:24:48.640 --> 00:24:50.760 align:start position:0%
individual processes I can build the
whole<00:24:48.760><c> pipelines</c><00:24:49.240><c> in</c><00:24:50.110><c> the</c><00:24:50.230><c> sense</c><00:24:50.410><c> of</c><00:24:50.470><c> UNIX</c>

00:24:50.760 --> 00:24:50.770 align:start position:0%
whole pipelines in the sense of UNIX
 

00:24:50.770 --> 00:24:52.640 align:start position:0%
whole pipelines in the sense of UNIX
pipelines<00:24:51.160><c> so</c><00:24:51.340><c> I</c><00:24:51.520><c> can</c><00:24:51.640><c> express</c><00:24:51.910><c> things</c><00:24:52.180><c> like</c>

00:24:52.640 --> 00:24:52.650 align:start position:0%
pipelines so I can express things like
 

00:24:52.650 --> 00:24:54.990 align:start position:0%
pipelines so I can express things like
take<00:24:53.650><c> the</c><00:24:53.770><c> output</c><00:24:54.070><c> of</c><00:24:54.100><c> this</c><00:24:54.280><c> first</c><00:24:54.640><c> process</c>

00:24:54.990 --> 00:24:55.000 align:start position:0%
take the output of this first process
 

00:24:55.000 --> 00:24:56.310 align:start position:0%
take the output of this first process
and<00:24:55.210><c> connect</c><00:24:55.420><c> it</c><00:24:55.510><c> to</c><00:24:55.540><c> the</c><00:24:55.690><c> input</c><00:24:55.810><c> of</c><00:24:55.960><c> the</c><00:24:56.050><c> next</c>

00:24:56.310 --> 00:24:56.320 align:start position:0%
and connect it to the input of the next
 

00:24:56.320 --> 00:24:58.290 align:start position:0%
and connect it to the input of the next
process<00:24:56.670><c> let's</c><00:24:57.670><c> just</c><00:24:57.850><c> demonstrate</c><00:24:57.910><c> this</c>

00:24:58.290 --> 00:24:58.300 align:start position:0%
process let's just demonstrate this
 

00:24:58.300 --> 00:25:01.470 align:start position:0%
process let's just demonstrate this
really<00:24:58.570><c> quickly</c><00:24:59.610><c> let's</c><00:25:00.610><c> say</c><00:25:00.820><c> I'm</c><00:25:01.000><c> gonna</c><00:25:01.180><c> last</c>

00:25:01.470 --> 00:25:01.480 align:start position:0%
really quickly let's say I'm gonna last
 

00:25:01.480 --> 00:25:04.620 align:start position:0%
really quickly let's say I'm gonna last
all<00:25:02.110><c> my</c><00:25:02.530><c> java</c><00:25:02.950><c> processes</c><00:25:03.460><c> and</c><00:25:03.730><c> then</c><00:25:04.360><c> wrapped</c>

00:25:04.620 --> 00:25:04.630 align:start position:0%
all my java processes and then wrapped
 

00:25:04.630 --> 00:25:07.050 align:start position:0%
all my java processes and then wrapped
for<00:25:04.870><c> J</c><00:25:05.020><c> shell</c><00:25:05.230><c> which</c><00:25:06.220><c> obviously</c><00:25:06.670><c> should</c><00:25:06.850><c> be</c>

00:25:07.050 --> 00:25:07.060 align:start position:0%
for J shell which obviously should be
 

00:25:07.060 --> 00:25:09.360 align:start position:0%
for J shell which obviously should be
running<00:25:07.210><c> at</c><00:25:07.360><c> this</c><00:25:07.450><c> point</c><00:25:07.890><c> so</c><00:25:08.890><c> I</c><00:25:08.950><c> can</c><00:25:09.010><c> get</c><00:25:09.250><c> us</c>

00:25:09.360 --> 00:25:09.370 align:start position:0%
running at this point so I can get us
 

00:25:09.370 --> 00:25:13.740 align:start position:0%
running at this point so I can get us
create<00:25:09.730><c> a</c><00:25:09.760><c> process</c><00:25:10.060><c> builder</c><00:25:10.570><c> here</c><00:25:11.940><c> and</c><00:25:12.940><c> to</c><00:25:13.630><c> use</c>

00:25:13.740 --> 00:25:13.750 align:start position:0%
create a process builder here and to use
 

00:25:13.750 --> 00:25:17.540 align:start position:0%
create a process builder here and to use
my<00:25:13.930><c> favorite</c><00:25:14.640><c> JPS</c>

00:25:17.540 --> 00:25:17.550 align:start position:0%
my favorite JPS
 

00:25:17.550 --> 00:25:20.800 align:start position:0%
my favorite JPS
and<00:25:18.090><c> I'm</c><00:25:18.360><c> gonna</c><00:25:18.510><c> to</c><00:25:19.290><c> call</c><00:25:19.440><c> it</c><00:25:19.650><c> Jake</c><00:25:19.920><c> yes</c><00:25:20.250><c> and</c>

00:25:20.800 --> 00:25:20.810 align:start position:0%
and I'm gonna to call it Jake yes and
 

00:25:20.810 --> 00:25:26.030 align:start position:0%
and I'm gonna to call it Jake yes and
then<00:25:21.810><c> I</c><00:25:22.020><c> will</c><00:25:22.230><c> just</c><00:25:22.380><c> call</c><00:25:23.150><c> collagraph</c><00:25:24.860><c> for</c><00:25:25.860><c> J</c>

00:25:26.030 --> 00:25:26.040 align:start position:0%
then I will just call collagraph for J
 

00:25:26.040 --> 00:25:33.440 align:start position:0%
then I will just call collagraph for J
shell<00:25:26.900><c> and</c><00:25:27.900><c> let's</c><00:25:28.170><c> call</c><00:25:28.380><c> this</c><00:25:29.000><c> grep</c><00:25:30.000><c> and</c><00:25:32.450><c> then</c>

00:25:33.440 --> 00:25:33.450 align:start position:0%
shell and let's call this grep and then
 

00:25:33.450 --> 00:25:36.080 align:start position:0%
shell and let's call this grep and then
I<00:25:33.840><c> can</c><00:25:34.260><c> just</c><00:25:34.440><c> throw</c><00:25:34.560><c> these</c><00:25:34.710><c> as</c><00:25:34.890><c> a</c><00:25:34.920><c> pipeline</c><00:25:35.220><c> so</c>

00:25:36.080 --> 00:25:36.090 align:start position:0%
I can just throw these as a pipeline so
 

00:25:36.090 --> 00:25:38.690 align:start position:0%
I can just throw these as a pipeline so
I'll<00:25:36.150><c> just</c><00:25:36.300><c> do</c><00:25:36.450><c> start</c><00:25:37.230><c> pipeline</c><00:25:37.680><c> and</c><00:25:38.040><c> you</c><00:25:38.550><c> can</c>

00:25:38.690 --> 00:25:38.700 align:start position:0%
I'll just do start pipeline and you can
 

00:25:38.700 --> 00:25:40.760 align:start position:0%
I'll just do start pipeline and you can
see<00:25:38.820><c> that</c><00:25:38.940><c> this</c><00:25:39.060><c> takes</c><00:25:39.330><c> a</c><00:25:39.660><c> list</c><00:25:40.050><c> of</c><00:25:40.260><c> process</c>

00:25:40.760 --> 00:25:40.770 align:start position:0%
see that this takes a list of process
 

00:25:40.770 --> 00:25:42.950 align:start position:0%
see that this takes a list of process
builders<00:25:41.100><c> so</c><00:25:42.060><c> I</c><00:25:42.120><c> can</c><00:25:42.270><c> take</c><00:25:42.390><c> advantage</c><00:25:42.480><c> of</c><00:25:42.810><c> the</c>

00:25:42.950 --> 00:25:42.960 align:start position:0%
builders so I can take advantage of the
 

00:25:42.960 --> 00:25:44.330 align:start position:0%
builders so I can take advantage of the
convenience<00:25:43.200><c> factory</c><00:25:43.650><c> methods</c><00:25:43.950><c> here</c>

00:25:44.330 --> 00:25:44.340 align:start position:0%
convenience factory methods here
 

00:25:44.340 --> 00:25:46.790 align:start position:0%
convenience factory methods here
I'm<00:25:44.760><c> just</c><00:25:44.910><c> going</c><00:25:45.120><c> to</c><00:25:45.180><c> do</c><00:25:45.390><c> a</c><00:25:45.420><c> list</c><00:25:45.750><c> of</c><00:25:45.960><c> JPS</c><00:25:46.560><c> and</c>

00:25:46.790 --> 00:25:46.800 align:start position:0%
I'm just going to do a list of JPS and
 

00:25:46.800 --> 00:25:52.700 align:start position:0%
I'm just going to do a list of JPS and
grab<00:25:47.990><c> so</c><00:25:48.990><c> let's</c><00:25:49.170><c> call</c><00:25:49.350><c> this</c><00:25:49.580><c> pipeline</c><00:25:51.560><c> so</c><00:25:52.560><c> now</c>

00:25:52.700 --> 00:25:52.710 align:start position:0%
grab so let's call this pipeline so now
 

00:25:52.710 --> 00:25:57.350 align:start position:0%
grab so let's call this pipeline so now
this<00:25:53.370><c> is</c><00:25:53.430><c> started</c><00:25:53.880><c> synchronously</c><00:25:55.970><c> if</c><00:25:56.970><c> I</c><00:25:57.150><c> try</c>

00:25:57.350 --> 00:25:57.360 align:start position:0%
this is started synchronously if I try
 

00:25:57.360 --> 00:25:59.630 align:start position:0%
this is started synchronously if I try
to<00:25:57.420><c> access</c><00:25:57.720><c> it</c><00:25:58.050><c> now</c><00:25:58.230><c> it</c><00:25:59.130><c> should</c><00:25:59.340><c> be</c><00:25:59.370><c> finished</c>

00:25:59.630 --> 00:25:59.640 align:start position:0%
to access it now it should be finished
 

00:25:59.640 --> 00:26:01.400 align:start position:0%
to access it now it should be finished
and<00:26:00.120><c> you</c><00:26:00.480><c> can</c><00:26:00.600><c> see</c><00:26:00.750><c> that</c><00:26:00.870><c> everything</c><00:26:01.170><c> finish</c>

00:26:01.400 --> 00:26:01.410 align:start position:0%
and you can see that everything finish
 

00:26:01.410 --> 00:26:05.120 align:start position:0%
and you can see that everything finish
correctly<00:26:02.130><c> with</c><00:26:02.400><c> the</c><00:26:02.580><c> zero</c><00:26:03.000><c> return</c><00:26:03.450><c> value</c><00:26:04.130><c> so</c>

00:26:05.120 --> 00:26:05.130 align:start position:0%
correctly with the zero return value so
 

00:26:05.130 --> 00:26:07.160 align:start position:0%
correctly with the zero return value so
now<00:26:05.160><c> let's</c><00:26:05.820><c> try</c><00:26:05.970><c> and</c><00:26:06.180><c> take</c><00:26:06.330><c> a</c><00:26:06.360><c> look</c><00:26:06.600><c> at</c><00:26:06.810><c> what</c><00:26:07.140><c> I</c>

00:26:07.160 --> 00:26:07.170 align:start position:0%
now let's try and take a look at what I
 

00:26:07.170 --> 00:26:11.000 align:start position:0%
now let's try and take a look at what I
actually<00:26:07.470><c> ended</c><00:26:07.950><c> up</c><00:26:08.100><c> processing</c><00:26:09.950><c> so</c><00:26:10.950><c> I'm</c>

00:26:11.000 --> 00:26:11.010 align:start position:0%
actually ended up processing so I'm
 

00:26:11.010 --> 00:26:13.370 align:start position:0%
actually ended up processing so I'm
going<00:26:11.250><c> to</c><00:26:11.490><c> take</c><00:26:11.850><c> the</c><00:26:12.000><c> pipeline</c><00:26:12.390><c> here</c><00:26:12.840><c> and</c><00:26:13.020><c> get</c>

00:26:13.370 --> 00:26:13.380 align:start position:0%
going to take the pipeline here and get
 

00:26:13.380 --> 00:26:15.290 align:start position:0%
going to take the pipeline here and get
access<00:26:13.530><c> to</c><00:26:13.770><c> the</c><00:26:14.010><c> last</c><00:26:14.280><c> process</c><00:26:14.580><c> in</c><00:26:14.940><c> the</c><00:26:15.120><c> list</c>

00:26:15.290 --> 00:26:15.300 align:start position:0%
access to the last process in the list
 

00:26:15.300 --> 00:26:18.680 align:start position:0%
access to the last process in the list
which<00:26:16.230><c> is</c><00:26:16.440><c> index</c><00:26:16.950><c> 1</c><00:26:17.220><c> and</c><00:26:17.460><c> then</c><00:26:18.300><c> I</c><00:26:18.390><c> will</c><00:26:18.540><c> obtain</c>

00:26:18.680 --> 00:26:18.690 align:start position:0%
which is index 1 and then I will obtain
 

00:26:18.690 --> 00:26:21.050 align:start position:0%
which is index 1 and then I will obtain
an<00:26:18.960><c> inlet</c><00:26:19.200><c> stream</c><00:26:19.550><c> to</c><00:26:20.550><c> the</c><00:26:20.640><c> output</c><00:26:20.910><c> of</c><00:26:20.970><c> the</c>

00:26:21.050 --> 00:26:21.060 align:start position:0%
an inlet stream to the output of the
 

00:26:21.060 --> 00:26:21.380 align:start position:0%
an inlet stream to the output of the
process

00:26:21.380 --> 00:26:21.390 align:start position:0%
process
 

00:26:21.390 --> 00:26:24.250 align:start position:0%
process
I<00:26:21.570><c> need</c><00:26:22.380><c> to</c><00:26:22.500><c> do</c><00:26:22.620><c> the</c><00:26:22.830><c> whole</c><00:26:23.040><c> Java</c><00:26:23.370><c> boilerplate</c>

00:26:24.250 --> 00:26:24.260 align:start position:0%
I need to do the whole Java boilerplate
 

00:26:24.260 --> 00:26:26.960 align:start position:0%
I need to do the whole Java boilerplate
loop<00:26:25.260><c> here</c><00:26:25.590><c> so</c><00:26:25.620><c> I'll</c><00:26:26.160><c> just</c><00:26:26.190><c> let</c><00:26:26.550><c> this</c><00:26:26.700><c> in</c><00:26:26.850><c> an</c>

00:26:26.960 --> 00:26:26.970 align:start position:0%
loop here so I'll just let this in an
 

00:26:26.970 --> 00:26:35.260 align:start position:0%
loop here so I'll just let this in an
input<00:26:27.870><c> stream</c><00:26:28.140><c> reader</c><00:26:29.570><c> and</c><00:26:30.570><c> I</c><00:26:30.690><c> made</c><00:26:30.870><c> a</c><00:26:30.900><c> typo</c>

00:26:35.260 --> 00:26:35.270 align:start position:0%
 
 

00:26:35.270 --> 00:26:38.900 align:start position:0%
 
like<00:26:36.270><c> this</c><00:26:36.600><c> and</c><00:26:37.110><c> then</c><00:26:37.710><c> rub</c><00:26:38.520><c> this</c><00:26:38.670><c> in</c><00:26:38.850><c> a</c>

00:26:38.900 --> 00:26:38.910 align:start position:0%
like this and then rub this in a
 

00:26:38.910 --> 00:26:44.000 align:start position:0%
like this and then rub this in a
bufferedreader<00:26:39.300><c> and</c><00:26:41.900><c> then</c><00:26:42.900><c> finally</c><00:26:43.380><c> I</c><00:26:43.680><c> can</c>

00:26:44.000 --> 00:26:44.010 align:start position:0%
bufferedreader and then finally I can
 

00:26:44.010 --> 00:26:48.190 align:start position:0%
bufferedreader and then finally I can
use<00:26:44.250><c> the</c><00:26:44.400><c> method</c><00:26:44.640><c> read</c><00:26:44.850><c> line</c>

00:26:48.190 --> 00:26:48.200 align:start position:0%
 
 

00:26:48.200 --> 00:26:52.350 align:start position:0%
 
typo<00:26:49.200><c> anywhere</c>

00:26:52.350 --> 00:26:52.360 align:start position:0%
 
 

00:26:52.360 --> 00:27:01.080 align:start position:0%
 
oh<00:26:55.170><c> here</c><00:26:57.450><c> yeah</c><00:26:58.450><c> thank</c><00:26:58.780><c> you</c><00:26:59.760><c> and</c><00:27:00.760><c> I</c><00:27:00.820><c> can</c><00:27:00.970><c> see</c>

00:27:01.080 --> 00:27:01.090 align:start position:0%
oh here yeah thank you and I can see
 

00:27:01.090 --> 00:27:02.460 align:start position:0%
oh here yeah thank you and I can see
that<00:27:01.210><c> it</c><00:27:01.330><c> found</c><00:27:01.450><c> the</c><00:27:01.600><c> process</c><00:27:01.750><c> with</c><00:27:02.049><c> this</c><00:27:02.170><c> PID</c>

00:27:02.460 --> 00:27:02.470 align:start position:0%
that it found the process with this PID
 

00:27:02.470 --> 00:27:04.560 align:start position:0%
that it found the process with this PID
that's<00:27:03.160><c> called</c><00:27:03.460><c> a</c><00:27:03.700><c> shell</c><00:27:04.030><c> tool</c><00:27:04.210><c> provider</c>

00:27:04.560 --> 00:27:04.570 align:start position:0%
that's called a shell tool provider
 

00:27:04.570 --> 00:27:06.330 align:start position:0%
that's called a shell tool provider
which<00:27:05.110><c> is</c><00:27:05.140><c> the</c><00:27:05.380><c> actual</c><00:27:05.650><c> process</c><00:27:05.830><c> that</c><00:27:06.010><c> runs</c>

00:27:06.330 --> 00:27:06.340 align:start position:0%
which is the actual process that runs
 

00:27:06.340 --> 00:27:09.390 align:start position:0%
which is the actual process that runs
through<00:27:06.460><c> a</c><00:27:06.490><c> shell</c><00:27:07.470><c> so</c><00:27:08.470><c> that's</c><00:27:08.679><c> very</c><00:27:08.860><c> nice</c><00:27:08.980><c> and</c>

00:27:09.390 --> 00:27:09.400 align:start position:0%
through a shell so that's very nice and
 

00:27:09.400 --> 00:27:10.500 align:start position:0%
through a shell so that's very nice and
you<00:27:09.490><c> can</c><00:27:09.640><c> see</c><00:27:09.730><c> how</c><00:27:09.820><c> this</c><00:27:09.940><c> is</c><00:27:10.059><c> a</c><00:27:10.090><c> real</c><00:27:10.270><c> powerful</c>

00:27:10.500 --> 00:27:10.510 align:start position:0%
you can see how this is a real powerful
 

00:27:10.510 --> 00:27:12.180 align:start position:0%
you can see how this is a real powerful
API<00:27:10.840><c> and</c><00:27:11.230><c> it's</c><00:27:11.500><c> something</c><00:27:11.679><c> that</c><00:27:11.799><c> you</c><00:27:11.980><c> wouldn't</c>

00:27:12.180 --> 00:27:12.190 align:start position:0%
API and it's something that you wouldn't
 

00:27:12.190 --> 00:27:14.280 align:start position:0%
API and it's something that you wouldn't
want<00:27:12.309><c> to</c><00:27:12.370><c> implement</c><00:27:12.640><c> yourself</c><00:27:12.929><c> especially</c><00:27:13.929><c> in</c>

00:27:14.280 --> 00:27:14.290 align:start position:0%
want to implement yourself especially in
 

00:27:14.290 --> 00:27:15.240 align:start position:0%
want to implement yourself especially in
a<00:27:14.350><c> way</c><00:27:14.440><c> that</c><00:27:14.620><c> works</c><00:27:14.770><c> on</c><00:27:14.920><c> all</c><00:27:15.040><c> the</c><00:27:15.100><c> different</c>

00:27:15.240 --> 00:27:15.250 align:start position:0%
a way that works on all the different
 

00:27:15.250 --> 00:27:17.580 align:start position:0%
a way that works on all the different
platforms<00:27:15.400><c> so</c><00:27:16.390><c> it's</c><00:27:16.540><c> really</c><00:27:17.140><c> great</c><00:27:17.290><c> to</c><00:27:17.470><c> see</c>

00:27:17.580 --> 00:27:17.590 align:start position:0%
platforms so it's really great to see
 

00:27:17.590 --> 00:27:21.900 align:start position:0%
platforms so it's really great to see
this<00:27:17.710><c> as</c><00:27:17.860><c> part</c><00:27:18.160><c> of</c><00:27:18.220><c> the</c><00:27:18.309><c> JDK</c><00:27:19.380><c> now</c><00:27:20.760><c> the</c><00:27:21.760><c> last</c>

00:27:21.900 --> 00:27:21.910 align:start position:0%
this as part of the JDK now the last
 

00:27:21.910 --> 00:27:23.580 align:start position:0%
this as part of the JDK now the last
feature<00:27:22.150><c> that</c><00:27:22.450><c> I</c><00:27:22.540><c> wanted</c><00:27:22.750><c> to</c><00:27:22.870><c> talk</c><00:27:22.990><c> about</c><00:27:23.020><c> here</c>

00:27:23.580 --> 00:27:23.590 align:start position:0%
feature that I wanted to talk about here
 

00:27:23.590 --> 00:27:31.049 align:start position:0%
feature that I wanted to talk about here
is<00:27:24.210><c> the</c><00:27:25.210><c> new</c><00:27:25.390><c> HTTP</c><00:27:25.990><c> to</c><00:27:26.110><c> client</c><00:27:26.530><c> and</c><00:27:29.880><c> yeah</c><00:27:30.880><c> lots</c>

00:27:31.049 --> 00:27:31.059 align:start position:0%
is the new HTTP to client and yeah lots
 

00:27:31.059 --> 00:27:31.950 align:start position:0%
is the new HTTP to client and yeah lots
of<00:27:31.120><c> questions</c><00:27:31.419><c> at</c><00:27:31.540><c> the</c><00:27:31.600><c> end</c>

00:27:31.950 --> 00:27:31.960 align:start position:0%
of questions at the end
 

00:27:31.960 --> 00:27:36.090 align:start position:0%
of questions at the end
Thanks<00:27:33.210><c> so</c><00:27:34.210><c> the</c><00:27:34.330><c> new</c><00:27:34.419><c> HTTP</c><00:27:34.809><c> client</c><00:27:35.140><c> not</c><00:27:35.890><c> only</c>

00:27:36.090 --> 00:27:36.100 align:start position:0%
Thanks so the new HTTP client not only
 

00:27:36.100 --> 00:27:37.710 align:start position:0%
Thanks so the new HTTP client not only
provides<00:27:36.370><c> a</c><00:27:36.460><c> much</c><00:27:36.610><c> cleaner</c><00:27:36.850><c> API</c><00:27:37.210><c> than</c><00:27:37.480><c> the</c><00:27:37.600><c> old</c>

00:27:37.710 --> 00:27:37.720 align:start position:0%
provides a much cleaner API than the old
 

00:27:37.720 --> 00:27:40.560 align:start position:0%
provides a much cleaner API than the old
HTTP<00:27:38.260><c> URL</c><00:27:38.440><c> connection</c><00:27:38.520><c> but</c><00:27:39.520><c> it</c><00:27:40.000><c> also</c><00:27:40.150><c> supports</c>

00:27:40.560 --> 00:27:40.570 align:start position:0%
HTTP URL connection but it also supports
 

00:27:40.570 --> 00:27:41.880 align:start position:0%
HTTP URL connection but it also supports
all<00:27:40.900><c> the</c><00:27:40.960><c> cool</c><00:27:41.320><c> new</c><00:27:41.470><c> things</c>

00:27:41.880 --> 00:27:41.890 align:start position:0%
all the cool new things
 

00:27:41.890 --> 00:27:44.870 align:start position:0%
all the cool new things
it<00:27:41.980><c> supports</c><00:27:42.309><c> HTTP</c><00:27:42.790><c> to</c><00:27:42.940><c> WebSockets</c><00:27:43.720><c> TLS</c><00:27:44.470><c> and</c>

00:27:44.870 --> 00:27:44.880 align:start position:0%
it supports HTTP to WebSockets TLS and
 

00:27:44.880 --> 00:27:47.010 align:start position:0%
it supports HTTP to WebSockets TLS and
everything<00:27:45.880><c> that</c><00:27:46.000><c> will</c><00:27:46.090><c> expect</c><00:27:46.419><c> server</c><00:27:46.750><c> push</c>

00:27:47.010 --> 00:27:47.020 align:start position:0%
everything that will expect server push
 

00:27:47.020 --> 00:27:50.100 align:start position:0%
everything that will expect server push
cookies<00:27:47.860><c> proxies</c><00:27:48.600><c> synchronous</c><00:27:49.600><c> requests</c>

00:27:50.100 --> 00:27:50.110 align:start position:0%
cookies proxies synchronous requests
 

00:27:50.110 --> 00:27:54.060 align:start position:0%
cookies proxies synchronous requests
that<00:27:50.620><c> kind</c><00:27:50.799><c> of</c><00:27:50.830><c> thing</c><00:27:51.990><c> new</c><00:27:52.990><c> HTTP</c><00:27:53.559><c> client</c><00:27:53.830><c> API</c>

00:27:54.060 --> 00:27:54.070 align:start position:0%
that kind of thing new HTTP client API
 

00:27:54.070 --> 00:27:56.159 align:start position:0%
that kind of thing new HTTP client API
is<00:27:54.190><c> delivered</c><00:27:54.790><c> as</c><00:27:54.970><c> an</c><00:27:55.120><c> incubator</c><00:27:55.419><c> module</c><00:27:55.900><c> in</c>

00:27:56.159 --> 00:27:56.169 align:start position:0%
is delivered as an incubator module in
 

00:27:56.169 --> 00:27:58.470 align:start position:0%
is delivered as an incubator module in
Gemini<00:27:56.590><c> which</c><00:27:57.160><c> means</c><00:27:57.400><c> that</c><00:27:57.790><c> it's</c><00:27:58.390><c> not</c>

00:27:58.470 --> 00:27:58.480 align:start position:0%
Gemini which means that it's not
 

00:27:58.480 --> 00:28:00.270 align:start position:0%
Gemini which means that it's not
completely<00:27:58.870><c> finalized</c><00:27:59.380><c> and</c><00:27:59.679><c> it's</c><00:28:00.100><c> not</c>

00:28:00.270 --> 00:28:00.280 align:start position:0%
completely finalized and it's not
 

00:28:00.280 --> 00:28:01.590 align:start position:0%
completely finalized and it's not
resolved<00:28:00.640><c> by</c><00:28:00.730><c> default</c><00:28:01.120><c> and</c><00:28:01.270><c> lives</c><00:28:01.450><c> in</c><00:28:01.540><c> a</c>

00:28:01.590 --> 00:28:01.600 align:start position:0%
resolved by default and lives in a
 

00:28:01.600 --> 00:28:03.539 align:start position:0%
resolved by default and lives in a
special<00:28:01.900><c> namespace</c><00:28:02.260><c> but</c><00:28:02.919><c> I</c><00:28:02.980><c> pre</c><00:28:03.190><c> imported</c>

00:28:03.539 --> 00:28:03.549 align:start position:0%
special namespace but I pre imported
 

00:28:03.549 --> 00:28:05.460 align:start position:0%
special namespace but I pre imported
here<00:28:03.669><c> into</c><00:28:03.880><c> J</c><00:28:04.030><c> shell</c><00:28:04.240><c> so</c><00:28:05.020><c> that</c><00:28:05.049><c> we</c><00:28:05.230><c> can</c><00:28:05.350><c> play</c>

00:28:05.460 --> 00:28:05.470 align:start position:0%
here into J shell so that we can play
 

00:28:05.470 --> 00:28:08.520 align:start position:0%
here into J shell so that we can play
around<00:28:05.650><c> with</c><00:28:05.799><c> it</c><00:28:06.330><c> now</c><00:28:07.330><c> to</c><00:28:08.049><c> demonstrate</c><00:28:08.440><c> the</c>

00:28:08.520 --> 00:28:08.530 align:start position:0%
around with it now to demonstrate the
 

00:28:08.530 --> 00:28:10.409 align:start position:0%
around with it now to demonstrate the
client<00:28:08.770><c> functionality</c><00:28:09.309><c> I'm</c><00:28:09.580><c> going</c><00:28:10.150><c> to</c><00:28:10.270><c> need</c><00:28:10.390><c> a</c>

00:28:10.409 --> 00:28:10.419 align:start position:0%
client functionality I'm going to need a
 

00:28:10.419 --> 00:28:12.419 align:start position:0%
client functionality I'm going to need a
server<00:28:10.690><c> and</c><00:28:10.990><c> if</c><00:28:11.799><c> there's</c><00:28:11.980><c> anything</c><00:28:12.280><c> that</c>

00:28:12.419 --> 00:28:12.429 align:start position:0%
server and if there's anything that
 

00:28:12.429 --> 00:28:14.010 align:start position:0%
server and if there's anything that
we've<00:28:12.669><c> learned</c><00:28:12.910><c> from</c><00:28:13.240><c> previous</c><00:28:13.510><c> demos</c><00:28:13.870><c> at</c>

00:28:14.010 --> 00:28:14.020 align:start position:0%
we've learned from previous demos at
 

00:28:14.020 --> 00:28:15.450 align:start position:0%
we've learned from previous demos at
this<00:28:14.110><c> conference</c><00:28:14.470><c> is</c><00:28:14.770><c> that</c><00:28:14.950><c> you</c><00:28:15.010><c> cannot</c><00:28:15.190><c> rely</c>

00:28:15.450 --> 00:28:15.460 align:start position:0%
this conference is that you cannot rely
 

00:28:15.460 --> 00:28:17.580 align:start position:0%
this conference is that you cannot rely
on<00:28:15.490><c> the</c><00:28:15.610><c> internet</c><00:28:15.790><c> here</c><00:28:16.179><c> so</c><00:28:17.110><c> I'm</c><00:28:17.200><c> just</c><00:28:17.380><c> going</c>

00:28:17.580 --> 00:28:17.590 align:start position:0%
on the internet here so I'm just going
 

00:28:17.590 --> 00:28:19.200 align:start position:0%
on the internet here so I'm just going
to<00:28:17.620><c> write</c><00:28:18.010><c> a</c><00:28:18.040><c> really</c><00:28:18.340><c> quick</c><00:28:18.580><c> one</c><00:28:18.760><c> here</c><00:28:18.790><c> in</c><00:28:19.030><c> Java</c>

00:28:19.200 --> 00:28:19.210 align:start position:0%
to write a really quick one here in Java
 

00:28:19.210 --> 00:28:21.150 align:start position:0%
to write a really quick one here in Java
and<00:28:20.080><c> actually</c><00:28:20.440><c> really</c><00:28:20.620><c> like</c><00:28:20.740><c> this</c><00:28:20.860><c> example</c>

00:28:21.150 --> 00:28:21.160 align:start position:0%
and actually really like this example
 

00:28:21.160 --> 00:28:22.440 align:start position:0%
and actually really like this example
because<00:28:21.370><c> I</c><00:28:21.700><c> think</c><00:28:21.760><c> this</c><00:28:21.970><c> is</c><00:28:22.120><c> something</c><00:28:22.299><c> that</c>

00:28:22.440 --> 00:28:22.450 align:start position:0%
because I think this is something that
 

00:28:22.450 --> 00:28:24.900 align:start position:0%
because I think this is something that
people<00:28:22.690><c> usually</c><00:28:23.080><c> consider</c><00:28:23.620><c> hard</c><00:28:24.370><c> to</c><00:28:24.490><c> do</c><00:28:24.640><c> or</c>

00:28:24.900 --> 00:28:24.910 align:start position:0%
people usually consider hard to do or
 

00:28:24.910 --> 00:28:26.250 align:start position:0%
people usually consider hard to do or
they<00:28:25.090><c> assume</c><00:28:25.419><c> that</c><00:28:25.570><c> it's</c><00:28:25.660><c> going</c><00:28:25.690><c> to</c><00:28:25.870><c> require</c><00:28:26.169><c> a</c>

00:28:26.250 --> 00:28:26.260 align:start position:0%
they assume that it's going to require a
 

00:28:26.260 --> 00:28:28.799 align:start position:0%
they assume that it's going to require a
lot<00:28:26.650><c> of</c><00:28:26.740><c> code</c><00:28:26.890><c> in</c><00:28:27.010><c> Java</c><00:28:27.190><c> but</c><00:28:27.850><c> actually</c><00:28:28.240><c> you</c><00:28:28.630><c> can</c>

00:28:28.799 --> 00:28:28.809 align:start position:0%
lot of code in Java but actually you can
 

00:28:28.809 --> 00:28:30.270 align:start position:0%
lot of code in Java but actually you can
create<00:28:28.990><c> a</c><00:28:29.080><c> very</c><00:28:29.169><c> simple</c><00:28:29.380><c> server</c><00:28:29.710><c> very</c><00:28:30.070><c> easily</c>

00:28:30.270 --> 00:28:30.280 align:start position:0%
create a very simple server very easily
 

00:28:30.280 --> 00:28:31.830 align:start position:0%
create a very simple server very easily
just<00:28:30.640><c> using</c><00:28:30.850><c> functionality</c><00:28:31.299><c> provided</c><00:28:31.600><c> in</c><00:28:31.750><c> the</c>

00:28:31.830 --> 00:28:31.840 align:start position:0%
just using functionality provided in the
 

00:28:31.840 --> 00:28:34.020 align:start position:0%
just using functionality provided in the
JDK<00:28:32.260><c> and</c><00:28:32.470><c> it's</c><00:28:33.100><c> all</c><00:28:33.250><c> the</c><00:28:33.340><c> API</c><00:28:33.549><c> that</c><00:28:33.640><c> has</c><00:28:33.880><c> been</c>

00:28:34.020 --> 00:28:34.030 align:start position:0%
JDK and it's all the API that has been
 

00:28:34.030 --> 00:28:37.110 align:start position:0%
JDK and it's all the API that has been
around<00:28:34.179><c> for</c><00:28:34.419><c> a</c><00:28:34.450><c> very</c><00:28:34.510><c> long</c><00:28:34.660><c> time</c><00:28:35.880><c> so</c><00:28:36.880><c> I</c><00:28:36.910><c> will</c>

00:28:37.110 --> 00:28:37.120 align:start position:0%
around for a very long time so I will
 

00:28:37.120 --> 00:28:38.730 align:start position:0%
around for a very long time so I will
just<00:28:37.360><c> create</c><00:28:37.540><c> the</c><00:28:37.809><c> simplest</c><00:28:38.140><c> possible</c><00:28:38.260><c> server</c>

00:28:38.730 --> 00:28:38.740 align:start position:0%
just create the simplest possible server
 

00:28:38.740 --> 00:28:40.650 align:start position:0%
just create the simplest possible server
there's<00:28:39.309><c> going</c><00:28:39.429><c> to</c><00:28:39.549><c> be</c><00:28:39.610><c> one</c><00:28:39.850><c> endpoint</c><00:28:40.059><c> that</c>

00:28:40.650 --> 00:28:40.660 align:start position:0%
there's going to be one endpoint that
 

00:28:40.660 --> 00:28:43.890 align:start position:0%
there's going to be one endpoint that
just<00:28:40.809><c> returns</c><00:28:40.929><c> a</c><00:28:41.440><c> fixed</c><00:28:42.160><c> string</c><00:28:42.870><c> so</c><00:28:43.870><c> let's</c>

00:28:43.890 --> 00:28:43.900 align:start position:0%
just returns a fixed string so let's
 

00:28:43.900 --> 00:28:47.130 align:start position:0%
just returns a fixed string so let's
start<00:28:44.620><c> by</c><00:28:44.860><c> creating</c><00:28:44.919><c> an</c><00:28:45.669><c> HTTP</c><00:28:46.270><c> handler</c><00:28:46.450><c> for</c>

00:28:47.130 --> 00:28:47.140 align:start position:0%
start by creating an HTTP handler for
 

00:28:47.140 --> 00:28:49.830 align:start position:0%
start by creating an HTTP handler for
this<00:28:47.290><c> endpoint</c><00:28:48.150><c> I'm</c><00:28:49.150><c> going</c><00:28:49.360><c> to</c><00:28:49.450><c> call</c><00:28:49.630><c> it</c><00:28:49.750><c> a</c>

00:28:49.830 --> 00:28:49.840 align:start position:0%
this endpoint I'm going to call it a
 

00:28:49.840 --> 00:28:52.440 align:start position:0%
this endpoint I'm going to call it a
handler<00:28:50.260><c> that's</c><00:28:51.010><c> going</c><00:28:51.250><c> to</c><00:28:51.370><c> take</c><00:28:51.580><c> an</c><00:28:51.910><c> HTTP</c>

00:28:52.440 --> 00:28:52.450 align:start position:0%
handler that's going to take an HTTP
 

00:28:52.450 --> 00:28:57.060 align:start position:0%
handler that's going to take an HTTP
exchange<00:28:53.250><c> as</c><00:28:54.250><c> a</c><00:28:54.549><c> quick</c><00:28:54.850><c> lambda</c><00:28:55.210><c> here</c><00:28:56.040><c> so</c><00:28:57.040><c> I</c>

00:28:57.060 --> 00:28:57.070 align:start position:0%
exchange as a quick lambda here so I
 

00:28:57.070 --> 00:28:58.650 align:start position:0%
exchange as a quick lambda here so I
will<00:28:57.250><c> define</c><00:28:57.490><c> the</c><00:28:57.730><c> string</c><00:28:58.059><c> that</c><00:28:58.270><c> I</c><00:28:58.390><c> want</c><00:28:58.570><c> to</c>

00:28:58.650 --> 00:28:58.660 align:start position:0%
will define the string that I want to
 

00:28:58.660 --> 00:29:02.190 align:start position:0%
will define the string that I want to
use<00:28:58.809><c> let's</c><00:28:59.350><c> call</c><00:28:59.530><c> it</c><00:28:59.650><c> body</c><00:28:59.970><c> it's</c><00:29:00.970><c> going</c><00:29:01.210><c> to</c><00:29:01.360><c> be</c>

00:29:02.190 --> 00:29:02.200 align:start position:0%
use let's call it body it's going to be
 

00:29:02.200 --> 00:29:07.229 align:start position:0%
use let's call it body it's going to be
hello<00:29:02.769><c> Java</c><00:29:03.039><c> 1</c><00:29:03.690><c> and</c><00:29:04.690><c> now</c><00:29:04.929><c> I</c><00:29:05.460><c> will</c><00:29:06.460><c> set</c><00:29:07.149><c> the</c>

00:29:07.229 --> 00:29:07.239 align:start position:0%
hello Java 1 and now I will set the
 

00:29:07.239 --> 00:29:08.999 align:start position:0%
hello Java 1 and now I will set the
response<00:29:07.570><c> headers</c><00:29:07.690><c> I'm</c><00:29:08.440><c> always</c><00:29:08.710><c> going</c><00:29:08.950><c> to</c>

00:29:08.999 --> 00:29:09.009 align:start position:0%
response headers I'm always going to
 

00:29:09.009 --> 00:29:11.879 align:start position:0%
response headers I'm always going to
respond<00:29:09.429><c> with</c><00:29:09.580><c> 200</c><00:29:10.029><c> everything</c><00:29:10.570><c> is</c><00:29:10.659><c> ok</c><00:29:10.899><c> I'm</c>

00:29:11.879 --> 00:29:11.889 align:start position:0%
respond with 200 everything is ok I'm
 

00:29:11.889 --> 00:29:15.149 align:start position:0%
respond with 200 everything is ok I'm
going<00:29:12.220><c> to</c><00:29:12.369><c> attach</c><00:29:12.690><c> the</c><00:29:13.690><c> length</c><00:29:13.929><c> of</c><00:29:14.679><c> my</c><00:29:14.889><c> string</c>

00:29:15.149 --> 00:29:15.159 align:start position:0%
going to attach the length of my string
 

00:29:15.159 --> 00:29:18.869 align:start position:0%
going to attach the length of my string
here<00:29:15.489><c> and</c><00:29:16.470><c> finally</c><00:29:17.470><c> I</c><00:29:17.950><c> will</c><00:29:18.220><c> ride</c><00:29:18.489><c> the</c><00:29:18.639><c> string</c>

00:29:18.869 --> 00:29:18.879 align:start position:0%
here and finally I will ride the string
 

00:29:18.879 --> 00:29:22.049 align:start position:0%
here and finally I will ride the string
to<00:29:19.029><c> the</c><00:29:19.119><c> output</c><00:29:19.509><c> so</c><00:29:19.960><c> I</c><00:29:19.989><c> will</c><00:29:20.289><c> open</c><00:29:21.279><c> an</c><00:29:21.580><c> output</c>

00:29:22.049 --> 00:29:22.059 align:start position:0%
to the output so I will open an output
 

00:29:22.059 --> 00:29:26.220 align:start position:0%
to the output so I will open an output
stream<00:29:22.239><c> here</c><00:29:23.970><c> let's</c><00:29:24.970><c> assign</c><00:29:25.330><c> the</c><00:29:25.869><c> response</c>

00:29:26.220 --> 00:29:26.230 align:start position:0%
stream here let's assign the response
 

00:29:26.230 --> 00:29:34.320 align:start position:0%
stream here let's assign the response
body<00:29:26.379><c> here</c><00:29:29.970><c> and</c><00:29:30.970><c> too</c><00:29:31.809><c> many</c><00:29:31.929><c> brackets</c><00:29:32.489><c> no</c><00:29:33.489><c> it</c>

00:29:34.320 --> 00:29:34.330 align:start position:0%
body here and too many brackets no it
 

00:29:34.330 --> 00:29:37.560 align:start position:0%
body here and too many brackets no it
looks<00:29:34.600><c> fine</c><00:29:34.690><c> and</c><00:29:35.429><c> there</c><00:29:36.429><c> I</c><00:29:36.759><c> will</c><00:29:36.909><c> just</c><00:29:36.940><c> provide</c>

00:29:37.560 --> 00:29:37.570 align:start position:0%
looks fine and there I will just provide
 

00:29:37.570 --> 00:29:40.470 align:start position:0%
looks fine and there I will just provide
to<00:29:37.869><c> this</c><00:29:37.960><c> output</c><00:29:38.139><c> stream</c><00:29:38.590><c> and</c><00:29:39.340><c> I</c><00:29:40.149><c> have</c><00:29:40.269><c> to</c><00:29:40.389><c> do</c>

00:29:40.470 --> 00:29:40.480 align:start position:0%
to this output stream and I have to do
 

00:29:40.480 --> 00:29:42.389 align:start position:0%
to this output stream and I have to do
this<00:29:40.600><c> through</c><00:29:40.960><c> get</c><00:29:41.470><c> bytes</c><00:29:41.710><c> because</c><00:29:42.070><c> it's</c><00:29:42.340><c> an</c>

00:29:42.389 --> 00:29:42.399 align:start position:0%
this through get bytes because it's an
 

00:29:42.399 --> 00:29:45.710 align:start position:0%
this through get bytes because it's an
old<00:29:42.549><c> API</c><00:29:42.820><c> but</c><00:29:43.389><c> that's</c><00:29:43.600><c> ok</c><00:29:43.899><c> for</c><00:29:44.080><c> demo</c><00:29:44.289><c> purposes</c>

00:29:45.710 --> 00:29:45.720 align:start position:0%
old API but that's ok for demo purposes
 

00:29:45.720 --> 00:29:49.249 align:start position:0%
old API but that's ok for demo purposes
and<00:29:46.720><c> now</c><00:29:46.989><c> I</c><00:29:47.019><c> will</c><00:29:47.230><c> just</c><00:29:47.259><c> close</c><00:29:47.679><c> everything</c>

00:29:49.249 --> 00:29:49.259 align:start position:0%
and now I will just close everything
 

00:29:49.259 --> 00:29:53.399 align:start position:0%
and now I will just close everything
great<00:29:50.399><c> so</c><00:29:51.399><c> if</c><00:29:51.489><c> you</c><00:29:51.549><c> take</c><00:29:51.700><c> a</c><00:29:51.759><c> look</c><00:29:51.970><c> here</c><00:29:52.330><c> this</c><00:29:53.259><c> is</c>

00:29:53.399 --> 00:29:53.409 align:start position:0%
great so if you take a look here this is
 

00:29:53.409 --> 00:29:57.119 align:start position:0%
great so if you take a look here this is
our<00:29:53.559><c> new</c><00:29:53.590><c> handler</c><00:29:54.100><c> looks</c><00:29:54.840><c> ok</c><00:29:55.840><c> so</c><00:29:56.559><c> we</c><00:29:56.679><c> can</c><00:29:56.830><c> go</c><00:29:56.950><c> on</c>

00:29:57.119 --> 00:29:57.129 align:start position:0%
our new handler looks ok so we can go on
 

00:29:57.129 --> 00:30:00.359 align:start position:0%
our new handler looks ok so we can go on
and<00:29:57.429><c> try</c><00:29:57.730><c> to</c><00:29:57.759><c> start</c><00:29:58.029><c> a</c><00:29:58.119><c> server</c><00:29:59.100><c> so</c><00:30:00.100><c> I'm</c><00:30:00.159><c> going</c>

00:30:00.359 --> 00:30:00.369 align:start position:0%
and try to start a server so I'm going
 

00:30:00.369 --> 00:30:05.099 align:start position:0%
and try to start a server so I'm going
to<00:30:00.489><c> create</c><00:30:00.700><c> a</c><00:30:01.179><c> server</c><00:30:01.749><c> here</c><00:30:02.289><c> and</c><00:30:02.940><c> this</c><00:30:03.940><c> takes</c><00:30:04.869><c> a</c>

00:30:05.099 --> 00:30:05.109 align:start position:0%
to create a server here and this takes a
 

00:30:05.109 --> 00:30:09.239 align:start position:0%
to create a server here and this takes a
port<00:30:05.850><c> so</c><00:30:06.850><c> I</c><00:30:06.909><c> will</c><00:30:07.059><c> give</c><00:30:07.239><c> it</c><00:30:07.389><c> let's</c><00:30:07.869><c> say</c><00:30:08.249><c> 8,000</c>

00:30:09.239 --> 00:30:09.249 align:start position:0%
port so I will give it let's say 8,000
 

00:30:09.249 --> 00:30:12.919 align:start position:0%
port so I will give it let's say 8,000
and<00:30:09.779><c> don't</c><00:30:10.779><c> need</c><00:30:10.899><c> a</c><00:30:10.929><c> backlog</c><00:30:11.460><c> let's</c><00:30:12.460><c> call</c><00:30:12.730><c> this</c>

00:30:12.919 --> 00:30:12.929 align:start position:0%
and don't need a backlog let's call this
 

00:30:12.929 --> 00:30:17.539 align:start position:0%
and don't need a backlog let's call this
HS<00:30:13.929><c> and</c><00:30:14.609><c> then</c><00:30:15.609><c> I</c><00:30:15.700><c> will</c><00:30:15.850><c> create</c><00:30:16.149><c> the</c><00:30:16.330><c> end</c><00:30:16.450><c> point</c>

00:30:17.539 --> 00:30:17.549 align:start position:0%
HS and then I will create the end point
 

00:30:17.549 --> 00:30:21.570 align:start position:0%
HS and then I will create the end point
let's<00:30:18.549><c> say</c><00:30:18.840><c> slash</c><00:30:19.840><c> hello</c><00:30:20.190><c> and</c><00:30:21.190><c> I</c><00:30:21.249><c> will</c><00:30:21.399><c> touch</c>

00:30:21.570 --> 00:30:21.580 align:start position:0%
let's say slash hello and I will touch
 

00:30:21.580 --> 00:30:24.539 align:start position:0%
let's say slash hello and I will touch
my<00:30:21.759><c> favorite</c><00:30:22.059><c> handler</c><00:30:22.359><c> to</c><00:30:22.509><c> this</c><00:30:23.220><c> and</c><00:30:24.220><c> now</c>

00:30:24.539 --> 00:30:24.549 align:start position:0%
my favorite handler to this and now
 

00:30:24.549 --> 00:30:27.210 align:start position:0%
my favorite handler to this and now
finally<00:30:24.879><c> I</c><00:30:25.299><c> can</c><00:30:25.450><c> start</c><00:30:25.749><c> a</c><00:30:25.840><c> server</c><00:30:26.220><c> so</c>

00:30:27.210 --> 00:30:27.220 align:start position:0%
finally I can start a server so
 

00:30:27.220 --> 00:30:29.580 align:start position:0%
finally I can start a server so
hopefully<00:30:27.549><c> the</c><00:30:27.970><c> server</c><00:30:28.210><c> is</c><00:30:28.299><c> running</c><00:30:28.330><c> and</c><00:30:28.749><c> to</c>

00:30:29.580 --> 00:30:29.590 align:start position:0%
hopefully the server is running and to
 

00:30:29.590 --> 00:30:32.700 align:start position:0%
hopefully the server is running and to
test<00:30:29.799><c> this</c><00:30:29.950><c> let's</c><00:30:30.580><c> use</c><00:30:30.840><c> the</c><00:30:31.840><c> old</c><00:30:32.019><c> HTTP</c><00:30:32.499><c> URL</c>

00:30:32.700 --> 00:30:32.710 align:start position:0%
test this let's use the old HTTP URL
 

00:30:32.710 --> 00:30:35.759 align:start position:0%
test this let's use the old HTTP URL
connection<00:30:32.739><c> API</c><00:30:33.629><c> just</c><00:30:34.629><c> to</c><00:30:34.779><c> see</c><00:30:34.929><c> how</c><00:30:35.049><c> how</c><00:30:35.619><c> ugly</c>

00:30:35.759 --> 00:30:35.769 align:start position:0%
connection API just to see how how ugly
 

00:30:35.769 --> 00:30:38.310 align:start position:0%
connection API just to see how how ugly
it<00:30:36.039><c> was</c><00:30:36.070><c> and</c><00:30:36.460><c> how</c><00:30:36.609><c> good</c><00:30:37.539><c> the</c><00:30:37.720><c> new</c><00:30:37.840><c> client</c><00:30:38.139><c> looks</c>

00:30:38.310 --> 00:30:38.320 align:start position:0%
it was and how good the new client looks
 

00:30:38.320 --> 00:30:41.099 align:start position:0%
it was and how good the new client looks
in<00:30:38.440><c> comparison</c><00:30:39.600><c> so</c><00:30:40.600><c> I</c><00:30:40.629><c> will</c><00:30:40.779><c> start</c><00:30:41.019><c> by</c>

00:30:41.099 --> 00:30:41.109 align:start position:0%
in comparison so I will start by
 

00:30:41.109 --> 00:30:43.560 align:start position:0%
in comparison so I will start by
defining<00:30:41.379><c> a</c><00:30:41.710><c> URI</c><00:30:41.980><c> here</c><00:30:42.429><c> it's</c><00:30:42.940><c> going</c><00:30:43.210><c> to</c><00:30:43.330><c> point</c>

00:30:43.560 --> 00:30:43.570 align:start position:0%
defining a URI here it's going to point
 

00:30:43.570 --> 00:30:46.979 align:start position:0%
defining a URI here it's going to point
to<00:30:43.989><c> my</c><00:30:44.139><c> local</c><00:30:44.350><c> server</c><00:30:45.210><c> so</c><00:30:46.210><c> it's</c><00:30:46.359><c> HTTP</c>

00:30:46.979 --> 00:30:46.989 align:start position:0%
to my local server so it's HTTP
 

00:30:46.989 --> 00:30:57.330 align:start position:0%
to my local server so it's HTTP
localhost<00:30:50.249><c> 8080</c><00:30:54.090><c> RI</c><00:30:55.320><c> then</c><00:30:56.320><c> I</c><00:30:56.440><c> will</c><00:30:56.649><c> convert</c>

00:30:57.330 --> 00:30:57.340 align:start position:0%
localhost 8080 RI then I will convert
 

00:30:57.340 --> 00:30:59.340 align:start position:0%
localhost 8080 RI then I will convert
this<00:30:57.489><c> to</c><00:30:57.730><c> a</c><00:30:57.759><c> URL</c><00:30:58.029><c> so</c><00:30:58.809><c> that</c><00:30:58.840><c> I</c><00:30:58.929><c> can</c><00:30:59.080><c> open</c><00:30:59.139><c> a</c>

00:30:59.340 --> 00:30:59.350 align:start position:0%
this to a URL so that I can open a
 

00:30:59.350 --> 00:31:02.460 align:start position:0%
this to a URL so that I can open a
connection<00:30:59.679><c> here</c><00:31:00.029><c> and</c><00:31:01.080><c> this</c><00:31:02.080><c> actually</c>

00:31:02.460 --> 00:31:02.470 align:start position:0%
connection here and this actually
 

00:31:02.470 --> 00:31:04.680 align:start position:0%
connection here and this actually
returns<00:31:02.859><c> your</c><00:31:03.759><c> auto</c><00:31:03.909><c> connection</c><00:31:04.299><c> which</c><00:31:04.450><c> is</c><00:31:04.570><c> no</c>

00:31:04.680 --> 00:31:04.690 align:start position:0%
returns your auto connection which is no
 

00:31:04.690 --> 00:31:06.509 align:start position:0%
returns your auto connection which is no
good<00:31:04.899><c> I</c><00:31:05.109><c> actually</c><00:31:05.350><c> want</c><00:31:05.739><c> HTTP</c><00:31:06.309><c> royal</c>

00:31:06.509 --> 00:31:06.519 align:start position:0%
good I actually want HTTP royal
 

00:31:06.519 --> 00:31:08.310 align:start position:0%
good I actually want HTTP royal
connection<00:31:06.940><c> and</c><00:31:07.269><c> this</c><00:31:07.629><c> whole</c><00:31:07.749><c> API</c><00:31:08.049><c> was</c>

00:31:08.310 --> 00:31:08.320 align:start position:0%
connection and this whole API was
 

00:31:08.320 --> 00:31:09.960 align:start position:0%
connection and this whole API was
designed<00:31:08.619><c> with</c><00:31:08.739><c> multiple</c><00:31:08.799><c> protocols</c><00:31:09.489><c> in</c><00:31:09.759><c> mind</c>

00:31:09.960 --> 00:31:09.970 align:start position:0%
designed with multiple protocols in mind
 

00:31:09.970 --> 00:31:12.239 align:start position:0%
designed with multiple protocols in mind
even<00:31:10.570><c> though</c><00:31:10.749><c> HTTP</c><00:31:11.499><c> is</c><00:31:11.619><c> realistically</c><00:31:12.129><c> the</c>

00:31:12.239 --> 00:31:12.249 align:start position:0%
even though HTTP is realistically the
 

00:31:12.249 --> 00:31:13.919 align:start position:0%
even though HTTP is realistically the
only<00:31:12.429><c> one</c><00:31:12.549><c> that</c><00:31:12.669><c> you</c><00:31:12.759><c> would</c><00:31:12.849><c> use</c><00:31:12.929><c> so</c>

00:31:13.919 --> 00:31:13.929 align:start position:0%
only one that you would use so
 

00:31:13.929 --> 00:31:15.610 align:start position:0%
only one that you would use so
unfortunately<00:31:14.889><c> I</c><00:31:15.220><c> need</c><00:31:15.279><c> to</c>

00:31:15.610 --> 00:31:15.620 align:start position:0%
unfortunately I need to
 

00:31:15.620 --> 00:31:19.960 align:start position:0%
unfortunately I need to
this<00:31:15.920><c> here</c><00:31:16.510><c> so</c><00:31:17.510><c> I'm</c><00:31:17.570><c> just</c><00:31:17.720><c> going</c><00:31:17.930><c> to</c><00:31:18.110><c> do</c><00:31:18.970><c> HTTP</c>

00:31:19.960 --> 00:31:19.970 align:start position:0%
this here so I'm just going to do HTTP
 

00:31:19.970 --> 00:31:24.100 align:start position:0%
this here so I'm just going to do HTTP
URL<00:31:20.630><c> connection</c><00:31:20.890><c> let's</c><00:31:21.890><c> call</c><00:31:22.130><c> it</c><00:31:22.280><c> C</c><00:31:23.080><c> so</c><00:31:24.080><c> you</c>

00:31:24.100 --> 00:31:24.110 align:start position:0%
URL connection let's call it C so you
 

00:31:24.110 --> 00:31:25.360 align:start position:0%
URL connection let's call it C so you
can<00:31:24.170><c> see</c><00:31:24.410><c> that</c><00:31:24.500><c> I'm</c><00:31:24.590><c> just</c><00:31:24.770><c> starting</c><00:31:25.010><c> out</c><00:31:25.130><c> and</c>

00:31:25.360 --> 00:31:25.370 align:start position:0%
can see that I'm just starting out and
 

00:31:25.370 --> 00:31:28.750 align:start position:0%
can see that I'm just starting out and
this<00:31:25.460><c> API</c><00:31:25.760><c> is</c><00:31:25.850><c> already</c><00:31:26.330><c> really</c><00:31:26.690><c> ugly</c><00:31:27.730><c> now</c><00:31:28.730><c> I</c>

00:31:28.750 --> 00:31:28.760 align:start position:0%
this API is already really ugly now I
 

00:31:28.760 --> 00:31:31.570 align:start position:0%
this API is already really ugly now I
can<00:31:29.090><c> specify</c><00:31:29.630><c> the</c><00:31:29.990><c> request</c><00:31:30.440><c> method</c><00:31:30.860><c> it's</c><00:31:31.400><c> just</c>

00:31:31.570 --> 00:31:31.580 align:start position:0%
can specify the request method it's just
 

00:31:31.580 --> 00:31:34.299 align:start position:0%
can specify the request method it's just
going<00:31:31.760><c> to</c><00:31:31.940><c> be</c><00:31:32.090><c> a</c><00:31:32.120><c> simple</c><00:31:32.420><c> cut</c><00:31:32.809><c> and</c><00:31:33.100><c> this</c><00:31:34.100><c> needs</c>

00:31:34.299 --> 00:31:34.309 align:start position:0%
going to be a simple cut and this needs
 

00:31:34.309 --> 00:31:36.460 align:start position:0%
going to be a simple cut and this needs
to<00:31:34.430><c> be</c><00:31:34.490><c> passed</c><00:31:34.670><c> as</c><00:31:34.910><c> fast</c><00:31:35.360><c> as</c><00:31:35.540><c> a</c><00:31:35.570><c> string</c><00:31:35.900><c> again</c>

00:31:36.460 --> 00:31:36.470 align:start position:0%
to be passed as fast as a string again
 

00:31:36.470 --> 00:31:39.790 align:start position:0%
to be passed as fast as a string again
not<00:31:36.830><c> really</c><00:31:37.070><c> nice</c><00:31:37.780><c> no</c><00:31:38.780><c> let's</c><00:31:39.200><c> test</c><00:31:39.410><c> if</c><00:31:39.559><c> this</c>

00:31:39.790 --> 00:31:39.800 align:start position:0%
not really nice no let's test if this
 

00:31:39.800 --> 00:31:40.710 align:start position:0%
not really nice no let's test if this
works

00:31:40.710 --> 00:31:40.720 align:start position:0%
works
 

00:31:40.720 --> 00:31:45.250 align:start position:0%
works
so<00:31:41.720><c> do</c><00:31:42.020><c> you</c><00:31:42.110><c> get</c><00:31:42.290><c> response</c><00:31:42.680><c> code</c><00:31:44.080><c> and</c><00:31:45.080><c> I</c><00:31:45.140><c> can</c>

00:31:45.250 --> 00:31:45.260 align:start position:0%
so do you get response code and I can
 

00:31:45.260 --> 00:31:46.990 align:start position:0%
so do you get response code and I can
say<00:31:45.380><c> that</c><00:31:45.530><c> it's</c><00:31:45.620><c> 200</c><00:31:46.040><c> that</c><00:31:46.700><c> looks</c><00:31:46.850><c> promising</c>

00:31:46.990 --> 00:31:47.000 align:start position:0%
say that it's 200 that looks promising
 

00:31:47.000 --> 00:31:49.240 align:start position:0%
say that it's 200 that looks promising
so<00:31:47.990><c> let's</c><00:31:48.170><c> try</c><00:31:48.380><c> and</c><00:31:48.530><c> read</c><00:31:48.679><c> the</c><00:31:48.800><c> actual</c><00:31:48.950><c> output</c>

00:31:49.240 --> 00:31:49.250 align:start position:0%
so let's try and read the actual output
 

00:31:49.250 --> 00:31:52.630 align:start position:0%
so let's try and read the actual output
and<00:31:49.840><c> again</c><00:31:50.840><c> we</c><00:31:51.230><c> need</c><00:31:51.679><c> to</c><00:31:51.800><c> do</c><00:31:51.890><c> the</c><00:31:52.309><c> standard</c>

00:31:52.630 --> 00:31:52.640 align:start position:0%
and again we need to do the standard
 

00:31:52.640 --> 00:31:57.130 align:start position:0%
and again we need to do the standard
Java<00:31:52.850><c> boilerplate</c><00:31:53.420><c> stuff</c><00:31:53.450><c> I</c><00:31:53.990><c> will</c><00:31:54.220><c> open</c><00:31:56.140><c> we</c>

00:31:57.130 --> 00:31:57.140 align:start position:0%
Java boilerplate stuff I will open we
 

00:31:57.140 --> 00:32:00.220 align:start position:0%
Java boilerplate stuff I will open we
will<00:31:57.290><c> get</c><00:31:57.559><c> the</c><00:31:57.679><c> input</c><00:31:57.950><c> stream</c><00:31:59.110><c> from</c><00:32:00.110><c> my</c>

00:32:00.220 --> 00:32:00.230 align:start position:0%
will get the input stream from my
 

00:32:00.230 --> 00:32:02.770 align:start position:0%
will get the input stream from my
connection<00:32:00.740><c> rub</c><00:32:01.670><c> this</c><00:32:01.850><c> in</c><00:32:02.059><c> an</c><00:32:02.270><c> input</c><00:32:02.600><c> stream</c>

00:32:02.770 --> 00:32:02.780 align:start position:0%
connection rub this in an input stream
 

00:32:02.780 --> 00:32:07.270 align:start position:0%
connection rub this in an input stream
reader<00:32:02.840><c> I</c><00:32:05.950><c> brought</c><00:32:06.950><c> this</c><00:32:07.070><c> in</c><00:32:07.220><c> the</c>

00:32:07.270 --> 00:32:07.280 align:start position:0%
reader I brought this in the
 

00:32:07.280 --> 00:32:11.520 align:start position:0%
reader I brought this in the
bufferedreader<00:32:07.610><c> a</c><00:32:09.340><c> lot</c><00:32:10.340><c> of</c><00:32:10.460><c> boilerplate</c><00:32:10.670><c> here</c>

00:32:11.520 --> 00:32:11.530 align:start position:0%
bufferedreader a lot of boilerplate here
 

00:32:11.530 --> 00:32:15.400 align:start position:0%
bufferedreader a lot of boilerplate here
and<00:32:12.530><c> I</c><00:32:12.650><c> can</c><00:32:12.830><c> finally</c><00:32:13.250><c> read</c><00:32:14.090><c> the</c><00:32:14.210><c> line</c><00:32:14.410><c> that</c>

00:32:15.400 --> 00:32:15.410 align:start position:0%
and I can finally read the line that
 

00:32:15.410 --> 00:32:19.360 align:start position:0%
and I can finally read the line that
says<00:32:15.679><c> how</c><00:32:16.250><c> much</c><00:32:16.400><c> I</c><00:32:16.520><c> want</c><00:32:16.929><c> so</c><00:32:17.929><c> that's</c><00:32:18.050><c> great</c><00:32:18.370><c> now</c>

00:32:19.360 --> 00:32:19.370 align:start position:0%
says how much I want so that's great now
 

00:32:19.370 --> 00:32:20.980 align:start position:0%
says how much I want so that's great now
let's<00:32:19.520><c> try</c><00:32:19.730><c> to</c><00:32:19.790><c> do</c><00:32:19.940><c> this</c><00:32:20.059><c> with</c><00:32:20.300><c> the</c><00:32:20.420><c> new</c><00:32:20.540><c> HTTP</c>

00:32:20.980 --> 00:32:20.990 align:start position:0%
let's try to do this with the new HTTP
 

00:32:20.990 --> 00:32:24.070 align:start position:0%
let's try to do this with the new HTTP
to<00:32:21.080><c> a</c><00:32:21.110><c> client</c><00:32:21.910><c> so</c><00:32:22.910><c> though</c><00:32:23.240><c> the</c><00:32:23.540><c> new</c><00:32:23.660><c> API</c><00:32:23.960><c> is</c>

00:32:24.070 --> 00:32:24.080 align:start position:0%
to a client so though the new API is
 

00:32:24.080 --> 00:32:26.080 align:start position:0%
to a client so though the new API is
kind<00:32:24.410><c> of</c><00:32:24.500><c> built</c><00:32:24.860><c> around</c><00:32:24.980><c> three</c><00:32:25.400><c> main</c><00:32:25.880><c> classes</c>

00:32:26.080 --> 00:32:26.090 align:start position:0%
kind of built around three main classes
 

00:32:26.090 --> 00:32:28.450 align:start position:0%
kind of built around three main classes
there's<00:32:26.600><c> HTTP</c><00:32:27.080><c> client</c><00:32:27.440><c> HTTP</c><00:32:27.890><c> request</c><00:32:28.220><c> and</c>

00:32:28.450 --> 00:32:28.460 align:start position:0%
there's HTTP client HTTP request and
 

00:32:28.460 --> 00:32:32.080 align:start position:0%
there's HTTP client HTTP request and
HTTP<00:32:29.090><c> response</c><00:32:29.450><c> pretty</c><00:32:30.290><c> self-explanatory</c><00:32:31.090><c> so</c>

00:32:32.080 --> 00:32:32.090 align:start position:0%
HTTP response pretty self-explanatory so
 

00:32:32.090 --> 00:32:34.590 align:start position:0%
HTTP response pretty self-explanatory so
just<00:32:32.420><c> start</c><00:32:32.630><c> by</c><00:32:32.780><c> creating</c><00:32:32.990><c> the</c><00:32:33.230><c> client</c><00:32:33.650><c> here</c>

00:32:34.590 --> 00:32:34.600 align:start position:0%
just start by creating the client here
 

00:32:34.600 --> 00:32:37.870 align:start position:0%
just start by creating the client here
in<00:32:35.600><c> HTTP</c><00:32:36.080><c> client</c><00:32:36.500><c> and</c><00:32:37.190><c> let's</c><00:32:37.520><c> call</c><00:32:37.670><c> this</c><00:32:37.820><c> a</c>

00:32:37.870 --> 00:32:37.880 align:start position:0%
in HTTP client and let's call this a
 

00:32:37.880 --> 00:32:41.460 align:start position:0%
in HTTP client and let's call this a
client<00:32:38.470><c> then</c><00:32:39.470><c> I</c><00:32:39.559><c> will</c><00:32:39.800><c> construct</c><00:32:40.340><c> the</c><00:32:40.460><c> request</c>

00:32:41.460 --> 00:32:41.470 align:start position:0%
client then I will construct the request
 

00:32:41.470 --> 00:32:45.669 align:start position:0%
client then I will construct the request
which<00:32:42.470><c> uses</c><00:32:43.400><c> a</c><00:32:43.429><c> builder</c><00:32:44.240><c> pattern</c><00:32:44.390><c> here</c><00:32:44.840><c> so</c>

00:32:45.669 --> 00:32:45.679 align:start position:0%
which uses a builder pattern here so
 

00:32:45.679 --> 00:32:48.460 align:start position:0%
which uses a builder pattern here so
I'll<00:32:45.770><c> just</c><00:32:45.800><c> obtain</c><00:32:46.250><c> a</c><00:32:46.280><c> builder</c><00:32:47.200><c> give</c><00:32:48.200><c> it</c><00:32:48.320><c> your</c>

00:32:48.460 --> 00:32:48.470 align:start position:0%
I'll just obtain a builder give it your
 

00:32:48.470 --> 00:32:52.299 align:start position:0%
I'll just obtain a builder give it your
URI<00:32:48.770><c> that</c><00:32:49.190><c> I</c><00:32:49.250><c> had</c><00:32:49.400><c> from</c><00:32:49.640><c> before</c><00:32:51.250><c> specify</c><00:32:52.250><c> the</c>

00:32:52.299 --> 00:32:52.309 align:start position:0%
URI that I had from before specify the
 

00:32:52.309 --> 00:32:54.250 align:start position:0%
URI that I had from before specify the
get<00:32:52.520><c> method</c><00:32:52.670><c> as</c><00:32:53.090><c> a</c><00:32:53.150><c> method</c><00:32:53.540><c> this</c><00:32:53.840><c> is</c><00:32:54.020><c> really</c>

00:32:54.250 --> 00:32:54.260 align:start position:0%
get method as a method this is really
 

00:32:54.260 --> 00:32:57.419 align:start position:0%
get method as a method this is really
nice<00:32:54.380><c> and</c><00:32:55.010><c> then</c><00:32:55.610><c> build</c><00:32:55.850><c> it</c><00:32:56.000><c> let's</c><00:32:56.809><c> call</c><00:32:56.990><c> this</c><00:32:57.170><c> a</c>

00:32:57.419 --> 00:32:57.429 align:start position:0%
nice and then build it let's call this a
 

00:32:57.429 --> 00:33:02.500 align:start position:0%
nice and then build it let's call this a
request<00:32:58.540><c> and</c><00:32:59.540><c> then</c><00:32:59.600><c> I</c><00:32:59.780><c> can</c><00:32:59.929><c> finally</c><00:33:01.390><c> send</c><00:33:02.390><c> the</c>

00:33:02.500 --> 00:33:02.510 align:start position:0%
request and then I can finally send the
 

00:33:02.510 --> 00:33:07.990 align:start position:0%
request and then I can finally send the
request<00:33:02.890><c> to</c><00:33:03.890><c> my</c><00:33:04.010><c> server</c><00:33:06.309><c> so</c><00:33:07.309><c> this</c><00:33:07.550><c> takes</c><00:33:07.790><c> a</c>

00:33:07.990 --> 00:33:08.000 align:start position:0%
request to my server so this takes a
 

00:33:08.000 --> 00:33:11.169 align:start position:0%
request to my server so this takes a
request<00:33:08.480><c> and</c><00:33:09.050><c> something</c><00:33:09.590><c> called</c><00:33:10.179><c> body</c>

00:33:11.169 --> 00:33:11.179 align:start position:0%
request and something called body
 

00:33:11.179 --> 00:33:13.720 align:start position:0%
request and something called body
handler<00:33:11.630><c> here</c><00:33:11.900><c> and</c><00:33:12.080><c> I</c><00:33:13.070><c> just</c><00:33:13.250><c> want</c><00:33:13.370><c> to</c><00:33:13.460><c> tell</c><00:33:13.610><c> it</c>

00:33:13.720 --> 00:33:13.730 align:start position:0%
handler here and I just want to tell it
 

00:33:13.730 --> 00:33:15.220 align:start position:0%
handler here and I just want to tell it
in<00:33:13.820><c> this</c><00:33:13.940><c> case</c><00:33:14.120><c> to</c><00:33:14.420><c> treat</c><00:33:14.750><c> everything</c><00:33:14.990><c> as</c><00:33:15.170><c> a</c>

00:33:15.220 --> 00:33:15.230 align:start position:0%
in this case to treat everything as a
 

00:33:15.230 --> 00:33:16.990 align:start position:0%
in this case to treat everything as a
string<00:33:15.530><c> and</c><00:33:15.800><c> thank</c><00:33:16.309><c> for</c><00:33:16.400><c> there's</c><00:33:16.610><c> a</c><00:33:16.670><c> building</c>

00:33:16.990 --> 00:33:17.000 align:start position:0%
string and thank for there's a building
 

00:33:17.000 --> 00:33:20.440 align:start position:0%
string and thank for there's a building
handler<00:33:17.480><c> for</c><00:33:17.690><c> this</c><00:33:17.890><c> so</c><00:33:18.890><c> I</c><00:33:18.920><c> will</c><00:33:19.040><c> just</c><00:33:19.309><c> do</c><00:33:19.490><c> body</c>

00:33:20.440 --> 00:33:20.450 align:start position:0%
handler for this so I will just do body
 

00:33:20.450 --> 00:33:22.840 align:start position:0%
handler for this so I will just do body
handler

00:33:22.840 --> 00:33:22.850 align:start position:0%
handler
 

00:33:22.850 --> 00:33:29.440 align:start position:0%
handler
a<00:33:22.940><c> string</c><00:33:25.390><c> let's</c><00:33:26.390><c> call</c><00:33:26.630><c> this</c><00:33:26.800><c> response</c><00:33:28.450><c> and</c>

00:33:29.440 --> 00:33:29.450 align:start position:0%
a string let's call this response and
 

00:33:29.450 --> 00:33:31.510 align:start position:0%
a string let's call this response and
now<00:33:29.690><c> I</c><00:33:29.720><c> can</c><00:33:30.170><c> easily</c><00:33:30.350><c> obtain</c><00:33:30.830><c> information</c><00:33:31.220><c> from</c>

00:33:31.510 --> 00:33:31.520 align:start position:0%
now I can easily obtain information from
 

00:33:31.520 --> 00:33:33.610 align:start position:0%
now I can easily obtain information from
this<00:33:31.760><c> response</c><00:33:32.180><c> I</c><00:33:32.360><c> can</c><00:33:32.510><c> just</c><00:33:32.660><c> do</c><00:33:32.810><c> response</c>

00:33:33.610 --> 00:33:33.620 align:start position:0%
this response I can just do response
 

00:33:33.620 --> 00:33:39.220 align:start position:0%
this response I can just do response
status<00:33:34.220><c> code</c><00:33:34.490><c> 200</c><00:33:36.040><c> response</c><00:33:37.060><c> body</c><00:33:38.230><c> hello</c>

00:33:39.220 --> 00:33:39.230 align:start position:0%
status code 200 response body hello
 

00:33:39.230 --> 00:33:39.880 align:start position:0%
status code 200 response body hello
gentlemen

00:33:39.880 --> 00:33:39.890 align:start position:0%
gentlemen
 

00:33:39.890 --> 00:33:42.160 align:start position:0%
gentlemen
it<00:33:40.370><c> just</c><00:33:40.640><c> really</c><00:33:40.850><c> nice</c><00:33:41.030><c> really</c><00:33:41.750><c> clean</c><00:33:41.780><c> and</c>

00:33:42.160 --> 00:33:42.170 align:start position:0%
it just really nice really clean and
 

00:33:42.170 --> 00:33:43.870 align:start position:0%
it just really nice really clean and
it's<00:33:42.530><c> really</c><00:33:42.680><c> flexible</c><00:33:42.860><c> as</c><00:33:43.190><c> well</c><00:33:43.370><c> if</c><00:33:43.550><c> I</c><00:33:43.670><c> wanted</c>

00:33:43.870 --> 00:33:43.880 align:start position:0%
it's really flexible as well if I wanted
 

00:33:43.880 --> 00:33:45.670 align:start position:0%
it's really flexible as well if I wanted
to<00:33:43.940><c> make</c><00:33:44.120><c> this</c><00:33:44.210><c> synchronous</c><00:33:44.810><c> all</c><00:33:45.140><c> that</c><00:33:45.500><c> I</c><00:33:45.560><c> need</c>

00:33:45.670 --> 00:33:45.680 align:start position:0%
to make this synchronous all that I need
 

00:33:45.680 --> 00:33:49.390 align:start position:0%
to make this synchronous all that I need
to<00:33:45.800><c> do</c><00:33:45.920><c> is</c><00:33:46.280><c> change</c><00:33:46.610><c> this</c><00:33:46.880><c> send</c><00:33:47.840><c> a</c><00:33:48.050><c> sink</c><00:33:48.590><c> and</c>

00:33:49.390 --> 00:33:49.400 align:start position:0%
to do is change this send a sink and
 

00:33:49.400 --> 00:33:53.770 align:start position:0%
to do is change this send a sink and
this<00:33:49.610><c> would</c><00:33:49.850><c> return</c><00:33:52.240><c> completable</c><00:33:53.240><c> future</c>

00:33:53.770 --> 00:33:53.780 align:start position:0%
this would return completable future
 

00:33:53.780 --> 00:34:02.400 align:start position:0%
this would return completable future
here<00:33:54.170><c> let's</c><00:33:54.890><c> just</c><00:33:55.100><c> use</c><00:33:55.250><c> this</c><00:33:59.410><c> wait</c>

00:34:02.400 --> 00:34:02.410 align:start position:0%
here let's just use this wait
 

00:34:02.410 --> 00:34:08.930 align:start position:0%
here let's just use this wait
okay<00:34:03.520><c> one</c><00:34:04.520><c> more</c><00:34:04.700><c> time</c>

00:34:08.930 --> 00:34:08.940 align:start position:0%
 
 

00:34:08.940 --> 00:34:14.309 align:start position:0%
 
let's<00:34:09.940><c> call</c><00:34:10.149><c> this</c><00:34:10.270><c> a</c><00:34:10.329><c> response</c><00:34:11.159><c> and</c><00:34:13.139><c> yeah</c><00:34:14.139><c> that</c>

00:34:14.309 --> 00:34:14.319 align:start position:0%
let's call this a response and yeah that
 

00:34:14.319 --> 00:34:17.579 align:start position:0%
let's call this a response and yeah that
looks<00:34:14.500><c> good</c><00:34:14.649><c> actually</c><00:34:15.510><c> and</c><00:34:16.510><c> now</c><00:34:17.079><c> this</c><00:34:17.290><c> gives</c>

00:34:17.579 --> 00:34:17.589 align:start position:0%
looks good actually and now this gives
 

00:34:17.589 --> 00:34:19.049 align:start position:0%
looks good actually and now this gives
me<00:34:17.740><c> a</c><00:34:17.770><c> computable</c><00:34:18.190><c> feature</c><00:34:18.460><c> we've</c><00:34:18.790><c> seen</c><00:34:19.000><c> this</c>

00:34:19.049 --> 00:34:19.059 align:start position:0%
me a computable feature we've seen this
 

00:34:19.059 --> 00:34:22.260 align:start position:0%
me a computable feature we've seen this
API<00:34:19.359><c> before</c><00:34:19.899><c> so</c><00:34:20.829><c> I</c><00:34:20.889><c> can</c><00:34:21.040><c> just</c><00:34:21.159><c> call</c><00:34:21.339><c> it</c><00:34:21.460><c> cat</c><00:34:21.669><c> and</c>

00:34:22.260 --> 00:34:22.270 align:start position:0%
API before so I can just call it cat and
 

00:34:22.270 --> 00:34:26.669 align:start position:0%
API before so I can just call it cat and
then<00:34:22.960><c> body</c><00:34:23.970><c> here</c><00:34:24.970><c> it</c><00:34:25.059><c> is</c><00:34:25.210><c> I</c><00:34:25.419><c> think</c><00:34:25.809><c> as</c><00:34:26.079><c> I</c><00:34:26.349><c> watch</c>

00:34:26.669 --> 00:34:26.679 align:start position:0%
then body here it is I think as I watch
 

00:34:26.679 --> 00:34:30.569 align:start position:0%
then body here it is I think as I watch
all<00:34:26.829><c> one</c><00:34:28.109><c> so</c><00:34:29.109><c> that's</c><00:34:29.379><c> really</c><00:34:29.950><c> nice</c><00:34:30.099><c> they</c><00:34:30.429><c> also</c>

00:34:30.569 --> 00:34:30.579 align:start position:0%
all one so that's really nice they also
 

00:34:30.579 --> 00:34:32.909 align:start position:0%
all one so that's really nice they also
have<00:34:30.819><c> really</c><00:34:31.059><c> nice</c><00:34:31.270><c> handling</c><00:34:31.750><c> around</c><00:34:32.319><c> TLS</c>

00:34:32.909 --> 00:34:32.919 align:start position:0%
have really nice handling around TLS
 

00:34:32.919 --> 00:34:34.649 align:start position:0%
have really nice handling around TLS
that<00:34:33.309><c> goes</c><00:34:33.490><c> way</c><00:34:33.730><c> beyond</c><00:34:34.030><c> scope</c><00:34:34.270><c> of</c><00:34:34.389><c> this</c><00:34:34.480><c> talk</c>

00:34:34.649 --> 00:34:34.659 align:start position:0%
that goes way beyond scope of this talk
 

00:34:34.659 --> 00:34:36.809 align:start position:0%
that goes way beyond scope of this talk
but<00:34:34.990><c> you</c><00:34:35.530><c> can</c><00:34:35.679><c> do</c><00:34:35.770><c> all</c><00:34:35.950><c> sorts</c><00:34:35.980><c> of</c><00:34:36.280><c> things</c><00:34:36.460><c> like</c>

00:34:36.809 --> 00:34:36.819 align:start position:0%
but you can do all sorts of things like
 

00:34:36.819 --> 00:34:40.200 align:start position:0%
but you can do all sorts of things like
managing<00:34:38.099><c> certificates</c><00:34:39.099><c> and</c><00:34:39.250><c> all</c><00:34:39.369><c> that</c><00:34:39.579><c> you</c>

00:34:40.200 --> 00:34:40.210 align:start position:0%
managing certificates and all that you
 

00:34:40.210 --> 00:34:42.960 align:start position:0%
managing certificates and all that you
know<00:34:40.299><c> very</c><00:34:40.480><c> nice</c><00:34:40.629><c> way</c><00:34:40.889><c> and</c><00:34:41.889><c> that's</c><00:34:42.639><c> basically</c>

00:34:42.960 --> 00:34:42.970 align:start position:0%
know very nice way and that's basically
 

00:34:42.970 --> 00:34:44.970 align:start position:0%
know very nice way and that's basically
it<00:34:43.089><c> that's</c><00:34:43.540><c> the</c><00:34:43.780><c> overview</c><00:34:43.990><c> of</c><00:34:44.530><c> my</c><00:34:44.679><c> favorite</c>

00:34:44.970 --> 00:34:44.980 align:start position:0%
it that's the overview of my favorite
 

00:34:44.980 --> 00:34:47.970 align:start position:0%
it that's the overview of my favorite
API<00:34:45.250><c> is</c><00:34:45.339><c> in</c><00:34:45.429><c> Java</c><00:34:45.700><c> 9</c><00:34:45.849><c> so</c><00:34:46.569><c> I</c><00:34:46.899><c> hope</c><00:34:47.260><c> you</c><00:34:47.829><c> found</c>

00:34:47.970 --> 00:34:47.980 align:start position:0%
API is in Java 9 so I hope you found
 

00:34:47.980 --> 00:34:48.750 align:start position:0%
API is in Java 9 so I hope you found
this<00:34:48.129><c> interesting</c>

00:34:48.750 --> 00:34:48.760 align:start position:0%
this interesting
 

00:34:48.760 --> 00:34:50.909 align:start position:0%
this interesting
before<00:34:49.599><c> we</c><00:34:49.720><c> go</c><00:34:49.929><c> since</c><00:34:50.349><c> I</c><00:34:50.409><c> don't</c><00:34:50.589><c> have</c><00:34:50.740><c> any</c>

00:34:50.909 --> 00:34:50.919 align:start position:0%
before we go since I don't have any
 

00:34:50.919 --> 00:34:52.919 align:start position:0%
before we go since I don't have any
slides<00:34:51.099><c> I</c><00:34:51.669><c> will</c><00:34:52.030><c> just</c><00:34:52.210><c> save</c><00:34:52.450><c> this</c><00:34:52.659><c> session</c>

00:34:52.919 --> 00:34:52.929 align:start position:0%
slides I will just save this session
 

00:34:52.929 --> 00:34:55.440 align:start position:0%
slides I will just save this session
save<00:34:53.710><c> the</c><00:34:53.829><c> history</c><00:34:54.159><c> of</c><00:34:54.250><c> this</c><00:34:54.399><c> session</c><00:34:54.609><c> to</c><00:34:55.419><c> a</c>

00:34:55.440 --> 00:34:55.450 align:start position:0%
save the history of this session to a
 

00:34:55.450 --> 00:35:01.530 align:start position:0%
save the history of this session to a
file<00:34:56.609><c> let's</c><00:34:57.609><c> say</c><00:34:58.140><c> backup</c><00:34:59.140><c> J</c><00:34:59.890><c> shell</c><00:35:00.130><c> and</c><00:35:00.430><c> I</c><00:35:01.390><c> can</c>

00:35:01.530 --> 00:35:01.540 align:start position:0%
file let's say backup J shell and I can
 

00:35:01.540 --> 00:35:02.849 align:start position:0%
file let's say backup J shell and I can
post<00:35:01.690><c> this</c><00:35:01.750><c> video</c><00:35:02.079><c> later</c><00:35:02.319><c> if</c><00:35:02.559><c> you</c><00:35:02.650><c> want</c><00:35:02.770><c> to</c>

00:35:02.849 --> 00:35:02.859 align:start position:0%
post this video later if you want to
 

00:35:02.859 --> 00:35:05.579 align:start position:0%
post this video later if you want to
come<00:35:03.069><c> back</c><00:35:03.220><c> to</c><00:35:03.369><c> some</c><00:35:03.490><c> of</c><00:35:03.520><c> these</c><00:35:03.670><c> examples</c><00:35:04.589><c> and</c>

00:35:05.579 --> 00:35:05.589 align:start position:0%
come back to some of these examples and
 

00:35:05.589 --> 00:35:10.140 align:start position:0%
come back to some of these examples and
that's<00:35:06.309><c> pretty</c><00:35:06.490><c> much</c><00:35:06.609><c> it</c><00:35:06.849><c> so</c><00:35:07.349><c> we're</c><00:35:08.940><c> close</c><00:35:09.940><c> to</c>

00:35:10.140 --> 00:35:10.150 align:start position:0%
that's pretty much it so we're close to
 

00:35:10.150 --> 00:35:11.609 align:start position:0%
that's pretty much it so we're close to
running<00:35:10.270><c> out</c><00:35:10.450><c> of</c><00:35:10.480><c> time</c><00:35:10.720><c> but</c><00:35:11.109><c> we</c><00:35:11.290><c> have</c><00:35:11.380><c> some</c>

00:35:11.609 --> 00:35:11.619 align:start position:0%
running out of time but we have some
 

00:35:11.619 --> 00:35:13.470 align:start position:0%
running out of time but we have some
time<00:35:11.740><c> for</c><00:35:11.799><c> questions</c><00:35:12.099><c> but</c><00:35:12.730><c> regardless</c><00:35:13.150><c> I'll</c>

00:35:13.470 --> 00:35:13.480 align:start position:0%
time for questions but regardless I'll
 

00:35:13.480 --> 00:35:15.750 align:start position:0%
time for questions but regardless I'll
be<00:35:13.599><c> around</c><00:35:13.839><c> until</c><00:35:14.020><c> the</c><00:35:14.200><c> next</c><00:35:14.349><c> talk</c><00:35:14.559><c> starts</c><00:35:14.980><c> so</c>

00:35:15.750 --> 00:35:15.760 align:start position:0%
be around until the next talk starts so
 

00:35:15.760 --> 00:35:19.160 align:start position:0%
be around until the next talk starts so
thank<00:35:16.510><c> you</c><00:35:16.690><c> and</c><00:35:16.900><c> enjoy</c><00:35:17.200><c> the</c><00:35:17.589><c> rest</c><00:35:17.710><c> of</c><00:35:17.920><c> Taiwan</c>

00:35:19.160 --> 00:35:19.170 align:start position:0%
thank you and enjoy the rest of Taiwan
 

00:35:19.170 --> 00:35:23.769 align:start position:0%
thank you and enjoy the rest of Taiwan
[Applause]

