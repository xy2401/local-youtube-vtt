WEBVTT
Kind: captions
Language: en

00:00:03.149 --> 00:00:06.049 align:start position:0%
 
so<00:00:03.929><c> thank</c><00:00:04.319><c> you</c><00:00:04.500><c> for</c><00:00:04.859><c> attending</c><00:00:05.850><c> this</c>

00:00:06.049 --> 00:00:06.059 align:start position:0%
so thank you for attending this
 

00:00:06.059 --> 00:00:08.539 align:start position:0%
so thank you for attending this
presentation<00:00:06.560><c> not</c><00:00:07.560><c> quite</c><00:00:07.890><c> as</c><00:00:08.100><c> early</c><00:00:08.430><c> as</c>

00:00:08.539 --> 00:00:08.549 align:start position:0%
presentation not quite as early as
 

00:00:08.549 --> 00:00:10.250 align:start position:0%
presentation not quite as early as
Stuart's<00:00:09.059><c> presentation</c><00:00:09.809><c> earlier</c><00:00:09.930><c> actually</c>

00:00:10.250 --> 00:00:10.260 align:start position:0%
Stuart's presentation earlier actually
 

00:00:10.260 --> 00:00:11.720 align:start position:0%
Stuart's presentation earlier actually
curiously<00:00:10.920><c> how</c><00:00:11.070><c> many</c><00:00:11.219><c> people</c><00:00:11.519><c> were</c><00:00:11.610><c> in</c>

00:00:11.720 --> 00:00:11.730 align:start position:0%
curiously how many people were in
 

00:00:11.730 --> 00:00:13.579 align:start position:0%
curiously how many people were in
Stuart's<00:00:12.150><c> presentation</c><00:00:12.900><c> earlier</c><00:00:13.080><c> today</c><00:00:13.530><c> so</c>

00:00:13.579 --> 00:00:13.589 align:start position:0%
Stuart's presentation earlier today so
 

00:00:13.589 --> 00:00:16.159 align:start position:0%
Stuart's presentation earlier today so
okay<00:00:14.070><c> quite</c><00:00:14.969><c> a</c><00:00:15.000><c> few</c><00:00:15.240><c> so</c><00:00:15.420><c> we</c><00:00:15.540><c> can</c><00:00:15.690><c> compare</c><00:00:16.139><c> notes</c>

00:00:16.159 --> 00:00:16.169 align:start position:0%
okay quite a few so we can compare notes
 

00:00:16.169 --> 00:00:20.600 align:start position:0%
okay quite a few so we can compare notes
afterwards<00:00:17.360><c> okay</c><00:00:19.220><c> so</c><00:00:20.220><c> there's</c><00:00:20.460><c> the</c>

00:00:20.600 --> 00:00:20.610 align:start position:0%
afterwards okay so there's the
 

00:00:20.610 --> 00:00:23.690 align:start position:0%
afterwards okay so there's the
obligatory<00:00:20.810><c> legal</c><00:00:21.810><c> statement</c><00:00:22.369><c> so</c><00:00:23.369><c> what</c><00:00:23.520><c> am</c><00:00:23.640><c> I</c>

00:00:23.690 --> 00:00:23.700 align:start position:0%
obligatory legal statement so what am I
 

00:00:23.700 --> 00:00:25.519 align:start position:0%
obligatory legal statement so what am I
going<00:00:23.849><c> to</c><00:00:23.910><c> talk</c><00:00:24.149><c> today</c><00:00:24.329><c> about</c><00:00:24.509><c> today</c><00:00:25.230><c> so</c><00:00:25.290><c> I'm</c>

00:00:25.519 --> 00:00:25.529 align:start position:0%
going to talk today about today so I'm
 

00:00:25.529 --> 00:00:28.040 align:start position:0%
going to talk today about today so I'm
gonna<00:00:25.680><c> do</c><00:00:26.460><c> a</c><00:00:26.489><c> bit</c><00:00:26.700><c> of</c><00:00:26.790><c> a</c><00:00:26.880><c> recap</c><00:00:27.419><c> on</c><00:00:27.779><c> the</c>

00:00:28.040 --> 00:00:28.050 align:start position:0%
gonna do a bit of a recap on the
 

00:00:28.050 --> 00:00:30.740 align:start position:0%
gonna do a bit of a recap on the
unmodifiable<00:00:28.950><c> collections</c><00:00:29.669><c> in</c><00:00:29.849><c> the</c><00:00:29.880><c> JDK</c><00:00:30.450><c> just</c>

00:00:30.740 --> 00:00:30.750 align:start position:0%
unmodifiable collections in the JDK just
 

00:00:30.750 --> 00:00:32.560 align:start position:0%
unmodifiable collections in the JDK just
to<00:00:30.869><c> say</c><00:00:31.050><c> what</c><00:00:31.200><c> we</c><00:00:31.290><c> have</c><00:00:31.469><c> there</c><00:00:31.739><c> at</c><00:00:31.890><c> the</c><00:00:32.009><c> moment</c>

00:00:32.560 --> 00:00:32.570 align:start position:0%
to say what we have there at the moment
 

00:00:32.570 --> 00:00:35.889 align:start position:0%
to say what we have there at the moment
I'm<00:00:33.570><c> gonna</c><00:00:33.989><c> give</c><00:00:34.170><c> a</c><00:00:34.200><c> brief</c><00:00:34.739><c> overview</c><00:00:35.040><c> of</c>

00:00:35.889 --> 00:00:35.899 align:start position:0%
I'm gonna give a brief overview of
 

00:00:35.899 --> 00:00:38.750 align:start position:0%
I'm gonna give a brief overview of
immutable<00:00:36.899><c> collections</c><00:00:37.410><c> in</c><00:00:37.739><c> external</c><00:00:38.280><c> Java</c>

00:00:38.750 --> 00:00:38.760 align:start position:0%
immutable collections in external Java
 

00:00:38.760 --> 00:00:43.160 align:start position:0%
immutable collections in external Java
libraries<00:00:39.300><c> and</c><00:00:39.660><c> JVM</c><00:00:40.379><c> based</c><00:00:40.739><c> platforms</c><00:00:42.170><c> and</c>

00:00:43.160 --> 00:00:43.170 align:start position:0%
libraries and JVM based platforms and
 

00:00:43.170 --> 00:00:44.720 align:start position:0%
libraries and JVM based platforms and
then<00:00:43.499><c> I'm</c><00:00:43.620><c> going</c><00:00:43.739><c> to</c><00:00:43.800><c> talk</c><00:00:43.949><c> about</c><00:00:44.100><c> immutable</c>

00:00:44.720 --> 00:00:44.730 align:start position:0%
then I'm going to talk about immutable
 

00:00:44.730 --> 00:00:46.669 align:start position:0%
then I'm going to talk about immutable
collections<00:00:45.210><c> leveraging</c><00:00:45.809><c> persistent</c><00:00:46.469><c> data</c>

00:00:46.669 --> 00:00:46.679 align:start position:0%
collections leveraging persistent data
 

00:00:46.679 --> 00:00:48.590 align:start position:0%
collections leveraging persistent data
structures<00:00:47.339><c> so</c><00:00:48.030><c> when</c><00:00:48.179><c> I</c><00:00:48.210><c> refer</c><00:00:48.570><c> to</c>

00:00:48.590 --> 00:00:48.600 align:start position:0%
structures so when I refer to
 

00:00:48.600 --> 00:00:51.560 align:start position:0%
structures so when I refer to
persistence<00:00:49.230><c> I</c><00:00:49.440><c> do</c><00:00:50.129><c> not</c><00:00:50.280><c> mean</c><00:00:50.519><c> database</c><00:00:51.120><c> in</c>

00:00:51.560 --> 00:00:51.570 align:start position:0%
persistence I do not mean database in
 

00:00:51.570 --> 00:00:54.259 align:start position:0%
persistence I do not mean database in
any<00:00:51.780><c> way</c><00:00:51.960><c> whatsoever</c><00:00:52.230><c> or</c><00:00:53.089><c> persisting</c><00:00:54.089><c> to</c>

00:00:54.259 --> 00:00:54.269 align:start position:0%
any way whatsoever or persisting to
 

00:00:54.269 --> 00:00:55.880 align:start position:0%
any way whatsoever or persisting to
non-volatile<00:00:54.899><c> memory</c><00:00:54.960><c> or</c><00:00:55.530><c> any</c><00:00:55.649><c> of</c><00:00:55.800><c> those</c>

00:00:55.880 --> 00:00:55.890 align:start position:0%
non-volatile memory or any of those
 

00:00:55.890 --> 00:00:58.069 align:start position:0%
non-volatile memory or any of those
things<00:00:56.129><c> it's</c><00:00:56.370><c> a</c><00:00:56.460><c> very</c><00:00:56.609><c> confusing</c><00:00:56.819><c> term</c><00:00:57.449><c> but</c>

00:00:58.069 --> 00:00:58.079 align:start position:0%
things it's a very confusing term but
 

00:00:58.079 --> 00:00:59.930 align:start position:0%
things it's a very confusing term but
persistence<00:00:58.679><c> is</c><00:00:58.920><c> sometimes</c><00:00:59.339><c> easier</c><00:00:59.789><c> to</c>

00:00:59.930 --> 00:00:59.940 align:start position:0%
persistence is sometimes easier to
 

00:00:59.940 --> 00:01:02.329 align:start position:0%
persistence is sometimes easier to
understand<00:01:00.480><c> than</c><00:01:00.659><c> immutable</c><00:01:01.379><c> when</c><00:01:01.559><c> people</c>

00:01:02.329 --> 00:01:02.339 align:start position:0%
understand than immutable when people
 

00:01:02.339 --> 00:01:04.640 align:start position:0%
understand than immutable when people
hear<00:01:02.550><c> mutable</c><00:01:03.149><c> and</c><00:01:03.390><c> immutable</c><00:01:03.539><c> and</c><00:01:04.199><c> they</c>

00:01:04.640 --> 00:01:04.650 align:start position:0%
hear mutable and immutable and they
 

00:01:04.650 --> 00:01:06.440 align:start position:0%
hear mutable and immutable and they
can't<00:01:04.860><c> differentiate</c><00:01:05.309><c> between</c><00:01:05.610><c> the</c><00:01:06.000><c> two</c><00:01:06.030><c> so</c>

00:01:06.440 --> 00:01:06.450 align:start position:0%
can't differentiate between the two so
 

00:01:06.450 --> 00:01:07.910 align:start position:0%
can't differentiate between the two so
sometimes<00:01:06.870><c> people</c><00:01:07.200><c> refer</c><00:01:07.320><c> to</c><00:01:07.530><c> these</c><00:01:07.740><c> as</c>

00:01:07.910 --> 00:01:07.920 align:start position:0%
sometimes people refer to these as
 

00:01:07.920 --> 00:01:09.620 align:start position:0%
sometimes people refer to these as
persistent<00:01:08.520><c> collections</c><00:01:09.030><c> rather</c><00:01:09.390><c> than</c>

00:01:09.620 --> 00:01:09.630 align:start position:0%
persistent collections rather than
 

00:01:09.630 --> 00:01:14.780 align:start position:0%
persistent collections rather than
immutable<00:01:10.470><c> collections</c><00:01:12.950><c> so</c><00:01:13.950><c> when</c><00:01:14.100><c> I</c><00:01:14.130><c> refer</c><00:01:14.370><c> to</c>

00:01:14.780 --> 00:01:14.790 align:start position:0%
immutable collections so when I refer to
 

00:01:14.790 --> 00:01:16.400 align:start position:0%
immutable collections so when I refer to
these<00:01:14.910><c> immutable</c><00:01:15.390><c> collections</c><00:01:15.870><c> I'm</c><00:01:16.080><c> making</c>

00:01:16.400 --> 00:01:16.410 align:start position:0%
these immutable collections I'm making
 

00:01:16.410 --> 00:01:18.530 align:start position:0%
these immutable collections I'm making
no<00:01:16.590><c> claims</c><00:01:16.920><c> whatsoever</c><00:01:17.640><c> as</c><00:01:17.910><c> to</c><00:01:17.940><c> the</c>

00:01:18.530 --> 00:01:18.540 align:start position:0%
no claims whatsoever as to the
 

00:01:18.540 --> 00:01:20.720 align:start position:0%
no claims whatsoever as to the
immutability<00:01:19.140><c> of</c><00:01:19.380><c> the</c><00:01:19.770><c> collections</c><00:01:20.220><c> element</c>

00:01:20.720 --> 00:01:20.730 align:start position:0%
immutability of the collections element
 

00:01:20.730 --> 00:01:23.090 align:start position:0%
immutability of the collections element
so<00:01:21.060><c> I'm</c><00:01:21.210><c> not</c><00:01:21.420><c> talking</c><00:01:21.900><c> about</c><00:01:21.960><c> immutability</c><00:01:22.470><c> in</c>

00:01:23.090 --> 00:01:23.100 align:start position:0%
so I'm not talking about immutability in
 

00:01:23.100 --> 00:01:26.090 align:start position:0%
so I'm not talking about immutability in
the<00:01:23.250><c> large</c><00:01:23.490><c> in</c><00:01:23.910><c> the</c><00:01:24.480><c> language</c><00:01:25.050><c> or</c><00:01:25.380><c> forcing</c>

00:01:26.090 --> 00:01:26.100 align:start position:0%
the large in the language or forcing
 

00:01:26.100 --> 00:01:27.980 align:start position:0%
the large in the language or forcing
immutability<00:01:26.520><c> all</c><00:01:26.880><c> the</c><00:01:27.180><c> way</c><00:01:27.300><c> down</c><00:01:27.540><c> deeply</c>

00:01:27.980 --> 00:01:27.990 align:start position:0%
immutability all the way down deeply
 

00:01:27.990 --> 00:01:29.570 align:start position:0%
immutability all the way down deeply
into<00:01:28.320><c> these</c><00:01:28.470><c> structures</c><00:01:28.830><c> I'm</c><00:01:29.100><c> just</c><00:01:29.310><c> talking</c>

00:01:29.570 --> 00:01:29.580 align:start position:0%
into these structures I'm just talking
 

00:01:29.580 --> 00:01:30.920 align:start position:0%
into these structures I'm just talking
about<00:01:29.760><c> the</c><00:01:29.880><c> collection</c><00:01:30.060><c> structures</c>

00:01:30.920 --> 00:01:30.930 align:start position:0%
about the collection structures
 

00:01:30.930 --> 00:01:33.620 align:start position:0%
about the collection structures
themselves<00:01:31.260><c> this</c><00:01:31.950><c> is</c><00:01:32.100><c> a</c><00:01:32.130><c> huge</c><00:01:32.610><c> bike</c><00:01:32.910><c> shed</c><00:01:33.210><c> area</c>

00:01:33.620 --> 00:01:33.630 align:start position:0%
themselves this is a huge bike shed area
 

00:01:33.630 --> 00:01:35.720 align:start position:0%
themselves this is a huge bike shed area
you<00:01:34.110><c> can</c><00:01:34.260><c> talk</c><00:01:34.440><c> about</c><00:01:34.710><c> this</c><00:01:34.890><c> for</c><00:01:35.160><c> months</c><00:01:35.370><c> and</c>

00:01:35.720 --> 00:01:35.730 align:start position:0%
you can talk about this for months and
 

00:01:35.730 --> 00:01:37.730 align:start position:0%
you can talk about this for months and
months<00:01:35.820><c> and</c><00:01:36.270><c> months</c><00:01:36.330><c> and</c><00:01:36.690><c> months</c><00:01:36.750><c> so</c><00:01:37.530><c> I'm</c><00:01:37.590><c> just</c>

00:01:37.730 --> 00:01:37.740 align:start position:0%
months and months and months so I'm just
 

00:01:37.740 --> 00:01:40.220 align:start position:0%
months and months and months so I'm just
trying<00:01:37.980><c> to</c><00:01:38.040><c> arrange</c><00:01:38.520><c> sort</c><00:01:38.970><c> of</c><00:01:39.030><c> enclose</c><00:01:39.990><c> the</c>

00:01:40.220 --> 00:01:40.230 align:start position:0%
trying to arrange sort of enclose the
 

00:01:40.230 --> 00:01:42.200 align:start position:0%
trying to arrange sort of enclose the
scope<00:01:40.530><c> in</c><00:01:40.740><c> just</c><00:01:40.980><c> two</c><00:01:41.100><c> collections</c><00:01:41.430><c> for</c><00:01:42.030><c> this</c>

00:01:42.200 --> 00:01:42.210 align:start position:0%
scope in just two collections for this
 

00:01:42.210 --> 00:01:47.540 align:start position:0%
scope in just two collections for this
for<00:01:42.510><c> this</c><00:01:42.630><c> talk</c><00:01:44.060><c> so</c><00:01:45.060><c> as</c><00:01:45.210><c> there</c><00:01:45.600><c> is</c><00:01:45.810><c> a</c><00:01:45.840><c> huge</c><00:01:46.740><c> set</c>

00:01:47.540 --> 00:01:47.550 align:start position:0%
for this talk so as there is a huge set
 

00:01:47.550 --> 00:01:50.660 align:start position:0%
for this talk so as there is a huge set
of<00:01:47.580><c> advantages</c><00:01:47.970><c> to</c><00:01:48.360><c> being</c><00:01:49.110><c> immutable</c><00:01:49.830><c> I</c><00:01:50.010><c> think</c>

00:01:50.660 --> 00:01:50.670 align:start position:0%
of advantages to being immutable I think
 

00:01:50.670 --> 00:01:53.420 align:start position:0%
of advantages to being immutable I think
the<00:01:50.760><c> first</c><00:01:50.940><c> fit</c><00:01:51.180><c> occurs</c><00:01:51.480><c> to</c><00:01:51.690><c> me</c><00:01:51.870><c> is</c><00:01:52.080><c> if</c><00:01:53.040><c> I</c><00:01:53.250><c> don't</c>

00:01:53.420 --> 00:01:53.430 align:start position:0%
the first fit occurs to me is if I don't
 

00:01:53.430 --> 00:01:55.280 align:start position:0%
the first fit occurs to me is if I don't
have<00:01:53.550><c> to</c><00:01:53.670><c> think</c><00:01:53.790><c> about</c><00:01:53.970><c> data</c><00:01:54.330><c> racers</c><00:01:54.930><c> I'm</c><00:01:55.230><c> a</c>

00:01:55.280 --> 00:01:55.290 align:start position:0%
have to think about data racers I'm a
 

00:01:55.290 --> 00:01:57.290 align:start position:0%
have to think about data racers I'm a
happy<00:01:55.710><c> person</c><00:01:55.740><c> if</c><00:01:56.580><c> I</c><00:01:56.760><c> have</c><00:01:56.910><c> to</c><00:01:57.030><c> think</c><00:01:57.150><c> about</c>

00:01:57.290 --> 00:01:57.300 align:start position:0%
happy person if I have to think about
 

00:01:57.300 --> 00:02:00.590 align:start position:0%
happy person if I have to think about
data<00:01:57.660><c> racers</c><00:01:58.230><c> I</c><00:01:58.530><c> get</c><00:01:58.800><c> a</c><00:01:58.830><c> headache</c><00:01:59.100><c> it's</c><00:01:59.910><c> if</c>

00:02:00.590 --> 00:02:00.600 align:start position:0%
data racers I get a headache it's if
 

00:02:00.600 --> 00:02:02.660 align:start position:0%
data racers I get a headache it's if
you're<00:02:00.990><c> dealing</c><00:02:01.290><c> with</c><00:02:01.350><c> concurrent</c><00:02:01.980><c> stuff</c><00:02:02.310><c> and</c>

00:02:02.660 --> 00:02:02.670 align:start position:0%
you're dealing with concurrent stuff and
 

00:02:02.670 --> 00:02:04.610 align:start position:0%
you're dealing with concurrent stuff and
you<00:02:03.300><c> know</c><00:02:03.510><c> that</c><00:02:03.750><c> what</c><00:02:04.170><c> you're</c><00:02:04.290><c> dealing</c><00:02:04.470><c> with</c>

00:02:04.610 --> 00:02:04.620 align:start position:0%
you know that what you're dealing with
 

00:02:04.620 --> 00:02:07.280 align:start position:0%
you know that what you're dealing with
is<00:02:04.830><c> immutable</c><00:02:05.130><c> you</c><00:02:06.090><c> can</c><00:02:06.240><c> safely</c><00:02:06.660><c> trust</c><00:02:07.080><c> that</c>

00:02:07.280 --> 00:02:07.290 align:start position:0%
is immutable you can safely trust that
 

00:02:07.290 --> 00:02:09.229 align:start position:0%
is immutable you can safely trust that
and<00:02:07.620><c> you</c><00:02:07.800><c> can</c><00:02:07.980><c> understand</c><00:02:08.519><c> that</c><00:02:08.729><c> and</c><00:02:08.940><c> that's</c><00:02:09.119><c> a</c>

00:02:09.229 --> 00:02:09.239 align:start position:0%
and you can understand that and that's a
 

00:02:09.239 --> 00:02:11.059 align:start position:0%
and you can understand that and that's a
lot<00:02:09.450><c> clearer</c><00:02:09.840><c> but</c><00:02:10.349><c> having</c><00:02:10.619><c> to</c><00:02:10.709><c> deal</c><00:02:10.860><c> with</c>

00:02:11.059 --> 00:02:11.069 align:start position:0%
lot clearer but having to deal with
 

00:02:11.069 --> 00:02:12.530 align:start position:0%
lot clearer but having to deal with
sometimes<00:02:11.249><c> with</c><00:02:11.609><c> data</c><00:02:11.849><c> races</c><00:02:12.150><c> and</c><00:02:12.450><c> the</c>

00:02:12.530 --> 00:02:12.540 align:start position:0%
sometimes with data races and the
 

00:02:12.540 --> 00:02:14.320 align:start position:0%
sometimes with data races and the
headaches<00:02:12.870><c> and</c><00:02:13.049><c> debugging</c><00:02:13.590><c> that</c><00:02:13.739><c> actually</c>

00:02:14.320 --> 00:02:14.330 align:start position:0%
headaches and debugging that actually
 

00:02:14.330 --> 00:02:17.200 align:start position:0%
headaches and debugging that actually
that<00:02:14.750><c> that's</c><00:02:15.500><c> a</c><00:02:15.590><c> huge</c><00:02:15.860><c> advantage</c><00:02:16.030><c> it's</c><00:02:17.030><c> also</c>

00:02:17.200 --> 00:02:17.210 align:start position:0%
that that's a huge advantage it's also
 

00:02:17.210 --> 00:02:19.330 align:start position:0%
that that's a huge advantage it's also
if<00:02:17.390><c> you</c><00:02:17.480><c> have</c><00:02:17.690><c> things</c><00:02:18.410><c> for</c><00:02:18.620><c> their</c><00:02:18.740><c> immutable</c>

00:02:19.330 --> 00:02:19.340 align:start position:0%
if you have things for their immutable
 

00:02:19.340 --> 00:02:22.930 align:start position:0%
if you have things for their immutable
and<00:02:19.520><c> are</c><00:02:20.420><c> trusted</c><00:02:21.320><c> to</c><00:02:21.500><c> be</c><00:02:21.530><c> immutable</c><00:02:21.980><c> you</c><00:02:22.730><c> know</c>

00:02:22.930 --> 00:02:22.940 align:start position:0%
and are trusted to be immutable you know
 

00:02:22.940 --> 00:02:24.670 align:start position:0%
and are trusted to be immutable you know
that<00:02:23.150><c> nothing</c><00:02:23.480><c> else</c><00:02:23.600><c> can</c><00:02:23.780><c> scratch</c><00:02:24.140><c> on</c><00:02:24.470><c> them</c>

00:02:24.670 --> 00:02:24.680 align:start position:0%
that nothing else can scratch on them
 

00:02:24.680 --> 00:02:27.220 align:start position:0%
that nothing else can scratch on them
either<00:02:25.130><c> on</c><00:02:25.370><c> purpose</c><00:02:25.750><c> maliciously</c><00:02:26.750><c> or</c><00:02:27.050><c> by</c>

00:02:27.220 --> 00:02:27.230 align:start position:0%
either on purpose maliciously or by
 

00:02:27.230 --> 00:02:29.950 align:start position:0%
either on purpose maliciously or by
accident<00:02:27.620><c> and</c><00:02:27.920><c> that's</c><00:02:28.700><c> a</c><00:02:28.850><c> nice</c><00:02:29.030><c> property</c><00:02:29.660><c> as</c>

00:02:29.950 --> 00:02:29.960 align:start position:0%
accident and that's a nice property as
 

00:02:29.960 --> 00:02:32.880 align:start position:0%
accident and that's a nice property as
well<00:02:30.170><c> so</c><00:02:30.500><c> if</c><00:02:30.560><c> a</c><00:02:30.650><c> library</c><00:02:31.130><c> that</c><00:02:31.310><c> you're</c><00:02:31.880><c> using</c>

00:02:32.880 --> 00:02:32.890 align:start position:0%
well so if a library that you're using
 

00:02:32.890 --> 00:02:35.980 align:start position:0%
well so if a library that you're using
uses<00:02:33.890><c> these</c><00:02:34.070><c> data</c><00:02:34.670><c> structures</c><00:02:35.330><c> you</c><00:02:35.720><c> know</c><00:02:35.930><c> you</c>

00:02:35.980 --> 00:02:35.990 align:start position:0%
uses these data structures you know you
 

00:02:35.990 --> 00:02:40.390 align:start position:0%
uses these data structures you know you
can<00:02:36.290><c> trust</c><00:02:36.590><c> this</c><00:02:36.770><c> library</c><00:02:39.130><c> and</c><00:02:40.130><c> they</c><00:02:40.220><c> have</c><00:02:40.370><c> a</c>

00:02:40.390 --> 00:02:40.400 align:start position:0%
can trust this library and they have a
 

00:02:40.400 --> 00:02:41.830 align:start position:0%
can trust this library and they have a
bunch<00:02:40.670><c> of</c><00:02:40.850><c> properties</c><00:02:41.330><c> in</c><00:02:41.480><c> terms</c><00:02:41.630><c> of</c>

00:02:41.830 --> 00:02:41.840 align:start position:0%
bunch of properties in terms of
 

00:02:41.840 --> 00:02:43.630 align:start position:0%
bunch of properties in terms of
optimization<00:02:42.260><c> they're</c><00:02:42.890><c> effectively</c>

00:02:43.630 --> 00:02:43.640 align:start position:0%
optimization they're effectively
 

00:02:43.640 --> 00:02:46.090 align:start position:0%
optimization they're effectively
constant<00:02:44.320><c> so</c><00:02:45.320><c> that</c><00:02:45.350><c> gives</c><00:02:45.800><c> a</c><00:02:45.860><c> lot</c><00:02:45.980><c> of</c>

00:02:46.090 --> 00:02:46.100 align:start position:0%
constant so that gives a lot of
 

00:02:46.100 --> 00:02:48.070 align:start position:0%
constant so that gives a lot of
opportunities<00:02:46.730><c> for</c><00:02:46.760><c> the</c><00:02:47.180><c> rajah</c><00:02:47.480><c> the</c><00:02:47.540><c> run</c><00:02:47.810><c> time</c>

00:02:48.070 --> 00:02:48.080 align:start position:0%
opportunities for the rajah the run time
 

00:02:48.080 --> 00:02:50.890 align:start position:0%
opportunities for the rajah the run time
hotspot<00:02:48.710><c> to</c><00:02:49.520><c> optimize</c><00:02:50.000><c> these</c><00:02:50.240><c> things</c><00:02:50.600><c> and</c>

00:02:50.890 --> 00:02:50.900 align:start position:0%
hotspot to optimize these things and
 

00:02:50.900 --> 00:02:52.990 align:start position:0%
hotspot to optimize these things and
treat<00:02:51.110><c> them</c><00:02:51.260><c> as</c><00:02:51.350><c> constants</c><00:02:52.010><c> in</c><00:02:52.370><c> line</c><00:02:52.700><c> and</c><00:02:52.880><c> our</c>

00:02:52.990 --> 00:02:53.000 align:start position:0%
treat them as constants in line and our
 

00:02:53.000 --> 00:02:56.140 align:start position:0%
treat them as constants in line and our
constant<00:02:53.480><c> fold</c><00:02:53.810><c> them</c><00:02:54.020><c> when</c><00:02:54.200><c> generating</c><00:02:55.150><c> when</c>

00:02:56.140 --> 00:02:56.150 align:start position:0%
constant fold them when generating when
 

00:02:56.150 --> 00:02:59.320 align:start position:0%
constant fold them when generating when
hotspot<00:02:56.630><c> generates</c><00:02:57.080><c> hot</c><00:02:57.410><c> hot</c><00:02:58.250><c> little</c><00:02:58.970><c> bits</c><00:02:59.180><c> of</c>

00:02:59.320 --> 00:02:59.330 align:start position:0%
hotspot generates hot hot little bits of
 

00:02:59.330 --> 00:03:02.020 align:start position:0%
hotspot generates hot hot little bits of
code<00:02:59.630><c> that</c><00:02:59.930><c> are</c><00:03:00.260><c> optimized</c><00:03:00.830><c> and</c><00:03:01.130><c> they're</c><00:03:01.880><c> also</c>

00:03:02.020 --> 00:03:02.030 align:start position:0%
code that are optimized and they're also
 

00:03:02.030 --> 00:03:03.370 align:start position:0%
code that are optimized and they're also
had<00:03:02.270><c> properties</c><00:03:02.750><c> that</c><00:03:02.870><c> you</c><00:03:02.990><c> can</c><00:03:03.110><c> optimize</c>

00:03:03.370 --> 00:03:03.380 align:start position:0%
had properties that you can optimize
 

00:03:03.380 --> 00:03:06.010 align:start position:0%
had properties that you can optimize
these<00:03:03.800><c> things</c><00:03:04.100><c> in</c><00:03:04.490><c> the</c><00:03:04.910><c> java</c><00:03:05.180><c> implementations</c>

00:03:06.010 --> 00:03:06.020 align:start position:0%
these things in the java implementations
 

00:03:06.020 --> 00:03:07.780 align:start position:0%
these things in the java implementations
over<00:03:06.320><c> space</c><00:03:06.560><c> and</c><00:03:06.800><c> time</c><00:03:06.980><c> if</c><00:03:07.160><c> you</c><00:03:07.280><c> have</c><00:03:07.430><c> a</c><00:03:07.459><c> small</c>

00:03:07.780 --> 00:03:07.790 align:start position:0%
over space and time if you have a small
 

00:03:07.790 --> 00:03:09.160 align:start position:0%
over space and time if you have a small
collection<00:03:08.000><c> you</c><00:03:08.420><c> can</c><00:03:08.570><c> choose</c><00:03:08.840><c> to</c><00:03:08.990><c> use</c><00:03:09.140><c> a</c>

00:03:09.160 --> 00:03:09.170 align:start position:0%
collection you can choose to use a
 

00:03:09.170 --> 00:03:11.380 align:start position:0%
collection you can choose to use a
different<00:03:09.340><c> data</c><00:03:10.340><c> structure</c><00:03:10.880><c> and</c><00:03:11.030><c> if</c><00:03:11.120><c> you</c><00:03:11.209><c> have</c>

00:03:11.380 --> 00:03:11.390 align:start position:0%
different data structure and if you have
 

00:03:11.390 --> 00:03:14.740 align:start position:0%
different data structure and if you have
a<00:03:11.420><c> large</c><00:03:11.690><c> collection</c><00:03:12.020><c> and</c><00:03:12.580><c> Stewart</c><00:03:13.580><c> Marx</c><00:03:14.000><c> did</c>

00:03:14.740 --> 00:03:14.750 align:start position:0%
a large collection and Stewart Marx did
 

00:03:14.750 --> 00:03:16.600 align:start position:0%
a large collection and Stewart Marx did
some<00:03:15.020><c> of</c><00:03:15.110><c> these</c><00:03:15.230><c> kinds</c><00:03:15.620><c> of</c><00:03:15.680><c> optimizations</c><00:03:16.490><c> for</c>

00:03:16.600 --> 00:03:16.610 align:start position:0%
some of these kinds of optimizations for
 

00:03:16.610 --> 00:03:20.920 align:start position:0%
some of these kinds of optimizations for
his<00:03:17.950><c> collections</c><00:03:18.950><c> list</c><00:03:19.250><c> off</c><00:03:19.640><c> set</c><00:03:20.000><c> of</c><00:03:20.390><c> map</c>

00:03:20.920 --> 00:03:20.930 align:start position:0%
his collections list off set of map
 

00:03:20.930 --> 00:03:22.990 align:start position:0%
his collections list off set of map
table<00:03:21.380><c> for</c><00:03:21.830><c> smaller</c><00:03:22.100><c> collections</c><00:03:22.610><c> were</c><00:03:22.760><c> more</c>

00:03:22.990 --> 00:03:23.000 align:start position:0%
table for smaller collections were more
 

00:03:23.000 --> 00:03:25.540 align:start position:0%
table for smaller collections were more
optimized<00:03:23.480><c> they</c><00:03:23.750><c> save</c><00:03:23.989><c> space</c><00:03:24.320><c> they</c><00:03:25.100><c> trade-off</c>

00:03:25.540 --> 00:03:25.550 align:start position:0%
optimized they save space they trade-off
 

00:03:25.550 --> 00:03:28.270 align:start position:0%
optimized they save space they trade-off
some<00:03:25.760><c> space</c><00:03:26.110><c> versus</c><00:03:27.110><c> time</c><00:03:27.440><c> and</c><00:03:27.709><c> you</c><00:03:27.920><c> can</c><00:03:28.100><c> do</c>

00:03:28.270 --> 00:03:28.280 align:start position:0%
some space versus time and you can do
 

00:03:28.280 --> 00:03:30.340 align:start position:0%
some space versus time and you can do
these<00:03:28.400><c> types</c><00:03:28.670><c> of</c><00:03:28.940><c> tricks</c><00:03:29.209><c> with</c><00:03:29.870><c> even</c><00:03:30.140><c> when</c><00:03:30.260><c> you</c>

00:03:30.340 --> 00:03:30.350 align:start position:0%
these types of tricks with even when you
 

00:03:30.350 --> 00:03:34.380 align:start position:0%
these types of tricks with even when you
have<00:03:30.500><c> immutability</c><00:03:31.120><c> and</c><00:03:32.120><c> your</c><00:03:32.269><c> collections</c>

00:03:34.380 --> 00:03:34.390 align:start position:0%
have immutability and your collections
 

00:03:34.390 --> 00:03:37.600 align:start position:0%
have immutability and your collections
so<00:03:35.390><c> this</c><00:03:35.540><c> is</c><00:03:35.690><c> my</c><00:03:35.870><c> wish</c><00:03:36.170><c> list</c><00:03:36.470><c> for</c><00:03:36.860><c> immutable</c>

00:03:37.600 --> 00:03:37.610 align:start position:0%
so this is my wish list for immutable
 

00:03:37.610 --> 00:03:39.070 align:start position:0%
so this is my wish list for immutable
collections<00:03:38.030><c> if</c><00:03:38.209><c> I</c><00:03:38.330><c> were</c><00:03:38.480><c> going</c><00:03:38.660><c> to</c><00:03:38.750><c> do</c><00:03:38.930><c> this</c>

00:03:39.070 --> 00:03:39.080 align:start position:0%
collections if I were going to do this
 

00:03:39.080 --> 00:03:41.530 align:start position:0%
collections if I were going to do this
in<00:03:39.260><c> the</c><00:03:39.350><c> JDK</c><00:03:39.860><c> which</c><00:03:40.700><c> is</c><00:03:40.850><c> no</c><00:03:41.030><c> this</c><00:03:41.269><c> is</c><00:03:41.390><c> no</c>

00:03:41.530 --> 00:03:41.540 align:start position:0%
in the JDK which is no this is no
 

00:03:41.540 --> 00:03:44.229 align:start position:0%
in the JDK which is no this is no
commitment<00:03:42.110><c> to</c><00:03:42.500><c> doing</c><00:03:42.769><c> this</c><00:03:42.890><c> in</c><00:03:43.070><c> the</c><00:03:43.160><c> JDK</c><00:03:43.670><c> but</c>

00:03:44.229 --> 00:03:44.239 align:start position:0%
commitment to doing this in the JDK but
 

00:03:44.239 --> 00:03:45.729 align:start position:0%
commitment to doing this in the JDK but
if<00:03:44.360><c> I</c><00:03:44.480><c> were</c><00:03:44.630><c> going</c><00:03:44.900><c> to</c><00:03:44.989><c> do</c><00:03:45.230><c> it</c><00:03:45.320><c> this</c><00:03:45.410><c> has</c><00:03:45.560><c> been</c>

00:03:45.729 --> 00:03:45.739 align:start position:0%
if I were going to do it this has been
 

00:03:45.739 --> 00:03:48.370 align:start position:0%
if I were going to do it this has been
this<00:03:45.950><c> would</c><00:03:46.130><c> be</c><00:03:46.250><c> my</c><00:03:46.430><c> wish</c><00:03:46.489><c> list</c><00:03:47.080><c> here</c><00:03:48.080><c> so</c><00:03:48.350><c> I</c>

00:03:48.370 --> 00:03:48.380 align:start position:0%
this would be my wish list here so I
 

00:03:48.380 --> 00:03:50.770 align:start position:0%
this would be my wish list here so I
think<00:03:48.530><c> the</c><00:03:49.250><c> first</c><00:03:49.519><c> one</c><00:03:49.700><c> to</c><00:03:49.880><c> me</c><00:03:50.030><c> is</c><00:03:50.060><c> if</c><00:03:50.390><c> you're</c>

00:03:50.770 --> 00:03:50.780 align:start position:0%
think the first one to me is if you're
 

00:03:50.780 --> 00:03:52.570 align:start position:0%
think the first one to me is if you're
coding<00:03:51.080><c> using</c><00:03:51.440><c> immutable</c><00:03:52.010><c> collections</c><00:03:52.400><c> I'd</c>

00:03:52.570 --> 00:03:52.580 align:start position:0%
coding using immutable collections I'd
 

00:03:52.580 --> 00:03:54.910 align:start position:0%
coding using immutable collections I'd
like<00:03:52.790><c> to</c><00:03:52.940><c> see</c><00:03:53.120><c> that</c><00:03:53.150><c> in</c><00:03:53.480><c> the</c><00:03:53.630><c> type</c><00:03:53.840><c> name</c><00:03:54.110><c> I'd</c>

00:03:54.910 --> 00:03:54.920 align:start position:0%
like to see that in the type name I'd
 

00:03:54.920 --> 00:03:56.620 align:start position:0%
like to see that in the type name I'd
like<00:03:55.130><c> to</c><00:03:55.250><c> see</c><00:03:55.430><c> that</c><00:03:55.459><c> in</c><00:03:55.640><c> the</c><00:03:55.850><c> API</c><00:03:56.180><c> so</c><00:03:56.269><c> when</c><00:03:56.600><c> I</c>

00:03:56.620 --> 00:03:56.630 align:start position:0%
like to see that in the API so when I
 

00:03:56.630 --> 00:03:59.710 align:start position:0%
like to see that in the API so when I
read<00:03:57.080><c> the</c><00:03:57.680><c> code</c><00:03:57.950><c> I</c><00:03:58.310><c> know</c><00:03:58.610><c> this</c><00:03:59.390><c> thing</c><00:03:59.600><c> is</c>

00:03:59.710 --> 00:03:59.720 align:start position:0%
read the code I know this thing is
 

00:03:59.720 --> 00:04:01.050 align:start position:0%
read the code I know this thing is
immutable<00:03:59.989><c> I</c><00:04:00.290><c> have</c><00:04:00.440><c> to</c><00:04:00.560><c> treat</c><00:04:00.769><c> it</c><00:04:00.890><c> differently</c>

00:04:01.050 --> 00:04:01.060 align:start position:0%
immutable I have to treat it differently
 

00:04:01.060 --> 00:04:04.690 align:start position:0%
immutable I have to treat it differently
to<00:04:02.060><c> say</c><00:04:02.269><c> list</c><00:04:02.959><c> or</c><00:04:03.410><c> map</c><00:04:03.830><c> if</c><00:04:04.070><c> it</c><00:04:04.190><c> was</c><00:04:04.310><c> a</c><00:04:04.340><c> mutable</c>

00:04:04.690 --> 00:04:04.700 align:start position:0%
to say list or map if it was a mutable
 

00:04:04.700 --> 00:04:06.970 align:start position:0%
to say list or map if it was a mutable
list<00:04:05.030><c> or</c><00:04:05.269><c> a</c><00:04:05.300><c> mutable</c><00:04:05.780><c> map</c><00:04:06.080><c> I</c><00:04:06.350><c> can</c><00:04:06.530><c> treat</c><00:04:06.920><c> that</c>

00:04:06.970 --> 00:04:06.980 align:start position:0%
list or a mutable map I can treat that
 

00:04:06.980 --> 00:04:08.560 align:start position:0%
list or a mutable map I can treat that
differently<00:04:07.280><c> I</c><00:04:07.730><c> know</c><00:04:07.790><c> it</c><00:04:08.000><c> has</c><00:04:08.150><c> a</c><00:04:08.180><c> different</c>

00:04:08.560 --> 00:04:08.570 align:start position:0%
differently I know it has a different
 

00:04:08.570 --> 00:04:11.770 align:start position:0%
differently I know it has a different
API<00:04:08.900><c> I</c><00:04:09.290><c> know</c><00:04:09.650><c> I</c><00:04:09.830><c> have</c><00:04:10.100><c> to</c><00:04:10.540><c> consider</c><00:04:11.540><c> this</c>

00:04:11.770 --> 00:04:11.780 align:start position:0%
API I know I have to consider this
 

00:04:11.780 --> 00:04:13.180 align:start position:0%
API I know I have to consider this
slightly<00:04:12.140><c> differently</c><00:04:12.470><c> when</c><00:04:12.650><c> the</c><00:04:12.769><c> way</c><00:04:12.860><c> I</c><00:04:12.890><c> use</c>

00:04:13.180 --> 00:04:13.190 align:start position:0%
slightly differently when the way I use
 

00:04:13.190 --> 00:04:14.890 align:start position:0%
slightly differently when the way I use
my<00:04:13.220><c> algorithms</c><00:04:14.000><c> or</c><00:04:14.239><c> a</c><00:04:14.269><c> I</c><00:04:14.420><c> develop</c><00:04:14.780><c> my</c>

00:04:14.890 --> 00:04:14.900 align:start position:0%
my algorithms or a I develop my
 

00:04:14.900 --> 00:04:16.900 align:start position:0%
my algorithms or a I develop my
algorithms<00:04:15.260><c> incidentally</c><00:04:15.860><c> has</c><00:04:16.609><c> anyone</c>

00:04:16.900 --> 00:04:16.910 align:start position:0%
algorithms incidentally has anyone
 

00:04:16.910 --> 00:04:21.370 align:start position:0%
algorithms incidentally has anyone
programmed<00:04:17.359><c> in</c><00:04:17.479><c> closure</c><00:04:17.979><c> at</c><00:04:18.979><c> all</c><00:04:19.160><c> whew</c>

00:04:21.370 --> 00:04:21.380 align:start position:0%
programmed in closure at all whew
 

00:04:21.380 --> 00:04:24.760 align:start position:0%
programmed in closure at all whew
it's<00:04:22.040><c> kind</c><00:04:22.340><c> of</c><00:04:22.430><c> mind-bending</c><00:04:22.970><c> because</c><00:04:23.539><c> it</c><00:04:23.960><c> it</c>

00:04:24.760 --> 00:04:24.770 align:start position:0%
it's kind of mind-bending because it it
 

00:04:24.770 --> 00:04:26.860 align:start position:0%
it's kind of mind-bending because it it
is<00:04:24.979><c> totally</c><00:04:25.340><c> a</c><00:04:25.610><c> new</c><00:04:25.700><c> table</c><00:04:26.120><c> for</c><00:04:26.330><c> the</c><00:04:26.390><c> most</c><00:04:26.570><c> part</c>

00:04:26.860 --> 00:04:26.870 align:start position:0%
is totally a new table for the most part
 

00:04:26.870 --> 00:04:27.510 align:start position:0%
is totally a new table for the most part
and<00:04:27.140><c> the</c>

00:04:27.510 --> 00:04:27.520 align:start position:0%
and the
 

00:04:27.520 --> 00:04:29.159 align:start position:0%
and the
it's<00:04:27.759><c> kind</c><00:04:28.060><c> of</c><00:04:28.120><c> mind-bending</c><00:04:28.509><c> at</c><00:04:28.750><c> first</c><00:04:28.990><c> if</c>

00:04:29.159 --> 00:04:29.169 align:start position:0%
it's kind of mind-bending at first if
 

00:04:29.169 --> 00:04:32.700 align:start position:0%
it's kind of mind-bending at first if
you<00:04:29.289><c> use</c><00:04:29.500><c> used</c><00:04:30.100><c> to</c><00:04:30.250><c> the</c><00:04:30.639><c> mute</c><00:04:31.210><c> mutable</c><00:04:31.960><c> way</c><00:04:32.169><c> not</c>

00:04:32.700 --> 00:04:32.710 align:start position:0%
you use used to the mute mutable way not
 

00:04:32.710 --> 00:04:35.520 align:start position:0%
you use used to the mute mutable way not
in<00:04:32.830><c> you</c><00:04:32.919><c> to</c><00:04:33.039><c> a</c><00:04:33.069><c> beautiful</c><00:04:33.639><c> way</c><00:04:33.789><c> of</c><00:04:34.000><c> coding</c><00:04:34.660><c> your</c>

00:04:35.520 --> 00:04:35.530 align:start position:0%
in you to a beautiful way of coding your
 

00:04:35.530 --> 00:04:38.490 align:start position:0%
in you to a beautiful way of coding your
algorithms<00:04:36.039><c> tend</c><00:04:36.280><c> to</c><00:04:36.400><c> change</c><00:04:37.229><c> and</c><00:04:38.229><c> I</c><00:04:38.289><c> think</c>

00:04:38.490 --> 00:04:38.500 align:start position:0%
algorithms tend to change and I think
 

00:04:38.500 --> 00:04:40.350 align:start position:0%
algorithms tend to change and I think
that's<00:04:38.680><c> it's</c><00:04:38.979><c> worth</c><00:04:39.160><c> actually</c><00:04:39.400><c> experimenting</c>

00:04:40.350 --> 00:04:40.360 align:start position:0%
that's it's worth actually experimenting
 

00:04:40.360 --> 00:04:42.150 align:start position:0%
that's it's worth actually experimenting
with<00:04:40.509><c> languages</c><00:04:40.870><c> like</c><00:04:41.020><c> Clojure</c><00:04:41.199><c> and</c><00:04:41.500><c> Haskell</c>

00:04:42.150 --> 00:04:42.160 align:start position:0%
with languages like Clojure and Haskell
 

00:04:42.160 --> 00:04:44.730 align:start position:0%
with languages like Clojure and Haskell
to<00:04:42.759><c> see</c><00:04:43.000><c> how</c><00:04:43.210><c> you</c><00:04:43.270><c> can</c><00:04:43.720><c> code</c><00:04:43.990><c> in</c><00:04:44.229><c> immutable</c>

00:04:44.730 --> 00:04:44.740 align:start position:0%
to see how you can code in immutable
 

00:04:44.740 --> 00:04:48.450 align:start position:0%
to see how you can code in immutable
ways<00:04:44.889><c> rather</c><00:04:45.250><c> than</c><00:04:45.509><c> immutable</c><00:04:46.509><c> ways</c><00:04:46.930><c> or</c><00:04:47.289><c> pyth</c>

00:04:48.450 --> 00:04:48.460 align:start position:0%
ways rather than immutable ways or pyth
 

00:04:48.460 --> 00:04:50.219 align:start position:0%
ways rather than immutable ways or pyth
it<00:04:48.880><c> really</c><00:04:49.210><c> changes</c><00:04:49.690><c> the</c><00:04:49.810><c> way</c><00:04:49.840><c> you</c><00:04:49.990><c> think</c>

00:04:50.219 --> 00:04:50.229 align:start position:0%
it really changes the way you think
 

00:04:50.229 --> 00:04:55.860 align:start position:0%
it really changes the way you think
sometimes<00:04:51.720><c> these</c><00:04:53.759><c> collections</c><00:04:54.759><c> I</c><00:04:55.240><c> think</c>

00:04:55.860 --> 00:04:55.870 align:start position:0%
sometimes these collections I think
 

00:04:55.870 --> 00:04:58.320 align:start position:0%
sometimes these collections I think
should<00:04:56.020><c> be</c><00:04:56.080><c> sealed</c><00:04:56.560><c> and</c><00:04:57.160><c> what</c><00:04:57.639><c> I</c><00:04:57.669><c> mean</c><00:04:57.880><c> by</c><00:04:57.940><c> that</c>

00:04:58.320 --> 00:04:58.330 align:start position:0%
should be sealed and what I mean by that
 

00:04:58.330 --> 00:05:01.800 align:start position:0%
should be sealed and what I mean by that
is<00:04:59.099><c> only</c><00:05:00.099><c> trusted</c><00:05:00.669><c> parties</c><00:05:01.210><c> can</c><00:05:01.479><c> actually</c>

00:05:01.800 --> 00:05:01.810 align:start position:0%
is only trusted parties can actually
 

00:05:01.810 --> 00:05:04.710 align:start position:0%
is only trusted parties can actually
extend<00:05:02.139><c> these</c><00:05:02.349><c> collections</c><00:05:03.090><c> so</c><00:05:04.090><c> I</c><00:05:04.360><c> wouldn't</c>

00:05:04.710 --> 00:05:04.720 align:start position:0%
extend these collections so I wouldn't
 

00:05:04.720 --> 00:05:06.510 align:start position:0%
extend these collections so I wouldn't
want<00:05:04.900><c> to</c><00:05:05.020><c> let</c><00:05:05.169><c> anyone</c><00:05:05.470><c> else</c><00:05:05.680><c> extend</c><00:05:06.160><c> my</c><00:05:06.310><c> Anu</c>

00:05:06.510 --> 00:05:06.520 align:start position:0%
want to let anyone else extend my Anu
 

00:05:06.520 --> 00:05:08.040 align:start position:0%
want to let anyone else extend my Anu
tuple<00:05:06.759><c> list</c><00:05:06.940><c> because</c><00:05:07.090><c> I</c><00:05:07.150><c> don't</c><00:05:07.330><c> trust</c><00:05:07.539><c> them</c><00:05:07.840><c> I</c>

00:05:08.040 --> 00:05:08.050 align:start position:0%
tuple list because I don't trust them I
 

00:05:08.050 --> 00:05:09.870 align:start position:0%
tuple list because I don't trust them I
don't<00:05:08.500><c> trust</c><00:05:08.710><c> them</c><00:05:08.919><c> to</c><00:05:09.039><c> do</c><00:05:09.130><c> it</c><00:05:09.250><c> properly</c><00:05:09.460><c> I</c>

00:05:09.870 --> 00:05:09.880 align:start position:0%
don't trust them to do it properly I
 

00:05:09.880 --> 00:05:11.969 align:start position:0%
don't trust them to do it properly I
don't<00:05:10.270><c> trust</c><00:05:10.570><c> them</c><00:05:10.840><c> either</c><00:05:11.020><c> because</c><00:05:11.740><c> they're</c>

00:05:11.969 --> 00:05:11.979 align:start position:0%
don't trust them either because they're
 

00:05:11.979 --> 00:05:14.219 align:start position:0%
don't trust them either because they're
there<00:05:12.400><c> being</c><00:05:12.669><c> a</c><00:05:12.849><c> black</c><00:05:13.090><c> hat</c><00:05:13.389><c> or</c><00:05:13.660><c> a</c><00:05:13.690><c> white</c><00:05:13.960><c> hat</c>

00:05:14.219 --> 00:05:14.229 align:start position:0%
there being a black hat or a white hat
 

00:05:14.229 --> 00:05:16.650 align:start position:0%
there being a black hat or a white hat
in<00:05:14.500><c> terms</c><00:05:14.800><c> of</c><00:05:15.070><c> what</c><00:05:15.610><c> their</c><00:05:15.789><c> motives</c><00:05:16.180><c> are</c><00:05:16.419><c> or</c>

00:05:16.650 --> 00:05:16.660 align:start position:0%
in terms of what their motives are or
 

00:05:16.660 --> 00:05:18.029 align:start position:0%
in terms of what their motives are or
because<00:05:16.930><c> they've</c><00:05:17.080><c> made</c><00:05:17.199><c> mistakes</c><00:05:17.380><c> we've</c><00:05:17.860><c> had</c>

00:05:18.029 --> 00:05:18.039 align:start position:0%
because they've made mistakes we've had
 

00:05:18.039 --> 00:05:19.950 align:start position:0%
because they've made mistakes we've had
this<00:05:18.250><c> with</c><00:05:18.430><c> our</c><00:05:18.550><c> own</c><00:05:18.580><c> collections</c><00:05:19.270><c> in</c><00:05:19.419><c> the</c><00:05:19.479><c> JDK</c>

00:05:19.950 --> 00:05:19.960 align:start position:0%
this with our own collections in the JDK
 

00:05:19.960 --> 00:05:21.960 align:start position:0%
this with our own collections in the JDK
they're<00:05:20.169><c> open</c><00:05:20.620><c> and</c><00:05:20.800><c> we</c><00:05:21.550><c> have</c><00:05:21.699><c> to</c><00:05:21.789><c> write</c>

00:05:21.960 --> 00:05:21.970 align:start position:0%
they're open and we have to write
 

00:05:21.970 --> 00:05:24.270 align:start position:0%
they're open and we have to write
defensive<00:05:22.509><c> code</c><00:05:22.810><c> against</c><00:05:23.710><c> incorrect</c>

00:05:24.270 --> 00:05:24.280 align:start position:0%
defensive code against incorrect
 

00:05:24.280 --> 00:05:26.219 align:start position:0%
defensive code against incorrect
collections<00:05:25.030><c> people</c><00:05:25.690><c> who</c><00:05:25.780><c> have</c><00:05:25.870><c> extended</c>

00:05:26.219 --> 00:05:26.229 align:start position:0%
collections people who have extended
 

00:05:26.229 --> 00:05:28.379 align:start position:0%
collections people who have extended
ArrayList<00:05:26.860><c> people</c><00:05:27.370><c> have</c><00:05:27.460><c> extended</c><00:05:27.909><c> hashmap</c>

00:05:28.379 --> 00:05:28.389 align:start position:0%
ArrayList people have extended hashmap
 

00:05:28.389 --> 00:05:30.059 align:start position:0%
ArrayList people have extended hashmap
and<00:05:28.599><c> so</c><00:05:28.750><c> forth</c><00:05:29.020><c> like</c><00:05:29.199><c> that</c><00:05:29.229><c> we</c><00:05:29.889><c> don't</c>

00:05:30.059 --> 00:05:30.069 align:start position:0%
and so forth like that we don't
 

00:05:30.069 --> 00:05:32.040 align:start position:0%
and so forth like that we don't
necessarily<00:05:30.220><c> do</c><00:05:30.729><c> the</c><00:05:30.819><c> right</c><00:05:31.030><c> thing</c><00:05:31.330><c> I</c><00:05:31.539><c> want</c>

00:05:32.040 --> 00:05:32.050 align:start position:0%
necessarily do the right thing I want
 

00:05:32.050 --> 00:05:33.839 align:start position:0%
necessarily do the right thing I want
needs<00:05:32.229><c> to</c><00:05:32.320><c> be</c><00:05:32.409><c> closed</c><00:05:32.770><c> and</c><00:05:33.039><c> only</c><00:05:33.639><c> we</c><00:05:33.820><c> can</c>

00:05:33.839 --> 00:05:33.849 align:start position:0%
needs to be closed and only we can
 

00:05:33.849 --> 00:05:36.420 align:start position:0%
needs to be closed and only we can
implement<00:05:34.270><c> them</c><00:05:34.659><c> and</c><00:05:34.810><c> then</c><00:05:35.289><c> we</c><00:05:35.470><c> can</c><00:05:35.500><c> guarantee</c>

00:05:36.420 --> 00:05:36.430 align:start position:0%
implement them and then we can guarantee
 

00:05:36.430 --> 00:05:39.960 align:start position:0%
implement them and then we can guarantee
the<00:05:36.639><c> immutability</c><00:05:37.150><c> of</c><00:05:37.419><c> these</c><00:05:37.960><c> things</c><00:05:38.259><c> I</c><00:05:38.970><c> would</c>

00:05:39.960 --> 00:05:39.970 align:start position:0%
the immutability of these things I would
 

00:05:39.970 --> 00:05:41.820 align:start position:0%
the immutability of these things I would
like<00:05:40.120><c> them</c><00:05:40.330><c> to</c><00:05:40.360><c> provide</c><00:05:40.840><c> a</c><00:05:40.900><c> bridge</c><00:05:41.320><c> to</c><00:05:41.710><c> the</c>

00:05:41.820 --> 00:05:41.830 align:start position:0%
like them to provide a bridge to the
 

00:05:41.830 --> 00:05:43.890 align:start position:0%
like them to provide a bridge to the
mutable<00:05:42.159><c> collections</c><00:05:42.699><c> so</c><00:05:43.330><c> you</c><00:05:43.389><c> have</c><00:05:43.599><c> to</c><00:05:43.719><c> opt</c>

00:05:43.890 --> 00:05:43.900 align:start position:0%
mutable collections so you have to opt
 

00:05:43.900 --> 00:05:47.040 align:start position:0%
mutable collections so you have to opt
in<00:05:44.199><c> and</c><00:05:44.349><c> say</c><00:05:44.590><c> to</c><00:05:45.159><c> lists</c><00:05:45.699><c> or</c><00:05:46.000><c> to</c><00:05:46.180><c> mutable</c><00:05:46.780><c> lists</c>

00:05:47.040 --> 00:05:47.050 align:start position:0%
in and say to lists or to mutable lists
 

00:05:47.050 --> 00:05:50.820 align:start position:0%
in and say to lists or to mutable lists
rather<00:05:47.889><c> than</c><00:05:48.099><c> extending</c><00:05:48.550><c> from</c><00:05:49.060><c> list</c><00:05:49.360><c> if</c><00:05:49.960><c> you</c>

00:05:50.820 --> 00:05:50.830 align:start position:0%
rather than extending from list if you
 

00:05:50.830 --> 00:05:52.740 align:start position:0%
rather than extending from list if you
extend<00:05:51.219><c> from</c><00:05:51.400><c> list</c><00:05:51.789><c> then</c><00:05:52.270><c> you</c><00:05:52.300><c> can</c><00:05:52.509><c> easily</c>

00:05:52.740 --> 00:05:52.750 align:start position:0%
extend from list then you can easily
 

00:05:52.750 --> 00:05:54.600 align:start position:0%
extend from list then you can easily
pass<00:05:53.110><c> it</c><00:05:53.289><c> around</c><00:05:53.380><c> to</c><00:05:53.650><c> something</c><00:05:53.919><c> that</c><00:05:54.039><c> accepts</c>

00:05:54.600 --> 00:05:54.610 align:start position:0%
pass it around to something that accepts
 

00:05:54.610 --> 00:05:56.580 align:start position:0%
pass it around to something that accepts
list<00:05:54.849><c> then</c><00:05:55.090><c> it</c><00:05:55.120><c> just</c><00:05:55.300><c> becomes</c><00:05:55.690><c> into</c><00:05:56.199><c> the</c><00:05:56.320><c> old</c>

00:05:56.580 --> 00:05:56.590 align:start position:0%
list then it just becomes into the old
 

00:05:56.590 --> 00:05:58.589 align:start position:0%
list then it just becomes into the old
collections<00:05:57.219><c> mutable</c><00:05:57.789><c> collections</c><00:05:58.270><c> world</c>

00:05:58.589 --> 00:05:58.599 align:start position:0%
collections mutable collections world
 

00:05:58.599 --> 00:06:00.510 align:start position:0%
collections mutable collections world
where<00:05:59.259><c> you</c><00:05:59.349><c> might</c><00:05:59.530><c> operate</c><00:05:59.949><c> on</c><00:06:00.130><c> it</c><00:06:00.250><c> and</c><00:06:00.400><c> do</c><00:06:00.490><c> a</c>

00:06:00.510 --> 00:06:00.520 align:start position:0%
where you might operate on it and do a
 

00:06:00.520 --> 00:06:02.399 align:start position:0%
where you might operate on it and do a
mutating<00:06:01.060><c> operation</c><00:06:01.509><c> get</c><00:06:01.659><c> an</c><00:06:01.750><c> exception</c><00:06:02.139><c> I</c>

00:06:02.399 --> 00:06:02.409 align:start position:0%
mutating operation get an exception I
 

00:06:02.409 --> 00:06:03.570 align:start position:0%
mutating operation get an exception I
don't<00:06:02.590><c> want</c><00:06:02.740><c> that</c><00:06:02.830><c> I</c><00:06:02.979><c> want</c><00:06:03.009><c> to</c><00:06:03.250><c> explicitly</c>

00:06:03.570 --> 00:06:03.580 align:start position:0%
don't want that I want to explicitly
 

00:06:03.580 --> 00:06:05.939 align:start position:0%
don't want that I want to explicitly
something<00:06:04.300><c> in</c><00:06:04.479><c> the</c><00:06:04.960><c> code</c><00:06:05.169><c> that</c><00:06:05.440><c> says</c><00:06:05.650><c> to</c>

00:06:05.939 --> 00:06:05.949 align:start position:0%
something in the code that says to
 

00:06:05.949 --> 00:06:07.770 align:start position:0%
something in the code that says to
mutable<00:06:06.789><c> list</c><00:06:07.000><c> or</c><00:06:07.210><c> something</c><00:06:07.360><c> like</c><00:06:07.509><c> so</c><00:06:07.659><c> you</c>

00:06:07.770 --> 00:06:07.780 align:start position:0%
mutable list or something like so you
 

00:06:07.780 --> 00:06:09.029 align:start position:0%
mutable list or something like so you
really<00:06:08.110><c> know</c><00:06:08.259><c> when</c><00:06:08.469><c> you're</c><00:06:08.620><c> transitioning</c>

00:06:09.029 --> 00:06:09.039 align:start position:0%
really know when you're transitioning
 

00:06:09.039 --> 00:06:12.510 align:start position:0%
really know when you're transitioning
from<00:06:09.460><c> the</c><00:06:10.409><c> immutable</c><00:06:11.409><c> to</c><00:06:11.800><c> the</c><00:06:11.949><c> mutable</c><00:06:12.310><c> world</c>

00:06:12.510 --> 00:06:12.520 align:start position:0%
from the immutable to the mutable world
 

00:06:12.520 --> 00:06:14.640 align:start position:0%
from the immutable to the mutable world
and<00:06:12.849><c> I</c><00:06:13.690><c> want</c><00:06:13.840><c> efficient</c><00:06:14.380><c> construction</c>

00:06:14.640 --> 00:06:14.650 align:start position:0%
and I want efficient construction
 

00:06:14.650 --> 00:06:17.339 align:start position:0%
and I want efficient construction
updates<00:06:15.580><c> and</c><00:06:15.849><c> copying</c><00:06:16.300><c> so</c><00:06:16.509><c> if</c><00:06:16.570><c> I</c><00:06:16.690><c> have</c><00:06:16.900><c> a</c><00:06:16.930><c> new</c>

00:06:17.339 --> 00:06:17.349 align:start position:0%
updates and copying so if I have a new
 

00:06:17.349 --> 00:06:19.860 align:start position:0%
updates and copying so if I have a new
to<00:06:17.500><c> the</c><00:06:17.620><c> list</c><00:06:17.830><c> and</c><00:06:18.250><c> I</c><00:06:18.610><c> add</c><00:06:18.820><c> an</c><00:06:18.969><c> element</c><00:06:19.180><c> to</c><00:06:19.419><c> it</c><00:06:19.750><c> I</c>

00:06:19.860 --> 00:06:19.870 align:start position:0%
to the list and I add an element to it I
 

00:06:19.870 --> 00:06:21.719 align:start position:0%
to the list and I add an element to it I
want<00:06:20.199><c> a</c><00:06:20.320><c> new</c><00:06:20.590><c> a</c><00:06:20.620><c> mutable</c><00:06:20.979><c> list</c><00:06:21.250><c> but</c><00:06:21.460><c> somehow</c>

00:06:21.719 --> 00:06:21.729 align:start position:0%
want a new a mutable list but somehow
 

00:06:21.729 --> 00:06:24.060 align:start position:0%
want a new a mutable list but somehow
underneath<00:06:22.360><c> it</c><00:06:22.780><c> shares</c><00:06:23.229><c> a</c><00:06:23.320><c> bit</c><00:06:23.500><c> of</c><00:06:23.590><c> structure</c>

00:06:24.060 --> 00:06:24.070 align:start position:0%
underneath it shares a bit of structure
 

00:06:24.070 --> 00:06:26.459 align:start position:0%
underneath it shares a bit of structure
between<00:06:24.250><c> the</c><00:06:24.479><c> previous</c><00:06:25.479><c> collection</c><00:06:25.990><c> and</c><00:06:26.169><c> the</c>

00:06:26.459 --> 00:06:26.469 align:start position:0%
between the previous collection and the
 

00:06:26.469 --> 00:06:28.469 align:start position:0%
between the previous collection and the
new<00:06:26.620><c> collection</c><00:06:26.979><c> so</c><00:06:27.639><c> we</c><00:06:27.669><c> can</c><00:06:27.880><c> save</c><00:06:28.120><c> some</c><00:06:28.330><c> space</c>

00:06:28.469 --> 00:06:28.479 align:start position:0%
new collection so we can save some space
 

00:06:28.479 --> 00:06:30.899 align:start position:0%
new collection so we can save some space
maybe<00:06:29.080><c> trade</c><00:06:29.380><c> off</c><00:06:29.500><c> some</c><00:06:29.680><c> time</c><00:06:29.919><c> and</c><00:06:30.280><c> save</c><00:06:30.699><c> some</c>

00:06:30.899 --> 00:06:30.909 align:start position:0%
maybe trade off some time and save some
 

00:06:30.909 --> 00:06:32.610 align:start position:0%
maybe trade off some time and save some
space<00:06:31.060><c> but</c><00:06:31.479><c> we</c><00:06:31.570><c> get</c><00:06:31.719><c> structural</c><00:06:32.229><c> sharing</c>

00:06:32.610 --> 00:06:32.620 align:start position:0%
space but we get structural sharing
 

00:06:32.620 --> 00:06:34.649 align:start position:0%
space but we get structural sharing
underneath<00:06:33.009><c> and</c><00:06:33.250><c> we</c><00:06:33.310><c> can</c><00:06:33.430><c> do</c><00:06:33.550><c> efficient</c><00:06:34.000><c> forms</c>

00:06:34.649 --> 00:06:34.659 align:start position:0%
underneath and we can do efficient forms
 

00:06:34.659 --> 00:06:36.839 align:start position:0%
underneath and we can do efficient forms
of<00:06:34.780><c> copying</c><00:06:35.169><c> I</c><00:06:35.380><c> want</c><00:06:35.889><c> a</c><00:06:36.010><c> way</c><00:06:36.099><c> to</c><00:06:36.130><c> build</c><00:06:36.550><c> these</c>

00:06:36.839 --> 00:06:36.849 align:start position:0%
of copying I want a way to build these
 

00:06:36.849 --> 00:06:39.600 align:start position:0%
of copying I want a way to build these
collections<00:06:37.479><c> up</c><00:06:37.690><c> in</c><00:06:37.839><c> a</c><00:06:37.960><c> confined</c><00:06:38.400><c> mutable</c><00:06:39.400><c> way</c>

00:06:39.600 --> 00:06:39.610 align:start position:0%
collections up in a confined mutable way
 

00:06:39.610 --> 00:06:40.320 align:start position:0%
collections up in a confined mutable way
and<00:06:39.880><c> then</c>

00:06:40.320 --> 00:06:40.330 align:start position:0%
and then
 

00:06:40.330 --> 00:06:44.700 align:start position:0%
and then
freeze<00:06:40.990><c> and</c><00:06:41.440><c> say</c><00:06:42.009><c> now</c><00:06:42.220><c> your</c><00:06:42.490><c> immutable</c><00:06:43.240><c> I</c><00:06:43.710><c> may</c>

00:06:44.700 --> 00:06:44.710 align:start position:0%
freeze and say now your immutable I may
 

00:06:44.710 --> 00:06:46.439 align:start position:0%
freeze and say now your immutable I may
forget<00:06:45.039><c> time</c><00:06:45.310><c> to</c><00:06:45.430><c> show</c><00:06:45.610><c> you</c><00:06:45.669><c> some</c><00:06:45.970><c> stuff</c><00:06:46.240><c> what</c>

00:06:46.439 --> 00:06:46.449 align:start position:0%
forget time to show you some stuff what
 

00:06:46.449 --> 00:06:48.330 align:start position:0%
forget time to show you some stuff what
we're<00:06:46.629><c> doing</c><00:06:46.840><c> there</c><00:06:47.020><c> on</c><00:06:47.169><c> that</c><00:06:47.319><c> so</c><00:06:48.009><c> that's</c><00:06:48.190><c> my</c>

00:06:48.330 --> 00:06:48.340 align:start position:0%
we're doing there on that so that's my
 

00:06:48.340 --> 00:06:50.100 align:start position:0%
we're doing there on that so that's my
wish<00:06:48.580><c> list</c><00:06:48.819><c> I</c><00:06:49.090><c> guess</c><00:06:49.330><c> you</c><00:06:49.539><c> could</c><00:06:49.750><c> describe</c>

00:06:50.100 --> 00:06:50.110 align:start position:0%
wish list I guess you could describe
 

00:06:50.110 --> 00:06:52.080 align:start position:0%
wish list I guess you could describe
them<00:06:50.319><c> as</c><00:06:50.470><c> goals</c><00:06:50.770><c> if</c><00:06:51.039><c> we</c><00:06:51.129><c> formalize</c><00:06:51.639><c> them</c><00:06:51.849><c> a</c><00:06:51.940><c> bit</c>

00:06:52.080 --> 00:06:52.090 align:start position:0%
them as goals if we formalize them a bit
 

00:06:52.090 --> 00:06:56.969 align:start position:0%
them as goals if we formalize them a bit
more<00:06:53.520><c> so</c><00:06:54.520><c> what</c><00:06:54.669><c> have</c><00:06:54.759><c> we</c><00:06:54.789><c> got</c><00:06:54.849><c> in</c><00:06:55.150><c> the</c><00:06:55.270><c> JDK</c><00:06:55.979><c> so</c>

00:06:56.969 --> 00:06:56.979 align:start position:0%
more so what have we got in the JDK so
 

00:06:56.979 --> 00:06:58.920 align:start position:0%
more so what have we got in the JDK so
the<00:06:57.129><c> JDK</c><00:06:57.460><c> has</c><00:06:57.610><c> a</c><00:06:57.639><c> notion</c><00:06:57.909><c> of</c><00:06:58.210><c> unmodifiable</c>

00:06:58.920 --> 00:06:58.930 align:start position:0%
the JDK has a notion of unmodifiable
 

00:06:58.930 --> 00:07:00.809 align:start position:0%
the JDK has a notion of unmodifiable
collections<00:06:59.740><c> everyone</c><00:07:00.190><c> know</c><00:07:00.340><c> what</c><00:07:00.520><c> they</c><00:07:00.639><c> are</c>

00:07:00.809 --> 00:07:00.819 align:start position:0%
collections everyone know what they are
 

00:07:00.819 --> 00:07:04.200 align:start position:0%
collections everyone know what they are
you've<00:07:01.509><c> used</c><00:07:01.780><c> these</c><00:07:01.960><c> things</c><00:07:02.259><c> before</c><00:07:03.210><c> so</c>

00:07:04.200 --> 00:07:04.210 align:start position:0%
you've used these things before so
 

00:07:04.210 --> 00:07:06.360 align:start position:0%
you've used these things before so
unmodifiable<00:07:04.840><c> is</c><00:07:05.020><c> a</c><00:07:05.139><c> runtime</c><00:07:05.590><c> property</c><00:07:06.159><c> of</c><00:07:06.250><c> a</c>

00:07:06.360 --> 00:07:06.370 align:start position:0%
unmodifiable is a runtime property of a
 

00:07:06.370 --> 00:07:09.089 align:start position:0%
unmodifiable is a runtime property of a
collection<00:07:07.169><c> so</c><00:07:08.169><c> if</c><00:07:08.590><c> you</c><00:07:08.860><c> have</c><00:07:09.009><c> an</c>

00:07:09.089 --> 00:07:09.099 align:start position:0%
collection so if you have an
 

00:07:09.099 --> 00:07:11.580 align:start position:0%
collection so if you have an
unmodifiable<00:07:09.639><c> collection</c><00:07:10.330><c> the</c><00:07:11.110><c> modifying</c>

00:07:11.580 --> 00:07:11.590 align:start position:0%
unmodifiable collection the modifying
 

00:07:11.590 --> 00:07:15.209 align:start position:0%
unmodifiable collection the modifying
methods<00:07:12.099><c> like</c><00:07:12.370><c> add</c><00:07:12.699><c> put</c><00:07:13.659><c> remove</c><00:07:14.379><c> throw</c>

00:07:15.209 --> 00:07:15.219 align:start position:0%
methods like add put remove throw
 

00:07:15.219 --> 00:07:17.369 align:start position:0%
methods like add put remove throw
unsupported<00:07:15.909><c> operation</c><00:07:16.479><c> exception</c><00:07:17.020><c> and</c>

00:07:17.369 --> 00:07:17.379 align:start position:0%
unsupported operation exception and
 

00:07:17.379 --> 00:07:19.740 align:start position:0%
unsupported operation exception and
there's<00:07:18.099><c> no</c><00:07:18.250><c> way</c><00:07:18.400><c> to</c><00:07:18.460><c> directly</c><00:07:18.699><c> query</c><00:07:19.449><c> this</c>

00:07:19.740 --> 00:07:19.750 align:start position:0%
there's no way to directly query this
 

00:07:19.750 --> 00:07:21.629 align:start position:0%
there's no way to directly query this
and<00:07:20.409><c> you</c><00:07:20.469><c> might</c><00:07:20.650><c> ask</c><00:07:20.800><c> why</c><00:07:21.039><c> would</c><00:07:21.099><c> you</c><00:07:21.370><c> want</c><00:07:21.550><c> to</c>

00:07:21.629 --> 00:07:21.639 align:start position:0%
and you might ask why would you want to
 

00:07:21.639 --> 00:07:23.459 align:start position:0%
and you might ask why would you want to
directly<00:07:21.969><c> query</c><00:07:22.360><c> it</c><00:07:22.539><c> well</c><00:07:23.050><c> you</c><00:07:23.110><c> might</c><00:07:23.259><c> want</c><00:07:23.440><c> to</c>

00:07:23.459 --> 00:07:23.469 align:start position:0%
directly query it well you might want to
 

00:07:23.469 --> 00:07:24.869 align:start position:0%
directly query it well you might want to
know<00:07:23.620><c> if</c><00:07:23.680><c> you</c><00:07:23.770><c> need</c><00:07:23.919><c> to</c><00:07:23.979><c> make</c><00:07:24.129><c> a</c><00:07:24.159><c> copy</c><00:07:24.430><c> or</c><00:07:24.669><c> not</c>

00:07:24.869 --> 00:07:24.879 align:start position:0%
know if you need to make a copy or not
 

00:07:24.879 --> 00:07:26.700 align:start position:0%
know if you need to make a copy or not
if<00:07:25.629><c> you've</c><00:07:25.810><c> got</c><00:07:25.930><c> a</c><00:07:25.960><c> list</c><00:07:26.199><c> how</c><00:07:26.440><c> do</c><00:07:26.500><c> you</c><00:07:26.620><c> know</c>

00:07:26.700 --> 00:07:26.710 align:start position:0%
if you've got a list how do you know
 

00:07:26.710 --> 00:07:29.369 align:start position:0%
if you've got a list how do you know
it's<00:07:26.830><c> unmodifiable</c><00:07:27.599><c> well</c><00:07:28.599><c> you</c><00:07:28.840><c> could</c><00:07:29.080><c> do</c><00:07:29.259><c> an</c>

00:07:29.369 --> 00:07:29.379 align:start position:0%
it's unmodifiable well you could do an
 

00:07:29.379 --> 00:07:31.350 align:start position:0%
it's unmodifiable well you could do an
instance<00:07:29.770><c> of</c><00:07:29.979><c> an</c><00:07:30.190><c> and</c><00:07:30.370><c> looks</c><00:07:30.669><c> at</c><00:07:31.150><c> some</c>

00:07:31.350 --> 00:07:31.360 align:start position:0%
instance of an and looks at some
 

00:07:31.360 --> 00:07:33.089 align:start position:0%
instance of an and looks at some
internal<00:07:31.719><c> JDK</c><00:07:32.199><c> Corrections</c><00:07:32.650><c> but</c><00:07:32.800><c> I</c><00:07:32.830><c> wouldn't</c>

00:07:33.089 --> 00:07:33.099 align:start position:0%
internal JDK Corrections but I wouldn't
 

00:07:33.099 --> 00:07:35.279 align:start position:0%
internal JDK Corrections but I wouldn't
recommend<00:07:33.340><c> that</c><00:07:33.610><c> so</c><00:07:34.539><c> if</c><00:07:34.599><c> we</c><00:07:34.719><c> wanted</c><00:07:34.930><c> to</c><00:07:34.990><c> add</c><00:07:35.169><c> an</c>

00:07:35.279 --> 00:07:35.289 align:start position:0%
recommend that so if we wanted to add an
 

00:07:35.289 --> 00:07:37.290 align:start position:0%
recommend that so if we wanted to add an
efficient<00:07:35.710><c> copy</c><00:07:35.919><c> method</c><00:07:36.250><c> to</c><00:07:36.520><c> the</c><00:07:36.610><c> JDK</c><00:07:37.120><c> we</c>

00:07:37.290 --> 00:07:37.300 align:start position:0%
efficient copy method to the JDK we
 

00:07:37.300 --> 00:07:39.149 align:start position:0%
efficient copy method to the JDK we
can't<00:07:37.539><c> actually</c><00:07:37.750><c> do</c><00:07:38.199><c> this</c><00:07:38.440><c> and</c><00:07:38.710><c> let</c><00:07:38.860><c> third</c>

00:07:39.149 --> 00:07:39.159 align:start position:0%
can't actually do this and let third
 

00:07:39.159 --> 00:07:40.800 align:start position:0%
can't actually do this and let third
parties<00:07:39.639><c> opt</c><00:07:39.909><c> in</c><00:07:40.150><c> if</c><00:07:40.300><c> they're</c><00:07:40.449><c> going</c><00:07:40.569><c> to</c><00:07:40.659><c> opt</c>

00:07:40.800 --> 00:07:40.810 align:start position:0%
parties opt in if they're going to opt
 

00:07:40.810 --> 00:07:41.279 align:start position:0%
parties opt in if they're going to opt
into<00:07:41.020><c> that</c>

00:07:41.279 --> 00:07:41.289 align:start position:0%
into that
 

00:07:41.289 --> 00:07:43.619 align:start position:0%
into that
unmodifiable<00:07:41.889><c> view</c><00:07:42.849><c> as</c><00:07:43.090><c> well</c><00:07:43.240><c> for</c><00:07:43.539><c> example</c>

00:07:43.619 --> 00:07:43.629 align:start position:0%
unmodifiable view as well for example
 

00:07:43.629 --> 00:07:48.300 align:start position:0%
unmodifiable view as well for example
guava<00:07:44.229><c> which</c><00:07:44.650><c> I'll</c><00:07:44.800><c> get</c><00:07:44.860><c> onto</c><00:07:45.039><c> in</c><00:07:45.250><c> a</c><00:07:45.310><c> moment</c><00:07:47.310><c> so</c>

00:07:48.300 --> 00:07:48.310 align:start position:0%
guava which I'll get onto in a moment so
 

00:07:48.310 --> 00:07:51.149 align:start position:0%
guava which I'll get onto in a moment so
non<00:07:48.460><c> modifier</c><00:07:48.849><c> your</c><00:07:49.120><c> wrapper</c><00:07:49.449><c> is</c><00:07:50.159><c> essentially</c>

00:07:51.149 --> 00:07:51.159 align:start position:0%
non modifier your wrapper is essentially
 

00:07:51.159 --> 00:07:53.159 align:start position:0%
non modifier your wrapper is essentially
a<00:07:51.279><c> source</c><00:07:51.669><c> to</c><00:07:51.940><c> a</c><00:07:51.969><c> backing</c><00:07:52.419><c> collection</c><00:07:52.870><c> so</c><00:07:53.139><c> you</c>

00:07:53.159 --> 00:07:53.169 align:start position:0%
a source to a backing collection so you
 

00:07:53.169 --> 00:07:55.140 align:start position:0%
a source to a backing collection so you
you've<00:07:53.650><c> all</c><00:07:53.800><c> done</c><00:07:53.979><c> this</c><00:07:54.159><c> collections</c><00:07:54.729><c> dot</c><00:07:54.940><c> and</c>

00:07:55.140 --> 00:07:55.150 align:start position:0%
you've all done this collections dot and
 

00:07:55.150 --> 00:07:57.779 align:start position:0%
you've all done this collections dot and
modify<00:07:55.569><c> the</c><00:07:55.630><c> list</c><00:07:55.900><c> source</c><00:07:56.319><c> list</c><00:07:56.650><c> so</c><00:07:57.580><c> if</c><00:07:57.699><c> the</c>

00:07:57.779 --> 00:07:57.789 align:start position:0%
modify the list source list so if the
 

00:07:57.789 --> 00:08:00.570 align:start position:0%
modify the list source list so if the
source<00:07:57.940><c> list</c><00:07:58.210><c> is</c><00:07:58.389><c> modified</c><00:07:59.340><c> it</c><00:08:00.340><c> will</c><00:08:00.460><c> be</c>

00:08:00.570 --> 00:08:00.580 align:start position:0%
source list is modified it will be
 

00:08:00.580 --> 00:08:02.550 align:start position:0%
source list is modified it will be
reflected<00:08:01.180><c> in</c><00:08:01.270><c> your</c><00:08:01.300><c> wrapper</c><00:08:01.630><c> as</c><00:08:01.990><c> well</c><00:08:02.349><c> so</c>

00:08:02.550 --> 00:08:02.560 align:start position:0%
reflected in your wrapper as well so
 

00:08:02.560 --> 00:08:04.469 align:start position:0%
reflected in your wrapper as well so
they're<00:08:02.680><c> not</c><00:08:02.770><c> really</c><00:08:02.979><c> immutable</c><00:08:03.580><c> things</c><00:08:03.759><c> in</c>

00:08:04.469 --> 00:08:04.479 align:start position:0%
they're not really immutable things in
 

00:08:04.479 --> 00:08:06.899 align:start position:0%
they're not really immutable things in
this<00:08:04.750><c> notion</c><00:08:05.020><c> here</c><00:08:05.650><c> it's</c><00:08:06.009><c> just</c><00:08:06.310><c> what</c><00:08:06.610><c> you</c><00:08:06.729><c> get</c>

00:08:06.899 --> 00:08:06.909 align:start position:0%
this notion here it's just what you get
 

00:08:06.909 --> 00:08:09.959 align:start position:0%
this notion here it's just what you get
back<00:08:07.240><c> is</c><00:08:07.539><c> an</c><00:08:07.750><c> unmodifiable</c><00:08:08.409><c> view</c><00:08:09.069><c> over</c><00:08:09.819><c> your</c>

00:08:09.959 --> 00:08:09.969 align:start position:0%
back is an unmodifiable view over your
 

00:08:09.969 --> 00:08:11.850 align:start position:0%
back is an unmodifiable view over your
source<00:08:10.240><c> and</c><00:08:10.599><c> you</c><00:08:11.199><c> can</c><00:08:11.319><c> have</c><00:08:11.440><c> directly</c>

00:08:11.850 --> 00:08:11.860 align:start position:0%
source and you can have directly
 

00:08:11.860 --> 00:08:14.879 align:start position:0%
source and you can have directly
unmodifiable<00:08:12.610><c> as</c><00:08:12.879><c> well</c><00:08:13.090><c> with</c><00:08:13.300><c> the</c><00:08:13.419><c> list</c><00:08:13.629><c> of</c><00:08:14.050><c> so</c>

00:08:14.879 --> 00:08:14.889 align:start position:0%
unmodifiable as well with the list of so
 

00:08:14.889 --> 00:08:17.309 align:start position:0%
unmodifiable as well with the list of so
if<00:08:14.979><c> you</c><00:08:15.129><c> there's</c><00:08:15.520><c> there's</c><00:08:15.819><c> no</c><00:08:16.000><c> source</c><00:08:16.599><c> here</c>

00:08:17.309 --> 00:08:17.319 align:start position:0%
if you there's there's no source here
 

00:08:17.319 --> 00:08:19.800 align:start position:0%
if you there's there's no source here
that<00:08:17.620><c> you</c><00:08:17.740><c> can</c><00:08:17.919><c> observe</c><00:08:18.250><c> or</c><00:08:18.550><c> see</c><00:08:18.819><c> you're</c><00:08:19.629><c> just</c>

00:08:19.800 --> 00:08:19.810 align:start position:0%
that you can observe or see you're just
 

00:08:19.810 --> 00:08:21.959 align:start position:0%
that you can observe or see you're just
creating<00:08:20.020><c> a</c><00:08:20.169><c> collection</c><00:08:20.729><c> kind</c><00:08:21.729><c> of</c><00:08:21.819><c> like</c><00:08:21.940><c> a</c>

00:08:21.959 --> 00:08:21.969 align:start position:0%
creating a collection kind of like a
 

00:08:21.969 --> 00:08:23.610 align:start position:0%
creating a collection kind of like a
collection<00:08:22.419><c> literal</c><00:08:22.840><c> in</c><00:08:23.020><c> a</c><00:08:23.110><c> language</c><00:08:23.469><c> and</c>

00:08:23.610 --> 00:08:23.620 align:start position:0%
collection literal in a language and
 

00:08:23.620 --> 00:08:25.140 align:start position:0%
collection literal in a language and
you're<00:08:23.770><c> getting</c><00:08:23.860><c> back</c><00:08:24.069><c> an</c><00:08:24.219><c> unmodifiable</c><00:08:24.759><c> list</c>

00:08:25.140 --> 00:08:25.150 align:start position:0%
you're getting back an unmodifiable list
 

00:08:25.150 --> 00:08:29.339 align:start position:0%
you're getting back an unmodifiable list
back<00:08:27.060><c> so</c><00:08:28.060><c> how</c><00:08:28.180><c> do</c><00:08:28.240><c> you</c><00:08:28.330><c> get</c><00:08:28.449><c> immutability</c><00:08:28.960><c> with</c>

00:08:29.339 --> 00:08:29.349 align:start position:0%
back so how do you get immutability with
 

00:08:29.349 --> 00:08:31.439 align:start position:0%
back so how do you get immutability with
these<00:08:29.529><c> things</c><00:08:29.860><c> well</c><00:08:30.159><c> usually</c><00:08:30.550><c> what</c><00:08:30.879><c> you</c><00:08:31.029><c> do</c><00:08:31.210><c> is</c>

00:08:31.439 --> 00:08:31.449 align:start position:0%
these things well usually what you do is
 

00:08:31.449 --> 00:08:35.760 align:start position:0%
these things well usually what you do is
you<00:08:32.349><c> do</c><00:08:32.529><c> the</c><00:08:32.560><c> unmodifiable</c><00:08:33.459><c> list</c><00:08:34.380><c> you</c><00:08:35.380><c> clone</c>

00:08:35.760 --> 00:08:35.770 align:start position:0%
you do the unmodifiable list you clone
 

00:08:35.770 --> 00:08:37.110 align:start position:0%
you do the unmodifiable list you clone
it<00:08:35.979><c> because</c><00:08:36.459><c> you</c><00:08:36.550><c> don't</c><00:08:36.729><c> know</c><00:08:36.820><c> where</c><00:08:36.940><c> the</c>

00:08:37.110 --> 00:08:37.120 align:start position:0%
it because you don't know where the
 

00:08:37.120 --> 00:08:39.149 align:start position:0%
it because you don't know where the
source<00:08:37.329><c> is</c><00:08:37.510><c> unmodifiable</c><00:08:38.140><c> or</c><00:08:38.440><c> not</c><00:08:38.649><c> you</c><00:08:39.039><c> have</c>

00:08:39.149 --> 00:08:39.159 align:start position:0%
source is unmodifiable or not you have
 

00:08:39.159 --> 00:08:41.310 align:start position:0%
source is unmodifiable or not you have
to<00:08:39.250><c> take</c><00:08:39.399><c> a</c><00:08:39.430><c> clone</c><00:08:39.729><c> a</c><00:08:39.760><c> copy</c><00:08:40.089><c> and</c><00:08:40.570><c> then</c><00:08:41.019><c> you</c><00:08:41.050><c> wrap</c>

00:08:41.310 --> 00:08:41.320 align:start position:0%
to take a clone a copy and then you wrap
 

00:08:41.320 --> 00:08:43.199 align:start position:0%
to take a clone a copy and then you wrap
it<00:08:41.349><c> and</c><00:08:41.680><c> then</c><00:08:41.740><c> you</c><00:08:42.039><c> throw</c><00:08:42.250><c> away</c><00:08:42.339><c> the</c><00:08:42.459><c> source</c><00:08:42.820><c> I</c>

00:08:43.199 --> 00:08:43.209 align:start position:0%
it and then you throw away the source I
 

00:08:43.209 --> 00:08:45.329 align:start position:0%
it and then you throw away the source I
don't<00:08:44.050><c> want</c><00:08:44.169><c> a</c><00:08:44.199><c> reference</c><00:08:44.620><c> to</c><00:08:44.740><c> that</c><00:08:44.890><c> because</c><00:08:45.190><c> I</c>

00:08:45.329 --> 00:08:45.339 align:start position:0%
don't want a reference to that because I
 

00:08:45.339 --> 00:08:47.250 align:start position:0%
don't want a reference to that because I
don't<00:08:45.399><c> I</c><00:08:45.699><c> don't</c><00:08:46.000><c> want</c><00:08:46.329><c> to</c><00:08:46.510><c> know</c><00:08:46.690><c> what</c><00:08:46.899><c> that</c><00:08:46.930><c> is</c>

00:08:47.250 --> 00:08:47.260 align:start position:0%
don't I don't want to know what that is
 

00:08:47.260 --> 00:08:50.879 align:start position:0%
don't I don't want to know what that is
I<00:08:47.290><c> don't</c><00:08:47.500><c> want</c><00:08:47.829><c> to</c><00:08:49.079><c> modify</c><00:08:50.079><c> that</c><00:08:50.320><c> at</c>

00:08:50.879 --> 00:08:50.889 align:start position:0%
I don't want to modify that at
 

00:08:50.889 --> 00:08:54.989 align:start position:0%
I don't want to modify that at
or<00:08:52.769><c> another</c><00:08:53.769><c> way</c><00:08:53.949><c> to</c><00:08:54.009><c> do</c><00:08:54.220><c> that</c><00:08:54.369><c> is</c><00:08:54.609><c> using</c>

00:08:54.989 --> 00:08:54.999 align:start position:0%
or another way to do that is using
 

00:08:54.999 --> 00:08:57.449 align:start position:0%
or another way to do that is using
stream<00:08:55.480><c> so</c><00:08:56.139><c> you</c><00:08:56.230><c> can</c><00:08:56.410><c> use</c><00:08:56.589><c> color</c><00:08:56.859><c> collect</c>

00:08:57.449 --> 00:08:57.459 align:start position:0%
stream so you can use color collect
 

00:08:57.459 --> 00:09:00.599 align:start position:0%
stream so you can use color collect
collecting<00:08:58.029><c> then</c><00:08:58.209><c> two</c><00:08:58.449><c> less</c><00:08:58.660><c> than</c><00:08:58.689><c> then</c><00:08:59.609><c> wrap</c>

00:09:00.599 --> 00:09:00.609 align:start position:0%
collecting then two less than then wrap
 

00:09:00.609 --> 00:09:02.039 align:start position:0%
collecting then two less than then wrap
it<00:09:00.639><c> in</c><00:09:00.910><c> a</c><00:09:01.029><c> list</c><00:09:01.209><c> there</c><00:09:01.449><c> and</c><00:09:01.480><c> I'm</c><00:09:01.689><c> throwing</c><00:09:01.929><c> away</c>

00:09:02.039 --> 00:09:02.049 align:start position:0%
it in a list there and I'm throwing away
 

00:09:02.049 --> 00:09:04.319 align:start position:0%
it in a list there and I'm throwing away
the<00:09:02.230><c> source</c><00:09:02.559><c> implicitly</c><00:09:03.160><c> here</c><00:09:03.609><c> so</c><00:09:04.089><c> it's</c><00:09:04.209><c> not</c>

00:09:04.319 --> 00:09:04.329 align:start position:0%
the source implicitly here so it's not
 

00:09:04.329 --> 00:09:05.669 align:start position:0%
the source implicitly here so it's not
going<00:09:04.480><c> to</c><00:09:04.540><c> be</c><00:09:04.629><c> reference</c><00:09:05.109><c> from</c><00:09:05.290><c> outside</c>

00:09:05.669 --> 00:09:05.679 align:start position:0%
going to be reference from outside
 

00:09:05.679 --> 00:09:06.359 align:start position:0%
going to be reference from outside
anymore

00:09:06.359 --> 00:09:06.369 align:start position:0%
anymore
 

00:09:06.369 --> 00:09:08.759 align:start position:0%
anymore
and<00:09:07.119><c> of</c><00:09:07.209><c> course</c><00:09:07.389><c> list</c><00:09:07.629><c> of</c><00:09:07.779><c> and</c><00:09:07.959><c> friends</c><00:09:08.319><c> are</c><00:09:08.529><c> as</c>

00:09:08.759 --> 00:09:08.769 align:start position:0%
and of course list of and friends are as
 

00:09:08.769 --> 00:09:11.039 align:start position:0%
and of course list of and friends are as
if<00:09:08.889><c> the</c><00:09:09.040><c> source</c><00:09:09.279><c> is</c><00:09:09.339><c> never</c><00:09:09.639><c> accessible</c><00:09:10.329><c> so</c>

00:09:11.039 --> 00:09:11.049 align:start position:0%
if the source is never accessible so
 

00:09:11.049 --> 00:09:12.509 align:start position:0%
if the source is never accessible so
that's<00:09:11.230><c> the</c><00:09:11.350><c> way</c><00:09:11.470><c> I</c><00:09:11.499><c> kind</c><00:09:11.859><c> of</c><00:09:11.980><c> describe</c><00:09:12.309><c> a</c>

00:09:12.509 --> 00:09:12.519 align:start position:0%
that's the way I kind of describe a
 

00:09:12.519 --> 00:09:14.309 align:start position:0%
that's the way I kind of describe a
modifiable<00:09:12.970><c> collections</c><00:09:13.629><c> to</c><00:09:13.779><c> myself</c><00:09:13.959><c> and</c><00:09:14.230><c> you</c>

00:09:14.309 --> 00:09:14.319 align:start position:0%
modifiable collections to myself and you
 

00:09:14.319 --> 00:09:16.079 align:start position:0%
modifiable collections to myself and you
have<00:09:14.589><c> to</c><00:09:14.709><c> jump</c><00:09:14.919><c> through</c><00:09:15.189><c> hoops</c><00:09:15.220><c> if</c><00:09:15.819><c> you</c><00:09:15.939><c> want</c>

00:09:16.079 --> 00:09:16.089 align:start position:0%
have to jump through hoops if you want
 

00:09:16.089 --> 00:09:17.909 align:start position:0%
have to jump through hoops if you want
to<00:09:16.179><c> get</c><00:09:16.329><c> something</c><00:09:17.049><c> that's</c><00:09:17.169><c> immutable</c><00:09:17.769><c> and</c>

00:09:17.909 --> 00:09:17.919 align:start position:0%
to get something that's immutable and
 

00:09:17.919 --> 00:09:18.960 align:start position:0%
to get something that's immutable and
you<00:09:17.980><c> knows</c><00:09:18.189><c> immutable</c><00:09:18.639><c> but</c><00:09:18.730><c> it's</c><00:09:18.879><c> not</c>

00:09:18.960 --> 00:09:18.970 align:start position:0%
you knows immutable but it's not
 

00:09:18.970 --> 00:09:20.609 align:start position:0%
you knows immutable but it's not
reflected<00:09:19.449><c> in</c><00:09:19.509><c> the</c><00:09:19.569><c> type</c><00:09:19.839><c> system</c><00:09:20.139><c> and</c><00:09:20.499><c> so</c>

00:09:20.609 --> 00:09:20.619 align:start position:0%
reflected in the type system and so
 

00:09:20.619 --> 00:09:23.939 align:start position:0%
reflected in the type system and so
forth<00:09:20.859><c> like</c><00:09:21.040><c> that</c><00:09:22.319><c> so</c><00:09:23.319><c> if</c><00:09:23.379><c> I</c><00:09:23.439><c> go</c><00:09:23.559><c> back</c><00:09:23.709><c> to</c><00:09:23.739><c> my</c>

00:09:23.939 --> 00:09:23.949 align:start position:0%
forth like that so if I go back to my
 

00:09:23.949 --> 00:09:25.889 align:start position:0%
forth like that so if I go back to my
wish<00:09:24.160><c> list</c><00:09:24.399><c> and</c><00:09:24.759><c> look</c><00:09:24.850><c> at</c><00:09:25.029><c> the</c><00:09:25.239><c> JDK</c>

00:09:25.889 --> 00:09:25.899 align:start position:0%
wish list and look at the JDK
 

00:09:25.899 --> 00:09:27.629 align:start position:0%
wish list and look at the JDK
collections<00:09:26.499><c> but</c><00:09:26.889><c> they're</c><00:09:27.129><c> not</c><00:09:27.220><c> doing</c><00:09:27.489><c> very</c>

00:09:27.629 --> 00:09:27.639 align:start position:0%
collections but they're not doing very
 

00:09:27.639 --> 00:09:31.199 align:start position:0%
collections but they're not doing very
well<00:09:27.759><c> here</c><00:09:28.239><c> there's</c><00:09:29.139><c> no</c><00:09:29.429><c> types</c><00:09:30.429><c> to</c><00:09:30.790><c> indicate</c>

00:09:31.199 --> 00:09:31.209 align:start position:0%
well here there's no types to indicate
 

00:09:31.209 --> 00:09:33.629 align:start position:0%
well here there's no types to indicate
that<00:09:31.540><c> you've</c><00:09:31.809><c> got</c><00:09:31.929><c> an</c><00:09:32.019><c> immutable</c><00:09:32.290><c> thing</c><00:09:32.829><c> it's</c>

00:09:33.629 --> 00:09:33.639 align:start position:0%
that you've got an immutable thing it's
 

00:09:33.639 --> 00:09:36.439 align:start position:0%
that you've got an immutable thing it's
not<00:09:33.879><c> sealed</c><00:09:34.179><c> you</c><00:09:34.540><c> can</c><00:09:34.569><c> open</c><00:09:34.929><c> it</c><00:09:35.019><c> up</c>

00:09:36.439 --> 00:09:36.449 align:start position:0%
not sealed you can open it up
 

00:09:36.449 --> 00:09:38.489 align:start position:0%
not sealed you can open it up
tautologically<00:09:37.449><c> it</c><00:09:37.600><c> provides</c><00:09:37.929><c> a</c><00:09:38.049><c> bridge</c><00:09:38.290><c> to</c>

00:09:38.489 --> 00:09:38.499 align:start position:0%
tautologically it provides a bridge to
 

00:09:38.499 --> 00:09:40.319 align:start position:0%
tautologically it provides a bridge to
itself<00:09:38.889><c> and</c><00:09:39.309><c> there's</c><00:09:39.850><c> not</c><00:09:39.970><c> really</c><00:09:40.029><c> any</c>

00:09:40.319 --> 00:09:40.329 align:start position:0%
itself and there's not really any
 

00:09:40.329 --> 00:09:41.849 align:start position:0%
itself and there's not really any
efficient<00:09:40.839><c> construction</c><00:09:41.410><c> updates</c><00:09:41.709><c> and</c>

00:09:41.849 --> 00:09:41.859 align:start position:0%
efficient construction updates and
 

00:09:41.859 --> 00:09:43.889 align:start position:0%
efficient construction updates and
copying<00:09:42.129><c> if</c><00:09:42.189><c> you</c><00:09:42.309><c> get</c><00:09:42.459><c> a</c><00:09:42.489><c> list</c><00:09:42.730><c> and</c><00:09:43.540><c> you</c><00:09:43.569><c> want</c>

00:09:43.889 --> 00:09:43.899 align:start position:0%
copying if you get a list and you want
 

00:09:43.899 --> 00:09:45.239 align:start position:0%
copying if you get a list and you want
to<00:09:44.019><c> make</c><00:09:44.139><c> sure</c><00:09:44.169><c> that</c><00:09:44.410><c> no</c><00:09:44.559><c> one</c><00:09:44.679><c> scribbles</c><00:09:45.040><c> on</c><00:09:45.160><c> it</c>

00:09:45.239 --> 00:09:45.249 align:start position:0%
to make sure that no one scribbles on it
 

00:09:45.249 --> 00:09:47.759 align:start position:0%
to make sure that no one scribbles on it
you<00:09:45.339><c> have</c><00:09:45.489><c> to</c><00:09:45.579><c> take</c><00:09:45.699><c> a</c><00:09:45.730><c> copy</c><00:09:45.970><c> and</c><00:09:46.529><c> if</c><00:09:47.529><c> you</c><00:09:47.619><c> want</c>

00:09:47.759 --> 00:09:47.769 align:start position:0%
you have to take a copy and if you want
 

00:09:47.769 --> 00:09:49.349 align:start position:0%
you have to take a copy and if you want
to<00:09:47.859><c> make</c><00:09:48.009><c> sure</c><00:09:48.040><c> no</c><00:09:48.369><c> one</c><00:09:48.489><c> else</c><00:09:48.609><c> scribbles</c><00:09:49.059><c> on</c><00:09:49.209><c> it</c>

00:09:49.349 --> 00:09:49.359 align:start position:0%
to make sure no one else scribbles on it
 

00:09:49.359 --> 00:09:50.909 align:start position:0%
to make sure no one else scribbles on it
when<00:09:49.509><c> you</c><00:09:49.629><c> return</c><00:09:49.959><c> it</c><00:09:50.139><c> you</c><00:09:50.290><c> even</c><00:09:50.379><c> make</c><00:09:50.589><c> a</c><00:09:50.619><c> copy</c>

00:09:50.909 --> 00:09:50.919 align:start position:0%
when you return it you even make a copy
 

00:09:50.919 --> 00:09:52.559 align:start position:0%
when you return it you even make a copy
you<00:09:51.100><c> you</c><00:09:51.220><c> wrap</c><00:09:51.429><c> it</c><00:09:51.669><c> and</c><00:09:51.819><c> hold</c><00:09:52.029><c> the</c><00:09:52.149><c> source</c><00:09:52.389><c> to</c>

00:09:52.559 --> 00:09:52.569 align:start position:0%
you you wrap it and hold the source to
 

00:09:52.569 --> 00:09:54.119 align:start position:0%
you you wrap it and hold the source to
yourself<00:09:52.899><c> tightly</c><00:09:53.350><c> so</c><00:09:53.499><c> no</c><00:09:53.589><c> one</c><00:09:53.709><c> else</c><00:09:53.799><c> can</c><00:09:53.949><c> get</c>

00:09:54.119 --> 00:09:54.129 align:start position:0%
yourself tightly so no one else can get
 

00:09:54.129 --> 00:09:58.379 align:start position:0%
yourself tightly so no one else can get
it<00:09:56.249><c> so</c><00:09:57.249><c> I</c><00:09:57.279><c> think</c><00:09:57.399><c> unmodified</c><00:09:58.149><c> there's</c><00:09:58.360><c> a</c>

00:09:58.379 --> 00:09:58.389 align:start position:0%
it so I think unmodified there's a
 

00:09:58.389 --> 00:10:00.389 align:start position:0%
it so I think unmodified there's a
reasonable<00:09:58.899><c> extraction</c><00:09:59.559><c> abstraction</c><00:10:00.220><c> for</c>

00:10:00.389 --> 00:10:00.399 align:start position:0%
reasonable extraction abstraction for
 

00:10:00.399 --> 00:10:03.329 align:start position:0%
reasonable extraction abstraction for
mutable<00:10:00.819><c> collections</c><00:10:01.389><c> but</c><00:10:02.139><c> it's</c><00:10:02.410><c> not</c><00:10:02.739><c> really</c>

00:10:03.329 --> 00:10:03.339 align:start position:0%
mutable collections but it's not really
 

00:10:03.339 --> 00:10:05.850 align:start position:0%
mutable collections but it's not really
good<00:10:03.549><c> for</c><00:10:03.579><c> immutable</c><00:10:04.499><c> sorry</c><00:10:05.499><c> did</c><00:10:05.619><c> I</c><00:10:05.709><c> say</c>

00:10:05.850 --> 00:10:05.860 align:start position:0%
good for immutable sorry did I say
 

00:10:05.860 --> 00:10:07.470 align:start position:0%
good for immutable sorry did I say
mutable<00:10:06.249><c> or</c><00:10:06.309><c> immutable</c><00:10:06.369><c> I'm</c><00:10:06.939><c> going</c><00:10:07.119><c> to</c><00:10:07.179><c> fixed</c>

00:10:07.470 --> 00:10:07.480 align:start position:0%
mutable or immutable I'm going to fixed
 

00:10:07.480 --> 00:10:09.239 align:start position:0%
mutable or immutable I'm going to fixed
up<00:10:07.629><c> so</c><00:10:08.079><c> good</c><00:10:08.199><c> abstraction</c><00:10:08.709><c> for</c><00:10:08.829><c> mutable</c>

00:10:09.239 --> 00:10:09.249 align:start position:0%
up so good abstraction for mutable
 

00:10:09.249 --> 00:10:11.400 align:start position:0%
up so good abstraction for mutable
collections<00:10:09.730><c> but</c><00:10:10.209><c> not</c><00:10:10.449><c> for</c><00:10:10.749><c> immutable</c>

00:10:11.400 --> 00:10:11.410 align:start position:0%
collections but not for immutable
 

00:10:11.410 --> 00:10:14.009 align:start position:0%
collections but not for immutable
collections<00:10:12.389><c> there</c><00:10:13.389><c> that</c><00:10:13.569><c> would</c><00:10:13.689><c> be</c><00:10:13.839><c> my</c>

00:10:14.009 --> 00:10:14.019 align:start position:0%
collections there that would be my
 

00:10:14.019 --> 00:10:15.389 align:start position:0%
collections there that would be my
argument<00:10:14.169><c> it</c><00:10:14.649><c> doesn't</c><00:10:14.919><c> mean</c><00:10:15.040><c> we</c><00:10:15.160><c> shouldn't</c>

00:10:15.389 --> 00:10:15.399 align:start position:0%
argument it doesn't mean we shouldn't
 

00:10:15.399 --> 00:10:18.419 align:start position:0%
argument it doesn't mean we shouldn't
improve<00:10:15.850><c> this</c><00:10:16.059><c> notion</c><00:10:16.329><c> in</c><00:10:17.110><c> the</c><00:10:17.290><c> JDK</c><00:10:17.829><c> but</c><00:10:18.399><c> I</c>

00:10:18.419 --> 00:10:18.429 align:start position:0%
improve this notion in the JDK but I
 

00:10:18.429 --> 00:10:19.859 align:start position:0%
improve this notion in the JDK but I
think<00:10:18.699><c> if</c><00:10:18.819><c> you</c><00:10:18.910><c> want</c><00:10:19.119><c> to</c><00:10:19.209><c> get</c><00:10:19.360><c> to</c><00:10:19.509><c> truly</c>

00:10:19.859 --> 00:10:19.869 align:start position:0%
think if you want to get to truly
 

00:10:19.869 --> 00:10:21.629 align:start position:0%
think if you want to get to truly
immutable<00:10:20.439><c> collections</c><00:10:20.980><c> we</c><00:10:21.249><c> have</c><00:10:21.279><c> to</c><00:10:21.519><c> have</c>

00:10:21.629 --> 00:10:21.639 align:start position:0%
immutable collections we have to have
 

00:10:21.639 --> 00:10:25.079 align:start position:0%
immutable collections we have to have
something<00:10:22.029><c> else</c><00:10:23.309><c> so</c><00:10:24.309><c> what</c><00:10:24.459><c> does</c><00:10:24.579><c> guavas</c>

00:10:25.079 --> 00:10:25.089 align:start position:0%
something else so what does guavas
 

00:10:25.089 --> 00:10:26.850 align:start position:0%
something else so what does guavas
immutable<00:10:26.019><c> collections</c><00:10:26.410><c> do</c><00:10:26.470><c> anyone</c><00:10:26.679><c> use</c>

00:10:26.850 --> 00:10:26.860 align:start position:0%
immutable collections do anyone use
 

00:10:26.860 --> 00:10:29.280 align:start position:0%
immutable collections do anyone use
guavas<00:10:27.279><c> collections</c><00:10:27.839><c> they</c><00:10:28.839><c> are</c><00:10:28.929><c> really</c><00:10:29.110><c> quite</c>

00:10:29.280 --> 00:10:29.290 align:start position:0%
guavas collections they are really quite
 

00:10:29.290 --> 00:10:30.949 align:start position:0%
guavas collections they are really quite
popular<00:10:29.799><c> very</c><00:10:30.100><c> well-designed</c>

00:10:30.949 --> 00:10:30.959 align:start position:0%
popular very well-designed
 

00:10:30.959 --> 00:10:33.869 align:start position:0%
popular very well-designed
so<00:10:31.959><c> guava</c><00:10:32.230><c> has</c><00:10:32.619><c> a</c><00:10:32.919><c> bunch</c><00:10:33.129><c> of</c><00:10:33.249><c> sealed</c><00:10:33.549><c> types</c>

00:10:33.869 --> 00:10:33.879 align:start position:0%
so guava has a bunch of sealed types
 

00:10:33.879 --> 00:10:35.759 align:start position:0%
so guava has a bunch of sealed types
such<00:10:34.209><c> as</c><00:10:34.239><c> a</c><00:10:34.389><c> mutable</c><00:10:34.720><c> list</c><00:10:35.019><c> and</c><00:10:35.199><c> a</c><00:10:35.230><c> mutable</c><00:10:35.499><c> map</c>

00:10:35.759 --> 00:10:35.769 align:start position:0%
such as a mutable list and a mutable map
 

00:10:35.769 --> 00:10:38.039 align:start position:0%
such as a mutable list and a mutable map
and<00:10:36.129><c> these</c><00:10:36.789><c> implement</c><00:10:37.299><c> our</c><00:10:37.449><c> corresponding</c>

00:10:38.039 --> 00:10:38.049 align:start position:0%
and these implement our corresponding
 

00:10:38.049 --> 00:10:41.100 align:start position:0%
and these implement our corresponding
JDK<00:10:38.970><c> mutable</c><00:10:39.970><c> collection</c><00:10:40.389><c> types</c><00:10:40.629><c> a</c><00:10:40.779><c> mutable</c>

00:10:41.100 --> 00:10:41.110 align:start position:0%
JDK mutable collection types a mutable
 

00:10:41.110 --> 00:10:44.460 align:start position:0%
JDK mutable collection types a mutable
list<00:10:41.410><c> implements</c><00:10:42.189><c> lists</c><00:10:42.669><c> and</c><00:10:43.319><c> copying</c><00:10:44.319><c> is</c>

00:10:44.460 --> 00:10:44.470 align:start position:0%
list implements lists and copying is
 

00:10:44.470 --> 00:10:48.509 align:start position:0%
list implements lists and copying is
kind<00:10:44.709><c> of</c><00:10:44.799><c> smart</c><00:10:45.160><c> it</c><00:10:45.459><c> knows</c><00:10:45.689><c> the</c><00:10:46.689><c> copy</c><00:10:46.899><c> of</c><00:10:47.369><c> if</c><00:10:48.369><c> it</c>

00:10:48.509 --> 00:10:48.519 align:start position:0%
kind of smart it knows the copy of if it
 

00:10:48.519 --> 00:10:50.039 align:start position:0%
kind of smart it knows the copy of if it
takes<00:10:48.699><c> you</c><00:10:48.819><c> of</c><00:10:48.910><c> a</c><00:10:48.999><c> collection</c><00:10:49.269><c> and</c><00:10:49.539><c> it</c><00:10:49.689><c> will</c>

00:10:50.039 --> 00:10:50.049 align:start position:0%
takes you of a collection and it will
 

00:10:50.049 --> 00:10:51.869 align:start position:0%
takes you of a collection and it will
know<00:10:50.289><c> whether</c><00:10:50.679><c> it's</c><00:10:50.889><c> an</c><00:10:51.039><c> immutable</c><00:10:51.279><c> list</c><00:10:51.730><c> of</c>

00:10:51.869 --> 00:10:51.879 align:start position:0%
know whether it's an immutable list of
 

00:10:51.879 --> 00:10:53.999 align:start position:0%
know whether it's an immutable list of
its<00:10:52.029><c> own</c><00:10:52.179><c> kind</c><00:10:52.509><c> or</c><00:10:52.839><c> not</c><00:10:53.049><c> and</c><00:10:53.259><c> decide</c><00:10:53.559><c> to</c><00:10:53.709><c> return</c>

00:10:53.999 --> 00:10:54.009 align:start position:0%
its own kind or not and decide to return
 

00:10:54.009 --> 00:10:56.879 align:start position:0%
its own kind or not and decide to return
it<00:10:54.249><c> back</c><00:10:54.399><c> or</c><00:10:54.699><c> do</c><00:10:54.819><c> a</c><00:10:54.850><c> copy</c><00:10:55.319><c> so</c><00:10:56.319><c> in</c><00:10:56.410><c> some</c><00:10:56.619><c> sense</c>

00:10:56.879 --> 00:10:56.889 align:start position:0%
it back or do a copy so in some sense
 

00:10:56.889 --> 00:10:57.949 align:start position:0%
it back or do a copy so in some sense
it's<00:10:57.129><c> kind</c><00:10:57.339><c> of</c><00:10:57.429><c> smart</c>

00:10:57.949 --> 00:10:57.959 align:start position:0%
it's kind of smart
 

00:10:57.959 --> 00:10:59.519 align:start position:0%
it's kind of smart
whereas<00:10:58.959><c> when</c><00:10:59.110><c> we're</c><00:10:59.259><c> doing</c><00:10:59.350><c> the</c>

00:10:59.519 --> 00:10:59.529 align:start position:0%
whereas when we're doing the
 

00:10:59.529 --> 00:11:01.710 align:start position:0%
whereas when we're doing the
unmodifiable<00:11:00.129><c> case</c><00:11:00.519><c> or</c><00:11:00.850><c> we're</c><00:11:01.149><c> in</c><00:11:01.179><c> the</c><00:11:01.269><c> JDK</c>

00:11:01.710 --> 00:11:01.720 align:start position:0%
unmodifiable case or we're in the JDK
 

00:11:01.720 --> 00:11:02.850 align:start position:0%
unmodifiable case or we're in the JDK
without<00:11:01.929><c> these</c><00:11:02.079><c> things</c><00:11:02.230><c> we</c><00:11:02.350><c> have</c><00:11:02.470><c> to</c><00:11:02.559><c> program</c>

00:11:02.850 --> 00:11:02.860 align:start position:0%
without these things we have to program
 

00:11:02.860 --> 00:11:06.680 align:start position:0%
without these things we have to program
defensively<00:11:03.519><c> and</c><00:11:03.669><c> take</c><00:11:03.850><c> off</c>

00:11:06.680 --> 00:11:06.690 align:start position:0%
 
 

00:11:06.690 --> 00:11:09.540 align:start position:0%
 
so<00:11:07.690><c> I'd</c><00:11:07.810><c> say</c><00:11:07.960><c> that</c><00:11:07.990><c> manifests</c><00:11:08.770><c> immutability</c>

00:11:09.540 --> 00:11:09.550 align:start position:0%
so I'd say that manifests immutability
 

00:11:09.550 --> 00:11:11.730 align:start position:0%
so I'd say that manifests immutability
it's<00:11:09.970><c> sealed</c><00:11:10.330><c> it</c><00:11:10.750><c> doesn't</c><00:11:11.080><c> provide</c><00:11:11.320><c> a</c><00:11:11.380><c> bridge</c>

00:11:11.730 --> 00:11:11.740 align:start position:0%
it's sealed it doesn't provide a bridge
 

00:11:11.740 --> 00:11:14.970 align:start position:0%
it's sealed it doesn't provide a bridge
so<00:11:12.550><c> you</c><00:11:13.149><c> don't</c><00:11:13.390><c> opt-in</c><00:11:13.899><c> explicitly</c><00:11:14.620><c> in</c><00:11:14.740><c> sauce</c>

00:11:14.970 --> 00:11:14.980 align:start position:0%
so you don't opt-in explicitly in sauce
 

00:11:14.980 --> 00:11:17.100 align:start position:0%
so you don't opt-in explicitly in sauce
it<00:11:15.370><c> because</c><00:11:15.610><c> it</c><00:11:15.730><c> extends</c><00:11:16.210><c> list</c><00:11:16.540><c> you</c><00:11:16.750><c> can</c><00:11:16.899><c> pass</c>

00:11:17.100 --> 00:11:17.110 align:start position:0%
it because it extends list you can pass
 

00:11:17.110 --> 00:11:18.720 align:start position:0%
it because it extends list you can pass
it<00:11:17.260><c> around</c><00:11:17.350><c> to</c><00:11:17.560><c> something</c><00:11:17.830><c> that</c><00:11:18.070><c> accepts</c><00:11:18.520><c> list</c>

00:11:18.720 --> 00:11:18.730 align:start position:0%
it around to something that accepts list
 

00:11:18.730 --> 00:11:21.810 align:start position:0%
it around to something that accepts list
I<00:11:19.290><c> don't</c><00:11:20.290><c> like</c><00:11:20.440><c> that</c><00:11:20.589><c> I'd</c><00:11:20.800><c> prefer</c><00:11:21.040><c> explicit</c>

00:11:21.810 --> 00:11:21.820 align:start position:0%
I don't like that I'd prefer explicit
 

00:11:21.820 --> 00:11:23.280 align:start position:0%
I don't like that I'd prefer explicit
opt-in<00:11:22.209><c> to</c><00:11:22.330><c> know</c><00:11:22.450><c> you're</c><00:11:22.600><c> transitioning</c>

00:11:23.280 --> 00:11:23.290 align:start position:0%
opt-in to know you're transitioning
 

00:11:23.290 --> 00:11:25.769 align:start position:0%
opt-in to know you're transitioning
between<00:11:23.410><c> the</c><00:11:23.740><c> two</c><00:11:23.920><c> so</c><00:11:24.220><c> it's</c><00:11:24.700><c> sort</c><00:11:24.910><c> of</c><00:11:24.970><c> as</c><00:11:25.510><c> soon</c>

00:11:25.769 --> 00:11:25.779 align:start position:0%
between the two so it's sort of as soon
 

00:11:25.779 --> 00:11:27.060 align:start position:0%
between the two so it's sort of as soon
as<00:11:25.899><c> you</c><00:11:25.990><c> pop</c><00:11:26.140><c> up</c><00:11:26.320><c> to</c><00:11:26.440><c> list</c><00:11:26.649><c> you're</c><00:11:26.860><c> in</c><00:11:26.950><c> the</c>

00:11:27.060 --> 00:11:27.070 align:start position:0%
as you pop up to list you're in the
 

00:11:27.070 --> 00:11:30.180 align:start position:0%
as you pop up to list you're in the
unmodifiable<00:11:27.610><c> world</c><00:11:27.970><c> again</c><00:11:28.270><c> and</c><00:11:28.770><c> it</c><00:11:29.770><c> kind</c><00:11:30.040><c> of</c>

00:11:30.180 --> 00:11:30.190 align:start position:0%
unmodifiable world again and it kind of
 

00:11:30.190 --> 00:11:32.550 align:start position:0%
unmodifiable world again and it kind of
provides<00:11:30.520><c> efficient</c><00:11:31.029><c> completion</c><00:11:31.600><c> copying</c><00:11:32.320><c> a</c>

00:11:32.550 --> 00:11:32.560 align:start position:0%
provides efficient completion copying a
 

00:11:32.560 --> 00:11:34.320 align:start position:0%
provides efficient completion copying a
bit<00:11:32.920><c> of</c><00:11:33.010><c> efficient</c><00:11:33.459><c> construction</c><00:11:34.029><c> through</c>

00:11:34.320 --> 00:11:34.330 align:start position:0%
bit of efficient construction through
 

00:11:34.330 --> 00:11:38.130 align:start position:0%
bit of efficient construction through
builders<00:11:34.839><c> but</c><00:11:35.290><c> it's</c><00:11:35.500><c> it's</c><00:11:36.130><c> not</c><00:11:36.550><c> what</c><00:11:36.790><c> I</c><00:11:37.140><c> like</c>

00:11:38.130 --> 00:11:38.140 align:start position:0%
builders but it's it's not what I like
 

00:11:38.140 --> 00:11:41.940 align:start position:0%
builders but it's it's not what I like
they<00:11:38.529><c> they're</c><00:11:39.010><c> a</c><00:11:39.040><c> good</c><00:11:39.250><c> compromise</c><00:11:39.750><c> they</c><00:11:40.950><c> they</c>

00:11:41.940 --> 00:11:41.950 align:start position:0%
they they're a good compromise they they
 

00:11:41.950 --> 00:11:43.769 align:start position:0%
they they're a good compromise they they
have<00:11:42.100><c> some</c><00:11:42.250><c> good</c><00:11:42.399><c> properties</c><00:11:42.910><c> with</c><00:11:43.180><c> them</c><00:11:43.390><c> but</c>

00:11:43.769 --> 00:11:43.779 align:start position:0%
have some good properties with them but
 

00:11:43.779 --> 00:11:46.400 align:start position:0%
have some good properties with them but
to<00:11:43.930><c> me</c><00:11:44.050><c> it</c><00:11:44.170><c> doesn't</c><00:11:44.320><c> go</c><00:11:44.500><c> far</c><00:11:44.709><c> enough</c>

00:11:46.400 --> 00:11:46.410 align:start position:0%
to me it doesn't go far enough
 

00:11:46.410 --> 00:11:48.720 align:start position:0%
to me it doesn't go far enough
there's<00:11:47.410><c> eclipse</c><00:11:47.740><c> collections</c><00:11:48.339><c> how</c><00:11:48.580><c> many</c>

00:11:48.720 --> 00:11:48.730 align:start position:0%
there's eclipse collections how many
 

00:11:48.730 --> 00:11:50.250 align:start position:0%
there's eclipse collections how many
have<00:11:48.820><c> used</c><00:11:48.970><c> these</c><00:11:49.180><c> these</c><00:11:49.480><c> are</c><00:11:49.720><c> previously</c>

00:11:50.250 --> 00:11:50.260 align:start position:0%
have used these these are previously
 

00:11:50.260 --> 00:11:53.730 align:start position:0%
have used these these are previously
goldman-sachs<00:11:50.770><c> collections</c><00:11:51.779><c> this</c><00:11:52.779><c> is</c><00:11:53.140><c> I</c>

00:11:53.730 --> 00:11:53.740 align:start position:0%
goldman-sachs collections this is I
 

00:11:53.740 --> 00:11:56.010 align:start position:0%
goldman-sachs collections this is I
described<00:11:54.550><c> as</c><00:11:54.670><c> something</c><00:11:55.089><c> for</c><00:11:55.270><c> everyone</c><00:11:55.720><c> it's</c>

00:11:56.010 --> 00:11:56.020 align:start position:0%
described as something for everyone it's
 

00:11:56.020 --> 00:11:58.710 align:start position:0%
described as something for everyone it's
quite<00:11:56.410><c> a</c><00:11:56.680><c> cornucopia</c><00:11:57.339><c> of</c><00:11:57.940><c> various</c>

00:11:58.710 --> 00:11:58.720 align:start position:0%
quite a cornucopia of various
 

00:11:58.720 --> 00:12:01.680 align:start position:0%
quite a cornucopia of various
collections<00:11:59.020><c> out</c><00:11:59.560><c> there</c><00:11:59.860><c> and</c><00:12:00.730><c> you</c><00:12:01.270><c> may</c><00:12:01.450><c> find</c>

00:12:01.680 --> 00:12:01.690 align:start position:0%
collections out there and you may find
 

00:12:01.690 --> 00:12:03.269 align:start position:0%
collections out there and you may find
something<00:12:01.930><c> very</c><00:12:02.320><c> useful</c><00:12:02.500><c> in</c><00:12:02.830><c> these</c><00:12:02.980><c> kind</c>

00:12:03.269 --> 00:12:03.279 align:start position:0%
something very useful in these kind
 

00:12:03.279 --> 00:12:05.850 align:start position:0%
something very useful in these kind
doing<00:12:03.580><c> these</c><00:12:03.730><c> types</c><00:12:03.940><c> of</c><00:12:04.120><c> collections</c><00:12:04.860><c> from</c>

00:12:05.850 --> 00:12:05.860 align:start position:0%
doing these types of collections from
 

00:12:05.860 --> 00:12:07.769 align:start position:0%
doing these types of collections from
what<00:12:06.070><c> I</c><00:12:06.100><c> what</c><00:12:06.670><c> I've</c><00:12:06.790><c> looked</c><00:12:07.060><c> at</c><00:12:07.240><c> here</c><00:12:07.540><c> I'm</c><00:12:07.660><c> not</c>

00:12:07.769 --> 00:12:07.779 align:start position:0%
what I what I've looked at here I'm not
 

00:12:07.779 --> 00:12:09.269 align:start position:0%
what I what I've looked at here I'm not
an<00:12:07.870><c> expert</c><00:12:08.200><c> on</c><00:12:08.260><c> these</c><00:12:08.470><c> collections</c><00:12:09.010><c> they</c>

00:12:09.269 --> 00:12:09.279 align:start position:0%
an expert on these collections they
 

00:12:09.279 --> 00:12:11.310 align:start position:0%
an expert on these collections they
manifest<00:12:09.760><c> immutability</c><00:12:10.270><c> they</c><00:12:11.050><c> are</c><00:12:11.170><c> not</c>

00:12:11.310 --> 00:12:11.320 align:start position:0%
manifest immutability they are not
 

00:12:11.320 --> 00:12:13.769 align:start position:0%
manifest immutability they are not
sealed<00:12:11.680><c> they</c><00:12:12.370><c> do</c><00:12:12.550><c> provide</c><00:12:12.910><c> a</c><00:12:12.940><c> bridge</c><00:12:13.270><c> as</c><00:12:13.570><c> far</c>

00:12:13.769 --> 00:12:13.779 align:start position:0%
sealed they do provide a bridge as far
 

00:12:13.779 --> 00:12:15.600 align:start position:0%
sealed they do provide a bridge as far
as<00:12:13.900><c> I</c><00:12:14.020><c> can</c><00:12:14.080><c> tell</c><00:12:14.410><c> and</c><00:12:14.650><c> they</c><00:12:14.890><c> have</c><00:12:15.070><c> similar</c>

00:12:15.600 --> 00:12:15.610 align:start position:0%
as I can tell and they have similar
 

00:12:15.610 --> 00:12:17.820 align:start position:0%
as I can tell and they have similar
issues<00:12:16.180><c> as</c><00:12:16.360><c> guava</c><00:12:16.690><c> does</c><00:12:16.990><c> in</c><00:12:17.200><c> terms</c><00:12:17.500><c> of</c>

00:12:17.820 --> 00:12:17.830 align:start position:0%
issues as guava does in terms of
 

00:12:17.830 --> 00:12:19.410 align:start position:0%
issues as guava does in terms of
efficient<00:12:18.279><c> construction</c><00:12:18.850><c> updates</c><00:12:19.209><c> in</c>

00:12:19.410 --> 00:12:19.420 align:start position:0%
efficient construction updates in
 

00:12:19.420 --> 00:12:24.240 align:start position:0%
efficient construction updates in
copying<00:12:21.600><c> so</c><00:12:22.600><c> if</c><00:12:22.690><c> I</c><00:12:22.779><c> look</c><00:12:22.930><c> at</c><00:12:23.080><c> Vava</c><00:12:23.529><c> previously</c>

00:12:24.240 --> 00:12:24.250 align:start position:0%
copying so if I look at Vava previously
 

00:12:24.250 --> 00:12:25.980 align:start position:0%
copying so if I look at Vava previously
called<00:12:24.459><c> Java</c><00:12:24.700><c> slang</c><00:12:25.060><c> people</c><00:12:25.810><c> heard</c><00:12:25.959><c> about</c>

00:12:25.980 --> 00:12:25.990 align:start position:0%
called Java slang people heard about
 

00:12:25.990 --> 00:12:30.620 align:start position:0%
called Java slang people heard about
that<00:12:26.670><c> nice</c><00:12:27.670><c> functional</c><00:12:28.270><c> library</c><00:12:29.490><c> closure</c>

00:12:30.620 --> 00:12:30.630 align:start position:0%
that nice functional library closure
 

00:12:30.630 --> 00:12:34.350 align:start position:0%
that nice functional library closure
Scala<00:12:31.630><c> maybe</c><00:12:32.620><c> Kotlin</c><00:12:33.130><c> too</c><00:12:33.370><c> but</c><00:12:33.580><c> I'm</c><00:12:33.670><c> not</c><00:12:33.700><c> as</c>

00:12:34.350 --> 00:12:34.360 align:start position:0%
Scala maybe Kotlin too but I'm not as
 

00:12:34.360 --> 00:12:37.320 align:start position:0%
Scala maybe Kotlin too but I'm not as
familiar<00:12:34.660><c> with</c><00:12:34.900><c> Catalan</c><00:12:35.440><c> I</c><00:12:35.850><c> think</c><00:12:36.850><c> these</c><00:12:37.000><c> tick</c>

00:12:37.320 --> 00:12:37.330 align:start position:0%
familiar with Catalan I think these tick
 

00:12:37.330 --> 00:12:39.840 align:start position:0%
familiar with Catalan I think these tick
all<00:12:37.540><c> the</c><00:12:37.720><c> boxes</c><00:12:37.750><c> all</c><00:12:38.529><c> the</c><00:12:38.560><c> goals</c><00:12:38.920><c> or</c><00:12:39.339><c> wish</c><00:12:39.580><c> list</c>

00:12:39.840 --> 00:12:39.850 align:start position:0%
all the boxes all the goals or wish list
 

00:12:39.850 --> 00:12:41.760 align:start position:0%
all the boxes all the goals or wish list
that<00:12:40.000><c> I</c><00:12:40.029><c> had</c><00:12:40.360><c> they</c><00:12:40.570><c> often</c><00:12:40.900><c> may</c><00:12:41.110><c> manifest</c><00:12:41.440><c> in</c>

00:12:41.760 --> 00:12:41.770 align:start position:0%
that I had they often may manifest in
 

00:12:41.770 --> 00:12:43.949 align:start position:0%
that I had they often may manifest in
mutability<00:12:42.190><c> they're</c><00:12:42.610><c> sealed</c><00:12:42.970><c> they</c><00:12:43.630><c> provide</c><00:12:43.930><c> a</c>

00:12:43.949 --> 00:12:43.959 align:start position:0%
mutability they're sealed they provide a
 

00:12:43.959 --> 00:12:46.140 align:start position:0%
mutability they're sealed they provide a
bridge<00:12:44.230><c> and</c><00:12:44.650><c> they</c><00:12:45.160><c> also</c><00:12:45.430><c> provide</c><00:12:45.790><c> additional</c>

00:12:46.140 --> 00:12:46.150 align:start position:0%
bridge and they also provide additional
 

00:12:46.150 --> 00:12:48.180 align:start position:0%
bridge and they also provide additional
construction<00:12:46.839><c> updates</c><00:12:47.380><c> and</c><00:12:47.589><c> copying</c><00:12:47.950><c> I</c>

00:12:48.180 --> 00:12:48.190 align:start position:0%
construction updates and copying I
 

00:12:48.190 --> 00:12:50.160 align:start position:0%
construction updates and copying I
haven't<00:12:48.760><c> verified</c><00:12:49.000><c> this</c><00:12:49.480><c> fully</c><00:12:49.779><c> but</c><00:12:50.020><c> that's</c>

00:12:50.160 --> 00:12:50.170 align:start position:0%
haven't verified this fully but that's
 

00:12:50.170 --> 00:12:52.319 align:start position:0%
haven't verified this fully but that's
my<00:12:50.380><c> gut</c><00:12:50.770><c> feeling</c><00:12:51.190><c> here</c><00:12:51.550><c> and</c><00:12:51.730><c> what</c><00:12:52.150><c> these</c>

00:12:52.319 --> 00:12:52.329 align:start position:0%
my gut feeling here and what these
 

00:12:52.329 --> 00:12:56.850 align:start position:0%
my gut feeling here and what these
provide<00:12:54.779><c> so</c><00:12:55.779><c> let's</c><00:12:56.020><c> look</c><00:12:56.170><c> a</c><00:12:56.230><c> bit</c><00:12:56.380><c> closely</c><00:12:56.770><c> at</c>

00:12:56.850 --> 00:12:56.860 align:start position:0%
provide so let's look a bit closely at
 

00:12:56.860 --> 00:12:58.740 align:start position:0%
provide so let's look a bit closely at
the<00:12:56.950><c> efficient</c><00:12:57.279><c> updates</c><00:12:57.700><c> so</c><00:12:58.120><c> what</c><00:12:58.360><c> is</c><00:12:58.450><c> going</c>

00:12:58.740 --> 00:12:58.750 align:start position:0%
the efficient updates so what is going
 

00:12:58.750 --> 00:12:59.370 align:start position:0%
the efficient updates so what is going
on<00:12:58.900><c> here</c>

00:12:59.370 --> 00:12:59.380 align:start position:0%
on here
 

00:12:59.380 --> 00:13:02.430 align:start position:0%
on here
all<00:12:59.589><c> these</c><00:13:00.660><c> collections</c><00:13:01.660><c> some</c><00:13:02.200><c> of</c><00:13:02.320><c> these</c>

00:13:02.430 --> 00:13:02.440 align:start position:0%
all these collections some of these
 

00:13:02.440 --> 00:13:04.800 align:start position:0%
all these collections some of these
collections<00:13:02.740><c> v's</c><00:13:03.310><c> libraries</c><00:13:04.180><c> or</c><00:13:04.329><c> platforms</c>

00:13:04.800 --> 00:13:04.810 align:start position:0%
collections v's libraries or platforms
 

00:13:04.810 --> 00:13:06.780 align:start position:0%
collections v's libraries or platforms
provide<00:13:05.100><c> leverage</c><00:13:06.100><c> something</c><00:13:06.520><c> called</c>

00:13:06.780 --> 00:13:06.790 align:start position:0%
provide leverage something called
 

00:13:06.790 --> 00:13:09.750 align:start position:0%
provide leverage something called
persistent<00:13:07.300><c> data</c><00:13:07.480><c> structures</c><00:13:08.760><c> predominately</c>

00:13:09.750 --> 00:13:09.760 align:start position:0%
persistent data structures predominately
 

00:13:09.760 --> 00:13:12.510 align:start position:0%
persistent data structures predominately
for<00:13:09.880><c> map</c><00:13:10.060><c> sets</c><00:13:10.420><c> and</c><00:13:10.630><c> vectors</c><00:13:11.130><c> vectors</c><00:13:12.130><c> are</c><00:13:12.310><c> non</c>

00:13:12.510 --> 00:13:12.520 align:start position:0%
for map sets and vectors vectors are non
 

00:13:12.520 --> 00:13:14.220 align:start position:0%
for map sets and vectors vectors are non
linked<00:13:12.850><c> lists</c><00:13:13.209><c> they're</c><00:13:13.450><c> not</c><00:13:13.600><c> Java</c><00:13:13.839><c> util</c>

00:13:14.220 --> 00:13:14.230 align:start position:0%
linked lists they're not Java util
 

00:13:14.230 --> 00:13:17.110 align:start position:0%
linked lists they're not Java util
vector<00:13:14.709><c> which</c><00:13:15.670><c> should</c><00:13:16.000><c> be</c><00:13:16.120><c> deprecated</c>

00:13:17.110 --> 00:13:17.120 align:start position:0%
vector which should be deprecated
 

00:13:17.120 --> 00:13:19.720 align:start position:0%
vector which should be deprecated
that<00:13:17.600><c> possibly</c><00:13:17.990><c> never</c><00:13:18.200><c> removed</c><00:13:18.980><c> is</c><00:13:19.550><c> it</c>

00:13:19.720 --> 00:13:19.730 align:start position:0%
that possibly never removed is it
 

00:13:19.730 --> 00:13:22.590 align:start position:0%
that possibly never removed is it
deprecated<00:13:20.240><c> already</c><00:13:20.480><c> Stewart</c><00:13:20.810><c> no</c><00:13:21.320><c> no</c><00:13:21.710><c> yeah</c>

00:13:22.590 --> 00:13:22.600 align:start position:0%
deprecated already Stewart no no yeah
 

00:13:22.600 --> 00:13:26.530 align:start position:0%
deprecated already Stewart no no yeah
same<00:13:23.600><c> for</c><00:13:23.630><c> a</c><00:13:23.930><c> hash-table</c><00:13:24.680><c> as</c><00:13:25.160><c> well</c><00:13:25.490><c> so</c><00:13:26.390><c> they</c>

00:13:26.530 --> 00:13:26.540 align:start position:0%
same for a hash-table as well so they
 

00:13:26.540 --> 00:13:28.480 align:start position:0%
same for a hash-table as well so they
they<00:13:26.900><c> leverage</c><00:13:27.470><c> something</c><00:13:27.680><c> called</c><00:13:27.950><c> and</c><00:13:28.400><c> we</c>

00:13:28.480 --> 00:13:28.490 align:start position:0%
they leverage something called and we
 

00:13:28.490 --> 00:13:31.150 align:start position:0%
they leverage something called and we
call<00:13:28.670><c> persistent</c><00:13:29.150><c> data</c><00:13:29.300><c> structures</c><00:13:30.010><c> so</c><00:13:31.010><c> what</c>

00:13:31.150 --> 00:13:31.160 align:start position:0%
call persistent data structures so what
 

00:13:31.160 --> 00:13:34.600 align:start position:0%
call persistent data structures so what
is<00:13:31.279><c> a</c><00:13:31.310><c> persistent</c><00:13:31.850><c> data</c><00:13:32.029><c> structure</c><00:13:32.980><c> so</c><00:13:33.980><c> absent</c>

00:13:34.600 --> 00:13:34.610 align:start position:0%
is a persistent data structure so absent
 

00:13:34.610 --> 00:13:35.650 align:start position:0%
is a persistent data structure so absent
data<00:13:34.820><c> structure</c><00:13:35.180><c> is</c><00:13:35.270><c> something</c><00:13:35.450><c> that</c>

00:13:35.650 --> 00:13:35.660 align:start position:0%
data structure is something that
 

00:13:35.660 --> 00:13:37.540 align:start position:0%
data structure is something that
preserves<00:13:36.050><c> a</c><00:13:36.230><c> previous</c><00:13:36.680><c> version</c><00:13:37.070><c> of</c><00:13:37.160><c> itself</c>

00:13:37.540 --> 00:13:37.550 align:start position:0%
preserves a previous version of itself
 

00:13:37.550 --> 00:13:39.730 align:start position:0%
preserves a previous version of itself
where<00:13:37.730><c> modified</c><00:13:38.210><c> now</c><00:13:38.810><c> you</c><00:13:38.870><c> can</c><00:13:39.050><c> easily</c><00:13:39.350><c> write</c>

00:13:39.730 --> 00:13:39.740 align:start position:0%
where modified now you can easily write
 

00:13:39.740 --> 00:13:41.230 align:start position:0%
where modified now you can easily write
your<00:13:39.950><c> own</c><00:13:40.070><c> persistent</c><00:13:40.430><c> straight</c><00:13:40.880><c> data</c>

00:13:41.230 --> 00:13:41.240 align:start position:0%
your own persistent straight data
 

00:13:41.240 --> 00:13:42.780 align:start position:0%
your own persistent straight data
structure<00:13:41.600><c> by</c><00:13:41.720><c> doing</c><00:13:41.930><c> a</c><00:13:41.990><c> copy-on-write</c>

00:13:42.780 --> 00:13:42.790 align:start position:0%
structure by doing a copy-on-write
 

00:13:42.790 --> 00:13:45.070 align:start position:0%
structure by doing a copy-on-write
that<00:13:43.790><c> would</c><00:13:43.940><c> be</c><00:13:44.060><c> terribly</c><00:13:44.450><c> inefficient</c><00:13:44.660><c> and</c>

00:13:45.070 --> 00:13:45.080 align:start position:0%
that would be terribly inefficient and
 

00:13:45.080 --> 00:13:46.540 align:start position:0%
that would be terribly inefficient and
that's<00:13:45.200><c> what</c><00:13:45.320><c> we</c><00:13:45.440><c> have</c><00:13:45.560><c> to</c><00:13:45.680><c> do</c><00:13:45.830><c> today</c><00:13:46.010><c> to</c><00:13:46.190><c> code</c>

00:13:46.540 --> 00:13:46.550 align:start position:0%
that's what we have to do today to code
 

00:13:46.550 --> 00:13:49.269 align:start position:0%
that's what we have to do today to code
defensively<00:13:47.089><c> in</c><00:13:47.270><c> the</c><00:13:47.300><c> JDK</c><00:13:47.890><c> but</c><00:13:48.890><c> what</c><00:13:49.040><c> these</c>

00:13:49.269 --> 00:13:49.279 align:start position:0%
defensively in the JDK but what these
 

00:13:49.279 --> 00:13:51.040 align:start position:0%
defensively in the JDK but what these
persistent<00:13:50.060><c> data</c><00:13:50.240><c> structures</c><00:13:50.720><c> do</c><00:13:50.810><c> they</c><00:13:50.930><c> all</c>

00:13:51.040 --> 00:13:51.050 align:start position:0%
persistent data structures do they all
 

00:13:51.050 --> 00:13:54.040 align:start position:0%
persistent data structures do they all
have<00:13:51.290><c> a</c><00:13:51.320><c> common</c><00:13:52.270><c> theme</c><00:13:53.270><c> underneath</c><00:13:53.750><c> and</c>

00:13:54.040 --> 00:13:54.050 align:start position:0%
have a common theme underneath and
 

00:13:54.050 --> 00:13:56.470 align:start position:0%
have a common theme underneath and
that's<00:13:54.110><c> called</c><00:13:54.470><c> hash</c><00:13:54.800><c> array</c><00:13:55.220><c> map</c><00:13:55.640><c> tries</c><00:13:56.150><c> or</c>

00:13:56.470 --> 00:13:56.480 align:start position:0%
that's called hash array map tries or
 

00:13:56.480 --> 00:13:58.840 align:start position:0%
that's called hash array map tries or
ham<00:13:56.690><c> tease</c><00:13:56.930><c> for</c><00:13:57.320><c> short</c><00:13:57.589><c> and</c><00:13:57.830><c> they</c><00:13:58.520><c> are</c><00:13:58.640><c> the</c>

00:13:58.840 --> 00:13:58.850 align:start position:0%
ham tease for short and they are the
 

00:13:58.850 --> 00:14:01.660 align:start position:0%
ham tease for short and they are the
basis<00:13:59.240><c> of</c><00:13:59.390><c> efficient</c><00:13:59.950><c> persistent</c><00:14:00.950><c> immutable</c>

00:14:01.660 --> 00:14:01.670 align:start position:0%
basis of efficient persistent immutable
 

00:14:01.670 --> 00:14:04.660 align:start position:0%
basis of efficient persistent immutable
map<00:14:01.850><c> sets</c><00:14:02.210><c> and</c><00:14:02.480><c> vectors</c><00:14:03.070><c> so</c><00:14:04.070><c> I</c><00:14:04.100><c> think</c><00:14:04.250><c> they</c><00:14:04.550><c> use</c>

00:14:04.660 --> 00:14:04.670 align:start position:0%
map sets and vectors so I think they use
 

00:14:04.670 --> 00:14:09.910 align:start position:0%
map sets and vectors so I think they use
were<00:14:06.550><c> pioneered</c><00:14:07.550><c> in</c><00:14:08.360><c> part</c><00:14:08.720><c> by</c><00:14:08.930><c> phil</c><00:14:09.260><c> Bagwell</c>

00:14:09.910 --> 00:14:09.920 align:start position:0%
were pioneered in part by phil Bagwell
 

00:14:09.920 --> 00:14:13.150 align:start position:0%
were pioneered in part by phil Bagwell
who<00:14:10.490><c> worked</c><00:14:10.970><c> in</c><00:14:11.240><c> Scala</c><00:14:11.810><c> and</c><00:14:12.080><c> worked</c><00:14:12.950><c> at</c>

00:14:13.150 --> 00:14:13.160 align:start position:0%
who worked in Scala and worked at
 

00:14:13.160 --> 00:14:16.420 align:start position:0%
who worked in Scala and worked at
typesafe<00:14:13.670><c> and</c><00:14:14.380><c> and</c><00:14:15.380><c> I</c><00:14:15.470><c> think</c><00:14:15.680><c> like</c><00:14:15.890><c> Bend</c><00:14:16.190><c> and</c>

00:14:16.420 --> 00:14:16.430 align:start position:0%
typesafe and and I think like Bend and
 

00:14:16.430 --> 00:14:18.010 align:start position:0%
typesafe and and I think like Bend and
what<00:14:16.670><c> she's</c><00:14:16.880><c> passed</c><00:14:17.150><c> away</c><00:14:17.270><c> now</c><00:14:17.570><c> but</c><00:14:17.720><c> I</c><00:14:17.779><c> think</c>

00:14:18.010 --> 00:14:18.020 align:start position:0%
what she's passed away now but I think
 

00:14:18.020 --> 00:14:19.960 align:start position:0%
what she's passed away now but I think
he<00:14:18.200><c> he</c><00:14:18.890><c> pioneered</c><00:14:19.220><c> some</c><00:14:19.730><c> of</c><00:14:19.850><c> these</c>

00:14:19.960 --> 00:14:19.970 align:start position:0%
he he pioneered some of these
 

00:14:19.970 --> 00:14:22.150 align:start position:0%
he he pioneered some of these
implementations<00:14:20.930><c> and</c><00:14:21.200><c> designs</c><00:14:21.560><c> in</c><00:14:21.770><c> Scala</c>

00:14:22.150 --> 00:14:22.160 align:start position:0%
implementations and designs in Scala
 

00:14:22.160 --> 00:14:25.930 align:start position:0%
implementations and designs in Scala
first<00:14:22.640><c> of</c><00:14:22.820><c> all</c><00:14:24.100><c> what's</c><00:14:25.100><c> good</c><00:14:25.279><c> about</c><00:14:25.370><c> these</c><00:14:25.700><c> is</c>

00:14:25.930 --> 00:14:25.940 align:start position:0%
first of all what's good about these is
 

00:14:25.940 --> 00:14:28.210 align:start position:0%
first of all what's good about these is
these<00:14:26.120><c> allow</c><00:14:26.630><c> you</c><00:14:26.690><c> to</c><00:14:26.930><c> provide</c><00:14:27.680><c> structural</c>

00:14:28.210 --> 00:14:28.220 align:start position:0%
these allow you to provide structural
 

00:14:28.220 --> 00:14:30.070 align:start position:0%
these allow you to provide structural
sharing<00:14:28.730><c> between</c><00:14:28.910><c> the</c><00:14:29.120><c> new</c><00:14:29.390><c> and</c><00:14:29.630><c> previous</c>

00:14:30.070 --> 00:14:30.080 align:start position:0%
sharing between the new and previous
 

00:14:30.080 --> 00:14:32.199 align:start position:0%
sharing between the new and previous
version<00:14:30.470><c> of</c><00:14:30.529><c> a</c><00:14:30.650><c> collection</c><00:14:30.920><c> so</c><00:14:31.610><c> they</c><00:14:31.760><c> instead</c>

00:14:32.199 --> 00:14:32.209 align:start position:0%
version of a collection so they instead
 

00:14:32.209 --> 00:14:33.579 align:start position:0%
version of a collection so they instead
of<00:14:32.300><c> taking</c><00:14:32.510><c> the</c><00:14:32.600><c> whole</c><00:14:32.720><c> copy</c><00:14:33.110><c> of</c><00:14:33.320><c> something</c>

00:14:33.579 --> 00:14:33.589 align:start position:0%
of taking the whole copy of something
 

00:14:33.589 --> 00:14:36.070 align:start position:0%
of taking the whole copy of something
you<00:14:34.190><c> take</c><00:14:34.370><c> a</c><00:14:34.640><c> copy</c><00:14:35.000><c> of</c><00:14:35.300><c> only</c><00:14:35.570><c> the</c><00:14:35.750><c> bits</c><00:14:35.959><c> that</c>

00:14:36.070 --> 00:14:36.080 align:start position:0%
you take a copy of only the bits that
 

00:14:36.080 --> 00:14:37.720 align:start position:0%
you take a copy of only the bits that
you<00:14:36.200><c> need</c><00:14:36.650><c> to</c><00:14:36.770><c> change</c><00:14:37.070><c> and</c><00:14:37.339><c> then</c><00:14:37.520><c> you</c><00:14:37.580><c> can</c>

00:14:37.720 --> 00:14:37.730 align:start position:0%
you need to change and then you can
 

00:14:37.730 --> 00:14:39.550 align:start position:0%
you need to change and then you can
share<00:14:38.029><c> the</c><00:14:38.240><c> other</c><00:14:38.360><c> bits</c><00:14:38.630><c> and</c><00:14:38.839><c> because</c><00:14:39.410><c> it's</c>

00:14:39.550 --> 00:14:39.560 align:start position:0%
share the other bits and because it's
 

00:14:39.560 --> 00:14:41.199 align:start position:0%
share the other bits and because it's
immutable<00:14:39.800><c> you</c><00:14:40.279><c> know</c><00:14:40.490><c> that</c><00:14:40.670><c> those</c><00:14:40.820><c> other</c><00:14:40.970><c> bits</c>

00:14:41.199 --> 00:14:41.209 align:start position:0%
immutable you know that those other bits
 

00:14:41.209 --> 00:14:44.260 align:start position:0%
immutable you know that those other bits
aren't<00:14:41.420><c> going</c><00:14:41.600><c> to</c><00:14:41.690><c> get</c><00:14:41.779><c> modified</c><00:14:43.120><c> they</c><00:14:44.120><c> are</c>

00:14:44.260 --> 00:14:44.270 align:start position:0%
aren't going to get modified they are
 

00:14:44.270 --> 00:14:46.720 align:start position:0%
aren't going to get modified they are
effectively<00:14:44.660><c> constant</c><00:14:44.959><c> time</c><00:14:45.730><c> effectively</c>

00:14:46.720 --> 00:14:46.730 align:start position:0%
effectively constant time effectively
 

00:14:46.730 --> 00:14:48.430 align:start position:0%
effectively constant time effectively
constant<00:14:47.300><c> time</c><00:14:47.540><c> bit</c><00:14:47.810><c> of</c><00:14:47.900><c> wiggle</c><00:14:48.200><c> room</c><00:14:48.230><c> here</c>

00:14:48.430 --> 00:14:48.440 align:start position:0%
constant time bit of wiggle room here
 

00:14:48.440 --> 00:14:51.010 align:start position:0%
constant time bit of wiggle room here
for<00:14:49.160><c> many</c><00:14:49.310><c> operations</c><00:14:49.970><c> and</c><00:14:50.300><c> they</c><00:14:50.690><c> can</c><00:14:50.900><c> be</c>

00:14:51.010 --> 00:14:51.020 align:start position:0%
for many operations and they can be
 

00:14:51.020 --> 00:14:52.360 align:start position:0%
for many operations and they can be
cached<00:14:51.260><c> friendly</c><00:14:51.709><c> as</c><00:14:51.800><c> well</c><00:14:51.980><c> so</c><00:14:52.220><c> if</c><00:14:52.279><c> you're</c>

00:14:52.360 --> 00:14:52.370 align:start position:0%
cached friendly as well so if you're
 

00:14:52.370 --> 00:14:54.160 align:start position:0%
cached friendly as well so if you're
traversing<00:14:52.580><c> over</c><00:14:53.240><c> them</c><00:14:53.420><c> you're</c><00:14:54.020><c> often</c>

00:14:54.160 --> 00:14:54.170 align:start position:0%
traversing over them you're often
 

00:14:54.170 --> 00:14:57.699 align:start position:0%
traversing over them you're often
prefetching<00:14:55.070><c> stuff</c><00:14:55.310><c> from</c><00:14:55.520><c> the</c><00:14:55.640><c> cache</c><00:14:55.850><c> and</c><00:14:56.709><c> so</c>

00:14:57.699 --> 00:14:57.709 align:start position:0%
prefetching stuff from the cache and so
 

00:14:57.709 --> 00:15:00.579 align:start position:0%
prefetching stuff from the cache and so
you<00:14:57.770><c> get</c><00:14:58.040><c> good</c><00:14:58.220><c> good</c><00:14:58.700><c> performance</c><00:14:59.380><c> they</c><00:15:00.380><c> won't</c>

00:15:00.579 --> 00:15:00.589 align:start position:0%
you get good good performance they won't
 

00:15:00.589 --> 00:15:02.800 align:start position:0%
you get good good performance they won't
beat<00:15:00.830><c> something</c><00:15:01.100><c> like</c><00:15:01.400><c> a</c><00:15:01.430><c> ray</c><00:15:01.670><c> list</c><00:15:01.970><c> ArrayList</c>

00:15:02.800 --> 00:15:02.810 align:start position:0%
beat something like a ray list ArrayList
 

00:15:02.810 --> 00:15:05.620 align:start position:0%
beat something like a ray list ArrayList
is<00:15:02.990><c> damn</c><00:15:03.170><c> hard</c><00:15:03.470><c> to</c><00:15:03.529><c> beat</c><00:15:03.970><c> but</c><00:15:04.970><c> they</c><00:15:05.180><c> trade-off</c>

00:15:05.620 --> 00:15:05.630 align:start position:0%
is damn hard to beat but they trade-off
 

00:15:05.630 --> 00:15:07.960 align:start position:0%
is damn hard to beat but they trade-off
some<00:15:06.500><c> performance</c><00:15:07.100><c> for</c><00:15:07.430><c> some</c><00:15:07.580><c> structural</c>

00:15:07.960 --> 00:15:07.970 align:start position:0%
some performance for some structural
 

00:15:07.970 --> 00:15:12.550 align:start position:0%
some performance for some structural
sharing<00:15:10.420><c> so</c><00:15:11.420><c> what's</c><00:15:11.630><c> the</c><00:15:11.779><c> basis</c><00:15:12.140><c> of</c><00:15:12.200><c> this</c><00:15:12.350><c> if</c>

00:15:12.550 --> 00:15:12.560 align:start position:0%
sharing so what's the basis of this if
 

00:15:12.560 --> 00:15:15.519 align:start position:0%
sharing so what's the basis of this if
you<00:15:12.650><c> know</c><00:15:12.800><c> what</c><00:15:12.950><c> a</c><00:15:12.980><c> tri</c><00:15:13.279><c> tree</c><00:15:13.700><c> is</c><00:15:13.880><c> I</c><00:15:14.529><c> copied</c>

00:15:15.519 --> 00:15:15.529 align:start position:0%
you know what a tri tree is I copied
 

00:15:15.529 --> 00:15:17.769 align:start position:0%
you know what a tri tree is I copied
this<00:15:15.650><c> from</c><00:15:15.920><c> Wikipedia</c><00:15:16.270><c> so</c><00:15:17.270><c> you</c><00:15:17.360><c> can</c><00:15:17.480><c> go</c><00:15:17.600><c> to</c><00:15:17.660><c> the</c>

00:15:17.769 --> 00:15:17.779 align:start position:0%
this from Wikipedia so you can go to the
 

00:15:17.779 --> 00:15:20.260 align:start position:0%
this from Wikipedia so you can go to the
Wikipedia<00:15:18.020><c> page</c><00:15:18.410><c> instead</c><00:15:19.010><c> if</c><00:15:19.130><c> you</c><00:15:19.160><c> want</c><00:15:19.459><c> to</c><00:15:19.670><c> so</c>

00:15:20.260 --> 00:15:20.270 align:start position:0%
Wikipedia page instead if you want to so
 

00:15:20.270 --> 00:15:22.000 align:start position:0%
Wikipedia page instead if you want to so
this<00:15:20.390><c> is</c><00:15:20.510><c> an</c><00:15:20.600><c> example</c><00:15:20.990><c> of</c><00:15:21.080><c> a</c><00:15:21.170><c> tri</c><00:15:21.380><c> tree</c><00:15:21.650><c> so</c><00:15:21.830><c> a</c>

00:15:22.000 --> 00:15:22.010 align:start position:0%
this is an example of a tri tree so a
 

00:15:22.010 --> 00:15:24.370 align:start position:0%
this is an example of a tri tree so a
tri<00:15:22.400><c> tree</c><00:15:22.640><c> basically</c><00:15:23.180><c> it</c><00:15:23.300><c> stores</c><00:15:23.660><c> a</c><00:15:23.900><c> bit</c><00:15:24.230><c> of</c>

00:15:24.370 --> 00:15:24.380 align:start position:0%
tri tree basically it stores a bit of
 

00:15:24.380 --> 00:15:26.170 align:start position:0%
tri tree basically it stores a bit of
the<00:15:24.470><c> keys</c><00:15:24.740><c> if</c><00:15:24.980><c> you're</c><00:15:25.100><c> making</c><00:15:25.370><c> a</c><00:15:25.459><c> map</c><00:15:25.700><c> it</c>

00:15:26.170 --> 00:15:26.180 align:start position:0%
the keys if you're making a map it
 

00:15:26.180 --> 00:15:28.480 align:start position:0%
the keys if you're making a map it
stores<00:15:26.420><c> a</c><00:15:26.450><c> bit</c><00:15:26.630><c> of</c><00:15:26.720><c> a</c><00:15:26.780><c> keys</c><00:15:27.020><c> in</c><00:15:27.230><c> each</c><00:15:27.350><c> node</c>

00:15:28.480 --> 00:15:28.490 align:start position:0%
stores a bit of a keys in each node
 

00:15:28.490 --> 00:15:31.180 align:start position:0%
stores a bit of a keys in each node
you<00:15:28.550><c> go</c><00:15:28.700><c> down</c><00:15:28.970><c> so</c><00:15:29.810><c> if</c><00:15:30.170><c> in</c><00:15:30.470><c> the</c><00:15:30.620><c> example</c><00:15:31.040><c> here</c>

00:15:31.180 --> 00:15:31.190 align:start position:0%
you go down so if in the example here
 

00:15:31.190 --> 00:15:34.389 align:start position:0%
you go down so if in the example here
you've<00:15:31.310><c> got</c><00:15:31.430><c> a</c><00:15:31.459><c> try</c><00:15:31.790><c> for</c><00:15:31.850><c> keys</c><00:15:32.300><c> a</c><00:15:32.480><c> tutti</c><00:15:33.470><c> Ted</c><00:15:33.950><c> 10</c>

00:15:34.389 --> 00:15:34.399 align:start position:0%
you've got a try for keys a tutti Ted 10
 

00:15:34.399 --> 00:15:36.820 align:start position:0%
you've got a try for keys a tutti Ted 10
I<00:15:34.580><c> in</c><00:15:35.029><c> and</c><00:15:35.270><c> in</c><00:15:35.390><c> and</c><00:15:35.720><c> then</c><00:15:36.110><c> numbers</c><00:15:36.529><c> for</c><00:15:36.740><c> the</c>

00:15:36.820 --> 00:15:36.830 align:start position:0%
I in and in and then numbers for the
 

00:15:36.830 --> 00:15:39.579 align:start position:0%
I in and in and then numbers for the
values<00:15:37.250><c> so</c><00:15:37.730><c> you</c><00:15:37.790><c> basically</c><00:15:38.029><c> traverse</c><00:15:38.630><c> the</c>

00:15:39.579 --> 00:15:39.589 align:start position:0%
values so you basically traverse the
 

00:15:39.589 --> 00:15:41.949 align:start position:0%
values so you basically traverse the
tree<00:15:39.770><c> saying</c><00:15:40.160><c> oh</c><00:15:40.310><c> t</c><00:15:40.610><c> okay</c><00:15:41.060><c> I</c><00:15:41.089><c> go</c><00:15:41.390><c> to</c><00:15:41.420><c> this</c><00:15:41.660><c> node</c>

00:15:41.949 --> 00:15:41.959 align:start position:0%
tree saying oh t okay I go to this node
 

00:15:41.959 --> 00:15:44.350 align:start position:0%
tree saying oh t okay I go to this node
and<00:15:42.260><c> oh</c><00:15:42.500><c> I</c><00:15:42.680><c> go</c><00:15:43.010><c> to</c><00:15:43.040><c> two</c><00:15:43.339><c> and</c><00:15:43.700><c> so</c><00:15:43.940><c> forth</c><00:15:43.970><c> like</c>

00:15:44.350 --> 00:15:44.360 align:start position:0%
and oh I go to two and so forth like
 

00:15:44.360 --> 00:15:46.180 align:start position:0%
and oh I go to two and so forth like
that<00:15:44.390><c> and</c><00:15:44.810><c> you</c><00:15:44.930><c> need</c><00:15:45.050><c> to</c><00:15:45.200><c> store</c><00:15:45.440><c> a</c><00:15:45.470><c> prefix</c><00:15:46.040><c> of</c>

00:15:46.180 --> 00:15:46.190 align:start position:0%
that and you need to store a prefix of
 

00:15:46.190 --> 00:15:48.160 align:start position:0%
that and you need to store a prefix of
your<00:15:46.370><c> keys</c><00:15:46.580><c> in</c><00:15:46.850><c> your</c><00:15:46.970><c> tree</c><00:15:47.209><c> for</c><00:15:47.660><c> all</c><00:15:47.839><c> of</c><00:15:47.990><c> the</c>

00:15:48.160 --> 00:15:48.170 align:start position:0%
your keys in your tree for all of the
 

00:15:48.170 --> 00:15:50.470 align:start position:0%
your keys in your tree for all of the
entries<00:15:48.830><c> that</c><00:15:48.890><c> you</c><00:15:49.010><c> actually</c><00:15:49.279><c> have</c><00:15:49.760><c> so</c><00:15:50.330><c> it's</c>

00:15:50.470 --> 00:15:50.480 align:start position:0%
entries that you actually have so it's
 

00:15:50.480 --> 00:15:51.760 align:start position:0%
entries that you actually have so it's
quite<00:15:50.660><c> an</c><00:15:50.779><c> that</c><00:15:50.930><c> it</c><00:15:51.080><c> can</c><00:15:51.290><c> be</c><00:15:51.440><c> quite</c><00:15:51.649><c> an</c>

00:15:51.760 --> 00:15:51.770 align:start position:0%
quite an that it can be quite an
 

00:15:51.770 --> 00:15:54.519 align:start position:0%
quite an that it can be quite an
efficient<00:15:52.190><c> mechanism</c><00:15:52.550><c> and</c><00:15:53.149><c> data</c><00:15:53.959><c> structure</c>

00:15:54.519 --> 00:15:54.529 align:start position:0%
efficient mechanism and data structure
 

00:15:54.529 --> 00:15:56.530 align:start position:0%
efficient mechanism and data structure
and<00:15:54.740><c> often</c><00:15:55.310><c> these</c><00:15:55.490><c> kinds</c><00:15:55.850><c> of</c><00:15:55.910><c> data</c><00:15:56.089><c> structures</c>

00:15:56.530 --> 00:15:56.540 align:start position:0%
and often these kinds of data structures
 

00:15:56.540 --> 00:15:57.850 align:start position:0%
and often these kinds of data structures
use<00:15:56.690><c> when</c><00:15:56.870><c> you're</c><00:15:57.020><c> when</c><00:15:57.320><c> you're</c><00:15:57.350><c> typing</c>

00:15:57.850 --> 00:15:57.860 align:start position:0%
use when you're when you're typing
 

00:15:57.860 --> 00:15:59.920 align:start position:0%
use when you're when you're typing
something<00:15:58.130><c> in</c><00:15:58.430><c> and</c><00:15:58.730><c> you</c><00:15:58.850><c> do</c><00:15:59.000><c> word</c><00:15:59.209><c> completion</c>

00:15:59.920 --> 00:15:59.930 align:start position:0%
something in and you do word completion
 

00:15:59.930 --> 00:16:02.410 align:start position:0%
something in and you do word completion
you<00:16:00.800><c> might</c><00:16:00.950><c> be</c><00:16:01.100><c> using</c><00:16:01.279><c> a</c><00:16:01.459><c> try</c><00:16:01.700><c> underneath</c><00:16:02.180><c> to</c>

00:16:02.410 --> 00:16:02.420 align:start position:0%
you might be using a try underneath to
 

00:16:02.420 --> 00:16:04.900 align:start position:0%
you might be using a try underneath to
do<00:16:02.540><c> to</c><00:16:02.930><c> select</c><00:16:03.290><c> the</c><00:16:03.440><c> possible</c><00:16:03.920><c> words</c><00:16:04.160><c> that</c><00:16:04.790><c> you</c>

00:16:04.900 --> 00:16:04.910 align:start position:0%
do to select the possible words that you
 

00:16:04.910 --> 00:16:07.449 align:start position:0%
do to select the possible words that you
might<00:16:05.089><c> want</c><00:16:05.330><c> to</c><00:16:05.390><c> complete</c><00:16:05.810><c> against</c><00:16:06.459><c> so</c>

00:16:07.449 --> 00:16:07.459 align:start position:0%
might want to complete against so
 

00:16:07.459 --> 00:16:09.250 align:start position:0%
might want to complete against so
essentially<00:16:08.120><c> a</c><00:16:08.149><c> try</c><00:16:08.420><c> here</c><00:16:08.690><c> you</c><00:16:08.779><c> have</c><00:16:08.959><c> a</c><00:16:08.990><c> you</c>

00:16:09.250 --> 00:16:09.260 align:start position:0%
essentially a try here you have a you
 

00:16:09.260 --> 00:16:11.050 align:start position:0%
essentially a try here you have a you
have<00:16:09.410><c> an</c><00:16:09.529><c> alphabet</c><00:16:09.860><c> here</c><00:16:10.580><c> we</c><00:16:10.730><c> have</c><00:16:10.910><c> the</c>

00:16:11.050 --> 00:16:11.060 align:start position:0%
have an alphabet here we have the
 

00:16:11.060 --> 00:16:15.360 align:start position:0%
have an alphabet here we have the
alphabet<00:16:11.540><c> A</c><00:16:12.050><c> to</c><00:16:12.680><c> Z</c><00:16:12.890><c> lower</c><00:16:13.730><c> and</c><00:16:13.940><c> uppercase</c><00:16:14.180><c> and</c>

00:16:15.360 --> 00:16:15.370 align:start position:0%
alphabet A to Z lower and uppercase and
 

00:16:15.370 --> 00:16:17.889 align:start position:0%
alphabet A to Z lower and uppercase and
you<00:16:16.370><c> have</c><00:16:16.610><c> a</c><00:16:16.640><c> string</c><00:16:17.089><c> and</c><00:16:17.360><c> a</c><00:16:17.420><c> string</c><00:16:17.450><c> in</c><00:16:17.810><c> this</c>

00:16:17.889 --> 00:16:17.899 align:start position:0%
you have a string and a string in this
 

00:16:17.899 --> 00:16:19.540 align:start position:0%
you have a string and a string in this
case<00:16:17.959><c> would</c><00:16:18.350><c> be</c><00:16:18.380><c> unbounded</c><00:16:19.100><c> because</c><00:16:19.250><c> it</c><00:16:19.459><c> would</c>

00:16:19.540 --> 00:16:19.550 align:start position:0%
case would be unbounded because it would
 

00:16:19.550 --> 00:16:22.389 align:start position:0%
case would be unbounded because it would
just<00:16:19.580><c> be</c><00:16:19.730><c> a</c><00:16:19.850><c> word</c><00:16:20.680><c> but</c><00:16:21.680><c> we</c><00:16:21.830><c> can</c><00:16:21.980><c> use</c><00:16:22.130><c> the</c><00:16:22.220><c> same</c>

00:16:22.389 --> 00:16:22.399 align:start position:0%
just be a word but we can use the same
 

00:16:22.399 --> 00:16:25.180 align:start position:0%
just be a word but we can use the same
techniques<00:16:22.940><c> in</c><00:16:23.180><c> hash</c><00:16:23.420><c> array</c><00:16:23.690><c> map</c><00:16:23.870><c> tries</c><00:16:24.200><c> so</c>

00:16:25.180 --> 00:16:25.190 align:start position:0%
techniques in hash array map tries so
 

00:16:25.190 --> 00:16:27.519 align:start position:0%
techniques in hash array map tries so
hash<00:16:25.430><c> or</c><00:16:25.610><c> a</c><00:16:25.700><c> map</c><00:16:25.940><c> try</c><00:16:26.209><c> is</c><00:16:26.480><c> essentially</c><00:16:27.290><c> a</c>

00:16:27.519 --> 00:16:27.529 align:start position:0%
hash or a map try is essentially a
 

00:16:27.529 --> 00:16:29.139 align:start position:0%
hash or a map try is essentially a
symbol<00:16:28.190><c> instead</c><00:16:28.490><c> of</c><00:16:28.580><c> a</c><00:16:28.670><c> letter</c><00:16:28.880><c> of</c><00:16:29.060><c> the</c>

00:16:29.139 --> 00:16:29.149 align:start position:0%
symbol instead of a letter of the
 

00:16:29.149 --> 00:16:30.730 align:start position:0%
symbol instead of a letter of the
alphabet<00:16:29.180><c> you</c><00:16:29.750><c> can</c><00:16:29.779><c> say</c><00:16:30.050><c> it's</c><00:16:30.170><c> a</c><00:16:30.230><c> symbol</c><00:16:30.560><c> of</c><00:16:30.649><c> a</c>

00:16:30.730 --> 00:16:30.740 align:start position:0%
alphabet you can say it's a symbol of a
 

00:16:30.740 --> 00:16:33.160 align:start position:0%
alphabet you can say it's a symbol of a
five<00:16:30.920><c> bit</c><00:16:31.160><c> sequence</c><00:16:31.670><c> it's</c><00:16:32.270><c> just</c><00:16:32.540><c> a</c><00:16:32.690><c> number</c>

00:16:33.160 --> 00:16:33.170 align:start position:0%
five bit sequence it's just a number
 

00:16:33.170 --> 00:16:35.920 align:start position:0%
five bit sequence it's just a number
from<00:16:33.320><c> nought</c><00:16:33.560><c> to</c><00:16:33.589><c> 31</c><00:16:34.279><c> and</c><00:16:34.540><c> you</c><00:16:35.540><c> can</c><00:16:35.660><c> say</c><00:16:35.779><c> the</c>

00:16:35.920 --> 00:16:35.930 align:start position:0%
from nought to 31 and you can say the
 

00:16:35.930 --> 00:16:38.680 align:start position:0%
from nought to 31 and you can say the
string<00:16:36.200><c> is</c><00:16:36.380><c> fixed</c><00:16:37.160><c> in</c><00:16:37.279><c> size</c><00:16:37.520><c> of</c><00:16:37.940><c> length</c><00:16:38.149><c> 32</c>

00:16:38.680 --> 00:16:38.690 align:start position:0%
string is fixed in size of length 32
 

00:16:38.690 --> 00:16:40.720 align:start position:0%
string is fixed in size of length 32
bits<00:16:38.930><c> consisting</c><00:16:39.589><c> of</c><00:16:39.649><c> seven</c><00:16:40.010><c> symbols</c><00:16:40.279><c> and</c>

00:16:40.720 --> 00:16:40.730 align:start position:0%
bits consisting of seven symbols and
 

00:16:40.730 --> 00:16:43.120 align:start position:0%
bits consisting of seven symbols and
just<00:16:41.570><c> the</c><00:16:41.660><c> last</c><00:16:41.839><c> symbol</c><00:16:42.079><c> is</c><00:16:42.320><c> just</c><00:16:42.350><c> truncated</c>

00:16:43.120 --> 00:16:43.130 align:start position:0%
just the last symbol is just truncated
 

00:16:43.130 --> 00:16:45.699 align:start position:0%
just the last symbol is just truncated
to<00:16:43.220><c> two</c><00:16:43.399><c> bits</c><00:16:43.610><c> so</c><00:16:44.420><c> the</c><00:16:44.570><c> string</c><00:16:44.870><c> in</c><00:16:45.140><c> a</c><00:16:45.470><c> hash</c>

00:16:45.699 --> 00:16:45.709 align:start position:0%
to two bits so the string in a hash
 

00:16:45.709 --> 00:16:47.560 align:start position:0%
to two bits so the string in a hash
array<00:16:45.740><c> map</c><00:16:46.250><c> tri</c><00:16:46.550><c> is</c><00:16:46.820><c> essentially</c><00:16:47.329><c> the</c><00:16:47.420><c> hash</c>

00:16:47.560 --> 00:16:47.570 align:start position:0%
array map tri is essentially the hash
 

00:16:47.570 --> 00:16:50.079 align:start position:0%
array map tri is essentially the hash
code<00:16:47.810><c> of</c><00:16:47.990><c> an</c><00:16:48.110><c> object</c><00:16:48.529><c> which</c><00:16:48.740><c> is</c><00:16:48.770><c> the</c><00:16:48.920><c> key</c><00:16:49.220><c> so</c>

00:16:50.079 --> 00:16:50.089 align:start position:0%
code of an object which is the key so
 

00:16:50.089 --> 00:16:52.150 align:start position:0%
code of an object which is the key so
we're<00:16:50.240><c> sort</c><00:16:50.450><c> of</c><00:16:50.510><c> laterally</c><00:16:51.410><c> transforming</c><00:16:52.070><c> a</c>

00:16:52.150 --> 00:16:52.160 align:start position:0%
we're sort of laterally transforming a
 

00:16:52.160 --> 00:16:55.569 align:start position:0%
we're sort of laterally transforming a
domain<00:16:52.550><c> to</c><00:16:53.149><c> a</c><00:16:53.180><c> 32</c><00:16:53.720><c> bit</c><00:16:54.020><c> string</c><00:16:54.560><c> and</c><00:16:54.860><c> chopping</c>

00:16:55.569 --> 00:16:55.579 align:start position:0%
domain to a 32 bit string and chopping
 

00:16:55.579 --> 00:16:57.340 align:start position:0%
domain to a 32 bit string and chopping
it<00:16:55.700><c> up</c><00:16:55.850><c> into</c><00:16:56.120><c> a</c><00:16:56.240><c> little</c><00:16:56.270><c> bit</c><00:16:56.540><c> of</c><00:16:56.630><c> symbols</c><00:16:57.079><c> and</c>

00:16:57.340 --> 00:16:57.350 align:start position:0%
it up into a little bit of symbols and
 

00:16:57.350 --> 00:17:00.760 align:start position:0%
it up into a little bit of symbols and
that's<00:16:57.890><c> a</c><00:16:58.100><c> sort</c><00:16:58.310><c> of</c><00:16:58.370><c> a</c><00:16:58.550><c> symbols</c><00:16:59.510><c> our</c><00:16:59.770><c> alphabet</c>

00:17:00.760 --> 00:17:00.770 align:start position:0%
that's a sort of a symbols our alphabet
 

00:17:00.770 --> 00:17:03.660 align:start position:0%
that's a sort of a symbols our alphabet
and<00:17:01.040><c> a</c><00:17:01.100><c> string</c><00:17:01.399><c> is</c><00:17:01.520><c> of</c><00:17:01.730><c> fixed</c><00:17:02.029><c> length</c><00:17:02.329><c> of</c><00:17:02.750><c> size</c>

00:17:03.660 --> 00:17:03.670 align:start position:0%
and a string is of fixed length of size
 

00:17:03.670 --> 00:17:07.390 align:start position:0%
and a string is of fixed length of size
and<00:17:04.670><c> if</c><00:17:05.089><c> here's</c><00:17:05.390><c> an</c><00:17:05.510><c> example</c><00:17:06.079><c> here</c><00:17:06.350><c> so</c><00:17:06.949><c> say</c><00:17:07.220><c> we</c>

00:17:07.390 --> 00:17:07.400 align:start position:0%
and if here's an example here so say we
 

00:17:07.400 --> 00:17:12.460 align:start position:0%
and if here's an example here so say we
had<00:17:07.579><c> a</c><00:17:07.610><c> hash</c><00:17:07.939><c> code</c><00:17:08.300><c> of</c><00:17:08.620><c> cafe</c><00:17:09.620><c> baby</c><00:17:09.920><c> here</c><00:17:10.910><c> and</c><00:17:11.470><c> so</c>

00:17:12.460 --> 00:17:12.470 align:start position:0%
had a hash code of cafe baby here and so
 

00:17:12.470 --> 00:17:15.069 align:start position:0%
had a hash code of cafe baby here and so
our<00:17:12.620><c> symbols</c><00:17:13.100><c> will</c><00:17:13.309><c> be</c><00:17:13.400><c> going</c><00:17:13.579><c> from</c><00:17:14.050><c> right</c><00:17:15.050><c> to</c>

00:17:15.069 --> 00:17:15.079 align:start position:0%
our symbols will be going from right to
 

00:17:15.079 --> 00:17:18.130 align:start position:0%
our symbols will be going from right to
left<00:17:16.000><c> symbol</c><00:17:17.000><c> one</c><00:17:17.150><c> will</c><00:17:17.360><c> be</c><00:17:17.480><c> the</c><00:17:17.630><c> first</c><00:17:17.809><c> five</c>

00:17:18.130 --> 00:17:18.140 align:start position:0%
left symbol one will be the first five
 

00:17:18.140 --> 00:17:20.410 align:start position:0%
left symbol one will be the first five
bits<00:17:18.470><c> symbol</c><00:17:19.459><c> two</c><00:17:19.579><c> will</c><00:17:19.730><c> be</c><00:17:19.850><c> the</c><00:17:19.970><c> next</c><00:17:20.150><c> five</c>

00:17:20.410 --> 00:17:20.420 align:start position:0%
bits symbol two will be the next five
 

00:17:20.420 --> 00:17:22.660 align:start position:0%
bits symbol two will be the next five
bits<00:17:20.689><c> and</c><00:17:20.900><c> so</c><00:17:21.079><c> forth</c><00:17:21.319><c> and</c><00:17:21.530><c> so</c><00:17:21.709><c> on</c><00:17:21.740><c> down</c><00:17:22.400><c> so</c><00:17:22.579><c> we</c>

00:17:22.660 --> 00:17:22.670 align:start position:0%
bits and so forth and so on down so we
 

00:17:22.670 --> 00:17:24.390 align:start position:0%
bits and so forth and so on down so we
have<00:17:22.819><c> maximum</c><00:17:23.510><c> of</c><00:17:23.569><c> seven</c><00:17:23.839><c> symbols</c>

00:17:24.390 --> 00:17:24.400 align:start position:0%
have maximum of seven symbols
 

00:17:24.400 --> 00:17:27.549 align:start position:0%
have maximum of seven symbols
essentially<00:17:25.400><c> a</c><00:17:25.459><c> tree</c><00:17:25.699><c> depth</c><00:17:26.000><c> of</c><00:17:26.209><c> six</c><00:17:26.559><c> does</c>

00:17:27.549 --> 00:17:27.559 align:start position:0%
essentially a tree depth of six does
 

00:17:27.559 --> 00:17:29.440 align:start position:0%
essentially a tree depth of six does
that<00:17:27.679><c> make</c><00:17:27.829><c> sense</c><00:17:27.940><c> what</c><00:17:28.940><c> you're</c><00:17:29.059><c> doing</c><00:17:29.330><c> is</c>

00:17:29.440 --> 00:17:29.450 align:start position:0%
that make sense what you're doing is
 

00:17:29.450 --> 00:17:33.370 align:start position:0%
that make sense what you're doing is
taking<00:17:29.660><c> five</c><00:17:30.200><c> bits</c><00:17:30.500><c> off</c><00:17:30.679><c> each</c><00:17:30.830><c> of</c><00:17:31.040><c> a</c><00:17:31.130><c> hash</c><00:17:31.280><c> code</c>

00:17:33.370 --> 00:17:33.380 align:start position:0%
taking five bits off each of a hash code
 

00:17:33.380 --> 00:17:36.170 align:start position:0%
taking five bits off each of a hash code
so<00:17:34.380><c> essentially</c><00:17:34.920><c> we</c><00:17:35.160><c> have</c><00:17:35.340><c> wide</c><00:17:35.580><c> branching</c>

00:17:36.170 --> 00:17:36.180 align:start position:0%
so essentially we have wide branching
 

00:17:36.180 --> 00:17:38.840 align:start position:0%
so essentially we have wide branching
factor<00:17:36.390><c> here</c><00:17:36.840><c> so</c><00:17:36.870><c> each</c><00:17:37.530><c> each</c><00:17:38.160><c> node</c><00:17:38.550><c> in</c><00:17:38.730><c> our</c>

00:17:38.840 --> 00:17:38.850 align:start position:0%
factor here so each each node in our
 

00:17:38.850 --> 00:17:42.590 align:start position:0%
factor here so each each node in our
tree<00:17:39.500><c> instead</c><00:17:40.500><c> of</c><00:17:40.620><c> if</c><00:17:41.370><c> we</c><00:17:41.460><c> go</c><00:17:41.610><c> back</c><00:17:41.790><c> here</c><00:17:42.120><c> in</c><00:17:42.450><c> a</c>

00:17:42.590 --> 00:17:42.600 align:start position:0%
tree instead of if we go back here in a
 

00:17:42.600 --> 00:17:44.600 align:start position:0%
tree instead of if we go back here in a
tree<00:17:42.810><c> each</c><00:17:42.960><c> node</c><00:17:43.070><c> without</c><00:17:44.070><c> have</c><00:17:44.190><c> a</c><00:17:44.250><c> branching</c>

00:17:44.600 --> 00:17:44.610 align:start position:0%
tree each node without have a branching
 

00:17:44.610 --> 00:17:47.570 align:start position:0%
tree each node without have a branching
factor<00:17:44.820><c> of</c><00:17:45.090><c> 32</c><00:17:45.450><c> and</c><00:17:45.960><c> you</c><00:17:46.710><c> go</c><00:17:46.860><c> down</c><00:17:47.070><c> for</c><00:17:47.310><c> a</c><00:17:47.370><c> depth</c>

00:17:47.570 --> 00:17:47.580 align:start position:0%
factor of 32 and you go down for a depth
 

00:17:47.580 --> 00:17:49.970 align:start position:0%
factor of 32 and you go down for a depth
of<00:17:47.760><c> 6</c><00:17:48.120><c> so</c><00:17:48.750><c> the</c><00:17:48.870><c> depth</c><00:17:49.080><c> is</c><00:17:49.230><c> actually</c><00:17:49.560><c> controlled</c>

00:17:49.970 --> 00:17:49.980 align:start position:0%
of 6 so the depth is actually controlled
 

00:17:49.980 --> 00:17:51.470 align:start position:0%
of 6 so the depth is actually controlled
you're<00:17:50.100><c> not</c><00:17:50.190><c> going</c><00:17:50.310><c> to</c><00:17:50.370><c> go</c><00:17:50.460><c> down</c><00:17:50.490><c> like</c><00:17:51.210><c> depth</c>

00:17:51.470 --> 00:17:51.480 align:start position:0%
you're not going to go down like depth
 

00:17:51.480 --> 00:17:53.840 align:start position:0%
you're not going to go down like depth
of<00:17:51.660><c> 64</c><00:17:52.290><c> or</c><00:17:52.530><c> 32</c><00:17:52.560><c> it's</c><00:17:53.190><c> pretty</c><00:17:53.430><c> pretty</c>

00:17:53.840 --> 00:17:53.850 align:start position:0%
of 64 or 32 it's pretty pretty
 

00:17:53.850 --> 00:17:58.640 align:start position:0%
of 64 or 32 it's pretty pretty
constrained<00:17:55.910><c> and</c><00:17:57.110><c> it's</c><00:17:58.110><c> effectively</c>

00:17:58.640 --> 00:17:58.650 align:start position:0%
constrained and it's effectively
 

00:17:58.650 --> 00:18:00.290 align:start position:0%
constrained and it's effectively
constant<00:17:58.920><c> time</c><00:17:59.430><c> for</c><00:17:59.460><c> look</c><00:17:59.730><c> at</c><00:17:59.820><c> what</c><00:17:59.940><c> I</c><00:17:59.970><c> mean</c><00:18:00.150><c> by</c>

00:18:00.290 --> 00:18:00.300 align:start position:0%
constant time for look at what I mean by
 

00:18:00.300 --> 00:18:01.850 align:start position:0%
constant time for look at what I mean by
effectively<00:18:00.810><c> constant</c><00:18:01.140><c> time</c><00:18:01.590><c> if</c><00:18:01.740><c> you're</c>

00:18:01.850 --> 00:18:01.860 align:start position:0%
effectively constant time if you're
 

00:18:01.860 --> 00:18:05.750 align:start position:0%
effectively constant time if you're
going<00:18:01.980><c> to</c><00:18:02.070><c> do</c><00:18:02.160><c> a</c><00:18:02.190><c> lookup</c><00:18:02.610><c> of</c><00:18:02.790><c> a</c><00:18:04.250><c> key</c><00:18:05.250><c> and</c><00:18:05.460><c> a</c>

00:18:05.750 --> 00:18:05.760 align:start position:0%
going to do a lookup of a key and a
 

00:18:05.760 --> 00:18:09.350 align:start position:0%
going to do a lookup of a key and a
value<00:18:05.790><c> is</c><00:18:06.690><c> essentially</c><00:18:07.140><c> log</c><00:18:07.500><c> 2n</c><00:18:07.860><c> over</c><00:18:08.610><c> 5</c><00:18:09.030><c> which</c>

00:18:09.350 --> 00:18:09.360 align:start position:0%
value is essentially log 2n over 5 which
 

00:18:09.360 --> 00:18:15.550 align:start position:0%
value is essentially log 2n over 5 which
is<00:18:09.540><c> almost</c><00:18:10.110><c> o</c><00:18:10.560><c> 1</c><00:18:10.830><c> you</c><00:18:11.790><c> can</c><00:18:11.940><c> say</c><00:18:12.150><c> for</c><00:18:12.360><c> most</c><00:18:12.540><c> cases</c>

00:18:15.550 --> 00:18:15.560 align:start position:0%
 
 

00:18:15.560 --> 00:18:17.870 align:start position:0%
 
so<00:18:16.560><c> these</c><00:18:16.710><c> things</c><00:18:16.950><c> provide</c><00:18:17.250><c> good</c><00:18:17.460><c> structural</c>

00:18:17.870 --> 00:18:17.880 align:start position:0%
so these things provide good structural
 

00:18:17.880 --> 00:18:21.380 align:start position:0%
so these things provide good structural
sharing<00:18:18.390><c> I</c><00:18:19.040><c> will</c><00:18:20.040><c> show</c><00:18:20.250><c> later</c><00:18:20.280><c> on</c><00:18:20.790><c> visually</c><00:18:21.270><c> I</c>

00:18:21.380 --> 00:18:21.390 align:start position:0%
sharing I will show later on visually I
 

00:18:21.390 --> 00:18:23.060 align:start position:0%
sharing I will show later on visually I
show<00:18:21.630><c> some</c><00:18:21.810><c> visualization</c><00:18:22.380><c> of</c><00:18:22.890><c> this</c>

00:18:23.060 --> 00:18:23.070 align:start position:0%
show some visualization of this
 

00:18:23.070 --> 00:18:24.650 align:start position:0%
show some visualization of this
structural<00:18:23.430><c> sharing</c><00:18:23.880><c> to</c><00:18:24.000><c> get</c><00:18:24.150><c> this</c><00:18:24.270><c> across</c>

00:18:24.650 --> 00:18:24.660 align:start position:0%
structural sharing to get this across
 

00:18:24.660 --> 00:18:27.320 align:start position:0%
structural sharing to get this across
more<00:18:25.530><c> I</c><00:18:25.590><c> hope</c><00:18:25.920><c> but</c><00:18:26.490><c> because</c><00:18:26.850><c> of</c><00:18:26.880><c> this</c><00:18:27.120><c> they're</c>

00:18:27.320 --> 00:18:27.330 align:start position:0%
more I hope but because of this they're
 

00:18:27.330 --> 00:18:28.520 align:start position:0%
more I hope but because of this they're
good<00:18:27.480><c> for</c><00:18:27.690><c> updates</c><00:18:28.110><c> they're</c><00:18:28.380><c> also</c>

00:18:28.520 --> 00:18:28.530 align:start position:0%
good for updates they're also
 

00:18:28.530 --> 00:18:30.080 align:start position:0%
good for updates they're also
potentially<00:18:29.130><c> good</c><00:18:29.280><c> for</c><00:18:29.490><c> merging</c><00:18:29.700><c> and</c>

00:18:30.080 --> 00:18:30.090 align:start position:0%
potentially good for merging and
 

00:18:30.090 --> 00:18:33.020 align:start position:0%
potentially good for merging and
splitting<00:18:30.620><c> so</c><00:18:31.620><c> in</c><00:18:31.800><c> our</c><00:18:31.920><c> collection</c><00:18:32.550><c> in</c><00:18:32.820><c> our</c>

00:18:33.020 --> 00:18:33.030 align:start position:0%
splitting so in our collection in our
 

00:18:33.030 --> 00:18:35.960 align:start position:0%
splitting so in our collection in our
streams<00:18:33.560><c> when</c><00:18:34.560><c> we</c><00:18:34.680><c> do</c><00:18:34.800><c> a</c><00:18:34.830><c> parallel</c><00:18:35.250><c> collection</c>

00:18:35.960 --> 00:18:35.970 align:start position:0%
streams when we do a parallel collection
 

00:18:35.970 --> 00:18:39.200 align:start position:0%
streams when we do a parallel collection
to<00:18:36.120><c> say</c><00:18:36.300><c> to</c><00:18:36.360><c> list</c><00:18:36.900><c> or</c><00:18:37.200><c> to</c><00:18:37.830><c> map</c><00:18:38.100><c> potentially</c><00:18:39.060><c> we</c>

00:18:39.200 --> 00:18:39.210 align:start position:0%
to say to list or to map potentially we
 

00:18:39.210 --> 00:18:41.420 align:start position:0%
to say to list or to map potentially we
could<00:18:39.390><c> use</c><00:18:39.570><c> these</c><00:18:39.750><c> structures</c><00:18:40.230><c> underneath</c><00:18:40.620><c> do</c>

00:18:41.420 --> 00:18:41.430 align:start position:0%
could use these structures underneath do
 

00:18:41.430 --> 00:18:43.100 align:start position:0%
could use these structures underneath do
more<00:18:41.730><c> efficient</c><00:18:42.180><c> merging</c><00:18:42.600><c> than</c><00:18:42.750><c> we</c><00:18:42.870><c> currently</c>

00:18:43.100 --> 00:18:43.110 align:start position:0%
more efficient merging than we currently
 

00:18:43.110 --> 00:18:44.900 align:start position:0%
more efficient merging than we currently
do<00:18:43.410><c> today</c><00:18:43.710><c> because</c><00:18:44.040><c> we</c><00:18:44.160><c> have</c><00:18:44.190><c> a</c><00:18:44.340><c> code</c><00:18:44.610><c> it's</c>

00:18:44.900 --> 00:18:44.910 align:start position:0%
do today because we have a code it's
 

00:18:44.910 --> 00:18:46.790 align:start position:0%
do today because we have a code it's
actually<00:18:45.030><c> a</c><00:18:45.420><c> little</c><00:18:45.840><c> bit</c><00:18:45.960><c> inefficient</c><00:18:46.290><c> what</c>

00:18:46.790 --> 00:18:46.800 align:start position:0%
actually a little bit inefficient what
 

00:18:46.800 --> 00:18:48.860 align:start position:0%
actually a little bit inefficient what
we<00:18:46.950><c> do</c><00:18:47.130><c> when</c><00:18:47.640><c> we</c><00:18:47.760><c> do</c><00:18:47.880><c> collect</c><00:18:48.240><c> two</c><00:18:48.450><c> lists</c><00:18:48.690><c> in</c>

00:18:48.860 --> 00:18:48.870 align:start position:0%
we do when we do collect two lists in
 

00:18:48.870 --> 00:18:51.230 align:start position:0%
we do when we do collect two lists in
parallel<00:18:49.350><c> or</c><00:18:49.610><c> grouping</c><00:18:50.610><c> by</c><00:18:50.790><c> and</c><00:18:51.090><c> these</c>

00:18:51.230 --> 00:18:51.240 align:start position:0%
parallel or grouping by and these
 

00:18:51.240 --> 00:18:52.880 align:start position:0%
parallel or grouping by and these
structures<00:18:51.570><c> could</c><00:18:51.840><c> be</c><00:18:51.900><c> very</c><00:18:52.200><c> interesting</c><00:18:52.800><c> in</c>

00:18:52.880 --> 00:18:52.890 align:start position:0%
structures could be very interesting in
 

00:18:52.890 --> 00:18:54.380 align:start position:0%
structures could be very interesting in
terms<00:18:52.920><c> of</c><00:18:53.310><c> allowing</c><00:18:53.640><c> you</c><00:18:53.820><c> to</c><00:18:53.970><c> collect</c><00:18:54.180><c> in</c>

00:18:54.380 --> 00:18:54.390 align:start position:0%
terms of allowing you to collect in
 

00:18:54.390 --> 00:18:56.060 align:start position:0%
terms of allowing you to collect in
parallel<00:18:54.870><c> and</c><00:18:55.020><c> then</c><00:18:55.140><c> merge</c><00:18:55.380><c> them</c><00:18:55.560><c> efficiently</c>

00:18:56.060 --> 00:18:56.070 align:start position:0%
parallel and then merge them efficiently
 

00:18:56.070 --> 00:18:58.160 align:start position:0%
parallel and then merge them efficiently
together<00:18:56.250><c> because</c><00:18:56.700><c> we</c><00:18:56.820><c> know</c><00:18:56.850><c> some</c><00:18:57.600><c> structures</c>

00:18:58.160 --> 00:18:58.170 align:start position:0%
together because we know some structures
 

00:18:58.170 --> 00:19:00.350 align:start position:0%
together because we know some structures
are<00:18:58.500><c> different</c><00:18:59.040><c> in</c><00:18:59.160><c> each</c><00:18:59.250><c> part</c><00:18:59.610><c> and</c><00:18:59.850><c> some</c>

00:19:00.350 --> 00:19:00.360 align:start position:0%
are different in each part and some
 

00:19:00.360 --> 00:19:01.580 align:start position:0%
are different in each part and some
structures<00:19:00.780><c> are</c><00:19:00.900><c> shared</c><00:19:01.170><c> and</c><00:19:01.290><c> we</c><00:19:01.380><c> can</c><00:19:01.500><c> do</c><00:19:01.560><c> a</c>

00:19:01.580 --> 00:19:01.590 align:start position:0%
structures are shared and we can do a
 

00:19:01.590 --> 00:19:03.020 align:start position:0%
structures are shared and we can do a
little<00:19:01.740><c> bit</c><00:19:01.890><c> of</c><00:19:02.010><c> merging</c><00:19:02.340><c> just</c><00:19:02.550><c> on</c><00:19:02.670><c> the</c><00:19:02.790><c> shared</c>

00:19:03.020 --> 00:19:03.030 align:start position:0%
little bit of merging just on the shared
 

00:19:03.030 --> 00:19:06.920 align:start position:0%
little bit of merging just on the shared
bits<00:19:04.640><c> they</c><00:19:05.640><c> provide</c><00:19:05.940><c> good</c><00:19:06.090><c> memory</c><00:19:06.450><c> usage</c><00:19:06.810><c> as</c>

00:19:06.920 --> 00:19:06.930 align:start position:0%
bits they provide good memory usage as
 

00:19:06.930 --> 00:19:08.510 align:start position:0%
bits they provide good memory usage as
well<00:19:06.960><c> which</c><00:19:07.230><c> I</c><00:19:07.350><c> hope</c><00:19:07.530><c> to</c><00:19:07.650><c> explain</c><00:19:07.980><c> and</c><00:19:08.190><c> good</c><00:19:08.280><c> as</c>

00:19:08.510 --> 00:19:08.520 align:start position:0%
well which I hope to explain and good as
 

00:19:08.520 --> 00:19:10.430 align:start position:0%
well which I hope to explain and good as
I<00:19:08.640><c> said</c><00:19:08.820><c> good</c><00:19:08.970><c> cache</c><00:19:09.180><c> coherency</c><00:19:09.750><c> and</c><00:19:09.900><c> this</c><00:19:10.290><c> is</c>

00:19:10.430 --> 00:19:10.440 align:start position:0%
I said good cache coherency and this is
 

00:19:10.440 --> 00:19:11.960 align:start position:0%
I said good cache coherency and this is
the<00:19:10.530><c> basis</c><00:19:10.890><c> for</c><00:19:10.920><c> vectors</c><00:19:11.430><c> that</c><00:19:11.550><c> rich</c><00:19:11.760><c> Hickey</c>

00:19:11.960 --> 00:19:11.970 align:start position:0%
the basis for vectors that rich Hickey
 

00:19:11.970 --> 00:19:15.440 align:start position:0%
the basis for vectors that rich Hickey
coded<00:19:12.510><c> in</c><00:19:12.690><c> closure</c><00:19:13.080><c> and</c><00:19:13.550><c> where</c><00:19:14.550><c> fill</c><00:19:14.820><c> bag</c><00:19:15.210><c> well</c>

00:19:15.440 --> 00:19:15.450 align:start position:0%
coded in closure and where fill bag well
 

00:19:15.450 --> 00:19:18.620 align:start position:0%
coded in closure and where fill bag well
also<00:19:16.130><c> extended</c><00:19:17.130><c> his</c><00:19:17.310><c> research</c><00:19:17.760><c> to</c><00:19:18.210><c> look</c><00:19:18.480><c> at</c>

00:19:18.620 --> 00:19:18.630 align:start position:0%
also extended his research to look at
 

00:19:18.630 --> 00:19:20.930 align:start position:0%
also extended his research to look at
relaxed<00:19:19.290><c> radix</c><00:19:19.650><c> balanced</c><00:19:20.100><c> trees</c><00:19:20.340><c> for</c><00:19:20.550><c> vectors</c>

00:19:20.930 --> 00:19:20.940 align:start position:0%
relaxed radix balanced trees for vectors
 

00:19:20.940 --> 00:19:23.090 align:start position:0%
relaxed radix balanced trees for vectors
and<00:19:21.180><c> it</c><00:19:21.810><c> can</c><00:19:21.900><c> also</c><00:19:22.020><c> be</c><00:19:22.200><c> used</c><00:19:22.380><c> for</c><00:19:22.440><c> multi</c><00:19:22.860><c> maps</c>

00:19:23.090 --> 00:19:23.100 align:start position:0%
and it can also be used for multi maps
 

00:19:23.100 --> 00:19:26.810 align:start position:0%
and it can also be used for multi maps
at<00:19:23.370><c> JVM</c><00:19:23.730><c> LS</c><00:19:24.000><c> this</c><00:19:24.810><c> year</c><00:19:25.260><c> the</c><00:19:26.160><c> presenter</c><00:19:26.610><c> talked</c>

00:19:26.810 --> 00:19:26.820 align:start position:0%
at JVM LS this year the presenter talked
 

00:19:26.820 --> 00:19:28.160 align:start position:0%
at JVM LS this year the presenter talked
about<00:19:27.030><c> how</c><00:19:27.180><c> he</c><00:19:27.240><c> could</c><00:19:27.420><c> use</c><00:19:27.570><c> these</c><00:19:27.720><c> structures</c>

00:19:28.160 --> 00:19:28.170 align:start position:0%
about how he could use these structures
 

00:19:28.170 --> 00:19:29.630 align:start position:0%
about how he could use these structures
for<00:19:28.350><c> multi</c><00:19:28.620><c> maps</c><00:19:28.830><c> as</c><00:19:29.010><c> well</c><00:19:29.040><c> so</c><00:19:29.340><c> the</c><00:19:29.460><c> quite</c>

00:19:29.630 --> 00:19:29.640 align:start position:0%
for multi maps as well so the quite
 

00:19:29.640 --> 00:19:32.660 align:start position:0%
for multi maps as well so the quite
versatile<00:19:30.830><c> and</c><00:19:31.830><c> they</c><00:19:32.010><c> can</c><00:19:32.130><c> also</c><00:19:32.280><c> be</c><00:19:32.460><c> applied</c>

00:19:32.660 --> 00:19:32.670 align:start position:0%
versatile and they can also be applied
 

00:19:32.670 --> 00:19:34.370 align:start position:0%
versatile and they can also be applied
to<00:19:32.790><c> mutable</c><00:19:33.360><c> collections</c><00:19:33.870><c> as</c><00:19:34.050><c> well</c><00:19:34.200><c> and</c><00:19:34.320><c> this</c>

00:19:34.370 --> 00:19:34.380 align:start position:0%
to mutable collections as well and this
 

00:19:34.380 --> 00:19:35.810 align:start position:0%
to mutable collections as well and this
is<00:19:34.440><c> what</c><00:19:34.650><c> interests</c><00:19:35.100><c> me</c><00:19:35.130><c> for</c><00:19:35.430><c> efficient</c>

00:19:35.810 --> 00:19:35.820 align:start position:0%
is what interests me for efficient
 

00:19:35.820 --> 00:19:37.610 align:start position:0%
is what interests me for efficient
building<00:19:36.330><c> of</c><00:19:36.420><c> something</c><00:19:36.840><c> before</c><00:19:37.140><c> you</c><00:19:37.260><c> turn</c><00:19:37.470><c> it</c>

00:19:37.610 --> 00:19:37.620 align:start position:0%
building of something before you turn it
 

00:19:37.620 --> 00:19:39.860 align:start position:0%
building of something before you turn it
into<00:19:37.740><c> something</c><00:19:38.070><c> immutable</c><00:19:38.520><c> and</c><00:19:38.970><c> I</c><00:19:39.660><c> think</c>

00:19:39.860 --> 00:19:39.870 align:start position:0%
into something immutable and I think
 

00:19:39.870 --> 00:19:41.330 align:start position:0%
into something immutable and I think
they<00:19:39.960><c> can</c><00:19:40.110><c> be</c><00:19:40.230><c> efficiently</c><00:19:40.680><c> implemented</c><00:19:41.250><c> in</c>

00:19:41.330 --> 00:19:41.340 align:start position:0%
they can be efficiently implemented in
 

00:19:41.340 --> 00:19:43.490 align:start position:0%
they can be efficiently implemented in
Java<00:19:41.640><c> they</c><00:19:42.270><c> can</c><00:19:42.450><c> be</c><00:19:42.540><c> efficiently</c><00:19:42.960><c> implemented</c>

00:19:43.490 --> 00:19:43.500 align:start position:0%
Java they can be efficiently implemented
 

00:19:43.500 --> 00:19:45.960 align:start position:0%
Java they can be efficiently implemented
in<00:19:43.560><c> Scala</c><00:19:43.950><c> but</c><00:19:44.580><c> actually</c><00:19:44.880><c> Java</c><00:19:45.240><c> I</c><00:19:45.480><c> believe</c><00:19:45.750><c> in</c>

00:19:45.960 --> 00:19:45.970 align:start position:0%
in Scala but actually Java I believe in
 

00:19:45.970 --> 00:19:46.950 align:start position:0%
in Scala but actually Java I believe in
closures<00:19:46.300><c> are</c><00:19:46.420><c> actually</c><00:19:46.720><c> Java</c>

00:19:46.950 --> 00:19:46.960 align:start position:0%
closures are actually Java
 

00:19:46.960 --> 00:19:50.100 align:start position:0%
closures are actually Java
implementations<00:19:47.860><c> and</c><00:19:48.120><c> Vava</c><00:19:49.120><c> is</c><00:19:49.450><c> another</c>

00:19:50.100 --> 00:19:50.110 align:start position:0%
implementations and Vava is another
 

00:19:50.110 --> 00:19:52.350 align:start position:0%
implementations and Vava is another
example<00:19:50.290><c> of</c><00:19:50.890><c> these</c><00:19:51.070><c> collections</c><00:19:52.030><c> as</c><00:19:52.180><c> well</c>

00:19:52.350 --> 00:19:52.360 align:start position:0%
example of these collections as well
 

00:19:52.360 --> 00:19:55.500 align:start position:0%
example of these collections as well
being<00:19:52.630><c> implemented</c><00:19:53.850><c> so</c><00:19:54.850><c> here's</c><00:19:55.030><c> a</c><00:19:55.090><c> real</c><00:19:55.240><c> naive</c>

00:19:55.500 --> 00:19:55.510 align:start position:0%
being implemented so here's a real naive
 

00:19:55.510 --> 00:19:58.140 align:start position:0%
being implemented so here's a real naive
implementation<00:19:56.430><c> of</c><00:19:57.430><c> how</c><00:19:57.610><c> you</c><00:19:57.670><c> might</c><00:19:57.880><c> go</c><00:19:58.060><c> about</c>

00:19:58.140 --> 00:19:58.150 align:start position:0%
implementation of how you might go about
 

00:19:58.150 --> 00:20:01.110 align:start position:0%
implementation of how you might go about
this<00:19:58.420><c> CP</c><00:19:58.840><c> map</c><00:19:59.050><c> is</c><00:19:59.440><c> a</c><00:19:59.500><c> persistent</c><00:20:00.100><c> map</c><00:20:00.310><c> so</c><00:20:00.820><c> I</c>

00:20:01.110 --> 00:20:01.120 align:start position:0%
this CP map is a persistent map so I
 

00:20:01.120 --> 00:20:03.390 align:start position:0%
this CP map is a persistent map so I
have<00:20:01.630><c> a</c><00:20:01.900><c> thirty</c><00:20:02.290><c> two</c><00:20:02.560><c> way</c><00:20:02.710><c> branching</c><00:20:03.220><c> factor</c>

00:20:03.390 --> 00:20:03.400 align:start position:0%
have a thirty two way branching factor
 

00:20:03.400 --> 00:20:06.270 align:start position:0%
have a thirty two way branching factor
and<00:20:04.330><c> I'll</c><00:20:04.420><c> have</c><00:20:04.600><c> a</c><00:20:04.630><c> key</c><00:20:04.930><c> value</c><00:20:05.170><c> I</c><00:20:05.710><c> need</c><00:20:06.190><c> to</c>

00:20:06.270 --> 00:20:06.280 align:start position:0%
and I'll have a key value I need to
 

00:20:06.280 --> 00:20:07.980 align:start position:0%
and I'll have a key value I need to
store<00:20:06.490><c> my</c><00:20:06.610><c> keys</c><00:20:06.850><c> and</c><00:20:07.060><c> values</c><00:20:07.120><c> as</c><00:20:07.480><c> entry</c><00:20:07.840><c> so</c>

00:20:07.980 --> 00:20:07.990 align:start position:0%
store my keys and values as entry so
 

00:20:07.990 --> 00:20:09.120 align:start position:0%
store my keys and values as entry so
what<00:20:08.140><c> I'm</c><00:20:08.230><c> doing</c><00:20:08.260><c> is</c><00:20:08.590><c> they've</c><00:20:08.740><c> got</c><00:20:08.800><c> a</c><00:20:08.860><c> node</c>

00:20:09.120 --> 00:20:09.130 align:start position:0%
what I'm doing is they've got a node
 

00:20:09.130 --> 00:20:13.550 align:start position:0%
what I'm doing is they've got a node
here<00:20:09.900><c> object</c><00:20:10.900><c> array</c><00:20:11.170><c> and</c><00:20:11.440><c> I'm</c><00:20:12.010><c> storing</c><00:20:12.310><c> 64</c>

00:20:13.550 --> 00:20:13.560 align:start position:0%
here object array and I'm storing 64
 

00:20:13.560 --> 00:20:16.830 align:start position:0%
here object array and I'm storing 64
it's<00:20:14.560><c> a</c><00:20:14.650><c> site</c><00:20:14.860><c> length</c><00:20:15.130><c> of</c><00:20:15.310><c> 64</c><00:20:15.910><c> key</c><00:20:16.270><c> value</c><00:20:16.630><c> key</c>

00:20:16.830 --> 00:20:16.840 align:start position:0%
it's a site length of 64 key value key
 

00:20:16.840 --> 00:20:18.840 align:start position:0%
it's a site length of 64 key value key
value<00:20:17.170><c> key</c><00:20:17.380><c> value</c><00:20:17.710><c> key</c><00:20:17.890><c> value</c><00:20:18.220><c> and</c><00:20:18.370><c> some</c><00:20:18.760><c> of</c>

00:20:18.840 --> 00:20:18.850 align:start position:0%
value key value key value and some of
 

00:20:18.850 --> 00:20:21.290 align:start position:0%
value key value key value and some of
these<00:20:18.940><c> entries</c><00:20:19.300><c> might</c><00:20:19.510><c> be</c><00:20:19.660><c> null</c><00:20:19.980><c> because</c><00:20:20.980><c> the</c>

00:20:21.290 --> 00:20:21.300 align:start position:0%
these entries might be null because the
 

00:20:21.300 --> 00:20:24.210 align:start position:0%
these entries might be null because the
value<00:20:22.350><c> there</c><00:20:23.350><c> might</c><00:20:23.500><c> not</c><00:20:23.650><c> be</c><00:20:23.710><c> an</c><00:20:23.890><c> entry</c>

00:20:24.210 --> 00:20:24.220 align:start position:0%
value there might not be an entry
 

00:20:24.220 --> 00:20:26.610 align:start position:0%
value there might not be an entry
actually<00:20:24.640><c> there</c><00:20:25.090><c> and</c><00:20:25.690><c> it</c><00:20:26.080><c> might</c><00:20:26.200><c> be</c><00:20:26.230><c> a</c><00:20:26.350><c> sub</c>

00:20:26.610 --> 00:20:26.620 align:start position:0%
actually there and it might be a sub
 

00:20:26.620 --> 00:20:29.580 align:start position:0%
actually there and it might be a sub
layer<00:20:26.830><c> there</c><00:20:27.690><c> so</c><00:20:28.690><c> if</c><00:20:28.810><c> I</c><00:20:28.900><c> look</c><00:20:29.080><c> at</c><00:20:29.230><c> the</c><00:20:29.380><c> get</c>

00:20:29.580 --> 00:20:29.590 align:start position:0%
layer there so if I look at the get
 

00:20:29.590 --> 00:20:32.940 align:start position:0%
layer there so if I look at the get
method<00:20:30.070><c> here</c><00:20:30.490><c> for</c><00:20:30.940><c> finding</c><00:20:31.570><c> a</c><00:20:31.780><c> value</c><00:20:32.680><c> for</c><00:20:32.920><c> a</c>

00:20:32.940 --> 00:20:32.950 align:start position:0%
method here for finding a value for a
 

00:20:32.950 --> 00:20:36.420 align:start position:0%
method here for finding a value for a
given<00:20:33.160><c> key</c><00:20:33.580><c> I</c><00:20:33.940><c> might</c><00:20:34.630><c> I</c><00:20:34.900><c> want</c><00:20:35.440><c> to</c><00:20:35.620><c> ask</c><00:20:35.800><c> what</c><00:20:36.340><c> is</c>

00:20:36.420 --> 00:20:36.430 align:start position:0%
given key I might I want to ask what is
 

00:20:36.430 --> 00:20:39.570 align:start position:0%
given key I might I want to ask what is
my<00:20:36.460><c> symbol</c><00:20:37.120><c> at</c><00:20:37.360><c> my</c><00:20:37.540><c> current</c><00:20:37.810><c> depth</c><00:20:38.580><c> so</c>

00:20:39.570 --> 00:20:39.580 align:start position:0%
my symbol at my current depth so
 

00:20:39.580 --> 00:20:41.700 align:start position:0%
my symbol at my current depth so
remember<00:20:39.970><c> the</c><00:20:40.120><c> symbols</c><00:20:40.540><c> of</c><00:20:40.900><c> the</c><00:20:41.200><c> five</c><00:20:41.410><c> bits</c>

00:20:41.700 --> 00:20:41.710 align:start position:0%
remember the symbols of the five bits
 

00:20:41.710 --> 00:20:43.560 align:start position:0%
remember the symbols of the five bits
going<00:20:41.980><c> across</c><00:20:42.190><c> the</c><00:20:42.430><c> hash</c><00:20:42.580><c> code</c><00:20:42.820><c> here</c><00:20:43.120><c> so</c><00:20:43.450><c> I've</c>

00:20:43.560 --> 00:20:43.570 align:start position:0%
going across the hash code here so I've
 

00:20:43.570 --> 00:20:45.720 align:start position:0%
going across the hash code here so I've
got<00:20:43.690><c> to</c><00:20:43.780><c> say</c><00:20:43.930><c> well</c><00:20:44.350><c> how</c><00:20:44.470><c> do</c><00:20:44.530><c> I</c><00:20:44.650><c> index</c><00:20:45.130><c> into</c><00:20:45.580><c> that</c>

00:20:45.720 --> 00:20:45.730 align:start position:0%
got to say well how do I index into that
 

00:20:45.730 --> 00:20:48.030 align:start position:0%
got to say well how do I index into that
array<00:20:46.450><c> of</c><00:20:46.600><c> nodes</c><00:20:46.810><c> well</c><00:20:47.410><c> first</c><00:20:47.650><c> of</c><00:20:47.830><c> all</c><00:20:47.890><c> I've</c>

00:20:48.030 --> 00:20:48.040 align:start position:0%
array of nodes well first of all I've
 

00:20:48.040 --> 00:20:49.890 align:start position:0%
array of nodes well first of all I've
got<00:20:48.070><c> to</c><00:20:48.190><c> get</c><00:20:48.310><c> my</c><00:20:48.460><c> symbol</c><00:20:48.910><c> for</c><00:20:48.940><c> my</c><00:20:49.300><c> hash</c><00:20:49.570><c> code</c>

00:20:49.890 --> 00:20:49.900 align:start position:0%
got to get my symbol for my hash code
 

00:20:49.900 --> 00:20:52.230 align:start position:0%
got to get my symbol for my hash code
and<00:20:50.340><c> essentially</c><00:20:51.340><c> the</c><00:20:51.490><c> method</c><00:20:51.820><c> symbol</c><00:20:52.150><c> at</c>

00:20:52.230 --> 00:20:52.240 align:start position:0%
and essentially the method symbol at
 

00:20:52.240 --> 00:20:54.030 align:start position:0%
and essentially the method symbol at
depth<00:20:52.450><c> is</c><00:20:52.690><c> there</c><00:20:52.870><c> all</c><00:20:53.080><c> it</c><00:20:53.230><c> does</c><00:20:53.410><c> a</c><00:20:53.440><c> shift</c><00:20:53.800><c> down</c>

00:20:54.030 --> 00:20:54.040 align:start position:0%
depth is there all it does a shift down
 

00:20:54.040 --> 00:20:57.210 align:start position:0%
depth is there all it does a shift down
by<00:20:54.280><c> the</c><00:20:54.340><c> depth</c><00:20:54.780><c> times</c><00:20:55.780><c> five</c><00:20:56.140><c> and</c><00:20:56.440><c> chopped</c><00:20:57.010><c> off</c>

00:20:57.210 --> 00:20:57.220 align:start position:0%
by the depth times five and chopped off
 

00:20:57.220 --> 00:20:59.970 align:start position:0%
by the depth times five and chopped off
and<00:20:57.880><c> get</c><00:20:58.300><c> the</c><00:20:58.390><c> first</c><00:20:58.630><c> five</c><00:20:58.870><c> bits</c><00:20:59.170><c> that's</c><00:20:59.710><c> it</c>

00:20:59.970 --> 00:20:59.980 align:start position:0%
and get the first five bits that's it
 

00:20:59.980 --> 00:21:03.810 align:start position:0%
and get the first five bits that's it
and<00:21:00.130><c> that's</c><00:21:00.280><c> my</c><00:21:00.430><c> index</c><00:21:00.910><c> into</c><00:21:01.450><c> my</c><00:21:01.900><c> array</c><00:21:02.200><c> I</c><00:21:02.820><c> look</c>

00:21:03.810 --> 00:21:03.820 align:start position:0%
and that's my index into my array I look
 

00:21:03.820 --> 00:21:06.180 align:start position:0%
and that's my index into my array I look
it<00:21:03.940><c> up</c><00:21:03.970><c> I</c><00:21:04.420><c> see</c><00:21:05.020><c> if</c><00:21:05.080><c> it's</c><00:21:05.200><c> a</c><00:21:05.290><c> sub</c><00:21:05.500><c> layer</c><00:21:05.710><c> node</c><00:21:05.950><c> I</c>

00:21:06.180 --> 00:21:06.190 align:start position:0%
it up I see if it's a sub layer node I
 

00:21:06.190 --> 00:21:09.030 align:start position:0%
it up I see if it's a sub layer node I
Traverse<00:21:06.730><c> down</c><00:21:07.000><c> otherwise</c><00:21:07.330><c> otherwise</c><00:21:08.020><c> I</c><00:21:08.380><c> see</c>

00:21:09.030 --> 00:21:09.040 align:start position:0%
Traverse down otherwise otherwise I see
 

00:21:09.040 --> 00:21:11.780 align:start position:0%
Traverse down otherwise otherwise I see
if<00:21:09.130><c> it's</c><00:21:09.280><c> present</c><00:21:09.490><c> and</c><00:21:09.880><c> I</c><00:21:10.000><c> return</c><00:21:10.330><c> an</c><00:21:10.450><c> optional</c>

00:21:11.780 --> 00:21:11.790 align:start position:0%
if it's present and I return an optional
 

00:21:11.790 --> 00:21:15.060 align:start position:0%
if it's present and I return an optional
say<00:21:12.790><c> whether</c><00:21:13.000><c> it's</c><00:21:13.150><c> present</c><00:21:13.510><c> or</c><00:21:13.630><c> not</c><00:21:14.070><c> know</c>

00:21:15.060 --> 00:21:15.070 align:start position:0%
say whether it's present or not know
 

00:21:15.070 --> 00:21:16.590 align:start position:0%
say whether it's present or not know
that<00:21:15.190><c> that's</c><00:21:15.340><c> pretty</c><00:21:15.520><c> simple</c><00:21:15.880><c> but</c><00:21:16.510><c> that's</c>

00:21:16.590 --> 00:21:16.600 align:start position:0%
that that's pretty simple but that's
 

00:21:16.600 --> 00:21:19.890 align:start position:0%
that that's pretty simple but that's
like<00:21:16.930><c> 64</c><00:21:17.650><c> entries</c><00:21:18.400><c> I</c><00:21:18.610><c> might</c><00:21:18.760><c> not</c><00:21:18.880><c> have</c><00:21:19.060><c> all</c><00:21:19.300><c> 64</c>

00:21:19.890 --> 00:21:19.900 align:start position:0%
like 64 entries I might not have all 64
 

00:21:19.900 --> 00:21:20.850 align:start position:0%
like 64 entries I might not have all 64
entries<00:21:20.050><c> in</c><00:21:20.290><c> there</c><00:21:20.440><c> that's</c><00:21:20.590><c> a</c><00:21:20.680><c> pretty</c>

00:21:20.850 --> 00:21:20.860 align:start position:0%
entries in there that's a pretty
 

00:21:20.860 --> 00:21:23.250 align:start position:0%
entries in there that's a pretty
inefficient<00:21:21.360><c> representation</c><00:21:22.360><c> there</c><00:21:22.660><c> so</c><00:21:23.170><c> you</c>

00:21:23.250 --> 00:21:23.260 align:start position:0%
inefficient representation there so you
 

00:21:23.260 --> 00:21:25.140 align:start position:0%
inefficient representation there so you
can<00:21:23.380><c> do</c><00:21:23.500><c> something</c><00:21:23.860><c> better</c><00:21:24.070><c> and</c><00:21:24.730><c> what</c><00:21:24.880><c> you</c><00:21:25.000><c> can</c>

00:21:25.140 --> 00:21:25.150 align:start position:0%
can do something better and what you can
 

00:21:25.150 --> 00:21:27.090 align:start position:0%
can do something better and what you can
do<00:21:25.300><c> is</c><00:21:25.420><c> you</c><00:21:25.510><c> can</c><00:21:25.660><c> use</c><00:21:25.690><c> a</c><00:21:25.780><c> bitmap</c><00:21:26.080><c> to</c><00:21:26.680><c> express</c>

00:21:27.090 --> 00:21:27.100 align:start position:0%
do is you can use a bitmap to express
 

00:21:27.100 --> 00:21:30.210 align:start position:0%
do is you can use a bitmap to express
which<00:21:27.610><c> entries</c><00:21:28.120><c> are</c><00:21:28.270><c> present</c><00:21:28.690><c> at</c><00:21:29.590><c> my</c><00:21:29.800><c> level</c><00:21:29.980><c> in</c>

00:21:30.210 --> 00:21:30.220 align:start position:0%
which entries are present at my level in
 

00:21:30.220 --> 00:21:33.510 align:start position:0%
which entries are present at my level in
my<00:21:30.370><c> tree</c><00:21:30.640><c> and</c><00:21:30.910><c> I</c><00:21:31.660><c> can</c><00:21:31.810><c> have</c><00:21:32.020><c> a</c><00:21:32.260><c> number</c><00:21:32.710><c> an</c><00:21:33.220><c> array</c>

00:21:33.510 --> 00:21:33.520 align:start position:0%
my tree and I can have a number an array
 

00:21:33.520 --> 00:21:36.960 align:start position:0%
my tree and I can have a number an array
an<00:21:34.270><c> object</c><00:21:34.630><c> array</c><00:21:34.810><c> of</c><00:21:34.900><c> nose</c><00:21:35.170><c> that</c><00:21:35.860><c> contains</c><00:21:36.370><c> is</c>

00:21:36.960 --> 00:21:36.970 align:start position:0%
an object array of nose that contains is
 

00:21:36.970 --> 00:21:40.020 align:start position:0%
an object array of nose that contains is
of<00:21:37.510><c> length</c><00:21:37.750><c> of</c><00:21:37.990><c> a</c><00:21:38.260><c> number</c><00:21:38.560><c> of</c><00:21:38.650><c> bits</c><00:21:39.220><c> set</c><00:21:39.610><c> in</c><00:21:39.880><c> my</c>

00:21:40.020 --> 00:21:40.030 align:start position:0%
of length of a number of bits set in my
 

00:21:40.030 --> 00:21:42.990 align:start position:0%
of length of a number of bits set in my
bitmap<00:21:40.590><c> so</c><00:21:41.590><c> that's</c><00:21:41.770><c> a</c><00:21:41.890><c> more</c><00:21:42.100><c> compressed</c>

00:21:42.990 --> 00:21:43.000 align:start position:0%
bitmap so that's a more compressed
 

00:21:43.000 --> 00:21:44.940 align:start position:0%
bitmap so that's a more compressed
representation<00:21:43.690><c> and</c><00:21:44.230><c> that's</c><00:21:44.320><c> a</c><00:21:44.530><c> technique</c>

00:21:44.940 --> 00:21:44.950 align:start position:0%
representation and that's a technique
 

00:21:44.950 --> 00:21:46.950 align:start position:0%
representation and that's a technique
that<00:21:44.980><c> all</c><00:21:45.550><c> these</c><00:21:45.880><c> persistent</c><00:21:46.330><c> collection</c>

00:21:46.950 --> 00:21:46.960 align:start position:0%
that all these persistent collection
 

00:21:46.960 --> 00:21:49.170 align:start position:0%
that all these persistent collection
implementations<00:21:47.710><c> use</c><00:21:48.130><c> so</c><00:21:48.730><c> if</c><00:21:48.790><c> you</c><00:21:48.880><c> look</c><00:21:49.060><c> at</c>

00:21:49.170 --> 00:21:49.180 align:start position:0%
implementations use so if you look at
 

00:21:49.180 --> 00:21:51.720 align:start position:0%
implementations use so if you look at
this<00:21:49.450><c> implementation</c><00:21:50.380><c> you'd</c><00:21:51.160><c> have</c><00:21:51.370><c> the</c><00:21:51.490><c> same</c>

00:21:51.720 --> 00:21:51.730 align:start position:0%
this implementation you'd have the same
 

00:21:51.730 --> 00:21:54.240 align:start position:0%
this implementation you'd have the same
symbol<00:21:52.270><c> at</c><00:21:52.510><c> depth</c><00:21:52.780><c> as</c><00:21:53.020><c> before</c><00:21:53.500><c> you</c><00:21:53.740><c> check</c><00:21:54.040><c> if</c>

00:21:54.240 --> 00:21:54.250 align:start position:0%
symbol at depth as before you check if
 

00:21:54.250 --> 00:21:56.250 align:start position:0%
symbol at depth as before you check if
the<00:21:54.430><c> bit</c><00:21:54.850><c> is</c><00:21:55.000><c> set</c><00:21:55.240><c> or</c><00:21:55.420><c> not</c><00:21:55.450><c> and</c><00:21:55.870><c> if</c><00:21:55.960><c> it's</c><00:21:56.110><c> not</c>

00:21:56.250 --> 00:21:56.260 align:start position:0%
the bit is set or not and if it's not
 

00:21:56.260 --> 00:21:57.780 align:start position:0%
the bit is set or not and if it's not
set<00:21:56.590><c> then</c><00:21:56.800><c> you</c><00:21:56.890><c> turn</c><00:21:57.100><c> optional</c><00:21:57.430><c> empty</c><00:21:57.670><c> it's</c>

00:21:57.780 --> 00:21:57.790 align:start position:0%
set then you turn optional empty it's
 

00:21:57.790 --> 00:21:59.970 align:start position:0%
set then you turn optional empty it's
not<00:21:57.940><c> present</c><00:21:58.390><c> but</c><00:21:59.170><c> then</c><00:21:59.290><c> you</c><00:21:59.380><c> have</c><00:21:59.530><c> a</c>

00:21:59.970 --> 00:21:59.980 align:start position:0%
not present but then you have a
 

00:21:59.980 --> 00:22:01.889 align:start position:0%
not present but then you have a
an<00:22:00.070><c> operation</c><00:22:00.700><c> which</c><00:22:00.820><c> says</c><00:22:01.029><c> how</c><00:22:01.269><c> do</c><00:22:01.330><c> I</c><00:22:01.480><c> index</c>

00:22:01.889 --> 00:22:01.899 align:start position:0%
an operation which says how do I index
 

00:22:01.899 --> 00:22:04.169 align:start position:0%
an operation which says how do I index
into<00:22:02.260><c> this</c><00:22:02.350><c> array</c><00:22:02.679><c> but</c><00:22:03.159><c> all</c><00:22:03.309><c> you</c><00:22:03.460><c> do</c><00:22:03.669><c> is</c><00:22:03.909><c> you</c>

00:22:04.169 --> 00:22:04.179 align:start position:0%
into this array but all you do is you
 

00:22:04.179 --> 00:22:07.379 align:start position:0%
into this array but all you do is you
essentially<00:22:04.529><c> chop</c><00:22:05.529><c> off</c><00:22:05.740><c> the</c><00:22:05.950><c> bitmap</c><00:22:06.340><c> for</c><00:22:07.210><c> that</c>

00:22:07.379 --> 00:22:07.389 align:start position:0%
essentially chop off the bitmap for that
 

00:22:07.389 --> 00:22:09.240 align:start position:0%
essentially chop off the bitmap for that
for<00:22:07.809><c> all</c><00:22:07.840><c> the</c><00:22:08.230><c> bits</c><00:22:08.409><c> before</c><00:22:08.620><c> the</c><00:22:08.919><c> symbol</c>

00:22:09.240 --> 00:22:09.250 align:start position:0%
for all the bits before the symbol
 

00:22:09.250 --> 00:22:10.590 align:start position:0%
for all the bits before the symbol
you're<00:22:09.370><c> interested</c><00:22:09.850><c> in</c><00:22:09.940><c> in</c><00:22:10.029><c> count</c><00:22:10.240><c> the</c><00:22:10.360><c> number</c>

00:22:10.590 --> 00:22:10.600 align:start position:0%
you're interested in in count the number
 

00:22:10.600 --> 00:22:12.360 align:start position:0%
you're interested in in count the number
of<00:22:10.659><c> bits</c><00:22:10.899><c> using</c><00:22:11.139><c> bit</c><00:22:11.409><c> count</c><00:22:11.649><c> and</c><00:22:11.860><c> then</c><00:22:12.010><c> there's</c>

00:22:12.360 --> 00:22:12.370 align:start position:0%
of bits using bit count and then there's
 

00:22:12.370 --> 00:22:15.080 align:start position:0%
of bits using bit count and then there's
your<00:22:12.490><c> index</c><00:22:12.909><c> into</c><00:22:13.210><c> your</c><00:22:13.360><c> array</c><00:22:13.860><c> quite</c><00:22:14.860><c> nice</c>

00:22:15.080 --> 00:22:15.090 align:start position:0%
your index into your array quite nice
 

00:22:15.090 --> 00:22:18.629 align:start position:0%
your index into your array quite nice
and<00:22:16.500><c> the</c><00:22:17.500><c> reason</c><00:22:17.860><c> why</c><00:22:18.039><c> this</c><00:22:18.100><c> can</c><00:22:18.519><c> be</c>

00:22:18.629 --> 00:22:18.639 align:start position:0%
and the reason why this can be
 

00:22:18.639 --> 00:22:20.490 align:start position:0%
and the reason why this can be
implemented<00:22:19.059><c> efficiently</c><00:22:19.779><c> in</c><00:22:19.899><c> Java</c><00:22:20.200><c> is</c>

00:22:20.490 --> 00:22:20.500 align:start position:0%
implemented efficiently in Java is
 

00:22:20.500 --> 00:22:22.259 align:start position:0%
implemented efficiently in Java is
because<00:22:21.070><c> integer</c><00:22:21.490><c> bit</c><00:22:21.669><c> count</c><00:22:21.940><c> is</c><00:22:22.120><c> an</c>

00:22:22.259 --> 00:22:22.269 align:start position:0%
because integer bit count is an
 

00:22:22.269 --> 00:22:24.930 align:start position:0%
because integer bit count is an
intrinsic<00:22:22.870><c> and</c><00:22:23.470><c> that</c><00:22:23.620><c> that</c><00:22:23.980><c> compiles</c><00:22:24.519><c> down</c><00:22:24.730><c> to</c>

00:22:24.930 --> 00:22:24.940 align:start position:0%
intrinsic and that that compiles down to
 

00:22:24.940 --> 00:22:27.210 align:start position:0%
intrinsic and that that compiles down to
a<00:22:24.970><c> pop</c><00:22:25.240><c> count</c><00:22:25.480><c> instruction</c><00:22:26.110><c> on</c><00:22:26.230><c> x86</c><00:22:26.559><c> and</c>

00:22:27.210 --> 00:22:27.220 align:start position:0%
a pop count instruction on x86 and
 

00:22:27.220 --> 00:22:30.450 align:start position:0%
a pop count instruction on x86 and
before<00:22:28.029><c> that</c><00:22:28.990><c> was</c><00:22:29.139><c> intrinsic</c><00:22:29.500><c> ID</c><00:22:29.740><c> in</c><00:22:29.889><c> the</c><00:22:29.980><c> jdk</c>

00:22:30.450 --> 00:22:30.460 align:start position:0%
before that was intrinsic ID in the jdk
 

00:22:30.460 --> 00:22:31.889 align:start position:0%
before that was intrinsic ID in the jdk
these<00:22:30.639><c> collections</c><00:22:31.179><c> were</c><00:22:31.330><c> a</c><00:22:31.389><c> lot</c><00:22:31.600><c> slower</c>

00:22:31.889 --> 00:22:31.899 align:start position:0%
these collections were a lot slower
 

00:22:31.899 --> 00:22:33.210 align:start position:0%
these collections were a lot slower
because<00:22:32.230><c> they</c><00:22:32.320><c> had</c><00:22:32.470><c> to</c><00:22:32.529><c> do</c><00:22:32.590><c> a</c><00:22:32.620><c> lot</c><00:22:32.799><c> of</c><00:22:32.919><c> bit</c>

00:22:33.210 --> 00:22:33.220 align:start position:0%
because they had to do a lot of bit
 

00:22:33.220 --> 00:22:36.360 align:start position:0%
because they had to do a lot of bit
twiddling<00:22:33.490><c> going</c><00:22:33.970><c> on</c><00:22:34.120><c> I</c><00:22:34.769><c> get</c><00:22:35.769><c> I</c><00:22:35.889><c> get</c><00:22:36.130><c> to</c><00:22:36.250><c> this</c>

00:22:36.360 --> 00:22:36.370 align:start position:0%
twiddling going on I get I get to this
 

00:22:36.370 --> 00:22:38.639 align:start position:0%
twiddling going on I get I get to this
point<00:22:36.639><c> later</c><00:22:36.760><c> on</c><00:22:37.179><c> hopefully</c><00:22:37.389><c> there's</c><00:22:38.380><c> a</c><00:22:38.470><c> lot</c>

00:22:38.639 --> 00:22:38.649 align:start position:0%
point later on hopefully there's a lot
 

00:22:38.649 --> 00:22:41.419 align:start position:0%
point later on hopefully there's a lot
more<00:22:38.799><c> we</c><00:22:38.980><c> can</c><00:22:39.190><c> do</c><00:22:39.399><c> to</c><00:22:39.549><c> optimize</c><00:22:39.669><c> these</c><00:22:40.210><c> things</c>

00:22:41.419 --> 00:22:41.429 align:start position:0%
more we can do to optimize these things
 

00:22:41.429 --> 00:22:43.680 align:start position:0%
more we can do to optimize these things
so<00:22:42.429><c> I</c><00:22:42.669><c> think</c><00:22:42.940><c> this</c><00:22:43.360><c> is</c><00:22:43.450><c> a</c><00:22:43.480><c> better</c>

00:22:43.680 --> 00:22:43.690 align:start position:0%
so I think this is a better
 

00:22:43.690 --> 00:22:45.149 align:start position:0%
so I think this is a better
representation<00:22:44.080><c> as</c><00:22:44.440><c> I</c><00:22:44.500><c> said</c><00:22:44.649><c> the</c><00:22:44.740><c> space</c><00:22:44.980><c> is</c>

00:22:45.149 --> 00:22:45.159 align:start position:0%
representation as I said the space is
 

00:22:45.159 --> 00:22:47.129 align:start position:0%
representation as I said the space is
required<00:22:45.340><c> only</c><00:22:45.669><c> for</c><00:22:45.789><c> present</c><00:22:46.269><c> nodes</c><00:22:46.480><c> using</c><00:22:46.960><c> a</c>

00:22:47.129 --> 00:22:47.139 align:start position:0%
required only for present nodes using a
 

00:22:47.139 --> 00:22:48.539 align:start position:0%
required only for present nodes using a
bitmap<00:22:47.350><c> and</c><00:22:47.740><c> that's</c><00:22:47.950><c> made</c><00:22:48.130><c> possible</c><00:22:48.159><c> with</c>

00:22:48.539 --> 00:22:48.549 align:start position:0%
bitmap and that's made possible with
 

00:22:48.549 --> 00:22:50.039 align:start position:0%
bitmap and that's made possible with
hotspot<00:22:49.000><c> optimizations</c><00:22:49.659><c> there's</c><00:22:49.870><c> further</c>

00:22:50.039 --> 00:22:50.049 align:start position:0%
hotspot optimizations there's further
 

00:22:50.049 --> 00:22:51.539 align:start position:0%
hotspot optimizations there's further
refinements<00:22:50.740><c> you</c><00:22:50.860><c> can</c><00:22:51.010><c> do</c><00:22:51.159><c> here</c><00:22:51.399><c> and</c>

00:22:51.539 --> 00:22:51.549 align:start position:0%
refinements you can do here and
 

00:22:51.549 --> 00:22:53.669 align:start position:0%
refinements you can do here and
trade-offs<00:22:51.840><c> sub</c><00:22:52.840><c> nodes</c><00:22:52.990><c> and</c><00:22:53.169><c> entries</c><00:22:53.470><c> could</c>

00:22:53.669 --> 00:22:53.679 align:start position:0%
trade-offs sub nodes and entries could
 

00:22:53.679 --> 00:22:55.379 align:start position:0%
trade-offs sub nodes and entries could
be<00:22:53.769><c> separated</c><00:22:54.130><c> for</c><00:22:54.549><c> more</c><00:22:54.639><c> cache</c><00:22:54.909><c> friendly</c>

00:22:55.379 --> 00:22:55.389 align:start position:0%
be separated for more cache friendly
 

00:22:55.389 --> 00:22:57.539 align:start position:0%
be separated for more cache friendly
traversal<00:22:55.990><c> stained</c><00:22:56.799><c> or</c><00:22:56.950><c> fur</c><00:22:57.070><c> talked</c><00:22:57.309><c> about</c>

00:22:57.539 --> 00:22:57.549 align:start position:0%
traversal stained or fur talked about
 

00:22:57.549 --> 00:23:00.419 align:start position:0%
traversal stained or fur talked about
this<00:22:57.760><c> in</c><00:22:57.909><c> his</c><00:22:58.000><c> champ</c><00:22:58.330><c> work</c><00:22:58.600><c> and</c><00:22:59.159><c> hash</c><00:23:00.159><c> codes</c>

00:23:00.419 --> 00:23:00.429 align:start position:0%
this in his champ work and hash codes
 

00:23:00.429 --> 00:23:02.009 align:start position:0%
this in his champ work and hash codes
could<00:23:00.580><c> be</c><00:23:00.700><c> cached</c><00:23:00.940><c> as</c><00:23:01.149><c> well</c><00:23:01.299><c> I</c><00:23:01.330><c> wasn't</c><00:23:01.600><c> caching</c>

00:23:02.009 --> 00:23:02.019 align:start position:0%
could be cached as well I wasn't caching
 

00:23:02.019 --> 00:23:04.320 align:start position:0%
could be cached as well I wasn't caching
hash<00:23:02.200><c> codes</c><00:23:02.500><c> here</c><00:23:02.880><c> as</c><00:23:03.880><c> all</c><00:23:04.059><c> sorts</c><00:23:04.269><c> of</c>

00:23:04.320 --> 00:23:04.330 align:start position:0%
hash codes here as all sorts of
 

00:23:04.330 --> 00:23:06.000 align:start position:0%
hash codes here as all sorts of
trade-offs<00:23:04.750><c> and</c><00:23:04.899><c> experiments</c><00:23:05.529><c> we</c><00:23:05.649><c> can</c><00:23:05.799><c> try</c>

00:23:06.000 --> 00:23:06.010 align:start position:0%
trade-offs and experiments we can try
 

00:23:06.010 --> 00:23:08.759 align:start position:0%
trade-offs and experiments we can try
and<00:23:06.279><c> the</c><00:23:07.090><c> API</c><00:23:07.419><c> is</c><00:23:07.570><c> slightly</c><00:23:07.990><c> different</c><00:23:08.500><c> so</c><00:23:08.679><c> if</c>

00:23:08.759 --> 00:23:08.769 align:start position:0%
and the API is slightly different so if
 

00:23:08.769 --> 00:23:10.560 align:start position:0%
and the API is slightly different so if
I<00:23:08.860><c> have</c><00:23:09.010><c> a</c><00:23:09.039><c> persistent</c><00:23:09.610><c> map</c><00:23:09.789><c> API</c><00:23:10.149><c> it</c><00:23:10.299><c> might</c>

00:23:10.560 --> 00:23:10.570 align:start position:0%
I have a persistent map API it might
 

00:23:10.570 --> 00:23:12.810 align:start position:0%
I have a persistent map API it might
have<00:23:10.720><c> a</c><00:23:10.750><c> familiar</c><00:23:11.289><c> for</c><00:23:11.559><c> each</c><00:23:11.769><c> might</c><00:23:12.610><c> have</c><00:23:12.789><c> a</c>

00:23:12.810 --> 00:23:12.820 align:start position:0%
have a familiar for each might have a
 

00:23:12.820 --> 00:23:14.879 align:start position:0%
have a familiar for each might have a
get<00:23:13.090><c> that</c><00:23:13.480><c> returns</c><00:23:13.809><c> null</c><00:23:14.139><c> or</c><00:23:14.350><c> optional</c><00:23:14.769><c> it's</c>

00:23:14.879 --> 00:23:14.889 align:start position:0%
get that returns null or optional it's
 

00:23:14.889 --> 00:23:17.220 align:start position:0%
get that returns null or optional it's
up<00:23:15.039><c> to</c><00:23:15.190><c> you</c><00:23:15.340><c> but</c><00:23:15.700><c> the</c><00:23:15.850><c> put</c><00:23:16.059><c> method</c><00:23:16.139><c> instead</c><00:23:17.139><c> of</c>

00:23:17.220 --> 00:23:17.230 align:start position:0%
up to you but the put method instead of
 

00:23:17.230 --> 00:23:19.409 align:start position:0%
up to you but the put method instead of
returning<00:23:17.710><c> the</c><00:23:17.889><c> the</c><00:23:18.190><c> previous</c><00:23:18.429><c> value</c><00:23:19.000><c> of</c><00:23:19.149><c> null</c>

00:23:19.409 --> 00:23:19.419 align:start position:0%
returning the the previous value of null
 

00:23:19.419 --> 00:23:21.779 align:start position:0%
returning the the previous value of null
it<00:23:19.750><c> might</c><00:23:20.230><c> have</c><00:23:20.860><c> to</c><00:23:21.010><c> return</c><00:23:21.279><c> a</c><00:23:21.340><c> new</c><00:23:21.610><c> map</c>

00:23:21.779 --> 00:23:21.789 align:start position:0%
it might have to return a new map
 

00:23:21.789 --> 00:23:23.430 align:start position:0%
it might have to return a new map
because<00:23:22.149><c> I'm</c><00:23:22.269><c> I'm</c><00:23:22.419><c> not</c><00:23:22.690><c> modifying</c><00:23:23.289><c> the</c>

00:23:23.430 --> 00:23:23.440 align:start position:0%
because I'm I'm not modifying the
 

00:23:23.440 --> 00:23:25.110 align:start position:0%
because I'm I'm not modifying the
existing<00:23:23.500><c> map</c><00:23:24.070><c> I'm</c><00:23:24.279><c> returning</c><00:23:24.549><c> a</c><00:23:24.730><c> new</c><00:23:24.940><c> map</c>

00:23:25.110 --> 00:23:25.120 align:start position:0%
existing map I'm returning a new map
 

00:23:25.120 --> 00:23:27.149 align:start position:0%
existing map I'm returning a new map
with<00:23:25.360><c> the</c><00:23:25.690><c> same</c><00:23:25.929><c> things</c><00:23:26.260><c> as</c><00:23:26.500><c> the</c><00:23:26.620><c> previous</c><00:23:27.010><c> one</c>

00:23:27.149 --> 00:23:27.159 align:start position:0%
with the same things as the previous one
 

00:23:27.159 --> 00:23:29.190 align:start position:0%
with the same things as the previous one
but<00:23:27.190><c> the</c><00:23:27.460><c> new</c><00:23:27.610><c> entry</c><00:23:27.940><c> inside</c><00:23:28.240><c> it</c><00:23:28.450><c> and</c><00:23:28.630><c> the</c><00:23:29.019><c> same</c>

00:23:29.190 --> 00:23:29.200 align:start position:0%
but the new entry inside it and the same
 

00:23:29.200 --> 00:23:30.509 align:start position:0%
but the new entry inside it and the same
for<00:23:29.470><c> remove</c><00:23:29.740><c> in</c><00:23:29.919><c> terms</c><00:23:30.100><c> of</c><00:23:30.250><c> removing</c>

00:23:30.509 --> 00:23:30.519 align:start position:0%
for remove in terms of removing
 

00:23:30.519 --> 00:23:31.860 align:start position:0%
for remove in terms of removing
something<00:23:30.880><c> so</c><00:23:31.059><c> the</c><00:23:31.149><c> API</c><00:23:31.480><c> is</c><00:23:31.630><c> actually</c>

00:23:31.860 --> 00:23:31.870 align:start position:0%
something so the API is actually
 

00:23:31.870 --> 00:23:33.659 align:start position:0%
something so the API is actually
slightly<00:23:32.380><c> different</c><00:23:32.769><c> here</c><00:23:32.950><c> to</c><00:23:33.130><c> what</c><00:23:33.580><c> you</c>

00:23:33.659 --> 00:23:33.669 align:start position:0%
slightly different here to what you
 

00:23:33.669 --> 00:23:38.260 align:start position:0%
slightly different here to what you
might<00:23:33.820><c> get</c><00:23:34.029><c> with</c><00:23:34.149><c> a</c><00:23:34.179><c> hash</c><00:23:34.389><c> map</c>

00:23:38.260 --> 00:23:38.270 align:start position:0%
 
 

00:23:38.270 --> 00:23:40.930 align:start position:0%
 
so<00:23:39.140><c> although</c><00:23:39.710><c> there's</c><00:23:40.130><c> modifying</c><00:23:40.610><c> methods</c>

00:23:40.930 --> 00:23:40.940 align:start position:0%
so although there's modifying methods
 

00:23:40.940 --> 00:23:42.040 align:start position:0%
so although there's modifying methods
return<00:23:41.210><c> a</c><00:23:41.240><c> new</c><00:23:41.420><c> collection</c><00:23:41.960><c> the</c>

00:23:42.040 --> 00:23:42.050 align:start position:0%
return a new collection the
 

00:23:42.050 --> 00:23:44.650 align:start position:0%
return a new collection the
implementation<00:23:42.800><c> will</c><00:23:42.950><c> actually</c><00:23:43.660><c> share</c>

00:23:44.650 --> 00:23:44.660 align:start position:0%
implementation will actually share
 

00:23:44.660 --> 00:23:48.580 align:start position:0%
implementation will actually share
structure<00:23:45.460><c> underneath</c><00:23:46.690><c> and</c><00:23:47.690><c> to</c><00:23:48.260><c> do</c><00:23:48.380><c> this</c>

00:23:48.580 --> 00:23:48.590 align:start position:0%
structure underneath and to do this
 

00:23:48.590 --> 00:23:50.049 align:start position:0%
structure underneath and to do this
efficiently<00:23:48.860><c> when</c><00:23:49.220><c> we're</c><00:23:49.400><c> building</c><00:23:49.550><c> we</c><00:23:49.940><c> need</c>

00:23:50.049 --> 00:23:50.059 align:start position:0%
efficiently when we're building we need
 

00:23:50.059 --> 00:23:52.299 align:start position:0%
efficiently when we're building we need
we<00:23:50.360><c> need</c><00:23:50.390><c> mutable</c><00:23:50.960><c> builders</c><00:23:51.380><c> to</c><00:23:51.679><c> construct</c><00:23:52.160><c> in</c>

00:23:52.299 --> 00:23:52.309 align:start position:0%
we need mutable builders to construct in
 

00:23:52.309 --> 00:23:54.460 align:start position:0%
we need mutable builders to construct in
a<00:23:52.370><c> confined</c><00:23:52.760><c> manner</c><00:23:53.120><c> so</c><00:23:53.809><c> what</c><00:23:53.960><c> we</c><00:23:54.080><c> want</c><00:23:54.290><c> is</c><00:23:54.410><c> a</c>

00:23:54.460 --> 00:23:54.470 align:start position:0%
a confined manner so what we want is a
 

00:23:54.470 --> 00:23:56.380 align:start position:0%
a confined manner so what we want is a
really<00:23:54.860><c> when</c><00:23:55.460><c> you're</c><00:23:55.580><c> building</c><00:23:55.940><c> something</c><00:23:56.179><c> up</c>

00:23:56.380 --> 00:23:56.390 align:start position:0%
really when you're building something up
 

00:23:56.390 --> 00:23:58.600 align:start position:0%
really when you're building something up
you<00:23:56.600><c> want</c><00:23:56.750><c> to</c><00:23:56.809><c> confine</c><00:23:57.230><c> this</c><00:23:57.410><c> to</c><00:23:57.679><c> a</c><00:23:57.860><c> closure</c><00:23:58.280><c> or</c>

00:23:58.600 --> 00:23:58.610 align:start position:0%
you want to confine this to a closure or
 

00:23:58.610 --> 00:24:01.450 align:start position:0%
you want to confine this to a closure or
a<00:23:58.670><c> Fred</c><00:23:59.059><c> so</c><00:23:59.690><c> it</c><00:23:59.780><c> doesn't</c><00:24:00.050><c> escape</c><00:24:00.230><c> out</c><00:24:00.559><c> and</c><00:24:00.890><c> then</c>

00:24:01.450 --> 00:24:01.460 align:start position:0%
a Fred so it doesn't escape out and then
 

00:24:01.460 --> 00:24:02.860 align:start position:0%
a Fred so it doesn't escape out and then
when<00:24:01.610><c> you're</c><00:24:01.730><c> done</c><00:24:01.910><c> you</c><00:24:02.240><c> construct</c><00:24:02.720><c> them</c>

00:24:02.860 --> 00:24:02.870 align:start position:0%
when you're done you construct them
 

00:24:02.870 --> 00:24:04.270 align:start position:0%
when you're done you construct them
freeze<00:24:03.110><c> and</c><00:24:03.290><c> you've</c><00:24:03.380><c> got</c><00:24:03.470><c> an</c><00:24:03.559><c> immutable</c><00:24:03.800><c> thing</c>

00:24:04.270 --> 00:24:04.280 align:start position:0%
freeze and you've got an immutable thing
 

00:24:04.280 --> 00:24:06.070 align:start position:0%
freeze and you've got an immutable thing
and<00:24:04.460><c> closure</c><00:24:04.910><c> has</c><00:24:05.210><c> this</c><00:24:05.330><c> con</c><00:24:05.600><c> ocean</c><00:24:05.960><c> of</c>

00:24:06.070 --> 00:24:06.080 align:start position:0%
and closure has this con ocean of
 

00:24:06.080 --> 00:24:08.110 align:start position:0%
and closure has this con ocean of
building<00:24:06.440><c> I'm</c><00:24:06.530><c> not</c><00:24:06.679><c> sure</c><00:24:06.830><c> about</c><00:24:06.950><c> Scala</c><00:24:07.370><c> it</c><00:24:07.700><c> may</c>

00:24:08.110 --> 00:24:08.120 align:start position:0%
building I'm not sure about Scala it may
 

00:24:08.120 --> 00:24:11.980 align:start position:0%
building I'm not sure about Scala it may
well<00:24:08.300><c> do</c><00:24:08.480><c> as</c><00:24:08.630><c> well</c><00:24:08.870><c> so</c><00:24:10.600><c> I'm</c><00:24:11.600><c> going</c><00:24:11.720><c> to</c><00:24:11.780><c> show</c>

00:24:11.980 --> 00:24:11.990 align:start position:0%
well do as well so I'm going to show
 

00:24:11.990 --> 00:24:17.799 align:start position:0%
well do as well so I'm going to show
some<00:24:13.420><c> demos</c><00:24:14.420><c> now</c><00:24:15.429><c> now</c><00:24:16.429><c> let's</c><00:24:16.730><c> see</c><00:24:17.059><c> how</c>

00:24:17.799 --> 00:24:17.809 align:start position:0%
some demos now now let's see how
 

00:24:17.809 --> 00:24:19.960 align:start position:0%
some demos now now let's see how
successful<00:24:18.500><c> this</c><00:24:18.710><c> will</c><00:24:18.950><c> be</c><00:24:19.130><c> actually</c><00:24:19.820><c> before</c>

00:24:19.960 --> 00:24:19.970 align:start position:0%
successful this will be actually before
 

00:24:19.970 --> 00:24:21.340 align:start position:0%
successful this will be actually before
I<00:24:20.120><c> go</c><00:24:20.270><c> and</c><00:24:20.360><c> did</c><00:24:20.570><c> anybody</c><00:24:20.780><c> have</c><00:24:21.020><c> any</c><00:24:21.170><c> quick</c>

00:24:21.340 --> 00:24:21.350 align:start position:0%
I go and did anybody have any quick
 

00:24:21.350 --> 00:24:25.180 align:start position:0%
I go and did anybody have any quick
questions<00:24:21.830><c> on</c><00:24:22.630><c> the</c><00:24:23.630><c> explanations</c><00:24:24.350><c> no</c><00:24:24.830><c> well</c>

00:24:25.180 --> 00:24:25.190 align:start position:0%
questions on the explanations no well
 

00:24:25.190 --> 00:24:30.610 align:start position:0%
questions on the explanations no well
good<00:24:25.400><c> okay</c><00:24:28.390><c> so</c><00:24:29.390><c> I'm</c><00:24:29.750><c> gonna</c><00:24:29.929><c> wing</c><00:24:30.230><c> it</c><00:24:30.260><c> a</c><00:24:30.380><c> bit</c>

00:24:30.610 --> 00:24:30.620 align:start position:0%
good okay so I'm gonna wing it a bit
 

00:24:30.620 --> 00:24:34.480 align:start position:0%
good okay so I'm gonna wing it a bit
here<00:24:31.720><c> let's</c><00:24:32.720><c> see</c><00:24:32.929><c> how</c><00:24:33.110><c> this</c><00:24:33.260><c> goes</c><00:24:33.530><c> so</c><00:24:34.010><c> first</c><00:24:34.309><c> of</c>

00:24:34.480 --> 00:24:34.490 align:start position:0%
here let's see how this goes so first of
 

00:24:34.490 --> 00:24:36.310 align:start position:0%
here let's see how this goes so first of
all<00:24:34.580><c> I'm</c><00:24:34.850><c> going</c><00:24:35.030><c> to</c><00:24:35.210><c> I'm</c><00:24:35.540><c> going</c><00:24:35.600><c> to</c><00:24:35.870><c> run</c><00:24:36.110><c> J</c>

00:24:36.310 --> 00:24:36.320 align:start position:0%
all I'm going to I'm going to run J
 

00:24:36.320 --> 00:24:42.190 align:start position:0%
all I'm going to I'm going to run J
shell<00:24:38.350><c> start</c><00:24:39.350><c> this</c><00:24:39.500><c> up</c><00:24:40.660><c> okay</c><00:24:41.660><c> this</c><00:24:42.080><c> is</c>

00:24:42.190 --> 00:24:42.200 align:start position:0%
shell start this up okay this is
 

00:24:42.200 --> 00:24:45.640 align:start position:0%
shell start this up okay this is
actually<00:24:42.559><c> J</c><00:24:42.770><c> shell</c><00:24:43.010><c> running</c><00:24:43.540><c> Java</c><00:24:44.540><c> 10</c><00:24:44.870><c> or</c><00:24:45.170><c> 18</c>

00:24:45.640 --> 00:24:45.650 align:start position:0%
actually J shell running Java 10 or 18
 

00:24:45.650 --> 00:24:47.560 align:start position:0%
actually J shell running Java 10 or 18
dot<00:24:45.920><c> free</c><00:24:46.190><c> as</c><00:24:46.429><c> we</c><00:24:46.700><c> like</c><00:24:46.880><c> to</c><00:24:47.030><c> call</c><00:24:47.210><c> it</c><00:24:47.390><c> nowadays</c>

00:24:47.560 --> 00:24:47.570 align:start position:0%
dot free as we like to call it nowadays
 

00:24:47.570 --> 00:24:50.049 align:start position:0%
dot free as we like to call it nowadays
I'm<00:24:48.380><c> not</c><00:24:48.920><c> going</c><00:24:49.070><c> to</c><00:24:49.130><c> get</c><00:24:49.250><c> into</c><00:24:49.460><c> discussion</c><00:24:49.940><c> on</c>

00:24:50.049 --> 00:24:50.059 align:start position:0%
I'm not going to get into discussion on
 

00:24:50.059 --> 00:25:00.250 align:start position:0%
I'm not going to get into discussion on
version<00:24:50.420><c> numbers</c><00:24:51.460><c> so</c><00:24:52.780><c> we</c><00:24:53.780><c> can</c><00:24:53.809><c> use</c><00:24:54.140><c> var</c>

00:25:00.250 --> 00:25:00.260 align:start position:0%
 
 

00:25:00.260 --> 00:25:03.500 align:start position:0%
 
so<00:25:01.260><c> I've</c><00:25:01.440><c> there's</c><00:25:02.430><c> a</c><00:25:02.520><c> github</c><00:25:02.880><c> project</c><00:25:03.300><c> here</c><00:25:03.480><c> I</c>

00:25:03.500 --> 00:25:03.510 align:start position:0%
so I've there's a github project here I
 

00:25:03.510 --> 00:25:05.540 align:start position:0%
so I've there's a github project here I
sent<00:25:03.780><c> a</c><00:25:03.870><c> link</c><00:25:04.050><c> to</c><00:25:04.290><c> this</c><00:25:04.620><c> is</c><00:25:04.800><c> all</c><00:25:04.920><c> online</c><00:25:05.340><c> on</c>

00:25:05.540 --> 00:25:05.550 align:start position:0%
sent a link to this is all online on
 

00:25:05.550 --> 00:25:07.250 align:start position:0%
sent a link to this is all online on
github<00:25:05.910><c> you</c><00:25:06.030><c> can</c><00:25:06.240><c> check</c><00:25:06.450><c> this</c><00:25:06.600><c> out</c><00:25:06.840><c> and</c><00:25:07.020><c> play</c>

00:25:07.250 --> 00:25:07.260 align:start position:0%
github you can check this out and play
 

00:25:07.260 --> 00:25:09.350 align:start position:0%
github you can check this out and play
with<00:25:07.440><c> it</c><00:25:07.470><c> yourself</c><00:25:07.650><c> and</c><00:25:08.490><c> get</c><00:25:08.760><c> an</c><00:25:08.880><c> idea</c><00:25:09.150><c> of</c><00:25:09.270><c> how</c>

00:25:09.350 --> 00:25:09.360 align:start position:0%
with it yourself and get an idea of how
 

00:25:09.360 --> 00:25:10.520 align:start position:0%
with it yourself and get an idea of how
these<00:25:09.510><c> structures</c><00:25:09.930><c> work</c><00:25:10.110><c> what</c><00:25:10.260><c> I've</c><00:25:10.350><c> written</c>

00:25:10.520 --> 00:25:10.530 align:start position:0%
these structures work what I've written
 

00:25:10.530 --> 00:25:13.430 align:start position:0%
these structures work what I've written
is<00:25:10.890><c> buggy</c><00:25:11.580><c> it's</c><00:25:12.030><c> not</c><00:25:12.240><c> performant</c><00:25:12.780><c> but</c><00:25:13.320><c> its</c>

00:25:13.430 --> 00:25:13.440 align:start position:0%
is buggy it's not performant but its
 

00:25:13.440 --> 00:25:14.990 align:start position:0%
is buggy it's not performant but its
function<00:25:13.890><c> enough</c><00:25:14.100><c> to</c><00:25:14.250><c> experiment</c><00:25:14.760><c> with</c><00:25:14.880><c> so</c>

00:25:14.990 --> 00:25:15.000 align:start position:0%
function enough to experiment with so
 

00:25:15.000 --> 00:25:17.090 align:start position:0%
function enough to experiment with so
you<00:25:15.060><c> finally</c><00:25:15.300><c> bugs</c><00:25:15.630><c> in</c><00:25:15.780><c> it</c><00:25:15.900><c> send</c><00:25:16.650><c> me</c><00:25:16.740><c> a</c><00:25:16.800><c> push</c>

00:25:17.090 --> 00:25:17.100 align:start position:0%
you finally bugs in it send me a push
 

00:25:17.100 --> 00:25:19.310 align:start position:0%
you finally bugs in it send me a push
request<00:25:17.640><c> pull</c><00:25:18.210><c> the</c><00:25:18.300><c> request</c><00:25:18.600><c> and</c><00:25:18.780><c> I</c><00:25:18.840><c> will</c><00:25:19.080><c> I</c>

00:25:19.310 --> 00:25:19.320 align:start position:0%
request pull the request and I will I
 

00:25:19.320 --> 00:25:22.100 align:start position:0%
request pull the request and I will I
will<00:25:19.380><c> accept</c><00:25:19.890><c> it</c><00:25:20.070><c> and</c><00:25:20.160><c> fix</c><00:25:20.430><c> things</c><00:25:20.900><c> it's</c><00:25:21.900><c> in</c>

00:25:22.100 --> 00:25:22.110 align:start position:0%
will accept it and fix things it's in
 

00:25:22.110 --> 00:25:25.880 align:start position:0%
will accept it and fix things it's in
the<00:25:22.230><c> open</c><00:25:22.530><c> open</c><00:25:22.950><c> JDK</c><00:25:23.990><c> saying</c><00:25:24.990><c> licenses</c><00:25:25.620><c> open</c>

00:25:25.880 --> 00:25:25.890 align:start position:0%
the open open JDK saying licenses open
 

00:25:25.890 --> 00:25:28.880 align:start position:0%
the open open JDK saying licenses open
JDK<00:25:26.040><c> so</c><00:25:26.850><c> if</c><00:25:26.910><c> I</c><00:25:26.970><c> just</c><00:25:27.180><c> create</c><00:25:27.450><c> a</c><00:25:27.720><c> very</c><00:25:28.650><c> simple</c>

00:25:28.880 --> 00:25:28.890 align:start position:0%
JDK so if I just create a very simple
 

00:25:28.890 --> 00:25:33.320 align:start position:0%
JDK so if I just create a very simple
map<00:25:29.310><c> like</c><00:25:30.060><c> so</c><00:25:31.010><c> VAR</c><00:25:32.010><c> m</c><00:25:32.250><c> equals</c><00:25:32.730><c> P</c><00:25:32.910><c> map</c><00:25:33.090><c> valve</c>

00:25:33.320 --> 00:25:33.330 align:start position:0%
map like so VAR m equals P map valve
 

00:25:33.330 --> 00:25:40.190 align:start position:0%
map like so VAR m equals P map valve
like<00:25:34.170><c> that</c><00:25:34.380><c> I</c><00:25:34.410><c> can</c><00:25:36.650><c> visualize</c><00:25:37.650><c> this</c><00:25:38.900><c> like</c><00:25:39.900><c> so</c>

00:25:40.190 --> 00:25:40.200 align:start position:0%
like that I can visualize this like so
 

00:25:40.200 --> 00:25:42.590 align:start position:0%
like that I can visualize this like so
what<00:25:40.740><c> that's</c><00:25:40.860><c> going</c><00:25:40.980><c> to</c><00:25:41.130><c> do</c><00:25:41.450><c> it's</c><00:25:42.450><c> going</c><00:25:42.540><c> to</c>

00:25:42.590 --> 00:25:42.600 align:start position:0%
what that's going to do it's going to
 

00:25:42.600 --> 00:25:45.020 align:start position:0%
what that's going to do it's going to
look<00:25:42.750><c> at</c><00:25:42.870><c> the</c><00:25:42.960><c> structure</c><00:25:43.760><c> it's</c><00:25:44.760><c> going</c><00:25:44.970><c> to</c>

00:25:45.020 --> 00:25:45.030 align:start position:0%
look at the structure it's going to
 

00:25:45.030 --> 00:25:47.150 align:start position:0%
look at the structure it's going to
create<00:25:45.450><c> a</c><00:25:45.510><c> dot</c><00:25:45.750><c> file</c><00:25:46.020><c> convert</c><00:25:46.710><c> the</c><00:25:46.830><c> dot</c><00:25:46.980><c> file</c>

00:25:47.150 --> 00:25:47.160 align:start position:0%
create a dot file convert the dot file
 

00:25:47.160 --> 00:25:51.770 align:start position:0%
create a dot file convert the dot file
to<00:25:47.310><c> SVG</c><00:25:47.820><c> and</c><00:25:48.060><c> load</c><00:25:48.240><c> it</c><00:25:48.360><c> up</c><00:25:48.450><c> in</c><00:25:48.600><c> the</c><00:25:48.660><c> browser</c><00:25:50.780><c> if</c>

00:25:51.770 --> 00:25:51.780 align:start position:0%
to SVG and load it up in the browser if
 

00:25:51.780 --> 00:25:54.980 align:start position:0%
to SVG and load it up in the browser if
I<00:25:51.930><c> can</c><00:25:52.110><c> get</c><00:25:52.290><c> my</c><00:25:53.180><c> okay</c><00:25:54.180><c> so</c><00:25:54.240><c> here</c><00:25:54.540><c> we</c><00:25:54.570><c> go</c><00:25:54.660><c> this</c><00:25:54.930><c> is</c>

00:25:54.980 --> 00:25:54.990 align:start position:0%
I can get my okay so here we go this is
 

00:25:54.990 --> 00:25:57.020 align:start position:0%
I can get my okay so here we go this is
our<00:25:55.230><c> first</c><00:25:55.500><c> visualization</c><00:25:56.430><c> of</c><00:25:56.520><c> the</c><00:25:56.640><c> map</c><00:25:56.820><c> it's</c>

00:25:57.020 --> 00:25:57.030 align:start position:0%
our first visualization of the map it's
 

00:25:57.030 --> 00:25:58.160 align:start position:0%
our first visualization of the map it's
not<00:25:57.090><c> very</c><00:25:57.390><c> interesting</c>

00:25:58.160 --> 00:25:58.170 align:start position:0%
not very interesting
 

00:25:58.170 --> 00:26:00.200 align:start position:0%
not very interesting
but<00:25:58.710><c> it's</c><00:25:59.130><c> useful</c><00:25:59.340><c> to</c><00:25:59.520><c> explain</c><00:25:59.970><c> what's</c><00:26:00.150><c> going</c>

00:26:00.200 --> 00:26:00.210 align:start position:0%
but it's useful to explain what's going
 

00:26:00.210 --> 00:26:02.090 align:start position:0%
but it's useful to explain what's going
this<00:26:00.420><c> I</c><00:26:00.480><c> have</c><00:26:00.600><c> one</c><00:26:00.780><c> entry</c><00:26:01.080><c> in</c><00:26:01.140><c> my</c><00:26:01.170><c> map</c><00:26:01.440><c> I</c><00:26:01.710><c> have</c>

00:26:02.090 --> 00:26:02.100 align:start position:0%
this I have one entry in my map I have
 

00:26:02.100 --> 00:26:04.450 align:start position:0%
this I have one entry in my map I have
the<00:26:02.400><c> key</c><00:26:02.610><c> of</c><00:26:02.730><c> one</c><00:26:02.970><c> and</c><00:26:03.180><c> a</c><00:26:03.330><c> value</c><00:26:03.690><c> of</c><00:26:03.900><c> one</c><00:26:04.170><c> I</c>

00:26:04.450 --> 00:26:04.460 align:start position:0%
the key of one and a value of one I
 

00:26:04.460 --> 00:26:09.260 align:start position:0%
the key of one and a value of one I
haven't<00:26:05.460><c> one</c><00:26:05.880><c> node</c><00:26:06.890><c> at</c><00:26:07.890><c> the</c><00:26:07.950><c> top</c><00:26:08.070><c> here</c><00:26:08.670><c> with</c><00:26:09.240><c> a</c>

00:26:09.260 --> 00:26:09.270 align:start position:0%
haven't one node at the top here with a
 

00:26:09.270 --> 00:26:12.650 align:start position:0%
haven't one node at the top here with a
bitmap<00:26:09.720><c> that</c><00:26:10.050><c> says</c><00:26:10.530><c> of</c><00:26:10.830><c> 32</c><00:26:11.820><c> values</c><00:26:12.210><c> so</c><00:26:12.360><c> this</c><00:26:12.480><c> is</c>

00:26:12.650 --> 00:26:12.660 align:start position:0%
bitmap that says of 32 values so this is
 

00:26:12.660 --> 00:26:14.540 align:start position:0%
bitmap that says of 32 values so this is
this<00:26:12.870><c> is</c><00:26:13.020><c> my</c><00:26:13.200><c> bitmap</c><00:26:13.620><c> I</c><00:26:13.800><c> showed</c><00:26:14.040><c> earlier</c><00:26:14.400><c> the</c>

00:26:14.540 --> 00:26:14.550 align:start position:0%
this is my bitmap I showed earlier the
 

00:26:14.550 --> 00:26:17.150 align:start position:0%
this is my bitmap I showed earlier the
int<00:26:14.700><c> the</c><00:26:15.180><c> int</c><00:26:15.270><c> bitmap</c><00:26:15.660><c> and</c><00:26:15.990><c> it's</c><00:26:16.140><c> and</c><00:26:16.380><c> it's</c>

00:26:17.150 --> 00:26:17.160 align:start position:0%
int the int bitmap and it's and it's
 

00:26:17.160 --> 00:26:20.630 align:start position:0%
int the int bitmap and it's and it's
essentially<00:26:17.460><c> got</c><00:26:17.610><c> one</c><00:26:17.790><c> bit</c><00:26:17.970><c> set</c><00:26:19.220><c> the</c><00:26:20.220><c> size</c><00:26:20.490><c> of</c>

00:26:20.630 --> 00:26:20.640 align:start position:0%
essentially got one bit set the size of
 

00:26:20.640 --> 00:26:25.330 align:start position:0%
essentially got one bit set the size of
one<00:26:20.850><c> and</c><00:26:21.120><c> there's</c><00:26:22.110><c> a</c><00:26:22.200><c> prefix</c><00:26:22.680><c> here</c><00:26:24.080><c> for</c><00:26:25.080><c> one</c>

00:26:25.330 --> 00:26:25.340 align:start position:0%
one and there's a prefix here for one
 

00:26:25.340 --> 00:26:29.630 align:start position:0%
one and there's a prefix here for one
the<00:26:26.340><c> key</c><00:26:26.520><c> is</c><00:26:26.640><c> one</c><00:26:26.910><c> any</c><00:26:27.470><c> any</c><00:26:28.470><c> integer</c><00:26:29.280><c> value</c>

00:26:29.630 --> 00:26:29.640 align:start position:0%
the key is one any any integer value
 

00:26:29.640 --> 00:26:32.570 align:start position:0%
the key is one any any integer value
under<00:26:30.180><c> 2</c><00:26:30.570><c> to</c><00:26:30.750><c> the</c><00:26:30.840><c> 16</c><00:26:31.320><c> is</c><00:26:31.560><c> actually</c><00:26:32.130><c> the</c><00:26:32.430><c> hash</c>

00:26:32.570 --> 00:26:32.580 align:start position:0%
under 2 to the 16 is actually the hash
 

00:26:32.580 --> 00:26:35.480 align:start position:0%
under 2 to the 16 is actually the hash
code<00:26:32.850><c> is</c><00:26:33.030><c> itself</c><00:26:34.040><c> essentially</c><00:26:35.040><c> that's</c><00:26:35.310><c> it</c>

00:26:35.480 --> 00:26:35.490 align:start position:0%
code is itself essentially that's it
 

00:26:35.490 --> 00:26:37.070 align:start position:0%
code is itself essentially that's it
that's<00:26:35.700><c> what</c><00:26:35.850><c> you</c><00:26:36.030><c> need</c><00:26:36.180><c> to</c><00:26:36.300><c> know</c><00:26:36.420><c> here</c><00:26:36.660><c> so</c><00:26:36.900><c> but</c>

00:26:37.070 --> 00:26:37.080 align:start position:0%
that's what you need to know here so but
 

00:26:37.080 --> 00:26:41.300 align:start position:0%
that's what you need to know here so but
the<00:26:37.470><c> hash</c><00:26:37.650><c> code</c><00:26:37.830><c> of</c><00:26:37.980><c> 1</c><00:26:38.130><c> is</c><00:26:38.280><c> 1</c><00:26:38.520><c> and</c><00:26:40.040><c> so</c><00:26:41.040><c> I</c><00:26:41.070><c> have</c><00:26:41.280><c> a</c>

00:26:41.300 --> 00:26:41.310 align:start position:0%
the hash code of 1 is 1 and so I have a
 

00:26:41.310 --> 00:26:43.280 align:start position:0%
the hash code of 1 is 1 and so I have a
prefix<00:26:41.760><c> here</c><00:26:42.000><c> the</c><00:26:42.150><c> first</c><00:26:42.360><c> applied</c><00:26:42.600><c> bits</c><00:26:42.870><c> of</c><00:26:43.050><c> 1</c>

00:26:43.280 --> 00:26:43.290 align:start position:0%
prefix here the first applied bits of 1
 

00:26:43.290 --> 00:26:46.340 align:start position:0%
prefix here the first applied bits of 1
and<00:26:43.530><c> the</c><00:26:43.890><c> total</c><00:26:44.070><c> hash</c><00:26:44.490><c> is</c><00:26:44.760><c> this</c><00:26:45.450><c> going</c><00:26:46.140><c> from</c>

00:26:46.340 --> 00:26:46.350 align:start position:0%
and the total hash is this going from
 

00:26:46.350 --> 00:26:48.110 align:start position:0%
and the total hash is this going from
least<00:26:46.710><c> significant</c><00:26:47.310><c> bit</c><00:26:47.490><c> to</c><00:26:47.910><c> most</c>

00:26:48.110 --> 00:26:48.120 align:start position:0%
least significant bit to most
 

00:26:48.120 --> 00:26:51.500 align:start position:0%
least significant bit to most
significant<00:26:48.750><c> bit</c><00:26:48.990><c> here</c><00:26:50.150><c> so</c><00:26:51.150><c> does</c><00:26:51.300><c> that</c><00:26:51.330><c> make</c>

00:26:51.500 --> 00:26:51.510 align:start position:0%
significant bit here so does that make
 

00:26:51.510 --> 00:26:52.180 align:start position:0%
significant bit here so does that make
sense

00:26:52.180 --> 00:26:52.190 align:start position:0%
sense
 

00:26:52.190 --> 00:26:58.270 align:start position:0%
sense
so<00:26:53.190><c> I</c><00:26:53.220><c> can</c><00:26:53.430><c> add</c><00:26:53.520><c> some</c><00:26:53.730><c> more</c><00:26:53.760><c> here</c><00:26:54.240><c> so</c><00:26:54.420><c> I</c><00:26:55.290><c> can</c>

00:26:58.270 --> 00:26:58.280 align:start position:0%
 
 

00:26:58.280 --> 00:27:01.070 align:start position:0%
 
visualize<00:26:59.280><c> two</c><00:26:59.820><c> things</c><00:27:00.120><c> instead</c><00:27:00.600><c> so</c><00:27:00.810><c> we</c><00:27:00.840><c> can</c>

00:27:01.070 --> 00:27:01.080 align:start position:0%
visualize two things instead so we can
 

00:27:01.080 --> 00:27:05.520 align:start position:0%
visualize two things instead so we can
we<00:27:01.410><c> can</c><00:27:01.440><c> put</c><00:27:01.710><c> another</c><00:27:01.980><c> value</c><00:27:02.400><c> here</c><00:27:02.700><c> like</c><00:27:03.540><c> so</c>

00:27:05.520 --> 00:27:05.530 align:start position:0%
we can put another value here like so
 

00:27:05.530 --> 00:27:08.200 align:start position:0%
we can put another value here like so
and<00:27:06.530><c> we</c><00:27:06.620><c> can</c><00:27:06.770><c> visualize</c><00:27:07.100><c> two</c><00:27:07.340><c> things</c><00:27:07.640><c> so</c><00:27:08.030><c> now</c>

00:27:08.200 --> 00:27:08.210 align:start position:0%
and we can visualize two things so now
 

00:27:08.210 --> 00:27:11.500 align:start position:0%
and we can visualize two things so now
we<00:27:08.270><c> get</c><00:27:08.590><c> now</c><00:27:09.590><c> we</c><00:27:09.650><c> get</c><00:27:09.860><c> the</c><00:27:10.010><c> previous</c><00:27:10.490><c> map</c><00:27:11.240><c> and</c>

00:27:11.500 --> 00:27:11.510 align:start position:0%
we get now we get the previous map and
 

00:27:11.510 --> 00:27:16.390 align:start position:0%
we get now we get the previous map and
the<00:27:12.380><c> new</c><00:27:12.530><c> map</c><00:27:13.570><c> like</c><00:27:14.570><c> so</c><00:27:14.840><c> so</c><00:27:15.350><c> we</c><00:27:15.800><c> still</c><00:27:16.040><c> have</c><00:27:16.190><c> one</c>

00:27:16.390 --> 00:27:16.400 align:start position:0%
the new map like so so we still have one
 

00:27:16.400 --> 00:27:19.540 align:start position:0%
the new map like so so we still have one
node<00:27:16.640><c> 1</c><00:27:17.180><c> node</c><00:27:17.210><c> depth</c><00:27:17.750><c> we</c><00:27:18.380><c> have</c><00:27:18.590><c> the</c><00:27:19.220><c> previous</c>

00:27:19.540 --> 00:27:19.550 align:start position:0%
node 1 node depth we have the previous
 

00:27:19.550 --> 00:27:21.460 align:start position:0%
node 1 node depth we have the previous
map<00:27:19.880><c> with</c><00:27:20.210><c> the</c><00:27:20.330><c> key</c><00:27:20.480><c> of</c><00:27:20.600><c> 1</c><00:27:20.780><c> to</c><00:27:20.960><c> 1</c><00:27:21.080><c> and</c><00:27:21.260><c> we</c><00:27:21.320><c> have</c><00:27:21.440><c> a</c>

00:27:21.460 --> 00:27:21.470 align:start position:0%
map with the key of 1 to 1 and we have a
 

00:27:21.470 --> 00:27:27.940 align:start position:0%
map with the key of 1 to 1 and we have a
new<00:27:21.710><c> map</c><00:27:21.950><c> with</c><00:27:22.780><c> 1</c><00:27:23.780><c> &amp;</c><00:27:23.930><c> 1</c><00:27:24.080><c> &amp;</c><00:27:24.290><c> 2</c><00:27:24.380><c> &amp;</c><00:27:24.590><c> 2</c><00:27:25.330><c> so</c><00:27:26.830><c> that's</c><00:27:27.830><c> the</c>

00:27:27.940 --> 00:27:27.950 align:start position:0%
new map with 1 &amp; 1 &amp; 2 &amp; 2 so that's the
 

00:27:27.950 --> 00:27:29.650 align:start position:0%
new map with 1 &amp; 1 &amp; 2 &amp; 2 so that's the
Muta<00:27:28.220><c> book</c><00:27:28.370><c> there's</c><00:27:28.580><c> no</c><00:27:28.730><c> structural</c><00:27:29.180><c> sharing</c>

00:27:29.650 --> 00:27:29.660 align:start position:0%
Muta book there's no structural sharing
 

00:27:29.660 --> 00:27:31.240 align:start position:0%
Muta book there's no structural sharing
here<00:27:29.840><c> because</c><00:27:30.140><c> we</c><00:27:30.230><c> were</c><00:27:30.320><c> at</c><00:27:30.410><c> the</c><00:27:30.560><c> same</c><00:27:30.770><c> depth</c>

00:27:31.240 --> 00:27:31.250 align:start position:0%
here because we were at the same depth
 

00:27:31.250 --> 00:27:33.490 align:start position:0%
here because we were at the same depth
here<00:27:31.520><c> which</c><00:27:31.700><c> we</c><00:27:31.940><c> essentially</c><00:27:32.480><c> got</c><00:27:32.750><c> the</c><00:27:32.930><c> the</c>

00:27:33.490 --> 00:27:33.500 align:start position:0%
here which we essentially got the the
 

00:27:33.500 --> 00:27:35.770 align:start position:0%
here which we essentially got the the
two<00:27:33.680><c> arrays</c><00:27:33.980><c> can't</c><00:27:34.340><c> be</c><00:27:34.460><c> shared</c><00:27:34.760><c> so</c><00:27:35.450><c> we</c><00:27:35.540><c> had</c><00:27:35.660><c> to</c>

00:27:35.770 --> 00:27:35.780 align:start position:0%
two arrays can't be shared so we had to
 

00:27:35.780 --> 00:27:37.960 align:start position:0%
two arrays can't be shared so we had to
structurally<00:27:36.260><c> share</c><00:27:36.500><c> when</c><00:27:37.010><c> we</c><00:27:37.130><c> when</c><00:27:37.730><c> we</c><00:27:37.790><c> go</c>

00:27:37.960 --> 00:27:37.970 align:start position:0%
structurally share when we when we go
 

00:27:37.970 --> 00:27:40.570 align:start position:0%
structurally share when we when we go
down<00:27:38.210><c> in</c><00:27:38.450><c> terms</c><00:27:38.660><c> of</c><00:27:38.870><c> nodes</c><00:27:39.190><c> now</c><00:27:40.190><c> that</c><00:27:40.340><c> but</c><00:27:40.520><c> you</c>

00:27:40.570 --> 00:27:40.580 align:start position:0%
down in terms of nodes now that but you
 

00:27:40.580 --> 00:27:42.010 align:start position:0%
down in terms of nodes now that but you
can<00:27:40.730><c> see</c><00:27:40.910><c> here</c><00:27:41.120><c> the</c><00:27:41.240><c> prefix</c><00:27:41.660><c> here</c><00:27:41.900><c> is</c>

00:27:42.010 --> 00:27:42.020 align:start position:0%
can see here the prefix here is
 

00:27:42.020 --> 00:27:45.400 align:start position:0%
can see here the prefix here is
different<00:27:42.940><c> the</c><00:27:43.940><c> hash</c><00:27:44.180><c> is</c><00:27:44.360><c> different</c><00:27:44.780><c> so</c><00:27:45.260><c> for</c>

00:27:45.400 --> 00:27:45.410 align:start position:0%
different the hash is different so for
 

00:27:45.410 --> 00:27:47.500 align:start position:0%
different the hash is different so for
that<00:27:45.620><c> so</c><00:27:46.040><c> it's</c><00:27:46.160><c> very</c><00:27:46.280><c> easy</c><00:27:46.400><c> to</c><00:27:46.730><c> visualize</c><00:27:47.270><c> and</c>

00:27:47.500 --> 00:27:47.510 align:start position:0%
that so it's very easy to visualize and
 

00:27:47.510 --> 00:27:48.850 align:start position:0%
that so it's very easy to visualize and
play<00:27:47.690><c> around</c><00:27:47.810><c> with</c><00:27:48.110><c> these</c><00:27:48.260><c> things</c><00:27:48.530><c> so</c><00:27:48.650><c> I</c><00:27:48.680><c> can</c>

00:27:48.850 --> 00:27:48.860 align:start position:0%
play around with these things so I can
 

00:27:48.860 --> 00:27:55.500 align:start position:0%
play around with these things so I can
show<00:27:49.070><c> a</c><00:27:49.280><c> few</c><00:27:49.550><c> more</c><00:27:49.640><c> complex</c><00:27:50.470><c> examples</c><00:27:51.470><c> here</c>

00:27:55.500 --> 00:27:55.510 align:start position:0%
 
 

00:27:55.510 --> 00:27:58.570 align:start position:0%
 
okay<00:27:56.510><c> so</c><00:27:57.080><c> here</c><00:27:57.350><c> is</c><00:27:57.500><c> here</c><00:27:58.190><c> is</c><00:27:58.220><c> a</c><00:27:58.310><c> good</c><00:27:58.520><c> example</c>

00:27:58.570 --> 00:27:58.580 align:start position:0%
okay so here is here is a good example
 

00:27:58.580 --> 00:28:01.960 align:start position:0%
okay so here is here is a good example
of<00:27:59.770><c> what</c><00:28:00.770><c> I</c><00:28:00.800><c> reckon</c><00:28:01.130><c> you'll</c><00:28:01.310><c> see</c><00:28:01.520><c> that</c><00:28:01.670><c> so</c><00:28:01.940><c> i</c>

00:28:01.960 --> 00:28:01.970 align:start position:0%
of what I reckon you'll see that so i
 

00:28:01.970 --> 00:28:07.540 align:start position:0%
of what I reckon you'll see that so i
zoom<00:28:02.240><c> in</c><00:28:05.440><c> here's</c><00:28:06.440><c> an</c><00:28:06.560><c> example</c><00:28:06.830><c> of</c><00:28:07.070><c> building</c><00:28:07.220><c> up</c>

00:28:07.540 --> 00:28:07.550 align:start position:0%
zoom in here's an example of building up
 

00:28:07.550 --> 00:28:09.760 align:start position:0%
zoom in here's an example of building up
a<00:28:07.730><c> persistent</c><00:28:08.360><c> map</c><00:28:08.570><c> and</c><00:28:09.170><c> this</c><00:28:09.290><c> is</c><00:28:09.380><c> a</c><00:28:09.410><c> common</c>

00:28:09.760 --> 00:28:09.770 align:start position:0%
a persistent map and this is a common
 

00:28:09.770 --> 00:28:13.000 align:start position:0%
a persistent map and this is a common
thing<00:28:09.950><c> you</c><00:28:10.100><c> might</c><00:28:10.250><c> do</c><00:28:10.520><c> in</c><00:28:10.910><c> least</c><00:28:11.690><c> jdk</c><00:28:12.140><c> code</c><00:28:12.410><c> you</c>

00:28:13.000 --> 00:28:13.010 align:start position:0%
thing you might do in least jdk code you
 

00:28:13.010 --> 00:28:17.830 align:start position:0%
thing you might do in least jdk code you
might<00:28:13.190><c> have</c><00:28:13.430><c> the</c><00:28:15.670><c> the</c><00:28:16.670><c> symbols</c><00:28:17.150><c> for</c><00:28:17.510><c> your</c>

00:28:17.830 --> 00:28:17.840 align:start position:0%
might have the the symbols for your
 

00:28:17.840 --> 00:28:21.940 align:start position:0%
might have the the symbols for your
primitive<00:28:18.080><c> types</c><00:28:18.590><c> in</c><00:28:18.950><c> byte</c><00:28:19.910><c> code</c><00:28:20.210><c> BD</c><00:28:21.170><c> fi</c><00:28:21.740><c> and</c>

00:28:21.940 --> 00:28:21.950 align:start position:0%
primitive types in byte code BD fi and
 

00:28:21.950 --> 00:28:24.850 align:start position:0%
primitive types in byte code BD fi and
so<00:28:22.130><c> forth</c><00:28:22.400><c> mapping</c><00:28:22.850><c> to</c><00:28:23.120><c> the</c><00:28:23.210><c> box</c><00:28:23.420><c> types</c><00:28:23.860><c> and</c>

00:28:24.850 --> 00:28:24.860 align:start position:0%
so forth mapping to the box types and
 

00:28:24.860 --> 00:28:27.580 align:start position:0%
so forth mapping to the box types and
that<00:28:25.010><c> you</c><00:28:25.160><c> might</c><00:28:25.310><c> create</c><00:28:25.550><c> a</c><00:28:25.580><c> map</c><00:28:25.790><c> for</c><00:28:26.660><c> that</c><00:28:26.840><c> so</c>

00:28:27.580 --> 00:28:27.590 align:start position:0%
that you might create a map for that so
 

00:28:27.590 --> 00:28:29.110 align:start position:0%
that you might create a map for that so
what<00:28:27.680><c> I'm</c><00:28:27.830><c> doing</c><00:28:28.160><c> here</c><00:28:28.370><c> is</c><00:28:28.430><c> I'm</c><00:28:28.610><c> creating</c><00:28:28.850><c> an</c>

00:28:29.110 --> 00:28:29.120 align:start position:0%
what I'm doing here is I'm creating an
 

00:28:29.120 --> 00:28:32.860 align:start position:0%
what I'm doing here is I'm creating an
empty<00:28:29.510><c> map</c><00:28:29.780><c> rather</c><00:28:30.200><c> than</c><00:28:30.440><c> putting</c><00:28:31.570><c> my</c><00:28:32.570><c> first</c>

00:28:32.860 --> 00:28:32.870 align:start position:0%
empty map rather than putting my first
 

00:28:32.870 --> 00:28:35.020 align:start position:0%
empty map rather than putting my first
entry<00:28:33.320><c> in</c><00:28:33.410><c> my</c><00:28:33.560><c> second</c><00:28:33.950><c> entry</c><00:28:34.250><c> for</c><00:28:34.670><c> identity</c>

00:28:35.020 --> 00:28:35.030 align:start position:0%
entry in my second entry for identity
 

00:28:35.030 --> 00:28:36.460 align:start position:0%
entry in my second entry for identity
for<00:28:35.150><c> veggie</c><00:28:35.360><c> all</c><00:28:35.510><c> immutably</c><00:28:36.050><c> so</c><00:28:36.230><c> I'm</c><00:28:36.290><c> creating</c>

00:28:36.460 --> 00:28:36.470 align:start position:0%
for veggie all immutably so I'm creating
 

00:28:36.470 --> 00:28:37.870 align:start position:0%
for veggie all immutably so I'm creating
all<00:28:36.710><c> these</c><00:28:36.860><c> structures</c><00:28:37.190><c> and</c><00:28:37.490><c> throwing</c><00:28:37.760><c> them</c>

00:28:37.870 --> 00:28:37.880 align:start position:0%
all these structures and throwing them
 

00:28:37.880 --> 00:28:39.100 align:start position:0%
all these structures and throwing them
away<00:28:37.970><c> and</c><00:28:38.210><c> throwing</c><00:28:38.480><c> away</c><00:28:38.600><c> creating</c><00:28:38.990><c> all</c>

00:28:39.100 --> 00:28:39.110 align:start position:0%
away and throwing away creating all
 

00:28:39.110 --> 00:28:40.330 align:start position:0%
away and throwing away creating all
these<00:28:39.230><c> structure</c><00:28:39.590><c> until</c><00:28:39.770><c> I</c><00:28:39.830><c> get</c><00:28:40.040><c> the</c><00:28:40.160><c> one</c><00:28:40.310><c> I</c>

00:28:40.330 --> 00:28:40.340 align:start position:0%
these structure until I get the one I
 

00:28:40.340 --> 00:28:41.950 align:start position:0%
these structure until I get the one I
want<00:28:40.670><c> that's</c><00:28:41.180><c> not</c><00:28:41.360><c> the</c><00:28:41.480><c> particularly</c>

00:28:41.950 --> 00:28:41.960 align:start position:0%
want that's not the particularly
 

00:28:41.960 --> 00:28:43.270 align:start position:0%
want that's not the particularly
efficient<00:28:42.290><c> way</c><00:28:42.410><c> of</c><00:28:42.440><c> doing</c><00:28:42.680><c> it</c><00:28:42.920><c> but</c><00:28:43.040><c> we</c><00:28:43.100><c> can</c>

00:28:43.270 --> 00:28:43.280 align:start position:0%
efficient way of doing it but we can
 

00:28:43.280 --> 00:28:45.310 align:start position:0%
efficient way of doing it but we can
visualize<00:28:43.760><c> this</c><00:28:43.940><c> and</c><00:28:44.150><c> see</c><00:28:44.330><c> what</c><00:28:44.480><c> see</c><00:28:45.290><c> what</c>

00:28:45.310 --> 00:28:45.320 align:start position:0%
visualize this and see what see what
 

00:28:45.320 --> 00:28:47.580 align:start position:0%
visualize this and see what see what
happened<00:28:45.560><c> so</c><00:28:45.650><c> I'll</c><00:28:45.710><c> just</c><00:28:45.860><c> run</c><00:28:46.070><c> this</c><00:28:46.250><c> test</c><00:28:46.520><c> here</c>

00:28:47.580 --> 00:28:47.590 align:start position:0%
happened so I'll just run this test here
 

00:28:47.590 --> 00:28:50.500 align:start position:0%
happened so I'll just run this test here
and<00:28:48.590><c> it</c><00:28:49.220><c> should</c><00:28:49.520><c> do</c><00:28:49.760><c> the</c><00:28:49.880><c> same</c><00:28:50.120><c> thing</c><00:28:50.390><c> as</c>

00:28:50.500 --> 00:28:50.510 align:start position:0%
and it should do the same thing as
 

00:28:50.510 --> 00:28:54.300 align:start position:0%
and it should do the same thing as
before

00:28:54.300 --> 00:28:54.310 align:start position:0%
 
 

00:28:54.310 --> 00:28:57.410 align:start position:0%
 
okay<00:28:55.150><c> so</c><00:28:55.210><c> this</c><00:28:55.510><c> is</c><00:28:55.660><c> getting</c><00:28:55.930><c> harder</c><00:28:56.230><c> to</c><00:28:56.260><c> see</c>

00:28:57.410 --> 00:28:57.420 align:start position:0%
okay so this is getting harder to see
 

00:28:57.420 --> 00:29:00.450 align:start position:0%
okay so this is getting harder to see
can<00:28:58.420><c> you</c><00:28:58.510><c> see</c><00:28:58.660><c> that</c><00:28:58.900><c> not</c><00:28:59.260><c> really</c><00:28:59.440><c> but</c><00:29:00.280><c> the</c>

00:29:00.450 --> 00:29:00.460 align:start position:0%
can you see that not really but the
 

00:29:00.460 --> 00:29:02.100 align:start position:0%
can you see that not really but the
point<00:29:00.670><c> being</c><00:29:00.760><c> is</c><00:29:01.240><c> that</c><00:29:01.270><c> this</c><00:29:01.630><c> actually</c>

00:29:02.100 --> 00:29:02.110 align:start position:0%
point being is that this actually
 

00:29:02.110 --> 00:29:03.510 align:start position:0%
point being is that this actually
there's<00:29:02.290><c> no</c><00:29:02.380><c> collisions</c><00:29:02.920><c> here</c><00:29:03.160><c> there's</c><00:29:03.370><c> no</c>

00:29:03.510 --> 00:29:03.520 align:start position:0%
there's no collisions here there's no
 

00:29:03.520 --> 00:29:08.510 align:start position:0%
there's no collisions here there's no
sub<00:29:03.760><c> knows</c><00:29:03.970><c> it</c><00:29:04.690><c> all</c><00:29:04.980><c> maps</c><00:29:05.980><c> at</c><00:29:06.820><c> one</c><00:29:07.120><c> level</c><00:29:07.450><c> deep</c>

00:29:08.510 --> 00:29:08.520 align:start position:0%
sub knows it all maps at one level deep
 

00:29:08.520 --> 00:29:11.490 align:start position:0%
sub knows it all maps at one level deep
here<00:29:09.520><c> and</c><00:29:09.850><c> we</c><00:29:10.120><c> can</c><00:29:10.270><c> see</c><00:29:10.390><c> the</c><00:29:10.510><c> various</c><00:29:10.840><c> prefixes</c>

00:29:11.490 --> 00:29:11.500 align:start position:0%
here and we can see the various prefixes
 

00:29:11.500 --> 00:29:13.440 align:start position:0%
here and we can see the various prefixes
and<00:29:11.620><c> hash</c><00:29:11.830><c> codes</c><00:29:12.130><c> here</c><00:29:12.460><c> and</c><00:29:12.670><c> we</c><00:29:13.060><c> can</c><00:29:13.210><c> see</c><00:29:13.330><c> the</c>

00:29:13.440 --> 00:29:13.450 align:start position:0%
and hash codes here and we can see the
 

00:29:13.450 --> 00:29:15.240 align:start position:0%
and hash codes here and we can see the
top<00:29:13.660><c> node</c><00:29:13.930><c> here</c><00:29:14.200><c> as</c><00:29:14.320><c> there's</c><00:29:14.560><c> nine</c><00:29:14.770><c> entries</c>

00:29:15.240 --> 00:29:15.250 align:start position:0%
top node here as there's nine entries
 

00:29:15.250 --> 00:29:18.120 align:start position:0%
top node here as there's nine entries
and<00:29:15.550><c> there's</c><00:29:15.970><c> nine</c><00:29:16.180><c> bits</c><00:29:16.480><c> set</c><00:29:16.780><c> in</c><00:29:17.500><c> my</c><00:29:17.710><c> bitmap</c>

00:29:18.120 --> 00:29:18.130 align:start position:0%
and there's nine bits set in my bitmap
 

00:29:18.130 --> 00:29:20.280 align:start position:0%
and there's nine bits set in my bitmap
like<00:29:19.030><c> that</c><00:29:19.210><c> and</c><00:29:19.420><c> there's</c><00:29:19.570><c> no</c><00:29:19.780><c> there's</c><00:29:20.230><c> no</c>

00:29:20.280 --> 00:29:20.290 align:start position:0%
like that and there's no there's no
 

00:29:20.290 --> 00:29:22.380 align:start position:0%
like that and there's no there's no
conflicting<00:29:21.040><c> prefixes</c><00:29:21.790><c> here</c><00:29:22.030><c> so</c><00:29:22.210><c> we're</c><00:29:22.330><c> not</c>

00:29:22.380 --> 00:29:22.390 align:start position:0%
conflicting prefixes here so we're not
 

00:29:22.390 --> 00:29:25.020 align:start position:0%
conflicting prefixes here so we're not
getting<00:29:22.540><c> down</c><00:29:22.810><c> any</c><00:29:23.020><c> any</c><00:29:23.290><c> level</c><00:29:23.860><c> deep</c><00:29:24.100><c> so</c>

00:29:25.020 --> 00:29:25.030 align:start position:0%
getting down any any level deep so
 

00:29:25.030 --> 00:29:26.490 align:start position:0%
getting down any any level deep so
that's<00:29:25.300><c> actually</c><00:29:25.450><c> quite</c><00:29:25.660><c> a</c><00:29:25.840><c> nice</c><00:29:25.990><c> property</c><00:29:26.410><c> I</c>

00:29:26.490 --> 00:29:26.500 align:start position:0%
that's actually quite a nice property I
 

00:29:26.500 --> 00:29:29.790 align:start position:0%
that's actually quite a nice property I
just<00:29:26.800><c> packed</c><00:29:27.070><c> in</c><00:29:28.380><c> essentially</c><00:29:29.380><c> eighteen</c>

00:29:29.790 --> 00:29:29.800 align:start position:0%
just packed in essentially eighteen
 

00:29:29.800 --> 00:29:31.770 align:start position:0%
just packed in essentially eighteen
eighteen<00:29:30.430><c> entries</c><00:29:30.880><c> in</c><00:29:31.000><c> my</c><00:29:31.090><c> object</c><00:29:31.540><c> array</c>

00:29:31.770 --> 00:29:31.780 align:start position:0%
eighteen entries in my object array
 

00:29:31.780 --> 00:29:33.540 align:start position:0%
eighteen entries in my object array
knows<00:29:32.080><c> no</c><00:29:32.320><c> spare</c><00:29:32.620><c> space</c><00:29:32.860><c> if</c><00:29:33.130><c> you're</c><00:29:33.250><c> using</c><00:29:33.400><c> a</c>

00:29:33.540 --> 00:29:33.550 align:start position:0%
knows no spare space if you're using a
 

00:29:33.550 --> 00:29:35.700 align:start position:0%
knows no spare space if you're using a
hash<00:29:33.760><c> map</c><00:29:34.000><c> you</c><00:29:34.450><c> probably</c><00:29:34.780><c> need</c><00:29:34.960><c> to</c><00:29:34.990><c> get</c><00:29:35.230><c> you'd</c>

00:29:35.700 --> 00:29:35.710 align:start position:0%
hash map you probably need to get you'd
 

00:29:35.710 --> 00:29:37.590 align:start position:0%
hash map you probably need to get you'd
have<00:29:35.860><c> to</c><00:29:35.950><c> have</c><00:29:36.040><c> a</c><00:29:36.100><c> hash</c><00:29:36.310><c> table</c><00:29:36.610><c> a</c><00:29:36.910><c> bucket</c><00:29:37.450><c> size</c>

00:29:37.590 --> 00:29:37.600 align:start position:0%
have to have a hash table a bucket size
 

00:29:37.600 --> 00:29:40.560 align:start position:0%
have to have a hash table a bucket size
about<00:29:37.930><c> thirty</c><00:29:38.140><c> two</c><00:29:38.790><c> to</c><00:29:39.790><c> stop</c><00:29:40.000><c> the</c><00:29:40.120><c> collisions</c>

00:29:40.560 --> 00:29:40.570 align:start position:0%
about thirty two to stop the collisions
 

00:29:40.570 --> 00:29:42.420 align:start position:0%
about thirty two to stop the collisions
so<00:29:40.840><c> you're</c><00:29:40.990><c> already</c><00:29:41.200><c> saving</c><00:29:41.560><c> some</c><00:29:41.860><c> space</c><00:29:42.130><c> here</c>

00:29:42.420 --> 00:29:42.430 align:start position:0%
so you're already saving some space here
 

00:29:42.430 --> 00:29:44.940 align:start position:0%
so you're already saving some space here
and<00:29:43.360><c> it's</c><00:29:43.600><c> all</c><00:29:43.750><c> nicely</c><00:29:43.990><c> cache</c><00:29:44.320><c> coherent</c>

00:29:44.940 --> 00:29:44.950 align:start position:0%
and it's all nicely cache coherent
 

00:29:44.950 --> 00:29:46.440 align:start position:0%
and it's all nicely cache coherent
because<00:29:45.430><c> it's</c><00:29:45.550><c> all</c><00:29:45.670><c> in</c><00:29:45.790><c> a</c><00:29:45.850><c> single</c><00:29:46.210><c> array</c><00:29:46.390><c> so</c>

00:29:46.440 --> 00:29:46.450 align:start position:0%
because it's all in a single array so
 

00:29:46.450 --> 00:29:48.300 align:start position:0%
because it's all in a single array so
when<00:29:46.750><c> I</c><00:29:46.780><c> traverse</c><00:29:47.200><c> that</c><00:29:47.530><c> I'm</c><00:29:47.920><c> going</c><00:29:48.130><c> to</c><00:29:48.160><c> get</c>

00:29:48.300 --> 00:29:48.310 align:start position:0%
when I traverse that I'm going to get
 

00:29:48.310 --> 00:29:50.880 align:start position:0%
when I traverse that I'm going to get
the<00:29:48.400><c> prefetching</c><00:29:48.970><c> working</c><00:29:49.360><c> as</c><00:29:49.570><c> well</c><00:29:49.780><c> the</c><00:29:50.770><c> only</c>

00:29:50.880 --> 00:29:50.890 align:start position:0%
the prefetching working as well the only
 

00:29:50.890 --> 00:29:52.320 align:start position:0%
the prefetching working as well the only
thing<00:29:50.980><c> I</c><00:29:51.160><c> don't</c><00:29:51.370><c> have</c><00:29:51.580><c> in</c><00:29:51.730><c> here</c><00:29:51.760><c> is</c><00:29:52.000><c> I'm</c><00:29:52.180><c> not</c>

00:29:52.320 --> 00:29:52.330 align:start position:0%
thing I don't have in here is I'm not
 

00:29:52.330 --> 00:29:54.690 align:start position:0%
thing I don't have in here is I'm not
sharing<00:29:52.630><c> and</c><00:29:52.990><c> not</c><00:29:53.320><c> storing</c><00:29:53.650><c> that</c><00:29:53.800><c> I'm</c><00:29:54.550><c> not</c>

00:29:54.690 --> 00:29:54.700 align:start position:0%
sharing and not storing that I'm not
 

00:29:54.700 --> 00:29:56.580 align:start position:0%
sharing and not storing that I'm not
caching<00:29:55.180><c> the</c><00:29:55.210><c> hash</c><00:29:55.450><c> codes</c><00:29:55.810><c> so</c><00:29:56.350><c> I'm</c><00:29:56.440><c> going</c><00:29:56.560><c> to</c>

00:29:56.580 --> 00:29:56.590 align:start position:0%
caching the hash codes so I'm going to
 

00:29:56.590 --> 00:29:59.190 align:start position:0%
caching the hash codes so I'm going to
take<00:29:56.740><c> a</c><00:29:56.800><c> hit</c><00:29:57.040><c> in</c><00:29:57.280><c> terms</c><00:29:57.790><c> of</c><00:29:57.940><c> time</c><00:29:58.210><c> when</c><00:29:58.780><c> I</c><00:29:58.810><c> when</c>

00:29:59.190 --> 00:29:59.200 align:start position:0%
take a hit in terms of time when I when
 

00:29:59.200 --> 00:30:01.710 align:start position:0%
take a hit in terms of time when I when
I<00:29:59.230><c> compare</c><00:29:59.650><c> my</c><00:29:59.800><c> hash</c><00:29:59.980><c> codes</c><00:30:00.420><c> but</c><00:30:01.420><c> there's</c><00:30:01.600><c> ways</c>

00:30:01.710 --> 00:30:01.720 align:start position:0%
I compare my hash codes but there's ways
 

00:30:01.720 --> 00:30:04.650 align:start position:0%
I compare my hash codes but there's ways
to<00:30:01.750><c> cash</c><00:30:02.080><c> flows</c><00:30:02.350><c> too</c><00:30:02.940><c> so</c><00:30:03.940><c> that's</c><00:30:04.090><c> an</c><00:30:04.180><c> example</c>

00:30:04.650 --> 00:30:04.660 align:start position:0%
to cash flows too so that's an example
 

00:30:04.660 --> 00:30:07.140 align:start position:0%
to cash flows too so that's an example
there<00:30:04.870><c> let</c><00:30:05.170><c> me</c><00:30:05.200><c> show</c><00:30:05.590><c> you</c><00:30:05.650><c> the</c><00:30:06.460><c> concept</c><00:30:06.970><c> of</c>

00:30:07.140 --> 00:30:07.150 align:start position:0%
there let me show you the concept of
 

00:30:07.150 --> 00:30:12.300 align:start position:0%
there let me show you the concept of
building<00:30:07.690><c> instead</c><00:30:08.260><c> so</c><00:30:09.040><c> I</c><00:30:09.400><c> showed</c><00:30:10.210><c> it</c><00:30:11.310><c> building</c>

00:30:12.300 --> 00:30:12.310 align:start position:0%
building instead so I showed it building
 

00:30:12.310 --> 00:30:13.920 align:start position:0%
building instead so I showed it building
structurally<00:30:12.970><c> immutably</c><00:30:13.420><c> and</c><00:30:13.600><c> I'm</c><00:30:13.660><c> throwing</c>

00:30:13.920 --> 00:30:13.930 align:start position:0%
structurally immutably and I'm throwing
 

00:30:13.930 --> 00:30:17.610 align:start position:0%
structurally immutably and I'm throwing
away<00:30:14.200><c> arrays</c><00:30:14.650><c> every</c><00:30:15.100><c> time</c><00:30:15.340><c> I</c><00:30:15.900><c> put</c><00:30:16.900><c> here</c><00:30:17.230><c> as</c>

00:30:17.610 --> 00:30:17.620 align:start position:0%
away arrays every time I put here as
 

00:30:17.620 --> 00:30:20.070 align:start position:0%
away arrays every time I put here as
they<00:30:17.770><c> create</c><00:30:17.980><c> a</c><00:30:18.040><c> new</c><00:30:18.250><c> one</c><00:30:18.630><c> so</c><00:30:19.630><c> creating</c><00:30:19.900><c> some</c>

00:30:20.070 --> 00:30:20.080 align:start position:0%
they create a new one so creating some
 

00:30:20.080 --> 00:30:21.870 align:start position:0%
they create a new one so creating some
garbage<00:30:20.410><c> collection</c><00:30:20.920><c> here</c><00:30:21.100><c> but</c><00:30:21.280><c> I</c><00:30:21.430><c> can</c><00:30:21.610><c> do</c><00:30:21.730><c> the</c>

00:30:21.870 --> 00:30:21.880 align:start position:0%
garbage collection here but I can do the
 

00:30:21.880 --> 00:30:25.140 align:start position:0%
garbage collection here but I can do the
same<00:30:22.150><c> instead</c><00:30:22.750><c> by</c><00:30:23.050><c> saying</c><00:30:23.500><c> P</c><00:30:24.460><c> map</c><00:30:24.640><c> of</c><00:30:24.850><c> and</c>

00:30:25.140 --> 00:30:25.150 align:start position:0%
same instead by saying P map of and
 

00:30:25.150 --> 00:30:27.690 align:start position:0%
same instead by saying P map of and
instead<00:30:25.450><c> I</c><00:30:25.630><c> get</c><00:30:25.870><c> it</c><00:30:25.960><c> essentially</c><00:30:26.590><c> what</c><00:30:26.920><c> I</c><00:30:27.190><c> call</c>

00:30:27.690 --> 00:30:27.700 align:start position:0%
instead I get it essentially what I call
 

00:30:27.700 --> 00:30:31.320 align:start position:0%
instead I get it essentially what I call
a<00:30:27.730><c> builder</c><00:30:28.330><c> a</c><00:30:29.220><c> P</c><00:30:30.220><c> map</c><00:30:30.370><c> builder</c><00:30:30.730><c> here</c><00:30:30.910><c> and</c><00:30:31.060><c> all</c><00:30:31.120><c> P</c>

00:30:31.320 --> 00:30:31.330 align:start position:0%
a builder a P map builder here and all P
 

00:30:31.330 --> 00:30:33.540 align:start position:0%
a builder a P map builder here and all P
map<00:30:31.510><c> builder</c><00:30:31.900><c> does</c><00:30:32.050><c> is</c><00:30:32.290><c> has</c><00:30:32.800><c> a</c><00:30:32.830><c> put</c><00:30:33.100><c> method</c><00:30:33.280><c> on</c>

00:30:33.540 --> 00:30:33.550 align:start position:0%
map builder does is has a put method on
 

00:30:33.550 --> 00:30:35.640 align:start position:0%
map builder does is has a put method on
it<00:30:33.580><c> all</c><00:30:33.970><c> I</c><00:30:34.030><c> can</c><00:30:34.270><c> do</c><00:30:34.420><c> is</c><00:30:34.600><c> add</c><00:30:34.840><c> stuff</c><00:30:35.170><c> to</c><00:30:35.200><c> the</c><00:30:35.470><c> map</c>

00:30:35.640 --> 00:30:35.650 align:start position:0%
it all I can do is add stuff to the map
 

00:30:35.650 --> 00:30:39.900 align:start position:0%
it all I can do is add stuff to the map
and<00:30:36.090><c> I'm</c><00:30:37.090><c> doing</c><00:30:37.480><c> it</c><00:30:37.600><c> in</c><00:30:37.690><c> a</c><00:30:37.780><c> closure</c><00:30:38.050><c> here</c><00:30:38.820><c> and</c><00:30:39.820><c> I</c>

00:30:39.900 --> 00:30:39.910 align:start position:0%
and I'm doing it in a closure here and I
 

00:30:39.910 --> 00:30:42.600 align:start position:0%
and I'm doing it in a closure here and I
want<00:30:40.120><c> to</c><00:30:40.240><c> confine</c><00:30:40.810><c> this</c><00:30:41.500><c> builder</c><00:30:41.980><c> so</c><00:30:42.340><c> it</c><00:30:42.460><c> only</c>

00:30:42.600 --> 00:30:42.610 align:start position:0%
want to confine this builder so it only
 

00:30:42.610 --> 00:30:44.610 align:start position:0%
want to confine this builder so it only
operates<00:30:43.240><c> within</c><00:30:43.570><c> this</c><00:30:43.750><c> closure</c><00:30:44.050><c> and</c><00:30:44.380><c> within</c>

00:30:44.610 --> 00:30:44.620 align:start position:0%
operates within this closure and within
 

00:30:44.620 --> 00:30:47.070 align:start position:0%
operates within this closure and within
the<00:30:44.830><c> same</c><00:30:45.040><c> thread</c><00:30:45.370><c> if</c><00:30:45.880><c> I</c><00:30:46.120><c> operate</c><00:30:46.330><c> it</c><00:30:46.870><c> in</c>

00:30:47.070 --> 00:30:47.080 align:start position:0%
the same thread if I operate it in
 

00:30:47.080 --> 00:30:48.660 align:start position:0%
the same thread if I operate it in
another<00:30:47.410><c> thread</c><00:30:47.710><c> it</c><00:30:48.010><c> will</c><00:30:48.160><c> throw</c><00:30:48.340><c> a</c><00:30:48.370><c> legal</c>

00:30:48.660 --> 00:30:48.670 align:start position:0%
another thread it will throw a legal
 

00:30:48.670 --> 00:30:50.820 align:start position:0%
another thread it will throw a legal
state<00:30:48.910><c> exception</c><00:30:49.510><c> if</c><00:30:49.690><c> I</c><00:30:49.960><c> somehow</c><00:30:50.230><c> cache</c><00:30:50.620><c> it</c>

00:30:50.820 --> 00:30:50.830 align:start position:0%
state exception if I somehow cache it
 

00:30:50.830 --> 00:30:52.770 align:start position:0%
state exception if I somehow cache it
outside<00:30:51.340><c> the</c><00:30:51.550><c> closure</c><00:30:51.820><c> by</c><00:30:52.120><c> storing</c><00:30:52.510><c> it</c><00:30:52.630><c> in</c><00:30:52.720><c> an</c>

00:30:52.770 --> 00:30:52.780 align:start position:0%
outside the closure by storing it in an
 

00:30:52.780 --> 00:30:54.210 align:start position:0%
outside the closure by storing it in an
array<00:30:52.840><c> or</c><00:30:53.050><c> in</c><00:30:53.380><c> a</c><00:30:53.440><c> field</c><00:30:53.710><c> or</c><00:30:53.830><c> something</c><00:30:54.040><c> like</c>

00:30:54.210 --> 00:30:54.220 align:start position:0%
array or in a field or something like
 

00:30:54.220 --> 00:30:56.070 align:start position:0%
array or in a field or something like
that<00:30:54.280><c> and</c><00:30:54.730><c> operate</c><00:30:55.120><c> on</c><00:30:55.270><c> it</c><00:30:55.390><c> when</c><00:30:55.690><c> I'm</c><00:30:55.780><c> outside</c>

00:30:56.070 --> 00:30:56.080 align:start position:0%
that and operate on it when I'm outside
 

00:30:56.080 --> 00:30:57.540 align:start position:0%
that and operate on it when I'm outside
the<00:30:56.200><c> closure</c><00:30:56.440><c> it</c><00:30:56.590><c> will</c><00:30:56.770><c> float</c><00:30:56.980><c> legal</c><00:30:57.340><c> state</c>

00:30:57.540 --> 00:30:57.550 align:start position:0%
the closure it will float legal state
 

00:30:57.550 --> 00:30:59.280 align:start position:0%
the closure it will float legal state
search<00:30:57.790><c> and</c><00:30:57.910><c> something</c><00:30:58.120><c> I'd</c><00:30:58.360><c> nicely</c><00:30:58.840><c> confined</c>

00:30:59.280 --> 00:30:59.290 align:start position:0%
search and something I'd nicely confined
 

00:30:59.290 --> 00:31:01.490 align:start position:0%
search and something I'd nicely confined
this<00:30:59.530><c> thing</c><00:30:59.800><c> and</c><00:30:59.980><c> then</c><00:31:00.550><c> I</c><00:31:00.640><c> can</c><00:31:00.790><c> mute</c><00:31:00.970><c> ibly</c>

00:31:01.490 --> 00:31:01.500 align:start position:0%
this thing and then I can mute ibly
 

00:31:01.500 --> 00:31:03.720 align:start position:0%
this thing and then I can mute ibly
update<00:31:02.500><c> this</c><00:31:02.650><c> safely</c><00:31:03.070><c> because</c><00:31:03.370><c> I</c><00:31:03.400><c> know</c><00:31:03.460><c> no</c>

00:31:03.720 --> 00:31:03.730 align:start position:0%
update this safely because I know no
 

00:31:03.730 --> 00:31:05.850 align:start position:0%
update this safely because I know no
fred's<00:31:04.030><c> will</c><00:31:04.210><c> will</c><00:31:05.110><c> turn</c><00:31:05.350><c> on</c><00:31:05.500><c> it</c><00:31:05.590><c> and</c><00:31:05.740><c> I</c><00:31:05.830><c> know</c>

00:31:05.850 --> 00:31:05.860 align:start position:0%
fred's will will turn on it and I know
 

00:31:05.860 --> 00:31:07.360 align:start position:0%
fred's will will turn on it and I know
that<00:31:06.070><c> if</c><00:31:06.460><c> I</c><00:31:06.610><c> if</c><00:31:06.970><c> it</c>

00:31:07.360 --> 00:31:07.370 align:start position:0%
that if I if it
 

00:31:07.370 --> 00:31:08.890 align:start position:0%
that if I if it
so<00:31:07.550><c> nothing</c><00:31:08.060><c> will</c><00:31:08.180><c> happen</c><00:31:08.330><c> bad</c><00:31:08.690><c> will</c><00:31:08.870><c> happen</c>

00:31:08.890 --> 00:31:08.900 align:start position:0%
so nothing will happen bad will happen
 

00:31:08.900 --> 00:31:11.080 align:start position:0%
so nothing will happen bad will happen
to<00:31:09.200><c> afterwards</c><00:31:09.890><c> and</c><00:31:10.640><c> this</c><00:31:10.760><c> is</c><00:31:10.910><c> quite</c><00:31:11.060><c> a</c>

00:31:11.080 --> 00:31:11.090 align:start position:0%
to afterwards and this is quite a
 

00:31:11.090 --> 00:31:12.550 align:start position:0%
to afterwards and this is quite a
powerful<00:31:11.540><c> concept</c><00:31:11.930><c> we</c><00:31:12.080><c> did</c><00:31:12.230><c> the</c><00:31:12.320><c> same</c><00:31:12.500><c> thing</c>

00:31:12.550 --> 00:31:12.560 align:start position:0%
powerful concept we did the same thing
 

00:31:12.560 --> 00:31:14.950 align:start position:0%
powerful concept we did the same thing
with<00:31:12.890><c> the</c><00:31:13.040><c> stack</c><00:31:13.250><c> Walker</c><00:31:13.610><c> API</c><00:31:13.940><c> if</c><00:31:14.600><c> you've</c><00:31:14.810><c> ever</c>

00:31:14.950 --> 00:31:14.960 align:start position:0%
with the stack Walker API if you've ever
 

00:31:14.960 --> 00:31:17.290 align:start position:0%
with the stack Walker API if you've ever
used<00:31:15.050><c> this</c><00:31:15.410><c> to</c><00:31:15.590><c> get</c><00:31:15.710><c> stacks</c><00:31:16.070><c> and</c><00:31:16.370><c> traversing</c>

00:31:17.290 --> 00:31:17.300 align:start position:0%
used this to get stacks and traversing
 

00:31:17.300 --> 00:31:19.600 align:start position:0%
used this to get stacks and traversing
the<00:31:17.420><c> frames</c><00:31:17.720><c> using</c><00:31:18.170><c> the</c><00:31:18.380><c> stream</c><00:31:18.650><c> API</c><00:31:18.830><c> in</c><00:31:19.310><c> a</c>

00:31:19.600 --> 00:31:19.610 align:start position:0%
the frames using the stream API in a
 

00:31:19.610 --> 00:31:21.850 align:start position:0%
the frames using the stream API in a
closure<00:31:19.910><c> and</c><00:31:20.120><c> in</c><00:31:20.540><c> a</c><00:31:20.600><c> confined</c><00:31:20.960><c> way</c><00:31:21.230><c> using</c>

00:31:21.850 --> 00:31:21.860 align:start position:0%
closure and in a confined way using
 

00:31:21.860 --> 00:31:23.110 align:start position:0%
closure and in a confined way using
closure<00:31:22.130><c> like</c><00:31:22.430><c> this</c><00:31:22.580><c> and</c><00:31:22.700><c> I</c><00:31:22.730><c> think</c><00:31:22.790><c> this</c><00:31:22.970><c> is</c><00:31:23.090><c> a</c>

00:31:23.110 --> 00:31:23.120 align:start position:0%
closure like this and I think this is a
 

00:31:23.120 --> 00:31:24.820 align:start position:0%
closure like this and I think this is a
very<00:31:23.360><c> interesting</c><00:31:23.750><c> pattern</c><00:31:24.170><c> because</c><00:31:24.560><c> I</c><00:31:24.680><c> can</c>

00:31:24.820 --> 00:31:24.830 align:start position:0%
very interesting pattern because I can
 

00:31:24.830 --> 00:31:27.550 align:start position:0%
very interesting pattern because I can
build<00:31:25.100><c> up</c><00:31:25.340><c> something</c><00:31:25.880><c> mutable</c><00:31:26.600><c> and</c><00:31:26.960><c> not</c><00:31:27.200><c> throw</c>

00:31:27.550 --> 00:31:27.560 align:start position:0%
build up something mutable and not throw
 

00:31:27.560 --> 00:31:29.740 align:start position:0%
build up something mutable and not throw
away<00:31:27.590><c> and</c><00:31:28.160><c> create</c><00:31:28.580><c> a</c><00:31:28.610><c> bunch</c><00:31:28.850><c> of</c><00:31:29.000><c> garbage</c><00:31:29.480><c> and</c>

00:31:29.740 --> 00:31:29.750 align:start position:0%
away and create a bunch of garbage and
 

00:31:29.750 --> 00:31:32.200 align:start position:0%
away and create a bunch of garbage and
once<00:31:30.380><c> the</c><00:31:30.710><c> closure</c><00:31:30.950><c> finishes</c><00:31:31.520><c> I</c><00:31:31.550><c> freeze</c><00:31:32.030><c> of</c>

00:31:32.200 --> 00:31:32.210 align:start position:0%
once the closure finishes I freeze of
 

00:31:32.210 --> 00:31:34.000 align:start position:0%
once the closure finishes I freeze of
collection<00:31:32.780><c> and</c><00:31:32.990><c> it</c><00:31:33.170><c> becomes</c><00:31:33.470><c> immutable</c>

00:31:34.000 --> 00:31:34.010 align:start position:0%
collection and it becomes immutable
 

00:31:34.010 --> 00:31:37.960 align:start position:0%
collection and it becomes immutable
again<00:31:34.280><c> I'm</c><00:31:35.270><c> doing</c><00:31:36.200><c> some</c><00:31:36.670><c> interesting</c><00:31:37.670><c> tricks</c>

00:31:37.960 --> 00:31:37.970 align:start position:0%
again I'm doing some interesting tricks
 

00:31:37.970 --> 00:31:43.090 align:start position:0%
again I'm doing some interesting tricks
with<00:31:39.280><c> JD</c><00:31:40.280><c> some</c><00:31:40.760><c> misc</c><00:31:41.030><c> unsafe</c><00:31:41.600><c> here</c><00:31:42.080><c> if</c><00:31:42.860><c> you</c>

00:31:43.090 --> 00:31:43.100 align:start position:0%
with JD some misc unsafe here if you
 

00:31:43.100 --> 00:31:45.810 align:start position:0%
with JD some misc unsafe here if you
want<00:31:43.250><c> to</c><00:31:43.340><c> look</c><00:31:43.430><c> at</c><00:31:43.580><c> the</c><00:31:43.700><c> code</c><00:31:44.140><c> I'm</c><00:31:45.140><c> actually</c>

00:31:45.810 --> 00:31:45.820 align:start position:0%
want to look at the code I'm actually
 

00:31:45.820 --> 00:31:49.890 align:start position:0%
want to look at the code I'm actually
rather<00:31:46.820><c> than</c><00:31:47.090><c> doing</c><00:31:47.360><c> a</c><00:31:47.450><c> copy</c><00:31:47.720><c> of</c><00:31:48.050><c> the</c><00:31:48.710><c> data</c><00:31:48.920><c> I'm</c>

00:31:49.890 --> 00:31:49.900 align:start position:0%
rather than doing a copy of the data I'm
 

00:31:49.900 --> 00:31:52.300 align:start position:0%
rather than doing a copy of the data I'm
transforming<00:31:50.900><c> the</c><00:31:51.050><c> class</c><00:31:51.290><c> header</c><00:31:51.620><c> from</c>

00:31:52.300 --> 00:31:52.310 align:start position:0%
transforming the class header from
 

00:31:52.310 --> 00:31:54.670 align:start position:0%
transforming the class header from
something<00:31:53.000><c> that</c><00:31:53.180><c> I</c><00:31:53.450><c> can</c><00:31:53.690><c> write</c><00:31:54.110><c> on</c><00:31:54.350><c> in</c><00:31:54.470><c> terms</c>

00:31:54.670 --> 00:31:54.680 align:start position:0%
something that I can write on in terms
 

00:31:54.680 --> 00:31:57.070 align:start position:0%
something that I can write on in terms
of<00:31:54.920><c> fields</c><00:31:55.400><c> to</c><00:31:56.120><c> something</c><00:31:56.510><c> that</c><00:31:56.540><c> is</c><00:31:56.750><c> the</c><00:31:56.870><c> same</c>

00:31:57.070 --> 00:31:57.080 align:start position:0%
of fields to something that is the same
 

00:31:57.080 --> 00:31:59.290 align:start position:0%
of fields to something that is the same
structure<00:31:57.440><c> with</c><00:31:57.680><c> final</c><00:31:58.070><c> fields</c><00:31:58.460><c> later</c><00:31:58.670><c> on</c><00:31:58.940><c> if</c>

00:31:59.290 --> 00:31:59.300 align:start position:0%
structure with final fields later on if
 

00:31:59.300 --> 00:32:00.550 align:start position:0%
structure with final fields later on if
you<00:31:59.360><c> want</c><00:31:59.540><c> to</c><00:31:59.570><c> look</c><00:31:59.690><c> at</c><00:31:59.810><c> the</c><00:31:59.900><c> code</c><00:32:00.080><c> you</c>

00:32:00.550 --> 00:32:00.560 align:start position:0%
you want to look at the code you
 

00:32:00.560 --> 00:32:03.160 align:start position:0%
you want to look at the code you
shouldn't<00:32:00.830><c> be</c><00:32:00.890><c> doing</c><00:32:01.130><c> this</c><00:32:01.220><c> at</c><00:32:01.280><c> home</c><00:32:01.990><c> but</c><00:32:02.990><c> this</c>

00:32:03.160 --> 00:32:03.170 align:start position:0%
shouldn't be doing this at home but this
 

00:32:03.170 --> 00:32:05.200 align:start position:0%
shouldn't be doing this at home but this
is<00:32:03.230><c> these</c><00:32:04.130><c> are</c><00:32:04.280><c> the</c><00:32:04.340><c> kind</c><00:32:04.370><c> of</c><00:32:04.670><c> tricks</c><00:32:04.940><c> we</c><00:32:05.180><c> can</c>

00:32:05.200 --> 00:32:05.210 align:start position:0%
is these are the kind of tricks we can
 

00:32:05.210 --> 00:32:09.220 align:start position:0%
is these are the kind of tricks we can
do<00:32:05.600><c> in</c><00:32:05.840><c> the</c><00:32:06.050><c> JDK</c><00:32:06.560><c> and</c><00:32:07.150><c> we</c><00:32:08.150><c> as</c><00:32:08.570><c> long</c><00:32:08.840><c> as</c><00:32:08.960><c> we</c><00:32:09.080><c> can</c>

00:32:09.220 --> 00:32:09.230 align:start position:0%
do in the JDK and we as long as we can
 

00:32:09.230 --> 00:32:11.290 align:start position:0%
do in the JDK and we as long as we can
test<00:32:09.440><c> it</c><00:32:09.680><c> and</c><00:32:09.800><c> we</c><00:32:09.980><c> trust</c><00:32:10.220><c> our</c><00:32:10.400><c> code</c><00:32:10.640><c> we</c><00:32:10.850><c> can</c><00:32:11.030><c> we</c>

00:32:11.290 --> 00:32:11.300 align:start position:0%
test it and we trust our code we can we
 

00:32:11.300 --> 00:32:14.230 align:start position:0%
test it and we trust our code we can we
can<00:32:11.450><c> do</c><00:32:11.600><c> these</c><00:32:11.780><c> types</c><00:32:12.050><c> of</c><00:32:12.200><c> tricks</c><00:32:12.610><c> and</c><00:32:13.610><c> and</c><00:32:13.910><c> and</c>

00:32:14.230 --> 00:32:14.240 align:start position:0%
can do these types of tricks and and and
 

00:32:14.240 --> 00:32:15.850 align:start position:0%
can do these types of tricks and and and
no<00:32:14.480><c> one</c><00:32:14.630><c> else</c><00:32:14.780><c> can</c><00:32:14.930><c> do</c><00:32:15.080><c> these</c><00:32:15.230><c> types</c><00:32:15.470><c> of</c><00:32:15.620><c> tricks</c>

00:32:15.850 --> 00:32:15.860 align:start position:0%
no one else can do these types of tricks
 

00:32:15.860 --> 00:32:17.950 align:start position:0%
no one else can do these types of tricks
outside<00:32:16.100><c> that's</c><00:32:16.670><c> an</c><00:32:16.850><c> advantage</c><00:32:17.390><c> to</c><00:32:17.630><c> us</c><00:32:17.660><c> and</c>

00:32:17.950 --> 00:32:17.960 align:start position:0%
outside that's an advantage to us and
 

00:32:17.960 --> 00:32:19.660 align:start position:0%
outside that's an advantage to us and
that's<00:32:18.080><c> one</c><00:32:18.290><c> reason</c><00:32:18.320><c> why</c><00:32:18.830><c> these</c><00:32:18.890><c> things</c><00:32:19.130><c> are</c>

00:32:19.660 --> 00:32:19.670 align:start position:0%
that's one reason why these things are
 

00:32:19.670 --> 00:32:21.640 align:start position:0%
that's one reason why these things are
in<00:32:19.760><c> other</c><00:32:20.000><c> interest</c><00:32:20.480><c> to</c><00:32:20.660><c> me</c><00:32:20.810><c> is</c><00:32:21.020><c> we</c><00:32:21.470><c> can</c>

00:32:21.640 --> 00:32:21.650 align:start position:0%
in other interest to me is we can
 

00:32:21.650 --> 00:32:24.240 align:start position:0%
in other interest to me is we can
optimize<00:32:21.860><c> the</c><00:32:22.370><c> heck</c><00:32:22.520><c> out</c><00:32:22.700><c> of</c><00:32:22.730><c> these</c><00:32:23.000><c> things</c>

00:32:24.240 --> 00:32:24.250 align:start position:0%
optimize the heck out of these things
 

00:32:24.250 --> 00:32:26.470 align:start position:0%
optimize the heck out of these things
anyone<00:32:25.250><c> can</c><00:32:25.400><c> write</c><00:32:25.580><c> these</c><00:32:25.730><c> things</c><00:32:25.970><c> on</c><00:32:26.180><c> top</c><00:32:26.330><c> of</c>

00:32:26.470 --> 00:32:26.480 align:start position:0%
anyone can write these things on top of
 

00:32:26.480 --> 00:32:28.450 align:start position:0%
anyone can write these things on top of
a<00:32:26.540><c> JD</c><00:32:26.750><c> get</c><00:32:27.050><c> reasonable</c><00:32:27.560><c> efficiency</c><00:32:28.040><c> I</c><00:32:28.220><c> think</c>

00:32:28.450 --> 00:32:28.460 align:start position:0%
a JD get reasonable efficiency I think
 

00:32:28.460 --> 00:32:31.000 align:start position:0%
a JD get reasonable efficiency I think
we<00:32:28.580><c> can</c><00:32:28.730><c> do</c><00:32:28.820><c> a</c><00:32:28.850><c> better</c><00:32:29.060><c> job</c><00:32:29.120><c> if</c><00:32:29.690><c> a</c><00:32:30.320><c> in</c><00:32:30.500><c> the</c><00:32:30.620><c> JDK</c>

00:32:31.000 --> 00:32:31.010 align:start position:0%
we can do a better job if a in the JDK
 

00:32:31.010 --> 00:32:34.180 align:start position:0%
we can do a better job if a in the JDK
itself<00:32:31.930><c> so</c><00:32:32.930><c> that's</c><00:32:33.110><c> one</c><00:32:33.290><c> advantage</c><00:32:33.590><c> so</c><00:32:34.160><c> I</c>

00:32:34.180 --> 00:32:34.190 align:start position:0%
itself so that's one advantage so I
 

00:32:34.190 --> 00:32:35.920 align:start position:0%
itself so that's one advantage so I
showed<00:32:34.520><c> that</c><00:32:34.550><c> I</c><00:32:34.940><c> can</c><00:32:35.180><c> we</c><00:32:35.300><c> can</c><00:32:35.450><c> just</c><00:32:35.600><c> run</c><00:32:35.750><c> that</c>

00:32:35.920 --> 00:32:35.930 align:start position:0%
showed that I can we can just run that
 

00:32:35.930 --> 00:32:38.650 align:start position:0%
showed that I can we can just run that
two<00:32:36.140><c> just</c><00:32:36.380><c> to</c><00:32:36.500><c> show</c><00:32:36.680><c> that</c><00:32:36.710><c> it</c><00:32:36.890><c> will</c><00:32:37.510><c> build</c><00:32:38.510><c> a</c>

00:32:38.650 --> 00:32:38.660 align:start position:0%
two just to show that it will build a
 

00:32:38.660 --> 00:32:45.790 align:start position:0%
two just to show that it will build a
map<00:32:41.530><c> like</c><00:32:42.530><c> so</c><00:32:43.960><c> okay</c><00:32:44.960><c> same</c><00:32:45.260><c> thing</c><00:32:45.290><c> as</c><00:32:45.650><c> before</c>

00:32:45.790 --> 00:32:45.800 align:start position:0%
map like so okay same thing as before
 

00:32:45.800 --> 00:32:49.240 align:start position:0%
map like so okay same thing as before
it's<00:32:46.520><c> no</c><00:32:46.670><c> different</c>

00:32:49.240 --> 00:32:49.250 align:start position:0%
it's no different
 

00:32:49.250 --> 00:32:51.610 align:start position:0%
it's no different
I<00:32:49.340><c> get</c><00:32:50.030><c> the</c><00:32:50.120><c> same</c><00:32:50.270><c> structure</c><00:32:50.750><c> out</c><00:32:50.930><c> immutable</c>

00:32:51.610 --> 00:32:51.620 align:start position:0%
I get the same structure out immutable
 

00:32:51.620 --> 00:32:54.850 align:start position:0%
I get the same structure out immutable
structure<00:32:52.160><c> there</c><00:32:53.170><c> okay</c><00:32:54.170><c> let's</c><00:32:54.350><c> show</c>

00:32:54.850 --> 00:32:54.860 align:start position:0%
structure there okay let's show
 

00:32:54.860 --> 00:32:59.080 align:start position:0%
structure there okay let's show
something<00:32:55.250><c> more</c><00:32:55.280><c> complex</c><00:32:55.960><c> let's</c><00:32:56.960><c> show</c><00:32:58.090><c> this</c>

00:32:59.080 --> 00:32:59.090 align:start position:0%
something more complex let's show this
 

00:32:59.090 --> 00:33:00.970 align:start position:0%
something more complex let's show this
one<00:32:59.330><c> here</c><00:32:59.570><c> so</c><00:32:59.810><c> I'm</c><00:32:59.900><c> I'm</c><00:33:00.440><c> not</c><00:33:00.680><c> building</c>

00:33:00.970 --> 00:33:00.980 align:start position:0%
one here so I'm I'm not building
 

00:33:00.980 --> 00:33:02.860 align:start position:0%
one here so I'm I'm not building
efficiently<00:33:01.700><c> here</c><00:33:01.880><c> but</c><00:33:02.060><c> I'm</c><00:33:02.120><c> just</c><00:33:02.300><c> creating</c><00:33:02.480><c> a</c>

00:33:02.860 --> 00:33:02.870 align:start position:0%
efficiently here but I'm just creating a
 

00:33:02.870 --> 00:33:06.520 align:start position:0%
efficiently here but I'm just creating a
bunch<00:33:03.170><c> of</c><00:33:03.350><c> entries</c><00:33:03.800><c> of</c><00:33:04.160><c> fruit</c><00:33:04.940><c> to</c><00:33:05.180><c> color</c><00:33:05.530><c> like</c>

00:33:06.520 --> 00:33:06.530 align:start position:0%
bunch of entries of fruit to color like
 

00:33:06.530 --> 00:33:08.410 align:start position:0%
bunch of entries of fruit to color like
this<00:33:06.740><c> and</c><00:33:07.040><c> I'm</c><00:33:07.190><c> going</c><00:33:07.340><c> to</c><00:33:07.370><c> visualize</c><00:33:07.580><c> the</c><00:33:08.240><c> map</c>

00:33:08.410 --> 00:33:08.420 align:start position:0%
this and I'm going to visualize the map
 

00:33:08.420 --> 00:33:10.000 align:start position:0%
this and I'm going to visualize the map
I<00:33:08.600><c> built</c><00:33:08.900><c> but</c><00:33:09.380><c> I'm</c><00:33:09.500><c> also</c><00:33:09.620><c> going</c><00:33:09.770><c> to</c><00:33:09.830><c> visualize</c>

00:33:10.000 --> 00:33:10.010 align:start position:0%
I built but I'm also going to visualize
 

00:33:10.010 --> 00:33:13.390 align:start position:0%
I built but I'm also going to visualize
the<00:33:10.460><c> one</c><00:33:10.690><c> with</c><00:33:11.690><c> blue</c><00:33:11.960><c> the</c><00:33:12.230><c> blueberry</c><00:33:12.680><c> entry</c>

00:33:13.390 --> 00:33:13.400 align:start position:0%
the one with blue the blueberry entry
 

00:33:13.400 --> 00:33:16.630 align:start position:0%
the one with blue the blueberry entry
removed<00:33:14.860><c> let's</c><00:33:15.860><c> see</c><00:33:16.040><c> what</c><00:33:16.160><c> happens</c>

00:33:16.630 --> 00:33:16.640 align:start position:0%
removed let's see what happens
 

00:33:16.640 --> 00:33:20.650 align:start position:0%
removed let's see what happens
yeah<00:33:18.730><c> so</c><00:33:19.730><c> this</c><00:33:19.820><c> is</c><00:33:19.940><c> going</c><00:33:20.060><c> to</c><00:33:20.150><c> create</c><00:33:20.240><c> quite</c><00:33:20.600><c> a</c>

00:33:20.650 --> 00:33:20.660 align:start position:0%
yeah so this is going to create quite a
 

00:33:20.660 --> 00:33:27.430 align:start position:0%
yeah so this is going to create quite a
big<00:33:22.270><c> map</c><00:33:23.270><c> here</c><00:33:23.690><c> so</c><00:33:24.380><c> if</c><00:33:24.740><c> we</c><00:33:24.920><c> just</c><00:33:26.020><c> yep</c><00:33:27.020><c> is</c><00:33:27.200><c> quite</c>

00:33:27.430 --> 00:33:27.440 align:start position:0%
big map here so if we just yep is quite
 

00:33:27.440 --> 00:33:34.210 align:start position:0%
big map here so if we just yep is quite
big<00:33:27.680><c> but</c><00:33:27.920><c> if</c><00:33:28.700><c> you</c><00:33:28.940><c> notice</c><00:33:29.390><c> here</c><00:33:33.130><c> we're</c><00:33:34.130><c> getting</c>

00:33:34.210 --> 00:33:34.220 align:start position:0%
big but if you notice here we're getting
 

00:33:34.220 --> 00:33:36.070 align:start position:0%
big but if you notice here we're getting
some<00:33:34.520><c> structural</c><00:33:35.000><c> sharing</c><00:33:35.480><c> between</c><00:33:35.630><c> the</c><00:33:35.840><c> two</c>

00:33:36.070 --> 00:33:36.080 align:start position:0%
some structural sharing between the two
 

00:33:36.080 --> 00:33:38.500 align:start position:0%
some structural sharing between the two
maps<00:33:36.310><c> because</c><00:33:37.310><c> we've</c><00:33:37.550><c> got</c><00:33:37.670><c> a</c><00:33:37.700><c> sub</c><00:33:37.940><c> node</c><00:33:38.210><c> that</c>

00:33:38.500 --> 00:33:38.510 align:start position:0%
maps because we've got a sub node that
 

00:33:38.510 --> 00:33:42.310 align:start position:0%
maps because we've got a sub node that
conflicts<00:33:39.110><c> on</c><00:33:39.380><c> the</c><00:33:39.980><c> first</c><00:33:40.220><c> PI</c><00:33:40.580><c> bit</c><00:33:40.850><c> prefix</c><00:33:41.360><c> so</c>

00:33:42.310 --> 00:33:42.320 align:start position:0%
conflicts on the first PI bit prefix so
 

00:33:42.320 --> 00:33:44.620 align:start position:0%
conflicts on the first PI bit prefix so
the<00:33:42.410><c> first</c><00:33:42.650><c> fight</c><00:33:42.890><c> bit</c><00:33:43.130><c> prefix</c><00:33:43.670><c> here</c><00:33:43.940><c> both</c>

00:33:44.620 --> 00:33:44.630 align:start position:0%
the first fight bit prefix here both
 

00:33:44.630 --> 00:33:48.370 align:start position:0%
the first fight bit prefix here both
banana<00:33:45.020><c> and</c><00:33:45.290><c> plum</c><00:33:46.210><c> share</c><00:33:47.210><c> the</c><00:33:47.570><c> thirst</c><00:33:47.930><c> by</c><00:33:48.140><c> bit</c>

00:33:48.370 --> 00:33:48.380 align:start position:0%
banana and plum share the thirst by bit
 

00:33:48.380 --> 00:33:52.300 align:start position:0%
banana and plum share the thirst by bit
prefix<00:33:48.830><c> of</c><00:33:49.070><c> 0</c><00:33:49.760><c> 0</c><00:33:49.850><c> 0</c><00:33:50.330><c> 0</c><00:33:50.450><c> 0</c><00:33:51.160><c> so</c><00:33:52.160><c> we</c><00:33:52.280><c> can</c>

00:33:52.300 --> 00:33:52.310 align:start position:0%
prefix of 0 0 0 0 0 so we can
 

00:33:52.310 --> 00:33:53.920 align:start position:0%
prefix of 0 0 0 0 0 so we can
structurally<00:33:52.910><c> share</c><00:33:53.180><c> that</c><00:33:53.360><c> between</c><00:33:53.600><c> the</c><00:33:53.780><c> two</c>

00:33:53.920 --> 00:33:53.930 align:start position:0%
structurally share that between the two
 

00:33:53.930 --> 00:33:58.420 align:start position:0%
structurally share that between the two
maps<00:33:54.490><c> that</c><00:33:55.490><c> we</c><00:33:55.610><c> modified</c><00:33:56.740><c> so</c><00:33:57.740><c> this</c><00:33:57.920><c> map</c><00:33:58.160><c> will</c>

00:33:58.420 --> 00:33:58.430 align:start position:0%
maps that we modified so this map will
 

00:33:58.430 --> 00:34:02.200 align:start position:0%
maps that we modified so this map will
have<00:34:00.130><c> so</c><00:34:01.130><c> it</c><00:34:01.190><c> has</c><00:34:01.340><c> blueberry</c><00:34:01.790><c> in</c><00:34:01.940><c> but</c><00:34:02.090><c> there's</c>

00:34:02.200 --> 00:34:02.210 align:start position:0%
have so it has blueberry in but there's
 

00:34:02.210 --> 00:34:03.700 align:start position:0%
have so it has blueberry in but there's
only<00:34:02.300><c> one</c><00:34:02.390><c> blueberry</c><00:34:02.750><c> here</c><00:34:03.200><c> there's</c><00:34:03.440><c> not</c><00:34:03.560><c> in</c>

00:34:03.700 --> 00:34:03.710 align:start position:0%
only one blueberry here there's not in
 

00:34:03.710 --> 00:34:05.710 align:start position:0%
only one blueberry here there's not in
the<00:34:03.830><c> other</c><00:34:03.950><c> map</c><00:34:04.160><c> we</c><00:34:04.280><c> removed</c><00:34:04.610><c> it</c><00:34:04.790><c> but</c><00:34:05.420><c> we</c><00:34:05.570><c> can</c>

00:34:05.710 --> 00:34:05.720 align:start position:0%
the other map we removed it but we can
 

00:34:05.720 --> 00:34:09.940 align:start position:0%
the other map we removed it but we can
structurally<00:34:06.260><c> share</c><00:34:07.899><c> this</c><00:34:08.899><c> sub</c><00:34:09.260><c> mode</c><00:34:09.679><c> layer</c>

00:34:09.940 --> 00:34:09.950 align:start position:0%
structurally share this sub mode layer
 

00:34:09.950 --> 00:34:13.000 align:start position:0%
structurally share this sub mode layer
here<00:34:10.370><c> so</c><00:34:10.850><c> when</c><00:34:10.970><c> you</c><00:34:11.000><c> got</c><00:34:11.149><c> more</c><00:34:11.419><c> complex</c><00:34:12.010><c> layers</c>

00:34:13.000 --> 00:34:13.010 align:start position:0%
here so when you got more complex layers
 

00:34:13.010 --> 00:34:15.220 align:start position:0%
here so when you got more complex layers
there's<00:34:13.820><c> more</c><00:34:14.060><c> structural</c><00:34:14.510><c> sharing</c><00:34:14.960><c> you</c><00:34:15.080><c> can</c>

00:34:15.220 --> 00:34:15.230 align:start position:0%
there's more structural sharing you can
 

00:34:15.230 --> 00:34:16.480 align:start position:0%
there's more structural sharing you can
actually<00:34:15.379><c> do</c><00:34:15.710><c> here</c><00:34:15.919><c> and</c><00:34:15.980><c> this</c><00:34:16.100><c> is</c><00:34:16.220><c> interesting</c>

00:34:16.480 --> 00:34:16.490 align:start position:0%
actually do here and this is interesting
 

00:34:16.490 --> 00:34:18.610 align:start position:0%
actually do here and this is interesting
this<00:34:16.700><c> is</c><00:34:16.850><c> makes</c><00:34:17.060><c> it</c><00:34:17.149><c> also</c><00:34:17.540><c> it</c><00:34:17.990><c> makes</c><00:34:18.169><c> it</c><00:34:18.260><c> easier</c>

00:34:18.610 --> 00:34:18.620 align:start position:0%
this is makes it also it makes it easier
 

00:34:18.620 --> 00:34:20.139 align:start position:0%
this is makes it also it makes it easier
to<00:34:18.649><c> split</c><00:34:18.980><c> because</c><00:34:19.370><c> there's</c><00:34:19.490><c> a</c><00:34:19.520><c> natural</c><00:34:19.669><c> split</c>

00:34:20.139 --> 00:34:20.149 align:start position:0%
to split because there's a natural split
 

00:34:20.149 --> 00:34:22.330 align:start position:0%
to split because there's a natural split
point<00:34:20.419><c> both</c><00:34:20.929><c> in</c><00:34:21.110><c> the</c><00:34:21.260><c> array</c><00:34:21.500><c> and</c><00:34:21.679><c> this</c><00:34:22.100><c> one</c>

00:34:22.330 --> 00:34:22.340 align:start position:0%
point both in the array and this one
 

00:34:22.340 --> 00:34:25.720 align:start position:0%
point both in the array and this one
here<00:34:22.610><c> too</c><00:34:23.980><c> so</c><00:34:24.980><c> hopefully</c><00:34:25.250><c> that</c><00:34:25.370><c> gets</c><00:34:25.520><c> it</c>

00:34:25.720 --> 00:34:25.730 align:start position:0%
here too so hopefully that gets it
 

00:34:25.730 --> 00:34:28.180 align:start position:0%
here too so hopefully that gets it
across<00:34:26.000><c> a</c><00:34:26.360><c> little</c><00:34:26.899><c> bit</c><00:34:27.080><c> here</c><00:34:27.470><c> we</c><00:34:27.649><c> can</c><00:34:27.830><c> see</c><00:34:28.010><c> that</c>

00:34:28.180 --> 00:34:28.190 align:start position:0%
across a little bit here we can see that
 

00:34:28.190 --> 00:34:31.090 align:start position:0%
across a little bit here we can see that
the<00:34:28.280><c> prefix</c><00:34:28.730><c> here</c><00:34:29.060><c> we</c><00:34:29.810><c> now</c><00:34:29.960><c> have</c><00:34:30.169><c> 2</c><00:34:30.470><c> 5</c><00:34:30.740><c> bits</c>

00:34:31.090 --> 00:34:31.100 align:start position:0%
the prefix here we now have 2 5 bits
 

00:34:31.100 --> 00:34:33.010 align:start position:0%
the prefix here we now have 2 5 bits
here<00:34:31.370><c> the</c><00:34:31.760><c> first</c><00:34:32.000><c> 5</c><00:34:32.179><c> bits</c><00:34:32.450><c> and</c><00:34:32.659><c> the</c><00:34:32.720><c> second</c>

00:34:33.010 --> 00:34:33.020 align:start position:0%
here the first 5 bits and the second
 

00:34:33.020 --> 00:34:35.590 align:start position:0%
here the first 5 bits and the second
five<00:34:33.139><c> bits</c><00:34:33.350><c> or</c><00:34:33.500><c> two</c><00:34:33.620><c> symbols</c><00:34:34.070><c> and</c><00:34:34.340><c> we</c><00:34:35.270><c> can</c><00:34:35.389><c> see</c>

00:34:35.590 --> 00:34:35.600 align:start position:0%
five bits or two symbols and we can see
 

00:34:35.600 --> 00:34:37.840 align:start position:0%
five bits or two symbols and we can see
that<00:34:35.780><c> it's</c><00:34:36.020><c> always</c><00:34:36.740><c> a</c><00:34:36.770><c> prefix</c><00:34:37.340><c> of</c><00:34:37.460><c> the</c><00:34:37.520><c> total</c>

00:34:37.840 --> 00:34:37.850 align:start position:0%
that it's always a prefix of the total
 

00:34:37.850 --> 00:34:39.399 align:start position:0%
that it's always a prefix of the total
hash<00:34:38.060><c> code</c><00:34:38.330><c> here</c><00:34:38.629><c> when</c><00:34:38.929><c> you're</c><00:34:39.050><c> comparing</c>

00:34:39.399 --> 00:34:39.409 align:start position:0%
hash code here when you're comparing
 

00:34:39.409 --> 00:34:44.070 align:start position:0%
hash code here when you're comparing
these<00:34:39.740><c> these</c><00:34:40.250><c> values</c>

00:34:44.070 --> 00:34:44.080 align:start position:0%
 
 

00:34:44.080 --> 00:34:47.669 align:start position:0%
 
so<00:34:44.679><c> we</c><00:34:44.800><c> can</c><00:34:44.980><c> do</c><00:34:45.130><c> something</c><00:34:45.400><c> more</c><00:34:45.670><c> complex</c><00:34:46.679><c> so</c>

00:34:47.669 --> 00:34:47.679 align:start position:0%
so we can do something more complex so
 

00:34:47.679 --> 00:34:51.180 align:start position:0%
so we can do something more complex so
let's<00:34:48.220><c> see</c><00:34:49.230><c> so</c><00:34:50.230><c> here's</c><00:34:50.440><c> his</c><00:34:50.770><c> system</c>

00:34:51.180 --> 00:34:51.190 align:start position:0%
let's see so here's his system
 

00:34:51.190 --> 00:34:54.480 align:start position:0%
let's see so here's his system
properties<00:34:52.050><c> so</c><00:34:53.050><c> system</c><00:34:53.410><c> properties</c><00:34:53.860><c> is</c><00:34:54.040><c> it</c>

00:34:54.480 --> 00:34:54.490 align:start position:0%
properties so system properties is it
 

00:34:54.490 --> 00:34:57.210 align:start position:0%
properties so system properties is it
essentially<00:34:55.000><c> it's</c><00:34:55.929><c> a</c><00:34:56.110><c> map</c><00:34:56.320><c> of</c><00:34:56.650><c> all</c><00:34:56.830><c> the</c><00:34:56.860><c> system</c>

00:34:57.210 --> 00:34:57.220 align:start position:0%
essentially it's a map of all the system
 

00:34:57.220 --> 00:34:59.760 align:start position:0%
essentially it's a map of all the system
properties<00:34:57.640><c> in</c><00:34:57.820><c> the</c><00:34:57.880><c> JDK</c><00:34:58.470><c> maybach</c><00:34:59.470><c> so</c><00:34:59.620><c> let's</c>

00:34:59.760 --> 00:34:59.770 align:start position:0%
properties in the JDK maybach so let's
 

00:34:59.770 --> 00:35:01.920 align:start position:0%
properties in the JDK maybach so let's
visualize<00:34:59.860><c> this</c><00:35:00.340><c> and</c><00:35:00.520><c> see</c><00:35:00.700><c> what</c><00:35:00.850><c> this</c><00:35:01.150><c> looks</c>

00:35:01.920 --> 00:35:01.930 align:start position:0%
visualize this and see what this looks
 

00:35:01.930 --> 00:35:05.270 align:start position:0%
visualize this and see what this looks
like<00:35:02.350><c> this</c><00:35:03.220><c> would</c><00:35:03.400><c> be</c><00:35:03.490><c> a</c><00:35:03.520><c> more</c><00:35:03.700><c> complex</c><00:35:04.090><c> one</c>

00:35:05.270 --> 00:35:05.280 align:start position:0%
like this would be a more complex one
 

00:35:05.280 --> 00:35:09.480 align:start position:0%
like this would be a more complex one
okay<00:35:06.280><c> so</c><00:35:07.260><c> you</c><00:35:08.260><c> get</c><00:35:08.410><c> an</c><00:35:08.500><c> idea</c><00:35:08.620><c> of</c><00:35:09.040><c> the</c><00:35:09.130><c> structure</c>

00:35:09.480 --> 00:35:09.490 align:start position:0%
okay so you get an idea of the structure
 

00:35:09.490 --> 00:35:12.150 align:start position:0%
okay so you get an idea of the structure
here<00:35:09.850><c> there's</c><00:35:10.030><c> more</c><00:35:10.180><c> sub</c><00:35:10.480><c> nodes</c><00:35:11.160><c> happening</c>

00:35:12.150 --> 00:35:12.160 align:start position:0%
here there's more sub nodes happening
 

00:35:12.160 --> 00:35:21.690 align:start position:0%
here there's more sub nodes happening
here<00:35:14.820><c> let's</c><00:35:17.790><c> scroll</c><00:35:18.790><c> all</c><00:35:19.090><c> the</c><00:35:19.120><c> way</c><00:35:19.270><c> down</c><00:35:20.700><c> yeah</c>

00:35:21.690 --> 00:35:21.700 align:start position:0%
here let's scroll all the way down yeah
 

00:35:21.700 --> 00:35:25.290 align:start position:0%
here let's scroll all the way down yeah
so<00:35:21.970><c> we</c><00:35:22.060><c> see</c><00:35:22.240><c> a</c><00:35:22.450><c> prefix</c><00:35:23.380><c> here</c><00:35:23.790><c> shared</c><00:35:24.790><c> prefix</c>

00:35:25.290 --> 00:35:25.300 align:start position:0%
so we see a prefix here shared prefix
 

00:35:25.300 --> 00:35:27.510 align:start position:0%
so we see a prefix here shared prefix
and<00:35:25.480><c> other</c><00:35:25.630><c> symbols</c><00:35:26.500><c> down</c><00:35:26.920><c> and</c><00:35:27.100><c> so</c><00:35:27.190><c> forth</c><00:35:27.220><c> but</c>

00:35:27.510 --> 00:35:27.520 align:start position:0%
and other symbols down and so forth but
 

00:35:27.520 --> 00:35:29.580 align:start position:0%
and other symbols down and so forth but
it<00:35:27.610><c> only</c><00:35:27.700><c> gets</c><00:35:27.880><c> down</c><00:35:28.180><c> to</c><00:35:28.360><c> about</c><00:35:28.570><c> the</c><00:35:29.110><c> depth</c><00:35:29.350><c> of</c>

00:35:29.580 --> 00:35:29.590 align:start position:0%
it only gets down to about the depth of
 

00:35:29.590 --> 00:35:32.820 align:start position:0%
it only gets down to about the depth of
two<00:35:29.830><c> maybe</c><00:35:30.520><c> three</c><00:35:31.000><c> at</c><00:35:31.300><c> the</c><00:35:31.450><c> end</c><00:35:31.600><c> here</c><00:35:31.930><c> so</c><00:35:32.170><c> it's</c>

00:35:32.820 --> 00:35:32.830 align:start position:0%
two maybe three at the end here so it's
 

00:35:32.830 --> 00:35:35.730 align:start position:0%
two maybe three at the end here so it's
still<00:35:33.010><c> quite</c><00:35:33.220><c> shallow</c><00:35:33.570><c> so</c><00:35:34.570><c> if</c><00:35:35.140><c> you're</c><00:35:35.620><c> going</c>

00:35:35.730 --> 00:35:35.740 align:start position:0%
still quite shallow so if you're going
 

00:35:35.740 --> 00:35:36.930 align:start position:0%
still quite shallow so if you're going
to<00:35:35.800><c> look</c><00:35:35.950><c> up</c><00:35:36.130><c> something</c><00:35:36.460><c> it's</c><00:35:36.760><c> going</c><00:35:36.850><c> to</c>

00:35:36.930 --> 00:35:36.940 align:start position:0%
to look up something it's going to
 

00:35:36.940 --> 00:35:38.430 align:start position:0%
to look up something it's going to
traverse<00:35:37.150><c> a</c><00:35:37.450><c> little</c><00:35:37.690><c> bit</c><00:35:37.870><c> but</c><00:35:38.050><c> it's</c><00:35:38.170><c> not</c><00:35:38.230><c> going</c>

00:35:38.430 --> 00:35:38.440 align:start position:0%
traverse a little bit but it's not going
 

00:35:38.440 --> 00:35:40.200 align:start position:0%
traverse a little bit but it's not going
to<00:35:38.500><c> traverse</c><00:35:38.620><c> too</c><00:35:38.980><c> deeply</c><00:35:39.430><c> and</c><00:35:39.790><c> that's</c><00:35:39.970><c> why</c>

00:35:40.200 --> 00:35:40.210 align:start position:0%
to traverse too deeply and that's why
 

00:35:40.210 --> 00:35:42.600 align:start position:0%
to traverse too deeply and that's why
it's<00:35:40.330><c> almost</c><00:35:40.600><c> constant</c><00:35:41.140><c> time</c><00:35:41.490><c> what</c><00:35:42.490><c> you're</c>

00:35:42.600 --> 00:35:42.610 align:start position:0%
it's almost constant time what you're
 

00:35:42.610 --> 00:35:43.830 align:start position:0%
it's almost constant time what you're
doing<00:35:42.820><c> so</c><00:35:43.000><c> there's</c><00:35:43.210><c> a</c><00:35:43.240><c> good</c><00:35:43.390><c> structural</c>

00:35:43.830 --> 00:35:43.840 align:start position:0%
doing so there's a good structural
 

00:35:43.840 --> 00:35:45.330 align:start position:0%
doing so there's a good structural
sharing<00:35:44.260><c> here</c><00:35:44.410><c> and</c><00:35:44.560><c> reasonable</c><00:35:44.950><c> efficiency</c>

00:35:45.330 --> 00:35:45.340 align:start position:0%
sharing here and reasonable efficiency
 

00:35:45.340 --> 00:35:49.050 align:start position:0%
sharing here and reasonable efficiency
in<00:35:45.730><c> terms</c><00:35:46.450><c> of</c><00:35:47.190><c> access</c><00:35:48.190><c> you're</c><00:35:48.670><c> probably</c><00:35:48.850><c> not</c>

00:35:49.050 --> 00:35:49.060 align:start position:0%
in terms of access you're probably not
 

00:35:49.060 --> 00:35:50.760 align:start position:0%
in terms of access you're probably not
going<00:35:49.180><c> to</c><00:35:49.240><c> be</c><00:35:49.360><c> a</c><00:35:49.390><c> well</c><00:35:49.690><c> sized</c><00:35:49.960><c> hashmap</c><00:35:50.500><c> here</c>

00:35:50.760 --> 00:35:50.770 align:start position:0%
going to be a well sized hashmap here
 

00:35:50.770 --> 00:35:53.790 align:start position:0%
going to be a well sized hashmap here
but<00:35:51.340><c> I'd</c><00:35:51.460><c> argue</c><00:35:51.670><c> that</c><00:35:52.350><c> potentially</c><00:35:53.350><c> hashmap</c>

00:35:53.790 --> 00:35:53.800 align:start position:0%
but I'd argue that potentially hashmap
 

00:35:53.800 --> 00:35:56.250 align:start position:0%
but I'd argue that potentially hashmap
will<00:35:53.950><c> take</c><00:35:54.130><c> up</c><00:35:54.310><c> more</c><00:35:54.490><c> memory</c><00:35:54.670><c> see</c><00:35:55.660><c> potentially</c>

00:35:56.250 --> 00:35:56.260 align:start position:0%
will take up more memory see potentially
 

00:35:56.260 --> 00:35:57.930 align:start position:0%
will take up more memory see potentially
trading<00:35:56.560><c> off</c><00:35:56.680><c> space</c><00:35:56.920><c> and</c><00:35:57.160><c> time</c><00:35:57.370><c> here</c><00:35:57.640><c> a</c><00:35:57.670><c> little</c>

00:35:57.930 --> 00:35:57.940 align:start position:0%
trading off space and time here a little
 

00:35:57.940 --> 00:35:59.850 align:start position:0%
trading off space and time here a little
bit<00:35:58.120><c> but</c><00:35:58.480><c> very</c><00:35:58.510><c> actually</c><00:35:58.750><c> good</c><00:35:59.050><c> compromise</c><00:35:59.470><c> I</c>

00:35:59.850 --> 00:35:59.860 align:start position:0%
bit but very actually good compromise I
 

00:35:59.860 --> 00:36:01.380 align:start position:0%
bit but very actually good compromise I
don't<00:36:00.160><c> think</c><00:36:00.370><c> if</c><00:36:00.490><c> you're</c><00:36:00.610><c> using</c><00:36:00.820><c> these</c><00:36:01.030><c> things</c>

00:36:01.380 --> 00:36:01.390 align:start position:0%
don't think if you're using these things
 

00:36:01.390 --> 00:36:03.570 align:start position:0%
don't think if you're using these things
most<00:36:02.200><c> people</c><00:36:02.290><c> won't</c><00:36:02.710><c> notice</c><00:36:02.920><c> or</c><00:36:03.250><c> won't</c><00:36:03.340><c> need</c>

00:36:03.570 --> 00:36:03.580 align:start position:0%
most people won't notice or won't need
 

00:36:03.580 --> 00:36:07.110 align:start position:0%
most people won't notice or won't need
the<00:36:03.970><c> extra</c><00:36:04.270><c> performance</c><00:36:04.920><c> that's</c><00:36:05.920><c> my</c><00:36:06.130><c> theory</c>

00:36:07.110 --> 00:36:07.120 align:start position:0%
the extra performance that's my theory
 

00:36:07.120 --> 00:36:08.460 align:start position:0%
the extra performance that's my theory
anyway<00:36:07.390><c> I</c><00:36:07.600><c> don't</c><00:36:07.720><c> know</c><00:36:07.900><c> if</c><00:36:08.050><c> it's</c><00:36:08.230><c> entirely</c>

00:36:08.460 --> 00:36:08.470 align:start position:0%
anyway I don't know if it's entirely
 

00:36:08.470 --> 00:36:10.470 align:start position:0%
anyway I don't know if it's entirely
true<00:36:08.740><c> would</c><00:36:08.920><c> have</c><00:36:09.070><c> to</c><00:36:09.190><c> verify</c><00:36:09.400><c> that</c><00:36:09.790><c> we'd</c><00:36:10.300><c> have</c>

00:36:10.470 --> 00:36:10.480 align:start position:0%
true would have to verify that we'd have
 

00:36:10.480 --> 00:36:12.240 align:start position:0%
true would have to verify that we'd have
to<00:36:10.510><c> do</c><00:36:10.690><c> good</c><00:36:11.140><c> performance</c><00:36:11.620><c> tests</c><00:36:12.010><c> on</c><00:36:12.130><c> these</c>

00:36:12.240 --> 00:36:12.250 align:start position:0%
to do good performance tests on these
 

00:36:12.250 --> 00:36:15.630 align:start position:0%
to do good performance tests on these
things<00:36:12.520><c> too</c><00:36:13.110><c> but</c><00:36:14.110><c> they</c><00:36:14.230><c> just</c><00:36:14.860><c> to</c><00:36:15.010><c> express</c><00:36:15.460><c> as</c>

00:36:15.630 --> 00:36:15.640 align:start position:0%
things too but they just to express as
 

00:36:15.640 --> 00:36:17.160 align:start position:0%
things too but they just to express as
showing<00:36:15.940><c> a</c><00:36:16.000><c> good</c><00:36:16.150><c> good</c><00:36:16.540><c> good</c><00:36:16.840><c> set</c><00:36:17.050><c> of</c>

00:36:17.160 --> 00:36:17.170 align:start position:0%
showing a good good good set of
 

00:36:17.170 --> 00:36:21.420 align:start position:0%
showing a good good good set of
properties<00:36:17.620><c> here</c><00:36:19.620><c> we</c><00:36:20.620><c> can</c><00:36:20.800><c> look</c><00:36:20.950><c> at</c><00:36:21.100><c> some</c><00:36:21.310><c> more</c>

00:36:21.420 --> 00:36:21.430 align:start position:0%
properties here we can look at some more
 

00:36:21.430 --> 00:36:23.460 align:start position:0%
properties here we can look at some more
degenerate<00:36:22.000><c> cases</c><00:36:22.240><c> here</c><00:36:22.720><c> so</c><00:36:22.960><c> what</c><00:36:23.110><c> happens</c><00:36:23.350><c> if</c>

00:36:23.460 --> 00:36:23.470 align:start position:0%
degenerate cases here so what happens if
 

00:36:23.470 --> 00:36:26.060 align:start position:0%
degenerate cases here so what happens if
you<00:36:23.560><c> have</c><00:36:23.680><c> a</c><00:36:23.740><c> collision</c><00:36:24.030><c> so</c><00:36:25.030><c> two</c><00:36:25.090><c> hash</c><00:36:25.450><c> codes</c>

00:36:26.060 --> 00:36:26.070 align:start position:0%
you have a collision so two hash codes
 

00:36:26.070 --> 00:36:29.340 align:start position:0%
you have a collision so two hash codes
to<00:36:27.070><c> two</c><00:36:27.430><c> entries</c><00:36:28.060><c> two</c><00:36:28.300><c> keys</c><00:36:28.540><c> share</c><00:36:29.020><c> the</c><00:36:29.170><c> same</c>

00:36:29.340 --> 00:36:29.350 align:start position:0%
to two entries two keys share the same
 

00:36:29.350 --> 00:36:33.570 align:start position:0%
to two entries two keys share the same
hash<00:36:29.590><c> code</c><00:36:29.860><c> what</c><00:36:30.100><c> do</c><00:36:30.190><c> you</c><00:36:30.250><c> do</c><00:36:30.400><c> then</c><00:36:32.280><c> so</c><00:36:33.280><c> I</c><00:36:33.310><c> have</c>

00:36:33.570 --> 00:36:33.580 align:start position:0%
hash code what do you do then so I have
 

00:36:33.580 --> 00:36:39.030 align:start position:0%
hash code what do you do then so I have
in<00:36:33.880><c> here</c><00:36:34.510><c> an</c><00:36:36.090><c> int</c><00:36:37.090><c> key</c><00:36:37.590><c> which</c><00:36:38.590><c> essentially</c>

00:36:39.030 --> 00:36:39.040 align:start position:0%
in here an int key which essentially
 

00:36:39.040 --> 00:36:40.830 align:start position:0%
in here an int key which essentially
sets<00:36:39.400><c> the</c><00:36:39.520><c> hash</c><00:36:39.700><c> code</c><00:36:40.000><c> of</c><00:36:40.180><c> these</c><00:36:40.300><c> two</c><00:36:40.570><c> things</c>

00:36:40.830 --> 00:36:40.840 align:start position:0%
sets the hash code of these two things
 

00:36:40.840 --> 00:36:43.140 align:start position:0%
sets the hash code of these two things
to<00:36:41.050><c> zero</c><00:36:41.320><c> so</c><00:36:41.560><c> I</c><00:36:41.620><c> have</c><00:36:41.800><c> an</c><00:36:41.920><c> entity</c><00:36:42.130><c> whose</c><00:36:42.790><c> key</c><00:36:43.030><c> is</c>

00:36:43.140 --> 00:36:43.150 align:start position:0%
to zero so I have an entity whose key is
 

00:36:43.150 --> 00:36:45.180 align:start position:0%
to zero so I have an entity whose key is
one<00:36:43.390><c> and</c><00:36:43.750><c> an</c><00:36:43.840><c> int</c><00:36:43.990><c> key</c><00:36:44.170><c> is</c><00:36:44.320><c> key</c><00:36:44.530><c> is</c><00:36:44.650><c> two</c><00:36:44.890><c> but</c>

00:36:45.180 --> 00:36:45.190 align:start position:0%
one and an int key is key is two but
 

00:36:45.190 --> 00:36:47.010 align:start position:0%
one and an int key is key is two but
their<00:36:45.340><c> hash</c><00:36:45.490><c> codes</c><00:36:45.730><c> are</c><00:36:45.880><c> the</c><00:36:45.970><c> same</c><00:36:46.240><c> I'm</c><00:36:46.630><c> just</c>

00:36:47.010 --> 00:36:47.020 align:start position:0%
their hash codes are the same I'm just
 

00:36:47.020 --> 00:36:54.520 align:start position:0%
their hash codes are the same I'm just
concocting<00:36:47.920><c> this</c><00:36:48.070><c> there</c><00:36:48.910><c> with</c><00:36:49.090><c> one</c><00:36:49.270><c> and</c><00:36:49.420><c> two</c>

00:36:54.520 --> 00:36:54.530 align:start position:0%
 
 

00:36:54.530 --> 00:36:58.760 align:start position:0%
 
so<00:36:55.530><c> in</c><00:36:55.890><c> this</c><00:36:56.010><c> case</c><00:36:56.250><c> we</c><00:36:56.460><c> have</c><00:36:56.610><c> a</c><00:36:56.640><c> collision</c><00:36:57.770><c> here</c>

00:36:58.760 --> 00:36:58.770 align:start position:0%
so in this case we have a collision here
 

00:36:58.770 --> 00:37:02.600 align:start position:0%
so in this case we have a collision here
signified<00:36:59.490><c> by</c><00:36:59.520><c> a</c><00:36:59.970><c> red</c><00:37:00.300><c> box</c><00:37:00.800><c> so</c><00:37:01.800><c> what</c><00:37:02.250><c> do</c><00:37:02.370><c> we</c><00:37:02.430><c> do</c>

00:37:02.600 --> 00:37:02.610 align:start position:0%
signified by a red box so what do we do
 

00:37:02.610 --> 00:37:03.800 align:start position:0%
signified by a red box so what do we do
when<00:37:02.760><c> we</c><00:37:02.850><c> have</c><00:37:02.880><c> a</c><00:37:03.030><c> collision</c><00:37:03.270><c> we</c><00:37:03.510><c> could</c><00:37:03.660><c> use</c><00:37:03.780><c> a</c>

00:37:03.800 --> 00:37:03.810 align:start position:0%
when we have a collision we could use a
 

00:37:03.810 --> 00:37:06.260 align:start position:0%
when we have a collision we could use a
linked<00:37:04.080><c> list</c><00:37:04.460><c> we</c><00:37:05.460><c> could</c><00:37:05.610><c> use</c><00:37:05.790><c> a</c><00:37:05.820><c> red</c><00:37:06.030><c> black</c>

00:37:06.260 --> 00:37:06.270 align:start position:0%
linked list we could use a red black
 

00:37:06.270 --> 00:37:09.020 align:start position:0%
linked list we could use a red black
tree<00:37:06.300><c> like</c><00:37:06.990><c> we</c><00:37:07.170><c> do</c><00:37:07.290><c> in</c><00:37:07.410><c> hashmap</c><00:37:07.800><c> today</c><00:37:08.160><c> or</c><00:37:08.610><c> we</c>

00:37:09.020 --> 00:37:09.030 align:start position:0%
tree like we do in hashmap today or we
 

00:37:09.030 --> 00:37:11.060 align:start position:0%
tree like we do in hashmap today or we
could<00:37:09.210><c> change</c><00:37:09.240><c> for</c><00:37:09.750><c> the</c><00:37:10.080><c> hash</c><00:37:10.290><c> algorithm</c><00:37:10.950><c> and</c>

00:37:11.060 --> 00:37:11.070 align:start position:0%
could change for the hash algorithm and
 

00:37:11.070 --> 00:37:12.860 align:start position:0%
could change for the hash algorithm and
go<00:37:11.190><c> and</c><00:37:11.430><c> use</c><00:37:11.580><c> the</c><00:37:11.730><c> same</c><00:37:11.940><c> ham</c><00:37:12.180><c> T</c><00:37:12.330><c> structure</c><00:37:12.750><c> with</c>

00:37:12.860 --> 00:37:12.870 align:start position:0%
go and use the same ham T structure with
 

00:37:12.870 --> 00:37:14.990 align:start position:0%
go and use the same ham T structure with
a<00:37:12.930><c> different</c><00:37:13.230><c> hash</c><00:37:13.410><c> code</c><00:37:13.680><c> algorithm</c><00:37:14.490><c> to</c><00:37:14.670><c> and</c>

00:37:14.990 --> 00:37:15.000 align:start position:0%
a different hash code algorithm to and
 

00:37:15.000 --> 00:37:16.520 align:start position:0%
a different hash code algorithm to and
go<00:37:15.150><c> down</c><00:37:15.360><c> as</c><00:37:15.570><c> lots</c><00:37:15.810><c> of</c><00:37:15.900><c> options</c><00:37:16.260><c> we</c><00:37:16.410><c> can</c>

00:37:16.520 --> 00:37:16.530 align:start position:0%
go down as lots of options we can
 

00:37:16.530 --> 00:37:23.690 align:start position:0%
go down as lots of options we can
experiment<00:37:16.950><c> with</c><00:37:21.920><c> so</c><00:37:22.920><c> let's</c><00:37:23.190><c> look</c><00:37:23.460><c> at</c><00:37:23.610><c> another</c>

00:37:23.690 --> 00:37:23.700 align:start position:0%
experiment with so let's look at another
 

00:37:23.700 --> 00:37:25.490 align:start position:0%
experiment with so let's look at another
let's<00:37:24.060><c> look</c><00:37:24.180><c> at</c><00:37:24.270><c> a</c><00:37:24.300><c> generate</c><00:37:24.990><c> case</c><00:37:25.200><c> of</c><00:37:25.410><c> how</c>

00:37:25.490 --> 00:37:25.500 align:start position:0%
let's look at a generate case of how
 

00:37:25.500 --> 00:37:28.640 align:start position:0%
let's look at a generate case of how
deep<00:37:25.770><c> we</c><00:37:26.010><c> can</c><00:37:26.130><c> go</c><00:37:26.280><c> down</c><00:37:26.490><c> in</c><00:37:26.670><c> the</c><00:37:26.760><c> tree</c><00:37:27.500><c> so</c><00:37:28.500><c> what</c>

00:37:28.640 --> 00:37:28.650 align:start position:0%
deep we can go down in the tree so what
 

00:37:28.650 --> 00:37:32.290 align:start position:0%
deep we can go down in the tree so what
I'm<00:37:28.770><c> doing</c><00:37:28.800><c> here</c><00:37:29.100><c> is</c><00:37:29.370><c> I'm</c><00:37:29.760><c> concocting</c>

00:37:32.290 --> 00:37:32.300 align:start position:0%
I'm doing here is I'm concocting
 

00:37:32.300 --> 00:37:35.270 align:start position:0%
I'm doing here is I'm concocting
integers<00:37:33.300><c> that</c><00:37:33.630><c> just</c><00:37:33.870><c> so</c><00:37:33.990><c> happen</c><00:37:34.440><c> but</c><00:37:35.100><c> I</c><00:37:35.130><c> know</c>

00:37:35.270 --> 00:37:35.280 align:start position:0%
integers that just so happen but I know
 

00:37:35.280 --> 00:37:37.910 align:start position:0%
integers that just so happen but I know
the<00:37:35.370><c> hash</c><00:37:35.550><c> code</c><00:37:35.760><c> algorithm</c><00:37:36.240><c> internally</c><00:37:36.920><c> to</c>

00:37:37.910 --> 00:37:37.920 align:start position:0%
the hash code algorithm internally to
 

00:37:37.920 --> 00:37:39.620 align:start position:0%
the hash code algorithm internally to
create<00:37:38.190><c> the</c><00:37:38.310><c> Hat</c><00:37:38.460><c> to</c><00:37:38.730><c> create</c><00:37:38.940><c> the</c><00:37:39.030><c> actual</c><00:37:39.390><c> hash</c>

00:37:39.620 --> 00:37:39.630 align:start position:0%
create the Hat to create the actual hash
 

00:37:39.630 --> 00:37:42.050 align:start position:0%
create the Hat to create the actual hash
code<00:37:39.870><c> values</c><00:37:40.230><c> I'm</c><00:37:40.410><c> using</c><00:37:40.650><c> in</c><00:37:40.860><c> my</c><00:37:40.890><c> map</c><00:37:41.220><c> so</c><00:37:41.970><c> I'm</c>

00:37:42.050 --> 00:37:42.060 align:start position:0%
code values I'm using in my map so I'm
 

00:37:42.060 --> 00:37:45.740 align:start position:0%
code values I'm using in my map so I'm
creating<00:37:42.500><c> I</c><00:37:43.760><c> want</c><00:37:44.760><c> to</c><00:37:44.820><c> set</c><00:37:45.000><c> the</c><00:37:45.120><c> two</c><00:37:45.240><c> top</c><00:37:45.480><c> level</c>

00:37:45.740 --> 00:37:45.750 align:start position:0%
creating I want to set the two top level
 

00:37:45.750 --> 00:37:46.220 align:start position:0%
creating I want to set the two top level
bits

00:37:46.220 --> 00:37:46.230 align:start position:0%
bits
 

00:37:46.230 --> 00:37:48.830 align:start position:0%
bits
remember<00:37:46.890><c> it's</c><00:37:47.070><c> fight</c><00:37:47.310><c> it's</c><00:37:47.610><c> six</c><00:37:48.450><c> symbols</c>

00:37:48.830 --> 00:37:48.840 align:start position:0%
remember it's fight it's six symbols
 

00:37:48.840 --> 00:37:51.890 align:start position:0%
remember it's fight it's six symbols
with<00:37:48.990><c> the</c><00:37:49.080><c> two</c><00:37:49.260><c> two</c><00:37:50.190><c> top-level</c><00:37:50.610><c> bits</c><00:37:50.910><c> most</c>

00:37:51.890 --> 00:37:51.900 align:start position:0%
with the two two top-level bits most
 

00:37:51.900 --> 00:37:55.190 align:start position:0%
with the two two top-level bits most
significant<00:37:52.470><c> bits</c><00:37:52.680><c> only</c><00:37:53.070><c> at</c><00:37:53.340><c> the</c><00:37:53.460><c> end</c><00:37:54.200><c> setting</c>

00:37:55.190 --> 00:37:55.200 align:start position:0%
significant bits only at the end setting
 

00:37:55.200 --> 00:37:56.540 align:start position:0%
significant bits only at the end setting
their<00:37:55.320><c> values</c><00:37:55.650><c> I'm</c><00:37:55.860><c> also</c><00:37:56.010><c> setting</c><00:37:56.340><c> their</c>

00:37:56.540 --> 00:37:56.550 align:start position:0%
their values I'm also setting their
 

00:37:56.550 --> 00:38:00.170 align:start position:0%
their values I'm also setting their
values<00:37:56.880><c> here</c><00:37:57.420><c> because</c><00:37:58.110><c> the</c><00:37:58.410><c> hash</c><00:37:58.590><c> code</c><00:37:58.920><c> is</c><00:37:59.190><c> is</c>

00:38:00.170 --> 00:38:00.180 align:start position:0%
values here because the hash code is is
 

00:38:00.180 --> 00:38:02.900 align:start position:0%
values here because the hash code is is
slightly<00:38:01.140><c> shifted</c><00:38:01.470><c> a</c><00:38:01.800><c> bit</c><00:38:01.830><c> so</c><00:38:02.130><c> I'm</c><00:38:02.220><c> but</c><00:38:02.730><c> way</c>

00:38:02.900 --> 00:38:02.910 align:start position:0%
slightly shifted a bit so I'm but way
 

00:38:02.910 --> 00:38:04.370 align:start position:0%
slightly shifted a bit so I'm but way
I'd<00:38:03.060><c> calculate</c><00:38:03.570><c> the</c><00:38:03.660><c> hash</c><00:38:03.810><c> code</c><00:38:04.080><c> is</c><00:38:04.200><c> the</c><00:38:04.290><c> way</c>

00:38:04.370 --> 00:38:04.380 align:start position:0%
I'd calculate the hash code is the way
 

00:38:04.380 --> 00:38:06.650 align:start position:0%
I'd calculate the hash code is the way
you<00:38:04.440><c> do</c><00:38:04.590><c> it</c><00:38:04.680><c> in</c><00:38:04.800><c> hash</c><00:38:04.980><c> map</c><00:38:05.250><c> you</c><00:38:05.700><c> shift</c><00:38:06.060><c> the</c><00:38:06.480><c> hash</c>

00:38:06.650 --> 00:38:06.660 align:start position:0%
you do it in hash map you shift the hash
 

00:38:06.660 --> 00:38:09.140 align:start position:0%
you do it in hash map you shift the hash
code<00:38:06.870><c> by</c><00:38:07.050><c> sixty</c><00:38:07.500><c> and</c><00:38:07.680><c> XOR</c><00:38:08.010><c> it</c><00:38:08.160><c> with</c><00:38:08.280><c> itself</c><00:38:08.640><c> so</c>

00:38:09.140 --> 00:38:09.150 align:start position:0%
code by sixty and XOR it with itself so
 

00:38:09.150 --> 00:38:11.420 align:start position:0%
code by sixty and XOR it with itself so
I<00:38:09.180><c> want</c><00:38:09.390><c> to</c><00:38:09.450><c> I</c><00:38:09.690><c> want</c><00:38:09.870><c> to</c><00:38:09.960><c> cancel</c><00:38:10.140><c> out</c><00:38:10.500><c> the</c><00:38:10.800><c> ones</c>

00:38:11.420 --> 00:38:11.430 align:start position:0%
I want to I want to cancel out the ones
 

00:38:11.430 --> 00:38:13.250 align:start position:0%
I want to I want to cancel out the ones
and<00:38:11.700><c> just</c><00:38:11.820><c> have</c><00:38:12.060><c> the</c><00:38:12.180><c> hash</c><00:38:12.330><c> code</c><00:38:12.570><c> to</c><00:38:12.930><c> the</c><00:38:13.050><c> top</c>

00:38:13.250 --> 00:38:13.260 align:start position:0%
and just have the hash code to the top
 

00:38:13.260 --> 00:38:16.910 align:start position:0%
and just have the hash code to the top
top<00:38:14.130><c> two</c><00:38:14.370><c> significant</c><00:38:14.910><c> bits</c><00:38:15.150><c> here</c><00:38:15.800><c> just</c><00:38:16.800><c> to</c>

00:38:16.910 --> 00:38:16.920 align:start position:0%
top two significant bits here just to
 

00:38:16.920 --> 00:38:22.220 align:start position:0%
top two significant bits here just to
show<00:38:16.950><c> the</c><00:38:17.250><c> degenerate</c><00:38:17.790><c> case</c><00:38:19.790><c> and</c><00:38:21.080><c> so</c><00:38:22.080><c> what</c>

00:38:22.220 --> 00:38:22.230 align:start position:0%
show the degenerate case and so what
 

00:38:22.230 --> 00:38:26.060 align:start position:0%
show the degenerate case and so what
happens<00:38:22.620><c> here</c><00:38:22.680><c> we</c><00:38:22.950><c> get</c><00:38:23.330><c> one</c><00:38:24.330><c> two</c><00:38:24.930><c> three</c><00:38:25.500><c> four</c>

00:38:26.060 --> 00:38:26.070 align:start position:0%
happens here we get one two three four
 

00:38:26.070 --> 00:38:28.910 align:start position:0%
happens here we get one two three four
fire<00:38:26.670><c> depth</c><00:38:27.090><c> of</c><00:38:27.270><c> six</c><00:38:27.570><c> when</c><00:38:28.320><c> we</c><00:38:28.350><c> get</c><00:38:28.590><c> our</c><00:38:28.680><c> four</c>

00:38:28.910 --> 00:38:28.920 align:start position:0%
fire depth of six when we get our four
 

00:38:28.920 --> 00:38:30.380 align:start position:0%
fire depth of six when we get our four
values<00:38:29.130><c> right</c><00:38:29.520><c> down</c><00:38:29.730><c> at</c><00:38:29.850><c> the</c><00:38:29.880><c> bottom</c><00:38:30.180><c> so</c><00:38:30.330><c> if</c>

00:38:30.380 --> 00:38:30.390 align:start position:0%
values right down at the bottom so if
 

00:38:30.390 --> 00:38:31.700 align:start position:0%
values right down at the bottom so if
you're<00:38:30.510><c> traversing</c><00:38:30.720><c> this</c><00:38:31.230><c> structure</c><00:38:31.650><c> you</c>

00:38:31.700 --> 00:38:31.710 align:start position:0%
you're traversing this structure you
 

00:38:31.710 --> 00:38:33.860 align:start position:0%
you're traversing this structure you
have<00:38:31.830><c> to</c><00:38:31.920><c> go</c><00:38:32.040><c> down</c><00:38:32.250><c> sit</c><00:38:32.610><c> all</c><00:38:32.970><c> the</c><00:38:33.210><c> way</c><00:38:33.330><c> down</c><00:38:33.570><c> all</c>

00:38:33.860 --> 00:38:33.870 align:start position:0%
have to go down sit all the way down all
 

00:38:33.870 --> 00:38:36.260 align:start position:0%
have to go down sit all the way down all
the<00:38:33.900><c> way</c><00:38:34.020><c> down</c><00:38:34.350><c> not</c><00:38:35.100><c> very</c><00:38:35.220><c> cache</c><00:38:35.550><c> coherent</c><00:38:36.150><c> not</c>

00:38:36.260 --> 00:38:36.270 align:start position:0%
the way down not very cache coherent not
 

00:38:36.270 --> 00:38:38.210 align:start position:0%
the way down not very cache coherent not
particularly<00:38:36.630><c> very</c><00:38:36.900><c> efficient</c><00:38:37.410><c> inefficient</c>

00:38:38.210 --> 00:38:38.220 align:start position:0%
particularly very efficient inefficient
 

00:38:38.220 --> 00:38:40.760 align:start position:0%
particularly very efficient inefficient
but<00:38:39.060><c> you're</c><00:38:39.240><c> bounded</c><00:38:39.720><c> but</c><00:38:39.810><c> a</c><00:38:39.870><c> level</c><00:38:40.200><c> of</c><00:38:40.320><c> 60</c>

00:38:40.760 --> 00:38:40.770 align:start position:0%
but you're bounded but a level of 60
 

00:38:40.770 --> 00:38:41.900 align:start position:0%
but you're bounded but a level of 60
you're<00:38:41.010><c> not</c><00:38:41.130><c> going</c><00:38:41.250><c> to</c><00:38:41.310><c> go</c><00:38:41.430><c> further</c><00:38:41.640><c> and</c>

00:38:41.900 --> 00:38:41.910 align:start position:0%
you're not going to go further and
 

00:38:41.910 --> 00:38:43.850 align:start position:0%
you're not going to go further and
further<00:38:42.090><c> so</c><00:38:43.050><c> if</c><00:38:43.110><c> you're</c><00:38:43.230><c> writing</c><00:38:43.410><c> if</c><00:38:43.710><c> you're</c>

00:38:43.850 --> 00:38:43.860 align:start position:0%
further so if you're writing if you're
 

00:38:43.860 --> 00:38:45.950 align:start position:0%
further so if you're writing if you're
adding<00:38:44.070><c> algorithms</c><00:38:44.610><c> for</c><00:38:44.850><c> this</c><00:38:45.000><c> and</c><00:38:45.360><c> you</c><00:38:45.480><c> don't</c>

00:38:45.950 --> 00:38:45.960 align:start position:0%
adding algorithms for this and you don't
 

00:38:45.960 --> 00:38:47.900 align:start position:0%
adding algorithms for this and you don't
want<00:38:46.110><c> to</c><00:38:46.170><c> use</c><00:38:46.350><c> recursion</c><00:38:46.560><c> you</c><00:38:46.920><c> can</c><00:38:47.160><c> allocate</c><00:38:47.340><c> a</c>

00:38:47.900 --> 00:38:47.910 align:start position:0%
want to use recursion you can allocate a
 

00:38:47.910 --> 00:38:50.870 align:start position:0%
want to use recursion you can allocate a
stack<00:38:48.840><c> on</c><00:38:48.870><c> the</c><00:38:49.110><c> heap</c><00:38:49.320><c> of</c><00:38:49.530><c> just</c><00:38:49.800><c> six</c><00:38:50.040><c> it's</c><00:38:50.700><c> very</c>

00:38:50.870 --> 00:38:50.880 align:start position:0%
stack on the heap of just six it's very
 

00:38:50.880 --> 00:38:54.200 align:start position:0%
stack on the heap of just six it's very
very<00:38:51.480><c> nice</c><00:38:51.600><c> property</c><00:38:52.290><c> that</c><00:38:52.470><c> I</c><00:38:52.940><c> mean</c><00:38:53.940><c> we</c><00:38:54.060><c> see</c>

00:38:54.200 --> 00:38:54.210 align:start position:0%
very nice property that I mean we see
 

00:38:54.210 --> 00:38:55.550 align:start position:0%
very nice property that I mean we see
the<00:38:54.330><c> values</c><00:38:54.630><c> in</c><00:38:54.810><c> there</c><00:38:54.960><c> so</c><00:38:55.080><c> that's</c><00:38:55.260><c> the</c><00:38:55.350><c> worst</c>

00:38:55.550 --> 00:38:55.560 align:start position:0%
the values in there so that's the worst
 

00:38:55.560 --> 00:38:57.290 align:start position:0%
the values in there so that's the worst
case<00:38:55.830><c> you</c><00:38:56.100><c> can</c><00:38:56.130><c> possibly</c><00:38:56.580><c> get</c><00:38:56.820><c> which</c><00:38:57.090><c> I'd</c>

00:38:57.290 --> 00:38:57.300 align:start position:0%
case you can possibly get which I'd
 

00:38:57.300 --> 00:39:02.410 align:start position:0%
case you can possibly get which I'd
argue<00:38:57.570><c> is</c><00:38:57.870><c> is</c><00:38:58.050><c> not</c><00:38:58.320><c> going</c><00:38:58.530><c> to</c><00:38:58.620><c> be</c><00:38:58.710><c> very</c><00:38:58.890><c> common</c>

00:39:02.410 --> 00:39:02.420 align:start position:0%
 
 

00:39:02.420 --> 00:39:05.060 align:start position:0%
 
ok<00:39:03.420><c> I</c><00:39:03.450><c> think</c><00:39:03.570><c> that's</c><00:39:03.839><c> it</c><00:39:04.170><c> if</c><00:39:04.589><c> you</c><00:39:04.829><c> want</c><00:39:05.040><c> to</c>

00:39:05.060 --> 00:39:05.070 align:start position:0%
ok I think that's it if you want to
 

00:39:05.070 --> 00:39:06.680 align:start position:0%
ok I think that's it if you want to
check<00:39:05.430><c> out</c><00:39:05.579><c> the</c><00:39:05.730><c> code</c><00:39:05.940><c> and</c><00:39:06.119><c> have</c><00:39:06.270><c> some</c><00:39:06.510><c> fun</c>

00:39:06.680 --> 00:39:06.690 align:start position:0%
check out the code and have some fun
 

00:39:06.690 --> 00:39:08.359 align:start position:0%
check out the code and have some fun
with<00:39:06.900><c> this</c><00:39:07.020><c> or</c><00:39:07.290><c> send</c><00:39:07.530><c> me</c><00:39:07.619><c> fixes</c><00:39:08.010><c> and</c><00:39:08.160><c> that</c><00:39:08.250><c> I'd</c>

00:39:08.359 --> 00:39:08.369 align:start position:0%
with this or send me fixes and that I'd
 

00:39:08.369 --> 00:39:13.160 align:start position:0%
with this or send me fixes and that I'd
be<00:39:08.400><c> very</c><00:39:08.520><c> interested</c><00:39:08.730><c> on</c><00:39:09.589><c> on</c><00:39:10.589><c> that</c><00:39:10.890><c> stuff</c><00:39:12.170><c> okay</c>

00:39:13.160 --> 00:39:13.170 align:start position:0%
be very interested on on that stuff okay
 

00:39:13.170 --> 00:39:19.220 align:start position:0%
be very interested on on that stuff okay
so<00:39:16.160><c> to</c><00:39:17.160><c> summarize</c><00:39:17.609><c> so</c><00:39:18.210><c> I</c><00:39:18.240><c> think</c><00:39:18.450><c> unmodifiable</c>

00:39:19.220 --> 00:39:19.230 align:start position:0%
so to summarize so I think unmodifiable
 

00:39:19.230 --> 00:39:21.380 align:start position:0%
so to summarize so I think unmodifiable
is<00:39:19.500><c> a</c><00:39:19.530><c> reasonable</c><00:39:20.040><c> abstraction</c><00:39:20.609><c> for</c><00:39:20.880><c> mutable</c>

00:39:21.380 --> 00:39:21.390 align:start position:0%
is a reasonable abstraction for mutable
 

00:39:21.390 --> 00:39:23.660 align:start position:0%
is a reasonable abstraction for mutable
but<00:39:21.690><c> not</c><00:39:22.079><c> immutable</c><00:39:22.710><c> I</c><00:39:22.740><c> hope</c><00:39:22.920><c> I</c><00:39:23.099><c> persuaded</c><00:39:23.520><c> you</c>

00:39:23.660 --> 00:39:23.670 align:start position:0%
but not immutable I hope I persuaded you
 

00:39:23.670 --> 00:39:27.380 align:start position:0%
but not immutable I hope I persuaded you
that<00:39:24.680><c> for</c><00:39:25.680><c> efficient</c><00:39:26.130><c> immutable</c><00:39:26.880><c> collections</c>

00:39:27.380 --> 00:39:27.390 align:start position:0%
that for efficient immutable collections
 

00:39:27.390 --> 00:39:29.690 align:start position:0%
that for efficient immutable collections
we<00:39:28.109><c> need</c><00:39:28.290><c> persistent</c><00:39:29.010><c> collections</c><00:39:29.430><c> without</c>

00:39:29.690 --> 00:39:29.700 align:start position:0%
we need persistent collections without
 

00:39:29.700 --> 00:39:32.000 align:start position:0%
we need persistent collections without
sort<00:39:30.030><c> of</c><00:39:30.089><c> arguing</c><00:39:30.510><c> guava</c><00:39:31.440><c> gets</c><00:39:31.619><c> you</c><00:39:31.770><c> so</c><00:39:31.980><c> far</c>

00:39:32.000 --> 00:39:32.010 align:start position:0%
sort of arguing guava gets you so far
 

00:39:32.010 --> 00:39:34.609 align:start position:0%
sort of arguing guava gets you so far
it's<00:39:32.820><c> reasonable</c><00:39:33.480><c> but</c><00:39:33.960><c> I</c><00:39:33.990><c> think</c><00:39:34.230><c> we</c><00:39:34.349><c> could</c><00:39:34.500><c> do</c>

00:39:34.609 --> 00:39:34.619 align:start position:0%
it's reasonable but I think we could do
 

00:39:34.619 --> 00:39:36.410 align:start position:0%
it's reasonable but I think we could do
better<00:39:34.650><c> and</c><00:39:35.070><c> other</c><00:39:35.640><c> languages</c><00:39:36.180><c> and</c><00:39:36.300><c> platforms</c>

00:39:36.410 --> 00:39:36.420 align:start position:0%
better and other languages and platforms
 

00:39:36.420 --> 00:39:39.650 align:start position:0%
better and other languages and platforms
actually<00:39:37.260><c> do</c><00:39:37.410><c> do</c><00:39:37.530><c> better</c><00:39:38.119><c> and</c><00:39:39.119><c> sets</c><00:39:39.450><c> maps</c>

00:39:39.650 --> 00:39:39.660 align:start position:0%
actually do do better and sets maps
 

00:39:39.660 --> 00:39:42.050 align:start position:0%
actually do do better and sets maps
vectors<00:39:40.140><c> using</c><00:39:40.710><c> ham</c><00:39:41.040><c> teas</c><00:39:41.310><c> have</c><00:39:41.550><c> been</c><00:39:41.700><c> proven</c>

00:39:42.050 --> 00:39:42.060 align:start position:0%
vectors using ham teas have been proven
 

00:39:42.060 --> 00:39:43.790 align:start position:0%
vectors using ham teas have been proven
to<00:39:42.180><c> be</c><00:39:42.240><c> effective</c><00:39:42.300><c> in</c><00:39:42.839><c> these</c><00:39:43.050><c> libraries</c><00:39:43.619><c> and</c>

00:39:43.790 --> 00:39:43.800 align:start position:0%
to be effective in these libraries and
 

00:39:43.800 --> 00:39:45.920 align:start position:0%
to be effective in these libraries and
platforms<00:39:44.339><c> I</c><00:39:44.520><c> think</c><00:39:44.820><c> so</c><00:39:45.480><c> they've</c><00:39:45.630><c> proven</c>

00:39:45.920 --> 00:39:45.930 align:start position:0%
platforms I think so they've proven
 

00:39:45.930 --> 00:39:51.800 align:start position:0%
platforms I think so they've proven
their<00:39:46.109><c> worth</c><00:39:48.560><c> so</c><00:39:49.560><c> what</c><00:39:49.829><c> about</c><00:39:49.920><c> Java</c><00:39:50.690><c> this</c><00:39:51.690><c> is</c>

00:39:51.800 --> 00:39:51.810 align:start position:0%
their worth so what about Java this is
 

00:39:51.810 --> 00:39:53.329 align:start position:0%
their worth so what about Java this is
where<00:39:51.960><c> it</c><00:39:52.020><c> comes</c><00:39:52.230><c> a</c><00:39:52.349><c> bit</c><00:39:52.500><c> speculative</c><00:39:53.040><c> and</c>

00:39:53.329 --> 00:39:53.339 align:start position:0%
where it comes a bit speculative and
 

00:39:53.339 --> 00:39:55.880 align:start position:0%
where it comes a bit speculative and
more<00:39:53.490><c> my</c><00:39:53.640><c> opinion</c><00:39:54.060><c> I</c><00:39:55.020><c> think</c><00:39:55.349><c> we'll</c><00:39:55.710><c> definitely</c>

00:39:55.880 --> 00:39:55.890 align:start position:0%
more my opinion I think we'll definitely
 

00:39:55.890 --> 00:39:58.130 align:start position:0%
more my opinion I think we'll definitely
continuing<00:39:56.460><c> to</c><00:39:56.640><c> prove</c><00:39:56.910><c> on</c><00:39:57.210><c> unmodifiable</c><00:39:57.869><c> in</c>

00:39:58.130 --> 00:39:58.140 align:start position:0%
continuing to prove on unmodifiable in
 

00:39:58.140 --> 00:39:59.990 align:start position:0%
continuing to prove on unmodifiable in
the<00:39:58.230><c> JDK</c><00:39:58.650><c> and</c><00:39:58.680><c> Stewart</c><00:39:59.160><c> marks</c><00:39:59.460><c> is</c><00:39:59.579><c> already</c>

00:39:59.990 --> 00:40:00.000 align:start position:0%
the JDK and Stewart marks is already
 

00:40:00.000 --> 00:40:01.609 align:start position:0%
the JDK and Stewart marks is already
working<00:40:00.390><c> on</c><00:40:00.480><c> some</c><00:40:00.750><c> stuff</c><00:40:01.109><c> like</c><00:40:01.290><c> this</c><00:40:01.440><c> he's</c>

00:40:01.609 --> 00:40:01.619 align:start position:0%
working on some stuff like this he's
 

00:40:01.619 --> 00:40:03.920 align:start position:0%
working on some stuff like this he's
already<00:40:01.770><c> got</c><00:40:01.950><c> one</c><00:40:02.130><c> thing</c><00:40:02.310><c> in</c><00:40:02.369><c> review</c><00:40:02.849><c> on</c><00:40:03.180><c> core</c>

00:40:03.920 --> 00:40:03.930 align:start position:0%
already got one thing in review on core
 

00:40:03.930 --> 00:40:05.960 align:start position:0%
already got one thing in review on core
libs<00:40:04.200><c> dev</c><00:40:04.530><c> and</c><00:40:04.770><c> open</c><00:40:05.010><c> JDK</c><00:40:05.190><c> and</c><00:40:05.490><c> there's</c><00:40:05.849><c> some</c>

00:40:05.960 --> 00:40:05.970 align:start position:0%
libs dev and open JDK and there's some
 

00:40:05.970 --> 00:40:07.550 align:start position:0%
libs dev and open JDK and there's some
other<00:40:06.119><c> stuff</c><00:40:06.359><c> in</c><00:40:06.450><c> the</c><00:40:06.599><c> pipe</c><00:40:06.810><c> to</c><00:40:07.230><c> make</c><00:40:07.349><c> some</c>

00:40:07.550 --> 00:40:07.560 align:start position:0%
other stuff in the pipe to make some
 

00:40:07.560 --> 00:40:10.790 align:start position:0%
other stuff in the pipe to make some
good<00:40:07.710><c> improvements</c><00:40:07.800><c> here</c><00:40:09.380><c> but</c><00:40:10.380><c> what</c><00:40:10.560><c> about</c>

00:40:10.790 --> 00:40:10.800 align:start position:0%
good improvements here but what about
 

00:40:10.800 --> 00:40:14.480 align:start position:0%
good improvements here but what about
say<00:40:11.280><c> selective</c><00:40:12.210><c> sedimentation</c><00:40:13.020><c> I</c><00:40:13.710><c> love</c><00:40:14.280><c> that</c>

00:40:14.480 --> 00:40:14.490 align:start position:0%
say selective sedimentation I love that
 

00:40:14.490 --> 00:40:17.630 align:start position:0%
say selective sedimentation I love that
word<00:40:14.700><c> that's</c><00:40:15.240><c> a</c><00:40:15.540><c> mark</c><00:40:15.869><c> Reinhold</c><00:40:16.410><c> word</c><00:40:16.680><c> but</c><00:40:17.550><c> he</c>

00:40:17.630 --> 00:40:17.640 align:start position:0%
word that's a mark Reinhold word but he
 

00:40:17.640 --> 00:40:20.359 align:start position:0%
word that's a mark Reinhold word but he
uses<00:40:18.089><c> that</c><00:40:18.270><c> we</c><00:40:18.450><c> have</c><00:40:18.660><c> the</c><00:40:18.900><c> luxury</c><00:40:19.410><c> to</c><00:40:20.130><c> look</c>

00:40:20.359 --> 00:40:20.369 align:start position:0%
uses that we have the luxury to look
 

00:40:20.369 --> 00:40:22.430 align:start position:0%
uses that we have the luxury to look
outside<00:40:20.579><c> there</c><00:40:21.359><c> other</c><00:40:21.720><c> languages</c><00:40:22.290><c> and</c>

00:40:22.430 --> 00:40:22.440 align:start position:0%
outside there other languages and
 

00:40:22.440 --> 00:40:24.260 align:start position:0%
outside there other languages and
platforms<00:40:22.589><c> and</c><00:40:23.250><c> see</c><00:40:23.430><c> what</c><00:40:23.609><c> they're</c><00:40:23.760><c> doing</c>

00:40:24.260 --> 00:40:24.270 align:start position:0%
platforms and see what they're doing
 

00:40:24.270 --> 00:40:26.900 align:start position:0%
platforms and see what they're doing
stand<00:40:25.109><c> back</c><00:40:25.349><c> ponder</c><00:40:25.950><c> them</c><00:40:26.130><c> and</c><00:40:26.400><c> take</c><00:40:26.579><c> the</c><00:40:26.730><c> best</c>

00:40:26.900 --> 00:40:26.910 align:start position:0%
stand back ponder them and take the best
 

00:40:26.910 --> 00:40:30.559 align:start position:0%
stand back ponder them and take the best
bits<00:40:27.180><c> from</c><00:40:27.450><c> each</c><00:40:28.940><c> could</c><00:40:29.940><c> we</c><00:40:30.060><c> do</c><00:40:30.210><c> that</c><00:40:30.390><c> with</c>

00:40:30.559 --> 00:40:30.569 align:start position:0%
bits from each could we do that with
 

00:40:30.569 --> 00:40:32.059 align:start position:0%
bits from each could we do that with
persistent<00:40:31.109><c> collections</c><00:40:31.560><c> in</c><00:40:31.740><c> the</c><00:40:31.829><c> Java</c>

00:40:32.059 --> 00:40:32.069 align:start position:0%
persistent collections in the Java
 

00:40:32.069 --> 00:40:32.690 align:start position:0%
persistent collections in the Java
platform

00:40:32.690 --> 00:40:32.700 align:start position:0%
platform
 

00:40:32.700 --> 00:40:35.690 align:start position:0%
platform
perhaps<00:40:33.240><c> we</c><00:40:33.390><c> could</c><00:40:33.599><c> a</c><00:40:33.930><c> claim</c><00:40:34.710><c> I</c><00:40:35.010><c> say</c><00:40:35.579><c> it's</c>

00:40:35.690 --> 00:40:35.700 align:start position:0%
perhaps we could a claim I say it's
 

00:40:35.700 --> 00:40:37.460 align:start position:0%
perhaps we could a claim I say it's
possible<00:40:35.880><c> to</c><00:40:36.210><c> optimize</c><00:40:36.390><c> these</c><00:40:36.900><c> collections</c>

00:40:37.460 --> 00:40:37.470 align:start position:0%
possible to optimize these collections
 

00:40:37.470 --> 00:40:40.190 align:start position:0%
possible to optimize these collections
very<00:40:37.770><c> very</c><00:40:38.069><c> aggressively</c><00:40:38.750><c> with</c><00:40:39.750><c> internal</c>

00:40:40.190 --> 00:40:40.200 align:start position:0%
very very aggressively with internal
 

00:40:40.200 --> 00:40:42.349 align:start position:0%
very very aggressively with internal
api's<00:40:40.589><c> hotspot</c><00:40:41.220><c> and</c><00:40:41.430><c> safely</c><00:40:41.849><c> contained</c>

00:40:42.349 --> 00:40:42.359 align:start position:0%
api's hotspot and safely contained
 

00:40:42.359 --> 00:40:44.809 align:start position:0%
api's hotspot and safely contained
unsafe<00:40:43.230><c> mechanisms</c><00:40:43.859><c> but</c><00:40:44.160><c> I</c><00:40:44.220><c> talked</c><00:40:44.520><c> about</c>

00:40:44.809 --> 00:40:44.819 align:start position:0%
unsafe mechanisms but I talked about
 

00:40:44.819 --> 00:40:47.120 align:start position:0%
unsafe mechanisms but I talked about
when<00:40:45.300><c> I</c><00:40:45.390><c> was</c><00:40:45.480><c> doing</c><00:40:45.569><c> building</c><00:40:45.950><c> there</c><00:40:46.950><c> are</c>

00:40:47.120 --> 00:40:47.130 align:start position:0%
when I was doing building there are
 

00:40:47.130 --> 00:40:49.460 align:start position:0%
when I was doing building there are
there<00:40:47.670><c> there</c><00:40:48.420><c> are</c><00:40:48.450><c> ways</c><00:40:48.750><c> that</c><00:40:48.780><c> we</c><00:40:49.109><c> could</c>

00:40:49.460 --> 00:40:49.470 align:start position:0%
there there are ways that we could
 

00:40:49.470 --> 00:40:51.260 align:start position:0%
there there are ways that we could
leverage<00:40:49.740><c> more</c><00:40:50.190><c> intrinsic</c><00:40:50.849><c> as</c><00:40:50.940><c> I</c><00:40:51.000><c> showed</c><00:40:51.180><c> you</c>

00:40:51.260 --> 00:40:51.270 align:start position:0%
leverage more intrinsic as I showed you
 

00:40:51.270 --> 00:40:53.800 align:start position:0%
leverage more intrinsic as I showed you
about<00:40:51.420><c> pop</c><00:40:51.750><c> count</c><00:40:52.050><c> at</c><00:40:52.680><c> the</c><00:40:52.740><c> JVM</c><00:40:53.190><c> a</c><00:40:53.250><c> less</c><00:40:53.400><c> talk</c>

00:40:53.800 --> 00:40:53.810 align:start position:0%
about pop count at the JVM a less talk
 

00:40:53.810 --> 00:40:56.960 align:start position:0%
about pop count at the JVM a less talk
by<00:40:54.810><c> Stein</c><00:40:55.109><c> dauther</c><00:40:55.380><c> he</c><00:40:56.130><c> talked</c><00:40:56.339><c> about</c><00:40:56.400><c> multi</c>

00:40:56.960 --> 00:40:56.970 align:start position:0%
by Stein dauther he talked about multi
 

00:40:56.970 --> 00:41:00.650 align:start position:0%
by Stein dauther he talked about multi
maps<00:40:57.210><c> and</c><00:40:57.569><c> he</c><00:40:58.050><c> was</c><00:40:58.170><c> using</c><00:40:59.060><c> AVX</c><00:41:00.060><c> style</c>

00:41:00.650 --> 00:41:00.660 align:start position:0%
maps and he was using AVX style
 

00:41:00.660 --> 00:41:02.900 align:start position:0%
maps and he was using AVX style
instructions<00:41:01.410><c> to</c><00:41:01.619><c> do</c><00:41:01.740><c> bit</c><00:41:01.980><c> manipulation</c><00:41:02.579><c> of</c>

00:41:02.900 --> 00:41:02.910 align:start position:0%
instructions to do bit manipulation of
 

00:41:02.910 --> 00:41:04.520 align:start position:0%
instructions to do bit manipulation of
these<00:41:03.030><c> multi</c><00:41:03.420><c> maps</c><00:41:03.630><c> to</c><00:41:03.780><c> make</c><00:41:03.810><c> them</c><00:41:04.079><c> efficient</c>

00:41:04.520 --> 00:41:04.530 align:start position:0%
these multi maps to make them efficient
 

00:41:04.530 --> 00:41:06.349 align:start position:0%
these multi maps to make them efficient
as<00:41:04.650><c> well</c><00:41:04.829><c> as</c><00:41:05.160><c> stuff</c><00:41:05.400><c> we</c><00:41:05.550><c> can</c><00:41:05.730><c> do</c><00:41:05.880><c> there</c><00:41:06.089><c> too</c>

00:41:06.349 --> 00:41:06.359 align:start position:0%
as well as stuff we can do there too
 

00:41:06.359 --> 00:41:08.240 align:start position:0%
as well as stuff we can do there too
there's<00:41:06.869><c> a</c><00:41:06.900><c> lot</c><00:41:07.020><c> of</c><00:41:07.109><c> research</c><00:41:07.470><c> here</c><00:41:07.829><c> but</c><00:41:08.130><c> my</c>

00:41:08.240 --> 00:41:08.250 align:start position:0%
there's a lot of research here but my
 

00:41:08.250 --> 00:41:10.010 align:start position:0%
there's a lot of research here but my
claim<00:41:08.490><c> is</c><00:41:08.700><c> that</c><00:41:08.730><c> we</c><00:41:09.329><c> can</c><00:41:09.510><c> optimize</c><00:41:09.630><c> these</c>

00:41:10.010 --> 00:41:10.020 align:start position:0%
claim is that we can optimize these
 

00:41:10.020 --> 00:41:11.960 align:start position:0%
claim is that we can optimize these
things<00:41:10.349><c> like</c><00:41:10.619><c> no</c><00:41:10.800><c> one</c><00:41:10.920><c> else</c><00:41:11.099><c> on</c><00:41:11.280><c> top</c><00:41:11.730><c> of</c><00:41:11.880><c> the</c>

00:41:11.960 --> 00:41:11.970 align:start position:0%
things like no one else on top of the
 

00:41:11.970 --> 00:41:12.960 align:start position:0%
things like no one else on top of the
JDK<00:41:12.150><c> can</c><00:41:12.569><c> optimum</c>

00:41:12.960 --> 00:41:12.970 align:start position:0%
JDK can optimum
 

00:41:12.970 --> 00:41:17.760 align:start position:0%
JDK can optimum
today<00:41:14.010><c> and</c><00:41:15.240><c> that</c><00:41:16.240><c> is</c><00:41:16.630><c> the</c><00:41:17.260><c> end</c><00:41:17.440><c> of</c><00:41:17.590><c> my</c>

00:41:17.760 --> 00:41:17.770 align:start position:0%
today and that is the end of my
 

00:41:17.770 --> 00:41:19.800 align:start position:0%
today and that is the end of my
presentation<00:41:18.160><c> and</c><00:41:18.880><c> there's</c><00:41:19.150><c> some</c><00:41:19.270><c> references</c>

00:41:19.800 --> 00:41:19.810 align:start position:0%
presentation and there's some references
 

00:41:19.810 --> 00:41:20.910 align:start position:0%
presentation and there's some references
at<00:41:19.930><c> the</c><00:41:19.960><c> back</c><00:41:20.140><c> here</c><00:41:20.380><c> I'll</c><00:41:20.470><c> upload</c><00:41:20.619><c> this</c>

00:41:20.910 --> 00:41:20.920 align:start position:0%
at the back here I'll upload this
 

00:41:20.920 --> 00:41:23.339 align:start position:0%
at the back here I'll upload this
presentation<00:41:21.400><c> and</c><00:41:21.849><c> tweet</c><00:41:22.780><c> about</c><00:41:22.810><c> it</c>

00:41:23.339 --> 00:41:23.349 align:start position:0%
presentation and tweet about it
 

00:41:23.349 --> 00:41:25.890 align:start position:0%
presentation and tweet about it
there's<00:41:23.800><c> some</c><00:41:23.980><c> references</c><00:41:24.520><c> to</c><00:41:24.660><c> some</c><00:41:25.660><c> of</c><00:41:25.810><c> the</c>

00:41:25.890 --> 00:41:25.900 align:start position:0%
there's some references to some of the
 

00:41:25.900 --> 00:41:28.190 align:start position:0%
there's some references to some of the
papers<00:41:26.320><c> write</c><00:41:26.800><c> about</c><00:41:27.010><c> these</c><00:41:27.190><c> data</c><00:41:27.400><c> structures</c>

00:41:28.190 --> 00:41:28.200 align:start position:0%
papers write about these data structures
 

00:41:28.200 --> 00:41:30.900 align:start position:0%
papers write about these data structures
as<00:41:29.200><c> especially</c><00:41:30.010><c> like</c><00:41:30.130><c> to</c><00:41:30.250><c> recommend</c><00:41:30.520><c> stein</c>

00:41:30.900 --> 00:41:30.910 align:start position:0%
as especially like to recommend stein
 

00:41:30.910 --> 00:41:33.089 align:start position:0%
as especially like to recommend stein
daughter's<00:41:31.300><c> thesis</c><00:41:31.750><c> I</c><00:41:31.990><c> think</c><00:41:32.710><c> he's</c><00:41:32.800><c> done</c><00:41:32.920><c> some</c>

00:41:33.089 --> 00:41:33.099 align:start position:0%
daughter's thesis I think he's done some
 

00:41:33.099 --> 00:41:34.980 align:start position:0%
daughter's thesis I think he's done some
interesting<00:41:33.400><c> work</c><00:41:33.880><c> build</c><00:41:34.480><c> a</c><00:41:34.599><c> gun</c><00:41:34.720><c> ban</c><00:41:34.869><c> on</c>

00:41:34.980 --> 00:41:34.990 align:start position:0%
interesting work build a gun ban on
 

00:41:34.990 --> 00:41:37.890 align:start position:0%
interesting work build a gun ban on
Bagwell<00:41:35.410><c> and</c><00:41:36.099><c> if</c><00:41:37.030><c> you're</c><00:41:37.210><c> interested</c><00:41:37.450><c> look</c><00:41:37.780><c> at</c>

00:41:37.890 --> 00:41:37.900 align:start position:0%
Bagwell and if you're interested look at
 

00:41:37.900 --> 00:41:40.530 align:start position:0%
Bagwell and if you're interested look at
closures<00:41:38.320><c> vector</c><00:41:38.740><c> and</c><00:41:39.640><c> look</c><00:41:39.820><c> at</c><00:41:39.940><c> the</c><00:41:40.119><c> the</c>

00:41:40.530 --> 00:41:40.540 align:start position:0%
closures vector and look at the the
 

00:41:40.540 --> 00:41:43.109 align:start position:0%
closures vector and look at the the
stuff<00:41:40.750><c> in</c><00:41:40.900><c> Scala</c><00:41:41.260><c> the</c><00:41:41.890><c> implementations</c><00:41:42.640><c> of</c><00:41:42.849><c> VR</c>

00:41:43.109 --> 00:41:43.119 align:start position:0%
stuff in Scala the implementations of VR
 

00:41:43.119 --> 00:41:45.030 align:start position:0%
stuff in Scala the implementations of VR
BB<00:41:43.420><c> vectors</c><00:41:43.780><c> as</c><00:41:43.960><c> well</c><00:41:44.140><c> and</c><00:41:44.530><c> there's</c><00:41:44.980><c> an</c>

00:41:45.030 --> 00:41:45.040 align:start position:0%
BB vectors as well and there's an
 

00:41:45.040 --> 00:41:46.950 align:start position:0%
BB vectors as well and there's an
interesting<00:41:45.490><c> one</c><00:41:45.580><c> at</c><00:41:45.730><c> the</c><00:41:45.820><c> end</c><00:41:45.940><c> it's</c><00:41:46.390><c> it's</c>

00:41:46.950 --> 00:41:46.960 align:start position:0%
interesting one at the end it's it's
 

00:41:46.960 --> 00:41:50.310 align:start position:0%
interesting one at the end it's it's
using<00:41:47.800><c> these</c><00:41:48.040><c> hash</c><00:41:48.599><c> hash</c><00:41:49.599><c> hash</c><00:41:49.630><c> array</c><00:41:50.080><c> mapped</c>

00:41:50.310 --> 00:41:50.320 align:start position:0%
using these hash hash hash array mapped
 

00:41:50.320 --> 00:41:54.080 align:start position:0%
using these hash hash hash array mapped
rice<00:41:50.590><c> for</c><00:41:50.920><c> concurrent</c><00:41:51.490><c> collections</c><00:41:52.560><c> and</c><00:41:53.560><c> as</c>

00:41:54.080 --> 00:41:54.090 align:start position:0%
rice for concurrent collections and as
 

00:41:54.090 --> 00:41:58.040 align:start position:0%
rice for concurrent collections and as
by<00:41:55.090><c> Pro</c><00:41:56.020><c> kopeck</c><00:41:56.349><c> are</c><00:41:56.980><c> very</c><00:41:57.220><c> interesting</c>

00:41:58.040 --> 00:41:58.050 align:start position:0%
by Pro kopeck are very interesting
 

00:41:58.050 --> 00:42:00.870 align:start position:0%
by Pro kopeck are very interesting
leveraging<00:41:59.050><c> these</c><00:41:59.170><c> things</c><00:41:59.590><c> for</c><00:41:59.980><c> concurrent</c>

00:42:00.870 --> 00:42:00.880 align:start position:0%
leveraging these things for concurrent
 

00:42:00.880 --> 00:42:01.980 align:start position:0%
leveraging these things for concurrent
collections<00:42:01.270><c> which</c><00:42:01.390><c> have</c><00:42:01.630><c> similar</c>

00:42:01.980 --> 00:42:01.990 align:start position:0%
collections which have similar
 

00:42:01.990 --> 00:42:04.910 align:start position:0%
collections which have similar
characteristics<00:42:02.380><c> to</c><00:42:02.859><c> concurrent</c><00:42:03.400><c> skip</c><00:42:03.609><c> lists</c>

00:42:04.910 --> 00:42:04.920 align:start position:0%
characteristics to concurrent skip lists
 

00:42:04.920 --> 00:42:12.180 align:start position:0%
characteristics to concurrent skip lists
okay<00:42:05.920><c> I</c><00:42:06.220><c> think</c><00:42:06.609><c> I'm</c><00:42:06.910><c> done</c><00:42:07.060><c> any</c><00:42:07.750><c> questions</c><00:42:11.190><c> no</c>

00:42:12.180 --> 00:42:12.190 align:start position:0%
okay I think I'm done any questions no
 

00:42:12.190 --> 00:42:15.080 align:start position:0%
okay I think I'm done any questions no
questions

00:42:15.080 --> 00:42:15.090 align:start position:0%
 
 

00:42:15.090 --> 00:42:19.680 align:start position:0%
 
you<00:42:16.090><c> all</c><00:42:16.210><c> understood</c><00:42:16.660><c> that</c><00:42:16.870><c> right</c><00:42:17.880><c> okay</c><00:42:18.880><c> thank</c>

00:42:19.680 --> 00:42:19.690 align:start position:0%
you all understood that right okay thank
 

00:42:19.690 --> 00:42:20.610 align:start position:0%
you all understood that right okay thank
you

00:42:20.610 --> 00:42:20.620 align:start position:0%
you
 

00:42:20.620 --> 00:42:24.000 align:start position:0%
you
[Applause]

