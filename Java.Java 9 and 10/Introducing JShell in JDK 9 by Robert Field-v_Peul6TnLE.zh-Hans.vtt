WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.030 --> 00:00:04.740
嗨，我要向您介绍J 

00:00:02.580 --> 00:00:07.770
 shell是新的交互式shell 

00:00:04.740 --> 00:00:10.980
 JDK 9中的Java语言

00:00:07.770 --> 00:00:13.530
我是罗伯特·菲尔德，我是建筑师， 

00:00:10.980 --> 00:00:15.660
 J Shell的负责人，如果您想知道

00:00:13.530 --> 00:00:18.119
关于Java的某些方面

00:00:15.660 --> 00:00:18.900
使用Java构建该库

00:00:18.119 --> 00:00:21.689
语义学

00:00:18.900 --> 00:00:23.750
也许你写了一个小程序来

00:00:21.689 --> 00:00:26.099
找出让我们说你不知道如何

00:00:23.750 --> 00:00:28.590
无符号移位负

00:00:26.099 --> 00:00:30.090
数字的东西，在那里读，但你

00:00:28.590 --> 00:00:33.809
需要编写一个程序，以便您创建一个

00:00:30.090 --> 00:00:37.079
文件，也许在您的IDE中，可能来自

00:00:33.809 --> 00:00:39.840
外壳，您必须创建一个类并

00:00:37.079 --> 00:00:42.120
一个方法public static void main和

00:00:39.840 --> 00:00:44.129
参数和打印行，然后您

00:00:42.120 --> 00:00:46.170
可以看你到底是什么

00:00:44.129 --> 00:00:48.450
做完之后对好感

00:00:46.170 --> 00:00:50.640
您需要先编译然后运行

00:00:48.450 --> 00:00:54.989
然后你得到一个答案，你

00:00:50.640 --> 00:00:58.320
可能想修改，让我展示

00:00:54.989 --> 00:01:00.719
您如何在JCL的J Shell中完成操作

00:00:58.320 --> 00:01:04.650
可以输入我们感兴趣的内容

00:01:00.719 --> 00:01:06.960
进入，我们立即看到结果

00:01:04.650 --> 00:01:09.450
它是1，也被划掉了

00:01:06.960 --> 00:01:11.250
称为美元一的变量，因此我们可以

00:01:09.450 --> 00:01:13.619
如果感兴趣的话可以稍后访问

00:01:11.250 --> 00:01:16.170
我们，但没有告诉我如果

00:01:13.619 --> 00:01:20.280
现在是负三好七是

00:01:16.170 --> 00:01:23.400
看起来也许让我们找出

00:01:20.280 --> 00:01:28.759
着眼于各种价值，所以我们想要

00:01:23.400 --> 00:01:28.759
我可以说上升到负40 

00:01:31.159 --> 00:01:43.079
让我们打印两个移位量

00:01:36.290 --> 00:01:46.710
这是我和结果，所以转移

00:01:43.079 --> 00:01:51.180
金额是我，结果是负1 

00:01:46.710 --> 00:01:55.229
由我转移，我们看到所有这些

00:01:51.180 --> 00:01:58.979
但那些可能不是那么非常

00:01:55.229 --> 00:02:01.049
看看它如何工作的有用方法

00:01:58.979 --> 00:02:07.409
代表他们一点，所以我知道

00:02:01.049 --> 00:02:09.569
整数有一个函数方法

00:02:07.409 --> 00:02:11.310
转换为一点字符串，但我没有

00:02:09.569 --> 00:02:13.470
知道这是什么，所以我可以在这里输入tab 

00:02:11.310 --> 00:02:16.500
它会告诉我

00:02:13.470 --> 00:02:18.180
整数上有什么方法

00:02:16.500 --> 00:02:22.050
课，肯定有两个

00:02:18.180 --> 00:02:25.950
我放入的二进制字符串是和

00:02:22.050 --> 00:02:27.840
完成它，我们可以顺利进行，如果您

00:02:25.950 --> 00:02:29.460
犯了一个错误，您会立即看到它

00:02:27.840 --> 00:02:32.970
在这种情况下，J shell告诉我们

00:02:29.460 --> 00:02:36.360
现在它是一个字符串，我们不能使用

00:02:32.970 --> 00:02:42.590
为此，我有一个整数转换

00:02:36.360 --> 00:02:47.670
返回并将其更改为字符串

00:02:42.590 --> 00:02:50.760
让我们现在给另一个宽度

00:02:47.670 --> 00:02:54.150
好吧，我只放20个空格

00:02:50.760 --> 00:03:00.420
这是一个32位整数

00:02:54.150 --> 00:03:03.630
看看它是正确的宽度，所以我们

00:03:00.420 --> 00:03:05.430
可以立即播放并获得准确

00:03:03.630 --> 00:03:08.250
现在我们想要的信息就可以了

00:03:05.430 --> 00:03:11.370
回到幻灯片上，杰森是什么

00:03:08.250 --> 00:03:13.050
对探索API有好处的孩子是

00:03:11.370 --> 00:03:14.940
不熟悉您或语言的人

00:03:13.050 --> 00:03:18.180
功能，我们刚刚看到了一个例子

00:03:14.940 --> 00:03:20.250
您开始实验并立即看到

00:03:18.180 --> 00:03:22.410
刚上班或刚上班时的结果

00:03:20.250 --> 00:03:23.850
对每种API和语言进行编程

00:03:22.410 --> 00:03:26.160
为您提供了新功能，这很棒

00:03:23.850 --> 00:03:28.110
学习方式可以从

00:03:26.160 --> 00:03:29.850
表达式和语句，而不是

00:03:28.110 --> 00:03:31.920
必须了解整个结构

00:03:29.850 --> 00:03:34.110
类和方法

00:03:31.920 --> 00:03:36.870
您还会立即收到反馈

00:03:34.110 --> 00:03:39.480
帮助学习和第三种

00:03:36.870 --> 00:03:41.400
使用J shell是您的原型

00:03:39.480 --> 00:03:45.150
你不知道的复杂事物

00:03:41.400 --> 00:03:47.720
确切的工作原理，你可以做到这一点

00:03:45.150 --> 00:03:50.519
一次并在J shell中建立它

00:03:47.720 --> 00:03:52.230
但是它是J shell，所以它是一个工具

00:03:50.519 --> 00:03:54.269
用于与

00:03:52.230 --> 00:03:56.850
 Java语言，是读者的评价

00:03:54.269 --> 00:03:59.760
打印循环或重复，最后有

00:03:56.850 --> 00:04:01.830
一种用于您刚刚输入的Java语言

00:03:59.760 --> 00:04:05.549
在一段代码中，您会看到

00:04:01.830 --> 00:04:09.180
结果，因此J Shell被深度集成

00:04:05.549 --> 00:04:11.670
使用JDK工具集意味着

00:04:09.180 --> 00:04:14.070
它保持最新并且兼容

00:04:11.670 --> 00:04:15.989
 Java的语言和语义

00:04:14.070 --> 00:04:18.720
所以我们要看的是

00:04:15.989 --> 00:04:21.959
该工具，因为它很容易显示，但是

00:04:18.720 --> 00:04:25.080
还有一个JJ shell的API 

00:04:21.959 --> 00:04:27.060
工具已构建，您可以构建

00:04:25.080 --> 00:04:30.030
另一个涟漪

00:04:27.060 --> 00:04:32.250
选择或与其他工具一起使用

00:04:30.030 --> 00:04:35.460
您想要能够评估的

00:04:32.250 --> 00:04:37.919
 Java Java代码如何使用J 

00:04:35.460 --> 00:04:39.180
我们看到的shell工具，只需输入J 

00:04:37.919 --> 00:04:42.060
命令行中的shell 

00:04:39.180 --> 00:04:45.630
假设JDK安装了九个J Shell 

00:04:42.060 --> 00:04:47.550
工具使用两种输入方式的一小段

00:04:45.630 --> 00:04:51.300
所以我们已经看到了

00:04:47.550 --> 00:04:53.520
声明或执行我有

00:04:51.300 --> 00:04:55.919
另一件事是J Shell命令，它们

00:04:53.520 --> 00:04:58.110
给您更多有关什么的信息

00:04:55.919 --> 00:04:58.860
进行或允许您控制J 

00:04:58.110 --> 00:05:02.250
盐场

00:04:58.860 --> 00:05:07.770
命令与代码片段区分开

00:05:02.250 --> 00:05:09.810
通过在他们和你前面使用斜线

00:05:07.770 --> 00:05:12.840
输入代码段或命令

00:05:09.810 --> 00:05:16.440
可以完成标签并具有历史记录

00:05:12.840 --> 00:05:19.740
并且可以编辑该行

00:05:16.440 --> 00:05:22.020
编辑实际上使用Emacs标准

00:05:19.740 --> 00:05:24.330
 Emacs绑定是什么片段

00:05:22.020 --> 00:05:27.590
包含变量的声明

00:05:24.330 --> 00:05:31.200
声明方法声明类

00:05:27.590 --> 00:05:34.490
声明接口导入或

00:05:31.200 --> 00:05:37.979
表达式从非常简单到

00:05:34.490 --> 00:05:40.260
卷积流lambda表达式

00:05:37.979 --> 00:05:43.200
他们都是陈述，而如果

00:05:40.260 --> 00:05:45.120
切换实际上是唯一的事情

00:05:43.200 --> 00:05:48.270
不允许的是

00:05:45.120 --> 00:05:50.340
在J的上下文中没有任何意义

00:05:48.270 --> 00:05:53.010
外壳不大所以编程

00:05:50.340 --> 00:05:55.919
没有你不能拥有的包裹

00:05:53.010 --> 00:05:57.479
不包含它们的声明

00:05:55.919 --> 00:06:00.660
就像你不能进入

00:05:57.479 --> 00:06:03.060
编程Java他们全都付出

00:06:00.660 --> 00:06:04.680
你对命令有点了解

00:06:03.060 --> 00:06:07.080
有命令来获取您的信息

00:06:04.680 --> 00:06:10.050
可以列出您输入的摘录

00:06:07.080 --> 00:06:13.289
可以查看您的变量等eCourse 

00:06:10.050 --> 00:06:15.450
可以退出J Shell，然后可以设置一个

00:06:13.289 --> 00:06:18.270
您想要工作的环境，以便您

00:06:15.450 --> 00:06:23.789
设置您的类传递模块路径

00:06:18.270 --> 00:06:26.940
查看并访问历史记录，您

00:06:23.789 --> 00:06:30.889
可以从内部使用任何想要的编辑器

00:06:26.940 --> 00:06:33.450
您还可以使用J shell保存您的工作并

00:06:30.889 --> 00:06:36.479
 J Shell高度可配置，因此

00:06:33.450 --> 00:06:39.450
有一个复杂的set命令

00:06:36.479 --> 00:06:40.270
允许您设置J shell进行工作

00:06:39.450 --> 00:06:43.120
究竟

00:06:40.270 --> 00:06:46.090
您还希望获得在线帮助

00:06:43.120 --> 00:06:47.890
所有这些都很好，这是一个快速

00:06:46.090 --> 00:06:49.720
看一下J Shell的体系结构

00:06:47.890 --> 00:06:53.890
不用太担心这个

00:06:49.720 --> 00:06:58.960
但我提到它是建立在最上面的

00:06:53.890 --> 00:07:01.690
 JDK并确定它使用了

00:06:58.960 --> 00:07:04.210
标准Java C编译器以及

00:07:01.690 --> 00:07:08.710
执行它使用标准虚拟

00:07:04.210 --> 00:07:11.290
 J Shell工具与

00:07:08.710 --> 00:07:14.470
您看到的J Shell核心实现

00:07:11.290 --> 00:07:18.100
称为J Shell API的东西

00:07:14.470 --> 00:07:21.460
允许您使用构建其他工具

00:07:18.100 --> 00:07:25.060
这个功能，让我们一起玩

00:07:21.460 --> 00:07:28.750
我知道这是J shell 

00:07:25.060 --> 00:07:30.370
成为J shell的核心类，但不是

00:07:28.750 --> 00:07:32.980
还有很多其他的事情，所以我们需要

00:07:30.370 --> 00:07:36.730
导入那里有一个很酷

00:07:32.980 --> 00:07:40.120
 J Shell中的技巧，您只需要说一下shift键

00:07:36.730 --> 00:07:42.760
眼睛，并提供导入该类

00:07:40.120 --> 00:07:46.840
所以我们将输入一个，然后将其导入

00:07:42.760 --> 00:07:49.150
但我不知道该怎么办

00:07:46.840 --> 00:07:51.820
我得到的shell类让我们点击Tab 

00:07:49.150 --> 00:07:54.010
看看完成得如何

00:07:51.820 --> 00:07:56.590
创建一个J Shell实例是什么

00:07:54.010 --> 00:07:59.500
我想要，这听起来像是

00:07:56.590 --> 00:08:05.680
现在走，我也想坚持下去

00:07:59.500 --> 00:08:10.410
因此，让我们坚持我们的J实例

00:08:05.680 --> 00:08:15.070
通过键入一个变量来创建shell 

00:08:10.410 --> 00:08:16.810
转移Tab V然后我就可以做

00:08:15.070 --> 00:08:20.410
输入名称，因为它已经

00:08:16.810 --> 00:08:22.090
提供了类型，所以我有实例

00:08:20.410 --> 00:08:22.840
 J Shell的功能，但我不确定

00:08:22.090 --> 00:08:27.480
与之相关

00:08:22.840 --> 00:08:30.130
我们将要评估片段

00:08:27.480 --> 00:08:33.580
让我们一起看一下

00:08:30.130 --> 00:08:35.980
我知道你要输入的方法

00:08:33.580 --> 00:08:39.490
评估，但我不知道

00:08:35.980 --> 00:08:40.600
参数是如果我再次输入制表符

00:08:39.490 --> 00:08:42.070
实际上会告诉我

00:08:40.600 --> 00:08:44.170
参数看起来像是

00:08:42.070 --> 00:08:46.330
字符串输入，但是如果我想要更多

00:08:44.170 --> 00:08:48.490
关于我可以做什么的信息

00:08:46.330 --> 00:08:50.770
再次键入选项卡，它将给我

00:08:48.490 --> 00:08:53.190
评估文档，好吧，我们说

00:08:50.770 --> 00:08:56.470
只想创建一个

00:08:53.190 --> 00:08:59.620
变量就是我们的测试代码段

00:08:56.470 --> 00:09:01.810
新的奶嘴，我们要放

00:08:59.620 --> 00:09:05.230
还是在某个地方，让我们再次输入

00:09:01.810 --> 00:09:08.189
 Shift-tab V，这就是我们的结果， 

00:09:05.230 --> 00:09:12.490
我们的结果是摘要事件列表

00:09:08.189 --> 00:09:16.660
那只只有一件事

00:09:12.490 --> 00:09:22.870
因此，让我们获得一个摘要事件

00:09:16.660 --> 00:09:24.699
我们可以做的清单是0 

00:09:22.870 --> 00:09:27.790
作弊，我们要坚持下去

00:09:24.699 --> 00:09:30.220
事件-说不仅可以创建一个

00:09:27.790 --> 00:09:32.319
变量，我们也可以导入该类型

00:09:30.220 --> 00:09:34.870
并创建听起来的变量

00:09:32.319 --> 00:09:37.420
更优雅，让我们打电话

00:09:34.870 --> 00:09:40.540
那个可变事件我该怎么办

00:09:37.420 --> 00:09:42.879
想发泄看起来我有很多

00:09:40.540 --> 00:09:46.060
从片段中选择所有内容

00:09:42.879 --> 00:09:49.600
导致事件状态等等

00:09:46.060 --> 00:09:53.259
例外bolla看看我们的

00:09:49.600 --> 00:09:55.449
状态是状态有效，那是

00:09:53.259 --> 00:10:00.220
好的，这是一个有效的代码段，但我们

00:09:55.449 --> 00:10:03.699
真正感兴趣的是价值

00:10:00.220 --> 00:10:06.699
 3听起来太好了，现在我们

00:10:03.699 --> 00:10:10.509
准备好我们可以写一个小方法，因为

00:10:06.699 --> 00:10:16.269
我们可以编写任何方法类

00:10:10.509 --> 00:10:18.970
 J Shell中的那些东西，并注意所有

00:10:16.269 --> 00:10:21.790
我正在使用选项卡来完成事情

00:10:18.970 --> 00:10:27.389
快点说吧，因为我绝对

00:10:21.790 --> 00:10:39.630
现在我们要在这里做的是打印出来

00:10:27.389 --> 00:10:48.069
值，所以值是

00:10:39.630 --> 00:10:51.879
字符串，它在我们刚才看到的在

00:10:48.069 --> 00:10:54.040
价值方法，这就是我们的目的

00:10:51.879 --> 00:10:58.300
方法，因此我们在中声明了一个方法

00:10:54.040 --> 00:10:59.980
 J Shell让我们对其进行测试，以便我们可以进行测试

00:10:58.300 --> 00:11:02.350
立即是设计师之一

00:10:59.980 --> 00:11:05.160
您可以在J shell中执行的操作

00:11:02.350 --> 00:11:08.370
显示我们刚刚创建的事件

00:11:05.160 --> 00:11:11.370
足够肯定它给我们带来了价值

00:11:08.370 --> 00:11:15.330
可以写出处理的第一步

00:11:11.370 --> 00:11:22.110
所以我们要处理的输入是

00:11:15.330 --> 00:11:24.800
字符串，这是我们的代码段，我们将

00:11:22.110 --> 00:11:27.270
使用我们刚创建的显示方法

00:11:24.800 --> 00:11:31.100
但是我们要显示的是

00:11:27.270 --> 00:11:35.430
我们之前看到的评估

00:11:31.100 --> 00:11:43.980
无论输入什么，我们再次

00:11:35.430 --> 00:11:47.720
要作弊并得到第一个结果

00:11:43.980 --> 00:11:47.720
现在让我们看看我们有什么

00:11:47.780 --> 00:11:53.730
我们可以处理输入吗？可以

00:11:51.060 --> 00:11:57.180
顶部处理两个加两个作为

00:11:53.730 --> 00:11:59.130
表达足够肯定，所以在哪里

00:11:57.180 --> 00:12:01.890
你得到所有这J外壳的一部分吗

00:11:59.130 --> 00:12:05.280
您可以在此处下载的JDK 9 

00:12:01.890 --> 00:12:07.620
链接，请参加我们的

00:12:05.280 --> 00:12:10.730
邮件列表，并在Twitter上关注我们

00:12:07.620 --> 00:12:10.730
谢谢

