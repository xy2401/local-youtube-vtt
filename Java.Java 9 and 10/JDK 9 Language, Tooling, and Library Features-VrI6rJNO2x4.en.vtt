WEBVTT
Kind: captions
Language: en

00:00:03.810 --> 00:00:07.010 align:start position:0%
 
hello<00:00:04.490><c> thank</c><00:00:05.490><c> you</c><00:00:05.550><c> for</c><00:00:05.640><c> coming</c><00:00:06.000><c> here</c><00:00:06.060><c> today</c><00:00:06.540><c> my</c>

00:00:07.010 --> 00:00:07.020 align:start position:0%
hello thank you for coming here today my
 

00:00:07.020 --> 00:00:10.010 align:start position:0%
hello thank you for coming here today my
name<00:00:07.200><c> is</c><00:00:07.380><c> Jo</c><00:00:07.830><c> Darcy</c><00:00:08.250><c> I</c><00:00:08.490><c> work</c><00:00:08.940><c> in</c><00:00:09.120><c> Oracle's</c><00:00:09.780><c> Java</c>

00:00:10.010 --> 00:00:10.020 align:start position:0%
name is Jo Darcy I work in Oracle's Java
 

00:00:10.020 --> 00:00:12.080 align:start position:0%
name is Jo Darcy I work in Oracle's Java
platform<00:00:10.440><c> group</c><00:00:10.980><c> and</c><00:00:11.400><c> I'll</c><00:00:11.610><c> be</c><00:00:11.730><c> speaking</c>

00:00:12.080 --> 00:00:12.090 align:start position:0%
platform group and I'll be speaking
 

00:00:12.090 --> 00:00:15.410 align:start position:0%
platform group and I'll be speaking
today<00:00:12.450><c> about</c><00:00:12.840><c> JDK</c><00:00:13.320><c> 9</c><00:00:13.760><c> language</c><00:00:14.760><c> tooling</c><00:00:15.210><c> and</c>

00:00:15.410 --> 00:00:15.420 align:start position:0%
today about JDK 9 language tooling and
 

00:00:15.420 --> 00:00:17.720 align:start position:0%
today about JDK 9 language tooling and
library<00:00:15.990><c> features</c><00:00:16.320><c> in</c><00:00:17.009><c> case</c><00:00:17.279><c> we</c><00:00:17.430><c> don't</c><00:00:17.580><c> have</c>

00:00:17.720 --> 00:00:17.730 align:start position:0%
library features in case we don't have
 

00:00:17.730 --> 00:00:20.060 align:start position:0%
library features in case we don't have
time<00:00:18.000><c> for</c><00:00:18.060><c> Q&amp;A</c><00:00:18.540><c> at</c><00:00:18.990><c> the</c><00:00:19.140><c> end</c><00:00:19.290><c> of</c><00:00:19.349><c> the</c><00:00:19.410><c> talk</c><00:00:19.650><c> if</c>

00:00:20.060 --> 00:00:20.070 align:start position:0%
time for Q&amp;A at the end of the talk if
 

00:00:20.070 --> 00:00:22.490 align:start position:0%
time for Q&amp;A at the end of the talk if
you<00:00:20.340><c> tweet</c><00:00:20.550><c> at</c><00:00:20.640><c> this</c><00:00:20.760><c> hashtag</c><00:00:21.000><c> JDK</c><00:00:21.990><c> 9</c><00:00:22.140><c> lying</c>

00:00:22.490 --> 00:00:22.500 align:start position:0%
you tweet at this hashtag JDK 9 lying
 

00:00:22.500 --> 00:00:24.950 align:start position:0%
you tweet at this hashtag JDK 9 lying
tools<00:00:22.800><c> libs</c><00:00:23.100><c> I</c><00:00:23.369><c> can</c><00:00:23.640><c> answer</c><00:00:23.789><c> questions</c><00:00:24.210><c> there</c>

00:00:24.950 --> 00:00:24.960 align:start position:0%
tools libs I can answer questions there
 

00:00:24.960 --> 00:00:27.380 align:start position:0%
tools libs I can answer questions there
the<00:00:25.560><c> last</c><00:00:25.800><c> slide</c><00:00:26.130><c> of</c><00:00:26.550><c> the</c><00:00:26.820><c> talk</c><00:00:27.000><c> will</c><00:00:27.180><c> also</c>

00:00:27.380 --> 00:00:27.390 align:start position:0%
the last slide of the talk will also
 

00:00:27.390 --> 00:00:29.630 align:start position:0%
the last slide of the talk will also
have<00:00:27.570><c> a</c><00:00:27.600><c> URL</c><00:00:28.380><c> to</c><00:00:28.529><c> the</c><00:00:28.619><c> PDF</c><00:00:28.890><c> of</c><00:00:29.220><c> the</c><00:00:29.400><c> slide</c><00:00:29.609><c> deck</c>

00:00:29.630 --> 00:00:29.640 align:start position:0%
have a URL to the PDF of the slide deck
 

00:00:29.640 --> 00:00:36.110 align:start position:0%
have a URL to the PDF of the slide deck
so<00:00:33.800><c> this</c><00:00:34.800><c> is</c><00:00:34.949><c> Oracle's</c><00:00:35.400><c> safe</c><00:00:35.760><c> harbor</c>

00:00:36.110 --> 00:00:36.120 align:start position:0%
so this is Oracle's safe harbor
 

00:00:36.120 --> 00:00:38.030 align:start position:0%
so this is Oracle's safe harbor
statement<00:00:36.570><c> it</c><00:00:37.050><c> lets</c><00:00:37.380><c> you</c><00:00:37.469><c> know</c><00:00:37.500><c> you</c><00:00:37.680><c> shouldn't</c>

00:00:38.030 --> 00:00:38.040 align:start position:0%
statement it lets you know you shouldn't
 

00:00:38.040 --> 00:00:39.350 align:start position:0%
statement it lets you know you shouldn't
put<00:00:38.219><c> too</c><00:00:38.340><c> much</c><00:00:38.460><c> trust</c><00:00:38.760><c> in</c><00:00:38.910><c> what</c><00:00:39.059><c> I</c><00:00:39.090><c> have</c><00:00:39.329><c> to</c>

00:00:39.350 --> 00:00:39.360 align:start position:0%
put too much trust in what I have to
 

00:00:39.360 --> 00:00:41.569 align:start position:0%
put too much trust in what I have to
tell<00:00:39.660><c> you</c><00:00:39.809><c> here</c><00:00:39.960><c> today</c><00:00:40.130><c> especially</c><00:00:41.130><c> regarding</c>

00:00:41.569 --> 00:00:41.579 align:start position:0%
tell you here today especially regarding
 

00:00:41.579 --> 00:00:43.700 align:start position:0%
tell you here today especially regarding
Ford<00:00:42.090><c> looking</c><00:00:42.390><c> statements</c><00:00:42.629><c> however</c><00:00:43.320><c> since</c>

00:00:43.700 --> 00:00:43.710 align:start position:0%
Ford looking statements however since
 

00:00:43.710 --> 00:00:45.770 align:start position:0%
Ford looking statements however since
the<00:00:43.890><c> talk</c><00:00:44.070><c> is</c><00:00:44.190><c> about</c><00:00:44.280><c> JDK</c><00:00:44.640><c> 9</c><00:00:44.910><c> +</c><00:00:45.059><c> j</c><00:00:45.120><c> TK</c><00:00:45.360><c> 9</c><00:00:45.390><c> gist</c>

00:00:45.770 --> 00:00:45.780 align:start position:0%
the talk is about JDK 9 + j TK 9 gist
 

00:00:45.780 --> 00:00:46.610 align:start position:0%
the talk is about JDK 9 + j TK 9 gist
ship<00:00:46.020><c> there</c><00:00:46.230><c> aren't</c><00:00:46.440><c> very</c><00:00:46.469><c> many</c>

00:00:46.610 --> 00:00:46.620 align:start position:0%
ship there aren't very many
 

00:00:46.620 --> 00:00:48.549 align:start position:0%
ship there aren't very many
forward-looking<00:00:47.129><c> statements</c><00:00:47.430><c> in</c><00:00:47.850><c> this</c><00:00:48.239><c> talk</c>

00:00:48.549 --> 00:00:48.559 align:start position:0%
forward-looking statements in this talk
 

00:00:48.559 --> 00:00:50.900 align:start position:0%
forward-looking statements in this talk
it<00:00:49.559><c> might</c><00:00:49.710><c> get</c><00:00:49.829><c> a</c><00:00:49.890><c> bit</c><00:00:50.190><c> repetitive</c><00:00:50.309><c> seeing</c>

00:00:50.900 --> 00:00:50.910 align:start position:0%
it might get a bit repetitive seeing
 

00:00:50.910 --> 00:00:52.880 align:start position:0%
it might get a bit repetitive seeing
Oracle<00:00:51.390><c> safe</c><00:00:51.570><c> harbors</c><00:00:51.930><c> statement</c><00:00:52.350><c> throughout</c>

00:00:52.880 --> 00:00:52.890 align:start position:0%
Oracle safe harbors statement throughout
 

00:00:52.890 --> 00:00:53.479 align:start position:0%
Oracle safe harbors statement throughout
the<00:00:52.980><c> conference</c>

00:00:53.479 --> 00:00:53.489 align:start position:0%
the conference
 

00:00:53.489 --> 00:00:55.459 align:start position:0%
the conference
if<00:00:53.579><c> you</c><00:00:54.059><c> want</c><00:00:54.239><c> some</c><00:00:54.480><c> tips</c><00:00:54.780><c> for</c><00:00:54.960><c> alternative</c>

00:00:55.459 --> 00:00:55.469 align:start position:0%
if you want some tips for alternative
 

00:00:55.469 --> 00:00:56.990 align:start position:0%
if you want some tips for alternative
safe<00:00:55.620><c> harbors</c><00:00:55.949><c> in</c><00:00:56.070><c> the</c><00:00:56.160><c> area</c><00:00:56.430><c> I'll</c><00:00:56.640><c> be</c><00:00:56.760><c> happy</c>

00:00:56.990 --> 00:00:57.000 align:start position:0%
safe harbors in the area I'll be happy
 

00:00:57.000 --> 00:00:59.959 align:start position:0%
safe harbors in the area I'll be happy
to<00:00:57.120><c> provide</c><00:00:57.239><c> those</c><00:00:57.510><c> afterward</c><00:00:58.170><c> a</c><00:00:58.969><c> quick</c>

00:00:59.959 --> 00:00:59.969 align:start position:0%
to provide those afterward a quick
 

00:00:59.969 --> 00:01:02.330 align:start position:0%
to provide those afterward a quick
survey<00:01:00.360><c> before</c><00:01:00.629><c> we</c><00:01:00.690><c> get</c><00:01:00.780><c> started</c><00:01:00.989><c> which</c><00:01:01.920><c> JDK</c>

00:01:02.330 --> 00:01:02.340 align:start position:0%
survey before we get started which JDK
 

00:01:02.340 --> 00:01:03.860 align:start position:0%
survey before we get started which JDK
train<00:01:02.640><c> are</c><00:01:02.820><c> you</c><00:01:02.850><c> using</c><00:01:03.090><c> in</c><00:01:03.300><c> production</c><00:01:03.750><c> are</c>

00:01:03.860 --> 00:01:03.870 align:start position:0%
train are you using in production are
 

00:01:03.870 --> 00:01:05.870 align:start position:0%
train are you using in production are
there<00:01:04.229><c> any</c><00:01:04.350><c> very</c><00:01:04.619><c> early</c><00:01:05.009><c> adopters</c><00:01:05.430><c> on</c><00:01:05.580><c> JDK</c>

00:01:05.870 --> 00:01:05.880 align:start position:0%
there any very early adopters on JDK
 

00:01:05.880 --> 00:01:06.789 align:start position:0%
there any very early adopters on JDK
nine<00:01:06.060><c> yet</c>

00:01:06.789 --> 00:01:06.799 align:start position:0%
nine yet
 

00:01:06.799 --> 00:01:08.690 align:start position:0%
nine yet
I'll<00:01:07.799><c> let's</c><00:01:07.950><c> understand</c><00:01:08.310><c> well</c><00:01:08.520><c> how</c><00:01:08.640><c> about</c>

00:01:08.690 --> 00:01:08.700 align:start position:0%
I'll let's understand well how about
 

00:01:08.700 --> 00:01:12.410 align:start position:0%
I'll let's understand well how about
who's<00:01:09.210><c> downloaded</c><00:01:09.900><c> the</c><00:01:09.960><c> JDK</c><00:01:10.260><c> 9</c><00:01:10.700><c> JDK</c><00:01:11.700><c> alright</c>

00:01:12.410 --> 00:01:12.420 align:start position:0%
who's downloaded the JDK 9 JDK alright
 

00:01:12.420 --> 00:01:14.510 align:start position:0%
who's downloaded the JDK 9 JDK alright
that's<00:01:12.659><c> good</c><00:01:12.840><c> maybe</c><00:01:13.170><c> some</c><00:01:13.740><c> more</c><00:01:13.799><c> people</c><00:01:14.010><c> after</c>

00:01:14.510 --> 00:01:14.520 align:start position:0%
that's good maybe some more people after
 

00:01:14.520 --> 00:01:15.740 align:start position:0%
that's good maybe some more people after
the<00:01:14.610><c> talk</c><00:01:14.820><c> or</c><00:01:15.060><c> after</c><00:01:15.270><c> the</c><00:01:15.360><c> talks</c><00:01:15.570><c> at</c><00:01:15.689><c> the</c>

00:01:15.740 --> 00:01:15.750 align:start position:0%
the talk or after the talks at the
 

00:01:15.750 --> 00:01:17.840 align:start position:0%
the talk or after the talks at the
conference<00:01:16.140><c> will</c><00:01:16.260><c> download</c><00:01:16.439><c> it</c><00:01:16.590><c> JDK</c><00:01:17.520><c> 8</c><00:01:17.549><c> in</c>

00:01:17.840 --> 00:01:17.850 align:start position:0%
conference will download it JDK 8 in
 

00:01:17.850 --> 00:01:21.820 align:start position:0%
conference will download it JDK 8 in
production<00:01:18.320><c> alright</c><00:01:19.320><c> almost</c><00:01:19.500><c> everyone</c><00:01:20.150><c> JDK</c><00:01:21.150><c> 7</c>

00:01:21.820 --> 00:01:21.830 align:start position:0%
production alright almost everyone JDK 7
 

00:01:21.830 --> 00:01:27.410 align:start position:0%
production alright almost everyone JDK 7
alright<00:01:22.860><c> about</c><00:01:23.340><c> a</c><00:01:23.369><c> quarter</c><00:01:23.850><c> did</c><00:01:24.810><c> ek6</c><00:01:26.299><c> one</c><00:01:27.299><c> or</c>

00:01:27.410 --> 00:01:27.420 align:start position:0%
alright about a quarter did ek6 one or
 

00:01:27.420 --> 00:01:28.760 align:start position:0%
alright about a quarter did ek6 one or
two<00:01:27.540><c> stray</c><00:01:27.780><c> hands</c><00:01:28.020><c> now</c><00:01:28.200><c> now</c><00:01:28.470><c> we're</c><00:01:28.619><c> all</c>

00:01:28.760 --> 00:01:28.770 align:start position:0%
two stray hands now now we're all
 

00:01:28.770 --> 00:01:31.370 align:start position:0%
two stray hands now now we're all
friends<00:01:29.159><c> here</c><00:01:29.430><c> so</c><00:01:29.970><c> who</c><00:01:30.270><c> who</c><00:01:30.750><c> will</c><00:01:30.990><c> admit</c><00:01:31.350><c> to</c>

00:01:31.370 --> 00:01:31.380 align:start position:0%
friends here so who who will admit to
 

00:01:31.380 --> 00:01:33.980 align:start position:0%
friends here so who who will admit to
using<00:01:31.740><c> JDK</c><00:01:32.430><c> five</c><00:01:32.670><c> or</c><00:01:32.939><c> older</c><00:01:33.299><c> in</c><00:01:33.509><c> production</c>

00:01:33.980 --> 00:01:33.990 align:start position:0%
using JDK five or older in production
 

00:01:33.990 --> 00:01:35.899 align:start position:0%
using JDK five or older in production
still<00:01:34.259><c> all</c><00:01:34.619><c> right</c><00:01:34.770><c> a</c><00:01:34.799><c> few</c><00:01:35.070><c> honest</c><00:01:35.430><c> people</c><00:01:35.700><c> in</c>

00:01:35.899 --> 00:01:35.909 align:start position:0%
still all right a few honest people in
 

00:01:35.909 --> 00:01:37.819 align:start position:0%
still all right a few honest people in
the<00:01:36.000><c> audience</c><00:01:36.180><c> yesterday</c><00:01:36.869><c> those</c><00:01:37.560><c> are</c><00:01:37.740><c> great</c>

00:01:37.819 --> 00:01:37.829 align:start position:0%
the audience yesterday those are great
 

00:01:37.829 --> 00:01:40.100 align:start position:0%
the audience yesterday those are great
releases<00:01:38.250><c> but</c><00:01:38.729><c> we</c><00:01:38.909><c> have</c><00:01:39.060><c> a</c><00:01:39.090><c> main</c><00:01:39.600><c> many</c>

00:01:40.100 --> 00:01:40.110 align:start position:0%
releases but we have a main many
 

00:01:40.110 --> 00:01:41.660 align:start position:0%
releases but we have a main many
features<00:01:40.500><c> as</c><00:01:40.740><c> since</c><00:01:40.950><c> then</c><00:01:41.130><c> so</c><00:01:41.400><c> hopefully</c>

00:01:41.660 --> 00:01:41.670 align:start position:0%
features as since then so hopefully
 

00:01:41.670 --> 00:01:44.859 align:start position:0%
features as since then so hopefully
you'll<00:01:41.790><c> be</c><00:01:41.850><c> able</c><00:01:41.970><c> to</c><00:01:42.119><c> try</c><00:01:42.270><c> those</c><00:01:42.420><c> out</c><00:01:42.600><c> soon</c>

00:01:44.859 --> 00:01:44.869 align:start position:0%
you'll be able to try those out soon
 

00:01:44.869 --> 00:01:48.679 align:start position:0%
you'll be able to try those out soon
overview<00:01:45.869><c> of</c><00:01:46.259><c> JDK</c><00:01:46.920><c> 9</c><00:01:47.159><c> as</c><00:01:47.579><c> I</c><00:01:47.700><c> mentioned</c><00:01:48.090><c> a</c><00:01:48.210><c> JDK</c><00:01:48.540><c> 9</c>

00:01:48.679 --> 00:01:48.689 align:start position:0%
overview of JDK 9 as I mentioned a JDK 9
 

00:01:48.689 --> 00:01:50.899 align:start position:0%
overview of JDK 9 as I mentioned a JDK 9
just<00:01:48.930><c> ship</c><00:01:49.049><c> recently</c><00:01:49.500><c> a</c><00:01:49.530><c> few</c><00:01:49.740><c> weeks</c><00:01:49.799><c> ago</c><00:01:50.070><c> like</c>

00:01:50.899 --> 00:01:50.909 align:start position:0%
just ship recently a few weeks ago like
 

00:01:50.909 --> 00:01:53.480 align:start position:0%
just ship recently a few weeks ago like
the<00:01:51.090><c> last</c><00:01:51.479><c> few</c><00:01:51.780><c> JDK</c><00:01:52.470><c> project</c><00:01:52.950><c> it</c><00:01:53.310><c> was</c>

00:01:53.480 --> 00:01:53.490 align:start position:0%
the last few JDK project it was
 

00:01:53.490 --> 00:01:55.399 align:start position:0%
the last few JDK project it was
developed<00:01:53.970><c> under</c><00:01:54.060><c> the</c><00:01:54.299><c> auspices</c><00:01:54.840><c> of</c><00:01:54.869><c> open</c><00:01:55.259><c> JDK</c>

00:01:55.399 --> 00:01:55.409 align:start position:0%
developed under the auspices of open JDK
 

00:01:55.409 --> 00:01:57.530 align:start position:0%
developed under the auspices of open JDK
so<00:01:55.950><c> if</c><00:01:56.070><c> you're</c><00:01:56.189><c> interested</c><00:01:56.670><c> in</c><00:01:57.210><c> participating</c>

00:01:57.530 --> 00:01:57.540 align:start position:0%
so if you're interested in participating
 

00:01:57.540 --> 00:01:59.210 align:start position:0%
so if you're interested in participating
that<00:01:57.990><c> development</c><00:01:58.439><c> following</c><00:01:58.860><c> the</c><00:01:58.950><c> mailing</c>

00:01:59.210 --> 00:01:59.220 align:start position:0%
that development following the mailing
 

00:01:59.220 --> 00:02:00.889 align:start position:0%
that development following the mailing
list<00:01:59.430><c> trying</c><00:01:59.909><c> out</c><00:02:00.060><c> the</c><00:02:00.149><c> builds</c><00:02:00.450><c> you</c><00:02:00.570><c> can</c><00:02:00.689><c> find</c>

00:02:00.889 --> 00:02:00.899 align:start position:0%
list trying out the builds you can find
 

00:02:00.899 --> 00:02:03.649 align:start position:0%
list trying out the builds you can find
more<00:02:01.020><c> information</c><00:02:01.530><c> on</c><00:02:01.680><c> the</c><00:02:02.280><c> open</c><00:02:02.549><c> JDK</c><00:02:02.700><c> website</c>

00:02:03.649 --> 00:02:03.659 align:start position:0%
more information on the open JDK website
 

00:02:03.659 --> 00:02:06.380 align:start position:0%
more information on the open JDK website
throughout<00:02:04.649><c> this</c><00:02:04.860><c> talk</c><00:02:05.130><c> I'll</c><00:02:05.399><c> be</c><00:02:05.520><c> using</c><00:02:06.180><c> a</c>

00:02:06.380 --> 00:02:06.390 align:start position:0%
throughout this talk I'll be using a
 

00:02:06.390 --> 00:02:08.660 align:start position:0%
throughout this talk I'll be using a
term<00:02:06.570><c> JEP</c><00:02:06.869><c> JEP</c><00:02:07.560><c> is</c><00:02:07.710><c> it</c><00:02:07.829><c> JDK</c><00:02:08.160><c> enhancement</c>

00:02:08.660 --> 00:02:08.670 align:start position:0%
term JEP JEP is it JDK enhancement
 

00:02:08.670 --> 00:02:11.240 align:start position:0%
term JEP JEP is it JDK enhancement
proposal<00:02:09.149><c> these</c><00:02:09.690><c> are</c><00:02:09.899><c> documents</c><00:02:10.530><c> we</c><00:02:10.829><c> use</c><00:02:10.890><c> for</c>

00:02:11.240 --> 00:02:11.250 align:start position:0%
proposal these are documents we use for
 

00:02:11.250 --> 00:02:13.790 align:start position:0%
proposal these are documents we use for
feature<00:02:11.459><c> tracking</c><00:02:11.730><c> in</c><00:02:12.090><c> the</c><00:02:12.150><c> JDK</c><00:02:12.629><c> and</c><00:02:12.870><c> if</c><00:02:13.709><c> you</c>

00:02:13.790 --> 00:02:13.800 align:start position:0%
feature tracking in the JDK and if you
 

00:02:13.800 --> 00:02:17.600 align:start position:0%
feature tracking in the JDK and if you
go<00:02:13.980><c> to</c><00:02:14.040><c> the</c><00:02:14.599><c> open</c><00:02:15.599><c> JDK</c><00:02:15.750><c> page</c><00:02:16.170><c> for</c><00:02:16.440><c> JDK</c><00:02:16.739><c> 9</c>

00:02:17.600 --> 00:02:17.610 align:start position:0%
go to the open JDK page for JDK 9
 

00:02:17.610 --> 00:02:19.040 align:start position:0%
go to the open JDK page for JDK 9
you<00:02:17.910><c> will</c><00:02:18.000><c> see</c><00:02:18.150><c> a</c><00:02:18.180><c> long</c><00:02:18.450><c> list</c><00:02:18.630><c> of</c><00:02:18.750><c> the</c><00:02:18.840><c> Jets</c>

00:02:19.040 --> 00:02:19.050 align:start position:0%
you will see a long list of the Jets
 

00:02:19.050 --> 00:02:20.420 align:start position:0%
you will see a long list of the Jets
they're<00:02:19.260><c> about</c><00:02:19.470><c> 90</c><00:02:19.800><c> jets</c><00:02:20.010><c> we</c><00:02:20.190><c> won't</c><00:02:20.370><c> be</c>

00:02:20.420 --> 00:02:20.430 align:start position:0%
they're about 90 jets we won't be
 

00:02:20.430 --> 00:02:22.720 align:start position:0%
they're about 90 jets we won't be
talking<00:02:20.580><c> about</c><00:02:20.700><c> all</c><00:02:20.970><c> of</c><00:02:21.060><c> them</c><00:02:21.180><c> today</c><00:02:21.560><c> but</c>

00:02:22.720 --> 00:02:22.730 align:start position:0%
talking about all of them today but
 

00:02:22.730 --> 00:02:26.450 align:start position:0%
talking about all of them today but
besides<00:02:23.730><c> many</c><00:02:24.030><c> jets</c><00:02:24.300><c> JDK</c><00:02:24.810><c> 9</c><00:02:24.960><c> had</c><00:02:25.230><c> many</c><00:02:25.460><c> bug</c>

00:02:26.450 --> 00:02:26.460 align:start position:0%
besides many jets JDK 9 had many bug
 

00:02:26.460 --> 00:02:28.790 align:start position:0%
besides many jets JDK 9 had many bug
fixes<00:02:26.910><c> this</c><00:02:27.390><c> is</c><00:02:27.570><c> a</c><00:02:27.600><c> comparative</c><00:02:28.470><c> chart</c><00:02:28.530><c> of</c><00:02:28.770><c> a</c>

00:02:28.790 --> 00:02:28.800 align:start position:0%
fixes this is a comparative chart of a
 

00:02:28.800 --> 00:02:32.030 align:start position:0%
fixes this is a comparative chart of a
number<00:02:28.980><c> of</c><00:02:29.070><c> bug</c><00:02:29.250><c> fixes</c><00:02:29.670><c> in</c><00:02:29.910><c> 9</c><00:02:30.570><c> vs</c><00:02:31.050><c> 8</c><00:02:31.230><c> so</c><00:02:31.860><c> as</c><00:02:31.950><c> you</c>

00:02:32.030 --> 00:02:32.040 align:start position:0%
number of bug fixes in 9 vs 8 so as you
 

00:02:32.040 --> 00:02:35.060 align:start position:0%
number of bug fixes in 9 vs 8 so as you
can<00:02:32.130><c> see</c><00:02:32.190><c> JDK</c><00:02:32.850><c> 9</c><00:02:33.030><c> has</c><00:02:33.390><c> almost</c><00:02:33.900><c> 20,000</c><00:02:34.590><c> fixes</c><00:02:34.950><c> in</c>

00:02:35.060 --> 00:02:35.070 align:start position:0%
can see JDK 9 has almost 20,000 fixes in
 

00:02:35.070 --> 00:02:37.370 align:start position:0%
can see JDK 9 has almost 20,000 fixes in
it<00:02:35.220><c> which</c><00:02:35.520><c> is</c><00:02:35.700><c> slightly</c><00:02:36.210><c> less</c><00:02:36.450><c> than</c><00:02:36.510><c> twice</c>

00:02:37.370 --> 00:02:37.380 align:start position:0%
it which is slightly less than twice
 

00:02:37.380 --> 00:02:39.740 align:start position:0%
it which is slightly less than twice
what<00:02:37.530><c> JDK</c><00:02:37.950><c> 8</c><00:02:37.980><c> had</c><00:02:38.280><c> so</c><00:02:38.880><c> a</c><00:02:38.910><c> very</c><00:02:39.150><c> large</c><00:02:39.240><c> release</c>

00:02:39.740 --> 00:02:39.750 align:start position:0%
what JDK 8 had so a very large release
 

00:02:39.750 --> 00:02:42.740 align:start position:0%
what JDK 8 had so a very large release
all<00:02:39.990><c> around</c><00:02:41.030><c> including</c><00:02:42.030><c> jigsaw</c>

00:02:42.740 --> 00:02:42.750 align:start position:0%
all around including jigsaw
 

00:02:42.750 --> 00:02:44.030 align:start position:0%
all around including jigsaw
functionality<00:02:43.290><c> and</c><00:02:43.410><c> many</c><00:02:43.709><c> other</c><00:02:43.860><c> features</c>

00:02:44.030 --> 00:02:44.040 align:start position:0%
functionality and many other features
 

00:02:44.040 --> 00:02:45.850 align:start position:0%
functionality and many other features
we'll<00:02:44.310><c> be</c><00:02:44.400><c> talking</c><00:02:44.550><c> about</c>

00:02:45.850 --> 00:02:45.860 align:start position:0%
we'll be talking about
 

00:02:45.860 --> 00:02:49.310 align:start position:0%
we'll be talking about
so<00:02:46.860><c> no</c><00:02:47.459><c> talk</c><00:02:47.760><c> about</c><00:02:47.790><c> JDK</c><00:02:48.209><c> 9</c><00:02:48.510><c> would</c><00:02:48.810><c> be</c><00:02:48.870><c> complete</c>

00:02:49.310 --> 00:02:49.320 align:start position:0%
so no talk about JDK 9 would be complete
 

00:02:49.320 --> 00:02:51.190 align:start position:0%
so no talk about JDK 9 would be complete
without<00:02:49.440><c> some</c><00:02:49.620><c> mention</c><00:02:50.190><c> of</c><00:02:50.459><c> modularity</c>

00:02:51.190 --> 00:02:51.200 align:start position:0%
without some mention of modularity
 

00:02:51.200 --> 00:02:54.440 align:start position:0%
without some mention of modularity
project<00:02:52.200><c> jigsaw</c><00:02:52.560><c> project</c><00:02:53.520><c> jigsaw</c><00:02:53.850><c> was</c><00:02:54.150><c> a</c><00:02:54.180><c> very</c>

00:02:54.440 --> 00:02:54.450 align:start position:0%
project jigsaw project jigsaw was a very
 

00:02:54.450 --> 00:02:56.660 align:start position:0%
project jigsaw project jigsaw was a very
large<00:02:54.840><c> feature</c><00:02:55.230><c> and</c><00:02:55.620><c> the</c><00:02:56.220><c> modularity</c>

00:02:56.660 --> 00:02:56.670 align:start position:0%
large feature and the modularity
 

00:02:56.670 --> 00:02:59.060 align:start position:0%
large feature and the modularity
functionality<00:02:57.660><c> from</c><00:02:57.989><c> jigsaw</c><00:02:58.410><c> is</c><00:02:58.620><c> to</c><00:02:58.950><c> make</c>

00:02:59.060 --> 00:02:59.070 align:start position:0%
functionality from jigsaw is to make
 

00:02:59.070 --> 00:03:02.000 align:start position:0%
functionality from jigsaw is to make
programming<00:02:59.489><c> in</c><00:02:59.730><c> the</c><00:02:59.820><c> large</c><00:02:59.989><c> easier</c><00:03:01.010><c> modules</c>

00:03:02.000 --> 00:03:02.010 align:start position:0%
programming in the large easier modules
 

00:03:02.010 --> 00:03:03.890 align:start position:0%
programming in the large easier modules
bun<00:03:02.220><c> together</c><00:03:02.520><c> at</c><00:03:02.670><c> one</c><00:03:02.850><c> or</c><00:03:02.970><c> more</c><00:03:03.000><c> packages</c><00:03:03.660><c> as</c>

00:03:03.890 --> 00:03:03.900 align:start position:0%
bun together at one or more packages as
 

00:03:03.900 --> 00:03:05.870 align:start position:0%
bun together at one or more packages as
a<00:03:03.930><c> unit</c><00:03:04.230><c> of</c><00:03:04.320><c> reuse</c><00:03:04.650><c> and</c><00:03:04.890><c> offer</c><00:03:05.340><c> it</c><00:03:05.520><c> stronger</c>

00:03:05.870 --> 00:03:05.880 align:start position:0%
a unit of reuse and offer it stronger
 

00:03:05.880 --> 00:03:08.780 align:start position:0%
a unit of reuse and offer it stronger
encapsulation<00:03:06.390><c> than</c><00:03:06.810><c> jar</c><00:03:06.989><c> files</c><00:03:07.430><c> one</c><00:03:08.430><c> reason</c>

00:03:08.780 --> 00:03:08.790 align:start position:0%
encapsulation than jar files one reason
 

00:03:08.790 --> 00:03:11.030 align:start position:0%
encapsulation than jar files one reason
jigsaw<00:03:09.239><c> was</c><00:03:09.390><c> a</c><00:03:09.420><c> large</c><00:03:09.660><c> project</c><00:03:09.959><c> was</c><00:03:10.590><c> because</c>

00:03:11.030 --> 00:03:11.040 align:start position:0%
jigsaw was a large project was because
 

00:03:11.040 --> 00:03:12.650 align:start position:0%
jigsaw was a large project was because
it<00:03:11.190><c> required</c><00:03:11.489><c> changes</c><00:03:11.940><c> throughout</c><00:03:12.330><c> many</c>

00:03:12.650 --> 00:03:12.660 align:start position:0%
it required changes throughout many
 

00:03:12.660 --> 00:03:15.050 align:start position:0%
it required changes throughout many
aspects<00:03:13.170><c> of</c><00:03:13.260><c> the</c><00:03:13.350><c> platform</c><00:03:14.070><c> the</c><00:03:14.640><c> language</c>

00:03:15.050 --> 00:03:15.060 align:start position:0%
aspects of the platform the language
 

00:03:15.060 --> 00:03:17.810 align:start position:0%
aspects of the platform the language
tools<00:03:15.360><c> and</c><00:03:15.690><c> libraries</c><00:03:16.100><c> the</c><00:03:17.100><c> language</c><00:03:17.459><c> changes</c>

00:03:17.810 --> 00:03:17.820 align:start position:0%
tools and libraries the language changes
 

00:03:17.820 --> 00:03:20.030 align:start position:0%
tools and libraries the language changes
for<00:03:18.000><c> jigsaw</c><00:03:18.330><c> include</c><00:03:18.780><c> a</c><00:03:18.900><c> new</c><00:03:19.080><c> kind</c><00:03:19.440><c> of</c><00:03:19.560><c> file</c><00:03:19.800><c> a</c>

00:03:20.030 --> 00:03:20.040 align:start position:0%
for jigsaw include a new kind of file a
 

00:03:20.040 --> 00:03:22.400 align:start position:0%
for jigsaw include a new kind of file a
module<00:03:20.550><c> info</c><00:03:20.970><c> Java</c><00:03:21.390><c> file</c><00:03:21.660><c> which</c><00:03:22.019><c> declares</c>

00:03:22.400 --> 00:03:22.410 align:start position:0%
module info Java file which declares
 

00:03:22.410 --> 00:03:25.220 align:start position:0%
module info Java file which declares
dependencies<00:03:22.950><c> between</c><00:03:23.130><c> modules</c><00:03:23.870><c> Java</c><00:03:24.870><c> C</c><00:03:25.080><c> was</c>

00:03:25.220 --> 00:03:25.230 align:start position:0%
dependencies between modules Java C was
 

00:03:25.230 --> 00:03:27.910 align:start position:0%
dependencies between modules Java C was
updated<00:03:25.650><c> to</c><00:03:25.680><c> support</c><00:03:26.130><c> that</c><00:03:26.250><c> new</c><00:03:26.640><c> kind</c><00:03:26.940><c> of</c>

00:03:27.910 --> 00:03:27.920 align:start position:0%
updated to support that new kind of
 

00:03:27.920 --> 00:03:30.500 align:start position:0%
updated to support that new kind of
source<00:03:28.920><c> file</c><00:03:29.190><c> as</c><00:03:29.430><c> well</c><00:03:29.640><c> as</c><00:03:29.820><c> to</c><00:03:30.030><c> find</c>

00:03:30.500 --> 00:03:30.510 align:start position:0%
source file as well as to find
 

00:03:30.510 --> 00:03:32.810 align:start position:0%
source file as well as to find
dependencies<00:03:31.230><c> through</c><00:03:31.560><c> modules</c><00:03:31.980><c> there</c><00:03:32.700><c> are</c>

00:03:32.810 --> 00:03:32.820 align:start position:0%
dependencies through modules there are
 

00:03:32.820 --> 00:03:34.220 align:start position:0%
dependencies through modules there are
corresponding<00:03:33.060><c> updates</c><00:03:33.630><c> made</c><00:03:33.810><c> to</c><00:03:33.840><c> the</c><00:03:34.019><c> Java</c>

00:03:34.220 --> 00:03:34.230 align:start position:0%
corresponding updates made to the Java
 

00:03:34.230 --> 00:03:36.470 align:start position:0%
corresponding updates made to the Java
command<00:03:34.620><c> and</c><00:03:34.980><c> the</c><00:03:35.400><c> hotspot</c><00:03:35.850><c> run</c><00:03:36.090><c> time</c><00:03:36.330><c> to</c>

00:03:36.470 --> 00:03:36.480 align:start position:0%
command and the hotspot run time to
 

00:03:36.480 --> 00:03:38.570 align:start position:0%
command and the hotspot run time to
understand<00:03:36.870><c> the</c><00:03:37.019><c> modularity</c><00:03:37.580><c> restrictions</c>

00:03:38.570 --> 00:03:38.580 align:start position:0%
understand the modularity restrictions
 

00:03:38.580 --> 00:03:41.539 align:start position:0%
understand the modularity restrictions
and<00:03:38.790><c> there</c><00:03:39.600><c> were</c><00:03:39.660><c> also</c><00:03:39.810><c> API</c><00:03:40.260><c> changes</c><00:03:40.769><c> those</c>

00:03:41.539 --> 00:03:41.549 align:start position:0%
and there were also API changes those
 

00:03:41.549 --> 00:03:44.630 align:start position:0%
and there were also API changes those
API<00:03:42.150><c> changes</c><00:03:42.510><c> include</c><00:03:42.989><c> updates</c><00:03:43.410><c> to</c><00:03:43.709><c> the</c><00:03:43.980><c> core</c>

00:03:44.630 --> 00:03:44.640 align:start position:0%
API changes include updates to the core
 

00:03:44.640 --> 00:03:46.370 align:start position:0%
API changes include updates to the core
reflection<00:03:45.150><c> and</c><00:03:45.360><c> the</c><00:03:45.480><c> language</c><00:03:45.810><c> model</c><00:03:45.959><c> to</c>

00:03:46.370 --> 00:03:46.380 align:start position:0%
reflection and the language model to
 

00:03:46.380 --> 00:03:49.449 align:start position:0%
reflection and the language model to
model<00:03:47.220><c> the</c><00:03:47.310><c> new</c><00:03:47.400><c> aspects</c><00:03:47.850><c> of</c><00:03:48.030><c> the</c><00:03:48.120><c> platform</c>

00:03:49.449 --> 00:03:49.459 align:start position:0%
model the new aspects of the platform
 

00:03:49.459 --> 00:03:51.710 align:start position:0%
model the new aspects of the platform
now<00:03:50.459><c> there's</c><00:03:50.730><c> much</c><00:03:50.880><c> more</c><00:03:51.090><c> to</c><00:03:51.150><c> be</c><00:03:51.510><c> said</c><00:03:51.660><c> about</c>

00:03:51.710 --> 00:03:51.720 align:start position:0%
now there's much more to be said about
 

00:03:51.720 --> 00:03:54.020 align:start position:0%
now there's much more to be said about
modularity<00:03:52.290><c> than</c><00:03:52.650><c> can</c><00:03:52.890><c> fit</c><00:03:52.920><c> in</c><00:03:53.250><c> a</c><00:03:53.310><c> single</c><00:03:53.489><c> 45</c>

00:03:54.020 --> 00:03:54.030 align:start position:0%
modularity than can fit in a single 45
 

00:03:54.030 --> 00:03:55.850 align:start position:0%
modularity than can fit in a single 45
minute<00:03:54.269><c> session</c><00:03:54.630><c> for</c><00:03:55.380><c> that</c><00:03:55.410><c> reason</c><00:03:55.769><c> the</c>

00:03:55.850 --> 00:03:55.860 align:start position:0%
minute session for that reason the
 

00:03:55.860 --> 00:03:57.979 align:start position:0%
minute session for that reason the
jigsaw<00:03:56.160><c> team</c><00:03:56.370><c> has</c><00:03:56.549><c> 5</c><00:03:56.880><c> 45</c><00:03:57.360><c> minute</c><00:03:57.630><c> sessions</c>

00:03:57.979 --> 00:03:57.989 align:start position:0%
jigsaw team has 5 45 minute sessions
 

00:03:57.989 --> 00:04:00.259 align:start position:0%
jigsaw team has 5 45 minute sessions
here<00:03:58.620><c> at</c><00:03:58.650><c> JavaOne</c><00:03:59.040><c> some</c><00:03:59.820><c> of</c><00:03:59.910><c> these</c><00:03:59.970><c> have</c>

00:04:00.259 --> 00:04:00.269 align:start position:0%
here at JavaOne some of these have
 

00:04:00.269 --> 00:04:03.740 align:start position:0%
here at JavaOne some of these have
already<00:04:00.660><c> occurred</c><00:04:01.040><c> they</c><00:04:02.040><c> may</c><00:04:02.370><c> be</c><00:04:02.430><c> being</c><00:04:03.360><c> given</c>

00:04:03.740 --> 00:04:03.750 align:start position:0%
already occurred they may be being given
 

00:04:03.750 --> 00:04:05.210 align:start position:0%
already occurred they may be being given
again<00:04:03.989><c> later</c><00:04:04.230><c> in</c><00:04:04.350><c> the</c><00:04:04.410><c> conference</c><00:04:04.620><c> so</c><00:04:04.950><c> you</c><00:04:05.010><c> can</c>

00:04:05.210 --> 00:04:05.220 align:start position:0%
again later in the conference so you can
 

00:04:05.220 --> 00:04:07.280 align:start position:0%
again later in the conference so you can
check<00:04:05.700><c> the</c><00:04:05.820><c> scheduling</c><00:04:06.209><c> app</c><00:04:06.360><c> for</c><00:04:06.600><c> that</c><00:04:06.690><c> and</c><00:04:06.840><c> a</c>

00:04:07.280 --> 00:04:07.290 align:start position:0%
check the scheduling app for that and a
 

00:04:07.290 --> 00:04:09.710 align:start position:0%
check the scheduling app for that and a
few<00:04:07.320><c> other</c><00:04:07.530><c> sessions</c><00:04:08.130><c> are</c><00:04:08.600><c> later</c><00:04:09.600><c> this</c>

00:04:09.710 --> 00:04:09.720 align:start position:0%
few other sessions are later this
 

00:04:09.720 --> 00:04:13.610 align:start position:0%
few other sessions are later this
afternoon<00:04:09.840><c> or</c><00:04:10.380><c> later</c><00:04:10.650><c> in</c><00:04:10.890><c> the</c><00:04:10.980><c> conference</c><00:04:12.620><c> for</c>

00:04:13.610 --> 00:04:13.620 align:start position:0%
afternoon or later in the conference for
 

00:04:13.620 --> 00:04:16.069 align:start position:0%
afternoon or later in the conference for
this<00:04:13.769><c> talk</c><00:04:14.040><c> we'll</c><00:04:14.400><c> start</c><00:04:14.850><c> next</c><00:04:15.480><c> by</c><00:04:15.750><c> talking</c>

00:04:16.069 --> 00:04:16.079 align:start position:0%
this talk we'll start next by talking
 

00:04:16.079 --> 00:04:17.960 align:start position:0%
this talk we'll start next by talking
about<00:04:16.109><c> our</c><00:04:16.410><c> approach</c><00:04:16.979><c> to</c><00:04:17.100><c> stewardship</c><00:04:17.790><c> of</c><00:04:17.880><c> the</c>

00:04:17.960 --> 00:04:17.970 align:start position:0%
about our approach to stewardship of the
 

00:04:17.970 --> 00:04:20.120 align:start position:0%
about our approach to stewardship of the
Java<00:04:18.120><c> platform</c><00:04:18.359><c> then</c><00:04:19.290><c> we'll</c><00:04:19.440><c> talk</c><00:04:19.650><c> about</c><00:04:19.829><c> the</c>

00:04:20.120 --> 00:04:20.130 align:start position:0%
Java platform then we'll talk about the
 

00:04:20.130 --> 00:04:22.159 align:start position:0%
Java platform then we'll talk about the
tooling<00:04:20.609><c> language</c><00:04:21.209><c> and</c><00:04:21.419><c> library</c><00:04:21.810><c> updates</c>

00:04:22.159 --> 00:04:22.169 align:start position:0%
tooling language and library updates
 

00:04:22.169 --> 00:04:24.530 align:start position:0%
tooling language and library updates
while<00:04:22.919><c> some</c><00:04:23.190><c> of</c><00:04:23.250><c> those</c><00:04:23.340><c> features</c><00:04:23.550><c> are</c><00:04:23.970><c> pretty</c>

00:04:24.530 --> 00:04:24.540 align:start position:0%
while some of those features are pretty
 

00:04:24.540 --> 00:04:26.029 align:start position:0%
while some of those features are pretty
distinct<00:04:25.050><c> sometimes</c><00:04:25.440><c> a</c><00:04:25.560><c> feature</c><00:04:25.770><c> will</c>

00:04:26.029 --> 00:04:26.039 align:start position:0%
distinct sometimes a feature will
 

00:04:26.039 --> 00:04:27.980 align:start position:0%
distinct sometimes a feature will
involve<00:04:26.520><c> more</c><00:04:26.729><c> than</c><00:04:27.000><c> one</c><00:04:27.120><c> area</c><00:04:27.360><c> and</c><00:04:27.660><c> if</c><00:04:27.870><c> we</c>

00:04:27.980 --> 00:04:27.990 align:start position:0%
involve more than one area and if we
 

00:04:27.990 --> 00:04:30.049 align:start position:0%
involve more than one area and if we
have<00:04:28.200><c> time</c><00:04:28.349><c> at</c><00:04:28.500><c> the</c><00:04:28.530><c> end</c><00:04:28.620><c> some</c><00:04:29.039><c> Q&amp;A</c>

00:04:30.049 --> 00:04:30.059 align:start position:0%
have time at the end some Q&amp;A
 

00:04:30.059 --> 00:04:32.939 align:start position:0%
have time at the end some Q&amp;A
so<00:04:31.059><c> the</c><00:04:31.150><c> stewardship</c><00:04:31.659><c> the</c><00:04:31.869><c> approach</c><00:04:32.529><c> we</c><00:04:32.800><c> use</c>

00:04:32.939 --> 00:04:32.949 align:start position:0%
so the stewardship the approach we use
 

00:04:32.949 --> 00:04:35.189 align:start position:0%
so the stewardship the approach we use
for<00:04:33.219><c> stewardship</c><00:04:33.669><c> for</c><00:04:33.969><c> the</c><00:04:34.059><c> JDK</c><00:04:34.449><c> is</c><00:04:34.809><c> very</c>

00:04:35.189 --> 00:04:35.199 align:start position:0%
for stewardship for the JDK is very
 

00:04:35.199 --> 00:04:37.079 align:start position:0%
for stewardship for the JDK is very
different<00:04:35.619><c> from</c><00:04:35.860><c> the</c><00:04:36.039><c> stewardship</c><00:04:36.789><c> approach</c>

00:04:37.079 --> 00:04:37.089 align:start position:0%
different from the stewardship approach
 

00:04:37.089 --> 00:04:39.600 align:start position:0%
different from the stewardship approach
used<00:04:37.419><c> by</c><00:04:37.479><c> say</c><00:04:38.039><c> Denethor</c><00:04:39.039><c> and</c><00:04:39.069><c> their</c><00:04:39.309><c> current</c>

00:04:39.600 --> 00:04:39.610 align:start position:0%
used by say Denethor and their current
 

00:04:39.610 --> 00:04:41.100 align:start position:0%
used by say Denethor and their current
the<00:04:39.909><c> Kings</c><00:04:40.119><c> films</c><00:04:40.509><c> who</c><00:04:40.599><c> was</c><00:04:40.689><c> the</c><00:04:40.809><c> steward</c><00:04:41.080><c> of</c>

00:04:41.100 --> 00:04:41.110 align:start position:0%
the Kings films who was the steward of
 

00:04:41.110 --> 00:04:44.159 align:start position:0%
the Kings films who was the steward of
gondor<00:04:41.529><c> the</c><00:04:42.369><c> number</c><00:04:43.210><c> one</c><00:04:43.360><c> goal</c><00:04:43.599><c> of</c><00:04:43.629><c> the</c><00:04:43.960><c> Java</c>

00:04:44.159 --> 00:04:44.169 align:start position:0%
gondor the number one goal of the Java
 

00:04:44.169 --> 00:04:46.529 align:start position:0%
gondor the number one goal of the Java
platform<00:04:44.439><c> group</c><00:04:45.069><c> for</c><00:04:45.879><c> the</c><00:04:45.939><c> last</c><00:04:45.969><c> seven</c><00:04:46.389><c> and</c><00:04:46.509><c> a</c>

00:04:46.529 --> 00:04:46.539 align:start position:0%
platform group for the last seven and a
 

00:04:46.539 --> 00:04:48.829 align:start position:0%
platform group for the last seven and a
half<00:04:46.569><c> years</c><00:04:46.689><c> has</c><00:04:47.169><c> been</c><00:04:47.349><c> to</c><00:04:47.529><c> keep</c><00:04:47.770><c> Java</c><00:04:48.159><c> vibrant</c>

00:04:48.829 --> 00:04:48.839 align:start position:0%
half years has been to keep Java vibrant
 

00:04:48.839 --> 00:04:51.420 align:start position:0%
half years has been to keep Java vibrant
part<00:04:49.839><c> of</c><00:04:49.930><c> keeping</c><00:04:50.439><c> Java</c><00:04:50.710><c> vibrant</c><00:04:51.219><c> means</c>

00:04:51.420 --> 00:04:51.430 align:start position:0%
part of keeping Java vibrant means
 

00:04:51.430 --> 00:04:52.739 align:start position:0%
part of keeping Java vibrant means
keeping<00:04:51.879><c> the</c><00:04:51.999><c> things</c><00:04:52.210><c> that</c><00:04:52.389><c> work</c><00:04:52.539><c> today</c>

00:04:52.739 --> 00:04:52.749 align:start position:0%
keeping the things that work today
 

00:04:52.749 --> 00:04:54.149 align:start position:0%
keeping the things that work today
working<00:04:53.499><c> tomorrow</c>

00:04:54.149 --> 00:04:54.159 align:start position:0%
working tomorrow
 

00:04:54.159 --> 00:04:57.719 align:start position:0%
working tomorrow
so<00:04:54.550><c> that</c><00:04:54.759><c> topic</c><00:04:55.210><c> is</c><00:04:55.389><c> compatibility</c><00:04:56.349><c> so</c><00:04:57.249><c> the</c>

00:04:57.719 --> 00:04:57.729 align:start position:0%
so that topic is compatibility so the
 

00:04:57.729 --> 00:05:00.149 align:start position:0%
so that topic is compatibility so the
fundamental<00:04:58.539><c> policy</c><00:04:58.869><c> we</c><00:04:59.139><c> have</c><00:04:59.349><c> about</c><00:04:59.589><c> the</c><00:04:59.740><c> JDK</c>

00:05:00.149 --> 00:05:00.159 align:start position:0%
fundamental policy we have about the JDK
 

00:05:00.159 --> 00:05:03.029 align:start position:0%
fundamental policy we have about the JDK
is<00:05:00.689><c> managing</c><00:05:01.689><c> compatibility</c><00:05:02.379><c> in</c><00:05:02.559><c> a</c><00:05:02.740><c> sensible</c>

00:05:03.029 --> 00:05:03.039 align:start position:0%
is managing compatibility in a sensible
 

00:05:03.039 --> 00:05:05.730 align:start position:0%
is managing compatibility in a sensible
way<00:05:03.240><c> the</c><00:05:04.240><c> general</c><00:05:04.539><c> ushion</c><00:05:05.139><c> policy</c><00:05:05.499><c> is</c><00:05:05.559><c> we</c>

00:05:05.730 --> 00:05:05.740 align:start position:0%
way the general ushion policy is we
 

00:05:05.740 --> 00:05:07.260 align:start position:0%
way the general ushion policy is we
don't<00:05:05.889><c> want</c><00:05:06.009><c> to</c><00:05:06.189><c> break</c><00:05:06.309><c> binary</c><00:05:06.789><c> compatibility</c>

00:05:07.260 --> 00:05:07.270 align:start position:0%
don't want to break binary compatibility
 

00:05:07.270 --> 00:05:09.299 align:start position:0%
don't want to break binary compatibility
as<00:05:07.680><c> defined</c><00:05:08.680><c> in</c><00:05:08.740><c> the</c><00:05:08.800><c> Java</c><00:05:09.159><c> language</c>

00:05:09.299 --> 00:05:09.309 align:start position:0%
as defined in the Java language
 

00:05:09.309 --> 00:05:11.219 align:start position:0%
as defined in the Java language
specification<00:05:09.719><c> that</c><00:05:10.719><c> means</c><00:05:10.899><c> we</c><00:05:11.050><c> want</c>

00:05:11.219 --> 00:05:11.229 align:start position:0%
specification that means we want
 

00:05:11.229 --> 00:05:12.929 align:start position:0%
specification that means we want
programmers<00:05:11.860><c> that</c><00:05:11.979><c> link</c><00:05:12.219><c> today</c><00:05:12.399><c> to</c><00:05:12.550><c> be</c><00:05:12.849><c> able</c>

00:05:12.929 --> 00:05:12.939 align:start position:0%
programmers that link today to be able
 

00:05:12.939 --> 00:05:15.119 align:start position:0%
programmers that link today to be able
to<00:05:13.059><c> link</c><00:05:13.270><c> tomorrow</c><00:05:13.599><c> we</c><00:05:14.469><c> want</c><00:05:14.620><c> to</c><00:05:14.770><c> avoid</c>

00:05:15.119 --> 00:05:15.129 align:start position:0%
to link tomorrow we want to avoid
 

00:05:15.129 --> 00:05:16.769 align:start position:0%
to link tomorrow we want to avoid
introducing<00:05:15.789><c> source</c><00:05:16.089><c> incompatibilities</c>

00:05:16.769 --> 00:05:16.779 align:start position:0%
introducing source incompatibilities
 

00:05:16.779 --> 00:05:19.439 align:start position:0%
introducing source incompatibilities
that<00:05:17.740><c> is</c><00:05:17.919><c> where</c><00:05:18.099><c> programs</c><00:05:18.460><c> stop</c><00:05:18.699><c> compiling</c><00:05:19.120><c> or</c>

00:05:19.439 --> 00:05:19.449 align:start position:0%
that is where programs stop compiling or
 

00:05:19.449 --> 00:05:21.299 align:start position:0%
that is where programs stop compiling or
if<00:05:19.629><c> they</c><00:05:19.779><c> compile</c><00:05:20.139><c> they</c><00:05:20.620><c> compile</c><00:05:20.979><c> they</c><00:05:21.159><c> mean</c>

00:05:21.299 --> 00:05:21.309 align:start position:0%
if they compile they compile they mean
 

00:05:21.309 --> 00:05:22.860 align:start position:0%
if they compile they compile they mean
something<00:05:21.580><c> different</c><00:05:21.699><c> and</c><00:05:22.419><c> we</c><00:05:22.569><c> want</c><00:05:22.749><c> to</c>

00:05:22.860 --> 00:05:22.870 align:start position:0%
something different and we want to
 

00:05:22.870 --> 00:05:24.510 align:start position:0%
something different and we want to
manage<00:05:22.990><c> the</c><00:05:23.199><c> behavioral</c><00:05:23.709><c> compatibility</c><00:05:24.309><c> what</c>

00:05:24.510 --> 00:05:24.520 align:start position:0%
manage the behavioral compatibility what
 

00:05:24.520 --> 00:05:26.969 align:start position:0%
manage the behavioral compatibility what
a<00:05:24.550><c> method</c><00:05:24.849><c> does</c><00:05:25.029><c> when</c><00:05:25.509><c> you</c><00:05:25.599><c> call</c><00:05:25.779><c> it</c><00:05:25.930><c> now</c><00:05:26.770><c> this</c>

00:05:26.969 --> 00:05:26.979 align:start position:0%
a method does when you call it now this
 

00:05:26.979 --> 00:05:29.339 align:start position:0%
a method does when you call it now this
philosophy<00:05:27.459><c> applies</c><00:05:27.879><c> to</c><00:05:28.270><c> the</c><00:05:28.389><c> API</c><00:05:28.719><c> changes</c><00:05:29.199><c> we</c>

00:05:29.339 --> 00:05:29.349 align:start position:0%
philosophy applies to the API changes we
 

00:05:29.349 --> 00:05:31.199 align:start position:0%
philosophy applies to the API changes we
make<00:05:29.499><c> in</c><00:05:29.619><c> the</c><00:05:29.709><c> platform</c><00:05:30.189><c> but</c><00:05:30.580><c> it</c><00:05:30.699><c> also</c><00:05:30.849><c> applies</c>

00:05:31.199 --> 00:05:31.209 align:start position:0%
make in the platform but it also applies
 

00:05:31.209 --> 00:05:34.110 align:start position:0%
make in the platform but it also applies
to<00:05:31.240><c> the</c><00:05:31.539><c> language</c><00:05:32.080><c> features</c><00:05:33.039><c> we</c><00:05:33.189><c> have</c><00:05:33.219><c> for</c>

00:05:34.110 --> 00:05:34.120 align:start position:0%
to the language features we have for
 

00:05:34.120 --> 00:05:35.790 align:start position:0%
to the language features we have for
instance<00:05:34.360><c> because</c><00:05:34.719><c> of</c><00:05:34.809><c> this</c><00:05:34.899><c> policy</c><00:05:35.259><c> we</c><00:05:35.529><c> still</c>

00:05:35.790 --> 00:05:35.800 align:start position:0%
instance because of this policy we still
 

00:05:35.800 --> 00:05:39.570 align:start position:0%
instance because of this policy we still
recognize<00:05:36.099><c> old</c><00:05:36.809><c> version</c><00:05:37.809><c> 40</c><00:05:38.110><c> 5.3</c><00:05:38.709><c> class</c><00:05:39.279><c> files</c>

00:05:39.570 --> 00:05:39.580 align:start position:0%
recognize old version 40 5.3 class files
 

00:05:39.580 --> 00:05:41.939 align:start position:0%
recognize old version 40 5.3 class files
generated<00:05:40.029><c> by</c><00:05:40.149><c> Java</c><00:05:40.479><c> one</c><00:05:40.749><c> at</c><00:05:40.870><c> Oh</c><00:05:40.990><c> over</c><00:05:41.709><c> 20</c>

00:05:41.939 --> 00:05:41.949 align:start position:0%
generated by Java one at Oh over 20
 

00:05:41.949 --> 00:05:44.579 align:start position:0%
generated by Java one at Oh over 20
years<00:05:41.979><c> ago</c><00:05:42.360><c> we</c><00:05:43.360><c> limit</c><00:05:43.659><c> the</c><00:05:43.719><c> cases</c><00:05:44.110><c> where</c><00:05:44.289><c> legal</c>

00:05:44.579 --> 00:05:44.589 align:start position:0%
years ago we limit the cases where legal
 

00:05:44.589 --> 00:05:46.829 align:start position:0%
years ago we limit the cases where legal
stowed<00:05:44.830><c> code</c><00:05:45.669><c> stops</c><00:05:45.999><c> compiling</c><00:05:46.419><c> in</c><00:05:46.719><c> newer</c>

00:05:46.829 --> 00:05:46.839 align:start position:0%
stowed code stops compiling in newer
 

00:05:46.839 --> 00:05:50.119 align:start position:0%
stowed code stops compiling in newer
platform<00:05:47.319><c> releases</c><00:05:47.559><c> and</c><00:05:48.180><c> we</c><00:05:49.180><c> want</c><00:05:49.539><c> to</c><00:05:49.629><c> avoid</c>

00:05:50.119 --> 00:05:50.129 align:start position:0%
platform releases and we want to avoid
 

00:05:50.129 --> 00:05:52.499 align:start position:0%
platform releases and we want to avoid
changes<00:05:51.129><c> in</c><00:05:51.249><c> the</c><00:05:51.339><c> semantics</c><00:05:52.240><c> of</c><00:05:52.300><c> code</c>

00:05:52.499 --> 00:05:52.509 align:start position:0%
changes in the semantics of code
 

00:05:52.509 --> 00:05:55.230 align:start position:0%
changes in the semantics of code
generation<00:05:52.659><c> when</c><00:05:53.289><c> recompiling</c><00:05:53.879><c> so</c><00:05:54.879><c> as</c><00:05:55.029><c> with</c>

00:05:55.230 --> 00:05:55.240 align:start position:0%
generation when recompiling so as with
 

00:05:55.240 --> 00:05:57.360 align:start position:0%
generation when recompiling so as with
any<00:05:55.269><c> sort</c><00:05:55.629><c> of</c><00:05:55.689><c> compatibility</c><00:05:56.139><c> policy</c><00:05:56.769><c> one</c><00:05:57.279><c> of</c>

00:05:57.360 --> 00:05:57.370 align:start position:0%
any sort of compatibility policy one of
 

00:05:57.370 --> 00:05:59.129 align:start position:0%
any sort of compatibility policy one of
the<00:05:57.459><c> trade-offs</c><00:05:57.669><c> here</c><00:05:58.029><c> is</c><00:05:58.209><c> finding</c><00:05:58.629><c> the</c><00:05:59.019><c> right</c>

00:05:59.129 --> 00:05:59.139 align:start position:0%
the trade-offs here is finding the right
 

00:05:59.139 --> 00:06:02.659 align:start position:0%
the trade-offs here is finding the right
balance<00:05:59.319><c> between</c><00:05:59.589><c> stability</c><00:06:00.519><c> and</c><00:06:00.999><c> progress</c>

00:06:02.659 --> 00:06:02.669 align:start position:0%
balance between stability and progress
 

00:06:02.669 --> 00:06:04.889 align:start position:0%
balance between stability and progress
so<00:06:03.669><c> we</c><00:06:03.879><c> have</c><00:06:03.969><c> three</c><00:06:04.149><c> kinds</c><00:06:04.300><c> of</c><00:06:04.479><c> compatibility</c>

00:06:04.889 --> 00:06:04.899 align:start position:0%
so we have three kinds of compatibility
 

00:06:04.899 --> 00:06:07.110 align:start position:0%
so we have three kinds of compatibility
source<00:06:05.469><c> by</c><00:06:05.709><c> any</c><00:06:05.860><c> binary</c><00:06:06.490><c> and</c><00:06:06.669><c> behavior</c><00:06:06.999><c> both</c>

00:06:07.110 --> 00:06:07.120 align:start position:0%
source by any binary and behavior both
 

00:06:07.120 --> 00:06:10.259 align:start position:0%
source by any binary and behavior both
behavioral<00:06:07.689><c> and</c><00:06:08.259><c> if</c><00:06:09.219><c> we</c><00:06:09.490><c> remember</c><00:06:09.969><c> back</c><00:06:10.240><c> in</c>

00:06:10.259 --> 00:06:10.269 align:start position:0%
behavioral and if we remember back in
 

00:06:10.269 --> 00:06:12.329 align:start position:0%
behavioral and if we remember back in
physics<00:06:10.719><c> class</c><00:06:10.870><c> we</c><00:06:11.169><c> could</c><00:06:11.259><c> grab</c><00:06:11.709><c> the</c><00:06:11.889><c> graph</c>

00:06:12.329 --> 00:06:12.339 align:start position:0%
physics class we could grab the graph
 

00:06:12.339 --> 00:06:14.129 align:start position:0%
physics class we could grab the graph
this<00:06:12.519><c> is</c><00:06:12.729><c> a</c><00:06:12.759><c> three</c><00:06:12.999><c> dimensional</c><00:06:13.389><c> diagram</c><00:06:13.599><c> and</c>

00:06:14.129 --> 00:06:14.139 align:start position:0%
this is a three dimensional diagram and
 

00:06:14.139 --> 00:06:16.350 align:start position:0%
this is a three dimensional diagram and
different<00:06:15.099><c> kinds</c><00:06:15.459><c> of</c><00:06:15.519><c> releases</c><00:06:15.969><c> have</c>

00:06:16.350 --> 00:06:16.360 align:start position:0%
different kinds of releases have
 

00:06:16.360 --> 00:06:18.269 align:start position:0%
different kinds of releases have
different<00:06:16.899><c> kinds</c><00:06:17.199><c> of</c><00:06:17.259><c> compatibility</c><00:06:17.769><c> regions</c>

00:06:18.269 --> 00:06:18.279 align:start position:0%
different kinds of compatibility regions
 

00:06:18.279 --> 00:06:20.820 align:start position:0%
different kinds of compatibility regions
that<00:06:18.430><c> are</c><00:06:18.519><c> acceptable</c><00:06:18.909><c> so</c><00:06:19.719><c> if</c><00:06:20.050><c> we</c><00:06:20.169><c> take</c><00:06:20.379><c> say</c>

00:06:20.820 --> 00:06:20.830 align:start position:0%
that are acceptable so if we take say
 

00:06:20.830 --> 00:06:22.469 align:start position:0%
that are acceptable so if we take say
the<00:06:21.039><c> security</c><00:06:21.519><c> update</c><00:06:21.789><c> releases</c><00:06:22.269><c> those</c>

00:06:22.469 --> 00:06:22.479 align:start position:0%
the security update releases those
 

00:06:22.479 --> 00:06:25.079 align:start position:0%
the security update releases those
quarterly<00:06:23.169><c> releases</c><00:06:23.439><c> that</c><00:06:23.860><c> come</c><00:06:24.069><c> out</c><00:06:24.219><c> four</c>

00:06:25.079 --> 00:06:25.089 align:start position:0%
quarterly releases that come out four
 

00:06:25.089 --> 00:06:27.119 align:start position:0%
quarterly releases that come out four
times<00:06:25.300><c> a</c><00:06:25.449><c> year</c><00:06:25.509><c> they</c><00:06:26.199><c> have</c><00:06:26.319><c> a</c><00:06:26.379><c> very</c><00:06:26.649><c> small</c>

00:06:27.119 --> 00:06:27.129 align:start position:0%
times a year they have a very small
 

00:06:27.129 --> 00:06:29.100 align:start position:0%
times a year they have a very small
region<00:06:27.339><c> to</c><00:06:27.669><c> make</c><00:06:27.789><c> changes</c><00:06:28.180><c> there's</c><00:06:28.899><c> some</c>

00:06:29.100 --> 00:06:29.110 align:start position:0%
region to make changes there's some
 

00:06:29.110 --> 00:06:30.989 align:start position:0%
region to make changes there's some
behavioral<00:06:29.649><c> change</c><00:06:30.159><c> of</c><00:06:30.309><c> course</c><00:06:30.580><c> because</c><00:06:30.879><c> we</c>

00:06:30.989 --> 00:06:30.999 align:start position:0%
behavioral change of course because we
 

00:06:30.999 --> 00:06:33.059 align:start position:0%
behavioral change of course because we
want<00:06:31.180><c> to</c><00:06:31.269><c> fix</c><00:06:31.689><c> the</c><00:06:31.809><c> vulnerability</c><00:06:31.930><c> and</c><00:06:32.649><c> maybe</c>

00:06:33.059 --> 00:06:33.069 align:start position:0%
want to fix the vulnerability and maybe
 

00:06:33.069 --> 00:06:34.049 align:start position:0%
want to fix the vulnerability and maybe
there's<00:06:33.279><c> a</c><00:06:33.370><c> little</c><00:06:33.580><c> bit</c><00:06:33.729><c> of</c><00:06:33.849><c> source</c>

00:06:34.049 --> 00:06:34.059 align:start position:0%
there's a little bit of source
 

00:06:34.059 --> 00:06:36.899 align:start position:0%
there's a little bit of source
compatibility<00:06:34.719><c> for</c><00:06:34.899><c> a</c><00:06:34.930><c> JDK</c><00:06:35.349><c> specific</c><00:06:35.889><c> API</c><00:06:36.159><c> if</c>

00:06:36.899 --> 00:06:36.909 align:start position:0%
compatibility for a JDK specific API if
 

00:06:36.909 --> 00:06:40.319 align:start position:0%
compatibility for a JDK specific API if
we<00:06:37.479><c> have</c><00:06:37.689><c> a</c><00:06:38.169><c> larger</c><00:06:38.709><c> release</c><00:06:38.949><c> such</c><00:06:39.459><c> as</c><00:06:39.699><c> the</c>

00:06:40.319 --> 00:06:40.329 align:start position:0%
we have a larger release such as the
 

00:06:40.329 --> 00:06:42.719 align:start position:0%
we have a larger release such as the
update<00:06:40.839><c> releases</c><00:06:41.289><c> like</c><00:06:41.499><c> 8</c><00:06:41.680><c> you</c><00:06:41.829><c> xx</c><00:06:42.129><c> and</c><00:06:42.249><c> 8</c><00:06:42.339><c> u</c><00:06:42.459><c> 40</c>

00:06:42.719 --> 00:06:42.729 align:start position:0%
update releases like 8 you xx and 8 u 40
 

00:06:42.729 --> 00:06:43.500 align:start position:0%
update releases like 8 you xx and 8 u 40
the

00:06:43.500 --> 00:06:43.510 align:start position:0%
the
 

00:06:43.510 --> 00:06:45.540 align:start position:0%
the
was<00:06:43.570><c> a</c><00:06:43.600><c> much</c><00:06:43.810><c> larger</c><00:06:44.230><c> so</c><00:06:44.830><c> they</c><00:06:45.010><c> have</c><00:06:45.190><c> more</c><00:06:45.490><c> room</c>

00:06:45.540 --> 00:06:45.550 align:start position:0%
was a much larger so they have more room
 

00:06:45.550 --> 00:06:47.250 align:start position:0%
was a much larger so they have more room
for<00:06:45.730><c> behavioral</c><00:06:46.390><c> change</c><00:06:46.720><c> and</c><00:06:46.990><c> more</c>

00:06:47.250 --> 00:06:47.260 align:start position:0%
for behavioral change and more
 

00:06:47.260 --> 00:06:49.560 align:start position:0%
for behavioral change and more
opportunity<00:06:47.800><c> to</c><00:06:48.040><c> make</c><00:06:48.220><c> source</c><00:06:49.090><c> changes</c>

00:06:49.560 --> 00:06:49.570 align:start position:0%
opportunity to make source changes
 

00:06:49.570 --> 00:06:51.930 align:start position:0%
opportunity to make source changes
however<00:06:50.200><c> in</c><00:06:50.410><c> both</c><00:06:50.500><c> of</c><00:06:50.710><c> these</c><00:06:50.800><c> cases</c><00:06:51.100><c> there</c><00:06:51.790><c> is</c>

00:06:51.930 --> 00:06:51.940 align:start position:0%
however in both of these cases there is
 

00:06:51.940 --> 00:06:53.370 align:start position:0%
however in both of these cases there is
no<00:06:52.120><c> room</c><00:06:52.330><c> for</c><00:06:52.360><c> binary</c><00:06:52.720><c> and</c><00:06:53.020><c> compatible</c>

00:06:53.370 --> 00:06:53.380 align:start position:0%
no room for binary and compatible
 

00:06:53.380 --> 00:06:55.740 align:start position:0%
no room for binary and compatible
changes<00:06:53.740><c> we</c><00:06:53.890><c> don't</c><00:06:54.040><c> want</c><00:06:54.190><c> to</c><00:06:54.310><c> break</c><00:06:55.150><c> people</c><00:06:55.480><c> or</c>

00:06:55.740 --> 00:06:55.750 align:start position:0%
changes we don't want to break people or
 

00:06:55.750 --> 00:06:57.780 align:start position:0%
changes we don't want to break people or
update<00:06:56.140><c> release</c><00:06:56.410><c> because</c><00:06:57.190><c> we</c><00:06:57.280><c> want</c><00:06:57.460><c> people</c><00:06:57.520><c> to</c>

00:06:57.780 --> 00:06:57.790 align:start position:0%
update release because we want people to
 

00:06:57.790 --> 00:06:59.550 align:start position:0%
update release because we want people to
use<00:06:58.120><c> those</c><00:06:58.300><c> update</c><00:06:58.570><c> releases</c><00:06:58.960><c> as</c><00:06:59.200><c> soon</c><00:06:59.470><c> as</c>

00:06:59.550 --> 00:06:59.560 align:start position:0%
use those update releases as soon as
 

00:06:59.560 --> 00:07:02.160 align:start position:0%
use those update releases as soon as
they<00:06:59.680><c> come</c><00:06:59.830><c> out</c><00:07:00.180><c> for</c><00:07:01.180><c> a</c><00:07:01.210><c> platform</c><00:07:01.870><c> release</c>

00:07:02.160 --> 00:07:02.170 align:start position:0%
they come out for a platform release
 

00:07:02.170 --> 00:07:05.670 align:start position:0%
they come out for a platform release
like<00:07:02.590><c> JDK</c><00:07:03.010><c> 8</c><00:07:03.040><c> GA</c><00:07:03.520><c> or</c><00:07:04.000><c> JDK</c><00:07:04.330><c> 9</c><00:07:04.510><c> GA</c><00:07:04.960><c> the</c><00:07:05.170><c> situations</c>

00:07:05.670 --> 00:07:05.680 align:start position:0%
like JDK 8 GA or JDK 9 GA the situations
 

00:07:05.680 --> 00:07:08.940 align:start position:0%
like JDK 8 GA or JDK 9 GA the situations
have<00:07:05.800><c> been</c><00:07:05.830><c> different</c><00:07:06.420><c> there's</c><00:07:07.470><c> the</c><00:07:08.470><c> maximum</c>

00:07:08.940 --> 00:07:08.950 align:start position:0%
have been different there's the maximum
 

00:07:08.950 --> 00:07:10.530 align:start position:0%
have been different there's the maximum
amount<00:07:09.160><c> of</c><00:07:09.250><c> rooms</c><00:07:09.490><c> make</c><00:07:09.700><c> behavioral</c><00:07:10.120><c> changes</c>

00:07:10.530 --> 00:07:10.540 align:start position:0%
amount of rooms make behavioral changes
 

00:07:10.540 --> 00:07:12.450 align:start position:0%
amount of rooms make behavioral changes
and<00:07:10.810><c> more</c><00:07:11.170><c> room</c><00:07:11.290><c> to</c><00:07:11.320><c> make</c><00:07:11.530><c> source</c><00:07:11.800><c> changes</c><00:07:11.980><c> and</c>

00:07:12.450 --> 00:07:12.460 align:start position:0%
and more room to make source changes and
 

00:07:12.460 --> 00:07:15.330 align:start position:0%
and more room to make source changes and
in<00:07:13.210><c> exceptional</c><00:07:13.990><c> circumstances</c><00:07:14.100><c> with</c><00:07:15.100><c> enough</c>

00:07:15.330 --> 00:07:15.340 align:start position:0%
in exceptional circumstances with enough
 

00:07:15.340 --> 00:07:17.130 align:start position:0%
in exceptional circumstances with enough
justification<00:07:16.030><c> there's</c><00:07:16.540><c> even</c><00:07:17.050><c> the</c>

00:07:17.130 --> 00:07:17.140 align:start position:0%
justification there's even the
 

00:07:17.140 --> 00:07:18.630 align:start position:0%
justification there's even the
possibility<00:07:17.170><c> to</c><00:07:17.650><c> make</c><00:07:17.860><c> some</c><00:07:18.280><c> binary</c>

00:07:18.630 --> 00:07:18.640 align:start position:0%
possibility to make some binary
 

00:07:18.640 --> 00:07:20.700 align:start position:0%
possibility to make some binary
incompatible<00:07:19.330><c> changes</c><00:07:19.390><c> I'll</c><00:07:20.230><c> mention</c><00:07:20.440><c> a</c><00:07:20.650><c> few</c>

00:07:20.700 --> 00:07:20.710 align:start position:0%
incompatible changes I'll mention a few
 

00:07:20.710 --> 00:07:22.680 align:start position:0%
incompatible changes I'll mention a few
of<00:07:20.920><c> those</c><00:07:21.040><c> that</c><00:07:21.220><c> were</c><00:07:21.340><c> made</c><00:07:21.490><c> in</c><00:07:21.580><c> JDK</c><00:07:21.910><c> 9</c><00:07:22.090><c> later</c>

00:07:22.680 --> 00:07:22.690 align:start position:0%
of those that were made in JDK 9 later
 

00:07:22.690 --> 00:07:26.130 align:start position:0%
of those that were made in JDK 9 later
in<00:07:22.780><c> the</c><00:07:22.870><c> talk</c><00:07:24.510><c> this</c><00:07:25.510><c> is</c><00:07:25.570><c> an</c><00:07:25.780><c> example</c><00:07:26.020><c> that</c>

00:07:26.130 --> 00:07:26.140 align:start position:0%
in the talk this is an example that
 

00:07:26.140 --> 00:07:27.810 align:start position:0%
in the talk this is an example that
helps<00:07:26.410><c> illustrate</c><00:07:26.590><c> the</c><00:07:27.400><c> compatibility</c>

00:07:27.810 --> 00:07:27.820 align:start position:0%
helps illustrate the compatibility
 

00:07:27.820 --> 00:07:29.670 align:start position:0%
helps illustrate the compatibility
policy<00:07:28.390><c> and</c><00:07:28.600><c> how</c><00:07:28.780><c> applies</c><00:07:29.260><c> to</c><00:07:29.410><c> different</c>

00:07:29.670 --> 00:07:29.680 align:start position:0%
policy and how applies to different
 

00:07:29.680 --> 00:07:31.380 align:start position:0%
policy and how applies to different
releases<00:07:29.860><c> so</c><00:07:30.700><c> if</c><00:07:30.820><c> we</c><00:07:30.940><c> look</c><00:07:31.090><c> at</c><00:07:31.210><c> the</c>

00:07:31.380 --> 00:07:31.390 align:start position:0%
releases so if we look at the
 

00:07:31.390 --> 00:07:33.150 align:start position:0%
releases so if we look at the
specification<00:07:31.990><c> for</c><00:07:32.200><c> hash</c><00:07:32.380><c> that</c><00:07:32.650><c> dot</c><00:07:32.770><c> iterator</c>

00:07:33.150 --> 00:07:33.160 align:start position:0%
specification for hash that dot iterator
 

00:07:33.160 --> 00:07:36.150 align:start position:0%
specification for hash that dot iterator
it<00:07:33.490><c> says</c><00:07:33.760><c> you</c><00:07:34.240><c> get</c><00:07:34.420><c> back</c><00:07:34.540><c> in</c><00:07:34.660><c> iterator</c><00:07:34.990><c> and</c><00:07:35.200><c> the</c>

00:07:36.150 --> 00:07:36.160 align:start position:0%
it says you get back in iterator and the
 

00:07:36.160 --> 00:07:37.500 align:start position:0%
it says you get back in iterator and the
elements<00:07:36.610><c> are</c><00:07:36.700><c> returned</c><00:07:37.000><c> in</c><00:07:37.150><c> no</c><00:07:37.330><c> particular</c>

00:07:37.500 --> 00:07:37.510 align:start position:0%
elements are returned in no particular
 

00:07:37.510 --> 00:07:40.440 align:start position:0%
elements are returned in no particular
order<00:07:38.400><c> that</c><00:07:39.400><c> means</c><00:07:39.580><c> according</c><00:07:40.180><c> to</c><00:07:40.330><c> the</c>

00:07:40.440 --> 00:07:40.450 align:start position:0%
order that means according to the
 

00:07:40.450 --> 00:07:42.890 align:start position:0%
order that means according to the
specification<00:07:41.140><c> we</c><00:07:41.530><c> can</c><00:07:41.740><c> change</c><00:07:41.980><c> the</c>

00:07:42.890 --> 00:07:42.900 align:start position:0%
specification we can change the
 

00:07:42.900 --> 00:07:45.990 align:start position:0%
specification we can change the
iteration<00:07:43.900><c> order</c><00:07:44.200><c> at</c><00:07:44.350><c> any</c><00:07:44.680><c> time</c><00:07:44.950><c> in</c><00:07:45.820><c> any</c>

00:07:45.990 --> 00:07:46.000 align:start position:0%
iteration order at any time in any
 

00:07:46.000 --> 00:07:48.480 align:start position:0%
iteration order at any time in any
release<00:07:46.360><c> and</c><00:07:46.600><c> still</c><00:07:46.960><c> obey</c><00:07:47.680><c> the</c><00:07:47.830><c> specification</c>

00:07:48.480 --> 00:07:48.490 align:start position:0%
release and still obey the specification
 

00:07:48.490 --> 00:07:52.020 align:start position:0%
release and still obey the specification
so<00:07:49.450><c> how</c><00:07:49.840><c> does</c><00:07:49.900><c> this</c><00:07:50.170><c> change</c><00:07:50.790><c> square</c><00:07:51.790><c> with</c><00:07:51.970><c> the</c>

00:07:52.020 --> 00:07:52.030 align:start position:0%
so how does this change square with the
 

00:07:52.030 --> 00:07:53.790 align:start position:0%
so how does this change square with the
compatibility<00:07:52.390><c> policy</c><00:07:52.930><c> well</c><00:07:53.500><c> this</c><00:07:53.620><c> would</c><00:07:53.770><c> be</c>

00:07:53.790 --> 00:07:53.800 align:start position:0%
compatibility policy well this would be
 

00:07:53.800 --> 00:07:55.410 align:start position:0%
compatibility policy well this would be
a<00:07:53.890><c> binary</c><00:07:54.280><c> compatible</c><00:07:54.700><c> change</c><00:07:54.970><c> because</c><00:07:55.300><c> we're</c>

00:07:55.410 --> 00:07:55.420 align:start position:0%
a binary compatible change because we're
 

00:07:55.420 --> 00:07:57.600 align:start position:0%
a binary compatible change because we're
not<00:07:55.510><c> altering</c><00:07:55.960><c> the</c><00:07:56.080><c> set</c><00:07:56.200><c> of</c><00:07:56.320><c> methods</c><00:07:56.620><c> it's</c>

00:07:57.600 --> 00:07:57.610 align:start position:0%
not altering the set of methods it's
 

00:07:57.610 --> 00:07:59.730 align:start position:0%
not altering the set of methods it's
also<00:07:57.790><c> a</c><00:07:57.910><c> source</c><00:07:58.210><c> compatible</c><00:07:58.480><c> change</c><00:07:58.930><c> because</c>

00:07:59.730 --> 00:07:59.740 align:start position:0%
also a source compatible change because
 

00:07:59.740 --> 00:08:01.680 align:start position:0%
also a source compatible change because
the<00:07:59.890><c> compilation</c><00:08:00.220><c> of</c><00:08:00.670><c> a</c><00:08:00.820><c> client</c><00:08:01.420><c> doesn't</c>

00:08:01.680 --> 00:08:01.690 align:start position:0%
the compilation of a client doesn't
 

00:08:01.690 --> 00:08:03.390 align:start position:0%
the compilation of a client doesn't
depend<00:08:02.050><c> on</c><00:08:02.350><c> the</c><00:08:02.410><c> internals</c><00:08:02.950><c> of</c><00:08:03.040><c> the</c><00:08:03.130><c> method</c>

00:08:03.390 --> 00:08:03.400 align:start position:0%
depend on the internals of the method
 

00:08:03.400 --> 00:08:04.620 align:start position:0%
depend on the internals of the method
body<00:08:03.490><c> so</c><00:08:03.760><c> you</c><00:08:03.820><c> can</c><00:08:03.910><c> change</c><00:08:04.150><c> the</c><00:08:04.270><c> method</c><00:08:04.540><c> body</c>

00:08:04.620 --> 00:08:04.630 align:start position:0%
body so you can change the method body
 

00:08:04.630 --> 00:08:05.880 align:start position:0%
body so you can change the method body
and<00:08:04.870><c> that</c><00:08:04.960><c> won't</c><00:08:05.110><c> change</c><00:08:05.170><c> whether</c><00:08:05.560><c> or</c><00:08:05.620><c> not</c><00:08:05.710><c> the</c>

00:08:05.880 --> 00:08:05.890 align:start position:0%
and that won't change whether or not the
 

00:08:05.890 --> 00:08:08.040 align:start position:0%
and that won't change whether or not the
client<00:08:06.160><c> compiles</c><00:08:06.600><c> however</c><00:08:07.600><c> this</c><00:08:07.780><c> is</c><00:08:08.020><c> a</c>

00:08:08.040 --> 00:08:08.050 align:start position:0%
client compiles however this is a
 

00:08:08.050 --> 00:08:10.350 align:start position:0%
client compiles however this is a
behavioral<00:08:08.650><c> compatibility</c><00:08:09.250><c> change</c><00:08:09.490><c> and</c><00:08:10.210><c> we</c>

00:08:10.350 --> 00:08:10.360 align:start position:0%
behavioral compatibility change and we
 

00:08:10.360 --> 00:08:13.140 align:start position:0%
behavioral compatibility change and we
know<00:08:10.480><c> people</c><00:08:10.510><c> can</c><00:08:11.110><c> in</c><00:08:11.380><c> do</c><00:08:11.820><c> implicitly</c><00:08:12.820><c> and</c>

00:08:13.140 --> 00:08:13.150 align:start position:0%
know people can in do implicitly and
 

00:08:13.150 --> 00:08:14.760 align:start position:0%
know people can in do implicitly and
sometimes<00:08:13.570><c> accidentally</c><00:08:14.050><c> rely</c><00:08:14.530><c> on</c><00:08:14.560><c> the</c>

00:08:14.760 --> 00:08:14.770 align:start position:0%
sometimes accidentally rely on the
 

00:08:14.770 --> 00:08:16.830 align:start position:0%
sometimes accidentally rely on the
iteration<00:08:15.190><c> order</c><00:08:15.420><c> therefore</c><00:08:16.420><c> this</c><00:08:16.570><c> is</c><00:08:16.720><c> the</c>

00:08:16.830 --> 00:08:16.840 align:start position:0%
iteration order therefore this is the
 

00:08:16.840 --> 00:08:17.910 align:start position:0%
iteration order therefore this is the
kind<00:08:17.050><c> of</c><00:08:17.110><c> change</c><00:08:17.410><c> that</c><00:08:17.590><c> we</c><00:08:17.710><c> generally</c>

00:08:17.910 --> 00:08:17.920 align:start position:0%
kind of change that we generally
 

00:08:17.920 --> 00:08:19.500 align:start position:0%
kind of change that we generally
wouldn't<00:08:18.280><c> make</c><00:08:18.370><c> an</c><00:08:18.490><c> either</c><00:08:18.730><c> kind</c><00:08:19.030><c> of</c><00:08:19.150><c> update</c>

00:08:19.500 --> 00:08:19.510 align:start position:0%
wouldn't make an either kind of update
 

00:08:19.510 --> 00:08:22.050 align:start position:0%
wouldn't make an either kind of update
release<00:08:19.780><c> but</c><00:08:20.650><c> we</c><00:08:20.770><c> would</c><00:08:21.010><c> make</c><00:08:21.220><c> and</c><00:08:21.460><c> have</c><00:08:21.790><c> made</c>

00:08:22.050 --> 00:08:22.060 align:start position:0%
release but we would make and have made
 

00:08:22.060 --> 00:08:23.940 align:start position:0%
release but we would make and have made
in<00:08:22.180><c> a</c><00:08:22.240><c> platform</c><00:08:22.690><c> releases</c><00:08:23.140><c> and</c><00:08:23.350><c> the</c><00:08:23.680><c> reason</c>

00:08:23.940 --> 00:08:23.950 align:start position:0%
in a platform releases and the reason
 

00:08:23.950 --> 00:08:25.770 align:start position:0%
in a platform releases and the reason
we'd<00:08:24.070><c> make</c><00:08:24.190><c> it</c><00:08:24.220><c> in</c><00:08:24.370><c> a</c><00:08:24.430><c> platform</c><00:08:24.880><c> release</c><00:08:25.150><c> is</c><00:08:25.420><c> to</c>

00:08:25.770 --> 00:08:25.780 align:start position:0%
we'd make it in a platform release is to
 

00:08:25.780 --> 00:08:27.870 align:start position:0%
we'd make it in a platform release is to
take<00:08:26.560><c> advantage</c><00:08:26.680><c> of</c><00:08:27.010><c> say</c><00:08:27.190><c> better</c><00:08:27.430><c> hashing</c>

00:08:27.870 --> 00:08:27.880 align:start position:0%
take advantage of say better hashing
 

00:08:27.880 --> 00:08:32.909 align:start position:0%
take advantage of say better hashing
algorithms<00:08:30.270><c> so</c><00:08:31.270><c> this</c><00:08:31.720><c> is</c><00:08:31.900><c> the</c><00:08:32.080><c> terminology</c>

00:08:32.909 --> 00:08:32.919 align:start position:0%
algorithms so this is the terminology
 

00:08:32.919 --> 00:08:35.850 align:start position:0%
algorithms so this is the terminology
for<00:08:33.790><c> compatibility</c><00:08:34.330><c> just</c><00:08:34.900><c> used</c><00:08:35.140><c> in</c><00:08:35.410><c> the</c><00:08:35.440><c> JDK</c><00:08:35.830><c> 8</c>

00:08:35.850 --> 00:08:35.860 align:start position:0%
for compatibility just used in the JDK 8
 

00:08:35.860 --> 00:08:38.670 align:start position:0%
for compatibility just used in the JDK 8
and<00:08:36.220><c> JDK</c><00:08:36.460><c> 9</c><00:08:37.140><c> release</c><00:08:38.140><c> guides</c><00:08:38.410><c> and</c>

00:08:38.670 --> 00:08:38.680 align:start position:0%
and JDK 9 release guides and
 

00:08:38.680 --> 00:08:40.350 align:start position:0%
and JDK 9 release guides and
compatibility<00:08:39.040><c> documents</c><00:08:39.700><c> so</c><00:08:39.820><c> I</c><00:08:39.849><c> recommend</c>

00:08:40.350 --> 00:08:40.360 align:start position:0%
compatibility documents so I recommend
 

00:08:40.360 --> 00:08:43.230 align:start position:0%
compatibility documents so I recommend
you<00:08:41.130><c> look</c><00:08:42.130><c> at</c><00:08:42.250><c> those</c><00:08:42.430><c> when</c><00:08:42.820><c> you</c><00:08:42.940><c> look</c><00:08:43.120><c> to</c>

00:08:43.230 --> 00:08:43.240 align:start position:0%
you look at those when you look to
 

00:08:43.240 --> 00:08:46.710 align:start position:0%
you look at those when you look to
migrate<00:08:43.599><c> to</c><00:08:43.750><c> those</c><00:08:43.900><c> those</c><00:08:44.229><c> releases</c><00:08:45.570><c> so</c><00:08:46.570><c> how</c>

00:08:46.710 --> 00:08:46.720 align:start position:0%
migrate to those those releases so how
 

00:08:46.720 --> 00:08:49.680 align:start position:0%
migrate to those those releases so how
is<00:08:46.870><c> JDK</c><00:08:47.200><c> 9</c><00:08:47.350><c> different</c><00:08:47.800><c> JDK</c><00:08:48.430><c> 9</c><00:08:48.640><c> follows</c><00:08:49.120><c> this</c>

00:08:49.680 --> 00:08:49.690 align:start position:0%
is JDK 9 different JDK 9 follows this
 

00:08:49.690 --> 00:08:51.150 align:start position:0%
is JDK 9 different JDK 9 follows this
same<00:08:49.960><c> model</c><00:08:50.170><c> of</c><00:08:50.500><c> looking</c><00:08:50.980><c> after</c>

00:08:51.150 --> 00:08:51.160 align:start position:0%
same model of looking after
 

00:08:51.160 --> 00:08:54.240 align:start position:0%
same model of looking after
compatibility<00:08:52.030><c> but</c><00:08:52.840><c> to</c><00:08:53.080><c> support</c><00:08:53.290><c> modularity</c>

00:08:54.240 --> 00:08:54.250 align:start position:0%
compatibility but to support modularity
 

00:08:54.250 --> 00:08:55.710 align:start position:0%
compatibility but to support modularity
a<00:08:54.490><c> larger</c><00:08:55.030><c> compatible</c>

00:08:55.710 --> 00:08:55.720 align:start position:0%
a larger compatible
 

00:08:55.720 --> 00:08:57.450 align:start position:0%
a larger compatible
compatibility<00:08:56.230><c> impact</c><00:08:56.770><c> than</c><00:08:56.980><c> usual</c><00:08:57.310><c> was</c>

00:08:57.450 --> 00:08:57.460 align:start position:0%
compatibility impact than usual was
 

00:08:57.460 --> 00:08:59.520 align:start position:0%
compatibility impact than usual was
allowed<00:08:57.730><c> include</c><00:08:58.570><c> including</c><00:08:59.080><c> some</c><00:08:59.260><c> notable</c>

00:08:59.520 --> 00:08:59.530 align:start position:0%
allowed include including some notable
 

00:08:59.530 --> 00:09:02.280 align:start position:0%
allowed include including some notable
behavioral<00:09:00.190><c> incompatibilities</c><00:09:00.930><c> for</c><00:09:01.930><c> for</c>

00:09:02.280 --> 00:09:02.290 align:start position:0%
behavioral incompatibilities for for
 

00:09:02.290 --> 00:09:04.050 align:start position:0%
behavioral incompatibilities for for
example<00:09:02.710><c> if</c><00:09:02.890><c> you're</c><00:09:03.130><c> using</c><00:09:03.160><c> a</c><00:09:03.550><c> tool</c><00:09:03.820><c> that</c>

00:09:04.050 --> 00:09:04.060 align:start position:0%
example if you're using a tool that
 

00:09:04.060 --> 00:09:07.170 align:start position:0%
example if you're using a tool that
assumes<00:09:04.900><c> the</c><00:09:05.020><c> existence</c><00:09:05.170><c> of</c><00:09:05.560><c> RTR</c><00:09:06.310><c> you'll</c><00:09:07.030><c> have</c>

00:09:07.170 --> 00:09:07.180 align:start position:0%
assumes the existence of RTR you'll have
 

00:09:07.180 --> 00:09:08.700 align:start position:0%
assumes the existence of RTR you'll have
to<00:09:07.300><c> update</c><00:09:07.570><c> to</c><00:09:07.720><c> a</c><00:09:07.750><c> newer</c><00:09:07.960><c> version</c><00:09:08.050><c> of</c><00:09:08.380><c> the</c><00:09:08.440><c> tool</c>

00:09:08.700 --> 00:09:08.710 align:start position:0%
to update to a newer version of the tool
 

00:09:08.710 --> 00:09:11.070 align:start position:0%
to update to a newer version of the tool
that<00:09:09.310><c> doesn't</c><00:09:09.610><c> rely</c><00:09:09.820><c> on</c><00:09:09.940><c> that</c><00:09:10.120><c> because</c><00:09:10.270><c> RTR</c>

00:09:11.070 --> 00:09:11.080 align:start position:0%
that doesn't rely on that because RTR
 

00:09:11.080 --> 00:09:13.500 align:start position:0%
that doesn't rely on that because RTR
has<00:09:11.320><c> gone</c><00:09:11.470><c> away</c><00:09:11.710><c> it's</c><00:09:12.460><c> no</c><00:09:12.640><c> longer</c><00:09:12.850><c> in</c><00:09:13.120><c> the</c><00:09:13.180><c> JDK</c>

00:09:13.500 --> 00:09:13.510 align:start position:0%
has gone away it's no longer in the JDK
 

00:09:13.510 --> 00:09:15.960 align:start position:0%
has gone away it's no longer in the JDK
9<00:09:13.690><c> image</c><00:09:14.320><c> those</c><00:09:14.650><c> that</c><00:09:15.280><c> information</c><00:09:15.700><c> is</c><00:09:15.820><c> stored</c>

00:09:15.960 --> 00:09:15.970 align:start position:0%
9 image those that information is stored
 

00:09:15.970 --> 00:09:19.260 align:start position:0%
9 image those that information is stored
differently<00:09:17.190><c> to</c><00:09:18.190><c> support</c><00:09:18.550><c> modularity</c><00:09:18.940><c> there</c>

00:09:19.260 --> 00:09:19.270 align:start position:0%
differently to support modularity there
 

00:09:19.270 --> 00:09:20.490 align:start position:0%
differently to support modularity there
are<00:09:19.330><c> even</c><00:09:19.480><c> a</c><00:09:19.570><c> few</c><00:09:19.600><c> cases</c><00:09:19.960><c> where</c><00:09:20.110><c> he</c><00:09:20.260><c> broke</c>

00:09:20.490 --> 00:09:20.500 align:start position:0%
are even a few cases where he broke
 

00:09:20.500 --> 00:09:22.650 align:start position:0%
are even a few cases where he broke
binary<00:09:21.040><c> compatibility</c><00:09:21.520><c> there</c><00:09:22.270><c> was</c><00:09:22.510><c> an</c>

00:09:22.650 --> 00:09:22.660 align:start position:0%
binary compatibility there was an
 

00:09:22.660 --> 00:09:25.050 align:start position:0%
binary compatibility there was an
unfortunate<00:09:23.500><c> dependency</c><00:09:24.370><c> between</c><00:09:24.490><c> the</c>

00:09:25.050 --> 00:09:25.060 align:start position:0%
unfortunate dependency between the
 

00:09:25.060 --> 00:09:27.210 align:start position:0%
unfortunate dependency between the
logging<00:09:25.420><c> framework</c><00:09:25.600><c> in</c><00:09:26.170><c> between</c><00:09:26.770><c> Java</c>

00:09:27.210 --> 00:09:27.220 align:start position:0%
logging framework in between Java
 

00:09:27.220 --> 00:09:30.540 align:start position:0%
logging framework in between Java
desktop<00:09:27.490><c> so</c><00:09:28.300><c> we</c><00:09:28.420><c> don't</c><00:09:28.570><c> want</c><00:09:28.720><c> to</c><00:09:28.810><c> suck</c><00:09:29.800><c> in</c><00:09:30.010><c> all</c>

00:09:30.540 --> 00:09:30.550 align:start position:0%
desktop so we don't want to suck in all
 

00:09:30.550 --> 00:09:32.850 align:start position:0%
desktop so we don't want to suck in all
of<00:09:30.790><c> Java</c><00:09:30.970><c> Java</c><00:09:31.630><c> desktop</c><00:09:31.930><c> anytime</c><00:09:32.590><c> you</c><00:09:32.680><c> want</c><00:09:32.830><c> to</c>

00:09:32.850 --> 00:09:32.860 align:start position:0%
of Java Java desktop anytime you want to
 

00:09:32.860 --> 00:09:34.830 align:start position:0%
of Java Java desktop anytime you want to
use<00:09:32.920><c> logging</c><00:09:33.400><c> and</c><00:09:33.550><c> we</c><00:09:34.060><c> fixed</c><00:09:34.360><c> up</c><00:09:34.510><c> I</c><00:09:34.660><c> getting</c>

00:09:34.830 --> 00:09:34.840 align:start position:0%
use logging and we fixed up I getting
 

00:09:34.840 --> 00:09:36.630 align:start position:0%
use logging and we fixed up I getting
rid<00:09:35.140><c> of</c><00:09:35.230><c> these</c><00:09:35.440><c> property</c><00:09:36.040><c> listener</c><00:09:36.310><c> methods</c>

00:09:36.630 --> 00:09:36.640 align:start position:0%
rid of these property listener methods
 

00:09:36.640 --> 00:09:40.080 align:start position:0%
rid of these property listener methods
that<00:09:36.820><c> weren't</c><00:09:37.090><c> crucial</c><00:09:37.660><c> to</c><00:09:37.810><c> the</c><00:09:37.900><c> API</c><00:09:38.940><c> later</c><00:09:39.940><c> on</c>

00:09:40.080 --> 00:09:40.090 align:start position:0%
that weren't crucial to the API later on
 

00:09:40.090 --> 00:09:41.310 align:start position:0%
that weren't crucial to the API later on
in<00:09:40.210><c> the</c><00:09:40.270><c> talk</c><00:09:40.420><c> are</c><00:09:40.600><c> also</c><00:09:40.750><c> talking</c><00:09:41.080><c> about</c><00:09:41.140><c> the</c>

00:09:41.310 --> 00:09:41.320 align:start position:0%
in the talk are also talking about the
 

00:09:41.320 --> 00:09:43.200 align:start position:0%
in the talk are also talking about the
more<00:09:41.500><c> muscular</c><00:09:41.800><c> deprecation</c><00:09:42.490><c> policy</c><00:09:42.520><c> we</c><00:09:43.030><c> have</c>

00:09:43.200 --> 00:09:43.210 align:start position:0%
more muscular deprecation policy we have
 

00:09:43.210 --> 00:09:44.610 align:start position:0%
more muscular deprecation policy we have
with<00:09:43.570><c> better</c><00:09:43.750><c> tools</c><00:09:44.020><c> to</c><00:09:44.230><c> manage</c><00:09:44.380><c> the</c>

00:09:44.610 --> 00:09:44.620 align:start position:0%
with better tools to manage the
 

00:09:44.620 --> 00:09:49.050 align:start position:0%
with better tools to manage the
transition<00:09:45.660><c> going</c><00:09:46.660><c> forward</c><00:09:47.820><c> so</c><00:09:48.820><c> now</c><00:09:48.940><c> we'll</c>

00:09:49.050 --> 00:09:49.060 align:start position:0%
transition going forward so now we'll
 

00:09:49.060 --> 00:09:50.370 align:start position:0%
transition going forward so now we'll
start<00:09:49.150><c> talking</c><00:09:49.450><c> about</c><00:09:49.510><c> some</c><00:09:49.780><c> of</c><00:09:49.870><c> the</c><00:09:49.960><c> tooling</c>

00:09:50.370 --> 00:09:50.380 align:start position:0%
start talking about some of the tooling
 

00:09:50.380 --> 00:09:52.140 align:start position:0%
start talking about some of the tooling
improvements<00:09:50.890><c> and</c><00:09:51.040><c> the</c><00:09:51.730><c> first</c><00:09:51.940><c> of</c><00:09:52.060><c> those</c>

00:09:52.140 --> 00:09:52.150 align:start position:0%
improvements and the first of those
 

00:09:52.150 --> 00:09:56.060 align:start position:0%
improvements and the first of those
tooling<00:09:52.480><c> improvements</c><00:09:52.930><c> is</c><00:09:53.080><c> J</c><00:09:53.740><c> shell</c><00:09:54.840><c> Lisp</c>

00:09:56.060 --> 00:09:56.070 align:start position:0%
tooling improvements is J shell Lisp
 

00:09:56.070 --> 00:09:58.980 align:start position:0%
tooling improvements is J shell Lisp
systems<00:09:57.070><c> have</c><00:09:57.340><c> generally</c><00:09:57.670><c> provided</c><00:09:58.240><c> a</c><00:09:58.390><c> read</c>

00:09:58.980 --> 00:09:58.990 align:start position:0%
systems have generally provided a read
 

00:09:58.990 --> 00:10:01.080 align:start position:0%
systems have generally provided a read
evaluate<00:09:59.650><c> print</c><00:09:59.980><c> loop</c><00:10:00.160><c> as</c><00:10:00.370><c> the</c><00:10:00.430><c> primary</c><00:10:00.850><c> way</c>

00:10:01.080 --> 00:10:01.090 align:start position:0%
evaluate print loop as the primary way
 

00:10:01.090 --> 00:10:02.760 align:start position:0%
evaluate print loop as the primary way
you<00:10:01.240><c> interact</c><00:10:01.600><c> with</c><00:10:01.810><c> that</c><00:10:01.900><c> system</c><00:10:02.320><c> so</c><00:10:02.680><c> you</c>

00:10:02.760 --> 00:10:02.770 align:start position:0%
you interact with that system so you
 

00:10:02.770 --> 00:10:05.160 align:start position:0%
you interact with that system so you
type<00:10:02.950><c> commands</c><00:10:03.280><c> and</c><00:10:03.640><c> system</c><00:10:04.630><c> evaluates</c><00:10:05.110><c> that</c>

00:10:05.160 --> 00:10:05.170 align:start position:0%
type commands and system evaluates that
 

00:10:05.170 --> 00:10:07.020 align:start position:0%
type commands and system evaluates that
it<00:10:05.350><c> gets</c><00:10:05.710><c> back</c><00:10:05.890><c> to</c><00:10:05.920><c> you</c><00:10:06.130><c> similar</c>

00:10:07.020 --> 00:10:07.030 align:start position:0%
it gets back to you similar
 

00:10:07.030 --> 00:10:08.460 align:start position:0%
it gets back to you similar
functionality<00:10:07.480><c> is</c><00:10:07.690><c> found</c><00:10:07.900><c> in</c><00:10:08.050><c> Ruby</c><00:10:08.350><c> and</c>

00:10:08.460 --> 00:10:08.470 align:start position:0%
functionality is found in Ruby and
 

00:10:08.470 --> 00:10:11.550 align:start position:0%
functionality is found in Ruby and
Python<00:10:08.620><c> and</c><00:10:09.070><c> on</c><00:10:09.970><c> the</c><00:10:10.420><c> JVM</c><00:10:10.900><c> ecosystem</c>

00:10:11.550 --> 00:10:11.560 align:start position:0%
Python and on the JVM ecosystem
 

00:10:11.560 --> 00:10:13.980 align:start position:0%
Python and on the JVM ecosystem
languages<00:10:12.010><c> also</c><00:10:12.300><c> Scala</c><00:10:13.300><c> groovy</c><00:10:13.660><c> and</c><00:10:13.750><c> closure</c>

00:10:13.980 --> 00:10:13.990 align:start position:0%
languages also Scala groovy and closure
 

00:10:13.990 --> 00:10:17.340 align:start position:0%
languages also Scala groovy and closure
so<00:10:14.530><c> what</c><00:10:14.680><c> about</c><00:10:14.800><c> Java</c><00:10:15.160><c> well</c><00:10:16.030><c> now</c><00:10:16.360><c> in</c><00:10:16.540><c> jdk</c><00:10:16.870><c> 9</c><00:10:17.050><c> we</c>

00:10:17.340 --> 00:10:17.350 align:start position:0%
so what about Java well now in jdk 9 we
 

00:10:17.350 --> 00:10:18.840 align:start position:0%
so what about Java well now in jdk 9 we
also<00:10:17.500><c> have</c><00:10:17.770><c> a</c><00:10:17.800><c> rebel</c><00:10:18.160><c> and</c><00:10:18.310><c> the</c><00:10:18.400><c> repple</c><00:10:18.670><c> is</c>

00:10:18.840 --> 00:10:18.850 align:start position:0%
also have a rebel and the repple is
 

00:10:18.850 --> 00:10:21.450 align:start position:0%
also have a rebel and the repple is
called<00:10:19.240><c> j</c><00:10:19.420><c> show</c><00:10:19.600><c> I'll</c><00:10:20.290><c> do</c><00:10:20.470><c> a</c><00:10:20.500><c> quick</c><00:10:20.860><c> demo</c><00:10:21.310><c> of</c>

00:10:21.450 --> 00:10:21.460 align:start position:0%
called j show I'll do a quick demo of
 

00:10:21.460 --> 00:10:31.490 align:start position:0%
called j show I'll do a quick demo of
that<00:10:27.420><c> the</c><00:10:28.420><c> right</c><00:10:28.630><c> window</c><00:10:28.960><c> up</c><00:10:29.110><c> here</c>

00:10:31.490 --> 00:10:31.500 align:start position:0%
 
 

00:10:31.500 --> 00:10:33.350 align:start position:0%
 
alright<00:10:32.190><c> so</c><00:10:32.340><c> the</c><00:10:32.430><c> J</c><00:10:32.580><c> shell</c><00:10:32.790><c> is</c><00:10:32.940><c> a</c><00:10:33.000><c> new</c><00:10:33.120><c> command</c>

00:10:33.350 --> 00:10:33.360 align:start position:0%
alright so the J shell is a new command
 

00:10:33.360 --> 00:10:35.090 align:start position:0%
alright so the J shell is a new command
in<00:10:33.510><c> the</c><00:10:33.630><c> JDK</c><00:10:33.900><c> bin</c><00:10:33.930><c> directory</c><00:10:34.320><c> so</c><00:10:34.740><c> we'll</c><00:10:34.920><c> get</c>

00:10:35.090 --> 00:10:35.100 align:start position:0%
in the JDK bin directory so we'll get
 

00:10:35.100 --> 00:10:41.060 align:start position:0%
in the JDK bin directory so we'll get
that<00:10:35.160><c> started</c><00:10:35.490><c> here</c><00:10:35.790><c> so</c><00:10:38.930><c> there</c><00:10:39.930><c> are</c><00:10:40.260><c> commands</c>

00:10:41.060 --> 00:10:41.070 align:start position:0%
that started here so there are commands
 

00:10:41.070 --> 00:10:43.460 align:start position:0%
that started here so there are commands
and<00:10:41.280><c> J</c><00:10:41.370><c> show</c><00:10:41.580><c> of</c><00:10:41.910><c> Eli</c><00:10:42.330><c> backslash</c><00:10:42.840><c> so</c><00:10:43.050><c> we</c><00:10:43.140><c> can</c><00:10:43.320><c> do</c>

00:10:43.460 --> 00:10:43.470 align:start position:0%
and J show of Eli backslash so we can do
 

00:10:43.470 --> 00:10:45.650 align:start position:0%
and J show of Eli backslash so we can do
help<00:10:43.680><c> intro</c><00:10:44.130><c> as</c><00:10:44.310><c> it</c><00:10:44.460><c> suggests</c><00:10:44.610><c> here</c><00:10:45.150><c> and</c><00:10:45.330><c> we</c>

00:10:45.650 --> 00:10:45.660 align:start position:0%
help intro as it suggests here and we
 

00:10:45.660 --> 00:10:48.500 align:start position:0%
help intro as it suggests here and we
get<00:10:45.840><c> some</c><00:10:46.050><c> guidance</c><00:10:46.440><c> on</c><00:10:46.620><c> using</c><00:10:46.650><c> the</c><00:10:47.040><c> tool</c><00:10:47.510><c> but</c>

00:10:48.500 --> 00:10:48.510 align:start position:0%
get some guidance on using the tool but
 

00:10:48.510 --> 00:10:49.580 align:start position:0%
get some guidance on using the tool but
if<00:10:48.870><c> we're</c><00:10:49.050><c> using</c><00:10:49.170><c> a</c><00:10:49.350><c> new</c><00:10:49.440><c> language</c>

00:10:49.580 --> 00:10:49.590 align:start position:0%
if we're using a new language
 

00:10:49.590 --> 00:10:51.110 align:start position:0%
if we're using a new language
environment<00:10:50.220><c> what's</c><00:10:50.370><c> the</c><00:10:50.490><c> first</c><00:10:50.670><c> program</c><00:10:51.030><c> you</c>

00:10:51.110 --> 00:10:51.120 align:start position:0%
environment what's the first program you
 

00:10:51.120 --> 00:10:53.660 align:start position:0%
environment what's the first program you
want<00:10:51.300><c> to</c><00:10:51.390><c> write</c><00:10:51.540><c> hello</c><00:10:52.080><c> world</c><00:10:52.230><c> so</c><00:10:53.040><c> we</c><00:10:53.340><c> can</c><00:10:53.490><c> just</c>

00:10:53.660 --> 00:10:53.670 align:start position:0%
want to write hello world so we can just
 

00:10:53.670 --> 00:10:55.490 align:start position:0%
want to write hello world so we can just
start<00:10:53.790><c> typing</c><00:10:54.090><c> hello</c><00:10:54.510><c> world</c><00:10:54.720><c> here</c><00:10:55.080><c> and</c><00:10:55.260><c> we'll</c>

00:10:55.490 --> 00:10:55.500 align:start position:0%
start typing hello world here and we'll
 

00:10:55.500 --> 00:10:56.240 align:start position:0%
start typing hello world here and we'll
see<00:10:55.650><c> what</c><00:10:55.770><c> happens</c>

00:10:56.240 --> 00:10:56.250 align:start position:0%
see what happens
 

00:10:56.250 --> 00:11:01.010 align:start position:0%
see what happens
now<00:10:56.820><c> we</c><00:10:57.690><c> get</c><00:10:57.840><c> back</c><00:10:57.900><c> hello</c><00:10:58.890><c> world</c><00:10:59.100><c> now</c><00:10:59.660><c> that's</c><00:11:00.660><c> a</c>

00:11:01.010 --> 00:11:01.020 align:start position:0%
now we get back hello world now that's a
 

00:11:01.020 --> 00:11:03.080 align:start position:0%
now we get back hello world now that's a
nice<00:11:01.980><c> thing</c><00:11:02.220><c> to</c><00:11:02.250><c> have</c><00:11:02.340><c> not</c><00:11:02.640><c> not</c><00:11:02.790><c> very</c>

00:11:03.080 --> 00:11:03.090 align:start position:0%
nice thing to have not not very
 

00:11:03.090 --> 00:11:05.180 align:start position:0%
nice thing to have not not very
complicated<00:11:03.450><c> but</c><00:11:03.960><c> notice</c><00:11:04.410><c> we</c><00:11:04.560><c> didn't</c><00:11:04.830><c> have</c><00:11:04.980><c> to</c>

00:11:05.180 --> 00:11:05.190 align:start position:0%
complicated but notice we didn't have to
 

00:11:05.190 --> 00:11:06.860 align:start position:0%
complicated but notice we didn't have to
deal<00:11:05.550><c> with</c><00:11:05.730><c> public</c><00:11:06.030><c> static</c><00:11:06.330><c> void</c><00:11:06.360><c> main</c><00:11:06.510><c> string</c>

00:11:06.860 --> 00:11:06.870 align:start position:0%
deal with public static void main string
 

00:11:06.870 --> 00:11:08.870 align:start position:0%
deal with public static void main string
all<00:11:07.680><c> those</c><00:11:07.860><c> things</c><00:11:08.130><c> so</c><00:11:08.310><c> if</c><00:11:08.400><c> you</c><00:11:08.430><c> just</c><00:11:08.610><c> want</c><00:11:08.820><c> to</c>

00:11:08.870 --> 00:11:08.880 align:start position:0%
all those things so if you just want to
 

00:11:08.880 --> 00:11:10.250 align:start position:0%
all those things so if you just want to
do<00:11:08.970><c> some</c><00:11:09.090><c> informal</c><00:11:09.420><c> program</c><00:11:09.690><c> and</c><00:11:09.810><c> get</c><00:11:09.900><c> started</c>

00:11:10.250 --> 00:11:10.260 align:start position:0%
do some informal program and get started
 

00:11:10.260 --> 00:11:11.810 align:start position:0%
do some informal program and get started
you<00:11:10.740><c> can</c><00:11:10.770><c> do</c><00:11:11.070><c> it</c><00:11:11.220><c> right</c><00:11:11.610><c> away</c>

00:11:11.810 --> 00:11:11.820 align:start position:0%
you can do it right away
 

00:11:11.820 --> 00:11:13.970 align:start position:0%
you can do it right away
so<00:11:12.450><c> besides</c><00:11:12.600><c> expressions</c><00:11:13.290><c> we</c><00:11:13.440><c> can</c><00:11:13.620><c> define</c>

00:11:13.970 --> 00:11:13.980 align:start position:0%
so besides expressions we can define
 

00:11:13.980 --> 00:11:16.430 align:start position:0%
so besides expressions we can define
variables<00:11:14.850><c> in</c><00:11:15.270><c> J</c><00:11:15.480><c> show</c><00:11:15.720><c> so</c><00:11:15.990><c> let's</c><00:11:16.170><c> say</c><00:11:16.290><c> we</c>

00:11:16.430 --> 00:11:16.440 align:start position:0%
variables in J show so let's say we
 

00:11:16.440 --> 00:11:18.890 align:start position:0%
variables in J show so let's say we
wanted<00:11:16.710><c> to</c><00:11:16.770><c> find</c><00:11:16.980><c> a</c><00:11:17.420><c> double</c><00:11:18.420><c> variable</c><00:11:18.750><c> named</c>

00:11:18.890 --> 00:11:18.900 align:start position:0%
wanted to find a double variable named
 

00:11:18.900 --> 00:11:20.600 align:start position:0%
wanted to find a double variable named
tau<00:11:19.170><c> when</c><00:11:19.470><c> you</c><00:11:19.530><c> want</c><00:11:19.710><c> that</c><00:11:19.770><c> to</c><00:11:20.010><c> be</c><00:11:20.130><c> equal</c><00:11:20.370><c> to</c>

00:11:20.600 --> 00:11:20.610 align:start position:0%
tau when you want that to be equal to
 

00:11:20.610 --> 00:11:23.390 align:start position:0%
tau when you want that to be equal to
twice<00:11:20.820><c> pi</c><00:11:21.120><c> so</c><00:11:22.020><c> we</c><00:11:22.290><c> know</c><00:11:22.530><c> there</c><00:11:23.010><c> is</c><00:11:23.130><c> a</c><00:11:23.160><c> pi</c>

00:11:23.390 --> 00:11:23.400 align:start position:0%
twice pi so we know there is a pi
 

00:11:23.400 --> 00:11:26.090 align:start position:0%
twice pi so we know there is a pi
constant<00:11:24.000><c> in</c><00:11:24.120><c> the</c><00:11:24.210><c> math</c><00:11:24.390><c> class</c><00:11:24.690><c> so</c><00:11:24.930><c> we</c><00:11:25.140><c> start</c>

00:11:26.090 --> 00:11:26.100 align:start position:0%
constant in the math class so we start
 

00:11:26.100 --> 00:11:29.000 align:start position:0%
constant in the math class so we start
typing<00:11:26.790><c> math</c><00:11:27.270><c> we</c><00:11:27.660><c> can</c><00:11:27.690><c> get</c><00:11:28.050><c> autocomplete</c><00:11:28.770><c> here</c>

00:11:29.000 --> 00:11:29.010 align:start position:0%
typing math we can get autocomplete here
 

00:11:29.010 --> 00:11:30.830 align:start position:0%
typing math we can get autocomplete here
these<00:11:29.430><c> are</c><00:11:29.610><c> the</c><00:11:29.730><c> alternatives</c><00:11:30.240><c> so</c><00:11:30.510><c> we</c><00:11:30.690><c> can</c>

00:11:30.830 --> 00:11:30.840 align:start position:0%
these are the alternatives so we can
 

00:11:30.840 --> 00:11:33.410 align:start position:0%
these are the alternatives so we can
pick<00:11:30.990><c> math</c><00:11:31.230><c> and</c><00:11:31.590><c> then</c><00:11:32.280><c> if</c><00:11:32.580><c> we</c><00:11:32.790><c> look</c><00:11:32.820><c> in</c><00:11:33.150><c> math</c>

00:11:33.410 --> 00:11:33.420 align:start position:0%
pick math and then if we look in math
 

00:11:33.420 --> 00:11:35.930 align:start position:0%
pick math and then if we look in math
where<00:11:33.720><c> the</c><00:11:33.840><c> variables</c><00:11:34.740><c> begin</c><00:11:34.980><c> with</c><00:11:35.160><c> P</c><00:11:35.340><c> we</c><00:11:35.610><c> see</c>

00:11:35.930 --> 00:11:35.940 align:start position:0%
where the variables begin with P we see
 

00:11:35.940 --> 00:11:38.600 align:start position:0%
where the variables begin with P we see
there's<00:11:36.120><c> pi</c><00:11:36.330><c> there</c><00:11:36.570><c> and</c><00:11:37.020><c> if</c><00:11:37.410><c> we</c><00:11:37.530><c> hit</c><00:11:37.680><c> tab</c><00:11:37.950><c> a</c><00:11:38.250><c> few</c>

00:11:38.600 --> 00:11:38.610 align:start position:0%
there's pi there and if we hit tab a few
 

00:11:38.610 --> 00:11:43.400 align:start position:0%
there's pi there and if we hit tab a few
more<00:11:38.760><c> times</c><00:11:39.000><c> we'll</c><00:11:39.840><c> see</c><00:11:39.900><c> that</c><00:11:41.960><c> we</c><00:11:42.960><c> can</c><00:11:43.170><c> get</c><00:11:43.260><c> the</c>

00:11:43.400 --> 00:11:43.410 align:start position:0%
more times we'll see that we can get the
 

00:11:43.410 --> 00:11:45.140 align:start position:0%
more times we'll see that we can get the
documentation<00:11:43.860><c> for</c><00:11:44.190><c> pi</c><00:11:44.340><c> and</c><00:11:44.640><c> we</c><00:11:44.760><c> can</c><00:11:44.910><c> see</c><00:11:45.060><c> it</c>

00:11:45.140 --> 00:11:45.150 align:start position:0%
documentation for pi and we can see it
 

00:11:45.150 --> 00:11:49.540 align:start position:0%
documentation for pi and we can see it
is<00:11:45.240><c> indeed</c><00:11:45.540><c> the</c><00:11:45.810><c> constant</c><00:11:46.650><c> we're</c><00:11:46.740><c> looking</c><00:11:46.980><c> for</c>

00:11:49.540 --> 00:11:49.550 align:start position:0%
 
 

00:11:49.550 --> 00:11:51.770 align:start position:0%
 
course<00:11:50.550><c> fields</c><00:11:50.910><c> aren't</c><00:11:51.090><c> very</c><00:11:51.210><c> interesting</c><00:11:51.300><c> on</c>

00:11:51.770 --> 00:11:51.780 align:start position:0%
course fields aren't very interesting on
 

00:11:51.780 --> 00:11:54.290 align:start position:0%
course fields aren't very interesting on
the<00:11:52.250><c> by</c><00:11:53.250><c> themselves</c><00:11:53.610><c> you</c><00:11:53.640><c> also</c><00:11:53.820><c> want</c><00:11:54.000><c> method</c>

00:11:54.290 --> 00:11:54.300 align:start position:0%
the by themselves you also want method
 

00:11:54.300 --> 00:11:56.270 align:start position:0%
the by themselves you also want method
so<00:11:54.570><c> we</c><00:11:54.720><c> can</c><00:11:54.900><c> say</c><00:11:55.410><c> define</c><00:11:55.770><c> a</c><00:11:55.800><c> method</c><00:11:55.980><c> name</c>

00:11:56.270 --> 00:11:56.280 align:start position:0%
so we can say define a method name
 

00:11:56.280 --> 00:11:59.120 align:start position:0%
so we can say define a method name
square<00:11:56.310><c> that</c><00:11:57.030><c> takes</c><00:11:57.660><c> a</c><00:11:57.780><c> double</c><00:11:58.050><c> and</c><00:11:58.260><c> returns</c>

00:11:59.120 --> 00:11:59.130 align:start position:0%
square that takes a double and returns
 

00:11:59.130 --> 00:12:06.350 align:start position:0%
square that takes a double and returns
the<00:11:59.340><c> square</c><00:11:59.430><c> of</c><00:11:59.670><c> it</c>

00:12:06.350 --> 00:12:06.360 align:start position:0%
 
 

00:12:06.360 --> 00:12:10.049 align:start position:0%
 
in<00:12:07.360><c> besides</c><00:12:08.050><c> Auto</c><00:12:08.290><c> completing</c><00:12:08.800><c> on</c><00:12:09.059><c> elements</c>

00:12:10.049 --> 00:12:10.059 align:start position:0%
in besides Auto completing on elements
 

00:12:10.059 --> 00:12:12.499 align:start position:0%
in besides Auto completing on elements
of<00:12:10.119><c> the</c><00:12:10.209><c> JDK</c><00:12:10.389><c> we</c><00:12:10.749><c> can</c><00:12:10.869><c> also</c><00:12:11.019><c> autocomplete</c><00:12:11.649><c> on</c>

00:12:12.499 --> 00:12:12.509 align:start position:0%
of the JDK we can also autocomplete on
 

00:12:12.509 --> 00:12:14.609 align:start position:0%
of the JDK we can also autocomplete on
fields<00:12:13.509><c> and</c><00:12:13.660><c> methods</c><00:12:13.930><c> we've</c><00:12:14.290><c> defined</c>

00:12:14.609 --> 00:12:14.619 align:start position:0%
fields and methods we've defined
 

00:12:14.619 --> 00:12:17.699 align:start position:0%
fields and methods we've defined
ourselves<00:12:15.129><c> so</c><00:12:15.309><c> we</c><00:12:15.550><c> can</c><00:12:15.579><c> say</c><00:12:16.059><c> take</c><00:12:16.420><c> the</c><00:12:17.350><c> square</c>

00:12:17.699 --> 00:12:17.709 align:start position:0%
ourselves so we can say take the square
 

00:12:17.709 --> 00:12:27.929 align:start position:0%
ourselves so we can say take the square
of<00:12:20.850><c> the</c><00:12:21.850><c> sine</c><00:12:22.209><c> of</c><00:12:22.240><c> tau</c><00:12:22.679><c> autocomplete</c><00:12:26.759><c> and</c><00:12:27.759><c> we</c>

00:12:27.929 --> 00:12:27.939 align:start position:0%
of the sine of tau autocomplete and we
 

00:12:27.939 --> 00:12:29.879 align:start position:0%
of the sine of tau autocomplete and we
have<00:12:28.119><c> some</c><00:12:28.389><c> command</c><00:12:28.660><c> line</c><00:12:28.839><c> editing</c><00:12:29.259><c> so</c><00:12:29.499><c> we</c><00:12:29.679><c> can</c>

00:12:29.879 --> 00:12:29.889 align:start position:0%
have some command line editing so we can
 

00:12:29.889 --> 00:12:32.280 align:start position:0%
have some command line editing so we can
cut<00:12:30.309><c> and</c><00:12:30.429><c> paste</c><00:12:30.459><c> that</c><00:12:30.790><c> so</c><00:12:31.119><c> if</c><00:12:31.209><c> we</c><00:12:31.360><c> square</c><00:12:32.139><c> the</c>

00:12:32.280 --> 00:12:32.290 align:start position:0%
cut and paste that so if we square the
 

00:12:32.290 --> 00:12:33.960 align:start position:0%
cut and paste that so if we square the
sign<00:12:32.499><c> in</c><00:12:32.829><c> square</c><00:12:33.069><c> the</c><00:12:33.220><c> cosine</c><00:12:33.550><c> is</c><00:12:33.670><c> something</c>

00:12:33.960 --> 00:12:33.970 align:start position:0%
sign in square the cosine is something
 

00:12:33.970 --> 00:12:35.549 align:start position:0%
sign in square the cosine is something
we<00:12:34.059><c> should</c><00:12:34.089><c> get</c><00:12:34.360><c> something</c><00:12:34.569><c> close</c><00:12:34.839><c> to</c><00:12:34.869><c> one</c><00:12:35.170><c> and</c>

00:12:35.549 --> 00:12:35.559 align:start position:0%
we should get something close to one and
 

00:12:35.559 --> 00:12:37.369 align:start position:0%
we should get something close to one and
that<00:12:36.160><c> is</c><00:12:36.279><c> indeed</c><00:12:36.459><c> what</c><00:12:36.670><c> we</c><00:12:36.910><c> get</c><00:12:37.029><c> in</c><00:12:37.119><c> this</c><00:12:37.209><c> case</c>

00:12:37.369 --> 00:12:37.379 align:start position:0%
that is indeed what we get in this case
 

00:12:37.379 --> 00:12:44.220 align:start position:0%
that is indeed what we get in this case
and<00:12:38.379><c> then</c><00:12:38.529><c> we</c><00:12:38.619><c> can</c><00:12:38.800><c> exit</c><00:12:39.519><c> out</c><00:12:39.610><c> of</c><00:12:39.670><c> the</c><00:12:39.759><c> show</c><00:12:43.230><c> so</c>

00:12:44.220 --> 00:12:44.230 align:start position:0%
and then we can exit out of the show so
 

00:12:44.230 --> 00:12:47.160 align:start position:0%
and then we can exit out of the show so
going<00:12:44.470><c> back</c><00:12:44.829><c> to</c><00:12:45.009><c> the</c><00:12:45.100><c> slides</c><00:12:45.369><c> here</c><00:12:45.519><c> so</c><00:12:45.959><c> this</c><00:12:46.959><c> is</c>

00:12:47.160 --> 00:12:47.170 align:start position:0%
going back to the slides here so this is
 

00:12:47.170 --> 00:12:48.509 align:start position:0%
going back to the slides here so this is
good<00:12:47.319><c> for</c><00:12:47.499><c> students</c><00:12:47.800><c> there's</c><00:12:48.009><c> less</c><00:12:48.160><c> ceremony</c>

00:12:48.509 --> 00:12:48.519 align:start position:0%
good for students there's less ceremony
 

00:12:48.519 --> 00:12:50.189 align:start position:0%
good for students there's less ceremony
getting<00:12:48.759><c> started</c><00:12:49.119><c> but</c><00:12:49.300><c> J</c><00:12:49.449><c> shell</c><00:12:49.660><c> is</c><00:12:49.779><c> not</c><00:12:49.809><c> just</c>

00:12:50.189 --> 00:12:50.199 align:start position:0%
getting started but J shell is not just
 

00:12:50.199 --> 00:12:52.230 align:start position:0%
getting started but J shell is not just
for<00:12:50.470><c> novice</c><00:12:50.980><c> programmers</c><00:12:51.550><c> it's</c><00:12:51.790><c> helpful</c><00:12:52.059><c> for</c>

00:12:52.230 --> 00:12:52.240 align:start position:0%
for novice programmers it's helpful for
 

00:12:52.240 --> 00:12:54.359 align:start position:0%
for novice programmers it's helpful for
experienced<00:12:52.839><c> programmers</c><00:12:53.319><c> too</c><00:12:53.499><c> if</c><00:12:54.040><c> you</c><00:12:54.220><c> want</c>

00:12:54.359 --> 00:12:54.369 align:start position:0%
experienced programmers too if you want
 

00:12:54.369 --> 00:12:56.009 align:start position:0%
experienced programmers too if you want
to<00:12:54.459><c> start</c><00:12:54.610><c> exploring</c><00:12:54.850><c> using</c><00:12:55.089><c> a</c><00:12:55.240><c> new</c><00:12:55.360><c> API</c><00:12:55.660><c> like</c>

00:12:56.009 --> 00:12:56.019 align:start position:0%
to start exploring using a new API like
 

00:12:56.019 --> 00:12:59.009 align:start position:0%
to start exploring using a new API like
the<00:12:56.110><c> new</c><00:12:56.199><c> API</c><00:12:56.499><c> is</c><00:12:56.589><c> in</c><00:12:56.889><c> a</c><00:12:57.249><c> JDK</c><00:12:57.579><c> 9</c><00:12:57.759><c> I</c><00:12:57.999><c> found</c><00:12:58.600><c> J</c>

00:12:59.009 --> 00:12:59.019 align:start position:0%
the new API is in a JDK 9 I found J
 

00:12:59.019 --> 00:13:01.079 align:start position:0%
the new API is in a JDK 9 I found J
shell<00:12:59.259><c> helpful</c><00:12:59.619><c> myself</c><00:12:59.980><c> and</c><00:13:00.220><c> help</c><00:13:00.610><c> publicly</c>

00:13:01.079 --> 00:13:01.089 align:start position:0%
shell helpful myself and help publicly
 

00:13:01.089 --> 00:13:03.989 align:start position:0%
shell helpful myself and help publicly
prepare<00:13:01.360><c> for</c><00:13:01.540><c> this</c><00:13:01.720><c> and</c><00:13:02.019><c> other</c><00:13:02.589><c> talks</c><00:13:02.860><c> so</c><00:13:03.790><c> J</c>

00:13:03.989 --> 00:13:03.999 align:start position:0%
prepare for this and other talks so J
 

00:13:03.999 --> 00:13:05.939 align:start position:0%
prepare for this and other talks so J
shell<00:13:04.179><c> has</c><00:13:04.389><c> snippets</c><00:13:04.779><c> those</c><00:13:05.139><c> expressions</c><00:13:05.709><c> as</c>

00:13:05.939 --> 00:13:05.949 align:start position:0%
shell has snippets those expressions as
 

00:13:05.949 --> 00:13:08.400 align:start position:0%
shell has snippets those expressions as
well<00:13:06.009><c> as</c><00:13:06.339><c> Java</c><00:13:06.910><c> commands</c><00:13:07.269><c> the</c><00:13:08.050><c> J</c><00:13:08.230><c> shell</c>

00:13:08.400 --> 00:13:08.410 align:start position:0%
well as Java commands the J shell
 

00:13:08.410 --> 00:13:10.199 align:start position:0%
well as Java commands the J shell
implementation<00:13:09.129><c> is</c><00:13:09.370><c> interesting</c><00:13:10.059><c> it</c>

00:13:10.199 --> 00:13:10.209 align:start position:0%
implementation is interesting it
 

00:13:10.209 --> 00:13:12.509 align:start position:0%
implementation is interesting it
leverages<00:13:10.600><c> many</c><00:13:10.959><c> existing</c><00:13:11.259><c> JDK</c><00:13:11.769><c> technologies</c>

00:13:12.509 --> 00:13:12.519 align:start position:0%
leverages many existing JDK technologies
 

00:13:12.519 --> 00:13:14.280 align:start position:0%
leverages many existing JDK technologies
including<00:13:13.059><c> the</c><00:13:13.149><c> compiler</c><00:13:13.540><c> API</c><00:13:13.809><c> and</c><00:13:14.199><c> the</c>

00:13:14.280 --> 00:13:14.290 align:start position:0%
including the compiler API and the
 

00:13:14.290 --> 00:13:16.139 align:start position:0%
including the compiler API and the
debugger<00:13:14.559><c> API</c><00:13:14.889><c> and</c><00:13:15.220><c> there's</c><00:13:15.670><c> a</c><00:13:15.730><c> user's</c><00:13:16.029><c> guide</c>

00:13:16.139 --> 00:13:16.149 align:start position:0%
debugger API and there's a user's guide
 

00:13:16.149 --> 00:13:18.749 align:start position:0%
debugger API and there's a user's guide
to<00:13:16.329><c> help</c><00:13:16.480><c> get</c><00:13:16.629><c> started</c><00:13:16.959><c> now</c><00:13:17.889><c> while</c><00:13:18.309><c> we</c><00:13:18.429><c> might</c>

00:13:18.749 --> 00:13:18.759 align:start position:0%
to help get started now while we might
 

00:13:18.759 --> 00:13:21.179 align:start position:0%
to help get started now while we might
not<00:13:18.819><c> have</c><00:13:18.999><c> Taco</c><00:13:19.749><c> Tuesday</c><00:13:20.170><c> at</c><00:13:20.350><c> JavaOne</c><00:13:20.649><c> we</c><00:13:21.040><c> do</c>

00:13:21.179 --> 00:13:21.189 align:start position:0%
not have Taco Tuesday at JavaOne we do
 

00:13:21.189 --> 00:13:23.639 align:start position:0%
not have Taco Tuesday at JavaOne we do
have<00:13:21.339><c> J</c><00:13:21.519><c> shell</c><00:13:21.699><c> Wednesday</c><00:13:22.089><c> so</c><00:13:23.019><c> tomorrow</c><00:13:23.379><c> there</c>

00:13:23.639 --> 00:13:23.649 align:start position:0%
have J shell Wednesday so tomorrow there
 

00:13:23.649 --> 00:13:26.249 align:start position:0%
have J shell Wednesday so tomorrow there
are<00:13:23.679><c> 4</c><00:13:24.160><c> talks</c><00:13:24.429><c> about</c><00:13:24.550><c> J</c><00:13:24.910><c> shell</c><00:13:25.149><c> the</c><00:13:25.870><c> first</c><00:13:26.110><c> of</c>

00:13:26.249 --> 00:13:26.259 align:start position:0%
are 4 talks about J shell the first of
 

00:13:26.259 --> 00:13:28.559 align:start position:0%
are 4 talks about J shell the first of
these<00:13:26.350><c> is</c><00:13:26.649><c> by</c><00:13:26.829><c> Robert</c><00:13:27.459><c> field</c><00:13:27.879><c> who</c><00:13:28.240><c> is</c><00:13:28.389><c> the</c>

00:13:28.559 --> 00:13:28.569 align:start position:0%
these is by Robert field who is the
 

00:13:28.569 --> 00:13:30.720 align:start position:0%
these is by Robert field who is the
architect<00:13:28.899><c> and</c><00:13:29.350><c> lead</c><00:13:29.679><c> engineer</c><00:13:30.160><c> of</c><00:13:30.339><c> J</c><00:13:30.490><c> shell</c>

00:13:30.720 --> 00:13:30.730 align:start position:0%
architect and lead engineer of J shell
 

00:13:30.730 --> 00:13:33.900 align:start position:0%
architect and lead engineer of J shell
and<00:13:31.389><c> if</c><00:13:31.629><c> Robert</c><00:13:31.959><c> hears</c><00:13:32.290><c> you</c><00:13:32.920><c> like</c><00:13:33.129><c> J</c><00:13:33.370><c> shell</c><00:13:33.639><c> he</c>

00:13:33.900 --> 00:13:33.910 align:start position:0%
and if Robert hears you like J shell he
 

00:13:33.910 --> 00:13:36.720 align:start position:0%
and if Robert hears you like J shell he
might<00:13:34.089><c> show</c><00:13:34.300><c> you</c><00:13:34.360><c> how</c><00:13:34.629><c> to</c><00:13:34.829><c> invoke</c><00:13:35.829><c> a</c><00:13:36.040><c> nested</c><00:13:36.550><c> J</c>

00:13:36.720 --> 00:13:36.730 align:start position:0%
might show you how to invoke a nested J
 

00:13:36.730 --> 00:13:39.360 align:start position:0%
might show you how to invoke a nested J
shell<00:13:36.999><c> from</c><00:13:37.449><c> within</c><00:13:37.629><c> J</c><00:13:37.929><c> shell</c><00:13:38.199><c> so</c><00:13:38.980><c> you</c><00:13:39.040><c> can</c><00:13:39.220><c> use</c>

00:13:39.360 --> 00:13:39.370 align:start position:0%
shell from within J shell so you can use
 

00:13:39.370 --> 00:13:41.730 align:start position:0%
shell from within J shell so you can use
a<00:13:39.399><c> ripple</c><00:13:39.790><c> while</c><00:13:40.059><c> you're</c><00:13:40.209><c> using</c><00:13:40.329><c> a</c><00:13:40.540><c> ripple</c><00:13:40.809><c> so</c>

00:13:41.730 --> 00:13:41.740 align:start position:0%
a ripple while you're using a ripple so
 

00:13:41.740 --> 00:13:42.929 align:start position:0%
a ripple while you're using a ripple so
and<00:13:41.920><c> if</c><00:13:41.980><c> you</c><00:13:42.069><c> don't</c><00:13:42.220><c> catch</c><00:13:42.370><c> Robert</c><00:13:42.730><c> stock</c>

00:13:42.929 --> 00:13:42.939 align:start position:0%
and if you don't catch Robert stock
 

00:13:42.939 --> 00:13:46.350 align:start position:0%
and if you don't catch Robert stock
there's<00:13:43.209><c> other</c><00:13:43.569><c> ones</c><00:13:43.779><c> to</c><00:13:43.929><c> catch</c><00:13:44.019><c> here</c><00:13:45.300><c> next</c><00:13:46.300><c> we</c>

00:13:46.350 --> 00:13:46.360 align:start position:0%
there's other ones to catch here next we
 

00:13:46.360 --> 00:13:50.249 align:start position:0%
there's other ones to catch here next we
talk<00:13:46.509><c> about</c><00:13:46.689><c> a</c><00:13:46.720><c> few</c><00:13:46.899><c> changes</c><00:13:47.199><c> in</c><00:13:47.579><c> Javadoc</c><00:13:49.259><c> so</c>

00:13:50.249 --> 00:13:50.259 align:start position:0%
talk about a few changes in Javadoc so
 

00:13:50.259 --> 00:13:52.230 align:start position:0%
talk about a few changes in Javadoc so
for<00:13:50.470><c> many</c><00:13:50.589><c> years</c><00:13:50.649><c> a</c><00:13:50.980><c> Java</c><00:13:51.490><c> doc</c><00:13:51.670><c> has</c><00:13:51.879><c> output</c>

00:13:52.230 --> 00:13:52.240 align:start position:0%
for many years a Java doc has output
 

00:13:52.240 --> 00:13:55.799 align:start position:0%
for many years a Java doc has output
HTML<00:13:52.779><c> 401</c><00:13:53.049><c> a</c><00:13:53.679><c> few</c><00:13:54.220><c> years</c><00:13:54.399><c> ago</c><00:13:54.549><c> html5</c><00:13:55.389><c> was</c><00:13:55.569><c> a</c><00:13:55.629><c> new</c>

00:13:55.799 --> 00:13:55.809 align:start position:0%
HTML 401 a few years ago html5 was a new
 

00:13:55.809 --> 00:13:58.350 align:start position:0%
HTML 401 a few years ago html5 was a new
standard<00:13:56.259><c> and</c><00:13:56.410><c> now</c><00:13:57.009><c> Java</c><00:13:57.370><c> doc</c><00:13:57.549><c> has</c><00:13:57.730><c> a</c><00:13:57.759><c> option</c>

00:13:58.350 --> 00:13:58.360 align:start position:0%
standard and now Java doc has a option
 

00:13:58.360 --> 00:14:00.689 align:start position:0%
standard and now Java doc has a option
to<00:13:58.480><c> output</c><00:13:58.870><c> html5</c><00:13:59.559><c> instead</c><00:14:00.189><c> of</c><00:14:00.279><c> the</c><00:14:00.459><c> older</c>

00:14:00.689 --> 00:14:00.699 align:start position:0%
to output html5 instead of the older
 

00:14:00.699 --> 00:14:03.619 align:start position:0%
to output html5 instead of the older
HTML<00:14:01.119><c> 4.01</c><00:14:01.540><c> and</c><00:14:01.899><c> this</c><00:14:02.439><c> is</c><00:14:02.589><c> the</c><00:14:02.679><c> version</c><00:14:02.980><c> of</c>

00:14:03.619 --> 00:14:03.629 align:start position:0%
HTML 4.01 and this is the version of
 

00:14:03.629 --> 00:14:06.299 align:start position:0%
HTML 4.01 and this is the version of
HTML<00:14:04.629><c> we</c><00:14:04.869><c> use</c><00:14:05.049><c> for</c><00:14:05.290><c> the</c><00:14:05.379><c> jdk</c><00:14:05.679><c> documentation</c>

00:14:06.299 --> 00:14:06.309 align:start position:0%
HTML we use for the jdk documentation
 

00:14:06.309 --> 00:14:09.900 align:start position:0%
HTML we use for the jdk documentation
now<00:14:07.559><c> people</c><00:14:08.559><c> might</c><00:14:08.649><c> have</c><00:14:08.799><c> seen</c><00:14:09.040><c> the</c><00:14:09.429><c> doc</c><00:14:09.639><c> lint</c>

00:14:09.900 --> 00:14:09.910 align:start position:0%
now people might have seen the doc lint
 

00:14:09.910 --> 00:14:13.410 align:start position:0%
now people might have seen the doc lint
checks<00:14:10.600><c> in</c><00:14:10.809><c> JDK</c><00:14:11.619><c> 8</c><00:14:11.649><c> these</c><00:14:12.490><c> are</c><00:14:12.759><c> checks</c><00:14:13.089><c> you</c><00:14:13.269><c> can</c>

00:14:13.410 --> 00:14:13.420 align:start position:0%
checks in JDK 8 these are checks you can
 

00:14:13.420 --> 00:14:15.960 align:start position:0%
checks in JDK 8 these are checks you can
run<00:14:13.569><c> from</c><00:14:13.899><c> Java</c><00:14:14.499><c> doc</c><00:14:14.740><c> or</c><00:14:15.009><c> from</c><00:14:15.220><c> Java</c><00:14:15.459><c> C</c><00:14:15.699><c> to</c>

00:14:15.960 --> 00:14:15.970 align:start position:0%
run from Java doc or from Java C to
 

00:14:15.970 --> 00:14:18.330 align:start position:0%
run from Java doc or from Java C to
validate<00:14:16.389><c> the</c><00:14:16.689><c> Java</c><00:14:17.439><c> doc</c><00:14:17.589><c> comments</c>

00:14:18.330 --> 00:14:18.340 align:start position:0%
validate the Java doc comments
 

00:14:18.340 --> 00:14:20.250 align:start position:0%
validate the Java doc comments
we<00:14:18.670><c> added</c><00:14:18.820><c> some</c><00:14:18.970><c> more</c><00:14:19.210><c> configuration</c><00:14:19.840><c> options</c>

00:14:20.250 --> 00:14:20.260 align:start position:0%
we added some more configuration options
 

00:14:20.260 --> 00:14:23.250 align:start position:0%
we added some more configuration options
to<00:14:20.410><c> dockland</c><00:14:20.920><c> in</c><00:14:21.340><c> particular</c><00:14:21.880><c> to</c><00:14:22.260><c> select</c>

00:14:23.250 --> 00:14:23.260 align:start position:0%
to dockland in particular to select
 

00:14:23.260 --> 00:14:24.630 align:start position:0%
to dockland in particular to select
which<00:14:23.440><c> packages</c><00:14:23.920><c> you</c><00:14:24.040><c> want</c><00:14:24.190><c> the</c><00:14:24.279><c> checks</c><00:14:24.520><c> to</c>

00:14:24.630 --> 00:14:24.640 align:start position:0%
which packages you want the checks to
 

00:14:24.640 --> 00:14:26.910 align:start position:0%
which packages you want the checks to
apply<00:14:24.940><c> to</c><00:14:25.000><c> so</c><00:14:25.900><c> in</c><00:14:26.020><c> the</c><00:14:26.110><c> JDK</c><00:14:26.470><c> build</c><00:14:26.740><c> for</c>

00:14:26.910 --> 00:14:26.920 align:start position:0%
apply to so in the JDK build for
 

00:14:26.920 --> 00:14:29.100 align:start position:0%
apply to so in the JDK build for
instance<00:14:27.250><c> we</c><00:14:27.400><c> primarily</c><00:14:27.880><c> checked</c><00:14:28.210><c> the</c><00:14:28.420><c> Java</c>

00:14:29.100 --> 00:14:29.110 align:start position:0%
instance we primarily checked the Java
 

00:14:29.110 --> 00:14:31.740 align:start position:0%
instance we primarily checked the Java
and<00:14:29.380><c> Java</c><00:14:29.620><c> X</c><00:14:29.860><c> packages</c><00:14:30.460><c> because</c><00:14:31.300><c> we</c><00:14:31.420><c> want</c><00:14:31.600><c> the</c>

00:14:31.740 --> 00:14:31.750 align:start position:0%
and Java X packages because we want the
 

00:14:31.750 --> 00:14:33.570 align:start position:0%
and Java X packages because we want the
documentation<00:14:32.350><c> we</c><00:14:32.470><c> published</c><00:14:32.860><c> to</c><00:14:33.040><c> be</c><00:14:33.250><c> free</c><00:14:33.460><c> of</c>

00:14:33.570 --> 00:14:33.580 align:start position:0%
documentation we published to be free of
 

00:14:33.580 --> 00:14:36.780 align:start position:0%
documentation we published to be free of
these<00:14:33.670><c> sorts</c><00:14:34.180><c> of</c><00:14:34.210><c> problems</c><00:14:35.339><c> the</c><00:14:36.339><c> document</c>

00:14:36.780 --> 00:14:36.790 align:start position:0%
these sorts of problems the document
 

00:14:36.790 --> 00:14:39.870 align:start position:0%
these sorts of problems the document
checks<00:14:37.060><c> range</c><00:14:37.720><c> from</c><00:14:38.170><c> the</c><00:14:38.350><c> syntax</c><00:14:38.860><c> of</c><00:14:39.100><c> the</c><00:14:39.460><c> HTML</c>

00:14:39.870 --> 00:14:39.880 align:start position:0%
checks range from the syntax of the HTML
 

00:14:39.880 --> 00:14:41.730 align:start position:0%
checks range from the syntax of the HTML
tags<00:14:40.089><c> their</c><00:14:40.420><c> semantics</c><00:14:40.930><c> and</c><00:14:41.110><c> you</c><00:14:41.350><c> can</c><00:14:41.500><c> enable</c>

00:14:41.730 --> 00:14:41.740 align:start position:0%
tags their semantics and you can enable
 

00:14:41.740 --> 00:14:43.470 align:start position:0%
tags their semantics and you can enable
and<00:14:42.070><c> disable</c><00:14:42.190><c> them</c><00:14:42.520><c> individually</c><00:14:43.180><c> if</c><00:14:43.360><c> you</c>

00:14:43.470 --> 00:14:43.480 align:start position:0%
and disable them individually if you
 

00:14:43.480 --> 00:14:45.510 align:start position:0%
and disable them individually if you
haven't<00:14:43.810><c> finished</c><00:14:44.589><c> clearing</c><00:14:44.830><c> one</c><00:14:45.070><c> category</c>

00:14:45.510 --> 00:14:45.520 align:start position:0%
haven't finished clearing one category
 

00:14:45.520 --> 00:14:49.740 align:start position:0%
haven't finished clearing one category
of<00:14:45.610><c> warnings</c><00:14:45.910><c> from</c><00:14:46.450><c> your</c><00:14:46.570><c> build</c><00:14:46.720><c> yet</c><00:14:48.450><c> in</c><00:14:49.450><c> terms</c>

00:14:49.740 --> 00:14:49.750 align:start position:0%
of warnings from your build yet in terms
 

00:14:49.750 --> 00:14:52.019 align:start position:0%
of warnings from your build yet in terms
of<00:14:49.870><c> the</c><00:14:49.930><c> implementation</c><00:14:50.620><c> of</c><00:14:50.770><c> the</c><00:14:50.920><c> doclet</c><00:14:51.339><c> the</c>

00:14:52.019 --> 00:14:52.029 align:start position:0%
of the implementation of the doclet the
 

00:14:52.029 --> 00:14:54.650 align:start position:0%
of the implementation of the doclet the
doclet<00:14:52.660><c> api</c><00:14:52.930><c> is</c><00:14:53.050><c> very</c><00:14:53.589><c> old</c><00:14:53.830><c> it</c><00:14:54.100><c> leads</c><00:14:54.279><c> back</c><00:14:54.460><c> to</c>

00:14:54.650 --> 00:14:54.660 align:start position:0%
doclet api is very old it leads back to
 

00:14:54.660 --> 00:14:58.200 align:start position:0%
doclet api is very old it leads back to
or<00:14:55.660><c> very</c><00:14:56.200><c> early</c><00:14:56.260><c> jdk</c><00:14:56.920><c> s</c><00:14:56.980><c> and</c><00:14:57.279><c> with</c><00:14:57.820><c> the</c><00:14:57.910><c> benefit</c>

00:14:58.200 --> 00:14:58.210 align:start position:0%
or very early jdk s and with the benefit
 

00:14:58.210 --> 00:15:00.930 align:start position:0%
or very early jdk s and with the benefit
of<00:14:58.300><c> hindsight</c><00:14:58.510><c> the</c><00:14:59.190><c> API</c><00:15:00.190><c> modeling</c><00:15:00.640><c> the</c><00:15:00.730><c> Java</c>

00:15:00.930 --> 00:15:00.940 align:start position:0%
of hindsight the API modeling the Java
 

00:15:00.940 --> 00:15:03.630 align:start position:0%
of hindsight the API modeling the Java
language<00:15:01.150><c> could</c><00:15:01.930><c> be</c><00:15:01.960><c> improved</c><00:15:02.490><c> since</c><00:15:03.490><c> the</c>

00:15:03.630 --> 00:15:03.640 align:start position:0%
language could be improved since the
 

00:15:03.640 --> 00:15:05.220 align:start position:0%
language could be improved since the
doclet<00:15:03.970><c> API</c><00:15:04.240><c> we</c><00:15:04.480><c> actually</c><00:15:04.810><c> have</c><00:15:04.930><c> several</c>

00:15:05.220 --> 00:15:05.230 align:start position:0%
doclet API we actually have several
 

00:15:05.230 --> 00:15:07.560 align:start position:0%
doclet API we actually have several
other<00:15:05.410><c> reflective</c><00:15:05.980><c> api's</c><00:15:06.339><c> and</c><00:15:06.580><c> the</c><00:15:06.640><c> platform</c>

00:15:07.560 --> 00:15:07.570 align:start position:0%
other reflective api's and the platform
 

00:15:07.570 --> 00:15:09.480 align:start position:0%
other reflective api's and the platform
that<00:15:07.690><c> are</c><00:15:07.750><c> better</c><00:15:07.960><c> suited</c><00:15:08.080><c> to</c><00:15:08.380><c> allow</c><00:15:08.710><c> language</c>

00:15:09.480 --> 00:15:09.490 align:start position:0%
that are better suited to allow language
 

00:15:09.490 --> 00:15:10.110 align:start position:0%
that are better suited to allow language
evolution

00:15:10.110 --> 00:15:10.120 align:start position:0%
evolution
 

00:15:10.120 --> 00:15:12.329 align:start position:0%
evolution
so<00:15:10.480><c> we've</c><00:15:10.660><c> reimplemented</c><00:15:11.290><c> the</c><00:15:12.010><c> standard</c>

00:15:12.329 --> 00:15:12.339 align:start position:0%
so we've reimplemented the standard
 

00:15:12.339 --> 00:15:14.850 align:start position:0%
so we've reimplemented the standard
doclet<00:15:12.670><c> on</c><00:15:12.970><c> top</c><00:15:13.480><c> of</c><00:15:13.630><c> a</c><00:15:13.720><c> job</c><00:15:13.930><c> X</c><00:15:14.110><c> Lion</c><00:15:14.350><c> Model</c><00:15:14.589><c> API</c>

00:15:14.850 --> 00:15:14.860 align:start position:0%
doclet on top of a job X Lion Model API
 

00:15:14.860 --> 00:15:17.160 align:start position:0%
doclet on top of a job X Lion Model API
which<00:15:15.190><c> is</c><00:15:15.339><c> supported</c><00:15:15.760><c> in</c><00:15:16.089><c> the</c><00:15:16.210><c> compiler</c><00:15:16.540><c> so</c>

00:15:17.160 --> 00:15:17.170 align:start position:0%
which is supported in the compiler so
 

00:15:17.170 --> 00:15:19.740 align:start position:0%
which is supported in the compiler so
this<00:15:17.380><c> gives</c><00:15:18.010><c> us</c><00:15:18.070><c> a</c><00:15:18.220><c> better</c><00:15:18.400><c> base</c><00:15:18.700><c> for</c><00:15:19.300><c> a</c><00:15:19.570><c> Java</c>

00:15:19.740 --> 00:15:19.750 align:start position:0%
this gives us a better base for a Java
 

00:15:19.750 --> 00:15:23.400 align:start position:0%
this gives us a better base for a Java
doc<00:15:19.930><c> improvements</c><00:15:20.800><c> going</c><00:15:21.010><c> forward</c><00:15:22.410><c> another</c>

00:15:23.400 --> 00:15:23.410 align:start position:0%
doc improvements going forward another
 

00:15:23.410 --> 00:15:25.829 align:start position:0%
doc improvements going forward another
feature<00:15:23.680><c> we</c><00:15:23.830><c> have</c><00:15:23.860><c> is</c><00:15:24.430><c> a</c><00:15:24.700><c> javac</c><00:15:25.150><c> search</c><00:15:25.390><c> and</c>

00:15:25.829 --> 00:15:25.839 align:start position:0%
feature we have is a javac search and
 

00:15:25.839 --> 00:15:32.840 align:start position:0%
feature we have is a javac search and
I'll<00:15:26.140><c> go</c><00:15:26.380><c> back</c><00:15:26.530><c> to</c><00:15:26.770><c> do</c><00:15:26.890><c> a</c><00:15:26.920><c> demo</c><00:15:27.220><c> of</c><00:15:27.400><c> that</c>

00:15:32.840 --> 00:15:32.850 align:start position:0%
 
 

00:15:32.850 --> 00:15:35.310 align:start position:0%
 
so<00:15:33.850><c> this</c><00:15:34.000><c> is</c><00:15:34.120><c> a</c><00:15:34.150><c> download</c><00:15:34.630><c> of</c><00:15:34.660><c> the</c><00:15:34.840><c> JDK</c><00:15:35.020><c> nine</c>

00:15:35.310 --> 00:15:35.320 align:start position:0%
so this is a download of the JDK nine
 

00:15:35.320 --> 00:15:37.980 align:start position:0%
so this is a download of the JDK nine
Javadoc<00:15:36.160><c> there</c><00:15:36.340><c> are</c><00:15:36.400><c> few</c><00:15:36.550><c> changes</c><00:15:36.820><c> to</c><00:15:37.420><c> notice</c>

00:15:37.980 --> 00:15:37.990 align:start position:0%
Javadoc there are few changes to notice
 

00:15:37.990 --> 00:15:40.170 align:start position:0%
Javadoc there are few changes to notice
one<00:15:38.860><c> is</c><00:15:39.010><c> that</c><00:15:39.250><c> it's</c><00:15:39.460><c> divided</c><00:15:39.820><c> in</c><00:15:39.940><c> a</c><00:15:40.000><c> few</c>

00:15:40.170 --> 00:15:40.180 align:start position:0%
one is that it's divided in a few
 

00:15:40.180 --> 00:15:42.060 align:start position:0%
one is that it's divided in a few
sections<00:15:40.420><c> that</c><00:15:40.780><c> are</c><00:15:40.840><c> just</c><00:15:41.020><c> analyzed</c><00:15:41.500><c> Java</c><00:15:41.740><c> SE</c>

00:15:42.060 --> 00:15:42.070 align:start position:0%
sections that are just analyzed Java SE
 

00:15:42.070 --> 00:15:44.190 align:start position:0%
sections that are just analyzed Java SE
documentation<00:15:42.850><c> there's</c><00:15:43.390><c> also</c><00:15:43.570><c> documentation</c>

00:15:44.190 --> 00:15:44.200 align:start position:0%
documentation there's also documentation
 

00:15:44.200 --> 00:15:46.650 align:start position:0%
documentation there's also documentation
for<00:15:44.590><c> JDK</c><00:15:45.040><c> specific</c><00:15:45.550><c> classes</c><00:15:46.000><c> as</c><00:15:46.180><c> well</c><00:15:46.330><c> as</c><00:15:46.390><c> Java</c>

00:15:46.650 --> 00:15:46.660 align:start position:0%
for JDK specific classes as well as Java
 

00:15:46.660 --> 00:15:51.900 align:start position:0%
for JDK specific classes as well as Java
FX<00:15:47.160><c> altogether</c><00:15:48.300><c> the</c><00:15:50.160><c> frames</c><00:15:51.160><c> view</c><00:15:51.520><c> is</c><00:15:51.700><c> still</c>

00:15:51.900 --> 00:15:51.910 align:start position:0%
FX altogether the frames view is still
 

00:15:51.910 --> 00:15:53.400 align:start position:0%
FX altogether the frames view is still
available<00:15:52.060><c> but</c><00:15:52.420><c> it's</c><00:15:52.540><c> not</c><00:15:52.690><c> the</c><00:15:52.810><c> default</c><00:15:53.110><c> and</c>

00:15:53.400 --> 00:15:53.410 align:start position:0%
available but it's not the default and
 

00:15:53.410 --> 00:15:54.900 align:start position:0%
available but it's not the default and
if<00:15:53.560><c> we</c><00:15:53.680><c> scroll</c><00:15:53.950><c> down</c><00:15:54.190><c> we'll</c><00:15:54.460><c> see</c><00:15:54.670><c> that</c><00:15:54.700><c> the</c>

00:15:54.900 --> 00:15:54.910 align:start position:0%
if we scroll down we'll see that the
 

00:15:54.910 --> 00:15:57.240 align:start position:0%
if we scroll down we'll see that the
primary<00:15:55.330><c> organization</c><00:15:55.960><c> is</c><00:15:56.140><c> done</c><00:15:56.470><c> by</c><00:15:56.680><c> modules</c>

00:15:57.240 --> 00:15:57.250 align:start position:0%
primary organization is done by modules
 

00:15:57.250 --> 00:15:59.910 align:start position:0%
primary organization is done by modules
so<00:15:57.880><c> we</c><00:15:57.970><c> have</c><00:15:58.090><c> all</c><00:15:58.210><c> the</c><00:15:58.330><c> Java</c><00:15:58.510><c> C</c><00:15:58.750><c> modules</c><00:15:59.230><c> then</c>

00:15:59.910 --> 00:15:59.920 align:start position:0%
so we have all the Java C modules then
 

00:15:59.920 --> 00:16:02.160 align:start position:0%
so we have all the Java C modules then
the<00:16:00.040><c> modules</c><00:16:00.460><c> that</c><00:16:00.550><c> are</c><00:16:00.790><c> in</c><00:16:01.060><c> the</c><00:16:01.240><c> JDK</c><00:16:01.600><c> and</c><00:16:01.960><c> so</c>

00:16:02.160 --> 00:16:02.170 align:start position:0%
the modules that are in the JDK and so
 

00:16:02.170 --> 00:16:02.660 align:start position:0%
the modules that are in the JDK and so
forth

00:16:02.660 --> 00:16:02.670 align:start position:0%
forth
 

00:16:02.670 --> 00:16:05.580 align:start position:0%
forth
and<00:16:03.670><c> at</c><00:16:04.330><c> the</c><00:16:04.450><c> top</c><00:16:04.660><c> right</c><00:16:04.930><c> hand</c><00:16:05.050><c> corner</c><00:16:05.170><c> we</c><00:16:05.470><c> have</c>

00:16:05.580 --> 00:16:05.590 align:start position:0%
and at the top right hand corner we have
 

00:16:05.590 --> 00:16:07.410 align:start position:0%
and at the top right hand corner we have
a<00:16:05.620><c> search</c><00:16:05.830><c> box</c><00:16:06.070><c> so</c><00:16:06.820><c> let's</c><00:16:07.060><c> say</c><00:16:07.210><c> we're</c>

00:16:07.410 --> 00:16:07.420 align:start position:0%
a search box so let's say we're
 

00:16:07.420 --> 00:16:09.080 align:start position:0%
a search box so let's say we're
interested<00:16:07.840><c> in</c><00:16:07.900><c> finding</c><00:16:08.230><c> more</c><00:16:08.380><c> about</c><00:16:08.440><c> math</c>

00:16:09.080 --> 00:16:09.090 align:start position:0%
interested in finding more about math
 

00:16:09.090 --> 00:16:16.710 align:start position:0%
interested in finding more about math
this<00:16:10.090><c> is</c><00:16:10.150><c> a</c><00:16:10.300><c> math</c><00:16:14.130><c> so</c><00:16:15.130><c> we</c><00:16:15.370><c> we</c><00:16:15.610><c> see</c><00:16:15.820><c> here</c><00:16:16.180><c> that</c><00:16:16.450><c> we</c>

00:16:16.710 --> 00:16:16.720 align:start position:0%
this is a math so we we see here that we
 

00:16:16.720 --> 00:16:19.350 align:start position:0%
this is a math so we we see here that we
get<00:16:17.020><c> back</c><00:16:17.230><c> search</c><00:16:18.130><c> results</c><00:16:18.640><c> over</c><00:16:19.000><c> package</c>

00:16:19.350 --> 00:16:19.360 align:start position:0%
get back search results over package
 

00:16:19.360 --> 00:16:21.540 align:start position:0%
get back search results over package
names<00:16:19.630><c> as</c><00:16:19.930><c> well</c><00:16:20.170><c> as</c><00:16:20.260><c> type</c><00:16:20.470><c> names</c><00:16:20.740><c> and</c><00:16:21.070><c> field</c>

00:16:21.540 --> 00:16:21.550 align:start position:0%
names as well as type names and field
 

00:16:21.550 --> 00:16:24.680 align:start position:0%
names as well as type names and field
names<00:16:21.760><c> and</c><00:16:22.000><c> from</c><00:16:22.990><c> here</c><00:16:23.290><c> we</c><00:16:23.530><c> can</c><00:16:23.770><c> navigate</c><00:16:24.370><c> to</c>

00:16:24.680 --> 00:16:24.690 align:start position:0%
names and from here we can navigate to
 

00:16:24.690 --> 00:16:28.620 align:start position:0%
names and from here we can navigate to
those<00:16:25.690><c> sorts</c><00:16:25.960><c> of</c><00:16:26.020><c> things</c><00:16:26.200><c> now</c><00:16:27.270><c> we</c><00:16:28.270><c> know</c><00:16:28.510><c> in</c>

00:16:28.620 --> 00:16:28.630 align:start position:0%
those sorts of things now we know in
 

00:16:28.630 --> 00:16:30.210 align:start position:0%
those sorts of things now we know in
Java<00:16:28.810><c> sometimes</c><00:16:29.320><c> the</c><00:16:29.470><c> names</c><00:16:29.650><c> are</c><00:16:29.800><c> very</c><00:16:29.830><c> long</c>

00:16:30.210 --> 00:16:30.220 align:start position:0%
Java sometimes the names are very long
 

00:16:30.220 --> 00:16:32.070 align:start position:0%
Java sometimes the names are very long
that<00:16:30.460><c> that's</c><00:16:30.700><c> part</c><00:16:30.970><c> of</c><00:16:31.000><c> the</c><00:16:31.090><c> convention</c><00:16:31.540><c> so</c><00:16:31.750><c> if</c>

00:16:32.070 --> 00:16:32.080 align:start position:0%
that that's part of the convention so if
 

00:16:32.080 --> 00:16:34.320 align:start position:0%
that that's part of the convention so if
we<00:16:32.200><c> wanted</c><00:16:32.530><c> to</c><00:16:32.860><c> find</c><00:16:33.100><c> say</c><00:16:33.400><c> the</c><00:16:33.520><c> equals</c><00:16:34.000><c> ignore</c>

00:16:34.320 --> 00:16:34.330 align:start position:0%
we wanted to find say the equals ignore
 

00:16:34.330 --> 00:16:36.060 align:start position:0%
we wanted to find say the equals ignore
case<00:16:34.600><c> method</c><00:16:34.870><c> that</c><00:16:35.590><c> would</c><00:16:35.710><c> be</c><00:16:35.800><c> a</c><00:16:35.830><c> lot</c><00:16:35.980><c> of</c>

00:16:36.060 --> 00:16:36.070 align:start position:0%
case method that would be a lot of
 

00:16:36.070 --> 00:16:37.290 align:start position:0%
case method that would be a lot of
typing<00:16:36.430><c> but</c><00:16:36.610><c> we</c><00:16:36.730><c> actually</c><00:16:36.850><c> don't</c><00:16:37.090><c> have</c><00:16:37.240><c> to</c>

00:16:37.290 --> 00:16:37.300 align:start position:0%
typing but we actually don't have to
 

00:16:37.300 --> 00:16:39.960 align:start position:0%
typing but we actually don't have to
type<00:16:37.510><c> that</c><00:16:37.540><c> all</c><00:16:37.810><c> out</c><00:16:38.220><c> because</c><00:16:39.220><c> the</c><00:16:39.640><c> Java</c><00:16:39.850><c> doc</c>

00:16:39.960 --> 00:16:39.970 align:start position:0%
type that all out because the Java doc
 

00:16:39.970 --> 00:16:41.940 align:start position:0%
type that all out because the Java doc
Search<00:16:40.240><c> reports</c><00:16:40.480><c> camelcase</c><00:16:41.050><c> sirs</c><00:16:41.380><c> so</c><00:16:41.740><c> if</c><00:16:41.830><c> you</c>

00:16:41.940 --> 00:16:41.950 align:start position:0%
Search reports camelcase sirs so if you
 

00:16:41.950 --> 00:16:45.810 align:start position:0%
Search reports camelcase sirs so if you
start<00:16:42.160><c> typing</c><00:16:42.280><c> EQ</c><00:16:42.970><c> and</c><00:16:43.260><c> then</c><00:16:44.260><c> IG</c><00:16:44.890><c> we</c><00:16:45.280><c> can</c><00:16:45.550><c> get</c>

00:16:45.810 --> 00:16:45.820 align:start position:0%
start typing EQ and then IG we can get
 

00:16:45.820 --> 00:16:48.540 align:start position:0%
start typing EQ and then IG we can get
the<00:16:46.260><c> equals</c><00:16:47.260><c> of</c><00:16:47.350><c> North</c><00:16:47.530><c> ignore</c><00:16:48.130><c> case</c><00:16:48.310><c> method</c>

00:16:48.540 --> 00:16:48.550 align:start position:0%
the equals of North ignore case method
 

00:16:48.550 --> 00:16:52.410 align:start position:0%
the equals of North ignore case method
straight<00:16:49.450><c> away</c><00:16:50.460><c> all</c><00:16:51.460><c> right</c><00:16:51.640><c> we'll</c><00:16:51.880><c> go</c><00:16:52.000><c> back</c><00:16:52.180><c> to</c>

00:16:52.410 --> 00:16:52.420 align:start position:0%
straight away all right we'll go back to
 

00:16:52.420 --> 00:16:56.480 align:start position:0%
straight away all right we'll go back to
the<00:16:52.540><c> slides</c>

00:16:56.480 --> 00:16:56.490 align:start position:0%
 
 

00:16:56.490 --> 00:16:59.000 align:start position:0%
 
so<00:16:57.060><c> the</c><00:16:57.360><c> implementation</c><00:16:57.570><c> is</c><00:16:58.050><c> in</c><00:16:58.200><c> JavaScript</c>

00:16:59.000 --> 00:16:59.010 align:start position:0%
so the implementation is in JavaScript
 

00:16:59.010 --> 00:17:01.430 align:start position:0%
so the implementation is in JavaScript
in<00:16:59.820><c> the</c><00:17:00.210><c> client</c><00:17:00.600><c> so</c><00:17:00.780><c> you</c><00:17:00.810><c> don't</c><00:17:01.020><c> have</c><00:17:01.140><c> to</c><00:17:01.290><c> go</c><00:17:01.380><c> to</c>

00:17:01.430 --> 00:17:01.440 align:start position:0%
in the client so you don't have to go to
 

00:17:01.440 --> 00:17:03.140 align:start position:0%
in the client so you don't have to go to
the<00:17:01.560><c> server</c><00:17:01.740><c> for</c><00:17:01.950><c> that</c><00:17:02.100><c> if</c><00:17:02.370><c> you</c><00:17:02.910><c> wanted</c><00:17:03.090><c> to</c>

00:17:03.140 --> 00:17:03.150 align:start position:0%
the server for that if you wanted to
 

00:17:03.150 --> 00:17:04.730 align:start position:0%
the server for that if you wanted to
find<00:17:03.330><c> your</c><00:17:03.450><c> own</c><00:17:03.600><c> index</c><00:17:03.930><c> terms</c><00:17:04.200><c> there's</c><00:17:04.440><c> a</c><00:17:04.500><c> tag</c>

00:17:04.730 --> 00:17:04.740 align:start position:0%
find your own index terms there's a tag
 

00:17:04.740 --> 00:17:06.050 align:start position:0%
find your own index terms there's a tag
to<00:17:04.950><c> allow</c><00:17:05.070><c> you</c><00:17:05.130><c> to</c><00:17:05.220><c> do</c><00:17:05.370><c> that</c><00:17:05.520><c> as</c><00:17:05.640><c> well</c>

00:17:06.050 --> 00:17:06.060 align:start position:0%
to allow you to do that as well
 

00:17:06.060 --> 00:17:08.120 align:start position:0%
to allow you to do that as well
what<00:17:06.900><c> it</c><00:17:06.990><c> does</c><00:17:07.110><c> currently</c><00:17:07.530><c> is</c><00:17:07.620><c> it</c><00:17:07.740><c> indexes</c>

00:17:08.120 --> 00:17:08.130 align:start position:0%
what it does currently is it indexes
 

00:17:08.130 --> 00:17:10.010 align:start position:0%
what it does currently is it indexes
over<00:17:08.250><c> the</c><00:17:08.459><c> names</c><00:17:08.640><c> of</c><00:17:08.940><c> the</c><00:17:09.120><c> you</c><00:17:09.450><c> know</c><00:17:09.480><c> modules</c>

00:17:10.010 --> 00:17:10.020 align:start position:0%
over the names of the you know modules
 

00:17:10.020 --> 00:17:12.640 align:start position:0%
over the names of the you know modules
packages<00:17:10.530><c> types</c><00:17:10.950><c> and</c><00:17:11.220><c> fields</c><00:17:11.490><c> and</c><00:17:11.700><c> so</c><00:17:11.820><c> forth</c>

00:17:12.640 --> 00:17:12.650 align:start position:0%
packages types and fields and so forth
 

00:17:12.650 --> 00:17:15.620 align:start position:0%
packages types and fields and so forth
the<00:17:13.650><c> next</c><00:17:13.800><c> two</c><00:17:13.980><c> features</c><00:17:14.370><c> will</c><00:17:14.580><c> are</c><00:17:15.360><c> designed</c>

00:17:15.620 --> 00:17:15.630 align:start position:0%
the next two features will are designed
 

00:17:15.630 --> 00:17:18.020 align:start position:0%
the next two features will are designed
to<00:17:15.720><c> ease</c><00:17:15.839><c> getting</c><00:17:16.230><c> from</c><00:17:16.440><c> one</c><00:17:16.800><c> JDK</c><00:17:17.339><c> release</c><00:17:17.790><c> to</c>

00:17:18.020 --> 00:17:18.030 align:start position:0%
to ease getting from one JDK release to
 

00:17:18.030 --> 00:17:19.880 align:start position:0%
to ease getting from one JDK release to
another<00:17:18.270><c> the</c><00:17:18.959><c> first</c><00:17:19.230><c> of</c><00:17:19.380><c> these</c><00:17:19.470><c> is</c><00:17:19.530><c> cross</c>

00:17:19.880 --> 00:17:19.890 align:start position:0%
another the first of these is cross
 

00:17:19.890 --> 00:17:22.400 align:start position:0%
another the first of these is cross
compiling<00:17:20.310><c> with</c><00:17:20.670><c> the</c><00:17:20.850><c> -</c><00:17:21.240><c> -</c><00:17:21.510><c> release</c><00:17:21.959><c> flag</c><00:17:22.170><c> -</c>

00:17:22.400 --> 00:17:22.410 align:start position:0%
compiling with the - - release flag -
 

00:17:22.410 --> 00:17:26.090 align:start position:0%
compiling with the - - release flag -
Java<00:17:22.589><c> C</c><00:17:23.720><c> so</c><00:17:24.720><c> for</c><00:17:24.959><c> many</c><00:17:25.080><c> years</c><00:17:25.350><c> the</c><00:17:25.800><c> advice</c><00:17:26.070><c> of</c>

00:17:26.090 --> 00:17:26.100 align:start position:0%
Java C so for many years the advice of
 

00:17:26.100 --> 00:17:28.970 align:start position:0%
Java C so for many years the advice of
the<00:17:26.339><c> Java</c><00:17:26.550><c> C</c><00:17:26.760><c> mamta</c><00:17:27.120><c> age</c><00:17:27.270><c> and</c><00:17:27.510><c> in</c><00:17:27.600><c> blogs</c><00:17:27.870><c> i</c><00:17:28.380><c> I've</c>

00:17:28.970 --> 00:17:28.980 align:start position:0%
the Java C mamta age and in blogs i I've
 

00:17:28.980 --> 00:17:30.890 align:start position:0%
the Java C mamta age and in blogs i I've
written<00:17:29.190><c> and</c><00:17:29.430><c> others</c><00:17:29.610><c> have</c><00:17:29.760><c> written</c><00:17:29.790><c> has</c><00:17:30.600><c> been</c>

00:17:30.890 --> 00:17:30.900 align:start position:0%
written and others have written has been
 

00:17:30.900 --> 00:17:33.890 align:start position:0%
written and others have written has been
to<00:17:31.110><c> cross</c><00:17:31.500><c> compile</c><00:17:31.950><c> to</c><00:17:32.910><c> an</c><00:17:33.030><c> older</c><00:17:33.300><c> JDK</c><00:17:33.720><c> there</c>

00:17:33.890 --> 00:17:33.900 align:start position:0%
to cross compile to an older JDK there
 

00:17:33.900 --> 00:17:35.150 align:start position:0%
to cross compile to an older JDK there
were<00:17:33.960><c> three</c><00:17:34.200><c> things</c><00:17:34.410><c> you</c><00:17:34.500><c> needed</c><00:17:34.680><c> to</c><00:17:34.830><c> do</c><00:17:34.980><c> you</c>

00:17:35.150 --> 00:17:35.160 align:start position:0%
were three things you needed to do you
 

00:17:35.160 --> 00:17:37.880 align:start position:0%
were three things you needed to do you
have<00:17:35.880><c> to</c><00:17:36.030><c> set</c><00:17:36.240><c> the</c><00:17:36.450><c> source</c><00:17:36.780><c> version</c><00:17:37.500><c> to</c><00:17:37.740><c> the</c>

00:17:37.880 --> 00:17:37.890 align:start position:0%
have to set the source version to the
 

00:17:37.890 --> 00:17:40.400 align:start position:0%
have to set the source version to the
older<00:17:38.400><c> release</c><00:17:38.610><c> the</c><00:17:38.820><c> target</c><00:17:39.150><c> version</c><00:17:39.330><c> at</c><00:17:39.690><c> and</c>

00:17:40.400 --> 00:17:40.410 align:start position:0%
older release the target version at and
 

00:17:40.410 --> 00:17:42.890 align:start position:0%
older release the target version at and
finally<00:17:41.250><c> the</c><00:17:41.520><c> boot</c><00:17:41.670><c> class</c><00:17:41.880><c> path</c><00:17:42.180><c> to</c><00:17:42.600><c> the</c><00:17:42.690><c> older</c>

00:17:42.890 --> 00:17:42.900 align:start position:0%
finally the boot class path to the older
 

00:17:42.900 --> 00:17:45.980 align:start position:0%
finally the boot class path to the older
release<00:17:43.190><c> people</c><00:17:44.190><c> didn't</c><00:17:44.550><c> always</c><00:17:44.700><c> follow</c><00:17:45.690><c> this</c>

00:17:45.980 --> 00:17:45.990 align:start position:0%
release people didn't always follow this
 

00:17:45.990 --> 00:17:47.720 align:start position:0%
release people didn't always follow this
guidance<00:17:46.350><c> so</c><00:17:46.560><c> we</c><00:17:46.710><c> get</c><00:17:46.890><c> a</c><00:17:46.920><c> flow</c><00:17:47.220><c> of</c><00:17:47.370><c> bugs</c><00:17:47.550><c> in</c>

00:17:47.720 --> 00:17:47.730 align:start position:0%
guidance so we get a flow of bugs in
 

00:17:47.730 --> 00:17:49.610 align:start position:0%
guidance so we get a flow of bugs in
there<00:17:47.910><c> and</c><00:17:48.720><c> we</c><00:17:48.870><c> wanted</c><00:17:49.080><c> to</c><00:17:49.140><c> do</c><00:17:49.320><c> something</c>

00:17:49.610 --> 00:17:49.620 align:start position:0%
there and we wanted to do something
 

00:17:49.620 --> 00:17:52.850 align:start position:0%
there and we wanted to do something
about<00:17:49.680><c> that</c><00:17:49.860><c> a</c><00:17:50.390><c> related</c><00:17:51.390><c> policy</c><00:17:52.020><c> change</c><00:17:52.350><c> was</c>

00:17:52.850 --> 00:17:52.860 align:start position:0%
about that a related policy change was
 

00:17:52.860 --> 00:17:54.830 align:start position:0%
about that a related policy change was
to<00:17:53.130><c> limit</c><00:17:53.460><c> the</c><00:17:53.580><c> range</c><00:17:53.790><c> of</c><00:17:54.180><c> source</c><00:17:54.600><c> and</c><00:17:54.690><c> target</c>

00:17:54.830 --> 00:17:54.840 align:start position:0%
to limit the range of source and target
 

00:17:54.840 --> 00:17:57.200 align:start position:0%
to limit the range of source and target
values<00:17:55.290><c> we</c><00:17:55.440><c> support</c><00:17:55.800><c> in</c><00:17:55.860><c> Java</c><00:17:56.070><c> C</c><00:17:56.310><c> starting</c><00:17:57.150><c> in</c>

00:17:57.200 --> 00:17:57.210 align:start position:0%
values we support in Java C starting in
 

00:17:57.210 --> 00:17:58.970 align:start position:0%
values we support in Java C starting in
JDK<00:17:57.600><c> 8</c><00:17:57.630><c> we</c><00:17:57.960><c> don't</c><00:17:58.140><c> support</c><00:17:58.440><c> all</c><00:17:58.620><c> the</c><00:17:58.710><c> way</c><00:17:58.830><c> back</c>

00:17:58.970 --> 00:17:58.980 align:start position:0%
JDK 8 we don't support all the way back
 

00:17:58.980 --> 00:18:00.200 align:start position:0%
JDK 8 we don't support all the way back
to<00:17:59.190><c> the</c><00:17:59.310><c> beginning</c><00:17:59.430><c> anymore</c>

00:18:00.200 --> 00:18:00.210 align:start position:0%
to the beginning anymore
 

00:18:00.210 --> 00:18:02.420 align:start position:0%
to the beginning anymore
we<00:18:00.510><c> support</c><00:18:00.900><c> the</c><00:18:00.990><c> current</c><00:18:01.200><c> release</c><00:18:01.590><c> and</c><00:18:01.860><c> in</c><00:18:02.190><c> 3</c>

00:18:02.420 --> 00:18:02.430 align:start position:0%
we support the current release and in 3
 

00:18:02.430 --> 00:18:05.900 align:start position:0%
we support the current release and in 3
back<00:18:02.880><c> so</c><00:18:03.360><c> in</c><00:18:03.450><c> JDK</c><00:18:03.750><c> 9</c><00:18:03.960><c> we</c><00:18:04.230><c> support</c><00:18:04.620><c> 9</c><00:18:05.280><c> as</c><00:18:05.700><c> well</c><00:18:05.730><c> as</c>

00:18:05.900 --> 00:18:05.910 align:start position:0%
back so in JDK 9 we support 9 as well as
 

00:18:05.910 --> 00:18:08.750 align:start position:0%
back so in JDK 9 we support 9 as well as
8<00:18:06.210><c> 7</c><00:18:06.540><c> +</c><00:18:06.630><c> 6</c><00:18:06.780><c> +</c><00:18:07.080><c> 6</c><00:18:07.620><c> is</c><00:18:07.830><c> deprecated</c><00:18:08.250><c> because</c><00:18:08.550><c> we</c>

00:18:08.750 --> 00:18:08.760 align:start position:0%
8 7 + 6 + 6 is deprecated because we
 

00:18:08.760 --> 00:18:10.160 align:start position:0%
8 7 + 6 + 6 is deprecated because we
find<00:18:08.970><c> to</c><00:18:09.060><c> remove</c><00:18:09.330><c> that</c><00:18:09.510><c> the</c><00:18:09.780><c> next</c><00:18:10.020><c> time</c><00:18:10.110><c> we</c>

00:18:10.160 --> 00:18:10.170 align:start position:0%
find to remove that the next time we
 

00:18:10.170 --> 00:18:11.930 align:start position:0%
find to remove that the next time we
remove<00:18:10.500><c> a</c><00:18:10.590><c> release</c><00:18:10.860><c> and</c><00:18:11.100><c> something</c><00:18:11.790><c> similar</c>

00:18:11.930 --> 00:18:11.940 align:start position:0%
remove a release and something similar
 

00:18:11.940 --> 00:18:14.600 align:start position:0%
remove a release and something similar
will<00:18:12.240><c> be</c><00:18:12.330><c> done</c><00:18:12.510><c> for</c><00:18:12.900><c> JDK</c><00:18:13.830><c> 10</c><00:18:14.070><c> which</c><00:18:14.580><c> is</c>

00:18:14.600 --> 00:18:14.610 align:start position:0%
will be done for JDK 10 which is
 

00:18:14.610 --> 00:18:16.160 align:start position:0%
will be done for JDK 10 which is
probably<00:18:14.940><c> gonna</c><00:18:15.060><c> be</c><00:18:15.210><c> called</c><00:18:15.330><c> 18</c><00:18:15.540><c> not</c><00:18:15.630><c> 3</c><00:18:15.870><c> or</c><00:18:16.050><c> one</c>

00:18:16.160 --> 00:18:16.170 align:start position:0%
probably gonna be called 18 not 3 or one
 

00:18:16.170 --> 00:18:19.400 align:start position:0%
probably gonna be called 18 not 3 or one
of<00:18:16.260><c> the</c><00:18:16.320><c> subsequent</c><00:18:16.590><c> releases</c><00:18:18.110><c> now</c><00:18:19.110><c> why</c><00:18:19.350><c> do</c>

00:18:19.400 --> 00:18:19.410 align:start position:0%
of the subsequent releases now why do
 

00:18:19.410 --> 00:18:21.310 align:start position:0%
of the subsequent releases now why do
you<00:18:19.530><c> need</c><00:18:19.620><c> to</c><00:18:19.860><c> boot</c><00:18:20.010><c> set</c><00:18:20.580><c> the</c><00:18:20.670><c> boot</c><00:18:20.790><c> classpath</c>

00:18:21.310 --> 00:18:21.320 align:start position:0%
you need to boot set the boot classpath
 

00:18:21.320 --> 00:18:23.300 align:start position:0%
you need to boot set the boot classpath
well<00:18:22.320><c> let's</c><00:18:22.470><c> say</c><00:18:22.560><c> we</c><00:18:22.680><c> have</c><00:18:22.770><c> two</c><00:18:22.920><c> versions</c><00:18:23.100><c> of</c>

00:18:23.300 --> 00:18:23.310 align:start position:0%
well let's say we have two versions of
 

00:18:23.310 --> 00:18:25.070 align:start position:0%
well let's say we have two versions of
the<00:18:23.400><c> JDK</c><00:18:23.610><c> here</c><00:18:24.060><c> and</c><00:18:24.180><c> there's</c><00:18:24.300><c> a</c><00:18:24.390><c> library</c><00:18:24.840><c> in</c>

00:18:25.070 --> 00:18:25.080 align:start position:0%
the JDK here and there's a library in
 

00:18:25.080 --> 00:18:26.570 align:start position:0%
the JDK here and there's a library in
the<00:18:25.320><c> first</c><00:18:25.530><c> version</c><00:18:25.740><c> there's</c><00:18:26.220><c> a</c><00:18:26.280><c> foo</c><00:18:26.460><c> method</c>

00:18:26.570 --> 00:18:26.580 align:start position:0%
the first version there's a foo method
 

00:18:26.580 --> 00:18:28.700 align:start position:0%
the first version there's a foo method
that<00:18:26.880><c> takes</c><00:18:26.970><c> a</c><00:18:27.150><c> double</c><00:18:27.420><c> and</c><00:18:27.630><c> then</c><00:18:28.350><c> as</c><00:18:28.590><c> an</c>

00:18:28.700 --> 00:18:28.710 align:start position:0%
that takes a double and then as an
 

00:18:28.710 --> 00:18:30.950 align:start position:0%
that takes a double and then as an
optimization<00:18:29.040><c> in</c><00:18:29.640><c> a</c><00:18:29.850><c> later</c><00:18:30.060><c> JDK</c><00:18:30.480><c> release</c><00:18:30.780><c> we</c>

00:18:30.950 --> 00:18:30.960 align:start position:0%
optimization in a later JDK release we
 

00:18:30.960 --> 00:18:32.330 align:start position:0%
optimization in a later JDK release we
had<00:18:31.050><c> a</c><00:18:31.080><c> full</c><00:18:31.350><c> through</c><00:18:31.680><c> method</c><00:18:31.920><c> that</c><00:18:32.070><c> takes</c><00:18:32.160><c> an</c>

00:18:32.330 --> 00:18:32.340 align:start position:0%
had a full through method that takes an
 

00:18:32.340 --> 00:18:33.950 align:start position:0%
had a full through method that takes an
integer<00:18:32.490><c> so</c><00:18:32.820><c> that's</c><00:18:33.270><c> a</c><00:18:33.360><c> perfectly</c><00:18:33.660><c> compatible</c>

00:18:33.950 --> 00:18:33.960 align:start position:0%
integer so that's a perfectly compatible
 

00:18:33.960 --> 00:18:35.630 align:start position:0%
integer so that's a perfectly compatible
change<00:18:34.410><c> according</c><00:18:34.890><c> to</c><00:18:35.010><c> our</c><00:18:35.160><c> compatibility</c>

00:18:35.630 --> 00:18:35.640 align:start position:0%
change according to our compatibility
 

00:18:35.640 --> 00:18:38.210 align:start position:0%
change according to our compatibility
policy<00:18:36.330><c> and</c><00:18:36.600><c> let's</c><00:18:37.350><c> say</c><00:18:37.470><c> we</c><00:18:37.590><c> have</c><00:18:37.620><c> the</c><00:18:37.860><c> client</c>

00:18:38.210 --> 00:18:38.220 align:start position:0%
policy and let's say we have the client
 

00:18:38.220 --> 00:18:40.940 align:start position:0%
policy and let's say we have the client
library<00:18:38.610><c> here</c><00:18:39.000><c> that</c><00:18:39.300><c> uses</c><00:18:39.510><c> foo</c><00:18:39.870><c> and</c><00:18:40.110><c> we</c>

00:18:40.940 --> 00:18:40.950 align:start position:0%
library here that uses foo and we
 

00:18:40.950 --> 00:18:44.480 align:start position:0%
library here that uses foo and we
compile<00:18:41.280><c> it</c><00:18:41.430><c> against</c><00:18:41.730><c> JDK</c><00:18:42.090><c> n</c><00:18:42.270><c> +</c><00:18:42.480><c> 1</c><00:18:42.720><c> so</c><00:18:43.650><c> which</c><00:18:44.220><c> of</c>

00:18:44.480 --> 00:18:44.490 align:start position:0%
compile it against JDK n + 1 so which of
 

00:18:44.490 --> 00:18:46.430 align:start position:0%
compile it against JDK n + 1 so which of
the<00:18:44.580><c> two</c><00:18:44.730><c> foo</c><00:18:44.970><c> methods</c><00:18:45.330><c> is</c><00:18:45.510><c> the</c><00:18:46.200><c> compiler</c>

00:18:46.430 --> 00:18:46.440 align:start position:0%
the two foo methods is the compiler
 

00:18:46.440 --> 00:18:49.970 align:start position:0%
the two foo methods is the compiler
going<00:18:46.740><c> to</c><00:18:46.800><c> choose</c><00:18:47.010><c> for</c><00:18:47.430><c> foo</c><00:18:47.670><c> 1</c><00:18:47.880><c> 2</c><00:18:48.000><c> 3</c><00:18:48.120><c> 4</c><00:18:48.980><c> it's</c>

00:18:49.970 --> 00:18:49.980 align:start position:0%
going to choose for foo 1 2 3 4 it's
 

00:18:49.980 --> 00:18:50.990 align:start position:0%
going to choose for foo 1 2 3 4 it's
going<00:18:50.130><c> to</c><00:18:50.220><c> choose</c><00:18:50.370><c> the</c><00:18:50.490><c> food</c><00:18:50.640><c> that</c><00:18:50.730><c> takes</c><00:18:50.880><c> an</c>

00:18:50.990 --> 00:18:51.000 align:start position:0%
going to choose the food that takes an
 

00:18:51.000 --> 00:18:52.610 align:start position:0%
going to choose the food that takes an
integer<00:18:51.150><c> that's</c><00:18:51.570><c> the</c><00:18:51.720><c> most</c><00:18:51.840><c> specific</c><00:18:52.380><c> food</c>

00:18:52.610 --> 00:18:52.620 align:start position:0%
integer that's the most specific food
 

00:18:52.620 --> 00:18:54.440 align:start position:0%
integer that's the most specific food
version<00:18:53.040><c> and</c><00:18:53.250><c> that's</c><00:18:53.670><c> what</c><00:18:53.970><c> language</c>

00:18:54.440 --> 00:18:54.450 align:start position:0%
version and that's what language
 

00:18:54.450 --> 00:18:58.040 align:start position:0%
version and that's what language
specifies<00:18:55.640><c> okay</c><00:18:56.640><c> so</c><00:18:57.330><c> what</c><00:18:57.510><c> happens</c><00:18:57.810><c> if</c><00:18:57.930><c> we</c>

00:18:58.040 --> 00:18:58.050 align:start position:0%
specifies okay so what happens if we
 

00:18:58.050 --> 00:18:59.720 align:start position:0%
specifies okay so what happens if we
take<00:18:58.200><c> that</c><00:18:58.410><c> file</c><00:18:58.620><c> compiled</c><00:18:59.070><c> against</c><00:18:59.310><c> JDK</c><00:18:59.610><c> n</c>

00:18:59.720 --> 00:18:59.730 align:start position:0%
take that file compiled against JDK n
 

00:18:59.730 --> 00:19:03.260 align:start position:0%
take that file compiled against JDK n
plus<00:18:59.970><c> 1</c><00:19:00.210><c> and</c><00:19:00.510><c> we</c><00:19:00.600><c> run</c><00:19:00.750><c> it</c><00:19:00.840><c> against</c><00:19:01.290><c> JDK</c><00:19:01.650><c> n</c><00:19:02.270><c> we'll</c>

00:19:03.260 --> 00:19:03.270 align:start position:0%
plus 1 and we run it against JDK n we'll
 

00:19:03.270 --> 00:19:04.670 align:start position:0%
plus 1 and we run it against JDK n we'll
get<00:19:03.390><c> a</c><00:19:03.420><c> runtime</c><00:19:03.690><c> error</c><00:19:04.140><c> or</c><00:19:04.320><c> something</c><00:19:04.590><c> like</c>

00:19:04.670 --> 00:19:04.680 align:start position:0%
get a runtime error or something like
 

00:19:04.680 --> 00:19:07.370 align:start position:0%
get a runtime error or something like
this<00:19:04.860><c> no</c><00:19:05.490><c> such</c><00:19:05.700><c> method</c><00:19:06.000><c> error</c><00:19:06.180><c> what</c><00:19:07.170><c> the</c>

00:19:07.370 --> 00:19:07.380 align:start position:0%
this no such method error what the
 

00:19:07.380 --> 00:19:09.620 align:start position:0%
this no such method error what the
detail<00:19:07.770><c> message</c><00:19:08.130><c> of</c><00:19:08.790><c> the</c><00:19:09.000><c> error</c><00:19:09.180><c> here</c><00:19:09.510><c> is</c>

00:19:09.620 --> 00:19:09.630 align:start position:0%
detail message of the error here is
 

00:19:09.630 --> 00:19:10.430 align:start position:0%
detail message of the error here is
saying<00:19:09.870><c> the</c>

00:19:10.430 --> 00:19:10.440 align:start position:0%
saying the
 

00:19:10.440 --> 00:19:12.590 align:start position:0%
saying the
is<00:19:10.740><c> looking</c><00:19:11.039><c> for</c><00:19:11.340><c> a</c><00:19:11.370><c> food</c><00:19:11.970><c> that</c><00:19:12.210><c> takes</c><00:19:12.389><c> an</c>

00:19:12.590 --> 00:19:12.600 align:start position:0%
is looking for a food that takes an
 

00:19:12.600 --> 00:19:15.110 align:start position:0%
is looking for a food that takes an
integer<00:19:12.779><c> but</c><00:19:13.500><c> it's</c><00:19:13.649><c> not</c><00:19:13.769><c> finding</c><00:19:14.009><c> one</c><00:19:14.250><c> it's</c>

00:19:15.110 --> 00:19:15.120 align:start position:0%
integer but it's not finding one it's
 

00:19:15.120 --> 00:19:17.570 align:start position:0%
integer but it's not finding one it's
not<00:19:15.299><c> finding</c><00:19:15.600><c> one</c><00:19:15.750><c> in</c><00:19:15.779><c> JDK</c><00:19:16.470><c> and</c><00:19:16.710><c> because</c><00:19:17.279><c> it</c>

00:19:17.570 --> 00:19:17.580 align:start position:0%
not finding one in JDK and because it
 

00:19:17.580 --> 00:19:18.950 align:start position:0%
not finding one in JDK and because it
isn't<00:19:17.730><c> there</c><00:19:17.970><c> there's</c><00:19:18.360><c> only</c><00:19:18.480><c> a</c><00:19:18.570><c> food</c><00:19:18.750><c> method</c>

00:19:18.950 --> 00:19:18.960 align:start position:0%
isn't there there's only a food method
 

00:19:18.960 --> 00:19:21.019 align:start position:0%
isn't there there's only a food method
it<00:19:19.049><c> takes</c><00:19:19.200><c> a</c><00:19:19.320><c> double</c><00:19:19.440><c> so</c><00:19:20.220><c> this</c><00:19:20.490><c> is</c><00:19:20.639><c> the</c><00:19:20.759><c> kind</c><00:19:20.940><c> of</c>

00:19:21.019 --> 00:19:21.029 align:start position:0%
it takes a double so this is the kind of
 

00:19:21.029 --> 00:19:22.759 align:start position:0%
it takes a double so this is the kind of
problem<00:19:21.360><c> people</c><00:19:21.480><c> can</c><00:19:21.720><c> run</c><00:19:21.899><c> into</c><00:19:22.080><c> when</c><00:19:22.350><c> the</c><00:19:22.470><c> you</c>

00:19:22.759 --> 00:19:22.769 align:start position:0%
problem people can run into when the you
 

00:19:22.769 --> 00:19:24.230 align:start position:0%
problem people can run into when the you
don't<00:19:22.860><c> said</c><00:19:23.070><c> the</c><00:19:23.159><c> boot</c><00:19:23.279><c> class</c><00:19:23.490><c> path</c><00:19:23.759><c> when</c><00:19:24.149><c> you</c>

00:19:24.230 --> 00:19:24.240 align:start position:0%
don't said the boot class path when you
 

00:19:24.240 --> 00:19:28.100 align:start position:0%
don't said the boot class path when you
cross<00:19:24.450><c> compile</c><00:19:25.940><c> so</c><00:19:26.940><c> since</c><00:19:27.450><c> we</c><00:19:27.600><c> still</c><00:19:27.840><c> had</c><00:19:27.960><c> this</c>

00:19:28.100 --> 00:19:28.110 align:start position:0%
cross compile so since we still had this
 

00:19:28.110 --> 00:19:29.629 align:start position:0%
cross compile so since we still had this
problem<00:19:28.470><c> we</c><00:19:28.559><c> talked</c><00:19:28.740><c> about</c><00:19:28.830><c> am</c><00:19:28.980><c> a</c><00:19:29.009><c> java</c><00:19:29.220><c> c</c><00:19:29.429><c> team</c>

00:19:29.629 --> 00:19:29.639 align:start position:0%
problem we talked about am a java c team
 

00:19:29.639 --> 00:19:31.580 align:start position:0%
problem we talked about am a java c team
we<00:19:29.820><c> added</c><00:19:30.090><c> a</c><00:19:30.179><c> warning</c><00:19:30.960><c> if</c><00:19:31.080><c> you</c><00:19:31.110><c> didn't</c><00:19:31.379><c> set</c><00:19:31.529><c> the</c>

00:19:31.580 --> 00:19:31.590 align:start position:0%
we added a warning if you didn't set the
 

00:19:31.590 --> 00:19:33.049 align:start position:0%
we added a warning if you didn't set the
boot<00:19:31.740><c> class</c><00:19:31.980><c> path</c><00:19:32.250><c> when</c><00:19:32.490><c> you</c><00:19:32.580><c> the</c><00:19:32.730><c> older</c>

00:19:33.049 --> 00:19:33.059 align:start position:0%
boot class path when you the older
 

00:19:33.059 --> 00:19:36.320 align:start position:0%
boot class path when you the older
versions<00:19:33.559><c> we</c><00:19:34.559><c> did</c><00:19:34.710><c> that</c><00:19:34.830><c> back</c><00:19:34.919><c> in</c><00:19:34.980><c> jdk</c><00:19:35.399><c> 7</c><00:19:35.730><c> but</c>

00:19:36.320 --> 00:19:36.330 align:start position:0%
versions we did that back in jdk 7 but
 

00:19:36.330 --> 00:19:38.869 align:start position:0%
versions we did that back in jdk 7 but
the<00:19:36.360><c> problem</c><00:19:36.750><c> still</c><00:19:36.929><c> persisted</c><00:19:37.470><c> and</c><00:19:37.789><c> we</c><00:19:38.789><c> were</c>

00:19:38.869 --> 00:19:38.879 align:start position:0%
the problem still persisted and we were
 

00:19:38.879 --> 00:19:40.399 align:start position:0%
the problem still persisted and we were
talking<00:19:39.120><c> about</c><00:19:39.149><c> on</c><00:19:39.360><c> the</c><00:19:39.419><c> team</c><00:19:39.659><c> and</c><00:19:39.990><c> we</c><00:19:40.259><c> said</c>

00:19:40.399 --> 00:19:40.409 align:start position:0%
talking about on the team and we said
 

00:19:40.409 --> 00:19:41.149 align:start position:0%
talking about on the team and we said
you<00:19:40.500><c> know</c><00:19:40.529><c> what</c><00:19:40.740><c> we</c><00:19:40.889><c> know</c><00:19:41.009><c> what</c><00:19:41.129><c> people</c>

00:19:41.149 --> 00:19:41.159 align:start position:0%
you know what we know what people
 

00:19:41.159 --> 00:19:43.129 align:start position:0%
you know what we know what people
actually<00:19:41.490><c> want</c><00:19:41.820><c> to</c><00:19:41.850><c> do</c><00:19:41.970><c> here</c><00:19:42.179><c> they</c><00:19:42.690><c> just</c><00:19:42.720><c> want</c>

00:19:43.129 --> 00:19:43.139 align:start position:0%
actually want to do here they just want
 

00:19:43.139 --> 00:19:45.320 align:start position:0%
actually want to do here they just want
to<00:19:43.259><c> cross-compile</c><00:19:44.070><c> to</c><00:19:44.309><c> the</c><00:19:44.429><c> old</c><00:19:44.730><c> version</c><00:19:44.820><c> so</c>

00:19:45.320 --> 00:19:45.330 align:start position:0%
to cross-compile to the old version so
 

00:19:45.330 --> 00:19:46.340 align:start position:0%
to cross-compile to the old version so
why<00:19:45.480><c> don't</c><00:19:45.629><c> we</c><00:19:45.720><c> just</c><00:19:45.870><c> let</c><00:19:46.049><c> them</c><00:19:46.169><c> do</c><00:19:46.320><c> that</c>

00:19:46.340 --> 00:19:46.350 align:start position:0%
why don't we just let them do that
 

00:19:46.350 --> 00:19:48.350 align:start position:0%
why don't we just let them do that
directly<00:19:47.220><c> instead</c><00:19:47.580><c> of</c><00:19:47.669><c> having</c><00:19:47.850><c> to</c><00:19:48.029><c> set</c><00:19:48.210><c> these</c>

00:19:48.350 --> 00:19:48.360 align:start position:0%
directly instead of having to set these
 

00:19:48.360 --> 00:19:51.470 align:start position:0%
directly instead of having to set these
three<00:19:48.539><c> variables</c><00:19:49.529><c> and</c><00:19:49.710><c> that</c><00:19:50.460><c> is</c><00:19:50.700><c> indeed</c><00:19:51.299><c> what</c>

00:19:51.470 --> 00:19:51.480 align:start position:0%
three variables and that is indeed what
 

00:19:51.480 --> 00:19:53.600 align:start position:0%
three variables and that is indeed what
we've<00:19:51.600><c> done</c><00:19:51.750><c> now</c><00:19:51.929><c> with</c><00:19:52.529><c> the</c><00:19:52.710><c> Java</c><00:19:52.919><c> C</c><00:19:53.129><c> dash</c><00:19:53.399><c> -</c>

00:19:53.600 --> 00:19:53.610 align:start position:0%
we've done now with the Java C dash -
 

00:19:53.610 --> 00:19:56.029 align:start position:0%
we've done now with the Java C dash -
release<00:19:53.940><c> em</c><00:19:54.120><c> flag</c><00:19:54.769><c> semantically</c><00:19:55.769><c> it's</c>

00:19:56.029 --> 00:19:56.039 align:start position:0%
release em flag semantically it's
 

00:19:56.039 --> 00:19:57.710 align:start position:0%
release em flag semantically it's
equivalent<00:19:56.340><c> to</c><00:19:56.549><c> setting</c><00:19:57.029><c> the</c><00:19:57.149><c> source</c><00:19:57.450><c> and</c>

00:19:57.710 --> 00:19:57.720 align:start position:0%
equivalent to setting the source and
 

00:19:57.720 --> 00:19:59.690 align:start position:0%
equivalent to setting the source and
target<00:19:57.929><c> to</c><00:19:58.230><c> the</c><00:19:58.320><c> older</c><00:19:58.590><c> release</c><00:19:58.799><c> as</c><00:19:59.070><c> well</c><00:19:59.129><c> as</c>

00:19:59.690 --> 00:19:59.700 align:start position:0%
target to the older release as well as
 

00:19:59.700 --> 00:20:02.090 align:start position:0%
target to the older release as well as
the<00:19:59.879><c> MU</c><00:20:00.450><c> class</c><00:20:00.750><c> path</c><00:20:01.019><c> however</c><00:20:01.769><c> the</c>

00:20:02.090 --> 00:20:02.100 align:start position:0%
the MU class path however the
 

00:20:02.100 --> 00:20:03.860 align:start position:0%
the MU class path however the
information<00:20:02.549><c> about</c><00:20:02.700><c> the</c><00:20:02.820><c> class</c><00:20:03.419><c> path</c><00:20:03.659><c> is</c>

00:20:03.860 --> 00:20:03.870 align:start position:0%
information about the class path is
 

00:20:03.870 --> 00:20:06.049 align:start position:0%
information about the class path is
available<00:20:04.259><c> to</c><00:20:04.350><c> Java</c><00:20:04.559><c> C</c><00:20:04.769><c> so</c><00:20:05.429><c> this</c><00:20:05.639><c> is</c><00:20:05.820><c> shipped</c>

00:20:06.049 --> 00:20:06.059 align:start position:0%
available to Java C so this is shipped
 

00:20:06.059 --> 00:20:07.700 align:start position:0%
available to Java C so this is shipped
as<00:20:06.240><c> part</c><00:20:06.450><c> of</c><00:20:06.480><c> the</c><00:20:06.570><c> JDK</c><00:20:06.840><c> in</c><00:20:07.259><c> a</c><00:20:07.379><c> compressed</c>

00:20:07.700 --> 00:20:07.710 align:start position:0%
as part of the JDK in a compressed
 

00:20:07.710 --> 00:20:10.730 align:start position:0%
as part of the JDK in a compressed
fashion<00:20:08.929><c> so</c><00:20:09.929><c> you</c><00:20:09.990><c> don't</c><00:20:10.200><c> have</c><00:20:10.289><c> to</c><00:20:10.440><c> manage</c><00:20:10.710><c> that</c>

00:20:10.730 --> 00:20:10.740 align:start position:0%
fashion so you don't have to manage that
 

00:20:10.740 --> 00:20:13.850 align:start position:0%
fashion so you don't have to manage that
kind<00:20:11.039><c> of</c><00:20:11.190><c> state</c><00:20:11.370><c> to</c><00:20:11.490><c> yourself</c><00:20:11.820><c> anymore</c><00:20:12.120><c> a</c><00:20:12.860><c> few</c>

00:20:13.850 --> 00:20:13.860 align:start position:0%
kind of state to yourself anymore a few
 

00:20:13.860 --> 00:20:15.409 align:start position:0%
kind of state to yourself anymore a few
advantages<00:20:14.009><c> of</c><00:20:14.490><c> this</c><00:20:14.639><c> you</c><00:20:14.789><c> don't</c><00:20:14.940><c> have</c><00:20:15.149><c> to</c>

00:20:15.409 --> 00:20:15.419 align:start position:0%
advantages of this you don't have to
 

00:20:15.419 --> 00:20:17.600 align:start position:0%
advantages of this you don't have to
worry<00:20:15.870><c> about</c><00:20:15.990><c> managing</c><00:20:16.500><c> those</c><00:20:16.649><c> old</c><00:20:16.980><c> RT</c><00:20:17.279><c> jar</c>

00:20:17.600 --> 00:20:17.610 align:start position:0%
worry about managing those old RT jar
 

00:20:17.610 --> 00:20:20.240 align:start position:0%
worry about managing those old RT jar
files<00:20:17.850><c> yourself</c><00:20:18.120><c> if</c><00:20:18.990><c> you</c><00:20:19.200><c> use</c><00:20:19.379><c> maven</c><00:20:19.799><c> plugins</c>

00:20:20.240 --> 00:20:20.250 align:start position:0%
files yourself if you use maven plugins
 

00:20:20.250 --> 00:20:21.799 align:start position:0%
files yourself if you use maven plugins
like<00:20:20.340><c> animal</c><00:20:20.759><c> sniffer</c><00:20:21.090><c> that's</c><00:20:21.360><c> meant</c><00:20:21.600><c> to</c>

00:20:21.799 --> 00:20:21.809 align:start position:0%
like animal sniffer that's meant to
 

00:20:21.809 --> 00:20:23.690 align:start position:0%
like animal sniffer that's meant to
prevent<00:20:22.200><c> using</c><00:20:22.830><c> wrong</c><00:20:23.070><c> API</c><00:20:23.370><c> as</c><00:20:23.460><c> you</c><00:20:23.610><c> should</c>

00:20:23.690 --> 00:20:23.700 align:start position:0%
prevent using wrong API as you should
 

00:20:23.700 --> 00:20:24.740 align:start position:0%
prevent using wrong API as you should
have<00:20:23.820><c> less</c><00:20:24.029><c> need</c><00:20:24.240><c> for</c><00:20:24.299><c> that</c>

00:20:24.740 --> 00:20:24.750 align:start position:0%
have less need for that
 

00:20:24.750 --> 00:20:26.659 align:start position:0%
have less need for that
another<00:20:25.620><c> advantage</c><00:20:25.919><c> if</c><00:20:26.220><c> you're</c><00:20:26.340><c> doing</c><00:20:26.460><c> this</c>

00:20:26.659 --> 00:20:26.669 align:start position:0%
another advantage if you're doing this
 

00:20:26.669 --> 00:20:28.759 align:start position:0%
another advantage if you're doing this
across<00:20:27.120><c> compilation</c><00:20:27.809><c> is</c><00:20:27.960><c> you</c><00:20:28.139><c> might</c><00:20:28.559><c> be</c><00:20:28.679><c> able</c>

00:20:28.759 --> 00:20:28.769 align:start position:0%
across compilation is you might be able
 

00:20:28.769 --> 00:20:30.320 align:start position:0%
across compilation is you might be able
to<00:20:28.830><c> take</c><00:20:28.919><c> advantage</c><00:20:29.039><c> of</c><00:20:29.429><c> newer</c><00:20:29.879><c> compile</c>

00:20:30.320 --> 00:20:30.330 align:start position:0%
to take advantage of newer compile
 

00:20:30.330 --> 00:20:32.269 align:start position:0%
to take advantage of newer compile
idioms<00:20:30.720><c> in</c><00:20:30.809><c> Java</c><00:20:30.990><c> see</c><00:20:31.259><c> their</c><00:20:31.559><c> bug</c><00:20:31.799><c> fixes</c><00:20:32.159><c> in</c>

00:20:32.269 --> 00:20:32.279 align:start position:0%
idioms in Java see their bug fixes in
 

00:20:32.279 --> 00:20:34.220 align:start position:0%
idioms in Java see their bug fixes in
Java<00:20:32.460><c> C</c><00:20:32.700><c> and</c><00:20:32.940><c> sometimes</c><00:20:33.809><c> there</c><00:20:33.990><c> are</c><00:20:34.049><c> very</c>

00:20:34.220 --> 00:20:34.230 align:start position:0%
Java C and sometimes there are very
 

00:20:34.230 --> 00:20:36.799 align:start position:0%
Java C and sometimes there are very
large<00:20:34.559><c> performance</c><00:20:35.490><c> improvements</c><00:20:35.940><c> one</c><00:20:36.720><c> of</c>

00:20:36.799 --> 00:20:36.809 align:start position:0%
large performance improvements one of
 

00:20:36.809 --> 00:20:38.990 align:start position:0%
large performance improvements one of
the<00:20:36.899><c> projects</c><00:20:37.440><c> we</c><00:20:37.559><c> had</c><00:20:37.740><c> in</c><00:20:38.009><c> Java</c><00:20:38.220><c> C</c><00:20:38.429><c> and</c><00:20:38.549><c> JDK</c><00:20:38.759><c> 9</c>

00:20:38.990 --> 00:20:39.000 align:start position:0%
the projects we had in Java C and JDK 9
 

00:20:39.000 --> 00:20:40.909 align:start position:0%
the projects we had in Java C and JDK 9
was<00:20:39.179><c> called</c><00:20:39.419><c> tiered</c><00:20:39.690><c> attribution</c><00:20:40.320><c> which</c>

00:20:40.909 --> 00:20:40.919 align:start position:0%
was called tiered attribution which
 

00:20:40.919 --> 00:20:43.460 align:start position:0%
was called tiered attribution which
helps<00:20:41.250><c> speed</c><00:20:42.059><c> up</c><00:20:42.120><c> type</c><00:20:42.450><c> inference</c><00:20:42.899><c> in</c><00:20:43.139><c> some</c>

00:20:43.460 --> 00:20:43.470 align:start position:0%
helps speed up type inference in some
 

00:20:43.470 --> 00:20:44.419 align:start position:0%
helps speed up type inference in some
sorts<00:20:43.740><c> of</c><00:20:43.799><c> situations</c>

00:20:44.419 --> 00:20:44.429 align:start position:0%
sorts of situations
 

00:20:44.429 --> 00:20:48.009 align:start position:0%
sorts of situations
so<00:20:45.000><c> the</c><00:20:45.179><c> steeply</c><00:20:45.570><c> rising</c><00:20:46.320><c> curve</c><00:20:46.830><c> there</c><00:20:47.159><c> was</c>

00:20:48.009 --> 00:20:48.019 align:start position:0%
so the steeply rising curve there was
 

00:20:48.019 --> 00:20:52.369 align:start position:0%
so the steeply rising curve there was
the<00:20:49.019><c> JDK</c><00:20:49.379><c> 8</c><00:20:50.360><c> runtime</c><00:20:51.360><c> in</c><00:20:51.480><c> seconds</c><00:20:51.899><c> and</c><00:20:52.110><c> you'll</c>

00:20:52.369 --> 00:20:52.379 align:start position:0%
the JDK 8 runtime in seconds and you'll
 

00:20:52.379 --> 00:20:54.409 align:start position:0%
the JDK 8 runtime in seconds and you'll
notice<00:20:52.529><c> it's</c><00:20:52.710><c> a</c><00:20:52.769><c> log</c><00:20:52.980><c> scale</c><00:20:53.159><c> so</c><00:20:53.519><c> it</c><00:20:53.669><c> is</c><00:20:53.789><c> getting</c>

00:20:54.409 --> 00:20:54.419 align:start position:0%
notice it's a log scale so it is getting
 

00:20:54.419 --> 00:20:55.970 align:start position:0%
notice it's a log scale so it is getting
quite<00:20:54.629><c> slow</c><00:20:54.899><c> quite</c><00:20:55.110><c> quickly</c><00:20:55.379><c> for</c><00:20:55.649><c> these</c><00:20:55.740><c> very</c>

00:20:55.970 --> 00:20:55.980 align:start position:0%
quite slow quite quickly for these very
 

00:20:55.980 --> 00:20:57.830 align:start position:0%
quite slow quite quickly for these very
small<00:20:56.669><c> programs</c><00:20:57.149><c> that</c><00:20:57.330><c> we're</c><00:20:57.450><c> using</c><00:20:57.570><c> type</c>

00:20:57.830 --> 00:20:57.840 align:start position:0%
small programs that we're using type
 

00:20:57.840 --> 00:21:00.049 align:start position:0%
small programs that we're using type
inference<00:20:58.200><c> in</c><00:20:58.289><c> a</c><00:20:58.350><c> particular</c><00:20:58.740><c> way</c><00:20:58.860><c> so</c><00:20:59.669><c> a</c>

00:21:00.049 --> 00:21:00.059 align:start position:0%
inference in a particular way so a
 

00:21:00.059 --> 00:21:01.879 align:start position:0%
inference in a particular way so a
straight<00:21:00.480><c> line</c><00:21:00.690><c> on</c><00:21:00.720><c> a</c><00:21:01.019><c> log</c><00:21:01.409><c> scale</c><00:21:01.620><c> is</c>

00:21:01.879 --> 00:21:01.889 align:start position:0%
straight line on a log scale is
 

00:21:01.889 --> 00:21:03.320 align:start position:0%
straight line on a log scale is
basically<00:21:02.129><c> exponential</c><00:21:02.730><c> growth</c><00:21:02.850><c> so</c><00:21:03.149><c> that's</c>

00:21:03.320 --> 00:21:03.330 align:start position:0%
basically exponential growth so that's
 

00:21:03.330 --> 00:21:04.970 align:start position:0%
basically exponential growth so that's
not<00:21:04.110><c> very</c><00:21:04.230><c> good</c><00:21:04.470><c> if</c><00:21:04.559><c> you</c><00:21:04.649><c> want</c><00:21:04.769><c> to</c><00:21:04.799><c> have</c><00:21:04.919><c> a</c>

00:21:04.970 --> 00:21:04.980 align:start position:0%
not very good if you want to have a
 

00:21:04.980 --> 00:21:07.100 align:start position:0%
not very good if you want to have a
scalable<00:21:05.220><c> compiler</c><00:21:05.879><c> environment</c><00:21:06.299><c> so</c><00:21:06.779><c> we</c><00:21:06.960><c> want</c>

00:21:07.100 --> 00:21:07.110 align:start position:0%
scalable compiler environment so we want
 

00:21:07.110 --> 00:21:08.389 align:start position:0%
scalable compiler environment so we want
to<00:21:07.200><c> do</c><00:21:07.320><c> something</c><00:21:07.649><c> else</c><00:21:07.889><c> so</c><00:21:07.950><c> we</c><00:21:08.100><c> re-engineered</c>

00:21:08.389 --> 00:21:08.399 align:start position:0%
to do something else so we re-engineered
 

00:21:08.399 --> 00:21:10.279 align:start position:0%
to do something else so we re-engineered
how<00:21:08.759><c> inference</c><00:21:09.240><c> worked</c><00:21:09.450><c> and</c><00:21:09.899><c> we</c><00:21:09.960><c> got</c><00:21:10.110><c> these</c>

00:21:10.279 --> 00:21:10.289 align:start position:0%
how inference worked and we got these
 

00:21:10.289 --> 00:21:13.460 align:start position:0%
how inference worked and we got these
much<00:21:11.009><c> faster</c><00:21:11.789><c> lines</c><00:21:12.000><c> on</c><00:21:12.240><c> the</c><00:21:12.360><c> bottom</c><00:21:12.659><c> so</c><00:21:13.259><c> we</c>

00:21:13.460 --> 00:21:13.470 align:start position:0%
much faster lines on the bottom so we
 

00:21:13.470 --> 00:21:16.310 align:start position:0%
much faster lines on the bottom so we
both<00:21:13.649><c> get</c><00:21:13.860><c> that</c><00:21:14.039><c> using</c><00:21:14.730><c> Jade</c><00:21:15.330><c> Java</c><00:21:15.899><c> Sea</c><00:21:16.139><c> from</c>

00:21:16.310 --> 00:21:16.320 align:start position:0%
both get that using Jade Java Sea from
 

00:21:16.320 --> 00:21:18.440 align:start position:0%
both get that using Jade Java Sea from
JDK<00:21:16.679><c> 9</c><00:21:16.860><c> and</c><00:21:17.190><c> we</c><00:21:17.700><c> get</c><00:21:17.879><c> that</c><00:21:18.029><c> sort</c><00:21:18.389><c> of</c>

00:21:18.440 --> 00:21:18.450 align:start position:0%
JDK 9 and we get that sort of
 

00:21:18.450 --> 00:21:20.110 align:start position:0%
JDK 9 and we get that sort of
performance<00:21:18.809><c> using</c>

00:21:20.110 --> 00:21:20.120 align:start position:0%
performance using
 

00:21:20.120 --> 00:21:22.780 align:start position:0%
performance using
the<00:21:20.510><c> Java</c><00:21:20.930><c> Sea</c><00:21:21.080><c> from</c><00:21:21.170><c> JDK</c><00:21:21.470><c> 9</c><00:21:21.650><c> using</c><00:21:22.400><c> -</c><00:21:22.580><c> -</c>

00:21:22.780 --> 00:21:22.790 align:start position:0%
the Java Sea from JDK 9 using - -
 

00:21:22.790 --> 00:21:24.610 align:start position:0%
the Java Sea from JDK 9 using - -
release<00:21:23.090><c> 8</c><00:21:23.240><c> so</c><00:21:23.690><c> if</c><00:21:23.810><c> your</c><00:21:23.930><c> cross</c><00:21:24.110><c> compiling</c><00:21:24.470><c> to</c>

00:21:24.610 --> 00:21:24.620 align:start position:0%
release 8 so if your cross compiling to
 

00:21:24.620 --> 00:21:25.900 align:start position:0%
release 8 so if your cross compiling to
8<00:21:24.710><c> you</c><00:21:24.860><c> get</c><00:21:24.980><c> the</c><00:21:25.100><c> benefit</c><00:21:25.490><c> of</c><00:21:25.580><c> the</c>

00:21:25.900 --> 00:21:25.910 align:start position:0%
8 you get the benefit of the
 

00:21:25.910 --> 00:21:27.310 align:start position:0%
8 you get the benefit of the
re-engineering<00:21:26.210><c> we've</c><00:21:26.630><c> done</c><00:21:26.810><c> in</c><00:21:27.020><c> the</c><00:21:27.200><c> newer</c>

00:21:27.310 --> 00:21:27.320 align:start position:0%
re-engineering we've done in the newer
 

00:21:27.320 --> 00:21:30.580 align:start position:0%
re-engineering we've done in the newer
compiler<00:21:28.540><c> the</c><00:21:29.540><c> next</c><00:21:29.720><c> feature</c><00:21:29.870><c> is</c><00:21:30.020><c> multi</c>

00:21:30.580 --> 00:21:30.590 align:start position:0%
compiler the next feature is multi
 

00:21:30.590 --> 00:21:34.330 align:start position:0%
compiler the next feature is multi
release<00:21:30.800><c> jar</c><00:21:31.460><c> files</c><00:21:32.170><c> so</c><00:21:33.170><c> it's</c><00:21:33.920><c> inconvenient</c>

00:21:34.330 --> 00:21:34.340 align:start position:0%
release jar files so it's inconvenient
 

00:21:34.340 --> 00:21:36.340 align:start position:0%
release jar files so it's inconvenient
if<00:21:34.580><c> you</c><00:21:34.700><c> want</c><00:21:34.880><c> to</c><00:21:35.090><c> package</c><00:21:35.630><c> up</c><00:21:35.720><c> a</c><00:21:35.810><c> library</c><00:21:35.960><c> for</c>

00:21:36.340 --> 00:21:36.350 align:start position:0%
if you want to package up a library for
 

00:21:36.350 --> 00:21:38.080 align:start position:0%
if you want to package up a library for
distribution<00:21:36.590><c> to</c><00:21:37.100><c> make</c><00:21:37.310><c> one</c><00:21:37.580><c> version</c><00:21:37.940><c> of</c><00:21:38.000><c> the</c>

00:21:38.080 --> 00:21:38.090 align:start position:0%
distribution to make one version of the
 

00:21:38.090 --> 00:21:39.430 align:start position:0%
distribution to make one version of the
library<00:21:38.270><c> for</c><00:21:38.690><c> different</c><00:21:38.960><c> versions</c><00:21:39.050><c> of</c><00:21:39.380><c> the</c>

00:21:39.430 --> 00:21:39.440 align:start position:0%
library for different versions of the
 

00:21:39.440 --> 00:21:41.740 align:start position:0%
library for different versions of the
JDK<00:21:39.650><c> so</c><00:21:40.220><c> typically</c><00:21:40.610><c> you'll</c><00:21:40.910><c> compile</c><00:21:41.420><c> for</c><00:21:41.630><c> the</c>

00:21:41.740 --> 00:21:41.750 align:start position:0%
JDK so typically you'll compile for the
 

00:21:41.750 --> 00:21:44.080 align:start position:0%
JDK so typically you'll compile for the
oldest<00:21:42.080><c> JDK</c><00:21:42.440><c> you</c><00:21:42.500><c> plan</c><00:21:42.800><c> to</c><00:21:42.830><c> support</c><00:21:43.220><c> and</c><00:21:43.550><c> then</c>

00:21:44.080 --> 00:21:44.090 align:start position:0%
oldest JDK you plan to support and then
 

00:21:44.090 --> 00:21:45.880 align:start position:0%
oldest JDK you plan to support and then
distribute<00:21:44.570><c> that</c><00:21:44.660><c> instead</c><00:21:45.020><c> so</c><00:21:45.710><c> if</c><00:21:45.800><c> you</c>

00:21:45.880 --> 00:21:45.890 align:start position:0%
distribute that instead so if you
 

00:21:45.890 --> 00:21:47.680 align:start position:0%
distribute that instead so if you
actually<00:21:46.190><c> want</c><00:21:46.340><c> to</c><00:21:46.430><c> use</c><00:21:46.730><c> the</c><00:21:47.030><c> features</c><00:21:47.510><c> in</c>

00:21:47.680 --> 00:21:47.690 align:start position:0%
actually want to use the features in
 

00:21:47.690 --> 00:21:50.200 align:start position:0%
actually want to use the features in
newer<00:21:47.840><c> JDK</c><00:21:48.290><c> it's</c><00:21:48.650><c> a</c><00:21:48.740><c> bit</c><00:21:48.890><c> awkward</c><00:21:49.280><c> and</c><00:21:49.910><c> from</c>

00:21:50.200 --> 00:21:50.210 align:start position:0%
newer JDK it's a bit awkward and from
 

00:21:50.210 --> 00:21:52.270 align:start position:0%
newer JDK it's a bit awkward and from
our<00:21:50.330><c> perspective</c><00:21:50.810><c> it</c><00:21:50.900><c> slows</c><00:21:51.080><c> adoption</c><00:21:51.590><c> of</c><00:21:51.740><c> the</c>

00:21:52.270 --> 00:21:52.280 align:start position:0%
our perspective it slows adoption of the
 

00:21:52.280 --> 00:21:53.800 align:start position:0%
our perspective it slows adoption of the
new<00:21:52.310><c> features</c><00:21:52.700><c> of</c><00:21:52.730><c> the</c><00:21:52.850><c> JDK</c><00:21:53.240><c> and</c><00:21:53.270><c> we</c><00:21:53.480><c> of</c><00:21:53.570><c> course</c>

00:21:53.800 --> 00:21:53.810 align:start position:0%
new features of the JDK and we of course
 

00:21:53.810 --> 00:21:56.200 align:start position:0%
new features of the JDK and we of course
want<00:21:53.990><c> people</c><00:21:54.290><c> to</c><00:21:54.650><c> use</c><00:21:54.800><c> them</c><00:21:55.010><c> so</c><00:21:55.760><c> sometimes</c><00:21:56.090><c> you</c>

00:21:56.200 --> 00:21:56.210 align:start position:0%
want people to use them so sometimes you
 

00:21:56.210 --> 00:21:57.580 align:start position:0%
want people to use them so sometimes you
can<00:21:56.360><c> get</c><00:21:56.480><c> around</c><00:21:56.690><c> that</c><00:21:56.840><c> by</c><00:21:56.930><c> using</c><00:21:57.080><c> reflection</c>

00:21:57.580 --> 00:21:57.590 align:start position:0%
can get around that by using reflection
 

00:21:57.590 --> 00:21:59.950 align:start position:0%
can get around that by using reflection
to<00:21:58.010><c> test</c><00:21:58.220><c> for</c><00:21:58.490><c> the</c><00:21:58.610><c> new</c><00:21:58.820><c> api's</c><00:21:59.240><c> but</c><00:21:59.840><c> that's</c>

00:21:59.950 --> 00:21:59.960 align:start position:0%
to test for the new api's but that's
 

00:21:59.960 --> 00:22:01.690 align:start position:0%
to test for the new api's but that's
kind<00:22:00.170><c> of</c><00:22:00.200><c> slow</c><00:22:00.410><c> and</c><00:22:00.590><c> awkward</c><00:22:00.680><c> and</c><00:22:01.100><c> the</c>

00:22:01.690 --> 00:22:01.700 align:start position:0%
kind of slow and awkward and the
 

00:22:01.700 --> 00:22:04.150 align:start position:0%
kind of slow and awkward and the
modularity<00:22:02.060><c> features</c><00:22:02.540><c> put</c><00:22:03.080><c> in</c><00:22:03.200><c> 9</c><00:22:03.380><c> make</c><00:22:03.860><c> some</c>

00:22:04.150 --> 00:22:04.160 align:start position:0%
modularity features put in 9 make some
 

00:22:04.160 --> 00:22:06.460 align:start position:0%
modularity features put in 9 make some
shouldn't<00:22:04.550><c> be</c><00:22:04.850><c> used</c><00:22:05.120><c> api's</c><00:22:05.690><c> that</c><00:22:06.140><c> are</c><00:22:06.290><c> so</c>

00:22:06.460 --> 00:22:06.470 align:start position:0%
shouldn't be used api's that are so
 

00:22:06.470 --> 00:22:08.020 align:start position:0%
shouldn't be used api's that are so
tempting<00:22:06.830><c> to</c><00:22:06.860><c> use</c><00:22:07.070><c> some</c><00:22:07.280><c> of</c><00:22:07.370><c> those</c><00:22:07.460><c> some</c><00:22:07.910><c> not</c>

00:22:08.020 --> 00:22:08.030 align:start position:0%
tempting to use some of those some not
 

00:22:08.030 --> 00:22:09.970 align:start position:0%
tempting to use some of those some not
somehow<00:22:08.600><c> the</c><00:22:08.720><c> star</c><00:22:08.900><c> api</c><00:22:09.110><c> is</c><00:22:09.320><c> out</c><00:22:09.530><c> of</c><00:22:09.560><c> reach</c><00:22:09.800><c> or</c>

00:22:09.970 --> 00:22:09.980 align:start position:0%
somehow the star api is out of reach or
 

00:22:09.980 --> 00:22:12.070 align:start position:0%
somehow the star api is out of reach or
harder<00:22:10.250><c> to</c><00:22:10.280><c> get</c><00:22:10.460><c> to</c><00:22:10.490><c> so</c><00:22:11.480><c> what's</c><00:22:11.720><c> the</c><00:22:11.870><c> what's</c>

00:22:12.070 --> 00:22:12.080 align:start position:0%
harder to get to so what's the what's
 

00:22:12.080 --> 00:22:12.730 align:start position:0%
harder to get to so what's the what's
the<00:22:12.170><c> alternative</c>

00:22:12.730 --> 00:22:12.740 align:start position:0%
the alternative
 

00:22:12.740 --> 00:22:15.310 align:start position:0%
the alternative
the<00:22:13.640><c> alternative</c><00:22:14.090><c> here</c><00:22:14.300><c> is</c><00:22:14.510><c> multi</c><00:22:15.080><c> release</c>

00:22:15.310 --> 00:22:15.320 align:start position:0%
the alternative here is multi release
 

00:22:15.320 --> 00:22:17.830 align:start position:0%
the alternative here is multi release
jar<00:22:15.590><c> files</c><00:22:15.830><c> in</c><00:22:16.790><c> a</c><00:22:16.880><c> multi</c><00:22:17.120><c> release</c><00:22:17.330><c> jar</c><00:22:17.600><c> file</c>

00:22:17.830 --> 00:22:17.840 align:start position:0%
jar files in a multi release jar file
 

00:22:17.840 --> 00:22:19.690 align:start position:0%
jar files in a multi release jar file
there's<00:22:18.110><c> a</c><00:22:18.200><c> shared</c><00:22:18.500><c> common</c><00:22:18.710><c> area</c><00:22:19.100><c> across</c><00:22:19.520><c> the</c>

00:22:19.690 --> 00:22:19.700 align:start position:0%
there's a shared common area across the
 

00:22:19.700 --> 00:22:22.690 align:start position:0%
there's a shared common area across the
releases<00:22:20.120><c> and</c><00:22:20.300><c> then</c><00:22:21.140><c> there</c><00:22:21.580><c> directories</c><00:22:22.580><c> in</c>

00:22:22.690 --> 00:22:22.700 align:start position:0%
releases and then there directories in
 

00:22:22.700 --> 00:22:25.420 align:start position:0%
releases and then there directories in
the<00:22:22.760><c> meditative</c><00:22:23.120><c> air</c><00:22:23.390><c> iya</c><00:22:23.540><c> that</c><00:22:23.780><c> overload</c><00:22:24.440><c> or</c>

00:22:25.420 --> 00:22:25.430 align:start position:0%
the meditative air iya that overload or
 

00:22:25.430 --> 00:22:30.190 align:start position:0%
the meditative air iya that overload or
provide<00:22:25.700><c> version</c><00:22:26.540><c> specific</c><00:22:28.660><c> class</c><00:22:29.660><c> files</c><00:22:29.930><c> to</c>

00:22:30.190 --> 00:22:30.200 align:start position:0%
provide version specific class files to
 

00:22:30.200 --> 00:22:31.930 align:start position:0%
provide version specific class files to
be<00:22:30.290><c> used</c><00:22:30.500><c> in</c><00:22:30.710><c> particular</c><00:22:30.800><c> JDK</c><00:22:31.370><c> releases</c><00:22:31.790><c> so</c>

00:22:31.930 --> 00:22:31.940 align:start position:0%
be used in particular JDK releases so
 

00:22:31.940 --> 00:22:33.310 align:start position:0%
be used in particular JDK releases so
for<00:22:32.150><c> instance</c><00:22:32.420><c> there's</c><00:22:32.600><c> a</c><00:22:32.660><c> subdirectory</c><00:22:32.960><c> for</c>

00:22:33.310 --> 00:22:33.320 align:start position:0%
for instance there's a subdirectory for
 

00:22:33.320 --> 00:22:35.740 align:start position:0%
for instance there's a subdirectory for
JDK<00:22:33.590><c> 9</c><00:22:33.740><c> and</c><00:22:34.040><c> then</c><00:22:34.130><c> you</c><00:22:34.250><c> use</c><00:22:34.490><c> those</c><00:22:35.210><c> files</c><00:22:35.510><c> when</c>

00:22:35.740 --> 00:22:35.750 align:start position:0%
JDK 9 and then you use those files when
 

00:22:35.750 --> 00:22:37.240 align:start position:0%
JDK 9 and then you use those files when
you're<00:22:35.870><c> running</c><00:22:36.050><c> on</c><00:22:36.110><c> JDK</c><00:22:36.440><c> 9</c><00:22:36.620><c> as</c><00:22:36.890><c> opposed</c><00:22:37.160><c> to</c>

00:22:37.240 --> 00:22:37.250 align:start position:0%
you're running on JDK 9 as opposed to
 

00:22:37.250 --> 00:22:39.490 align:start position:0%
you're running on JDK 9 as opposed to
files<00:22:37.460><c> you'd</c><00:22:37.640><c> use</c><00:22:37.790><c> on</c><00:22:37.910><c> JDK</c><00:22:38.240><c> 8</c><00:22:38.320><c> there</c><00:22:39.320><c> are</c><00:22:39.380><c> a</c><00:22:39.410><c> few</c>

00:22:39.490 --> 00:22:39.500 align:start position:0%
files you'd use on JDK 8 there are a few
 

00:22:39.500 --> 00:22:41.560 align:start position:0%
files you'd use on JDK 8 there are a few
things<00:22:39.680><c> to</c><00:22:39.890><c> do</c><00:22:39.980><c> with</c><00:22:40.100><c> this</c><00:22:40.250><c> one</c><00:22:41.060><c> thing</c><00:22:41.270><c> you</c><00:22:41.390><c> can</c>

00:22:41.560 --> 00:22:41.570 align:start position:0%
things to do with this one thing you can
 

00:22:41.570 --> 00:22:43.270 align:start position:0%
things to do with this one thing you can
do<00:22:41.720><c> is</c><00:22:41.930><c> you</c><00:22:42.020><c> can</c><00:22:42.140><c> create</c><00:22:42.290><c> a</c><00:22:42.440><c> jar</c><00:22:42.770><c> file</c><00:22:43.040><c> that</c>

00:22:43.270 --> 00:22:43.280 align:start position:0%
do is you can create a jar file that
 

00:22:43.280 --> 00:22:46.120 align:start position:0%
do is you can create a jar file that
acts<00:22:43.460><c> as</c><00:22:43.730><c> a</c><00:22:43.790><c> regular</c><00:22:44.360><c> old</c><00:22:44.540><c> jar</c><00:22:44.840><c> file</c><00:22:45.140><c> on</c><00:22:45.410><c> JDK</c><00:22:45.920><c> 8</c>

00:22:46.120 --> 00:22:46.130 align:start position:0%
acts as a regular old jar file on JDK 8
 

00:22:46.130 --> 00:22:48.550 align:start position:0%
acts as a regular old jar file on JDK 8
and<00:22:46.490><c> earlier</c><00:22:46.850><c> but</c><00:22:47.480><c> acts</c><00:22:47.690><c> as</c><00:22:47.930><c> a</c><00:22:47.960><c> new</c><00:22:48.200><c> modular</c>

00:22:48.550 --> 00:22:48.560 align:start position:0%
and earlier but acts as a new modular
 

00:22:48.560 --> 00:22:51.580 align:start position:0%
and earlier but acts as a new modular
jar<00:22:49.070><c> file</c><00:22:49.340><c> on</c><00:22:49.640><c> JDK</c><00:22:50.000><c> 9</c><00:22:50.150><c> you</c><00:22:50.750><c> do</c><00:22:50.900><c> that</c><00:22:51.080><c> by</c><00:22:51.230><c> having</c>

00:22:51.580 --> 00:22:51.590 align:start position:0%
jar file on JDK 9 you do that by having
 

00:22:51.590 --> 00:22:53.080 align:start position:0%
jar file on JDK 9 you do that by having
the<00:22:51.710><c> module</c><00:22:52.130><c> info</c><00:22:52.400><c> doc</c><00:22:52.550><c> class</c><00:22:52.790><c> files</c>

00:22:53.080 --> 00:22:53.090 align:start position:0%
the module info doc class files
 

00:22:53.090 --> 00:22:56.230 align:start position:0%
the module info doc class files
available<00:22:53.390><c> in</c><00:22:53.720><c> the</c><00:22:53.840><c> nine</c><00:22:54.110><c> specific</c><00:22:54.490><c> area</c><00:22:55.490><c> you</c>

00:22:56.230 --> 00:22:56.240 align:start position:0%
available in the nine specific area you
 

00:22:56.240 --> 00:22:57.940 align:start position:0%
available in the nine specific area you
create<00:22:56.600><c> these</c><00:22:56.750><c> multi</c><00:22:57.320><c> release</c><00:22:57.530><c> jar</c><00:22:57.740><c> files</c>

00:22:57.940 --> 00:22:57.950 align:start position:0%
create these multi release jar files
 

00:22:57.950 --> 00:22:59.530 align:start position:0%
create these multi release jar files
using<00:22:58.220><c> the</c><00:22:58.430><c> jar</c><00:22:58.640><c> command</c><00:22:58.970><c> and</c><00:22:59.210><c> we've</c><00:22:59.360><c> updated</c>

00:22:59.530 --> 00:22:59.540 align:start position:0%
using the jar command and we've updated
 

00:22:59.540 --> 00:23:02.640 align:start position:0%
using the jar command and we've updated
the<00:23:00.050><c> other</c><00:23:00.350><c> API</c><00:23:00.740><c> is</c><00:23:00.860><c> that</c><00:23:01.130><c> consume</c><00:23:01.970><c> jar</c><00:23:02.210><c> files</c>

00:23:02.640 --> 00:23:02.650 align:start position:0%
the other API is that consume jar files
 

00:23:02.650 --> 00:23:05.680 align:start position:0%
the other API is that consume jar files
Java<00:23:03.650><c> Java</c><00:23:04.220><c> C</c><00:23:04.430><c> and</c><00:23:04.610><c> jar</c><00:23:04.790><c> seiner</c><00:23:05.030><c> to</c><00:23:05.300><c> be</c><00:23:05.390><c> multi</c>

00:23:05.680 --> 00:23:05.690 align:start position:0%
Java Java C and jar seiner to be multi
 

00:23:05.690 --> 00:23:08.710 align:start position:0%
Java Java C and jar seiner to be multi
release<00:23:06.230><c> aware</c><00:23:07.150><c> there's</c><00:23:08.150><c> tooling</c><00:23:08.570><c> support</c>

00:23:08.710 --> 00:23:08.720 align:start position:0%
release aware there's tooling support
 

00:23:08.720 --> 00:23:10.780 align:start position:0%
release aware there's tooling support
for<00:23:09.170><c> creating</c><00:23:09.320><c> multiple</c><00:23:09.650><c> East</c><00:23:09.920><c> jar</c><00:23:10.160><c> files</c><00:23:10.430><c> and</c>

00:23:10.780 --> 00:23:10.790 align:start position:0%
for creating multiple East jar files and
 

00:23:10.790 --> 00:23:13.030 align:start position:0%
for creating multiple East jar files and
and<00:23:11.270><c> maven</c><00:23:11.630><c> have</c><00:23:12.140><c> documented</c><00:23:12.500><c> ways</c><00:23:12.740><c> to</c><00:23:12.920><c> do</c>

00:23:13.030 --> 00:23:13.040 align:start position:0%
and maven have documented ways to do
 

00:23:13.040 --> 00:23:15.870 align:start position:0%
and maven have documented ways to do
that<00:23:13.220><c> and</c><00:23:13.430><c> recently</c><00:23:14.120><c> Trisha</c><00:23:14.630><c> ghee</c><00:23:14.870><c> posted</c><00:23:15.440><c> a</c>

00:23:15.870 --> 00:23:15.880 align:start position:0%
that and recently Trisha ghee posted a
 

00:23:15.880 --> 00:23:18.430 align:start position:0%
that and recently Trisha ghee posted a
demo<00:23:16.880><c> code</c><00:23:17.120><c> to</c><00:23:17.420><c> create</c><00:23:17.840><c> an</c><00:23:17.900><c> altar</c><00:23:18.050><c> release</c><00:23:18.230><c> jar</c>

00:23:18.430 --> 00:23:18.440 align:start position:0%
demo code to create an altar release jar
 

00:23:18.440 --> 00:23:20.620 align:start position:0%
demo code to create an altar release jar
files<00:23:18.650><c> and</c><00:23:18.890><c> IntelliJ</c><00:23:19.610><c> so</c><00:23:20.150><c> you</c><00:23:20.240><c> can</c><00:23:20.360><c> check</c><00:23:20.480><c> your</c>

00:23:20.620 --> 00:23:20.630 align:start position:0%
files and IntelliJ so you can check your
 

00:23:20.630 --> 00:23:24.090 align:start position:0%
files and IntelliJ so you can check your
local<00:23:21.080><c> to</c><00:23:21.380><c> tool</c><00:23:22.010><c> documentation</c><00:23:22.700><c> for</c><00:23:23.000><c> details</c>

00:23:24.090 --> 00:23:24.100 align:start position:0%
local to tool documentation for details
 

00:23:24.100 --> 00:23:26.950 align:start position:0%
local to tool documentation for details
next<00:23:25.100><c> we</c><00:23:25.190><c> start</c><00:23:25.250><c> talking</c><00:23:25.850><c> about</c><00:23:26.000><c> the</c><00:23:26.300><c> small</c>

00:23:26.950 --> 00:23:26.960 align:start position:0%
next we start talking about the small
 

00:23:26.960 --> 00:23:29.160 align:start position:0%
next we start talking about the small
language<00:23:27.290><c> changes</c><00:23:27.710><c> that</c><00:23:27.860><c> were</c><00:23:27.920><c> made</c><00:23:28.100><c> in</c><00:23:28.340><c> JDK</c><00:23:28.790><c> 9</c>

00:23:29.160 --> 00:23:29.170 align:start position:0%
language changes that were made in JDK 9
 

00:23:29.170 --> 00:23:31.720 align:start position:0%
language changes that were made in JDK 9
back<00:23:30.170><c> in</c><00:23:30.320><c> JDK</c><00:23:30.620><c> 7</c><00:23:30.890><c> we</c><00:23:30.980><c> had</c><00:23:31.100><c> a</c><00:23:31.130><c> project</c><00:23:31.370><c> called</c>

00:23:31.720 --> 00:23:31.730 align:start position:0%
back in JDK 7 we had a project called
 

00:23:31.730 --> 00:23:33.289 align:start position:0%
back in JDK 7 we had a project called
project<00:23:32.180><c> claim</c><00:23:32.450><c> that</c><00:23:32.720><c> added</c>

00:23:33.289 --> 00:23:33.299 align:start position:0%
project claim that added
 

00:23:33.299 --> 00:23:35.090 align:start position:0%
project claim that added
a<00:23:33.330><c> dozen</c><00:23:33.690><c> small</c><00:23:34.200><c> language</c><00:23:34.529><c> changes</c><00:23:34.860><c> for</c><00:23:35.009><c> the</c>

00:23:35.090 --> 00:23:35.100 align:start position:0%
a dozen small language changes for the
 

00:23:35.100 --> 00:23:37.549 align:start position:0%
a dozen small language changes for the
platform<00:23:35.580><c> and</c><00:23:35.879><c> for</c><00:23:36.360><c> three</c><00:23:36.539><c> of</c><00:23:36.690><c> those</c><00:23:36.749><c> changes</c>

00:23:37.549 --> 00:23:37.559 align:start position:0%
platform and for three of those changes
 

00:23:37.559 --> 00:23:39.019 align:start position:0%
platform and for three of those changes
we<00:23:37.649><c> have</c><00:23:37.679><c> some</c><00:23:37.980><c> cleanup</c><00:23:38.279><c> work</c><00:23:38.399><c> we</c><00:23:38.669><c> wanted</c><00:23:38.970><c> to</c>

00:23:39.019 --> 00:23:39.029 align:start position:0%
we have some cleanup work we wanted to
 

00:23:39.029 --> 00:23:41.690 align:start position:0%
we have some cleanup work we wanted to
do<00:23:39.149><c> of</c><00:23:39.480><c> work</c><00:23:40.379><c> we</c><00:23:40.529><c> couldn't</c><00:23:40.980><c> quite</c><00:23:41.070><c> finish</c><00:23:41.519><c> by</c>

00:23:41.690 --> 00:23:41.700 align:start position:0%
do of work we couldn't quite finish by
 

00:23:41.700 --> 00:23:45.470 align:start position:0%
do of work we couldn't quite finish by
the<00:23:41.730><c> end</c><00:23:41.970><c> of</c><00:23:42.029><c> JDK</c><00:23:42.360><c> 7</c><00:23:42.919><c> so</c><00:23:43.919><c> those</c><00:23:44.460><c> are</c><00:23:44.700><c> the</c><00:23:45.299><c> top</c>

00:23:45.470 --> 00:23:45.480 align:start position:0%
the end of JDK 7 so those are the top
 

00:23:45.480 --> 00:23:47.570 align:start position:0%
the end of JDK 7 so those are the top
three<00:23:45.509><c> here</c><00:23:46.049><c> project</c><00:23:46.950><c> lambda</c><00:23:47.309><c> which</c><00:23:47.429><c> was</c>

00:23:47.570 --> 00:23:47.580 align:start position:0%
three here project lambda which was
 

00:23:47.580 --> 00:23:49.369 align:start position:0%
three here project lambda which was
added<00:23:47.700><c> in</c><00:23:47.850><c> jdk</c><00:23:48.179><c> 8</c><00:23:48.360><c> also</c><00:23:48.629><c> had</c><00:23:48.960><c> a</c><00:23:48.989><c> few</c><00:23:49.259><c> small</c>

00:23:49.369 --> 00:23:49.379 align:start position:0%
added in jdk 8 also had a few small
 

00:23:49.379 --> 00:23:50.960 align:start position:0%
added in jdk 8 also had a few small
items<00:23:49.499><c> to</c><00:23:49.889><c> clean</c><00:23:50.100><c> up</c><00:23:50.220><c> so</c><00:23:50.369><c> we</c><00:23:50.489><c> kind</c><00:23:50.639><c> of</c><00:23:50.759><c> group</c>

00:23:50.960 --> 00:23:50.970 align:start position:0%
items to clean up so we kind of group
 

00:23:50.970 --> 00:23:52.879 align:start position:0%
items to clean up so we kind of group
those<00:23:51.119><c> together</c><00:23:51.299><c> and</c><00:23:51.570><c> also</c><00:23:51.779><c> fix</c><00:23:52.019><c> those</c><00:23:52.230><c> in</c><00:23:52.499><c> JDK</c>

00:23:52.879 --> 00:23:52.889 align:start position:0%
those together and also fix those in JDK
 

00:23:52.889 --> 00:23:56.330 align:start position:0%
those together and also fix those in JDK
9<00:23:53.629><c> the</c><00:23:54.629><c> first</c><00:23:54.869><c> of</c><00:23:54.989><c> these</c><00:23:55.080><c> is</c><00:23:55.139><c> safe</c><00:23:55.529><c> varargs</c><00:23:56.100><c> on</c>

00:23:56.330 --> 00:23:56.340 align:start position:0%
9 the first of these is safe varargs on
 

00:23:56.340 --> 00:23:57.700 align:start position:0%
9 the first of these is safe varargs on
private<00:23:56.700><c> instance</c><00:23:56.999><c> methods</c>

00:23:57.700 --> 00:23:57.710 align:start position:0%
private instance methods
 

00:23:57.710 --> 00:24:00.409 align:start position:0%
private instance methods
so<00:23:58.710><c> back</c><00:23:58.889><c> in</c><00:23:58.919><c> jdk</c><00:23:59.369><c> 5</c><00:23:59.580><c> or</c><00:23:59.759><c> 6</c><00:23:59.999><c> we</c><00:24:00.149><c> could</c><00:24:00.299><c> write</c>

00:24:00.409 --> 00:24:00.419 align:start position:0%
so back in jdk 5 or 6 we could write
 

00:24:00.419 --> 00:24:02.629 align:start position:0%
so back in jdk 5 or 6 we could write
code<00:24:00.659><c> like</c><00:24:00.869><c> this</c><00:24:01.080><c> we</c><00:24:01.379><c> have</c><00:24:01.470><c> a</c><00:24:01.499><c> list</c><00:24:02.220><c> of</c><00:24:02.340><c> list</c><00:24:02.519><c> of</c>

00:24:02.629 --> 00:24:02.639 align:start position:0%
code like this we have a list of list of
 

00:24:02.639 --> 00:24:04.009 align:start position:0%
code like this we have a list of list of
strings<00:24:02.970><c> and</c><00:24:03.149><c> we</c><00:24:03.269><c> want</c><00:24:03.419><c> to</c><00:24:03.480><c> help</c><00:24:03.570><c> initialize</c>

00:24:04.009 --> 00:24:04.019 align:start position:0%
strings and we want to help initialize
 

00:24:04.019 --> 00:24:07.879 align:start position:0%
strings and we want to help initialize
that<00:24:04.259><c> using</c><00:24:04.889><c> the</c><00:24:05.629><c> arrays</c><00:24:06.629><c> list</c><00:24:07.440><c> platform</c>

00:24:07.879 --> 00:24:07.889 align:start position:0%
that using the arrays list platform
 

00:24:07.889 --> 00:24:10.099 align:start position:0%
that using the arrays list platform
class<00:24:08.129><c> so</c><00:24:08.850><c> if</c><00:24:08.970><c> you</c><00:24:09.059><c> were</c><00:24:09.179><c> careful</c><00:24:09.570><c> about</c><00:24:09.869><c> your</c>

00:24:10.099 --> 00:24:10.109 align:start position:0%
class so if you were careful about your
 

00:24:10.109 --> 00:24:12.200 align:start position:0%
class so if you were careful about your
compiler<00:24:10.619><c> warnings</c><00:24:10.980><c> you</c><00:24:11.220><c> notice</c><00:24:11.909><c> you</c><00:24:12.029><c> get</c><00:24:12.179><c> a</c>

00:24:12.200 --> 00:24:12.210 align:start position:0%
compiler warnings you notice you get a
 

00:24:12.210 --> 00:24:14.690 align:start position:0%
compiler warnings you notice you get a
warning<00:24:12.480><c> like</c><00:24:12.659><c> this</c><00:24:12.869><c> warning</c><00:24:13.700><c> uncheck</c>

00:24:14.690 --> 00:24:14.700 align:start position:0%
warning like this warning uncheck
 

00:24:14.700 --> 00:24:16.249 align:start position:0%
warning like this warning uncheck
generic<00:24:15.090><c> array</c><00:24:15.269><c> creation</c><00:24:15.720><c> for</c><00:24:15.929><c> var</c><00:24:16.080><c> X</c>

00:24:16.249 --> 00:24:16.259 align:start position:0%
generic array creation for var X
 

00:24:16.259 --> 00:24:18.049 align:start position:0%
generic array creation for var X
parameter<00:24:16.710><c> of</c><00:24:16.889><c> the</c><00:24:17.369><c> array</c><00:24:17.549><c> saw</c><00:24:17.700><c> Tesla's</c>

00:24:18.049 --> 00:24:18.059 align:start position:0%
parameter of the array saw Tesla's
 

00:24:18.059 --> 00:24:21.259 align:start position:0%
parameter of the array saw Tesla's
method<00:24:18.359><c> so</c><00:24:19.289><c> what's</c><00:24:19.710><c> going</c><00:24:20.009><c> on</c><00:24:20.100><c> here</c><00:24:20.429><c> this</c>

00:24:21.259 --> 00:24:21.269 align:start position:0%
method so what's going on here this
 

00:24:21.269 --> 00:24:23.210 align:start position:0%
method so what's going on here this
warning<00:24:21.749><c> is</c><00:24:21.989><c> mandated</c><00:24:22.529><c> by</c><00:24:22.559><c> the</c><00:24:22.710><c> Java</c><00:24:23.009><c> language</c>

00:24:23.210 --> 00:24:23.220 align:start position:0%
warning is mandated by the Java language
 

00:24:23.220 --> 00:24:25.729 align:start position:0%
warning is mandated by the Java language
specification<00:24:23.609><c> and</c><00:24:24.359><c> it's</c><00:24:25.019><c> letting</c><00:24:25.559><c> you</c><00:24:25.619><c> know</c>

00:24:25.729 --> 00:24:25.739 align:start position:0%
specification and it's letting you know
 

00:24:25.739 --> 00:24:27.529 align:start position:0%
specification and it's letting you know
that<00:24:25.919><c> something</c><00:24:26.309><c> bad</c><00:24:26.519><c> might</c><00:24:27.210><c> be</c><00:24:27.359><c> happening</c>

00:24:27.529 --> 00:24:27.539 align:start position:0%
that something bad might be happening
 

00:24:27.539 --> 00:24:29.450 align:start position:0%
that something bad might be happening
the<00:24:28.499><c> something</c><00:24:28.799><c> bad</c><00:24:28.950><c> is</c><00:24:29.070><c> called</c><00:24:29.249><c> heap</c>

00:24:29.450 --> 00:24:29.460 align:start position:0%
the something bad is called heap
 

00:24:29.460 --> 00:24:31.460 align:start position:0%
the something bad is called heap
pollution<00:24:29.909><c> which</c><00:24:30.239><c> would</c><00:24:30.509><c> be</c><00:24:30.600><c> a</c><00:24:30.629><c> violation</c><00:24:30.840><c> of</c>

00:24:31.460 --> 00:24:31.470 align:start position:0%
pollution which would be a violation of
 

00:24:31.470 --> 00:24:34.930 align:start position:0%
pollution which would be a violation of
Java's<00:24:32.159><c> type</c><00:24:32.759><c> constraints</c><00:24:33.239><c> and</c><00:24:33.629><c> if</c><00:24:34.409><c> the</c>

00:24:34.930 --> 00:24:34.940 align:start position:0%
Java's type constraints and if the
 

00:24:34.940 --> 00:24:38.149 align:start position:0%
Java's type constraints and if the
arrays<00:24:35.940><c> dot</c><00:24:36.179><c> s</c><00:24:36.389><c> list</c><00:24:36.690><c> method</c><00:24:36.869><c> was</c><00:24:37.619><c> malicious</c>

00:24:38.149 --> 00:24:38.159 align:start position:0%
arrays dot s list method was malicious
 

00:24:38.159 --> 00:24:40.519 align:start position:0%
arrays dot s list method was malicious
and<00:24:38.369><c> not</c><00:24:39.059><c> implemented</c><00:24:39.509><c> properly</c><00:24:39.720><c> it</c><00:24:40.169><c> could</c><00:24:40.440><c> be</c>

00:24:40.519 --> 00:24:40.529 align:start position:0%
and not implemented properly it could be
 

00:24:40.529 --> 00:24:41.869 align:start position:0%
and not implemented properly it could be
causing<00:24:40.859><c> this</c><00:24:40.919><c> kind</c><00:24:41.009><c> of</c><00:24:41.220><c> heat</c><00:24:41.429><c> pollution</c>

00:24:41.869 --> 00:24:41.879 align:start position:0%
causing this kind of heat pollution
 

00:24:41.879 --> 00:24:44.269 align:start position:0%
causing this kind of heat pollution
however<00:24:42.480><c> in</c><00:24:42.899><c> this</c><00:24:43.019><c> case</c><00:24:43.129><c> nothing</c><00:24:44.129><c> bad</c>

00:24:44.269 --> 00:24:44.279 align:start position:0%
however in this case nothing bad
 

00:24:44.279 --> 00:24:46.310 align:start position:0%
however in this case nothing bad
actually<00:24:44.820><c> happens</c><00:24:45.179><c> already</c><00:24:45.929><c> it's</c><00:24:46.080><c> not</c><00:24:46.169><c> as</c>

00:24:46.310 --> 00:24:46.320 align:start position:0%
actually happens already it's not as
 

00:24:46.320 --> 00:24:48.109 align:start position:0%
actually happens already it's not as
listen<00:24:46.649><c> the</c><00:24:46.739><c> platform</c><00:24:47.190><c> is</c><00:24:47.369><c> not</c><00:24:47.609><c> a</c><00:24:47.669><c> malicious</c>

00:24:48.109 --> 00:24:48.119 align:start position:0%
listen the platform is not a malicious
 

00:24:48.119 --> 00:24:50.180 align:start position:0%
listen the platform is not a malicious
method<00:24:48.450><c> so</c><00:24:48.929><c> this</c><00:24:49.080><c> errors</c><00:24:49.350><c> are</c><00:24:49.470><c> false</c><00:24:49.649><c> positive</c>

00:24:50.180 --> 00:24:50.190 align:start position:0%
method so this errors are false positive
 

00:24:50.190 --> 00:24:52.340 align:start position:0%
method so this errors are false positive
it's<00:24:50.399><c> uninformative</c><00:24:50.909><c> so</c><00:24:51.779><c> uninformative</c>

00:24:52.340 --> 00:24:52.350 align:start position:0%
it's uninformative so uninformative
 

00:24:52.350 --> 00:24:53.690 align:start position:0%
it's uninformative so uninformative
warning<00:24:52.739><c> messages</c><00:24:53.070><c> aren't</c><00:24:53.279><c> good</c>

00:24:53.690 --> 00:24:53.700 align:start position:0%
warning messages aren't good
 

00:24:53.700 --> 00:24:56.840 align:start position:0%
warning messages aren't good
so<00:24:54.059><c> we</c><00:24:54.210><c> addressed</c><00:24:54.539><c> this</c><00:24:54.659><c> problem</c><00:24:55.369><c> back</c><00:24:56.369><c> in</c><00:24:56.429><c> jdk</c>

00:24:56.840 --> 00:24:56.850 align:start position:0%
so we addressed this problem back in jdk
 

00:24:56.850 --> 00:24:59.810 align:start position:0%
so we addressed this problem back in jdk
7<00:24:57.210><c> by</c><00:24:57.629><c> adding</c><00:24:58.019><c> the</c><00:24:58.259><c> safe</c><00:24:58.559><c> varargs</c><00:24:59.100><c> annotation</c>

00:24:59.810 --> 00:24:59.820 align:start position:0%
7 by adding the safe varargs annotation
 

00:24:59.820 --> 00:25:01.879 align:start position:0%
7 by adding the safe varargs annotation
type<00:25:00.029><c> and</c><00:25:00.210><c> the</c><00:25:00.749><c> safe</c><00:25:00.960><c> varargs</c><00:25:01.350><c> annotation</c>

00:25:01.879 --> 00:25:01.889 align:start position:0%
type and the safe varargs annotation
 

00:25:01.889 --> 00:25:03.830 align:start position:0%
type and the safe varargs annotation
type<00:25:02.129><c> lets</c><00:25:02.669><c> you</c><00:25:02.879><c> tell</c><00:25:03.239><c> the</c><00:25:03.359><c> compiler</c><00:25:03.629><c> that</c>

00:25:03.830 --> 00:25:03.840 align:start position:0%
type lets you tell the compiler that
 

00:25:03.840 --> 00:25:06.019 align:start position:0%
type lets you tell the compiler that
your<00:25:04.590><c> varargs</c><00:25:05.070><c> method</c><00:25:05.460><c> is</c><00:25:05.580><c> not</c><00:25:05.669><c> in</c><00:25:05.879><c> fact</c>

00:25:06.019 --> 00:25:06.029 align:start position:0%
your varargs method is not in fact
 

00:25:06.029 --> 00:25:07.519 align:start position:0%
your varargs method is not in fact
malicious<00:25:06.570><c> and</c><00:25:06.749><c> it</c><00:25:06.960><c> shouldn't</c><00:25:07.200><c> warn</c><00:25:07.379><c> people</c>

00:25:07.519 --> 00:25:07.529 align:start position:0%
malicious and it shouldn't warn people
 

00:25:07.529 --> 00:25:10.129 align:start position:0%
malicious and it shouldn't warn people
about<00:25:07.679><c> it</c><00:25:07.980><c> so</c><00:25:08.759><c> this</c><00:25:09.059><c> does</c><00:25:09.269><c> two</c><00:25:09.450><c> things</c><00:25:09.720><c> both</c><00:25:09.929><c> it</c>

00:25:10.129 --> 00:25:10.139 align:start position:0%
about it so this does two things both it
 

00:25:10.139 --> 00:25:11.960 align:start position:0%
about it so this does two things both it
removes<00:25:10.440><c> warnings</c><00:25:10.919><c> when</c><00:25:11.340><c> you</c><00:25:11.429><c> declare</c><00:25:11.820><c> the</c>

00:25:11.960 --> 00:25:11.970 align:start position:0%
removes warnings when you declare the
 

00:25:11.970 --> 00:25:13.999 align:start position:0%
removes warnings when you declare the
large<00:25:12.149><c> method</c><00:25:12.690><c> and</c><00:25:12.840><c> more</c><00:25:13.409><c> importantly</c><00:25:13.859><c> it</c>

00:25:13.999 --> 00:25:14.009 align:start position:0%
large method and more importantly it
 

00:25:14.009 --> 00:25:15.859 align:start position:0%
large method and more importantly it
removes<00:25:14.340><c> warnings</c><00:25:14.909><c> every</c><00:25:15.179><c> time</c><00:25:15.330><c> people</c><00:25:15.480><c> call</c>

00:25:15.859 --> 00:25:15.869 align:start position:0%
removes warnings every time people call
 

00:25:15.869 --> 00:25:18.229 align:start position:0%
removes warnings every time people call
the<00:25:16.320><c> varargs</c><00:25:16.649><c> method</c><00:25:17.039><c> so</c><00:25:17.460><c> we</c><00:25:17.580><c> applied</c><00:25:18.119><c> this</c>

00:25:18.229 --> 00:25:18.239 align:start position:0%
the varargs method so we applied this
 

00:25:18.239 --> 00:25:20.029 align:start position:0%
the varargs method so we applied this
annotation<00:25:18.629><c> to</c><00:25:18.809><c> arrays</c><00:25:19.139><c> that</c><00:25:19.350><c> as</c><00:25:19.499><c> lists</c><00:25:19.799><c> and</c>

00:25:20.029 --> 00:25:20.039 align:start position:0%
annotation to arrays that as lists and
 

00:25:20.039 --> 00:25:21.349 align:start position:0%
annotation to arrays that as lists and
the<00:25:20.190><c> other</c><00:25:20.309><c> appropriate</c><00:25:20.759><c> message</c><00:25:21.029><c> in</c><00:25:21.239><c> the</c>

00:25:21.349 --> 00:25:21.359 align:start position:0%
the other appropriate message in the
 

00:25:21.359 --> 00:25:23.779 align:start position:0%
the other appropriate message in the
platform<00:25:22.279><c> because</c><00:25:23.279><c> of</c><00:25:23.309><c> the</c><00:25:23.519><c> design</c><00:25:23.759><c> of</c>

00:25:23.779 --> 00:25:23.789 align:start position:0%
platform because of the design of
 

00:25:23.789 --> 00:25:25.970 align:start position:0%
platform because of the design of
annotations<00:25:24.419><c> you</c><00:25:24.659><c> can</c><00:25:24.869><c> annotations</c><00:25:25.710><c> are</c><00:25:25.799><c> only</c>

00:25:25.970 --> 00:25:25.980 align:start position:0%
annotations you can annotations are only
 

00:25:25.980 --> 00:25:28.849 align:start position:0%
annotations you can annotations are only
in<00:25:26.129><c> heret</c><00:25:26.759><c> Adhan</c><00:25:26.970><c> classes</c><00:25:27.509><c> not</c><00:25:28.080><c> interfaces</c><00:25:28.739><c> or</c>

00:25:28.849 --> 00:25:28.859 align:start position:0%
in heret Adhan classes not interfaces or
 

00:25:28.859 --> 00:25:31.369 align:start position:0%
in heret Adhan classes not interfaces or
methods<00:25:29.419><c> therefore</c><00:25:30.419><c> the</c><00:25:30.659><c> safe</c><00:25:30.869><c> varargs</c>

00:25:31.369 --> 00:25:31.379 align:start position:0%
methods therefore the safe varargs
 

00:25:31.379 --> 00:25:33.859 align:start position:0%
methods therefore the safe varargs
annotation<00:25:32.070><c> can</c><00:25:32.249><c> only</c><00:25:32.460><c> be</c><00:25:33.090><c> used</c><00:25:33.269><c> on</c><00:25:33.419><c> methods</c>

00:25:33.859 --> 00:25:33.869 align:start position:0%
annotation can only be used on methods
 

00:25:33.869 --> 00:25:35.930 align:start position:0%
annotation can only be used on methods
that<00:25:34.049><c> can't</c><00:25:34.230><c> be</c><00:25:34.289><c> overridden</c><00:25:34.739><c> so</c><00:25:35.519><c> what</c><00:25:35.700><c> kinds</c>

00:25:35.930 --> 00:25:35.940 align:start position:0%
that can't be overridden so what kinds
 

00:25:35.940 --> 00:25:38.180 align:start position:0%
that can't be overridden so what kinds
of<00:25:35.970><c> methods</c><00:25:36.269><c> can't</c><00:25:36.450><c> be</c><00:25:36.539><c> overridden</c><00:25:37.190><c> final</c>

00:25:38.180 --> 00:25:38.190 align:start position:0%
of methods can't be overridden final
 

00:25:38.190 --> 00:25:42.230 align:start position:0%
of methods can't be overridden final
methods<00:25:38.929><c> static</c><00:25:39.929><c> methods</c><00:25:40.369><c> also</c><00:25:41.369><c> constructors</c>

00:25:42.230 --> 00:25:42.240 align:start position:0%
methods static methods also constructors
 

00:25:42.240 --> 00:25:43.940 align:start position:0%
methods static methods also constructors
which<00:25:42.809><c> from</c><00:25:42.990><c> a</c><00:25:43.049><c> certain</c><00:25:43.350><c> point</c><00:25:43.470><c> of</c><00:25:43.619><c> view</c><00:25:43.679><c> are</c>

00:25:43.940 --> 00:25:43.950 align:start position:0%
which from a certain point of view are
 

00:25:43.950 --> 00:25:46.460 align:start position:0%
which from a certain point of view are
just<00:25:44.249><c> very</c><00:25:44.519><c> special</c><00:25:44.940><c> static</c><00:25:45.269><c> methods</c><00:25:45.629><c> so</c><00:25:46.259><c> are</c>

00:25:46.460 --> 00:25:46.470 align:start position:0%
just very special static methods so are
 

00:25:46.470 --> 00:25:47.120 align:start position:0%
just very special static methods so are
there<00:25:46.619><c> any</c><00:25:46.710><c> other</c>

00:25:47.120 --> 00:25:47.130 align:start position:0%
there any other
 

00:25:47.130 --> 00:25:48.110 align:start position:0%
there any other
kinds<00:25:47.400><c> of</c><00:25:47.460><c> message</c><00:25:47.730><c> that</c><00:25:47.910><c> can't</c><00:25:48.060><c> be</c>

00:25:48.110 --> 00:25:48.120 align:start position:0%
kinds of message that can't be
 

00:25:48.120 --> 00:25:52.040 align:start position:0%
kinds of message that can't be
overridden<00:25:50.000><c> there</c><00:25:51.000><c> are</c><00:25:51.120><c> private</c><00:25:51.540><c> methods</c><00:25:51.840><c> and</c>

00:25:52.040 --> 00:25:52.050 align:start position:0%
overridden there are private methods and
 

00:25:52.050 --> 00:25:55.580 align:start position:0%
overridden there are private methods and
we<00:25:52.350><c> forgot</c><00:25:52.590><c> about</c><00:25:52.650><c> those</c><00:25:52.920><c> ones</c><00:25:53.220><c> in</c><00:25:53.580><c> JDK</c><00:25:54.210><c> 7</c><00:25:54.590><c> but</c>

00:25:55.580 --> 00:25:55.590 align:start position:0%
we forgot about those ones in JDK 7 but
 

00:25:55.590 --> 00:25:57.710 align:start position:0%
we forgot about those ones in JDK 7 but
now<00:25:55.770><c> we've</c><00:25:56.010><c> changed</c><00:25:56.280><c> the</c><00:25:56.670><c> specification</c><00:25:57.270><c> in</c>

00:25:57.710 --> 00:25:57.720 align:start position:0%
now we've changed the specification in
 

00:25:57.720 --> 00:26:00.380 align:start position:0%
now we've changed the specification in
implementation<00:25:58.170><c> to</c><00:25:58.920><c> also</c><00:25:59.310><c> allow</c><00:25:59.430><c> safer</c><00:26:00.060><c> RS</c><00:26:00.300><c> on</c>

00:26:00.380 --> 00:26:00.390 align:start position:0%
implementation to also allow safer RS on
 

00:26:00.390 --> 00:26:01.850 align:start position:0%
implementation to also allow safer RS on
private<00:26:00.720><c> methods</c><00:26:01.050><c> so</c><00:26:01.200><c> if</c><00:26:01.290><c> you</c><00:26:01.380><c> have</c><00:26:01.590><c> such</c><00:26:01.830><c> a</c>

00:26:01.850 --> 00:26:01.860 align:start position:0%
private methods so if you have such a
 

00:26:01.860 --> 00:26:04.130 align:start position:0%
private methods so if you have such a
method<00:26:02.190><c> you</c><00:26:02.340><c> can</c><00:26:02.490><c> now</c><00:26:02.580><c> use</c><00:26:02.790><c> the</c><00:26:03.140><c> annotation</c>

00:26:04.130 --> 00:26:04.140 align:start position:0%
method you can now use the annotation
 

00:26:04.140 --> 00:26:07.910 align:start position:0%
method you can now use the annotation
line<00:26:05.480><c> the</c><00:26:06.480><c> other</c><00:26:06.630><c> next</c><00:26:06.960><c> change</c><00:26:07.140><c> we</c><00:26:07.260><c> made</c><00:26:07.440><c> deals</c>

00:26:07.910 --> 00:26:07.920 align:start position:0%
line the other next change we made deals
 

00:26:07.920 --> 00:26:10.430 align:start position:0%
line the other next change we made deals
with<00:26:08.070><c> the</c><00:26:08.220><c> try</c><00:26:08.640><c> with</c><00:26:08.790><c> resources</c><00:26:09.270><c> statement</c><00:26:09.810><c> so</c>

00:26:10.430 --> 00:26:10.440 align:start position:0%
with the try with resources statement so
 

00:26:10.440 --> 00:26:13.310 align:start position:0%
with the try with resources statement so
just<00:26:10.680><c> as</c><00:26:10.770><c> a</c><00:26:10.800><c> quick</c><00:26:11.070><c> refresher</c><00:26:12.050><c> you</c><00:26:13.050><c> have</c><00:26:13.170><c> your</c>

00:26:13.310 --> 00:26:13.320 align:start position:0%
just as a quick refresher you have your
 

00:26:13.320 --> 00:26:16.010 align:start position:0%
just as a quick refresher you have your
resource<00:26:13.650><c> are</c><00:26:13.860><c> being</c><00:26:14.130><c> managed</c><00:26:14.520><c> and</c><00:26:15.020><c> behind</c>

00:26:16.010 --> 00:26:16.020 align:start position:0%
resource are being managed and behind
 

00:26:16.020 --> 00:26:18.590 align:start position:0%
resource are being managed and behind
the<00:26:16.140><c> scenes</c><00:26:16.380><c> the</c><00:26:16.620><c> compiler</c><00:26:17.180><c> creates</c><00:26:18.180><c> a</c>

00:26:18.590 --> 00:26:18.600 align:start position:0%
the scenes the compiler creates a
 

00:26:18.600 --> 00:26:20.570 align:start position:0%
the scenes the compiler creates a
implicit<00:26:19.230><c> finally</c><00:26:19.740><c> block</c><00:26:19.950><c> for</c><00:26:20.220><c> you</c><00:26:20.310><c> to</c><00:26:20.400><c> call</c>

00:26:20.570 --> 00:26:20.580 align:start position:0%
implicit finally block for you to call
 

00:26:20.580 --> 00:26:22.730 align:start position:0%
implicit finally block for you to call
closed<00:26:20.880><c> on</c><00:26:21.150><c> the</c><00:26:21.240><c> resource</c><00:26:21.600><c> as</c><00:26:22.320><c> long</c><00:26:22.470><c> as</c><00:26:22.590><c> it's</c>

00:26:22.730 --> 00:26:22.740 align:start position:0%
closed on the resource as long as it's
 

00:26:22.740 --> 00:26:26.090 align:start position:0%
closed on the resource as long as it's
not<00:26:22.800><c> null</c><00:26:23.100><c> now</c><00:26:23.990><c> in</c><00:26:24.990><c> full</c><00:26:25.290><c> disclosure</c><00:26:25.410><c> the</c>

00:26:26.090 --> 00:26:26.100 align:start position:0%
not null now in full disclosure the
 

00:26:26.100 --> 00:26:29.090 align:start position:0%
not null now in full disclosure the
actual<00:26:26.750><c> code</c><00:26:27.750><c> the</c><00:26:27.990><c> compiler</c><00:26:28.350><c> uses</c><00:26:28.830><c> is</c><00:26:28.950><c> a</c><00:26:28.980><c> bit</c>

00:26:29.090 --> 00:26:29.100 align:start position:0%
actual code the compiler uses is a bit
 

00:26:29.100 --> 00:26:31.520 align:start position:0%
actual code the compiler uses is a bit
more<00:26:29.280><c> complicated</c><00:26:29.780><c> this</c><00:26:30.780><c> is</c><00:26:30.930><c> the</c><00:26:31.050><c> actual</c><00:26:31.350><c> to</c>

00:26:31.520 --> 00:26:31.530 align:start position:0%
more complicated this is the actual to
 

00:26:31.530 --> 00:26:33.560 align:start position:0%
more complicated this is the actual to
sugaring<00:26:31.830><c> here</c><00:26:32.190><c> the</c><00:26:32.820><c> extra</c><00:26:33.180><c> complex</c>

00:26:33.560 --> 00:26:33.570 align:start position:0%
sugaring here the extra complex
 

00:26:33.570 --> 00:26:35.540 align:start position:0%
sugaring here the extra complex
complexity<00:26:34.410><c> is</c><00:26:34.530><c> to</c><00:26:34.650><c> give</c><00:26:34.770><c> better</c><00:26:35.010><c> exception</c>

00:26:35.540 --> 00:26:35.550 align:start position:0%
complexity is to give better exception
 

00:26:35.550 --> 00:26:36.890 align:start position:0%
complexity is to give better exception
handling<00:26:35.760><c> but</c><00:26:36.060><c> we</c><00:26:36.390><c> don't</c><00:26:36.540><c> have</c><00:26:36.660><c> to</c><00:26:36.750><c> worry</c>

00:26:36.890 --> 00:26:36.900 align:start position:0%
handling but we don't have to worry
 

00:26:36.900 --> 00:26:38.570 align:start position:0%
handling but we don't have to worry
about<00:26:36.990><c> this</c><00:26:37.230><c> the</c><00:26:37.410><c> compiler</c><00:26:37.830><c> takes</c><00:26:38.190><c> care</c><00:26:38.430><c> of</c><00:26:38.460><c> it</c>

00:26:38.570 --> 00:26:38.580 align:start position:0%
about this the compiler takes care of it
 

00:26:38.580 --> 00:26:43.460 align:start position:0%
about this the compiler takes care of it
for<00:26:38.700><c> us</c><00:26:39.620><c> so</c><00:26:40.670><c> in</c><00:26:41.670><c> JDK</c><00:26:42.030><c> 7</c><00:26:42.390><c> the</c><00:26:42.930><c> resource</c><00:26:43.290><c> being</c>

00:26:43.460 --> 00:26:43.470 align:start position:0%
for us so in JDK 7 the resource being
 

00:26:43.470 --> 00:26:45.170 align:start position:0%
for us so in JDK 7 the resource being
managed<00:26:43.770><c> had</c><00:26:43.920><c> to</c><00:26:44.010><c> be</c><00:26:44.130><c> a</c><00:26:44.160><c> fresh</c><00:26:44.520><c> variable</c>

00:26:45.170 --> 00:26:45.180 align:start position:0%
managed had to be a fresh variable
 

00:26:45.180 --> 00:26:46.550 align:start position:0%
managed had to be a fresh variable
associate<00:26:45.630><c> with</c><00:26:45.720><c> the</c><00:26:45.780><c> tribe</c><00:26:45.960><c> earth</c><00:26:46.080><c> resources</c>

00:26:46.550 --> 00:26:46.560 align:start position:0%
associate with the tribe earth resources
 

00:26:46.560 --> 00:26:48.200 align:start position:0%
associate with the tribe earth resources
statement<00:26:47.010><c> that</c><00:26:47.670><c> wasn't</c><00:26:48.000><c> the</c><00:26:48.060><c> initial</c>

00:26:48.200 --> 00:26:48.210 align:start position:0%
statement that wasn't the initial
 

00:26:48.210 --> 00:26:50.510 align:start position:0%
statement that wasn't the initial
proposal<00:26:48.780><c> however</c><00:26:49.190><c> originally</c><00:26:50.190><c> you</c><00:26:50.340><c> could</c>

00:26:50.510 --> 00:26:50.520 align:start position:0%
proposal however originally you could
 

00:26:50.520 --> 00:26:52.010 align:start position:0%
proposal however originally you could
use<00:26:50.670><c> any</c><00:26:50.910><c> expression</c><00:26:51.480><c> with</c><00:26:51.570><c> the</c><00:26:51.660><c> right</c><00:26:51.810><c> type</c>

00:26:52.010 --> 00:26:52.020 align:start position:0%
use any expression with the right type
 

00:26:52.020 --> 00:26:54.170 align:start position:0%
use any expression with the right type
which<00:26:52.230><c> was</c><00:26:52.350><c> Auto</c><00:26:52.560><c> closable</c><00:26:53.130><c> meaning</c><00:26:53.700><c> closed</c>

00:26:54.170 --> 00:26:54.180 align:start position:0%
which was Auto closable meaning closed
 

00:26:54.180 --> 00:26:55.940 align:start position:0%
which was Auto closable meaning closed
method<00:26:54.480><c> was</c><00:26:54.630><c> there</c><00:26:54.780><c> but</c><00:26:55.380><c> we</c><00:26:55.470><c> found</c><00:26:55.620><c> there's</c><00:26:55.860><c> a</c>

00:26:55.940 --> 00:26:55.950 align:start position:0%
method was there but we found there's a
 

00:26:55.950 --> 00:26:58.310 align:start position:0%
method was there but we found there's a
problem<00:26:56.700><c> using</c><00:26:56.880><c> that</c><00:26:57.120><c> so</c><00:26:57.840><c> let's</c><00:26:58.020><c> say</c><00:26:58.170><c> we</c>

00:26:58.310 --> 00:26:58.320 align:start position:0%
problem using that so let's say we
 

00:26:58.320 --> 00:27:00.410 align:start position:0%
problem using that so let's say we
initialize<00:26:59.220><c> our</c><00:26:59.400><c> resource</c><00:26:59.760><c> R</c><00:26:59.970><c> to</c><00:27:00.150><c> a</c><00:27:00.180><c> new</c>

00:27:00.410 --> 00:27:00.420 align:start position:0%
initialize our resource R to a new
 

00:27:00.420 --> 00:27:02.720 align:start position:0%
initialize our resource R to a new
resource<00:27:00.720><c> object</c><00:27:01.200><c> and</c><00:27:01.410><c> then</c><00:27:02.040><c> within</c><00:27:02.250><c> the</c><00:27:02.550><c> try</c>

00:27:02.720 --> 00:27:02.730 align:start position:0%
resource object and then within the try
 

00:27:02.730 --> 00:27:04.730 align:start position:0%
resource object and then within the try
block<00:27:02.790><c> we</c><00:27:03.570><c> make</c><00:27:03.750><c> our</c><00:27:03.960><c> point</c><00:27:04.290><c> to</c><00:27:04.440><c> a</c><00:27:04.470><c> different</c>

00:27:04.730 --> 00:27:04.740 align:start position:0%
block we make our point to a different
 

00:27:04.740 --> 00:27:07.010 align:start position:0%
block we make our point to a different
resource<00:27:05.160><c> object</c><00:27:05.640><c> now</c><00:27:06.420><c> we</c><00:27:06.480><c> come</c><00:27:06.750><c> to</c><00:27:06.780><c> the</c><00:27:06.930><c> end</c>

00:27:07.010 --> 00:27:07.020 align:start position:0%
resource object now we come to the end
 

00:27:07.020 --> 00:27:08.240 align:start position:0%
resource object now we come to the end
of<00:27:07.110><c> the</c><00:27:07.170><c> try</c><00:27:07.320><c> block</c><00:27:07.470><c> and</c><00:27:07.950><c> what</c><00:27:08.130><c> are</c><00:27:08.190><c> we</c>

00:27:08.240 --> 00:27:08.250 align:start position:0%
of the try block and what are we
 

00:27:08.250 --> 00:27:10.430 align:start position:0%
of the try block and what are we
supposed<00:27:08.460><c> to</c><00:27:08.520><c> do</c><00:27:08.750><c> which</c><00:27:09.750><c> object</c><00:27:10.230><c> is</c><00:27:10.320><c> supposed</c>

00:27:10.430 --> 00:27:10.440 align:start position:0%
supposed to do which object is supposed
 

00:27:10.440 --> 00:27:13.250 align:start position:0%
supposed to do which object is supposed
to<00:27:10.590><c> get</c><00:27:10.710><c> its</c><00:27:10.830><c> closed</c><00:27:11.190><c> method</c><00:27:11.490><c> called</c><00:27:12.020><c> well</c><00:27:13.020><c> we</c>

00:27:13.250 --> 00:27:13.260 align:start position:0%
to get its closed method called well we
 

00:27:13.260 --> 00:27:14.480 align:start position:0%
to get its closed method called well we
decided<00:27:13.650><c> we</c><00:27:13.830><c> didn't</c><00:27:13.980><c> want</c><00:27:14.010><c> to</c><00:27:14.160><c> have</c><00:27:14.250><c> to</c><00:27:14.310><c> solve</c>

00:27:14.480 --> 00:27:14.490 align:start position:0%
decided we didn't want to have to solve
 

00:27:14.490 --> 00:27:16.040 align:start position:0%
decided we didn't want to have to solve
this<00:27:14.580><c> problems</c><00:27:14.940><c> and</c><00:27:15.390><c> the</c><00:27:15.480><c> way</c><00:27:15.510><c> we</c><00:27:15.750><c> decide</c><00:27:16.020><c> not</c>

00:27:16.040 --> 00:27:16.050 align:start position:0%
this problems and the way we decide not
 

00:27:16.050 --> 00:27:18.280 align:start position:0%
this problems and the way we decide not
to<00:27:16.200><c> solve</c><00:27:16.410><c> it</c><00:27:16.560><c> was</c><00:27:16.710><c> to</c><00:27:16.920><c> require</c><00:27:17.160><c> a</c><00:27:17.280><c> final</c>

00:27:18.280 --> 00:27:18.290 align:start position:0%
to solve it was to require a final
 

00:27:18.290 --> 00:27:20.720 align:start position:0%
to solve it was to require a final
require<00:27:19.290><c> that</c><00:27:19.440><c> new</c><00:27:19.620><c> final</c><00:27:19.920><c> variable</c><00:27:20.220><c> as</c><00:27:20.430><c> part</c>

00:27:20.720 --> 00:27:20.730 align:start position:0%
require that new final variable as part
 

00:27:20.730 --> 00:27:23.450 align:start position:0%
require that new final variable as part
of<00:27:20.790><c> the</c><00:27:20.850><c> drivers</c><00:27:21.120><c> resources</c><00:27:21.600><c> statement</c><00:27:22.460><c> but</c>

00:27:23.450 --> 00:27:23.460 align:start position:0%
of the drivers resources statement but
 

00:27:23.460 --> 00:27:25.460 align:start position:0%
of the drivers resources statement but
this<00:27:23.640><c> was</c><00:27:23.820><c> actually</c><00:27:24.000><c> a</c><00:27:24.420><c> little</c><00:27:24.630><c> bit</c><00:27:24.990><c> stricter</c>

00:27:25.460 --> 00:27:25.470 align:start position:0%
this was actually a little bit stricter
 

00:27:25.470 --> 00:27:28.220 align:start position:0%
this was actually a little bit stricter
than<00:27:25.800><c> would</c><00:27:26.670><c> need</c><00:27:26.880><c> to</c><00:27:27.000><c> be</c><00:27:27.150><c> so</c><00:27:27.750><c> if</c><00:27:27.930><c> we</c><00:27:28.050><c> already</c>

00:27:28.220 --> 00:27:28.230 align:start position:0%
than would need to be so if we already
 

00:27:28.230 --> 00:27:30.920 align:start position:0%
than would need to be so if we already
know<00:27:28.500><c> that</c><00:27:28.530><c> the</c><00:27:28.890><c> some</c><00:27:29.850><c> resource</c><00:27:30.300><c> variable</c><00:27:30.750><c> is</c>

00:27:30.920 --> 00:27:30.930 align:start position:0%
know that the some resource variable is
 

00:27:30.930 --> 00:27:33.080 align:start position:0%
know that the some resource variable is
final<00:27:31.440><c> or</c><00:27:31.560><c> effectively</c><00:27:31.950><c> final</c><00:27:32.370><c> why</c><00:27:32.880><c> do</c><00:27:32.940><c> we</c>

00:27:33.080 --> 00:27:33.090 align:start position:0%
final or effectively final why do we
 

00:27:33.090 --> 00:27:35.510 align:start position:0%
final or effectively final why do we
have<00:27:33.210><c> to</c><00:27:33.330><c> declare</c><00:27:33.630><c> a</c><00:27:33.690><c> new</c><00:27:34.590><c> fresh</c><00:27:34.950><c> final</c><00:27:35.400><c> or</c>

00:27:35.510 --> 00:27:35.520 align:start position:0%
have to declare a new fresh final or
 

00:27:35.520 --> 00:27:37.490 align:start position:0%
have to declare a new fresh final or
variable<00:27:36.330><c> to</c><00:27:36.420><c> take</c><00:27:36.540><c> care</c><00:27:36.720><c> of</c><00:27:36.750><c> it</c><00:27:36.930><c> there's</c>

00:27:37.490 --> 00:27:37.500 align:start position:0%
variable to take care of it there's
 

00:27:37.500 --> 00:27:39.650 align:start position:0%
variable to take care of it there's
really<00:27:37.590><c> no</c><00:27:37.770><c> reason</c><00:27:37.920><c> to</c><00:27:38.100><c> do</c><00:27:38.190><c> that</c><00:27:38.220><c> and</c><00:27:38.580><c> that</c><00:27:39.450><c> is</c>

00:27:39.650 --> 00:27:39.660 align:start position:0%
really no reason to do that and that is
 

00:27:39.660 --> 00:27:41.450 align:start position:0%
really no reason to do that and that is
indeed<00:27:39.960><c> the</c><00:27:39.990><c> change</c><00:27:40.290><c> now</c><00:27:40.530><c> we've</c><00:27:40.680><c> made</c><00:27:40.890><c> in</c><00:27:41.070><c> JDK</c>

00:27:41.450 --> 00:27:41.460 align:start position:0%
indeed the change now we've made in JDK
 

00:27:41.460 --> 00:27:44.480 align:start position:0%
indeed the change now we've made in JDK
9<00:27:41.640><c> so</c><00:27:42.240><c> if</c><00:27:42.360><c> you</c><00:27:42.450><c> already</c><00:27:42.780><c> have</c><00:27:42.960><c> a</c><00:27:43.490><c> final</c>

00:27:44.480 --> 00:27:44.490 align:start position:0%
9 so if you already have a final
 

00:27:44.490 --> 00:27:45.800 align:start position:0%
9 so if you already have a final
variable<00:27:44.820><c> you</c><00:27:45.060><c> don't</c><00:27:45.240><c> have</c><00:27:45.360><c> to</c><00:27:45.450><c> make</c><00:27:45.570><c> a</c><00:27:45.600><c> new</c>

00:27:45.800 --> 00:27:45.810 align:start position:0%
variable you don't have to make a new
 

00:27:45.810 --> 00:27:47.240 align:start position:0%
variable you don't have to make a new
one<00:27:45.930><c> you</c><00:27:46.170><c> can</c><00:27:46.230><c> just</c><00:27:46.470><c> reuse</c><00:27:46.620><c> the</c><00:27:46.890><c> one</c><00:27:47.010><c> you</c><00:27:47.100><c> have</c>

00:27:47.240 --> 00:27:47.250 align:start position:0%
one you can just reuse the one you have
 

00:27:47.250 --> 00:27:48.740 align:start position:0%
one you can just reuse the one you have
so<00:27:47.550><c> it</c><00:27:47.640><c> makes</c><00:27:47.790><c> it</c><00:27:47.880><c> try</c><00:27:48.300><c> our</c><00:27:48.390><c> three</c><00:27:48.570><c> sources</c>

00:27:48.740 --> 00:27:48.750 align:start position:0%
so it makes it try our three sources
 

00:27:48.750 --> 00:27:53.080 align:start position:0%
so it makes it try our three sources
statements<00:27:49.230><c> a</c><00:27:49.320><c> bit</c><00:27:49.500><c> more</c><00:27:49.650><c> concise</c>

00:27:53.080 --> 00:27:53.090 align:start position:0%
 
 

00:27:53.090 --> 00:27:55.610 align:start position:0%
 
Dimond<00:27:54.090><c> in</c><00:27:54.210><c> anonymous</c><00:27:54.600><c> classes</c><00:27:54.840><c> that's</c><00:27:55.380><c> the</c>

00:27:55.610 --> 00:27:55.620 align:start position:0%
Dimond in anonymous classes that's the
 

00:27:55.620 --> 00:27:57.380 align:start position:0%
Dimond in anonymous classes that's the
next<00:27:56.100><c> feature</c><00:27:56.400><c> we'll</c><00:27:56.640><c> be</c><00:27:56.700><c> talking</c><00:27:56.850><c> about</c>

00:27:57.380 --> 00:27:57.390 align:start position:0%
next feature we'll be talking about
 

00:27:57.390 --> 00:28:01.910 align:start position:0%
next feature we'll be talking about
so<00:27:58.380><c> back</c><00:27:59.340><c> before</c><00:27:59.840><c> JDK</c><00:28:00.840><c> 7</c><00:28:01.260><c> if</c><00:28:01.410><c> you</c><00:28:01.440><c> had</c><00:28:01.680><c> your</c>

00:28:01.910 --> 00:28:01.920 align:start position:0%
so back before JDK 7 if you had your
 

00:28:01.920 --> 00:28:04.820 align:start position:0%
so back before JDK 7 if you had your
list<00:28:02.160><c> of</c><00:28:02.400><c> map</c><00:28:02.970><c> of</c><00:28:03.240><c> strings</c><00:28:03.510><c> integers</c><00:28:03.830><c> you'd</c>

00:28:04.820 --> 00:28:04.830 align:start position:0%
list of map of strings integers you'd
 

00:28:04.830 --> 00:28:07.220 align:start position:0%
list of map of strings integers you'd
clear<00:28:05.520><c> the</c><00:28:05.640><c> variable</c><00:28:06.030><c> and</c><00:28:06.300><c> then</c><00:28:06.420><c> in</c><00:28:07.110><c> the</c>

00:28:07.220 --> 00:28:07.230 align:start position:0%
clear the variable and then in the
 

00:28:07.230 --> 00:28:08.810 align:start position:0%
clear the variable and then in the
constructor<00:28:07.650><c> call</c><00:28:07.860><c> say</c><00:28:08.190><c> ArrayList</c><00:28:08.700><c> you'd</c>

00:28:08.810 --> 00:28:08.820 align:start position:0%
constructor call say ArrayList you'd
 

00:28:08.820 --> 00:28:10.970 align:start position:0%
constructor call say ArrayList you'd
have<00:28:08.940><c> to</c><00:28:09.030><c> repeat</c><00:28:09.300><c> list</c><00:28:09.720><c> of</c><00:28:09.960><c> map</c><00:28:10.560><c> of</c><00:28:10.740><c> string</c><00:28:10.890><c> of</c>

00:28:10.970 --> 00:28:10.980 align:start position:0%
have to repeat list of map of string of
 

00:28:10.980 --> 00:28:12.890 align:start position:0%
have to repeat list of map of string of
integer<00:28:11.310><c> that</c><00:28:11.910><c> was</c><00:28:12.030><c> a</c><00:28:12.060><c> bit</c><00:28:12.210><c> for</c><00:28:12.390><c> both</c><00:28:12.540><c> so</c><00:28:12.750><c> now</c>

00:28:12.890 --> 00:28:12.900 align:start position:0%
integer that was a bit for both so now
 

00:28:12.900 --> 00:28:14.600 align:start position:0%
integer that was a bit for both so now
you<00:28:12.960><c> can</c><00:28:13.230><c> just</c><00:28:13.410><c> have</c><00:28:13.560><c> the</c><00:28:13.710><c> diamond</c><00:28:13.890><c> and</c><00:28:14.400><c> the</c>

00:28:14.600 --> 00:28:14.610 align:start position:0%
you can just have the diamond and the
 

00:28:14.610 --> 00:28:17.030 align:start position:0%
you can just have the diamond and the
compiler<00:28:15.180><c> will</c><00:28:15.390><c> infer</c><00:28:16.200><c> those</c><00:28:16.380><c> type</c><00:28:16.620><c> arguments</c>

00:28:17.030 --> 00:28:17.040 align:start position:0%
compiler will infer those type arguments
 

00:28:17.040 --> 00:28:17.510 align:start position:0%
compiler will infer those type arguments
for<00:28:17.220><c> you</c>

00:28:17.510 --> 00:28:17.520 align:start position:0%
for you
 

00:28:17.520 --> 00:28:19.850 align:start position:0%
for you
this<00:28:18.390><c> was</c><00:28:18.570><c> very</c><00:28:18.750><c> effective</c><00:28:19.140><c> at</c><00:28:19.320><c> removing</c><00:28:19.560><c> the</c>

00:28:19.850 --> 00:28:19.860 align:start position:0%
this was very effective at removing the
 

00:28:19.860 --> 00:28:21.710 align:start position:0%
this was very effective at removing the
need<00:28:19.980><c> for</c><00:28:20.010><c> explicit</c><00:28:20.730><c> constructor</c><00:28:21.450><c> type</c>

00:28:21.710 --> 00:28:21.720 align:start position:0%
need for explicit constructor type
 

00:28:21.720 --> 00:28:24.410 align:start position:0%
need for explicit constructor type
arguments<00:28:22.260><c> however</c><00:28:23.250><c> due</c><00:28:24.000><c> to</c><00:28:24.120><c> a</c><00:28:24.150><c> bad</c>

00:28:24.410 --> 00:28:24.420 align:start position:0%
arguments however due to a bad
 

00:28:24.420 --> 00:28:27.260 align:start position:0%
arguments however due to a bad
worst-case<00:28:25.200><c> interaction</c><00:28:25.950><c> we</c><00:28:26.550><c> have</c><00:28:26.730><c> to</c><00:28:26.850><c> forbid</c>

00:28:27.260 --> 00:28:27.270 align:start position:0%
worst-case interaction we have to forbid
 

00:28:27.270 --> 00:28:29.390 align:start position:0%
worst-case interaction we have to forbid
using<00:28:27.780><c> diamond</c><00:28:28.620><c> when</c><00:28:28.980><c> you</c><00:28:29.100><c> were</c><00:28:29.190><c> using</c>

00:28:29.390 --> 00:28:29.400 align:start position:0%
using diamond when you were using
 

00:28:29.400 --> 00:28:33.170 align:start position:0%
using diamond when you were using
anonymous<00:28:30.150><c> inner</c><00:28:30.420><c> classes</c><00:28:31.610><c> the</c><00:28:32.610><c> problem</c><00:28:33.000><c> is</c>

00:28:33.170 --> 00:28:33.180 align:start position:0%
anonymous inner classes the problem is
 

00:28:33.180 --> 00:28:35.120 align:start position:0%
anonymous inner classes the problem is
in<00:28:33.480><c> the</c><00:28:33.660><c> worst</c><00:28:33.840><c> case</c><00:28:34.110><c> the</c><00:28:34.530><c> compiler</c><00:28:34.980><c> could</c>

00:28:35.120 --> 00:28:35.130 align:start position:0%
in the worst case the compiler could
 

00:28:35.130 --> 00:28:36.860 align:start position:0%
in the worst case the compiler could
infer<00:28:35.430><c> something</c><00:28:35.670><c> called</c><00:28:35.970><c> a</c><00:28:36.090><c> non</c><00:28:36.330><c> de</c><00:28:36.540><c> notable</c>

00:28:36.860 --> 00:28:36.870 align:start position:0%
infer something called a non de notable
 

00:28:36.870 --> 00:28:37.250 align:start position:0%
infer something called a non de notable
type

00:28:37.250 --> 00:28:37.260 align:start position:0%
type
 

00:28:37.260 --> 00:28:39.140 align:start position:0%
type
this<00:28:37.920><c> is</c><00:28:38.070><c> a</c><00:28:38.100><c> type</c><00:28:38.370><c> outside</c><00:28:38.820><c> of</c><00:28:38.910><c> the</c><00:28:38.970><c> type</c>

00:28:39.140 --> 00:28:39.150 align:start position:0%
this is a type outside of the type
 

00:28:39.150 --> 00:28:41.210 align:start position:0%
this is a type outside of the type
system<00:28:39.570><c> we</c><00:28:39.900><c> can</c><00:28:40.080><c> use</c><00:28:40.230><c> as</c><00:28:40.380><c> programmers</c><00:28:40.770><c> but</c>

00:28:41.210 --> 00:28:41.220 align:start position:0%
system we can use as programmers but
 

00:28:41.220 --> 00:28:43.280 align:start position:0%
system we can use as programmers but
exists<00:28:41.850><c> inside</c><00:28:42.420><c> the</c><00:28:42.570><c> compiler</c><00:28:42.900><c> and</c><00:28:43.230><c> the</c>

00:28:43.280 --> 00:28:43.290 align:start position:0%
exists inside the compiler and the
 

00:28:43.290 --> 00:28:46.130 align:start position:0%
exists inside the compiler and the
problem<00:28:44.220><c> is</c><00:28:44.340><c> if</c><00:28:44.610><c> you</c><00:28:44.670><c> have</c><00:28:44.790><c> an</c><00:28:45.600><c> anonymous</c>

00:28:46.130 --> 00:28:46.140 align:start position:0%
problem is if you have an anonymous
 

00:28:46.140 --> 00:28:49.400 align:start position:0%
problem is if you have an anonymous
class<00:28:46.460><c> that</c><00:28:47.460><c> needs</c><00:28:47.940><c> a</c><00:28:48.090><c> class</c><00:28:48.300><c> file</c><00:28:48.570><c> and</c><00:28:48.900><c> part</c>

00:28:49.400 --> 00:28:49.410 align:start position:0%
class that needs a class file and part
 

00:28:49.410 --> 00:28:50.840 align:start position:0%
class that needs a class file and part
of<00:28:49.440><c> the</c><00:28:49.530><c> information</c><00:28:49.920><c> in</c><00:28:50.010><c> the</c><00:28:50.070><c> class</c><00:28:50.280><c> file</c><00:28:50.580><c> it</c>

00:28:50.840 --> 00:28:50.850 align:start position:0%
of the information in the class file it
 

00:28:50.850 --> 00:28:54.050 align:start position:0%
of the information in the class file it
needs<00:28:51.300><c> is</c><00:28:51.660><c> the</c><00:28:51.960><c> type</c><00:28:52.800><c> arguments</c><00:28:53.250><c> and</c><00:28:53.370><c> if</c><00:28:53.910><c> you</c>

00:28:54.050 --> 00:28:54.060 align:start position:0%
needs is the type arguments and if you
 

00:28:54.060 --> 00:28:56.180 align:start position:0%
needs is the type arguments and if you
have<00:28:54.210><c> a</c><00:28:54.240><c> non</c><00:28:54.450><c> notable</c><00:28:54.930><c> type</c><00:28:55.140><c> inferred</c><00:28:55.500><c> it's</c>

00:28:56.180 --> 00:28:56.190 align:start position:0%
have a non notable type inferred it's
 

00:28:56.190 --> 00:28:57.650 align:start position:0%
have a non notable type inferred it's
outside<00:28:56.610><c> what</c><00:28:56.940><c> you</c><00:28:57.030><c> can</c><00:28:57.150><c> write</c><00:28:57.300><c> in</c><00:28:57.420><c> the</c><00:28:57.480><c> class</c>

00:28:57.650 --> 00:28:57.660 align:start position:0%
outside what you can write in the class
 

00:28:57.660 --> 00:29:00.710 align:start position:0%
outside what you can write in the class
file<00:28:57.900><c> so</c><00:28:58.530><c> that's</c><00:28:58.620><c> bad</c><00:28:58.970><c> so</c><00:28:59.970><c> in</c><00:29:00.330><c> other</c><00:29:00.420><c> cases</c>

00:29:00.710 --> 00:29:00.720 align:start position:0%
file so that's bad so in other cases
 

00:29:00.720 --> 00:29:02.930 align:start position:0%
file so that's bad so in other cases
though<00:29:01.110><c> if</c><00:29:01.350><c> you</c><00:29:01.530><c> get</c><00:29:01.650><c> a</c><00:29:01.710><c> D</c><00:29:02.010><c> notable</c><00:29:02.400><c> type</c><00:29:02.610><c> infer</c>

00:29:02.930 --> 00:29:02.940 align:start position:0%
though if you get a D notable type infer
 

00:29:02.940 --> 00:29:04.550 align:start position:0%
though if you get a D notable type infer
one<00:29:03.360><c> of</c><00:29:03.450><c> the</c><00:29:03.510><c> normal</c><00:29:03.810><c> types</c><00:29:04.020><c> we</c><00:29:04.170><c> usually</c><00:29:04.440><c> deal</c>

00:29:04.550 --> 00:29:04.560 align:start position:0%
one of the normal types we usually deal
 

00:29:04.560 --> 00:29:05.960 align:start position:0%
one of the normal types we usually deal
with<00:29:04.770><c> that</c><00:29:05.040><c> could</c><00:29:05.280><c> be</c><00:29:05.370><c> represented</c><00:29:05.550><c> in</c><00:29:05.910><c> the</c>

00:29:05.960 --> 00:29:05.970 align:start position:0%
with that could be represented in the
 

00:29:05.970 --> 00:29:08.870 align:start position:0%
with that could be represented in the
class<00:29:06.150><c> file</c><00:29:06.390><c> so</c><00:29:07.170><c> we</c><00:29:07.680><c> noted</c><00:29:08.040><c> that</c><00:29:08.070><c> we</c><00:29:08.430><c> had</c><00:29:08.640><c> to</c>

00:29:08.870 --> 00:29:08.880 align:start position:0%
class file so we noted that we had to
 

00:29:08.880 --> 00:29:10.670 align:start position:0%
class file so we noted that we had to
forbid<00:29:09.360><c> Dimond</c><00:29:09.960><c> and</c><00:29:10.050><c> anonymous</c><00:29:10.440><c> classes</c>

00:29:10.670 --> 00:29:10.680 align:start position:0%
forbid Dimond and anonymous classes
 

00:29:10.680 --> 00:29:13.490 align:start position:0%
forbid Dimond and anonymous classes
working<00:29:11.220><c> together</c><00:29:11.310><c> at</c><00:29:11.760><c> all</c><00:29:12.030><c> in</c><00:29:12.360><c> seven</c><00:29:12.780><c> but</c>

00:29:13.490 --> 00:29:13.500 align:start position:0%
working together at all in seven but
 

00:29:13.500 --> 00:29:15.380 align:start position:0%
working together at all in seven but
when<00:29:13.650><c> we</c><00:29:13.800><c> were</c><00:29:13.860><c> finishing</c><00:29:14.220><c> up</c><00:29:14.400><c> a</c><00:29:14.580><c> project</c><00:29:14.700><c> coin</c>

00:29:15.380 --> 00:29:15.390 align:start position:0%
when we were finishing up a project coin
 

00:29:15.390 --> 00:29:17.240 align:start position:0%
when we were finishing up a project coin
we<00:29:15.990><c> said</c><00:29:16.200><c> it's</c><00:29:16.320><c> feasible</c><00:29:16.710><c> that</c><00:29:16.860><c> in</c><00:29:16.980><c> the</c><00:29:17.070><c> future</c>

00:29:17.240 --> 00:29:17.250 align:start position:0%
we said it's feasible that in the future
 

00:29:17.250 --> 00:29:20.060 align:start position:0%
we said it's feasible that in the future
we<00:29:17.670><c> might</c><00:29:17.790><c> remove</c><00:29:18.510><c> this</c><00:29:18.660><c> restriction</c><00:29:19.050><c> in</c><00:29:19.650><c> the</c>

00:29:20.060 --> 00:29:20.070 align:start position:0%
we might remove this restriction in the
 

00:29:20.070 --> 00:29:21.770 align:start position:0%
we might remove this restriction in the
case<00:29:20.280><c> when</c><00:29:20.490><c> you</c><00:29:20.580><c> get</c><00:29:20.730><c> a</c><00:29:20.760><c> D</c><00:29:20.940><c> notable</c><00:29:21.270><c> type</c><00:29:21.450><c> and</c>

00:29:21.770 --> 00:29:21.780 align:start position:0%
case when you get a D notable type and
 

00:29:21.780 --> 00:29:23.690 align:start position:0%
case when you get a D notable type and
you<00:29:21.870><c> avoid</c><00:29:22.020><c> that</c><00:29:22.230><c> worst</c><00:29:22.410><c> case</c><00:29:22.500><c> and</c><00:29:22.890><c> that</c><00:29:22.920><c> is</c>

00:29:23.690 --> 00:29:23.700 align:start position:0%
you avoid that worst case and that is
 

00:29:23.700 --> 00:29:25.430 align:start position:0%
you avoid that worst case and that is
indeed<00:29:24.090><c> in</c><00:29:24.300><c> fact</c><00:29:24.510><c> what</c><00:29:24.660><c> we've</c><00:29:24.810><c> now</c><00:29:24.960><c> done</c><00:29:25.020><c> in</c>

00:29:25.430 --> 00:29:25.440 align:start position:0%
indeed in fact what we've now done in
 

00:29:25.440 --> 00:29:27.560 align:start position:0%
indeed in fact what we've now done in
JDK<00:29:25.980><c> 9</c><00:29:26.160><c> so</c><00:29:26.820><c> as</c><00:29:26.940><c> long</c><00:29:27.060><c> as</c><00:29:27.150><c> you</c><00:29:27.210><c> don't</c><00:29:27.300><c> get</c><00:29:27.450><c> that</c>

00:29:27.560 --> 00:29:27.570 align:start position:0%
JDK 9 so as long as you don't get that
 

00:29:27.570 --> 00:29:29.630 align:start position:0%
JDK 9 so as long as you don't get that
worst<00:29:27.780><c> case</c><00:29:27.840><c> outcome</c><00:29:28.320><c> you</c><00:29:28.890><c> can</c><00:29:29.070><c> use</c><00:29:29.220><c> diamond</c>

00:29:29.630 --> 00:29:29.640 align:start position:0%
worst case outcome you can use diamond
 

00:29:29.640 --> 00:29:34.070 align:start position:0%
worst case outcome you can use diamond
with<00:29:29.850><c> anonymous</c><00:29:30.240><c> classes</c><00:29:30.450><c> too</c><00:29:32.150><c> in</c><00:29:33.150><c> JDK</c><00:29:33.540><c> 7</c><00:29:33.900><c> a</c>

00:29:34.070 --> 00:29:34.080 align:start position:0%
with anonymous classes too in JDK 7 a
 

00:29:34.080 --> 00:29:36.230 align:start position:0%
with anonymous classes too in JDK 7 a
diamond<00:29:34.530><c> got</c><00:29:34.710><c> let</c><00:29:35.190><c> us</c><00:29:35.280><c> get</c><00:29:35.430><c> rid</c><00:29:35.550><c> of</c><00:29:35.610><c> about</c><00:29:35.760><c> 90%</c>

00:29:36.230 --> 00:29:36.240 align:start position:0%
diamond got let us get rid of about 90%
 

00:29:36.240 --> 00:29:37.940 align:start position:0%
diamond got let us get rid of about 90%
of<00:29:36.570><c> the</c><00:29:36.660><c> explicit</c><00:29:36.900><c> constructor</c><00:29:37.650><c> type</c>

00:29:37.940 --> 00:29:37.950 align:start position:0%
of the explicit constructor type
 

00:29:37.950 --> 00:29:40.360 align:start position:0%
of the explicit constructor type
arguments<00:29:38.460><c> and</c><00:29:38.610><c> we</c><00:29:39.240><c> feel</c><00:29:39.450><c> with</c><00:29:39.750><c> the</c><00:29:40.020><c> this</c>

00:29:40.360 --> 00:29:40.370 align:start position:0%
arguments and we feel with the this
 

00:29:40.370 --> 00:29:43.010 align:start position:0%
arguments and we feel with the this
cleanup<00:29:41.370><c> for</c><00:29:41.730><c> the</c><00:29:42.240><c> notable</c><00:29:42.540><c> types</c><00:29:42.750><c> we</c><00:29:42.990><c> can</c>

00:29:43.010 --> 00:29:43.020 align:start position:0%
cleanup for the notable types we can
 

00:29:43.020 --> 00:29:45.770 align:start position:0%
cleanup for the notable types we can
address<00:29:43.560><c> much</c><00:29:44.250><c> of</c><00:29:44.400><c> the</c><00:29:44.460><c> remaining</c><00:29:44.730><c> 10%</c><00:29:44.940><c> we've</c>

00:29:45.770 --> 00:29:45.780 align:start position:0%
address much of the remaining 10% we've
 

00:29:45.780 --> 00:29:47.420 align:start position:0%
address much of the remaining 10% we've
had<00:29:45.930><c> good</c><00:29:46.050><c> experience</c><00:29:46.530><c> using</c><00:29:46.980><c> this</c><00:29:47.220><c> feature</c>

00:29:47.420 --> 00:29:47.430 align:start position:0%
had good experience using this feature
 

00:29:47.430 --> 00:29:49.400 align:start position:0%
had good experience using this feature
in<00:29:47.730><c> the</c><00:29:47.760><c> JDK</c><00:29:48.150><c> codebase</c><00:29:48.540><c> it's</c><00:29:48.780><c> let</c><00:29:48.990><c> us</c><00:29:49.110><c> get</c><00:29:49.260><c> rid</c>

00:29:49.400 --> 00:29:49.410 align:start position:0%
in the JDK codebase it's let us get rid
 

00:29:49.410 --> 00:29:51.320 align:start position:0%
in the JDK codebase it's let us get rid
of<00:29:49.470><c> hundreds</c><00:29:49.980><c> of</c><00:29:50.040><c> additional</c><00:29:50.330><c> explicit</c>

00:29:51.320 --> 00:29:51.330 align:start position:0%
of hundreds of additional explicit
 

00:29:51.330 --> 00:29:55.550 align:start position:0%
of hundreds of additional explicit
constructor<00:29:51.690><c> arguments</c><00:29:51.930><c> in</c><00:29:52.260><c> our</c><00:29:52.380><c> code</c><00:29:54.560><c> next</c>

00:29:55.550 --> 00:29:55.560 align:start position:0%
constructor arguments in our code next
 

00:29:55.560 --> 00:29:57.620 align:start position:0%
constructor arguments in our code next
two<00:29:55.710><c> features</c><00:29:56.040><c> are</c><00:29:56.220><c> from</c><00:29:56.490><c> project</c><00:29:56.880><c> lambda</c><00:29:57.210><c> so</c>

00:29:57.620 --> 00:29:57.630 align:start position:0%
two features are from project lambda so
 

00:29:57.630 --> 00:29:59.600 align:start position:0%
two features are from project lambda so
underscore<00:29:58.230><c> is</c><00:29:58.410><c> no</c><00:29:58.620><c> longer</c><00:29:58.890><c> an</c><00:29:59.100><c> identifier</c>

00:29:59.600 --> 00:29:59.610 align:start position:0%
underscore is no longer an identifier
 

00:29:59.610 --> 00:30:03.500 align:start position:0%
underscore is no longer an identifier
name<00:30:01.010><c> back</c><00:30:02.010><c> when</c><00:30:02.250><c> lambda</c><00:30:02.550><c> is</c><00:30:02.760><c> added</c><00:30:03.000><c> in</c><00:30:03.150><c> JDK</c>

00:30:03.500 --> 00:30:03.510 align:start position:0%
name back when lambda is added in JDK
 

00:30:03.510 --> 00:30:06.050 align:start position:0%
name back when lambda is added in JDK
eight<00:30:03.720><c> you</c><00:30:03.960><c> could</c><00:30:04.440><c> use</c><00:30:04.680><c> underscore</c><00:30:05.340><c> as</c><00:30:05.610><c> the</c>

00:30:06.050 --> 00:30:06.060 align:start position:0%
eight you could use underscore as the
 

00:30:06.060 --> 00:30:08.690 align:start position:0%
eight you could use underscore as the
the<00:30:06.260><c> parameter</c><00:30:07.260><c> name</c><00:30:07.380><c> for</c><00:30:07.590><c> a</c><00:30:07.650><c> lambda</c><00:30:07.860><c> that</c><00:30:08.460><c> was</c>

00:30:08.690 --> 00:30:08.700 align:start position:0%
the parameter name for a lambda that was
 

00:30:08.700 --> 00:30:11.540 align:start position:0%
the parameter name for a lambda that was
to<00:30:08.880><c> avoid</c><00:30:09.120><c> confusion</c><00:30:09.900><c> with</c><00:30:10.250><c> some</c><00:30:11.250><c> features</c>

00:30:11.540 --> 00:30:11.550 align:start position:0%
to avoid confusion with some features
 

00:30:11.550 --> 00:30:13.040 align:start position:0%
to avoid confusion with some features
from<00:30:11.730><c> other</c><00:30:11.970><c> programming</c><00:30:12.390><c> languages</c><00:30:12.750><c> like</c>

00:30:13.040 --> 00:30:13.050 align:start position:0%
from other programming languages like
 

00:30:13.050 --> 00:30:17.000 align:start position:0%
from other programming languages like
wunderbar<00:30:13.650><c> from</c><00:30:13.920><c> Scout</c><00:30:14.160><c> Scala</c><00:30:15.740><c> Java</c><00:30:16.740><c> Steve</c>

00:30:17.000 --> 00:30:17.010 align:start position:0%
wunderbar from Scout Scala Java Steve
 

00:30:17.010 --> 00:30:18.200 align:start position:0%
wunderbar from Scout Scala Java Steve
started<00:30:17.250><c> noting</c><00:30:17.610><c> though</c><00:30:17.730><c> that</c><00:30:17.760><c> if</c><00:30:18.000><c> you're</c>

00:30:18.200 --> 00:30:18.210 align:start position:0%
started noting though that if you're
 

00:30:18.210 --> 00:30:20.330 align:start position:0%
started noting though that if you're
using<00:30:18.420><c> underscore</c><00:30:19.080><c> in</c><00:30:19.290><c> other</c><00:30:19.560><c> circumstances</c>

00:30:20.330 --> 00:30:20.340 align:start position:0%
using underscore in other circumstances
 

00:30:20.340 --> 00:30:22.400 align:start position:0%
using underscore in other circumstances
as<00:30:20.400><c> a</c><00:30:20.790><c> data</c><00:30:21.420><c> file</c><00:30:21.600><c> you</c><00:30:21.630><c> might</c><00:30:21.930><c> not</c><00:30:22.140><c> be</c><00:30:22.230><c> able</c><00:30:22.350><c> to</c>

00:30:22.400 --> 00:30:22.410 align:start position:0%
as a data file you might not be able to
 

00:30:22.410 --> 00:30:24.380 align:start position:0%
as a data file you might not be able to
use<00:30:22.500><c> them</c><00:30:22.650><c> in</c><00:30:22.800><c> the</c><00:30:22.890><c> future</c><00:30:22.920><c> and</c><00:30:23.370><c> now</c><00:30:24.180><c> that</c>

00:30:24.380 --> 00:30:24.390 align:start position:0%
use them in the future and now that
 

00:30:24.390 --> 00:30:26.360 align:start position:0%
use them in the future and now that
future<00:30:24.690><c> has</c><00:30:25.020><c> arrived</c><00:30:25.290><c> you</c><00:30:25.680><c> can</c><00:30:25.890><c> no</c><00:30:26.010><c> longer</c><00:30:26.220><c> use</c>

00:30:26.360 --> 00:30:26.370 align:start position:0%
future has arrived you can no longer use
 

00:30:26.370 --> 00:30:30.020 align:start position:0%
future has arrived you can no longer use
underscore<00:30:27.120><c> as</c><00:30:27.390><c> a</c><00:30:27.420><c> variable</c><00:30:28.350><c> name</c><00:30:28.470><c> in</c><00:30:29.430><c> a</c><00:30:29.520><c> as</c><00:30:29.970><c> a</c>

00:30:30.020 --> 00:30:30.030 align:start position:0%
underscore as a variable name in a as a
 

00:30:30.030 --> 00:30:34.190 align:start position:0%
underscore as a variable name in a as a
jetty<00:30:31.020><c> k9</c><00:30:31.640><c> so</c><00:30:32.640><c> this</c><00:30:32.910><c> is</c><00:30:33.180><c> not</c><00:30:33.300><c> our</c><00:30:33.480><c> usual</c><00:30:33.510><c> policy</c>

00:30:34.190 --> 00:30:34.200 align:start position:0%
jetty k9 so this is not our usual policy
 

00:30:34.200 --> 00:30:36.440 align:start position:0%
jetty k9 so this is not our usual policy
but<00:30:34.560><c> why</c><00:30:34.770><c> are</c><00:30:34.830><c> of</c><00:30:35.460><c> keeping</c><00:30:35.880><c> code</c><00:30:36.090><c> compiling</c>

00:30:36.440 --> 00:30:36.450 align:start position:0%
but why are of keeping code compiling
 

00:30:36.450 --> 00:30:38.300 align:start position:0%
but why are of keeping code compiling
but<00:30:36.720><c> why</c><00:30:36.900><c> are</c><00:30:36.960><c> we</c><00:30:37.140><c> making</c><00:30:37.560><c> this</c><00:30:37.800><c> change</c>

00:30:38.300 --> 00:30:38.310 align:start position:0%
but why are we making this change
 

00:30:38.310 --> 00:30:40.070 align:start position:0%
but why are we making this change
well<00:30:38.730><c> we</c><00:30:38.820><c> think</c><00:30:38.940><c> there's</c><00:30:39.150><c> better</c><00:30:39.300><c> use</c><00:30:39.750><c> for</c><00:30:39.780><c> the</c>

00:30:40.070 --> 00:30:40.080 align:start position:0%
well we think there's better use for the
 

00:30:40.080 --> 00:30:43.040 align:start position:0%
well we think there's better use for the
syntactic<00:30:40.680><c> real</c><00:30:40.830><c> estate</c><00:30:41.190><c> of</c><00:30:42.020><c> underscore</c><00:30:43.020><c> a</c>

00:30:43.040 --> 00:30:43.050 align:start position:0%
syntactic real estate of underscore a
 

00:30:43.050 --> 00:30:44.690 align:start position:0%
syntactic real estate of underscore a
single<00:30:43.410><c> underscore</c><00:30:43.800><c> for</c><00:30:44.070><c> a</c><00:30:44.100><c> variable</c><00:30:44.550><c> name</c>

00:30:44.690 --> 00:30:44.700 align:start position:0%
single underscore for a variable name
 

00:30:44.700 --> 00:30:47.180 align:start position:0%
single underscore for a variable name
and<00:30:44.940><c> that</c><00:30:45.510><c> work</c><00:30:45.660><c> is</c><00:30:45.780><c> being</c><00:30:45.840><c> discussed</c><00:30:46.350><c> in</c><00:30:46.950><c> a</c>

00:30:47.180 --> 00:30:47.190 align:start position:0%
and that work is being discussed in a
 

00:30:47.190 --> 00:30:49.730 align:start position:0%
and that work is being discussed in a
future<00:30:47.220><c> JEP</c><00:30:47.730><c> JEP</c><00:30:48.360><c> 3</c><00:30:48.570><c> or</c><00:30:48.690><c> 2</c><00:30:48.780><c> lambda</c><00:30:48.990><c> left</c><00:30:49.260><c> overs</c>

00:30:49.730 --> 00:30:49.740 align:start position:0%
future JEP JEP 3 or 2 lambda left overs
 

00:30:49.740 --> 00:30:51.590 align:start position:0%
future JEP JEP 3 or 2 lambda left overs
which<00:30:49.920><c> is</c><00:30:50.040><c> part</c><00:30:50.250><c> of</c><00:30:50.370><c> project</c><00:30:50.850><c> amber</c><00:30:51.270><c> one</c><00:30:51.510><c> of</c>

00:30:51.590 --> 00:30:51.600 align:start position:0%
which is part of project amber one of
 

00:30:51.600 --> 00:30:55.700 align:start position:0%
which is part of project amber one of
our<00:30:51.690><c> ongoing</c><00:30:51.870><c> projects</c><00:30:52.620><c> in</c><00:30:52.740><c> open</c><00:30:53.040><c> JDK</c><00:30:54.710><c> finally</c>

00:30:55.700 --> 00:30:55.710 align:start position:0%
our ongoing projects in open JDK finally
 

00:30:55.710 --> 00:30:58.120 align:start position:0%
our ongoing projects in open JDK finally
we<00:30:55.860><c> have</c><00:30:56.010><c> a</c><00:30:56.040><c> private</c><00:30:56.600><c> interface</c><00:30:57.600><c> methods</c>

00:30:58.120 --> 00:30:58.130 align:start position:0%
we have a private interface methods
 

00:30:58.130 --> 00:31:01.190 align:start position:0%
we have a private interface methods
another<00:30:59.130><c> part</c><00:30:59.400><c> of</c><00:30:59.550><c> project</c><00:30:59.940><c> lambda</c><00:31:00.300><c> in</c><00:31:00.660><c> 8</c><00:31:00.960><c> was</c>

00:31:01.190 --> 00:31:01.200 align:start position:0%
another part of project lambda in 8 was
 

00:31:01.200 --> 00:31:02.660 align:start position:0%
another part of project lambda in 8 was
adding<00:31:01.500><c> default</c><00:31:01.800><c> methods</c><00:31:02.160><c> that</c><00:31:02.280><c> interfaces</c>

00:31:02.660 --> 00:31:02.670 align:start position:0%
adding default methods that interfaces
 

00:31:02.670 --> 00:31:05.510 align:start position:0%
adding default methods that interfaces
these<00:31:03.570><c> are</c><00:31:03.900><c> methods</c><00:31:04.560><c> on</c><00:31:04.830><c> interfaces</c><00:31:05.340><c> that</c>

00:31:05.510 --> 00:31:05.520 align:start position:0%
these are methods on interfaces that
 

00:31:05.520 --> 00:31:07.430 align:start position:0%
these are methods on interfaces that
have<00:31:05.580><c> code</c><00:31:06.090><c> so</c><00:31:06.450><c> they're</c><00:31:06.600><c> not</c><00:31:06.720><c> the</c><00:31:06.930><c> abstract</c>

00:31:07.430 --> 00:31:07.440 align:start position:0%
have code so they're not the abstract
 

00:31:07.440 --> 00:31:09.770 align:start position:0%
have code so they're not the abstract
methods<00:31:07.800><c> we</c><00:31:07.890><c> had</c><00:31:08.010><c> before</c><00:31:08.130><c> and</c><00:31:08.520><c> at</c><00:31:09.450><c> the</c><00:31:09.540><c> VM</c>

00:31:09.770 --> 00:31:09.780 align:start position:0%
methods we had before and at the VM
 

00:31:09.780 --> 00:31:12.350 align:start position:0%
methods we had before and at the VM
level<00:31:10.280><c> it's</c><00:31:11.280><c> possible</c><00:31:11.670><c> to</c><00:31:11.730><c> have</c><00:31:11.850><c> private</c>

00:31:12.350 --> 00:31:12.360 align:start position:0%
level it's possible to have private
 

00:31:12.360 --> 00:31:14.270 align:start position:0%
level it's possible to have private
methods<00:31:12.690><c> on</c><00:31:12.780><c> interfaces</c><00:31:13.320><c> in</c><00:31:13.470><c> 8</c><00:31:13.740><c> these</c><00:31:14.070><c> were</c>

00:31:14.270 --> 00:31:14.280 align:start position:0%
methods on interfaces in 8 these were
 

00:31:14.280 --> 00:31:16.520 align:start position:0%
methods on interfaces in 8 these were
necessary<00:31:14.730><c> to</c><00:31:14.850><c> implement</c><00:31:15.180><c> lambdas</c><00:31:15.780><c> however</c>

00:31:16.520 --> 00:31:16.530 align:start position:0%
necessary to implement lambdas however
 

00:31:16.530 --> 00:31:17.840 align:start position:0%
necessary to implement lambdas however
you<00:31:16.620><c> couldn't</c><00:31:16.950><c> do</c><00:31:17.070><c> that</c><00:31:17.190><c> in</c><00:31:17.430><c> the</c><00:31:17.550><c> source</c>

00:31:17.840 --> 00:31:17.850 align:start position:0%
you couldn't do that in the source
 

00:31:17.850 --> 00:31:22.040 align:start position:0%
you couldn't do that in the source
language<00:31:18.270><c> and</c><00:31:18.870><c> now</c><00:31:19.500><c> in</c><00:31:19.880><c> Java</c><00:31:20.880><c> 9</c><00:31:21.090><c> you</c><00:31:21.240><c> can</c><00:31:21.270><c> you</c>

00:31:22.040 --> 00:31:22.050 align:start position:0%
language and now in Java 9 you can you
 

00:31:22.050 --> 00:31:24.500 align:start position:0%
language and now in Java 9 you can you
can<00:31:22.200><c> have</c><00:31:22.350><c> both</c><00:31:22.590><c> private</c><00:31:23.430><c> static</c><00:31:23.970><c> methods</c><00:31:24.300><c> on</c>

00:31:24.500 --> 00:31:24.510 align:start position:0%
can have both private static methods on
 

00:31:24.510 --> 00:31:26.300 align:start position:0%
can have both private static methods on
your<00:31:24.690><c> interfaces</c><00:31:25.230><c> as</c><00:31:25.380><c> well</c><00:31:25.740><c> as</c><00:31:25.890><c> private</c>

00:31:26.300 --> 00:31:26.310 align:start position:0%
your interfaces as well as private
 

00:31:26.310 --> 00:31:28.700 align:start position:0%
your interfaces as well as private
instance<00:31:26.730><c> methods</c><00:31:27.090><c> so</c><00:31:27.810><c> what</c><00:31:28.200><c> you</c><00:31:28.440><c> do</c><00:31:28.560><c> with</c>

00:31:28.700 --> 00:31:28.710 align:start position:0%
instance methods so what you do with
 

00:31:28.710 --> 00:31:30.410 align:start position:0%
instance methods so what you do with
these<00:31:28.800><c> methods</c><00:31:29.010><c> you</c><00:31:29.640><c> can</c><00:31:29.760><c> use</c><00:31:29.910><c> them</c><00:31:30.030><c> as</c><00:31:30.150><c> helper</c>

00:31:30.410 --> 00:31:30.420 align:start position:0%
these methods you can use them as helper
 

00:31:30.420 --> 00:31:32.360 align:start position:0%
these methods you can use them as helper
methods<00:31:30.780><c> for</c><00:31:31.020><c> the</c><00:31:31.230><c> other</c><00:31:31.410><c> default</c><00:31:31.980><c> method</c><00:31:32.280><c> you</c>

00:31:32.360 --> 00:31:32.370 align:start position:0%
methods for the other default method you
 

00:31:32.370 --> 00:31:33.830 align:start position:0%
methods for the other default method you
have<00:31:32.400><c> any</c><00:31:32.670><c> interface</c><00:31:32.970><c> the</c><00:31:33.150><c> public</c><00:31:33.450><c> method</c><00:31:33.720><c> so</c>

00:31:33.830 --> 00:31:33.840 align:start position:0%
have any interface the public method so
 

00:31:33.840 --> 00:31:35.720 align:start position:0%
have any interface the public method so
this<00:31:34.020><c> is</c><00:31:34.140><c> again</c><00:31:34.350><c> very</c><00:31:34.410><c> very</c><00:31:35.280><c> convenient</c><00:31:35.580><c> to</c>

00:31:35.720 --> 00:31:35.730 align:start position:0%
this is again very very convenient to
 

00:31:35.730 --> 00:31:37.160 align:start position:0%
this is again very very convenient to
have<00:31:35.880><c> once</c><00:31:36.300><c> you</c><00:31:36.360><c> start</c><00:31:36.630><c> adding</c><00:31:36.750><c> default</c>

00:31:37.160 --> 00:31:37.170 align:start position:0%
have once you start adding default
 

00:31:37.170 --> 00:31:38.300 align:start position:0%
have once you start adding default
methods<00:31:37.500><c> to</c><00:31:37.620><c> your</c><00:31:37.740><c> own</c><00:31:37.860><c> to</c><00:31:38.130><c> your</c><00:31:38.250><c> own</c>

00:31:38.300 --> 00:31:38.310 align:start position:0%
methods to your own to your own
 

00:31:38.310 --> 00:31:42.110 align:start position:0%
methods to your own to your own
interfaces<00:31:39.740><c> so</c><00:31:40.740><c> you</c><00:31:41.100><c> may</c><00:31:41.220><c> have</c><00:31:41.310><c> heard</c><00:31:41.550><c> at</c><00:31:42.000><c> the</c>

00:31:42.110 --> 00:31:42.120 align:start position:0%
interfaces so you may have heard at the
 

00:31:42.120 --> 00:31:44.450 align:start position:0%
interfaces so you may have heard at the
keynote<00:31:42.420><c> earlier</c><00:31:42.750><c> about</c><00:31:43.260><c> the</c><00:31:43.650><c> new</c><00:31:43.830><c> six-month</c>

00:31:44.450 --> 00:31:44.460 align:start position:0%
keynote earlier about the new six-month
 

00:31:44.460 --> 00:31:46.130 align:start position:0%
keynote earlier about the new six-month
release<00:31:44.760><c> cating</c><00:31:45.240><c> cadence</c><00:31:45.810><c> were</c>

00:31:46.130 --> 00:31:46.140 align:start position:0%
release cating cadence were
 

00:31:46.140 --> 00:31:48.680 align:start position:0%
release cating cadence were
transitioning<00:31:46.800><c> to</c><00:31:46.980><c> for</c><00:31:47.220><c> the</c><00:31:47.280><c> JDK</c><00:31:47.670><c> one</c><00:31:48.480><c> of</c><00:31:48.600><c> the</c>

00:31:48.680 --> 00:31:48.690 align:start position:0%
transitioning to for the JDK one of the
 

00:31:48.690 --> 00:31:50.120 align:start position:0%
transitioning to for the JDK one of the
benefits<00:31:49.140><c> we</c><00:31:49.290><c> think</c><00:31:49.500><c> will</c><00:31:49.620><c> have</c><00:31:49.770><c> from</c><00:31:49.980><c> this</c>

00:31:50.120 --> 00:31:50.130 align:start position:0%
benefits we think will have from this
 

00:31:50.130 --> 00:31:51.500 align:start position:0%
benefits we think will have from this
release<00:31:50.400><c> cadence</c><00:31:50.820><c> is</c><00:31:50.940><c> that</c><00:31:51.090><c> these</c><00:31:51.240><c> sort</c><00:31:51.450><c> of</c>

00:31:51.500 --> 00:31:51.510 align:start position:0%
release cadence is that these sort of
 

00:31:51.510 --> 00:31:54.170 align:start position:0%
release cadence is that these sort of
small<00:31:51.780><c> language</c><00:31:52.170><c> changes</c><00:31:52.500><c> we</c><00:31:52.680><c> delivered</c><00:31:53.640><c> more</c>

00:31:54.170 --> 00:31:54.180 align:start position:0%
small language changes we delivered more
 

00:31:54.180 --> 00:31:56.120 align:start position:0%
small language changes we delivered more
quickly<00:31:54.510><c> and</c><00:31:54.840><c> they</c><00:31:54.900><c> won't</c><00:31:55.080><c> be</c><00:31:55.140><c> backed</c><00:31:55.980><c> up</c>

00:31:56.120 --> 00:31:56.130 align:start position:0%
quickly and they won't be backed up
 

00:31:56.130 --> 00:31:58.250 align:start position:0%
quickly and they won't be backed up
behind<00:31:56.400><c> a</c><00:31:56.550><c> large</c><00:31:56.790><c> I</c><00:31:57.090><c> which</c><00:31:57.570><c> changed</c><00:31:57.840><c> before</c><00:31:57.960><c> so</c>

00:31:58.250 --> 00:31:58.260 align:start position:0%
behind a large I which changed before so
 

00:31:58.260 --> 00:31:59.450 align:start position:0%
behind a large I which changed before so
we're<00:31:58.410><c> looking</c><00:31:58.650><c> forward</c><00:31:58.950><c> to</c><00:31:59.040><c> that</c><00:31:59.190><c> to</c><00:31:59.340><c> get</c>

00:31:59.450 --> 00:31:59.460 align:start position:0%
we're looking forward to that to get
 

00:31:59.460 --> 00:32:01.670 align:start position:0%
we're looking forward to that to get
these<00:31:59.970><c> sorts</c><00:32:00.210><c> of</c><00:32:00.270><c> small</c><00:32:00.570><c> language</c><00:32:01.350><c> cleanups</c>

00:32:01.670 --> 00:32:01.680 align:start position:0%
these sorts of small language cleanups
 

00:32:01.680 --> 00:32:05.060 align:start position:0%
these sorts of small language cleanups
available<00:32:02.070><c> to</c><00:32:02.190><c> developers</c><00:32:02.580><c> sooner</c><00:32:04.070><c> their</c>

00:32:05.060 --> 00:32:05.070 align:start position:0%
available to developers sooner their
 

00:32:05.070 --> 00:32:06.830 align:start position:0%
available to developers sooner their
number<00:32:05.370><c> changes</c><00:32:05.940><c> we</c><00:32:06.180><c> made</c><00:32:06.360><c> to</c><00:32:06.390><c> the</c><00:32:06.510><c> language</c>

00:32:06.830 --> 00:32:06.840 align:start position:0%
number changes we made to the language
 

00:32:06.840 --> 00:32:10.010 align:start position:0%
number changes we made to the language
in<00:32:07.550><c> related</c><00:32:08.550><c> to</c><00:32:08.670><c> deprecation</c><00:32:09.510><c> the</c><00:32:09.720><c> first</c><00:32:09.900><c> of</c>

00:32:10.010 --> 00:32:10.020 align:start position:0%
in related to deprecation the first of
 

00:32:10.020 --> 00:32:12.610 align:start position:0%
in related to deprecation the first of
those<00:32:10.110><c> is</c><00:32:10.170><c> deprecation</c><00:32:10.860><c> and</c><00:32:11.070><c> imports</c><00:32:11.700><c> like</c>

00:32:12.610 --> 00:32:12.620 align:start position:0%
those is deprecation and imports like
 

00:32:12.620 --> 00:32:16.070 align:start position:0%
those is deprecation and imports like
any<00:32:13.620><c> old</c><00:32:14.190><c> code</c><00:32:14.940><c> base</c><00:32:15.180><c> that's</c><00:32:15.480><c> been</c><00:32:15.660><c> around</c><00:32:15.840><c> for</c>

00:32:16.070 --> 00:32:16.080 align:start position:0%
any old code base that's been around for
 

00:32:16.080 --> 00:32:17.510 align:start position:0%
any old code base that's been around for
a<00:32:16.110><c> while</c><00:32:16.170><c> at</c><00:32:16.530><c> times</c><00:32:16.800><c> we</c><00:32:17.010><c> had</c><00:32:17.220><c> some</c><00:32:17.430><c> technical</c>

00:32:17.510 --> 00:32:17.520 align:start position:0%
a while at times we had some technical
 

00:32:17.520 --> 00:32:19.310 align:start position:0%
a while at times we had some technical
debt<00:32:17.970><c> in</c><00:32:18.120><c> the</c><00:32:18.210><c> JDK</c>

00:32:19.310 --> 00:32:19.320 align:start position:0%
debt in the JDK
 

00:32:19.320 --> 00:32:21.140 align:start position:0%
debt in the JDK
and<00:32:19.410><c> in</c><00:32:19.890><c> years</c><00:32:20.160><c> past</c><00:32:20.460><c> we've</c><00:32:20.730><c> had</c><00:32:20.760><c> several</c>

00:32:21.140 --> 00:32:21.150 align:start position:0%
and in years past we've had several
 

00:32:21.150 --> 00:32:22.970 align:start position:0%
and in years past we've had several
hundred<00:32:21.510><c> deprecation</c><00:32:22.050><c> warnings</c><00:32:22.290><c> in</c><00:32:22.950><c> the</c>

00:32:22.970 --> 00:32:22.980 align:start position:0%
hundred deprecation warnings in the
 

00:32:22.980 --> 00:32:25.280 align:start position:0%
hundred deprecation warnings in the
build<00:32:23.220><c> of</c><00:32:23.310><c> the</c><00:32:23.370><c> JDK</c><00:32:23.550><c> itself</c><00:32:24.120><c> now</c><00:32:25.110><c> these</c>

00:32:25.280 --> 00:32:25.290 align:start position:0%
build of the JDK itself now these
 

00:32:25.290 --> 00:32:26.840 align:start position:0%
build of the JDK itself now these
warnings<00:32:25.650><c> are</c><00:32:25.860><c> again</c><00:32:26.100><c> mandated</c><00:32:26.610><c> by</c><00:32:26.790><c> the</c>

00:32:26.840 --> 00:32:26.850 align:start position:0%
warnings are again mandated by the
 

00:32:26.850 --> 00:32:29.480 align:start position:0%
warnings are again mandated by the
language<00:32:27.270><c> specification</c><00:32:27.420><c> and</c><00:32:28.280><c> there's</c><00:32:29.280><c> three</c>

00:32:29.480 --> 00:32:29.490 align:start position:0%
language specification and there's three
 

00:32:29.490 --> 00:32:30.920 align:start position:0%
language specification and there's three
ways<00:32:29.610><c> to</c><00:32:29.670><c> resolve</c><00:32:30.210><c> those</c><00:32:30.390><c> deprecation</c>

00:32:30.920 --> 00:32:30.930 align:start position:0%
ways to resolve those deprecation
 

00:32:30.930 --> 00:32:32.780 align:start position:0%
ways to resolve those deprecation
warnings<00:32:30.960><c> you</c><00:32:31.500><c> can</c><00:32:32.100><c> remove</c><00:32:32.340><c> use</c><00:32:32.580><c> of</c><00:32:32.730><c> the</c>

00:32:32.780 --> 00:32:32.790 align:start position:0%
warnings you can remove use of the
 

00:32:32.790 --> 00:32:35.060 align:start position:0%
warnings you can remove use of the
deprecated<00:32:33.150><c> elements</c><00:32:33.600><c> that's</c><00:32:34.350><c> preferred</c><00:32:34.830><c> but</c>

00:32:35.060 --> 00:32:35.070 align:start position:0%
deprecated elements that's preferred but
 

00:32:35.070 --> 00:32:37.190 align:start position:0%
deprecated elements that's preferred but
you<00:32:35.160><c> can't</c><00:32:35.340><c> always</c><00:32:35.520><c> do</c><00:32:35.790><c> that</c><00:32:35.990><c> you</c><00:32:36.990><c> can</c>

00:32:37.190 --> 00:32:37.200 align:start position:0%
you can't always do that you can
 

00:32:37.200 --> 00:32:39.650 align:start position:0%
you can't always do that you can
propagate<00:32:37.470><c> the</c><00:32:38.100><c> deprecated</c><00:32:39.000><c> annotation</c><00:32:39.540><c> to</c>

00:32:39.650 --> 00:32:39.660 align:start position:0%
propagate the deprecated annotation to
 

00:32:39.660 --> 00:32:41.630 align:start position:0%
propagate the deprecated annotation to
the<00:32:39.750><c> youth</c><00:32:39.930><c> sites</c><00:32:40.220><c> that's</c><00:32:41.220><c> not</c><00:32:41.400><c> very</c><00:32:41.490><c> good</c>

00:32:41.630 --> 00:32:41.640 align:start position:0%
the youth sites that's not very good
 

00:32:41.640 --> 00:32:43.010 align:start position:0%
the youth sites that's not very good
either<00:32:41.820><c> because</c><00:32:42.090><c> now</c><00:32:42.390><c> you're</c><00:32:42.540><c> making</c><00:32:42.810><c> more</c><00:32:42.930><c> of</c>

00:32:43.010 --> 00:32:43.020 align:start position:0%
either because now you're making more of
 

00:32:43.020 --> 00:32:45.380 align:start position:0%
either because now you're making more of
your<00:32:43.140><c> code</c><00:32:43.320><c> deprecated</c><00:32:43.890><c> so</c><00:32:44.550><c> if</c><00:32:44.940><c> you</c><00:32:45.060><c> can't</c><00:32:45.270><c> do</c>

00:32:45.380 --> 00:32:45.390 align:start position:0%
your code deprecated so if you can't do
 

00:32:45.390 --> 00:32:47.240 align:start position:0%
your code deprecated so if you can't do
either<00:32:45.540><c> of</c><00:32:45.720><c> those</c><00:32:45.870><c> you</c><00:32:46.260><c> can</c><00:32:46.680><c> suppress</c><00:32:47.100><c> the</c>

00:32:47.240 --> 00:32:47.250 align:start position:0%
either of those you can suppress the
 

00:32:47.250 --> 00:32:49.250 align:start position:0%
either of those you can suppress the
warnings<00:32:47.610><c> to</c><00:32:48.150><c> let</c><00:32:48.330><c> the</c><00:32:48.480><c> compiler</c><00:32:48.720><c> know</c><00:32:48.990><c> to</c><00:32:49.050><c> not</c>

00:32:49.250 --> 00:32:49.260 align:start position:0%
warnings to let the compiler know to not
 

00:32:49.260 --> 00:32:53.210 align:start position:0%
warnings to let the compiler know to not
warn<00:32:49.980><c> you</c><00:32:50.040><c> about</c><00:32:50.190><c> that</c><00:32:50.370><c> anymore</c><00:32:50.670><c> so</c><00:32:51.710><c> let's</c><00:32:52.710><c> say</c>

00:32:53.210 --> 00:32:53.220 align:start position:0%
warn you about that anymore so let's say
 

00:32:53.220 --> 00:32:56.840 align:start position:0%
warn you about that anymore so let's say
you<00:32:53.280><c> had</c><00:32:53.940><c> your</c><00:32:54.180><c> client</c><00:32:54.540><c> library</c><00:32:55.050><c> on</c><00:32:55.670><c> JDK</c><00:32:56.670><c> 5</c>

00:32:56.840 --> 00:32:56.850 align:start position:0%
you had your client library on JDK 5
 

00:32:56.850 --> 00:32:58.880 align:start position:0%
you had your client library on JDK 5
through<00:32:57.150><c> 8</c><00:32:57.330><c> and</c><00:32:57.630><c> it</c><00:32:58.020><c> was</c><00:32:58.470><c> used</c><00:32:58.680><c> some</c>

00:32:58.880 --> 00:32:58.890 align:start position:0%
through 8 and it was used some
 

00:32:58.890 --> 00:33:03.470 align:start position:0%
through 8 and it was used some
deprecated<00:33:00.920><c> type</c><00:33:01.920><c> in</c><00:33:02.070><c> the</c><00:33:02.130><c> JDK</c><00:33:02.520><c> you</c><00:33:03.090><c> compile</c>

00:33:03.470 --> 00:33:03.480 align:start position:0%
deprecated type in the JDK you compile
 

00:33:03.480 --> 00:33:04.730 align:start position:0%
deprecated type in the JDK you compile
this<00:33:03.660><c> and</c><00:33:03.720><c> you</c><00:33:03.960><c> get</c><00:33:04.110><c> your</c><00:33:04.260><c> duplication</c>

00:33:04.730 --> 00:33:04.740 align:start position:0%
this and you get your duplication
 

00:33:04.740 --> 00:33:07.250 align:start position:0%
this and you get your duplication
warning<00:33:05.070><c> so</c><00:33:05.610><c> I</c><00:33:05.640><c> figure</c><00:33:05.970><c> no</c><00:33:06.390><c> problem</c><00:33:06.810><c> I</c><00:33:06.960><c> have</c><00:33:07.140><c> to</c>

00:33:07.250 --> 00:33:07.260 align:start position:0%
warning so I figure no problem I have to
 

00:33:07.260 --> 00:33:09.710 align:start position:0%
warning so I figure no problem I have to
keep<00:33:07.380><c> using</c><00:33:07.620><c> this</c><00:33:07.860><c> type</c><00:33:08.100><c> so</c><00:33:08.400><c> I'll</c><00:33:08.640><c> just</c><00:33:08.940><c> put</c>

00:33:09.710 --> 00:33:09.720 align:start position:0%
keep using this type so I'll just put
 

00:33:09.720 --> 00:33:12.350 align:start position:0%
keep using this type so I'll just put
that<00:33:09.750><c> suppress</c><00:33:10.500><c> warnings</c><00:33:10.950><c> annotation</c><00:33:11.580><c> right</c>

00:33:12.350 --> 00:33:12.360 align:start position:0%
that suppress warnings annotation right
 

00:33:12.360 --> 00:33:14.270 align:start position:0%
that suppress warnings annotation right
at<00:33:12.510><c> the</c><00:33:12.570><c> top</c><00:33:12.720><c> of</c><00:33:12.750><c> the</c><00:33:12.900><c> class</c><00:33:13.080><c> and</c><00:33:13.470><c> this</c><00:33:14.160><c> will</c>

00:33:14.270 --> 00:33:14.280 align:start position:0%
at the top of the class and this will
 

00:33:14.280 --> 00:33:15.020 align:start position:0%
at the top of the class and this will
take<00:33:14.400><c> care</c><00:33:14.550><c> of</c><00:33:14.610><c> everything</c>

00:33:15.020 --> 00:33:15.030 align:start position:0%
take care of everything
 

00:33:15.030 --> 00:33:18.140 align:start position:0%
take care of everything
right<00:33:15.470><c> now</c><00:33:16.470><c> unfortunately</c><00:33:16.620><c> if</c><00:33:17.070><c> you</c><00:33:17.160><c> run</c><00:33:17.580><c> the</c>

00:33:18.140 --> 00:33:18.150 align:start position:0%
right now unfortunately if you run the
 

00:33:18.150 --> 00:33:19.280 align:start position:0%
right now unfortunately if you run the
compiler<00:33:18.360><c> again</c><00:33:18.660><c> you'll</c><00:33:18.810><c> notice</c><00:33:19.020><c> you</c><00:33:19.110><c> still</c>

00:33:19.280 --> 00:33:19.290 align:start position:0%
compiler again you'll notice you still
 

00:33:19.290 --> 00:33:21.170 align:start position:0%
compiler again you'll notice you still
have<00:33:19.440><c> a</c><00:33:19.500><c> deprecation</c><00:33:20.010><c> morning</c><00:33:20.280><c> so</c><00:33:20.820><c> what's</c>

00:33:21.170 --> 00:33:21.180 align:start position:0%
have a deprecation morning so what's
 

00:33:21.180 --> 00:33:23.570 align:start position:0%
have a deprecation morning so what's
going<00:33:21.420><c> on</c><00:33:21.540><c> here</c><00:33:21.810><c> the</c><00:33:22.620><c> warning</c><00:33:22.980><c> you're</c><00:33:23.310><c> getting</c>

00:33:23.570 --> 00:33:23.580 align:start position:0%
going on here the warning you're getting
 

00:33:23.580 --> 00:33:26.060 align:start position:0%
going on here the warning you're getting
now<00:33:23.700><c> isn't</c><00:33:24.060><c> from</c><00:33:24.270><c> any</c><00:33:24.540><c> of</c><00:33:25.020><c> the</c><00:33:25.110><c> code</c><00:33:25.380><c> of</c><00:33:25.650><c> the</c>

00:33:26.060 --> 00:33:26.070 align:start position:0%
now isn't from any of the code of the
 

00:33:26.070 --> 00:33:27.380 align:start position:0%
now isn't from any of the code of the
class<00:33:26.100><c> it's</c><00:33:26.550><c> actually</c><00:33:26.820><c> from</c><00:33:26.910><c> the</c><00:33:27.000><c> import</c>

00:33:27.380 --> 00:33:27.390 align:start position:0%
class it's actually from the import
 

00:33:27.390 --> 00:33:31.000 align:start position:0%
class it's actually from the import
statement<00:33:27.780><c> at</c><00:33:27.930><c> the</c><00:33:28.050><c> top</c><00:33:29.180><c> and</c><00:33:30.180><c> this</c><00:33:30.330><c> is</c>

00:33:31.000 --> 00:33:31.010 align:start position:0%
statement at the top and this is
 

00:33:31.010 --> 00:33:33.140 align:start position:0%
statement at the top and this is
mandated<00:33:32.010><c> by</c><00:33:32.100><c> the</c><00:33:32.130><c> Java</c><00:33:33.000><c> language</c>

00:33:33.140 --> 00:33:33.150 align:start position:0%
mandated by the Java language
 

00:33:33.150 --> 00:33:35.240 align:start position:0%
mandated by the Java language
specification<00:33:33.590><c> you</c><00:33:34.590><c> might</c><00:33:34.770><c> say</c><00:33:34.950><c> well</c><00:33:35.100><c> that's</c>

00:33:35.240 --> 00:33:35.250 align:start position:0%
specification you might say well that's
 

00:33:35.250 --> 00:33:36.800 align:start position:0%
specification you might say well that's
not<00:33:35.400><c> a</c><00:33:35.430><c> problem</c><00:33:35.490><c> I'll</c><00:33:35.820><c> just</c><00:33:35.850><c> apply</c><00:33:36.390><c> another</c>

00:33:36.800 --> 00:33:36.810 align:start position:0%
not a problem I'll just apply another
 

00:33:36.810 --> 00:33:38.690 align:start position:0%
not a problem I'll just apply another
suppress<00:33:37.200><c> warnings</c><00:33:37.560><c> annotation</c><00:33:38.040><c> that</c>

00:33:38.690 --> 00:33:38.700 align:start position:0%
suppress warnings annotation that
 

00:33:38.700 --> 00:33:40.250 align:start position:0%
suppress warnings annotation that
doesn't<00:33:38.970><c> work</c><00:33:39.060><c> either</c><00:33:39.180><c> you</c><00:33:39.750><c> syntactically</c>

00:33:40.250 --> 00:33:40.260 align:start position:0%
doesn't work either you syntactically
 

00:33:40.260 --> 00:33:42.170 align:start position:0%
doesn't work either you syntactically
you<00:33:40.410><c> can't</c><00:33:40.620><c> allow</c><00:33:40.770><c> that</c><00:33:40.800><c> so</c><00:33:41.760><c> while</c><00:33:42.030><c> this</c>

00:33:42.170 --> 00:33:42.180 align:start position:0%
you can't allow that so while this
 

00:33:42.180 --> 00:33:43.700 align:start position:0%
you can't allow that so while this
warning<00:33:42.570><c> may</c><00:33:42.750><c> be</c><00:33:42.810><c> very</c><00:33:43.050><c> thorough</c><00:33:43.350><c> and</c><00:33:43.680><c> well</c>

00:33:43.700 --> 00:33:43.710 align:start position:0%
warning may be very thorough and well
 

00:33:43.710 --> 00:33:46.280 align:start position:0%
warning may be very thorough and well
intentioned<00:33:44.100><c> it's</c><00:33:44.610><c> really</c><00:33:44.940><c> unhelpful</c><00:33:45.300><c> if</c><00:33:46.050><c> all</c>

00:33:46.280 --> 00:33:46.290 align:start position:0%
intentioned it's really unhelpful if all
 

00:33:46.290 --> 00:33:48.260 align:start position:0%
intentioned it's really unhelpful if all
the<00:33:46.440><c> uses</c><00:33:46.680><c> all</c><00:33:47.490><c> the</c><00:33:47.640><c> other</c><00:33:47.790><c> uses</c><00:33:48.120><c> of</c><00:33:48.150><c> the</c>

00:33:48.260 --> 00:33:48.270 align:start position:0%
the uses all the other uses of the
 

00:33:48.270 --> 00:33:50.560 align:start position:0%
the uses all the other uses of the
deprecated<00:33:48.810><c> type</c><00:33:49.020><c> can</c><00:33:49.230><c> be</c><00:33:49.350><c> covered</c><00:33:49.560><c> by</c><00:33:50.490><c> the</c>

00:33:50.560 --> 00:33:50.570 align:start position:0%
deprecated type can be covered by the
 

00:33:50.570 --> 00:33:53.780 align:start position:0%
deprecated type can be covered by the
suppress<00:33:51.570><c> warnings</c><00:33:51.900><c> annotation</c><00:33:52.430><c> it</c><00:33:53.430><c> seems</c><00:33:53.670><c> a</c>

00:33:53.780 --> 00:33:53.790 align:start position:0%
suppress warnings annotation it seems a
 

00:33:53.790 --> 00:33:55.220 align:start position:0%
suppress warnings annotation it seems a
bit<00:33:53.820><c> silly</c><00:33:54.120><c> to</c><00:33:54.300><c> force</c><00:33:54.750><c> you</c><00:33:54.870><c> to</c><00:33:54.930><c> do</c><00:33:55.080><c> something</c>

00:33:55.220 --> 00:33:55.230 align:start position:0%
bit silly to force you to do something
 

00:33:55.230 --> 00:33:57.260 align:start position:0%
bit silly to force you to do something
like<00:33:55.470><c> use</c><00:33:55.710><c> the</c><00:33:55.890><c> fully</c><00:33:56.100><c> qualified</c><00:33:56.400><c> name</c><00:33:56.700><c> of</c><00:33:57.180><c> the</c>

00:33:57.260 --> 00:33:57.270 align:start position:0%
like use the fully qualified name of the
 

00:33:57.270 --> 00:33:59.210 align:start position:0%
like use the fully qualified name of the
deprecated<00:33:57.660><c> type</c><00:33:57.840><c> everywhere</c><00:33:58.230><c> just</c><00:33:58.860><c> to</c><00:33:59.040><c> avoid</c>

00:33:59.210 --> 00:33:59.220 align:start position:0%
deprecated type everywhere just to avoid
 

00:33:59.220 --> 00:34:01.310 align:start position:0%
deprecated type everywhere just to avoid
this<00:33:59.430><c> warning</c><00:33:59.760><c> so</c><00:34:00.600><c> we</c><00:34:00.690><c> decided</c><00:34:01.020><c> that</c><00:34:01.080><c> was</c><00:34:01.290><c> a</c>

00:34:01.310 --> 00:34:01.320 align:start position:0%
this warning so we decided that was a
 

00:34:01.320 --> 00:34:03.470 align:start position:0%
this warning so we decided that was a
little<00:34:01.650><c> little</c><00:34:01.860><c> unnecessary</c><00:34:02.550><c> and</c><00:34:02.820><c> we've</c>

00:34:03.470 --> 00:34:03.480 align:start position:0%
little little unnecessary and we've
 

00:34:03.480 --> 00:34:05.360 align:start position:0%
little little unnecessary and we've
updated<00:34:03.690><c> the</c><00:34:04.170><c> language</c><00:34:04.470><c> specification</c><00:34:04.650><c> to</c>

00:34:05.360 --> 00:34:05.370 align:start position:0%
updated the language specification to
 

00:34:05.370 --> 00:34:08.270 align:start position:0%
updated the language specification to
not<00:34:05.940><c> require</c><00:34:06.420><c> a</c><00:34:06.450><c> deprecation</c><00:34:07.290><c> warning</c><00:34:07.650><c> in</c>

00:34:08.270 --> 00:34:08.280 align:start position:0%
not require a deprecation warning in
 

00:34:08.280 --> 00:34:10.400 align:start position:0%
not require a deprecation warning in
this<00:34:08.490><c> location</c><00:34:08.940><c> and</c><00:34:09.300><c> because</c><00:34:10.200><c> of</c><00:34:10.230><c> this</c>

00:34:10.400 --> 00:34:10.410 align:start position:0%
this location and because of this
 

00:34:10.410 --> 00:34:12.350 align:start position:0%
this location and because of this
language<00:34:10.800><c> change</c><00:34:11.100><c> it</c><00:34:11.429><c> is</c><00:34:11.610><c> now</c><00:34:11.730><c> tractable</c><00:34:12.240><c> to</c>

00:34:12.350 --> 00:34:12.360 align:start position:0%
language change it is now tractable to
 

00:34:12.360 --> 00:34:13.850 align:start position:0%
language change it is now tractable to
clear<00:34:12.540><c> a</c><00:34:12.570><c> code</c><00:34:12.900><c> base</c><00:34:13.080><c> of</c><00:34:13.290><c> deprecation</c>

00:34:13.850 --> 00:34:13.860 align:start position:0%
clear a code base of deprecation
 

00:34:13.860 --> 00:34:15.860 align:start position:0%
clear a code base of deprecation
warnings<00:34:13.890><c> and</c><00:34:14.850><c> we</c><00:34:15.030><c> have</c><00:34:15.150><c> an</c><00:34:15.240><c> existence</c><00:34:15.630><c> proof</c>

00:34:15.860 --> 00:34:15.870 align:start position:0%
warnings and we have an existence proof
 

00:34:15.870 --> 00:34:17.510 align:start position:0%
warnings and we have an existence proof
of<00:34:16.020><c> that</c><00:34:16.140><c> by</c><00:34:16.350><c> clearing</c><00:34:16.860><c> the</c><00:34:16.890><c> Java</c><00:34:17.280><c> based</c>

00:34:17.510 --> 00:34:17.520 align:start position:0%
of that by clearing the Java based
 

00:34:17.520 --> 00:34:19.370 align:start position:0%
of that by clearing the Java based
module<00:34:18.000><c> and</c><00:34:18.270><c> the</c><00:34:18.330><c> Java</c><00:34:18.480><c> desktop</c><00:34:18.750><c> module</c>

00:34:19.370 --> 00:34:19.380 align:start position:0%
module and the Java desktop module
 

00:34:19.380 --> 00:34:21.350 align:start position:0%
module and the Java desktop module
amongst<00:34:19.890><c> other</c><00:34:20.010><c> modules</c><00:34:20.460><c> in</c><00:34:20.610><c> the</c><00:34:20.700><c> JDK</c><00:34:21.090><c> of</c>

00:34:21.350 --> 00:34:21.360 align:start position:0%
amongst other modules in the JDK of
 

00:34:21.360 --> 00:34:23.810 align:start position:0%
amongst other modules in the JDK of
deprecation<00:34:22.230><c> warnings</c><00:34:22.260><c> so</c><00:34:23.100><c> if</c><00:34:23.250><c> you</c><00:34:23.370><c> have</c><00:34:23.550><c> such</c>

00:34:23.810 --> 00:34:23.820 align:start position:0%
deprecation warnings so if you have such
 

00:34:23.820 --> 00:34:25.070 align:start position:0%
deprecation warnings so if you have such
warnings<00:34:24.179><c> in</c><00:34:24.270><c> your</c><00:34:24.390><c> own</c><00:34:24.480><c> code</c><00:34:24.630><c> base</c><00:34:24.810><c> I</c>

00:34:25.070 --> 00:34:25.080 align:start position:0%
warnings in your own code base I
 

00:34:25.080 --> 00:34:26.360 align:start position:0%
warnings in your own code base I
encourage<00:34:25.380><c> you</c><00:34:25.500><c> to</c><00:34:25.530><c> look</c><00:34:25.740><c> into</c><00:34:25.830><c> them</c><00:34:26.070><c> and</c><00:34:26.220><c> try</c>

00:34:26.360 --> 00:34:26.370 align:start position:0%
encourage you to look into them and try
 

00:34:26.370 --> 00:34:29.750 align:start position:0%
encourage you to look into them and try
to<00:34:26.429><c> try</c><00:34:27.120><c> to</c><00:34:27.150><c> get</c><00:34:27.300><c> them</c><00:34:27.450><c> under</c><00:34:27.570><c> control</c><00:34:28.760><c> now</c>

00:34:29.750 --> 00:34:29.760 align:start position:0%
to try to get them under control now
 

00:34:29.760 --> 00:34:30.710 align:start position:0%
to try to get them under control now
there's<00:34:29.940><c> a</c><00:34:30.000><c> bit</c><00:34:30.150><c> more</c><00:34:30.179><c> to</c><00:34:30.450><c> say</c><00:34:30.600><c> about</c>

00:34:30.710 --> 00:34:30.720 align:start position:0%
there's a bit more to say about
 

00:34:30.720 --> 00:34:32.100 align:start position:0%
there's a bit more to say about
deprecation<00:34:31.410><c> there's</c><00:34:31.560><c> been</c>

00:34:32.100 --> 00:34:32.110 align:start position:0%
deprecation there's been
 

00:34:32.110 --> 00:34:33.690 align:start position:0%
deprecation there's been
here's<00:34:32.350><c> some</c><00:34:32.500><c> confusion</c><00:34:33.010><c> about</c><00:34:33.070><c> deprecation</c>

00:34:33.690 --> 00:34:33.700 align:start position:0%
here's some confusion about deprecation
 

00:34:33.700 --> 00:34:36.000 align:start position:0%
here's some confusion about deprecation
what<00:34:33.850><c> does</c><00:34:33.940><c> it</c><00:34:34.060><c> mean</c><00:34:34.440><c> is</c><00:34:35.440><c> it</c><00:34:35.590><c> deprecated</c>

00:34:36.000 --> 00:34:36.010 align:start position:0%
what does it mean is it deprecated
 

00:34:36.010 --> 00:34:37.680 align:start position:0%
what does it mean is it deprecated
because<00:34:36.190><c> it's</c><00:34:36.340><c> harmful</c><00:34:36.520><c> is</c><00:34:37.000><c> it</c><00:34:37.150><c> deprecated</c>

00:34:37.680 --> 00:34:37.690 align:start position:0%
because it's harmful is it deprecated
 

00:34:37.690 --> 00:34:39.390 align:start position:0%
because it's harmful is it deprecated
because<00:34:37.870><c> it's</c><00:34:38.020><c> going</c><00:34:38.110><c> away</c><00:34:38.380><c> and</c><00:34:38.650><c> if</c><00:34:39.220><c> it's</c>

00:34:39.390 --> 00:34:39.400 align:start position:0%
because it's going away and if it's
 

00:34:39.400 --> 00:34:40.740 align:start position:0%
because it's going away and if it's
deprecated<00:34:39.880><c> because</c><00:34:40.090><c> it's</c><00:34:40.210><c> going</c><00:34:40.420><c> away</c><00:34:40.510><c> well</c>

00:34:40.740 --> 00:34:40.750 align:start position:0%
deprecated because it's going away well
 

00:34:40.750 --> 00:34:42.300 align:start position:0%
deprecated because it's going away well
I<00:34:40.810><c> haven't</c><00:34:40.960><c> you</c><00:34:41.110><c> JDK</c><00:34:41.470><c> guys</c><00:34:41.680><c> removed</c><00:34:42.070><c> things</c>

00:34:42.300 --> 00:34:42.310 align:start position:0%
I haven't you JDK guys removed things
 

00:34:42.310 --> 00:34:44.460 align:start position:0%
I haven't you JDK guys removed things
yet<00:34:42.550><c> so</c><00:34:43.330><c> we</c><00:34:43.450><c> wanted</c><00:34:43.690><c> to</c><00:34:43.780><c> give</c><00:34:44.080><c> more</c>

00:34:44.460 --> 00:34:44.470 align:start position:0%
yet so we wanted to give more
 

00:34:44.470 --> 00:34:46.620 align:start position:0%
yet so we wanted to give more
information<00:34:44.530><c> in</c><00:34:45.160><c> this</c><00:34:45.310><c> situation</c><00:34:45.820><c> and</c><00:34:46.060><c> we</c><00:34:46.510><c> did</c>

00:34:46.620 --> 00:34:46.630 align:start position:0%
information in this situation and we did
 

00:34:46.630 --> 00:34:48.810 align:start position:0%
information in this situation and we did
that<00:34:46.780><c> by</c><00:34:46.990><c> enhancing</c><00:34:47.680><c> the</c><00:34:47.950><c> information</c>

00:34:48.810 --> 00:34:48.820 align:start position:0%
that by enhancing the information
 

00:34:48.820 --> 00:34:50.640 align:start position:0%
that by enhancing the information
available<00:34:49.180><c> in</c><00:34:49.330><c> the</c><00:34:49.690><c> deprecation</c><00:34:50.110><c> annotation</c>

00:34:50.640 --> 00:34:50.650 align:start position:0%
available in the deprecation annotation
 

00:34:50.650 --> 00:34:53.160 align:start position:0%
available in the deprecation annotation
type<00:34:50.860><c> there</c><00:34:51.580><c> are</c><00:34:51.640><c> two</c><00:34:51.760><c> new</c><00:34:51.880><c> methods</c><00:34:52.060><c> added</c><00:34:52.540><c> one</c>

00:34:53.160 --> 00:34:53.170 align:start position:0%
type there are two new methods added one
 

00:34:53.170 --> 00:34:55.260 align:start position:0%
type there are two new methods added one
of<00:34:53.260><c> those</c><00:34:53.380><c> is</c><00:34:53.560><c> a</c><00:34:53.590><c> predicate</c><00:34:53.980><c> for</c><00:34:54.100><c> removal</c><00:34:54.790><c> that</c>

00:34:55.260 --> 00:34:55.270 align:start position:0%
of those is a predicate for removal that
 

00:34:55.270 --> 00:34:57.780 align:start position:0%
of those is a predicate for removal that
defaults<00:34:55.720><c> to</c><00:34:55.810><c> false</c><00:34:55.840><c> so</c><00:34:56.800><c> if</c><00:34:57.220><c> something</c><00:34:57.700><c> is</c>

00:34:57.780 --> 00:34:57.790 align:start position:0%
defaults to false so if something is
 

00:34:57.790 --> 00:35:00.060 align:start position:0%
defaults to false so if something is
deprecated<00:34:58.270><c> for</c><00:34:58.480><c> removal</c><00:34:58.930><c> true</c><00:34:59.260><c> that</c><00:34:59.920><c> means</c>

00:35:00.060 --> 00:35:00.070 align:start position:0%
deprecated for removal true that means
 

00:35:00.070 --> 00:35:02.670 align:start position:0%
deprecated for removal true that means
in<00:35:00.370><c> some</c><00:35:00.610><c> relatively</c><00:35:01.330><c> near</c><00:35:01.480><c> future</c><00:35:01.690><c> platform</c>

00:35:02.670 --> 00:35:02.680 align:start position:0%
in some relatively near future platform
 

00:35:02.680 --> 00:35:04.920 align:start position:0%
in some relatively near future platform
release<00:35:02.890><c> we</c><00:35:03.070><c> plan</c><00:35:03.610><c> to</c><00:35:03.700><c> remove</c><00:35:03.880><c> it</c><00:35:04.030><c> you</c><00:35:04.720><c> also</c>

00:35:04.920 --> 00:35:04.930 align:start position:0%
release we plan to remove it you also
 

00:35:04.930 --> 00:35:07.470 align:start position:0%
release we plan to remove it you also
can<00:35:05.230><c> add</c><00:35:05.320><c> a</c><00:35:05.380><c> string</c><00:35:06.040><c> for</c><00:35:06.310><c> the</c><00:35:06.430><c> since</c><00:35:06.640><c> release</c>

00:35:07.470 --> 00:35:07.480 align:start position:0%
can add a string for the since release
 

00:35:07.480 --> 00:35:09.330 align:start position:0%
can add a string for the since release
that<00:35:07.930><c> something</c><00:35:08.560><c> was</c><00:35:08.680><c> first</c><00:35:08.860><c> deprecated</c>

00:35:09.330 --> 00:35:09.340 align:start position:0%
that something was first deprecated
 

00:35:09.340 --> 00:35:11.820 align:start position:0%
that something was first deprecated
we've<00:35:10.060><c> updated</c><00:35:10.690><c> the</c><00:35:11.230><c> deprecation</c>

00:35:11.820 --> 00:35:11.830 align:start position:0%
we've updated the deprecation
 

00:35:11.830 --> 00:35:14.280 align:start position:0%
we've updated the deprecation
annotations<00:35:12.370><c> in</c><00:35:12.580><c> the</c><00:35:12.760><c> core</c><00:35:13.360><c> platform</c><00:35:13.900><c> to</c><00:35:14.140><c> have</c>

00:35:14.280 --> 00:35:14.290 align:start position:0%
annotations in the core platform to have
 

00:35:14.290 --> 00:35:16.590 align:start position:0%
annotations in the core platform to have
this<00:35:14.470><c> for</c><00:35:14.980><c> removal</c><00:35:15.310><c> information</c><00:35:15.790><c> and</c><00:35:16.030><c> their</c>

00:35:16.590 --> 00:35:16.600 align:start position:0%
this for removal information and their
 

00:35:16.600 --> 00:35:19.320 align:start position:0%
this for removal information and their
supporting<00:35:17.020><c> updates</c><00:35:17.680><c> made</c><00:35:17.890><c> in</c><00:35:18.330><c> language</c>

00:35:19.320 --> 00:35:19.330 align:start position:0%
supporting updates made in language
 

00:35:19.330 --> 00:35:22.500 align:start position:0%
supporting updates made in language
specification<00:35:19.900><c> java</c><00:35:20.470><c> c</c><00:35:20.650><c> and</c><00:35:20.740><c> java</c><00:35:20.860><c> talk</c><00:35:21.510><c> also</c>

00:35:22.500 --> 00:35:22.510 align:start position:0%
specification java c and java talk also
 

00:35:22.510 --> 00:35:24.600 align:start position:0%
specification java c and java talk also
there's<00:35:22.720><c> a</c><00:35:22.780><c> new</c><00:35:22.960><c> static</c><00:35:23.650><c> analysis</c><00:35:24.130><c> tool</c><00:35:24.370><c> in</c>

00:35:24.600 --> 00:35:24.610 align:start position:0%
there's a new static analysis tool in
 

00:35:24.610 --> 00:35:26.940 align:start position:0%
there's a new static analysis tool in
the<00:35:24.700><c> JDK</c><00:35:25.090><c> called</c><00:35:25.420><c> J</c><00:35:25.600><c> deeper</c><00:35:25.930><c> scan</c><00:35:26.200><c> that</c>

00:35:26.940 --> 00:35:26.950 align:start position:0%
the JDK called J deeper scan that
 

00:35:26.950 --> 00:35:29.220 align:start position:0%
the JDK called J deeper scan that
analyzes<00:35:27.370><c> class</c><00:35:27.790><c> files</c><00:35:28.150><c> and</c><00:35:28.420><c> rar</c><00:35:28.570><c> files</c><00:35:28.810><c> for</c>

00:35:29.220 --> 00:35:29.230 align:start position:0%
analyzes class files and rar files for
 

00:35:29.230 --> 00:35:31.080 align:start position:0%
analyzes class files and rar files for
the<00:35:29.380><c> use</c><00:35:29.590><c> of</c><00:35:29.830><c> api's</c><00:35:30.250><c> that</c><00:35:30.490><c> were</c><00:35:30.580><c> deprecated</c><00:35:31.030><c> in</c>

00:35:31.080 --> 00:35:31.090 align:start position:0%
the use of api's that were deprecated in
 

00:35:31.090 --> 00:35:33.030 align:start position:0%
the use of api's that were deprecated in
the<00:35:31.150><c> jdk</c><00:35:31.540><c> so</c><00:35:32.440><c> we</c><00:35:32.560><c> have</c><00:35:32.710><c> how</c><00:35:32.830><c> do</c><00:35:32.890><c> these</c>

00:35:33.030 --> 00:35:33.040 align:start position:0%
the jdk so we have how do these
 

00:35:33.040 --> 00:35:35.040 align:start position:0%
the jdk so we have how do these
deprecations<00:35:33.730><c> including</c><00:35:34.510><c> for</c><00:35:34.690><c> removal</c>

00:35:35.040 --> 00:35:35.050 align:start position:0%
deprecations including for removal
 

00:35:35.050 --> 00:35:37.770 align:start position:0%
deprecations including for removal
deprecations<00:35:35.760><c> so</c><00:35:36.760><c> you</c><00:35:37.330><c> don't</c><00:35:37.510><c> have</c><00:35:37.660><c> to</c>

00:35:37.770 --> 00:35:37.780 align:start position:0%
deprecations so you don't have to
 

00:35:37.780 --> 00:35:39.480 align:start position:0%
deprecations so you don't have to
recompile<00:35:38.230><c> your</c><00:35:38.470><c> code</c><00:35:38.740><c> though</c><00:35:38.920><c> to</c><00:35:38.980><c> find</c><00:35:39.340><c> out</c>

00:35:39.480 --> 00:35:39.490 align:start position:0%
recompile your code though to find out
 

00:35:39.490 --> 00:35:42.180 align:start position:0%
recompile your code though to find out
though<00:35:39.820><c> if</c><00:35:40.180><c> your</c><00:35:40.480><c> jar</c><00:35:41.350><c> files</c><00:35:41.590><c> are</c><00:35:41.770><c> affected</c><00:35:42.100><c> by</c>

00:35:42.180 --> 00:35:42.190 align:start position:0%
though if your jar files are affected by
 

00:35:42.190 --> 00:35:43.800 align:start position:0%
though if your jar files are affected by
it<00:35:42.250><c> you</c><00:35:42.490><c> can</c><00:35:42.640><c> just</c><00:35:42.670><c> run</c><00:35:42.970><c> j</c><00:35:43.210><c> deeper</c><00:35:43.450><c> scan</c><00:35:43.660><c> on</c>

00:35:43.800 --> 00:35:43.810 align:start position:0%
it you can just run j deeper scan on
 

00:35:43.810 --> 00:35:45.540 align:start position:0%
it you can just run j deeper scan on
your<00:35:43.930><c> jar</c><00:35:44.080><c> files</c><00:35:44.290><c> instead</c><00:35:44.710><c> and</c><00:35:44.920><c> you</c><00:35:45.220><c> can</c><00:35:45.370><c> find</c>

00:35:45.540 --> 00:35:45.550 align:start position:0%
your jar files instead and you can find
 

00:35:45.550 --> 00:35:49.080 align:start position:0%
your jar files instead and you can find
out<00:35:45.700><c> what's</c><00:35:46.150><c> going</c><00:35:46.360><c> on</c><00:35:47.820><c> next</c><00:35:48.820><c> we'll</c><00:35:48.970><c> talk</c>

00:35:49.080 --> 00:35:49.090 align:start position:0%
out what's going on next we'll talk
 

00:35:49.090 --> 00:35:50.670 align:start position:0%
out what's going on next we'll talk
about<00:35:49.330><c> some</c><00:35:49.630><c> of</c><00:35:49.660><c> the</c><00:35:49.780><c> library</c><00:35:50.110><c> updates</c><00:35:50.410><c> that</c>

00:35:50.670 --> 00:35:50.680 align:start position:0%
about some of the library updates that
 

00:35:50.680 --> 00:35:53.970 align:start position:0%
about some of the library updates that
went<00:35:50.890><c> on</c><00:35:51.040><c> in</c><00:35:51.310><c> the</c><00:35:51.400><c> release</c><00:35:52.710><c> first</c><00:35:53.710><c> of</c><00:35:53.920><c> these</c>

00:35:53.970 --> 00:35:53.980 align:start position:0%
went on in the release first of these
 

00:35:53.980 --> 00:35:56.670 align:start position:0%
went on in the release first of these
was<00:35:54.220><c> the</c><00:35:54.280><c> new</c><00:35:54.580><c> version</c><00:35:55.060><c> string</c><00:35:55.360><c> the</c><00:35:56.140><c> one</c><00:35:56.440><c> dot</c>

00:35:56.670 --> 00:35:56.680 align:start position:0%
was the new version string the one dot
 

00:35:56.680 --> 00:35:59.100 align:start position:0%
was the new version string the one dot
in<00:35:57.040><c> 1.8</c><00:35:57.580><c> and</c><00:35:57.610><c> 1.7</c><00:35:58.360><c> and</c><00:35:58.480><c> so</c><00:35:58.600><c> forth</c><00:35:58.810><c> has</c><00:35:58.960><c> gone</c>

00:35:59.100 --> 00:35:59.110 align:start position:0%
in 1.8 and 1.7 and so forth has gone
 

00:35:59.110 --> 00:36:03.180 align:start position:0%
in 1.8 and 1.7 and so forth has gone
away<00:35:59.260><c> so</c><00:36:00.100><c> if</c><00:36:00.280><c> you</c><00:36:00.460><c> run</c><00:36:01.450><c> a</c><00:36:01.510><c> version</c><00:36:02.020><c> on</c><00:36:02.440><c> your</c><00:36:02.800><c> new</c>

00:36:03.180 --> 00:36:03.190 align:start position:0%
away so if you run a version on your new
 

00:36:03.190 --> 00:36:04.920 align:start position:0%
away so if you run a version on your new
download<00:36:03.610><c> of</c><00:36:03.730><c> JDK</c><00:36:03.940><c> 9</c><00:36:04.210><c> and</c><00:36:04.390><c> it'll</c><00:36:04.570><c> just</c><00:36:04.750><c> say</c>

00:36:04.920 --> 00:36:04.930 align:start position:0%
download of JDK 9 and it'll just say
 

00:36:04.930 --> 00:36:07.440 align:start position:0%
download of JDK 9 and it'll just say
it's<00:36:05.230><c> version</c><00:36:05.590><c> 9</c><00:36:05.770><c> and</c><00:36:06.130><c> it's</c><00:36:06.250><c> you</c><00:36:06.610><c> know</c><00:36:06.670><c> build</c><00:36:07.240><c> 9</c>

00:36:07.440 --> 00:36:07.450 align:start position:0%
it's version 9 and it's you know build 9
 

00:36:07.450 --> 00:36:10.830 align:start position:0%
it's version 9 and it's you know build 9
+<00:36:07.690><c> 1</c><00:36:07.810><c> 81</c><00:36:08.490><c> don't</c><00:36:09.490><c> get</c><00:36:09.640><c> too</c><00:36:09.880><c> used</c><00:36:09.910><c> to</c><00:36:10.360><c> this</c><00:36:10.540><c> though</c>

00:36:10.830 --> 00:36:10.840 align:start position:0%
+ 1 81 don't get too used to this though
 

00:36:10.840 --> 00:36:13.170 align:start position:0%
+ 1 81 don't get too used to this though
because<00:36:11.830><c> the</c><00:36:12.100><c> version</c><00:36:12.250><c> scheme</c><00:36:12.580><c> will</c><00:36:13.030><c> likely</c>

00:36:13.170 --> 00:36:13.180 align:start position:0%
because the version scheme will likely
 

00:36:13.180 --> 00:36:15.360 align:start position:0%
because the version scheme will likely
change<00:36:13.510><c> again</c><00:36:13.780><c> instead</c><00:36:14.530><c> of</c><00:36:14.590><c> JDK</c><00:36:14.890><c> 10</c><00:36:15.100><c> we</c><00:36:15.220><c> might</c>

00:36:15.360 --> 00:36:15.370 align:start position:0%
change again instead of JDK 10 we might
 

00:36:15.370 --> 00:36:18.270 align:start position:0%
change again instead of JDK 10 we might
have<00:36:15.490><c> 18.3</c><00:36:16.120><c> maybe</c><00:36:16.990><c> it'll</c><00:36:17.200><c> be</c><00:36:17.290><c> X</c><00:36:17.740><c> or</c><00:36:17.950><c> JDK</c><00:36:18.250><c> a</c>

00:36:18.270 --> 00:36:18.280 align:start position:0%
have 18.3 maybe it'll be X or JDK a
 

00:36:18.280 --> 00:36:20.640 align:start position:0%
have 18.3 maybe it'll be X or JDK a
we'll<00:36:19.000><c> see</c><00:36:19.210><c> in</c><00:36:19.750><c> the</c><00:36:19.840><c> coming</c><00:36:19.960><c> once</c><00:36:20.320><c> what</c><00:36:20.530><c> the</c>

00:36:20.640 --> 00:36:20.650 align:start position:0%
we'll see in the coming once what the
 

00:36:20.650 --> 00:36:22.560 align:start position:0%
we'll see in the coming once what the
final<00:36:20.830><c> name</c><00:36:21.010><c> is</c><00:36:21.190><c> but</c><00:36:21.730><c> we</c><00:36:21.820><c> won't</c><00:36:21.970><c> the</c><00:36:22.210><c> 1</c><00:36:22.390><c> dot</c>

00:36:22.560 --> 00:36:22.570 align:start position:0%
final name is but we won't the 1 dot
 

00:36:22.570 --> 00:36:24.840 align:start position:0%
final name is but we won't the 1 dot
won't<00:36:22.780><c> be</c><00:36:22.840><c> coming</c><00:36:23.080><c> back</c><00:36:23.580><c> so</c><00:36:24.580><c> if</c><00:36:24.670><c> you</c><00:36:24.760><c> have</c>

00:36:24.840 --> 00:36:24.850 align:start position:0%
won't be coming back so if you have
 

00:36:24.850 --> 00:36:26.610 align:start position:0%
won't be coming back so if you have
tooling<00:36:25.180><c> that</c><00:36:25.210><c> checks</c><00:36:25.720><c> for</c><00:36:25.870><c> this</c><00:36:25.960><c> it'll</c><00:36:26.320><c> have</c>

00:36:26.610 --> 00:36:26.620 align:start position:0%
tooling that checks for this it'll have
 

00:36:26.620 --> 00:36:30.720 align:start position:0%
tooling that checks for this it'll have
to<00:36:26.740><c> be</c><00:36:26.830><c> updated</c><00:36:28.260><c> if</c><00:36:29.260><c> you</c><00:36:29.470><c> use</c><00:36:29.620><c> Java</c><00:36:29.950><c> to</c><00:36:30.250><c> talk</c><00:36:30.490><c> to</c>

00:36:30.720 --> 00:36:30.730 align:start position:0%
to be updated if you use Java to talk to
 

00:36:30.730 --> 00:36:32.880 align:start position:0%
to be updated if you use Java to talk to
native<00:36:31.480><c> OS</c><00:36:31.630><c> processes</c><00:36:32.290><c> there's</c><00:36:32.620><c> some</c>

00:36:32.880 --> 00:36:32.890 align:start position:0%
native OS processes there's some
 

00:36:32.890 --> 00:36:34.770 align:start position:0%
native OS processes there's some
additional<00:36:33.460><c> API</c><00:36:33.700><c> elements</c><00:36:34.180><c> to</c><00:36:34.300><c> control</c><00:36:34.630><c> those</c>

00:36:34.770 --> 00:36:34.780 align:start position:0%
additional API elements to control those
 

00:36:34.780 --> 00:36:36.690 align:start position:0%
additional API elements to control those
more<00:36:35.290><c> directly</c><00:36:35.560><c> including</c><00:36:36.100><c> getting</c><00:36:36.430><c> the</c><00:36:36.520><c> pid'</c>

00:36:36.690 --> 00:36:36.700 align:start position:0%
more directly including getting the pid'
 

00:36:36.700 --> 00:36:40.890 align:start position:0%
more directly including getting the pid'
a<00:36:38.220><c> few</c><00:36:39.220><c> interesting</c><00:36:39.460><c> features</c><00:36:39.870><c> related</c><00:36:40.870><c> to</c>

00:36:40.890 --> 00:36:40.900 align:start position:0%
a few interesting features related to
 

00:36:40.900 --> 00:36:43.860 align:start position:0%
a few interesting features related to
strings<00:36:41.350><c> the</c><00:36:42.220><c> first</c><00:36:42.430><c> of</c><00:36:42.580><c> these</c><00:36:42.700><c> is</c><00:36:43.060><c> compact</c>

00:36:43.860 --> 00:36:43.870 align:start position:0%
strings the first of these is compact
 

00:36:43.870 --> 00:36:45.870 align:start position:0%
strings the first of these is compact
strings<00:36:44.200><c> where</c>

00:36:45.870 --> 00:36:45.880 align:start position:0%
strings where
 

00:36:45.880 --> 00:36:48.180 align:start position:0%
strings where
without<00:36:46.090><c> any</c><00:36:46.360><c> user</c><00:36:46.540><c> intervention</c><00:36:46.930><c> if</c><00:36:47.830><c> your</c>

00:36:48.180 --> 00:36:48.190 align:start position:0%
without any user intervention if your
 

00:36:48.190 --> 00:36:50.700 align:start position:0%
without any user intervention if your
string<00:36:48.640><c> doesn't</c><00:36:49.030><c> require</c><00:36:49.240><c> any</c><00:36:49.570><c> of</c><00:36:49.660><c> the</c><00:36:49.750><c> high</c>

00:36:50.700 --> 00:36:50.710 align:start position:0%
string doesn't require any of the high
 

00:36:50.710 --> 00:36:54.060 align:start position:0%
string doesn't require any of the high
bytes<00:36:50.980><c> to</c><00:36:51.250><c> be</c><00:36:51.400><c> nonzero</c><00:36:52.030><c> it'll</c><00:36:52.750><c> use</c><00:36:52.960><c> a</c><00:36:52.990><c> one</c><00:36:53.860><c> byte</c>

00:36:54.060 --> 00:36:54.070 align:start position:0%
bytes to be nonzero it'll use a one byte
 

00:36:54.070 --> 00:36:56.280 align:start position:0%
bytes to be nonzero it'll use a one byte
per<00:36:54.100><c> character</c><00:36:54.550><c> representation</c><00:36:55.030><c> as</c><00:36:55.570><c> opposed</c>

00:36:56.280 --> 00:36:56.290 align:start position:0%
per character representation as opposed
 

00:36:56.290 --> 00:36:59.100 align:start position:0%
per character representation as opposed
to<00:36:56.410><c> the</c><00:36:56.530><c> old</c><00:36:56.560><c> one</c><00:36:57.310><c> care</c><00:36:57.580><c> one</c><00:36:58.060><c> car</c><00:36:58.570><c> per</c>

00:36:59.100 --> 00:36:59.110 align:start position:0%
to the old one care one car per
 

00:36:59.110 --> 00:37:01.770 align:start position:0%
to the old one care one car per
character<00:36:59.980><c> of</c><00:37:00.190><c> representation</c><00:37:00.820><c> if</c><00:37:01.480><c> you</c><00:37:01.570><c> do</c>

00:37:01.770 --> 00:37:01.780 align:start position:0%
character of representation if you do
 

00:37:01.780 --> 00:37:04.740 align:start position:0%
character of representation if you do
need<00:37:02.040><c> the</c><00:37:03.040><c> high</c><00:37:03.160><c> bytes</c><00:37:03.400><c> that</c><00:37:03.640><c> it'll</c><00:37:03.850><c> use</c><00:37:03.970><c> two</c>

00:37:04.740 --> 00:37:04.750 align:start position:0%
need the high bytes that it'll use two
 

00:37:04.750 --> 00:37:08.220 align:start position:0%
need the high bytes that it'll use two
bytes<00:37:04.960><c> instead</c><00:37:05.400><c> so</c><00:37:06.400><c> this</c><00:37:07.360><c> can</c><00:37:07.630><c> give</c><00:37:07.780><c> you</c><00:37:07.990><c> a</c>

00:37:08.220 --> 00:37:08.230 align:start position:0%
bytes instead so this can give you a
 

00:37:08.230 --> 00:37:09.600 align:start position:0%
bytes instead so this can give you a
better<00:37:08.500><c> memory</c><00:37:08.920><c> usage</c><00:37:09.370><c> for</c><00:37:09.520><c> your</c>

00:37:09.600 --> 00:37:09.610 align:start position:0%
better memory usage for your
 

00:37:09.610 --> 00:37:11.310 align:start position:0%
better memory usage for your
applications<00:37:10.090><c> especially</c><00:37:10.300><c> ones</c><00:37:10.690><c> using</c>

00:37:11.310 --> 00:37:11.320 align:start position:0%
applications especially ones using
 

00:37:11.320 --> 00:37:12.900 align:start position:0%
applications especially ones using
strings<00:37:11.770><c> and</c><00:37:12.010><c> you</c><00:37:12.340><c> don't</c><00:37:12.490><c> have</c><00:37:12.640><c> to</c><00:37:12.760><c> update</c>

00:37:12.900 --> 00:37:12.910 align:start position:0%
strings and you don't have to update
 

00:37:12.910 --> 00:37:14.670 align:start position:0%
strings and you don't have to update
your<00:37:13.240><c> application</c><00:37:13.900><c> in</c><00:37:14.290><c> a</c><00:37:14.350><c> way</c><00:37:14.440><c> to</c><00:37:14.500><c> take</c>

00:37:14.670 --> 00:37:14.680 align:start position:0%
your application in a way to take
 

00:37:14.680 --> 00:37:17.850 align:start position:0%
your application in a way to take
advantage<00:37:15.010><c> of</c><00:37:15.100><c> that</c><00:37:15.900><c> the</c><00:37:16.900><c> second</c><00:37:17.230><c> feature</c><00:37:17.410><c> in</c>

00:37:17.850 --> 00:37:17.860 align:start position:0%
advantage of that the second feature in
 

00:37:17.860 --> 00:37:19.860 align:start position:0%
advantage of that the second feature in
destroy<00:37:18.220><c> into</c><00:37:18.670><c> five</c><00:37:18.850><c> string</c><00:37:19.360><c> concatenation</c>

00:37:19.860 --> 00:37:19.870 align:start position:0%
destroy into five string concatenation
 

00:37:19.870 --> 00:37:21.990 align:start position:0%
destroy into five string concatenation
is<00:37:20.470><c> a</c><00:37:20.590><c> good</c><00:37:21.100><c> example</c><00:37:21.220><c> of</c><00:37:21.550><c> a</c><00:37:21.640><c> feature</c><00:37:21.880><c> that</c>

00:37:21.990 --> 00:37:22.000 align:start position:0%
is a good example of a feature that
 

00:37:22.000 --> 00:37:26.010 align:start position:0%
is a good example of a feature that
crosses<00:37:22.570><c> all</c><00:37:22.840><c> of</c><00:37:23.200><c> the</c><00:37:23.980><c> VM</c><00:37:24.360><c> the</c><00:37:25.360><c> language</c><00:37:25.780><c> and</c>

00:37:26.010 --> 00:37:26.020 align:start position:0%
crosses all of the VM the language and
 

00:37:26.020 --> 00:37:29.010 align:start position:0%
crosses all of the VM the language and
well<00:37:26.650><c> as</c><00:37:26.740><c> the</c><00:37:26.770><c> compiler</c><00:37:27.070><c> like</c><00:37:27.850><c> Java</c><00:37:28.120><c> see</c><00:37:28.330><c> it's</c>

00:37:29.010 --> 00:37:29.020 align:start position:0%
well as the compiler like Java see it's
 

00:37:29.020 --> 00:37:31.230 align:start position:0%
well as the compiler like Java see it's
a<00:37:29.080><c> very</c><00:37:29.230><c> common</c><00:37:29.590><c> operation</c><00:37:29.740><c> in</c><00:37:30.430><c> the</c><00:37:31.060><c> Java</c>

00:37:31.230 --> 00:37:31.240 align:start position:0%
a very common operation in the Java
 

00:37:31.240 --> 00:37:32.880 align:start position:0%
a very common operation in the Java
platform<00:37:31.480><c> to</c><00:37:31.960><c> concatenate</c><00:37:32.440><c> strings</c><00:37:32.710><c> together</c>

00:37:32.880 --> 00:37:32.890 align:start position:0%
platform to concatenate strings together
 

00:37:32.890 --> 00:37:35.370 align:start position:0%
platform to concatenate strings together
Java<00:37:33.820><c> C</c><00:37:33.940><c> happens</c><00:37:34.090><c> to</c><00:37:34.390><c> do</c><00:37:34.510><c> this</c><00:37:34.630><c> usually</c><00:37:35.080><c> with</c>

00:37:35.370 --> 00:37:35.380 align:start position:0%
Java C happens to do this usually with
 

00:37:35.380 --> 00:37:38.520 align:start position:0%
Java C happens to do this usually with
string<00:37:35.650><c> builder</c><00:37:35.800><c> calls</c><00:37:36.190><c> and</c><00:37:37.120><c> then</c><00:37:37.720><c> the</c><00:37:38.050><c> VM</c><00:37:38.320><c> has</c>

00:37:38.520 --> 00:37:38.530 align:start position:0%
string builder calls and then the VM has
 

00:37:38.530 --> 00:37:41.880 align:start position:0%
string builder calls and then the VM has
to<00:37:38.850><c> notice</c><00:37:39.850><c> this</c><00:37:40.360><c> idioms</c><00:37:40.840><c> used</c><00:37:41.110><c> by</c><00:37:41.440><c> Java</c><00:37:41.680><c> seen</c>

00:37:41.880 --> 00:37:41.890 align:start position:0%
to notice this idioms used by Java seen
 

00:37:41.890 --> 00:37:43.320 align:start position:0%
to notice this idioms used by Java seen
other<00:37:42.040><c> compilers</c><00:37:42.310><c> and</c><00:37:42.550><c> kind</c><00:37:42.880><c> of</c><00:37:43.000><c> try</c><00:37:43.270><c> to</c>

00:37:43.320 --> 00:37:43.330 align:start position:0%
other compilers and kind of try to
 

00:37:43.330 --> 00:37:45.810 align:start position:0%
other compilers and kind of try to
optimize<00:37:43.630><c> that</c><00:37:44.110><c> accordingly</c><00:37:44.740><c> so</c><00:37:45.490><c> since</c><00:37:45.730><c> this</c>

00:37:45.810 --> 00:37:45.820 align:start position:0%
optimize that accordingly so since this
 

00:37:45.820 --> 00:37:49.020 align:start position:0%
optimize that accordingly so since this
is<00:37:46.000><c> such</c><00:37:46.360><c> a</c><00:37:46.390><c> common</c><00:37:46.660><c> operation</c><00:37:47.520><c> instead</c><00:37:48.520><c> a</c><00:37:48.760><c> new</c>

00:37:49.020 --> 00:37:49.030 align:start position:0%
is such a common operation instead a new
 

00:37:49.030 --> 00:37:51.480 align:start position:0%
is such a common operation instead a new
stable<00:37:49.480><c> entry</c><00:37:49.960><c> point</c><00:37:50.560><c> was</c><00:37:50.770><c> created</c><00:37:51.130><c> in</c><00:37:51.250><c> Java</c>

00:37:51.480 --> 00:37:51.490 align:start position:0%
stable entry point was created in Java
 

00:37:51.490 --> 00:37:54.750 align:start position:0%
stable entry point was created in Java
lieing<00:37:51.730><c> invoke</c><00:37:52.030><c> and</c><00:37:52.330><c> the</c><00:37:53.080><c> intended</c><00:37:54.070><c> user</c><00:37:54.430><c> of</c>

00:37:54.750 --> 00:37:54.760 align:start position:0%
lieing invoke and the intended user of
 

00:37:54.760 --> 00:37:57.180 align:start position:0%
lieing invoke and the intended user of
this<00:37:55.000><c> API</c><00:37:55.330><c> is</c><00:37:55.480><c> not</c><00:37:55.740><c> programmers</c><00:37:56.740><c> but</c><00:37:57.070><c> it's</c>

00:37:57.180 --> 00:37:57.190 align:start position:0%
this API is not programmers but it's
 

00:37:57.190 --> 00:38:00.440 align:start position:0%
this API is not programmers but it's
compilers<00:37:57.670><c> like</c><00:37:58.090><c> Java</c><00:37:58.360><c> C</c><00:37:58.600><c> so</c><00:37:59.140><c> there's</c><00:37:59.350><c> a</c><00:37:59.440><c> very</c>

00:38:00.440 --> 00:38:00.450 align:start position:0%
compilers like Java C so there's a very
 

00:38:00.450 --> 00:38:02.700 align:start position:0%
compilers like Java C so there's a very
straightforward<00:38:01.450><c> way</c><00:38:01.810><c> compilers</c><00:38:02.380><c> can</c><00:38:02.440><c> take</c>

00:38:02.700 --> 00:38:02.710 align:start position:0%
straightforward way compilers can take
 

00:38:02.710 --> 00:38:04.770 align:start position:0%
straightforward way compilers can take
advantage<00:38:03.280><c> of</c><00:38:03.370><c> this</c><00:38:03.520><c> to</c><00:38:04.060><c> communicate</c><00:38:04.600><c> with</c>

00:38:04.770 --> 00:38:04.780 align:start position:0%
advantage of this to communicate with
 

00:38:04.780 --> 00:38:06.960 align:start position:0%
advantage of this to communicate with
the<00:38:04.900><c> VM</c><00:38:05.170><c> and</c><00:38:05.200><c> lets</c><00:38:05.680><c> the</c><00:38:05.800><c> VM</c><00:38:06.040><c> have</c><00:38:06.250><c> easily</c><00:38:06.760><c> have</c>

00:38:06.960 --> 00:38:06.970 align:start position:0%
the VM and lets the VM have easily have
 

00:38:06.970 --> 00:38:09.060 align:start position:0%
the VM and lets the VM have easily have
know<00:38:07.900><c> the</c><00:38:08.020><c> semantics</c><00:38:08.440><c> of</c><00:38:08.500><c> the</c><00:38:08.590><c> code</c><00:38:08.800><c> and</c>

00:38:09.060 --> 00:38:09.070 align:start position:0%
know the semantics of the code and
 

00:38:09.070 --> 00:38:11.640 align:start position:0%
know the semantics of the code and
generate<00:38:09.490><c> faster</c><00:38:10.270><c> code</c><00:38:10.420><c> as</c><00:38:10.540><c> a</c><00:38:10.570><c> result</c><00:38:10.900><c> so</c><00:38:11.560><c> this</c>

00:38:11.640 --> 00:38:11.650 align:start position:0%
generate faster code as a result so this
 

00:38:11.650 --> 00:38:13.590 align:start position:0%
generate faster code as a result so this
effectively<00:38:12.040><c> adds</c><00:38:12.340><c> a</c><00:38:12.520><c> new</c><00:38:12.670><c> JVM</c><00:38:13.090><c> capability</c>

00:38:13.590 --> 00:38:13.600 align:start position:0%
effectively adds a new JVM capability
 

00:38:13.600 --> 00:38:16.970 align:start position:0%
effectively adds a new JVM capability
without<00:38:13.870><c> having</c><00:38:14.320><c> to</c><00:38:14.410><c> define</c><00:38:14.710><c> a</c><00:38:14.740><c> new</c><00:38:15.040><c> bike</c><00:38:15.190><c> code</c>

00:38:16.970 --> 00:38:16.980 align:start position:0%
without having to define a new bike code
 

00:38:16.980 --> 00:38:19.140 align:start position:0%
without having to define a new bike code
there<00:38:17.980><c> are</c><00:38:18.040><c> a</c><00:38:18.070><c> number</c><00:38:18.100><c> of</c><00:38:18.490><c> updates</c><00:38:18.880><c> made</c><00:38:19.120><c> to</c>

00:38:19.140 --> 00:38:19.150 align:start position:0%
there are a number of updates made to
 

00:38:19.150 --> 00:38:22.200 align:start position:0%
there are a number of updates made to
the<00:38:19.480><c> security</c><00:38:19.870><c> libraries</c><00:38:20.730><c> the</c><00:38:21.730><c> general</c>

00:38:22.200 --> 00:38:22.210 align:start position:0%
the security libraries the general
 

00:38:22.210 --> 00:38:24.390 align:start position:0%
the security libraries the general
security<00:38:22.390><c> policies</c><00:38:23.110><c> who</c><00:38:23.380><c> want</c><00:38:23.560><c> the</c><00:38:23.680><c> JDK</c><00:38:24.070><c> to</c><00:38:24.130><c> be</c>

00:38:24.390 --> 00:38:24.400 align:start position:0%
security policies who want the JDK to be
 

00:38:24.400 --> 00:38:25.650 align:start position:0%
security policies who want the JDK to be
secure<00:38:24.880><c> out-of-the-box</c>

00:38:25.650 --> 00:38:25.660 align:start position:0%
secure out-of-the-box
 

00:38:25.660 --> 00:38:27.840 align:start position:0%
secure out-of-the-box
I<00:38:25.780><c> mean</c><00:38:26.230><c> who</c><00:38:26.350><c> wanted</c><00:38:26.560><c> to</c><00:38:26.620><c> restrict</c><00:38:27.130><c> broken</c><00:38:27.760><c> or</c>

00:38:27.840 --> 00:38:27.850 align:start position:0%
I mean who wanted to restrict broken or
 

00:38:27.850 --> 00:38:29.370 align:start position:0%
I mean who wanted to restrict broken or
weak<00:38:27.970><c> cryptographic</c><00:38:28.480><c> algorithms</c><00:38:29.200><c> and</c>

00:38:29.370 --> 00:38:29.380 align:start position:0%
weak cryptographic algorithms and
 

00:38:29.380 --> 00:38:32.550 align:start position:0%
weak cryptographic algorithms and
protocols<00:38:29.610><c> now</c><00:38:30.610><c> as</c><00:38:30.820><c> a</c><00:38:31.230><c> cryptographers</c><00:38:32.230><c> become</c>

00:38:32.550 --> 00:38:32.560 align:start position:0%
protocols now as a cryptographers become
 

00:38:32.560 --> 00:38:34.230 align:start position:0%
protocols now as a cryptographers become
more<00:38:32.740><c> clever</c><00:38:32.980><c> and</c><00:38:33.070><c> computers</c><00:38:33.520><c> become</c><00:38:33.790><c> faster</c>

00:38:34.230 --> 00:38:34.240 align:start position:0%
more clever and computers become faster
 

00:38:34.240 --> 00:38:36.360 align:start position:0%
more clever and computers become faster
which<00:38:34.990><c> algorithms</c><00:38:35.590><c> are</c><00:38:35.710><c> weaker</c><00:38:35.980><c> broken</c>

00:38:36.360 --> 00:38:36.370 align:start position:0%
which algorithms are weaker broken
 

00:38:36.370 --> 00:38:39.720 align:start position:0%
which algorithms are weaker broken
varies<00:38:37.060><c> so</c><00:38:37.780><c> Oracle's</c><00:38:38.740><c> published</c><00:38:39.130><c> a</c><00:38:39.310><c> crypto</c>

00:38:39.720 --> 00:38:39.730 align:start position:0%
varies so Oracle's published a crypto
 

00:38:39.730 --> 00:38:42.410 align:start position:0%
varies so Oracle's published a crypto
roadmap<00:38:40.120><c> for</c><00:38:41.110><c> the</c><00:38:41.200><c> JDK</c><00:38:41.560><c> where</c><00:38:41.890><c> we</c><00:38:42.070><c> announce</c>

00:38:42.410 --> 00:38:42.420 align:start position:0%
roadmap for the JDK where we announce
 

00:38:42.420 --> 00:38:45.930 align:start position:0%
roadmap for the JDK where we announce
ahead<00:38:43.420><c> of</c><00:38:43.540><c> time</c><00:38:43.690><c> when</c><00:38:43.960><c> certain</c><00:38:44.940><c> algorithms</c>

00:38:45.930 --> 00:38:45.940 align:start position:0%
ahead of time when certain algorithms
 

00:38:45.940 --> 00:38:48.120 align:start position:0%
ahead of time when certain algorithms
and<00:38:46.210><c> protocols</c><00:38:46.360><c> will</c><00:38:46.930><c> be</c><00:38:47.110><c> deprecated</c><00:38:48.040><c> or</c>

00:38:48.120 --> 00:38:48.130 align:start position:0%
and protocols will be deprecated or
 

00:38:48.130 --> 00:38:50.220 align:start position:0%
and protocols will be deprecated or
removed<00:38:48.520><c> from</c><00:38:48.670><c> the</c><00:38:48.790><c> default</c><00:38:49.060><c> set</c><00:38:49.360><c> because</c><00:38:50.140><c> of</c>

00:38:50.220 --> 00:38:50.230 align:start position:0%
removed from the default set because of
 

00:38:50.230 --> 00:38:52.950 align:start position:0%
removed from the default set because of
those<00:38:50.350><c> reasons</c><00:38:50.560><c> on</c><00:38:51.280><c> that</c><00:38:51.640><c> is</c><00:38:52.150><c> a</c><00:38:52.270><c> document</c><00:38:52.900><c> that</c>

00:38:52.950 --> 00:38:52.960 align:start position:0%
those reasons on that is a document that
 

00:38:52.960 --> 00:38:56.519 align:start position:0%
those reasons on that is a document that
does<00:38:53.110><c> get</c><00:38:53.320><c> updated</c><00:38:53.650><c> as</c><00:38:53.920><c> a</c><00:38:54.120><c> situation</c><00:38:55.120><c> change</c>

00:38:56.519 --> 00:38:56.529 align:start position:0%
does get updated as a situation change
 

00:38:56.529 --> 00:38:58.990 align:start position:0%
does get updated as a situation change
if<00:38:57.529><c> you</c><00:38:57.680><c> highlights</c><00:38:58.069><c> this</c><00:38:58.309><c> to</c><00:38:58.579><c> you</c><00:38:58.670><c> at</c><00:38:58.849><c> the</c>

00:38:58.990 --> 00:38:59.000 align:start position:0%
if you highlights this to you at the
 

00:38:59.000 --> 00:39:02.499 align:start position:0%
if you highlights this to you at the
Security<00:38:59.329><c> api's</c><00:38:59.660><c> in</c><00:38:59.930><c> nine</c><00:39:00.519><c> by</c><00:39:01.519><c> this</c><00:39:01.579><c> secure</c><00:39:02.390><c> by</c>

00:39:02.499 --> 00:39:02.509 align:start position:0%
Security api's in nine by this secure by
 

00:39:02.509 --> 00:39:05.079 align:start position:0%
Security api's in nine by this secure by
default<00:39:02.569><c> policy</c><00:39:03.069><c> the</c><00:39:04.069><c> default</c><00:39:04.430><c> key</c><00:39:04.609><c> thises</c>

00:39:05.079 --> 00:39:05.089 align:start position:0%
default policy the default key thises
 

00:39:05.089 --> 00:39:07.809 align:start position:0%
default policy the default key thises
for<00:39:05.240><c> RSA</c><00:39:05.569><c> were</c><00:39:05.720><c> increased</c><00:39:06.079><c> and</c><00:39:07.039><c> so</c><00:39:07.250><c> forth</c><00:39:07.490><c> also</c>

00:39:07.809 --> 00:39:07.819 align:start position:0%
for RSA were increased and so forth also
 

00:39:07.819 --> 00:39:09.400 align:start position:0%
for RSA were increased and so forth also
certificates<00:39:08.480><c> with</c><00:39:08.690><c> weak</c><00:39:08.869><c> keys</c><00:39:09.109><c> are</c><00:39:09.289><c> no</c>

00:39:09.400 --> 00:39:09.410 align:start position:0%
certificates with weak keys are no
 

00:39:09.410 --> 00:39:11.140 align:start position:0%
certificates with weak keys are no
longer<00:39:09.619><c> accepted</c><00:39:10.039><c> by</c><00:39:10.130><c> default</c><00:39:10.490><c> there</c><00:39:11.059><c> are</c>

00:39:11.140 --> 00:39:11.150 align:start position:0%
longer accepted by default there are
 

00:39:11.150 --> 00:39:12.640 align:start position:0%
longer accepted by default there are
some<00:39:11.269><c> system</c><00:39:11.599><c> settings</c><00:39:11.900><c> you</c><00:39:12.019><c> can</c><00:39:12.170><c> use</c><00:39:12.349><c> to</c>

00:39:12.640 --> 00:39:12.650 align:start position:0%
some system settings you can use to
 

00:39:12.650 --> 00:39:14.589 align:start position:0%
some system settings you can use to
still<00:39:13.190><c> have</c><00:39:13.309><c> those</c><00:39:13.430><c> certificates</c><00:39:14.029><c> accepted</c>

00:39:14.589 --> 00:39:14.599 align:start position:0%
still have those certificates accepted
 

00:39:14.599 --> 00:39:17.049 align:start position:0%
still have those certificates accepted
if<00:39:14.809><c> you</c><00:39:14.960><c> need</c><00:39:15.109><c> them</c><00:39:15.200><c> my</c><00:39:16.160><c> colleague</c><00:39:16.519><c> Sean</c>

00:39:17.049 --> 00:39:17.059 align:start position:0%
if you need them my colleague Sean
 

00:39:17.059 --> 00:39:19.599 align:start position:0%
if you need them my colleague Sean
Mullan<00:39:17.420><c> gave</c><00:39:18.230><c> a</c><00:39:18.319><c> talk</c><00:39:18.529><c> about</c><00:39:18.559><c> making</c><00:39:19.250><c> the</c><00:39:19.309><c> JDK</c>

00:39:19.599 --> 00:39:19.609 align:start position:0%
Mullan gave a talk about making the JDK
 

00:39:19.609 --> 00:39:21.849 align:start position:0%
Mullan gave a talk about making the JDK
more<00:39:19.819><c> secure</c><00:39:20.660><c> that</c><00:39:20.839><c> covers</c><00:39:21.140><c> the</c><00:39:21.289><c> JDK</c><00:39:21.650><c> nine</c>

00:39:21.849 --> 00:39:21.859 align:start position:0%
more secure that covers the JDK nine
 

00:39:21.859 --> 00:39:23.319 align:start position:0%
more secure that covers the JDK nine
security<00:39:22.190><c> lives</c><00:39:22.490><c> features</c><00:39:22.759><c> in</c><00:39:22.880><c> more</c><00:39:23.000><c> detail</c>

00:39:23.319 --> 00:39:23.329 align:start position:0%
security lives features in more detail
 

00:39:23.329 --> 00:39:25.299 align:start position:0%
security lives features in more detail
and<00:39:23.569><c> the</c><00:39:23.900><c> video</c><00:39:24.109><c> for</c><00:39:24.289><c> that</c><00:39:24.319><c> talk</c><00:39:24.680><c> is</c><00:39:24.920><c> already</c>

00:39:25.299 --> 00:39:25.309 align:start position:0%
and the video for that talk is already
 

00:39:25.309 --> 00:39:29.920 align:start position:0%
and the video for that talk is already
up<00:39:25.839><c> from</c><00:39:26.839><c> the</c><00:39:26.930><c> conference</c><00:39:28.750><c> there</c><00:39:29.750><c> are</c><00:39:29.809><c> also</c>

00:39:29.920 --> 00:39:29.930 align:start position:0%
up from the conference there are also
 

00:39:29.930 --> 00:39:32.529 align:start position:0%
up from the conference there are also
updates<00:39:30.440><c> to</c><00:39:30.650><c> the</c><00:39:30.769><c> client</c><00:39:31.369><c> libraries</c><00:39:31.819><c> and</c><00:39:32.059><c> FX</c>

00:39:32.529 --> 00:39:32.539 align:start position:0%
updates to the client libraries and FX
 

00:39:32.539 --> 00:39:34.809 align:start position:0%
updates to the client libraries and FX
in<00:39:32.809><c> the</c><00:39:32.869><c> release</c><00:39:33.200><c> like</c><00:39:34.039><c> other</c><00:39:34.220><c> parts</c><00:39:34.579><c> of</c><00:39:34.730><c> the</c>

00:39:34.809 --> 00:39:34.819 align:start position:0%
in the release like other parts of the
 

00:39:34.819 --> 00:39:38.109 align:start position:0%
in the release like other parts of the
JDK<00:39:35.210><c> the</c><00:39:35.240><c> FX</c><00:39:35.869><c> code</c><00:39:36.109><c> base</c><00:39:36.289><c> most</c><00:39:36.980><c> was</c><00:39:37.460><c> modulized</c>

00:39:38.109 --> 00:39:38.119 align:start position:0%
JDK the FX code base most was modulized
 

00:39:38.119 --> 00:39:43.749 align:start position:0%
JDK the FX code base most was modulized
they<00:39:38.930><c> were</c><00:39:39.039><c> updates</c><00:39:40.039><c> to</c><00:39:42.309><c> graphic</c><00:39:43.309><c> support</c><00:39:43.640><c> in</c>

00:39:43.749 --> 00:39:43.759 align:start position:0%
they were updates to graphic support in
 

00:39:43.759 --> 00:39:46.779 align:start position:0%
they were updates to graphic support in
various<00:39:43.789><c> in</c><00:39:44.299><c> various</c><00:39:44.750><c> ways</c><00:39:44.930><c> a</c><00:39:45.200><c> few</c><00:39:46.130><c> notable</c>

00:39:46.779 --> 00:39:46.789 align:start position:0%
various in various ways a few notable
 

00:39:46.789 --> 00:39:50.499 align:start position:0%
various in various ways a few notable
projects<00:39:48.220><c> the</c><00:39:49.220><c> marlin</c><00:39:49.849><c> graphics</c><00:39:50.240><c> render</c>

00:39:50.499 --> 00:39:50.509 align:start position:0%
projects the marlin graphics render
 

00:39:50.509 --> 00:39:53.529 align:start position:0%
projects the marlin graphics render
replaced<00:39:51.049><c> the</c><00:39:51.920><c> previous</c><00:39:52.309><c> Pisces</c><00:39:53.059><c> and</c><00:39:53.210><c> ductus</c>

00:39:53.529 --> 00:39:53.539 align:start position:0%
replaced the previous Pisces and ductus
 

00:39:53.539 --> 00:39:56.230 align:start position:0%
replaced the previous Pisces and ductus
renderers<00:39:53.960><c> this</c><00:39:54.799><c> removed</c><00:39:55.400><c> one</c><00:39:55.849><c> of</c><00:39:55.940><c> the</c><00:39:56.029><c> major</c>

00:39:56.230 --> 00:39:56.240 align:start position:0%
renderers this removed one of the major
 

00:39:56.240 --> 00:39:57.999 align:start position:0%
renderers this removed one of the major
remaining<00:39:56.869><c> behavioral</c><00:39:57.319><c> differences</c><00:39:57.710><c> between</c>

00:39:57.999 --> 00:39:58.009 align:start position:0%
remaining behavioral differences between
 

00:39:58.009 --> 00:40:01.900 align:start position:0%
remaining behavioral differences between
Oracle<00:39:58.849><c> JDK</c><00:39:59.059><c> and</c><00:39:59.390><c> open</c><00:39:59.599><c> JDK</c><00:39:59.799><c> so</c><00:40:00.799><c> now</c><00:40:00.950><c> there</c><00:40:01.190><c> you</c>

00:40:01.900 --> 00:40:01.910 align:start position:0%
Oracle JDK and open JDK so now there you
 

00:40:01.910 --> 00:40:04.259 align:start position:0%
Oracle JDK and open JDK so now there you
know<00:40:02.000><c> the</c><00:40:02.690><c> JK's</c><00:40:03.019><c> are</c><00:40:03.170><c> using</c><00:40:03.440><c> the</c><00:40:03.529><c> same</c>

00:40:04.259 --> 00:40:04.269 align:start position:0%
know the JK's are using the same
 

00:40:04.269 --> 00:40:05.890 align:start position:0%
know the JK's are using the same
implementation<00:40:05.269><c> code</c><00:40:05.480><c> in</c><00:40:05.720><c> both</c>

00:40:05.890 --> 00:40:05.900 align:start position:0%
implementation code in both
 

00:40:05.900 --> 00:40:09.009 align:start position:0%
implementation code in both
circumstances<00:40:06.109><c> and</c><00:40:07.269><c> for</c><00:40:08.269><c> the</c><00:40:08.359><c> photographer's</c>

00:40:09.009 --> 00:40:09.019 align:start position:0%
circumstances and for the photographer's
 

00:40:09.019 --> 00:40:11.650 align:start position:0%
circumstances and for the photographer's
who<00:40:09.950><c> also</c><00:40:10.130><c> used</c><00:40:10.460><c> Java</c><00:40:10.730><c> there's</c><00:40:11.059><c> now</c><00:40:11.210><c> support</c>

00:40:11.650 --> 00:40:11.660 align:start position:0%
who also used Java there's now support
 

00:40:11.660 --> 00:40:14.019 align:start position:0%
who also used Java there's now support
for<00:40:11.839><c> TIFF</c><00:40:12.140><c> images</c><00:40:12.710><c> including</c><00:40:13.549><c> the</c><00:40:13.640><c> exif</c>

00:40:14.019 --> 00:40:14.029 align:start position:0%
for TIFF images including the exif
 

00:40:14.029 --> 00:40:18.579 align:start position:0%
for TIFF images including the exif
metadata<00:40:16.269><c> there</c><00:40:17.269><c> are</c><00:40:17.329><c> a</c><00:40:17.359><c> number</c><00:40:17.480><c> of</c><00:40:17.630><c> talks</c>

00:40:18.579 --> 00:40:18.589 align:start position:0%
metadata there are a number of talks
 

00:40:18.589 --> 00:40:20.440 align:start position:0%
metadata there are a number of talks
about<00:40:18.799><c> the</c><00:40:19.190><c> client</c><00:40:19.490><c> libraries</c><00:40:19.849><c> at</c><00:40:20.119><c> JavaOne</c>

00:40:20.440 --> 00:40:20.450 align:start position:0%
about the client libraries at JavaOne
 

00:40:20.450 --> 00:40:25.569 align:start position:0%
about the client libraries at JavaOne
and<00:40:20.839><c> you</c><00:40:20.960><c> can</c><00:40:21.170><c> see</c><00:40:22.099><c> them</c><00:40:22.250><c> listed</c><00:40:22.400><c> here</c><00:40:24.400><c> few</c><00:40:25.400><c> of</c>

00:40:25.569 --> 00:40:25.579 align:start position:0%
and you can see them listed here few of
 

00:40:25.579 --> 00:40:27.749 align:start position:0%
and you can see them listed here few of
miscellaneous<00:40:26.089><c> library</c><00:40:26.779><c> treats</c><00:40:27.109><c> as</c><00:40:27.319><c> well</c>

00:40:27.749 --> 00:40:27.759 align:start position:0%
miscellaneous library treats as well
 

00:40:27.759 --> 00:40:30.249 align:start position:0%
miscellaneous library treats as well
first<00:40:28.759><c> of</c><00:40:28.880><c> these</c><00:40:28.940><c> is</c><00:40:29.000><c> convenience</c><00:40:29.599><c> factory</c>

00:40:30.249 --> 00:40:30.259 align:start position:0%
first of these is convenience factory
 

00:40:30.259 --> 00:40:31.930 align:start position:0%
first of these is convenience factory
methods<00:40:30.589><c> so</c><00:40:31.220><c> how</c><00:40:31.309><c> many</c><00:40:31.460><c> times</c><00:40:31.700><c> have</c><00:40:31.910><c> you</c>

00:40:31.930 --> 00:40:31.940 align:start position:0%
methods so how many times have you
 

00:40:31.940 --> 00:40:33.999 align:start position:0%
methods so how many times have you
written<00:40:32.299><c> code</c><00:40:32.569><c> like</c><00:40:32.750><c> this</c><00:40:32.930><c> right</c><00:40:33.349><c> at</c><00:40:33.710><c> the</c><00:40:33.859><c> end</c>

00:40:33.999 --> 00:40:34.009 align:start position:0%
written code like this right at the end
 

00:40:34.009 --> 00:40:36.549 align:start position:0%
written code like this right at the end
you<00:40:34.160><c> want</c><00:40:34.279><c> to</c><00:40:34.400><c> have</c><00:40:34.579><c> an</c><00:40:34.849><c> unmodifiable</c><00:40:35.539><c> set</c><00:40:36.470><c> of</c>

00:40:36.549 --> 00:40:36.559 align:start position:0%
you want to have an unmodifiable set of
 

00:40:36.559 --> 00:40:38.559 align:start position:0%
you want to have an unmodifiable set of
strings<00:40:36.799><c> so</c><00:40:37.549><c> what</c><00:40:37.910><c> you</c><00:40:38.000><c> have</c><00:40:38.119><c> to</c><00:40:38.210><c> do</c><00:40:38.329><c> today</c><00:40:38.450><c> you</c>

00:40:38.559 --> 00:40:38.569 align:start position:0%
strings so what you have to do today you
 

00:40:38.569 --> 00:40:40.930 align:start position:0%
strings so what you have to do today you
you<00:40:39.349><c> know</c><00:40:39.440><c> have</c><00:40:39.619><c> your</c><00:40:39.769><c> half</c><00:40:39.950><c> set</c><00:40:40.250><c> you</c><00:40:40.519><c> call</c><00:40:40.700><c> add</c>

00:40:40.930 --> 00:40:40.940 align:start position:0%
you know have your half set you call add
 

00:40:40.940 --> 00:40:44.019 align:start position:0%
you know have your half set you call add
add<00:40:41.240><c> add</c><00:40:41.269><c> and</c><00:40:41.900><c> then</c><00:40:42.890><c> you</c><00:40:43.220><c> have</c><00:40:43.400><c> the</c><00:40:43.579><c> collection</c>

00:40:44.019 --> 00:40:44.029 align:start position:0%
add add and then you have the collection
 

00:40:44.029 --> 00:40:46.329 align:start position:0%
add add and then you have the collection
set<00:40:44.210><c> unmodifiable</c><00:40:44.779><c> wrapper</c><00:40:45.259><c> that's</c><00:40:46.069><c> a</c><00:40:46.190><c> bit</c>

00:40:46.329 --> 00:40:46.339 align:start position:0%
set unmodifiable wrapper that's a bit
 

00:40:46.339 --> 00:40:48.339 align:start position:0%
set unmodifiable wrapper that's a bit
verbose<00:40:47.000><c> for</c><00:40:47.269><c> a</c><00:40:47.299><c> simple</c><00:40:47.539><c> operation</c><00:40:47.869><c> so</c><00:40:48.230><c> there</c>

00:40:48.339 --> 00:40:48.349 align:start position:0%
verbose for a simple operation so there
 

00:40:48.349 --> 00:40:50.410 align:start position:0%
verbose for a simple operation so there
are<00:40:48.410><c> other</c><00:40:48.500><c> things</c><00:40:48.740><c> you</c><00:40:48.920><c> can</c><00:40:49.069><c> do</c><00:40:49.190><c> you</c><00:40:50.119><c> can</c><00:40:50.269><c> use</c>

00:40:50.410 --> 00:40:50.420 align:start position:0%
are other things you can do you can use
 

00:40:50.420 --> 00:40:52.089 align:start position:0%
are other things you can do you can use
code<00:40:50.690><c> like</c><00:40:50.869><c> this</c><00:40:51.019><c> instead</c><00:40:51.470><c> where</c><00:40:51.799><c> you</c>

00:40:52.089 --> 00:40:52.099 align:start position:0%
code like this instead where you
 

00:40:52.099 --> 00:40:54.069 align:start position:0%
code like this instead where you
initialize<00:40:52.700><c> the</c><00:40:52.910><c> hash</c><00:40:53.089><c> set</c><00:40:53.390><c> using</c><00:40:53.720><c> arrays</c><00:40:53.930><c> dot</c>

00:40:54.069 --> 00:40:54.079 align:start position:0%
initialize the hash set using arrays dot
 

00:40:54.079 --> 00:40:57.279 align:start position:0%
initialize the hash set using arrays dot
as<00:40:54.289><c> list</c><00:40:54.619><c> and</c><00:40:54.890><c> then</c><00:40:55.400><c> you</c><00:40:55.549><c> wrap</c><00:40:55.730><c> that</c><00:40:56.289><c> that's</c>

00:40:57.279 --> 00:40:57.289 align:start position:0%
as list and then you wrap that that's
 

00:40:57.289 --> 00:40:59.680 align:start position:0%
as list and then you wrap that that's
still<00:40:57.500><c> a</c><00:40:57.589><c> bit</c><00:40:57.740><c> long</c><00:40:57.970><c> there's</c><00:40:58.970><c> also</c><00:40:59.150><c> the</c><00:40:59.420><c> double</c>

00:40:59.680 --> 00:40:59.690 align:start position:0%
still a bit long there's also the double
 

00:40:59.690 --> 00:41:02.049 align:start position:0%
still a bit long there's also the double
brace<00:40:59.869><c> it</c><00:41:00.049><c> IAM</c><00:41:00.230><c> which</c><00:41:00.500><c> we</c><00:41:00.680><c> won't</c><00:41:01.069><c> even</c><00:41:01.279><c> show</c>

00:41:02.049 --> 00:41:02.059 align:start position:0%
brace it IAM which we won't even show
 

00:41:02.059 --> 00:41:05.349 align:start position:0%
brace it IAM which we won't even show
that<00:41:02.569><c> some</c><00:41:03.410><c> people</c><00:41:03.650><c> use</c><00:41:04.029><c> so</c><00:41:05.029><c> but</c><00:41:05.240><c> you</c><00:41:05.299><c> don't</c>

00:41:05.349 --> 00:41:05.359 align:start position:0%
that some people use so but you don't
 

00:41:05.359 --> 00:41:08.109 align:start position:0%
that some people use so but you don't
have<00:41:05.539><c> to</c><00:41:05.630><c> do</c><00:41:05.720><c> this</c><00:41:06.529><c> anymore</c><00:41:06.890><c> in</c><00:41:07.130><c> jdk</c><00:41:07.430><c> 9</c><00:41:07.609><c> now</c><00:41:08.000><c> you</c>

00:41:08.109 --> 00:41:08.119 align:start position:0%
have to do this anymore in jdk 9 now you
 

00:41:08.119 --> 00:41:09.460 align:start position:0%
have to do this anymore in jdk 9 now you
can<00:41:08.329><c> just</c><00:41:08.509><c> write</c><00:41:08.690><c> this</c>

00:41:09.460 --> 00:41:09.470 align:start position:0%
can just write this
 

00:41:09.470 --> 00:41:13.210 align:start position:0%
can just write this
set<00:41:09.829><c> that</c><00:41:09.950><c> off</c><00:41:10.810><c> and</c><00:41:11.810><c> then</c><00:41:12.050><c> what</c><00:41:12.829><c> you</c><00:41:12.950><c> want</c><00:41:13.160><c> to</c>

00:41:13.210 --> 00:41:13.220 align:start position:0%
set that off and then what you want to
 

00:41:13.220 --> 00:41:16.030 align:start position:0%
set that off and then what you want to
initialize<00:41:13.849><c> the</c><00:41:13.880><c> set</c><00:41:14.240><c> to</c><00:41:14.500><c> and</c><00:41:15.500><c> what</c><00:41:15.770><c> you</c><00:41:15.890><c> get</c>

00:41:16.030 --> 00:41:16.040 align:start position:0%
initialize the set to and what you get
 

00:41:16.040 --> 00:41:20.319 align:start position:0%
initialize the set to and what you get
out<00:41:16.190><c> of</c><00:41:16.339><c> this</c><00:41:16.930><c> is</c><00:41:17.930><c> a</c><00:41:18.380><c> unmodifiable</c><00:41:19.240><c> set</c><00:41:20.240><c> of</c>

00:41:20.319 --> 00:41:20.329 align:start position:0%
out of this is a unmodifiable set of
 

00:41:20.329 --> 00:41:24.190 align:start position:0%
out of this is a unmodifiable set of
strings<00:41:20.530><c> so</c><00:41:21.530><c> this</c><00:41:22.599><c> idiom</c><00:41:23.599><c> is</c><00:41:23.690><c> supported</c><00:41:24.109><c> on</c>

00:41:24.190 --> 00:41:24.200 align:start position:0%
strings so this idiom is supported on
 

00:41:24.200 --> 00:41:26.680 align:start position:0%
strings so this idiom is supported on
sets<00:41:24.530><c> list</c><00:41:24.829><c> in</c><00:41:25.040><c> maps</c><00:41:25.339><c> and</c><00:41:25.640><c> it</c><00:41:26.150><c> approximates</c>

00:41:26.680 --> 00:41:26.690 align:start position:0%
sets list in maps and it approximates
 

00:41:26.690 --> 00:41:28.270 align:start position:0%
sets list in maps and it approximates
the<00:41:26.869><c> functionality</c><00:41:27.530><c> of</c><00:41:27.560><c> collection</c><00:41:28.010><c> a</c><00:41:28.040><c> little</c>

00:41:28.270 --> 00:41:28.280 align:start position:0%
the functionality of collection a little
 

00:41:28.280 --> 00:41:30.190 align:start position:0%
the functionality of collection a little
collection<00:41:28.760><c> little</c><00:41:29.030><c> rules</c><00:41:29.150><c> collection</c><00:41:30.109><c> the</c>

00:41:30.190 --> 00:41:30.200 align:start position:0%
collection little rules collection the
 

00:41:30.200 --> 00:41:31.870 align:start position:0%
collection little rules collection the
rules<00:41:30.470><c> were</c><00:41:30.619><c> one</c><00:41:30.829><c> of</c><00:41:30.859><c> the</c><00:41:31.010><c> features</c><00:41:31.339><c> we</c><00:41:31.700><c> looked</c>

00:41:31.870 --> 00:41:31.880 align:start position:0%
rules were one of the features we looked
 

00:41:31.880 --> 00:41:33.880 align:start position:0%
rules were one of the features we looked
at<00:41:32.030><c> for</c><00:41:32.329><c> project</c><00:41:32.869><c> coin</c><00:41:33.020><c> and</c><00:41:33.140><c> JDK</c><00:41:33.319><c> 7</c><00:41:33.740><c> but</c><00:41:33.829><c> we</c>

00:41:33.880 --> 00:41:33.890 align:start position:0%
at for project coin and JDK 7 but we
 

00:41:33.890 --> 00:41:39.370 align:start position:0%
at for project coin and JDK 7 but we
didn't<00:41:34.069><c> have</c><00:41:34.160><c> time</c><00:41:34.339><c> to</c><00:41:34.400><c> do</c><00:41:34.609><c> this</c><00:41:35.450><c> is</c><00:41:35.780><c> a</c><00:41:38.380><c> good</c>

00:41:39.370 --> 00:41:39.380 align:start position:0%
didn't have time to do this is a good
 

00:41:39.380 --> 00:41:40.900 align:start position:0%
didn't have time to do this is a good
way<00:41:39.500><c> to</c><00:41:39.530><c> get</c><00:41:39.740><c> most</c><00:41:39.950><c> of</c><00:41:40.099><c> that</c><00:41:40.160><c> functionality</c><00:41:40.819><c> at</c>

00:41:40.900 --> 00:41:40.910 align:start position:0%
way to get most of that functionality at
 

00:41:40.910 --> 00:41:42.520 align:start position:0%
way to get most of that functionality at
a<00:41:40.970><c> small</c><00:41:41.240><c> fraction</c><00:41:41.720><c> of</c><00:41:41.780><c> the</c><00:41:41.930><c> complexity</c><00:41:42.470><c> to</c>

00:41:42.520 --> 00:41:42.530 align:start position:0%
a small fraction of the complexity to
 

00:41:42.530 --> 00:41:45.849 align:start position:0%
a small fraction of the complexity to
the<00:41:42.619><c> platform</c><00:41:43.930><c> now</c><00:41:44.930><c> we</c><00:41:44.990><c> mentioned</c><00:41:45.290><c> that</c><00:41:45.589><c> the</c>

00:41:45.849 --> 00:41:45.859 align:start position:0%
the platform now we mentioned that the
 

00:41:45.859 --> 00:41:47.620 align:start position:0%
the platform now we mentioned that the
hash<00:41:46.069><c> that</c><00:41:46.099><c> thought</c><00:41:46.400><c> iteration</c><00:41:46.849><c> order</c><00:41:47.359><c> and</c>

00:41:47.620 --> 00:41:47.630 align:start position:0%
hash that thought iteration order and
 

00:41:47.630 --> 00:41:50.200 align:start position:0%
hash that thought iteration order and
people<00:41:47.930><c> relying</c><00:41:48.319><c> on</c><00:41:48.410><c> that</c><00:41:48.560><c> unknowingly</c><00:41:49.210><c> these</c>

00:41:50.200 --> 00:41:50.210 align:start position:0%
people relying on that unknowingly these
 

00:41:50.210 --> 00:41:52.780 align:start position:0%
people relying on that unknowingly these
new<00:41:50.839><c> collections</c><00:41:51.349><c> will</c><00:41:51.890><c> discourage</c><00:41:52.250><c> that</c><00:41:52.550><c> by</c>

00:41:52.780 --> 00:41:52.790 align:start position:0%
new collections will discourage that by
 

00:41:52.790 --> 00:41:55.569 align:start position:0%
new collections will discourage that by
having<00:41:53.060><c> a</c><00:41:53.240><c> random</c><00:41:53.740><c> iteration</c><00:41:54.740><c> order</c><00:41:54.950><c> sets</c><00:41:55.430><c> and</c>

00:41:55.569 --> 00:41:55.579 align:start position:0%
having a random iteration order sets and
 

00:41:55.579 --> 00:41:58.210 align:start position:0%
having a random iteration order sets and
sets<00:41:56.329><c> of</c><00:41:56.420><c> maps</c><00:41:56.599><c> not</c><00:41:56.990><c> for</c><00:41:57.170><c> the</c><00:41:57.230><c> list</c><00:41:57.410><c> so</c><00:41:58.010><c> every</c>

00:41:58.210 --> 00:41:58.220 align:start position:0%
sets of maps not for the list so every
 

00:41:58.220 --> 00:41:59.319 align:start position:0%
sets of maps not for the list so every
time<00:41:58.339><c> you</c><00:41:58.520><c> create</c><00:41:58.760><c> these</c><00:41:58.940><c> you'll</c><00:41:59.180><c> get</c><00:41:59.300><c> a</c>

00:41:59.319 --> 00:41:59.329 align:start position:0%
time you create these you'll get a
 

00:41:59.329 --> 00:42:00.520 align:start position:0%
time you create these you'll get a
different<00:41:59.510><c> iteration</c><00:41:59.750><c> order</c><00:42:00.200><c> which</c><00:42:00.380><c> will</c>

00:42:00.520 --> 00:42:00.530 align:start position:0%
different iteration order which will
 

00:42:00.530 --> 00:42:01.900 align:start position:0%
different iteration order which will
make<00:42:00.650><c> it</c><00:42:00.770><c> more</c><00:42:00.890><c> difficult</c><00:42:01.040><c> to</c><00:42:01.339><c> rely</c><00:42:01.640><c> on</c><00:42:01.670><c> the</c>

00:42:01.900 --> 00:42:01.910 align:start position:0%
make it more difficult to rely on the
 

00:42:01.910 --> 00:42:03.849 align:start position:0%
make it more difficult to rely on the
iteration<00:42:02.270><c> order</c><00:42:02.480><c> when</c><00:42:03.410><c> you're</c><00:42:03.589><c> when</c><00:42:03.829><c> you're</c>

00:42:03.849 --> 00:42:03.859 align:start position:0%
iteration order when you're when you're
 

00:42:03.859 --> 00:42:06.520 align:start position:0%
iteration order when you're when you're
using<00:42:04.099><c> them</c><00:42:04.420><c> and</c><00:42:05.420><c> for</c><00:42:05.900><c> more</c><00:42:05.990><c> information</c><00:42:06.170><c> my</c>

00:42:06.520 --> 00:42:06.530 align:start position:0%
using them and for more information my
 

00:42:06.530 --> 00:42:08.559 align:start position:0%
using them and for more information my
colleague<00:42:06.859><c> stuart</c><00:42:07.160><c> marx</c><00:42:07.700><c> gave</c><00:42:08.270><c> a</c><00:42:08.359><c> talk</c><00:42:08.540><c> about</c>

00:42:08.559 --> 00:42:08.569 align:start position:0%
colleague stuart marx gave a talk about
 

00:42:08.569 --> 00:42:13.030 align:start position:0%
colleague stuart marx gave a talk about
this<00:42:08.839><c> feature</c><00:42:09.230><c> earlier</c><00:42:10.010><c> this</c><00:42:10.160><c> morning</c><00:42:11.890><c> if</c><00:42:12.890><c> you</c>

00:42:13.030 --> 00:42:13.040 align:start position:0%
this feature earlier this morning if you
 

00:42:13.040 --> 00:42:15.430 align:start position:0%
this feature earlier this morning if you
use<00:42:13.190><c> Java</c><00:42:13.700><c> util</c><00:42:13.940><c> objects</c><00:42:14.450><c> for</c><00:42:14.690><c> common</c>

00:42:15.430 --> 00:42:15.440 align:start position:0%
use Java util objects for common
 

00:42:15.440 --> 00:42:17.710 align:start position:0%
use Java util objects for common
functionality<00:42:15.800><c> we</c><00:42:16.460><c> did</c><00:42:16.640><c> add</c><00:42:16.819><c> some</c><00:42:16.849><c> methods</c>

00:42:17.710 --> 00:42:17.720 align:start position:0%
functionality we did add some methods
 

00:42:17.720 --> 00:42:19.210 align:start position:0%
functionality we did add some methods
there<00:42:17.900><c> as</c><00:42:18.050><c> well</c><00:42:18.230><c> some</c><00:42:18.650><c> additional</c><00:42:19.010><c> null</c>

00:42:19.210 --> 00:42:19.220 align:start position:0%
there as well some additional null
 

00:42:19.220 --> 00:42:22.329 align:start position:0%
there as well some additional null
checking<00:42:19.640><c> in</c><00:42:20.079><c> index</c><00:42:21.079><c> checking</c><00:42:21.440><c> methods</c><00:42:21.770><c> some</c>

00:42:22.329 --> 00:42:22.339 align:start position:0%
checking in index checking methods some
 

00:42:22.339 --> 00:42:24.280 align:start position:0%
checking in index checking methods some
of<00:42:22.430><c> these</c><00:42:22.520><c> have</c><00:42:22.760><c> intrinsic</c><00:42:23.089><c> support</c><00:42:23.540><c> from</c><00:42:24.140><c> the</c>

00:42:24.280 --> 00:42:24.290 align:start position:0%
of these have intrinsic support from the
 

00:42:24.290 --> 00:42:27.819 align:start position:0%
of these have intrinsic support from the
VM<00:42:25.359><c> few</c><00:42:26.359><c> odds</c><00:42:26.540><c> and</c><00:42:26.660><c> ends</c><00:42:26.839><c> I</c><00:42:27.050><c> am</c><00:42:27.290><c> interested</c><00:42:27.710><c> in</c>

00:42:27.819 --> 00:42:27.829 align:start position:0%
VM few odds and ends I am interested in
 

00:42:27.829 --> 00:42:30.309 align:start position:0%
VM few odds and ends I am interested in
math<00:42:28.010><c> so</c><00:42:28.339><c> we've</c><00:42:28.550><c> had</c><00:42:28.790><c> the</c><00:42:29.300><c> fuse</c><00:42:29.630><c> multiply</c><00:42:30.109><c> add</c>

00:42:30.309 --> 00:42:30.319 align:start position:0%
math so we've had the fuse multiply add
 

00:42:30.319 --> 00:42:32.410 align:start position:0%
math so we've had the fuse multiply add
method<00:42:30.920><c> add</c><00:42:31.040><c> it's</c><00:42:31.190><c> at</c><00:42:31.250><c> the</c><00:42:31.339><c> platform</c><00:42:31.790><c> this</c><00:42:32.359><c> is</c>

00:42:32.410 --> 00:42:32.420 align:start position:0%
method add it's at the platform this is
 

00:42:32.420 --> 00:42:34.329 align:start position:0%
method add it's at the platform this is
a<00:42:32.569><c> hardware</c><00:42:32.869><c> instruction</c><00:42:33.500><c> that's</c><00:42:33.680><c> becoming</c>

00:42:34.329 --> 00:42:34.339 align:start position:0%
a hardware instruction that's becoming
 

00:42:34.339 --> 00:42:36.579 align:start position:0%
a hardware instruction that's becoming
more<00:42:34.790><c> and</c><00:42:34.880><c> more</c><00:42:34.910><c> common</c><00:42:35.359><c> it</c><00:42:35.810><c> allows</c><00:42:36.109><c> you</c><00:42:36.319><c> to</c><00:42:36.470><c> do</c>

00:42:36.579 --> 00:42:36.589 align:start position:0%
more and more common it allows you to do
 

00:42:36.589 --> 00:42:38.349 align:start position:0%
more and more common it allows you to do
two<00:42:36.890><c> floating</c><00:42:37.280><c> point</c><00:42:37.460><c> operations</c><00:42:37.940><c> with</c><00:42:38.180><c> only</c>

00:42:38.349 --> 00:42:38.359 align:start position:0%
two floating point operations with only
 

00:42:38.359 --> 00:42:41.020 align:start position:0%
two floating point operations with only
one<00:42:38.839><c> rounding</c><00:42:39.530><c> error</c><00:42:39.740><c> and</c><00:42:40.579><c> it's</c><00:42:40.790><c> good</c><00:42:41.000><c> for</c>

00:42:41.020 --> 00:42:41.030 align:start position:0%
one rounding error and it's good for
 

00:42:41.030 --> 00:42:43.300 align:start position:0%
one rounding error and it's good for
some<00:42:41.329><c> numerical</c><00:42:41.869><c> tricks</c><00:42:42.109><c> and</c><00:42:42.319><c> this</c><00:42:42.829><c> again</c><00:42:43.099><c> has</c>

00:42:43.300 --> 00:42:43.310 align:start position:0%
some numerical tricks and this again has
 

00:42:43.310 --> 00:42:45.490 align:start position:0%
some numerical tricks and this again has
hardware<00:42:43.849><c> support</c><00:42:44.329><c> on</c><00:42:44.540><c> many</c><00:42:44.869><c> platforms</c><00:42:45.109><c> that</c>

00:42:45.490 --> 00:42:45.500 align:start position:0%
hardware support on many platforms that
 

00:42:45.500 --> 00:42:48.880 align:start position:0%
hardware support on many platforms that
we<00:42:45.560><c> have</c><00:42:45.680><c> intrinsic</c><00:42:46.010><c> for</c><00:42:46.760><c> those</c><00:42:47.680><c> also</c><00:42:48.680><c> there</c>

00:42:48.880 --> 00:42:48.890 align:start position:0%
we have intrinsic for those also there
 

00:42:48.890 --> 00:42:50.920 align:start position:0%
we have intrinsic for those also there
are<00:42:48.950><c> some</c><00:42:49.069><c> array</c><00:42:49.339><c> comparisons</c><00:42:50.030><c> for</c><00:42:50.630><c> likes</c>

00:42:50.920 --> 00:42:50.930 align:start position:0%
are some array comparisons for likes
 

00:42:50.930 --> 00:42:52.630 align:start position:0%
are some array comparisons for likes
graphic<00:42:51.410><c> array</c><00:42:51.619><c> those</c><00:42:51.890><c> have</c><00:42:52.250><c> also</c><00:42:52.400><c> been</c>

00:42:52.630 --> 00:42:52.640 align:start position:0%
graphic array those have also been
 

00:42:52.640 --> 00:42:55.630 align:start position:0%
graphic array those have also been
intrinsic<00:42:53.000><c> ID</c><00:42:53.200><c> and</c><00:42:54.200><c> if</c><00:42:54.890><c> you're</c><00:42:55.099><c> interested</c><00:42:55.550><c> in</c>

00:42:55.630 --> 00:42:55.640 align:start position:0%
intrinsic ID and if you're interested in
 

00:42:55.640 --> 00:42:57.670 align:start position:0%
intrinsic ID and if you're interested in
things<00:42:55.910><c> like</c><00:42:56.000><c> var</c><00:42:56.630><c> handles</c><00:42:57.079><c> which</c><00:42:57.440><c> is</c><00:42:57.650><c> a</c>

00:42:57.670 --> 00:42:57.680 align:start position:0%
things like var handles which is a
 

00:42:57.680 --> 00:42:59.290 align:start position:0%
things like var handles which is a
common<00:42:58.460><c> for</c><00:42:58.579><c> a</c><00:42:58.609><c> concurrent</c><00:42:58.970><c> programming</c>

00:42:59.290 --> 00:42:59.300 align:start position:0%
common for a concurrent programming
 

00:42:59.300 --> 00:43:02.140 align:start position:0%
common for a concurrent programming
using<00:42:59.690><c> things</c><00:42:59.869><c> like</c><00:42:59.990><c> C++</c><00:43:00.650><c> Atomics</c><00:43:01.099><c> those</c><00:43:02.030><c> have</c>

00:43:02.140 --> 00:43:02.150 align:start position:0%
using things like C++ Atomics those have
 

00:43:02.150 --> 00:43:03.550 align:start position:0%
using things like C++ Atomics those have
been<00:43:02.210><c> added</c><00:43:02.480><c> to</c><00:43:02.510><c> the</c><00:43:02.630><c> platform</c><00:43:03.020><c> as</c><00:43:03.109><c> well</c><00:43:03.230><c> and</c>

00:43:03.550 --> 00:43:03.560 align:start position:0%
been added to the platform as well and
 

00:43:03.560 --> 00:43:05.800 align:start position:0%
been added to the platform as well and
my<00:43:04.040><c> colleague</c><00:43:04.460><c> Paul</c><00:43:04.819><c> Santos</c><00:43:05.329><c> gave</c><00:43:05.599><c> a</c><00:43:05.660><c> talk</c>

00:43:05.800 --> 00:43:05.810 align:start position:0%
my colleague Paul Santos gave a talk
 

00:43:05.810 --> 00:43:08.740 align:start position:0%
my colleague Paul Santos gave a talk
about<00:43:06.020><c> those</c><00:43:06.200><c> at</c><00:43:07.130><c> a</c><00:43:07.250><c> conference</c><00:43:07.430><c> the</c><00:43:08.240><c> JVM</c><00:43:08.569><c> LS</c>

00:43:08.740 --> 00:43:08.750 align:start position:0%
about those at a conference the JVM LS
 

00:43:08.750 --> 00:43:12.190 align:start position:0%
about those at a conference the JVM LS
conference<00:43:09.170><c> in</c><00:43:09.290><c> 2015</c><00:43:10.930><c> there's</c><00:43:11.930><c> some</c><00:43:12.079><c> other</c>

00:43:12.190 --> 00:43:12.200 align:start position:0%
conference in 2015 there's some other
 

00:43:12.200 --> 00:43:14.500 align:start position:0%
conference in 2015 there's some other
survey<00:43:12.530><c> talks</c><00:43:12.770><c> about</c><00:43:13.069><c> JDK</c><00:43:14.030><c> 9</c><00:43:14.240><c> at</c><00:43:14.420><c> the</c>

00:43:14.500 --> 00:43:14.510 align:start position:0%
survey talks about JDK 9 at the
 

00:43:14.510 --> 00:43:16.030 align:start position:0%
survey talks about JDK 9 at the
conference<00:43:14.930><c> if</c><00:43:15.349><c> you</c><00:43:15.500><c> want</c><00:43:15.680><c> to</c><00:43:15.740><c> hear</c><00:43:15.829><c> other</c>

00:43:16.030 --> 00:43:16.040 align:start position:0%
conference if you want to hear other
 

00:43:16.040 --> 00:43:17.800 align:start position:0%
conference if you want to hear other
people's<00:43:16.369><c> takes</c><00:43:16.579><c> about</c><00:43:16.910><c> what's</c><00:43:17.150><c> what's</c><00:43:17.630><c> good</c>

00:43:17.800 --> 00:43:17.810 align:start position:0%
people's takes about what's what's good
 

00:43:17.810 --> 00:43:20.440 align:start position:0%
people's takes about what's what's good
there<00:43:17.990><c> the</c><00:43:18.800><c> first</c><00:43:19.040><c> of</c><00:43:19.220><c> these</c><00:43:19.310><c> JDK</c><00:43:19.849><c> 9</c><00:43:20.030><c> hidden</c>

00:43:20.440 --> 00:43:20.450 align:start position:0%
there the first of these JDK 9 hidden
 

00:43:20.450 --> 00:43:21.980 align:start position:0%
there the first of these JDK 9 hidden
gems<00:43:20.660><c> focuses</c><00:43:21.140><c> more</c><00:43:21.319><c> on</c><00:43:21.380><c> the</c><00:43:21.619><c> VM</c>

00:43:21.980 --> 00:43:21.990 align:start position:0%
gems focuses more on the VM
 

00:43:21.990 --> 00:43:24.079 align:start position:0%
gems focuses more on the VM
performance<00:43:22.560><c> aspects</c><00:43:23.430><c> of</c><00:43:23.490><c> the</c><00:43:23.550><c> platform</c><00:43:23.970><c> in</c>

00:43:24.079 --> 00:43:24.089 align:start position:0%
performance aspects of the platform in
 

00:43:24.089 --> 00:43:25.849 align:start position:0%
performance aspects of the platform in
the<00:43:24.180><c> video</c><00:43:24.390><c> for</c><00:43:24.570><c> that</c><00:43:24.599><c> is</c><00:43:24.810><c> also</c><00:43:24.960><c> up</c><00:43:25.619><c> online</c>

00:43:25.849 --> 00:43:25.859 align:start position:0%
the video for that is also up online
 

00:43:25.859 --> 00:43:26.950 align:start position:0%
the video for that is also up online
already

00:43:26.950 --> 00:43:26.960 align:start position:0%
already
 

00:43:26.960 --> 00:43:30.890 align:start position:0%
already
so<00:43:27.960><c> in</c><00:43:28.589><c> summary</c><00:43:28.920><c> JDK</c><00:43:29.670><c> 9</c><00:43:29.849><c> was</c><00:43:30.060><c> a</c><00:43:30.089><c> very</c><00:43:30.359><c> large</c>

00:43:30.890 --> 00:43:30.900 align:start position:0%
so in summary JDK 9 was a very large
 

00:43:30.900 --> 00:43:32.420 align:start position:0%
so in summary JDK 9 was a very large
release<00:43:31.290><c> we've</c><00:43:31.830><c> made</c><00:43:32.010><c> some</c><00:43:32.220><c> fundamental</c>

00:43:32.420 --> 00:43:32.430 align:start position:0%
release we've made some fundamental
 

00:43:32.430 --> 00:43:35.120 align:start position:0%
release we've made some fundamental
development<00:43:33.060><c> changes</c><00:43:33.599><c> with</c><00:43:33.780><c> modularity</c><00:43:34.290><c> but</c>

00:43:35.120 --> 00:43:35.130 align:start position:0%
development changes with modularity but
 

00:43:35.130 --> 00:43:36.410 align:start position:0%
development changes with modularity but
the<00:43:35.250><c> changes</c><00:43:35.640><c> weren't</c><00:43:35.910><c> limited</c><00:43:36.359><c> in</c>

00:43:36.410 --> 00:43:36.420 align:start position:0%
the changes weren't limited in
 

00:43:36.420 --> 00:43:38.870 align:start position:0%
the changes weren't limited in
modularity<00:43:36.780><c> we</c><00:43:37.290><c> also</c><00:43:37.440><c> finished</c><00:43:37.770><c> long-planned</c>

00:43:38.870 --> 00:43:38.880 align:start position:0%
modularity we also finished long-planned
 

00:43:38.880 --> 00:43:40.099 align:start position:0%
modularity we also finished long-planned
improvements<00:43:39.420><c> to</c><00:43:39.540><c> the</c><00:43:39.599><c> language</c><00:43:39.960><c> from</c>

00:43:40.099 --> 00:43:40.109 align:start position:0%
improvements to the language from
 

00:43:40.109 --> 00:43:44.120 align:start position:0%
improvements to the language from
project<00:43:40.940><c> coin</c><00:43:41.940><c> in</c><00:43:42.089><c> lambda</c><00:43:42.270><c> and</c><00:43:43.140><c> if</c><00:43:44.010><c> you're</c>

00:43:44.120 --> 00:43:44.130 align:start position:0%
project coin in lambda and if you're
 

00:43:44.130 --> 00:43:45.620 align:start position:0%
project coin in lambda and if you're
interested<00:43:44.460><c> in</c><00:43:44.520><c> following</c><00:43:44.760><c> future</c>

00:43:45.620 --> 00:43:45.630 align:start position:0%
interested in following future
 

00:43:45.630 --> 00:43:47.450 align:start position:0%
interested in following future
developments<00:43:46.109><c> you</c><00:43:46.290><c> can</c><00:43:46.650><c> do</c><00:43:46.859><c> that</c><00:43:47.010><c> in</c><00:43:47.130><c> open</c><00:43:47.220><c> JDK</c>

00:43:47.450 --> 00:43:47.460 align:start position:0%
developments you can do that in open JDK
 

00:43:47.460 --> 00:43:50.510 align:start position:0%
developments you can do that in open JDK
and<00:43:47.940><c> you</c><00:43:48.420><c> can</c><00:43:48.570><c> download</c><00:43:49.109><c> the</c><00:43:49.530><c> JDK</c><00:43:49.680><c> 9</c><00:43:50.010><c> bits</c><00:43:50.400><c> to</c>

00:43:50.510 --> 00:43:50.520 align:start position:0%
and you can download the JDK 9 bits to
 

00:43:50.520 --> 00:43:53.540 align:start position:0%
and you can download the JDK 9 bits to
try<00:43:50.700><c> out</c><00:43:50.880><c> now</c><00:43:51.320><c> so</c><00:43:52.320><c> with</c><00:43:52.470><c> that</c><00:43:52.619><c> I</c><00:43:52.950><c> think</c><00:43:53.280><c> I</c><00:43:53.430><c> have</c>

00:43:53.540 --> 00:43:53.550 align:start position:0%
try out now so with that I think I have
 

00:43:53.550 --> 00:44:08.780 align:start position:0%
try out now so with that I think I have
time<00:43:53.730><c> for</c><00:43:53.790><c> one</c><00:43:54.210><c> or</c><00:43:54.450><c> two</c><00:43:54.480><c> questions</c><00:44:06.500><c> right</c><00:44:07.790><c> so</c>

00:44:08.780 --> 00:44:08.790 align:start position:0%
time for one or two questions right so
 

00:44:08.790 --> 00:44:10.609 align:start position:0%
time for one or two questions right so
the<00:44:08.940><c> question</c><00:44:09.060><c> is</c><00:44:09.330><c> how</c><00:44:09.510><c> does</c><00:44:09.570><c> the</c><00:44:09.869><c> -</c><00:44:10.050><c> -</c><00:44:10.320><c> release</c>

00:44:10.609 --> 00:44:10.619 align:start position:0%
the question is how does the - - release
 

00:44:10.619 --> 00:44:12.410 align:start position:0%
the question is how does the - - release
flag<00:44:10.920><c> interact</c><00:44:11.400><c> with</c><00:44:11.609><c> -</c><00:44:11.760><c> source</c><00:44:12.060><c> and</c><00:44:12.300><c> mask</c>

00:44:12.410 --> 00:44:12.420 align:start position:0%
flag interact with - source and mask
 

00:44:12.420 --> 00:44:15.470 align:start position:0%
flag interact with - source and mask
target<00:44:12.810><c> and</c><00:44:12.960><c> the</c><00:44:13.890><c> answer</c><00:44:14.220><c> is</c><00:44:14.400><c> Java</c><00:44:15.000><c> C</c><00:44:15.180><c> gives</c><00:44:15.359><c> an</c>

00:44:15.470 --> 00:44:15.480 align:start position:0%
target and the answer is Java C gives an
 

00:44:15.480 --> 00:44:17.510 align:start position:0%
target and the answer is Java C gives an
error<00:44:15.660><c> if</c><00:44:15.869><c> you</c><00:44:15.900><c> try</c><00:44:16.589><c> to</c><00:44:16.770><c> do</c><00:44:16.920><c> both</c><00:44:17.099><c> so</c><00:44:17.310><c> you</c><00:44:17.400><c> can</c>

00:44:17.510 --> 00:44:17.520 align:start position:0%
error if you try to do both so you can
 

00:44:17.520 --> 00:44:18.800 align:start position:0%
error if you try to do both so you can
do<00:44:17.580><c> one</c><00:44:17.730><c> or</c><00:44:17.760><c> the</c><00:44:17.910><c> other</c><00:44:18.000><c> you</c><00:44:18.390><c> either</c><00:44:18.510><c> have</c><00:44:18.750><c> to</c>

00:44:18.800 --> 00:44:18.810 align:start position:0%
do one or the other you either have to
 

00:44:18.810 --> 00:44:20.630 align:start position:0%
do one or the other you either have to
do<00:44:19.050><c> -</c><00:44:19.470><c> -</c><00:44:19.680><c> release</c><00:44:19.980><c> where</c><00:44:20.250><c> takes</c><00:44:20.460><c> care</c><00:44:20.609><c> of</c>

00:44:20.630 --> 00:44:20.640 align:start position:0%
do - - release where takes care of
 

00:44:20.640 --> 00:44:23.630 align:start position:0%
do - - release where takes care of
everything<00:44:20.880><c> or</c><00:44:21.630><c> you</c><00:44:21.990><c> can</c><00:44:22.140><c> use</c><00:44:22.320><c> the</c><00:44:23.160><c> source</c><00:44:23.490><c> and</c>

00:44:23.630 --> 00:44:23.640 align:start position:0%
everything or you can use the source and
 

00:44:23.640 --> 00:44:28.490 align:start position:0%
everything or you can use the source and
target<00:44:23.700><c> Flags</c><00:44:24.030><c> explicitly</c><00:44:27.080><c> the</c><00:44:28.080><c> tools</c><00:44:28.260><c> will</c>

00:44:28.490 --> 00:44:28.500 align:start position:0%
target Flags explicitly the tools will
 

00:44:28.500 --> 00:44:32.270 align:start position:0%
target Flags explicitly the tools will
have<00:44:28.589><c> to</c><00:44:28.710><c> change</c><00:44:28.890><c> the</c><00:44:29.010><c> support</c><00:44:29.280><c> it</c><00:44:29.400><c> yes</c><00:44:31.280><c> all</c>

00:44:32.270 --> 00:44:32.280 align:start position:0%
have to change the support it yes all
 

00:44:32.280 --> 00:44:33.290 align:start position:0%
have to change the support it yes all
right<00:44:32.400><c> well</c><00:44:32.550><c> I</c><00:44:32.580><c> think</c><00:44:32.730><c> I</c><00:44:32.820><c> said</c><00:44:33.000><c> thank</c><00:44:33.180><c> you</c><00:44:33.240><c> for</c>

00:44:33.290 --> 00:44:33.300 align:start position:0%
right well I think I said thank you for
 

00:44:33.300 --> 00:44:34.200 align:start position:0%
right well I think I said thank you for
coming<00:44:33.599><c> you</c><00:44:33.660><c> today</c>

00:44:34.200 --> 00:44:34.210 align:start position:0%
coming you today
 

00:44:34.210 --> 00:44:39.329 align:start position:0%
coming you today
[Applause]

