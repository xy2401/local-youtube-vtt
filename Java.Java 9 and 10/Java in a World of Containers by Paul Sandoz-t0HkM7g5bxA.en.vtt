WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.180 align:start position:0%
 
hello<00:00:00.269><c> welcome</c><00:00:00.690><c> to</c><00:00:00.989><c> this</c><00:00:01.079><c> presentation</c><00:00:01.350><c> Java</c>

00:00:02.180 --> 00:00:02.190 align:start position:0%
hello welcome to this presentation Java
 

00:00:02.190 --> 00:00:04.280 align:start position:0%
hello welcome to this presentation Java
in<00:00:02.399><c> the</c><00:00:02.490><c> wilderkin</c><00:00:02.909><c> Tanners</c><00:00:03.330><c> I'm</c><00:00:03.720><c> Paul</c>

00:00:04.280 --> 00:00:04.290 align:start position:0%
in the wilderkin Tanners I'm Paul
 

00:00:04.290 --> 00:00:06.289 align:start position:0%
in the wilderkin Tanners I'm Paul
Sanders<00:00:04.680><c> I'm</c><00:00:04.920><c> a</c><00:00:05.040><c> member</c><00:00:05.220><c> of</c><00:00:05.400><c> Java</c><00:00:06.060><c> platform</c>

00:00:06.289 --> 00:00:06.299 align:start position:0%
Sanders I'm a member of Java platform
 

00:00:06.299 --> 00:00:09.350 align:start position:0%
Sanders I'm a member of Java platform
team<00:00:06.810><c> and</c><00:00:06.990><c> I</c><00:00:07.080><c> hack</c><00:00:07.379><c> on</c><00:00:07.620><c> the</c><00:00:08.610><c> core</c><00:00:08.820><c> libraries</c>

00:00:09.350 --> 00:00:09.360 align:start position:0%
team and I hack on the core libraries
 

00:00:09.360 --> 00:00:12.140 align:start position:0%
team and I hack on the core libraries
java<00:00:10.050><c> language</c><00:00:10.230><c> and</c><00:00:10.800><c> hotspots</c><00:00:11.370><c> so</c><00:00:11.790><c> let's</c><00:00:12.000><c> get</c>

00:00:12.140 --> 00:00:12.150 align:start position:0%
java language and hotspots so let's get
 

00:00:12.150 --> 00:00:15.430 align:start position:0%
java language and hotspots so let's get
into<00:00:12.420><c> this</c><00:00:12.509><c> presentation</c>

00:00:15.430 --> 00:00:15.440 align:start position:0%
 
 

00:00:15.440 --> 00:00:17.720 align:start position:0%
 
okay<00:00:16.440><c> the</c><00:00:16.560><c> jhen</c><00:00:16.740><c> for</c><00:00:16.890><c> half</c><00:00:16.980><c> a</c><00:00:17.010><c> day</c><00:00:17.250><c> is</c><00:00:17.310><c> just</c><00:00:17.490><c> two</c>

00:00:17.720 --> 00:00:17.730 align:start position:0%
okay the jhen for half a day is just two
 

00:00:17.730 --> 00:00:19.400 align:start position:0%
okay the jhen for half a day is just two
things<00:00:17.910><c> one</c><00:00:18.779><c> I'm</c><00:00:18.990><c> going</c><00:00:19.140><c> to</c><00:00:19.199><c> talk</c><00:00:19.350><c> about</c>

00:00:19.400 --> 00:00:19.410 align:start position:0%
things one I'm going to talk about
 

00:00:19.410 --> 00:00:23.390 align:start position:0%
things one I'm going to talk about
running<00:00:20.210><c> jdk</c><00:00:21.210><c> 9</c><00:00:21.390><c> and</c><00:00:21.630><c> docker</c><00:00:21.840><c> containers</c><00:00:22.470><c> and</c>

00:00:23.390 --> 00:00:23.400 align:start position:0%
running jdk 9 and docker containers and
 

00:00:23.400 --> 00:00:24.679 align:start position:0%
running jdk 9 and docker containers and
the<00:00:23.490><c> second</c><00:00:23.880><c> part</c><00:00:24.029><c> is</c><00:00:24.150><c> I'm</c><00:00:24.359><c> going</c><00:00:24.480><c> to</c><00:00:24.570><c> be</c>

00:00:24.679 --> 00:00:24.689 align:start position:0%
the second part is I'm going to be
 

00:00:24.689 --> 00:00:27.259 align:start position:0%
the second part is I'm going to be
reducing<00:00:25.320><c> the</c><00:00:25.350><c> size</c><00:00:25.650><c> of</c><00:00:25.859><c> JDK</c><00:00:26.189><c> 9</c><00:00:26.490><c> in</c><00:00:26.939><c> docker</c>

00:00:27.259 --> 00:00:27.269 align:start position:0%
reducing the size of JDK 9 in docker
 

00:00:27.269 --> 00:00:28.460 align:start position:0%
reducing the size of JDK 9 in docker
images<00:00:27.689><c> so</c><00:00:27.869><c> I'm</c><00:00:27.930><c> going</c><00:00:28.080><c> to</c><00:00:28.140><c> present</c><00:00:28.289><c> some</c>

00:00:28.460 --> 00:00:28.470 align:start position:0%
images so I'm going to present some
 

00:00:28.470 --> 00:00:30.019 align:start position:0%
images so I'm going to present some
slides<00:00:28.920><c> and</c><00:00:29.220><c> I'm</c><00:00:29.279><c> going</c><00:00:29.640><c> to</c><00:00:29.670><c> present</c><00:00:30.000><c> some</c>

00:00:30.019 --> 00:00:30.029 align:start position:0%
slides and I'm going to present some
 

00:00:30.029 --> 00:00:32.600 align:start position:0%
slides and I'm going to present some
demos<00:00:30.570><c> on</c><00:00:30.900><c> these</c><00:00:31.500><c> two</c><00:00:31.650><c> aspects</c><00:00:32.040><c> before</c><00:00:32.430><c> I</c><00:00:32.460><c> get</c>

00:00:32.600 --> 00:00:32.610 align:start position:0%
demos on these two aspects before I get
 

00:00:32.610 --> 00:00:34.250 align:start position:0%
demos on these two aspects before I get
into<00:00:32.730><c> that</c><00:00:32.880><c> I</c><00:00:33.180><c> just</c><00:00:33.210><c> like</c><00:00:33.480><c> to</c><00:00:33.630><c> point</c><00:00:33.780><c> out</c><00:00:33.960><c> that</c>

00:00:34.250 --> 00:00:34.260 align:start position:0%
into that I just like to point out that
 

00:00:34.260 --> 00:00:37.400 align:start position:0%
into that I just like to point out that
Java<00:00:35.010><c> 8</c><00:00:35.219><c> docker</c><00:00:35.460><c> images</c><00:00:35.910><c> are</c><00:00:36.120><c> available</c><00:00:36.410><c> for</c>

00:00:37.400 --> 00:00:37.410 align:start position:0%
Java 8 docker images are available for
 

00:00:37.410 --> 00:00:38.959 align:start position:0%
Java 8 docker images are available for
download<00:00:37.800><c> you</c><00:00:37.980><c> can</c><00:00:38.129><c> see</c><00:00:38.280><c> the</c><00:00:38.430><c> links</c><00:00:38.730><c> here</c><00:00:38.910><c> if</c>

00:00:38.959 --> 00:00:38.969 align:start position:0%
download you can see the links here if
 

00:00:38.969 --> 00:00:41.660 align:start position:0%
download you can see the links here if
you<00:00:39.120><c> want</c><00:00:39.300><c> to</c><00:00:39.329><c> try</c><00:00:39.629><c> those</c><00:00:39.840><c> out</c><00:00:40.309><c> so</c><00:00:41.309><c> let's</c><00:00:41.520><c> get</c>

00:00:41.660 --> 00:00:41.670 align:start position:0%
you want to try those out so let's get
 

00:00:41.670 --> 00:00:43.030 align:start position:0%
you want to try those out so let's get
into<00:00:41.940><c> the</c><00:00:42.030><c> first</c><00:00:42.180><c> part</c><00:00:42.510><c> of</c><00:00:42.600><c> a</c><00:00:42.690><c> presentation</c>

00:00:43.030 --> 00:00:43.040 align:start position:0%
into the first part of a presentation
 

00:00:43.040 --> 00:00:46.160 align:start position:0%
into the first part of a presentation
running<00:00:44.040><c> JDK</c><00:00:44.460><c> 9</c><00:00:44.610><c> in</c><00:00:44.760><c> docker</c><00:00:44.940><c> containers</c><00:00:45.539><c> so</c>

00:00:46.160 --> 00:00:46.170 align:start position:0%
running JDK 9 in docker containers so
 

00:00:46.170 --> 00:00:47.569 align:start position:0%
running JDK 9 in docker containers so
we've<00:00:46.320><c> we've</c><00:00:46.620><c> done</c><00:00:46.770><c> a</c><00:00:46.800><c> bunch</c><00:00:47.100><c> of</c><00:00:47.250><c> improvements</c>

00:00:47.569 --> 00:00:47.579 align:start position:0%
we've we've done a bunch of improvements
 

00:00:47.579 --> 00:00:50.930 align:start position:0%
we've we've done a bunch of improvements
in<00:00:48.090><c> JDK</c><00:00:48.899><c> 9</c><00:00:49.110><c> to</c><00:00:49.320><c> honor</c><00:00:49.500><c> resource</c><00:00:50.190><c> constraints</c>

00:00:50.930 --> 00:00:50.940 align:start position:0%
in JDK 9 to honor resource constraints
 

00:00:50.940 --> 00:00:53.119 align:start position:0%
in JDK 9 to honor resource constraints
in<00:00:51.629><c> docker</c><00:00:52.289><c> when</c><00:00:52.530><c> you</c><00:00:52.649><c> run</c><00:00:52.829><c> a</c><00:00:52.860><c> docker</c>

00:00:53.119 --> 00:00:53.129 align:start position:0%
in docker when you run a docker
 

00:00:53.129 --> 00:00:54.770 align:start position:0%
in docker when you run a docker
container<00:00:53.610><c> it</c><00:00:53.789><c> can</c><00:00:53.820><c> be</c><00:00:54.090><c> constrained</c><00:00:54.570><c> in</c><00:00:54.750><c> terms</c>

00:00:54.770 --> 00:00:54.780 align:start position:0%
container it can be constrained in terms
 

00:00:54.780 --> 00:00:58.790 align:start position:0%
container it can be constrained in terms
of<00:00:55.140><c> memory</c><00:00:55.410><c> and</c><00:00:55.850><c> how</c><00:00:56.850><c> many</c><00:00:57.030><c> CPU</c><00:00:57.570><c> sirs</c><00:00:57.780><c> have</c><00:00:58.020><c> so</c>

00:00:58.790 --> 00:00:58.800 align:start position:0%
of memory and how many CPU sirs have so
 

00:00:58.800 --> 00:01:01.939 align:start position:0%
of memory and how many CPU sirs have so
the<00:00:58.920><c> first</c><00:00:59.160><c> one</c><00:00:59.370><c> we</c><00:00:59.760><c> we</c><00:01:00.239><c> respect</c><00:01:00.750><c> now</c><00:01:00.960><c> is</c><00:01:01.289><c> si</c>

00:01:01.939 --> 00:01:01.949 align:start position:0%
the first one we we respect now is si
 

00:01:01.949 --> 00:01:03.439 align:start position:0%
the first one we we respect now is si
group<00:01:02.160><c> memory</c><00:01:02.460><c> limits</c><00:01:02.789><c> that</c><00:01:03.000><c> have</c><00:01:03.059><c> been</c><00:01:03.180><c> set</c>

00:01:03.439 --> 00:01:03.449 align:start position:0%
group memory limits that have been set
 

00:01:03.449 --> 00:01:06.020 align:start position:0%
group memory limits that have been set
by<00:01:03.480><c> the</c><00:01:03.629><c> container</c><00:01:04.400><c> and</c><00:01:05.400><c> we've</c><00:01:05.580><c> added</c><00:01:05.729><c> an</c>

00:01:06.020 --> 00:01:06.030 align:start position:0%
by the container and we've added an
 

00:01:06.030 --> 00:01:09.170 align:start position:0%
by the container and we've added an
experimental<00:01:06.930><c> flag</c><00:01:07.229><c> here</c><00:01:07.650><c> you</c><00:01:08.460><c> can</c><00:01:08.640><c> see</c><00:01:08.850><c> use</c>

00:01:09.170 --> 00:01:09.180 align:start position:0%
experimental flag here you can see use
 

00:01:09.180 --> 00:01:11.990 align:start position:0%
experimental flag here you can see use
see<00:01:09.540><c> group</c><00:01:09.780><c> memory</c><00:01:10.229><c> limit</c><00:01:10.530><c> for</c><00:01:10.770><c> heap</c><00:01:11.070><c> this</c><00:01:11.880><c> is</c>

00:01:11.990 --> 00:01:12.000 align:start position:0%
see group memory limit for heap this is
 

00:01:12.000 --> 00:01:13.850 align:start position:0%
see group memory limit for heap this is
experimental<00:01:12.510><c> at</c><00:01:12.780><c> the</c><00:01:12.869><c> moment</c><00:01:13.260><c> and</c><00:01:13.439><c> we</c><00:01:13.680><c> hope</c>

00:01:13.850 --> 00:01:13.860 align:start position:0%
experimental at the moment and we hope
 

00:01:13.860 --> 00:01:15.440 align:start position:0%
experimental at the moment and we hope
that<00:01:14.070><c> you'll</c><00:01:14.310><c> be</c><00:01:14.430><c> able</c><00:01:14.549><c> to</c><00:01:14.790><c> get</c><00:01:14.939><c> experience</c>

00:01:15.440 --> 00:01:15.450 align:start position:0%
that you'll be able to get experience
 

00:01:15.450 --> 00:01:17.539 align:start position:0%
that you'll be able to get experience
running<00:01:15.750><c> this</c><00:01:16.020><c> and</c><00:01:16.350><c> then</c><00:01:16.680><c> we</c><00:01:16.830><c> will</c><00:01:17.070><c> switch</c><00:01:17.280><c> it</c>

00:01:17.539 --> 00:01:17.549 align:start position:0%
running this and then we will switch it
 

00:01:17.549 --> 00:01:20.210 align:start position:0%
running this and then we will switch it
over<00:01:17.670><c> to</c><00:01:17.880><c> a</c><00:01:18.720><c> default</c><00:01:19.259><c> setting</c><00:01:19.680><c> later</c><00:01:19.830><c> on</c><00:01:20.070><c> when</c>

00:01:20.210 --> 00:01:20.220 align:start position:0%
over to a default setting later on when
 

00:01:20.220 --> 00:01:21.940 align:start position:0%
over to a default setting later on when
we're<00:01:20.400><c> comfortable</c><00:01:20.580><c> we</c><00:01:21.000><c> got</c><00:01:21.150><c> this</c><00:01:21.270><c> right</c>

00:01:21.940 --> 00:01:21.950 align:start position:0%
we're comfortable we got this right
 

00:01:21.950 --> 00:01:25.100 align:start position:0%
we're comfortable we got this right
another<00:01:22.950><c> area</c><00:01:23.369><c> that</c><00:01:23.400><c> the</c><00:01:24.119><c> JDK</c><00:01:24.509><c> now</c><00:01:24.659><c> respects</c>

00:01:25.100 --> 00:01:25.110 align:start position:0%
another area that the JDK now respects
 

00:01:25.110 --> 00:01:27.620 align:start position:0%
another area that the JDK now respects
is<00:01:25.350><c> some</c><00:01:26.070><c> CPU</c><00:01:26.430><c> constraint</c><00:01:27.030><c> set</c><00:01:27.299><c> for</c><00:01:27.509><c> the</c>

00:01:27.620 --> 00:01:27.630 align:start position:0%
is some CPU constraint set for the
 

00:01:27.630 --> 00:01:31.069 align:start position:0%
is some CPU constraint set for the
container<00:01:28.049><c> for</c><00:01:28.710><c> example</c><00:01:29.570><c> runtime</c><00:01:30.570><c> available</c>

00:01:31.069 --> 00:01:31.079 align:start position:0%
container for example runtime available
 

00:01:31.079 --> 00:01:32.929 align:start position:0%
container for example runtime available
processors<00:01:31.680><c> will</c><00:01:31.860><c> now</c><00:01:32.009><c> report</c><00:01:32.369><c> their</c><00:01:32.610><c> correct</c>

00:01:32.929 --> 00:01:32.939 align:start position:0%
processors will now report their correct
 

00:01:32.939 --> 00:01:35.179 align:start position:0%
processors will now report their correct
number<00:01:33.360><c> of</c><00:01:33.479><c> CPUs</c><00:01:34.079><c> in</c><00:01:34.560><c> the</c><00:01:34.799><c> container</c>

00:01:35.179 --> 00:01:35.189 align:start position:0%
number of CPUs in the container
 

00:01:35.189 --> 00:01:38.210 align:start position:0%
number of CPUs in the container
previously<00:01:35.850><c> used</c><00:01:36.119><c> to</c><00:01:36.329><c> report</c><00:01:36.659><c> the</c><00:01:37.320><c> CPUs</c><00:01:37.920><c> of</c>

00:01:38.210 --> 00:01:38.220 align:start position:0%
previously used to report the CPUs of
 

00:01:38.220 --> 00:01:41.030 align:start position:0%
previously used to report the CPUs of
the<00:01:38.369><c> host</c><00:01:38.579><c> itself</c><00:01:38.850><c> and</c><00:01:39.600><c> also</c><00:01:39.780><c> we've</c><00:01:40.049><c> done</c><00:01:40.229><c> some</c>

00:01:41.030 --> 00:01:41.040 align:start position:0%
the host itself and also we've done some
 

00:01:41.040 --> 00:01:43.100 align:start position:0%
the host itself and also we've done some
fixes<00:01:41.579><c> to</c><00:01:41.790><c> the</c><00:01:41.880><c> JVM</c><00:01:42.299><c> to</c><00:01:42.420><c> make</c><00:01:42.570><c> it</c><00:01:42.689><c> more</c><00:01:42.810><c> stable</c>

00:01:43.100 --> 00:01:43.110 align:start position:0%
fixes to the JVM to make it more stable
 

00:01:43.110 --> 00:01:45.740 align:start position:0%
fixes to the JVM to make it more stable
when<00:01:43.409><c> resources</c><00:01:43.740><c> change</c><00:01:44.340><c> for</c><00:01:45.119><c> example</c><00:01:45.240><c> the</c>

00:01:45.740 --> 00:01:45.750 align:start position:0%
when resources change for example the
 

00:01:45.750 --> 00:01:48.230 align:start position:0%
when resources change for example the
jiwon<00:01:46.110><c> garbage</c><00:01:46.890><c> collector</c><00:01:47.369><c> now</c><00:01:47.549><c> operates</c><00:01:47.970><c> on</c>

00:01:48.230 --> 00:01:48.240 align:start position:0%
jiwon garbage collector now operates on
 

00:01:48.240 --> 00:01:50.210 align:start position:0%
jiwon garbage collector now operates on
active<00:01:48.600><c> CPU</c><00:01:49.049><c> can't</c><00:01:49.290><c> discover</c><00:01:49.680><c> that</c><00:01:49.799><c> JVM</c>

00:01:50.210 --> 00:01:50.220 align:start position:0%
active CPU can't discover that JVM
 

00:01:50.220 --> 00:01:52.670 align:start position:0%
active CPU can't discover that JVM
startup<00:01:50.729><c> and</c><00:01:50.909><c> not</c><00:01:51.090><c> the</c><00:01:51.570><c> active</c><00:01:51.840><c> CPU</c><00:01:52.320><c> count</c><00:01:52.560><c> at</c>

00:01:52.670 --> 00:01:52.680 align:start position:0%
startup and not the active CPU count at
 

00:01:52.680 --> 00:01:54.590 align:start position:0%
startup and not the active CPU count at
any<00:01:52.770><c> time</c><00:01:53.100><c> it</c><00:01:53.280><c> decides</c><00:01:53.640><c> it</c><00:01:53.759><c> wants</c><00:01:53.880><c> to</c><00:01:54.090><c> query</c><00:01:54.420><c> it</c>

00:01:54.590 --> 00:01:54.600 align:start position:0%
any time it decides it wants to query it
 

00:01:54.600 --> 00:01:57.709 align:start position:0%
any time it decides it wants to query it
because<00:01:55.320><c> G</c><00:01:55.530><c> 1</c><00:01:55.710><c> needs</c><00:01:55.950><c> to</c><00:01:56.100><c> size</c><00:01:56.340><c> stuff</c><00:01:57.030><c> at</c><00:01:57.240><c> JVM</c>

00:01:57.709 --> 00:01:57.719 align:start position:0%
because G 1 needs to size stuff at JVM
 

00:01:57.719 --> 00:02:00.469 align:start position:0%
because G 1 needs to size stuff at JVM
start<00:01:58.020><c> up</c><00:01:58.229><c> correctly</c><00:01:58.649><c> based</c><00:01:59.280><c> on</c><00:01:59.520><c> cpu</c><00:01:59.850><c> count</c><00:02:00.299><c> it</c>

00:02:00.469 --> 00:02:00.479 align:start position:0%
start up correctly based on cpu count it
 

00:02:00.479 --> 00:02:02.630 align:start position:0%
start up correctly based on cpu count it
sees<00:02:00.780><c> an</c><00:02:01.110><c> ongoing</c><00:02:01.290><c> proven</c><00:02:01.829><c> so</c><00:02:02.009><c> planned</c><00:02:02.310><c> for</c><00:02:02.579><c> a</c>

00:02:02.630 --> 00:02:02.640 align:start position:0%
sees an ongoing proven so planned for a
 

00:02:02.640 --> 00:02:05.300 align:start position:0%
sees an ongoing proven so planned for a
future<00:02:03.060><c> release</c><00:02:03.299><c> we</c><00:02:04.229><c> have</c><00:02:04.380><c> a</c><00:02:04.409><c> draft</c><00:02:04.649><c> JEP</c><00:02:05.070><c> in</c>

00:02:05.300 --> 00:02:05.310 align:start position:0%
future release we have a draft JEP in
 

00:02:05.310 --> 00:02:07.639 align:start position:0%
future release we have a draft JEP in
the<00:02:05.520><c> works</c><00:02:05.700><c> and</c><00:02:06.119><c> container</c><00:02:06.630><c> aware</c><00:02:06.990><c> Java</c><00:02:07.320><c> and</c>

00:02:07.639 --> 00:02:07.649 align:start position:0%
the works and container aware Java and
 

00:02:07.649 --> 00:02:09.440 align:start position:0%
the works and container aware Java and
we<00:02:08.220><c> would</c><00:02:08.459><c> plan</c><00:02:08.700><c> to</c><00:02:08.729><c> do</c><00:02:09.030><c> a</c><00:02:09.060><c> number</c><00:02:09.300><c> of</c>

00:02:09.440 --> 00:02:09.450 align:start position:0%
we would plan to do a number of
 

00:02:09.450 --> 00:02:11.630 align:start position:0%
we would plan to do a number of
enhancements<00:02:09.810><c> here</c><00:02:10.319><c> for</c><00:02:10.619><c> example</c><00:02:10.890><c> evaluating</c>

00:02:11.630 --> 00:02:11.640 align:start position:0%
enhancements here for example evaluating
 

00:02:11.640 --> 00:02:13.820 align:start position:0%
enhancements here for example evaluating
further<00:02:11.970><c> support</c><00:02:12.840><c> for</c><00:02:12.900><c> docker</c><00:02:13.200><c> runtime</c>

00:02:13.820 --> 00:02:13.830 align:start position:0%
further support for docker runtime
 

00:02:13.830 --> 00:02:15.770 align:start position:0%
further support for docker runtime
flags<00:02:14.070><c> you</c><00:02:14.250><c> see</c><00:02:14.460><c> therefore</c><00:02:14.670><c> cpu</c><00:02:15.240><c> quotas</c><00:02:15.660><c> in</c>

00:02:15.770 --> 00:02:15.780 align:start position:0%
flags you see therefore cpu quotas in
 

00:02:15.780 --> 00:02:17.090 align:start position:0%
flags you see therefore cpu quotas in
this<00:02:15.930><c> there's</c><00:02:16.200><c> a</c><00:02:16.230><c> lot</c><00:02:16.320><c> of</c><00:02:16.440><c> work</c><00:02:16.620><c> we</c><00:02:16.800><c> can</c><00:02:16.830><c> do</c>

00:02:17.090 --> 00:02:17.100 align:start position:0%
this there's a lot of work we can do
 

00:02:17.100 --> 00:02:19.550 align:start position:0%
this there's a lot of work we can do
here<00:02:17.340><c> to</c><00:02:17.790><c> improve</c><00:02:18.060><c> how</c><00:02:18.270><c> Java</c><00:02:18.570><c> works</c><00:02:18.840><c> but</c><00:02:19.470><c> now</c>

00:02:19.550 --> 00:02:19.560 align:start position:0%
here to improve how Java works but now
 

00:02:19.560 --> 00:02:20.780 align:start position:0%
here to improve how Java works but now
I'm<00:02:19.620><c> going</c><00:02:19.770><c> to</c><00:02:19.830><c> switch</c><00:02:20.010><c> to</c><00:02:20.040><c> a</c><00:02:20.280><c> little</c><00:02:20.580><c> demo</c>

00:02:20.780 --> 00:02:20.790 align:start position:0%
I'm going to switch to a little demo
 

00:02:20.790 --> 00:02:23.180 align:start position:0%
I'm going to switch to a little demo
here<00:02:21.180><c> and</c><00:02:21.420><c> show</c><00:02:21.750><c> the</c><00:02:21.990><c> resource</c><00:02:22.620><c> constraints</c>

00:02:23.180 --> 00:02:23.190 align:start position:0%
here and show the resource constraints
 

00:02:23.190 --> 00:02:26.030 align:start position:0%
here and show the resource constraints
in<00:02:23.340><c> action</c><00:02:23.790><c> so</c><00:02:24.720><c> what</c><00:02:24.870><c> I'm</c><00:02:24.990><c> going</c><00:02:25.140><c> to</c><00:02:25.170><c> do</c><00:02:25.320><c> is</c><00:02:25.590><c> I'm</c>

00:02:26.030 --> 00:02:26.040 align:start position:0%
in action so what I'm going to do is I'm
 

00:02:26.040 --> 00:02:28.340 align:start position:0%
in action so what I'm going to do is I'm
going<00:02:26.190><c> to</c><00:02:26.250><c> run</c><00:02:26.520><c> a</c><00:02:26.550><c> Java</c><00:02:26.910><c> process</c><00:02:27.270><c> in</c><00:02:27.690><c> a</c><00:02:27.870><c> docker</c>

00:02:28.340 --> 00:02:28.350 align:start position:0%
going to run a Java process in a docker
 

00:02:28.350 --> 00:02:30.980 align:start position:0%
going to run a Java process in a docker
container<00:02:28.880><c> docker</c><00:02:29.880><c> image</c><00:02:30.210><c> sorry</c><00:02:30.450><c> containing</c>

00:02:30.980 --> 00:02:30.990 align:start position:0%
container docker image sorry containing
 

00:02:30.990 --> 00:02:33.680 align:start position:0%
container docker image sorry containing
Java<00:02:31.290><c> 9</c><00:02:32.070><c> build</c><00:02:32.700><c> and</c><00:02:33.090><c> I'm</c><00:02:33.150><c> going</c><00:02:33.300><c> to</c><00:02:33.360><c> run</c><00:02:33.480><c> J</c>

00:02:33.680 --> 00:02:33.690 align:start position:0%
Java 9 build and I'm going to run J
 

00:02:33.690 --> 00:02:37.550 align:start position:0%
Java 9 build and I'm going to run J
shell<00:02:33.960><c> as</c><00:02:34.140><c> the</c><00:02:34.710><c> Java</c><00:02:34.920><c> process</c><00:02:36.110><c> so</c><00:02:37.110><c> let's</c><00:02:37.350><c> just</c>

00:02:37.550 --> 00:02:37.560 align:start position:0%
shell as the Java process so let's just
 

00:02:37.560 --> 00:02:39.530 align:start position:0%
shell as the Java process so let's just
go<00:02:37.710><c> ahead</c><00:02:37.830><c> and</c><00:02:38.010><c> run</c><00:02:38.880><c> that</c><00:02:39.090><c> so</c><00:02:39.270><c> what</c><00:02:39.420><c> I'm</c><00:02:39.510><c> doing</c>

00:02:39.530 --> 00:02:39.540 align:start position:0%
go ahead and run that so what I'm doing
 

00:02:39.540 --> 00:02:41.720 align:start position:0%
go ahead and run that so what I'm doing
is<00:02:39.900><c> I'm</c><00:02:40.110><c> running</c><00:02:40.230><c> J</c><00:02:40.530><c> shell</c><00:02:40.800><c> in</c><00:02:41.370><c> a</c><00:02:41.490><c> docker</c>

00:02:41.720 --> 00:02:41.730 align:start position:0%
is I'm running J shell in a docker
 

00:02:41.730 --> 00:02:44.150 align:start position:0%
is I'm running J shell in a docker
container<00:02:42.240><c> it's</c><00:02:42.480><c> running</c><00:02:42.750><c> Java</c><00:02:42.990><c> 9</c><00:02:43.290><c> and</c><00:02:43.590><c> we're</c>

00:02:44.150 --> 00:02:44.160 align:start position:0%
container it's running Java 9 and we're
 

00:02:44.160 --> 00:02:47.150 align:start position:0%
container it's running Java 9 and we're
going<00:02:44.280><c> to</c><00:02:44.310><c> query</c><00:02:44.670><c> the</c><00:02:45.060><c> the</c><00:02:45.870><c> CPU</c><00:02:46.620><c> constraint</c>

00:02:47.150 --> 00:02:47.160 align:start position:0%
going to query the the CPU constraint
 

00:02:47.160 --> 00:02:49.370 align:start position:0%
going to query the the CPU constraint
CPU<00:02:47.760><c> limits</c><00:02:48.120><c> and</c><00:02:48.420><c> memory</c><00:02:48.810><c> limits</c><00:02:49.110><c> to</c><00:02:49.200><c> see</c>

00:02:49.370 --> 00:02:49.380 align:start position:0%
CPU limits and memory limits to see
 

00:02:49.380 --> 00:02:50.450 align:start position:0%
CPU limits and memory limits to see
what's<00:02:49.560><c> office</c><00:02:49.860><c> if</c><00:02:50.010><c> first</c><00:02:50.130><c> of</c><00:02:50.220><c> all</c><00:02:50.340><c> I'm</c>

00:02:50.450 --> 00:02:50.460 align:start position:0%
what's office if first of all I'm
 

00:02:50.460 --> 00:02:52.280 align:start position:0%
what's office if first of all I'm
running<00:02:50.700><c> doc</c><00:02:50.880><c> without</c><00:02:51.090><c> any</c><00:02:51.360><c> constraints</c><00:02:52.110><c> it's</c>

00:02:52.280 --> 00:02:52.290 align:start position:0%
running doc without any constraints it's
 

00:02:52.290 --> 00:02:53.810 align:start position:0%
running doc without any constraints it's
just<00:02:52.470><c> going</c><00:02:52.620><c> to</c><00:02:52.709><c> run</c><00:02:52.890><c> what</c><00:02:53.100><c> the</c><00:02:53.220><c> defaults</c><00:02:53.670><c> are</c>

00:02:53.810 --> 00:02:53.820 align:start position:0%
just going to run what the defaults are
 

00:02:53.820 --> 00:02:56.210 align:start position:0%
just going to run what the defaults are
and<00:02:54.090><c> and</c><00:02:54.270><c> what</c><00:02:54.840><c> the</c><00:02:54.959><c> host</c><00:02:55.110><c> offers</c><00:02:55.380><c> up</c><00:02:55.620><c> to</c><00:02:55.650><c> it</c><00:02:55.920><c> so</c>

00:02:56.210 --> 00:02:56.220 align:start position:0%
and and what the host offers up to it so
 

00:02:56.220 --> 00:03:01.130 align:start position:0%
and and what the host offers up to it so
we<00:02:56.400><c> using</c><00:02:57.180><c> the</c><00:02:57.360><c> runtime</c><00:02:57.810><c> get</c><00:03:00.140><c> available</c>

00:03:01.130 --> 00:03:01.140 align:start position:0%
we using the runtime get available
 

00:03:01.140 --> 00:03:05.390 align:start position:0%
we using the runtime get available
processors<00:03:02.810><c> we</c><00:03:03.810><c> can</c><00:03:03.990><c> see</c><00:03:04.290><c> that</c><00:03:04.470><c> we</c><00:03:04.650><c> it</c><00:03:04.980><c> reports</c>

00:03:05.390 --> 00:03:05.400 align:start position:0%
processors we can see that we it reports
 

00:03:05.400 --> 00:03:06.890 align:start position:0%
processors we can see that we it reports
this<00:03:05.459><c> full</c><00:03:05.790><c> process</c><00:03:06.209><c> is</c><00:03:06.330><c> available</c><00:03:06.750><c> by</c>

00:03:06.890 --> 00:03:06.900 align:start position:0%
this full process is available by
 

00:03:06.900 --> 00:03:09.470 align:start position:0%
this full process is available by
default<00:03:07.100><c> I've</c><00:03:08.100><c> also</c><00:03:08.250><c> added</c><00:03:08.520><c> some</c><00:03:08.820><c> snippets</c><00:03:09.120><c> to</c>

00:03:09.470 --> 00:03:09.480 align:start position:0%
default I've also added some snippets to
 

00:03:09.480 --> 00:03:13.220 align:start position:0%
default I've also added some snippets to
JCL<00:03:10.050><c> to</c><00:03:10.200><c> query</c><00:03:10.500><c> the</c><00:03:10.740><c> memory</c><00:03:11.370><c> limits</c><00:03:12.120><c> of</c><00:03:12.420><c> both</c>

00:03:13.220 --> 00:03:13.230 align:start position:0%
JCL to query the memory limits of both
 

00:03:13.230 --> 00:03:15.470 align:start position:0%
JCL to query the memory limits of both
the<00:03:13.530><c> the</c><00:03:13.560><c> Java</c><00:03:14.160><c> Runtime</c><00:03:14.670><c> and</c><00:03:14.910><c> also</c><00:03:15.240><c> what's</c>

00:03:15.470 --> 00:03:15.480 align:start position:0%
the the Java Runtime and also what's
 

00:03:15.480 --> 00:03:18.770 align:start position:0%
the the Java Runtime and also what's
reported<00:03:15.810><c> by</c><00:03:16.230><c> the</c><00:03:16.890><c> C</c><00:03:17.070><c> groups</c><00:03:17.370><c> and</c><00:03:17.820><c> in</c><00:03:18.209><c> in</c><00:03:18.600><c> the</c>

00:03:18.770 --> 00:03:18.780 align:start position:0%
reported by the C groups and in in the
 

00:03:18.780 --> 00:03:21.350 align:start position:0%
reported by the C groups and in in the
second<00:03:19.170><c> case</c><00:03:19.350><c> we</c><00:03:20.010><c> see</c><00:03:20.220><c> unload</c><00:03:20.550><c> unloading</c><00:03:21.150><c> up</c><00:03:21.239><c> a</c>

00:03:21.350 --> 00:03:21.360 align:start position:0%
second case we see unload unloading up a
 

00:03:21.360 --> 00:03:24.530 align:start position:0%
second case we see unload unloading up a
file<00:03:21.630><c> here</c><00:03:22.530><c> which</c><00:03:22.800><c> contains</c><00:03:23.430><c> the</c><00:03:23.730><c> the</c><00:03:24.060><c> the</c>

00:03:24.530 --> 00:03:24.540 align:start position:0%
file here which contains the the the
 

00:03:24.540 --> 00:03:26.479 align:start position:0%
file here which contains the the the
limit<00:03:24.870><c> in</c><00:03:25.019><c> terms</c><00:03:25.050><c> of</c><00:03:25.410><c> memory</c><00:03:25.620><c> that</c><00:03:25.830><c> docker</c>

00:03:26.479 --> 00:03:26.489 align:start position:0%
limit in terms of memory that docker
 

00:03:26.489 --> 00:03:28.550 align:start position:0%
limit in terms of memory that docker
container<00:03:26.970><c> has</c><00:03:27.300><c> here</c><00:03:27.750><c> so</c><00:03:28.200><c> remember</c><00:03:28.500><c> I'm</c>

00:03:28.550 --> 00:03:28.560 align:start position:0%
container has here so remember I'm
 

00:03:28.560 --> 00:03:30.410 align:start position:0%
container has here so remember I'm
running<00:03:28.800><c> J</c><00:03:28.980><c> shell</c><00:03:29.220><c> in</c><00:03:29.400><c> a</c><00:03:29.459><c> container</c><00:03:29.880><c> here</c><00:03:30.180><c> so</c>

00:03:30.410 --> 00:03:30.420 align:start position:0%
running J shell in a container here so
 

00:03:30.420 --> 00:03:32.870 align:start position:0%
running J shell in a container here so
if<00:03:30.540><c> we</c><00:03:30.570><c> run</c><00:03:30.840><c> the</c><00:03:31.709><c> system</c><00:03:32.190><c> memory</c><00:03:32.340><c> limit</c><00:03:32.700><c> let's</c>

00:03:32.870 --> 00:03:32.880 align:start position:0%
if we run the system memory limit let's
 

00:03:32.880 --> 00:03:34.699 align:start position:0%
if we run the system memory limit let's
see<00:03:33.090><c> what</c><00:03:33.269><c> let's</c><00:03:33.900><c> see</c><00:03:34.019><c> what</c><00:03:34.140><c> it</c><00:03:34.230><c> offers</c><00:03:34.350><c> and</c><00:03:34.650><c> it</c>

00:03:34.699 --> 00:03:34.709 align:start position:0%
see what let's see what it offers and it
 

00:03:34.709 --> 00:03:36.740 align:start position:0%
see what let's see what it offers and it
reports<00:03:35.010><c> it</c><00:03:35.250><c> back</c><00:03:35.430><c> in</c><00:03:35.640><c> megabytes</c><00:03:36.150><c> here's</c><00:03:36.510><c> as</c><00:03:36.690><c> I</c>

00:03:36.740 --> 00:03:36.750 align:start position:0%
reports it back in megabytes here's as I
 

00:03:36.750 --> 00:03:39.080 align:start position:0%
reports it back in megabytes here's as I
said<00:03:36.930><c> that's</c><00:03:37.140><c> a</c><00:03:37.200><c> huge</c><00:03:37.500><c> number</c><00:03:37.910><c> basically</c><00:03:38.910><c> it's</c>

00:03:39.080 --> 00:03:39.090 align:start position:0%
said that's a huge number basically it's
 

00:03:39.090 --> 00:03:40.880 align:start position:0%
said that's a huge number basically it's
saying<00:03:39.300><c> docker</c><00:03:39.900><c> containers</c><00:03:40.380><c> think</c><00:03:40.590><c> I</c><00:03:40.709><c> don't</c>

00:03:40.880 --> 00:03:40.890 align:start position:0%
saying docker containers think I don't
 

00:03:40.890 --> 00:03:42.979 align:start position:0%
saying docker containers think I don't
care<00:03:41.190><c> I</c><00:03:41.400><c> whatever</c><00:03:42.030><c> the</c><00:03:42.269><c> host</c><00:03:42.450><c> offers</c><00:03:42.660><c> me</c><00:03:42.959><c> I</c>

00:03:42.979 --> 00:03:42.989 align:start position:0%
care I whatever the host offers me I
 

00:03:42.989 --> 00:03:44.449 align:start position:0%
care I whatever the host offers me I
will<00:03:43.260><c> try</c><00:03:43.410><c> and</c><00:03:43.620><c> use</c><00:03:43.769><c> up</c><00:03:43.920><c> as</c><00:03:44.040><c> much</c><00:03:44.190><c> as</c><00:03:44.400><c> possible</c>

00:03:44.449 --> 00:03:44.459 align:start position:0%
will try and use up as much as possible
 

00:03:44.459 --> 00:03:47.630 align:start position:0%
will try and use up as much as possible
if<00:03:45.390><c> we</c><00:03:45.510><c> look</c><00:03:45.660><c> at</c><00:03:45.780><c> the</c><00:03:45.900><c> the</c><00:03:46.680><c> job</c><00:03:46.890><c> and</c><00:03:47.130><c> limit</c><00:03:47.370><c> here</c>

00:03:47.630 --> 00:03:47.640 align:start position:0%
if we look at the the job and limit here
 

00:03:47.640 --> 00:03:49.910 align:start position:0%
if we look at the the job and limit here
for<00:03:47.820><c> max</c><00:03:48.030><c> memory</c><00:03:48.269><c> what</c><00:03:49.140><c> we</c><00:03:49.230><c> have</c><00:03:49.410><c> was</c><00:03:49.560><c> we</c><00:03:49.680><c> is</c>

00:03:49.910 --> 00:03:49.920 align:start position:0%
for max memory what we have was we is
 

00:03:49.920 --> 00:03:53.960 align:start position:0%
for max memory what we have was we is
selecting<00:03:50.760><c> a</c><00:03:50.850><c> 500</c><00:03:51.450><c> megabyte</c><00:03:51.840><c> default</c><00:03:52.440><c> here</c><00:03:52.970><c> so</c>

00:03:53.960 --> 00:03:53.970 align:start position:0%
selecting a 500 megabyte default here so
 

00:03:53.970 --> 00:03:56.990 align:start position:0%
selecting a 500 megabyte default here so
that's<00:03:54.150><c> with</c><00:03:54.300><c> no</c><00:03:54.570><c> limits</c><00:03:55.500><c> whatsoever</c><00:03:55.560><c> set</c><00:03:56.400><c> so</c>

00:03:56.990 --> 00:03:57.000 align:start position:0%
that's with no limits whatsoever set so
 

00:03:57.000 --> 00:03:59.780 align:start position:0%
that's with no limits whatsoever set so
if<00:03:57.060><c> we</c><00:03:57.180><c> switch</c><00:03:57.300><c> back</c><00:03:57.630><c> and</c><00:03:57.930><c> we</c><00:03:58.260><c> run</c><00:03:58.530><c> a</c><00:03:58.830><c> container</c>

00:03:59.780 --> 00:03:59.790 align:start position:0%
if we switch back and we run a container
 

00:03:59.790 --> 00:04:01.070 align:start position:0%
if we switch back and we run a container
and<00:04:00.090><c> instead</c><00:04:00.420><c> what</c><00:04:00.570><c> we're</c><00:04:00.690><c> going</c><00:04:00.720><c> to</c><00:04:00.840><c> do</c><00:04:00.959><c> is</c>

00:04:01.070 --> 00:04:01.080 align:start position:0%
and instead what we're going to do is
 

00:04:01.080 --> 00:04:02.840 align:start position:0%
and instead what we're going to do is
going<00:04:01.200><c> to</c><00:04:01.260><c> limit</c><00:04:01.530><c> the</c><00:04:01.860><c> docker</c><00:04:02.160><c> container</c><00:04:02.640><c> to</c>

00:04:02.840 --> 00:04:02.850 align:start position:0%
going to limit the docker container to
 

00:04:02.850 --> 00:04:06.530 align:start position:0%
going to limit the docker container to
384<00:04:03.690><c> megabytes</c><00:04:04.170><c> and</c><00:04:04.380><c> limit</c><00:04:05.190><c> it</c><00:04:05.340><c> so</c><00:04:05.610><c> that</c><00:04:05.760><c> it</c>

00:04:06.530 --> 00:04:06.540 align:start position:0%
384 megabytes and limit it so that it
 

00:04:06.540 --> 00:04:10.250 align:start position:0%
384 megabytes and limit it so that it
spin<00:04:06.870><c> to</c><00:04:07.170><c> CPU</c><00:04:07.769><c> zero</c><00:04:08.130><c> so</c><00:04:08.430><c> basically</c><00:04:08.550><c> one</c><00:04:08.940><c> CPU</c><00:04:09.260><c> so</c>

00:04:10.250 --> 00:04:10.260 align:start position:0%
spin to CPU zero so basically one CPU so
 

00:04:10.260 --> 00:04:15.550 align:start position:0%
spin to CPU zero so basically one CPU so
let's<00:04:10.470><c> see</c><00:04:10.650><c> what</c><00:04:10.769><c> happens</c><00:04:11.100><c> when</c><00:04:11.190><c> we</c><00:04:11.250><c> run</c><00:04:11.459><c> that</c>

00:04:15.550 --> 00:04:15.560 align:start position:0%
 
 

00:04:15.560 --> 00:04:17.750 align:start position:0%
 
again<00:04:16.560><c> it's</c><00:04:16.739><c> running</c><00:04:17.100><c> J</c><00:04:17.280><c> shell</c><00:04:17.549><c> in</c><00:04:17.700><c> a</c>

00:04:17.750 --> 00:04:17.760 align:start position:0%
again it's running J shell in a
 

00:04:17.760 --> 00:04:22.190 align:start position:0%
again it's running J shell in a
container<00:04:18.180><c> here</c>

00:04:22.190 --> 00:04:22.200 align:start position:0%
 
 

00:04:22.200 --> 00:04:27.800 align:start position:0%
 
let's<00:04:22.910><c> get</c><00:04:23.910><c> the</c><00:04:24.150><c> available</c><00:04:24.660><c> processes</c><00:04:26.750><c> now</c><00:04:27.750><c> we</c>

00:04:27.800 --> 00:04:27.810 align:start position:0%
let's get the available processes now we
 

00:04:27.810 --> 00:04:30.740 align:start position:0%
let's get the available processes now we
only<00:04:28.560><c> have</c><00:04:29.250><c> one</c><00:04:29.660><c> processor</c><00:04:30.660><c> available</c>

00:04:30.740 --> 00:04:30.750 align:start position:0%
only have one processor available
 

00:04:30.750 --> 00:04:32.930 align:start position:0%
only have one processor available
compared<00:04:31.440><c> to</c><00:04:31.560><c> four</c><00:04:31.770><c> before</c><00:04:31.950><c> because</c><00:04:32.490><c> we</c><00:04:32.610><c> set</c>

00:04:32.930 --> 00:04:32.940 align:start position:0%
compared to four before because we set
 

00:04:32.940 --> 00:04:35.120 align:start position:0%
compared to four before because we set
the<00:04:33.210><c> restrictor</c><00:04:34.080><c> the</c><00:04:34.200><c> number</c><00:04:34.440><c> of</c><00:04:34.500><c> CPU</c><00:04:34.920><c> so</c>

00:04:35.120 --> 00:04:35.130 align:start position:0%
the restrictor the number of CPU so
 

00:04:35.130 --> 00:04:37.280 align:start position:0%
the restrictor the number of CPU so
that's<00:04:35.280><c> working</c><00:04:35.520><c> correctly</c><00:04:35.910><c> now</c><00:04:36.840><c> let's</c><00:04:37.050><c> just</c>

00:04:37.280 --> 00:04:37.290 align:start position:0%
that's working correctly now let's just
 

00:04:37.290 --> 00:04:40.370 align:start position:0%
that's working correctly now let's just
check<00:04:37.740><c> the</c><00:04:38.010><c> system</c><00:04:38.640><c> max</c><00:04:39.090><c> memory</c><00:04:39.330><c> we</c><00:04:40.020><c> see</c><00:04:40.230><c> it's</c>

00:04:40.370 --> 00:04:40.380 align:start position:0%
check the system max memory we see it's
 

00:04:40.380 --> 00:04:44.090 align:start position:0%
check the system max memory we see it's
384<00:04:41.340><c> because</c><00:04:41.700><c> we</c><00:04:41.850><c> limited</c><00:04:42.270><c> it</c><00:04:42.390><c> in</c><00:04:42.990><c> the</c><00:04:43.500><c> command</c>

00:04:44.090 --> 00:04:44.100 align:start position:0%
384 because we limited it in the command
 

00:04:44.100 --> 00:04:46.940 align:start position:0%
384 because we limited it in the command
here<00:04:44.610><c> like</c><00:04:45.270><c> so</c><00:04:45.600><c> now</c><00:04:46.080><c> let's</c><00:04:46.290><c> check</c><00:04:46.500><c> for</c><00:04:46.710><c> Java</c>

00:04:46.940 --> 00:04:46.950 align:start position:0%
here like so now let's check for Java
 

00:04:46.950 --> 00:04:51.170 align:start position:0%
here like so now let's check for Java
memory<00:04:47.190><c> limits</c><00:04:47.670><c> here</c><00:04:49.070><c> you</c><00:04:50.070><c> see</c><00:04:50.250><c> well</c><00:04:50.640><c> we</c><00:04:51.000><c> see</c>

00:04:51.170 --> 00:04:51.180 align:start position:0%
memory limits here you see well we see
 

00:04:51.180 --> 00:04:53.510 align:start position:0%
memory limits here you see well we see
that<00:04:51.330><c> Java</c><00:04:51.570><c> is</c><00:04:51.690><c> ignoring</c><00:04:52.200><c> that</c><00:04:52.590><c> constraint</c><00:04:53.340><c> in</c>

00:04:53.510 --> 00:04:53.520 align:start position:0%
that Java is ignoring that constraint in
 

00:04:53.520 --> 00:04:53.960 align:start position:0%
that Java is ignoring that constraint in
docker

00:04:53.960 --> 00:04:53.970 align:start position:0%
docker
 

00:04:53.970 --> 00:04:55.790 align:start position:0%
docker
and<00:04:54.420><c> it's</c><00:04:54.540><c> actually</c><00:04:54.930><c> trying</c><00:04:55.260><c> to</c><00:04:55.350><c> grab</c><00:04:55.590><c> more</c>

00:04:55.790 --> 00:04:55.800 align:start position:0%
and it's actually trying to grab more
 

00:04:55.800 --> 00:04:57.050 align:start position:0%
and it's actually trying to grab more
memory<00:04:56.160><c> than</c><00:04:56.190><c> is</c><00:04:56.430><c> available</c><00:04:56.580><c> in</c><00:04:56.970><c> the</c>

00:04:57.050 --> 00:04:57.060 align:start position:0%
memory than is available in the
 

00:04:57.060 --> 00:04:57.770 align:start position:0%
memory than is available in the
container

00:04:57.770 --> 00:04:57.780 align:start position:0%
container
 

00:04:57.780 --> 00:05:00.260 align:start position:0%
container
now<00:04:58.380><c> when</c><00:04:58.740><c> Java</c><00:04:59.040><c> tries</c><00:04:59.370><c> to</c><00:04:59.610><c> allocate</c><00:05:00.060><c> ball</c>

00:05:00.260 --> 00:05:00.270 align:start position:0%
now when Java tries to allocate ball
 

00:05:00.270 --> 00:05:02.330 align:start position:0%
now when Java tries to allocate ball
memory<00:05:00.660><c> like</c><00:05:00.900><c> this</c><00:05:01.140><c> it</c><00:05:01.380><c> I</c><00:05:01.590><c> think</c><00:05:01.860><c> it</c><00:05:01.950><c> depends</c>

00:05:02.330 --> 00:05:02.340 align:start position:0%
memory like this it I think it depends
 

00:05:02.340 --> 00:05:04.880 align:start position:0%
memory like this it I think it depends
on<00:05:02.430><c> the</c><00:05:02.580><c> policy</c><00:05:03.060><c> of</c><00:05:03.210><c> how</c><00:05:04.200><c> you</c><00:05:04.260><c> run</c><00:05:04.530><c> your</c><00:05:04.590><c> docker</c>

00:05:04.880 --> 00:05:04.890 align:start position:0%
on the policy of how you run your docker
 

00:05:04.890 --> 00:05:06.740 align:start position:0%
on the policy of how you run your docker
containers<00:05:05.490><c> whether</c><00:05:05.670><c> the</c><00:05:05.850><c> Java</c><00:05:06.090><c> process</c><00:05:06.570><c> is</c>

00:05:06.740 --> 00:05:06.750 align:start position:0%
containers whether the Java process is
 

00:05:06.750 --> 00:05:08.420 align:start position:0%
containers whether the Java process is
killed<00:05:07.050><c> or</c><00:05:07.230><c> not</c><00:05:07.260><c> as</c><00:05:07.590><c> soon</c><00:05:07.800><c> as</c><00:05:07.890><c> it</c><00:05:08.010><c> runs</c><00:05:08.190><c> out</c><00:05:08.370><c> of</c>

00:05:08.420 --> 00:05:08.430 align:start position:0%
killed or not as soon as it runs out of
 

00:05:08.430 --> 00:05:12.830 align:start position:0%
killed or not as soon as it runs out of
memory<00:05:08.730><c> and</c><00:05:08.880><c> swap</c><00:05:09.270><c> so</c><00:05:09.930><c> how</c><00:05:10.080><c> do</c><00:05:10.140><c> we</c><00:05:10.230><c> fix</c><00:05:10.530><c> this</c><00:05:11.840><c> so</c>

00:05:12.830 --> 00:05:12.840 align:start position:0%
memory and swap so how do we fix this so
 

00:05:12.840 --> 00:05:14.930 align:start position:0%
memory and swap so how do we fix this so
we<00:05:12.960><c> can</c><00:05:13.140><c> use</c><00:05:13.380><c> the</c><00:05:13.560><c> options</c><00:05:14.160><c> that</c><00:05:14.370><c> I</c><00:05:14.580><c> showed</c>

00:05:14.930 --> 00:05:14.940 align:start position:0%
we can use the options that I showed
 

00:05:14.940 --> 00:05:16.820 align:start position:0%
we can use the options that I showed
earlier<00:05:15.150><c> the</c><00:05:15.390><c> experimental</c><00:05:16.170><c> options</c><00:05:16.560><c> that</c><00:05:16.710><c> we</c>

00:05:16.820 --> 00:05:16.830 align:start position:0%
earlier the experimental options that we
 

00:05:16.830 --> 00:05:19.600 align:start position:0%
earlier the experimental options that we
pass<00:05:17.040><c> into</c><00:05:17.250><c> hotspot</c><00:05:17.790><c> now</c><00:05:18.420><c> you</c><00:05:18.480><c> notice</c><00:05:18.870><c> they're</c>

00:05:19.600 --> 00:05:19.610 align:start position:0%
pass into hotspot now you notice they're
 

00:05:19.610 --> 00:05:22.730 align:start position:0%
pass into hotspot now you notice they're
expressed<00:05:20.610><c> twice</c><00:05:20.970><c> here</c><00:05:21.300><c> because</c><00:05:21.660><c> of</c><00:05:21.840><c> the</c><00:05:22.020><c> way</c>

00:05:22.730 --> 00:05:22.740 align:start position:0%
expressed twice here because of the way
 

00:05:22.740 --> 00:05:24.860 align:start position:0%
expressed twice here because of the way
the<00:05:23.130><c> implementation</c><00:05:23.790><c> Civics</c><00:05:24.270><c> of</c><00:05:24.420><c> JCL</c>

00:05:24.860 --> 00:05:24.870 align:start position:0%
the implementation Civics of JCL
 

00:05:24.870 --> 00:05:27.440 align:start position:0%
the implementation Civics of JCL
actually<00:05:25.260><c> runs</c><00:05:25.470><c> to</c><00:05:25.680><c> java</c><00:05:25.950><c> processes</c><00:05:26.610><c> one</c><00:05:27.180><c> for</c>

00:05:27.440 --> 00:05:27.450 align:start position:0%
actually runs to java processes one for
 

00:05:27.450 --> 00:05:29.840 align:start position:0%
actually runs to java processes one for
the<00:05:27.510><c> repple</c><00:05:27.930><c> and</c><00:05:28.110><c> one</c><00:05:28.590><c> for</c><00:05:28.890><c> executing</c><00:05:29.550><c> the</c>

00:05:29.840 --> 00:05:29.850 align:start position:0%
the repple and one for executing the
 

00:05:29.850 --> 00:05:33.530 align:start position:0%
the repple and one for executing the
java<00:05:30.120><c> snippets</c><00:05:30.690><c> that</c><00:05:30.990><c> we</c><00:05:31.650><c> we</c><00:05:32.040><c> typed</c><00:05:32.400><c> in</c><00:05:32.640><c> so</c>

00:05:33.530 --> 00:05:33.540 align:start position:0%
java snippets that we we typed in so
 

00:05:33.540 --> 00:05:35.210 align:start position:0%
java snippets that we we typed in so
let's<00:05:33.750><c> run</c><00:05:33.960><c> that</c><00:05:34.110><c> and</c><00:05:34.410><c> see</c><00:05:34.440><c> what</c><00:05:34.980><c> how</c><00:05:35.190><c> about</c>

00:05:35.210 --> 00:05:35.220 align:start position:0%
let's run that and see what how about
 

00:05:35.220 --> 00:05:44.540 align:start position:0%
let's run that and see what how about
behaves

00:05:44.540 --> 00:05:44.550 align:start position:0%
 
 

00:05:44.550 --> 00:05:47.600 align:start position:0%
 
okay<00:05:45.389><c> let's</c><00:05:45.599><c> get</c><00:05:45.930><c> the</c><00:05:46.139><c> system</c><00:05:46.560><c> memory</c><00:05:46.770><c> here</c><00:05:47.190><c> it</c>

00:05:47.600 --> 00:05:47.610 align:start position:0%
okay let's get the system memory here it
 

00:05:47.610 --> 00:05:49.249 align:start position:0%
okay let's get the system memory here it
should<00:05:47.849><c> be</c><00:05:48.030><c> free</c><00:05:48.240><c> it</c><00:05:48.360><c> for</c><00:05:48.599><c> before</c><00:05:48.900><c> and</c><00:05:48.960><c> let's</c>

00:05:49.249 --> 00:05:49.259 align:start position:0%
should be free it for before and let's
 

00:05:49.259 --> 00:05:53.450 align:start position:0%
should be free it for before and let's
get<00:05:49.440><c> the</c><00:05:49.849><c> Java</c><00:05:50.849><c> max</c><00:05:51.150><c> memory</c><00:05:51.389><c> here</c><00:05:52.039><c> and</c><00:05:53.039><c> we</c><00:05:53.220><c> see</c>

00:05:53.450 --> 00:05:53.460 align:start position:0%
get the Java max memory here and we see
 

00:05:53.460 --> 00:05:56.089 align:start position:0%
get the Java max memory here and we see
that<00:05:53.639><c> it's</c><00:05:53.819><c> down</c><00:05:54.000><c> to</c><00:05:54.319><c> 121</c><00:05:55.319><c> megabytes</c><00:05:55.830><c> about</c><00:05:56.069><c> a</c>

00:05:56.089 --> 00:05:56.099 align:start position:0%
that it's down to 121 megabytes about a
 

00:05:56.099 --> 00:05:58.010 align:start position:0%
that it's down to 121 megabytes about a
third<00:05:56.430><c> so</c><00:05:56.970><c> it's</c><00:05:57.090><c> doing</c><00:05:57.300><c> the</c><00:05:57.389><c> right</c><00:05:57.419><c> thing</c><00:05:57.810><c> here</c>

00:05:58.010 --> 00:05:58.020 align:start position:0%
third so it's doing the right thing here
 

00:05:58.020 --> 00:05:59.300 align:start position:0%
third so it's doing the right thing here
it's<00:05:58.169><c> trying</c><00:05:58.409><c> to</c><00:05:58.470><c> choose</c><00:05:58.710><c> reasonable</c>

00:05:59.300 --> 00:05:59.310 align:start position:0%
it's trying to choose reasonable
 

00:05:59.310 --> 00:06:02.059 align:start position:0%
it's trying to choose reasonable
defaults<00:05:59.819><c> of</c><00:06:00.419><c> memory</c><00:06:00.810><c> uses</c><00:06:01.139><c> based</c><00:06:01.379><c> on</c><00:06:01.620><c> the</c><00:06:01.800><c> the</c>

00:06:02.059 --> 00:06:02.069 align:start position:0%
defaults of memory uses based on the the
 

00:06:02.069 --> 00:06:03.800 align:start position:0%
defaults of memory uses based on the the
max<00:06:02.280><c> memory</c><00:06:02.490><c> constraints</c><00:06:03.090><c> of</c><00:06:03.300><c> the</c><00:06:03.419><c> container</c>

00:06:03.800 --> 00:06:03.810 align:start position:0%
max memory constraints of the container
 

00:06:03.810 --> 00:06:05.930 align:start position:0%
max memory constraints of the container
itself<00:06:04.259><c> so</c><00:06:04.560><c> you</c><00:06:04.620><c> can</c><00:06:04.710><c> you</c><00:06:05.310><c> can</c><00:06:05.460><c> use</c><00:06:05.759><c> these</c>

00:06:05.930 --> 00:06:05.940 align:start position:0%
itself so you can you can use these
 

00:06:05.940 --> 00:06:10.129 align:start position:0%
itself so you can you can use these
options<00:06:06.449><c> you</c><00:06:06.750><c> have</c><00:06:07.319><c> to</c><00:06:07.580><c> add</c><00:06:08.580><c> an</c><00:06:09.360><c> experimental</c>

00:06:10.129 --> 00:06:10.139 align:start position:0%
options you have to add an experimental
 

00:06:10.139 --> 00:06:12.020 align:start position:0%
options you have to add an experimental
flag<00:06:10.409><c> first</c><00:06:10.680><c> before</c><00:06:10.949><c> you</c><00:06:11.190><c> apply</c><00:06:11.490><c> the</c><00:06:11.520><c> option</c>

00:06:12.020 --> 00:06:12.030 align:start position:0%
flag first before you apply the option
 

00:06:12.030 --> 00:06:14.059 align:start position:0%
flag first before you apply the option
here<00:06:12.270><c> to</c><00:06:12.300><c> use</c><00:06:12.659><c> and</c><00:06:12.870><c> would</c><00:06:13.409><c> be</c><00:06:13.560><c> interested</c><00:06:13.979><c> in</c>

00:06:14.059 --> 00:06:14.069 align:start position:0%
here to use and would be interested in
 

00:06:14.069 --> 00:06:15.559 align:start position:0%
here to use and would be interested in
feedback<00:06:14.340><c> of</c><00:06:14.639><c> how</c><00:06:14.669><c> this</c><00:06:14.940><c> works</c><00:06:15.180><c> for</c><00:06:15.389><c> you</c><00:06:15.449><c> when</c>

00:06:15.559 --> 00:06:15.569 align:start position:0%
feedback of how this works for you when
 

00:06:15.569 --> 00:06:21.469 align:start position:0%
feedback of how this works for you when
running<00:06:15.870><c> Java</c><00:06:16.139><c> and</c><00:06:16.349><c> containers</c><00:06:20.090><c> ok</c><00:06:21.090><c> back</c><00:06:21.449><c> to</c>

00:06:21.469 --> 00:06:21.479 align:start position:0%
running Java and containers ok back to
 

00:06:21.479 --> 00:06:26.870 align:start position:0%
running Java and containers ok back to
the<00:06:21.860><c> second</c><00:06:22.860><c> part</c><00:06:22.889><c> of</c><00:06:23.159><c> my</c><00:06:23.220><c> presentation</c><00:06:25.880><c> so</c>

00:06:26.870 --> 00:06:26.880 align:start position:0%
the second part of my presentation so
 

00:06:26.880 --> 00:06:28.339 align:start position:0%
the second part of my presentation so
the<00:06:26.970><c> second</c><00:06:27.300><c> part</c><00:06:27.449><c> of</c><00:06:27.509><c> a</c><00:06:27.599><c> presentation</c><00:06:28.259><c> is</c>

00:06:28.339 --> 00:06:28.349 align:start position:0%
the second part of a presentation is
 

00:06:28.349 --> 00:06:30.499 align:start position:0%
the second part of a presentation is
reducing<00:06:28.919><c> the</c><00:06:29.009><c> size</c><00:06:29.280><c> of</c><00:06:29.520><c> JDK</c><00:06:29.880><c> 9</c><00:06:30.150><c> and</c><00:06:30.330><c> docker</c>

00:06:30.499 --> 00:06:30.509 align:start position:0%
reducing the size of JDK 9 and docker
 

00:06:30.509 --> 00:06:33.860 align:start position:0%
reducing the size of JDK 9 and docker
images<00:06:30.990><c> so</c><00:06:31.560><c> JDK</c><00:06:32.310><c> 9</c><00:06:32.460><c> is</c><00:06:32.580><c> modular</c><00:06:33.060><c> thanks</c><00:06:33.780><c> to</c>

00:06:33.860 --> 00:06:33.870 align:start position:0%
images so JDK 9 is modular thanks to
 

00:06:33.870 --> 00:06:36.350 align:start position:0%
images so JDK 9 is modular thanks to
project<00:06:34.259><c> jigsaw</c><00:06:34.650><c> that's</c><00:06:35.490><c> for</c><00:06:35.849><c> the</c><00:06:36.120><c> major</c>

00:06:36.350 --> 00:06:36.360 align:start position:0%
project jigsaw that's for the major
 

00:06:36.360 --> 00:06:39.080 align:start position:0%
project jigsaw that's for the major
release<00:06:36.719><c> driver</c><00:06:37.080><c> of</c><00:06:37.289><c> JDK</c><00:06:37.590><c> 9</c><00:06:37.919><c> and</c><00:06:38.190><c> JDK</c><00:06:38.909><c> nine</c>

00:06:39.080 --> 00:06:39.090 align:start position:0%
release driver of JDK 9 and JDK nine
 

00:06:39.090 --> 00:06:40.939 align:start position:0%
release driver of JDK 9 and JDK nine
introduces<00:06:39.630><c> modules</c><00:06:40.139><c> to</c><00:06:40.349><c> the</c><00:06:40.380><c> Java</c><00:06:40.680><c> platform</c>

00:06:40.939 --> 00:06:40.949 align:start position:0%
introduces modules to the Java platform
 

00:06:40.949 --> 00:06:42.980 align:start position:0%
introduces modules to the Java platform
so<00:06:41.550><c> what</c><00:06:41.669><c> is</c><00:06:41.759><c> a</c><00:06:41.789><c> module</c><00:06:42.180><c> the</c><00:06:42.300><c> module</c><00:06:42.419><c> is</c><00:06:42.690><c> a</c><00:06:42.719><c> set</c>

00:06:42.980 --> 00:06:42.990 align:start position:0%
so what is a module the module is a set
 

00:06:42.990 --> 00:06:45.110 align:start position:0%
so what is a module the module is a set
of<00:06:43.080><c> packages</c><00:06:43.710><c> designed</c><00:06:44.069><c> for</c><00:06:44.430><c> reuse</c><00:06:44.759><c> and</c><00:06:44.909><c> very</c>

00:06:45.110 --> 00:06:45.120 align:start position:0%
of packages designed for reuse and very
 

00:06:45.120 --> 00:06:47.809 align:start position:0%
of packages designed for reuse and very
simple<00:06:45.569><c> definition</c><00:06:45.960><c> and</c><00:06:46.620><c> modules</c><00:06:47.490><c> improve</c>

00:06:47.809 --> 00:06:47.819 align:start position:0%
simple definition and modules improve
 

00:06:47.819 --> 00:06:49.820 align:start position:0%
simple definition and modules improve
reliability<00:06:48.210><c> of</c><00:06:48.750><c> maintainability</c><00:06:49.380><c> of</c><00:06:49.590><c> your</c>

00:06:49.820 --> 00:06:49.830 align:start position:0%
reliability of maintainability of your
 

00:06:49.830 --> 00:06:52.670 align:start position:0%
reliability of maintainability of your
programs<00:06:50.280><c> and</c><00:06:50.569><c> we've</c><00:06:51.569><c> applied</c><00:06:51.750><c> modules</c><00:06:52.409><c> to</c>

00:06:52.670 --> 00:06:52.680 align:start position:0%
programs and we've applied modules to
 

00:06:52.680 --> 00:06:55.820 align:start position:0%
programs and we've applied modules to
JDK<00:06:53.340><c> 9</c><00:06:53.520><c> it</c><00:06:53.759><c> is</c><00:06:54.060><c> itself</c><00:06:54.630><c> composed</c><00:06:55.020><c> of</c><00:06:55.259><c> 79</c>

00:06:55.820 --> 00:06:55.830 align:start position:0%
JDK 9 it is itself composed of 79
 

00:06:55.830 --> 00:06:57.890 align:start position:0%
JDK 9 it is itself composed of 79
modules<00:06:56.219><c> we've</c><00:06:56.400><c> refactored</c><00:06:56.849><c> the</c><00:06:57.240><c> whole</c><00:06:57.389><c> JDK</c>

00:06:57.890 --> 00:06:57.900 align:start position:0%
modules we've refactored the whole JDK
 

00:06:57.900 --> 00:07:01.010 align:start position:0%
modules we've refactored the whole JDK
over<00:06:58.740><c> a</c><00:06:58.800><c> number</c><00:06:59.009><c> of</c><00:06:59.219><c> years</c><00:06:59.340><c> and</c><00:07:00.000><c> it</c><00:07:00.150><c> now</c><00:07:00.449><c> we</c>

00:07:01.010 --> 00:07:01.020 align:start position:0%
over a number of years and it now we
 

00:07:01.020 --> 00:07:02.870 align:start position:0%
over a number of years and it now we
find<00:07:01.440><c> it</c><00:07:01.560><c> more</c><00:07:01.710><c> reliable</c><00:07:01.979><c> and</c><00:07:02.310><c> maintainable</c>

00:07:02.870 --> 00:07:02.880 align:start position:0%
find it more reliable and maintainable
 

00:07:02.880 --> 00:07:05.629 align:start position:0%
find it more reliable and maintainable
itself<00:07:03.300><c> as</c><00:07:03.539><c> well</c><00:07:03.719><c> JDK</c><00:07:04.259><c> 9</c><00:07:04.440><c> comes</c><00:07:04.800><c> with</c><00:07:05.130><c> j-link</c>

00:07:05.629 --> 00:07:05.639 align:start position:0%
itself as well JDK 9 comes with j-link
 

00:07:05.639 --> 00:07:08.120 align:start position:0%
itself as well JDK 9 comes with j-link
and<00:07:06.360><c> this</c><00:07:06.509><c> is</c><00:07:06.690><c> a</c><00:07:06.719><c> very</c><00:07:07.199><c> interesting</c><00:07:07.469><c> tool</c><00:07:07.889><c> that</c>

00:07:08.120 --> 00:07:08.130 align:start position:0%
and this is a very interesting tool that
 

00:07:08.130 --> 00:07:10.129 align:start position:0%
and this is a very interesting tool that
you<00:07:08.219><c> can</c><00:07:08.370><c> use</c><00:07:08.430><c> to</c><00:07:09.029><c> create</c><00:07:09.150><c> custom</c><00:07:09.779><c> Java</c>

00:07:10.129 --> 00:07:10.139 align:start position:0%
you can use to create custom Java
 

00:07:10.139 --> 00:07:13.040 align:start position:0%
you can use to create custom Java
runtimes<00:07:10.710><c> for</c><00:07:11.460><c> example</c><00:07:11.940><c> a</c><00:07:12.090><c> Java</c><00:07:12.330><c> Runtime</c><00:07:12.750><c> just</c>

00:07:13.040 --> 00:07:13.050 align:start position:0%
runtimes for example a Java Runtime just
 

00:07:13.050 --> 00:07:15.559 align:start position:0%
runtimes for example a Java Runtime just
consisting<00:07:13.650><c> of</c><00:07:13.800><c> the</c><00:07:14.520><c> Java</c><00:07:14.729><c> based</c><00:07:14.940><c> module</c><00:07:15.419><c> that</c>

00:07:15.559 --> 00:07:15.569 align:start position:0%
consisting of the Java based module that
 

00:07:15.569 --> 00:07:17.180 align:start position:0%
consisting of the Java based module that
is<00:07:15.719><c> the</c><00:07:15.900><c> module</c><00:07:16.080><c> that</c><00:07:16.409><c> all</c><00:07:16.500><c> other</c><00:07:16.770><c> modules</c>

00:07:17.180 --> 00:07:17.190 align:start position:0%
is the module that all other modules
 

00:07:17.190 --> 00:07:20.540 align:start position:0%
is the module that all other modules
depend<00:07:17.940><c> on</c><00:07:18.090><c> so</c><00:07:18.870><c> what</c><00:07:19.050><c> we</c><00:07:19.139><c> can</c><00:07:19.289><c> do</c><00:07:19.529><c> is</c><00:07:19.830><c> we</c><00:07:20.370><c> can</c>

00:07:20.540 --> 00:07:20.550 align:start position:0%
depend on so what we can do is we can
 

00:07:20.550 --> 00:07:22.730 align:start position:0%
depend on so what we can do is we can
use<00:07:20.610><c> a</c><00:07:20.909><c> distribution</c><00:07:21.719><c> called</c><00:07:21.870><c> alpine</c><00:07:22.349><c> linux</c>

00:07:22.730 --> 00:07:22.740 align:start position:0%
use a distribution called alpine linux
 

00:07:22.740 --> 00:07:26.269 align:start position:0%
use a distribution called alpine linux
and<00:07:23.039><c> we</c><00:07:23.759><c> can</c><00:07:24.029><c> use</c><00:07:24.810><c> the</c><00:07:25.110><c> work</c><00:07:25.319><c> done</c><00:07:25.650><c> by</c><00:07:25.889><c> the</c><00:07:25.949><c> open</c>

00:07:26.269 --> 00:07:26.279 align:start position:0%
and we can use the work done by the open
 

00:07:26.279 --> 00:07:28.640 align:start position:0%
and we can use the work done by the open
JDK<00:07:26.430><c> project</c><00:07:27.090><c> Portola</c><00:07:27.539><c> to</c><00:07:27.779><c> provide</c><00:07:28.080><c> a</c><00:07:28.110><c> port</c><00:07:28.469><c> of</c>

00:07:28.640 --> 00:07:28.650 align:start position:0%
JDK project Portola to provide a port of
 

00:07:28.650 --> 00:07:31.580 align:start position:0%
JDK project Portola to provide a port of
a<00:07:28.740><c> JDK</c><00:07:29.190><c> to</c><00:07:29.250><c> our</c><00:07:29.490><c> pine</c><00:07:29.729><c> Linux</c><00:07:30.090><c> and</c><00:07:30.590><c> specifically</c>

00:07:31.580 --> 00:07:31.590 align:start position:0%
a JDK to our pine Linux and specifically
 

00:07:31.590 --> 00:07:33.890 align:start position:0%
a JDK to our pine Linux and specifically
it's<00:07:32.099><c> to</c><00:07:32.340><c> the</c><00:07:32.460><c> muscle</c><00:07:32.819><c> C</c><00:07:33.060><c> library</c><00:07:33.449><c> for</c><00:07:33.569><c> alpine</c>

00:07:33.890 --> 00:07:33.900 align:start position:0%
it's to the muscle C library for alpine
 

00:07:33.900 --> 00:07:35.659 align:start position:0%
it's to the muscle C library for alpine
Linux<00:07:34.259><c> users</c><00:07:34.889><c> now</c><00:07:35.069><c> up</c><00:07:35.190><c> in</c><00:07:35.310><c> Linux</c><00:07:35.550><c> is</c>

00:07:35.659 --> 00:07:35.669 align:start position:0%
Linux users now up in Linux is
 

00:07:35.669 --> 00:07:37.570 align:start position:0%
Linux users now up in Linux is
interesting<00:07:36.180><c> because</c><00:07:36.270><c> it's</c><00:07:36.539><c> a</c><00:07:36.599><c> very</c><00:07:36.810><c> small</c>

00:07:37.570 --> 00:07:37.580 align:start position:0%
interesting because it's a very small
 

00:07:37.580 --> 00:07:41.360 align:start position:0%
interesting because it's a very small
distribution<00:07:38.580><c> and</c><00:07:39.169><c> it</c><00:07:40.169><c> uses</c><00:07:40.590><c> muscle</c><00:07:40.800><c> C</c><00:07:41.130><c> rather</c>

00:07:41.360 --> 00:07:41.370 align:start position:0%
distribution and it uses muscle C rather
 

00:07:41.370 --> 00:07:43.129 align:start position:0%
distribution and it uses muscle C rather
than<00:07:41.490><c> lip</c><00:07:41.699><c> C</c><00:07:41.940><c> to</c><00:07:42.180><c> reduce</c><00:07:42.479><c> the</c><00:07:42.630><c> size</c><00:07:42.900><c> of</c><00:07:43.080><c> the</c>

00:07:43.129 --> 00:07:43.139 align:start position:0%
than lip C to reduce the size of the
 

00:07:43.139 --> 00:07:45.230 align:start position:0%
than lip C to reduce the size of the
distribution<00:07:43.800><c> there</c><00:07:44.250><c> early</c><00:07:44.490><c> access</c><00:07:44.849><c> builds</c>

00:07:45.230 --> 00:07:45.240 align:start position:0%
distribution there early access builds
 

00:07:45.240 --> 00:07:46.939 align:start position:0%
distribution there early access builds
of<00:07:45.330><c> the</c><00:07:45.419><c> jdk</c><00:07:45.810><c> port</c><00:07:46.080><c> to</c><00:07:46.199><c> alpine</c><00:07:46.469><c> linux</c><00:07:46.800><c> are</c>

00:07:46.939 --> 00:07:46.949 align:start position:0%
of the jdk port to alpine linux are
 

00:07:46.949 --> 00:07:49.129 align:start position:0%
of the jdk port to alpine linux are
available<00:07:47.460><c> at</c><00:07:47.699><c> the</c><00:07:47.909><c> link</c><00:07:48.419><c> there</c><00:07:48.810><c> and</c><00:07:49.050><c> the</c>

00:07:49.129 --> 00:07:49.139 align:start position:0%
available at the link there and the
 

00:07:49.139 --> 00:07:51.439 align:start position:0%
available at the link there and the
slides<00:07:49.440><c> and</c><00:07:49.800><c> we</c><00:07:50.430><c> can</c><00:07:50.550><c> use</c><00:07:50.699><c> J</c><00:07:50.909><c> link</c><00:07:51.090><c> to</c><00:07:51.180><c> create</c>

00:07:51.439 --> 00:07:51.449 align:start position:0%
slides and we can use J link to create
 

00:07:51.449 --> 00:07:54.409 align:start position:0%
slides and we can use J link to create
custom<00:07:52.139><c> Java</c><00:07:52.979><c> runtimes</c><00:07:53.460><c> for</c><00:07:53.729><c> our</c><00:07:53.820><c> PI</c><00:07:54.000><c> in</c><00:07:54.060><c> Linux</c>

00:07:54.409 --> 00:07:54.419 align:start position:0%
custom Java runtimes for our PI in Linux
 

00:07:54.419 --> 00:07:56.360 align:start position:0%
custom Java runtimes for our PI in Linux
and<00:07:54.630><c> because</c><00:07:54.839><c> our</c><00:07:54.960><c> PI</c><00:07:55.169><c> Linux</c><00:07:55.500><c> is</c><00:07:55.680><c> small</c><00:07:55.949><c> and</c><00:07:56.250><c> we</c>

00:07:56.360 --> 00:07:56.370 align:start position:0%
and because our PI Linux is small and we
 

00:07:56.370 --> 00:07:57.730 align:start position:0%
and because our PI Linux is small and we
can<00:07:56.399><c> create</c><00:07:56.610><c> smaller</c><00:07:56.969><c> custom</c>

00:07:57.730 --> 00:07:57.740 align:start position:0%
can create smaller custom
 

00:07:57.740 --> 00:07:59.800 align:start position:0%
can create smaller custom
Java<00:07:58.160><c> runtimes</c><00:07:58.669><c> it</c><00:07:58.970><c> adds</c><00:07:59.120><c> for</c><00:07:59.419><c> a</c><00:07:59.449><c> smaller</c>

00:07:59.800 --> 00:07:59.810 align:start position:0%
Java runtimes it adds for a smaller
 

00:07:59.810 --> 00:08:02.020 align:start position:0%
Java runtimes it adds for a smaller
docker<00:08:00.349><c> image</c><00:08:00.710><c> so</c><00:08:00.979><c> I'm</c><00:08:01.069><c> going</c><00:08:01.280><c> to</c><00:08:01.340><c> explain</c><00:08:01.729><c> how</c>

00:08:02.020 --> 00:08:02.030 align:start position:0%
docker image so I'm going to explain how
 

00:08:02.030 --> 00:08:05.070 align:start position:0%
docker image so I'm going to explain how
we<00:08:02.270><c> can</c><00:08:02.509><c> do</c><00:08:02.690><c> that</c><00:08:02.840><c> so</c><00:08:03.800><c> first</c><00:08:04.160><c> of</c><00:08:04.370><c> all</c><00:08:04.490><c> I</c><00:08:04.669><c> used</c>

00:08:05.070 --> 00:08:05.080 align:start position:0%
we can do that so first of all I used
 

00:08:05.080 --> 00:08:07.689 align:start position:0%
we can do that so first of all I used
when<00:08:06.080><c> I</c><00:08:06.110><c> was</c><00:08:06.199><c> running</c><00:08:06.530><c> the</c><00:08:06.650><c> J</c><00:08:06.830><c> shell</c><00:08:07.099><c> before</c><00:08:07.310><c> I</c>

00:08:07.689 --> 00:08:07.699 align:start position:0%
when I was running the J shell before I
 

00:08:07.699 --> 00:08:09.909 align:start position:0%
when I was running the J shell before I
was<00:08:07.970><c> using</c><00:08:08.270><c> a</c><00:08:08.630><c> pre-existing</c><00:08:09.020><c> image</c><00:08:09.680><c> I</c><00:08:09.860><c> created</c>

00:08:09.909 --> 00:08:09.919 align:start position:0%
was using a pre-existing image I created
 

00:08:09.919 --> 00:08:13.629 align:start position:0%
was using a pre-existing image I created
called<00:08:10.430><c> JDK</c><00:08:10.910><c> 9</c><00:08:11.120><c> Alpine</c><00:08:11.870><c> so</c><00:08:12.050><c> that</c><00:08:12.199><c> was</c><00:08:12.380><c> JDK</c><00:08:13.190><c> 9</c><00:08:13.400><c> on</c>

00:08:13.629 --> 00:08:13.639 align:start position:0%
called JDK 9 Alpine so that was JDK 9 on
 

00:08:13.639 --> 00:08:16.540 align:start position:0%
called JDK 9 Alpine so that was JDK 9 on
Alpine<00:08:14.449><c> Linux</c><00:08:14.900><c> a</c><00:08:15.020><c> full</c><00:08:15.229><c> JDK</c><00:08:15.740><c> there</c><00:08:16.009><c> if</c><00:08:16.099><c> we</c><00:08:16.280><c> if</c>

00:08:16.540 --> 00:08:16.550 align:start position:0%
Alpine Linux a full JDK there if we if
 

00:08:16.550 --> 00:08:21.400 align:start position:0%
Alpine Linux a full JDK there if we if
we<00:08:16.789><c> list</c><00:08:17.410><c> images</c><00:08:18.880><c> here</c><00:08:19.880><c> we</c><00:08:20.840><c> can</c><00:08:21.050><c> see</c><00:08:21.199><c> I</c><00:08:21.229><c> have</c>

00:08:21.400 --> 00:08:21.410 align:start position:0%
we list images here we can see I have
 

00:08:21.410 --> 00:08:23.469 align:start position:0%
we list images here we can see I have
two<00:08:21.590><c> images</c><00:08:21.680><c> in</c><00:08:21.949><c> my</c><00:08:22.220><c> docker</c><00:08:22.430><c> registry</c><00:08:22.669><c> locally</c>

00:08:23.469 --> 00:08:23.479 align:start position:0%
two images in my docker registry locally
 

00:08:23.479 --> 00:08:26.350 align:start position:0%
two images in my docker registry locally
I<00:08:23.509><c> have</c><00:08:23.720><c> Alpine</c><00:08:24.110><c> Linux</c><00:08:24.470><c> which</c><00:08:25.099><c> is</c><00:08:25.400><c> all</c><00:08:26.300><c> of</c>

00:08:26.350 --> 00:08:26.360 align:start position:0%
I have Alpine Linux which is all of
 

00:08:26.360 --> 00:08:29.020 align:start position:0%
I have Alpine Linux which is all of
about<00:08:26.840><c> 4</c><00:08:27.169><c> Meg</c><00:08:27.410><c> and</c><00:08:27.680><c> I</c><00:08:27.740><c> have</c><00:08:27.889><c> JDK</c><00:08:28.340><c> 9</c><00:08:28.490><c> Alpine</c>

00:08:29.020 --> 00:08:29.030 align:start position:0%
about 4 Meg and I have JDK 9 Alpine
 

00:08:29.030 --> 00:08:31.930 align:start position:0%
about 4 Meg and I have JDK 9 Alpine
latest<00:08:29.599><c> which</c><00:08:29.780><c> is</c><00:08:30.340><c> 356</c><00:08:31.340><c> megabytes</c><00:08:31.819><c> so</c>

00:08:31.930 --> 00:08:31.940 align:start position:0%
latest which is 356 megabytes so
 

00:08:31.940 --> 00:08:34.449 align:start position:0%
latest which is 356 megabytes so
basically<00:08:32.450><c> the</c><00:08:32.630><c> whole</c><00:08:32.659><c> JDK</c><00:08:33.289><c> is</c><00:08:33.409><c> about</c><00:08:33.589><c> 350</c>

00:08:34.449 --> 00:08:34.459 align:start position:0%
basically the whole JDK is about 350
 

00:08:34.459 --> 00:08:36.430 align:start position:0%
basically the whole JDK is about 350
megabytes<00:08:34.940><c> in</c><00:08:35.240><c> in</c><00:08:35.510><c> total</c><00:08:35.990><c> so</c><00:08:36.080><c> how</c><00:08:36.200><c> did</c><00:08:36.349><c> I</c>

00:08:36.430 --> 00:08:36.440 align:start position:0%
megabytes in in total so how did I
 

00:08:36.440 --> 00:08:38.909 align:start position:0%
megabytes in in total so how did I
create<00:08:36.500><c> that</c><00:08:36.860><c> JDK</c><00:08:37.279><c> 9</c><00:08:37.430><c> image</c><00:08:37.729><c> so</c><00:08:38.390><c> I</c><00:08:38.419><c> have</c><00:08:38.690><c> a</c>

00:08:38.909 --> 00:08:38.919 align:start position:0%
create that JDK 9 image so I have a
 

00:08:38.919 --> 00:08:46.600 align:start position:0%
create that JDK 9 image so I have a
docker<00:08:39.919><c> file</c><00:08:43.029><c> available</c><00:08:44.560><c> like</c><00:08:45.560><c> so</c><00:08:45.950><c> and</c><00:08:46.160><c> I</c><00:08:46.430><c> want</c>

00:08:46.600 --> 00:08:46.610 align:start position:0%
docker file available like so and I want
 

00:08:46.610 --> 00:08:48.220 align:start position:0%
docker file available like so and I want
to<00:08:46.730><c> build</c><00:08:46.940><c> a</c><00:08:47.060><c> docker</c><00:08:47.240><c> image</c><00:08:47.570><c> from</c><00:08:47.810><c> that</c><00:08:48.020><c> docker</c>

00:08:48.220 --> 00:08:48.230 align:start position:0%
to build a docker image from that docker
 

00:08:48.230 --> 00:08:50.470 align:start position:0%
to build a docker image from that docker
file<00:08:48.500><c> so</c><00:08:48.680><c> what</c><00:08:48.800><c> I</c><00:08:48.860><c> did</c><00:08:48.980><c> was</c><00:08:49.310><c> I'm</c><00:08:49.550><c> building</c><00:08:50.270><c> from</c>

00:08:50.470 --> 00:08:50.480 align:start position:0%
file so what I did was I'm building from
 

00:08:50.480 --> 00:08:54.040 align:start position:0%
file so what I did was I'm building from
Alpine<00:08:51.160><c> Linux</c><00:08:52.209><c> the</c><00:08:53.209><c> docker</c><00:08:53.420><c> image</c><00:08:53.750><c> for</c><00:08:53.899><c> base</c>

00:08:54.040 --> 00:08:54.050 align:start position:0%
Alpine Linux the docker image for base
 

00:08:54.050 --> 00:08:59.350 align:start position:0%
Alpine Linux the docker image for base
image<00:08:54.380><c> and</c><00:08:54.649><c> I'm</c><00:08:55.600><c> adding</c><00:08:56.600><c> an</c><00:08:57.580><c> EI</c><00:08:58.580><c> version</c><00:08:59.149><c> of</c>

00:08:59.350 --> 00:08:59.360 align:start position:0%
image and I'm adding an EI version of
 

00:08:59.360 --> 00:09:01.930 align:start position:0%
image and I'm adding an EI version of
JDK<00:08:59.839><c> 9</c><00:09:00.260><c> for</c><00:09:00.830><c> alpine</c><00:09:01.190><c> Linux</c><00:09:01.580><c> here</c><00:09:01.730><c> that</c><00:09:01.850><c> I</c>

00:09:01.930 --> 00:09:01.940 align:start position:0%
JDK 9 for alpine Linux here that I
 

00:09:01.940 --> 00:09:04.510 align:start position:0%
JDK 9 for alpine Linux here that I
previously<00:09:02.180><c> downloaded</c><00:09:03.070><c> and</c><00:09:04.070><c> I'm</c><00:09:04.250><c> basically</c>

00:09:04.510 --> 00:09:04.520 align:start position:0%
previously downloaded and I'm basically
 

00:09:04.520 --> 00:09:06.100 align:start position:0%
previously downloaded and I'm basically
copying<00:09:04.970><c> that</c><00:09:05.120><c> into</c><00:09:05.420><c> the</c><00:09:05.510><c> image</c><00:09:05.690><c> and</c><00:09:05.839><c> setting</c>

00:09:06.100 --> 00:09:06.110 align:start position:0%
copying that into the image and setting
 

00:09:06.110 --> 00:09:07.780 align:start position:0%
copying that into the image and setting
up<00:09:06.230><c> some</c><00:09:06.440><c> environment</c><00:09:06.980><c> variables</c><00:09:07.399><c> and</c><00:09:07.550><c> I</c><00:09:07.610><c> can</c>

00:09:07.780 --> 00:09:07.790 align:start position:0%
up some environment variables and I can
 

00:09:07.790 --> 00:09:10.569 align:start position:0%
up some environment variables and I can
actually<00:09:08.120><c> rebuild</c><00:09:08.839><c> that</c><00:09:09.020><c> image</c><00:09:09.320><c> just</c><00:09:10.130><c> to</c><00:09:10.339><c> show</c>

00:09:10.569 --> 00:09:10.579 align:start position:0%
actually rebuild that image just to show
 

00:09:10.579 --> 00:09:15.819 align:start position:0%
actually rebuild that image just to show
how<00:09:10.820><c> it</c><00:09:10.850><c> works</c><00:09:13.270><c> like</c><00:09:14.270><c> so</c><00:09:14.540><c> and</c><00:09:14.750><c> it's</c><00:09:15.320><c> a</c><00:09:15.680><c> bit</c>

00:09:15.819 --> 00:09:15.829 align:start position:0%
how it works like so and it's a bit
 

00:09:15.829 --> 00:09:17.470 align:start position:0%
how it works like so and it's a bit
faster<00:09:16.250><c> because</c><00:09:16.370><c> I've</c><00:09:16.610><c> already</c><00:09:16.970><c> built</c><00:09:17.149><c> it</c><00:09:17.360><c> in</c>

00:09:17.470 --> 00:09:17.480 align:start position:0%
faster because I've already built it in
 

00:09:17.480 --> 00:09:19.150 align:start position:0%
faster because I've already built it in
cache<00:09:17.690><c> didn't</c><00:09:17.990><c> haven't</c><00:09:18.260><c> changed</c><00:09:18.649><c> anything</c>

00:09:19.150 --> 00:09:19.160 align:start position:0%
cache didn't haven't changed anything
 

00:09:19.160 --> 00:09:21.670 align:start position:0%
cache didn't haven't changed anything
so<00:09:19.760><c> as</c><00:09:20.240><c> there's</c><00:09:20.570><c> there's</c><00:09:20.930><c> really</c><00:09:20.990><c> no</c><00:09:21.320><c> change</c>

00:09:21.670 --> 00:09:21.680 align:start position:0%
so as there's there's really no change
 

00:09:21.680 --> 00:09:24.100 align:start position:0%
so as there's there's really no change
going<00:09:22.370><c> on</c><00:09:22.610><c> here</c><00:09:23.000><c> so</c><00:09:23.329><c> what</c><00:09:23.480><c> I</c><00:09:23.510><c> can</c><00:09:23.690><c> do</c><00:09:23.779><c> is</c><00:09:23.870><c> I</c><00:09:23.959><c> can</c>

00:09:24.100 --> 00:09:24.110 align:start position:0%
going on here so what I can do is I can
 

00:09:24.110 --> 00:09:25.990 align:start position:0%
going on here so what I can do is I can
run<00:09:24.350><c> this</c><00:09:24.529><c> and</c><00:09:24.770><c> show</c><00:09:24.890><c> how</c><00:09:25.040><c> many</c><00:09:25.100><c> modules</c><00:09:25.430><c> are</c>

00:09:25.990 --> 00:09:26.000 align:start position:0%
run this and show how many modules are
 

00:09:26.000 --> 00:09:30.310 align:start position:0%
run this and show how many modules are
in<00:09:26.149><c> the</c><00:09:26.300><c> JDK</c><00:09:26.839><c> called</c><00:09:27.620><c> JDK</c><00:09:28.040><c> 9</c><00:09:28.250><c> run</c><00:09:28.550><c> time</c><00:09:29.320><c> by</c>

00:09:30.310 --> 00:09:30.320 align:start position:0%
in the JDK called JDK 9 run time by
 

00:09:30.320 --> 00:09:32.620 align:start position:0%
in the JDK called JDK 9 run time by
running<00:09:30.529><c> doing</c><00:09:31.430><c> a</c><00:09:31.520><c> docker</c><00:09:31.700><c> run</c><00:09:31.970><c> command</c><00:09:32.390><c> and</c>

00:09:32.620 --> 00:09:32.630 align:start position:0%
running doing a docker run command and
 

00:09:32.630 --> 00:09:39.699 align:start position:0%
running doing a docker run command and
running<00:09:33.350><c> Java</c><00:09:33.620><c> and</c><00:09:33.920><c> listing</c><00:09:34.430><c> the</c><00:09:34.579><c> modules</c><00:09:38.709><c> and</c>

00:09:39.699 --> 00:09:39.709 align:start position:0%
running Java and listing the modules and
 

00:09:39.709 --> 00:09:40.960 align:start position:0%
running Java and listing the modules and
we<00:09:39.980><c> should</c><00:09:40.160><c> see</c><00:09:40.310><c> there's</c><00:09:40.490><c> quite</c><00:09:40.610><c> a</c><00:09:40.730><c> lot</c><00:09:40.940><c> of</c>

00:09:40.960 --> 00:09:40.970 align:start position:0%
we should see there's quite a lot of
 

00:09:40.970 --> 00:09:43.300 align:start position:0%
we should see there's quite a lot of
modules<00:09:41.240><c> here</c><00:09:41.660><c> in</c><00:09:41.750><c> the</c><00:09:41.839><c> full</c><00:09:42.020><c> JDK</c><00:09:42.529><c> in</c><00:09:42.680><c> fact</c><00:09:42.980><c> if</c>

00:09:43.300 --> 00:09:43.310 align:start position:0%
modules here in the full JDK in fact if
 

00:09:43.310 --> 00:09:49.720 align:start position:0%
modules here in the full JDK in fact if
we<00:09:43.490><c> just</c><00:09:43.700><c> do</c><00:09:44.240><c> a</c><00:09:44.270><c> quick</c><00:09:44.600><c> count</c><00:09:45.020><c> of</c><00:09:45.260><c> them</c><00:09:48.730><c> we</c>

00:09:49.720 --> 00:09:49.730 align:start position:0%
we just do a quick count of them we
 

00:09:49.730 --> 00:09:53.530 align:start position:0%
we just do a quick count of them we
should<00:09:50.000><c> see</c><00:09:50.360><c> there</c><00:09:50.839><c> is</c><00:09:51.140><c> 79</c><00:09:51.920><c> modules</c><00:09:52.760><c> in</c><00:09:53.209><c> the</c>

00:09:53.530 --> 00:09:53.540 align:start position:0%
should see there is 79 modules in the
 

00:09:53.540 --> 00:09:55.690 align:start position:0%
should see there is 79 modules in the
JDK<00:09:54.020><c> Nikken</c><00:09:54.470><c> if</c><00:09:54.709><c> we</c><00:09:54.860><c> just</c><00:09:55.010><c> scroll</c><00:09:55.310><c> through</c><00:09:55.370><c> and</c>

00:09:55.690 --> 00:09:55.700 align:start position:0%
JDK Nikken if we just scroll through and
 

00:09:55.700 --> 00:09:57.269 align:start position:0%
JDK Nikken if we just scroll through and
have<00:09:55.850><c> a</c><00:09:55.880><c> look</c><00:09:55.970><c> we</c><00:09:56.240><c> see</c><00:09:56.420><c> there's</c><00:09:56.630><c> Java</c><00:09:56.839><c> desktop</c>

00:09:57.269 --> 00:09:57.279 align:start position:0%
have a look we see there's Java desktop
 

00:09:57.279 --> 00:09:59.769 align:start position:0%
have a look we see there's Java desktop
javac<00:09:58.279><c> over</c><00:09:58.640><c> here</c><00:09:58.880><c> now</c><00:09:59.390><c> when</c><00:09:59.540><c> you're</c><00:09:59.660><c> running</c>

00:09:59.769 --> 00:09:59.779 align:start position:0%
javac over here now when you're running
 

00:09:59.779 --> 00:10:02.319 align:start position:0%
javac over here now when you're running
an<00:10:00.020><c> say</c><00:10:00.380><c> a</c><00:10:00.410><c> cloud-based</c><00:10:00.860><c> application</c><00:10:01.790><c> you</c><00:10:02.000><c> you</c>

00:10:02.319 --> 00:10:02.329 align:start position:0%
an say a cloud-based application you you
 

00:10:02.329 --> 00:10:03.819 align:start position:0%
an say a cloud-based application you you
probably<00:10:02.630><c> don't</c><00:10:02.930><c> need</c><00:10:03.020><c> desktop</c><00:10:03.500><c> and</c><00:10:03.740><c> you</c>

00:10:03.819 --> 00:10:03.829 align:start position:0%
probably don't need desktop and you
 

00:10:03.829 --> 00:10:05.740 align:start position:0%
probably don't need desktop and you
probably<00:10:04.130><c> don't</c><00:10:04.339><c> need</c><00:10:04.459><c> CORBA</c><00:10:04.940><c> and</c><00:10:05.149><c> you</c>

00:10:05.740 --> 00:10:05.750 align:start position:0%
probably don't need CORBA and you
 

00:10:05.750 --> 00:10:09.400 align:start position:0%
probably don't need CORBA and you
probably<00:10:06.079><c> don't</c><00:10:06.350><c> need</c><00:10:06.910><c> jdk</c><00:10:07.910><c> äôt</c><00:10:08.449><c> perhaps</c><00:10:09.050><c> or</c>

00:10:09.400 --> 00:10:09.410 align:start position:0%
probably don't need jdk äôt perhaps or
 

00:10:09.410 --> 00:10:10.390 align:start position:0%
probably don't need jdk äôt perhaps or
the

00:10:10.390 --> 00:10:10.400 align:start position:0%
the
 

00:10:10.400 --> 00:10:12.580 align:start position:0%
the
Javadoc<00:10:11.270><c> stuff</c><00:10:11.690><c> like</c><00:10:11.810><c> this</c><00:10:11.900><c> so</c><00:10:12.050><c> you</c><00:10:12.110><c> can</c><00:10:12.170><c> strip</c>

00:10:12.580 --> 00:10:12.590 align:start position:0%
Javadoc stuff like this so you can strip
 

00:10:12.590 --> 00:10:15.850 align:start position:0%
Javadoc stuff like this so you can strip
down<00:10:12.890><c> your</c><00:10:13.790><c> your</c><00:10:14.600><c> application</c><00:10:15.290><c> just</c><00:10:15.320><c> to</c><00:10:15.650><c> use</c>

00:10:15.850 --> 00:10:15.860 align:start position:0%
down your your application just to use
 

00:10:15.860 --> 00:10:18.100 align:start position:0%
down your your application just to use
the<00:10:16.070><c> jdk</c><00:10:16.730><c> modules</c><00:10:17.150><c> that</c><00:10:17.330><c> you</c><00:10:17.510><c> that</c><00:10:17.960><c> you</c>

00:10:18.100 --> 00:10:18.110 align:start position:0%
the jdk modules that you that you
 

00:10:18.110 --> 00:10:20.380 align:start position:0%
the jdk modules that you that you
require<00:10:18.500><c> so</c><00:10:19.160><c> let's</c><00:10:19.400><c> let's</c><00:10:19.730><c> try</c><00:10:19.940><c> and</c><00:10:20.090><c> strip</c><00:10:20.300><c> it</c>

00:10:20.380 --> 00:10:20.390 align:start position:0%
require so let's let's try and strip it
 

00:10:20.390 --> 00:10:22.450 align:start position:0%
require so let's let's try and strip it
down<00:10:20.450><c> to</c><00:10:20.720><c> the</c><00:10:20.810><c> smallest</c><00:10:21.140><c> possible</c><00:10:21.529><c> Java</c>

00:10:22.450 --> 00:10:22.460 align:start position:0%
down to the smallest possible Java
 

00:10:22.460 --> 00:10:24.130 align:start position:0%
down to the smallest possible Java
Runtime<00:10:22.940><c> and</c><00:10:23.240><c> what</c><00:10:23.540><c> we're</c><00:10:23.690><c> going</c><00:10:23.810><c> to</c><00:10:23.930><c> do</c><00:10:24.050><c> is</c>

00:10:24.130 --> 00:10:24.140 align:start position:0%
Runtime and what we're going to do is
 

00:10:24.140 --> 00:10:28.329 align:start position:0%
Runtime and what we're going to do is
I'm<00:10:24.230><c> going</c><00:10:24.260><c> to</c><00:10:24.410><c> pick</c><00:10:24.650><c> the</c><00:10:24.860><c> Java</c><00:10:25.670><c> base</c><00:10:27.339><c> module</c>

00:10:28.329 --> 00:10:28.339 align:start position:0%
I'm going to pick the Java base module
 

00:10:28.339 --> 00:10:30.880 align:start position:0%
I'm going to pick the Java base module
the<00:10:29.150><c> one</c><00:10:29.330><c> that</c><00:10:29.510><c> all</c><00:10:29.630><c> other</c><00:10:29.810><c> modules</c><00:10:30.230><c> depend</c><00:10:30.710><c> on</c>

00:10:30.880 --> 00:10:30.890 align:start position:0%
the one that all other modules depend on
 

00:10:30.890 --> 00:10:32.590 align:start position:0%
the one that all other modules depend on
so<00:10:31.339><c> how</c><00:10:31.490><c> are</c><00:10:31.550><c> we</c><00:10:31.610><c> going</c><00:10:31.760><c> to</c><00:10:31.850><c> do</c><00:10:31.970><c> that</c><00:10:32.000><c> so</c><00:10:32.390><c> I</c><00:10:32.420><c> have</c>

00:10:32.590 --> 00:10:32.600 align:start position:0%
so how are we going to do that so I have
 

00:10:32.600 --> 00:10:35.200 align:start position:0%
so how are we going to do that so I have
another<00:10:32.810><c> docker</c><00:10:33.080><c> file</c><00:10:33.440><c> so</c><00:10:34.220><c> first</c><00:10:34.490><c> of</c><00:10:34.610><c> all</c><00:10:34.760><c> we</c>

00:10:35.200 --> 00:10:35.210 align:start position:0%
another docker file so first of all we
 

00:10:35.210 --> 00:10:37.930 align:start position:0%
another docker file so first of all we
need<00:10:35.360><c> to</c><00:10:35.510><c> run</c><00:10:35.660><c> j-link</c><00:10:36.790><c> that's</c><00:10:37.790><c> all</c><00:10:37.910><c> I</c>

00:10:37.930 --> 00:10:37.940 align:start position:0%
need to run j-link that's all I
 

00:10:37.940 --> 00:10:39.490 align:start position:0%
need to run j-link that's all I
described<00:10:38.510><c> earlier</c><00:10:38.660><c> and</c><00:10:39.050><c> we</c><00:10:39.110><c> need</c><00:10:39.230><c> to</c><00:10:39.290><c> run</c>

00:10:39.490 --> 00:10:39.500 align:start position:0%
described earlier and we need to run
 

00:10:39.500 --> 00:10:40.090 align:start position:0%
described earlier and we need to run
j-link

00:10:40.090 --> 00:10:40.100 align:start position:0%
j-link
 

00:10:40.100 --> 00:10:44.590 align:start position:0%
j-link
in<00:10:40.550><c> the</c><00:10:41.390><c> container</c><00:10:42.290><c> of</c><00:10:42.940><c> JDK</c><00:10:43.940><c> 9</c><00:10:44.210><c> our</c><00:10:44.390><c> plain</c>

00:10:44.590 --> 00:10:44.600 align:start position:0%
in the container of JDK 9 our plain
 

00:10:44.600 --> 00:10:46.450 align:start position:0%
in the container of JDK 9 our plain
linux<00:10:44.930><c> and</c><00:10:45.080><c> already</c><00:10:45.260><c> have</c><00:10:45.500><c> a</c><00:10:45.529><c> script</c><00:10:45.860><c> for</c><00:10:46.310><c> this</c>

00:10:46.450 --> 00:10:46.460 align:start position:0%
linux and already have a script for this
 

00:10:46.460 --> 00:10:48.100 align:start position:0%
linux and already have a script for this
so<00:10:47.089><c> what</c><00:10:47.270><c> this</c><00:10:47.390><c> is</c><00:10:47.540><c> going</c><00:10:47.690><c> to</c><00:10:47.750><c> do</c><00:10:47.900><c> it's</c><00:10:48.050><c> going</c>

00:10:48.100 --> 00:10:48.110 align:start position:0%
so what this is going to do it's going
 

00:10:48.110 --> 00:10:52.300 align:start position:0%
so what this is going to do it's going
to<00:10:48.290><c> run</c><00:10:49.029><c> my</c><00:10:50.029><c> JDK</c><00:10:50.900><c> 9</c><00:10:51.080><c> alpine</c><00:10:51.470><c> container</c><00:10:51.950><c> and</c>

00:10:52.300 --> 00:10:52.310 align:start position:0%
to run my JDK 9 alpine container and
 

00:10:52.310 --> 00:10:53.829 align:start position:0%
to run my JDK 9 alpine container and
it's<00:10:52.520><c> going</c><00:10:52.640><c> to</c><00:10:52.700><c> run</c><00:10:52.880><c> jailing</c><00:10:53.360><c> within</c><00:10:53.690><c> that</c>

00:10:53.829 --> 00:10:53.839 align:start position:0%
it's going to run jailing within that
 

00:10:53.839 --> 00:10:57.220 align:start position:0%
it's going to run jailing within that
container<00:10:54.310><c> set</c><00:10:55.310><c> up</c><00:10:55.430><c> my</c><00:10:55.580><c> module</c><00:10:55.940><c> path</c><00:10:56.180><c> to</c><00:10:56.779><c> the</c>

00:10:57.220 --> 00:10:57.230 align:start position:0%
container set up my module path to the
 

00:10:57.230 --> 00:11:00.700 align:start position:0%
container set up my module path to the
Java<00:10:57.950><c> modules</c><00:10:58.520><c> in</c><00:10:58.880><c> the</c><00:10:59.360><c> JDK</c><00:10:59.750><c> 9</c><00:10:59.930><c> runtime</c><00:11:00.410><c> and</c>

00:11:00.700 --> 00:11:00.710 align:start position:0%
Java modules in the JDK 9 runtime and
 

00:11:00.710 --> 00:11:04.350 align:start position:0%
Java modules in the JDK 9 runtime and
it's<00:11:01.430><c> going</c><00:11:01.640><c> to</c><00:11:01.760><c> say</c><00:11:02.000><c> I</c><00:11:02.210><c> only</c><00:11:02.570><c> want</c><00:11:02.810><c> to</c><00:11:03.710><c> build</c><00:11:03.950><c> a</c>

00:11:04.350 --> 00:11:04.360 align:start position:0%
it's going to say I only want to build a
 

00:11:04.360 --> 00:11:07.450 align:start position:0%
it's going to say I only want to build a
new<00:11:05.360><c> Java</c><00:11:05.810><c> runtime</c><00:11:06.290><c> that</c><00:11:06.650><c> contains</c><00:11:07.070><c> the</c><00:11:07.250><c> java</c>

00:11:07.450 --> 00:11:07.460 align:start position:0%
new Java runtime that contains the java
 

00:11:07.460 --> 00:11:09.280 align:start position:0%
new Java runtime that contains the java
base<00:11:07.670><c> module</c><00:11:07.910><c> I'm</c><00:11:08.420><c> going</c><00:11:08.690><c> to</c><00:11:08.750><c> make</c><00:11:08.870><c> it</c><00:11:08.990><c> smaller</c>

00:11:09.280 --> 00:11:09.290 align:start position:0%
base module I'm going to make it smaller
 

00:11:09.290 --> 00:11:10.870 align:start position:0%
base module I'm going to make it smaller
by<00:11:09.470><c> compressing</c><00:11:09.920><c> it</c><00:11:10.220><c> I'm</c><00:11:10.400><c> going</c><00:11:10.580><c> to</c><00:11:10.610><c> remove</c>

00:11:10.870 --> 00:11:10.880 align:start position:0%
by compressing it I'm going to remove
 

00:11:10.880 --> 00:11:12.310 align:start position:0%
by compressing it I'm going to remove
some<00:11:10.940><c> header</c><00:11:11.240><c> files</c><00:11:11.510><c> I</c><00:11:11.660><c> don't</c><00:11:11.839><c> need</c><00:11:11.990><c> and</c><00:11:12.200><c> then</c>

00:11:12.310 --> 00:11:12.320 align:start position:0%
some header files I don't need and then
 

00:11:12.320 --> 00:11:14.710 align:start position:0%
some header files I don't need and then
going<00:11:12.470><c> to</c><00:11:12.500><c> output</c><00:11:12.950><c> it</c><00:11:13.130><c> to</c><00:11:14.060><c> this</c><00:11:14.180><c> directory</c>

00:11:14.710 --> 00:11:14.720 align:start position:0%
going to output it to this directory
 

00:11:14.720 --> 00:11:20.920 align:start position:0%
going to output it to this directory
here<00:11:15.370><c> like</c><00:11:16.370><c> so</c><00:11:16.670><c> so</c><00:11:17.630><c> let's</c><00:11:17.870><c> just</c><00:11:18.110><c> run</c><00:11:18.410><c> this</c><00:11:19.930><c> like</c>

00:11:20.920 --> 00:11:20.930 align:start position:0%
here like so so let's just run this like
 

00:11:20.930 --> 00:11:22.300 align:start position:0%
here like so so let's just run this like
so<00:11:21.110><c> while</c><00:11:21.290><c> that's</c><00:11:21.440><c> running</c><00:11:21.620><c> I'm</c><00:11:21.920><c> just</c><00:11:22.130><c> going</c>

00:11:22.300 --> 00:11:22.310 align:start position:0%
so while that's running I'm just going
 

00:11:22.310 --> 00:11:24.610 align:start position:0%
so while that's running I'm just going
to<00:11:22.370><c> save</c><00:11:22.640><c> some</c><00:11:22.820><c> time</c><00:11:22.880><c> and</c><00:11:23.120><c> copy</c><00:11:23.480><c> this</c><00:11:23.720><c> command</c>

00:11:24.610 --> 00:11:24.620 align:start position:0%
to save some time and copy this command
 

00:11:24.620 --> 00:11:27.550 align:start position:0%
to save some time and copy this command
here<00:11:25.310><c> so</c><00:11:26.089><c> it's</c><00:11:26.270><c> now</c><00:11:26.420><c> doing</c><00:11:26.690><c> jailing</c><00:11:27.080><c> running</c>

00:11:27.550 --> 00:11:27.560 align:start position:0%
here so it's now doing jailing running
 

00:11:27.560 --> 00:11:29.050 align:start position:0%
here so it's now doing jailing running
within<00:11:27.800><c> the</c><00:11:27.890><c> docker</c><00:11:28.100><c> container</c><00:11:28.580><c> a</c><00:11:28.730><c> bit</c><00:11:28.910><c> like</c>

00:11:29.050 --> 00:11:29.060 align:start position:0%
within the docker container a bit like
 

00:11:29.060 --> 00:11:31.720 align:start position:0%
within the docker container a bit like
how<00:11:29.270><c> we</c><00:11:29.330><c> run</c><00:11:29.600><c> branch</c><00:11:30.380><c> a</c><00:11:30.589><c> shell</c><00:11:30.860><c> and</c><00:11:31.070><c> now</c><00:11:31.550><c> it's</c>

00:11:31.720 --> 00:11:31.730 align:start position:0%
how we run branch a shell and now it's
 

00:11:31.730 --> 00:11:35.130 align:start position:0%
how we run branch a shell and now it's
we<00:11:32.060><c> should</c><00:11:32.270><c> see</c><00:11:32.570><c> there's</c><00:11:32.839><c> a</c><00:11:32.900><c> directory</c><00:11:33.440><c> here</c>

00:11:35.130 --> 00:11:35.140 align:start position:0%
we should see there's a directory here
 

00:11:35.140 --> 00:11:37.900 align:start position:0%
we should see there's a directory here
that<00:11:36.140><c> we</c><00:11:36.260><c> created</c><00:11:36.650><c> here</c><00:11:36.920><c> so</c><00:11:37.100><c> that's</c><00:11:37.280><c> that's</c><00:11:37.700><c> a</c>

00:11:37.900 --> 00:11:37.910 align:start position:0%
that we created here so that's that's a
 

00:11:37.910 --> 00:11:40.810 align:start position:0%
that we created here so that's that's a
custom<00:11:38.570><c> runtime</c><00:11:39.230><c> for</c><00:11:39.530><c> our</c><00:11:39.680><c> pine</c><00:11:39.920><c> Linux</c><00:11:40.310><c> that</c>

00:11:40.810 --> 00:11:40.820 align:start position:0%
custom runtime for our pine Linux that
 

00:11:40.820 --> 00:11:42.550 align:start position:0%
custom runtime for our pine Linux that
we<00:11:40.910><c> just</c><00:11:41.089><c> created</c><00:11:41.390><c> which</c><00:11:41.630><c> is</c><00:11:41.810><c> smaller</c><00:11:42.140><c> so</c><00:11:42.410><c> how</c>

00:11:42.550 --> 00:11:42.560 align:start position:0%
we just created which is smaller so how
 

00:11:42.560 --> 00:11:44.380 align:start position:0%
we just created which is smaller so how
do<00:11:42.620><c> we</c><00:11:42.710><c> put</c><00:11:43.190><c> that</c><00:11:43.310><c> into</c><00:11:43.490><c> a</c><00:11:43.610><c> docker</c><00:11:43.850><c> file</c><00:11:44.150><c> so</c><00:11:44.360><c> I</c>

00:11:44.380 --> 00:11:44.390 align:start position:0%
do we put that into a docker file so I
 

00:11:44.390 --> 00:11:46.060 align:start position:0%
do we put that into a docker file so I
have<00:11:44.600><c> a</c><00:11:44.630><c> docker</c><00:11:45.140><c> image</c><00:11:45.470><c> so</c><00:11:45.620><c> I</c><00:11:45.650><c> have</c><00:11:45.860><c> another</c>

00:11:46.060 --> 00:11:46.070 align:start position:0%
have a docker image so I have another
 

00:11:46.070 --> 00:11:48.940 align:start position:0%
have a docker image so I have another
docker<00:11:46.339><c> file</c><00:11:47.050><c> that</c><00:11:48.050><c> we</c><00:11:48.140><c> can</c><00:11:48.320><c> use</c><00:11:48.470><c> to</c><00:11:48.500><c> create</c>

00:11:48.940 --> 00:11:48.950 align:start position:0%
docker file that we can use to create
 

00:11:48.950 --> 00:11:53.350 align:start position:0%
docker file that we can use to create
that<00:11:49.660><c> docker</c><00:11:50.660><c> image</c><00:11:51.790><c> which</c><00:11:52.790><c> is</c><00:11:52.940><c> very</c><00:11:53.120><c> similar</c>

00:11:53.350 --> 00:11:53.360 align:start position:0%
that docker image which is very similar
 

00:11:53.360 --> 00:11:55.360 align:start position:0%
that docker image which is very similar
to<00:11:53.510><c> the</c><00:11:53.720><c> other</c><00:11:53.870><c> one</c><00:11:54.080><c> we</c><00:11:54.380><c> just</c><00:11:54.410><c> basically</c><00:11:54.770><c> take</c>

00:11:55.360 --> 00:11:55.370 align:start position:0%
to the other one we just basically take
 

00:11:55.370 --> 00:11:58.060 align:start position:0%
to the other one we just basically take
our<00:11:55.940><c> custom</c><00:11:56.390><c> runtime</c><00:11:56.839><c> that</c><00:11:57.080><c> we</c><00:11:57.560><c> built</c><00:11:57.830><c> and</c>

00:11:58.060 --> 00:11:58.070 align:start position:0%
our custom runtime that we built and
 

00:11:58.070 --> 00:12:00.430 align:start position:0%
our custom runtime that we built and
copy<00:11:58.280><c> into</c><00:11:58.730><c> the</c><00:11:58.820><c> right</c><00:11:59.030><c> location</c><00:11:59.209><c> and</c><00:11:59.839><c> set</c><00:12:00.350><c> up</c>

00:12:00.430 --> 00:12:00.440 align:start position:0%
copy into the right location and set up
 

00:12:00.440 --> 00:12:02.699 align:start position:0%
copy into the right location and set up
some<00:12:00.650><c> environment</c><00:12:01.220><c> variables</c><00:12:01.610><c> so</c><00:12:01.820><c> let's</c><00:12:01.850><c> just</c>

00:12:02.699 --> 00:12:02.709 align:start position:0%
some environment variables so let's just
 

00:12:02.709 --> 00:12:09.760 align:start position:0%
some environment variables so let's just
build<00:12:03.709><c> that</c><00:12:07.930><c> so</c><00:12:08.930><c> now</c><00:12:09.080><c> it's</c><00:12:09.230><c> going</c><00:12:09.350><c> to</c><00:12:09.380><c> do</c><00:12:09.589><c> some</c>

00:12:09.760 --> 00:12:09.770 align:start position:0%
build that so now it's going to do some
 

00:12:09.770 --> 00:12:13.930 align:start position:0%
build that so now it's going to do some
actual<00:12:10.040><c> work</c><00:12:10.160><c> here</c><00:12:12.130><c> copy</c><00:12:13.130><c> this</c><00:12:13.339><c> command</c><00:12:13.580><c> line</c>

00:12:13.930 --> 00:12:13.940 align:start position:0%
actual work here copy this command line
 

00:12:13.940 --> 00:12:15.880 align:start position:0%
actual work here copy this command line
while<00:12:14.180><c> we're</c><00:12:14.360><c> waiting</c><00:12:14.690><c> here</c><00:12:14.900><c> so</c><00:12:15.320><c> it's</c><00:12:15.470><c> copying</c>

00:12:15.880 --> 00:12:15.890 align:start position:0%
while we're waiting here so it's copying
 

00:12:15.890 --> 00:12:17.560 align:start position:0%
while we're waiting here so it's copying
the<00:12:15.980><c> directory</c><00:12:16.490><c> that's</c><00:12:16.640><c> the</c><00:12:16.820><c> Java</c><00:12:17.089><c> Runtime</c>

00:12:17.560 --> 00:12:17.570 align:start position:0%
the directory that's the Java Runtime
 

00:12:17.570 --> 00:12:19.210 align:start position:0%
the directory that's the Java Runtime
the<00:12:17.779><c> custom</c><00:12:18.170><c> Java</c><00:12:18.410><c> Runtime</c><00:12:18.830><c> images</c>

00:12:19.210 --> 00:12:19.220 align:start position:0%
the custom Java Runtime images
 

00:12:19.220 --> 00:12:21.730 align:start position:0%
the custom Java Runtime images
containing<00:12:19.610><c> Java</c><00:12:19.880><c> base</c><00:12:20.120><c> into</c><00:12:20.420><c> the</c><00:12:20.620><c> into</c><00:12:21.620><c> the</c>

00:12:21.730 --> 00:12:21.740 align:start position:0%
containing Java base into the into the
 

00:12:21.740 --> 00:12:23.920 align:start position:0%
containing Java base into the into the
container<00:12:22.130><c> setting</c><00:12:22.910><c> up</c><00:12:23.000><c> the</c><00:12:23.120><c> environment</c>

00:12:23.920 --> 00:12:23.930 align:start position:0%
container setting up the environment
 

00:12:23.930 --> 00:12:26.410 align:start position:0%
container setting up the environment
variables<00:12:24.380><c> and</c><00:12:24.620><c> now</c><00:12:24.740><c> is</c><00:12:24.890><c> creating</c><00:12:25.279><c> the</c><00:12:25.460><c> the</c>

00:12:26.410 --> 00:12:26.420 align:start position:0%
variables and now is creating the the
 

00:12:26.420 --> 00:12:28.720 align:start position:0%
variables and now is creating the the
docker<00:12:26.990><c> image</c><00:12:27.380><c> and</c><00:12:27.830><c> if</c><00:12:28.220><c> we</c><00:12:28.339><c> look</c><00:12:28.490><c> at</c><00:12:28.610><c> our</c>

00:12:28.720 --> 00:12:28.730 align:start position:0%
docker image and if we look at our
 

00:12:28.730 --> 00:12:33.460 align:start position:0%
docker image and if we look at our
images<00:12:29.180><c> here</c><00:12:29.710><c> we</c><00:12:30.710><c> can</c><00:12:30.890><c> see</c><00:12:31.160><c> that</c><00:12:32.230><c> that</c><00:12:33.230><c> our</c>

00:12:33.460 --> 00:12:33.470 align:start position:0%
images here we can see that that our
 

00:12:33.470 --> 00:12:36.070 align:start position:0%
images here we can see that that our
custom<00:12:33.980><c> run</c><00:12:34.460><c> time</c><00:12:34.700><c> has</c><00:12:35.029><c> reduced</c><00:12:35.510><c> by</c><00:12:35.600><c> an</c><00:12:35.810><c> order</c>

00:12:36.070 --> 00:12:36.080 align:start position:0%
custom run time has reduced by an order
 

00:12:36.080 --> 00:12:38.560 align:start position:0%
custom run time has reduced by an order
of<00:12:36.110><c> magnitude</c><00:12:36.230><c> compared</c><00:12:37.220><c> to</c><00:12:37.339><c> the</c><00:12:37.460><c> full</c><00:12:37.670><c> JDK</c>

00:12:38.560 --> 00:12:38.570 align:start position:0%
of magnitude compared to the full JDK
 

00:12:38.570 --> 00:12:40.810 align:start position:0%
of magnitude compared to the full JDK
nine<00:12:38.750><c> run</c><00:12:38.990><c> time</c><00:12:39.260><c> here</c><00:12:39.560><c> and</c><00:12:40.010><c> that</c><00:12:40.220><c> that's</c><00:12:40.520><c> in</c>

00:12:40.810 --> 00:12:40.820 align:start position:0%
nine run time here and that that's in
 

00:12:40.820 --> 00:12:43.210 align:start position:0%
nine run time here and that that's in
part<00:12:41.060><c> because</c><00:12:41.180><c> Alpine</c><00:12:41.810><c> Linux</c><00:12:42.140><c> is</c><00:12:42.290><c> so</c><00:12:42.500><c> small</c><00:12:42.770><c> as</c>

00:12:43.210 --> 00:12:43.220 align:start position:0%
part because Alpine Linux is so small as
 

00:12:43.220 --> 00:12:45.340 align:start position:0%
part because Alpine Linux is so small as
well<00:12:43.430><c> we</c><00:12:43.610><c> get</c><00:12:43.760><c> the</c><00:12:43.910><c> benefits</c><00:12:44.360><c> of</c><00:12:44.630><c> a</c><00:12:45.260><c> small</c>

00:12:45.340 --> 00:12:45.350 align:start position:0%
well we get the benefits of a small
 

00:12:45.350 --> 00:12:48.340 align:start position:0%
well we get the benefits of a small
custom<00:12:46.310><c> run</c><00:12:46.459><c> time</c><00:12:46.730><c> there</c><00:12:47.029><c> and</c><00:12:47.240><c> a</c><00:12:47.360><c> small</c><00:12:47.600><c> size</c>

00:12:48.340 --> 00:12:48.350 align:start position:0%
custom run time there and a small size
 

00:12:48.350 --> 00:12:50.170 align:start position:0%
custom run time there and a small size
of<00:12:48.440><c> the</c><00:12:48.529><c> operating</c><00:12:49.040><c> system</c><00:12:49.399><c> so</c><00:12:49.760><c> now</c><00:12:49.880><c> we</c><00:12:49.940><c> can</c>

00:12:50.170 --> 00:12:50.180 align:start position:0%
of the operating system so now we can
 

00:12:50.180 --> 00:12:54.130 align:start position:0%
of the operating system so now we can
list<00:12:50.360><c> our</c><00:12:50.510><c> modules</c><00:12:50.959><c> in</c><00:12:51.610><c> there</c><00:12:52.610><c> and</c><00:12:53.029><c> we</c><00:12:53.810><c> see</c><00:12:53.990><c> we</c>

00:12:54.130 --> 00:12:54.140 align:start position:0%
list our modules in there and we see we
 

00:12:54.140 --> 00:12:57.250 align:start position:0%
list our modules in there and we see we
only<00:12:54.290><c> have</c><00:12:54.560><c> Java</c><00:12:55.339><c> base</c><00:12:55.580><c> there</c><00:12:56.480><c> so</c><00:12:56.779><c> that</c><00:12:56.959><c> is</c><00:12:57.140><c> an</c>

00:12:57.250 --> 00:12:57.260 align:start position:0%
only have Java base there so that is an
 

00:12:57.260 --> 00:12:58.930 align:start position:0%
only have Java base there so that is an
example<00:12:57.350><c> of</c><00:12:57.890><c> how</c><00:12:58.040><c> you</c><00:12:58.100><c> can</c><00:12:58.430><c> create</c><00:12:58.820><c> small</c>

00:12:58.930 --> 00:12:58.940 align:start position:0%
example of how you can create small
 

00:12:58.940 --> 00:13:01.300 align:start position:0%
example of how you can create small
custom<00:12:59.540><c> run</c><00:13:00.110><c> time</c><00:13:00.320><c> images</c><00:13:00.740><c> all</c><00:13:00.950><c> of</c><00:13:01.130><c> the</c>

00:13:01.300 --> 00:13:01.310 align:start position:0%
custom run time images all of the
 

00:13:01.310 --> 00:13:03.670 align:start position:0%
custom run time images all of the
commands<00:13:02.240><c> and</c><00:13:02.390><c> the</c><00:13:02.480><c> docker</c><00:13:02.810><c> files</c><00:13:03.170><c> and</c><00:13:03.589><c> the</c>

00:13:03.670 --> 00:13:03.680 align:start position:0%
commands and the docker files and the
 

00:13:03.680 --> 00:13:05.889 align:start position:0%
commands and the docker files and the
scripts<00:13:04.040><c> that</c><00:13:04.700><c> I've</c><00:13:04.880><c> run</c><00:13:05.180><c> and</c><00:13:05.390><c> used</c><00:13:05.720><c> are</c>

00:13:05.889 --> 00:13:05.899 align:start position:0%
scripts that I've run and used are
 

00:13:05.899 --> 00:13:06.970 align:start position:0%
scripts that I've run and used are
available<00:13:06.350><c> at</c><00:13:06.470><c> the</c><00:13:06.589><c> end</c><00:13:06.620><c> of</c><00:13:06.890><c> this</c>

00:13:06.970 --> 00:13:06.980 align:start position:0%
available at the end of this
 

00:13:06.980 --> 00:13:09.790 align:start position:0%
available at the end of this
presentation<00:13:07.839><c> so</c><00:13:08.839><c> you</c><00:13:08.870><c> can</c><00:13:08.990><c> you</c><00:13:09.380><c> can</c><00:13:09.529><c> try</c><00:13:09.740><c> this</c>

00:13:09.790 --> 00:13:09.800 align:start position:0%
presentation so you can you can try this
 

00:13:09.800 --> 00:13:12.639 align:start position:0%
presentation so you can you can try this
out<00:13:10.070><c> for</c><00:13:10.130><c> yourself</c><00:13:10.930><c> so</c><00:13:11.930><c> let's</c><00:13:12.080><c> go</c><00:13:12.200><c> back</c><00:13:12.410><c> to</c><00:13:12.560><c> the</c>

00:13:12.639 --> 00:13:12.649 align:start position:0%
out for yourself so let's go back to the
 

00:13:12.649 --> 00:13:15.160 align:start position:0%
out for yourself so let's go back to the
presentation<00:13:13.300><c> and</c><00:13:14.300><c> just</c><00:13:14.480><c> finally</c><00:13:14.720><c> at</c><00:13:14.990><c> the</c><00:13:15.110><c> end</c>

00:13:15.160 --> 00:13:15.170 align:start position:0%
presentation and just finally at the end
 

00:13:15.170 --> 00:13:17.800 align:start position:0%
presentation and just finally at the end
so<00:13:15.800><c> just</c><00:13:15.830><c> to</c><00:13:16.160><c> review</c><00:13:16.430><c> I</c><00:13:16.490><c> showed</c><00:13:16.940><c> how</c><00:13:17.330><c> Java</c><00:13:17.630><c> is</c>

00:13:17.800 --> 00:13:17.810 align:start position:0%
so just to review I showed how Java is
 

00:13:17.810 --> 00:13:20.320 align:start position:0%
so just to review I showed how Java is
improving<00:13:18.260><c> its</c><00:13:18.770><c> execution</c><00:13:19.459><c> or</c><00:13:19.790><c> running</c>

00:13:20.320 --> 00:13:20.330 align:start position:0%
improving its execution or running
 

00:13:20.330 --> 00:13:22.210 align:start position:0%
improving its execution or running
within<00:13:20.480><c> docker</c><00:13:21.080><c> containers</c><00:13:21.649><c> and</c><00:13:21.830><c> how</c><00:13:21.920><c> you</c><00:13:21.980><c> can</c>

00:13:22.210 --> 00:13:22.220 align:start position:0%
within docker containers and how you can
 

00:13:22.220 --> 00:13:24.820 align:start position:0%
within docker containers and how you can
reduce<00:13:22.339><c> the</c><00:13:22.670><c> size</c><00:13:22.880><c> of</c><00:13:23.089><c> JDK</c><00:13:23.450><c> 9</c><00:13:23.750><c> in</c><00:13:24.380><c> docker</c>

00:13:24.820 --> 00:13:24.830 align:start position:0%
reduce the size of JDK 9 in docker
 

00:13:24.830 --> 00:13:28.740 align:start position:0%
reduce the size of JDK 9 in docker
images<00:13:25.339><c> and</c><00:13:25.990><c> so</c><00:13:26.990><c> next</c><00:13:27.290><c> steps</c><00:13:27.500><c> you</c><00:13:27.680><c> can</c><00:13:27.890><c> go</c><00:13:28.370><c> to</c>

00:13:28.740 --> 00:13:28.750 align:start position:0%
images and so next steps you can go to
 

00:13:28.750 --> 00:13:31.360 align:start position:0%
images and so next steps you can go to
download<00:13:29.750><c> the</c><00:13:29.870><c> JDK</c><00:13:30.050><c> from</c><00:13:30.589><c> the</c><00:13:30.709><c> links</c><00:13:31.010><c> here</c><00:13:31.190><c> you</c>

00:13:31.360 --> 00:13:31.370 align:start position:0%
download the JDK from the links here you
 

00:13:31.370 --> 00:13:32.980 align:start position:0%
download the JDK from the links here you
can<00:13:31.520><c> join</c><00:13:31.730><c> the</c><00:13:31.850><c> open</c><00:13:32.120><c> JDK</c><00:13:32.240><c> mailing</c><00:13:32.750><c> list</c><00:13:32.930><c> and</c>

00:13:32.980 --> 00:13:32.990 align:start position:0%
can join the open JDK mailing list and
 

00:13:32.990 --> 00:13:35.050 align:start position:0%
can join the open JDK mailing list and
you<00:13:33.050><c> can</c><00:13:33.230><c> follow</c><00:13:33.410><c> us</c><00:13:33.589><c> on</c><00:13:33.680><c> Twitter</c><00:13:33.980><c> I</c><00:13:34.279><c> hope</c><00:13:34.910><c> you</c>

00:13:35.050 --> 00:13:35.060 align:start position:0%
you can follow us on Twitter I hope you
 

00:13:35.060 --> 00:13:38.110 align:start position:0%
you can follow us on Twitter I hope you
enjoyed<00:13:35.300><c> this</c><00:13:35.480><c> thank</c><00:13:35.750><c> you</c><00:13:35.779><c> so</c><00:13:35.870><c> much</c>

