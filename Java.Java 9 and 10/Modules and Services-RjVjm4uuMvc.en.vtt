WEBVTT
Kind: captions
Language: en

00:00:02.919 --> 00:00:06.130 align:start position:0%
 
hi<00:00:03.919><c> everyone</c><00:00:04.160><c> its</c><00:00:04.850><c> 9:30</c><00:00:05.509><c> so</c><00:00:05.840><c> let's</c><00:00:05.990><c> get</c>

00:00:06.130 --> 00:00:06.140 align:start position:0%
hi everyone its 9:30 so let's get
 

00:00:06.140 --> 00:00:08.310 align:start position:0%
hi everyone its 9:30 so let's get
started

00:00:08.310 --> 00:00:08.320 align:start position:0%
started
 

00:00:08.320 --> 00:00:11.560 align:start position:0%
started
welcome<00:00:09.320><c> to</c><00:00:09.469><c> modules</c><00:00:09.889><c> and</c><00:00:10.250><c> services</c><00:00:10.760><c> my</c><00:00:11.420><c> name</c>

00:00:11.560 --> 00:00:11.570 align:start position:0%
welcome to modules and services my name
 

00:00:11.570 --> 00:00:13.089 align:start position:0%
welcome to modules and services my name
is<00:00:11.690><c> Alex</c><00:00:11.960><c> Buckley</c><00:00:12.290><c> I</c><00:00:12.320><c> work</c><00:00:12.620><c> in</c><00:00:12.830><c> the</c><00:00:12.920><c> Java</c>

00:00:13.089 --> 00:00:13.099 align:start position:0%
is Alex Buckley I work in the Java
 

00:00:13.099 --> 00:00:16.209 align:start position:0%
is Alex Buckley I work in the Java
platform<00:00:13.309><c> group</c><00:00:13.670><c> at</c><00:00:14.389><c> Oracle</c><00:00:14.809><c> I</c><00:00:15.050><c> edit</c><00:00:15.769><c> the</c><00:00:15.920><c> Java</c>

00:00:16.209 --> 00:00:16.219 align:start position:0%
platform group at Oracle I edit the Java
 

00:00:16.219 --> 00:00:18.609 align:start position:0%
platform group at Oracle I edit the Java
language<00:00:16.400><c> specification</c><00:00:16.880><c> and</c><00:00:17.630><c> the</c><00:00:18.320><c> Java</c>

00:00:18.609 --> 00:00:18.619 align:start position:0%
language specification and the Java
 

00:00:18.619 --> 00:00:20.979 align:start position:0%
language specification and the Java
Virtual<00:00:18.859><c> Machine</c><00:00:19.269><c> specification</c><00:00:20.269><c> and</c><00:00:20.480><c> for</c>

00:00:20.979 --> 00:00:20.989 align:start position:0%
Virtual Machine specification and for
 

00:00:20.989 --> 00:00:24.040 align:start position:0%
Virtual Machine specification and for
many<00:00:21.739><c> years</c><00:00:21.980><c> now</c><00:00:22.249><c> I've</c><00:00:22.429><c> been</c><00:00:22.460><c> working</c><00:00:22.880><c> on</c><00:00:23.390><c> have</c>

00:00:24.040 --> 00:00:24.050 align:start position:0%
many years now I've been working on have
 

00:00:24.050 --> 00:00:26.349 align:start position:0%
many years now I've been working on have
been<00:00:24.230><c> who</c><00:00:24.529><c> have</c><00:00:24.769><c> worked</c><00:00:25.009><c> on</c><00:00:25.310><c> the</c><00:00:25.789><c> module</c>

00:00:26.349 --> 00:00:26.359 align:start position:0%
been who have worked on the module
 

00:00:26.359 --> 00:00:29.859 align:start position:0%
been who have worked on the module
system<00:00:26.689><c> that's</c><00:00:27.439><c> in</c><00:00:27.560><c> JDK</c><00:00:27.890><c> 9</c><00:00:28.300><c> can</c><00:00:29.300><c> I</c><00:00:29.359><c> do</c><00:00:29.419><c> a</c><00:00:29.509><c> couple</c>

00:00:29.859 --> 00:00:29.869 align:start position:0%
system that's in JDK 9 can I do a couple
 

00:00:29.869 --> 00:00:32.049 align:start position:0%
system that's in JDK 9 can I do a couple
of<00:00:30.109><c> straw</c><00:00:30.380><c> polls</c><00:00:30.769><c> whilst</c><00:00:31.220><c> I</c><00:00:31.489><c> have</c><00:00:31.699><c> you</c><00:00:31.909><c> all</c>

00:00:32.049 --> 00:00:32.059 align:start position:0%
of straw polls whilst I have you all
 

00:00:32.059 --> 00:00:34.770 align:start position:0%
of straw polls whilst I have you all
here<00:00:32.329><c> who</c><00:00:32.720><c> has</c><00:00:32.870><c> downloaded</c><00:00:33.079><c> JDK</c><00:00:33.800><c> 9</c><00:00:33.980><c> please</c>

00:00:34.770 --> 00:00:34.780 align:start position:0%
here who has downloaded JDK 9 please
 

00:00:34.780 --> 00:00:38.550 align:start position:0%
here who has downloaded JDK 9 please
quite<00:00:35.780><c> a</c><00:00:35.810><c> few</c><00:00:36.050><c> hands</c><00:00:36.640><c> who</c><00:00:37.640><c> is</c><00:00:37.910><c> familiar</c><00:00:38.180><c> with</c>

00:00:38.550 --> 00:00:38.560 align:start position:0%
quite a few hands who is familiar with
 

00:00:38.560 --> 00:00:43.360 align:start position:0%
quite a few hands who is familiar with
Metron<00:00:39.560><c> slash</c><00:00:40.070><c> services</c><00:00:40.370><c> a</c><00:00:41.980><c> small</c><00:00:42.980><c> number</c><00:00:43.220><c> of</c>

00:00:43.360 --> 00:00:43.370 align:start position:0%
Metron slash services a small number of
 

00:00:43.370 --> 00:00:46.240 align:start position:0%
Metron slash services a small number of
hands<00:00:43.670><c> ok</c><00:00:44.030><c> who</c><00:00:44.810><c> is</c><00:00:44.960><c> familiar</c><00:00:45.140><c> with</c><00:00:45.410><c> Java</c><00:00:45.830><c> util</c>

00:00:46.240 --> 00:00:46.250 align:start position:0%
hands ok who is familiar with Java util
 

00:00:46.250 --> 00:00:49.570 align:start position:0%
hands ok who is familiar with Java util
service<00:00:46.790><c> loader</c><00:00:48.130><c> some</c><00:00:49.130><c> of</c><00:00:49.190><c> the</c><00:00:49.250><c> same</c><00:00:49.400><c> hands</c>

00:00:49.570 --> 00:00:49.580 align:start position:0%
service loader some of the same hands
 

00:00:49.580 --> 00:00:51.220 align:start position:0%
service loader some of the same hands
but<00:00:49.730><c> also</c><00:00:49.850><c> different</c><00:00:50.240><c> hands</c><00:00:50.420><c> which</c><00:00:50.720><c> is</c><00:00:50.750><c> quite</c>

00:00:51.220 --> 00:00:51.230 align:start position:0%
but also different hands which is quite
 

00:00:51.230 --> 00:00:52.900 align:start position:0%
but also different hands which is quite
interesting<00:00:51.620><c> um</c><00:00:51.860><c> who</c><00:00:52.460><c> has</c><00:00:52.580><c> built</c><00:00:52.760><c> an</c>

00:00:52.900 --> 00:00:52.910 align:start position:0%
interesting um who has built an
 

00:00:52.910 --> 00:00:56.560 align:start position:0%
interesting um who has built an
application<00:00:53.060><c> that</c><00:00:53.660><c> calls</c><00:00:54.040><c> service</c><00:00:55.040><c> loader</c><00:00:55.570><c> on</c>

00:00:56.560 --> 00:00:56.570 align:start position:0%
application that calls service loader on
 

00:00:56.570 --> 00:00:59.310 align:start position:0%
application that calls service loader on
a<00:00:56.780><c> small</c><00:00:57.260><c> trait</c><00:00:57.470><c> we're</c><00:00:57.620><c> really</c><00:00:57.740><c> shrinking</c><00:00:58.160><c> ok</c>

00:00:59.310 --> 00:00:59.320 align:start position:0%
a small trait we're really shrinking ok
 

00:00:59.320 --> 00:01:04.090 align:start position:0%
a small trait we're really shrinking ok
so<00:01:00.320><c> that's</c><00:01:01.310><c> what</c><00:01:01.579><c> this</c><00:01:02.360><c> talk</c><00:01:02.690><c> is</c><00:01:03.079><c> about</c><00:01:03.440><c> I</c>

00:01:04.090 --> 00:01:04.100 align:start position:0%
so that's what this talk is about I
 

00:01:04.100 --> 00:01:07.120 align:start position:0%
so that's what this talk is about I
often<00:01:05.059><c> say</c><00:01:05.239><c> that</c><00:01:05.290><c> modules</c><00:01:06.290><c> are</c><00:01:06.740><c> quite</c>

00:01:07.120 --> 00:01:07.130 align:start position:0%
often say that modules are quite
 

00:01:07.130 --> 00:01:09.459 align:start position:0%
often say that modules are quite
different<00:01:07.369><c> than</c><00:01:07.759><c> most</c><00:01:08.299><c> language</c><00:01:08.929><c> features</c>

00:01:09.459 --> 00:01:09.469 align:start position:0%
different than most language features
 

00:01:09.469 --> 00:01:12.760 align:start position:0%
different than most language features
such<00:01:10.189><c> as</c><00:01:10.219><c> lambdas</c><00:01:11.170><c> lambdas</c><00:01:12.170><c> are</c><00:01:12.350><c> about</c><00:01:12.590><c> the</c>

00:01:12.760 --> 00:01:12.770 align:start position:0%
such as lambdas lambdas are about the
 

00:01:12.770 --> 00:01:15.300 align:start position:0%
such as lambdas lambdas are about the
shape<00:01:13.039><c> of</c><00:01:13.270><c> programs</c><00:01:14.270><c> in</c><00:01:14.569><c> the</c><00:01:14.719><c> small</c>

00:01:15.300 --> 00:01:15.310 align:start position:0%
shape of programs in the small
 

00:01:15.310 --> 00:01:18.459 align:start position:0%
shape of programs in the small
individual<00:01:16.310><c> for</c><00:01:16.579><c> loops</c><00:01:16.819><c> turning</c><00:01:17.390><c> into</c><00:01:17.539><c> method</c>

00:01:18.459 --> 00:01:18.469 align:start position:0%
individual for loops turning into method
 

00:01:18.469 --> 00:01:21.099 align:start position:0%
individual for loops turning into method
calls<00:01:18.770><c> with</c><00:01:19.130><c> lambda</c><00:01:19.340><c> arguments</c><00:01:19.969><c> you</c><00:01:20.929><c> can</c>

00:01:21.099 --> 00:01:21.109 align:start position:0%
calls with lambda arguments you can
 

00:01:21.109 --> 00:01:24.700 align:start position:0%
calls with lambda arguments you can
reshape<00:01:21.380><c> a</c><00:01:22.039><c> program</c><00:01:22.759><c> to</c><00:01:23.240><c> use</c><00:01:23.420><c> lambdas</c><00:01:23.899><c> without</c>

00:01:24.700 --> 00:01:24.710 align:start position:0%
reshape a program to use lambdas without
 

00:01:24.710 --> 00:01:26.789 align:start position:0%
reshape a program to use lambdas without
anyone<00:01:25.100><c> noticing</c>

00:01:26.789 --> 00:01:26.799 align:start position:0%
anyone noticing
 

00:01:26.799 --> 00:01:29.319 align:start position:0%
anyone noticing
modules<00:01:27.799><c> are</c><00:01:28.100><c> about</c><00:01:28.369><c> the</c><00:01:28.490><c> shape</c><00:01:28.700><c> of</c><00:01:28.850><c> programs</c>

00:01:29.319 --> 00:01:29.329 align:start position:0%
modules are about the shape of programs
 

00:01:29.329 --> 00:01:32.349 align:start position:0%
modules are about the shape of programs
in<00:01:29.689><c> the</c><00:01:30.109><c> large</c><00:01:30.319><c> we</c><00:01:31.159><c> deal</c><00:01:31.369><c> with</c><00:01:31.399><c> classes</c><00:01:32.329><c> and</c>

00:01:32.349 --> 00:01:32.359 align:start position:0%
in the large we deal with classes and
 

00:01:32.359 --> 00:01:35.109 align:start position:0%
in the large we deal with classes and
packages<00:01:32.959><c> and</c><00:01:33.200><c> get</c><00:01:33.350><c> bigger</c><00:01:33.619><c> from</c><00:01:33.950><c> there</c><00:01:34.189><c> if</c>

00:01:35.109 --> 00:01:35.119 align:start position:0%
packages and get bigger from there if
 

00:01:35.119 --> 00:01:38.080 align:start position:0%
packages and get bigger from there if
you<00:01:35.630><c> reshape</c><00:01:36.530><c> a</c><00:01:36.709><c> module</c><00:01:37.130><c> it's</c><00:01:37.490><c> quite</c><00:01:37.789><c> likely</c>

00:01:38.080 --> 00:01:38.090 align:start position:0%
you reshape a module it's quite likely
 

00:01:38.090 --> 00:01:40.050 align:start position:0%
you reshape a module it's quite likely
that<00:01:38.299><c> other</c><00:01:38.630><c> people</c><00:01:39.109><c> will</c><00:01:39.289><c> notice</c><00:01:39.649><c> and</c>

00:01:40.050 --> 00:01:40.060 align:start position:0%
that other people will notice and
 

00:01:40.060 --> 00:01:44.020 align:start position:0%
that other people will notice and
although<00:01:41.060><c> modules</c><00:01:41.630><c> are</c><00:01:41.840><c> expressed</c><00:01:42.530><c> in</c><00:01:43.030><c> source</c>

00:01:44.020 --> 00:01:44.030 align:start position:0%
although modules are expressed in source
 

00:01:44.030 --> 00:01:46.599 align:start position:0%
although modules are expressed in source
code<00:01:44.329><c> of</c><00:01:44.509><c> the</c><00:01:44.630><c> Java</c><00:01:44.899><c> language</c><00:01:45.340><c> they</c><00:01:46.340><c> are</c><00:01:46.369><c> in</c>

00:01:46.599 --> 00:01:46.609 align:start position:0%
code of the Java language they are in
 

00:01:46.609 --> 00:01:48.819 align:start position:0%
code of the Java language they are in
some<00:01:46.850><c> ways</c><00:01:47.060><c> outside</c><00:01:47.539><c> the</c><00:01:48.170><c> language</c><00:01:48.590><c> they</c>

00:01:48.819 --> 00:01:48.829 align:start position:0%
some ways outside the language they
 

00:01:48.829 --> 00:01:53.309 align:start position:0%
some ways outside the language they
define<00:01:49.479><c> architecture</c><00:01:50.479><c> rather</c><00:01:51.259><c> than</c><00:01:51.619><c> code</c><00:01:52.249><c> I</c>

00:01:53.309 --> 00:01:53.319 align:start position:0%
define architecture rather than code I
 

00:01:53.319 --> 00:01:56.319 align:start position:0%
define architecture rather than code I
say<00:01:54.319><c> all</c><00:01:54.499><c> this</c><00:01:54.679><c> because</c><00:01:55.029><c> services</c><00:01:56.029><c> that</c><00:01:56.240><c> I'll</c>

00:01:56.319 --> 00:01:56.329 align:start position:0%
say all this because services that I'll
 

00:01:56.329 --> 00:01:58.989 align:start position:0%
say all this because services that I'll
be<00:01:56.479><c> talking</c><00:01:56.630><c> about</c><00:01:57.079><c> here</c><00:01:57.380><c> are</c><00:01:57.639><c> the</c><00:01:58.639><c> purest</c>

00:01:58.989 --> 00:01:58.999 align:start position:0%
be talking about here are the purest
 

00:01:58.999 --> 00:02:02.019 align:start position:0%
be talking about here are the purest
form<00:01:59.539><c> of</c><00:01:59.920><c> architectural</c><00:02:00.920><c> our</c><00:02:01.429><c> construct</c>

00:02:02.019 --> 00:02:02.029 align:start position:0%
form of architectural our construct
 

00:02:02.029 --> 00:02:04.749 align:start position:0%
form of architectural our construct
offered<00:02:02.659><c> by</c><00:02:02.840><c> the</c><00:02:02.899><c> module</c><00:02:03.259><c> system</c><00:02:03.759><c> there's</c>

00:02:04.749 --> 00:02:04.759 align:start position:0%
offered by the module system there's
 

00:02:04.759 --> 00:02:07.539 align:start position:0%
offered by the module system there's
something<00:02:05.149><c> you</c><00:02:05.270><c> have</c><00:02:05.509><c> to</c><00:02:05.539><c> design</c><00:02:06.289><c> for</c><00:02:06.649><c> very</c>

00:02:07.539 --> 00:02:07.549 align:start position:0%
something you have to design for very
 

00:02:07.549 --> 00:02:10.540 align:start position:0%
something you have to design for very
explicitly<00:02:08.500><c> it's</c><00:02:09.500><c> actually</c><00:02:10.069><c> possible</c><00:02:10.280><c> that</c>

00:02:10.540 --> 00:02:10.550 align:start position:0%
explicitly it's actually possible that
 

00:02:10.550 --> 00:02:12.880 align:start position:0%
explicitly it's actually possible that
in<00:02:10.790><c> your</c><00:02:10.940><c> daily</c><00:02:11.240><c> work</c><00:02:11.420><c> you</c><00:02:11.930><c> will</c><00:02:12.080><c> never</c><00:02:12.590><c> come</c>

00:02:12.880 --> 00:02:12.890 align:start position:0%
in your daily work you will never come
 

00:02:12.890 --> 00:02:15.800 align:start position:0%
in your daily work you will never come
across<00:02:13.040><c> services</c><00:02:13.760><c> and</c><00:02:14.620><c> all</c>

00:02:15.800 --> 00:02:15.810 align:start position:0%
across services and all
 

00:02:15.810 --> 00:02:17.740 align:start position:0%
across services and all
so<00:02:15.900><c> if</c><00:02:16.020><c> you're</c><00:02:16.170><c> thinking</c><00:02:16.550><c> sower</c>

00:02:17.740 --> 00:02:17.750 align:start position:0%
so if you're thinking sower
 

00:02:17.750 --> 00:02:19.610 align:start position:0%
so if you're thinking sower
service-oriented<00:02:18.750><c> architectures</c><00:02:19.380><c> that's</c>

00:02:19.610 --> 00:02:19.620 align:start position:0%
service-oriented architectures that's
 

00:02:19.620 --> 00:02:21.140 align:start position:0%
service-oriented architectures that's
not<00:02:20.160><c> what</c><00:02:20.280><c> this</c><00:02:20.370><c> is</c><00:02:20.520><c> about</c><00:02:20.610><c> was</c><00:02:20.880><c> anyone</c>

00:02:21.140 --> 00:02:21.150 align:start position:0%
not what this is about was anyone
 

00:02:21.150 --> 00:02:23.690 align:start position:0%
not what this is about was anyone
thinking<00:02:21.420><c> so</c><00:02:21.630><c> uh</c><00:02:22.069><c> no</c><00:02:23.069><c> I</c><00:02:23.099><c> guess</c><00:02:23.370><c> I</c><00:02:23.459><c> can</c><00:02:23.580><c> take</c>

00:02:23.690 --> 00:02:23.700 align:start position:0%
thinking so uh no I guess I can take
 

00:02:23.700 --> 00:02:27.620 align:start position:0%
thinking so uh no I guess I can take
that<00:02:23.819><c> line</c><00:02:24.000><c> out</c><00:02:24.030><c> of</c><00:02:24.270><c> the</c><00:02:24.360><c> presentation</c><00:02:25.940><c> so</c><00:02:26.940><c> now</c>

00:02:27.620 --> 00:02:27.630 align:start position:0%
that line out of the presentation so now
 

00:02:27.630 --> 00:02:29.449 align:start position:0%
that line out of the presentation so now
that<00:02:27.690><c> we're</c><00:02:27.930><c> here</c><00:02:28.170><c> let's</c><00:02:28.349><c> talk</c><00:02:28.920><c> about</c><00:02:29.130><c> three</c>

00:02:29.449 --> 00:02:29.459 align:start position:0%
that we're here let's talk about three
 

00:02:29.459 --> 00:02:32.890 align:start position:0%
that we're here let's talk about three
things<00:02:29.840><c> what</c><00:02:30.840><c> services</c><00:02:31.560><c> are</c><00:02:31.800><c> in</c><00:02:32.220><c> JDK</c><00:02:32.610><c> nine</c>

00:02:32.890 --> 00:02:32.900 align:start position:0%
things what services are in JDK nine
 

00:02:32.900 --> 00:02:35.960 align:start position:0%
things what services are in JDK nine
what<00:02:33.900><c> they</c><00:02:34.050><c> can</c><00:02:34.290><c> do</c><00:02:34.470><c> and</c><00:02:34.709><c> how</c><00:02:35.550><c> they</c><00:02:35.730><c> can</c><00:02:35.760><c> make</c>

00:02:35.960 --> 00:02:35.970 align:start position:0%
what they can do and how they can make
 

00:02:35.970 --> 00:02:41.780 align:start position:0%
what they can do and how they can make
old<00:02:36.480><c> code</c><00:02:36.959><c> more</c><00:02:37.590><c> modular</c><00:02:40.370><c> so</c><00:02:41.370><c> what</c><00:02:41.670><c> are</c>

00:02:41.780 --> 00:02:41.790 align:start position:0%
old code more modular so what are
 

00:02:41.790 --> 00:02:47.059 align:start position:0%
old code more modular so what are
services<00:02:44.239><c> and</c><00:02:45.239><c> I</c><00:02:46.050><c> should</c><00:02:46.230><c> also</c><00:02:46.290><c> check</c><00:02:46.650><c> did</c>

00:02:47.059 --> 00:02:47.069 align:start position:0%
services and I should also check did
 

00:02:47.069 --> 00:02:49.699 align:start position:0%
services and I should also check did
everyone<00:02:47.280><c> see</c><00:02:47.519><c> the</c><00:02:47.580><c> keynotes</c><00:02:48.000><c> on</c><00:02:48.269><c> Monday</c><00:02:48.709><c> who</c>

00:02:49.699 --> 00:02:49.709 align:start position:0%
everyone see the keynotes on Monday who
 

00:02:49.709 --> 00:02:51.740 align:start position:0%
everyone see the keynotes on Monday who
didn't<00:02:50.700><c> see</c><00:02:50.850><c> the</c><00:02:50.880><c> keynote</c><00:02:51.239><c> on</c><00:02:51.360><c> Monday</c><00:02:51.630><c> that's</c>

00:02:51.740 --> 00:02:51.750 align:start position:0%
didn't see the keynote on Monday that's
 

00:02:51.750 --> 00:02:55.009 align:start position:0%
didn't see the keynote on Monday that's
a<00:02:51.870><c> bit</c><00:02:51.989><c> unfair</c><00:02:52.350><c> okay</c><00:02:52.910><c> some</c><00:02:53.910><c> people</c><00:02:53.940><c> did</c><00:02:54.720><c> it</c><00:02:54.810><c> has</c>

00:02:55.009 --> 00:02:55.019 align:start position:0%
a bit unfair okay some people did it has
 

00:02:55.019 --> 00:03:00.699 align:start position:0%
a bit unfair okay some people did it has
anyone<00:02:56.269><c> seen</c><00:02:57.269><c> any</c><00:02:57.510><c> other</c><00:02:57.950><c> modularity</c><00:02:58.970><c> talks</c>

00:03:00.699 --> 00:03:00.709 align:start position:0%
anyone seen any other modularity talks
 

00:03:00.709 --> 00:03:04.190 align:start position:0%
anyone seen any other modularity talks
so<00:03:01.709><c> good</c><00:03:02.400><c> quite</c><00:03:02.700><c> a</c><00:03:02.730><c> few</c><00:03:02.910><c> hands</c><00:03:03.180><c> so</c><00:03:03.420><c> that's</c><00:03:03.989><c> good</c>

00:03:04.190 --> 00:03:04.200 align:start position:0%
so good quite a few hands so that's good
 

00:03:04.200 --> 00:03:06.500 align:start position:0%
so good quite a few hands so that's good
so<00:03:04.230><c> this</c><00:03:04.470><c> is</c><00:03:04.650><c> this</c><00:03:05.310><c> is</c><00:03:05.370><c> additive</c><00:03:05.940><c> to</c><00:03:06.090><c> those</c><00:03:06.239><c> so</c>

00:03:06.500 --> 00:03:06.510 align:start position:0%
so this is this is additive to those so
 

00:03:06.510 --> 00:03:08.570 align:start position:0%
so this is this is additive to those so
you'll<00:03:06.690><c> you'll</c><00:03:06.930><c> you'll</c><00:03:07.040><c> build</c><00:03:08.040><c> up</c><00:03:08.160><c> from</c><00:03:08.400><c> there</c>

00:03:08.570 --> 00:03:08.580 align:start position:0%
you'll you'll you'll build up from there
 

00:03:08.580 --> 00:03:10.910 align:start position:0%
you'll you'll you'll build up from there
so<00:03:08.790><c> when</c><00:03:09.690><c> we</c><00:03:09.720><c> talk</c><00:03:09.959><c> about</c><00:03:09.989><c> modules</c><00:03:10.560><c> we</c><00:03:10.739><c> talk</c>

00:03:10.910 --> 00:03:10.920 align:start position:0%
so when we talk about modules we talk
 

00:03:10.920 --> 00:03:13.850 align:start position:0%
so when we talk about modules we talk
typically<00:03:11.340><c> talk</c><00:03:11.489><c> about</c><00:03:11.730><c> two</c><00:03:12.090><c> things</c><00:03:12.860><c> module</c>

00:03:13.850 --> 00:03:13.860 align:start position:0%
typically talk about two things module
 

00:03:13.860 --> 00:03:18.080 align:start position:0%
typically talk about two things module
dependencies<00:03:14.580><c> and</c><00:03:14.880><c> package</c><00:03:15.840><c> exports</c><00:03:17.090><c> Java</c>

00:03:18.080 --> 00:03:18.090 align:start position:0%
dependencies and package exports Java
 

00:03:18.090 --> 00:03:20.740 align:start position:0%
dependencies and package exports Java
desktop<00:03:18.299><c> is</c><00:03:18.840><c> the</c><00:03:18.900><c> JDK</c><00:03:19.590><c> module</c><00:03:19.980><c> that</c><00:03:20.430><c> contains</c>

00:03:20.740 --> 00:03:20.750 align:start position:0%
desktop is the JDK module that contains
 

00:03:20.750 --> 00:03:24.080 align:start position:0%
desktop is the JDK module that contains
AWT<00:03:21.750><c> and</c><00:03:21.989><c> swing</c><00:03:22.440><c> as</c><00:03:22.709><c> you</c><00:03:23.280><c> can</c><00:03:23.430><c> see</c><00:03:23.640><c> it</c>

00:03:24.080 --> 00:03:24.090 align:start position:0%
AWT and swing as you can see it
 

00:03:24.090 --> 00:03:27.289 align:start position:0%
AWT and swing as you can see it
expresses<00:03:24.930><c> a</c><00:03:24.959><c> dependency</c><00:03:25.950><c> on</c><00:03:26.160><c> the</c><00:03:26.880><c> java</c><00:03:27.120><c> xml</c>

00:03:27.289 --> 00:03:27.299 align:start position:0%
expresses a dependency on the java xml
 

00:03:27.299 --> 00:03:30.080 align:start position:0%
expresses a dependency on the java xml
module<00:03:27.959><c> for</c><00:03:28.470><c> some</c><00:03:28.769><c> internal</c><00:03:29.760><c> implementation</c>

00:03:30.080 --> 00:03:30.090 align:start position:0%
module for some internal implementation
 

00:03:30.090 --> 00:03:33.530 align:start position:0%
module for some internal implementation
reason<00:03:30.840><c> so</c><00:03:31.769><c> that</c><00:03:31.920><c> it</c><00:03:32.010><c> can</c><00:03:32.190><c> access</c><00:03:32.430><c> all</c><00:03:33.180><c> of</c><00:03:33.450><c> the</c>

00:03:33.530 --> 00:03:33.540 align:start position:0%
reason so that it can access all of the
 

00:03:33.540 --> 00:03:36.199 align:start position:0%
reason so that it can access all of the
public<00:03:33.900><c> types</c><00:03:34.140><c> in</c><00:03:34.410><c> the</c><00:03:34.530><c> api</c><00:03:34.890><c> exported</c><00:03:35.730><c> by</c><00:03:35.910><c> Java</c>

00:03:36.199 --> 00:03:36.209 align:start position:0%
public types in the api exported by Java
 

00:03:36.209 --> 00:03:40.940 align:start position:0%
public types in the api exported by Java
XML<00:03:36.750><c> and</c><00:03:38.060><c> Java</c><00:03:39.060><c> desktop</c><00:03:39.769><c> exports</c><00:03:40.769><c> the</c>

00:03:40.940 --> 00:03:40.950 align:start position:0%
XML and Java desktop exports the
 

00:03:40.950 --> 00:03:43.789 align:start position:0%
XML and Java desktop exports the
java.awt<00:03:41.430><c> package</c><00:03:42.329><c> so</c><00:03:42.959><c> that</c><00:03:42.989><c> anyone</c><00:03:43.560><c> who</c>

00:03:43.789 --> 00:03:43.799 align:start position:0%
java.awt package so that anyone who
 

00:03:43.799 --> 00:03:46.629 align:start position:0%
java.awt package so that anyone who
requires<00:03:44.220><c> Java</c><00:03:44.639><c> desktop</c><00:03:45.170><c> can</c><00:03:46.170><c> themselves</c>

00:03:46.629 --> 00:03:46.639 align:start position:0%
requires Java desktop can themselves
 

00:03:46.639 --> 00:03:49.640 align:start position:0%
requires Java desktop can themselves
access<00:03:47.639><c> the</c><00:03:47.819><c> exported</c><00:03:48.569><c> public</c><00:03:48.930><c> types</c><00:03:49.170><c> of</c><00:03:49.500><c> the</c>

00:03:49.640 --> 00:03:49.650 align:start position:0%
access the exported public types of the
 

00:03:49.650 --> 00:03:55.340 align:start position:0%
access the exported public types of the
AWT<00:03:50.459><c> api</c><00:03:52.819><c> the</c><00:03:53.819><c> coupling</c><00:03:54.389><c> between</c><00:03:54.420><c> Java</c>

00:03:55.340 --> 00:03:55.350 align:start position:0%
AWT api the coupling between Java
 

00:03:55.350 --> 00:04:00.319 align:start position:0%
AWT api the coupling between Java
desktop<00:03:55.590><c> and</c><00:03:56.220><c> Java</c><00:03:57.000><c> XML</c><00:03:57.569><c> is</c><00:03:58.109><c> very</c><00:03:58.560><c> tight</c><00:03:59.329><c> if</c>

00:04:00.319 --> 00:04:00.329 align:start position:0%
desktop and Java XML is very tight if
 

00:04:00.329 --> 00:04:03.099 align:start position:0%
desktop and Java XML is very tight if
java<00:04:00.660><c> xml</c><00:04:00.950><c> isn't</c><00:04:01.950><c> found</c><00:04:02.310><c> at</c><00:04:02.519><c> compile</c><00:04:02.910><c> time</c>

00:04:03.099 --> 00:04:03.109 align:start position:0%
java xml isn't found at compile time
 

00:04:03.109 --> 00:04:05.840 align:start position:0%
java xml isn't found at compile time
then<00:04:04.109><c> Java</c><00:04:04.380><c> desktop</c><00:04:04.620><c> which</c><00:04:05.160><c> requires</c><00:04:05.579><c> it</c>

00:04:05.840 --> 00:04:05.850 align:start position:0%
then Java desktop which requires it
 

00:04:05.850 --> 00:04:10.280 align:start position:0%
then Java desktop which requires it
cannot<00:04:06.630><c> be</c><00:04:06.810><c> built</c><00:04:06.959><c> and</c><00:04:07.670><c> if</c><00:04:08.670><c> java</c><00:04:09.299><c> xml</c><00:04:09.510><c> isn't</c>

00:04:10.280 --> 00:04:10.290 align:start position:0%
cannot be built and if java xml isn't
 

00:04:10.290 --> 00:04:12.770 align:start position:0%
cannot be built and if java xml isn't
found<00:04:10.500><c> at</c><00:04:10.829><c> runtime</c><00:04:11.130><c> then</c><00:04:12.000><c> no</c><00:04:12.269><c> system</c>

00:04:12.770 --> 00:04:12.780 align:start position:0%
found at runtime then no system
 

00:04:12.780 --> 00:04:16.039 align:start position:0%
found at runtime then no system
depending<00:04:13.709><c> on</c><00:04:13.889><c> Java</c><00:04:14.670><c> desktop</c><00:04:14.910><c> can</c><00:04:15.750><c> start</c>

00:04:16.039 --> 00:04:16.049 align:start position:0%
depending on Java desktop can start
 

00:04:16.049 --> 00:04:19.490 align:start position:0%
depending on Java desktop can start
since<00:04:16.739><c> desktops</c><00:04:17.370><c> dependency</c><00:04:18.269><c> on</c><00:04:18.389><c> XML</c><00:04:18.870><c> is</c>

00:04:19.490 --> 00:04:19.500 align:start position:0%
since desktops dependency on XML is
 

00:04:19.500 --> 00:04:23.830 align:start position:0%
since desktops dependency on XML is
unresolved

00:04:23.830 --> 00:04:23.840 align:start position:0%
 
 

00:04:23.840 --> 00:04:27.290 align:start position:0%
 
there<00:04:24.840><c> is</c><00:04:25.020><c> another</c><00:04:25.350><c> kind</c><00:04:25.770><c> of</c><00:04:26.300><c> coupling</c>

00:04:27.290 --> 00:04:27.300 align:start position:0%
there is another kind of coupling
 

00:04:27.300 --> 00:04:30.230 align:start position:0%
there is another kind of coupling
between<00:04:27.930><c> modules</c><00:04:28.410><c> that</c><00:04:28.950><c> is</c><00:04:29.100><c> much</c><00:04:29.370><c> looser</c><00:04:30.090><c> than</c>

00:04:30.230 --> 00:04:30.240 align:start position:0%
between modules that is much looser than
 

00:04:30.240 --> 00:04:32.870 align:start position:0%
between modules that is much looser than
that<00:04:30.450><c> it's</c><00:04:31.230><c> so</c><00:04:31.470><c> useful</c><00:04:31.800><c> that</c><00:04:32.220><c> we've</c><00:04:32.340><c> built</c><00:04:32.640><c> it</c>

00:04:32.870 --> 00:04:32.880 align:start position:0%
that it's so useful that we've built it
 

00:04:32.880 --> 00:04:36.890 align:start position:0%
that it's so useful that we've built it
into<00:04:33.120><c> the</c><00:04:33.480><c> module</c><00:04:33.810><c> system</c><00:04:34.550><c> it</c><00:04:35.550><c> involves</c><00:04:36.330><c> one</c>

00:04:36.890 --> 00:04:36.900 align:start position:0%
into the module system it involves one
 

00:04:36.900 --> 00:04:39.830 align:start position:0%
into the module system it involves one
module<00:04:37.370><c> requesting</c><00:04:38.370><c> and</c><00:04:38.630><c> implementation</c><00:04:39.630><c> of</c>

00:04:39.830 --> 00:04:39.840 align:start position:0%
module requesting and implementation of
 

00:04:39.840 --> 00:04:44.170 align:start position:0%
module requesting and implementation of
an<00:04:40.020><c> interface</c><00:04:40.440><c> and</c><00:04:41.120><c> other</c><00:04:42.120><c> modules</c><00:04:42.720><c> providing</c>

00:04:44.170 --> 00:04:44.180 align:start position:0%
an interface and other modules providing
 

00:04:44.180 --> 00:04:47.510 align:start position:0%
an interface and other modules providing
implementations<00:04:45.180><c> of</c><00:04:45.510><c> that</c><00:04:45.930><c> interface</c><00:04:46.520><c> I'm</c>

00:04:47.510 --> 00:04:47.520 align:start position:0%
implementations of that interface I'm
 

00:04:47.520 --> 00:04:48.530 align:start position:0%
implementations of that interface I'm
actually<00:04:47.700><c> going</c><00:04:47.910><c> to</c><00:04:47.970><c> say</c><00:04:48.090><c> that</c><00:04:48.240><c> again</c>

00:04:48.530 --> 00:04:48.540 align:start position:0%
actually going to say that again
 

00:04:48.540 --> 00:04:49.640 align:start position:0%
actually going to say that again
because<00:04:48.780><c> that's</c><00:04:48.930><c> what</c><00:04:49.080><c> this</c><00:04:49.230><c> entire</c>

00:04:49.640 --> 00:04:49.650 align:start position:0%
because that's what this entire
 

00:04:49.650 --> 00:04:52.250 align:start position:0%
because that's what this entire
presentation<00:04:49.950><c> is</c><00:04:50.520><c> about</c><00:04:50.870><c> one</c><00:04:51.870><c> module</c>

00:04:52.250 --> 00:04:52.260 align:start position:0%
presentation is about one module
 

00:04:52.260 --> 00:04:54.200 align:start position:0%
presentation is about one module
requests<00:04:53.100><c> an</c><00:04:53.280><c> implementation</c><00:04:54.030><c> of</c><00:04:54.120><c> an</c>

00:04:54.200 --> 00:04:54.210 align:start position:0%
requests an implementation of an
 

00:04:54.210 --> 00:04:56.920 align:start position:0%
requests an implementation of an
interface<00:04:54.540><c> other</c><00:04:55.410><c> modules</c><00:04:56.040><c> provide</c>

00:04:56.920 --> 00:04:56.930 align:start position:0%
interface other modules provide
 

00:04:56.930 --> 00:05:00.920 align:start position:0%
interface other modules provide
implementations<00:04:57.930><c> of</c><00:04:58.320><c> that</c><00:04:58.710><c> interface</c><00:04:59.750><c> as</c><00:05:00.750><c> an</c>

00:05:00.920 --> 00:05:00.930 align:start position:0%
implementations of that interface as an
 

00:05:00.930 --> 00:05:04.190 align:start position:0%
implementations of that interface as an
example<00:05:01.760><c> the</c><00:05:02.760><c> Java</c><00:05:03.030><c> desktop</c><00:05:03.270><c> module</c><00:05:03.840><c> could</c>

00:05:04.190 --> 00:05:04.200 align:start position:0%
example the Java desktop module could
 

00:05:04.200 --> 00:05:07.820 align:start position:0%
example the Java desktop module could
request<00:05:04.650><c> an</c><00:05:05.480><c> implementation</c><00:05:06.480><c> of</c><00:05:06.660><c> some</c><00:05:07.290><c> print</c>

00:05:07.820 --> 00:05:07.830 align:start position:0%
request an implementation of some print
 

00:05:07.830 --> 00:05:11.150 align:start position:0%
request an implementation of some print
service<00:05:08.310><c> lookup</c><00:05:08.730><c> interface</c><00:05:09.800><c> while</c><00:05:10.800><c> another</c>

00:05:11.150 --> 00:05:11.160 align:start position:0%
service lookup interface while another
 

00:05:11.160 --> 00:05:15.110 align:start position:0%
service lookup interface while another
module<00:05:11.370><c> print</c><00:05:12.270><c> Lib</c><00:05:12.650><c> has</c><00:05:13.650><c> some</c><00:05:14.010><c> class</c><00:05:14.340><c> that</c>

00:05:15.110 --> 00:05:15.120 align:start position:0%
module print Lib has some class that
 

00:05:15.120 --> 00:05:19.100 align:start position:0%
module print Lib has some class that
implements<00:05:15.570><c> print</c><00:05:16.320><c> service</c><00:05:16.650><c> lookup</c><00:05:18.110><c> at</c>

00:05:19.100 --> 00:05:19.110 align:start position:0%
implements print service lookup at
 

00:05:19.110 --> 00:05:22.400 align:start position:0%
implements print service lookup at
runtime<00:05:19.580><c> code</c><00:05:20.580><c> in</c><00:05:21.030><c> the</c><00:05:21.390><c> Java</c><00:05:21.630><c> desktop</c><00:05:21.840><c> module</c>

00:05:22.400 --> 00:05:22.410 align:start position:0%
runtime code in the Java desktop module
 

00:05:22.410 --> 00:05:25.880 align:start position:0%
runtime code in the Java desktop module
to<00:05:23.100><c> do</c><00:05:23.190><c> with</c><00:05:23.310><c> printing</c><00:05:23.720><c> can</c><00:05:24.720><c> call</c><00:05:25.050><c> a</c><00:05:25.320><c> simple</c>

00:05:25.880 --> 00:05:25.890 align:start position:0%
to do with printing can call a simple
 

00:05:25.890 --> 00:05:30.020 align:start position:0%
to do with printing can call a simple
standard<00:05:26.460><c> API</c><00:05:27.140><c> to</c><00:05:28.140><c> obtain</c><00:05:28.620><c> an</c><00:05:28.860><c> instance</c><00:05:29.610><c> of</c>

00:05:30.020 --> 00:05:30.030 align:start position:0%
standard API to obtain an instance of
 

00:05:30.030 --> 00:05:33.800 align:start position:0%
standard API to obtain an instance of
print<00:05:30.840><c> service</c><00:05:31.170><c> lookup</c><00:05:31.500><c> the</c><00:05:32.630><c> instance</c><00:05:33.630><c> in</c>

00:05:33.800 --> 00:05:33.810 align:start position:0%
print service lookup the instance in
 

00:05:33.810 --> 00:05:36.940 align:start position:0%
print service lookup the instance in
this<00:05:33.930><c> case</c><00:05:34.130><c> would</c><00:05:35.130><c> be</c><00:05:35.310><c> of</c><00:05:35.550><c> class</c><00:05:35.880><c> a</c><00:05:36.210><c> fast</c><00:05:36.480><c> print</c>

00:05:36.940 --> 00:05:36.950 align:start position:0%
this case would be of class a fast print
 

00:05:36.950 --> 00:05:39.890 align:start position:0%
this case would be of class a fast print
from<00:05:37.950><c> the</c><00:05:38.070><c> print</c><00:05:38.250><c> Lib</c><00:05:38.430><c> module</c><00:05:38.730><c> but</c><00:05:39.660><c> Java</c>

00:05:39.890 --> 00:05:39.900 align:start position:0%
from the print Lib module but Java
 

00:05:39.900 --> 00:05:44.120 align:start position:0%
from the print Lib module but Java
desktop<00:05:40.170><c> does</c><00:05:41.010><c> not</c><00:05:41.340><c> require</c><00:05:41.850><c> print</c><00:05:42.540><c> Lib</c><00:05:43.130><c> this</c>

00:05:44.120 --> 00:05:44.130 align:start position:0%
desktop does not require print Lib this
 

00:05:44.130 --> 00:05:46.670 align:start position:0%
desktop does not require print Lib this
means<00:05:44.400><c> that</c><00:05:44.580><c> Java</c><00:05:44.820><c> desktop</c><00:05:45.390><c> can</c><00:05:45.990><c> be</c><00:05:46.140><c> resolved</c>

00:05:46.670 --> 00:05:46.680 align:start position:0%
means that Java desktop can be resolved
 

00:05:46.680 --> 00:05:49.310 align:start position:0%
means that Java desktop can be resolved
by<00:05:46.740><c> the</c><00:05:46.920><c> module</c><00:05:47.310><c> system</c><00:05:47.760><c> even</c><00:05:48.540><c> if</c><00:05:48.660><c> print</c><00:05:49.050><c> Lib</c>

00:05:49.310 --> 00:05:49.320 align:start position:0%
by the module system even if print Lib
 

00:05:49.320 --> 00:05:51.740 align:start position:0%
by the module system even if print Lib
is<00:05:49.560><c> not</c><00:05:49.890><c> present</c><00:05:50.640><c> at</c><00:05:50.970><c> compile</c><00:05:51.360><c> time</c><00:05:51.390><c> or</c>

00:05:51.740 --> 00:05:51.750 align:start position:0%
is not present at compile time or
 

00:05:51.750 --> 00:05:58.160 align:start position:0%
is not present at compile time or
runtime<00:05:53.330><c> also</c><00:05:54.650><c> print</c><00:05:55.650><c> Lib</c><00:05:55.890><c> would</c><00:05:56.880><c> not</c><00:05:57.170><c> export</c>

00:05:58.160 --> 00:05:58.170 align:start position:0%
runtime also print Lib would not export
 

00:05:58.170 --> 00:06:00.290 align:start position:0%
runtime also print Lib would not export
the<00:05:58.350><c> package</c><00:05:58.800><c> that</c><00:05:59.070><c> contains</c><00:05:59.700><c> that</c><00:05:59.970><c> fast</c>

00:06:00.290 --> 00:06:00.300 align:start position:0%
the package that contains that fast
 

00:06:00.300 --> 00:06:03.140 align:start position:0%
the package that contains that fast
print<00:06:00.660><c> class</c><00:06:00.900><c> fast</c><00:06:01.680><c> print</c><00:06:02.040><c> is</c><00:06:02.310><c> a</c><00:06:02.490><c> class</c><00:06:02.820><c> it's</c>

00:06:03.140 --> 00:06:03.150 align:start position:0%
print class fast print is a class it's
 

00:06:03.150 --> 00:06:05.240 align:start position:0%
print class fast print is a class it's
not<00:06:03.210><c> an</c><00:06:03.510><c> API</c><00:06:03.900><c> that</c><00:06:04.020><c> other</c><00:06:04.410><c> modules</c><00:06:04.890><c> should</c>

00:06:05.240 --> 00:06:05.250 align:start position:0%
not an API that other modules should
 

00:06:05.250 --> 00:06:08.360 align:start position:0%
not an API that other modules should
access<00:06:06.030><c> directly</c><00:06:06.450><c> other</c><00:06:07.110><c> modules</c><00:06:07.650><c> like</c><00:06:08.100><c> Java</c>

00:06:08.360 --> 00:06:08.370 align:start position:0%
access directly other modules like Java
 

00:06:08.370 --> 00:06:10.640 align:start position:0%
access directly other modules like Java
desktop<00:06:08.600><c> should</c><00:06:09.600><c> invoke</c><00:06:09.900><c> methods</c><00:06:10.320><c> of</c><00:06:10.470><c> fast</c>

00:06:10.640 --> 00:06:10.650 align:start position:0%
desktop should invoke methods of fast
 

00:06:10.650 --> 00:06:13.040 align:start position:0%
desktop should invoke methods of fast
print<00:06:10.920><c> only</c><00:06:11.400><c> through</c><00:06:11.970><c> the</c><00:06:12.180><c> print</c><00:06:12.630><c> service</c>

00:06:13.040 --> 00:06:13.050 align:start position:0%
print only through the print service
 

00:06:13.050 --> 00:06:18.920 align:start position:0%
print only through the print service
lookup<00:06:13.440><c> interface</c><00:06:17.330><c> what</c><00:06:18.330><c> do</c><00:06:18.510><c> the</c><00:06:18.630><c> module</c>

00:06:18.920 --> 00:06:18.930 align:start position:0%
lookup interface what do the module
 

00:06:18.930 --> 00:06:20.990 align:start position:0%
lookup interface what do the module
declarations<00:06:19.590><c> look</c><00:06:19.830><c> like</c><00:06:20.070><c> for</c><00:06:20.880><c> this</c>

00:06:20.990 --> 00:06:21.000 align:start position:0%
declarations look like for this
 

00:06:21.000 --> 00:06:24.620 align:start position:0%
declarations look like for this
relationship<00:06:21.920><c> it's</c><00:06:22.920><c> very</c><00:06:23.100><c> simple</c><00:06:23.630><c> Java</c>

00:06:24.620 --> 00:06:24.630 align:start position:0%
relationship it's very simple Java
 

00:06:24.630 --> 00:06:27.980 align:start position:0%
relationship it's very simple Java
desktop<00:06:24.840><c> would</c><00:06:25.740><c> say</c><00:06:26.280><c> that</c><00:06:26.430><c> it</c><00:06:26.520><c> uses</c><00:06:27.000><c> print</c>

00:06:27.980 --> 00:06:27.990 align:start position:0%
desktop would say that it uses print
 

00:06:27.990 --> 00:06:31.160 align:start position:0%
desktop would say that it uses print
service<00:06:28.320><c> lookup</c><00:06:28.650><c> and</c><00:06:29.420><c> the</c><00:06:30.420><c> print</c><00:06:30.690><c> Lib</c><00:06:30.870><c> module</c>

00:06:31.160 --> 00:06:31.170 align:start position:0%
service lookup and the print Lib module
 

00:06:31.170 --> 00:06:33.830 align:start position:0%
service lookup and the print Lib module
would<00:06:31.470><c> say</c><00:06:31.620><c> that</c><00:06:31.800><c> it</c><00:06:31.920><c> provides</c><00:06:32.540><c> print</c><00:06:33.540><c> service</c>

00:06:33.830 --> 00:06:33.840 align:start position:0%
would say that it provides print service
 

00:06:33.840 --> 00:06:35.750 align:start position:0%
would say that it provides print service
look<00:06:33.990><c> up</c><00:06:34.110><c> with</c><00:06:34.920><c> the</c>

00:06:35.750 --> 00:06:35.760 align:start position:0%
look up with the
 

00:06:35.760 --> 00:06:39.620 align:start position:0%
look up with the
print<00:06:36.000><c> glass</c><00:06:37.670><c> print</c><00:06:38.670><c> service</c><00:06:39.060><c> lookup</c><00:06:39.420><c> is</c>

00:06:39.620 --> 00:06:39.630 align:start position:0%
print glass print service lookup is
 

00:06:39.630 --> 00:06:42.830 align:start position:0%
print glass print service lookup is
called<00:06:40.020><c> the</c><00:06:40.500><c> service</c><00:06:41.070><c> type</c><00:06:41.280><c> the</c><00:06:42.270><c> service</c><00:06:42.630><c> type</c>

00:06:42.830 --> 00:06:42.840 align:start position:0%
called the service type the service type
 

00:06:42.840 --> 00:06:45.770 align:start position:0%
called the service type the service type
is<00:06:43.110><c> usually</c><00:06:43.770><c> an</c><00:06:43.980><c> interface</c><00:06:44.430><c> but</c><00:06:45.330><c> it</c><00:06:45.450><c> can</c><00:06:45.600><c> be</c><00:06:45.690><c> an</c>

00:06:45.770 --> 00:06:45.780 align:start position:0%
is usually an interface but it can be an
 

00:06:45.780 --> 00:06:47.450 align:start position:0%
is usually an interface but it can be an
abstract<00:06:46.050><c> class</c><00:06:46.260><c> or</c><00:06:46.650><c> even</c><00:06:46.860><c> a</c><00:06:46.920><c> concrete</c><00:06:47.190><c> class</c>

00:06:47.450 --> 00:06:47.460 align:start position:0%
abstract class or even a concrete class
 

00:06:47.460 --> 00:06:51.680 align:start position:0%
abstract class or even a concrete class
if<00:06:47.700><c> you</c><00:06:47.790><c> really</c><00:06:48.150><c> have</c><00:06:48.270><c> a</c><00:06:48.300><c> need</c><00:06:48.480><c> for</c><00:06:48.510><c> that</c><00:06:50.690><c> fast</c>

00:06:51.680 --> 00:06:51.690 align:start position:0%
if you really have a need for that fast
 

00:06:51.690 --> 00:06:55.400 align:start position:0%
if you really have a need for that fast
print<00:06:52.110><c> is</c><00:06:52.410><c> the</c><00:06:53.130><c> provider</c><00:06:53.760><c> class</c><00:06:54.120><c> the</c><00:06:55.050><c> provider</c>

00:06:55.400 --> 00:06:55.410 align:start position:0%
print is the provider class the provider
 

00:06:55.410 --> 00:06:58.370 align:start position:0%
print is the provider class the provider
class<00:06:55.710><c> must</c><00:06:56.130><c> be</c><00:06:56.220><c> a</c><00:06:56.490><c> concrete</c><00:06:57.090><c> class</c><00:06:57.390><c> that</c>

00:06:58.370 --> 00:06:58.380 align:start position:0%
class must be a concrete class that
 

00:06:58.380 --> 00:07:00.290 align:start position:0%
class must be a concrete class that
implements<00:06:58.830><c> or</c><00:06:59.160><c> extends</c><00:06:59.640><c> the</c><00:06:59.760><c> service</c><00:07:00.090><c> type</c>

00:07:00.290 --> 00:07:00.300 align:start position:0%
implements or extends the service type
 

00:07:00.300 --> 00:07:03.020 align:start position:0%
implements or extends the service type
and<00:07:00.510><c> declares</c><00:07:01.410><c> a</c><00:07:01.500><c> no</c><00:07:01.710><c> arts</c><00:07:02.010><c> constructor</c><00:07:02.700><c> so</c>

00:07:03.020 --> 00:07:03.030 align:start position:0%
and declares a no arts constructor so
 

00:07:03.030 --> 00:07:04.160 align:start position:0%
and declares a no arts constructor so
that<00:07:03.150><c> ik</c><00:07:03.330><c> so</c><00:07:03.510><c> that</c><00:07:03.630><c> it</c><00:07:03.720><c> can</c><00:07:03.840><c> be</c><00:07:03.930><c> instantiated</c>

00:07:04.160 --> 00:07:04.170 align:start position:0%
that ik so that it can be instantiated
 

00:07:04.170 --> 00:07:07.730 align:start position:0%
that ik so that it can be instantiated
by<00:07:04.650><c> the</c><00:07:04.770><c> module</c><00:07:05.100><c> system</c><00:07:06.170><c> we</c><00:07:07.170><c> say</c><00:07:07.350><c> that</c><00:07:07.530><c> Java</c>

00:07:07.730 --> 00:07:07.740 align:start position:0%
by the module system we say that Java
 

00:07:07.740 --> 00:07:10.040 align:start position:0%
by the module system we say that Java
desktop<00:07:08.250><c> is</c><00:07:08.430><c> the</c><00:07:08.610><c> consumer</c><00:07:09.180><c> module</c><00:07:09.510><c> he</c><00:07:09.780><c> stops</c>

00:07:10.040 --> 00:07:10.050 align:start position:0%
desktop is the consumer module he stops
 

00:07:10.050 --> 00:07:13.580 align:start position:0%
desktop is the consumer module he stops
with<00:07:10.290><c> the</c><00:07:10.320><c> dark</c><00:07:10.650><c> blue</c><00:07:10.980><c> arrow</c><00:07:11.820><c> and</c><00:07:12.380><c> print</c><00:07:13.380><c> lib</c>

00:07:13.580 --> 00:07:13.590 align:start position:0%
with the dark blue arrow and print lib
 

00:07:13.590 --> 00:07:16.820 align:start position:0%
with the dark blue arrow and print lib
is<00:07:13.800><c> a</c><00:07:14.280><c> provider</c><00:07:14.910><c> module</c><00:07:15.420><c> he's</c><00:07:15.780><c> got</c><00:07:16.410><c> the</c><00:07:16.500><c> purple</c>

00:07:16.820 --> 00:07:16.830 align:start position:0%
is a provider module he's got the purple
 

00:07:16.830 --> 00:07:22.100 align:start position:0%
is a provider module he's got the purple
arrow<00:07:18.710><c> notice</c><00:07:19.710><c> in</c><00:07:19.980><c> Java</c><00:07:20.400><c> desktop</c><00:07:21.020><c> that</c><00:07:22.020><c> you</c>

00:07:22.100 --> 00:07:22.110 align:start position:0%
arrow notice in Java desktop that you
 

00:07:22.110 --> 00:07:24.920 align:start position:0%
arrow notice in Java desktop that you
are<00:07:22.260><c> seeing</c><00:07:22.560><c> requires</c><00:07:23.310><c> take</c><00:07:24.270><c> a</c><00:07:24.300><c> module</c><00:07:24.720><c> named</c>

00:07:24.920 --> 00:07:24.930 align:start position:0%
are seeing requires take a module named
 

00:07:24.930 --> 00:07:30.280 align:start position:0%
are seeing requires take a module named
java<00:07:25.650><c> xml</c><00:07:26.570><c> exports</c><00:07:27.570><c> take</c><00:07:28.380><c> a</c><00:07:28.410><c> package</c><00:07:29.070><c> name</c><00:07:29.310><c> and</c>

00:07:30.280 --> 00:07:30.290 align:start position:0%
java xml exports take a package name and
 

00:07:30.290 --> 00:07:35.390 align:start position:0%
java xml exports take a package name and
uses<00:07:31.310><c> take</c><00:07:32.310><c> a</c><00:07:32.340><c> type</c><00:07:32.700><c> name</c><00:07:33.650><c> three</c><00:07:34.650><c> different</c>

00:07:35.390 --> 00:07:35.400 align:start position:0%
uses take a type name three different
 

00:07:35.400 --> 00:07:38.270 align:start position:0%
uses take a type name three different
properties<00:07:35.670><c> of</c><00:07:35.940><c> a</c><00:07:36.240><c> module</c><00:07:36.920><c> three</c><00:07:37.920><c> different</c>

00:07:38.270 --> 00:07:38.280 align:start position:0%
properties of a module three different
 

00:07:38.280 --> 00:07:40.490 align:start position:0%
properties of a module three different
keywords<00:07:38.750><c> three</c><00:07:39.750><c> different</c><00:07:40.110><c> kinds</c><00:07:40.440><c> of</c>

00:07:40.490 --> 00:07:40.500 align:start position:0%
keywords three different kinds of
 

00:07:40.500 --> 00:07:46.070 align:start position:0%
keywords three different kinds of
arguments<00:07:43.310><c> the</c><00:07:44.310><c> provides</c><00:07:44.970><c> in</c><00:07:45.510><c> print</c><00:07:45.900><c> Lib</c>

00:07:46.070 --> 00:07:46.080 align:start position:0%
arguments the provides in print Lib
 

00:07:46.080 --> 00:07:49.160 align:start position:0%
arguments the provides in print Lib
takes<00:07:46.890><c> two</c><00:07:47.160><c> type</c><00:07:47.430><c> names</c><00:07:47.730><c> one</c><00:07:48.570><c> for</c><00:07:48.750><c> the</c><00:07:48.840><c> service</c>

00:07:49.160 --> 00:07:49.170 align:start position:0%
takes two type names one for the service
 

00:07:49.170 --> 00:07:51.520 align:start position:0%
takes two type names one for the service
type<00:07:49.380><c> and</c><00:07:49.650><c> one</c><00:07:49.980><c> for</c><00:07:50.190><c> the</c><00:07:50.250><c> provider</c><00:07:50.550><c> class</c><00:07:50.820><c> and</c>

00:07:51.520 --> 00:07:51.530 align:start position:0%
type and one for the provider class and
 

00:07:51.530 --> 00:07:54.650 align:start position:0%
type and one for the provider class and
that<00:07:52.530><c> provides</c><00:07:52.980><c> directive</c><00:07:53.520><c> is</c><00:07:53.700><c> the</c><00:07:53.970><c> modular</c>

00:07:54.650 --> 00:07:54.660 align:start position:0%
that provides directive is the modular
 

00:07:54.660 --> 00:07:58.040 align:start position:0%
that provides directive is the modular
equivalent<00:07:55.520><c> of</c><00:07:56.520><c> a</c><00:07:56.700><c> file</c><00:07:56.970><c> called</c><00:07:57.360><c> met</c><00:07:57.810><c> room</c>

00:07:58.040 --> 00:07:58.050 align:start position:0%
equivalent of a file called met room
 

00:07:58.050 --> 00:08:00.290 align:start position:0%
equivalent of a file called met room
slash<00:07:58.560><c> services</c><00:07:58.830><c> slash</c><00:07:59.640><c> print</c><00:07:59.970><c> service</c>

00:08:00.290 --> 00:08:00.300 align:start position:0%
slash services slash print service
 

00:08:00.300 --> 00:08:03.620 align:start position:0%
slash services slash print service
lookup<00:08:00.630><c> that</c><00:08:01.130><c> would</c><00:08:02.130><c> have</c><00:08:02.220><c> listed</c><00:08:02.640><c> the</c><00:08:03.390><c> fast</c>

00:08:03.620 --> 00:08:03.630 align:start position:0%
lookup that would have listed the fast
 

00:08:03.630 --> 00:08:08.150 align:start position:0%
lookup that would have listed the fast
print<00:08:03.900><c> class</c><00:08:04.250><c> prior</c><00:08:05.250><c> to</c><00:08:05.400><c> JDK</c><00:08:05.760><c> nine</c><00:08:06.380><c> if</c><00:08:07.380><c> a</c><00:08:07.890><c> jar</c>

00:08:08.150 --> 00:08:08.160 align:start position:0%
print class prior to JDK nine if a jar
 

00:08:08.160 --> 00:08:11.180 align:start position:0%
print class prior to JDK nine if a jar
file<00:08:08.730><c> has</c><00:08:09.120><c> a</c><00:08:09.150><c> module</c><00:08:09.510><c> info</c><00:08:10.020><c> class</c><00:08:10.560><c> compiled</c>

00:08:11.180 --> 00:08:11.190 align:start position:0%
file has a module info class compiled
 

00:08:11.190 --> 00:08:13.790 align:start position:0%
file has a module info class compiled
from<00:08:11.550><c> this</c><00:08:11.760><c> module</c><00:08:12.330><c> declaration</c><00:08:12.990><c> then</c><00:08:13.650><c> any</c>

00:08:13.790 --> 00:08:13.800 align:start position:0%
from this module declaration then any
 

00:08:13.800 --> 00:08:16.400 align:start position:0%
from this module declaration then any
files<00:08:14.100><c> in</c><00:08:14.340><c> mods</c><00:08:14.580><c> in</c><00:08:15.030><c> Metron</c><00:08:15.540><c> services</c><00:08:16.170><c> are</c>

00:08:16.400 --> 00:08:16.410 align:start position:0%
files in mods in Metron services are
 

00:08:16.410 --> 00:08:18.890 align:start position:0%
files in mods in Metron services are
ignored<00:08:16.830><c> the</c><00:08:17.190><c> module</c><00:08:17.490><c> declarations</c><00:08:18.180><c> idea</c><00:08:18.720><c> of</c>

00:08:18.890 --> 00:08:18.900 align:start position:0%
ignored the module declarations idea of
 

00:08:18.900 --> 00:08:22.810 align:start position:0%
ignored the module declarations idea of
uses<00:08:19.260><c> and</c><00:08:19.380><c> provides</c><00:08:19.770><c> wins</c>

00:08:22.810 --> 00:08:22.820 align:start position:0%
 
 

00:08:22.820 --> 00:08:25.340 align:start position:0%
 
just<00:08:23.820><c> to</c><00:08:23.910><c> clarify</c><00:08:24.060><c> what's</c><00:08:24.570><c> going</c><00:08:24.840><c> on</c><00:08:24.930><c> here</c>

00:08:25.340 --> 00:08:25.350 align:start position:0%
just to clarify what's going on here
 

00:08:25.350 --> 00:08:28.040 align:start position:0%
just to clarify what's going on here
there<00:08:26.100><c> is</c><00:08:26.220><c> no</c><00:08:26.340><c> dependency</c><00:08:27.120><c> injection</c><00:08:27.630><c> here</c><00:08:27.840><c> if</c>

00:08:28.040 --> 00:08:28.050 align:start position:0%
there is no dependency injection here if
 

00:08:28.050 --> 00:08:31.370 align:start position:0%
there is no dependency injection here if
your<00:08:28.860><c> module</c><00:08:29.280><c> says</c><00:08:29.580><c> uses</c><00:08:30.150><c> some</c><00:08:30.720><c> service</c><00:08:31.140><c> type</c>

00:08:31.370 --> 00:08:31.380 align:start position:0%
your module says uses some service type
 

00:08:31.380 --> 00:08:35.180 align:start position:0%
your module says uses some service type
and<00:08:32.000><c> you</c><00:08:33.000><c> have</c><00:08:33.180><c> a</c><00:08:33.210><c> field</c><00:08:33.690><c> of</c><00:08:34.110><c> that</c><00:08:34.710><c> service</c>

00:08:35.180 --> 00:08:35.190 align:start position:0%
and you have a field of that service
 

00:08:35.190 --> 00:08:38.330 align:start position:0%
and you have a field of that service
type<00:08:35.990><c> then</c><00:08:36.990><c> it</c><00:08:37.020><c> is</c><00:08:37.229><c> not</c><00:08:37.530><c> the</c><00:08:37.680><c> case</c><00:08:37.890><c> that</c><00:08:38.160><c> an</c>

00:08:38.330 --> 00:08:38.340 align:start position:0%
type then it is not the case that an
 

00:08:38.340 --> 00:08:40.100 align:start position:0%
type then it is not the case that an
instance<00:08:38.910><c> of</c><00:08:39.090><c> that</c><00:08:39.150><c> service</c><00:08:39.690><c> type</c><00:08:39.900><c> is</c>

00:08:40.100 --> 00:08:40.110 align:start position:0%
instance of that service type is
 

00:08:40.110 --> 00:08:43.760 align:start position:0%
instance of that service type is
magically<00:08:40.770><c> assigned</c><00:08:41.160><c> to</c><00:08:41.970><c> the</c><00:08:42.120><c> fields</c><00:08:42.770><c> you</c>

00:08:43.760 --> 00:08:43.770 align:start position:0%
magically assigned to the fields you
 

00:08:43.770 --> 00:08:46.610 align:start position:0%
magically assigned to the fields you
have<00:08:44.010><c> to</c><00:08:44.250><c> ask</c><00:08:44.580><c> for</c><00:08:45.240><c> an</c><00:08:45.450><c> instance</c>

00:08:46.610 --> 00:08:46.620 align:start position:0%
have to ask for an instance
 

00:08:46.620 --> 00:08:49.610 align:start position:0%
have to ask for an instance
of<00:08:46.680><c> the</c><00:08:47.339><c> service</c><00:08:47.700><c> type</c><00:08:47.910><c> explicitly</c><00:08:48.690><c> so</c><00:08:49.440><c> let's</c>

00:08:49.610 --> 00:08:49.620 align:start position:0%
of the service type explicitly so let's
 

00:08:49.620 --> 00:08:55.700 align:start position:0%
of the service type explicitly so let's
talk<00:08:49.770><c> about</c><00:08:49.920><c> that</c><00:08:52.850><c> to</c><00:08:53.850><c> obtain</c><00:08:54.270><c> an</c><00:08:54.570><c> instance</c><00:08:55.380><c> of</c>

00:08:55.700 --> 00:08:55.710 align:start position:0%
talk about that to obtain an instance of
 

00:08:55.710 --> 00:08:59.650 align:start position:0%
talk about that to obtain an instance of
the<00:08:56.130><c> print</c><00:08:56.490><c> service</c><00:08:56.910><c> lookup</c><00:08:57.360><c> interface</c><00:08:58.250><c> code</c>

00:08:59.650 --> 00:08:59.660 align:start position:0%
the print service lookup interface code
 

00:08:59.660 --> 00:09:01.700 align:start position:0%
the print service lookup interface code
hypothetical<00:09:00.660><c> code</c><00:09:00.839><c> in</c><00:09:01.080><c> the</c><00:09:01.230><c> Java</c><00:09:01.500><c> desktop</c>

00:09:01.700 --> 00:09:01.710 align:start position:0%
hypothetical code in the Java desktop
 

00:09:01.710 --> 00:09:05.650 align:start position:0%
hypothetical code in the Java desktop
module<00:09:02.810><c> employs</c><00:09:03.810><c> the</c><00:09:03.960><c> service</c><00:09:04.560><c> loader</c><00:09:04.860><c> API</c>

00:09:05.650 --> 00:09:05.660 align:start position:0%
module employs the service loader API
 

00:09:05.660 --> 00:09:10.220 align:start position:0%
module employs the service loader API
introduced<00:09:06.660><c> in</c><00:09:06.960><c> Java</c><00:09:07.470><c> 6</c><00:09:08.330><c> the</c><00:09:09.330><c> key</c><00:09:09.570><c> method</c><00:09:09.990><c> in</c>

00:09:10.220 --> 00:09:10.230 align:start position:0%
introduced in Java 6 the key method in
 

00:09:10.230 --> 00:09:12.590 align:start position:0%
introduced in Java 6 the key method in
service<00:09:11.070><c> loader</c><00:09:11.310><c> on</c><00:09:11.610><c> the</c><00:09:11.850><c> second</c><00:09:12.180><c> line</c><00:09:12.330><c> is</c>

00:09:12.590 --> 00:09:12.600 align:start position:0%
service loader on the second line is
 

00:09:12.600 --> 00:09:16.100 align:start position:0%
service loader on the second line is
load<00:09:12.900><c> it</c><00:09:13.520><c> takes</c><00:09:14.520><c> a</c><00:09:14.640><c> class</c><00:09:14.910><c> object</c><00:09:15.180><c> java.lang</c>

00:09:16.100 --> 00:09:16.110 align:start position:0%
load it takes a class object java.lang
 

00:09:16.110 --> 00:09:18.769 align:start position:0%
load it takes a class object java.lang
class<00:09:16.670><c> representing</c><00:09:17.670><c> a</c><00:09:17.820><c> service</c><00:09:18.210><c> type</c><00:09:18.450><c> so</c>

00:09:18.769 --> 00:09:18.779 align:start position:0%
class representing a service type so
 

00:09:18.779 --> 00:09:22.100 align:start position:0%
class representing a service type so
print<00:09:19.140><c> service</c><00:09:19.410><c> lookup</c><00:09:19.680><c> dock</c><00:09:19.830><c> last</c><00:09:20.070><c> as</c><00:09:21.110><c> long</c>

00:09:22.100 --> 00:09:22.110 align:start position:0%
print service lookup dock last as long
 

00:09:22.110 --> 00:09:25.070 align:start position:0%
print service lookup dock last as long
as<00:09:22.320><c> Java</c><00:09:22.620><c> desktop</c><00:09:22.830><c> is</c><00:09:23.820><c> containing</c><00:09:24.690><c> this</c><00:09:24.870><c> code</c>

00:09:25.070 --> 00:09:25.080 align:start position:0%
as Java desktop is containing this code
 

00:09:25.080 --> 00:09:28.600 align:start position:0%
as Java desktop is containing this code
says<00:09:25.980><c> that</c><00:09:26.160><c> it</c><00:09:26.279><c> uses</c><00:09:26.850><c> print</c><00:09:27.600><c> service</c><00:09:27.960><c> lookup</c>

00:09:28.600 --> 00:09:28.610 align:start position:0%
says that it uses print service lookup
 

00:09:28.610 --> 00:09:31.910 align:start position:0%
says that it uses print service lookup
that<00:09:29.610><c> load</c><00:09:29.940><c> method</c><00:09:30.420><c> returns</c><00:09:31.320><c> a</c><00:09:31.529><c> service</c>

00:09:31.910 --> 00:09:31.920 align:start position:0%
that load method returns a service
 

00:09:31.920 --> 00:09:34.850 align:start position:0%
that load method returns a service
loader<00:09:32.160><c> object</c><00:09:32.839><c> capable</c><00:09:33.839><c> of</c><00:09:34.410><c> yielding</c>

00:09:34.850 --> 00:09:34.860 align:start position:0%
loader object capable of yielding
 

00:09:34.860 --> 00:09:39.590 align:start position:0%
loader object capable of yielding
instances<00:09:35.850><c> of</c><00:09:36.120><c> that</c><00:09:36.570><c> service</c><00:09:36.990><c> type</c><00:09:38.600><c> the</c>

00:09:39.590 --> 00:09:39.600 align:start position:0%
instances of that service type the
 

00:09:39.600 --> 00:09:42.320 align:start position:0%
instances of that service type the
module<00:09:39.990><c> system</c><00:09:40.470><c> works</c><00:09:40.890><c> behind</c><00:09:41.339><c> the</c><00:09:41.730><c> scenes</c><00:09:42.000><c> to</c>

00:09:42.320 --> 00:09:42.330 align:start position:0%
module system works behind the scenes to
 

00:09:42.330 --> 00:09:45.640 align:start position:0%
module system works behind the scenes to
assist<00:09:42.690><c> service</c><00:09:43.260><c> loader</c><00:09:43.730><c> the</c><00:09:44.730><c> module</c><00:09:45.029><c> system</c>

00:09:45.640 --> 00:09:45.650 align:start position:0%
assist service loader the module system
 

00:09:45.650 --> 00:09:48.200 align:start position:0%
assist service loader the module system
automatically<00:09:46.650><c> discovers</c><00:09:47.310><c> provider</c><00:09:47.700><c> modules</c>

00:09:48.200 --> 00:09:48.210 align:start position:0%
automatically discovers provider modules
 

00:09:48.210 --> 00:09:51.920 align:start position:0%
automatically discovers provider modules
at<00:09:48.690><c> startup</c><00:09:49.529><c> by</c><00:09:50.339><c> scanning</c><00:09:50.820><c> modules</c><00:09:51.480><c> in</c><00:09:51.810><c> the</c>

00:09:51.920 --> 00:09:51.930 align:start position:0%
at startup by scanning modules in the
 

00:09:51.930 --> 00:09:55.400 align:start position:0%
at startup by scanning modules in the
Java<00:09:52.170><c> Runtime</c><00:09:52.589><c> image</c><00:09:52.830><c> and</c><00:09:53.810><c> modular</c><00:09:54.810><c> jars</c><00:09:55.080><c> on</c>

00:09:55.400 --> 00:09:55.410 align:start position:0%
Java Runtime image and modular jars on
 

00:09:55.410 --> 00:09:58.430 align:start position:0%
Java Runtime image and modular jars on
the<00:09:55.589><c> module</c><00:09:55.860><c> path</c><00:09:56.900><c> now</c><00:09:57.900><c> there</c><00:09:58.050><c> could</c><00:09:58.170><c> be</c><00:09:58.200><c> lots</c>

00:09:58.430 --> 00:09:58.440 align:start position:0%
the module path now there could be lots
 

00:09:58.440 --> 00:10:00.560 align:start position:0%
the module path now there could be lots
of<00:09:58.650><c> provider</c><00:09:59.490><c> modules</c><00:09:59.910><c> there</c><00:10:00.180><c> could</c><00:10:00.300><c> be</c><00:10:00.330><c> more</c>

00:10:00.560 --> 00:10:00.570 align:start position:0%
of provider modules there could be more
 

00:10:00.570 --> 00:10:02.780 align:start position:0%
of provider modules there could be more
than<00:10:00.600><c> one</c><00:10:00.839><c> provider</c><00:10:01.200><c> module</c><00:10:01.529><c> for</c><00:10:02.520><c> print</c>

00:10:02.780 --> 00:10:02.790 align:start position:0%
than one provider module for print
 

00:10:02.790 --> 00:10:05.120 align:start position:0%
than one provider module for print
service<00:10:03.089><c> lookup</c><00:10:03.420><c> which</c><00:10:04.350><c> means</c><00:10:04.560><c> more</c><00:10:04.770><c> than</c><00:10:04.830><c> one</c>

00:10:05.120 --> 00:10:05.130 align:start position:0%
service lookup which means more than one
 

00:10:05.130 --> 00:10:07.910 align:start position:0%
service lookup which means more than one
provide<00:10:05.640><c> a</c><00:10:05.670><c> class</c><00:10:05.910><c> that</c><00:10:06.839><c> implements</c><00:10:07.380><c> the</c>

00:10:07.910 --> 00:10:07.920 align:start position:0%
provide a class that implements the
 

00:10:07.920 --> 00:10:11.660 align:start position:0%
provide a class that implements the
interface<00:10:09.170><c> each</c><00:10:10.170><c> instance</c><00:10:10.890><c> that</c><00:10:11.220><c> service</c>

00:10:11.660 --> 00:10:11.670 align:start position:0%
interface each instance that service
 

00:10:11.670 --> 00:10:14.600 align:start position:0%
interface each instance that service
loader<00:10:11.970><c> yields</c><00:10:12.959><c> of</c><00:10:13.230><c> the</c><00:10:13.500><c> service</c><00:10:13.860><c> type</c><00:10:14.100><c> is</c><00:10:14.370><c> of</c>

00:10:14.600 --> 00:10:14.610 align:start position:0%
loader yields of the service type is of
 

00:10:14.610 --> 00:10:17.240 align:start position:0%
loader yields of the service type is of
a<00:10:14.670><c> different</c><00:10:15.000><c> provider</c><00:10:15.209><c> class</c><00:10:16.250><c> helpfully</c>

00:10:17.240 --> 00:10:17.250 align:start position:0%
a different provider class helpfully
 

00:10:17.250 --> 00:10:19.550 align:start position:0%
a different provider class helpfully
service<00:10:17.670><c> load</c><00:10:17.850><c> at</c><00:10:18.029><c> implements</c><00:10:18.720><c> iterables</c><00:10:19.290><c> so</c>

00:10:19.550 --> 00:10:19.560 align:start position:0%
service load at implements iterables so
 

00:10:19.560 --> 00:10:23.090 align:start position:0%
service load at implements iterables so
the<00:10:19.680><c> P</c><00:10:19.980><c> the</c><00:10:20.760><c> PS</c><00:10:21.450><c> L's</c><00:10:21.690><c> which</c><00:10:22.529><c> is</c><00:10:22.680><c> the</c><00:10:22.830><c> service</c>

00:10:23.090 --> 00:10:23.100 align:start position:0%
the P the PS L's which is the service
 

00:10:23.100 --> 00:10:27.260 align:start position:0%
the P the PS L's which is the service
loader<00:10:23.279><c> object</c><00:10:23.730><c> implement</c><00:10:24.209><c> iterable</c><00:10:26.209><c> so</c><00:10:27.209><c> you</c>

00:10:27.260 --> 00:10:27.270 align:start position:0%
loader object implement iterable so you
 

00:10:27.270 --> 00:10:29.870 align:start position:0%
loader object implement iterable so you
can<00:10:27.660><c> for</c><00:10:28.020><c> each</c><00:10:28.050><c> your</c><00:10:28.500><c> way</c><00:10:28.700><c> through</c><00:10:29.700><c> the</c>

00:10:29.870 --> 00:10:29.880 align:start position:0%
can for each your way through the
 

00:10:29.880 --> 00:10:31.970 align:start position:0%
can for each your way through the
available<00:10:30.089><c> instances</c><00:10:30.959><c> known</c><00:10:31.440><c> to</c><00:10:31.650><c> service</c>

00:10:31.970 --> 00:10:31.980 align:start position:0%
available instances known to service
 

00:10:31.980 --> 00:10:35.079 align:start position:0%
available instances known to service
loader<00:10:32.220><c> looking</c><00:10:33.150><c> for</c><00:10:33.330><c> the</c><00:10:33.390><c> one</c><00:10:33.540><c> you</c><00:10:33.690><c> like</c>

00:10:35.079 --> 00:10:35.089 align:start position:0%
loader looking for the one you like
 

00:10:35.089 --> 00:10:39.530 align:start position:0%
loader looking for the one you like
in<00:10:36.089><c> this</c><00:10:36.270><c> case</c><00:10:36.950><c> Java</c><00:10:37.950><c> desktop</c><00:10:38.160><c> hopes</c><00:10:39.060><c> to</c><00:10:39.270><c> find</c>

00:10:39.530 --> 00:10:39.540 align:start position:0%
in this case Java desktop hopes to find
 

00:10:39.540 --> 00:10:41.570 align:start position:0%
in this case Java desktop hopes to find
a<00:10:39.690><c> print</c><00:10:39.959><c> service</c><00:10:40.230><c> lookup</c><00:10:40.709><c> implementation</c>

00:10:41.570 --> 00:10:41.580 align:start position:0%
a print service lookup implementation
 

00:10:41.580 --> 00:10:44.329 align:start position:0%
a print service lookup implementation
that<00:10:42.450><c> offers</c><00:10:42.870><c> a</c><00:10:42.900><c> specialist</c><00:10:43.680><c> print</c><00:10:43.890><c> service</c>

00:10:44.329 --> 00:10:44.339 align:start position:0%
that offers a specialist print service
 

00:10:44.339 --> 00:10:47.230 align:start position:0%
that offers a specialist print service
involving<00:10:44.850><c> a</c><00:10:44.970><c> particular</c><00:10:45.270><c> dot</c><00:10:45.900><c> flavor</c><00:10:46.200><c> I</c>

00:10:47.230 --> 00:10:47.240 align:start position:0%
involving a particular dot flavor I
 

00:10:47.240 --> 00:10:49.310 align:start position:0%
involving a particular dot flavor I
don't<00:10:48.240><c> know</c><00:10:48.300><c> what</c><00:10:48.450><c> doc</c><00:10:48.570><c> flavors</c><00:10:48.900><c> are</c><00:10:49.050><c> but</c><00:10:49.290><c> I</c>

00:10:49.310 --> 00:10:49.320 align:start position:0%
don't know what doc flavors are but I
 

00:10:49.320 --> 00:10:50.390 align:start position:0%
don't know what doc flavors are but I
know<00:10:49.440><c> they're</c><00:10:49.650><c> to</c><00:10:49.770><c> do</c><00:10:49.860><c> with</c><00:10:49.950><c> print</c><00:10:50.160><c> service</c>

00:10:50.390 --> 00:10:50.400 align:start position:0%
know they're to do with print service
 

00:10:50.400 --> 00:10:55.370 align:start position:0%
know they're to do with print service
lookups<00:10:51.860><c> if</c><00:10:52.860><c> service</c><00:10:53.459><c> loader</c><00:10:53.870><c> yields</c><00:10:54.870><c> no</c>

00:10:55.370 --> 00:10:55.380 align:start position:0%
lookups if service loader yields no
 

00:10:55.380 --> 00:10:58.370 align:start position:0%
lookups if service loader yields no
instances<00:10:56.310><c> of</c><00:10:56.640><c> print</c><00:10:57.390><c> service</c><00:10:57.720><c> lookup</c>

00:10:58.370 --> 00:10:58.380 align:start position:0%
instances of print service lookup
 

00:10:58.380 --> 00:11:01.100 align:start position:0%
instances of print service lookup
or<00:10:58.920><c> if</c><00:10:59.220><c> it</c><00:10:59.370><c> did</c><00:10:59.580><c> but</c><00:11:00.030><c> for</c><00:11:00.240><c> some</c><00:11:00.390><c> reason</c><00:11:00.690><c> none</c><00:11:00.960><c> of</c>

00:11:01.100 --> 00:11:01.110 align:start position:0%
or if it did but for some reason none of
 

00:11:01.110 --> 00:11:03.500 align:start position:0%
or if it did but for some reason none of
them<00:11:01.320><c> in</c><00:11:02.160><c> the</c><00:11:02.670><c> for-loop</c><00:11:02.940><c> body</c><00:11:03.150><c> there</c><00:11:03.330><c> could</c>

00:11:03.500 --> 00:11:03.510 align:start position:0%
them in the for-loop body there could
 

00:11:03.510 --> 00:11:05.660 align:start position:0%
them in the for-loop body there could
offer<00:11:03.720><c> the</c><00:11:04.020><c> specialist</c><00:11:04.590><c> service</c><00:11:04.950><c> desired</c><00:11:05.400><c> in</c>

00:11:05.660 --> 00:11:05.670 align:start position:0%
offer the specialist service desired in
 

00:11:05.670 --> 00:11:08.300 align:start position:0%
offer the specialist service desired in
this<00:11:05.790><c> case</c><00:11:06.000><c> by</c><00:11:06.240><c> the</c><00:11:06.300><c> code</c><00:11:06.600><c> then</c><00:11:07.470><c> the</c><00:11:07.890><c> code</c><00:11:08.100><c> has</c>

00:11:08.300 --> 00:11:08.310 align:start position:0%
this case by the code then the code has
 

00:11:08.310 --> 00:11:09.710 align:start position:0%
this case by the code then the code has
to<00:11:08.430><c> decide</c><00:11:08.700><c> what</c><00:11:08.910><c> to</c><00:11:09.000><c> do</c><00:11:09.090><c> in</c><00:11:09.210><c> this</c><00:11:09.330><c> case</c><00:11:09.540><c> it</c>

00:11:09.710 --> 00:11:09.720 align:start position:0%
to decide what to do in this case it
 

00:11:09.720 --> 00:11:11.810 align:start position:0%
to decide what to do in this case it
decides<00:11:10.020><c> to</c><00:11:10.170><c> return</c><00:11:10.470><c> a</c><00:11:10.530><c> default</c><00:11:11.040><c> in</c><00:11:11.490><c> service</c>

00:11:11.810 --> 00:11:11.820 align:start position:0%
decides to return a default in service
 

00:11:11.820 --> 00:11:15.350 align:start position:0%
decides to return a default in service
objects<00:11:12.890><c> now</c><00:11:13.890><c> all</c><00:11:14.220><c> of</c><00:11:14.610><c> this</c><00:11:14.760><c> code</c><00:11:15.060><c> would</c>

00:11:15.350 --> 00:11:15.360 align:start position:0%
objects now all of this code would
 

00:11:15.360 --> 00:11:18.800 align:start position:0%
objects now all of this code would
typically<00:11:15.690><c> live</c><00:11:15.930><c> in</c><00:11:16.500><c> a</c><00:11:16.680><c> static</c><00:11:17.280><c> method</c><00:11:17.580><c> of</c><00:11:17.970><c> the</c>

00:11:18.800 --> 00:11:18.810 align:start position:0%
typically live in a static method of the
 

00:11:18.810 --> 00:11:21.110 align:start position:0%
typically live in a static method of the
service<00:11:19.170><c> type</c><00:11:19.410><c> so</c><00:11:20.340><c> that</c><00:11:20.370><c> print</c><00:11:20.760><c> service</c>

00:11:21.110 --> 00:11:21.120 align:start position:0%
service type so that print service
 

00:11:21.120 --> 00:11:25.040 align:start position:0%
service type so that print service
lookup<00:11:21.480><c> is</c><00:11:21.780><c> its</c><00:11:22.500><c> own</c><00:11:22.680><c> factory</c><00:11:23.510><c> for</c><00:11:24.510><c> obtaining</c>

00:11:25.040 --> 00:11:25.050 align:start position:0%
lookup is its own factory for obtaining
 

00:11:25.050 --> 00:11:26.150 align:start position:0%
lookup is its own factory for obtaining
implementations

00:11:26.150 --> 00:11:26.160 align:start position:0%
implementations
 

00:11:26.160 --> 00:11:30.800 align:start position:0%
implementations
now<00:11:26.850><c> before</c><00:11:27.240><c> JDK</c><00:11:27.870><c> 8</c><00:11:29.300><c> interfaces</c><00:11:30.300><c> couldn't</c>

00:11:30.800 --> 00:11:30.810 align:start position:0%
now before JDK 8 interfaces couldn't
 

00:11:30.810 --> 00:11:33.680 align:start position:0%
now before JDK 8 interfaces couldn't
have<00:11:31.170><c> static</c><00:11:31.920><c> methods</c><00:11:32.280><c> so</c><00:11:33.060><c> most</c><00:11:33.300><c> service</c>

00:11:33.680 --> 00:11:33.690 align:start position:0%
have static methods so most service
 

00:11:33.690 --> 00:11:35.960 align:start position:0%
have static methods so most service
types<00:11:33.960><c> print</c><00:11:34.440><c> servers</c><00:11:34.710><c> lookup</c><00:11:35.010><c> were</c><00:11:35.490><c> abstract</c>

00:11:35.960 --> 00:11:35.970 align:start position:0%
types print servers lookup were abstract
 

00:11:35.970 --> 00:11:39.170 align:start position:0%
types print servers lookup were abstract
classes<00:11:36.210><c> rather</c><00:11:36.930><c> than</c><00:11:37.200><c> interfaces</c><00:11:38.000><c> but</c><00:11:39.000><c> now</c>

00:11:39.170 --> 00:11:39.180 align:start position:0%
classes rather than interfaces but now
 

00:11:39.180 --> 00:11:42.040 align:start position:0%
classes rather than interfaces but now
that<00:11:39.450><c> interfaces</c><00:11:39.960><c> can</c><00:11:40.680><c> have</c><00:11:40.980><c> static</c><00:11:41.310><c> methods</c>

00:11:42.040 --> 00:11:42.050 align:start position:0%
that interfaces can have static methods
 

00:11:42.050 --> 00:11:44.780 align:start position:0%
that interfaces can have static methods
its<00:11:43.050><c> more</c><00:11:43.290><c> common</c><00:11:43.320><c> for</c><00:11:43.980><c> the</c><00:11:44.190><c> service</c><00:11:44.580><c> type</c>

00:11:44.780 --> 00:11:44.790 align:start position:0%
its more common for the service type
 

00:11:44.790 --> 00:11:49.450 align:start position:0%
its more common for the service type
print<00:11:45.270><c> service</c><00:11:45.540><c> lookup</c><00:11:45.870><c> to</c><00:11:46.080><c> be</c><00:11:46.170><c> an</c><00:11:46.230><c> interface</c>

00:11:49.450 --> 00:11:49.460 align:start position:0%
 
 

00:11:49.460 --> 00:11:54.470 align:start position:0%
 
at<00:11:50.460><c> this</c><00:11:50.730><c> point</c><00:11:51.620><c> everyone</c><00:11:52.620><c> asks</c><00:11:53.220><c> if</c><00:11:53.700><c> service</c>

00:11:54.470 --> 00:11:54.480 align:start position:0%
at this point everyone asks if service
 

00:11:54.480 --> 00:11:57.260 align:start position:0%
at this point everyone asks if service
loader<00:11:54.720><c> finds</c><00:11:55.320><c> all</c><00:11:55.470><c> provider</c><00:11:56.190><c> classes</c><00:11:56.850><c> that</c>

00:11:57.260 --> 00:11:57.270 align:start position:0%
loader finds all provider classes that
 

00:11:57.270 --> 00:11:59.030 align:start position:0%
loader finds all provider classes that
implements<00:11:57.900><c> that</c><00:11:57.990><c> print</c><00:11:58.410><c> service</c><00:11:58.740><c> lookup</c>

00:11:59.030 --> 00:11:59.040 align:start position:0%
implements that print service lookup
 

00:11:59.040 --> 00:12:01.310 align:start position:0%
implements that print service lookup
interface<00:11:59.430><c> and</c><00:11:59.760><c> yields</c><00:12:00.690><c> an</c><00:12:00.810><c> instance</c><00:12:01.110><c> of</c><00:12:01.230><c> each</c>

00:12:01.310 --> 00:12:01.320 align:start position:0%
interface and yields an instance of each
 

00:12:01.320 --> 00:12:01.790 align:start position:0%
interface and yields an instance of each
one

00:12:01.790 --> 00:12:01.800 align:start position:0%
one
 

00:12:01.800 --> 00:12:04.700 align:start position:0%
one
how<00:12:02.490><c> does</c><00:12:02.790><c> Java</c><00:12:03.090><c> desktop</c><00:12:03.690><c> that</c><00:12:04.170><c> contains</c><00:12:04.530><c> that</c>

00:12:04.700 --> 00:12:04.710 align:start position:0%
how does Java desktop that contains that
 

00:12:04.710 --> 00:12:07.970 align:start position:0%
how does Java desktop that contains that
code<00:12:05.000><c> specify</c><00:12:06.000><c> that</c><00:12:06.270><c> fast</c><00:12:07.170><c> print</c><00:12:07.560><c> is</c><00:12:07.710><c> my</c>

00:12:07.970 --> 00:12:07.980 align:start position:0%
code specify that fast print is my
 

00:12:07.980 --> 00:12:10.100 align:start position:0%
code specify that fast print is my
favorite<00:12:08.520><c> implementation</c><00:12:09.270><c> of</c><00:12:09.480><c> print</c><00:12:09.750><c> service</c>

00:12:10.100 --> 00:12:10.110 align:start position:0%
favorite implementation of print service
 

00:12:10.110 --> 00:12:14.600 align:start position:0%
favorite implementation of print service
lookup<00:12:12.020><c> alternatively</c><00:12:13.020><c> how</c><00:12:13.740><c> does</c><00:12:14.010><c> the</c><00:12:14.220><c> print</c>

00:12:14.600 --> 00:12:14.610 align:start position:0%
lookup alternatively how does the print
 

00:12:14.610 --> 00:12:17.630 align:start position:0%
lookup alternatively how does the print
Lib<00:12:14.790><c> module</c><00:12:15.590><c> specify</c><00:12:16.590><c> that</c><00:12:16.800><c> my</c><00:12:16.980><c> class</c><00:12:17.280><c> fast</c>

00:12:17.630 --> 00:12:17.640 align:start position:0%
Lib module specify that my class fast
 

00:12:17.640 --> 00:12:19.490 align:start position:0%
Lib module specify that my class fast
print<00:12:17.910><c> is</c><00:12:18.060><c> the</c><00:12:18.210><c> best</c><00:12:18.510><c> implementation</c><00:12:19.110><c> of</c>

00:12:19.490 --> 00:12:19.500 align:start position:0%
print is the best implementation of
 

00:12:19.500 --> 00:12:23.000 align:start position:0%
print is the best implementation of
print<00:12:19.740><c> service</c><00:12:20.010><c> la</c><00:12:20.130><c> carpa</c><00:12:20.310><c> trust</c><00:12:20.640><c> me</c><00:12:22.010><c> the</c>

00:12:23.000 --> 00:12:23.010 align:start position:0%
print service la carpa trust me the
 

00:12:23.010 --> 00:12:25.460 align:start position:0%
print service la carpa trust me the
other<00:12:23.220><c> question</c><00:12:23.700><c> everyone</c><00:12:24.480><c> asks</c><00:12:24.510><c> is</c><00:12:25.080><c> about</c>

00:12:25.460 --> 00:12:25.470 align:start position:0%
other question everyone asks is about
 

00:12:25.470 --> 00:12:28.340 align:start position:0%
other question everyone asks is about
ordering<00:12:25.890><c> how</c><00:12:26.880><c> does</c><00:12:27.090><c> Java</c><00:12:27.300><c> desktop</c><00:12:27.540><c> the</c>

00:12:28.340 --> 00:12:28.350 align:start position:0%
ordering how does Java desktop the
 

00:12:28.350 --> 00:12:31.340 align:start position:0%
ordering how does Java desktop the
consumer<00:12:28.830><c> module</c><00:12:29.510><c> specify</c><00:12:30.510><c> that</c><00:12:30.780><c> it</c><00:12:30.900><c> prefers</c>

00:12:31.340 --> 00:12:31.350 align:start position:0%
consumer module specify that it prefers
 

00:12:31.350 --> 00:12:35.090 align:start position:0%
consumer module specify that it prefers
the<00:12:31.770><c> fast</c><00:12:32.280><c> print</c><00:12:33.320><c> implementation</c><00:12:34.320><c> of</c><00:12:34.530><c> print</c>

00:12:35.090 --> 00:12:35.100 align:start position:0%
the fast print implementation of print
 

00:12:35.100 --> 00:12:37.570 align:start position:0%
the fast print implementation of print
surface<00:12:35.280><c> lookup</c><00:12:35.700><c> to</c><00:12:36.300><c> the</c><00:12:36.450><c> net</c><00:12:36.720><c> print</c>

00:12:37.570 --> 00:12:37.580 align:start position:0%
surface lookup to the net print
 

00:12:37.580 --> 00:12:39.920 align:start position:0%
surface lookup to the net print
implementation<00:12:38.580><c> but</c><00:12:39.210><c> that</c><00:12:39.420><c> it</c><00:12:39.510><c> will</c><00:12:39.600><c> be</c><00:12:39.690><c> happy</c>

00:12:39.920 --> 00:12:39.930 align:start position:0%
implementation but that it will be happy
 

00:12:39.930 --> 00:12:42.230 align:start position:0%
implementation but that it will be happy
to<00:12:40.050><c> run</c><00:12:40.200><c> with</c><00:12:40.590><c> net</c><00:12:40.830><c> print</c><00:12:41.100><c> if</c><00:12:41.310><c> fast</c><00:12:41.700><c> print</c><00:12:42.000><c> is</c>

00:12:42.230 --> 00:12:42.240 align:start position:0%
to run with net print if fast print is
 

00:12:42.240 --> 00:12:45.200 align:start position:0%
to run with net print if fast print is
not<00:12:42.450><c> present</c><00:12:43.340><c> now</c><00:12:44.340><c> bear</c><00:12:44.580><c> in</c><00:12:44.610><c> mind</c><00:12:44.760><c> that</c>

00:12:45.200 --> 00:12:45.210 align:start position:0%
not present now bear in mind that
 

00:12:45.210 --> 00:12:48.620 align:start position:0%
not present now bear in mind that
provider<00:12:45.660><c> modules</c><00:12:46.170><c> on</c><00:12:46.560><c> the</c><00:12:47.040><c> right</c><00:12:47.630><c> usually</c>

00:12:48.620 --> 00:12:48.630 align:start position:0%
provider modules on the right usually
 

00:12:48.630 --> 00:12:51.290 align:start position:0%
provider modules on the right usually
don't<00:12:49.110><c> know</c><00:12:49.260><c> about</c><00:12:49.380><c> each</c><00:12:49.710><c> other</c><00:12:49.950><c> so</c><00:12:50.300><c> they</c>

00:12:51.290 --> 00:12:51.300 align:start position:0%
don't know about each other so they
 

00:12:51.300 --> 00:12:53.630 align:start position:0%
don't know about each other so they
cannot<00:12:51.630><c> reasonably</c><00:12:52.410><c> be</c><00:12:52.710><c> involved</c><00:12:53.400><c> in</c>

00:12:53.630 --> 00:12:53.640 align:start position:0%
cannot reasonably be involved in
 

00:12:53.640 --> 00:12:57.530 align:start position:0%
cannot reasonably be involved in
selecting<00:12:54.600><c> or</c><00:12:54.810><c> sorting</c><00:12:55.370><c> implementations</c><00:12:56.540><c> the</c>

00:12:57.530 --> 00:12:57.540 align:start position:0%
selecting or sorting implementations the
 

00:12:57.540 --> 00:13:00.080 align:start position:0%
selecting or sorting implementations the
consumer<00:12:58.260><c> module</c><00:12:58.650><c> Java</c><00:12:59.220><c> desktop</c><00:12:59.670><c> is</c>

00:13:00.080 --> 00:13:00.090 align:start position:0%
consumer module Java desktop is
 

00:13:00.090 --> 00:13:02.150 align:start position:0%
consumer module Java desktop is
obviously<00:13:00.900><c> the</c><00:13:01.140><c> right</c><00:13:01.350><c> place</c><00:13:01.620><c> to</c><00:13:01.830><c> do</c><00:13:01.980><c> it</c>

00:13:02.150 --> 00:13:02.160 align:start position:0%
obviously the right place to do it
 

00:13:02.160 --> 00:13:04.730 align:start position:0%
obviously the right place to do it
but<00:13:03.120><c> this</c><00:13:03.390><c> quickly</c><00:13:03.720><c> leads</c><00:13:04.050><c> to</c><00:13:04.260><c> complicated</c>

00:13:04.730 --> 00:13:04.740 align:start position:0%
but this quickly leads to complicated
 

00:13:04.740 --> 00:13:07.460 align:start position:0%
but this quickly leads to complicated
schemes<00:13:05.160><c> that</c><00:13:05.580><c> encode</c><00:13:05.940><c> provider</c><00:13:06.660><c> preferences</c>

00:13:07.460 --> 00:13:07.470 align:start position:0%
schemes that encode provider preferences
 

00:13:07.470 --> 00:13:09.360 align:start position:0%
schemes that encode provider preferences
in<00:13:07.950><c> a</c><00:13:08.130><c> module</c><00:13:08.310><c> declaration</c>

00:13:09.360 --> 00:13:09.370 align:start position:0%
in a module declaration
 

00:13:09.370 --> 00:13:11.310 align:start position:0%
in a module declaration
now<00:13:10.240><c> we're</c><00:13:10.390><c> trying</c><00:13:10.600><c> to</c><00:13:10.660><c> keep</c><00:13:10.840><c> the</c><00:13:10.960><c> module</c>

00:13:11.310 --> 00:13:11.320 align:start position:0%
now we're trying to keep the module
 

00:13:11.320 --> 00:13:15.360 align:start position:0%
now we're trying to keep the module
system<00:13:11.800><c> simple</c><00:13:12.460><c> so</c><00:13:13.330><c> the</c><00:13:13.450><c> answer</c><00:13:13.750><c> is</c><00:13:14.130><c> no</c><00:13:15.130><c> one</c>

00:13:15.360 --> 00:13:15.370 align:start position:0%
system simple so the answer is no one
 

00:13:15.370 --> 00:13:18.570 align:start position:0%
system simple so the answer is no one
specifies<00:13:16.210><c> a</c><00:13:16.600><c> global</c><00:13:17.200><c> sort</c><00:13:18.040><c> of</c><00:13:18.100><c> static</c>

00:13:18.570 --> 00:13:18.580 align:start position:0%
specifies a global sort of static
 

00:13:18.580 --> 00:13:21.060 align:start position:0%
specifies a global sort of static
preference<00:13:19.210><c> for</c><00:13:19.600><c> provider</c><00:13:19.990><c> classes</c><00:13:20.590><c> at</c><00:13:20.830><c> least</c>

00:13:21.060 --> 00:13:21.070 align:start position:0%
preference for provider classes at least
 

00:13:21.070 --> 00:13:25.170 align:start position:0%
preference for provider classes at least
not<00:13:21.310><c> in</c><00:13:21.550><c> a</c><00:13:21.730><c> module</c><00:13:22.000><c> declaration</c><00:13:24.150><c> for</c><00:13:25.150><c> the</c>

00:13:25.170 --> 00:13:25.180 align:start position:0%
not in a module declaration for the
 

00:13:25.180 --> 00:13:30.120 align:start position:0%
not in a module declaration for the
consumer<00:13:26.670><c> instead</c><00:13:27.720><c> the</c><00:13:28.720><c> basis</c><00:13:29.200><c> for</c><00:13:29.800><c> choosing</c>

00:13:30.120 --> 00:13:30.130 align:start position:0%
consumer instead the basis for choosing
 

00:13:30.130 --> 00:13:32.820 align:start position:0%
consumer instead the basis for choosing
one<00:13:30.580><c> provider</c><00:13:31.060><c> class</c><00:13:31.450><c> over</c><00:13:32.290><c> another</c><00:13:32.320><c> is</c>

00:13:32.820 --> 00:13:32.830 align:start position:0%
one provider class over another is
 

00:13:32.830 --> 00:13:36.720 align:start position:0%
one provider class over another is
application<00:13:33.900><c> dependence</c><00:13:35.130><c> it's</c><00:13:36.130><c> a</c><00:13:36.280><c> choice</c><00:13:36.460><c> the</c>

00:13:36.720 --> 00:13:36.730 align:start position:0%
application dependence it's a choice the
 

00:13:36.730 --> 00:13:38.880 align:start position:0%
application dependence it's a choice the
consumer<00:13:37.270><c> module</c><00:13:37.600><c> has</c><00:13:37.900><c> to</c><00:13:38.080><c> make</c><00:13:38.230><c> by</c>

00:13:38.880 --> 00:13:38.890 align:start position:0%
consumer module has to make by
 

00:13:38.890 --> 00:13:42.060 align:start position:0%
consumer module has to make by
inspecting<00:13:39.490><c> the</c><00:13:39.610><c> properties</c><00:13:40.090><c> of</c><00:13:41.070><c> available</c>

00:13:42.060 --> 00:13:42.070 align:start position:0%
inspecting the properties of available
 

00:13:42.070 --> 00:13:44.190 align:start position:0%
inspecting the properties of available
provider<00:13:42.610><c> classes</c><00:13:43.180><c> when</c><00:13:43.780><c> they</c><00:13:43.900><c> come</c><00:13:44.080><c> back</c>

00:13:44.190 --> 00:13:44.200 align:start position:0%
provider classes when they come back
 

00:13:44.200 --> 00:13:46.830 align:start position:0%
provider classes when they come back
from<00:13:44.470><c> service</c><00:13:44.770><c> loader</c><00:13:44.980><c> and</c><00:13:45.280><c> by</c><00:13:46.120><c> properties</c><00:13:46.600><c> I</c>

00:13:46.830 --> 00:13:46.840 align:start position:0%
from service loader and by properties I
 

00:13:46.840 --> 00:13:49.380 align:start position:0%
from service loader and by properties I
don't<00:13:47.380><c> mean</c><00:13:47.590><c> reflecting</c><00:13:48.310><c> over</c><00:13:48.550><c> their</c><00:13:48.700><c> fields</c>

00:13:49.380 --> 00:13:49.390 align:start position:0%
don't mean reflecting over their fields
 

00:13:49.390 --> 00:13:52.290 align:start position:0%
don't mean reflecting over their fields
I<00:13:49.420><c> mean</c><00:13:50.140><c> calling</c><00:13:50.860><c> methods</c><00:13:51.430><c> of</c><00:13:51.670><c> the</c><00:13:51.910><c> service</c>

00:13:52.290 --> 00:13:52.300 align:start position:0%
I mean calling methods of the service
 

00:13:52.300 --> 00:13:55.530 align:start position:0%
I mean calling methods of the service
type<00:13:52.540><c> on</c><00:13:52.780><c> every</c><00:13:53.650><c> instance</c><00:13:54.100><c> of</c><00:13:54.400><c> the</c><00:13:55.090><c> discovered</c>

00:13:55.530 --> 00:13:55.540 align:start position:0%
type on every instance of the discovered
 

00:13:55.540 --> 00:13:59.880 align:start position:0%
type on every instance of the discovered
provider<00:13:55.870><c> classes</c><00:13:56.610><c> so</c><00:13:58.260><c> recall</c><00:13:59.260><c> that</c><00:13:59.320><c> Java</c>

00:13:59.880 --> 00:13:59.890 align:start position:0%
provider classes so recall that Java
 

00:13:59.890 --> 00:14:02.240 align:start position:0%
provider classes so recall that Java
desktop<00:14:00.100><c> this</c><00:14:00.670><c> is</c><00:14:00.850><c> code</c><00:14:01.060><c> in</c><00:14:01.240><c> Java</c><00:14:01.660><c> desktop</c>

00:14:02.240 --> 00:14:02.250 align:start position:0%
desktop this is code in Java desktop
 

00:14:02.250 --> 00:14:05.220 align:start position:0%
desktop this is code in Java desktop
calls<00:14:03.250><c> after</c><00:14:03.880><c> it's</c><00:14:04.390><c> got</c><00:14:04.570><c> the</c><00:14:04.720><c> service</c><00:14:05.020><c> loader</c>

00:14:05.220 --> 00:14:05.230 align:start position:0%
calls after it's got the service loader
 

00:14:05.230 --> 00:14:06.630 align:start position:0%
calls after it's got the service loader
and<00:14:05.470><c> it's</c><00:14:05.560><c> iterating</c><00:14:06.100><c> through</c><00:14:06.130><c> the</c><00:14:06.430><c> print</c>

00:14:06.630 --> 00:14:06.640 align:start position:0%
and it's iterating through the print
 

00:14:06.640 --> 00:14:08.880 align:start position:0%
and it's iterating through the print
surface<00:14:06.820><c> lookup</c><00:14:07.240><c> implementations</c><00:14:07.930><c> it</c><00:14:08.590><c> calls</c>

00:14:08.880 --> 00:14:08.890 align:start position:0%
surface lookup implementations it calls
 

00:14:08.890 --> 00:14:11.640 align:start position:0%
surface lookup implementations it calls
the<00:14:09.190><c> get</c><00:14:09.460><c> default</c><00:14:09.970><c> print</c><00:14:10.240><c> service</c><00:14:10.630><c> method</c><00:14:11.440><c> on</c>

00:14:11.640 --> 00:14:11.650 align:start position:0%
the get default print service method on
 

00:14:11.650 --> 00:14:14.100 align:start position:0%
the get default print service method on
each<00:14:11.800><c> instance</c><00:14:12.250><c> of</c><00:14:13.150><c> print</c><00:14:13.510><c> service</c><00:14:13.810><c> look</c><00:14:13.960><c> up</c>

00:14:14.100 --> 00:14:14.110 align:start position:0%
each instance of print service look up
 

00:14:14.110 --> 00:14:16.470 align:start position:0%
each instance of print service look up
and<00:14:14.350><c> then</c><00:14:15.010><c> makes</c><00:14:15.220><c> further</c><00:14:15.550><c> calls</c><00:14:16.000><c> on</c><00:14:16.360><c> the</c>

00:14:16.470 --> 00:14:16.480 align:start position:0%
and then makes further calls on the
 

00:14:16.480 --> 00:14:19.110 align:start position:0%
and then makes further calls on the
result<00:14:16.810><c> is</c><00:14:17.080><c> dot</c><00:14:17.320><c> flavor</c><00:14:17.620><c> supported</c><00:14:18.160><c> to</c><00:14:18.790><c> decide</c>

00:14:19.110 --> 00:14:19.120 align:start position:0%
result is dot flavor supported to decide
 

00:14:19.120 --> 00:14:21.210 align:start position:0%
result is dot flavor supported to decide
if<00:14:19.300><c> that</c><00:14:19.450><c> instance</c><00:14:19.870><c> is</c><00:14:20.050><c> acceptable</c><00:14:20.860><c> for</c>

00:14:21.210 --> 00:14:21.220 align:start position:0%
if that instance is acceptable for
 

00:14:21.220 --> 00:14:24.080 align:start position:0%
if that instance is acceptable for
whatever<00:14:21.430><c> java</c><00:14:21.940><c> desktop</c><00:14:22.390><c> is</c><00:14:22.540><c> trying</c><00:14:22.810><c> to</c><00:14:22.960><c> do</c>

00:14:24.080 --> 00:14:24.090 align:start position:0%
whatever java desktop is trying to do
 

00:14:24.090 --> 00:14:27.270 align:start position:0%
whatever java desktop is trying to do
the<00:14:25.090><c> consumer</c><00:14:25.660><c> module</c><00:14:25.990><c> should</c><00:14:26.860><c> not</c><00:14:27.100><c> be</c>

00:14:27.270 --> 00:14:27.280 align:start position:0%
the consumer module should not be
 

00:14:27.280 --> 00:14:29.790 align:start position:0%
the consumer module should not be
concerned<00:14:27.820><c> with</c><00:14:28.300><c> the</c><00:14:28.480><c> identity</c><00:14:29.230><c> of</c><00:14:29.530><c> the</c>

00:14:29.790 --> 00:14:29.800 align:start position:0%
concerned with the identity of the
 

00:14:29.800 --> 00:14:32.910 align:start position:0%
concerned with the identity of the
provider<00:14:30.130><c> classes</c><00:14:30.990><c> the</c><00:14:31.990><c> provider</c><00:14:32.350><c> classes</c>

00:14:32.910 --> 00:14:32.920 align:start position:0%
provider classes the provider classes
 

00:14:32.920 --> 00:14:35.550 align:start position:0%
provider classes the provider classes
are<00:14:33.070><c> private</c><00:14:33.670><c> details</c><00:14:34.180><c> of</c><00:14:34.630><c> the</c><00:14:35.200><c> provider</c>

00:14:35.550 --> 00:14:35.560 align:start position:0%
are private details of the provider
 

00:14:35.560 --> 00:14:38.610 align:start position:0%
are private details of the provider
modules<00:14:35.980><c> in</c><00:14:36.370><c> fact</c><00:14:37.360><c> we</c><00:14:37.780><c> strongly</c><00:14:38.230><c> discourage</c>

00:14:38.610 --> 00:14:38.620 align:start position:0%
modules in fact we strongly discourage
 

00:14:38.620 --> 00:14:41.820 align:start position:0%
modules in fact we strongly discourage
provider<00:14:39.400><c> modules</c><00:14:39.910><c> from</c><00:14:40.540><c> exporting</c><00:14:41.500><c> its</c>

00:14:41.820 --> 00:14:41.830 align:start position:0%
provider modules from exporting its
 

00:14:41.830 --> 00:14:43.590 align:start position:0%
provider modules from exporting its
provider<00:14:42.280><c> classes</c><00:14:42.850><c> because</c><00:14:43.210><c> if</c><00:14:43.360><c> they're</c>

00:14:43.590 --> 00:14:43.600 align:start position:0%
provider classes because if they're
 

00:14:43.600 --> 00:14:46.260 align:start position:0%
provider classes because if they're
exported<00:14:44.320><c> it</c><00:14:44.740><c> encourages</c><00:14:45.370><c> people</c><00:14:45.550><c> like</c><00:14:46.000><c> this</c>

00:14:46.260 --> 00:14:46.270 align:start position:0%
exported it encourages people like this
 

00:14:46.270 --> 00:14:49.790 align:start position:0%
exported it encourages people like this
guy<00:14:46.680><c> to</c><00:14:47.680><c> code</c><00:14:48.220><c> around</c><00:14:48.730><c> the</c><00:14:48.970><c> interface</c><00:14:49.420><c> and</c>

00:14:49.790 --> 00:14:49.800 align:start position:0%
guy to code around the interface and
 

00:14:49.800 --> 00:14:52.590 align:start position:0%
guy to code around the interface and
directly<00:14:50.800><c> against</c><00:14:51.250><c> the</c><00:14:51.340><c> class</c><00:14:51.610><c> at</c><00:14:52.360><c> which</c>

00:14:52.590 --> 00:14:52.600 align:start position:0%
directly against the class at which
 

00:14:52.600 --> 00:14:54.180 align:start position:0%
directly against the class at which
point<00:14:52.900><c> you've</c><00:14:53.080><c> been</c><00:14:53.350><c> you've</c><00:14:53.740><c> lost</c><00:14:53.980><c> the</c>

00:14:54.180 --> 00:14:54.190 align:start position:0%
point you've been you've lost the
 

00:14:54.190 --> 00:14:59.910 align:start position:0%
point you've been you've lost the
benefit<00:14:54.610><c> of</c><00:14:54.820><c> loose</c><00:14:55.060><c> coupling</c>

00:14:59.910 --> 00:14:59.920 align:start position:0%
 
 

00:14:59.920 --> 00:15:02.460 align:start position:0%
 
so<00:15:00.609><c> my</c><00:15:00.790><c> advice</c><00:15:01.089><c> is</c><00:15:01.359><c> to</c><00:15:01.449><c> think</c><00:15:01.839><c> of</c><00:15:01.929><c> a</c><00:15:02.049><c> service</c>

00:15:02.460 --> 00:15:02.470 align:start position:0%
so my advice is to think of a service
 

00:15:02.470 --> 00:15:04.079 align:start position:0%
so my advice is to think of a service
type<00:15:02.709><c> the</c><00:15:03.220><c> interface</c><00:15:03.699><c> for</c><00:15:03.970><c> which</c>

00:15:04.079 --> 00:15:04.089 align:start position:0%
type the interface for which
 

00:15:04.089 --> 00:15:06.289 align:start position:0%
type the interface for which
implementations<00:15:04.809><c> will</c><00:15:04.959><c> be</c><00:15:05.079><c> found</c><00:15:05.350><c> as</c><00:15:05.679><c> a</c>

00:15:06.289 --> 00:15:06.299 align:start position:0%
implementations will be found as a
 

00:15:06.299 --> 00:15:10.410 align:start position:0%
implementations will be found as a
coarse<00:15:07.299><c> grained</c><00:15:07.749><c> selector</c><00:15:08.649><c> a</c><00:15:09.239><c> service</c><00:15:10.239><c> type</c>

00:15:10.410 --> 00:15:10.420 align:start position:0%
coarse grained selector a service type
 

00:15:10.420 --> 00:15:12.299 align:start position:0%
coarse grained selector a service type
like<00:15:10.779><c> print</c><00:15:11.019><c> service</c><00:15:11.319><c> lookup</c><00:15:11.649><c> should</c><00:15:12.160><c> offer</c>

00:15:12.299 --> 00:15:12.309 align:start position:0%
like print service lookup should offer
 

00:15:12.309 --> 00:15:15.299 align:start position:0%
like print service lookup should offer
enough<00:15:12.779><c> descriptor</c><00:15:13.779><c> methods</c><00:15:14.619><c> about</c><00:15:15.129><c> the</c>

00:15:15.299 --> 00:15:15.309 align:start position:0%
enough descriptor methods about the
 

00:15:15.309 --> 00:15:18.030 align:start position:0%
enough descriptor methods about the
quality<00:15:15.970><c> of</c><00:15:16.119><c> implementation</c><00:15:16.619><c> for</c><00:15:17.619><c> a</c><00:15:17.679><c> consumer</c>

00:15:18.030 --> 00:15:18.040 align:start position:0%
quality of implementation for a consumer
 

00:15:18.040 --> 00:15:20.720 align:start position:0%
quality of implementation for a consumer
module<00:15:18.519><c> to</c><00:15:18.819><c> select</c><00:15:19.269><c> the</c><00:15:19.540><c> best</c><00:15:19.749><c> provider</c><00:15:20.169><c> class</c>

00:15:20.720 --> 00:15:20.730 align:start position:0%
module to select the best provider class
 

00:15:20.730 --> 00:15:23.249 align:start position:0%
module to select the best provider class
in<00:15:21.730><c> our</c><00:15:21.879><c> example</c><00:15:22.269><c> so</c><00:15:22.389><c> far</c><00:15:22.569><c> print</c><00:15:22.899><c> service</c>

00:15:23.249 --> 00:15:23.259 align:start position:0%
in our example so far print service
 

00:15:23.259 --> 00:15:25.619 align:start position:0%
in our example so far print service
lookup<00:15:23.639><c> the</c><00:15:24.639><c> service</c><00:15:24.970><c> type</c><00:15:25.149><c> print</c><00:15:25.359><c> service</c>

00:15:25.619 --> 00:15:25.629 align:start position:0%
lookup the service type print service
 

00:15:25.629 --> 00:15:29.509 align:start position:0%
lookup the service type print service
lookup<00:15:25.959><c> is</c><00:15:26.470><c> actually</c><00:15:27.100><c> a</c><00:15:27.239><c> proxy</c><00:15:28.239><c> for</c><00:15:28.929><c> the</c><00:15:28.959><c> real</c>

00:15:29.509 --> 00:15:29.519 align:start position:0%
lookup is actually a proxy for the real
 

00:15:29.519 --> 00:15:33.599 align:start position:0%
lookup is actually a proxy for the real
print<00:15:30.519><c> service</c><00:15:30.910><c> objects</c><00:15:31.449><c> of</c><00:15:31.540><c> interest</c><00:15:32.609><c> there</c>

00:15:33.599 --> 00:15:33.609 align:start position:0%
print service objects of interest there
 

00:15:33.609 --> 00:15:36.720 align:start position:0%
print service objects of interest there
may<00:15:33.819><c> be</c><00:15:33.850><c> many</c><00:15:34.389><c> instances</c><00:15:35.169><c> of</c><00:15:35.499><c> print</c><00:15:36.369><c> service</c>

00:15:36.720 --> 00:15:36.730 align:start position:0%
may be many instances of print service
 

00:15:36.730 --> 00:15:39.470 align:start position:0%
may be many instances of print service
lookup<00:15:37.089><c> on</c><00:15:37.269><c> a</c><00:15:37.329><c> system</c><00:15:37.929><c> in</c><00:15:38.139><c> different</c><00:15:38.619><c> modules</c>

00:15:39.470 --> 00:15:39.480 align:start position:0%
lookup on a system in different modules
 

00:15:39.480 --> 00:15:42.900 align:start position:0%
lookup on a system in different modules
each<00:15:40.480><c> one</c><00:15:40.809><c> representing</c><00:15:41.559><c> many</c><00:15:41.889><c> instances</c><00:15:42.639><c> of</c>

00:15:42.900 --> 00:15:42.910 align:start position:0%
each one representing many instances of
 

00:15:42.910 --> 00:15:45.210 align:start position:0%
each one representing many instances of
print<00:15:43.299><c> service</c><00:15:43.749><c> but</c><00:15:44.290><c> able</c><00:15:44.559><c> to</c><00:15:44.679><c> offer</c><00:15:44.859><c> a</c>

00:15:45.210 --> 00:15:45.220 align:start position:0%
print service but able to offer a
 

00:15:45.220 --> 00:15:49.079 align:start position:0%
print service but able to offer a
default<00:15:46.029><c> print</c><00:15:46.299><c> service</c><00:15:46.720><c> to</c><00:15:47.169><c> consumers</c><00:15:48.089><c> in</c>

00:15:49.079 --> 00:15:49.089 align:start position:0%
default print service to consumers in
 

00:15:49.089 --> 00:15:52.379 align:start position:0%
default print service to consumers in
another<00:15:49.959><c> scenario</c><00:15:50.350><c> the</c><00:15:51.339><c> service</c><00:15:51.790><c> type</c><00:15:52.029><c> might</c>

00:15:52.379 --> 00:15:52.389 align:start position:0%
another scenario the service type might
 

00:15:52.389 --> 00:15:55.169 align:start position:0%
another scenario the service type might
directly<00:15:53.230><c> represent</c><00:15:53.949><c> an</c><00:15:54.279><c> object</c><00:15:54.519><c> of</c><00:15:54.910><c> interest</c>

00:15:55.169 --> 00:15:55.179 align:start position:0%
directly represent an object of interest
 

00:15:55.179 --> 00:15:57.900 align:start position:0%
directly represent an object of interest
in<00:15:56.139><c> this</c><00:15:56.319><c> example</c><00:15:56.649><c> the</c><00:15:57.160><c> print</c><00:15:57.429><c> service</c>

00:15:57.900 --> 00:15:57.910 align:start position:0%
in this example the print service
 

00:15:57.910 --> 00:16:00.179 align:start position:0%
in this example the print service
interface<00:15:58.389><c> itself</c><00:15:58.809><c> or</c><00:15:59.049><c> the</c><00:15:59.109><c> bottom</c><00:15:59.379><c> actually</c>

00:16:00.179 --> 00:16:00.189 align:start position:0%
interface itself or the bottom actually
 

00:16:00.189 --> 00:16:03.030 align:start position:0%
interface itself or the bottom actually
offers<00:16:01.029><c> a</c><00:16:01.059><c> rich</c><00:16:01.509><c> enough</c><00:16:01.899><c> set</c><00:16:02.199><c> of</c><00:16:02.350><c> descriptor</c>

00:16:03.030 --> 00:16:03.040 align:start position:0%
offers a rich enough set of descriptor
 

00:16:03.040 --> 00:16:06.030 align:start position:0%
offers a rich enough set of descriptor
methods<00:16:03.429><c> dot</c><00:16:03.970><c> flavor</c><00:16:04.299><c> related</c><00:16:04.929><c> that</c><00:16:05.709><c> it</c><00:16:05.829><c> could</c>

00:16:06.030 --> 00:16:06.040 align:start position:0%
methods dot flavor related that it could
 

00:16:06.040 --> 00:16:08.519 align:start position:0%
methods dot flavor related that it could
perhaps<00:16:06.249><c> be</c><00:16:06.730><c> a</c><00:16:06.759><c> legitimate</c><00:16:07.149><c> service</c><00:16:07.449><c> type</c><00:16:07.839><c> of</c>

00:16:08.519 --> 00:16:08.529 align:start position:0%
perhaps be a legitimate service type of
 

00:16:08.529 --> 00:16:13.799 align:start position:0%
perhaps be a legitimate service type of
its<00:16:09.189><c> own</c><00:16:10.169><c> how</c><00:16:11.169><c> much</c><00:16:11.459><c> abstraction</c><00:16:12.459><c> you</c><00:16:13.389><c> design</c>

00:16:13.799 --> 00:16:13.809 align:start position:0%
its own how much abstraction you design
 

00:16:13.809 --> 00:16:16.229 align:start position:0%
its own how much abstraction you design
into<00:16:14.199><c> your</c><00:16:14.230><c> service</c><00:16:14.739><c> type</c><00:16:14.999><c> depends</c><00:16:15.999><c> on</c><00:16:16.089><c> your</c>

00:16:16.229 --> 00:16:16.239 align:start position:0%
into your service type depends on your
 

00:16:16.239 --> 00:16:19.909 align:start position:0%
into your service type depends on your
application<00:16:17.129><c> the</c><00:16:18.129><c> main</c><00:16:18.309><c> factor</c><00:16:18.579><c> is</c><00:16:18.970><c> how</c><00:16:19.179><c> heavy</c>

00:16:19.909 --> 00:16:19.919 align:start position:0%
application the main factor is how heavy
 

00:16:19.919 --> 00:16:23.340 align:start position:0%
application the main factor is how heavy
the<00:16:20.919><c> ultimate</c><00:16:21.399><c> objects</c><00:16:21.819><c> of</c><00:16:21.939><c> interest</c><00:16:22.059><c> are</c><00:16:22.600><c> for</c>

00:16:23.340 --> 00:16:23.350 align:start position:0%
the ultimate objects of interest are for
 

00:16:23.350 --> 00:16:25.079 align:start position:0%
the ultimate objects of interest are for
example<00:16:23.410><c> if</c><00:16:23.829><c> the</c><00:16:24.220><c> nature</c><00:16:24.399><c> of</c><00:16:24.579><c> one</c><00:16:24.850><c> of</c><00:16:24.970><c> these</c>

00:16:25.079 --> 00:16:25.089 align:start position:0%
example if the nature of one of these
 

00:16:25.089 --> 00:16:28.289 align:start position:0%
example if the nature of one of these
print<00:16:25.449><c> service</c><00:16:25.929><c> things</c><00:16:26.410><c> is</c><00:16:26.829><c> that</c><00:16:27.610><c> instantiate</c>

00:16:28.289 --> 00:16:28.299 align:start position:0%
print service things is that instantiate
 

00:16:28.299 --> 00:16:29.699 align:start position:0%
print service things is that instantiate
in<00:16:28.480><c> one</c><00:16:28.689><c> might</c><00:16:28.929><c> be</c><00:16:28.959><c> slow</c>

00:16:29.699 --> 00:16:29.709 align:start position:0%
in one might be slow
 

00:16:29.709 --> 00:16:32.239 align:start position:0%
in one might be slow
perhaps<00:16:30.610><c> because</c><00:16:30.819><c> a</c><00:16:30.970><c> provider</c><00:16:31.329><c> class</c><00:16:31.629><c> might</c>

00:16:32.239 --> 00:16:32.249 align:start position:0%
perhaps because a provider class might
 

00:16:32.249 --> 00:16:35.359 align:start position:0%
perhaps because a provider class might
scan<00:16:33.249><c> the</c><00:16:33.429><c> network</c><00:16:33.549><c> looking</c><00:16:34.179><c> for</c><00:16:34.360><c> printers</c>

00:16:35.359 --> 00:16:35.369 align:start position:0%
scan the network looking for printers
 

00:16:35.369 --> 00:16:38.280 align:start position:0%
scan the network looking for printers
then<00:16:36.369><c> there</c><00:16:36.549><c> is</c><00:16:36.669><c> value</c><00:16:36.970><c> in</c><00:16:37.449><c> print</c><00:16:37.839><c> service</c>

00:16:38.280 --> 00:16:38.290 align:start position:0%
then there is value in print service
 

00:16:38.290 --> 00:16:42.779 align:start position:0%
then there is value in print service
lookup<00:16:39.299><c> instances</c><00:16:40.299><c> to</c><00:16:40.839><c> act</c><00:16:41.019><c> as</c><00:16:41.259><c> proxies</c><00:16:41.980><c> that</c>

00:16:42.779 --> 00:16:42.789 align:start position:0%
lookup instances to act as proxies that
 

00:16:42.789 --> 00:16:44.879 align:start position:0%
lookup instances to act as proxies that
decide<00:16:43.149><c> whether</c><00:16:43.539><c> a</c><00:16:43.629><c> print</c><00:16:44.049><c> service</c><00:16:44.289><c> instance</c>

00:16:44.879 --> 00:16:44.889 align:start position:0%
decide whether a print service instance
 

00:16:44.889 --> 00:16:47.729 align:start position:0%
decide whether a print service instance
is<00:16:45.100><c> actually</c><00:16:45.489><c> available</c><00:16:46.319><c> but</c><00:16:47.319><c> if</c><00:16:47.410><c> the</c><00:16:47.559><c> nature</c>

00:16:47.729 --> 00:16:47.739 align:start position:0%
is actually available but if the nature
 

00:16:47.739 --> 00:16:50.189 align:start position:0%
is actually available but if the nature
of<00:16:47.949><c> a</c><00:16:48.189><c> print</c><00:16:48.489><c> service</c><00:16:48.730><c> is</c><00:16:49.119><c> that</c><00:16:49.720><c> it's</c><00:16:49.839><c> cheap</c>

00:16:50.189 --> 00:16:50.199 align:start position:0%
of a print service is that it's cheap
 

00:16:50.199 --> 00:16:53.279 align:start position:0%
of a print service is that it's cheap
and<00:16:50.439><c> easy</c><00:16:51.009><c> to</c><00:16:51.309><c> instantiate</c><00:16:51.779><c> then</c><00:16:52.779><c> the</c><00:16:52.959><c> value</c>

00:16:53.279 --> 00:16:53.289 align:start position:0%
and easy to instantiate then the value
 

00:16:53.289 --> 00:16:56.210 align:start position:0%
and easy to instantiate then the value
of<00:16:53.319><c> print</c><00:16:53.829><c> service</c><00:16:54.160><c> lookup</c><00:16:54.610><c> as</c><00:16:54.819><c> the</c><00:16:55.059><c> the</c><00:16:55.389><c> proxy</c>

00:16:56.210 --> 00:16:56.220 align:start position:0%
of print service lookup as the the proxy
 

00:16:56.220 --> 00:17:00.029 align:start position:0%
of print service lookup as the the proxy
service<00:16:57.220><c> type</c><00:16:57.459><c> is</c><00:16:57.759><c> diminished</c><00:16:58.269><c> I</c><00:16:58.889><c> hope</c><00:16:59.889><c> it's</c>

00:17:00.029 --> 00:17:00.039 align:start position:0%
service type is diminished I hope it's
 

00:17:00.039 --> 00:17:01.499 align:start position:0%
service type is diminished I hope it's
clear<00:17:00.160><c> this</c><00:17:00.339><c> is</c><00:17:00.399><c> nothing</c><00:17:00.730><c> to</c><00:17:00.759><c> do</c><00:17:00.939><c> with</c><00:17:01.089><c> the</c>

00:17:01.499 --> 00:17:01.509 align:start position:0%
clear this is nothing to do with the
 

00:17:01.509 --> 00:17:03.629 align:start position:0%
clear this is nothing to do with the
services<00:17:01.989><c> are</c><00:17:02.169><c> nothing</c><00:17:03.039><c> to</c><00:17:03.069><c> do</c><00:17:03.279><c> with</c><00:17:03.399><c> print</c>

00:17:03.629 --> 00:17:03.639 align:start position:0%
services are nothing to do with print
 

00:17:03.639 --> 00:17:06.090 align:start position:0%
services are nothing to do with print
services<00:17:04.589><c> services</c><00:17:05.589><c> are</c><00:17:05.679><c> a</c><00:17:05.709><c> completely</c>

00:17:06.090 --> 00:17:06.100 align:start position:0%
services services are a completely
 

00:17:06.100 --> 00:17:08.850 align:start position:0%
services services are a completely
general<00:17:06.279><c> mechanism</c><00:17:07.000><c> but</c><00:17:07.179><c> to</c><00:17:07.990><c> exemplify</c><00:17:08.439><c> them</c>

00:17:08.850 --> 00:17:08.860 align:start position:0%
general mechanism but to exemplify them
 

00:17:08.860 --> 00:17:10.470 align:start position:0%
general mechanism but to exemplify them
I<00:17:08.949><c> have</c><00:17:09.159><c> to</c><00:17:09.279><c> get</c><00:17:09.429><c> a</c><00:17:09.459><c> concrete</c><00:17:09.819><c> service</c><00:17:10.269><c> to</c><00:17:10.389><c> a</c>

00:17:10.470 --> 00:17:10.480 align:start position:0%
I have to get a concrete service to a
 

00:17:10.480 --> 00:17:11.850 align:start position:0%
I have to get a concrete service to a
particular<00:17:10.929><c> service</c><00:17:11.439><c> type</c><00:17:11.620><c> and</c>

00:17:11.850 --> 00:17:11.860 align:start position:0%
particular service type and
 

00:17:11.860 --> 00:17:16.350 align:start position:0%
particular service type and
a<00:17:12.480><c> small</c><00:17:13.480><c> set</c><00:17:13.689><c> of</c><00:17:14.160><c> provider</c><00:17:15.160><c> classes</c><00:17:15.699><c> and</c><00:17:16.000><c> then</c>

00:17:16.350 --> 00:17:16.360 align:start position:0%
a small set of provider classes and then
 

00:17:16.360 --> 00:17:18.000 align:start position:0%
a small set of provider classes and then
the<00:17:16.449><c> question</c><00:17:16.750><c> is</c><00:17:16.839><c> is</c><00:17:17.020><c> great</c><00:17:17.319><c> I've</c><00:17:17.980><c> got</c>

00:17:18.000 --> 00:17:18.010 align:start position:0%
the question is is great I've got
 

00:17:18.010 --> 00:17:19.799 align:start position:0%
the question is is great I've got
multiple<00:17:18.459><c> provider</c><00:17:18.760><c> classes</c><00:17:19.209><c> what</c><00:17:19.420><c> do</c><00:17:19.510><c> I</c><00:17:19.540><c> do</c>

00:17:19.799 --> 00:17:19.809 align:start position:0%
multiple provider classes what do I do
 

00:17:19.809 --> 00:17:21.510 align:start position:0%
multiple provider classes what do I do
of<00:17:20.410><c> course</c><00:17:20.620><c> the</c><00:17:20.679><c> other</c><00:17:20.829><c> question</c><00:17:21.189><c> is</c><00:17:21.250><c> what</c><00:17:21.309><c> if</c>

00:17:21.510 --> 00:17:21.520 align:start position:0%
of course the other question is what if
 

00:17:21.520 --> 00:17:23.699 align:start position:0%
of course the other question is what if
I<00:17:21.610><c> have</c><00:17:21.760><c> no</c><00:17:21.910><c> provider</c><00:17:22.270><c> classes</c><00:17:22.750><c> what</c><00:17:23.380><c> do</c><00:17:23.470><c> I</c><00:17:23.530><c> do</c>

00:17:23.699 --> 00:17:23.709 align:start position:0%
I have no provider classes what do I do
 

00:17:23.709 --> 00:17:28.410 align:start position:0%
I have no provider classes what do I do
we'll<00:17:23.949><c> come</c><00:17:24.100><c> on</c><00:17:24.220><c> to</c><00:17:24.339><c> that</c><00:17:26.910><c> it's</c><00:17:27.910><c> interesting</c>

00:17:28.410 --> 00:17:28.420 align:start position:0%
we'll come on to that it's interesting
 

00:17:28.420 --> 00:17:30.930 align:start position:0%
we'll come on to that it's interesting
to<00:17:28.840><c> look</c><00:17:28.870><c> at</c><00:17:29.200><c> the</c><00:17:29.530><c> service</c><00:17:30.130><c> types</c><00:17:30.400><c> the</c>

00:17:30.930 --> 00:17:30.940 align:start position:0%
to look at the service types the
 

00:17:30.940 --> 00:17:36.210 align:start position:0%
to look at the service types the
interfaces<00:17:31.540><c> consumed</c><00:17:32.400><c> by</c><00:17:33.400><c> Java</c><00:17:33.640><c> desktop</c><00:17:35.220><c> the</c>

00:17:36.210 --> 00:17:36.220 align:start position:0%
interfaces consumed by Java desktop the
 

00:17:36.220 --> 00:17:40.080 align:start position:0%
interfaces consumed by Java desktop the
service<00:17:36.580><c> types</c><00:17:36.850><c> in</c><00:17:37.510><c> blue</c><00:17:37.990><c> are</c><00:17:38.820><c> proxies</c><00:17:39.820><c> or</c>

00:17:40.080 --> 00:17:40.090 align:start position:0%
service types in blue are proxies or
 

00:17:40.090 --> 00:17:41.910 align:start position:0%
service types in blue are proxies or
factories<00:17:40.840><c> or</c><00:17:41.020><c> wrappers</c><00:17:41.380><c> if</c><00:17:41.500><c> you</c><00:17:41.590><c> prefer</c>

00:17:41.910 --> 00:17:41.920 align:start position:0%
factories or wrappers if you prefer
 

00:17:41.920 --> 00:17:44.760 align:start position:0%
factories or wrappers if you prefer
print<00:17:42.280><c> service</c><00:17:42.640><c> lookup</c><00:17:42.970><c> is</c><00:17:43.900><c> among</c><00:17:44.200><c> them</c><00:17:44.380><c> there</c>

00:17:44.760 --> 00:17:44.770 align:start position:0%
print service lookup is among them there
 

00:17:44.770 --> 00:17:46.320 align:start position:0%
print service lookup is among them there
is<00:17:44.799><c> e</c><00:17:44.950><c> there</c><00:17:45.400><c> is</c><00:17:45.520><c> in</c><00:17:45.610><c> the</c><00:17:45.669><c> middle</c><00:17:45.850><c> print</c>

00:17:46.320 --> 00:17:46.330 align:start position:0%
is e there is in the middle print
 

00:17:46.330 --> 00:17:49.490 align:start position:0%
is e there is in the middle print
service<00:17:46.570><c> lookup</c><00:17:47.429><c> the</c><00:17:48.429><c> type</c><00:17:48.640><c> next</c><00:17:48.940><c> to</c><00:17:49.090><c> it</c>

00:17:49.490 --> 00:17:49.500 align:start position:0%
service lookup the type next to it
 

00:17:49.500 --> 00:17:52.110 align:start position:0%
service lookup the type next to it
stream<00:17:50.500><c> print</c><00:17:50.830><c> service</c><00:17:51.130><c> factory</c><00:17:51.610><c> is</c><00:17:51.820><c> the</c><00:17:51.970><c> same</c>

00:17:52.110 --> 00:17:52.120 align:start position:0%
stream print service factory is the same
 

00:17:52.120 --> 00:17:55.200 align:start position:0%
stream print service factory is the same
deal<00:17:52.330><c> and</c><00:17:52.860><c> looking</c><00:17:53.860><c> from</c><00:17:54.160><c> the</c><00:17:54.250><c> top</c><00:17:54.460><c> you</c><00:17:55.030><c> would</c>

00:17:55.200 --> 00:17:55.210 align:start position:0%
deal and looking from the top you would
 

00:17:55.210 --> 00:17:59.070 align:start position:0%
deal and looking from the top you would
call<00:17:55.540><c> methods</c><00:17:56.200><c> on</c><00:17:57.000><c> instances</c><00:17:58.000><c> of</c><00:17:58.210><c> input</c>

00:17:59.070 --> 00:17:59.080 align:start position:0%
call methods on instances of input
 

00:17:59.080 --> 00:18:01.650 align:start position:0%
call methods on instances of input
method<00:17:59.410><c> descriptor</c><00:17:59.950><c> in</c><00:18:00.790><c> order</c><00:18:01.179><c> to</c><00:18:01.299><c> find</c><00:18:01.540><c> the</c>

00:18:01.650 --> 00:18:01.660 align:start position:0%
method descriptor in order to find the
 

00:18:01.660 --> 00:18:03.990 align:start position:0%
method descriptor in order to find the
one<00:18:01.840><c> that</c><00:18:01.870><c> offers</c><00:18:02.380><c> the</c><00:18:02.559><c> desired</c><00:18:02.980><c> input</c><00:18:03.340><c> method</c>

00:18:03.990 --> 00:18:04.000 align:start position:0%
one that offers the desired input method
 

00:18:04.000 --> 00:18:07.110 align:start position:0%
one that offers the desired input method
capital<00:18:04.990><c> i</c><00:18:05.080><c> capital</c><00:18:05.110><c> m</c><00:18:05.679><c> and</c><00:18:05.919><c> you</c><00:18:06.700><c> would</c><00:18:06.850><c> call</c>

00:18:07.110 --> 00:18:07.120 align:start position:0%
capital i capital m and you would call
 

00:18:07.120 --> 00:18:10.350 align:start position:0%
capital i capital m and you would call
methods<00:18:07.690><c> on</c><00:18:07.780><c> instances</c><00:18:08.380><c> of</c><00:18:08.820><c> image</c><00:18:09.820><c> input</c>

00:18:10.350 --> 00:18:10.360 align:start position:0%
methods on instances of image input
 

00:18:10.360 --> 00:18:14.100 align:start position:0%
methods on instances of image input
stream<00:18:10.750><c> spi</c><00:18:11.320><c> service</c><00:18:12.070><c> provider</c><00:18:12.370><c> interface</c><00:18:13.110><c> to</c>

00:18:14.100 --> 00:18:14.110 align:start position:0%
stream spi service provider interface to
 

00:18:14.110 --> 00:18:15.960 align:start position:0%
stream spi service provider interface to
choose<00:18:14.410><c> one</c><00:18:14.679><c> that</c><00:18:14.860><c> can</c><00:18:15.040><c> best</c><00:18:15.250><c> convert</c><00:18:15.760><c> your</c>

00:18:15.960 --> 00:18:15.970 align:start position:0%
choose one that can best convert your
 

00:18:15.970 --> 00:18:20.640 align:start position:0%
choose one that can best convert your
data<00:18:16.179><c> into</c><00:18:16.809><c> an</c><00:18:17.020><c> image</c><00:18:17.590><c> input</c><00:18:17.919><c> stream</c><00:18:19.650><c> the</c>

00:18:20.640 --> 00:18:20.650 align:start position:0%
data into an image input stream the
 

00:18:20.650 --> 00:18:24.840 align:start position:0%
data into an image input stream the
Javadoc<00:18:21.070><c> for</c><00:18:21.520><c> those</c><00:18:22.120><c> five</c><00:18:22.870><c> SPI</c><00:18:23.410><c> types</c><00:18:23.799><c> sort</c><00:18:24.790><c> of</c>

00:18:24.840 --> 00:18:24.850 align:start position:0%
Javadoc for those five SPI types sort of
 

00:18:24.850 --> 00:18:27.960 align:start position:0%
Javadoc for those five SPI types sort of
near<00:18:25.000><c> the</c><00:18:25.030><c> top</c><00:18:25.559><c> even</c><00:18:26.559><c> says</c><00:18:26.770><c> the</c><00:18:27.370><c> intent</c><00:18:27.790><c> is</c>

00:18:27.960 --> 00:18:27.970 align:start position:0%
near the top even says the intent is
 

00:18:27.970 --> 00:18:30.900 align:start position:0%
near the top even says the intent is
that<00:18:28.360><c> it</c><00:18:28.570><c> be</c><00:18:28.750><c> relatively</c><00:18:29.640><c> inexpensive</c><00:18:30.640><c> to</c>

00:18:30.900 --> 00:18:30.910 align:start position:0%
that it be relatively inexpensive to
 

00:18:30.910 --> 00:18:33.990 align:start position:0%
that it be relatively inexpensive to
load<00:18:31.510><c> and</c><00:18:31.870><c> inspect</c><00:18:32.500><c> all</c><00:18:32.799><c> available</c><00:18:33.640><c> service</c>

00:18:33.990 --> 00:18:34.000 align:start position:0%
load and inspect all available service
 

00:18:34.000 --> 00:18:37.320 align:start position:0%
load and inspect all available service
provider<00:18:34.299><c> classes</c><00:18:34.950><c> ie</c><00:18:35.950><c> implementations</c><00:18:36.940><c> of</c>

00:18:37.320 --> 00:18:37.330 align:start position:0%
provider classes ie implementations of
 

00:18:37.330 --> 00:18:41.640 align:start position:0%
provider classes ie implementations of
image<00:18:38.140><c> input</c><00:18:38.410><c> stream</c><00:18:38.679><c> SPI</c><00:18:39.600><c> those</c><00:18:40.600><c> classes</c><00:18:41.380><c> may</c>

00:18:41.640 --> 00:18:41.650 align:start position:0%
image input stream SPI those classes may
 

00:18:41.650 --> 00:18:44.190 align:start position:0%
image input stream SPI those classes may
then<00:18:41.980><c> be</c><00:18:42.220><c> used</c><00:18:42.250><c> to</c><00:18:42.790><c> locate</c><00:18:43.030><c> and</c><00:18:43.600><c> instantiate</c>

00:18:44.190 --> 00:18:44.200 align:start position:0%
then be used to locate and instantiate
 

00:18:44.200 --> 00:18:47.220 align:start position:0%
then be used to locate and instantiate
more<00:18:44.950><c> heavyweight</c><00:18:45.549><c> classes</c><00:18:46.419><c> that</c><00:18:47.049><c> will</c>

00:18:47.220 --> 00:18:47.230 align:start position:0%
more heavyweight classes that will
 

00:18:47.230 --> 00:18:49.530 align:start position:0%
more heavyweight classes that will
perform<00:18:47.410><c> actual</c><00:18:48.220><c> work</c><00:18:48.549><c> in</c><00:18:48.910><c> this</c><00:18:49.360><c> case</c>

00:18:49.530 --> 00:18:49.540 align:start position:0%
perform actual work in this case
 

00:18:49.540 --> 00:18:52.669 align:start position:0%
perform actual work in this case
instances<00:18:50.200><c> of</c><00:18:50.380><c> image</c><00:18:50.650><c> reader</c><00:18:50.890><c> image</c><00:18:51.790><c> writer</c>

00:18:52.669 --> 00:18:52.679 align:start position:0%
instances of image reader image writer
 

00:18:52.679 --> 00:18:55.350 align:start position:0%
instances of image reader image writer
image<00:18:53.679><c> transcoder</c><00:18:54.220><c> image</c><00:18:54.669><c> input</c><00:18:54.940><c> stream</c><00:18:55.179><c> and</c>

00:18:55.350 --> 00:18:55.360 align:start position:0%
image transcoder image input stream and
 

00:18:55.360 --> 00:18:59.880 align:start position:0%
image transcoder image input stream and
image<00:18:55.630><c> output</c><00:18:55.809><c> stream</c><00:18:57.929><c> the</c><00:18:58.929><c> service</c><00:18:59.320><c> types</c><00:18:59.590><c> in</c>

00:18:59.880 --> 00:18:59.890 align:start position:0%
image output stream the service types in
 

00:18:59.890 --> 00:19:04.409 align:start position:0%
image output stream the service types in
Brown<00:19:00.460><c> are</c><00:19:01.419><c> not</c><00:19:01.960><c> proxies</c><00:19:02.620><c> or</c><00:19:03.010><c> factories</c><00:19:03.640><c> but</c>

00:19:04.409 --> 00:19:04.419 align:start position:0%
Brown are not proxies or factories but
 

00:19:04.419 --> 00:19:06.960 align:start position:0%
Brown are not proxies or factories but
rather<00:19:04.660><c> they</c><00:19:05.290><c> represent</c><00:19:05.799><c> the</c><00:19:05.950><c> actual</c><00:19:06.309><c> objects</c>

00:19:06.960 --> 00:19:06.970 align:start position:0%
rather they represent the actual objects
 

00:19:06.970 --> 00:19:07.650 align:start position:0%
rather they represent the actual objects
of<00:19:07.090><c> interest</c>

00:19:07.650 --> 00:19:07.660 align:start position:0%
of interest
 

00:19:07.660 --> 00:19:11.520 align:start position:0%
of interest
so<00:19:08.590><c> while</c><00:19:09.250><c> MIDI</c><00:19:09.700><c> device</c><00:19:10.179><c> provider</c><00:19:10.780><c> sort</c><00:19:11.290><c> of</c><00:19:11.350><c> in</c>

00:19:11.520 --> 00:19:11.530 align:start position:0%
so while MIDI device provider sort of in
 

00:19:11.530 --> 00:19:15.390 align:start position:0%
so while MIDI device provider sort of in
the<00:19:11.620><c> middle</c><00:19:11.799><c> in</c><00:19:12.400><c> blue</c><00:19:12.880><c> is</c><00:19:13.240><c> just</c><00:19:13.990><c> a</c><00:19:14.620><c> proxy</c><00:19:14.890><c> for</c>

00:19:15.390 --> 00:19:15.400 align:start position:0%
the middle in blue is just a proxy for
 

00:19:15.400 --> 00:19:19.380 align:start position:0%
the middle in blue is just a proxy for
obtaining<00:19:15.549><c> MIDI</c><00:19:16.120><c> device</c><00:19:16.510><c> objects</c><00:19:18.030><c> MIDI</c><00:19:19.030><c> file</c>

00:19:19.380 --> 00:19:19.390 align:start position:0%
obtaining MIDI device objects MIDI file
 

00:19:19.390 --> 00:19:22.830 align:start position:0%
obtaining MIDI device objects MIDI file
reader<00:19:19.809><c> just</c><00:19:20.169><c> below</c><00:19:20.710><c> it</c><00:19:20.740><c> in</c><00:19:21.100><c> Brown</c><00:19:21.429><c> is</c><00:19:21.910><c> real</c>

00:19:22.830 --> 00:19:22.840 align:start position:0%
reader just below it in Brown is real
 

00:19:22.840 --> 00:19:24.780 align:start position:0%
reader just below it in Brown is real
business<00:19:23.260><c> logic</c><00:19:23.410><c> a</c><00:19:23.710><c> provider</c><00:19:24.100><c> class</c><00:19:24.340><c> for</c><00:19:24.640><c> MIDI</c>

00:19:24.780 --> 00:19:24.790 align:start position:0%
business logic a provider class for MIDI
 

00:19:24.790 --> 00:19:25.530 align:start position:0%
business logic a provider class for MIDI
file<00:19:25.000><c> reader</c>

00:19:25.530 --> 00:19:25.540 align:start position:0%
file reader
 

00:19:25.540 --> 00:19:27.780 align:start position:0%
file reader
knows<00:19:26.080><c> how</c><00:19:26.380><c> to</c><00:19:26.410><c> obtain</c><00:19:26.710><c> actually</c><00:19:27.460><c> a</c><00:19:27.490><c> MIDI</c>

00:19:27.780 --> 00:19:27.790 align:start position:0%
knows how to obtain actually a MIDI
 

00:19:27.790 --> 00:19:32.040 align:start position:0%
knows how to obtain actually a MIDI
sequence<00:19:28.240><c> from</c><00:19:28.870><c> a</c><00:19:29.020><c> file</c><00:19:30.180><c> the</c><00:19:31.180><c> bottom</c><00:19:31.510><c> line</c><00:19:31.720><c> is</c>

00:19:32.040 --> 00:19:32.050 align:start position:0%
sequence from a file the bottom line is
 

00:19:32.050 --> 00:19:34.920 align:start position:0%
sequence from a file the bottom line is
that<00:19:32.380><c> the</c><00:19:32.620><c> service</c><00:19:33.160><c> load</c><00:19:33.430><c> API</c><00:19:34.000><c> and</c><00:19:34.480><c> the</c><00:19:34.630><c> module</c>

00:19:34.920 --> 00:19:34.930 align:start position:0%
that the service load API and the module
 

00:19:34.930 --> 00:19:37.790 align:start position:0%
that the service load API and the module
system<00:19:35.380><c> are</c><00:19:35.590><c> agnostic</c><00:19:36.480><c> about</c><00:19:37.480><c> the</c>

00:19:37.790 --> 00:19:37.800 align:start position:0%
system are agnostic about the
 

00:19:37.800 --> 00:19:39.990 align:start position:0%
system are agnostic about the
granularity<00:19:38.800><c> in</c><00:19:38.950><c> design</c><00:19:39.310><c> of</c><00:19:39.340><c> your</c><00:19:39.520><c> service</c>

00:19:39.990 --> 00:19:40.000 align:start position:0%
granularity in design of your service
 

00:19:40.000 --> 00:19:43.710 align:start position:0%
granularity in design of your service
type<00:19:40.380><c> which</c><00:19:41.380><c> means</c><00:19:41.410><c> that</c><00:19:42.420><c> details</c><00:19:43.420><c> like</c>

00:19:43.710 --> 00:19:43.720 align:start position:0%
type which means that details like
 

00:19:43.720 --> 00:19:46.380 align:start position:0%
type which means that details like
quality<00:19:44.260><c> of</c><00:19:44.470><c> implementation</c><00:19:45.340><c> issues</c><00:19:46.030><c> are</c>

00:19:46.380 --> 00:19:46.390 align:start position:0%
quality of implementation issues are
 

00:19:46.390 --> 00:19:53.550 align:start position:0%
quality of implementation issues are
kept<00:19:46.660><c> out</c><00:19:46.930><c> of</c><00:19:47.500><c> the</c><00:19:47.800><c> module</c><00:19:48.100><c> declarations</c><00:19:52.560><c> now</c>

00:19:53.550 --> 00:19:53.560 align:start position:0%
kept out of the module declarations now
 

00:19:53.560 --> 00:19:55.020 align:start position:0%
kept out of the module declarations now
you<00:19:53.620><c> may</c><00:19:53.800><c> be</c><00:19:53.830><c> wondering</c><00:19:53.950><c> where</c><00:19:54.730><c> are</c><00:19:54.940><c> the</c>

00:19:55.020 --> 00:19:55.030 align:start position:0%
you may be wondering where are the
 

00:19:55.030 --> 00:19:58.020 align:start position:0%
you may be wondering where are the
service<00:19:55.690><c> types</c><00:19:56.190><c> the</c><00:19:57.190><c> print</c><00:19:57.430><c> service</c><00:19:57.730><c> lookup</c>

00:19:58.020 --> 00:19:58.030 align:start position:0%
service types the print service lookup
 

00:19:58.030 --> 00:20:01.530 align:start position:0%
service types the print service lookup
interface<00:19:58.390><c> actually</c><00:19:59.140><c> live</c><00:19:59.350><c> a</c><00:20:00.270><c> service</c><00:20:01.270><c> type</c>

00:20:01.530 --> 00:20:01.540 align:start position:0%
interface actually live a service type
 

00:20:01.540 --> 00:20:05.460 align:start position:0%
interface actually live a service type
is<00:20:02.440><c> just</c><00:20:02.980><c> an</c><00:20:03.130><c> interface</c><00:20:03.580><c> in</c><00:20:04.330><c> a</c><00:20:04.510><c> package</c><00:20:04.900><c> in</c><00:20:05.320><c> a</c>

00:20:05.460 --> 00:20:05.470 align:start position:0%
is just an interface in a package in a
 

00:20:05.470 --> 00:20:09.240 align:start position:0%
is just an interface in a package in a
module<00:20:05.770><c> that</c><00:20:07.050><c> package</c><00:20:08.050><c> will</c><00:20:08.290><c> almost</c><00:20:08.590><c> always</c>

00:20:09.240 --> 00:20:09.250 align:start position:0%
module that package will almost always
 

00:20:09.250 --> 00:20:13.170 align:start position:0%
module that package will almost always
be<00:20:09.780><c> exported</c><00:20:10.780><c> from</c><00:20:11.260><c> the</c><00:20:11.410><c> module</c><00:20:12.030><c> all</c><00:20:13.030><c> those</c>

00:20:13.170 --> 00:20:13.180 align:start position:0%
be exported from the module all those
 

00:20:13.180 --> 00:20:17.130 align:start position:0%
be exported from the module all those
green<00:20:13.390><c> arrows</c><00:20:14.250><c> so</c><00:20:15.250><c> that</c><00:20:15.460><c> other</c><00:20:15.700><c> modules</c><00:20:16.420><c> such</c>

00:20:17.130 --> 00:20:17.140 align:start position:0%
green arrows so that other modules such
 

00:20:17.140 --> 00:20:19.440 align:start position:0%
green arrows so that other modules such
as<00:20:17.170><c> Java</c><00:20:17.770><c> desktop</c><00:20:18.010><c> is</c><00:20:18.400><c> a</c><00:20:18.430><c> consumer</c><00:20:19.030><c> and</c><00:20:19.180><c> print</c>

00:20:19.440 --> 00:20:19.450 align:start position:0%
as Java desktop is a consumer and print
 

00:20:19.450 --> 00:20:23.220 align:start position:0%
as Java desktop is a consumer and print
nib<00:20:19.630><c> as</c><00:20:19.750><c> a</c><00:20:19.780><c> provider</c><00:20:20.160><c> can</c><00:20:21.160><c> require</c><00:20:21.610><c> the</c><00:20:22.230><c> the</c>

00:20:23.220 --> 00:20:23.230 align:start position:0%
nib as a provider can require the the
 

00:20:23.230 --> 00:20:25.440 align:start position:0%
nib as a provider can require the the
service<00:20:23.560><c> types</c><00:20:23.770><c> module</c><00:20:24.130><c> and</c><00:20:24.430><c> access</c><00:20:25.270><c> the</c>

00:20:25.440 --> 00:20:25.450 align:start position:0%
service types module and access the
 

00:20:25.450 --> 00:20:31.980 align:start position:0%
service types module and access the
service<00:20:25.780><c> type</c><00:20:26.020><c> a</c><00:20:30.150><c> consumer</c><00:20:31.150><c> module</c><00:20:31.480><c> like</c><00:20:31.750><c> Java</c>

00:20:31.980 --> 00:20:31.990 align:start position:0%
service type a consumer module like Java
 

00:20:31.990 --> 00:20:35.460 align:start position:0%
service type a consumer module like Java
desktop<00:20:32.580><c> needs</c><00:20:33.580><c> to</c><00:20:33.820><c> access</c><00:20:34.570><c> the</c><00:20:34.840><c> service</c><00:20:35.230><c> type</c>

00:20:35.460 --> 00:20:35.470 align:start position:0%
desktop needs to access the service type
 

00:20:35.470 --> 00:20:38.760 align:start position:0%
desktop needs to access the service type
for<00:20:36.250><c> its</c><00:20:36.400><c> users</c><00:20:36.880><c> directive</c><00:20:37.450><c> the</c><00:20:38.320><c> dark</c><00:20:38.530><c> blue</c>

00:20:38.760 --> 00:20:38.770 align:start position:0%
for its users directive the dark blue
 

00:20:38.770 --> 00:20:42.570 align:start position:0%
for its users directive the dark blue
arrows<00:20:39.130><c> and</c><00:20:39.720><c> for</c><00:20:40.720><c> the</c><00:20:40.870><c> code</c><00:20:41.170><c> that</c><00:20:41.740><c> employees</c>

00:20:42.570 --> 00:20:42.580 align:start position:0%
arrows and for the code that employees
 

00:20:42.580 --> 00:20:43.590 align:start position:0%
arrows and for the code that employees
service<00:20:43.180><c> loader</c>

00:20:43.590 --> 00:20:43.600 align:start position:0%
service loader
 

00:20:43.600 --> 00:20:46.380 align:start position:0%
service loader
to<00:20:43.780><c> get</c><00:20:43.930><c> instances</c><00:20:44.650><c> of</c><00:20:44.950><c> the</c><00:20:45.610><c> service</c><00:20:45.970><c> type</c><00:20:46.180><c> in</c>

00:20:46.380 --> 00:20:46.390 align:start position:0%
to get instances of the service type in
 

00:20:46.390 --> 00:20:47.970 align:start position:0%
to get instances of the service type in
other<00:20:46.510><c> words</c><00:20:46.690><c> the</c><00:20:47.020><c> print</c><00:20:47.260><c> service</c><00:20:47.590><c> lookup</c>

00:20:47.970 --> 00:20:47.980 align:start position:0%
other words the print service lookup
 

00:20:47.980 --> 00:20:49.800 align:start position:0%
other words the print service lookup
type<00:20:48.580><c> name</c><00:20:48.820><c> is</c><00:20:49.000><c> actually</c><00:20:49.270><c> in</c><00:20:49.420><c> the</c><00:20:49.600><c> code</c><00:20:49.780><c> of</c>

00:20:49.800 --> 00:20:49.810 align:start position:0%
type name is actually in the code of
 

00:20:49.810 --> 00:20:52.020 align:start position:0%
type name is actually in the code of
Java<00:20:50.260><c> desktop</c><00:20:50.710><c> so</c><00:20:51.010><c> there's</c><00:20:51.310><c> a</c><00:20:51.370><c> real</c><00:20:51.550><c> access</c>

00:20:52.020 --> 00:20:52.030 align:start position:0%
Java desktop so there's a real access
 

00:20:52.030 --> 00:20:58.680 align:start position:0%
Java desktop so there's a real access
across<00:20:52.900><c> modules</c><00:20:53.380><c> there</c><00:20:53.710><c> a</c><00:20:57.210><c> provider</c><00:20:58.210><c> module</c>

00:20:58.680 --> 00:20:58.690 align:start position:0%
across modules there a provider module
 

00:20:58.690 --> 00:21:01.860 align:start position:0%
across modules there a provider module
like<00:20:59.140><c> print</c><00:20:59.650><c> neural-net</c><00:21:00.010><c> prints</c><00:21:00.660><c> needs</c><00:21:01.660><c> to</c>

00:21:01.860 --> 00:21:01.870 align:start position:0%
like print neural-net prints needs to
 

00:21:01.870 --> 00:21:04.680 align:start position:0%
like print neural-net prints needs to
access<00:21:02.320><c> the</c><00:21:02.500><c> service</c><00:21:02.890><c> type</c><00:21:03.160><c> for</c><00:21:04.000><c> its</c><00:21:04.150><c> provides</c>

00:21:04.680 --> 00:21:04.690 align:start position:0%
access the service type for its provides
 

00:21:04.690 --> 00:21:07.920 align:start position:0%
access the service type for its provides
directive<00:21:05.380><c> and</c><00:21:05.970><c> of</c><00:21:06.970><c> course</c><00:21:07.210><c> for</c><00:21:07.510><c> the</c><00:21:07.660><c> class</c>

00:21:07.920 --> 00:21:07.930 align:start position:0%
directive and of course for the class
 

00:21:07.930 --> 00:21:10.110 align:start position:0%
directive and of course for the class
fast<00:21:08.620><c> print</c><00:21:08.920><c> or</c><00:21:09.040><c> net</c><00:21:09.190><c> print</c><00:21:09.430><c> that</c><00:21:09.730><c> actually</c>

00:21:10.110 --> 00:21:10.120 align:start position:0%
fast print or net print that actually
 

00:21:10.120 --> 00:21:14.120 align:start position:0%
fast print or net print that actually
implements<00:21:10.540><c> or</c><00:21:10.840><c> extends</c><00:21:11.590><c> the</c><00:21:11.980><c> service</c><00:21:12.370><c> type</c>

00:21:14.120 --> 00:21:14.130 align:start position:0%
implements or extends the service type
 

00:21:14.130 --> 00:21:18.030 align:start position:0%
implements or extends the service type
in<00:21:15.330><c> general</c><00:21:16.330><c> there</c><00:21:16.840><c> can</c><00:21:16.990><c> be</c><00:21:17.050><c> many</c><00:21:17.380><c> consumer</c>

00:21:18.030 --> 00:21:18.040 align:start position:0%
in general there can be many consumer
 

00:21:18.040 --> 00:21:20.400 align:start position:0%
in general there can be many consumer
modules<00:21:18.430><c> on</c><00:21:18.700><c> the</c><00:21:18.820><c> left</c><00:21:19.000><c> and</c><00:21:19.360><c> many</c><00:21:19.900><c> provider</c>

00:21:20.400 --> 00:21:20.410 align:start position:0%
modules on the left and many provider
 

00:21:20.410 --> 00:21:22.830 align:start position:0%
modules on the left and many provider
modules<00:21:20.950><c> on</c><00:21:21.130><c> the</c><00:21:21.160><c> right</c><00:21:21.400><c> for</c><00:21:22.090><c> a</c><00:21:22.120><c> given</c><00:21:22.540><c> service</c>

00:21:22.830 --> 00:21:22.840 align:start position:0%
modules on the right for a given service
 

00:21:22.840 --> 00:21:26.160 align:start position:0%
modules on the right for a given service
type<00:21:23.230><c> a</c><00:21:23.850><c> consumer</c><00:21:24.850><c> module</c><00:21:25.150><c> will</c><00:21:25.450><c> say</c><00:21:25.630><c> requires</c>

00:21:26.160 --> 00:21:26.170 align:start position:0%
type a consumer module will say requires
 

00:21:26.170 --> 00:21:29.160 align:start position:0%
type a consumer module will say requires
and<00:21:26.620><c> uses</c><00:21:27.070><c> while</c><00:21:27.910><c> a</c><00:21:27.940><c> provider</c><00:21:28.390><c> module</c><00:21:28.810><c> will</c>

00:21:29.160 --> 00:21:29.170 align:start position:0%
and uses while a provider module will
 

00:21:29.170 --> 00:21:32.970 align:start position:0%
and uses while a provider module will
say<00:21:29.380><c> requires</c><00:21:29.830><c> and</c><00:21:30.160><c> provides</c><00:21:31.590><c> the</c><00:21:32.590><c> arrows</c>

00:21:32.970 --> 00:21:32.980 align:start position:0%
say requires and provides the arrows
 

00:21:32.980 --> 00:21:34.560 align:start position:0%
say requires and provides the arrows
looked<00:21:33.370><c> complicated</c><00:21:34.120><c> when</c><00:21:34.270><c> they're</c><00:21:34.420><c> all</c>

00:21:34.560 --> 00:21:34.570 align:start position:0%
looked complicated when they're all
 

00:21:34.570 --> 00:21:37.230 align:start position:0%
looked complicated when they're all
drawn<00:21:34.840><c> out</c><00:21:34.870><c> but</c><00:21:35.470><c> but</c><00:21:35.770><c> browsing</c><00:21:36.370><c> the</c><00:21:36.520><c> source</c><00:21:36.880><c> of</c>

00:21:37.230 --> 00:21:37.240 align:start position:0%
drawn out but but browsing the source of
 

00:21:37.240 --> 00:21:39.100 align:start position:0%
drawn out but but browsing the source of
module<00:21:37.750><c> declarations</c>

00:21:39.100 --> 00:21:39.110 align:start position:0%
module declarations
 

00:21:39.110 --> 00:21:41.950 align:start position:0%
module declarations
requires<00:21:39.799><c> users</c><00:21:40.250><c> requires</c><00:21:40.610><c> provides</c><00:21:41.000><c> makes</c>

00:21:41.950 --> 00:21:41.960 align:start position:0%
requires users requires provides makes
 

00:21:41.960 --> 00:21:43.750 align:start position:0%
requires users requires provides makes
it<00:21:42.140><c> pretty</c><00:21:42.289><c> clear</c><00:21:42.440><c> what</c><00:21:42.919><c> the</c><00:21:43.130><c> module</c>

00:21:43.750 --> 00:21:43.760 align:start position:0%
it pretty clear what the module
 

00:21:43.760 --> 00:21:47.560 align:start position:0%
it pretty clear what the module
relationships<00:21:44.750><c> are</c><00:21:45.279><c> and</c><00:21:46.279><c> by</c><00:21:46.820><c> the</c><00:21:46.880><c> way</c><00:21:47.000><c> this</c>

00:21:47.560 --> 00:21:47.570 align:start position:0%
relationships are and by the way this
 

00:21:47.570 --> 00:21:50.740 align:start position:0%
relationships are and by the way this
was<00:21:47.840><c> this</c><00:21:48.649><c> has</c><00:21:49.000><c> this</c><00:21:50.000><c> to</c><00:21:50.179><c> some</c><00:21:50.330><c> extent</c><00:21:50.360><c> is</c>

00:21:50.740 --> 00:21:50.750 align:start position:0%
was this has this to some extent is
 

00:21:50.750 --> 00:21:52.509 align:start position:0%
was this has this to some extent is
irreducible<00:21:51.350><c> even</c><00:21:51.679><c> if</c><00:21:51.769><c> you</c><00:21:51.890><c> were</c><00:21:51.980><c> doing</c><00:21:52.279><c> a</c>

00:21:52.509 --> 00:21:52.519 align:start position:0%
irreducible even if you were doing a
 

00:21:52.519 --> 00:21:54.370 align:start position:0%
irreducible even if you were doing a
service<00:21:52.820><c> loader</c><00:21:53.149><c> prior</c><00:21:53.510><c> to</c><00:21:53.690><c> nine</c><00:21:53.870><c> this</c><00:21:54.169><c> is</c>

00:21:54.370 --> 00:21:54.380 align:start position:0%
service loader prior to nine this is
 

00:21:54.380 --> 00:21:56.200 align:start position:0%
service loader prior to nine this is
what<00:21:54.620><c> was</c><00:21:54.799><c> really</c><00:21:55.039><c> going</c><00:21:55.370><c> on</c><00:21:55.610><c> these</c><00:21:55.850><c> are</c><00:21:55.909><c> the</c>

00:21:56.200 --> 00:21:56.210 align:start position:0%
what was really going on these are the
 

00:21:56.210 --> 00:21:59.289 align:start position:0%
what was really going on these are the
essential<00:21:56.990><c> relationships</c><00:21:57.909><c> between</c><00:21:58.909><c> the</c>

00:21:59.289 --> 00:21:59.299 align:start position:0%
essential relationships between the
 

00:21:59.299 --> 00:22:03.009 align:start position:0%
essential relationships between the
consumers<00:21:59.870><c> and</c><00:22:00.080><c> the</c><00:22:00.169><c> providers</c><00:22:01.870><c> the</c><00:22:02.870><c> good</c>

00:22:03.009 --> 00:22:03.019 align:start position:0%
consumers and the providers the good
 

00:22:03.019 --> 00:22:05.320 align:start position:0%
consumers and the providers the good
news<00:22:03.169><c> is</c><00:22:03.320><c> if</c><00:22:03.440><c> you</c><00:22:03.559><c> skim</c><00:22:03.860><c> for</c><00:22:04.130><c> example</c><00:22:04.700><c> the</c><00:22:04.820><c> JDK</c>

00:22:05.320 --> 00:22:05.330 align:start position:0%
news is if you skim for example the JDK
 

00:22:05.330 --> 00:22:07.630 align:start position:0%
news is if you skim for example the JDK
module<00:22:05.690><c> summary</c><00:22:06.140><c> or</c><00:22:06.740><c> even</c><00:22:07.159><c> the</c><00:22:07.250><c> Javadoc</c>

00:22:07.630 --> 00:22:07.640 align:start position:0%
module summary or even the Javadoc
 

00:22:07.640 --> 00:22:10.750 align:start position:0%
module summary or even the Javadoc
produced<00:22:08.269><c> from</c><00:22:08.510><c> your</c><00:22:08.720><c> own</c><00:22:08.960><c> modules</c><00:22:09.490><c> it's</c><00:22:10.490><c> very</c>

00:22:10.750 --> 00:22:10.760 align:start position:0%
produced from your own modules it's very
 

00:22:10.760 --> 00:22:12.909 align:start position:0%
produced from your own modules it's very
easy<00:22:10.970><c> to</c><00:22:11.240><c> see</c><00:22:11.389><c> which</c><00:22:11.630><c> modules</c><00:22:12.110><c> are</c><00:22:12.320><c> consumers</c>

00:22:12.909 --> 00:22:12.919 align:start position:0%
easy to see which modules are consumers
 

00:22:12.919 --> 00:22:15.940 align:start position:0%
easy to see which modules are consumers
and<00:22:13.159><c> of</c><00:22:13.580><c> what</c><00:22:13.789><c> and</c><00:22:14.260><c> which</c><00:22:15.260><c> modules</c><00:22:15.769><c> are</c>

00:22:15.940 --> 00:22:15.950 align:start position:0%
and of what and which modules are
 

00:22:15.950 --> 00:22:18.549 align:start position:0%
and of what and which modules are
providers<00:22:16.519><c> and</c><00:22:16.760><c> of</c><00:22:17.120><c> what</c><00:22:17.299><c> and</c><00:22:17.720><c> that's</c>

00:22:18.549 --> 00:22:18.559 align:start position:0%
providers and of what and that's
 

00:22:18.559 --> 00:22:21.100 align:start position:0%
providers and of what and that's
definitely<00:22:19.279><c> in</c><00:22:19.639><c> an</c><00:22:19.730><c> advanced</c><00:22:20.299><c> over</c><00:22:20.659><c> grapping</c>

00:22:21.100 --> 00:22:21.110 align:start position:0%
definitely in an advanced over grapping
 

00:22:21.110 --> 00:22:23.500 align:start position:0%
definitely in an advanced over grapping
for<00:22:21.470><c> service</c><00:22:21.980><c> loaded</c><00:22:22.370><c> load</c><00:22:22.730><c> calls</c><00:22:23.090><c> and</c>

00:22:23.500 --> 00:22:23.510 align:start position:0%
for service loaded load calls and
 

00:22:23.510 --> 00:22:25.810 align:start position:0%
for service loaded load calls and
wondering<00:22:24.350><c> which</c><00:22:24.529><c> jars</c><00:22:24.889><c> on</c><00:22:25.159><c> the</c><00:22:25.309><c> classpath</c>

00:22:25.810 --> 00:22:25.820 align:start position:0%
wondering which jars on the classpath
 

00:22:25.820 --> 00:22:32.980 align:start position:0%
wondering which jars on the classpath
have<00:22:26.389><c> files</c><00:22:26.690><c> in</c><00:22:26.990><c> Metron</c><00:22:27.380><c> services</c><00:22:31.600><c> all</c><00:22:32.600><c> that</c>

00:22:32.980 --> 00:22:32.990 align:start position:0%
have files in Metron services all that
 

00:22:32.990 --> 00:22:37.419 align:start position:0%
have files in Metron services all that
said<00:22:34.630><c> it's</c><00:22:35.630><c> not</c><00:22:35.840><c> man</c><00:22:36.169><c> dat</c><00:22:36.409><c> tree</c><00:22:36.679><c> for</c><00:22:36.919><c> a</c><00:22:36.980><c> service</c>

00:22:37.419 --> 00:22:37.429 align:start position:0%
said it's not man dat tree for a service
 

00:22:37.429 --> 00:22:40.149 align:start position:0%
said it's not man dat tree for a service
type<00:22:37.669><c> to</c><00:22:38.419><c> be</c><00:22:38.570><c> defined</c><00:22:38.960><c> in</c><00:22:39.230><c> a</c><00:22:39.380><c> different</c><00:22:39.980><c> module</c>

00:22:40.149 --> 00:22:40.159 align:start position:0%
type to be defined in a different module
 

00:22:40.159 --> 00:22:44.259 align:start position:0%
type to be defined in a different module
than<00:22:40.789><c> the</c><00:22:40.970><c> consumers</c><00:22:41.570><c> and</c><00:22:41.899><c> providers</c><00:22:42.380><c> in</c><00:22:43.269><c> the</c>

00:22:44.259 --> 00:22:44.269 align:start position:0%
than the consumers and providers in the
 

00:22:44.269 --> 00:22:46.960 align:start position:0%
than the consumers and providers in the
JDK<00:22:44.840><c> it's</c><00:22:45.470><c> common</c><00:22:46.070><c> for</c><00:22:46.100><c> a</c><00:22:46.309><c> module</c><00:22:46.519><c> which</c>

00:22:46.960 --> 00:22:46.970 align:start position:0%
JDK it's common for a module which
 

00:22:46.970 --> 00:22:50.560 align:start position:0%
JDK it's common for a module which
defines<00:22:47.539><c> and</c><00:22:47.960><c> exports</c><00:22:48.710><c> a</c><00:22:48.860><c> service</c><00:22:49.250><c> type</c><00:22:49.570><c> to</c>

00:22:50.560 --> 00:22:50.570 align:start position:0%
defines and exports a service type to
 

00:22:50.570 --> 00:22:53.680 align:start position:0%
defines and exports a service type to
also<00:22:51.169><c> be</c><00:22:51.409><c> a</c><00:22:51.440><c> consumer</c><00:22:52.250><c> module</c><00:22:52.789><c> for</c><00:22:53.539><c> that</c>

00:22:53.680 --> 00:22:53.690 align:start position:0%
also be a consumer module for that
 

00:22:53.690 --> 00:22:57.399 align:start position:0%
also be a consumer module for that
service<00:22:54.110><c> type</c><00:22:54.350><c> for</c><00:22:55.309><c> example</c><00:22:56.049><c> the</c><00:22:57.049><c> Java</c>

00:22:57.399 --> 00:22:57.409 align:start position:0%
service type for example the Java
 

00:22:57.409 --> 00:23:01.779 align:start position:0%
service type for example the Java
desktop<00:22:57.559><c> module</c><00:22:58.570><c> exports</c><00:22:59.570><c> the</c><00:22:59.750><c> java.awt</c><00:23:00.789><c> mSpy</c>

00:23:01.779 --> 00:23:01.789 align:start position:0%
desktop module exports the java.awt mSpy
 

00:23:01.789 --> 00:23:05.879 align:start position:0%
desktop module exports the java.awt mSpy
package<00:23:02.450><c> at</c><00:23:02.750><c> the</c><00:23:02.870><c> top</c><00:23:03.700><c> so</c><00:23:04.700><c> that</c><00:23:04.730><c> other</c><00:23:05.120><c> modules</c>

00:23:05.879 --> 00:23:05.889 align:start position:0%
package at the top so that other modules
 

00:23:05.889 --> 00:23:09.070 align:start position:0%
package at the top so that other modules
can<00:23:06.889><c> implement</c><00:23:07.399><c> the</c><00:23:07.730><c> spi</c><00:23:08.149><c> types</c><00:23:08.510><c> and</c><00:23:08.779><c> act</c><00:23:08.899><c> as</c>

00:23:09.070 --> 00:23:09.080 align:start position:0%
can implement the spi types and act as
 

00:23:09.080 --> 00:23:14.350 align:start position:0%
can implement the spi types and act as
provider<00:23:09.409><c> modules</c><00:23:10.570><c> and</c><00:23:12.070><c> Java</c><00:23:13.070><c> desktop</c><00:23:13.360><c> uses</c>

00:23:14.350 --> 00:23:14.360 align:start position:0%
provider modules and Java desktop uses
 

00:23:14.360 --> 00:23:19.539 align:start position:0%
provider modules and Java desktop uses
at<00:23:15.049><c> the</c><00:23:15.200><c> top</c><00:23:15.409><c> on</c><00:23:15.559><c> the</c><00:23:15.590><c> right</c><00:23:16.990><c> java.awt</c><00:23:18.549><c> mSpy</c>

00:23:19.539 --> 00:23:19.549 align:start position:0%
at the top on the right java.awt mSpy
 

00:23:19.549 --> 00:23:22.539 align:start position:0%
at the top on the right java.awt mSpy
input<00:23:20.029><c> method</c><00:23:20.299><c> descriptor</c><00:23:20.980><c> so</c><00:23:21.980><c> the</c><00:23:22.159><c> code</c><00:23:22.399><c> in</c>

00:23:22.539 --> 00:23:22.549 align:start position:0%
input method descriptor so the code in
 

00:23:22.549 --> 00:23:24.730 align:start position:0%
input method descriptor so the code in
java<00:23:22.760><c> desktop</c><00:23:23.269><c> can</c><00:23:23.779><c> use</c><00:23:23.929><c> service</c><00:23:24.289><c> loader</c><00:23:24.529><c> to</c>

00:23:24.730 --> 00:23:24.740 align:start position:0%
java desktop can use service loader to
 

00:23:24.740 --> 00:23:29.080 align:start position:0%
java desktop can use service loader to
get<00:23:24.889><c> instances</c><00:23:25.549><c> of</c><00:23:26.389><c> that</c><00:23:26.600><c> service</c><00:23:26.960><c> type</c><00:23:28.090><c> many</c>

00:23:29.080 --> 00:23:29.090 align:start position:0%
get instances of that service type many
 

00:23:29.090 --> 00:23:31.899 align:start position:0%
get instances of that service type many
well-known<00:23:29.539><c> frameworks</c><00:23:30.110><c> in</c><00:23:30.380><c> the</c><00:23:30.559><c> JDK</c><00:23:31.039><c> such</c><00:23:31.760><c> as</c>

00:23:31.899 --> 00:23:31.909 align:start position:0%
well-known frameworks in the JDK such as
 

00:23:31.909 --> 00:23:34.470 align:start position:0%
well-known frameworks in the JDK such as
logging<00:23:32.149><c> file</c><00:23:32.960><c> system</c><00:23:33.440><c> and</c><00:23:33.620><c> date/time</c>

00:23:34.470 --> 00:23:34.480 align:start position:0%
logging file system and date/time
 

00:23:34.480 --> 00:23:37.419 align:start position:0%
logging file system and date/time
support<00:23:35.480><c> this</c><00:23:35.659><c> kind</c><00:23:35.929><c> of</c><00:23:36.019><c> customization</c><00:23:36.500><c> via</c>

00:23:37.419 --> 00:23:37.429 align:start position:0%
support this kind of customization via
 

00:23:37.429 --> 00:23:42.160 align:start position:0%
support this kind of customization via
provider<00:23:37.820><c> modules</c>

00:23:42.160 --> 00:23:42.170 align:start position:0%
 
 

00:23:42.170 --> 00:23:45.160 align:start position:0%
 
it's<00:23:43.130><c> also</c><00:23:43.340><c> relatively</c><00:23:44.090><c> common</c><00:23:44.540><c> in</c><00:23:44.600><c> the</c><00:23:44.720><c> JDK</c>

00:23:45.160 --> 00:23:45.170 align:start position:0%
it's also relatively common in the JDK
 

00:23:45.170 --> 00:23:48.340 align:start position:0%
it's also relatively common in the JDK
for<00:23:45.860><c> a</c><00:23:45.890><c> consumer</c><00:23:46.460><c> module</c><00:23:47.000><c> to</c><00:23:47.720><c> also</c><00:23:48.140><c> be</c><00:23:48.320><c> a</c>

00:23:48.340 --> 00:23:48.350 align:start position:0%
for a consumer module to also be a
 

00:23:48.350 --> 00:23:51.780 align:start position:0%
for a consumer module to also be a
provider<00:23:48.710><c> module</c><00:23:49.160><c> for</c><00:23:49.910><c> example</c><00:23:50.230><c> Java</c><00:23:51.230><c> desktop</c>

00:23:51.780 --> 00:23:51.790 align:start position:0%
provider module for example Java desktop
 

00:23:51.790 --> 00:23:54.280 align:start position:0%
provider module for example Java desktop
uses<00:23:52.790><c> print</c><00:23:53.150><c> service</c><00:23:53.480><c> lookup</c><00:23:53.780><c> really</c><00:23:54.140><c> does</c>

00:23:54.280 --> 00:23:54.290 align:start position:0%
uses print service lookup really does
 

00:23:54.290 --> 00:23:57.280 align:start position:0%
uses print service lookup really does
and<00:23:54.940><c> also</c><00:23:55.940><c> it</c><00:23:56.210><c> provides</c><00:23:56.240><c> an</c><00:23:57.080><c> implementation</c>

00:23:57.280 --> 00:23:57.290 align:start position:0%
and also it provides an implementation
 

00:23:57.290 --> 00:24:00.520 align:start position:0%
and also it provides an implementation
in<00:23:58.250><c> the</c><00:23:58.580><c> form</c><00:23:58.970><c> of</c><00:23:59.150><c> Sun</c><00:23:59.630><c> print</c><00:23:59.930><c> print</c><00:24:00.260><c> servers</c>

00:24:00.520 --> 00:24:00.530 align:start position:0%
in the form of Sun print print servers
 

00:24:00.530 --> 00:24:04.990 align:start position:0%
in the form of Sun print print servers
lookup<00:24:00.800><c> provider</c><00:24:02.560><c> this</c><00:24:03.560><c> allows</c><00:24:03.980><c> the</c><00:24:04.490><c> code</c><00:24:04.790><c> in</c>

00:24:04.990 --> 00:24:05.000 align:start position:0%
lookup provider this allows the code in
 

00:24:05.000 --> 00:24:07.930 align:start position:0%
lookup provider this allows the code in
Java<00:24:05.270><c> desktop</c><00:24:05.510><c> that</c><00:24:06.230><c> returns</c><00:24:07.130><c> print</c><00:24:07.430><c> services</c>

00:24:07.930 --> 00:24:07.940 align:start position:0%
Java desktop that returns print services
 

00:24:07.940 --> 00:24:10.990 align:start position:0%
Java desktop that returns print services
to<00:24:08.630><c> be</c><00:24:08.750><c> assured</c><00:24:09.080><c> that</c><00:24:09.140><c> it</c><00:24:09.590><c> can</c><00:24:09.740><c> always</c><00:24:10.000><c> return</c>

00:24:10.990 --> 00:24:11.000 align:start position:0%
to be assured that it can always return
 

00:24:11.000 --> 00:24:13.000 align:start position:0%
to be assured that it can always return
at<00:24:11.330><c> least</c><00:24:11.390><c> some</c><00:24:11.960><c> instance</c><00:24:12.350><c> of</c><00:24:12.560><c> a</c><00:24:12.650><c> default</c>

00:24:13.000 --> 00:24:13.010 align:start position:0%
at least some instance of a default
 

00:24:13.010 --> 00:24:15.430 align:start position:0%
at least some instance of a default
provider<00:24:13.430><c> class</c><00:24:13.700><c> some</c><00:24:14.270><c> print</c><00:24:14.510><c> print</c><00:24:15.200><c> service</c>

00:24:15.430 --> 00:24:15.440 align:start position:0%
provider class some print print service
 

00:24:15.440 --> 00:24:19.510 align:start position:0%
provider class some print print service
lookup<00:24:15.680><c> provider</c><00:24:17.290><c> ultimately</c><00:24:18.290><c> you</c><00:24:19.040><c> can</c><00:24:19.250><c> see</c>

00:24:19.510 --> 00:24:19.520 align:start position:0%
lookup provider ultimately you can see
 

00:24:19.520 --> 00:24:21.870 align:start position:0%
lookup provider ultimately you can see
that<00:24:19.850><c> a</c><00:24:19.880><c> single</c><00:24:20.480><c> module</c><00:24:20.630><c> like</c><00:24:21.380><c> Java</c><00:24:21.650><c> desktop</c>

00:24:21.870 --> 00:24:21.880 align:start position:0%
that a single module like Java desktop
 

00:24:21.880 --> 00:24:25.720 align:start position:0%
that a single module like Java desktop
may<00:24:22.880><c> contain</c><00:24:23.300><c> the</c><00:24:23.450><c> service</c><00:24:23.840><c> type</c><00:24:24.050><c> and</c><00:24:24.730><c> the</c>

00:24:25.720 --> 00:24:25.730 align:start position:0%
may contain the service type and the
 

00:24:25.730 --> 00:24:27.640 align:start position:0%
may contain the service type and the
user's<00:24:26.210><c> directive</c><00:24:26.780><c> to</c><00:24:27.050><c> help</c><00:24:27.260><c> the</c><00:24:27.440><c> code</c>

00:24:27.640 --> 00:24:27.650 align:start position:0%
user's directive to help the code
 

00:24:27.650 --> 00:24:30.310 align:start position:0%
user's directive to help the code
employing<00:24:28.100><c> service</c><00:24:28.550><c> loader</c><00:24:28.760><c> and</c><00:24:29.320><c> provides</c>

00:24:30.310 --> 00:24:30.320 align:start position:0%
employing service loader and provides
 

00:24:30.320 --> 00:24:32.980 align:start position:0%
employing service loader and provides
directives<00:24:31.010><c> to</c><00:24:31.280><c> specify</c><00:24:32.150><c> one</c><00:24:32.810><c> or</c><00:24:32.840><c> more</c>

00:24:32.980 --> 00:24:32.990 align:start position:0%
directives to specify one or more
 

00:24:32.990 --> 00:24:40.510 align:start position:0%
directives to specify one or more
provider<00:24:33.470><c> classes</c><00:24:37.360><c> so</c><00:24:38.650><c> that's</c><00:24:39.650><c> what</c><00:24:39.920><c> services</c>

00:24:40.510 --> 00:24:40.520 align:start position:0%
provider classes so that's what services
 

00:24:40.520 --> 00:24:43.990 align:start position:0%
provider classes so that's what services
are<00:24:41.470><c> service</c><00:24:42.470><c> relationships</c><00:24:43.160><c> uses</c><00:24:43.850><c> and</c>

00:24:43.990 --> 00:24:44.000 align:start position:0%
are service relationships uses and
 

00:24:44.000 --> 00:24:46.390 align:start position:0%
are service relationships uses and
provides<00:24:44.360><c> our</c><00:24:44.660><c> a</c><00:24:44.690><c> first-class</c><00:24:45.380><c> thing</c><00:24:45.950><c> in</c><00:24:46.220><c> the</c>

00:24:46.390 --> 00:24:46.400 align:start position:0%
provides our a first-class thing in the
 

00:24:46.400 --> 00:24:49.390 align:start position:0%
provides our a first-class thing in the
module<00:24:46.730><c> system</c><00:24:48.010><c> programming</c><00:24:49.010><c> against</c>

00:24:49.390 --> 00:24:49.400 align:start position:0%
module system programming against
 

00:24:49.400 --> 00:24:52.350 align:start position:0%
module system programming against
service<00:24:49.820><c> types</c><00:24:50.060><c> being</c><00:24:50.540><c> a</c><00:24:50.660><c> consumer</c><00:24:51.110><c> module</c>

00:24:52.350 --> 00:24:52.360 align:start position:0%
service types being a consumer module
 

00:24:52.360 --> 00:24:56.380 align:start position:0%
service types being a consumer module
allows<00:24:53.800><c> the</c><00:24:54.800><c> provider</c><00:24:55.070><c> modules</c><00:24:55.850><c> and</c><00:24:56.300><c> the</c>

00:24:56.380 --> 00:24:56.390 align:start position:0%
allows the provider modules and the
 

00:24:56.390 --> 00:24:58.150 align:start position:0%
allows the provider modules and the
provider<00:24:56.690><c> classes</c><00:24:57.230><c> to</c><00:24:57.710><c> be</c><00:24:57.830><c> strongly</c>

00:24:58.150 --> 00:24:58.160 align:start position:0%
provider classes to be strongly
 

00:24:58.160 --> 00:25:03.580 align:start position:0%
provider classes to be strongly
encapsulated<00:24:59.060><c> and</c><00:25:00.010><c> many</c><00:25:01.010><c> JDK</c><00:25:01.550><c> frameworks</c><00:25:02.590><c> use</c>

00:25:03.580 --> 00:25:03.590 align:start position:0%
encapsulated and many JDK frameworks use
 

00:25:03.590 --> 00:25:05.530 align:start position:0%
encapsulated and many JDK frameworks use
services<00:25:04.190><c> I</c><00:25:04.310><c> shouldn't</c><00:25:04.550><c> say</c><00:25:04.640><c> use</c><00:25:04.880><c> cause</c><00:25:05.210><c> uses</c>

00:25:05.530 --> 00:25:05.540 align:start position:0%
services I shouldn't say use cause uses
 

00:25:05.540 --> 00:25:08.260 align:start position:0%
services I shouldn't say use cause uses
ism<00:25:05.810><c> keyword</c><00:25:06.290><c> build</c><00:25:06.680><c> on</c><00:25:06.890><c> services</c><00:25:07.520><c> rely</c><00:25:08.240><c> on</c>

00:25:08.260 --> 00:25:08.270 align:start position:0%
ism keyword build on services rely on
 

00:25:08.270 --> 00:25:15.810 align:start position:0%
ism keyword build on services rely on
services<00:25:08.900><c> and</c><00:25:09.050><c> are</c><00:25:09.380><c> customized</c><00:25:10.010><c> with</c><00:25:10.850><c> them</c>

00:25:15.810 --> 00:25:15.820 align:start position:0%
 
 

00:25:15.820 --> 00:25:22.510 align:start position:0%
 
so<00:25:16.820><c> moving</c><00:25:17.510><c> on</c><00:25:18.460><c> how</c><00:25:19.460><c> to</c><00:25:19.520><c> use</c><00:25:19.790><c> services</c><00:25:21.460><c> for</c><00:25:22.460><c> a</c>

00:25:22.510 --> 00:25:22.520 align:start position:0%
so moving on how to use services for a
 

00:25:22.520 --> 00:25:27.850 align:start position:0%
so moving on how to use services for a
particular<00:25:23.110><c> use</c><00:25:24.110><c> case</c>

00:25:27.850 --> 00:25:27.860 align:start position:0%
 
 

00:25:27.860 --> 00:25:31.610 align:start position:0%
 
it<00:25:28.860><c> should</c><00:25:29.130><c> be</c><00:25:29.280><c> obvious</c><00:25:29.760><c> that</c><00:25:30.200><c> services</c><00:25:31.200><c> let</c>

00:25:31.610 --> 00:25:31.620 align:start position:0%
it should be obvious that services let
 

00:25:31.620 --> 00:25:35.060 align:start position:0%
it should be obvious that services let
you<00:25:31.860><c> plug</c><00:25:32.250><c> in</c><00:25:32.570><c> implementations</c><00:25:33.710><c> that</c><00:25:34.710><c> weren't</c>

00:25:35.060 --> 00:25:35.070 align:start position:0%
you plug in implementations that weren't
 

00:25:35.070 --> 00:25:37.040 align:start position:0%
you plug in implementations that weren't
known<00:25:35.520><c> to</c><00:25:35.760><c> your</c><00:25:35.940><c> program</c><00:25:36.450><c> at</c><00:25:36.660><c> compile</c><00:25:37.020><c> time</c>

00:25:37.040 --> 00:25:37.050 align:start position:0%
known to your program at compile time
 

00:25:37.050 --> 00:25:39.140 align:start position:0%
known to your program at compile time
they<00:25:37.650><c> are</c><00:25:37.770><c> discovered</c><00:25:38.280><c> dynamically</c><00:25:38.940><c> via</c>

00:25:39.140 --> 00:25:39.150 align:start position:0%
they are discovered dynamically via
 

00:25:39.150 --> 00:25:42.320 align:start position:0%
they are discovered dynamically via
service<00:25:39.600><c> loader</c><00:25:40.430><c> for</c><00:25:41.430><c> examples</c><00:25:42.060><c> that</c><00:25:42.270><c> show</c>

00:25:42.320 --> 00:25:42.330 align:start position:0%
service loader for examples that show
 

00:25:42.330 --> 00:25:45.140 align:start position:0%
service loader for examples that show
this<00:25:42.750><c> I</c><00:25:43.020><c> recommend</c><00:25:43.770><c> the</c><00:25:44.190><c> Java</c><00:25:44.430><c> 9</c><00:25:44.700><c> modularity</c>

00:25:45.140 --> 00:25:45.150 align:start position:0%
this I recommend the Java 9 modularity
 

00:25:45.150 --> 00:25:50.420 align:start position:0%
this I recommend the Java 9 modularity
book<00:25:45.600><c> that's</c><00:25:46.140><c> out</c><00:25:46.290><c> this</c><00:25:46.530><c> week</c><00:25:48.890><c> it's</c><00:25:49.890><c> not</c><00:25:50.190><c> so</c>

00:25:50.420 --> 00:25:50.430 align:start position:0%
book that's out this week it's not so
 

00:25:50.430 --> 00:25:53.870 align:start position:0%
book that's out this week it's not so
obvious<00:25:50.970><c> that</c><00:25:51.890><c> services</c><00:25:52.890><c> are</c><00:25:53.100><c> actually</c><00:25:53.430><c> the</c>

00:25:53.870 --> 00:25:53.880 align:start position:0%
obvious that services are actually the
 

00:25:53.880 --> 00:25:55.820 align:start position:0%
obvious that services are actually the
key<00:25:54.120><c> to</c><00:25:54.450><c> encoding</c><00:25:55.200><c> a</c><00:25:55.320><c> number</c><00:25:55.680><c> of</c>

00:25:55.820 --> 00:25:55.830 align:start position:0%
key to encoding a number of
 

00:25:55.830 --> 00:25:57.650 align:start position:0%
key to encoding a number of
sophisticated<00:25:56.550><c> relationships</c><00:25:57.360><c> between</c>

00:25:57.650 --> 00:25:57.660 align:start position:0%
sophisticated relationships between
 

00:25:57.660 --> 00:26:00.920 align:start position:0%
sophisticated relationships between
modules<00:25:58.310><c> that</c><00:25:59.310><c> might</c><00:25:59.520><c> otherwise</c><00:25:59.750><c> appear</c><00:26:00.750><c> to</c>

00:26:00.920 --> 00:26:00.930 align:start position:0%
modules that might otherwise appear to
 

00:26:00.930 --> 00:26:03.320 align:start position:0%
modules that might otherwise appear to
be<00:26:01.050><c> unsupported</c><00:26:01.800><c> by</c><00:26:01.950><c> the</c><00:26:02.010><c> module</c><00:26:02.370><c> system</c><00:26:02.580><c> in</c>

00:26:03.320 --> 00:26:03.330 align:start position:0%
be unsupported by the module system in
 

00:26:03.330 --> 00:26:05.180 align:start position:0%
be unsupported by the module system in
particular<00:26:03.630><c> I'm</c><00:26:04.200><c> going</c><00:26:04.350><c> to</c><00:26:04.560><c> talk</c><00:26:04.650><c> about</c><00:26:04.770><c> how</c>

00:26:05.180 --> 00:26:05.190 align:start position:0%
particular I'm going to talk about how
 

00:26:05.190 --> 00:26:07.780 align:start position:0%
particular I'm going to talk about how
optional<00:26:05.970><c> module</c><00:26:06.300><c> dependencies</c><00:26:06.990><c> are</c><00:26:07.200><c> neatly</c>

00:26:07.780 --> 00:26:07.790 align:start position:0%
optional module dependencies are neatly
 

00:26:07.790 --> 00:26:14.620 align:start position:0%
optional module dependencies are neatly
encoded<00:26:08.790><c> with</c><00:26:09.450><c> services</c><00:26:11.720><c> as</c><00:26:13.160><c> an</c><00:26:14.160><c> example</c>

00:26:14.620 --> 00:26:14.630 align:start position:0%
encoded with services as an example
 

00:26:14.630 --> 00:26:18.230 align:start position:0%
encoded with services as an example
consider<00:26:15.630><c> the</c><00:26:16.080><c> Java</c><00:26:16.680><c> scripting</c><00:26:17.100><c> module</c><00:26:17.490><c> in</c>

00:26:18.230 --> 00:26:18.240 align:start position:0%
consider the Java scripting module in
 

00:26:18.240 --> 00:26:23.570 align:start position:0%
consider the Java scripting module in
the<00:26:18.480><c> JDK</c><00:26:19.730><c> it</c><00:26:20.730><c> offers</c><00:26:21.330><c> an</c><00:26:21.630><c> API</c><00:26:22.380><c> to</c><00:26:22.580><c> evaluate</c>

00:26:23.570 --> 00:26:23.580 align:start position:0%
the JDK it offers an API to evaluate
 

00:26:23.580 --> 00:26:26.660 align:start position:0%
the JDK it offers an API to evaluate
snippets<00:26:24.420><c> of</c><00:26:24.540><c> code</c><00:26:24.780><c> the</c><00:26:25.590><c> details</c><00:26:26.010><c> of</c><00:26:26.250><c> that</c><00:26:26.340><c> API</c>

00:26:26.660 --> 00:26:26.670 align:start position:0%
snippets of code the details of that API
 

00:26:26.670 --> 00:26:30.220 align:start position:0%
snippets of code the details of that API
don't<00:26:27.360><c> matter</c><00:26:27.600><c> there</c><00:26:27.900><c> is</c><00:26:27.930><c> some</c><00:26:28.910><c> some</c><00:26:29.910><c> class</c>

00:26:30.220 --> 00:26:30.230 align:start position:0%
don't matter there is some some class
 

00:26:30.230 --> 00:26:33.650 align:start position:0%
don't matter there is some some class
eval<00:26:31.230><c> that</c><00:26:31.260><c> evaluates</c><00:26:31.860><c> snippets</c><00:26:32.220><c> of</c><00:26:32.310><c> code</c><00:26:32.660><c> now</c>

00:26:33.650 --> 00:26:33.660 align:start position:0%
eval that evaluates snippets of code now
 

00:26:33.660 --> 00:26:35.690 align:start position:0%
eval that evaluates snippets of code now
at<00:26:33.810><c> runtime</c><00:26:34.130><c> there</c><00:26:35.130><c> might</c><00:26:35.280><c> be</c><00:26:35.310><c> many</c>

00:26:35.690 --> 00:26:35.700 align:start position:0%
at runtime there might be many
 

00:26:35.700 --> 00:26:38.390 align:start position:0%
at runtime there might be many
implementations<00:26:36.360><c> of</c><00:26:37.260><c> scripting</c><00:26:37.890><c> languages</c>

00:26:38.390 --> 00:26:38.400 align:start position:0%
implementations of scripting languages
 

00:26:38.400 --> 00:26:41.660 align:start position:0%
implementations of scripting languages
capable<00:26:39.150><c> of</c><00:26:39.390><c> evaluating</c><00:26:40.170><c> snippets</c><00:26:40.620><c> such</c><00:26:41.430><c> as</c>

00:26:41.660 --> 00:26:41.670 align:start position:0%
capable of evaluating snippets such as
 

00:26:41.670 --> 00:26:44.270 align:start position:0%
capable of evaluating snippets such as
NASA<00:26:42.330><c> horn</c><00:26:42.540><c> that's</c><00:26:42.990><c> Oracle's</c><00:26:43.680><c> implementation</c>

00:26:44.270 --> 00:26:44.280 align:start position:0%
NASA horn that's Oracle's implementation
 

00:26:44.280 --> 00:26:49.940 align:start position:0%
NASA horn that's Oracle's implementation
of<00:26:44.370><c> JavaScript</c><00:26:44.910><c> or</c><00:26:45.290><c> groovy</c><00:26:46.290><c> or</c><00:26:46.470><c> JRuby</c><00:26:47.190><c> etc</c><00:26:48.950><c> how</c>

00:26:49.940 --> 00:26:49.950 align:start position:0%
of JavaScript or groovy or JRuby etc how
 

00:26:49.950 --> 00:26:52.310 align:start position:0%
of JavaScript or groovy or JRuby etc how
is<00:26:50.160><c> the</c><00:26:50.370><c> Java</c><00:26:50.700><c> scripting</c><00:26:51.270><c> module</c><00:26:51.630><c> meant</c><00:26:52.050><c> to</c>

00:26:52.310 --> 00:26:52.320 align:start position:0%
is the Java scripting module meant to
 

00:26:52.320 --> 00:26:56.990 align:start position:0%
is the Java scripting module meant to
depend<00:26:53.010><c> on</c><00:26:53.160><c> them</c><00:26:53.510><c> it</c><00:26:54.510><c> seems</c><00:26:55.140><c> like</c><00:26:55.680><c> it</c><00:26:56.520><c> seems</c>

00:26:56.990 --> 00:26:57.000 align:start position:0%
depend on them it seems like it seems
 

00:26:57.000 --> 00:26:59.510 align:start position:0%
depend on them it seems like it seems
like<00:26:57.360><c> we</c><00:26:57.630><c> need</c><00:26:57.870><c> a</c><00:26:57.930><c> way</c><00:26:58.230><c> to</c><00:26:58.260><c> say</c><00:26:58.710><c> in</c><00:26:59.040><c> the</c><00:26:59.220><c> module</c>

00:26:59.510 --> 00:26:59.520 align:start position:0%
like we need a way to say in the module
 

00:26:59.520 --> 00:27:02.810 align:start position:0%
like we need a way to say in the module
declaration<00:27:00.240><c> for</c><00:27:00.630><c> Java</c><00:27:00.810><c> scripting</c><00:27:01.820><c> requires</c>

00:27:02.810 --> 00:27:02.820 align:start position:0%
declaration for Java scripting requires
 

00:27:02.820 --> 00:27:06.230 align:start position:0%
declaration for Java scripting requires
optional<00:27:03.600><c> module</c><00:27:04.530><c> name</c><00:27:04.850><c> so</c><00:27:05.850><c> that</c><00:27:05.880><c> Java</c>

00:27:06.230 --> 00:27:06.240 align:start position:0%
optional module name so that Java
 

00:27:06.240 --> 00:27:09.050 align:start position:0%
optional module name so that Java
scripting<00:27:06.780><c> would</c><00:27:07.530><c> read</c><00:27:07.830><c> whichever</c><00:27:08.640><c> modules</c>

00:27:09.050 --> 00:27:09.060 align:start position:0%
scripting would read whichever modules
 

00:27:09.060 --> 00:27:10.910 align:start position:0%
scripting would read whichever modules
are<00:27:09.270><c> available</c><00:27:09.750><c> and</c><00:27:10.080><c> if</c><00:27:10.200><c> none</c><00:27:10.410><c> are</c><00:27:10.530><c> available</c>

00:27:10.910 --> 00:27:10.920 align:start position:0%
are available and if none are available
 

00:27:10.920 --> 00:27:12.080 align:start position:0%
are available and if none are available
that<00:27:11.010><c> would</c><00:27:11.160><c> be</c><00:27:11.280><c> okay</c><00:27:11.520><c> the</c><00:27:11.700><c> module</c><00:27:11.940><c> system</c>

00:27:12.080 --> 00:27:12.090 align:start position:0%
that would be okay the module system
 

00:27:12.090 --> 00:27:13.820 align:start position:0%
that would be okay the module system
would<00:27:12.360><c> still</c><00:27:12.570><c> start</c><00:27:12.780><c> even</c><00:27:13.290><c> though</c><00:27:13.410><c> some</c><00:27:13.710><c> of</c>

00:27:13.820 --> 00:27:13.830 align:start position:0%
would still start even though some of
 

00:27:13.830 --> 00:27:17.350 align:start position:0%
would still start even though some of
the<00:27:13.890><c> required</c><00:27:14.280><c> things</c><00:27:14.550><c> might</c><00:27:14.790><c> not</c><00:27:14.820><c> be</c><00:27:14.970><c> present</c>

00:27:17.350 --> 00:27:17.360 align:start position:0%
the required things might not be present
 

00:27:17.360 --> 00:27:20.890 align:start position:0%
the required things might not be present
the<00:27:18.360><c> trouble</c><00:27:18.810><c> with</c><00:27:18.960><c> requires</c><00:27:19.650><c> optional</c><00:27:20.430><c> is</c>

00:27:20.890 --> 00:27:20.900 align:start position:0%
the trouble with requires optional is
 

00:27:20.900 --> 00:27:24.950 align:start position:0%
the trouble with requires optional is
that<00:27:21.900><c> it</c><00:27:21.990><c> would</c><00:27:22.140><c> only</c><00:27:22.320><c> make</c><00:27:22.590><c> sense</c><00:27:23.810><c> when</c><00:27:24.810><c> the</c>

00:27:24.950 --> 00:27:24.960 align:start position:0%
that it would only make sense when the
 

00:27:24.960 --> 00:27:28.580 align:start position:0%
that it would only make sense when the
Java<00:27:25.400><c> when</c><00:27:26.400><c> the</c><00:27:26.490><c> Java</c><00:27:26.730><c> scripting</c><00:27:27.180><c> module</c><00:27:27.590><c> has</c>

00:27:28.580 --> 00:27:28.590 align:start position:0%
Java when the Java scripting module has
 

00:27:28.590 --> 00:27:31.610 align:start position:0%
Java when the Java scripting module has
already<00:27:28.950><c> been</c><00:27:29.160><c> built</c><00:27:29.750><c> but</c><00:27:30.750><c> suppose</c><00:27:31.110><c> you're</c><00:27:31.350><c> at</c>

00:27:31.610 --> 00:27:31.620 align:start position:0%
already been built but suppose you're at
 

00:27:31.620 --> 00:27:32.590 align:start position:0%
already been built but suppose you're at
compile<00:27:32.100><c> time</c>

00:27:32.590 --> 00:27:32.600 align:start position:0%
compile time
 

00:27:32.600 --> 00:27:36.080 align:start position:0%
compile time
what<00:27:33.600><c> if</c><00:27:33.750><c> source</c><00:27:34.130><c> in</c><00:27:35.130><c> the</c><00:27:35.400><c> Java</c><00:27:35.640><c> scripting</c>

00:27:36.080 --> 00:27:36.090 align:start position:0%
what if source in the Java scripting
 

00:27:36.090 --> 00:27:39.230 align:start position:0%
what if source in the Java scripting
module<00:27:36.450><c> refers</c><00:27:37.320><c> to</c><00:27:37.350><c> a</c><00:27:37.620><c> class</c><00:27:38.070><c> in</c><00:27:38.400><c> one</c><00:27:38.790><c> of</c><00:27:38.940><c> the</c>

00:27:39.230 --> 00:27:39.240 align:start position:0%
module refers to a class in one of the
 

00:27:39.240 --> 00:27:41.840 align:start position:0%
module refers to a class in one of the
optional<00:27:39.630><c> modules</c><00:27:40.050><c> either</c><00:27:40.920><c> JDK</c><00:27:41.340><c> scripting</c><00:27:41.730><c> a</c>

00:27:41.840 --> 00:27:41.850 align:start position:0%
optional modules either JDK scripting a
 

00:27:41.850 --> 00:27:43.940 align:start position:0%
optional modules either JDK scripting a
Sehorne<00:27:42.150><c> or</c><00:27:42.360><c> groovy</c><00:27:42.720><c> script</c><00:27:42.960><c> engine</c><00:27:43.140><c> and</c><00:27:43.500><c> that</c>

00:27:43.940 --> 00:27:43.950 align:start position:0%
Sehorne or groovy script engine and that
 

00:27:43.950 --> 00:27:46.820 align:start position:0%
Sehorne or groovy script engine and that
optional<00:27:44.400><c> module</c><00:27:44.730><c> isn't</c><00:27:45.540><c> present</c><00:27:46.020><c> at</c><00:27:46.230><c> compile</c>

00:27:46.820 --> 00:27:46.830 align:start position:0%
optional module isn't present at compile
 

00:27:46.830 --> 00:27:50.390 align:start position:0%
optional module isn't present at compile
time<00:27:47.720><c> it's</c><00:27:48.720><c> not</c><00:27:48.990><c> acceptable</c><00:27:49.710><c> for</c><00:27:49.860><c> a</c><00:27:50.130><c> Java</c>

00:27:50.390 --> 00:27:50.400 align:start position:0%
time it's not acceptable for a Java
 

00:27:50.400 --> 00:27:53.840 align:start position:0%
time it's not acceptable for a Java
compiler<00:27:50.880><c> to</c><00:27:51.270><c> proceed</c><00:27:51.870><c> when</c><00:27:52.559><c> it</c><00:27:52.679><c> can't</c><00:27:53.010><c> find</c>

00:27:53.840 --> 00:27:53.850 align:start position:0%
compiler to proceed when it can't find
 

00:27:53.850 --> 00:27:58.040 align:start position:0%
compiler to proceed when it can't find
classes<00:27:54.660><c> referenced</c><00:27:55.590><c> in</c><00:27:55.710><c> source</c><00:27:55.950><c> code</c><00:27:56.929><c> nor</c><00:27:57.929><c> do</c>

00:27:58.040 --> 00:27:58.050 align:start position:0%
classes referenced in source code nor do
 

00:27:58.050 --> 00:28:00.410 align:start position:0%
classes referenced in source code nor do
we<00:27:58.080><c> want</c><00:27:58.200><c> to</c><00:27:58.679><c> relax</c><00:27:59.040><c> the</c><00:27:59.370><c> java</c><00:27:59.610><c> language</c><00:27:59.850><c> with</c>

00:28:00.410 --> 00:28:00.420 align:start position:0%
we want to relax the java language with
 

00:28:00.420 --> 00:28:02.360 align:start position:0%
we want to relax the java language with
some<00:28:00.660><c> form</c><00:28:00.990><c> of</c><00:28:01.110><c> loose</c><00:28:01.320><c> dynamic</c><00:28:01.800><c> typing</c><00:28:02.190><c> that</c>

00:28:02.360 --> 00:28:02.370 align:start position:0%
some form of loose dynamic typing that
 

00:28:02.370 --> 00:28:03.890 align:start position:0%
some form of loose dynamic typing that
says<00:28:02.550><c> well</c><00:28:02.760><c> I</c><00:28:02.790><c> see</c><00:28:03.000><c> there's</c><00:28:03.179><c> a</c><00:28:03.240><c> reference</c><00:28:03.630><c> to</c>

00:28:03.890 --> 00:28:03.900 align:start position:0%
says well I see there's a reference to
 

00:28:03.900 --> 00:28:06.590 align:start position:0%
says well I see there's a reference to
some<00:28:04.080><c> type</c><00:28:04.460><c> from</c><00:28:05.460><c> an</c><00:28:05.580><c> optional</c><00:28:05.910><c> module</c><00:28:06.059><c> and</c>

00:28:06.590 --> 00:28:06.600 align:start position:0%
some type from an optional module and
 

00:28:06.600 --> 00:28:08.060 align:start position:0%
some type from an optional module and
it's<00:28:06.929><c> not</c><00:28:07.080><c> here</c><00:28:07.230><c> at</c><00:28:07.320><c> compile</c><00:28:07.620><c> time</c><00:28:07.650><c> but</c><00:28:07.980><c> it</c>

00:28:08.060 --> 00:28:08.070 align:start position:0%
it's not here at compile time but it
 

00:28:08.070 --> 00:28:09.350 align:start position:0%
it's not here at compile time but it
might<00:28:08.190><c> be</c><00:28:08.280><c> here</c><00:28:08.460><c> at</c><00:28:08.520><c> runtime</c><00:28:08.670><c> so</c><00:28:08.880><c> I'll</c><00:28:09.120><c> just</c>

00:28:09.350 --> 00:28:09.360 align:start position:0%
might be here at runtime so I'll just
 

00:28:09.360 --> 00:28:10.880 align:start position:0%
might be here at runtime so I'll just
compile<00:28:09.660><c> it</c><00:28:09.840><c> and</c><00:28:10.020><c> hope</c><00:28:10.170><c> that</c><00:28:10.200><c> the</c><00:28:10.470><c> types</c><00:28:10.710><c> will</c>

00:28:10.880 --> 00:28:10.890 align:start position:0%
compile it and hope that the types will
 

00:28:10.890 --> 00:28:14.410 align:start position:0%
compile it and hope that the types will
work<00:28:11.070><c> out</c><00:28:11.309><c> that's</c><00:28:12.300><c> not</c><00:28:12.360><c> really</c><00:28:12.840><c> the</c><00:28:12.990><c> java</c><00:28:13.230><c> way</c>

00:28:14.410 --> 00:28:14.420 align:start position:0%
work out that's not really the java way
 

00:28:14.420 --> 00:28:18.470 align:start position:0%
work out that's not really the java way
now<00:28:15.530><c> you</c><00:28:16.530><c> can</c><00:28:16.710><c> get</c><00:28:16.890><c> a</c><00:28:16.920><c> bit</c><00:28:17.190><c> further</c><00:28:17.400><c> if</c><00:28:17.850><c> you</c>

00:28:18.470 --> 00:28:18.480 align:start position:0%
now you can get a bit further if you
 

00:28:18.480 --> 00:28:20.900 align:start position:0%
now you can get a bit further if you
would<00:28:18.900><c> in</c><00:28:19.110><c> your</c><00:28:19.500><c> source</c><00:28:19.890><c> code</c><00:28:20.100><c> never</c><00:28:20.490><c> refer</c>

00:28:20.900 --> 00:28:20.910 align:start position:0%
would in your source code never refer
 

00:28:20.910 --> 00:28:23.299 align:start position:0%
would in your source code never refer
directly<00:28:21.120><c> to</c><00:28:21.480><c> class</c><00:28:21.840><c> names</c><00:28:22.190><c> from</c><00:28:23.190><c> the</c>

00:28:23.299 --> 00:28:23.309 align:start position:0%
directly to class names from the
 

00:28:23.309 --> 00:28:25.730 align:start position:0%
directly to class names from the
optional<00:28:23.700><c> modules</c><00:28:24.030><c> and</c><00:28:24.390><c> instead</c><00:28:25.050><c> access</c><00:28:25.500><c> them</c>

00:28:25.730 --> 00:28:25.740 align:start position:0%
optional modules and instead access them
 

00:28:25.740 --> 00:28:28.850 align:start position:0%
optional modules and instead access them
via<00:28:25.950><c> reflection</c><00:28:26.929><c> but</c><00:28:27.929><c> that's</c><00:28:28.110><c> a</c><00:28:28.230><c> very</c><00:28:28.559><c> painful</c>

00:28:28.850 --> 00:28:28.860 align:start position:0%
via reflection but that's a very painful
 

00:28:28.860 --> 00:28:31.669 align:start position:0%
via reflection but that's a very painful
programming<00:28:29.670><c> style</c><00:28:29.970><c> it's</c><00:28:30.809><c> how</c><00:28:31.020><c> you</c><00:28:31.080><c> had</c><00:28:31.500><c> to</c>

00:28:31.669 --> 00:28:31.679 align:start position:0%
programming style it's how you had to
 

00:28:31.679 --> 00:28:34.730 align:start position:0%
programming style it's how you had to
code<00:28:31.920><c> on</c><00:28:32.700><c> the</c><00:28:32.880><c> Java</c><00:28:33.120><c> ME</c><00:28:33.360><c> platform</c><00:28:34.110><c> when</c>

00:28:34.730 --> 00:28:34.740 align:start position:0%
code on the Java ME platform when
 

00:28:34.740 --> 00:28:37.100 align:start position:0%
code on the Java ME platform when
different<00:28:35.370><c> devices</c><00:28:35.750><c> implemented</c><00:28:36.750><c> different</c>

00:28:37.100 --> 00:28:37.110 align:start position:0%
different devices implemented different
 

00:28:37.110 --> 00:28:39.290 align:start position:0%
different devices implemented different
API<00:28:37.440><c> s</c><00:28:37.590><c> and</c><00:28:37.890><c> you</c><00:28:37.950><c> had</c><00:28:38.100><c> to</c><00:28:38.300><c> dynamically</c>

00:28:39.290 --> 00:28:39.300 align:start position:0%
API s and you had to dynamically
 

00:28:39.300 --> 00:28:41.120 align:start position:0%
API s and you had to dynamically
discover<00:28:39.690><c> what</c><00:28:39.900><c> was</c><00:28:40.020><c> there</c><00:28:40.260><c> and</c><00:28:40.290><c> code</c><00:28:40.950><c> it</c>

00:28:41.120 --> 00:28:41.130 align:start position:0%
discover what was there and code it
 

00:28:41.130 --> 00:28:43.490 align:start position:0%
discover what was there and code it
through<00:28:41.490><c> the</c><00:28:41.580><c> reflection</c><00:28:41.790><c> API</c><00:28:42.690><c> it</c><00:28:43.290><c> just</c>

00:28:43.490 --> 00:28:43.500 align:start position:0%
through the reflection API it just
 

00:28:43.500 --> 00:28:48.650 align:start position:0%
through the reflection API it just
doesn't<00:28:43.890><c> scale</c><00:28:46.970><c> this</c><00:28:47.970><c> is</c><00:28:48.150><c> a</c><00:28:48.179><c> slide</c><00:28:48.450><c> you</c><00:28:48.600><c> will</c>

00:28:48.650 --> 00:28:48.660 align:start position:0%
doesn't scale this is a slide you will
 

00:28:48.660 --> 00:28:52.850 align:start position:0%
doesn't scale this is a slide you will
want<00:28:48.840><c> to</c><00:28:48.870><c> take</c><00:28:49.020><c> a</c><00:28:49.080><c> picture</c><00:28:49.230><c> of</c><00:28:51.230><c> the</c><00:28:52.230><c> proper</c><00:28:52.679><c> way</c>

00:28:52.850 --> 00:28:52.860 align:start position:0%
want to take a picture of the proper way
 

00:28:52.860 --> 00:28:57.620 align:start position:0%
want to take a picture of the proper way
to<00:28:53.190><c> program</c><00:28:54.679><c> against</c><00:28:55.679><c> zero</c><00:28:56.190><c> one</c><00:28:56.850><c> or</c><00:28:57.150><c> many</c>

00:28:57.620 --> 00:28:57.630 align:start position:0%
to program against zero one or many
 

00:28:57.630 --> 00:29:02.210 align:start position:0%
to program against zero one or many
modules<00:28:57.870><c> is</c><00:28:58.530><c> with</c><00:28:59.400><c> services</c><00:29:01.220><c> services</c>

00:29:02.210 --> 00:29:02.220 align:start position:0%
modules is with services services
 

00:29:02.220 --> 00:29:04.880 align:start position:0%
modules is with services services
introduce<00:29:02.790><c> a</c><00:29:02.940><c> level</c><00:29:03.090><c> of</c><00:29:03.390><c> indirection</c><00:29:03.960><c> by</c>

00:29:04.880 --> 00:29:04.890 align:start position:0%
introduce a level of indirection by
 

00:29:04.890 --> 00:29:07.940 align:start position:0%
introduce a level of indirection by
means<00:29:05.190><c> of</c><00:29:05.429><c> the</c><00:29:05.580><c> service</c><00:29:05.910><c> type</c><00:29:06.650><c> you</c><00:29:07.650><c> can</c>

00:29:07.940 --> 00:29:07.950 align:start position:0%
means of the service type you can
 

00:29:07.950 --> 00:29:11.660 align:start position:0%
means of the service type you can
mechanically<00:29:08.880><c> translate</c><00:29:09.809><c> an</c><00:29:10.670><c> optional</c>

00:29:11.660 --> 00:29:11.670 align:start position:0%
mechanically translate an optional
 

00:29:11.670 --> 00:29:15.440 align:start position:0%
mechanically translate an optional
module<00:29:11.870><c> dependency</c><00:29:12.870><c> at</c><00:29:13.530><c> the</c><00:29:13.710><c> top</c><00:29:13.920><c> I</c><00:29:14.450><c> should</c>

00:29:15.440 --> 00:29:15.450 align:start position:0%
module dependency at the top I should
 

00:29:15.450 --> 00:29:17.270 align:start position:0%
module dependency at the top I should
say<00:29:15.570><c> sort</c><00:29:15.780><c> of</c><00:29:15.809><c> a</c><00:29:15.929><c> hypothetical</c><00:29:16.350><c> optional</c>

00:29:17.270 --> 00:29:17.280 align:start position:0%
say sort of a hypothetical optional
 

00:29:17.280 --> 00:29:19.280 align:start position:0%
say sort of a hypothetical optional
dependency<00:29:17.880><c> you</c><00:29:18.600><c> can't</c><00:29:18.809><c> write</c><00:29:18.960><c> requires</c>

00:29:19.280 --> 00:29:19.290 align:start position:0%
dependency you can't write requires
 

00:29:19.290 --> 00:29:22.060 align:start position:0%
dependency you can't write requires
optional<00:29:19.710><c> right</c><00:29:19.860><c> it's</c><00:29:20.040><c> a</c><00:29:20.070><c> hypothetical</c><00:29:20.370><c> thing</c>

00:29:22.060 --> 00:29:22.070 align:start position:0%
optional right it's a hypothetical thing
 

00:29:22.070 --> 00:29:24.320 align:start position:0%
optional right it's a hypothetical thing
but<00:29:23.070><c> if</c><00:29:23.160><c> you</c><00:29:23.190><c> want</c><00:29:23.429><c> to</c><00:29:23.550><c> write</c><00:29:23.700><c> that</c><00:29:23.730><c> you</c><00:29:23.880><c> you</c>

00:29:24.320 --> 00:29:24.330 align:start position:0%
but if you want to write that you you
 

00:29:24.330 --> 00:29:27.530 align:start position:0%
but if you want to write that you you
can<00:29:24.540><c> translate</c><00:29:24.960><c> it</c><00:29:25.170><c> to</c><00:29:25.679><c> a</c><00:29:25.710><c> pair</c><00:29:26.250><c> of</c><00:29:26.540><c> non</c>

00:29:27.530 --> 00:29:27.540 align:start position:0%
can translate it to a pair of non
 

00:29:27.540 --> 00:29:31.490 align:start position:0%
can translate it to a pair of non
optional<00:29:28.730><c> dependencies</c><00:29:29.730><c> on</c><00:29:30.150><c> the</c><00:29:31.140><c> module</c>

00:29:31.490 --> 00:29:31.500 align:start position:0%
optional dependencies on the module
 

00:29:31.500 --> 00:29:37.700 align:start position:0%
optional dependencies on the module
which<00:29:32.190><c> exports</c><00:29:32.880><c> the</c><00:29:33.570><c> service</c><00:29:33.960><c> type</c><00:29:36.590><c> there's</c><00:29:37.590><c> a</c>

00:29:37.700 --> 00:29:37.710 align:start position:0%
which exports the service type there's a
 

00:29:37.710 --> 00:29:40.250 align:start position:0%
which exports the service type there's a
consumer<00:29:38.309><c> module</c><00:29:38.670><c> Java</c><00:29:39.000><c> scripting</c><00:29:39.540><c> which</c><00:29:40.110><c> is</c>

00:29:40.250 --> 00:29:40.260 align:start position:0%
consumer module Java scripting which is
 

00:29:40.260 --> 00:29:42.169 align:start position:0%
consumer module Java scripting which is
going<00:29:40.440><c> to</c><00:29:40.500><c> use</c><00:29:40.800><c> the</c><00:29:41.220><c> service</c><00:29:41.580><c> type</c><00:29:41.790><c> and</c><00:29:42.000><c> their</c>

00:29:42.169 --> 00:29:42.179 align:start position:0%
going to use the service type and their
 

00:29:42.179 --> 00:29:44.710 align:start position:0%
going to use the service type and their
various<00:29:42.690><c> provider</c><00:29:43.140><c> modules</c><00:29:43.710><c> on</c><00:29:43.890><c> the</c><00:29:43.920><c> right</c>

00:29:44.710 --> 00:29:44.720 align:start position:0%
various provider modules on the right
 

00:29:44.720 --> 00:29:47.000 align:start position:0%
various provider modules on the right
that<00:29:45.720><c> require</c><00:29:46.140><c> the</c><00:29:46.350><c> service</c><00:29:46.620><c> type</c><00:29:46.830><c> module</c>

00:29:47.000 --> 00:29:47.010 align:start position:0%
that require the service type module
 

00:29:47.010 --> 00:29:48.799 align:start position:0%
that require the service type module
tutor<00:29:47.730><c> so</c><00:29:47.970><c> they</c><00:29:48.090><c> can</c><00:29:48.240><c> implement</c><00:29:48.450><c> script</c>

00:29:48.799 --> 00:29:48.809 align:start position:0%
tutor so they can implement script
 

00:29:48.809 --> 00:29:50.540 align:start position:0%
tutor so they can implement script
engine<00:29:49.050><c> Factory</c><00:29:49.169><c> and</c><00:29:49.559><c> they</c><00:29:50.040><c> declare</c><00:29:50.400><c> that</c>

00:29:50.540 --> 00:29:50.550 align:start position:0%
engine Factory and they declare that
 

00:29:50.550 --> 00:29:52.879 align:start position:0%
engine Factory and they declare that
they<00:29:50.669><c> provide</c><00:29:51.030><c> implementation</c>

00:29:52.879 --> 00:29:52.889 align:start position:0%
they provide implementation
 

00:29:52.889 --> 00:29:58.469 align:start position:0%
they provide implementation
this<00:29:53.889><c> scheme</c><00:29:54.729><c> at</c><00:29:55.659><c> the</c><00:29:55.839><c> bottom</c><00:29:56.609><c> decouples</c><00:29:57.609><c> the</c>

00:29:58.469 --> 00:29:58.479 align:start position:0%
this scheme at the bottom decouples the
 

00:29:58.479 --> 00:30:01.589 align:start position:0%
this scheme at the bottom decouples the
number<00:29:58.989><c> and</c><00:29:59.199><c> the</c><00:30:00.069><c> identity</c><00:30:00.759><c> of</c><00:30:00.789><c> the</c><00:30:01.239><c> provider</c>

00:30:01.589 --> 00:30:01.599 align:start position:0%
number and the identity of the provider
 

00:30:01.599 --> 00:30:04.919 align:start position:0%
number and the identity of the provider
modules<00:30:02.139><c> on</c><00:30:02.679><c> the</c><00:30:03.159><c> right</c><00:30:03.339><c> from</c><00:30:04.299><c> the</c><00:30:04.479><c> consumer</c>

00:30:04.919 --> 00:30:04.929 align:start position:0%
modules on the right from the consumer
 

00:30:04.929 --> 00:30:08.939 align:start position:0%
modules on the right from the consumer
module<00:30:05.399><c> which</c><00:30:06.399><c> is</c><00:30:06.429><c> what</c><00:30:06.849><c> optionality</c><00:30:07.659><c> is</c><00:30:08.649><c> all</c>

00:30:08.939 --> 00:30:08.949 align:start position:0%
module which is what optionality is all
 

00:30:08.949 --> 00:30:13.259 align:start position:0%
module which is what optionality is all
about<00:30:09.249><c> I</c><00:30:11.309><c> recognize</c><00:30:12.309><c> this</c><00:30:12.579><c> is</c><00:30:12.639><c> an</c><00:30:12.879><c> abstract</c>

00:30:13.259 --> 00:30:13.269 align:start position:0%
about I recognize this is an abstract
 

00:30:13.269 --> 00:30:14.489 align:start position:0%
about I recognize this is an abstract
picture<00:30:13.569><c> the</c><00:30:13.659><c> benefit</c><00:30:13.959><c> is</c><00:30:14.079><c> it</c><00:30:14.199><c> fits</c><00:30:14.349><c> on</c><00:30:14.469><c> one</c>

00:30:14.489 --> 00:30:14.499 align:start position:0%
picture the benefit is it fits on one
 

00:30:14.499 --> 00:30:18.529 align:start position:0%
picture the benefit is it fits on one
slide<00:30:15.809><c> does</c><00:30:16.809><c> this</c><00:30:16.959><c> make</c><00:30:17.229><c> sense</c>

00:30:18.529 --> 00:30:18.539 align:start position:0%
slide does this make sense
 

00:30:18.539 --> 00:30:21.180 align:start position:0%
slide does this make sense
it's<00:30:19.539><c> very</c><00:30:19.839><c> hard</c><00:30:20.199><c> to</c><00:30:20.259><c> tell</c><00:30:20.529><c> up</c><00:30:20.709><c> here</c><00:30:20.949><c> whether</c>

00:30:21.180 --> 00:30:21.190 align:start position:0%
it's very hard to tell up here whether
 

00:30:21.190 --> 00:30:25.439 align:start position:0%
it's very hard to tell up here whether
this<00:30:22.889><c> programming</c><00:30:23.889><c> idiom</c><00:30:24.279><c> that</c><00:30:24.609><c> we've</c><00:30:24.999><c> burned</c>

00:30:25.439 --> 00:30:25.449 align:start position:0%
this programming idiom that we've burned
 

00:30:25.449 --> 00:30:27.779 align:start position:0%
this programming idiom that we've burned
into<00:30:25.779><c> the</c><00:30:25.959><c> java</c><00:30:26.349><c> language</c><00:30:26.639><c> with</c><00:30:27.639><c> these</c>

00:30:27.779 --> 00:30:27.789 align:start position:0%
into the java language with these
 

00:30:27.789 --> 00:30:30.839 align:start position:0%
into the java language with these
keywords<00:30:28.179><c> uses</c><00:30:28.569><c> and</c><00:30:28.719><c> provides</c><00:30:29.669><c> which</c><00:30:30.669><c> is</c>

00:30:30.839 --> 00:30:30.849 align:start position:0%
keywords uses and provides which is
 

00:30:30.849 --> 00:30:34.349 align:start position:0%
keywords uses and provides which is
clearly<00:30:32.039><c> more</c><00:30:33.039><c> about</c><00:30:33.369><c> the</c><00:30:33.579><c> architecture</c><00:30:34.329><c> of</c>

00:30:34.349 --> 00:30:34.359 align:start position:0%
clearly more about the architecture of
 

00:30:34.359 --> 00:30:36.059 align:start position:0%
clearly more about the architecture of
the<00:30:35.109><c> relationship</c><00:30:35.649><c> between</c><00:30:35.799><c> different</c>

00:30:36.059 --> 00:30:36.069 align:start position:0%
the relationship between different
 

00:30:36.069 --> 00:30:38.430 align:start position:0%
the relationship between different
modules<00:30:36.519><c> it's</c><00:30:36.699><c> sort</c><00:30:36.819><c> of</c><00:30:36.849><c> the</c><00:30:36.969><c> opposite</c><00:30:37.539><c> of</c><00:30:37.599><c> of</c>

00:30:38.430 --> 00:30:38.440 align:start position:0%
modules it's sort of the opposite of of
 

00:30:38.440 --> 00:30:40.409 align:start position:0%
modules it's sort of the opposite of of
lambdas<00:30:39.039><c> in</c><00:30:39.219><c> their</c><00:30:39.369><c> individual</c><00:30:39.849><c> expressions</c>

00:30:40.409 --> 00:30:40.419 align:start position:0%
lambdas in their individual expressions
 

00:30:40.419 --> 00:30:43.729 align:start position:0%
lambdas in their individual expressions
in<00:30:40.569><c> method</c><00:30:40.839><c> bodies</c><00:30:41.109><c> it's</c><00:30:41.289><c> very</c><00:30:41.440><c> hard</c><00:30:41.709><c> to</c><00:30:41.859><c> tell</c>

00:30:43.729 --> 00:30:43.739 align:start position:0%
in method bodies it's very hard to tell
 

00:30:43.739 --> 00:30:47.549 align:start position:0%
in method bodies it's very hard to tell
how<00:30:44.739><c> well</c><00:30:45.519><c> it</c><00:30:45.909><c> comes</c><00:30:46.389><c> across</c><00:30:46.629><c> but</c><00:30:46.989><c> really</c><00:30:47.259><c> this</c>

00:30:47.549 --> 00:30:47.559 align:start position:0%
how well it comes across but really this
 

00:30:47.559 --> 00:30:51.059 align:start position:0%
how well it comes across but really this
is<00:30:47.739><c> the</c><00:30:47.949><c> essence</c><00:30:48.489><c> of</c><00:30:48.849><c> modularity</c><00:30:49.799><c> it's</c><00:30:50.799><c> about</c>

00:30:51.059 --> 00:30:51.069 align:start position:0%
is the essence of modularity it's about
 

00:30:51.069 --> 00:30:55.019 align:start position:0%
is the essence of modularity it's about
making<00:30:51.399><c> the</c><00:30:51.849><c> consumer</c><00:30:52.629><c> modules</c><00:30:53.349><c> not</c><00:30:54.129><c> care</c><00:30:54.549><c> who</c>

00:30:55.019 --> 00:30:55.029 align:start position:0%
making the consumer modules not care who
 

00:30:55.029 --> 00:30:57.869 align:start position:0%
making the consumer modules not care who
the<00:30:55.209><c> provider</c><00:30:55.599><c> modules</c><00:30:56.139><c> are</c><00:30:56.639><c> modularity</c><00:30:57.639><c> is</c>

00:30:57.869 --> 00:30:57.879 align:start position:0%
the provider modules are modularity is
 

00:30:57.879 --> 00:30:59.759 align:start position:0%
the provider modules are modularity is
basically<00:30:58.209><c> about</c><00:30:58.389><c> not</c><00:30:58.629><c> caring</c><00:30:58.899><c> and</c><00:30:59.259><c> services</c>

00:30:59.759 --> 00:30:59.769 align:start position:0%
basically about not caring and services
 

00:30:59.769 --> 00:31:02.119 align:start position:0%
basically about not caring and services
or<00:30:59.889><c> how</c><00:30:59.949><c> you</c><00:31:00.009><c> do</c><00:31:00.219><c> that</c><00:31:00.399><c> you</c><00:31:00.669><c> just</c><00:31:00.719><c> rely</c><00:31:01.719><c> on</c><00:31:01.749><c> a</c>

00:31:02.119 --> 00:31:02.129 align:start position:0%
or how you do that you just rely on a
 

00:31:02.129 --> 00:31:05.489 align:start position:0%
or how you do that you just rely on a
well-designed<00:31:03.129><c> service</c><00:31:03.729><c> type</c><00:31:03.969><c> and</c><00:31:04.449><c> you</c><00:31:05.349><c> let</c>

00:31:05.489 --> 00:31:05.499 align:start position:0%
well-designed service type and you let
 

00:31:05.499 --> 00:31:13.279 align:start position:0%
well-designed service type and you let
the<00:31:05.589><c> module</c><00:31:05.919><c> system</c><00:31:06.239><c> find</c><00:31:07.239><c> the</c><00:31:07.539><c> providers</c><00:31:11.699><c> so</c>

00:31:13.279 --> 00:31:13.289 align:start position:0%
the module system find the providers so
 

00:31:13.289 --> 00:31:17.639 align:start position:0%
the module system find the providers so
since<00:31:14.289><c> Java</c><00:31:14.709><c> scripting</c><00:31:15.279><c> is</c><00:31:15.549><c> a</c><00:31:15.699><c> JDK</c><00:31:16.209><c> module</c><00:31:16.649><c> it</c>

00:31:17.639 --> 00:31:17.649 align:start position:0%
since Java scripting is a JDK module it
 

00:31:17.649 --> 00:31:20.099 align:start position:0%
since Java scripting is a JDK module it
will<00:31:17.889><c> not</c><00:31:18.099><c> come</c><00:31:18.339><c> as</c><00:31:18.489><c> a</c><00:31:18.519><c> surprise</c><00:31:18.609><c> that</c><00:31:19.569><c> it's</c>

00:31:20.099 --> 00:31:20.109 align:start position:0%
will not come as a surprise that it's
 

00:31:20.109 --> 00:31:22.109 align:start position:0%
will not come as a surprise that it's
not<00:31:20.319><c> only</c><00:31:20.529><c> the</c><00:31:20.709><c> consumer</c><00:31:21.339><c> module</c><00:31:21.669><c> that</c><00:31:21.909><c> says</c>

00:31:22.109 --> 00:31:22.119 align:start position:0%
not only the consumer module that says
 

00:31:22.119 --> 00:31:24.539 align:start position:0%
not only the consumer module that says
uses<00:31:22.509><c> but</c><00:31:23.049><c> actually</c><00:31:23.409><c> also</c><00:31:23.559><c> where</c><00:31:23.889><c> the</c><00:31:24.039><c> service</c>

00:31:24.539 --> 00:31:24.549 align:start position:0%
uses but actually also where the service
 

00:31:24.549 --> 00:31:27.809 align:start position:0%
uses but actually also where the service
type<00:31:24.849><c> lives</c><00:31:25.709><c> so</c><00:31:26.709><c> at</c><00:31:26.829><c> the</c><00:31:26.919><c> top</c><00:31:27.069><c> the</c><00:31:27.579><c> Java</c>

00:31:27.809 --> 00:31:27.819 align:start position:0%
type lives so at the top the Java
 

00:31:27.819 --> 00:31:30.689 align:start position:0%
type lives so at the top the Java
scripting<00:31:28.209><c> module</c><00:31:28.539><c> it</c><00:31:28.839><c> both</c><00:31:29.349><c> uses</c><00:31:30.009><c> the</c><00:31:30.399><c> script</c>

00:31:30.689 --> 00:31:30.699 align:start position:0%
scripting module it both uses the script
 

00:31:30.699 --> 00:31:32.489 align:start position:0%
scripting module it both uses the script
engine<00:31:30.849><c> factory</c><00:31:31.389><c> interface</c><00:31:31.809><c> because</c><00:31:32.259><c> there's</c>

00:31:32.489 --> 00:31:32.499 align:start position:0%
engine factory interface because there's
 

00:31:32.499 --> 00:31:34.919 align:start position:0%
engine factory interface because there's
code<00:31:33.069><c> in</c><00:31:33.279><c> Java</c><00:31:33.639><c> scripting</c><00:31:34.089><c> that</c><00:31:34.149><c> call</c><00:31:34.509><c> service</c>

00:31:34.919 --> 00:31:34.929 align:start position:0%
code in Java scripting that call service
 

00:31:34.929 --> 00:31:38.609 align:start position:0%
code in Java scripting that call service
loader<00:31:35.429><c> and</c><00:31:36.690><c> Java</c><00:31:37.690><c> scripting</c><00:31:38.049><c> actually</c><00:31:38.529><c> is</c>

00:31:38.609 --> 00:31:38.619 align:start position:0%
loader and Java scripting actually is
 

00:31:38.619 --> 00:31:41.009 align:start position:0%
loader and Java scripting actually is
where<00:31:38.919><c> that</c><00:31:39.129><c> interface</c><00:31:39.669><c> lives</c><00:31:39.940><c> so</c><00:31:40.209><c> it</c><00:31:40.329><c> exports</c>

00:31:41.009 --> 00:31:41.019 align:start position:0%
where that interface lives so it exports
 

00:31:41.019 --> 00:31:45.359 align:start position:0%
where that interface lives so it exports
it<00:31:41.229><c> for</c><00:31:41.799><c> everyone</c><00:31:42.159><c> else</c><00:31:42.339><c> to</c><00:31:43.179><c> implement</c><00:31:44.369><c> then</c>

00:31:45.359 --> 00:31:45.369 align:start position:0%
it for everyone else to implement then
 

00:31:45.369 --> 00:31:48.359 align:start position:0%
it for everyone else to implement then
further<00:31:45.669><c> down</c><00:31:45.989><c> the</c><00:31:46.989><c> NASS</c><00:31:47.199><c> horn</c><00:31:47.499><c> and</c><00:31:47.889><c> groovy</c>

00:31:48.359 --> 00:31:48.369 align:start position:0%
further down the NASS horn and groovy
 

00:31:48.369 --> 00:31:51.449 align:start position:0%
further down the NASS horn and groovy
modules<00:31:48.759><c> again</c><00:31:49.059><c> all</c><00:31:49.469><c> hypothetical</c><00:31:50.469><c> there</c>

00:31:51.449 --> 00:31:51.459 align:start position:0%
modules again all hypothetical there
 

00:31:51.459 --> 00:31:53.129 align:start position:0%
modules again all hypothetical there
isn't<00:31:51.699><c> actually</c><00:31:51.849><c> groovy</c><00:31:52.359><c> module</c><00:31:52.690><c> called</c><00:31:52.959><c> that</c>

00:31:53.129 --> 00:31:53.139 align:start position:0%
isn't actually groovy module called that
 

00:31:53.139 --> 00:31:55.829 align:start position:0%
isn't actually groovy module called that
but<00:31:53.259><c> I've</c><00:31:53.349><c> got</c><00:31:53.529><c> to</c><00:31:53.649><c> have</c><00:31:53.799><c> some</c><00:31:54.009><c> example</c><00:31:54.839><c> they</c>

00:31:55.829 --> 00:31:55.839 align:start position:0%
but I've got to have some example they
 

00:31:55.839 --> 00:31:57.779 align:start position:0%
but I've got to have some example they
each<00:31:56.079><c> provide</c><00:31:56.409><c> their</c><00:31:56.919><c> implementation</c><00:31:57.669><c> of</c>

00:31:57.779 --> 00:31:57.789 align:start position:0%
each provide their implementation of
 

00:31:57.789 --> 00:32:00.299 align:start position:0%
each provide their implementation of
script<00:31:58.059><c> engine</c><00:31:58.209><c> Factory</c><00:31:58.509><c> and</c><00:31:59.019><c> the</c><00:31:59.919><c> module</c>

00:32:00.299 --> 00:32:00.309 align:start position:0%
script engine Factory and the module
 

00:32:00.309 --> 00:32:03.089 align:start position:0%
script engine Factory and the module
system<00:32:00.549><c> discovers</c><00:32:01.449><c> the</c><00:32:02.199><c> role</c><00:32:02.440><c> of</c><00:32:02.469><c> these</c><00:32:02.859><c> two</c>

00:32:03.089 --> 00:32:03.099 align:start position:0%
system discovers the role of these two
 

00:32:03.099 --> 00:32:05.460 align:start position:0%
system discovers the role of these two
modules<00:32:03.279><c> as</c><00:32:03.849><c> provider</c><00:32:04.539><c> modules</c>

00:32:05.460 --> 00:32:05.470 align:start position:0%
modules as provider modules
 

00:32:05.470 --> 00:32:08.279 align:start position:0%
modules as provider modules
when<00:32:05.889><c> the</c><00:32:06.250><c> system</c><00:32:06.639><c> starts</c><00:32:07.120><c> up</c><00:32:07.269><c> assuming</c><00:32:07.929><c> that</c>

00:32:08.279 --> 00:32:08.289 align:start position:0%
when the system starts up assuming that
 

00:32:08.289 --> 00:32:10.740 align:start position:0%
when the system starts up assuming that
jars<00:32:09.159><c> for</c><00:32:09.610><c> these</c><00:32:09.730><c> two</c><00:32:09.940><c> modules</c><00:32:10.120><c> are</c><00:32:10.570><c> on</c><00:32:10.659><c> the</c>

00:32:10.740 --> 00:32:10.750 align:start position:0%
jars for these two modules are on the
 

00:32:10.750 --> 00:32:15.749 align:start position:0%
jars for these two modules are on the
module<00:32:11.049><c> path</c><00:32:12.509><c> now</c><00:32:13.509><c> code</c><00:32:14.440><c> in</c><00:32:14.830><c> Java</c><00:32:15.279><c> scripting</c>

00:32:15.749 --> 00:32:15.759 align:start position:0%
module path now code in Java scripting
 

00:32:15.759 --> 00:32:19.919 align:start position:0%
module path now code in Java scripting
and<00:32:16.509><c> you'll</c><00:32:16.600><c> find</c><00:32:16.809><c> my</c><00:32:16.929><c> pointer</c><00:32:18.600><c> code</c><00:32:19.600><c> and</c><00:32:19.779><c> Java</c>

00:32:19.919 --> 00:32:19.929 align:start position:0%
and you'll find my pointer code and Java
 

00:32:19.929 --> 00:32:24.509 align:start position:0%
and you'll find my pointer code and Java
scripting<00:32:20.440><c> can</c><00:32:21.250><c> employ</c><00:32:22.049><c> service</c><00:32:23.049><c> loader</c><00:32:23.519><c> to</c>

00:32:24.509 --> 00:32:24.519 align:start position:0%
scripting can employ service loader to
 

00:32:24.519 --> 00:32:26.669 align:start position:0%
scripting can employ service loader to
get<00:32:24.700><c> instances</c><00:32:25.419><c> of</c><00:32:25.659><c> script</c><00:32:25.960><c> engine</c><00:32:26.139><c> factory</c>

00:32:26.669 --> 00:32:26.679 align:start position:0%
get instances of script engine factory
 

00:32:26.679 --> 00:32:30.090 align:start position:0%
get instances of script engine factory
and<00:32:27.100><c> call</c><00:32:27.909><c> its</c><00:32:28.120><c> methods</c><00:32:28.480><c> without</c><00:32:29.470><c> worrying</c>

00:32:30.090 --> 00:32:30.100 align:start position:0%
and call its methods without worrying
 

00:32:30.100 --> 00:32:33.210 align:start position:0%
and call its methods without worrying
where<00:32:30.429><c> the</c><00:32:30.580><c> implementations</c><00:32:31.330><c> come</c><00:32:31.600><c> from</c><00:32:32.220><c> the</c>

00:32:33.210 --> 00:32:33.220 align:start position:0%
where the implementations come from the
 

00:32:33.220 --> 00:32:35.490 align:start position:0%
where the implementations come from the
script<00:32:33.519><c> engine</c><00:32:33.700><c> factory</c><00:32:34.269><c> interface</c><00:32:34.720><c> has</c><00:32:35.200><c> many</c>

00:32:35.490 --> 00:32:35.500 align:start position:0%
script engine factory interface has many
 

00:32:35.500 --> 00:32:38.519 align:start position:0%
script engine factory interface has many
descriptor<00:32:36.370><c> methods</c><00:32:37.179><c> to</c><00:32:37.960><c> let</c><00:32:38.110><c> provider</c>

00:32:38.519 --> 00:32:38.529 align:start position:0%
descriptor methods to let provider
 

00:32:38.529 --> 00:32:40.830 align:start position:0%
descriptor methods to let provider
classes<00:32:39.159><c> encode</c><00:32:39.879><c> the</c><00:32:40.149><c> quality</c><00:32:40.720><c> of</c>

00:32:40.830 --> 00:32:40.840 align:start position:0%
classes encode the quality of
 

00:32:40.840 --> 00:32:43.110 align:start position:0%
classes encode the quality of
implementation<00:32:41.620><c> of</c><00:32:41.860><c> the</c><00:32:42.399><c> script</c><00:32:42.700><c> engines</c>

00:32:43.110 --> 00:32:43.120 align:start position:0%
implementation of the script engines
 

00:32:43.120 --> 00:32:44.940 align:start position:0%
implementation of the script engines
they<00:32:43.330><c> ultimately</c><00:32:43.509><c> offer</c><00:32:44.080><c> I'm</c><00:32:44.590><c> not</c><00:32:44.769><c> going</c><00:32:44.889><c> to</c>

00:32:44.940 --> 00:32:44.950 align:start position:0%
they ultimately offer I'm not going to
 

00:32:44.950 --> 00:32:46.110 align:start position:0%
they ultimately offer I'm not going to
show<00:32:45.100><c> script</c><00:32:45.340><c> engine</c><00:32:45.490><c> factory</c><00:32:45.909><c> because</c><00:32:46.029><c> it</c>

00:32:46.110 --> 00:32:46.120 align:start position:0%
show script engine factory because it
 

00:32:46.120 --> 00:32:48.619 align:start position:0%
show script engine factory because it
would<00:32:46.240><c> be</c><00:32:46.330><c> a</c><00:32:46.360><c> big</c><00:32:46.600><c> long</c><00:32:46.750><c> list</c><00:32:46.929><c> of</c><00:32:47.049><c> get</c><00:32:47.259><c> methods</c>

00:32:48.619 --> 00:32:48.629 align:start position:0%
would be a big long list of get methods
 

00:32:48.629 --> 00:32:50.789 align:start position:0%
would be a big long list of get methods
it's<00:32:49.629><c> pretty</c><00:32:49.840><c> easy</c><00:32:49.929><c> to</c><00:32:50.169><c> look</c><00:32:50.259><c> up</c><00:32:50.470><c> and</c><00:32:50.710><c> you'll</c>

00:32:50.789 --> 00:32:50.799 align:start position:0%
it's pretty easy to look up and you'll
 

00:32:50.799 --> 00:32:52.499 align:start position:0%
it's pretty easy to look up and you'll
see<00:32:50.830><c> a</c><00:32:51.039><c> sort</c><00:32:51.370><c> of</c><00:32:51.429><c> get</c><00:32:51.639><c> get</c><00:32:51.850><c> the</c><00:32:52.000><c> name</c><00:32:52.149><c> of</c><00:32:52.360><c> the</c>

00:32:52.499 --> 00:32:52.509 align:start position:0%
see a sort of get get the name of the
 

00:32:52.509 --> 00:32:55.200 align:start position:0%
see a sort of get get the name of the
script<00:32:53.230><c> engine</c><00:32:53.379><c> and</c><00:32:53.860><c> get</c><00:32:54.250><c> some</c><00:32:54.460><c> details</c><00:32:54.820><c> of</c>

00:32:55.200 --> 00:32:55.210 align:start position:0%
script engine and get some details of
 

00:32:55.210 --> 00:32:57.149 align:start position:0%
script engine and get some details of
what<00:32:55.509><c> it</c><00:32:55.629><c> some</c><00:32:56.470><c> of</c><00:32:56.529><c> the</c><00:32:56.679><c> language</c><00:32:57.009><c> features</c>

00:32:57.149 --> 00:32:57.159 align:start position:0%
what it some of the language features
 

00:32:57.159 --> 00:33:01.619 align:start position:0%
what it some of the language features
that<00:32:57.460><c> it</c><00:32:57.580><c> supports</c><00:32:59.250><c> you</c><00:33:00.250><c> will</c><00:33:00.340><c> notice</c><00:33:00.700><c> the</c>

00:33:01.619 --> 00:33:01.629 align:start position:0%
that it supports you will notice the
 

00:33:01.629 --> 00:33:04.740 align:start position:0%
that it supports you will notice the
Java<00:33:01.899><c> scripting</c><00:33:02.409><c> module</c><00:33:02.789><c> does</c><00:33:03.789><c> not</c><00:33:04.120><c> say</c><00:33:04.450><c> it</c>

00:33:04.740 --> 00:33:04.750 align:start position:0%
Java scripting module does not say it
 

00:33:04.750 --> 00:33:07.200 align:start position:0%
Java scripting module does not say it
requires<00:33:05.259><c> JavaScript</c><00:33:06.220><c> jdk</c><00:33:06.700><c> scripting</c><00:33:07.059><c> nass</c>

00:33:07.200 --> 00:33:07.210 align:start position:0%
requires JavaScript jdk scripting nass
 

00:33:07.210 --> 00:33:10.470 align:start position:0%
requires JavaScript jdk scripting nass
horn<00:33:07.450><c> or</c><00:33:07.750><c> groovy</c><00:33:08.080><c> script</c><00:33:08.320><c> engine</c><00:33:09.090><c> in</c><00:33:10.090><c> fact</c><00:33:10.360><c> if</c>

00:33:10.470 --> 00:33:10.480 align:start position:0%
horn or groovy script engine in fact if
 

00:33:10.480 --> 00:33:12.060 align:start position:0%
horn or groovy script engine in fact if
you<00:33:10.570><c> look</c><00:33:10.720><c> closely</c><00:33:10.929><c> you'll</c><00:33:11.500><c> see</c><00:33:11.590><c> that</c><00:33:11.769><c> those</c>

00:33:12.060 --> 00:33:12.070 align:start position:0%
you look closely you'll see that those
 

00:33:12.070 --> 00:33:15.509 align:start position:0%
you look closely you'll see that those
modules<00:33:12.610><c> require</c><00:33:13.389><c> Java</c><00:33:13.809><c> scripting</c><00:33:14.409><c> where</c><00:33:15.340><c> the</c>

00:33:15.509 --> 00:33:15.519 align:start position:0%
modules require Java scripting where the
 

00:33:15.519 --> 00:33:20.159 align:start position:0%
modules require Java scripting where the
service<00:33:15.879><c> type</c><00:33:16.149><c> lives</c><00:33:17.820><c> so</c><00:33:18.820><c> in</c><00:33:18.970><c> effect</c><00:33:19.059><c> the</c><00:33:19.990><c> way</c>

00:33:20.159 --> 00:33:20.169 align:start position:0%
service type lives so in effect the way
 

00:33:20.169 --> 00:33:22.440 align:start position:0%
service type lives so in effect the way
you<00:33:20.230><c> get</c><00:33:20.559><c> optional</c><00:33:21.220><c> dependencies</c><00:33:21.970><c> with</c><00:33:22.210><c> very</c>

00:33:22.440 --> 00:33:22.450 align:start position:0%
you get optional dependencies with very
 

00:33:22.450 --> 00:33:25.310 align:start position:0%
you get optional dependencies with very
loose<00:33:22.690><c> coupling</c><00:33:22.960><c> is</c><00:33:23.409><c> by</c><00:33:24.190><c> inverting</c><00:33:25.000><c> them</c>

00:33:25.310 --> 00:33:25.320 align:start position:0%
loose coupling is by inverting them
 

00:33:25.320 --> 00:33:29.310 align:start position:0%
loose coupling is by inverting them
rather<00:33:26.320><c> than</c><00:33:26.649><c> a</c><00:33:26.919><c> high</c><00:33:27.159><c> level</c><00:33:28.200><c> scripting</c><00:33:29.200><c> API</c>

00:33:29.310 --> 00:33:29.320 align:start position:0%
rather than a high level scripting API
 

00:33:29.320 --> 00:33:32.129 align:start position:0%
rather than a high level scripting API
module<00:33:30.210><c> requiring</c><00:33:31.210><c> lower</c><00:33:31.720><c> level</c>

00:33:32.129 --> 00:33:32.139 align:start position:0%
module requiring lower level
 

00:33:32.139 --> 00:33:35.940 align:start position:0%
module requiring lower level
implementation<00:33:32.409><c> modules</c><00:33:34.049><c> everyone</c><00:33:35.049><c> looks</c><00:33:35.679><c> up</c>

00:33:35.940 --> 00:33:35.950 align:start position:0%
implementation modules everyone looks up
 

00:33:35.950 --> 00:33:39.149 align:start position:0%
implementation modules everyone looks up
by<00:33:36.850><c> requiring</c><00:33:37.330><c> the</c><00:33:37.720><c> module</c><00:33:38.049><c> with</c><00:33:38.679><c> the</c><00:33:38.799><c> service</c>

00:33:39.149 --> 00:33:39.159 align:start position:0%
by requiring the module with the service
 

00:33:39.159 --> 00:33:46.909 align:start position:0%
by requiring the module with the service
type<00:33:42.600><c> so</c><00:33:43.950><c> service</c><00:33:44.950><c> relationships</c><00:33:45.669><c> encode</c>

00:33:46.909 --> 00:33:46.919 align:start position:0%
type so service relationships encode
 

00:33:46.919 --> 00:33:51.419 align:start position:0%
type so service relationships encode
optional<00:33:47.919><c> module</c><00:33:48.639><c> dependencies</c><00:33:50.159><c> that</c><00:33:51.159><c> means</c>

00:33:51.419 --> 00:33:51.429 align:start position:0%
optional module dependencies that means
 

00:33:51.429 --> 00:33:53.850 align:start position:0%
optional module dependencies that means
that<00:33:51.639><c> services</c><00:33:52.149><c> are</c><00:33:52.299><c> not</c><00:33:52.419><c> just</c><00:33:52.690><c> giving</c><00:33:53.019><c> loose</c>

00:33:53.850 --> 00:33:53.860 align:start position:0%
that services are not just giving loose
 

00:33:53.860 --> 00:33:56.610 align:start position:0%
that services are not just giving loose
coupling<00:33:54.190><c> as</c><00:33:54.700><c> a</c><00:33:54.730><c> sort</c><00:33:55.120><c> of</c><00:33:55.149><c> a</c><00:33:55.240><c> mechanism</c><00:33:55.500><c> in</c><00:33:56.500><c> the</c>

00:33:56.610 --> 00:33:56.620 align:start position:0%
coupling as a sort of a mechanism in the
 

00:33:56.620 --> 00:33:57.749 align:start position:0%
coupling as a sort of a mechanism in the
module<00:33:56.919><c> system</c><00:33:57.250><c> but</c><00:33:57.370><c> actually</c><00:33:57.610><c> a</c><00:33:57.639><c> better</c>

00:33:57.749 --> 00:33:57.759 align:start position:0%
module system but actually a better
 

00:33:57.759 --> 00:33:59.789 align:start position:0%
module system but actually a better
separation<00:33:58.360><c> of</c><00:33:58.600><c> concerns</c><00:33:58.779><c> between</c><00:33:59.500><c> the</c>

00:33:59.789 --> 00:33:59.799 align:start position:0%
separation of concerns between the
 

00:33:59.799 --> 00:34:03.139 align:start position:0%
separation of concerns between the
interface<00:34:00.220><c> and</c><00:34:00.700><c> the</c><00:34:00.789><c> implementations</c><00:34:01.450><c> and</c>

00:34:03.139 --> 00:34:03.149 align:start position:0%
interface and the implementations and
 

00:34:03.149 --> 00:34:05.730 align:start position:0%
interface and the implementations and
services<00:34:04.149><c> are</c><00:34:04.360><c> almost</c><00:34:04.840><c> always</c><00:34:05.110><c> a</c><00:34:05.289><c> better</c>

00:34:05.730 --> 00:34:05.740 align:start position:0%
services are almost always a better
 

00:34:05.740 --> 00:34:08.639 align:start position:0%
services are almost always a better
choice<00:34:06.330><c> for</c><00:34:07.330><c> discovering</c><00:34:07.809><c> implementations</c>

00:34:08.639 --> 00:34:08.649 align:start position:0%
choice for discovering implementations
 

00:34:08.649 --> 00:34:11.129 align:start position:0%
choice for discovering implementations
than<00:34:08.980><c> messing</c><00:34:09.429><c> around</c><00:34:09.550><c> with</c><00:34:10.450><c> reflection</c>

00:34:11.129 --> 00:34:11.139 align:start position:0%
than messing around with reflection
 

00:34:11.139 --> 00:34:15.250 align:start position:0%
than messing around with reflection
class<00:34:11.530><c> dot</c><00:34:11.770><c> for</c><00:34:12.040><c> name</c><00:34:12.220><c> and</c><00:34:12.250><c> the</c><00:34:12.490><c> like</c>

00:34:15.250 --> 00:34:15.260 align:start position:0%
 
 

00:34:15.260 --> 00:34:23.079 align:start position:0%
 
so<00:34:16.260><c> nearly</c><00:34:17.070><c> done</c><00:34:17.629><c> let's</c><00:34:18.629><c> talk</c><00:34:18.839><c> about</c><00:34:19.220><c> cycles</c>

00:34:23.079 --> 00:34:23.089 align:start position:0%
 
 

00:34:23.089 --> 00:34:26.569 align:start position:0%
 
this<00:34:24.089><c> is</c><00:34:24.270><c> a</c><00:34:24.389><c> graph</c><00:34:24.629><c> of</c><00:34:24.980><c> some</c><00:34:25.980><c> of</c><00:34:26.099><c> the</c><00:34:26.190><c> modules</c>

00:34:26.569 --> 00:34:26.579 align:start position:0%
this is a graph of some of the modules
 

00:34:26.579 --> 00:34:34.790 align:start position:0%
this is a graph of some of the modules
in<00:34:26.879><c> JDK</c><00:34:27.270><c> 9</c><00:34:27.829><c> what</c><00:34:28.829><c> do</c><00:34:28.980><c> you</c><00:34:29.070><c> notice</c><00:34:29.280><c> about</c><00:34:29.790><c> it</c><00:34:33.800><c> it</c>

00:34:34.790 --> 00:34:34.800 align:start position:0%
in JDK 9 what do you notice about it it
 

00:34:34.800 --> 00:34:37.819 align:start position:0%
in JDK 9 what do you notice about it it
is<00:34:34.919><c> a</c><00:34:35.159><c> cyclic</c><00:34:35.659><c> there</c><00:34:36.659><c> are</c><00:34:36.780><c> no</c><00:34:36.899><c> cycles</c><00:34:37.349><c> there</c>

00:34:37.819 --> 00:34:37.829 align:start position:0%
is a cyclic there are no cycles there
 

00:34:37.829 --> 00:34:40.550 align:start position:0%
is a cyclic there are no cycles there
are<00:34:37.919><c> no</c><00:34:38.040><c> loops</c><00:34:38.629><c> it</c><00:34:39.629><c> is</c><00:34:39.780><c> a</c><00:34:39.899><c> directed</c><00:34:40.440><c> acyclic</c>

00:34:40.550 --> 00:34:40.560 align:start position:0%
are no loops it is a directed acyclic
 

00:34:40.560 --> 00:34:46.659 align:start position:0%
are no loops it is a directed acyclic
graph<00:34:43.040><c> the</c><00:34:44.040><c> module</c><00:34:44.399><c> system</c><00:34:44.849><c> does</c><00:34:45.510><c> not</c><00:34:45.810><c> allow</c>

00:34:46.659 --> 00:34:46.669 align:start position:0%
graph the module system does not allow
 

00:34:46.669 --> 00:34:51.980 align:start position:0%
graph the module system does not allow
cycles<00:34:47.669><c> in</c><00:34:48.510><c> your</c><00:34:48.720><c> requires</c><00:34:49.310><c> directives</c><00:34:50.990><c> it</c>

00:34:51.980 --> 00:34:51.990 align:start position:0%
cycles in your requires directives it
 

00:34:51.990 --> 00:34:55.369 align:start position:0%
cycles in your requires directives it
has<00:34:52.139><c> taken</c><00:34:52.470><c> almost</c><00:34:52.649><c> a</c><00:34:52.980><c> decade</c><00:34:53.220><c> to</c><00:34:54.379><c> detangle</c>

00:34:55.369 --> 00:34:55.379 align:start position:0%
has taken almost a decade to detangle
 

00:34:55.379 --> 00:34:58.520 align:start position:0%
has taken almost a decade to detangle
the<00:34:55.409><c> tens</c><00:34:55.889><c> of</c><00:34:56.190><c> thousands</c><00:34:56.909><c> of</c><00:34:57.119><c> classes</c><00:34:57.690><c> in</c><00:34:58.109><c> the</c>

00:34:58.520 --> 00:34:58.530 align:start position:0%
the tens of thousands of classes in the
 

00:34:58.530 --> 00:35:01.280 align:start position:0%
the tens of thousands of classes in the
JDK<00:34:58.980><c> to</c><00:34:59.040><c> the</c><00:34:59.400><c> acyclic</c><00:35:00.089><c> and</c><00:35:00.300><c> relatively</c><00:35:00.900><c> sane</c>

00:35:01.280 --> 00:35:01.290 align:start position:0%
JDK to the acyclic and relatively sane
 

00:35:01.290 --> 00:35:03.950 align:start position:0%
JDK to the acyclic and relatively sane
States<00:35:01.650><c> you</c><00:35:02.099><c> see</c><00:35:02.310><c> here</c><00:35:02.550><c> we'd</c><00:35:03.240><c> like</c><00:35:03.450><c> to</c><00:35:03.599><c> keep</c><00:35:03.780><c> it</c>

00:35:03.950 --> 00:35:03.960 align:start position:0%
States you see here we'd like to keep it
 

00:35:03.960 --> 00:35:04.579 align:start position:0%
States you see here we'd like to keep it
that<00:35:04.109><c> way</c>

00:35:04.579 --> 00:35:04.589 align:start position:0%
that way
 

00:35:04.589 --> 00:35:08.120 align:start position:0%
that way
in<00:35:05.130><c> fact</c><00:35:05.880><c> one</c><00:35:06.480><c> of</c><00:35:06.510><c> the</c><00:35:06.660><c> motivations</c><00:35:07.260><c> for</c>

00:35:08.120 --> 00:35:08.130 align:start position:0%
in fact one of the motivations for
 

00:35:08.130 --> 00:35:10.880 align:start position:0%
in fact one of the motivations for
investing<00:35:08.910><c> in</c><00:35:09.060><c> modular</c><00:35:09.570><c> ization</c><00:35:09.960><c> of</c><00:35:09.990><c> a</c><00:35:10.589><c> code</c>

00:35:10.880 --> 00:35:10.890 align:start position:0%
investing in modular ization of a code
 

00:35:10.890 --> 00:35:14.089 align:start position:0%
investing in modular ization of a code
base<00:35:11.130><c> is</c><00:35:11.490><c> the</c><00:35:12.359><c> knowledge</c><00:35:12.540><c> that</c><00:35:12.780><c> once</c><00:35:13.560><c> complete</c>

00:35:14.089 --> 00:35:14.099 align:start position:0%
base is the knowledge that once complete
 

00:35:14.099 --> 00:35:17.990 align:start position:0%
base is the knowledge that once complete
there<00:35:15.000><c> won't</c><00:35:15.210><c> be</c><00:35:15.329><c> any</c><00:35:15.950><c> backsliding</c><00:35:16.950><c> into</c><00:35:17.880><c> the</c>

00:35:17.990 --> 00:35:18.000 align:start position:0%
there won't be any backsliding into the
 

00:35:18.000 --> 00:35:20.809 align:start position:0%
there won't be any backsliding into the
ball<00:35:18.240><c> of</c><00:35:18.270><c> mud</c><00:35:18.720><c> that</c><00:35:19.050><c> cyclic</c><00:35:20.040><c> dependencies</c>

00:35:20.809 --> 00:35:20.819 align:start position:0%
ball of mud that cyclic dependencies
 

00:35:20.819 --> 00:35:25.730 align:start position:0%
ball of mud that cyclic dependencies
allow<00:35:23.660><c> and</c><00:35:24.660><c> we're</c><00:35:24.869><c> not</c><00:35:24.990><c> the</c><00:35:25.109><c> only</c><00:35:25.140><c> ones</c><00:35:25.319><c> who</c>

00:35:25.730 --> 00:35:25.740 align:start position:0%
allow and we're not the only ones who
 

00:35:25.740 --> 00:35:28.490 align:start position:0%
allow and we're not the only ones who
think<00:35:25.770><c> like</c><00:35:26.160><c> this</c><00:35:26.869><c> java</c><00:35:27.869><c> application</c>

00:35:28.490 --> 00:35:28.500 align:start position:0%
think like this java application
 

00:35:28.500 --> 00:35:31.400 align:start position:0%
think like this java application
architecture<00:35:29.190><c> from</c><00:35:29.520><c> 2012</c><00:35:30.119><c> is</c><00:35:30.390><c> an</c><00:35:30.720><c> outstanding</c>

00:35:31.400 --> 00:35:31.410 align:start position:0%
architecture from 2012 is an outstanding
 

00:35:31.410 --> 00:35:34.490 align:start position:0%
architecture from 2012 is an outstanding
book<00:35:31.560><c> about</c><00:35:32.190><c> modularity</c><00:35:32.930><c> in</c><00:35:33.930><c> a</c><00:35:34.109><c> section</c>

00:35:34.490 --> 00:35:34.500 align:start position:0%
book about modularity in a section
 

00:35:34.500 --> 00:35:36.440 align:start position:0%
book about modularity in a section
entitled<00:35:34.859><c> you</c><00:35:35.730><c> actually</c><00:35:35.970><c> couldn't</c><00:35:36.150><c> make</c><00:35:36.329><c> this</c>

00:35:36.440 --> 00:35:36.450 align:start position:0%
entitled you actually couldn't make this
 

00:35:36.450 --> 00:35:39.260 align:start position:0%
entitled you actually couldn't make this
up<00:35:36.740><c> it's</c><00:35:37.740><c> true</c><00:35:37.950><c> cyclic</c><00:35:38.550><c> dependence</c><00:35:38.940><c> is</c><00:35:39.089><c> the</c>

00:35:39.260 --> 00:35:39.270 align:start position:0%
up it's true cyclic dependence is the
 

00:35:39.270 --> 00:35:39.740 align:start position:0%
up it's true cyclic dependence is the
death<00:35:39.450><c> knell</c>

00:35:39.740 --> 00:35:39.750 align:start position:0%
death knell
 

00:35:39.750 --> 00:35:42.530 align:start position:0%
death knell
it<00:35:40.500><c> says</c><00:35:40.740><c> excessive</c><00:35:41.579><c> dependencies</c><00:35:42.270><c> are</c><00:35:42.420><c> bad</c>

00:35:42.530 --> 00:35:42.540 align:start position:0%
it says excessive dependencies are bad
 

00:35:42.540 --> 00:35:45.680 align:start position:0%
it says excessive dependencies are bad
excessive<00:35:43.079><c> requires</c><00:35:43.500><c> basically</c><00:35:44.400><c> are</c><00:35:44.640><c> bad</c><00:35:44.790><c> but</c>

00:35:45.680 --> 00:35:45.690 align:start position:0%
excessive requires basically are bad but
 

00:35:45.690 --> 00:35:49.630 align:start position:0%
excessive requires basically are bad but
cyclic<00:35:46.230><c> dependencies</c><00:35:46.920><c> are</c><00:35:47.160><c> especially</c><00:35:47.640><c> bad</c>

00:35:49.630 --> 00:35:49.640 align:start position:0%
cyclic dependencies are especially bad
 

00:35:49.640 --> 00:35:52.370 align:start position:0%
cyclic dependencies are especially bad
it<00:35:50.640><c> goes</c><00:35:50.819><c> on</c><00:35:50.970><c> to</c><00:35:51.089><c> say</c><00:35:51.349><c> generally</c><00:35:52.349><c> speaking</c>

00:35:52.370 --> 00:35:52.380 align:start position:0%
it goes on to say generally speaking
 

00:35:52.380 --> 00:35:54.500 align:start position:0%
it goes on to say generally speaking
cycles<00:35:53.069><c> are</c><00:35:53.220><c> always</c><00:35:53.460><c> bad</c><00:35:53.670><c> however</c><00:35:54.089><c> sometimes</c>

00:35:54.500 --> 00:35:54.510 align:start position:0%
cycles are always bad however sometimes
 

00:35:54.510 --> 00:35:57.349 align:start position:0%
cycles are always bad however sometimes
some<00:35:54.960><c> cycles</c><00:35:55.349><c> are</c><00:35:55.470><c> worse</c><00:35:55.650><c> than</c><00:35:55.800><c> others</c><00:35:56.359><c> cycles</c>

00:35:57.349 --> 00:35:57.359 align:start position:0%
some cycles are worse than others cycles
 

00:35:57.359 --> 00:35:59.960 align:start position:0%
some cycles are worse than others cycles
among<00:35:57.599><c> classes</c><00:35:58.230><c> are</c><00:35:58.470><c> tolerable</c><00:35:59.069><c> assuming</c>

00:35:59.960 --> 00:35:59.970 align:start position:0%
among classes are tolerable assuming
 

00:35:59.970 --> 00:36:01.730 align:start position:0%
among classes are tolerable assuming
they<00:36:00.119><c> don't</c><00:36:00.300><c> cause</c><00:36:00.720><c> cycles</c><00:36:01.349><c> among</c><00:36:01.589><c> the</c>

00:36:01.730 --> 00:36:01.740 align:start position:0%
they don't cause cycles among the
 

00:36:01.740 --> 00:36:03.819 align:start position:0%
they don't cause cycles among the
packages<00:36:02.190><c> or</c><00:36:02.369><c> modules</c><00:36:02.760><c> containing</c><00:36:03.180><c> them</c>

00:36:03.819 --> 00:36:03.829 align:start position:0%
packages or modules containing them
 

00:36:03.829 --> 00:36:06.470 align:start position:0%
packages or modules containing them
cycles<00:36:04.829><c> among</c><00:36:05.130><c> packages</c><00:36:05.700><c> may</c><00:36:05.880><c> also</c><00:36:06.119><c> be</c>

00:36:06.470 --> 00:36:06.480 align:start position:0%
cycles among packages may also be
 

00:36:06.480 --> 00:36:08.540 align:start position:0%
cycles among packages may also be
tolerable<00:36:06.960><c> assuming</c><00:36:07.890><c> they</c><00:36:08.010><c> don't</c><00:36:08.220><c> cause</c>

00:36:08.540 --> 00:36:08.550 align:start position:0%
tolerable assuming they don't cause
 

00:36:08.550 --> 00:36:11.440 align:start position:0%
tolerable assuming they don't cause
cycles<00:36:09.119><c> among</c><00:36:09.780><c> the</c><00:36:09.930><c> modules</c><00:36:10.319><c> containing</c><00:36:10.950><c> them</c>

00:36:11.440 --> 00:36:11.450 align:start position:0%
cycles among the modules containing them
 

00:36:11.450 --> 00:36:14.150 align:start position:0%
cycles among the modules containing them
module<00:36:12.450><c> relationships</c><00:36:13.200><c> must</c><00:36:13.530><c> never</c><00:36:13.829><c> be</c>

00:36:14.150 --> 00:36:14.160 align:start position:0%
module relationships must never be
 

00:36:14.160 --> 00:36:18.950 align:start position:0%
module relationships must never be
cyclic<00:36:16.339><c> however</c><00:36:17.339><c> in</c><00:36:17.790><c> real</c><00:36:18.000><c> life</c><00:36:18.240><c> there</c><00:36:18.869><c> are</c>

00:36:18.950 --> 00:36:18.960 align:start position:0%
cyclic however in real life there are
 

00:36:18.960 --> 00:36:21.760 align:start position:0%
cyclic however in real life there are
sometimes<00:36:19.170><c> cycles</c><00:36:19.770><c> which</c><00:36:20.130><c> seem</c><00:36:20.460><c> inevitable</c>

00:36:21.760 --> 00:36:21.770 align:start position:0%
sometimes cycles which seem inevitable
 

00:36:21.770 --> 00:36:27.069 align:start position:0%
sometimes cycles which seem inevitable
let's<00:36:22.770><c> look</c><00:36:22.980><c> at</c><00:36:23.160><c> a</c><00:36:23.339><c> real</c><00:36:23.760><c> life</c><00:36:24.030><c> example</c>

00:36:27.069 --> 00:36:27.079 align:start position:0%
 
 

00:36:27.079 --> 00:36:30.769 align:start position:0%
 
let's<00:36:28.079><c> assume</c><00:36:28.619><c> there</c><00:36:29.400><c> is</c><00:36:29.549><c> a</c><00:36:29.579><c> logging</c><00:36:30.119><c> project</c>

00:36:30.769 --> 00:36:30.779 align:start position:0%
let's assume there is a logging project
 

00:36:30.779 --> 00:36:34.759 align:start position:0%
let's assume there is a logging project
that<00:36:31.559><c> consists</c><00:36:32.220><c> of</c><00:36:32.250><c> two</c><00:36:32.789><c> modules</c><00:36:33.470><c> logging</c><00:36:34.470><c> API</c>

00:36:34.759 --> 00:36:34.769 align:start position:0%
that consists of two modules logging API
 

00:36:34.769 --> 00:36:37.970 align:start position:0%
that consists of two modules logging API
and<00:36:35.190><c> logging</c><00:36:36.089><c> in</c><00:36:36.269><c> pull</c><00:36:36.480><c> one</c><00:36:37.140><c> requiring</c><00:36:37.680><c> the</c>

00:36:37.970 --> 00:36:37.980 align:start position:0%
and logging in pull one requiring the
 

00:36:37.980 --> 00:36:41.210 align:start position:0%
and logging in pull one requiring the
other<00:36:38.720><c> so</c><00:36:39.720><c> that</c><00:36:39.900><c> the</c><00:36:40.200><c> logging</c><00:36:40.619><c> API</c><00:36:40.920><c> module</c>

00:36:41.210 --> 00:36:41.220 align:start position:0%
other so that the logging API module
 

00:36:41.220 --> 00:36:44.480 align:start position:0%
other so that the logging API module
requires<00:36:42.230><c> the</c><00:36:43.230><c> logging</c><00:36:43.619><c> implementation</c>

00:36:44.480 --> 00:36:44.490 align:start position:0%
requires the logging implementation
 

00:36:44.490 --> 00:36:48.019 align:start position:0%
requires the logging implementation
module<00:36:44.819><c> that's</c><00:36:45.180><c> the</c><00:36:45.420><c> blue</c><00:36:45.660><c> arrow</c><00:36:46.519><c> why</c><00:36:47.519><c> well</c>

00:36:48.019 --> 00:36:48.029 align:start position:0%
module that's the blue arrow why well
 

00:36:48.029 --> 00:36:52.059 align:start position:0%
module that's the blue arrow why well
maybe<00:36:48.539><c> a</c><00:36:48.630><c> static</c><00:36:49.319><c> method</c><00:36:49.589><c> in</c><00:36:50.160><c> the</c><00:36:50.549><c> API</c><00:36:50.970><c> module</c>

00:36:52.059 --> 00:36:52.069 align:start position:0%
maybe a static method in the API module
 

00:36:52.069 --> 00:36:56.079 align:start position:0%
maybe a static method in the API module
has<00:36:53.069><c> been</c><00:36:53.250><c> traditionally</c><00:36:53.430><c> using</c><00:36:54.119><c> reflection</c>

00:36:56.079 --> 00:36:56.089 align:start position:0%
has been traditionally using reflection
 

00:36:56.089 --> 00:37:00.620 align:start position:0%
has been traditionally using reflection
to<00:36:57.089><c> create</c><00:36:57.450><c> instances</c><00:36:58.170><c> of</c><00:36:59.299><c> the</c><00:37:00.299><c> locking</c>

00:37:00.620 --> 00:37:00.630 align:start position:0%
to create instances of the locking
 

00:37:00.630 --> 00:37:07.579 align:start position:0%
to create instances of the locking
implementation<00:37:04.609><c> now</c><00:37:05.609><c> let's</c><00:37:05.940><c> assume</c><00:37:06.440><c> there</c><00:37:07.440><c> is</c>

00:37:07.579 --> 00:37:07.589 align:start position:0%
implementation now let's assume there is
 

00:37:07.589 --> 00:37:10.430 align:start position:0%
implementation now let's assume there is
some<00:37:07.619><c> HTTP</c><00:37:08.579><c> client</c><00:37:08.940><c> module</c><00:37:09.089><c> in</c><00:37:09.539><c> an</c><00:37:09.809><c> unrelated</c>

00:37:10.430 --> 00:37:10.440 align:start position:0%
some HTTP client module in an unrelated
 

00:37:10.440 --> 00:37:14.779 align:start position:0%
some HTTP client module in an unrelated
project<00:37:11.210><c> it</c><00:37:12.210><c> wants</c><00:37:12.539><c> to</c><00:37:12.660><c> log</c><00:37:12.839><c> HTTP</c><00:37:13.619><c> requests</c><00:37:14.220><c> so</c>

00:37:14.779 --> 00:37:14.789 align:start position:0%
project it wants to log HTTP requests so
 

00:37:14.789 --> 00:37:17.289 align:start position:0%
project it wants to log HTTP requests so
it<00:37:14.910><c> starts</c><00:37:15.269><c> to</c><00:37:15.450><c> require</c><00:37:15.960><c> another</c><00:37:16.559><c> blue</c><00:37:16.829><c> arrow</c>

00:37:17.289 --> 00:37:17.299 align:start position:0%
it starts to require another blue arrow
 

00:37:17.299 --> 00:37:20.630 align:start position:0%
it starts to require another blue arrow
the<00:37:18.299><c> logging</c><00:37:18.660><c> API</c><00:37:18.930><c> module</c><00:37:19.369><c> there</c><00:37:20.369><c> are</c><00:37:20.490><c> no</c>

00:37:20.630 --> 00:37:20.640 align:start position:0%
the logging API module there are no
 

00:37:20.640 --> 00:37:24.009 align:start position:0%
the logging API module there are no
services<00:37:21.150><c> yet</c><00:37:21.299><c> it's</c><00:37:21.480><c> it's</c><00:37:21.779><c> just</c><00:37:22.170><c> too</c><00:37:22.289><c> requires</c>

00:37:24.009 --> 00:37:24.019 align:start position:0%
services yet it's it's just too requires
 

00:37:24.019 --> 00:37:28.789 align:start position:0%
services yet it's it's just too requires
and<00:37:25.880><c> finally</c><00:37:26.880><c> let's</c><00:37:27.839><c> assume</c><00:37:28.230><c> that</c><00:37:28.289><c> the</c>

00:37:28.789 --> 00:37:28.799 align:start position:0%
and finally let's assume that the
 

00:37:28.799 --> 00:37:32.059 align:start position:0%
and finally let's assume that the
logging<00:37:29.579><c> implementation</c><00:37:30.359><c> module</c><00:37:30.859><c> wants</c><00:37:31.859><c> to</c>

00:37:32.059 --> 00:37:32.069 align:start position:0%
logging implementation module wants to
 

00:37:32.069 --> 00:37:34.370 align:start position:0%
logging implementation module wants to
add<00:37:32.279><c> a</c><00:37:32.309><c> feature</c><00:37:32.789><c> where</c><00:37:33.329><c> it</c><00:37:33.509><c> can</c><00:37:33.660><c> upload</c><00:37:34.049><c> logs</c>

00:37:34.370 --> 00:37:34.380 align:start position:0%
add a feature where it can upload logs
 

00:37:34.380 --> 00:37:38.120 align:start position:0%
add a feature where it can upload logs
to<00:37:34.680><c> a</c><00:37:34.710><c> web</c><00:37:34.950><c> server</c><00:37:36.170><c> at</c><00:37:37.170><c> this</c><00:37:37.410><c> point</c><00:37:37.650><c> the</c><00:37:37.829><c> author</c>

00:37:38.120 --> 00:37:38.130 align:start position:0%
to a web server at this point the author
 

00:37:38.130 --> 00:37:42.589 align:start position:0%
to a web server at this point the author
of<00:37:38.700><c> logging</c><00:37:39.480><c> in</c><00:37:39.720><c> pull</c><00:37:39.990><c> is</c><00:37:40.279><c> out</c><00:37:41.279><c> of</c><00:37:41.309><c> luck</c><00:37:41.670><c> in</c><00:37:42.029><c> JDK</c>

00:37:42.589 --> 00:37:42.599 align:start position:0%
of logging in pull is out of luck in JDK
 

00:37:42.599 --> 00:37:46.999 align:start position:0%
of logging in pull is out of luck in JDK
9<00:37:42.950><c> because</c><00:37:43.950><c> for</c><00:37:44.700><c> logging</c><00:37:44.849><c> imple</c><00:37:45.299><c> to</c><00:37:45.450><c> depend</c><00:37:46.009><c> on</c>

00:37:46.999 --> 00:37:47.009 align:start position:0%
9 because for logging imple to depend on
 

00:37:47.009 --> 00:37:50.180 align:start position:0%
9 because for logging imple to depend on
HTTP<00:37:47.670><c> client</c><00:37:48.089><c> via</c><00:37:48.450><c> are</c><00:37:48.900><c> requires</c><00:37:49.319><c> the</c><00:37:49.980><c> third</c>

00:37:50.180 --> 00:37:50.190 align:start position:0%
HTTP client via are requires the third
 

00:37:50.190 --> 00:37:52.220 align:start position:0%
HTTP client via are requires the third
blue<00:37:50.369><c> arrow</c><00:37:50.670><c> would</c><00:37:51.180><c> would</c><00:37:51.480><c> create</c><00:37:51.960><c> a</c><00:37:51.990><c> cycle</c>

00:37:52.220 --> 00:37:52.230 align:start position:0%
blue arrow would would create a cycle
 

00:37:52.230 --> 00:37:56.569 align:start position:0%
blue arrow would would create a cycle
and<00:37:52.880><c> worse</c><00:37:53.880><c> it</c><00:37:54.480><c> would</c><00:37:54.660><c> create</c><00:37:55.140><c> a</c><00:37:55.380><c> cycle</c><00:37:55.859><c> across</c>

00:37:56.569 --> 00:37:56.579 align:start position:0%
and worse it would create a cycle across
 

00:37:56.579 --> 00:38:00.019 align:start position:0%
and worse it would create a cycle across
projects<00:37:57.769><c> that's</c><00:37:58.769><c> a</c><00:37:58.920><c> very</c><00:37:59.099><c> uncomfortable</c>

00:38:00.019 --> 00:38:00.029 align:start position:0%
projects that's a very uncomfortable
 

00:38:00.029 --> 00:38:03.049 align:start position:0%
projects that's a very uncomfortable
level<00:38:00.359><c> of</c><00:38:00.720><c> coupling</c><00:38:01.170><c> to</c><00:38:01.829><c> manage</c><00:38:02.160><c> for</c><00:38:02.670><c> the</c><00:38:02.849><c> rest</c>

00:38:03.049 --> 00:38:03.059 align:start position:0%
level of coupling to manage for the rest
 

00:38:03.059 --> 00:38:07.700 align:start position:0%
level of coupling to manage for the rest
of<00:38:03.240><c> time</c><00:38:04.369><c> what</c><00:38:05.369><c> can</c><00:38:05.640><c> the</c><00:38:05.789><c> author</c><00:38:06.059><c> of</c><00:38:06.710><c> logging</c>

00:38:07.700 --> 00:38:07.710 align:start position:0%
of time what can the author of logging
 

00:38:07.710 --> 00:38:10.670 align:start position:0%
of time what can the author of logging
in<00:38:07.920><c> pull</c><00:38:08.130><c> do</c><00:38:09.119><c> to</c><00:38:09.569><c> upload</c><00:38:10.049><c> logs</c><00:38:10.289><c> to</c><00:38:10.470><c> a</c><00:38:10.500><c> web</c>

00:38:10.670 --> 00:38:10.680 align:start position:0%
in pull do to upload logs to a web
 

00:38:10.680 --> 00:38:13.069 align:start position:0%
in pull do to upload logs to a web
server<00:38:10.980><c> well</c><00:38:11.730><c> one</c><00:38:12.269><c> option</c><00:38:12.420><c> is</c><00:38:12.690><c> to</c><00:38:12.839><c> find</c>

00:38:13.069 --> 00:38:13.079 align:start position:0%
server well one option is to find
 

00:38:13.079 --> 00:38:15.049 align:start position:0%
server well one option is to find
another<00:38:13.380><c> project</c><00:38:13.650><c> that</c><00:38:13.920><c> offers</c><00:38:14.339><c> an</c><00:38:14.460><c> HTTP</c>

00:38:15.049 --> 00:38:15.059 align:start position:0%
another project that offers an HTTP
 

00:38:15.059 --> 00:38:17.120 align:start position:0%
another project that offers an HTTP
client<00:38:15.180><c> module</c><00:38:15.740><c> but</c><00:38:16.740><c> that</c><00:38:16.859><c> seems</c><00:38:17.069><c> like</c>

00:38:17.120 --> 00:38:17.130 align:start position:0%
client module but that seems like
 

00:38:17.130 --> 00:38:21.079 align:start position:0%
client module but that seems like
cheating<00:38:18.440><c> another</c><00:38:19.440><c> option</c><00:38:19.859><c> is</c><00:38:20.039><c> to</c><00:38:20.339><c> email</c><00:38:20.670><c> the</c>

00:38:21.079 --> 00:38:21.089 align:start position:0%
cheating another option is to email the
 

00:38:21.089 --> 00:38:24.410 align:start position:0%
cheating another option is to email the
author<00:38:21.240><c> of</c><00:38:21.690><c> the</c><00:38:21.869><c> HTTP</c><00:38:22.529><c> client</c><00:38:22.890><c> module</c><00:38:23.269><c> and</c><00:38:24.269><c> ask</c>

00:38:24.410 --> 00:38:24.420 align:start position:0%
author of the HTTP client module and ask
 

00:38:24.420 --> 00:38:27.380 align:start position:0%
author of the HTTP client module and ask
them<00:38:24.630><c> to</c><00:38:24.809><c> stop</c><00:38:25.049><c> requiring</c><00:38:25.500><c> logging</c><00:38:26.009><c> API</c><00:38:26.390><c> but</c>

00:38:27.380 --> 00:38:27.390 align:start position:0%
them to stop requiring logging API but
 

00:38:27.390 --> 00:38:29.690 align:start position:0%
them to stop requiring logging API but
now<00:38:27.509><c> the</c><00:38:27.569><c> author</c><00:38:27.809><c> of</c><00:38:28.049><c> HTTP</c><00:38:28.589><c> client</c><00:38:28.980><c> is</c><00:38:29.160><c> the</c>

00:38:29.690 --> 00:38:29.700 align:start position:0%
now the author of HTTP client is the
 

00:38:29.700 --> 00:38:31.430 align:start position:0%
now the author of HTTP client is the
person<00:38:30.029><c> in</c><00:38:30.119><c> the</c><00:38:30.210><c> position</c><00:38:30.630><c> of</c><00:38:30.809><c> find</c><00:38:31.230><c> another</c>

00:38:31.430 --> 00:38:31.440 align:start position:0%
person in the position of find another
 

00:38:31.440 --> 00:38:34.880 align:start position:0%
person in the position of find another
project<00:38:32.420><c> even</c><00:38:33.420><c> if</c><00:38:33.690><c> the</c><00:38:33.869><c> author</c><00:38:34.049><c> of</c><00:38:34.230><c> HTTP</c>

00:38:34.880 --> 00:38:34.890 align:start position:0%
project even if the author of HTTP
 

00:38:34.890 --> 00:38:36.140 align:start position:0%
project even if the author of HTTP
client<00:38:35.220><c> is</c><00:38:35.309><c> willing</c><00:38:35.430><c> to</c><00:38:35.609><c> use</c><00:38:35.880><c> a</c><00:38:35.910><c> different</c>

00:38:36.140 --> 00:38:36.150 align:start position:0%
client is willing to use a different
 

00:38:36.150 --> 00:38:37.310 align:start position:0%
client is willing to use a different
logging

00:38:37.310 --> 00:38:37.320 align:start position:0%
logging
 

00:38:37.320 --> 00:38:39.560 align:start position:0%
logging
the<00:38:38.040><c> author</c><00:38:38.190><c> of</c><00:38:38.490><c> logging</c><00:38:38.910><c> imple</c><00:38:39.240><c> would</c><00:38:39.390><c> still</c>

00:38:39.560 --> 00:38:39.570 align:start position:0%
the author of logging imple would still
 

00:38:39.570 --> 00:38:41.900 align:start position:0%
the author of logging imple would still
have<00:38:39.690><c> to</c><00:38:39.780><c> wait</c><00:38:39.990><c> for</c><00:38:40.290><c> a</c><00:38:40.320><c> new</c><00:38:40.350><c> release</c><00:38:40.950><c> of</c><00:38:41.310><c> HTTP</c>

00:38:41.900 --> 00:38:41.910 align:start position:0%
have to wait for a new release of HTTP
 

00:38:41.910 --> 00:38:47.140 align:start position:0%
have to wait for a new release of HTTP
clients<00:38:42.390><c> that</c><00:38:42.570><c> did</c><00:38:42.690><c> so</c><00:38:44.270><c> who</c><00:38:45.270><c> is</c><00:38:45.420><c> at</c><00:38:45.630><c> fault</c><00:38:46.050><c> here</c>

00:38:47.140 --> 00:38:47.150 align:start position:0%
clients that did so who is at fault here
 

00:38:47.150 --> 00:38:50.540 align:start position:0%
clients that did so who is at fault here
it's<00:38:48.150><c> not</c><00:38:48.600><c> the</c><00:38:48.990><c> logging</c><00:38:49.440><c> in</c><00:38:49.650><c> pull</c><00:38:49.860><c> module</c><00:38:50.220><c> who</c>

00:38:50.540 --> 00:38:50.550 align:start position:0%
it's not the logging in pull module who
 

00:38:50.550 --> 00:38:54.260 align:start position:0%
it's not the logging in pull module who
is<00:38:50.670><c> just</c><00:38:51.000><c> trying</c><00:38:51.390><c> to</c><00:38:51.600><c> reuse</c><00:38:53.120><c> remember</c><00:38:54.120><c> in</c><00:38:54.210><c> the</c>

00:38:54.260 --> 00:38:54.270 align:start position:0%
is just trying to reuse remember in the
 

00:38:54.270 --> 00:38:56.990 align:start position:0%
is just trying to reuse remember in the
keynote<00:38:54.570><c> Mark</c><00:38:54.870><c> said</c><00:38:55.200><c> a</c><00:38:55.410><c> module</c><00:38:56.400><c> is</c><00:38:56.580><c> a</c><00:38:56.610><c> set</c><00:38:56.880><c> of</c>

00:38:56.990 --> 00:38:57.000 align:start position:0%
keynote Mark said a module is a set of
 

00:38:57.000 --> 00:39:01.280 align:start position:0%
keynote Mark said a module is a set of
packages<00:38:57.330><c> designed</c><00:38:57.720><c> for</c><00:38:58.140><c> reuse</c><00:38:59.900><c> the</c><00:39:00.900><c> logging</c>

00:39:01.280 --> 00:39:01.290 align:start position:0%
packages designed for reuse the logging
 

00:39:01.290 --> 00:39:04.400 align:start position:0%
packages designed for reuse the logging
imple<00:39:01.590><c> module</c><00:39:01.920><c> is</c><00:39:02.430><c> just</c><00:39:02.970><c> trying</c><00:39:03.360><c> to</c><00:39:03.510><c> reuse</c><00:39:04.020><c> the</c>

00:39:04.400 --> 00:39:04.410 align:start position:0%
imple module is just trying to reuse the
 

00:39:04.410 --> 00:39:07.460 align:start position:0%
imple module is just trying to reuse the
logically<00:39:04.950><c> independence</c><00:39:06.110><c> HTTP</c><00:39:07.110><c> client</c>

00:39:07.460 --> 00:39:07.470 align:start position:0%
logically independence HTTP client
 

00:39:07.470 --> 00:39:10.190 align:start position:0%
logically independence HTTP client
module<00:39:07.590><c> and</c><00:39:08.510><c> I</c><00:39:09.510><c> don't</c><00:39:09.750><c> think</c><00:39:09.930><c> the</c><00:39:10.050><c> problem</c>

00:39:10.190 --> 00:39:10.200 align:start position:0%
module and I don't think the problem
 

00:39:10.200 --> 00:39:13.070 align:start position:0%
module and I don't think the problem
lies<00:39:10.410><c> with</c><00:39:10.860><c> the</c><00:39:11.010><c> HTTP</c><00:39:11.700><c> client</c><00:39:12.060><c> module</c><00:39:12.180><c> who</c><00:39:12.930><c> is</c>

00:39:13.070 --> 00:39:13.080 align:start position:0%
lies with the HTTP client module who is
 

00:39:13.080 --> 00:39:16.000 align:start position:0%
lies with the HTTP client module who is
just<00:39:13.320><c> trying</c><00:39:13.590><c> to</c><00:39:13.770><c> reuse</c><00:39:14.310><c> a</c><00:39:14.670><c> public</c><00:39:15.450><c> logging</c>

00:39:16.000 --> 00:39:16.010 align:start position:0%
just trying to reuse a public logging
 

00:39:16.010 --> 00:39:23.900 align:start position:0%
just trying to reuse a public logging
API<00:39:19.970><c> the</c><00:39:20.970><c> fault</c><00:39:21.270><c> lies</c><00:39:21.600><c> with</c><00:39:22.110><c> the</c><00:39:22.860><c> logging</c><00:39:23.430><c> API</c>

00:39:23.900 --> 00:39:23.910 align:start position:0%
API the fault lies with the logging API
 

00:39:23.910 --> 00:39:29.360 align:start position:0%
API the fault lies with the logging API
module<00:39:24.380><c> it</c><00:39:25.380><c> is</c><00:39:25.860><c> poor</c><00:39:26.280><c> style</c><00:39:27.350><c> for</c><00:39:28.350><c> an</c><00:39:28.470><c> API</c><00:39:28.830><c> to</c>

00:39:29.360 --> 00:39:29.370 align:start position:0%
module it is poor style for an API to
 

00:39:29.370 --> 00:39:32.840 align:start position:0%
module it is poor style for an API to
rely<00:39:29.760><c> to</c><00:39:30.450><c> require</c><00:39:30.900><c> its</c><00:39:31.320><c> implementation</c><00:39:31.950><c> for</c>

00:39:32.840 --> 00:39:32.850 align:start position:0%
rely to require its implementation for
 

00:39:32.850 --> 00:39:33.670 align:start position:0%
rely to require its implementation for
two<00:39:33.000><c> reasons</c>

00:39:33.670 --> 00:39:33.680 align:start position:0%
two reasons
 

00:39:33.680 --> 00:39:37.160 align:start position:0%
two reasons
first<00:39:34.680><c> it</c><00:39:35.490><c> means</c><00:39:35.780><c> implementation</c><00:39:36.780><c> details</c>

00:39:37.160 --> 00:39:37.170 align:start position:0%
first it means implementation details
 

00:39:37.170 --> 00:39:40.130 align:start position:0%
first it means implementation details
are<00:39:37.410><c> likely</c><00:39:37.740><c> to</c><00:39:37.920><c> leak</c><00:39:38.190><c> into</c><00:39:38.880><c> the</c><00:39:39.120><c> API</c><00:39:39.480><c> which</c>

00:39:40.130 --> 00:39:40.140 align:start position:0%
are likely to leak into the API which
 

00:39:40.140 --> 00:39:44.180 align:start position:0%
are likely to leak into the API which
makes<00:39:40.350><c> the</c><00:39:40.500><c> API</c><00:39:40.830><c> less</c><00:39:41.280><c> understandable</c><00:39:43.190><c> second</c>

00:39:44.180 --> 00:39:44.190 align:start position:0%
makes the API less understandable second
 

00:39:44.190 --> 00:39:48.230 align:start position:0%
makes the API less understandable second
it<00:39:44.730><c> means</c><00:39:45.030><c> that</c><00:39:45.500><c> exercising</c><00:39:46.500><c> the</c><00:39:46.650><c> API</c><00:39:47.240><c> needs</c>

00:39:48.230 --> 00:39:48.240 align:start position:0%
it means that exercising the API needs
 

00:39:48.240 --> 00:39:50.870 align:start position:0%
it means that exercising the API needs
the<00:39:48.420><c> entire</c><00:39:48.540><c> implementation</c><00:39:49.490><c> to</c><00:39:50.490><c> be</c><00:39:50.580><c> up</c><00:39:50.730><c> and</c>

00:39:50.870 --> 00:39:50.880 align:start position:0%
the entire implementation to be up and
 

00:39:50.880 --> 00:39:52.970 align:start position:0%
the entire implementation to be up and
running<00:39:51.030><c> which</c><00:39:51.720><c> makes</c><00:39:51.990><c> the</c><00:39:52.140><c> API</c><00:39:52.650><c> less</c>

00:39:52.970 --> 00:39:52.980 align:start position:0%
running which makes the API less
 

00:39:52.980 --> 00:39:56.180 align:start position:0%
running which makes the API less
testable<00:39:53.870><c> plus</c><00:39:54.870><c> given</c><00:39:55.530><c> everything</c><00:39:55.860><c> I've</c><00:39:55.980><c> said</c>

00:39:56.180 --> 00:39:56.190 align:start position:0%
testable plus given everything I've said
 

00:39:56.190 --> 00:39:58.370 align:start position:0%
testable plus given everything I've said
so<00:39:56.820><c> far</c><00:39:56.850><c> it's</c><00:39:57.270><c> kind</c><00:39:57.420><c> of</c><00:39:57.450><c> obviously</c><00:39:58.200><c> wrong</c>

00:39:58.370 --> 00:39:58.380 align:start position:0%
so far it's kind of obviously wrong
 

00:39:58.380 --> 00:40:01.430 align:start position:0%
so far it's kind of obviously wrong
consider<00:39:59.340><c> the</c><00:39:59.520><c> Java</c><00:39:59.760><c> base</c><00:40:00.030><c> module</c><00:40:00.440><c> it</c>

00:40:01.430 --> 00:40:01.440 align:start position:0%
consider the Java base module it
 

00:40:01.440 --> 00:40:03.620 align:start position:0%
consider the Java base module it
declares<00:40:01.980><c> the</c><00:40:02.280><c> Java</c><00:40:02.580><c> util</c><00:40:03.000><c> collection</c>

00:40:03.620 --> 00:40:03.630 align:start position:0%
declares the Java util collection
 

00:40:03.630 --> 00:40:06.050 align:start position:0%
declares the Java util collection
interface<00:40:04.050><c> but</c><00:40:04.890><c> it</c><00:40:04.920><c> will</c><00:40:05.070><c> be</c><00:40:05.190><c> stupid</c><00:40:05.700><c> for</c><00:40:05.970><c> the</c>

00:40:06.050 --> 00:40:06.060 align:start position:0%
interface but it will be stupid for the
 

00:40:06.060 --> 00:40:08.420 align:start position:0%
interface but it will be stupid for the
Java<00:40:06.300><c> base</c><00:40:06.510><c> module</c><00:40:06.780><c> to</c><00:40:07.170><c> depend</c><00:40:07.590><c> on</c><00:40:07.800><c> to</c><00:40:08.070><c> require</c>

00:40:08.420 --> 00:40:08.430 align:start position:0%
Java base module to depend on to require
 

00:40:08.430 --> 00:40:10.400 align:start position:0%
Java base module to depend on to require
any<00:40:08.940><c> module</c><00:40:09.660><c> that</c><00:40:09.840><c> implements</c><00:40:10.260><c> that</c>

00:40:10.400 --> 00:40:10.410 align:start position:0%
any module that implements that
 

00:40:10.410 --> 00:40:13.100 align:start position:0%
any module that implements that
interface<00:40:11.540><c> implementations</c><00:40:12.540><c> depend</c><00:40:12.930><c> on</c>

00:40:13.100 --> 00:40:13.110 align:start position:0%
interface implementations depend on
 

00:40:13.110 --> 00:40:18.680 align:start position:0%
interface implementations depend on
interfaces<00:40:13.950><c> not</c><00:40:14.430><c> the</c><00:40:14.550><c> other</c><00:40:14.700><c> way</c><00:40:14.850><c> around</c><00:40:17.690><c> so</c>

00:40:18.680 --> 00:40:18.690 align:start position:0%
interfaces not the other way around so
 

00:40:18.690 --> 00:40:22.610 align:start position:0%
interfaces not the other way around so
the<00:40:19.170><c> best</c><00:40:19.410><c> outcome</c><00:40:20.040><c> is</c><00:40:20.940><c> for</c><00:40:21.540><c> logging</c><00:40:22.080><c> in</c><00:40:22.410><c> pull</c>

00:40:22.610 --> 00:40:22.620 align:start position:0%
the best outcome is for logging in pull
 

00:40:22.620 --> 00:40:25.880 align:start position:0%
the best outcome is for logging in pull
to<00:40:23.250><c> depend</c><00:40:23.670><c> on</c><00:40:24.000><c> logging</c><00:40:24.330><c> API</c><00:40:24.810><c> rather</c><00:40:25.530><c> than</c><00:40:25.800><c> the</c>

00:40:25.880 --> 00:40:25.890 align:start position:0%
to depend on logging API rather than the
 

00:40:25.890 --> 00:40:27.230 align:start position:0%
to depend on logging API rather than the
other<00:40:26.010><c> way</c><00:40:26.130><c> around</c><00:40:26.240><c> implementations</c>

00:40:27.230 --> 00:40:27.240 align:start position:0%
other way around implementations
 

00:40:27.240 --> 00:40:29.870 align:start position:0%
other way around implementations
dependent<00:40:27.660><c> interfaces</c><00:40:28.430><c> but</c><00:40:29.430><c> then</c><00:40:29.550><c> I</c><00:40:29.640><c> hear</c><00:40:29.790><c> you</c>

00:40:29.870 --> 00:40:29.880 align:start position:0%
dependent interfaces but then I hear you
 

00:40:29.880 --> 00:40:31.790 align:start position:0%
dependent interfaces but then I hear you
ask<00:40:30.090><c> how</c><00:40:30.600><c> does</c><00:40:30.660><c> the</c><00:40:30.900><c> static</c><00:40:31.290><c> method</c><00:40:31.440><c> in</c><00:40:31.710><c> the</c>

00:40:31.790 --> 00:40:31.800 align:start position:0%
ask how does the static method in the
 

00:40:31.800 --> 00:40:34.970 align:start position:0%
ask how does the static method in the
API<00:40:32.100><c> create</c><00:40:33.030><c> instances</c><00:40:33.870><c> of</c><00:40:34.080><c> the</c><00:40:34.590><c> logging</c>

00:40:34.970 --> 00:40:34.980 align:start position:0%
API create instances of the logging
 

00:40:34.980 --> 00:40:39.550 align:start position:0%
API create instances of the logging
implementation<00:40:35.780><c> of</c><00:40:36.780><c> course</c><00:40:37.080><c> with</c><00:40:37.320><c> services</c>

00:40:39.550 --> 00:40:39.560 align:start position:0%
implementation of course with services
 

00:40:39.560 --> 00:40:41.810 align:start position:0%
implementation of course with services
here's<00:40:40.560><c> what</c><00:40:40.830><c> the</c><00:40:40.980><c> logging</c><00:40:41.250><c> project</c><00:40:41.670><c> should</c>

00:40:41.810 --> 00:40:41.820 align:start position:0%
here's what the logging project should
 

00:40:41.820 --> 00:40:43.000 align:start position:0%
here's what the logging project should
do

00:40:43.000 --> 00:40:43.010 align:start position:0%
do
 

00:40:43.010 --> 00:40:46.240 align:start position:0%
do
first<00:40:43.760><c> the</c><00:40:44.420><c> logging</c><00:40:44.780><c> API</c><00:40:45.140><c> module</c><00:40:45.440><c> defines</c><00:40:46.100><c> a</c>

00:40:46.240 --> 00:40:46.250 align:start position:0%
first the logging API module defines a
 

00:40:46.250 --> 00:40:48.520 align:start position:0%
first the logging API module defines a
service<00:40:46.640><c> type</c><00:40:46.820><c> logger</c><00:40:47.150><c> in</c><00:40:47.480><c> some</c><00:40:47.840><c> package</c><00:40:48.200><c> and</c>

00:40:48.520 --> 00:40:48.530 align:start position:0%
service type logger in some package and
 

00:40:48.530 --> 00:40:51.580 align:start position:0%
service type logger in some package and
that<00:40:49.520><c> package</c><00:40:49.880><c> is</c><00:40:50.060><c> exported</c><00:40:50.810><c> widely</c><00:40:51.350><c> the</c>

00:40:51.580 --> 00:40:51.590 align:start position:0%
that package is exported widely the
 

00:40:51.590 --> 00:40:53.350 align:start position:0%
that package is exported widely the
Green<00:40:51.800><c> Arrow's</c><00:40:52.160><c> exported</c><00:40:52.760><c> consumers</c>

00:40:53.350 --> 00:40:53.360 align:start position:0%
Green Arrow's exported consumers
 

00:40:53.360 --> 00:40:57.790 align:start position:0%
Green Arrow's exported consumers
exported<00:40:53.930><c> to</c><00:40:54.140><c> providers</c><00:40:55.210><c> second</c><00:40:56.470><c> the</c><00:40:57.470><c> logging</c>

00:40:57.790 --> 00:40:57.800 align:start position:0%
exported to providers second the logging
 

00:40:57.800 --> 00:41:00.280 align:start position:0%
exported to providers second the logging
implement<00:40:58.280><c> the</c><00:40:58.910><c> comes</c><00:40:59.180><c> a</c><00:40:59.330><c> provider</c><00:40:59.660><c> module</c>

00:41:00.280 --> 00:41:00.290 align:start position:0%
implement the comes a provider module
 

00:41:00.290 --> 00:41:04.150 align:start position:0%
implement the comes a provider module
it<00:41:00.980><c> requires</c><00:41:01.580><c> logging</c><00:41:02.450><c> API</c><00:41:02.750><c> that's</c><00:41:03.230><c> the</c><00:41:03.530><c> blue</c>

00:41:04.150 --> 00:41:04.160 align:start position:0%
it requires logging API that's the blue
 

00:41:04.160 --> 00:41:08.260 align:start position:0%
it requires logging API that's the blue
arrow<00:41:04.340><c> and</c><00:41:05.920><c> provides</c><00:41:06.920><c> an</c><00:41:07.250><c> implementation</c><00:41:07.490><c> of</c>

00:41:08.260 --> 00:41:08.270 align:start position:0%
arrow and provides an implementation of
 

00:41:08.270 --> 00:41:10.540 align:start position:0%
arrow and provides an implementation of
the<00:41:08.630><c> service</c><00:41:08.960><c> type</c><00:41:09.200><c> the</c><00:41:09.890><c> purple</c><00:41:10.280><c> arrow</c>

00:41:10.540 --> 00:41:10.550 align:start position:0%
the service type the purple arrow
 

00:41:10.550 --> 00:41:13.000 align:start position:0%
the service type the purple arrow
note<00:41:11.450><c> that</c><00:41:11.480><c> the</c><00:41:11.780><c> logging</c><00:41:12.140><c> implementation</c>

00:41:13.000 --> 00:41:13.010 align:start position:0%
note that the logging implementation
 

00:41:13.010 --> 00:41:19.030 align:start position:0%
note that the logging implementation
module<00:41:13.370><c> does</c><00:41:14.150><c> not</c><00:41:14.420><c> export</c><00:41:15.200><c> anything</c><00:41:18.040><c> finally</c>

00:41:19.030 --> 00:41:19.040 align:start position:0%
module does not export anything finally
 

00:41:19.040 --> 00:41:23.590 align:start position:0%
module does not export anything finally
the<00:41:20.030><c> logging</c><00:41:20.720><c> API</c><00:41:21.260><c> module</c><00:41:22.210><c> with</c><00:41:23.210><c> the</c><00:41:23.300><c> service</c>

00:41:23.590 --> 00:41:23.600 align:start position:0%
the logging API module with the service
 

00:41:23.600 --> 00:41:27.850 align:start position:0%
the logging API module with the service
type<00:41:23.780><c> acts</c><00:41:24.110><c> as</c><00:41:24.560><c> its</c><00:41:25.040><c> own</c><00:41:25.480><c> consumer</c><00:41:26.500><c> it</c><00:41:27.500><c> says</c>

00:41:27.850 --> 00:41:27.860 align:start position:0%
type acts as its own consumer it says
 

00:41:27.860 --> 00:41:30.430 align:start position:0%
type acts as its own consumer it says
that<00:41:28.100><c> it</c><00:41:28.220><c> uses</c><00:41:28.610><c> the</c><00:41:29.300><c> logger</c><00:41:29.510><c> service</c><00:41:29.930><c> type</c><00:41:30.140><c> and</c>

00:41:30.430 --> 00:41:30.440 align:start position:0%
that it uses the logger service type and
 

00:41:30.440 --> 00:41:33.100 align:start position:0%
that it uses the logger service type and
then<00:41:30.920><c> at</c><00:41:31.040><c> runtime</c><00:41:31.220><c> it</c><00:41:31.820><c> asks</c><00:41:32.390><c> service</c><00:41:32.870><c> loader</c>

00:41:33.100 --> 00:41:33.110 align:start position:0%
then at runtime it asks service loader
 

00:41:33.110 --> 00:41:35.980 align:start position:0%
then at runtime it asks service loader
for<00:41:33.740><c> an</c><00:41:33.860><c> instance</c><00:41:34.220><c> of</c><00:41:34.370><c> logger</c><00:41:34.580><c> this</c><00:41:35.570><c> instance</c>

00:41:35.980 --> 00:41:35.990 align:start position:0%
for an instance of logger this instance
 

00:41:35.990 --> 00:41:37.840 align:start position:0%
for an instance of logger this instance
would<00:41:36.140><c> then</c><00:41:36.260><c> be</c><00:41:36.380><c> returned</c><00:41:36.740><c> up</c><00:41:36.980><c> to</c><00:41:37.160><c> the</c><00:41:37.250><c> HTTP</c>

00:41:37.840 --> 00:41:37.850 align:start position:0%
would then be returned up to the HTTP
 

00:41:37.850 --> 00:41:40.360 align:start position:0%
would then be returned up to the HTTP
client<00:41:38.240><c> module</c><00:41:38.390><c> which</c><00:41:39.290><c> has</c><00:41:39.500><c> no</c><00:41:39.710><c> idea</c><00:41:40.100><c> of</c><00:41:40.160><c> the</c>

00:41:40.360 --> 00:41:40.370 align:start position:0%
client module which has no idea of the
 

00:41:40.370 --> 00:41:43.180 align:start position:0%
client module which has no idea of the
relationship<00:41:41.150><c> between</c><00:41:41.660><c> logging</c><00:41:42.230><c> api</c><00:41:42.560><c> and</c>

00:41:43.180 --> 00:41:43.190 align:start position:0%
relationship between logging api and
 

00:41:43.190 --> 00:41:46.600 align:start position:0%
relationship between logging api and
locking<00:41:44.120><c> implementation</c><00:41:45.070><c> it</c><00:41:46.070><c> occurs</c><00:41:46.340><c> to</c><00:41:46.370><c> me</c><00:41:46.580><c> I</c>

00:41:46.600 --> 00:41:46.610 align:start position:0%
locking implementation it occurs to me I
 

00:41:46.610 --> 00:41:49.980 align:start position:0%
locking implementation it occurs to me I
should<00:41:46.760><c> have</c><00:41:46.880><c> deleted</c><00:41:47.560><c> the</c><00:41:48.560><c> big</c><00:41:48.770><c> blue</c><00:41:49.280><c> arrow</c>

00:41:49.980 --> 00:41:49.990 align:start position:0%
should have deleted the big blue arrow
 

00:41:49.990 --> 00:41:53.380 align:start position:0%
should have deleted the big blue arrow
from<00:41:50.990><c> logging</c><00:41:51.350><c> in</c><00:41:51.470><c> pull</c><00:41:51.650><c> up</c><00:41:52.010><c> to</c><00:41:52.220><c> HTTP</c><00:41:52.880><c> clients</c>

00:41:53.380 --> 00:41:53.390 align:start position:0%
from logging in pull up to HTTP clients
 

00:41:53.390 --> 00:41:55.570 align:start position:0%
from logging in pull up to HTTP clients
it<00:41:53.870><c> should</c><00:41:54.110><c> be</c><00:41:54.230><c> gone</c><00:41:54.470><c> pretend</c><00:41:55.190><c> it's</c><00:41:55.370><c> not</c><00:41:55.520><c> there</c>

00:41:55.570 --> 00:41:55.580 align:start position:0%
it should be gone pretend it's not there
 

00:41:55.580 --> 00:41:57.310 align:start position:0%
it should be gone pretend it's not there
I<00:41:56.030><c> know</c><00:41:56.210><c> you're</c><00:41:56.450><c> all</c><00:41:56.600><c> pretending</c><00:41:57.140><c> it's</c><00:41:57.260><c> not</c>

00:41:57.310 --> 00:41:57.320 align:start position:0%
I know you're all pretending it's not
 

00:41:57.320 --> 00:42:03.130 align:start position:0%
I know you're all pretending it's not
there<00:41:57.470><c> right</c><00:41:57.650><c> now</c><00:42:00.070><c> the</c><00:42:01.070><c> HTTP</c><00:42:01.820><c> client</c><00:42:02.270><c> is</c>

00:42:03.130 --> 00:42:03.140 align:start position:0%
there right now the HTTP client is
 

00:42:03.140 --> 00:42:06.610 align:start position:0%
there right now the HTTP client is
forced<00:42:03.800><c> to</c><00:42:04.010><c> code</c><00:42:04.540><c> strictly</c><00:42:05.540><c> to</c><00:42:06.320><c> the</c><00:42:06.350><c> logger</c>

00:42:06.610 --> 00:42:06.620 align:start position:0%
forced to code strictly to the logger
 

00:42:06.620 --> 00:42:09.400 align:start position:0%
forced to code strictly to the logger
interface<00:42:07.210><c> with</c><00:42:08.210><c> no</c><00:42:08.450><c> access</c><00:42:08.960><c> to</c><00:42:09.320><c> the</c>

00:42:09.400 --> 00:42:09.410 align:start position:0%
interface with no access to the
 

00:42:09.410 --> 00:42:11.350 align:start position:0%
interface with no access to the
underlying<00:42:09.740><c> implementation</c><00:42:10.370><c> class</c><00:42:10.940><c> because</c>

00:42:11.350 --> 00:42:11.360 align:start position:0%
underlying implementation class because
 

00:42:11.360 --> 00:42:13.890 align:start position:0%
underlying implementation class because
it<00:42:11.450><c> wasn't</c><00:42:11.750><c> exported</c><00:42:12.380><c> from</c><00:42:13.280><c> logging</c><00:42:13.460><c> in</c><00:42:13.670><c> pull</c>

00:42:13.890 --> 00:42:13.900 align:start position:0%
it wasn't exported from logging in pull
 

00:42:13.900 --> 00:42:17.020 align:start position:0%
it wasn't exported from logging in pull
the<00:42:14.900><c> great</c><00:42:15.200><c> trick</c><00:42:15.560><c> basically</c><00:42:16.490><c> is</c><00:42:16.700><c> that</c>

00:42:17.020 --> 00:42:17.030 align:start position:0%
the great trick basically is that
 

00:42:17.030 --> 00:42:20.230 align:start position:0%
the great trick basically is that
service<00:42:17.720><c> loader</c><00:42:17.960><c> act</c><00:42:18.500><c> on</c><00:42:18.980><c> behalf</c><00:42:19.220><c> of</c><00:42:19.850><c> logging</c>

00:42:20.230 --> 00:42:20.240 align:start position:0%
service loader act on behalf of logging
 

00:42:20.240 --> 00:42:23.580 align:start position:0%
service loader act on behalf of logging
API<00:42:20.630><c> to</c><00:42:21.380><c> look</c><00:42:21.560><c> down</c><00:42:21.860><c> into</c><00:42:22.430><c> locking</c><00:42:22.970><c> imple</c>

00:42:23.580 --> 00:42:23.590 align:start position:0%
API to look down into locking imple
 

00:42:23.590 --> 00:42:26.800 align:start position:0%
API to look down into locking imple
without<00:42:24.590><c> logging</c><00:42:24.860><c> in</c><00:42:25.220><c> pull</c><00:42:25.490><c> so</c><00:42:26.270><c> without</c>

00:42:26.800 --> 00:42:26.810 align:start position:0%
without logging in pull so without
 

00:42:26.810 --> 00:42:27.660 align:start position:0%
without logging in pull so without
logging<00:42:27.050><c> API</c>

00:42:27.660 --> 00:42:27.670 align:start position:0%
logging API
 

00:42:27.670 --> 00:42:31.930 align:start position:0%
logging API
requiring<00:42:28.720><c> logging</c><00:42:29.720><c> in</c><00:42:29.840><c> pull</c><00:42:30.050><c> and</c><00:42:30.940><c> without</c>

00:42:31.930 --> 00:42:31.940 align:start position:0%
requiring logging in pull and without
 

00:42:31.940 --> 00:42:34.270 align:start position:0%
requiring logging in pull and without
logging<00:42:32.210><c> imple</c><00:42:32.660><c> exporting</c><00:42:33.350><c> anything</c><00:42:33.830><c> to</c>

00:42:34.270 --> 00:42:34.280 align:start position:0%
logging imple exporting anything to
 

00:42:34.280 --> 00:42:36.490 align:start position:0%
logging imple exporting anything to
logging<00:42:34.580><c> api</c><00:42:34.940><c> in</c><00:42:35.210><c> other</c><00:42:35.330><c> words</c><00:42:35.540><c> there</c><00:42:36.080><c> is</c><00:42:36.110><c> very</c>

00:42:36.490 --> 00:42:36.500 align:start position:0%
logging api in other words there is very
 

00:42:36.500 --> 00:42:39.700 align:start position:0%
logging api in other words there is very
loose<00:42:36.860><c> coupling</c><00:42:37.220><c> between</c><00:42:38.120><c> the</c><00:42:38.390><c> api</c><00:42:38.750><c> and</c><00:42:39.110><c> the</c>

00:42:39.700 --> 00:42:39.710 align:start position:0%
loose coupling between the api and the
 

00:42:39.710 --> 00:42:42.880 align:start position:0%
loose coupling between the api and the
implementation<00:42:40.720><c> so</c><00:42:41.720><c> it's</c><00:42:41.900><c> easy</c><00:42:42.230><c> to</c><00:42:42.560><c> switch</c>

00:42:42.880 --> 00:42:42.890 align:start position:0%
implementation so it's easy to switch
 

00:42:42.890 --> 00:42:46.450 align:start position:0%
implementation so it's easy to switch
out<00:42:43.540><c> logging</c><00:42:44.540><c> in</c><00:42:44.720><c> pull</c><00:42:44.950><c> for</c><00:42:45.950><c> a</c><00:42:45.980><c> different</c>

00:42:46.450 --> 00:42:46.460 align:start position:0%
out logging in pull for a different
 

00:42:46.460 --> 00:42:50.260 align:start position:0%
out logging in pull for a different
implementation<00:42:47.300><c> at</c><00:42:47.930><c> runtime</c><00:42:48.200><c> and</c><00:42:48.760><c> again</c><00:42:49.790><c> the</c>

00:42:50.260 --> 00:42:50.270 align:start position:0%
implementation at runtime and again the
 

00:42:50.270 --> 00:42:52.600 align:start position:0%
implementation at runtime and again the
HTTP<00:42:50.810><c> client</c><00:42:51.170><c> module</c><00:42:51.320><c> would</c><00:42:51.890><c> be</c><00:42:52.040><c> unaware</c><00:42:52.310><c> of</c>

00:42:52.600 --> 00:42:52.610 align:start position:0%
HTTP client module would be unaware of
 

00:42:52.610 --> 00:42:53.210 align:start position:0%
HTTP client module would be unaware of
this<00:42:52.730><c> happening</c>

00:42:53.210 --> 00:42:53.220 align:start position:0%
this happening
 

00:42:53.220 --> 00:43:00.440 align:start position:0%
this happening
I<00:42:56.240><c> need</c><00:42:57.240><c> to</c><00:42:57.330><c> speed</c><00:42:57.570><c> up</c><00:42:58.490><c> if</c><00:42:59.490><c> you've</c><00:43:00.119><c> get</c><00:43:00.359><c> the</c>

00:43:00.440 --> 00:43:00.450 align:start position:0%
I need to speed up if you've get the
 

00:43:00.450 --> 00:43:01.520 align:start position:0%
I need to speed up if you've get the
feeling<00:43:00.690><c> you've</c><00:43:00.810><c> seen</c><00:43:00.960><c> this</c><00:43:01.020><c> before</c><00:43:01.200><c> it's</c>

00:43:01.520 --> 00:43:01.530 align:start position:0%
feeling you've seen this before it's
 

00:43:01.530 --> 00:43:03.710 align:start position:0%
feeling you've seen this before it's
because<00:43:01.740><c> you</c><00:43:01.830><c> have</c><00:43:02.040><c> ten</c><00:43:03.030><c> minutes</c><00:43:03.060><c> ten</c><00:43:03.660><c> minutes</c>

00:43:03.710 --> 00:43:03.720 align:start position:0%
because you have ten minutes ten minutes
 

00:43:03.720 --> 00:43:06.260 align:start position:0%
because you have ten minutes ten minutes
ago<00:43:04.050><c> I</c><00:43:04.310><c> said</c><00:43:05.310><c> the</c><00:43:05.430><c> way</c><00:43:05.550><c> you</c><00:43:05.609><c> get</c><00:43:05.820><c> optional</c>

00:43:06.260 --> 00:43:06.270 align:start position:0%
ago I said the way you get optional
 

00:43:06.270 --> 00:43:09.230 align:start position:0%
ago I said the way you get optional
dependencies<00:43:06.900><c> is</c><00:43:07.109><c> by</c><00:43:07.380><c> inverting</c><00:43:07.800><c> them</c><00:43:08.240><c> rather</c>

00:43:09.230 --> 00:43:09.240 align:start position:0%
dependencies is by inverting them rather
 

00:43:09.240 --> 00:43:10.720 align:start position:0%
dependencies is by inverting them rather
than<00:43:09.510><c> the</c><00:43:09.599><c> high</c><00:43:09.750><c> level</c><00:43:10.020><c> scripting</c><00:43:10.410><c> module</c>

00:43:10.720 --> 00:43:10.730 align:start position:0%
than the high level scripting module
 

00:43:10.730 --> 00:43:12.589 align:start position:0%
than the high level scripting module
requiring<00:43:11.730><c> low</c><00:43:12.119><c> level</c><00:43:12.390><c> implementation</c>

00:43:12.589 --> 00:43:12.599 align:start position:0%
requiring low level implementation
 

00:43:12.599 --> 00:43:14.960 align:start position:0%
requiring low level implementation
modules<00:43:13.380><c> everyone</c><00:43:13.800><c> looks</c><00:43:14.040><c> up</c><00:43:14.220><c> by</c><00:43:14.609><c> requiring</c>

00:43:14.960 --> 00:43:14.970 align:start position:0%
modules everyone looks up by requiring
 

00:43:14.970 --> 00:43:17.589 align:start position:0%
modules everyone looks up by requiring
the<00:43:15.270><c> module</c><00:43:15.510><c> with</c><00:43:15.720><c> the</c><00:43:15.750><c> service</c><00:43:16.109><c> type</c>

00:43:17.589 --> 00:43:17.599 align:start position:0%
the module with the service type
 

00:43:17.599 --> 00:43:21.470 align:start position:0%
the module with the service type
services<00:43:18.599><c> play</c><00:43:19.200><c> the</c><00:43:19.440><c> same</c><00:43:19.680><c> trick</c><00:43:20.130><c> to</c><00:43:21.000><c> break</c><00:43:21.270><c> a</c>

00:43:21.470 --> 00:43:21.480 align:start position:0%
services play the same trick to break a
 

00:43:21.480 --> 00:43:23.930 align:start position:0%
services play the same trick to break a
cyclic<00:43:21.960><c> dependency</c><00:43:22.430><c> rather</c><00:43:23.430><c> than</c><00:43:23.700><c> the</c><00:43:23.790><c> high</c>

00:43:23.930 --> 00:43:23.940 align:start position:0%
cyclic dependency rather than the high
 

00:43:23.940 --> 00:43:26.330 align:start position:0%
cyclic dependency rather than the high
level<00:43:24.210><c> API</c><00:43:24.480><c> module</c><00:43:24.750><c> requiring</c><00:43:25.500><c> the</c><00:43:25.890><c> low</c><00:43:26.010><c> level</c>

00:43:26.330 --> 00:43:26.340 align:start position:0%
level API module requiring the low level
 

00:43:26.340 --> 00:43:27.920 align:start position:0%
level API module requiring the low level
implementation<00:43:26.550><c> modules</c><00:43:27.300><c> the</c>

00:43:27.920 --> 00:43:27.930 align:start position:0%
implementation modules the
 

00:43:27.930 --> 00:43:30.050 align:start position:0%
implementation modules the
implementation<00:43:28.619><c> modules</c><00:43:29.040><c> look</c><00:43:29.520><c> up</c><00:43:29.700><c> by</c>

00:43:30.050 --> 00:43:30.060 align:start position:0%
implementation modules look up by
 

00:43:30.060 --> 00:43:33.320 align:start position:0%
implementation modules look up by
requiring<00:43:30.420><c> the</c><00:43:30.780><c> API</c><00:43:31.020><c> module</c><00:43:32.330><c> developing</c>

00:43:33.320 --> 00:43:33.330 align:start position:0%
requiring the API module developing
 

00:43:33.330 --> 00:43:36.050 align:start position:0%
requiring the API module developing
services<00:43:33.869><c> takes</c><00:43:34.140><c> work</c><00:43:34.410><c> but</c><00:43:34.830><c> the</c><00:43:35.640><c> payoff</c><00:43:36.030><c> is</c>

00:43:36.050 --> 00:43:36.060 align:start position:0%
services takes work but the payoff is
 

00:43:36.060 --> 00:43:38.330 align:start position:0%
services takes work but the payoff is
that<00:43:36.270><c> services</c><00:43:36.990><c> bring</c><00:43:37.320><c> out</c><00:43:37.470><c> the</c><00:43:37.650><c> structure</c><00:43:38.190><c> of</c>

00:43:38.330 --> 00:43:38.340 align:start position:0%
that services bring out the structure of
 

00:43:38.340 --> 00:43:40.670 align:start position:0%
that services bring out the structure of
the<00:43:38.490><c> whole</c><00:43:38.790><c> program</c><00:43:39.150><c> more</c><00:43:40.080><c> clearly</c><00:43:40.380><c> than</c>

00:43:40.670 --> 00:43:40.680 align:start position:0%
the whole program more clearly than
 

00:43:40.680 --> 00:43:42.349 align:start position:0%
the whole program more clearly than
anything<00:43:40.890><c> we've</c><00:43:41.190><c> ever</c><00:43:41.310><c> introduced</c><00:43:41.940><c> into</c><00:43:42.240><c> the</c>

00:43:42.349 --> 00:43:42.359 align:start position:0%
anything we've ever introduced into the
 

00:43:42.359 --> 00:43:44.839 align:start position:0%
anything we've ever introduced into the
Java<00:43:42.540><c> language</c><00:43:42.750><c> and</c><00:43:43.320><c> since</c><00:43:44.280><c> our</c><00:43:44.369><c> number</c><00:43:44.700><c> one</c>

00:43:44.839 --> 00:43:44.849 align:start position:0%
Java language and since our number one
 

00:43:44.849 --> 00:43:47.120 align:start position:0%
Java language and since our number one
belief<00:43:45.090><c> for</c><00:43:45.270><c> Java</c><00:43:45.480><c> code</c><00:43:45.780><c> is</c><00:43:45.990><c> that</c><00:43:46.230><c> reading</c><00:43:46.980><c> is</c>

00:43:47.120 --> 00:43:47.130 align:start position:0%
belief for Java code is that reading is
 

00:43:47.130 --> 00:43:49.370 align:start position:0%
belief for Java code is that reading is
more<00:43:47.340><c> important</c><00:43:47.970><c> than</c><00:43:48.090><c> writing</c><00:43:48.540><c> we</c><00:43:49.200><c> think</c>

00:43:49.370 --> 00:43:49.380 align:start position:0%
more important than writing we think
 

00:43:49.380 --> 00:43:51.260 align:start position:0%
more important than writing we think
that<00:43:49.470><c> services</c><00:43:50.099><c> pull</c><00:43:50.430><c> their</c><00:43:50.700><c> weight</c><00:43:50.910><c> and</c>

00:43:51.260 --> 00:43:51.270 align:start position:0%
that services pull their weight and
 

00:43:51.270 --> 00:43:54.400 align:start position:0%
that services pull their weight and
deserve<00:43:52.020><c> to</c><00:43:52.050><c> be</c><00:43:52.200><c> widely</c><00:43:52.530><c> adopted</c>

00:43:54.400 --> 00:43:54.410 align:start position:0%
deserve to be widely adopted
 

00:43:54.410 --> 00:43:58.790 align:start position:0%
deserve to be widely adopted
so<00:43:56.119><c> cycles</c><00:43:57.119><c> hurt</c><00:43:57.630><c> program</c><00:43:58.050><c> understanding</c><00:43:58.650><c> and</c>

00:43:58.790 --> 00:43:58.800 align:start position:0%
so cycles hurt program understanding and
 

00:43:58.800 --> 00:44:01.250 align:start position:0%
so cycles hurt program understanding and
maintenance<00:43:59.420><c> service</c><00:44:00.420><c> relationships</c><00:44:01.050><c> are</c><00:44:01.230><c> a</c>

00:44:01.250 --> 00:44:01.260 align:start position:0%
maintenance service relationships are a
 

00:44:01.260 --> 00:44:04.370 align:start position:0%
maintenance service relationships are a
natural<00:44:01.740><c> way</c><00:44:01.920><c> to</c><00:44:01.950><c> break</c><00:44:02.609><c> cycles</c><00:44:02.849><c> and</c><00:44:03.510><c> really</c>

00:44:04.370 --> 00:44:04.380 align:start position:0%
natural way to break cycles and really
 

00:44:04.380 --> 00:44:06.380 align:start position:0%
natural way to break cycles and really
in<00:44:04.470><c> just</c><00:44:04.589><c> a</c><00:44:04.740><c> few</c><00:44:04.980><c> uses</c><00:44:05.460><c> and</c><00:44:05.640><c> provides</c><00:44:05.970><c> and</c>

00:44:06.380 --> 00:44:06.390 align:start position:0%
in just a few uses and provides and
 

00:44:06.390 --> 00:44:08.150 align:start position:0%
in just a few uses and provides and
service<00:44:06.720><c> loader</c><00:44:06.930><c> calls</c><00:44:07.230><c> you</c><00:44:07.470><c> can</c><00:44:07.619><c> express</c><00:44:07.950><c> an</c>

00:44:08.150 --> 00:44:08.160 align:start position:0%
service loader calls you can express an
 

00:44:08.160 --> 00:44:13.070 align:start position:0%
service loader calls you can express an
awful<00:44:08.460><c> lot</c><00:44:08.700><c> of</c><00:44:08.910><c> application</c><00:44:09.540><c> architecture</c><00:44:12.080><c> so</c>

00:44:13.070 --> 00:44:13.080 align:start position:0%
awful lot of application architecture so
 

00:44:13.080 --> 00:44:16.430 align:start position:0%
awful lot of application architecture so
service<00:44:13.470><c> is</c><00:44:13.560><c> a</c><00:44:13.619><c> first-class</c><00:44:14.540><c> they</c><00:44:15.540><c> literally</c>

00:44:16.430 --> 00:44:16.440 align:start position:0%
service is a first-class they literally
 

00:44:16.440 --> 00:44:18.500 align:start position:0%
service is a first-class they literally
give<00:44:16.650><c> you</c><00:44:16.680><c> looser</c><00:44:17.130><c> coupling</c><00:44:17.760><c> but</c><00:44:18.030><c> logically</c>

00:44:18.500 --> 00:44:18.510 align:start position:0%
give you looser coupling but logically
 

00:44:18.510 --> 00:44:20.990 align:start position:0%
give you looser coupling but logically
better<00:44:18.810><c> separation</c><00:44:19.260><c> of</c><00:44:19.500><c> concerns</c><00:44:19.680><c> and</c><00:44:20.369><c> it's</c>

00:44:20.990 --> 00:44:21.000 align:start position:0%
better separation of concerns and it's
 

00:44:21.000 --> 00:44:23.540 align:start position:0%
better separation of concerns and it's
all<00:44:21.150><c> about</c><00:44:21.390><c> the</c><00:44:21.900><c> architecture</c><00:44:22.380><c> rather</c><00:44:23.310><c> than</c>

00:44:23.540 --> 00:44:23.550 align:start position:0%
all about the architecture rather than
 

00:44:23.550 --> 00:44:27.829 align:start position:0%
all about the architecture rather than
the<00:44:23.670><c> code</c><00:44:25.520><c> jdk</c><00:44:26.520><c> nine</c><00:44:26.640><c> is</c><00:44:26.790><c> here</c><00:44:27.030><c> please</c>

00:44:27.829 --> 00:44:27.839 align:start position:0%
the code jdk nine is here please
 

00:44:27.839 --> 00:44:29.780 align:start position:0%
the code jdk nine is here please
download<00:44:27.990><c> it</c><00:44:28.290><c> if</c><00:44:28.410><c> you</c><00:44:28.500><c> haven't</c><00:44:28.800><c> if</c><00:44:29.280><c> you</c><00:44:29.640><c> want</c>

00:44:29.780 --> 00:44:29.790 align:start position:0%
download it if you haven't if you want
 

00:44:29.790 --> 00:44:31.099 align:start position:0%
download it if you haven't if you want
to<00:44:29.880><c> know</c><00:44:30.000><c> more</c><00:44:30.240><c> about</c><00:44:30.270><c> the</c><00:44:30.630><c> module</c><00:44:30.930><c> system</c>

00:44:31.099 --> 00:44:31.109 align:start position:0%
to know more about the module system
 

00:44:31.109 --> 00:44:33.890 align:start position:0%
to know more about the module system
there's<00:44:31.530><c> a</c><00:44:31.619><c> number</c><00:44:31.830><c> of</c><00:44:31.980><c> JDK</c><00:44:32.900><c> enhancement</c>

00:44:33.890 --> 00:44:33.900 align:start position:0%
there's a number of JDK enhancement
 

00:44:33.900 --> 00:44:36.940 align:start position:0%
there's a number of JDK enhancement
proposals<00:44:34.410><c> jep's</c><00:44:34.800><c> especially</c><00:44:35.700><c> jet</c><00:44:35.910><c> 261</c>

00:44:36.940 --> 00:44:36.950 align:start position:0%
proposals jep's especially jet 261
 

00:44:36.950 --> 00:44:39.290 align:start position:0%
proposals jep's especially jet 261
basically<00:44:37.950><c> every</c><00:44:38.160><c> question</c><00:44:38.550><c> that</c><00:44:38.820><c> you're</c>

00:44:39.290 --> 00:44:39.300 align:start position:0%
basically every question that you're
 

00:44:39.300 --> 00:44:42.800 align:start position:0%
basically every question that you're
going<00:44:39.420><c> to</c><00:44:39.510><c> ask</c><00:44:39.599><c> is</c><00:44:39.900><c> answered</c><00:44:40.230><c> in</c><00:44:40.290><c> jet</c><00:44:40.470><c> 261</c><00:44:41.810><c> and</c>

00:44:42.800 --> 00:44:42.810 align:start position:0%
going to ask is answered in jet 261 and
 

00:44:42.810 --> 00:44:46.289 align:start position:0%
going to ask is answered in jet 261 and
with<00:44:42.960><c> that</c><00:44:43.140><c> thank</c><00:44:43.950><c> you</c><00:44:44.010><c> very</c><00:44:44.099><c> much</c>

00:44:46.289 --> 00:44:46.299 align:start position:0%
with that thank you very much
 

00:44:46.299 --> 00:44:48.359 align:start position:0%
with that thank you very much
you

