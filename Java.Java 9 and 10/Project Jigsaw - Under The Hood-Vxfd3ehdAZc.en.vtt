WEBVTT
Kind: captions
Language: en

00:00:05.209 --> 00:00:09.890 align:start position:0%
 
welcome<00:00:06.209><c> everyone</c><00:00:06.569><c> to</c><00:00:07.010><c> the</c><00:00:08.010><c> fifth</c><00:00:09.000><c> of</c><00:00:09.330><c> the</c>

00:00:09.890 --> 00:00:09.900 align:start position:0%
welcome everyone to the fifth of the
 

00:00:09.900 --> 00:00:14.510 align:start position:0%
welcome everyone to the fifth of the
five<00:00:10.369><c> jigsaw</c><00:00:11.369><c> talks</c><00:00:12.799><c> project</c><00:00:13.799><c> jigsaw</c><00:00:14.100><c> under</c>

00:00:14.510 --> 00:00:14.520 align:start position:0%
five jigsaw talks project jigsaw under
 

00:00:14.520 --> 00:00:18.230 align:start position:0%
five jigsaw talks project jigsaw under
the<00:00:14.609><c> hood</c><00:00:14.789><c> quick</c><00:00:15.480><c> poll</c><00:00:15.800><c> who</c><00:00:16.800><c> has</c><00:00:17.550><c> been</c><00:00:18.029><c> to</c><00:00:18.150><c> all</c>

00:00:18.230 --> 00:00:18.240 align:start position:0%
the hood quick poll who has been to all
 

00:00:18.240 --> 00:00:23.690 align:start position:0%
the hood quick poll who has been to all
five<00:00:20.450><c> some</c><00:00:21.450><c> a</c><00:00:21.800><c> small</c><00:00:22.800><c> number</c><00:00:23.039><c> of</c><00:00:23.100><c> hands</c><00:00:23.340><c> okay</c>

00:00:23.690 --> 00:00:23.700 align:start position:0%
five some a small number of hands okay
 

00:00:23.700 --> 00:00:26.000 align:start position:0%
five some a small number of hands okay
so<00:00:23.760><c> people</c><00:00:24.060><c> have</c><00:00:24.330><c> fought</c><00:00:24.810><c> okay</c><00:00:25.110><c> yes</c><00:00:25.380><c> yes</c><00:00:25.770><c> yes</c>

00:00:26.000 --> 00:00:26.010 align:start position:0%
so people have fought okay yes yes yes
 

00:00:26.010 --> 00:00:28.100 align:start position:0%
so people have fought okay yes yes yes
so<00:00:26.910><c> people</c><00:00:27.150><c> have</c><00:00:27.240><c> this</c><00:00:27.660><c> is</c><00:00:27.779><c> a</c><00:00:27.810><c> serious</c>

00:00:28.100 --> 00:00:28.110 align:start position:0%
so people have this is a serious
 

00:00:28.110 --> 00:00:29.300 align:start position:0%
so people have this is a serious
question<00:00:28.380><c> people</c><00:00:28.619><c> have</c><00:00:28.650><c> been</c><00:00:28.830><c> picking</c><00:00:29.160><c> and</c>

00:00:29.300 --> 00:00:29.310 align:start position:0%
question people have been picking and
 

00:00:29.310 --> 00:00:31.420 align:start position:0%
question people have been picking and
choosing<00:00:29.340><c> when</c><00:00:29.850><c> we've</c><00:00:29.970><c> had</c><00:00:30.000><c> a</c><00:00:30.150><c> sequence</c><00:00:31.109><c> of</c>

00:00:31.420 --> 00:00:31.430 align:start position:0%
choosing when we've had a sequence of
 

00:00:31.430 --> 00:00:34.580 align:start position:0%
choosing when we've had a sequence of
jigsaw<00:00:32.430><c> talks</c><00:00:33.020><c> people</c><00:00:34.020><c> have</c><00:00:34.109><c> been</c><00:00:34.140><c> picking</c>

00:00:34.580 --> 00:00:34.590 align:start position:0%
jigsaw talks people have been picking
 

00:00:34.590 --> 00:00:37.819 align:start position:0%
jigsaw talks people have been picking
and<00:00:34.739><c> choosing</c><00:00:34.770><c> which</c><00:00:35.160><c> ones</c><00:00:35.550><c> to</c><00:00:35.760><c> go</c><00:00:35.969><c> to</c><00:00:36.829><c> yes</c>

00:00:37.819 --> 00:00:37.829 align:start position:0%
and choosing which ones to go to yes
 

00:00:37.829 --> 00:00:41.029 align:start position:0%
and choosing which ones to go to yes
okay<00:00:38.359><c> interesting</c><00:00:39.440><c> we</c><00:00:40.440><c> all</c><00:00:40.620><c> we</c><00:00:40.739><c> have</c><00:00:40.859><c> another</c>

00:00:41.029 --> 00:00:41.039 align:start position:0%
okay interesting we all we have another
 

00:00:41.039 --> 00:00:44.270 align:start position:0%
okay interesting we all we have another
five-star<00:00:41.670><c> we</c><00:00:41.999><c> have</c><00:00:42.089><c> 25</c><00:00:42.510><c> *</c><00:00:42.949><c> attendees</c><00:00:43.949><c> at</c><00:00:44.190><c> the</c>

00:00:44.270 --> 00:00:44.280 align:start position:0%
five-star we have 25 * attendees at the
 

00:00:44.280 --> 00:00:46.669 align:start position:0%
five-star we have 25 * attendees at the
front<00:00:44.489><c> I</c><00:00:44.760><c> think</c><00:00:45.719><c> you've</c><00:00:46.170><c> probably</c><00:00:46.379><c> been</c><00:00:46.559><c> to</c>

00:00:46.669 --> 00:00:46.679 align:start position:0%
front I think you've probably been to
 

00:00:46.679 --> 00:00:53.899 align:start position:0%
front I think you've probably been to
all<00:00:46.800><c> five</c><00:00:50.239><c> one</c><00:00:51.239><c> of</c><00:00:51.359><c> them</c><00:00:51.449><c> twice</c><00:00:52.549><c> up</c><00:00:53.549><c> a</c><00:00:53.789><c> now</c>

00:00:53.899 --> 00:00:53.909 align:start position:0%
all five one of them twice up a now
 

00:00:53.909 --> 00:00:55.579 align:start position:0%
all five one of them twice up a now
you're<00:00:54.030><c> in</c><00:00:54.089><c> the</c><00:00:54.179><c> fifth</c><00:00:54.329><c> one</c><00:00:54.449><c> let's</c><00:00:55.289><c> go</c><00:00:55.469><c> with</c>

00:00:55.579 --> 00:00:55.589 align:start position:0%
you're in the fifth one let's go with
 

00:00:55.589 --> 00:01:01.699 align:start position:0%
you're in the fifth one let's go with
them<00:00:55.999><c> ok</c><00:00:59.030><c> so</c><00:01:00.030><c> anyway</c><00:01:00.479><c> my</c><00:01:01.260><c> name</c><00:01:01.379><c> is</c><00:01:01.499><c> Alex</c>

00:01:01.699 --> 00:01:01.709 align:start position:0%
them ok so anyway my name is Alex
 

00:01:01.709 --> 00:01:03.259 align:start position:0%
them ok so anyway my name is Alex
Buckley<00:01:01.889><c> I</c><00:01:02.249><c> work</c><00:01:02.639><c> in</c><00:01:02.789><c> the</c><00:01:02.940><c> Java</c><00:01:03.149><c> platform</c>

00:01:03.259 --> 00:01:03.269 align:start position:0%
Buckley I work in the Java platform
 

00:01:03.269 --> 00:01:07.010 align:start position:0%
Buckley I work in the Java platform
group<00:01:03.780><c> at</c><00:01:04.350><c> Oracle</c><00:01:04.949><c> and</c><00:01:05.100><c> this</c><00:01:06.060><c> is</c><00:01:06.330><c> the</c><00:01:06.750><c> deep</c>

00:01:07.010 --> 00:01:07.020 align:start position:0%
group at Oracle and this is the deep
 

00:01:07.020 --> 00:01:09.290 align:start position:0%
group at Oracle and this is the deep
dive<00:01:07.260><c> behind</c><00:01:08.010><c> the</c><00:01:08.280><c> scenes</c><00:01:08.520><c> under</c><00:01:09.030><c> the</c><00:01:09.120><c> hood</c>

00:01:09.290 --> 00:01:09.300 align:start position:0%
dive behind the scenes under the hood
 

00:01:09.300 --> 00:01:11.270 align:start position:0%
dive behind the scenes under the hood
what's<00:01:10.170><c> really</c><00:01:10.440><c> going</c><00:01:10.680><c> on</c><00:01:10.800><c> with</c><00:01:11.040><c> class</c>

00:01:11.270 --> 00:01:11.280 align:start position:0%
what's really going on with class
 

00:01:11.280 --> 00:01:14.330 align:start position:0%
what's really going on with class
loaders<00:01:11.730><c> in</c><00:01:12.390><c> jeddah</c><00:01:12.660><c> canine</c><00:01:13.020><c> that</c><00:01:13.920><c> tries</c><00:01:14.310><c> to</c>

00:01:14.330 --> 00:01:14.340 align:start position:0%
loaders in jeddah canine that tries to
 

00:01:14.340 --> 00:01:16.250 align:start position:0%
loaders in jeddah canine that tries to
explain<00:01:14.940><c> some</c><00:01:15.450><c> of</c><00:01:15.480><c> the</c><00:01:15.840><c> some</c><00:01:16.110><c> of</c><00:01:16.230><c> the</c>

00:01:16.250 --> 00:01:16.260 align:start position:0%
explain some of the some of the
 

00:01:16.260 --> 00:01:19.730 align:start position:0%
explain some of the some of the
statements<00:01:16.560><c> you</c><00:01:16.830><c> may</c><00:01:17.040><c> have</c><00:01:17.220><c> heard</c><00:01:18.350><c> in</c><00:01:19.350><c> other</c>

00:01:19.730 --> 00:01:19.740 align:start position:0%
statements you may have heard in other
 

00:01:19.740 --> 00:01:22.610 align:start position:0%
statements you may have heard in other
talks<00:01:20.090><c> talking</c><00:01:21.090><c> about</c><00:01:21.270><c> the</c><00:01:21.600><c> the</c><00:01:22.020><c> jets</c><00:01:22.320><c> that</c>

00:01:22.610 --> 00:01:22.620 align:start position:0%
talks talking about the the jets that
 

00:01:22.620 --> 00:01:26.090 align:start position:0%
talks talking about the the jets that
are<00:01:22.680><c> in</c><00:01:22.830><c> jdk</c><00:01:23.100><c> 9</c><00:01:23.460><c> sometimes</c><00:01:24.620><c> some</c><00:01:25.620><c> statements</c>

00:01:26.090 --> 00:01:26.100 align:start position:0%
are in jdk 9 sometimes some statements
 

00:01:26.100 --> 00:01:27.640 align:start position:0%
are in jdk 9 sometimes some statements
are<00:01:26.190><c> made</c><00:01:26.340><c> that</c><00:01:26.790><c> seem</c><00:01:27.120><c> to</c><00:01:27.270><c> be</c><00:01:27.390><c> a</c><00:01:27.420><c> bit</c><00:01:27.600><c> confusing</c>

00:01:27.640 --> 00:01:27.650 align:start position:0%
are made that seem to be a bit confusing
 

00:01:27.650 --> 00:01:31.220 align:start position:0%
are made that seem to be a bit confusing
and<00:01:28.650><c> i</c><00:01:29.070><c> hope</c><00:01:29.220><c> this</c><00:01:29.460><c> talk</c><00:01:29.700><c> will</c><00:01:29.970><c> explain</c><00:01:30.930><c> what's</c>

00:01:31.220 --> 00:01:31.230 align:start position:0%
and i hope this talk will explain what's
 

00:01:31.230 --> 00:01:36.710 align:start position:0%
and i hope this talk will explain what's
really<00:01:31.560><c> going</c><00:01:31.860><c> on</c><00:01:33.920><c> so</c><00:01:34.920><c> in</c><00:01:35.820><c> jdk</c><00:01:36.240><c> nine</c><00:01:36.480><c> but</c><00:01:36.630><c> it</c>

00:01:36.710 --> 00:01:36.720 align:start position:0%
really going on so in jdk nine but it
 

00:01:36.720 --> 00:01:39.350 align:start position:0%
really going on so in jdk nine but it
stand<00:01:36.900><c> alone</c><00:01:37.110><c> so</c><00:01:37.500><c> i</c><00:01:37.850><c> still</c><00:01:38.850><c> need</c><00:01:39.000><c> to</c><00:01:39.030><c> introduce</c>

00:01:39.350 --> 00:01:39.360 align:start position:0%
stand alone so i still need to introduce
 

00:01:39.360 --> 00:01:41.720 align:start position:0%
stand alone so i still need to introduce
that<00:01:40.050><c> in</c><00:01:40.170><c> jdk</c><00:01:40.410><c> nine</c><00:01:40.710><c> the</c><00:01:40.950><c> main</c><00:01:41.130><c> feature</c><00:01:41.400><c> is</c><00:01:41.580><c> the</c>

00:01:41.720 --> 00:01:41.730 align:start position:0%
that in jdk nine the main feature is the
 

00:01:41.730 --> 00:01:44.180 align:start position:0%
that in jdk nine the main feature is the
module<00:01:42.090><c> system</c><00:01:42.330><c> the</c><00:01:42.720><c> let's</c><00:01:42.900><c> code</c><00:01:43.230><c> be</c><00:01:43.530><c> more</c>

00:01:44.180 --> 00:01:44.190 align:start position:0%
module system the let's code be more
 

00:01:44.190 --> 00:01:47.630 align:start position:0%
module system the let's code be more
reliable<00:01:44.460><c> and</c><00:01:44.880><c> maintainable</c><00:01:45.920><c> we've</c><00:01:46.920><c> used</c><00:01:47.340><c> the</c>

00:01:47.630 --> 00:01:47.640 align:start position:0%
reliable and maintainable we've used the
 

00:01:47.640 --> 00:01:50.149 align:start position:0%
reliable and maintainable we've used the
module<00:01:48.000><c> system</c><00:01:48.240><c> to</c><00:01:48.630><c> turn</c><00:01:48.840><c> the</c><00:01:49.080><c> monolithic</c><00:01:49.530><c> JDK</c>

00:01:50.149 --> 00:01:50.159 align:start position:0%
module system to turn the monolithic JDK
 

00:01:50.159 --> 00:01:53.510 align:start position:0%
module system to turn the monolithic JDK
into<00:01:51.000><c> the</c><00:01:51.120><c> modular</c><00:01:51.570><c> JDK</c><00:01:52.050><c> that</c><00:01:52.770><c> is</c><00:01:52.920><c> breaking</c><00:01:53.370><c> up</c>

00:01:53.510 --> 00:01:53.520 align:start position:0%
into the modular JDK that is breaking up
 

00:01:53.520 --> 00:01:56.690 align:start position:0%
into the modular JDK that is breaking up
the<00:01:53.670><c> RT</c><00:01:54.000><c> jar</c><00:01:54.510><c> file</c><00:01:54.810><c> inside</c><00:01:55.590><c> the</c><00:01:55.740><c> JDK</c><00:01:56.159><c> into</c>

00:01:56.690 --> 00:01:56.700 align:start position:0%
the RT jar file inside the JDK into
 

00:01:56.700 --> 00:02:00.800 align:start position:0%
the RT jar file inside the JDK into
dozens<00:01:57.210><c> of</c><00:01:57.450><c> reusable</c><00:01:58.290><c> modules</c><00:01:59.090><c> jdk</c><00:02:00.090><c> 9</c><00:02:00.270><c> also</c>

00:02:00.800 --> 00:02:00.810 align:start position:0%
dozens of reusable modules jdk 9 also
 

00:02:00.810 --> 00:02:02.870 align:start position:0%
dozens of reusable modules jdk 9 also
has<00:02:01.020><c> small</c><00:02:01.440><c> enhancements</c><00:02:02.430><c> to</c><00:02:02.460><c> the</c><00:02:02.610><c> Java</c>

00:02:02.870 --> 00:02:02.880 align:start position:0%
has small enhancements to the Java
 

00:02:02.880 --> 00:02:04.969 align:start position:0%
has small enhancements to the Java
language<00:02:03.000><c> and</c><00:02:03.690><c> somewhat</c><00:02:04.530><c> larger</c>

00:02:04.969 --> 00:02:04.979 align:start position:0%
language and somewhat larger
 

00:02:04.979 --> 00:02:07.690 align:start position:0%
language and somewhat larger
enhancements<00:02:05.729><c> to</c><00:02:05.850><c> the</c><00:02:06.000><c> standard</c><00:02:06.570><c> labors</c><00:02:06.900><c> plus</c>

00:02:07.690 --> 00:02:07.700 align:start position:0%
enhancements to the standard labors plus
 

00:02:07.700 --> 00:02:12.410 align:start position:0%
enhancements to the standard labors plus
Javadoc<00:02:08.700><c> gets</c><00:02:09.119><c> a</c><00:02:09.300><c> search</c><00:02:09.629><c> box</c><00:02:09.899><c> and</c><00:02:10.400><c> JDK</c><00:02:11.400><c> via</c><00:02:12.120><c> J</c>

00:02:12.410 --> 00:02:12.420 align:start position:0%
Javadoc gets a search box and JDK via J
 

00:02:12.420 --> 00:02:16.879 align:start position:0%
Javadoc gets a search box and JDK via J
shell<00:02:12.690><c> includes</c><00:02:13.379><c> a</c><00:02:13.499><c> ripple</c><00:02:13.920><c> at</c><00:02:14.159><c> last</c><00:02:15.769><c> round</c><00:02:16.769><c> of</c>

00:02:16.879 --> 00:02:16.889 align:start position:0%
shell includes a ripple at last round of
 

00:02:16.889 --> 00:02:18.230 align:start position:0%
shell includes a ripple at last round of
applause<00:02:17.189><c> I</c><00:02:17.400><c> can</c><00:02:17.579><c> I</c><00:02:17.730><c> can</c><00:02:17.909><c> hear</c>

00:02:18.230 --> 00:02:18.240 align:start position:0%
applause I can I can hear
 

00:02:18.240 --> 00:02:25.340 align:start position:0%
applause I can I can hear
in<00:02:18.300><c> my</c><00:02:18.420><c> head</c><00:02:18.630><c> ah</c><00:02:23.240><c> so</c><00:02:24.240><c> project</c><00:02:24.750><c> X</c><00:02:24.900><c> or</c><00:02:25.080><c> is</c><00:02:25.290><c> a</c>

00:02:25.340 --> 00:02:25.350 align:start position:0%
in my head ah so project X or is a
 

00:02:25.350 --> 00:02:28.580 align:start position:0%
in my head ah so project X or is a
project<00:02:25.770><c> led</c><00:02:26.190><c> by</c><00:02:26.220><c> Oracle</c><00:02:26.880><c> in</c><00:02:27.120><c> OpenJDK</c><00:02:27.840><c> it's</c>

00:02:28.580 --> 00:02:28.590 align:start position:0%
project led by Oracle in OpenJDK it's
 

00:02:28.590 --> 00:02:30.160 align:start position:0%
project led by Oracle in OpenJDK it's
the<00:02:28.770><c> container</c><00:02:29.160><c> for</c><00:02:29.520><c> all</c><00:02:29.610><c> of</c><00:02:29.760><c> our</c><00:02:29.820><c> work</c>

00:02:30.160 --> 00:02:30.170 align:start position:0%
the container for all of our work
 

00:02:30.170 --> 00:02:32.240 align:start position:0%
the container for all of our work
building<00:02:31.170><c> a</c><00:02:31.260><c> module</c><00:02:31.590><c> system</c><00:02:31.830><c> and</c>

00:02:32.240 --> 00:02:32.250 align:start position:0%
building a module system and
 

00:02:32.250 --> 00:02:35.360 align:start position:0%
building a module system and
modularizing<00:02:33.120><c> the</c><00:02:33.420><c> JDK</c><00:02:33.890><c> we're</c><00:02:34.890><c> standardizing</c>

00:02:35.360 --> 00:02:35.370 align:start position:0%
modularizing the JDK we're standardizing
 

00:02:35.370 --> 00:02:37.340 align:start position:0%
modularizing the JDK we're standardizing
the<00:02:35.760><c> module</c><00:02:36.150><c> system</c><00:02:36.390><c> in</c><00:02:36.720><c> the</c><00:02:36.810><c> java</c><00:02:37.050><c> community</c>

00:02:37.340 --> 00:02:37.350 align:start position:0%
the module system in the java community
 

00:02:37.350 --> 00:02:41.030 align:start position:0%
the module system in the java community
process<00:02:37.650><c> through</c><00:02:38.550><c> jsr</c><00:02:39.030><c> 376</c><00:02:39.840><c> and</c><00:02:40.230><c> we're</c>

00:02:41.030 --> 00:02:41.040 align:start position:0%
process through jsr 376 and we're
 

00:02:41.040 --> 00:02:42.620 align:start position:0%
process through jsr 376 and we're
standardizing<00:02:41.430><c> the</c><00:02:41.820><c> structure</c><00:02:42.480><c> of</c><00:02:42.510><c> the</c>

00:02:42.620 --> 00:02:42.630 align:start position:0%
standardizing the structure of the
 

00:02:42.630 --> 00:02:45.080 align:start position:0%
standardizing the structure of the
modular<00:02:43.170><c> JDK</c><00:02:43.710><c> in</c><00:02:44.130><c> the</c><00:02:44.640><c> java</c><00:02:44.850><c> community</c>

00:02:45.080 --> 00:02:45.090 align:start position:0%
modular JDK in the java community
 

00:02:45.090 --> 00:02:47.990 align:start position:0%
modular JDK in the java community
process<00:02:45.440><c> through</c><00:02:46.440><c> the</c><00:02:46.650><c> umbrella</c><00:02:47.190><c> jsr</c><00:02:47.730><c> for</c>

00:02:47.990 --> 00:02:48.000 align:start position:0%
process through the umbrella jsr for
 

00:02:48.000 --> 00:02:52.730 align:start position:0%
process through the umbrella jsr for
java<00:02:48.300><c> SE</c><00:02:48.600><c> 9</c><00:02:48.860><c> so</c><00:02:49.860><c> when</c><00:02:50.460><c> you</c><00:02:50.610><c> use</c><00:02:50.940><c> JDK</c><00:02:51.510><c> 9</c><00:02:51.750><c> you're</c>

00:02:52.730 --> 00:02:52.740 align:start position:0%
java SE 9 so when you use JDK 9 you're
 

00:02:52.740 --> 00:02:54.830 align:start position:0%
java SE 9 so when you use JDK 9 you're
always<00:02:52.980><c> subject</c><00:02:53.730><c> to</c><00:02:53.850><c> the</c><00:02:54.120><c> rules</c><00:02:54.360><c> of</c><00:02:54.750><c> the</c>

00:02:54.830 --> 00:02:54.840 align:start position:0%
always subject to the rules of the
 

00:02:54.840 --> 00:02:56.690 align:start position:0%
always subject to the rules of the
module<00:02:55.170><c> system</c><00:02:55.440><c> that's</c><00:02:55.860><c> what's</c><00:02:56.130><c> under</c><00:02:56.580><c> the</c>

00:02:56.690 --> 00:02:56.700 align:start position:0%
module system that's what's under the
 

00:02:56.700 --> 00:02:59.030 align:start position:0%
module system that's what's under the
hood<00:02:56.730><c> and</c><00:02:57.060><c> it's</c><00:02:57.780><c> what</c><00:02:57.960><c> most</c><00:02:58.320><c> of</c><00:02:58.530><c> this</c><00:02:58.620><c> talk</c><00:02:58.860><c> is</c>

00:02:59.030 --> 00:02:59.040 align:start position:0%
hood and it's what most of this talk is
 

00:02:59.040 --> 00:03:02.990 align:start position:0%
hood and it's what most of this talk is
about<00:02:59.160><c> they'll</c><00:03:00.060><c> touch</c><00:03:00.780><c> on</c><00:03:01.050><c> some</c><00:03:01.260><c> aspects</c><00:03:02.000><c> some</c>

00:03:02.990 --> 00:03:03.000 align:start position:0%
about they'll touch on some aspects some
 

00:03:03.000 --> 00:03:05.180 align:start position:0%
about they'll touch on some aspects some
of<00:03:03.120><c> the</c><00:03:03.240><c> impact</c><00:03:03.660><c> of</c><00:03:03.780><c> the</c><00:03:03.930><c> modular</c><00:03:04.350><c> JDK</c><00:03:04.830><c> in</c><00:03:05.070><c> near</c>

00:03:05.180 --> 00:03:05.190 align:start position:0%
of the impact of the modular JDK in near
 

00:03:05.190 --> 00:03:09.410 align:start position:0%
of the impact of the modular JDK in near
the<00:03:05.220><c> end</c><00:03:06.770><c> this</c><00:03:07.770><c> talk</c><00:03:07.980><c> has</c><00:03:08.100><c> four</c><00:03:08.340><c> parts</c><00:03:08.670><c> the</c>

00:03:09.410 --> 00:03:09.420 align:start position:0%
the end this talk has four parts the
 

00:03:09.420 --> 00:03:11.150 align:start position:0%
the end this talk has four parts the
first<00:03:09.570><c> part</c><00:03:09.750><c> explains</c><00:03:10.350><c> how</c><00:03:10.680><c> the</c><00:03:10.740><c> module</c>

00:03:11.150 --> 00:03:11.160 align:start position:0%
first part explains how the module
 

00:03:11.160 --> 00:03:13.190 align:start position:0%
first part explains how the module
system<00:03:11.430><c> works</c><00:03:11.850><c> with</c><00:03:12.090><c> the</c><00:03:12.180><c> java</c><00:03:12.450><c> language</c><00:03:12.690><c> and</c>

00:03:13.190 --> 00:03:13.200 align:start position:0%
system works with the java language and
 

00:03:13.200 --> 00:03:15.650 align:start position:0%
system works with the java language and
vm<00:03:13.470><c> to</c><00:03:14.040><c> improve</c><00:03:14.400><c> the</c><00:03:14.580><c> reliability</c><00:03:14.820><c> of</c><00:03:15.330><c> your</c>

00:03:15.650 --> 00:03:15.660 align:start position:0%
vm to improve the reliability of your
 

00:03:15.660 --> 00:03:18.290 align:start position:0%
vm to improve the reliability of your
code<00:03:15.950><c> the</c><00:03:16.950><c> second</c><00:03:17.310><c> part</c><00:03:17.520><c> is</c><00:03:17.790><c> really</c><00:03:18.120><c> about</c>

00:03:18.290 --> 00:03:18.300 align:start position:0%
code the second part is really about
 

00:03:18.300 --> 00:03:21.470 align:start position:0%
code the second part is really about
migrating<00:03:18.780><c> to</c><00:03:19.320><c> modules</c><00:03:20.000><c> the</c><00:03:21.000><c> third</c><00:03:21.210><c> part</c>

00:03:21.470 --> 00:03:21.480 align:start position:0%
migrating to modules the third part
 

00:03:21.480 --> 00:03:23.300 align:start position:0%
migrating to modules the third part
explains<00:03:21.960><c> what</c><00:03:22.320><c> the</c><00:03:22.470><c> module</c><00:03:22.770><c> system</c><00:03:23.040><c> is</c>

00:03:23.300 --> 00:03:23.310 align:start position:0%
explains what the module system is
 

00:03:23.310 --> 00:03:25.490 align:start position:0%
explains what the module system is
fundamentally<00:03:23.520><c> capable</c><00:03:24.450><c> of</c><00:03:24.600><c> beyond</c><00:03:25.080><c> what</c><00:03:25.380><c> you</c>

00:03:25.490 --> 00:03:25.500 align:start position:0%
fundamentally capable of beyond what you
 

00:03:25.500 --> 00:03:28.250 align:start position:0%
fundamentally capable of beyond what you
can<00:03:25.650><c> express</c><00:03:26.070><c> in</c><00:03:26.460><c> the</c><00:03:26.550><c> java</c><00:03:26.790><c> language</c><00:03:27.060><c> and</c><00:03:27.600><c> the</c>

00:03:28.250 --> 00:03:28.260 align:start position:0%
can express in the java language and the
 

00:03:28.260 --> 00:03:30.770 align:start position:0%
can express in the java language and the
fourth<00:03:28.500><c> part</c><00:03:28.710><c> is</c><00:03:29.010><c> about</c><00:03:29.580><c> the</c><00:03:29.820><c> road</c><00:03:30.090><c> to</c><00:03:30.480><c> jdk</c>

00:03:30.770 --> 00:03:30.780 align:start position:0%
fourth part is about the road to jdk
 

00:03:30.780 --> 00:03:33.050 align:start position:0%
fourth part is about the road to jdk
nine<00:03:31.140><c> and</c><00:03:31.530><c> some</c><00:03:31.860><c> of</c><00:03:31.980><c> the</c><00:03:32.100><c> things</c><00:03:32.340><c> you</c><00:03:33.030><c> should</c>

00:03:33.050 --> 00:03:33.060 align:start position:0%
nine and some of the things you should
 

00:03:33.060 --> 00:03:37.610 align:start position:0%
nine and some of the things you should
watch<00:03:33.450><c> out</c><00:03:33.690><c> for</c><00:03:34.050><c> while</c><00:03:34.680><c> traveling</c><00:03:35.040><c> on</c><00:03:35.460><c> it</c><00:03:36.620><c> so</c>

00:03:37.610 --> 00:03:37.620 align:start position:0%
watch out for while traveling on it so
 

00:03:37.620 --> 00:03:43.730 align:start position:0%
watch out for while traveling on it so
first<00:03:38.430><c> part</c><00:03:41.270><c> everyone</c><00:03:42.270><c> knows</c><00:03:42.660><c> the</c><00:03:42.990><c> hierarchy</c>

00:03:43.730 --> 00:03:43.740 align:start position:0%
first part everyone knows the hierarchy
 

00:03:43.740 --> 00:03:45.740 align:start position:0%
first part everyone knows the hierarchy
of<00:03:43.770><c> accessibility</c><00:03:44.580><c> in</c><00:03:45.150><c> the</c><00:03:45.240><c> java</c><00:03:45.480><c> language</c>

00:03:45.740 --> 00:03:45.750 align:start position:0%
of accessibility in the java language
 

00:03:45.750 --> 00:03:49.850 align:start position:0%
of accessibility in the java language
and<00:03:46.350><c> vm</c><00:03:47.060><c> it's</c><00:03:48.060><c> simple</c><00:03:48.420><c> to</c><00:03:48.450><c> understand</c><00:03:48.990><c> easy</c><00:03:49.590><c> to</c>

00:03:49.850 --> 00:03:49.860 align:start position:0%
and vm it's simple to understand easy to
 

00:03:49.860 --> 00:03:52.100 align:start position:0%
and vm it's simple to understand easy to
use<00:03:49.890><c> and</c><00:03:50.460><c> strongly</c><00:03:50.910><c> enforced</c><00:03:51.330><c> by</c><00:03:52.080><c> the</c>

00:03:52.100 --> 00:03:52.110 align:start position:0%
use and strongly enforced by the
 

00:03:52.110 --> 00:03:56.360 align:start position:0%
use and strongly enforced by the
compiler<00:03:52.680><c> and</c><00:03:53.040><c> vm</c><00:03:54.500><c> but</c><00:03:55.500><c> it</c><00:03:55.590><c> has</c><00:03:55.770><c> a</c><00:03:56.070><c> big</c>

00:03:56.360 --> 00:03:56.370 align:start position:0%
compiler and vm but it has a big
 

00:03:56.370 --> 00:03:59.330 align:start position:0%
compiler and vm but it has a big
weakness<00:03:56.790><c> the</c><00:03:57.750><c> only</c><00:03:58.230><c> way</c><00:03:58.410><c> to</c><00:03:58.470><c> share</c><00:03:58.920><c> code</c>

00:03:59.330 --> 00:03:59.340 align:start position:0%
weakness the only way to share code
 

00:03:59.340 --> 00:04:03.980 align:start position:0%
weakness the only way to share code
between<00:03:59.700><c> packages</c><00:04:00.510><c> is</c><00:04:01.040><c> with</c><00:04:02.040><c> public</c><00:04:02.790><c> but</c><00:04:03.750><c> then</c>

00:04:03.980 --> 00:04:03.990 align:start position:0%
between packages is with public but then
 

00:04:03.990 --> 00:04:07.190 align:start position:0%
between packages is with public but then
you're<00:04:04.560><c> sharing</c><00:04:05.040><c> with</c><00:04:05.190><c> everyone</c><00:04:06.020><c> it's</c><00:04:07.020><c> not</c>

00:04:07.190 --> 00:04:07.200 align:start position:0%
you're sharing with everyone it's not
 

00:04:07.200 --> 00:04:09.410 align:start position:0%
you're sharing with everyone it's not
surprising<00:04:07.620><c> that</c><00:04:07.860><c> package</c><00:04:08.520><c> friendship</c><00:04:09.150><c> in</c>

00:04:09.410 --> 00:04:09.420 align:start position:0%
surprising that package friendship in
 

00:04:09.420 --> 00:04:11.360 align:start position:0%
surprising that package friendship in
one<00:04:09.840><c> form</c><00:04:10.170><c> or</c><00:04:10.350><c> another</c><00:04:10.410><c> has</c><00:04:10.890><c> been</c><00:04:10.920><c> requested</c>

00:04:11.360 --> 00:04:11.370 align:start position:0%
one form or another has been requested
 

00:04:11.370 --> 00:04:15.620 align:start position:0%
one form or another has been requested
many<00:04:12.210><c> times</c><00:04:12.540><c> over</c><00:04:12.930><c> the</c><00:04:13.230><c> years</c><00:04:14.090><c> one</c><00:04:15.090><c> goal</c><00:04:15.390><c> of</c>

00:04:15.620 --> 00:04:15.630 align:start position:0%
many times over the years one goal of
 

00:04:15.630 --> 00:04:17.360 align:start position:0%
many times over the years one goal of
the<00:04:15.750><c> module</c><00:04:16.049><c> system</c><00:04:16.320><c> is</c><00:04:16.680><c> strong</c>

00:04:17.360 --> 00:04:17.370 align:start position:0%
the module system is strong
 

00:04:17.370 --> 00:04:20.060 align:start position:0%
the module system is strong
encapsulation<00:04:18.060><c> to</c><00:04:18.840><c> allow</c><00:04:19.080><c> a</c><00:04:19.109><c> component</c><00:04:19.799><c> to</c>

00:04:20.060 --> 00:04:20.070 align:start position:0%
encapsulation to allow a component to
 

00:04:20.070 --> 00:04:22.700 align:start position:0%
encapsulation to allow a component to
declare<00:04:20.580><c> which</c><00:04:21.180><c> of</c><00:04:21.359><c> its</c><00:04:21.510><c> public</c><00:04:22.020><c> types</c><00:04:22.380><c> are</c>

00:04:22.700 --> 00:04:22.710 align:start position:0%
declare which of its public types are
 

00:04:22.710 --> 00:04:25.160 align:start position:0%
declare which of its public types are
accessible<00:04:23.400><c> to</c><00:04:23.430><c> other</c><00:04:23.670><c> components</c><00:04:24.360><c> and</c><00:04:24.570><c> which</c>

00:04:25.160 --> 00:04:25.170 align:start position:0%
accessible to other components and which
 

00:04:25.170 --> 00:04:31.280 align:start position:0%
accessible to other components and which
are<00:04:25.380><c> not</c><00:04:27.830><c> the</c><00:04:28.830><c> lines</c><00:04:29.100><c> in</c><00:04:29.970><c> italic</c><00:04:30.479><c> are</c><00:04:30.690><c> the</c>

00:04:31.280 --> 00:04:31.290 align:start position:0%
are not the lines in italic are the
 

00:04:31.290 --> 00:04:32.090 align:start position:0%
are not the lines in italic are the
levels<00:04:31.500><c> of</c><00:04:31.800><c> acts</c>

00:04:32.090 --> 00:04:32.100 align:start position:0%
levels of acts
 

00:04:32.100 --> 00:04:34.850 align:start position:0%
levels of acts
ability<00:04:32.670><c> in</c><00:04:32.970><c> Jerry</c><00:04:33.270><c> canine</c><00:04:33.650><c> connected</c><00:04:34.650><c> with</c>

00:04:34.850 --> 00:04:34.860 align:start position:0%
ability in Jerry canine connected with
 

00:04:34.860 --> 00:04:37.580 align:start position:0%
ability in Jerry canine connected with
the<00:04:35.010><c> module</c><00:04:35.280><c> system</c><00:04:35.960><c> reading</c><00:04:36.960><c> upwards</c><00:04:37.320><c> you</c>

00:04:37.580 --> 00:04:37.590 align:start position:0%
the module system reading upwards you
 

00:04:37.590 --> 00:04:40.550 align:start position:0%
the module system reading upwards you
can<00:04:38.310><c> arrange</c><00:04:38.610><c> for</c><00:04:38.730><c> public</c><00:04:39.480><c> types</c><00:04:39.780><c> to</c><00:04:40.470><c> be</c>

00:04:40.550 --> 00:04:40.560 align:start position:0%
can arrange for public types to be
 

00:04:40.560 --> 00:04:43.630 align:start position:0%
can arrange for public types to be
accessible<00:04:40.980><c> only</c><00:04:41.610><c> within</c><00:04:42.060><c> their</c><00:04:42.480><c> module</c><00:04:42.840><c> or</c>

00:04:43.630 --> 00:04:43.640 align:start position:0%
accessible only within their module or
 

00:04:43.640 --> 00:04:46.220 align:start position:0%
accessible only within their module or
accessible<00:04:44.640><c> within</c><00:04:44.880><c> their</c><00:04:45.210><c> module</c><00:04:45.630><c> and</c><00:04:45.870><c> two</c>

00:04:46.220 --> 00:04:46.230 align:start position:0%
accessible within their module and two
 

00:04:46.230 --> 00:04:49.390 align:start position:0%
accessible within their module and two
other<00:04:46.470><c> specific</c><00:04:47.160><c> friend</c><00:04:47.760><c> modules</c><00:04:48.270><c> or</c>

00:04:49.390 --> 00:04:49.400 align:start position:0%
other specific friend modules or
 

00:04:49.400 --> 00:04:53.030 align:start position:0%
other specific friend modules or
accessible<00:04:50.400><c> to</c><00:04:50.580><c> everyone</c><00:04:50.850><c> as</c><00:04:51.350><c> was</c><00:04:52.350><c> injured</c><00:04:52.980><c> he</c>

00:04:53.030 --> 00:04:53.040 align:start position:0%
accessible to everyone as was injured he
 

00:04:53.040 --> 00:04:57.140 align:start position:0%
accessible to everyone as was injured he
ate<00:04:53.660><c> so</c><00:04:54.660><c> as</c><00:04:54.930><c> usual</c><00:04:55.530><c> migration</c><00:04:56.430><c> drives</c><00:04:56.790><c> a</c><00:04:57.000><c> lot</c>

00:04:57.140 --> 00:04:57.150 align:start position:0%
ate so as usual migration drives a lot
 

00:04:57.150 --> 00:04:59.780 align:start position:0%
ate so as usual migration drives a lot
of<00:04:57.270><c> our</c><00:04:57.390><c> thinking</c><00:04:57.810><c> we</c><00:04:58.800><c> want</c><00:04:59.040><c> to</c><00:04:59.190><c> make</c><00:04:59.340><c> it</c><00:04:59.490><c> easy</c>

00:04:59.780 --> 00:04:59.790 align:start position:0%
of our thinking we want to make it easy
 

00:04:59.790 --> 00:05:02.750 align:start position:0%
of our thinking we want to make it easy
to<00:05:00.120><c> place</c><00:05:00.420><c> an</c><00:05:00.720><c> existing</c><00:05:01.410><c> package</c><00:05:01.830><c> into</c><00:05:02.730><c> a</c>

00:05:02.750 --> 00:05:02.760 align:start position:0%
to place an existing package into a
 

00:05:02.760 --> 00:05:05.600 align:start position:0%
to place an existing package into a
module<00:05:03.210><c> and</c><00:05:03.470><c> immediately</c><00:05:04.470><c> give</c><00:05:04.830><c> that</c><00:05:05.070><c> package</c>

00:05:05.600 --> 00:05:05.610 align:start position:0%
module and immediately give that package
 

00:05:05.610 --> 00:05:08.420 align:start position:0%
module and immediately give that package
the<00:05:05.850><c> benefit</c><00:05:06.330><c> of</c><00:05:06.480><c> strong</c><00:05:06.840><c> encapsulation</c><00:05:07.440><c> we</c>

00:05:08.420 --> 00:05:08.430 align:start position:0%
the benefit of strong encapsulation we
 

00:05:08.430 --> 00:05:11.180 align:start position:0%
the benefit of strong encapsulation we
don't<00:05:08.610><c> want</c><00:05:08.970><c> each</c><00:05:09.390><c> and</c><00:05:09.780><c> every</c><00:05:10.230><c> public</c><00:05:10.800><c> type</c><00:05:11.010><c> in</c>

00:05:11.180 --> 00:05:11.190 align:start position:0%
don't want each and every public type in
 

00:05:11.190 --> 00:05:13.760 align:start position:0%
don't want each and every public type in
a<00:05:11.280><c> package</c><00:05:11.640><c> to</c><00:05:11.820><c> have</c><00:05:11.970><c> to</c><00:05:12.180><c> opt-in</c><00:05:12.930><c> to</c><00:05:12.990><c> strong</c>

00:05:13.760 --> 00:05:13.770 align:start position:0%
a package to have to opt-in to strong
 

00:05:13.770 --> 00:05:16.700 align:start position:0%
a package to have to opt-in to strong
encapsulation<00:05:14.400><c> so</c><00:05:15.110><c> public</c><00:05:16.110><c> types</c><00:05:16.410><c> in</c><00:05:16.650><c> a</c>

00:05:16.700 --> 00:05:16.710 align:start position:0%
encapsulation so public types in a
 

00:05:16.710 --> 00:05:20.210 align:start position:0%
encapsulation so public types in a
package<00:05:17.160><c> are</c><00:05:17.460><c> not</c><00:05:18.300><c> accessible</c><00:05:19.040><c> outside</c><00:05:20.040><c> the</c>

00:05:20.210 --> 00:05:20.220 align:start position:0%
package are not accessible outside the
 

00:05:20.220 --> 00:05:25.220 align:start position:0%
package are not accessible outside the
module<00:05:20.580><c> by</c><00:05:21.240><c> default</c><00:05:22.610><c> that</c><00:05:23.610><c> is</c><00:05:23.930><c> public</c><00:05:24.930><c> on</c><00:05:25.170><c> a</c>

00:05:25.220 --> 00:05:25.230 align:start position:0%
module by default that is public on a
 

00:05:25.230 --> 00:05:27.680 align:start position:0%
module by default that is public on a
type<00:05:25.740><c> declaration</c><00:05:26.400><c> no</c><00:05:27.060><c> longer</c><00:05:27.510><c> means</c>

00:05:27.680 --> 00:05:27.690 align:start position:0%
type declaration no longer means
 

00:05:27.690 --> 00:05:31.430 align:start position:0%
type declaration no longer means
everyone<00:05:28.530><c> can</c><00:05:28.800><c> access</c><00:05:29.010><c> the</c><00:05:29.700><c> type</c><00:05:30.440><c> what</c>

00:05:31.430 --> 00:05:31.440 align:start position:0%
everyone can access the type what
 

00:05:31.440 --> 00:05:33.140 align:start position:0%
everyone can access the type what
happens<00:05:31.800><c> if</c><00:05:31.980><c> someone</c><00:05:32.310><c> tries</c><00:05:32.580><c> to</c><00:05:32.610><c> access</c><00:05:32.910><c> a</c>

00:05:33.140 --> 00:05:33.150 align:start position:0%
happens if someone tries to access a
 

00:05:33.150 --> 00:05:38.330 align:start position:0%
happens if someone tries to access a
public<00:05:33.570><c> type</c><00:05:33.780><c> that's</c><00:05:34.350><c> not</c><00:05:34.590><c> accessible</c><00:05:37.340><c> here's</c>

00:05:38.330 --> 00:05:38.340 align:start position:0%
public type that's not accessible here's
 

00:05:38.340 --> 00:05:41.270 align:start position:0%
public type that's not accessible here's
a<00:05:38.670><c> slightly</c><00:05:39.570><c> aging</c><00:05:40.140><c> but</c><00:05:40.410><c> very</c><00:05:40.770><c> interesting</c>

00:05:41.270 --> 00:05:41.280 align:start position:0%
a slightly aging but very interesting
 

00:05:41.280 --> 00:05:44.210 align:start position:0%
a slightly aging but very interesting
example<00:05:41.790><c> from</c><00:05:42.270><c> glassfish</c><00:05:42.870><c> 4.1</c><00:05:43.500><c> at</c><00:05:43.890><c> the</c><00:05:44.040><c> time</c>

00:05:44.210 --> 00:05:44.220 align:start position:0%
example from glassfish 4.1 at the time
 

00:05:44.220 --> 00:05:47.150 align:start position:0%
example from glassfish 4.1 at the time
of<00:05:44.460><c> screen</c><00:05:45.150><c> grabbing</c><00:05:45.510><c> it</c><00:05:45.990><c> didn't</c><00:05:46.440><c> start</c><00:05:46.890><c> on</c>

00:05:47.150 --> 00:05:47.160 align:start position:0%
of screen grabbing it didn't start on
 

00:05:47.160 --> 00:05:50.120 align:start position:0%
of screen grabbing it didn't start on
jdk<00:05:47.640><c> nine</c><00:05:47.880><c> because</c><00:05:48.360><c> the</c><00:05:48.750><c> vm</c><00:05:49.080><c> through</c><00:05:49.920><c> an</c>

00:05:50.120 --> 00:05:50.130 align:start position:0%
jdk nine because the vm through an
 

00:05:50.130 --> 00:05:52.790 align:start position:0%
jdk nine because the vm through an
illegal<00:05:50.670><c> access</c><00:05:51.090><c> error</c><00:05:51.390><c> I</c><00:05:51.720><c> don't</c><00:05:52.620><c> expect</c>

00:05:52.790 --> 00:05:52.800 align:start position:0%
illegal access error I don't expect
 

00:05:52.800 --> 00:05:54.860 align:start position:0%
illegal access error I don't expect
you'll<00:05:53.040><c> be</c><00:05:53.130><c> able</c><00:05:53.220><c> to</c><00:05:53.340><c> read</c><00:05:53.550><c> the</c><00:05:53.820><c> the</c><00:05:54.240><c> ring</c><00:05:54.450><c> text</c>

00:05:54.860 --> 00:05:54.870 align:start position:0%
you'll be able to read the the ring text
 

00:05:54.870 --> 00:05:57.710 align:start position:0%
you'll be able to read the the ring text
but<00:05:55.020><c> it</c><00:05:55.110><c> says</c><00:05:55.760><c> illegal</c><00:05:56.760><c> access</c><00:05:56.970><c> error</c><00:05:57.150><c> class</c>

00:05:57.710 --> 00:05:57.720 align:start position:0%
but it says illegal access error class
 

00:05:57.720 --> 00:05:59.870 align:start position:0%
but it says illegal access error class
Khamsin<00:05:58.350><c> enterprise</c><00:05:58.860><c> security</c><00:05:59.280><c> provide</c><00:05:59.850><c> a</c>

00:05:59.870 --> 00:05:59.880 align:start position:0%
Khamsin enterprise security provide a
 

00:05:59.880 --> 00:06:03.260 align:start position:0%
Khamsin enterprise security provide a
policy<00:06:00.390><c> rapper</c><00:06:00.570><c> in</c><00:06:01.460><c> unnamed</c><00:06:02.460><c> module</c><00:06:02.820><c> don't</c>

00:06:03.260 --> 00:06:03.270 align:start position:0%
policy rapper in unnamed module don't
 

00:06:03.270 --> 00:06:05.830 align:start position:0%
policy rapper in unnamed module don't
worry<00:06:03.420><c> about</c><00:06:03.570><c> that</c><00:06:03.750><c> yet</c><00:06:03.920><c> cannot</c><00:06:04.920><c> access</c><00:06:05.490><c> class</c>

00:06:05.830 --> 00:06:05.840 align:start position:0%
worry about that yet cannot access class
 

00:06:05.840 --> 00:06:10.280 align:start position:0%
worry about that yet cannot access class
Sun<00:06:06.950><c> security</c><00:06:07.950><c> provider</c><00:06:08.700><c> policy</c><00:06:09.690><c> file</c><00:06:09.930><c> in</c>

00:06:10.280 --> 00:06:10.290 align:start position:0%
Sun security provider policy file in
 

00:06:10.290 --> 00:06:13.580 align:start position:0%
Sun security provider policy file in
module<00:06:11.070><c> Java</c><00:06:11.400><c> base</c><00:06:11.930><c> the</c><00:06:12.930><c> point</c><00:06:13.170><c> is</c><00:06:13.290><c> that</c><00:06:13.470><c> the</c>

00:06:13.580 --> 00:06:13.590 align:start position:0%
module Java base the point is that the
 

00:06:13.590 --> 00:06:16.250 align:start position:0%
module Java base the point is that the
class<00:06:13.860><c> sons</c><00:06:14.520><c> security</c><00:06:15.180><c> provider</c><00:06:15.600><c> policy</c><00:06:16.050><c> file</c>

00:06:16.250 --> 00:06:16.260 align:start position:0%
class sons security provider policy file
 

00:06:16.260 --> 00:06:20.210 align:start position:0%
class sons security provider policy file
is<00:06:16.530><c> declared</c><00:06:17.010><c> public</c><00:06:17.840><c> but</c><00:06:18.840><c> since</c><00:06:19.500><c> it's</c><00:06:19.680><c> a</c><00:06:19.800><c> jdk</c>

00:06:20.210 --> 00:06:20.220 align:start position:0%
is declared public but since it's a jdk
 

00:06:20.220 --> 00:06:23.540 align:start position:0%
is declared public but since it's a jdk
internal<00:06:21.000><c> API</c><00:06:21.390><c> it's</c><00:06:22.320><c> now</c><00:06:22.530><c> accessible</c><00:06:23.040><c> only</c>

00:06:23.540 --> 00:06:23.550 align:start position:0%
internal API it's now accessible only
 

00:06:23.550 --> 00:06:26.480 align:start position:0%
internal API it's now accessible only
within<00:06:24.090><c> the</c><00:06:24.300><c> Java</c><00:06:24.660><c> base</c><00:06:24.870><c> module</c><00:06:25.490><c> sorry</c>

00:06:26.480 --> 00:06:26.490 align:start position:0%
within the Java base module sorry
 

00:06:26.490 --> 00:06:27.950 align:start position:0%
within the Java base module sorry
glassfish<00:06:27.030><c> you</c><00:06:27.270><c> need</c><00:06:27.450><c> to</c><00:06:27.570><c> find</c><00:06:27.840><c> an</c>

00:06:27.950 --> 00:06:27.960 align:start position:0%
glassfish you need to find an
 

00:06:27.960 --> 00:06:34.620 align:start position:0%
glassfish you need to find an
alternative<00:06:28.760><c> security</c><00:06:29.760><c> API</c>

00:06:34.620 --> 00:06:34.630 align:start position:0%
 
 

00:06:34.630 --> 00:06:38.010 align:start position:0%
 
in<00:06:35.170><c> jdk</c><00:06:35.680><c> nine</c><00:06:35.980><c> modules</c><00:06:36.790><c> are</c><00:06:37.330><c> first</c><00:06:37.690><c> class</c>

00:06:38.010 --> 00:06:38.020 align:start position:0%
in jdk nine modules are first class
 

00:06:38.020 --> 00:06:40.650 align:start position:0%
in jdk nine modules are first class
program<00:06:38.710><c> components</c><00:06:39.460><c> like</c><00:06:39.850><c> classes</c><00:06:40.420><c> and</c>

00:06:40.650 --> 00:06:40.660 align:start position:0%
program components like classes and
 

00:06:40.660 --> 00:06:43.620 align:start position:0%
program components like classes and
interfaces<00:06:41.490><c> here's</c><00:06:42.490><c> the</c><00:06:42.730><c> declaration</c><00:06:43.390><c> of</c><00:06:43.420><c> the</c>

00:06:43.620 --> 00:06:43.630 align:start position:0%
interfaces here's the declaration of the
 

00:06:43.630 --> 00:06:46.340 align:start position:0%
interfaces here's the declaration of the
java<00:06:44.020><c> sequel</c><00:06:44.530><c> module</c><00:06:44.890><c> that</c><00:06:45.100><c> contains</c><00:06:45.280><c> JDBC</c>

00:06:46.340 --> 00:06:46.350 align:start position:0%
java sequel module that contains JDBC
 

00:06:46.350 --> 00:06:49.500 align:start position:0%
java sequel module that contains JDBC
it's<00:06:47.350><c> in</c><00:06:47.500><c> a</c><00:06:47.590><c> file</c><00:06:47.830><c> called</c><00:06:48.190><c> module</c><00:06:48.760><c> info</c><00:06:49.090><c> java</c>

00:06:49.500 --> 00:06:49.510 align:start position:0%
it's in a file called module info java
 

00:06:49.510 --> 00:06:51.900 align:start position:0%
it's in a file called module info java
in<00:06:49.810><c> a</c><00:06:50.260><c> directory</c><00:06:50.770><c> named</c><00:06:51.040><c> after</c><00:06:51.310><c> the</c><00:06:51.610><c> module</c>

00:06:51.900 --> 00:06:51.910 align:start position:0%
in a directory named after the module
 

00:06:51.910 --> 00:06:54.390 align:start position:0%
in a directory named after the module
javed<00:06:52.480><c> or</c><00:06:52.570><c> sequel</c><00:06:52.900><c> the</c><00:06:53.500><c> compiler</c><00:06:53.860><c> treats</c><00:06:54.190><c> this</c>

00:06:54.390 --> 00:06:54.400 align:start position:0%
javed or sequel the compiler treats this
 

00:06:54.400 --> 00:06:57.030 align:start position:0%
javed or sequel the compiler treats this
like<00:06:54.730><c> any</c><00:06:54.970><c> other</c><00:06:55.180><c> java</c><00:06:55.420><c> file</c><00:06:55.720><c> and</c><00:06:56.040><c> translates</c>

00:06:57.030 --> 00:06:57.040 align:start position:0%
like any other java file and translates
 

00:06:57.040 --> 00:06:59.520 align:start position:0%
like any other java file and translates
it<00:06:57.250><c> to</c><00:06:57.310><c> module</c><00:06:57.940><c> in</c><00:06:58.060><c> photo</c><00:06:58.360><c> class</c><00:06:58.420><c> which</c><00:06:59.410><c> you</c>

00:06:59.520 --> 00:06:59.530 align:start position:0%
it to module in photo class which you
 

00:06:59.530 --> 00:07:01.860 align:start position:0%
it to module in photo class which you
can<00:06:59.710><c> put</c><00:06:59.890><c> in</c><00:07:00.070><c> a</c><00:07:00.310><c> jar</c><00:07:00.550><c> file</c><00:07:00.820><c> as</c><00:07:01.060><c> normal</c><00:07:01.570><c> we</c><00:07:01.750><c> would</c>

00:07:01.860 --> 00:07:01.870 align:start position:0%
can put in a jar file as normal we would
 

00:07:01.870 --> 00:07:05.760 align:start position:0%
can put in a jar file as normal we would
call<00:07:02.050><c> that</c><00:07:02.110><c> a</c><00:07:02.290><c> modular</c><00:07:02.980><c> jar</c><00:07:04.320><c> the</c><00:07:05.320><c> package</c>

00:07:05.760 --> 00:07:05.770 align:start position:0%
call that a modular jar the package
 

00:07:05.770 --> 00:07:08.070 align:start position:0%
call that a modular jar the package
hierarchy<00:07:06.400><c> exists</c><00:07:07.030><c> in</c><00:07:07.150><c> the</c><00:07:07.270><c> same</c><00:07:07.540><c> directory</c>

00:07:08.070 --> 00:07:08.080 align:start position:0%
hierarchy exists in the same directory
 

00:07:08.080 --> 00:07:11.300 align:start position:0%
hierarchy exists in the same directory
source<00:07:08.470><c> java</c><00:07:09.010><c> sequel</c><00:07:09.490><c> as</c><00:07:09.700><c> module</c><00:07:10.480><c> info</c><00:07:10.720><c> java</c>

00:07:11.300 --> 00:07:11.310 align:start position:0%
source java sequel as module info java
 

00:07:11.310 --> 00:07:14.130 align:start position:0%
source java sequel as module info java
so<00:07:12.310><c> module</c><00:07:12.610><c> effort</c><00:07:12.820><c> at</c><00:07:12.910><c> java</c><00:07:13.120><c> is</c><00:07:13.330><c> outside</c><00:07:13.900><c> of</c>

00:07:14.130 --> 00:07:14.140 align:start position:0%
so module effort at java is outside of
 

00:07:14.140 --> 00:07:16.860 align:start position:0%
so module effort at java is outside of
all<00:07:14.260><c> of</c><00:07:14.440><c> the</c><00:07:14.530><c> packages</c><00:07:14.710><c> in</c><00:07:15.340><c> the</c><00:07:15.400><c> module</c><00:07:16.060><c> that's</c>

00:07:16.860 --> 00:07:16.870 align:start position:0%
all of the packages in the module that's
 

00:07:16.870 --> 00:07:18.210 align:start position:0%
all of the packages in the module that's
because<00:07:17.230><c> it's</c><00:07:17.350><c> the</c><00:07:17.470><c> job</c><00:07:17.710><c> of</c><00:07:17.740><c> the</c><00:07:17.890><c> module</c>

00:07:18.210 --> 00:07:18.220 align:start position:0%
because it's the job of the module
 

00:07:18.220 --> 00:07:21.060 align:start position:0%
because it's the job of the module
declaration<00:07:18.820><c> to</c><00:07:19.000><c> say</c><00:07:19.210><c> whether</c><00:07:19.870><c> a</c><00:07:20.200><c> package</c><00:07:20.830><c> is</c>

00:07:21.060 --> 00:07:21.070 align:start position:0%
declaration to say whether a package is
 

00:07:21.070 --> 00:07:24.420 align:start position:0%
declaration to say whether a package is
strongly<00:07:21.430><c> encapsulated</c><00:07:22.180><c> or</c><00:07:22.510><c> not</c><00:07:23.130><c> it's</c><00:07:24.130><c> easy</c>

00:07:24.420 --> 00:07:24.430 align:start position:0%
strongly encapsulated or not it's easy
 

00:07:24.430 --> 00:07:27.360 align:start position:0%
strongly encapsulated or not it's easy
to<00:07:24.670><c> get</c><00:07:24.820><c> strong</c><00:07:25.450><c> encapsulation</c><00:07:26.280><c> for</c><00:07:27.280><c> the</c>

00:07:27.360 --> 00:07:27.370 align:start position:0%
to get strong encapsulation for the
 

00:07:27.370 --> 00:07:29.520 align:start position:0%
to get strong encapsulation for the
types<00:07:27.610><c> in</c><00:07:27.760><c> your</c><00:07:27.880><c> packages</c><00:07:28.330><c> don't</c><00:07:28.990><c> mention</c><00:07:29.230><c> the</c>

00:07:29.520 --> 00:07:29.530 align:start position:0%
types in your packages don't mention the
 

00:07:29.530 --> 00:07:32.880 align:start position:0%
types in your packages don't mention the
package<00:07:29.890><c> in</c><00:07:30.130><c> the</c><00:07:30.700><c> module</c><00:07:31.000><c> declaration</c><00:07:31.890><c> to</c>

00:07:32.880 --> 00:07:32.890 align:start position:0%
package in the module declaration to
 

00:07:32.890 --> 00:07:36.060 align:start position:0%
package in the module declaration to
allow<00:07:33.190><c> other</c><00:07:33.430><c> modules</c><00:07:33.940><c> to</c><00:07:34.600><c> access</c><00:07:35.170><c> one</c><00:07:35.950><c> of</c>

00:07:36.060 --> 00:07:36.070 align:start position:0%
allow other modules to access one of
 

00:07:36.070 --> 00:07:37.590 align:start position:0%
allow other modules to access one of
your<00:07:36.190><c> packages</c><00:07:36.670><c> or</c><00:07:36.820><c> more</c><00:07:36.970><c> specifically</c><00:07:37.480><c> the</c>

00:07:37.590 --> 00:07:37.600 align:start position:0%
your packages or more specifically the
 

00:07:37.600 --> 00:07:40.260 align:start position:0%
your packages or more specifically the
public<00:07:38.110><c> types</c><00:07:38.500><c> of</c><00:07:38.710><c> your</c><00:07:38.830><c> package</c><00:07:39.190><c> just</c><00:07:40.030><c> add</c>

00:07:40.260 --> 00:07:40.270 align:start position:0%
public types of your package just add
 

00:07:40.270 --> 00:07:43.800 align:start position:0%
public types of your package just add
and<00:07:40.540><c> exports</c><00:07:41.440><c> clause</c><00:07:42.070><c> as</c><00:07:42.480><c> I</c><00:07:43.480><c> said</c><00:07:43.540><c> you</c><00:07:43.780><c> can</c>

00:07:43.800 --> 00:07:43.810 align:start position:0%
and exports clause as I said you can
 

00:07:43.810 --> 00:07:46.050 align:start position:0%
and exports clause as I said you can
export<00:07:44.290><c> to</c><00:07:44.500><c> all</c><00:07:44.710><c> other</c><00:07:44.980><c> modules</c><00:07:45.400><c> as</c><00:07:45.730><c> is</c>

00:07:46.050 --> 00:07:46.060 align:start position:0%
export to all other modules as is
 

00:07:46.060 --> 00:07:49.100 align:start position:0%
export to all other modules as is
happening<00:07:46.450><c> here</c><00:07:46.480><c> or</c><00:07:46.870><c> you</c><00:07:47.590><c> can</c><00:07:47.740><c> say</c><00:07:47.890><c> exports</c><00:07:48.580><c> to</c>

00:07:49.100 --> 00:07:49.110 align:start position:0%
happening here or you can say exports to
 

00:07:49.110 --> 00:07:51.450 align:start position:0%
happening here or you can say exports to
to<00:07:50.110><c> give</c><00:07:50.230><c> access</c><00:07:50.410><c> to</c><00:07:50.800><c> only</c><00:07:50.920><c> your</c><00:07:51.190><c> friend</c>

00:07:51.450 --> 00:07:51.460 align:start position:0%
to give access to only your friend
 

00:07:51.460 --> 00:07:55.800 align:start position:0%
to give access to only your friend
modules<00:07:52.680><c> at</c><00:07:53.680><c> compile</c><00:07:54.310><c> time</c><00:07:54.600><c> Java</c><00:07:55.600><c> Sea</c>

00:07:55.800 --> 00:07:55.810 align:start position:0%
modules at compile time Java Sea
 

00:07:55.810 --> 00:07:58.260 align:start position:0%
modules at compile time Java Sea
prevents<00:07:56.380><c> code</c><00:07:56.650><c> outside</c><00:07:57.460><c> the</c><00:07:57.640><c> Java</c><00:07:57.850><c> sequel</c>

00:07:58.260 --> 00:07:58.270 align:start position:0%
prevents code outside the Java sequel
 

00:07:58.270 --> 00:08:00.090 align:start position:0%
prevents code outside the Java sequel
module<00:07:58.570><c> from</c><00:07:58.810><c> accessing</c><00:07:59.260><c> the</c><00:07:59.530><c> public</c><00:07:59.860><c> types</c>

00:08:00.090 --> 00:08:00.100 align:start position:0%
module from accessing the public types
 

00:08:00.100 --> 00:08:02.580 align:start position:0%
module from accessing the public types
of<00:08:00.400><c> any</c><00:08:00.940><c> packages</c><00:08:01.450><c> in</c><00:08:01.570><c> it</c><00:08:01.720><c> except</c><00:08:02.200><c> for</c><00:08:02.290><c> those</c>

00:08:02.580 --> 00:08:02.590 align:start position:0%
of any packages in it except for those
 

00:08:02.590 --> 00:08:06.090 align:start position:0%
of any packages in it except for those
three<00:08:03.280><c> packages</c><00:08:03.610><c> listed</c><00:08:04.590><c> you</c><00:08:05.590><c> get</c><00:08:05.770><c> the</c><00:08:05.890><c> same</c>

00:08:06.090 --> 00:08:06.100 align:start position:0%
three packages listed you get the same
 

00:08:06.100 --> 00:08:08.010 align:start position:0%
three packages listed you get the same
compile<00:08:06.520><c> time</c><00:08:06.760><c> error</c><00:08:06.790><c> as</c><00:08:07.210><c> when</c><00:08:07.690><c> you</c><00:08:07.780><c> try</c><00:08:07.960><c> to</c>

00:08:08.010 --> 00:08:08.020 align:start position:0%
compile time error as when you try to
 

00:08:08.020 --> 00:08:10.140 align:start position:0%
compile time error as when you try to
access<00:08:08.230><c> a</c><00:08:08.470><c> package</c><00:08:08.950><c> private</c><00:08:09.370><c> type</c><00:08:09.610><c> from</c>

00:08:10.140 --> 00:08:10.150 align:start position:0%
access a package private type from
 

00:08:10.150 --> 00:08:12.410 align:start position:0%
access a package private type from
outside<00:08:10.510><c> it's</c><00:08:10.690><c> packaged</c><00:08:11.080><c> in</c><00:08:11.290><c> J</c><00:08:11.530><c> decades</c><00:08:11.890><c> and</c>

00:08:12.410 --> 00:08:12.420 align:start position:0%
outside it's packaged in J decades and
 

00:08:12.420 --> 00:08:15.150 align:start position:0%
outside it's packaged in J decades and
then<00:08:13.420><c> at</c><00:08:13.870><c> runs</c><00:08:14.170><c> if</c><00:08:14.410><c> you</c><00:08:14.530><c> somehow</c><00:08:14.770><c> built</c><00:08:15.070><c> the</c>

00:08:15.150 --> 00:08:15.160 align:start position:0%
then at runs if you somehow built the
 

00:08:15.160 --> 00:08:17.940 align:start position:0%
then at runs if you somehow built the
class<00:08:15.340><c> files</c><00:08:15.640><c> by</c><00:08:15.850><c> hand</c><00:08:16.120><c> at</c><00:08:16.360><c> runtime</c><00:08:16.570><c> a</c><00:08:17.050><c> runtime</c>

00:08:17.940 --> 00:08:17.950 align:start position:0%
class files by hand at runtime a runtime
 

00:08:17.950 --> 00:08:20.040 align:start position:0%
class files by hand at runtime a runtime
the<00:08:18.100><c> vm</c><00:08:18.340><c> throws</c><00:08:18.940><c> an</c><00:08:19.060><c> illegal</c><00:08:19.420><c> access</c><00:08:19.810><c> error</c>

00:08:20.040 --> 00:08:20.050 align:start position:0%
the vm throws an illegal access error
 

00:08:20.050 --> 00:08:21.990 align:start position:0%
the vm throws an illegal access error
like<00:08:20.500><c> you</c><00:08:20.650><c> saw</c><00:08:20.860><c> with</c><00:08:21.070><c> glassfish</c><00:08:21.280><c> if</c><00:08:21.700><c> you</c><00:08:21.790><c> try</c>

00:08:21.990 --> 00:08:22.000 align:start position:0%
like you saw with glassfish if you try
 

00:08:22.000 --> 00:08:24.240 align:start position:0%
like you saw with glassfish if you try
to<00:08:22.060><c> access</c><00:08:22.300><c> the</c><00:08:23.200><c> public</c><00:08:23.500><c> types</c><00:08:23.710><c> of</c><00:08:23.920><c> anything</c>

00:08:24.240 --> 00:08:24.250 align:start position:0%
to access the public types of anything
 

00:08:24.250 --> 00:08:27.150 align:start position:0%
to access the public types of anything
except<00:08:25.000><c> those</c><00:08:25.090><c> three</c><00:08:25.300><c> packages</c><00:08:25.920><c> let's</c><00:08:26.920><c> dive</c>

00:08:27.150 --> 00:08:27.160 align:start position:0%
except those three packages let's dive
 

00:08:27.160 --> 00:08:32.000 align:start position:0%
except those three packages let's dive
into<00:08:27.400><c> the</c><00:08:27.580><c> vm</c><00:08:27.850><c> more</c><00:08:28.120><c> deeply</c><00:08:30.720><c> traditionally</c>

00:08:32.000 --> 00:08:32.010 align:start position:0%
into the vm more deeply traditionally
 

00:08:32.010 --> 00:08:34.500 align:start position:0%
into the vm more deeply traditionally
accessibility<00:08:33.010><c> in</c><00:08:33.280><c> the</c><00:08:33.400><c> Java</c><00:08:33.640><c> platform</c><00:08:33.760><c> is</c>

00:08:34.500 --> 00:08:34.510 align:start position:0%
accessibility in the Java platform is
 

00:08:34.510 --> 00:08:37.140 align:start position:0%
accessibility in the Java platform is
about<00:08:34.780><c> who</c><00:08:35.080><c> is</c><00:08:35.229><c> doing</c><00:08:35.440><c> the</c><00:08:35.650><c> access</c><00:08:36.099><c> and</c><00:08:36.340><c> what</c>

00:08:37.140 --> 00:08:37.150 align:start position:0%
about who is doing the access and what
 

00:08:37.150 --> 00:08:39.779 align:start position:0%
about who is doing the access and what
is<00:08:37.419><c> the</c><00:08:37.750><c> public</c><00:08:38.410><c> protected</c><00:08:38.890><c> private</c><00:08:39.280><c> flag</c><00:08:39.550><c> on</c>

00:08:39.779 --> 00:08:39.789 align:start position:0%
is the public protected private flag on
 

00:08:39.789 --> 00:08:43.170 align:start position:0%
is the public protected private flag on
the<00:08:39.940><c> target</c><00:08:40.210><c> class</c><00:08:40.680><c> at</c><00:08:41.680><c> runtime</c><00:08:42.010><c> the</c><00:08:42.460><c> vm</c><00:08:42.729><c> uses</c>

00:08:43.170 --> 00:08:43.180 align:start position:0%
the target class at runtime the vm uses
 

00:08:43.180 --> 00:08:45.300 align:start position:0%
the target class at runtime the vm uses
the<00:08:43.330><c> class</c><00:08:43.660><c> loader</c><00:08:44.050><c> of</c><00:08:44.290><c> the</c><00:08:44.410><c> accessing</c><00:08:45.070><c> class</c>

00:08:45.300 --> 00:08:45.310 align:start position:0%
the class loader of the accessing class
 

00:08:45.310 --> 00:08:48.250 align:start position:0%
the class loader of the accessing class
to<00:08:46.089><c> find</c><00:08:46.420><c> and</c><00:08:46.810><c> load</c><00:08:47.020><c> the</c><00:08:47.260><c> target</c><00:08:47.620><c> class</c>

00:08:48.250 --> 00:08:48.260 align:start position:0%
to find and load the target class
 

00:08:48.260 --> 00:08:50.890 align:start position:0%
to find and load the target class
and<00:08:48.350><c> then</c><00:08:48.740><c> the</c><00:08:48.860><c> vm</c><00:08:49.130><c> checks</c><00:08:49.490><c> the</c><00:08:49.790><c> flag</c><00:08:50.030><c> public</c>

00:08:50.890 --> 00:08:50.900 align:start position:0%
and then the vm checks the flag public
 

00:08:50.900 --> 00:08:53.880 align:start position:0%
and then the vm checks the flag public
protected<00:08:51.290><c> private</c><00:08:51.620><c> of</c><00:08:51.710><c> that</c><00:08:52.220><c> target</c><00:08:52.610><c> class</c>

00:08:53.880 --> 00:08:53.890 align:start position:0%
protected private of that target class
 

00:08:53.890 --> 00:08:57.400 align:start position:0%
protected private of that target class
now<00:08:54.890><c> because</c><00:08:55.250><c> the</c><00:08:55.490><c> vm</c><00:08:55.880><c> relies</c><00:08:56.780><c> on</c><00:08:56.810><c> class</c>

00:08:57.400 --> 00:08:57.410 align:start position:0%
now because the vm relies on class
 

00:08:57.410 --> 00:09:00.550 align:start position:0%
now because the vm relies on class
loaders<00:08:58.060><c> people</c><00:08:59.060><c> can</c><00:08:59.270><c> create</c><00:08:59.720><c> loaders</c><00:09:00.230><c> that</c>

00:09:00.550 --> 00:09:00.560 align:start position:0%
loaders people can create loaders that
 

00:09:00.560 --> 00:09:03.430 align:start position:0%
loaders people can create loaders that
only<00:09:00.800><c> know</c><00:09:01.160><c> how</c><00:09:01.400><c> to</c><00:09:01.430><c> find</c><00:09:01.970><c> and</c><00:09:02.390><c> load</c><00:09:02.810><c> classes</c>

00:09:03.430 --> 00:09:03.440 align:start position:0%
only know how to find and load classes
 

00:09:03.440 --> 00:09:06.670 align:start position:0%
only know how to find and load classes
of<00:09:03.680><c> certain</c><00:09:04.310><c> packages</c><00:09:04.700><c> in</c><00:09:05.000><c> effect</c><00:09:05.900><c> loaders</c>

00:09:06.670 --> 00:09:06.680 align:start position:0%
of certain packages in effect loaders
 

00:09:06.680 --> 00:09:09.430 align:start position:0%
of certain packages in effect loaders
can<00:09:07.220><c> isolate</c><00:09:07.730><c> one</c><00:09:08.000><c> package</c><00:09:08.450><c> from</c><00:09:08.930><c> another</c><00:09:09.200><c> in</c>

00:09:09.430 --> 00:09:09.440 align:start position:0%
can isolate one package from another in
 

00:09:09.440 --> 00:09:13.330 align:start position:0%
can isolate one package from another in
the<00:09:09.520><c> top</c><00:09:10.520><c> picture</c><00:09:10.990><c> class</c><00:09:11.990><c> PC</c><00:09:12.650><c> is</c><00:09:12.890><c> trying</c><00:09:13.220><c> to</c>

00:09:13.330 --> 00:09:13.340 align:start position:0%
the top picture class PC is trying to
 

00:09:13.340 --> 00:09:17.950 align:start position:0%
the top picture class PC is trying to
access<00:09:13.820><c> class</c><00:09:14.300><c> QD</c><00:09:14.980><c> the</c><00:09:15.980><c> loader</c><00:09:16.250><c> for</c><00:09:16.760><c> PC</c><00:09:17.270><c> knows</c>

00:09:17.950 --> 00:09:17.960 align:start position:0%
access class QD the loader for PC knows
 

00:09:17.960 --> 00:09:20.410 align:start position:0%
access class QD the loader for PC knows
to<00:09:18.350><c> delegate</c><00:09:18.710><c> it</c><00:09:18.950><c> just</c><00:09:19.310><c> just</c><00:09:19.550><c> bear</c><00:09:19.970><c> with</c><00:09:20.000><c> me</c><00:09:20.150><c> it</c>

00:09:20.410 --> 00:09:20.420 align:start position:0%
to delegate it just just bear with me it
 

00:09:20.420 --> 00:09:23.470 align:start position:0%
to delegate it just just bear with me it
knows<00:09:20.720><c> to</c><00:09:20.750><c> delegate</c><00:09:21.380><c> to</c><00:09:22.220><c> another</c><00:09:22.880><c> loader</c><00:09:23.180><c> for</c>

00:09:23.470 --> 00:09:23.480 align:start position:0%
knows to delegate to another loader for
 

00:09:23.480 --> 00:09:27.490 align:start position:0%
knows to delegate to another loader for
any<00:09:23.660><c> class</c><00:09:23.990><c> in</c><00:09:24.260><c> package</c><00:09:24.590><c> Q</c><00:09:24.890><c> such</c><00:09:25.370><c> as</c><00:09:25.550><c> QD</c><00:09:26.500><c> only</c>

00:09:27.490 --> 00:09:27.500 align:start position:0%
any class in package Q such as QD only
 

00:09:27.500 --> 00:09:30.130 align:start position:0%
any class in package Q such as QD only
when<00:09:27.680><c> that</c><00:09:27.890><c> other</c><00:09:28.070><c> loader</c><00:09:28.520><c> has</c><00:09:28.850><c> found</c><00:09:29.540><c> loaded</c>

00:09:30.130 --> 00:09:30.140 align:start position:0%
when that other loader has found loaded
 

00:09:30.140 --> 00:09:33.310 align:start position:0%
when that other loader has found loaded
QD<00:09:30.710><c> can</c><00:09:31.460><c> the</c><00:09:31.580><c> vm</c><00:09:31.880><c> check</c><00:09:32.480><c> its</c><00:09:32.630><c> flags</c><00:09:32.930><c> to</c>

00:09:33.310 --> 00:09:33.320 align:start position:0%
QD can the vm check its flags to
 

00:09:33.320 --> 00:09:36.040 align:start position:0%
QD can the vm check its flags to
determine<00:09:33.860><c> if</c><00:09:34.040><c> it's</c><00:09:34.850><c> public</c><00:09:35.240><c> enough</c><00:09:35.510><c> for</c><00:09:35.750><c> POC</c>

00:09:36.040 --> 00:09:36.050 align:start position:0%
determine if it's public enough for POC
 

00:09:36.050 --> 00:09:39.600 align:start position:0%
determine if it's public enough for POC
to<00:09:36.470><c> access</c><00:09:36.860><c> it</c><00:09:37.570><c> now</c><00:09:38.570><c> in</c><00:09:38.720><c> the</c><00:09:38.840><c> bottom</c><00:09:39.050><c> picture</c>

00:09:39.600 --> 00:09:39.610 align:start position:0%
to access it now in the bottom picture
 

00:09:39.610 --> 00:09:44.350 align:start position:0%
to access it now in the bottom picture
the<00:09:40.610><c> loader</c><00:09:40.880><c> for</c><00:09:41.210><c> PC</c><00:09:41.810><c> has</c><00:09:42.440><c> no</c><00:09:43.130><c> idea</c><00:09:43.520><c> where</c><00:09:44.210><c> to</c>

00:09:44.350 --> 00:09:44.360 align:start position:0%
the loader for PC has no idea where to
 

00:09:44.360 --> 00:09:48.010 align:start position:0%
the loader for PC has no idea where to
find<00:09:44.390><c> package</c><00:09:45.050><c> Q</c><00:09:45.350><c> so</c><00:09:46.280><c> no</c><00:09:46.460><c> access</c><00:09:47.060><c> to</c><00:09:47.090><c> QD</c><00:09:47.840><c> is</c>

00:09:48.010 --> 00:09:48.020 align:start position:0%
find package Q so no access to QD is
 

00:09:48.020 --> 00:09:51.940 align:start position:0%
find package Q so no access to QD is
possible<00:09:48.620><c> from</c><00:09:49.010><c> PC</c><00:09:50.440><c> technically</c><00:09:51.440><c> this</c><00:09:51.680><c> isn't</c>

00:09:51.940 --> 00:09:51.950 align:start position:0%
possible from PC technically this isn't
 

00:09:51.950 --> 00:09:54.910 align:start position:0%
possible from PC technically this isn't
a<00:09:52.280><c> failure</c><00:09:52.670><c> of</c><00:09:52.700><c> accessibility</c><00:09:53.570><c> since</c><00:09:54.140><c> the</c><00:09:54.680><c> vm</c>

00:09:54.910 --> 00:09:54.920 align:start position:0%
a failure of accessibility since the vm
 

00:09:54.920 --> 00:09:57.370 align:start position:0%
a failure of accessibility since the vm
never<00:09:55.160><c> actually</c><00:09:55.370><c> gets</c><00:09:55.790><c> to</c><00:09:55.850><c> load</c><00:09:56.150><c> never</c><00:09:57.140><c> gets</c>

00:09:57.370 --> 00:09:57.380 align:start position:0%
never actually gets to load never gets
 

00:09:57.380 --> 00:10:00.460 align:start position:0%
never actually gets to load never gets
to<00:09:57.500><c> check</c><00:09:57.740><c> the</c><00:09:57.950><c> flags</c><00:09:58.250><c> of</c><00:09:58.640><c> QLD</c><00:09:59.200><c> instead</c><00:10:00.200><c> it's</c><00:10:00.350><c> a</c>

00:10:00.460 --> 00:10:00.470 align:start position:0%
to check the flags of QLD instead it's a
 

00:10:00.470 --> 00:10:03.850 align:start position:0%
to check the flags of QLD instead it's a
failure<00:10:00.680><c> of</c><00:10:00.830><c> visibility</c><00:10:01.510><c> QD</c><00:10:02.510><c> is</c><00:10:02.720><c> invisible</c><00:10:03.590><c> to</c>

00:10:03.850 --> 00:10:03.860 align:start position:0%
failure of visibility QD is invisible to
 

00:10:03.860 --> 00:10:06.970 align:start position:0%
failure of visibility QD is invisible to
PC<00:10:04.820><c> because</c><00:10:05.090><c> the</c><00:10:05.420><c> class</c><00:10:05.630><c> loading</c><00:10:05.980><c> couldn't</c>

00:10:06.970 --> 00:10:06.980 align:start position:0%
PC because the class loading couldn't
 

00:10:06.980 --> 00:10:10.360 align:start position:0%
PC because the class loading couldn't
find<00:10:07.220><c> QD</c><00:10:08.320><c> still</c><00:10:09.320><c> the</c><00:10:09.800><c> effect</c><00:10:10.130><c> is</c><00:10:10.250><c> quite</c>

00:10:10.360 --> 00:10:10.370 align:start position:0%
find QD still the effect is quite
 

00:10:10.370 --> 00:10:12.430 align:start position:0%
find QD still the effect is quite
powerful<00:10:10.880><c> if</c><00:10:11.060><c> the</c><00:10:11.540><c> class</c><00:10:11.810><c> loader</c><00:10:12.110><c> of</c><00:10:12.350><c> the</c>

00:10:12.430 --> 00:10:12.440 align:start position:0%
powerful if the class loader of the
 

00:10:12.440 --> 00:10:15.850 align:start position:0%
powerful if the class loader of the
accessing<00:10:13.130><c> class</c><00:10:14.230><c> cannot</c><00:10:15.230><c> find</c><00:10:15.590><c> and</c>

00:10:15.850 --> 00:10:15.860 align:start position:0%
accessing class cannot find and
 

00:10:15.860 --> 00:10:17.500 align:start position:0%
accessing class cannot find and
load<00:10:16.010><c> the</c><00:10:16.190><c> target</c><00:10:16.550><c> class</c><00:10:16.760><c> then</c><00:10:17.210><c> it</c><00:10:17.330><c> doesn't</c>

00:10:17.500 --> 00:10:17.510 align:start position:0%
load the target class then it doesn't
 

00:10:17.510 --> 00:10:19.480 align:start position:0%
load the target class then it doesn't
matter<00:10:17.690><c> if</c><00:10:18.140><c> the</c><00:10:18.290><c> target</c><00:10:18.620><c> class</c><00:10:18.860><c> is</c><00:10:19.070><c> public</c>

00:10:19.480 --> 00:10:19.490 align:start position:0%
matter if the target class is public
 

00:10:19.490 --> 00:10:23.110 align:start position:0%
matter if the target class is public
it's<00:10:19.610><c> effectively</c><00:10:20.360><c> encapsulated</c><00:10:21.490><c> so</c><00:10:22.490><c> whoever</c>

00:10:23.110 --> 00:10:23.120 align:start position:0%
it's effectively encapsulated so whoever
 

00:10:23.120 --> 00:10:25.900 align:start position:0%
it's effectively encapsulated so whoever
sets<00:10:23.600><c> up</c><00:10:23.780><c> the</c><00:10:23.900><c> class</c><00:10:24.110><c> loaders</c><00:10:24.560><c> sets</c><00:10:25.460><c> up</c><00:10:25.700><c> this</c>

00:10:25.900 --> 00:10:25.910 align:start position:0%
sets up the class loaders sets up this
 

00:10:25.910 --> 00:10:30.970 align:start position:0%
sets up the class loaders sets up this
effective<00:10:26.480><c> encapsulation</c><00:10:29.650><c> the</c><00:10:30.650><c> thing</c><00:10:30.860><c> is</c>

00:10:30.970 --> 00:10:30.980 align:start position:0%
effective encapsulation the thing is
 

00:10:30.980 --> 00:10:33.130 align:start position:0%
effective encapsulation the thing is
though<00:10:31.220><c> that</c><00:10:31.300><c> encapsulation</c><00:10:32.300><c> based</c><00:10:32.690><c> on</c><00:10:32.870><c> class</c>

00:10:33.130 --> 00:10:33.140 align:start position:0%
though that encapsulation based on class
 

00:10:33.140 --> 00:10:35.770 align:start position:0%
though that encapsulation based on class
loaders<00:10:33.620><c> is</c><00:10:33.800><c> not</c><00:10:34.250><c> strong</c><00:10:34.780><c> encapsulation</c>

00:10:35.770 --> 00:10:35.780 align:start position:0%
loaders is not strong encapsulation
 

00:10:35.780 --> 00:10:40.600 align:start position:0%
loaders is not strong encapsulation
sadface<00:10:37.660><c> it</c><00:10:38.660><c> relies</c><00:10:39.050><c> on</c><00:10:39.110><c> packages</c><00:10:40.040><c> being</c>

00:10:40.600 --> 00:10:40.610 align:start position:0%
sadface it relies on packages being
 

00:10:40.610 --> 00:10:42.700 align:start position:0%
sadface it relies on packages being
carefully<00:10:41.180><c> apportioned</c><00:10:41.990><c> into</c><00:10:42.410><c> different</c>

00:10:42.700 --> 00:10:42.710 align:start position:0%
carefully apportioned into different
 

00:10:42.710 --> 00:10:45.430 align:start position:0%
carefully apportioned into different
loaders<00:10:43.010><c> but</c><00:10:43.820><c> that</c><00:10:44.000><c> isn't</c><00:10:44.240><c> how</c><00:10:44.480><c> the</c><00:10:44.630><c> JDK</c><00:10:45.170><c> has</c>

00:10:45.430 --> 00:10:45.440 align:start position:0%
loaders but that isn't how the JDK has
 

00:10:45.440 --> 00:10:47.740 align:start position:0%
loaders but that isn't how the JDK has
ever<00:10:45.620><c> worked</c><00:10:45.800><c> most</c><00:10:46.520><c> code</c><00:10:46.790><c> in</c><00:10:46.970><c> the</c><00:10:47.060><c> JDK</c><00:10:47.480><c> is</c>

00:10:47.740 --> 00:10:47.750 align:start position:0%
ever worked most code in the JDK is
 

00:10:47.750 --> 00:10:50.020 align:start position:0%
ever worked most code in the JDK is
loaded<00:10:48.350><c> by</c><00:10:48.380><c> the</c><00:10:48.530><c> bootstrap</c><00:10:49.070><c> or</c><00:10:49.550><c> platform</c>

00:10:50.020 --> 00:10:50.030 align:start position:0%
loaded by the bootstrap or platform
 

00:10:50.030 --> 00:10:52.000 align:start position:0%
loaded by the bootstrap or platform
class<00:10:50.210><c> loaders</c><00:10:50.600><c> while</c><00:10:51.380><c> code</c><00:10:51.650><c> on</c><00:10:51.890><c> the</c>

00:10:52.000 --> 00:10:52.010 align:start position:0%
class loaders while code on the
 

00:10:52.010 --> 00:10:54.070 align:start position:0%
class loaders while code on the
classpath<00:10:52.460><c> all</c><00:10:52.760><c> of</c><00:10:53.030><c> it</c><00:10:53.150><c> is</c><00:10:53.330><c> loaded</c><00:10:53.900><c> by</c><00:10:53.930><c> the</c>

00:10:54.070 --> 00:10:54.080 align:start position:0%
classpath all of it is loaded by the
 

00:10:54.080 --> 00:10:57.490 align:start position:0%
classpath all of it is loaded by the
application<00:10:54.650><c> class</c><00:10:55.460><c> loader</c><00:10:56.410><c> spinning</c><00:10:57.410><c> up</c>

00:10:57.490 --> 00:10:57.500 align:start position:0%
application class loader spinning up
 

00:10:57.500 --> 00:11:00.130 align:start position:0%
application class loader spinning up
lots<00:10:57.800><c> of</c><00:10:57.950><c> loaders</c><00:10:58.340><c> for</c><00:10:59.120><c> all</c><00:10:59.240><c> of</c><00:10:59.420><c> this</c><00:10:59.570><c> codes</c><00:10:59.870><c> to</c>

00:11:00.130 --> 00:11:00.140 align:start position:0%
lots of loaders for all of this codes to
 

00:11:00.140 --> 00:11:01.720 align:start position:0%
lots of loaders for all of this codes to
try<00:11:00.350><c> and</c><00:11:00.500><c> isolate</c><00:11:00.590><c> it</c><00:11:01.070><c> and</c><00:11:01.250><c> to</c><00:11:01.430><c> try</c>

00:11:01.720 --> 00:11:01.730 align:start position:0%
try and isolate it and to try
 

00:11:01.730 --> 00:11:03.790 align:start position:0%
try and isolate it and to try
encapsulated<00:11:02.300><c> would</c><00:11:02.930><c> be</c><00:11:03.050><c> a</c><00:11:03.079><c> compatibility</c>

00:11:03.790 --> 00:11:03.800 align:start position:0%
encapsulated would be a compatibility
 

00:11:03.800 --> 00:11:06.939 align:start position:0%
encapsulated would be a compatibility
nightmare<00:11:04.250><c> and</c><00:11:04.459><c> in</c><00:11:05.449><c> any</c><00:11:05.570><c> case</c><00:11:05.660><c> there</c><00:11:06.649><c> is</c><00:11:06.769><c> no</c>

00:11:06.939 --> 00:11:06.949 align:start position:0%
nightmare and in any case there is no
 

00:11:06.949 --> 00:11:09.850 align:start position:0%
nightmare and in any case there is no
actual<00:11:07.490><c> isolation</c><00:11:08.269><c> you</c><00:11:09.170><c> can</c><00:11:09.380><c> circumvent</c>

00:11:09.850 --> 00:11:09.860 align:start position:0%
actual isolation you can circumvent
 

00:11:09.860 --> 00:11:11.949 align:start position:0%
actual isolation you can circumvent
class<00:11:10.310><c> loaders</c><00:11:10.699><c> by</c><00:11:11.360><c> getting</c><00:11:11.540><c> hold</c><00:11:11.870><c> of</c>

00:11:11.949 --> 00:11:11.959 align:start position:0%
class loaders by getting hold of
 

00:11:11.959 --> 00:11:14.110 align:start position:0%
class loaders by getting hold of
references<00:11:12.620><c> to</c><00:11:12.649><c> java.lang.class</c><00:11:13.250><c> objects</c>

00:11:14.110 --> 00:11:14.120 align:start position:0%
references to java.lang.class objects
 

00:11:14.120 --> 00:11:15.790 align:start position:0%
references to java.lang.class objects
which<00:11:14.389><c> you</c><00:11:14.449><c> can</c><00:11:14.570><c> always</c><00:11:14.870><c> do</c><00:11:15.019><c> for</c><00:11:15.199><c> any</c><00:11:15.350><c> object</c>

00:11:15.790 --> 00:11:15.800 align:start position:0%
which you can always do for any object
 

00:11:15.800 --> 00:11:18.100 align:start position:0%
which you can always do for any object
and<00:11:16.070><c> then</c><00:11:16.790><c> once</c><00:11:17.029><c> you</c><00:11:17.180><c> have</c><00:11:17.329><c> a</c><00:11:17.360><c> class</c><00:11:17.630><c> object</c>

00:11:18.100 --> 00:11:18.110 align:start position:0%
and then once you have a class object
 

00:11:18.110 --> 00:11:19.980 align:start position:0%
and then once you have a class object
the<00:11:18.529><c> class</c><00:11:18.709><c> loaders</c><00:11:19.040><c> are</c><00:11:19.130><c> irrelevant</c><00:11:19.370><c> and</c>

00:11:19.980 --> 00:11:19.990 align:start position:0%
the class loaders are irrelevant and
 

00:11:19.990 --> 00:11:23.170 align:start position:0%
the class loaders are irrelevant and
it's<00:11:20.990><c> impossible</c><00:11:21.860><c> to</c><00:11:22.100><c> stop</c><00:11:22.370><c> references</c><00:11:23.149><c> to</c>

00:11:23.170 --> 00:11:23.180 align:start position:0%
it's impossible to stop references to
 

00:11:23.180 --> 00:11:26.939 align:start position:0%
it's impossible to stop references to
class<00:11:23.540><c> objects</c><00:11:24.230><c> from</c><00:11:24.709><c> being</c><00:11:24.980><c> passed</c><00:11:25.190><c> around</c>

00:11:26.939 --> 00:11:26.949 align:start position:0%
class objects from being passed around
 

00:11:26.949 --> 00:11:30.129 align:start position:0%
class objects from being passed around
strong<00:11:27.949><c> encapsulation</c><00:11:28.610><c> is</c><00:11:29.000><c> about</c><00:11:29.660><c> being</c><00:11:29.990><c> able</c>

00:11:30.129 --> 00:11:30.139 align:start position:0%
strong encapsulation is about being able
 

00:11:30.139 --> 00:11:33.370 align:start position:0%
strong encapsulation is about being able
to<00:11:30.440><c> prevent</c><00:11:30.829><c> access</c><00:11:31.449><c> even</c><00:11:32.449><c> if</c><00:11:32.570><c> the</c><00:11:32.720><c> accessing</c>

00:11:33.370 --> 00:11:33.380 align:start position:0%
to prevent access even if the accessing
 

00:11:33.380 --> 00:11:35.530 align:start position:0%
to prevent access even if the accessing
class<00:11:33.649><c> and</c><00:11:33.980><c> the</c><00:11:34.040><c> target</c><00:11:34.430><c> class</c><00:11:34.670><c> are</c><00:11:34.970><c> in</c><00:11:35.420><c> the</c>

00:11:35.530 --> 00:11:35.540 align:start position:0%
class and the target class are in the
 

00:11:35.540 --> 00:11:37.420 align:start position:0%
class and the target class are in the
same<00:11:35.720><c> class</c><00:11:35.899><c> loader</c><00:11:36.260><c> such</c><00:11:37.160><c> as</c><00:11:37.339><c> the</c>

00:11:37.420 --> 00:11:37.430 align:start position:0%
same class loader such as the
 

00:11:37.430 --> 00:11:40.150 align:start position:0%
same class loader such as the
application<00:11:37.940><c> class</c><00:11:38.149><c> loader</c><00:11:38.420><c> and</c><00:11:39.010><c> even</c><00:11:40.010><c> if</c>

00:11:40.150 --> 00:11:40.160 align:start position:0%
application class loader and even if
 

00:11:40.160 --> 00:11:42.519 align:start position:0%
application class loader and even if
someone<00:11:40.610><c> is</c><00:11:40.760><c> using</c><00:11:40.970><c> core</c><00:11:41.360><c> reflection</c><00:11:41.990><c> to</c>

00:11:42.519 --> 00:11:42.529 align:start position:0%
someone is using core reflection to
 

00:11:42.529 --> 00:11:48.819 align:start position:0%
someone is using core reflection to
manipulate<00:11:43.070><c> class</c><00:11:43.550><c> objects</c><00:11:46.540><c> so</c><00:11:47.649><c> let's</c><00:11:48.649><c> assume</c>

00:11:48.819 --> 00:11:48.829 align:start position:0%
manipulate class objects so let's assume
 

00:11:48.829 --> 00:11:51.009 align:start position:0%
manipulate class objects so let's assume
that<00:11:49.040><c> multiple</c><00:11:49.610><c> modules</c><00:11:49.820><c> are</c><00:11:50.269><c> somehow</c><00:11:50.540><c> mapped</c>

00:11:51.009 --> 00:11:51.019 align:start position:0%
that multiple modules are somehow mapped
 

00:11:51.019 --> 00:11:54.879 align:start position:0%
that multiple modules are somehow mapped
to<00:11:51.380><c> the</c><00:11:51.920><c> same</c><00:11:51.949><c> class</c><00:11:52.579><c> loader</c><00:11:53.199><c> can</c><00:11:54.199><c> clasp</c><00:11:54.589><c> you</c>

00:11:54.879 --> 00:11:54.889 align:start position:0%
to the same class loader can clasp you
 

00:11:54.889 --> 00:12:00.480 align:start position:0%
to the same class loader can clasp you
see<00:11:55.250><c> in</c><00:11:55.430><c> module</c><00:11:55.850><c> X</c><00:11:56.529><c> access</c><00:11:57.529><c> QD</c><00:11:58.160><c> in</c><00:11:58.399><c> module</c><00:11:59.029><c> y</c>

00:12:00.480 --> 00:12:00.490 align:start position:0%
see in module X access QD in module y
 

00:12:00.490 --> 00:12:03.280 align:start position:0%
see in module X access QD in module y
another<00:12:01.490><c> goal</c><00:12:01.730><c> of</c><00:12:02.000><c> the</c><00:12:02.329><c> module</c><00:12:02.660><c> system</c><00:12:02.870><c> is</c>

00:12:03.280 --> 00:12:03.290 align:start position:0%
another goal of the module system is
 

00:12:03.290 --> 00:12:06.129 align:start position:0%
another goal of the module system is
reliable<00:12:04.279><c> dependencies</c><00:12:05.060><c> to</c><00:12:05.540><c> replace</c><00:12:05.930><c> the</c>

00:12:06.129 --> 00:12:06.139 align:start position:0%
reliable dependencies to replace the
 

00:12:06.139 --> 00:12:08.439 align:start position:0%
reliable dependencies to replace the
brittle<00:12:06.560><c> error-prone</c><00:12:07.040><c> classpath</c><00:12:07.790><c> mechanism</c>

00:12:08.439 --> 00:12:08.449 align:start position:0%
brittle error-prone classpath mechanism
 

00:12:08.449 --> 00:12:10.990 align:start position:0%
brittle error-prone classpath mechanism
with<00:12:09.079><c> a</c><00:12:09.110><c> means</c><00:12:09.470><c> for</c><00:12:09.649><c> program</c><00:12:10.190><c> components</c><00:12:10.850><c> to</c>

00:12:10.990 --> 00:12:11.000 align:start position:0%
with a means for program components to
 

00:12:11.000 --> 00:12:14.139 align:start position:0%
with a means for program components to
declare<00:12:11.660><c> explicit</c><00:12:12.560><c> dependencies</c><00:12:13.250><c> on</c><00:12:13.490><c> one</c>

00:12:14.139 --> 00:12:14.149 align:start position:0%
declare explicit dependencies on one
 

00:12:14.149 --> 00:12:20.350 align:start position:0%
declare explicit dependencies on one
another<00:12:16.029><c> so</c><00:12:17.029><c> in</c><00:12:17.449><c> order</c><00:12:17.779><c> for</c><00:12:17.980><c> PC</c><00:12:18.980><c> to</c><00:12:19.220><c> access</c><00:12:19.670><c> QD</c>

00:12:20.350 --> 00:12:20.360 align:start position:0%
another so in order for PC to access QD
 

00:12:20.360 --> 00:12:24.160 align:start position:0%
another so in order for PC to access QD
not<00:12:21.230><c> only</c><00:12:21.410><c> does</c><00:12:21.740><c> module</c><00:12:22.160><c> y</c><00:12:22.519><c> need</c><00:12:23.449><c> to</c><00:12:23.690><c> export</c>

00:12:24.160 --> 00:12:24.170 align:start position:0%
not only does module y need to export
 

00:12:24.170 --> 00:12:28.660 align:start position:0%
not only does module y need to export
package<00:12:24.709><c> q</c><00:12:25.240><c> but</c><00:12:26.240><c> module</c><00:12:26.600><c> X</c><00:12:27.190><c> needs</c><00:12:28.190><c> to</c><00:12:28.430><c> somehow</c>

00:12:28.660 --> 00:12:28.670 align:start position:0%
package q but module X needs to somehow
 

00:12:28.670 --> 00:12:33.340 align:start position:0%
package q but module X needs to somehow
explicitly<00:12:29.540><c> depend</c><00:12:30.019><c> on</c><00:12:30.410><c> module</c><00:12:31.040><c> why</c><00:12:32.350><c> the</c>

00:12:33.340 --> 00:12:33.350 align:start position:0%
explicitly depend on module why the
 

00:12:33.350 --> 00:12:35.290 align:start position:0%
explicitly depend on module why the
formal<00:12:34.010><c> name</c><00:12:34.190><c> that</c><00:12:34.430><c> depends</c><00:12:34.880><c> on</c><00:12:35.029><c> is</c>

00:12:35.290 --> 00:12:35.300 align:start position:0%
formal name that depends on is
 

00:12:35.300 --> 00:12:39.120 align:start position:0%
formal name that depends on is
readability<00:12:36.579><c> readability</c><00:12:37.579><c> underpins</c>

00:12:39.120 --> 00:12:39.130 align:start position:0%
readability readability underpins
 

00:12:39.130 --> 00:12:41.829 align:start position:0%
readability readability underpins
accessibility<00:12:40.130><c> in</c><00:12:40.399><c> the</c><00:12:40.880><c> Java</c><00:12:41.120><c> language</c><00:12:41.240><c> and</c>

00:12:41.829 --> 00:12:41.839 align:start position:0%
accessibility in the Java language and
 

00:12:41.839 --> 00:12:47.379 align:start position:0%
accessibility in the Java language and
vm<00:12:42.230><c> in</c><00:12:42.560><c> 9</c><00:12:43.180><c> the</c><00:12:44.180><c> accessing</c><00:12:44.899><c> class</c><00:12:45.250><c> PC</c><00:12:46.250><c> must</c><00:12:47.180><c> be</c>

00:12:47.379 --> 00:12:47.389 align:start position:0%
vm in 9 the accessing class PC must be
 

00:12:47.389 --> 00:12:50.170 align:start position:0%
vm in 9 the accessing class PC must be
in<00:12:47.600><c> a</c><00:12:47.690><c> module</c><00:12:47.990><c> that</c><00:12:48.800><c> reads</c><00:12:49.220><c> the</c><00:12:49.550><c> module</c><00:12:49.880><c> of</c><00:12:50.089><c> the</c>

00:12:50.170 --> 00:12:50.180 align:start position:0%
in a module that reads the module of the
 

00:12:50.180 --> 00:12:52.030 align:start position:0%
in a module that reads the module of the
target<00:12:50.540><c> class</c><00:12:50.750><c> that</c><00:12:51.110><c> is</c><00:12:51.199><c> reads</c><00:12:51.440><c> module</c><00:12:51.800><c> why</c>

00:12:52.030 --> 00:12:52.040 align:start position:0%
target class that is reads module why
 

00:12:52.040 --> 00:12:55.269 align:start position:0%
target class that is reads module why
and<00:12:52.750><c> the</c><00:12:53.750><c> module</c><00:12:54.139><c> containing</c><00:12:54.680><c> the</c><00:12:54.920><c> target</c>

00:12:55.269 --> 00:12:55.279 align:start position:0%
and the module containing the target
 

00:12:55.279 --> 00:12:58.240 align:start position:0%
and the module containing the target
class<00:12:55.519><c> must</c><00:12:55.970><c> export</c><00:12:56.449><c> its</c><00:12:56.660><c> package</c><00:12:57.130><c> to</c><00:12:58.130><c> at</c>

00:12:58.240 --> 00:12:58.250 align:start position:0%
class must export its package to at
 

00:12:58.250 --> 00:13:02.610 align:start position:0%
class must export its package to at
least<00:12:58.459><c> the</c><00:12:58.730><c> module</c><00:12:59.060><c> of</c><00:12:59.360><c> the</c><00:12:59.930><c> accessing</c><00:13:00.440><c> class</c>

00:13:02.610 --> 00:13:02.620 align:start position:0%
least the module of the accessing class
 

00:13:02.620 --> 00:13:06.340 align:start position:0%
least the module of the accessing class
so<00:13:03.620><c> accessibility</c><00:13:04.160><c> is</c><00:13:04.610><c> a</c><00:13:04.670><c> two-way</c><00:13:05.300><c> street</c><00:13:05.350><c> at</c>

00:13:06.340 --> 00:13:06.350 align:start position:0%
so accessibility is a two-way street at
 

00:13:06.350 --> 00:13:09.100 align:start position:0%
so accessibility is a two-way street at
module<00:13:06.889><c> X</c><00:13:07.100><c> reads</c><00:13:07.430><c> module</c><00:13:07.760><c> y</c><00:13:08.000><c> a</c><00:13:08.300><c> module</c><00:13:08.870><c> y</c>

00:13:09.100 --> 00:13:09.110 align:start position:0%
module X reads module y a module y
 

00:13:09.110 --> 00:13:11.679 align:start position:0%
module X reads module y a module y
exports<00:13:09.890><c> this</c><00:13:10.069><c> interesting</c><00:13:10.579><c> package</c><00:13:10.939><c> q</c><00:13:11.240><c> to</c><00:13:11.540><c> at</c>

00:13:11.679 --> 00:13:11.689 align:start position:0%
exports this interesting package q to at
 

00:13:11.689 --> 00:13:13.570 align:start position:0%
exports this interesting package q to at
least<00:13:11.810><c> x</c>

00:13:13.570 --> 00:13:13.580 align:start position:0%
least x
 

00:13:13.580 --> 00:13:16.740 align:start position:0%
least x
note<00:13:14.330><c> with</c><00:13:14.930><c> these</c><00:13:15.140><c> arrows</c><00:13:16.070><c> that</c>

00:13:16.740 --> 00:13:16.750 align:start position:0%
note with these arrows that
 

00:13:16.750 --> 00:13:19.390 align:start position:0%
note with these arrows that
accessibility<00:13:17.750><c> is</c><00:13:18.040><c> independent</c><00:13:19.040><c> of</c><00:13:19.130><c> class</c>

00:13:19.390 --> 00:13:19.400 align:start position:0%
accessibility is independent of class
 

00:13:19.400 --> 00:13:21.040 align:start position:0%
accessibility is independent of class
loaders<00:13:19.790><c> I</c><00:13:20.000><c> don't</c><00:13:20.240><c> need</c><00:13:20.360><c> to</c><00:13:20.540><c> talk</c><00:13:20.690><c> about</c><00:13:20.840><c> the</c>

00:13:21.040 --> 00:13:21.050 align:start position:0%
loaders I don't need to talk about the
 

00:13:21.050 --> 00:13:22.900 align:start position:0%
loaders I don't need to talk about the
class<00:13:21.230><c> Otis</c><00:13:21.560><c> on</c><00:13:21.650><c> this</c><00:13:21.830><c> slide</c><00:13:22.010><c> just</c><00:13:22.730><c> like</c>

00:13:22.900 --> 00:13:22.910 align:start position:0%
class Otis on this slide just like
 

00:13:22.910 --> 00:13:25.450 align:start position:0%
class Otis on this slide just like
accessibility<00:13:23.720><c> was</c><00:13:23.930><c> before</c><00:13:24.620><c> the</c><00:13:25.100><c> module</c>

00:13:25.450 --> 00:13:25.460 align:start position:0%
accessibility was before the module
 

00:13:25.460 --> 00:13:27.880 align:start position:0%
accessibility was before the module
system<00:13:26.020><c> this</c><00:13:27.020><c> is</c><00:13:27.200><c> important</c><00:13:27.620><c> for</c><00:13:27.710><c> two</c><00:13:27.860><c> reasons</c>

00:13:27.880 --> 00:13:27.890 align:start position:0%
system this is important for two reasons
 

00:13:27.890 --> 00:13:30.940 align:start position:0%
system this is important for two reasons
it<00:13:28.640><c> means</c><00:13:28.970><c> accessibility</c><00:13:29.720><c> works</c><00:13:30.050><c> at</c><00:13:30.350><c> compile</c>

00:13:30.940 --> 00:13:30.950 align:start position:0%
it means accessibility works at compile
 

00:13:30.950 --> 00:13:35.580 align:start position:0%
it means accessibility works at compile
time<00:13:32.200><c> when</c><00:13:33.200><c> there</c><00:13:33.500><c> aren't</c><00:13:33.770><c> any</c><00:13:34.100><c> class</c><00:13:34.400><c> loaders</c>

00:13:35.580 --> 00:13:35.590 align:start position:0%
time when there aren't any class loaders
 

00:13:35.590 --> 00:13:37.870 align:start position:0%
time when there aren't any class loaders
second<00:13:36.590><c> it</c><00:13:36.710><c> means</c><00:13:36.920><c> you</c><00:13:37.010><c> can</c><00:13:37.190><c> reason</c><00:13:37.730><c> about</c>

00:13:37.870 --> 00:13:37.880 align:start position:0%
second it means you can reason about
 

00:13:37.880 --> 00:13:40.510 align:start position:0%
second it means you can reason about
accessibility<00:13:38.720><c> based</c><00:13:39.560><c> solely</c><00:13:39.980><c> on</c><00:13:40.160><c> the</c>

00:13:40.510 --> 00:13:40.520 align:start position:0%
accessibility based solely on the
 

00:13:40.520 --> 00:13:43.330 align:start position:0%
accessibility based solely on the
requires<00:13:40.970><c> and</c><00:13:41.390><c> exports</c><00:13:41.960><c> clauses</c><00:13:42.440><c> in</c><00:13:42.590><c> module</c>

00:13:43.330 --> 00:13:43.340 align:start position:0%
requires and exports clauses in module
 

00:13:43.340 --> 00:13:45.100 align:start position:0%
requires and exports clauses in module
in<00:13:43.490><c> photo</c><00:13:43.700><c> Java</c><00:13:44.030><c> files</c><00:13:44.330><c> there's</c><00:13:44.720><c> no</c><00:13:44.840><c> need</c><00:13:45.020><c> to</c>

00:13:45.100 --> 00:13:45.110 align:start position:0%
in photo Java files there's no need to
 

00:13:45.110 --> 00:13:46.780 align:start position:0%
in photo Java files there's no need to
worry<00:13:45.380><c> about</c><00:13:45.560><c> which</c><00:13:45.920><c> class</c><00:13:46.190><c> loaders</c><00:13:46.610><c> will</c>

00:13:46.780 --> 00:13:46.790 align:start position:0%
worry about which class loaders will
 

00:13:46.790 --> 00:13:50.170 align:start position:0%
worry about which class loaders will
come<00:13:47.330><c> into</c><00:13:47.480><c> existence</c><00:13:47.720><c> a</c><00:13:48.170><c> runtime</c><00:13:48.560><c> in</c><00:13:49.180><c> fact</c>

00:13:50.170 --> 00:13:50.180 align:start position:0%
come into existence a runtime in fact
 

00:13:50.180 --> 00:13:52.270 align:start position:0%
come into existence a runtime in fact
the<00:13:50.300><c> exports</c><00:13:50.900><c> part</c><00:13:51.170><c> of</c><00:13:51.410><c> accessibility</c><00:13:51.920><c> is</c>

00:13:52.270 --> 00:13:52.280 align:start position:0%
the exports part of accessibility is
 

00:13:52.280 --> 00:13:53.980 align:start position:0%
the exports part of accessibility is
fairly<00:13:52.580><c> straightforward</c><00:13:52.970><c> packages</c><00:13:53.840><c> either</c>

00:13:53.980 --> 00:13:53.990 align:start position:0%
fairly straightforward packages either
 

00:13:53.990 --> 00:13:56.140 align:start position:0%
fairly straightforward packages either
exported<00:13:54.620><c> or</c><00:13:54.710><c> it</c><00:13:54.800><c> isn't</c><00:13:54.950><c> but</c><00:13:55.670><c> on</c><00:13:55.790><c> readability</c>

00:13:56.140 --> 00:13:56.150 align:start position:0%
exported or it isn't but on readability
 

00:13:56.150 --> 00:14:00.130 align:start position:0%
exported or it isn't but on readability
there's<00:13:56.570><c> more</c><00:13:56.750><c> to</c><00:13:56.900><c> say</c><00:13:58.360><c> when</c><00:13:59.360><c> you</c><00:13:59.540><c> depend</c><00:13:59.900><c> on</c><00:14:00.080><c> a</c>

00:14:00.130 --> 00:14:00.140 align:start position:0%
there's more to say when you depend on a
 

00:14:00.140 --> 00:14:02.920 align:start position:0%
there's more to say when you depend on a
module<00:14:00.670><c> you</c><00:14:01.670><c> depend</c><00:14:02.060><c> on</c><00:14:02.270><c> a</c><00:14:02.330><c> hopefully</c>

00:14:02.920 --> 00:14:02.930 align:start position:0%
module you depend on a hopefully
 

00:14:02.930 --> 00:14:05.020 align:start position:0%
module you depend on a hopefully
coherent<00:14:03.680><c> set</c><00:14:03.920><c> of</c><00:14:03.950><c> packages</c><00:14:04.310><c> that</c><00:14:04.910><c> are</c>

00:14:05.020 --> 00:14:05.030 align:start position:0%
coherent set of packages that are
 

00:14:05.030 --> 00:14:09.220 align:start position:0%
coherent set of packages that are
exports<00:14:05.600><c> that's</c><00:14:05.840><c> its</c><00:14:06.050><c> surface</c><00:14:06.910><c> in</c><00:14:07.990><c> some</c><00:14:08.990><c> sense</c>

00:14:09.220 --> 00:14:09.230 align:start position:0%
exports that's its surface in some sense
 

00:14:09.230 --> 00:14:12.100 align:start position:0%
exports that's its surface in some sense
those<00:14:09.710><c> packages</c><00:14:10.070><c> are</c><00:14:10.430><c> the</c><00:14:10.670><c> interface</c><00:14:11.300><c> of</c><00:14:11.630><c> the</c>

00:14:12.100 --> 00:14:12.110 align:start position:0%
those packages are the interface of the
 

00:14:12.110 --> 00:14:15.460 align:start position:0%
those packages are the interface of the
module<00:14:12.910><c> inside</c><00:14:13.910><c> the</c><00:14:14.210><c> module</c><00:14:14.330><c> hundreds</c><00:14:15.260><c> more</c>

00:14:15.460 --> 00:14:15.470 align:start position:0%
module inside the module hundreds more
 

00:14:15.470 --> 00:14:17.800 align:start position:0%
module inside the module hundreds more
packages<00:14:15.950><c> may</c><00:14:16.130><c> sit</c><00:14:16.400><c> strongly</c><00:14:17.150><c> encapsulated</c>

00:14:17.800 --> 00:14:17.810 align:start position:0%
packages may sit strongly encapsulated
 

00:14:17.810 --> 00:14:21.250 align:start position:0%
packages may sit strongly encapsulated
not<00:14:18.260><c> exported</c><00:14:18.920><c> not</c><00:14:19.250><c> for</c><00:14:19.430><c> you</c><00:14:19.870><c> waiting</c><00:14:20.870><c> to</c><00:14:21.110><c> help</c>

00:14:21.250 --> 00:14:21.260 align:start position:0%
not exported not for you waiting to help
 

00:14:21.260 --> 00:14:24.340 align:start position:0%
not exported not for you waiting to help
implement<00:14:21.860><c> that</c><00:14:22.130><c> interface</c><00:14:22.670><c> and</c><00:14:23.200><c> more</c><00:14:24.200><c> than</c>

00:14:24.340 --> 00:14:24.350 align:start position:0%
implement that interface and more than
 

00:14:24.350 --> 00:14:27.040 align:start position:0%
implement that interface and more than
that<00:14:24.530><c> when</c><00:14:25.010><c> you</c><00:14:25.190><c> depend</c><00:14:25.490><c> on</c><00:14:25.670><c> a</c><00:14:25.700><c> module</c><00:14:26.060><c> um</c><00:14:26.630><c> you</c>

00:14:27.040 --> 00:14:27.050 align:start position:0%
that when you depend on a module um you
 

00:14:27.050 --> 00:14:29.260 align:start position:0%
that when you depend on a module um you
indirectly<00:14:27.560><c> depend</c><00:14:28.190><c> on</c><00:14:28.430><c> all</c><00:14:28.700><c> of</c><00:14:28.970><c> the</c><00:14:29.060><c> modules</c>

00:14:29.260 --> 00:14:29.270 align:start position:0%
indirectly depend on all of the modules
 

00:14:29.270 --> 00:14:33.850 align:start position:0%
indirectly depend on all of the modules
it<00:14:29.780><c> depends</c><00:14:30.680><c> on</c><00:14:31.000><c> for</c><00:14:32.000><c> example</c><00:14:32.480><c> if</c><00:14:32.690><c> you</c><00:14:33.560><c> depend</c>

00:14:33.850 --> 00:14:33.860 align:start position:0%
it depends on for example if you depend
 

00:14:33.860 --> 00:14:37.420 align:start position:0%
it depends on for example if you depend
on<00:14:34.130><c> the</c><00:14:34.460><c> Java</c><00:14:35.150><c> activation</c><00:14:36.110><c> module</c><00:14:36.470><c> in</c><00:14:36.770><c> the</c><00:14:36.980><c> JDK</c>

00:14:37.420 --> 00:14:37.430 align:start position:0%
on the Java activation module in the JDK
 

00:14:37.430 --> 00:14:41.140 align:start position:0%
on the Java activation module in the JDK
with<00:14:37.940><c> its</c><00:14:38.090><c> 35</c><00:14:38.660><c> classes</c><00:14:39.580><c> then</c><00:14:40.580><c> you</c><00:14:40.760><c> indirectly</c>

00:14:41.140 --> 00:14:41.150 align:start position:0%
with its 35 classes then you indirectly
 

00:14:41.150 --> 00:14:44.440 align:start position:0%
with its 35 classes then you indirectly
depends<00:14:41.960><c> on</c><00:14:42.080><c> the</c><00:14:42.590><c> Java</c><00:14:42.830><c> desktop</c><00:14:43.790><c> module</c><00:14:44.240><c> in</c>

00:14:44.440 --> 00:14:44.450 align:start position:0%
depends on the Java desktop module in
 

00:14:44.450 --> 00:14:49.690 align:start position:0%
depends on the Java desktop module in
the<00:14:44.540><c> jdk</c><00:14:44.990><c> with</c><00:14:45.560><c> its</c><00:14:46.420><c> 5835</c><00:14:47.420><c> classes</c><00:14:48.080><c> if</c><00:14:48.700><c> the</c>

00:14:49.690 --> 00:14:49.700 align:start position:0%
the jdk with its 5835 classes if the
 

00:14:49.700 --> 00:14:53.260 align:start position:0%
the jdk with its 5835 classes if the
watchword<00:14:50.330><c> for</c><00:14:50.360><c> JDK</c><00:14:50.990><c> 8</c><00:14:51.020><c> was</c><00:14:51.680><c> functional</c><00:14:52.400><c> then</c>

00:14:53.260 --> 00:14:53.270 align:start position:0%
watchword for JDK 8 was functional then
 

00:14:53.270 --> 00:14:55.720 align:start position:0%
watchword for JDK 8 was functional then
for<00:14:53.450><c> JD</c><00:14:53.630><c> k9</c><00:14:54.020><c> the</c><00:14:54.440><c> watchword</c><00:14:54.860><c> is</c><00:14:55.010><c> transitive</c>

00:14:55.720 --> 00:14:55.730 align:start position:0%
for JD k9 the watchword is transitive
 

00:14:55.730 --> 00:14:57.640 align:start position:0%
for JD k9 the watchword is transitive
you<00:14:56.030><c> should</c><00:14:56.210><c> think</c><00:14:56.390><c> in</c><00:14:56.570><c> terms</c><00:14:56.780><c> of</c><00:14:57.110><c> the</c><00:14:57.350><c> set</c><00:14:57.530><c> of</c>

00:14:57.640 --> 00:14:57.650 align:start position:0%
you should think in terms of the set of
 

00:14:57.650 --> 00:15:00.820 align:start position:0%
you should think in terms of the set of
modules<00:14:57.850><c> needed</c><00:14:58.850><c> transitively</c><00:14:59.810><c> by</c><00:15:00.650><c> your</c>

00:15:00.820 --> 00:15:00.830 align:start position:0%
modules needed transitively by your
 

00:15:00.830 --> 00:15:03.420 align:start position:0%
modules needed transitively by your
application<00:15:01.450><c> that</c><00:15:02.450><c> is</c><00:15:02.600><c> the</c><00:15:02.720><c> indirect</c>

00:15:03.420 --> 00:15:03.430 align:start position:0%
application that is the indirect
 

00:15:03.430 --> 00:15:06.400 align:start position:0%
application that is the indirect
dependences<00:15:04.430><c> can</c><00:15:05.210><c> be</c><00:15:05.330><c> as</c><00:15:05.450><c> important</c><00:15:06.020><c> as</c><00:15:06.170><c> the</c>

00:15:06.400 --> 00:15:06.410 align:start position:0%
dependences can be as important as the
 

00:15:06.410 --> 00:15:09.190 align:start position:0%
dependences can be as important as the
direct<00:15:06.850><c> dependencies</c><00:15:07.960><c> let's</c><00:15:08.960><c> see</c><00:15:09.110><c> how</c>

00:15:09.190 --> 00:15:09.200 align:start position:0%
direct dependencies let's see how
 

00:15:09.200 --> 00:15:13.630 align:start position:0%
direct dependencies let's see how
readability<00:15:09.820><c> models</c><00:15:10.820><c> this</c><00:15:11.060><c> I'll</c><00:15:12.400><c> use</c><00:15:13.400><c> an</c>

00:15:13.630 --> 00:15:13.640 align:start position:0%
readability models this I'll use an
 

00:15:13.640 --> 00:15:16.060 align:start position:0%
readability models this I'll use an
example<00:15:14.360><c> of</c><00:15:14.420><c> readability</c><00:15:14.690><c> from</c><00:15:15.590><c> the</c><00:15:15.710><c> graph</c><00:15:15.890><c> of</c>

00:15:16.060 --> 00:15:16.070 align:start position:0%
example of readability from the graph of
 

00:15:16.070 --> 00:15:19.600 align:start position:0%
example of readability from the graph of
JDK<00:15:16.430><c> modules</c><00:15:17.050><c> the</c><00:15:18.050><c> Java</c><00:15:18.590><c> sequel</c><00:15:19.040><c> module</c><00:15:19.370><c> that</c>

00:15:19.600 --> 00:15:19.610 align:start position:0%
JDK modules the Java sequel module that
 

00:15:19.610 --> 00:15:23.140 align:start position:0%
JDK modules the Java sequel module that
holds<00:15:19.970><c> JDBC</c><00:15:20.590><c> requires</c><00:15:21.590><c> the</c><00:15:22.520><c> Java</c><00:15:22.760><c> login</c>

00:15:23.140 --> 00:15:23.150 align:start position:0%
holds JDBC requires the Java login
 

00:15:23.150 --> 00:15:24.790 align:start position:0%
holds JDBC requires the Java login
module<00:15:23.300><c> that</c><00:15:23.810><c> exports</c><00:15:24.320><c> the</c><00:15:24.470><c> package</c>

00:15:24.790 --> 00:15:24.800 align:start position:0%
module that exports the package
 

00:15:24.800 --> 00:15:27.150 align:start position:0%
module that exports the package
java.util<00:15:25.670><c> logging</c>

00:15:27.150 --> 00:15:27.160 align:start position:0%
java.util logging
 

00:15:27.160 --> 00:15:30.940 align:start position:0%
java.util logging
this<00:15:28.160><c> requires</c><00:15:28.790><c> Clause</c><00:15:29.150><c> means</c><00:15:29.350><c> that</c><00:15:30.350><c> code</c><00:15:30.650><c> in</c>

00:15:30.940 --> 00:15:30.950 align:start position:0%
this requires Clause means that code in
 

00:15:30.950 --> 00:15:33.070 align:start position:0%
this requires Clause means that code in
the<00:15:31.130><c> Java</c><00:15:31.400><c> sequel</c><00:15:31.910><c> module</c><00:15:32.240><c> can</c><00:15:32.510><c> access</c><00:15:32.900><c> the</c>

00:15:33.070 --> 00:15:33.080 align:start position:0%
the Java sequel module can access the
 

00:15:33.080 --> 00:15:35.410 align:start position:0%
the Java sequel module can access the
public<00:15:33.410><c> types</c><00:15:33.650><c> of</c><00:15:33.920><c> Java</c><00:15:34.160><c> util</c><00:15:34.490><c> logging</c><00:15:34.850><c> such</c>

00:15:35.410 --> 00:15:35.420 align:start position:0%
public types of Java util logging such
 

00:15:35.420 --> 00:15:37.690 align:start position:0%
public types of Java util logging such
as<00:15:35.600><c> logger</c><00:15:35.780><c> you</c><00:15:36.140><c> can</c><00:15:36.710><c> see</c><00:15:36.830><c> that</c><00:15:36.950><c> some</c><00:15:37.130><c> code</c><00:15:37.370><c> in</c>

00:15:37.690 --> 00:15:37.700 align:start position:0%
as logger you can see that some code in
 

00:15:37.700 --> 00:15:40.210 align:start position:0%
as logger you can see that some code in
the<00:15:37.880><c> JDBC</c><00:15:38.330><c> driver</c><00:15:38.360><c> manager</c><00:15:39.020><c> class</c><00:15:39.830><c> on</c><00:15:40.130><c> the</c>

00:15:40.210 --> 00:15:40.220 align:start position:0%
the JDBC driver manager class on the
 

00:15:40.220 --> 00:15:45.270 align:start position:0%
the JDBC driver manager class on the
left<00:15:40.400><c> is</c><00:15:40.580><c> newing</c><00:15:41.210><c> an</c><00:15:41.450><c> instance</c><00:15:41.900><c> of</c><00:15:42.140><c> lager</c><00:15:42.470><c> fine</c>

00:15:45.270 --> 00:15:45.280 align:start position:0%
 
 

00:15:45.280 --> 00:15:48.220 align:start position:0%
 
what<00:15:46.280><c> if</c><00:15:46.430><c> it</c><00:15:46.550><c> was</c><00:15:46.670><c> the</c><00:15:46.790><c> API</c><00:15:47.240><c> of</c><00:15:47.780><c> the</c><00:15:47.990><c> Java</c>

00:15:48.220 --> 00:15:48.230 align:start position:0%
what if it was the API of the Java
 

00:15:48.230 --> 00:15:49.930 align:start position:0%
what if it was the API of the Java
sequel<00:15:48.710><c> module</c><00:15:49.040><c> rather</c><00:15:49.610><c> than</c><00:15:49.790><c> its</c>

00:15:49.930 --> 00:15:49.940 align:start position:0%
sequel module rather than its
 

00:15:49.940 --> 00:15:51.910 align:start position:0%
sequel module rather than its
implementation<00:15:50.480><c> that</c><00:15:50.960><c> wants</c><00:15:51.590><c> to</c><00:15:51.710><c> use</c><00:15:51.890><c> the</c>

00:15:51.910 --> 00:15:51.920 align:start position:0%
implementation that wants to use the
 

00:15:51.920 --> 00:15:53.500 align:start position:0%
implementation that wants to use the
logotype<00:15:52.310><c> in</c><00:15:52.610><c> other</c><00:15:52.730><c> words</c><00:15:52.910><c> locket</c><00:15:53.180><c> is</c><00:15:53.300><c> in</c><00:15:53.390><c> a</c>

00:15:53.500 --> 00:15:53.510 align:start position:0%
logotype in other words locket is in a
 

00:15:53.510 --> 00:15:55.630 align:start position:0%
logotype in other words locket is in a
method<00:15:54.290><c> signature</c><00:15:54.770><c> a</c><00:15:55.010><c> public</c><00:15:55.490><c> method</c>

00:15:55.630 --> 00:15:55.640 align:start position:0%
method signature a public method
 

00:15:55.640 --> 00:15:58.450 align:start position:0%
method signature a public method
signature<00:15:56.240><c> author</c><00:15:56.480><c> of</c><00:15:57.350><c> a</c><00:15:57.770><c> public</c><00:15:58.220><c> interface</c>

00:15:58.450 --> 00:15:58.460 align:start position:0%
signature author of a public interface
 

00:15:58.460 --> 00:16:01.660 align:start position:0%
signature author of a public interface
in<00:15:58.880><c> an</c><00:15:59.180><c> exported</c><00:15:59.630><c> package</c><00:16:00.340><c> so</c><00:16:01.340><c> what</c><00:16:01.460><c> if</c><00:16:01.550><c> that</c>

00:16:01.660 --> 00:16:01.670 align:start position:0%
in an exported package so what if that
 

00:16:01.670 --> 00:16:04.390 align:start position:0%
in an exported package so what if that
API<00:16:02.000><c> wants</c><00:16:02.510><c> to</c><00:16:02.630><c> refer</c><00:16:03.020><c> to</c><00:16:03.070><c> the</c><00:16:04.070><c> logotype</c>

00:16:04.390 --> 00:16:04.400 align:start position:0%
API wants to refer to the logotype
 

00:16:04.400 --> 00:16:08.560 align:start position:0%
API wants to refer to the logotype
rather<00:16:05.090><c> than</c><00:16:05.330><c> some</c><00:16:05.810><c> method</c><00:16:06.080><c> body</c><00:16:07.270><c> so</c><00:16:08.270><c> here</c><00:16:08.450><c> the</c>

00:16:08.560 --> 00:16:08.570 align:start position:0%
rather than some method body so here the
 

00:16:08.570 --> 00:16:10.810 align:start position:0%
rather than some method body so here the
JDBC<00:16:08.960><c> driver</c><00:16:08.990><c> interface</c><00:16:09.560><c> wants</c><00:16:09.980><c> to</c><00:16:10.070><c> return</c><00:16:10.430><c> a</c>

00:16:10.810 --> 00:16:10.820 align:start position:0%
JDBC driver interface wants to return a
 

00:16:10.820 --> 00:16:15.460 align:start position:0%
JDBC driver interface wants to return a
logger<00:16:13.630><c> let's</c><00:16:14.630><c> look</c><00:16:14.810><c> at</c><00:16:14.930><c> this</c><00:16:15.080><c> through</c><00:16:15.440><c> the</c>

00:16:15.460 --> 00:16:15.470 align:start position:0%
logger let's look at this through the
 

00:16:15.470 --> 00:16:17.950 align:start position:0%
logger let's look at this through the
eyes<00:16:15.710><c> of</c><00:16:16.190><c> an</c><00:16:16.460><c> application</c><00:16:16.580><c> module</c><00:16:17.390><c> that</c><00:16:17.630><c> uses</c>

00:16:17.950 --> 00:16:17.960 align:start position:0%
eyes of an application module that uses
 

00:16:17.960 --> 00:16:22.150 align:start position:0%
eyes of an application module that uses
JDBC<00:16:18.500><c> my</c><00:16:18.800><c> app</c><00:16:18.950><c> in</c><00:16:19.480><c> order</c><00:16:20.480><c> to</c><00:16:21.230><c> use</c><00:16:21.560><c> the</c><00:16:21.830><c> dry</c><00:16:22.100><c> it</c>

00:16:22.150 --> 00:16:22.160 align:start position:0%
JDBC my app in order to use the dry it
 

00:16:22.160 --> 00:16:23.890 align:start position:0%
JDBC my app in order to use the dry it
to<00:16:22.340><c> call</c><00:16:22.580><c> that</c><00:16:22.820><c> driver</c><00:16:23.090><c> method</c><00:16:23.540><c> that</c><00:16:23.690><c> returns</c>

00:16:23.890 --> 00:16:23.900 align:start position:0%
to call that driver method that returns
 

00:16:23.900 --> 00:16:26.920 align:start position:0%
to call that driver method that returns
a<00:16:24.260><c> logger</c><00:16:24.440><c> the</c><00:16:25.160><c> my</c><00:16:25.370><c> app</c><00:16:25.550><c> module</c><00:16:26.060><c> not</c><00:16:26.660><c> only</c>

00:16:26.920 --> 00:16:26.930 align:start position:0%
a logger the my app module not only
 

00:16:26.930 --> 00:16:30.130 align:start position:0%
a logger the my app module not only
needs<00:16:27.320><c> to</c><00:16:27.590><c> read</c><00:16:27.800><c> the</c><00:16:28.010><c> Java</c><00:16:28.280><c> sequel</c><00:16:28.730><c> module</c><00:16:29.140><c> but</c>

00:16:30.130 --> 00:16:30.140 align:start position:0%
needs to read the Java sequel module but
 

00:16:30.140 --> 00:16:32.800 align:start position:0%
needs to read the Java sequel module but
also<00:16:30.380><c> the</c><00:16:30.860><c> Java</c><00:16:31.160><c> logging</c><00:16:31.700><c> module</c><00:16:31.850><c> which</c>

00:16:32.800 --> 00:16:32.810 align:start position:0%
also the Java logging module which
 

00:16:32.810 --> 00:16:36.220 align:start position:0%
also the Java logging module which
exports<00:16:33.230><c> logger</c><00:16:33.850><c> it</c><00:16:34.850><c> would</c><00:16:35.060><c> be</c><00:16:35.150><c> a</c><00:16:35.180><c> pain</c><00:16:35.480><c> if</c><00:16:35.840><c> the</c>

00:16:36.220 --> 00:16:36.230 align:start position:0%
exports logger it would be a pain if the
 

00:16:36.230 --> 00:16:38.530 align:start position:0%
exports logger it would be a pain if the
developer<00:16:36.800><c> of</c><00:16:36.830><c> my</c><00:16:37.100><c> app</c><00:16:37.250><c> had</c><00:16:37.610><c> to</c><00:16:37.850><c> remember</c><00:16:38.390><c> to</c>

00:16:38.530 --> 00:16:38.540 align:start position:0%
developer of my app had to remember to
 

00:16:38.540 --> 00:16:41.770 align:start position:0%
developer of my app had to remember to
say<00:16:38.750><c> requires</c><00:16:39.260><c> java</c><00:16:39.710><c> logging</c><00:16:40.130><c> when</c><00:16:41.060><c> using</c><00:16:41.390><c> a</c>

00:16:41.770 --> 00:16:41.780 align:start position:0%
say requires java logging when using a
 

00:16:41.780 --> 00:16:43.840 align:start position:0%
say requires java logging when using a
particular<00:16:42.200><c> part</c><00:16:42.650><c> of</c><00:16:42.830><c> the</c><00:16:42.890><c> api</c><00:16:43.280><c> of</c><00:16:43.610><c> java</c>

00:16:43.840 --> 00:16:43.850 align:start position:0%
particular part of the api of java
 

00:16:43.850 --> 00:16:50.200 align:start position:0%
particular part of the api of java
sequel<00:16:45.340><c> sadface</c><00:16:47.680><c> there's</c><00:16:48.680><c> good</c><00:16:48.920><c> news</c><00:16:49.210><c> the</c>

00:16:50.200 --> 00:16:50.210 align:start position:0%
sequel sadface there's good news the
 

00:16:50.210 --> 00:16:52.390 align:start position:0%
sequel sadface there's good news the
java<00:16:50.480><c> sequel</c><00:16:50.990><c> module</c><00:16:51.350><c> can</c><00:16:51.920><c> take</c><00:16:52.130><c> on</c><00:16:52.310><c> the</c>

00:16:52.390 --> 00:16:52.400 align:start position:0%
java sequel module can take on the
 

00:16:52.400 --> 00:16:57.520 align:start position:0%
java sequel module can take on the
responsibility<00:16:53.210><c> of</c><00:16:53.240><c> remembering</c><00:16:56.320><c> look</c><00:16:57.320><c> at</c>

00:16:57.520 --> 00:16:57.530 align:start position:0%
responsibility of remembering look at
 

00:16:57.530 --> 00:16:59.920 align:start position:0%
responsibility of remembering look at
the<00:16:57.740><c> java</c><00:16:58.010><c> sequel</c><00:16:58.370><c> module</c><00:16:58.670><c> it</c><00:16:59.390><c> now</c><00:16:59.600><c> says</c>

00:16:59.920 --> 00:16:59.930 align:start position:0%
the java sequel module it now says
 

00:16:59.930 --> 00:17:04.030 align:start position:0%
the java sequel module it now says
requires<00:17:00.830><c> transitive</c><00:17:01.820><c> java</c><00:17:02.690><c> dot</c><00:17:02.840><c> logging</c><00:17:03.230><c> the</c>

00:17:04.030 --> 00:17:04.040 align:start position:0%
requires transitive java dot logging the
 

00:17:04.040 --> 00:17:05.920 align:start position:0%
requires transitive java dot logging the
word<00:17:04.189><c> transitive</c><00:17:04.760><c> here</c><00:17:04.970><c> means</c><00:17:05.240><c> that</c><00:17:05.449><c> anyone</c>

00:17:05.920 --> 00:17:05.930 align:start position:0%
word transitive here means that anyone
 

00:17:05.930 --> 00:17:09.270 align:start position:0%
word transitive here means that anyone
who<00:17:06.290><c> reads</c><00:17:06.650><c> the</c><00:17:06.949><c> java</c><00:17:07.220><c> sequel</c><00:17:07.699><c> module</c><00:17:08.000><c> also</c>

00:17:09.270 --> 00:17:09.280 align:start position:0%
who reads the java sequel module also
 

00:17:09.280 --> 00:17:12.810 align:start position:0%
who reads the java sequel module also
reads<00:17:10.280><c> the</c><00:17:10.459><c> java</c><00:17:10.699><c> logging</c><00:17:11.180><c> module</c><00:17:11.300><c> for</c><00:17:12.110><c> free</c>

00:17:12.810 --> 00:17:12.820 align:start position:0%
reads the java logging module for free
 

00:17:12.820 --> 00:17:15.819 align:start position:0%
reads the java logging module for free
the<00:17:13.820><c> my</c><00:17:14.089><c> app</c><00:17:14.300><c> module</c><00:17:14.780><c> no</c><00:17:15.260><c> longer</c><00:17:15.620><c> has</c><00:17:15.800><c> to</c>

00:17:15.819 --> 00:17:15.829 align:start position:0%
the my app module no longer has to
 

00:17:15.829 --> 00:17:18.490 align:start position:0%
the my app module no longer has to
bother<00:17:16.130><c> with</c><00:17:16.720><c> requires</c><00:17:17.720><c> java</c><00:17:18.079><c> logging</c>

00:17:18.490 --> 00:17:18.500 align:start position:0%
bother with requires java logging
 

00:17:18.500 --> 00:17:21.130 align:start position:0%
bother with requires java logging
because<00:17:19.220><c> it</c><00:17:19.339><c> reads</c><00:17:19.640><c> java</c><00:17:20.030><c> logging</c><00:17:20.449><c> thanks</c><00:17:20.990><c> to</c>

00:17:21.130 --> 00:17:21.140 align:start position:0%
because it reads java logging thanks to
 

00:17:21.140 --> 00:17:25.179 align:start position:0%
because it reads java logging thanks to
reading<00:17:21.439><c> java</c><00:17:21.680><c> sequel</c><00:17:22.130><c> happy</c><00:17:22.850><c> face</c><00:17:23.980><c> this</c><00:17:24.980><c> is</c>

00:17:25.179 --> 00:17:25.189 align:start position:0%
reading java sequel happy face this is
 

00:17:25.189 --> 00:17:27.490 align:start position:0%
reading java sequel happy face this is
called<00:17:25.459><c> implied</c><00:17:26.089><c> readability</c><00:17:26.630><c> and</c><00:17:27.050><c> it's</c><00:17:27.320><c> very</c>

00:17:27.490 --> 00:17:27.500 align:start position:0%
called implied readability and it's very
 

00:17:27.500 --> 00:17:33.010 align:start position:0%
called implied readability and it's very
powerful<00:17:30.370><c> it's</c><00:17:31.370><c> powerful</c><00:17:31.880><c> because</c><00:17:32.360><c> it</c><00:17:32.420><c> lets</c><00:17:32.750><c> a</c>

00:17:33.010 --> 00:17:33.020 align:start position:0%
powerful it's powerful because it lets a
 

00:17:33.020 --> 00:17:36.070 align:start position:0%
powerful it's powerful because it lets a
module<00:17:33.440><c> be</c><00:17:33.740><c> refactored</c><00:17:34.600><c> without</c><00:17:35.600><c> breaking</c>

00:17:36.070 --> 00:17:36.080 align:start position:0%
module be refactored without breaking
 

00:17:36.080 --> 00:17:38.890 align:start position:0%
module be refactored without breaking
consumers<00:17:36.650><c> for</c><00:17:37.400><c> example</c><00:17:37.850><c> suppose</c><00:17:38.210><c> that</c><00:17:38.480><c> Java</c>

00:17:38.890 --> 00:17:38.900 align:start position:0%
consumers for example suppose that Java
 

00:17:38.900 --> 00:17:39.930 align:start position:0%
consumers for example suppose that Java
logging

00:17:39.930 --> 00:17:39.940 align:start position:0%
logging
 

00:17:39.940 --> 00:17:42.060 align:start position:0%
logging
has<00:17:40.179><c> some</c><00:17:40.389><c> auxiliary</c><00:17:40.990><c> packages</c><00:17:41.710><c> that</c><00:17:41.919><c> we'd</c>

00:17:42.060 --> 00:17:42.070 align:start position:0%
has some auxiliary packages that we'd
 

00:17:42.070 --> 00:17:44.129 align:start position:0%
has some auxiliary packages that we'd
like<00:17:42.279><c> to</c><00:17:42.490><c> start</c><00:17:42.730><c> shipping</c><00:17:43.000><c> in</c><00:17:43.509><c> a</c><00:17:43.720><c> separate</c>

00:17:44.129 --> 00:17:44.139 align:start position:0%
like to start shipping in a separate
 

00:17:44.139 --> 00:17:47.399 align:start position:0%
like to start shipping in a separate
module<00:17:44.289><c> log</c><00:17:45.070><c> extras</c><00:17:45.779><c> stuff</c><00:17:46.779><c> in</c><00:17:46.929><c> it</c><00:17:47.049><c> some</c>

00:17:47.399 --> 00:17:47.409 align:start position:0%
module log extras stuff in it some
 

00:17:47.409 --> 00:17:51.149 align:start position:0%
module log extras stuff in it some
exports<00:17:48.090><c> the</c><00:17:49.090><c> Java</c><00:17:49.389><c> logging</c><00:17:49.899><c> module</c><00:17:50.049><c> can</c><00:17:50.919><c> say</c>

00:17:51.149 --> 00:17:51.159 align:start position:0%
exports the Java logging module can say
 

00:17:51.159 --> 00:17:53.430 align:start position:0%
exports the Java logging module can say
requires<00:17:51.850><c> transitive</c><00:17:52.570><c> Java</c><00:17:52.870><c> requires</c>

00:17:53.430 --> 00:17:53.440 align:start position:0%
requires transitive Java requires
 

00:17:53.440 --> 00:17:55.740 align:start position:0%
requires transitive Java requires
transitive<00:17:53.980><c> log</c><00:17:54.129><c> extras</c><00:17:54.549><c> so</c><00:17:55.179><c> that</c><00:17:55.360><c> my</c><00:17:55.570><c> app</c>

00:17:55.740 --> 00:17:55.750 align:start position:0%
transitive log extras so that my app
 

00:17:55.750 --> 00:17:58.590 align:start position:0%
transitive log extras so that my app
which<00:17:56.470><c> already</c><00:17:56.879><c> implicitly</c><00:17:57.879><c> reads</c><00:17:58.210><c> Java</c>

00:17:58.590 --> 00:17:58.600 align:start position:0%
which already implicitly reads Java
 

00:17:58.600 --> 00:18:03.860 align:start position:0%
which already implicitly reads Java
logging<00:18:00.240><c> also</c><00:18:01.240><c> implicitly</c><00:18:01.750><c> reads</c><00:18:02.110><c> log</c><00:18:02.559><c> extras</c>

00:18:03.860 --> 00:18:03.870 align:start position:0%
logging also implicitly reads log extras
 

00:18:03.870 --> 00:18:06.389 align:start position:0%
logging also implicitly reads log extras
my<00:18:04.870><c> app</c><00:18:05.049><c> would</c><00:18:05.289><c> be</c><00:18:05.440><c> unaware</c><00:18:05.830><c> that</c><00:18:06.039><c> this</c>

00:18:06.389 --> 00:18:06.399 align:start position:0%
my app would be unaware that this
 

00:18:06.399 --> 00:18:10.310 align:start position:0%
my app would be unaware that this
refactoring<00:18:07.269><c> down</c><00:18:07.870><c> the</c><00:18:08.049><c> stack</c><00:18:08.320><c> is</c><00:18:08.590><c> happening</c>

00:18:10.310 --> 00:18:10.320 align:start position:0%
refactoring down the stack is happening
 

00:18:10.320 --> 00:18:16.200 align:start position:0%
refactoring down the stack is happening
it<00:18:11.320><c> just</c><00:18:11.379><c> says</c><00:18:11.710><c> requires</c><00:18:12.100><c> java</c><00:18:12.399><c> sequel</c><00:18:15.059><c> so</c><00:18:16.059><c> in</c>

00:18:16.200 --> 00:18:16.210 align:start position:0%
it just says requires java sequel so in
 

00:18:16.210 --> 00:18:18.499 align:start position:0%
it just says requires java sequel so in
essence<00:18:16.539><c> this</c><00:18:17.529><c> model</c><00:18:17.889><c> of</c><00:18:18.009><c> readability</c>

00:18:18.499 --> 00:18:18.509 align:start position:0%
essence this model of readability
 

00:18:18.509 --> 00:18:21.149 align:start position:0%
essence this model of readability
supports<00:18:19.509><c> downward</c><00:18:20.080><c> decomposition</c><00:18:20.889><c> any</c>

00:18:21.149 --> 00:18:21.159 align:start position:0%
supports downward decomposition any
 

00:18:21.159 --> 00:18:23.879 align:start position:0%
supports downward decomposition any
module<00:18:21.549><c> you</c><00:18:21.820><c> read</c><00:18:22.090><c> can</c><00:18:22.509><c> be</c><00:18:22.629><c> decomposed</c><00:18:23.110><c> by</c><00:18:23.740><c> its</c>

00:18:23.879 --> 00:18:23.889 align:start position:0%
module you read can be decomposed by its
 

00:18:23.889 --> 00:18:26.820 align:start position:0%
module you read can be decomposed by its
author<00:18:24.070><c> into</c><00:18:24.549><c> new</c><00:18:24.730><c> modules</c><00:18:25.210><c> and</c><00:18:25.830><c> readability</c>

00:18:26.820 --> 00:18:26.830 align:start position:0%
author into new modules and readability
 

00:18:26.830 --> 00:18:29.549 align:start position:0%
author into new modules and readability
of<00:18:27.070><c> the</c><00:18:27.340><c> new</c><00:18:27.490><c> modules</c><00:18:27.940><c> can</c><00:18:28.149><c> be</c><00:18:28.210><c> recovered</c><00:18:28.720><c> with</c>

00:18:29.549 --> 00:18:29.559 align:start position:0%
of the new modules can be recovered with
 

00:18:29.559 --> 00:18:31.590 align:start position:0%
of the new modules can be recovered with
a<00:18:29.590><c> requires</c><00:18:30.039><c> transitive</c><00:18:30.759><c> clause</c><00:18:31.000><c> in</c><00:18:31.240><c> the</c><00:18:31.450><c> old</c>

00:18:31.590 --> 00:18:31.600 align:start position:0%
a requires transitive clause in the old
 

00:18:31.600 --> 00:18:34.680 align:start position:0%
a requires transitive clause in the old
module<00:18:32.460><c> so</c><00:18:33.460><c> you</c><00:18:33.549><c> can</c><00:18:33.700><c> see</c><00:18:33.879><c> that</c><00:18:34.090><c> the</c><00:18:34.240><c> the</c>

00:18:34.680 --> 00:18:34.690 align:start position:0%
module so you can see that the the
 

00:18:34.690 --> 00:18:36.899 align:start position:0%
module so you can see that the the
definition<00:18:35.259><c> of</c><00:18:35.320><c> reads</c><00:18:35.649><c> one</c><00:18:36.250><c> module</c><00:18:36.429><c> reading</c>

00:18:36.899 --> 00:18:36.909 align:start position:0%
definition of reads one module reading
 

00:18:36.909 --> 00:18:39.659 align:start position:0%
definition of reads one module reading
another<00:18:37.059><c> is</c><00:18:37.299><c> recursive</c><00:18:37.840><c> a</c><00:18:38.049><c> module</c><00:18:38.860><c> X</c><00:18:39.159><c> reads</c>

00:18:39.659 --> 00:18:39.669 align:start position:0%
another is recursive a module X reads
 

00:18:39.669 --> 00:18:42.600 align:start position:0%
another is recursive a module X reads
another<00:18:40.330><c> module</c><00:18:40.539><c> Y</c><00:18:40.960><c> by</c><00:18:41.740><c> requiring</c><00:18:42.190><c> it</c>

00:18:42.600 --> 00:18:42.610 align:start position:0%
another module Y by requiring it
 

00:18:42.610 --> 00:18:45.629 align:start position:0%
another module Y by requiring it
directly<00:18:43.029><c> with</c><00:18:43.450><c> a</c><00:18:43.480><c> requires</c><00:18:43.899><c> clause</c><00:18:44.200><c> or</c><00:18:44.639><c> by</c>

00:18:45.629 --> 00:18:45.639 align:start position:0%
directly with a requires clause or by
 

00:18:45.639 --> 00:18:47.909 align:start position:0%
directly with a requires clause or by
reading<00:18:46.000><c> some</c><00:18:46.240><c> third</c><00:18:46.629><c> module</c><00:18:47.019><c> q</c><00:18:47.529><c> there's</c><00:18:47.799><c> the</c>

00:18:47.909 --> 00:18:47.919 align:start position:0%
reading some third module q there's the
 

00:18:47.919 --> 00:18:50.340 align:start position:0%
reading some third module q there's the
recursion<00:18:48.460><c> reading</c><00:18:48.789><c> some</c><00:18:49.029><c> third</c><00:18:49.600><c> module</c><00:18:49.840><c> q</c>

00:18:50.340 --> 00:18:50.350 align:start position:0%
recursion reading some third module q
 

00:18:50.350 --> 00:18:53.490 align:start position:0%
recursion reading some third module q
where<00:18:50.950><c> q</c><00:18:50.980><c> says</c><00:18:51.610><c> requires</c><00:18:52.090><c> transitive</c><00:18:52.870><c> why</c><00:18:53.019><c> and</c>

00:18:53.490 --> 00:18:53.500 align:start position:0%
where q says requires transitive why and
 

00:18:53.500 --> 00:18:56.700 align:start position:0%
where q says requires transitive why and
now<00:18:54.399><c> that</c><00:18:54.610><c> X</c><00:18:54.759><c> reads</c><00:18:55.059><c> why</c><00:18:55.330><c> why</c><00:18:56.259><c> can</c><00:18:56.529><c> say</c>

00:18:56.700 --> 00:18:56.710 align:start position:0%
now that X reads why why can say
 

00:18:56.710 --> 00:18:58.049 align:start position:0%
now that X reads why why can say
requires<00:18:57.070><c> transitive</c><00:18:57.669><c> for</c><00:18:57.820><c> some</c><00:18:57.940><c> other</c>

00:18:58.049 --> 00:18:58.059 align:start position:0%
requires transitive for some other
 

00:18:58.059 --> 00:19:02.669 align:start position:0%
requires transitive for some other
module<00:18:58.419><c> and</c><00:18:58.690><c> X</c><00:18:58.899><c> will</c><00:18:59.110><c> read</c><00:18:59.320><c> that</c><00:18:59.559><c> too</c><00:19:01.379><c> now</c><00:19:02.379><c> be</c>

00:19:02.669 --> 00:19:02.679 align:start position:0%
module and X will read that too now be
 

00:19:02.679 --> 00:19:05.610 align:start position:0%
module and X will read that too now be
careful<00:19:02.830><c> once</c><00:19:03.549><c> people</c><00:19:03.879><c> require</c><00:19:04.659><c> your</c><00:19:05.169><c> module</c>

00:19:05.610 --> 00:19:05.620 align:start position:0%
careful once people require your module
 

00:19:05.620 --> 00:19:09.149 align:start position:0%
careful once people require your module
explicitly<00:19:06.580><c> you</c><00:19:07.360><c> can</c><00:19:07.570><c> refactor</c><00:19:08.049><c> it</c><00:19:08.470><c> downwards</c>

00:19:09.149 --> 00:19:09.159 align:start position:0%
explicitly you can refactor it downwards
 

00:19:09.159 --> 00:19:11.490 align:start position:0%
explicitly you can refactor it downwards
as<00:19:09.399><c> much</c><00:19:09.610><c> as</c><00:19:09.820><c> you</c><00:19:09.909><c> like</c><00:19:10.120><c> but</c><00:19:11.019><c> you</c><00:19:11.169><c> cannot</c>

00:19:11.490 --> 00:19:11.500 align:start position:0%
as much as you like but you cannot
 

00:19:11.500 --> 00:19:14.580 align:start position:0%
as much as you like but you cannot
delete<00:19:11.769><c> it</c><00:19:12.120><c> there's</c><00:19:13.120><c> no</c><00:19:13.360><c> way</c><00:19:13.570><c> for</c><00:19:13.629><c> a</c><00:19:13.899><c> module</c><00:19:14.320><c> to</c>

00:19:14.580 --> 00:19:14.590 align:start position:0%
delete it there's no way for a module to
 

00:19:14.590 --> 00:19:17.490 align:start position:0%
delete it there's no way for a module to
stand<00:19:14.980><c> in</c><00:19:15.250><c> for</c><00:19:16.210><c> another</c><00:19:16.389><c> module</c><00:19:16.659><c> by</c><00:19:17.080><c> taking</c>

00:19:17.490 --> 00:19:17.500 align:start position:0%
stand in for another module by taking
 

00:19:17.500 --> 00:19:20.789 align:start position:0%
stand in for another module by taking
its<00:19:17.620><c> name</c><00:19:17.679><c> as</c><00:19:18.100><c> an</c><00:19:18.460><c> alias</c><00:19:18.820><c> if</c><00:19:19.120><c> someone</c><00:19:20.019><c> requires</c>

00:19:20.789 --> 00:19:20.799 align:start position:0%
its name as an alias if someone requires
 

00:19:20.799 --> 00:19:24.720 align:start position:0%
its name as an alias if someone requires
X<00:19:21.129><c> and</c><00:19:21.870><c> X</c><00:19:22.870><c> is</c><00:19:23.019><c> deleted</c><00:19:23.409><c> then</c><00:19:24.309><c> the</c><00:19:24.429><c> module</c>

00:19:24.720 --> 00:19:24.730 align:start position:0%
X and X is deleted then the module
 

00:19:24.730 --> 00:19:32.340 align:start position:0%
X and X is deleted then the module
system<00:19:24.940><c> won't</c><00:19:25.779><c> starts</c><00:19:26.200><c> I</c><00:19:30.090><c> said</c><00:19:31.090><c> earlier</c><00:19:31.350><c> that</c>

00:19:32.340 --> 00:19:32.350 align:start position:0%
system won't starts I said earlier that
 

00:19:32.350 --> 00:19:34.619 align:start position:0%
system won't starts I said earlier that
the<00:19:32.470><c> exports</c><00:19:33.159><c> part</c><00:19:33.429><c> of</c><00:19:33.610><c> accessibility</c><00:19:34.149><c> is</c>

00:19:34.619 --> 00:19:34.629 align:start position:0%
the exports part of accessibility is
 

00:19:34.629 --> 00:19:36.029 align:start position:0%
the exports part of accessibility is
pretty<00:19:34.929><c> straightforward</c><00:19:35.200><c> the</c><00:19:35.620><c> packages</c>

00:19:36.029 --> 00:19:36.039 align:start position:0%
pretty straightforward the packages
 

00:19:36.039 --> 00:19:38.399 align:start position:0%
pretty straightforward the packages
either<00:19:36.220><c> exported</c><00:19:36.879><c> or</c><00:19:37.000><c> it</c><00:19:37.120><c> isn't</c><00:19:37.259><c> but</c><00:19:38.259><c> it's</c>

00:19:38.399 --> 00:19:38.409 align:start position:0%
either exported or it isn't but it's
 

00:19:38.409 --> 00:19:40.399 align:start position:0%
either exported or it isn't but it's
actually<00:19:38.769><c> a</c><00:19:38.799><c> little</c><00:19:38.950><c> more</c><00:19:39.129><c> subtle</c><00:19:39.490><c> than</c><00:19:39.820><c> that</c>

00:19:40.399 --> 00:19:40.409 align:start position:0%
actually a little more subtle than that
 

00:19:40.409 --> 00:19:43.440 align:start position:0%
actually a little more subtle than that
here<00:19:41.409><c> are</c><00:19:41.620><c> some</c><00:19:42.009><c> of</c><00:19:42.070><c> the</c><00:19:42.279><c> exports</c><00:19:42.850><c> of</c><00:19:43.000><c> the</c>

00:19:43.440 --> 00:19:43.450 align:start position:0%
here are some of the exports of the
 

00:19:43.450 --> 00:19:46.440 align:start position:0%
here are some of the exports of the
java-based<00:19:43.779><c> module</c><00:19:45.000><c> exporting</c><00:19:46.000><c> a</c><00:19:46.059><c> package</c>

00:19:46.440 --> 00:19:46.450 align:start position:0%
java-based module exporting a package
 

00:19:46.450 --> 00:19:48.830 align:start position:0%
java-based module exporting a package
means<00:19:46.690><c> that</c><00:19:46.870><c> anyone</c><00:19:47.139><c> can</c><00:19:47.559><c> compile</c><00:19:48.100><c> and</c><00:19:48.460><c> run</c>

00:19:48.830 --> 00:19:48.840 align:start position:0%
means that anyone can compile and run
 

00:19:48.840 --> 00:19:51.389 align:start position:0%
means that anyone can compile and run
against<00:19:49.840><c> its</c><00:19:49.990><c> public</c><00:19:50.409><c> types</c><00:19:50.679><c> and</c><00:19:51.070><c> their</c>

00:19:51.389 --> 00:19:51.399 align:start position:0%
against its public types and their
 

00:19:51.399 --> 00:19:52.980 align:start position:0%
against its public types and their
public<00:19:51.820><c> elements</c>

00:19:52.980 --> 00:19:52.990 align:start position:0%
public elements
 

00:19:52.990 --> 00:19:56.169 align:start position:0%
public elements
there<00:19:53.990><c> are</c><00:19:54.140><c> dozens</c><00:19:54.350><c> more</c><00:19:54.830><c> packages</c><00:19:55.370><c> in</c><00:19:55.669><c> Java</c>

00:19:56.169 --> 00:19:56.179 align:start position:0%
there are dozens more packages in Java
 

00:19:56.179 --> 00:19:59.020 align:start position:0%
there are dozens more packages in Java
base<00:19:56.419><c> that</c><00:19:56.750><c> aren't</c><00:19:57.200><c> exported</c><00:19:58.010><c> no</c><00:19:58.669><c> one</c><00:19:58.850><c> can</c>

00:19:59.020 --> 00:19:59.030 align:start position:0%
base that aren't exported no one can
 

00:19:59.030 --> 00:20:01.360 align:start position:0%
base that aren't exported no one can
compile<00:19:59.419><c> against</c><00:19:59.720><c> their</c><00:19:59.929><c> public</c><00:20:00.260><c> types</c><00:20:00.500><c> even</c>

00:20:01.360 --> 00:20:01.370 align:start position:0%
compile against their public types even
 

00:20:01.370 --> 00:20:03.070 align:start position:0%
compile against their public types even
if<00:20:01.460><c> you</c><00:20:01.549><c> make</c><00:20:01.700><c> a</c><00:20:01.730><c> class</c><00:20:02.030><c> file</c><00:20:02.270><c> by</c><00:20:02.480><c> hand</c><00:20:02.750><c> that</c>

00:20:03.070 --> 00:20:03.080 align:start position:0%
if you make a class file by hand that
 

00:20:03.080 --> 00:20:04.870 align:start position:0%
if you make a class file by hand that
refers<00:20:03.410><c> to</c><00:20:03.620><c> a</c><00:20:03.650><c> public</c><00:20:04.100><c> type</c><00:20:04.340><c> in</c><00:20:04.580><c> a</c><00:20:04.700><c> non</c>

00:20:04.870 --> 00:20:04.880 align:start position:0%
refers to a public type in a non
 

00:20:04.880 --> 00:20:07.240 align:start position:0%
refers to a public type in a non
exported<00:20:05.330><c> package</c><00:20:05.690><c> it</c><00:20:05.870><c> won't</c><00:20:06.080><c> run</c><00:20:06.350><c> this</c><00:20:06.950><c> isn't</c>

00:20:07.240 --> 00:20:07.250 align:start position:0%
exported package it won't run this isn't
 

00:20:07.250 --> 00:20:09.250 align:start position:0%
exported package it won't run this isn't
just<00:20:07.429><c> compile</c><00:20:07.790><c> time</c><00:20:08.030><c> trickery</c><00:20:08.390><c> the</c><00:20:08.690><c> VMS</c><00:20:09.020><c> doing</c>

00:20:09.250 --> 00:20:09.260 align:start position:0%
just compile time trickery the VMS doing
 

00:20:09.260 --> 00:20:12.640 align:start position:0%
just compile time trickery the VMS doing
it<00:20:09.380><c> as</c><00:20:09.500><c> well</c><00:20:11.020><c> but</c><00:20:12.020><c> still</c><00:20:12.230><c> that's</c><00:20:12.470><c> all</c>

00:20:12.640 --> 00:20:12.650 align:start position:0%
it as well but still that's all
 

00:20:12.650 --> 00:20:14.680 align:start position:0%
it as well but still that's all
accessibility<00:20:13.460><c> in</c><00:20:13.790><c> the</c><00:20:13.910><c> Java</c><00:20:14.179><c> language</c><00:20:14.240><c> in</c>

00:20:14.680 --> 00:20:14.690 align:start position:0%
accessibility in the Java language in
 

00:20:14.690 --> 00:20:16.690 align:start position:0%
accessibility in the Java language in
VMware<00:20:15.230><c> the</c><00:20:15.380><c> accessing</c><00:20:15.890><c> class</c><00:20:16.130><c> and</c><00:20:16.580><c> the</c>

00:20:16.690 --> 00:20:16.700 align:start position:0%
VMware the accessing class and the
 

00:20:16.700 --> 00:20:18.730 align:start position:0%
VMware the accessing class and the
target<00:20:17.090><c> class</c><00:20:17.299><c> are</c><00:20:17.510><c> known</c><00:20:17.660><c> static</c><00:20:18.230><c> leads</c><00:20:18.470><c> it's</c>

00:20:18.730 --> 00:20:18.740 align:start position:0%
target class are known static leads it's
 

00:20:18.740 --> 00:20:20.950 align:start position:0%
target class are known static leads it's
in<00:20:18.919><c> the</c><00:20:19.010><c> source</c><00:20:19.220><c> code</c><00:20:19.370><c> of</c><00:20:19.429><c> the</c><00:20:19.549><c> bytecode</c><00:20:19.960><c> what</c>

00:20:20.950 --> 00:20:20.960 align:start position:0%
in the source code of the bytecode what
 

00:20:20.960 --> 00:20:22.960 align:start position:0%
in the source code of the bytecode what
about<00:20:21.200><c> accessibility</c><00:20:21.890><c> with</c><00:20:22.280><c> reflection</c>

00:20:22.960 --> 00:20:22.970 align:start position:0%
about accessibility with reflection
 

00:20:22.970 --> 00:20:25.240 align:start position:0%
about accessibility with reflection
where<00:20:23.600><c> the</c><00:20:23.690><c> target</c><00:20:23.929><c> class</c><00:20:24.350><c> is</c><00:20:24.650><c> only</c><00:20:24.919><c> known</c>

00:20:25.240 --> 00:20:25.250 align:start position:0%
where the target class is only known
 

00:20:25.250 --> 00:20:30.310 align:start position:0%
where the target class is only known
dynamically<00:20:27.910><c> we</c><00:20:28.910><c> think</c><00:20:29.150><c> it's</c><00:20:29.299><c> very</c><00:20:29.630><c> important</c>

00:20:30.310 --> 00:20:30.320 align:start position:0%
dynamically we think it's very important
 

00:20:30.320 --> 00:20:34.030 align:start position:0%
dynamically we think it's very important
that<00:20:31.059><c> exporting</c><00:20:32.059><c> a</c><00:20:32.210><c> package</c><00:20:32.720><c> like</c><00:20:33.679><c> Java</c>

00:20:34.030 --> 00:20:34.040 align:start position:0%
that exporting a package like Java
 

00:20:34.040 --> 00:20:38.350 align:start position:0%
that exporting a package like Java
security<00:20:34.250><c> yep</c><00:20:35.120><c> there</c><00:20:35.419><c> is</c><00:20:36.429><c> for</c><00:20:37.429><c> static</c><00:20:37.880><c> access</c>

00:20:38.350 --> 00:20:38.360 align:start position:0%
security yep there is for static access
 

00:20:38.360 --> 00:20:41.049 align:start position:0%
security yep there is for static access
to<00:20:38.690><c> be</c><00:20:38.840><c> programmed</c><00:20:39.350><c> against</c><00:20:39.830><c> does</c><00:20:40.460><c> not</c><00:20:40.760><c> mean</c>

00:20:41.049 --> 00:20:41.059 align:start position:0%
to be programmed against does not mean
 

00:20:41.059 --> 00:20:42.970 align:start position:0%
to be programmed against does not mean
that<00:20:41.090><c> anyone</c><00:20:41.780><c> can</c><00:20:41.990><c> reflect</c><00:20:42.380><c> over</c><00:20:42.890><c> the</c>

00:20:42.970 --> 00:20:42.980 align:start position:0%
that anyone can reflect over the
 

00:20:42.980 --> 00:20:46.060 align:start position:0%
that anyone can reflect over the
internals<00:20:43.610><c> of</c><00:20:43.880><c> that</c><00:20:44.240><c> package</c><00:20:44.770><c> because</c><00:20:45.770><c> if</c>

00:20:46.060 --> 00:20:46.070 align:start position:0%
internals of that package because if
 

00:20:46.070 --> 00:20:49.900 align:start position:0%
internals of that package because if
they<00:20:46.250><c> can</c><00:20:46.640><c> they</c><00:20:47.030><c> will</c><00:20:48.220><c> here</c><00:20:49.220><c> is</c><00:20:49.429><c> a</c><00:20:49.460><c> stack</c>

00:20:49.900 --> 00:20:49.910 align:start position:0%
they can they will here is a stack
 

00:20:49.910 --> 00:20:54.370 align:start position:0%
they can they will here is a stack
overflow<00:20:50.480><c> question</c><00:20:50.990><c> from</c><00:20:51.559><c> July</c><00:20:51.919><c> 2016</c><00:20:53.380><c> someone</c>

00:20:54.370 --> 00:20:54.380 align:start position:0%
overflow question from July 2016 someone
 

00:20:54.380 --> 00:20:57.150 align:start position:0%
overflow question from July 2016 someone
this<00:20:54.770><c> is</c><00:20:54.890><c> reven</c><00:20:55.100><c> take</c><00:20:55.940><c> a</c><00:20:55.970><c> picture</c><00:20:56.270><c> of</c><00:20:56.360><c> URL</c>

00:20:57.150 --> 00:20:57.160 align:start position:0%
this is reven take a picture of URL
 

00:20:57.160 --> 00:21:00.370 align:start position:0%
this is reven take a picture of URL
someone<00:20:58.160><c> was</c><00:20:58.850><c> using</c><00:20:59.059><c> set</c><00:20:59.419><c> accessible</c><00:21:00.110><c> to</c>

00:21:00.370 --> 00:21:00.380 align:start position:0%
someone was using set accessible to
 

00:21:00.380 --> 00:21:04.270 align:start position:0%
someone was using set accessible to
access<00:21:00.830><c> a</c><00:21:00.980><c> private</c><00:21:01.760><c> field</c><00:21:02.150><c> in</c><00:21:02.720><c> the</c><00:21:03.559><c> class</c><00:21:03.770><c> Java</c>

00:21:04.270 --> 00:21:04.280 align:start position:0%
access a private field in the class Java
 

00:21:04.280 --> 00:21:08.470 align:start position:0%
access a private field in the class Java
security<00:21:04.669><c> key</c><00:21:05.660><c> store</c><00:21:06.460><c> the</c><00:21:07.460><c> purpose</c><00:21:07.970><c> of</c><00:21:08.150><c> the</c>

00:21:08.470 --> 00:21:08.480 align:start position:0%
security key store the purpose of the
 

00:21:08.480 --> 00:21:11.289 align:start position:0%
security key store the purpose of the
class<00:21:08.690><c> Java</c><00:21:09.350><c> security</c><00:21:09.830><c> key</c><00:21:10.460><c> store</c><00:21:10.730><c> is</c><00:21:10.910><c> and</c><00:21:11.240><c> I</c>

00:21:11.289 --> 00:21:11.299 align:start position:0%
class Java security key store is and I
 

00:21:11.299 --> 00:21:13.510 align:start position:0%
class Java security key store is and I
quote<00:21:11.360><c> a</c><00:21:11.809><c> storage</c><00:21:12.590><c> facility</c><00:21:12.770><c> for</c>

00:21:13.510 --> 00:21:13.520 align:start position:0%
quote a storage facility for
 

00:21:13.520 --> 00:21:16.330 align:start position:0%
quote a storage facility for
cryptographic<00:21:14.000><c> keys</c><00:21:14.720><c> and</c><00:21:15.140><c> certificates</c><00:21:15.710><c> if</c>

00:21:16.330 --> 00:21:16.340 align:start position:0%
cryptographic keys and certificates if
 

00:21:16.340 --> 00:21:19.539 align:start position:0%
cryptographic keys and certificates if
ever<00:21:17.150><c> there</c><00:21:17.570><c> was</c><00:21:17.750><c> a</c><00:21:17.809><c> class</c><00:21:18.230><c> whose</c><00:21:18.980><c> private</c>

00:21:19.539 --> 00:21:19.549 align:start position:0%
ever there was a class whose private
 

00:21:19.549 --> 00:21:22.299 align:start position:0%
ever there was a class whose private
fields<00:21:20.120><c> should</c><00:21:20.299><c> be</c><00:21:20.630><c> inaccessible</c><00:21:21.260><c> it</c><00:21:21.740><c> is</c><00:21:22.130><c> this</c>

00:21:22.299 --> 00:21:22.309 align:start position:0%
fields should be inaccessible it is this
 

00:21:22.309 --> 00:21:26.710 align:start position:0%
fields should be inaccessible it is this
one<00:21:23.890><c> now</c><00:21:24.890><c> the</c><00:21:24.950><c> Java</c><00:21:25.370><c> security</c><00:21:25.640><c> package</c><00:21:26.360><c> is</c>

00:21:26.710 --> 00:21:26.720 align:start position:0%
one now the Java security package is
 

00:21:26.720 --> 00:21:29.590 align:start position:0%
one now the Java security package is
exported<00:21:27.620><c> so</c><00:21:28.460><c> you</c><00:21:28.520><c> can</c><00:21:28.790><c> code</c><00:21:29.090><c> against</c><00:21:29.510><c> the</c>

00:21:29.590 --> 00:21:29.600 align:start position:0%
exported so you can code against the
 

00:21:29.600 --> 00:21:31.539 align:start position:0%
exported so you can code against the
public<00:21:30.020><c> type</c><00:21:30.230><c> key</c><00:21:30.500><c> store</c><00:21:30.799><c> in</c><00:21:30.980><c> its</c><00:21:31.100><c> public</c>

00:21:31.539 --> 00:21:31.549 align:start position:0%
public type key store in its public
 

00:21:31.549 --> 00:21:34.210 align:start position:0%
public type key store in its public
fields<00:21:32.540><c> and</c><00:21:32.660><c> methods</c><00:21:32.750><c> not</c><00:21:33.470><c> so</c><00:21:33.740><c> that</c><00:21:33.919><c> you</c><00:21:34.040><c> can</c>

00:21:34.210 --> 00:21:34.220 align:start position:0%
fields and methods not so that you can
 

00:21:34.220 --> 00:21:39.030 align:start position:0%
fields and methods not so that you can
reflect<00:21:34.490><c> over</c><00:21:34.940><c> clicky</c><00:21:35.390><c> stores</c><00:21:35.660><c> internals</c>

00:21:39.030 --> 00:21:39.040 align:start position:0%
 
 

00:21:39.040 --> 00:21:42.490 align:start position:0%
 
ring<00:21:40.040><c> code</c><00:21:40.400><c> I</c><00:21:40.669><c> love</c><00:21:41.030><c> the</c><00:21:41.210><c> the</c><00:21:41.720><c> first</c><00:21:41.990><c> answer</c>

00:21:42.490 --> 00:21:42.500 align:start position:0%
ring code I love the the first answer
 

00:21:42.500 --> 00:21:45.100 align:start position:0%
ring code I love the the first answer
how<00:21:42.830><c> ofter</c><00:21:43.340><c> updating</c><00:21:43.850><c> I</c><00:21:44.179><c> something's</c><00:21:45.080><c> not</c>

00:21:45.100 --> 00:21:45.110 align:start position:0%
how ofter updating I something's not
 

00:21:45.110 --> 00:21:47.289 align:start position:0%
how ofter updating I something's not
working<00:21:45.230><c> how</c><00:21:45.770><c> can</c><00:21:45.950><c> I</c><00:21:46.040><c> fix</c><00:21:46.370><c> it</c><00:21:46.580><c> you</c><00:21:46.730><c> solve</c><00:21:47.000><c> it</c><00:21:47.150><c> by</c>

00:21:47.289 --> 00:21:47.299 align:start position:0%
working how can I fix it you solve it by
 

00:21:47.299 --> 00:21:49.000 align:start position:0%
working how can I fix it you solve it by
not<00:21:47.540><c> fiddling</c><00:21:47.840><c> with</c><00:21:48.110><c> private</c><00:21:48.559><c> data</c><00:21:48.740><c> members</c>

00:21:49.000 --> 00:21:49.010 align:start position:0%
not fiddling with private data members
 

00:21:49.010 --> 00:21:55.140 align:start position:0%
not fiddling with private data members
of<00:21:49.220><c> other</c><00:21:49.309><c> classes</c><00:21:49.820><c> first</c><00:21:50.179><c> answer</c><00:21:52.510><c> so</c><00:21:53.980><c> just</c>

00:21:55.140 --> 00:21:55.150 align:start position:0%
of other classes first answer so just
 

00:21:55.150 --> 00:21:58.240 align:start position:0%
of other classes first answer so just
exporting<00:21:56.150><c> a</c><00:21:56.270><c> package</c><00:21:56.690><c> exports</c><00:21:57.410><c> P</c><00:21:57.799><c> does</c><00:21:58.220><c> not</c>

00:21:58.240 --> 00:21:58.250 align:start position:0%
exporting a package exports P does not
 

00:21:58.250 --> 00:22:01.210 align:start position:0%
exporting a package exports P does not
allow<00:21:59.150><c> reflection</c><00:21:59.929><c> to</c><00:22:00.500><c> access</c><00:22:00.679><c> the</c>

00:22:01.210 --> 00:22:01.220 align:start position:0%
allow reflection to access the
 

00:22:01.220 --> 00:22:03.820 align:start position:0%
allow reflection to access the
non-public<00:22:01.790><c> elements</c><00:22:02.510><c> of</c><00:22:02.750><c> the</c><00:22:03.290><c> package</c><00:22:03.650><c> the</c>

00:22:03.820 --> 00:22:03.830 align:start position:0%
non-public elements of the package the
 

00:22:03.830 --> 00:22:06.640 align:start position:0%
non-public elements of the package the
non-public<00:22:04.220><c> types</c><00:22:04.669><c> or</c><00:22:05.120><c> even</c><00:22:06.049><c> the</c>

00:22:06.640 --> 00:22:06.650 align:start position:0%
non-public types or even the
 

00:22:06.650 --> 00:22:11.230 align:start position:0%
non-public types or even the
the<00:22:09.010><c> non</c><00:22:10.010><c> pride</c><00:22:10.370><c> that</c><00:22:10.640><c> the</c><00:22:10.850><c> non-public</c>

00:22:11.230 --> 00:22:11.240 align:start position:0%
the non pride that the non-public
 

00:22:11.240 --> 00:22:14.590 align:start position:0%
the non pride that the non-public
elements<00:22:11.960><c> in</c><00:22:12.080><c> public</c><00:22:12.380><c> types</c><00:22:12.620><c> so</c><00:22:13.220><c> I</c><00:22:13.490><c> said</c><00:22:14.420><c> again</c>

00:22:14.590 --> 00:22:14.600 align:start position:0%
elements in public types so I said again
 

00:22:14.600 --> 00:22:19.750 align:start position:0%
elements in public types so I said again
if<00:22:14.840><c> you</c><00:22:15.230><c> obtain</c><00:22:15.440><c> a</c><00:22:16.070><c> class</c><00:22:16.550><c> object</c><00:22:18.310><c> for</c><00:22:19.310><c> a</c><00:22:19.340><c> non</c>

00:22:19.750 --> 00:22:19.760 align:start position:0%
if you obtain a class object for a non
 

00:22:19.760 --> 00:22:24.130 align:start position:0%
if you obtain a class object for a non
public<00:22:20.300><c> type</c><00:22:20.800><c> in</c><00:22:21.800><c> the</c><00:22:22.400><c> package</c><00:22:22.760><c> you</c><00:22:23.750><c> can</c><00:22:23.930><c> still</c>

00:22:24.130 --> 00:22:24.140 align:start position:0%
public type in the package you can still
 

00:22:24.140 --> 00:22:26.620 align:start position:0%
public type in the package you can still
list<00:22:24.380><c> its</c><00:22:24.530><c> members</c><00:22:24.950><c> but</c><00:22:25.790><c> you</c><00:22:25.940><c> cannot</c><00:22:26.330><c> call</c>

00:22:26.620 --> 00:22:26.630 align:start position:0%
list its members but you cannot call
 

00:22:26.630 --> 00:22:39.450 align:start position:0%
list its members but you cannot call
gets<00:22:27.110><c> or</c><00:22:27.380><c> sets</c><00:22:27.440><c> on</c><00:22:28.250><c> its</c>

00:22:39.450 --> 00:22:39.460 align:start position:0%
 
 

00:22:39.460 --> 00:22:45.570 align:start position:0%
 
java.lang.reflect.method.invoke<00:22:44.020><c> type</c>

00:22:45.570 --> 00:22:45.580 align:start position:0%
java.lang.reflect.method.invoke type
 

00:22:45.580 --> 00:22:49.600 align:start position:0%
java.lang.reflect.method.invoke type
similarly<00:22:46.580><c> if</c><00:22:47.420><c> you</c><00:22:48.170><c> somehow</c><00:22:48.710><c> obtained</c><00:22:49.310><c> maybe</c>

00:22:49.600 --> 00:22:49.610 align:start position:0%
similarly if you somehow obtained maybe
 

00:22:49.610 --> 00:22:51.790 align:start position:0%
similarly if you somehow obtained maybe
someone<00:22:50.000><c> passes</c><00:22:50.420><c> it</c><00:22:50.510><c> to</c><00:22:50.540><c> you</c><00:22:50.780><c> a</c><00:22:50.960><c> Java</c><00:22:51.560><c> Lang</c>

00:22:51.790 --> 00:22:51.800 align:start position:0%
someone passes it to you a Java Lang
 

00:22:51.800 --> 00:22:54.520 align:start position:0%
someone passes it to you a Java Lang
reflect<00:22:52.160><c> field</c><00:22:52.430><c> object</c><00:22:52.910><c> for</c><00:22:53.450><c> a</c><00:22:53.480><c> private</c><00:22:53.960><c> field</c>

00:22:54.520 --> 00:22:54.530 align:start position:0%
reflect field object for a private field
 

00:22:54.530 --> 00:22:58.210 align:start position:0%
reflect field object for a private field
in<00:22:54.770><c> a</c><00:22:54.830><c> public</c><00:22:55.250><c> type</c><00:22:56.170><c> you</c><00:22:57.170><c> cannot</c><00:22:57.530><c> call</c><00:22:57.770><c> get</c><00:22:58.040><c> or</c>

00:22:58.210 --> 00:22:58.220 align:start position:0%
in a public type you cannot call get or
 

00:22:58.220 --> 00:23:01.150 align:start position:0%
in a public type you cannot call get or
set<00:22:58.670><c> on</c><00:22:58.850><c> it</c><00:22:59.090><c> and</c><00:22:59.410><c> even</c><00:23:00.410><c> calling</c><00:23:00.830><c> said</c>

00:23:01.150 --> 00:23:01.160 align:start position:0%
set on it and even calling said
 

00:23:01.160 --> 00:23:05.710 align:start position:0%
set on it and even calling said
accessible<00:23:01.820><c> won't</c><00:23:02.360><c> help</c><00:23:02.660><c> if</c><00:23:04.090><c> the</c><00:23:05.090><c> author</c><00:23:05.300><c> of</c>

00:23:05.710 --> 00:23:05.720 align:start position:0%
accessible won't help if the author of
 

00:23:05.720 --> 00:23:07.870 align:start position:0%
accessible won't help if the author of
the<00:23:05.840><c> module</c><00:23:06.170><c> really</c><00:23:06.740><c> wants</c><00:23:07.160><c> to</c><00:23:07.310><c> allow</c><00:23:07.550><c> access</c>

00:23:07.870 --> 00:23:07.880 align:start position:0%
the module really wants to allow access
 

00:23:07.880 --> 00:23:11.320 align:start position:0%
the module really wants to allow access
to<00:23:08.450><c> nonpublic</c><00:23:08.830><c> elements</c><00:23:09.830><c> via</c><00:23:10.640><c> reflection</c>

00:23:11.320 --> 00:23:11.330 align:start position:0%
to nonpublic elements via reflection
 

00:23:11.330 --> 00:23:14.530 align:start position:0%
to nonpublic elements via reflection
this<00:23:12.230><c> can</c><00:23:12.500><c> be</c><00:23:12.530><c> expressed</c><00:23:13.160><c> with</c><00:23:13.540><c> exports</c>

00:23:14.530 --> 00:23:14.540 align:start position:0%
this can be expressed with exports
 

00:23:14.540 --> 00:23:17.140 align:start position:0%
this can be expressed with exports
privates<00:23:15.170><c> and</c><00:23:15.440><c> that</c><00:23:15.950><c> then</c><00:23:16.190><c> allows</c><00:23:16.310><c> reflection</c>

00:23:17.140 --> 00:23:17.150 align:start position:0%
privates and that then allows reflection
 

00:23:17.150 --> 00:23:19.420 align:start position:0%
privates and that then allows reflection
to<00:23:17.300><c> work</c><00:23:17.480><c> as</c><00:23:17.690><c> it</c><00:23:17.810><c> did</c><00:23:17.960><c> in</c><00:23:17.990><c> jdk</c><00:23:18.380><c> 8</c><00:23:18.500><c> private</c>

00:23:19.420 --> 00:23:19.430 align:start position:0%
to work as it did in jdk 8 private
 

00:23:19.430 --> 00:23:21.490 align:start position:0%
to work as it did in jdk 8 private
members<00:23:19.880><c> of</c><00:23:20.060><c> public</c><00:23:20.600><c> types</c><00:23:20.900><c> can</c><00:23:21.170><c> be</c><00:23:21.200><c> accessed</c>

00:23:21.490 --> 00:23:21.500 align:start position:0%
members of public types can be accessed
 

00:23:21.500 --> 00:23:24.840 align:start position:0%
members of public types can be accessed
and<00:23:22.070><c> public</c><00:23:23.030><c> members</c><00:23:23.480><c> of</c><00:23:23.630><c> non-public</c><00:23:24.020><c> types</c>

00:23:24.840 --> 00:23:24.850 align:start position:0%
and public members of non-public types
 

00:23:24.850 --> 00:23:27.460 align:start position:0%
and public members of non-public types
we<00:23:25.850><c> don't</c><00:23:26.060><c> officially</c><00:23:26.540><c> call</c><00:23:27.050><c> it</c><00:23:27.200><c> weak</c>

00:23:27.460 --> 00:23:27.470 align:start position:0%
we don't officially call it weak
 

00:23:27.470 --> 00:23:29.440 align:start position:0%
we don't officially call it weak
encapsulation<00:23:28.310><c> but</c><00:23:28.730><c> you</c><00:23:28.820><c> can</c><00:23:29.000><c> think</c><00:23:29.150><c> of</c><00:23:29.300><c> it</c>

00:23:29.440 --> 00:23:29.450 align:start position:0%
encapsulation but you can think of it
 

00:23:29.450 --> 00:23:34.780 align:start position:0%
encapsulation but you can think of it
that<00:23:29.480><c> way</c><00:23:31.840><c> the</c><00:23:32.840><c> bottom</c><00:23:33.170><c> line</c><00:23:33.350><c> is</c><00:23:33.680><c> that</c><00:23:33.790><c> strong</c>

00:23:34.780 --> 00:23:34.790 align:start position:0%
that way the bottom line is that strong
 

00:23:34.790 --> 00:23:37.840 align:start position:0%
that way the bottom line is that strong
encapsulation<00:23:35.570><c> is</c><00:23:35.900><c> even</c><00:23:36.470><c> stronger</c><00:23:36.800><c> than</c><00:23:37.280><c> the</c>

00:23:37.840 --> 00:23:37.850 align:start position:0%
encapsulation is even stronger than the
 

00:23:37.850 --> 00:23:40.000 align:start position:0%
encapsulation is even stronger than the
powerful<00:23:38.510><c> reflection</c><00:23:39.230><c> capability</c><00:23:39.950><c> is</c>

00:23:40.000 --> 00:23:40.010 align:start position:0%
powerful reflection capability is
 

00:23:40.010 --> 00:23:41.590 align:start position:0%
powerful reflection capability is
traditionally<00:23:40.790><c> offered</c><00:23:41.090><c> by</c><00:23:41.240><c> the</c><00:23:41.270><c> Java</c>

00:23:41.590 --> 00:23:41.600 align:start position:0%
traditionally offered by the Java
 

00:23:41.600 --> 00:23:45.670 align:start position:0%
traditionally offered by the Java
platform<00:23:42.010><c> it's</c><00:23:43.010><c> up</c><00:23:43.250><c> to</c><00:23:43.610><c> the</c><00:23:43.790><c> module</c><00:23:44.030><c> author</c><00:23:44.680><c> to</c>

00:23:45.670 --> 00:23:45.680 align:start position:0%
platform it's up to the module author to
 

00:23:45.680 --> 00:23:48.580 align:start position:0%
platform it's up to the module author to
choose<00:23:46.070><c> strong</c><00:23:46.760><c> encapsulation</c><00:23:47.420><c> and</c><00:23:47.750><c> if</c><00:23:48.260><c> they</c>

00:23:48.580 --> 00:23:48.590 align:start position:0%
choose strong encapsulation and if they
 

00:23:48.590 --> 00:23:52.960 align:start position:0%
choose strong encapsulation and if they
do<00:23:49.000><c> via</c><00:23:50.000><c> a</c><00:23:50.360><c> plane</c><00:23:50.960><c> exports</c><00:23:51.590><c> as</c><00:23:51.830><c> we</c><00:23:52.460><c> do</c><00:23:52.580><c> in</c><00:23:52.730><c> Java</c>

00:23:52.960 --> 00:23:52.970 align:start position:0%
do via a plane exports as we do in Java
 

00:23:52.970 --> 00:23:55.780 align:start position:0%
do via a plane exports as we do in Java
base<00:23:53.240><c> there</c><00:23:54.230><c> is</c><00:23:54.380><c> no</c><00:23:54.620><c> way</c><00:23:54.830><c> for</c><00:23:54.860><c> another</c><00:23:55.550><c> module</c>

00:23:55.780 --> 00:23:55.790 align:start position:0%
base there is no way for another module
 

00:23:55.790 --> 00:23:59.950 align:start position:0%
base there is no way for another module
to<00:23:56.600><c> break</c><00:23:56.840><c> in</c><00:23:57.080><c> the</c><00:23:58.010><c> module</c><00:23:58.370><c> system</c><00:23:58.580><c> API</c><00:23:58.960><c> does</c>

00:23:59.950 --> 00:23:59.960 align:start position:0%
to break in the module system API does
 

00:23:59.960 --> 00:24:02.590 align:start position:0%
to break in the module system API does
not<00:24:00.260><c> allow</c><00:24:00.650><c> one</c><00:24:01.010><c> module</c><00:24:01.280><c> to</c><00:24:01.760><c> augment</c><00:24:02.360><c> the</c>

00:24:02.590 --> 00:24:02.600 align:start position:0%
not allow one module to augment the
 

00:24:02.600 --> 00:24:05.320 align:start position:0%
not allow one module to augment the
exports<00:24:03.230><c> of</c><00:24:03.380><c> another</c><00:24:04.040><c> module</c><00:24:04.280><c> reflectively</c><00:24:05.120><c> a</c>

00:24:05.320 --> 00:24:05.330 align:start position:0%
exports of another module reflectively a
 

00:24:05.330 --> 00:24:07.930 align:start position:0%
exports of another module reflectively a
module<00:24:05.660><c> can</c><00:24:05.840><c> only</c><00:24:06.020><c> X</c><00:24:06.260><c> can</c><00:24:06.680><c> only</c><00:24:06.830><c> augment</c><00:24:07.400><c> its</c>

00:24:07.930 --> 00:24:07.940 align:start position:0%
module can only X can only augment its
 

00:24:07.940 --> 00:24:11.440 align:start position:0%
module can only X can only augment its
own<00:24:08.180><c> exports</c><00:24:08.750><c> via</c><00:24:09.590><c> the</c><00:24:09.830><c> API</c><00:24:10.210><c> so</c><00:24:11.210><c> said</c>

00:24:11.440 --> 00:24:11.450 align:start position:0%
own exports via the API so said
 

00:24:11.450 --> 00:24:15.040 align:start position:0%
own exports via the API so said
accessible<00:24:11.990><c> behavior</c><00:24:12.580><c> now</c><00:24:13.580><c> depends</c><00:24:14.330><c> on</c><00:24:14.570><c> the</c>

00:24:15.040 --> 00:24:15.050 align:start position:0%
accessible behavior now depends on the
 

00:24:15.050 --> 00:24:18.220 align:start position:0%
accessible behavior now depends on the
module<00:24:15.260><c> authors</c><00:24:16.130><c> choice</c><00:24:16.700><c> of</c><00:24:16.970><c> how</c><00:24:17.720><c> a</c><00:24:17.750><c> package</c>

00:24:18.220 --> 00:24:18.230 align:start position:0%
module authors choice of how a package
 

00:24:18.230 --> 00:24:19.549 align:start position:0%
module authors choice of how a package
is<00:24:18.440><c> exported</c>

00:24:19.549 --> 00:24:19.559 align:start position:0%
is exported
 

00:24:19.559 --> 00:24:22.700 align:start position:0%
is exported
and<00:24:20.129><c> of</c><00:24:20.249><c> course</c><00:24:20.279><c> for</c><00:24:21.029><c> Java</c><00:24:21.240><c> security</c><00:24:21.710><c> public</c>

00:24:22.700 --> 00:24:22.710 align:start position:0%
and of course for Java security public
 

00:24:22.710 --> 00:24:25.009 align:start position:0%
and of course for Java security public
types<00:24:22.950><c> no</c><00:24:23.159><c> problem</c><00:24:23.580><c> public</c><00:24:24.360><c> methods</c><00:24:24.749><c> in</c><00:24:24.870><c> those</c>

00:24:25.009 --> 00:24:25.019 align:start position:0%
types no problem public methods in those
 

00:24:25.019 --> 00:24:27.019 align:start position:0%
types no problem public methods in those
public<00:24:25.409><c> types</c><00:24:25.679><c> no</c><00:24:26.070><c> problem</c><00:24:26.490><c> code</c><00:24:26.759><c> against</c>

00:24:27.019 --> 00:24:27.029 align:start position:0%
public types no problem code against
 

00:24:27.029 --> 00:24:30.259 align:start position:0%
public types no problem code against
them<00:24:27.269><c> but</c><00:24:27.779><c> private</c><00:24:28.259><c> things</c><00:24:28.529><c> inside</c><00:24:29.039><c> you</c><00:24:29.999><c> can't</c>

00:24:30.259 --> 00:24:30.269 align:start position:0%
them but private things inside you can't
 

00:24:30.269 --> 00:24:36.919 align:start position:0%
them but private things inside you can't
touch<00:24:30.480><c> them</c><00:24:34.519><c> there</c><00:24:35.519><c> is</c><00:24:35.610><c> a</c><00:24:35.639><c> question</c><00:24:35.840><c> there</c><00:24:36.840><c> are</c>

00:24:36.919 --> 00:24:36.929 align:start position:0%
touch them there is a question there are
 

00:24:36.929 --> 00:24:38.600 align:start position:0%
touch them there is a question there are
lots<00:24:37.049><c> of</c><00:24:37.200><c> questions</c><00:24:37.379><c> but</c><00:24:38.129><c> I</c><00:24:38.190><c> will</c><00:24:38.340><c> take</c><00:24:38.490><c> them</c>

00:24:38.600 --> 00:24:38.610 align:start position:0%
lots of questions but I will take them
 

00:24:38.610 --> 00:24:44.930 align:start position:0%
lots of questions but I will take them
at<00:24:38.700><c> the</c><00:24:38.759><c> end</c><00:24:38.879><c> thank</c><00:24:39.840><c> you</c><00:24:43.460><c> accessibility</c><00:24:44.460><c> used</c>

00:24:44.930 --> 00:24:44.940 align:start position:0%
at the end thank you accessibility used
 

00:24:44.940 --> 00:24:47.419 align:start position:0%
at the end thank you accessibility used
to<00:24:45.090><c> be</c><00:24:45.269><c> a</c><00:24:45.450><c> simple</c><00:24:45.929><c> check</c><00:24:46.249><c> basically</c><00:24:47.249><c> for</c>

00:24:47.419 --> 00:24:47.429 align:start position:0%
to be a simple check basically for
 

00:24:47.429 --> 00:24:49.489 align:start position:0%
to be a simple check basically for
public<00:24:47.820><c> or</c><00:24:47.970><c> same</c><00:24:48.210><c> package</c><00:24:48.629><c> at</c><00:24:48.929><c> compile</c><00:24:49.470><c> time</c>

00:24:49.489 --> 00:24:49.499 align:start position:0%
public or same package at compile time
 

00:24:49.499 --> 00:24:53.480 align:start position:0%
public or same package at compile time
and<00:24:49.799><c> around</c><00:24:49.950><c> time</c><00:24:50.809><c> in</c><00:24:51.809><c> jdk</c><00:24:52.320><c> 9</c><00:24:52.679><c> accessibility</c>

00:24:53.480 --> 00:24:53.490 align:start position:0%
and around time in jdk 9 accessibility
 

00:24:53.490 --> 00:24:55.100 align:start position:0%
and around time in jdk 9 accessibility
is<00:24:53.730><c> the</c><00:24:53.970><c> mechanism</c><00:24:54.240><c> for</c><00:24:54.629><c> strongly</c>

00:24:55.100 --> 00:24:55.110 align:start position:0%
is the mechanism for strongly
 

00:24:55.110 --> 00:24:57.639 align:start position:0%
is the mechanism for strongly
encapsulated<00:24:55.799><c> module</c><00:24:56.369><c> internals</c>

00:24:57.639 --> 00:24:57.649 align:start position:0%
encapsulated module internals
 

00:24:57.649 --> 00:24:59.989 align:start position:0%
encapsulated module internals
accessibility<00:24:58.649><c> relies</c><00:24:59.220><c> on</c><00:24:59.249><c> readability</c>

00:24:59.989 --> 00:24:59.999 align:start position:0%
accessibility relies on readability
 

00:24:59.999 --> 00:25:02.980 align:start position:0%
accessibility relies on readability
which<00:25:00.960><c> can</c><00:25:01.139><c> be</c><00:25:01.230><c> direct</c><00:25:01.590><c> or</c><00:25:01.769><c> implied</c><00:25:02.220><c> and</c>

00:25:02.980 --> 00:25:02.990 align:start position:0%
which can be direct or implied and
 

00:25:02.990 --> 00:25:06.109 align:start position:0%
which can be direct or implied and
accessibility<00:25:03.990><c> is</c><00:25:04.759><c> enforced</c><00:25:05.759><c> by</c><00:25:06.059><c> the</c>

00:25:06.109 --> 00:25:06.119 align:start position:0%
accessibility is enforced by the
 

00:25:06.119 --> 00:25:09.379 align:start position:0%
accessibility is enforced by the
compiler<00:25:06.600><c> VM</c><00:25:07.499><c> and</c><00:25:07.529><c> reflection</c><00:25:08.490><c> in</c><00:25:08.669><c> line</c><00:25:09.029><c> with</c>

00:25:09.379 --> 00:25:09.389 align:start position:0%
compiler VM and reflection in line with
 

00:25:09.389 --> 00:25:19.299 align:start position:0%
compiler VM and reflection in line with
the<00:25:09.539><c> module</c><00:25:09.869><c> declarations</c><00:25:15.649><c> part</c><00:25:16.649><c> 2</c>

00:25:19.299 --> 00:25:19.309 align:start position:0%
 
 

00:25:19.309 --> 00:25:22.820 align:start position:0%
 
everything<00:25:20.309><c> so</c><00:25:20.490><c> far</c><00:25:20.519><c> has</c><00:25:21.059><c> been</c><00:25:21.779><c> about</c><00:25:22.289><c> named</c>

00:25:22.820 --> 00:25:22.830 align:start position:0%
everything so far has been about named
 

00:25:22.830 --> 00:25:26.029 align:start position:0%
everything so far has been about named
modules<00:25:23.659><c> modules</c><00:25:24.659><c> explicitly</c><00:25:25.409><c> declared</c><00:25:25.799><c> with</c>

00:25:26.029 --> 00:25:26.039 align:start position:0%
modules modules explicitly declared with
 

00:25:26.039 --> 00:25:29.720 align:start position:0%
modules modules explicitly declared with
a<00:25:26.070><c> name</c><00:25:26.369><c> in</c><00:25:26.610><c> module</c><00:25:27.149><c> in</c><00:25:27.450><c> photo</c><00:25:27.720><c> java</c><00:25:28.730><c> what</c>

00:25:29.720 --> 00:25:29.730 align:start position:0%
a name in module in photo java what
 

00:25:29.730 --> 00:25:31.999 align:start position:0%
a name in module in photo java what
about<00:25:29.820><c> jar</c><00:25:30.240><c> files</c><00:25:30.509><c> on</c><00:25:30.779><c> the</c><00:25:30.899><c> classpath</c><00:25:31.379><c> that</c>

00:25:31.999 --> 00:25:32.009 align:start position:0%
about jar files on the classpath that
 

00:25:32.009 --> 00:25:34.369 align:start position:0%
about jar files on the classpath that
don't<00:25:32.249><c> have</c><00:25:32.549><c> a</c><00:25:32.879><c> module</c><00:25:33.240><c> in</c><00:25:33.539><c> photo</c><00:25:33.840><c> class</c><00:25:33.899><c> file</c>

00:25:34.369 --> 00:25:34.379 align:start position:0%
don't have a module in photo class file
 

00:25:34.379 --> 00:25:36.529 align:start position:0%
don't have a module in photo class file
they<00:25:35.190><c> seem</c><00:25:35.460><c> to</c><00:25:35.610><c> be</c><00:25:35.730><c> in</c><00:25:35.820><c> a</c><00:25:35.909><c> world</c><00:25:36.090><c> of</c><00:25:36.330><c> their</c><00:25:36.480><c> own</c>

00:25:36.529 --> 00:25:36.539 align:start position:0%
they seem to be in a world of their own
 

00:25:36.539 --> 00:25:41.299 align:start position:0%
they seem to be in a world of their own
to<00:25:37.999><c> keep</c><00:25:38.999><c> the</c><00:25:39.269><c> model</c><00:25:39.840><c> of</c><00:25:40.049><c> accessibility</c><00:25:40.860><c> and</c>

00:25:41.299 --> 00:25:41.309 align:start position:0%
to keep the model of accessibility and
 

00:25:41.309 --> 00:25:44.629 align:start position:0%
to keep the model of accessibility and
readability<00:25:41.940><c> consistence</c><00:25:42.809><c> we</c><00:25:43.679><c> introduce</c><00:25:44.340><c> the</c>

00:25:44.629 --> 00:25:44.639 align:start position:0%
readability consistence we introduce the
 

00:25:44.639 --> 00:25:48.859 align:start position:0%
readability consistence we introduce the
unnamed<00:25:45.389><c> module</c><00:25:46.139><c> all</c><00:25:46.879><c> classes</c><00:25:47.879><c> not</c><00:25:48.360><c> in</c><00:25:48.570><c> named</c>

00:25:48.859 --> 00:25:48.869 align:start position:0%
unnamed module all classes not in named
 

00:25:48.869 --> 00:25:51.950 align:start position:0%
unnamed module all classes not in named
modules<00:25:49.350><c> are</c><00:25:49.889><c> in</c><00:25:50.220><c> the</c><00:25:50.340><c> unnamed</c><00:25:50.730><c> module</c><00:25:51.119><c> it's</c>

00:25:51.950 --> 00:25:51.960 align:start position:0%
modules are in the unnamed module it's
 

00:25:51.960 --> 00:25:55.970 align:start position:0%
modules are in the unnamed module it's
as<00:25:52.169><c> if</c><00:25:52.200><c> pay</c><00:25:52.710><c> for</c><00:25:52.950><c> it</c><00:25:54.740><c> everything</c><00:25:55.740><c> on</c><00:25:55.860><c> the</c>

00:25:55.970 --> 00:25:55.980 align:start position:0%
as if pay for it everything on the
 

00:25:55.980 --> 00:25:59.259 align:start position:0%
as if pay for it everything on the
classpath<00:25:56.429><c> is</c><00:25:56.789><c> in</c><00:25:57.419><c> one</c><00:25:57.600><c> big</c><00:25:57.840><c> module</c><00:25:58.230><c> and</c>

00:25:59.259 --> 00:25:59.269 align:start position:0%
classpath is in one big module and
 

00:25:59.269 --> 00:26:02.180 align:start position:0%
classpath is in one big module and
because<00:26:00.269><c> it's</c><00:26:00.480><c> the</c><00:26:00.570><c> module</c><00:26:00.869><c> we</c><00:26:01.529><c> can</c><00:26:01.710><c> ask</c><00:26:01.860><c> two</c>

00:26:02.180 --> 00:26:02.190 align:start position:0%
because it's the module we can ask two
 

00:26:02.190 --> 00:26:04.789 align:start position:0%
because it's the module we can ask two
questions<00:26:02.509><c> what</c><00:26:03.509><c> does</c><00:26:03.659><c> it</c><00:26:03.779><c> read</c><00:26:04.019><c> and</c><00:26:04.350><c> what</c>

00:26:04.789 --> 00:26:04.799 align:start position:0%
questions what does it read and what
 

00:26:04.799 --> 00:26:10.629 align:start position:0%
questions what does it read and what
does<00:26:04.980><c> it</c><00:26:05.100><c> exports</c><00:26:08.029><c> what</c><00:26:09.029><c> it</c><00:26:09.149><c> reads</c><00:26:09.450><c> is</c><00:26:10.019><c> simple</c>

00:26:10.629 --> 00:26:10.639 align:start position:0%
does it exports what it reads is simple
 

00:26:10.639 --> 00:26:14.210 align:start position:0%
does it exports what it reads is simple
every<00:26:11.639><c> named</c><00:26:11.850><c> module</c><00:26:12.269><c> all</c><00:26:12.840><c> of</c><00:26:13.259><c> them</c><00:26:13.379><c> as</c><00:26:13.559><c> if</c><00:26:14.070><c> by</c>

00:26:14.210 --> 00:26:14.220 align:start position:0%
every named module all of them as if by
 

00:26:14.220 --> 00:26:17.919 align:start position:0%
every named module all of them as if by
magic<00:26:14.249><c> for</c><00:26:15.149><c> free</c><00:26:16.009><c> this</c><00:26:17.009><c> means</c><00:26:17.279><c> anything</c>

00:26:17.919 --> 00:26:17.929 align:start position:0%
magic for free this means anything
 

00:26:17.929 --> 00:26:20.600 align:start position:0%
magic for free this means anything
exported<00:26:18.929><c> by</c><00:26:18.960><c> a</c><00:26:19.139><c> named</c><00:26:19.499><c> module</c><00:26:19.950><c> can</c><00:26:20.580><c> be</c>

00:26:20.600 --> 00:26:20.610 align:start position:0%
exported by a named module can be
 

00:26:20.610 --> 00:26:23.239 align:start position:0%
exported by a named module can be
accessed<00:26:20.879><c> by</c><00:26:21.600><c> code</c><00:26:22.259><c> in</c><00:26:22.409><c> the</c><00:26:22.499><c> unnamed</c><00:26:22.860><c> module</c>

00:26:23.239 --> 00:26:23.249 align:start position:0%
accessed by code in the unnamed module
 

00:26:23.249 --> 00:26:26.480 align:start position:0%
accessed by code in the unnamed module
you<00:26:23.820><c> can</c><00:26:24.029><c> turn</c><00:26:24.269><c> a</c><00:26:24.330><c> jar</c><00:26:24.779><c> file</c><00:26:25.159><c> into</c><00:26:26.159><c> a</c><00:26:26.190><c> named</c>

00:26:26.480 --> 00:26:26.490 align:start position:0%
you can turn a jar file into a named
 

00:26:26.490 --> 00:26:28.759 align:start position:0%
you can turn a jar file into a named
module<00:26:26.909><c> by</c><00:26:27.480><c> adding</c><00:26:27.869><c> module</c><00:26:28.169><c> info</c><00:26:28.409><c> doc</c><00:26:28.500><c> class</c>

00:26:28.759 --> 00:26:28.769 align:start position:0%
module by adding module info doc class
 

00:26:28.769 --> 00:26:31.430 align:start position:0%
module by adding module info doc class
and<00:26:29.190><c> putting</c><00:26:29.909><c> the</c><00:26:30.000><c> jar</c><00:26:30.240><c> on</c><00:26:30.419><c> the</c><00:26:30.480><c> module</c><00:26:30.899><c> path</c>

00:26:31.430 --> 00:26:31.440 align:start position:0%
and putting the jar on the module path
 

00:26:31.440 --> 00:26:33.970 align:start position:0%
and putting the jar on the module path
when<00:26:32.159><c> named</c><00:26:32.429><c> modules</c><00:26:33.000><c> are</c><00:26:33.179><c> found</c>

00:26:33.970 --> 00:26:33.980 align:start position:0%
when named modules are found
 

00:26:33.980 --> 00:26:37.700 align:start position:0%
when named modules are found
jars<00:26:34.980><c> left</c><00:26:35.310><c> on</c><00:26:35.580><c> the</c><00:26:35.880><c> classpath</c><00:26:36.540><c> will</c><00:26:37.470><c> not</c>

00:26:37.700 --> 00:26:37.710 align:start position:0%
jars left on the classpath will not
 

00:26:37.710 --> 00:26:40.790 align:start position:0%
jars left on the classpath will not
realize<00:26:38.160><c> that</c><00:26:38.640><c> anything</c><00:26:38.940><c> happens</c><00:26:39.590><c> they</c><00:26:40.590><c> can</c>

00:26:40.790 --> 00:26:40.800 align:start position:0%
realize that anything happens they can
 

00:26:40.800 --> 00:26:43.220 align:start position:0%
realize that anything happens they can
still<00:26:41.040><c> read</c><00:26:41.820><c> those</c><00:26:42.060><c> named</c><00:26:42.360><c> modules</c><00:26:42.750><c> that's</c><00:26:43.110><c> a</c>

00:26:43.220 --> 00:26:43.230 align:start position:0%
still read those named modules that's a
 

00:26:43.230 --> 00:26:46.640 align:start position:0%
still read those named modules that's a
huge<00:26:43.500><c> help</c><00:26:43.740><c> for</c><00:26:43.830><c> migration</c><00:26:45.350><c> the</c><00:26:46.350><c> next</c>

00:26:46.640 --> 00:26:46.650 align:start position:0%
huge help for migration the next
 

00:26:46.650 --> 00:26:49.060 align:start position:0%
huge help for migration the next
question<00:26:47.040><c> is</c><00:26:47.220><c> what</c><00:26:47.760><c> the</c><00:26:47.880><c> unnamed</c><00:26:48.450><c> module</c>

00:26:49.060 --> 00:26:49.070 align:start position:0%
question is what the unnamed module
 

00:26:49.070 --> 00:26:52.280 align:start position:0%
question is what the unnamed module
exports<00:26:50.420><c> before</c><00:26:51.420><c> that</c><00:26:51.570><c> though</c><00:26:51.780><c> we</c><00:26:51.990><c> should</c><00:26:52.020><c> ask</c>

00:26:52.280 --> 00:26:52.290 align:start position:0%
exports before that though we should ask
 

00:26:52.290 --> 00:26:56.840 align:start position:0%
exports before that though we should ask
who<00:26:52.920><c> reads</c><00:26:53.250><c> the</c><00:26:54.090><c> unnamed</c><00:26:54.540><c> module</c><00:26:55.850><c> remember</c>

00:26:56.840 --> 00:26:56.850 align:start position:0%
who reads the unnamed module remember
 

00:26:56.850 --> 00:26:58.280 align:start position:0%
who reads the unnamed module remember
our<00:26:56.940><c> goal</c><00:26:57.180><c> in</c><00:26:57.360><c> the</c><00:26:57.420><c> module</c><00:26:57.690><c> system</c><00:26:57.870><c> is</c>

00:26:58.280 --> 00:26:58.290 align:start position:0%
our goal in the module system is
 

00:26:58.290 --> 00:27:00.680 align:start position:0%
our goal in the module system is
reliable<00:26:58.890><c> dependencies</c><00:26:59.550><c> we</c><00:27:00.270><c> believe</c><00:27:00.510><c> very</c>

00:27:00.680 --> 00:27:00.690 align:start position:0%
reliable dependencies we believe very
 

00:27:00.690 --> 00:27:03.650 align:start position:0%
reliable dependencies we believe very
strongly<00:27:01.170><c> that</c><00:27:01.350><c> named</c><00:27:01.860><c> modules</c><00:27:02.520><c> should</c><00:27:03.330><c> not</c>

00:27:03.650 --> 00:27:03.660 align:start position:0%
strongly that named modules should not
 

00:27:03.660 --> 00:27:07.150 align:start position:0%
strongly that named modules should not
read<00:27:04.380><c> the</c><00:27:04.740><c> unnamed</c><00:27:05.220><c> module</c><00:27:05.670><c> out</c><00:27:06.300><c> of</c><00:27:06.630><c> the</c><00:27:06.720><c> box</c>

00:27:07.150 --> 00:27:07.160 align:start position:0%
read the unnamed module out of the box
 

00:27:07.160 --> 00:27:09.800 align:start position:0%
read the unnamed module out of the box
it<00:27:08.160><c> would</c><00:27:08.340><c> make</c><00:27:08.490><c> a</c><00:27:08.550><c> mockery</c><00:27:08.910><c> of</c><00:27:09.210><c> reliable</c>

00:27:09.800 --> 00:27:09.810 align:start position:0%
it would make a mockery of reliable
 

00:27:09.810 --> 00:27:13.160 align:start position:0%
it would make a mockery of reliable
dependencies<00:27:10.500><c> to</c><00:27:11.190><c> let</c><00:27:11.370><c> named</c><00:27:11.730><c> modules</c><00:27:12.330><c> depend</c>

00:27:13.160 --> 00:27:13.170 align:start position:0%
dependencies to let named modules depend
 

00:27:13.170 --> 00:27:15.170 align:start position:0%
dependencies to let named modules depend
on<00:27:13.350><c> the</c><00:27:13.500><c> arbitrary</c><00:27:14.160><c> content</c><00:27:14.670><c> of</c><00:27:14.790><c> the</c>

00:27:15.170 --> 00:27:15.180 align:start position:0%
on the arbitrary content of the
 

00:27:15.180 --> 00:27:20.270 align:start position:0%
on the arbitrary content of the
classpath<00:27:16.760><c> so</c><00:27:17.760><c> you</c><00:27:18.360><c> cannot</c><00:27:18.780><c> write</c><00:27:19.280><c> requires</c>

00:27:20.270 --> 00:27:20.280 align:start position:0%
classpath so you cannot write requires
 

00:27:20.280 --> 00:27:22.940 align:start position:0%
classpath so you cannot write requires
unnamed<00:27:20.880><c> or</c><00:27:21.180><c> requires</c><00:27:21.570><c> classpath</c><00:27:22.200><c> in</c><00:27:22.470><c> module</c>

00:27:22.940 --> 00:27:22.950 align:start position:0%
unnamed or requires classpath in module
 

00:27:22.950 --> 00:27:26.090 align:start position:0%
unnamed or requires classpath in module
info<00:27:23.220><c> java</c><00:27:23.780><c> there</c><00:27:24.780><c> are</c><00:27:24.930><c> no</c><00:27:25.050><c> reads</c><00:27:25.350><c> edges</c><00:27:25.860><c> going</c>

00:27:26.090 --> 00:27:26.100 align:start position:0%
info java there are no reads edges going
 

00:27:26.100 --> 00:27:29.360 align:start position:0%
info java there are no reads edges going
out<00:27:26.250><c> to</c><00:27:27.180><c> the</c><00:27:27.300><c> unnamed</c><00:27:27.660><c> module</c><00:27:28.130><c> this</c><00:27:29.130><c> seems</c>

00:27:29.360 --> 00:27:29.370 align:start position:0%
out to the unnamed module this seems
 

00:27:29.370 --> 00:27:31.790 align:start position:0%
out to the unnamed module this seems
like<00:27:29.430><c> a</c><00:27:29.520><c> huge</c><00:27:29.880><c> hindrance</c><00:27:30.600><c> for</c><00:27:31.230><c> migration</c>

00:27:31.790 --> 00:27:31.800 align:start position:0%
like a huge hindrance for migration
 

00:27:31.800 --> 00:27:33.980 align:start position:0%
like a huge hindrance for migration
because<00:27:32.370><c> any</c><00:27:32.520><c> jar</c><00:27:32.820><c> you</c><00:27:33.090><c> turn</c><00:27:33.360><c> into</c><00:27:33.600><c> a</c><00:27:33.690><c> named</c>

00:27:33.980 --> 00:27:33.990 align:start position:0%
because any jar you turn into a named
 

00:27:33.990 --> 00:27:37.220 align:start position:0%
because any jar you turn into a named
module<00:27:34.410><c> can't</c><00:27:35.040><c> access</c><00:27:35.880><c> the</c><00:27:36.090><c> jars</c><00:27:36.360><c> left</c><00:27:36.780><c> on</c><00:27:37.080><c> the</c>

00:27:37.220 --> 00:27:37.230 align:start position:0%
module can't access the jars left on the
 

00:27:37.230 --> 00:27:43.520 align:start position:0%
module can't access the jars left on the
classpath<00:27:40.400><c> the</c><00:27:41.400><c> answer</c><00:27:41.880><c> is</c><00:27:42.530><c> automatic</c>

00:27:43.520 --> 00:27:43.530 align:start position:0%
classpath the answer is automatic
 

00:27:43.530 --> 00:27:47.570 align:start position:0%
classpath the answer is automatic
modules<00:27:44.300><c> you</c><00:27:45.300><c> can</c><00:27:45.510><c> take</c><00:27:45.690><c> a</c><00:27:45.720><c> jar</c><00:27:46.050><c> say</c><00:27:46.800><c> guava</c><00:27:47.250><c> yah</c>

00:27:47.570 --> 00:27:47.580 align:start position:0%
modules you can take a jar say guava yah
 

00:27:47.580 --> 00:27:50.360 align:start position:0%
modules you can take a jar say guava yah
and<00:27:47.820><c> move</c><00:27:48.150><c> it</c><00:27:48.360><c> from</c><00:27:49.020><c> the</c><00:27:49.170><c> classpath</c><00:27:49.650><c> to</c><00:27:50.250><c> the</c>

00:27:50.360 --> 00:27:50.370 align:start position:0%
and move it from the classpath to the
 

00:27:50.370 --> 00:27:53.930 align:start position:0%
and move it from the classpath to the
module<00:27:50.490><c> path</c><00:27:51.050><c> that</c><00:27:52.050><c> turns</c><00:27:52.530><c> the</c><00:27:52.950><c> jar</c><00:27:53.220><c> into</c><00:27:53.580><c> an</c>

00:27:53.930 --> 00:27:53.940 align:start position:0%
module path that turns the jar into an
 

00:27:53.940 --> 00:27:56.390 align:start position:0%
module path that turns the jar into an
automatic<00:27:54.690><c> module</c><00:27:55.020><c> that's</c><00:27:55.560><c> all</c><00:27:55.800><c> you</c><00:27:56.100><c> have</c><00:27:56.250><c> to</c>

00:27:56.390 --> 00:27:56.400 align:start position:0%
automatic module that's all you have to
 

00:27:56.400 --> 00:28:00.460 align:start position:0%
automatic module that's all you have to
do<00:27:56.520><c> an</c><00:27:57.410><c> automatic</c><00:27:58.410><c> module</c><00:27:58.770><c> is</c><00:27:58.950><c> a</c><00:27:59.010><c> named</c><00:27:59.460><c> module</c>

00:28:00.460 --> 00:28:00.470 align:start position:0%
do an automatic module is a named module
 

00:28:00.470 --> 00:28:03.380 align:start position:0%
do an automatic module is a named module
declared<00:28:01.470><c> implicitly</c><00:28:02.220><c> rather</c><00:28:03.000><c> than</c>

00:28:03.380 --> 00:28:03.390 align:start position:0%
declared implicitly rather than
 

00:28:03.390 --> 00:28:06.560 align:start position:0%
declared implicitly rather than
explicitly<00:28:04.230><c> its</c><00:28:05.100><c> name</c><00:28:05.370><c> is</c><00:28:05.580><c> derived</c><00:28:05.910><c> from</c><00:28:06.240><c> its</c>

00:28:06.560 --> 00:28:06.570 align:start position:0%
explicitly its name is derived from its
 

00:28:06.570 --> 00:28:09.200 align:start position:0%
explicitly its name is derived from its
jar<00:28:06.840><c> file</c><00:28:07.110><c> name</c><00:28:07.380><c> in</c><00:28:07.650><c> obvious</c><00:28:08.220><c> ways</c><00:28:08.250><c> placing</c>

00:28:09.200 --> 00:28:09.210 align:start position:0%
jar file name in obvious ways placing
 

00:28:09.210 --> 00:28:11.480 align:start position:0%
jar file name in obvious ways placing
guava<00:28:09.540><c> jar</c><00:28:09.900><c> on</c><00:28:10.050><c> the</c><00:28:10.080><c> module</c><00:28:10.320><c> path</c><00:28:10.680><c> gives</c><00:28:11.340><c> an</c>

00:28:11.480 --> 00:28:11.490 align:start position:0%
guava jar on the module path gives an
 

00:28:11.490 --> 00:28:14.390 align:start position:0%
guava jar on the module path gives an
automatic<00:28:11.970><c> module</c><00:28:12.240><c> called</c><00:28:12.480><c> guava</c><00:28:12.740><c> as</c><00:28:13.740><c> before</c>

00:28:14.390 --> 00:28:14.400 align:start position:0%
automatic module called guava as before
 

00:28:14.400 --> 00:28:16.640 align:start position:0%
automatic module called guava as before
whenever<00:28:15.300><c> you</c><00:28:15.450><c> see</c><00:28:15.660><c> a</c><00:28:15.690><c> module</c><00:28:16.080><c> you</c><00:28:16.350><c> should</c><00:28:16.380><c> ask</c>

00:28:16.640 --> 00:28:16.650 align:start position:0%
whenever you see a module you should ask
 

00:28:16.650 --> 00:28:18.110 align:start position:0%
whenever you see a module you should ask
what<00:28:16.920><c> does</c><00:28:17.220><c> it</c><00:28:17.340><c> read</c><00:28:17.520><c> and</c><00:28:17.820><c> what</c><00:28:17.880><c> does</c><00:28:18.090><c> it</c>

00:28:18.110 --> 00:28:18.120 align:start position:0%
what does it read and what does it
 

00:28:18.120 --> 00:28:23.690 align:start position:0%
what does it read and what does it
exports<00:28:21.140><c> the</c><00:28:22.140><c> automatic</c><00:28:22.680><c> module</c><00:28:22.950><c> guava</c><00:28:23.250><c> reads</c>

00:28:23.690 --> 00:28:23.700 align:start position:0%
exports the automatic module guava reads
 

00:28:23.700 --> 00:28:26.660 align:start position:0%
exports the automatic module guava reads
everything<00:28:24.210><c> in</c><00:28:24.450><c> the</c><00:28:24.540><c> JDK</c><00:28:24.960><c> and</c><00:28:25.200><c> the</c><00:28:26.100><c> unnamed</c>

00:28:26.660 --> 00:28:26.670 align:start position:0%
everything in the JDK and the unnamed
 

00:28:26.670 --> 00:28:29.660 align:start position:0%
everything in the JDK and the unnamed
module<00:28:27.150><c> it's</c><00:28:27.930><c> as</c><00:28:28.140><c> if</c><00:28:28.470><c> it</c><00:28:28.650><c> says</c><00:28:28.920><c> requires</c>

00:28:29.660 --> 00:28:29.670 align:start position:0%
module it's as if it says requires
 

00:28:29.670 --> 00:28:32.720 align:start position:0%
module it's as if it says requires
unnamed<00:28:30.320><c> now</c><00:28:31.320><c> the</c><00:28:31.380><c> hindrance</c><00:28:32.040><c> to</c><00:28:32.220><c> migration</c>

00:28:32.720 --> 00:28:32.730 align:start position:0%
unnamed now the hindrance to migration
 

00:28:32.730 --> 00:28:35.690 align:start position:0%
unnamed now the hindrance to migration
is<00:28:33.150><c> gone</c><00:28:33.480><c> you</c><00:28:34.140><c> can</c><00:28:34.350><c> turn</c><00:28:34.590><c> a</c><00:28:34.650><c> jar</c><00:28:35.100><c> into</c><00:28:35.580><c> an</c>

00:28:35.690 --> 00:28:35.700 align:start position:0%
is gone you can turn a jar into an
 

00:28:35.700 --> 00:28:38.510 align:start position:0%
is gone you can turn a jar into an
automatic<00:28:36.360><c> module</c><00:28:36.720><c> and</c><00:28:36.960><c> it</c><00:28:37.830><c> can</c><00:28:38.040><c> still</c><00:28:38.340><c> access</c>

00:28:38.510 --> 00:28:38.520 align:start position:0%
automatic module and it can still access
 

00:28:38.520 --> 00:28:42.380 align:start position:0%
automatic module and it can still access
the<00:28:38.820><c> jars</c><00:28:39.180><c> left</c><00:28:39.480><c> on</c><00:28:39.870><c> the</c><00:28:40.260><c> classpath</c><00:28:41.090><c> we</c><00:28:42.090><c> asked</c>

00:28:42.380 --> 00:28:42.390 align:start position:0%
the jars left on the classpath we asked
 

00:28:42.390 --> 00:28:44.810 align:start position:0%
the jars left on the classpath we asked
earlier<00:28:42.660><c> what</c><00:28:43.230><c> the</c><00:28:43.350><c> unnamed</c><00:28:43.740><c> module</c><00:28:44.160><c> exports</c>

00:28:44.810 --> 00:28:44.820 align:start position:0%
earlier what the unnamed module exports
 

00:28:44.820 --> 00:28:47.180 align:start position:0%
earlier what the unnamed module exports
the<00:28:45.540><c> answer</c><00:28:45.870><c> is</c><00:28:45.900><c> all</c><00:28:46.200><c> its</c><00:28:46.500><c> packages</c>

00:28:47.180 --> 00:28:47.190 align:start position:0%
the answer is all its packages
 

00:28:47.190 --> 00:28:49.610 align:start position:0%
the answer is all its packages
in<00:28:47.340><c> ju</c><00:28:47.670><c> najar</c><00:28:48.180><c> and</c><00:28:48.450><c> glass</c><00:28:48.690><c> fish</c><00:28:48.930><c> jar</c><00:28:49.380><c> and</c>

00:28:49.610 --> 00:28:49.620 align:start position:0%
in ju najar and glass fish jar and
 

00:28:49.620 --> 00:28:52.340 align:start position:0%
in ju najar and glass fish jar and
hibernate<00:28:50.100><c> jar</c><00:28:50.490><c> precisely</c><00:28:51.240><c> to</c><00:28:51.540><c> help</c><00:28:51.750><c> code</c><00:28:52.050><c> in</c>

00:28:52.340 --> 00:28:52.350 align:start position:0%
hibernate jar precisely to help code in
 

00:28:52.350 --> 00:28:55.310 align:start position:0%
hibernate jar precisely to help code in
automatic<00:28:52.890><c> modules</c><00:28:53.310><c> which</c><00:28:53.850><c> read</c><00:28:54.150><c> the</c><00:28:54.990><c> unnamed</c>

00:28:55.310 --> 00:28:55.320 align:start position:0%
automatic modules which read the unnamed
 

00:28:55.320 --> 00:28:57.260 align:start position:0%
automatic modules which read the unnamed
module<00:28:55.680><c> and</c><00:28:55.860><c> it's</c><00:28:56.310><c> a</c><00:28:56.460><c> it's</c><00:28:56.730><c> a</c><00:28:56.850><c> full</c><00:28:57.030><c> power</c>

00:28:57.260 --> 00:28:57.270 align:start position:0%
module and it's a it's a full power
 

00:28:57.270 --> 00:29:02.710 align:start position:0%
module and it's a it's a full power
export<00:28:57.840><c> as</c><00:28:58.470><c> well</c><00:28:58.710><c> you</c><00:28:58.980><c> can</c><00:28:59.130><c> reflect</c><00:28:59.340><c> back</c><00:28:59.670><c> in</c>

00:29:02.710 --> 00:29:02.720 align:start position:0%
 
 

00:29:02.720 --> 00:29:05.540 align:start position:0%
 
because<00:29:03.720><c> an</c><00:29:03.930><c> automatic</c><00:29:04.440><c> module</c><00:29:04.800><c> is</c><00:29:05.070><c> a</c><00:29:05.100><c> real</c>

00:29:05.540 --> 00:29:05.550 align:start position:0%
because an automatic module is a real
 

00:29:05.550 --> 00:29:09.020 align:start position:0%
because an automatic module is a real
named<00:29:06.210><c> module</c><00:29:06.920><c> another</c><00:29:07.920><c> named</c><00:29:08.220><c> module</c><00:29:08.670><c> can</c>

00:29:09.020 --> 00:29:09.030 align:start position:0%
named module another named module can
 

00:29:09.030 --> 00:29:12.410 align:start position:0%
named module another named module can
require<00:29:09.420><c> it</c><00:29:10.160><c> suppose</c><00:29:11.160><c> the</c><00:29:11.490><c> my</c><00:29:11.730><c> app</c><00:29:11.910><c> module</c>

00:29:12.410 --> 00:29:12.420 align:start position:0%
require it suppose the my app module
 

00:29:12.420 --> 00:29:15.590 align:start position:0%
require it suppose the my app module
says<00:29:12.780><c> requires</c><00:29:13.290><c> guava</c><00:29:14.030><c> so</c><00:29:15.030><c> there's</c><00:29:15.210><c> a</c><00:29:15.270><c> reads</c>

00:29:15.590 --> 00:29:15.600 align:start position:0%
says requires guava so there's a reads
 

00:29:15.600 --> 00:29:19.460 align:start position:0%
says requires guava so there's a reads
edge<00:29:15.900><c> then</c><00:29:16.440><c> from</c><00:29:16.860><c> my</c><00:29:16.920><c> app</c><00:29:17.220><c> to</c><00:29:17.700><c> guava</c><00:29:18.290><c> what</c><00:29:19.290><c> does</c>

00:29:19.460 --> 00:29:19.470 align:start position:0%
edge then from my app to guava what does
 

00:29:19.470 --> 00:29:22.370 align:start position:0%
edge then from my app to guava what does
an<00:29:19.590><c> automatic</c><00:29:20.160><c> module</c><00:29:20.550><c> like</c><00:29:20.880><c> guava</c><00:29:21.380><c> exports</c>

00:29:22.370 --> 00:29:22.380 align:start position:0%
an automatic module like guava exports
 

00:29:22.380 --> 00:29:24.650 align:start position:0%
an automatic module like guava exports
that's<00:29:23.040><c> easy</c><00:29:23.280><c> all</c><00:29:23.790><c> of</c><00:29:24.090><c> its</c><00:29:24.210><c> packages</c>

00:29:24.650 --> 00:29:24.660 align:start position:0%
that's easy all of its packages
 

00:29:24.660 --> 00:29:27.410 align:start position:0%
that's easy all of its packages
including<00:29:25.110><c> for</c><00:29:25.350><c> reflection</c><00:29:25.800><c> so</c><00:29:26.400><c> my</c><00:29:26.940><c> app</c><00:29:27.120><c> can</c>

00:29:27.410 --> 00:29:27.420 align:start position:0%
including for reflection so my app can
 

00:29:27.420 --> 00:29:30.560 align:start position:0%
including for reflection so my app can
access<00:29:27.870><c> all</c><00:29:28.620><c> of</c><00:29:28.680><c> the</c><00:29:29.070><c> public</c><00:29:29.430><c> guava</c><00:29:29.970><c> types</c><00:29:30.270><c> and</c>

00:29:30.560 --> 00:29:30.570 align:start position:0%
access all of the public guava types and
 

00:29:30.570 --> 00:29:34.790 align:start position:0%
access all of the public guava types and
reflect<00:29:30.900><c> over</c><00:29:31.200><c> it</c><00:29:31.320><c> no</c><00:29:31.920><c> problem</c><00:29:32.750><c> my</c><00:29:33.750><c> app</c><00:29:33.930><c> could</c>

00:29:34.790 --> 00:29:34.800 align:start position:0%
reflect over it no problem my app could
 

00:29:34.800 --> 00:29:39.410 align:start position:0%
reflect over it no problem my app could
even<00:29:35.070><c> say</c><00:29:36.080><c> requires</c><00:29:37.080><c> transitive</c><00:29:38.070><c> guava</c><00:29:38.640><c> to</c>

00:29:39.410 --> 00:29:39.420 align:start position:0%
even say requires transitive guava to
 

00:29:39.420 --> 00:29:42.260 align:start position:0%
even say requires transitive guava to
transmit<00:29:39.990><c> its</c><00:29:40.230><c> dependency</c><00:29:40.980><c> on</c><00:29:41.010><c> guava</c><00:29:41.370><c> up</c><00:29:41.790><c> to</c>

00:29:42.260 --> 00:29:42.270 align:start position:0%
transmit its dependency on guava up to
 

00:29:42.270 --> 00:29:44.570 align:start position:0%
transmit its dependency on guava up to
its<00:29:42.450><c> own</c><00:29:42.660><c> consumers</c><00:29:43.320><c> so</c><00:29:43.860><c> that</c><00:29:43.890><c> anyone</c><00:29:44.220><c> who</c>

00:29:44.570 --> 00:29:44.580 align:start position:0%
its own consumers so that anyone who
 

00:29:44.580 --> 00:29:48.310 align:start position:0%
its own consumers so that anyone who
reads<00:29:44.970><c> my</c><00:29:45.300><c> app</c><00:29:45.540><c> would</c><00:29:46.290><c> read</c><00:29:46.530><c> Wafaa</c><00:29:47.040><c> for</c><00:29:47.460><c> free</c>

00:29:48.310 --> 00:29:48.320 align:start position:0%
reads my app would read Wafaa for free
 

00:29:48.320 --> 00:29:52.180 align:start position:0%
reads my app would read Wafaa for free
even<00:29:49.320><c> though</c><00:29:49.410><c> guava</c><00:29:49.680><c> is</c><00:29:50.010><c> an</c><00:29:50.310><c> automatic</c><00:29:50.790><c> module</c>

00:29:52.180 --> 00:29:52.190 align:start position:0%
even though guava is an automatic module
 

00:29:52.190 --> 00:29:56.330 align:start position:0%
even though guava is an automatic module
so<00:29:53.190><c> by</c><00:29:53.850><c> moving</c><00:29:54.090><c> a</c><00:29:54.390><c> jar</c><00:29:54.690><c> from</c><00:29:55.080><c> the</c><00:29:55.260><c> classpath</c><00:29:55.830><c> to</c>

00:29:56.330 --> 00:29:56.340 align:start position:0%
so by moving a jar from the classpath to
 

00:29:56.340 --> 00:29:58.550 align:start position:0%
so by moving a jar from the classpath to
the<00:29:56.460><c> module</c><00:29:56.580><c> path</c><00:29:57.000><c> you</c><00:29:57.840><c> get</c><00:29:58.080><c> an</c><00:29:58.260><c> automatic</c>

00:29:58.550 --> 00:29:58.560 align:start position:0%
the module path you get an automatic
 

00:29:58.560 --> 00:30:00.920 align:start position:0%
the module path you get an automatic
module<00:29:59.190><c> that</c><00:29:59.400><c> lets</c><00:29:59.610><c> you</c><00:29:59.790><c> start</c><00:30:00.150><c> building</c><00:30:00.840><c> up</c>

00:30:00.920 --> 00:30:00.930 align:start position:0%
module that lets you start building up
 

00:30:00.930 --> 00:30:04.310 align:start position:0%
module that lets you start building up
your<00:30:01.290><c> own</c><00:30:01.530><c> graph</c><00:30:02.130><c> of</c><00:30:02.430><c> modules</c><00:30:03.020><c> it's</c><00:30:04.020><c> not</c>

00:30:04.310 --> 00:30:04.320 align:start position:0%
your own graph of modules it's not
 

00:30:04.320 --> 00:30:06.710 align:start position:0%
your own graph of modules it's not
necessary<00:30:05.010><c> to</c><00:30:05.100><c> wait</c><00:30:05.430><c> for</c><00:30:05.700><c> every</c><00:30:06.150><c> jar</c><00:30:06.450><c> on</c><00:30:06.660><c> the</c>

00:30:06.710 --> 00:30:06.720 align:start position:0%
necessary to wait for every jar on the
 

00:30:06.720 --> 00:30:09.560 align:start position:0%
necessary to wait for every jar on the
classpath<00:30:07.410><c> to</c><00:30:08.010><c> be</c><00:30:08.160><c> modularized</c><00:30:08.850><c> by</c><00:30:09.240><c> its</c>

00:30:09.560 --> 00:30:09.570 align:start position:0%
classpath to be modularized by its
 

00:30:09.570 --> 00:30:12.530 align:start position:0%
classpath to be modularized by its
author<00:30:10.400><c> before</c><00:30:11.400><c> you</c><00:30:11.550><c> start</c><00:30:11.610><c> developing</c><00:30:12.060><c> your</c>

00:30:12.530 --> 00:30:12.540 align:start position:0%
author before you start developing your
 

00:30:12.540 --> 00:30:19.280 align:start position:0%
author before you start developing your
own<00:30:12.600><c> modules</c><00:30:13.140><c> that</c><00:30:13.500><c> require</c><00:30:14.160><c> it</c><00:30:18.080><c> so</c><00:30:19.080><c> there</c><00:30:19.260><c> are</c>

00:30:19.280 --> 00:30:19.290 align:start position:0%
own modules that require it so there are
 

00:30:19.290 --> 00:30:22.160 align:start position:0%
own modules that require it so there are
three<00:30:19.530><c> kinds</c><00:30:19.680><c> of</c><00:30:19.890><c> modules</c><00:30:20.870><c> explicit</c><00:30:21.870><c> named</c>

00:30:22.160 --> 00:30:22.170 align:start position:0%
three kinds of modules explicit named
 

00:30:22.170 --> 00:30:25.970 align:start position:0%
three kinds of modules explicit named
modules<00:30:22.680><c> like</c><00:30:23.190><c> java</c><00:30:23.490><c> sequel</c><00:30:24.680><c> automatic</c><00:30:25.680><c> named</c>

00:30:25.970 --> 00:30:25.980 align:start position:0%
modules like java sequel automatic named
 

00:30:25.980 --> 00:30:29.270 align:start position:0%
modules like java sequel automatic named
modules<00:30:26.520><c> like</c><00:30:27.360><c> guava</c><00:30:27.600><c> and</c><00:30:27.960><c> the</c><00:30:28.740><c> unnamed</c>

00:30:29.270 --> 00:30:29.280 align:start position:0%
modules like guava and the unnamed
 

00:30:29.280 --> 00:30:32.090 align:start position:0%
modules like guava and the unnamed
module<00:30:29.700><c> aka</c><00:30:30.270><c> the</c><00:30:30.630><c> classpath</c><00:30:31.110><c> and</c><00:30:31.470><c> the</c><00:30:31.920><c> key</c>

00:30:32.090 --> 00:30:32.100 align:start position:0%
module aka the classpath and the key
 

00:30:32.100 --> 00:30:33.800 align:start position:0%
module aka the classpath and the key
point<00:30:32.370><c> is</c><00:30:32.550><c> there</c><00:30:32.940><c> is</c><00:30:33.060><c> lots</c><00:30:33.270><c> of</c><00:30:33.420><c> readability</c>

00:30:33.800 --> 00:30:33.810 align:start position:0%
point is there is lots of readability
 

00:30:33.810 --> 00:30:36.770 align:start position:0%
point is there is lots of readability
for<00:30:34.590><c> free</c><00:30:34.920><c> to</c><00:30:35.610><c> help</c><00:30:35.850><c> with</c><00:30:36.030><c> migration</c><00:30:36.420><c> and</c>

00:30:36.770 --> 00:30:36.780 align:start position:0%
for free to help with migration and
 

00:30:36.780 --> 00:30:39.200 align:start position:0%
for free to help with migration and
since<00:30:37.260><c> the</c><00:30:37.380><c> readability</c><00:30:38.000><c> underpins</c><00:30:39.000><c> the</c>

00:30:39.200 --> 00:30:39.210 align:start position:0%
since the readability underpins the
 

00:30:39.210 --> 00:30:40.790 align:start position:0%
since the readability underpins the
accessibility<00:30:40.020><c> you</c><00:30:40.170><c> then</c><00:30:40.350><c> get</c><00:30:40.500><c> a</c><00:30:40.560><c> lot</c><00:30:40.770><c> of</c>

00:30:40.790 --> 00:30:40.800 align:start position:0%
accessibility you then get a lot of
 

00:30:40.800 --> 00:30:47.260 align:start position:0%
accessibility you then get a lot of
accessibility<00:30:41.400><c> as</c><00:30:41.820><c> you</c><00:30:42.270><c> had</c><00:30:42.480><c> on</c><00:30:42.690><c> jelly</c><00:30:42.990><c> aids</c>

00:30:47.260 --> 00:30:47.270 align:start position:0%
 
 

00:30:47.270 --> 00:30:52.150 align:start position:0%
 
loaders<00:30:48.270><c> and</c><00:30:48.510><c> layers</c>

00:30:52.150 --> 00:30:52.160 align:start position:0%
 
 

00:30:52.160 --> 00:30:55.420 align:start position:0%
 
I<00:30:52.630><c> said</c><00:30:53.630><c> before</c><00:30:53.990><c> that</c><00:30:54.230><c> strong</c><00:30:54.740><c> encapsulation</c>

00:30:55.420 --> 00:30:55.430 align:start position:0%
I said before that strong encapsulation
 

00:30:55.430 --> 00:30:58.510 align:start position:0%
I said before that strong encapsulation
is<00:30:55.730><c> independent</c><00:30:56.570><c> of</c><00:30:56.720><c> class</c><00:30:57.050><c> loaders</c><00:30:57.520><c> this</c>

00:30:58.510 --> 00:30:58.520 align:start position:0%
is independent of class loaders this
 

00:30:58.520 --> 00:31:00.790 align:start position:0%
is independent of class loaders this
means<00:30:58.790><c> that</c><00:30:58.910><c> the</c><00:30:59.060><c> model</c><00:30:59.480><c> of</c><00:30:59.660><c> class</c><00:31:00.050><c> loading</c><00:31:00.440><c> in</c>

00:31:00.790 --> 00:31:00.800 align:start position:0%
means that the model of class loading in
 

00:31:00.800 --> 00:31:04.930 align:start position:0%
means that the model of class loading in
jdk<00:31:01.190><c> 9</c><00:31:02.260><c> the</c><00:31:03.260><c> model</c><00:31:03.590><c> of</c><00:31:03.770><c> class</c><00:31:04.010><c> loading</c><00:31:04.340><c> in</c><00:31:04.640><c> jdk</c>

00:31:04.930 --> 00:31:04.940 align:start position:0%
jdk 9 the model of class loading in jdk
 

00:31:04.940 --> 00:31:08.650 align:start position:0%
jdk 9 the model of class loading in jdk
9<00:31:05.300><c> is</c><00:31:05.680><c> unchanged</c><00:31:06.680><c> the</c><00:31:07.550><c> mechanism</c><00:31:08.180><c> of</c><00:31:08.300><c> loader</c>

00:31:08.650 --> 00:31:08.660 align:start position:0%
9 is unchanged the mechanism of loader
 

00:31:08.660 --> 00:31:10.330 align:start position:0%
9 is unchanged the mechanism of loader
constraints<00:31:09.440><c> for</c><00:31:09.740><c> those</c><00:31:09.860><c> of</c><00:31:09.980><c> you</c><00:31:10.010><c> who</c><00:31:10.250><c> have</c>

00:31:10.330 --> 00:31:10.340 align:start position:0%
constraints for those of you who have
 

00:31:10.340 --> 00:31:12.550 align:start position:0%
constraints for those of you who have
been<00:31:10.430><c> reading</c><00:31:10.730><c> the</c><00:31:10.820><c> vm</c><00:31:11.030><c> spec</c><00:31:11.300><c> is</c><00:31:11.560><c> unchanged</c>

00:31:12.550 --> 00:31:12.560 align:start position:0%
been reading the vm spec is unchanged
 

00:31:12.560 --> 00:31:15.090 align:start position:0%
been reading the vm spec is unchanged
the<00:31:13.160><c> notion</c><00:31:13.340><c> of</c><00:31:13.550><c> runtime</c><00:31:13.970><c> packages</c><00:31:14.510><c> is</c>

00:31:15.090 --> 00:31:15.100 align:start position:0%
the notion of runtime packages is
 

00:31:15.100 --> 00:31:18.460 align:start position:0%
the notion of runtime packages is
unchanged<00:31:16.100><c> the</c><00:31:16.730><c> java.lang</c><00:31:17.180><c> class</c><00:31:17.660><c> loader</c><00:31:18.020><c> api</c>

00:31:18.460 --> 00:31:18.470 align:start position:0%
unchanged the java.lang class loader api
 

00:31:18.470 --> 00:31:22.060 align:start position:0%
unchanged the java.lang class loader api
is<00:31:18.590><c> essentially</c><00:31:19.310><c> unchanged</c><00:31:20.740><c> class</c><00:31:21.740><c> loading</c>

00:31:22.060 --> 00:31:22.070 align:start position:0%
is essentially unchanged class loading
 

00:31:22.070 --> 00:31:27.790 align:start position:0%
is essentially unchanged class loading
doesn't<00:31:22.610><c> change</c><00:31:22.880><c> in</c><00:31:23.210><c> jdk</c><00:31:23.480><c> 9</c><00:31:25.240><c> in</c><00:31:26.240><c> addition</c><00:31:26.800><c> the</c>

00:31:27.790 --> 00:31:27.800 align:start position:0%
doesn't change in jdk 9 in addition the
 

00:31:27.800 --> 00:31:30.160 align:start position:0%
doesn't change in jdk 9 in addition the
actual<00:31:28.280><c> class</c><00:31:28.730><c> loaders</c><00:31:29.240><c> the</c><00:31:29.390><c> actual</c><00:31:29.600><c> objects</c>

00:31:30.160 --> 00:31:30.170 align:start position:0%
actual class loaders the actual objects
 

00:31:30.170 --> 00:31:33.910 align:start position:0%
actual class loaders the actual objects
in<00:31:30.350><c> jdk</c><00:31:30.710><c> 9</c><00:31:31.040><c> are</c><00:31:31.900><c> the</c><00:31:32.900><c> same</c><00:31:33.080><c> as</c><00:31:33.260><c> in</c><00:31:33.350><c> jdk</c><00:31:33.620><c> aids</c>

00:31:33.910 --> 00:31:33.920 align:start position:0%
in jdk 9 are the same as in jdk aids
 

00:31:33.920 --> 00:31:37.120 align:start position:0%
in jdk 9 are the same as in jdk aids
there<00:31:34.520><c> is</c><00:31:34.670><c> the</c><00:31:34.790><c> bootstrap</c><00:31:35.300><c> loader</c><00:31:35.890><c> there</c><00:31:36.890><c> is</c>

00:31:37.120 --> 00:31:37.130 align:start position:0%
there is the bootstrap loader there is
 

00:31:37.130 --> 00:31:39.190 align:start position:0%
there is the bootstrap loader there is
the<00:31:37.520><c> platform</c><00:31:37.850><c> loader</c><00:31:38.390><c> used</c><00:31:38.840><c> to</c><00:31:38.930><c> be</c><00:31:39.020><c> called</c>

00:31:39.190 --> 00:31:39.200 align:start position:0%
the platform loader used to be called
 

00:31:39.200 --> 00:31:41.320 align:start position:0%
the platform loader used to be called
the<00:31:39.380><c> extension</c><00:31:39.890><c> loader</c><00:31:40.070><c> too</c><00:31:40.520><c> confusing</c><00:31:40.700><c> call</c>

00:31:41.320 --> 00:31:41.330 align:start position:0%
the extension loader too confusing call
 

00:31:41.330 --> 00:31:43.300 align:start position:0%
the extension loader too confusing call
it<00:31:41.450><c> the</c><00:31:41.540><c> platform</c><00:31:41.930><c> loader</c><00:31:42.110><c> and</c><00:31:42.350><c> then</c><00:31:43.070><c> there</c><00:31:43.220><c> is</c>

00:31:43.300 --> 00:31:43.310 align:start position:0%
it the platform loader and then there is
 

00:31:43.310 --> 00:31:45.490 align:start position:0%
it the platform loader and then there is
the<00:31:43.430><c> application</c><00:31:43.610><c> loader</c><00:31:44.360><c> which</c><00:31:45.260><c> loads</c>

00:31:45.490 --> 00:31:45.500 align:start position:0%
the application loader which loads
 

00:31:45.500 --> 00:31:47.890 align:start position:0%
the application loader which loads
everything<00:31:45.920><c> on</c><00:31:46.010><c> the</c><00:31:46.100><c> classpath</c><00:31:46.550><c> all</c><00:31:47.270><c> on</c><00:31:47.660><c> top</c>

00:31:47.890 --> 00:31:47.900 align:start position:0%
everything on the classpath all on top
 

00:31:47.900 --> 00:31:53.620 align:start position:0%
everything on the classpath all on top
of<00:31:47.930><c> the</c><00:31:48.470><c> vm</c><00:31:51.340><c> traditionally</c><00:31:52.340><c> the</c><00:31:53.330><c> vast</c>

00:31:53.620 --> 00:31:53.630 align:start position:0%
of the vm traditionally the vast
 

00:31:53.630 --> 00:31:57.250 align:start position:0%
of the vm traditionally the vast
majority<00:31:53.840><c> of</c><00:31:54.380><c> JDK</c><00:31:55.250><c> classes</c><00:31:55.850><c> were</c><00:31:56.240><c> defined</c><00:31:56.660><c> by</c>

00:31:57.250 --> 00:31:57.260 align:start position:0%
majority of JDK classes were defined by
 

00:31:57.260 --> 00:32:00.040 align:start position:0%
majority of JDK classes were defined by
the<00:31:57.320><c> bootstrap</c><00:31:57.800><c> loader</c><00:31:58.570><c> critical</c><00:31:59.570><c> JDK</c>

00:32:00.040 --> 00:32:00.050 align:start position:0%
the bootstrap loader critical JDK
 

00:32:00.050 --> 00:32:02.530 align:start position:0%
the bootstrap loader critical JDK
modules<00:32:00.530><c> such</c><00:32:00.950><c> as</c><00:32:01.160><c> Java</c><00:32:01.340><c> base</c><00:32:01.610><c> still</c><00:32:02.270><c> have</c>

00:32:02.530 --> 00:32:02.540 align:start position:0%
modules such as Java base still have
 

00:32:02.540 --> 00:32:04.840 align:start position:0%
modules such as Java base still have
their<00:32:02.840><c> classes</c><00:32:03.350><c> defined</c><00:32:03.860><c> by</c><00:32:04.310><c> the</c><00:32:04.370><c> bootstrap</c>

00:32:04.840 --> 00:32:04.850 align:start position:0%
their classes defined by the bootstrap
 

00:32:04.850 --> 00:32:08.680 align:start position:0%
their classes defined by the bootstrap
loader<00:32:05.530><c> for</c><00:32:06.530><c> non-critical</c><00:32:07.160><c> JDK</c><00:32:07.910><c> modules</c><00:32:08.360><c> it</c>

00:32:08.680 --> 00:32:08.690 align:start position:0%
loader for non-critical JDK modules it
 

00:32:08.690 --> 00:32:11.500 align:start position:0%
loader for non-critical JDK modules it
is<00:32:09.170><c> important</c><00:32:09.710><c> for</c><00:32:09.770><c> security</c><00:32:10.670><c> to</c><00:32:10.700><c> move</c><00:32:11.210><c> their</c>

00:32:11.500 --> 00:32:11.510 align:start position:0%
is important for security to move their
 

00:32:11.510 --> 00:32:13.930 align:start position:0%
is important for security to move their
classes<00:32:12.110><c> out</c><00:32:12.290><c> of</c><00:32:12.650><c> the</c><00:32:12.800><c> bootstrap</c><00:32:13.340><c> loader</c><00:32:13.640><c> if</c>

00:32:13.930 --> 00:32:13.940 align:start position:0%
classes out of the bootstrap loader if
 

00:32:13.940 --> 00:32:16.630 align:start position:0%
classes out of the bootstrap loader if
possible<00:32:14.620><c> modules</c><00:32:15.620><c> in</c><00:32:15.830><c> the</c><00:32:15.920><c> bootstrap</c><00:32:16.370><c> loader</c>

00:32:16.630 --> 00:32:16.640 align:start position:0%
possible modules in the bootstrap loader
 

00:32:16.640 --> 00:32:19.450 align:start position:0%
possible modules in the bootstrap loader
run<00:32:17.000><c> with</c><00:32:17.210><c> all</c><00:32:17.420><c> permissions</c><00:32:18.160><c> which</c><00:32:19.160><c> is</c><00:32:19.310><c> not</c>

00:32:19.450 --> 00:32:19.460 align:start position:0%
run with all permissions which is not
 

00:32:19.460 --> 00:32:22.480 align:start position:0%
run with all permissions which is not
ideal<00:32:19.490><c> from</c><00:32:20.330><c> a</c><00:32:20.420><c> security</c><00:32:20.630><c> perspective</c><00:32:21.490><c> those</c>

00:32:22.480 --> 00:32:22.490 align:start position:0%
ideal from a security perspective those
 

00:32:22.490 --> 00:32:25.120 align:start position:0%
ideal from a security perspective those
modules<00:32:22.700><c> can</c><00:32:23.120><c> only</c><00:32:23.300><c> be</c><00:32:23.540><c> D</c><00:32:23.840><c> privileged</c><00:32:24.440><c> that</c><00:32:24.800><c> is</c>

00:32:25.120 --> 00:32:25.130 align:start position:0%
modules can only be D privileged that is
 

00:32:25.130 --> 00:32:27.760 align:start position:0%
modules can only be D privileged that is
run<00:32:25.670><c> with</c><00:32:25.700><c> fewer</c><00:32:26.330><c> permissions</c><00:32:26.870><c> if</c><00:32:27.230><c> they're</c>

00:32:27.760 --> 00:32:27.770 align:start position:0%
run with fewer permissions if they're
 

00:32:27.770 --> 00:32:30.820 align:start position:0%
run with fewer permissions if they're
not<00:32:28.010><c> in</c><00:32:28.340><c> the</c><00:32:28.460><c> bootstrap</c><00:32:28.880><c> loader</c><00:32:29.120><c> so</c><00:32:30.080><c> in</c><00:32:30.350><c> jeddah</c>

00:32:30.820 --> 00:32:30.830 align:start position:0%
not in the bootstrap loader so in jeddah
 

00:32:30.830 --> 00:32:33.750 align:start position:0%
not in the bootstrap loader so in jeddah
k9<00:32:31.220><c> all</c><00:32:31.550><c> the</c><00:32:32.210><c> modules</c><00:32:32.360><c> containing</c><00:32:33.260><c> Java</c><00:32:33.650><c> EE</c>

00:32:33.750 --> 00:32:33.760 align:start position:0%
k9 all the modules containing Java EE
 

00:32:33.760 --> 00:32:37.150 align:start position:0%
k9 all the modules containing Java EE
technologies<00:32:34.760><c> such</c><00:32:35.390><c> as</c><00:32:35.420><c> Java</c><00:32:35.810><c> goober</c><00:32:36.440><c> have</c>

00:32:37.150 --> 00:32:37.160 align:start position:0%
technologies such as Java goober have
 

00:32:37.160 --> 00:32:40.480 align:start position:0%
technologies such as Java goober have
been<00:32:37.370><c> moved</c><00:32:37.610><c> as</c><00:32:38.030><c> well</c><00:32:38.810><c> as</c><00:32:39.170><c> the</c><00:32:39.380><c> JDBC</c><00:32:40.040><c> modules</c>

00:32:40.480 --> 00:32:40.490 align:start position:0%
been moved as well as the JDBC modules
 

00:32:40.490 --> 00:32:42.910 align:start position:0%
been moved as well as the JDBC modules
Java<00:32:41.120><c> sequel</c><00:32:41.570><c> and</c><00:32:41.690><c> Java</c><00:32:42.140><c> sequel</c><00:32:42.500><c> rosettes</c>

00:32:42.910 --> 00:32:42.920 align:start position:0%
Java sequel and Java sequel rosettes
 

00:32:42.920 --> 00:32:45.640 align:start position:0%
Java sequel and Java sequel rosettes
their<00:32:43.730><c> classes</c><00:32:44.240><c> are</c><00:32:44.450><c> now</c><00:32:44.630><c> defined</c><00:32:45.020><c> by</c><00:32:45.590><c> the</c>

00:32:45.640 --> 00:32:45.650 align:start position:0%
their classes are now defined by the
 

00:32:45.650 --> 00:32:49.030 align:start position:0%
their classes are now defined by the
platform<00:32:46.100><c> loader</c><00:32:46.600><c> frankly</c><00:32:47.600><c> moving</c><00:32:48.410><c> a</c><00:32:48.620><c> module</c>

00:32:49.030 --> 00:32:49.040 align:start position:0%
platform loader frankly moving a module
 

00:32:49.040 --> 00:32:54.310 align:start position:0%
platform loader frankly moving a module
as<00:32:49.280><c> big</c><00:32:49.760><c> as</c><00:32:50.000><c> Java</c><00:32:50.510><c> cawber</c><00:32:52.420><c> 1831</c><00:32:53.420><c> classes</c><00:32:54.080><c> and</c>

00:32:54.310 --> 00:32:54.320 align:start position:0%
as big as Java cawber 1831 classes and
 

00:32:54.320 --> 00:32:57.250 align:start position:0%
as big as Java cawber 1831 classes and
31<00:32:54.950><c> exported</c><00:32:55.640><c> packages</c><00:32:56.150><c> is</c><00:32:56.300><c> no</c><00:32:56.630><c> small</c>

00:32:57.250 --> 00:32:57.260 align:start position:0%
31 exported packages is no small
 

00:32:57.260 --> 00:33:00.400 align:start position:0%
31 exported packages is no small
accomplishment<00:32:58.120><c> the</c><00:32:59.120><c> D</c><00:32:59.270><c> privileges</c><00:32:59.900><c> were</c><00:33:00.080><c> kid</c>

00:33:00.400 --> 00:33:00.410 align:start position:0%
accomplishment the D privileges were kid
 

00:33:00.410 --> 00:33:03.130 align:start position:0%
accomplishment the D privileges were kid
self<00:33:00.740><c> of</c><00:33:01.130><c> specifying</c><00:33:02.120><c> the</c><00:33:02.270><c> fewer</c><00:33:02.660><c> permissions</c>

00:33:03.130 --> 00:33:03.140 align:start position:0%
self of specifying the fewer permissions
 

00:33:03.140 --> 00:33:06.029 align:start position:0%
self of specifying the fewer permissions
will<00:33:03.920><c> continue</c><00:33:04.400><c> for</c><00:33:04.610><c> many</c><00:33:04.670><c> years</c>

00:33:06.029 --> 00:33:06.039 align:start position:0%
will continue for many years
 

00:33:06.039 --> 00:33:08.950 align:start position:0%
will continue for many years
the<00:33:07.039><c> application</c><00:33:07.730><c> loader</c><00:33:07.940><c> is</c><00:33:08.270><c> then</c>

00:33:08.950 --> 00:33:08.960 align:start position:0%
the application loader is then
 

00:33:08.960 --> 00:33:12.340 align:start position:0%
the application loader is then
responsible<00:33:09.280><c> for</c><00:33:10.280><c> everything</c><00:33:10.520><c> else</c><00:33:10.789><c> a</c><00:33:11.350><c> number</c>

00:33:12.340 --> 00:33:12.350 align:start position:0%
responsible for everything else a number
 

00:33:12.350 --> 00:33:15.549 align:start position:0%
responsible for everything else a number
of<00:33:12.500><c> JDK</c><00:33:13.100><c> tool</c><00:33:13.370><c> modules</c><00:33:13.850><c> such</c><00:33:14.480><c> as</c><00:33:14.630><c> JDK</c><00:33:14.990><c> compiler</c>

00:33:15.549 --> 00:33:15.559 align:start position:0%
of JDK tool modules such as JDK compiler
 

00:33:15.559 --> 00:33:17.409 align:start position:0%
of JDK tool modules such as JDK compiler
have<00:33:16.010><c> their</c><00:33:16.190><c> classes</c><00:33:16.669><c> defined</c><00:33:16.850><c> by</c><00:33:17.210><c> the</c><00:33:17.270><c> app</c>

00:33:17.409 --> 00:33:17.419 align:start position:0%
have their classes defined by the app
 

00:33:17.419 --> 00:33:21.039 align:start position:0%
have their classes defined by the app
loader<00:33:17.690><c> all</c><00:33:18.640><c> classes</c><00:33:19.640><c> in</c><00:33:19.910><c> modules</c><00:33:20.780><c> on</c><00:33:20.960><c> the</c>

00:33:21.039 --> 00:33:21.049 align:start position:0%
loader all classes in modules on the
 

00:33:21.049 --> 00:33:23.020 align:start position:0%
loader all classes in modules on the
module<00:33:21.169><c> path</c><00:33:21.559><c> whether</c><00:33:22.039><c> they're</c><00:33:22.309><c> in</c><00:33:22.460><c> a</c><00:33:22.520><c> modular</c>

00:33:23.020 --> 00:33:23.030 align:start position:0%
module path whether they're in a modular
 

00:33:23.030 --> 00:33:25.950 align:start position:0%
module path whether they're in a modular
jar<00:33:23.270><c> or</c><00:33:23.510><c> in</c><00:33:23.990><c> an</c><00:33:24.110><c> automatic</c><00:33:24.559><c> module</c><00:33:25.070><c> like</c><00:33:25.309><c> guava</c>

00:33:25.950 --> 00:33:25.960 align:start position:0%
jar or in an automatic module like guava
 

00:33:25.960 --> 00:33:29.140 align:start position:0%
jar or in an automatic module like guava
are<00:33:27.039><c> defined</c><00:33:28.039><c> by</c><00:33:28.250><c> the</c><00:33:28.309><c> application</c><00:33:28.789><c> loader</c>

00:33:29.140 --> 00:33:29.150 align:start position:0%
are defined by the application loader
 

00:33:29.150 --> 00:33:32.680 align:start position:0%
are defined by the application loader
and<00:33:29.710><c> all</c><00:33:30.710><c> classes</c><00:33:31.580><c> on</c><00:33:31.700><c> the</c><00:33:31.820><c> classpath</c><00:33:32.330><c> in</c>

00:33:32.680 --> 00:33:32.690 align:start position:0%
and all classes on the classpath in
 

00:33:32.690 --> 00:33:35.500 align:start position:0%
and all classes on the classpath in
traditional<00:33:33.410><c> jar</c><00:33:33.650><c> files</c><00:33:33.980><c> like</c><00:33:34.340><c> jo</c><00:33:34.580><c> nijar</c><00:33:34.789><c> and</c>

00:33:35.500 --> 00:33:35.510 align:start position:0%
traditional jar files like jo nijar and
 

00:33:35.510 --> 00:33:38.890 align:start position:0%
traditional jar files like jo nijar and
glass<00:33:35.660><c> fish</c><00:33:35.900><c> jar</c><00:33:36.320><c> are</c><00:33:36.770><c> defined</c><00:33:37.340><c> as</c><00:33:37.549><c> before</c><00:33:38.240><c> by</c>

00:33:38.890 --> 00:33:38.900 align:start position:0%
glass fish jar are defined as before by
 

00:33:38.900 --> 00:33:44.020 align:start position:0%
glass fish jar are defined as before by
the<00:33:38.960><c> application</c><00:33:39.380><c> loader</c><00:33:39.710><c> a</c><00:33:42.640><c> couple</c><00:33:43.640><c> of</c><00:33:43.850><c> notes</c>

00:33:44.020 --> 00:33:44.030 align:start position:0%
the application loader a couple of notes
 

00:33:44.030 --> 00:33:47.799 align:start position:0%
the application loader a couple of notes
on<00:33:44.270><c> compatibility</c><00:33:45.549><c> first</c><00:33:46.600><c> frameworks</c><00:33:47.600><c> that</c>

00:33:47.799 --> 00:33:47.809 align:start position:0%
on compatibility first frameworks that
 

00:33:47.809 --> 00:33:50.409 align:start position:0%
on compatibility first frameworks that
delegates<00:33:48.500><c> directly</c><00:33:49.429><c> to</c><00:33:49.850><c> the</c><00:33:49.970><c> bootstrap</c>

00:33:50.409 --> 00:33:50.419 align:start position:0%
delegates directly to the bootstrap
 

00:33:50.419 --> 00:33:53.799 align:start position:0%
delegates directly to the bootstrap
loader<00:33:50.659><c> to</c><00:33:51.350><c> find</c><00:33:51.650><c> JDK</c><00:33:52.159><c> classes</c><00:33:52.700><c> might</c><00:33:53.450><c> break</c>

00:33:53.799 --> 00:33:53.809 align:start position:0%
loader to find JDK classes might break
 

00:33:53.809 --> 00:33:57.279 align:start position:0%
loader to find JDK classes might break
on<00:33:54.200><c> jdk</c><00:33:55.010><c> nine</c><00:33:55.220><c> because</c><00:33:56.120><c> many</c><00:33:56.330><c> jdk</c><00:33:56.780><c> classes</c>

00:33:57.279 --> 00:33:57.289 align:start position:0%
on jdk nine because many jdk classes
 

00:33:57.289 --> 00:34:00.610 align:start position:0%
on jdk nine because many jdk classes
aren't<00:33:57.530><c> there</c><00:33:58.100><c> anymore</c><00:33:59.110><c> frameworks</c><00:34:00.110><c> should</c>

00:34:00.610 --> 00:34:00.620 align:start position:0%
aren't there anymore frameworks should
 

00:34:00.620 --> 00:34:02.500 align:start position:0%
aren't there anymore frameworks should
use<00:34:00.830><c> the</c><00:34:01.010><c> new</c><00:34:01.159><c> class</c><00:34:01.460><c> loader</c><00:34:01.789><c> method</c><00:34:02.179><c> get'</c>

00:34:02.500 --> 00:34:02.510 align:start position:0%
use the new class loader method get'
 

00:34:02.510 --> 00:34:04.840 align:start position:0%
use the new class loader method get'
platform<00:34:02.960><c> class</c><00:34:03.200><c> loader</c><00:34:03.470><c> which</c><00:34:04.309><c> returns</c><00:34:04.730><c> a</c>

00:34:04.840 --> 00:34:04.850 align:start position:0%
platform class loader which returns a
 

00:34:04.850 --> 00:34:07.180 align:start position:0%
platform class loader which returns a
loader<00:34:05.169><c> guaranteed</c><00:34:06.169><c> to</c><00:34:06.440><c> provide</c><00:34:06.650><c> visibility</c>

00:34:07.180 --> 00:34:07.190 align:start position:0%
loader guaranteed to provide visibility
 

00:34:07.190 --> 00:34:13.149 align:start position:0%
loader guaranteed to provide visibility
of<00:34:07.899><c> exported</c><00:34:08.899><c> JDK</c><00:34:09.409><c> classes</c><00:34:11.109><c> second</c><00:34:12.159><c> the</c>

00:34:13.149 --> 00:34:13.159 align:start position:0%
of exported JDK classes second the
 

00:34:13.159 --> 00:34:15.669 align:start position:0%
of exported JDK classes second the
application<00:34:13.820><c> loader</c><00:34:14.060><c> whilst</c><00:34:14.750><c> there</c><00:34:14.990><c> still</c><00:34:15.260><c> is</c>

00:34:15.669 --> 00:34:15.679 align:start position:0%
application loader whilst there still is
 

00:34:15.679 --> 00:34:18.909 align:start position:0%
application loader whilst there still is
one<00:34:16.149><c> the</c><00:34:17.149><c> object</c><00:34:17.570><c> itself</c><00:34:17.690><c> is</c><00:34:18.080><c> no</c><00:34:18.290><c> longer</c><00:34:18.590><c> an</c>

00:34:18.909 --> 00:34:18.919 align:start position:0%
one the object itself is no longer an
 

00:34:18.919 --> 00:34:22.540 align:start position:0%
one the object itself is no longer an
instance<00:34:19.490><c> of</c><00:34:19.760><c> URL</c><00:34:20.480><c> class</c><00:34:20.780><c> loader</c><00:34:21.550><c> frameworks</c>

00:34:22.540 --> 00:34:22.550 align:start position:0%
instance of URL class loader frameworks
 

00:34:22.550 --> 00:34:25.570 align:start position:0%
instance of URL class loader frameworks
that<00:34:22.700><c> assume</c><00:34:23.149><c> it</c><00:34:23.300><c> is</c><00:34:23.480><c> in</c><00:34:23.929><c> order</c><00:34:24.290><c> to</c><00:34:24.619><c> hack</c><00:34:24.950><c> via</c>

00:34:25.570 --> 00:34:25.580 align:start position:0%
that assume it is in order to hack via
 

00:34:25.580 --> 00:34:27.780 align:start position:0%
that assume it is in order to hack via
so<00:34:25.790><c> accessible</c><00:34:26.300><c> into</c><00:34:26.690><c> its</c><00:34:26.810><c> add</c><00:34:26.960><c> URL</c><00:34:27.230><c> method</c>

00:34:27.780 --> 00:34:27.790 align:start position:0%
so accessible into its add URL method
 

00:34:27.790 --> 00:34:33.220 align:start position:0%
so accessible into its add URL method
sadface<00:34:29.169><c> will</c><00:34:30.169><c> break</c><00:34:30.500><c> on</c><00:34:30.859><c> jdk</c><00:34:31.490><c> nine</c><00:34:31.899><c> the</c><00:34:32.899><c> only</c>

00:34:33.220 --> 00:34:33.230 align:start position:0%
sadface will break on jdk nine the only
 

00:34:33.230 --> 00:34:35.349 align:start position:0%
sadface will break on jdk nine the only
supported<00:34:33.800><c> way</c><00:34:33.980><c> to</c><00:34:34.040><c> dynamically</c><00:34:34.760><c> extend</c><00:34:35.240><c> the</c>

00:34:35.349 --> 00:34:35.359 align:start position:0%
supported way to dynamically extend the
 

00:34:35.359 --> 00:34:36.849 align:start position:0%
supported way to dynamically extend the
class<00:34:35.540><c> path</c><00:34:35.869><c> is</c><00:34:36.109><c> with</c><00:34:36.230><c> the</c><00:34:36.350><c> class</c><00:34:36.560><c> path</c>

00:34:36.849 --> 00:34:36.859 align:start position:0%
class path is with the class path
 

00:34:36.859 --> 00:34:39.220 align:start position:0%
class path is with the class path
attribute<00:34:37.070><c> in</c><00:34:37.520><c> jar</c><00:34:37.730><c> files</c><00:34:38.000><c> or</c><00:34:38.570><c> with</c><00:34:38.750><c> the</c><00:34:38.869><c> agent</c>

00:34:39.220 --> 00:34:39.230 align:start position:0%
attribute in jar files or with the agent
 

00:34:39.230 --> 00:34:43.690 align:start position:0%
attribute in jar files or with the agent
API<00:34:39.560><c> and</c><00:34:39.950><c> java.lang</c><00:34:40.730><c> instruments</c><00:34:41.770><c> now</c><00:34:42.770><c> you</c>

00:34:43.690 --> 00:34:43.700 align:start position:0%
API and java.lang instruments now you
 

00:34:43.700 --> 00:34:45.820 align:start position:0%
API and java.lang instruments now you
may<00:34:43.879><c> be</c><00:34:43.909><c> wondering</c><00:34:44.090><c> where</c><00:34:44.990><c> the</c><00:34:45.139><c> module</c><00:34:45.500><c> system</c>

00:34:45.820 --> 00:34:45.830 align:start position:0%
may be wondering where the module system
 

00:34:45.830 --> 00:34:51.730 align:start position:0%
may be wondering where the module system
itself<00:34:46.550><c> lives</c><00:34:47.270><c> in</c><00:34:47.750><c> all</c><00:34:48.290><c> of</c><00:34:48.320><c> this</c><00:34:50.740><c> it's</c>

00:34:51.730 --> 00:34:51.740 align:start position:0%
itself lives in all of this it's
 

00:34:51.740 --> 00:34:53.560 align:start position:0%
itself lives in all of this it's
important<00:34:52.280><c> to</c><00:34:52.399><c> realize</c><00:34:52.550><c> where</c><00:34:53.060><c> the</c><00:34:53.240><c> module</c>

00:34:53.560 --> 00:34:53.570 align:start position:0%
important to realize where the module
 

00:34:53.570 --> 00:34:57.940 align:start position:0%
important to realize where the module
system<00:34:53.899><c> isn't</c><00:34:55.929><c> traditionally</c><00:34:56.929><c> a</c><00:34:57.139><c> module</c>

00:34:57.940 --> 00:34:57.950 align:start position:0%
system isn't traditionally a module
 

00:34:57.950 --> 00:35:00.970 align:start position:0%
system isn't traditionally a module
system<00:34:58.220><c> was</c><00:34:58.550><c> simply</c><00:34:58.910><c> Java</c><00:34:59.240><c> code</c><00:34:59.540><c> that</c><00:35:00.380><c> acted</c>

00:35:00.970 --> 00:35:00.980 align:start position:0%
system was simply Java code that acted
 

00:35:00.980 --> 00:35:04.270 align:start position:0%
system was simply Java code that acted
as a<00:35:01.220><c> factory</c><00:35:01.850><c> for</c><00:35:02.119><c> class</c><00:35:02.330><c> loaders</c><00:35:03.280><c> it</c>

00:35:04.270 --> 00:35:04.280 align:start position:0%
as a factory for class loaders it
 

00:35:04.280 --> 00:35:07.120 align:start position:0%
as a factory for class loaders it
created<00:35:04.940><c> loaders</c><00:35:05.330><c> that</c><00:35:05.990><c> defined</c><00:35:06.440><c> classes</c>

00:35:07.120 --> 00:35:07.130 align:start position:0%
created loaders that defined classes
 

00:35:07.130 --> 00:35:09.849 align:start position:0%
created loaders that defined classes
found<00:35:07.670><c> in</c><00:35:07.910><c> some</c><00:35:08.150><c> modular</c><00:35:08.540><c> artifacts</c><00:35:09.290><c> and</c><00:35:09.440><c> then</c>

00:35:09.849 --> 00:35:09.859 align:start position:0%
found in some modular artifacts and then
 

00:35:09.859 --> 00:35:11.890 align:start position:0%
found in some modular artifacts and then
those<00:35:10.040><c> load</c><00:35:10.280><c> is</c><00:35:10.430><c> delegated</c><00:35:11.060><c> to</c><00:35:11.300><c> each</c><00:35:11.390><c> other</c><00:35:11.630><c> in</c>

00:35:11.890 --> 00:35:11.900 align:start position:0%
those load is delegated to each other in
 

00:35:11.900 --> 00:35:13.930 align:start position:0%
those load is delegated to each other in
accordance<00:35:12.440><c> with</c><00:35:12.770><c> some</c><00:35:13.100><c> kind</c><00:35:13.369><c> of</c><00:35:13.520><c> modular</c>

00:35:13.930 --> 00:35:13.940 align:start position:0%
accordance with some kind of modular
 

00:35:13.940 --> 00:35:16.540 align:start position:0%
accordance with some kind of modular
imports<00:35:14.390><c> and</c><00:35:14.540><c> exports</c><00:35:14.600><c> as</c><00:35:15.290><c> I</c><00:35:16.160><c> mentioned</c>

00:35:16.540 --> 00:35:16.550 align:start position:0%
imports and exports as I mentioned
 

00:35:16.550 --> 00:35:19.170 align:start position:0%
imports and exports as I mentioned
before<00:35:16.640><c> there</c><00:35:17.450><c> is</c><00:35:17.480><c> then</c><00:35:17.750><c> some</c><00:35:18.200><c> encapsulate</c>

00:35:19.170 --> 00:35:19.180 align:start position:0%
before there is then some encapsulate
 

00:35:19.180 --> 00:35:22.900 align:start position:0%
before there is then some encapsulate
for<00:35:20.180><c> classes</c><00:35:20.630><c> because</c><00:35:21.170><c> those</c><00:35:21.830><c> loaders</c><00:35:22.280><c> a</c><00:35:22.550><c> B</c>

00:35:22.900 --> 00:35:22.910 align:start position:0%
for classes because those loaders a B
 

00:35:22.910 --> 00:35:25.360 align:start position:0%
for classes because those loaders a B
and<00:35:23.000><c> C</c><00:35:23.060><c> can</c><00:35:23.780><c> hide</c><00:35:24.200><c> classes</c><00:35:24.770><c> they</c><00:35:24.860><c> can</c><00:35:25.010><c> isolate</c>

00:35:25.360 --> 00:35:25.370 align:start position:0%
and C can hide classes they can isolate
 

00:35:25.370 --> 00:35:28.150 align:start position:0%
and C can hide classes they can isolate
classes<00:35:25.880><c> from</c><00:35:26.090><c> each</c><00:35:26.240><c> other</c><00:35:26.450><c> a</c><00:35:26.860><c> module</c><00:35:27.860><c> system</c>

00:35:28.150 --> 00:35:28.160 align:start position:0%
classes from each other a module system
 

00:35:28.160 --> 00:35:31.780 align:start position:0%
classes from each other a module system
that<00:35:28.520><c> does</c><00:35:28.670><c> this</c><00:35:28.880><c> will</c><00:35:29.690><c> still</c><00:35:29.990><c> work</c><00:35:30.230><c> on</c><00:35:30.790><c> jdk</c>

00:35:31.780 --> 00:35:31.790 align:start position:0%
that does this will still work on jdk
 

00:35:31.790 --> 00:35:34.120 align:start position:0%
that does this will still work on jdk
nine<00:35:32.000><c> because</c><00:35:32.750><c> class</c><00:35:33.020><c> loading</c><00:35:33.320><c> hasn't</c>

00:35:34.120 --> 00:35:34.130 align:start position:0%
nine because class loading hasn't
 

00:35:34.130 --> 00:35:38.980 align:start position:0%
nine because class loading hasn't
changed<00:35:35.200><c> but</c><00:35:36.200><c> the</c><00:35:36.260><c> module</c><00:35:36.740><c> system</c><00:35:37.070><c> in</c><00:35:37.990><c> jdk</c>

00:35:38.980 --> 00:35:38.990 align:start position:0%
changed but the module system in jdk
 

00:35:38.990 --> 00:35:44.170 align:start position:0%
changed but the module system in jdk
nine<00:35:39.380><c> is</c><00:35:39.680><c> quite</c><00:35:40.370><c> different</c><00:35:42.790><c> the</c><00:35:43.790><c> module</c>

00:35:44.170 --> 00:35:44.180 align:start position:0%
nine is quite different the module
 

00:35:44.180 --> 00:35:48.010 align:start position:0%
nine is quite different the module
system<00:35:44.420><c> in</c><00:35:44.830><c> jdk</c><00:35:45.830><c> nine</c><00:35:46.160><c> is</c><00:35:46.460><c> not</c><00:35:47.030><c> a</c><00:35:47.240><c> factory</c><00:35:47.750><c> for</c>

00:35:48.010 --> 00:35:48.020 align:start position:0%
system in jdk nine is not a factory for
 

00:35:48.020 --> 00:35:51.240 align:start position:0%
system in jdk nine is not a factory for
class<00:35:48.260><c> loaders</c><00:35:48.650><c> but</c><00:35:49.490><c> rather</c><00:35:49.730><c> a</c><00:35:50.060><c> conduit</c><00:35:50.840><c> a</c>

00:35:51.240 --> 00:35:51.250 align:start position:0%
class loaders but rather a conduit a
 

00:35:51.250 --> 00:35:53.770 align:start position:0%
class loaders but rather a conduit a
transmission<00:35:52.250><c> mechanism</c><00:35:52.820><c> that</c><00:35:53.450><c> allows</c>

00:35:53.770 --> 00:35:53.780 align:start position:0%
transmission mechanism that allows
 

00:35:53.780 --> 00:35:57.900 align:start position:0%
transmission mechanism that allows
modules<00:35:54.440><c> to</c><00:35:55.010><c> be</c><00:35:55.160><c> communicated</c><00:35:55.540><c> to</c><00:35:56.540><c> the</c><00:35:56.690><c> vm</c>

00:35:57.900 --> 00:35:57.910 align:start position:0%
modules to be communicated to the vm
 

00:35:57.910 --> 00:36:00.700 align:start position:0%
modules to be communicated to the vm
whoever<00:35:58.910><c> creates</c><00:35:59.450><c> the</c><00:35:59.750><c> class</c><00:36:00.020><c> loaders</c><00:36:00.500><c> is</c>

00:36:00.700 --> 00:36:00.710 align:start position:0%
whoever creates the class loaders is
 

00:36:00.710 --> 00:36:03.370 align:start position:0%
whoever creates the class loaders is
responsible<00:36:01.700><c> for</c><00:36:02.300><c> using</c><00:36:02.690><c> the</c><00:36:02.810><c> module</c><00:36:03.140><c> system</c>

00:36:03.370 --> 00:36:03.380 align:start position:0%
responsible for using the module system
 

00:36:03.380 --> 00:36:06.900 align:start position:0%
responsible for using the module system
API<00:36:03.830><c> to</c><00:36:04.460><c> transmit</c><00:36:05.000><c> module</c><00:36:05.390><c> names</c><00:36:05.890><c> contents</c>

00:36:06.900 --> 00:36:06.910 align:start position:0%
API to transmit module names contents
 

00:36:06.910 --> 00:36:09.910 align:start position:0%
API to transmit module names contents
dependencies<00:36:07.910><c> and</c><00:36:08.090><c> exports</c><00:36:09.020><c> to</c><00:36:09.530><c> the</c><00:36:09.680><c> vm</c>

00:36:09.910 --> 00:36:09.920 align:start position:0%
dependencies and exports to the vm
 

00:36:09.920 --> 00:36:12.580 align:start position:0%
dependencies and exports to the vm
that's<00:36:10.580><c> how</c><00:36:10.910><c> the</c><00:36:10.970><c> vm</c><00:36:11.420><c> knows</c><00:36:11.750><c> enough</c><00:36:12.290><c> to</c>

00:36:12.580 --> 00:36:12.590 align:start position:0%
that's how the vm knows enough to
 

00:36:12.590 --> 00:36:15.760 align:start position:0%
that's how the vm knows enough to
enforce<00:36:13.370><c> accessibility</c><00:36:14.210><c> it's</c><00:36:15.200><c> also</c><00:36:15.440><c> how</c><00:36:15.710><c> the</c>

00:36:15.760 --> 00:36:15.770 align:start position:0%
enforce accessibility it's also how the
 

00:36:15.770 --> 00:36:17.860 align:start position:0%
enforce accessibility it's also how the
core<00:36:16.100><c> reflection</c><00:36:16.610><c> API</c><00:36:16.910><c> can</c><00:36:17.510><c> enforce</c>

00:36:17.860 --> 00:36:17.870 align:start position:0%
core reflection API can enforce
 

00:36:17.870 --> 00:36:19.960 align:start position:0%
core reflection API can enforce
accessibility<00:36:18.680><c> since</c><00:36:19.190><c> core</c><00:36:19.400><c> reflection</c><00:36:19.850><c> is</c>

00:36:19.960 --> 00:36:19.970 align:start position:0%
accessibility since core reflection is
 

00:36:19.970 --> 00:36:23.530 align:start position:0%
accessibility since core reflection is
based<00:36:20.240><c> on</c><00:36:20.420><c> vm</c><00:36:20.840><c> provided</c><00:36:21.560><c> class</c><00:36:21.800><c> objects</c><00:36:22.540><c> you</c>

00:36:23.530 --> 00:36:23.540 align:start position:0%
based on vm provided class objects you
 

00:36:23.540 --> 00:36:26.520 align:start position:0%
based on vm provided class objects you
can<00:36:23.750><c> think</c><00:36:23.960><c> of</c><00:36:24.200><c> the</c><00:36:24.530><c> java</c><00:36:25.340><c> launcher</c><00:36:26.030><c> as</c>

00:36:26.520 --> 00:36:26.530 align:start position:0%
can think of the java launcher as
 

00:36:26.530 --> 00:36:29.800 align:start position:0%
can think of the java launcher as
creating<00:36:27.530><c> three</c><00:36:28.070><c> loaders</c><00:36:28.430><c> and</c><00:36:28.690><c> doing</c><00:36:29.690><c> the</c>

00:36:29.800 --> 00:36:29.810 align:start position:0%
creating three loaders and doing the
 

00:36:29.810 --> 00:36:32.380 align:start position:0%
creating three loaders and doing the
transmission<00:36:30.710><c> down</c><00:36:30.950><c> to</c><00:36:31.130><c> the</c><00:36:31.250><c> vm</c><00:36:31.490><c> for</c><00:36:32.000><c> modules</c>

00:36:32.380 --> 00:36:32.390 align:start position:0%
transmission down to the vm for modules
 

00:36:32.390 --> 00:36:34.930 align:start position:0%
transmission down to the vm for modules
on<00:36:32.600><c> the</c><00:36:32.720><c> module</c><00:36:32.840><c> path</c><00:36:33.290><c> you</c><00:36:34.190><c> can</c><00:36:34.370><c> see</c><00:36:34.550><c> why</c><00:36:34.760><c> we</c>

00:36:34.930 --> 00:36:34.940 align:start position:0%
on the module path you can see why we
 

00:36:34.940 --> 00:36:36.610 align:start position:0%
on the module path you can see why we
wanted<00:36:35.360><c> the</c><00:36:35.510><c> module</c><00:36:35.840><c> system</c><00:36:36.140><c> to</c><00:36:36.500><c> be</c>

00:36:36.610 --> 00:36:36.620 align:start position:0%
wanted the module system to be
 

00:36:36.620 --> 00:36:39.790 align:start position:0%
wanted the module system to be
disinterested<00:36:37.340><c> in</c><00:36:37.790><c> class</c><00:36:38.330><c> loaders</c><00:36:38.780><c> the</c><00:36:39.230><c> JDK</c>

00:36:39.790 --> 00:36:39.800 align:start position:0%
disinterested in class loaders the JDK
 

00:36:39.800 --> 00:36:42.040 align:start position:0%
disinterested in class loaders the JDK
has<00:36:40.010><c> been</c><00:36:40.160><c> factored</c><00:36:40.670><c> into</c><00:36:40.910><c> dozens</c><00:36:41.480><c> of</c><00:36:41.600><c> modules</c>

00:36:42.040 --> 00:36:42.050 align:start position:0%
has been factored into dozens of modules
 

00:36:42.050 --> 00:36:44.410 align:start position:0%
has been factored into dozens of modules
but<00:36:42.590><c> it's</c><00:36:42.740><c> class</c><00:36:43.040><c> loading</c><00:36:43.340><c> architecture</c><00:36:44.240><c> the</c>

00:36:44.410 --> 00:36:44.420 align:start position:0%
but it's class loading architecture the
 

00:36:44.420 --> 00:36:45.520 align:start position:0%
but it's class loading architecture the
shape<00:36:44.630><c> of</c><00:36:44.780><c> the</c><00:36:44.810><c> class</c><00:36:45.080><c> learning</c><00:36:45.320><c> architecture</c>

00:36:45.520 --> 00:36:45.530 align:start position:0%
shape of the class learning architecture
 

00:36:45.530 --> 00:36:49.720 align:start position:0%
shape of the class learning architecture
hasn't<00:36:46.460><c> changed</c><00:36:47.770><c> encapsulation</c><00:36:48.770><c> is</c><00:36:49.100><c> provided</c>

00:36:49.720 --> 00:36:49.730 align:start position:0%
hasn't changed encapsulation is provided
 

00:36:49.730 --> 00:36:52.930 align:start position:0%
hasn't changed encapsulation is provided
by<00:36:49.880><c> trouve</c><00:36:50.270><c> e.m</c><00:36:50.720><c> level</c><00:36:51.140><c> accessibility</c><00:36:52.010><c> not</c><00:36:52.730><c> by</c>

00:36:52.930 --> 00:36:52.940 align:start position:0%
by trouve e.m level accessibility not by
 

00:36:52.940 --> 00:36:56.860 align:start position:0%
by trouve e.m level accessibility not by
class<00:36:53.360><c> loader</c><00:36:53.690><c> based</c><00:36:54.100><c> visibility</c><00:36:55.360><c> so</c><00:36:56.360><c> the</c>

00:36:56.860 --> 00:36:56.870 align:start position:0%
class loader based visibility so the
 

00:36:56.870 --> 00:36:59.170 align:start position:0%
class loader based visibility so the
module<00:36:57.230><c> system</c><00:36:57.470><c> doesn't</c><00:36:58.070><c> need</c><00:36:58.250><c> to</c><00:36:58.640><c> mandates</c>

00:36:59.170 --> 00:36:59.180 align:start position:0%
module system doesn't need to mandates
 

00:36:59.180 --> 00:37:01.570 align:start position:0%
module system doesn't need to mandates
one<00:36:59.720><c> loader</c><00:36:59.990><c> per</c><00:37:00.440><c> module</c><00:37:00.590><c> it</c><00:37:01.190><c> can</c><00:37:01.340><c> handle</c>

00:37:01.570 --> 00:37:01.580 align:start position:0%
one loader per module it can handle
 

00:37:01.580 --> 00:37:04.600 align:start position:0%
one loader per module it can handle
multiple<00:37:02.090><c> modules</c><00:37:02.450><c> per</c><00:37:03.350><c> loader</c><00:37:03.650><c> just</c><00:37:04.370><c> fine</c>

00:37:04.600 --> 00:37:04.610 align:start position:0%
multiple modules per loader just fine
 

00:37:04.610 --> 00:37:08.560 align:start position:0%
multiple modules per loader just fine
that's<00:37:05.300><c> what</c><00:37:05.570><c> the</c><00:37:05.750><c> picture</c><00:37:05.930><c> shows</c><00:37:07.570><c> you'll</c>

00:37:08.560 --> 00:37:08.570 align:start position:0%
that's what the picture shows you'll
 

00:37:08.570 --> 00:37:10.960 align:start position:0%
that's what the picture shows you'll
recall<00:37:08.960><c> that</c><00:37:09.260><c> I</c><00:37:09.320><c> talked</c><00:37:09.650><c> earlier</c><00:37:10.280><c> about</c><00:37:10.490><c> the</c>

00:37:10.960 --> 00:37:10.970 align:start position:0%
recall that I talked earlier about the
 

00:37:10.970 --> 00:37:14.020 align:start position:0%
recall that I talked earlier about the
unnamed<00:37:11.810><c> module</c><00:37:12.260><c> as</c><00:37:12.590><c> a</c><00:37:12.670><c> vehicle</c><00:37:13.670><c> for</c>

00:37:14.020 --> 00:37:14.030 align:start position:0%
unnamed module as a vehicle for
 

00:37:14.030 --> 00:37:17.920 align:start position:0%
unnamed module as a vehicle for
compatibility<00:37:15.730><c> strictly</c><00:37:16.730><c> speaking</c><00:37:16.940><c> I</c><00:37:17.330><c> was</c>

00:37:17.920 --> 00:37:17.930 align:start position:0%
compatibility strictly speaking I was
 

00:37:17.930 --> 00:37:20.860 align:start position:0%
compatibility strictly speaking I was
referring<00:37:18.530><c> to</c><00:37:18.560><c> the</c><00:37:19.130><c> unnamed</c><00:37:19.580><c> module</c><00:37:20.000><c> of</c><00:37:20.240><c> the</c>

00:37:20.860 --> 00:37:20.870 align:start position:0%
referring to the unnamed module of the
 

00:37:20.870 --> 00:37:24.040 align:start position:0%
referring to the unnamed module of the
application<00:37:21.620><c> loader</c><00:37:21.980><c> in</c><00:37:22.160><c> fact</c><00:37:23.150><c> every</c><00:37:23.780><c> class</c>

00:37:24.040 --> 00:37:24.050 align:start position:0%
application loader in fact every class
 

00:37:24.050 --> 00:37:27.250 align:start position:0%
application loader in fact every class
every<00:37:24.410><c> class</c><00:37:25.340><c> loader</c><00:37:25.610><c> has</c><00:37:26.210><c> an</c><00:37:26.480><c> unnamed</c><00:37:26.780><c> module</c>

00:37:27.250 --> 00:37:27.260 align:start position:0%
every class loader has an unnamed module
 

00:37:27.260 --> 00:37:30.760 align:start position:0%
every class loader has an unnamed module
if<00:37:27.500><c> the</c><00:37:28.370><c> vm</c><00:37:28.700><c> sees</c><00:37:29.120><c> a</c><00:37:29.150><c> class</c><00:37:29.510><c> being</c><00:37:29.990><c> defined</c><00:37:30.470><c> by</c>

00:37:30.760 --> 00:37:30.770 align:start position:0%
if the vm sees a class being defined by
 

00:37:30.770 --> 00:37:33.070 align:start position:0%
if the vm sees a class being defined by
a<00:37:30.800><c> loader</c><00:37:31.070><c> and</c><00:37:31.370><c> the</c><00:37:31.450><c> vm</c>

00:37:33.070 --> 00:37:33.080 align:start position:0%
a loader and the vm
 

00:37:33.080 --> 00:37:35.890 align:start position:0%
a loader and the vm
associate<00:37:33.860><c> that</c><00:37:33.890><c> class</c><00:37:34.490><c> with</c><00:37:35.090><c> a</c><00:37:35.120><c> named</c><00:37:35.420><c> module</c>

00:37:35.890 --> 00:37:35.900 align:start position:0%
associate that class with a named module
 

00:37:35.900 --> 00:37:38.410 align:start position:0%
associate that class with a named module
that<00:37:36.110><c> was</c><00:37:36.260><c> transmitted</c><00:37:36.950><c> down</c><00:37:37.190><c> earlier</c><00:37:37.700><c> then</c>

00:37:38.410 --> 00:37:38.420 align:start position:0%
that was transmitted down earlier then
 

00:37:38.420 --> 00:37:40.690 align:start position:0%
that was transmitted down earlier then
the<00:37:38.600><c> vm</c><00:37:38.840><c> treats</c><00:37:39.170><c> the</c><00:37:39.320><c> class</c><00:37:39.560><c> as</c><00:37:39.860><c> being</c><00:37:40.460><c> in</c><00:37:40.670><c> the</c>

00:37:40.690 --> 00:37:40.700 align:start position:0%
the vm treats the class as being in the
 

00:37:40.700 --> 00:37:44.170 align:start position:0%
the vm treats the class as being in the
loaders<00:37:41.210><c> unnamed</c><00:37:42.080><c> module</c><00:37:42.560><c> as</c><00:37:43.030><c> you</c><00:37:44.030><c> might</c>

00:37:44.170 --> 00:37:44.180 align:start position:0%
loaders unnamed module as you might
 

00:37:44.180 --> 00:37:47.170 align:start position:0%
loaders unnamed module as you might
guess<00:37:44.240><c> the</c><00:37:45.020><c> vm</c><00:37:45.380><c> always</c><00:37:46.100><c> allows</c><00:37:46.430><c> access</c><00:37:46.700><c> to</c>

00:37:47.170 --> 00:37:47.180 align:start position:0%
guess the vm always allows access to
 

00:37:47.180 --> 00:37:51.640 align:start position:0%
guess the vm always allows access to
public<00:37:47.420><c> classes</c><00:37:48.020><c> in</c><00:37:48.530><c> an</c><00:37:49.070><c> unnamed</c><00:37:49.370><c> module</c><00:37:50.650><c> this</c>

00:37:51.640 --> 00:37:51.650 align:start position:0%
public classes in an unnamed module this
 

00:37:51.650 --> 00:37:54.130 align:start position:0%
public classes in an unnamed module this
means<00:37:51.950><c> this</c><00:37:52.400><c> all</c><00:37:52.580><c> means</c><00:37:52.760><c> that</c><00:37:53.090><c> every</c><00:37:53.810><c> class</c>

00:37:54.130 --> 00:37:54.140 align:start position:0%
means this all means that every class
 

00:37:54.140 --> 00:37:57.550 align:start position:0%
means this all means that every class
every<00:37:54.530><c> class</c><00:37:55.280><c> is</c><00:37:55.550><c> a</c><00:37:55.580><c> member</c><00:37:56.000><c> of</c><00:37:56.120><c> a</c><00:37:56.210><c> module</c><00:37:56.560><c> even</c>

00:37:57.550 --> 00:37:57.560 align:start position:0%
every class is a member of a module even
 

00:37:57.560 --> 00:37:59.620 align:start position:0%
every class is a member of a module even
classes<00:37:58.160><c> in</c><00:37:58.400><c> the</c><00:37:58.790><c> jar</c><00:37:59.000><c> files</c><00:37:59.300><c> on</c><00:37:59.540><c> the</c>

00:37:59.620 --> 00:37:59.630 align:start position:0%
classes in the jar files on the
 

00:37:59.630 --> 00:38:02.440 align:start position:0%
classes in the jar files on the
classpath<00:38:00.080><c> j</c><00:38:00.650><c> unit</c><00:38:00.800><c> jar</c><00:38:01.340><c> and</c><00:38:01.580><c> glassfish</c><00:38:02.270><c> top</c>

00:38:02.440 --> 00:38:02.450 align:start position:0%
classpath j unit jar and glassfish top
 

00:38:02.450 --> 00:38:04.240 align:start position:0%
classpath j unit jar and glassfish top
jar<00:38:02.660><c> are</c><00:38:02.840><c> members</c><00:38:03.440><c> of</c><00:38:03.470><c> a</c><00:38:03.650><c> module</c><00:38:03.770><c> that</c><00:38:04.100><c> it's</c>

00:38:04.240 --> 00:38:04.250 align:start position:0%
jar are members of a module that it's
 

00:38:04.250 --> 00:38:05.350 align:start position:0%
jar are members of a module that it's
actually<00:38:04.490><c> the</c><00:38:04.610><c> it's</c><00:38:04.970><c> meant</c><00:38:05.120><c> to</c><00:38:05.180><c> be</c><00:38:05.210><c> the</c>

00:38:05.350 --> 00:38:05.360 align:start position:0%
actually the it's meant to be the
 

00:38:05.360 --> 00:38:10.300 align:start position:0%
actually the it's meant to be the
seventh<00:38:05.690><c> box</c><00:38:06.550><c> in</c><00:38:07.550><c> the</c><00:38:07.670><c> vm</c><00:38:07.880><c> on</c><00:38:08.090><c> the</c><00:38:08.180><c> right</c><00:38:09.310><c> and</c>

00:38:10.300 --> 00:38:10.310 align:start position:0%
seventh box in the vm on the right and
 

00:38:10.310 --> 00:38:12.820 align:start position:0%
seventh box in the vm on the right and
if<00:38:10.460><c> you</c><00:38:10.580><c> have</c><00:38:10.760><c> a</c><00:38:10.790><c> class</c><00:38:11.150><c> object</c><00:38:11.720><c> the</c><00:38:12.440><c> get</c>

00:38:12.820 --> 00:38:12.830 align:start position:0%
if you have a class object the get
 

00:38:12.830 --> 00:38:14.950 align:start position:0%
if you have a class object the get
module<00:38:13.190><c> method</c><00:38:13.640><c> will</c><00:38:13.820><c> always</c><00:38:14.240><c> return</c><00:38:14.660><c> a</c>

00:38:14.950 --> 00:38:14.960 align:start position:0%
module method will always return a
 

00:38:14.960 --> 00:38:21.960 align:start position:0%
module method will always return a
sensible<00:38:15.470><c> module</c><00:38:15.980><c> object</c><00:38:20.200><c> the</c><00:38:21.200><c> module</c><00:38:21.590><c> system</c>

00:38:21.960 --> 00:38:21.970 align:start position:0%
sensible module object the module system
 

00:38:21.970 --> 00:38:25.390 align:start position:0%
sensible module object the module system
introduces<00:38:22.970><c> the</c><00:38:23.120><c> concept</c><00:38:23.360><c> of</c><00:38:23.840><c> a</c><00:38:24.170><c> layer</c><00:38:24.560><c> to</c>

00:38:25.390 --> 00:38:25.400 align:start position:0%
introduces the concept of a layer to
 

00:38:25.400 --> 00:38:29.040 align:start position:0%
introduces the concept of a layer to
associate<00:38:26.060><c> class</c><00:38:26.780><c> loaders</c><00:38:27.260><c> with</c><00:38:27.830><c> modules</c><00:38:28.250><c> a</c>

00:38:29.040 --> 00:38:29.050 align:start position:0%
associate class loaders with modules a
 

00:38:29.050 --> 00:38:32.770 align:start position:0%
associate class loaders with modules a
layer<00:38:30.050><c> is</c><00:38:30.350><c> a</c><00:38:30.380><c> family</c><00:38:31.070><c> of</c><00:38:31.190><c> class</c><00:38:31.460><c> loaders</c><00:38:31.910><c> that</c>

00:38:32.770 --> 00:38:32.780 align:start position:0%
layer is a family of class loaders that
 

00:38:32.780 --> 00:38:35.560 align:start position:0%
layer is a family of class loaders that
together<00:38:33.170><c> serve</c><00:38:33.920><c> to</c><00:38:34.160><c> load</c><00:38:34.430><c> classes</c><00:38:35.090><c> for</c><00:38:35.540><c> a</c>

00:38:35.560 --> 00:38:35.570 align:start position:0%
together serve to load classes for a
 

00:38:35.570 --> 00:38:38.980 align:start position:0%
together serve to load classes for a
graph<00:38:35.870><c> of</c><00:38:36.080><c> modules</c><00:38:36.730><c> logically</c><00:38:37.730><c> the</c><00:38:38.540><c> java</c>

00:38:38.980 --> 00:38:38.990 align:start position:0%
graph of modules logically the java
 

00:38:38.990 --> 00:38:40.770 align:start position:0%
graph of modules logically the java
launcher<00:38:39.470><c> defines</c><00:38:39.950><c> the</c><00:38:40.190><c> boot</c><00:38:40.430><c> layer</c>

00:38:40.770 --> 00:38:40.780 align:start position:0%
launcher defines the boot layer
 

00:38:40.780 --> 00:38:44.280 align:start position:0%
launcher defines the boot layer
consisting<00:38:41.780><c> of</c><00:38:41.900><c> the</c><00:38:42.080><c> three</c><00:38:42.410><c> familiar</c><00:38:43.100><c> loaders</c>

00:38:44.280 --> 00:38:44.290 align:start position:0%
consisting of the three familiar loaders
 

00:38:44.290 --> 00:38:47.560 align:start position:0%
consisting of the three familiar loaders
it's<00:38:45.290><c> the</c><00:38:45.500><c> boot</c><00:38:45.740><c> layer</c><00:38:46.040><c> that</c><00:38:46.640><c> associates</c><00:38:47.240><c> the</c>

00:38:47.560 --> 00:38:47.570 align:start position:0%
it's the boot layer that associates the
 

00:38:47.570 --> 00:38:49.720 align:start position:0%
it's the boot layer that associates the
java<00:38:47.840><c> base</c><00:38:48.080><c> and</c><00:38:48.410><c> java</c><00:38:48.590><c> logging</c><00:38:49.040><c> modules</c><00:38:49.490><c> with</c>

00:38:49.720 --> 00:38:49.730 align:start position:0%
java base and java logging modules with
 

00:38:49.730 --> 00:38:52.870 align:start position:0%
java base and java logging modules with
the<00:38:49.850><c> bootstrap</c><00:38:50.300><c> loader</c><00:38:50.680><c> the</c><00:38:51.680><c> java</c><00:38:52.130><c> sequel</c><00:38:52.640><c> and</c>

00:38:52.870 --> 00:38:52.880 align:start position:0%
the bootstrap loader the java sequel and
 

00:38:52.880 --> 00:38:54.640 align:start position:0%
the bootstrap loader the java sequel and
java<00:38:53.060><c> korba</c><00:38:53.480><c> modules</c><00:38:53.900><c> with</c><00:38:54.140><c> the</c><00:38:54.230><c> platform</c>

00:38:54.640 --> 00:38:54.650 align:start position:0%
java korba modules with the platform
 

00:38:54.650 --> 00:39:00.430 align:start position:0%
java korba modules with the platform
loader<00:38:54.860><c> and</c><00:38:55.190><c> so</c><00:38:55.670><c> on</c><00:38:58.690><c> so</c><00:38:59.690><c> a</c><00:38:59.720><c> layer</c><00:39:00.020><c> is</c><00:39:00.290><c> created</c>

00:39:00.430 --> 00:39:00.440 align:start position:0%
loader and so on so a layer is created
 

00:39:00.440 --> 00:39:03.460 align:start position:0%
loader and so on so a layer is created
from<00:39:00.860><c> two</c><00:39:01.070><c> things</c><00:39:01.340><c> graph</c><00:39:01.940><c> of</c><00:39:02.180><c> modules</c><00:39:02.600><c> and</c><00:39:02.930><c> a</c>

00:39:03.460 --> 00:39:03.470 align:start position:0%
from two things graph of modules and a
 

00:39:03.470 --> 00:39:05.950 align:start position:0%
from two things graph of modules and a
function<00:39:03.950><c> that</c><00:39:03.980><c> maps</c><00:39:04.460><c> modules</c><00:39:05.150><c> two</c><00:39:05.750><c> loaders</c>

00:39:05.950 --> 00:39:05.960 align:start position:0%
function that maps modules two loaders
 

00:39:05.960 --> 00:39:10.480 align:start position:0%
function that maps modules two loaders
on<00:39:06.110><c> the</c><00:39:06.880><c> left</c><00:39:07.880><c> is</c><00:39:08.840><c> the</c><00:39:09.080><c> graph</c><00:39:09.350><c> from</c><00:39:09.800><c> resolving</c>

00:39:10.480 --> 00:39:10.490 align:start position:0%
on the left is the graph from resolving
 

00:39:10.490 --> 00:39:12.910 align:start position:0%
on the left is the graph from resolving
the<00:39:10.730><c> JDK</c><00:39:11.120><c> j-link</c><00:39:11.510><c> module</c><00:39:11.960><c> which</c><00:39:12.380><c> contains</c><00:39:12.830><c> the</c>

00:39:12.910 --> 00:39:12.920 align:start position:0%
the JDK j-link module which contains the
 

00:39:12.920 --> 00:39:15.520 align:start position:0%
the JDK j-link module which contains the
jailing<00:39:13.370><c> tool</c><00:39:13.640><c> for</c><00:39:14.480><c> building</c><00:39:14.630><c> runtime</c><00:39:15.260><c> jeddak</c>

00:39:15.520 --> 00:39:15.530 align:start position:0%
jailing tool for building runtime jeddak
 

00:39:15.530 --> 00:39:17.650 align:start position:0%
jailing tool for building runtime jeddak
8<00:39:15.650><c> images</c><00:39:16.010><c> just</c><00:39:16.400><c> an</c><00:39:16.490><c> example</c><00:39:16.610><c> of</c><00:39:17.090><c> a</c><00:39:17.510><c> module</c>

00:39:17.650 --> 00:39:17.660 align:start position:0%
8 images just an example of a module
 

00:39:17.660 --> 00:39:21.760 align:start position:0%
8 images just an example of a module
graph<00:39:18.080><c> on</c><00:39:19.210><c> the</c><00:39:20.210><c> right</c><00:39:20.240><c> is</c><00:39:21.080><c> a</c><00:39:21.320><c> lambda</c>

00:39:21.760 --> 00:39:21.770 align:start position:0%
graph on the right is a lambda
 

00:39:21.770 --> 00:39:24.010 align:start position:0%
graph on the right is a lambda
expression<00:39:22.060><c> mapping</c><00:39:23.060><c> some</c><00:39:23.660><c> of</c><00:39:23.810><c> the</c><00:39:23.870><c> modules</c>

00:39:24.010 --> 00:39:24.020 align:start position:0%
expression mapping some of the modules
 

00:39:24.020 --> 00:39:26.260 align:start position:0%
expression mapping some of the modules
in<00:39:24.440><c> that</c><00:39:24.560><c> graph</c><00:39:24.800><c> to</c><00:39:25.400><c> the</c><00:39:25.430><c> bootstrap</c><00:39:25.970><c> loader</c>

00:39:26.260 --> 00:39:26.270 align:start position:0%
in that graph to the bootstrap loader
 

00:39:26.270 --> 00:39:32.230 align:start position:0%
in that graph to the bootstrap loader
and<00:39:26.570><c> the</c><00:39:27.380><c> application</c><00:39:27.950><c> loader</c><00:39:31.090><c> creating</c><00:39:32.090><c> a</c>

00:39:32.230 --> 00:39:32.240 align:start position:0%
and the application loader creating a
 

00:39:32.240 --> 00:39:35.740 align:start position:0%
and the application loader creating a
layer<00:39:33.370><c> informs</c><00:39:34.370><c> the</c><00:39:34.550><c> module</c><00:39:34.880><c> system</c><00:39:35.150><c> about</c>

00:39:35.740 --> 00:39:35.750 align:start position:0%
layer informs the module system about
 

00:39:35.750 --> 00:39:37.870 align:start position:0%
layer informs the module system about
the<00:39:35.810><c> packages</c><00:39:36.620><c> that</c><00:39:36.920><c> will</c><00:39:37.160><c> exist</c><00:39:37.520><c> in</c><00:39:37.760><c> the</c>

00:39:37.870 --> 00:39:37.880 align:start position:0%
the packages that will exist in the
 

00:39:37.880 --> 00:39:40.300 align:start position:0%
the packages that will exist in the
program<00:39:38.300><c> and</c><00:39:38.540><c> the</c><00:39:39.350><c> modules</c><00:39:39.830><c> they'll</c><00:39:40.070><c> come</c>

00:39:40.300 --> 00:39:40.310 align:start position:0%
program and the modules they'll come
 

00:39:40.310 --> 00:39:42.100 align:start position:0%
program and the modules they'll come
from<00:39:40.580><c> this</c><00:39:41.090><c> is</c><00:39:41.210><c> a</c><00:39:41.300><c> great</c><00:39:41.570><c> slide</c><00:39:41.780><c> to</c><00:39:41.960><c> take</c><00:39:42.080><c> a</c>

00:39:42.100 --> 00:39:42.110 align:start position:0%
from this is a great slide to take a
 

00:39:42.110 --> 00:39:43.599 align:start position:0%
from this is a great slide to take a
picture<00:39:42.320><c> of</c><00:39:42.470><c> hint</c><00:39:42.800><c> hint</c>

00:39:43.599 --> 00:39:43.609 align:start position:0%
picture of hint hint
 

00:39:43.609 --> 00:39:46.280 align:start position:0%
picture of hint hint
the<00:39:44.609><c> module</c><00:39:45.000><c> system</c><00:39:45.270><c> passes</c><00:39:46.109><c> this</c>

00:39:46.280 --> 00:39:46.290 align:start position:0%
the module system passes this
 

00:39:46.290 --> 00:39:48.740 align:start position:0%
the module system passes this
information<00:39:46.920><c> to</c><00:39:47.460><c> the</c><00:39:47.490><c> vm</c><00:39:47.820><c> so</c><00:39:48.480><c> that</c><00:39:48.599><c> when</c>

00:39:48.740 --> 00:39:48.750 align:start position:0%
information to the vm so that when
 

00:39:48.750 --> 00:39:50.810 align:start position:0%
information to the vm so that when
classes<00:39:49.290><c> are</c><00:39:49.320><c> eventually</c><00:39:49.859><c> loaded</c><00:39:50.670><c> and</c>

00:39:50.810 --> 00:39:50.820 align:start position:0%
classes are eventually loaded and
 

00:39:50.820 --> 00:39:53.660 align:start position:0%
classes are eventually loaded and
defined<00:39:51.180><c> the</c><00:39:51.930><c> vm</c><00:39:52.200><c> knows</c><00:39:52.530><c> which</c><00:39:52.920><c> module</c><00:39:53.460><c> a</c>

00:39:53.660 --> 00:39:53.670 align:start position:0%
defined the vm knows which module a
 

00:39:53.670 --> 00:39:56.450 align:start position:0%
defined the vm knows which module a
class<00:39:53.970><c> belongs</c><00:39:54.480><c> to</c><00:39:54.780><c> and</c><00:39:54.990><c> what</c><00:39:55.830><c> that</c><00:39:56.040><c> module</c>

00:39:56.450 --> 00:39:56.460 align:start position:0%
class belongs to and what that module
 

00:39:56.460 --> 00:40:00.109 align:start position:0%
class belongs to and what that module
reads<00:39:56.849><c> and</c><00:39:57.180><c> exports</c><00:39:57.869><c> it's</c><00:39:58.680><c> like</c><00:39:59.040><c> the</c><00:39:59.340><c> vm</c><00:39:59.760><c> has</c><00:40:00.090><c> a</c>

00:40:00.109 --> 00:40:00.119 align:start position:0%
reads and exports it's like the vm has a
 

00:40:00.119 --> 00:40:03.500 align:start position:0%
reads and exports it's like the vm has a
shadow<00:40:00.570><c> copy</c><00:40:01.020><c> of</c><00:40:01.410><c> the</c><00:40:01.920><c> module</c><00:40:02.220><c> graph</c><00:40:02.550><c> that</c><00:40:03.359><c> it</c>

00:40:03.500 --> 00:40:03.510 align:start position:0%
shadow copy of the module graph that it
 

00:40:03.510 --> 00:40:05.990 align:start position:0%
shadow copy of the module graph that it
uses<00:40:03.869><c> when</c><00:40:04.290><c> checking</c><00:40:04.590><c> accessibility</c><00:40:05.520><c> between</c>

00:40:05.990 --> 00:40:06.000 align:start position:0%
uses when checking accessibility between
 

00:40:06.000 --> 00:40:10.160 align:start position:0%
uses when checking accessibility between
classes<00:40:07.160><c> now</c><00:40:08.160><c> because</c><00:40:09.030><c> of</c><00:40:09.060><c> how</c><00:40:09.390><c> class</c><00:40:09.840><c> loading</c>

00:40:10.160 --> 00:40:10.170 align:start position:0%
classes now because of how class loading
 

00:40:10.170 --> 00:40:13.160 align:start position:0%
classes now because of how class loading
works<00:40:10.530><c> the</c><00:40:11.190><c> module</c><00:40:11.550><c> system</c><00:40:11.820><c> must</c><00:40:12.630><c> enforce</c>

00:40:13.160 --> 00:40:13.170 align:start position:0%
works the module system must enforce
 

00:40:13.170 --> 00:40:15.589 align:start position:0%
works the module system must enforce
certain<00:40:13.470><c> constraints</c><00:40:14.160><c> on</c><00:40:14.609><c> a</c><00:40:14.670><c> layers</c><00:40:15.060><c> module</c>

00:40:15.589 --> 00:40:15.599 align:start position:0%
certain constraints on a layers module
 

00:40:15.599 --> 00:40:18.470 align:start position:0%
certain constraints on a layers module
graph<00:40:15.930><c> and</c><00:40:16.320><c> on</c><00:40:17.070><c> a</c><00:40:17.099><c> layers</c><00:40:17.400><c> mapping</c><00:40:18.150><c> from</c>

00:40:18.470 --> 00:40:18.480 align:start position:0%
graph and on a layers mapping from
 

00:40:18.480 --> 00:40:21.080 align:start position:0%
graph and on a layers mapping from
modules<00:40:18.990><c> to</c><00:40:19.200><c> loaders</c><00:40:19.530><c> let's</c><00:40:20.460><c> talk</c><00:40:20.670><c> about</c><00:40:20.849><c> the</c>

00:40:21.080 --> 00:40:21.090 align:start position:0%
modules to loaders let's talk about the
 

00:40:21.090 --> 00:40:23.720 align:start position:0%
modules to loaders let's talk about the
graph<00:40:21.359><c> first</c><00:40:22.200><c> last</c><00:40:23.099><c> chance</c><00:40:23.400><c> to</c><00:40:23.550><c> take</c><00:40:23.700><c> a</c>

00:40:23.720 --> 00:40:23.730 align:start position:0%
graph first last chance to take a
 

00:40:23.730 --> 00:40:28.370 align:start position:0%
graph first last chance to take a
picture<00:40:23.970><c> and</c><00:40:24.000><c> slide</c><00:40:25.040><c> at</c><00:40:26.040><c> the</c><00:40:26.220><c> back</c><00:40:27.170><c> very</c><00:40:28.170><c> good</c>

00:40:28.370 --> 00:40:28.380 align:start position:0%
picture and slide at the back very good
 

00:40:28.380 --> 00:40:37.099 align:start position:0%
picture and slide at the back very good
Oh<00:40:31.460><c> bit</c><00:40:32.460><c> more</c><00:40:32.609><c> or</c><00:40:32.910><c> more</c><00:40:33.060><c> okay</c><00:40:34.940><c> this</c><00:40:35.940><c> is</c><00:40:36.270><c> the</c>

00:40:37.099 --> 00:40:37.109 align:start position:0%
Oh bit more or more okay this is the
 

00:40:37.109 --> 00:40:42.320 align:start position:0%
Oh bit more or more okay this is the
graph<00:40:37.410><c> of</c><00:40:37.440><c> modules</c><00:40:38.510><c> in</c><00:40:39.510><c> jeddah</c><00:40:39.960><c> k9</c><00:40:40.700><c> what</c><00:40:41.700><c> do</c>

00:40:42.320 --> 00:40:42.330 align:start position:0%
graph of modules in jeddah k9 what do
 

00:40:42.330 --> 00:40:48.530 align:start position:0%
graph of modules in jeddah k9 what do
you<00:40:42.359><c> notice</c><00:40:42.630><c> about</c><00:40:42.990><c> it</c><00:40:44.690><c> it's</c><00:40:45.690><c> a</c><00:40:45.810><c> dag</c><00:40:47.540><c> exactly</c>

00:40:48.530 --> 00:40:48.540 align:start position:0%
you notice about it it's a dag exactly
 

00:40:48.540 --> 00:40:49.550 align:start position:0%
you notice about it it's a dag exactly
the<00:40:48.630><c> same</c><00:40:48.750><c> arts</c><00:40:48.930><c> that</c><00:40:49.080><c> came</c><00:40:49.200><c> from</c><00:40:49.290><c> over</c><00:40:49.470><c> there</c>

00:40:49.550 --> 00:40:49.560 align:start position:0%
the same arts that came from over there
 

00:40:49.560 --> 00:40:51.710 align:start position:0%
the same arts that came from over there
last<00:40:49.890><c> year</c><00:40:50.040><c> I</c><00:40:50.160><c> remember</c><00:40:50.609><c> so</c><00:40:50.970><c> such</c><00:40:51.270><c> a</c><00:40:51.300><c> precise</c>

00:40:51.710 --> 00:40:51.720 align:start position:0%
last year I remember so such a precise
 

00:40:51.720 --> 00:40:57.920 align:start position:0%
last year I remember so such a precise
answer<00:40:53.630><c> okay</c><00:40:55.250><c> it's</c><00:40:56.250><c> a</c><00:40:56.369><c> directed</c><00:40:56.880><c> directed</c><00:40:57.390><c> is</c>

00:40:57.920 --> 00:40:57.930 align:start position:0%
answer okay it's a directed directed is
 

00:40:57.930 --> 00:41:01.220 align:start position:0%
answer okay it's a directed directed is
a<00:40:58.050><c> directed</c><00:40:58.349><c> acyclic</c><00:40:58.530><c> graph</c><00:40:59.010><c> no</c><00:40:59.580><c> cycles</c><00:41:00.230><c> this</c>

00:41:01.220 --> 00:41:01.230 align:start position:0%
a directed acyclic graph no cycles this
 

00:41:01.230 --> 00:41:04.160 align:start position:0%
a directed acyclic graph no cycles this
is<00:41:01.470><c> the</c><00:41:01.770><c> first</c><00:41:02.130><c> and</c><00:41:02.490><c> biggest</c><00:41:02.910><c> constraint</c><00:41:03.720><c> on</c><00:41:04.109><c> a</c>

00:41:04.160 --> 00:41:04.170 align:start position:0%
is the first and biggest constraint on a
 

00:41:04.170 --> 00:41:07.490 align:start position:0%
is the first and biggest constraint on a
module<00:41:04.950><c> graph</c><00:41:05.310><c> it's</c><00:41:06.150><c> taken</c><00:41:06.570><c> almost</c><00:41:06.839><c> a</c><00:41:07.260><c> decade</c>

00:41:07.490 --> 00:41:07.500 align:start position:0%
module graph it's taken almost a decade
 

00:41:07.500 --> 00:41:10.310 align:start position:0%
module graph it's taken almost a decade
to<00:41:08.010><c> detangle</c><00:41:08.520><c> the</c><00:41:08.910><c> tens</c><00:41:09.240><c> of</c><00:41:09.540><c> thousands</c><00:41:10.230><c> of</c>

00:41:10.310 --> 00:41:10.320 align:start position:0%
to detangle the tens of thousands of
 

00:41:10.320 --> 00:41:13.430 align:start position:0%
to detangle the tens of thousands of
classes<00:41:10.859><c> in</c><00:41:11.040><c> the</c><00:41:11.130><c> JDK</c><00:41:11.609><c> to</c><00:41:12.330><c> the</c><00:41:12.450><c> acyclic</c><00:41:12.900><c> and</c>

00:41:13.430 --> 00:41:13.440 align:start position:0%
classes in the JDK to the acyclic and
 

00:41:13.440 --> 00:41:16.040 align:start position:0%
classes in the JDK to the acyclic and
relatively<00:41:14.339><c> sane</c><00:41:14.730><c> state</c><00:41:15.150><c> that</c><00:41:15.480><c> you</c><00:41:15.570><c> see</c><00:41:15.780><c> here</c>

00:41:16.040 --> 00:41:16.050 align:start position:0%
relatively sane state that you see here
 

00:41:16.050 --> 00:41:18.530 align:start position:0%
relatively sane state that you see here
we'd<00:41:16.680><c> like</c><00:41:16.920><c> to</c><00:41:17.070><c> keep</c><00:41:17.220><c> it</c><00:41:17.400><c> that</c><00:41:17.460><c> way</c><00:41:17.609><c> in</c><00:41:18.150><c> fact</c>

00:41:18.530 --> 00:41:18.540 align:start position:0%
we'd like to keep it that way in fact
 

00:41:18.540 --> 00:41:21.530 align:start position:0%
we'd like to keep it that way in fact
one<00:41:19.080><c> of</c><00:41:19.109><c> the</c><00:41:19.349><c> motivations</c><00:41:19.890><c> for</c><00:41:20.490><c> investing</c><00:41:21.300><c> in</c>

00:41:21.530 --> 00:41:21.540 align:start position:0%
one of the motivations for investing in
 

00:41:21.540 --> 00:41:24.290 align:start position:0%
one of the motivations for investing in
modularization<00:41:22.080><c> of</c><00:41:22.740><c> a</c><00:41:22.800><c> code</c><00:41:23.010><c> base</c><00:41:23.250><c> is</c><00:41:23.580><c> the</c>

00:41:24.290 --> 00:41:24.300 align:start position:0%
modularization of a code base is the
 

00:41:24.300 --> 00:41:26.750 align:start position:0%
modularization of a code base is the
knowledge<00:41:24.720><c> that</c><00:41:25.020><c> once</c><00:41:25.530><c> completes</c><00:41:26.070><c> there</c>

00:41:26.750 --> 00:41:26.760 align:start position:0%
knowledge that once completes there
 

00:41:26.760 --> 00:41:29.120 align:start position:0%
knowledge that once completes there
won't<00:41:26.940><c> be</c><00:41:27.210><c> any</c><00:41:27.420><c> backsliding</c><00:41:28.290><c> into</c><00:41:28.680><c> the</c><00:41:28.920><c> ball</c>

00:41:29.120 --> 00:41:29.130 align:start position:0%
won't be any backsliding into the ball
 

00:41:29.130 --> 00:41:34.450 align:start position:0%
won't be any backsliding into the ball
of<00:41:29.310><c> mudd's</c><00:41:29.580><c> the</c><00:41:30.089><c> cyclic</c><00:41:30.660><c> dependencies</c><00:41:31.440><c> allow</c>

00:41:34.450 --> 00:41:34.460 align:start position:0%
 
 

00:41:34.460 --> 00:41:36.620 align:start position:0%
 
we're<00:41:35.460><c> not</c><00:41:35.609><c> the</c><00:41:35.760><c> only</c><00:41:35.790><c> ones</c><00:41:36.030><c> who</c><00:41:36.390><c> think</c><00:41:36.420><c> like</c>

00:41:36.620 --> 00:41:36.630 align:start position:0%
we're not the only ones who think like
 

00:41:36.630 --> 00:41:40.220 align:start position:0%
we're not the only ones who think like
this<00:41:37.220><c> java</c><00:41:38.220><c> application</c><00:41:39.000><c> architecture</c><00:41:39.720><c> is</c><00:41:39.930><c> an</c>

00:41:40.220 --> 00:41:40.230 align:start position:0%
this java application architecture is an
 

00:41:40.230 --> 00:41:43.820 align:start position:0%
this java application architecture is an
outstanding<00:41:40.650><c> book</c><00:41:41.280><c> about</c><00:41:41.910><c> modularity</c><00:41:42.450><c> in</c><00:41:43.440><c> a</c>

00:41:43.820 --> 00:41:43.830 align:start position:0%
outstanding book about modularity in a
 

00:41:43.830 --> 00:41:46.700 align:start position:0%
outstanding book about modularity in a
section<00:41:44.280><c> titled</c><00:41:44.570><c> cyclic</c><00:41:45.570><c> dependences</c><00:41:46.290><c> the</c>

00:41:46.700 --> 00:41:46.710 align:start position:0%
section titled cyclic dependences the
 

00:41:46.710 --> 00:41:50.300 align:start position:0%
section titled cyclic dependences the
death<00:41:46.920><c> knell</c><00:41:47.190><c> it</c><00:41:48.089><c> says</c><00:41:48.800><c> excessive</c><00:41:49.800><c> dependence</c>

00:41:50.300 --> 00:41:50.310 align:start position:0%
death knell it says excessive dependence
 

00:41:50.310 --> 00:41:53.089 align:start position:0%
death knell it says excessive dependence
is<00:41:50.460><c> about</c><00:41:50.760><c> but</c><00:41:51.540><c> cyclic</c><00:41:52.140><c> dependencies</c><00:41:52.890><c> are</c>

00:41:53.089 --> 00:41:53.099 align:start position:0%
is about but cyclic dependencies are
 

00:41:53.099 --> 00:41:55.060 align:start position:0%
is about but cyclic dependencies are
especially<00:41:53.609><c> bad</c>

00:41:55.060 --> 00:41:55.070 align:start position:0%
especially bad
 

00:41:55.070 --> 00:41:58.310 align:start position:0%
especially bad
it<00:41:56.070><c> goes</c><00:41:56.280><c> on</c><00:41:56.430><c> to</c><00:41:56.580><c> say</c><00:41:57.050><c> generally</c><00:41:58.050><c> speaking</c>

00:41:58.310 --> 00:41:58.320 align:start position:0%
it goes on to say generally speaking
 

00:41:58.320 --> 00:42:00.890 align:start position:0%
it goes on to say generally speaking
cycles<00:41:58.830><c> are</c><00:41:58.950><c> always</c><00:41:59.280><c> bad</c><00:41:59.660><c> however</c><00:42:00.660><c> some</c>

00:42:00.890 --> 00:42:00.900 align:start position:0%
cycles are always bad however some
 

00:42:00.900 --> 00:42:03.230 align:start position:0%
cycles are always bad however some
cycles<00:42:01.290><c> are</c><00:42:01.440><c> worse</c><00:42:01.620><c> than</c><00:42:01.650><c> others</c><00:42:02.240><c> cycles</c>

00:42:03.230 --> 00:42:03.240 align:start position:0%
cycles are worse than others cycles
 

00:42:03.240 --> 00:42:05.330 align:start position:0%
cycles are worse than others cycles
among<00:42:03.510><c> classes</c><00:42:04.050><c> are</c><00:42:04.170><c> tolerable</c><00:42:04.710><c> assuming</c>

00:42:05.330 --> 00:42:05.340 align:start position:0%
among classes are tolerable assuming
 

00:42:05.340 --> 00:42:06.890 align:start position:0%
among classes are tolerable assuming
they<00:42:05.460><c> don't</c><00:42:05.640><c> cause</c><00:42:05.910><c> cycles</c><00:42:06.450><c> among</c><00:42:06.780><c> the</c>

00:42:06.890 --> 00:42:06.900 align:start position:0%
they don't cause cycles among the
 

00:42:06.900 --> 00:42:09.160 align:start position:0%
they don't cause cycles among the
packages<00:42:07.410><c> or</c><00:42:07.590><c> modules</c><00:42:08.010><c> containing</c><00:42:08.520><c> them</c>

00:42:09.160 --> 00:42:09.170 align:start position:0%
packages or modules containing them
 

00:42:09.170 --> 00:42:11.660 align:start position:0%
packages or modules containing them
cycles<00:42:10.170><c> among</c><00:42:10.410><c> packages</c><00:42:10.920><c> may</c><00:42:11.100><c> also</c><00:42:11.340><c> be</c>

00:42:11.660 --> 00:42:11.670 align:start position:0%
cycles among packages may also be
 

00:42:11.670 --> 00:42:13.790 align:start position:0%
cycles among packages may also be
tolerable<00:42:12.330><c> tolerable</c><00:42:12.810><c> assuming</c><00:42:13.650><c> they</c><00:42:13.770><c> don't</c>

00:42:13.790 --> 00:42:13.800 align:start position:0%
tolerable tolerable assuming they don't
 

00:42:13.800 --> 00:42:15.770 align:start position:0%
tolerable tolerable assuming they don't
cause<00:42:14.160><c> cycles</c><00:42:14.640><c> among</c><00:42:15.270><c> the</c><00:42:15.390><c> modules</c>

00:42:15.770 --> 00:42:15.780 align:start position:0%
cause cycles among the modules
 

00:42:15.780 --> 00:42:18.320 align:start position:0%
cause cycles among the modules
containing<00:42:16.290><c> them</c><00:42:16.490><c> module</c><00:42:17.490><c> relationships</c>

00:42:18.320 --> 00:42:18.330 align:start position:0%
containing them module relationships
 

00:42:18.330 --> 00:42:22.790 align:start position:0%
containing them module relationships
must<00:42:18.900><c> never</c><00:42:19.290><c> be</c><00:42:19.470><c> cyclic</c><00:42:20.010><c> this</c><00:42:20.400><c> book</c><00:42:20.640><c> is</c><00:42:21.800><c> from</c>

00:42:22.790 --> 00:42:22.800 align:start position:0%
must never be cyclic this book is from
 

00:42:22.800 --> 00:42:25.880 align:start position:0%
must never be cyclic this book is from
years<00:42:23.160><c> ago</c><00:42:23.720><c> nothing</c><00:42:24.720><c> to</c><00:42:24.810><c> do</c><00:42:24.930><c> with</c><00:42:25.140><c> the</c><00:42:25.680><c> Java</c>

00:42:25.880 --> 00:42:25.890 align:start position:0%
years ago nothing to do with the Java
 

00:42:25.890 --> 00:42:29.170 align:start position:0%
years ago nothing to do with the Java
module<00:42:26.250><c> system</c><00:42:26.460><c> but</c><00:42:26.790><c> this</c><00:42:26.970><c> is</c><00:42:27.150><c> good</c><00:42:27.330><c> advice</c>

00:42:29.170 --> 00:42:29.180 align:start position:0%
module system but this is good advice
 

00:42:29.180 --> 00:42:31.970 align:start position:0%
module system but this is good advice
let's<00:42:30.180><c> turn</c><00:42:30.480><c> to</c><00:42:30.510><c> another</c><00:42:30.960><c> constraint</c><00:42:31.650><c> on</c>

00:42:31.970 --> 00:42:31.980 align:start position:0%
let's turn to another constraint on
 

00:42:31.980 --> 00:42:37.280 align:start position:0%
let's turn to another constraint on
module<00:42:32.790><c> graphs</c><00:42:34.940><c> the</c><00:42:35.940><c> second</c><00:42:36.390><c> constraint</c><00:42:36.900><c> on</c>

00:42:37.280 --> 00:42:37.290 align:start position:0%
module graphs the second constraint on
 

00:42:37.290 --> 00:42:40.880 align:start position:0%
module graphs the second constraint on
the<00:42:38.100><c> module</c><00:42:38.220><c> graph</c><00:42:38.670><c> that's</c><00:42:39.420><c> going</c><00:42:39.570><c> to</c><00:42:39.690><c> be</c><00:42:39.890><c> the</c>

00:42:40.880 --> 00:42:40.890 align:start position:0%
the module graph that's going to be the
 

00:42:40.890 --> 00:42:44.260 align:start position:0%
the module graph that's going to be the
foundation<00:42:41.220><c> of</c><00:42:41.430><c> the</c><00:42:41.490><c> layer</c><00:42:41.730><c> is</c><00:42:42.560><c> that</c><00:42:43.560><c> a</c><00:42:43.620><c> module</c>

00:42:44.260 --> 00:42:44.270 align:start position:0%
foundation of the layer is that a module
 

00:42:44.270 --> 00:42:48.650 align:start position:0%
foundation of the layer is that a module
must<00:42:45.270><c> read</c><00:42:45.600><c> only</c><00:42:46.050><c> one</c><00:42:46.740><c> module</c><00:42:47.010><c> that</c><00:42:47.730><c> exports</c><00:42:48.360><c> a</c>

00:42:48.650 --> 00:42:48.660 align:start position:0%
must read only one module that exports a
 

00:42:48.660 --> 00:42:52.280 align:start position:0%
must read only one module that exports a
package<00:42:49.320><c> of</c><00:42:49.440><c> a</c><00:42:49.530><c> given</c><00:42:49.770><c> name</c><00:42:49.940><c> if</c><00:42:50.940><c> a</c><00:42:51.930><c> module</c>

00:42:52.280 --> 00:42:52.290 align:start position:0%
package of a given name if a module
 

00:42:52.290 --> 00:42:54.920 align:start position:0%
package of a given name if a module
could<00:42:52.650><c> read</c><00:42:52.890><c> more</c><00:42:53.520><c> than</c><00:42:53.820><c> one</c><00:42:54.120><c> module</c><00:42:54.480><c> that</c>

00:42:54.920 --> 00:42:54.930 align:start position:0%
could read more than one module that
 

00:42:54.930 --> 00:42:58.460 align:start position:0%
could read more than one module that
exports<00:42:55.530><c> p</c><00:42:55.800><c> as</c><00:42:56.070><c> x</c><00:42:57.060><c> is</c><00:42:57.300><c> trying</c><00:42:57.600><c> to</c><00:42:57.750><c> do</c><00:42:57.900><c> here</c><00:42:58.290><c> in</c>

00:42:58.460 --> 00:42:58.470 align:start position:0%
exports p as x is trying to do here in
 

00:42:58.470 --> 00:43:02.960 align:start position:0%
exports p as x is trying to do here in
which<00:42:59.160><c> module</c><00:42:59.670><c> would</c><00:43:00.090><c> P</c><00:43:00.390><c> be</c><00:43:00.500><c> accessed</c><00:43:01.970><c> there's</c>

00:43:02.960 --> 00:43:02.970 align:start position:0%
which module would P be accessed there's
 

00:43:02.970 --> 00:43:05.150 align:start position:0%
which module would P be accessed there's
no<00:43:03.150><c> answer</c><00:43:03.330><c> the</c><00:43:03.990><c> module</c><00:43:04.320><c> graph</c><00:43:04.590><c> is</c><00:43:04.830><c> just</c>

00:43:05.150 --> 00:43:05.160 align:start position:0%
no answer the module graph is just
 

00:43:05.160 --> 00:43:08.000 align:start position:0%
no answer the module graph is just
broken<00:43:05.700><c> so</c><00:43:06.450><c> we</c><00:43:06.600><c> defend</c><00:43:06.870><c> against</c><00:43:07.110><c> that</c><00:43:07.320><c> only</c>

00:43:08.000 --> 00:43:08.010 align:start position:0%
broken so we defend against that only
 

00:43:08.010 --> 00:43:09.650 align:start position:0%
broken so we defend against that only
module<00:43:08.520><c> graphs</c><00:43:08.820><c> which</c><00:43:09.120><c> obey</c><00:43:09.420><c> this</c>

00:43:09.650 --> 00:43:09.660 align:start position:0%
module graphs which obey this
 

00:43:09.660 --> 00:43:13.550 align:start position:0%
module graphs which obey this
constraints<00:43:10.350><c> and</c><00:43:10.550><c> have</c><00:43:11.550><c> no</c><00:43:11.730><c> cycles</c><00:43:12.210><c> can</c><00:43:13.110><c> be</c>

00:43:13.550 --> 00:43:13.560 align:start position:0%
constraints and have no cycles can be
 

00:43:13.560 --> 00:43:16.850 align:start position:0%
constraints and have no cycles can be
turned<00:43:13.800><c> into</c><00:43:14.160><c> a</c><00:43:14.370><c> layer</c><00:43:15.260><c> that's</c><00:43:16.260><c> really</c><00:43:16.680><c> what</c>

00:43:16.850 --> 00:43:16.860 align:start position:0%
turned into a layer that's really what
 

00:43:16.860 --> 00:43:19.150 align:start position:0%
turned into a layer that's really what
we<00:43:17.040><c> mean</c><00:43:17.280><c> by</c><00:43:17.310><c> reliable</c><00:43:18.030><c> dependencies</c>

00:43:19.150 --> 00:43:19.160 align:start position:0%
we mean by reliable dependencies
 

00:43:19.160 --> 00:43:22.130 align:start position:0%
we mean by reliable dependencies
dependencies<00:43:20.160><c> are</c><00:43:20.370><c> reliable</c><00:43:21.060><c> when</c><00:43:21.720><c> a</c><00:43:21.750><c> module</c>

00:43:22.130 --> 00:43:22.140 align:start position:0%
dependencies are reliable when a module
 

00:43:22.140 --> 00:43:24.290 align:start position:0%
dependencies are reliable when a module
can<00:43:22.410><c> access</c><00:43:22.770><c> only</c><00:43:22.920><c> one</c><00:43:23.340><c> version</c><00:43:23.670><c> of</c><00:43:24.000><c> a</c><00:43:24.090><c> package</c>

00:43:24.290 --> 00:43:24.300 align:start position:0%
can access only one version of a package
 

00:43:24.300 --> 00:43:28.580 align:start position:0%
can access only one version of a package
at<00:43:24.810><c> a</c><00:43:25.170><c> time</c><00:43:25.850><c> there</c><00:43:26.850><c> are</c><00:43:27.030><c> no</c><00:43:27.210><c> split</c><00:43:28.020><c> packages</c>

00:43:28.580 --> 00:43:28.590 align:start position:0%
at a time there are no split packages
 

00:43:28.590 --> 00:43:31.310 align:start position:0%
at a time there are no split packages
like<00:43:29.250><c> you</c><00:43:29.460><c> get</c><00:43:29.640><c> when</c><00:43:29.880><c> multiple</c><00:43:30.420><c> jars</c><00:43:30.750><c> on</c><00:43:31.050><c> the</c>

00:43:31.310 --> 00:43:31.320 align:start position:0%
like you get when multiple jars on the
 

00:43:31.320 --> 00:43:33.950 align:start position:0%
like you get when multiple jars on the
classpath<00:43:31.830><c> contain</c><00:43:32.790><c> potentially</c><00:43:33.420><c> different</c>

00:43:33.950 --> 00:43:33.960 align:start position:0%
classpath contain potentially different
 

00:43:33.960 --> 00:43:37.970 align:start position:0%
classpath contain potentially different
versions<00:43:34.620><c> of</c><00:43:34.770><c> the</c><00:43:34.920><c> same</c><00:43:35.100><c> package</c><00:43:36.530><c> now</c><00:43:37.530><c> you</c>

00:43:37.970 --> 00:43:37.980 align:start position:0%
versions of the same package now you
 

00:43:37.980 --> 00:43:39.830 align:start position:0%
versions of the same package now you
might<00:43:38.130><c> be</c><00:43:38.280><c> wondering</c><00:43:38.310><c> if</c><00:43:38.880><c> it's</c><00:43:39.360><c> possible</c><00:43:39.420><c> for</c>

00:43:39.830 --> 00:43:39.840 align:start position:0%
might be wondering if it's possible for
 

00:43:39.840 --> 00:43:44.030 align:start position:0%
might be wondering if it's possible for
X<00:43:40.290><c> to</c><00:43:41.220><c> read</c><00:43:41.430><c> version</c><00:43:42.090><c> 1</c><00:43:42.300><c> of</c><00:43:42.330><c> Y</c><00:43:42.830><c> while</c><00:43:43.830><c> at</c><00:43:44.010><c> the</c>

00:43:44.030 --> 00:43:44.040 align:start position:0%
X to read version 1 of Y while at the
 

00:43:44.040 --> 00:43:46.760 align:start position:0%
X to read version 1 of Y while at the
same<00:43:44.280><c> time</c><00:43:44.550><c> another</c><00:43:45.270><c> module</c><00:43:45.570><c> reads</c><00:43:46.110><c> version</c><00:43:46.530><c> 2</c>

00:43:46.760 --> 00:43:46.770 align:start position:0%
same time another module reads version 2
 

00:43:46.770 --> 00:43:50.360 align:start position:0%
same time another module reads version 2
of<00:43:46.800><c> why</c><00:43:47.150><c> after</c><00:43:48.150><c> all</c><00:43:48.510><c> X</c><00:43:48.930><c> and</c><00:43:49.590><c> the</c><00:43:49.770><c> other</c><00:43:49.950><c> module</c>

00:43:50.360 --> 00:43:50.370 align:start position:0%
of why after all X and the other module
 

00:43:50.370 --> 00:43:52.420 align:start position:0%
of why after all X and the other module
would<00:43:50.580><c> each</c><00:43:50.820><c> read</c><00:43:51.210><c> only</c><00:43:51.690><c> one</c><00:43:52.170><c> module</c>

00:43:52.420 --> 00:43:52.430 align:start position:0%
would each read only one module
 

00:43:52.430 --> 00:43:56.900 align:start position:0%
would each read only one module
exporting<00:43:53.430><c> p</c><00:43:54.470><c> the</c><00:43:55.470><c> answer</c><00:43:55.860><c> is</c><00:43:56.010><c> that</c><00:43:56.340><c> it's</c><00:43:56.820><c> not</c>

00:43:56.900 --> 00:43:56.910 align:start position:0%
exporting p the answer is that it's not
 

00:43:56.910 --> 00:43:59.750 align:start position:0%
exporting p the answer is that it's not
possible<00:43:57.300><c> because</c><00:43:58.260><c> it</c><00:43:58.560><c> can</c><00:43:58.710><c> only</c><00:43:58.950><c> work</c><00:43:59.250><c> safely</c>

00:43:59.750 --> 00:43:59.760 align:start position:0%
possible because it can only work safely
 

00:43:59.760 --> 00:44:02.480 align:start position:0%
possible because it can only work safely
in<00:43:59.970><c> certain</c><00:44:00.330><c> scenarios</c><00:44:00.480><c> and</c><00:44:01.200><c> outside</c><00:44:02.190><c> those</c>

00:44:02.480 --> 00:44:02.490 align:start position:0%
in certain scenarios and outside those
 

00:44:02.490 --> 00:44:04.700 align:start position:0%
in certain scenarios and outside those
scenarios<00:44:02.820><c> it's</c><00:44:03.390><c> not</c><00:44:03.600><c> clear</c><00:44:03.870><c> that</c><00:44:03.900><c> supporting</c>

00:44:04.700 --> 00:44:04.710 align:start position:0%
scenarios it's not clear that supporting
 

00:44:04.710 --> 00:44:07.700 align:start position:0%
scenarios it's not clear that supporting
it<00:44:04.860><c> out</c><00:44:05.040><c> of</c><00:44:05.490><c> the</c><00:44:05.580><c> box</c><00:44:05.790><c> which</c><00:44:06.210><c> is</c><00:44:06.240><c> to</c><00:44:06.510><c> say</c><00:44:06.540><c> in</c><00:44:07.230><c> the</c>

00:44:07.700 --> 00:44:07.710 align:start position:0%
it out of the box which is to say in the
 

00:44:07.710 --> 00:44:08.510 align:start position:0%
it out of the box which is to say in the
Java<00:44:07.950><c> launch</c>

00:44:08.510 --> 00:44:08.520 align:start position:0%
Java launch
 

00:44:08.520 --> 00:44:11.080 align:start position:0%
Java launch
the<00:44:08.880><c> one</c><00:44:09.030><c> that</c><00:44:09.180><c> creates</c><00:44:09.510><c> the</c><00:44:09.720><c> class</c><00:44:09.930><c> loaders</c>

00:44:11.080 --> 00:44:11.090 align:start position:0%
the one that creates the class loaders
 

00:44:11.090 --> 00:44:13.160 align:start position:0%
the one that creates the class loaders
it's<00:44:12.090><c> not</c><00:44:12.240><c> clear</c><00:44:12.390><c> that</c><00:44:12.510><c> supporting</c><00:44:12.990><c> it</c><00:44:13.080><c> out</c>

00:44:13.160 --> 00:44:13.170 align:start position:0%
it's not clear that supporting it out
 

00:44:13.170 --> 00:44:16.070 align:start position:0%
it's not clear that supporting it out
the<00:44:13.290><c> box</c><00:44:13.440><c> is</c><00:44:13.830><c> worthwhile</c><00:44:14.780><c> but</c><00:44:15.780><c> you</c><00:44:15.840><c> can</c><00:44:15.990><c> all</c>

00:44:16.070 --> 00:44:16.080 align:start position:0%
the box is worthwhile but you can all
 

00:44:16.080 --> 00:44:17.540 align:start position:0%
the box is worthwhile but you can all
ask<00:44:16.200><c> for</c><00:44:16.410><c> questions</c><00:44:16.710><c> about</c><00:44:16.920><c> that</c><00:44:17.100><c> in</c><00:44:17.280><c> ten</c>

00:44:17.540 --> 00:44:17.550 align:start position:0%
ask for questions about that in ten
 

00:44:17.550 --> 00:44:23.660 align:start position:0%
ask for questions about that in ten
minutes<00:44:17.640><c> time</c><00:44:21.500><c> recall</c><00:44:22.500><c> that</c><00:44:22.830><c> a</c><00:44:23.070><c> layer</c>

00:44:23.660 --> 00:44:23.670 align:start position:0%
minutes time recall that a layer
 

00:44:23.670 --> 00:44:26.240 align:start position:0%
minutes time recall that a layer
includes<00:44:24.450><c> a</c><00:44:24.540><c> module</c><00:44:24.840><c> graph</c><00:44:25.170><c> for</c><00:44:25.800><c> which</c><00:44:25.920><c> we</c><00:44:26.070><c> saw</c>

00:44:26.240 --> 00:44:26.250 align:start position:0%
includes a module graph for which we saw
 

00:44:26.250 --> 00:44:28.520 align:start position:0%
includes a module graph for which we saw
two<00:44:26.580><c> constraints</c><00:44:26.940><c> and</c><00:44:27.330><c> a</c><00:44:28.080><c> mapping</c><00:44:28.500><c> from</c>

00:44:28.520 --> 00:44:28.530 align:start position:0%
two constraints and a mapping from
 

00:44:28.530 --> 00:44:31.610 align:start position:0%
two constraints and a mapping from
modules<00:44:29.220><c> two</c><00:44:29.430><c> loaders</c><00:44:29.810><c> the</c><00:44:30.810><c> main</c><00:44:31.050><c> constraint</c>

00:44:31.610 --> 00:44:31.620 align:start position:0%
modules two loaders the main constraint
 

00:44:31.620 --> 00:44:34.190 align:start position:0%
modules two loaders the main constraint
on<00:44:31.830><c> the</c><00:44:32.250><c> mapping</c><00:44:32.760><c> is</c><00:44:32.970><c> that</c><00:44:33.690><c> if</c><00:44:33.810><c> different</c>

00:44:34.190 --> 00:44:34.200 align:start position:0%
on the mapping is that if different
 

00:44:34.200 --> 00:44:37.010 align:start position:0%
on the mapping is that if different
modules<00:44:34.710><c> in</c><00:44:35.040><c> the</c><00:44:35.370><c> graph</c><00:44:35.640><c> have</c><00:44:36.240><c> a</c><00:44:36.270><c> class</c><00:44:36.630><c> called</c>

00:44:37.010 --> 00:44:37.020 align:start position:0%
modules in the graph have a class called
 

00:44:37.020 --> 00:44:39.500 align:start position:0%
modules in the graph have a class called
C<00:44:37.320><c> then</c><00:44:37.890><c> those</c><00:44:38.070><c> modules</c><00:44:38.340><c> must</c><00:44:38.940><c> be</c><00:44:39.060><c> mapped</c><00:44:39.300><c> to</c>

00:44:39.500 --> 00:44:39.510 align:start position:0%
C then those modules must be mapped to
 

00:44:39.510 --> 00:44:41.450 align:start position:0%
C then those modules must be mapped to
different<00:44:39.660><c> loaders</c><00:44:40.260><c> this</c><00:44:40.950><c> is</c><00:44:41.160><c> the</c>

00:44:41.450 --> 00:44:41.460 align:start position:0%
different loaders this is the
 

00:44:41.460 --> 00:44:43.190 align:start position:0%
different loaders this is the
fundamental<00:44:41.790><c> limit</c><00:44:42.390><c> in</c><00:44:42.480><c> class</c><00:44:42.660><c> loading</c><00:44:43.080><c> a</c>

00:44:43.190 --> 00:44:43.200 align:start position:0%
fundamental limit in class loading a
 

00:44:43.200 --> 00:44:44.930 align:start position:0%
fundamental limit in class loading a
class<00:44:43.440><c> loader</c><00:44:43.710><c> can</c><00:44:43.950><c> only</c><00:44:44.070><c> create</c><00:44:44.370><c> one</c><00:44:44.670><c> class</c>

00:44:44.930 --> 00:44:44.940 align:start position:0%
class loader can only create one class
 

00:44:44.940 --> 00:44:48.470 align:start position:0%
class loader can only create one class
called<00:44:45.300><c> see</c><00:44:45.540><c> more</c><00:44:46.530><c> conservatively</c><00:44:47.300><c> we</c><00:44:48.300><c> say</c>

00:44:48.470 --> 00:44:48.480 align:start position:0%
called see more conservatively we say
 

00:44:48.480 --> 00:44:50.450 align:start position:0%
called see more conservatively we say
that<00:44:48.510><c> if</c><00:44:48.750><c> different</c><00:44:49.080><c> modules</c><00:44:49.530><c> have</c><00:44:50.010><c> the</c><00:44:50.250><c> same</c>

00:44:50.450 --> 00:44:50.460 align:start position:0%
that if different modules have the same
 

00:44:50.460 --> 00:44:53.300 align:start position:0%
that if different modules have the same
package<00:44:50.960><c> not</c><00:44:51.960><c> just</c><00:44:52.020><c> class</c><00:44:52.350><c> then</c><00:44:53.130><c> those</c>

00:44:53.300 --> 00:44:53.310 align:start position:0%
package not just class then those
 

00:44:53.310 --> 00:44:55.220 align:start position:0%
package not just class then those
modules<00:44:53.550><c> must</c><00:44:54.150><c> be</c><00:44:54.300><c> mapped</c><00:44:54.540><c> to</c><00:44:54.900><c> different</c>

00:44:55.220 --> 00:44:55.230 align:start position:0%
modules must be mapped to different
 

00:44:55.230 --> 00:45:00.770 align:start position:0%
modules must be mapped to different
loaders<00:44:55.830><c> of</c><00:44:56.340><c> the</c><00:44:56.580><c> layer</c><00:44:59.210><c> the</c><00:45:00.210><c> mapping</c><00:45:00.600><c> from</c>

00:45:00.770 --> 00:45:00.780 align:start position:0%
loaders of the layer the mapping from
 

00:45:00.780 --> 00:45:02.720 align:start position:0%
loaders of the layer the mapping from
modules<00:45:01.170><c> two</c><00:45:01.350><c> loaders</c><00:45:01.560><c> has</c><00:45:02.280><c> another</c>

00:45:02.720 --> 00:45:02.730 align:start position:0%
modules two loaders has another
 

00:45:02.730 --> 00:45:04.880 align:start position:0%
modules two loaders has another
constraint<00:45:03.300><c> that's</c><00:45:03.660><c> not</c><00:45:03.840><c> practical</c><00:45:04.110><c> to</c><00:45:04.500><c> check</c>

00:45:04.880 --> 00:45:04.890 align:start position:0%
constraint that's not practical to check
 

00:45:04.890 --> 00:45:06.950 align:start position:0%
constraint that's not practical to check
though<00:45:05.370><c> because</c><00:45:05.670><c> it</c><00:45:05.910><c> concerns</c><00:45:06.300><c> how</c><00:45:06.600><c> load</c><00:45:06.810><c> is</c>

00:45:06.950 --> 00:45:06.960 align:start position:0%
though because it concerns how load is
 

00:45:06.960 --> 00:45:09.470 align:start position:0%
though because it concerns how load is
behavior<00:45:07.290><c> on</c><00:45:07.500><c> time</c><00:45:07.740><c> it's</c><00:45:08.280><c> that</c><00:45:08.640><c> the</c><00:45:09.030><c> loaders</c>

00:45:09.470 --> 00:45:09.480 align:start position:0%
behavior on time it's that the loaders
 

00:45:09.480 --> 00:45:11.230 align:start position:0%
behavior on time it's that the loaders
must<00:45:09.780><c> delegate</c><00:45:10.230><c> to</c><00:45:10.500><c> each</c><00:45:10.620><c> other</c><00:45:10.890><c> in</c>

00:45:11.230 --> 00:45:11.240 align:start position:0%
must delegate to each other in
 

00:45:11.240 --> 00:45:13.910 align:start position:0%
must delegate to each other in
accordance<00:45:12.240><c> with</c><00:45:12.390><c> the</c><00:45:12.630><c> reads</c><00:45:12.870><c> edges</c><00:45:13.320><c> of</c><00:45:13.500><c> the</c>

00:45:13.910 --> 00:45:13.920 align:start position:0%
accordance with the reads edges of the
 

00:45:13.920 --> 00:45:16.040 align:start position:0%
accordance with the reads edges of the
module<00:45:14.280><c> graph</c><00:45:14.550><c> the</c><00:45:15.120><c> reason</c><00:45:15.420><c> is</c><00:45:15.510><c> obvious</c><00:45:15.540><c> if</c>

00:45:16.040 --> 00:45:16.050 align:start position:0%
module graph the reason is obvious if
 

00:45:16.050 --> 00:45:19.730 align:start position:0%
module graph the reason is obvious if
module<00:45:16.740><c> X</c><00:45:17.070><c> reads</c><00:45:17.820><c> module</c><00:45:18.300><c> y</c><00:45:18.570><c> then</c><00:45:19.410><c> in</c><00:45:19.590><c> order</c>

00:45:19.730 --> 00:45:19.740 align:start position:0%
module X reads module y then in order
 

00:45:19.740 --> 00:45:22.790 align:start position:0%
module X reads module y then in order
for<00:45:20.100><c> X's</c><00:45:20.640><c> classes</c><00:45:21.210><c> in</c><00:45:21.330><c> one</c><00:45:21.510><c> loader</c><00:45:21.750><c> to</c><00:45:22.350><c> access</c>

00:45:22.790 --> 00:45:22.800 align:start position:0%
for X's classes in one loader to access
 

00:45:22.800 --> 00:45:25.760 align:start position:0%
for X's classes in one loader to access
wise<00:45:23.040><c> classes</c><00:45:23.670><c> in</c><00:45:23.880><c> another</c><00:45:24.450><c> loader</c><00:45:24.770><c> X's</c>

00:45:25.760 --> 00:45:25.770 align:start position:0%
wise classes in another loader X's
 

00:45:25.770 --> 00:45:28.040 align:start position:0%
wise classes in another loader X's
loader<00:45:26.010><c> must</c><00:45:26.610><c> delegate</c><00:45:27.000><c> to</c><00:45:27.180><c> wise</c><00:45:27.360><c> loader</c><00:45:27.690><c> just</c>

00:45:28.040 --> 00:45:28.050 align:start position:0%
loader must delegate to wise loader just
 

00:45:28.050 --> 00:45:31.340 align:start position:0%
loader must delegate to wise loader just
just<00:45:28.290><c> to</c><00:45:28.380><c> find</c><00:45:28.620><c> the</c><00:45:28.740><c> classes</c><00:45:29.780><c> even</c><00:45:30.780><c> before</c><00:45:31.080><c> you</c>

00:45:31.340 --> 00:45:31.350 align:start position:0%
just to find the classes even before you
 

00:45:31.350 --> 00:45:36.560 align:start position:0%
just to find the classes even before you
can<00:45:31.530><c> start</c><00:45:31.680><c> worrying</c><00:45:32.100><c> about</c><00:45:32.160><c> access</c><00:45:33.140><c> as</c><00:45:35.570><c> their</c>

00:45:36.560 --> 00:45:36.570 align:start position:0%
can start worrying about access as their
 

00:45:36.570 --> 00:45:40.310 align:start position:0%
can start worrying about access as their
name<00:45:36.600><c> suggests</c><00:45:37.100><c> layers</c><00:45:38.100><c> can</c><00:45:38.760><c> be</c><00:45:38.820><c> layered</c><00:45:39.320><c> when</c>

00:45:40.310 --> 00:45:40.320 align:start position:0%
name suggests layers can be layered when
 

00:45:40.320 --> 00:45:42.830 align:start position:0%
name suggests layers can be layered when
a<00:45:40.350><c> graph</c><00:45:40.680><c> of</c><00:45:40.980><c> modules</c><00:45:41.700><c> is</c><00:45:41.970><c> resolved</c><00:45:42.630><c> it's</c>

00:45:42.830 --> 00:45:42.840 align:start position:0%
a graph of modules is resolved it's
 

00:45:42.840 --> 00:45:45.010 align:start position:0%
a graph of modules is resolved it's
actually<00:45:42.990><c> resolved</c><00:45:43.800><c> against</c><00:45:44.190><c> a</c><00:45:44.280><c> parent</c><00:45:44.730><c> layer</c>

00:45:45.010 --> 00:45:45.020 align:start position:0%
actually resolved against a parent layer
 

00:45:45.020 --> 00:45:47.990 align:start position:0%
actually resolved against a parent layer
then<00:45:46.020><c> when</c><00:45:46.560><c> the</c><00:45:46.680><c> graph</c><00:45:46.950><c> helps</c><00:45:47.460><c> to</c><00:45:47.610><c> create</c><00:45:47.790><c> a</c>

00:45:47.990 --> 00:45:48.000 align:start position:0%
then when the graph helps to create a
 

00:45:48.000 --> 00:45:50.600 align:start position:0%
then when the graph helps to create a
new<00:45:48.330><c> layer</c><00:45:48.540><c> the</c><00:45:49.020><c> new</c><00:45:49.260><c> layer</c><00:45:49.470><c> picks</c><00:45:49.830><c> up</c><00:45:50.070><c> the</c>

00:45:50.600 --> 00:45:50.610 align:start position:0%
new layer the new layer picks up the
 

00:45:50.610 --> 00:45:53.540 align:start position:0%
new layer the new layer picks up the
parent<00:45:50.970><c> layer</c><00:45:51.470><c> this</c><00:45:52.470><c> allows</c><00:45:52.800><c> a</c><00:45:52.830><c> graph</c><00:45:53.280><c> of</c>

00:45:53.540 --> 00:45:53.550 align:start position:0%
parent layer this allows a graph of
 

00:45:53.550 --> 00:45:55.940 align:start position:0%
parent layer this allows a graph of
modules<00:45:54.030><c> to</c><00:45:54.300><c> have</c><00:45:54.480><c> dangling</c><00:45:54.990><c> references</c><00:45:55.710><c> that</c>

00:45:55.940 --> 00:45:55.950 align:start position:0%
modules to have dangling references that
 

00:45:55.950 --> 00:45:59.210 align:start position:0%
modules to have dangling references that
is<00:45:56.070><c> requires</c><00:45:56.850><c> clauses</c><00:45:57.660><c> for</c><00:45:57.930><c> modules</c><00:45:58.500><c> that</c><00:45:58.860><c> the</c>

00:45:59.210 --> 00:45:59.220 align:start position:0%
is requires clauses for modules that the
 

00:45:59.220 --> 00:46:01.490 align:start position:0%
is requires clauses for modules that the
module<00:45:59.520><c> system</c><00:45:59.880><c> will</c><00:46:00.180><c> find</c><00:46:00.480><c> in</c><00:46:00.660><c> a</c><00:46:00.780><c> parent</c>

00:46:01.490 --> 00:46:01.500 align:start position:0%
module system will find in a parent
 

00:46:01.500 --> 00:46:05.050 align:start position:0%
module system will find in a parent
layer<00:46:01.940><c> during</c><00:46:02.940><c> resolution</c><00:46:03.510><c> on</c><00:46:03.660><c> the</c><00:46:04.560><c> Left</c>

00:46:05.050 --> 00:46:05.060 align:start position:0%
layer during resolution on the Left
 

00:46:05.060 --> 00:46:08.450 align:start position:0%
layer during resolution on the Left
resolution<00:46:06.060><c> has</c><00:46:06.360><c> set</c><00:46:06.900><c> up</c><00:46:07.020><c> not</c><00:46:07.560><c> only</c><00:46:07.710><c> a</c><00:46:08.010><c> reads</c>

00:46:08.450 --> 00:46:08.460 align:start position:0%
resolution has set up not only a reads
 

00:46:08.460 --> 00:46:11.210 align:start position:0%
resolution has set up not only a reads
edge<00:46:08.760><c> between</c><00:46:09.090><c> mott</c><00:46:09.840><c> between</c><00:46:10.140><c> modules</c><00:46:10.320><c> in</c><00:46:10.830><c> one</c>

00:46:11.210 --> 00:46:11.220 align:start position:0%
edge between mott between modules in one
 

00:46:11.220 --> 00:46:13.460 align:start position:0%
edge between mott between modules in one
layer<00:46:11.430><c> the</c><00:46:11.730><c> horizontal</c><00:46:12.300><c> one</c><00:46:12.420><c> but</c><00:46:13.170><c> also</c><00:46:13.320><c> a</c>

00:46:13.460 --> 00:46:13.470 align:start position:0%
layer the horizontal one but also a
 

00:46:13.470 --> 00:46:15.950 align:start position:0%
layer the horizontal one but also a
reads<00:46:13.830><c> edge</c><00:46:14.070><c> between</c><00:46:14.370><c> modules</c><00:46:14.730><c> in</c><00:46:15.300><c> different</c>

00:46:15.950 --> 00:46:15.960 align:start position:0%
reads edge between modules in different
 

00:46:15.960 --> 00:46:20.000 align:start position:0%
reads edge between modules in different
layers<00:46:17.510><c> constructing</c><00:46:18.510><c> a</c><00:46:18.720><c> tree</c><00:46:19.170><c> of</c><00:46:19.320><c> layers</c><00:46:19.560><c> in</c>

00:46:20.000 --> 00:46:20.010 align:start position:0%
layers constructing a tree of layers in
 

00:46:20.010 --> 00:46:22.430 align:start position:0%
layers constructing a tree of layers in
this<00:46:20.370><c> fashion</c><00:46:20.640><c> is</c><00:46:21.000><c> the</c><00:46:21.540><c> job</c><00:46:21.780><c> of</c><00:46:21.930><c> a</c>

00:46:22.430 --> 00:46:22.440 align:start position:0%
this fashion is the job of a
 

00:46:22.440 --> 00:46:24.829 align:start position:0%
this fashion is the job of a
framework<00:46:22.740><c> like</c><00:46:23.250><c> an</c><00:46:23.400><c> app</c><00:46:23.520><c> server</c><00:46:23.819><c> or</c><00:46:24.210><c> a</c><00:46:24.270><c> test</c>

00:46:24.829 --> 00:46:24.839 align:start position:0%
framework like an app server or a test
 

00:46:24.839 --> 00:46:27.400 align:start position:0%
framework like an app server or a test
harness<00:46:25.310><c> layers</c><00:46:26.310><c> give</c><00:46:26.819><c> frameworks</c>

00:46:27.400 --> 00:46:27.410 align:start position:0%
harness layers give frameworks
 

00:46:27.410 --> 00:46:29.990 align:start position:0%
harness layers give frameworks
tremendous<00:46:28.410><c> freedom</c><00:46:28.650><c> to</c><00:46:28.980><c> organize</c><00:46:29.460><c> modules</c>

00:46:29.990 --> 00:46:30.000 align:start position:0%
tremendous freedom to organize modules
 

00:46:30.000 --> 00:46:32.750 align:start position:0%
tremendous freedom to organize modules
at<00:46:30.210><c> runtime</c><00:46:30.450><c> without</c><00:46:31.440><c> upsetting</c><00:46:31.770><c> the</c>

00:46:32.750 --> 00:46:32.760 align:start position:0%
at runtime without upsetting the
 

00:46:32.760 --> 00:46:35.000 align:start position:0%
at runtime without upsetting the
frameworks<00:46:33.329><c> traditional</c><00:46:34.079><c> use</c><00:46:34.319><c> of</c><00:46:34.349><c> class</c>

00:46:35.000 --> 00:46:35.010 align:start position:0%
frameworks traditional use of class
 

00:46:35.010 --> 00:46:37.490 align:start position:0%
frameworks traditional use of class
loaders<00:46:35.460><c> it's</c><00:46:36.329><c> like</c><00:46:36.599><c> the</c><00:46:36.750><c> invoke</c><00:46:37.050><c> dynamic</c>

00:46:37.490 --> 00:46:37.500 align:start position:0%
loaders it's like the invoke dynamic
 

00:46:37.500 --> 00:46:39.740 align:start position:0%
loaders it's like the invoke dynamic
instruction<00:46:37.770><c> from</c><00:46:38.250><c> jdk</c><00:46:38.640><c> 7</c><00:46:38.970><c> away</c><00:46:39.510><c> for</c>

00:46:39.740 --> 00:46:39.750 align:start position:0%
instruction from jdk 7 away for
 

00:46:39.750 --> 00:46:42.050 align:start position:0%
instruction from jdk 7 away for
framework<00:46:40.380><c> developers</c><00:46:41.069><c> to</c><00:46:41.280><c> interact</c><00:46:41.819><c> with</c>

00:46:42.050 --> 00:46:42.060 align:start position:0%
framework developers to interact with
 

00:46:42.060 --> 00:46:45.470 align:start position:0%
framework developers to interact with
the<00:46:42.210><c> vm</c><00:46:42.510><c> to</c><00:46:43.470><c> reify</c><00:46:44.010><c> information</c><00:46:44.670><c> about</c><00:46:45.300><c> the</c>

00:46:45.470 --> 00:46:45.480 align:start position:0%
the vm to reify information about the
 

00:46:45.480 --> 00:46:48.980 align:start position:0%
the vm to reify information about the
shape<00:46:45.720><c> of</c><00:46:45.930><c> a</c><00:46:46.410><c> program</c><00:46:47.300><c> let's</c><00:46:48.300><c> look</c><00:46:48.510><c> at</c><00:46:48.690><c> one</c>

00:46:48.980 --> 00:46:48.990 align:start position:0%
shape of a program let's look at one
 

00:46:48.990 --> 00:46:53.750 align:start position:0%
shape of a program let's look at one
scenario<00:46:49.319><c> where</c><00:46:49.859><c> layers</c><00:46:50.099><c> help</c><00:46:50.460><c> out</c><00:46:52.760><c> layers</c>

00:46:53.750 --> 00:46:53.760 align:start position:0%
scenario where layers help out layers
 

00:46:53.760 --> 00:46:56.540 align:start position:0%
scenario where layers help out layers
are<00:46:54.180><c> how</c><00:46:54.390><c> the</c><00:46:54.450><c> module</c><00:46:55.140><c> system</c><00:46:55.550><c> supports</c>

00:46:56.540 --> 00:46:56.550 align:start position:0%
are how the module system supports
 

00:46:56.550 --> 00:47:00.170 align:start position:0%
are how the module system supports
multiple<00:46:56.970><c> versions</c><00:46:57.359><c> of</c><00:46:57.869><c> the</c><00:46:58.319><c> module</c><00:46:59.000><c> here</c><00:47:00.000><c> an</c>

00:47:00.170 --> 00:47:00.180 align:start position:0%
multiple versions of the module here an
 

00:47:00.180 --> 00:47:03.140 align:start position:0%
multiple versions of the module here an
app<00:47:00.750><c> server</c><00:47:01.170><c> has</c><00:47:01.560><c> created</c><00:47:01.859><c> two</c><00:47:02.460><c> layers</c><00:47:02.700><c> on</c><00:47:03.089><c> top</c>

00:47:03.140 --> 00:47:03.150 align:start position:0%
app server has created two layers on top
 

00:47:03.150 --> 00:47:07.490 align:start position:0%
app server has created two layers on top
of<00:47:03.780><c> the</c><00:47:04.109><c> boot</c><00:47:04.230><c> layer</c><00:47:04.440><c> on</c><00:47:04.790><c> the</c><00:47:05.790><c> left</c><00:47:06.000><c> the</c><00:47:06.839><c> Hadoop</c>

00:47:07.490 --> 00:47:07.500 align:start position:0%
of the boot layer on the left the Hadoop
 

00:47:07.500 --> 00:47:10.490 align:start position:0%
of the boot layer on the left the Hadoop
player<00:47:07.800><c> reifies</c><00:47:08.640><c> a</c><00:47:09.060><c> module</c><00:47:09.599><c> graph</c><00:47:09.930><c> with</c><00:47:10.260><c> guava</c>

00:47:10.490 --> 00:47:10.500 align:start position:0%
player reifies a module graph with guava
 

00:47:10.500 --> 00:47:13.609 align:start position:0%
player reifies a module graph with guava
version<00:47:10.980><c> 11</c><00:47:11.369><c> and</c><00:47:11.579><c> jackson</c><00:47:11.970><c> version</c><00:47:12.300><c> 1</c><00:47:12.450><c> and</c><00:47:12.690><c> on</c>

00:47:13.609 --> 00:47:13.619 align:start position:0%
version 11 and jackson version 1 and on
 

00:47:13.619 --> 00:47:16.400 align:start position:0%
version 11 and jackson version 1 and on
the<00:47:13.770><c> right</c><00:47:13.980><c> the</c><00:47:14.369><c> JavaScript</c><00:47:15.300><c> layer</c><00:47:15.540><c> reifies</c><00:47:16.380><c> a</c>

00:47:16.400 --> 00:47:16.410 align:start position:0%
the right the JavaScript layer reifies a
 

00:47:16.410 --> 00:47:19.609 align:start position:0%
the right the JavaScript layer reifies a
module<00:47:16.950><c> graph</c><00:47:17.250><c> with</c><00:47:18.000><c> guava</c><00:47:18.270><c> version</c><00:47:18.839><c> 18</c><00:47:19.230><c> and</c>

00:47:19.609 --> 00:47:19.619 align:start position:0%
module graph with guava version 18 and
 

00:47:19.619 --> 00:47:23.540 align:start position:0%
module graph with guava version 18 and
jackson<00:47:20.609><c> version</c><00:47:21.210><c> 2</c><00:47:21.560><c> each</c><00:47:22.560><c> module</c><00:47:22.890><c> graph</c><00:47:23.339><c> is</c>

00:47:23.540 --> 00:47:23.550 align:start position:0%
jackson version 2 each module graph is
 

00:47:23.550 --> 00:47:26.180 align:start position:0%
jackson version 2 each module graph is
well-formed<00:47:23.970><c> and</c><00:47:24.329><c> mapped</c><00:47:24.869><c> to</c><00:47:25.170><c> loaders</c><00:47:25.710><c> in</c><00:47:25.920><c> a</c>

00:47:26.180 --> 00:47:26.190 align:start position:0%
well-formed and mapped to loaders in a
 

00:47:26.190 --> 00:47:28.220 align:start position:0%
well-formed and mapped to loaders in a
sensible<00:47:26.609><c> way</c><00:47:26.730><c> but</c><00:47:27.420><c> the</c><00:47:27.510><c> modules</c><00:47:27.960><c> in</c><00:47:28.140><c> the</c>

00:47:28.220 --> 00:47:28.230 align:start position:0%
sensible way but the modules in the
 

00:47:28.230 --> 00:47:30.500 align:start position:0%
sensible way but the modules in the
Hadoop<00:47:28.500><c> layer</c><00:47:28.770><c> are</c><00:47:29.010><c> not</c><00:47:29.310><c> aware</c><00:47:29.700><c> of</c><00:47:30.000><c> the</c>

00:47:30.500 --> 00:47:30.510 align:start position:0%
Hadoop layer are not aware of the
 

00:47:30.510 --> 00:47:32.690 align:start position:0%
Hadoop layer are not aware of the
modules<00:47:30.930><c> in</c><00:47:31.109><c> the</c><00:47:31.200><c> JavaScript</c><00:47:31.530><c> layer</c><00:47:31.950><c> and</c><00:47:32.190><c> vice</c>

00:47:32.690 --> 00:47:32.700 align:start position:0%
modules in the JavaScript layer and vice
 

00:47:32.700 --> 00:47:36.530 align:start position:0%
modules in the JavaScript layer and vice
versa<00:47:33.770><c> but</c><00:47:34.770><c> please</c><00:47:35.010><c> note</c><00:47:35.250><c> this</c><00:47:35.849><c> is</c><00:47:36.030><c> all</c><00:47:36.180><c> thanks</c>

00:47:36.530 --> 00:47:36.540 align:start position:0%
versa but please note this is all thanks
 

00:47:36.540 --> 00:47:38.839 align:start position:0%
versa but please note this is all thanks
to<00:47:36.660><c> a</c><00:47:36.690><c> framework</c><00:47:37.099><c> creating</c><00:47:38.099><c> the</c><00:47:38.369><c> Hadoop</c><00:47:38.670><c> and</c>

00:47:38.839 --> 00:47:38.849 align:start position:0%
to a framework creating the Hadoop and
 

00:47:38.849 --> 00:47:41.240 align:start position:0%
to a framework creating the Hadoop and
JavaScript<00:47:39.420><c> layers</c><00:47:39.630><c> the</c><00:47:40.440><c> java</c><00:47:40.710><c> launcher</c>

00:47:41.240 --> 00:47:41.250 align:start position:0%
JavaScript layers the java launcher
 

00:47:41.250 --> 00:47:43.940 align:start position:0%
JavaScript layers the java launcher
doesn't<00:47:41.760><c> create</c><00:47:42.060><c> layers</c><00:47:42.420><c> like</c><00:47:42.720><c> this</c><00:47:42.990><c> all</c><00:47:43.589><c> it</c>

00:47:43.940 --> 00:47:43.950 align:start position:0%
doesn't create layers like this all it
 

00:47:43.950 --> 00:47:46.130 align:start position:0%
doesn't create layers like this all it
does<00:47:44.099><c> is</c><00:47:44.400><c> resolve</c><00:47:44.910><c> the</c><00:47:45.180><c> module</c><00:47:45.540><c> you</c><00:47:45.810><c> give</c><00:47:46.020><c> on</c>

00:47:46.130 --> 00:47:46.140 align:start position:0%
does is resolve the module you give on
 

00:47:46.140 --> 00:47:48.800 align:start position:0%
does is resolve the module you give on
the<00:47:46.260><c> command</c><00:47:46.560><c> line</c><00:47:46.650><c> then</c><00:47:47.640><c> map</c><00:47:47.910><c> everything</c><00:47:48.720><c> in</c>

00:47:48.800 --> 00:47:48.810 align:start position:0%
the command line then map everything in
 

00:47:48.810 --> 00:47:50.660 align:start position:0%
the command line then map everything in
the<00:47:48.900><c> resulting</c><00:47:49.380><c> module</c><00:47:49.740><c> graph</c><00:47:50.040><c> to</c><00:47:50.640><c> the</c>

00:47:50.660 --> 00:47:50.670 align:start position:0%
the resulting module graph to the
 

00:47:50.670 --> 00:47:53.990 align:start position:0%
the resulting module graph to the
application<00:47:51.420><c> loader</c><00:47:51.630><c> in</c><00:47:51.930><c> the</c><00:47:52.589><c> boot</c><00:47:52.740><c> layer</c><00:47:53.000><c> it</c>

00:47:53.990 --> 00:47:54.000 align:start position:0%
application loader in the boot layer it
 

00:47:54.000 --> 00:47:56.740 align:start position:0%
application loader in the boot layer it
supports<00:47:54.569><c> only</c><00:47:54.810><c> one</c><00:47:55.050><c> version</c><00:47:55.349><c> of</c><00:47:55.829><c> each</c><00:47:56.099><c> module</c>

00:47:56.740 --> 00:47:56.750 align:start position:0%
supports only one version of each module
 

00:47:56.750 --> 00:47:59.720 align:start position:0%
supports only one version of each module
the<00:47:57.750><c> reason</c><00:47:58.200><c> is</c><00:47:58.349><c> to</c><00:47:58.500><c> avoid</c><00:47:58.829><c> the</c><00:47:59.160><c> nightmarish</c>

00:47:59.720 --> 00:47:59.730 align:start position:0%
the reason is to avoid the nightmarish
 

00:47:59.730 --> 00:48:02.210 align:start position:0%
the reason is to avoid the nightmarish
problems<00:48:00.359><c> that</c><00:48:00.960><c> occur</c><00:48:01.260><c> when</c><00:48:01.560><c> multiple</c>

00:48:02.210 --> 00:48:02.220 align:start position:0%
problems that occur when multiple
 

00:48:02.220 --> 00:48:05.180 align:start position:0%
problems that occur when multiple
versions<00:48:02.550><c> of</c><00:48:03.000><c> a</c><00:48:03.119><c> module</c><00:48:03.440><c> or</c><00:48:04.440><c> indeed</c><00:48:04.710><c> any</c><00:48:04.890><c> jar</c>

00:48:05.180 --> 00:48:05.190 align:start position:0%
versions of a module or indeed any jar
 

00:48:05.190 --> 00:48:07.160 align:start position:0%
versions of a module or indeed any jar
casually<00:48:06.000><c> come</c><00:48:06.240><c> into</c><00:48:06.450><c> contact</c><00:48:06.660><c> with</c><00:48:06.960><c> each</c>

00:48:07.160 --> 00:48:07.170 align:start position:0%
casually come into contact with each
 

00:48:07.170 --> 00:48:09.740 align:start position:0%
casually come into contact with each
other<00:48:07.410><c> it's</c><00:48:08.069><c> really</c><00:48:08.400><c> only</c><00:48:08.700><c> safe</c><00:48:09.150><c> to</c><00:48:09.720><c> use</c>

00:48:09.740 --> 00:48:09.750 align:start position:0%
other it's really only safe to use
 

00:48:09.750 --> 00:48:12.349 align:start position:0%
other it's really only safe to use
multiple<00:48:10.560><c> versions</c><00:48:10.770><c> of</c><00:48:11.130><c> the</c><00:48:11.190><c> module</c><00:48:11.579><c> when</c><00:48:12.329><c> a</c>

00:48:12.349 --> 00:48:12.359 align:start position:0%
multiple versions of the module when a
 

00:48:12.359 --> 00:48:15.050 align:start position:0%
multiple versions of the module when a
framework<00:48:12.720><c> like</c><00:48:12.960><c> an</c><00:48:13.319><c> app</c><00:48:13.470><c> server</c><00:48:13.849><c> is</c><00:48:14.849><c> in</c>

00:48:15.050 --> 00:48:15.060 align:start position:0%
framework like an app server is in
 

00:48:15.060 --> 00:48:20.000 align:start position:0%
framework like an app server is in
control<00:48:16.790><c> the</c><00:48:17.790><c> takeaway</c><00:48:18.150><c> is</c><00:48:18.270><c> this</c><00:48:18.829><c> just</c><00:48:19.829><c> as</c>

00:48:20.000 --> 00:48:20.010 align:start position:0%
control the takeaway is this just as
 

00:48:20.010 --> 00:48:22.550 align:start position:0%
control the takeaway is this just as
modules<00:48:20.460><c> wrap</c><00:48:21.119><c> up</c><00:48:21.329><c> coherent</c><00:48:22.140><c> sets</c><00:48:22.410><c> of</c>

00:48:22.550 --> 00:48:22.560 align:start position:0%
modules wrap up coherent sets of
 

00:48:22.560 --> 00:48:25.010 align:start position:0%
modules wrap up coherent sets of
packages<00:48:23.040><c> and</c><00:48:23.339><c> interact</c><00:48:24.180><c> with</c><00:48:24.450><c> the</c><00:48:24.540><c> VMS</c>

00:48:25.010 --> 00:48:25.020 align:start position:0%
packages and interact with the VMS
 

00:48:25.020 --> 00:48:28.579 align:start position:0%
packages and interact with the VMS
accessibility<00:48:25.920><c> mechanism</c><00:48:26.839><c> layers</c><00:48:27.839><c> wrap</c><00:48:28.410><c> up</c>

00:48:28.579 --> 00:48:28.589 align:start position:0%
accessibility mechanism layers wrap up
 

00:48:28.589 --> 00:48:31.400 align:start position:0%
accessibility mechanism layers wrap up
coherent<00:48:29.280><c> sets</c><00:48:29.550><c> of</c><00:48:29.730><c> modules</c><00:48:30.210><c> and</c><00:48:30.599><c> interact</c>

00:48:31.400 --> 00:48:31.410 align:start position:0%
coherent sets of modules and interact
 

00:48:31.410 --> 00:48:33.020 align:start position:0%
coherent sets of modules and interact
with<00:48:31.619><c> the</c><00:48:31.740><c> class</c><00:48:32.010><c> loader</c><00:48:32.339><c> visibility</c>

00:48:33.020 --> 00:48:33.030 align:start position:0%
with the class loader visibility
 

00:48:33.030 --> 00:48:36.260 align:start position:0%
with the class loader visibility
mechanism<00:48:33.859><c> it'll</c><00:48:34.859><c> be</c><00:48:34.980><c> up</c><00:48:35.099><c> to</c><00:48:35.130><c> frameworks</c><00:48:35.790><c> to</c>

00:48:36.260 --> 00:48:36.270 align:start position:0%
mechanism it'll be up to frameworks to
 

00:48:36.270 --> 00:48:39.830 align:start position:0%
mechanism it'll be up to frameworks to
use<00:48:36.570><c> of</c><00:48:36.870><c> layers</c><00:48:37.230><c> in</c><00:48:37.680><c> the</c><00:48:38.220><c> next</c><00:48:38.490><c> 20</c><00:48:38.790><c> years</c><00:48:38.840><c> just</c>

00:48:39.830 --> 00:48:39.840 align:start position:0%
use of layers in the next 20 years just
 

00:48:39.840 --> 00:48:42.050 align:start position:0%
use of layers in the next 20 years just
as<00:48:39.990><c> they</c><00:48:40.140><c> made</c><00:48:40.350><c> use</c><00:48:40.680><c> of</c><00:48:40.710><c> class</c><00:48:41.400><c> loaders</c><00:48:41.820><c> in</c>

00:48:42.050 --> 00:48:42.060 align:start position:0%
as they made use of class loaders in
 

00:48:42.060 --> 00:48:45.470 align:start position:0%
as they made use of class loaders in
javas<00:48:42.720><c> first</c><00:48:42.960><c> 20</c><00:48:43.290><c> years</c><00:48:43.530><c> I</c><00:48:44.180><c> urge</c><00:48:45.180><c> any</c>

00:48:45.470 --> 00:48:45.480 align:start position:0%
javas first 20 years I urge any
 

00:48:45.480 --> 00:48:47.660 align:start position:0%
javas first 20 years I urge any
framework<00:48:45.780><c> developers</c><00:48:46.410><c> watching</c><00:48:46.770><c> to</c><00:48:47.220><c> open</c><00:48:47.520><c> up</c>

00:48:47.660 --> 00:48:47.670 align:start position:0%
framework developers watching to open up
 

00:48:47.670 --> 00:48:50.810 align:start position:0%
framework developers watching to open up
the<00:48:48.090><c> JDK</c><00:48:48.510><c> 9</c><00:48:48.660><c> Javadoc</c><00:48:49.170><c> and</c><00:48:49.440><c> look</c><00:48:50.040><c> at</c><00:48:50.220><c> java.lang</c>

00:48:50.810 --> 00:48:50.820 align:start position:0%
the JDK 9 Javadoc and look at java.lang
 

00:48:50.820 --> 00:49:00.460 align:start position:0%
the JDK 9 Javadoc and look at java.lang
module<00:48:51.180><c> configuration</c><00:48:51.810><c> and</c>

00:49:00.460 --> 00:49:00.470 align:start position:0%
 
 

00:49:00.470 --> 00:49:09.440 align:start position:0%
 
java.lang.reflect.method.invoke<00:49:08.450><c> then</c>

00:49:09.440 --> 00:49:09.450 align:start position:0%
java.lang.reflect.method.invoke then
 

00:49:09.450 --> 00:49:11.600 align:start position:0%
java.lang.reflect.method.invoke then
control<00:49:10.080><c> the</c><00:49:10.230><c> relationship</c><00:49:10.920><c> between</c><00:49:11.160><c> modules</c>

00:49:11.600 --> 00:49:11.610 align:start position:0%
control the relationship between modules
 

00:49:11.610 --> 00:49:14.120 align:start position:0%
control the relationship between modules
a<00:49:12.120><c> graph</c><00:49:12.330><c> of</c><00:49:12.510><c> modules</c><00:49:12.960><c> and</c><00:49:13.200><c> the</c><00:49:13.530><c> class</c><00:49:13.740><c> loaders</c>

00:49:14.120 --> 00:49:14.130 align:start position:0%
a graph of modules and the class loaders
 

00:49:14.130 --> 00:49:17.540 align:start position:0%
a graph of modules and the class loaders
and<00:49:15.020><c> assuming</c><00:49:16.020><c> class</c><00:49:16.320><c> loaders</c><00:49:16.800><c> respect</c><00:49:17.310><c> the</c>

00:49:17.540 --> 00:49:17.550 align:start position:0%
and assuming class loaders respect the
 

00:49:17.550 --> 00:49:19.130 align:start position:0%
and assuming class loaders respect the
module<00:49:17.880><c> graph</c><00:49:18.150><c> that</c><00:49:18.450><c> is</c><00:49:18.570><c> they</c><00:49:18.690><c> delegate</c>

00:49:19.130 --> 00:49:19.140 align:start position:0%
module graph that is they delegate
 

00:49:19.140 --> 00:49:21.200 align:start position:0%
module graph that is they delegate
sensibly<00:49:19.560><c> the</c><00:49:20.400><c> system</c><00:49:20.760><c> is</c><00:49:20.880><c> safe</c><00:49:21.030><c> by</c>

00:49:21.200 --> 00:49:21.210 align:start position:0%
sensibly the system is safe by
 

00:49:21.210 --> 00:49:23.090 align:start position:0%
sensibly the system is safe by
construction<00:49:21.840><c> there</c><00:49:22.200><c> are</c><00:49:22.320><c> no</c><00:49:22.410><c> cycles</c><00:49:22.890><c> or</c>

00:49:23.090 --> 00:49:23.100 align:start position:0%
construction there are no cycles or
 

00:49:23.100 --> 00:49:28.250 align:start position:0%
construction there are no cycles or
split<00:49:23.520><c> packages</c><00:49:26.900><c> zooming</c><00:49:27.900><c> all</c><00:49:28.020><c> the</c><00:49:28.110><c> way</c><00:49:28.230><c> out</c>

00:49:28.250 --> 00:49:28.260 align:start position:0%
split packages zooming all the way out
 

00:49:28.260 --> 00:49:31.310 align:start position:0%
split packages zooming all the way out
here<00:49:28.710><c> are</c><00:49:29.100><c> the</c><00:49:29.280><c> three</c><00:49:29.640><c> key</c><00:49:29.670><c> points</c><00:49:30.150><c> there</c><00:49:31.140><c> is</c>

00:49:31.310 --> 00:49:31.320 align:start position:0%
here are the three key points there is
 

00:49:31.320 --> 00:49:33.350 align:start position:0%
here are the three key points there is
strong<00:49:31.620><c> encapsulation</c><00:49:32.310><c> of</c><00:49:32.580><c> modules</c><00:49:33.090><c> by</c><00:49:33.300><c> the</c>

00:49:33.350 --> 00:49:33.360 align:start position:0%
strong encapsulation of modules by the
 

00:49:33.360 --> 00:49:36.500 align:start position:0%
strong encapsulation of modules by the
compiler<00:49:33.840><c> vm</c><00:49:34.440><c> and</c><00:49:34.620><c> core</c><00:49:34.890><c> reflection</c><00:49:35.510><c> there</c>

00:49:36.500 --> 00:49:36.510 align:start position:0%
compiler vm and core reflection there
 

00:49:36.510 --> 00:49:39.350 align:start position:0%
compiler vm and core reflection there
are<00:49:36.720><c> unnamed</c><00:49:37.230><c> and</c><00:49:37.650><c> automatic</c><00:49:38.550><c> modules</c><00:49:38.970><c> to</c>

00:49:39.350 --> 00:49:39.360 align:start position:0%
are unnamed and automatic modules to
 

00:49:39.360 --> 00:49:42.320 align:start position:0%
are unnamed and automatic modules to
help<00:49:39.570><c> with</c><00:49:39.780><c> migration</c><00:49:40.140><c> and</c><00:49:40.530><c> the</c><00:49:41.400><c> whole</c><00:49:41.820><c> system</c>

00:49:42.320 --> 00:49:42.330 align:start position:0%
help with migration and the whole system
 

00:49:42.330 --> 00:49:44.510 align:start position:0%
help with migration and the whole system
is<00:49:42.420><c> safe</c><00:49:42.660><c> by</c><00:49:42.870><c> construction</c><00:49:43.380><c> no</c><00:49:43.740><c> cycles</c><00:49:44.220><c> or</c>

00:49:44.510 --> 00:49:44.520 align:start position:0%
is safe by construction no cycles or
 

00:49:44.520 --> 00:49:51.440 align:start position:0%
is safe by construction no cycles or
split<00:49:45.000><c> packages</c><00:49:48.710><c> in</c><00:49:49.710><c> essence</c><00:49:50.160><c> the</c><00:49:51.090><c> module</c>

00:49:51.440 --> 00:49:51.450 align:start position:0%
split packages in essence the module
 

00:49:51.450 --> 00:49:55.330 align:start position:0%
split packages in essence the module
system<00:49:51.780><c> is</c><00:49:52.110><c> a</c><00:49:52.170><c> seat</c><00:49:52.680><c> belt</c><00:49:53.010><c> not</c><00:49:53.910><c> a</c><00:49:53.940><c> jetpack</c><00:49:54.420><c> if</c>

00:49:55.330 --> 00:49:55.340 align:start position:0%
system is a seat belt not a jetpack if
 

00:49:55.340 --> 00:49:58.430 align:start position:0%
system is a seat belt not a jetpack if
this<00:49:56.340><c> reminds</c><00:49:57.000><c> you</c><00:49:57.150><c> of</c><00:49:57.180><c> the</c><00:49:57.330><c> rationale</c><00:49:58.050><c> for</c>

00:49:58.430 --> 00:49:58.440 align:start position:0%
this reminds you of the rationale for
 

00:49:58.440 --> 00:50:01.370 align:start position:0%
this reminds you of the rationale for
generics<00:49:59.420><c> 15</c><00:50:00.420><c> years</c><00:50:00.660><c> of</c><00:50:00.720><c> more</c><00:50:00.930><c> than</c><00:50:01.050><c> 15</c><00:50:01.350><c> years</c>

00:50:01.370 --> 00:50:01.380 align:start position:0%
generics 15 years of more than 15 years
 

00:50:01.380 --> 00:50:04.340 align:start position:0%
generics 15 years of more than 15 years
ago<00:50:01.620><c> your</c><00:50:02.460><c> rights</c><00:50:02.840><c> writing</c><00:50:03.840><c> a</c><00:50:03.930><c> module</c>

00:50:04.340 --> 00:50:04.350 align:start position:0%
ago your rights writing a module
 

00:50:04.350 --> 00:50:06.230 align:start position:0%
ago your rights writing a module
declaration<00:50:05.100><c> makes</c><00:50:05.730><c> your</c><00:50:05.910><c> code</c><00:50:06.210><c> more</c>

00:50:06.230 --> 00:50:06.240 align:start position:0%
declaration makes your code more
 

00:50:06.240 --> 00:50:08.690 align:start position:0%
declaration makes your code more
reliable<00:50:07.050><c> and</c><00:50:07.200><c> maintainable</c><00:50:07.800><c> much</c><00:50:08.400><c> like</c>

00:50:08.690 --> 00:50:08.700 align:start position:0%
reliable and maintainable much like
 

00:50:08.700 --> 00:50:10.610 align:start position:0%
reliable and maintainable much like
writing<00:50:09.000><c> a</c><00:50:09.210><c> list</c><00:50:09.390><c> of</c><00:50:09.600><c> string</c><00:50:09.960><c> rather</c><00:50:10.410><c> than</c>

00:50:10.610 --> 00:50:10.620 align:start position:0%
writing a list of string rather than
 

00:50:10.620 --> 00:50:13.190 align:start position:0%
writing a list of string rather than
lists<00:50:11.070><c> you</c><00:50:11.670><c> always</c><00:50:12.030><c> knew</c><00:50:12.390><c> that</c><00:50:12.690><c> your</c><00:50:12.990><c> list</c>

00:50:13.190 --> 00:50:13.200 align:start position:0%
lists you always knew that your list
 

00:50:13.200 --> 00:50:15.110 align:start position:0%
lists you always knew that your list
held<00:50:13.560><c> strings</c><00:50:13.950><c> and</c><00:50:14.220><c> generics</c><00:50:14.640><c> let</c><00:50:14.880><c> you</c><00:50:15.000><c> to</c>

00:50:15.110 --> 00:50:15.120 align:start position:0%
held strings and generics let you to
 

00:50:15.120 --> 00:50:17.600 align:start position:0%
held strings and generics let you to
know<00:50:15.240><c> that</c><00:50:15.270><c> you</c><00:50:16.020><c> always</c><00:50:16.230><c> knew</c><00:50:16.800><c> that</c><00:50:16.830><c> a</c><00:50:17.190><c> package</c>

00:50:17.600 --> 00:50:17.610 align:start position:0%
know that you always knew that a package
 

00:50:17.610 --> 00:50:20.090 align:start position:0%
know that you always knew that a package
was<00:50:17.820><c> not</c><00:50:18.030><c> for</c><00:50:18.240><c> general</c><00:50:18.600><c> use</c><00:50:18.630><c> and</c><00:50:19.080><c> modules</c><00:50:19.800><c> let</c>

00:50:20.090 --> 00:50:20.100 align:start position:0%
was not for general use and modules let
 

00:50:20.100 --> 00:50:22.700 align:start position:0%
was not for general use and modules let
you<00:50:20.220><c> to</c><00:50:20.370><c> know</c><00:50:20.490><c> that</c><00:50:21.320><c> it's</c><00:50:22.320><c> no</c><00:50:22.500><c> coincidence</c>

00:50:22.700 --> 00:50:22.710 align:start position:0%
you to know that it's no coincidence
 

00:50:22.710 --> 00:50:25.580 align:start position:0%
you to know that it's no coincidence
that<00:50:23.430><c> designing</c><00:50:23.880><c> a</c><00:50:24.180><c> practical</c><00:50:24.960><c> module</c><00:50:25.350><c> system</c>

00:50:25.580 --> 00:50:25.590 align:start position:0%
that designing a practical module system
 

00:50:25.590 --> 00:50:28.760 align:start position:0%
that designing a practical module system
and<00:50:25.980><c> modular</c><00:50:26.880><c> rising</c><00:50:27.270><c> the</c><00:50:27.360><c> JDK</c><00:50:27.840><c> has</c><00:50:28.470><c> taken</c>

00:50:28.760 --> 00:50:28.770 align:start position:0%
and modular rising the JDK has taken
 

00:50:28.770 --> 00:50:31.070 align:start position:0%
and modular rising the JDK has taken
approximately<00:50:29.040><c> as</c><00:50:29.670><c> long</c><00:50:30.000><c> as</c><00:50:30.300><c> designing</c><00:50:30.810><c> the</c>

00:50:31.070 --> 00:50:31.080 align:start position:0%
approximately as long as designing the
 

00:50:31.080 --> 00:50:33.860 align:start position:0%
approximately as long as designing the
pragmatic<00:50:31.860><c> generic</c><00:50:32.400><c> type</c><00:50:32.640><c> system</c><00:50:33.090><c> and</c><00:50:33.270><c> genera</c>

00:50:33.860 --> 00:50:33.870 align:start position:0%
pragmatic generic type system and genera
 

00:50:33.870 --> 00:50:40.280 align:start position:0%
pragmatic generic type system and genera
fiying<00:50:34.140><c> the</c><00:50:34.320><c> JDK</c><00:50:38.360><c> there's</c><00:50:39.360><c> still</c><00:50:39.780><c> a</c><00:50:40.080><c> long</c><00:50:40.260><c> road</c>

00:50:40.280 --> 00:50:40.290 align:start position:0%
fiying the JDK there's still a long road
 

00:50:40.290 --> 00:50:43.580 align:start position:0%
fiying the JDK there's still a long road
head<00:50:41.120><c> although</c><00:50:42.120><c> the</c><00:50:42.450><c> module</c><00:50:42.870><c> system</c><00:50:43.140><c> is</c>

00:50:43.580 --> 00:50:43.590 align:start position:0%
head although the module system is
 

00:50:43.590 --> 00:50:47.120 align:start position:0%
head although the module system is
conceptually<00:50:44.600><c> simple</c><00:50:45.600><c> there</c><00:50:46.500><c> are</c><00:50:46.650><c> changes</c><00:50:47.100><c> in</c>

00:50:47.120 --> 00:50:47.130 align:start position:0%
conceptually simple there are changes in
 

00:50:47.130 --> 00:50:49.819 align:start position:0%
conceptually simple there are changes in
jdk<00:50:47.490><c> 9</c><00:50:47.820><c> that</c><00:50:48.090><c> probably</c><00:50:48.450><c> won't</c><00:50:48.690><c> break</c><00:50:49.080><c> music</c>

00:50:49.819 --> 00:50:49.829 align:start position:0%
jdk 9 that probably won't break music
 

00:50:49.829 --> 00:50:52.039 align:start position:0%
jdk 9 that probably won't break music
but<00:50:50.249><c> might</c><00:50:50.430><c> break</c><00:50:50.670><c> framework</c><00:50:51.450><c> code</c><00:50:51.719><c> and</c><00:50:51.959><c> I'd</c>

00:50:52.039 --> 00:50:52.049 align:start position:0%
but might break framework code and I'd
 

00:50:52.049 --> 00:50:55.699 align:start position:0%
but might break framework code and I'd
like<00:50:52.200><c> to</c><00:50:52.259><c> go</c><00:50:52.469><c> through</c><00:50:52.499><c> them</c><00:50:52.859><c> quickly</c><00:50:54.709><c> there</c>

00:50:55.699 --> 00:50:55.709 align:start position:0%
like to go through them quickly there
 

00:50:55.709 --> 00:50:59.449 align:start position:0%
like to go through them quickly there
are<00:50:55.890><c> three</c><00:50:56.369><c> areas</c><00:50:57.089><c> of</c><00:50:57.680><c> incompatibility</c><00:50:58.680><c> in</c>

00:50:59.449 --> 00:50:59.459 align:start position:0%
are three areas of incompatibility in
 

00:50:59.459 --> 00:51:02.150 align:start position:0%
are three areas of incompatibility in
jdk<00:50:59.910><c> nine</c><00:51:00.319><c> connected</c><00:51:01.319><c> with</c><00:51:01.469><c> the</c><00:51:01.589><c> official</c>

00:51:02.150 --> 00:51:02.160 align:start position:0%
jdk nine connected with the official
 

00:51:02.160 --> 00:51:05.839 align:start position:0%
jdk nine connected with the official
definition<00:51:02.819><c> of</c><00:51:03.029><c> java</c><00:51:03.390><c> SE</c><00:51:03.859><c> first</c><00:51:04.859><c> we've</c>

00:51:05.839 --> 00:51:05.849 align:start position:0%
definition of java SE first we've
 

00:51:05.849 --> 00:51:08.959 align:start position:0%
definition of java SE first we've
removed<00:51:06.329><c> six</c><00:51:06.930><c> methods</c><00:51:07.410><c> from</c><00:51:08.039><c> the</c><00:51:08.489><c> packages</c>

00:51:08.959 --> 00:51:08.969 align:start position:0%
removed six methods from the packages
 

00:51:08.969 --> 00:51:11.029 align:start position:0%
removed six methods from the packages
java.util<00:51:09.630><c> logging</c><00:51:10.019><c> and</c><00:51:10.229><c> Java</c><00:51:10.469><c> util</c><00:51:10.799><c> jar</c>

00:51:11.029 --> 00:51:11.039 align:start position:0%
java.util logging and Java util jar
 

00:51:11.039 --> 00:51:13.190 align:start position:0%
java.util logging and Java util jar
their<00:51:11.609><c> signatures</c><00:51:12.239><c> made</c><00:51:12.509><c> the</c><00:51:12.690><c> Java</c><00:51:12.959><c> base</c>

00:51:13.190 --> 00:51:13.200 align:start position:0%
their signatures made the Java base
 

00:51:13.200 --> 00:51:15.410 align:start position:0%
their signatures made the Java base
module<00:51:13.469><c> depend</c><00:51:14.099><c> on</c><00:51:14.249><c> the</c><00:51:14.369><c> Java</c><00:51:14.579><c> desktop</c><00:51:15.059><c> module</c>

00:51:15.410 --> 00:51:15.420 align:start position:0%
module depend on the Java desktop module
 

00:51:15.420 --> 00:51:18.890 align:start position:0%
module depend on the Java desktop module
and<00:51:15.630><c> no</c><00:51:16.019><c> one</c><00:51:16.200><c> wants</c><00:51:16.499><c> that</c><00:51:17.209><c> this</c><00:51:18.209><c> removal</c><00:51:18.719><c> was</c>

00:51:18.890 --> 00:51:18.900 align:start position:0%
and no one wants that this removal was
 

00:51:18.900 --> 00:51:21.849 align:start position:0%
and no one wants that this removal was
announced<00:51:19.349><c> in</c><00:51:19.440><c> the</c><00:51:19.499><c> umbrella</c><00:51:19.920><c> jsr</c><00:51:20.519><c> se8</c><00:51:21.239><c> in</c>

00:51:21.849 --> 00:51:21.859 align:start position:0%
announced in the umbrella jsr se8 in
 

00:51:21.859 --> 00:51:26.239 align:start position:0%
announced in the umbrella jsr se8 in
2014<00:51:22.859><c> in</c><00:51:23.190><c> addition</c><00:51:24.150><c> we've</c><00:51:24.479><c> removed</c><00:51:24.809><c> to</c><00:51:25.469><c> a</c><00:51:25.499><c> WT</c>

00:51:26.239 --> 00:51:26.249 align:start position:0%
2014 in addition we've removed to a WT
 

00:51:26.249 --> 00:51:29.180 align:start position:0%
2014 in addition we've removed to a WT
packages<00:51:26.789><c> that</c><00:51:27.359><c> were</c><00:51:27.450><c> never</c><00:51:27.630><c> supported</c><00:51:28.229><c> on</c>

00:51:29.180 --> 00:51:29.190 align:start position:0%
packages that were never supported on
 

00:51:29.190 --> 00:51:30.709 align:start position:0%
packages that were never supported on
the<00:51:29.400><c> right</c><00:51:29.579><c> there</c><00:51:29.759><c> despite</c><00:51:30.180><c> being</c><00:51:30.479><c> in</c><00:51:30.630><c> the</c>

00:51:30.709 --> 00:51:30.719 align:start position:0%
the right there despite being in the
 

00:51:30.719 --> 00:51:37.130 align:start position:0%
the right there despite being in the
Java<00:51:30.959><c> namespace</c><00:51:31.880><c> very</c><00:51:32.880><c> sad</c><00:51:33.150><c> face</c><00:51:34.609><c> second</c><00:51:36.140><c> the</c>

00:51:37.130 --> 00:51:37.140 align:start position:0%
Java namespace very sad face second the
 

00:51:37.140 --> 00:51:40.759 align:start position:0%
Java namespace very sad face second the
Java<00:51:37.469><c> EE</c><00:51:37.799><c> types</c><00:51:38.670><c> shipped</c><00:51:39.539><c> with</c><00:51:39.779><c> the</c><00:51:39.930><c> JDK</c><00:51:40.499><c> are</c>

00:51:40.759 --> 00:51:40.769 align:start position:0%
Java EE types shipped with the JDK are
 

00:51:40.769 --> 00:51:44.809 align:start position:0%
Java EE types shipped with the JDK are
not<00:51:41.729><c> accessible</c><00:51:42.450><c> by</c><00:51:43.049><c> default</c><00:51:43.549><c> this</c><00:51:44.549><c> means</c>

00:51:44.809 --> 00:51:44.819 align:start position:0%
not accessible by default this means
 

00:51:44.819 --> 00:51:47.359 align:start position:0%
not accessible by default this means
korba<00:51:45.239><c> Jack's</c><00:51:45.869><c> be</c><00:51:46.079><c> jax-ws</c><00:51:46.499><c> the</c><00:51:47.160><c> Java</c>

00:51:47.359 --> 00:51:47.369 align:start position:0%
korba Jack's be jax-ws the Java
 

00:51:47.369 --> 00:51:49.549 align:start position:0%
korba Jack's be jax-ws the Java
activation<00:51:47.910><c> framework</c><00:51:48.329><c> and</c><00:51:48.569><c> the</c><00:51:48.630><c> JD</c><00:51:49.259><c> kaise</c>

00:51:49.549 --> 00:51:49.559 align:start position:0%
activation framework and the JD kaise
 

00:51:49.559 --> 00:51:52.880 align:start position:0%
activation framework and the JD kaise
subsets<00:51:50.519><c> of</c><00:51:50.819><c> the</c><00:51:50.910><c> Java</c><00:51:51.509><c> transaction</c><00:51:52.170><c> API</c><00:51:52.440><c> and</c>

00:51:52.880 --> 00:51:52.890 align:start position:0%
subsets of the Java transaction API and
 

00:51:52.890 --> 00:51:56.029 align:start position:0%
subsets of the Java transaction API and
the<00:51:53.009><c> common</c><00:51:53.309><c> annotations</c><00:51:53.849><c> API</c><00:51:54.469><c> the</c><00:51:55.469><c> types</c><00:51:55.769><c> are</c>

00:51:56.029 --> 00:51:56.039 align:start position:0%
the common annotations API the types are
 

00:51:56.039 --> 00:51:59.089 align:start position:0%
the common annotations API the types are
physically<00:51:56.579><c> in</c><00:51:56.940><c> the</c><00:51:56.969><c> JDK</c><00:51:57.599><c> image</c><00:51:57.959><c> but</c><00:51:58.949><c> their</c>

00:51:59.089 --> 00:51:59.099 align:start position:0%
physically in the JDK image but their
 

00:51:59.099 --> 00:52:02.239 align:start position:0%
physically in the JDK image but their
modules<00:51:59.309><c> are</c><00:51:59.910><c> not</c><00:52:00.239><c> read</c><00:52:00.619><c> by</c><00:52:01.619><c> the</c><00:52:01.680><c> unnamed</c>

00:52:02.239 --> 00:52:02.249 align:start position:0%
modules are not read by the unnamed
 

00:52:02.249 --> 00:52:06.170 align:start position:0%
modules are not read by the unnamed
module<00:52:02.729><c> of</c><00:52:03.029><c> the</c><00:52:03.479><c> app</c><00:52:03.599><c> loader</c><00:52:04.459><c> if</c><00:52:05.459><c> you're</c>

00:52:06.170 --> 00:52:06.180 align:start position:0%
module of the app loader if you're
 

00:52:06.180 --> 00:52:08.209 align:start position:0%
module of the app loader if you're
writing<00:52:06.449><c> a</c><00:52:06.690><c> module</c><00:52:06.989><c> no</c><00:52:07.229><c> problem</c><00:52:07.680><c> just</c><00:52:07.859><c> require</c>

00:52:08.209 --> 00:52:08.219 align:start position:0%
writing a module no problem just require
 

00:52:08.219 --> 00:52:10.999 align:start position:0%
writing a module no problem just require
java<00:52:08.640><c> koerber</c><00:52:08.999><c> or</c><00:52:09.749><c> Java</c><00:52:10.079><c> XML</c><00:52:10.589><c> bind</c><00:52:10.829><c> or</c>

00:52:10.999 --> 00:52:11.009 align:start position:0%
java koerber or Java XML bind or
 

00:52:11.009 --> 00:52:13.249 align:start position:0%
java koerber or Java XML bind or
whatever<00:52:11.219><c> but</c><00:52:12.119><c> if</c><00:52:12.239><c> you're</c><00:52:12.390><c> running</c><00:52:12.599><c> code</c><00:52:13.019><c> from</c>

00:52:13.249 --> 00:52:13.259 align:start position:0%
whatever but if you're running code from
 

00:52:13.259 --> 00:52:15.439 align:start position:0%
whatever but if you're running code from
the<00:52:13.319><c> classpath</c><00:52:13.829><c> you</c><00:52:14.609><c> need</c><00:52:14.789><c> a</c><00:52:14.819><c> command-line</c>

00:52:15.439 --> 00:52:15.449 align:start position:0%
the classpath you need a command-line
 

00:52:15.449 --> 00:52:20.329 align:start position:0%
the classpath you need a command-line
flag<00:52:15.779><c> to</c><00:52:16.109><c> activate</c><00:52:16.650><c> the</c><00:52:16.979><c> EE</c><00:52:17.130><c> modules</c><00:52:19.339><c> third</c>

00:52:20.329 --> 00:52:20.339 align:start position:0%
flag to activate the EE modules third
 

00:52:20.339 --> 00:52:23.299 align:start position:0%
flag to activate the EE modules third
the<00:52:21.059><c> version</c><00:52:21.420><c> strings</c><00:52:21.959><c> reported</c><00:52:22.529><c> by</c><00:52:22.739><c> the</c>

00:52:23.299 --> 00:52:23.309 align:start position:0%
the version strings reported by the
 

00:52:23.309 --> 00:52:25.579 align:start position:0%
the version strings reported by the
system<00:52:23.640><c> properties</c><00:52:24.059><c> Java</c><00:52:24.589><c> specification</c>

00:52:25.579 --> 00:52:25.589 align:start position:0%
system properties Java specification
 

00:52:25.589 --> 00:52:27.410 align:start position:0%
system properties Java specification
version<00:52:25.619><c> Java</c><00:52:26.160><c> VM</c><00:52:26.430><c> version</c><00:52:26.969><c> Java</c><00:52:27.180><c> VM</c>

00:52:27.410 --> 00:52:27.420 align:start position:0%
version Java VM version Java VM
 

00:52:27.420 --> 00:52:30.459 align:start position:0%
version Java VM version Java VM
specification<00:52:28.109><c> version</c><00:52:28.140><c> etc</c><00:52:28.910><c> have</c><00:52:29.910><c> changed</c>

00:52:30.459 --> 00:52:30.469 align:start position:0%
specification version etc have changed
 

00:52:30.469 --> 00:52:33.829 align:start position:0%
specification version etc have changed
code<00:52:31.469><c> that</c><00:52:31.709><c> looks</c><00:52:31.829><c> for</c><00:52:32.130><c> one</c><00:52:32.369><c> dots</c><00:52:32.910><c> at</c><00:52:33.239><c> the</c>

00:52:33.829 --> 00:52:33.839 align:start position:0%
code that looks for one dots at the
 

00:52:33.839 --> 00:52:36.439 align:start position:0%
code that looks for one dots at the
beginning<00:52:34.259><c> of</c><00:52:34.380><c> the</c><00:52:34.499><c> string</c><00:52:34.799><c> will</c><00:52:35.249><c> fail</c><00:52:35.579><c> on</c><00:52:35.940><c> jdk</c>

00:52:36.439 --> 00:52:36.449 align:start position:0%
beginning of the string will fail on jdk
 

00:52:36.449 --> 00:52:40.339 align:start position:0%
beginning of the string will fail on jdk
nine<00:52:37.880><c> because</c><00:52:38.880><c> the</c><00:52:39.119><c> version</c><00:52:39.449><c> strings</c><00:52:39.749><c> begin</c>

00:52:40.339 --> 00:52:40.349 align:start position:0%
nine because the version strings begin
 

00:52:40.349 --> 00:52:46.370 align:start position:0%
nine because the version strings begin
with<00:52:40.499><c> nine</c><00:52:43.249><c> there</c><00:52:44.249><c> are</c><00:52:44.400><c> then</c><00:52:44.749><c> three</c><00:52:45.749><c> areas</c><00:52:46.199><c> of</c>

00:52:46.370 --> 00:52:46.380 align:start position:0%
with nine there are then three areas of
 

00:52:46.380 --> 00:52:49.069 align:start position:0%
with nine there are then three areas of
incompatibility<00:52:47.180><c> within</c><00:52:48.180><c> the</c><00:52:48.390><c> jdk</c><00:52:48.869><c> nine</c>

00:52:49.069 --> 00:52:49.079 align:start position:0%
incompatibility within the jdk nine
 

00:52:49.079 --> 00:52:52.400 align:start position:0%
incompatibility within the jdk nine
implementation<00:52:50.150><c> first</c><00:52:51.150><c> we've</c><00:52:51.779><c> slimmed</c><00:52:52.199><c> down</c>

00:52:52.400 --> 00:52:52.410 align:start position:0%
implementation first we've slimmed down
 

00:52:52.410 --> 00:52:55.130 align:start position:0%
implementation first we've slimmed down
the<00:52:52.920><c> Sun</c><00:52:53.130><c> misc</c><00:52:53.400><c> package</c><00:52:53.849><c> some</c><00:52:54.449><c> miss</c><00:52:54.660><c> gun</c><00:52:54.869><c> safe</c>

00:52:55.130 --> 00:52:55.140 align:start position:0%
the Sun misc package some miss gun safe
 

00:52:55.140 --> 00:52:58.849 align:start position:0%
the Sun misc package some miss gun safe
is<00:52:55.410><c> still</c><00:52:55.769><c> accessible</c><00:52:56.719><c> but</c><00:52:57.719><c> some</c><00:52:57.959><c> misc</c><00:52:58.229><c> base64</c>

00:52:58.849 --> 00:52:58.859 align:start position:0%
is still accessible but some misc base64
 

00:52:58.859 --> 00:53:02.029 align:start position:0%
is still accessible but some misc base64
encoder<00:52:59.459><c> and</c><00:52:59.699><c> some</c><00:53:00.390><c> misc</c><00:53:00.599><c> base64</c><00:53:01.170><c> decoder</c><00:53:01.739><c> are</c>

00:53:02.029 --> 00:53:02.039 align:start position:0%
encoder and some misc base64 decoder are
 

00:53:02.039 --> 00:53:03.420 align:start position:0%
encoder and some misc base64 decoder are
gone

00:53:03.420 --> 00:53:03.430 align:start position:0%
gone
 

00:53:03.430 --> 00:53:05.400 align:start position:0%
gone
one<00:53:03.849><c> thing</c><00:53:04.089><c> you</c><00:53:04.270><c> can</c><00:53:04.450><c> do</c><00:53:04.569><c> today</c><00:53:04.750><c> is</c><00:53:05.109><c> run</c><00:53:05.380><c> the</c>

00:53:05.400 --> 00:53:05.410 align:start position:0%
one thing you can do today is run the
 

00:53:05.410 --> 00:53:09.240 align:start position:0%
one thing you can do today is run the
Jade<00:53:05.800><c> EPS</c><00:53:06.010><c> tool</c><00:53:06.339><c> that</c><00:53:06.640><c> came</c><00:53:06.819><c> with</c><00:53:07.000><c> jdk</c><00:53:07.359><c> 8</c><00:53:08.250><c> over</c>

00:53:09.240 --> 00:53:09.250 align:start position:0%
Jade EPS tool that came with jdk 8 over
 

00:53:09.250 --> 00:53:11.579 align:start position:0%
Jade EPS tool that came with jdk 8 over
all<00:53:09.400><c> of</c><00:53:09.579><c> your</c><00:53:09.730><c> jars</c><00:53:10.230><c> it'll</c><00:53:11.230><c> tell</c><00:53:11.440><c> you</c><00:53:11.559><c> if</c>

00:53:11.579 --> 00:53:11.589 align:start position:0%
all of your jars it'll tell you if
 

00:53:11.589 --> 00:53:13.680 align:start position:0%
all of your jars it'll tell you if
they're<00:53:11.859><c> using</c><00:53:12.280><c> unofficial</c><00:53:12.819><c> classes</c><00:53:13.300><c> like</c>

00:53:13.680 --> 00:53:13.690 align:start position:0%
they're using unofficial classes like
 

00:53:13.690 --> 00:53:16.140 align:start position:0%
they're using unofficial classes like
some<00:53:13.960><c> misc</c><00:53:14.170><c> bake</c><00:53:14.319><c> 64</c><00:53:14.829><c> encoder</c><00:53:15.309><c> and</c><00:53:15.550><c> then</c>

00:53:16.140 --> 00:53:16.150 align:start position:0%
some misc bake 64 encoder and then
 

00:53:16.150 --> 00:53:18.599 align:start position:0%
some misc bake 64 encoder and then
recommend<00:53:16.630><c> official</c><00:53:17.170><c> replacements</c><00:53:17.920><c> like</c><00:53:18.460><c> the</c>

00:53:18.599 --> 00:53:18.609 align:start position:0%
recommend official replacements like the
 

00:53:18.609 --> 00:53:22.230 align:start position:0%
recommend official replacements like the
java.util<00:53:19.390><c> base64</c><00:53:20.020><c> class</c><00:53:20.640><c> introduced</c><00:53:21.640><c> in</c><00:53:21.940><c> jdk</c>

00:53:22.230 --> 00:53:22.240 align:start position:0%
java.util base64 class introduced in jdk
 

00:53:22.240 --> 00:53:27.839 align:start position:0%
java.util base64 class introduced in jdk
8<00:53:23.309><c> seconds</c><00:53:24.960><c> many</c><00:53:25.960><c> jdk</c><00:53:26.530><c> internal</c><00:53:27.010><c> api's</c><00:53:27.400><c> are</c>

00:53:27.839 --> 00:53:27.849 align:start position:0%
8 seconds many jdk internal api's are
 

00:53:27.849 --> 00:53:30.660 align:start position:0%
8 seconds many jdk internal api's are
not<00:53:28.119><c> exported</c><00:53:29.079><c> code</c><00:53:29.890><c> that</c><00:53:30.099><c> tries</c><00:53:30.339><c> to</c><00:53:30.520><c> access</c>

00:53:30.660 --> 00:53:30.670 align:start position:0%
not exported code that tries to access
 

00:53:30.670 --> 00:53:34.829 align:start position:0%
not exported code that tries to access
even<00:53:31.540><c> public</c><00:53:31.900><c> types</c><00:53:32.170><c> in</c><00:53:32.530><c> the</c><00:53:33.010><c> sun</c><00:53:33.280><c> net</c><00:53:33.839><c> www</c>

00:53:34.829 --> 00:53:34.839 align:start position:0%
even public types in the sun net www
 

00:53:34.839 --> 00:53:38.940 align:start position:0%
even public types in the sun net www
package<00:53:35.170><c> or</c><00:53:35.440><c> sun</c><00:53:36.190><c> security</c><00:53:36.790><c> x509</c><00:53:37.599><c> or</c><00:53:38.290><c> Khamsin</c>

00:53:38.940 --> 00:53:38.950 align:start position:0%
package or sun security x509 or Khamsin
 

00:53:38.950 --> 00:53:41.220 align:start position:0%
package or sun security x509 or Khamsin
ork<00:53:39.130><c> apache</c><00:53:39.520><c> xerxes</c><00:53:40.059><c> internal</c><00:53:40.510><c> jacks</c><00:53:40.720><c> p</c><00:53:40.960><c> I</c>

00:53:41.220 --> 00:53:41.230 align:start position:0%
ork apache xerxes internal jacks p I
 

00:53:41.230 --> 00:53:43.799 align:start position:0%
ork apache xerxes internal jacks p I
could<00:53:41.950><c> go</c><00:53:42.099><c> on</c><00:53:42.130><c> will</c><00:53:42.760><c> fail</c><00:53:43.089><c> with</c><00:53:43.359><c> an</c><00:53:43.480><c> illegal</c>

00:53:43.799 --> 00:53:43.809 align:start position:0%
could go on will fail with an illegal
 

00:53:43.809 --> 00:53:45.510 align:start position:0%
could go on will fail with an illegal
access<00:53:44.109><c> error</c><00:53:44.380><c> the</c><00:53:44.650><c> only</c><00:53:44.920><c> way</c><00:53:45.069><c> to</c><00:53:45.130><c> regain</c>

00:53:45.510 --> 00:53:45.520 align:start position:0%
access error the only way to regain
 

00:53:45.520 --> 00:53:49.799 align:start position:0%
access error the only way to regain
access<00:53:45.970><c> is</c><00:53:46.510><c> with</c><00:53:47.020><c> a</c><00:53:47.050><c> command-line</c><00:53:47.589><c> flag</c><00:53:48.809><c> third</c>

00:53:49.799 --> 00:53:49.809 align:start position:0%
access is with a command-line flag third
 

00:53:49.809 --> 00:53:53.160 align:start position:0%
access is with a command-line flag third
many<00:53:50.800><c> internal</c><00:53:51.250><c> aspects</c><00:53:52.000><c> of</c><00:53:52.180><c> the</c><00:53:52.450><c> JDK</c><00:53:52.900><c> have</c>

00:53:53.160 --> 00:53:53.170 align:start position:0%
many internal aspects of the JDK have
 

00:53:53.170 --> 00:53:55.680 align:start position:0%
many internal aspects of the JDK have
been<00:53:53.319><c> overhauled</c><00:53:53.740><c> such</c><00:53:54.609><c> as</c><00:53:54.880><c> the</c><00:53:55.089><c> layout</c><00:53:55.450><c> on</c>

00:53:55.680 --> 00:53:55.690 align:start position:0%
been overhauled such as the layout on
 

00:53:55.690 --> 00:53:58.140 align:start position:0%
been overhauled such as the layout on
disk<00:53:55.960><c> and</c><00:53:56.319><c> the</c><00:53:56.680><c> implementation</c><00:53:57.040><c> of</c><00:53:57.760><c> the</c><00:53:57.940><c> three</c>

00:53:58.140 --> 00:53:58.150 align:start position:0%
disk and the implementation of the three
 

00:53:58.150 --> 00:54:00.540 align:start position:0%
disk and the implementation of the three
class<00:53:58.359><c> loaders</c><00:53:58.780><c> code</c><00:53:59.589><c> that</c><00:53:59.800><c> assumes</c><00:54:00.220><c> there's</c>

00:54:00.540 --> 00:54:00.550 align:start position:0%
class loaders code that assumes there's
 

00:54:00.550 --> 00:54:03.720 align:start position:0%
class loaders code that assumes there's
a<00:54:00.609><c> file</c><00:54:00.970><c> called</c><00:54:01.359><c> RT</c><00:54:01.930><c> jar</c><00:54:02.380><c> or</c><00:54:02.650><c> tools</c><00:54:03.010><c> jar</c><00:54:03.520><c> in</c><00:54:03.670><c> a</c>

00:54:03.720 --> 00:54:03.730 align:start position:0%
a file called RT jar or tools jar in a
 

00:54:03.730 --> 00:54:07.010 align:start position:0%
a file called RT jar or tools jar in a
particular<00:54:04.000><c> directory</c><00:54:04.540><c> will</c><00:54:05.260><c> fail</c><00:54:05.589><c> on</c><00:54:05.920><c> JD</c><00:54:06.190><c> k9</c>

00:54:07.010 --> 00:54:07.020 align:start position:0%
particular directory will fail on JD k9
 

00:54:07.020 --> 00:54:10.589 align:start position:0%
particular directory will fail on JD k9
scripts<00:54:08.020><c> that</c><00:54:08.230><c> try</c><00:54:08.740><c> to</c><00:54:08.770><c> patch</c><00:54:09.160><c> the</c><00:54:09.460><c> JDK</c><00:54:10.000><c> with</c>

00:54:10.589 --> 00:54:10.599 align:start position:0%
scripts that try to patch the JDK with
 

00:54:10.599 --> 00:54:13.440 align:start position:0%
scripts that try to patch the JDK with
minus<00:54:11.020><c> X</c><00:54:11.260><c> boot</c><00:54:11.530><c> class</c><00:54:11.740><c> pass</c><00:54:12.010><c> /</c><00:54:12.040><c> p</c><00:54:12.790><c> for</c><00:54:13.089><c> pre</c><00:54:13.240><c> pens</c>

00:54:13.440 --> 00:54:13.450 align:start position:0%
minus X boot class pass / p for pre pens
 

00:54:13.450 --> 00:54:16.470 align:start position:0%
minus X boot class pass / p for pre pens
will<00:54:13.930><c> fail</c><00:54:14.260><c> on</c><00:54:14.559><c> jdk</c><00:54:15.069><c> nine</c><00:54:15.280><c> and</c><00:54:15.549><c> as</c><00:54:16.329><c> i</c><00:54:16.450><c> mentioned</c>

00:54:16.470 --> 00:54:16.480 align:start position:0%
will fail on jdk nine and as i mentioned
 

00:54:16.480 --> 00:54:19.319 align:start position:0%
will fail on jdk nine and as i mentioned
before<00:54:16.859><c> code</c><00:54:17.859><c> that</c><00:54:18.099><c> assumes</c><00:54:18.520><c> the</c><00:54:18.670><c> application</c>

00:54:19.319 --> 00:54:19.329 align:start position:0%
before code that assumes the application
 

00:54:19.329 --> 00:54:21.839 align:start position:0%
before code that assumes the application
loader<00:54:19.569><c> is</c><00:54:19.839><c> instance</c><00:54:20.710><c> of</c><00:54:20.859><c> URL</c><00:54:21.280><c> class</c><00:54:21.520><c> loader</c>

00:54:21.839 --> 00:54:21.849 align:start position:0%
loader is instance of URL class loader
 

00:54:21.849 --> 00:54:25.200 align:start position:0%
loader is instance of URL class loader
or<00:54:22.410><c> that</c><00:54:23.410><c> assumes</c><00:54:23.710><c> all</c><00:54:23.920><c> jdk</c><00:54:24.609><c> classes</c><00:54:25.089><c> are</c>

00:54:25.200 --> 00:54:25.210 align:start position:0%
or that assumes all jdk classes are
 

00:54:25.210 --> 00:54:27.150 align:start position:0%
or that assumes all jdk classes are
defined<00:54:25.569><c> by</c><00:54:25.809><c> the</c><00:54:25.869><c> bootstrap</c><00:54:26.380><c> loader</c><00:54:26.589><c> will</c>

00:54:27.150 --> 00:54:27.160 align:start position:0%
defined by the bootstrap loader will
 

00:54:27.160 --> 00:54:31.170 align:start position:0%
defined by the bootstrap loader will
fail<00:54:27.490><c> on</c><00:54:27.819><c> JD</c><00:54:28.270><c> k9</c><00:54:28.950><c> the</c><00:54:29.950><c> module</c><00:54:30.309><c> system</c><00:54:30.609><c> itself</c>

00:54:31.170 --> 00:54:31.180 align:start position:0%
fail on JD k9 the module system itself
 

00:54:31.180 --> 00:54:34.319 align:start position:0%
fail on JD k9 the module system itself
tries<00:54:31.540><c> hard</c><00:54:31.869><c> to</c><00:54:32.200><c> support</c><00:54:32.530><c> migration</c><00:54:33.220><c> but</c><00:54:34.180><c> it</c>

00:54:34.319 --> 00:54:34.329 align:start position:0%
tries hard to support migration but it
 

00:54:34.329 --> 00:54:37.799 align:start position:0%
tries hard to support migration but it
takes<00:54:34.540><c> only</c><00:54:34.809><c> one</c><00:54:35.500><c> unmaintained</c><00:54:36.220><c> library</c><00:54:37.210><c> to</c>

00:54:37.799 --> 00:54:37.809 align:start position:0%
takes only one unmaintained library to
 

00:54:37.809 --> 00:54:40.620 align:start position:0%
takes only one unmaintained library to
prevent<00:54:38.290><c> migration</c><00:54:38.890><c> to</c><00:54:39.520><c> jdk</c><00:54:39.790><c> 9</c><00:54:40.089><c> if</c><00:54:40.420><c> that</c>

00:54:40.620 --> 00:54:40.630 align:start position:0%
prevent migration to jdk 9 if that
 

00:54:40.630 --> 00:54:42.630 align:start position:0%
prevent migration to jdk 9 if that
library<00:54:41.079><c> can't</c><00:54:41.319><c> migrate</c><00:54:41.500><c> because</c><00:54:42.130><c> it's</c><00:54:42.280><c> using</c>

00:54:42.630 --> 00:54:42.640 align:start position:0%
library can't migrate because it's using
 

00:54:42.640 --> 00:54:44.819 align:start position:0%
library can't migrate because it's using
something<00:54:43.299><c> in</c><00:54:43.540><c> comms</c><00:54:43.839><c> on</c><00:54:44.020><c> all</c><00:54:44.109><c> /</c><00:54:44.230><c> patches</c><00:54:44.349><c> axes</c>

00:54:44.819 --> 00:54:44.829 align:start position:0%
something in comms on all / patches axes
 

00:54:44.829 --> 00:54:48.120 align:start position:0%
something in comms on all / patches axes
internal<00:54:45.190><c> checks</c><00:54:45.309><c> p</c><00:54:45.720><c> then</c><00:54:46.720><c> nothing</c><00:54:47.619><c> on</c><00:54:47.770><c> top</c><00:54:48.010><c> of</c>

00:54:48.120 --> 00:54:48.130 align:start position:0%
internal checks p then nothing on top of
 

00:54:48.130 --> 00:54:50.099 align:start position:0%
internal checks p then nothing on top of
it<00:54:48.220><c> can</c><00:54:48.490><c> migrate</c><00:54:48.670><c> to</c><00:54:49.359><c> being</c><00:54:49.540><c> a</c><00:54:49.599><c> module</c><00:54:49.900><c> either</c>

00:54:50.099 --> 00:54:50.109 align:start position:0%
it can migrate to being a module either
 

00:54:50.109 --> 00:54:53.430 align:start position:0%
it can migrate to being a module either
in<00:54:50.740><c> this</c><00:54:51.490><c> regard</c><00:54:51.819><c> modules</c><00:54:52.329><c> are</c><00:54:52.450><c> unusual</c><00:54:52.960><c> they</c>

00:54:53.430 --> 00:54:53.440 align:start position:0%
in this regard modules are unusual they
 

00:54:53.440 --> 00:54:55.200 align:start position:0%
in this regard modules are unusual they
suffer<00:54:53.770><c> from</c><00:54:53.890><c> a</c><00:54:54.040><c> tragedy</c><00:54:54.579><c> of</c><00:54:54.730><c> the</c><00:54:54.880><c> Commons</c>

00:54:55.200 --> 00:54:55.210 align:start position:0%
suffer from a tragedy of the Commons
 

00:54:55.210 --> 00:54:58.140 align:start position:0%
suffer from a tragedy of the Commons
whereas<00:54:56.170><c> most</c><00:54:56.410><c> big</c><00:54:56.829><c> features</c><00:54:57.369><c> like</c><00:54:57.609><c> generics</c>

00:54:58.140 --> 00:54:58.150 align:start position:0%
whereas most big features like generics
 

00:54:58.150 --> 00:55:00.900 align:start position:0%
whereas most big features like generics
or<00:54:58.329><c> lambdas</c><00:54:58.720><c> let</c><00:54:59.349><c> people</c><00:54:59.710><c> opt-in</c><00:55:00.250><c> at</c><00:55:00.579><c> their</c>

00:55:00.900 --> 00:55:00.910 align:start position:0%
or lambdas let people opt-in at their
 

00:55:00.910 --> 00:55:03.240 align:start position:0%
or lambdas let people opt-in at their
own<00:55:01.059><c> pace</c><00:55:01.329><c> without</c><00:55:01.690><c> needing</c><00:55:02.319><c> to</c><00:55:02.530><c> wait</c><00:55:02.859><c> for</c>

00:55:03.240 --> 00:55:03.250 align:start position:0%
own pace without needing to wait for
 

00:55:03.250 --> 00:55:08.579 align:start position:0%
own pace without needing to wait for
others<00:55:05.849><c> last</c><00:55:06.849><c> slide</c><00:55:07.119><c> as</c><00:55:07.359><c> i</c><00:55:07.930><c> said</c><00:55:08.140><c> the</c><00:55:08.290><c> single</c>

00:55:08.579 --> 00:55:08.589 align:start position:0%
others last slide as i said the single
 

00:55:08.589 --> 00:55:09.750 align:start position:0%
others last slide as i said the single
best<00:55:08.710><c> thing</c><00:55:08.829><c> you</c><00:55:09.040><c> can</c><00:55:09.130><c> do</c><00:55:09.280><c> to</c><00:55:09.309><c> prepare</c><00:55:09.579><c> for</c>

00:55:09.750 --> 00:55:09.760 align:start position:0%
best thing you can do to prepare for
 

00:55:09.760 --> 00:55:12.780 align:start position:0%
best thing you can do to prepare for
jetty<00:55:10.030><c> canine</c><00:55:10.390><c> is</c><00:55:10.720><c> fire</c><00:55:10.990><c> up</c><00:55:11.200><c> JDK</c><00:55:11.530><c> 8</c><00:55:11.559><c> and</c><00:55:12.099><c> run</c>

00:55:12.780 --> 00:55:12.790 align:start position:0%
jetty canine is fire up JDK 8 and run
 

00:55:12.790 --> 00:55:14.160 align:start position:0%
jetty canine is fire up JDK 8 and run
the<00:55:12.880><c> Jade</c><00:55:13.059><c> EPS</c><00:55:13.210><c> tool</c><00:55:13.480><c> which</c><00:55:13.750><c> analyzes</c>

00:55:14.160 --> 00:55:14.170 align:start position:0%
the Jade EPS tool which analyzes
 

00:55:14.170 --> 00:55:17.009 align:start position:0%
the Jade EPS tool which analyzes
dependences<00:55:14.950><c> it</c><00:55:15.730><c> can</c><00:55:15.970><c> tell</c><00:55:16.150><c> you</c><00:55:16.299><c> if</c><00:55:16.420><c> your</c><00:55:16.690><c> co</c>

00:55:17.009 --> 00:55:17.019 align:start position:0%
dependences it can tell you if your co
 

00:55:17.019 --> 00:55:19.620 align:start position:0%
dependences it can tell you if your co
or<00:55:17.229><c> code</c><00:55:17.589><c> that</c><00:55:17.799><c> you</c><00:55:17.919><c> rely</c><00:55:18.249><c> on</c><00:55:18.509><c> will</c><00:55:19.509><c> be</c>

00:55:19.620 --> 00:55:19.630 align:start position:0%
or code that you rely on will be
 

00:55:19.630 --> 00:55:23.159 align:start position:0%
or code that you rely on will be
affected<00:55:20.079><c> by</c><00:55:20.199><c> the</c><00:55:20.259><c> changes</c><00:55:20.769><c> in</c><00:55:21.009><c> 9</c><00:55:21.929><c> please</c><00:55:22.929><c> try</c>

00:55:23.159 --> 00:55:23.169 align:start position:0%
affected by the changes in 9 please try
 

00:55:23.169 --> 00:55:25.709 align:start position:0%
affected by the changes in 9 please try
the<00:55:23.229><c> JDK</c><00:55:23.739><c> 9</c><00:55:23.919><c> early</c><00:55:24.429><c> access</c><00:55:24.609><c> binaries</c><00:55:25.479><c> on</c>

00:55:25.709 --> 00:55:25.719 align:start position:0%
the JDK 9 early access binaries on
 

00:55:25.719 --> 00:55:28.259 align:start position:0%
the JDK 9 early access binaries on
java.net<00:55:26.319><c> the</c><00:55:27.249><c> module</c><00:55:27.609><c> system</c><00:55:27.849><c> has</c><00:55:28.119><c> been</c>

00:55:28.259 --> 00:55:28.269 align:start position:0%
java.net the module system has been
 

00:55:28.269 --> 00:55:29.880 align:start position:0%
java.net the module system has been
present<00:55:28.779><c> and</c><00:55:28.989><c> active</c><00:55:29.140><c> doing</c><00:55:29.769><c> the</c>

00:55:29.880 --> 00:55:29.890 align:start position:0%
present and active doing the
 

00:55:29.890 --> 00:55:32.880 align:start position:0%
present and active doing the
encapsulation<00:55:30.659><c> for</c><00:55:31.659><c> the</c><00:55:31.749><c> JDK</c><00:55:32.049><c> modules</c><00:55:32.409><c> since</c>

00:55:32.880 --> 00:55:32.890 align:start position:0%
encapsulation for the JDK modules since
 

00:55:32.890 --> 00:55:35.459 align:start position:0%
encapsulation for the JDK modules since
March<00:55:33.159><c> twenty</c><00:55:33.519><c> sixteen</c><00:55:33.909><c> plus</c><00:55:34.809><c> the</c><00:55:35.049><c> J</c><00:55:35.229><c> depth</c>

00:55:35.459 --> 00:55:35.469 align:start position:0%
March twenty sixteen plus the J depth
 

00:55:35.469 --> 00:55:38.579 align:start position:0%
March twenty sixteen plus the J depth
tool<00:55:35.799><c> in</c><00:55:36.009><c> jdk</c><00:55:36.369><c> nine</c><00:55:36.789><c> is</c><00:55:37.149><c> more</c><00:55:37.749><c> accurate</c><00:55:37.959><c> than</c>

00:55:38.579 --> 00:55:38.589 align:start position:0%
tool in jdk nine is more accurate than
 

00:55:38.589 --> 00:55:42.239 align:start position:0%
tool in jdk nine is more accurate than
the<00:55:38.649><c> one</c><00:55:38.890><c> in</c><00:55:39.279><c> jdk</c><00:55:39.579><c> 8</c><00:55:41.130><c> everything</c><00:55:42.130><c> you</c><00:55:42.219><c> ever</c>

00:55:42.239 --> 00:55:42.249 align:start position:0%
the one in jdk 8 everything you ever
 

00:55:42.249 --> 00:55:44.130 align:start position:0%
the one in jdk 8 everything you ever
wanted<00:55:42.549><c> to</c><00:55:42.789><c> know</c><00:55:42.999><c> about</c><00:55:43.269><c> the</c><00:55:43.599><c> module</c><00:55:43.929><c> system</c>

00:55:44.130 --> 00:55:44.140 align:start position:0%
wanted to know about the module system
 

00:55:44.140 --> 00:55:45.809 align:start position:0%
wanted to know about the module system
including<00:55:44.679><c> much</c><00:55:44.859><c> of</c><00:55:44.919><c> what</c><00:55:45.099><c> I've</c><00:55:45.249><c> said</c><00:55:45.429><c> here</c><00:55:45.609><c> is</c>

00:55:45.809 --> 00:55:45.819 align:start position:0%
including much of what I've said here is
 

00:55:45.819 --> 00:55:49.559 align:start position:0%
including much of what I've said here is
discussed<00:55:46.630><c> in</c><00:55:46.809><c> JEP</c><00:55:47.079><c> 261</c><00:55:47.949><c> I</c><00:55:48.390><c> cannot</c><00:55:49.390><c> emphasize</c>

00:55:49.559 --> 00:55:49.569 align:start position:0%
discussed in JEP 261 I cannot emphasize
 

00:55:49.569 --> 00:55:51.899 align:start position:0%
discussed in JEP 261 I cannot emphasize
enough<00:55:49.959><c> how</c><00:55:50.229><c> much</c><00:55:50.499><c> valuable</c><00:55:51.130><c> information</c><00:55:51.279><c> is</c>

00:55:51.899 --> 00:55:51.909 align:start position:0%
enough how much valuable information is
 

00:55:51.909 --> 00:55:56.159 align:start position:0%
enough how much valuable information is
inject<00:55:52.539><c> 261</c><00:55:53.459><c> there's</c><00:55:54.459><c> also</c><00:55:54.640><c> JEP</c><00:55:54.969><c> 260</c><00:55:55.599><c> which</c>

00:55:56.159 --> 00:55:56.169 align:start position:0%
inject 261 there's also JEP 260 which
 

00:55:56.169 --> 00:55:59.069 align:start position:0%
inject 261 there's also JEP 260 which
defines<00:55:56.649><c> those</c><00:55:57.069><c> JDK</c><00:55:57.549><c> internal</c><00:55:58.029><c> classes</c><00:55:58.539><c> to</c><00:55:58.959><c> be</c>

00:55:59.069 --> 00:55:59.079 align:start position:0%
defines those JDK internal classes to be
 

00:55:59.079 --> 00:56:02.939 align:start position:0%
defines those JDK internal classes to be
exposed<00:55:59.499><c> in</c><00:56:00.009><c> jdk</c><00:56:00.579><c> nine</c><00:56:00.909><c> and</c><00:56:01.149><c> JEP</c><00:56:01.989><c> 223</c><00:56:02.739><c> which</c>

00:56:02.939 --> 00:56:02.949 align:start position:0%
exposed in jdk nine and JEP 223 which
 

00:56:02.949 --> 00:56:04.469 align:start position:0%
exposed in jdk nine and JEP 223 which
defines<00:56:03.369><c> the</c><00:56:03.579><c> new</c><00:56:03.699><c> version</c><00:56:03.880><c> strings</c>

00:56:04.469 --> 00:56:04.479 align:start position:0%
defines the new version strings
 

00:56:04.479 --> 00:56:07.289 align:start position:0%
defines the new version strings
beginning<00:56:04.989><c> nine</c><00:56:05.259><c> dots</c><00:56:05.619><c> and</c><00:56:05.919><c> JEP</c><00:56:06.640><c> 220</c><00:56:07.119><c> which</c>

00:56:07.289 --> 00:56:07.299 align:start position:0%
beginning nine dots and JEP 220 which
 

00:56:07.299 --> 00:56:09.649 align:start position:0%
beginning nine dots and JEP 220 which
describes<00:56:08.019><c> how</c><00:56:08.199><c> are</c><00:56:08.380><c> ter</c><00:56:08.559><c> has</c><00:56:09.039><c> gone</c><00:56:09.189><c> away</c><00:56:09.279><c> and</c>

00:56:09.649 --> 00:56:09.659 align:start position:0%
describes how are ter has gone away and
 

00:56:09.659 --> 00:56:13.199 align:start position:0%
describes how are ter has gone away and
finally<00:56:10.659><c> JEP</c><00:56:11.380><c> 200</c><00:56:12.009><c> gives</c><00:56:12.189><c> an</c><00:56:12.339><c> overview</c><00:56:12.669><c> of</c><00:56:13.059><c> the</c>

00:56:13.199 --> 00:56:13.209 align:start position:0%
finally JEP 200 gives an overview of the
 

00:56:13.209 --> 00:56:15.120 align:start position:0%
finally JEP 200 gives an overview of the
JDK<00:56:13.569><c> modules</c><00:56:14.049><c> but</c><00:56:14.319><c> if</c><00:56:14.409><c> you've</c><00:56:14.559><c> already</c><00:56:14.919><c> read</c>

00:56:15.120 --> 00:56:15.130 align:start position:0%
JDK modules but if you've already read
 

00:56:15.130 --> 00:56:17.880 align:start position:0%
JDK modules but if you've already read
JEP<00:56:15.369><c> 261</c><00:56:16.179><c> there</c><00:56:16.479><c> won't</c><00:56:16.659><c> be</c><00:56:16.779><c> any</c><00:56:16.929><c> surprises</c><00:56:17.349><c> in</c>

00:56:17.880 --> 00:56:17.890 align:start position:0%
JEP 261 there won't be any surprises in
 

00:56:17.890 --> 00:56:20.459 align:start position:0%
JEP 261 there won't be any surprises in
200<00:56:18.789><c> and</c><00:56:18.969><c> with</c><00:56:19.329><c> that</c><00:56:19.390><c> at</c><00:56:19.809><c> fifty-six</c><00:56:20.409><c> minutes</c>

00:56:20.459 --> 00:56:20.469 align:start position:0%
200 and with that at fifty-six minutes
 

00:56:20.469 --> 00:56:28.200 align:start position:0%
200 and with that at fifty-six minutes
thank<00:56:21.249><c> you</c><00:56:21.309><c> very</c><00:56:21.339><c> much</c>

00:56:28.200 --> 00:56:28.210 align:start position:0%
 
 

00:56:28.210 --> 00:56:30.850 align:start position:0%
 
and<00:56:29.210><c> we</c><00:56:29.330><c> will</c><00:56:29.540><c> take</c><00:56:29.810><c> questions</c><00:56:30.050><c> I</c><00:56:30.590><c> think</c><00:56:30.770><c> we've</c>

00:56:30.850 --> 00:56:30.860 align:start position:0%
and we will take questions I think we've
 

00:56:30.860 --> 00:56:33.520 align:start position:0%
and we will take questions I think we've
got<00:56:31.010><c> become</c><00:56:31.340><c> to</c><00:56:31.490><c> 15</c><00:56:31.790><c> minutes</c><00:56:32.440><c> someone</c><00:56:33.440><c> has</c>

00:56:33.520 --> 00:56:33.530 align:start position:0%
got become to 15 minutes someone has
 

00:56:33.530 --> 00:56:36.730 align:start position:0%
got become to 15 minutes someone has
been<00:56:33.620><c> charging</c><00:56:33.920><c> their</c><00:56:34.130><c> iphone</c><00:56:35.230><c> no</c><00:56:36.230><c> wonder</c><00:56:36.620><c> it</c>

00:56:36.730 --> 00:56:36.740 align:start position:0%
been charging their iphone no wonder it
 

00:56:36.740 --> 00:56:41.230 align:start position:0%
been charging their iphone no wonder it
went<00:56:36.920><c> so</c><00:56:37.100><c> slowly</c><00:56:38.050><c> everything</c><00:56:39.050><c> was</c><00:56:40.060><c> so</c><00:56:41.060><c> if</c><00:56:41.150><c> you</c>

00:56:41.230 --> 00:56:41.240 align:start position:0%
went so slowly everything was so if you
 

00:56:41.240 --> 00:56:44.620 align:start position:0%
went so slowly everything was so if you
have<00:56:42.550><c> question</c><00:56:43.550><c> please</c><00:56:43.910><c> come</c><00:56:44.330><c> up</c><00:56:44.450><c> to</c><00:56:44.480><c> the</c>

00:56:44.620 --> 00:56:44.630 align:start position:0%
have question please come up to the
 

00:56:44.630 --> 00:56:46.660 align:start position:0%
have question please come up to the
front<00:56:44.720><c> we</c><00:56:44.990><c> cannot</c><00:56:45.320><c> hear</c><00:56:45.650><c> you</c><00:56:45.680><c> if</c><00:56:46.040><c> you</c><00:56:46.340><c> stand</c>

00:56:46.660 --> 00:56:46.670 align:start position:0%
front we cannot hear you if you stand
 

00:56:46.670 --> 00:56:48.190 align:start position:0%
front we cannot hear you if you stand
where<00:56:46.910><c> you</c><00:56:46.940><c> are</c><00:56:47.030><c> I</c><00:56:47.300><c> promise</c><00:56:47.720><c> we're</c><00:56:47.870><c> not</c><00:56:47.900><c> making</c>

00:56:48.190 --> 00:56:48.200 align:start position:0%
where you are I promise we're not making
 

00:56:48.200 --> 00:56:49.570 align:start position:0%
where you are I promise we're not making
it<00:56:48.290><c> up</c><00:56:48.320><c> we</c><00:56:48.470><c> can't</c><00:56:48.680><c> hear</c><00:56:48.830><c> you</c><00:56:48.890><c> so</c><00:56:49.280><c> if</c><00:56:49.370><c> you</c><00:56:49.430><c> have</c><00:56:49.550><c> a</c>

00:56:49.570 --> 00:56:49.580 align:start position:0%
it up we can't hear you so if you have a
 

00:56:49.580 --> 00:56:51.910 align:start position:0%
it up we can't hear you so if you have a
question<00:56:49.670><c> please</c><00:56:50.140><c> come</c><00:56:51.140><c> and</c><00:56:51.410><c> use</c><00:56:51.590><c> this</c><00:56:51.710><c> mic</c>

00:56:51.910 --> 00:56:51.920 align:start position:0%
question please come and use this mic
 

00:56:51.920 --> 00:56:55.960 align:start position:0%
question please come and use this mic
here<00:56:53.710><c> is</c><00:56:54.710><c> it</c><00:56:54.920><c> a</c><00:56:54.980><c> different</c><00:56:55.250><c> question</c><00:56:55.550><c> than</c><00:56:55.790><c> the</c>

00:56:55.960 --> 00:56:55.970 align:start position:0%
here is it a different question than the
 

00:56:55.970 --> 00:56:57.370 align:start position:0%
here is it a different question than the
ones<00:56:56.120><c> you've</c><00:56:56.360><c> asked</c><00:56:56.630><c> before</c><00:56:56.870><c> yeah</c><00:56:57.020><c> it's</c>

00:56:57.370 --> 00:56:57.380 align:start position:0%
ones you've asked before yeah it's
 

00:56:57.380 --> 00:57:02.170 align:start position:0%
ones you've asked before yeah it's
different<00:56:58.630><c> so</c><00:56:59.630><c> one</c><00:57:00.290><c> thing</c><00:57:00.500><c> that</c><00:57:00.670><c> I've</c><00:57:01.670><c> always</c>

00:57:02.170 --> 00:57:02.180 align:start position:0%
different so one thing that I've always
 

00:57:02.180 --> 00:57:05.230 align:start position:0%
different so one thing that I've always
found<00:57:02.360><c> odd</c><00:57:02.600><c> in</c><00:57:02.840><c> tomcat</c><00:57:03.470><c> they</c><00:57:04.310><c> try</c><00:57:04.910><c> to</c><00:57:04.970><c> prevent</c>

00:57:05.230 --> 00:57:05.240 align:start position:0%
found odd in tomcat they try to prevent
 

00:57:05.240 --> 00:57:07.090 align:start position:0%
found odd in tomcat they try to prevent
classloader<00:57:05.810><c> d-league's</c><00:57:06.080><c> by</c><00:57:06.410><c> knowing</c><00:57:06.920><c> out</c>

00:57:07.090 --> 00:57:07.100 align:start position:0%
classloader d-league's by knowing out
 

00:57:07.100 --> 00:57:09.160 align:start position:0%
classloader d-league's by knowing out
all<00:57:07.430><c> static</c><00:57:08.000><c> fields</c><00:57:08.450><c> when</c><00:57:08.570><c> you</c><00:57:08.660><c> unload</c><00:57:08.930><c> a</c><00:57:08.990><c> web</c>

00:57:09.160 --> 00:57:09.170 align:start position:0%
all static fields when you unload a web
 

00:57:09.170 --> 00:57:12.870 align:start position:0%
all static fields when you unload a web
app<00:57:09.350><c> I'm</c><00:57:10.220><c> assuming</c><00:57:11.090><c> that</c><00:57:11.240><c> won't</c><00:57:11.450><c> work</c><00:57:11.690><c> anymore</c>

00:57:12.870 --> 00:57:12.880 align:start position:0%
app I'm assuming that won't work anymore
 

00:57:12.880 --> 00:57:15.370 align:start position:0%
app I'm assuming that won't work anymore
it<00:57:13.880><c> will</c><00:57:14.090><c> work</c><00:57:14.360><c> if</c><00:57:14.600><c> they</c><00:57:14.750><c> do</c><00:57:14.810><c> the</c><00:57:14.990><c> right</c><00:57:15.140><c> thing</c>

00:57:15.370 --> 00:57:15.380 align:start position:0%
it will work if they do the right thing
 

00:57:15.380 --> 00:57:17.230 align:start position:0%
it will work if they do the right thing
how<00:57:16.130><c> do</c><00:57:16.190><c> they</c><00:57:16.340><c> make</c><00:57:16.460><c> that</c><00:57:16.670><c> happen</c><00:57:16.820><c> because</c>

00:57:17.230 --> 00:57:17.240 align:start position:0%
how do they make that happen because
 

00:57:17.240 --> 00:57:19.540 align:start position:0%
how do they make that happen because
they're<00:57:17.390><c> loading</c><00:57:17.720><c> the</c><00:57:17.810><c> classes</c><00:57:18.260><c> the</c><00:57:19.010><c> Tomcat</c>

00:57:19.540 --> 00:57:19.550 align:start position:0%
they're loading the classes the Tomcat
 

00:57:19.550 --> 00:57:22.960 align:start position:0%
they're loading the classes the Tomcat
if<00:57:19.730><c> if</c><00:57:20.120><c> the</c><00:57:20.180><c> web</c><00:57:21.020><c> app</c><00:57:21.200><c> is</c><00:57:21.380><c> itself</c><00:57:21.680><c> a</c><00:57:21.860><c> module</c><00:57:22.160><c> but</c>

00:57:22.960 --> 00:57:22.970 align:start position:0%
if if the web app is itself a module but
 

00:57:22.970 --> 00:57:24.670 align:start position:0%
if if the web app is itself a module but
all<00:57:23.120><c> of</c><00:57:23.240><c> its</c><00:57:23.330><c> classes</c><00:57:23.750><c> are</c><00:57:23.870><c> loaded</c><00:57:24.170><c> by</c><00:57:24.260><c> tom</c><00:57:24.470><c> cat</c>

00:57:24.670 --> 00:57:24.680 align:start position:0%
all of its classes are loaded by tom cat
 

00:57:24.680 --> 00:57:29.170 align:start position:0%
all of its classes are loaded by tom cat
tom<00:57:24.890><c> cat</c><00:57:25.100><c> is</c><00:57:25.310><c> a</c><00:57:26.000><c> deity</c><00:57:27.370><c> it</c><00:57:28.370><c> can</c><00:57:28.580><c> rewrite</c><00:57:28.910><c> module</c>

00:57:29.170 --> 00:57:29.180 align:start position:0%
tom cat is a deity it can rewrite module
 

00:57:29.180 --> 00:57:33.130 align:start position:0%
tom cat is a deity it can rewrite module
declarations<00:57:29.990><c> on</c><00:57:30.290><c> the</c><00:57:30.740><c> way</c><00:57:30.860><c> in</c><00:57:31.780><c> it</c><00:57:32.780><c> can</c><00:57:32.960><c> choose</c>

00:57:33.130 --> 00:57:33.140 align:start position:0%
declarations on the way in it can choose
 

00:57:33.140 --> 00:57:35.350 align:start position:0%
declarations on the way in it can choose
to<00:57:33.290><c> export</c><00:57:33.680><c> to</c><00:57:33.920><c> just</c><00:57:34.370><c> to</c><00:57:34.490><c> itself</c><00:57:34.820><c> by</c><00:57:35.090><c> the</c><00:57:35.150><c> way</c>

00:57:35.350 --> 00:57:35.360 align:start position:0%
to export to just to itself by the way
 

00:57:35.360 --> 00:57:38.800 align:start position:0%
to export to just to itself by the way
or<00:57:35.630><c> to</c><00:57:35.900><c> one</c><00:57:36.020><c> of</c><00:57:36.110><c> its</c><00:57:36.200><c> modules</c><00:57:36.910><c> any</c><00:57:37.910><c> packages</c><00:57:38.630><c> it</c>

00:57:38.800 --> 00:57:38.810 align:start position:0%
or to one of its modules any packages it
 

00:57:38.810 --> 00:57:41.050 align:start position:0%
or to one of its modules any packages it
needs<00:57:39.020><c> to</c><00:57:39.290><c> reflect</c><00:57:39.500><c> over</c><00:57:40.220><c> although</c><00:57:40.460><c> whether</c>

00:57:41.050 --> 00:57:41.060 align:start position:0%
needs to reflect over although whether
 

00:57:41.060 --> 00:57:42.220 align:start position:0%
needs to reflect over although whether
it<00:57:41.240><c> actually</c><00:57:41.300><c> needs</c><00:57:41.630><c> to</c><00:57:41.810><c> do</c><00:57:41.930><c> what</c><00:57:42.080><c> you've</c><00:57:42.170><c> just</c>

00:57:42.220 --> 00:57:42.230 align:start position:0%
it actually needs to do what you've just
 

00:57:42.230 --> 00:57:43.870 align:start position:0%
it actually needs to do what you've just
said<00:57:42.470><c> sounds</c><00:57:42.710><c> like</c><00:57:42.920><c> an</c><00:57:43.040><c> optimization</c><00:57:43.670><c> that</c>

00:57:43.870 --> 00:57:43.880 align:start position:0%
said sounds like an optimization that
 

00:57:43.880 --> 00:57:48.540 align:start position:0%
said sounds like an optimization that
you<00:57:44.060><c> may</c><00:57:44.180><c> not</c><00:57:44.360><c> need</c><00:57:44.540><c> on</c><00:57:45.730><c> its</c><00:57:46.730><c> mike</c><00:57:46.910><c> on</c><00:57:47.120><c> yeah</c>

00:57:48.540 --> 00:57:48.550 align:start position:0%
you may not need on its mike on yeah
 

00:57:48.550 --> 00:57:52.570 align:start position:0%
you may not need on its mike on yeah
there's<00:57:49.550><c> also</c><00:57:49.730><c> a</c><00:57:50.470><c> specific</c><00:57:51.470><c> list</c><00:57:51.590><c> of</c><00:57:51.890><c> issues</c>

00:57:52.570 --> 00:57:52.580 align:start position:0%
there's also a specific list of issues
 

00:57:52.580 --> 00:57:55.060 align:start position:0%
there's also a specific list of issues
in<00:57:53.150><c> quotes</c><00:57:53.360><c> that</c><00:57:53.570><c> Tomcat</c><00:57:54.140><c> has</c><00:57:54.320><c> with</c><00:57:54.530><c> the</c><00:57:54.620><c> JDK</c>

00:57:55.060 --> 00:57:55.070 align:start position:0%
in quotes that Tomcat has with the JDK
 

00:57:55.070 --> 00:57:58.000 align:start position:0%
in quotes that Tomcat has with the JDK
and<00:57:55.550><c> where</c><00:57:56.330><c> it's</c><00:57:56.480><c> gone</c><00:57:56.720><c> into</c><00:57:57.020><c> the</c><00:57:57.110><c> JDK</c><00:57:57.500><c> and</c><00:57:57.680><c> all</c>

00:57:58.000 --> 00:57:58.010 align:start position:0%
and where it's gone into the JDK and all
 

00:57:58.010 --> 00:58:00.070 align:start position:0%
and where it's gone into the JDK and all
doubt<00:57:58.220><c> fields</c><00:57:58.670><c> and</c><00:57:58.820><c> things</c><00:57:58.970><c> like</c><00:57:59.090><c> that</c><00:57:59.150><c> many</c>

00:58:00.070 --> 00:58:00.080 align:start position:0%
doubt fields and things like that many
 

00:58:00.080 --> 00:58:01.240 align:start position:0%
doubt fields and things like that many
of<00:58:00.200><c> those</c><00:58:00.260><c> issues</c><00:58:00.470><c> have</c><00:58:00.800><c> actually</c><00:58:01.100><c> already</c>

00:58:01.240 --> 00:58:01.250 align:start position:0%
of those issues have actually already
 

00:58:01.250 --> 00:58:03.580 align:start position:0%
of those issues have actually already
been<00:58:01.580><c> addressed</c><00:58:01.850><c> and</c><00:58:02.300><c> in</c><00:58:03.080><c> fact</c><00:58:03.230><c> over</c><00:58:03.440><c> the</c><00:58:03.530><c> last</c>

00:58:03.580 --> 00:58:03.590 align:start position:0%
been addressed and in fact over the last
 

00:58:03.590 --> 00:58:06.100 align:start position:0%
been addressed and in fact over the last
couple<00:58:04.520><c> of</c><00:58:04.700><c> bills</c><00:58:04.910><c> there</c><00:58:05.660><c> are</c><00:58:05.750><c> some</c><00:58:05.870><c> specific</c>

00:58:06.100 --> 00:58:06.110 align:start position:0%
couple of bills there are some specific
 

00:58:06.110 --> 00:58:08.830 align:start position:0%
couple of bills there are some specific
fixes<00:58:06.680><c> in</c><00:58:06.800><c> the</c><00:58:06.890><c> JDK</c><00:58:07.340><c> specifically</c><00:58:07.970><c> for</c><00:58:08.210><c> these</c>

00:58:08.830 --> 00:58:08.840 align:start position:0%
fixes in the JDK specifically for these
 

00:58:08.840 --> 00:58:13.170 align:start position:0%
fixes in the JDK specifically for these
type<00:58:08.990><c> of</c><00:58:09.020><c> issues</c><00:58:09.200><c> that</c><00:58:10.660><c> Tomcat</c><00:58:11.660><c> and</c><00:58:11.960><c> ran</c><00:58:12.680><c> into</c>

00:58:13.170 --> 00:58:13.180 align:start position:0%
type of issues that Tomcat and ran into
 

00:58:13.180 --> 00:58:15.490 align:start position:0%
type of issues that Tomcat and ran into
thank<00:58:14.180><c> you</c><00:58:14.300><c> that</c><00:58:14.630><c> actually</c><00:58:15.050><c> the</c><00:58:15.110><c> maintainer</c>

00:58:15.490 --> 00:58:15.500 align:start position:0%
thank you that actually the maintainer
 

00:58:15.500 --> 00:58:16.990 align:start position:0%
thank you that actually the maintainer
zuv<00:58:15.740><c> Tomcat</c><00:58:16.130><c> I</c><00:58:16.160><c> think</c><00:58:16.370><c> Mark</c><00:58:16.580><c> Thomas</c><00:58:16.790><c> in</c>

00:58:16.990 --> 00:58:17.000 align:start position:0%
zuv Tomcat I think Mark Thomas in
 

00:58:17.000 --> 00:58:18.220 align:start position:0%
zuv Tomcat I think Mark Thomas in
particular<00:58:17.210><c> has</c><00:58:17.450><c> been</c><00:58:17.630><c> proactive</c><00:58:18.110><c> in</c>

00:58:18.220 --> 00:58:18.230 align:start position:0%
particular has been proactive in
 

00:58:18.230 --> 00:58:19.930 align:start position:0%
particular has been proactive in
actually<00:58:18.620><c> finding</c><00:58:19.190><c> these</c><00:58:19.340><c> issues</c><00:58:19.670><c> and</c>

00:58:19.930 --> 00:58:19.940 align:start position:0%
actually finding these issues and
 

00:58:19.940 --> 00:58:23.059 align:start position:0%
actually finding these issues and
sending<00:58:20.480><c> bug</c><00:58:20.600><c> reports</c>

00:58:23.059 --> 00:58:23.069 align:start position:0%
 
 

00:58:23.069 --> 00:58:25.109 align:start position:0%
 
the<00:58:24.069><c> person</c><00:58:24.339><c> who</c><00:58:24.430><c> had</c><00:58:24.519><c> a</c><00:58:24.549><c> question</c><00:58:24.759><c> there</c><00:58:25.089><c> is</c>

00:58:25.109 --> 00:58:25.119 align:start position:0%
the person who had a question there is
 

00:58:25.119 --> 00:58:27.569 align:start position:0%
the person who had a question there is
left<00:58:25.450><c> so</c><00:58:25.869><c> that</c><00:58:26.740><c> was</c><00:58:26.859><c> a</c><00:58:26.890><c> successful</c><00:58:27.339><c> strategy</c>

00:58:27.569 --> 00:58:27.579 align:start position:0%
left so that was a successful strategy
 

00:58:27.579 --> 00:58:32.609 align:start position:0%
left so that was a successful strategy
yes<00:58:30.269><c> what</c><00:58:31.269><c> is</c><00:58:31.420><c> going</c><00:58:31.599><c> to</c><00:58:31.809><c> be</c><00:58:31.930><c> the</c><00:58:32.049><c> fate</c><00:58:32.349><c> of</c>

00:58:32.609 --> 00:58:32.619 align:start position:0%
yes what is going to be the fate of
 

00:58:32.619 --> 00:58:38.370 align:start position:0%
yes what is going to be the fate of
shaded<00:58:33.400><c> jars</c><00:58:33.730><c> and</c><00:58:34.119><c> uber</c><00:58:34.599><c> jars</c><00:58:37.019><c> where's</c><00:58:38.019><c> Robert</c>

00:58:38.370 --> 00:58:38.380 align:start position:0%
shaded jars and uber jars where's Robert
 

00:58:38.380 --> 00:58:42.239 align:start position:0%
shaded jars and uber jars where's Robert
oh<00:58:38.789><c> it's</c><00:58:39.789><c> right</c><00:58:39.970><c> behind</c><00:58:40.089><c> you</c><00:58:40.359><c> a</c><00:58:41.069><c> question</c><00:58:42.069><c> for</c>

00:58:42.239 --> 00:58:42.249 align:start position:0%
oh it's right behind you a question for
 

00:58:42.249 --> 00:58:47.309 align:start position:0%
oh it's right behind you a question for
me<00:58:42.309><c> them</c><00:58:42.519><c> I</c><00:58:43.499><c> don't</c><00:58:44.499><c> know</c><00:58:44.589><c> ask</c><00:58:45.160><c> the</c><00:58:45.609><c> maven</c><00:58:46.319><c> the</c>

00:58:47.309 --> 00:58:47.319 align:start position:0%
me them I don't know ask the maven the
 

00:58:47.319 --> 00:58:53.549 align:start position:0%
me them I don't know ask the maven the
committer<00:58:47.589><c> say</c><00:58:48.160><c> someone</c><00:58:52.170><c> it's</c><00:58:53.170><c> not</c><00:58:53.319><c> only</c><00:58:53.440><c> a</c>

00:58:53.549 --> 00:58:53.559 align:start position:0%
committer say someone it's not only a
 

00:58:53.559 --> 00:58:56.450 align:start position:0%
committer say someone it's not only a
maid<00:58:53.769><c> problem</c><00:58:54.249><c> it's</c><00:58:54.460><c> about</c><00:58:55.150><c> sharing</c><00:58:55.599><c> it</c><00:58:55.839><c> about</c>

00:58:56.450 --> 00:58:56.460 align:start position:0%
maid problem it's about sharing it about
 

00:58:56.460 --> 00:58:59.609 align:start position:0%
maid problem it's about sharing it about
correct<00:58:57.460><c> creating</c><00:58:57.880><c> the</c><00:58:57.970><c> uber</c><00:58:58.210><c> jar</c><00:58:58.420><c> and</c><00:58:58.660><c> there</c>

00:58:59.609 --> 00:58:59.619 align:start position:0%
correct creating the uber jar and there
 

00:58:59.619 --> 00:59:03.359 align:start position:0%
correct creating the uber jar and there
you<00:58:59.980><c> have</c><00:59:00.089><c> all</c><00:59:01.089><c> the</c><00:59:01.539><c> classes</c><00:59:02.079><c> just</c><00:59:02.470><c> inside</c><00:59:03.309><c> one</c>

00:59:03.359 --> 00:59:03.369 align:start position:0%
you have all the classes just inside one
 

00:59:03.369 --> 00:59:06.809 align:start position:0%
you have all the classes just inside one
jar<00:59:03.849><c> so</c><00:59:04.539><c> you</c><00:59:04.630><c> have</c><00:59:04.839><c> lost</c><00:59:05.410><c> your</c><00:59:05.819><c> encapsulation</c>

00:59:06.809 --> 00:59:06.819 align:start position:0%
jar so you have lost your encapsulation
 

00:59:06.819 --> 00:59:11.009 align:start position:0%
jar so you have lost your encapsulation
so<00:59:07.480><c> I</c><00:59:07.900><c> know</c><00:59:08.170><c> that</c><00:59:08.319><c> mark</c><00:59:09.039><c> has</c><00:59:09.400><c> one</c><00:59:09.970><c> thing</c><00:59:10.809><c> about</c>

00:59:11.009 --> 00:59:11.019 align:start position:0%
so I know that mark has one thing about
 

00:59:11.019 --> 00:59:14.460 align:start position:0%
so I know that mark has one thing about
that<00:59:11.230><c> only</c><00:59:11.650><c> his</c><00:59:12.160><c> issue</c><00:59:12.400><c> list</c><00:59:12.759><c> so</c><00:59:13.230><c> which</c><00:59:14.230><c> is</c><00:59:14.380><c> to</c>

00:59:14.460 --> 00:59:14.470 align:start position:0%
that only his issue list so which is to
 

00:59:14.470 --> 00:59:16.410 align:start position:0%
that only his issue list so which is to
wait<00:59:14.559><c> for</c><00:59:14.859><c> an</c><00:59:14.950><c> answer</c><00:59:15.039><c> a</c><00:59:15.279><c> life</c><00:59:15.460><c> or</c><00:59:15.670><c> a</c><00:59:15.730><c> proposal</c>

00:59:16.410 --> 00:59:16.420 align:start position:0%
wait for an answer a life or a proposal
 

00:59:16.420 --> 00:59:24.570 align:start position:0%
wait for an answer a life or a proposal
for<00:59:16.720><c> it</c>

00:59:24.570 --> 00:59:24.580 align:start position:0%
 
 

00:59:24.580 --> 00:59:32.590 align:start position:0%
 
ha<00:59:25.580><c> no</c><00:59:26.390><c> more</c><00:59:26.540><c> questions</c><00:59:26.630><c> ah</c><00:59:29.650><c> ok</c><00:59:30.650><c> please</c><00:59:31.600><c> Wow</c>

00:59:32.590 --> 00:59:32.600 align:start position:0%
ha no more questions ah ok please Wow
 

00:59:32.600 --> 00:59:34.210 align:start position:0%
ha no more questions ah ok please Wow
we've<00:59:32.810><c> really</c><00:59:33.020><c> raised</c><00:59:33.170><c> the</c><00:59:33.260><c> barrier</c><00:59:34.070><c> to</c><00:59:34.190><c> entry</c>

00:59:34.210 --> 00:59:34.220 align:start position:0%
we've really raised the barrier to entry
 

00:59:34.220 --> 00:59:35.770 align:start position:0%
we've really raised the barrier to entry
is<00:59:34.550><c> very</c><00:59:34.730><c> high</c><00:59:34.880><c> so</c><00:59:34.910><c> no</c><00:59:35.210><c> one</c><00:59:35.330><c> has</c><00:59:35.360><c> questions</c>

00:59:35.770 --> 00:59:35.780 align:start position:0%
is very high so no one has questions
 

00:59:35.780 --> 00:59:40.990 align:start position:0%
is very high so no one has questions
anymore<00:59:38.950><c> can</c><00:59:39.950><c> you</c><00:59:40.040><c> give</c><00:59:40.190><c> an</c><00:59:40.310><c> example</c><00:59:40.370><c> i</c><00:59:40.820><c> canna</c>

00:59:40.990 --> 00:59:41.000 align:start position:0%
anymore can you give an example i canna
 

00:59:41.000 --> 00:59:43.900 align:start position:0%
anymore can you give an example i canna
site<00:59:41.240><c> you</c><00:59:41.330><c> have</c><00:59:41.390><c> here</c><00:59:41.540><c> what</c><00:59:42.520><c> would</c><00:59:43.520><c> manage</c>

00:59:43.900 --> 00:59:43.910 align:start position:0%
site you have here what would manage
 

00:59:43.910 --> 00:59:45.370 align:start position:0%
site you have here what would manage
like<00:59:44.150><c> the</c><00:59:44.300><c> this</c><00:59:44.600><c> Hadoop</c><00:59:44.930><c> layer</c><00:59:45.140><c> this</c>

00:59:45.370 --> 00:59:45.380 align:start position:0%
like the this Hadoop layer this
 

00:59:45.380 --> 00:59:51.460 align:start position:0%
like the this Hadoop layer this
JavaScript<00:59:45.890><c> layer</c><00:59:46.870><c> Tomcats</c><00:59:47.870><c> I</c><00:59:49.240><c> mean</c><00:59:50.240><c> it</c><00:59:51.140><c> it's</c>

00:59:51.460 --> 00:59:51.470 align:start position:0%
JavaScript layer Tomcats I mean it it's
 

00:59:51.470 --> 00:59:53.680 align:start position:0%
JavaScript layer Tomcats I mean it it's
hard<00:59:51.710><c> to</c><00:59:51.830><c> get</c><00:59:51.950><c> across</c><00:59:52.160><c> how</c><00:59:52.370><c> disinterested</c><00:59:53.330><c> we</c>

00:59:53.680 --> 00:59:53.690 align:start position:0%
hard to get across how disinterested we
 

00:59:53.690 --> 00:59:54.970 align:start position:0%
hard to get across how disinterested we
are<00:59:53.840><c> in</c><00:59:54.020><c> class</c><00:59:54.230><c> loaders</c><00:59:54.620><c> if</c><00:59:54.800><c> you're</c><00:59:54.950><c> a</c>

00:59:54.970 --> 00:59:54.980 align:start position:0%
are in class loaders if you're a
 

00:59:54.980 --> 00:59:57.340 align:start position:0%
are in class loaders if you're a
framework<00:59:55.280><c> that</c><00:59:55.670><c> spinning</c><00:59:56.090><c> loaders</c><00:59:56.420><c> today</c><00:59:56.690><c> it</c>

00:59:57.340 --> 00:59:57.350 align:start position:0%
framework that spinning loaders today it
 

00:59:57.350 --> 01:00:02.140 align:start position:0%
framework that spinning loaders today it
all<00:59:57.590><c> still</c><00:59:57.860><c> works</c><00:59:59.800><c> v</c><01:00:00.800><c> you</c><01:00:01.670><c> can</c><01:00:01.790><c> even</c><01:00:01.880><c> know</c><01:00:02.090><c> you</c>

01:00:02.140 --> 01:00:02.150 align:start position:0%
all still works v you can even know you
 

01:00:02.150 --> 01:00:04.480 align:start position:0%
all still works v you can even know you
can<01:00:02.360><c> even</c><01:00:02.450><c> load</c><01:00:02.780><c> classes</c><01:00:03.650><c> from</c><01:00:03.860><c> modular</c><01:00:04.280><c> jar</c>

01:00:04.480 --> 01:00:04.490 align:start position:0%
can even load classes from modular jar
 

01:00:04.490 --> 01:00:05.920 align:start position:0%
can even load classes from modular jar
files<01:00:04.760><c> if</c><01:00:05.090><c> you're</c><01:00:05.210><c> if</c><01:00:05.390><c> you're</c><01:00:05.480><c> all</c><01:00:05.840><c> the</c>

01:00:05.920 --> 01:00:05.930 align:start position:0%
files if you're if you're all the
 

01:00:05.930 --> 01:00:07.480 align:start position:0%
files if you're if you're all the
framework<01:00:06.290><c> and</c><01:00:06.440><c> you're</c><01:00:06.560><c> ignoring</c><01:00:06.710><c> the</c><01:00:07.130><c> module</c>

01:00:07.480 --> 01:00:07.490 align:start position:0%
framework and you're ignoring the module
 

01:00:07.490 --> 01:00:09.490 align:start position:0%
framework and you're ignoring the module
in<01:00:07.610><c> photo</c><01:00:07.790><c> class</c><01:00:07.820><c> file</c><01:00:08.300><c> ok</c><01:00:09.110><c> that's</c><01:00:09.320><c> your</c>

01:00:09.490 --> 01:00:09.500 align:start position:0%
in photo class file ok that's your
 

01:00:09.500 --> 01:00:13.630 align:start position:0%
in photo class file ok that's your
lookout<01:00:10.330><c> but</c><01:00:11.330><c> if</c><01:00:11.570><c> you</c><01:00:11.990><c> want</c><01:00:12.320><c> to</c><01:00:12.770><c> respect</c><01:00:13.340><c> the</c>

01:00:13.630 --> 01:00:13.640 align:start position:0%
lookout but if you want to respect the
 

01:00:13.640 --> 01:00:16.720 align:start position:0%
lookout but if you want to respect the
modular<01:00:14.440><c> dependencies</c><01:00:15.440><c> and</c><01:00:15.740><c> encapsulation</c>

01:00:16.720 --> 01:00:16.730 align:start position:0%
modular dependencies and encapsulation
 

01:00:16.730 --> 01:00:20.890 align:start position:0%
modular dependencies and encapsulation
that<01:00:17.270><c> the</c><01:00:17.450><c> web</c><01:00:17.630><c> app</c><01:00:17.810><c> code</c><01:00:18.110><c> itself</c><01:00:19.660><c> write</c><01:00:20.660><c> it</c><01:00:20.750><c> up</c>

01:00:20.890 --> 01:00:20.900 align:start position:0%
that the web app code itself write it up
 

01:00:20.900 --> 01:00:23.470 align:start position:0%
that the web app code itself write it up
to<01:00:21.050><c> the</c><01:00:21.140><c> container</c><01:00:21.470><c> to</c><01:00:21.890><c> not</c><01:00:22.550><c> ignore</c><01:00:22.820><c> module</c><01:00:23.390><c> in</c>

01:00:23.470 --> 01:00:23.480 align:start position:0%
to the container to not ignore module in
 

01:00:23.480 --> 01:00:25.810 align:start position:0%
to the container to not ignore module in
federal<01:00:23.750><c> class</c><01:00:23.960><c> files</c><01:00:24.260><c> to</c><01:00:25.160><c> load</c><01:00:25.370><c> them</c><01:00:25.610><c> and</c>

01:00:25.810 --> 01:00:25.820 align:start position:0%
federal class files to load them and
 

01:00:25.820 --> 01:00:28.360 align:start position:0%
federal class files to load them and
when<01:00:26.690><c> you</c><01:00:26.810><c> load</c><01:00:26.960><c> them</c><01:00:27.170><c> the</c><01:00:27.890><c> whole</c><01:00:28.010><c> point</c><01:00:28.160><c> is</c>

01:00:28.360 --> 01:00:28.370 align:start position:0%
when you load them the whole point is
 

01:00:28.370 --> 01:00:29.440 align:start position:0%
when you load them the whole point is
that<01:00:28.400><c> a</c><01:00:28.520><c> module</c><01:00:28.850><c> says</c><01:00:29.000><c> not</c><01:00:29.150><c> only</c><01:00:29.180><c> would</c>

01:00:29.440 --> 01:00:29.450 align:start position:0%
that a module says not only would
 

01:00:29.450 --> 01:00:31.560 align:start position:0%
that a module says not only would
exports<01:00:29.960><c> board</c><01:00:30.170><c> it</c><01:00:30.260><c> depends</c><01:00:30.650><c> on</c><01:00:30.770><c> and</c>

01:00:31.560 --> 01:00:31.570 align:start position:0%
exports board it depends on and
 

01:00:31.570 --> 01:00:36.100 align:start position:0%
exports board it depends on and
hopefully<01:00:32.570><c> tom</c><01:00:33.380><c> cat</c><01:00:33.620><c> will</c><01:00:33.830><c> be</c><01:00:33.950><c> able</c><01:00:34.100><c> to</c><01:00:35.110><c> call</c>

01:00:36.100 --> 01:00:36.110 align:start position:0%
hopefully tom cat will be able to call
 

01:00:36.110 --> 01:00:38.500 align:start position:0%
hopefully tom cat will be able to call
the<01:00:36.320><c> module</c><01:00:36.650><c> system</c><01:00:36.860><c> API</c><01:00:37.280><c> to</c><01:00:37.460><c> resolve</c><01:00:38.240><c> those</c>

01:00:38.500 --> 01:00:38.510 align:start position:0%
the module system API to resolve those
 

01:00:38.510 --> 01:00:42.220 align:start position:0%
the module system API to resolve those
dependencies<01:00:39.080><c> and</c><01:00:39.560><c> spin</c><01:00:40.520><c> up</c><01:00:40.700><c> a</c><01:00:40.970><c> small</c><01:00:41.750><c> layer</c>

01:00:42.220 --> 01:00:42.230 align:start position:0%
dependencies and spin up a small layer
 

01:00:42.230 --> 01:00:44.260 align:start position:0%
dependencies and spin up a small layer
with<01:00:42.710><c> exactly</c><01:00:43.370><c> the</c><01:00:43.550><c> same</c><01:00:43.700><c> class</c><01:00:43.910><c> though</c><01:00:44.120><c> does</c>

01:00:44.260 --> 01:00:44.270 align:start position:0%
with exactly the same class though does
 

01:00:44.270 --> 01:00:48.160 align:start position:0%
with exactly the same class though does
it<01:00:44.300><c> had</c><01:00:44.480><c> before</c><01:00:44.980><c> but</c><01:00:46.150><c> with</c><01:00:47.150><c> the</c><01:00:47.450><c> classes</c><01:00:47.990><c> of</c>

01:00:48.160 --> 01:00:48.170 align:start position:0%
it had before but with the classes of
 

01:00:48.170 --> 01:00:51.610 align:start position:0%
it had before but with the classes of
that<01:00:48.650><c> loader</c><01:00:48.920><c> now</c><01:00:49.490><c> known</c><01:00:49.880><c> to</c><01:00:49.910><c> be</c><01:00:50.270><c> members</c><01:00:50.630><c> of</c><01:00:50.840><c> a</c>

01:00:51.610 --> 01:00:51.620 align:start position:0%
that loader now known to be members of a
 

01:00:51.620 --> 01:00:55.600 align:start position:0%
that loader now known to be members of a
module<01:00:52.420><c> the</c><01:00:53.420><c> module</c><01:00:53.740><c> to</c><01:00:54.740><c> load</c><01:00:54.920><c> a</c><01:00:54.950><c> mapping</c><01:00:55.310><c> told</c>

01:00:55.600 --> 01:00:55.610 align:start position:0%
module the module to load a mapping told
 

01:00:55.610 --> 01:00:58.600 align:start position:0%
module the module to load a mapping told
to<01:00:55.940><c> this</c><01:00:56.060><c> new</c><01:00:56.270><c> layer</c><01:00:56.480><c> so</c><01:00:57.020><c> the</c><01:00:57.650><c> the</c><01:00:58.100><c> graph</c><01:00:58.370><c> of</c>

01:00:58.600 --> 01:00:58.610 align:start position:0%
to this new layer so the the graph of
 

01:00:58.610 --> 01:01:00.190 align:start position:0%
to this new layer so the the graph of
class<01:00:58.880><c> odors</c><01:00:59.240><c> will</c><01:00:59.420><c> look</c><01:00:59.570><c> the</c><01:00:59.750><c> same</c><01:00:59.930><c> at</c>

01:01:00.190 --> 01:01:00.200 align:start position:0%
class odors will look the same at
 

01:01:00.200 --> 01:01:02.800 align:start position:0%
class odors will look the same at
runtime<01:01:00.410><c> if</c><01:01:00.860><c> you</c><01:01:01.310><c> could</c><01:01:01.430><c> visualize</c><01:01:01.790><c> it</c><01:01:02.000><c> so</c>

01:01:02.800 --> 01:01:02.810 align:start position:0%
runtime if you could visualize it so
 

01:01:02.810 --> 01:01:04.840 align:start position:0%
runtime if you could visualize it so
someone<01:01:03.140><c> else</c><01:01:03.260><c> a</c><01:01:03.350><c> part</c><01:01:03.530><c> of</c><01:01:03.590><c> us</c><01:01:03.740><c> is</c><01:01:03.950><c> do</c><01:01:04.760><c> you</c>

01:01:04.840 --> 01:01:04.850 align:start position:0%
someone else a part of us is do you
 

01:01:04.850 --> 01:01:07.030 align:start position:0%
someone else a part of us is do you
export<01:01:05.270><c> resources</c><01:01:05.810><c> then</c><01:01:05.960><c> to</c><01:01:06.260><c> or</c><01:01:06.500><c> do</c><01:01:07.010><c> they</c>

01:01:07.030 --> 01:01:07.040 align:start position:0%
export resources then to or do they
 

01:01:07.040 --> 01:01:10.840 align:start position:0%
export resources then to or do they
follow<01:01:07.280><c> the</c><01:01:07.490><c> same</c><01:01:07.670><c> rules</c><01:01:09.100><c> yes</c><01:01:10.100><c> there</c><01:01:10.490><c> are</c><01:01:10.640><c> some</c>

01:01:10.840 --> 01:01:10.850 align:start position:0%
follow the same rules yes there are some
 

01:01:10.850 --> 01:01:13.780 align:start position:0%
follow the same rules yes there are some
rules<01:01:11.090><c> about</c><01:01:11.420><c> which</c><01:01:11.660><c> resources</c><01:01:12.260><c> you</c><01:01:12.790><c> the</c>

01:01:13.780 --> 01:01:13.790 align:start position:0%
rules about which resources you the
 

01:01:13.790 --> 01:01:16.510 align:start position:0%
rules about which resources you the
exports<01:01:14.360><c> keyword</c><01:01:14.780><c> is</c><01:01:15.080><c> for</c><01:01:15.590><c> pentax</c><01:01:16.220><c> package</c>

01:01:16.510 --> 01:01:16.520 align:start position:0%
exports keyword is for pentax package
 

01:01:16.520 --> 01:01:19.510 align:start position:0%
exports keyword is for pentax package
names<01:01:17.080><c> this</c><01:01:18.080><c> is</c><01:01:18.200><c> a</c><01:01:18.230><c> good</c><01:01:18.350><c> question</c><01:01:18.440><c> it</c><01:01:19.220><c> doesn't</c>

01:01:19.510 --> 01:01:19.520 align:start position:0%
names this is a good question it doesn't
 

01:01:19.520 --> 01:01:21.490 align:start position:0%
names this is a good question it doesn't
you<01:01:19.610><c> don't</c><01:01:19.820><c> specify</c><01:01:20.270><c> resources</c><01:01:21.110><c> like</c><01:01:21.260><c> that</c>

01:01:21.490 --> 01:01:21.500 align:start position:0%
you don't specify resources like that
 

01:01:21.500 --> 01:01:23.770 align:start position:0%
you don't specify resources like that
but<01:01:22.160><c> they</c><01:01:22.340><c> are</c><01:01:22.460><c> mostly</c><01:01:22.760><c> ex</c><01:01:23.000><c> the</c><01:01:23.390><c> useful</c>

01:01:23.770 --> 01:01:23.780 align:start position:0%
but they are mostly ex the useful
 

01:01:23.780 --> 01:01:26.350 align:start position:0%
but they are mostly ex the useful
resources<01:01:24.170><c> are</c><01:01:24.410><c> exported</c><01:01:25.010><c> for</c><01:01:25.640><c> reflective</c>

01:01:26.350 --> 01:01:26.360 align:start position:0%
resources are exported for reflective
 

01:01:26.360 --> 01:01:27.940 align:start position:0%
resources are exported for reflective
access<01:01:26.750><c> which</c><01:01:27.230><c> is</c><01:01:27.260><c> how</c><01:01:27.440><c> you</c><01:01:27.500><c> get</c><01:01:27.680><c> to</c><01:01:27.710><c> them</c>

01:01:27.940 --> 01:01:27.950 align:start position:0%
access which is how you get to them
 

01:01:27.950 --> 01:01:33.490 align:start position:0%
access which is how you get to them
right<01:01:28.390><c> yes</c><01:01:30.400><c> so</c><01:01:31.400><c> Julie</c><01:01:32.090><c> in</c><01:01:32.390><c> like</c><01:01:32.750><c> a</c><01:01:32.780><c> you</c><01:01:33.410><c> know</c>

01:01:33.490 --> 01:01:33.500 align:start position:0%
right yes so Julie in like a you know
 

01:01:33.500 --> 01:01:35.710 align:start position:0%
right yes so Julie in like a you know
sometimes<01:01:33.950><c> you</c><01:01:34.100><c> put</c><01:01:34.280><c> resources</c><01:01:34.610><c> in</c><01:01:34.970><c> a</c><01:01:35.000><c> like</c>

01:01:35.710 --> 01:01:35.720 align:start position:0%
sometimes you put resources in a like
 

01:01:35.720 --> 01:01:36.880 align:start position:0%
sometimes you put resources in a like
the<01:01:35.810><c> same</c><01:01:35.960><c> names</c><01:01:36.140><c> places</c><01:01:36.380><c> your</c><01:01:36.590><c> package</c>

01:01:36.880 --> 01:01:36.890 align:start position:0%
the same names places your package
 

01:01:36.890 --> 01:01:37.270 align:start position:0%
the same names places your package
others

01:01:37.270 --> 01:01:37.280 align:start position:0%
others
 

01:01:37.280 --> 01:01:40.690 align:start position:0%
others
I<01:01:37.310><c> don't</c><01:01:38.590><c> just</c><01:01:39.590><c> kind</c><01:01:39.770><c> of</c><01:01:39.800><c> like</c><01:01:39.920><c> invention</c><01:01:40.460><c> so</c>

01:01:40.690 --> 01:01:40.700 align:start position:0%
I don't just kind of like invention so
 

01:01:40.700 --> 01:01:42.850 align:start position:0%
I don't just kind of like invention so
does<01:01:40.970><c> everything</c><01:01:41.330><c> now</c><01:01:41.630><c> need</c><01:01:41.870><c> to</c><01:01:41.990><c> be</c><01:01:42.140><c> in</c><01:01:42.350><c> a</c><01:01:42.470><c> Java</c>

01:01:42.850 --> 01:01:42.860 align:start position:0%
does everything now need to be in a Java
 

01:01:42.860 --> 01:01:45.850 align:start position:0%
does everything now need to be in a Java
package<01:01:43.430><c> I</c><01:01:43.670><c> know</c><01:01:44.060><c> oh</c><01:01:44.360><c> no</c><01:01:44.630><c> no</c><01:01:44.960><c> you</c><01:01:45.530><c> can</c><01:01:45.680><c> still</c>

01:01:45.850 --> 01:01:45.860 align:start position:0%
package I know oh no no you can still
 

01:01:45.860 --> 01:01:48.340 align:start position:0%
package I know oh no no you can still
have<01:01:45.980><c> your</c><01:01:46.100><c> resources</c><01:01:46.430><c> in</c><01:01:46.730><c> Metron</c><01:01:47.060><c> and</c><01:01:47.450><c> what's</c>

01:01:48.340 --> 01:01:48.350 align:start position:0%
have your resources in Metron and what's
 

01:01:48.350 --> 01:01:49.960 align:start position:0%
have your resources in Metron and what's
the<01:01:48.470><c> rule</c><01:01:48.650><c> for</c><01:01:48.950><c> whether</c><01:01:49.190><c> they're</c><01:01:49.400><c> exported</c><01:01:49.880><c> an</c>

01:01:49.960 --> 01:01:49.970 align:start position:0%
the rule for whether they're exported an
 

01:01:49.970 --> 01:01:52.870 align:start position:0%
the rule for whether they're exported an
arts<01:01:50.590><c> if</c><01:01:51.590><c> there</c><01:01:51.830><c> if</c><01:01:52.010><c> there</c><01:01:52.040><c> are</c><01:01:52.250><c> namespace</c><01:01:52.700><c> of</c>

01:01:52.870 --> 01:01:52.880 align:start position:0%
arts if there if there are namespace of
 

01:01:52.880 --> 01:01:54.250 align:start position:0%
arts if there if there are namespace of
maps<01:01:53.120><c> to</c><01:01:53.300><c> the</c><01:01:53.330><c> package</c><01:01:53.690><c> then</c><01:01:53.870><c> there</c><01:01:53.990><c> has</c><01:01:54.110><c> to</c><01:01:54.230><c> be</c>

01:01:54.250 --> 01:01:54.260 align:start position:0%
maps to the package then there has to be
 

01:01:54.260 --> 01:01:56.020 align:start position:0%
maps to the package then there has to be
exported<01:01:54.620><c> if</c><01:01:55.160><c> you've</c><01:01:55.340><c> been</c><01:01:55.460><c> in</c><01:01:55.700><c> top-level</c>

01:01:56.020 --> 01:01:56.030 align:start position:0%
exported if you've been in top-level
 

01:01:56.030 --> 01:01:58.180 align:start position:0%
exported if you've been in top-level
packages<01:01:56.840><c> that</c><01:01:57.080><c> are</c><01:01:57.320><c> certain</c><01:01:57.530><c> that</c><01:01:57.590><c> are</c><01:01:57.740><c> in</c>

01:01:58.180 --> 01:01:58.190 align:start position:0%
packages that are certain that are in
 

01:01:58.190 --> 01:01:59.860 align:start position:0%
packages that are certain that are in
top-level<01:01:58.400><c> directories</c><01:01:59.030><c> aren't</c><01:01:59.660><c> really</c>

01:01:59.860 --> 01:01:59.870 align:start position:0%
top-level directories aren't really
 

01:01:59.870 --> 01:02:01.660 align:start position:0%
top-level directories aren't really
packages<01:02:00.350><c> like</c><01:02:00.500><c> meta-inf</c><01:02:01.160><c> is</c><01:02:01.280><c> not</c><01:02:01.430><c> a</c><01:02:01.460><c> valid</c>

01:02:01.660 --> 01:02:01.670 align:start position:0%
packages like meta-inf is not a valid
 

01:02:01.670 --> 01:02:03.460 align:start position:0%
packages like meta-inf is not a valid
package<01:02:02.090><c> name</c><01:02:02.270><c> then</c><01:02:02.450><c> they've</c><01:02:02.870><c> just</c><01:02:03.080><c> continue</c>

01:02:03.460 --> 01:02:03.470 align:start position:0%
package name then they've just continue
 

01:02:03.470 --> 01:02:05.350 align:start position:0%
package name then they've just continue
to<01:02:03.590><c> be</c><01:02:03.740><c> be</c><01:02:04.250><c> able</c><01:02:04.430><c> to</c><01:02:04.490><c> locate</c><01:02:04.790><c> and</c><01:02:04.970><c> access</c><01:02:05.090><c> them</c>

01:02:05.350 --> 01:02:05.360 align:start position:0%
to be be able to locate and access them
 

01:02:05.360 --> 01:02:08.920 align:start position:0%
to be be able to locate and access them
as<01:02:05.540><c> as</c><01:02:05.750><c> you</c><01:02:06.470><c> always</c><01:02:06.710><c> did</c><01:02:06.950><c> all</c><01:02:07.700><c> right</c><01:02:07.930><c> just</c>

01:02:08.920 --> 01:02:08.930 align:start position:0%
as as you always did all right just
 

01:02:08.930 --> 01:02:12.880 align:start position:0%
as as you always did all right just
under<01:02:09.080><c> two</c><01:02:09.260><c> exceptional</c><01:02:10.130><c> yes</c><01:02:10.880><c> there's</c><01:02:11.710><c> in</c><01:02:12.710><c> the</c>

01:02:12.880 --> 01:02:12.890 align:start position:0%
under two exceptional yes there's in the
 

01:02:12.890 --> 01:02:14.500 align:start position:0%
under two exceptional yes there's in the
updated<01:02:13.280><c> proposal</c><01:02:13.430><c> there</c><01:02:14.090><c> is</c><01:02:14.210><c> a</c><01:02:14.240><c> specific</c>

01:02:14.500 --> 01:02:14.510 align:start position:0%
updated proposal there is a specific
 

01:02:14.510 --> 01:02:16.480 align:start position:0%
updated proposal there is a specific
exception<01:02:15.290><c> for</c><01:02:15.500><c> doc</c><01:02:15.710><c> class</c><01:02:15.980><c> files</c><01:02:16.250><c> because</c>

01:02:16.480 --> 01:02:16.490 align:start position:0%
exception for doc class files because
 

01:02:16.490 --> 01:02:18.280 align:start position:0%
exception for doc class files because
there's<01:02:16.700><c> many</c><01:02:16.820><c> many</c><01:02:17.030><c> to</c><01:02:17.270><c> you</c><01:02:17.390><c> toons</c><01:02:17.810><c> need</c><01:02:18.170><c> to</c>

01:02:18.280 --> 01:02:18.290 align:start position:0%
there's many many to you toons need to
 

01:02:18.290 --> 01:02:21.700 align:start position:0%
there's many many to you toons need to
access<01:02:18.470><c> class</c><01:02:19.280><c> files</c><01:02:19.720><c> so</c><01:02:20.720><c> they</c><01:02:20.990><c> just</c><01:02:21.530><c> worked</c>

01:02:21.700 --> 01:02:21.710 align:start position:0%
access class files so they just worked
 

01:02:21.710 --> 01:02:23.530 align:start position:0%
access class files so they just worked
can<01:02:22.490><c> I</c><01:02:22.520><c> just</c><01:02:22.700><c> say</c><01:02:22.790><c> one</c><01:02:22.820><c> thing</c><01:02:22.970><c> just</c><01:02:23.270><c> about</c><01:02:23.420><c> the</c>

01:02:23.530 --> 01:02:23.540 align:start position:0%
can I just say one thing just about the
 

01:02:23.540 --> 01:02:25.420 align:start position:0%
can I just say one thing just about the
layers<01:02:23.750><c> on</c><01:02:24.440><c> your</c><01:02:24.560><c> first</c><01:02:24.770><c> first</c><01:02:25.130><c> party</c><01:02:25.400><c> a</c>

01:02:25.420 --> 01:02:25.430 align:start position:0%
layers on your first first party a
 

01:02:25.430 --> 01:02:27.190 align:start position:0%
layers on your first first party a
question<01:02:25.790><c> is</c><01:02:25.910><c> it</c><01:02:26.120><c> doesn't</c><01:02:26.900><c> actually</c><01:02:26.960><c> require</c>

01:02:27.190 --> 01:02:27.200 align:start position:0%
question is it doesn't actually require
 

01:02:27.200 --> 01:02:30.520 align:start position:0%
question is it doesn't actually require
a<01:02:27.850><c> sophisticated</c><01:02:28.850><c> app</c><01:02:29.120><c> server</c><01:02:29.510><c> to</c><01:02:30.110><c> use</c><01:02:30.290><c> layers</c>

01:02:30.520 --> 01:02:30.530 align:start position:0%
a sophisticated app server to use layers
 

01:02:30.530 --> 01:02:32.530 align:start position:0%
a sophisticated app server to use layers
is<01:02:31.130><c> actually</c><01:02:31.430><c> many</c><01:02:31.580><c> tools</c><01:02:31.820><c> might</c><01:02:32.150><c> even</c><01:02:32.390><c> may</c>

01:02:32.530 --> 01:02:32.540 align:start position:0%
is actually many tools might even may
 

01:02:32.540 --> 01:02:33.970 align:start position:0%
is actually many tools might even may
actually<01:02:32.690><c> use</c><01:02:32.870><c> layers</c><01:02:33.230><c> as</c><01:02:33.440><c> well</c><01:02:33.590><c> so</c><01:02:33.800><c> for</c>

01:02:33.970 --> 01:02:33.980 align:start position:0%
actually use layers as well so for
 

01:02:33.980 --> 01:02:37.320 align:start position:0%
actually use layers as well so for
example<01:02:34.070><c> the</c><01:02:34.970><c> Java</c><01:02:35.780><c> C</c><01:02:35.990><c> compiler</c><01:02:36.380><c> loads</c>

01:02:37.320 --> 01:02:37.330 align:start position:0%
example the Java C compiler loads
 

01:02:37.330 --> 01:02:39.580 align:start position:0%
example the Java C compiler loads
annotation<01:02:38.330><c> processors</c><01:02:38.840><c> that</c><01:02:39.050><c> are</c><01:02:39.230><c> deployed</c>

01:02:39.580 --> 01:02:39.590 align:start position:0%
annotation processors that are deployed
 

01:02:39.590 --> 01:02:41.980 align:start position:0%
annotation processors that are deployed
as<01:02:39.770><c> modules</c><01:02:40.010><c> in</c><01:02:40.430><c> their</c><01:02:40.700><c> own</c><01:02:40.820><c> layer</c><01:02:41.120><c> the</c>

01:02:41.980 --> 01:02:41.990 align:start position:0%
as modules in their own layer the
 

01:02:41.990 --> 01:02:44.410 align:start position:0%
as modules in their own layer the
jailing<01:02:42.410><c> tool</c><01:02:42.680><c> can</c><01:02:43.580><c> has</c><01:02:43.850><c> it</c><01:02:44.000><c> has</c><01:02:44.090><c> a</c><01:02:44.120><c> plug-in</c>

01:02:44.410 --> 01:02:44.420 align:start position:0%
jailing tool can has it has a plug-in
 

01:02:44.420 --> 01:02:46.090 align:start position:0%
jailing tool can has it has a plug-in
interface<01:02:44.690><c> you</c><01:02:45.020><c> can</c><01:02:45.050><c> actually</c><01:02:45.290><c> deploy</c><01:02:45.530><c> and</c>

01:02:46.090 --> 01:02:46.100 align:start position:0%
interface you can actually deploy and
 

01:02:46.100 --> 01:02:49.690 align:start position:0%
interface you can actually deploy and
plugins<01:02:47.000><c> as</c><01:02:47.270><c> modules</c><01:02:47.690><c> and</c><01:02:48.200><c> and</c><01:02:49.100><c> they</c><01:02:49.550><c> will</c>

01:02:49.690 --> 01:02:49.700 align:start position:0%
plugins as modules and and they will
 

01:02:49.700 --> 01:02:51.630 align:start position:0%
plugins as modules and and they will
actually<01:02:49.970><c> be</c><01:02:50.060><c> loaded</c><01:02:50.420><c> into</c><01:02:50.570><c> their</c><01:02:50.780><c> own</c><01:02:50.960><c> layer</c>

01:02:51.630 --> 01:02:51.640 align:start position:0%
actually be loaded into their own layer
 

01:02:51.640 --> 01:02:54.310 align:start position:0%
actually be loaded into their own layer
yeah<01:02:52.640><c> thats</c><01:02:52.880><c> its</c><01:02:53.120><c> parented</c><01:02:53.600><c> to</c><01:02:53.780><c> the</c><01:02:53.930><c> boot</c><01:02:54.080><c> lair</c>

01:02:54.310 --> 01:02:54.320 align:start position:0%
yeah thats its parented to the boot lair
 

01:02:54.320 --> 01:02:56.650 align:start position:0%
yeah thats its parented to the boot lair
so<01:02:54.680><c> there's</c><01:02:54.830><c> many</c><01:02:54.950><c> many</c><01:02:55.160><c> tools</c><01:02:55.430><c> okay</c><01:02:56.180><c> we're</c>

01:02:56.650 --> 01:02:56.660 align:start position:0%
so there's many many tools okay we're
 

01:02:56.660 --> 01:02:58.810 align:start position:0%
so there's many many tools okay we're
all<01:02:56.780><c> done</c>

