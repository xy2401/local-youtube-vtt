WEBVTT
Kind: captions
Language: en

00:00:03.260 --> 00:00:06.849 align:start position:0%
 
all<00:00:04.220><c> right</c><00:00:04.870><c> thanks</c><00:00:05.870><c> everyone</c><00:00:06.140><c> for</c><00:00:06.230><c> coming</c>

00:00:06.849 --> 00:00:06.859 align:start position:0%
all right thanks everyone for coming
 

00:00:06.859 --> 00:00:08.740 align:start position:0%
all right thanks everyone for coming
I'm<00:00:07.310><c> Eric</c><00:00:07.730><c> and</c><00:00:08.000><c> today</c><00:00:08.270><c> we're</c><00:00:08.389><c> gonna</c><00:00:08.510><c> talk</c><00:00:08.719><c> a</c>

00:00:08.740 --> 00:00:08.750 align:start position:0%
I'm Eric and today we're gonna talk a
 

00:00:08.750 --> 00:00:10.600 align:start position:0%
I'm Eric and today we're gonna talk a
bit<00:00:08.960><c> about</c><00:00:08.990><c> the</c><00:00:09.410><c> g1</c><00:00:09.920><c> garbage</c><00:00:10.190><c> collector</c><00:00:10.490><c> in</c>

00:00:10.600 --> 00:00:10.610 align:start position:0%
bit about the g1 garbage collector in
 

00:00:10.610 --> 00:00:13.900 align:start position:0%
bit about the g1 garbage collector in
JDK<00:00:11.180><c> 9</c><00:00:11.500><c> but</c><00:00:12.500><c> before</c><00:00:13.129><c> we</c><00:00:13.190><c> begin</c><00:00:13.400><c> I</c><00:00:13.459><c> would</c><00:00:13.699><c> just</c>

00:00:13.900 --> 00:00:13.910 align:start position:0%
JDK 9 but before we begin I would just
 

00:00:13.910 --> 00:00:15.699 align:start position:0%
JDK 9 but before we begin I would just
like<00:00:14.119><c> to</c><00:00:14.150><c> show</c><00:00:14.629><c> you</c><00:00:14.690><c> all</c><00:00:14.809><c> this</c><00:00:15.049><c> slide</c><00:00:15.350><c> let</c><00:00:15.590><c> it</c>

00:00:15.699 --> 00:00:15.709 align:start position:0%
like to show you all this slide let it
 

00:00:15.709 --> 00:00:17.650 align:start position:0%
like to show you all this slide let it
hang<00:00:15.980><c> out</c><00:00:16.190><c> there</c><00:00:16.369><c> for</c><00:00:16.460><c> a</c><00:00:16.610><c> few</c><00:00:16.699><c> over</c><00:00:17.240><c> seconds</c>

00:00:17.650 --> 00:00:17.660 align:start position:0%
hang out there for a few over seconds
 

00:00:17.660 --> 00:00:26.290 align:start position:0%
hang out there for a few over seconds
for<00:00:17.869><c> you</c><00:00:18.140><c> to</c><00:00:18.199><c> enjoy</c><00:00:23.349><c> and</c><00:00:24.640><c> now</c><00:00:25.640><c> that's</c><00:00:25.939><c> out</c><00:00:26.269><c> of</c>

00:00:26.290 --> 00:00:26.300 align:start position:0%
for you to enjoy and now that's out of
 

00:00:26.300 --> 00:00:27.849 align:start position:0%
for you to enjoy and now that's out of
the<00:00:26.539><c> way</c><00:00:26.570><c> let's</c><00:00:26.990><c> look</c><00:00:27.080><c> at</c><00:00:27.320><c> today's</c><00:00:27.740><c> agenda</c>

00:00:27.849 --> 00:00:27.859 align:start position:0%
the way let's look at today's agenda
 

00:00:27.859 --> 00:00:29.829 align:start position:0%
the way let's look at today's agenda
we're<00:00:28.699><c> gonna</c><00:00:28.820><c> be</c><00:00:28.910><c> talking</c><00:00:29.150><c> about</c><00:00:29.210><c> the</c><00:00:29.390><c> g1</c>

00:00:29.829 --> 00:00:29.839 align:start position:0%
we're gonna be talking about the g1
 

00:00:29.839 --> 00:00:31.960 align:start position:0%
we're gonna be talking about the g1
garbage<00:00:30.169><c> collector</c><00:00:30.439><c> and</c><00:00:30.609><c> first</c><00:00:31.609><c> of</c><00:00:31.759><c> all</c><00:00:31.849><c> we're</c>

00:00:31.960 --> 00:00:31.970 align:start position:0%
garbage collector and first of all we're
 

00:00:31.970 --> 00:00:33.910 align:start position:0%
garbage collector and first of all we're
gonna<00:00:32.060><c> start</c><00:00:32.480><c> off</c><00:00:32.630><c> with</c><00:00:32.840><c> a</c><00:00:32.870><c> quick</c><00:00:33.170><c> intro</c><00:00:33.560><c> into</c>

00:00:33.910 --> 00:00:33.920 align:start position:0%
gonna start off with a quick intro into
 

00:00:33.920 --> 00:00:37.360 align:start position:0%
gonna start off with a quick intro into
g1<00:00:34.340><c> in</c><00:00:34.550><c> 2017</c><00:00:35.590><c> we</c><00:00:36.590><c> will</c><00:00:36.710><c> then</c><00:00:36.860><c> continue</c><00:00:37.219><c> on</c>

00:00:37.360 --> 00:00:37.370 align:start position:0%
g1 in 2017 we will then continue on
 

00:00:37.370 --> 00:00:39.700 align:start position:0%
g1 in 2017 we will then continue on
looking<00:00:37.730><c> at</c><00:00:37.850><c> five</c><00:00:38.210><c> major</c><00:00:38.420><c> improvements</c><00:00:39.140><c> to</c><00:00:39.289><c> g1</c>

00:00:39.700 --> 00:00:39.710 align:start position:0%
looking at five major improvements to g1
 

00:00:39.710 --> 00:00:43.029 align:start position:0%
looking at five major improvements to g1
since<00:00:40.039><c> JDK</c><00:00:40.550><c> 8</c><00:00:40.579><c> and</c><00:00:41.030><c> then</c><00:00:41.840><c> last</c><00:00:42.260><c> but</c><00:00:42.379><c> not</c><00:00:42.530><c> least</c>

00:00:43.029 --> 00:00:43.039 align:start position:0%
since JDK 8 and then last but not least
 

00:00:43.039 --> 00:00:44.529 align:start position:0%
since JDK 8 and then last but not least
we<00:00:43.250><c> will</c><00:00:43.370><c> do</c><00:00:43.550><c> a</c><00:00:43.579><c> little</c><00:00:43.789><c> bit</c><00:00:43.969><c> of</c><00:00:44.030><c> sneak</c><00:00:44.270><c> peek</c>

00:00:44.529 --> 00:00:44.539 align:start position:0%
we will do a little bit of sneak peek
 

00:00:44.539 --> 00:00:46.299 align:start position:0%
we will do a little bit of sneak peek
into<00:00:44.840><c> the</c><00:00:45.020><c> future</c><00:00:45.050><c> and</c><00:00:45.530><c> see</c><00:00:45.680><c> what's</c><00:00:45.890><c> coming</c><00:00:46.160><c> up</c>

00:00:46.299 --> 00:00:46.309 align:start position:0%
into the future and see what's coming up
 

00:00:46.309 --> 00:00:50.709 align:start position:0%
into the future and see what's coming up
for<00:00:46.550><c> d1</c><00:00:47.320><c> but</c><00:00:48.320><c> who</c><00:00:48.829><c> am</c><00:00:48.920><c> i</c><00:00:49.039><c> I'm</c><00:00:49.730><c> Eric</c><00:00:50.030><c> I</c><00:00:50.269><c> like</c><00:00:50.539><c> to</c>

00:00:50.709 --> 00:00:50.719 align:start position:0%
for d1 but who am i I'm Eric I like to
 

00:00:50.719 --> 00:00:52.930 align:start position:0%
for d1 but who am i I'm Eric I like to
program<00:00:50.930><c> garbage</c><00:00:51.379><c> collectors</c><00:00:51.680><c> I</c><00:00:51.920><c> work</c><00:00:52.789><c> at</c>

00:00:52.930 --> 00:00:52.940 align:start position:0%
program garbage collectors I work at
 

00:00:52.940 --> 00:00:55.119 align:start position:0%
program garbage collectors I work at
Oracle<00:00:53.329><c> in</c><00:00:53.539><c> the</c><00:00:53.690><c> JVM</c><00:00:54.199><c> GC</c><00:00:54.500><c> team</c><00:00:54.739><c> and</c><00:00:54.920><c> has</c><00:00:55.010><c> done</c>

00:00:55.119 --> 00:00:55.129 align:start position:0%
Oracle in the JVM GC team and has done
 

00:00:55.129 --> 00:00:57.700 align:start position:0%
Oracle in the JVM GC team and has done
so<00:00:55.340><c> for</c><00:00:55.399><c> about</c><00:00:55.789><c> six</c><00:00:56.059><c> years</c><00:00:56.179><c> now</c><00:00:56.469><c> the</c><00:00:57.469><c> past</c>

00:00:57.700 --> 00:00:57.710 align:start position:0%
so for about six years now the past
 

00:00:57.710 --> 00:00:59.139 align:start position:0%
so for about six years now the past
three<00:00:57.920><c> years</c><00:00:57.949><c> I've</c><00:00:58.370><c> worked</c><00:00:58.609><c> on</c><00:00:58.760><c> the</c><00:00:58.910><c> g1</c>

00:00:59.139 --> 00:00:59.149 align:start position:0%
three years I've worked on the g1
 

00:00:59.149 --> 00:01:01.329 align:start position:0%
three years I've worked on the g1
garbage<00:00:59.539><c> collector</c><00:00:59.809><c> and</c><00:01:00.170><c> I</c><00:01:00.590><c> was</c><00:01:00.739><c> a</c><00:01:00.769><c> reviewer</c>

00:01:01.329 --> 00:01:01.339 align:start position:0%
garbage collector and I was a reviewer
 

00:01:01.339 --> 00:01:03.520 align:start position:0%
garbage collector and I was a reviewer
and<00:01:01.519><c> open</c><00:01:01.789><c> in</c><00:01:01.879><c> decay</c><00:01:02.059><c> where</c><00:01:02.839><c> I</c><00:01:02.870><c> contributed</c><00:01:03.469><c> a</c>

00:01:03.520 --> 00:01:03.530 align:start position:0%
and open in decay where I contributed a
 

00:01:03.530 --> 00:01:09.810 align:start position:0%
and open in decay where I contributed a
lot<00:01:04.750><c> so</c><00:01:05.750><c> the</c><00:01:06.110><c> quick</c><00:01:06.770><c> intro</c><00:01:07.160><c> into</c><00:01:07.520><c> g1</c><00:01:08.000><c> in</c><00:01:08.440><c> 2017</c>

00:01:09.810 --> 00:01:09.820 align:start position:0%
lot so the quick intro into g1 in 2017
 

00:01:09.820 --> 00:01:12.160 align:start position:0%
lot so the quick intro into g1 in 2017
first<00:01:10.820><c> of</c><00:01:10.940><c> all</c><00:01:11.060><c> what</c><00:01:11.360><c> is</c><00:01:11.390><c> garbage</c><00:01:11.900><c> collector</c>

00:01:12.160 --> 00:01:12.170 align:start position:0%
first of all what is garbage collector
 

00:01:12.170 --> 00:01:14.050 align:start position:0%
first of all what is garbage collector
and<00:01:12.200><c> what</c><00:01:12.410><c> is</c><00:01:12.500><c> g1</c><00:01:12.740><c> solving</c><00:01:13.460><c> well</c><00:01:13.700><c> garbage</c>

00:01:14.050 --> 00:01:14.060 align:start position:0%
and what is g1 solving well garbage
 

00:01:14.060 --> 00:01:16.210 align:start position:0%
and what is g1 solving well garbage
collection<00:01:14.420><c> is</c><00:01:14.570><c> a</c><00:01:14.600><c> way</c><00:01:14.930><c> to</c><00:01:14.990><c> manage</c><00:01:15.680><c> memory</c>

00:01:16.210 --> 00:01:16.220 align:start position:0%
collection is a way to manage memory
 

00:01:16.220 --> 00:01:19.360 align:start position:0%
collection is a way to manage memory
so<00:01:16.880><c> in</c><00:01:17.090><c> Java</c><00:01:17.270><c> programmers</c><00:01:17.990><c> do</c><00:01:18.170><c> not</c><00:01:18.320><c> need</c><00:01:18.590><c> to</c>

00:01:19.360 --> 00:01:19.370 align:start position:0%
so in Java programmers do not need to
 

00:01:19.370 --> 00:01:21.130 align:start position:0%
so in Java programmers do not need to
explicitly<00:01:19.640><c> manage</c><00:01:20.270><c> to</c><00:01:20.390><c> memory</c><00:01:20.660><c> ourselves</c>

00:01:21.130 --> 00:01:21.140 align:start position:0%
explicitly manage to memory ourselves
 

00:01:21.140 --> 00:01:22.720 align:start position:0%
explicitly manage to memory ourselves
you<00:01:21.320><c> will</c><00:01:21.500><c> allocate</c><00:01:21.800><c> your</c><00:01:22.010><c> objects</c><00:01:22.340><c> with</c><00:01:22.490><c> new</c>

00:01:22.720 --> 00:01:22.730 align:start position:0%
you will allocate your objects with new
 

00:01:22.730 --> 00:01:24.880 align:start position:0%
you will allocate your objects with new
and<00:01:23.150><c> then</c><00:01:23.660><c> the</c><00:01:23.780><c> memory</c><00:01:24.080><c> will</c><00:01:24.260><c> be</c><00:01:24.290><c> reclaimed</c><00:01:24.650><c> by</c>

00:01:24.880 --> 00:01:24.890 align:start position:0%
and then the memory will be reclaimed by
 

00:01:24.890 --> 00:01:26.380 align:start position:0%
and then the memory will be reclaimed by
the<00:01:25.040><c> garbage</c><00:01:25.280><c> collector</c><00:01:25.430><c> once</c><00:01:26.060><c> it's</c><00:01:26.270><c> no</c>

00:01:26.380 --> 00:01:26.390 align:start position:0%
the garbage collector once it's no
 

00:01:26.390 --> 00:01:28.810 align:start position:0%
the garbage collector once it's no
longer<00:01:26.600><c> in</c><00:01:26.810><c> use</c><00:01:27.070><c> you</c><00:01:28.070><c> can</c><00:01:28.220><c> compare</c><00:01:28.490><c> this</c><00:01:28.640><c> to</c>

00:01:28.810 --> 00:01:28.820 align:start position:0%
longer in use you can compare this to
 

00:01:28.820 --> 00:01:30.670 align:start position:0%
longer in use you can compare this to
see<00:01:29.030><c> where</c><00:01:29.300><c> programs</c><00:01:29.630><c> programmers</c><00:01:30.410><c> must</c>

00:01:30.670 --> 00:01:30.680 align:start position:0%
see where programs programmers must
 

00:01:30.680 --> 00:01:32.830 align:start position:0%
see where programs programmers must
manage<00:01:31.010><c> the</c><00:01:31.100><c> memory</c><00:01:31.340><c> themselves</c><00:01:31.940><c> using</c>

00:01:32.830 --> 00:01:32.840 align:start position:0%
manage the memory themselves using
 

00:01:32.840 --> 00:01:35.620 align:start position:0%
manage the memory themselves using
malloc<00:01:33.110><c> and</c><00:01:33.470><c> free</c><00:01:33.970><c> how</c><00:01:34.970><c> the</c><00:01:35.030><c> Scourge</c>

00:01:35.620 --> 00:01:35.630 align:start position:0%
malloc and free how the Scourge
 

00:01:35.630 --> 00:01:37.270 align:start position:0%
malloc and free how the Scourge
collection<00:01:35.960><c> work</c><00:01:36.230><c> well</c><00:01:36.590><c> all</c><00:01:36.770><c> your</c><00:01:36.950><c> objects</c>

00:01:37.270 --> 00:01:37.280 align:start position:0%
collection work well all your objects
 

00:01:37.280 --> 00:01:38.740 align:start position:0%
collection work well all your objects
will<00:01:37.400><c> be</c><00:01:37.430><c> allocated</c><00:01:38.000><c> in</c><00:01:38.060><c> a</c><00:01:38.150><c> memory</c><00:01:38.450><c> area</c>

00:01:38.740 --> 00:01:38.750 align:start position:0%
will be allocated in a memory area
 

00:01:38.750 --> 00:01:41.560 align:start position:0%
will be allocated in a memory area
called<00:01:38.990><c> the</c><00:01:39.260><c> heap</c><00:01:40.030><c> these</c><00:01:41.030><c> objects</c><00:01:41.390><c> will</c><00:01:41.540><c> be</c>

00:01:41.560 --> 00:01:41.570 align:start position:0%
called the heap these objects will be
 

00:01:41.570 --> 00:01:43.660 align:start position:0%
called the heap these objects will be
laid<00:01:41.990><c> out</c><00:01:42.020><c> in</c><00:01:42.170><c> memory</c><00:01:42.440><c> with</c><00:01:42.980><c> respective</c>

00:01:43.660 --> 00:01:43.670 align:start position:0%
laid out in memory with respective
 

00:01:43.670 --> 00:01:47.410 align:start position:0%
laid out in memory with respective
fields<00:01:44.860><c> those</c><00:01:45.860><c> fields</c><00:01:46.460><c> can</c><00:01:46.670><c> in</c><00:01:46.790><c> turn</c><00:01:47.000><c> contain</c>

00:01:47.410 --> 00:01:47.420 align:start position:0%
fields those fields can in turn contain
 

00:01:47.420 --> 00:01:50.410 align:start position:0%
fields those fields can in turn contain
references<00:01:47.960><c> to</c><00:01:48.020><c> other</c><00:01:48.470><c> objects</c><00:01:48.940><c> but</c><00:01:49.940><c> also</c><00:01:49.970><c> in</c>

00:01:50.410 --> 00:01:50.420 align:start position:0%
references to other objects but also in
 

00:01:50.420 --> 00:01:54.310 align:start position:0%
references to other objects but also in
google<00:01:51.050><c> internal</c><00:01:51.550><c> values</c><00:01:52.660><c> as</c><00:01:53.660><c> you</c><00:01:53.810><c> allocate</c>

00:01:54.310 --> 00:01:54.320 align:start position:0%
google internal values as you allocate
 

00:01:54.320 --> 00:01:56.680 align:start position:0%
google internal values as you allocate
more<00:01:54.650><c> and</c><00:01:54.890><c> more</c><00:01:55.070><c> objects</c><00:01:55.550><c> you</c><00:01:56.150><c> will</c><00:01:56.300><c> start</c><00:01:56.570><c> to</c>

00:01:56.680 --> 00:01:56.690 align:start position:0%
more and more objects you will start to
 

00:01:56.690 --> 00:01:58.590 align:start position:0%
more and more objects you will start to
fill<00:01:56.930><c> up</c><00:01:57.050><c> this</c><00:01:57.260><c> memory</c><00:01:57.560><c> area</c><00:01:57.830><c> called</c><00:01:58.070><c> heap</c><00:01:58.280><c> and</c>

00:01:58.590 --> 00:01:58.600 align:start position:0%
fill up this memory area called heap and
 

00:01:58.600 --> 00:02:00.910 align:start position:0%
fill up this memory area called heap and
once<00:01:59.600><c> it's</c><00:01:59.810><c> completely</c><00:01:59.930><c> filled</c><00:02:00.500><c> up</c><00:02:00.650><c> well</c>

00:02:00.910 --> 00:02:00.920 align:start position:0%
once it's completely filled up well
 

00:02:00.920 --> 00:02:02.560 align:start position:0%
once it's completely filled up well
there's<00:02:01.190><c> no</c><00:02:01.310><c> space</c><00:02:01.610><c> to</c><00:02:01.910><c> allocate</c><00:02:02.360><c> more</c>

00:02:02.560 --> 00:02:02.570 align:start position:0%
there's no space to allocate more
 

00:02:02.570 --> 00:02:05.380 align:start position:0%
there's no space to allocate more
obviously<00:02:03.020><c> and</c><00:02:03.140><c> so</c><00:02:03.290><c> something</c><00:02:03.670><c> as</c><00:02:04.670><c> gonna</c><00:02:05.210><c> have</c>

00:02:05.380 --> 00:02:05.390 align:start position:0%
obviously and so something as gonna have
 

00:02:05.390 --> 00:02:06.790 align:start position:0%
obviously and so something as gonna have
to<00:02:05.480><c> happen</c><00:02:05.630><c> now</c><00:02:05.870><c> if</c><00:02:06.110><c> the</c><00:02:06.290><c> program</c><00:02:06.590><c> is</c><00:02:06.620><c> gonna</c>

00:02:06.790 --> 00:02:06.800 align:start position:0%
to happen now if the program is gonna
 

00:02:06.800 --> 00:02:08.979 align:start position:0%
to happen now if the program is gonna
continue<00:02:07.070><c> running</c><00:02:07.660><c> what</c><00:02:08.660><c> it's</c><00:02:08.780><c> going</c><00:02:08.929><c> to</c>

00:02:08.979 --> 00:02:08.989 align:start position:0%
continue running what it's going to
 

00:02:08.989 --> 00:02:10.869 align:start position:0%
continue running what it's going to
happen<00:02:09.259><c> is</c><00:02:09.440><c> that</c><00:02:09.470><c> the</c><00:02:10.190><c> garbage</c><00:02:10.520><c> collector</c>

00:02:10.869 --> 00:02:10.879 align:start position:0%
happen is that the garbage collector
 

00:02:10.879 --> 00:02:13.509 align:start position:0%
happen is that the garbage collector
will<00:02:11.239><c> force</c><00:02:11.719><c> your</c><00:02:11.900><c> application</c><00:02:12.349><c> and</c><00:02:12.530><c> then</c><00:02:13.370><c> it</c>

00:02:13.509 --> 00:02:13.519 align:start position:0%
will force your application and then it
 

00:02:13.519 --> 00:02:14.010 align:start position:0%
will force your application and then it
will

00:02:14.010 --> 00:02:14.020 align:start position:0%
will
 

00:02:14.020 --> 00:02:15.930 align:start position:0%
will
see<00:02:14.140><c> which</c><00:02:14.500><c> objects</c><00:02:14.980><c> are</c><00:02:15.160><c> currently</c><00:02:15.580><c> in</c><00:02:15.760><c> use</c>

00:02:15.930 --> 00:02:15.940 align:start position:0%
see which objects are currently in use
 

00:02:15.940 --> 00:02:17.940 align:start position:0%
see which objects are currently in use
by<00:02:16.240><c> the</c><00:02:16.300><c> program</c><00:02:16.720><c> because</c><00:02:17.050><c> if</c><00:02:17.710><c> you</c><00:02:17.830><c> think</c>

00:02:17.940 --> 00:02:17.950 align:start position:0%
by the program because if you think
 

00:02:17.950 --> 00:02:19.500 align:start position:0%
by the program because if you think
about<00:02:18.190><c> when</c><00:02:18.400><c> you</c><00:02:18.490><c> write</c><00:02:18.670><c> that</c><00:02:18.700><c> method</c><00:02:19.240><c> in</c><00:02:19.330><c> Java</c>

00:02:19.500 --> 00:02:19.510 align:start position:0%
about when you write that method in Java
 

00:02:19.510 --> 00:02:21.450 align:start position:0%
about when you write that method in Java
you<00:02:19.840><c> might</c><00:02:20.020><c> allocate</c><00:02:20.230><c> a</c><00:02:20.470><c> bunch</c><00:02:20.710><c> of</c><00:02:20.800><c> objects</c><00:02:21.160><c> do</c>

00:02:21.450 --> 00:02:21.460 align:start position:0%
you might allocate a bunch of objects do
 

00:02:21.460 --> 00:02:23.490 align:start position:0%
you might allocate a bunch of objects do
some<00:02:21.640><c> computation</c><00:02:22.240><c> and</c><00:02:22.570><c> then</c><00:02:23.080><c> return</c><00:02:23.380><c> the</c>

00:02:23.490 --> 00:02:23.500 align:start position:0%
some computation and then return the
 

00:02:23.500 --> 00:02:25.140 align:start position:0%
some computation and then return the
result<00:02:23.860><c> but</c><00:02:24.130><c> those</c><00:02:24.250><c> objects</c><00:02:24.640><c> you</c><00:02:24.730><c> use</c><00:02:24.910><c> for</c><00:02:25.120><c> a</c>

00:02:25.140 --> 00:02:25.150 align:start position:0%
result but those objects you use for a
 

00:02:25.150 --> 00:02:26.760 align:start position:0%
result but those objects you use for a
competition<00:02:25.540><c> you</c><00:02:26.110><c> don't</c><00:02:26.140><c> really</c><00:02:26.500><c> need</c><00:02:26.620><c> them</c>

00:02:26.760 --> 00:02:26.770 align:start position:0%
competition you don't really need them
 

00:02:26.770 --> 00:02:27.360 align:start position:0%
competition you don't really need them
anymore

00:02:27.360 --> 00:02:27.370 align:start position:0%
anymore
 

00:02:27.370 --> 00:02:29.490 align:start position:0%
anymore
so<00:02:27.940><c> the</c><00:02:28.300><c> garbage</c><00:02:28.600><c> doctor</c><00:02:28.840><c> will</c><00:02:28.990><c> find</c><00:02:29.350><c> out</c>

00:02:29.490 --> 00:02:29.500 align:start position:0%
so the garbage doctor will find out
 

00:02:29.500 --> 00:02:32.340 align:start position:0%
so the garbage doctor will find out
which<00:02:29.890><c> objects</c><00:02:30.310><c> are</c><00:02:30.490><c> in</c><00:02:30.670><c> use</c><00:02:30.850><c> and</c><00:02:31.180><c> will</c><00:02:31.960><c> do</c><00:02:32.110><c> so</c>

00:02:32.340 --> 00:02:32.350 align:start position:0%
which objects are in use and will do so
 

00:02:32.350 --> 00:02:34.470 align:start position:0%
which objects are in use and will do so
by<00:02:32.560><c> starting</c><00:02:33.130><c> from</c><00:02:33.160><c> the</c><00:02:33.340><c> so-called</c><00:02:33.790><c> routes</c><00:02:33.970><c> so</c>

00:02:34.470 --> 00:02:34.480 align:start position:0%
by starting from the so-called routes so
 

00:02:34.480 --> 00:02:36.840 align:start position:0%
by starting from the so-called routes so
in<00:02:35.080><c> order</c><00:02:35.230><c> to</c><00:02:35.410><c> figure</c><00:02:35.590><c> out</c><00:02:35.740><c> which</c><00:02:36.190><c> objects</c><00:02:36.640><c> are</c>

00:02:36.840 --> 00:02:36.850 align:start position:0%
in order to figure out which objects are
 

00:02:36.850 --> 00:02:39.450 align:start position:0%
in order to figure out which objects are
live<00:02:37.600><c> and</c><00:02:37.930><c> heap</c><00:02:38.530><c> and</c><00:02:38.770><c> being</c><00:02:38.920><c> in</c><00:02:39.070><c> used</c><00:02:39.250><c> by</c><00:02:39.400><c> the</c>

00:02:39.450 --> 00:02:39.460 align:start position:0%
live and heap and being in used by the
 

00:02:39.460 --> 00:02:41.700 align:start position:0%
live and heap and being in used by the
programs<00:02:39.910><c> you</c><00:02:40.150><c> stopped</c><00:02:40.930><c> in</c><00:02:41.050><c> your</c><00:02:41.080><c> application</c>

00:02:41.700 --> 00:02:41.710 align:start position:0%
programs you stopped in your application
 

00:02:41.710 --> 00:02:44.070 align:start position:0%
programs you stopped in your application
you<00:02:41.740><c> scan</c><00:02:42.190><c> the</c><00:02:42.400><c> Fred</c><00:02:42.640><c> stacks</c><00:02:42.970><c> for</c><00:02:43.780><c> the</c><00:02:43.870><c> Java</c>

00:02:44.070 --> 00:02:44.080 align:start position:0%
you scan the Fred stacks for the Java
 

00:02:44.080 --> 00:02:46.080 align:start position:0%
you scan the Fred stacks for the Java
threads<00:02:44.320><c> you</c><00:02:44.770><c> find</c><00:02:45.070><c> the</c><00:02:45.190><c> references</c><00:02:45.580><c> pointing</c>

00:02:46.080 --> 00:02:46.090 align:start position:0%
threads you find the references pointing
 

00:02:46.090 --> 00:02:49.680 align:start position:0%
threads you find the references pointing
out<00:02:46.180><c> objects</c><00:02:47.070><c> like</c><00:02:48.070><c> this</c><00:02:48.250><c> and</c><00:02:48.490><c> then</c><00:02:49.060><c> you</c><00:02:49.270><c> say</c>

00:02:49.680 --> 00:02:49.690 align:start position:0%
out objects like this and then you say
 

00:02:49.690 --> 00:02:51.330 align:start position:0%
out objects like this and then you say
that<00:02:49.840><c> now</c><00:02:50.200><c> I've</c><00:02:50.350><c> found</c><00:02:50.500><c> those</c><00:02:50.740><c> objects</c><00:02:51.100><c> I'm</c>

00:02:51.330 --> 00:02:51.340 align:start position:0%
that now I've found those objects I'm
 

00:02:51.340 --> 00:02:54.150 align:start position:0%
that now I've found those objects I'm
gonna<00:02:51.520><c> consider</c><00:02:51.790><c> them</c><00:02:52.120><c> live</c><00:02:52.530><c> but</c><00:02:53.530><c> as</c><00:02:53.830><c> you</c><00:02:53.980><c> see</c>

00:02:54.150 --> 00:02:54.160 align:start position:0%
gonna consider them live but as you see
 

00:02:54.160 --> 00:02:55.710 align:start position:0%
gonna consider them live but as you see
on<00:02:54.400><c> the</c><00:02:54.580><c> slide</c><00:02:54.850><c> we're</c><00:02:55.120><c> just</c><00:02:55.360><c> a</c><00:02:55.420><c> bunch</c><00:02:55.540><c> more</c>

00:02:55.710 --> 00:02:55.720 align:start position:0%
on the slide we're just a bunch more
 

00:02:55.720 --> 00:02:58.290 align:start position:0%
on the slide we're just a bunch more
objects<00:02:56.290><c> and</c><00:02:56.470><c> we</c><00:02:56.980><c> can</c><00:02:57.220><c> iterate</c><00:02:57.520><c> over</c><00:02:58.090><c> the</c>

00:02:58.290 --> 00:02:58.300 align:start position:0%
objects and we can iterate over the
 

00:02:58.300 --> 00:03:00.690 align:start position:0%
objects and we can iterate over the
fields<00:02:58.780><c> in</c><00:02:59.350><c> each</c><00:02:59.560><c> object</c><00:02:59.980><c> in</c><00:03:00.070><c> turn</c><00:03:00.280><c> and</c><00:03:00.520><c> follow</c>

00:03:00.690 --> 00:03:00.700 align:start position:0%
fields in each object in turn and follow
 

00:03:00.700 --> 00:03:03.090 align:start position:0%
fields in each object in turn and follow
of<00:03:00.910><c> the</c><00:03:01.000><c> references</c><00:03:01.510><c> and</c><00:03:01.780><c> then</c><00:03:02.620><c> we</c><00:03:02.710><c> will</c><00:03:02.830><c> find</c>

00:03:03.090 --> 00:03:03.100 align:start position:0%
of the references and then we will find
 

00:03:03.100 --> 00:03:04.950 align:start position:0%
of the references and then we will find
more<00:03:03.280><c> objects</c><00:03:03.670><c> that</c><00:03:04.000><c> are</c><00:03:04.120><c> reachable</c><00:03:04.570><c> from</c><00:03:04.870><c> the</c>

00:03:04.950 --> 00:03:04.960 align:start position:0%
more objects that are reachable from the
 

00:03:04.960 --> 00:03:08.220 align:start position:0%
more objects that are reachable from the
roots<00:03:05.820><c> and</c><00:03:06.820><c> if</c><00:03:07.090><c> you</c><00:03:07.210><c> keep</c><00:03:07.420><c> doing</c><00:03:07.600><c> this</c><00:03:07.900><c> an</c>

00:03:08.220 --> 00:03:08.230 align:start position:0%
roots and if you keep doing this an
 

00:03:08.230 --> 00:03:10.680 align:start position:0%
roots and if you keep doing this an
iterate<00:03:08.680><c> on</c><00:03:08.980><c> this</c><00:03:09.460><c> algorithm</c><00:03:09.970><c> we</c><00:03:10.660><c> will</c>

00:03:10.680 --> 00:03:10.690 align:start position:0%
iterate on this algorithm we will
 

00:03:10.690 --> 00:03:13.260 align:start position:0%
iterate on this algorithm we will
simulate<00:03:11.200><c> or</c><00:03:11.560><c> find</c><00:03:11.800><c> them</c><00:03:11.920><c> all</c><00:03:12.070><c> once</c><00:03:12.880><c> we</c><00:03:13.120><c> have</c>

00:03:13.260 --> 00:03:13.270 align:start position:0%
simulate or find them all once we have
 

00:03:13.270 --> 00:03:15.810 align:start position:0%
simulate or find them all once we have
found<00:03:13.630><c> those</c><00:03:13.810><c> objects</c><00:03:14.260><c> we</c><00:03:14.890><c> can</c><00:03:14.920><c> compact</c><00:03:15.640><c> them</c>

00:03:15.810 --> 00:03:15.820 align:start position:0%
found those objects we can compact them
 

00:03:15.820 --> 00:03:17.610 align:start position:0%
found those objects we can compact them
to<00:03:16.030><c> one</c><00:03:16.240><c> end</c><00:03:16.540><c> of</c><00:03:16.660><c> the</c><00:03:16.810><c> heap</c><00:03:16.960><c> there</c><00:03:17.440><c> are</c><00:03:17.530><c> other</c>

00:03:17.610 --> 00:03:17.620 align:start position:0%
to one end of the heap there are other
 

00:03:17.620 --> 00:03:19.110 align:start position:0%
to one end of the heap there are other
schemes<00:03:17.950><c> available</c><00:03:18.190><c> from</c><00:03:18.640><c> memory</c><00:03:18.850><c> management</c>

00:03:19.110 --> 00:03:19.120 align:start position:0%
schemes available from memory management
 

00:03:19.120 --> 00:03:21.780 align:start position:0%
schemes available from memory management
but<00:03:19.450><c> this</c><00:03:19.570><c> is</c><00:03:19.690><c> one</c><00:03:19.900><c> example</c><00:03:20.280><c> the</c><00:03:21.280><c> objects</c><00:03:21.610><c> can</c>

00:03:21.780 --> 00:03:21.790 align:start position:0%
but this is one example the objects can
 

00:03:21.790 --> 00:03:24.150 align:start position:0%
but this is one example the objects can
be<00:03:21.910><c> compacted</c><00:03:22.510><c> to</c><00:03:22.570><c> one</c><00:03:22.870><c> another</c><00:03:23.200><c> heap</c><00:03:23.350><c> and</c><00:03:23.950><c> we</c>

00:03:24.150 --> 00:03:24.160 align:start position:0%
be compacted to one another heap and we
 

00:03:24.160 --> 00:03:25.710 align:start position:0%
be compacted to one another heap and we
will<00:03:24.310><c> have</c><00:03:24.430><c> now</c><00:03:24.640><c> have</c><00:03:24.880><c> a</c><00:03:24.910><c> continuous</c><00:03:25.450><c> free</c>

00:03:25.710 --> 00:03:25.720 align:start position:0%
will have now have a continuous free
 

00:03:25.720 --> 00:03:27.750 align:start position:0%
will have now have a continuous free
memory<00:03:26.080><c> area</c><00:03:26.380><c> we</c><00:03:27.010><c> can</c><00:03:27.130><c> use</c><00:03:27.340><c> for</c><00:03:27.610><c> new</c>

00:03:27.750 --> 00:03:27.760 align:start position:0%
memory area we can use for new
 

00:03:27.760 --> 00:03:30.660 align:start position:0%
memory area we can use for new
allocations<00:03:28.740><c> the</c><00:03:29.740><c> program</c><00:03:30.100><c> can</c><00:03:30.250><c> then</c><00:03:30.370><c> resume</c>

00:03:30.660 --> 00:03:30.670 align:start position:0%
allocations the program can then resume
 

00:03:30.670 --> 00:03:33.090 align:start position:0%
allocations the program can then resume
running<00:03:31.090><c> and</c><00:03:31.380><c> suddenly</c><00:03:32.380><c> there's</c><00:03:32.650><c> more</c><00:03:32.890><c> space</c>

00:03:33.090 --> 00:03:33.100 align:start position:0%
running and suddenly there's more space
 

00:03:33.100 --> 00:03:36.530 align:start position:0%
running and suddenly there's more space
for<00:03:33.670><c> new</c><00:03:33.700><c> objects</c><00:03:34.180><c> to</c><00:03:34.240><c> be</c><00:03:34.360><c> allocated</c><00:03:34.630><c> in</c>

00:03:36.530 --> 00:03:36.540 align:start position:0%
for new objects to be allocated in
 

00:03:36.540 --> 00:03:39.090 align:start position:0%
for new objects to be allocated in
jae-won<00:03:37.540><c> is</c><00:03:37.750><c> one</c><00:03:38.110><c> such</c><00:03:38.380><c> garbage</c><00:03:38.680><c> collection</c>

00:03:39.090 --> 00:03:39.100 align:start position:0%
jae-won is one such garbage collection
 

00:03:39.100 --> 00:03:41.820 align:start position:0%
jae-won is one such garbage collection
algorithm<00:03:39.550><c> and</c><00:03:40.180><c> this</c><00:03:40.330><c> is</c><00:03:40.480><c> the</c><00:03:40.690><c> first</c><00:03:41.590><c> page</c><00:03:41.800><c> of</c>

00:03:41.820 --> 00:03:41.830 align:start position:0%
algorithm and this is the first page of
 

00:03:41.830 --> 00:03:44.160 align:start position:0%
algorithm and this is the first page of
the<00:03:42.070><c> original</c><00:03:42.790><c> paper</c><00:03:43.180><c> which</c><00:03:43.600><c> is</c><00:03:43.630><c> getting</c><00:03:44.020><c> a</c>

00:03:44.160 --> 00:03:44.170 align:start position:0%
the original paper which is getting a
 

00:03:44.170 --> 00:03:46.800 align:start position:0%
the original paper which is getting a
little<00:03:44.410><c> bit</c><00:03:44.590><c> old</c><00:03:44.800><c> by</c><00:03:44.950><c> now</c><00:03:45.130><c> so</c><00:03:45.580><c> the</c><00:03:46.270><c> paper</c><00:03:46.510><c> was</c>

00:03:46.800 --> 00:03:46.810 align:start position:0%
little bit old by now so the paper was
 

00:03:46.810 --> 00:03:49.290 align:start position:0%
little bit old by now so the paper was
published<00:03:46.990><c> in</c><00:03:47.380><c> 2004</c><00:03:48.340><c> on</c><00:03:48.610><c> g1</c><00:03:49.060><c> garbage</c>

00:03:49.290 --> 00:03:49.300 align:start position:0%
published in 2004 on g1 garbage
 

00:03:49.300 --> 00:03:52.050 align:start position:0%
published in 2004 on g1 garbage
collector<00:03:49.590><c> the</c><00:03:50.590><c> JDK</c><00:03:51.040><c> got</c><00:03:51.370><c> experimental</c>

00:03:52.050 --> 00:03:52.060 align:start position:0%
collector the JDK got experimental
 

00:03:52.060 --> 00:03:54.500 align:start position:0%
collector the JDK got experimental
support<00:03:52.180><c> for</c><00:03:52.570><c> day</c><00:03:52.690><c> 1</c><00:03:52.900><c> in</c><00:03:53.110><c> 6</c><00:03:53.410><c> to</c><00:03:53.590><c> 14</c><00:03:53.890><c> and</c>

00:03:54.500 --> 00:03:54.510 align:start position:0%
support for day 1 in 6 to 14 and
 

00:03:54.510 --> 00:03:58.530 align:start position:0%
support for day 1 in 6 to 14 and
official<00:03:55.510><c> support</c><00:03:55.900><c> in</c><00:03:56.050><c> JDK</c><00:03:56.530><c> 7</c><00:03:56.920><c> u</c><00:03:57.040><c> 4</c><00:03:57.280><c> in</c><00:03:57.820><c> 2012</c>

00:03:58.530 --> 00:03:58.540 align:start position:0%
official support in JDK 7 u 4 in 2012
 

00:03:58.540 --> 00:04:01.890 align:start position:0%
official support in JDK 7 u 4 in 2012
and<00:03:58.810><c> this</c><00:03:59.470><c> year</c><00:03:59.709><c> a</c><00:03:59.980><c> few</c><00:04:00.280><c> weeks</c><00:04:00.430><c> ago</c><00:04:00.550><c> when</c><00:04:01.270><c> JDK</c><00:04:01.720><c> 9</c>

00:04:01.890 --> 00:04:01.900 align:start position:0%
and this year a few weeks ago when JDK 9
 

00:04:01.900 --> 00:04:04.199 align:start position:0%
and this year a few weeks ago when JDK 9
was<00:04:02.110><c> released</c><00:04:02.490><c> q1</c><00:04:03.490><c> became</c><00:04:03.850><c> the</c><00:04:03.940><c> default</c>

00:04:04.199 --> 00:04:04.209 align:start position:0%
was released q1 became the default
 

00:04:04.209 --> 00:04:07.260 align:start position:0%
was released q1 became the default
collector<00:04:04.690><c> for</c><00:04:04.990><c> the</c><00:04:05.050><c> JDK</c><00:04:05.770><c> so</c><00:04:06.640><c> with</c><00:04:07.120><c> this</c>

00:04:07.260 --> 00:04:07.270 align:start position:0%
collector for the JDK so with this
 

00:04:07.270 --> 00:04:07.890 align:start position:0%
collector for the JDK so with this
information

00:04:07.890 --> 00:04:07.900 align:start position:0%
information
 

00:04:07.900 --> 00:04:09.840 align:start position:0%
information
be<00:04:08.230><c> wary</c><00:04:08.470><c> when</c><00:04:08.830><c> you're</c><00:04:08.950><c> reading</c><00:04:09.100><c> old</c><00:04:09.520><c> blog</c>

00:04:09.840 --> 00:04:09.850 align:start position:0%
be wary when you're reading old blog
 

00:04:09.850 --> 00:04:12.600 align:start position:0%
be wary when you're reading old blog
posts<00:04:10.390><c> Stack</c><00:04:10.900><c> Overflow</c><00:04:10.930><c> answers</c><00:04:11.709><c> etc</c><00:04:12.220><c> about</c><00:04:12.310><c> G</c>

00:04:12.600 --> 00:04:12.610 align:start position:0%
posts Stack Overflow answers etc about G
 

00:04:12.610 --> 00:04:14.760 align:start position:0%
posts Stack Overflow answers etc about G
1<00:04:12.850><c> because</c><00:04:13.630><c> quite</c><00:04:14.260><c> a</c><00:04:14.320><c> bit</c><00:04:14.560><c> has</c><00:04:14.739><c> changed</c>

00:04:14.760 --> 00:04:14.770 align:start position:0%
1 because quite a bit has changed
 

00:04:14.770 --> 00:04:20.280 align:start position:0%
1 because quite a bit has changed
between<00:04:15.750><c> 2009</c><00:04:16.750><c> and</c><00:04:16.980><c> 2017</c><00:04:18.090><c> the</c><00:04:19.090><c> G</c><00:04:19.270><c> 1</c><00:04:19.480><c> has</c>

00:04:20.280 --> 00:04:20.290 align:start position:0%
between 2009 and 2017 the G 1 has
 

00:04:20.290 --> 00:04:22.680 align:start position:0%
between 2009 and 2017 the G 1 has
evolved<00:04:20.799><c> a</c><00:04:20.950><c> lot</c><00:04:20.980><c> since</c><00:04:21.430><c> it</c><00:04:22.390><c> was</c><00:04:22.479><c> first</c>

00:04:22.680 --> 00:04:22.690 align:start position:0%
evolved a lot since it was first
 

00:04:22.690 --> 00:04:25.800 align:start position:0%
evolved a lot since it was first
introduced<00:04:23.169><c> with</c><00:04:23.229><c> experimental</c><00:04:23.830><c> support</c>

00:04:25.800 --> 00:04:25.810 align:start position:0%
introduced with experimental support
 

00:04:25.810 --> 00:04:28.590 align:start position:0%
introduced with experimental support
so<00:04:25.960><c> the</c><00:04:26.200><c> goal</c><00:04:26.380><c> of</c><00:04:26.410><c> g1</c><00:04:27.040><c> is</c><00:04:27.280><c> to</c><00:04:27.520><c> provide</c><00:04:27.850><c> both</c>

00:04:28.590 --> 00:04:28.600 align:start position:0%
so the goal of g1 is to provide both
 

00:04:28.600 --> 00:04:30.750 align:start position:0%
so the goal of g1 is to provide both
throughput<00:04:29.230><c> and</c><00:04:29.470><c> low</c><00:04:29.950><c> latency</c><00:04:30.580><c> and</c>

00:04:30.750 --> 00:04:30.760 align:start position:0%
throughput and low latency and
 

00:04:30.760 --> 00:04:32.820 align:start position:0%
throughput and low latency and
throughput<00:04:31.630><c> you</c><00:04:32.139><c> can</c><00:04:32.320><c> think</c><00:04:32.530><c> of</c><00:04:32.650><c> that</c><00:04:32.770><c> as</c>

00:04:32.820 --> 00:04:32.830 align:start position:0%
throughput you can think of that as
 

00:04:32.830 --> 00:04:35.310 align:start position:0%
throughput you can think of that as
roughly<00:04:33.580><c> the</c><00:04:34.180><c> number</c><00:04:34.210><c> of</c><00:04:34.600><c> transactions</c><00:04:35.169><c> per</c>

00:04:35.310 --> 00:04:35.320 align:start position:0%
roughly the number of transactions per
 

00:04:35.320 --> 00:04:38.430 align:start position:0%
roughly the number of transactions per
second<00:04:35.680><c> or</c><00:04:36.520><c> the</c><00:04:36.760><c> total</c><00:04:36.940><c> running</c><00:04:37.930><c> time</c><00:04:38.080><c> of</c><00:04:38.230><c> a</c>

00:04:38.430 --> 00:04:38.440 align:start position:0%
second or the total running time of a
 

00:04:38.440 --> 00:04:40.740 align:start position:0%
second or the total running time of a
program<00:04:38.639><c> whereas</c><00:04:39.639><c> latency</c><00:04:40.240><c> that</c><00:04:40.450><c> will</c><00:04:40.570><c> more</c>

00:04:40.740 --> 00:04:40.750 align:start position:0%
program whereas latency that will more
 

00:04:40.750 --> 00:04:42.629 align:start position:0%
program whereas latency that will more
correspond<00:04:41.410><c> to</c><00:04:41.500><c> the</c><00:04:41.680><c> maximum</c><00:04:41.889><c> time</c><00:04:42.340><c> of</c><00:04:42.400><c> a</c>

00:04:42.629 --> 00:04:42.639 align:start position:0%
correspond to the maximum time of a
 

00:04:42.639 --> 00:04:45.840 align:start position:0%
correspond to the maximum time of a
transaction<00:04:43.380><c> and</c><00:04:44.380><c> the</c><00:04:44.889><c> default</c><00:04:45.280><c> post</c><00:04:45.550><c> call</c>

00:04:45.840 --> 00:04:45.850 align:start position:0%
transaction and the default post call
 

00:04:45.850 --> 00:04:49.710 align:start position:0%
transaction and the default post call
for<00:04:46.090><c> g1</c><00:04:46.419><c> is</c><00:04:46.770><c> 200</c><00:04:47.770><c> milliseconds</c><00:04:48.360><c> this</c><00:04:49.360><c> post</c>

00:04:49.710 --> 00:04:49.720 align:start position:0%
for g1 is 200 milliseconds this post
 

00:04:49.720 --> 00:04:52.020 align:start position:0%
for g1 is 200 milliseconds this post
goal<00:04:49.960><c> can</c><00:04:50.260><c> be</c><00:04:50.290><c> tuned</c><00:04:50.800><c> you</c><00:04:51.040><c> can</c><00:04:51.220><c> say</c><00:04:51.340><c> to</c><00:04:51.400><c> g1</c><00:04:51.850><c> I'm</c>

00:04:52.020 --> 00:04:52.030 align:start position:0%
goal can be tuned you can say to g1 I'm
 

00:04:52.030 --> 00:04:54.330 align:start position:0%
goal can be tuned you can say to g1 I'm
ok<00:04:52.330><c> with</c><00:04:52.360><c> longer</c><00:04:52.870><c> pauses</c><00:04:53.110><c> which</c><00:04:54.100><c> probably</c>

00:04:54.330 --> 00:04:54.340 align:start position:0%
ok with longer pauses which probably
 

00:04:54.340 --> 00:04:55.950 align:start position:0%
ok with longer pauses which probably
will<00:04:54.550><c> result</c><00:04:55.090><c> if</c><00:04:55.270><c> you</c><00:04:55.300><c> have</c><00:04:55.510><c> a</c><00:04:55.540><c> back-end</c>

00:04:55.950 --> 00:04:55.960 align:start position:0%
will result if you have a back-end
 

00:04:55.960 --> 00:04:57.720 align:start position:0%
will result if you have a back-end
service<00:04:56.380><c> for</c><00:04:56.530><c> example</c><00:04:56.919><c> in</c><00:04:57.070><c> longer</c><00:04:57.400><c> request</c>

00:04:57.720 --> 00:04:57.730 align:start position:0%
service for example in longer request
 

00:04:57.730 --> 00:04:59.820 align:start position:0%
service for example in longer request
times<00:04:57.940><c> but</c><00:04:58.750><c> in</c><00:04:58.900><c> turn</c><00:04:59.110><c> you</c><00:04:59.290><c> will</c><00:04:59.440><c> get</c><00:04:59.560><c> better</c>

00:04:59.820 --> 00:04:59.830 align:start position:0%
times but in turn you will get better
 

00:04:59.830 --> 00:05:01.890 align:start position:0%
times but in turn you will get better
throughput<00:05:00.130><c> and</c><00:05:00.550><c> get</c><00:05:00.760><c> more</c><00:05:01.000><c> work</c><00:05:01.300><c> done</c><00:05:01.360><c> per</c>

00:05:01.890 --> 00:05:01.900 align:start position:0%
throughput and get more work done per
 

00:05:01.900 --> 00:05:04.950 align:start position:0%
throughput and get more work done per
time<00:05:02.800><c> unit</c><00:05:03.090><c> whereas</c><00:05:04.090><c> if</c><00:05:04.330><c> you</c><00:05:04.450><c> are</c><00:05:04.570><c> concerned</c>

00:05:04.950 --> 00:05:04.960 align:start position:0%
time unit whereas if you are concerned
 

00:05:04.960 --> 00:05:07.170 align:start position:0%
time unit whereas if you are concerned
about<00:05:05.169><c> latency</c><00:05:05.890><c> and</c><00:05:06.010><c> say</c><00:05:06.160><c> that</c><00:05:06.310><c> I</c><00:05:06.669><c> don't</c><00:05:06.850><c> want</c>

00:05:07.170 --> 00:05:07.180 align:start position:0%
about latency and say that I don't want
 

00:05:07.180 --> 00:05:10.350 align:start position:0%
about latency and say that I don't want
it<00:05:07.270><c> to</c><00:05:07.360><c> post</c><00:05:07.830><c> not</c><00:05:08.830><c> at</c><00:05:08.980><c> all</c><00:05:09.070><c> or</c><00:05:09.280><c> very</c><00:05:09.640><c> little</c><00:05:09.790><c> you</c>

00:05:10.350 --> 00:05:10.360 align:start position:0%
it to post not at all or very little you
 

00:05:10.360 --> 00:05:12.360 align:start position:0%
it to post not at all or very little you
can<00:05:10.390><c> decrease</c><00:05:10.990><c> this</c><00:05:11.350><c> value</c><00:05:11.470><c> to</c><00:05:11.950><c> a</c><00:05:11.980><c> much</c><00:05:12.160><c> lower</c>

00:05:12.360 --> 00:05:12.370 align:start position:0%
can decrease this value to a much lower
 

00:05:12.370 --> 00:05:15.120 align:start position:0%
can decrease this value to a much lower
value<00:05:12.600><c> but</c><00:05:13.600><c> there's</c><00:05:14.020><c> always</c><00:05:14.200><c> a</c><00:05:14.350><c> trade-off</c><00:05:14.560><c> so</c>

00:05:15.120 --> 00:05:15.130 align:start position:0%
value but there's always a trade-off so
 

00:05:15.130 --> 00:05:16.110 align:start position:0%
value but there's always a trade-off so
here<00:05:15.310><c> you're</c><00:05:15.520><c> gonna</c><00:05:15.640><c> have</c><00:05:15.790><c> to</c><00:05:15.910><c> sacrifice</c>

00:05:16.110 --> 00:05:16.120 align:start position:0%
here you're gonna have to sacrifice
 

00:05:16.120 --> 00:05:19.350 align:start position:0%
here you're gonna have to sacrifice
throughput<00:05:16.870><c> a</c><00:05:16.900><c> bit</c><00:05:17.110><c> but</c><00:05:18.070><c> in</c><00:05:18.400><c> turn</c><00:05:19.120><c> you</c><00:05:19.330><c> will</c>

00:05:19.350 --> 00:05:19.360 align:start position:0%
throughput a bit but in turn you will
 

00:05:19.360 --> 00:05:22.740 align:start position:0%
throughput a bit but in turn you will
get<00:05:19.570><c> shorter</c><00:05:19.960><c> forces</c><00:05:20.880><c> so</c><00:05:21.880><c> how</c><00:05:22.300><c> does</c><00:05:22.360><c> do</c><00:05:22.660><c> you</c>

00:05:22.740 --> 00:05:22.750 align:start position:0%
get shorter forces so how does do you
 

00:05:22.750 --> 00:05:24.990 align:start position:0%
get shorter forces so how does do you
wanna<00:05:22.960><c> achieve</c><00:05:23.110><c> this</c><00:05:23.410><c> well</c><00:05:23.919><c> the</c><00:05:24.250><c> goal</c><00:05:24.520><c> here</c><00:05:24.970><c> is</c>

00:05:24.990 --> 00:05:25.000 align:start position:0%
wanna achieve this well the goal here is
 

00:05:25.000 --> 00:05:27.750 align:start position:0%
wanna achieve this well the goal here is
where<00:05:25.600><c> the</c><00:05:26.130><c> methyl</c><00:05:27.130><c> here</c><00:05:27.310><c> is</c><00:05:27.400><c> to</c><00:05:27.580><c> use</c>

00:05:27.750 --> 00:05:27.760 align:start position:0%
where the methyl here is to use
 

00:05:27.760 --> 00:05:29.850 align:start position:0%
where the methyl here is to use
generational<00:05:28.750><c> region</c><00:05:29.169><c> based</c><00:05:29.380><c> memory</c>

00:05:29.850 --> 00:05:29.860 align:start position:0%
generational region based memory
 

00:05:29.860 --> 00:05:30.480 align:start position:0%
generational region based memory
management

00:05:30.480 --> 00:05:30.490 align:start position:0%
management
 

00:05:30.490 --> 00:05:33.180 align:start position:0%
management
that's<00:05:31.180><c> quite</c><00:05:31.390><c> a</c><00:05:31.450><c> term</c><00:05:31.720><c> so</c><00:05:32.080><c> the</c><00:05:32.440><c> heap</c><00:05:32.620><c> is</c><00:05:32.800><c> split</c>

00:05:33.180 --> 00:05:33.190 align:start position:0%
that's quite a term so the heap is split
 

00:05:33.190 --> 00:05:36.330 align:start position:0%
that's quite a term so the heap is split
into<00:05:33.460><c> multiple</c><00:05:33.760><c> regions</c><00:05:34.630><c> so</c><00:05:35.530><c> the</c><00:05:35.770><c> region</c><00:05:36.100><c> size</c>

00:05:36.330 --> 00:05:36.340 align:start position:0%
into multiple regions so the region size
 

00:05:36.340 --> 00:05:39.600 align:start position:0%
into multiple regions so the region size
will<00:05:36.640><c> depend</c><00:05:36.850><c> on</c><00:05:37.300><c> the</c><00:05:37.630><c> heap</c><00:05:37.780><c> size</c><00:05:38.280><c> for</c><00:05:39.280><c> example</c>

00:05:39.600 --> 00:05:39.610 align:start position:0%
will depend on the heap size for example
 

00:05:39.610 --> 00:05:41.730 align:start position:0%
will depend on the heap size for example
if<00:05:39.700><c> you</c><00:05:39.790><c> have</c><00:05:39.910><c> 4</c><00:05:40.120><c> gigabyte</c><00:05:40.510><c> heap</c><00:05:40.690><c> then</c><00:05:40.930><c> you</c><00:05:41.080><c> g1</c>

00:05:41.730 --> 00:05:41.740 align:start position:0%
if you have 4 gigabyte heap then you g1
 

00:05:41.740 --> 00:05:44.250 align:start position:0%
if you have 4 gigabyte heap then you g1
will<00:05:41.890><c> divide</c><00:05:42.220><c> it</c><00:05:42.340><c> into</c><00:05:42.630><c> 2048</c><00:05:43.630><c> 2</c><00:05:43.810><c> megabyte</c>

00:05:44.250 --> 00:05:44.260 align:start position:0%
will divide it into 2048 2 megabyte
 

00:05:44.260 --> 00:05:48.600 align:start position:0%
will divide it into 2048 2 megabyte
regions<00:05:45.870><c> new</c><00:05:46.870><c> objects</c><00:05:47.260><c> are</c><00:05:47.530><c> allocated</c><00:05:47.770><c> into</c>

00:05:48.600 --> 00:05:48.610 align:start position:0%
regions new objects are allocated into
 

00:05:48.610 --> 00:05:52.110 align:start position:0%
regions new objects are allocated into
so-called<00:05:48.789><c> Eden</c><00:05:49.510><c> regions</c><00:05:49.840><c> and</c><00:05:50.850><c> a</c><00:05:51.850><c> John</c>

00:05:52.110 --> 00:05:52.120 align:start position:0%
so-called Eden regions and a John
 

00:05:52.120 --> 00:05:54.240 align:start position:0%
so-called Eden regions and a John
collection<00:05:52.660><c> will</c><00:05:52.960><c> happen</c><00:05:53.350><c> after</c><00:05:53.740><c> a</c><00:05:53.770><c> number</c><00:05:53.979><c> of</c>

00:05:54.240 --> 00:05:54.250 align:start position:0%
collection will happen after a number of
 

00:05:54.250 --> 00:05:56.880 align:start position:0%
collection will happen after a number of
Eden<00:05:54.610><c> regions</c><00:05:54.880><c> have</c><00:05:55.180><c> been</c><00:05:55.210><c> allocated</c><00:05:55.960><c> during</c>

00:05:56.880 --> 00:05:56.890 align:start position:0%
Eden regions have been allocated during
 

00:05:56.890 --> 00:05:58.980 align:start position:0%
Eden regions have been allocated during
such<00:05:57.310><c> a</c><00:05:57.340><c> young</c><00:05:57.610><c> collection</c><00:05:58.090><c> j-1</c><00:05:58.539><c> will</c><00:05:58.720><c> find</c>

00:05:58.980 --> 00:05:58.990 align:start position:0%
such a young collection j-1 will find
 

00:05:58.990 --> 00:06:01.100 align:start position:0%
such a young collection j-1 will find
live<00:05:59.169><c> objects</c><00:05:59.590><c> in</c><00:05:59.770><c> those</c><00:06:00.039><c> Eden</c><00:06:00.430><c> regions</c><00:06:00.789><c> and</c>

00:06:01.100 --> 00:06:01.110 align:start position:0%
live objects in those Eden regions and
 

00:06:01.110 --> 00:06:03.300 align:start position:0%
live objects in those Eden regions and
compactly<00:06:02.110><c> copy</c><00:06:02.410><c> them</c><00:06:02.530><c> into</c><00:06:02.740><c> a</c><00:06:02.919><c> survival</c>

00:06:03.300 --> 00:06:03.310 align:start position:0%
compactly copy them into a survival
 

00:06:03.310 --> 00:06:07.320 align:start position:0%
compactly copy them into a survival
region<00:06:05.190><c> objects</c><00:06:06.190><c> will</c><00:06:06.490><c> then</c><00:06:06.610><c> continue</c><00:06:06.940><c> to</c><00:06:07.090><c> be</c>

00:06:07.320 --> 00:06:07.330 align:start position:0%
region objects will then continue to be
 

00:06:07.330 --> 00:06:10.110 align:start position:0%
region objects will then continue to be
allocated<00:06:07.630><c> in</c><00:06:07.930><c> Eden</c><00:06:08.229><c> regions</c><00:06:08.560><c> and</c><00:06:09.490><c> after</c><00:06:10.030><c> a</c>

00:06:10.110 --> 00:06:10.120 align:start position:0%
allocated in Eden regions and after a
 

00:06:10.120 --> 00:06:12.510 align:start position:0%
allocated in Eden regions and after a
while<00:06:10.300><c> if</c><00:06:10.930><c> an</c><00:06:11.140><c> object</c><00:06:11.289><c> survives</c><00:06:11.860><c> multiple</c>

00:06:12.510 --> 00:06:12.520 align:start position:0%
while if an object survives multiple
 

00:06:12.520 --> 00:06:14.580 align:start position:0%
while if an object survives multiple
John<00:06:12.760><c> collections</c><00:06:13.240><c> they</c><00:06:13.900><c> are</c><00:06:14.020><c> compactly</c>

00:06:14.580 --> 00:06:14.590 align:start position:0%
John collections they are compactly
 

00:06:14.590 --> 00:06:18.480 align:start position:0%
John collections they are compactly
copied<00:06:14.950><c> into</c><00:06:15.190><c> an</c><00:06:15.370><c> old</c><00:06:15.550><c> region</c><00:06:17.039><c> so</c><00:06:18.039><c> as</c><00:06:18.310><c> your</c>

00:06:18.480 --> 00:06:18.490 align:start position:0%
copied into an old region so as your
 

00:06:18.490 --> 00:06:20.250 align:start position:0%
copied into an old region so as your
program<00:06:18.850><c> keeps</c><00:06:19.090><c> running</c><00:06:19.510><c> more</c><00:06:19.810><c> and</c><00:06:20.050><c> more</c>

00:06:20.250 --> 00:06:20.260 align:start position:0%
program keeps running more and more
 

00:06:20.260 --> 00:06:21.719 align:start position:0%
program keeps running more and more
intermediates<00:06:20.919><c> will</c><00:06:21.100><c> be</c><00:06:21.220><c> used</c><00:06:21.460><c> for</c>

00:06:21.719 --> 00:06:21.729 align:start position:0%
intermediates will be used for
 

00:06:21.729 --> 00:06:23.610 align:start position:0%
intermediates will be used for
allocations<00:06:22.270><c> young</c><00:06:22.960><c> collections</c><00:06:23.470><c> will</c>

00:06:23.610 --> 00:06:23.620 align:start position:0%
allocations young collections will
 

00:06:23.620 --> 00:06:25.710 align:start position:0%
allocations young collections will
happens<00:06:23.979><c> the</c><00:06:24.460><c> objects</c><00:06:24.789><c> will</c><00:06:24.970><c> be</c><00:06:25.000><c> surviving</c>

00:06:25.710 --> 00:06:25.720 align:start position:0%
happens the objects will be surviving
 

00:06:25.720 --> 00:06:27.840 align:start position:0%
happens the objects will be surviving
and<00:06:25.930><c> moving</c><00:06:26.260><c> into</c><00:06:26.380><c> survival</c><00:06:26.740><c> regions</c><00:06:27.130><c> some</c>

00:06:27.840 --> 00:06:27.850 align:start position:0%
and moving into survival regions some
 

00:06:27.850 --> 00:06:29.940 align:start position:0%
and moving into survival regions some
ways<00:06:28.000><c> survive</c><00:06:28.270><c> for</c><00:06:28.450><c> longer</c><00:06:28.690><c> times</c><00:06:28.960><c> filling</c><00:06:29.830><c> up</c>

00:06:29.940 --> 00:06:29.950 align:start position:0%
ways survive for longer times filling up
 

00:06:29.950 --> 00:06:31.950 align:start position:0%
ways survive for longer times filling up
more<00:06:30.130><c> and</c><00:06:30.400><c> more</c><00:06:30.550><c> old</c><00:06:30.789><c> regions</c><00:06:31.240><c> with</c><00:06:31.690><c> live</c>

00:06:31.950 --> 00:06:31.960 align:start position:0%
more and more old regions with live
 

00:06:31.960 --> 00:06:35.909 align:start position:0%
more and more old regions with live
objects<00:06:32.470><c> and</c><00:06:33.060><c> sooner</c><00:06:34.060><c> rather</c><00:06:34.840><c> than</c><00:06:34.990><c> later</c><00:06:35.080><c> g1</c>

00:06:35.909 --> 00:06:35.919 align:start position:0%
objects and sooner rather than later g1
 

00:06:35.919 --> 00:06:37.409 align:start position:0%
objects and sooner rather than later g1
will<00:06:36.070><c> have</c><00:06:36.220><c> to</c><00:06:36.370><c> start</c><00:06:36.610><c> a</c><00:06:36.729><c> concurrent</c><00:06:37.210><c> mark</c>

00:06:37.409 --> 00:06:37.419 align:start position:0%
will have to start a concurrent mark
 

00:06:37.419 --> 00:06:39.899 align:start position:0%
will have to start a concurrent mark
cycle<00:06:37.840><c> to</c><00:06:38.409><c> find</c><00:06:38.710><c> out</c><00:06:38.860><c> in</c><00:06:39.130><c> the</c><00:06:39.280><c> old</c><00:06:39.460><c> regions</c>

00:06:39.899 --> 00:06:39.909 align:start position:0%
cycle to find out in the old regions
 

00:06:39.909 --> 00:06:41.730 align:start position:0%
cycle to find out in the old regions
which<00:06:40.240><c> objects</c><00:06:40.659><c> are</c><00:06:40.840><c> actually</c><00:06:41.020><c> in</c><00:06:41.320><c> use</c><00:06:41.500><c> in</c>

00:06:41.730 --> 00:06:41.740 align:start position:0%
which objects are actually in use in
 

00:06:41.740 --> 00:06:45.210 align:start position:0%
which objects are actually in use in
which<00:06:41.860><c> or</c><00:06:42.130><c> n't</c><00:06:42.960><c> so</c><00:06:43.960><c> the</c><00:06:44.289><c> job</c><00:06:44.470><c> application</c><00:06:44.590><c> is</c>

00:06:45.210 --> 00:06:45.220 align:start position:0%
which or n't so the job application is
 

00:06:45.220 --> 00:06:48.450 align:start position:0%
which or n't so the job application is
not<00:06:45.700><c> stopped</c><00:06:46.120><c> during</c><00:06:46.900><c> this</c><00:06:47.860><c> time</c><00:06:48.190><c> the</c>

00:06:48.450 --> 00:06:48.460 align:start position:0%
not stopped during this time the
 

00:06:48.460 --> 00:06:50.010 align:start position:0%
not stopped during this time the
concurrent<00:06:48.909><c> mark</c><00:06:49.150><c> will</c><00:06:49.570><c> be</c><00:06:49.810><c> running</c>

00:06:50.010 --> 00:06:50.020 align:start position:0%
concurrent mark will be running
 

00:06:50.020 --> 00:06:51.740 align:start position:0%
concurrent mark will be running
alongside<00:06:50.500><c> your</c><00:06:50.979><c> job</c><00:06:51.130><c> application</c>

00:06:51.740 --> 00:06:51.750 align:start position:0%
alongside your job application
 

00:06:51.750 --> 00:06:53.760 align:start position:0%
alongside your job application
traversing<00:06:52.750><c> the</c><00:06:52.840><c> heap</c><00:06:53.020><c> and</c><00:06:53.289><c> finding</c><00:06:53.650><c> all</c>

00:06:53.760 --> 00:06:53.770 align:start position:0%
traversing the heap and finding all
 

00:06:53.770 --> 00:06:57.589 align:start position:0%
traversing the heap and finding all
these<00:06:53.890><c> live</c><00:06:54.130><c> objects</c><00:06:54.520><c> in</c><00:06:55.120><c> the</c><00:06:55.360><c> old</c><00:06:55.539><c> regions</c>

00:06:57.589 --> 00:06:57.599 align:start position:0%
these live objects in the old regions
 

00:06:57.599 --> 00:07:00.300 align:start position:0%
these live objects in the old regions
then<00:06:58.599><c> once</c><00:06:59.080><c> the</c><00:06:59.260><c> concurrent</c><00:06:59.620><c> marking</c><00:06:59.950><c> cycle</c>

00:07:00.300 --> 00:07:00.310 align:start position:0%
then once the concurrent marking cycle
 

00:07:00.310 --> 00:07:03.210 align:start position:0%
then once the concurrent marking cycle
is<00:07:00.370><c> finished</c><00:07:00.900><c> even</c><00:07:01.900><c> survive</c><00:07:02.320><c> an</c><00:07:02.530><c> old</c><00:07:02.770><c> regions</c>

00:07:03.210 --> 00:07:03.220 align:start position:0%
is finished even survive an old regions
 

00:07:03.220 --> 00:07:05.010 align:start position:0%
is finished even survive an old regions
or<00:07:03.460><c> collected</c><00:07:04.000><c> in</c><00:07:04.180><c> so</c><00:07:04.390><c> called</c><00:07:04.599><c> mixed</c>

00:07:05.010 --> 00:07:05.020 align:start position:0%
or collected in so called mixed
 

00:07:05.020 --> 00:07:07.380 align:start position:0%
or collected in so called mixed
collections<00:07:05.500><c> the</c><00:07:06.340><c> live</c><00:07:06.520><c> objects</c><00:07:06.880><c> are</c><00:07:07.090><c> again</c>

00:07:07.380 --> 00:07:07.390 align:start position:0%
collections the live objects are again
 

00:07:07.390 --> 00:07:09.659 align:start position:0%
collections the live objects are again
compactly<00:07:07.990><c> copied</c><00:07:08.320><c> into</c><00:07:08.500><c> survivor</c><00:07:09.010><c> and</c><00:07:09.340><c> old</c>

00:07:09.659 --> 00:07:09.669 align:start position:0%
compactly copied into survivor and old
 

00:07:09.669 --> 00:07:12.870 align:start position:0%
compactly copied into survivor and old
radians<00:07:11.070><c> so</c><00:07:12.070><c> on</c><00:07:12.220><c> the</c><00:07:12.310><c> side</c><00:07:12.520><c> here</c><00:07:12.550><c> in</c><00:07:12.820><c> this</c>

00:07:12.870 --> 00:07:12.880 align:start position:0%
radians so on the side here in this
 

00:07:12.880 --> 00:07:14.610 align:start position:0%
radians so on the side here in this
example<00:07:13.180><c> we</c><00:07:13.479><c> are</c><00:07:13.510><c> taking</c><00:07:13.750><c> all</c><00:07:14.050><c> of</c><00:07:14.080><c> the</c><00:07:14.289><c> Eden</c>

00:07:14.610 --> 00:07:14.620 align:start position:0%
example we are taking all of the Eden
 

00:07:14.620 --> 00:07:15.870 align:start position:0%
example we are taking all of the Eden
and<00:07:14.740><c> survival</c><00:07:15.039><c> regions</c><00:07:15.310><c> which</c><00:07:15.580><c> must</c><00:07:15.820><c> be</c>

00:07:15.870 --> 00:07:15.880 align:start position:0%
and survival regions which must be
 

00:07:15.880 --> 00:07:17.909 align:start position:0%
and survival regions which must be
collected<00:07:16.240><c> every</c><00:07:16.419><c> time</c><00:07:16.599><c> and</c><00:07:16.930><c> also</c><00:07:17.409><c> shows</c><00:07:17.740><c> in</c>

00:07:17.909 --> 00:07:17.919 align:start position:0%
collected every time and also shows in
 

00:07:17.919 --> 00:07:23.880 align:start position:0%
collected every time and also shows in
two<00:07:18.099><c> old</c><00:07:18.310><c> regions</c><00:07:18.669><c> to</c><00:07:18.849><c> collect</c><00:07:22.380><c> the</c><00:07:23.380><c> result</c><00:07:23.740><c> is</c>

00:07:23.880 --> 00:07:23.890 align:start position:0%
two old regions to collect the result is
 

00:07:23.890 --> 00:07:25.980 align:start position:0%
two old regions to collect the result is
time<00:07:24.400><c> goes</c><00:07:24.580><c> on</c><00:07:24.700><c> G</c><00:07:24.970><c> when</c><00:07:25.150><c> we</c><00:07:25.240><c> collect</c><00:07:25.510><c> more</c><00:07:25.810><c> and</c>

00:07:25.980 --> 00:07:25.990 align:start position:0%
time goes on G when we collect more and
 

00:07:25.990 --> 00:07:27.899 align:start position:0%
time goes on G when we collect more and
more<00:07:26.140><c> of</c><00:07:26.260><c> the</c><00:07:26.380><c> old</c><00:07:26.560><c> regions</c><00:07:27.010><c> so</c><00:07:27.370><c> more</c><00:07:27.550><c> and</c><00:07:27.760><c> more</c>

00:07:27.899 --> 00:07:27.909 align:start position:0%
more of the old regions so more and more
 

00:07:27.909 --> 00:07:30.360 align:start position:0%
more of the old regions so more and more
of<00:07:28.060><c> the</c><00:07:28.180><c> heap</c><00:07:28.360><c> will</c><00:07:28.599><c> become</c><00:07:28.870><c> free</c><00:07:29.110><c> and</c><00:07:29.530><c> then</c>

00:07:30.360 --> 00:07:30.370 align:start position:0%
of the heap will become free and then
 

00:07:30.370 --> 00:07:32.550 align:start position:0%
of the heap will become free and then
once<00:07:30.909><c> they're</c><00:07:31.479><c> no</c><00:07:31.599><c> longer</c><00:07:31.780><c> or</c><00:07:32.110><c> an</c><00:07:32.289><c> old</c>

00:07:32.550 --> 00:07:32.560 align:start position:0%
once they're no longer or an old
 

00:07:32.560 --> 00:07:34.440 align:start position:0%
once they're no longer or an old
gradients<00:07:33.010><c> suitable</c><00:07:33.580><c> for</c><00:07:33.760><c> collection</c><00:07:34.210><c> for</c>

00:07:34.440 --> 00:07:34.450 align:start position:0%
gradients suitable for collection for
 

00:07:34.450 --> 00:07:35.969 align:start position:0%
gradients suitable for collection for
example<00:07:34.810><c> they</c><00:07:34.900><c> might</c><00:07:35.050><c> contain</c><00:07:35.409><c> too</c><00:07:35.620><c> many</c><00:07:35.740><c> live</c>

00:07:35.969 --> 00:07:35.979 align:start position:0%
example they might contain too many live
 

00:07:35.979 --> 00:07:38.279 align:start position:0%
example they might contain too many live
objects<00:07:36.310><c> too</c><00:07:36.460><c> is</c><00:07:36.580><c> not</c><00:07:36.700><c> worth</c><00:07:36.970><c> collecting</c><00:07:37.900><c> them</c>

00:07:38.279 --> 00:07:38.289 align:start position:0%
objects too is not worth collecting them
 

00:07:38.289 --> 00:07:40.710 align:start position:0%
objects too is not worth collecting them
jibon<00:07:39.039><c> will</c><00:07:39.159><c> once</c><00:07:39.400><c> again</c><00:07:39.550><c> resume</c><00:07:40.150><c> doing</c><00:07:40.539><c> junk</c>

00:07:40.710 --> 00:07:40.720 align:start position:0%
jibon will once again resume doing junk
 

00:07:40.720 --> 00:07:44.219 align:start position:0%
jibon will once again resume doing junk
collections<00:07:41.789><c> thus</c><00:07:42.789><c> g1</c><00:07:43.630><c> moves</c><00:07:43.930><c> and</c>

00:07:44.219 --> 00:07:44.229 align:start position:0%
collections thus g1 moves and
 

00:07:44.229 --> 00:07:45.839 align:start position:0%
collections thus g1 moves and
transitions<00:07:44.650><c> between</c><00:07:44.890><c> the</c><00:07:45.190><c> following</c><00:07:45.490><c> states</c>

00:07:45.839 --> 00:07:45.849 align:start position:0%
transitions between the following states
 

00:07:45.849 --> 00:07:48.300 align:start position:0%
transitions between the following states
it<00:07:46.570><c> starts</c><00:07:46.930><c> out</c><00:07:47.080><c> by</c><00:07:47.260><c> doing</c><00:07:47.440><c> young</c><00:07:47.830><c> collections</c>

00:07:48.300 --> 00:07:48.310 align:start position:0%
it starts out by doing young collections
 

00:07:48.310 --> 00:07:50.909 align:start position:0%
it starts out by doing young collections
which<00:07:48.849><c> will</c><00:07:49.090><c> copy</c><00:07:49.930><c> objects</c><00:07:50.349><c> into</c><00:07:50.590><c> survivor</c>

00:07:50.909 --> 00:07:50.919 align:start position:0%
which will copy objects into survivor
 

00:07:50.919 --> 00:07:53.040 align:start position:0%
which will copy objects into survivor
regions<00:07:51.580><c> and</c><00:07:51.789><c> promote</c><00:07:52.240><c> them</c><00:07:52.390><c> to</c><00:07:52.419><c> old</c><00:07:52.659><c> regions</c>

00:07:53.040 --> 00:07:53.050 align:start position:0%
regions and promote them to old regions
 

00:07:53.050 --> 00:07:55.080 align:start position:0%
regions and promote them to old regions
after<00:07:53.500><c> a</c><00:07:53.560><c> while</c><00:07:53.740><c> as</c><00:07:54.010><c> the</c><00:07:54.490><c> heap</c><00:07:54.669><c> is</c><00:07:54.820><c> getting</c>

00:07:55.080 --> 00:07:55.090 align:start position:0%
after a while as the heap is getting
 

00:07:55.090 --> 00:07:57.000 align:start position:0%
after a while as the heap is getting
more<00:07:55.270><c> and</c><00:07:55.330><c> more</c><00:07:55.450><c> full</c><00:07:55.780><c> a</c><00:07:56.050><c> concurrent</c><00:07:56.800><c> mark</c>

00:07:57.000 --> 00:07:57.010 align:start position:0%
more and more full a concurrent mark
 

00:07:57.010 --> 00:07:59.339 align:start position:0%
more and more full a concurrent mark
cycle<00:07:57.430><c> will</c><00:07:57.610><c> be</c><00:07:57.760><c> started</c><00:07:58.210><c> the</c><00:07:58.960><c> concurrent</c>

00:07:59.339 --> 00:07:59.349 align:start position:0%
cycle will be started the concurrent
 

00:07:59.349 --> 00:08:00.480 align:start position:0%
cycle will be started the concurrent
mark<00:07:59.500><c> Sotka</c><00:07:59.650><c> is</c><00:07:59.860><c> not</c><00:08:00.010><c> only</c><00:08:00.190><c> running</c>

00:08:00.480 --> 00:08:00.490 align:start position:0%
mark Sotka is not only running
 

00:08:00.490 --> 00:08:02.550 align:start position:0%
mark Sotka is not only running
concurrently<00:08:00.820><c> with</c><00:08:01.390><c> your</c><00:08:01.630><c> application</c><00:08:02.260><c> they</c>

00:08:02.550 --> 00:08:02.560 align:start position:0%
concurrently with your application they
 

00:08:02.560 --> 00:08:04.230 align:start position:0%
concurrently with your application they
can<00:08:02.590><c> also</c><00:08:02.919><c> happens</c><00:08:03.280><c> young</c><00:08:03.760><c> collections</c>

00:08:04.230 --> 00:08:04.240 align:start position:0%
can also happens young collections
 

00:08:04.240 --> 00:08:05.850 align:start position:0%
can also happens young collections
during<00:08:04.510><c> the</c><00:08:04.900><c> concurrent</c><00:08:05.320><c> mark</c><00:08:05.500><c> circles</c>

00:08:05.850 --> 00:08:05.860 align:start position:0%
during the concurrent mark circles
 

00:08:05.860 --> 00:08:09.000 align:start position:0%
during the concurrent mark circles
running<00:08:06.330><c> once</c><00:08:07.330><c> the</c><00:08:07.450><c> hard</c><00:08:07.720><c> mark</c><00:08:07.960><c> finishes</c><00:08:08.440><c> g1</c>

00:08:09.000 --> 00:08:09.010 align:start position:0%
running once the hard mark finishes g1
 

00:08:09.010 --> 00:08:10.500 align:start position:0%
running once the hard mark finishes g1
transitions<00:08:09.520><c> are</c><00:08:09.640><c> going</c><00:08:09.880><c> to</c><00:08:09.970><c> do</c><00:08:10.090><c> with</c><00:08:10.240><c> mixed</c>

00:08:10.500 --> 00:08:10.510 align:start position:0%
transitions are going to do with mixed
 

00:08:10.510 --> 00:08:13.050 align:start position:0%
transitions are going to do with mixed
collections<00:08:10.960><c> and</c><00:08:11.490><c> once</c><00:08:12.490><c> they</c><00:08:12.700><c> are</c><00:08:12.760><c> no</c><00:08:12.880><c> longer</c>

00:08:13.050 --> 00:08:13.060 align:start position:0%
collections and once they are no longer
 

00:08:13.060 --> 00:08:15.210 align:start position:0%
collections and once they are no longer
and<00:08:13.390><c> in</c><00:08:13.479><c> suitable</c><00:08:13.960><c> regions</c><00:08:14.260><c> to</c><00:08:14.380><c> collect</c><00:08:14.650><c> it</c>

00:08:15.210 --> 00:08:15.220 align:start position:0%
and in suitable regions to collect it
 

00:08:15.220 --> 00:08:17.370 align:start position:0%
and in suitable regions to collect it
once<00:08:15.610><c> again</c><00:08:15.789><c> transition</c><00:08:16.419><c> back</c><00:08:16.599><c> to</c><00:08:16.840><c> do</c><00:08:17.080><c> enjoin</c>

00:08:17.370 --> 00:08:17.380 align:start position:0%
once again transition back to do enjoin
 

00:08:17.380 --> 00:08:20.990 align:start position:0%
once again transition back to do enjoin
collections<00:08:17.830><c> and</c><00:08:18.070><c> so</c><00:08:18.310><c> the</c><00:08:18.430><c> cycle</c><00:08:18.789><c> repeats</c>

00:08:20.990 --> 00:08:21.000 align:start position:0%
collections and so the cycle repeats
 

00:08:21.000 --> 00:08:24.180 align:start position:0%
collections and so the cycle repeats
so<00:08:22.020><c> we</c><00:08:23.020><c> wrapped</c><00:08:23.229><c> a</c><00:08:23.500><c> bit</c><00:08:23.680><c> of</c><00:08:23.770><c> knowledge</c><00:08:23.950><c> about</c>

00:08:24.180 --> 00:08:24.190 align:start position:0%
so we wrapped a bit of knowledge about
 

00:08:24.190 --> 00:08:26.250 align:start position:0%
so we wrapped a bit of knowledge about
how<00:08:24.520><c> g1</c><00:08:24.969><c> works</c><00:08:25.180><c> we're</c><00:08:25.360><c> going</c><00:08:25.479><c> to</c><00:08:25.570><c> look</c><00:08:25.659><c> at</c><00:08:25.900><c> five</c>

00:08:26.250 --> 00:08:26.260 align:start position:0%
how g1 works we're going to look at five
 

00:08:26.260 --> 00:08:27.810 align:start position:0%
how g1 works we're going to look at five
major<00:08:26.440><c> improvements</c><00:08:27.099><c> and</c><00:08:27.460><c> how</c><00:08:27.580><c> they</c><00:08:27.729><c> were</c>

00:08:27.810 --> 00:08:27.820 align:start position:0%
major improvements and how they were
 

00:08:27.820 --> 00:08:30.890 align:start position:0%
major improvements and how they were
done<00:08:28.030><c> that</c><00:08:28.960><c> has</c><00:08:29.050><c> happened</c><00:08:29.409><c> since</c><00:08:29.590><c> the</c><00:08:29.800><c> JDK</c><00:08:30.250><c> 8</c>

00:08:30.890 --> 00:08:30.900 align:start position:0%
done that has happened since the JDK 8
 

00:08:30.900 --> 00:08:33.540 align:start position:0%
done that has happened since the JDK 8
so<00:08:31.900><c> we're</c><00:08:32.140><c> gonna</c><00:08:32.320><c> have</c><00:08:32.469><c> a</c><00:08:32.530><c> look</c><00:08:32.680><c> at</c><00:08:32.890><c> string</c><00:08:33.430><c> the</c>

00:08:33.540 --> 00:08:33.550 align:start position:0%
so we're gonna have a look at string the
 

00:08:33.550 --> 00:08:36.630 align:start position:0%
so we're gonna have a look at string the
application<00:08:34.060><c> introduced</c><00:08:34.599><c> in</c><00:08:34.810><c> 8020</c><00:08:35.640><c> we're</c>

00:08:36.630 --> 00:08:36.640 align:start position:0%
application introduced in 8020 we're
 

00:08:36.640 --> 00:08:38.100 align:start position:0%
application introduced in 8020 we're
gonna<00:08:36.820><c> see</c><00:08:37.030><c> cloth</c><00:08:37.360><c> unloading</c><00:08:37.930><c> with</c>

00:08:38.100 --> 00:08:38.110 align:start position:0%
gonna see cloth unloading with
 

00:08:38.110 --> 00:08:41.190 align:start position:0%
gonna see cloth unloading with
concurrent<00:08:38.620><c> marks</c><00:08:38.890><c> with</c><00:08:39.039><c> shipped</c><00:08:39.400><c> in</c><00:08:39.579><c> a</c><00:08:39.729><c> 2-14</c>

00:08:41.190 --> 00:08:41.200 align:start position:0%
concurrent marks with shipped in a 2-14
 

00:08:41.200 --> 00:08:42.959 align:start position:0%
concurrent marks with shipped in a 2-14
we're<00:08:41.589><c> gonna</c><00:08:41.740><c> see</c><00:08:41.890><c> the</c><00:08:42.010><c> eagerly</c><00:08:42.459><c> reclamation</c>

00:08:42.959 --> 00:08:42.969 align:start position:0%
we're gonna see the eagerly reclamation
 

00:08:42.969 --> 00:08:44.939 align:start position:0%
we're gonna see the eagerly reclamation
of<00:08:43.060><c> humongous</c><00:08:43.570><c> regions</c><00:08:43.930><c> introduced</c><00:08:44.530><c> in</c><00:08:44.709><c> 8</c><00:08:44.829><c> to</c>

00:08:44.939 --> 00:08:44.949 align:start position:0%
of humongous regions introduced in 8 to
 

00:08:44.949 --> 00:08:46.579 align:start position:0%
of humongous regions introduced in 8 to
16

00:08:46.579 --> 00:08:46.589 align:start position:0%
16
 

00:08:46.589 --> 00:08:50.190 align:start position:0%
16
and<00:08:47.910><c> then</c><00:08:48.910><c> the</c><00:08:49.120><c> adaptive</c><00:08:49.600><c> sort</c><00:08:49.870><c> of</c><00:08:50.050><c> the</c>

00:08:50.190 --> 00:08:50.200 align:start position:0%
and then the adaptive sort of the
 

00:08:50.200 --> 00:08:51.840 align:start position:0%
and then the adaptive sort of the
co-current<00:08:50.529><c> mark</c><00:08:50.769><c> cycle</c><00:08:51.100><c> this</c><00:08:51.310><c> is</c><00:08:51.490><c> shipped</c><00:08:51.700><c> in</c>

00:08:51.840 --> 00:08:51.850 align:start position:0%
co-current mark cycle this is shipped in
 

00:08:51.850 --> 00:08:55.199 align:start position:0%
co-current mark cycle this is shipped in
Yeti<00:08:52.120><c> not</c><00:08:52.420><c> just</c><00:08:52.660><c> recently</c><00:08:52.990><c> and</c><00:08:53.850><c> also</c><00:08:54.850><c> about</c>

00:08:55.199 --> 00:08:55.209 align:start position:0%
Yeti not just recently and also about
 

00:08:55.209 --> 00:08:56.610 align:start position:0%
Yeti not just recently and also about
with<00:08:55.450><c> a</c><00:08:55.480><c> lot</c><00:08:55.600><c> more</c><00:08:55.870><c> efficient</c><00:08:56.260><c> collections</c>

00:08:56.610 --> 00:08:56.620 align:start position:0%
with a lot more efficient collections
 

00:08:56.620 --> 00:08:57.990 align:start position:0%
with a lot more efficient collections
that<00:08:56.769><c> were</c><00:08:56.860><c> also</c><00:08:56.950><c> shipped</c><00:08:57.279><c> in</c><00:08:57.430><c> Yeti</c><00:08:57.610><c> canine</c>

00:08:57.990 --> 00:08:58.000 align:start position:0%
that were also shipped in Yeti canine
 

00:08:58.000 --> 00:09:00.269 align:start position:0%
that were also shipped in Yeti canine
but<00:08:58.899><c> let's</c><00:08:59.170><c> start</c><00:08:59.410><c> out</c><00:08:59.560><c> with</c><00:08:59.589><c> string</c><00:09:00.130><c> the</c>

00:09:00.269 --> 00:09:00.279 align:start position:0%
but let's start out with string the
 

00:09:00.279 --> 00:09:03.660 align:start position:0%
but let's start out with string the
application<00:09:01.260><c> so</c><00:09:02.260><c> in</c><00:09:02.860><c> this</c><00:09:03.010><c> example</c><00:09:03.339><c> we</c><00:09:03.640><c> are</c>

00:09:03.660 --> 00:09:03.670 align:start position:0%
application so in this example we are
 

00:09:03.670 --> 00:09:05.819 align:start position:0%
application so in this example we are
allocating<00:09:04.029><c> two</c><00:09:04.510><c> strings</c><00:09:04.839><c> I</c><00:09:05.110><c> have</c><00:09:05.410><c> one</c><00:09:05.589><c> named</c>

00:09:05.819 --> 00:09:05.829 align:start position:0%
allocating two strings I have one named
 

00:09:05.829 --> 00:09:09.449 align:start position:0%
allocating two strings I have one named
conf<00:09:06.160><c> one</c><00:09:06.519><c> and</c><00:09:06.790><c> j1</c><00:09:07.350><c> j1</c><00:09:08.350><c> we</c><00:09:08.680><c> often</c><00:09:08.950><c> put</c><00:09:09.070><c> your</c><00:09:09.279><c> 1</c>

00:09:09.449 --> 00:09:09.459 align:start position:0%
conf one and j1 j1 we often put your 1
 

00:09:09.459 --> 00:09:12.240 align:start position:0%
conf one and j1 j1 we often put your 1
and<00:09:09.610><c> they</c><00:09:09.880><c> have</c><00:09:10.149><c> very</c><00:09:10.420><c> similar</c><00:09:10.690><c> content</c><00:09:11.290><c> if</c>

00:09:12.240 --> 00:09:12.250 align:start position:0%
and they have very similar content if
 

00:09:12.250 --> 00:09:13.850 align:start position:0%
and they have very similar content if
you<00:09:12.459><c> look</c><00:09:12.579><c> at</c><00:09:12.670><c> the</c><00:09:12.760><c> slide</c><00:09:12.970><c> they</c><00:09:13.089><c> actually</c><00:09:13.450><c> are</c>

00:09:13.850 --> 00:09:13.860 align:start position:0%
you look at the slide they actually are
 

00:09:13.860 --> 00:09:16.590 align:start position:0%
you look at the slide they actually are
identical<00:09:14.860><c> and</c><00:09:15.130><c> now</c><00:09:15.399><c> you</c><00:09:15.459><c> might</c><00:09:15.760><c> now</c><00:09:16.240><c> think</c><00:09:16.269><c> a</c>

00:09:16.590 --> 00:09:16.600 align:start position:0%
identical and now you might now think a
 

00:09:16.600 --> 00:09:19.199 align:start position:0%
identical and now you might now think a
little<00:09:16.720><c> bit</c><00:09:17.040><c> couldn't</c><00:09:18.040><c> we</c><00:09:18.190><c> make</c><00:09:18.640><c> better</c><00:09:18.910><c> use</c>

00:09:19.199 --> 00:09:19.209 align:start position:0%
little bit couldn't we make better use
 

00:09:19.209 --> 00:09:20.690 align:start position:0%
little bit couldn't we make better use
of<00:09:19.240><c> the</c><00:09:19.540><c> memory</c><00:09:19.690><c> instead</c><00:09:20.110><c> of</c><00:09:20.260><c> having</c><00:09:20.440><c> this</c>

00:09:20.690 --> 00:09:20.700 align:start position:0%
of the memory instead of having this
 

00:09:20.700 --> 00:09:23.340 align:start position:0%
of the memory instead of having this
duplicated<00:09:21.700><c> character</c><00:09:22.600><c> arrays</c><00:09:22.839><c> on</c><00:09:23.079><c> the</c><00:09:23.170><c> heap</c>

00:09:23.340 --> 00:09:23.350 align:start position:0%
duplicated character arrays on the heap
 

00:09:23.350 --> 00:09:26.310 align:start position:0%
duplicated character arrays on the heap
taking<00:09:23.769><c> up</c><00:09:23.860><c> valuable</c><00:09:24.070><c> space</c><00:09:24.990><c> could</c><00:09:25.990><c> we</c><00:09:26.200><c> do</c>

00:09:26.310 --> 00:09:26.320 align:start position:0%
taking up valuable space could we do
 

00:09:26.320 --> 00:09:31.710 align:start position:0%
taking up valuable space could we do
this<00:09:26.560><c> would</c><00:09:27.370><c> that</c><00:09:27.550><c> be</c><00:09:27.730><c> okay</c><00:09:29.850><c> or</c><00:09:30.850><c> could</c><00:09:31.510><c> it</c><00:09:31.540><c> be</c>

00:09:31.710 --> 00:09:31.720 align:start position:0%
this would that be okay or could it be
 

00:09:31.720 --> 00:09:33.900 align:start position:0%
this would that be okay or could it be
any<00:09:31.899><c> problems</c><00:09:32.529><c> with</c><00:09:32.709><c> the</c><00:09:32.769><c> java</c><00:09:32.980><c> program</c><00:09:33.399><c> if</c><00:09:33.579><c> we</c>

00:09:33.900 --> 00:09:33.910 align:start position:0%
any problems with the java program if we
 

00:09:33.910 --> 00:09:36.540 align:start position:0%
any problems with the java program if we
were<00:09:34.089><c> to</c><00:09:34.269><c> do</c><00:09:34.390><c> this</c><00:09:34.540><c> little</c><00:09:34.839><c> trick</c><00:09:35.399><c> it</c><00:09:36.399><c> is</c>

00:09:36.540 --> 00:09:36.550 align:start position:0%
were to do this little trick it is
 

00:09:36.550 --> 00:09:38.639 align:start position:0%
were to do this little trick it is
actually<00:09:36.910><c> perfectly</c><00:09:37.630><c> legal</c><00:09:38.019><c> and</c><00:09:38.200><c> valid</c><00:09:38.260><c> and</c>

00:09:38.639 --> 00:09:38.649 align:start position:0%
actually perfectly legal and valid and
 

00:09:38.649 --> 00:09:39.150 align:start position:0%
actually perfectly legal and valid and
fine

00:09:39.150 --> 00:09:39.160 align:start position:0%
fine
 

00:09:39.160 --> 00:09:41.310 align:start position:0%
fine
because<00:09:39.850><c> in</c><00:09:40.089><c> Java</c><00:09:40.420><c> like</c><00:09:40.600><c> string</c><00:09:40.899><c> the</c>

00:09:41.310 --> 00:09:41.320 align:start position:0%
because in Java like string the
 

00:09:41.320 --> 00:09:43.500 align:start position:0%
because in Java like string the
character<00:09:41.740><c> array</c><00:09:41.920><c> value</c><00:09:42.339><c> is</c><00:09:42.579><c> both</c><00:09:42.910><c> private</c>

00:09:43.500 --> 00:09:43.510 align:start position:0%
character array value is both private
 

00:09:43.510 --> 00:09:46.170 align:start position:0%
character array value is both private
and<00:09:43.540><c> final</c><00:09:44.170><c> so</c><00:09:44.920><c> if</c><00:09:45.070><c> we</c><00:09:45.190><c> do</c><00:09:45.339><c> this</c><00:09:45.519><c> behind</c><00:09:46.029><c> the</c>

00:09:46.170 --> 00:09:46.180 align:start position:0%
and final so if we do this behind the
 

00:09:46.180 --> 00:09:49.050 align:start position:0%
and final so if we do this behind the
scenes<00:09:46.420><c> that</c><00:09:47.320><c> your</c><00:09:47.709><c> Java</c><00:09:48.100><c> program</c><00:09:48.519><c> will</c><00:09:48.850><c> not</c>

00:09:49.050 --> 00:09:49.060 align:start position:0%
scenes that your Java program will not
 

00:09:49.060 --> 00:09:52.380 align:start position:0%
scenes that your Java program will not
notice<00:09:49.269><c> any</c><00:09:49.690><c> difference</c><00:09:50.730><c> the</c><00:09:51.730><c> way</c><00:09:51.910><c> we</c><00:09:52.089><c> do</c><00:09:52.209><c> this</c>

00:09:52.380 --> 00:09:52.390 align:start position:0%
notice any difference the way we do this
 

00:09:52.390 --> 00:09:55.710 align:start position:0%
notice any difference the way we do this
is<00:09:52.449><c> that</c><00:09:52.750><c> during</c><00:09:53.050><c> a</c><00:09:53.320><c> collection</c><00:09:54.120><c> g1</c><00:09:55.120><c> adds</c><00:09:55.390><c> all</c>

00:09:55.710 --> 00:09:55.720 align:start position:0%
is that during a collection g1 adds all
 

00:09:55.720 --> 00:09:57.810 align:start position:0%
is that during a collection g1 adds all
new<00:09:55.959><c> newly</c><00:09:56.709><c> allocated</c><00:09:56.860><c> strings</c><00:09:57.310><c> to</c><00:09:57.490><c> a</c><00:09:57.519><c> queue</c>

00:09:57.810 --> 00:09:57.820 align:start position:0%
new newly allocated strings to a queue
 

00:09:57.820 --> 00:10:00.870 align:start position:0%
new newly allocated strings to a queue
and<00:09:58.320><c> then</c><00:09:59.320><c> after</c><00:09:59.920><c> the</c><00:10:00.220><c> young</c><00:10:00.370><c> collection</c><00:10:00.790><c> is</c>

00:10:00.870 --> 00:10:00.880 align:start position:0%
and then after the young collection is
 

00:10:00.880 --> 00:10:03.990 align:start position:0%
and then after the young collection is
done<00:10:01.120><c> g1</c><00:10:02.050><c> will</c><00:10:02.199><c> concurrently</c><00:10:02.800><c> check</c><00:10:03.130><c> if</c><00:10:03.430><c> any</c>

00:10:03.990 --> 00:10:04.000 align:start position:0%
done g1 will concurrently check if any
 

00:10:04.000 --> 00:10:06.000 align:start position:0%
done g1 will concurrently check if any
two<00:10:04.269><c> strings</c><00:10:04.570><c> equals</c><00:10:05.050><c> if</c><00:10:05.320><c> the</c><00:10:05.589><c> two</c><00:10:05.740><c> strings</c>

00:10:06.000 --> 00:10:06.010 align:start position:0%
two strings equals if the two strings
 

00:10:06.010 --> 00:10:08.220 align:start position:0%
two strings equals if the two strings
are<00:10:06.190><c> identical</c><00:10:06.910><c> then</c><00:10:07.660><c> you</c><00:10:07.779><c> can</c><00:10:07.930><c> make</c><00:10:08.079><c> them</c>

00:10:08.220 --> 00:10:08.230 align:start position:0%
are identical then you can make them
 

00:10:08.230 --> 00:10:09.840 align:start position:0%
are identical then you can make them
refer<00:10:08.529><c> I</c><00:10:08.769><c> will</c><00:10:08.920><c> give</c><00:10:09.100><c> one</c><00:10:09.220><c> mixed</c><00:10:09.459><c> and</c><00:10:09.579><c> refer</c><00:10:09.820><c> to</c>

00:10:09.840 --> 00:10:09.850 align:start position:0%
refer I will give one mixed and refer to
 

00:10:09.850 --> 00:10:12.269 align:start position:0%
refer I will give one mixed and refer to
the<00:10:10.089><c> same</c><00:10:10.269><c> character</c><00:10:10.750><c> array</c><00:10:10.990><c> and</c><00:10:11.320><c> please</c><00:10:12.040><c> note</c>

00:10:12.269 --> 00:10:12.279 align:start position:0%
the same character array and please note
 

00:10:12.279 --> 00:10:14.550 align:start position:0%
the same character array and please note
this<00:10:12.490><c> is</c><00:10:12.670><c> not</c><00:10:12.699><c> the</c><00:10:13.089><c> same</c><00:10:13.240><c> thing</c><00:10:13.510><c> as</c><00:10:13.779><c> in</c><00:10:14.260><c> turn</c>

00:10:14.550 --> 00:10:14.560 align:start position:0%
this is not the same thing as in turn
 

00:10:14.560 --> 00:10:16.769 align:start position:0%
this is not the same thing as in turn
strings<00:10:14.800><c> string</c><00:10:15.790><c> in</c><00:10:16.000><c> turn</c><00:10:16.209><c> cares</c><00:10:16.510><c> about</c>

00:10:16.769 --> 00:10:16.779 align:start position:0%
strings string in turn cares about
 

00:10:16.779 --> 00:10:18.720 align:start position:0%
strings string in turn cares about
string<00:10:17.079><c> objects</c><00:10:17.529><c> whereas</c><00:10:18.310><c> during</c><00:10:18.519><c> the</c>

00:10:18.720 --> 00:10:18.730 align:start position:0%
string objects whereas during the
 

00:10:18.730 --> 00:10:20.280 align:start position:0%
string objects whereas during the
application<00:10:18.820><c> cares</c><00:10:19.540><c> about</c><00:10:19.779><c> the</c><00:10:19.930><c> character</c>

00:10:20.280 --> 00:10:20.290 align:start position:0%
application cares about the character
 

00:10:20.290 --> 00:10:22.160 align:start position:0%
application cares about the character
arrays<00:10:20.560><c> or</c><00:10:20.829><c> the</c><00:10:21.130><c> value</c><00:10:21.490><c> fields</c><00:10:21.820><c> and</c>

00:10:22.160 --> 00:10:22.170 align:start position:0%
arrays or the value fields and
 

00:10:22.170 --> 00:10:24.660 align:start position:0%
arrays or the value fields and
internally<00:10:23.170><c> in</c><00:10:23.290><c> the</c><00:10:23.320><c> AVM</c><00:10:23.800><c> they</c><00:10:23.980><c> use</c><00:10:24.190><c> different</c>

00:10:24.660 --> 00:10:24.670 align:start position:0%
internally in the AVM they use different
 

00:10:24.670 --> 00:10:29.069 align:start position:0%
internally in the AVM they use different
tables<00:10:26.459><c> this</c><00:10:27.459><c> can</c><00:10:27.699><c> save</c><00:10:27.880><c> a</c><00:10:28.089><c> lot</c><00:10:28.390><c> of</c><00:10:28.540><c> memory</c><00:10:28.899><c> and</c>

00:10:29.069 --> 00:10:29.079 align:start position:0%
tables this can save a lot of memory and
 

00:10:29.079 --> 00:10:31.740 align:start position:0%
tables this can save a lot of memory and
a<00:10:29.290><c> lot</c><00:10:29.440><c> of</c><00:10:29.470><c> footprint</c><00:10:29.980><c> on</c><00:10:30.130><c> the</c><00:10:30.250><c> heap</c><00:10:30.750><c> depending</c>

00:10:31.740 --> 00:10:31.750 align:start position:0%
a lot of footprint on the heap depending
 

00:10:31.750 --> 00:10:33.120 align:start position:0%
a lot of footprint on the heap depending
on<00:10:31.810><c> your</c><00:10:31.899><c> application</c><00:10:32.019><c> of</c><00:10:32.470><c> course</c><00:10:32.740><c> if</c><00:10:33.010><c> you</c>

00:10:33.120 --> 00:10:33.130 align:start position:0%
on your application of course if you
 

00:10:33.130 --> 00:10:35.400 align:start position:0%
on your application of course if you
have<00:10:33.370><c> a</c><00:10:33.399><c> lot</c><00:10:33.699><c> of</c><00:10:33.880><c> maybe</c><00:10:34.540><c> a</c><00:10:34.660><c> lot</c><00:10:34.779><c> of</c><00:10:34.930><c> SQL</c>

00:10:35.400 --> 00:10:35.410 align:start position:0%
have a lot of maybe a lot of SQL
 

00:10:35.410 --> 00:10:37.019 align:start position:0%
have a lot of maybe a lot of SQL
statements<00:10:35.949><c> that</c><00:10:36.040><c> are</c><00:10:36.160><c> repeated</c><00:10:36.610><c> or</c><00:10:36.699><c> a</c><00:10:36.730><c> very</c>

00:10:37.019 --> 00:10:37.029 align:start position:0%
statements that are repeated or a very
 

00:10:37.029 --> 00:10:40.500 align:start position:0%
statements that are repeated or a very
that<00:10:37.329><c> contains</c><00:10:37.690><c> the</c><00:10:37.839><c> same</c><00:10:38.079><c> values</c><00:10:39.300><c> this</c><00:10:40.300><c> can</c>

00:10:40.500 --> 00:10:40.510 align:start position:0%
that contains the same values this can
 

00:10:40.510 --> 00:10:42.990 align:start position:0%
that contains the same values this can
be<00:10:40.660><c> a</c><00:10:40.690><c> big</c><00:10:41.050><c> memory</c><00:10:41.440><c> saver</c><00:10:41.800><c> the</c><00:10:42.490><c> trade</c><00:10:42.730><c> of</c><00:10:42.760><c> this</c>

00:10:42.990 --> 00:10:43.000 align:start position:0%
be a big memory saver the trade of this
 

00:10:43.000 --> 00:10:45.389 align:start position:0%
be a big memory saver the trade of this
that<00:10:43.180><c> it</c><00:10:43.269><c> will</c><00:10:43.360><c> use</c><00:10:43.570><c> slightly</c><00:10:44.199><c> more</c><00:10:44.350><c> CPU</c><00:10:44.800><c> due</c>

00:10:45.389 --> 00:10:45.399 align:start position:0%
that it will use slightly more CPU due
 

00:10:45.399 --> 00:10:46.980 align:start position:0%
that it will use slightly more CPU due
to<00:10:45.550><c> the</c><00:10:45.610><c> concurrent</c><00:10:46.089><c> work</c><00:10:46.240><c> going</c><00:10:46.600><c> on</c><00:10:46.720><c> at</c><00:10:46.899><c> the</c>

00:10:46.980 --> 00:10:46.990 align:start position:0%
to the concurrent work going on at the
 

00:10:46.990 --> 00:10:49.110 align:start position:0%
to the concurrent work going on at the
same<00:10:47.140><c> time</c><00:10:47.199><c> and</c><00:10:47.800><c> it</c><00:10:48.310><c> might</c><00:10:48.550><c> also</c><00:10:48.820><c> cost</c>

00:10:49.110 --> 00:10:49.120 align:start position:0%
same time and it might also cost
 

00:10:49.120 --> 00:10:50.939 align:start position:0%
same time and it might also cost
slightly<00:10:49.510><c> just</c><00:10:49.899><c> a</c><00:10:50.110><c> bit</c><00:10:50.260><c> longer</c><00:10:50.500><c> John</c>

00:10:50.939 --> 00:10:50.949 align:start position:0%
slightly just a bit longer John
 

00:10:50.949 --> 00:10:53.340 align:start position:0%
slightly just a bit longer John
collections<00:10:51.459><c> so</c><00:10:52.120><c> if</c><00:10:52.269><c> it</c><00:10:52.390><c> works</c><00:10:52.600><c> it</c><00:10:52.750><c> worth</c><00:10:53.140><c> it</c>

00:10:53.340 --> 00:10:53.350 align:start position:0%
collections so if it works it worth it
 

00:10:53.350 --> 00:10:55.110 align:start position:0%
collections so if it works it worth it
or<00:10:53.500><c> not</c><00:10:53.649><c> that</c><00:10:53.890><c> depends</c><00:10:54.220><c> on</c><00:10:54.399><c> your</c><00:10:54.550><c> application</c>

00:10:55.110 --> 00:10:55.120 align:start position:0%
or not that depends on your application
 

00:10:55.120 --> 00:10:57.510 align:start position:0%
or not that depends on your application
how<00:10:55.720><c> much</c><00:10:55.959><c> memory</c><00:10:56.350><c> is</c><00:10:56.500><c> save</c><00:10:56.709><c> and</c><00:10:56.980><c> your</c><00:10:57.130><c> CPU</c>

00:10:57.510 --> 00:10:57.520 align:start position:0%
how much memory is save and your CPU
 

00:10:57.520 --> 00:11:00.180 align:start position:0%
how much memory is save and your CPU
requirements<00:10:57.910><c> you</c><00:10:58.750><c> can</c><00:10:58.810><c> try</c><00:10:59.230><c> this</c><00:10:59.290><c> out</c><00:10:59.560><c> with</c>

00:11:00.180 --> 00:11:00.190 align:start position:0%
requirements you can try this out with
 

00:11:00.190 --> 00:11:02.880 align:start position:0%
requirements you can try this out with
use<00:11:00.400><c> students</c><00:11:00.910><c> application</c><00:11:01.390><c> in</c><00:11:01.690><c> Yeti</c><00:11:02.020><c> k8u</c><00:11:02.500><c> 20</c>

00:11:02.880 --> 00:11:02.890 align:start position:0%
use students application in Yeti k8u 20
 

00:11:02.890 --> 00:11:07.710 align:start position:0%
use students application in Yeti k8u 20
and<00:11:03.040><c> later</c><00:11:05.550><c> the</c><00:11:06.550><c> next</c><00:11:06.850><c> improvement</c><00:11:07.630><c> we're</c>

00:11:07.710 --> 00:11:07.720 align:start position:0%
and later the next improvement we're
 

00:11:07.720 --> 00:11:09.480 align:start position:0%
and later the next improvement we're
gonna<00:11:07.870><c> look</c><00:11:07.960><c> at</c><00:11:08.170><c> this</c><00:11:08.290><c> class</c><00:11:08.740><c> unloading</c><00:11:09.310><c> with</c>

00:11:09.480 --> 00:11:09.490 align:start position:0%
gonna look at this class unloading with
 

00:11:09.490 --> 00:11:12.180 align:start position:0%
gonna look at this class unloading with
concurrent<00:11:10.060><c> mark</c><00:11:10.330><c> and</c><00:11:10.630><c> this</c><00:11:11.320><c> is</c><00:11:11.500><c> a</c><00:11:11.530><c> tricky</c>

00:11:12.180 --> 00:11:12.190 align:start position:0%
concurrent mark and this is a tricky
 

00:11:12.190 --> 00:11:16.950 align:start position:0%
concurrent mark and this is a tricky
subject<00:11:13.440><c> so</c><00:11:14.490><c> objects</c><00:11:15.490><c> on</c><00:11:15.700><c> the</c><00:11:15.850><c> heap</c><00:11:16.030><c> have</c><00:11:16.930><c> a</c>

00:11:16.950 --> 00:11:16.960 align:start position:0%
subject so objects on the heap have a
 

00:11:16.960 --> 00:11:18.930 align:start position:0%
subject so objects on the heap have a
corresponding<00:11:17.380><c> class</c><00:11:17.890><c> and</c><00:11:18.250><c> those</c><00:11:18.370><c> classes</c>

00:11:18.930 --> 00:11:18.940 align:start position:0%
corresponding class and those classes
 

00:11:18.940 --> 00:11:21.150 align:start position:0%
corresponding class and those classes
have<00:11:19.150><c> in</c><00:11:19.300><c> turn</c><00:11:19.540><c> being</c><00:11:20.230><c> loaded</c><00:11:20.470><c> by</c><00:11:20.800><c> a</c><00:11:20.830><c> class</c>

00:11:21.150 --> 00:11:21.160 align:start position:0%
have in turn being loaded by a class
 

00:11:21.160 --> 00:11:24.000 align:start position:0%
have in turn being loaded by a class
loader<00:11:21.720><c> when</c><00:11:22.720><c> the</c><00:11:22.900><c> objects</c><00:11:23.320><c> are</c><00:11:23.530><c> when</c><00:11:23.830><c> all</c>

00:11:24.000 --> 00:11:24.010 align:start position:0%
loader when the objects are when all
 

00:11:24.010 --> 00:11:26.460 align:start position:0%
loader when the objects are when all
instances<00:11:24.670><c> of</c><00:11:24.910><c> a</c><00:11:25.240><c> class</c><00:11:25.270><c> on</c><00:11:25.780><c> the</c><00:11:26.110><c> heap</c><00:11:26.260><c> are</c>

00:11:26.460 --> 00:11:26.470 align:start position:0%
instances of a class on the heap are
 

00:11:26.470 --> 00:11:29.190 align:start position:0%
instances of a class on the heap are
dead<00:11:26.710><c> that</c><00:11:27.580><c> means</c><00:11:27.850><c> that</c><00:11:28.030><c> the</c><00:11:28.090><c> class</c><00:11:28.360><c> itself</c><00:11:28.870><c> is</c>

00:11:29.190 --> 00:11:29.200 align:start position:0%
dead that means that the class itself is
 

00:11:29.200 --> 00:11:33.360 align:start position:0%
dead that means that the class itself is
dead<00:11:29.530><c> and</c><00:11:29.910><c> of</c><00:11:30.910><c> if</c><00:11:31.210><c> all</c><00:11:31.570><c> closest</c><00:11:32.260><c> loaded</c><00:11:33.160><c> by</c><00:11:33.340><c> the</c>

00:11:33.360 --> 00:11:33.370 align:start position:0%
dead and of if all closest loaded by the
 

00:11:33.370 --> 00:11:36.240 align:start position:0%
dead and of if all closest loaded by the
same<00:11:33.700><c> class</c><00:11:33.970><c> loader</c><00:11:34.270><c> are</c><00:11:34.600><c> dead</c><00:11:35.530><c> that</c><00:11:36.010><c> means</c>

00:11:36.240 --> 00:11:36.250 align:start position:0%
same class loader are dead that means
 

00:11:36.250 --> 00:11:38.220 align:start position:0%
same class loader are dead that means
that<00:11:36.430><c> we</c><00:11:36.580><c> can</c><00:11:36.790><c> unload</c><00:11:37.240><c> these</c><00:11:37.510><c> classes</c><00:11:37.990><c> and</c>

00:11:38.220 --> 00:11:38.230 align:start position:0%
that we can unload these classes and
 

00:11:38.230 --> 00:11:40.290 align:start position:0%
that we can unload these classes and
garbage<00:11:39.100><c> collect</c><00:11:39.370><c> the</c><00:11:39.520><c> corresponding</c><00:11:40.120><c> class</c>

00:11:40.290 --> 00:11:40.300 align:start position:0%
garbage collect the corresponding class
 

00:11:40.300 --> 00:11:43.680 align:start position:0%
garbage collect the corresponding class
loader<00:11:40.770><c> now</c><00:11:41.770><c> the</c><00:11:41.830><c> question</c><00:11:42.430><c> is</c><00:11:42.580><c> how</c><00:11:43.390><c> do</c><00:11:43.450><c> we</c>

00:11:43.680 --> 00:11:43.690 align:start position:0%
loader now the question is how do we
 

00:11:43.690 --> 00:11:47.220 align:start position:0%
loader now the question is how do we
find<00:11:44.020><c> out</c><00:11:44.170><c> if</c><00:11:44.200><c> a</c><00:11:44.560><c> class</c><00:11:44.850><c> is</c><00:11:45.850><c> dead</c><00:11:46.450><c> or</c><00:11:46.690><c> not</c>

00:11:47.220 --> 00:11:47.230 align:start position:0%
find out if a class is dead or not
 

00:11:47.230 --> 00:11:50.520 align:start position:0%
find out if a class is dead or not
well<00:11:47.850><c> j1</c><00:11:48.850><c> will</c><00:11:49.060><c> traverse</c><00:11:49.480><c> the</c><00:11:49.990><c> entire</c><00:11:50.260><c> heap</c>

00:11:50.520 --> 00:11:50.530 align:start position:0%
well j1 will traverse the entire heap
 

00:11:50.530 --> 00:11:53.190 align:start position:0%
well j1 will traverse the entire heap
and<00:11:50.830><c> as</c><00:11:51.490><c> it</c><00:11:51.640><c> does</c><00:11:51.790><c> so</c><00:11:51.820><c> finding</c><00:11:52.600><c> live</c><00:11:52.780><c> objects</c>

00:11:53.190 --> 00:11:53.200 align:start position:0%
and as it does so finding live objects
 

00:11:53.200 --> 00:11:56.100 align:start position:0%
and as it does so finding live objects
it<00:11:53.980><c> will</c><00:11:54.220><c> encounter</c><00:11:54.520><c> live</c><00:11:54.910><c> objects</c><00:11:55.300><c> and</c><00:11:55.540><c> can</c>

00:11:56.100 --> 00:11:56.110 align:start position:0%
it will encounter live objects and can
 

00:11:56.110 --> 00:11:57.810 align:start position:0%
it will encounter live objects and can
therefore<00:11:56.350><c> from</c><00:11:56.770><c> those</c><00:11:56.950><c> novel</c><00:11:57.280><c> objects</c><00:11:57.550><c> find</c>

00:11:57.810 --> 00:11:57.820 align:start position:0%
therefore from those novel objects find
 

00:11:57.820 --> 00:12:00.000 align:start position:0%
therefore from those novel objects find
out<00:11:58.030><c> which</c><00:11:58.390><c> class</c><00:11:58.690><c> they</c><00:11:58.900><c> belong</c><00:11:59.110><c> to</c><00:11:59.320><c> or</c><00:11:59.800><c> in</c>

00:12:00.000 --> 00:12:00.010 align:start position:0%
out which class they belong to or in
 

00:12:00.010 --> 00:12:02.070 align:start position:0%
out which class they belong to or in
Orion<00:12:00.490><c> sources</c><00:12:00.820><c> of</c><00:12:00.970><c> and</c><00:12:01.300><c> mark</c><00:12:01.930><c> the</c>

00:12:02.070 --> 00:12:02.080 align:start position:0%
Orion sources of and mark the
 

00:12:02.080 --> 00:12:04.440 align:start position:0%
Orion sources of and mark the
corresponding<00:12:02.650><c> class</c><00:12:02.800><c> as</c><00:12:03.070><c> live</c><00:12:03.340><c> since</c><00:12:04.330><c> a</c>

00:12:04.440 --> 00:12:04.450 align:start position:0%
corresponding class as live since a
 

00:12:04.450 --> 00:12:06.600 align:start position:0%
corresponding class as live since a
clause<00:12:04.660><c> can</c><00:12:04.930><c> only</c><00:12:05.110><c> be</c><00:12:05.350><c> unloaded</c><00:12:05.890><c> if</c><00:12:06.190><c> all</c>

00:12:06.600 --> 00:12:06.610 align:start position:0%
clause can only be unloaded if all
 

00:12:06.610 --> 00:12:09.540 align:start position:0%
clause can only be unloaded if all
classes<00:12:07.300><c> loaded</c><00:12:08.290><c> by</c><00:12:08.410><c> that</c><00:12:08.650><c> Clause</c><00:12:09.010><c> cross</c>

00:12:09.540 --> 00:12:09.550 align:start position:0%
classes loaded by that Clause cross
 

00:12:09.550 --> 00:12:12.510 align:start position:0%
classes loaded by that Clause cross
loader<00:12:09.820><c> are</c><00:12:10.660><c> dead</c><00:12:11.080><c> we</c><00:12:11.740><c> will</c><00:12:11.890><c> mark</c><00:12:12.160><c> the</c><00:12:12.280><c> closed</c>

00:12:12.510 --> 00:12:12.520 align:start position:0%
loader are dead we will mark the closed
 

00:12:12.520 --> 00:12:15.210 align:start position:0%
loader are dead we will mark the closed
address<00:12:12.880><c> live</c><00:12:13.060><c> and</c><00:12:13.660><c> all</c><00:12:13.960><c> classes</c><00:12:14.500><c> loaded</c><00:12:15.100><c> by</c>

00:12:15.210 --> 00:12:15.220 align:start position:0%
address live and all classes loaded by
 

00:12:15.220 --> 00:12:18.450 align:start position:0%
address live and all classes loaded by
the<00:12:15.280><c> class</c><00:12:15.580><c> loader</c><00:12:15.790><c> as</c><00:12:16.090><c> live</c><00:12:16.480><c> as</c><00:12:17.380><c> d1</c><00:12:17.770><c> traverses</c>

00:12:18.450 --> 00:12:18.460 align:start position:0%
the class loader as live as d1 traverses
 

00:12:18.460 --> 00:12:20.160 align:start position:0%
the class loader as live as d1 traverses
the<00:12:18.550><c> heap</c><00:12:18.700><c> more</c><00:12:18.940><c> and</c><00:12:19.300><c> finds</c><00:12:19.630><c> more</c><00:12:19.810><c> and</c><00:12:20.020><c> more</c>

00:12:20.160 --> 00:12:20.170 align:start position:0%
the heap more and finds more and more
 

00:12:20.170 --> 00:12:22.260 align:start position:0%
the heap more and finds more and more
live<00:12:20.350><c> objects</c><00:12:20.800><c> more</c><00:12:21.370><c> and</c><00:12:21.550><c> more</c><00:12:21.700><c> classes</c><00:12:21.910><c> will</c>

00:12:22.260 --> 00:12:22.270 align:start position:0%
live objects more and more classes will
 

00:12:22.270 --> 00:12:23.880 align:start position:0%
live objects more and more classes will
be<00:12:22.360><c> marked</c><00:12:22.600><c> as</c><00:12:22.750><c> live</c><00:12:22.960><c> and</c><00:12:23.260><c> the</c><00:12:23.380><c> corresponding</c>

00:12:23.880 --> 00:12:23.890 align:start position:0%
be marked as live and the corresponding
 

00:12:23.890 --> 00:12:26.070 align:start position:0%
be marked as live and the corresponding
class<00:12:24.040><c> loaders</c><00:12:24.480><c> after</c><00:12:25.480><c> the</c><00:12:25.600><c> heap</c><00:12:25.750><c> has</c><00:12:25.900><c> been</c>

00:12:26.070 --> 00:12:26.080 align:start position:0%
class loaders after the heap has been
 

00:12:26.080 --> 00:12:27.510 align:start position:0%
class loaders after the heap has been
hit<00:12:26.200><c> rate</c><00:12:26.380><c> a</c><00:12:26.470><c> few</c><00:12:26.500><c> when</c><00:12:26.830><c> we</c><00:12:26.950><c> found</c><00:12:27.190><c> all</c><00:12:27.370><c> live</c>

00:12:27.510 --> 00:12:27.520 align:start position:0%
hit rate a few when we found all live
 

00:12:27.520 --> 00:12:30.480 align:start position:0%
hit rate a few when we found all live
objects<00:12:27.880><c> we</c><00:12:28.600><c> can</c><00:12:28.840><c> in</c><00:12:29.530><c> turn</c><00:12:29.800><c> iterate</c><00:12:30.310><c> through</c>

00:12:30.480 --> 00:12:30.490 align:start position:0%
objects we can in turn iterate through
 

00:12:30.490 --> 00:12:33.000 align:start position:0%
objects we can in turn iterate through
the<00:12:30.580><c> class</c><00:12:31.000><c> loader</c><00:12:31.240><c> graph</c><00:12:31.600><c> and</c><00:12:31.900><c> find</c><00:12:32.830><c> out</c>

00:12:33.000 --> 00:12:33.010 align:start position:0%
the class loader graph and find out
 

00:12:33.010 --> 00:12:34.710 align:start position:0%
the class loader graph and find out
there's<00:12:33.610><c> an</c><00:12:33.730><c> openness</c><00:12:34.090><c> a</c><00:12:34.120><c> class</c><00:12:34.390><c> though</c><00:12:34.540><c> there</c>

00:12:34.710 --> 00:12:34.720 align:start position:0%
there's an openness a class though there
 

00:12:34.720 --> 00:12:36.540 align:start position:0%
there's an openness a class though there
isn't<00:12:35.020><c> work</c><00:12:35.380><c> that's</c><00:12:35.590><c> live</c><00:12:35.740><c> that</c><00:12:36.010><c> means</c><00:12:36.220><c> that</c>

00:12:36.540 --> 00:12:36.550 align:start position:0%
isn't work that's live that means that
 

00:12:36.550 --> 00:12:37.560 align:start position:0%
isn't work that's live that means that
closed<00:12:36.820><c> or</c><00:12:36.970><c> is</c><00:12:37.120><c> dead</c>

00:12:37.560 --> 00:12:37.570 align:start position:0%
closed or is dead
 

00:12:37.570 --> 00:12:39.660 align:start position:0%
closed or is dead
and<00:12:37.930><c> we</c><00:12:38.020><c> can</c><00:12:38.140><c> unload</c><00:12:38.590><c> all</c><00:12:38.890><c> the</c><00:12:39.070><c> classes</c><00:12:39.490><c> that</c>

00:12:39.660 --> 00:12:39.670 align:start position:0%
and we can unload all the classes that
 

00:12:39.670 --> 00:12:43.590 align:start position:0%
and we can unload all the classes that
class<00:12:40.090><c> loader</c><00:12:40.330><c> has</c><00:12:40.540><c> loaded</c><00:12:41.610><c> so</c><00:12:42.610><c> in</c><00:12:42.910><c> one</c><00:12:43.270><c> tricky</c>

00:12:43.590 --> 00:12:43.600 align:start position:0%
class loader has loaded so in one tricky
 

00:12:43.600 --> 00:12:45.840 align:start position:0%
class loader has loaded so in one tricky
sentence<00:12:44.130><c> after</c><00:12:45.130><c> all</c><00:12:45.280><c> objects</c><00:12:45.700><c> have</c><00:12:45.820><c> been</c>

00:12:45.840 --> 00:12:45.850 align:start position:0%
sentence after all objects have been
 

00:12:45.850 --> 00:12:48.900 align:start position:0%
sentence after all objects have been
visited<00:12:46.330><c> then</c><00:12:46.750><c> unload</c><00:12:47.260><c> all</c><00:12:47.500><c> classes</c><00:12:48.100><c> loaded</c>

00:12:48.900 --> 00:12:48.910 align:start position:0%
visited then unload all classes loaded
 

00:12:48.910 --> 00:12:50.820 align:start position:0%
visited then unload all classes loaded
by<00:12:49.030><c> class</c><00:12:49.240><c> loaders</c><00:12:49.660><c> that</c><00:12:49.839><c> aren't</c><00:12:50.260><c> live</c><00:12:50.440><c> and</c>

00:12:50.820 --> 00:12:50.830 align:start position:0%
by class loaders that aren't live and
 

00:12:50.830 --> 00:12:53.340 align:start position:0%
by class loaders that aren't live and
there<00:12:51.760><c> are</c><00:12:51.850><c> two</c><00:12:52.030><c> algorithms</c><00:12:52.600><c> in</c><00:12:52.750><c> g1</c><00:12:52.930><c> that</c>

00:12:53.340 --> 00:12:53.350 align:start position:0%
there are two algorithms in g1 that
 

00:12:53.350 --> 00:12:55.590 align:start position:0%
there are two algorithms in g1 that
visits<00:12:53.680><c> all</c><00:12:53.860><c> live</c><00:12:54.550><c> objects</c><00:12:54.970><c> on</c><00:12:55.089><c> the</c><00:12:55.180><c> heap</c>

00:12:55.590 --> 00:12:55.600 align:start position:0%
visits all live objects on the heap
 

00:12:55.600 --> 00:12:58.380 align:start position:0%
visits all live objects on the heap
you<00:12:56.200><c> have</c><00:12:56.350><c> the</c><00:12:56.500><c> concurrent</c><00:12:56.980><c> marking</c><00:12:57.370><c> which</c><00:12:58.210><c> is</c>

00:12:58.380 --> 00:12:58.390 align:start position:0%
you have the concurrent marking which is
 

00:12:58.390 --> 00:13:02.760 align:start position:0%
you have the concurrent marking which is
it's<00:12:58.990><c> really</c><00:12:59.800><c> tricky</c><00:13:00.339><c> to</c><00:13:01.230><c> to</c><00:13:02.230><c> find</c><00:13:02.440><c> out</c><00:13:02.589><c> the</c>

00:13:02.760 --> 00:13:02.770 align:start position:0%
it's really tricky to to find out the
 

00:13:02.770 --> 00:13:04.530 align:start position:0%
it's really tricky to to find out the
live<00:13:02.920><c> losses</c><00:13:03.339><c> during</c><00:13:03.640><c> current</c><00:13:04.060><c> marking</c><00:13:04.360><c> but</c>

00:13:04.530 --> 00:13:04.540 align:start position:0%
live losses during current marking but
 

00:13:04.540 --> 00:13:06.900 align:start position:0%
live losses during current marking but
it<00:13:04.630><c> performs</c><00:13:05.050><c> pretty</c><00:13:05.200><c> well</c><00:13:05.490><c> and</c><00:13:06.490><c> then</c><00:13:06.700><c> we</c><00:13:06.790><c> also</c>

00:13:06.900 --> 00:13:06.910 align:start position:0%
it performs pretty well and then we also
 

00:13:06.910 --> 00:13:08.760 align:start position:0%
it performs pretty well and then we also
the<00:13:07.180><c> fall</c><00:13:07.420><c> back</c><00:13:07.660><c> full</c><00:13:08.050><c> garbage</c><00:13:08.380><c> collection</c>

00:13:08.760 --> 00:13:08.770 align:start position:0%
the fall back full garbage collection
 

00:13:08.770 --> 00:13:11.040 align:start position:0%
the fall back full garbage collection
here<00:13:09.490><c> is</c><00:13:09.670><c> a</c><00:13:09.700><c> lot</c><00:13:09.910><c> easier</c><00:13:10.270><c> to</c><00:13:10.450><c> find</c><00:13:10.630><c> out</c><00:13:10.810><c> which</c>

00:13:11.040 --> 00:13:11.050 align:start position:0%
here is a lot easier to find out which
 

00:13:11.050 --> 00:13:13.130 align:start position:0%
here is a lot easier to find out which
which<00:13:11.530><c> classes</c><00:13:12.010><c> are</c><00:13:12.130><c> live</c>

00:13:13.130 --> 00:13:13.140 align:start position:0%
which classes are live
 

00:13:13.140 --> 00:13:15.620 align:start position:0%
which classes are live
it's<00:13:13.440><c> slow</c><00:13:13.829><c> and</c><00:13:14.220><c> will</c><00:13:14.790><c> cause</c><00:13:15.000><c> longer</c><00:13:15.390><c> pauses</c>

00:13:15.620 --> 00:13:15.630 align:start position:0%
it's slow and will cause longer pauses
 

00:13:15.630 --> 00:13:19.670 align:start position:0%
it's slow and will cause longer pauses
so<00:13:16.079><c> in</c><00:13:16.260><c> JDK</c><00:13:16.769><c> a</c><00:13:17.010><c> 240</c><00:13:18.000><c> we</c><00:13:18.660><c> finally</c><00:13:19.140><c> shipped</c><00:13:19.380><c> close</c>

00:13:19.670 --> 00:13:19.680 align:start position:0%
so in JDK a 240 we finally shipped close
 

00:13:19.680 --> 00:13:23.210 align:start position:0%
so in JDK a 240 we finally shipped close
unloading<00:13:20.160><c> after</c><00:13:20.310><c> concurrent</c><00:13:20.850><c> marking</c><00:13:22.220><c> this</c>

00:13:23.210 --> 00:13:23.220 align:start position:0%
unloading after concurrent marking this
 

00:13:23.220 --> 00:13:24.860 align:start position:0%
unloading after concurrent marking this
is<00:13:23.399><c> controlled</c><00:13:23.850><c> by</c><00:13:23.940><c> the</c><00:13:24.060><c> flag</c><00:13:24.329><c> cloth</c>

00:13:24.860 --> 00:13:24.870 align:start position:0%
is controlled by the flag cloth
 

00:13:24.870 --> 00:13:27.590 align:start position:0%
is controlled by the flag cloth
unloading<00:13:25.470><c> with</c><00:13:25.680><c> concurrent</c><00:13:26.130><c> mark</c><00:13:26.310><c> and</c><00:13:26.670><c> it's</c>

00:13:27.590 --> 00:13:27.600 align:start position:0%
unloading with concurrent mark and it's
 

00:13:27.600 --> 00:13:31.460 align:start position:0%
unloading with concurrent mark and it's
enabled<00:13:28.140><c> by</c><00:13:28.380><c> default</c><00:13:28.589><c> since</c><00:13:29.010><c> 1840</c><00:13:29.700><c> and</c><00:13:29.910><c> it</c><00:13:30.660><c> can</c>

00:13:31.460 --> 00:13:31.470 align:start position:0%
enabled by default since 1840 and it can
 

00:13:31.470 --> 00:13:34.430 align:start position:0%
enabled by default since 1840 and it can
reduce<00:13:32.040><c> the</c><00:13:32.430><c> need</c><00:13:32.579><c> for</c><00:13:32.640><c> full</c><00:13:33.180><c> full</c><00:13:33.810><c> back</c><00:13:34.019><c> full</c>

00:13:34.430 --> 00:13:34.440 align:start position:0%
reduce the need for full full back full
 

00:13:34.440 --> 00:13:36.470 align:start position:0%
reduce the need for full full back full
DC's<00:13:34.860><c> quite</c><00:13:35.279><c> a</c><00:13:35.310><c> lot</c><00:13:35.519><c> in</c><00:13:35.730><c> your</c><00:13:35.820><c> application</c><00:13:36.300><c> if</c>

00:13:36.470 --> 00:13:36.480 align:start position:0%
DC's quite a lot in your application if
 

00:13:36.480 --> 00:13:38.990 align:start position:0%
DC's quite a lot in your application if
you<00:13:36.510><c> load</c><00:13:36.870><c> and</c><00:13:37.140><c> unload</c><00:13:37.230><c> a</c><00:13:37.980><c> lot</c><00:13:38.220><c> of</c><00:13:38.339><c> classes</c><00:13:38.730><c> and</c>

00:13:38.990 --> 00:13:39.000 align:start position:0%
you load and unload a lot of classes and
 

00:13:39.000 --> 00:13:43.759 align:start position:0%
you load and unload a lot of classes and
again<00:13:39.360><c> available</c><00:13:39.630><c> in</c><00:13:39.870><c> a</c><00:13:39.990><c> t14</c><00:13:40.380><c> later</c><00:13:42.500><c> the</c><00:13:43.500><c> next</c>

00:13:43.759 --> 00:13:43.769 align:start position:0%
again available in a t14 later the next
 

00:13:43.769 --> 00:13:45.889 align:start position:0%
again available in a t14 later the next
little<00:13:43.890><c> trick</c><00:13:44.459><c> or</c><00:13:44.970><c> improvement</c><00:13:45.480><c> or</c><00:13:45.600><c> feature</c>

00:13:45.889 --> 00:13:45.899 align:start position:0%
little trick or improvement or feature
 

00:13:45.899 --> 00:13:49.880 align:start position:0%
little trick or improvement or feature
be<00:13:46.019><c> done</c><00:13:46.170><c> is</c><00:13:48.079><c> well</c><00:13:49.079><c> be</c><00:13:49.200><c> done</c><00:13:49.290><c> money</c><00:13:49.529><c> but</c><00:13:49.740><c> one</c>

00:13:49.880 --> 00:13:49.890 align:start position:0%
be done is well be done money but one
 

00:13:49.890 --> 00:13:51.800 align:start position:0%
be done is well be done money but one
significant<00:13:50.430><c> is</c><00:13:50.579><c> equally</c><00:13:51.060><c> reclamation</c><00:13:51.690><c> or</c>

00:13:51.800 --> 00:13:51.810 align:start position:0%
significant is equally reclamation or
 

00:13:51.810 --> 00:13:53.840 align:start position:0%
significant is equally reclamation or
igloo<00:13:52.110><c> reclaim</c><00:13:52.410><c> of</c><00:13:52.680><c> humongous</c><00:13:53.070><c> regions</c><00:13:53.700><c> and</c>

00:13:53.840 --> 00:13:53.850 align:start position:0%
igloo reclaim of humongous regions and
 

00:13:53.850 --> 00:13:57.560 align:start position:0%
igloo reclaim of humongous regions and
this<00:13:53.940><c> was</c><00:13:54.149><c> shipped</c><00:13:54.480><c> in</c><00:13:54.630><c> 1860</c><00:13:56.120><c> so</c><00:13:57.120><c> let's</c><00:13:57.360><c> have</c><00:13:57.510><c> a</c>

00:13:57.560 --> 00:13:57.570 align:start position:0%
this was shipped in 1860 so let's have a
 

00:13:57.570 --> 00:13:59.990 align:start position:0%
this was shipped in 1860 so let's have a
look<00:13:57.779><c> at</c><00:13:57.930><c> that</c><00:13:58.050><c> one</c><00:13:58.320><c> when</c><00:13:58.680><c> objects</c><00:13:59.220><c> are</c><00:13:59.339><c> larger</c>

00:13:59.990 --> 00:14:00.000 align:start position:0%
look at that one when objects are larger
 

00:14:00.000 --> 00:14:02.389 align:start position:0%
look at that one when objects are larger
than<00:14:00.720><c> half</c><00:14:01.050><c> a</c><00:14:01.230><c> region</c><00:14:01.589><c> they</c><00:14:02.040><c> are</c><00:14:02.160><c> called</c>

00:14:02.389 --> 00:14:02.399 align:start position:0%
than half a region they are called
 

00:14:02.399 --> 00:14:04.819 align:start position:0%
than half a region they are called
humongous<00:14:02.940><c> in</c><00:14:03.089><c> g1</c><00:14:03.420><c> and</c><00:14:03.660><c> the</c><00:14:03.690><c> region's</c><00:14:04.620><c> they</c>

00:14:04.819 --> 00:14:04.829 align:start position:0%
humongous in g1 and the region's they
 

00:14:04.829 --> 00:14:06.860 align:start position:0%
humongous in g1 and the region's they
are<00:14:05.010><c> allocated</c><00:14:05.490><c> in</c><00:14:05.910><c> or</c><00:14:06.120><c> called</c><00:14:06.360><c> humongous</c>

00:14:06.860 --> 00:14:06.870 align:start position:0%
are allocated in or called humongous
 

00:14:06.870 --> 00:14:11.360 align:start position:0%
are allocated in or called humongous
regions<00:14:08.209><c> g1</c><00:14:09.209><c> doesn't</c><00:14:09.570><c> copy</c><00:14:10.370><c> humongous</c>

00:14:11.360 --> 00:14:11.370 align:start position:0%
regions g1 doesn't copy humongous
 

00:14:11.370 --> 00:14:12.829 align:start position:0%
regions g1 doesn't copy humongous
objects<00:14:11.670><c> around</c><00:14:11.940><c> on</c><00:14:12.149><c> heap</c><00:14:12.329><c> because</c><00:14:12.480><c> it's</c><00:14:12.720><c> too</c>

00:14:12.829 --> 00:14:12.839 align:start position:0%
objects around on heap because it's too
 

00:14:12.839 --> 00:14:15.019 align:start position:0%
objects around on heap because it's too
expensive<00:14:13.140><c> they</c><00:14:14.010><c> are</c><00:14:14.040><c> large</c><00:14:14.430><c> and</c><00:14:14.760><c> half</c><00:14:14.880><c> a</c>

00:14:15.019 --> 00:14:15.029 align:start position:0%
expensive they are large and half a
 

00:14:15.029 --> 00:14:16.819 align:start position:0%
expensive they are large and half a
region<00:14:15.329><c> so</c><00:14:15.480><c> they</c><00:14:15.630><c> take</c><00:14:15.930><c> up</c><00:14:16.140><c> a</c><00:14:16.260><c> lot</c><00:14:16.290><c> of</c><00:14:16.410><c> memory</c>

00:14:16.819 --> 00:14:16.829 align:start position:0%
region so they take up a lot of memory
 

00:14:16.829 --> 00:14:18.920 align:start position:0%
region so they take up a lot of memory
so<00:14:17.459><c> thereby</c><00:14:17.730><c> copying</c><00:14:18.300><c> them</c><00:14:18.449><c> takes</c><00:14:18.720><c> a</c><00:14:18.779><c> lot</c><00:14:18.899><c> of</c>

00:14:18.920 --> 00:14:18.930 align:start position:0%
so thereby copying them takes a lot of
 

00:14:18.930 --> 00:14:21.439 align:start position:0%
so thereby copying them takes a lot of
time<00:14:19.230><c> something</c><00:14:19.620><c> we</c><00:14:19.709><c> do</c><00:14:19.860><c> not</c><00:14:19.890><c> want</c><00:14:20.250><c> to</c><00:14:20.370><c> do</c><00:14:20.519><c> but</c>

00:14:21.439 --> 00:14:21.449 align:start position:0%
time something we do not want to do but
 

00:14:21.449 --> 00:14:23.930 align:start position:0%
time something we do not want to do but
on<00:14:21.630><c> the</c><00:14:21.750><c> other</c><00:14:21.839><c> hand</c><00:14:22.220><c> these</c><00:14:23.220><c> objects</c><00:14:23.610><c> use</c><00:14:23.910><c> a</c>

00:14:23.930 --> 00:14:23.940 align:start position:0%
on the other hand these objects use a
 

00:14:23.940 --> 00:14:26.180 align:start position:0%
on the other hand these objects use a
lot<00:14:24.149><c> of</c><00:14:24.180><c> memory</c><00:14:24.570><c> and</c><00:14:24.600><c> if</c><00:14:24.990><c> they</c><00:14:25.170><c> become</c><00:14:25.350><c> dead</c><00:14:25.740><c> we</c>

00:14:26.180 --> 00:14:26.190 align:start position:0%
lot of memory and if they become dead we
 

00:14:26.190 --> 00:14:27.769 align:start position:0%
lot of memory and if they become dead we
want<00:14:26.399><c> to</c><00:14:26.490><c> free</c><00:14:26.730><c> that</c><00:14:26.790><c> up</c><00:14:27.000><c> pretty</c><00:14:27.329><c> quickly</c><00:14:27.630><c> so</c>

00:14:27.769 --> 00:14:27.779 align:start position:0%
want to free that up pretty quickly so
 

00:14:27.779 --> 00:14:29.300 align:start position:0%
want to free that up pretty quickly so
we<00:14:27.959><c> can</c><00:14:27.990><c> reuse</c><00:14:28.260><c> it</c><00:14:28.560><c> for</c><00:14:28.589><c> other</c><00:14:28.829><c> objects</c><00:14:29.220><c> and</c>

00:14:29.300 --> 00:14:29.310 align:start position:0%
we can reuse it for other objects and
 

00:14:29.310 --> 00:14:32.120 align:start position:0%
we can reuse it for other objects and
allocations<00:14:30.050><c> so</c><00:14:31.050><c> what</c><00:14:31.410><c> we</c><00:14:31.560><c> do</c><00:14:31.680><c> is</c><00:14:31.890><c> that</c><00:14:31.920><c> we</c>

00:14:32.120 --> 00:14:32.130 align:start position:0%
allocations so what we do is that we
 

00:14:32.130 --> 00:14:34.750 align:start position:0%
allocations so what we do is that we
utilize<00:14:32.820><c> the</c><00:14:33.060><c> fact</c><00:14:33.300><c> that</c><00:14:33.449><c> g1</c><00:14:33.899><c> keeps</c><00:14:34.170><c> track</c><00:14:34.440><c> of</c>

00:14:34.750 --> 00:14:34.760 align:start position:0%
utilize the fact that g1 keeps track of
 

00:14:34.760 --> 00:14:37.490 align:start position:0%
utilize the fact that g1 keeps track of
references<00:14:35.760><c> between</c><00:14:35.970><c> old</c><00:14:36.480><c> regions</c><00:14:36.959><c> as</c><00:14:37.199><c> can</c><00:14:37.380><c> be</c>

00:14:37.490 --> 00:14:37.500 align:start position:0%
references between old regions as can be
 

00:14:37.500 --> 00:14:39.380 align:start position:0%
references between old regions as can be
seen<00:14:37.649><c> on</c><00:14:37.740><c> a</c><00:14:37.769><c> slide</c><00:14:38.010><c> here</c><00:14:38.220><c> we</c><00:14:38.790><c> have</c><00:14:38.910><c> a</c><00:14:38.940><c> couple</c><00:14:39.209><c> of</c>

00:14:39.380 --> 00:14:39.390 align:start position:0%
seen on a slide here we have a couple of
 

00:14:39.390 --> 00:14:41.509 align:start position:0%
seen on a slide here we have a couple of
old<00:14:39.570><c> radius</c><00:14:39.990><c> regions</c><00:14:40.709><c> and</c><00:14:40.920><c> one</c><00:14:41.130><c> humongous</c>

00:14:41.509 --> 00:14:41.519 align:start position:0%
old radius regions and one humongous
 

00:14:41.519 --> 00:14:44.630 align:start position:0%
old radius regions and one humongous
region<00:14:42.120><c> we</c><00:14:42.990><c> see</c><00:14:43.199><c> that</c><00:14:43.320><c> there</c><00:14:43.500><c> are</c><00:14:43.529><c> no</c><00:14:43.860><c> incoming</c>

00:14:44.630 --> 00:14:44.640 align:start position:0%
region we see that there are no incoming
 

00:14:44.640 --> 00:14:46.910 align:start position:0%
region we see that there are no incoming
references<00:14:45.209><c> to</c><00:14:45.540><c> that</c><00:14:45.690><c> one</c><00:14:45.990><c> humongous</c><00:14:46.380><c> object</c>

00:14:46.910 --> 00:14:46.920 align:start position:0%
references to that one humongous object
 

00:14:46.920 --> 00:14:49.939 align:start position:0%
references to that one humongous object
in<00:14:47.130><c> the</c><00:14:47.250><c> humongous</c><00:14:47.519><c> region</c><00:14:48.060><c> and</c><00:14:48.560><c> there</c><00:14:49.560><c> is</c><00:14:49.680><c> one</c>

00:14:49.939 --> 00:14:49.949 align:start position:0%
in the humongous region and there is one
 

00:14:49.949 --> 00:14:52.100 align:start position:0%
in the humongous region and there is one
outgoing<00:14:50.220><c> references</c><00:14:51.000><c> from</c><00:14:51.120><c> a</c><00:14:51.209><c> humongous</c>

00:14:52.100 --> 00:14:52.110 align:start position:0%
outgoing references from a humongous
 

00:14:52.110 --> 00:14:54.920 align:start position:0%
outgoing references from a humongous
object<00:14:52.850><c> but</c><00:14:53.850><c> since</c><00:14:54.060><c> there</c><00:14:54.209><c> are</c><00:14:54.300><c> no</c><00:14:54.420><c> incoming</c>

00:14:54.920 --> 00:14:54.930 align:start position:0%
object but since there are no incoming
 

00:14:54.930 --> 00:14:56.689 align:start position:0%
object but since there are no incoming
references<00:14:55.440><c> from</c><00:14:55.680><c> other</c><00:14:55.920><c> objects</c><00:14:56.370><c> in</c><00:14:56.490><c> old</c>

00:14:56.689 --> 00:14:56.699 align:start position:0%
references from other objects in old
 

00:14:56.699 --> 00:14:58.189 align:start position:0%
references from other objects in old
gradients<00:14:57.149><c> that</c><00:14:57.329><c> means</c><00:14:57.510><c> that</c><00:14:57.630><c> the</c><00:14:57.690><c> only</c><00:14:57.839><c> thing</c>

00:14:58.189 --> 00:14:58.199 align:start position:0%
gradients that means that the only thing
 

00:14:58.199 --> 00:14:59.780 align:start position:0%
gradients that means that the only thing
that<00:14:58.230><c> can</c><00:14:58.440><c> keep</c><00:14:58.680><c> this</c><00:14:58.890><c> humongous</c><00:14:59.519><c> object</c>

00:14:59.780 --> 00:14:59.790 align:start position:0%
that can keep this humongous object
 

00:14:59.790 --> 00:15:02.720 align:start position:0%
that can keep this humongous object
alive<00:15:00.149><c> is</c><00:15:00.839><c> an</c><00:15:01.170><c> object</c><00:15:01.500><c> in</c><00:15:01.589><c> a</c><00:15:01.680><c> John</c><00:15:01.890><c> region</c><00:15:02.310><c> that</c>

00:15:02.720 --> 00:15:02.730 align:start position:0%
alive is an object in a John region that
 

00:15:02.730 --> 00:15:04.699 align:start position:0%
alive is an object in a John region that
is<00:15:02.850><c> either</c><00:15:03.029><c> in</c><00:15:03.329><c> a</c><00:15:03.360><c> region</c><00:15:03.779><c> or</c><00:15:03.930><c> survival</c><00:15:04.410><c> region</c>

00:15:04.699 --> 00:15:04.709 align:start position:0%
is either in a region or survival region
 

00:15:04.709 --> 00:15:06.949 align:start position:0%
is either in a region or survival region
but<00:15:05.579><c> remember</c><00:15:06.420><c> when</c><00:15:06.570><c> we</c><00:15:06.690><c> do</c><00:15:06.810><c> a</c><00:15:06.839><c> giant</c>

00:15:06.949 --> 00:15:06.959 align:start position:0%
but remember when we do a giant
 

00:15:06.959 --> 00:15:08.930 align:start position:0%
but remember when we do a giant
collection<00:15:07.290><c> we</c><00:15:07.829><c> will</c><00:15:08.040><c> look</c><00:15:08.310><c> at</c><00:15:08.519><c> all</c><00:15:08.670><c> the</c><00:15:08.790><c> live</c>

00:15:08.930 --> 00:15:08.940 align:start position:0%
collection we will look at all the live
 

00:15:08.940 --> 00:15:11.900 align:start position:0%
collection we will look at all the live
objects<00:15:09.329><c> in</c><00:15:09.870><c> all</c><00:15:10.170><c> the</c><00:15:10.290><c> John</c><00:15:10.500><c> regions</c><00:15:10.949><c> so</c>

00:15:11.900 --> 00:15:11.910 align:start position:0%
objects in all the John regions so
 

00:15:11.910 --> 00:15:14.030 align:start position:0%
objects in all the John regions so
during<00:15:12.449><c> the</c><00:15:12.540><c> junk</c><00:15:12.720><c> collection</c><00:15:13.140><c> g1</c><00:15:13.620><c> will</c><00:15:13.800><c> check</c>

00:15:14.030 --> 00:15:14.040 align:start position:0%
during the junk collection g1 will check
 

00:15:14.040 --> 00:15:16.189 align:start position:0%
during the junk collection g1 will check
if<00:15:14.220><c> drawer</c><00:15:14.579><c> and</c><00:15:14.880><c> references</c><00:15:15.510><c> from</c><00:15:15.810><c> a</c><00:15:15.959><c> John</c>

00:15:16.189 --> 00:15:16.199 align:start position:0%
if drawer and references from a John
 

00:15:16.199 --> 00:15:19.970 align:start position:0%
if drawer and references from a John
Young<00:15:16.560><c> object</c><00:15:16.949><c> to</c><00:15:17.610><c> this</c><00:15:17.899><c> humongous</c><00:15:18.899><c> object</c><00:15:19.260><c> if</c>

00:15:19.970 --> 00:15:19.980 align:start position:0%
Young object to this humongous object if
 

00:15:19.980 --> 00:15:21.829 align:start position:0%
Young object to this humongous object if
no<00:15:20.279><c> references</c><00:15:20.760><c> are</c><00:15:20.970><c> found</c><00:15:21.209><c> from</c><00:15:21.600><c> John</c>

00:15:21.829 --> 00:15:21.839 align:start position:0%
no references are found from John
 

00:15:21.839 --> 00:15:24.530 align:start position:0%
no references are found from John
obvious<00:15:22.199><c> we</c><00:15:22.470><c> know</c><00:15:22.649><c> that</c><00:15:23.579><c> nothing</c><00:15:23.940><c> is</c><00:15:24.240><c> holding</c>

00:15:24.530 --> 00:15:24.540 align:start position:0%
obvious we know that nothing is holding
 

00:15:24.540 --> 00:15:25.680 align:start position:0%
obvious we know that nothing is holding
on<00:15:24.690><c> to</c><00:15:24.870><c> this</c><00:15:24.959><c> human</c>

00:15:25.680 --> 00:15:25.690 align:start position:0%
on to this human
 

00:15:25.690 --> 00:15:27.510 align:start position:0%
on to this human
we<00:15:25.870><c> can</c><00:15:26.020><c> reclaim</c><00:15:26.290><c> the</c><00:15:26.380><c> memory</c><00:15:26.800><c> and</c><00:15:27.040><c> reuse</c><00:15:27.370><c> it</c>

00:15:27.510 --> 00:15:27.520 align:start position:0%
we can reclaim the memory and reuse it
 

00:15:27.520 --> 00:15:31.230 align:start position:0%
we can reclaim the memory and reuse it
later<00:15:28.920><c> so</c><00:15:29.920><c> day</c><00:15:30.100><c> 1</c><00:15:30.280><c> can</c><00:15:30.580><c> do</c><00:15:30.760><c> to</c><00:15:30.910><c> this</c><00:15:31.030><c> feature</c>

00:15:31.230 --> 00:15:31.240 align:start position:0%
later so day 1 can do to this feature
 

00:15:31.240 --> 00:15:33.390 align:start position:0%
later so day 1 can do to this feature
reclaim<00:15:31.930><c> him</c><00:15:32.110><c> along</c><00:15:32.260><c> with</c><00:15:32.410><c> objects</c><00:15:32.740><c> during</c><00:15:33.310><c> a</c>

00:15:33.390 --> 00:15:33.400 align:start position:0%
reclaim him along with objects during a
 

00:15:33.400 --> 00:15:35.280 align:start position:0%
reclaim him along with objects during a
young<00:15:33.550><c> collection</c><00:15:34.090><c> it</c><00:15:34.270><c> does</c><00:15:34.480><c> not</c><00:15:34.720><c> need</c><00:15:35.020><c> to</c>

00:15:35.280 --> 00:15:35.290 align:start position:0%
young collection it does not need to
 

00:15:35.290 --> 00:15:37.830 align:start position:0%
young collection it does not need to
wait<00:15:35.560><c> for</c><00:15:35.590><c> concurrent</c><00:15:36.310><c> mark</c><00:15:36.550><c> to</c><00:15:37.210><c> finish</c><00:15:37.600><c> to</c>

00:15:37.830 --> 00:15:37.840 align:start position:0%
wait for concurrent mark to finish to
 

00:15:37.840 --> 00:15:40.260 align:start position:0%
wait for concurrent mark to finish to
realize<00:15:38.260><c> that</c><00:15:38.500><c> object</c><00:15:38.950><c> is</c><00:15:39.040><c> dead</c><00:15:39.310><c> this</c><00:15:40.030><c> was</c>

00:15:40.260 --> 00:15:40.270 align:start position:0%
realize that object is dead this was
 

00:15:40.270 --> 00:15:43.170 align:start position:0%
realize that object is dead this was
introduced<00:15:40.780><c> in</c><00:15:41.020><c> 1860</c><00:15:41.920><c> and</c><00:15:42.100><c> can</c><00:15:42.640><c> help</c><00:15:42.940><c> quell</c>

00:15:43.170 --> 00:15:43.180 align:start position:0%
introduced in 1860 and can help quell
 

00:15:43.180 --> 00:15:45.390 align:start position:0%
introduced in 1860 and can help quell
loss<00:15:43.390><c> if</c><00:15:43.570><c> you</c><00:15:43.630><c> have</c><00:15:43.870><c> if</c><00:15:44.410><c> you</c><00:15:44.470><c> allocate</c><00:15:44.860><c> a</c><00:15:44.920><c> large</c>

00:15:45.390 --> 00:15:45.400 align:start position:0%
loss if you have if you allocate a large
 

00:15:45.400 --> 00:15:50.880 align:start position:0%
loss if you have if you allocate a large
objects<00:15:48.540><c> so</c><00:15:49.540><c> the</c><00:15:49.810><c> next</c><00:15:50.200><c> feature</c><00:15:50.410><c> gonna</c><00:15:50.740><c> look</c>

00:15:50.880 --> 00:15:50.890 align:start position:0%
objects so the next feature gonna look
 

00:15:50.890 --> 00:15:52.890 align:start position:0%
objects so the next feature gonna look
at<00:15:51.100><c> is</c><00:15:51.250><c> the</c><00:15:51.430><c> adaptive</c><00:15:51.970><c> sort</c><00:15:52.240><c> of</c><00:15:52.420><c> concurrent</c>

00:15:52.890 --> 00:15:52.900 align:start position:0%
at is the adaptive sort of concurrent
 

00:15:52.900 --> 00:15:57.000 align:start position:0%
at is the adaptive sort of concurrent
mark<00:15:53.110><c> and</c><00:15:53.350><c> this</c><00:15:53.530><c> was</c><00:15:53.740><c> shipped</c><00:15:54.130><c> in</c><00:15:54.310><c> JDK</c><00:15:54.760><c> 9</c><00:15:56.010><c> so</c>

00:15:57.000 --> 00:15:57.010 align:start position:0%
mark and this was shipped in JDK 9 so
 

00:15:57.010 --> 00:15:59.010 align:start position:0%
mark and this was shipped in JDK 9 so
this<00:15:57.430><c> concurrent</c><00:15:57.850><c> mark</c><00:15:58.180><c> cycle</c><00:15:58.570><c> that</c><00:15:58.720><c> looks</c>

00:15:59.010 --> 00:15:59.020 align:start position:0%
this concurrent mark cycle that looks
 

00:15:59.020 --> 00:16:00.960 align:start position:0%
this concurrent mark cycle that looks
through<00:15:59.350><c> all</c><00:15:59.620><c> the</c><00:15:59.890><c> live</c><00:16:00.040><c> objects</c><00:16:00.460><c> in</c><00:16:00.610><c> all</c><00:16:00.790><c> the</c>

00:16:00.960 --> 00:16:00.970 align:start position:0%
through all the live objects in all the
 

00:16:00.970 --> 00:16:03.120 align:start position:0%
through all the live objects in all the
old<00:16:01.090><c> regions</c><00:16:01.600><c> again</c><00:16:02.260><c> it</c><00:16:02.590><c> can</c><00:16:02.710><c> take</c><00:16:02.890><c> a</c><00:16:02.920><c> little</c>

00:16:03.120 --> 00:16:03.130 align:start position:0%
old regions again it can take a little
 

00:16:03.130 --> 00:16:06.030 align:start position:0%
old regions again it can take a little
bit<00:16:03.340><c> of</c><00:16:03.400><c> time</c><00:16:03.580><c> until</c><00:16:03.820><c> it</c><00:16:04.060><c> finishes</c><00:16:04.740><c> but</c><00:16:05.740><c> it's</c>

00:16:06.030 --> 00:16:06.040 align:start position:0%
bit of time until it finishes but it's
 

00:16:06.040 --> 00:16:08.550 align:start position:0%
bit of time until it finishes but it's
important<00:16:06.730><c> that</c><00:16:06.790><c> it</c><00:16:07.090><c> does</c><00:16:07.450><c> finish</c><00:16:07.810><c> because</c><00:16:08.410><c> if</c>

00:16:08.550 --> 00:16:08.560 align:start position:0%
important that it does finish because if
 

00:16:08.560 --> 00:16:10.560 align:start position:0%
important that it does finish because if
it<00:16:08.650><c> doesn't</c><00:16:08.800><c> finish</c><00:16:09.010><c> then</c><00:16:09.790><c> g1</c><00:16:10.150><c> doesn't</c><00:16:10.420><c> have</c>

00:16:10.560 --> 00:16:10.570 align:start position:0%
it doesn't finish then g1 doesn't have
 

00:16:10.570 --> 00:16:12.090 align:start position:0%
it doesn't finish then g1 doesn't have
the<00:16:10.720><c> liveness</c><00:16:10.960><c> information</c><00:16:11.620><c> needed</c><00:16:11.860><c> to</c>

00:16:12.090 --> 00:16:12.100 align:start position:0%
the liveness information needed to
 

00:16:12.100 --> 00:16:16.940 align:start position:0%
the liveness information needed to
collect<00:16:12.520><c> objects</c><00:16:13.180><c> in</c><00:16:13.360><c> the</c><00:16:13.450><c> old</c><00:16:13.630><c> region's</c><00:16:14.340><c> so</c>

00:16:16.940 --> 00:16:16.950 align:start position:0%
collect objects in the old region's so
 

00:16:16.950 --> 00:16:19.320 align:start position:0%
collect objects in the old region's so
co-current<00:16:17.950><c> marking</c><00:16:18.280><c> must</c><00:16:18.520><c> finish</c><00:16:18.820><c> before</c>

00:16:19.320 --> 00:16:19.330 align:start position:0%
co-current marking must finish before
 

00:16:19.330 --> 00:16:22.020 align:start position:0%
co-current marking must finish before
the<00:16:19.690><c> heap</c><00:16:19.900><c> is</c><00:16:20.110><c> full</c><00:16:20.410><c> with</c><00:16:21.190><c> old</c><00:16:21.400><c> regions</c><00:16:21.850><c> and</c>

00:16:22.020 --> 00:16:22.030 align:start position:0%
the heap is full with old regions and
 

00:16:22.030 --> 00:16:23.250 align:start position:0%
the heap is full with old regions and
the<00:16:22.150><c> problem</c><00:16:22.480><c> is</c><00:16:22.540><c> done</c><00:16:22.660><c> of</c><00:16:22.780><c> course</c><00:16:22.930><c> when</c>

00:16:23.250 --> 00:16:23.260 align:start position:0%
the problem is done of course when
 

00:16:23.260 --> 00:16:27.650 align:start position:0%
the problem is done of course when
should<00:16:23.500><c> have</c><00:16:23.560><c> distorted</c><00:16:24.900><c> prior</c><00:16:25.900><c> to</c><00:16:26.320><c> yet</c><00:16:26.950><c> ek9</c>

00:16:27.650 --> 00:16:27.660 align:start position:0%
should have distorted prior to yet ek9
 

00:16:27.660 --> 00:16:30.690 align:start position:0%
should have distorted prior to yet ek9
you<00:16:28.660><c> had</c><00:16:28.840><c> to</c><00:16:29.020><c> use</c><00:16:29.200><c> the</c><00:16:29.230><c> flag</c><00:16:29.590><c> initiating</c><00:16:30.490><c> heap</c>

00:16:30.690 --> 00:16:30.700 align:start position:0%
you had to use the flag initiating heap
 

00:16:30.700 --> 00:16:34.140 align:start position:0%
you had to use the flag initiating heap
or<00:16:30.910><c> kc</c><00:16:31.240><c> %</c><00:16:31.630><c> which</c><00:16:32.530><c> meant</c><00:16:32.770><c> that</c><00:16:32.890><c> you</c><00:16:33.490><c> set</c><00:16:33.730><c> a</c><00:16:33.760><c> value</c>

00:16:34.140 --> 00:16:34.150 align:start position:0%
or kc % which meant that you set a value
 

00:16:34.150 --> 00:16:36.840 align:start position:0%
or kc % which meant that you set a value
for<00:16:34.360><c> example</c><00:16:34.450><c> 35</c><00:16:35.230><c> and</c><00:16:35.710><c> concurrent</c><00:16:36.550><c> marking</c>

00:16:36.840 --> 00:16:36.850 align:start position:0%
for example 35 and concurrent marking
 

00:16:36.850 --> 00:16:38.970 align:start position:0%
for example 35 and concurrent marking
would<00:16:37.030><c> be</c><00:16:37.180><c> started</c><00:16:37.600><c> when</c><00:16:37.840><c> the</c><00:16:37.990><c> heap</c><00:16:38.110><c> was</c><00:16:38.320><c> 35%</c>

00:16:38.970 --> 00:16:38.980 align:start position:0%
would be started when the heap was 35%
 

00:16:38.980 --> 00:16:41.760 align:start position:0%
would be started when the heap was 35%
full<00:16:39.820><c> now</c><00:16:40.600><c> this</c><00:16:40.930><c> is</c><00:16:41.050><c> obviously</c><00:16:41.200><c> a</c><00:16:41.500><c> way</c><00:16:41.710><c> to</c>

00:16:41.760 --> 00:16:41.770 align:start position:0%
full now this is obviously a way to
 

00:16:41.770 --> 00:16:43.650 align:start position:0%
full now this is obviously a way to
static<00:16:42.400><c> way</c><00:16:42.520><c> to</c><00:16:42.580><c> do</c><00:16:42.790><c> this</c><00:16:42.940><c> and</c><00:16:43.240><c> many</c><00:16:43.390><c> of</c><00:16:43.510><c> you</c>

00:16:43.650 --> 00:16:43.660 align:start position:0%
static way to do this and many of you
 

00:16:43.660 --> 00:16:46.530 align:start position:0%
static way to do this and many of you
experience<00:16:44.260><c> problems</c><00:16:44.410><c> with</c><00:16:44.830><c> this</c><00:16:45.390><c> that</c><00:16:46.390><c> the</c>

00:16:46.530 --> 00:16:46.540 align:start position:0%
experience problems with this that the
 

00:16:46.540 --> 00:16:48.060 align:start position:0%
experience problems with this that the
concurrent<00:16:46.750><c> mark</c><00:16:47.050><c> saga</c><00:16:47.260><c> was</c><00:16:47.440><c> kicked</c><00:16:47.710><c> off</c><00:16:47.800><c> too</c>

00:16:48.060 --> 00:16:48.070 align:start position:0%
concurrent mark saga was kicked off too
 

00:16:48.070 --> 00:16:49.890 align:start position:0%
concurrent mark saga was kicked off too
early<00:16:48.300><c> resulting</c><00:16:49.300><c> a</c><00:16:49.390><c> slightly</c><00:16:49.750><c> worse</c>

00:16:49.890 --> 00:16:49.900 align:start position:0%
early resulting a slightly worse
 

00:16:49.900 --> 00:16:52.470 align:start position:0%
early resulting a slightly worse
performance<00:16:50.080><c> or</c><00:16:50.800><c> too</c><00:16:51.220><c> late</c><00:16:51.460><c> resulting</c><00:16:52.300><c> at</c><00:16:52.390><c> we</c>

00:16:52.470 --> 00:16:52.480 align:start position:0%
performance or too late resulting at we
 

00:16:52.480 --> 00:16:55.020 align:start position:0%
performance or too late resulting at we
couldn't<00:16:52.750><c> collect</c><00:16:52.870><c> old</c><00:16:53.200><c> regions</c><00:16:53.620><c> so</c><00:16:54.280><c> in</c><00:16:54.460><c> 9</c><00:16:54.670><c> we</c>

00:16:55.020 --> 00:16:55.030 align:start position:0%
couldn't collect old regions so in 9 we
 

00:16:55.030 --> 00:16:56.940 align:start position:0%
couldn't collect old regions so in 9 we
replace<00:16:55.360><c> this</c><00:16:55.570><c> with</c><00:16:55.870><c> a</c><00:16:55.900><c> much</c><00:16:56.170><c> more</c><00:16:56.410><c> adaptive</c>

00:16:56.940 --> 00:16:56.950 align:start position:0%
replace this with a much more adaptive
 

00:16:56.950 --> 00:17:00.120 align:start position:0%
replace this with a much more adaptive
dynamic<00:16:57.430><c> calculation</c><00:16:58.380><c> we</c><00:16:59.380><c> do</c><00:16:59.560><c> use</c><00:16:59.800><c> for</c><00:17:00.040><c> the</c>

00:17:00.120 --> 00:17:00.130 align:start position:0%
dynamic calculation we do use for the
 

00:17:00.130 --> 00:17:02.220 align:start position:0%
dynamic calculation we do use for the
first<00:17:00.370><c> collections</c><00:17:01.030><c> just</c><00:17:01.240><c> as</c><00:17:01.570><c> an</c><00:17:01.750><c> initial</c>

00:17:02.220 --> 00:17:02.230 align:start position:0%
first collections just as an initial
 

00:17:02.230 --> 00:17:05.160 align:start position:0%
first collections just as an initial
value<00:17:02.380><c> to</c><00:17:02.650><c> the</c><00:17:03.280><c> ergonomics</c><00:17:03.820><c> engine</c><00:17:04.210><c> the</c><00:17:04.900><c> value</c>

00:17:05.160 --> 00:17:05.170 align:start position:0%
value to the ergonomics engine the value
 

00:17:05.170 --> 00:17:07.080 align:start position:0%
value to the ergonomics engine the value
of<00:17:05.260><c> this</c><00:17:05.380><c> flag</c><00:17:05.650><c> and</c><00:17:05.890><c> then</c><00:17:06.100><c> we</c><00:17:06.220><c> sample</c><00:17:06.640><c> runtime</c>

00:17:07.080 --> 00:17:07.090 align:start position:0%
of this flag and then we sample runtime
 

00:17:07.090 --> 00:17:08.880 align:start position:0%
of this flag and then we sample runtime
data<00:17:07.270><c> and</c><00:17:07.720><c> see</c><00:17:07.900><c> how</c><00:17:08.080><c> the</c><00:17:08.140><c> applications</c>

00:17:08.880 --> 00:17:08.890 align:start position:0%
data and see how the applications
 

00:17:08.890 --> 00:17:11.850 align:start position:0%
data and see how the applications
allocation<00:17:09.790><c> performs</c><00:17:10.480><c> and</c><00:17:10.780><c> how</c><00:17:11.470><c> much</c><00:17:11.650><c> data</c>

00:17:11.850 --> 00:17:11.860 align:start position:0%
allocation performs and how much data
 

00:17:11.860 --> 00:17:13.710 align:start position:0%
allocation performs and how much data
you<00:17:12.040><c> allocate</c><00:17:12.430><c> and</c><00:17:12.730><c> then</c><00:17:13.060><c> we</c><00:17:13.120><c> can</c><00:17:13.300><c> use</c><00:17:13.480><c> those</c>

00:17:13.710 --> 00:17:13.720 align:start position:0%
you allocate and then we can use those
 

00:17:13.720 --> 00:17:16.410 align:start position:0%
you allocate and then we can use those
samples<00:17:14.280><c> and</c><00:17:15.280><c> the</c><00:17:15.550><c> feedback</c><00:17:15.880><c> from</c><00:17:16.090><c> previous</c>

00:17:16.410 --> 00:17:16.420 align:start position:0%
samples and the feedback from previous
 

00:17:16.420 --> 00:17:18.750 align:start position:0%
samples and the feedback from previous
concurrent<00:17:16.930><c> mark</c><00:17:17.080><c> cycles</c><00:17:17.530><c> to</c><00:17:18.070><c> determine</c><00:17:18.580><c> when</c>

00:17:18.750 --> 00:17:18.760 align:start position:0%
concurrent mark cycles to determine when
 

00:17:18.760 --> 00:17:21.570 align:start position:0%
concurrent mark cycles to determine when
to<00:17:18.790><c> start</c><00:17:19.150><c> off</c><00:17:19.300><c> the</c><00:17:19.450><c> next</c><00:17:19.690><c> one</c><00:17:20.190><c> and</c><00:17:21.190><c> of</c><00:17:21.550><c> course</c>

00:17:21.570 --> 00:17:21.580 align:start position:0%
to start off the next one and of course
 

00:17:21.580 --> 00:17:23.670 align:start position:0%
to start off the next one and of course
we<00:17:21.820><c> always</c><00:17:22.030><c> had</c><00:17:22.390><c> a</c><00:17:22.450><c> safety</c><00:17:22.720><c> margin</c><00:17:23.050><c> because</c><00:17:23.410><c> we</c>

00:17:23.670 --> 00:17:23.680 align:start position:0%
we always had a safety margin because we
 

00:17:23.680 --> 00:17:27.900 align:start position:0%
we always had a safety margin because we
really<00:17:24.010><c> wanted</c><00:17:24.280><c> to</c><00:17:24.400><c> finish</c><00:17:24.550><c> in</c><00:17:24.850><c> time</c><00:17:26.580><c> so</c><00:17:27.580><c> this</c>

00:17:27.900 --> 00:17:27.910 align:start position:0%
really wanted to finish in time so this
 

00:17:27.910 --> 00:17:30.390 align:start position:0%
really wanted to finish in time so this
results<00:17:28.450><c> in</c><00:17:28.660><c> much</c><00:17:29.290><c> less</c><00:17:29.530><c> concurrent</c><00:17:30.220><c> mark</c>

00:17:30.390 --> 00:17:30.400 align:start position:0%
results in much less concurrent mark
 

00:17:30.400 --> 00:17:33.240 align:start position:0%
results in much less concurrent mark
failures<00:17:30.760><c> which</c><00:17:31.570><c> in</c><00:17:31.840><c> turn</c><00:17:32.080><c> saves</c><00:17:32.530><c> you</c><00:17:32.800><c> from</c><00:17:33.100><c> a</c>

00:17:33.240 --> 00:17:33.250 align:start position:0%
failures which in turn saves you from a
 

00:17:33.250 --> 00:17:36.960 align:start position:0%
failures which in turn saves you from a
lot<00:17:33.460><c> of</c><00:17:33.610><c> this</c><00:17:33.730><c> fall</c><00:17:34.690><c> back</c><00:17:34.960><c> full</c><00:17:35.290><c> GCS</c>

00:17:36.960 --> 00:17:36.970 align:start position:0%
lot of this fall back full GCS
 

00:17:36.970 --> 00:17:40.890 align:start position:0%
lot of this fall back full GCS
this<00:17:37.570><c> is</c><00:17:37.720><c> controlled</c><00:17:38.230><c> with</c><00:17:38.440><c> a</c><00:17:38.470><c> flag</c><00:17:39.010><c> -</c><00:17:39.670><c> xxg</c><00:17:40.660><c> one</c>

00:17:40.890 --> 00:17:40.900 align:start position:0%
this is controlled with a flag - xxg one
 

00:17:40.900 --> 00:17:43.350 align:start position:0%
this is controlled with a flag - xxg one
use<00:17:41.140><c> adaptive</c><00:17:41.380><c> I</c><00:17:41.590><c> hope</c><00:17:41.830><c> and</c><00:17:42.160><c> this</c><00:17:42.760><c> is</c><00:17:42.880><c> enabled</c>

00:17:43.350 --> 00:17:43.360 align:start position:0%
use adaptive I hope and this is enabled
 

00:17:43.360 --> 00:17:45.510 align:start position:0%
use adaptive I hope and this is enabled
by<00:17:43.450><c> default</c><00:17:43.600><c> in</c><00:17:43.930><c> 89</c><00:17:44.350><c> and</c><00:17:44.620><c> I</c><00:17:44.920><c> recommend</c><00:17:45.370><c> you</c><00:17:45.430><c> to</c>

00:17:45.510 --> 00:17:45.520 align:start position:0%
by default in 89 and I recommend you to
 

00:17:45.520 --> 00:17:54.990 align:start position:0%
by default in 89 and I recommend you to
keep<00:17:45.700><c> it</c><00:17:45.790><c> on</c><00:17:52.590><c> so</c><00:17:53.590><c> let's</c><00:17:53.860><c> look</c><00:17:54.010><c> a</c><00:17:54.130><c> bit</c><00:17:54.280><c> at</c><00:17:54.310><c> the</c>

00:17:54.990 --> 00:17:55.000 align:start position:0%
keep it on so let's look a bit at the
 

00:17:55.000 --> 00:17:56.580 align:start position:0%
keep it on so let's look a bit at the
new<00:17:55.210><c> more</c><00:17:55.480><c> efficient</c><00:17:55.900><c> collections</c><00:17:56.350><c> that</c><00:17:56.470><c> we</c>

00:17:56.580 --> 00:17:56.590 align:start position:0%
new more efficient collections that we
 

00:17:56.590 --> 00:17:59.850 align:start position:0%
new more efficient collections that we
have<00:17:56.710><c> introduced</c><00:17:57.130><c> in</c><00:17:57.340><c> JDK</c><00:17:57.760><c> 9</c><00:17:57.960><c> we</c><00:17:58.960><c> did</c><00:17:59.170><c> a</c><00:17:59.350><c> lot</c><00:17:59.710><c> of</c>

00:17:59.850 --> 00:17:59.860 align:start position:0%
have introduced in JDK 9 we did a lot of
 

00:17:59.860 --> 00:18:03.360 align:start position:0%
have introduced in JDK 9 we did a lot of
work<00:18:00.010><c> going</c><00:18:00.520><c> into</c><00:18:00.760><c> UDK</c><00:18:01.060><c> 9</c><00:18:01.390><c> in</c><00:18:02.380><c> fact</c><00:18:02.650><c> we</c><00:18:03.190><c> had</c>

00:18:03.360 --> 00:18:03.370 align:start position:0%
work going into UDK 9 in fact we had
 

00:18:03.370 --> 00:18:06.510 align:start position:0%
work going into UDK 9 in fact we had
more<00:18:03.580><c> than</c><00:18:03.960><c> 250</c><00:18:04.960><c> announcements</c><00:18:05.470><c> going</c><00:18:05.770><c> in</c><00:18:05.890><c> for</c>

00:18:06.510 --> 00:18:06.520 align:start position:0%
more than 250 announcements going in for
 

00:18:06.520 --> 00:18:08.850 align:start position:0%
more than 250 announcements going in for
G<00:18:07.480><c> 1</c><00:18:07.690><c> there</c><00:18:07.900><c> are</c><00:18:07.930><c> things</c><00:18:08.260><c> all</c><00:18:08.470><c> over</c><00:18:08.500><c> the</c><00:18:08.770><c> place</c>

00:18:08.850 --> 00:18:08.860 align:start position:0%
G 1 there are things all over the place
 

00:18:08.860 --> 00:18:10.590 align:start position:0%
G 1 there are things all over the place
there<00:18:09.190><c> are</c><00:18:09.250><c> more</c><00:18:09.430><c> parallel</c><00:18:09.910><c> phase</c><00:18:10.120><c> sisters</c>

00:18:10.590 --> 00:18:10.600 align:start position:0%
there are more parallel phase sisters
 

00:18:10.600 --> 00:18:13.350 align:start position:0%
there are more parallel phase sisters
improved<00:18:11.020><c> peel</c><00:18:11.290><c> up</c><00:18:11.470><c> sizing</c><00:18:12.010><c> parallel</c><00:18:12.820><c> freeing</c>

00:18:13.350 --> 00:18:13.360 align:start position:0%
improved peel up sizing parallel freeing
 

00:18:13.360 --> 00:18:15.570 align:start position:0%
improved peel up sizing parallel freeing
we<00:18:13.630><c> have</c><00:18:13.750><c> T</c><00:18:14.020><c> lab</c><00:18:14.230><c> resizing</c><00:18:14.860><c> concurrent</c><00:18:15.400><c> mark</c>

00:18:15.570 --> 00:18:15.580 align:start position:0%
we have T lab resizing concurrent mark
 

00:18:15.580 --> 00:18:18.720 align:start position:0%
we have T lab resizing concurrent mark
from<00:18:15.730><c> rules</c><00:18:16.230><c> and</c><00:18:17.230><c> a</c><00:18:17.710><c> bunch</c><00:18:17.950><c> more</c><00:18:18.070><c> updates</c><00:18:18.610><c> to</c>

00:18:18.720 --> 00:18:18.730 align:start position:0%
from rules and a bunch more updates to
 

00:18:18.730 --> 00:18:19.920 align:start position:0%
from rules and a bunch more updates to
the<00:18:18.820><c> internal</c><00:18:19.180><c> data</c><00:18:19.270><c> structures</c><00:18:19.690><c> for</c><00:18:19.720><c> the</c>

00:18:19.920 --> 00:18:19.930 align:start position:0%
the internal data structures for the
 

00:18:19.930 --> 00:18:23.930 align:start position:0%
the internal data structures for the
garbage<00:18:20.230><c> collector</c><00:18:21.180><c> we</c><00:18:22.180><c> have</c><00:18:22.450><c> more</c><00:18:22.870><c> than</c><00:18:23.110><c> 180</c>

00:18:23.930 --> 00:18:23.940 align:start position:0%
garbage collector we have more than 180
 

00:18:23.940 --> 00:18:28.080 align:start position:0%
garbage collector we have more than 180
bug<00:18:24.940><c> fixes</c><00:18:25.420><c> going</c><00:18:26.230><c> into</c><00:18:26.620><c> G</c><00:18:27.340><c> 1</c><00:18:27.550><c> G</c><00:18:27.580><c> C</c><00:18:27.910><c> in</c><00:18:28.060><c> your</c>

00:18:28.080 --> 00:18:28.090 align:start position:0%
bug fixes going into G 1 G C in your
 

00:18:28.090 --> 00:18:31.140 align:start position:0%
bug fixes going into G 1 G C in your
canine<00:18:28.600><c> so</c><00:18:29.380><c> what</c><00:18:29.950><c> is</c><00:18:30.100><c> the</c><00:18:30.250><c> effect</c><00:18:30.610><c> of</c><00:18:30.790><c> all</c><00:18:30.970><c> this</c>

00:18:31.140 --> 00:18:31.150 align:start position:0%
canine so what is the effect of all this
 

00:18:31.150 --> 00:18:33.330 align:start position:0%
canine so what is the effect of all this
well<00:18:31.720><c> how</c><00:18:32.170><c> much</c><00:18:32.350><c> did</c><00:18:32.590><c> we</c><00:18:32.650><c> actually</c><00:18:33.070><c> improve</c>

00:18:33.330 --> 00:18:33.340 align:start position:0%
well how much did we actually improve
 

00:18:33.340 --> 00:18:36.750 align:start position:0%
well how much did we actually improve
well<00:18:34.380><c> the</c><00:18:35.380><c> uptake</c><00:18:35.770><c> has</c><00:18:35.950><c> actually</c><00:18:36.340><c> been</c><00:18:36.430><c> great</c>

00:18:36.750 --> 00:18:36.760 align:start position:0%
well the uptake has actually been great
 

00:18:36.760 --> 00:18:39.690 align:start position:0%
well the uptake has actually been great
here<00:18:37.540><c> I</c><00:18:37.570><c> have</c><00:18:38.020><c> a</c><00:18:38.260><c> bunch</c><00:18:38.650><c> of</c><00:18:38.860><c> nice</c><00:18:39.040><c> logos</c><00:18:39.430><c> and</c>

00:18:39.690 --> 00:18:39.700 align:start position:0%
here I have a bunch of nice logos and
 

00:18:39.700 --> 00:18:41.340 align:start position:0%
here I have a bunch of nice logos and
code<00:18:39.910><c> some</c><00:18:40.180><c> various</c><00:18:40.450><c> things</c><00:18:40.480><c> and</c><00:18:40.810><c> then</c><00:18:40.960><c> I</c><00:18:41.110><c> pipe</c>

00:18:41.340 --> 00:18:41.350 align:start position:0%
code some various things and then I pipe
 

00:18:41.350 --> 00:18:43.110 align:start position:0%
code some various things and then I pipe
the<00:18:41.530><c> slides</c><00:18:41.740><c> for</c><00:18:41.950><c> legal</c><00:18:42.310><c> and</c><00:18:42.520><c> out</c><00:18:42.610><c> came</c><00:18:42.880><c> this</c>

00:18:43.110 --> 00:18:43.120 align:start position:0%
the slides for legal and out came this
 

00:18:43.120 --> 00:18:47.190 align:start position:0%
the slides for legal and out came this
slide<00:18:43.980><c> so</c><00:18:44.980><c> J</c><00:18:45.520><c> 1</c><00:18:45.730><c> has</c><00:18:45.760><c> been</c><00:18:46.060><c> picked</c><00:18:46.420><c> up</c><00:18:46.570><c> by</c><00:18:46.900><c> major</c>

00:18:47.190 --> 00:18:47.200 align:start position:0%
slide so J 1 has been picked up by major
 

00:18:47.200 --> 00:18:49.280 align:start position:0%
slide so J 1 has been picked up by major
Java<00:18:47.680><c> frameworks</c><00:18:48.160><c> and</c><00:18:48.400><c> applications</c>

00:18:49.280 --> 00:18:49.290 align:start position:0%
Java frameworks and applications
 

00:18:49.290 --> 00:18:51.990 align:start position:0%
Java frameworks and applications
especially<00:18:50.290><c> Google</c><00:18:50.920><c> applications</c><00:18:51.520><c> such</c><00:18:51.970><c> as</c>

00:18:51.990 --> 00:18:52.000 align:start position:0%
especially Google applications such as
 

00:18:52.000 --> 00:18:55.290 align:start position:0%
especially Google applications such as
some<00:18:52.750><c> very</c><00:18:53.080><c> well-known</c><00:18:53.470><c> IDs</c><00:18:53.950><c> and</c><00:18:54.300><c> also</c>

00:18:55.290 --> 00:18:55.300 align:start position:0%
some very well-known IDs and also
 

00:18:55.300 --> 00:18:57.810 align:start position:0%
some very well-known IDs and also
server-side<00:18:55.930><c> frameworks</c><00:18:56.140><c> so</c><00:18:57.010><c> many</c><00:18:57.430><c> major</c>

00:18:57.810 --> 00:18:57.820 align:start position:0%
server-side frameworks so many major
 

00:18:57.820 --> 00:19:00.360 align:start position:0%
server-side frameworks so many major
companies<00:18:58.450><c> have</c><00:18:58.690><c> also</c><00:18:58.870><c> switched</c><00:18:59.350><c> or</c><00:19:00.160><c> or</c>

00:19:00.360 --> 00:19:00.370 align:start position:0%
companies have also switched or or
 

00:19:00.370 --> 00:19:02.040 align:start position:0%
companies have also switched or or
switching<00:19:00.850><c> to</c><00:19:00.940><c> g1</c><00:19:01.330><c> for</c><00:19:01.540><c> the</c><00:19:01.660><c> workloads</c>

00:19:02.040 --> 00:19:02.050 align:start position:0%
switching to g1 for the workloads
 

00:19:02.050 --> 00:19:04.710 align:start position:0%
switching to g1 for the workloads
particularly<00:19:02.770><c> those</c><00:19:03.150><c> where</c><00:19:04.150><c> they</c><00:19:04.270><c> care</c><00:19:04.570><c> about</c>

00:19:04.710 --> 00:19:04.720 align:start position:0%
particularly those where they care about
 

00:19:04.720 --> 00:19:07.530 align:start position:0%
particularly those where they care about
the<00:19:05.020><c> post</c><00:19:05.260><c> times</c><00:19:05.530><c> but</c><00:19:06.310><c> also</c><00:19:06.820><c> cares</c><00:19:07.090><c> about</c><00:19:07.390><c> the</c>

00:19:07.530 --> 00:19:07.540 align:start position:0%
the post times but also cares about the
 

00:19:07.540 --> 00:19:10.310 align:start position:0%
the post times but also cares about the
throughput<00:19:07.750><c> need</c><00:19:08.560><c> a</c><00:19:08.590><c> mix</c><00:19:08.890><c> of</c><00:19:09.040><c> those</c><00:19:09.160><c> and</c>

00:19:10.310 --> 00:19:10.320 align:start position:0%
throughput need a mix of those and
 

00:19:10.320 --> 00:19:13.650 align:start position:0%
throughput need a mix of those and
remember<00:19:11.320><c> to</c><00:19:11.470><c> always</c><00:19:11.500><c> run</c><00:19:12.070><c> with</c><00:19:12.130><c> latest</c><00:19:13.060><c> JDK</c>

00:19:13.650 --> 00:19:13.660 align:start position:0%
remember to always run with latest JDK
 

00:19:13.660 --> 00:19:16.740 align:start position:0%
remember to always run with latest JDK
release<00:19:13.990><c> if</c><00:19:14.860><c> you</c><00:19:15.220><c> are</c><00:19:15.430><c> running</c><00:19:16.210><c> with</c><00:19:16.390><c> D</c><00:19:16.540><c> 1</c>

00:19:16.740 --> 00:19:16.750 align:start position:0%
release if you are running with D 1
 

00:19:16.750 --> 00:19:18.390 align:start position:0%
release if you are running with D 1
because<00:19:17.050><c> the</c><00:19:17.200><c> improvements</c><00:19:17.830><c> are</c><00:19:17.890><c> kept</c><00:19:18.160><c> being</c>

00:19:18.390 --> 00:19:18.400 align:start position:0%
because the improvements are kept being
 

00:19:18.400 --> 00:19:20.670 align:start position:0%
because the improvements are kept being
kept<00:19:18.700><c> added</c><00:19:19.030><c> so</c><00:19:19.630><c> you</c><00:19:19.720><c> want</c><00:19:19.930><c> to</c><00:19:20.020><c> ensure</c><00:19:20.170><c> to</c><00:19:20.560><c> get</c>

00:19:20.670 --> 00:19:20.680 align:start position:0%
kept added so you want to ensure to get
 

00:19:20.680 --> 00:19:21.780 align:start position:0%
kept added so you want to ensure to get
the<00:19:20.770><c> best</c><00:19:20.920><c> performance</c><00:19:21.040><c> that</c><00:19:21.610><c> you</c><00:19:21.700><c> are</c>

00:19:21.780 --> 00:19:21.790 align:start position:0%
the best performance that you are
 

00:19:21.790 --> 00:19:25.140 align:start position:0%
the best performance that you are
running<00:19:21.880><c> with</c><00:19:22.120><c> the</c><00:19:22.180><c> latest</c><00:19:22.510><c> version</c><00:19:23.820><c> so</c><00:19:24.820><c> let's</c>

00:19:25.140 --> 00:19:25.150 align:start position:0%
running with the latest version so let's
 

00:19:25.150 --> 00:19:27.720 align:start position:0%
running with the latest version so let's
look<00:19:25.270><c> a</c><00:19:25.420><c> little</c><00:19:25.570><c> bit</c><00:19:25.780><c> in</c><00:19:25.990><c> to</c><00:19:26.560><c> the</c><00:19:26.740><c> future</c><00:19:27.190><c> of</c><00:19:27.220><c> g1</c>

00:19:27.720 --> 00:19:27.730 align:start position:0%
look a little bit in to the future of g1
 

00:19:27.730 --> 00:19:30.240 align:start position:0%
look a little bit in to the future of g1
and<00:19:27.910><c> what</c><00:19:28.030><c> is</c><00:19:28.120><c> it</c><00:19:28.270><c> going</c><00:19:28.540><c> on</c><00:19:28.630><c> at</c><00:19:28.810><c> the</c><00:19:28.900><c> moment</c><00:19:29.250><c> we</c>

00:19:30.240 --> 00:19:30.250 align:start position:0%
and what is it going on at the moment we
 

00:19:30.250 --> 00:19:31.800 align:start position:0%
and what is it going on at the moment we
are<00:19:30.340><c> not</c><00:19:30.520><c> I</c><00:19:30.730><c> live</c><00:19:30.940><c> sitting</c><00:19:31.300><c> by</c><00:19:31.420><c> we</c><00:19:31.690><c> are</c>

00:19:31.800 --> 00:19:31.810 align:start position:0%
are not I live sitting by we are
 

00:19:31.810 --> 00:19:34.290 align:start position:0%
are not I live sitting by we are
continuing<00:19:32.740><c> improving</c><00:19:33.370><c> and</c><00:19:33.520><c> developing</c><00:19:33.610><c> even</c>

00:19:34.290 --> 00:19:34.300 align:start position:0%
continuing improving and developing even
 

00:19:34.300 --> 00:19:37.080 align:start position:0%
continuing improving and developing even
though<00:19:34.390><c> 9</c><00:19:34.660><c> is</c><00:19:34.810><c> just</c><00:19:35.050><c> released</c><00:19:35.670><c> so</c><00:19:36.670><c> for</c><00:19:37.000><c> the</c>

00:19:37.080 --> 00:19:37.090 align:start position:0%
though 9 is just released so for the
 

00:19:37.090 --> 00:19:39.000 align:start position:0%
though 9 is just released so for the
next<00:19:37.270><c> year</c><00:19:37.480><c> DK</c><00:19:37.900><c> release</c><00:19:38.170><c> we</c><00:19:38.530><c> are</c><00:19:38.560><c> looking</c>

00:19:39.000 --> 00:19:39.010 align:start position:0%
next year DK release we are looking
 

00:19:39.010 --> 00:19:42.210 align:start position:0%
next year DK release we are looking
forward<00:19:39.220><c> to</c><00:19:39.370><c> parallel</c><00:19:40.270><c> fall</c><00:19:40.480><c> back</c><00:19:40.750><c> full</c><00:19:40.990><c> DC</c><00:19:41.470><c> so</c>

00:19:42.210 --> 00:19:42.220 align:start position:0%
forward to parallel fall back full DC so
 

00:19:42.220 --> 00:19:43.890 align:start position:0%
forward to parallel fall back full DC so
the<00:19:42.400><c> reason</c><00:19:42.760><c> that</c><00:19:42.940><c> all</c><00:19:43.180><c> of</c><00:19:43.240><c> you</c><00:19:43.510><c> have</c><00:19:43.720><c> cell</c>

00:19:43.890 --> 00:19:43.900 align:start position:0%
the reason that all of you have cell
 

00:19:43.900 --> 00:19:45.780 align:start position:0%
the reason that all of you have cell
problems<00:19:44.350><c> will</c><00:19:44.560><c> fall</c><00:19:44.860><c> back</c><00:19:45.040><c> which</c><00:19:45.340><c> is</c><00:19:45.520><c> the</c>

00:19:45.780 --> 00:19:45.790 align:start position:0%
problems will fall back which is the
 

00:19:45.790 --> 00:19:47.670 align:start position:0%
problems will fall back which is the
full<00:19:45.970><c> UC</c><00:19:46.300><c> is</c><00:19:46.450><c> not</c><00:19:46.690><c> supposed</c><00:19:47.170><c> to</c><00:19:47.230><c> happen</c><00:19:47.380><c> which</c>

00:19:47.670 --> 00:19:47.680 align:start position:0%
full UC is not supposed to happen which
 

00:19:47.680 --> 00:19:50.130 align:start position:0%
full UC is not supposed to happen which
a<00:19:47.830><c> one</c><00:19:48.010><c> but</c><00:19:48.790><c> if</c><00:19:48.910><c> it</c><00:19:49.030><c> does</c><00:19:49.180><c> happen</c><00:19:49.210><c> it</c><00:19:49.750><c> has</c>

00:19:50.130 --> 00:19:50.140 align:start position:0%
a one but if it does happen it has
 

00:19:50.140 --> 00:19:52.740 align:start position:0%
a one but if it does happen it has
really<00:19:50.620><c> painful</c><00:19:50.860><c> in</c><00:19:51.280><c> the</c><00:19:51.400><c> post</c><00:19:51.610><c> so</c><00:19:52.450><c> for</c><00:19:52.690><c> the</c>

00:19:52.740 --> 00:19:52.750 align:start position:0%
really painful in the post so for the
 

00:19:52.750 --> 00:19:54.240 align:start position:0%
really painful in the post so for the
next<00:19:52.990><c> decade</c><00:19:53.320><c> release</c><00:19:53.560><c> we</c><00:19:53.830><c> are</c><00:19:53.860><c> looking</c>

00:19:54.240 --> 00:19:54.250 align:start position:0%
next decade release we are looking
 

00:19:54.250 --> 00:19:56.790 align:start position:0%
next decade release we are looking
forward<00:19:54.490><c> to</c><00:19:54.760><c> parallel</c><00:19:55.330><c> fold</c><00:19:56.080><c> back</c><00:19:56.230><c> full</c><00:19:56.440><c> uses</c>

00:19:56.790 --> 00:19:56.800 align:start position:0%
forward to parallel fold back full uses
 

00:19:56.800 --> 00:19:58.830 align:start position:0%
forward to parallel fold back full uses
that<00:19:57.490><c> even</c><00:19:57.790><c> though</c><00:19:57.910><c> it</c><00:19:58.090><c> is</c><00:19:58.180><c> a</c><00:19:58.240><c> failure</c><00:19:58.540><c> case</c>

00:19:58.830 --> 00:19:58.840 align:start position:0%
that even though it is a failure case
 

00:19:58.840 --> 00:20:01.500 align:start position:0%
that even though it is a failure case
you<00:19:59.500><c> will</c><00:19:59.710><c> have</c><00:20:00.160><c> a</c><00:20:00.340><c> much</c><00:20:00.670><c> faster</c><00:20:00.700><c> and</c><00:20:01.240><c> speedy</c>

00:20:01.500 --> 00:20:01.510 align:start position:0%
you will have a much faster and speedy
 

00:20:01.510 --> 00:20:02.850 align:start position:0%
you will have a much faster and speedy
recovery

00:20:02.850 --> 00:20:02.860 align:start position:0%
recovery
 

00:20:02.860 --> 00:20:04.950 align:start position:0%
recovery
this<00:20:03.190><c> is</c><00:20:03.310><c> being</c><00:20:03.550><c> reviewed</c><00:20:04.180><c> right</c><00:20:04.270><c> now</c><00:20:04.690><c> on</c><00:20:04.870><c> the</c>

00:20:04.950 --> 00:20:04.960 align:start position:0%
this is being reviewed right now on the
 

00:20:04.960 --> 00:20:07.260 align:start position:0%
this is being reviewed right now on the
mailing<00:20:05.170><c> lists</c><00:20:05.440><c> and</c><00:20:05.760><c> you</c><00:20:06.760><c> can</c><00:20:06.940><c> see</c><00:20:07.090><c> more</c>

00:20:07.260 --> 00:20:07.270 align:start position:0%
mailing lists and you can see more
 

00:20:07.270 --> 00:20:11.310 align:start position:0%
mailing lists and you can see more
details<00:20:07.720><c> in</c><00:20:07.990><c> Jeff</c><00:20:08.970><c> 307</c><00:20:09.970><c> on</c><00:20:10.120><c> open</c><00:20:10.810><c> a</c><00:20:10.870><c> decay</c><00:20:11.110><c> that</c>

00:20:11.310 --> 00:20:11.320 align:start position:0%
details in Jeff 307 on open a decay that
 

00:20:11.320 --> 00:20:15.330 align:start position:0%
details in Jeff 307 on open a decay that
your<00:20:11.500><c> nuts</c><00:20:11.890><c> that</c><00:20:12.190><c> kept</c><00:20:12.700><c> slash</c><00:20:13.120><c> 307</c><00:20:14.250><c> we</c><00:20:15.250><c> have</c>

00:20:15.330 --> 00:20:15.340 align:start position:0%
your nuts that kept slash 307 we have
 

00:20:15.340 --> 00:20:17.340 align:start position:0%
your nuts that kept slash 307 we have
also<00:20:15.520><c> made</c><00:20:15.790><c> significant</c><00:20:16.720><c> improvements</c><00:20:16.810><c> to</c>

00:20:17.340 --> 00:20:17.350 align:start position:0%
also made significant improvements to
 

00:20:17.350 --> 00:20:19.770 align:start position:0%
also made significant improvements to
the<00:20:17.470><c> core</c><00:20:17.740><c> scanning</c><00:20:18.190><c> so</c><00:20:19.150><c> of</c><00:20:19.210><c> course</c><00:20:19.360><c> then</c><00:20:19.630><c> it</c>

00:20:19.770 --> 00:20:19.780 align:start position:0%
the core scanning so of course then it
 

00:20:19.780 --> 00:20:22.170 align:start position:0%
the core scanning so of course then it
scanning<00:20:20.140><c> is</c><00:20:20.260><c> a</c><00:20:20.380><c> detail</c><00:20:21.010><c> of</c><00:20:21.160><c> how</c><00:20:21.310><c> g1</c><00:20:21.700><c> works</c><00:20:21.910><c> and</c>

00:20:22.170 --> 00:20:22.180 align:start position:0%
scanning is a detail of how g1 works and
 

00:20:22.180 --> 00:20:24.570 align:start position:0%
scanning is a detail of how g1 works and
it<00:20:22.270><c> needs</c><00:20:22.450><c> to</c><00:20:22.570><c> perform</c><00:20:22.690><c> quite</c><00:20:23.080><c> a</c><00:20:23.110><c> lot</c><00:20:23.290><c> of</c><00:20:23.320><c> it</c><00:20:23.580><c> so</c>

00:20:24.570 --> 00:20:24.580 align:start position:0%
it needs to perform quite a lot of it so
 

00:20:24.580 --> 00:20:26.700 align:start position:0%
it needs to perform quite a lot of it so
this<00:20:24.820><c> summer</c><00:20:25.090><c> we</c><00:20:25.240><c> revamped</c><00:20:26.050><c> the</c><00:20:26.290><c> code</c><00:20:26.470><c> and</c>

00:20:26.700 --> 00:20:26.710 align:start position:0%
this summer we revamped the code and
 

00:20:26.710 --> 00:20:29.370 align:start position:0%
this summer we revamped the code and
improved<00:20:27.430><c> it</c><00:20:27.550><c> quite</c><00:20:27.850><c> a</c><00:20:27.880><c> bit</c><00:20:28.060><c> which</c><00:20:28.840><c> resolved</c>

00:20:29.370 --> 00:20:29.380 align:start position:0%
improved it quite a bit which resolved
 

00:20:29.380 --> 00:20:33.750 align:start position:0%
improved it quite a bit which resolved
in<00:20:29.470><c> a</c><00:20:29.590><c> nice</c><00:20:29.770><c> boost</c><00:20:30.040><c> and</c><00:20:30.670><c> shorter</c><00:20:31.060><c> poses</c><00:20:32.370><c> but</c><00:20:33.370><c> we</c>

00:20:33.750 --> 00:20:33.760 align:start position:0%
in a nice boost and shorter poses but we
 

00:20:33.760 --> 00:20:36.060 align:start position:0%
in a nice boost and shorter poses but we
do<00:20:34.060><c> not</c><00:20:34.150><c> stop</c><00:20:34.480><c> there</c><00:20:34.660><c> we</c><00:20:35.260><c> are</c><00:20:35.290><c> continuing</c><00:20:36.010><c> to</c>

00:20:36.060 --> 00:20:36.070 align:start position:0%
do not stop there we are continuing to
 

00:20:36.070 --> 00:20:39.000 align:start position:0%
do not stop there we are continuing to
push<00:20:36.400><c> even</c><00:20:36.700><c> further</c><00:20:36.910><c> continuously</c><00:20:37.810><c> and</c><00:20:38.200><c> at</c>

00:20:39.000 --> 00:20:39.010 align:start position:0%
push even further continuously and at
 

00:20:39.010 --> 00:20:41.790 align:start position:0%
push even further continuously and at
the<00:20:39.160><c> moment</c><00:20:39.420><c> there</c><00:20:40.420><c> are</c><00:20:40.600><c> patches</c><00:20:40.870><c> going</c><00:20:41.470><c> on</c><00:20:41.590><c> to</c>

00:20:41.790 --> 00:20:41.800 align:start position:0%
the moment there are patches going on to
 

00:20:41.800 --> 00:20:43.440 align:start position:0%
the moment there are patches going on to
rebuild<00:20:42.250><c> the</c><00:20:42.400><c> remember</c><00:20:42.790><c> sets</c><00:20:43.000><c> concurrently</c>

00:20:43.440 --> 00:20:43.450 align:start position:0%
rebuild the remember sets concurrently
 

00:20:43.450 --> 00:20:45.510 align:start position:0%
rebuild the remember sets concurrently
we<00:20:44.200><c> haven't</c><00:20:44.470><c> looked</c><00:20:44.590><c> into</c><00:20:44.830><c> those</c><00:20:45.010><c> today</c><00:20:45.160><c> but</c>

00:20:45.510 --> 00:20:45.520 align:start position:0%
we haven't looked into those today but
 

00:20:45.520 --> 00:20:47.100 align:start position:0%
we haven't looked into those today but
remember<00:20:45.670><c> sister</c><00:20:46.120><c> our</c><00:20:46.360><c> key</c><00:20:46.510><c> data</c><00:20:46.720><c> structure</c>

00:20:47.100 --> 00:20:47.110 align:start position:0%
remember sister our key data structure
 

00:20:47.110 --> 00:20:50.010 align:start position:0%
remember sister our key data structure
into<00:20:47.470><c> how</c><00:20:47.560><c> g1</c><00:20:47.950><c> works</c><00:20:48.300><c> and</c><00:20:49.300><c> in</c><00:20:49.420><c> the</c><00:20:49.480><c> future</c><00:20:49.750><c> we</c>

00:20:50.010 --> 00:20:50.020 align:start position:0%
into how g1 works and in the future we
 

00:20:50.020 --> 00:20:51.920 align:start position:0%
into how g1 works and in the future we
can<00:20:50.110><c> hopefully</c><00:20:50.320><c> rebuild</c><00:20:50.890><c> them</c><00:20:51.070><c> concurrently</c>

00:20:51.920 --> 00:20:51.930 align:start position:0%
can hopefully rebuild them concurrently
 

00:20:51.930 --> 00:20:54.450 align:start position:0%
can hopefully rebuild them concurrently
we<00:20:52.930><c> are</c><00:20:53.020><c> also</c><00:20:53.170><c> doing</c><00:20:53.380><c> a</c><00:20:53.560><c> lot</c><00:20:53.740><c> of</c><00:20:53.770><c> work</c><00:20:54.040><c> into</c><00:20:54.280><c> the</c>

00:20:54.450 --> 00:20:54.460 align:start position:0%
we are also doing a lot of work into the
 

00:20:54.460 --> 00:20:56.850 align:start position:0%
we are also doing a lot of work into the
ergonomics<00:20:54.910><c> engine</c><00:20:55.270><c> trying</c><00:20:56.050><c> to</c><00:20:56.260><c> improve</c><00:20:56.650><c> it</c>

00:20:56.850 --> 00:20:56.860 align:start position:0%
ergonomics engine trying to improve it
 

00:20:56.860 --> 00:20:58.590 align:start position:0%
ergonomics engine trying to improve it
and<00:20:57.040><c> improve</c><00:20:57.490><c> your</c><00:20:57.640><c> economic</c><00:20:57.700><c> so</c><00:20:58.210><c> you</c><00:20:58.420><c> don't</c>

00:20:58.590 --> 00:20:58.600 align:start position:0%
and improve your economic so you don't
 

00:20:58.600 --> 00:21:01.200 align:start position:0%
and improve your economic so you don't
have<00:20:58.690><c> to</c><00:20:58.840><c> tune</c><00:20:59.050><c> as</c><00:20:59.260><c> much</c><00:20:59.440><c> but</c><00:21:00.340><c> is</c><00:21:00.460><c> that</c><00:21:00.610><c> g1</c><00:21:01.060><c> can</c>

00:21:01.200 --> 00:21:01.210 align:start position:0%
have to tune as much but is that g1 can
 

00:21:01.210 --> 00:21:03.960 align:start position:0%
have to tune as much but is that g1 can
itself<00:21:01.510><c> figure</c><00:21:01.930><c> out</c><00:21:02.080><c> what</c><00:21:02.680><c> values</c><00:21:03.100><c> to</c><00:21:03.250><c> use</c><00:21:03.430><c> and</c>

00:21:03.960 --> 00:21:03.970 align:start position:0%
itself figure out what values to use and
 

00:21:03.970 --> 00:21:08.100 align:start position:0%
itself figure out what values to use and
what<00:21:04.210><c> flags</c><00:21:04.780><c> to</c><00:21:04.990><c> set</c><00:21:06.360><c> now</c><00:21:07.360><c> if</c><00:21:07.630><c> you</c><00:21:07.750><c> will</c><00:21:07.900><c> want</c>

00:21:08.100 --> 00:21:08.110 align:start position:0%
what flags to set now if you will want
 

00:21:08.110 --> 00:21:09.870 align:start position:0%
what flags to set now if you will want
to<00:21:08.260><c> stay</c><00:21:08.560><c> connected</c><00:21:08.740><c> and</c><00:21:09.220><c> I</c><00:21:09.430><c> hope</c><00:21:09.580><c> you</c><00:21:09.730><c> will</c>

00:21:09.870 --> 00:21:09.880 align:start position:0%
to stay connected and I hope you will
 

00:21:09.880 --> 00:21:13.860 align:start position:0%
to stay connected and I hope you will
please<00:21:10.810><c> join</c><00:21:11.200><c> the</c><00:21:11.350><c> community</c><00:21:11.760><c> hotspot</c><00:21:12.760><c> -</c><00:21:13.120><c> TC</c><00:21:13.660><c> -</c>

00:21:13.860 --> 00:21:13.870 align:start position:0%
please join the community hotspot - TC -
 

00:21:13.870 --> 00:21:17.010 align:start position:0%
please join the community hotspot - TC -
use<00:21:14.230><c> at</c><00:21:14.560><c> open</c><00:21:15.040><c> indicator</c><00:21:15.370><c> java.net</c><00:21:16.030><c> there</c><00:21:16.870><c> are</c>

00:21:17.010 --> 00:21:17.020 align:start position:0%
use at open indicator java.net there are
 

00:21:17.020 --> 00:21:18.810 align:start position:0%
use at open indicator java.net there are
a<00:21:17.050><c> lot</c><00:21:17.320><c> of</c><00:21:17.440><c> experienced</c><00:21:18.010><c> users</c><00:21:18.310><c> on</c><00:21:18.490><c> that</c><00:21:18.670><c> pain</c>

00:21:18.810 --> 00:21:18.820 align:start position:0%
a lot of experienced users on that pain
 

00:21:18.820 --> 00:21:21.630 align:start position:0%
a lot of experienced users on that pain
list<00:21:19.090><c> including</c><00:21:19.690><c> the</c><00:21:19.780><c> GC</c><00:21:20.080><c> developers</c><00:21:20.560><c> and</c><00:21:20.830><c> to</c>

00:21:21.630 --> 00:21:21.640 align:start position:0%
list including the GC developers and to
 

00:21:21.640 --> 00:21:23.160 align:start position:0%
list including the GC developers and to
all<00:21:21.760><c> you</c><00:21:21.970><c> users</c><00:21:22.360><c> who</c><00:21:22.480><c> are</c><00:21:22.570><c> on</c><00:21:22.630><c> there</c><00:21:22.810><c> helping</c>

00:21:23.160 --> 00:21:23.170 align:start position:0%
all you users who are on there helping
 

00:21:23.170 --> 00:21:25.110 align:start position:0%
all you users who are on there helping
each<00:21:23.560><c> other</c><00:21:23.710><c> thank</c><00:21:24.520><c> you</c><00:21:24.580><c> we</c><00:21:25.090><c> really</c>

00:21:25.110 --> 00:21:25.120 align:start position:0%
each other thank you we really
 

00:21:25.120 --> 00:21:27.510 align:start position:0%
each other thank you we really
appreciate<00:21:25.840><c> that</c><00:21:25.870><c> you</c><00:21:26.080><c> knew</c><00:21:26.890><c> the</c><00:21:27.130><c> ones</c><00:21:27.310><c> who</c>

00:21:27.510 --> 00:21:27.520 align:start position:0%
appreciate that you knew the ones who
 

00:21:27.520 --> 00:21:29.820 align:start position:0%
appreciate that you knew the ones who
tuned<00:21:27.910><c> a</c><00:21:28.000><c> lot</c><00:21:28.180><c> and</c><00:21:28.450><c> have</c><00:21:29.080><c> a</c><00:21:29.110><c> lot</c><00:21:29.260><c> of</c><00:21:29.290><c> experience</c>

00:21:29.820 --> 00:21:29.830 align:start position:0%
tuned a lot and have a lot of experience
 

00:21:29.830 --> 00:21:31.020 align:start position:0%
tuned a lot and have a lot of experience
helped<00:21:30.070><c> out</c><00:21:30.220><c> the</c><00:21:30.250><c> newcomers</c><00:21:30.850><c> to</c><00:21:30.910><c> the</c>

00:21:31.020 --> 00:21:31.030 align:start position:0%
helped out the newcomers to the
 

00:21:31.030 --> 00:21:33.900 align:start position:0%
helped out the newcomers to the
community<00:21:31.480><c> and</c><00:21:31.690><c> as</c><00:21:32.110><c> a</c><00:21:32.140><c> questions</c><00:21:32.680><c> we</c><00:21:33.460><c> the</c><00:21:33.700><c> GC</c>

00:21:33.900 --> 00:21:33.910 align:start position:0%
community and as a questions we the GC
 

00:21:33.910 --> 00:21:35.490 align:start position:0%
community and as a questions we the GC
developers<00:21:34.360><c> also</c><00:21:34.750><c> read</c><00:21:34.900><c> this</c><00:21:35.020><c> mailing</c><00:21:35.260><c> list</c>

00:21:35.490 --> 00:21:35.500 align:start position:0%
developers also read this mailing list
 

00:21:35.500 --> 00:21:37.740 align:start position:0%
developers also read this mailing list
but<00:21:35.770><c> unfortunately</c><00:21:36.490><c> we</c><00:21:37.060><c> don't</c><00:21:37.180><c> always</c><00:21:37.420><c> have</c>

00:21:37.740 --> 00:21:37.750 align:start position:0%
but unfortunately we don't always have
 

00:21:37.750 --> 00:21:39.570 align:start position:0%
but unfortunately we don't always have
time<00:21:37.900><c> to</c><00:21:37.960><c> answers</c><00:21:38.470><c> so</c><00:21:38.800><c> again</c><00:21:39.070><c> thank</c><00:21:39.370><c> you</c><00:21:39.460><c> for</c>

00:21:39.570 --> 00:21:39.580 align:start position:0%
time to answers so again thank you for
 

00:21:39.580 --> 00:21:41.820 align:start position:0%
time to answers so again thank you for
your<00:21:39.640><c> Co</c><00:21:39.910><c> providing</c><00:21:40.330><c> answers</c><00:21:40.560><c> you</c><00:21:41.560><c> can</c><00:21:41.710><c> also</c>

00:21:41.820 --> 00:21:41.830 align:start position:0%
your Co providing answers you can also
 

00:21:41.830 --> 00:21:44.970 align:start position:0%
your Co providing answers you can also
find<00:21:42.070><c> us</c><00:21:42.220><c> using</c><00:21:42.610><c> I</c><00:21:42.760><c> am</c><00:21:42.940><c> on</c><00:21:43.410><c> OpenJDK</c><00:21:44.410><c> channel</c><00:21:44.800><c> on</c>

00:21:44.970 --> 00:21:44.980 align:start position:0%
find us using I am on OpenJDK channel on
 

00:21:44.980 --> 00:21:46.700 align:start position:0%
find us using I am on OpenJDK channel on
IRC<00:21:45.550><c> top</c><00:21:46.000><c> c.net</c>

00:21:46.700 --> 00:21:46.710 align:start position:0%
IRC top c.net
 

00:21:46.710 --> 00:21:49.470 align:start position:0%
IRC top c.net
we<00:21:47.710><c> can</c><00:21:48.040><c> chat</c><00:21:48.550><c> with</c><00:21:48.700><c> us</c><00:21:48.820><c> if</c><00:21:49.090><c> you</c><00:21:49.180><c> have</c><00:21:49.330><c> any</c>

00:21:49.470 --> 00:21:49.480 align:start position:0%
we can chat with us if you have any
 

00:21:49.480 --> 00:21:53.120 align:start position:0%
we can chat with us if you have any
questions<00:21:49.930><c> we</c><00:21:50.170><c> are</c><00:21:50.200><c> usually</c><00:21:50.740><c> around</c><00:21:50.980><c> and</c>

00:21:53.120 --> 00:21:53.130 align:start position:0%
questions we are usually around and
 

00:21:53.130 --> 00:21:56.070 align:start position:0%
questions we are usually around and
lastly<00:21:54.130><c> but</c><00:21:54.340><c> not</c><00:21:54.400><c> least</c><00:21:54.700><c> you</c><00:21:55.180><c> can</c><00:21:55.210><c> find</c><00:21:55.630><c> me</c><00:21:55.810><c> and</c>

00:21:56.070 --> 00:21:56.080 align:start position:0%
lastly but not least you can find me and
 

00:21:56.080 --> 00:21:59.360 align:start position:0%
lastly but not least you can find me and
several<00:21:56.470><c> others</c><00:21:56.680><c> of</c><00:21:56.710><c> the</c><00:21:57.010><c> JDK</c><00:21:57.340><c> and</c><00:21:57.580><c> JVM</c><00:21:58.210><c> devil</c>

00:21:59.360 --> 00:21:59.370 align:start position:0%
several others of the JDK and JVM devil
 

00:21:59.370 --> 00:22:00.950 align:start position:0%
several others of the JDK and JVM devil
in<00:21:59.610><c> the</c><00:21:59.760><c> DevOps</c><00:22:00.120><c> corner</c><00:22:00.480><c> in</c><00:22:00.659><c> the</c><00:22:00.750><c> Oracle</c>

00:22:00.950 --> 00:22:00.960 align:start position:0%
in the DevOps corner in the Oracle
 

00:22:00.960 --> 00:22:03.799 align:start position:0%
in the DevOps corner in the Oracle
developer<00:22:01.200><c> long</c><00:22:01.679><c> share</c><00:22:02.039><c> in</c><00:22:02.130><c> Moscone</c><00:22:02.460><c> West</c><00:22:02.809><c> you</c>

00:22:03.799 --> 00:22:03.809 align:start position:0%
developer long share in Moscone West you
 

00:22:03.809 --> 00:22:06.230 align:start position:0%
developer long share in Moscone West you
can<00:22:03.840><c> learn</c><00:22:04.200><c> more</c><00:22:04.529><c> about</c><00:22:04.610><c> working</c><00:22:05.610><c> in</c><00:22:05.789><c> 2g</c><00:22:05.940><c> one</c>

00:22:06.230 --> 00:22:06.240 align:start position:0%
can learn more about working in 2g one
 

00:22:06.240 --> 00:22:08.570 align:start position:0%
can learn more about working in 2g one
at<00:22:06.390><c> open</c><00:22:06.720><c> indicator</c><00:22:07.020><c> java.net</c><00:22:07.500><c> and</c><00:22:07.919><c> learn</c>

00:22:08.570 --> 00:22:08.580 align:start position:0%
at open indicator java.net and learn
 

00:22:08.580 --> 00:22:10.730 align:start position:0%
at open indicator java.net and learn
more<00:22:08.850><c> about</c><00:22:08.940><c> worker</c><00:22:09.330><c> and</c><00:22:09.630><c> java</c><00:22:09.990><c> at</c><00:22:10.140><c> work</c><00:22:10.350><c> on</c>

00:22:10.730 --> 00:22:10.740 align:start position:0%
more about worker and java at work on
 

00:22:10.740 --> 00:22:13.730 align:start position:0%
more about worker and java at work on
java<00:22:11.250><c> if</c><00:22:11.580><c> you're</c><00:22:12.120><c> on</c><00:22:12.240><c> twitter</c><00:22:12.510><c> please</c><00:22:12.900><c> follow</c>

00:22:13.730 --> 00:22:13.740 align:start position:0%
java if you're on twitter please follow
 

00:22:13.740 --> 00:22:16.820 align:start position:0%
java if you're on twitter please follow
at<00:22:14.130><c> OpenJDK</c><00:22:14.820><c> over</c><00:22:15.419><c> at</c><00:22:15.600><c> worker</c><00:22:15.900><c> and</c><00:22:16.260><c> the</c>

00:22:16.820 --> 00:22:16.830 align:start position:0%
at OpenJDK over at worker and the
 

00:22:16.830 --> 00:22:20.090 align:start position:0%
at OpenJDK over at worker and the
hashtags<00:22:17.279><c> java</c><00:22:17.610><c> one</c><00:22:17.850><c> and</c><00:22:18.090><c> DevOps</c><00:22:18.690><c> and</c><00:22:19.100><c> with</c>

00:22:20.090 --> 00:22:20.100 align:start position:0%
hashtags java one and DevOps and with
 

00:22:20.100 --> 00:22:21.830 align:start position:0%
hashtags java one and DevOps and with
that<00:22:20.220><c> I</c><00:22:20.250><c> would</c><00:22:20.520><c> like</c><00:22:20.700><c> to</c><00:22:20.730><c> leave</c><00:22:21.029><c> say</c><00:22:21.450><c> thank</c><00:22:21.690><c> you</c>

00:22:21.830 --> 00:22:21.840 align:start position:0%
that I would like to leave say thank you
 

00:22:21.840 --> 00:22:30.019 align:start position:0%
that I would like to leave say thank you
and<00:22:22.020><c> the</c><00:22:22.200><c> jumpy</c><00:22:22.559><c> of</c><00:22:22.650><c> time</c><00:22:22.860><c> to</c><00:22:23.130><c> questions</c><00:22:29.029><c> so</c>

00:22:30.019 --> 00:22:30.029 align:start position:0%
and the jumpy of time to questions so
 

00:22:30.029 --> 00:22:35.180 align:start position:0%
and the jumpy of time to questions so
yeah<00:22:30.570><c> question</c>

00:22:35.180 --> 00:22:35.190 align:start position:0%
 
 

00:22:35.190 --> 00:22:37.460 align:start position:0%
 
no<00:22:35.850><c> I</c><00:22:35.880><c> the</c><00:22:36.360><c> question</c><00:22:36.659><c> is</c><00:22:36.750><c> I'm</c><00:22:36.929><c> gonna</c><00:22:37.049><c> repeat</c><00:22:37.320><c> it</c>

00:22:37.460 --> 00:22:37.470 align:start position:0%
no I the question is I'm gonna repeat it
 

00:22:37.470 --> 00:22:39.860 align:start position:0%
no I the question is I'm gonna repeat it
for<00:22:37.620><c> the</c><00:22:37.649><c> video</c><00:22:37.950><c> and</c><00:22:38.730><c> they</c><00:22:38.940><c> do</c><00:22:39.450><c> I</c><00:22:39.510><c> have</c><00:22:39.720><c> any</c>

00:22:39.860 --> 00:22:39.870 align:start position:0%
for the video and they do I have any
 

00:22:39.870 --> 00:22:41.210 align:start position:0%
for the video and they do I have any
performance<00:22:40.289><c> numbers</c><00:22:40.770><c> that</c><00:22:40.830><c> I</c><00:22:40.890><c> can</c><00:22:40.950><c> share</c>

00:22:41.210 --> 00:22:41.220 align:start position:0%
performance numbers that I can share
 

00:22:41.220 --> 00:22:43.850 align:start position:0%
performance numbers that I can share
with<00:22:41.250><c> you</c><00:22:41.399><c> or</c><00:22:41.640><c> benchmarks</c><00:22:42.179><c> result</c><00:22:42.620><c> and</c><00:22:43.620><c> no</c><00:22:43.830><c> I</c>

00:22:43.850 --> 00:22:43.860 align:start position:0%
with you or benchmarks result and no I
 

00:22:43.860 --> 00:22:45.169 align:start position:0%
with you or benchmarks result and no I
don't<00:22:44.159><c> have</c><00:22:44.279><c> anyone</c><00:22:44.580><c> I</c><00:22:44.640><c> can</c><00:22:44.820><c> share</c><00:22:45.000><c> with</c><00:22:45.029><c> you</c>

00:22:45.169 --> 00:22:45.179 align:start position:0%
don't have anyone I can share with you
 

00:22:45.179 --> 00:22:47.779 align:start position:0%
don't have anyone I can share with you
one<00:22:45.450><c> slice</c><00:22:45.690><c> today</c><00:22:45.929><c> unfortunately</c><00:22:46.080><c> but</c><00:22:46.789><c> please</c>

00:22:47.779 --> 00:22:47.789 align:start position:0%
one slice today unfortunately but please
 

00:22:47.789 --> 00:22:49.250 align:start position:0%
one slice today unfortunately but please
try<00:22:48.000><c> it</c><00:22:48.029><c> out</c><00:22:48.179><c> and</c><00:22:48.390><c> see</c><00:22:48.480><c> how</c><00:22:48.659><c> it</c><00:22:48.690><c> performs</c><00:22:49.140><c> I</c>

00:22:49.250 --> 00:22:49.260 align:start position:0%
try it out and see how it performs I
 

00:22:49.260 --> 00:22:51.580 align:start position:0%
try it out and see how it performs I
think<00:22:49.470><c> you</c><00:22:49.590><c> will</c><00:22:49.710><c> be</c><00:22:49.860><c> hopefully</c><00:22:50.250><c> satisfied</c>

00:22:51.580 --> 00:22:51.590 align:start position:0%
think you will be hopefully satisfied
 

00:22:51.590 --> 00:22:54.519 align:start position:0%
think you will be hopefully satisfied
yeah<00:22:52.590><c> question</c>

00:22:54.519 --> 00:22:54.529 align:start position:0%
yeah question
 

00:22:54.529 --> 00:22:59.419 align:start position:0%
yeah question
the<00:22:55.529><c> story</c><00:22:55.770><c> come</c><00:22:55.950><c> again</c><00:22:56.130><c> please</c><00:22:58.130><c> yeah</c><00:22:59.130><c> so</c><00:22:59.340><c> the</c>

00:22:59.419 --> 00:22:59.429 align:start position:0%
the story come again please yeah so the
 

00:22:59.429 --> 00:23:01.250 align:start position:0%
the story come again please yeah so the
question<00:22:59.549><c> is</c><00:22:59.850><c> how</c><00:23:00.090><c> big</c><00:23:00.299><c> are</c><00:23:00.480><c> those</c><00:23:00.690><c> regions</c><00:23:01.140><c> a</c>

00:23:01.250 --> 00:23:01.260 align:start position:0%
question is how big are those regions a
 

00:23:01.260 --> 00:23:03.440 align:start position:0%
question is how big are those regions a
region<00:23:01.830><c> can</c><00:23:01.980><c> be</c><00:23:02.070><c> anywhere</c><00:23:02.460><c> from</c><00:23:02.520><c> one</c><00:23:02.789><c> megabyte</c>

00:23:03.440 --> 00:23:03.450 align:start position:0%
region can be anywhere from one megabyte
 

00:23:03.450 --> 00:23:06.500 align:start position:0%
region can be anywhere from one megabyte
to<00:23:04.200><c> 32</c><00:23:05.130><c> megabytes</c><00:23:05.429><c> it</c><00:23:05.789><c> depends</c><00:23:06.210><c> on</c><00:23:06.299><c> the</c><00:23:06.419><c> you</c>

00:23:06.500 --> 00:23:06.510 align:start position:0%
to 32 megabytes it depends on the you
 

00:23:06.510 --> 00:23:09.919 align:start position:0%
to 32 megabytes it depends on the you
can<00:23:06.690><c> set</c><00:23:06.809><c> that</c><00:23:06.899><c> yourself</c><00:23:07.320><c> with</c><00:23:07.649><c> -</c><00:23:07.919><c> x6</c><00:23:08.450><c> g1</c><00:23:09.480><c> he</c>

00:23:09.919 --> 00:23:09.929 align:start position:0%
can set that yourself with - x6 g1 he
 

00:23:09.929 --> 00:23:12.740 align:start position:0%
can set that yourself with - x6 g1 he
produces<00:23:10.440><c> but</c><00:23:10.980><c> I</c><00:23:11.370><c> would</c><00:23:11.610><c> probably</c><00:23:12.539><c> recommend</c>

00:23:12.740 --> 00:23:12.750 align:start position:0%
produces but I would probably recommend
 

00:23:12.750 --> 00:23:14.600 align:start position:0%
produces but I would probably recommend
that<00:23:13.289><c> you</c><00:23:13.470><c> leave</c><00:23:13.590><c> do</c><00:23:14.010><c> you</c><00:23:14.100><c> want</c><00:23:14.309><c> to</c><00:23:14.429><c> select</c>

00:23:14.600 --> 00:23:14.610 align:start position:0%
that you leave do you want to select
 

00:23:14.610 --> 00:23:16.820 align:start position:0%
that you leave do you want to select
appropriate<00:23:14.960><c> so</c><00:23:15.960><c> I</c><00:23:15.990><c> have</c><00:23:16.169><c> the</c><00:23:16.260><c> region</c><00:23:16.500><c> it</c><00:23:16.649><c> will</c>

00:23:16.820 --> 00:23:16.830 align:start position:0%
appropriate so I have the region it will
 

00:23:16.830 --> 00:23:18.500 align:start position:0%
appropriate so I have the region it will
look<00:23:17.039><c> at</c><00:23:17.190><c> the</c><00:23:17.279><c> heap</c><00:23:17.429><c> size</c><00:23:17.669><c> in</c><00:23:17.820><c> total</c><00:23:18.149><c> and</c><00:23:18.390><c> then</c>

00:23:18.500 --> 00:23:18.510 align:start position:0%
look at the heap size in total and then
 

00:23:18.510 --> 00:23:20.450 align:start position:0%
look at the heap size in total and then
decide<00:23:18.899><c> but</c><00:23:19.740><c> if</c><00:23:19.919><c> you</c><00:23:20.010><c> are</c><00:23:20.130><c> having</c><00:23:20.279><c> problems</c>

00:23:20.450 --> 00:23:20.460 align:start position:0%
decide but if you are having problems
 

00:23:20.460 --> 00:23:22.549 align:start position:0%
decide but if you are having problems
with<00:23:20.760><c> for</c><00:23:21.090><c> example</c><00:23:21.539><c> humongous</c><00:23:21.990><c> allocations</c>

00:23:22.549 --> 00:23:22.559 align:start position:0%
with for example humongous allocations
 

00:23:22.559 --> 00:23:24.440 align:start position:0%
with for example humongous allocations
and<00:23:22.740><c> humongous</c><00:23:23.130><c> objects</c><00:23:23.520><c> then</c><00:23:24.149><c> you</c><00:23:24.270><c> might</c>

00:23:24.440 --> 00:23:24.450 align:start position:0%
and humongous objects then you might
 

00:23:24.450 --> 00:23:30.580 align:start position:0%
and humongous objects then you might
want<00:23:24.659><c> to</c><00:23:24.690><c> bump</c><00:23:24.990><c> it</c><00:23:25.140><c> up</c><00:23:25.230><c> a</c><00:23:25.289><c> bit</c>

00:23:30.580 --> 00:23:30.590 align:start position:0%
 
 

00:23:30.590 --> 00:23:34.230 align:start position:0%
 
yeah<00:23:31.590><c> question</c><00:23:31.830><c> again</c><00:23:32.070><c> over</c><00:23:32.250><c> here</c>

00:23:34.230 --> 00:23:34.240 align:start position:0%
yeah question again over here
 

00:23:34.240 --> 00:23:38.140 align:start position:0%
yeah question again over here
yeah<00:23:35.770><c> so</c><00:23:36.770><c> the</c><00:23:36.890><c> question</c><00:23:37.190><c> is</c><00:23:37.309><c> if</c><00:23:37.549><c> an</c><00:23:37.730><c> object</c><00:23:37.850><c> is</c>

00:23:38.140 --> 00:23:38.150 align:start position:0%
yeah so the question is if an object is
 

00:23:38.150 --> 00:23:39.700 align:start position:0%
yeah so the question is if an object is
bigger<00:23:38.450><c> than</c><00:23:38.600><c> reading</c><00:23:38.870><c> size</c><00:23:39.140><c> I</c><00:23:39.169><c> said</c><00:23:39.500><c> that</c><00:23:39.620><c> the</c>

00:23:39.700 --> 00:23:39.710 align:start position:0%
bigger than reading size I said that the
 

00:23:39.710 --> 00:23:41.140 align:start position:0%
bigger than reading size I said that the
readings<00:23:40.010><c> might</c><00:23:40.190><c> be</c><00:23:40.370><c> as</c><00:23:40.460><c> small</c><00:23:40.850><c> as</c><00:23:41.000><c> one</c>

00:23:41.140 --> 00:23:41.150 align:start position:0%
readings might be as small as one
 

00:23:41.150 --> 00:23:42.850 align:start position:0%
readings might be as small as one
megabyte<00:23:41.539><c> what</c><00:23:42.080><c> if</c><00:23:42.230><c> you</c><00:23:42.350><c> allocate</c><00:23:42.679><c> for</c>

00:23:42.850 --> 00:23:42.860 align:start position:0%
megabyte what if you allocate for
 

00:23:42.860 --> 00:23:44.470 align:start position:0%
megabyte what if you allocate for
example<00:23:43.190><c> one</c><00:23:43.520><c> and</c><00:23:43.669><c> a</c><00:23:43.700><c> half</c><00:23:43.820><c> megabyte</c><00:23:44.240><c> byte</c>

00:23:44.470 --> 00:23:44.480 align:start position:0%
example one and a half megabyte byte
 

00:23:44.480 --> 00:23:47.680 align:start position:0%
example one and a half megabyte byte
array<00:23:44.830><c> for</c><00:23:45.830><c> some</c><00:23:46.100><c> R</c><00:23:46.340><c> no</c><00:23:46.549><c> image</c><00:23:47.299><c> data</c><00:23:47.539><c> or</c>

00:23:47.680 --> 00:23:47.690 align:start position:0%
array for some R no image data or
 

00:23:47.690 --> 00:23:48.549 align:start position:0%
array for some R no image data or
something

00:23:48.549 --> 00:23:48.559 align:start position:0%
something
 

00:23:48.559 --> 00:23:51.340 align:start position:0%
something
well<00:23:49.429><c> when</c><00:23:49.610><c> G</c><00:23:49.760><c> 1</c><00:23:49.940><c> allocates</c><00:23:50.480><c> then</c><00:23:50.780><c> a</c><00:23:50.809><c> humongous</c>

00:23:51.340 --> 00:23:51.350 align:start position:0%
well when G 1 allocates then a humongous
 

00:23:51.350 --> 00:23:53.200 align:start position:0%
well when G 1 allocates then a humongous
region<00:23:51.710><c> and</c><00:23:51.950><c> a</c><00:23:51.980><c> humongous</c><00:23:52.400><c> region</c><00:23:52.700><c> can</c><00:23:52.910><c> span</c>

00:23:53.200 --> 00:23:53.210 align:start position:0%
region and a humongous region can span
 

00:23:53.210 --> 00:23:55.510 align:start position:0%
region and a humongous region can span
multiple<00:23:53.480><c> regions</c><00:23:54.140><c> so</c><00:23:54.830><c> the</c><00:23:54.919><c> object</c><00:23:55.250><c> will</c><00:23:55.370><c> be</c>

00:23:55.510 --> 00:23:55.520 align:start position:0%
multiple regions so the object will be
 

00:23:55.520 --> 00:23:57.610 align:start position:0%
multiple regions so the object will be
consecutively<00:23:56.090><c> laid</c><00:23:56.299><c> out</c><00:23:56.450><c> in</c><00:23:56.780><c> multiple</c><00:23:57.169><c> human</c>

00:23:57.610 --> 00:23:57.620 align:start position:0%
consecutively laid out in multiple human
 

00:23:57.620 --> 00:23:59.799 align:start position:0%
consecutively laid out in multiple human
resilience<00:23:58.160><c> in</c><00:23:58.520><c> this</c><00:23:58.669><c> case</c><00:23:58.880><c> too</c><00:23:59.390><c> if</c><00:23:59.630><c> you</c><00:23:59.720><c> have</c>

00:23:59.799 --> 00:23:59.809 align:start position:0%
resilience in this case too if you have
 

00:23:59.809 --> 00:24:02.110 align:start position:0%
resilience in this case too if you have
a<00:23:59.870><c> 1/2</c><00:24:00.350><c> megabyte</c><00:24:00.799><c> allocation</c><00:24:01.309><c> and</c><00:24:01.520><c> 1</c><00:24:01.730><c> megabyte</c>

00:24:02.110 --> 00:24:02.120 align:start position:0%
a 1/2 megabyte allocation and 1 megabyte
 

00:24:02.120 --> 00:24:04.750 align:start position:0%
a 1/2 megabyte allocation and 1 megabyte
regions<00:24:02.650><c> but</c><00:24:03.650><c> it</c><00:24:03.770><c> would</c><00:24:03.919><c> still</c><00:24:04.010><c> be</c><00:24:04.160><c> the</c><00:24:04.429><c> only</c>

00:24:04.750 --> 00:24:04.760 align:start position:0%
regions but it would still be the only
 

00:24:04.760 --> 00:24:07.090 align:start position:0%
regions but it would still be the only
object<00:24:05.120><c> in</c><00:24:05.299><c> those</c><00:24:05.510><c> two</c><00:24:05.780><c> regions</c><00:24:06.260><c> which</c><00:24:06.919><c> will</c>

00:24:07.090 --> 00:24:07.100 align:start position:0%
object in those two regions which will
 

00:24:07.100 --> 00:24:12.220 align:start position:0%
object in those two regions which will
be<00:24:07.220><c> next</c><00:24:07.580><c> to</c><00:24:07.669><c> each</c><00:24:07.700><c> other</c><00:24:10.809><c> yeah</c><00:24:11.809><c> question</c><00:24:12.020><c> in</c>

00:24:12.220 --> 00:24:12.230 align:start position:0%
be next to each other yeah question in
 

00:24:12.230 --> 00:24:15.690 align:start position:0%
be next to each other yeah question in
the<00:24:12.289><c> back</c>

00:24:15.690 --> 00:24:15.700 align:start position:0%
 
 

00:24:15.700 --> 00:24:18.700 align:start position:0%
 
so<00:24:16.700><c> the</c><00:24:16.820><c> question</c><00:24:17.150><c> is</c><00:24:17.270><c> is</c><00:24:17.659><c> this</c><00:24:17.929><c> features</c><00:24:18.409><c> to</c>

00:24:18.700 --> 00:24:18.710 align:start position:0%
so the question is is this features to
 

00:24:18.710 --> 00:24:20.110 align:start position:0%
so the question is is this features to
eat<00:24:18.799><c> application</c><00:24:19.340><c> that</c><00:24:19.520><c> was</c><00:24:19.669><c> released</c><00:24:19.909><c> in</c>

00:24:20.110 --> 00:24:20.120 align:start position:0%
eat application that was released in
 

00:24:20.120 --> 00:24:22.750 align:start position:0%
eat application that was released in
8020<00:24:20.780><c> on</c><00:24:20.929><c> by</c><00:24:21.140><c> default</c><00:24:21.470><c> now</c><00:24:21.950><c> it</c><00:24:22.159><c> is</c><00:24:22.280><c> not</c><00:24:22.400><c> on</c><00:24:22.610><c> by</c>

00:24:22.750 --> 00:24:22.760 align:start position:0%
8020 on by default now it is not on by
 

00:24:22.760 --> 00:24:25.690 align:start position:0%
8020 on by default now it is not on by
default<00:24:22.820><c> since</c><00:24:23.630><c> there</c><00:24:23.900><c> is</c><00:24:24.020><c> a</c><00:24:24.289><c> little</c><00:24:24.590><c> cost</c><00:24:24.890><c> in</c>

00:24:25.690 --> 00:24:25.700 align:start position:0%
default since there is a little cost in
 

00:24:25.700 --> 00:24:27.520 align:start position:0%
default since there is a little cost in
terms<00:24:25.880><c> of</c><00:24:26.059><c> CPU</c><00:24:26.240><c> both</c><00:24:26.720><c> will</c><00:24:26.870><c> concurrent</c><00:24:27.380><c> work</c>

00:24:27.520 --> 00:24:27.530 align:start position:0%
terms of CPU both will concurrent work
 

00:24:27.530 --> 00:24:30.039 align:start position:0%
terms of CPU both will concurrent work
and<00:24:27.860><c> but</c><00:24:28.700><c> and</c><00:24:28.909><c> also</c><00:24:29.210><c> will</c><00:24:29.330><c> work</c><00:24:29.539><c> you</c><00:24:29.720><c> in</c><00:24:29.809><c> a</c><00:24:29.870><c> pose</c>

00:24:30.039 --> 00:24:30.049 align:start position:0%
and but and also will work you in a pose
 

00:24:30.049 --> 00:24:32.649 align:start position:0%
and but and also will work you in a pose
we<00:24:31.039><c> have</c><00:24:31.159><c> it</c><00:24:31.280><c> off</c><00:24:31.400><c> by</c><00:24:31.669><c> default</c><00:24:31.970><c> so</c><00:24:32.240><c> you</c><00:24:32.299><c> can</c><00:24:32.480><c> opt</c>

00:24:32.649 --> 00:24:32.659 align:start position:0%
we have it off by default so you can opt
 

00:24:32.659 --> 00:24:43.360 align:start position:0%
we have it off by default so you can opt
into<00:24:32.900><c> it</c><00:24:33.970><c> yeah</c><00:24:34.970><c> question</c><00:24:35.360><c> the</c><00:24:35.419><c> front</c>

00:24:43.360 --> 00:24:43.370 align:start position:0%
 
 

00:24:43.370 --> 00:24:45.620 align:start position:0%
 
so<00:24:44.370><c> the</c><00:24:44.490><c> question</c><00:24:44.850><c> is</c><00:24:44.970><c> yeah</c><00:24:45.269><c> I</c><00:24:45.299><c> get</c><00:24:45.539><c> the</c>

00:24:45.620 --> 00:24:45.630 align:start position:0%
so the question is yeah I get the
 

00:24:45.630 --> 00:24:46.879 align:start position:0%
so the question is yeah I get the
questions<00:24:45.929><c> so</c><00:24:46.260><c> if</c><00:24:46.380><c> the</c><00:24:46.500><c> question</c><00:24:46.830><c> the</c>

00:24:46.879 --> 00:24:46.889 align:start position:0%
questions so if the question the
 

00:24:46.889 --> 00:24:49.279 align:start position:0%
questions so if the question the
question<00:24:46.980><c> is</c><00:24:47.279><c> if</c><00:24:48.120><c> an</c><00:24:48.360><c> object</c><00:24:48.480><c> is</c><00:24:48.750><c> copied</c><00:24:49.169><c> from</c>

00:24:49.279 --> 00:24:49.289 align:start position:0%
question is if an object is copied from
 

00:24:49.289 --> 00:24:51.620 align:start position:0%
question is if an object is copied from
one<00:24:49.380><c> region</c><00:24:50.100><c> to</c><00:24:50.309><c> another</c><00:24:50.490><c> region</c><00:24:50.820><c> how</c><00:24:51.330><c> do</c><00:24:51.389><c> we</c>

00:24:51.620 --> 00:24:51.630 align:start position:0%
one region to another region how do we
 

00:24:51.630 --> 00:24:55.070 align:start position:0%
one region to another region how do we
make<00:24:51.870><c> sure</c><00:24:52.370><c> that</c><00:24:53.370><c> no</c><00:24:53.610><c> Java</c><00:24:54.149><c> threads</c><00:24:54.299><c> or</c><00:24:54.779><c> your</c>

00:24:55.070 --> 00:24:55.080 align:start position:0%
make sure that no Java threads or your
 

00:24:55.080 --> 00:24:56.990 align:start position:0%
make sure that no Java threads or your
program<00:24:55.529><c> is</c><00:24:55.679><c> modifying</c><00:24:56.370><c> to</c><00:24:56.460><c> obey</c><00:24:56.639><c> at</c><00:24:56.730><c> the</c><00:24:56.820><c> same</c>

00:24:56.990 --> 00:24:57.000 align:start position:0%
program is modifying to obey at the same
 

00:24:57.000 --> 00:25:00.289 align:start position:0%
program is modifying to obey at the same
time<00:24:57.299><c> the</c><00:24:58.110><c> application</c><00:24:58.230><c> is</c><00:24:58.620><c> stopped</c><00:24:58.889><c> the</c><00:24:59.880><c> JVM</c>

00:25:00.289 --> 00:25:00.299 align:start position:0%
time the application is stopped the JVM
 

00:25:00.299 --> 00:25:02.269 align:start position:0%
time the application is stopped the JVM
can<00:25:00.480><c> stop</c><00:25:00.690><c> the</c><00:25:00.840><c> java</c><00:25:01.019><c> application</c><00:25:01.130><c> which</c><00:25:02.130><c> you</c>

00:25:02.269 --> 00:25:02.279 align:start position:0%
can stop the java application which you
 

00:25:02.279 --> 00:25:04.370 align:start position:0%
can stop the java application which you
will<00:25:02.460><c> not</c><00:25:02.549><c> know</c><00:25:02.760><c> this</c><00:25:03.000><c> besides</c><00:25:03.389><c> gee</c><00:25:04.049><c> suppose</c>

00:25:04.370 --> 00:25:04.380 align:start position:0%
will not know this besides gee suppose
 

00:25:04.380 --> 00:25:06.620 align:start position:0%
will not know this besides gee suppose
in<00:25:04.529><c> the</c><00:25:04.590><c> log</c><00:25:05.029><c> but</c><00:25:06.029><c> the</c><00:25:06.120><c> application</c><00:25:06.539><c> is</c>

00:25:06.620 --> 00:25:06.630 align:start position:0%
in the log but the application is
 

00:25:06.630 --> 00:25:08.480 align:start position:0%
in the log but the application is
stopped<00:25:06.870><c> -</c><00:25:07.049><c> no</c><00:25:07.200><c> no</c><00:25:07.529><c> work</c><00:25:08.130><c> for</c><00:25:08.370><c> your</c>

00:25:08.480 --> 00:25:08.490 align:start position:0%
stopped - no no work for your
 

00:25:08.490 --> 00:25:10.070 align:start position:0%
stopped - no no work for your
application<00:25:08.909><c> is</c><00:25:09.000><c> ongoing</c><00:25:09.450><c> at</c><00:25:09.539><c> the</c><00:25:09.630><c> same</c><00:25:09.809><c> time</c>

00:25:10.070 --> 00:25:10.080 align:start position:0%
application is ongoing at the same time
 

00:25:10.080 --> 00:25:13.610 align:start position:0%
application is ongoing at the same time
as<00:25:10.289><c> the</c><00:25:10.380><c> object</c><00:25:10.679><c> is</c><00:25:10.799><c> copied</c><00:25:12.409><c> yeah</c><00:25:13.409><c> question</c>

00:25:13.610 --> 00:25:13.620 align:start position:0%
as the object is copied yeah question
 

00:25:13.620 --> 00:25:20.570 align:start position:0%
as the object is copied yeah question
air<00:25:13.919><c> filter</c><00:25:18.799><c> so</c><00:25:19.799><c> the</c><00:25:19.889><c> question</c><00:25:20.220><c> is</c><00:25:20.340><c> for</c>

00:25:20.570 --> 00:25:20.580 align:start position:0%
air filter so the question is for
 

00:25:20.580 --> 00:25:22.039 align:start position:0%
air filter so the question is for
adjunct<00:25:21.029><c> collections</c><00:25:21.480><c> are</c><00:25:21.750><c> there</c><00:25:21.929><c> any</c>

00:25:22.039 --> 00:25:22.049 align:start position:0%
adjunct collections are there any
 

00:25:22.049 --> 00:25:24.590 align:start position:0%
adjunct collections are there any
options<00:25:22.470><c> similar</c><00:25:22.830><c> to</c><00:25:22.919><c> concurrent</c><00:25:23.279><c> marking</c><00:25:23.700><c> do</c>

00:25:24.590 --> 00:25:24.600 align:start position:0%
options similar to concurrent marking do
 

00:25:24.600 --> 00:25:27.169 align:start position:0%
options similar to concurrent marking do
you<00:25:24.720><c> mean</c><00:25:24.899><c> for</c><00:25:25.110><c> example</c><00:25:25.460><c> two</c><00:25:26.460><c> concurrently</c>

00:25:27.169 --> 00:25:27.179 align:start position:0%
you mean for example two concurrently
 

00:25:27.179 --> 00:25:31.240 align:start position:0%
you mean for example two concurrently
find<00:25:27.510><c> the</c><00:25:27.600><c> live</c><00:25:27.750><c> objects</c><00:25:28.110><c> engine</c><00:25:28.620><c> witness</c>

00:25:31.240 --> 00:25:31.250 align:start position:0%
 
 

00:25:31.250 --> 00:25:34.279 align:start position:0%
 
yeah<00:25:32.279><c> so</c><00:25:32.519><c> the</c><00:25:32.639><c> candy</c><00:25:33.450><c> one</c><00:25:33.630><c> concurrently</c><00:25:34.049><c> find</c>

00:25:34.279 --> 00:25:34.289 align:start position:0%
yeah so the candy one concurrently find
 

00:25:34.289 --> 00:25:37.250 align:start position:0%
yeah so the candy one concurrently find
it<00:25:34.380><c> like</c><00:25:34.500><c> objects</c><00:25:34.889><c> in</c><00:25:35.070><c> journal</c><00:25:35.549><c> regions</c><00:25:36.000><c> no</c><00:25:36.870><c> it</c>

00:25:37.250 --> 00:25:37.260 align:start position:0%
it like objects in journal regions no it
 

00:25:37.260 --> 00:25:39.049 align:start position:0%
it like objects in journal regions no it
can't<00:25:37.559><c> it</c><00:25:37.710><c> will</c><00:25:37.830><c> stop</c><00:25:38.039><c> the</c><00:25:38.190><c> world</c><00:25:38.340><c> but</c><00:25:38.610><c> this</c><00:25:38.940><c> is</c>

00:25:39.049 --> 00:25:39.059 align:start position:0%
can't it will stop the world but this is
 

00:25:39.059 --> 00:25:41.570 align:start position:0%
can't it will stop the world but this is
based<00:25:39.330><c> on</c><00:25:39.600><c> the</c><00:25:39.690><c> hypothesis</c><00:25:40.260><c> which</c><00:25:40.559><c> is</c><00:25:40.740><c> very</c>

00:25:41.570 --> 00:25:41.580 align:start position:0%
based on the hypothesis which is very
 

00:25:41.580 --> 00:25:43.970 align:start position:0%
based on the hypothesis which is very
very<00:25:41.940><c> often</c><00:25:42.120><c> true</c><00:25:42.480><c> that</c><00:25:42.510><c> for</c><00:25:42.870><c> Java</c><00:25:43.110><c> most</c>

00:25:43.970 --> 00:25:43.980 align:start position:0%
very often true that for Java most
 

00:25:43.980 --> 00:25:46.009 align:start position:0%
very often true that for Java most
objects<00:25:44.370><c> are</c><00:25:44.490><c> allocated</c><00:25:44.639><c> either</c><00:25:45.299><c> died</c><00:25:45.720><c> young</c>

00:25:46.009 --> 00:25:46.019 align:start position:0%
objects are allocated either died young
 

00:25:46.019 --> 00:25:48.560 align:start position:0%
objects are allocated either died young
or<00:25:46.260><c> they</c><00:25:46.620><c> live</c><00:25:46.799><c> for</c><00:25:47.039><c> a</c><00:25:47.070><c> very</c><00:25:47.130><c> long</c><00:25:47.580><c> time</c><00:25:47.610><c> so</c>

00:25:48.560 --> 00:25:48.570 align:start position:0%
or they live for a very long time so
 

00:25:48.570 --> 00:25:49.970 align:start position:0%
or they live for a very long time so
even<00:25:48.720><c> though</c><00:25:48.929><c> you</c><00:25:49.049><c> will</c><00:25:49.200><c> fill</c><00:25:49.529><c> up</c><00:25:49.649><c> the</c><00:25:49.860><c> evil</c>

00:25:49.970 --> 00:25:49.980 align:start position:0%
even though you will fill up the evil
 

00:25:49.980 --> 00:25:52.340 align:start position:0%
even though you will fill up the evil
eden<00:25:50.549><c> regions</c><00:25:50.909><c> with</c><00:25:51.269><c> quite</c><00:25:51.750><c> a</c><00:25:51.779><c> few</c><00:25:51.870><c> objects</c>

00:25:52.340 --> 00:25:52.350 align:start position:0%
eden regions with quite a few objects
 

00:25:52.350 --> 00:25:55.129 align:start position:0%
eden regions with quite a few objects
when<00:25:53.039><c> we</c><00:25:53.190><c> stop</c><00:25:53.539><c> we</c><00:25:54.539><c> only</c><00:25:54.659><c> have</c><00:25:54.840><c> to</c><00:25:54.899><c> care</c><00:25:55.110><c> about</c>

00:25:55.129 --> 00:25:55.139 align:start position:0%
when we stop we only have to care about
 

00:25:55.139 --> 00:25:58.340 align:start position:0%
when we stop we only have to care about
live<00:25:55.740><c> objects</c><00:25:56.309><c> and</c><00:25:56.539><c> those</c><00:25:57.539><c> are</c><00:25:57.750><c> usually</c><00:25:57.870><c> much</c>

00:25:58.340 --> 00:25:58.350 align:start position:0%
live objects and those are usually much
 

00:25:58.350 --> 00:26:01.100 align:start position:0%
live objects and those are usually much
much<00:25:58.649><c> much</c><00:25:58.950><c> fewer</c><00:25:59.389><c> than</c><00:26:00.389><c> the</c><00:26:00.450><c> total</c><00:26:00.750><c> number</c><00:26:01.049><c> of</c>

00:26:01.100 --> 00:26:01.110 align:start position:0%
much much fewer than the total number of
 

00:26:01.110 --> 00:26:04.669 align:start position:0%
much much fewer than the total number of
objects<00:26:01.440><c> have</c><00:26:01.590><c> been</c><00:26:01.620><c> allocated</c><00:26:03.260><c> so</c><00:26:04.260><c> therefore</c>

00:26:04.669 --> 00:26:04.679 align:start position:0%
objects have been allocated so therefore
 

00:26:04.679 --> 00:26:08.360 align:start position:0%
objects have been allocated so therefore
we<00:26:05.279><c> don't</c><00:26:05.460><c> have</c><00:26:05.700><c> such</c><00:26:06.029><c> a</c><00:26:06.059><c> problem</c><00:26:06.690><c> with</c><00:26:07.380><c> to</c>

00:26:08.360 --> 00:26:08.370 align:start position:0%
we don't have such a problem with to
 

00:26:08.370 --> 00:26:23.970 align:start position:0%
we don't have such a problem with to
long-john<00:26:08.940><c> collections</c><00:26:09.830><c> yep</c><00:26:10.860><c> question</c>

00:26:23.970 --> 00:26:23.980 align:start position:0%
 
 

00:26:23.980 --> 00:26:25.410 align:start position:0%
 
so<00:26:24.400><c> the</c><00:26:24.520><c> question</c><00:26:24.790><c> is</c><00:26:24.910><c> have</c><00:26:25.150><c> you</c><00:26:25.180><c> thought</c>

00:26:25.410 --> 00:26:25.420 align:start position:0%
so the question is have you thought
 

00:26:25.420 --> 00:26:27.270 align:start position:0%
so the question is have you thought
about<00:26:25.480><c> maybe</c><00:26:26.260><c> using</c><00:26:26.530><c> some</c><00:26:26.740><c> kind</c><00:26:26.950><c> of</c><00:26:27.040><c> job</c>

00:26:27.270 --> 00:26:27.280 align:start position:0%
about maybe using some kind of job
 

00:26:27.280 --> 00:26:38.940 align:start position:0%
about maybe using some kind of job
annotations<00:26:27.910><c> to</c><00:26:28.090><c> provide</c><00:26:28.330><c> hints</c><00:26:29.250><c> yeah</c>

00:26:38.940 --> 00:26:38.950 align:start position:0%
 
 

00:26:38.950 --> 00:26:44.509 align:start position:0%
 
you<00:26:39.309><c> mean</c><00:26:39.460><c> hints</c><00:26:39.789><c> for</c><00:26:40.690><c> a</c><00:26:40.749><c> particular</c><00:26:41.200><c> class</c>

00:26:44.509 --> 00:26:44.519 align:start position:0%
 
 

00:26:44.519 --> 00:26:47.489 align:start position:0%
 
yeah<00:26:45.519><c> no</c><00:26:45.999><c> we</c><00:26:46.179><c> are</c><00:26:46.269><c> not</c><00:26:46.419><c> given</c><00:26:46.659><c> that</c><00:26:46.779><c> too</c><00:26:47.289><c> much</c>

00:26:47.489 --> 00:26:47.499 align:start position:0%
yeah no we are not given that too much
 

00:26:47.499 --> 00:26:50.599 align:start position:0%
yeah no we are not given that too much
thought<00:26:47.830><c> and</c><00:26:48.159><c> we</c><00:26:49.029><c> I</c><00:26:49.059><c> don't</c><00:26:49.359><c> think</c><00:26:49.929><c> there's</c>

00:26:50.599 --> 00:26:50.609 align:start position:0%
thought and we I don't think there's
 

00:26:50.609 --> 00:26:54.419 align:start position:0%
thought and we I don't think there's
that<00:26:51.609><c> much</c><00:26:51.820><c> we</c><00:26:52.029><c> can</c><00:26:52.179><c> use</c><00:26:52.599><c> from</c><00:26:52.840><c> such</c><00:26:53.080><c> hints</c><00:26:53.429><c> we</c>

00:26:54.419 --> 00:26:54.429 align:start position:0%
that much we can use from such hints we
 

00:26:54.429 --> 00:26:57.330 align:start position:0%
that much we can use from such hints we
are<00:26:54.489><c> usually</c><00:26:55.029><c> fine</c><00:26:55.450><c> by</c><00:26:55.629><c> fitting</c><00:26:55.960><c> that</c><00:26:56.200><c> out</c><00:26:56.340><c> in</c>

00:26:57.330 --> 00:26:57.340 align:start position:0%
are usually fine by fitting that out in
 

00:26:57.340 --> 00:27:00.899 align:start position:0%
are usually fine by fitting that out in
the<00:26:57.489><c> JVM</c><00:26:57.820><c> itself</c><00:26:58.119><c> so</c><00:26:59.369><c> no</c><00:27:00.369><c> we</c><00:27:00.549><c> are</c><00:27:00.639><c> not</c><00:27:00.729><c> thought</c>

00:27:00.899 --> 00:27:00.909 align:start position:0%
the JVM itself so no we are not thought
 

00:27:00.909 --> 00:27:03.749 align:start position:0%
the JVM itself so no we are not thought
about<00:27:01.029><c> it</c><00:27:01.179><c> and</c><00:27:01.389><c> but</c><00:27:02.049><c> we</c><00:27:02.169><c> might</c><00:27:02.379><c> do</c><00:27:03.190><c> but</c><00:27:03.460><c> I</c><00:27:03.519><c> don't</c>

00:27:03.749 --> 00:27:03.759 align:start position:0%
about it and but we might do but I don't
 

00:27:03.759 --> 00:27:06.089 align:start position:0%
about it and but we might do but I don't
think<00:27:03.970><c> there</c><00:27:04.149><c> is</c><00:27:04.179><c> too</c><00:27:04.479><c> much</c><00:27:04.690><c> we</c><00:27:04.899><c> can</c><00:27:05.080><c> value</c><00:27:05.950><c> we</c>

00:27:06.089 --> 00:27:06.099 align:start position:0%
think there is too much we can value we
 

00:27:06.099 --> 00:27:10.469 align:start position:0%
think there is too much we can value we
can<00:27:06.249><c> get</c><00:27:06.369><c> out</c><00:27:06.519><c> from</c><00:27:06.820><c> that</c><00:27:07.029><c> I</c><00:27:09.269><c> think</c><00:27:10.269><c> there</c><00:27:10.389><c> was</c>

00:27:10.469 --> 00:27:10.479 align:start position:0%
can get out from that I think there was
 

00:27:10.479 --> 00:27:16.649 align:start position:0%
can get out from that I think there was
another<00:27:10.599><c> question</c><00:27:10.779><c> maybe</c><00:27:11.080><c> in</c><00:27:11.379><c> the</c><00:27:11.440><c> back</c><00:27:15.659><c> yeah</c>

00:27:16.649 --> 00:27:16.659 align:start position:0%
another question maybe in the back yeah
 

00:27:16.659 --> 00:27:22.769 align:start position:0%
another question maybe in the back yeah
I<00:27:20.429><c> do</c><00:27:21.429><c> I</c><00:27:21.489><c> foresee</c><00:27:21.999><c> any</c><00:27:22.239><c> other</c><00:27:22.419><c> big</c>

00:27:22.769 --> 00:27:22.779 align:start position:0%
I do I foresee any other big
 

00:27:22.779 --> 00:27:24.089 align:start position:0%
I do I foresee any other big
improvements<00:27:23.289><c> coming</c><00:27:23.499><c> up</c><00:27:23.590><c> to</c><00:27:23.710><c> give</c><00:27:23.919><c> one</c><00:27:24.070><c> I</c>

00:27:24.089 --> 00:27:24.099 align:start position:0%
improvements coming up to give one I
 

00:27:24.099 --> 00:27:26.849 align:start position:0%
improvements coming up to give one I
actually<00:27:24.309><c> do</c><00:27:24.639><c> think</c><00:27:24.940><c> that</c><00:27:25.259><c> the</c><00:27:26.259><c> ones</c><00:27:26.470><c> who</c><00:27:26.649><c> held</c>

00:27:26.849 --> 00:27:26.859 align:start position:0%
actually do think that the ones who held
 

00:27:26.859 --> 00:27:29.219 align:start position:0%
actually do think that the ones who held
up<00:27:27.039><c> here</c><00:27:27.220><c> on</c><00:27:27.489><c> the</c><00:27:27.609><c> sides</c><00:27:28.049><c> might</c><00:27:29.049><c> of</c><00:27:29.200><c> course</c>

00:27:29.219 --> 00:27:29.229 align:start position:0%
up here on the sides might of course
 

00:27:29.229 --> 00:27:32.190 align:start position:0%
up here on the sides might of course
differ<00:27:29.739><c> between</c><00:27:30.039><c> you</c><00:27:30.369><c> and</c><00:27:30.549><c> me</c><00:27:30.639><c> but</c><00:27:30.960><c> these</c><00:27:31.960><c> are</c>

00:27:32.190 --> 00:27:32.200 align:start position:0%
differ between you and me but these are
 

00:27:32.200 --> 00:27:34.379 align:start position:0%
differ between you and me but these are
to<00:27:32.769><c> me</c><00:27:32.889><c> pretty</c><00:27:33.129><c> big</c><00:27:33.340><c> improvements</c><00:27:33.940><c> and</c><00:27:34.090><c> also</c>

00:27:34.379 --> 00:27:34.389 align:start position:0%
to me pretty big improvements and also
 

00:27:34.389 --> 00:27:36.659 align:start position:0%
to me pretty big improvements and also
the<00:27:34.509><c> ones</c><00:27:34.690><c> who</c><00:27:34.809><c> are</c><00:27:34.960><c> looking</c><00:27:35.200><c> into</c><00:27:35.669><c> rebuilding</c>

00:27:36.659 --> 00:27:36.669 align:start position:0%
the ones who are looking into rebuilding
 

00:27:36.669 --> 00:27:37.859 align:start position:0%
the ones who are looking into rebuilding
remember<00:27:37.149><c> SATs</c><00:27:37.359><c> and</c><00:27:37.509><c> improved</c><00:27:37.779><c> ergonomics</c>

00:27:37.859 --> 00:27:37.869 align:start position:0%
remember SATs and improved ergonomics
 

00:27:37.869 --> 00:27:41.489 align:start position:0%
remember SATs and improved ergonomics
will<00:27:38.499><c> also</c><00:27:38.830><c> hopefully</c><00:27:39.389><c> result</c><00:27:40.389><c> in</c><00:27:40.659><c> big</c>

00:27:41.489 --> 00:27:41.499 align:start position:0%
will also hopefully result in big
 

00:27:41.499 --> 00:27:43.589 align:start position:0%
will also hopefully result in big
improvement<00:27:41.979><c> so</c><00:27:42.070><c> to</c><00:27:42.129><c> me</c><00:27:42.340><c> these</c><00:27:42.519><c> are</c><00:27:42.580><c> big</c><00:27:42.849><c> to</c>

00:27:43.589 --> 00:27:43.599 align:start position:0%
improvement so to me these are big to
 

00:27:43.599 --> 00:28:00.880 align:start position:0%
improvement so to me these are big to
you<00:27:43.720><c> I</c><00:27:43.749><c> don't</c><00:27:44.049><c> know</c>

00:28:00.880 --> 00:28:00.890 align:start position:0%
 
 

00:28:00.890 --> 00:28:06.440 align:start position:0%
 
yeah<00:28:03.920><c> yeah</c><00:28:04.920><c> don't</c><00:28:05.550><c> be</c><00:28:05.670><c> doing</c><00:28:05.940><c> any</c><00:28:06.090><c> research</c>

00:28:06.440 --> 00:28:06.450 align:start position:0%
yeah yeah don't be doing any research
 

00:28:06.450 --> 00:28:09.020 align:start position:0%
yeah yeah don't be doing any research
that<00:28:06.480><c> we</c><00:28:06.750><c> really</c><00:28:07.020><c> revolutionize</c><00:28:07.860><c> GC</c><00:28:08.820><c> well</c><00:28:09.000><c> I</c>

00:28:09.020 --> 00:28:09.030 align:start position:0%
that we really revolutionize GC well I
 

00:28:09.030 --> 00:28:13.490 align:start position:0%
that we really revolutionize GC well I
think<00:28:09.420><c> about</c><00:28:09.600><c> GC</c><00:28:09.990><c> like</c><00:28:10.520><c> 300</c><00:28:11.520><c> days</c><00:28:11.640><c> a</c><00:28:11.670><c> year</c><00:28:12.500><c> so</c>

00:28:13.490 --> 00:28:13.500 align:start position:0%
think about GC like 300 days a year so
 

00:28:13.500 --> 00:28:16.820 align:start position:0%
think about GC like 300 days a year so
yeah<00:28:13.740><c> we</c><00:28:13.950><c> do</c><00:28:14.070><c> think</c><00:28:14.310><c> a</c><00:28:14.400><c> lot</c><00:28:14.430><c> about</c><00:28:14.670><c> it</c><00:28:15.230><c> I</c><00:28:16.230><c> don't</c>

00:28:16.820 --> 00:28:16.830 align:start position:0%
yeah we do think a lot about it I don't
 

00:28:16.830 --> 00:28:18.500 align:start position:0%
yeah we do think a lot about it I don't
want<00:28:17.130><c> to</c><00:28:17.220><c> stand</c><00:28:17.430><c> up</c><00:28:17.550><c> here</c><00:28:17.730><c> speculating</c><00:28:18.360><c> what</c>

00:28:18.500 --> 00:28:18.510 align:start position:0%
want to stand up here speculating what
 

00:28:18.510 --> 00:28:20.360 align:start position:0%
want to stand up here speculating what
goes<00:28:18.720><c> in</c><00:28:18.870><c> and</c><00:28:19.020><c> what</c><00:28:19.080><c> comes</c><00:28:19.170><c> knocking</c><00:28:19.650><c> but</c><00:28:19.860><c> yeah</c>

00:28:20.360 --> 00:28:20.370 align:start position:0%
goes in and what comes knocking but yeah
 

00:28:20.370 --> 00:28:21.530 align:start position:0%
goes in and what comes knocking but yeah
there's<00:28:20.580><c> a</c><00:28:20.640><c> lot</c><00:28:20.670><c> of</c><00:28:20.880><c> activity</c><00:28:21.270><c> that</c><00:28:21.300><c> we</c><00:28:21.420><c> are</c>

00:28:21.530 --> 00:28:21.540 align:start position:0%
there's a lot of activity that we are
 

00:28:21.540 --> 00:28:24.680 align:start position:0%
there's a lot of activity that we are
doing<00:28:21.690><c> so</c><00:28:22.140><c> hopefully</c><00:28:22.680><c> that</c><00:28:23.190><c> will</c><00:28:23.420><c> result</c><00:28:24.420><c> in</c>

00:28:24.680 --> 00:28:24.690 align:start position:0%
doing so hopefully that will result in
 

00:28:24.690 --> 00:28:25.910 align:start position:0%
doing so hopefully that will result in
some<00:28:24.840><c> nice</c><00:28:24.990><c> improvements</c><00:28:25.140><c> it</c><00:28:25.590><c> doesn't</c><00:28:25.830><c> always</c>

00:28:25.910 --> 00:28:25.920 align:start position:0%
some nice improvements it doesn't always
 

00:28:25.920 --> 00:28:28.040 align:start position:0%
some nice improvements it doesn't always
do<00:28:26.160><c> that</c><00:28:26.310><c> unfortunately</c><00:28:26.600><c> but</c><00:28:27.600><c> a</c><00:28:27.630><c> lot</c><00:28:27.840><c> of</c><00:28:27.990><c> the</c>

00:28:28.040 --> 00:28:28.050 align:start position:0%
do that unfortunately but a lot of the
 

00:28:28.050 --> 00:28:29.630 align:start position:0%
do that unfortunately but a lot of the
time<00:28:28.230><c> we</c><00:28:28.500><c> can</c><00:28:28.890><c> make</c><00:28:29.160><c> some</c><00:28:29.340><c> pretty</c><00:28:29.520><c> good</c>

00:28:29.630 --> 00:28:29.640 align:start position:0%
time we can make some pretty good
 

00:28:29.640 --> 00:28:31.370 align:start position:0%
time we can make some pretty good
instruments<00:28:30.120><c> and</c><00:28:30.360><c> we</c><00:28:30.750><c> will</c><00:28:30.900><c> continue</c><00:28:31.080><c> to</c><00:28:31.260><c> do</c>

00:28:31.370 --> 00:28:31.380 align:start position:0%
instruments and we will continue to do
 

00:28:31.380 --> 00:28:43.720 align:start position:0%
instruments and we will continue to do
so<00:28:31.730><c> yeah</c><00:28:32.730><c> question</c>

00:28:43.720 --> 00:28:43.730 align:start position:0%
 
 

00:28:43.730 --> 00:28:45.549 align:start position:0%
 
yeah<00:28:44.389><c> so</c><00:28:44.570><c> the</c><00:28:44.659><c> question</c><00:28:44.779><c> is</c><00:28:45.049><c> how</c><00:28:45.169><c> much</c><00:28:45.350><c> does</c>

00:28:45.549 --> 00:28:45.559 align:start position:0%
yeah so the question is how much does
 

00:28:45.559 --> 00:28:47.759 align:start position:0%
yeah so the question is how much does
the<00:28:45.710><c> concurrent</c><00:28:46.159><c> mark</c><00:28:46.370><c> reduce</c><00:28:46.760><c> the</c><00:28:47.059><c> need</c><00:28:47.690><c> for</c>

00:28:47.759 --> 00:28:47.769 align:start position:0%
the concurrent mark reduce the need for
 

00:28:47.769 --> 00:28:53.409 align:start position:0%
the concurrent mark reduce the need for
or<00:28:48.769><c> the</c><00:28:48.980><c> time</c><00:28:49.279><c> for</c><00:28:49.549><c> a</c><00:28:49.580><c> full</c><00:28:50.000><c> UC</c><00:28:50.450><c> so</c><00:28:51.100><c> G</c><00:28:52.100><c> 1</c><00:28:52.419><c> doesn't</c>

00:28:53.409 --> 00:28:53.419 align:start position:0%
or the time for a full UC so G 1 doesn't
 

00:28:53.419 --> 00:28:56.620 align:start position:0%
or the time for a full UC so G 1 doesn't
useful<00:28:53.929><c> you</c><00:28:54.110><c> see</c><00:28:54.350><c> in</c><00:28:54.799><c> its</c><00:28:55.010><c> normal</c><00:28:55.630><c> operation</c>

00:28:56.620 --> 00:28:56.630 align:start position:0%
useful you see in its normal operation
 

00:28:56.630 --> 00:28:58.570 align:start position:0%
useful you see in its normal operation
as<00:28:56.750><c> you</c><00:28:56.840><c> saw</c><00:28:57.019><c> on</c><00:28:57.139><c> the</c><00:28:57.169><c> slides</c><00:28:57.470><c> even</c><00:28:57.919><c> prefers</c><00:28:58.340><c> to</c>

00:28:58.570 --> 00:28:58.580 align:start position:0%
as you saw on the slides even prefers to
 

00:28:58.580 --> 00:29:00.970 align:start position:0%
as you saw on the slides even prefers to
move<00:28:58.760><c> between</c><00:28:59.000><c> young</c><00:28:59.809><c> collections</c><00:29:00.320><c> and</c><00:29:00.590><c> then</c>

00:29:00.970 --> 00:29:00.980 align:start position:0%
move between young collections and then
 

00:29:00.980 --> 00:29:02.440 align:start position:0%
move between young collections and then
transition<00:29:01.490><c> to</c><00:29:01.519><c> young</c><00:29:01.820><c> collections</c><00:29:02.269><c> and</c>

00:29:02.440 --> 00:29:02.450 align:start position:0%
transition to young collections and
 

00:29:02.450 --> 00:29:04.690 align:start position:0%
transition to young collections and
concurrent<00:29:02.870><c> mark</c><00:29:03.080><c> and</c><00:29:03.380><c> then</c><00:29:04.100><c> transition</c><00:29:04.639><c> into</c>

00:29:04.690 --> 00:29:04.700 align:start position:0%
concurrent mark and then transition into
 

00:29:04.700 --> 00:29:06.700 align:start position:0%
concurrent mark and then transition into
mixed<00:29:05.090><c> collections</c><00:29:05.510><c> instead</c><00:29:05.809><c> so</c><00:29:06.380><c> it</c><00:29:06.500><c> will</c>

00:29:06.700 --> 00:29:06.710 align:start position:0%
mixed collections instead so it will
 

00:29:06.710 --> 00:29:08.769 align:start position:0%
mixed collections instead so it will
collect<00:29:07.130><c> the</c><00:29:07.340><c> old</c><00:29:07.490><c> radiance</c><00:29:07.970><c> incrementally</c>

00:29:08.769 --> 00:29:08.779 align:start position:0%
collect the old radiance incrementally
 

00:29:08.779 --> 00:29:10.470 align:start position:0%
collect the old radiance incrementally
over<00:29:08.809><c> a</c><00:29:09.019><c> number</c><00:29:09.200><c> of</c><00:29:09.380><c> mixed</c><00:29:09.679><c> collections</c><00:29:10.100><c> and</c>

00:29:10.470 --> 00:29:10.480 align:start position:0%
over a number of mixed collections and
 

00:29:10.480 --> 00:29:12.340 align:start position:0%
over a number of mixed collections and
preferably<00:29:11.480><c> don't</c><00:29:11.809><c> have</c><00:29:11.929><c> to</c><00:29:12.019><c> do</c><00:29:12.110><c> a</c><00:29:12.139><c> full</c>

00:29:12.340 --> 00:29:12.350 align:start position:0%
preferably don't have to do a full
 

00:29:12.350 --> 00:29:15.490 align:start position:0%
preferably don't have to do a full
collection<00:29:12.590><c> at</c><00:29:12.889><c> all</c><00:29:13.299><c> which</c><00:29:14.299><c> means</c><00:29:14.539><c> in</c><00:29:14.720><c> a</c><00:29:14.960><c> lot</c>

00:29:15.490 --> 00:29:15.500 align:start position:0%
collection at all which means in a lot
 

00:29:15.500 --> 00:29:18.639 align:start position:0%
collection at all which means in a lot
lot<00:29:16.059><c> smaller</c><00:29:17.059><c> forced</c><00:29:17.419><c> times</c><00:29:17.600><c> compared</c><00:29:18.590><c> to</c>

00:29:18.639 --> 00:29:18.649 align:start position:0%
lot smaller forced times compared to
 

00:29:18.649 --> 00:29:20.620 align:start position:0%
lot smaller forced times compared to
full<00:29:18.860><c> collections</c><00:29:19.340><c> so</c><00:29:19.549><c> hopefully</c><00:29:20.330><c> we'll</c>

00:29:20.620 --> 00:29:20.630 align:start position:0%
full collections so hopefully we'll
 

00:29:20.630 --> 00:29:21.759 align:start position:0%
full collections so hopefully we'll
concurrent<00:29:21.049><c> marking</c><00:29:21.380><c> and</c><00:29:21.500><c> the</c><00:29:21.559><c> mixed</c>

00:29:21.759 --> 00:29:21.769 align:start position:0%
concurrent marking and the mixed
 

00:29:21.769 --> 00:29:23.470 align:start position:0%
concurrent marking and the mixed
collections<00:29:22.100><c> you</c><00:29:22.309><c> can</c><00:29:22.370><c> avoid</c><00:29:22.760><c> felices</c>

00:29:23.470 --> 00:29:23.480 align:start position:0%
collections you can avoid felices
 

00:29:23.480 --> 00:29:25.930 align:start position:0%
collections you can avoid felices
completely<00:29:23.960><c> and</c><00:29:24.559><c> don't</c><00:29:25.309><c> have</c><00:29:25.460><c> to</c><00:29:25.580><c> have</c><00:29:25.789><c> them</c>

00:29:25.930 --> 00:29:25.940 align:start position:0%
completely and don't have to have them
 

00:29:25.940 --> 00:29:28.090 align:start position:0%
completely and don't have to have them
at<00:29:26.000><c> all</c>

