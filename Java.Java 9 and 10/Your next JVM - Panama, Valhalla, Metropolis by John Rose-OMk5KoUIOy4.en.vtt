WEBVTT
Kind: captions
Language: en

00:00:00.200 --> 00:00:03.340 align:start position:0%
 
[Music]

00:00:03.340 --> 00:00:03.350 align:start position:0%
[Music]
 

00:00:03.350 --> 00:00:07.909 align:start position:0%
[Music]
so<00:00:04.350><c> this</c><00:00:05.130><c> talk</c><00:00:05.339><c> is</c><00:00:05.640><c> about</c><00:00:06.740><c> where</c><00:00:07.740><c> we're</c>

00:00:07.909 --> 00:00:07.919 align:start position:0%
so this talk is about where we're
 

00:00:07.919 --> 00:00:10.129 align:start position:0%
so this talk is about where we're
pushing<00:00:08.160><c> the</c><00:00:08.460><c> jvm</c><00:00:08.940><c> where</c><00:00:09.240><c> the</c><00:00:09.360><c> JVM</c><00:00:09.750><c> seems</c><00:00:10.019><c> to</c>

00:00:10.129 --> 00:00:10.139 align:start position:0%
pushing the jvm where the JVM seems to
 

00:00:10.139 --> 00:00:12.860 align:start position:0%
pushing the jvm where the JVM seems to
be<00:00:10.230><c> going</c><00:00:10.469><c> whether</c><00:00:10.650><c> we</c><00:00:10.830><c> push</c><00:00:11.070><c> or</c><00:00:11.370><c> not</c><00:00:11.870><c> we're</c>

00:00:12.860 --> 00:00:12.870 align:start position:0%
be going whether we push or not we're
 

00:00:12.870 --> 00:00:15.950 align:start position:0%
be going whether we push or not we're
where<00:00:13.830><c> we</c><00:00:13.860><c> think</c><00:00:14.160><c> we'll</c><00:00:14.309><c> be</c><00:00:14.460><c> maybe</c><00:00:14.969><c> even</c><00:00:15.299><c> in</c><00:00:15.450><c> 10</c>

00:00:15.950 --> 00:00:15.960 align:start position:0%
where we think we'll be maybe even in 10
 

00:00:15.960 --> 00:00:18.620 align:start position:0%
where we think we'll be maybe even in 10
or<00:00:16.080><c> 20</c><00:00:16.109><c> years</c><00:00:16.379><c> it's</c><00:00:17.010><c> we're</c><00:00:17.910><c> 10</c><00:00:18.060><c> or</c><00:00:18.180><c> 20</c><00:00:18.420><c> years</c>

00:00:18.620 --> 00:00:18.630 align:start position:0%
or 20 years it's we're 10 or 20 years
 

00:00:18.630 --> 00:00:20.960 align:start position:0%
or 20 years it's we're 10 or 20 years
into<00:00:18.930><c> the</c><00:00:19.289><c> Java</c><00:00:19.770><c> ecosystem</c><00:00:20.490><c> we</c><00:00:20.609><c> think</c><00:00:20.820><c> it's</c>

00:00:20.960 --> 00:00:20.970 align:start position:0%
into the Java ecosystem we think it's
 

00:00:20.970 --> 00:00:22.609 align:start position:0%
into the Java ecosystem we think it's
got<00:00:21.119><c> at</c><00:00:21.240><c> least</c><00:00:21.420><c> that</c><00:00:21.570><c> much</c><00:00:21.689><c> time</c><00:00:21.930><c> left</c><00:00:22.289><c> to</c><00:00:22.439><c> run</c>

00:00:22.609 --> 00:00:22.619 align:start position:0%
got at least that much time left to run
 

00:00:22.619 --> 00:00:26.120 align:start position:0%
got at least that much time left to run
one<00:00:23.460><c> of</c><00:00:23.580><c> the</c><00:00:23.670><c> key</c><00:00:23.880><c> ways</c><00:00:24.119><c> to</c><00:00:24.529><c> preserve</c><00:00:25.529><c> and</c>

00:00:26.120 --> 00:00:26.130 align:start position:0%
one of the key ways to preserve and
 

00:00:26.130 --> 00:00:28.339 align:start position:0%
one of the key ways to preserve and
extend<00:00:26.550><c> the</c><00:00:26.970><c> job</c><00:00:27.390><c> and</c><00:00:27.720><c> the</c><00:00:27.810><c> mission</c><00:00:28.080><c> of</c><00:00:28.260><c> the</c>

00:00:28.339 --> 00:00:28.349 align:start position:0%
extend the job and the mission of the
 

00:00:28.349 --> 00:00:30.800 align:start position:0%
extend the job and the mission of the
JVM<00:00:28.710><c> and</c><00:00:29.039><c> Java</c><00:00:29.279><c> is</c><00:00:29.580><c> to</c><00:00:30.119><c> make</c><00:00:30.300><c> sure</c><00:00:30.449><c> that</c><00:00:30.660><c> we're</c>

00:00:30.800 --> 00:00:30.810 align:start position:0%
JVM and Java is to make sure that we're
 

00:00:30.810 --> 00:00:32.870 align:start position:0%
JVM and Java is to make sure that we're
able<00:00:30.960><c> to</c><00:00:31.140><c> do</c><00:00:31.439><c> the</c><00:00:31.650><c> the</c><00:00:31.679><c> jobs</c><00:00:32.369><c> that</c><00:00:32.489><c> are</c><00:00:32.669><c> coming</c>

00:00:32.870 --> 00:00:32.880 align:start position:0%
able to do the the jobs that are coming
 

00:00:32.880 --> 00:00:35.209 align:start position:0%
able to do the the jobs that are coming
up<00:00:32.969><c> in</c><00:00:33.149><c> the</c><00:00:33.270><c> future</c><00:00:33.390><c> and</c><00:00:33.750><c> I</c><00:00:34.680><c> want</c><00:00:34.950><c> to</c><00:00:35.100><c> talk</c>

00:00:35.209 --> 00:00:35.219 align:start position:0%
up in the future and I want to talk
 

00:00:35.219 --> 00:00:39.010 align:start position:0%
up in the future and I want to talk
about<00:00:35.370><c> that</c><00:00:35.610><c> today</c><00:00:35.930><c> this</c><00:00:36.930><c> will</c><00:00:37.140><c> be</c><00:00:37.320><c> I</c><00:00:37.500><c> I'm</c><00:00:38.219><c> the</c>

00:00:39.010 --> 00:00:39.020 align:start position:0%
about that today this will be I I'm the
 

00:00:39.020 --> 00:00:42.260 align:start position:0%
about that today this will be I I'm the
I'm<00:00:40.020><c> the</c><00:00:40.140><c> architect</c><00:00:40.800><c> of</c><00:00:41.129><c> the</c><00:00:41.280><c> JVM</c><00:00:41.640><c> not</c><00:00:42.030><c> I</c>

00:00:42.260 --> 00:00:42.270 align:start position:0%
I'm the architect of the JVM not I
 

00:00:42.270 --> 00:00:44.630 align:start position:0%
I'm the architect of the JVM not I
didn't<00:00:42.629><c> by</c><00:00:43.170><c> no</c><00:00:43.230><c> means</c><00:00:43.530><c> design</c><00:00:43.950><c> all</c><00:00:44.190><c> of</c><00:00:44.219><c> it</c><00:00:44.430><c> but</c>

00:00:44.630 --> 00:00:44.640 align:start position:0%
didn't by no means design all of it but
 

00:00:44.640 --> 00:00:47.990 align:start position:0%
didn't by no means design all of it but
I'm<00:00:44.760><c> the</c><00:00:44.789><c> current</c><00:00:45.510><c> sitting</c><00:00:45.780><c> Oracle</c><00:00:47.000><c> architect</c>

00:00:47.990 --> 00:00:48.000 align:start position:0%
I'm the current sitting Oracle architect
 

00:00:48.000 --> 00:00:50.690 align:start position:0%
I'm the current sitting Oracle architect
within<00:00:48.329><c> the</c><00:00:48.420><c> JVM</c><00:00:48.809><c> team</c><00:00:49.219><c> I've</c><00:00:50.219><c> been</c><00:00:50.430><c> involved</c>

00:00:50.690 --> 00:00:50.700 align:start position:0%
within the JVM team I've been involved
 

00:00:50.700 --> 00:00:53.330 align:start position:0%
within the JVM team I've been involved
with<00:00:51.180><c> Java</c><00:00:51.719><c> since</c><00:00:52.020><c> almost</c><00:00:52.199><c> the</c><00:00:52.379><c> beginning</c><00:00:52.530><c> for</c>

00:00:53.330 --> 00:00:53.340 align:start position:0%
with Java since almost the beginning for
 

00:00:53.340 --> 00:00:54.799 align:start position:0%
with Java since almost the beginning for
for<00:00:53.879><c> about</c><00:00:54.030><c> 20</c><00:00:54.360><c> years</c><00:00:54.390><c> now</c>

00:00:54.799 --> 00:00:54.809 align:start position:0%
for about 20 years now
 

00:00:54.809 --> 00:00:58.250 align:start position:0%
for about 20 years now
and<00:00:55.489><c> so</c><00:00:56.489><c> I</c><00:00:56.520><c> I</c><00:00:57.030><c> want</c><00:00:57.600><c> to</c><00:00:57.690><c> tell</c><00:00:57.870><c> you</c><00:00:57.989><c> how</c><00:00:58.109><c> it</c><00:00:58.230><c> looks</c>

00:00:58.250 --> 00:00:58.260 align:start position:0%
and so I I want to tell you how it looks
 

00:00:58.260 --> 00:01:00.400 align:start position:0%
and so I I want to tell you how it looks
to<00:00:58.590><c> me</c><00:00:58.739><c> and</c><00:00:59.070><c> how</c><00:00:59.250><c> it</c><00:00:59.370><c> looks</c><00:00:59.550><c> to</c><00:00:59.699><c> our</c><00:00:59.789><c> team</c><00:01:00.090><c> and</c>

00:01:00.400 --> 00:01:00.410 align:start position:0%
to me and how it looks to our team and
 

00:01:00.410 --> 00:01:03.920 align:start position:0%
to me and how it looks to our team and
and<00:01:01.410><c> some</c><00:01:01.710><c> extent</c><00:01:02.010><c> how</c><00:01:02.129><c> it</c><00:01:02.250><c> looks</c><00:01:02.430><c> to</c><00:01:02.699><c> the</c><00:01:03.420><c> open</c>

00:01:03.920 --> 00:01:03.930 align:start position:0%
and some extent how it looks to the open
 

00:01:03.930 --> 00:01:05.479 align:start position:0%
and some extent how it looks to the open
JDK<00:01:04.080><c> community</c><00:01:04.799><c> I</c><00:01:04.830><c> don't</c><00:01:04.920><c> speak</c><00:01:05.280><c> for</c><00:01:05.430><c> the</c>

00:01:05.479 --> 00:01:05.489 align:start position:0%
JDK community I don't speak for the
 

00:01:05.489 --> 00:01:07.490 align:start position:0%
JDK community I don't speak for the
whole<00:01:05.640><c> community</c><00:01:06.150><c> I</c><00:01:06.180><c> speak</c><00:01:06.450><c> for</c><00:01:06.630><c> myself</c><00:01:06.990><c> and</c>

00:01:07.490 --> 00:01:07.500 align:start position:0%
whole community I speak for myself and
 

00:01:07.500 --> 00:01:10.700 align:start position:0%
whole community I speak for myself and
my<00:01:07.740><c> team</c><00:01:07.979><c> and</c><00:01:08.250><c> Oracle</c><00:01:08.670><c> but</c><00:01:09.479><c> I</c><00:01:09.540><c> hope</c><00:01:09.720><c> also</c><00:01:09.930><c> to</c><00:01:10.080><c> to</c>

00:01:10.700 --> 00:01:10.710 align:start position:0%
my team and Oracle but I hope also to to
 

00:01:10.710 --> 00:01:13.730 align:start position:0%
my team and Oracle but I hope also to to
speak<00:01:10.920><c> for</c><00:01:11.220><c> where</c><00:01:12.000><c> we</c><00:01:12.360><c> as</c><00:01:12.540><c> a</c><00:01:12.960><c> community</c><00:01:13.229><c> want</c>

00:01:13.730 --> 00:01:13.740 align:start position:0%
speak for where we as a community want
 

00:01:13.740 --> 00:01:15.469 align:start position:0%
speak for where we as a community want
to<00:01:13.890><c> go</c><00:01:14.010><c> with</c><00:01:14.189><c> this</c><00:01:14.310><c> wonderful</c><00:01:14.549><c> technology</c><00:01:15.330><c> we</c>

00:01:15.469 --> 00:01:15.479 align:start position:0%
to go with this wonderful technology we
 

00:01:15.479 --> 00:01:16.780 align:start position:0%
to go with this wonderful technology we
enjoy

00:01:16.780 --> 00:01:16.790 align:start position:0%
enjoy
 

00:01:16.790 --> 00:01:19.100 align:start position:0%
enjoy
however<00:01:17.790><c> the</c><00:01:18.000><c> lawyers</c><00:01:18.299><c> instruct</c><00:01:18.720><c> me</c><00:01:18.810><c> to</c><00:01:18.840><c> tell</c>

00:01:19.100 --> 00:01:19.110 align:start position:0%
however the lawyers instruct me to tell
 

00:01:19.110 --> 00:01:24.440 align:start position:0%
however the lawyers instruct me to tell
you<00:01:19.229><c> not</c><00:01:19.409><c> to</c><00:01:19.470><c> believe</c><00:01:19.740><c> a</c><00:01:19.830><c> word</c><00:01:19.979><c> I</c><00:01:20.130><c> say</c><00:01:23.420><c> what</c><00:01:24.420><c> I</c>

00:01:24.440 --> 00:01:24.450 align:start position:0%
you not to believe a word I say what I
 

00:01:24.450 --> 00:01:25.789 align:start position:0%
you not to believe a word I say what I
want<00:01:24.720><c> to</c><00:01:24.750><c> do</c><00:01:24.900><c> I</c><00:01:24.930><c> want</c><00:01:25.140><c> to</c><00:01:25.200><c> give</c><00:01:25.350><c> you</c><00:01:25.380><c> some</c><00:01:25.680><c> of</c>

00:01:25.789 --> 00:01:25.799 align:start position:0%
want to do I want to give you some of
 

00:01:25.799 --> 00:01:28.819 align:start position:0%
want to do I want to give you some of
the<00:01:25.890><c> trends</c><00:01:26.430><c> I</c><00:01:26.640><c> want</c><00:01:27.299><c> to</c><00:01:27.420><c> show</c><00:01:27.630><c> how</c><00:01:28.560><c> we</c><00:01:28.619><c> are</c>

00:01:28.819 --> 00:01:28.829 align:start position:0%
the trends I want to show how we are
 

00:01:28.829 --> 00:01:31.609 align:start position:0%
the trends I want to show how we are
taking<00:01:29.280><c> concrete</c><00:01:29.880><c> actions</c><00:01:30.240><c> today</c><00:01:30.570><c> to</c><00:01:30.630><c> work</c>

00:01:31.609 --> 00:01:31.619 align:start position:0%
taking concrete actions today to work
 

00:01:31.619 --> 00:01:34.069 align:start position:0%
taking concrete actions today to work
with<00:01:31.829><c> those</c><00:01:32.040><c> trends</c><00:01:32.579><c> it</c><00:01:33.390><c> is</c><00:01:33.570><c> a</c><00:01:33.600><c> complicated</c>

00:01:34.069 --> 00:01:34.079 align:start position:0%
with those trends it is a complicated
 

00:01:34.079 --> 00:01:36.620 align:start position:0%
with those trends it is a complicated
talk<00:01:34.650><c> I'm</c><00:01:34.920><c> going</c><00:01:35.100><c> to</c><00:01:35.189><c> talk</c><00:01:35.369><c> fast</c><00:01:35.670><c> I'm</c><00:01:36.090><c> going</c><00:01:36.450><c> to</c>

00:01:36.620 --> 00:01:36.630 align:start position:0%
talk I'm going to talk fast I'm going to
 

00:01:36.630 --> 00:01:38.810 align:start position:0%
talk I'm going to talk fast I'm going to
I<00:01:36.930><c> have</c><00:01:37.110><c> time</c><00:01:37.380><c> for</c><00:01:37.409><c> about</c><00:01:37.710><c> a</c><00:01:37.829><c> minute</c><00:01:38.130><c> per</c><00:01:38.280><c> slide</c>

00:01:38.810 --> 00:01:38.820 align:start position:0%
I have time for about a minute per slide
 

00:01:38.820 --> 00:01:42.889 align:start position:0%
I have time for about a minute per slide
or<00:01:39.500><c> not</c><00:01:40.500><c> much</c><00:01:40.650><c> more</c><00:01:40.979><c> so</c><00:01:41.670><c> here</c><00:01:42.299><c> it</c><00:01:42.390><c> comes</c>

00:01:42.889 --> 00:01:42.899 align:start position:0%
or not much more so here it comes
 

00:01:42.899 --> 00:01:44.870 align:start position:0%
or not much more so here it comes
I<00:01:43.020><c> did</c><00:01:43.350><c> not</c><00:01:43.500><c> have</c><00:01:43.710><c> time</c><00:01:43.950><c> to</c><00:01:44.189><c> make</c><00:01:44.340><c> it</c><00:01:44.490><c> shorter</c>

00:01:44.870 --> 00:01:44.880 align:start position:0%
I did not have time to make it shorter
 

00:01:44.880 --> 00:01:48.469 align:start position:0%
I did not have time to make it shorter
as<00:01:45.090><c> the</c><00:01:45.710><c> elegant</c><00:01:46.710><c> letter</c><00:01:46.920><c> writer</c><00:01:47.220><c> said</c><00:01:47.610><c> so</c>

00:01:48.469 --> 00:01:48.479 align:start position:0%
as the elegant letter writer said so
 

00:01:48.479 --> 00:01:50.719 align:start position:0%
as the elegant letter writer said so
this<00:01:49.079><c> is</c><00:01:49.439><c> a</c><00:01:49.470><c> snot</c><00:01:49.770><c> this</c><00:01:50.009><c> is</c><00:01:50.159><c> a</c><00:01:50.189><c> slide</c><00:01:50.490><c> that</c><00:01:50.520><c> I</c>

00:01:50.719 --> 00:01:50.729 align:start position:0%
this is a snot this is a slide that I
 

00:01:50.729 --> 00:01:52.880 align:start position:0%
this is a snot this is a slide that I
enjoyed<00:01:51.180><c> making</c><00:01:51.450><c> a</c><00:01:51.899><c> couple</c><00:01:52.170><c> years</c><00:01:52.380><c> ago</c><00:01:52.560><c> for</c>

00:01:52.880 --> 00:01:52.890 align:start position:0%
enjoyed making a couple years ago for
 

00:01:52.890 --> 00:01:55.130 align:start position:0%
enjoyed making a couple years ago for
the<00:01:52.950><c> JVM</c><00:01:53.340><c> language</c><00:01:53.729><c> summit</c><00:01:54.149><c> how</c><00:01:54.810><c> many</c><00:01:54.960><c> of</c><00:01:55.049><c> you</c>

00:01:55.130 --> 00:01:55.140 align:start position:0%
the JVM language summit how many of you
 

00:01:55.140 --> 00:01:58.069 align:start position:0%
the JVM language summit how many of you
have<00:01:55.229><c> been</c><00:01:55.380><c> to</c><00:01:55.530><c> a</c><00:01:55.560><c> JVM</c><00:01:55.920><c> language</c><00:01:56.310><c> summit</c><00:01:56.640><c> a</c><00:01:57.079><c> few</c>

00:01:58.069 --> 00:01:58.079 align:start position:0%
have been to a JVM language summit a few
 

00:01:58.079 --> 00:02:01.730 align:start position:0%
have been to a JVM language summit a few
yeah<00:01:58.340><c> it's</c><00:01:59.340><c> a</c><00:01:59.460><c> blast</c><00:01:59.579><c> it's</c><00:02:00.439><c> always</c><00:02:01.439><c> a</c><00:02:01.500><c> crowded</c>

00:02:01.730 --> 00:02:01.740 align:start position:0%
yeah it's a blast it's always a crowded
 

00:02:01.740 --> 00:02:03.440 align:start position:0%
yeah it's a blast it's always a crowded
room<00:02:02.040><c> full</c><00:02:02.310><c> of</c><00:02:02.460><c> crazy</c><00:02:02.759><c> people</c><00:02:02.909><c> who</c><00:02:03.329><c> are</c>

00:02:03.440 --> 00:02:03.450 align:start position:0%
room full of crazy people who are
 

00:02:03.450 --> 00:02:04.999 align:start position:0%
room full of crazy people who are
thinking<00:02:03.750><c> about</c><00:02:03.960><c> the</c><00:02:04.140><c> next</c><00:02:04.170><c> steps</c><00:02:04.590><c> for</c><00:02:04.740><c> the</c>

00:02:04.999 --> 00:02:05.009 align:start position:0%
thinking about the next steps for the
 

00:02:05.009 --> 00:02:09.260 align:start position:0%
thinking about the next steps for the
Java<00:02:05.299><c> Runtime</c><00:02:06.439><c> we</c><00:02:07.439><c> had</c><00:02:07.680><c> some</c><00:02:08.009><c> we</c><00:02:08.489><c> we</c><00:02:08.940><c> think</c><00:02:09.149><c> we</c>

00:02:09.260 --> 00:02:09.270 align:start position:0%
Java Runtime we had some we we think we
 

00:02:09.270 --> 00:02:11.540 align:start position:0%
Java Runtime we had some we we think we
have<00:02:09.420><c> some</c><00:02:09.599><c> long</c><00:02:09.810><c> term</c><00:02:10.080><c> goals</c><00:02:10.410><c> that</c><00:02:10.830><c> that</c><00:02:11.430><c> will</c>

00:02:11.540 --> 00:02:11.550 align:start position:0%
have some long term goals that that will
 

00:02:11.550 --> 00:02:13.250 align:start position:0%
have some long term goals that that will
hold<00:02:11.790><c> up</c><00:02:11.970><c> over</c><00:02:12.209><c> the</c><00:02:12.510><c> next</c>

00:02:13.250 --> 00:02:13.260 align:start position:0%
hold up over the next
 

00:02:13.260 --> 00:02:17.030 align:start position:0%
hold up over the next
or<00:02:13.470><c> twenty</c><00:02:13.769><c> years</c><00:02:14.670><c> and</c><00:02:15.599><c> so</c><00:02:15.989><c> far</c><00:02:16.230><c> two</c><00:02:16.799><c> years</c>

00:02:17.030 --> 00:02:17.040 align:start position:0%
or twenty years and so far two years
 

00:02:17.040 --> 00:02:19.100 align:start position:0%
or twenty years and so far two years
into<00:02:17.280><c> the</c><00:02:17.489><c> predictive</c><00:02:17.939><c> cycle</c><00:02:18.390><c> it</c><00:02:18.569><c> seems</c><00:02:18.840><c> to</c><00:02:18.989><c> be</c>

00:02:19.100 --> 00:02:19.110 align:start position:0%
into the predictive cycle it seems to be
 

00:02:19.110 --> 00:02:22.429 align:start position:0%
into the predictive cycle it seems to be
working<00:02:19.260><c> we</c><00:02:20.159><c> want</c><00:02:20.340><c> the</c><00:02:20.879><c> Java</c><00:02:21.120><c> Runtime</c><00:02:21.989><c> to</c><00:02:22.290><c> have</c>

00:02:22.429 --> 00:02:22.439 align:start position:0%
working we want the Java Runtime to have
 

00:02:22.439 --> 00:02:24.710 align:start position:0%
working we want the Java Runtime to have
a<00:02:22.470><c> uniform</c><00:02:23.069><c> model</c><00:02:23.310><c> we</c><00:02:23.640><c> want</c><00:02:23.849><c> all</c><00:02:24.299><c> of</c><00:02:24.360><c> the</c>

00:02:24.710 --> 00:02:24.720 align:start position:0%
a uniform model we want all of the
 

00:02:24.720 --> 00:02:26.780 align:start position:0%
a uniform model we want all of the
pieces<00:02:25.079><c> of</c><00:02:25.290><c> data</c><00:02:25.560><c> to</c><00:02:25.860><c> feel</c><00:02:26.040><c> similar</c><00:02:26.519><c> so</c><00:02:26.760><c> that</c>

00:02:26.780 --> 00:02:26.790 align:start position:0%
pieces of data to feel similar so that
 

00:02:26.790 --> 00:02:29.869 align:start position:0%
pieces of data to feel similar so that
the<00:02:27.090><c> things</c><00:02:27.329><c> the</c><00:02:27.799><c> reflexes</c><00:02:28.799><c> you</c><00:02:28.920><c> learn</c><00:02:29.310><c> to</c>

00:02:29.869 --> 00:02:29.879 align:start position:0%
the things the reflexes you learn to
 

00:02:29.879 --> 00:02:32.030 align:start position:0%
the things the reflexes you learn to
work<00:02:30.060><c> with</c><00:02:30.090><c> arrays</c><00:02:30.510><c> work</c><00:02:30.959><c> on</c><00:02:31.170><c> values</c><00:02:31.680><c> and</c>

00:02:32.030 --> 00:02:32.040 align:start position:0%
work with arrays work on values and
 

00:02:32.040 --> 00:02:33.890 align:start position:0%
work with arrays work on values and
objects<00:02:32.519><c> and</c><00:02:32.610><c> primitives</c><00:02:33.090><c> and</c><00:02:33.329><c> methods</c><00:02:33.690><c> and</c>

00:02:33.890 --> 00:02:33.900 align:start position:0%
objects and primitives and methods and
 

00:02:33.900 --> 00:02:35.780 align:start position:0%
objects and primitives and methods and
types<00:02:34.079><c> you</c><00:02:34.860><c> want</c><00:02:34.980><c> to</c><00:02:35.129><c> be</c><00:02:35.220><c> able</c><00:02:35.280><c> to</c><00:02:35.489><c> assign</c>

00:02:35.780 --> 00:02:35.790 align:start position:0%
types you want to be able to assign
 

00:02:35.790 --> 00:02:37.789 align:start position:0%
types you want to be able to assign
anything<00:02:36.269><c> to</c><00:02:36.360><c> a</c><00:02:36.390><c> variable</c><00:02:36.780><c> pass</c><00:02:37.079><c> anything</c><00:02:37.590><c> as</c>

00:02:37.789 --> 00:02:37.799 align:start position:0%
anything to a variable pass anything as
 

00:02:37.799 --> 00:02:40.309 align:start position:0%
anything to a variable pass anything as
a<00:02:37.829><c> as</c><00:02:38.310><c> an</c><00:02:38.489><c> argument</c><00:02:38.879><c> return</c><00:02:39.450><c> anything</c><00:02:39.959><c> as</c><00:02:40.260><c> a</c>

00:02:40.309 --> 00:02:40.319 align:start position:0%
a as an argument return anything as a
 

00:02:40.319 --> 00:02:42.860 align:start position:0%
a as an argument return anything as a
result<00:02:40.829><c> that's</c><00:02:41.010><c> sort</c><00:02:41.280><c> of</c><00:02:41.340><c> a</c><00:02:41.430><c> thing</c><00:02:41.640><c> you</c><00:02:42.510><c> want</c>

00:02:42.860 --> 00:02:42.870 align:start position:0%
result that's sort of a thing you want
 

00:02:42.870 --> 00:02:46.009 align:start position:0%
result that's sort of a thing you want
strong<00:02:43.170><c> typing</c><00:02:43.650><c> that</c><00:02:44.400><c> you</c><00:02:44.640><c> want</c><00:02:44.909><c> a</c><00:02:45.120><c> unified</c>

00:02:46.009 --> 00:02:46.019 align:start position:0%
strong typing that you want a unified
 

00:02:46.019 --> 00:02:47.839 align:start position:0%
strong typing that you want a unified
way<00:02:46.260><c> to</c><00:02:46.319><c> deal</c><00:02:46.709><c> with</c><00:02:46.920><c> all</c><00:02:47.099><c> the</c><00:02:47.280><c> disparate</c>

00:02:47.839 --> 00:02:47.849 align:start position:0%
way to deal with all the disparate
 

00:02:47.849 --> 00:02:51.110 align:start position:0%
way to deal with all the disparate
details<00:02:48.329><c> of</c><00:02:49.190><c> application</c><00:02:50.190><c> composition</c><00:02:50.819><c> and</c>

00:02:51.110 --> 00:02:51.120 align:start position:0%
details of application composition and
 

00:02:51.120 --> 00:02:53.210 align:start position:0%
details of application composition and
you<00:02:51.409><c> want</c><00:02:52.409><c> all</c><00:02:52.560><c> of</c><00:02:52.590><c> this</c><00:02:52.799><c> to</c><00:02:52.859><c> be</c><00:02:53.069><c> very</c>

00:02:53.210 --> 00:02:53.220 align:start position:0%
you want all of this to be very
 

00:02:53.220 --> 00:02:55.280 align:start position:0%
you want all of this to be very
efficient<00:02:53.760><c> in</c><00:02:53.849><c> memory</c><00:02:54.209><c> you</c><00:02:54.450><c> want</c><00:02:54.870><c> to</c><00:02:55.079><c> be</c><00:02:55.200><c> able</c>

00:02:55.280 --> 00:02:55.290 align:start position:0%
efficient in memory you want to be able
 

00:02:55.290 --> 00:02:57.619 align:start position:0%
efficient in memory you want to be able
to<00:02:55.440><c> have</c><00:02:55.739><c> data</c><00:02:56.400><c> layouts</c><00:02:56.879><c> that</c><00:02:57.060><c> can</c><00:02:57.299><c> be</c><00:02:57.420><c> made</c>

00:02:57.619 --> 00:02:57.629 align:start position:0%
to have data layouts that can be made
 

00:02:57.629 --> 00:03:00.050 align:start position:0%
to have data layouts that can be made
tuned<00:02:58.260><c> to</c><00:02:58.620><c> be</c><00:02:58.739><c> as</c><00:02:58.859><c> flat</c><00:02:59.159><c> as</c><00:02:59.340><c> possible</c><00:02:59.400><c> you</c><00:02:59.909><c> want</c>

00:03:00.050 --> 00:03:00.060 align:start position:0%
tuned to be as flat as possible you want
 

00:03:00.060 --> 00:03:03.949 align:start position:0%
tuned to be as flat as possible you want
to<00:03:00.230><c> have</c><00:03:01.230><c> the</c><00:03:01.620><c> data</c><00:03:02.609><c> to</c><00:03:02.909><c> be</c><00:03:03.000><c> easy</c><00:03:03.269><c> to</c><00:03:03.540><c> make</c><00:03:03.720><c> and</c>

00:03:03.949 --> 00:03:03.959 align:start position:0%
to have the data to be easy to make and
 

00:03:03.959 --> 00:03:06.170 align:start position:0%
to have the data to be easy to make and
then<00:03:04.139><c> when</c><00:03:04.319><c> you</c><00:03:04.440><c> when</c><00:03:05.129><c> you</c><00:03:05.220><c> decide</c><00:03:05.849><c> that</c><00:03:05.879><c> it's</c>

00:03:06.170 --> 00:03:06.180 align:start position:0%
then when you when you decide that it's
 

00:03:06.180 --> 00:03:07.819 align:start position:0%
then when you when you decide that it's
mission-critical<00:03:06.629><c> that</c><00:03:07.049><c> a</c><00:03:07.079><c> particular</c><00:03:07.590><c> kind</c>

00:03:07.819 --> 00:03:07.829 align:start position:0%
mission-critical that a particular kind
 

00:03:07.829 --> 00:03:10.099 align:start position:0%
mission-critical that a particular kind
of<00:03:07.950><c> data</c><00:03:08.190><c> be</c><00:03:08.430><c> very</c><00:03:08.760><c> compacted</c><00:03:09.540><c> very</c><00:03:09.720><c> efficient</c>

00:03:10.099 --> 00:03:10.109 align:start position:0%
of data be very compacted very efficient
 

00:03:10.109 --> 00:03:12.020 align:start position:0%
of data be very compacted very efficient
you<00:03:10.200><c> want</c><00:03:10.379><c> the</c><00:03:10.500><c> cooks</c><00:03:10.859><c> to</c><00:03:11.040><c> be</c><00:03:11.159><c> able</c><00:03:11.370><c> to</c><00:03:11.489><c> expend</c>

00:03:12.020 --> 00:03:12.030 align:start position:0%
you want the cooks to be able to expend
 

00:03:12.030 --> 00:03:13.490 align:start position:0%
you want the cooks to be able to expend
the<00:03:12.150><c> extra</c><00:03:12.480><c> effort</c><00:03:12.780><c> to</c><00:03:12.810><c> tune</c><00:03:13.109><c> up</c><00:03:13.290><c> that</c>

00:03:13.490 --> 00:03:13.500 align:start position:0%
the extra effort to tune up that
 

00:03:13.500 --> 00:03:16.160 align:start position:0%
the extra effort to tune up that
representation<00:03:14.310><c> in</c><00:03:14.790><c> particular</c><00:03:15.239><c> although</c>

00:03:16.160 --> 00:03:16.170 align:start position:0%
representation in particular although
 

00:03:16.170 --> 00:03:19.400 align:start position:0%
representation in particular although
the<00:03:16.290><c> Java</c><00:03:16.560><c> VM</c><00:03:17.220><c> and</c><00:03:17.730><c> language</c><00:03:18.329><c> began</c><00:03:18.720><c> as</c><00:03:19.019><c> a</c><00:03:19.049><c> sort</c>

00:03:19.400 --> 00:03:19.410 align:start position:0%
the Java VM and language began as a sort
 

00:03:19.410 --> 00:03:23.089 align:start position:0%
the Java VM and language began as a sort
of<00:03:19.500><c> a</c><00:03:19.620><c> better</c><00:03:20.269><c> better</c><00:03:21.269><c> small</c><00:03:21.690><c> talk</c><00:03:21.989><c> you</c><00:03:22.919><c> might</c>

00:03:23.089 --> 00:03:23.099 align:start position:0%
of a better better small talk you might
 

00:03:23.099 --> 00:03:27.500 align:start position:0%
of a better better small talk you might
say<00:03:24.079><c> or</c><00:03:25.079><c> better</c><00:03:25.349><c> C++</c><00:03:26.160><c> you</c><00:03:26.849><c> don't</c><00:03:27.090><c> want</c><00:03:27.299><c> it</c><00:03:27.389><c> to</c>

00:03:27.500 --> 00:03:27.510 align:start position:0%
say or better C++ you don't want it to
 

00:03:27.510 --> 00:03:31.879 align:start position:0%
say or better C++ you don't want it to
be<00:03:27.629><c> so</c><00:03:27.870><c> pointer</c><00:03:29.569><c> intensive</c><00:03:30.569><c> in</c><00:03:31.290><c> order</c><00:03:31.560><c> to</c><00:03:31.709><c> get</c>

00:03:31.879 --> 00:03:31.889 align:start position:0%
be so pointer intensive in order to get
 

00:03:31.889 --> 00:03:33.890 align:start position:0%
be so pointer intensive in order to get
efficient<00:03:32.370><c> memory</c><00:03:32.489><c> layouts</c><00:03:32.910><c> today</c><00:03:33.359><c> pointers</c>

00:03:33.890 --> 00:03:33.900 align:start position:0%
efficient memory layouts today pointers
 

00:03:33.900 --> 00:03:35.839 align:start position:0%
efficient memory layouts today pointers
are<00:03:34.049><c> actually</c><00:03:34.440><c> a</c><00:03:34.470><c> higher</c><00:03:35.040><c> cost</c><00:03:35.400><c> than</c><00:03:35.730><c> they</c>

00:03:35.839 --> 00:03:35.849 align:start position:0%
are actually a higher cost than they
 

00:03:35.849 --> 00:03:37.849 align:start position:0%
are actually a higher cost than they
were<00:03:35.910><c> 20</c><00:03:36.359><c> years</c><00:03:36.389><c> ago</c><00:03:36.629><c> and</c><00:03:37.019><c> in</c><00:03:37.139><c> 20</c><00:03:37.470><c> years</c><00:03:37.650><c> it</c>

00:03:37.849 --> 00:03:37.859 align:start position:0%
were 20 years ago and in 20 years it
 

00:03:37.859 --> 00:03:40.460 align:start position:0%
were 20 years ago and in 20 years it
will<00:03:37.949><c> be</c><00:03:38.010><c> an</c><00:03:38.370><c> even</c><00:03:38.669><c> higher</c><00:03:38.849><c> cost</c><00:03:39.180><c> probably</c><00:03:39.569><c> so</c>

00:03:40.460 --> 00:03:40.470 align:start position:0%
will be an even higher cost probably so
 

00:03:40.470 --> 00:03:41.809 align:start position:0%
will be an even higher cost probably so
we<00:03:40.590><c> want</c><00:03:40.769><c> to</c><00:03:40.859><c> be</c><00:03:40.949><c> able</c><00:03:41.040><c> to</c><00:03:41.190><c> have</c><00:03:41.280><c> data</c><00:03:41.430><c> layouts</c>

00:03:41.809 --> 00:03:41.819 align:start position:0%
we want to be able to have data layouts
 

00:03:41.819 --> 00:03:43.490 align:start position:0%
we want to be able to have data layouts
that<00:03:41.970><c> are</c><00:03:42.090><c> pointer</c><00:03:42.480><c> thrifty</c><00:03:42.870><c> which</c><00:03:43.019><c> is</c><00:03:43.169><c> a</c><00:03:43.199><c> new</c>

00:03:43.490 --> 00:03:43.500 align:start position:0%
that are pointer thrifty which is a new
 

00:03:43.500 --> 00:03:46.369 align:start position:0%
that are pointer thrifty which is a new
a<00:03:43.799><c> new</c><00:03:44.489><c> direction</c><00:03:44.849><c> for</c><00:03:45.180><c> Java</c><00:03:45.599><c> that</c><00:03:45.989><c> was</c><00:03:46.199><c> not</c>

00:03:46.369 --> 00:03:46.379 align:start position:0%
a new direction for Java that was not
 

00:03:46.379 --> 00:03:47.990 align:start position:0%
a new direction for Java that was not
that<00:03:46.739><c> could</c><00:03:46.919><c> not</c><00:03:47.040><c> have</c><00:03:47.160><c> been</c><00:03:47.190><c> predicted</c><00:03:47.699><c> 20</c>

00:03:47.990 --> 00:03:48.000 align:start position:0%
that could not have been predicted 20
 

00:03:48.000 --> 00:03:51.439 align:start position:0%
that could not have been predicted 20
years<00:03:48.150><c> ago</c><00:03:49.220><c> one</c><00:03:50.220><c> thing</c><00:03:50.400><c> that</c><00:03:50.819><c> we</c><00:03:50.910><c> always</c><00:03:51.090><c> want</c>

00:03:51.439 --> 00:03:51.449 align:start position:0%
years ago one thing that we always want
 

00:03:51.449 --> 00:03:54.470 align:start position:0%
years ago one thing that we always want
is<00:03:51.569><c> speed</c><00:03:51.900><c> and</c><00:03:52.139><c> good</c><00:03:52.260><c> code</c><00:03:53.359><c> computers</c><00:03:54.359><c> that</c>

00:03:54.470 --> 00:03:54.480 align:start position:0%
is speed and good code computers that
 

00:03:54.480 --> 00:03:56.930 align:start position:0%
is speed and good code computers that
run<00:03:54.599><c> on</c><00:03:54.750><c> bad</c><00:03:54.989><c> code</c><00:03:55.319><c> well</c><00:03:55.620><c> Intel</c><00:03:56.010><c> actually</c><00:03:56.489><c> runs</c>

00:03:56.930 --> 00:03:56.940 align:start position:0%
run on bad code well Intel actually runs
 

00:03:56.940 --> 00:03:58.819 align:start position:0%
run on bad code well Intel actually runs
on<00:03:57.090><c> really</c><00:03:57.359><c> bad</c><00:03:57.510><c> code</c><00:03:57.840><c> but</c><00:03:58.109><c> that's</c><00:03:58.319><c> amazing</c>

00:03:58.819 --> 00:03:58.829 align:start position:0%
on really bad code but that's amazing
 

00:03:58.829 --> 00:04:01.430 align:start position:0%
on really bad code but that's amazing
how<00:03:58.889><c> they</c><00:03:59.010><c> do</c><00:03:59.069><c> it</c><00:03:59.310><c> in</c><00:04:00.000><c> any</c><00:04:00.269><c> case</c><00:04:00.449><c> you</c><00:04:00.810><c> want</c><00:04:01.049><c> you</c>

00:04:01.430 --> 00:04:01.440 align:start position:0%
how they do it in any case you want you
 

00:04:01.440 --> 00:04:04.129 align:start position:0%
how they do it in any case you want you
want<00:04:01.849><c> code</c><00:04:02.849><c> that</c><00:04:03.030><c> you're</c><00:04:03.150><c> responsible</c><00:04:03.540><c> for</c><00:04:03.780><c> to</c>

00:04:04.129 --> 00:04:04.139 align:start position:0%
want code that you're responsible for to
 

00:04:04.139 --> 00:04:06.229 align:start position:0%
want code that you're responsible for to
be<00:04:04.290><c> as</c><00:04:04.530><c> as</c><00:04:04.980><c> efficiently</c><00:04:05.430><c> compiled</c><00:04:05.819><c> to</c><00:04:06.090><c> the</c>

00:04:06.229 --> 00:04:06.239 align:start position:0%
be as as efficiently compiled to the
 

00:04:06.239 --> 00:04:08.059 align:start position:0%
be as as efficiently compiled to the
hardware<00:04:06.690><c> as</c><00:04:06.840><c> possible</c><00:04:07.379><c> and</c><00:04:07.530><c> we</c><00:04:07.590><c> want</c><00:04:07.709><c> that</c><00:04:07.919><c> to</c>

00:04:08.059 --> 00:04:08.069 align:start position:0%
hardware as possible and we want that to
 

00:04:08.069 --> 00:04:10.990 align:start position:0%
hardware as possible and we want that to
continue<00:04:08.220><c> to</c><00:04:08.669><c> be</c><00:04:08.790><c> true</c><00:04:09.060><c> Java</c><00:04:09.930><c> uses</c><00:04:10.290><c> online</c>

00:04:10.990 --> 00:04:11.000 align:start position:0%
continue to be true Java uses online
 

00:04:11.000 --> 00:04:13.159 align:start position:0%
continue to be true Java uses online
optimization<00:04:12.000><c> techniques</c><00:04:12.389><c> which</c><00:04:12.629><c> means</c><00:04:12.930><c> that</c>

00:04:13.159 --> 00:04:13.169 align:start position:0%
optimization techniques which means that
 

00:04:13.169 --> 00:04:15.229 align:start position:0%
optimization techniques which means that
it<00:04:13.290><c> can</c><00:04:13.440><c> produce</c><00:04:13.949><c> better</c><00:04:14.250><c> hot</c><00:04:14.519><c> loops</c><00:04:14.790><c> in</c><00:04:15.060><c> many</c>

00:04:15.229 --> 00:04:15.239 align:start position:0%
it can produce better hot loops in many
 

00:04:15.239 --> 00:04:17.180 align:start position:0%
it can produce better hot loops in many
cases<00:04:15.690><c> than</c><00:04:15.900><c> static</c><00:04:16.289><c> compilers</c><00:04:16.799><c> like</c><00:04:16.979><c> C</c><00:04:17.159><c> and</c>

00:04:17.180 --> 00:04:17.190 align:start position:0%
cases than static compilers like C and
 

00:04:17.190 --> 00:04:19.009 align:start position:0%
cases than static compilers like C and
C++

00:04:19.009 --> 00:04:19.019 align:start position:0%
C++
 

00:04:19.019 --> 00:04:21.529 align:start position:0%
C++
the<00:04:19.799><c> future</c><00:04:20.280><c> I</c><00:04:20.310><c> think</c><00:04:20.489><c> we'll</c><00:04:21.090><c> have</c><00:04:21.269><c> less</c>

00:04:21.529 --> 00:04:21.539 align:start position:0%
the future I think we'll have less
 

00:04:21.539 --> 00:04:24.170 align:start position:0%
the future I think we'll have less
threads<00:04:21.930><c> in</c><00:04:22.139><c> it</c><00:04:22.259><c> or</c><00:04:22.560><c> more</c><00:04:23.340><c> little</c><00:04:23.669><c> tiny</c><00:04:23.880><c> things</c>

00:04:24.170 --> 00:04:24.180 align:start position:0%
threads in it or more little tiny things
 

00:04:24.180 --> 00:04:25.999 align:start position:0%
threads in it or more little tiny things
that<00:04:24.300><c> used</c><00:04:24.539><c> to</c><00:04:24.599><c> be</c><00:04:24.690><c> threads</c><00:04:25.050><c> better</c><00:04:25.349><c> but</c><00:04:25.889><c> are</c>

00:04:25.999 --> 00:04:26.009 align:start position:0%
that used to be threads better but are
 

00:04:26.009 --> 00:04:29.749 align:start position:0%
that used to be threads better but are
more<00:04:26.819><c> composable</c><00:04:27.449><c> and</c><00:04:27.720><c> agile</c><00:04:28.169><c> so</c><00:04:28.860><c> we</c><00:04:29.099><c> want</c><00:04:29.370><c> we</c>

00:04:29.749 --> 00:04:29.759 align:start position:0%
more composable and agile so we want we
 

00:04:29.759 --> 00:04:31.670 align:start position:0%
more composable and agile so we want we
want<00:04:29.940><c> to</c><00:04:30.030><c> fire</c><00:04:30.300><c> finer</c><00:04:30.660><c> grained</c><00:04:30.960><c> concurrency</c>

00:04:31.670 --> 00:04:31.680 align:start position:0%
want to fire finer grained concurrency
 

00:04:31.680 --> 00:04:34.430 align:start position:0%
want to fire finer grained concurrency
and<00:04:31.889><c> at</c><00:04:32.310><c> the</c><00:04:32.400><c> same</c><00:04:32.580><c> time</c><00:04:32.880><c> less</c><00:04:33.660><c> degrees</c><00:04:34.169><c> of</c>

00:04:34.430 --> 00:04:34.440 align:start position:0%
and at the same time less degrees of
 

00:04:34.440 --> 00:04:37.490 align:start position:0%
and at the same time less degrees of
unimportant<00:04:35.250><c> freedom</c><00:04:35.849><c> to</c><00:04:36.690><c> create</c><00:04:37.229><c> race</c>

00:04:37.490 --> 00:04:37.500 align:start position:0%
unimportant freedom to create race
 

00:04:37.500 --> 00:04:39.830 align:start position:0%
unimportant freedom to create race
conditions<00:04:38.009><c> in</c><00:04:38.280><c> our</c><00:04:38.430><c> in</c><00:04:38.699><c> our</c><00:04:38.849><c> applications</c><00:04:39.509><c> so</c>

00:04:39.830 --> 00:04:39.840 align:start position:0%
conditions in our in our applications so
 

00:04:39.840 --> 00:04:42.110 align:start position:0%
conditions in our in our applications so
I<00:04:40.050><c> would</c><00:04:40.410><c> say</c><00:04:40.530><c> the</c><00:04:40.650><c> future</c><00:04:40.800><c> is</c><00:04:41.009><c> post</c><00:04:41.400><c> threaded</c>

00:04:42.110 --> 00:04:42.120 align:start position:0%
I would say the future is post threaded
 

00:04:42.120 --> 00:04:44.900 align:start position:0%
I would say the future is post threaded
and<00:04:42.690><c> so</c><00:04:42.960><c> think</c><00:04:43.169><c> fibers</c><00:04:43.590><c> about</c><00:04:43.889><c> that</c><00:04:44.099><c> the</c>

00:04:44.900 --> 00:04:44.910 align:start position:0%
and so think fibers about that the
 

00:04:44.910 --> 00:04:47.990 align:start position:0%
and so think fibers about that the
future<00:04:45.240><c> is</c><00:04:45.360><c> also</c><00:04:45.539><c> interoperable</c><00:04:46.490><c> it</c><00:04:47.490><c> is</c><00:04:47.639><c> not</c>

00:04:47.990 --> 00:04:48.000 align:start position:0%
future is also interoperable it is not
 

00:04:48.000 --> 00:04:49.999 align:start position:0%
future is also interoperable it is not
the<00:04:48.180><c> case</c><00:04:48.389><c> that</c><00:04:48.419><c> you</c><00:04:48.870><c> can</c><00:04:48.900><c> write</c><00:04:49.319><c> a</c><00:04:49.349><c> language</c>

00:04:49.999 --> 00:04:50.009 align:start position:0%
the case that you can write a language
 

00:04:50.009 --> 00:04:51.680 align:start position:0%
the case that you can write a language
that<00:04:50.190><c> is</c><00:04:50.250><c> so</c><00:04:50.550><c> compelling</c><00:04:51.120><c> that</c><00:04:51.150><c> everyone</c><00:04:51.599><c> will</c>

00:04:51.680 --> 00:04:51.690 align:start position:0%
that is so compelling that everyone will
 

00:04:51.690 --> 00:04:53.390 align:start position:0%
that is so compelling that everyone will
drop<00:04:51.990><c> their</c><00:04:52.259><c> existing</c><00:04:52.680><c> source</c><00:04:52.949><c> code</c><00:04:53.190><c> and</c>

00:04:53.390 --> 00:04:53.400 align:start position:0%
drop their existing source code and
 

00:04:53.400 --> 00:04:54.770 align:start position:0%
drop their existing source code and
their<00:04:53.490><c> existing</c><00:04:53.849><c> libraries</c><00:04:54.270><c> and</c><00:04:54.449><c> go</c><00:04:54.569><c> to</c><00:04:54.630><c> your</c>

00:04:54.770 --> 00:04:54.780 align:start position:0%
their existing libraries and go to your
 

00:04:54.780 --> 00:04:56.779 align:start position:0%
their existing libraries and go to your
language<00:04:55.560><c> and</c><00:04:55.680><c> code</c><00:04:55.919><c> in</c><00:04:56.099><c> it</c><00:04:56.220><c> for</c><00:04:56.430><c> the</c><00:04:56.490><c> rest</c><00:04:56.669><c> of</c>

00:04:56.779 --> 00:04:56.789 align:start position:0%
language and code in it for the rest of
 

00:04:56.789 --> 00:05:00.170 align:start position:0%
language and code in it for the rest of
their<00:04:56.940><c> lives</c><00:04:57.090><c> right</c><00:04:57.449><c> that</c><00:04:57.750><c> doesn't</c><00:04:58.050><c> work</c><00:04:59.180><c> but</c>

00:05:00.170 --> 00:05:00.180 align:start position:0%
their lives right that doesn't work but
 

00:05:00.180 --> 00:05:02.180 align:start position:0%
their lives right that doesn't work but
what<00:05:00.360><c> you</c><00:05:00.479><c> can</c><00:05:00.690><c> do</c><00:05:00.870><c> is</c><00:05:01.020><c> provide</c><00:05:01.650><c> a</c><00:05:01.710><c> language</c>

00:05:02.180 --> 00:05:02.190 align:start position:0%
what you can do is provide a language
 

00:05:02.190 --> 00:05:04.580 align:start position:0%
what you can do is provide a language
that<00:05:02.460><c> is</c><00:05:03.060><c> really</c><00:05:03.360><c> competent</c><00:05:03.750><c> to</c><00:05:04.229><c> connect</c>

00:05:04.580 --> 00:05:04.590 align:start position:0%
that is really competent to connect
 

00:05:04.590 --> 00:05:06.860 align:start position:0%
that is really competent to connect
those<00:05:04.740><c> pre-existing</c><00:05:05.460><c> components</c><00:05:06.060><c> and</c><00:05:06.300><c> and</c>

00:05:06.860 --> 00:05:06.870 align:start position:0%
those pre-existing components and and
 

00:05:06.870 --> 00:05:08.659 align:start position:0%
those pre-existing components and and
take<00:05:07.110><c> those</c><00:05:07.319><c> libraries</c><00:05:07.830><c> that</c><00:05:08.069><c> you</c><00:05:08.460><c> already</c>

00:05:08.659 --> 00:05:08.669 align:start position:0%
take those libraries that you already
 

00:05:08.669 --> 00:05:10.309 align:start position:0%
take those libraries that you already
depend<00:05:09.150><c> on</c><00:05:09.300><c> and</c><00:05:09.539><c> combine</c><00:05:09.840><c> them</c><00:05:10.050><c> in</c><00:05:10.139><c> new</c><00:05:10.289><c> ways</c>

00:05:10.309 --> 00:05:10.319 align:start position:0%
depend on and combine them in new ways
 

00:05:10.319 --> 00:05:12.770 align:start position:0%
depend on and combine them in new ways
and<00:05:10.800><c> make</c><00:05:10.919><c> new</c><00:05:11.039><c> applications</c><00:05:11.729><c> and</c><00:05:11.940><c> a</c><00:05:12.449><c> language</c>

00:05:12.770 --> 00:05:12.780 align:start position:0%
and make new applications and a language
 

00:05:12.780 --> 00:05:14.600 align:start position:0%
and make new applications and a language
that<00:05:12.960><c> does</c><00:05:13.110><c> that</c><00:05:13.349><c> well</c><00:05:13.590><c> well</c><00:05:14.130><c> that's</c><00:05:14.400><c> going</c><00:05:14.520><c> to</c>

00:05:14.600 --> 00:05:14.610 align:start position:0%
that does that well well that's going to
 

00:05:14.610 --> 00:05:15.980 align:start position:0%
that does that well well that's going to
be<00:05:14.699><c> a</c><00:05:14.729><c> language</c><00:05:15.060><c> that</c><00:05:15.180><c> people</c><00:05:15.300><c> use</c><00:05:15.599><c> more</c><00:05:15.810><c> and</c>

00:05:15.980 --> 00:05:15.990 align:start position:0%
be a language that people use more and
 

00:05:15.990 --> 00:05:19.909 align:start position:0%
be a language that people use more and
more<00:05:16.220><c> and</c><00:05:17.220><c> and</c><00:05:17.490><c> maybe</c><00:05:17.729><c> in</c><00:05:17.970><c> the</c><00:05:18.090><c> end</c><00:05:18.210><c> a</c><00:05:18.919><c> sizable</c>

00:05:19.909 --> 00:05:19.919 align:start position:0%
more and and maybe in the end a sizable
 

00:05:19.919 --> 00:05:21.740 align:start position:0%
more and and maybe in the end a sizable
amount<00:05:20.009><c> of</c><00:05:20.220><c> stuff</c><00:05:20.460><c> that</c><00:05:20.669><c> will</c><00:05:20.819><c> be</c><00:05:21.240><c> written</c><00:05:21.449><c> in</c>

00:05:21.740 --> 00:05:21.750 align:start position:0%
amount of stuff that will be written in
 

00:05:21.750 --> 00:05:23.510 align:start position:0%
amount of stuff that will be written in
it<00:05:21.900><c> but</c><00:05:22.259><c> it</c><00:05:22.349><c> will</c><00:05:22.440><c> still</c><00:05:22.650><c> work</c><00:05:22.860><c> with</c><00:05:23.130><c> with</c><00:05:23.370><c> all</c>

00:05:23.510 --> 00:05:23.520 align:start position:0%
it but it will still work with with all
 

00:05:23.520 --> 00:05:25.040 align:start position:0%
it but it will still work with with all
the<00:05:23.639><c> stuff</c><00:05:23.909><c> that</c><00:05:23.940><c> hasn't</c><00:05:24.240><c> been</c><00:05:24.419><c> translated</c>

00:05:25.040 --> 00:05:25.050 align:start position:0%
the stuff that hasn't been translated
 

00:05:25.050 --> 00:05:26.420 align:start position:0%
the stuff that hasn't been translated
into<00:05:25.229><c> that</c><00:05:25.409><c> new</c><00:05:25.590><c> languages</c><00:05:26.070><c> that</c><00:05:26.250><c> sound</c>

00:05:26.420 --> 00:05:26.430 align:start position:0%
into that new languages that sound
 

00:05:26.430 --> 00:05:27.830 align:start position:0%
into that new languages that sound
familiar<00:05:26.580><c> that's</c><00:05:27.060><c> really</c><00:05:27.360><c> the</c><00:05:27.479><c> story</c><00:05:27.659><c> of</c>

00:05:27.830 --> 00:05:27.840 align:start position:0%
familiar that's really the story of
 

00:05:27.840 --> 00:05:29.689 align:start position:0%
familiar that's really the story of
Java's<00:05:28.199><c> life</c><00:05:28.409><c> it's</c><00:05:28.620><c> become</c><00:05:28.860><c> a</c><00:05:28.889><c> wonderful</c><00:05:29.400><c> glue</c>

00:05:29.689 --> 00:05:29.699 align:start position:0%
Java's life it's become a wonderful glue
 

00:05:29.699 --> 00:05:34.339 align:start position:0%
Java's life it's become a wonderful glue
for<00:05:30.479><c> applications</c><00:05:31.370><c> as</c><00:05:32.370><c> well</c><00:05:32.759><c> as</c><00:05:33.060><c> a</c><00:05:33.349><c> something</c>

00:05:34.339 --> 00:05:34.349 align:start position:0%
for applications as well as a something
 

00:05:34.349 --> 00:05:35.839 align:start position:0%
for applications as well as a something
for<00:05:34.500><c> writing</c><00:05:34.770><c> new</c><00:05:34.919><c> algorithms</c><00:05:35.460><c> in</c><00:05:35.580><c> its</c><00:05:35.729><c> own</c>

00:05:35.839 --> 00:05:35.849 align:start position:0%
for writing new algorithms in its own
 

00:05:35.849 --> 00:05:41.749 align:start position:0%
for writing new algorithms in its own
right<00:05:37.070><c> and</c><00:05:38.070><c> of</c><00:05:38.789><c> course</c><00:05:38.820><c> you</c><00:05:39.570><c> want</c><00:05:40.400><c> you</c><00:05:41.400><c> want</c><00:05:41.639><c> a</c>

00:05:41.749 --> 00:05:41.759 align:start position:0%
right and of course you want you want a
 

00:05:41.759 --> 00:05:43.640 align:start position:0%
right and of course you want you want a
language<00:05:42.180><c> like</c><00:05:42.419><c> Java</c><00:05:42.719><c> to</c><00:05:43.050><c> be</c><00:05:43.139><c> general-purpose</c>

00:05:43.640 --> 00:05:43.650 align:start position:0%
language like Java to be general-purpose
 

00:05:43.650 --> 00:05:46.310 align:start position:0%
language like Java to be general-purpose
you<00:05:44.610><c> don't</c><00:05:44.789><c> want</c><00:05:44.909><c> it</c><00:05:45.000><c> to</c><00:05:45.120><c> be</c><00:05:45.270><c> in</c><00:05:45.599><c> 20</c><00:05:45.960><c> years</c><00:05:45.990><c> we</c>

00:05:46.310 --> 00:05:46.320 align:start position:0%
you don't want it to be in 20 years we
 

00:05:46.320 --> 00:05:47.360 align:start position:0%
you don't want it to be in 20 years we
don't<00:05:46.409><c> want</c><00:05:46.590><c> to</c><00:05:46.650><c> look</c><00:05:46.710><c> at</c><00:05:46.800><c> Java</c><00:05:47.099><c> and</c><00:05:47.250><c> say</c><00:05:47.340><c> oh</c>

00:05:47.360 --> 00:05:47.370 align:start position:0%
don't want to look at Java and say oh
 

00:05:47.370 --> 00:05:48.529 align:start position:0%
don't want to look at Java and say oh
yeah<00:05:47.580><c> that's</c><00:05:47.669><c> the</c><00:05:47.849><c> code</c><00:05:48.030><c> for</c><00:05:48.210><c> writing</c>

00:05:48.529 --> 00:05:48.539 align:start position:0%
yeah that's the code for writing
 

00:05:48.539 --> 00:05:50.209 align:start position:0%
yeah that's the code for writing
applications<00:05:49.139><c> the</c><00:05:49.289><c> way</c><00:05:49.380><c> they</c><00:05:49.560><c> wrote</c><00:05:49.740><c> them</c><00:05:49.919><c> 20</c>

00:05:50.209 --> 00:05:50.219 align:start position:0%
applications the way they wrote them 20
 

00:05:50.219 --> 00:05:52.100 align:start position:0%
applications the way they wrote them 20
years<00:05:50.250><c> ago</c><00:05:50.550><c> that's</c><00:05:50.880><c> no</c><00:05:51.090><c> that's</c><00:05:51.719><c> not</c><00:05:51.900><c> what</c><00:05:52.020><c> it</c>

00:05:52.100 --> 00:05:52.110 align:start position:0%
years ago that's no that's not what it
 

00:05:52.110 --> 00:05:53.839 align:start position:0%
years ago that's no that's not what it
is<00:05:52.169><c> today</c><00:05:52.440><c> today</c><00:05:52.860><c> it's</c><00:05:53.069><c> a</c><00:05:53.159><c> language</c><00:05:53.699><c> for</c>

00:05:53.839 --> 00:05:53.849 align:start position:0%
is today today it's a language for
 

00:05:53.849 --> 00:05:55.580 align:start position:0%
is today today it's a language for
writing<00:05:53.969><c> modern</c><00:05:54.419><c> applications</c><00:05:54.990><c> we</c><00:05:55.380><c> want</c><00:05:55.530><c> it</c>

00:05:55.580 --> 00:05:55.590 align:start position:0%
writing modern applications we want it
 

00:05:55.590 --> 00:05:59.589 align:start position:0%
writing modern applications we want it
to<00:05:55.680><c> continue</c><00:05:55.830><c> to</c><00:05:56.099><c> be</c><00:05:56.280><c> like</c><00:05:56.310><c> that</c><00:05:56.729><c> and</c><00:05:57.830><c> finally</c>

00:05:59.589 --> 00:05:59.599 align:start position:0%
to continue to be like that and finally
 

00:05:59.599 --> 00:06:03.320 align:start position:0%
to continue to be like that and finally
one<00:06:00.599><c> of</c><00:06:00.870><c> the</c><00:06:00.990><c> jobs</c><00:06:01.259><c> of</c><00:06:01.530><c> glue</c><00:06:01.830><c> is</c><00:06:02.280><c> to</c><00:06:02.520><c> glue</c><00:06:02.759><c> is</c><00:06:03.150><c> to</c>

00:06:03.320 --> 00:06:03.330 align:start position:0%
one of the jobs of glue is to glue is to
 

00:06:03.330 --> 00:06:05.330 align:start position:0%
one of the jobs of glue is to glue is to
hold<00:06:03.539><c> for</c><00:06:03.900><c> more</c><00:06:04.020><c> than</c><00:06:04.229><c> more</c><00:06:04.770><c> than</c><00:06:04.919><c> a</c><00:06:05.009><c> second</c>

00:06:05.330 --> 00:06:05.340 align:start position:0%
hold for more than more than a second
 

00:06:05.340 --> 00:06:07.820 align:start position:0%
hold for more than more than a second
write<00:06:05.759><c> glue</c><00:06:06.360><c> that</c><00:06:06.569><c> lets</c><00:06:06.780><c> go</c><00:06:06.990><c> after</c><00:06:07.169><c> a</c><00:06:07.409><c> year</c><00:06:07.710><c> is</c>

00:06:07.820 --> 00:06:07.830 align:start position:0%
write glue that lets go after a year is
 

00:06:07.830 --> 00:06:09.860 align:start position:0%
write glue that lets go after a year is
not<00:06:07.979><c> very</c><00:06:08.219><c> good</c><00:06:08.430><c> glue</c><00:06:08.699><c> you</c><00:06:08.940><c> want</c><00:06:09.240><c> if</c><00:06:09.509><c> job</c><00:06:09.750><c> is</c>

00:06:09.860 --> 00:06:09.870 align:start position:0%
not very good glue you want if job is
 

00:06:09.870 --> 00:06:11.390 align:start position:0%
not very good glue you want if job is
going<00:06:09.990><c> to</c><00:06:10.050><c> be</c><00:06:10.139><c> used</c><00:06:10.349><c> to</c><00:06:10.500><c> glue</c><00:06:10.770><c> stuff</c><00:06:11.130><c> together</c>

00:06:11.390 --> 00:06:11.400 align:start position:0%
going to be used to glue stuff together
 

00:06:11.400 --> 00:06:13.939 align:start position:0%
going to be used to glue stuff together
you<00:06:12.150><c> want</c><00:06:12.330><c> that</c><00:06:12.509><c> glue</c><00:06:12.840><c> to</c><00:06:13.080><c> last</c><00:06:13.319><c> for</c><00:06:13.710><c> a</c><00:06:13.770><c> long</c>

00:06:13.939 --> 00:06:13.949 align:start position:0%
you want that glue to last for a long
 

00:06:13.949 --> 00:06:15.740 align:start position:0%
you want that glue to last for a long
time<00:06:14.219><c> you</c><00:06:14.430><c> want</c><00:06:14.580><c> it</c><00:06:14.610><c> to</c><00:06:14.759><c> be</c><00:06:14.819><c> library</c><00:06:15.300><c> quality</c>

00:06:15.740 --> 00:06:15.750 align:start position:0%
time you want it to be library quality
 

00:06:15.750 --> 00:06:18.830 align:start position:0%
time you want it to be library quality
which<00:06:15.900><c> means</c><00:06:16.169><c> that</c><00:06:16.740><c> jars</c><00:06:17.729><c> that</c><00:06:18.210><c> were</c><00:06:18.360><c> created</c>

00:06:18.830 --> 00:06:18.840 align:start position:0%
which means that jars that were created
 

00:06:18.840 --> 00:06:21.409 align:start position:0%
which means that jars that were created
20<00:06:19.440><c> years</c><00:06:19.680><c> ago</c><00:06:19.949><c> 30</c><00:06:20.310><c> years</c><00:06:20.400><c> ago</c><00:06:20.639><c> in</c><00:06:21.000><c> the</c><00:06:21.090><c> future</c>

00:06:21.409 --> 00:06:21.419 align:start position:0%
20 years ago 30 years ago in the future
 

00:06:21.419 --> 00:06:25.490 align:start position:0%
20 years ago 30 years ago in the future
should<00:06:22.020><c> still</c><00:06:22.469><c> continue</c><00:06:23.039><c> to</c><00:06:23.069><c> run</c><00:06:23.460><c> I</c><00:06:24.349><c> call</c><00:06:25.349><c> them</c>

00:06:25.490 --> 00:06:25.500 align:start position:0%
should still continue to run I call them
 

00:06:25.500 --> 00:06:28.189 align:start position:0%
should still continue to run I call them
dusty<00:06:25.889><c> jars</c><00:06:26.130><c> and</c><00:06:26.370><c> give</c><00:06:26.639><c> in</c><00:06:27.000><c> analogy</c><00:06:27.900><c> with</c><00:06:28.080><c> the</c>

00:06:28.189 --> 00:06:28.199 align:start position:0%
dusty jars and give in analogy with the
 

00:06:28.199 --> 00:06:31.010 align:start position:0%
dusty jars and give in analogy with the
old-fashioned<00:06:28.860><c> dusty</c><00:06:29.250><c> decks</c><00:06:29.490><c> right</c><00:06:30.029><c> you</c><00:06:30.360><c> take</c>

00:06:31.010 --> 00:06:31.020 align:start position:0%
old-fashioned dusty decks right you take
 

00:06:31.020 --> 00:06:33.200 align:start position:0%
old-fashioned dusty decks right you take
a<00:06:31.080><c> dusty</c><00:06:31.440><c> deck</c><00:06:31.589><c> of</c><00:06:31.740><c> Fortran</c><00:06:32.070><c> code</c><00:06:32.339><c> does</c><00:06:32.909><c> it</c><00:06:33.060><c> run</c>

00:06:33.200 --> 00:06:33.210 align:start position:0%
a dusty deck of Fortran code does it run
 

00:06:33.210 --> 00:06:35.920 align:start position:0%
a dusty deck of Fortran code does it run
I<00:06:33.419><c> don't</c><00:06:33.510><c> know</c><00:06:33.719><c> it's</c><00:06:33.870><c> always</c><00:06:34.020><c> an</c><00:06:34.199><c> adventure</c>

00:06:35.920 --> 00:06:35.930 align:start position:0%
I don't know it's always an adventure
 

00:06:35.930 --> 00:06:38.750 align:start position:0%
I don't know it's always an adventure
finally<00:06:36.930><c> whatever</c><00:06:37.409><c> the</c><00:06:37.949><c> future</c><00:06:38.130><c> holds</c><00:06:38.490><c> for</c>

00:06:38.750 --> 00:06:38.760 align:start position:0%
finally whatever the future holds for
 

00:06:38.760 --> 00:06:42.260 align:start position:0%
finally whatever the future holds for
new<00:06:39.120><c> CPU</c><00:06:39.570><c> types</c><00:06:39.870><c> you</c><00:06:40.380><c> know</c><00:06:40.469><c> many</c><00:06:40.740><c> core</c><00:06:41.270><c> wider</c>

00:06:42.260 --> 00:06:42.270 align:start position:0%
new CPU types you know many core wider
 

00:06:42.270 --> 00:06:44.570 align:start position:0%
new CPU types you know many core wider
data<00:06:42.599><c> paths</c><00:06:42.960><c> who</c><00:06:43.710><c> knows</c><00:06:43.919><c> what's</c><00:06:44.159><c> coming</c><00:06:44.250><c> up</c>

00:06:44.570 --> 00:06:44.580 align:start position:0%
data paths who knows what's coming up
 

00:06:44.580 --> 00:06:46.129 align:start position:0%
data paths who knows what's coming up
persistent<00:06:45.180><c> memory</c><00:06:45.330><c> is</c><00:06:45.510><c> a</c><00:06:45.539><c> big</c><00:06:45.750><c> thing</c><00:06:45.960><c> right</c>

00:06:46.129 --> 00:06:46.139 align:start position:0%
persistent memory is a big thing right
 

00:06:46.139 --> 00:06:50.689 align:start position:0%
persistent memory is a big thing right
now<00:06:47.180><c> whatever</c><00:06:48.180><c> the</c><00:06:48.360><c> new</c><00:06:48.510><c> CPUs</c><00:06:48.990><c> are</c><00:06:49.490><c> we</c><00:06:50.490><c> want</c>

00:06:50.689 --> 00:06:50.699 align:start position:0%
now whatever the new CPUs are we want
 

00:06:50.699 --> 00:06:52.490 align:start position:0%
now whatever the new CPUs are we want
the<00:06:50.849><c> JVM</c><00:06:51.300><c> and</c><00:06:51.479><c> the</c><00:06:51.570><c> Java</c><00:06:51.779><c> Runtime</c><00:06:52.229><c> and</c><00:06:52.440><c> the</c>

00:06:52.490 --> 00:06:52.500 align:start position:0%
the JVM and the Java Runtime and the
 

00:06:52.500 --> 00:06:54.469 align:start position:0%
the JVM and the Java Runtime and the
Java<00:06:52.710><c> language</c><00:06:52.919><c> team</c><00:06:53.279><c> to</c><00:06:53.639><c> keep</c><00:06:53.849><c> track</c><00:06:54.150><c> of</c><00:06:54.360><c> that</c>

00:06:54.469 --> 00:06:54.479 align:start position:0%
Java language team to keep track of that
 

00:06:54.479 --> 00:06:57.560 align:start position:0%
Java language team to keep track of that
and<00:06:54.750><c> be</c><00:06:54.960><c> able</c><00:06:55.199><c> to</c><00:06:55.380><c> compile</c><00:06:56.150><c> useful</c><00:06:57.150><c> programs</c>

00:06:57.560 --> 00:06:57.570 align:start position:0%
and be able to compile useful programs
 

00:06:57.570 --> 00:06:59.540 align:start position:0%
and be able to compile useful programs
efficiently<00:06:58.199><c> to</c><00:06:58.349><c> whatever</c><00:06:58.560><c> those</c><00:06:58.860><c> new</c><00:06:59.039><c> CPUs</c>

00:06:59.540 --> 00:06:59.550 align:start position:0%
efficiently to whatever those new CPUs
 

00:06:59.550 --> 00:07:02.689 align:start position:0%
efficiently to whatever those new CPUs
are<00:06:59.930><c> which</c><00:07:00.930><c> means</c><00:07:01.199><c> we</c><00:07:01.860><c> can't</c><00:07:02.099><c> just</c><00:07:02.310><c> stick</c><00:07:02.520><c> with</c>

00:07:02.689 --> 00:07:02.699 align:start position:0%
are which means we can't just stick with
 

00:07:02.699 --> 00:07:05.060 align:start position:0%
are which means we can't just stick with
64-bit<00:07:03.360><c> Long's</c><00:07:03.870><c> and</c><00:07:04.139><c> say</c><00:07:04.289><c> that's</c><00:07:04.469><c> the</c><00:07:04.650><c> end</c><00:07:04.740><c> of</c>

00:07:05.060 --> 00:07:05.070 align:start position:0%
64-bit Long's and say that's the end of
 

00:07:05.070 --> 00:07:09.379 align:start position:0%
64-bit Long's and say that's the end of
all<00:07:05.219><c> our</c><00:07:05.279><c> of</c><00:07:06.029><c> all</c><00:07:06.210><c> of</c><00:07:06.360><c> our</c><00:07:06.479><c> primitives</c><00:07:08.180><c> it</c><00:07:09.180><c> is</c>

00:07:09.379 --> 00:07:09.389 align:start position:0%
all our of all of our primitives it is
 

00:07:09.389 --> 00:07:11.209 align:start position:0%
all our of all of our primitives it is
hard<00:07:09.630><c> to</c><00:07:09.690><c> forecast</c><00:07:10.199><c> but</c><00:07:10.529><c> sometimes</c><00:07:10.889><c> you</c><00:07:11.070><c> can</c>

00:07:11.209 --> 00:07:11.219 align:start position:0%
hard to forecast but sometimes you can
 

00:07:11.219 --> 00:07:14.300 align:start position:0%
hard to forecast but sometimes you can
sort<00:07:11.460><c> of</c><00:07:11.490><c> take</c><00:07:11.669><c> a</c><00:07:11.729><c> local</c><00:07:12.120><c> derivative</c><00:07:12.719><c> and</c><00:07:13.310><c> make</c>

00:07:14.300 --> 00:07:14.310 align:start position:0%
sort of take a local derivative and make
 

00:07:14.310 --> 00:07:16.249 align:start position:0%
sort of take a local derivative and make
a<00:07:14.339><c> make</c><00:07:14.699><c> an</c><00:07:14.849><c> oversimplified</c><00:07:15.570><c> vector</c><00:07:16.020><c> in</c><00:07:16.199><c> the</c>

00:07:16.249 --> 00:07:16.259 align:start position:0%
a make an oversimplified vector in the
 

00:07:16.259 --> 00:07:17.570 align:start position:0%
a make an oversimplified vector in the
direction<00:07:16.289><c> you</c><00:07:16.740><c> think</c><00:07:16.979><c> you're</c><00:07:17.099><c> going</c><00:07:17.430><c> and</c>

00:07:17.570 --> 00:07:17.580 align:start position:0%
direction you think you're going and
 

00:07:17.580 --> 00:07:19.399 align:start position:0%
direction you think you're going and
then<00:07:18.000><c> maybe</c><00:07:18.180><c> when</c><00:07:18.419><c> you</c><00:07:18.570><c> in</c><00:07:18.779><c> the</c><00:07:18.839><c> future</c><00:07:19.080><c> when</c>

00:07:19.399 --> 00:07:19.409 align:start position:0%
then maybe when you in the future when
 

00:07:19.409 --> 00:07:21.260 align:start position:0%
then maybe when you in the future when
you<00:07:19.589><c> when</c><00:07:20.370><c> you</c><00:07:20.460><c> get</c><00:07:20.610><c> there</c><00:07:20.789><c> you'll</c><00:07:20.940><c> say</c><00:07:21.089><c> yeah</c>

00:07:21.260 --> 00:07:21.270 align:start position:0%
you when you get there you'll say yeah
 

00:07:21.270 --> 00:07:23.149 align:start position:0%
you when you get there you'll say yeah
that<00:07:21.300><c> vector</c><00:07:21.779><c> was</c><00:07:21.990><c> off</c><00:07:22.169><c> but</c><00:07:22.469><c> it</c><00:07:22.529><c> wasn't</c><00:07:22.800><c> off</c><00:07:22.979><c> by</c>

00:07:23.149 --> 00:07:23.159 align:start position:0%
that vector was off but it wasn't off by
 

00:07:23.159 --> 00:07:25.129 align:start position:0%
that vector was off but it wasn't off by
too<00:07:23.219><c> much</c><00:07:23.550><c> right</c><00:07:23.940><c> that's</c><00:07:24.570><c> what</c><00:07:24.750><c> you</c><00:07:24.779><c> do</c><00:07:24.990><c> when</c>

00:07:25.129 --> 00:07:25.139 align:start position:0%
too much right that's what you do when
 

00:07:25.139 --> 00:07:27.350 align:start position:0%
too much right that's what you do when
you<00:07:25.229><c> forecast</c><00:07:25.710><c> by</c><00:07:26.370><c> the</c><00:07:26.399><c> way</c><00:07:26.610><c> this</c><00:07:26.759><c> is</c><00:07:26.969><c> one</c><00:07:27.210><c> of</c>

00:07:27.350 --> 00:07:27.360 align:start position:0%
you forecast by the way this is one of
 

00:07:27.360 --> 00:07:31.540 align:start position:0%
you forecast by the way this is one of
my<00:07:27.509><c> two</c><00:07:27.570><c> graphics</c><00:07:28.440><c> I</c><00:07:28.680><c> hope</c><00:07:28.830><c> you</c><00:07:28.949><c> enjoy</c><00:07:29.250><c> it</c>

00:07:31.540 --> 00:07:31.550 align:start position:0%
 
 

00:07:31.550 --> 00:07:35.300 align:start position:0%
 
these<00:07:32.550><c> slides</c><00:07:32.820><c> will</c><00:07:33.149><c> be</c><00:07:33.180><c> up</c><00:07:33.360><c> on</c><00:07:34.039><c> on</c><00:07:35.039><c> my</c>

00:07:35.300 --> 00:07:35.310 align:start position:0%
these slides will be up on on my
 

00:07:35.310 --> 00:07:37.939 align:start position:0%
these slides will be up on on my
presentation<00:07:36.029><c> page</c><00:07:36.389><c> and</c><00:07:36.690><c> openjdk</c><00:07:37.409><c> there's</c><00:07:37.860><c> a</c>

00:07:37.939 --> 00:07:37.949 align:start position:0%
presentation page and openjdk there's a
 

00:07:37.949 --> 00:07:40.730 align:start position:0%
presentation page and openjdk there's a
link<00:07:38.130><c> at</c><00:07:38.219><c> the</c><00:07:38.339><c> end</c><00:07:38.659><c> so</c><00:07:39.659><c> you're</c><00:07:40.080><c> not</c><00:07:40.529><c> going</c><00:07:40.680><c> to</c>

00:07:40.730 --> 00:07:40.740 align:start position:0%
link at the end so you're not going to
 

00:07:40.740 --> 00:07:42.110 align:start position:0%
link at the end so you're not going to
be<00:07:40.830><c> able</c><00:07:40.979><c> to</c><00:07:41.099><c> read</c><00:07:41.279><c> all</c><00:07:41.490><c> this</c><00:07:41.699><c> and</c><00:07:41.880><c> I'm</c><00:07:41.940><c> not</c>

00:07:42.110 --> 00:07:42.120 align:start position:0%
be able to read all this and I'm not
 

00:07:42.120 --> 00:07:43.610 align:start position:0%
be able to read all this and I'm not
going<00:07:42.300><c> to</c><00:07:42.419><c> be</c><00:07:42.509><c> able</c><00:07:42.719><c> to</c><00:07:42.810><c> explain</c><00:07:43.110><c> all</c><00:07:43.349><c> of</c><00:07:43.469><c> it</c><00:07:43.589><c> I</c>

00:07:43.610 --> 00:07:43.620 align:start position:0%
going to be able to explain all of it I
 

00:07:43.620 --> 00:07:45.499 align:start position:0%
going to be able to explain all of it I
in<00:07:44.039><c> fact</c><00:07:44.219><c> I</c><00:07:44.370><c> probably</c><00:07:44.550><c> have</c><00:07:44.849><c> to</c><00:07:45.000><c> start</c><00:07:45.240><c> going</c>

00:07:45.499 --> 00:07:45.509 align:start position:0%
in fact I probably have to start going
 

00:07:45.509 --> 00:07:50.120 align:start position:0%
in fact I probably have to start going
faster<00:07:45.949><c> in</c><00:07:46.949><c> any</c><00:07:47.729><c> case</c><00:07:48.440><c> here</c><00:07:49.440><c> are</c><00:07:49.529><c> some</c><00:07:49.710><c> trends</c>

00:07:50.120 --> 00:07:50.130 align:start position:0%
faster in any case here are some trends
 

00:07:50.130 --> 00:07:52.100 align:start position:0%
faster in any case here are some trends
in<00:07:50.460><c> JVM</c><00:07:50.969><c> design</c><00:07:51.300><c> that</c><00:07:51.479><c> we</c><00:07:51.599><c> are</c><00:07:51.659><c> seeing</c><00:07:51.930><c> right</c>

00:07:52.100 --> 00:07:52.110 align:start position:0%
in JVM design that we are seeing right
 

00:07:52.110 --> 00:07:54.409 align:start position:0%
in JVM design that we are seeing right
now<00:07:52.380><c> here's</c><00:07:52.710><c> here's</c><00:07:52.979><c> a</c><00:07:53.099><c> attempt</c><00:07:53.669><c> at</c><00:07:53.759><c> drawing</c>

00:07:54.409 --> 00:07:54.419 align:start position:0%
now here's here's a attempt at drawing
 

00:07:54.419 --> 00:07:56.149 align:start position:0%
now here's here's a attempt at drawing
that<00:07:54.719><c> vector</c><00:07:54.930><c> as</c><00:07:55.199><c> it</c><00:07:55.349><c> looks</c><00:07:55.500><c> at</c><00:07:55.649><c> this</c><00:07:55.800><c> point</c><00:07:56.039><c> in</c>

00:07:56.149 --> 00:07:56.159 align:start position:0%
that vector as it looks at this point in
 

00:07:56.159 --> 00:07:58.310 align:start position:0%
that vector as it looks at this point in
time<00:07:56.339><c> we</c><00:07:57.060><c> think</c><00:07:57.210><c> the</c><00:07:57.389><c> predictability</c><00:07:57.750><c> and</c>

00:07:58.310 --> 00:07:58.320 align:start position:0%
time we think the predictability and
 

00:07:58.320 --> 00:08:01.879 align:start position:0%
time we think the predictability and
security<00:07:59.159><c> reliability</c><00:07:59.550><c> is</c><00:08:00.770><c> increasing</c><00:08:01.770><c> in</c>

00:08:01.879 --> 00:08:01.889 align:start position:0%
security reliability is increasing in
 

00:08:01.889 --> 00:08:05.540 align:start position:0%
security reliability is increasing in
importance<00:08:02.370><c> we</c><00:08:03.180><c> want</c><00:08:03.389><c> to</c><00:08:03.539><c> be</c><00:08:03.690><c> able</c><00:08:03.810><c> to</c><00:08:04.550><c> create</c>

00:08:05.540 --> 00:08:05.550 align:start position:0%
importance we want to be able to create
 

00:08:05.550 --> 00:08:08.120 align:start position:0%
importance we want to be able to create
JVM<00:08:06.300><c> packaged</c><00:08:07.080><c> applications</c><00:08:07.830><c> Java</c>

00:08:08.120 --> 00:08:08.130 align:start position:0%
JVM packaged applications Java
 

00:08:08.130 --> 00:08:11.329 align:start position:0%
JVM packaged applications Java
applications<00:08:08.490><c> that</c><00:08:09.060><c> can</c><00:08:09.419><c> be</c><00:08:09.979><c> provisioned</c><00:08:10.979><c> in</c>

00:08:11.329 --> 00:08:11.339 align:start position:0%
applications that can be provisioned in
 

00:08:11.339 --> 00:08:13.189 align:start position:0%
applications that can be provisioned in
advance<00:08:11.729><c> to</c><00:08:12.000><c> do</c><00:08:12.149><c> specific</c><00:08:12.630><c> jobs</c><00:08:12.870><c> and</c><00:08:13.110><c> then</c>

00:08:13.189 --> 00:08:13.199 align:start position:0%
advance to do specific jobs and then
 

00:08:13.199 --> 00:08:14.899 align:start position:0%
advance to do specific jobs and then
reliably<00:08:13.710><c> start</c><00:08:14.039><c> up</c><00:08:14.130><c> quickly</c><00:08:14.370><c> to</c><00:08:14.580><c> do</c><00:08:14.729><c> those</c>

00:08:14.899 --> 00:08:14.909 align:start position:0%
reliably start up quickly to do those
 

00:08:14.909 --> 00:08:16.909 align:start position:0%
reliably start up quickly to do those
jobs<00:08:15.149><c> and</c><00:08:15.509><c> without</c><00:08:15.630><c> and</c><00:08:15.990><c> consume</c><00:08:16.589><c> only</c><00:08:16.770><c> a</c>

00:08:16.909 --> 00:08:16.919 align:start position:0%
jobs and without and consume only a
 

00:08:16.919 --> 00:08:19.879 align:start position:0%
jobs and without and consume only a
predictable<00:08:17.820><c> amount</c><00:08:17.969><c> of</c><00:08:18.210><c> resources</c><00:08:18.770><c> we</c><00:08:19.770><c> want</c>

00:08:19.879 --> 00:08:19.889 align:start position:0%
predictable amount of resources we want
 

00:08:19.889 --> 00:08:22.129 align:start position:0%
predictable amount of resources we want
that<00:08:20.130><c> resource</c><00:08:21.060><c> consumption</c><00:08:21.839><c> to</c><00:08:22.020><c> be</c>

00:08:22.129 --> 00:08:22.139 align:start position:0%
that resource consumption to be
 

00:08:22.139 --> 00:08:24.889 align:start position:0%
that resource consumption to be
manageable<00:08:23.039><c> we</c><00:08:23.310><c> want</c><00:08:23.490><c> it</c><00:08:23.580><c> to</c><00:08:23.669><c> be</c><00:08:23.759><c> tunable</c><00:08:24.240><c> if</c>

00:08:24.889 --> 00:08:24.899 align:start position:0%
manageable we want it to be tunable if
 

00:08:24.899 --> 00:08:26.600 align:start position:0%
manageable we want it to be tunable if
they're<00:08:25.080><c> going</c><00:08:25.199><c> to</c><00:08:25.289><c> be</c><00:08:25.380><c> GC</c><00:08:25.710><c> pauses</c><00:08:25.979><c> we</c><00:08:26.399><c> want</c>

00:08:26.600 --> 00:08:26.610 align:start position:0%
they're going to be GC pauses we want
 

00:08:26.610 --> 00:08:29.060 align:start position:0%
they're going to be GC pauses we want
the<00:08:26.820><c> the</c><00:08:27.089><c> GC</c><00:08:27.599><c> pauses</c><00:08:27.839><c> to</c><00:08:28.139><c> be</c><00:08:28.229><c> controllable</c><00:08:28.770><c> in</c>

00:08:29.060 --> 00:08:29.070 align:start position:0%
the the GC pauses to be controllable in
 

00:08:29.070 --> 00:08:31.730 align:start position:0%
the the GC pauses to be controllable in
length<00:08:29.339><c> this</c><00:08:29.969><c> is</c><00:08:30.210><c> a</c><00:08:30.240><c> this</c><00:08:30.930><c> is</c><00:08:31.110><c> this</c><00:08:31.469><c> is</c><00:08:31.649><c> not</c>

00:08:31.730 --> 00:08:31.740 align:start position:0%
length this is a this is this is not
 

00:08:31.740 --> 00:08:34.010 align:start position:0%
length this is a this is this is not
stuff<00:08:32.010><c> we</c><00:08:32.159><c> do</c><00:08:32.310><c> today</c><00:08:32.699><c> completely</c><00:08:33.539><c> well</c><00:08:33.750><c> but</c>

00:08:34.010 --> 00:08:34.020 align:start position:0%
stuff we do today completely well but
 

00:08:34.020 --> 00:08:35.540 align:start position:0%
stuff we do today completely well but
we're<00:08:34.169><c> working</c><00:08:34.500><c> on</c><00:08:34.680><c> it</c><00:08:34.829><c> very</c><00:08:34.949><c> hard</c><00:08:35.069><c> and</c><00:08:35.459><c> we've</c>

00:08:35.540 --> 00:08:35.550 align:start position:0%
we're working on it very hard and we've
 

00:08:35.550 --> 00:08:37.309 align:start position:0%
we're working on it very hard and we've
made<00:08:35.699><c> some</c><00:08:35.939><c> progress</c><00:08:36.150><c> and</c><00:08:36.719><c> over</c><00:08:37.079><c> the</c><00:08:37.199><c> next</c>

00:08:37.309 --> 00:08:37.319 align:start position:0%
made some progress and over the next
 

00:08:37.319 --> 00:08:39.559 align:start position:0%
made some progress and over the next
several<00:08:37.709><c> years</c><00:08:38.520><c> we'll</c><00:08:39.000><c> be</c><00:08:39.030><c> making</c><00:08:39.449><c> more</c>

00:08:39.559 --> 00:08:39.569 align:start position:0%
several years we'll be making more
 

00:08:39.569 --> 00:08:41.689 align:start position:0%
several years we'll be making more
progress<00:08:39.780><c> in</c><00:08:40.140><c> addition</c><00:08:40.589><c> we</c><00:08:41.099><c> want</c><00:08:41.280><c> to</c><00:08:41.370><c> be</c><00:08:41.490><c> able</c>

00:08:41.689 --> 00:08:41.699 align:start position:0%
progress in addition we want to be able
 

00:08:41.699 --> 00:08:43.850 align:start position:0%
progress in addition we want to be able
to<00:08:41.819><c> take</c><00:08:42.229><c> telemetry</c><00:08:43.229><c> out</c><00:08:43.560><c> of</c><00:08:43.709><c> the</c>

00:08:43.850 --> 00:08:43.860 align:start position:0%
to take telemetry out of the
 

00:08:43.860 --> 00:08:45.949 align:start position:0%
to take telemetry out of the
and<00:08:44.279><c> see</c><00:08:44.430><c> what's</c><00:08:44.700><c> going</c><00:08:44.970><c> on</c><00:08:45.060><c> with</c><00:08:45.240><c> that</c><00:08:45.329><c> VM</c><00:08:45.660><c> and</c>

00:08:45.949 --> 00:08:45.959 align:start position:0%
and see what's going on with that VM and
 

00:08:45.959 --> 00:08:48.440 align:start position:0%
and see what's going on with that VM and
control<00:08:46.529><c> it</c><00:08:46.649><c> at</c><00:08:46.769><c> a</c><00:08:46.800><c> distance</c><00:08:47.310><c> so</c><00:08:48.180><c> you</c><00:08:48.209><c> don't</c>

00:08:48.440 --> 00:08:48.450 align:start position:0%
control it at a distance so you don't
 

00:08:48.450 --> 00:08:50.389 align:start position:0%
control it at a distance so you don't
have<00:08:48.570><c> to</c><00:08:48.690><c> be</c><00:08:48.779><c> up</c><00:08:48.930><c> close</c><00:08:48.959><c> and</c><00:08:49.410><c> personal</c><00:08:50.190><c> in</c><00:08:50.279><c> a</c>

00:08:50.389 --> 00:08:50.399 align:start position:0%
have to be up close and personal in a
 

00:08:50.399 --> 00:08:51.880 align:start position:0%
have to be up close and personal in a
debugger<00:08:50.760><c> in</c><00:08:51.000><c> order</c><00:08:51.269><c> to</c><00:08:51.420><c> manage</c><00:08:51.720><c> it</c><00:08:51.839><c> right</c>

00:08:51.880 --> 00:08:51.890 align:start position:0%
debugger in order to manage it right
 

00:08:51.890 --> 00:08:54.319 align:start position:0%
debugger in order to manage it right
everybody<00:08:52.890><c> knows</c><00:08:53.130><c> that's</c><00:08:53.310><c> the</c><00:08:53.490><c> future</c><00:08:53.880><c> of</c><00:08:54.240><c> how</c>

00:08:54.319 --> 00:08:54.329 align:start position:0%
everybody knows that's the future of how
 

00:08:54.329 --> 00:08:55.910 align:start position:0%
everybody knows that's the future of how
computing<00:08:54.839><c> is</c><00:08:54.959><c> going</c><00:08:55.260><c> in</c><00:08:55.380><c> in</c><00:08:55.560><c> big</c><00:08:55.769><c> data</c>

00:08:55.910 --> 00:08:55.920 align:start position:0%
computing is going in in big data
 

00:08:55.920 --> 00:08:58.460 align:start position:0%
computing is going in in big data
centers<00:08:56.399><c> so</c><00:08:57.240><c> we</c><00:08:57.269><c> have</c><00:08:57.570><c> a</c><00:08:57.600><c> number</c><00:08:57.899><c> of</c><00:08:58.019><c> logging</c>

00:08:58.460 --> 00:08:58.470 align:start position:0%
centers so we have a number of logging
 

00:08:58.470 --> 00:09:00.650 align:start position:0%
centers so we have a number of logging
capabilities<00:08:58.649><c> and</c><00:08:59.459><c> and</c><00:08:59.670><c> remote</c><00:09:00.360><c> management</c>

00:09:00.650 --> 00:09:00.660 align:start position:0%
capabilities and and remote management
 

00:09:00.660 --> 00:09:02.600 align:start position:0%
capabilities and and remote management
capabilities<00:09:01.410><c> and</c><00:09:01.589><c> we're</c><00:09:02.130><c> continuing</c><00:09:02.550><c> to</c>

00:09:02.600 --> 00:09:02.610 align:start position:0%
capabilities and we're continuing to
 

00:09:02.610 --> 00:09:04.100 align:start position:0%
capabilities and we're continuing to
invest<00:09:02.850><c> in</c><00:09:03.209><c> those</c><00:09:03.329><c> I</c><00:09:03.540><c> think</c><00:09:03.570><c> that's</c><00:09:03.870><c> going</c><00:09:04.019><c> to</c>

00:09:04.100 --> 00:09:04.110 align:start position:0%
invest in those I think that's going to
 

00:09:04.110 --> 00:09:09.759 align:start position:0%
invest in those I think that's going to
be<00:09:04.170><c> important</c><00:09:06.110><c> I</c><00:09:07.110><c> already</c><00:09:08.040><c> mentioned</c><00:09:08.370><c> density</c>

00:09:09.759 --> 00:09:09.769 align:start position:0%
be important I already mentioned density
 

00:09:09.769 --> 00:09:11.960 align:start position:0%
be important I already mentioned density
flatness<00:09:10.769><c> of</c><00:09:10.920><c> data</c><00:09:11.130><c> pointer</c><00:09:11.579><c> thriftiness</c>

00:09:11.960 --> 00:09:11.970 align:start position:0%
flatness of data pointer thriftiness
 

00:09:11.970 --> 00:09:13.430 align:start position:0%
flatness of data pointer thriftiness
that's<00:09:12.600><c> going</c><00:09:12.810><c> to</c><00:09:12.870><c> be</c><00:09:12.959><c> important</c><00:09:13.380><c> because</c>

00:09:13.430 --> 00:09:13.440 align:start position:0%
that's going to be important because
 

00:09:13.440 --> 00:09:15.290 align:start position:0%
that's going to be important because
we're<00:09:13.829><c> putting</c><00:09:14.399><c> more</c><00:09:14.579><c> and</c><00:09:14.640><c> more</c><00:09:14.790><c> stuff</c><00:09:15.149><c> in</c>

00:09:15.290 --> 00:09:15.300 align:start position:0%
we're putting more and more stuff in
 

00:09:15.300 --> 00:09:16.340 align:start position:0%
we're putting more and more stuff in
memory<00:09:15.540><c> because</c><00:09:15.690><c> memory</c><00:09:15.720><c> is</c><00:09:16.019><c> just</c><00:09:16.050><c> getting</c>

00:09:16.340 --> 00:09:16.350 align:start position:0%
memory because memory is just getting
 

00:09:16.350 --> 00:09:18.560 align:start position:0%
memory because memory is just getting
bigger<00:09:16.500><c> memory</c><00:09:17.190><c> is</c><00:09:17.339><c> also</c><00:09:17.610><c> getting</c><00:09:17.790><c> less</c>

00:09:18.560 --> 00:09:18.570 align:start position:0%
bigger memory is also getting less
 

00:09:18.570 --> 00:09:21.530 align:start position:0%
bigger memory is also getting less
uniform<00:09:19.170><c> memory</c><00:09:20.100><c> goes</c><00:09:20.850><c> up</c><00:09:21.000><c> to</c><00:09:21.120><c> terabyte</c>

00:09:21.530 --> 00:09:21.540 align:start position:0%
uniform memory goes up to terabyte
 

00:09:21.540 --> 00:09:24.170 align:start position:0%
uniform memory goes up to terabyte
scales<00:09:22.290><c> but</c><00:09:23.040><c> it's</c><00:09:23.220><c> getting</c><00:09:23.550><c> slow</c><00:09:23.910><c> because</c>

00:09:24.170 --> 00:09:24.180 align:start position:0%
scales but it's getting slow because
 

00:09:24.180 --> 00:09:27.079 align:start position:0%
scales but it's getting slow because
it's<00:09:24.510><c> a</c><00:09:24.660><c> special</c><00:09:25.050><c> kind</c><00:09:25.320><c> of</c><00:09:25.970><c> persistent</c><00:09:26.970><c> memory</c>

00:09:27.079 --> 00:09:27.089 align:start position:0%
it's a special kind of persistent memory
 

00:09:27.089 --> 00:09:29.300 align:start position:0%
it's a special kind of persistent memory
so<00:09:27.630><c> not</c><00:09:27.810><c> only</c><00:09:28.050><c> does</c><00:09:28.230><c> it</c><00:09:28.260><c> live</c><00:09:28.860><c> after</c><00:09:29.070><c> the</c>

00:09:29.300 --> 00:09:29.310 align:start position:0%
so not only does it live after the
 

00:09:29.310 --> 00:09:31.280 align:start position:0%
so not only does it live after the
process<00:09:29.700><c> died</c><00:09:29.940><c> but</c><00:09:30.240><c> it's</c><00:09:30.390><c> also</c><00:09:30.660><c> slower</c><00:09:30.959><c> to</c><00:09:31.170><c> get</c>

00:09:31.280 --> 00:09:31.290 align:start position:0%
process died but it's also slower to get
 

00:09:31.290 --> 00:09:33.290 align:start position:0%
process died but it's also slower to get
into<00:09:31.560><c> and</c><00:09:31.740><c> out</c><00:09:31.800><c> of</c><00:09:31.860><c> get</c><00:09:32.459><c> data</c><00:09:32.670><c> into</c><00:09:33.029><c> and</c><00:09:33.180><c> out</c><00:09:33.240><c> of</c>

00:09:33.290 --> 00:09:33.300 align:start position:0%
into and out of get data into and out of
 

00:09:33.300 --> 00:09:36.740 align:start position:0%
into and out of get data into and out of
so<00:09:33.630><c> we</c><00:09:34.290><c> need</c><00:09:35.010><c> we</c><00:09:35.640><c> need</c><00:09:35.670><c> to</c><00:09:36.060><c> continue</c><00:09:36.570><c> to</c>

00:09:36.740 --> 00:09:36.750 align:start position:0%
so we need we need to continue to
 

00:09:36.750 --> 00:09:39.699 align:start position:0%
so we need we need to continue to
provide<00:09:37.200><c> many</c><00:09:37.920><c> size</c><00:09:38.250><c> fits</c><00:09:38.670><c> many</c>

00:09:39.699 --> 00:09:39.709 align:start position:0%
provide many size fits many
 

00:09:39.709 --> 00:09:41.449 align:start position:0%
provide many size fits many
opportunities<00:09:40.709><c> for</c><00:09:40.740><c> creating</c><00:09:41.250><c> data</c>

00:09:41.449 --> 00:09:41.459 align:start position:0%
opportunities for creating data
 

00:09:41.459 --> 00:09:43.850 align:start position:0%
opportunities for creating data
structures<00:09:41.910><c> not</c><00:09:42.089><c> not</c><00:09:42.480><c> a</c><00:09:42.510><c> one</c><00:09:42.779><c> size</c><00:09:43.019><c> fits</c><00:09:43.050><c> all</c>

00:09:43.850 --> 00:09:43.860 align:start position:0%
structures not not a one size fits all
 

00:09:43.860 --> 00:09:46.120 align:start position:0%
structures not not a one size fits all
kind<00:09:44.190><c> of</c><00:09:44.250><c> Lisp</c><00:09:44.490><c> or</c><00:09:44.640><c> small</c><00:09:44.880><c> talk</c><00:09:45.089><c> model</c>

00:09:46.120 --> 00:09:46.130 align:start position:0%
kind of Lisp or small talk model
 

00:09:46.130 --> 00:09:48.220 align:start position:0%
kind of Lisp or small talk model
immutability<00:09:47.130><c> is</c><00:09:47.399><c> also</c><00:09:47.700><c> important</c>

00:09:48.220 --> 00:09:48.230 align:start position:0%
immutability is also important
 

00:09:48.230 --> 00:09:50.750 align:start position:0%
immutability is also important
immutability<00:09:49.230><c> is</c><00:09:49.649><c> the</c><00:09:50.220><c> key</c><00:09:50.459><c> to</c><00:09:50.670><c> avoiding</c>

00:09:50.750 --> 00:09:50.760 align:start position:0%
immutability is the key to avoiding
 

00:09:50.760 --> 00:09:53.680 align:start position:0%
immutability is the key to avoiding
those<00:09:51.420><c> race</c><00:09:51.899><c> conditions</c><00:09:52.380><c> from</c><00:09:52.529><c> unintended</c>

00:09:53.680 --> 00:09:53.690 align:start position:0%
those race conditions from unintended
 

00:09:53.690 --> 00:09:55.670 align:start position:0%
those race conditions from unintended
unintended<00:09:54.690><c> degrees</c><00:09:55.050><c> of</c><00:09:55.199><c> freedom</c><00:09:55.470><c> in</c><00:09:55.589><c> your</c>

00:09:55.670 --> 00:09:55.680 align:start position:0%
unintended degrees of freedom in your
 

00:09:55.680 --> 00:09:57.319 align:start position:0%
unintended degrees of freedom in your
data<00:09:55.860><c> structure</c><00:09:56.130><c> do</c><00:09:56.579><c> you</c><00:09:56.670><c> really</c><00:09:57.000><c> need</c><00:09:57.120><c> that</c>

00:09:57.319 --> 00:09:57.329 align:start position:0%
data structure do you really need that
 

00:09:57.329 --> 00:10:00.079 align:start position:0%
data structure do you really need that
field<00:09:57.630><c> to</c><00:09:57.870><c> be</c><00:09:57.990><c> usable</c><00:09:58.529><c> all</c><00:09:59.100><c> it</c><00:09:59.370><c> is</c><00:09:59.490><c> is</c><00:09:59.699><c> it's</c><00:09:59.730><c> an</c>

00:10:00.079 --> 00:10:00.089 align:start position:0%
field to be usable all it is is it's an
 

00:10:00.089 --> 00:10:01.790 align:start position:0%
field to be usable all it is is it's an
attraction<00:10:00.449><c> for</c><00:10:00.660><c> bugs</c><00:10:01.019><c> when</c><00:10:01.350><c> you</c><00:10:01.470><c> when</c><00:10:01.709><c> you</c>

00:10:01.790 --> 00:10:01.800 align:start position:0%
attraction for bugs when you when you
 

00:10:01.800 --> 00:10:03.079 align:start position:0%
attraction for bugs when you when you
hand<00:10:02.040><c> off</c><00:10:02.160><c> something</c><00:10:02.579><c> before</c><00:10:02.880><c> it's</c><00:10:02.970><c> been</c>

00:10:03.079 --> 00:10:03.089 align:start position:0%
hand off something before it's been
 

00:10:03.089 --> 00:10:04.670 align:start position:0%
hand off something before it's been
completely<00:10:03.570><c> settled</c><00:10:03.839><c> to</c><00:10:04.079><c> memory</c><00:10:04.380><c> and</c><00:10:04.500><c> then</c>

00:10:04.670 --> 00:10:04.680 align:start position:0%
completely settled to memory and then
 

00:10:04.680 --> 00:10:07.069 align:start position:0%
completely settled to memory and then
someone<00:10:05.010><c> else</c><00:10:05.100><c> reads</c><00:10:05.459><c> the</c><00:10:05.640><c> value</c><00:10:05.970><c> reads</c><00:10:06.930><c> the</c>

00:10:07.069 --> 00:10:07.079 align:start position:0%
someone else reads the value reads the
 

00:10:07.079 --> 00:10:08.480 align:start position:0%
someone else reads the value reads the
field<00:10:07.260><c> before</c><00:10:07.560><c> you've</c><00:10:07.680><c> stored</c><00:10:07.860><c> the</c><00:10:08.070><c> value</c><00:10:08.100><c> in</c>

00:10:08.480 --> 00:10:08.490 align:start position:0%
field before you've stored the value in
 

00:10:08.490 --> 00:10:11.090 align:start position:0%
field before you've stored the value in
it<00:10:08.519><c> or</c><00:10:08.760><c> some</c><00:10:08.970><c> attacker</c><00:10:09.510><c> manages</c><00:10:10.470><c> to</c><00:10:10.649><c> notice</c><00:10:10.980><c> a</c>

00:10:11.090 --> 00:10:11.100 align:start position:0%
it or some attacker manages to notice a
 

00:10:11.100 --> 00:10:13.100 align:start position:0%
it or some attacker manages to notice a
way<00:10:11.220><c> to</c><00:10:11.279><c> get</c><00:10:11.490><c> into</c><00:10:11.730><c> that</c><00:10:11.850><c> field</c><00:10:12.060><c> and</c><00:10:12.329><c> put</c><00:10:12.510><c> a</c><00:10:12.540><c> put</c>

00:10:13.100 --> 00:10:13.110 align:start position:0%
way to get into that field and put a put
 

00:10:13.110 --> 00:10:14.530 align:start position:0%
way to get into that field and put a put
a<00:10:13.140><c> race</c><00:10:13.320><c> condition</c><00:10:13.800><c> on</c><00:10:13.920><c> it</c><00:10:14.070><c> that's</c><00:10:14.279><c> just</c>

00:10:14.530 --> 00:10:14.540 align:start position:0%
a race condition on it that's just
 

00:10:14.540 --> 00:10:17.470 align:start position:0%
a race condition on it that's just
nobody<00:10:15.540><c> nobody</c><00:10:16.079><c> wins</c><00:10:16.230><c> from</c><00:10:16.470><c> race</c><00:10:16.649><c> conditions</c>

00:10:17.470 --> 00:10:17.480 align:start position:0%
nobody nobody wins from race conditions
 

00:10:17.480 --> 00:10:20.360 align:start position:0%
nobody nobody wins from race conditions
it's<00:10:18.480><c> better</c><00:10:18.810><c> to</c><00:10:19.079><c> reduce</c><00:10:19.529><c> degrees</c><00:10:19.980><c> of</c><00:10:20.100><c> freedom</c>

00:10:20.360 --> 00:10:20.370 align:start position:0%
it's better to reduce degrees of freedom
 

00:10:20.370 --> 00:10:21.800 align:start position:0%
it's better to reduce degrees of freedom
and<00:10:20.490><c> data</c><00:10:20.640><c> structure</c><00:10:20.970><c> in</c><00:10:21.209><c> particular</c><00:10:21.660><c> by</c>

00:10:21.800 --> 00:10:21.810 align:start position:0%
and data structure in particular by
 

00:10:21.810 --> 00:10:25.730 align:start position:0%
and data structure in particular by
locking<00:10:22.170><c> down</c><00:10:22.290><c> immutability</c><00:10:24.740><c> everyone</c>

00:10:25.730 --> 00:10:25.740 align:start position:0%
locking down immutability everyone
 

00:10:25.740 --> 00:10:27.769 align:start position:0%
locking down immutability everyone
understands<00:10:26.430><c> that</c><00:10:26.459><c> that</c><00:10:27.390><c> there's</c><00:10:27.600><c> not</c><00:10:27.720><c> just</c>

00:10:27.769 --> 00:10:27.779 align:start position:0%
understands that that there's not just
 

00:10:27.779 --> 00:10:29.569 align:start position:0%
understands that that there's not just
one<00:10:27.990><c> programming</c><00:10:28.890><c> language</c><00:10:29.190><c> in</c><00:10:29.339><c> the</c><00:10:29.430><c> world</c>

00:10:29.569 --> 00:10:29.579 align:start position:0%
one programming language in the world
 

00:10:29.579 --> 00:10:33.170 align:start position:0%
one programming language in the world
the<00:10:30.000><c> JVM</c><00:10:30.360><c> embraces</c><00:10:30.899><c> that</c><00:10:31.370><c> Java</c><00:10:32.370><c> leaves</c><00:10:32.790><c> plenty</c>

00:10:33.170 --> 00:10:33.180 align:start position:0%
the JVM embraces that Java leaves plenty
 

00:10:33.180 --> 00:10:34.819 align:start position:0%
the JVM embraces that Java leaves plenty
of<00:10:33.390><c> room</c><00:10:33.570><c> for</c><00:10:33.600><c> other</c><00:10:33.959><c> languages</c><00:10:34.410><c> to</c><00:10:34.649><c> run</c>

00:10:34.819 --> 00:10:34.829 align:start position:0%
of room for other languages to run
 

00:10:34.829 --> 00:10:36.980 align:start position:0%
of room for other languages to run
alongside<00:10:35.100><c> of</c><00:10:35.519><c> it</c><00:10:35.660><c> so</c><00:10:36.660><c> we</c><00:10:36.810><c> want</c>

00:10:36.980 --> 00:10:36.990 align:start position:0%
alongside of it so we want
 

00:10:36.990 --> 00:10:38.990 align:start position:0%
alongside of it so we want
interoperability<00:10:37.649><c> and</c><00:10:37.980><c> the</c><00:10:38.310><c> ability</c><00:10:38.970><c> to</c>

00:10:38.990 --> 00:10:39.000 align:start position:0%
interoperability and the ability to
 

00:10:39.000 --> 00:10:41.030 align:start position:0%
interoperability and the ability to
choose<00:10:39.269><c> the</c><00:10:39.300><c> language</c><00:10:39.810><c> that</c><00:10:40.079><c> you</c><00:10:40.199><c> want</c><00:10:40.440><c> at</c><00:10:40.860><c> the</c>

00:10:41.030 --> 00:10:41.040 align:start position:0%
choose the language that you want at the
 

00:10:41.040 --> 00:10:42.680 align:start position:0%
choose the language that you want at the
same<00:10:41.250><c> time</c><00:10:41.459><c> we're</c><00:10:41.640><c> going</c><00:10:41.730><c> to</c><00:10:41.790><c> make</c><00:10:42.420><c> the</c><00:10:42.510><c> best</c>

00:10:42.680 --> 00:10:42.690 align:start position:0%
same time we're going to make the best
 

00:10:42.690 --> 00:10:45.430 align:start position:0%
same time we're going to make the best
language<00:10:43.019><c> we</c><00:10:43.140><c> know</c><00:10:43.260><c> how</c><00:10:43.380><c> to</c><00:10:43.470><c> make</c><00:10:43.620><c> -</c><00:10:44.390><c> and</c>

00:10:45.430 --> 00:10:45.440 align:start position:0%
language we know how to make - and
 

00:10:45.440 --> 00:10:48.920 align:start position:0%
language we know how to make - and
finally<00:10:46.970><c> this</c><00:10:47.970><c> is</c><00:10:48.029><c> a</c><00:10:48.149><c> trend</c><00:10:48.420><c> I</c><00:10:48.540><c> think</c><00:10:48.570><c> which</c><00:10:48.899><c> is</c>

00:10:48.920 --> 00:10:48.930 align:start position:0%
finally this is a trend I think which is
 

00:10:48.930 --> 00:10:51.500 align:start position:0%
finally this is a trend I think which is
important<00:10:49.529><c> to</c><00:10:49.680><c> the</c><00:10:49.800><c> creators</c><00:10:50.430><c> of</c><00:10:50.510><c> the</c>

00:10:51.500 --> 00:10:51.510 align:start position:0%
important to the creators of the
 

00:10:51.510 --> 00:10:54.800 align:start position:0%
important to the creators of the
infrastructure<00:10:52.290><c> of</c><00:10:52.589><c> the</c><00:10:53.160><c> VM</c><00:10:53.459><c> we</c><00:10:54.270><c> want</c><00:10:54.510><c> to</c><00:10:54.690><c> be</c>

00:10:54.800 --> 00:10:54.810 align:start position:0%
infrastructure of the VM we want to be
 

00:10:54.810 --> 00:10:56.750 align:start position:0%
infrastructure of the VM we want to be
able<00:10:54.899><c> to</c><00:10:55.050><c> layer</c><00:10:55.380><c> our</c><00:10:55.490><c> implementations</c><00:10:56.490><c> better</c>

00:10:56.750 --> 00:10:56.760 align:start position:0%
able to layer our implementations better
 

00:10:56.760 --> 00:10:57.180 align:start position:0%
able to layer our implementations better
we

00:10:57.180 --> 00:10:57.190 align:start position:0%
we
 

00:10:57.190 --> 00:10:58.860 align:start position:0%
we
want<00:10:57.430><c> to</c><00:10:57.550><c> write</c><00:10:57.700><c> so</c><00:10:57.880><c> much</c><00:10:58.000><c> assembly</c><00:10:58.420><c> code</c><00:10:58.630><c> we</c>

00:10:58.860 --> 00:10:58.870 align:start position:0%
want to write so much assembly code we
 

00:10:58.870 --> 00:11:00.600 align:start position:0%
want to write so much assembly code we
don't<00:10:58.900><c> want</c><00:10:59.170><c> to</c><00:10:59.230><c> write</c><00:10:59.320><c> so</c><00:10:59.470><c> much</c><00:10:59.560><c> C++</c><00:11:00.340><c> code</c>

00:11:00.600 --> 00:11:00.610 align:start position:0%
don't want to write so much C++ code
 

00:11:00.610 --> 00:11:02.250 align:start position:0%
don't want to write so much C++ code
which<00:11:00.790><c> quite</c><00:11:01.000><c> frankly</c><00:11:01.060><c> often</c><00:11:01.750><c> feels</c><00:11:01.960><c> like</c><00:11:02.050><c> the</c>

00:11:02.250 --> 00:11:02.260 align:start position:0%
which quite frankly often feels like the
 

00:11:02.260 --> 00:11:03.930 align:start position:0%
which quite frankly often feels like the
assembly<00:11:02.590><c> code</c><00:11:02.740><c> we</c><00:11:03.340><c> want</c><00:11:03.550><c> to</c><00:11:03.610><c> be</c><00:11:03.700><c> able</c><00:11:03.820><c> to</c>

00:11:03.930 --> 00:11:03.940 align:start position:0%
assembly code we want to be able to
 

00:11:03.940 --> 00:11:05.520 align:start position:0%
assembly code we want to be able to
write<00:11:04.240><c> stuff</c><00:11:04.540><c> in</c><00:11:04.690><c> Java</c><00:11:04.960><c> and</c><00:11:05.230><c> in</c><00:11:05.440><c> the</c>

00:11:05.520 --> 00:11:05.530 align:start position:0%
write stuff in Java and in the
 

00:11:05.530 --> 00:11:07.920 align:start position:0%
write stuff in Java and in the
higher-level<00:11:05.710><c> kinds</c><00:11:06.610><c> of</c><00:11:06.730><c> Java</c><00:11:06.970><c> and</c><00:11:07.150><c> when</c><00:11:07.900><c> I</c>

00:11:07.920 --> 00:11:07.930 align:start position:0%
higher-level kinds of Java and when I
 

00:11:07.930 --> 00:11:09.980 align:start position:0%
higher-level kinds of Java and when I
say<00:11:08.170><c> stuff</c><00:11:08.500><c> I</c><00:11:08.740><c> mean</c><00:11:08.890><c> the</c><00:11:09.040><c> stuff</c><00:11:09.250><c> that</c><00:11:09.400><c> actually</c>

00:11:09.980 --> 00:11:09.990 align:start position:0%
say stuff I mean the stuff that actually
 

00:11:09.990 --> 00:11:12.150 align:start position:0%
say stuff I mean the stuff that actually
interprets<00:11:10.990><c> the</c><00:11:11.200><c> Java</c><00:11:11.440><c> code</c><00:11:11.710><c> so</c><00:11:11.950><c> there's</c><00:11:12.040><c> a</c>

00:11:12.150 --> 00:11:12.160 align:start position:0%
interprets the Java code so there's a
 

00:11:12.160 --> 00:11:14.160 align:start position:0%
interprets the Java code so there's a
real<00:11:12.340><c> meta-circular</c><00:11:12.820><c> bootstrapping</c><00:11:13.660><c> problem</c>

00:11:14.160 --> 00:11:14.170 align:start position:0%
real meta-circular bootstrapping problem
 

00:11:14.170 --> 00:11:17.040 align:start position:0%
real meta-circular bootstrapping problem
here<00:11:14.350><c> but</c><00:11:14.500><c> that's</c><00:11:14.820><c> it's</c><00:11:15.820><c> known</c><00:11:16.450><c> how</c><00:11:16.630><c> to</c><00:11:16.660><c> solve</c>

00:11:17.040 --> 00:11:17.050 align:start position:0%
here but that's it's known how to solve
 

00:11:17.050 --> 00:11:19.350 align:start position:0%
here but that's it's known how to solve
that<00:11:17.400><c> we</c><00:11:18.400><c> want</c><00:11:18.580><c> to</c><00:11:18.670><c> be</c><00:11:18.790><c> able</c><00:11:18.880><c> to</c><00:11:19.030><c> create</c>

00:11:19.350 --> 00:11:19.360 align:start position:0%
that we want to be able to create
 

00:11:19.360 --> 00:11:21.450 align:start position:0%
that we want to be able to create
abstraction<00:11:20.170><c> that</c><00:11:20.200><c> not</c><00:11:20.920><c> only</c><00:11:21.010><c> for</c><00:11:21.310><c> us</c><00:11:21.430><c> but</c>

00:11:21.450 --> 00:11:21.460 align:start position:0%
abstraction that not only for us but
 

00:11:21.460 --> 00:11:23.970 align:start position:0%
abstraction that not only for us but
also<00:11:22.090><c> our</c><00:11:22.330><c> programmers</c><00:11:22.930><c> and</c><00:11:23.110><c> the</c><00:11:23.410><c> compiler</c>

00:11:23.970 --> 00:11:23.980 align:start position:0%
also our programmers and the compiler
 

00:11:23.980 --> 00:11:27.180 align:start position:0%
also our programmers and the compiler
implementers<00:11:24.520><c> too</c><00:11:25.150><c> to</c><00:11:25.960><c> express</c><00:11:26.650><c> only</c><00:11:27.070><c> what</c>

00:11:27.180 --> 00:11:27.190 align:start position:0%
implementers too to express only what
 

00:11:27.190 --> 00:11:28.710 align:start position:0%
implementers too to express only what
they<00:11:27.310><c> need</c><00:11:27.520><c> to</c><00:11:27.700><c> in</c><00:11:27.850><c> the</c><00:11:27.940><c> byte</c><00:11:28.090><c> codes</c><00:11:28.390><c> without</c>

00:11:28.710 --> 00:11:28.720 align:start position:0%
they need to in the byte codes without
 

00:11:28.720 --> 00:11:30.630 align:start position:0%
they need to in the byte codes without
creating<00:11:29.170><c> enormous</c><00:11:29.620><c> amounts</c><00:11:30.010><c> of</c><00:11:30.070><c> boilerplate</c>

00:11:30.630 --> 00:11:30.640 align:start position:0%
creating enormous amounts of boilerplate
 

00:11:30.640 --> 00:11:32.700 align:start position:0%
creating enormous amounts of boilerplate
code<00:11:30.850><c> at</c><00:11:31.120><c> the</c><00:11:31.270><c> bytecode</c><00:11:31.570><c> level</c><00:11:32.110><c> just</c><00:11:32.290><c> like</c><00:11:32.440><c> at</c>

00:11:32.700 --> 00:11:32.710 align:start position:0%
code at the bytecode level just like at
 

00:11:32.710 --> 00:11:34.110 align:start position:0%
code at the bytecode level just like at
the<00:11:32.830><c> source</c><00:11:33.040><c> code</c><00:11:33.100><c> level</c><00:11:33.580><c> we're</c><00:11:33.820><c> kind</c><00:11:33.850><c> of</c>

00:11:34.110 --> 00:11:34.120 align:start position:0%
the source code level we're kind of
 

00:11:34.120 --> 00:11:35.910 align:start position:0%
the source code level we're kind of
allergic<00:11:34.540><c> to</c><00:11:34.660><c> boilerplate</c><00:11:35.110><c> we</c><00:11:35.230><c> like</c><00:11:35.410><c> ID</c><00:11:35.680><c> use</c>

00:11:35.910 --> 00:11:35.920 align:start position:0%
allergic to boilerplate we like ID use
 

00:11:35.920 --> 00:11:37.800 align:start position:0%
allergic to boilerplate we like ID use
to<00:11:36.040><c> help</c><00:11:36.190><c> us</c><00:11:36.310><c> expand</c><00:11:36.670><c> it</c><00:11:36.790><c> we</c><00:11:37.150><c> want</c><00:11:37.330><c> the</c><00:11:37.450><c> VM</c><00:11:37.660><c> to</c>

00:11:37.800 --> 00:11:37.810 align:start position:0%
to help us expand it we want the VM to
 

00:11:37.810 --> 00:11:39.480 align:start position:0%
to help us expand it we want the VM to
be<00:11:37.900><c> able</c><00:11:37.960><c> to</c><00:11:38.050><c> expand</c><00:11:38.380><c> boilerplate</c><00:11:38.890><c> at</c><00:11:39.040><c> the</c><00:11:39.190><c> at</c>

00:11:39.480 --> 00:11:39.490 align:start position:0%
be able to expand boilerplate at the at
 

00:11:39.490 --> 00:11:41.850 align:start position:0%
be able to expand boilerplate at the at
the<00:11:39.640><c> bytecode</c><00:11:39.940><c> level</c><00:11:40.480><c> invokedynamic</c><00:11:41.200><c> is</c><00:11:41.770><c> an</c>

00:11:41.850 --> 00:11:41.860 align:start position:0%
the bytecode level invokedynamic is an
 

00:11:41.860 --> 00:11:43.500 align:start position:0%
the bytecode level invokedynamic is an
example<00:11:42.160><c> of</c><00:11:42.340><c> that</c><00:11:42.520><c> we</c><00:11:42.700><c> want</c><00:11:42.850><c> to</c><00:11:42.940><c> we</c><00:11:43.300><c> want</c><00:11:43.450><c> a</c>

00:11:43.500 --> 00:11:43.510 align:start position:0%
example of that we want to we want a
 

00:11:43.510 --> 00:11:45.480 align:start position:0%
example of that we want to we want a
data<00:11:43.720><c> model</c><00:11:43.930><c> that's</c><00:11:44.260><c> more</c><00:11:44.500><c> flexible</c><00:11:44.620><c> uniform</c>

00:11:45.480 --> 00:11:45.490 align:start position:0%
data model that's more flexible uniform
 

00:11:45.490 --> 00:11:48.000 align:start position:0%
data model that's more flexible uniform
that's<00:11:45.700><c> value</c><00:11:46.090><c> typed</c><00:11:46.360><c> and</c><00:11:46.660><c> then</c><00:11:47.380><c> finally</c><00:11:47.800><c> for</c>

00:11:48.000 --> 00:11:48.010 align:start position:0%
that's value typed and then finally for
 

00:11:48.010 --> 00:11:50.760 align:start position:0%
that's value typed and then finally for
implementing<00:11:48.880><c> the</c><00:11:49.060><c> JVM</c><00:11:49.480><c> on</c><00:11:49.690><c> top</c><00:11:50.020><c> of</c><00:11:50.320><c> its</c><00:11:50.620><c> own</c>

00:11:50.760 --> 00:11:50.770 align:start position:0%
implementing the JVM on top of its own
 

00:11:50.770 --> 00:11:54.060 align:start position:0%
implementing the JVM on top of its own
language<00:11:51.330><c> we're</c><00:11:52.330><c> very</c><00:11:52.540><c> excited</c><00:11:52.660><c> by</c><00:11:53.200><c> them</c><00:11:53.440><c> by</c>

00:11:54.060 --> 00:11:54.070 align:start position:0%
language we're very excited by them by
 

00:11:54.070 --> 00:11:56.820 align:start position:0%
language we're very excited by them by
newer<00:11:54.690><c> technologies</c><00:11:55.690><c> like</c><00:11:55.900><c> crawl</c><00:11:56.230><c> which</c>

00:11:56.820 --> 00:11:56.830 align:start position:0%
newer technologies like crawl which
 

00:11:56.830 --> 00:11:59.220 align:start position:0%
newer technologies like crawl which
allow<00:11:57.130><c> you</c><00:11:57.190><c> to</c><00:11:57.510><c> have</c><00:11:58.510><c> a</c><00:11:58.540><c> complete</c><00:11:58.960><c> code</c>

00:11:59.220 --> 00:11:59.230 align:start position:0%
allow you to have a complete code
 

00:11:59.230 --> 00:12:00.720 align:start position:0%
allow you to have a complete code
pipeline<00:11:59.710><c> that's</c><00:11:59.890><c> written</c><00:12:00.070><c> in</c><00:12:00.220><c> Java</c>

00:12:00.720 --> 00:12:00.730 align:start position:0%
pipeline that's written in Java
 

00:12:00.730 --> 00:12:06.600 align:start position:0%
pipeline that's written in Java
portable<00:12:01.270><c> job</c><00:12:03.240><c> all</c><00:12:04.240><c> right</c><00:12:05.100><c> some</c><00:12:06.100><c> big</c><00:12:06.250><c> ideas</c>

00:12:06.600 --> 00:12:06.610 align:start position:0%
portable job all right some big ideas
 

00:12:06.610 --> 00:12:11.100 align:start position:0%
portable job all right some big ideas
that<00:12:07.080><c> relate</c><00:12:08.080><c> to</c><00:12:08.350><c> these</c><00:12:08.470><c> trends</c><00:12:09.720><c> what</c><00:12:10.720><c> the</c>

00:12:11.100 --> 00:12:11.110 align:start position:0%
that relate to these trends what the
 

00:12:11.110 --> 00:12:12.780 align:start position:0%
that relate to these trends what the
platform<00:12:11.320><c> should</c><00:12:11.950><c> be</c><00:12:12.070><c> interoperable</c><00:12:12.370><c> with</c>

00:12:12.780 --> 00:12:12.790 align:start position:0%
platform should be interoperable with
 

00:12:12.790 --> 00:12:14.960 align:start position:0%
platform should be interoperable with
other<00:12:12.970><c> nearby</c><00:12:13.390><c> platforms</c>

00:12:14.960 --> 00:12:14.970 align:start position:0%
other nearby platforms
 

00:12:14.970 --> 00:12:17.340 align:start position:0%
other nearby platforms
let's<00:12:15.970><c> make</c><00:12:16.210><c> native</c><00:12:16.540><c> code</c><00:12:16.780><c> and</c><00:12:16.960><c> data</c><00:12:17.140><c> look</c>

00:12:17.340 --> 00:12:17.350 align:start position:0%
let's make native code and data look
 

00:12:17.350 --> 00:12:20.010 align:start position:0%
let's make native code and data look
like<00:12:17.380><c> Java</c><00:12:17.770><c> code</c><00:12:18.040><c> and</c><00:12:18.070><c> data</c><00:12:18.540><c> not</c><00:12:19.540><c> that</c><00:12:19.720><c> we</c><00:12:19.840><c> can</c>

00:12:20.010 --> 00:12:20.020 align:start position:0%
like Java code and data not that we can
 

00:12:20.020 --> 00:12:22.110 align:start position:0%
like Java code and data not that we can
make<00:12:20.530><c> all</c><00:12:20.860><c> the</c><00:12:20.980><c> differences</c><00:12:21.370><c> disappear</c><00:12:21.940><c> but</c>

00:12:22.110 --> 00:12:22.120 align:start position:0%
make all the differences disappear but
 

00:12:22.120 --> 00:12:23.880 align:start position:0%
make all the differences disappear but
let's<00:12:22.300><c> bring</c><00:12:22.570><c> them</c><00:12:22.720><c> together</c><00:12:22.930><c> let's</c><00:12:23.410><c> heal</c><00:12:23.710><c> the</c>

00:12:23.880 --> 00:12:23.890 align:start position:0%
let's bring them together let's heal the
 

00:12:23.890 --> 00:12:27.300 align:start position:0%
let's bring them together let's heal the
rift<00:12:24.100><c> let's</c><00:12:24.970><c> let's</c><00:12:25.450><c> not</c><00:12:25.540><c> force</c><00:12:26.310><c> programmers</c>

00:12:27.300 --> 00:12:27.310 align:start position:0%
rift let's let's not force programmers
 

00:12:27.310 --> 00:12:30.030 align:start position:0%
rift let's let's not force programmers
to<00:12:27.970><c> leave</c><00:12:28.210><c> the</c><00:12:28.420><c> Java</c><00:12:28.660><c> ecosystem</c><00:12:29.470><c> in</c><00:12:29.620><c> order</c><00:12:29.920><c> to</c>

00:12:30.030 --> 00:12:30.040 align:start position:0%
to leave the Java ecosystem in order to
 

00:12:30.040 --> 00:12:32.610 align:start position:0%
to leave the Java ecosystem in order to
get<00:12:30.250><c> a</c><00:12:30.280><c> tight</c><00:12:30.880><c> loop</c><00:12:31.090><c> over</c><00:12:31.450><c> here</c><00:12:31.720><c> or</c><00:12:31.900><c> a</c><00:12:32.320><c> flat</c>

00:12:32.610 --> 00:12:32.620 align:start position:0%
get a tight loop over here or a flat
 

00:12:32.620 --> 00:12:34.320 align:start position:0%
get a tight loop over here or a flat
data<00:12:32.860><c> structure</c><00:12:33.310><c> over</c><00:12:33.550><c> here</c><00:12:33.580><c> or</c><00:12:34.030><c> an</c><00:12:34.150><c> off</c>

00:12:34.320 --> 00:12:34.330 align:start position:0%
data structure over here or an off
 

00:12:34.330 --> 00:12:37.110 align:start position:0%
data structure over here or an off
buffer<00:12:35.110><c> over</c><00:12:35.380><c> here</c><00:12:35.650><c> this</c><00:12:36.250><c> is</c><00:12:36.310><c> why</c><00:12:36.610><c> I'm</c><00:12:36.850><c> safe</c>

00:12:37.110 --> 00:12:37.120 align:start position:0%
buffer over here this is why I'm safe
 

00:12:37.120 --> 00:12:38.730 align:start position:0%
buffer over here this is why I'm safe
was<00:12:37.330><c> introduced</c><00:12:37.720><c> years</c><00:12:37.990><c> ago</c><00:12:38.230><c> to</c><00:12:38.290><c> allow</c><00:12:38.560><c> people</c>

00:12:38.730 --> 00:12:38.740 align:start position:0%
was introduced years ago to allow people
 

00:12:38.740 --> 00:12:40.500 align:start position:0%
was introduced years ago to allow people
not<00:12:39.070><c> to</c><00:12:39.190><c> have</c><00:12:39.280><c> to</c><00:12:39.400><c> leave</c><00:12:39.580><c> the</c><00:12:39.730><c> Java</c><00:12:39.940><c> ecosystem</c>

00:12:40.500 --> 00:12:40.510 align:start position:0%
not to have to leave the Java ecosystem
 

00:12:40.510 --> 00:12:42.450 align:start position:0%
not to have to leave the Java ecosystem
in<00:12:40.600><c> order</c><00:12:40.810><c> to</c><00:12:40.900><c> get</c><00:12:41.050><c> to</c><00:12:41.200><c> native</c><00:12:41.470><c> memory</c><00:12:41.680><c> we</c><00:12:42.280><c> have</c>

00:12:42.450 --> 00:12:42.460 align:start position:0%
in order to get to native memory we have
 

00:12:42.460 --> 00:12:45.750 align:start position:0%
in order to get to native memory we have
better<00:12:43.920><c> replacements</c><00:12:44.920><c> for</c><00:12:45.010><c> unsafe</c><00:12:45.400><c> such</c><00:12:45.640><c> as</c>

00:12:45.750 --> 00:12:45.760 align:start position:0%
better replacements for unsafe such as
 

00:12:45.760 --> 00:12:48.420 align:start position:0%
better replacements for unsafe such as
project<00:12:45.970><c> Panama</c><00:12:46.600><c> which</c><00:12:47.500><c> which</c><00:12:47.830><c> lets</c><00:12:48.130><c> you</c><00:12:48.250><c> get</c>

00:12:48.420 --> 00:12:48.430 align:start position:0%
project Panama which which lets you get
 

00:12:48.430 --> 00:12:50.550 align:start position:0%
project Panama which which lets you get
a<00:12:48.490><c> native</c><00:12:49.150><c> data</c><00:12:49.300><c> in</c><00:12:49.510><c> a</c><00:12:49.570><c> type</c><00:12:49.780><c> safe</c><00:12:50.050><c> manner</c><00:12:50.320><c> in</c>

00:12:50.550 --> 00:12:50.560 align:start position:0%
a native data in a type safe manner in
 

00:12:50.560 --> 00:12:53.850 align:start position:0%
a native data in a type safe manner in
any<00:12:51.070><c> case</c><00:12:51.310><c> the</c><00:12:51.520><c> big</c><00:12:51.790><c> idea</c><00:12:52.270><c> is</c><00:12:52.600><c> to</c><00:12:52.630><c> not</c><00:12:53.260><c> force</c>

00:12:53.850 --> 00:12:53.860 align:start position:0%
any case the big idea is to not force
 

00:12:53.860 --> 00:12:55.740 align:start position:0%
any case the big idea is to not force
people<00:12:54.100><c> to</c><00:12:54.310><c> go</c><00:12:54.790><c> out</c><00:12:55.000><c> of</c><00:12:55.150><c> the</c><00:12:55.240><c> managed</c><00:12:55.540><c> runtime</c>

00:12:55.740 --> 00:12:55.750 align:start position:0%
people to go out of the managed runtime
 

00:12:55.750 --> 00:12:58.230 align:start position:0%
people to go out of the managed runtime
in<00:12:56.140><c> order</c><00:12:56.350><c> to</c><00:12:56.410><c> do</c><00:12:56.589><c> manage</c><00:12:56.950><c> things</c><00:12:57.220><c> we</c><00:12:58.030><c> talked</c>

00:12:58.230 --> 00:12:58.240 align:start position:0%
in order to do manage things we talked
 

00:12:58.240 --> 00:13:00.180 align:start position:0%
in order to do manage things we talked
about<00:12:58.300><c> this</c><00:12:58.510><c> at</c><00:12:58.690><c> the</c><00:12:58.720><c> boss</c><00:12:58.990><c> last</c><00:12:59.589><c> night</c><00:12:59.800><c> for</c>

00:13:00.180 --> 00:13:00.190 align:start position:0%
about this at the boss last night for
 

00:13:00.190 --> 00:13:05.760 align:start position:0%
about this at the boss last night for
Panama<00:13:02.700><c> this</c><00:13:03.700><c> this</c><00:13:04.180><c> is</c><00:13:04.690><c> this</c><00:13:05.080><c> depends</c><00:13:05.589><c> partly</c>

00:13:05.760 --> 00:13:05.770 align:start position:0%
Panama this this is this depends partly
 

00:13:05.770 --> 00:13:08.940 align:start position:0%
Panama this this is this depends partly
on<00:13:05.980><c> value</c><00:13:06.400><c> types</c><00:13:06.640><c> because</c><00:13:06.960><c> Java's</c><00:13:07.990><c> classes</c>

00:13:08.940 --> 00:13:08.950 align:start position:0%
on value types because Java's classes
 

00:13:08.950 --> 00:13:11.140 align:start position:0%
on value types because Java's classes
are<00:13:09.250><c> currently</c><00:13:09.700><c> tied</c><00:13:09.970><c> to</c><00:13:10.210><c> Java</c><00:13:10.450><c> objects</c><00:13:10.960><c> and</c>

00:13:11.140 --> 00:13:11.150 align:start position:0%
are currently tied to Java objects and
 

00:13:11.150 --> 00:13:12.610 align:start position:0%
are currently tied to Java objects and
would<00:13:11.270><c> think</c><00:13:11.510><c> the</c><00:13:11.660><c> classes</c><00:13:12.080><c> are</c><00:13:12.200><c> inherently</c>

00:13:12.610 --> 00:13:12.620 align:start position:0%
would think the classes are inherently
 

00:13:12.620 --> 00:13:14.020 align:start position:0%
would think the classes are inherently
tied<00:13:12.830><c> to</c><00:13:13.010><c> objects</c><00:13:13.310><c> but</c><00:13:13.430><c> they're</c><00:13:13.550><c> not</c><00:13:13.670><c> a</c><00:13:13.730><c> class</c>

00:13:14.020 --> 00:13:14.030 align:start position:0%
tied to objects but they're not a class
 

00:13:14.030 --> 00:13:17.020 align:start position:0%
tied to objects but they're not a class
is<00:13:14.270><c> a</c><00:13:14.300><c> bunch</c><00:13:14.630><c> of</c><00:13:14.900><c> named</c><00:13:15.620><c> API</c><00:13:16.040><c> points</c><00:13:16.580><c> methods</c>

00:13:17.020 --> 00:13:17.030 align:start position:0%
is a bunch of named API points methods
 

00:13:17.030 --> 00:13:19.540 align:start position:0%
is a bunch of named API points methods
and<00:13:17.330><c> and</c><00:13:17.660><c> data</c><00:13:17.870><c> connections</c><00:13:18.680><c> fields</c><00:13:19.280><c> if</c><00:13:19.430><c> you</c>

00:13:19.540 --> 00:13:19.550 align:start position:0%
and and data connections fields if you
 

00:13:19.550 --> 00:13:20.730 align:start position:0%
and and data connections fields if you
will

00:13:20.730 --> 00:13:20.740 align:start position:0%
will
 

00:13:20.740 --> 00:13:23.530 align:start position:0%
will
interfaces<00:13:21.740><c> that</c><00:13:22.640><c> has</c><00:13:22.880><c> nothing</c><00:13:23.150><c> to</c><00:13:23.300><c> do</c><00:13:23.450><c> with</c>

00:13:23.530 --> 00:13:23.540 align:start position:0%
interfaces that has nothing to do with
 

00:13:23.540 --> 00:13:27.130 align:start position:0%
interfaces that has nothing to do with
objects<00:13:24.050><c> necessarily</c><00:13:25.420><c> in</c><00:13:26.420><c> particular</c><00:13:26.960><c> the</c>

00:13:27.130 --> 00:13:27.140 align:start position:0%
objects necessarily in particular the
 

00:13:27.140 --> 00:13:28.870 align:start position:0%
objects necessarily in particular the
piece<00:13:27.320><c> of</c><00:13:27.500><c> the</c><00:13:27.590><c> object</c><00:13:28.040><c> that</c><00:13:28.070><c> a</c><00:13:28.190><c> class</c><00:13:28.520><c> does</c>

00:13:28.870 --> 00:13:28.880 align:start position:0%
piece of the object that a class does
 

00:13:28.880 --> 00:13:31.300 align:start position:0%
piece of the object that a class does
not<00:13:28.910><c> entail</c><00:13:29.780><c> is</c><00:13:30.140><c> the</c><00:13:30.470><c> identity</c><00:13:30.980><c> and</c>

00:13:31.300 --> 00:13:31.310 align:start position:0%
not entail is the identity and
 

00:13:31.310 --> 00:13:32.770 align:start position:0%
not entail is the identity and
statefulness<00:13:31.790><c> of</c><00:13:32.060><c> the</c><00:13:32.150><c> object</c><00:13:32.510><c> you</c><00:13:32.570><c> can</c><00:13:32.690><c> have</c>

00:13:32.770 --> 00:13:32.780 align:start position:0%
statefulness of the object you can have
 

00:13:32.780 --> 00:13:34.360 align:start position:0%
statefulness of the object you can have
perfectly<00:13:33.200><c> good</c><00:13:33.290><c> classes</c><00:13:34.010><c> that</c><00:13:34.220><c> are</c><00:13:34.340><c> not</c>

00:13:34.360 --> 00:13:34.370 align:start position:0%
perfectly good classes that are not
 

00:13:34.370 --> 00:13:37.390 align:start position:0%
perfectly good classes that are not
stateful<00:13:35.440><c> and</c><00:13:36.440><c> that's</c><00:13:36.650><c> exactly</c><00:13:36.980><c> what</c><00:13:37.280><c> we're</c>

00:13:37.390 --> 00:13:37.400 align:start position:0%
stateful and that's exactly what we're
 

00:13:37.400 --> 00:13:38.800 align:start position:0%
stateful and that's exactly what we're
doing<00:13:37.490><c> with</c><00:13:37.700><c> value</c><00:13:37.970><c> types</c><00:13:38.210><c> in</c><00:13:38.450><c> project</c>

00:13:38.800 --> 00:13:38.810 align:start position:0%
doing with value types in project
 

00:13:38.810 --> 00:13:41.200 align:start position:0%
doing with value types in project
Valhalla<00:13:39.140><c> we're</c><00:13:39.440><c> creating</c><00:13:39.980><c> we're</c><00:13:40.880><c> creating</c>

00:13:41.200 --> 00:13:41.210 align:start position:0%
Valhalla we're creating we're creating
 

00:13:41.210 --> 00:13:44.410 align:start position:0%
Valhalla we're creating we're creating
values<00:13:41.570><c> that</c><00:13:42.410><c> do</c><00:13:42.650><c> not</c><00:13:42.940><c> have</c><00:13:43.940><c> the</c><00:13:44.150><c> the</c>

00:13:44.410 --> 00:13:44.420 align:start position:0%
values that do not have the the
 

00:13:44.420 --> 00:13:46.960 align:start position:0%
values that do not have the the
overheads<00:13:45.140><c> and</c><00:13:45.320><c> burdens</c><00:13:45.650><c> associated</c><00:13:46.430><c> with</c>

00:13:46.960 --> 00:13:46.970 align:start position:0%
overheads and burdens associated with
 

00:13:46.970 --> 00:13:48.790 align:start position:0%
overheads and burdens associated with
objects<00:13:47.420><c> which</c><00:13:47.540><c> is</c><00:13:47.570><c> headers</c><00:13:48.050><c> and</c><00:13:48.320><c> pointers</c>

00:13:48.790 --> 00:13:48.800 align:start position:0%
objects which is headers and pointers
 

00:13:48.800 --> 00:13:51.610 align:start position:0%
objects which is headers and pointers
and<00:13:49.100><c> state</c><00:13:49.430><c> and</c><00:13:49.670><c> race</c><00:13:49.910><c> conditions</c><00:13:50.470><c> and</c><00:13:51.470><c> yet</c>

00:13:51.610 --> 00:13:51.620 align:start position:0%
and state and race conditions and yet
 

00:13:51.620 --> 00:13:53.340 align:start position:0%
and state and race conditions and yet
have<00:13:51.800><c> all</c><00:13:51.830><c> the</c><00:13:51.950><c> other</c><00:13:52.190><c> advantages</c><00:13:52.730><c> of</c><00:13:52.940><c> them</c>

00:13:53.340 --> 00:13:53.350 align:start position:0%
have all the other advantages of them
 

00:13:53.350 --> 00:13:58.060 align:start position:0%
have all the other advantages of them
and<00:13:54.350><c> this</c><00:13:54.560><c> will</c><00:13:54.740><c> let</c><00:13:54.890><c> us</c><00:13:54.950><c> have</c><00:13:57.070><c> small</c>

00:13:58.060 --> 00:13:58.070 align:start position:0%
and this will let us have small
 

00:13:58.070 --> 00:14:00.820 align:start position:0%
and this will let us have small
lightweight<00:13:58.730><c> agile</c><00:13:59.480><c> data</c><00:13:59.750><c> types</c><00:14:00.080><c> that</c><00:14:00.410><c> can</c>

00:14:00.820 --> 00:14:00.830 align:start position:0%
lightweight agile data types that can
 

00:14:00.830 --> 00:14:03.130 align:start position:0%
lightweight agile data types that can
then<00:14:01.010><c> be</c><00:14:01.160><c> used</c><00:14:01.190><c> as</c><00:14:01.610><c> cursors</c><00:14:02.120><c> into</c><00:14:02.630><c> other</c><00:14:02.780><c> parts</c>

00:14:03.130 --> 00:14:03.140 align:start position:0%
then be used as cursors into other parts
 

00:14:03.140 --> 00:14:05.200 align:start position:0%
then be used as cursors into other parts
of<00:14:03.290><c> the</c><00:14:03.440><c> world</c><00:14:03.650><c> in</c><00:14:04.190><c> other</c><00:14:04.310><c> words</c><00:14:04.580><c> smart</c>

00:14:05.200 --> 00:14:05.210 align:start position:0%
of the world in other words smart
 

00:14:05.210 --> 00:14:06.880 align:start position:0%
of the world in other words smart
pointers<00:14:05.540><c> in</c><00:14:05.720><c> C++</c><00:14:06.230><c> you</c><00:14:06.350><c> call</c><00:14:06.560><c> them</c><00:14:06.680><c> smart</c>

00:14:06.880 --> 00:14:06.890 align:start position:0%
pointers in C++ you call them smart
 

00:14:06.890 --> 00:14:08.620 align:start position:0%
pointers in C++ you call them smart
pointers<00:14:07.340><c> a</c><00:14:07.490><c> smart</c><00:14:07.910><c> pointer</c><00:14:08.180><c> is</c><00:14:08.300><c> a</c><00:14:08.330><c> little</c>

00:14:08.620 --> 00:14:08.630 align:start position:0%
pointers a smart pointer is a little
 

00:14:08.630 --> 00:14:10.450 align:start position:0%
pointers a smart pointer is a little
struct<00:14:08.990><c> right</c><00:14:09.290><c> that</c><00:14:09.560><c> you</c><00:14:09.650><c> can</c><00:14:09.800><c> easily</c><00:14:10.310><c> work</c>

00:14:10.450 --> 00:14:10.460 align:start position:0%
struct right that you can easily work
 

00:14:10.460 --> 00:14:12.100 align:start position:0%
struct right that you can easily work
with<00:14:10.520><c> it</c><00:14:10.880><c> has</c><00:14:11.030><c> its</c><00:14:11.210><c> own</c><00:14:11.330><c> invariants</c><00:14:11.870><c> and</c><00:14:12.020><c> its</c>

00:14:12.100 --> 00:14:12.110 align:start position:0%
with it has its own invariants and its
 

00:14:12.110 --> 00:14:15.130 align:start position:0%
with it has its own invariants and its
own<00:14:12.200><c> behavior</c><00:14:13.180><c> that</c><00:14:14.180><c> that's</c><00:14:14.690><c> something</c><00:14:15.050><c> we</c>

00:14:15.130 --> 00:14:15.140 align:start position:0%
own behavior that that's something we
 

00:14:15.140 --> 00:14:16.570 align:start position:0%
own behavior that that's something we
can<00:14:15.290><c> do</c><00:14:15.380><c> in</c><00:14:15.500><c> Java</c><00:14:15.740><c> too</c><00:14:15.950><c> and</c><00:14:16.100><c> that's</c><00:14:16.160><c> one</c><00:14:16.370><c> of</c><00:14:16.490><c> the</c>

00:14:16.570 --> 00:14:16.580 align:start position:0%
can do in Java too and that's one of the
 

00:14:16.580 --> 00:14:18.430 align:start position:0%
can do in Java too and that's one of the
that's<00:14:17.000><c> one</c><00:14:17.180><c> of</c><00:14:17.270><c> the</c><00:14:17.330><c> outcomes</c><00:14:17.690><c> of</c><00:14:17.870><c> valhalla</c>

00:14:18.430 --> 00:14:18.440 align:start position:0%
that's one of the outcomes of valhalla
 

00:14:18.440 --> 00:14:22.780 align:start position:0%
that's one of the outcomes of valhalla
will<00:14:18.710><c> give</c><00:14:18.860><c> us</c><00:14:18.980><c> ways</c><00:14:19.190><c> to</c><00:14:19.430><c> describe</c><00:14:20.560><c> not</c><00:14:21.790><c> state</c>

00:14:22.780 --> 00:14:22.790 align:start position:0%
will give us ways to describe not state
 

00:14:22.790 --> 00:14:26.020 align:start position:0%
will give us ways to describe not state
that<00:14:22.820><c> is</c><00:14:23.300><c> owned</c><00:14:23.660><c> by</c><00:14:23.870><c> the</c><00:14:24.080><c> Java</c><00:14:24.470><c> heap</c><00:14:24.800><c> but</c><00:14:25.280><c> non</c>

00:14:26.020 --> 00:14:26.030 align:start position:0%
that is owned by the Java heap but non
 

00:14:26.030 --> 00:14:28.360 align:start position:0%
that is owned by the Java heap but non
state<00:14:26.570><c> that</c><00:14:27.020><c> points</c><00:14:27.680><c> intelligently</c>

00:14:28.360 --> 00:14:28.370 align:start position:0%
state that points intelligently
 

00:14:28.370 --> 00:14:32.430 align:start position:0%
state that points intelligently
somewhere<00:14:28.880><c> else</c><00:14:29.030><c> in</c><00:14:29.240><c> the</c><00:14:29.330><c> universe</c>

00:14:32.430 --> 00:14:32.440 align:start position:0%
 
 

00:14:32.440 --> 00:14:35.380 align:start position:0%
 
interoperability<00:14:33.440><c> also</c><00:14:33.950><c> depends</c><00:14:34.910><c> on</c><00:14:35.030><c> a</c><00:14:35.240><c> way</c>

00:14:35.380 --> 00:14:35.390 align:start position:0%
interoperability also depends on a way
 

00:14:35.390 --> 00:14:37.690 align:start position:0%
interoperability also depends on a way
to<00:14:35.420><c> bridge</c><00:14:35.810><c> from</c><00:14:35.840><c> Java</c><00:14:36.590><c> code</c><00:14:36.710><c> to</c><00:14:37.160><c> native</c><00:14:37.460><c> code</c>

00:14:37.690 --> 00:14:37.700 align:start position:0%
to bridge from Java code to native code
 

00:14:37.700 --> 00:14:38.350 align:start position:0%
to bridge from Java code to native code
to

00:14:38.350 --> 00:14:38.360 align:start position:0%
to
 

00:14:38.360 --> 00:14:42.070 align:start position:0%
to
non<00:14:38.750><c> non</c><00:14:39.410><c> Java</c><00:14:39.770><c> layouts</c><00:14:40.490><c> and</c><00:14:40.820><c> the</c><00:14:41.690><c> JIT</c><00:14:41.900><c> is</c><00:14:41.930><c> a</c>

00:14:42.070 --> 00:14:42.080 align:start position:0%
non non Java layouts and the JIT is a
 

00:14:42.080 --> 00:14:43.840 align:start position:0%
non non Java layouts and the JIT is a
great<00:14:42.410><c> code</c><00:14:42.650><c> generator</c><00:14:43.070><c> for</c><00:14:43.280><c> this</c><00:14:43.400><c> there's</c>

00:14:43.840 --> 00:14:43.850 align:start position:0%
great code generator for this there's
 

00:14:43.850 --> 00:14:45.700 align:start position:0%
great code generator for this there's
nothing<00:14:43.940><c> that</c><00:14:44.210><c> says</c><00:14:44.420><c> that</c><00:14:44.450><c> the</c><00:14:44.870><c> Java</c><00:14:45.110><c> jet</c><00:14:45.440><c> has</c>

00:14:45.700 --> 00:14:45.710 align:start position:0%
nothing that says that the Java jet has
 

00:14:45.710 --> 00:14:48.550 align:start position:0%
nothing that says that the Java jet has
to<00:14:46.010><c> generate</c><00:14:46.190><c> code</c><00:14:46.730><c> only</c><00:14:47.360><c> for</c><00:14:47.930><c> working</c><00:14:48.350><c> with</c>

00:14:48.550 --> 00:14:48.560 align:start position:0%
to generate code only for working with
 

00:14:48.560 --> 00:14:51.400 align:start position:0%
to generate code only for working with
with<00:14:49.220><c> Java</c><00:14:49.460><c> data</c><00:14:49.730><c> structures</c><00:14:50.320><c> it's</c><00:14:51.320><c> a</c>

00:14:51.400 --> 00:14:51.410 align:start position:0%
with Java data structures it's a
 

00:14:51.410 --> 00:14:52.890 align:start position:0%
with Java data structures it's a
perfectly<00:14:51.740><c> general</c><00:14:52.010><c> code</c><00:14:52.370><c> generation</c>

00:14:52.890 --> 00:14:52.900 align:start position:0%
perfectly general code generation
 

00:14:52.900 --> 00:14:57.580 align:start position:0%
perfectly general code generation
mechanism<00:14:53.950><c> it's</c><00:14:54.950><c> comparable</c><00:14:55.910><c> in</c><00:14:56.150><c> power</c><00:14:56.390><c> to</c><00:14:56.780><c> to</c>

00:14:57.580 --> 00:14:57.590 align:start position:0%
mechanism it's comparable in power to to
 

00:14:57.590 --> 00:15:00.220 align:start position:0%
mechanism it's comparable in power to to
other<00:14:57.710><c> code</c><00:14:58.010><c> generators</c><00:14:58.520><c> like</c><00:14:58.760><c> the</c><00:14:59.480><c> GCC</c><00:14:59.870><c> back</c>

00:15:00.220 --> 00:15:00.230 align:start position:0%
other code generators like the GCC back
 

00:15:00.230 --> 00:15:03.780 align:start position:0%
other code generators like the GCC back
end<00:15:00.530><c> or</c><00:15:00.740><c> LLVM</c><00:15:01.570><c> so</c><00:15:02.570><c> let's</c><00:15:02.810><c> use</c><00:15:02.930><c> it</c><00:15:03.080><c> for</c><00:15:03.230><c> that</c>

00:15:03.780 --> 00:15:03.790 align:start position:0%
end or LLVM so let's use it for that
 

00:15:03.790 --> 00:15:06.700 align:start position:0%
end or LLVM so let's use it for that
this<00:15:04.790><c> would</c><00:15:05.030><c> enable</c><00:15:05.480><c> coupling</c><00:15:06.260><c> to</c><00:15:06.380><c> a</c><00:15:06.410><c> wider</c>

00:15:06.700 --> 00:15:06.710 align:start position:0%
this would enable coupling to a wider
 

00:15:06.710 --> 00:15:12.120 align:start position:0%
this would enable coupling to a wider
range<00:15:07.010><c> of</c><00:15:07.870><c> hardware</c><00:15:08.870><c> types</c><00:15:09.170><c> data</c><00:15:09.740><c> types</c><00:15:10.450><c> and</c>

00:15:12.120 --> 00:15:12.130 align:start position:0%
range of hardware types data types and
 

00:15:12.130 --> 00:15:15.460 align:start position:0%
range of hardware types data types and
in<00:15:13.130><c> order</c><00:15:13.550><c> to</c><00:15:13.580><c> in</c><00:15:14.180><c> order</c><00:15:14.330><c> to</c><00:15:14.450><c> have</c><00:15:14.630><c> a</c><00:15:14.690><c> if</c><00:15:15.080><c> we</c><00:15:15.320><c> get</c>

00:15:15.460 --> 00:15:15.470 align:start position:0%
in order to in order to have a if we get
 

00:15:15.470 --> 00:15:17.500 align:start position:0%
in order to in order to have a if we get
a<00:15:15.500><c> more</c><00:15:15.740><c> a</c><00:15:16.010><c> better</c><00:15:16.340><c> interoperability</c><00:15:17.060><c> story</c>

00:15:17.500 --> 00:15:17.510 align:start position:0%
a more a better interoperability story
 

00:15:17.510 --> 00:15:20.320 align:start position:0%
a more a better interoperability story
which<00:15:17.690><c> is</c><00:15:17.840><c> which</c><00:15:18.800><c> is</c><00:15:18.830><c> what</c><00:15:19.250><c> Panama</c><00:15:19.670><c> is</c><00:15:19.910><c> is</c>

00:15:20.320 --> 00:15:20.330 align:start position:0%
which is which is what Panama is is
 

00:15:20.330 --> 00:15:22.540 align:start position:0%
which is which is what Panama is is
aiming<00:15:20.720><c> at</c><00:15:20.840><c> the</c><00:15:20.960><c> project</c><00:15:21.290><c> Panama</c><00:15:21.650><c> then</c><00:15:22.340><c> we'll</c>

00:15:22.540 --> 00:15:22.550 align:start position:0%
aiming at the project Panama then we'll
 

00:15:22.550 --> 00:15:25.150 align:start position:0%
aiming at the project Panama then we'll
be<00:15:22.670><c> able</c><00:15:23.000><c> to</c><00:15:23.180><c> write</c><00:15:23.810><c> in</c><00:15:24.110><c> Java</c><00:15:24.500><c> code</c><00:15:24.590><c> that</c>

00:15:25.150 --> 00:15:25.160 align:start position:0%
be able to write in Java code that
 

00:15:25.160 --> 00:15:27.610 align:start position:0%
be able to write in Java code that
natural<00:15:25.759><c> and</c><00:15:25.910><c> java-like</c><00:15:26.509><c> and</c><00:15:26.870><c> be</c><00:15:27.170><c> able</c><00:15:27.440><c> to</c>

00:15:27.610 --> 00:15:27.620 align:start position:0%
natural and java-like and be able to
 

00:15:27.620 --> 00:15:30.999 align:start position:0%
natural and java-like and be able to
work<00:15:27.829><c> with</c><00:15:28.040><c> some</c><00:15:28.600><c> Java</c><00:15:29.600><c> IDE</c><00:15:29.870><c> s</c><00:15:30.259><c> Java</c><00:15:30.680><c> strong</c>

00:15:30.999 --> 00:15:31.009 align:start position:0%
work with some Java IDE s Java strong
 

00:15:31.009 --> 00:15:34.090 align:start position:0%
work with some Java IDE s Java strong
typing<00:15:31.430><c> Java</c><00:15:31.699><c> encapsulation</c><00:15:32.420><c> and</c><00:15:33.379><c> yet</c><00:15:33.800><c> still</c>

00:15:34.090 --> 00:15:34.100 align:start position:0%
typing Java encapsulation and yet still
 

00:15:34.100 --> 00:15:37.150 align:start position:0%
typing Java encapsulation and yet still
have<00:15:34.339><c> smart</c><00:15:35.300><c> pointers</c><00:15:35.629><c> that</c><00:15:35.660><c> point</c><00:15:35.810><c> to</c><00:15:36.319><c> dusty</c>

00:15:37.150 --> 00:15:37.160 align:start position:0%
have smart pointers that point to dusty
 

00:15:37.160 --> 00:15:40.869 align:start position:0%
have smart pointers that point to dusty
deck<00:15:37.339><c> COBOL</c><00:15:37.819><c> images</c><00:15:38.480><c> or</c><00:15:39.160><c> cutting-edge</c><00:15:40.160><c> GPU</c>

00:15:40.869 --> 00:15:40.879 align:start position:0%
deck COBOL images or cutting-edge GPU
 

00:15:40.879 --> 00:15:42.819 align:start position:0%
deck COBOL images or cutting-edge GPU
arrays<00:15:41.269><c> and</c><00:15:41.689><c> be</c><00:15:42.050><c> able</c><00:15:42.230><c> to</c><00:15:42.319><c> get</c><00:15:42.470><c> in</c><00:15:42.589><c> there</c><00:15:42.740><c> and</c>

00:15:42.819 --> 00:15:42.829 align:start position:0%
arrays and be able to get in there and
 

00:15:42.829 --> 00:15:45.220 align:start position:0%
arrays and be able to get in there and
do<00:15:42.949><c> the</c><00:15:43.069><c> job</c><00:15:43.279><c> without</c><00:15:44.029><c> without</c><00:15:44.629><c> leaving</c><00:15:44.870><c> the</c>

00:15:45.220 --> 00:15:45.230 align:start position:0%
do the job without without leaving the
 

00:15:45.230 --> 00:15:50.050 align:start position:0%
do the job without without leaving the
comforts<00:15:45.649><c> of</c><00:15:45.800><c> Java</c><00:15:48.160><c> one</c><00:15:49.160><c> I</c><00:15:49.430><c> want</c><00:15:49.730><c> to</c><00:15:49.790><c> call</c><00:15:49.910><c> out</c>

00:15:50.050 --> 00:15:50.060 align:start position:0%
comforts of Java one I want to call out
 

00:15:50.060 --> 00:15:52.420 align:start position:0%
comforts of Java one I want to call out
in<00:15:50.209><c> particular</c><00:15:50.750><c> is</c><00:15:50.990><c> we</c><00:15:51.649><c> have</c><00:15:51.829><c> something</c><00:15:52.279><c> which</c>

00:15:52.420 --> 00:15:52.430 align:start position:0%
in particular is we have something which
 

00:15:52.430 --> 00:15:54.249 align:start position:0%
in particular is we have something which
I<00:15:52.610><c> call</c><00:15:52.819><c> an</c><00:15:52.939><c> as</c><00:15:53.120><c> in</c><00:15:53.360><c> statement</c><00:15:53.839><c> for</c><00:15:54.019><c> Java</c>

00:15:54.249 --> 00:15:54.259 align:start position:0%
I call an as in statement for Java
 

00:15:54.259 --> 00:15:56.710 align:start position:0%
I call an as in statement for Java
that's<00:15:54.920><c> being</c><00:15:55.459><c> prototyped</c><00:15:56.029><c> in</c><00:15:56.180><c> which</c><00:15:56.360><c> you</c><00:15:56.540><c> can</c>

00:15:56.710 --> 00:15:56.720 align:start position:0%
that's being prototyped in which you can
 

00:15:56.720 --> 00:15:59.710 align:start position:0%
that's being prototyped in which you can
make<00:15:56.930><c> a</c><00:15:56.959><c> method</c><00:15:57.379><c> handle</c><00:15:57.740><c> I</c><00:15:58.670><c> hope</c><00:15:59.180><c> you</c><00:15:59.360><c> have</c>

00:15:59.710 --> 00:15:59.720 align:start position:0%
make a method handle I hope you have
 

00:15:59.720 --> 00:16:01.869 align:start position:0%
make a method handle I hope you have
heard<00:15:59.959><c> of</c><00:16:00.050><c> method</c><00:16:00.319><c> handles</c><00:16:00.879><c> which</c>

00:16:01.869 --> 00:16:01.879 align:start position:0%
heard of method handles which
 

00:16:01.879 --> 00:16:04.420 align:start position:0%
heard of method handles which
encapsulate<00:16:02.629><c> a</c><00:16:02.660><c> single</c><00:16:03.139><c> instruction</c><00:16:03.740><c> that</c>

00:16:04.420 --> 00:16:04.430 align:start position:0%
encapsulate a single instruction that
 

00:16:04.430 --> 00:16:07.360 align:start position:0%
encapsulate a single instruction that
has<00:16:05.089><c> a</c><00:16:05.149><c> little</c><00:16:05.389><c> bit</c><00:16:05.480><c> of</c><00:16:05.569><c> information</c><00:16:06.160><c> to</c><00:16:07.160><c> tell</c>

00:16:07.360 --> 00:16:07.370 align:start position:0%
has a little bit of information to tell
 

00:16:07.370 --> 00:16:09.369 align:start position:0%
has a little bit of information to tell
the<00:16:07.519><c> JIT</c><00:16:07.790><c> which</c><00:16:08.089><c> registers</c><00:16:08.600><c> that</c><00:16:08.689><c> instruction</c>

00:16:09.369 --> 00:16:09.379 align:start position:0%
the JIT which registers that instruction
 

00:16:09.379 --> 00:16:12.100 align:start position:0%
the JIT which registers that instruction
uses<00:16:09.769><c> and</c><00:16:10.149><c> otherwise</c><00:16:11.149><c> just</c><00:16:11.540><c> tells</c><00:16:11.779><c> the</c><00:16:11.839><c> JIT</c>

00:16:12.100 --> 00:16:12.110 align:start position:0%
uses and otherwise just tells the JIT
 

00:16:12.110 --> 00:16:13.900 align:start position:0%
uses and otherwise just tells the JIT
drop<00:16:12.470><c> this</c><00:16:12.680><c> instruction</c><00:16:13.279><c> in</c><00:16:13.399><c> when</c><00:16:13.579><c> I</c><00:16:13.610><c> call</c>

00:16:13.900 --> 00:16:13.910 align:start position:0%
drop this instruction in when I call
 

00:16:13.910 --> 00:16:16.179 align:start position:0%
drop this instruction in when I call
this<00:16:14.060><c> method</c><00:16:14.269><c> handle</c><00:16:14.689><c> so</c><00:16:15.259><c> it</c><00:16:15.589><c> really</c><00:16:16.069><c> is</c><00:16:16.160><c> a</c>

00:16:16.179 --> 00:16:16.189 align:start position:0%
this method handle so it really is a
 

00:16:16.189 --> 00:16:18.790 align:start position:0%
this method handle so it really is a
NASM<00:16:16.610><c> statement</c><00:16:17.000><c> for</c><00:16:17.149><c> Java</c><00:16:17.360><c> and</c><00:16:17.629><c> we</c><00:16:18.139><c> have</c><00:16:18.350><c> in</c>

00:16:18.790 --> 00:16:18.800 align:start position:0%
NASM statement for Java and we have in
 

00:16:18.800 --> 00:16:20.470 align:start position:0%
NASM statement for Java and we have in
combination<00:16:19.430><c> with</c><00:16:19.550><c> some</c><00:16:19.699><c> other</c><00:16:19.819><c> technology</c>

00:16:20.470 --> 00:16:20.480 align:start position:0%
combination with some other technology
 

00:16:20.480 --> 00:16:22.720 align:start position:0%
combination with some other technology
some<00:16:21.350><c> Intel</c><00:16:21.680><c> engineers</c><00:16:22.100><c> are</c><00:16:22.339><c> doing</c><00:16:22.550><c> really</c>

00:16:22.720 --> 00:16:22.730 align:start position:0%
some Intel engineers are doing really
 

00:16:22.730 --> 00:16:26.019 align:start position:0%
some Intel engineers are doing really
brilliant<00:16:23.209><c> work</c><00:16:23.769><c> creating</c><00:16:24.769><c> really</c><00:16:25.490><c> nice</c><00:16:25.699><c> easy</c>

00:16:26.019 --> 00:16:26.029 align:start position:0%
brilliant work creating really nice easy
 

00:16:26.029 --> 00:16:28.360 align:start position:0%
brilliant work creating really nice easy
to<00:16:26.360><c> use</c><00:16:26.480><c> Java</c><00:16:26.779><c> API</c><00:16:27.139><c> s</c><00:16:27.290><c> for</c><00:16:27.680><c> directly</c><00:16:28.100><c> coding</c>

00:16:28.360 --> 00:16:28.370 align:start position:0%
to use Java API s for directly coding
 

00:16:28.370 --> 00:16:30.460 align:start position:0%
to use Java API s for directly coding
vector<00:16:28.850><c> loops</c><00:16:29.060><c> and</c><00:16:29.329><c> this</c><00:16:29.689><c> is</c><00:16:29.899><c> in</c><00:16:30.110><c> my</c><00:16:30.259><c> opinion</c>

00:16:30.460 --> 00:16:30.470 align:start position:0%
vector loops and this is in my opinion
 

00:16:30.470 --> 00:16:32.679 align:start position:0%
vector loops and this is in my opinion
the<00:16:30.680><c> best</c><00:16:30.889><c> current</c><00:16:31.189><c> way</c><00:16:31.430><c> to</c><00:16:31.490><c> code</c><00:16:31.910><c> vector</c>

00:16:32.679 --> 00:16:32.689 align:start position:0%
the best current way to code vector
 

00:16:32.689 --> 00:16:36.360 align:start position:0%
the best current way to code vector
loops<00:16:32.899><c> on</c><00:16:33.139><c> Intel</c><00:16:34.000><c> you</c><00:16:35.000><c> I've</c><00:16:35.660><c> done</c><00:16:35.870><c> it</c><00:16:36.050><c> with</c>

00:16:36.360 --> 00:16:36.370 align:start position:0%
loops on Intel you I've done it with
 

00:16:36.370 --> 00:16:39.249 align:start position:0%
loops on Intel you I've done it with
assembly<00:16:37.370><c> language</c><00:16:37.759><c> and</c><00:16:37.790><c> with</c><00:16:38.269><c> the</c><00:16:38.540><c> new</c><00:16:38.839><c> CC</c>

00:16:39.249 --> 00:16:39.259 align:start position:0%
assembly language and with the new CC
 

00:16:39.259 --> 00:16:47.740 align:start position:0%
assembly language and with the new CC
intrinsics<00:16:41.019><c> but</c><00:16:42.019><c> but</c><00:16:42.740><c> this</c><00:16:42.949><c> is</c><00:16:43.100><c> nicer</c><00:16:46.750><c> so</c>

00:16:47.740 --> 00:16:47.750 align:start position:0%
intrinsics but but this is nicer so
 

00:16:47.750 --> 00:16:50.350 align:start position:0%
intrinsics but but this is nicer so
panama<00:16:48.740><c> is</c><00:16:48.980><c> broadly</c><00:16:49.610><c> speaking</c><00:16:50.060><c> i've</c>

00:16:50.350 --> 00:16:50.360 align:start position:0%
panama is broadly speaking i've
 

00:16:50.360 --> 00:16:51.460 align:start position:0%
panama is broadly speaking i've
mentioned<00:16:50.569><c> a</c><00:16:50.839><c> couple</c><00:16:50.930><c> times</c>

00:16:51.460 --> 00:16:51.470 align:start position:0%
mentioned a couple times
 

00:16:51.470 --> 00:16:53.650 align:start position:0%
mentioned a couple times
it's<00:16:51.680><c> the</c><00:16:51.949><c> interconnection</c><00:16:52.610><c> story</c><00:16:53.149><c> it's</c><00:16:53.509><c> what</c>

00:16:53.650 --> 00:16:53.660 align:start position:0%
it's the interconnection story it's what
 

00:16:53.660 --> 00:16:56.710 align:start position:0%
it's the interconnection story it's what
comes<00:16:53.870><c> after</c><00:16:54.139><c> J</c><00:16:54.319><c> and</c><00:16:54.470><c> I</c><00:16:54.560><c> it's</c><00:16:55.399><c> the</c><00:16:55.790><c> much</c><00:16:56.360><c> wider</c>

00:16:56.710 --> 00:16:56.720 align:start position:0%
comes after J and I it's the much wider
 

00:16:56.720 --> 00:16:58.780 align:start position:0%
comes after J and I it's the much wider
broader<00:16:57.139><c> freeway</c><00:16:57.709><c> between</c><00:16:57.769><c> the</c><00:16:58.310><c> manage</c><00:16:58.639><c> in</c>

00:16:58.780 --> 00:16:58.790 align:start position:0%
broader freeway between the manage in
 

00:16:58.790 --> 00:17:00.999 align:start position:0%
broader freeway between the manage in
the<00:16:58.880><c> end</c><00:16:59.000><c> managed</c><00:16:59.630><c> world</c><00:16:59.870><c> as</c><00:17:00.199><c> opposed</c><00:17:00.709><c> to</c><00:17:00.860><c> the</c>

00:17:00.999 --> 00:17:01.009 align:start position:0%
the end managed world as opposed to the
 

00:17:01.009 --> 00:17:03.730 align:start position:0%
the end managed world as opposed to the
red-tape<00:17:01.639><c> ridden</c><00:17:02.180><c> narrow</c><00:17:03.050><c> footpath</c><00:17:03.680><c> that</c>

00:17:03.730 --> 00:17:03.740 align:start position:0%
red-tape ridden narrow footpath that
 

00:17:03.740 --> 00:17:07.090 align:start position:0%
red-tape ridden narrow footpath that
j'ni<00:17:04.400><c> is</c><00:17:05.049><c> one</c><00:17:06.049><c> of</c><00:17:06.169><c> the</c><00:17:06.230><c> goals</c><00:17:06.470><c> is</c><00:17:06.679><c> that</c><00:17:06.709><c> we</c><00:17:06.949><c> have</c>

00:17:07.090 --> 00:17:07.100 align:start position:0%
j'ni is one of the goals is that we have
 

00:17:07.100 --> 00:17:10.240 align:start position:0%
j'ni is one of the goals is that we have
zero<00:17:07.400><c> handwritten</c><00:17:07.819><c> code</c><00:17:08.470><c> last</c><00:17:09.470><c> night</c><00:17:09.740><c> Paul</c>

00:17:10.240 --> 00:17:10.250 align:start position:0%
zero handwritten code last night Paul
 

00:17:10.250 --> 00:17:12.039 align:start position:0%
zero handwritten code last night Paul
Santos<00:17:10.640><c> did</c><00:17:10.819><c> a</c><00:17:10.880><c> wonderful</c><00:17:11.179><c> demo</c><00:17:11.630><c> of</c><00:17:11.900><c> this</c>

00:17:12.039 --> 00:17:12.049 align:start position:0%
Santos did a wonderful demo of this
 

00:17:12.049 --> 00:17:16.149 align:start position:0%
Santos did a wonderful demo of this
where<00:17:12.620><c> he</c><00:17:12.829><c> showed</c><00:17:13.100><c> an</c><00:17:13.539><c> API</c><00:17:14.539><c> that</c><00:17:15.049><c> was</c><00:17:15.439><c> a</c><00:17:15.740><c> C</c><00:17:16.039><c> API</c>

00:17:16.149 --> 00:17:16.159 align:start position:0%
where he showed an API that was a C API
 

00:17:16.159 --> 00:17:18.340 align:start position:0%
where he showed an API that was a C API
with<00:17:16.549><c> a</c><00:17:16.579><c> header</c><00:17:16.789><c> file</c><00:17:17.089><c> and</c><00:17:17.390><c> in</c><00:17:17.480><c> a</c><00:17:17.839><c> dynamically</c>

00:17:18.340 --> 00:17:18.350 align:start position:0%
with a header file and in a dynamically
 

00:17:18.350 --> 00:17:19.270 align:start position:0%
with a header file and in a dynamically
linked<00:17:18.709><c> library</c>

00:17:19.270 --> 00:17:19.280 align:start position:0%
linked library
 

00:17:19.280 --> 00:17:21.189 align:start position:0%
linked library
he<00:17:19.640><c> ran</c><00:17:19.819><c> the</c><00:17:19.939><c> header</c><00:17:20.120><c> file</c><00:17:20.390><c> to</c><00:17:20.720><c> a</c><00:17:20.750><c> header</c><00:17:20.990><c> file</c>

00:17:21.189 --> 00:17:21.199 align:start position:0%
he ran the header file to a header file
 

00:17:21.199 --> 00:17:23.829 align:start position:0%
he ran the header file to a header file
grovel<00:17:21.799><c> or</c><00:17:21.860><c> called</c><00:17:22.189><c> J</c><00:17:22.459><c> extract</c><00:17:22.909><c> it</c><00:17:23.299><c> extracted</c>

00:17:23.829 --> 00:17:23.839 align:start position:0%
grovel or called J extract it extracted
 

00:17:23.839 --> 00:17:26.350 align:start position:0%
grovel or called J extract it extracted
metadata<00:17:24.380><c> the</c><00:17:25.159><c> metadata</c><00:17:25.520><c> was</c><00:17:25.819><c> about</c><00:17:26.059><c> six</c>

00:17:26.350 --> 00:17:26.360 align:start position:0%
metadata the metadata was about six
 

00:17:26.360 --> 00:17:28.090 align:start position:0%
metadata the metadata was about six
kilobytes<00:17:26.839><c> in</c><00:17:27.049><c> size</c><00:17:27.079><c> it</c><00:17:27.530><c> was</c><00:17:27.620><c> in</c><00:17:27.709><c> the</c><00:17:27.799><c> format</c>

00:17:28.090 --> 00:17:28.100 align:start position:0%
kilobytes in size it was in the format
 

00:17:28.100 --> 00:17:30.580 align:start position:0%
kilobytes in size it was in the format
of<00:17:28.130><c> a</c><00:17:28.280><c> jar</c><00:17:28.640><c> which</c><00:17:29.150><c> was</c><00:17:29.330><c> a</c><00:17:29.360><c> bunch</c><00:17:29.659><c> of</c><00:17:29.780><c> interfaces</c>

00:17:30.580 --> 00:17:30.590 align:start position:0%
of a jar which was a bunch of interfaces
 

00:17:30.590 --> 00:17:32.020 align:start position:0%
of a jar which was a bunch of interfaces
real<00:17:30.770><c> interfaces</c><00:17:31.340><c> you</c><00:17:31.520><c> could</c><00:17:31.640><c> put</c><00:17:31.789><c> in</c><00:17:31.880><c> your</c>

00:17:32.020 --> 00:17:32.030 align:start position:0%
real interfaces you could put in your
 

00:17:32.030 --> 00:17:34.690 align:start position:0%
real interfaces you could put in your
IDE<00:17:32.360><c> and</c><00:17:32.690><c> look</c><00:17:32.840><c> at</c><00:17:33.020><c> with</c><00:17:33.559><c> annotations</c><00:17:34.010><c> about</c>

00:17:34.690 --> 00:17:34.700 align:start position:0%
IDE and look at with annotations about
 

00:17:34.700 --> 00:17:37.590 align:start position:0%
IDE and look at with annotations about
binding<00:17:35.179><c> and</c><00:17:35.360><c> and</c><00:17:36.200><c> then</c><00:17:36.409><c> fed</c><00:17:36.740><c> that</c><00:17:36.980><c> into</c><00:17:37.520><c> a</c>

00:17:37.590 --> 00:17:37.600 align:start position:0%
binding and and then fed that into a
 

00:17:37.600 --> 00:17:38.680 align:start position:0%
binding and and then fed that into a
bind

00:17:38.680 --> 00:17:38.690 align:start position:0%
bind
 

00:17:38.690 --> 00:17:40.810 align:start position:0%
bind
that<00:17:39.379><c> created</c><00:17:39.710><c> classes</c><00:17:40.490><c> under</c><00:17:40.669><c> the</c>

00:17:40.810 --> 00:17:40.820 align:start position:0%
that created classes under the
 

00:17:40.820 --> 00:17:42.519 align:start position:0%
that created classes under the
interfaces<00:17:41.389><c> that</c><00:17:41.539><c> were</c><00:17:41.659><c> that</c><00:17:42.049><c> could</c><00:17:42.259><c> connect</c>

00:17:42.519 --> 00:17:42.529 align:start position:0%
interfaces that were that could connect
 

00:17:42.529 --> 00:17:44.769 align:start position:0%
interfaces that were that could connect
immediately<00:17:43.129><c> to</c><00:17:43.309><c> the</c><00:17:43.429><c> data</c><00:17:43.669><c> and</c><00:17:43.940><c> code</c><00:17:44.240><c> of</c><00:17:44.539><c> the</c>

00:17:44.769 --> 00:17:44.779 align:start position:0%
immediately to the data and code of the
 

00:17:44.779 --> 00:17:48.220 align:start position:0%
immediately to the data and code of the
C<00:17:44.929><c> API</c><00:17:45.139><c> and</c><00:17:45.710><c> it</c><00:17:46.220><c> was</c><00:17:46.340><c> a</c><00:17:46.389><c> ordinary</c><00:17:47.389><c> non-trivial</c>

00:17:48.220 --> 00:17:48.230 align:start position:0%
C API and it was a ordinary non-trivial
 

00:17:48.230 --> 00:17:51.100 align:start position:0%
C API and it was a ordinary non-trivial
C<00:17:48.620><c> API</c><00:17:48.740><c> with</c><00:17:49.309><c> dozens</c><00:17:50.149><c> of</c><00:17:50.269><c> data</c><00:17:50.509><c> structures</c><00:17:50.929><c> and</c>

00:17:51.100 --> 00:17:51.110 align:start position:0%
C API with dozens of data structures and
 

00:17:51.110 --> 00:17:52.629 align:start position:0%
C API with dozens of data structures and
dozens<00:17:51.440><c> of</c><00:17:51.529><c> function</c><00:17:51.919><c> entry</c><00:17:52.159><c> points</c><00:17:52.490><c> and</c>

00:17:52.629 --> 00:17:52.639 align:start position:0%
dozens of function entry points and
 

00:17:52.639 --> 00:17:54.669 align:start position:0%
dozens of function entry points and
pointers<00:17:53.059><c> and</c><00:17:53.299><c> care</c><00:17:53.899><c> stars</c><00:17:54.200><c> and</c><00:17:54.470><c> all</c><00:17:54.529><c> that</c>

00:17:54.669 --> 00:17:54.679 align:start position:0%
pointers and care stars and all that
 

00:17:54.679 --> 00:17:55.869 align:start position:0%
pointers and care stars and all that
stuff<00:17:54.889><c> floating</c><00:17:55.159><c> around</c><00:17:55.279><c> it</c><00:17:55.580><c> wasn't</c>

00:17:55.869 --> 00:17:55.879 align:start position:0%
stuff floating around it wasn't
 

00:17:55.879 --> 00:17:59.470 align:start position:0%
stuff floating around it wasn't
precondition<00:17:56.779><c> to</c><00:17:56.809><c> work</c><00:17:57.139><c> with</c><00:17:57.289><c> Java</c><00:17:57.559><c> and</c><00:17:58.480><c> by</c>

00:17:59.470 --> 00:17:59.480 align:start position:0%
precondition to work with Java and by
 

00:17:59.480 --> 00:18:01.119 align:start position:0%
precondition to work with Java and by
the<00:17:59.539><c> way</c><00:17:59.720><c> if</c><00:17:59.840><c> you</c><00:17:59.929><c> do</c><00:18:00.049><c> this</c><00:18:00.200><c> the</c><00:18:00.379><c> old</c><00:18:00.529><c> j'ni</c><00:18:00.950><c> way</c>

00:18:01.119 --> 00:18:01.129 align:start position:0%
the way if you do this the old j'ni way
 

00:18:01.129 --> 00:18:04.419 align:start position:0%
the way if you do this the old j'ni way
you<00:18:01.759><c> have</c><00:18:01.940><c> 10</c><00:18:02.240><c> kilobytes</c><00:18:02.720><c> of</c><00:18:03.049><c> of</c><00:18:03.740><c> stuff</c><00:18:04.159><c> and</c>

00:18:04.419 --> 00:18:04.429 align:start position:0%
you have 10 kilobytes of of stuff and
 

00:18:04.429 --> 00:18:06.070 align:start position:0%
you have 10 kilobytes of of stuff and
it's<00:18:04.789><c> not</c><00:18:04.970><c> stuff</c><00:18:05.269><c> that's</c><00:18:05.450><c> automatically</c>

00:18:06.070 --> 00:18:06.080 align:start position:0%
it's not stuff that's automatically
 

00:18:06.080 --> 00:18:08.649 align:start position:0%
it's not stuff that's automatically
generated<00:18:06.590><c> by</c><00:18:06.769><c> an</c><00:18:07.190><c> extractor</c><00:18:07.759><c> you</c><00:18:08.210><c> had</c><00:18:08.480><c> to</c>

00:18:08.649 --> 00:18:08.659 align:start position:0%
generated by an extractor you had to
 

00:18:08.659 --> 00:18:11.470 align:start position:0%
generated by an extractor you had to
write<00:18:08.870><c> every</c><00:18:09.259><c> byte</c><00:18:09.590><c> of</c><00:18:09.740><c> it</c><00:18:09.889><c> it</c><00:18:10.460><c> was</c><00:18:10.700><c> Java</c><00:18:11.120><c> code</c>

00:18:11.470 --> 00:18:11.480 align:start position:0%
write every byte of it it was Java code
 

00:18:11.480 --> 00:18:14.440 align:start position:0%
write every byte of it it was Java code
and<00:18:11.720><c> C</c><00:18:12.440><c> bindings</c><00:18:13.070><c> for</c><00:18:13.309><c> the</c><00:18:13.370><c> Java</c><00:18:13.610><c> code</c><00:18:13.850><c> in</c><00:18:14.149><c> the</c>

00:18:14.440 --> 00:18:14.450 align:start position:0%
and C bindings for the Java code in the
 

00:18:14.450 --> 00:18:18.759 align:start position:0%
and C bindings for the Java code in the
native<00:18:14.720><c> functions</c><00:18:15.110><c> and</c><00:18:15.350><c> that's</c><00:18:16.159><c> no</c><00:18:16.490><c> fun</c><00:18:17.769><c> you</c>

00:18:18.759 --> 00:18:18.769 align:start position:0%
native functions and that's no fun you
 

00:18:18.769 --> 00:18:21.249 align:start position:0%
native functions and that's no fun you
also<00:18:18.919><c> get</c><00:18:19.279><c> with</c><00:18:19.730><c> with</c><00:18:19.970><c> this</c><00:18:20.149><c> new</c><00:18:20.360><c> approach</c><00:18:20.480><c> you</c>

00:18:21.249 --> 00:18:21.259 align:start position:0%
also get with with this new approach you
 

00:18:21.259 --> 00:18:23.619 align:start position:0%
also get with with this new approach you
get<00:18:21.409><c> the</c><00:18:22.039><c> directly</c><00:18:22.370><c> optimizable</c><00:18:22.970><c> calls</c><00:18:23.299><c> which</c>

00:18:23.619 --> 00:18:23.629 align:start position:0%
get the directly optimizable calls which
 

00:18:23.629 --> 00:18:25.659 align:start position:0%
get the directly optimizable calls which
I<00:18:23.750><c> mentioned</c><00:18:24.080><c> earlier</c><00:18:24.230><c> you</c><00:18:25.159><c> get</c><00:18:25.370><c> direct</c>

00:18:25.659 --> 00:18:25.669 align:start position:0%
I mentioned earlier you get direct
 

00:18:25.669 --> 00:18:27.340 align:start position:0%
I mentioned earlier you get direct
optimizable<00:18:26.299><c> access</c><00:18:26.779><c> to</c><00:18:26.899><c> off</c><00:18:27.049><c> heap</c>

00:18:27.340 --> 00:18:27.350 align:start position:0%
optimizable access to off heap
 

00:18:27.350 --> 00:18:28.570 align:start position:0%
optimizable access to off heap
equivalent<00:18:27.980><c> to</c><00:18:28.039><c> what</c><00:18:28.159><c> you</c><00:18:28.220><c> would</c><00:18:28.370><c> get</c><00:18:28.460><c> from</c>

00:18:28.570 --> 00:18:28.580 align:start position:0%
equivalent to what you would get from
 

00:18:28.580 --> 00:18:30.759 align:start position:0%
equivalent to what you would get from
unsafe<00:18:29.059><c> but</c><00:18:29.360><c> it's</c><00:18:29.480><c> all</c><00:18:29.600><c> type</c><00:18:29.870><c> safe</c><00:18:30.169><c> and</c><00:18:30.559><c> and</c>

00:18:30.759 --> 00:18:30.769 align:start position:0%
unsafe but it's all type safe and and
 

00:18:30.769 --> 00:18:33.669 align:start position:0%
unsafe but it's all type safe and and
managed<00:18:31.220><c> for</c><00:18:31.340><c> you</c><00:18:31.639><c> you</c><00:18:32.360><c> also</c><00:18:32.600><c> get</c><00:18:32.929><c> storage</c>

00:18:33.669 --> 00:18:33.679 align:start position:0%
managed for you you also get storage
 

00:18:33.679 --> 00:18:35.950 align:start position:0%
managed for you you also get storage
management<00:18:34.480><c> abstractions</c><00:18:35.480><c> that</c><00:18:35.570><c> help</c><00:18:35.840><c> you</c>

00:18:35.950 --> 00:18:35.960 align:start position:0%
management abstractions that help you
 

00:18:35.960 --> 00:18:37.899 align:start position:0%
management abstractions that help you
avoid<00:18:36.230><c> dangling</c><00:18:36.889><c> pointers</c><00:18:37.309><c> that</c><00:18:37.580><c> is</c><00:18:37.879><c> a</c>

00:18:37.899 --> 00:18:37.909 align:start position:0%
avoid dangling pointers that is a
 

00:18:37.909 --> 00:18:40.570 align:start position:0%
avoid dangling pointers that is a
problem<00:18:38.330><c> with</c><00:18:38.480><c> C</c><00:18:38.720><c> and</c><00:18:39.070><c> then</c><00:18:40.070><c> finally</c><00:18:40.429><c> the</c>

00:18:40.570 --> 00:18:40.580 align:start position:0%
problem with C and then finally the
 

00:18:40.580 --> 00:18:42.090 align:start position:0%
problem with C and then finally the
direct<00:18:40.850><c> access</c><00:18:41.240><c> that</c><00:18:41.450><c> I</c><00:18:41.480><c> mentioned</c><00:18:41.899><c> earlier</c>

00:18:42.090 --> 00:18:42.100 align:start position:0%
direct access that I mentioned earlier
 

00:18:42.100 --> 00:18:46.539 align:start position:0%
direct access that I mentioned earlier
the<00:18:43.100><c> jumbo</c><00:18:43.909><c> data</c><00:18:44.149><c> types</c><00:18:44.509><c> like</c><00:18:44.840><c> 256</c><00:18:45.830><c> bit</c><00:18:46.100><c> vector</c>

00:18:46.539 --> 00:18:46.549 align:start position:0%
the jumbo data types like 256 bit vector
 

00:18:46.549 --> 00:18:49.480 align:start position:0%
the jumbo data types like 256 bit vector
in<00:18:46.850><c> like</c><00:18:47.120><c> things</c><00:18:47.419><c> those</c><00:18:48.379><c> will</c><00:18:48.649><c> those</c><00:18:49.009><c> are</c><00:18:49.250><c> one</c>

00:18:49.480 --> 00:18:49.490 align:start position:0%
in like things those will those are one
 

00:18:49.490 --> 00:18:50.860 align:start position:0%
in like things those will those are one
of<00:18:49.610><c> the</c><00:18:49.700><c> reasons</c><00:18:49.820><c> we're</c><00:18:50.179><c> doing</c><00:18:50.210><c> value</c><00:18:50.509><c> types</c>

00:18:50.860 --> 00:18:50.870 align:start position:0%
of the reasons we're doing value types
 

00:18:50.870 --> 00:18:53.080 align:start position:0%
of the reasons we're doing value types
in<00:18:51.080><c> Java</c><00:18:51.259><c> in</c><00:18:51.529><c> project</c><00:18:51.889><c> Valhalla</c><00:18:52.220><c> so</c><00:18:52.789><c> that</c><00:18:53.000><c> we</c>

00:18:53.080 --> 00:18:53.090 align:start position:0%
in Java in project Valhalla so that we
 

00:18:53.090 --> 00:18:55.299 align:start position:0%
in Java in project Valhalla so that we
can<00:18:53.269><c> interoperate</c><00:18:54.049><c> very</c><00:18:54.740><c> directly</c><00:18:55.220><c> with</c>

00:18:55.299 --> 00:18:55.309 align:start position:0%
can interoperate very directly with
 

00:18:55.309 --> 00:18:59.259 align:start position:0%
can interoperate very directly with
whatever<00:18:55.789><c> data</c><00:18:56.149><c> types</c><00:18:56.450><c> a</c><00:18:56.720><c> a</c><00:18:57.759><c> CPU</c><00:18:58.759><c> throws</c><00:18:59.059><c> at</c><00:18:59.240><c> us</c>

00:18:59.259 --> 00:18:59.269 align:start position:0%
whatever data types a a CPU throws at us
 

00:18:59.269 --> 00:19:01.749 align:start position:0%
whatever data types a a CPU throws at us
even<00:18:59.539><c> if</c><00:18:59.929><c> they're</c><00:19:00.080><c> greater</c><00:19:00.710><c> than</c><00:19:00.919><c> 64</c><00:19:01.370><c> bits</c><00:19:01.580><c> in</c>

00:19:01.749 --> 00:19:01.759 align:start position:0%
even if they're greater than 64 bits in
 

00:19:01.759 --> 00:19:07.450 align:start position:0%
even if they're greater than 64 bits in
size<00:19:01.940><c> and</c><00:19:02.480><c> that</c><00:19:02.629><c> cool</c><00:19:04.570><c> in</c><00:19:05.570><c> in</c><00:19:06.529><c> the</c><00:19:06.710><c> end</c><00:19:06.919><c> we</c><00:19:07.220><c> want</c>

00:19:07.450 --> 00:19:07.460 align:start position:0%
size and that cool in in the end we want
 

00:19:07.460 --> 00:19:10.690 align:start position:0%
size and that cool in in the end we want
to<00:19:07.730><c> provide</c><00:19:08.149><c> better</c><00:19:08.389><c> glue</c><00:19:08.950><c> better</c><00:19:09.950><c> use</c><00:19:10.340><c> of</c>

00:19:10.690 --> 00:19:10.700 align:start position:0%
to provide better glue better use of
 

00:19:10.700 --> 00:19:14.499 align:start position:0%
to provide better glue better use of
native<00:19:11.230><c> resources</c><00:19:12.610><c> anything</c><00:19:13.610><c> outside</c><00:19:14.059><c> of</c><00:19:14.360><c> the</c>

00:19:14.499 --> 00:19:14.509 align:start position:0%
native resources anything outside of the
 

00:19:14.509 --> 00:19:18.820 align:start position:0%
native resources anything outside of the
managed<00:19:15.139><c> runtime</c><00:19:15.289><c> of</c><00:19:15.559><c> Java</c><00:19:17.470><c> another</c><00:19:18.470><c> big</c><00:19:18.679><c> idea</c>

00:19:18.820 --> 00:19:18.830 align:start position:0%
managed runtime of Java another big idea
 

00:19:18.830 --> 00:19:20.740 align:start position:0%
managed runtime of Java another big idea
I<00:19:19.070><c> already</c><00:19:19.340><c> mentioned</c><00:19:19.759><c> but</c><00:19:19.970><c> I</c><00:19:20.179><c> won't</c><00:19:20.389><c> expand</c>

00:19:20.740 --> 00:19:20.750 align:start position:0%
I already mentioned but I won't expand
 

00:19:20.750 --> 00:19:21.999 align:start position:0%
I already mentioned but I won't expand
on<00:19:20.929><c> is</c><00:19:21.139><c> Java</c><00:19:21.409><c> on</c><00:19:21.620><c> Java</c>

00:19:21.999 --> 00:19:22.009 align:start position:0%
on is Java on Java
 

00:19:22.009 --> 00:19:24.999 align:start position:0%
on is Java on Java
let's<00:19:22.730><c> implement</c><00:19:23.389><c> the</c><00:19:23.690><c> Java</c><00:19:23.960><c> stack</c><00:19:24.409><c> on</c><00:19:24.679><c> top</c><00:19:24.710><c> of</c>

00:19:24.999 --> 00:19:25.009 align:start position:0%
let's implement the Java stack on top of
 

00:19:25.009 --> 00:19:27.970 align:start position:0%
let's implement the Java stack on top of
Java<00:19:25.659><c> let's</c><00:19:26.659><c> reduce</c><00:19:27.019><c> our</c><00:19:27.379><c> dependency</c><00:19:27.950><c> on</c>

00:19:27.970 --> 00:19:27.980 align:start position:0%
Java let's reduce our dependency on
 

00:19:27.980 --> 00:19:30.190 align:start position:0%
Java let's reduce our dependency on
assembly<00:19:28.519><c> code</c><00:19:28.730><c> and</c><00:19:29.029><c> C</c><00:19:29.240><c> and</c><00:19:29.480><c> C++</c>

00:19:30.190 --> 00:19:30.200 align:start position:0%
assembly code and C and C++
 

00:19:30.200 --> 00:19:32.409 align:start position:0%
assembly code and C and C++
especially<00:19:31.009><c> since</c><00:19:31.159><c> C++</c><00:19:31.730><c> is</c><00:19:31.909><c> moving</c><00:19:32.210><c> in</c><00:19:32.299><c> its</c>

00:19:32.409 --> 00:19:32.419 align:start position:0%
especially since C++ is moving in its
 

00:19:32.419 --> 00:19:33.909 align:start position:0%
especially since C++ is moving in its
own<00:19:32.539><c> direction</c><00:19:32.779><c> with</c><00:19:33.200><c> its</c><00:19:33.320><c> own</c><00:19:33.470><c> kind</c><00:19:33.799><c> of</c>

00:19:33.909 --> 00:19:33.919 align:start position:0%
own direction with its own kind of
 

00:19:33.919 --> 00:19:36.999 align:start position:0%
own direction with its own kind of
managed<00:19:34.250><c> runtime</c><00:19:35.110><c> good</c><00:19:36.110><c> luck</c><00:19:36.259><c> to</c><00:19:36.409><c> them</c><00:19:36.500><c> but</c><00:19:36.830><c> we</c>

00:19:36.999 --> 00:19:37.009 align:start position:0%
managed runtime good luck to them but we
 

00:19:37.009 --> 00:19:42.310 align:start position:0%
managed runtime good luck to them but we
want<00:19:37.190><c> to</c><00:19:37.279><c> use</c><00:19:37.370><c> our</c><00:19:37.490><c> runtime</c><00:19:40.779><c> this</c><00:19:41.779><c> is</c><00:19:41.929><c> a</c><00:19:41.960><c> kind</c>

00:19:42.310 --> 00:19:42.320 align:start position:0%
want to use our runtime this is a kind
 

00:19:42.320 --> 00:19:45.580 align:start position:0%
want to use our runtime this is a kind
of<00:19:42.409><c> a</c><00:19:42.610><c> another</c><00:19:43.610><c> unification</c><00:19:44.389><c> move</c><00:19:44.629><c> and</c><00:19:44.960><c> in</c>

00:19:45.580 --> 00:19:45.590 align:start position:0%
of a another unification move and in
 

00:19:45.590 --> 00:19:47.320 align:start position:0%
of a another unification move and in
particular<00:19:46.100><c> we</c><00:19:46.250><c> want</c><00:19:46.370><c> to</c><00:19:46.460><c> reduce</c><00:19:46.610><c> the</c><00:19:46.909><c> cost</c><00:19:47.119><c> of</c>

00:19:47.320 --> 00:19:47.330 align:start position:0%
particular we want to reduce the cost of
 

00:19:47.330 --> 00:19:49.509 align:start position:0%
particular we want to reduce the cost of
ownership<00:19:47.539><c> for</c><00:19:47.809><c> crucial</c><00:19:48.590><c> Java</c><00:19:48.860><c> technologies</c>

00:19:49.509 --> 00:19:49.519 align:start position:0%
ownership for crucial Java technologies
 

00:19:49.519 --> 00:19:51.230 align:start position:0%
ownership for crucial Java technologies
starting<00:19:49.789><c> with</c><00:19:50.149><c> the</c><00:19:50.269><c> VM</c><00:19:50.509><c> but</c><00:19:50.809><c> also</c>

00:19:51.230 --> 00:19:51.240 align:start position:0%
starting with the VM but also
 

00:19:51.240 --> 00:19:54.590 align:start position:0%
starting with the VM but also
other<00:19:51.539><c> things</c><00:19:51.809><c> I</c><00:19:52.700><c> depends</c><00:19:53.700><c> partly</c><00:19:53.880><c> on</c><00:19:54.090><c> Panama</c>

00:19:54.590 --> 00:19:54.600 align:start position:0%
other things I depends partly on Panama
 

00:19:54.600 --> 00:19:56.450 align:start position:0%
other things I depends partly on Panama
itself<00:19:55.169><c> because</c><00:19:55.529><c> parts</c><00:19:55.830><c> of</c><00:19:55.950><c> the</c><00:19:56.070><c> VM</c><00:19:56.279><c> will</c>

00:19:56.450 --> 00:19:56.460 align:start position:0%
itself because parts of the VM will
 

00:19:56.460 --> 00:19:58.850 align:start position:0%
itself because parts of the VM will
always<00:19:56.730><c> be</c><00:19:56.880><c> in</c><00:19:57.029><c> see</c><00:19:57.299><c> or</c><00:19:57.600><c> Hardware</c><00:19:58.260><c> sensitive</c>

00:19:58.850 --> 00:19:58.860 align:start position:0%
always be in see or Hardware sensitive
 

00:19:58.860 --> 00:20:00.740 align:start position:0%
always be in see or Hardware sensitive
and<00:19:59.039><c> so</c><00:19:59.159><c> will</c><00:19:59.460><c> always</c><00:19:59.789><c> need</c><00:19:59.970><c> some</c><00:20:00.210><c> way</c><00:20:00.360><c> to</c><00:20:00.419><c> get</c>

00:20:00.740 --> 00:20:00.750 align:start position:0%
and so will always need some way to get
 

00:20:00.750 --> 00:20:02.210 align:start position:0%
and so will always need some way to get
from<00:20:01.020><c> whatever</c><00:20:01.230><c> the</c><00:20:01.500><c> rest</c><00:20:01.679><c> of</c><00:20:01.799><c> the</c><00:20:01.860><c> VM</c><00:20:02.100><c> is</c>

00:20:02.210 --> 00:20:02.220 align:start position:0%
from whatever the rest of the VM is
 

00:20:02.220 --> 00:20:05.570 align:start position:0%
from whatever the rest of the VM is
coded<00:20:02.549><c> in</c><00:20:02.700><c> Java</c><00:20:03.419><c> to</c><00:20:04.260><c> the</c><00:20:04.649><c> native</c><00:20:05.010><c> parts</c><00:20:05.340><c> the</c>

00:20:05.570 --> 00:20:05.580 align:start position:0%
coded in Java to the native parts the
 

00:20:05.580 --> 00:20:08.450 align:start position:0%
coded in Java to the native parts the
hardware<00:20:05.940><c> parts</c><00:20:06.830><c> but</c><00:20:07.830><c> we</c><00:20:07.860><c> want</c><00:20:08.100><c> to</c><00:20:08.190><c> be</c><00:20:08.250><c> able</c><00:20:08.399><c> to</c>

00:20:08.450 --> 00:20:08.460 align:start position:0%
hardware parts but we want to be able to
 

00:20:08.460 --> 00:20:10.279 align:start position:0%
hardware parts but we want to be able to
integrate<00:20:08.730><c> more</c><00:20:09.179><c> and</c><00:20:09.330><c> more</c><00:20:09.480><c> pieces</c><00:20:09.690><c> of</c><00:20:09.899><c> Java</c>

00:20:10.279 --> 00:20:10.289 align:start position:0%
integrate more and more pieces of Java
 

00:20:10.289 --> 00:20:13.070 align:start position:0%
integrate more and more pieces of Java
such<00:20:10.590><c> as</c><00:20:10.770><c> Grall</c><00:20:11.010><c> into</c><00:20:11.340><c> hotspot</c><00:20:11.789><c> this</c><00:20:12.720><c> depends</c>

00:20:13.070 --> 00:20:13.080 align:start position:0%
such as Grall into hotspot this depends
 

00:20:13.080 --> 00:20:15.590 align:start position:0%
such as Grall into hotspot this depends
also<00:20:13.230><c> partly</c><00:20:13.679><c> on</c><00:20:13.860><c> hardware</c><00:20:14.700><c> level</c><00:20:14.940><c> data</c>

00:20:15.590 --> 00:20:15.600 align:start position:0%
also partly on hardware level data
 

00:20:15.600 --> 00:20:19.010 align:start position:0%
also partly on hardware level data
structures<00:20:16.279><c> which</c><00:20:17.279><c> means</c><00:20:17.520><c> Valhalla</c><00:20:18.480><c> with</c><00:20:18.899><c> the</c>

00:20:19.010 --> 00:20:19.020 align:start position:0%
structures which means Valhalla with the
 

00:20:19.020 --> 00:20:25.430 align:start position:0%
structures which means Valhalla with the
flat<00:20:19.289><c> data</c><00:20:19.559><c> and</c><00:20:19.890><c> the</c><00:20:20.250><c> small</c><00:20:20.970><c> value</c><00:20:21.270><c> types</c><00:20:24.440><c> this</c>

00:20:25.430 --> 00:20:25.440 align:start position:0%
flat data and the small value types this
 

00:20:25.440 --> 00:20:27.350 align:start position:0%
flat data and the small value types this
will<00:20:25.620><c> reduce</c><00:20:25.770><c> all</c><00:20:26.070><c> of</c><00:20:26.250><c> our</c><00:20:26.340><c> costs</c><00:20:26.549><c> to</c><00:20:26.940><c> code</c><00:20:27.179><c> in</c>

00:20:27.350 --> 00:20:27.360 align:start position:0%
will reduce all of our costs to code in
 

00:20:27.360 --> 00:20:30.279 align:start position:0%
will reduce all of our costs to code in
our<00:20:27.450><c> own</c><00:20:27.600><c> language</c><00:20:28.020><c> instead</c><00:20:28.320><c> of</c><00:20:28.409><c> in</c><00:20:28.529><c> C++</c>

00:20:30.279 --> 00:20:30.289 align:start position:0%
our own language instead of in C++
 

00:20:30.289 --> 00:20:33.860 align:start position:0%
our own language instead of in C++
currently<00:20:31.289><c> the</c><00:20:31.860><c> whole</c><00:20:32.010><c> JDK</c><00:20:32.520><c> well</c><00:20:33.270><c> that's</c><00:20:33.750><c> an</c>

00:20:33.860 --> 00:20:33.870 align:start position:0%
currently the whole JDK well that's an
 

00:20:33.870 --> 00:20:36.799 align:start position:0%
currently the whole JDK well that's an
exaggeration<00:20:34.470><c> but</c><00:20:34.760><c> 99%</c><00:20:35.760><c> of</c><00:20:35.789><c> the</c><00:20:35.880><c> jdk</c><00:20:36.270><c> is</c><00:20:36.419><c> coded</c>

00:20:36.799 --> 00:20:36.809 align:start position:0%
exaggeration but 99% of the jdk is coded
 

00:20:36.809 --> 00:20:38.060 align:start position:0%
exaggeration but 99% of the jdk is coded
in<00:20:36.899><c> Java</c><00:20:37.140><c> so</c><00:20:37.350><c> that's</c><00:20:37.500><c> good</c><00:20:37.710><c> it's</c><00:20:37.830><c> been</c><00:20:37.950><c> true</c>

00:20:38.060 --> 00:20:38.070 align:start position:0%
in Java so that's good it's been true
 

00:20:38.070 --> 00:20:40.399 align:start position:0%
in Java so that's good it's been true
for<00:20:38.220><c> 20</c><00:20:38.460><c> years</c><00:20:38.669><c> the</c><00:20:39.450><c> method</c><00:20:39.690><c> hadn't</c><00:20:39.929><c> run</c><00:20:40.140><c> time</c>

00:20:40.399 --> 00:20:40.409 align:start position:0%
for 20 years the method hadn't run time
 

00:20:40.409 --> 00:20:42.680 align:start position:0%
for 20 years the method hadn't run time
was<00:20:41.250><c> initially</c><00:20:41.549><c> coated</c><00:20:42.000><c> in</c><00:20:42.090><c> an</c><00:20:42.149><c> assembly</c><00:20:42.360><c> code</c>

00:20:42.680 --> 00:20:42.690 align:start position:0%
was initially coated in an assembly code
 

00:20:42.690 --> 00:20:44.840 align:start position:0%
was initially coated in an assembly code
boy<00:20:43.080><c> that</c><00:20:43.320><c> was</c><00:20:43.470><c> a</c><00:20:43.500><c> mistake</c><00:20:44.100><c> that</c><00:20:44.370><c> was</c><00:20:44.640><c> my</c>

00:20:44.840 --> 00:20:44.850 align:start position:0%
boy that was a mistake that was my
 

00:20:44.850 --> 00:20:45.320 align:start position:0%
boy that was a mistake that was my
mistake

00:20:45.320 --> 00:20:45.330 align:start position:0%
mistake
 

00:20:45.330 --> 00:20:47.840 align:start position:0%
mistake
I<00:20:45.570><c> had</c><00:20:46.289><c> to</c><00:20:46.380><c> undo</c><00:20:46.679><c> it</c><00:20:46.799><c> and</c><00:20:46.919><c> code</c><00:20:47.340><c> it</c><00:20:47.460><c> in</c><00:20:47.549><c> Java</c>

00:20:47.840 --> 00:20:47.850 align:start position:0%
I had to undo it and code it in Java
 

00:20:47.850 --> 00:20:49.720 align:start position:0%
I had to undo it and code it in Java
instead<00:20:48.360><c> and</c><00:20:48.600><c> it's</c><00:20:48.750><c> much</c><00:20:48.899><c> more</c><00:20:49.169><c> manageable</c>

00:20:49.720 --> 00:20:49.730 align:start position:0%
instead and it's much more manageable
 

00:20:49.730 --> 00:20:51.740 align:start position:0%
instead and it's much more manageable
some<00:20:50.730><c> of</c><00:20:50.850><c> us</c><00:20:50.940><c> lived</c><00:20:51.179><c> through</c><00:20:51.419><c> the</c><00:20:51.570><c> teething</c>

00:20:51.740 --> 00:20:51.750 align:start position:0%
some of us lived through the teething
 

00:20:51.750 --> 00:20:55.580 align:start position:0%
some of us lived through the teething
pain<00:20:52.110><c> of</c><00:20:52.289><c> that</c><00:20:52.440><c> the</c><00:20:53.190><c> the</c><00:20:53.669><c> äôt</c><00:20:54.090><c> compiler</c><00:20:54.779><c> is</c>

00:20:55.580 --> 00:20:55.590 align:start position:0%
pain of that the the äôt compiler is
 

00:20:55.590 --> 00:20:58.310 align:start position:0%
pain of that the the äôt compiler is
actually<00:20:56.190><c> an</c><00:20:56.279><c> application</c><00:20:56.429><c> of</c><00:20:56.970><c> Gras</c><00:20:57.240><c> which</c><00:20:58.140><c> is</c>

00:20:58.310 --> 00:20:58.320 align:start position:0%
actually an application of Gras which is
 

00:20:58.320 --> 00:21:01.669 align:start position:0%
actually an application of Gras which is
to<00:20:58.980><c> generate</c><00:20:59.340><c> code</c><00:20:59.549><c> statically</c><00:21:00.240><c> for</c><00:21:00.510><c> Java</c><00:21:00.720><c> how</c>

00:21:01.669 --> 00:21:01.679 align:start position:0%
to generate code statically for Java how
 

00:21:01.679 --> 00:21:02.990 align:start position:0%
to generate code statically for Java how
many<00:21:01.860><c> of</c><00:21:01.919><c> you</c><00:21:02.039><c> know</c><00:21:02.159><c> there's</c><00:21:02.399><c> a</c><00:21:02.460><c> head</c><00:21:02.880><c> of</c><00:21:02.970><c> time</c>

00:21:02.990 --> 00:21:03.000 align:start position:0%
many of you know there's a head of time
 

00:21:03.000 --> 00:21:06.200 align:start position:0%
many of you know there's a head of time
compiler<00:21:03.630><c> in</c><00:21:03.779><c> Java</c><00:21:03.990><c> 9</c><00:21:04.230><c> oh</c><00:21:04.529><c> good</c><00:21:05.460><c> yeah</c><00:21:05.610><c> ok</c><00:21:06.000><c> it's</c>

00:21:06.200 --> 00:21:06.210 align:start position:0%
compiler in Java 9 oh good yeah ok it's
 

00:21:06.210 --> 00:21:10.250 align:start position:0%
compiler in Java 9 oh good yeah ok it's
it's<00:21:06.390><c> so</c><00:21:06.690><c> it's</c><00:21:06.840><c> well</c><00:21:07.020><c> well</c><00:21:07.500><c> publicized</c><00:21:09.260><c> there</c>

00:21:10.250 --> 00:21:10.260 align:start position:0%
it's so it's well well publicized there
 

00:21:10.260 --> 00:21:11.659 align:start position:0%
it's so it's well well publicized there
are<00:21:10.350><c> other</c><00:21:10.440><c> experiments</c><00:21:11.070><c> we're</c><00:21:11.220><c> doing</c><00:21:11.490><c> we're</c>

00:21:11.659 --> 00:21:11.669 align:start position:0%
are other experiments we're doing we're
 

00:21:11.669 --> 00:21:15.350 align:start position:0%
are other experiments we're doing we're
using<00:21:12.120><c> golf</c><00:21:13.159><c> the</c><00:21:14.159><c> labs</c><00:21:14.399><c> are</c><00:21:14.669><c> using</c><00:21:14.970><c> growl</c><00:21:15.149><c> for</c>

00:21:15.350 --> 00:21:15.360 align:start position:0%
using golf the labs are using growl for
 

00:21:15.360 --> 00:21:16.580 align:start position:0%
using golf the labs are using growl for
a<00:21:15.419><c> JIT</c><00:21:15.600><c> they've</c><00:21:15.779><c> been</c><00:21:15.870><c> doing</c><00:21:16.020><c> that</c><00:21:16.200><c> for</c><00:21:16.440><c> years</c>

00:21:16.580 --> 00:21:16.590 align:start position:0%
a JIT they've been doing that for years
 

00:21:16.590 --> 00:21:19.250 align:start position:0%
a JIT they've been doing that for years
and<00:21:16.860><c> it's</c><00:21:17.010><c> looking</c><00:21:17.610><c> very</c><00:21:17.640><c> good</c><00:21:17.899><c> it's</c><00:21:18.899><c> not</c><00:21:19.080><c> yet</c>

00:21:19.250 --> 00:21:19.260 align:start position:0%
and it's looking very good it's not yet
 

00:21:19.260 --> 00:21:21.409 align:start position:0%
and it's looking very good it's not yet
ready<00:21:19.470><c> to</c><00:21:19.559><c> replace</c><00:21:20.010><c> the</c><00:21:20.340><c> server</c><00:21:20.730><c> compiler</c><00:21:21.179><c> but</c>

00:21:21.409 --> 00:21:21.419 align:start position:0%
ready to replace the server compiler but
 

00:21:21.419 --> 00:21:23.990 align:start position:0%
ready to replace the server compiler but
it<00:21:21.539><c> will</c><00:21:21.630><c> get</c><00:21:21.809><c> there</c><00:21:22.159><c> other</c><00:21:23.159><c> experiments</c><00:21:23.909><c> like</c>

00:21:23.990 --> 00:21:24.000 align:start position:0%
it will get there other experiments like
 

00:21:24.000 --> 00:21:30.440 align:start position:0%
it will get there other experiments like
the<00:21:24.149><c> substrate</c><00:21:24.539><c> VM</c><00:21:27.919><c> Java</c><00:21:28.919><c> and</c><00:21:29.190><c> Java</c><00:21:29.490><c> needs</c><00:21:30.330><c> a</c>

00:21:30.440 --> 00:21:30.450 align:start position:0%
the substrate VM Java and Java needs a
 

00:21:30.450 --> 00:21:32.539 align:start position:0%
the substrate VM Java and Java needs a
project<00:21:30.929><c> it</c><00:21:31.169><c> needs</c><00:21:31.350><c> a</c><00:21:31.440><c> unifying</c><00:21:31.890><c> project</c><00:21:32.399><c> in</c>

00:21:32.539 --> 00:21:32.549 align:start position:0%
project it needs a unifying project in
 

00:21:32.549 --> 00:21:34.850 align:start position:0%
project it needs a unifying project in
the<00:21:32.669><c> open</c><00:21:32.940><c> JDK</c><00:21:33.090><c> ecosystem</c><00:21:34.049><c> and</c><00:21:34.320><c> this</c><00:21:34.649><c> is</c><00:21:34.830><c> a</c>

00:21:34.850 --> 00:21:34.860 align:start position:0%
the open JDK ecosystem and this is a
 

00:21:34.860 --> 00:21:36.919 align:start position:0%
the open JDK ecosystem and this is a
this<00:21:35.370><c> is</c><00:21:35.490><c> a</c><00:21:35.520><c> working</c><00:21:35.940><c> title</c><00:21:36.149><c> for</c><00:21:36.510><c> you</c><00:21:36.600><c> project</c>

00:21:36.919 --> 00:21:36.929 align:start position:0%
this is a working title for you project
 

00:21:36.929 --> 00:21:39.649 align:start position:0%
this is a working title for you project
metropolis<00:21:37.679><c> there's</c><00:21:37.950><c> no</c><00:21:38.159><c> formal</c><00:21:38.700><c> call</c><00:21:39.330><c> for</c>

00:21:39.649 --> 00:21:39.659 align:start position:0%
metropolis there's no formal call for
 

00:21:39.659 --> 00:21:42.380 align:start position:0%
metropolis there's no formal call for
project<00:21:40.049><c> yet</c><00:21:40.640><c> we're</c><00:21:41.640><c> not</c><00:21:41.789><c> ready</c><00:21:42.000><c> to</c><00:21:42.090><c> put</c><00:21:42.270><c> the</c>

00:21:42.380 --> 00:21:42.390 align:start position:0%
project yet we're not ready to put the
 

00:21:42.390 --> 00:21:45.320 align:start position:0%
project yet we're not ready to put the
pieces<00:21:42.570><c> together</c><00:21:42.870><c> but</c><00:21:43.350><c> I</c><00:21:43.950><c> envision</c><00:21:44.850><c> a</c><00:21:44.940><c> city</c><00:21:45.149><c> of</c>

00:21:45.320 --> 00:21:45.330 align:start position:0%
pieces together but I envision a city of
 

00:21:45.330 --> 00:21:47.419 align:start position:0%
pieces together but I envision a city of
tomorrow<00:21:45.600><c> called</c><00:21:45.990><c> metropolis</c><00:21:46.260><c> you</c><00:21:46.770><c> you</c><00:21:47.039><c> may</c>

00:21:47.419 --> 00:21:47.429 align:start position:0%
tomorrow called metropolis you you may
 

00:21:47.429 --> 00:21:50.600 align:start position:0%
tomorrow called metropolis you you may
know<00:21:47.610><c> the</c><00:21:47.850><c> Fritz</c><00:21:48.090><c> Lang</c><00:21:48.360><c> movie</c><00:21:49.220><c> the</c><00:21:50.220><c> Fritz</c><00:21:50.429><c> Lang</c>

00:21:50.600 --> 00:21:50.610 align:start position:0%
know the Fritz Lang movie the Fritz Lang
 

00:21:50.610 --> 00:21:52.340 align:start position:0%
know the Fritz Lang movie the Fritz Lang
movie<00:21:50.940><c> by</c><00:21:51.090><c> the</c><00:21:51.120><c> way</c><00:21:51.270><c> that</c><00:21:51.570><c> the</c><00:21:51.960><c> theme</c><00:21:52.169><c> of</c><00:21:52.320><c> that</c>

00:21:52.340 --> 00:21:52.350 align:start position:0%
movie by the way that the theme of that
 

00:21:52.350 --> 00:21:53.990 align:start position:0%
movie by the way that the theme of that
was<00:21:52.649><c> also</c><00:21:52.950><c> healing</c><00:21:53.190><c> a</c><00:21:53.370><c> sort</c><00:21:53.640><c> of</c><00:21:53.669><c> a</c><00:21:53.760><c> rift</c>

00:21:53.990 --> 00:21:54.000 align:start position:0%
was also healing a sort of a rift
 

00:21:54.000 --> 00:21:55.250 align:start position:0%
was also healing a sort of a rift
between<00:21:54.240><c> the</c><00:21:54.480><c> heart</c><00:21:54.659><c> and</c><00:21:54.779><c> the</c><00:21:54.870><c> head</c><00:21:55.049><c> or</c>

00:21:55.250 --> 00:21:55.260 align:start position:0%
between the heart and the head or
 

00:21:55.260 --> 00:21:56.149 align:start position:0%
between the heart and the head or
something<00:21:55.289><c> like</c><00:21:55.649><c> that</c><00:21:55.710><c> something</c>

00:21:56.149 --> 00:21:56.159 align:start position:0%
something like that something
 

00:21:56.159 --> 00:21:59.210 align:start position:0%
something like that something
sentimental<00:21:56.850><c> but</c><00:21:57.919><c> given</c><00:21:58.919><c> that</c><00:21:58.950><c> we're</c><00:21:59.130><c> doing</c>

00:21:59.210 --> 00:21:59.220 align:start position:0%
sentimental but given that we're doing
 

00:21:59.220 --> 00:22:02.500 align:start position:0%
sentimental but given that we're doing
heal<00:21:59.520><c> the</c><00:21:59.700><c> rift</c><00:21:59.880><c> moves</c><00:22:00.389><c> in</c><00:22:00.750><c> Java</c><00:22:01.370><c> unification</c>

00:22:02.500 --> 00:22:02.510 align:start position:0%
heal the rift moves in Java unification
 

00:22:02.510 --> 00:22:05.010 align:start position:0%
heal the rift moves in Java unification
metropolis<00:22:03.510><c> the</c><00:22:03.840><c> city</c><00:22:04.020><c> of</c><00:22:04.139><c> the</c><00:22:04.230><c> future</c><00:22:04.260><c> is</c>

00:22:05.010 --> 00:22:05.020 align:start position:0%
metropolis the city of the future is
 

00:22:05.020 --> 00:22:07.140 align:start position:0%
metropolis the city of the future is
a<00:22:05.050><c> bad</c><00:22:05.320><c> reference</c><00:22:05.770><c> the</c><00:22:06.310><c> idea</c><00:22:06.550><c> here</c><00:22:06.850><c> is</c><00:22:06.880><c> to</c><00:22:07.090><c> have</c>

00:22:07.140 --> 00:22:07.150 align:start position:0%
a bad reference the idea here is to have
 

00:22:07.150 --> 00:22:09.780 align:start position:0%
a bad reference the idea here is to have
an<00:22:07.270><c> experimental</c><00:22:07.810><c> clone</c><00:22:08.050><c> of</c><00:22:08.230><c> JDK</c><00:22:08.530><c> 10</c><00:22:08.980><c> that</c>

00:22:09.780 --> 00:22:09.790 align:start position:0%
an experimental clone of JDK 10 that
 

00:22:09.790 --> 00:22:12.480 align:start position:0%
an experimental clone of JDK 10 that
hosts<00:22:10.210><c> extensions</c><00:22:11.200><c> work</c><00:22:11.590><c> on</c><00:22:11.830><c> the</c><00:22:12.040><c> äôt</c>

00:22:12.480 --> 00:22:12.490 align:start position:0%
hosts extensions work on the äôt
 

00:22:12.490 --> 00:22:15.120 align:start position:0%
hosts extensions work on the äôt
compiler<00:22:13.060><c> and</c><00:22:13.180><c> Grall</c><00:22:13.480><c> in</c><00:22:14.020><c> particular</c><00:22:14.560><c> since</c>

00:22:15.120 --> 00:22:15.130 align:start position:0%
compiler and Grall in particular since
 

00:22:15.130 --> 00:22:17.130 align:start position:0%
compiler and Grall in particular since
äôt<00:22:15.580><c> is</c><00:22:15.700><c> built</c><00:22:15.910><c> on</c><00:22:16.030><c> top</c><00:22:16.240><c> of</c><00:22:16.300><c> gras</c><00:22:16.600><c> we</c><00:22:16.900><c> have</c><00:22:17.110><c> a</c>

00:22:17.130 --> 00:22:17.140 align:start position:0%
äôt is built on top of gras we have a
 

00:22:17.140 --> 00:22:19.290 align:start position:0%
äôt is built on top of gras we have a
synergy<00:22:17.860><c> there</c><00:22:18.010><c> but</c><00:22:18.220><c> we</c><00:22:18.310><c> also</c><00:22:18.460><c> want</c><00:22:18.790><c> to</c><00:22:18.880><c> a</c><00:22:18.910><c> ot</c>

00:22:19.290 --> 00:22:19.300 align:start position:0%
synergy there but we also want to a ot
 

00:22:19.300 --> 00:22:22.650 align:start position:0%
synergy there but we also want to a ot
grow<00:22:19.570><c> itself</c><00:22:20.200><c> in</c><00:22:20.740><c> a</c><00:22:21.490><c> restricted</c><00:22:21.970><c> mode</c><00:22:22.390><c> which</c>

00:22:22.650 --> 00:22:22.660 align:start position:0%
grow itself in a restricted mode which
 

00:22:22.660 --> 00:22:25.530 align:start position:0%
grow itself in a restricted mode which
which<00:22:23.110><c> will</c><00:22:23.260><c> make</c><00:22:23.410><c> it</c><00:22:23.440><c> a</c><00:22:24.150><c> replacement</c><00:22:25.150><c> for</c><00:22:25.420><c> the</c>

00:22:25.530 --> 00:22:25.540 align:start position:0%
which will make it a replacement for the
 

00:22:25.540 --> 00:22:29.220 align:start position:0%
which will make it a replacement for the
C++<00:22:26.110><c> code</c><00:22:26.140><c> of</c><00:22:26.650><c> the</c><00:22:26.860><c> of</c><00:22:27.430><c> the</c><00:22:27.760><c> current</c><00:22:28.230><c> server</c>

00:22:29.220 --> 00:22:29.230 align:start position:0%
C++ code of the of the current server
 

00:22:29.230 --> 00:22:32.370 align:start position:0%
C++ code of the of the current server
compiler<00:22:30.120><c> in</c><00:22:31.120><c> order</c><00:22:31.360><c> to</c><00:22:31.510><c> do</c><00:22:31.630><c> that</c><00:22:31.810><c> we</c><00:22:32.050><c> need</c><00:22:32.230><c> to</c>

00:22:32.370 --> 00:22:32.380 align:start position:0%
compiler in order to do that we need to
 

00:22:32.380 --> 00:22:33.900 align:start position:0%
compiler in order to do that we need to
probably<00:22:32.620><c> define</c><00:22:33.160><c> something</c><00:22:33.400><c> like</c><00:22:33.520><c> a</c><00:22:33.670><c> system</c>

00:22:33.900 --> 00:22:33.910 align:start position:0%
probably define something like a system
 

00:22:33.910 --> 00:22:35.970 align:start position:0%
probably define something like a system
Java<00:22:34.360><c> which</c><00:22:34.690><c> is</c><00:22:34.870><c> amenable</c><00:22:35.260><c> to</c><00:22:35.470><c> static</c>

00:22:35.970 --> 00:22:35.980 align:start position:0%
Java which is amenable to static
 

00:22:35.980 --> 00:22:40.050 align:start position:0%
Java which is amenable to static
compilation<00:22:36.700><c> and</c><00:22:36.880><c> reduction</c><00:22:38.730><c> so</c><00:22:39.730><c> we'll</c><00:22:39.940><c> be</c>

00:22:40.050 --> 00:22:40.060 align:start position:0%
compilation and reduction so we'll be
 

00:22:40.060 --> 00:22:41.580 align:start position:0%
compilation and reduction so we'll be
able<00:22:40.240><c> to</c><00:22:40.360><c> we'll</c><00:22:40.690><c> have</c><00:22:40.720><c> to</c><00:22:40.930><c> do</c><00:22:41.020><c> experiments</c>

00:22:41.580 --> 00:22:41.590 align:start position:0%
able to we'll have to do experiments
 

00:22:41.590 --> 00:22:43.770 align:start position:0%
able to we'll have to do experiments
with<00:22:41.740><c> substrate</c><00:22:42.400><c> VM</c><00:22:42.730><c> style</c><00:22:43.090><c> deployment</c>

00:22:43.770 --> 00:22:43.780 align:start position:0%
with substrate VM style deployment
 

00:22:43.780 --> 00:22:47.520 align:start position:0%
with substrate VM style deployment
substrate<00:22:44.530><c> vm</c><00:22:44.770><c> is</c><00:22:45.040><c> a</c><00:22:45.270><c> is</c><00:22:46.270><c> a</c><00:22:46.360><c> another</c><00:22:47.230><c> labs</c>

00:22:47.520 --> 00:22:47.530 align:start position:0%
substrate vm is a is a another labs
 

00:22:47.530 --> 00:22:50.580 align:start position:0%
substrate vm is a is a another labs
project<00:22:48.390><c> that</c><00:22:49.390><c> you</c><00:22:49.570><c> can</c><00:22:49.750><c> see</c><00:22:50.020><c> christian</c>

00:22:50.580 --> 00:22:50.590 align:start position:0%
project that you can see christian
 

00:22:50.590 --> 00:22:52.830 align:start position:0%
project that you can see christian
Bimmer<00:22:50.830><c> work</c><00:22:51.100><c> works</c><00:22:51.550><c> on</c><00:22:51.760><c> it</c><00:22:51.910><c> and</c><00:22:52.420><c> you</c><00:22:52.540><c> can</c><00:22:52.660><c> see</c>

00:22:52.830 --> 00:22:52.840 align:start position:0%
Bimmer work works on it and you can see
 

00:22:52.840 --> 00:22:55.350 align:start position:0%
Bimmer work works on it and you can see
a<00:22:52.870><c> JVM</c><00:22:53.260><c> language</c><00:22:53.650><c> Summit</c><00:22:54.010><c> talk</c><00:22:54.300><c> from</c><00:22:55.300><c> last</c>

00:22:55.350 --> 00:22:55.360 align:start position:0%
a JVM language Summit talk from last
 

00:22:55.360 --> 00:22:58.740 align:start position:0%
a JVM language Summit talk from last
summer<00:22:55.840><c> on</c><00:22:56.080><c> that</c><00:22:56.320><c> it's</c><00:22:57.160><c> called</c><00:22:57.400><c> one</c><00:22:58.000><c> via</c><00:22:58.180><c> one</c>

00:22:58.740 --> 00:22:58.750 align:start position:0%
summer on that it's called one via one
 

00:22:58.750 --> 00:23:00.690 align:start position:0%
summer on that it's called one via one
VM<00:22:59.020><c> to</c><00:22:59.260><c> one</c><00:22:59.650><c> compiler</c><00:23:00.070><c> to</c><00:23:00.280><c> rule</c><00:23:00.430><c> them</c><00:23:00.610><c> all</c>

00:23:00.690 --> 00:23:00.700 align:start position:0%
VM to one compiler to rule them all
 

00:23:00.700 --> 00:23:02.100 align:start position:0%
VM to one compiler to rule them all
something<00:23:01.030><c> like</c><00:23:01.180><c> that</c><00:23:01.360><c> it's</c><00:23:01.810><c> one</c><00:23:01.930><c> of</c><00:23:02.020><c> those</c>

00:23:02.100 --> 00:23:02.110 align:start position:0%
something like that it's one of those
 

00:23:02.110 --> 00:23:06.810 align:start position:0%
something like that it's one of those
sorts<00:23:02.410><c> of</c><00:23:02.470><c> titles</c><00:23:03.390><c> oh</c><00:23:04.560><c> hold</c><00:23:05.560><c> on</c><00:23:05.710><c> a</c><00:23:05.860><c> gap</c><00:23:06.250><c> there</c>

00:23:06.810 --> 00:23:06.820 align:start position:0%
sorts of titles oh hold on a gap there
 

00:23:06.820 --> 00:23:10.710 align:start position:0%
sorts of titles oh hold on a gap there
we<00:23:06.940><c> go</c><00:23:07.320><c> so</c><00:23:08.320><c> in</c><00:23:09.030><c> addition</c><00:23:10.030><c> to</c><00:23:10.180><c> replacing</c><00:23:10.240><c> the</c>

00:23:10.710 --> 00:23:10.720 align:start position:0%
we go so in addition to replacing the
 

00:23:10.720 --> 00:23:14.790 align:start position:0%
we go so in addition to replacing the
JIT<00:23:10.990><c> with</c><00:23:11.370><c> with</c><00:23:12.370><c> java</c><00:23:12.880><c> coded</c><00:23:13.330><c> stuff</c><00:23:13.660><c> the</c><00:23:14.620><c> JIT</c>

00:23:14.790 --> 00:23:14.800 align:start position:0%
JIT with with java coded stuff the JIT
 

00:23:14.800 --> 00:23:16.560 align:start position:0%
JIT with with java coded stuff the JIT
is<00:23:14.830><c> the</c><00:23:15.160><c> largest</c><00:23:15.460><c> piece</c><00:23:15.760><c> of</c><00:23:15.790><c> the</c><00:23:15.970><c> VM</c><00:23:16.210><c> right</c><00:23:16.420><c> now</c>

00:23:16.560 --> 00:23:16.570 align:start position:0%
is the largest piece of the VM right now
 

00:23:16.570 --> 00:23:19.410 align:start position:0%
is the largest piece of the VM right now
it's<00:23:16.990><c> like</c><00:23:17.170><c> I</c><00:23:17.410><c> don't</c><00:23:17.530><c> know</c><00:23:17.740><c> 40%</c><00:23:18.520><c> of</c><00:23:18.880><c> the</c><00:23:18.970><c> VM</c><00:23:19.210><c> or</c>

00:23:19.410 --> 00:23:19.420 align:start position:0%
it's like I don't know 40% of the VM or
 

00:23:19.420 --> 00:23:21.420 align:start position:0%
it's like I don't know 40% of the VM or
more<00:23:19.630><c> it's</c><00:23:19.810><c> a</c><00:23:20.020><c> huge</c><00:23:20.380><c> amount</c><00:23:20.680><c> of</c><00:23:20.770><c> complicated</c>

00:23:21.420 --> 00:23:21.430 align:start position:0%
more it's a huge amount of complicated
 

00:23:21.430 --> 00:23:23.190 align:start position:0%
more it's a huge amount of complicated
C++<00:23:21.970><c> code</c><00:23:22.150><c> I'd</c><00:23:22.330><c> rather</c><00:23:22.480><c> have</c><00:23:22.690><c> a</c><00:23:22.720><c> huge</c><00:23:22.960><c> amount</c>

00:23:23.190 --> 00:23:23.200 align:start position:0%
C++ code I'd rather have a huge amount
 

00:23:23.200 --> 00:23:25.380 align:start position:0%
C++ code I'd rather have a huge amount
of<00:23:23.290><c> complicated</c><00:23:23.830><c> Java</c><00:23:24.070><c> code</c><00:23:24.370><c> it's</c><00:23:24.940><c> got</c><00:23:25.180><c> to</c><00:23:25.300><c> be</c>

00:23:25.380 --> 00:23:25.390 align:start position:0%
of complicated Java code it's got to be
 

00:23:25.390 --> 00:23:26.850 align:start position:0%
of complicated Java code it's got to be
complicated<00:23:25.630><c> it's</c><00:23:26.170><c> an</c><00:23:26.260><c> empty</c><00:23:26.470><c> complete</c>

00:23:26.850 --> 00:23:26.860 align:start position:0%
complicated it's an empty complete
 

00:23:26.860 --> 00:23:28.800 align:start position:0%
complicated it's an empty complete
problem<00:23:27.280><c> but</c><00:23:27.820><c> at</c><00:23:27.940><c> least</c><00:23:28.060><c> I</c><00:23:28.240><c> want</c><00:23:28.420><c> to</c><00:23:28.480><c> code</c><00:23:28.660><c> it</c>

00:23:28.800 --> 00:23:28.810 align:start position:0%
problem but at least I want to code it
 

00:23:28.810 --> 00:23:31.400 align:start position:0%
problem but at least I want to code it
in<00:23:28.900><c> a</c><00:23:28.990><c> high-level</c><00:23:29.140><c> language</c><00:23:30.180><c> but</c><00:23:31.180><c> for</c>

00:23:31.400 --> 00:23:31.410 align:start position:0%
in a high-level language but for
 

00:23:31.410 --> 00:23:34.980 align:start position:0%
in a high-level language but for
teething<00:23:32.410><c> exercises</c><00:23:33.370><c> or</c><00:23:33.610><c> or</c><00:23:33.850><c> starter</c><00:23:34.600><c> finger</c>

00:23:34.980 --> 00:23:34.990 align:start position:0%
teething exercises or or starter finger
 

00:23:34.990 --> 00:23:37.860 align:start position:0%
teething exercises or or starter finger
exercises<00:23:35.700><c> we</c><00:23:36.700><c> want</c><00:23:36.940><c> to</c><00:23:37.180><c> do</c><00:23:37.420><c> some</c><00:23:37.600><c> smaller</c>

00:23:37.860 --> 00:23:37.870 align:start position:0%
exercises we want to do some smaller
 

00:23:37.870 --> 00:23:39.660 align:start position:0%
exercises we want to do some smaller
pieces<00:23:38.140><c> the</c><00:23:38.410><c> VM</c><00:23:38.620><c> also</c><00:23:38.920><c> in</c><00:23:39.040><c> Java</c><00:23:39.280><c> and</c><00:23:39.550><c> so</c>

00:23:39.660 --> 00:23:39.670 align:start position:0%
pieces the VM also in Java and so
 

00:23:39.670 --> 00:23:42.140 align:start position:0%
pieces the VM also in Java and so
there's<00:23:39.850><c> a</c><00:23:39.910><c> list</c><00:23:40.210><c> of</c><00:23:40.360><c> possibilities</c><00:23:40.990><c> of</c><00:23:41.470><c> P</c><00:23:41.860><c> of</c>

00:23:42.140 --> 00:23:42.150 align:start position:0%
there's a list of possibilities of P of
 

00:23:42.150 --> 00:23:45.030 align:start position:0%
there's a list of possibilities of P of
discrete<00:23:43.150><c> parts</c><00:23:43.450><c> of</c><00:23:43.630><c> the</c><00:23:43.720><c> VM</c><00:23:43.990><c> of</c><00:23:44.350><c> the</c><00:23:44.470><c> Java</c>

00:23:45.030 --> 00:23:45.040 align:start position:0%
discrete parts of the VM of the Java
 

00:23:45.040 --> 00:23:47.100 align:start position:0%
discrete parts of the VM of the Java
Runtime<00:23:45.460><c> that</c><00:23:45.640><c> could</c><00:23:45.820><c> be</c><00:23:45.940><c> transformed</c><00:23:46.870><c> from</c>

00:23:47.100 --> 00:23:47.110 align:start position:0%
Runtime that could be transformed from
 

00:23:47.110 --> 00:23:50.100 align:start position:0%
Runtime that could be transformed from
C++<00:23:47.470><c> into</c><00:23:48.100><c> system</c><00:23:48.400><c> Java</c><00:23:48.670><c> but</c><00:23:49.510><c> the</c><00:23:49.630><c> big</c><00:23:49.780><c> one</c><00:23:49.960><c> is</c>

00:23:50.100 --> 00:23:50.110 align:start position:0%
C++ into system Java but the big one is
 

00:23:50.110 --> 00:23:54.120 align:start position:0%
C++ into system Java but the big one is
of<00:23:50.260><c> course</c><00:23:50.290><c> growl</c><00:23:51.990><c> growl</c><00:23:52.990><c> is</c><00:23:53.260><c> a</c><00:23:53.290><c> very</c><00:23:53.950><c> good</c>

00:23:54.120 --> 00:23:54.130 align:start position:0%
of course growl growl is a very good
 

00:23:54.130 --> 00:23:56.430 align:start position:0%
of course growl growl is a very good
code<00:23:54.370><c> generator</c><00:23:54.790><c> as</c><00:23:55.000><c> I</c><00:23:55.210><c> said</c><00:23:55.420><c> earlier</c><00:23:55.750><c> on</c><00:23:56.080><c> and</c>

00:23:56.430 --> 00:23:56.440 align:start position:0%
code generator as I said earlier on and
 

00:23:56.440 --> 00:23:59.970 align:start position:0%
code generator as I said earlier on and
it<00:23:56.800><c> should</c><00:23:57.100><c> replace</c><00:23:58.000><c> c2</c><00:23:58.510><c> eventually</c><00:23:59.140><c> but</c><00:23:59.860><c> it</c>

00:23:59.970 --> 00:23:59.980 align:start position:0%
it should replace c2 eventually but it
 

00:23:59.980 --> 00:24:01.530 align:start position:0%
it should replace c2 eventually but it
should<00:24:00.100><c> also</c><00:24:00.220><c> replace</c><00:24:00.640><c> c1</c><00:24:01.090><c> which</c><00:24:01.270><c> is</c><00:24:01.300><c> the</c>

00:24:01.530 --> 00:24:01.540 align:start position:0%
should also replace c1 which is the
 

00:24:01.540 --> 00:24:03.300 align:start position:0%
should also replace c1 which is the
client<00:24:01.750><c> compiler</c><00:24:02.230><c> should</c><00:24:02.500><c> also</c><00:24:02.740><c> replace</c><00:24:03.100><c> the</c>

00:24:03.300 --> 00:24:03.310 align:start position:0%
client compiler should also replace the
 

00:24:03.310 --> 00:24:05.010 align:start position:0%
client compiler should also replace the
interpreter<00:24:03.790><c> generator</c><00:24:04.240><c> and</c><00:24:04.480><c> various</c><00:24:04.780><c> stub</c>

00:24:05.010 --> 00:24:05.020 align:start position:0%
interpreter generator and various stub
 

00:24:05.020 --> 00:24:06.870 align:start position:0%
interpreter generator and various stub
generator<00:24:05.440><c> in</c><00:24:05.560><c> other</c><00:24:05.710><c> words</c><00:24:05.920><c> why</c><00:24:06.610><c> have</c>

00:24:06.870 --> 00:24:06.880 align:start position:0%
generator in other words why have
 

00:24:06.880 --> 00:24:08.310 align:start position:0%
generator in other words why have
multiple<00:24:07.360><c> code</c><00:24:07.510><c> generators</c><00:24:08.050><c> in</c><00:24:08.230><c> our</c>

00:24:08.310 --> 00:24:08.320 align:start position:0%
multiple code generators in our
 

00:24:08.320 --> 00:24:10.770 align:start position:0%
multiple code generators in our
ecosystem<00:24:09.000><c> you</c><00:24:10.000><c> know</c><00:24:10.060><c> maybe</c><00:24:10.270><c> there's</c><00:24:10.600><c> some</c>

00:24:10.770 --> 00:24:10.780 align:start position:0%
ecosystem you know maybe there's some
 

00:24:10.780 --> 00:24:12.570 align:start position:0%
ecosystem you know maybe there's some
foreign<00:24:11.080><c> code</c><00:24:11.290><c> generation</c><00:24:11.650><c> code</c><00:24:12.220><c> generator</c>

00:24:12.570 --> 00:24:12.580 align:start position:0%
foreign code generation code generator
 

00:24:12.580 --> 00:24:14.010 align:start position:0%
foreign code generation code generator
off<00:24:12.760><c> on</c><00:24:12.940><c> the</c><00:24:13.030><c> side</c><00:24:13.240><c> that</c><00:24:13.510><c> you</c><00:24:13.630><c> use</c><00:24:13.780><c> for</c>

00:24:14.010 --> 00:24:14.020 align:start position:0%
off on the side that you use for
 

00:24:14.020 --> 00:24:15.300 align:start position:0%
off on the side that you use for
specialized<00:24:14.500><c> purpose</c><00:24:14.920><c> but</c><00:24:15.100><c> if</c><00:24:15.190><c> you're</c>

00:24:15.300 --> 00:24:15.310 align:start position:0%
specialized purpose but if you're
 

00:24:15.310 --> 00:24:17.010 align:start position:0%
specialized purpose but if you're
generating<00:24:15.670><c> stuff</c><00:24:16.090><c> that's</c><00:24:16.390><c> for</c><00:24:16.690><c> the</c><00:24:16.810><c> middle</c>

00:24:17.010 --> 00:24:17.020 align:start position:0%
generating stuff that's for the middle
 

00:24:17.020 --> 00:24:18.169 align:start position:0%
generating stuff that's for the middle
of<00:24:17.110><c> the</c><00:24:17.200><c> Java</c><00:24:17.410><c> stack</c>

00:24:18.169 --> 00:24:18.179 align:start position:0%
of the Java stack
 

00:24:18.179 --> 00:24:20.450 align:start position:0%
of the Java stack
it<00:24:18.330><c> should</c><00:24:18.509><c> be</c><00:24:18.600><c> generated</c><00:24:19.139><c> by</c><00:24:19.289><c> something</c><00:24:20.220><c> we</c>

00:24:20.450 --> 00:24:20.460 align:start position:0%
it should be generated by something we
 

00:24:20.460 --> 00:24:25.430 align:start position:0%
it should be generated by something we
control<00:24:20.879><c> ultimately</c><00:24:21.869><c> I</c><00:24:24.169><c> twenty</c><00:24:25.169><c> years</c><00:24:25.350><c> from</c>

00:24:25.430 --> 00:24:25.440 align:start position:0%
control ultimately I twenty years from
 

00:24:25.440 --> 00:24:27.379 align:start position:0%
control ultimately I twenty years from
now<00:24:25.649><c> there</c><00:24:25.830><c> might</c><00:24:25.950><c> be</c><00:24:25.980><c> zero</c><00:24:26.369><c> C</c><00:24:26.610><c> code</c><00:24:26.820><c> in</c><00:24:26.999><c> the</c><00:24:27.149><c> in</c>

00:24:27.379 --> 00:24:27.389 align:start position:0%
now there might be zero C code in the in
 

00:24:27.389 --> 00:24:30.950 align:start position:0%
now there might be zero C code in the in
the<00:24:27.539><c> in</c><00:24:27.779><c> the</c><00:24:28.080><c> Java</c><00:24:28.320><c> Runtime</c><00:24:29.600><c> except</c><00:24:30.600><c> for</c><00:24:30.749><c> stuff</c>

00:24:30.950 --> 00:24:30.960 align:start position:0%
the in the Java Runtime except for stuff
 

00:24:30.960 --> 00:24:32.960 align:start position:0%
the in the Java Runtime except for stuff
that's<00:24:31.139><c> edge</c><00:24:31.409><c> edge</c><00:24:31.799><c> code</c><00:24:32.220><c> to</c><00:24:32.429><c> connect</c><00:24:32.700><c> to</c><00:24:32.820><c> C</c>

00:24:32.960 --> 00:24:32.970 align:start position:0%
that's edge edge code to connect to C
 

00:24:32.970 --> 00:24:38.210 align:start position:0%
that's edge edge code to connect to C
api's<00:24:36.259><c> this</c><00:24:37.259><c> will</c><00:24:37.409><c> be</c><00:24:37.499><c> tomorrow's</c><00:24:37.830><c> reference</c>

00:24:38.210 --> 00:24:38.220 align:start position:0%
api's this will be tomorrow's reference
 

00:24:38.220 --> 00:24:40.159 align:start position:0%
api's this will be tomorrow's reference
implementation<00:24:38.909><c> and</c><00:24:39.179><c> it'll</c><00:24:39.450><c> be</c><00:24:39.509><c> a</c><00:24:39.539><c> better</c>

00:24:40.159 --> 00:24:40.169 align:start position:0%
implementation and it'll be a better
 

00:24:40.169 --> 00:24:41.960 align:start position:0%
implementation and it'll be a better
reference<00:24:40.590><c> implementations</c><00:24:41.279><c> today</c><00:24:41.580><c> than</c>

00:24:41.960 --> 00:24:41.970 align:start position:0%
reference implementations today than
 

00:24:41.970 --> 00:24:44.239 align:start position:0%
reference implementations today than
today's<00:24:42.570><c> because</c><00:24:42.869><c> when</c><00:24:43.259><c> you</c><00:24:43.350><c> refer</c><00:24:43.679><c> to</c><00:24:43.710><c> it</c><00:24:44.009><c> for</c>

00:24:44.239 --> 00:24:44.249 align:start position:0%
today's because when you refer to it for
 

00:24:44.249 --> 00:24:46.220 align:start position:0%
today's because when you refer to it for
reference<00:24:44.429><c> you</c><00:24:44.909><c> will</c><00:24:45.059><c> refer</c><00:24:45.419><c> to</c><00:24:45.450><c> high-level</c>

00:24:46.220 --> 00:24:46.230 align:start position:0%
reference you will refer to high-level
 

00:24:46.230 --> 00:24:48.230 align:start position:0%
reference you will refer to high-level
Java<00:24:46.740><c> code</c><00:24:47.039><c> that</c><00:24:47.309><c> is</c><00:24:47.429><c> easier</c><00:24:47.700><c> to</c><00:24:47.820><c> understand</c>

00:24:48.230 --> 00:24:48.240 align:start position:0%
Java code that is easier to understand
 

00:24:48.240 --> 00:24:51.649 align:start position:0%
Java code that is easier to understand
and<00:24:48.509><c> then</c><00:24:48.840><c> C</c><00:24:49.049><c> code</c><00:24:49.259><c> and</c><00:24:49.409><c> assembly</c><00:24:49.710><c> code</c><00:24:50.659><c> here's</c>

00:24:51.649 --> 00:24:51.659 align:start position:0%
and then C code and assembly code here's
 

00:24:51.659 --> 00:24:53.649 align:start position:0%
and then C code and assembly code here's
another<00:24:51.899><c> big</c><00:24:52.110><c> idea</c><00:24:52.259><c> I</c><00:24:52.679><c> mentioned</c><00:24:53.129><c> it</c><00:24:53.220><c> earlier</c>

00:24:53.649 --> 00:24:53.659 align:start position:0%
another big idea I mentioned it earlier
 

00:24:53.659 --> 00:24:55.609 align:start position:0%
another big idea I mentioned it earlier
what's<00:24:54.659><c> after</c><00:24:54.840><c> threads</c>

00:24:55.609 --> 00:24:55.619 align:start position:0%
what's after threads
 

00:24:55.619 --> 00:24:58.970 align:start position:0%
what's after threads
I<00:24:55.700><c> think</c><00:24:56.700><c> of</c><00:24:56.789><c> threads</c><00:24:57.029><c> as</c><00:24:57.240><c> dinosaurs</c><00:24:58.080><c> that</c>

00:24:58.970 --> 00:24:58.980 align:start position:0%
I think of threads as dinosaurs that
 

00:24:58.980 --> 00:25:02.389 align:start position:0%
I think of threads as dinosaurs that
like<00:24:59.249><c> dinosaurs</c><00:25:00.139><c> they</c><00:25:01.139><c> are</c><00:25:01.379><c> very</c><00:25:01.769><c> heavy</c><00:25:02.070><c> and</c>

00:25:02.389 --> 00:25:02.399 align:start position:0%
like dinosaurs they are very heavy and
 

00:25:02.399 --> 00:25:06.649 align:start position:0%
like dinosaurs they are very heavy and
big<00:25:02.840><c> they</c><00:25:03.840><c> usually</c><00:25:04.169><c> move</c><00:25:04.619><c> slowly</c><00:25:05.659><c> they're</c>

00:25:06.649 --> 00:25:06.659 align:start position:0%
big they usually move slowly they're
 

00:25:06.659 --> 00:25:09.470 align:start position:0%
big they usually move slowly they're
kind<00:25:06.899><c> of</c><00:25:06.990><c> dumb</c><00:25:07.610><c> or</c><00:25:08.610><c> rather</c><00:25:08.789><c> there</c><00:25:09.179><c> is</c><00:25:09.210><c> some</c>

00:25:09.470 --> 00:25:09.480 align:start position:0%
kind of dumb or rather there is some
 

00:25:09.480 --> 00:25:11.060 align:start position:0%
kind of dumb or rather there is some
intelligence<00:25:10.049><c> there</c><00:25:10.289><c> but</c><00:25:10.470><c> it's</c><00:25:10.619><c> like</c><00:25:10.830><c> in</c><00:25:10.980><c> a</c>

00:25:11.060 --> 00:25:11.070 align:start position:0%
intelligence there but it's like in a
 

00:25:11.070 --> 00:25:13.279 align:start position:0%
intelligence there but it's like in a
little<00:25:11.340><c> tiny</c><00:25:11.490><c> brain</c><00:25:11.879><c> in</c><00:25:12.509><c> the</c><00:25:12.749><c> current</c><00:25:13.049><c> stack</c>

00:25:13.279 --> 00:25:13.289 align:start position:0%
little tiny brain in the current stack
 

00:25:13.289 --> 00:25:14.869 align:start position:0%
little tiny brain in the current stack
frame<00:25:13.619><c> that's</c><00:25:13.860><c> what's</c><00:25:14.070><c> going</c><00:25:14.369><c> on</c><00:25:14.460><c> all</c><00:25:14.759><c> the</c>

00:25:14.869 --> 00:25:14.879 align:start position:0%
frame that's what's going on all the
 

00:25:14.879 --> 00:25:17.149 align:start position:0%
frame that's what's going on all the
other<00:25:15.029><c> parts</c><00:25:15.389><c> of</c><00:25:15.509><c> the</c><00:25:15.629><c> thread</c><00:25:15.899><c> are</c><00:25:16.110><c> just</c><00:25:16.440><c> stack</c>

00:25:17.149 --> 00:25:17.159 align:start position:0%
other parts of the thread are just stack
 

00:25:17.159 --> 00:25:19.549 align:start position:0%
other parts of the thread are just stack
frames<00:25:17.549><c> and</c><00:25:17.879><c> other</c><00:25:17.999><c> metadata</c><00:25:18.960><c> that's</c><00:25:19.259><c> waiting</c>

00:25:19.549 --> 00:25:19.559 align:start position:0%
frames and other metadata that's waiting
 

00:25:19.559 --> 00:25:21.200 align:start position:0%
frames and other metadata that's waiting
for<00:25:19.710><c> you</c><00:25:19.919><c> to</c><00:25:20.039><c> get</c><00:25:20.159><c> done</c><00:25:20.369><c> doing</c><00:25:20.580><c> the</c><00:25:20.820><c> important</c>

00:25:21.200 --> 00:25:21.210 align:start position:0%
for you to get done doing the important
 

00:25:21.210 --> 00:25:23.539 align:start position:0%
for you to get done doing the important
thing<00:25:21.360><c> that</c><00:25:21.389><c> you're</c><00:25:21.600><c> doing</c><00:25:21.840><c> and</c><00:25:22.110><c> it's</c><00:25:22.950><c> it's</c><00:25:23.460><c> a</c>

00:25:23.539 --> 00:25:23.549 align:start position:0%
thing that you're doing and it's it's a
 

00:25:23.549 --> 00:25:25.249 align:start position:0%
thing that you're doing and it's it's a
cost<00:25:23.820><c> that</c><00:25:24.029><c> you</c><00:25:24.149><c> have</c><00:25:24.269><c> to</c><00:25:24.389><c> pay</c><00:25:24.570><c> even</c><00:25:24.899><c> though</c>

00:25:25.249 --> 00:25:25.259 align:start position:0%
cost that you have to pay even though
 

00:25:25.259 --> 00:25:28.070 align:start position:0%
cost that you have to pay even though
all<00:25:25.590><c> the</c><00:25:26.070><c> all</c><00:25:26.519><c> the</c><00:25:26.759><c> useful</c><00:25:27.389><c> stuff</c><00:25:27.419><c> is</c><00:25:27.720><c> going</c><00:25:27.960><c> on</c>

00:25:28.070 --> 00:25:28.080 align:start position:0%
all the all the useful stuff is going on
 

00:25:28.080 --> 00:25:29.749 align:start position:0%
all the all the useful stuff is going on
and<00:25:28.259><c> just</c><00:25:28.289><c> one</c><00:25:28.590><c> a</c><00:25:28.799><c> few</c><00:25:29.039><c> little</c><00:25:29.159><c> cache</c><00:25:29.429><c> lines</c>

00:25:29.749 --> 00:25:29.759 align:start position:0%
and just one a few little cache lines
 

00:25:29.759 --> 00:25:33.230 align:start position:0%
and just one a few little cache lines
near<00:25:30.059><c> the</c><00:25:30.179><c> top</c><00:25:30.360><c> of</c><00:25:30.389><c> the</c><00:25:30.600><c> stack</c><00:25:31.490><c> so</c><00:25:32.490><c> let's</c><00:25:32.850><c> let's</c>

00:25:33.230 --> 00:25:33.240 align:start position:0%
near the top of the stack so let's let's
 

00:25:33.240 --> 00:25:35.720 align:start position:0%
near the top of the stack so let's let's
take<00:25:33.450><c> those</c><00:25:33.679><c> important</c><00:25:34.679><c> parts</c><00:25:35.009><c> and</c><00:25:35.220><c> keep</c><00:25:35.399><c> them</c>

00:25:35.720 --> 00:25:35.730 align:start position:0%
take those important parts and keep them
 

00:25:35.730 --> 00:25:37.369 align:start position:0%
take those important parts and keep them
let's<00:25:36.210><c> throw</c><00:25:36.389><c> away</c><00:25:36.659><c> the</c><00:25:36.840><c> gigantic</c>

00:25:37.369 --> 00:25:37.379 align:start position:0%
let's throw away the gigantic
 

00:25:37.379 --> 00:25:38.960 align:start position:0%
let's throw away the gigantic
pre-allocated<00:25:38.039><c> stack</c><00:25:38.399><c> frame</c>

00:25:38.960 --> 00:25:38.970 align:start position:0%
pre-allocated stack frame
 

00:25:38.970 --> 00:25:41.419 align:start position:0%
pre-allocated stack frame
let's<00:25:39.419><c> throw</c><00:25:39.629><c> away</c><00:25:39.869><c> by</c><00:25:40.110><c> the</c><00:25:40.169><c> way</c><00:25:40.350><c> if</c><00:25:40.919><c> it's</c><00:25:41.249><c> not</c>

00:25:41.419 --> 00:25:41.429 align:start position:0%
let's throw away by the way if it's not
 

00:25:41.429 --> 00:25:43.519 align:start position:0%
let's throw away by the way if it's not
just<00:25:41.639><c> it's</c><00:25:41.940><c> not</c><00:25:42.029><c> just</c><00:25:42.259><c> reallocated</c><00:25:43.259><c> stack</c>

00:25:43.519 --> 00:25:43.529 align:start position:0%
just it's not just reallocated stack
 

00:25:43.529 --> 00:25:46.549 align:start position:0%
just it's not just reallocated stack
segments<00:25:44.340><c> it's</c><00:25:44.549><c> also</c><00:25:44.809><c> the</c><00:25:45.809><c> pre-allocated</c>

00:25:46.549 --> 00:25:46.559 align:start position:0%
segments it's also the pre-allocated
 

00:25:46.559 --> 00:25:48.799 align:start position:0%
segments it's also the pre-allocated
register<00:25:47.249><c> files</c><00:25:47.490><c> there's</c><00:25:47.789><c> tens</c><00:25:48.090><c> of</c><00:25:48.330><c> kilobits</c>

00:25:48.799 --> 00:25:48.809 align:start position:0%
register files there's tens of kilobits
 

00:25:48.809 --> 00:25:51.379 align:start position:0%
register files there's tens of kilobits
of<00:25:49.080><c> State</c><00:25:50.009><c> in</c><00:25:50.249><c> modern</c><00:25:50.580><c> processors</c><00:25:50.789><c> for</c>

00:25:51.379 --> 00:25:51.389 align:start position:0%
of State in modern processors for
 

00:25:51.389 --> 00:25:54.169 align:start position:0%
of State in modern processors for
threads<00:25:51.720><c> and</c><00:25:52.049><c> if</c><00:25:52.799><c> you</c><00:25:52.950><c> when</c><00:25:53.369><c> you</c><00:25:53.460><c> swap</c><00:25:53.759><c> between</c>

00:25:54.169 --> 00:25:54.179 align:start position:0%
threads and if you when you swap between
 

00:25:54.179 --> 00:25:56.210 align:start position:0%
threads and if you when you swap between
threads<00:25:54.509><c> you</c><00:25:54.809><c> have</c><00:25:54.840><c> to</c><00:25:55.139><c> load</c><00:25:55.619><c> and</c><00:25:55.889><c> store</c>

00:25:56.210 --> 00:25:56.220 align:start position:0%
threads you have to load and store
 

00:25:56.220 --> 00:25:58.460 align:start position:0%
threads you have to load and store
copies<00:25:56.700><c> of</c><00:25:56.879><c> that</c><00:25:56.999><c> state</c><00:25:57.389><c> get</c><00:25:58.049><c> it</c><00:25:58.169><c> out</c><00:25:58.289><c> of</c><00:25:58.320><c> your</c>

00:25:58.460 --> 00:25:58.470 align:start position:0%
copies of that state get it out of your
 

00:25:58.470 --> 00:26:00.200 align:start position:0%
copies of that state get it out of your
processor<00:25:59.039><c> and</c><00:25:59.249><c> then</c><00:25:59.429><c> get</c><00:25:59.639><c> a</c><00:25:59.669><c> new</c><00:25:59.820><c> new</c>

00:26:00.200 --> 00:26:00.210 align:start position:0%
processor and then get a new new
 

00:26:00.210 --> 00:26:02.690 align:start position:0%
processor and then get a new new
snapshot<00:26:00.720><c> into</c><00:26:01.080><c> your</c><00:26:01.200><c> processor</c><00:26:01.559><c> that's</c><00:26:02.490><c> part</c>

00:26:02.690 --> 00:26:02.700 align:start position:0%
snapshot into your processor that's part
 

00:26:02.700 --> 00:26:04.730 align:start position:0%
snapshot into your processor that's part
of<00:26:02.789><c> the</c><00:26:02.879><c> dinosaur</c><00:26:03.210><c> mentality</c><00:26:03.990><c> what</c><00:26:04.350><c> we</c><00:26:04.499><c> want</c>

00:26:04.730 --> 00:26:04.740 align:start position:0%
of the dinosaur mentality what we want
 

00:26:04.740 --> 00:26:07.789 align:start position:0%
of the dinosaur mentality what we want
is<00:26:04.950><c> to</c><00:26:05.129><c> be</c><00:26:05.279><c> able</c><00:26:05.399><c> to</c><00:26:05.549><c> have</c><00:26:06.559><c> pieces</c><00:26:07.559><c> of</c>

00:26:07.789 --> 00:26:07.799 align:start position:0%
is to be able to have pieces of
 

00:26:07.799 --> 00:26:11.149 align:start position:0%
is to be able to have pieces of
concurrent<00:26:08.730><c> execution</c><00:26:09.710><c> call</c><00:26:10.710><c> themselves</c>

00:26:11.149 --> 00:26:11.159 align:start position:0%
concurrent execution call themselves
 

00:26:11.159 --> 00:26:13.009 align:start position:0%
concurrent execution call themselves
almost<00:26:11.580><c> call</c><00:26:12.059><c> each</c><00:26:12.210><c> other</c><00:26:12.389><c> almost</c><00:26:12.570><c> as</c>

00:26:13.009 --> 00:26:13.019 align:start position:0%
almost call each other almost as
 

00:26:13.019 --> 00:26:14.570 align:start position:0%
almost call each other almost as
efficiently<00:26:13.440><c> as</c><00:26:13.559><c> function</c><00:26:13.860><c> calls</c><00:26:14.070><c> right</c><00:26:14.399><c> it's</c>

00:26:14.570 --> 00:26:14.580 align:start position:0%
efficiently as function calls right it's
 

00:26:14.580 --> 00:26:15.409 align:start position:0%
efficiently as function calls right it's
an<00:26:14.669><c> old</c><00:26:14.820><c> idea</c>

00:26:15.409 --> 00:26:15.419 align:start position:0%
an old idea
 

00:26:15.419 --> 00:26:18.320 align:start position:0%
an old idea
it's<00:26:16.139><c> called</c><00:26:16.320><c> co-routines</c><00:26:16.919><c> or</c><00:26:17.159><c> fibers</c><00:26:17.610><c> but</c><00:26:18.240><c> in</c>

00:26:18.320 --> 00:26:18.330 align:start position:0%
it's called co-routines or fibers but in
 

00:26:18.330 --> 00:26:20.239 align:start position:0%
it's called co-routines or fibers but in
any<00:26:18.450><c> case</c><00:26:18.539><c> we</c><00:26:19.320><c> don't</c><00:26:19.499><c> want</c><00:26:19.649><c> to</c><00:26:19.710><c> simulate</c><00:26:19.889><c> that</c>

00:26:20.239 --> 00:26:20.249 align:start position:0%
any case we don't want to simulate that
 

00:26:20.249 --> 00:26:22.369 align:start position:0%
any case we don't want to simulate that
with<00:26:20.429><c> gigantic</c><00:26:20.940><c> threads</c><00:26:21.179><c> anymore</c><00:26:21.600><c> so</c><00:26:22.049><c> we</c><00:26:22.230><c> want</c>

00:26:22.369 --> 00:26:22.379 align:start position:0%
with gigantic threads anymore so we want
 

00:26:22.379 --> 00:26:24.460 align:start position:0%
with gigantic threads anymore so we want
to<00:26:22.440><c> leave</c><00:26:22.559><c> them</c><00:26:22.710><c> behind</c><00:26:22.889><c> with</c><00:26:23.190><c> the</c><00:26:23.309><c> fossils</c>

00:26:24.460 --> 00:26:24.470 align:start position:0%
to leave them behind with the fossils
 

00:26:24.470 --> 00:26:27.080 align:start position:0%
to leave them behind with the fossils
this<00:26:25.470><c> depends</c><00:26:25.919><c> on</c><00:26:26.009><c> some</c><00:26:26.369><c> really</c><00:26:26.580><c> tricky</c><00:26:26.730><c> cuts</c>

00:26:27.080 --> 00:26:27.090 align:start position:0%
this depends on some really tricky cuts
 

00:26:27.090 --> 00:26:30.289 align:start position:0%
this depends on some really tricky cuts
in<00:26:27.299><c> the</c><00:26:27.389><c> JVM</c><00:26:27.809><c> because</c><00:26:28.139><c> the</c><00:26:28.259><c> JVM</c><00:26:28.999><c> has</c><00:26:29.999><c> been</c>

00:26:30.289 --> 00:26:30.299 align:start position:0%
in the JVM because the JVM has been
 

00:26:30.299 --> 00:26:32.060 align:start position:0%
in the JVM because the JVM has been
designed<00:26:30.690><c> in</c><00:26:30.929><c> a</c><00:26:31.019><c> threaded</c><00:26:31.409><c> model</c>

00:26:32.060 --> 00:26:32.070 align:start position:0%
designed in a threaded model
 

00:26:32.070 --> 00:26:34.399 align:start position:0%
designed in a threaded model
it's<00:26:32.369><c> hard</c><00:26:32.580><c> to</c><00:26:32.729><c> decouple</c><00:26:33.059><c> it</c><00:26:33.330><c> and</c><00:26:33.570><c> and</c><00:26:33.869><c> wean</c><00:26:34.229><c> it</c>

00:26:34.399 --> 00:26:34.409 align:start position:0%
it's hard to decouple it and and wean it
 

00:26:34.409 --> 00:26:36.349 align:start position:0%
it's hard to decouple it and and wean it
off<00:26:34.559><c> of</c><00:26:34.739><c> the</c><00:26:34.859><c> thread</c><00:26:35.070><c> model</c><00:26:35.399><c> but</c><00:26:35.549><c> we</c><00:26:35.669><c> have</c><00:26:35.879><c> some</c>

00:26:36.349 --> 00:26:36.359 align:start position:0%
off of the thread model but we have some
 

00:26:36.359 --> 00:26:38.269 align:start position:0%
off of the thread model but we have some
very<00:26:36.389><c> good</c><00:26:36.600><c> insights</c><00:26:37.049><c> into</c><00:26:37.649><c> how</c><00:26:37.830><c> to</c><00:26:37.859><c> do</c><00:26:38.129><c> that</c>

00:26:38.269 --> 00:26:38.279 align:start position:0%
very good insights into how to do that
 

00:26:38.279 --> 00:26:39.919 align:start position:0%
very good insights into how to do that
there<00:26:38.460><c> have</c><00:26:38.549><c> been</c><00:26:38.580><c> talks</c><00:26:38.850><c> in</c><00:26:39.179><c> recent</c><00:26:39.600><c> years</c><00:26:39.779><c> in</c>

00:26:39.919 --> 00:26:39.929 align:start position:0%
there have been talks in recent years in
 

00:26:39.929 --> 00:26:41.539 align:start position:0%
there have been talks in recent years in
the<00:26:40.019><c> jvm</c><00:26:40.379><c> language</c><00:26:40.739><c> summit</c><00:26:41.039><c> on</c><00:26:41.159><c> how</c><00:26:41.309><c> to</c><00:26:41.369><c> do</c>

00:26:41.539 --> 00:26:41.549 align:start position:0%
the jvm language summit on how to do
 

00:26:41.549 --> 00:26:45.169 align:start position:0%
the jvm language summit on how to do
this<00:26:42.710><c> library</c><00:26:43.710><c> work</c><00:26:44.039><c> is</c><00:26:44.190><c> also</c><00:26:44.460><c> required</c><00:26:44.700><c> it</c><00:26:44.999><c> at</c>

00:26:45.169 --> 00:26:45.179 align:start position:0%
this library work is also required it at
 

00:26:45.179 --> 00:26:46.519 align:start position:0%
this library work is also required it at
all<00:26:45.359><c> the</c><00:26:45.479><c> edges</c><00:26:45.779><c> where</c><00:26:45.960><c> you</c><00:26:46.049><c> could</c><00:26:46.259><c> block</c>

00:26:46.519 --> 00:26:46.529 align:start position:0%
all the edges where you could block
 

00:26:46.529 --> 00:26:48.289 align:start position:0%
all the edges where you could block
you're<00:26:47.070><c> assuming</c><00:26:47.369><c> that</c><00:26:47.580><c> you've</c><00:26:47.759><c> got</c><00:26:47.909><c> a</c><00:26:47.940><c> thread</c>

00:26:48.289 --> 00:26:48.299 align:start position:0%
you're assuming that you've got a thread
 

00:26:48.299 --> 00:26:50.840 align:start position:0%
you're assuming that you've got a thread
that<00:26:48.450><c> can</c><00:26:48.600><c> hang</c><00:26:48.840><c> around</c><00:26:48.989><c> forever</c><00:26:49.379><c> you</c><00:26:50.340><c> know</c><00:26:50.489><c> in</c>

00:26:50.840 --> 00:26:50.850 align:start position:0%
that can hang around forever you know in
 

00:26:50.850 --> 00:26:52.639 align:start position:0%
that can hang around forever you know in
the<00:26:51.029><c> in</c><00:26:51.179><c> the</c><00:26:51.299><c> Tar</c><00:26:51.509><c> Pits</c><00:26:51.539><c> until</c><00:26:52.229><c> you're</c><00:26:52.440><c> done</c>

00:26:52.639 --> 00:26:52.649 align:start position:0%
the in the Tar Pits until you're done
 

00:26:52.649 --> 00:26:54.979 align:start position:0%
the in the Tar Pits until you're done
blocking<00:26:53.369><c> and</c><00:26:53.609><c> then</c><00:26:54.029><c> wake</c><00:26:54.299><c> up</c><00:26:54.509><c> and</c><00:26:54.720><c> pull</c>

00:26:54.979 --> 00:26:54.989 align:start position:0%
blocking and then wake up and pull
 

00:26:54.989 --> 00:26:56.479 align:start position:0%
blocking and then wake up and pull
itself<00:26:55.259><c> out</c><00:26:55.440><c> of</c><00:26:55.590><c> the</c><00:26:55.679><c> tar</c><00:26:55.889><c> and</c><00:26:56.100><c> lumber</c><00:26:56.460><c> over</c>

00:26:56.479 --> 00:26:56.489 align:start position:0%
itself out of the tar and lumber over
 

00:26:56.489 --> 00:26:58.279 align:start position:0%
itself out of the tar and lumber over
and<00:26:56.879><c> do</c><00:26:56.999><c> something</c><00:26:57.389><c> else</c><00:26:57.479><c> that's</c><00:26:57.840><c> no</c><00:26:58.049><c> good</c>

00:26:58.279 --> 00:26:58.289 align:start position:0%
and do something else that's no good
 

00:26:58.289 --> 00:27:01.159 align:start position:0%
and do something else that's no good
instead<00:26:59.279><c> you</c><00:26:59.399><c> want</c><00:26:59.639><c> a</c><00:26:59.789><c> blocking</c><00:27:00.479><c> API</c><00:27:00.749><c> to</c><00:27:00.929><c> say</c>

00:27:01.159 --> 00:27:01.169 align:start position:0%
instead you want a blocking API to say
 

00:27:01.169 --> 00:27:03.649 align:start position:0%
instead you want a blocking API to say
okay<00:27:01.409><c> I'm</c><00:27:01.529><c> blocked</c><00:27:01.970><c> put</c><00:27:02.970><c> this</c><00:27:03.119><c> little</c><00:27:03.419><c> tiny</c>

00:27:03.649 --> 00:27:03.659 align:start position:0%
okay I'm blocked put this little tiny
 

00:27:03.659 --> 00:27:05.690 align:start position:0%
okay I'm blocked put this little tiny
piece<00:27:03.779><c> of</c><00:27:04.200><c> important</c><00:27:04.679><c> data</c><00:27:04.859><c> on</c><00:27:05.159><c> the</c><00:27:05.279><c> heap</c><00:27:05.519><c> and</c>

00:27:05.690 --> 00:27:05.700 align:start position:0%
piece of important data on the heap and
 

00:27:05.700 --> 00:27:07.759 align:start position:0%
piece of important data on the heap and
go<00:27:06.179><c> do</c><00:27:06.330><c> something</c><00:27:06.359><c> else</c><00:27:06.809><c> that's</c><00:27:07.349><c> mean</c><00:27:07.619><c> while</c>

00:27:07.759 --> 00:27:07.769 align:start position:0%
go do something else that's mean while
 

00:27:07.769 --> 00:27:09.349 align:start position:0%
go do something else that's mean while
that's<00:27:08.279><c> useful</c>

00:27:09.349 --> 00:27:09.359 align:start position:0%
that's useful
 

00:27:09.359 --> 00:27:16.909 align:start position:0%
that's useful
no<00:27:09.979><c> no</c><00:27:10.979><c> lumbering</c><00:27:11.340><c> dinosaurs</c><00:27:15.679><c> will</c><00:27:16.679><c> still</c>

00:27:16.909 --> 00:27:16.919 align:start position:0%
no no lumbering dinosaurs will still
 

00:27:16.919 --> 00:27:18.849 align:start position:0%
no no lumbering dinosaurs will still
need<00:27:17.039><c> something</c><00:27:17.340><c> like</c><00:27:17.639><c> threads</c><00:27:17.999><c> but</c>

00:27:18.849 --> 00:27:18.859 align:start position:0%
need something like threads but
 

00:27:18.859 --> 00:27:21.739 align:start position:0%
need something like threads but
basically<00:27:19.859><c> one</c><00:27:20.129><c> threat</c><00:27:20.519><c> one</c><00:27:20.849><c> thread</c><00:27:21.239><c> will</c><00:27:21.509><c> run</c>

00:27:21.739 --> 00:27:21.749 align:start position:0%
basically one threat one thread will run
 

00:27:21.749 --> 00:27:24.769 align:start position:0%
basically one threat one thread will run
any<00:27:22.080><c> number</c><00:27:22.440><c> of</c><00:27:22.529><c> fibers</c><00:27:22.950><c> sequent</c><00:27:23.549><c> you</c><00:27:24.389><c> know</c><00:27:24.479><c> in</c>

00:27:24.769 --> 00:27:24.779 align:start position:0%
any number of fibers sequent you know in
 

00:27:24.779 --> 00:27:26.509 align:start position:0%
any number of fibers sequent you know in
a<00:27:25.049><c> multiplex</c><00:27:25.590><c> manner</c><00:27:25.889><c> and</c><00:27:26.129><c> that's</c><00:27:26.220><c> how</c><00:27:26.460><c> you</c>

00:27:26.509 --> 00:27:26.519 align:start position:0%
a multiplex manner and that's how you
 

00:27:26.519 --> 00:27:28.999 align:start position:0%
a multiplex manner and that's how you
get<00:27:26.879><c> huge</c><00:27:27.269><c> concurrency</c><00:27:28.169><c> wins</c><00:27:28.409><c> that's</c><00:27:28.799><c> what</c>

00:27:28.999 --> 00:27:29.009 align:start position:0%
get huge concurrency wins that's what
 

00:27:29.009 --> 00:27:31.879 align:start position:0%
get huge concurrency wins that's what
that's<00:27:29.519><c> what</c><00:27:29.759><c> fiber</c><00:27:30.299><c> like</c><00:27:30.629><c> or</c><00:27:30.840><c> gogo</c><00:27:31.710><c> has</c>

00:27:31.879 --> 00:27:31.889 align:start position:0%
that's what fiber like or gogo has
 

00:27:31.889 --> 00:27:33.859 align:start position:0%
that's what fiber like or gogo has
fibers<00:27:32.309><c> are</c><00:27:32.639><c> called</c><00:27:32.909><c> go</c><00:27:33.090><c> routines</c><00:27:33.509><c> and</c><00:27:33.720><c> Co</c>

00:27:33.859 --> 00:27:33.869 align:start position:0%
fibers are called go routines and Co
 

00:27:33.869 --> 00:27:35.450 align:start position:0%
fibers are called go routines and Co
routines<00:27:34.169><c> but</c><00:27:34.349><c> basically</c><00:27:35.009><c> when</c><00:27:35.309><c> you</c><00:27:35.429><c> have</c>

00:27:35.450 --> 00:27:35.460 align:start position:0%
routines but basically when you have
 

00:27:35.460 --> 00:27:39.320 align:start position:0%
routines but basically when you have
lightweight<00:27:36.499><c> deep</c><00:27:37.499><c> bits</c><00:27:38.489><c> of</c><00:27:38.639><c> computation</c>

00:27:39.320 --> 00:27:39.330 align:start position:0%
lightweight deep bits of computation
 

00:27:39.330 --> 00:27:41.119 align:start position:0%
lightweight deep bits of computation
decoupled<00:27:39.869><c> from</c><00:27:39.929><c> the</c><00:27:40.109><c> heavy</c><00:27:40.379><c> threads</c><00:27:40.769><c> and</c><00:27:41.039><c> the</c>

00:27:41.119 --> 00:27:41.129 align:start position:0%
decoupled from the heavy threads and the
 

00:27:41.129 --> 00:27:42.680 align:start position:0%
decoupled from the heavy threads and the
threads<00:27:41.369><c> become</c><00:27:41.669><c> draft</c><00:27:41.970><c> animals</c><00:27:42.450><c> and</c><00:27:42.629><c> the</c>

00:27:42.680 --> 00:27:42.690 align:start position:0%
threads become draft animals and the
 

00:27:42.690 --> 00:27:44.379 align:start position:0%
threads become draft animals and the
fibers<00:27:43.049><c> become</c><00:27:43.379><c> the</c><00:27:43.499><c> intelligent</c><00:27:44.099><c> little</c>

00:27:44.379 --> 00:27:44.389 align:start position:0%
fibers become the intelligent little
 

00:27:44.389 --> 00:27:46.999 align:start position:0%
fibers become the intelligent little
thinking<00:27:45.389><c> dinosaur</c><00:27:45.869><c> Raptors</c><00:27:46.409><c> or</c><00:27:46.619><c> human</c>

00:27:46.999 --> 00:27:47.009 align:start position:0%
thinking dinosaur Raptors or human
 

00:27:47.009 --> 00:27:48.499 align:start position:0%
thinking dinosaur Raptors or human
beings<00:27:47.249><c> that</c><00:27:47.369><c> are</c><00:27:47.429><c> that</c><00:27:47.729><c> are</c><00:27:47.789><c> writing</c><00:27:48.210><c> on</c><00:27:48.299><c> top</c>

00:27:48.499 --> 00:27:48.509 align:start position:0%
beings that are that are writing on top
 

00:27:48.509 --> 00:27:50.719 align:start position:0%
beings that are that are writing on top
of<00:27:48.659><c> the</c><00:27:48.749><c> dinosaurs</c><00:27:49.229><c> and</c><00:27:49.499><c> I</c><00:27:49.679><c> can</c><00:27:50.099><c> jump</c><00:27:50.340><c> off</c><00:27:50.519><c> them</c>

00:27:50.719 --> 00:27:50.729 align:start position:0%
of the dinosaurs and I can jump off them
 

00:27:50.729 --> 00:27:55.249 align:start position:0%
of the dinosaurs and I can jump off them
when<00:27:50.849><c> they</c><00:27:50.940><c> get</c><00:27:51.059><c> stuck</c><00:27:51.330><c> in</c><00:27:51.479><c> the</c><00:27:51.570><c> mud</c><00:27:54.259><c> so</c>

00:27:55.249 --> 00:27:55.259 align:start position:0%
when they get stuck in the mud so
 

00:27:55.259 --> 00:27:57.139 align:start position:0%
when they get stuck in the mud so
mounting<00:27:56.220><c> and</c><00:27:56.340><c> dismounting</c><00:27:56.369><c> is</c><00:27:56.940><c> the</c><00:27:56.999><c> way</c><00:27:57.119><c> I</c>

00:27:57.139 --> 00:27:57.149 align:start position:0%
mounting and dismounting is the way I
 

00:27:57.149 --> 00:27:58.580 align:start position:0%
mounting and dismounting is the way I
like<00:27:57.330><c> to</c><00:27:57.359><c> think</c><00:27:57.599><c> about</c><00:27:57.659><c> fibers</c><00:27:58.200><c> so</c><00:27:58.440><c> we're</c>

00:27:58.580 --> 00:27:58.590 align:start position:0%
like to think about fibers so we're
 

00:27:58.590 --> 00:28:01.159 align:start position:0%
like to think about fibers so we're
doing<00:27:58.830><c> current</c><00:27:59.099><c> experiments</c><00:27:59.729><c> for</c><00:28:00.059><c> for</c><00:28:00.690><c> more</c>

00:28:01.159 --> 00:28:01.169 align:start position:0%
doing current experiments for for more
 

00:28:01.169 --> 00:28:03.409 align:start position:0%
doing current experiments for for more
intelligent<00:28:01.859><c> writing</c><00:28:02.460><c> on</c><00:28:02.639><c> threads</c><00:28:02.999><c> one</c><00:28:03.299><c> of</c>

00:28:03.409 --> 00:28:03.419 align:start position:0%
intelligent writing on threads one of
 

00:28:03.419 --> 00:28:05.960 align:start position:0%
intelligent writing on threads one of
them<00:28:03.509><c> is</c><00:28:03.659><c> better</c><00:28:03.779><c> stack</c><00:28:04.169><c> walking</c><00:28:04.879><c> there's</c><00:28:05.879><c> a</c>

00:28:05.960 --> 00:28:05.970 align:start position:0%
them is better stack walking there's a
 

00:28:05.970 --> 00:28:08.869 align:start position:0%
them is better stack walking there's a
stack<00:28:06.210><c> walk</c><00:28:06.419><c> API</c><00:28:06.749><c> which</c><00:28:07.049><c> which</c><00:28:07.669><c> reifies</c><00:28:08.669><c> the</c>

00:28:08.869 --> 00:28:08.879 align:start position:0%
stack walk API which which reifies the
 

00:28:08.879 --> 00:28:10.960 align:start position:0%
stack walk API which which reifies the
stack<00:28:09.119><c> and</c><00:28:09.359><c> is</c><00:28:09.509><c> able</c><00:28:09.659><c> to</c><00:28:09.809><c> see</c><00:28:10.139><c> inside</c><00:28:10.529><c> of</c><00:28:10.590><c> it</c>

00:28:10.960 --> 00:28:10.970 align:start position:0%
stack and is able to see inside of it
 

00:28:10.970 --> 00:28:13.669 align:start position:0%
stack and is able to see inside of it
and<00:28:11.970><c> we</c><00:28:12.269><c> want</c><00:28:12.450><c> to</c><00:28:12.570><c> eventually</c><00:28:12.809><c> be</c><00:28:13.080><c> able</c><00:28:13.109><c> to</c><00:28:13.470><c> not</c>

00:28:13.669 --> 00:28:13.679 align:start position:0%
and we want to eventually be able to not
 

00:28:13.679 --> 00:28:15.469 align:start position:0%
and we want to eventually be able to not
only<00:28:13.710><c> look</c><00:28:14.099><c> at</c><00:28:14.249><c> the</c><00:28:14.340><c> stack</c><00:28:14.580><c> but</c><00:28:14.789><c> also</c><00:28:14.970><c> replace</c>

00:28:15.469 --> 00:28:15.479 align:start position:0%
only look at the stack but also replace
 

00:28:15.479 --> 00:28:17.269 align:start position:0%
only look at the stack but also replace
it<00:28:15.659><c> say</c><00:28:15.809><c> hey</c><00:28:15.929><c> I</c><00:28:16.109><c> don't</c><00:28:16.590><c> like</c><00:28:16.679><c> the</c><00:28:16.830><c> stack</c><00:28:17.070><c> you're</c>

00:28:17.269 --> 00:28:17.279 align:start position:0%
it say hey I don't like the stack you're
 

00:28:17.279 --> 00:28:18.769 align:start position:0%
it say hey I don't like the stack you're
running<00:28:17.580><c> I</c><00:28:17.729><c> have</c><00:28:17.759><c> a</c><00:28:18.059><c> better</c><00:28:18.239><c> idea</c>

00:28:18.769 --> 00:28:18.779 align:start position:0%
running I have a better idea
 

00:28:18.779 --> 00:28:20.899 align:start position:0%
running I have a better idea
run<00:28:18.929><c> this</c><00:28:19.109><c> stack</c><00:28:19.409><c> instead</c><00:28:19.919><c> I've</c><00:28:20.429><c> saved</c>

00:28:20.899 --> 00:28:20.909 align:start position:0%
run this stack instead I've saved
 

00:28:20.909 --> 00:28:23.029 align:start position:0%
run this stack instead I've saved
whatever<00:28:21.299><c> I</c><00:28:21.359><c> cared</c><00:28:21.690><c> out</c><00:28:21.869><c> about</c><00:28:22.590><c> from</c><00:28:22.889><c> the</c>

00:28:23.029 --> 00:28:23.039 align:start position:0%
whatever I cared out about from the
 

00:28:23.039 --> 00:28:25.310 align:start position:0%
whatever I cared out about from the
previous<00:28:23.460><c> stack</c><00:28:23.729><c> trust</c><00:28:24.479><c> me</c><00:28:24.629><c> to</c><00:28:24.749><c> come</c><00:28:24.929><c> back</c><00:28:25.080><c> to</c>

00:28:25.310 --> 00:28:25.320 align:start position:0%
previous stack trust me to come back to
 

00:28:25.320 --> 00:28:26.690 align:start position:0%
previous stack trust me to come back to
it<00:28:25.470><c> right</c><00:28:25.679><c> now</c><00:28:25.830><c> I</c><00:28:25.859><c> want</c><00:28:26.129><c> you</c><00:28:26.220><c> to</c><00:28:26.340><c> view</c><00:28:26.580><c> this</c>

00:28:26.690 --> 00:28:26.700 align:start position:0%
it right now I want you to view this
 

00:28:26.700 --> 00:28:30.580 align:start position:0%
it right now I want you to view this
stuff<00:28:27.029><c> basically</c><00:28:27.479><c> more</c><00:28:27.749><c> steerable</c><00:28:28.259><c> dinosaurs</c>

00:28:30.580 --> 00:28:30.590 align:start position:0%
stuff basically more steerable dinosaurs
 

00:28:30.590 --> 00:28:33.200 align:start position:0%
stuff basically more steerable dinosaurs
again<00:28:31.590><c> lots</c><00:28:31.889><c> of</c><00:28:32.099><c> library</c><00:28:32.489><c> work</c><00:28:32.669><c> is</c><00:28:32.820><c> required</c>

00:28:33.200 --> 00:28:33.210 align:start position:0%
again lots of library work is required
 

00:28:33.210 --> 00:28:34.519 align:start position:0%
again lots of library work is required
and<00:28:33.419><c> there's</c><00:28:33.599><c> interactions</c><00:28:34.409><c> of</c>

00:28:34.519 --> 00:28:34.529 align:start position:0%
and there's interactions of
 

00:28:34.529 --> 00:28:35.960 align:start position:0%
and there's interactions of
synchronization<00:28:34.919><c> which</c><00:28:35.309><c> are</c><00:28:35.460><c> wonderful</c>

00:28:35.960 --> 00:28:35.970 align:start position:0%
synchronization which are wonderful
 

00:28:35.970 --> 00:28:42.210 align:start position:0%
synchronization which are wonderful
research<00:28:36.509><c> projects</c>

00:28:42.210 --> 00:28:42.220 align:start position:0%
 
 

00:28:42.220 --> 00:28:44.350 align:start position:0%
 
pardon<00:28:43.220><c> me</c><00:28:43.280><c> while</c><00:28:43.309><c> I</c><00:28:43.460><c> do</c><00:28:43.580><c> a</c><00:28:43.670><c> time</c><00:28:43.970><c> check</c><00:28:44.210><c> I</c>

00:28:44.350 --> 00:28:44.360 align:start position:0%
pardon me while I do a time check I
 

00:28:44.360 --> 00:28:48.060 align:start position:0%
pardon me while I do a time check I
don't<00:28:44.390><c> have</c><00:28:44.660><c> a</c><00:28:44.690><c> clock</c><00:28:45.020><c> visible</c><00:28:45.530><c> to</c><00:28:45.679><c> me</c><00:28:46.510><c> okay</c>

00:28:48.060 --> 00:28:48.070 align:start position:0%
don't have a clock visible to me okay
 

00:28:48.070 --> 00:28:52.450 align:start position:0%
don't have a clock visible to me okay
in<00:28:49.070><c> any</c><00:28:49.400><c> case</c><00:28:49.640><c> the</c><00:28:50.410><c> the</c><00:28:51.410><c> JVM</c><00:28:51.799><c> has</c><00:28:52.010><c> new</c><00:28:52.190><c> tricks</c>

00:28:52.450 --> 00:28:52.460 align:start position:0%
in any case the the JVM has new tricks
 

00:28:52.460 --> 00:28:53.919 align:start position:0%
in any case the the JVM has new tricks
it<00:28:52.580><c> needs</c><00:28:52.730><c> to</c><00:28:52.850><c> learn</c><00:28:52.970><c> in</c><00:28:53.150><c> order</c><00:28:53.210><c> to</c><00:28:53.390><c> do</c><00:28:53.540><c> this</c><00:28:53.690><c> it</c>

00:28:53.919 --> 00:28:53.929 align:start position:0%
it needs to learn in order to do this it
 

00:28:53.929 --> 00:28:56.110 align:start position:0%
it needs to learn in order to do this it
needs<00:28:54.020><c> to</c><00:28:54.230><c> be</c><00:28:54.350><c> able</c><00:28:54.440><c> to</c><00:28:54.650><c> take</c><00:28:54.950><c> the</c><00:28:55.580><c> useful</c><00:28:55.940><c> part</c>

00:28:56.110 --> 00:28:56.120 align:start position:0%
needs to be able to take the useful part
 

00:28:56.120 --> 00:28:58.810 align:start position:0%
needs to be able to take the useful part
of<00:28:56.240><c> a</c><00:28:56.299><c> computation</c><00:28:57.020><c> and</c><00:28:57.230><c> and</c><00:28:57.980><c> lay</c><00:28:58.670><c> it</c><00:28:58.790><c> down</c>

00:28:58.810 --> 00:28:58.820 align:start position:0%
of a computation and and lay it down
 

00:28:58.820 --> 00:29:00.820 align:start position:0%
of a computation and and lay it down
dismounted<00:28:59.750><c> onto</c><00:28:59.990><c> the</c><00:29:00.110><c> heap</c><00:29:00.290><c> which</c><00:29:00.590><c> means</c>

00:29:00.820 --> 00:29:00.830 align:start position:0%
dismounted onto the heap which means
 

00:29:00.830 --> 00:29:02.919 align:start position:0%
dismounted onto the heap which means
right<00:29:01.100><c> sizing</c><00:29:01.610><c> and</c><00:29:01.760><c> right</c><00:29:01.880><c> typing</c><00:29:02.390><c> the</c><00:29:02.570><c> the</c>

00:29:02.919 --> 00:29:02.929 align:start position:0%
right sizing and right typing the the
 

00:29:02.929 --> 00:29:04.960 align:start position:0%
right sizing and right typing the the
stack<00:29:03.170><c> framed</c><00:29:03.440><c> information</c><00:29:03.980><c> right</c><00:29:04.520><c> now</c><00:29:04.549><c> we</c><00:29:04.730><c> do</c>

00:29:04.960 --> 00:29:04.970 align:start position:0%
stack framed information right now we do
 

00:29:04.970 --> 00:29:07.060 align:start position:0%
stack framed information right now we do
that<00:29:05.120><c> really</c><00:29:05.360><c> well</c><00:29:05.510><c> inside</c><00:29:06.350><c> of</c><00:29:06.559><c> stack</c><00:29:06.770><c> frames</c>

00:29:07.060 --> 00:29:07.070 align:start position:0%
that really well inside of stack frames
 

00:29:07.070 --> 00:29:08.799 align:start position:0%
that really well inside of stack frames
but<00:29:07.580><c> we</c><00:29:07.670><c> don't</c><00:29:07.850><c> have</c><00:29:07.940><c> the</c><00:29:08.090><c> trick</c><00:29:08.299><c> of</c><00:29:08.450><c> moving</c><00:29:08.750><c> it</c>

00:29:08.799 --> 00:29:08.809 align:start position:0%
but we don't have the trick of moving it
 

00:29:08.809 --> 00:29:10.750 align:start position:0%
but we don't have the trick of moving it
into<00:29:08.929><c> the</c><00:29:09.110><c> heap</c><00:29:09.290><c> dismount</c><00:29:09.920><c> and</c><00:29:10.130><c> then</c><00:29:10.580><c> moving</c>

00:29:10.750 --> 00:29:10.760 align:start position:0%
into the heap dismount and then moving
 

00:29:10.760 --> 00:29:12.430 align:start position:0%
into the heap dismount and then moving
it<00:29:10.940><c> back</c><00:29:11.150><c> when</c><00:29:11.420><c> you</c><00:29:11.510><c> want</c><00:29:11.690><c> to</c><00:29:11.720><c> execute</c><00:29:11.990><c> it</c><00:29:12.230><c> into</c>

00:29:12.430 --> 00:29:12.440 align:start position:0%
it back when you want to execute it into
 

00:29:12.440 --> 00:29:15.220 align:start position:0%
it back when you want to execute it into
the<00:29:12.559><c> stack</c><00:29:12.860><c> remount</c><00:29:13.790><c> but</c><00:29:14.540><c> that's</c><00:29:14.720><c> those</c><00:29:15.200><c> are</c>

00:29:15.220 --> 00:29:15.230 align:start position:0%
the stack remount but that's those are
 

00:29:15.230 --> 00:29:16.840 align:start position:0%
the stack remount but that's those are
tricks<00:29:15.530><c> we</c><00:29:15.679><c> know</c><00:29:15.799><c> how</c><00:29:15.919><c> to</c><00:29:15.980><c> we</c><00:29:16.580><c> know</c><00:29:16.700><c> how</c><00:29:16.790><c> to</c>

00:29:16.840 --> 00:29:16.850 align:start position:0%
tricks we know how to we know how to
 

00:29:16.850 --> 00:29:19.780 align:start position:0%
tricks we know how to we know how to
create<00:29:17.710><c> another</c><00:29:18.710><c> big</c><00:29:18.890><c> idea</c><00:29:19.190><c> is</c><00:29:19.280><c> value</c><00:29:19.580><c> types</c>

00:29:19.780 --> 00:29:19.790 align:start position:0%
create another big idea is value types
 

00:29:19.790 --> 00:29:21.039 align:start position:0%
create another big idea is value types
everybody's<00:29:20.270><c> heard</c><00:29:20.450><c> of</c><00:29:20.480><c> this</c><00:29:20.690><c> this</c><00:29:20.900><c> is</c>

00:29:21.039 --> 00:29:21.049 align:start position:0%
everybody's heard of this this is
 

00:29:21.049 --> 00:29:23.230 align:start position:0%
everybody's heard of this this is
another<00:29:21.230><c> heal</c><00:29:21.500><c> the</c><00:29:21.679><c> rift</c><00:29:21.910><c> classes</c><00:29:22.910><c> versus</c>

00:29:23.230 --> 00:29:23.240 align:start position:0%
another heal the rift classes versus
 

00:29:23.240 --> 00:29:25.480 align:start position:0%
another heal the rift classes versus
primitives<00:29:23.720><c> invidious</c><00:29:24.620><c> choice</c><00:29:24.890><c> between</c><00:29:25.280><c> them</c>

00:29:25.480 --> 00:29:25.490 align:start position:0%
primitives invidious choice between them
 

00:29:25.490 --> 00:29:27.880 align:start position:0%
primitives invidious choice between them
how<00:29:25.910><c> am</c><00:29:26.030><c> I</c><00:29:26.059><c> going</c><00:29:26.210><c> to</c><00:29:26.270><c> choose</c><00:29:26.510><c> between</c><00:29:26.720><c> a</c><00:29:26.929><c> list</c>

00:29:27.880 --> 00:29:27.890 align:start position:0%
how am I going to choose between a list
 

00:29:27.890 --> 00:29:31.480 align:start position:0%
how am I going to choose between a list
and<00:29:28.190><c> an</c><00:29:28.280><c> array</c><00:29:28.549><c> event</c><00:29:28.850><c> oh</c><00:29:29.059><c> no</c><00:29:30.220><c> one's</c><00:29:31.220><c> good</c>

00:29:31.480 --> 00:29:31.490 align:start position:0%
and an array event oh no one's good
 

00:29:31.490 --> 00:29:33.039 align:start position:0%
and an array event oh no one's good
sometimes<00:29:32.000><c> the</c><00:29:32.480><c> other</c><00:29:32.570><c> is</c><00:29:32.690><c> good</c><00:29:32.809><c> at</c><00:29:32.900><c> other</c>

00:29:33.039 --> 00:29:33.049 align:start position:0%
sometimes the other is good at other
 

00:29:33.049 --> 00:29:34.030 align:start position:0%
sometimes the other is good at other
times<00:29:33.290><c> they</c><00:29:33.559><c> each</c><00:29:33.620><c> have</c><00:29:33.770><c> their</c><00:29:33.860><c> disadvantages</c>

00:29:34.030 --> 00:29:34.040 align:start position:0%
times they each have their disadvantages
 

00:29:34.040 --> 00:29:36.880 align:start position:0%
times they each have their disadvantages
let's<00:29:35.030><c> make</c><00:29:35.240><c> them</c><00:29:35.360><c> look</c><00:29:35.540><c> more</c><00:29:35.600><c> the</c><00:29:35.900><c> same</c><00:29:36.169><c> the</c>

00:29:36.880 --> 00:29:36.890 align:start position:0%
let's make them look more the same the
 

00:29:36.890 --> 00:29:38.740 align:start position:0%
let's make them look more the same the
idea<00:29:37.160><c> is</c><00:29:37.340><c> to</c><00:29:37.490><c> distinguish</c><00:29:38.030><c> legacy</c><00:29:38.510><c> types</c>

00:29:38.740 --> 00:29:38.750 align:start position:0%
idea is to distinguish legacy types
 

00:29:38.750 --> 00:29:40.840 align:start position:0%
idea is to distinguish legacy types
which<00:29:39.410><c> we</c><00:29:39.590><c> call</c><00:29:39.770><c> L</c><00:29:39.980><c> types</c><00:29:40.280><c> because</c><00:29:40.520><c> of</c><00:29:40.760><c> the</c>

00:29:40.840 --> 00:29:40.850 align:start position:0%
which we call L types because of the
 

00:29:40.850 --> 00:29:42.850 align:start position:0%
which we call L types because of the
letter<00:29:41.059><c> in</c><00:29:41.210><c> the</c><00:29:41.299><c> descriptor</c><00:29:41.780><c> from</c><00:29:42.320><c> new</c><00:29:42.500><c> cue</c>

00:29:42.850 --> 00:29:42.860 align:start position:0%
letter in the descriptor from new cue
 

00:29:42.860 --> 00:29:45.250 align:start position:0%
letter in the descriptor from new cue
types<00:29:43.100><c> which</c><00:29:43.730><c> will</c><00:29:44.240><c> have</c><00:29:44.390><c> the</c><00:29:44.510><c> cue</c><00:29:44.720><c> letter</c><00:29:45.080><c> in</c>

00:29:45.250 --> 00:29:45.260 align:start position:0%
types which will have the cue letter in
 

00:29:45.260 --> 00:29:47.260 align:start position:0%
types which will have the cue letter in
the<00:29:45.350><c> descriptor</c><00:29:45.830><c> the</c><00:29:46.250><c> idea</c><00:29:46.520><c> is</c><00:29:46.700><c> that</c><00:29:46.730><c> L</c><00:29:47.030><c> types</c>

00:29:47.260 --> 00:29:47.270 align:start position:0%
the descriptor the idea is that L types
 

00:29:47.270 --> 00:29:48.580 align:start position:0%
the descriptor the idea is that L types
and<00:29:47.450><c> Q</c><00:29:47.570><c> types</c><00:29:47.750><c> are</c><00:29:47.900><c> very</c><00:29:47.929><c> similar</c><00:29:48.410><c> they're</c>

00:29:48.580 --> 00:29:48.590 align:start position:0%
and Q types are very similar they're
 

00:29:48.590 --> 00:29:50.260 align:start position:0%
and Q types are very similar they're
both<00:29:48.710><c> class</c><00:29:48.980><c> based</c><00:29:49.250><c> but</c><00:29:49.520><c> only</c><00:29:49.669><c> the</c><00:29:49.850><c> L</c><00:29:49.970><c> types</c>

00:29:50.260 --> 00:29:50.270 align:start position:0%
both class based but only the L types
 

00:29:50.270 --> 00:29:52.090 align:start position:0%
both class based but only the L types
are<00:29:50.480><c> objects</c><00:29:50.929><c> they're</c><00:29:51.140><c> the</c><00:29:51.380><c> q</c><00:29:51.559><c> types</c><00:29:51.740><c> are</c><00:29:51.919><c> pure</c>

00:29:52.090 --> 00:29:52.100 align:start position:0%
are objects they're the q types are pure
 

00:29:52.100 --> 00:29:55.360 align:start position:0%
are objects they're the q types are pure
values<00:29:52.490><c> and</c><00:29:52.960><c> so</c><00:29:53.960><c> this</c><00:29:54.350><c> will</c><00:29:54.530><c> let</c><00:29:54.710><c> us</c><00:29:54.860><c> say</c><00:29:55.070><c> int</c>

00:29:55.360 --> 00:29:55.370 align:start position:0%
values and so this will let us say int
 

00:29:55.370 --> 00:29:58.090 align:start position:0%
values and so this will let us say int
integer<00:29:55.910><c> either</c><00:29:56.510><c> way</c><00:29:56.720><c> they're</c><00:29:57.500><c> they</c><00:29:57.770><c> look</c><00:29:57.950><c> the</c>

00:29:58.090 --> 00:29:58.100 align:start position:0%
integer either way they're they look the
 

00:29:58.100 --> 00:30:00.370 align:start position:0%
integer either way they're they look the
same<00:29:58.309><c> you</c><00:29:58.669><c> can</c><00:29:59.059><c> you</c><00:29:59.540><c> can</c><00:29:59.690><c> write</c><00:29:59.809><c> your</c><00:30:00.020><c> code</c><00:30:00.200><c> you</c>

00:30:00.370 --> 00:30:00.380 align:start position:0%
same you can you can write your code you
 

00:30:00.380 --> 00:30:02.110 align:start position:0%
same you can you can write your code you
can<00:30:00.530><c> refactor</c><00:30:00.890><c> between</c><00:30:01.370><c> int</c><00:30:01.610><c> and</c><00:30:01.760><c> integer</c>

00:30:02.110 --> 00:30:02.120 align:start position:0%
can refactor between int and integer
 

00:30:02.120 --> 00:30:05.260 align:start position:0%
can refactor between int and integer
much<00:30:02.270><c> more</c><00:30:02.480><c> easily</c><00:30:03.400><c> the</c><00:30:04.400><c> value</c><00:30:04.700><c> proposition</c>

00:30:05.260 --> 00:30:05.270 align:start position:0%
much more easily the value proposition
 

00:30:05.270 --> 00:30:06.909 align:start position:0%
much more easily the value proposition
for<00:30:05.299><c> Q</c><00:30:05.600><c> types</c><00:30:05.840><c> is</c><00:30:06.049><c> that</c><00:30:06.080><c> codes</c><00:30:06.380><c> like</c><00:30:06.530><c> a</c><00:30:06.590><c> class</c>

00:30:06.909 --> 00:30:06.919 align:start position:0%
for Q types is that codes like a class
 

00:30:06.919 --> 00:30:09.190 align:start position:0%
for Q types is that codes like a class
it<00:30:07.130><c> works</c><00:30:07.280><c> like</c><00:30:07.460><c> an</c><00:30:07.610><c> int</c><00:30:07.790><c> it's</c><00:30:08.510><c> not</c><00:30:08.660><c> an</c><00:30:08.809><c> object</c>

00:30:09.190 --> 00:30:09.200 align:start position:0%
it works like an int it's not an object
 

00:30:09.200 --> 00:30:10.919 align:start position:0%
it works like an int it's not an object
it's<00:30:09.350><c> a</c><00:30:09.470><c> value</c><00:30:09.799><c> but</c><00:30:10.040><c> you</c><00:30:10.160><c> get</c><00:30:10.280><c> all</c><00:30:10.429><c> your</c><00:30:10.610><c> clasp</c>

00:30:10.919 --> 00:30:10.929 align:start position:0%
it's a value but you get all your clasp
 

00:30:10.929 --> 00:30:13.600 align:start position:0%
it's a value but you get all your clasp
comforts<00:30:11.929><c> so</c><00:30:12.260><c> you</c><00:30:12.380><c> can</c><00:30:12.530><c> do</c><00:30:12.620><c> encapsulation</c><00:30:13.280><c> and</c>

00:30:13.600 --> 00:30:13.610 align:start position:0%
comforts so you can do encapsulation and
 

00:30:13.610 --> 00:30:16.750 align:start position:0%
comforts so you can do encapsulation and
methods<00:30:14.000><c> and</c><00:30:14.150><c> so</c><00:30:14.270><c> forth</c><00:30:14.510><c> it</c><00:30:15.440><c> depends</c><00:30:15.890><c> on</c><00:30:15.980><c> Val</c>

00:30:16.750 --> 00:30:16.760 align:start position:0%
methods and so forth it depends on Val
 

00:30:16.760 --> 00:30:18.640 align:start position:0%
methods and so forth it depends on Val
how<00:30:16.940><c> I</c><00:30:16.970><c> depends</c><00:30:17.630><c> on</c><00:30:17.780><c> many</c><00:30:17.960><c> things</c><00:30:18.110><c> in</c><00:30:18.440><c> order</c><00:30:18.559><c> to</c>

00:30:18.640 --> 00:30:18.650 align:start position:0%
how I depends on many things in order to
 

00:30:18.650 --> 00:30:20.650 align:start position:0%
how I depends on many things in order to
get<00:30:18.830><c> this</c><00:30:19.010><c> right</c><00:30:19.250><c> one</c><00:30:19.490><c> thing</c><00:30:19.640><c> is</c><00:30:19.820><c> we</c><00:30:20.480><c> need</c>

00:30:20.650 --> 00:30:20.660 align:start position:0%
get this right one thing is we need
 

00:30:20.660 --> 00:30:22.539 align:start position:0%
get this right one thing is we need
what's<00:30:20.960><c> called</c><00:30:21.049><c> parametric</c><00:30:21.679><c> polymorphism</c><00:30:21.830><c> we</c>

00:30:22.539 --> 00:30:22.549 align:start position:0%
what's called parametric polymorphism we
 

00:30:22.549 --> 00:30:24.400 align:start position:0%
what's called parametric polymorphism we
need<00:30:22.700><c> to</c><00:30:22.790><c> be</c><00:30:22.910><c> able</c><00:30:23.000><c> to</c><00:30:23.210><c> have</c><00:30:23.330><c> lists</c><00:30:23.600><c> of</c><00:30:23.720><c> int</c><00:30:24.200><c> and</c>

00:30:24.400 --> 00:30:24.410 align:start position:0%
need to be able to have lists of int and
 

00:30:24.410 --> 00:30:26.950 align:start position:0%
need to be able to have lists of int and
have<00:30:24.770><c> it</c><00:30:24.950><c> work</c><00:30:25.160><c> finally</c><00:30:26.120><c> that's</c><00:30:26.540><c> going</c><00:30:26.780><c> to</c><00:30:26.840><c> be</c>

00:30:26.950 --> 00:30:26.960 align:start position:0%
have it work finally that's going to be
 

00:30:26.960 --> 00:30:30.130 align:start position:0%
have it work finally that's going to be
good<00:30:27.169><c> right</c><00:30:27.910><c> basically</c><00:30:28.910><c> what</c><00:30:29.030><c> it</c><00:30:29.120><c> boils</c><00:30:30.080><c> down</c>

00:30:30.130 --> 00:30:30.140 align:start position:0%
good right basically what it boils down
 

00:30:30.140 --> 00:30:32.440 align:start position:0%
good right basically what it boils down
to<00:30:30.260><c> is</c><00:30:30.650><c> right</c><00:30:31.340><c> now</c><00:30:31.549><c> we</c><00:30:31.610><c> know</c><00:30:31.850><c> how</c><00:30:31.970><c> to</c><00:30:32.000><c> do</c><00:30:32.210><c> lists</c>

00:30:32.440 --> 00:30:32.450 align:start position:0%
to is right now we know how to do lists
 

00:30:32.450 --> 00:30:34.060 align:start position:0%
to is right now we know how to do lists
of<00:30:32.630><c> any</c><00:30:32.780><c> L</c><00:30:32.990><c> type</c><00:30:33.260><c> because</c><00:30:33.500><c> L</c><00:30:33.620><c> types</c><00:30:33.860><c> really</c>

00:30:34.060 --> 00:30:34.070 align:start position:0%
of any L type because L types really
 

00:30:34.070 --> 00:30:35.830 align:start position:0%
of any L type because L types really
look<00:30:34.309><c> all</c><00:30:34.460><c> the</c><00:30:34.610><c> same</c><00:30:34.790><c> to</c><00:30:34.970><c> the</c><00:30:35.059><c> BM</c><00:30:35.330><c> the</c><00:30:35.690><c> two</c>

00:30:35.830 --> 00:30:35.840 align:start position:0%
look all the same to the BM the two
 

00:30:35.840 --> 00:30:37.510 align:start position:0%
look all the same to the BM the two
types<00:30:36.080><c> look</c><00:30:36.320><c> different</c><00:30:36.679><c> they</c><00:30:36.799><c> have</c><00:30:37.220><c> different</c>

00:30:37.510 --> 00:30:37.520 align:start position:0%
types look different they have different
 

00:30:37.520 --> 00:30:39.580 align:start position:0%
types look different they have different
sizes<00:30:37.760><c> and</c><00:30:38.120><c> layouts</c><00:30:38.450><c> so</c><00:30:39.049><c> we</c><00:30:39.200><c> need</c><00:30:39.320><c> to</c><00:30:39.410><c> be</c><00:30:39.530><c> able</c>

00:30:39.580 --> 00:30:39.590 align:start position:0%
sizes and layouts so we need to be able
 

00:30:39.590 --> 00:30:41.470 align:start position:0%
sizes and layouts so we need to be able
to<00:30:39.710><c> do</c><00:30:39.830><c> the</c><00:30:39.950><c> trick</c><00:30:40.190><c> of</c><00:30:40.340><c> lists</c><00:30:40.850><c> and</c><00:30:41.000><c> arrays</c><00:30:41.090><c> and</c>

00:30:41.470 --> 00:30:41.480 align:start position:0%
to do the trick of lists and arrays and
 

00:30:41.480 --> 00:30:43.060 align:start position:0%
to do the trick of lists and arrays and
other<00:30:41.630><c> things</c><00:30:41.900><c> that</c><00:30:41.990><c> that</c><00:30:42.290><c> are</c><00:30:42.710><c> containers</c>

00:30:43.060 --> 00:30:43.070 align:start position:0%
other things that that are containers
 

00:30:43.070 --> 00:30:47.169 align:start position:0%
other things that that are containers
for<00:30:43.429><c> these</c><00:30:43.840><c> variably</c><00:30:44.840><c> laid</c><00:30:45.110><c> out</c><00:30:45.290><c> values</c><00:30:46.179><c> but</c>

00:30:47.169 --> 00:30:47.179 align:start position:0%
for these variably laid out values but
 

00:30:47.179 --> 00:30:48.730 align:start position:0%
for these variably laid out values but
it<00:30:47.299><c> gets</c><00:30:47.419><c> you</c><00:30:47.540><c> to</c><00:30:47.660><c> flat</c><00:30:47.870><c> data</c><00:30:48.140><c> and</c><00:30:48.350><c> more</c>

00:30:48.730 --> 00:30:48.740 align:start position:0%
it gets you to flat data and more
 

00:30:48.740 --> 00:30:51.340 align:start position:0%
it gets you to flat data and more
efficient<00:30:49.070><c> use</c><00:30:49.220><c> of</c><00:30:49.250><c> memory</c><00:30:49.669><c> in</c><00:30:50.540><c> order</c><00:30:50.690><c> one</c><00:30:51.230><c> of</c>

00:30:51.340 --> 00:30:51.350 align:start position:0%
efficient use of memory in order one of
 

00:30:51.350 --> 00:30:53.160 align:start position:0%
efficient use of memory in order one of
the<00:30:51.440><c> technical</c><00:30:51.710><c> requirements</c><00:30:51.890><c> for</c><00:30:52.550><c> pyramid</c>

00:30:53.160 --> 00:30:53.170 align:start position:0%
the technical requirements for pyramid
 

00:30:53.170 --> 00:30:55.230 align:start position:0%
the technical requirements for pyramid
polymorphism<00:30:53.860><c> is</c><00:30:54.010><c> that</c><00:30:54.220><c> classes</c><00:30:54.910><c> behave</c>

00:30:55.230 --> 00:30:55.240 align:start position:0%
polymorphism is that classes behave
 

00:30:55.240 --> 00:30:57.660 align:start position:0%
polymorphism is that classes behave
somewhat<00:30:55.660><c> like</c><00:30:55.810><c> C++</c><00:30:56.380><c> templates</c><00:30:56.860><c> and</c><00:30:57.130><c> that</c>

00:30:57.660 --> 00:30:57.670 align:start position:0%
somewhat like C++ templates and that
 

00:30:57.670 --> 00:30:59.760 align:start position:0%
somewhat like C++ templates and that
each<00:30:57.940><c> template</c><00:30:58.390><c> once</c><00:30:58.750><c> you</c><00:30:58.900><c> give</c><00:30:59.080><c> it</c><00:30:59.230><c> template</c>

00:30:59.760 --> 00:30:59.770 align:start position:0%
each template once you give it template
 

00:30:59.770 --> 00:31:02.220 align:start position:0%
each template once you give it template
arguments<00:31:00.340><c> it</c><00:31:00.460><c> turns</c><00:31:00.670><c> into</c><00:31:00.850><c> a</c><00:31:00.940><c> not</c><00:31:01.570><c> another</c>

00:31:02.220 --> 00:31:02.230 align:start position:0%
arguments it turns into a not another
 

00:31:02.230 --> 00:31:04.710 align:start position:0%
arguments it turns into a not another
class<00:31:02.530><c> but</c><00:31:02.830><c> a</c><00:31:02.860><c> species</c><00:31:03.370><c> of</c><00:31:03.400><c> that</c><00:31:03.670><c> class</c><00:31:03.940><c> and</c><00:31:04.270><c> so</c>

00:31:04.710 --> 00:31:04.720 align:start position:0%
class but a species of that class and so
 

00:31:04.720 --> 00:31:06.600 align:start position:0%
class but a species of that class and so
you<00:31:04.780><c> have</c><00:31:04.960><c> a</c><00:31:04.990><c> class</c><00:31:05.380><c> that's</c><00:31:05.860><c> generic</c><00:31:06.280><c> and</c><00:31:06.520><c> then</c>

00:31:06.600 --> 00:31:06.610 align:start position:0%
you have a class that's generic and then
 

00:31:06.610 --> 00:31:08.760 align:start position:0%
you have a class that's generic and then
you<00:31:06.670><c> have</c><00:31:06.760><c> many</c><00:31:06.910><c> species</c><00:31:07.390><c> one</c><00:31:07.600><c> for</c><00:31:07.840><c> each</c><00:31:07.900><c> type</c>

00:31:08.760 --> 00:31:08.770 align:start position:0%
you have many species one for each type
 

00:31:08.770 --> 00:31:12.600 align:start position:0%
you have many species one for each type
argument<00:31:09.930><c> this</c><00:31:10.930><c> again</c><00:31:11.260><c> like</c><00:31:11.590><c> like</c><00:31:12.190><c> fibers</c>

00:31:12.600 --> 00:31:12.610 align:start position:0%
argument this again like like fibers
 

00:31:12.610 --> 00:31:15.540 align:start position:0%
argument this again like like fibers
requires<00:31:12.910><c> deep</c><00:31:13.150><c> cuts</c><00:31:13.420><c> to</c><00:31:14.080><c> the</c><00:31:14.200><c> JVM</c><00:31:14.650><c> this</c><00:31:15.280><c> I</c>

00:31:15.540 --> 00:31:15.550 align:start position:0%
requires deep cuts to the JVM this I
 

00:31:15.550 --> 00:31:17.490 align:start position:0%
requires deep cuts to the JVM this I
would<00:31:15.850><c> say</c><00:31:16.000><c> is</c><00:31:16.180><c> our</c><00:31:16.330><c> biggest</c><00:31:16.510><c> big-ticket</c><00:31:17.080><c> item</c>

00:31:17.490 --> 00:31:17.500 align:start position:0%
would say is our biggest big-ticket item
 

00:31:17.500 --> 00:31:19.680 align:start position:0%
would say is our biggest big-ticket item
and<00:31:18.340><c> hopefully</c><00:31:18.760><c> these</c><00:31:18.940><c> are</c><00:31:19.120><c> the</c><00:31:19.210><c> last</c><00:31:19.420><c> types</c>

00:31:19.680 --> 00:31:19.690 align:start position:0%
and hopefully these are the last types
 

00:31:19.690 --> 00:31:21.780 align:start position:0%
and hopefully these are the last types
we'll<00:31:19.960><c> ever</c><00:31:20.110><c> need</c><00:31:20.380><c> or</c><00:31:20.920><c> the</c><00:31:21.280><c> last</c><00:31:21.460><c> way</c><00:31:21.670><c> of</c>

00:31:21.780 --> 00:31:21.790 align:start position:0%
we'll ever need or the last way of
 

00:31:21.790 --> 00:31:24.060 align:start position:0%
we'll ever need or the last way of
making<00:31:22.090><c> types</c><00:31:22.380><c> object</c><00:31:23.380><c> types</c><00:31:23.560><c> are</c><00:31:23.740><c> great</c><00:31:23.890><c> for</c>

00:31:24.060 --> 00:31:24.070 align:start position:0%
making types object types are great for
 

00:31:24.070 --> 00:31:26.760 align:start position:0%
making types object types are great for
simulation<00:31:24.700><c> these</c><00:31:25.210><c> are</c><00:31:25.480><c> much</c><00:31:25.900><c> much</c><00:31:26.470><c> less</c>

00:31:26.760 --> 00:31:26.770 align:start position:0%
simulation these are much much less
 

00:31:26.770 --> 00:31:29.820 align:start position:0%
simulation these are much much less
overhead<00:31:27.580><c> 'fl</c><00:31:28.000><c> more</c><00:31:28.360><c> direct</c><00:31:28.720><c> non</c><00:31:29.080><c> simulation</c>

00:31:29.820 --> 00:31:29.830 align:start position:0%
overhead 'fl more direct non simulation
 

00:31:29.830 --> 00:31:34.200 align:start position:0%
overhead 'fl more direct non simulation
of<00:31:30.010><c> values</c><00:31:32.370><c> the</c><00:31:33.370><c> impact</c><00:31:33.700><c> of</c><00:31:33.850><c> this</c><00:31:33.940><c> will</c><00:31:34.060><c> be</c>

00:31:34.200 --> 00:31:34.210 align:start position:0%
of values the impact of this will be
 

00:31:34.210 --> 00:31:37.290 align:start position:0%
of values the impact of this will be
comparable<00:31:34.660><c> to</c><00:31:34.780><c> to</c><00:31:35.500><c> impact</c><00:31:36.040><c> some</c><00:31:36.280><c> other</c><00:31:36.820><c> major</c>

00:31:37.290 --> 00:31:37.300 align:start position:0%
comparable to to impact some other major
 

00:31:37.300 --> 00:31:38.820 align:start position:0%
comparable to to impact some other major
language<00:31:37.720><c> features</c><00:31:38.050><c> like</c><00:31:38.230><c> generics</c><00:31:38.710><c> and</c>

00:31:38.820 --> 00:31:38.830 align:start position:0%
language features like generics and
 

00:31:38.830 --> 00:31:41.400 align:start position:0%
language features like generics and
lambdas<00:31:39.570><c> but</c><00:31:40.570><c> the</c><00:31:40.660><c> important</c><00:31:41.050><c> thing</c><00:31:41.140><c> is</c><00:31:41.260><c> it</c>

00:31:41.400 --> 00:31:41.410 align:start position:0%
lambdas but the important thing is it
 

00:31:41.410 --> 00:31:45.630 align:start position:0%
lambdas but the important thing is it
codes<00:31:41.590><c> like</c><00:31:41.740><c> a</c><00:31:41.770><c> class</c><00:31:43.680><c> so</c><00:31:44.680><c> a</c><00:31:45.070><c> few</c><00:31:45.370><c> more</c><00:31:45.490><c> notes</c>

00:31:45.630 --> 00:31:45.640 align:start position:0%
codes like a class so a few more notes
 

00:31:45.640 --> 00:31:48.750 align:start position:0%
codes like a class so a few more notes
on<00:31:45.850><c> parametric</c><00:31:46.390><c> polymorphism</c><00:31:47.220><c> that</c><00:31:48.220><c> what</c>

00:31:48.750 --> 00:31:48.760 align:start position:0%
on parametric polymorphism that what
 

00:31:48.760 --> 00:31:50.730 align:start position:0%
on parametric polymorphism that what
what<00:31:49.240><c> it</c><00:31:49.330><c> really</c><00:31:49.570><c> does</c><00:31:49.750><c> it</c><00:31:49.960><c> lets</c><00:31:50.200><c> you</c><00:31:50.290><c> say</c><00:31:50.470><c> this</c>

00:31:50.730 --> 00:31:50.740 align:start position:0%
what it really does it lets you say this
 

00:31:50.740 --> 00:31:53.190 align:start position:0%
what it really does it lets you say this
code<00:31:51.040><c> see</c><00:31:51.310><c> this</c><00:31:51.460><c> code</c><00:31:51.700><c> this</c><00:31:52.360><c> code</c><00:31:52.660><c> works</c><00:31:52.900><c> for</c>

00:31:53.190 --> 00:31:53.200 align:start position:0%
code see this code this code works for
 

00:31:53.200 --> 00:31:56.040 align:start position:0%
code see this code this code works for
all<00:31:53.410><c> values</c><00:31:54.160><c> not</c><00:31:54.580><c> just</c><00:31:54.970><c> references</c><00:31:55.720><c> to</c>

00:31:56.040 --> 00:31:56.050 align:start position:0%
all values not just references to
 

00:31:56.050 --> 00:31:58.770 align:start position:0%
all values not just references to
inherit<00:31:56.530><c> from</c><00:31:56.560><c> a</c><00:31:56.770><c> certain</c><00:31:57.040><c> interface</c><00:31:57.490><c> but</c><00:31:58.360><c> int</c>

00:31:58.770 --> 00:31:58.780 align:start position:0%
inherit from a certain interface but int
 

00:31:58.780 --> 00:32:01.230 align:start position:0%
inherit from a certain interface but int
and<00:31:59.260><c> doubles</c><00:31:59.800><c> and</c><00:32:00.100><c> complex</c><00:32:00.580><c> numbers</c><00:32:00.790><c> which</c><00:32:01.120><c> I</c>

00:32:01.230 --> 00:32:01.240 align:start position:0%
and doubles and complex numbers which I
 

00:32:01.240 --> 00:32:03.180 align:start position:0%
and doubles and complex numbers which I
haven't<00:32:01.420><c> invented</c><00:32:01.780><c> yet</c><00:32:02.080><c> and</c><00:32:02.260><c> quaternions</c>

00:32:03.180 --> 00:32:03.190 align:start position:0%
haven't invented yet and quaternions
 

00:32:03.190 --> 00:32:04.950 align:start position:0%
haven't invented yet and quaternions
which<00:32:03.370><c> I</c><00:32:03.490><c> haven't</c><00:32:03.670><c> invented</c><00:32:04.180><c> yet</c><00:32:04.360><c> this</c>

00:32:04.950 --> 00:32:04.960 align:start position:0%
which I haven't invented yet this
 

00:32:04.960 --> 00:32:08.040 align:start position:0%
which I haven't invented yet this
algorithm<00:32:05.770><c> works</c><00:32:05.980><c> for</c><00:32:06.250><c> all</c><00:32:06.490><c> of</c><00:32:06.520><c> them</c><00:32:06.940><c> that's</c><00:32:07.870><c> a</c>

00:32:08.040 --> 00:32:08.050 align:start position:0%
algorithm works for all of them that's a
 

00:32:08.050 --> 00:32:09.660 align:start position:0%
algorithm works for all of them that's a
very<00:32:08.230><c> good</c><00:32:08.380><c> thing</c><00:32:08.590><c> right</c><00:32:08.800><c> we've</c><00:32:09.040><c> used</c><00:32:09.310><c> that</c><00:32:09.490><c> in</c>

00:32:09.660 --> 00:32:09.670 align:start position:0%
very good thing right we've used that in
 

00:32:09.670 --> 00:32:13.470 align:start position:0%
very good thing right we've used that in
C++<00:32:10.300><c> with</c><00:32:10.450><c> templates</c><00:32:10.810><c> it's</c><00:32:11.080><c> very</c><00:32:11.260><c> powerful</c><00:32:12.480><c> it</c>

00:32:13.470 --> 00:32:13.480 align:start position:0%
C++ with templates it's very powerful it
 

00:32:13.480 --> 00:32:15.630 align:start position:0%
C++ with templates it's very powerful it
will<00:32:13.630><c> be</c><00:32:13.750><c> perhaps</c><00:32:14.530><c> even</c><00:32:14.920><c> more</c><00:32:15.070><c> powerful</c><00:32:15.490><c> in</c>

00:32:15.630 --> 00:32:15.640 align:start position:0%
will be perhaps even more powerful in
 

00:32:15.640 --> 00:32:16.980 align:start position:0%
will be perhaps even more powerful in
Java<00:32:15.910><c> but</c><00:32:16.300><c> you'll</c><00:32:16.420><c> be</c><00:32:16.480><c> able</c><00:32:16.600><c> to</c><00:32:16.720><c> build</c><00:32:16.840><c> all</c>

00:32:16.980 --> 00:32:16.990 align:start position:0%
Java but you'll be able to build all
 

00:32:16.990 --> 00:32:18.390 align:start position:0%
Java but you'll be able to build all
sorts<00:32:17.020><c> of</c><00:32:17.260><c> interesting</c><00:32:17.620><c> things</c><00:32:17.680><c> on</c><00:32:18.070><c> it</c><00:32:18.190><c> on</c><00:32:18.340><c> it</c>

00:32:18.390 --> 00:32:18.400 align:start position:0%
sorts of interesting things on it on it
 

00:32:18.400 --> 00:32:23.460 align:start position:0%
sorts of interesting things on it on it
at<00:32:19.000><c> the</c><00:32:19.480><c> same</c><00:32:19.630><c> time</c><00:32:21.750><c> like</c><00:32:22.750><c> the</c><00:32:22.960><c> cursors</c><00:32:23.290><c> that</c><00:32:23.320><c> I</c>

00:32:23.460 --> 00:32:23.470 align:start position:0%
at the same time like the cursors that I
 

00:32:23.470 --> 00:32:25.020 align:start position:0%
at the same time like the cursors that I
mentioned<00:32:23.830><c> earlier</c><00:32:23.920><c> into</c><00:32:24.400><c> off</c><00:32:24.550><c> heap</c><00:32:24.790><c> data</c>

00:32:25.020 --> 00:32:25.030 align:start position:0%
mentioned earlier into off heap data
 

00:32:25.030 --> 00:32:26.730 align:start position:0%
mentioned earlier into off heap data
structures<00:32:25.480><c> that</c><00:32:25.690><c> will</c><00:32:25.870><c> be</c><00:32:26.020><c> those</c><00:32:26.290><c> should</c><00:32:26.620><c> not</c>

00:32:26.730 --> 00:32:26.740 align:start position:0%
structures that will be those should not
 

00:32:26.740 --> 00:32:30.450 align:start position:0%
structures that will be those should not
be<00:32:26.800><c> objects</c><00:32:27.340><c> those</c><00:32:27.460><c> should</c><00:32:27.610><c> be</c><00:32:27.640><c> values</c><00:32:28.060><c> a</c><00:32:29.460><c> type</c>

00:32:30.450 --> 00:32:30.460 align:start position:0%
be objects those should be values a type
 

00:32:30.460 --> 00:32:32.790 align:start position:0%
be objects those should be values a type
variable<00:32:30.910><c> is</c><00:32:31.060><c> the</c><00:32:31.240><c> key</c><00:32:31.510><c> actor</c><00:32:31.960><c> in</c><00:32:32.170><c> parametric</c>

00:32:32.790 --> 00:32:32.800 align:start position:0%
variable is the key actor in parametric
 

00:32:32.800 --> 00:32:35.160 align:start position:0%
variable is the key actor in parametric
polymorphism<00:32:33.100><c> a</c><00:32:33.670><c> type</c><00:32:33.850><c> variable</c><00:32:33.880><c> says</c><00:32:34.420><c> I'm</c><00:32:34.930><c> as</c>

00:32:35.160 --> 00:32:35.170 align:start position:0%
polymorphism a type variable says I'm as
 

00:32:35.170 --> 00:32:36.690 align:start position:0%
polymorphism a type variable says I'm as
placeholder<00:32:35.710><c> for</c><00:32:35.830><c> a</c><00:32:35.890><c> type</c><00:32:36.160><c> but</c><00:32:36.370><c> I</c><00:32:36.400><c> don't</c><00:32:36.610><c> know</c>

00:32:36.690 --> 00:32:36.700 align:start position:0%
placeholder for a type but I don't know
 

00:32:36.700 --> 00:32:38.310 align:start position:0%
placeholder for a type but I don't know
what<00:32:36.850><c> I</c><00:32:36.880><c> am</c><00:32:37.090><c> yet</c><00:32:37.300><c> I</c><00:32:37.450><c> don't</c><00:32:37.600><c> even</c><00:32:37.690><c> know</c><00:32:37.870><c> how</c><00:32:37.990><c> big</c>

00:32:38.310 --> 00:32:38.320 align:start position:0%
what I am yet I don't even know how big
 

00:32:38.320 --> 00:32:40.980 align:start position:0%
what I am yet I don't even know how big
I<00:32:38.500><c> am</c><00:32:38.650><c> i</c><00:32:39.010><c> I</c><00:32:39.400><c> know</c><00:32:40.000><c> very</c><00:32:40.240><c> little</c><00:32:40.360><c> about</c><00:32:40.660><c> myself</c>

00:32:40.980 --> 00:32:40.990 align:start position:0%
I am i I know very little about myself
 

00:32:40.990 --> 00:32:43.110 align:start position:0%
I am i I know very little about myself
but<00:32:41.470><c> you</c><00:32:41.650><c> you</c><00:32:41.860><c> better</c><00:32:42.070><c> be</c><00:32:42.220><c> ready</c><00:32:42.370><c> to</c><00:32:42.610><c> code</c><00:32:42.880><c> me</c>

00:32:43.110 --> 00:32:43.120 align:start position:0%
but you you better be ready to code me
 

00:32:43.120 --> 00:32:45.780 align:start position:0%
but you you better be ready to code me
for<00:32:43.690><c> whatever</c><00:32:43.840><c> type</c><00:32:44.260><c> the</c><00:32:44.470><c> user</c><00:32:44.650><c> asked</c><00:32:45.070><c> for</c><00:32:45.280><c> so</c>

00:32:45.780 --> 00:32:45.790 align:start position:0%
for whatever type the user asked for so
 

00:32:45.790 --> 00:32:47.600 align:start position:0%
for whatever type the user asked for so
that's<00:32:45.970><c> like</c><00:32:46.090><c> a</c><00:32:46.150><c> template</c><00:32:46.600><c> kind</c><00:32:46.840><c> of</c><00:32:46.930><c> a</c><00:32:46.990><c> thing</c>

00:32:47.600 --> 00:32:47.610 align:start position:0%
that's like a template kind of a thing
 

00:32:47.610 --> 00:32:50.400 align:start position:0%
that's like a template kind of a thing
it's<00:32:48.610><c> very</c><00:32:48.790><c> hard</c><00:32:49.000><c> to</c><00:32:49.120><c> do</c><00:32:49.270><c> this</c><00:32:49.420><c> because</c>

00:32:50.400 --> 00:32:50.410 align:start position:0%
it's very hard to do this because
 

00:32:50.410 --> 00:32:51.900 align:start position:0%
it's very hard to do this because
primitives<00:32:50.980><c> look</c><00:32:51.100><c> totally</c><00:32:51.460><c> different</c><00:32:51.790><c> from</c>

00:32:51.900 --> 00:32:51.910 align:start position:0%
primitives look totally different from
 

00:32:51.910 --> 00:32:54.450 align:start position:0%
primitives look totally different from
from<00:32:52.390><c> references</c><00:32:52.960><c> so</c><00:32:53.740><c> you</c><00:32:54.100><c> know</c><00:32:54.280><c> we've</c><00:32:54.430><c> been</c>

00:32:54.450 --> 00:32:54.460 align:start position:0%
from references so you know we've been
 

00:32:54.460 --> 00:32:58.050 align:start position:0%
from references so you know we've been
working<00:32:54.670><c> on</c><00:32:55.000><c> it</c><00:32:55.180><c> we</c><00:32:55.300><c> have</c><00:32:55.510><c> some</c><00:32:55.690><c> approaches</c><00:32:57.060><c> we</c>

00:32:58.050 --> 00:32:58.060 align:start position:0%
working on it we have some approaches we
 

00:32:58.060 --> 00:32:59.880 align:start position:0%
working on it we have some approaches we
have<00:32:58.090><c> like</c><00:32:58.450><c> we're</c><00:32:58.690><c> on</c><00:32:58.810><c> I</c><00:32:58.990><c> think</c><00:32:59.260><c> just</c>

00:32:59.880 --> 00:32:59.890 align:start position:0%
have like we're on I think just
 

00:32:59.890 --> 00:33:01.650 align:start position:0%
have like we're on I think just
prototype<00:33:00.550><c> for</c><00:33:00.910><c> doing</c><00:33:01.180><c> parametric</c>

00:33:01.650 --> 00:33:01.660 align:start position:0%
prototype for doing parametric
 

00:33:01.660 --> 00:33:04.500 align:start position:0%
prototype for doing parametric
polymorphism<00:33:02.670><c> primitives</c><00:33:03.670><c> don't</c><00:33:04.120><c> look</c><00:33:04.360><c> like</c>

00:33:04.500 --> 00:33:04.510 align:start position:0%
polymorphism primitives don't look like
 

00:33:04.510 --> 00:33:06.040 align:start position:0%
polymorphism primitives don't look like
classes<00:33:05.050><c> they</c><00:33:05.140><c> don't</c><00:33:05.170><c> have</c><00:33:05.410><c> method</c>

00:33:06.040 --> 00:33:06.050 align:start position:0%
classes they don't have method
 

00:33:06.050 --> 00:33:09.340 align:start position:0%
classes they don't have method
so<00:33:06.320><c> they</c><00:33:06.410><c> don't</c><00:33:06.530><c> have</c><00:33:06.650><c> super</c><00:33:07.130><c> types</c><00:33:07.690><c> so</c><00:33:08.690><c> but</c>

00:33:09.340 --> 00:33:09.350 align:start position:0%
so they don't have super types so but
 

00:33:09.350 --> 00:33:11.950 align:start position:0%
so they don't have super types so but
the<00:33:10.190><c> solution</c><00:33:10.640><c> that</c><00:33:10.730><c> looks</c><00:33:10.850><c> good</c><00:33:11.090><c> today</c><00:33:11.330><c> and</c><00:33:11.840><c> I</c>

00:33:11.950 --> 00:33:11.960 align:start position:0%
the solution that looks good today and I
 

00:33:11.960 --> 00:33:14.260 align:start position:0%
the solution that looks good today and I
think<00:33:12.170><c> this</c><00:33:12.260><c> is</c><00:33:12.410><c> maybe</c><00:33:13.280><c> close</c><00:33:13.820><c> to</c><00:33:13.850><c> where</c><00:33:14.120><c> we're</c>

00:33:14.260 --> 00:33:14.270 align:start position:0%
think this is maybe close to where we're
 

00:33:14.270 --> 00:33:15.940 align:start position:0%
think this is maybe close to where we're
going<00:33:14.300><c> is</c><00:33:14.720><c> to</c><00:33:14.900><c> build</c><00:33:15.110><c> an</c><00:33:15.230><c> efficient</c><00:33:15.620><c> mapping</c>

00:33:15.940 --> 00:33:15.950 align:start position:0%
going is to build an efficient mapping
 

00:33:15.950 --> 00:33:17.980 align:start position:0%
going is to build an efficient mapping
that<00:33:16.100><c> turns</c><00:33:16.340><c> primitives</c><00:33:17.210><c> into</c><00:33:17.480><c> value</c><00:33:17.780><c> types</c>

00:33:17.980 --> 00:33:17.990 align:start position:0%
that turns primitives into value types
 

00:33:17.990 --> 00:33:19.060 align:start position:0%
that turns primitives into value types
because<00:33:18.290><c> that's</c><00:33:18.500><c> kind</c><00:33:18.740><c> of</c><00:33:18.770><c> what</c><00:33:18.920><c> they</c><00:33:19.010><c> were</c>

00:33:19.060 --> 00:33:19.070 align:start position:0%
because that's kind of what they were
 

00:33:19.070 --> 00:33:21.730 align:start position:0%
because that's kind of what they were
there<00:33:19.430><c> the</c><00:33:19.550><c> first</c><00:33:19.700><c> of</c><00:33:19.910><c> the</c><00:33:20.030><c> value</c><00:33:20.330><c> typed</c><00:33:20.740><c> queue</c>

00:33:21.730 --> 00:33:21.740 align:start position:0%
there the first of the value typed queue
 

00:33:21.740 --> 00:33:23.590 align:start position:0%
there the first of the value typed queue
types<00:33:21.950><c> and</c><00:33:22.250><c> then</c><00:33:22.400><c> and</c><00:33:22.700><c> then</c><00:33:23.150><c> at</c><00:33:23.270><c> that</c><00:33:23.360><c> point</c>

00:33:23.590 --> 00:33:23.600 align:start position:0%
types and then and then at that point
 

00:33:23.600 --> 00:33:25.150 align:start position:0%
types and then and then at that point
your<00:33:23.780><c> generic</c><00:33:24.140><c> code</c><00:33:24.320><c> has</c><00:33:24.500><c> to</c><00:33:24.530><c> work</c><00:33:24.770><c> on</c><00:33:24.890><c> queue</c>

00:33:25.150 --> 00:33:25.160 align:start position:0%
your generic code has to work on queue
 

00:33:25.160 --> 00:33:27.250 align:start position:0%
your generic code has to work on queue
types<00:33:25.340><c> and</c><00:33:25.550><c> el</c><00:33:25.670><c> types</c><00:33:25.940><c> so</c><00:33:26.540><c> it's</c><00:33:26.690><c> it's</c><00:33:26.990><c> more</c><00:33:27.200><c> of</c>

00:33:27.250 --> 00:33:27.260 align:start position:0%
types and el types so it's it's more of
 

00:33:27.260 --> 00:33:29.350 align:start position:0%
types and el types so it's it's more of
an<00:33:27.350><c> either-or</c><00:33:27.830><c> proposition</c><00:33:27.880><c> instead</c><00:33:28.880><c> of</c><00:33:29.000><c> my</c>

00:33:29.350 --> 00:33:29.360 align:start position:0%
an either-or proposition instead of my
 

00:33:29.360 --> 00:33:30.700 align:start position:0%
an either-or proposition instead of my
gosh<00:33:29.540><c> what's</c><00:33:29.840><c> it</c><00:33:29.960><c> going</c><00:33:30.080><c> to</c><00:33:30.140><c> be</c><00:33:30.200><c> I</c><00:33:30.470><c> don't</c><00:33:30.620><c> know</c>

00:33:30.700 --> 00:33:30.710 align:start position:0%
gosh what's it going to be I don't know
 

00:33:30.710 --> 00:33:31.750 align:start position:0%
gosh what's it going to be I don't know
what's<00:33:30.860><c> coming</c><00:33:31.160><c> at</c><00:33:31.280><c> me</c><00:33:31.430><c> and</c><00:33:31.490><c> the</c><00:33:31.580><c> type</c>

00:33:31.750 --> 00:33:31.760 align:start position:0%
what's coming at me and the type
 

00:33:31.760 --> 00:33:34.510 align:start position:0%
what's coming at me and the type
variable<00:33:32.180><c> and</c><00:33:32.420><c> then</c><00:33:33.200><c> at</c><00:33:33.350><c> the</c><00:33:33.470><c> end</c><00:33:33.500><c> you</c><00:33:34.310><c> say</c>

00:33:34.510 --> 00:33:34.520 align:start position:0%
variable and then at the end you say
 

00:33:34.520 --> 00:33:36.640 align:start position:0%
variable and then at the end you say
well<00:33:35.150><c> if</c><00:33:35.480><c> I</c><00:33:35.630><c> want</c><00:33:35.840><c> to</c><00:33:35.930><c> be</c><00:33:36.020><c> able</c><00:33:36.110><c> to</c><00:33:36.230><c> work</c><00:33:36.530><c> with</c>

00:33:36.640 --> 00:33:36.650 align:start position:0%
well if I want to be able to work with
 

00:33:36.650 --> 00:33:38.500 align:start position:0%
well if I want to be able to work with
types<00:33:36.950><c> which</c><00:33:37.250><c> could</c><00:33:37.490><c> be</c><00:33:37.580><c> either/or</c><00:33:38.120><c> then</c><00:33:38.420><c> I</c>

00:33:38.500 --> 00:33:38.510 align:start position:0%
types which could be either/or then I
 

00:33:38.510 --> 00:33:40.720 align:start position:0%
types which could be either/or then I
need<00:33:38.690><c> one</c><00:33:38.960><c> more</c><00:33:39.170><c> letter</c><00:33:39.740><c> the</c><00:33:40.070><c> you</c><00:33:40.220><c> type</c><00:33:40.460><c> you</c>

00:33:40.720 --> 00:33:40.730 align:start position:0%
need one more letter the you type you
 

00:33:40.730 --> 00:33:43.000 align:start position:0%
need one more letter the you type you
mean<00:33:40.970><c> G</c><00:33:41.150><c> Union</c><00:33:41.450><c> which</c><00:33:41.990><c> is</c><00:33:42.140><c> a</c><00:33:42.170><c> disjoint</c><00:33:42.590><c> union</c>

00:33:43.000 --> 00:33:43.010 align:start position:0%
mean G Union which is a disjoint union
 

00:33:43.010 --> 00:33:44.470 align:start position:0%
mean G Union which is a disjoint union
of<00:33:43.130><c> queues</c><00:33:43.400><c> &amp;</c><00:33:43.580><c> L's</c><00:33:43.700><c> and</c><00:33:43.820><c> at</c><00:33:43.940><c> that</c><00:33:44.090><c> point</c><00:33:44.300><c> you</c>

00:33:44.470 --> 00:33:44.480 align:start position:0%
of queues &amp; L's and at that point you
 

00:33:44.480 --> 00:33:45.700 align:start position:0%
of queues &amp; L's and at that point you
sort<00:33:44.720><c> of</c><00:33:44.780><c> healed</c><00:33:45.020><c> the</c><00:33:45.170><c> rift</c><00:33:45.200><c> do</c><00:33:45.500><c> you</c><00:33:45.560><c> have</c><00:33:45.680><c> a</c>

00:33:45.700 --> 00:33:45.710 align:start position:0%
sort of healed the rift do you have a
 

00:33:45.710 --> 00:33:48.610 align:start position:0%
sort of healed the rift do you have a
type<00:33:46.100><c> system</c><00:33:46.340><c> in</c><00:33:46.610><c> the</c><00:33:46.700><c> JVM</c><00:33:47.120><c> that</c><00:33:47.660><c> can</c><00:33:47.900><c> work</c><00:33:48.080><c> can</c>

00:33:48.610 --> 00:33:48.620 align:start position:0%
type system in the JVM that can work can
 

00:33:48.620 --> 00:33:50.530 align:start position:0%
type system in the JVM that can work can
refer<00:33:49.010><c> to</c><00:33:49.040><c> anything</c><00:33:49.520><c> you</c><00:33:49.850><c> can</c><00:33:50.000><c> throw</c><00:33:50.180><c> at</c><00:33:50.270><c> it</c>

00:33:50.530 --> 00:33:50.540 align:start position:0%
refer to anything you can throw at it
 

00:33:50.540 --> 00:33:54.400 align:start position:0%
refer to anything you can throw at it
from<00:33:50.690><c> Java</c><00:33:50.960><c> plausibly</c><00:33:53.020><c> we</c><00:33:54.020><c> might</c><00:33:54.170><c> do</c><00:33:54.320><c> it</c>

00:33:54.400 --> 00:33:54.410 align:start position:0%
from Java plausibly we might do it
 

00:33:54.410 --> 00:33:55.690 align:start position:0%
from Java plausibly we might do it
differently<00:33:54.770><c> if</c><00:33:54.980><c> we</c><00:33:55.130><c> were</c><00:33:55.220><c> just</c><00:33:55.430><c> stuck</c><00:33:55.670><c> with</c>

00:33:55.690 --> 00:33:55.700 align:start position:0%
differently if we were just stuck with
 

00:33:55.700 --> 00:33:57.340 align:start position:0%
differently if we were just stuck with
the<00:33:55.880><c> primitives</c><00:33:56.390><c> and</c><00:33:56.510><c> we</c><00:33:56.570><c> didn't</c><00:33:56.750><c> we</c><00:33:57.140><c> didn't</c>

00:33:57.340 --> 00:33:57.350 align:start position:0%
the primitives and we didn't we didn't
 

00:33:57.350 --> 00:33:59.830 align:start position:0%
the primitives and we didn't we didn't
want<00:33:57.500><c> to</c><00:33:57.530><c> add</c><00:33:57.680><c> complex</c><00:33:58.040><c> numbers</c><00:33:58.610><c> and</c><00:33:58.840><c> 256-bit</c>

00:33:59.830 --> 00:33:59.840 align:start position:0%
want to add complex numbers and 256-bit
 

00:33:59.840 --> 00:34:01.630 align:start position:0%
want to add complex numbers and 256-bit
numbers<00:34:00.200><c> but</c><00:34:00.380><c> we</c><00:34:00.830><c> want</c><00:34:01.010><c> it</c><00:34:01.100><c> we</c><00:34:01.280><c> want</c><00:34:01.430><c> those</c>

00:34:01.630 --> 00:34:01.640 align:start position:0%
numbers but we want it we want those
 

00:34:01.640 --> 00:34:03.610 align:start position:0%
numbers but we want it we want those
primitives<00:34:02.030><c> to</c><00:34:02.120><c> code</c><00:34:02.330><c> like</c><00:34:02.510><c> a</c><00:34:02.540><c> class</c><00:34:02.870><c> so</c><00:34:03.230><c> we're</c>

00:34:03.610 --> 00:34:03.620 align:start position:0%
primitives to code like a class so we're
 

00:34:03.620 --> 00:34:05.020 align:start position:0%
primitives to code like a class so we're
having<00:34:03.860><c> a</c><00:34:03.920><c> whole</c><00:34:04.070><c> new</c><00:34:04.250><c> universe</c><00:34:04.700><c> of</c><00:34:04.730><c> queue</c>

00:34:05.020 --> 00:34:05.030 align:start position:0%
having a whole new universe of queue
 

00:34:05.030 --> 00:34:07.900 align:start position:0%
having a whole new universe of queue
types<00:34:05.270><c> and</c><00:34:05.540><c> then</c><00:34:06.340><c> combined</c><00:34:07.340><c> with</c><00:34:07.370><c> the</c><00:34:07.550><c> l</c><00:34:07.670><c> types</c>

00:34:07.900 --> 00:34:07.910 align:start position:0%
types and then combined with the l types
 

00:34:07.910 --> 00:34:09.940 align:start position:0%
types and then combined with the l types
that<00:34:08.120><c> gives</c><00:34:08.330><c> you</c><00:34:08.450><c> a</c><00:34:08.480><c> universe</c><00:34:09.409><c> of</c><00:34:09.590><c> view</c><00:34:09.710><c> types</c>

00:34:09.940 --> 00:34:09.950 align:start position:0%
that gives you a universe of view types
 

00:34:09.950 --> 00:34:14.080 align:start position:0%
that gives you a universe of view types
at<00:34:10.550><c> the</c><00:34:10.640><c> top</c><00:34:12.580><c> this</c><00:34:13.580><c> means</c><00:34:13.820><c> there</c><00:34:13.940><c> will</c><00:34:14.030><c> be</c>

00:34:14.080 --> 00:34:14.090 align:start position:0%
at the top this means there will be
 

00:34:14.090 --> 00:34:16.120 align:start position:0%
at the top this means there will be
fewer<00:34:14.360><c> kinds</c><00:34:14.780><c> of</c><00:34:14.870><c> types</c><00:34:15.110><c> the</c><00:34:15.380><c> same</c><00:34:15.409><c> kinds</c><00:34:16.010><c> of</c>

00:34:16.120 --> 00:34:16.130 align:start position:0%
fewer kinds of types the same kinds of
 

00:34:16.130 --> 00:34:18.040 align:start position:0%
fewer kinds of types the same kinds of
code<00:34:16.340><c> will</c><00:34:16.610><c> work</c><00:34:16.760><c> on</c><00:34:16.940><c> all</c><00:34:16.970><c> values</c><00:34:17.659><c> you</c><00:34:17.899><c> won't</c>

00:34:18.040 --> 00:34:18.050 align:start position:0%
code will work on all values you won't
 

00:34:18.050 --> 00:34:19.840 align:start position:0%
code will work on all values you won't
have<00:34:18.200><c> to</c><00:34:18.320><c> say</c><00:34:18.470><c> well</c><00:34:18.679><c> my</c><00:34:18.830><c> coding</c><00:34:19.190><c> integers</c><00:34:19.640><c> or</c>

00:34:19.840 --> 00:34:19.850 align:start position:0%
have to say well my coding integers or
 

00:34:19.850 --> 00:34:22.240 align:start position:0%
have to say well my coding integers or
my<00:34:20.090><c> coding</c><00:34:20.480><c> in</c><00:34:20.600><c> today</c><00:34:21.080><c> because</c><00:34:21.800><c> you</c><00:34:21.890><c> code</c><00:34:22.070><c> them</c>

00:34:22.240 --> 00:34:22.250 align:start position:0%
my coding in today because you code them
 

00:34:22.250 --> 00:34:25.270 align:start position:0%
my coding in today because you code them
very<00:34:22.399><c> differently</c><00:34:22.790><c> right</c><00:34:24.280><c> implicit</c>

00:34:25.270 --> 00:34:25.280 align:start position:0%
very differently right implicit
 

00:34:25.280 --> 00:34:26.889 align:start position:0%
very differently right implicit
conversions<00:34:25.850><c> help</c><00:34:26.060><c> but</c><00:34:26.270><c> you</c><00:34:26.390><c> still</c><00:34:26.570><c> code</c><00:34:26.750><c> them</c>

00:34:26.889 --> 00:34:26.899 align:start position:0%
conversions help but you still code them
 

00:34:26.899 --> 00:34:30.159 align:start position:0%
conversions help but you still code them
very<00:34:27.080><c> differently</c><00:34:27.909><c> so</c><00:34:28.909><c> we'll</c><00:34:29.750><c> be</c><00:34:29.840><c> doing</c><00:34:29.960><c> the</c>

00:34:30.159 --> 00:34:30.169 align:start position:0%
very differently so we'll be doing the
 

00:34:30.169 --> 00:34:34.060 align:start position:0%
very differently so we'll be doing the
templated<00:34:30.679><c> classes</c><00:34:31.130><c> probably</c><00:34:31.690><c> and</c><00:34:32.890><c> then</c><00:34:33.890><c> that</c>

00:34:34.060 --> 00:34:34.070 align:start position:0%
templated classes probably and then that
 

00:34:34.070 --> 00:34:36.550 align:start position:0%
templated classes probably and then that
leads<00:34:34.280><c> to</c><00:34:34.550><c> what</c><00:34:35.270><c> about</c><00:34:35.450><c> can</c><00:34:35.690><c> you</c><00:34:35.780><c> code</c><00:34:35.990><c> objects</c>

00:34:36.550 --> 00:34:36.560 align:start position:0%
leads to what about can you code objects
 

00:34:36.560 --> 00:34:39.100 align:start position:0%
leads to what about can you code objects
like<00:34:36.770><c> primitives</c><00:34:37.520><c> can</c><00:34:38.330><c> you</c><00:34:38.419><c> do</c><00:34:38.659><c> operator</c>

00:34:39.100 --> 00:34:39.110 align:start position:0%
like primitives can you do operator
 

00:34:39.110 --> 00:34:43.210 align:start position:0%
like primitives can you do operator
overloading<00:34:39.530><c> I</c><00:34:39.980><c> don't</c><00:34:40.310><c> know</c><00:34:41.380><c> that's</c><00:34:42.380><c> that's</c><00:34:42.980><c> a</c>

00:34:43.210 --> 00:34:43.220 align:start position:0%
overloading I don't know that's that's a
 

00:34:43.220 --> 00:34:44.950 align:start position:0%
overloading I don't know that's that's a
I'm<00:34:43.700><c> putting</c><00:34:44.030><c> that</c><00:34:44.149><c> in</c><00:34:44.210><c> because</c><00:34:44.419><c> people</c><00:34:44.510><c> asked</c>

00:34:44.950 --> 00:34:44.960 align:start position:0%
I'm putting that in because people asked
 

00:34:44.960 --> 00:34:46.720 align:start position:0%
I'm putting that in because people asked
for<00:34:45.260><c> it</c><00:34:45.350><c> but</c><00:34:45.590><c> I'm</c><00:34:45.950><c> not</c><00:34:46.159><c> sure</c><00:34:46.220><c> how</c><00:34:46.460><c> we're</c><00:34:46.610><c> going</c>

00:34:46.720 --> 00:34:46.730 align:start position:0%
for it but I'm not sure how we're going
 

00:34:46.730 --> 00:34:47.889 align:start position:0%
for it but I'm not sure how we're going
to<00:34:46.790><c> do</c><00:34:46.880><c> that</c><00:34:47.030><c> one</c><00:34:47.210><c> yet</c><00:34:47.360><c> because</c><00:34:47.480><c> operator</c>

00:34:47.889 --> 00:34:47.899 align:start position:0%
to do that one yet because operator
 

00:34:47.899 --> 00:34:50.169 align:start position:0%
to do that one yet because operator
overloading<00:34:48.169><c> is</c><00:34:48.500><c> a</c><00:34:48.530><c> real</c><00:34:48.940><c> what</c><00:34:49.940><c> you</c><00:34:50.000><c> call</c><00:34:50.149><c> a</c>

00:34:50.169 --> 00:34:50.179 align:start position:0%
overloading is a real what you call a
 

00:34:50.179 --> 00:34:56.980 align:start position:0%
overloading is a real what you call a
moral<00:34:50.540><c> hazard</c><00:34:50.950><c> it</c><00:34:51.970><c> attracts</c><00:34:52.970><c> bad</c><00:34:53.210><c> actors</c><00:34:55.990><c> so</c>

00:34:56.980 --> 00:34:56.990 align:start position:0%
moral hazard it attracts bad actors so
 

00:34:56.990 --> 00:34:59.530 align:start position:0%
moral hazard it attracts bad actors so
in<00:34:57.110><c> any</c><00:34:57.260><c> case</c><00:34:57.520><c> one</c><00:34:58.520><c> more</c><00:34:58.670><c> word</c><00:34:58.880><c> about</c><00:34:59.000><c> what</c>

00:34:59.530 --> 00:34:59.540 align:start position:0%
in any case one more word about what
 

00:34:59.540 --> 00:35:01.420 align:start position:0%
in any case one more word about what
template<00:34:59.900><c> classes</c><00:35:00.320><c> look</c><00:35:00.500><c> like</c><00:35:00.650><c> right</c><00:35:01.160><c> now</c><00:35:01.400><c> a</c>

00:35:01.420 --> 00:35:01.430 align:start position:0%
template classes look like right now a
 

00:35:01.430 --> 00:35:03.840 align:start position:0%
template classes look like right now a
template<00:35:02.150><c> class</c><00:35:02.390><c> looks</c><00:35:02.840><c> kind</c><00:35:03.140><c> of</c><00:35:03.200><c> like</c><00:35:03.380><c> a</c>

00:35:03.840 --> 00:35:03.850 align:start position:0%
template class looks kind of like a
 

00:35:03.850 --> 00:35:06.430 align:start position:0%
template class looks kind of like a
thing<00:35:04.850><c> whose</c><00:35:05.210><c> constants</c><00:35:05.840><c> vary</c><00:35:06.080><c> the</c><00:35:06.290><c> code</c>

00:35:06.430 --> 00:35:06.440 align:start position:0%
thing whose constants vary the code
 

00:35:06.440 --> 00:35:08.650 align:start position:0%
thing whose constants vary the code
doesn't<00:35:06.800><c> vary</c><00:35:07.010><c> the</c><00:35:07.730><c> names</c><00:35:07.970><c> in</c><00:35:08.240><c> the</c><00:35:08.330><c> code</c><00:35:08.510><c> don't</c>

00:35:08.650 --> 00:35:08.660 align:start position:0%
doesn't vary the names in the code don't
 

00:35:08.660 --> 00:35:10.630 align:start position:0%
doesn't vary the names in the code don't
vary<00:35:08.990><c> but</c><00:35:09.200><c> the</c><00:35:09.320><c> constants</c><00:35:09.920><c> vary</c><00:35:10.190><c> so</c><00:35:10.460><c> the</c>

00:35:10.630 --> 00:35:10.640 align:start position:0%
vary but the constants vary so the
 

00:35:10.640 --> 00:35:12.490 align:start position:0%
vary but the constants vary so the
template<00:35:11.210><c> class</c><00:35:11.480><c> has</c><00:35:11.720><c> holes</c><00:35:12.050><c> and</c><00:35:12.380><c> it's</c>

00:35:12.490 --> 00:35:12.500 align:start position:0%
template class has holes and it's
 

00:35:12.500 --> 00:35:14.020 align:start position:0%
template class has holes and it's
constant<00:35:12.920><c> pool</c><00:35:13.070><c> which</c><00:35:13.220><c> you</c><00:35:13.340><c> fill</c><00:35:13.550><c> in</c><00:35:13.730><c> when</c><00:35:13.940><c> you</c>

00:35:14.020 --> 00:35:14.030 align:start position:0%
constant pool which you fill in when you
 

00:35:14.030 --> 00:35:15.730 align:start position:0%
constant pool which you fill in when you
make<00:35:14.180><c> a</c><00:35:14.210><c> species</c><00:35:14.690><c> so</c><00:35:15.110><c> this</c><00:35:15.350><c> is</c><00:35:15.410><c> going</c><00:35:15.530><c> to</c><00:35:15.590><c> be</c><00:35:15.650><c> on</c>

00:35:15.730 --> 00:35:15.740 align:start position:0%
make a species so this is going to be on
 

00:35:15.740 --> 00:35:17.260 align:start position:0%
make a species so this is going to be on
in<00:35:15.980><c> this</c><00:35:16.100><c> is</c><00:35:16.280><c> going</c><00:35:16.520><c> to</c><00:35:16.580><c> be</c><00:35:16.640><c> on</c><00:35:16.700><c> doubles</c><00:35:17.090><c> is</c>

00:35:17.260 --> 00:35:17.270 align:start position:0%
in this is going to be on doubles is
 

00:35:17.270 --> 00:35:19.450 align:start position:0%
in this is going to be on doubles is
going<00:35:17.480><c> to</c><00:35:17.540><c> be</c><00:35:17.630><c> on</c><00:35:17.720><c> complex</c><00:35:18.110><c> numbers</c>

00:35:19.450 --> 00:35:19.460 align:start position:0%
going to be on complex numbers
 

00:35:19.460 --> 00:35:21.550 align:start position:0%
going to be on complex numbers
it<00:35:20.180><c> requires</c><00:35:20.480><c> a</c><00:35:20.570><c> lot</c><00:35:20.780><c> of</c><00:35:20.900><c> deep</c><00:35:21.050><c> thinking</c><00:35:21.350><c> about</c>

00:35:21.550 --> 00:35:21.560 align:start position:0%
it requires a lot of deep thinking about
 

00:35:21.560 --> 00:35:23.440 align:start position:0%
it requires a lot of deep thinking about
what's<00:35:21.710><c> in</c><00:35:21.860><c> constant</c><00:35:22.340><c> pools</c><00:35:22.550><c> but</c><00:35:23.000><c> the</c><00:35:23.150><c> hardest</c>

00:35:23.440 --> 00:35:23.450 align:start position:0%
what's in constant pools but the hardest
 

00:35:23.450 --> 00:35:25.200 align:start position:0%
what's in constant pools but the hardest
problem<00:35:23.810><c> the</c><00:35:23.900><c> reason</c><00:35:24.020><c> I</c><00:35:24.200><c> say</c><00:35:24.620><c> it's</c><00:35:24.800><c> about</c>

00:35:25.200 --> 00:35:25.210 align:start position:0%
problem the reason I say it's about
 

00:35:25.210 --> 00:35:28.330 align:start position:0%
problem the reason I say it's about
constant<00:35:26.210><c> pools</c><00:35:26.450><c> and</c><00:35:26.780><c> not</c><00:35:27.260><c> about</c><00:35:27.560><c> customizing</c>

00:35:28.330 --> 00:35:28.340 align:start position:0%
constant pools and not about customizing
 

00:35:28.340 --> 00:35:31.510 align:start position:0%
constant pools and not about customizing
code<00:35:28.820><c> in</c><00:35:29.120><c> C++</c><00:35:29.360><c> templates</c><00:35:30.260><c> are</c><00:35:30.440><c> expanders</c><00:35:31.310><c> for</c>

00:35:31.510 --> 00:35:31.520 align:start position:0%
code in C++ templates are expanders for
 

00:35:31.520 --> 00:35:33.580 align:start position:0%
code in C++ templates are expanders for
code<00:35:31.730><c> right</c><00:35:32.030><c> but</c><00:35:32.840><c> I</c><00:35:32.870><c> don't</c><00:35:32.990><c> want</c><00:35:33.260><c> to</c><00:35:33.320><c> do</c><00:35:33.440><c> that</c>

00:35:33.580 --> 00:35:33.590 align:start position:0%
code right but I don't want to do that
 

00:35:33.590 --> 00:35:36.010 align:start position:0%
code right but I don't want to do that
because<00:35:33.800><c> what</c><00:35:34.130><c> we</c><00:35:34.880><c> want</c><00:35:35.030><c> to</c><00:35:35.150><c> do</c><00:35:35.270><c> in</c><00:35:35.420><c> Java</c><00:35:35.720><c> is</c>

00:35:36.010 --> 00:35:36.020 align:start position:0%
because what we want to do in Java is
 

00:35:36.020 --> 00:35:38.860 align:start position:0%
because what we want to do in Java is
since<00:35:36.980><c> we're</c><00:35:37.160><c> we're</c><00:35:37.760><c> late</c><00:35:37.910><c> adopters</c><00:35:38.630><c> of</c><00:35:38.660><c> this</c>

00:35:38.860 --> 00:35:38.870 align:start position:0%
since we're we're late adopters of this
 

00:35:38.870 --> 00:35:40.390 align:start position:0%
since we're we're late adopters of this
kind<00:35:39.110><c> of</c><00:35:39.140><c> technology</c><00:35:39.710><c> we</c><00:35:39.830><c> can</c><00:35:39.950><c> make</c><00:35:40.070><c> different</c>

00:35:40.390 --> 00:35:40.400 align:start position:0%
kind of technology we can make different
 

00:35:40.400 --> 00:35:42.820 align:start position:0%
kind of technology we can make different
choices<00:35:40.550><c> and</c><00:35:40.820><c> be</c><00:35:41.060><c> smart</c><00:35:41.660><c> I</c><00:35:41.810><c> want</c><00:35:42.560><c> to</c><00:35:42.620><c> avoid</c>

00:35:42.820 --> 00:35:42.830 align:start position:0%
choices and be smart I want to avoid
 

00:35:42.830 --> 00:35:44.290 align:start position:0%
choices and be smart I want to avoid
code<00:35:43.130><c> splitting</c><00:35:43.460><c> I</c><00:35:43.580><c> want</c><00:35:43.700><c> to</c><00:35:43.760><c> have</c><00:35:43.850><c> one</c><00:35:44.030><c> copy</c>

00:35:44.290 --> 00:35:44.300 align:start position:0%
code splitting I want to have one copy
 

00:35:44.300 --> 00:35:46.780 align:start position:0%
code splitting I want to have one copy
of<00:35:44.600><c> code</c><00:35:44.870><c> that</c><00:35:45.410><c> runs</c><00:35:45.590><c> for</c><00:35:45.920><c> all</c><00:35:46.070><c> versions</c><00:35:46.400><c> of</c><00:35:46.670><c> a</c>

00:35:46.780 --> 00:35:46.790 align:start position:0%
of code that runs for all versions of a
 

00:35:46.790 --> 00:35:50.110 align:start position:0%
of code that runs for all versions of a
template<00:35:47.350><c> until</c><00:35:48.350><c> you</c><00:35:48.610><c> approve</c><00:35:49.610><c> that</c><00:35:49.850><c> you</c><00:35:49.970><c> need</c>

00:35:50.110 --> 00:35:50.120 align:start position:0%
template until you approve that you need
 

00:35:50.120 --> 00:35:52.000 align:start position:0%
template until you approve that you need
to<00:35:50.240><c> optimize</c><00:35:50.690><c> it</c><00:35:50.900><c> for</c><00:35:50.930><c> a</c><00:35:51.080><c> particular</c><00:35:51.500><c> type</c><00:35:51.740><c> you</c>

00:35:52.000 --> 00:35:52.010 align:start position:0%
to optimize it for a particular type you
 

00:35:52.010 --> 00:35:55.270 align:start position:0%
to optimize it for a particular type you
make<00:35:52.190><c> a</c><00:35:52.220><c> hot</c><00:35:52.670><c> spot</c><00:35:53.260><c> concept</c><00:35:54.260><c> huh</c><00:35:54.470><c> and</c><00:35:54.680><c> then</c>

00:35:55.270 --> 00:35:55.280 align:start position:0%
make a hot spot concept huh and then
 

00:35:55.280 --> 00:35:57.550 align:start position:0%
make a hot spot concept huh and then
once<00:35:56.090><c> you</c><00:35:56.210><c> get</c><00:35:56.390><c> a</c><00:35:56.420><c> hot</c><00:35:56.600><c> spot</c><00:35:56.840><c> in</c><00:35:56.990><c> a</c><00:35:57.110><c> particular</c>

00:35:57.550 --> 00:35:57.560 align:start position:0%
once you get a hot spot in a particular
 

00:35:57.560 --> 00:35:59.020 align:start position:0%
once you get a hot spot in a particular
species<00:35:57.980><c> in</c><00:35:58.070><c> a</c><00:35:58.130><c> particular</c><00:35:58.220><c> template</c><00:35:58.850><c> then</c>

00:35:59.020 --> 00:35:59.030 align:start position:0%
species in a particular template then
 

00:35:59.030 --> 00:36:00.880 align:start position:0%
species in a particular template then
you<00:35:59.450><c> do</c><00:35:59.570><c> the</c><00:35:59.720><c> usual</c><00:35:59.840><c> inlining</c><00:36:00.470><c> thing</c><00:36:00.680><c> and</c><00:36:00.830><c> you</c>

00:36:00.880 --> 00:36:00.890 align:start position:0%
you do the usual inlining thing and you
 

00:36:00.890 --> 00:36:02.440 align:start position:0%
you do the usual inlining thing and you
get<00:36:00.980><c> optimal</c><00:36:01.460><c> code</c><00:36:01.610><c> for</c><00:36:01.850><c> that</c><00:36:01.880><c> particular</c>

00:36:02.440 --> 00:36:02.450 align:start position:0%
get optimal code for that particular
 

00:36:02.450 --> 00:36:07.060 align:start position:0%
get optimal code for that particular
type<00:36:04.300><c> small</c><00:36:05.300><c> our</c><00:36:05.450><c> ideas</c><00:36:05.780><c> time</c><00:36:06.710><c> check</c><00:36:06.950><c> can</c>

00:36:07.060 --> 00:36:07.070 align:start position:0%
type small our ideas time check can
 

00:36:07.070 --> 00:36:08.320 align:start position:0%
type small our ideas time check can
someone<00:36:07.310><c> tell</c><00:36:07.460><c> me</c><00:36:07.580><c> how</c><00:36:07.730><c> much</c><00:36:07.850><c> time</c><00:36:07.910><c> I</c><00:36:08.150><c> have</c>

00:36:08.320 --> 00:36:08.330 align:start position:0%
someone tell me how much time I have
 

00:36:08.330 --> 00:36:12.910 align:start position:0%
someone tell me how much time I have
left<00:36:08.980><c> I'm</c><00:36:10.300><c> 15</c><00:36:11.330><c> excellent</c><00:36:12.020><c> all</c><00:36:12.200><c> right</c><00:36:12.590><c> I'll</c>

00:36:12.910 --> 00:36:12.920 align:start position:0%
left I'm 15 excellent all right I'll
 

00:36:12.920 --> 00:36:15.480 align:start position:0%
left I'm 15 excellent all right I'll
just<00:36:13.130><c> speed</c><00:36:13.550><c> up</c><00:36:13.580><c> even</c><00:36:13.790><c> more</c>

00:36:15.480 --> 00:36:15.490 align:start position:0%
just speed up even more
 

00:36:15.490 --> 00:36:18.730 align:start position:0%
just speed up even more
smaller<00:36:16.490><c> ideas</c><00:36:16.760><c> these</c><00:36:17.120><c> are</c><00:36:17.270><c> ideas</c><00:36:17.690><c> which</c><00:36:17.990><c> are</c>

00:36:18.730 --> 00:36:18.740 align:start position:0%
smaller ideas these are ideas which are
 

00:36:18.740 --> 00:36:20.800 align:start position:0%
smaller ideas these are ideas which are
sort<00:36:19.310><c> of</c><00:36:19.400><c> easier</c><00:36:19.670><c> to</c><00:36:19.820><c> wrap</c><00:36:20.180><c> one's</c><00:36:20.570><c> head</c><00:36:20.780><c> around</c>

00:36:20.800 --> 00:36:20.810 align:start position:0%
sort of easier to wrap one's head around
 

00:36:20.810 --> 00:36:22.720 align:start position:0%
sort of easier to wrap one's head around
stack<00:36:21.320><c> introspection</c><00:36:21.980><c> I</c><00:36:22.070><c> already</c><00:36:22.310><c> mentioned</c>

00:36:22.720 --> 00:36:22.730 align:start position:0%
stack introspection I already mentioned
 

00:36:22.730 --> 00:36:25.120 align:start position:0%
stack introspection I already mentioned
length<00:36:23.540><c> polymorphism</c><00:36:24.350><c> is</c><00:36:24.440><c> the</c><00:36:24.530><c> idea</c><00:36:24.830><c> that</c><00:36:24.890><c> an</c>

00:36:25.120 --> 00:36:25.130 align:start position:0%
length polymorphism is the idea that an
 

00:36:25.130 --> 00:36:27.460 align:start position:0%
length polymorphism is the idea that an
object<00:36:25.520><c> might</c><00:36:25.730><c> an</c><00:36:26.660><c> object</c><00:36:26.990><c> of</c><00:36:27.080><c> one</c><00:36:27.230><c> class</c>

00:36:27.460 --> 00:36:27.470 align:start position:0%
object might an object of one class
 

00:36:27.470 --> 00:36:29.230 align:start position:0%
object might an object of one class
might<00:36:27.830><c> have</c><00:36:28.040><c> a</c><00:36:28.070><c> length</c><00:36:28.520><c> it's</c><00:36:28.730><c> different</c><00:36:29.030><c> from</c>

00:36:29.230 --> 00:36:29.240 align:start position:0%
might have a length it's different from
 

00:36:29.240 --> 00:36:31.060 align:start position:0%
might have a length it's different from
an<00:36:29.330><c> object</c><00:36:29.630><c> of</c><00:36:29.720><c> the</c><00:36:29.810><c> same</c><00:36:29.990><c> class</c><00:36:30.260><c> arrays</c><00:36:30.830><c> are</c>

00:36:31.060 --> 00:36:31.070 align:start position:0%
an object of the same class arrays are
 

00:36:31.070 --> 00:36:34.120 align:start position:0%
an object of the same class arrays are
like<00:36:31.190><c> this</c><00:36:31.400><c> let's</c><00:36:32.120><c> generalize</c><00:36:32.480><c> it</c><00:36:33.130><c> bootstrap</c>

00:36:34.120 --> 00:36:34.130 align:start position:0%
like this let's generalize it bootstrap
 

00:36:34.130 --> 00:36:36.610 align:start position:0%
like this let's generalize it bootstrap
methods<00:36:34.490><c> everywhere</c><00:36:35.110><c> this</c><00:36:36.110><c> is</c><00:36:36.260><c> something</c><00:36:36.530><c> we</c>

00:36:36.610 --> 00:36:36.620 align:start position:0%
methods everywhere this is something we
 

00:36:36.620 --> 00:36:39.070 align:start position:0%
methods everywhere this is something we
talked<00:36:36.830><c> about</c><00:36:36.950><c> in</c><00:36:37.130><c> the</c><00:36:37.370><c> previous</c><00:36:37.580><c> hour</c><00:36:38.060><c> in</c><00:36:38.540><c> the</c>

00:36:39.070 --> 00:36:39.080 align:start position:0%
talked about in the previous hour in the
 

00:36:39.080 --> 00:36:41.860 align:start position:0%
talked about in the previous hour in the
invocation<00:36:39.350><c> game</c><00:36:39.860><c> and</c><00:36:40.330><c> immutability</c><00:36:41.330><c> you</c>

00:36:41.860 --> 00:36:41.870 align:start position:0%
invocation game and immutability you
 

00:36:41.870 --> 00:36:44.200 align:start position:0%
invocation game and immutability you
know<00:36:41.960><c> that's</c><00:36:42.380><c> the</c><00:36:42.500><c> removing</c><00:36:43.460><c> of</c><00:36:43.610><c> needless</c>

00:36:44.200 --> 00:36:44.210 align:start position:0%
know that's the removing of needless
 

00:36:44.210 --> 00:36:45.610 align:start position:0%
know that's the removing of needless
degrees<00:36:44.720><c> of</c><00:36:44.870><c> freedom</c><00:36:45.170><c> in</c><00:36:45.290><c> your</c><00:36:45.320><c> data</c>

00:36:45.610 --> 00:36:45.620 align:start position:0%
degrees of freedom in your data
 

00:36:45.620 --> 00:36:49.390 align:start position:0%
degrees of freedom in your data
structure<00:36:46.750><c> I</c><00:36:47.770><c> don't</c><00:36:48.770><c> have</c><00:36:48.890><c> time</c><00:36:49.040><c> to</c><00:36:49.160><c> go</c><00:36:49.250><c> into</c>

00:36:49.390 --> 00:36:49.400 align:start position:0%
structure I don't have time to go into
 

00:36:49.400 --> 00:36:50.860 align:start position:0%
structure I don't have time to go into
all<00:36:49.550><c> these</c><00:36:49.760><c> so</c><00:36:50.000><c> I'm</c><00:36:50.090><c> just</c><00:36:50.240><c> going</c><00:36:50.390><c> to</c><00:36:50.420><c> go</c><00:36:50.840><c> over</c>

00:36:50.860 --> 00:36:50.870 align:start position:0%
all these so I'm just going to go over
 

00:36:50.870 --> 00:36:52.630 align:start position:0%
all these so I'm just going to go over
it<00:36:51.200><c> really</c><00:36:51.320><c> fast</c><00:36:51.650><c> but</c><00:36:51.800><c> I</c><00:36:51.860><c> do</c><00:36:51.950><c> want</c><00:36:52.190><c> to</c><00:36:52.220><c> say</c><00:36:52.430><c> that</c>

00:36:52.630 --> 00:36:52.640 align:start position:0%
it really fast but I do want to say that
 

00:36:52.640 --> 00:36:53.890 align:start position:0%
it really fast but I do want to say that
these<00:36:52.790><c> things</c><00:36:53.000><c> all</c><00:36:53.210><c> fit</c><00:36:53.390><c> together</c><00:36:53.510><c> in</c>

00:36:53.890 --> 00:36:53.900 align:start position:0%
these things all fit together in
 

00:36:53.900 --> 00:36:54.640 align:start position:0%
these things all fit together in
surprising<00:36:54.440><c> ways</c>

00:36:54.640 --> 00:36:54.650 align:start position:0%
surprising ways
 

00:36:54.650 --> 00:36:56.710 align:start position:0%
surprising ways
each<00:36:55.280><c> one</c><00:36:55.550><c> is</c><00:36:55.640><c> understandable</c><00:36:56.300><c> in</c><00:36:56.390><c> its</c><00:36:56.570><c> own</c>

00:36:56.710 --> 00:36:56.720 align:start position:0%
each one is understandable in its own
 

00:36:56.720 --> 00:36:58.630 align:start position:0%
each one is understandable in its own
its<00:36:57.260><c> own</c><00:36:57.410><c> right</c><00:36:57.590><c> but</c><00:36:57.800><c> then</c><00:36:57.950><c> when</c><00:36:58.340><c> you</c><00:36:58.430><c> build</c>

00:36:58.630 --> 00:36:58.640 align:start position:0%
its own right but then when you build
 

00:36:58.640 --> 00:36:59.950 align:start position:0%
its own right but then when you build
them<00:36:58.790><c> together</c><00:36:58.970><c> you</c><00:36:59.300><c> get</c><00:36:59.390><c> a</c><00:36:59.450><c> system</c><00:36:59.810><c> that's</c>

00:36:59.950 --> 00:36:59.960 align:start position:0%
them together you get a system that's
 

00:36:59.960 --> 00:37:01.770 align:start position:0%
them together you get a system that's
more<00:37:00.140><c> than</c><00:37:00.290><c> the</c><00:37:00.410><c> sum</c><00:37:00.590><c> of</c><00:37:00.620><c> its</c><00:37:00.800><c> parts</c>

00:37:01.770 --> 00:37:01.780 align:start position:0%
more than the sum of its parts
 

00:37:01.780 --> 00:37:04.360 align:start position:0%
more than the sum of its parts
so<00:37:02.780><c> we</c><00:37:03.080><c> want</c><00:37:03.230><c> to</c><00:37:03.290><c> be</c><00:37:03.350><c> able</c><00:37:03.410><c> to</c><00:37:03.500><c> walk</c><00:37:03.770><c> live</c><00:37:04.040><c> stack</c>

00:37:04.360 --> 00:37:04.370 align:start position:0%
so we want to be able to walk live stack
 

00:37:04.370 --> 00:37:07.300 align:start position:0%
so we want to be able to walk live stack
frames<00:37:04.670><c> see</c><00:37:04.970><c> even</c><00:37:05.470><c> if</c><00:37:06.470><c> you</c><00:37:06.590><c> have</c><00:37:06.710><c> privileges</c>

00:37:07.300 --> 00:37:07.310 align:start position:0%
frames see even if you have privileges
 

00:37:07.310 --> 00:37:08.950 align:start position:0%
frames see even if you have privileges
see<00:37:07.550><c> temporary</c><00:37:08.000><c> values</c><00:37:08.420><c> that</c><00:37:08.540><c> are</c><00:37:08.660><c> stored</c><00:37:08.840><c> in</c>

00:37:08.950 --> 00:37:08.960 align:start position:0%
see temporary values that are stored in
 

00:37:08.960 --> 00:37:10.570 align:start position:0%
see temporary values that are stored in
the<00:37:09.080><c> stack</c><00:37:09.140><c> frames</c><00:37:09.500><c> to</c><00:37:09.980><c> the</c><00:37:10.100><c> point</c><00:37:10.310><c> where</c><00:37:10.430><c> we</c>

00:37:10.570 --> 00:37:10.580 align:start position:0%
the stack frames to the point where we
 

00:37:10.580 --> 00:37:12.730 align:start position:0%
the stack frames to the point where we
would<00:37:10.760><c> be</c><00:37:10.850><c> able</c><00:37:10.880><c> to</c><00:37:11.180><c> strip</c><00:37:12.020><c> us</c><00:37:12.170><c> the</c><00:37:12.530><c> stack</c>

00:37:12.730 --> 00:37:12.740 align:start position:0%
would be able to strip us the stack
 

00:37:12.740 --> 00:37:15.130 align:start position:0%
would be able to strip us the stack
frames<00:37:12.980><c> out</c><00:37:13.160><c> of</c><00:37:13.280><c> a</c><00:37:13.340><c> stack</c><00:37:13.610><c> record</c><00:37:14.510><c> what</c><00:37:14.960><c> the</c>

00:37:15.130 --> 00:37:15.140 align:start position:0%
frames out of a stack record what the
 

00:37:15.140 --> 00:37:17.500 align:start position:0%
frames out of a stack record what the
stack<00:37:15.380><c> was</c><00:37:15.590><c> doing</c><00:37:15.980><c> throw</c><00:37:16.610><c> it</c><00:37:16.790><c> away</c><00:37:16.910><c> and</c><00:37:17.300><c> then</c>

00:37:17.500 --> 00:37:17.510 align:start position:0%
stack was doing throw it away and then
 

00:37:17.510 --> 00:37:19.630 align:start position:0%
stack was doing throw it away and then
later<00:37:17.720><c> on</c><00:37:17.810><c> reconstitute</c><00:37:18.770><c> it</c><00:37:18.920><c> and</c><00:37:19.100><c> continue</c>

00:37:19.630 --> 00:37:19.640 align:start position:0%
later on reconstitute it and continue
 

00:37:19.640 --> 00:37:21.640 align:start position:0%
later on reconstitute it and continue
doing<00:37:19.970><c> it</c><00:37:20.210><c> what</c><00:37:20.660><c> it</c><00:37:20.750><c> was</c><00:37:20.900><c> doing</c><00:37:21.080><c> from</c><00:37:21.530><c> that</c>

00:37:21.640 --> 00:37:21.650 align:start position:0%
doing it what it was doing from that
 

00:37:21.650 --> 00:37:23.440 align:start position:0%
doing it what it was doing from that
point<00:37:21.890><c> forward</c><00:37:22.130><c> sound</c><00:37:23.060><c> like</c><00:37:23.180><c> a</c><00:37:23.210><c> useful</c>

00:37:23.440 --> 00:37:23.450 align:start position:0%
point forward sound like a useful
 

00:37:23.450 --> 00:37:28.570 align:start position:0%
point forward sound like a useful
operation<00:37:23.990><c> like</c><00:37:24.890><c> checkpoint</c><00:37:25.430><c> restore</c><00:37:27.370><c> so</c><00:37:28.370><c> we</c>

00:37:28.570 --> 00:37:28.580 align:start position:0%
operation like checkpoint restore so we
 

00:37:28.580 --> 00:37:31.880 align:start position:0%
operation like checkpoint restore so we
right<00:37:28.880><c> now</c><00:37:28.910><c> we</c><00:37:29.090><c> have</c><00:37:29.330><c> full</c><00:37:29.540><c> observing</c>

00:37:31.880 --> 00:37:31.890 align:start position:0%
right now we have full observing
 

00:37:31.890 --> 00:37:33.740 align:start position:0%
right now we have full observing
and<00:37:32.029><c> eventually</c><00:37:33.029><c> we</c><00:37:33.240><c> want</c><00:37:33.359><c> to</c><00:37:33.480><c> be</c><00:37:33.539><c> able</c><00:37:33.599><c> to</c>

00:37:33.740 --> 00:37:33.750 align:start position:0%
and eventually we want to be able to
 

00:37:33.750 --> 00:37:39.410 align:start position:0%
and eventually we want to be able to
edit<00:37:33.869><c> it</c><00:37:36.559><c> various</c><00:37:37.559><c> applications</c><00:37:38.220><c> this</c><00:37:39.119><c> all</c>

00:37:39.410 --> 00:37:39.420 align:start position:0%
edit it various applications this all
 

00:37:39.420 --> 00:37:41.630 align:start position:0%
edit it various applications this all
this<00:37:39.750><c> will</c><00:37:39.900><c> be</c><00:37:40.019><c> on</c><00:37:40.140><c> the</c><00:37:40.170><c> web</c><00:37:40.410><c> so</c><00:37:41.279><c> you</c><00:37:41.309><c> can</c><00:37:41.519><c> look</c>

00:37:41.630 --> 00:37:41.640 align:start position:0%
this will be on the web so you can look
 

00:37:41.640 --> 00:37:44.269 align:start position:0%
this will be on the web so you can look
at<00:37:41.760><c> it</c><00:37:41.880><c> later</c><00:37:41.970><c> length</c><00:37:42.980><c> polymorphism</c><00:37:43.980><c> fused</c>

00:37:44.269 --> 00:37:44.279 align:start position:0%
at it later length polymorphism fused
 

00:37:44.279 --> 00:37:46.640 align:start position:0%
at it later length polymorphism fused
arrays<00:37:44.609><c> what</c><00:37:44.910><c> if</c><00:37:45.000><c> you</c><00:37:45.119><c> have</c><00:37:45.329><c> a</c><00:37:45.440><c> what</c><00:37:46.440><c> if</c><00:37:46.529><c> you</c>

00:37:46.640 --> 00:37:46.650 align:start position:0%
arrays what if you have a what if you
 

00:37:46.650 --> 00:37:48.620 align:start position:0%
arrays what if you have a what if you
know<00:37:46.799><c> that</c><00:37:46.980><c> this</c><00:37:47.130><c> list</c><00:37:47.400><c> is</c><00:37:47.640><c> an</c><00:37:47.789><c> immutable</c><00:37:48.150><c> list</c>

00:37:48.620 --> 00:37:48.630 align:start position:0%
know that this list is an immutable list
 

00:37:48.630 --> 00:37:51.289 align:start position:0%
know that this list is an immutable list
that<00:37:49.559><c> will</c><00:37:49.740><c> always</c><00:37:49.950><c> have</c><00:37:50.220><c> just</c><00:37:50.460><c> four</c><00:37:50.789><c> elements</c>

00:37:51.289 --> 00:37:51.299 align:start position:0%
that will always have just four elements
 

00:37:51.299 --> 00:37:53.329 align:start position:0%
that will always have just four elements
in<00:37:51.420><c> it</c><00:37:51.569><c> shouldn't</c><00:37:52.140><c> just</c><00:37:52.289><c> be</c><00:37:52.440><c> one</c><00:37:52.710><c> object</c><00:37:53.190><c> with</c>

00:37:53.329 --> 00:37:53.339 align:start position:0%
in it shouldn't just be one object with
 

00:37:53.339 --> 00:37:55.640 align:start position:0%
in it shouldn't just be one object with
a<00:37:53.369><c> header</c><00:37:53.640><c> and</c><00:37:53.910><c> then</c><00:37:54.359><c> four</c><00:37:54.660><c> fields</c><00:37:55.049><c> of</c><00:37:55.319><c> course</c>

00:37:55.640 --> 00:37:55.650 align:start position:0%
a header and then four fields of course
 

00:37:55.650 --> 00:37:58.009 align:start position:0%
a header and then four fields of course
it<00:37:55.799><c> should</c><00:37:56.029><c> the</c><00:37:57.029><c> JVM</c><00:37:57.390><c> can't</c><00:37:57.630><c> express</c><00:37:57.930><c> that</c>

00:37:58.009 --> 00:37:58.019 align:start position:0%
it should the JVM can't express that
 

00:37:58.019 --> 00:37:59.539 align:start position:0%
it should the JVM can't express that
very<00:37:58.380><c> well</c><00:37:58.529><c> yet</c><00:37:58.799><c> but</c><00:37:59.039><c> we're</c><00:37:59.250><c> going</c><00:37:59.339><c> to</c><00:37:59.400><c> get</c>

00:37:59.539 --> 00:37:59.549 align:start position:0%
very well yet but we're going to get
 

00:37:59.549 --> 00:38:01.700 align:start position:0%
very well yet but we're going to get
there<00:37:59.819><c> also</c><00:38:00.119><c> strings</c><00:38:00.750><c> why</c><00:38:00.960><c> do</c><00:38:01.019><c> strings</c><00:38:01.440><c> have</c>

00:38:01.700 --> 00:38:01.710 align:start position:0%
there also strings why do strings have
 

00:38:01.710 --> 00:38:04.640 align:start position:0%
there also strings why do strings have
have<00:38:02.519><c> a</c><00:38:02.549><c> sub</c><00:38:03.119><c> object</c><00:38:03.510><c> that's</c><00:38:03.599><c> an</c><00:38:03.750><c> array</c><00:38:04.019><c> well</c>

00:38:04.640 --> 00:38:04.650 align:start position:0%
have a sub object that's an array well
 

00:38:04.650 --> 00:38:06.319 align:start position:0%
have a sub object that's an array well
it's<00:38:04.859><c> just</c><00:38:04.950><c> history</c><00:38:05.430><c> it's</c><00:38:05.609><c> the</c><00:38:05.700><c> way</c><00:38:05.880><c> it's</c><00:38:06.210><c> the</c>

00:38:06.319 --> 00:38:06.329 align:start position:0%
it's just history it's the way it's the
 

00:38:06.329 --> 00:38:07.759 align:start position:0%
it's just history it's the way it's the
way<00:38:06.450><c> we've</c><00:38:06.660><c> always</c><00:38:06.809><c> built</c><00:38:07.200><c> things</c><00:38:07.289><c> but</c><00:38:07.680><c> it</c>

00:38:07.759 --> 00:38:07.769 align:start position:0%
way we've always built things but it
 

00:38:07.769 --> 00:38:09.470 align:start position:0%
way we've always built things but it
doesn't<00:38:07.980><c> have</c><00:38:08.099><c> to</c><00:38:08.220><c> be</c><00:38:08.309><c> like</c><00:38:08.460><c> that</c><00:38:08.609><c> a</c><00:38:08.849><c> string</c>

00:38:09.470 --> 00:38:09.480 align:start position:0%
doesn't have to be like that a string
 

00:38:09.480 --> 00:38:11.089 align:start position:0%
doesn't have to be like that a string
after<00:38:09.839><c> all</c><00:38:09.990><c> it</c><00:38:10.170><c> has</c><00:38:10.289><c> a</c><00:38:10.319><c> fixed</c><00:38:10.710><c> length</c><00:38:10.890><c> it</c>

00:38:11.089 --> 00:38:11.099 align:start position:0%
after all it has a fixed length it
 

00:38:11.099 --> 00:38:13.789 align:start position:0%
after all it has a fixed length it
should<00:38:11.279><c> be</c><00:38:11.460><c> string</c><00:38:12.180><c> header</c><00:38:12.420><c> and</c><00:38:12.720><c> then</c><00:38:13.109><c> the</c><00:38:13.500><c> the</c>

00:38:13.789 --> 00:38:13.799 align:start position:0%
should be string header and then the the
 

00:38:13.799 --> 00:38:15.589 align:start position:0%
should be string header and then the the
bytes<00:38:14.039><c> or</c><00:38:14.279><c> the</c><00:38:14.369><c> care</c><00:38:14.579><c> is</c><00:38:14.730><c> right</c><00:38:14.970><c> there</c><00:38:15.210><c> after</c>

00:38:15.589 --> 00:38:15.599 align:start position:0%
bytes or the care is right there after
 

00:38:15.599 --> 00:38:17.509 align:start position:0%
bytes or the care is right there after
the<00:38:15.779><c> F</c><00:38:16.079><c> in</c><00:38:16.410><c> the</c><00:38:16.500><c> tail</c><00:38:16.680><c> of</c><00:38:16.890><c> the</c><00:38:16.980><c> object</c><00:38:17.339><c> but</c><00:38:17.400><c> this</c>

00:38:17.509 --> 00:38:17.519 align:start position:0%
the F in the tail of the object but this
 

00:38:17.519 --> 00:38:21.289 align:start position:0%
the F in the tail of the object but this
requires<00:38:17.849><c> length</c><00:38:18.089><c> polymorphism</c><00:38:19.549><c> so</c><00:38:20.549><c> we'll</c>

00:38:21.289 --> 00:38:21.299 align:start position:0%
requires length polymorphism so we'll
 

00:38:21.299 --> 00:38:22.430 align:start position:0%
requires length polymorphism so we'll
get<00:38:21.390><c> there</c><00:38:21.599><c> I</c><00:38:21.630><c> think</c><00:38:21.750><c> this</c><00:38:21.990><c> is</c><00:38:22.109><c> something</c><00:38:22.319><c> that</c>

00:38:22.430 --> 00:38:22.440 align:start position:0%
get there I think this is something that
 

00:38:22.440 --> 00:38:24.319 align:start position:0%
get there I think this is something that
we<00:38:22.619><c> need</c><00:38:22.769><c> to</c><00:38:22.829><c> be</c><00:38:23.220><c> able</c><00:38:23.400><c> to</c><00:38:23.519><c> do</c><00:38:23.640><c> there's</c><00:38:24.119><c> some</c>

00:38:24.319 --> 00:38:24.329 align:start position:0%
we need to be able to do there's some
 

00:38:24.329 --> 00:38:27.769 align:start position:0%
we need to be able to do there's some
technical<00:38:25.109><c> requirements</c><00:38:25.769><c> but</c><00:38:26.400><c> we'll</c><00:38:26.779><c> we'll</c>

00:38:27.769 --> 00:38:27.779 align:start position:0%
technical requirements but we'll we'll
 

00:38:27.779 --> 00:38:29.599 align:start position:0%
technical requirements but we'll we'll
we'll<00:38:28.260><c> get</c><00:38:28.410><c> there</c><00:38:28.619><c> in</c><00:38:28.650><c> particular</c><00:38:29.220><c> we</c><00:38:29.369><c> need</c><00:38:29.519><c> to</c>

00:38:29.599 --> 00:38:29.609 align:start position:0%
we'll get there in particular we need to
 

00:38:29.609 --> 00:38:31.370 align:start position:0%
we'll get there in particular we need to
be<00:38:29.760><c> able</c><00:38:29.849><c> to</c><00:38:30.000><c> build</c><00:38:30.299><c> strings</c><00:38:30.690><c> with</c><00:38:30.869><c> factories</c>

00:38:31.370 --> 00:38:31.380 align:start position:0%
be able to build strings with factories
 

00:38:31.380 --> 00:38:35.089 align:start position:0%
be able to build strings with factories
instead<00:38:32.099><c> of</c><00:38:32.250><c> new</c><00:38:32.490><c> invoking</c><00:38:33.000><c> it</c><00:38:33.680><c> that's</c><00:38:34.680><c> that</c>

00:38:35.089 --> 00:38:35.099 align:start position:0%
instead of new invoking it that's that
 

00:38:35.099 --> 00:38:37.700 align:start position:0%
instead of new invoking it that's that
there's<00:38:35.490><c> a</c><00:38:35.579><c> technical</c><00:38:36.210><c> problem</c><00:38:36.569><c> that</c><00:38:36.930><c> that</c>

00:38:37.700 --> 00:38:37.710 align:start position:0%
there's a technical problem that that
 

00:38:37.710 --> 00:38:38.990 align:start position:0%
there's a technical problem that that
needs<00:38:37.859><c> to</c><00:38:37.980><c> be</c><00:38:38.009><c> solved</c><00:38:38.400><c> under</c><00:38:38.519><c> the</c><00:38:38.670><c> covers</c>

00:38:38.990 --> 00:38:39.000 align:start position:0%
needs to be solved under the covers
 

00:38:39.000 --> 00:38:41.029 align:start position:0%
needs to be solved under the covers
which<00:38:39.390><c> Java</c><00:38:39.690><c> programmers</c><00:38:40.170><c> don't</c><00:38:40.349><c> even</c><00:38:40.529><c> see</c><00:38:40.769><c> so</c>

00:38:41.029 --> 00:38:41.039 align:start position:0%
which Java programmers don't even see so
 

00:38:41.039 --> 00:38:42.589 align:start position:0%
which Java programmers don't even see so
if<00:38:41.490><c> we</c><00:38:41.609><c> fix</c><00:38:41.759><c> it</c><00:38:41.940><c> they</c><00:38:42.089><c> won't</c><00:38:42.240><c> even</c><00:38:42.329><c> notice</c>

00:38:42.589 --> 00:38:42.599 align:start position:0%
if we fix it they won't even notice
 

00:38:42.599 --> 00:38:43.999 align:start position:0%
if we fix it they won't even notice
except<00:38:43.140><c> we'll</c><00:38:43.289><c> be</c><00:38:43.410><c> able</c><00:38:43.500><c> to</c><00:38:43.650><c> build</c><00:38:43.950><c> better</c>

00:38:43.999 --> 00:38:44.009 align:start position:0%
except we'll be able to build better
 

00:38:44.009 --> 00:38:47.930 align:start position:0%
except we'll be able to build better
objects<00:38:46.130><c> boost</c><00:38:47.130><c> our</c><00:38:47.279><c> methods</c><00:38:47.579><c> everywhere</c>

00:38:47.930 --> 00:38:47.940 align:start position:0%
objects boost our methods everywhere
 

00:38:47.940 --> 00:38:49.430 align:start position:0%
objects boost our methods everywhere
again<00:38:48.210><c> we</c><00:38:48.359><c> talked</c><00:38:48.569><c> about</c><00:38:48.720><c> this</c><00:38:48.900><c> in</c><00:38:49.079><c> detail</c>

00:38:49.430 --> 00:38:49.440 align:start position:0%
again we talked about this in detail
 

00:38:49.440 --> 00:38:51.769 align:start position:0%
again we talked about this in detail
last<00:38:49.680><c> hour</c><00:38:50.069><c> but</c><00:38:50.670><c> the</c><00:38:50.819><c> idea</c><00:38:51.059><c> is</c><00:38:51.150><c> to</c><00:38:51.269><c> double</c><00:38:51.660><c> down</c>

00:38:51.769 --> 00:38:51.779 align:start position:0%
last hour but the idea is to double down
 

00:38:51.779 --> 00:38:53.390 align:start position:0%
last hour but the idea is to double down
on<00:38:51.839><c> bootstrap</c><00:38:52.619><c> methods</c><00:38:52.950><c> right</c><00:38:53.099><c> now</c><00:38:53.250><c> and</c>

00:38:53.390 --> 00:38:53.400 align:start position:0%
on bootstrap methods right now and
 

00:38:53.400 --> 00:38:55.549 align:start position:0%
on bootstrap methods right now and
invoke<00:38:53.609><c> dynamic</c><00:38:54.089><c> instruction</c><00:38:54.359><c> links</c><00:38:55.200><c> itself</c>

00:38:55.549 --> 00:38:55.559 align:start position:0%
invoke dynamic instruction links itself
 

00:38:55.559 --> 00:38:57.440 align:start position:0%
invoke dynamic instruction links itself
by<00:38:55.740><c> appealing</c><00:38:56.130><c> to</c><00:38:56.339><c> a</c><00:38:56.400><c> user</c><00:38:56.640><c> coded</c><00:38:57.029><c> bootstrap</c>

00:38:57.440 --> 00:38:57.450 align:start position:0%
by appealing to a user coded bootstrap
 

00:38:57.450 --> 00:38:59.269 align:start position:0%
by appealing to a user coded bootstrap
method<00:38:57.750><c> with</c><00:38:57.869><c> arbitrary</c><00:38:58.289><c> static</c><00:38:58.710><c> constants</c>

00:38:59.269 --> 00:38:59.279 align:start position:0%
method with arbitrary static constants
 

00:38:59.279 --> 00:39:01.069 align:start position:0%
method with arbitrary static constants
that's<00:38:59.519><c> very</c><00:38:59.730><c> powerful</c><00:39:00.000><c> we're</c><00:39:00.480><c> using</c><00:39:00.660><c> it</c><00:39:00.900><c> in</c><00:39:00.990><c> a</c>

00:39:01.069 --> 00:39:01.079 align:start position:0%
that's very powerful we're using it in a
 

00:39:01.079 --> 00:39:03.170 align:start position:0%
that's very powerful we're using it in a
number<00:39:01.349><c> of</c><00:39:01.410><c> different</c><00:39:01.799><c> ways</c><00:39:02.000><c> we're</c><00:39:03.000><c> going</c><00:39:03.119><c> to</c>

00:39:03.170 --> 00:39:03.180 align:start position:0%
number of different ways we're going to
 

00:39:03.180 --> 00:39:04.849 align:start position:0%
number of different ways we're going to
use<00:39:03.269><c> it</c><00:39:03.390><c> in</c><00:39:03.509><c> more</c><00:39:03.660><c> ways</c><00:39:03.839><c> in</c><00:39:04.049><c> the</c><00:39:04.140><c> future</c><00:39:04.470><c> but</c>

00:39:04.849 --> 00:39:04.859 align:start position:0%
use it in more ways in the future but
 

00:39:04.859 --> 00:39:07.549 align:start position:0%
use it in more ways in the future but
let's<00:39:05.069><c> put</c><00:39:05.279><c> bootstrap</c><00:39:05.759><c> methods</c><00:39:06.119><c> under</c><00:39:06.690><c> lvc</c><00:39:07.380><c> in</c>

00:39:07.549 --> 00:39:07.559 align:start position:0%
let's put bootstrap methods under lvc in
 

00:39:07.559 --> 00:39:10.370 align:start position:0%
let's put bootstrap methods under lvc in
the<00:39:08.039><c> constant</c><00:39:08.430><c> pool</c><00:39:08.809><c> that's</c><00:39:09.809><c> another</c><00:39:10.109><c> place</c>

00:39:10.370 --> 00:39:10.380 align:start position:0%
the constant pool that's another place
 

00:39:10.380 --> 00:39:12.529 align:start position:0%
the constant pool that's another place
where<00:39:10.710><c> you</c><00:39:10.829><c> get</c><00:39:11.009><c> unique</c><00:39:11.460><c> value</c><00:39:11.880><c> from</c><00:39:12.119><c> from</c>

00:39:12.529 --> 00:39:12.539 align:start position:0%
where you get unique value from from
 

00:39:12.539 --> 00:39:14.359 align:start position:0%
where you get unique value from from
being<00:39:12.809><c> able</c><00:39:12.900><c> to</c><00:39:13.019><c> appeal</c><00:39:13.380><c> to</c><00:39:13.559><c> user</c><00:39:13.769><c> code</c><00:39:14.069><c> to</c>

00:39:14.359 --> 00:39:14.369 align:start position:0%
being able to appeal to user code to
 

00:39:14.369 --> 00:39:17.299 align:start position:0%
being able to appeal to user code to
link<00:39:14.789><c> a</c><00:39:14.910><c> constant</c><00:39:15.529><c> let's</c><00:39:16.529><c> maybe</c><00:39:16.950><c> if</c><00:39:17.190><c> you</c>

00:39:17.299 --> 00:39:17.309 align:start position:0%
link a constant let's maybe if you
 

00:39:17.309 --> 00:39:20.359 align:start position:0%
link a constant let's maybe if you
invoke<00:39:17.670><c> a</c><00:39:17.970><c> an</c><00:39:18.660><c> access</c><00:39:19.140><c> point</c><00:39:19.349><c> on</c><00:39:19.619><c> a</c><00:39:19.650><c> certain</c>

00:39:20.359 --> 00:39:20.369 align:start position:0%
invoke a an access point on a certain
 

00:39:20.369 --> 00:39:22.370 align:start position:0%
invoke a an access point on a certain
kind<00:39:20.460><c> of</c><00:39:20.700><c> a</c><00:39:20.789><c> class</c><00:39:21.029><c> maybe</c><00:39:21.690><c> there's</c><00:39:21.930><c> no</c><00:39:22.109><c> code</c>

00:39:22.370 --> 00:39:22.380 align:start position:0%
kind of a class maybe there's no code
 

00:39:22.380 --> 00:39:23.930 align:start position:0%
kind of a class maybe there's no code
behind<00:39:22.410><c> that</c><00:39:22.859><c> access</c><00:39:23.190><c> point</c><00:39:23.339><c> until</c><00:39:23.640><c> you</c><00:39:23.759><c> touch</c>

00:39:23.930 --> 00:39:23.940 align:start position:0%
behind that access point until you touch
 

00:39:23.940 --> 00:39:25.700 align:start position:0%
behind that access point until you touch
it<00:39:24.119><c> and</c><00:39:24.269><c> then</c><00:39:24.569><c> a</c><00:39:24.599><c> bootstrap</c><00:39:25.049><c> method</c><00:39:25.349><c> runs</c>

00:39:25.700 --> 00:39:25.710 align:start position:0%
it and then a bootstrap method runs
 

00:39:25.710 --> 00:39:27.829 align:start position:0%
it and then a bootstrap method runs
filled<00:39:26.039><c> in</c><00:39:26.190><c> the</c><00:39:26.339><c> code</c><00:39:26.519><c> just</c><00:39:26.759><c> in</c><00:39:26.940><c> time</c><00:39:27.210><c> and</c><00:39:27.450><c> then</c>

00:39:27.829 --> 00:39:27.839 align:start position:0%
filled in the code just in time and then
 

00:39:27.839 --> 00:39:29.630 align:start position:0%
filled in the code just in time and then
there's<00:39:27.990><c> code</c><00:39:28.200><c> within</c><00:39:28.470><c> that</c><00:39:28.710><c> ad</c><00:39:28.890><c> within</c><00:39:29.490><c> that</c>

00:39:29.630 --> 00:39:29.640 align:start position:0%
there's code within that ad within that
 

00:39:29.640 --> 00:39:31.759 align:start position:0%
there's code within that ad within that
object<00:39:29.849><c> to</c><00:39:30.240><c> run</c><00:39:30.390><c> maybe</c><00:39:30.569><c> a</c><00:39:30.869><c> whole</c><00:39:31.289><c> method</c><00:39:31.650><c> or</c>

00:39:31.759 --> 00:39:31.769 align:start position:0%
object to run maybe a whole method or
 

00:39:31.769 --> 00:39:33.380 align:start position:0%
object to run maybe a whole method or
even<00:39:32.069><c> a</c><00:39:32.130><c> whole</c><00:39:32.279><c> class</c><00:39:32.579><c> could</c><00:39:32.849><c> be</c><00:39:32.940><c> created</c><00:39:33.299><c> the</c>

00:39:33.380 --> 00:39:33.390 align:start position:0%
even a whole class could be created the
 

00:39:33.390 --> 00:39:35.749 align:start position:0%
even a whole class could be created the
first<00:39:33.599><c> time</c><00:39:33.779><c> you</c><00:39:33.900><c> touch</c><00:39:34.230><c> it</c><00:39:34.440><c> by</c><00:39:34.859><c> appealing</c><00:39:35.609><c> to</c>

00:39:35.749 --> 00:39:35.759 align:start position:0%
first time you touch it by appealing to
 

00:39:35.759 --> 00:39:40.849 align:start position:0%
first time you touch it by appealing to
a<00:39:35.849><c> bootstrap</c><00:39:36.329><c> method</c><00:39:39.049><c> we</c><00:39:40.049><c> want</c><00:39:40.319><c> to</c><00:39:40.500><c> be</c><00:39:40.619><c> able</c><00:39:40.710><c> to</c>

00:39:40.849 --> 00:39:40.859 align:start position:0%
a bootstrap method we want to be able to
 

00:39:40.859 --> 00:39:42.470 align:start position:0%
a bootstrap method we want to be able to
there's<00:39:41.730><c> something</c><00:39:41.940><c> called</c><00:39:42.000><c> constant</c>

00:39:42.470 --> 00:39:42.480 align:start position:0%
there's something called constant
 

00:39:42.480 --> 00:39:44.410 align:start position:0%
there's something called constant
dynamic<00:39:42.599><c> which</c><00:39:43.109><c> there's</c><00:39:43.410><c> a</c>

00:39:44.410 --> 00:39:44.420 align:start position:0%
dynamic which there's a
 

00:39:44.420 --> 00:39:47.620 align:start position:0%
dynamic which there's a
there's<00:39:45.319><c> a</c><00:39:45.499><c> jbs</c><00:39:46.009><c> entry</c><00:39:46.339><c> for</c><00:39:46.549><c> this</c><00:39:46.730><c> and</c><00:39:46.970><c> a</c>

00:39:47.620 --> 00:39:47.630 align:start position:0%
there's a jbs entry for this and a
 

00:39:47.630 --> 00:39:48.940 align:start position:0%
there's a jbs entry for this and a
prototype<00:39:48.170><c> it's</c><00:39:48.410><c> just</c><00:39:48.559><c> about</c><00:39:48.710><c> to</c><00:39:48.859><c> be</c>

00:39:48.940 --> 00:39:48.950 align:start position:0%
prototype it's just about to be
 

00:39:48.950 --> 00:39:51.190 align:start position:0%
prototype it's just about to be
published<00:39:49.339><c> in</c><00:39:49.460><c> the</c><00:39:49.519><c> open</c><00:39:49.730><c> JDK</c><00:39:49.910><c> the</c><00:39:50.809><c> idea</c><00:39:51.079><c> of</c>

00:39:51.190 --> 00:39:51.200 align:start position:0%
published in the open JDK the idea of
 

00:39:51.200 --> 00:39:53.799 align:start position:0%
published in the open JDK the idea of
constant<00:39:51.829><c> dynamic</c><00:39:51.950><c> is</c><00:39:52.430><c> there's</c><00:39:53.239><c> constants</c><00:39:53.690><c> we</c>

00:39:53.799 --> 00:39:53.809 align:start position:0%
constant dynamic is there's constants we
 

00:39:53.809 --> 00:39:58.089 align:start position:0%
constant dynamic is there's constants we
know<00:39:53.989><c> how</c><00:39:54.140><c> to</c><00:39:54.200><c> create</c><00:39:54.880><c> already</c><00:39:56.859><c> but</c><00:39:57.859><c> let's</c>

00:39:58.089 --> 00:39:58.099 align:start position:0%
know how to create already but let's
 

00:39:58.099 --> 00:40:00.970 align:start position:0%
know how to create already but let's
make<00:39:58.900><c> constants</c><00:39:59.900><c> which</c><00:40:00.079><c> can</c><00:40:00.289><c> generate</c><00:40:00.440><c> arrays</c>

00:40:00.970 --> 00:40:00.980 align:start position:0%
make constants which can generate arrays
 

00:40:00.980 --> 00:40:08.079 align:start position:0%
make constants which can generate arrays
lists<00:40:01.519><c> Maps</c><00:40:02.079><c> templates</c><00:40:03.549><c> DSL</c><00:40:04.549><c> ast</c><00:40:06.789><c> in</c><00:40:07.789><c> order</c><00:40:07.999><c> to</c>

00:40:08.079 --> 00:40:08.089 align:start position:0%
lists Maps templates DSL ast in order to
 

00:40:08.089 --> 00:40:09.460 align:start position:0%
lists Maps templates DSL ast in order to
do<00:40:08.180><c> constants</c><00:40:08.660><c> for</c><00:40:08.779><c> all</c><00:40:08.930><c> these</c><00:40:09.140><c> you</c><00:40:09.319><c> either</c>

00:40:09.460 --> 00:40:09.470 align:start position:0%
do constants for all these you either
 

00:40:09.470 --> 00:40:12.640 align:start position:0%
do constants for all these you either
need<00:40:09.769><c> to</c><00:40:09.890><c> add</c><00:40:10.480><c> 50,000</c><00:40:11.480><c> new</c><00:40:11.660><c> code</c><00:40:12.079><c> points</c><00:40:12.470><c> into</c>

00:40:12.640 --> 00:40:12.650 align:start position:0%
need to add 50,000 new code points into
 

00:40:12.650 --> 00:40:14.259 align:start position:0%
need to add 50,000 new code points into
the<00:40:12.680><c> constant</c><00:40:13.130><c> pool</c><00:40:13.220><c> encoding</c><00:40:13.670><c> mechanism</c><00:40:13.789><c> or</c>

00:40:14.259 --> 00:40:14.269 align:start position:0%
the constant pool encoding mechanism or
 

00:40:14.269 --> 00:40:15.910 align:start position:0%
the constant pool encoding mechanism or
one<00:40:14.480><c> new</c><00:40:14.690><c> code</c><00:40:14.900><c> point</c><00:40:15.170><c> which</c><00:40:15.319><c> says</c><00:40:15.559><c> call</c><00:40:15.890><c> a</c>

00:40:15.910 --> 00:40:15.920 align:start position:0%
one new code point which says call a
 

00:40:15.920 --> 00:40:17.229 align:start position:0%
one new code point which says call a
bootstrap<00:40:16.400><c> method</c><00:40:16.700><c> to</c><00:40:16.819><c> fill</c><00:40:16.970><c> in</c><00:40:17.119><c> this</c>

00:40:17.229 --> 00:40:17.239 align:start position:0%
bootstrap method to fill in this
 

00:40:17.239 --> 00:40:18.880 align:start position:0%
bootstrap method to fill in this
constant<00:40:17.720><c> which</c><00:40:18.230><c> do</c><00:40:18.410><c> you</c><00:40:18.499><c> think</c><00:40:18.680><c> we're</c><00:40:18.799><c> going</c>

00:40:18.880 --> 00:40:18.890 align:start position:0%
constant which do you think we're going
 

00:40:18.890 --> 00:40:23.559 align:start position:0%
constant which do you think we're going
to<00:40:18.950><c> do</c><00:40:19.130><c> right</c><00:40:19.400><c> yeah</c><00:40:22.119><c> there</c><00:40:23.119><c> are</c><00:40:23.239><c> requirements</c>

00:40:23.559 --> 00:40:23.569 align:start position:0%
to do right yeah there are requirements
 

00:40:23.569 --> 00:40:25.569 align:start position:0%
to do right yeah there are requirements
on<00:40:23.809><c> this</c><00:40:23.930><c> I</c><00:40:24.019><c> won't</c><00:40:24.140><c> go</c><00:40:24.259><c> into</c><00:40:24.680><c> there's</c><00:40:25.039><c> a</c><00:40:25.099><c> design</c>

00:40:25.569 --> 00:40:25.579 align:start position:0%
on this I won't go into there's a design
 

00:40:25.579 --> 00:40:28.180 align:start position:0%
on this I won't go into there's a design
which<00:40:26.269><c> is</c><00:40:26.630><c> being</c><00:40:27.049><c> prototype</c><00:40:27.470><c> right</c><00:40:27.650><c> now</c><00:40:27.859><c> it's</c>

00:40:28.180 --> 00:40:28.190 align:start position:0%
which is being prototype right now it's
 

00:40:28.190 --> 00:40:30.700 align:start position:0%
which is being prototype right now it's
better<00:40:28.369><c> to</c><00:40:28.549><c> look</c><00:40:28.700><c> at</c><00:40:29.390><c> either</c><00:40:29.720><c> last</c><00:40:30.079><c> hours</c><00:40:30.440><c> talk</c>

00:40:30.700 --> 00:40:30.710 align:start position:0%
better to look at either last hours talk
 

00:40:30.710 --> 00:40:32.769 align:start position:0%
better to look at either last hours talk
or<00:40:31.009><c> the</c><00:40:31.460><c> code</c><00:40:31.700><c> that's</c><00:40:31.910><c> being</c><00:40:32.150><c> that's</c><00:40:32.539><c> going</c><00:40:32.720><c> to</c>

00:40:32.769 --> 00:40:32.779 align:start position:0%
or the code that's being that's going to
 

00:40:32.779 --> 00:40:37.509 align:start position:0%
or the code that's being that's going to
be<00:40:32.839><c> posted</c><00:40:33.230><c> soon</c><00:40:35.230><c> this</c><00:40:36.230><c> can</c><00:40:36.440><c> be</c><00:40:36.529><c> used</c><00:40:36.739><c> to</c><00:40:36.890><c> for</c>

00:40:37.509 --> 00:40:37.519 align:start position:0%
be posted soon this can be used to for
 

00:40:37.519 --> 00:40:40.809 align:start position:0%
be posted soon this can be used to for
example<00:40:37.579><c> compose</c><00:40:38.329><c> arrays</c><00:40:39.339><c> rather</c><00:40:40.339><c> than</c><00:40:40.609><c> by</c>

00:40:40.809 --> 00:40:40.819 align:start position:0%
example compose arrays rather than by
 

00:40:40.819 --> 00:40:42.849 align:start position:0%
example compose arrays rather than by
imperative<00:40:41.599><c> Java</c><00:40:41.839><c> code</c><00:40:42.109><c> if</c><00:40:42.319><c> you</c><00:40:42.440><c> ever</c><00:40:42.619><c> looked</c>

00:40:42.849 --> 00:40:42.859 align:start position:0%
imperative Java code if you ever looked
 

00:40:42.859 --> 00:40:46.120 align:start position:0%
imperative Java code if you ever looked
at<00:40:42.950><c> the</c><00:40:43.779><c> initialization</c><00:40:44.779><c> of</c><00:40:45.140><c> a</c><00:40:45.259><c> large</c><00:40:45.499><c> static</c>

00:40:46.120 --> 00:40:46.130 align:start position:0%
at the initialization of a large static
 

00:40:46.130 --> 00:40:48.640 align:start position:0%
at the initialization of a large static
array<00:40:46.460><c> in</c><00:40:46.730><c> your</c><00:40:46.970><c> in</c><00:40:47.450><c> your</c><00:40:47.720><c> class</c><00:40:48.079><c> file</c><00:40:48.319><c> you</c>

00:40:48.640 --> 00:40:48.650 align:start position:0%
array in your in your class file you
 

00:40:48.650 --> 00:40:51.069 align:start position:0%
array in your in your class file you
probably<00:40:49.099><c> threw</c><00:40:49.339><c> up</c><00:40:49.489><c> a</c><00:40:49.700><c> little</c><00:40:50.029><c> bit</c><00:40:50.269><c> but</c><00:40:50.869><c> it's</c>

00:40:51.069 --> 00:40:51.079 align:start position:0%
probably threw up a little bit but it's
 

00:40:51.079 --> 00:40:52.450 align:start position:0%
probably threw up a little bit but it's
there's<00:40:51.440><c> there's</c><00:40:51.499><c> much</c><00:40:52.039><c> better</c><00:40:52.190><c> ways</c><00:40:52.430><c> to</c>

00:40:52.450 --> 00:40:52.460 align:start position:0%
there's there's much better ways to
 

00:40:52.460 --> 00:40:54.849 align:start position:0%
there's there's much better ways to
create<00:40:52.940><c> arrays</c><00:40:53.210><c> than</c><00:40:53.630><c> by</c><00:40:53.900><c> you</c><00:40:54.559><c> know</c><00:40:54.650><c> large</c>

00:40:54.849 --> 00:40:54.859 align:start position:0%
create arrays than by you know large
 

00:40:54.859 --> 00:40:59.680 align:start position:0%
create arrays than by you know large
amounts<00:40:55.279><c> of</c><00:40:55.369><c> ad</c><00:40:55.700><c> hoc</c><00:40:55.880><c> byte</c><00:40:56.089><c> code</c><00:40:58.690><c> lazy</c>

00:40:59.680 --> 00:40:59.690 align:start position:0%
amounts of ad hoc byte code lazy
 

00:40:59.690 --> 00:41:01.660 align:start position:0%
amounts of ad hoc byte code lazy
boilerplate<00:41:00.380><c> this</c><00:41:00.559><c> is</c><00:41:00.710><c> relates</c><00:41:01.039><c> to</c><00:41:01.220><c> project</c>

00:41:01.660 --> 00:41:01.670 align:start position:0%
boilerplate this is relates to project
 

00:41:01.670 --> 00:41:03.489 align:start position:0%
boilerplate this is relates to project
amber<00:41:02.089><c> which</c><00:41:02.269><c> is</c><00:41:02.299><c> a</c><00:41:02.450><c> language</c><00:41:02.930><c> level</c><00:41:03.319><c> project</c>

00:41:03.489 --> 00:41:03.499 align:start position:0%
amber which is a language level project
 

00:41:03.499 --> 00:41:05.620 align:start position:0%
amber which is a language level project
so<00:41:03.890><c> down</c><00:41:04.430><c> there</c><00:41:04.640><c> in</c><00:41:04.789><c> the</c><00:41:04.880><c> VM</c><00:41:05.119><c> we</c><00:41:05.269><c> don't</c><00:41:05.450><c> care</c>

00:41:05.620 --> 00:41:05.630 align:start position:0%
so down there in the VM we don't care
 

00:41:05.630 --> 00:41:06.519 align:start position:0%
so down there in the VM we don't care
what<00:41:05.720><c> they're</c><00:41:05.869><c> doing</c><00:41:06.079><c> up</c><00:41:06.140><c> there</c><00:41:06.289><c> in</c><00:41:06.349><c> the</c>

00:41:06.519 --> 00:41:06.529 align:start position:0%
what they're doing up there in the
 

00:41:06.529 --> 00:41:08.049 align:start position:0%
what they're doing up there in the
compiler<00:41:06.950><c> except</c><00:41:07.249><c> when</c><00:41:07.400><c> they</c><00:41:07.489><c> rain</c><00:41:07.700><c> down</c><00:41:07.730><c> the</c>

00:41:08.049 --> 00:41:08.059 align:start position:0%
compiler except when they rain down the
 

00:41:08.059 --> 00:41:09.579 align:start position:0%
compiler except when they rain down the
wrong<00:41:08.210><c> kind</c><00:41:08.450><c> of</c><00:41:08.539><c> code</c><00:41:08.720><c> on</c><00:41:08.900><c> us</c><00:41:09.049><c> and</c><00:41:09.230><c> that</c><00:41:09.259><c> point</c>

00:41:09.579 --> 00:41:09.589 align:start position:0%
wrong kind of code on us and that point
 

00:41:09.589 --> 00:41:11.410 align:start position:0%
wrong kind of code on us and that point
we<00:41:09.769><c> turn</c><00:41:10.130><c> around</c><00:41:10.309><c> we</c><00:41:10.460><c> give</c><00:41:10.670><c> advice</c><00:41:10.819><c> on</c><00:41:11.210><c> what</c>

00:41:11.410 --> 00:41:11.420 align:start position:0%
we turn around we give advice on what
 

00:41:11.420 --> 00:41:13.390 align:start position:0%
we turn around we give advice on what
kind<00:41:11.599><c> of</c><00:41:11.660><c> code</c><00:41:11.839><c> to</c><00:41:11.960><c> handle</c><00:41:12.259><c> in</c><00:41:12.349><c> this</c><00:41:12.589><c> case</c><00:41:12.829><c> what</c>

00:41:13.390 --> 00:41:13.400 align:start position:0%
kind of code to handle in this case what
 

00:41:13.400 --> 00:41:16.799 align:start position:0%
kind of code to handle in this case what
we<00:41:13.519><c> want</c><00:41:13.670><c> to</c><00:41:13.849><c> be</c><00:41:14.210><c> able</c><00:41:14.299><c> to</c><00:41:14.480><c> have</c><00:41:14.630><c> is</c><00:41:14.900><c> to</c><00:41:15.440><c> have</c>

00:41:16.799 --> 00:41:16.809 align:start position:0%
we want to be able to have is to have
 

00:41:16.809 --> 00:41:20.440 align:start position:0%
we want to be able to have is to have
stereotyped<00:41:17.809><c> methods</c><00:41:18.319><c> be</c><00:41:19.450><c> expressed</c>

00:41:20.440 --> 00:41:20.450 align:start position:0%
stereotyped methods be expressed
 

00:41:20.450 --> 00:41:22.299 align:start position:0%
stereotyped methods be expressed
declaratively<00:41:21.079><c> using</c><00:41:21.380><c> bootstraps</c><00:41:21.859><c> rather</c>

00:41:22.299 --> 00:41:22.309 align:start position:0%
declaratively using bootstraps rather
 

00:41:22.309 --> 00:41:26.289 align:start position:0%
declaratively using bootstraps rather
than<00:41:22.670><c> as</c><00:41:22.910><c> you</c><00:41:23.359><c> know</c><00:41:23.480><c> long</c><00:41:24.049><c> lines</c><00:41:24.859><c> of</c><00:41:25.220><c> byte</c><00:41:26.059><c> code</c>

00:41:26.289 --> 00:41:26.299 align:start position:0%
than as you know long lines of byte code
 

00:41:26.299 --> 00:41:27.489 align:start position:0%
than as you know long lines of byte code
because<00:41:26.660><c> the</c><00:41:26.779><c> bytecode</c><00:41:26.930><c> is</c><00:41:27.200><c> usually</c><00:41:27.470><c> very</c>

00:41:27.489 --> 00:41:27.499 align:start position:0%
because the bytecode is usually very
 

00:41:27.499 --> 00:41:29.499 align:start position:0%
because the bytecode is usually very
boring<00:41:27.890><c> and</c><00:41:28.099><c> only</c><00:41:28.279><c> adds</c><00:41:28.460><c> bulk</c><00:41:28.730><c> to</c><00:41:28.970><c> application</c>

00:41:29.499 --> 00:41:29.509 align:start position:0%
boring and only adds bulk to application
 

00:41:29.509 --> 00:41:32.890 align:start position:0%
boring and only adds bulk to application
startup<00:41:30.700><c> so</c><00:41:31.700><c> boilerplate</c><00:41:32.210><c> methods</c><00:41:32.539><c> include</c>

00:41:32.890 --> 00:41:32.900 align:start position:0%
startup so boilerplate methods include
 

00:41:32.900 --> 00:41:34.599 align:start position:0%
startup so boilerplate methods include
things<00:41:33.079><c> like</c><00:41:33.200><c> constructors</c><00:41:33.859><c> to</c><00:41:34.069><c> string</c><00:41:34.369><c> hash</c>

00:41:34.599 --> 00:41:34.609 align:start position:0%
things like constructors to string hash
 

00:41:34.609 --> 00:41:36.700 align:start position:0%
things like constructors to string hash
code<00:41:34.880><c> equals</c><00:41:35.269><c> there's</c><00:41:35.749><c> also</c><00:41:35.930><c> bridge</c><00:41:36.259><c> methods</c>

00:41:36.700 --> 00:41:36.710 align:start position:0%
code equals there's also bridge methods
 

00:41:36.710 --> 00:41:38.079 align:start position:0%
code equals there's also bridge methods
which<00:41:36.920><c> we</c><00:41:37.069><c> know</c><00:41:37.220><c> is</c><00:41:37.400><c> been</c><00:41:37.549><c> around</c><00:41:37.640><c> for</c><00:41:37.910><c> a</c><00:41:37.970><c> long</c>

00:41:38.079 --> 00:41:38.089 align:start position:0%
which we know is been around for a long
 

00:41:38.089 --> 00:41:40.809 align:start position:0%
which we know is been around for a long
time<00:41:38.359><c> and</c><00:41:38.690><c> other</c><00:41:39.680><c> method</c><00:41:40.069><c> builders</c><00:41:40.430><c> the</c>

00:41:40.809 --> 00:41:40.819 align:start position:0%
time and other method builders the
 

00:41:40.819 --> 00:41:43.479 align:start position:0%
time and other method builders the
Panama<00:41:41.239><c> binder</c><00:41:41.630><c> also</c><00:41:41.989><c> builds</c><00:41:42.559><c> bootstrap</c>

00:41:43.479 --> 00:41:43.489 align:start position:0%
Panama binder also builds bootstrap
 

00:41:43.489 --> 00:41:46.029 align:start position:0%
Panama binder also builds bootstrap
methods<00:41:43.849><c> Panama</c><00:41:44.329><c> takes</c><00:41:44.900><c> metadata</c><00:41:45.799><c> from</c>

00:41:46.029 --> 00:41:46.039 align:start position:0%
methods Panama takes metadata from
 

00:41:46.039 --> 00:41:47.620 align:start position:0%
methods Panama takes metadata from
that's<00:41:46.400><c> been</c><00:41:46.579><c> scraped</c><00:41:46.880><c> from</c><00:41:47.059><c> a</c><00:41:47.210><c> header</c><00:41:47.359><c> file</c>

00:41:47.620 --> 00:41:47.630 align:start position:0%
that's been scraped from a header file
 

00:41:47.630 --> 00:41:50.200 align:start position:0%
that's been scraped from a header file
and<00:41:47.930><c> binds</c><00:41:48.710><c> it</c><00:41:48.769><c> down</c><00:41:49.009><c> into</c><00:41:49.249><c> direct</c><00:41:49.789><c> method</c>

00:41:50.200 --> 00:41:50.210 align:start position:0%
and binds it down into direct method
 

00:41:50.210 --> 00:41:52.479 align:start position:0%
and binds it down into direct method
handles<00:41:50.569><c> and</c><00:41:50.779><c> methods</c><00:41:51.289><c> that</c><00:41:51.380><c> access</c><00:41:51.890><c> the</c><00:41:52.130><c> the</c>

00:41:52.479 --> 00:41:52.489 align:start position:0%
handles and methods that access the the
 

00:41:52.489 --> 00:41:54.849 align:start position:0%
handles and methods that access the the
native<00:41:52.759><c> code</c><00:41:52.910><c> and</c><00:41:52.970><c> data</c><00:41:53.299><c> this</c><00:41:54.259><c> is</c><00:41:54.440><c> also</c><00:41:54.650><c> is</c>

00:41:54.849 --> 00:41:54.859 align:start position:0%
native code and data this is also is
 

00:41:54.859 --> 00:41:57.430 align:start position:0%
native code and data this is also is
very<00:41:54.980><c> stereotyped</c><00:41:55.970><c> activity</c><00:41:56.599><c> and</c>

00:41:57.430 --> 00:41:57.440 align:start position:0%
very stereotyped activity and
 

00:41:57.440 --> 00:41:59.319 align:start position:0%
very stereotyped activity and
should<00:41:57.710><c> be</c><00:41:57.770><c> done</c><00:41:57.920><c> lazily</c><00:41:58.250><c> in</c><00:41:58.760><c> other</c><00:41:58.910><c> words</c><00:41:59.089><c> if</c>

00:41:59.319 --> 00:41:59.329 align:start position:0%
should be done lazily in other words if
 

00:41:59.329 --> 00:42:01.530 align:start position:0%
should be done lazily in other words if
you<00:41:59.510><c> if</c><00:41:59.780><c> you</c><00:41:59.960><c> use</c><00:42:00.200><c> the</c><00:42:00.349><c> binder</c><00:42:00.680><c> to</c><00:42:00.829><c> create</c><00:42:01.130><c> you</c>

00:42:01.530 --> 00:42:01.540 align:start position:0%
you if you use the binder to create you
 

00:42:01.540 --> 00:42:04.059 align:start position:0%
you if you use the binder to create you
bindings<00:42:02.540><c> to</c><00:42:02.780><c> a</c><00:42:02.810><c> header</c><00:42:03.500><c> file</c>

00:42:04.059 --> 00:42:04.069 align:start position:0%
bindings to a header file
 

00:42:04.069 --> 00:42:06.309 align:start position:0%
bindings to a header file
you<00:42:04.460><c> should</c><00:42:04.670><c> only</c><00:42:04.819><c> get</c><00:42:05.060><c> code</c><00:42:05.420><c> for</c><00:42:05.810><c> the</c><00:42:05.900><c> actual</c>

00:42:06.309 --> 00:42:06.319 align:start position:0%
you should only get code for the actual
 

00:42:06.319 --> 00:42:08.079 align:start position:0%
you should only get code for the actual
entry<00:42:06.530><c> points</c><00:42:06.829><c> that</c><00:42:06.950><c> you</c><00:42:07.040><c> touch</c><00:42:07.250><c> and</c><00:42:07.579><c> this</c><00:42:07.910><c> can</c>

00:42:08.079 --> 00:42:08.089 align:start position:0%
entry points that you touch and this can
 

00:42:08.089 --> 00:42:10.260 align:start position:0%
entry points that you touch and this can
be<00:42:08.180><c> done</c><00:42:08.359><c> with</c><00:42:08.599><c> with</c><00:42:09.020><c> boilerplate</c><00:42:09.770><c> reduction</c>

00:42:10.260 --> 00:42:10.270 align:start position:0%
be done with with boilerplate reduction
 

00:42:10.270 --> 00:42:16.240 align:start position:0%
be done with with boilerplate reduction
technology<00:42:11.270><c> and</c><00:42:11.450><c> methods</c><00:42:13.900><c> so</c><00:42:14.900><c> you</c><00:42:15.530><c> know</c><00:42:15.619><c> in</c>

00:42:16.240 --> 00:42:16.250 align:start position:0%
technology and methods so you know in
 

00:42:16.250 --> 00:42:17.770 align:start position:0%
technology and methods so you know in
amber<00:42:17.060><c> you</c><00:42:17.180><c> might</c><00:42:17.359><c> be</c><00:42:17.450><c> able</c><00:42:17.510><c> to</c><00:42:17.599><c> write</c><00:42:17.720><c> a</c>

00:42:17.770 --> 00:42:17.780 align:start position:0%
amber you might be able to write a
 

00:42:17.780 --> 00:42:19.690 align:start position:0%
amber you might be able to write a
really<00:42:18.050><c> interesting</c><00:42:18.230><c> class</c><00:42:18.589><c> in</c><00:42:18.800><c> one</c><00:42:18.980><c> line</c><00:42:19.160><c> but</c>

00:42:19.690 --> 00:42:19.700 align:start position:0%
really interesting class in one line but
 

00:42:19.700 --> 00:42:22.180 align:start position:0%
really interesting class in one line but
if<00:42:19.790><c> your</c><00:42:19.910><c> class</c><00:42:20.119><c> file</c><00:42:20.390><c> is</c><00:42:20.720><c> is</c><00:42:21.170><c> 10</c><00:42:21.710><c> kilobytes</c>

00:42:22.180 --> 00:42:22.190 align:start position:0%
if your class file is is 10 kilobytes
 

00:42:22.190 --> 00:42:24.550 align:start position:0%
if your class file is is 10 kilobytes
then<00:42:22.640><c> something's</c><00:42:23.180><c> gone</c><00:42:23.329><c> wrong</c><00:42:23.390><c> so</c><00:42:23.990><c> this</c>

00:42:24.550 --> 00:42:24.560 align:start position:0%
then something's gone wrong so this
 

00:42:24.560 --> 00:42:27.309 align:start position:0%
then something's gone wrong so this
solution<00:42:24.770><c> is</c><00:42:25.220><c> to</c><00:42:25.430><c> is</c><00:42:26.210><c> to</c><00:42:26.480><c> generate</c><00:42:27.170><c> just</c>

00:42:27.309 --> 00:42:27.319 align:start position:0%
solution is to is to generate just
 

00:42:27.319 --> 00:42:28.839 align:start position:0%
solution is to is to generate just
little<00:42:27.589><c> bootstrapping</c><00:42:28.069><c> things</c><00:42:28.400><c> and</c><00:42:28.670><c> then</c>

00:42:28.839 --> 00:42:28.849 align:start position:0%
little bootstrapping things and then
 

00:42:28.849 --> 00:42:30.730 align:start position:0%
little bootstrapping things and then
have<00:42:29.359><c> those</c><00:42:29.540><c> elaborates</c><00:42:30.140><c> into</c><00:42:30.349><c> byte</c><00:42:30.500><c> codes</c>

00:42:30.730 --> 00:42:30.740 align:start position:0%
have those elaborates into byte codes
 

00:42:30.740 --> 00:42:32.380 align:start position:0%
have those elaborates into byte codes
only<00:42:31.010><c> when</c><00:42:31.160><c> you</c><00:42:31.250><c> use</c><00:42:31.430><c> them</c><00:42:31.640><c> that's</c><00:42:32.119><c> kind</c><00:42:32.359><c> of</c>

00:42:32.380 --> 00:42:32.390 align:start position:0%
only when you use them that's kind of
 

00:42:32.390 --> 00:42:35.319 align:start position:0%
only when you use them that's kind of
nice<00:42:32.569><c> um</c><00:42:33.280><c> maybe</c><00:42:34.280><c> some</c><00:42:34.700><c> of</c><00:42:34.819><c> you</c><00:42:34.970><c> sometimes</c>

00:42:35.319 --> 00:42:35.329 align:start position:0%
nice um maybe some of you sometimes
 

00:42:35.329 --> 00:42:37.809 align:start position:0%
nice um maybe some of you sometimes
people<00:42:35.630><c> don't</c><00:42:35.930><c> write</c><00:42:36.349><c> equals</c><00:42:37.010><c> hash</c><00:42:37.310><c> code</c><00:42:37.550><c> to</c>

00:42:37.809 --> 00:42:37.819 align:start position:0%
people don't write equals hash code to
 

00:42:37.819 --> 00:42:38.800 align:start position:0%
people don't write equals hash code to
string<00:42:38.089><c> not</c><00:42:38.210><c> only</c><00:42:38.420><c> because</c><00:42:38.660><c> it's</c>

00:42:38.800 --> 00:42:38.810 align:start position:0%
string not only because it's
 

00:42:38.810 --> 00:42:40.270 align:start position:0%
string not only because it's
inconvenient<00:42:39.290><c> but</c><00:42:39.560><c> also</c><00:42:39.680><c> because</c><00:42:40.010><c> it</c><00:42:40.130><c> adds</c>

00:42:40.270 --> 00:42:40.280 align:start position:0%
inconvenient but also because it adds
 

00:42:40.280 --> 00:42:41.559 align:start position:0%
inconvenient but also because it adds
both<00:42:40.520><c> to</c><00:42:40.730><c> the</c><00:42:40.819><c> jar</c><00:42:41.030><c> and</c><00:42:41.150><c> they</c><00:42:41.270><c> know</c><00:42:41.420><c> they're</c>

00:42:41.559 --> 00:42:41.569 align:start position:0%
both to the jar and they know they're
 

00:42:41.569 --> 00:42:43.240 align:start position:0%
both to the jar and they know they're
not<00:42:41.690><c> going</c><00:42:41.839><c> to</c><00:42:41.900><c> use</c><00:42:42.050><c> it</c><00:42:42.200><c> right</c><00:42:42.560><c> but</c><00:42:42.980><c> what</c><00:42:43.160><c> if</c>

00:42:43.240 --> 00:42:43.250 align:start position:0%
not going to use it right but what if
 

00:42:43.250 --> 00:42:44.380 align:start position:0%
not going to use it right but what if
you<00:42:43.339><c> could</c><00:42:43.550><c> have</c><00:42:43.579><c> that</c><00:42:43.790><c> functionality</c>

00:42:44.380 --> 00:42:44.390 align:start position:0%
you could have that functionality
 

00:42:44.390 --> 00:42:46.240 align:start position:0%
you could have that functionality
they're<00:42:44.750><c> ready</c><00:42:44.990><c> to</c><00:42:45.079><c> use</c><00:42:45.230><c> but</c><00:42:45.619><c> you</c><00:42:45.950><c> only</c><00:42:46.069><c> pay</c>

00:42:46.240 --> 00:42:46.250 align:start position:0%
they're ready to use but you only pay
 

00:42:46.250 --> 00:42:47.650 align:start position:0%
they're ready to use but you only pay
for<00:42:46.460><c> it</c><00:42:46.520><c> if</c><00:42:46.579><c> you</c><00:42:46.670><c> use</c><00:42:46.790><c> it</c><00:42:46.970><c> that's</c><00:42:47.240><c> the</c><00:42:47.450><c> sweet</c>

00:42:47.650 --> 00:42:47.660 align:start position:0%
for it if you use it that's the sweet
 

00:42:47.660 --> 00:42:52.839 align:start position:0%
for it if you use it that's the sweet
spot<00:42:51.190><c> details</c><00:42:52.190><c> I'm</c><00:42:52.339><c> not</c><00:42:52.460><c> going</c><00:42:52.579><c> to</c><00:42:52.640><c> go</c><00:42:52.700><c> into</c>

00:42:52.839 --> 00:42:52.849 align:start position:0%
spot details I'm not going to go into
 

00:42:52.849 --> 00:42:57.520 align:start position:0%
spot details I'm not going to go into
details<00:42:55.359><c> other</c><00:42:56.359><c> applications</c><00:42:57.200><c> not</c>

00:42:57.520 --> 00:42:57.530 align:start position:0%
details other applications not
 

00:42:57.530 --> 00:43:00.430 align:start position:0%
details other applications not
interesting<00:42:58.040><c> right</c><00:42:58.190><c> now</c><00:42:59.170><c> source</c><00:43:00.170><c> code</c>

00:43:00.430 --> 00:43:00.440 align:start position:0%
interesting right now source code
 

00:43:00.440 --> 00:43:02.530 align:start position:0%
interesting right now source code
project<00:43:01.339><c> amber</c><00:43:01.640><c> is</c><00:43:01.730><c> exploring</c><00:43:02.150><c> source</c><00:43:02.359><c> code</c>

00:43:02.530 --> 00:43:02.540 align:start position:0%
project amber is exploring source code
 

00:43:02.540 --> 00:43:04.420 align:start position:0%
project amber is exploring source code
syntax<00:43:02.810><c> is</c><00:43:03.170><c> for</c><00:43:03.349><c> doing</c><00:43:03.470><c> these</c><00:43:03.650><c> neat</c><00:43:03.890><c> VM</c><00:43:04.130><c> tricks</c>

00:43:04.420 --> 00:43:04.430 align:start position:0%
syntax is for doing these neat VM tricks
 

00:43:04.430 --> 00:43:06.040 align:start position:0%
syntax is for doing these neat VM tricks
so<00:43:04.670><c> it's</c><00:43:04.790><c> not</c><00:43:04.880><c> only</c><00:43:05.030><c> for</c><00:43:05.270><c> byte</c><00:43:05.420><c> code</c><00:43:05.660><c> spinners</c>

00:43:06.040 --> 00:43:06.050 align:start position:0%
so it's not only for byte code spinners
 

00:43:06.050 --> 00:43:08.170 align:start position:0%
so it's not only for byte code spinners
it's<00:43:06.290><c> eventually</c><00:43:06.619><c> for</c><00:43:06.920><c> Java</c><00:43:07.130><c> coders</c><00:43:07.579><c> so</c>

00:43:08.170 --> 00:43:08.180 align:start position:0%
it's eventually for Java coders so
 

00:43:08.180 --> 00:43:10.660 align:start position:0%
it's eventually for Java coders so
constant<00:43:08.990><c> dynamic</c><00:43:09.140><c> constants</c><00:43:09.950><c> and</c><00:43:10.130><c> even</c>

00:43:10.660 --> 00:43:10.670 align:start position:0%
constant dynamic constants and even
 

00:43:10.670 --> 00:43:13.780 align:start position:0%
constant dynamic constants and even
invoke<00:43:10.940><c> dynamic</c><00:43:11.089><c> instructions</c><00:43:12.280><c> will</c><00:43:13.280><c> in</c><00:43:13.640><c> an</c>

00:43:13.780 --> 00:43:13.790 align:start position:0%
invoke dynamic instructions will in an
 

00:43:13.790 --> 00:43:15.790 align:start position:0%
invoke dynamic instructions will in an
in<00:43:14.000><c> the</c><00:43:14.240><c> near</c><00:43:14.390><c> future</c><00:43:14.569><c> probably</c><00:43:15.050><c> be</c><00:43:15.440><c> available</c>

00:43:15.790 --> 00:43:15.800 align:start position:0%
in the near future probably be available
 

00:43:15.800 --> 00:43:19.559 align:start position:0%
in the near future probably be available
to<00:43:16.220><c> you</c><00:43:16.369><c> as</c><00:43:16.579><c> a</c><00:43:16.609><c> Java</c><00:43:17.030><c> programmer</c><00:43:17.599><c> to</c><00:43:18.560><c> code</c><00:43:18.800><c> with</c>

00:43:19.559 --> 00:43:19.569 align:start position:0%
to you as a Java programmer to code with
 

00:43:19.569 --> 00:43:26.170 align:start position:0%
to you as a Java programmer to code with
use<00:43:20.569><c> this</c><00:43:20.839><c> power</c><00:43:21.079><c> only</c><00:43:21.319><c> for</c><00:43:21.440><c> good</c><00:43:24.819><c> the</c><00:43:25.819><c> the</c>

00:43:26.170 --> 00:43:26.180 align:start position:0%
use this power only for good the the
 

00:43:26.180 --> 00:43:28.030 align:start position:0%
use this power only for good the the
essential<00:43:26.720><c> idea</c><00:43:27.170><c> is</c><00:43:27.380><c> to</c><00:43:27.589><c> be</c><00:43:27.680><c> able</c><00:43:27.770><c> to</c><00:43:27.890><c> have</c>

00:43:28.030 --> 00:43:28.040 align:start position:0%
essential idea is to be able to have
 

00:43:28.040 --> 00:43:30.339 align:start position:0%
essential idea is to be able to have
constant<00:43:28.430><c> expressions</c><00:43:29.060><c> in</c><00:43:29.270><c> Java</c><00:43:29.540><c> that's</c><00:43:30.170><c> the</c>

00:43:30.339 --> 00:43:30.349 align:start position:0%
constant expressions in Java that's the
 

00:43:30.349 --> 00:43:33.130 align:start position:0%
constant expressions in Java that's the
basic<00:43:30.770><c> idea</c><00:43:30.859><c> in</c><00:43:31.280><c> C++</c><00:43:31.849><c> there's</c><00:43:32.089><c> a</c><00:43:32.150><c> related</c><00:43:32.990><c> idea</c>

00:43:33.130 --> 00:43:33.140 align:start position:0%
basic idea in C++ there's a related idea
 

00:43:33.140 --> 00:43:36.370 align:start position:0%
basic idea in C++ there's a related idea
called<00:43:33.560><c> a</c><00:43:33.619><c> Const</c><00:43:34.040><c> expert</c><00:43:34.490><c> function</c><00:43:35.210><c> which</c><00:43:35.990><c> is</c>

00:43:36.370 --> 00:43:36.380 align:start position:0%
called a Const expert function which is
 

00:43:36.380 --> 00:43:39.130 align:start position:0%
called a Const expert function which is
designed<00:43:37.099><c> to</c><00:43:37.190><c> be</c><00:43:37.339><c> used</c><00:43:37.520><c> to</c><00:43:37.690><c> be</c><00:43:38.690><c> able</c><00:43:38.720><c> to</c><00:43:38.869><c> write</c>

00:43:39.130 --> 00:43:39.140 align:start position:0%
designed to be used to be able to write
 

00:43:39.140 --> 00:43:41.609 align:start position:0%
designed to be used to be able to write
even<00:43:39.740><c> functions</c><00:43:40.400><c> that</c><00:43:40.550><c> produce</c><00:43:40.670><c> constants</c>

00:43:41.609 --> 00:43:41.619 align:start position:0%
even functions that produce constants
 

00:43:41.619 --> 00:43:44.770 align:start position:0%
even functions that produce constants
very<00:43:42.619><c> powerful</c><00:43:43.089><c> there</c><00:43:44.089><c> is</c><00:43:44.270><c> a</c><00:43:44.300><c> downside</c><00:43:44.540><c> to</c>

00:43:44.770 --> 00:43:44.780 align:start position:0%
very powerful there is a downside to
 

00:43:44.780 --> 00:43:47.829 align:start position:0%
very powerful there is a downside to
bootstrap<00:43:45.230><c> methods</c><00:43:46.099><c> everywhere</c><00:43:46.599><c> it</c><00:43:47.599><c> means</c>

00:43:47.829 --> 00:43:47.839 align:start position:0%
bootstrap methods everywhere it means
 

00:43:47.839 --> 00:43:49.809 align:start position:0%
bootstrap methods everywhere it means
that<00:43:48.079><c> if</c><00:43:48.500><c> you're</c><00:43:48.740><c> expanding</c><00:43:49.339><c> everything</c>

00:43:49.809 --> 00:43:49.819 align:start position:0%
that if you're expanding everything
 

00:43:49.819 --> 00:43:51.819 align:start position:0%
that if you're expanding everything
dynamically<00:43:50.450><c> you're</c><00:43:50.780><c> a</c><00:43:50.810><c> OT</c><00:43:51.200><c> compiler</c><00:43:51.650><c> gets</c>

00:43:51.819 --> 00:43:51.829 align:start position:0%
dynamically you're a OT compiler gets
 

00:43:51.829 --> 00:43:53.319 align:start position:0%
dynamically you're a OT compiler gets
really<00:43:52.220><c> confused</c><00:43:52.640><c> because</c><00:43:52.760><c> it</c><00:43:52.970><c> doesn't</c><00:43:53.240><c> know</c>

00:43:53.319 --> 00:43:53.329 align:start position:0%
really confused because it doesn't know
 

00:43:53.329 --> 00:43:54.579 align:start position:0%
really confused because it doesn't know
what's<00:43:53.480><c> going</c><00:43:53.599><c> to</c><00:43:53.630><c> happen</c><00:43:53.720><c> dynamically</c><00:43:54.440><c> at</c>

00:43:54.579 --> 00:43:54.589 align:start position:0%
what's going to happen dynamically at
 

00:43:54.589 --> 00:43:56.470 align:start position:0%
what's going to happen dynamically at
runtime<00:43:54.619><c> so</c><00:43:55.460><c> then</c><00:43:55.609><c> we</c><00:43:55.730><c> have</c><00:43:55.819><c> to</c><00:43:55.940><c> teach</c><00:43:56.150><c> it</c><00:43:56.329><c> we</c>

00:43:56.470 --> 00:43:56.480 align:start position:0%
runtime so then we have to teach it we
 

00:43:56.480 --> 00:43:59.349 align:start position:0%
runtime so then we have to teach it we
have<00:43:56.569><c> to</c><00:43:56.690><c> basically</c><00:43:57.020><c> leave</c><00:43:57.500><c> teach</c><00:43:58.369><c> the</c><00:43:58.579><c> Jo</c><00:43:59.089><c> T</c>

00:43:59.349 --> 00:43:59.359 align:start position:0%
have to basically leave teach the Jo T
 

00:43:59.359 --> 00:44:00.760 align:start position:0%
have to basically leave teach the Jo T
to<00:43:59.630><c> work</c><00:43:59.810><c> together</c><00:43:59.990><c> with</c><00:44:00.290><c> the</c><00:44:00.380><c> bootstrap</c>

00:44:00.760 --> 00:44:00.770 align:start position:0%
to work together with the bootstrap
 

00:44:00.770 --> 00:44:04.410 align:start position:0%
to work together with the bootstrap
methods

00:44:04.410 --> 00:44:04.420 align:start position:0%
 
 

00:44:04.420 --> 00:44:06.790 align:start position:0%
 
immutability<00:44:05.420><c> I'm</c><00:44:05.960><c> going</c><00:44:06.230><c> to</c><00:44:06.320><c> make</c><00:44:06.770><c> a</c>

00:44:06.790 --> 00:44:06.800 align:start position:0%
immutability I'm going to make a
 

00:44:06.800 --> 00:44:09.070 align:start position:0%
immutability I'm going to make a
super-fast<00:44:07.580><c> commercial</c><00:44:08.359><c> for</c><00:44:08.510><c> immutability</c>

00:44:09.070 --> 00:44:09.080 align:start position:0%
super-fast commercial for immutability
 

00:44:09.080 --> 00:44:11.530 align:start position:0%
super-fast commercial for immutability
there<00:44:09.950><c> are</c><00:44:10.070><c> fewer</c><00:44:10.310><c> program</c><00:44:10.700><c> states</c><00:44:11.060><c> to</c><00:44:11.240><c> reason</c>

00:44:11.530 --> 00:44:11.540 align:start position:0%
there are fewer program states to reason
 

00:44:11.540 --> 00:44:12.550 align:start position:0%
there are fewer program states to reason
about<00:44:11.720><c> when</c><00:44:11.869><c> you</c><00:44:11.960><c> have</c><00:44:12.050><c> immutable</c><00:44:12.530><c> data</c>

00:44:12.550 --> 00:44:12.560 align:start position:0%
about when you have immutable data
 

00:44:12.560 --> 00:44:15.490 align:start position:0%
about when you have immutable data
structures<00:44:13.600><c> Java</c><00:44:14.600><c> has</c><00:44:14.840><c> always</c><00:44:15.170><c> had</c>

00:44:15.490 --> 00:44:15.500 align:start position:0%
structures Java has always had
 

00:44:15.500 --> 00:44:17.800 align:start position:0%
structures Java has always had
mutability<00:44:16.190><c> by</c><00:44:16.400><c> default</c><00:44:16.880><c> which</c><00:44:17.150><c> is</c><00:44:17.270><c> terrible</c>

00:44:17.800 --> 00:44:17.810 align:start position:0%
mutability by default which is terrible
 

00:44:17.810 --> 00:44:20.950 align:start position:0%
mutability by default which is terrible
arrays<00:44:18.680><c> you</c><00:44:19.220><c> can't</c><00:44:19.490><c> have</c><00:44:19.730><c> in</c><00:44:20.000><c> mutable</c><00:44:20.660><c> arrays</c>

00:44:20.950 --> 00:44:20.960 align:start position:0%
arrays you can't have in mutable arrays
 

00:44:20.960 --> 00:44:22.960 align:start position:0%
arrays you can't have in mutable arrays
you<00:44:21.200><c> can</c><00:44:21.350><c> only</c><00:44:21.500><c> have</c><00:44:21.680><c> mutable</c><00:44:22.310><c> arrays</c><00:44:22.550><c> you</c><00:44:22.850><c> can</c>

00:44:22.960 --> 00:44:22.970 align:start position:0%
you can only have mutable arrays you can
 

00:44:22.970 --> 00:44:24.190 align:start position:0%
you can only have mutable arrays you can
only<00:44:23.090><c> have</c><00:44:23.300><c> arrays</c><00:44:23.600><c> which</c><00:44:23.869><c> have</c><00:44:24.020><c> race</c>

00:44:24.190 --> 00:44:24.200 align:start position:0%
only have arrays which have race
 

00:44:24.200 --> 00:44:25.510 align:start position:0%
only have arrays which have race
conditions<00:44:24.650><c> in</c><00:44:24.800><c> them</c><00:44:24.980><c> the</c><00:44:25.130><c> only</c><00:44:25.280><c> thing</c><00:44:25.430><c> we</c>

00:44:25.510 --> 00:44:25.520 align:start position:0%
conditions in them the only thing we
 

00:44:25.520 --> 00:44:28.690 align:start position:0%
conditions in them the only thing we
give<00:44:25.700><c> you</c><00:44:25.820><c> we're</c><00:44:26.540><c> going</c><00:44:26.660><c> to</c><00:44:26.720><c> fix</c><00:44:26.840><c> that</c><00:44:27.700><c> so</c>

00:44:28.690 --> 00:44:28.700 align:start position:0%
give you we're going to fix that so
 

00:44:28.700 --> 00:44:31.870 align:start position:0%
give you we're going to fix that so
right<00:44:29.420><c> now</c><00:44:29.600><c> in</c><00:44:30.020><c> order</c><00:44:30.170><c> to</c><00:44:30.440><c> deal</c><00:44:30.800><c> with</c><00:44:30.830><c> some</c><00:44:31.340><c> too</c>

00:44:31.870 --> 00:44:31.880 align:start position:0%
right now in order to deal with some too
 

00:44:31.880 --> 00:44:33.430 align:start position:0%
right now in order to deal with some too
many<00:44:32.090><c> states</c><00:44:32.480><c> in</c><00:44:32.660><c> your</c><00:44:32.780><c> program</c><00:44:33.109><c> what</c><00:44:33.290><c> do</c><00:44:33.350><c> you</c>

00:44:33.430 --> 00:44:33.440 align:start position:0%
many states in your program what do you
 

00:44:33.440 --> 00:44:36.760 align:start position:0%
many states in your program what do you
do<00:44:33.650><c> defensive</c><00:44:34.550><c> copying</c><00:44:35.030><c> problem</c><00:44:35.990><c> solved</c><00:44:36.470><c> no</c>

00:44:36.760 --> 00:44:36.770 align:start position:0%
do defensive copying problem solved no
 

00:44:36.770 --> 00:44:38.320 align:start position:0%
do defensive copying problem solved no
you've<00:44:36.980><c> just</c><00:44:37.190><c> doubled</c><00:44:37.609><c> the</c><00:44:37.670><c> number</c><00:44:37.970><c> of</c><00:44:38.060><c> states</c>

00:44:38.320 --> 00:44:38.330 align:start position:0%
you've just doubled the number of states
 

00:44:38.330 --> 00:44:41.830 align:start position:0%
you've just doubled the number of states
in<00:44:38.510><c> your</c><00:44:38.630><c> program</c><00:44:39.020><c> that's</c><00:44:39.380><c> nice</c>

00:44:41.830 --> 00:44:41.840 align:start position:0%
 
 

00:44:41.840 --> 00:44:44.470 align:start position:0%
 
semantic<00:44:42.710><c> simplicity</c><00:44:43.280><c> also</c><00:44:43.460><c> enables</c><00:44:43.970><c> ahead</c>

00:44:44.470 --> 00:44:44.480 align:start position:0%
semantic simplicity also enables ahead
 

00:44:44.480 --> 00:44:47.320 align:start position:0%
semantic simplicity also enables ahead
of<00:44:44.600><c> time</c><00:44:44.750><c> compilers</c><00:44:45.290><c> and</c><00:44:45.560><c> jets</c><00:44:45.980><c> to</c><00:44:46.340><c> predict</c><00:44:47.180><c> in</c>

00:44:47.320 --> 00:44:47.330 align:start position:0%
of time compilers and jets to predict in
 

00:44:47.330 --> 00:44:48.940 align:start position:0%
of time compilers and jets to predict in
advance<00:44:47.420><c> what</c><00:44:47.990><c> a</c><00:44:48.020><c> program</c><00:44:48.380><c> is</c><00:44:48.560><c> going</c><00:44:48.740><c> to</c><00:44:48.830><c> do</c>

00:44:48.940 --> 00:44:48.950 align:start position:0%
advance what a program is going to do
 

00:44:48.950 --> 00:44:50.980 align:start position:0%
advance what a program is going to do
more<00:44:49.100><c> accurately</c><00:44:49.580><c> and</c><00:44:49.820><c> thereby</c><00:44:50.150><c> optimize</c><00:44:50.750><c> it</c>

00:44:50.980 --> 00:44:50.990 align:start position:0%
more accurately and thereby optimize it
 

00:44:50.990 --> 00:44:53.950 align:start position:0%
more accurately and thereby optimize it
if<00:44:51.109><c> you</c><00:44:51.500><c> have</c><00:44:51.760><c> stateful</c><00:44:52.760><c> holes</c><00:44:52.970><c> in</c><00:44:53.390><c> your</c><00:44:53.630><c> data</c>

00:44:53.950 --> 00:44:53.960 align:start position:0%
if you have stateful holes in your data
 

00:44:53.960 --> 00:44:56.410 align:start position:0%
if you have stateful holes in your data
structures<00:44:54.380><c> in</c><00:44:54.590><c> your</c><00:44:54.619><c> arrays</c><00:44:55.210><c> you're</c><00:44:56.210><c> just</c>

00:44:56.410 --> 00:44:56.420 align:start position:0%
structures in your arrays you're just
 

00:44:56.420 --> 00:44:58.390 align:start position:0%
structures in your arrays you're just
going<00:44:56.780><c> to</c><00:44:56.810><c> be</c><00:44:56.930><c> really</c><00:44:57.200><c> cautious</c><00:44:57.500><c> about</c><00:44:57.859><c> making</c>

00:44:58.390 --> 00:44:58.400 align:start position:0%
going to be really cautious about making
 

00:44:58.400 --> 00:44:59.590 align:start position:0%
going to be really cautious about making
assumptions<00:44:58.850><c> about</c><00:44:58.970><c> what's</c><00:44:59.240><c> going</c><00:44:59.359><c> to</c><00:44:59.390><c> be</c><00:44:59.510><c> in</c>

00:44:59.590 --> 00:44:59.600 align:start position:0%
assumptions about what's going to be in
 

00:44:59.600 --> 00:45:01.510 align:start position:0%
assumptions about what's going to be in
those<00:44:59.750><c> holes</c><00:45:00.020><c> in</c><00:45:00.170><c> the</c><00:45:00.290><c> future</c><00:45:00.619><c> that's</c><00:45:01.070><c> hurting</c>

00:45:01.510 --> 00:45:01.520 align:start position:0%
those holes in the future that's hurting
 

00:45:01.520 --> 00:45:05.050 align:start position:0%
those holes in the future that's hurting
performance

00:45:05.050 --> 00:45:05.060 align:start position:0%
 
 

00:45:05.060 --> 00:45:08.710 align:start position:0%
 
imagine<00:45:05.750><c> if</c><00:45:05.840><c> Java</c><00:45:06.080><c> had</c><00:45:06.290><c> been</c><00:45:06.910><c> had</c><00:45:07.910><c> made</c><00:45:08.390><c> final</c>

00:45:08.710 --> 00:45:08.720 align:start position:0%
imagine if Java had been had made final
 

00:45:08.720 --> 00:45:10.510 align:start position:0%
imagine if Java had been had made final
by<00:45:08.960><c> default</c><00:45:09.350><c> and</c><00:45:09.590><c> there</c><00:45:09.740><c> was</c><00:45:09.830><c> a</c><00:45:09.859><c> non</c><00:45:10.220><c> final</c>

00:45:10.510 --> 00:45:10.520 align:start position:0%
by default and there was a non final
 

00:45:10.520 --> 00:45:12.130 align:start position:0%
by default and there was a non final
keyword<00:45:10.910><c> I</c><00:45:11.359><c> think</c><00:45:11.600><c> we'd</c><00:45:11.720><c> be</c><00:45:11.810><c> in</c><00:45:11.840><c> a</c><00:45:11.960><c> better</c>

00:45:12.130 --> 00:45:12.140 align:start position:0%
keyword I think we'd be in a better
 

00:45:12.140 --> 00:45:14.200 align:start position:0%
keyword I think we'd be in a better
state<00:45:12.440><c> but</c><00:45:13.160><c> you</c><00:45:13.580><c> know</c><00:45:13.670><c> we</c><00:45:13.790><c> didn't</c><00:45:14.000><c> know</c><00:45:14.030><c> how</c><00:45:14.150><c> to</c>

00:45:14.200 --> 00:45:14.210 align:start position:0%
state but you know we didn't know how to
 

00:45:14.210 --> 00:45:15.940 align:start position:0%
state but you know we didn't know how to
build<00:45:14.420><c> such</c><00:45:14.570><c> things</c><00:45:14.840><c> 20</c><00:45:15.109><c> years</c><00:45:15.290><c> ago</c><00:45:15.470><c> we</c><00:45:15.619><c> do</c><00:45:15.770><c> now</c>

00:45:15.940 --> 00:45:15.950 align:start position:0%
build such things 20 years ago we do now
 

00:45:15.950 --> 00:45:19.240 align:start position:0%
build such things 20 years ago we do now
so<00:45:16.160><c> there's</c><00:45:16.340><c> no</c><00:45:16.430><c> excuse</c>

00:45:19.240 --> 00:45:19.250 align:start position:0%
 
 

00:45:19.250 --> 00:45:21.970 align:start position:0%
 
frozen<00:45:19.850><c> arrays</c><00:45:20.090><c> yes</c><00:45:20.390><c> please</c><00:45:20.690><c> the</c><00:45:21.619><c> frozen</c>

00:45:21.970 --> 00:45:21.980 align:start position:0%
frozen arrays yes please the frozen
 

00:45:21.980 --> 00:45:24.090 align:start position:0%
frozen arrays yes please the frozen
arrays<00:45:22.160><c> are</c><00:45:22.340><c> like</c><00:45:22.490><c> tail</c><00:45:22.730><c> college</c><00:45:23.180><c> it's</c><00:45:23.960><c> a</c>

00:45:24.090 --> 00:45:24.100 align:start position:0%
arrays are like tail college it's a
 

00:45:24.100 --> 00:45:26.680 align:start position:0%
arrays are like tail college it's a
fairly<00:45:25.100><c> relatively</c><00:45:25.940><c> small</c><00:45:26.180><c> well</c><00:45:26.359><c> understood</c>

00:45:26.680 --> 00:45:26.690 align:start position:0%
fairly relatively small well understood
 

00:45:26.690 --> 00:45:28.690 align:start position:0%
fairly relatively small well understood
problem<00:45:26.930><c> with</c><00:45:27.290><c> with</c><00:45:27.650><c> too</c><00:45:27.859><c> many</c><00:45:27.980><c> touches</c><00:45:28.520><c> on</c>

00:45:28.690 --> 00:45:28.700 align:start position:0%
problem with with too many touches on
 

00:45:28.700 --> 00:45:30.490 align:start position:0%
problem with with too many touches on
other<00:45:28.850><c> parts</c><00:45:29.090><c> of</c><00:45:29.359><c> the</c><00:45:29.510><c> of</c><00:45:29.720><c> the</c><00:45:29.869><c> stack</c><00:45:30.140><c> so</c><00:45:30.170><c> it's</c>

00:45:30.490 --> 00:45:30.500 align:start position:0%
other parts of the of the stack so it's
 

00:45:30.500 --> 00:45:32.380 align:start position:0%
other parts of the of the stack so it's
expensive<00:45:31.040><c> to</c><00:45:31.190><c> do</c><00:45:31.369><c> and</c><00:45:31.609><c> it's</c><00:45:32.030><c> always</c><00:45:32.119><c> being</c>

00:45:32.380 --> 00:45:32.390 align:start position:0%
expensive to do and it's always being
 

00:45:32.390 --> 00:45:33.940 align:start position:0%
expensive to do and it's always being
overridden<00:45:32.690><c> by</c><00:45:32.900><c> higher</c><00:45:33.170><c> priority</c><00:45:33.740><c> funding</c>

00:45:33.940 --> 00:45:33.950 align:start position:0%
overridden by higher priority funding
 

00:45:33.950 --> 00:45:36.670 align:start position:0%
overridden by higher priority funding
items<00:45:34.400><c> so</c><00:45:34.720><c> that's</c><00:45:35.720><c> my</c><00:45:35.900><c> excuse</c><00:45:36.320><c> why</c><00:45:36.470><c> we</c><00:45:36.590><c> don't</c>

00:45:36.670 --> 00:45:36.680 align:start position:0%
items so that's my excuse why we don't
 

00:45:36.680 --> 00:45:38.140 align:start position:0%
items so that's my excuse why we don't
have<00:45:36.859><c> tail</c><00:45:37.100><c> call</c><00:45:37.310><c> or</c><00:45:37.520><c> frozen</c><00:45:37.790><c> arrays</c><00:45:38.119><c> right</c>

00:45:38.140 --> 00:45:38.150 align:start position:0%
have tail call or frozen arrays right
 

00:45:38.150 --> 00:45:42.640 align:start position:0%
have tail call or frozen arrays right
now<00:45:39.790><c> boxes</c><00:45:40.790><c> that</c><00:45:40.910><c> really</c><00:45:41.119><c> work</c><00:45:41.350><c> final</c><00:45:42.350><c> fields</c>

00:45:42.640 --> 00:45:42.650 align:start position:0%
now boxes that really work final fields
 

00:45:42.650 --> 00:45:44.830 align:start position:0%
now boxes that really work final fields
really<00:45:42.800><c> should</c><00:45:43.130><c> be</c><00:45:43.220><c> final</c><00:45:43.520><c> they're</c><00:45:43.670><c> not</c><00:45:43.850><c> news</c>

00:45:44.830 --> 00:45:44.840 align:start position:0%
really should be final they're not news
 

00:45:44.840 --> 00:45:46.990 align:start position:0%
really should be final they're not news
flash<00:45:45.140><c> you</c><00:45:45.530><c> can</c><00:45:45.859><c> do</c><00:45:46.160><c> set</c><00:45:46.369><c> accessible</c><00:45:46.880><c> and</c>

00:45:46.990 --> 00:45:47.000 align:start position:0%
flash you can do set accessible and
 

00:45:47.000 --> 00:45:51.960 align:start position:0%
flash you can do set accessible and
change<00:45:47.240><c> them</c><00:45:48.580><c> we</c><00:45:49.580><c> want</c><00:45:49.760><c> truly</c><00:45:50.090><c> frozen</c><00:45:50.570><c> objects</c>

00:45:51.960 --> 00:45:51.970 align:start position:0%
change them we want truly frozen objects
 

00:45:51.970 --> 00:45:54.670 align:start position:0%
change them we want truly frozen objects
there's<00:45:52.970><c> a</c><00:45:53.030><c> connection</c><00:45:53.420><c> between</c><00:45:53.560><c> which</c><00:45:54.560><c> I</c>

00:45:54.670 --> 00:45:54.680 align:start position:0%
there's a connection between which I
 

00:45:54.680 --> 00:45:56.530 align:start position:0%
there's a connection between which I
mentioned<00:45:55.130><c> earlier</c><00:45:55.280><c> between</c><00:45:55.640><c> immutability</c>

00:45:56.530 --> 00:45:56.540 align:start position:0%
mentioned earlier between immutability
 

00:45:56.540 --> 00:45:59.770 align:start position:0%
mentioned earlier between immutability
thank<00:45:57.380><c> you</c><00:45:57.500><c> and</c><00:45:57.680><c> I</c><00:45:58.550><c> think</c><00:45:59.300><c> that's</c><00:45:59.450><c> minutes</c>

00:45:59.770 --> 00:45:59.780 align:start position:0%
thank you and I think that's minutes
 

00:45:59.780 --> 00:46:02.640 align:start position:0%
thank you and I think that's minutes
right<00:46:00.020><c> yeah</c><00:46:00.830><c> okay</c><00:46:01.160><c> not</c><00:46:01.340><c> seconds</c>

00:46:02.640 --> 00:46:02.650 align:start position:0%
right yeah okay not seconds
 

00:46:02.650 --> 00:46:05.230 align:start position:0%
right yeah okay not seconds
there's<00:46:03.650><c> connection</c><00:46:04.010><c> between</c><00:46:04.240><c> mutability</c>

00:46:05.230 --> 00:46:05.240 align:start position:0%
there's connection between mutability
 

00:46:05.240 --> 00:46:08.470 align:start position:0%
there's connection between mutability
and<00:46:05.540><c> object</c><00:46:06.440><c> identity</c><00:46:06.859><c> and</c><00:46:07.190><c> and</c><00:46:07.640><c> we've</c><00:46:08.180><c> come</c>

00:46:08.470 --> 00:46:08.480 align:start position:0%
and object identity and and we've come
 

00:46:08.480 --> 00:46:10.450 align:start position:0%
and object identity and and we've come
to<00:46:08.720><c> in</c><00:46:08.930><c> the</c><00:46:09.200><c> way</c><00:46:09.350><c> we</c><00:46:09.500><c> think</c><00:46:09.859><c> we're</c><00:46:10.340><c> thinking</c>

00:46:10.450 --> 00:46:10.460 align:start position:0%
to in the way we think we're thinking
 

00:46:10.460 --> 00:46:11.950 align:start position:0%
to in the way we think we're thinking
about<00:46:10.670><c> this</c><00:46:10.820><c> prop</c><00:46:11.119><c> these</c><00:46:11.300><c> problems</c><00:46:11.720><c> to</c>

00:46:11.950 --> 00:46:11.960 align:start position:0%
about this prop these problems to
 

00:46:11.960 --> 00:46:14.440 align:start position:0%
about this prop these problems to
realize<00:46:12.680><c> that</c><00:46:12.920><c> object</c><00:46:13.369><c> identity</c><00:46:13.760><c> can</c><00:46:14.330><c> be</c>

00:46:14.440 --> 00:46:14.450 align:start position:0%
realize that object identity can be
 

00:46:14.450 --> 00:46:16.040 align:start position:0%
realize that object identity can be
viewed<00:46:14.660><c> as</c><00:46:14.780><c> a</c><00:46:14.810><c> root</c><00:46:15.109><c> of</c><00:46:15.320><c> many</c><00:46:15.500><c> evil</c>

00:46:16.040 --> 00:46:16.050 align:start position:0%
viewed as a root of many evil
 

00:46:16.050 --> 00:46:17.960 align:start position:0%
viewed as a root of many evil
if<00:46:16.500><c> you</c><00:46:16.650><c> can</c><00:46:16.770><c> get</c><00:46:16.890><c> rid</c><00:46:17.040><c> of</c><00:46:17.070><c> object</c><00:46:17.520><c> identity</c>

00:46:17.960 --> 00:46:17.970 align:start position:0%
if you can get rid of object identity
 

00:46:17.970 --> 00:46:20.300 align:start position:0%
if you can get rid of object identity
then<00:46:18.210><c> immutability</c><00:46:18.780><c> goes</c><00:46:19.140><c> away</c><00:46:19.440><c> also</c>

00:46:20.300 --> 00:46:20.310 align:start position:0%
then immutability goes away also
 

00:46:20.310 --> 00:46:22.220 align:start position:0%
then immutability goes away also
automatically<00:46:21.119><c> but</c><00:46:21.330><c> many</c><00:46:21.510><c> other</c><00:46:21.690><c> bad</c><00:46:21.930><c> things</c>

00:46:22.220 --> 00:46:22.230 align:start position:0%
automatically but many other bad things
 

00:46:22.230 --> 00:46:26.510 align:start position:0%
automatically but many other bad things
go<00:46:22.440><c> away</c><00:46:22.560><c> too</c><00:46:22.820><c> so</c><00:46:24.800><c> basically</c><00:46:25.800><c> even</c><00:46:26.100><c> if</c><00:46:26.369><c> your</c>

00:46:26.510 --> 00:46:26.520 align:start position:0%
go away too so basically even if your
 

00:46:26.520 --> 00:46:29.060 align:start position:0%
go away too so basically even if your
object<00:46:26.700><c> is</c><00:46:27.090><c> very</c><00:46:27.330><c> carefully</c><00:46:28.050><c> organized</c><00:46:28.920><c> so</c>

00:46:29.060 --> 00:46:29.070 align:start position:0%
object is very carefully organized so
 

00:46:29.070 --> 00:46:30.500 align:start position:0%
object is very carefully organized so
that<00:46:29.220><c> you</c><00:46:29.310><c> never</c><00:46:29.460><c> write</c><00:46:29.790><c> it</c><00:46:29.940><c> outside</c><00:46:30.119><c> the</c>

00:46:30.500 --> 00:46:30.510 align:start position:0%
that you never write it outside the
 

00:46:30.510 --> 00:46:33.650 align:start position:0%
that you never write it outside the
constructor<00:46:31.050><c> you</c><00:46:31.530><c> promise</c><00:46:31.980><c> the</c><00:46:32.430><c> JIT</c><00:46:32.670><c> should</c>

00:46:33.650 --> 00:46:33.660 align:start position:0%
constructor you promise the JIT should
 

00:46:33.660 --> 00:46:35.359 align:start position:0%
constructor you promise the JIT should
trust<00:46:33.960><c> you</c><00:46:34.140><c> but</c><00:46:34.350><c> it</c><00:46:34.440><c> won't</c><00:46:34.590><c> because</c><00:46:35.010><c> somebody</c>

00:46:35.359 --> 00:46:35.369 align:start position:0%
trust you but it won't because somebody
 

00:46:35.369 --> 00:46:37.070 align:start position:0%
trust you but it won't because somebody
might<00:46:35.550><c> come</c><00:46:35.700><c> in</c><00:46:35.850><c> with</c><00:46:36.000><c> reflection</c><00:46:36.780><c> and</c><00:46:36.930><c> break</c>

00:46:37.070 --> 00:46:37.080 align:start position:0%
might come in with reflection and break
 

00:46:37.080 --> 00:46:38.450 align:start position:0%
might come in with reflection and break
here<00:46:37.290><c> your</c><00:46:37.500><c> carefully</c><00:46:37.950><c> constructed</c>

00:46:38.450 --> 00:46:38.460 align:start position:0%
here your carefully constructed
 

00:46:38.460 --> 00:46:40.400 align:start position:0%
here your carefully constructed
invariants<00:46:39.150><c> so</c><00:46:39.330><c> we</c><00:46:39.450><c> want</c><00:46:39.630><c> to</c><00:46:39.750><c> enforce</c><00:46:40.050><c> that</c><00:46:40.110><c> at</c>

00:46:40.400 --> 00:46:40.410 align:start position:0%
invariants so we want to enforce that at
 

00:46:40.410 --> 00:46:42.260 align:start position:0%
invariants so we want to enforce that at
the<00:46:40.530><c> VM</c><00:46:40.770><c> level</c><00:46:41.100><c> but</c><00:46:41.550><c> even</c><00:46:41.760><c> if</c><00:46:41.850><c> you</c><00:46:41.940><c> were</c><00:46:42.030><c> able</c>

00:46:42.260 --> 00:46:42.270 align:start position:0%
the VM level but even if you were able
 

00:46:42.270 --> 00:46:43.910 align:start position:0%
the VM level but even if you were able
to<00:46:42.390><c> enforce</c><00:46:42.720><c> all</c><00:46:42.960><c> the</c><00:46:43.080><c> field</c><00:46:43.320><c> as</c><00:46:43.500><c> being</c><00:46:43.530><c> truly</c>

00:46:43.910 --> 00:46:43.920 align:start position:0%
to enforce all the field as being truly
 

00:46:43.920 --> 00:46:46.010 align:start position:0%
to enforce all the field as being truly
final<00:46:44.369><c> the</c><00:46:44.760><c> header</c><00:46:45.030><c> carries</c><00:46:45.540><c> state</c><00:46:45.840><c> the</c>

00:46:46.010 --> 00:46:46.020 align:start position:0%
final the header carries state the
 

00:46:46.020 --> 00:46:47.900 align:start position:0%
final the header carries state the
object<00:46:46.350><c> header</c><00:46:46.500><c> is</c><00:46:46.710><c> stateful</c><00:46:47.190><c> what</c><00:46:47.580><c> state</c>

00:46:47.900 --> 00:46:47.910 align:start position:0%
object header is stateful what state
 

00:46:47.910 --> 00:46:49.700 align:start position:0%
object header is stateful what state
well<00:46:48.210><c> you</c><00:46:48.780><c> have</c><00:46:48.869><c> to</c><00:46:48.990><c> remember</c><00:46:49.140><c> the</c><00:46:49.380><c> system</c>

00:46:49.700 --> 00:46:49.710 align:start position:0%
well you have to remember the system
 

00:46:49.710 --> 00:46:51.260 align:start position:0%
well you have to remember the system
identity<00:46:50.130><c> hash</c><00:46:50.310><c> code</c><00:46:50.580><c> that</c><00:46:50.730><c> you</c><00:46:50.820><c> assigned</c><00:46:51.119><c> it</c>

00:46:51.260 --> 00:46:51.270 align:start position:0%
identity hash code that you assigned it
 

00:46:51.270 --> 00:46:55.370 align:start position:0%
identity hash code that you assigned it
see<00:46:52.050><c> that</c><00:46:52.200><c> word</c><00:46:52.320><c> identity</c><00:46:52.800><c> you</c><00:46:53.700><c> have</c><00:46:53.940><c> to</c><00:46:54.380><c> you</c>

00:46:55.370 --> 00:46:55.380 align:start position:0%
see that word identity you have to you
 

00:46:55.380 --> 00:46:58.310 align:start position:0%
see that word identity you have to you
have<00:46:55.410><c> to</c><00:46:55.910><c> if</c><00:46:56.910><c> you</c><00:46:57.150><c> synchronize</c><00:46:57.660><c> on</c><00:46:57.900><c> it</c><00:46:58.050><c> you</c>

00:46:58.310 --> 00:46:58.320 align:start position:0%
have to if you synchronize on it you
 

00:46:58.320 --> 00:46:59.810 align:start position:0%
have to if you synchronize on it you
have<00:46:58.380><c> to</c><00:46:58.530><c> remember</c><00:46:58.830><c> who's</c><00:46:58.980><c> synchronizing</c><00:46:59.730><c> it</c>

00:46:59.810 --> 00:46:59.820 align:start position:0%
have to remember who's synchronizing it
 

00:46:59.820 --> 00:47:01.130 align:start position:0%
have to remember who's synchronizing it
and<00:46:59.970><c> how</c><00:47:00.030><c> to</c><00:47:00.060><c> unsynchronized</c><00:47:00.600><c> when</c><00:47:01.020><c> you're</c>

00:47:01.130 --> 00:47:01.140 align:start position:0%
and how to unsynchronized when you're
 

00:47:01.140 --> 00:47:04.010 align:start position:0%
and how to unsynchronized when you're
done<00:47:01.460><c> so</c><00:47:02.460><c> there's</c><00:47:02.670><c> a</c><00:47:02.730><c> even</c><00:47:03.330><c> at</c><00:47:03.450><c> one</c><00:47:03.630><c> bit</c><00:47:03.840><c> of</c>

00:47:04.010 --> 00:47:04.020 align:start position:0%
done so there's a even at one bit of
 

00:47:04.020 --> 00:47:05.660 align:start position:0%
done so there's a even at one bit of
state<00:47:04.320><c> that</c><00:47:04.350><c> says</c><00:47:04.650><c> I'm</c><00:47:04.890><c> synchronize</c><00:47:05.340><c> no</c><00:47:05.580><c> I'm</c>

00:47:05.660 --> 00:47:05.670 align:start position:0%
state that says I'm synchronize no I'm
 

00:47:05.670 --> 00:47:08.120 align:start position:0%
state that says I'm synchronize no I'm
not<00:47:05.820><c> yes</c><00:47:06.090><c> I</c><00:47:06.300><c> am</c><00:47:06.450><c> that</c><00:47:07.170><c> is</c><00:47:07.200><c> a</c><00:47:07.440><c> piece</c><00:47:07.710><c> of</c><00:47:07.740><c> state</c>

00:47:08.120 --> 00:47:08.130 align:start position:0%
not yes I am that is a piece of state
 

00:47:08.130 --> 00:47:09.859 align:start position:0%
not yes I am that is a piece of state
and<00:47:08.460><c> otherwise</c><00:47:08.730><c> stateless</c><00:47:09.270><c> object</c><00:47:09.660><c> and</c><00:47:09.780><c> it's</c>

00:47:09.859 --> 00:47:09.869 align:start position:0%
and otherwise stateless object and it's
 

00:47:09.869 --> 00:47:12.560 align:start position:0%
and otherwise stateless object and it's
because<00:47:10.290><c> of</c><00:47:10.560><c> that</c><00:47:10.650><c> darned</c><00:47:11.010><c> identity</c><00:47:11.580><c> so</c>

00:47:12.560 --> 00:47:12.570 align:start position:0%
because of that darned identity so
 

00:47:12.570 --> 00:47:15.530 align:start position:0%
because of that darned identity so
that's<00:47:12.900><c> why</c><00:47:13.050><c> we're</c><00:47:13.230><c> adding</c><00:47:13.380><c> cue</c><00:47:13.800><c> types</c><00:47:14.540><c> two</c>

00:47:15.530 --> 00:47:15.540 align:start position:0%
that's why we're adding cue types two
 

00:47:15.540 --> 00:47:17.450 align:start position:0%
that's why we're adding cue types two
types<00:47:15.570><c> are</c><00:47:15.900><c> completely</c><00:47:16.530><c> identity</c><00:47:17.010><c> hostile</c>

00:47:17.450 --> 00:47:17.460 align:start position:0%
types are completely identity hostile
 

00:47:17.460 --> 00:47:19.460 align:start position:0%
types are completely identity hostile
they<00:47:17.760><c> refuse</c><00:47:18.300><c> to</c><00:47:18.450><c> let</c><00:47:18.600><c> you</c><00:47:18.630><c> see</c><00:47:18.900><c> any</c><00:47:19.080><c> identity</c>

00:47:19.460 --> 00:47:19.470 align:start position:0%
they refuse to let you see any identity
 

00:47:19.470 --> 00:47:21.109 align:start position:0%
they refuse to let you see any identity
there<00:47:19.740><c> is</c><00:47:19.800><c> no</c><00:47:19.980><c> system</c><00:47:20.340><c> identity</c><00:47:20.730><c> hash</c><00:47:20.880><c> code</c>

00:47:21.109 --> 00:47:21.119 align:start position:0%
there is no system identity hash code
 

00:47:21.119 --> 00:47:23.720 align:start position:0%
there is no system identity hash code
birth<00:47:21.330><c> cue</c><00:47:21.570><c> type</c><00:47:21.750><c> only</c><00:47:22.350><c> for</c><00:47:22.800><c> legacy</c><00:47:23.160><c> all</c><00:47:23.490><c> types</c>

00:47:23.720 --> 00:47:23.730 align:start position:0%
birth cue type only for legacy all types
 

00:47:23.730 --> 00:47:25.070 align:start position:0%
birth cue type only for legacy all types
we're<00:47:24.210><c> going</c><00:47:24.330><c> to</c><00:47:24.390><c> leave</c><00:47:24.480><c> the</c><00:47:24.600><c> legacy</c><00:47:24.780><c> all</c>

00:47:25.070 --> 00:47:25.080 align:start position:0%
we're going to leave the legacy all
 

00:47:25.080 --> 00:47:27.800 align:start position:0%
we're going to leave the legacy all
types<00:47:25.320><c> alone</c><00:47:25.680><c> compatibility</c><00:47:26.640><c> is</c><00:47:26.700><c> hard</c><00:47:27.270><c> that's</c>

00:47:27.800 --> 00:47:27.810 align:start position:0%
types alone compatibility is hard that's
 

00:47:27.810 --> 00:47:30.050 align:start position:0%
types alone compatibility is hard that's
the<00:47:28.020><c> dusty</c><00:47:28.350><c> deck</c><00:47:28.530><c> problem</c><00:47:28.920><c> right</c><00:47:29.100><c> but</c><00:47:29.880><c> we're</c>

00:47:30.050 --> 00:47:30.060 align:start position:0%
the dusty deck problem right but we're
 

00:47:30.060 --> 00:47:32.210 align:start position:0%
the dusty deck problem right but we're
going<00:47:30.150><c> to</c><00:47:30.210><c> add</c><00:47:30.359><c> new</c><00:47:30.540><c> types</c><00:47:30.810><c> that</c><00:47:31.200><c> that</c><00:47:31.770><c> do</c><00:47:32.040><c> not</c>

00:47:32.210 --> 00:47:32.220 align:start position:0%
going to add new types that that do not
 

00:47:32.220 --> 00:47:36.650 align:start position:0%
going to add new types that that do not
have<00:47:32.460><c> the</c><00:47:32.700><c> the</c><00:47:33.060><c> flawed</c><00:47:33.600><c> but</c><00:47:33.990><c> of</c><00:47:34.590><c> identity</c><00:47:35.660><c> so</c>

00:47:36.650 --> 00:47:36.660 align:start position:0%
have the the flawed but of identity so
 

00:47:36.660 --> 00:47:38.480 align:start position:0%
have the the flawed but of identity so
and<00:47:37.320><c> also</c><00:47:37.560><c> we're</c><00:47:37.740><c> going</c><00:47:37.830><c> to</c><00:47:37.920><c> work</c><00:47:38.100><c> on</c><00:47:38.280><c> ways</c><00:47:38.460><c> to</c>

00:47:38.480 --> 00:47:38.490 align:start position:0%
and also we're going to work on ways to
 

00:47:38.490 --> 00:47:40.790 align:start position:0%
and also we're going to work on ways to
have<00:47:38.880><c> some</c><00:47:39.420><c> legacy</c><00:47:39.810><c> all</c><00:47:40.080><c> types</c><00:47:40.320><c> that</c><00:47:40.530><c> are</c><00:47:40.650><c> well</c>

00:47:40.790 --> 00:47:40.800 align:start position:0%
have some legacy all types that are well
 

00:47:40.800 --> 00:47:42.500 align:start position:0%
have some legacy all types that are well
conditioned<00:47:41.310><c> like</c><00:47:41.490><c> value</c><00:47:41.790><c> based</c><00:47:41.970><c> classes</c>

00:47:42.500 --> 00:47:42.510 align:start position:0%
conditioned like value based classes
 

00:47:42.510 --> 00:47:45.410 align:start position:0%
conditioned like value based classes
divest<00:47:43.410><c> their</c><00:47:43.710><c> identity</c><00:47:44.220><c> go</c><00:47:44.790><c> masquerade</c><00:47:45.300><c> as</c>

00:47:45.410 --> 00:47:45.420 align:start position:0%
divest their identity go masquerade as
 

00:47:45.420 --> 00:47:47.390 align:start position:0%
divest their identity go masquerade as
cue<00:47:45.660><c> types</c><00:47:45.900><c> and</c><00:47:46.170><c> then</c><00:47:46.440><c> be</c><00:47:46.650><c> more</c><00:47:46.800><c> optimizable</c>

00:47:47.390 --> 00:47:47.400 align:start position:0%
cue types and then be more optimizable
 

00:47:47.400 --> 00:47:50.030 align:start position:0%
cue types and then be more optimizable
in<00:47:47.609><c> that</c><00:47:47.760><c> form</c><00:47:48.030><c> and</c><00:47:48.410><c> then</c><00:47:49.410><c> the</c><00:47:49.530><c> you</c><00:47:49.650><c> types</c><00:47:49.890><c> that</c>

00:47:50.030 --> 00:47:50.040 align:start position:0%
in that form and then the you types that
 

00:47:50.040 --> 00:47:53.140 align:start position:0%
in that form and then the you types that
I<00:47:50.100><c> mentioned</c><00:47:50.460><c> earlier</c><00:47:50.730><c> or</c><00:47:50.940><c> the</c><00:47:51.030><c> top</c><00:47:51.210><c> topper</c>

00:47:53.140 --> 00:47:53.150 align:start position:0%
I mentioned earlier or the top topper
 

00:47:53.150 --> 00:47:55.160 align:start position:0%
I mentioned earlier or the top topper
the<00:47:54.150><c> last</c><00:47:54.359><c> little</c><00:47:54.540><c> bits</c><00:47:54.750><c> I</c><00:47:54.840><c> want</c><00:47:54.990><c> to</c><00:47:55.050><c> talk</c>

00:47:55.160 --> 00:47:55.170 align:start position:0%
the last little bits I want to talk
 

00:47:55.170 --> 00:47:58.280 align:start position:0%
the last little bits I want to talk
about<00:47:55.410><c> in</c><00:47:55.530><c> the</c><00:47:55.619><c> last</c><00:47:55.710><c> 60</c><00:47:56.130><c> seconds</c><00:47:56.550><c> is</c><00:47:56.810><c> some</c><00:47:57.810><c> fit</c>

00:47:58.280 --> 00:47:58.290 align:start position:0%
about in the last 60 seconds is some fit
 

00:47:58.290 --> 00:47:59.359 align:start position:0%
about in the last 60 seconds is some fit
and<00:47:58.410><c> finish</c><00:47:58.650><c> bits</c><00:47:58.859><c> that</c><00:47:59.100><c> we're</c><00:47:59.220><c> looking</c>

00:47:59.359 --> 00:47:59.369 align:start position:0%
and finish bits that we're looking
 

00:47:59.369 --> 00:48:00.760 align:start position:0%
and finish bits that we're looking
thinking<00:47:59.820><c> about</c><00:48:00.000><c> doing</c><00:48:00.150><c> in</c><00:48:00.300><c> the</c><00:48:00.390><c> near</c><00:48:00.510><c> future</c>

00:48:00.760 --> 00:48:00.770 align:start position:0%
thinking about doing in the near future
 

00:48:00.770 --> 00:48:03.770 align:start position:0%
thinking about doing in the near future
nestmates<00:48:01.770><c> which</c><00:48:02.160><c> is</c><00:48:02.310><c> an</c><00:48:02.430><c> uplevel</c><00:48:02.760><c> way</c><00:48:03.090><c> in</c><00:48:03.660><c> the</c>

00:48:03.770 --> 00:48:03.780 align:start position:0%
nestmates which is an uplevel way in the
 

00:48:03.780 --> 00:48:06.050 align:start position:0%
nestmates which is an uplevel way in the
VM<00:48:04.020><c> of</c><00:48:04.260><c> talking</c><00:48:04.650><c> about</c><00:48:04.740><c> a</c><00:48:04.940><c> circle</c><00:48:05.940><c> of</c><00:48:06.030><c> trust</c>

00:48:06.050 --> 00:48:06.060 align:start position:0%
VM of talking about a circle of trust
 

00:48:06.060 --> 00:48:08.599 align:start position:0%
VM of talking about a circle of trust
that<00:48:06.450><c> is</c><00:48:06.600><c> the</c><00:48:06.900><c> single</c><00:48:07.440><c> top-level</c><00:48:07.859><c> form</c><00:48:08.250><c> in</c><00:48:08.520><c> a</c>

00:48:08.599 --> 00:48:08.609 align:start position:0%
that is the single top-level form in a
 

00:48:08.609 --> 00:48:11.300 align:start position:0%
that is the single top-level form in a
Java<00:48:08.850><c> in</c><00:48:09.240><c> a</c><00:48:09.420><c> Java</c><00:48:09.630><c> cup</c><00:48:09.950><c> source</c><00:48:10.950><c> file</c>

00:48:11.300 --> 00:48:11.310 align:start position:0%
Java in a Java cup source file
 

00:48:11.310 --> 00:48:13.760 align:start position:0%
Java in a Java cup source file
you<00:48:11.850><c> know</c><00:48:11.970><c> how</c><00:48:12.200><c> classes</c><00:48:13.200><c> in</c><00:48:13.290><c> the</c><00:48:13.410><c> same</c><00:48:13.560><c> inner</c>

00:48:13.760 --> 00:48:13.770 align:start position:0%
you know how classes in the same inner
 

00:48:13.770 --> 00:48:15.440 align:start position:0%
you know how classes in the same inner
class<00:48:14.040><c> nest</c><00:48:14.369><c> can</c><00:48:14.640><c> talk</c><00:48:14.820><c> to</c><00:48:15.000><c> each</c><00:48:15.090><c> other</c><00:48:15.300><c> and</c>

00:48:15.440 --> 00:48:15.450 align:start position:0%
class nest can talk to each other and
 

00:48:15.450 --> 00:48:17.720 align:start position:0%
class nest can talk to each other and
through<00:48:15.660><c> their</c><00:48:15.780><c> privates</c><00:48:16.200><c> the</c><00:48:16.859><c> JVM</c><00:48:17.369><c> doesn't</c>

00:48:17.720 --> 00:48:17.730 align:start position:0%
through their privates the JVM doesn't
 

00:48:17.730 --> 00:48:20.560 align:start position:0%
through their privates the JVM doesn't
know<00:48:17.820><c> about</c><00:48:17.940><c> that</c><00:48:18.240><c> we're</c><00:48:18.390><c> going</c><00:48:18.480><c> to</c><00:48:18.540><c> fix</c><00:48:18.780><c> that</c>

00:48:20.560 --> 00:48:20.570 align:start position:0%
know about that we're going to fix that
 

00:48:20.570 --> 00:48:23.359 align:start position:0%
know about that we're going to fix that
this<00:48:21.570><c> is</c><00:48:21.720><c> useful</c><00:48:21.900><c> because</c><00:48:22.080><c> that</c><00:48:22.950><c> way</c><00:48:23.100><c> you</c><00:48:23.160><c> can</c>

00:48:23.359 --> 00:48:23.369 align:start position:0%
this is useful because that way you can
 

00:48:23.369 --> 00:48:25.490 align:start position:0%
this is useful because that way you can
have<00:48:23.400><c> these</c><00:48:23.790><c> tiny</c><00:48:24.119><c> right</c><00:48:24.570><c> sized</c><00:48:24.869><c> circles</c><00:48:25.380><c> of</c>

00:48:25.490 --> 00:48:25.500 align:start position:0%
have these tiny right sized circles of
 

00:48:25.500 --> 00:48:27.020 align:start position:0%
have these tiny right sized circles of
trust<00:48:25.530><c> that</c><00:48:25.980><c> can</c><00:48:26.100><c> see</c><00:48:26.220><c> each</c><00:48:26.340><c> other's</c><00:48:26.609><c> private</c>

00:48:27.020 --> 00:48:27.030 align:start position:0%
trust that can see each other's private
 

00:48:27.030 --> 00:48:29.120 align:start position:0%
trust that can see each other's private
invariants<00:48:27.660><c> and</c><00:48:27.780><c> nobody</c><00:48:28.500><c> not</c><00:48:28.710><c> even</c><00:48:28.740><c> in</c><00:48:29.040><c> the</c>

00:48:29.120 --> 00:48:29.130 align:start position:0%
invariants and nobody not even in the
 

00:48:29.130 --> 00:48:29.499 align:start position:0%
invariants and nobody not even in the
same

00:48:29.499 --> 00:48:29.509 align:start position:0%
same
 

00:48:29.509 --> 00:48:31.299 align:start position:0%
same
package<00:48:29.719><c> can</c><00:48:29.959><c> ever</c><00:48:30.319><c> touch</c><00:48:30.619><c> it</c><00:48:30.649><c> and</c><00:48:30.919><c> that's</c>

00:48:31.299 --> 00:48:31.309 align:start position:0%
package can ever touch it and that's
 

00:48:31.309 --> 00:48:33.309 align:start position:0%
package can ever touch it and that's
going<00:48:31.519><c> to</c><00:48:31.579><c> be</c><00:48:31.699><c> good</c><00:48:31.849><c> in</c><00:48:32.029><c> the</c><00:48:32.329><c> VM</c><00:48:32.599><c> but</c><00:48:33.229><c> it</c>

00:48:33.309 --> 00:48:33.319 align:start position:0%
going to be good in the VM but it
 

00:48:33.319 --> 00:48:34.839 align:start position:0%
going to be good in the VM but it
requires<00:48:33.619><c> a</c><00:48:33.739><c> clear</c><00:48:34.039><c> definition</c><00:48:34.519><c> of</c><00:48:34.579><c> what</c><00:48:34.759><c> an</c>

00:48:34.839 --> 00:48:34.849 align:start position:0%
requires a clear definition of what an
 

00:48:34.849 --> 00:48:36.219 align:start position:0%
requires a clear definition of what an
estimated<00:48:35.389><c> so</c><00:48:35.659><c> there's</c><00:48:35.809><c> not</c><00:48:35.959><c> a</c><00:48:35.989><c> clear</c>

00:48:36.219 --> 00:48:36.229 align:start position:0%
estimated so there's not a clear
 

00:48:36.229 --> 00:48:38.079 align:start position:0%
estimated so there's not a clear
definition<00:48:36.409><c> the</c><00:48:36.799><c> VM</c><00:48:37.009><c> can</c><00:48:37.159><c> use</c><00:48:37.309><c> right</c><00:48:37.549><c> now</c><00:48:37.579><c> so</c>

00:48:38.079 --> 00:48:38.089 align:start position:0%
definition the VM can use right now so
 

00:48:38.089 --> 00:48:43.629 align:start position:0%
definition the VM can use right now so
we're<00:48:38.179><c> going</c><00:48:38.269><c> to</c><00:48:38.359><c> put</c><00:48:38.479><c> it</c><00:48:38.569><c> in</c><00:48:42.639><c> sealed</c>

00:48:43.629 --> 00:48:43.639 align:start position:0%
we're going to put it in sealed
 

00:48:43.639 --> 00:48:45.909 align:start position:0%
we're going to put it in sealed
interfaces<00:48:44.229><c> interfaces</c><00:48:45.229><c> are</c><00:48:45.619><c> great</c><00:48:45.799><c> for</c>

00:48:45.909 --> 00:48:45.919 align:start position:0%
interfaces interfaces are great for
 

00:48:45.919 --> 00:48:47.409 align:start position:0%
interfaces interfaces are great for
information<00:48:46.399><c> hiding</c><00:48:46.699><c> but</c><00:48:46.999><c> they're</c><00:48:47.179><c> terrible</c>

00:48:47.409 --> 00:48:47.419 align:start position:0%
information hiding but they're terrible
 

00:48:47.419 --> 00:48:50.349 align:start position:0%
information hiding but they're terrible
as<00:48:48.079><c> a</c><00:48:48.139><c> security</c><00:48:48.669><c> loophole</c><00:48:49.669><c> because</c><00:48:49.819><c> anybody</c>

00:48:50.349 --> 00:48:50.359 align:start position:0%
as a security loophole because anybody
 

00:48:50.359 --> 00:48:53.469 align:start position:0%
as a security loophole because anybody
can<00:48:50.630><c> implement</c><00:48:50.899><c> interface</c><00:48:51.409><c> will</c><00:48:51.649><c> fix</c><00:48:51.829><c> it</c><00:48:52.479><c> will</c>

00:48:53.469 --> 00:48:53.479 align:start position:0%
can implement interface will fix it will
 

00:48:53.479 --> 00:48:55.089 align:start position:0%
can implement interface will fix it will
allow<00:48:53.839><c> an</c><00:48:53.989><c> interface</c><00:48:54.319><c> to</c><00:48:54.469><c> be</c><00:48:54.559><c> clarity</c><00:48:54.979><c> as</c>

00:48:55.089 --> 00:48:55.099 align:start position:0%
allow an interface to be clarity as
 

00:48:55.099 --> 00:48:56.889 align:start position:0%
allow an interface to be clarity as
sealed<00:48:55.429><c> this</c><00:48:55.849><c> is</c><00:48:55.969><c> a</c><00:48:55.999><c> proposal</c><00:48:56.419><c> by</c><00:48:56.659><c> the</c><00:48:56.719><c> way</c>

00:48:56.889 --> 00:48:56.899 align:start position:0%
sealed this is a proposal by the way
 

00:48:56.899 --> 00:48:59.199 align:start position:0%
sealed this is a proposal by the way
don't<00:48:57.439><c> listen</c><00:48:58.189><c> to</c><00:48:58.399><c> my</c><00:48:58.519><c> lawyers</c><00:48:58.849><c> and</c><00:48:58.880><c> don't</c>

00:48:59.199 --> 00:48:59.209 align:start position:0%
don't listen to my lawyers and don't
 

00:48:59.209 --> 00:49:00.519 align:start position:0%
don't listen to my lawyers and don't
don't<00:48:59.479><c> go</c><00:48:59.659><c> to</c><00:48:59.749><c> the</c><00:48:59.839><c> bank</c><00:49:00.019><c> with</c><00:49:00.109><c> this</c><00:49:00.319><c> but</c><00:49:00.499><c> I</c>

00:49:00.519 --> 00:49:00.529 align:start position:0%
don't go to the bank with this but I
 

00:49:00.529 --> 00:49:02.079 align:start position:0%
don't go to the bank with this but I
think<00:49:00.649><c> we're</c><00:49:01.309><c> going</c><00:49:01.399><c> to</c><00:49:01.459><c> have</c><00:49:01.609><c> interfaces</c>

00:49:02.079 --> 00:49:02.089 align:start position:0%
think we're going to have interfaces
 

00:49:02.089 --> 00:49:04.059 align:start position:0%
think we're going to have interfaces
that<00:49:02.179><c> can</c><00:49:02.329><c> be</c><00:49:02.419><c> sealed</c><00:49:02.689><c> as</c><00:49:02.899><c> if</c><00:49:03.619><c> the</c><00:49:03.769><c> interface</c>

00:49:04.059 --> 00:49:04.069 align:start position:0%
that can be sealed as if the interface
 

00:49:04.069 --> 00:49:05.620 align:start position:0%
that can be sealed as if the interface
had<00:49:04.309><c> a</c><00:49:04.339><c> private</c><00:49:04.729><c> constructor</c><00:49:05.149><c> and</c><00:49:05.359><c> was</c><00:49:05.509><c> an</c>

00:49:05.620 --> 00:49:05.630 align:start position:0%
had a private constructor and was an
 

00:49:05.630 --> 00:49:07.809 align:start position:0%
had a private constructor and was an
abstract<00:49:05.869><c> class</c><00:49:06.169><c> and</c><00:49:06.529><c> yet</c><00:49:06.769><c> as</c><00:49:06.949><c> an</c><00:49:07.429><c> interface</c>

00:49:07.809 --> 00:49:07.819 align:start position:0%
abstract class and yet as an interface
 

00:49:07.819 --> 00:49:11.709 align:start position:0%
abstract class and yet as an interface
it<00:49:08.089><c> is</c><00:49:08.239><c> really</c><00:49:08.599><c> very</c><00:49:08.749><c> opaque</c><00:49:10.719><c> ceiling</c>

00:49:11.709 --> 00:49:11.719 align:start position:0%
it is really very opaque ceiling
 

00:49:11.719 --> 00:49:13.839 align:start position:0%
it is really very opaque ceiling
granularity<00:49:12.319><c> should</c><00:49:12.529><c> maybe</c><00:49:12.919><c> be</c><00:49:13.189><c> nest</c><00:49:13.429><c> package</c>

00:49:13.839 --> 00:49:13.849 align:start position:0%
granularity should maybe be nest package
 

00:49:13.849 --> 00:49:16.089 align:start position:0%
granularity should maybe be nest package
or<00:49:13.999><c> module</c><00:49:14.329><c> there's</c><00:49:14.509><c> these</c><00:49:14.630><c> very</c><00:49:15.099><c> useful</c>

00:49:16.089 --> 00:49:16.099 align:start position:0%
or module there's these very useful
 

00:49:16.099 --> 00:49:17.739 align:start position:0%
or module there's these very useful
powerful<00:49:16.519><c> concentric</c><00:49:16.999><c> circles</c><00:49:17.389><c> of</c><00:49:17.509><c> trust</c>

00:49:17.739 --> 00:49:17.749 align:start position:0%
powerful concentric circles of trust
 

00:49:17.749 --> 00:49:20.499 align:start position:0%
powerful concentric circles of trust
that<00:49:17.869><c> the</c><00:49:18.049><c> JVM</c><00:49:18.439><c> supplies</c><00:49:18.829><c> and</c><00:49:19.239><c> finally</c><00:49:20.239><c> sealed</c>

00:49:20.499 --> 00:49:20.509 align:start position:0%
that the JVM supplies and finally sealed
 

00:49:20.509 --> 00:49:23.709 align:start position:0%
that the JVM supplies and finally sealed
fields<00:49:21.669><c> what's</c><00:49:22.669><c> a</c><00:49:22.759><c> sealed</c><00:49:22.969><c> field</c><00:49:23.239><c> well</c><00:49:23.479><c> it's</c><00:49:23.630><c> a</c>

00:49:23.709 --> 00:49:23.719 align:start position:0%
fields what's a sealed field well it's a
 

00:49:23.719 --> 00:49:24.879 align:start position:0%
fields what's a sealed field well it's a
field<00:49:23.929><c> that</c><00:49:24.079><c> you</c><00:49:24.169><c> can</c><00:49:24.319><c> read</c><00:49:24.499><c> but</c><00:49:24.649><c> you</c><00:49:24.709><c> can't</c>

00:49:24.879 --> 00:49:24.889 align:start position:0%
field that you can read but you can't
 

00:49:24.889 --> 00:49:26.620 align:start position:0%
field that you can read but you can't
write<00:49:25.099><c> what</c><00:49:25.519><c> uses</c><00:49:25.880><c> that</c><00:49:26.059><c> isn't</c><00:49:26.329><c> that</c><00:49:26.389><c> just</c><00:49:26.509><c> a</c>

00:49:26.620 --> 00:49:26.630 align:start position:0%
write what uses that isn't that just a
 

00:49:26.630 --> 00:49:28.809 align:start position:0%
write what uses that isn't that just a
final<00:49:26.839><c> field</c><00:49:27.079><c> no</c><00:49:27.319><c> not</c><00:49:27.649><c> if</c><00:49:27.859><c> the</c><00:49:28.009><c> private</c><00:49:28.429><c> access</c>

00:49:28.809 --> 00:49:28.819 align:start position:0%
final field no not if the private access
 

00:49:28.819 --> 00:49:30.459 align:start position:0%
final field no not if the private access
guy<00:49:29.059><c> can</c><00:49:29.329><c> write</c><00:49:29.539><c> it</c><00:49:29.689><c> but</c><00:49:29.839><c> only</c><00:49:30.079><c> the</c><00:49:30.229><c> public</c>

00:49:30.459 --> 00:49:30.469 align:start position:0%
guy can write it but only the public
 

00:49:30.469 --> 00:49:32.769 align:start position:0%
guy can write it but only the public
guys<00:49:30.799><c> can</c><00:49:31.009><c> only</c><00:49:31.130><c> read</c><00:49:31.399><c> it</c><00:49:31.549><c> wouldn't</c><00:49:32.509><c> we</c><00:49:32.599><c> have</c>

00:49:32.769 --> 00:49:32.779 align:start position:0%
guys can only read it wouldn't we have
 

00:49:32.779 --> 00:49:34.839 align:start position:0%
guys can only read it wouldn't we have
used<00:49:33.109><c> fields</c><00:49:33.499><c> a</c><00:49:33.589><c> lot</c><00:49:33.769><c> more</c><00:49:34.099><c> if</c><00:49:34.309><c> they</c><00:49:34.429><c> could</c><00:49:34.699><c> be</c>

00:49:34.839 --> 00:49:34.849 align:start position:0%
used fields a lot more if they could be
 

00:49:34.849 --> 00:49:36.819 align:start position:0%
used fields a lot more if they could be
public<00:49:35.269><c> but</c><00:49:36.019><c> they</c><00:49:36.139><c> couldn't</c><00:49:36.380><c> be</c><00:49:36.499><c> publicly</c>

00:49:36.819 --> 00:49:36.829 align:start position:0%
public but they couldn't be publicly
 

00:49:36.829 --> 00:49:39.159 align:start position:0%
public but they couldn't be publicly
written<00:49:37.239><c> that'd</c><00:49:38.239><c> be</c><00:49:38.359><c> kind</c><00:49:38.539><c> of</c><00:49:38.599><c> cool</c><00:49:38.659><c> wouldn't</c>

00:49:39.159 --> 00:49:39.169 align:start position:0%
written that'd be kind of cool wouldn't
 

00:49:39.169 --> 00:49:41.979 align:start position:0%
written that'd be kind of cool wouldn't
it<00:49:39.199><c> let's</c><00:49:40.039><c> do</c><00:49:40.189><c> it</c><00:49:40.359><c> no</c><00:49:41.359><c> reason</c><00:49:41.599><c> we</c><00:49:41.689><c> can't</c><00:49:41.869><c> do</c>

00:49:41.979 --> 00:49:41.989 align:start position:0%
it let's do it no reason we can't do
 

00:49:41.989 --> 00:49:46.599 align:start position:0%
it let's do it no reason we can't do
in-house<00:49:42.259><c> not</c><00:49:42.559><c> too</c><00:49:42.709><c> late</c><00:49:44.409><c> all</c><00:49:45.409><c> right</c><00:49:45.619><c> so</c><00:49:45.859><c> the</c>

00:49:46.599 --> 00:49:46.609 align:start position:0%
in-house not too late all right so the
 

00:49:46.609 --> 00:49:48.009 align:start position:0%
in-house not too late all right so the
idea<00:49:46.849><c> there</c><00:49:46.999><c> is</c><00:49:47.029><c> a</c><00:49:47.269><c> symmetric</c><00:49:47.779><c> field</c>

00:49:48.009 --> 00:49:48.019 align:start position:0%
idea there is a symmetric field
 

00:49:48.019 --> 00:49:50.229 align:start position:0%
idea there is a symmetric field
accessibility<00:49:48.739><c> more</c><00:49:49.130><c> more</c><00:49:49.579><c> accessible</c><00:49:50.209><c> for</c>

00:49:50.229 --> 00:49:50.239 align:start position:0%
accessibility more more accessible for
 

00:49:50.239 --> 00:49:54.239 align:start position:0%
accessibility more more accessible for
read<00:49:50.779><c> less</c><00:49:51.109><c> accessible</c><00:49:51.469><c> for</c><00:49:51.829><c> right</c><00:49:52.209><c> all</c><00:49:53.209><c> right</c>

00:49:54.239 --> 00:49:54.249 align:start position:0%
read less accessible for right all right
 

00:49:54.249 --> 00:49:56.739 align:start position:0%
read less accessible for right all right
let<00:49:55.249><c> my</c><00:49:55.399><c> lawyers</c><00:49:55.759><c> tell</c><00:49:55.969><c> you</c><00:49:56.119><c> again</c><00:49:56.389><c> not</c><00:49:56.599><c> to</c>

00:49:56.739 --> 00:49:56.749 align:start position:0%
let my lawyers tell you again not to
 

00:49:56.749 --> 00:49:58.479 align:start position:0%
let my lawyers tell you again not to
believe<00:49:56.959><c> anything</c><00:49:57.169><c> I've</c><00:49:57.380><c> said</c><00:49:57.679><c> and</c><00:49:57.949><c> yet</c>

00:49:58.479 --> 00:49:58.489 align:start position:0%
believe anything I've said and yet
 

00:49:58.489 --> 00:50:01.019 align:start position:0%
believe anything I've said and yet
here's<00:49:58.969><c> my</c><00:49:59.119><c> last</c><00:49:59.299><c> my</c><00:50:00.199><c> last</c><00:50:00.349><c> little</c><00:50:00.589><c> bit</c><00:50:00.799><c> here</c>

00:50:01.019 --> 00:50:01.029 align:start position:0%
here's my last my last little bit here
 

00:50:01.029 --> 00:50:05.279 align:start position:0%
here's my last my last little bit here
this<00:50:02.029><c> is</c><00:50:02.179><c> a</c><00:50:02.209><c> piece</c><00:50:02.630><c> of</c><00:50:02.659><c> JVM</c><00:50:03.439><c> language</c><00:50:03.739><c> summit</c>

00:50:05.279 --> 00:50:05.289 align:start position:0%
this is a piece of JVM language summit
 

00:50:05.289 --> 00:50:08.349 align:start position:0%
this is a piece of JVM language summit
graphic<00:50:06.289><c> and</c><00:50:06.529><c> embedded</c><00:50:07.429><c> in</c><00:50:07.579><c> there</c><00:50:07.759><c> is</c><00:50:07.999><c> the</c>

00:50:08.349 --> 00:50:08.359 align:start position:0%
graphic and embedded in there is the
 

00:50:08.359 --> 00:50:11.559 align:start position:0%
graphic and embedded in there is the
secret<00:50:08.989><c> web</c><00:50:09.769><c> address</c><00:50:10.189><c> for</c><00:50:10.459><c> finding</c><00:50:10.909><c> the</c><00:50:11.329><c> bits</c>

00:50:11.559 --> 00:50:11.569 align:start position:0%
secret web address for finding the bits
 

00:50:11.569 --> 00:50:13.659 align:start position:0%
secret web address for finding the bits
of<00:50:11.809><c> this</c><00:50:11.959><c> presentation</c><00:50:12.769><c> my</c><00:50:12.919><c> presentation</c>

00:50:13.659 --> 00:50:13.669 align:start position:0%
of this presentation my presentation
 

00:50:13.669 --> 00:50:17.439 align:start position:0%
of this presentation my presentation
folder<00:50:14.269><c> on</c><00:50:14.479><c> CR</c><00:50:15.079><c> open</c><00:50:15.409><c> JDK</c><00:50:15.529><c> java.net</c><00:50:16.189><c> and</c><00:50:16.609><c> with</c>

00:50:17.439 --> 00:50:17.449 align:start position:0%
folder on CR open JDK java.net and with
 

00:50:17.449 --> 00:50:20.409 align:start position:0%
folder on CR open JDK java.net and with
that<00:50:17.689><c> I'm</c><00:50:17.959><c> done</c><00:50:18.679><c> I'm</c><00:50:18.979><c> really</c><00:50:19.849><c> glad</c><00:50:20.149><c> you're</c>

00:50:20.409 --> 00:50:20.419 align:start position:0%
that I'm done I'm really glad you're
 

00:50:20.419 --> 00:50:22.529 align:start position:0%
that I'm done I'm really glad you're
here

00:50:22.529 --> 00:50:22.539 align:start position:0%
 
 

00:50:22.539 --> 00:50:25.000 align:start position:0%
 
no<00:50:23.539><c> time</c><00:50:23.779><c> for</c><00:50:23.989><c> questions</c>

00:50:25.000 --> 00:50:25.010 align:start position:0%
no time for questions
 

00:50:25.010 --> 00:50:26.160 align:start position:0%
no time for questions
[Music]

00:50:26.160 --> 00:50:26.170 align:start position:0%
[Music]
 

00:50:26.170 --> 00:50:28.510 align:start position:0%
[Music]
[Applause]

00:50:28.510 --> 00:50:28.520 align:start position:0%
[Applause]
 

00:50:28.520 --> 00:50:28.950 align:start position:0%
[Applause]
you

00:50:28.950 --> 00:50:28.960 align:start position:0%
you
 

00:50:28.960 --> 00:50:32.489 align:start position:0%
you
[Music]

