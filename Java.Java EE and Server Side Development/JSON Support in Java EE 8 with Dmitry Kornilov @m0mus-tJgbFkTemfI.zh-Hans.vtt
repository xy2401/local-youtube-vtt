WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.000 --> 00:00:08.670
嗨，我叫米特拉·科尼洛夫（Mitra Kornilov） 

00:00:05.960 --> 00:00:14.130
 Java Enterprise中的JSON支持

00:00:08.670 --> 00:00:17.460
我们将开始版本年龄编码会议

00:00:14.130 --> 00:00:20.160
有一点合法的东西，所以这

00:00:17.460 --> 00:00:24.269
是基本的安全港声明

00:00:20.160 --> 00:00:28.050
说我今天要说的

00:00:24.269 --> 00:00:31.949
我要演示的可能是

00:00:28.050 --> 00:00:34.800
不是最终产品的一部分，所以

00:00:31.949 --> 00:00:40.829
你不应该做关键业务

00:00:34.800 --> 00:00:44.399
基于此的决策现在有点

00:00:40.829 --> 00:00:45.960
关于我自己我没有被抓住

00:00:44.399 --> 00:00:48.149
支持的软件

00:00:45.960 --> 00:00:50.640
画中画，所以我做不到

00:00:48.149 --> 00:00:53.309
和其他人一样在角落里度过的一天

00:00:50.640 --> 00:00:57.600
在屏幕上看到我的照片

00:00:53.309 --> 00:01:00.719
视频聊天，所以我只放我的照片

00:00:57.600 --> 00:01:04.500
这就是我来自哪里的样子

00:01:00.719 --> 00:01:07.710
 Oracle我是Jason Biden拥塞

00:01:04.500 --> 00:01:10.439
去年处理规格线索的原因是

00:01:07.710 --> 00:01:14.100
被授予杰出的技术领先者

00:01:10.439 --> 00:01:16.439
我为自己也开源感到自豪

00:01:14.100 --> 00:01:19.159
爱好者和日食链接项目

00:01:16.439 --> 00:01:19.159
科米达

00:01:19.189 --> 00:01:27.630
足够的介绍让我们开始

00:01:22.549 --> 00:01:31.040
编码，本次会议是有组织的

00:01:27.630 --> 00:01:35.369
今天我创建了一个项目模板

00:01:31.040 --> 00:01:39.720
这是使用JSON处理的

00:01:35.369 --> 00:01:43.799
 Jason binding，我将演示

00:01:39.720 --> 00:01:46.950
现场如何使用相邻的蛋白酶和

00:01:43.799 --> 00:01:50.130
 Jason的绑定功能非常非常

00:01:46.950 --> 00:01:53.159
从非常简单的东西到一些简单的东西

00:01:50.130 --> 00:01:55.170
高级的，我也会

00:01:53.159 --> 00:01:58.469
演示如何使用JSON处理

00:01:55.170 --> 00:02:01.189
条件绑定在一起的结果

00:01:58.469 --> 00:02:03.899
我将放入该存储库

00:02:01.189 --> 00:02:06.149
好吧，也许我会收拾一下

00:02:03.899 --> 00:02:09.119
也许我会在这里发表一些评论

00:02:06.149 --> 00:02:11.670
在把它放好之前先弄好

00:02:09.119 --> 00:02:13.040
不要指望完全一样

00:02:11.670 --> 00:02:19.810
正如你看到的

00:02:13.040 --> 00:02:26.290
你今天会看到，但是会一样

00:02:19.810 --> 00:02:31.549
从功能的角度来看

00:02:26.290 --> 00:02:33.859
这就是我的项目看起来像你的样子

00:02:31.549 --> 00:02:36.319
看到这是一个Maven项目

00:02:33.859 --> 00:02:39.139
这里只有三节课

00:02:36.319 --> 00:02:43.159
模特班，我会碰他们

00:02:39.139 --> 00:02:47.450
将谈论JSON绑定，这是

00:02:43.159 --> 00:02:50.269
我已经预填充的控制台应用程序

00:02:47.450 --> 00:02:52.549
这里的一些UI主题，所以我们不会

00:02:50.269 --> 00:02:56.540
失去时间坐标，所以在运行时

00:02:52.549 --> 00:02:58.579
它会显示这些文本，然后您选择

00:02:56.540 --> 00:03:01.549
您应该输入数字的数字

00:02:58.579 --> 00:03:04.370
您想经营哪些以及GMO 

00:03:01.549 --> 00:03:06.680
在这里列出，所以我有八件事

00:03:04.370 --> 00:03:09.859
演示我们将开始相邻

00:03:06.680 --> 00:03:14.419
处理器，然后我们将转到

00:03:09.859 --> 00:03:15.829
杰森实际上很好地绑定了你

00:03:14.419 --> 00:03:18.409
选择运行的演示

00:03:15.829 --> 00:03:21.739
对应的方法甚至是方法

00:03:18.409 --> 00:03:24.440
这里和目前这种方法是

00:03:21.739 --> 00:03:27.049
空的，所以我也不是奥列格，我空的

00:03:24.440 --> 00:03:29.799
这不是空的，但是如您所见，这是空的

00:03:27.049 --> 00:03:34.940
只是数据准备就没事了

00:03:29.799 --> 00:03:39.500
我会导致我将代码添加到

00:03:34.940 --> 00:03:45.709
您知道在线团结这些方法

00:03:39.500 --> 00:03:48.859
在其他资源上的会话

00:03:45.709 --> 00:03:52.729
我将使用什么JSON文档

00:03:48.859 --> 00:03:57.549
对于我的样品，我想很重要

00:03:52.729 --> 00:04:02.720
这是最大的主文件吗

00:03:57.549 --> 00:04:05.629
这也很简单，让我们走吧

00:04:02.720 --> 00:04:09.319
通过这些快速的依赖我

00:04:05.629 --> 00:04:13.939
只有四个依赖项，这些

00:04:09.319 --> 00:04:16.970
我正在使用Jason抗议API 

00:04:13.939 --> 00:04:20.269
里程碑1版本Jason生产RI 

00:04:16.970 --> 00:04:24.919
作为基础，与Jason绑定相同

00:04:20.269 --> 00:04:26.970
 yassun的API和RI 

00:04:24.919 --> 00:04:30.750
添加是的，所以我在这里

00:04:26.970 --> 00:04:33.950
这个仓库在这里，因为是的

00:04:30.750 --> 00:04:36.090
只使用蚀基础

00:04:33.950 --> 00:04:39.810
它有这样的版本库

00:04:36.090 --> 00:04:42.780
正确建立了仓库任务空间

00:04:39.810 --> 00:04:45.660
部分也很简单

00:04:42.780 --> 00:04:50.750
只有1.8的免费插件编译器

00:04:45.660 --> 00:04:53.940
目标和源只需插入并

00:04:50.750 --> 00:04:59.070
确切的插件，因为我想运行我的

00:04:53.940 --> 00:05:01.940
从控制台主应用程序开始

00:04:59.070 --> 00:05:10.770
看一下我的样子

00:05:01.940 --> 00:05:12.150
编译克林顿的灵魂和确切的Java 

00:05:10.770 --> 00:05:19.460
基于构建项目并

00:05:12.150 --> 00:05:21.750
运行它，哦，也许是所有的东西

00:05:19.460 --> 00:05:24.000
第一次通常需要时间

00:05:21.750 --> 00:05:27.720
不，它相对较快，所以您看到了

00:05:24.000 --> 00:05:29.940
正确的用户界面，然后选择DMO 

00:05:27.720 --> 00:05:31.919
想开始，什么也没发生

00:05:29.940 --> 00:05:37.290
因为这些方法在

00:05:31.919 --> 00:05:42.630
片刻，所以我需要排队来确定

00:05:37.290 --> 00:05:46.110
现在让我们打开演示并开始编码

00:05:42.630 --> 00:05:49.470
 Jason Parson演示演示的东西

00:05:46.110 --> 00:05:54.120
解析JSON文档，这就是全部

00:05:49.470 --> 00:05:58.430
关于我将展示如何打开JSON 

00:05:54.120 --> 00:06:01.890
文档如何使用JSON解析器和

00:05:58.430 --> 00:06:04.380
任务是列出事件中的所有部分

00:06:01.890 --> 00:06:06.780
以及相应的值键和

00:06:04.380 --> 00:06:11.610
之后，最终如何跳过一些

00:06:06.780 --> 00:06:15.360
是Jason文件的一部分

00:06:11.610 --> 00:06:18.030
杰森，这是我要去的文件

00:06:15.360 --> 00:06:20.910
用于该应用程序，如您所见，这是

00:06:18.030 --> 00:06:23.730
至少在JSON文档

00:06:20.910 --> 00:06:27.330
至少免费的Jason's Jason Bourne super 

00:06:23.730 --> 00:06:31.410
代理商，它有一些电话号码，所以你

00:06:27.330 --> 00:06:34.830
可以给他打电话的话

00:06:31.410 --> 00:06:38.640
 Jason Voorhees记得正确的是13 

00:06:34.830 --> 00:06:40.110
所以他也是一个疯子杀手

00:06:38.640 --> 00:06:43.220
一些电话号码

00:06:40.110 --> 00:06:47.970
我不建议给他掩护

00:06:43.220 --> 00:06:52.920
最后一个是亚洲人的杰森

00:06:47.970 --> 00:06:54.270
希腊，如果您愿意，他是Argonauts的领导者

00:06:52.920 --> 00:06:56.660
记住他没有什么不好

00:06:54.270 --> 00:07:02.190
有任何电话号码，因为那个时候

00:06:56.660 --> 00:07:05.430
手机根本不存在，所以

00:07:02.190 --> 00:07:08.910
让我们打开此文档，然后

00:07:05.430 --> 00:07:11.070
解析器解析它解析器的工作方式

00:07:08.910 --> 00:07:14.160
它只是通过文档

00:07:11.070 --> 00:07:19.230
巴纳特人到达时会见面

00:07:14.160 --> 00:07:22.350
一些与杰森有关的领域或谈话或

00:07:19.230 --> 00:07:26.630
基本上不管是什么，所以

00:07:22.350 --> 00:07:34.950
让我们创建一个包裹jsonparser 

00:07:26.630 --> 00:07:39.900
解析器的导入等于jason dot 

00:07:34.950 --> 00:07:44.690
创建包裹，让杰森t有这些杰森

00:07:39.900 --> 00:07:47.610
上课的权利，我只是不知道它有什么

00:07:44.690 --> 00:07:49.800
它具有创建重新加载的方法

00:07:47.610 --> 00:07:53.280
工厂方法就在这里

00:07:49.800 --> 00:07:55.530
建设者批处理发电机等等等等等等

00:07:53.280 --> 00:07:57.630
很多事情都对，所以当您需要时

00:07:55.530 --> 00:08:00.240
创建你总是知道你需要

00:07:57.630 --> 00:08:03.600
从J子类创建它，因此

00:08:00.240 --> 00:08:06.260
非常简单的创建解析器，我们需要

00:08:03.600 --> 00:08:11.100
将输入流传递到此解析器

00:08:06.260 --> 00:08:16.040
像这样获得资源流，我们

00:08:11.100 --> 00:08:20.550
要读我们杰森的杰森

00:08:16.040 --> 00:08:23.730
文档好，所以我们现在有一个解析器

00:08:20.550 --> 00:08:26.930
需要解析一个文档我们该怎么做

00:08:23.730 --> 00:08:33.270
需要有一个循环，直到

00:08:26.930 --> 00:08:36.780
解析器的下一个事件看起来非常相似

00:08:33.270 --> 00:08:39.450
如果您正在使用类似的文件

00:08:36.780 --> 00:08:43.800
这样，现在我们需要获取事件

00:08:39.450 --> 00:08:50.390
本身，我们使用解析下一个方法

00:08:43.800 --> 00:08:56.899
这是事件，所以事件E对

00:08:50.390 --> 00:09:02.630
我会这样说，现在我们只打印

00:08:56.899 --> 00:09:05.470
列出事件的名称，然后运行它， 

00:09:02.630 --> 00:09:16.370
看看它怎么运作

00:09:05.470 --> 00:09:18.740
编译它很慢，是的，它运行了

00:09:16.370 --> 00:09:22.450
莫一号，你已经看到了

00:09:18.740 --> 00:09:29.000
真实，所以如果我们打开JSON 

00:09:22.450 --> 00:09:31.220
您在解析器时看到的文档

00:09:29.000 --> 00:09:33.800
到达只是在说它开始数组

00:09:31.220 --> 00:09:36.350
启动足够跟踪的乌鸦然后走

00:09:33.800 --> 00:09:38.570
开始对象在这里和之后

00:09:36.350 --> 00:09:40.760
那是名称和之后的关键

00:09:38.570 --> 00:09:44.120
那个收音机仍然靠近球等等

00:09:40.760 --> 00:09:46.930
等等等等等等，当它到达时

00:09:44.120 --> 00:09:50.510
数组的末尾或

00:09:46.930 --> 00:09:53.269
对象，它具有最终对象和乌鸦

00:09:50.510 --> 00:09:55.430
对，这样它解析所有

00:09:53.269 --> 00:09:57.620
文档，所以我们现在要做什么

00:09:55.430 --> 00:09:59.540
我们将通过电子邮件发送它到达关键

00:09:57.620 --> 00:10:01.579
我们将只打印出名称

00:09:59.540 --> 00:10:07.000
当它达到值时就关键

00:10:01.579 --> 00:10:07.000
打印出来，我们将打印出值

00:10:07.120 --> 00:10:16.490
让我们关闭它运行演示

00:10:13.449 --> 00:10:19.430
好的，在这种情况下，我们需要

00:10:16.490 --> 00:10:22.220
正确区分他们的赌注，这样当我们

00:10:19.430 --> 00:10:24.890
获取此键名或wave输入值

00:10:22.220 --> 00:10:26.180
字符串将打印此值，如果一些

00:10:24.890 --> 00:10:30.140
否则我们必须保持

00:10:26.180 --> 00:10:33.410
对，所以为了做到这一点，我们只需要

00:10:30.140 --> 00:10:38.510
开关声明在这里切换对不起

00:10:33.410 --> 00:10:45.019
切换事件的权利，以防万一

00:10:38.510 --> 00:10:51.050
名称，或者如果它是非常字符串，我们将

00:10:45.019 --> 00:10:51.670
只需打印出值解析器获取

00:10:51.050 --> 00:10:54.050
特技

00:10:51.670 --> 00:10:55.459
那么哪个包裹仍然有羊角面包

00:10:54.050 --> 00:10:58.970
实际上是教育的价值

00:10:55.459 --> 00:11:01.819
文档使其变得更好，或者我们

00:10:58.970 --> 00:11:02.800
需要在这里删除打印线

00:11:01.819 --> 00:11:10.360
只是三个

00:11:02.800 --> 00:11:14.999
让它像这样，好吧，让我们做

00:11:10.360 --> 00:11:18.699
这样我们需要找到突破

00:11:14.999 --> 00:11:22.540
看起来不太好，我想所以

00:11:18.699 --> 00:11:26.290
确认一下，我忘了创建Street 

00:11:22.540 --> 00:11:28.600
并再次编译我的计算机

00:11:26.290 --> 00:11:30.670
现在开始编译时滚动

00:11:28.600 --> 00:11:34.410
只是希望你不会

00:11:30.670 --> 00:11:40.600
听到了，但我听到，好了

00:11:34.410 --> 00:11:42.910
然后您会看到它是否为键名

00:11:40.600 --> 00:11:45.239
当您偷Jason Bourne等等时

00:11:42.910 --> 00:11:49.329
等等看起来很棒

00:11:45.239 --> 00:11:52.149
好吧，所以我认为前两个

00:11:49.329 --> 00:11:56.790
任务已经完成，但是我们还有一个

00:11:52.149 --> 00:12:01.059
第三个人想像

00:11:56.790 --> 00:12:04.029
这些电话号码数组是巨大的杰森

00:12:01.059 --> 00:12:05.709
 Voorhees是他工作的超级经纪人

00:12:04.029 --> 00:12:07.720
我想如果每个国家都不同

00:12:05.709 --> 00:12:09.730
他有一个国家的电话号码，也许很多

00:12:07.720 --> 00:12:12.249
他从号码更改的电话号码

00:12:09.730 --> 00:12:15.730
每天你都知道超级特工，所以他

00:12:12.249 --> 00:12:18.069
电话号码数组可能很大，我们

00:12:15.730 --> 00:12:23.559
不想解析我们想跳过

00:12:18.069 --> 00:12:29.519
没错，所以怎么做很容易

00:12:23.559 --> 00:12:32.379
并且因为Jason P版本1.1具有

00:12:29.519 --> 00:12:34.569
跳过擦除的方法

00:12:32.379 --> 00:12:37.480
基本上当你跳过对象

00:12:34.569 --> 00:12:45.339
里面马上走到它的尽头

00:12:37.480 --> 00:12:50.350
对，所以这意味着如果我们

00:12:45.339 --> 00:12:55.360
要么我们需要跳过它解析器跳过

00:12:50.350 --> 00:12:55.899
数组正确，但是现在，如果我保持它像

00:12:55.360 --> 00:12:59.679
那

00:12:55.899 --> 00:13:01.509
它不会起作用，因为该文档

00:12:59.679 --> 00:13:04.689
本身至少是数组的权利

00:13:01.509 --> 00:13:06.459
所以启动环是第一要素

00:13:04.689 --> 00:13:09.879
所以它什么也不会做

00:13:06.459 --> 00:13:12.819
只需要跳过其中的电话号码数组

00:13:09.879 --> 00:13:14.870
为了做到这一点，我将介绍一个

00:13:12.819 --> 00:13:18.170
串

00:13:14.870 --> 00:13:23.060
我们将保持当前密钥的位置

00:13:18.170 --> 00:13:28.130
稍微修改一下我们的样本

00:13:23.060 --> 00:13:31.550
如果您遇到钥匙，我们就把它放好

00:13:28.130 --> 00:13:34.460
到我们的变量中，是的，您需要打印

00:13:31.550 --> 00:13:41.890
正确，您需要打印并挂起

00:13:34.460 --> 00:13:50.150
就在这里，如果这些关键

00:13:41.890 --> 00:13:57.170
等于我需要跳过数组的四个数字

00:13:50.150 --> 00:14:02.540
然后中断，这是个好消息

00:13:57.170 --> 00:14:06.860
是的没关系，所以让我们运行它， 

00:14:02.540 --> 00:14:13.130
再检查一下

00:14:06.860 --> 00:14:15.560
它有效，我有一种感觉

00:14:13.130 --> 00:14:18.200
编译越来越慢，因为

00:14:15.560 --> 00:14:23.840
我们正在老化代码，可能是

00:14:18.200 --> 00:14:26.270
客观，好的，我选择第一，好的

00:14:23.840 --> 00:14:28.310
喜欢工作，所以你看到我们有

00:14:26.270 --> 00:14:30.410
初学者，然后楔入它会

00:14:28.310 --> 00:14:32.780
立即终止对象，这样我们就不会

00:14:30.410 --> 00:14:35.210
这里有电话号码，哦，我们有钥匙

00:14:32.780 --> 00:14:37.730
数字，但里面的内容被跳过

00:14:35.210 --> 00:14:41.540
所以这实际上正是我们

00:14:37.730 --> 00:14:46.340
想要如此庞大的电话号码数组，我们

00:14:41.540 --> 00:14:48.530
只是跳过好吧，所以我们完成了

00:14:46.340 --> 00:14:51.920
第一个演示让我们跳到另一个

00:14:48.530 --> 00:14:55.550
杰森（Jason）生成了它们，哦，在这里我们将

00:14:51.920 --> 00:14:57.590
生成类似于jason的文档

00:14:55.550 --> 00:15:02.480
杰森在课程中有时您需要

00:14:57.590 --> 00:15:05.150
在代码中生成杰森来做到这一点

00:15:02.480 --> 00:15:08.180
杰森B的班级叫杰森

00:15:05.150 --> 00:15:11.600
生成器现在只需创建它

00:15:08.180 --> 00:15:13.310
我再称它为Jan 

00:15:11.600 --> 00:15:16.400
需要创建一些我需要去的东西

00:15:13.310 --> 00:15:19.580
杰森（Jason）类权创建生成器Beta 

00:15:16.400 --> 00:15:21.050
进行投射，我们需要在此处传递

00:15:19.580 --> 00:15:24.770
实际上我们想正确生成它

00:15:21.050 --> 00:15:27.300
输出流，我们将使用系统

00:15:24.770 --> 00:15:29.820
出脚本

00:15:27.300 --> 00:15:35.910
好的，所以我们现在创建了发电机

00:15:29.820 --> 00:15:38.670
让我们开始生成，第一个

00:15:35.910 --> 00:15:40.970
元素基本上是我们的列表

00:15:38.670 --> 00:15:42.709
杰森（Jason）的权利，所以第一个要素是

00:15:40.970 --> 00:15:50.940
开始

00:15:42.709 --> 00:15:54.990
好吧好吧明星吧好吧之后

00:15:50.940 --> 00:15:58.380
我们将要放置第三个JSON 

00:15:54.990 --> 00:16:01.500
我的意思是Jason Bourne这里的对象

00:15:58.380 --> 00:16:06.870
在这里包含杰森板，所以我们需要

00:16:01.500 --> 00:16:09.089
马上写起始对象

00:16:06.870 --> 00:16:12.060
发电机有一个不错的建造者

00:16:09.089 --> 00:16:14.910
界面非常易于使用，因此

00:16:12.060 --> 00:16:19.440
之后，我们需要写我们的商店

00:16:14.910 --> 00:16:22.019
产权，关键是名称和

00:16:19.440 --> 00:16:27.660
值是Jason Bourne 

00:16:22.019 --> 00:16:30.149
然后像这样的Jason Board和

00:16:27.660 --> 00:16:34.200
如果我是第二产业的话

00:16:30.149 --> 00:16:39.350
记得很好的职业和他的

00:16:34.200 --> 00:16:42.990
专业是超级代理人的权利， 

00:16:39.350 --> 00:16:47.640
之后再加上电话号码

00:16:42.990 --> 00:16:49.709
所以我们需要写开始数组

00:16:47.640 --> 00:16:52.560
我们实际上需要在这里传递密钥

00:16:49.709 --> 00:16:56.760
四个数字正确

00:16:52.560 --> 00:17:02.459
再在里面，我们需要写

00:16:56.760 --> 00:17:05.880
起始对象，在那个对象中

00:17:02.459 --> 00:17:11.089
首先有两个属性

00:17:05.880 --> 00:17:11.089
电话号码的类型，所以它是家

00:17:11.839 --> 00:17:20.339
实际上，数字本身很正确

00:17:15.350 --> 00:17:25.140
数字，如果我记得很好，数字是

00:17:20.339 --> 00:17:27.510
这样不是因为我在打电话

00:17:25.140 --> 00:17:31.380
他很多，只是因为人数非常多

00:17:27.510 --> 00:17:34.110
很简单，这就是对象的终点

00:17:31.380 --> 00:17:37.290
所以我们需要写完

00:17:34.110 --> 00:17:39.900
对象权限，JSONP有一种方法

00:17:37.290 --> 00:17:40.860
正确的写作和结束一切

00:17:39.900 --> 00:17:43.230
所以

00:17:40.860 --> 00:17:47.190
它用于对象的结尾， 

00:17:43.230 --> 00:17:49.409
对于数组的末尾，所以我们要关闭

00:17:47.190 --> 00:17:52.559
现在关闭该数组的对象

00:17:49.409 --> 00:17:54.450
现在我们要关闭一个小物体

00:17:52.559 --> 00:18:03.000
我们在这里

00:17:54.450 --> 00:18:05.340
哦，关闭我们的三个，还有什么

00:18:03.000 --> 00:18:08.580
看一下闪光灯，看起来像

00:18:05.340 --> 00:18:12.120
就是这样，然后启动它，看看如何

00:18:08.580 --> 00:18:16.769
它就像忘记创建所有

00:18:12.120 --> 00:18:19.679
时间，让我们来编译它

00:18:16.769 --> 00:18:23.250
应该像源零件一样生产

00:18:19.679 --> 00:18:25.590
我在JSON JSON文档中使用的

00:18:23.250 --> 00:18:29.070
第一个样本让我们在这里看看

00:18:25.590 --> 00:18:31.169
这里这个数组的第一个对象杰森

00:18:29.070 --> 00:18:34.380
伯恩超级经纪人电话号码等等

00:18:31.169 --> 00:18:39.419
等等等等等等等等

00:18:34.380 --> 00:18:42.690
太好了，现在我们可以转到第四

00:18:39.419 --> 00:18:48.179
示例，例如流API 

00:18:42.690 --> 00:18:56.669
正确，因此在JSONP 1.1中，我们添加了支持

00:18:48.179 --> 00:19:00.179
 Java 8流API，因此我们可以

00:18:56.669 --> 00:19:02.010
实际读取JSON对象并使用

00:19:00.179 --> 00:19:06.919
蒸API做类似的事情

00:19:02.010 --> 00:19:10.380
从这个样本中，我将使用另一个

00:19:06.919 --> 00:19:14.610
我准备的JSON文档，这是一个

00:19:10.380 --> 00:19:16.799
像购物车的清单，我在这里

00:19:14.610 --> 00:19:19.169
再次有这是最少的，它有

00:19:16.799 --> 00:19:22.110
那里有自由物体，这就是我绑定的东西

00:19:19.169 --> 00:19:24.570
并通过马丁球400美元购买

00:19:22.110 --> 00:19:26.250
一张500美元的视频卡

00:19:24.570 --> 00:19:28.230
所以它应该很好玩

00:19:26.250 --> 00:19:31.320
收集18克力或类似的东西

00:19:28.230 --> 00:19:37.049
那我买了一个PC机箱

00:19:31.320 --> 00:19:39.179
不确定饿的盒子便宜吗

00:19:37.049 --> 00:19:41.549
我将能够组装好的PC 

00:19:39.179 --> 00:19:45.210
从那开始，但是无论如何这只是一个

00:19:41.549 --> 00:19:46.769
示范权，我们是什么

00:19:45.210 --> 00:19:49.590
将要使用的东西

00:19:46.769 --> 00:19:52.970
流API以获取

00:19:49.590 --> 00:19:52.970
正确的汽车

00:19:53.019 --> 00:19:58.370
伯爵首先需要阅读

00:19:55.909 --> 00:20:01.870
 JSON文档，我们将使用JSON 

00:19:58.370 --> 00:20:05.750
那个杰森的读者

00:20:01.870 --> 00:20:09.649
读者抱歉

00:20:05.750 --> 00:20:12.380
以后等于再次杰森创造

00:20:09.649 --> 00:20:23.200
阅读器，我们将创建阅读器

00:20:12.380 --> 00:20:23.200
来自我们的证件卡是

00:20:24.220 --> 00:20:35.899
现在我们需要将所有内容读取为JSON 

00:20:28.130 --> 00:20:38.450
数组，因为它的数组jason数组现在

00:20:35.899 --> 00:20:40.330
实际上是反过来做的

00:20:38.450 --> 00:20:45.130
因为我需要证明一个

00:20:40.330 --> 00:20:48.529
流式API，因此您所看到的更少

00:20:45.130 --> 00:20:52.250
读者，我们需要像这样读取数组

00:20:48.529 --> 00:20:55.399
那和那个读取数组它有一个方法

00:20:52.250 --> 00:20:59.690
叫溪，所以要休息一下

00:20:55.399 --> 00:21:02.570
我们可以正确使用流式API，所以我们

00:20:59.690 --> 00:21:05.269
需要哦，不需要收集所有权利

00:21:02.570 --> 00:21:08.480
写只是需要收集，因为我们

00:21:05.269 --> 00:21:10.700
实际上需要一张地图，我们需要绘制地图

00:21:08.480 --> 00:21:14.440
而不是映射，我们需要映射为两倍

00:21:10.700 --> 00:21:18.860
因为双倍的价格是双倍的权利

00:21:14.440 --> 00:21:21.470
现在我们在这里放一个简单的lambda 

00:21:18.860 --> 00:21:24.230
实际上是从我们那里提取价格

00:21:21.470 --> 00:21:27.769
在那里的对象和lambda将看起来

00:21:24.230 --> 00:21:31.190
这样的事情，我们需要得到

00:21:27.769 --> 00:21:33.470
对象作为JSON对象，所以我们迷雾了

00:21:31.190 --> 00:21:38.750
得到了我们的JSON对象，其名称和

00:21:33.470 --> 00:21:42.919
价格在这里，我们需要得到一个

00:21:38.750 --> 00:21:45.409
一个城市的属性的数字值

00:21:42.919 --> 00:21:48.409
物业价格，如果我还记得的话

00:21:45.409 --> 00:21:54.559
是很快检查耶和名称和价格

00:21:48.409 --> 00:21:58.100
好吧，回价格，我们需要得到一个

00:21:54.559 --> 00:22:01.039
两倍的价值，所以很容易

00:21:58.100 --> 00:22:04.830
在那之后，我们只需要

00:22:01.039 --> 00:22:12.270
总结所有这些

00:22:04.830 --> 00:22:17.160
并打印出来，我只是把

00:22:12.270 --> 00:22:23.940
它到变量，我打印出来

00:22:17.160 --> 00:22:27.960
变量在这里，让我们运行它看看

00:22:23.940 --> 00:22:32.640
它有效与否以及

00:22:27.960 --> 00:22:38.090
总金额应该是700 

00:22:32.640 --> 00:22:42.990
如果我记得很好的话，是的

00:22:38.090 --> 00:22:46.620
 700看起来如此工作，这就是方法

00:22:42.990 --> 00:22:51.330
使用Java似乎是流式API 

00:22:46.620 --> 00:22:55.500
 JSON处理好了，现在

00:22:51.330 --> 00:22:59.400
跳到有趣的地方是

00:22:55.500 --> 00:23:02.460
 JSON指针，这是JSONP的功能

00:22:59.400 --> 00:23:06.150
 1.1，这是最重要的之一

00:23:02.460 --> 00:23:08.430
请求的功能，在这里我会

00:23:06.150 --> 00:23:13.710
演示如何创建Jason指针

00:23:08.430 --> 00:23:21.000
以及如何打印出它的值

00:23:13.710 --> 00:23:25.500
首先，左键点击

00:23:21.000 --> 00:23:30.690
使用我们的Jason文档并创建一个

00:23:25.500 --> 00:23:36.240
指向第一个杰森职业的指针

00:23:30.690 --> 00:23:37.980
伯恩吧，它看起来像是

00:23:36.240 --> 00:23:49.310
我们需要创建一个Jason指针

00:23:37.980 --> 00:23:51.750
再次，P Jason创建了正确的指针， 

00:23:49.310 --> 00:23:55.560
然后在指针上签名，我们需要放一个

00:23:51.750 --> 00:23:59.370
类似于XPath的字符串

00:23:55.560 --> 00:24:01.410
在JSON文档中，所以我们总是

00:23:59.370 --> 00:24:03.420
从根开始，因为它是

00:24:01.410 --> 00:24:06.390
我们需要获取第一个元素的数组

00:24:03.420 --> 00:24:11.510
数组的0，之后

00:24:06.390 --> 00:24:16.190
我们正在获得职业财产

00:24:11.510 --> 00:24:16.190
这很简单

00:24:17.860 --> 00:24:25.360
现在我们需要将此指针应用于

00:24:21.580 --> 00:24:30.590
一些JSON文档来提取这个

00:24:25.360 --> 00:24:37.460
那里的价值，所以基本上我们需要

00:24:30.590 --> 00:24:39.919
阅读我们的Jason，因为您可以从

00:24:37.460 --> 00:24:43.460
是啊

00:24:39.919 --> 00:24:47.659
所以我们正在阅读Jason的文档

00:24:43.460 --> 00:24:55.490
然后让我们创建一个数组jason 

00:24:47.659 --> 00:25:01.580
数组Jason's，它是从

00:24:55.490 --> 00:25:04.700
读者读者迭代，所以我们有杰森的

00:25:01.580 --> 00:25:08.960
现在，我们现在可以应用此

00:25:04.700 --> 00:25:17.230
指向文档的指针正确

00:25:08.960 --> 00:25:20.679
它可以解决那个指针，并且具有

00:25:17.230 --> 00:25:25.960
 getvalue方法正确，我们通过了

00:25:20.679 --> 00:25:28.490
杰森就在这里，应该

00:25:25.960 --> 00:25:33.490
得到与此对应的值

00:25:28.490 --> 00:25:42.880
他们的指针，所以这就是杰森的价值

00:25:33.490 --> 00:25:42.880
杰森重视职业并打印出来

00:25:44.590 --> 00:25:54.309
字符串的精度让我们看看我们

00:25:51.770 --> 00:25:54.309
将有

00:26:00.570 --> 00:26:11.410
结合编译是的，这是

00:26:05.799 --> 00:26:13.240
第四个，它不能正常工作

00:26:11.410 --> 00:26:15.640
并说您不存在的名字

00:26:13.240 --> 00:26:19.690
配对对象等等等等键

00:26:15.640 --> 00:26:23.590
我在某个地方犯了错误

00:26:19.690 --> 00:26:26.020
这里生鱼

00:26:23.590 --> 00:26:28.240
是的，看起来还不错，但这是错误的

00:26:26.020 --> 00:26:31.210
文档，因为我可以粘贴在这里

00:26:28.240 --> 00:26:34.660
应该是杰森的权利， 

00:26:31.210 --> 00:26:38.669
然后我把卡放在那里对不起

00:26:34.660 --> 00:26:38.669
关于这个，让我们再试一次

00:26:44.580 --> 00:26:53.620
好吧，我希望现在可以正常工作了

00:26:50.470 --> 00:26:57.520
杰森·伯恩超级经纪人专业

00:26:53.620 --> 00:27:03.100
对，所以只是为了确认它是否有效

00:26:57.520 --> 00:27:05.410
然后将其更改为此

00:27:03.100 --> 00:27:09.070
应该表现出专业

00:27:05.410 --> 00:27:12.960
第二个杰森吧，让我们运行它， 

00:27:09.070 --> 00:27:12.960
应该是疯子吗

00:27:18.990 --> 00:27:31.240
是的，当你的杀手，这是怎么

00:27:25.960 --> 00:27:33.520
杰森指针工作正常

00:27:31.240 --> 00:27:38.110
完成-Jason指针和下一个

00:27:33.520 --> 00:27:39.870
一页相邻，什么是杰森

00:27:38.110 --> 00:27:43.210
页

00:27:39.870 --> 00:27:45.460
杰森·佩奇（Jason Page）基本上是

00:27:43.210 --> 00:27:47.559
宠物你杰森文件基本上改变

00:27:45.460 --> 00:27:50.850
他们或在那里添加一些东西或

00:27:47.559 --> 00:27:54.580
从那里删除东西就像

00:27:50.850 --> 00:27:57.010
您正在使用源代码

00:27:54.580 --> 00:27:59.650
例如可以吃的仓库

00:27:57.010 --> 00:28:01.840
您有一个源文件，并创建了一个

00:27:59.650 --> 00:28:03.940
修补您更改的内容，然后创建

00:28:01.840 --> 00:28:06.370
修补程序不是您将修补程序应用于

00:28:03.940 --> 00:28:10.270
该原始文件产生新的

00:28:06.370 --> 00:28:13.810
对，这与JSONP相同

00:28:10.270 --> 00:28:18.600
如果diiemma会拿出jason的

00:28:13.810 --> 00:28:22.300
一个文档，我们将创建一个页面

00:28:18.600 --> 00:28:24.190
那里有很多东西

00:28:22.300 --> 00:28:27.420
将从那里删除最后一个杰森

00:28:24.190 --> 00:28:31.800
只有正确的，它将取代

00:28:27.420 --> 00:28:38.250
 Jason权利的资源专业

00:28:31.800 --> 00:28:42.070
因此，为了做到这一点，让我们阅读

00:28:38.250 --> 00:28:45.160
杰森这样的文件我复制粘贴了

00:28:42.070 --> 00:28:49.410
在这里，希望这是正确的

00:28:45.160 --> 00:28:53.620
时间杰森的杰森，我们有杰森的

00:28:49.410 --> 00:28:57.460
 Jason现在在这里，让我们创建Jason 

00:28:53.620 --> 00:29:02.050
杰森（Jason）补丁正确杰森（Jason）提取

00:28:57.460 --> 00:29:04.030
获取我们使用Jason类创建补丁

00:29:02.050 --> 00:29:06.190
再次，但是我们要创建页面

00:29:04.030 --> 00:29:10.410
建造者在这里，我们将建立

00:29:06.190 --> 00:29:13.720
修补程序正确，因此创建页面构建器并

00:29:10.410 --> 00:29:18.520
我们要做的第一件事

00:29:13.720 --> 00:29:22.450
将要删除，我们将要

00:29:18.520 --> 00:29:25.870
删除最后一个杰森这是一点点

00:29:22.450 --> 00:29:30.790
阿尔贡人我们在这里不需要他

00:29:25.870 --> 00:29:34.510
作为参数我们提供了指针

00:29:30.790 --> 00:29:38.050
到您要删除的对象，他

00:29:34.510 --> 00:29:41.590
在发行版中是免费的，所以

00:29:38.050 --> 00:29:45.670
像这样，第二项操作是

00:29:41.590 --> 00:29:50.460
将被替换，我们将

00:29:45.670 --> 00:29:55.420
取代我们的第一职业

00:29:50.460 --> 00:30:01.360
杰森（Jason）是杰森·摩尔（Jason Moore）并替换

00:29:55.420 --> 00:30:05.200
它与疯狂的杀手，所以他将成为

00:30:01.360 --> 00:30:07.150
一个迷你杀手，也许是正确的

00:30:05.200 --> 00:30:09.370
因为他在超级经纪人中

00:30:07.150 --> 00:30:12.670
很多人都是他的

00:30:09.370 --> 00:30:14.770
白话权，我们要去

00:30:12.670 --> 00:30:17.860
没有我们想要我们不想拥有

00:30:14.770 --> 00:30:24.220
我们列表中的杀手太多，所以我们会

00:30:17.860 --> 00:30:26.630
取代Jason电影的职业

00:30:24.220 --> 00:30:31.620
超级特工

00:30:26.630 --> 00:30:33.809
这也可能是正确的，因为

00:30:31.620 --> 00:30:36.450
电影里从来没有说过他不是

00:30:33.809 --> 00:30:39.450
分离，所以也许他实际上是超级

00:30:36.450 --> 00:30:43.340
代理执行一些非常复杂的任务

00:30:39.450 --> 00:30:47.159
还是无论如何看起来像这样

00:30:43.340 --> 00:30:50.640
好吧，很伤心，因为我忘了我

00:30:47.159 --> 00:30:53.760
忘了建现在看起来还好

00:30:50.640 --> 00:30:54.900
现在我们需要将此补丁应用于

00:30:53.760 --> 00:30:57.630
对的东西

00:30:54.900 --> 00:31:03.210
基本上我们是相似的模式

00:30:57.630 --> 00:31:05.789
在这里使用所有适用的补丁程序，我们

00:31:03.210 --> 00:31:11.549
将其应用到Jason的列表中

00:31:05.789 --> 00:31:16.559
这样，它将产生一个新的JSON 

00:31:11.549 --> 00:31:19.860
数组结果正确，我们需要打印

00:31:16.559 --> 00:31:25.649
结果出来就可以了

00:31:19.860 --> 00:31:33.440
结果正确串起来就好了

00:31:25.649 --> 00:31:33.440
让我们运行它，看看它如何工作

00:31:37.970 --> 00:31:45.570
好的，这是号码表号码

00:31:41.610 --> 00:31:49.789
五好，所以我们这里有

00:31:45.570 --> 00:31:54.120
相邻的球，这是躁狂症的杀手

00:31:49.789 --> 00:31:57.539
作品，我们有Jason Voorhees和

00:31:54.120 --> 00:32:04.200
他是一个超级超级经纪人，我们不

00:31:57.539 --> 00:32:08.580
有杰森要出去，所以

00:32:04.200 --> 00:32:14.429
似乎有效，所以这是使用方法

00:32:08.580 --> 00:32:18.480
杰森补丁，看起来像我们

00:32:14.429 --> 00:32:23.190
完成了杰森抗议演示， 

00:32:18.480 --> 00:32:26.100
现在我们将跳入Jason绑定BMO 

00:32:23.190 --> 00:32:28.230
对，Jason是什么约束Jason 

00:32:26.100 --> 00:32:31.080
绑定密钥允许的框架

00:32:28.230 --> 00:32:33.690
您购买Jason to Java对象并

00:32:31.080 --> 00:32:36.750
反之亦然，所以基本上是序列化和

00:32:33.690 --> 00:32:39.490
将Java对象反序列化

00:32:36.750 --> 00:32:47.410
杰森的文件，这是

00:32:39.490 --> 00:32:51.730
样本中我实际上有一些预

00:32:47.410 --> 00:32:55.450
填写正确的东西，什么是

00:32:51.730 --> 00:33:00.780
我刚刚创建了模型类

00:32:55.450 --> 00:33:04.990
为了我们的杰森的权利人类

00:33:00.780 --> 00:33:09.160
哪个有名字和职业

00:33:04.990 --> 00:33:16.740
以及电话号码和电话列表

00:33:09.160 --> 00:33:26.760
这是它的类型吗？ 

00:33:16.740 --> 00:33:26.760
而我在这里所做的我只是预备我

00:33:26.790 --> 00:33:37.240
基本上是按照Jason的清单创建的

00:33:29.679 --> 00:33:43.000
和这里一样，但是安吉拉还可以

00:33:37.240 --> 00:33:46.960
因此，假设这个Jason包含

00:33:43.000 --> 00:33:52.650
与我们Jason的JSON文档相同的数据

00:33:46.960 --> 00:33:57.630
对，在这里我将演示如何

00:33:52.650 --> 00:34:01.110
将其序列化为杰森和一些

00:33:57.630 --> 00:34:04.990
定制，例如格式化Jason 

00:34:01.110 --> 00:34:08.260
更改属性名称更改现在

00:34:04.990 --> 00:34:10.690
感觉这种东西的行为，但

00:34:08.260 --> 00:34:13.090
我们将首先需要

00:34:10.690 --> 00:34:18.790
用Jason粘合剂Jason创建

00:34:13.090 --> 00:34:22.270
按钮实例优先，然后我进入

00:34:18.790 --> 00:34:24.639
 Jason P对主要流程的关注Jason Jason 

00:34:22.270 --> 00:34:27.429
 vo主要项目是Jason是正确的，但

00:34:24.639 --> 00:34:32.369
它创造了一种不同的方式，所以杰森

00:34:27.429 --> 00:34:40.000
 B Jason B等于两个it进口

00:34:32.369 --> 00:34:43.179
 Jason B builder创建它只是创建

00:34:40.000 --> 00:34:45.909
具有默认设置的Jason B代理和

00:34:43.179 --> 00:34:49.859
我们将杰森设计为违约之日

00:34:45.909 --> 00:34:49.859
设置适合

00:34:50.380 --> 00:34:57.680
一切都这样，这是标准方式

00:34:53.929 --> 00:35:02.630
杰森的创作，之后我们需要

00:34:57.680 --> 00:35:07.390
序列化杰森的名单，它可以

00:35:02.630 --> 00:35:09.800
就像与杰森一​​样对杰森和

00:35:07.390 --> 00:35:16.910
我们正在通过我们的

00:35:09.800 --> 00:35:18.650
杰森的清单在这里，我们说看起来

00:35:16.910 --> 00:35:26.630
两行代码，我们需要打印

00:35:18.650 --> 00:35:32.200
这样，现在让我们看看如何

00:35:26.630 --> 00:35:32.200
如果可以，他们就运行它就可以了

00:35:40.680 --> 00:35:49.530
好，这是6号DM哦，是的

00:35:46.410 --> 00:35:54.180
产生的JSON文件看起来

00:35:49.530 --> 00:35:58.410
与我们的Jason Jason完全一样

00:35:54.180 --> 00:36:03.630
但它的格式不正确，所以我不能

00:35:58.410 --> 00:36:07.290
真的坏了，我们只添加一些

00:36:03.630 --> 00:36:12.270
这里的定制以及产生的

00:36:07.290 --> 00:36:15.690
我们对输出进行了格式化，以便

00:36:12.270 --> 00:36:19.170
需要创建Jason B吗

00:36:15.690 --> 00:36:24.300
配置存储在Jason B中

00:36:19.170 --> 00:36:28.380
 config对象，因此所有配置都是

00:36:24.300 --> 00:36:35.369
在那里，我们为您打造Jason B 

00:36:28.380 --> 00:36:38.280
配置，这是哪个

00:36:35.369 --> 00:36:40.680
您可以配置的东西看起来很多

00:36:38.280 --> 00:36:42.869
顺时针方向棒基因编码区域

00:36:40.680 --> 00:36:44.910
适配器等等等等在这里

00:36:42.869 --> 00:36:49.829
但我们将在此之前使用

00:36:44.910 --> 00:36:53.069
前进，现在我们需要通过

00:36:49.829 --> 00:36:57.089
将此配置交给jason builder 

00:36:53.069 --> 00:37:00.119
创建可以定制的Jason B引擎

00:36:57.089 --> 00:37:04.470
看起来像这样很容易

00:37:00.119 --> 00:37:10.170
如果我们运行它，应该

00:37:04.470 --> 00:37:17.299
制作格式正确的Jason，让我们

00:37:10.170 --> 00:37:21.809
好的，这是第六

00:37:17.299 --> 00:37:28.970
是的，这就是我们的Jason的样子

00:37:21.809 --> 00:37:37.500
看起来格式很好，现在让我们

00:37:28.970 --> 00:37:41.010
看看如果我们想改变怎么办

00:37:37.500 --> 00:37:44.970
吃电话的财产名称

00:37:41.010 --> 00:37:50.910
但是我们想要那太久了

00:37:44.970 --> 00:37:52.680
这是杰森生产的手机

00:37:50.910 --> 00:37:54.450
我当然可以记录如何做

00:37:52.680 --> 00:38:00.510
在这里更改属性

00:37:54.450 --> 00:38:03.570
但这不是很好，更好的一天是

00:38:00.510 --> 00:38:06.450
使用杰森是属性注释

00:38:03.570 --> 00:38:12.630
允许我们将属性名称更改为

00:38:06.450 --> 00:38:16.170
资金正确，如果我们在样本中

00:38:12.630 --> 00:38:19.859
现在这些电话号码应该是

00:38:16.170 --> 00:38:28.680
取而代之的是假的

00:38:19.859 --> 00:38:33.320
看，让我们结合起来比较，我希望

00:38:28.680 --> 00:38:36.660
如果它立即迫使我有时间

00:38:33.320 --> 00:38:43.230
在演示中添加另一个GMO，但

00:38:36.660 --> 00:38:46.710
我做不好，所以看起来变了

00:38:43.230 --> 00:38:50.700
两部手机正确，然后我们认为是

00:38:46.710 --> 00:38:53.700
那，你可以用符号不

00:38:50.700 --> 00:38:57.780
只是觉得自己你真的把它

00:38:53.700 --> 00:39:00.300
在一起可以得到电话号码

00:38:57.780 --> 00:39:04.290
你把它放在这里，它会产生相同的

00:39:00.300 --> 00:39:11.099
结果，如果您想检查一下，然后

00:39:04.290 --> 00:39:13.680
只需再次运行它，以便此属性可以

00:39:11.099 --> 00:39:15.839
在Gator上可以在场上

00:39:13.680 --> 00:39:19.260
如果放在塞特犬上就可以

00:39:15.839 --> 00:39:22.530
我们希望我们会读

00:39:19.260 --> 00:39:24.869
我们提供的所有这些财产

00:39:22.530 --> 00:39:28.200
在注释中，因此您实际上可以

00:39:24.869 --> 00:39:30.480
从一个属性读取并写入

00:39:28.200 --> 00:39:32.099
我不知道的另一个

00:39:30.480 --> 00:39:34.140
你的皮肤，但允许

00:39:32.099 --> 00:39:38.970
所以她在这里找到了，所以你可以点击

00:39:34.140 --> 00:39:42.000
贫民窟，我想做的另一件事

00:39:38.970 --> 00:39:45.420
如果你看这里示范

00:39:42.000 --> 00:39:48.630
证明Jason确实没有

00:39:45.420 --> 00:39:51.000
有任何电话号码，因此可以财产

00:39:48.630 --> 00:39:53.310
根本不在那里，因为现在

00:39:51.000 --> 00:39:56.010
默认Jason现在就跳过

00:39:53.310 --> 00:39:58.140
属性，但如果您确实想要

00:39:56.010 --> 00:39:59.910
把它放在正确的位置，以便您阅读

00:39:58.140 --> 00:40:03.780
从其他期望的应用程序

00:39:59.910 --> 00:40:07.950
现在，改变我们很容易

00:40:03.780 --> 00:40:12.950
刚把杰森B 

00:40:07.950 --> 00:40:15.450
类上的新标签注释，因此所有

00:40:12.950 --> 00:40:18.750
现在在类中的属性

00:40:15.450 --> 00:40:21.210
现在应该是应该出现

00:40:18.750 --> 00:40:25.880
在结果注入文件中

00:40:21.210 --> 00:40:25.880
看看我一直忘了创造

00:40:32.990 --> 00:40:40.260
是的，哎呀

00:40:36.870 --> 00:40:47.150
您会看到它现在有手机

00:40:40.260 --> 00:40:49.650
现在，所以还有更多

00:40:47.150 --> 00:40:52.490
定制的注释权

00:40:49.650 --> 00:40:57.570
杰森（Jason）的创作者和等等等等

00:40:52.490 --> 00:41:01.710
这超出了我的可调范围

00:40:57.570 --> 00:41:04.200
现在演示，也许我会再做一次

00:41:01.710 --> 00:41:09.000
示范以证明你知道

00:41:04.200 --> 00:41:11.070
其他自定义项，但不是今天，所以我

00:41:09.000 --> 00:41:15.870
假设我们完成序列化

00:41:11.070 --> 00:41:18.870
让我们跳到另一个演示和Jason 

00:41:15.870 --> 00:41:23.970
我们可以利用它们，所以这是

00:41:18.870 --> 00:41:28.770
好事情，我们要做什么

00:41:23.970 --> 00:41:31.860
在这里，我们将使用Jason处理器

00:41:28.770 --> 00:41:33.630
和Jason Reader在一起，顺便说一句

00:41:31.860 --> 00:41:38.210
我想我没有提到，但杰森

00:41:33.630 --> 00:41:40.980
绑定在后面使用Jason Otteson 

00:41:38.210 --> 00:41:43.740
所以无论如何，取决于我

00:41:40.980 --> 00:41:49.340
我要去带领我们

00:41:43.740 --> 00:41:52.920
使用Jason处理器的Jason文档

00:41:49.340 --> 00:41:56.310
我将使用Jason指针来获取

00:41:52.920 --> 00:42:00.300
第一个杰森，或者我们使用第二个

00:41:56.310 --> 00:42:03.030
除非你没有第二个杰森

00:42:00.300 --> 00:42:06.420
使用杰森指针，然后我

00:42:03.030 --> 00:42:11.600
通过这个反序列化到我们

00:42:06.420 --> 00:42:11.600
这里的人对象

00:42:11.810 --> 00:42:20.420
好吧，我再次复制粘贴

00:42:16.350 --> 00:42:20.420
这些打对了

00:42:20.540 --> 00:42:29.090
越来越得到创造

00:42:24.530 --> 00:42:33.170
读者并阅读所有内容给杰森

00:42:29.090 --> 00:42:37.220
雷，现在我们需要创建一个测验

00:42:33.170 --> 00:42:42.890
它在演示中创建一个

00:42:37.220 --> 00:42:46.190
相邻指针复制将其粘贴到此处

00:42:42.890 --> 00:42:48.680
而不是专业，我会变得完整

00:42:46.190 --> 00:42:55.430
其他对象，所以这是指向

00:42:48.680 --> 00:43:01.850
第二个Jason Jason Wu他没事，所以

00:42:55.430 --> 00:43:04.960
现在我们需要更改它，因为

00:43:01.850 --> 00:43:10.750
不是职业，我们称呼他为

00:43:04.960 --> 00:43:17.360
是的，那是杰森的价值

00:43:10.750 --> 00:43:21.380
轴，我想我们可以猜到没关系

00:43:17.360 --> 00:43:25.750
没关系没关系，所以我们知道了他

00:43:21.380 --> 00:43:28.340
现在现在我们必须将其绑定到我们的

00:43:25.750 --> 00:43:34.520
人对象，所以我们需要创建一个

00:43:28.340 --> 00:43:39.800
 Jason B Jason B是Jason B建设者

00:43:34.520 --> 00:43:48.170
创造权利，现在我们需要做

00:43:39.800 --> 00:43:51.620
人等于Jason中的Jason B 

00:43:48.170 --> 00:43:54.290
在这种情况下，我们需要

00:43:51.620 --> 00:43:59.150
杰森在这里，这是要

00:43:54.290 --> 00:44:01.370
字符串，我们实际上需要为D 

00:43:59.150 --> 00:44:04.850
序列化我们需要传递一个类型

00:44:01.370 --> 00:44:11.890
此人的目标类型在此点

00:44:04.850 --> 00:44:16.490
上课权利，所以这是我们的杰森电影

00:44:11.890 --> 00:44:25.970
检查它是否起作用，让我们打印

00:44:16.490 --> 00:44:28.490
我敢肯定，必须

00:44:25.970 --> 00:44:33.119
街头法好吧没有，所以我们

00:44:28.490 --> 00:44:42.829
可以像这样快速添加它

00:44:33.119 --> 00:44:42.829
就像这样，让我们​​运行它

00:44:44.150 --> 00:44:48.710
生物并运行它

00:44:56.900 --> 00:45:08.420
好的，这是第六个

00:45:03.719 --> 00:45:12.119
错误的演示，所以性感的数字在这里七

00:45:08.420 --> 00:45:14.880
好吧，你看到它实际上是你

00:45:12.119 --> 00:45:16.680
发现它确实有效，所以我们做到了

00:45:14.880 --> 00:45:18.869
意识到，所以它不打印任何东西

00:45:16.680 --> 00:45:26.699
在这里，但这应该是我的

00:45:18.869 --> 00:45:31.259
设计所以电话号码在那里

00:45:26.699 --> 00:45:33.900
我们刚才所做的只是

00:45:31.259 --> 00:45:36.329
使用JSON解析器读取JSON文档

00:45:33.900 --> 00:45:41.819
你杰森指针提取一些

00:45:36.329 --> 00:45:48.359
然后我们通过绑定使用JSON来购买

00:45:41.819 --> 00:45:54.359
将此数据发送到我们的Java对象中

00:45:48.359 --> 00:46:01.499
现在看来，我们已经有了最后一个

00:45:54.359 --> 00:46:09.779
演示是D序列化

00:46:01.499 --> 00:46:11.699
泛型再次我们要去我们

00:46:09.779 --> 00:46:15.829
将在这里使用，我们将

00:46:11.699 --> 00:46:20.160
使用我们最喜欢的Jason的文档并

00:46:15.829 --> 00:46:22.890
这次我们要意识到

00:46:20.160 --> 00:46:26.339
进入人员列表，所以这是一个

00:46:22.890 --> 00:46:29.369
通用列表好吧，让我们做吧

00:46:26.339 --> 00:46:35.459
首先，我们需要创建一个杰森

00:46:29.369 --> 00:46:42.650
使用jason be磨边jason 

00:46:35.459 --> 00:46:42.650
建设者最近建设者创建权

00:46:43.489 --> 00:46:51.259
来了，我们可以说

00:46:52.549 --> 00:47:01.400
我们需要意识到我们的杰森

00:46:56.630 --> 00:47:06.979
 jason jason文件到一个人的名单

00:47:01.400 --> 00:47:06.979
杰森的人的名单

00:47:08.369 --> 00:47:19.539
应该是Jason的Jason B，我们

00:47:14.920 --> 00:47:25.109
需要在这里传递信息流，所以让我们

00:47:19.539 --> 00:47:25.109
照常做

00:47:25.170 --> 00:47:40.059
杰森（Jason）的杰森（Jason）对，我们需要通过

00:47:35.109 --> 00:47:44.049
一种是否正在意识到

00:47:40.059 --> 00:47:47.530
听到这对于正常人来说非常容易

00:47:44.049 --> 00:47:49.809
像这样的类型，但对于通用类型是

00:47:47.530 --> 00:47:54.789
有点不同，因为通用

00:47:49.809 --> 00:47:58.839
类型，你知道这个遗传

00:47:54.789 --> 00:48:04.020
当我们在时，信息通常会丢失

00:47:58.839 --> 00:48:08.260
像这样以正确的方式传递它

00:48:04.020 --> 00:48:11.890
所以为了正确地做我们

00:48:08.260 --> 00:48:15.010
必须要做的，我们必须这样做

00:48:11.890 --> 00:48:29.260
不必知道类型是什么

00:48:15.010 --> 00:48:30.760
好吧，我们实际上创建了数组

00:48:29.260 --> 00:48:34.150
人员清单

00:48:30.760 --> 00:48:38.799
所以基本上是一个沉没的实例

00:48:34.150 --> 00:48:49.839
然后得到一个通用的

00:48:38.799 --> 00:48:57.400
这样的超类，我们

00:48:49.839 --> 00:49:02.829
需要通过这里，在这种情况下

00:48:57.400 --> 00:49:10.450
将正确检查它

00:49:02.829 --> 00:49:14.460
让我们打印出来让我们说

00:49:10.450 --> 00:49:18.630
名字第一个Jason的名字

00:49:14.460 --> 00:49:23.239
得到第一个元素

00:49:18.630 --> 00:49:28.380
成为杰森的名字

00:49:23.239 --> 00:49:41.910
正确，让我们运行它以查看它

00:49:28.380 --> 00:49:49.920
在这里工作竞争还可以，所以

00:49:41.910 --> 00:49:56.729
 8号VMO Jason板，因此可以

00:49:49.920 --> 00:50:01.289
检查一下，然后打印出名称

00:49:56.729 --> 00:50:04.940
第二秒钟杰森是海报

00:50:01.289 --> 00:50:04.940
在此处打印Jason Voorhees 

00:50:14.970 --> 00:50:28.560
好，所以八部杰森电影好了

00:50:20.720 --> 00:50:35.069
对不起，看来我们已经完成了

00:50:28.560 --> 00:50:39.240
正如我所说的，所有计划

00:50:35.069 --> 00:50:42.180
 II我将把这个演示上传到

00:50:39.240 --> 00:50:47.099
此源代码存储库，因此您可以

00:50:42.180 --> 00:50:52.310
随时参考，谢谢

00:50:47.099 --> 00:50:55.829
观看它，如果您有任何疑问或

00:50:52.310 --> 00:51:03.480
如果您有任何建议，您总是

00:50:55.829 --> 00:51:11.460
可以去我们的网站Jason B 

00:51:03.480 --> 00:51:16.099
点它并包含所有内容

00:51:11.460 --> 00:51:19.170
关于此绑定，它具有对

00:51:16.099 --> 00:51:26.700
我得到的实现

00:51:19.170 --> 00:51:30.960
反正开始了指南等等

00:51:26.700 --> 00:51:33.500
感谢您的收看，稍后见

00:51:30.960 --> 00:51:33.500
再见

