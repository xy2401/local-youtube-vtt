WEBVTT
Kind: captions
Language: zh-Hans

00:00:03.320 --> 00:00:08.960
好吧，先开始

00:00:07.310 --> 00:00:10.820
所有人都认为谢谢您的参加

00:00:08.960 --> 00:00:13.190
对，每个人都有很多选择

00:00:10.820 --> 00:00:17.390
在此时间段内有一个Java 

00:00:13.190 --> 00:00:18.770
而且你在我们这里真是太棒了

00:00:17.390 --> 00:00:20.619
我叫约翰·克林贡，我会

00:00:18.770 --> 00:00:23.630
主持这种小组讨论

00:00:20.619 --> 00:00:25.450
问一些热身

00:00:23.630 --> 00:00:27.919
问题，以确保每个人都在

00:00:25.450 --> 00:00:29.300
基线，然后我们将打开

00:00:27.919 --> 00:00:29.689
在每个人面前提出问题

00:00:29.300 --> 00:00:33.050
听众

00:00:29.689 --> 00:00:36.920
嘿，所以我首先提到

00:00:33.050 --> 00:00:38.990
超级干净，我和Red Hat在一起

00:00:36.920 --> 00:00:42.590
从

00:00:38.990 --> 00:00:45.110
第一天，我们有大卫·布列文

00:00:42.590 --> 00:00:49.180
当我们与汤米一起时，你的手

00:00:45.110 --> 00:00:53.390
部落和大卫·戴尔·阿巴西·甲骨文和

00:00:49.180 --> 00:00:57.140
凯文·萨特IBM不错，马克·李特

00:00:53.390 --> 00:01:01.820
红色帽子和Mike Croft payara没事

00:00:57.140 --> 00:01:04.430
这些是小组成员，我们开始吧

00:01:01.820 --> 00:01:07.820
前进并开始几种

00:01:04.430 --> 00:01:08.890
再次播出问题，这仅仅是

00:01:07.820 --> 00:01:11.659
如果你想回答，请举手

00:01:08.890 --> 00:01:13.729
这个特殊的问题是什么

00:01:11.659 --> 00:01:15.650
微观轮廓不像深度或

00:01:13.729 --> 00:01:17.180
除了什么，为什么创建这个项目

00:01:15.650 --> 00:01:18.890
放在首位，实际上

00:01:17.180 --> 00:01:20.360
甚至连我都会退一步

00:01:18.890 --> 00:01:24.799
你的手，如果你听说过微

00:01:20.360 --> 00:01:26.440
简介优优优是

00:01:24.799 --> 00:01:28.640
很棒

00:01:26.440 --> 00:01:30.560
任何人都想做的只是快速

00:01:28.640 --> 00:01:32.780
关于您的汇报，您知道

00:01:30.560 --> 00:01:36.350
项目的基础以及为什么我们

00:01:32.780 --> 00:01:43.790
开始了项目，等等，先生

00:01:36.350 --> 00:01:47.119
我猜我是自愿的，好吧

00:01:43.790 --> 00:01:50.720
我和约翰在一起的一件事是项目

00:01:47.119 --> 00:01:52.250
导致Eclipse项目的

00:01:50.720 --> 00:01:54.500
并不意味着我们有更多的力量

00:01:52.250 --> 00:01:58.150
比其他任何人，但我们知道我们尽力了

00:01:54.500 --> 00:02:01.400
组织一些活动，这样

00:01:58.150 --> 00:02:04.070
迈克尔的个人资料一直围绕着

00:02:01.400 --> 00:02:07.159
大约16到18个月才开始

00:02:04.070 --> 00:02:09.080
与一些行业领导者的想法

00:02:07.159 --> 00:02:10.939
在此面板上以及其他观众中

00:02:09.080 --> 00:02:13.730
试图弄清楚我们怎么样

00:02:10.939 --> 00:02:16.219
将用Java EE填补这一空白

00:02:13.730 --> 00:02:17.090
在云中创建微服务

00:02:16.219 --> 00:02:19.580
一世

00:02:17.090 --> 00:02:21.080
我们知道Mike Java II没动

00:02:19.580 --> 00:02:23.840
足够快，没有填补那些

00:02:21.080 --> 00:02:27.709
差距我们该怎么办，那就是

00:02:23.840 --> 00:02:29.390
微观轮廓的想法首先出现

00:02:27.709 --> 00:02:36.019
提出了

00:02:29.390 --> 00:02:39.410
什么2016年，现在你知道2017年

00:02:36.019 --> 00:02:40.790
我们已经发布了第三版

00:02:39.410 --> 00:02:43.610
我不知道那是另一种吗

00:02:40.790 --> 00:02:45.620
你的种子问题，我不会去

00:02:43.610 --> 00:02:48.290
那里有很多细节，但是我们

00:02:45.620 --> 00:02:50.959
产生一些动力

00:02:48.290 --> 00:02:55.760
今天非常好的会议命令了这个

00:02:50.959 --> 00:02:59.049
一周，我们知道您的期待

00:02:55.760 --> 00:03:01.790
与这里的小组互动

00:02:59.049 --> 00:03:07.670
任何人都想添加任何东西

00:03:01.790 --> 00:03:09.739
历史对不起，我忘了穿上我的

00:03:07.670 --> 00:03:12.530
麦克风轮廓连帽衫就这样Evan 

00:03:09.739 --> 00:03:14.209
可以同意，也许是营销

00:03:12.530 --> 00:03:16.780
人们告诉我，我必须这样做

00:03:14.209 --> 00:03:20.209
开玩笑

00:03:16.780 --> 00:03:21.709
好吧，所以说我们有一个

00:03:20.209 --> 00:03:23.180
宣布此JavaOne也是如此

00:03:21.709 --> 00:03:25.190
也许有人想谈什么

00:03:23.180 --> 00:03:27.889
我们用术语介绍了这个JavaOne吗

00:03:25.190 --> 00:03:29.660
的弥迦档案，我有一个特别的

00:03:27.889 --> 00:03:31.069
怀疑我们可以拿一点吗

00:03:29.660 --> 00:03:34.579
我认为是斑点，因为否则

00:03:31.069 --> 00:03:37.700
太多了，但我们介绍了大约五个

00:03:34.579 --> 00:03:39.290
微型的不同新增加

00:03:37.700 --> 00:03:40.730
个人资料规格，就是这个

00:03:39.290 --> 00:03:43.040
实际上应该是

00:03:40.730 --> 00:03:45.079
由于数量太多而需要的工具

00:03:43.040 --> 00:03:49.549
被添加，所以上一个

00:03:45.079 --> 00:03:52.690
是我们的基准加上配置， 

00:03:49.549 --> 00:03:55.370
 1.2增加了大约五个新的或四个新的

00:03:52.690 --> 00:04:00.049
在其中我最喜欢的规格

00:03:55.370 --> 00:04:02.989
是JSON网络令牌规范，或者

00:04:00.049 --> 00:04:05.419
他们被称为笔记本

00:04:02.989 --> 00:04:07.880
这实际上是不可能的

00:04:05.419 --> 00:04:09.380
发音W为O，但我猜

00:04:07.880 --> 00:04:11.930
也许这是一种新的语言， 

00:04:09.380 --> 00:04:14.030
我不知道但是无论如何

00:04:11.930 --> 00:04:15.590
规格很棒，因为其中之一

00:04:14.030 --> 00:04:18.979
我们还没有做的事情

00:04:15.590 --> 00:04:23.139
特别好

00:04:18.979 --> 00:04:26.090
 Java中的企业社区就是安全性

00:04:23.139 --> 00:04:29.539
通常，我们将安全性定义为

00:04:26.090 --> 00:04:30.320
 JVM内部的API调用以及

00:04:29.539 --> 00:04:34.010
完全地

00:04:30.320 --> 00:04:36.680
 NOR中服务器之间的互操作性

00:04:34.010 --> 00:04:38.510
一种可移植的方式并带有JSON Web令牌

00:04:36.680 --> 00:04:41.300
您实际上可以获得这种可移植性

00:04:38.510 --> 00:04:43.130
因此，API调用的重要性降低了

00:04:41.300 --> 00:04:46.070
还有很多重要的事情

00:04:43.130 --> 00:04:49.430
微服务和分布式服务如何

00:04:46.070 --> 00:04:52.130
体系结构无状态通信

00:04:49.430 --> 00:04:54.530
所有这些事物的安全方式

00:04:52.130 --> 00:04:58.240
所以我们有一个很好的规范

00:04:54.530 --> 00:05:01.250
用于使用JSON Web令牌

00:04:58.240 --> 00:05:02.840
部署在

00:05:01.250 --> 00:05:07.070
微型配置文件，让您拥有

00:05:02.840 --> 00:05:10.370
通过在内部的版权声明注入的版权声明

00:05:07.070 --> 00:05:12.560
豆子，你甚至可以说你知道

00:05:10.370 --> 00:05:14.830
给我当前的来电者作为索赔

00:05:12.560 --> 00:05:17.720
您可以获取整个JSON Web令牌

00:05:14.830 --> 00:05:20.890
注入并检查各种东西

00:05:17.720 --> 00:05:24.110
你可以大声使用

00:05:20.890 --> 00:05:27.110
强制执行权限以及所有这些东西

00:05:24.110 --> 00:05:29.180
完全是全新的，我认为

00:05:27.110 --> 00:05:31.720
几乎可以活很久

00:05:29.180 --> 00:05:34.520
时间我什么都没看到

00:05:31.720 --> 00:05:39.160
尽快取消JSON Web令牌

00:05:34.520 --> 00:05:41.990
所以这太好了，这是一个

00:05:39.160 --> 00:05:44.810
架构级别的兼容性

00:05:41.990 --> 00:05:46.640
被添加是新事物，因为

00:05:44.810 --> 00:05:48.950
上一次有建筑

00:05:46.640 --> 00:05:52.370
所谓的安全兼容性

00:05:48.950 --> 00:05:58.190
带CSI v2的Corvo，我认为我们不

00:05:52.370 --> 00:06:02.870
想一点点地做

00:05:58.190 --> 00:06:03.860
去年在这个小事

00:06:02.870 --> 00:06:05.990
时间在JavaOne 

00:06:03.860 --> 00:06:08.300
我们谈到了好吗

00:06:05.990 --> 00:06:10.400
我们想要加入的功能和这个JWT 

00:06:08.300 --> 00:06:11.810
事情会好起来的，我们得到了

00:06:10.400 --> 00:06:13.460
为此，我们必须快速完成

00:06:11.810 --> 00:06:19.210
这是非常简单的，我不知道

00:06:13.460 --> 00:06:21.650
谁说的，你知道花了一个

00:06:19.210 --> 00:06:24.350
共同努力，我是说我们得到了你

00:06:21.650 --> 00:06:26.000
知道我知道红帽团队正在开车

00:06:24.350 --> 00:06:28.100
但是我们得到了很多不同的意见

00:06:26.000 --> 00:06:30.470
团队，你知道我们最终

00:06:28.100 --> 00:06:31.700
制作的非常好，我认为

00:06:30.470 --> 00:06:34.280
有趣的是

00:06:31.700 --> 00:06:36.530
发达，所以斯科特的黑暗种子

00:06:34.280 --> 00:06:39.169
基本上所有的基础你都知道

00:06:36.530 --> 00:06:40.640
基金会，然后是我自己和约翰

00:06:39.169 --> 00:06:42.500
阿曼特走了过来，说你认识你

00:06:40.640 --> 00:06:42.930
可以把依赖注入

00:06:42.500 --> 00:06:44.639
这将是

00:06:42.930 --> 00:06:48.150
很酷，然后像

00:06:44.639 --> 00:06:50.880
整体水平和规格去了你

00:06:48.150 --> 00:06:52.710
在那之后我们知道了几次迭代

00:06:50.880 --> 00:06:55.590
让人们参与其中

00:06:52.710 --> 00:06:58.380
 Twitter，所以Hendrik eber是你知道他吗

00:06:55.590 --> 00:07:00.120
跟随一条推文，我说嘿

00:06:58.380 --> 00:07:02.490
你认为有依赖吗

00:07:00.120 --> 00:07:04.440
声明和JSON Web令牌注入

00:07:02.490 --> 00:07:08.009
突然他在邮件列表中

00:07:04.440 --> 00:07:09.960
他当天提交了PR 

00:07:08.009 --> 00:07:11.820
很酷，它当然也合并了

00:07:09.960 --> 00:07:14.220
因为那是事实， 

00:07:11.820 --> 00:07:18.539
现在他的代码在JavaOne上发布了

00:07:14.220 --> 00:07:20.849
这是一个快速的例子

00:07:18.539 --> 00:07:24.210
在篱笆的那边继续前进

00:07:20.849 --> 00:07:28.440
整洁，我不会去太多

00:07:24.210 --> 00:07:28.889
大卫的细节，对不起所有人

00:07:28.440 --> 00:07:31.440
对

00:07:28.889 --> 00:07:33.960
时间明智的其他事情之一

00:07:31.440 --> 00:07:36.389
您知道我们已添加到此版本中的是

00:07:33.960 --> 00:07:38.990
容错性，所以开始

00:07:36.389 --> 00:07:41.550
标准化断路器

00:07:38.990 --> 00:07:47.970
人们一直在使用的等等

00:07:41.550 --> 00:07:50.849
其他技术好吧，我也会

00:07:47.970 --> 00:07:55.289
提到我们谈论的另一件事

00:07:50.849 --> 00:07:57.780
关于micah配置文件1.1，这是

00:07:55.289 --> 00:08:01.680
有点次要发行，而且我们有

00:07:57.780 --> 00:08:03.840
 config 1.0和config本身是一个

00:08:01.680 --> 00:08:06.120
非常积极的补充，我想要的东西

00:08:03.840 --> 00:08:07.800
用Mike profile 1.2指出的是

00:08:06.120 --> 00:08:09.270
我们已经对该规格进行了更新

00:08:07.800 --> 00:08:11.610
所以已经只有几个

00:08:09.270 --> 00:08:13.530
几个月后，我们的一位开发人员

00:08:11.610 --> 00:08:15.060
约翰·哈米特（John Hammett），他注意到您知道

00:08:13.530 --> 00:08:18.330
我们缺少的几件事

00:08:15.060 --> 00:08:22.440
 config 1.0，因此他获得了所有权

00:08:18.330 --> 00:08:25.590
该规范并将其作为配置1.1驱动

00:08:22.440 --> 00:08:28.490
所以又一次表明没有任何人

00:08:25.590 --> 00:08:31.169
个人或任何一家公司拥有任何

00:08:28.490 --> 00:08:33.959
我们Micra个人资料的特定方面

00:08:31.169 --> 00:08:35.219
在我们所有人中分享并选择

00:08:33.959 --> 00:08:37.320
球向上移动了几下

00:08:35.219 --> 00:08:38.579
脚很棒，我只是

00:08:37.320 --> 00:08:40.880
要提到你认识约翰·哈蒙德

00:08:38.579 --> 00:08:43.079
你不认识其中一个吗

00:08:40.880 --> 00:08:46.170
受雇于任何大型Java EE 

00:08:43.079 --> 00:08:47.279
供应商，他只是其中之一

00:08:46.170 --> 00:08:49.500
那种在人群中出来的人

00:08:47.279 --> 00:08:51.089
那决定他要离开

00:08:49.500 --> 00:08:53.459
并建立自己的实现方式

00:08:51.089 --> 00:08:55.320
对，所以他真的很酷

00:08:53.459 --> 00:08:57.420
去年在JavaOne上，我认为他

00:08:55.320 --> 00:09:00.000
今年有点被炒鱿鱼

00:08:57.420 --> 00:09:01.500
没能做到，但他发送了

00:09:00.000 --> 00:09:04.950
他团队中的另一个人很友善

00:09:01.500 --> 00:09:06.090
这样的慷慨，你知道我

00:09:04.950 --> 00:09:09.630
认为我们有很多人很棒

00:09:06.090 --> 00:09:12.750
像约翰在社区中一样，我认为

00:09:09.630 --> 00:09:14.760
这就像是我们成功的标志

00:09:12.750 --> 00:09:18.350
不能错过第一年

00:09:14.760 --> 00:09:21.210
微观概况不只是我们

00:09:18.350 --> 00:09:22.980
实施，但人们受到启发

00:09:21.210 --> 00:09:24.570
花费业余时间建造

00:09:22.980 --> 00:09:26.790
我知道这听起来可能

00:09:24.570 --> 00:09:28.440
花费很少的时间来建立

00:09:26.790 --> 00:09:31.080
但汤米曾经是个备用人

00:09:28.440 --> 00:09:33.150
我的时间和精力，所以你知道谁

00:09:31.080 --> 00:09:34.980
知道他必须在一个内建

00:09:33.150 --> 00:09:36.300
几年我认为那很棒

00:09:34.980 --> 00:09:38.610
我们正在启用这种东西

00:09:36.300 --> 00:09:40.290
他真的在那儿开车

00:09:38.610 --> 00:09:43.940
社区好吧，迈克

00:09:40.290 --> 00:09:47.550
您能想到其他任何新规格吗？ 

00:09:43.940 --> 00:09:49.410
我帮助的是指标，所以其中之一

00:09:47.550 --> 00:09:51.060
我想指出的事情

00:09:49.410 --> 00:09:55.530
没有的是，这很简单

00:09:51.060 --> 00:09:57.870
从我的背景规格不是

00:09:55.530 --> 00:09:59.550
开发人员，但有人问你知道交易

00:09:57.870 --> 00:10:02.720
在我的操作方面

00:09:59.550 --> 00:10:05.790
认为Jay MX很棒，它不在

00:10:02.720 --> 00:10:08.820
非常容易食用

00:10:05.790 --> 00:10:10.830
人员，以便指标规格将暴露

00:10:08.820 --> 00:10:11.970
几个不同的其余端点

00:10:10.830 --> 00:10:13.940
在每个方面都是标准的

00:10:11.970 --> 00:10:17.490
实施，因此您可以预测

00:10:13.940 --> 00:10:19.950
事先不知道如何

00:10:17.490 --> 00:10:21.810
其他供应商已经配置了东西

00:10:19.950 --> 00:10:24.330
究竟可以从中获得什么指标

00:10:21.810 --> 00:10:26.220
哪个终点很棒

00:10:24.330 --> 00:10:27.840
是的，只是为了回应我们已有的评论

00:10:26.220 --> 00:10:29.880
在最大的事情发生之前

00:10:27.840 --> 00:10:33.210
我是因为我看到了这些指标

00:10:29.880 --> 00:10:34.680
已经有点开始了

00:10:33.210 --> 00:10:35.850
看看你从我的非知道

00:10:34.680 --> 00:10:36.270
开发人员背景并以为你

00:10:35.850 --> 00:10:38.850
知道什么

00:10:36.270 --> 00:10:40.860
我有意见，所以我只是

00:10:38.850 --> 00:10:44.580
潜水说你好我要成为

00:10:40.860 --> 00:10:46.410
现在在这里，我受到了相当的欢迎

00:10:44.580 --> 00:10:48.240
您知道Red Hat和IBM的人以及

00:10:46.410 --> 00:10:51.060
很好玩

00:10:48.240 --> 00:10:52.560
你知道我的经历

00:10:51.060 --> 00:10:55.890
与不同客户合作

00:10:52.560 --> 00:10:57.300
谁有不同的要求

00:10:55.890 --> 00:10:59.370
你知道你显然感到

00:10:57.300 --> 00:11:01.200
真的听了，我发现

00:10:59.370 --> 00:11:03.120
社区本身和工作人员

00:11:01.200 --> 00:11:05.340
真的很接受

00:11:03.120 --> 00:11:08.070
不太熟练的人

00:11:05.340 --> 00:11:10.710
其余的很好，我不会

00:11:08.070 --> 00:11:12.210
描述这可能不是技术性的

00:11:10.710 --> 00:11:14.460
卖掉自己的那个耶

00:11:12.210 --> 00:11:16.200
那是我脱离监狱的免费卡

00:11:14.460 --> 00:11:21.300
那就是我的主张，你不能接受我的

00:11:16.200 --> 00:11:23.700
声称是的，我们得到最后一个吗

00:11:21.300 --> 00:11:25.650
健康检查，以便最终

00:11:23.700 --> 00:11:28.380
我们为迈克增加了五个新成员

00:11:25.650 --> 00:11:31.470
配置文件1.2，因此健康检查只是一个

00:11:28.380 --> 00:11:33.540
很简单，你知道你还活着吗

00:11:31.470 --> 00:11:39.000
支票，但你知道吗，我差不多

00:11:33.540 --> 00:11:41.070
说标准化，但这是你

00:11:39.000 --> 00:11:43.080
知道Specht出去，以便任何人

00:11:41.070 --> 00:11:45.740
实施这一点将是一致的

00:11:43.080 --> 00:11:48.240
在他们所有的实现中

00:11:45.740 --> 00:11:49.320
我想指出一点

00:11:48.240 --> 00:11:53.310
可能遗漏的方面

00:11:49.320 --> 00:11:55.500
健康检查使那些不健康的人

00:11:53.310 --> 00:11:57.060
微观档案实施

00:11:55.500 --> 00:11:58.730
与我们进行互操作，以便我们前往

00:11:57.060 --> 00:12:00.630
我们正在伸出手并接触云

00:11:58.730 --> 00:12:03.750
环境，并说这是你的方式

00:12:00.630 --> 00:12:07.140
通常从微型设备上得到一些东西

00:12:03.750 --> 00:12:09.270
 JWT的配置文件实现是

00:12:07.140 --> 00:12:11.700
同样，我们不是生产JWT的人

00:12:09.270 --> 00:12:12.570
这将是API网关之类的东西

00:12:11.700 --> 00:12:15.810
像那样

00:12:12.570 --> 00:12:17.430
钥匙披风和各种东西等等

00:12:15.810 --> 00:12:20.760
那是我们的另一个例子

00:12:17.430 --> 00:12:24.960
与您知道的标准云集成

00:12:20.760 --> 00:12:26.880
科技，这就是永远健康

00:12:24.960 --> 00:12:29.610
你知道我们不是一个聚集的人

00:12:26.880 --> 00:12:31.260
健康数据，所以我们真的是直接

00:12:29.610 --> 00:12:34.020
并故意与

00:12:31.260 --> 00:12:35.730
云的各个方面是

00:12:34.020 --> 00:12:37.110
不能错过的东西我们不是

00:12:35.730 --> 00:12:40.620
只是在我们的空间中创造

00:12:37.110 --> 00:12:42.200
连接到我们的空间之外，所以

00:12:40.620 --> 00:12:46.830
我要在这里换档

00:12:42.200 --> 00:12:48.990
现在谈论Java EE，这是

00:12:46.830 --> 00:12:51.270
大卫也许有机会

00:12:48.990 --> 00:12:53.370
与我们讨论Java的新功能

00:12:51.270 --> 00:12:55.980
知道EE 8，然后我们可以带来

00:12:53.370 --> 00:12:58.410
在一起一点是的，所以

00:12:55.980 --> 00:13:05.130
首先我只想给你看这个

00:12:58.410 --> 00:13:07.430
是Oracle的几条语句，因此

00:13:05.130 --> 00:13:10.950
你知道我们发布了Java 8 

00:13:07.430 --> 00:13:12.480
 9月21日，所以几天前

00:13:10.950 --> 00:13:15.450
我们在Java中所做的事情是

00:13:12.480 --> 00:13:17.040
基本上是ic8的对齐方式

00:13:15.450 --> 00:13:18.810
只要我们能有一个

00:13:17.040 --> 00:13:21.899
 API利用新的东西

00:13:18.810 --> 00:13:25.019
我们在CLI中有一些基本知识

00:13:21.899 --> 00:13:27.570
 GPA现在支持日期和时间API GSN 

00:13:25.019 --> 00:13:29.339
现在也支持日期和时间API 

00:13:27.570 --> 00:13:32.430
也做了很多不错的事情

00:13:29.339 --> 00:13:34.889
关于压缩阶段

00:13:32.430 --> 00:13:36.240
我认为API是并发的东西

00:13:34.889 --> 00:13:39.240
让您有能力

00:13:36.240 --> 00:13:41.579
立即同步Jack逮捕中的任务执行

00:13:39.240 --> 00:13:44.519
我认为我们有一个反应性的调用者

00:13:41.579 --> 00:13:46.170
基本上可以让您撰写多个

00:13:44.519 --> 00:13:47.970
非常具体的服务调用

00:13:46.170 --> 00:13:52.860
时尚和所有这些锦上添花

00:13:47.970 --> 00:13:54.690
时尚CDI-如此CDI-像现在一样

00:13:52.860 --> 00:13:57.209
支持同步事件和

00:13:54.690 --> 00:13:59.009
猜猜CDI的同步事件是什么- 

00:13:57.209 --> 00:14:01.889
还支持的完成阶段api 

00:13:59.009 --> 00:14:04.230
 Java SE 8所以基本上只要我们可以

00:14:01.889 --> 00:14:08.160
我们已经更新了规格以确保

00:14:04.230 --> 00:14:10.199
现在可以利用Java C 8 

00:14:08.160 --> 00:14:11.790
我们所做的是

00:14:10.199 --> 00:14:13.589
也很好，我们基本上

00:14:11.790 --> 00:14:15.750
修复了当时的设计支持

00:14:13.589 --> 00:14:18.920
开始-介绍7月7日，所以您知道

00:14:15.750 --> 00:14:22.470
在Java 7中，我们拥有这个JSONP 1.0 

00:14:18.920 --> 00:14:23.430
的API，这是相当不错的，但它

00:14:22.470 --> 00:14:26.850
不完整

00:14:23.430 --> 00:14:29.190
现在有了新的Jason B API，所以我们有了

00:14:26.850 --> 00:14:30.810
完整的端到端绑定故事

00:14:29.190 --> 00:14:32.540
对于杰森，那是

00:14:30.810 --> 00:14:36.269
也很欢迎

00:14:32.540 --> 00:14:38.519
为servlet选择了其他东西

00:14:36.269 --> 00:14:41.579
我的意思不是很多，不是从外面

00:14:38.519 --> 00:14:44.339
很多新东西，但引擎盖上有100个

00:14:41.579 --> 00:14:46.079
 Servlet 4将HTTP支持

00:14:44.339 --> 00:14:49.649
平台，这就是我

00:14:46.079 --> 00:14:53.610
觉得很好，还有一些

00:14:49.649 --> 00:14:55.319
会随着时间的推移保持使用状态，我的意思是

00:14:53.610 --> 00:14:57.180
所以这基本上是一些事情

00:14:55.319 --> 00:15:01.079
我们所做的我忘了提

00:14:57.180 --> 00:15:03.480
您已经讨论过Java 8中的GWT 

00:15:01.079 --> 00:15:06.209
我们还添加了一个新的安全性API，因此

00:15:03.480 --> 00:15:08.100
基本上我们正在努力最终解决

00:15:06.209 --> 00:15:11.100
简化如何应用安全性

00:15:08.100 --> 00:15:12.540
在Java应用程序中关注的问题是

00:15:11.100 --> 00:15:18.420
第一步，但我认为那是

00:15:12.540 --> 00:15:20.459
欢迎朝这个方向走，然后

00:15:18.420 --> 00:15:21.720
带来这些带来一切

00:15:20.459 --> 00:15:22.920
在一起，这是一个开放式的

00:15:21.720 --> 00:15:25.470
向任何人提问

00:15:22.920 --> 00:15:27.420
微观概况如何促进

00:15:25.470 --> 00:15:28.889
采用Java EE 8的原因在于

00:15:27.420 --> 00:15:30.780
知道面板名称的种类

00:15:28.889 --> 00:15:31.940
或我非常感兴趣的会议

00:15:30.780 --> 00:15:36.480
还有人们的想法

00:15:31.940 --> 00:15:38.100
我先跳，所以我认为

00:15:36.480 --> 00:15:39.870
你知道我们在推动的事情

00:15:38.100 --> 00:15:42.240
当我们开始微的时候非常沉重

00:15:39.870 --> 00:15:46.170
个人资料是你知道感知

00:15:42.240 --> 00:15:48.390
一般而言，应用服务器不是

00:15:46.170 --> 00:15:51.420
有利于建立微服务

00:15:48.390 --> 00:15:53.310
你知道我们不是很准确

00:15:51.420 --> 00:15:55.680
从一个非常轻量级的应用服务器

00:15:53.310 --> 00:15:58.050
多年来的供应商数量，您

00:15:55.680 --> 00:16:00.480
知道你实际上不需要剥离

00:15:58.050 --> 00:16:02.580
降低您的整体应用程序

00:16:00.480 --> 00:16:05.580
服务器获取实际上是

00:16:02.580 --> 00:16:09.000
你知道很多应用服务器

00:16:05.580 --> 00:16:11.880
供应商生产的应用服务器

00:16:09.000 --> 00:16:14.310
假设我们符合e 7 

00:16:11.880 --> 00:16:17.100
它非常灵巧，启动速度非常快

00:16:14.310 --> 00:16:19.410
我认为ee8占用的内存较小

00:16:17.100 --> 00:16:22.080
我们应该看到完全一样的东西， 

00:16:19.410 --> 00:16:26.460
我想相信

00:16:22.080 --> 00:16:29.790
剖一三一四随便

00:16:26.460 --> 00:16:32.190
你知道开始解决，但仍然支持

00:16:29.790 --> 00:16:34.670
拉一些你知道较新的

00:16:32.190 --> 00:16:39.180
大卫刚刚谈到的功能

00:16:34.670 --> 00:16:40.890
并推动ee8的采用可能不会

00:16:39.180 --> 00:16:43.890
一定很明确，你认识的人

00:16:40.890 --> 00:16:47.570
希望将开始部署微型

00:16:43.890 --> 00:16:50.250
我说1.4兼容的配置文件

00:16:47.570 --> 00:16:52.830
应用程序，但不一定

00:16:50.250 --> 00:16:54.990
需要知道他们正在运行一个应用程序e 8 

00:16:52.830 --> 00:16:56.850
我认为服务器在掩护之下

00:16:54.990 --> 00:16:58.620
那对我来说真的是一件好事

00:16:56.850 --> 00:17:04.020
微观轮廓，真是一件好事

00:16:58.620 --> 00:17:07.230
对于Java EE，我想我会补充一点

00:17:04.020 --> 00:17:09.390
知道可能会有点时间

00:17:07.230 --> 00:17:13.800
在我们看到您明显与

00:17:09.390 --> 00:17:16.410
对于EE 4j，我们将进行另一个重大修订

00:17:13.800 --> 00:17:18.569
做很多事情的过渡

00:17:16.410 --> 00:17:22.079
那样的话，我们将保持静止

00:17:18.569 --> 00:17:26.400
他们都在发布微轮廓

00:17:22.079 --> 00:17:29.400
在EE容器上工作等等

00:17:26.400 --> 00:17:32.760
之间需要填补的任何空白

00:17:29.400 --> 00:17:33.900
现在，当我们让e4j真正动起来时

00:17:32.760 --> 00:17:36.150
很快

00:17:33.900 --> 00:17:39.300
微观概况在那里

00:17:36.150 --> 00:17:41.730
松弛，与此同时等等

00:17:39.300 --> 00:17:43.170
你知道这是一个伟大的资产

00:17:41.730 --> 00:17:45.120
我们所有人

00:17:43.170 --> 00:17:48.960
所以我认为那不可能

00:17:45.120 --> 00:17:50.549
错过了你知道什么节奏

00:17:48.960 --> 00:17:53.460
我们去了，微观概况

00:17:50.549 --> 00:17:55.710
实际上，如果你看

00:17:53.460 --> 00:17:59.070
一次到一次之间的时间

00:17:55.710 --> 00:18:02.040
我想说的是一点

00:17:59.070 --> 00:18:04.320
九个月左右

00:18:02.040 --> 00:18:06.660
行，你知道是的，但是有

00:18:04.320 --> 00:18:10.200
迁移到日食哦，是的，我们是

00:18:06.660 --> 00:18:12.390
确实花了一些时间，是的，我们做到了

00:18:10.200 --> 00:18:13.740
迁移到Eclipse，就像EE for J一样

00:18:12.390 --> 00:18:15.059
必须要做的迁移

00:18:13.740 --> 00:18:17.490
 Eclipse，当然我们都要做

00:18:15.059 --> 00:18:20.520
帮助，因为那是开放的

00:18:17.490 --> 00:18:24.150
资料来源，但我们的步伐加快了

00:18:20.520 --> 00:18:25.620
很快，所以在一点之间

00:18:24.150 --> 00:18:28.230
一分一指他们在哪里

00:18:25.620 --> 00:18:35.640
在同一季度发布

00:18:28.230 --> 00:18:37.590
你知道的很棒的事情，但是一部分

00:18:35.640 --> 00:18:40.590
那是因为我们决定我在做

00:18:37.590 --> 00:18:42.210
你知道一个盒装发行，你

00:18:40.590 --> 00:18:44.130
知道什么时候一点一出来

00:18:42.210 --> 00:18:45.960
我们确定可以

00:18:44.130 --> 00:18:47.910
我们已经在其他这些

00:18:45.960 --> 00:18:50.280
可以，但是他们还没有准备好

00:18:47.910 --> 00:18:52.650
发布了，所以我说好吧不，我们只是

00:18:50.280 --> 00:18:54.179
要去配置，我们有一些

00:18:52.650 --> 00:18:56.130
关于还可以的问题，但这仅仅是

00:18:54.179 --> 00:18:57.419
配置，就像是，但不是

00:18:56.130 --> 00:18:59.700
这就是我们要走的路

00:18:57.419 --> 00:19:02.370
这样做，然后我们有了另一个时间框

00:18:59.700 --> 00:19:04.020
 Java版本之一，这就是我们

00:19:02.370 --> 00:19:07.049
有另一个你知道所有五个

00:19:04.020 --> 00:19:11.220
准备就绪的其他功能

00:19:07.049 --> 00:19:12.630
激励人们将Java作为一种方式

00:19:11.220 --> 00:19:15.720
所谓的会议驱动

00:19:12.630 --> 00:19:17.330
发展正本就此发表演讲

00:19:15.720 --> 00:19:20.040
做你想创造的东西

00:19:17.330 --> 00:19:23.910
是的，那个日子最终会来的哦

00:19:20.040 --> 00:19:26.220
天哪，哦，让我们做到这一点，只是一个

00:19:23.910 --> 00:19:30.480
如果您看一下开放的JDK，请快速提及

00:19:26.220 --> 00:19:32.250
 OpenJDK也正在向该行业发展

00:19:30.480 --> 00:19:35.240
嗨，你知道也许这是个好主意

00:19:32.250 --> 00:19:37.980
是的，我知道我认为这是一件好事

00:19:35.240 --> 00:19:39.630
是的，我们整洁的事情之一

00:19:37.980 --> 00:19:40.950
你应该知道开始考虑的是

00:19:39.630 --> 00:19:42.660
因为每个人都有这些微小的

00:19:40.950 --> 00:19:44.520
盒子释放和行为实际上是在尝试

00:19:42.660 --> 00:19:46.890
使我们所做的与您了解一致

00:19:44.520 --> 00:19:49.350
最终是e4j和微型

00:19:46.890 --> 00:19:51.540
个人资料以及正在发生的事情

00:19:49.350 --> 00:19:54.330
 Java SE正确，看看我们是否可以开始

00:19:51.540 --> 00:19:55.740
将功能排列在一起

00:19:54.330 --> 00:19:56.370
堆叠以利用事物

00:19:55.740 --> 00:19:57.330
发生了

00:19:56.370 --> 00:19:58.679
在堆栈中，我认为会有一个

00:19:57.330 --> 00:20:00.690
我们能够做到的整洁的事情

00:19:58.679 --> 00:20:03.210
与时间盒发布有关，我认为

00:20:00.690 --> 00:20:06.710
让我们更有能力做到这一点，我

00:20:03.210 --> 00:20:11.640
会说使这一点更大声

00:20:06.710 --> 00:20:13.620
八个是Java SE八个，所以整个

00:20:11.640 --> 00:20:16.049
修订的主要工作明显落后

00:20:13.620 --> 00:20:18.720
没有其他选择，因为

00:20:16.049 --> 00:20:21.510
你知道很难开发ee8 

00:20:18.720 --> 00:20:25.169
在九点之上，因为事情是

00:20:21.510 --> 00:20:27.750
有点变化，但基本上

00:20:25.169 --> 00:20:30.059
 se的六个月发行没有

00:20:27.750 --> 00:20:32.340
我们甚至会成为你的原因

00:20:30.059 --> 00:20:33.960
我可以落后六个多月

00:20:32.340 --> 00:20:36.299
看到我们落后了六个月，但

00:20:33.960 --> 00:20:41.549
你会不会像整整一年

00:20:36.299 --> 00:20:44.460
好吧，让我们看看对不起

00:20:41.549 --> 00:20:49.020
快速时间检查这里要做的事

00:20:44.460 --> 00:20:52.470
所以这是另一个问题

00:20:49.020 --> 00:20:54.870
可能会伪造和微观轮廓

00:20:52.470 --> 00:20:58.020
大型Eclipse项目与

00:20:54.870 --> 00:21:01.440
未来，所以我要戴维准备

00:20:58.020 --> 00:21:03.419
这是因为我们有一个我们有两个

00:21:01.440 --> 00:21:05.940
小时会议不是关于这个特殊的

00:21:03.419 --> 00:21:08.809
话题，但确实出现了一些

00:21:05.940 --> 00:21:11.429
人们表达了他们如何参考他们

00:21:08.809 --> 00:21:14.130
表达了他们如何看待微观形象

00:21:11.429 --> 00:21:17.970
和e4j应该一起走

00:21:14.130 --> 00:21:22.860
我想我们都同意大卫善良

00:21:17.970 --> 00:21:26.309
现在我必须更简洁地说

00:21:22.860 --> 00:21:29.490
记得我的确切话我想我

00:21:26.309 --> 00:21:31.260
在我看来，理想情况下

00:21:29.490 --> 00:21:34.020
我猜有些人认为

00:21:31.260 --> 00:21:37.039
一样，一旦我们谈论它，我们将看到

00:21:34.020 --> 00:21:41.309
在列表中，但II希望看到

00:21:37.039 --> 00:21:44.029
微型配置文件位于e4j下

00:21:41.309 --> 00:21:46.830
雨伞有点像创新的优势

00:21:44.029 --> 00:21:49.500
在这里我们可以进行孵化和实验

00:21:46.830 --> 00:21:52.620
有一些好的想法，然后你知道

00:21:49.500 --> 00:21:55.470
有那种继续

00:21:52.620 --> 00:21:59.029
你知道引擎正在创新

00:21:55.470 --> 00:22:02.460
现在，但在e4j雨伞内

00:21:59.029 --> 00:22:05.820
如果我愿意的话，我很乐意

00:22:02.460 --> 00:22:08.070
有一天可以说你知道一个微

00:22:05.820 --> 00:22:11.220
个人资料会很有趣

00:22:08.070 --> 00:22:12.360
是一个新名字，就是这样

00:22:11.220 --> 00:22:14.490
真的很酷，我认为

00:22:12.360 --> 00:22:16.680
就像你知道我会死的

00:22:14.490 --> 00:22:19.950
鸣叫那一天，如果可能的话

00:22:16.680 --> 00:22:21.510
有一天变得真实，所以也许我可以

00:22:19.950 --> 00:22:25.980
即使我不发表评论

00:22:21.510 --> 00:22:27.690
做出任何前瞻性声明，所以如果我们

00:22:25.980 --> 00:22:29.970
看今天我们基本上有两个好

00:22:27.690 --> 00:22:31.770
两件事，所以我们有了Java 8 

00:22:29.970 --> 00:22:33.810
刚刚发布，我们有微观概况

00:22:31.770 --> 00:22:36.780
所以您已经有多个版本

00:22:33.810 --> 00:22:39.330
我们才刚刚开始在该e4j上工作

00:22:36.780 --> 00:22:40.830
迁移，所以我们知道你有

00:22:39.330 --> 00:22:42.450
你已经完成了这个练习，所以

00:22:40.830 --> 00:22:45.270
我们知道这不是一个简单的练习

00:22:42.450 --> 00:22:46.950
移动这样的项目，因为它是一个

00:22:45.270 --> 00:22:50.040
对孩子们来说非常大的项目

00:22:46.950 --> 00:22:53.040
基础，所以我认为拍摄会

00:22:50.040 --> 00:22:56.190
好吧，我们真的必须专注于那些

00:22:53.040 --> 00:22:58.380
两个我的意思是II Java e8和micro profile 

00:22:56.190 --> 00:23:00.570
并希望随着时间的流逝

00:22:58.380 --> 00:23:02.400
两者之间有些融合，但是

00:23:00.570 --> 00:23:04.320
我们不要期望太多

00:23:02.400 --> 00:23:05.670
现在已经在谈论这个

00:23:04.320 --> 00:23:09.120
转换我认为还为时过早

00:23:05.670 --> 00:23:12.420
我还要补充一点，你知道

00:23:09.120 --> 00:23:14.700
最终onesie 4j在那里

00:23:12.420 --> 00:23:16.350
是我们要讨论的东西

00:23:14.700 --> 00:23:17.550
两个社区都不是

00:23:16.350 --> 00:23:19.410
那顶红帽子

00:23:17.550 --> 00:23:21.150
 Oracle IBM或将要决定的任何人

00:23:19.410 --> 00:23:22.710
这是社区

00:23:21.150 --> 00:23:25.110
必须决定社区是否决定

00:23:22.710 --> 00:23:26.940
他们想保持现状

00:23:25.110 --> 00:23:28.770
完全独立的项目，那就是

00:23:26.940 --> 00:23:30.720
我们要怎么做，我会说

00:23:28.770 --> 00:23:35.580
我在为自己说话，我在

00:23:30.720 --> 00:23:38.790
历史上非常令人兴奋，所以

00:23:35.580 --> 00:23:40.410
那，但事实是，两个项目

00:23:38.790 --> 00:23:42.150
现在并将在儿童之下

00:23:40.410 --> 00:23:43.800
我的意思是说基金会将大大简化

00:23:42.150 --> 00:23:50.580
那些讨论和那种潜力

00:23:43.800 --> 00:23:52.490
约定只是为了澄清，因为您

00:23:50.580 --> 00:23:55.350
知道听众中的人可能不知道

00:23:52.490 --> 00:23:58.590
目前，微观资料处于

00:23:55.350 --> 00:24:00.680
正在进行不同的顶级项目

00:23:58.590 --> 00:24:04.320
 Eclipse中的技术项目

00:24:00.680 --> 00:24:07.500
对于e4j，我们正在建立一个新的

00:24:04.320 --> 00:24:09.450
顶层项目称为e4j，因此

00:24:07.500 --> 00:24:11.520
目前他们将分开

00:24:09.450 --> 00:24:13.530
项目，这就是为什么讨论

00:24:11.520 --> 00:24:15.750
对不起，讨论将不得不

00:24:13.530 --> 00:24:18.240
最终发生，你知道我们要去

00:24:15.750 --> 00:24:19.910
将它们移到同一项目下，或

00:24:18.240 --> 00:24:22.730
我们要把它们分开吗

00:24:19.910 --> 00:24:25.250
道路上的东西，那就是

00:24:22.730 --> 00:24:27.740
我们喜欢听到任何反馈

00:24:25.250 --> 00:24:29.270
您知道正确的新规格要处理的事情

00:24:27.740 --> 00:24:31.220
我们如何发展您知道的发行版

00:24:29.270 --> 00:24:34.190
循环前进的任何东西

00:24:31.220 --> 00:24:36.860
与你知道有关移动你知道的

00:24:34.190 --> 00:24:39.410
企业Java EE转发或4j 

00:24:36.860 --> 00:24:41.960
前锋就像真的反馈很好

00:24:39.410 --> 00:24:43.460
真的很想这么做哦，有人忘了

00:24:41.960 --> 00:24:45.770
提到我们也有一个EE伪造的

00:24:43.460 --> 00:24:48.500
将邮件列表通勤

00:24:45.770 --> 00:24:50.660
 Eclipse Foundation，所以去Eclipse 

00:24:48.500 --> 00:24:54.410
建立并加入EEE-EEE伪造

00:24:50.660 --> 00:24:56.110
一个-社区别名，您知道

00:24:54.410 --> 00:24:58.670
你想赶上它不是那么深

00:24:56.110 --> 00:24:59.780
因为它只是建立你

00:24:58.670 --> 00:25:06.800
可以很快被赶上

00:24:59.780 --> 00:25:08.240
那现在就贡献一下

00:25:06.800 --> 00:25:10.310
听众的提问

00:25:08.240 --> 00:25:12.950
举起你的手，我可以带走

00:25:10.310 --> 00:25:23.060
如果方便的话，带上麦克风

00:25:12.950 --> 00:25:25.820
问难题，迈克也问

00:25:23.060 --> 00:25:27.800
报告此微型个人资料，请按照

00:25:25.820 --> 00:25:29.930
与Java具有相同的模式

00:25:27.800 --> 00:25:31.700
在多种实现中的规范

00:25:29.930 --> 00:25:33.380
你们包括相同的jar文件

00:25:31.700 --> 00:25:39.190
您的应用服务器或您拥有什么

00:25:33.380 --> 00:25:42.620
所以不，我们每个人都有自己的

00:25:39.190 --> 00:25:45.860
实施，所以在微观概况

00:25:42.620 --> 00:25:50.270
正在定义规范和规范

00:25:45.860 --> 00:25:51.910
 API和TCK我们执行的实现

00:25:50.270 --> 00:25:54.800
没有定义参考实现

00:25:51.910 --> 00:25:56.630
可能会有一些示例实现

00:25:54.800 --> 00:25:58.250
已创建，但没有参考

00:25:56.630 --> 00:26:00.800
实施每个供应商

00:25:58.250 --> 00:26:04.280
创建自己的实现

00:26:00.800 --> 00:26:05.990
规格，但没有

00:26:04.280 --> 00:26:08.390
任何防止多个供应商的东西

00:26:05.990 --> 00:26:10.760
在相同的代码上进行协作

00:26:08.390 --> 00:26:13.220
然后被部署到你那里

00:26:10.760 --> 00:26:15.380
知道合规的实现，所以我们只是

00:26:13.220 --> 00:26:17.030
没有强制要求我们很好

00:26:15.380 --> 00:26:18.470
开源实践让社区

00:26:17.030 --> 00:26:21.140
决定他们想做什么

00:26:18.470 --> 00:26:24.280
例如标记可能如何进行

00:26:21.140 --> 00:26:27.380
共享相同的配置API 

00:26:24.280 --> 00:26:30.020
 Tommy所做的实现

00:26:27.380 --> 00:26:32.760
因为约翰遇见了，而且非常大

00:26:30.020 --> 00:26:35.310
 Apache的家伙，我们也是这样

00:26:32.760 --> 00:26:37.080
实施，然后我们将

00:26:35.310 --> 00:26:39.330
编译在吊床上消费它会

00:26:37.080 --> 00:26:42.750
在汤米吃掉它，所以有

00:26:39.330 --> 00:26:49.370
没有什么可以阻止共享，但不是

00:26:42.750 --> 00:26:51.380
现在要求您有一个复杂的问题

00:26:49.370 --> 00:26:53.790
现在您已经自己购买了

00:26:51.380 --> 00:27:01.490
好吧，所以任何其他问题都会引起您

00:26:53.790 --> 00:27:03.980
我从以下角度考虑

00:27:01.490 --> 00:27:08.310
加快采用角度

00:27:03.980 --> 00:27:10.650
看到目前所有你们都喜欢

00:27:08.310 --> 00:27:14.840
安装或实施

00:27:10.650 --> 00:27:18.660
像实际生产一样

00:27:14.840 --> 00:27:20.700
那里的应用程序如何

00:27:18.660 --> 00:27:23.940
有什么计划可以基本上提供一些

00:27:20.700 --> 00:27:26.400
像是转化类型或某种类型

00:27:23.940 --> 00:27:29.940
使您现有的方式

00:27:26.400 --> 00:27:32.790
申请继续进行

00:27:29.940 --> 00:27:38.840
服务架构类型的风景

00:27:32.790 --> 00:27:42.150
可以使用麦克风或e4j 

00:27:38.840 --> 00:27:43.680
我会简单回答， 

00:27:42.150 --> 00:27:46.260
确保每个人都可能相似

00:27:43.680 --> 00:27:49.050
我们不打算有单独的ee 

00:27:46.260 --> 00:27:52.430
汤米（Tommy）和一个单独的微型档案（Tommy） 

00:27:49.050 --> 00:27:55.820
我们把所有东西都放在一起

00:27:52.430 --> 00:27:58.680
您可以使用标准的EE工具

00:27:55.820 --> 00:28:01.560
另外，您可以获得更多的微型

00:27:58.680 --> 00:28:03.720
他们已经可以使用个人资料api了

00:28:01.560 --> 00:28:07.200
你应该不要他们吗？ 

00:28:03.720 --> 00:28:08.700
必须安装更多东西才能

00:28:07.200 --> 00:28:10.380
为此，并且当然

00:28:08.700 --> 00:28:13.770
每个人都可能会做事

00:28:10.380 --> 00:28:17.400
不同，但是你知道那就是

00:28:13.770 --> 00:28:19.800
这就是我们决定合并的方式

00:28:17.400 --> 00:28:21.360
 EE和微观配置文件都在同一位置

00:28:19.800 --> 00:28:23.330
框，因为它们确实互补

00:28:21.360 --> 00:28:28.170
其他他们没有任何冲突

00:28:23.330 --> 00:28:30.360
所以你是微轮廓技术

00:28:28.170 --> 00:28:32.970
除了很多EE知道

00:28:30.360 --> 00:28:34.560
现在，微型个人资料仅授权一个

00:28:32.970 --> 00:28:36.980
几件事，但没有停止

00:28:34.560 --> 00:28:39.600
您从盒子里放了更多东西

00:28:36.980 --> 00:28:40.450
所以这就是我们拥有的方式

00:28:39.600 --> 00:28:41.680
试图做到

00:28:40.450 --> 00:28:44.320
我不知道你们是否愿意付出

00:28:41.680 --> 00:28:48.400
您对如何启用的观点

00:28:44.320 --> 00:28:52.330
人们同时使用两者，所以您知道我们有一个

00:28:48.400 --> 00:28:54.940
名为“野生苍蝇群”的项目即将成为现实

00:28:52.330 --> 00:28:57.670
被称为野蝇群的产品

00:28:54.940 --> 00:28:59.770
符合我们的微资料

00:28:57.670 --> 00:29:02.680
实现是基于我们的野性飞

00:28:59.770 --> 00:29:04.450
应用服务器，您至少知道

00:29:02.680 --> 00:29:08.200
此刻基本上是你知道你

00:29:04.450 --> 00:29:11.190
带上完整的EE应用程序服务器， 

00:29:08.200 --> 00:29:14.800
你知道你可以用

00:29:11.190 --> 00:29:17.740
群附带的各种工具

00:29:14.800 --> 00:29:19.720
为了得到我们所削减的最低限度

00:29:17.740 --> 00:29:23.620
不要以为我们有点Sturm，但我们

00:29:19.720 --> 00:29:25.480
称它为正确的应用服务器大小，但

00:29:23.620 --> 00:29:28.410
因为它符合micro 

00:29:25.480 --> 00:29:31.810
符合我们或符合要求的个人资料

00:29:28.410 --> 00:29:33.610
微型配置文件的配置，我们可以

00:29:31.810 --> 00:29:36.220
保证你仍然可以知道

00:29:33.610 --> 00:29:38.410
从您知道的移植您的应用程序

00:29:36.220 --> 00:29:40.090
从我们的实施到您知道

00:29:38.410 --> 00:29:42.820
汤米部落的实施甚至

00:29:40.090 --> 00:29:46.240
 IBM实施，但我确实想

00:29:42.820 --> 00:29:48.550
问我想知道你的问题是否

00:29:46.240 --> 00:29:51.100
有关如何从头开始的更多信息

00:29:48.550 --> 00:29:53.500
完整的Java EE应用程序

00:29:51.100 --> 00:29:56.890
应用服务器，您是否启动了

00:29:53.500 --> 00:29:58.600
正确确定部署大小的旅程

00:29:56.890 --> 00:30:00.070
只把那些东西放在里面

00:29:58.600 --> 00:30:01.720
需要我不知道的业务逻辑

00:30:00.070 --> 00:30:03.730
如果是的话，我想在哪里

00:30:01.720 --> 00:30:06.340
问题之一是从现有的

00:30:03.730 --> 00:30:09.790
现有的应用程序已经

00:30:06.340 --> 00:30:13.600
具有您所拥有的电子规格

00:30:09.790 --> 00:30:18.220
 JSP，您拥有JB的MD B和所有这些

00:30:13.600 --> 00:30:21.520
事情如何将这些映射到

00:30:18.220 --> 00:30:25.840
微观档案或ej，例如

00:30:21.520 --> 00:30:28.150
推荐方式的类型或某种

00:30:25.840 --> 00:30:31.060
转换或分析工具之类的东西

00:30:28.150 --> 00:30:33.820
可以用来创建那个

00:30:31.060 --> 00:30:36.280
迁移路径，如果我有一个

00:30:33.820 --> 00:30:38.790
我想在此方面做更多的应用

00:30:36.280 --> 00:30:43.780
路径是怎么回事

00:30:38.790 --> 00:30:45.220
首先我要说不要

00:30:43.780 --> 00:30:47.170
一定要买入微

00:30:45.220 --> 00:30:49.240
服务，现在一切都必须是

00:30:47.170 --> 00:30:50.880
微服务，如果您有，我有一个

00:30:49.240 --> 00:30:52.710
 Java EE应用程序

00:30:50.880 --> 00:30:55.200
对你来说真的很好

00:30:52.710 --> 00:30:57.960
今天你为什么要改变那个

00:30:55.200 --> 00:31:00.240
所以只是因为很多其他人

00:30:57.960 --> 00:31:02.340
说你应该使用微服务

00:31:00.240 --> 00:31:05.160
实际上并不意味着您需要

00:31:02.340 --> 00:31:08.070
如果您决定使用微服务

00:31:05.160 --> 00:31:09.930
沿着那条目前你知道的路线走

00:31:08.070 --> 00:31:11.970
微型个人资料，我认为我们没有任何资料

00:31:09.930 --> 00:31:13.380
最佳做法或建议

00:31:11.970 --> 00:31:14.610
当然是我认为你的事情

00:31:13.380 --> 00:31:17.280
当然知道

00:31:14.610 --> 00:31:19.560
开会，我们刚才在谈论

00:31:17.280 --> 00:31:22.170
我们可能需要开始

00:31:19.560 --> 00:31:23.490
想着我有的事

00:31:22.170 --> 00:31:24.690
可以说，但是从RedHat的角度来看

00:31:23.490 --> 00:31:29.880
查看明亮我想我要保持这个

00:31:24.690 --> 00:31:32.580
那种中性的微轮廓，所以没有我

00:31:29.880 --> 00:31:34.980
想什么，我想我只是

00:31:32.580 --> 00:31:36.630
再次强调，我认为映射概念

00:31:34.980 --> 00:31:40.260
也许你不必改变

00:31:36.630 --> 00:31:42.480
你所知道的一切，因为我知道

00:31:40.260 --> 00:31:44.970
您想保持通用性，但是很难

00:31:42.480 --> 00:31:46.680
回答问题，就像你

00:31:44.970 --> 00:31:48.030
是Tommy用户，您只是继续升级

00:31:46.680 --> 00:31:49.470
然后你最终会开始

00:31:48.030 --> 00:31:52.770
越来越多的微型个人资料中

00:31:49.470 --> 00:31:55.260
不要更改或映射或修改您的

00:31:52.770 --> 00:31:58.170
应用程序，最终将是

00:31:55.260 --> 00:32:02.190
越来越多的东西供您使用

00:31:58.170 --> 00:32:05.730
没有撕裂和更换

00:32:02.190 --> 00:32:08.250
你知道那只是继续下去

00:32:05.730 --> 00:32:10.290
 EE路径和更多微型配置文件

00:32:08.250 --> 00:32:12.270
将开始以相同的二进制文件显示

00:32:10.290 --> 00:32:14.310
而且如果您不需要做任何事情

00:32:12.270 --> 00:32:18.090
不想，或者您可以开始使用

00:32:14.310 --> 00:32:20.910
如果您只想一件事

00:32:18.090 --> 00:32:23.040
要补充的是，我们做了

00:32:20.910 --> 00:32:26.070
很早就做出决定，因为

00:32:23.040 --> 00:32:30.540
麦克风将来自JDK 8，所以

00:32:26.070 --> 00:32:32.100
我希望您还没有使用JDK 7，但是如果

00:32:30.540 --> 00:32:33.780
您将需要转到JDK 8 

00:32:32.100 --> 00:32:36.170
是的，那将非常非常好

00:32:33.780 --> 00:32:36.170
大喊

00:32:40.090 --> 00:32:45.020
我要补充的一件事是你知道

00:32:42.950 --> 00:32:46.640
不同的供应商正在接近

00:32:45.020 --> 00:32:48.740
我们以不同的方式解决问题

00:32:46.640 --> 00:32:50.480
一种方法甚至

00:32:48.740 --> 00:32:53.480
应用服务器李的只是

00:32:50.480 --> 00:32:55.850
从迈克尔的个人资料中脱颖而出

00:32:53.480 --> 00:32:57.140
是我们所有人都有

00:32:55.850 --> 00:32:59.900
不是你知道不同的模块

00:32:57.140 --> 00:33:03.770
实现，或者您只知道一个

00:32:59.900 --> 00:33:05.510
你知道我们可以部署的运行时

00:33:03.770 --> 00:33:06.980
各种采取不同的方法

00:33:05.510 --> 00:33:08.180
我们只是自然而然地

00:33:06.980 --> 00:33:15.830
进入我们的微观资料

00:33:08.180 --> 00:33:20.090
实施，所以这是正确的

00:33:15.830 --> 00:33:22.540
努力一点，不要让你失望

00:33:20.090 --> 00:33:25.730
用微轮廓解决世界饥饿问题

00:33:22.540 --> 00:33:28.400
所以我假设因为Java EE 8是

00:33:25.730 --> 00:33:31.940
你们是新手，他们介绍了您的规格

00:33:28.400 --> 00:33:34.820
针对Java EE 7现在有一些

00:33:31.940 --> 00:33:38.750
 Java EE规范包括微概要文件

00:33:34.820 --> 00:33:41.390
这是一个CDI JSONP和jax-rs，所以如果我

00:33:38.750 --> 00:33:43.490
有一个Java EE 8实现，并且

00:33:41.390 --> 00:33:47.930
我想反对微

00:33:43.490 --> 00:33:53.120
配置文件我可以使用Java EE 8功能吗

00:33:47.930 --> 00:33:58.760
好吧，我们做了，以此为基础

00:33:53.120 --> 00:34:02.030
就像我们将CDI 1.2确定为

00:33:58.760 --> 00:34:05.210
最低限度，所以如果您要向上移动

00:34:02.030 --> 00:34:08.840
然后使用CDI 2.0，那么您可以继续

00:34:05.210 --> 00:34:12.470
并做到这一点，但我们所有人

00:34:08.840 --> 00:34:14.930
实现和之间的关系

00:34:12.470 --> 00:34:16.940
所有功能可能都在那里

00:34:14.930 --> 00:34:19.310
新功能的某些方面

00:34:16.940 --> 00:34:21.830
我们想利用的优势，所以我们

00:34:19.310 --> 00:34:23.000
正在寻找新的更新

00:34:21.830 --> 00:34:25.460
发布，这就是我们在想的地方

00:34:23.000 --> 00:34:29.330
关于更新编号方案

00:34:25.460 --> 00:34:32.630
因此对于微型文件2x，我们将

00:34:29.330 --> 00:34:35.210
将基本功能集更新为Java 

00:34:32.630 --> 00:34:38.390
正确的EE 8，那时我们

00:34:35.210 --> 00:34:40.580
还谈到将JSON B引入

00:34:38.390 --> 00:34:42.860
补充了我们等待了很长时间的JSON P 

00:34:40.580 --> 00:34:44.270
 Java EE的时间，所以我们真的很想

00:34:42.860 --> 00:34:47.360
使用新功能是一个很好的答案

00:34:44.270 --> 00:34:50.419
我的意思是基本上规格或如果您看

00:34:47.360 --> 00:34:51.139
在Micro Profile 1.2规范中，它不是

00:34:50.419 --> 00:34:53.690
很久了

00:34:51.139 --> 00:34:57.289
在CGI中非常容易阅读

00:34:53.690 --> 00:34:59.480
本节具体执行

00:34:57.289 --> 00:35:02.630
是必需的，但至少要知道吗

00:34:59.480 --> 00:35:04.910
 1.2，但如果它想做2.0，那就是

00:35:02.630 --> 00:35:08.720
好吧，你可能会牺牲一些

00:35:04.910 --> 00:35:20.539
可移植性成为一个聪明的用户，并拥有

00:35:08.720 --> 00:35:24.109
即将到来的微型个人资料列表中的乐趣

00:35:20.539 --> 00:35:26.990
就像标准化dupage一样

00:35:24.109 --> 00:35:30.920
旅游服务或应用服务

00:35:26.990 --> 00:35:36.260
现在一切都不同了

00:35:30.920 --> 00:35:38.420
不，不，目前我们都有自己的

00:35:36.260 --> 00:35:42.289
不同的方法让你知道你如何

00:35:38.420 --> 00:35:44.240
创建您的Ruby jar是的，我的意思是

00:35:42.289 --> 00:35:45.920
也许我们可能会聚在一起尝试

00:35:44.240 --> 00:35:48.019
在某些方面脱颖而出

00:35:45.920 --> 00:35:51.079
点，但我认为这不是关键

00:35:48.019 --> 00:35:52.700
在这个阶段的事情是的，我只是

00:35:51.079 --> 00:35:54.769
说当我们开始会议时

00:35:52.700 --> 00:35:57.619
您知道的应用程序

00:35:54.769 --> 00:35:58.730
参考架构，适合那些

00:35:57.619 --> 00:36:01.130
不熟悉

00:35:58.730 --> 00:36:03.109
基本上，我们开始了，我们

00:36:01.130 --> 00:36:04.700
说让我们做一个示例应用程序，然后我们

00:36:03.109 --> 00:36:06.380
让自己死在铁轨上

00:36:04.700 --> 00:36:07.940
说等等你怎么能有一个

00:36:06.380 --> 00:36:11.900
一个应用程序的微服务架构

00:36:07.940 --> 00:36:14.029
所以我们有四个微服务

00:36:11.900 --> 00:36:17.750
他们部署在所有服务器上， 

00:36:14.029 --> 00:36:20.990
每个人都有超级罐子

00:36:17.750 --> 00:36:22.490
 Jar开始时带有不同的标志

00:36:20.990 --> 00:36:24.140
知道如何配置端口，但是

00:36:22.490 --> 00:36:28.250
已经开始成为一种

00:36:24.140 --> 00:36:30.710
我想更多一点

00:36:28.250 --> 00:36:32.299
因此会议应用程序确实向您显示

00:36:30.710 --> 00:36:36.230
如何做罐子和所有

00:36:32.299 --> 00:36:38.089
在这里的实现

00:36:36.230 --> 00:36:40.309
不是标准的，但实际上

00:36:38.089 --> 00:36:42.769
英格，你知道它正在变得有点

00:36:40.309 --> 00:36:45.109
事实可能与

00:36:42.769 --> 00:36:48.740
大家我都在相关的笔记上

00:36:45.109 --> 00:36:53.170
是约翰·哈蒙德（John Hammond）的建议， 

00:36:48.740 --> 00:36:55.579
是的，很忙，所以他建议有

00:36:53.170 --> 00:36:59.779
常见的配置选项，所以也许

00:36:55.579 --> 00:37:02.370
您可以设置微配置文件HTTP逐出

00:36:59.779 --> 00:37:04.410
或HTTP端口及其

00:37:02.370 --> 00:37:07.110
提到的每一个都一样

00:37:04.410 --> 00:37:10.140
我们在豪华比利时的谈话中是的

00:37:07.110 --> 00:37:11.310
是的，是十一月

00:37:10.140 --> 00:37:14.190
我认为最近在他们的邮件列表上

00:37:11.310 --> 00:37:18.690
艺术家或我提到它，以便在那里

00:37:14.190 --> 00:37:20.700
不是很多人都会给约翰

00:37:18.690 --> 00:37:23.550
对此有很多反馈，所以我想也许

00:37:20.700 --> 00:37:25.170
它不是很想要，但如果有的话

00:37:23.550 --> 00:37:26.400
那很吸引人，那么你知道得到

00:37:25.170 --> 00:37:28.530
参与邮件列表，我

00:37:26.400 --> 00:37:37.860
确保您会乐于再做

00:37:28.530 --> 00:37:40.290
检查谢谢，是您的电话

00:37:37.860 --> 00:37:42.540
麦克风差档基本上一样

00:37:40.290 --> 00:37:44.910
以及标准的，让我们这样

00:37:42.540 --> 00:37:46.920
可以做微服务

00:37:44.910 --> 00:37:49.020
所以你从最低限度开始

00:37:46.920 --> 00:37:52.920
现在您开始添加更多和

00:37:49.020 --> 00:37:54.390
还有更多的东西，但有些

00:37:52.920 --> 00:37:56.430
指向麦克风文件本身

00:37:54.390 --> 00:37:59.190
可能不再是迈克尔了

00:37:56.430 --> 00:38:01.290
对，所以有什么计划可以

00:37:59.190 --> 00:38:02.850
使诸如期权之类的事情成为未来

00:38:01.290 --> 00:38:04.980
在某个地方你说还可以

00:38:02.850 --> 00:38:09.210
不，我们必须停止，因为这不是

00:38:04.980 --> 00:38:11.400
真的迈克尔，我知道

00:38:09.210 --> 00:38:13.620
澄清的是，微观轮廓

00:38:11.400 --> 00:38:18.840
微观部分是为微观

00:38:13.620 --> 00:38:21.150
服务，使其可以增长，但

00:38:18.840 --> 00:38:24.270
即使我们正在定义

00:38:21.150 --> 00:38:26.160
微观个人资料会释放每个

00:38:24.270 --> 00:38:29.910
提供的功能是

00:38:26.160 --> 00:38:32.130
独立的，所以如果给定的实现

00:38:29.910 --> 00:38:33.630
不想出于任何原因

00:38:32.130 --> 00:38:36.780
他们不想实施全部

00:38:33.630 --> 00:38:38.730
可以选择的微型配置文件1.2或1.3 

00:38:36.780 --> 00:38:42.000
他们想要的个人功能

00:38:38.730 --> 00:38:46.320
实施，以便您知道是否有您

00:38:42.000 --> 00:38:48.630
知道大小或资源问题

00:38:46.320 --> 00:38:49.590
为了提供任何东西

00:38:48.630 --> 00:38:52.170
这种能力

00:38:49.590 --> 00:38:55.910
您可以像

00:38:52.170 --> 00:38:57.990
个人资料发布，我的意思是我们不是

00:38:55.910 --> 00:39:01.380
需要任何特定的实现

00:38:57.990 --> 00:39:03.510
必须升级到下一个版本

00:39:01.380 --> 00:39:05.400
所以你知道你可以有一个微型个人资料

00:39:03.510 --> 00:39:07.380
符合一一实施

00:39:05.400 --> 00:39:09.510
坚持下去就是你想要的

00:39:07.380 --> 00:39:11.340
一个你不必移动到1/2或

00:39:09.510 --> 00:39:13.050
不是1/3还是1/4 

00:39:11.340 --> 00:39:14.400
无法获得的软件版本

00:39:13.050 --> 00:39:16.339
一次支持以前的版本

00:39:14.400 --> 00:39:18.769
新版本问世

00:39:16.339 --> 00:39:19.970
我想看到的一件事是

00:39:18.769 --> 00:39:21.950
在邮件列表中谈到了这一点

00:39:19.970 --> 00:39:23.900
几次，但也许有点

00:39:21.950 --> 00:39:27.410
在这个阶段我太复杂了

00:39:23.900 --> 00:39:31.009
想一些树光模型

00:39:27.410 --> 00:39:32.690
释放如何相互分离

00:39:31.009 --> 00:39:34.190
比线性更适用

00:39:32.690 --> 00:39:37.039
我们目前正在做的方法，但您

00:39:34.190 --> 00:39:39.259
必须从某个地方开始，所以我认为

00:39:37.039 --> 00:39:40.880
不一定是微观的事实

00:39:39.259 --> 00:39:44.329
随着我们添加越来越多的东西

00:39:40.880 --> 00:39:46.369
将需要越来越多的组件来

00:39:44.329 --> 00:39:50.119
在你知道你的堆栈

00:39:46.369 --> 00:39:57.430
实际上实施它，所以我实际上我

00:39:50.119 --> 00:39:57.430
其实还有一个问题要测试

00:39:58.809 --> 00:40:05.829
所以这是我的脚尖好吗

00:40:04.009 --> 00:40:08.839
现在大约出现了几次

00:40:05.829 --> 00:40:11.779
标准权和行业种类

00:40:08.839 --> 00:40:14.299
你们知道JCP是

00:40:11.779 --> 00:40:15.589
标准组织，所以也许这是

00:40:14.299 --> 00:40:17.150
一个问题，这是每个人的问题

00:40:15.589 --> 00:40:21.589
但也许我会开始

00:40:17.150 --> 00:40:25.130
与David在一起的是Jay和EE的EE 

00:40:21.589 --> 00:40:28.069
 Eclipse Foundation我们要做的是

00:40:25.130 --> 00:40:32.269
您认为考虑标准还是

00:40:28.069 --> 00:40:34.009
你知道的，是的，也许我就走了

00:40:32.269 --> 00:40:36.500
人们应该考虑这个

00:40:34.009 --> 00:40:39.849
成为标准或任何你知道的

00:40:36.500 --> 00:40:39.849
其他人也可以通过管道

00:40:40.029 --> 00:40:45.890
这不是简单的答案，而是一个

00:40:42.920 --> 00:40:48.200
为什么我们前进的原因

00:40:45.890 --> 00:40:50.690
我们已经决定迁移Java开发

00:40:48.200 --> 00:40:52.099
到开源基金会，即

00:40:50.690 --> 00:40:55.549
 Eclipse Foundation是我们想要的

00:40:52.099 --> 00:40:57.559
解决那个发行问题，我的意思是Java是

00:40:55.549 --> 00:41:01.519
太慢而无法更新，因此

00:40:57.559 --> 00:41:05.000
问题，所以我们希望当他

00:41:01.519 --> 00:41:06.170
因为杰伊会在那里，所以真的

00:41:05.000 --> 00:41:08.480
取决于您所说的标准

00:41:06.170 --> 00:41:10.069
但最终，我们希望

00:41:08.480 --> 00:41:12.079
拥有一些被广泛使用的东西

00:41:10.069 --> 00:41:14.450
这就是为什么我们需要一些

00:41:12.079 --> 00:41:17.539
关于使用什么的共同协议

00:41:14.450 --> 00:41:19.940
将达成该协议仍然有

00:41:17.539 --> 00:41:22.210
仍然需要决定要讨论

00:41:19.940 --> 00:41:22.210
对我来说

00:41:22.330 --> 00:41:28.750
我说你知道蚀的基础

00:41:26.130 --> 00:41:32.080
零散的基础和其他我不是

00:41:28.750 --> 00:41:35.830
你可能称之为官方标准

00:41:32.080 --> 00:41:39.310
像w3c Oasis IETF这样的机构，我不

00:41:35.830 --> 00:41:40.660
认为他们应该是我认为这是一个

00:41:39.310 --> 00:41:42.609
 JCP可能遇到的问题

00:41:40.660 --> 00:41:46.180
走进去，你知道大卫的暗示

00:41:42.609 --> 00:41:47.320
如果你不这样做，你不应该尝试去做

00:41:46.180 --> 00:41:49.180
标准内的创新

00:41:47.320 --> 00:41:50.920
标准组织是

00:41:49.180 --> 00:41:52.869
用于标准化具有

00:41:50.920 --> 00:41:54.369
创新并已部署

00:41:52.869 --> 00:41:57.000
人们想拥有便携性或

00:41:54.369 --> 00:42:00.100
互操作性使它们分开，因此

00:41:57.000 --> 00:42:04.210
你知道夏娃还是J真的真的

00:42:00.100 --> 00:42:05.859
好，包括供应商在内的社区

00:42:04.210 --> 00:42:07.780
相信有某些理由

00:42:05.859 --> 00:42:10.210
标准化全部或部分内容

00:42:07.780 --> 00:42:11.920
那么你知道也许我们把它带到一个

00:42:10.210 --> 00:42:13.330
浪费作为旋转的右耳

00:42:11.920 --> 00:42:15.310
全新的标准机构，但我

00:42:13.330 --> 00:42:17.220
老实说这是次要的

00:42:15.310 --> 00:42:21.010
你知道这些天开源

00:42:17.220 --> 00:42:24.310
开放标准往往足够好

00:42:21.010 --> 00:42:25.420
对很多人来说，开放标准

00:42:24.310 --> 00:42:27.609
不会消失的东西

00:42:25.420 --> 00:42:29.770
他们只是那只是

00:42:27.609 --> 00:42:32.980
是的，就是这样

00:42:29.770 --> 00:42:35.260
是的，事实上，是的， 

00:42:32.980 --> 00:42:37.300
这就是我们的原因之一

00:42:35.260 --> 00:42:38.650
知道微型档案的创建时间

00:42:37.300 --> 00:42:40.540
从来没有真正考虑过

00:42:38.650 --> 00:42:43.720
创始人本身就是标准，因为

00:42:40.540 --> 00:42:46.060
这个想法是创新的，然后提交

00:42:43.720 --> 00:42:49.090
你知道我们做过的JCP权利

00:42:46.060 --> 00:42:52.960
与配置，现在有了它

00:42:49.090 --> 00:42:54.970
开始涉足Java Eve 

00:42:52.960 --> 00:42:56.890
进入Eclipse Foundation 

00:42:54.970 --> 00:43:02.350
问题是配置发生了什么

00:42:56.890 --> 00:43:04.720
 jsr提交，我们将继续

00:43:02.350 --> 00:43:08.770
沿着这条路我只是想

00:43:04.720 --> 00:43:11.260
从完成思想配置

00:43:08.770 --> 00:43:13.570
微观观点我的意思是

00:43:11.260 --> 00:43:19.359
从第一天开始的目标就是反馈

00:43:13.570 --> 00:43:21.310
现在通过介绍进入Java EE 

00:43:19.359 --> 00:43:22.840
 EE伪造一种把扳手

00:43:21.310 --> 00:43:26.380
那些计划，但我们已经

00:43:22.840 --> 00:43:29.380
开始了生产

00:43:26.380 --> 00:43:31.660
 Java EE的配置jsr不是

00:43:29.380 --> 00:43:33.870
我们将停止使用

00:43:31.660 --> 00:43:35.970
规范导致所有排队

00:43:33.870 --> 00:43:38.940
我们正在组成专家组

00:43:35.970 --> 00:43:42.030
继续走这条路，因为他4j 

00:43:38.940 --> 00:43:45.180
仍在进行中，因此直到

00:43:42.030 --> 00:43:47.130
这样就可以运行并完善您

00:43:45.180 --> 00:43:49.650
知道我们要继续一样

00:43:47.130 --> 00:43:52.160
处理并尝试完成该jsr 

00:43:49.650 --> 00:43:54.510
是的，没有理由阻止你知道

00:43:52.160 --> 00:43:58.200
显然，我们无法实现创造事物

00:43:54.510 --> 00:44:00.030
如果我们立即停在那里，速度更快

00:43:58.200 --> 00:44:03.180
改变失败的任何改变

00:44:00.030 --> 00:44:07.530
指出好吧，我认为我们是我们脱离了

00:44:03.180 --> 00:44:10.020
现在是12:30是的，所以我

00:44:07.530 --> 00:44:11.550
只是想提防你知道

00:44:10.020 --> 00:44:13.800
下届会议，一切都假设在那里

00:44:11.550 --> 00:44:16.530
在此之后是一个权利，所以谢谢

00:44:13.800 --> 00:44:20.640
非常感谢大家的光临

00:44:16.530 --> 00:44:22.290
与会者和小组成员（如果您愿意） 

00:44:20.640 --> 00:44:24.180
就像我们可以继续对话

00:44:22.290 --> 00:44:25.210
在大厅外面好谢谢

00:44:24.180 --> 00:44:29.989
非常

00:44:25.210 --> 00:44:29.989
 [掌声] 

