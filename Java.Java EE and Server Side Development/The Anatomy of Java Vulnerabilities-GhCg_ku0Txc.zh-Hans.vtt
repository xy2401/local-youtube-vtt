WEBVTT
Kind: captions
Language: zh-Hans

00:00:03.410 --> 00:00:10.680
对，谢谢，非常欢迎您解剖

00:00:08.280 --> 00:00:13.740
 Java漏洞的注意事项

00:00:10.680 --> 00:00:15.660
说这是你最后的机会

00:00:13.740 --> 00:00:16.770
因为这都是秘密你

00:00:15.660 --> 00:00:18.150
不能说什么

00:00:16.770 --> 00:00:24.089
所以我们将您锁定在其余的时间里

00:00:18.150 --> 00:00:27.900
好的，我叫史蒂夫·保罗

00:00:24.089 --> 00:00:30.330
为IBM预定我做了很多事情

00:00:27.900 --> 00:00:32.970
我做开发商倡导的事情

00:00:30.330 --> 00:00:35.180
我出来谈论我的事情

00:00:32.970 --> 00:00:41.220
从事Java已有很长时间了

00:00:35.180 --> 00:00:43.140
因为很早以前我就开始工作了

00:00:41.220 --> 00:00:45.390
在开源之类的东西，但

00:00:43.140 --> 00:00:47.820
主要是因为这是Java 

00:00:45.390 --> 00:00:49.860
提倡Java漏洞讨论

00:00:47.820 --> 00:00:54.450
就在您逃离IBM Oracle时

00:00:49.860 --> 00:00:57.690
不管有什么漏洞

00:00:54.450 --> 00:00:58.970
我将带你穿越英国

00:00:57.690 --> 00:01:02.220
会叫羊浸

00:00:58.970 --> 00:01:03.480
我要和你谈谈我

00:01:02.220 --> 00:01:07.230
尽我所能向您展示代码

00:01:03.480 --> 00:01:09.570
但我也要谈一些

00:01:07.230 --> 00:01:10.680
现实的过程和事物

00:01:09.570 --> 00:01:13.440
这样，我们将尝试做

00:01:10.680 --> 00:01:15.180
在45分钟内完成

00:01:13.440 --> 00:01:18.990
我们可能会步履蹒跚

00:01:15.180 --> 00:01:24.570
幻灯片，让我忍受，让我们开始吧

00:01:18.990 --> 00:01:30.330
重要的是一些代码或

00:01:24.570 --> 00:01:33.890
事实加，如果是一线比较就好

00:01:30.330 --> 00:01:38.790
它在浮动小数的东西发生

00:01:33.890 --> 00:01:44.190
它加了一个加号，对吧

00:01:38.790 --> 00:01:47.750
可能回家，这样就可以修复错误

00:01:44.190 --> 00:01:49.979
哦，你看不到红色的肯尼亚

00:01:47.750 --> 00:01:52.979
所以那会很有趣吧

00:01:49.979 --> 00:01:54.870
所以它修复了那是一个真正的

00:01:52.979 --> 00:01:59.490
僵硬并且修复了好朋友的错误

00:01:54.870 --> 00:02:00.690
加倍，有一个模糊的数字

00:01:59.490 --> 00:02:04.710
你看不到，因为我已经

00:02:00.690 --> 00:02:06.869
掩盖它是正确的，我什至不知道

00:02:04.710 --> 00:02:10.920
现在阅读20 2001这个被发现

00:02:06.869 --> 00:02:13.859
有人发现，如果您给Java一个

00:02:10.920 --> 00:02:16.750
带有该数字的字符串，它通过了

00:02:13.859 --> 00:02:19.600
它进入了无限循环

00:02:16.750 --> 00:02:22.030
它消耗了您的CPU，它就消失了

00:02:19.600 --> 00:02:24.060
然后我们又去了，这是

00:02:22.030 --> 00:02:28.360
报告在2001年，只是坐在周围

00:02:24.060 --> 00:02:33.460
没有人考虑得很好

00:02:28.360 --> 00:02:36.790
但是那不是真的

00:02:33.460 --> 00:02:42.340
无关紧要什么人什么

00:02:36.790 --> 00:02:44.170
发生了，这又被发现了，它

00:02:42.340 --> 00:02:47.680
被攻击时习惯

00:02:44.170 --> 00:02:51.100
向量，因为如果您有代码

00:02:47.680 --> 00:02:52.810
需要加倍，你知道这是一个

00:02:51.100 --> 00:02:55.540
字符串，你还没有这个东西

00:02:52.810 --> 00:02:59.020
修复然后被您暂停

00:02:55.540 --> 00:03:01.380
线程锁定的Java代码，因为它

00:02:59.020 --> 00:03:05.530
向右急转弯， 

00:03:01.380 --> 00:03:08.590
基本上每个人都对你有影响

00:03:05.530 --> 00:03:11.500
可能听说过这一切

00:03:08.590 --> 00:03:13.740
进入一个紧密的旋转，这是

00:03:11.500 --> 00:03:18.160
琐碎，因为您要做的就是

00:03:13.740 --> 00:03:20.700
没有内容类型，甚至没有JSON 

00:03:18.160 --> 00:03:24.519
无论它传递给应用程序

00:03:20.700 --> 00:03:27.610
从Web服务器上完成

00:03:24.519 --> 00:03:29.970
 Java代码启动正确，因此

00:03:27.610 --> 00:03:34.120
那里真的很简单

00:03:29.970 --> 00:03:36.540
拒绝服务是正确的

00:03:34.120 --> 00:03:40.630
这个行业的巨额资金

00:03:36.540 --> 00:03:43.330
之所以如此痛苦是因为

00:03:40.630 --> 00:03:45.549
利用起来非常容易，我们有了

00:03:43.330 --> 00:03:48.760
让孩子们去哦，我要做的就是

00:03:45.549 --> 00:03:50.230
转到您的网站并输入此号码

00:03:48.760 --> 00:03:53.140
在正确位置的标题中

00:03:50.230 --> 00:03:55.239
您的网站出现故障，您知道

00:03:53.140 --> 00:04:01.150
这种情况经常发生，人们只是做了

00:03:55.239 --> 00:04:02.350
好好玩一个角色吧

00:04:01.150 --> 00:04:05.780
太

00:04:02.350 --> 00:04:07.400
对，我向你展示的很多东西是

00:04:05.780 --> 00:04:10.330
所有关于这个恐怖故事的

00:04:07.400 --> 00:04:14.270
那就是我们代码中的所有内容， 

00:04:10.330 --> 00:04:15.800
您可能会如何考虑Java 

00:04:14.270 --> 00:04:19.400
您会在Vonda Briggs听到关于它们的信息

00:04:15.800 --> 00:04:20.870
按，你去那是一件大事，但是

00:04:19.400 --> 00:04:22.670
实际上漏洞并不大

00:04:20.870 --> 00:04:23.990
漏洞是小事

00:04:22.670 --> 00:04:28.010
这是它们如何组合在一起的方式

00:04:23.990 --> 00:04:34.160
他们被剥削了，好吧，我们走吧

00:04:28.010 --> 00:04:36.680
首先通过什么漏洞

00:04:34.160 --> 00:04:37.970
你可以看的东西对不起我

00:04:36.680 --> 00:04:39.620
读出来，所以我说

00:04:37.970 --> 00:04:42.860
漏洞是一个可以

00:04:39.620 --> 00:04:44.870
被攻击者利用是一个错误

00:04:42.860 --> 00:04:48.500
有意外的行为

00:04:44.870 --> 00:04:51.860
很好地利用了它，但是各种各样

00:04:48.500 --> 00:04:53.780
正确的漏洞利用，因此被拒绝

00:04:51.860 --> 00:04:56.180
只需在您的系统上进行服务

00:04:53.780 --> 00:04:58.790
崩溃有一些驱动你

00:04:56.180 --> 00:05:00.020
驱使您使用大量的内存

00:04:58.790 --> 00:05:02.600
使您做很多事或建立网络

00:05:00.020 --> 00:05:04.550
基本上否认您的服务权利

00:05:02.600 --> 00:05:06.800
有减少您的攻击

00:05:04.550 --> 00:05:08.960
他们进入并改变你的诚信

00:05:06.800 --> 00:05:11.060
他们窃取您运行的数据的数据

00:05:08.960 --> 00:05:13.340
任意代码执行，我将展示

00:05:11.060 --> 00:05:16.460
你在一分钟内有一个

00:05:13.340 --> 00:05:18.440
会让您迟到的漏洞

00:05:16.460 --> 00:05:20.000
提升您的特权，您会得到一些

00:05:18.440 --> 00:05:22.450
您认为安全的代码运行

00:05:20.000 --> 00:05:25.370
因为它在最低限度下运行

00:05:22.450 --> 00:05:26.960
用户ID，并且存在一个漏洞

00:05:25.370 --> 00:05:29.720
表示他们可以继续运行

00:05:26.960 --> 00:05:31.550
路线好这些都是这些

00:05:29.720 --> 00:05:34.610
这就是您所说的漏洞利用

00:05:31.550 --> 00:05:38.060
这些漏洞利用是通过利用

00:05:34.610 --> 00:05:41.150
漏洞，因此您可能不在乎

00:05:38.060 --> 00:05:43.790
对，你为什么要关心这个

00:05:41.150 --> 00:05:46.100
也许曾几何时

00:05:43.790 --> 00:05:51.670
也许没有人没有坏人

00:05:46.100 --> 00:05:54.170
在那里，但现在不正确

00:05:51.670 --> 00:05:56.480
去年我谈论过的Java 

00:05:54.170 --> 00:05:59.210
网络犯罪没有人来过

00:05:56.480 --> 00:06:00.880
到去年有人在这里，是的，所以

00:05:59.210 --> 00:06:04.400
您对幻灯片很简单，但不多

00:06:00.880 --> 00:06:08.690
关键是我们对

00:06:04.400 --> 00:06:10.130
坏家伙一直是不正确的，我们已经

00:06:08.690 --> 00:06:12.020
一直以为有

00:06:10.130 --> 00:06:14.120
卧室里有个家伙

00:06:12.020 --> 00:06:15.360
这是18岁的年轻人和16岁的年轻人

00:06:14.120 --> 00:06:17.250
他只是在黑客

00:06:15.360 --> 00:06:20.430
是的，但现在不再那样了

00:06:17.250 --> 00:06:22.860
现在就成为最大的

00:06:20.430 --> 00:06:27.780
世界上日益增长的犯罪活动

00:06:22.860 --> 00:06:30.990
对，所以你看不到所以我

00:06:27.780 --> 00:06:32.610
会在2016年网络犯罪中将它们读出来

00:06:30.990 --> 00:06:35.580
估计值四百

00:06:32.610 --> 00:06:38.159
四百五十亿美元是

00:06:35.580 --> 00:06:41.219
今年的去年这个数字将

00:06:38.159 --> 00:06:42.650
上升本来会上升20％ 

00:06:41.219 --> 00:06:45.479
 2013年

00:06:42.650 --> 00:06:49.680
整个非法毒品贸易是

00:06:45.479 --> 00:06:52.789
全部只值4350亿美元

00:06:49.680 --> 00:06:55.889
是的，所以网络犯罪行业是

00:06:52.789 --> 00:06:57.930
脱罪犯赚更多钱

00:06:55.889 --> 00:07:01.919
而不是毒品

00:06:57.930 --> 00:07:04.620
对他们来说风险较小

00:07:01.919 --> 00:07:06.689
增长最快

00:07:04.620 --> 00:07:09.210
他们估计到2019年底

00:07:06.689 --> 00:07:10.860
可能是两千亿

00:07:09.210 --> 00:07:12.870
美元，没有迹象

00:07:10.860 --> 00:07:15.360
停下来，您可能已经在

00:07:12.870 --> 00:07:17.340
按很多发生的事情，我们

00:07:15.360 --> 00:07:18.810
我们在最后预测的那种期望

00:07:17.340 --> 00:07:22.050
一年一直只是悲伤地看到他们

00:07:18.810 --> 00:07:23.819
实际上发生的正确，这就是为什么

00:07:22.050 --> 00:07:25.319
这对于开始获得您的重要

00:07:23.819 --> 00:07:27.240
绕过哪些Java漏洞

00:07:25.319 --> 00:07:29.430
普遍存在漏洞

00:07:27.240 --> 00:07:33.990
开始考虑如何管理它们

00:07:29.430 --> 00:07:35.190
以及您的行为如何正确改变

00:07:33.990 --> 00:07:40.050
让我们再做一个让我们再做一个

00:07:35.190 --> 00:07:41.699
例子我有一个目录，看起来

00:07:40.050 --> 00:07:45.779
很好，这不是红色，我有一个目录

00:07:41.699 --> 00:07:48.089
使用线轴foo空格键，我想

00:07:45.779 --> 00:07:53.330
引用它的URL，以便我们和我

00:07:48.089 --> 00:07:57.719
放一些你正在编码的百分比25 

00:07:53.330 --> 00:07:59.699
我可以从中创建一个URL URL 

00:07:57.719 --> 00:08:02.069
可以从中创建文件，因为我可以

00:07:59.699 --> 00:08:04.139
将网址转换为文件，我可以

00:08:02.069 --> 00:08:05.939
打印出我可以打印出路径或

00:08:04.139 --> 00:08:08.969
可以打印出它是否存在

00:08:05.939 --> 00:08:12.270
走，我可以跑哦

00:08:08.969 --> 00:08:15.120
一个奇怪的用户假脱机foo百分比

00:08:12.270 --> 00:08:17.310
二十巴不存在不是因为

00:08:15.120 --> 00:08:21.689
我忘了解码它是在您的URL中

00:08:17.310 --> 00:08:26.279
您是您的URL编码，所以我们进行更改

00:08:21.689 --> 00:08:29.450
所以我使用了不同的方法

00:08:26.279 --> 00:08:33.950
 URI，然后获取路径

00:08:29.450 --> 00:08:35.750
我把它们打印出来好了，现在我得到了

00:08:33.950 --> 00:08:37.520
正确的路线

00:08:35.750 --> 00:08:42.160
百分比是20不见了，当然

00:08:37.520 --> 00:08:47.060
这是真的，它确实存在，所以

00:08:42.160 --> 00:08:50.090
如果有人创建路径会发生什么

00:08:47.060 --> 00:08:53.020
对于我的系统中有20％的百分比

00:08:50.090 --> 00:08:55.310
对的

00:08:53.020 --> 00:08:57.320
所以我的代码（如果有人这样做的话） 

00:08:55.310 --> 00:09:02.360
在我已经注意到我的代码的掩护下

00:08:57.320 --> 00:09:03.880
会说是的，它存在对你

00:09:02.360 --> 00:09:06.320
可能不认为这真的很重要

00:09:03.880 --> 00:09:10.250
问题是在Windows上

00:09:06.320 --> 00:09:14.270
特别是任何人都可以创造顶级

00:09:10.250 --> 00:09:16.400
正确的项目水平，这样我就可以

00:09:14.270 --> 00:09:18.530
有一些代码就是漏洞

00:09:16.400 --> 00:09:23.390
在这种情况下我正在寻找

00:09:18.530 --> 00:09:25.520
我正在寻找的不存在的东西

00:09:23.390 --> 00:09:28.130
不正确地，但如果有人

00:09:25.520 --> 00:09:30.050
发现代码中可以创建该代码

00:09:28.130 --> 00:09:34.550
他们地质学家在其中爬行

00:09:30.050 --> 00:09:36.410
好吧好吧也许这没什么大不了的

00:09:34.550 --> 00:09:39.170
如果它稍微复杂一点就会发生

00:09:36.410 --> 00:09:40.670
如果是这样的话会发生什么

00:09:39.170 --> 00:09:44.330
如果您的扩展路径在您的

00:09:40.670 --> 00:09:48.020
 JVM具有不存在的路径，并且它

00:09:44.330 --> 00:09:49.790
输入的百分比错误20 

00:09:48.020 --> 00:09:52.340
是的，那是你看到空间的一部分

00:09:49.790 --> 00:09:54.080
 Windows好吧，您可能永远不会吧

00:09:52.340 --> 00:09:57.680
可能永远不会注意到那是

00:09:54.080 --> 00:09:59.750
您的代码中定义不正确，因此您的

00:09:57.680 --> 00:10:01.490
 JVM的配置可能有

00:09:59.750 --> 00:10:03.860
在那里，但是因为它没有

00:10:01.490 --> 00:10:05.000
存在，它永远不会被发现

00:10:03.860 --> 00:10:07.430
正在搜寻您永远不会找到的东西

00:10:05.000 --> 00:10:12.410
注意到你不知道那里

00:10:07.430 --> 00:10:14.690
是不正确的事，那

00:10:12.410 --> 00:10:20.560
发生了什么，但然后假设

00:10:14.690 --> 00:10:23.690
有人立即创建那条路

00:10:20.560 --> 00:10:26.030
您的搜索或算法将

00:10:23.690 --> 00:10:28.220
查找不应该存在的目录

00:10:26.030 --> 00:10:30.950
确实存在，然后可以找到东西

00:10:28.220 --> 00:10:32.930
所以人们会插入dll的

00:10:30.950 --> 00:10:35.960
这就是我可以让您的代码运行的方式

00:10:32.930 --> 00:10:38.000
我的代码正确，我不必破解您的

00:10:35.960 --> 00:10:39.980
我只需要寻找的代码

00:10:38.000 --> 00:10:42.470
您所在的特定漏洞

00:10:39.980 --> 00:10:48.560
无法正确解码文件路径锁定

00:10:42.470 --> 00:10:51.560
再次，现在一行实际上是

00:10:48.560 --> 00:10:53.140
不太清楚发生了什么，但这是一种

00:10:51.560 --> 00:10:55.790
我们在JVM中修复的漏洞

00:10:53.140 --> 00:11:00.410
对，因为我们有漏洞

00:10:55.790 --> 00:11:02.030
这样，我想让你

00:11:00.410 --> 00:11:04.630
开始意识到的是漏洞

00:11:02.030 --> 00:11:08.870
几乎总是很简单，它们很小

00:11:04.630 --> 00:11:11.780
正确的错误没有大的

00:11:08.870 --> 00:11:13.550
爆炸了你不会的大事

00:11:11.780 --> 00:11:15.460
看一段代码，去吧，那是一个

00:11:13.550 --> 00:11:18.290
安全漏洞可以吗

00:11:15.460 --> 00:11:23.450
总是在一起

00:11:18.290 --> 00:11:27.860
使它成为可以利用的东西

00:11:23.450 --> 00:11:33.080
让我谈论你，你看不到

00:11:27.860 --> 00:11:35.450
好吧，所以你不去你不是

00:11:33.080 --> 00:11:36.770
看着这个，因为我刚才说

00:11:35.450 --> 00:11:39.470
这不是代码中的一点点

00:11:36.770 --> 00:11:41.000
考虑一下，你可能

00:11:39.470 --> 00:11:43.520
写这些东西，不知道

00:11:41.000 --> 00:11:45.140
不知道这些坏家伙是

00:11:43.520 --> 00:11:48.710
在那里，他们试图找到

00:11:45.140 --> 00:11:50.810
进来，他们总是喜欢

00:11:48.710 --> 00:11:52.370
中层高管，你认识人

00:11:50.810 --> 00:11:53.900
害怕别人的人

00:11:52.370 --> 00:11:57.910
有很多的社会工程方法

00:11:53.900 --> 00:12:09.650
进入，但他们喜欢以我们为目标

00:11:57.910 --> 00:12:12.460
一次又一次地我不这样做的原因

00:12:09.650 --> 00:12:16.310
知道我要对不起

00:12:12.460 --> 00:12:18.560
不要等没有太多

00:12:16.310 --> 00:12:20.810
因此开发人员为什么会成为您的目标

00:12:18.560 --> 00:12:22.370
有你在社交

00:12:20.810 --> 00:12:24.290
工程人员正在努力进入

00:12:22.370 --> 00:12:27.410
您的帐户让您做事

00:12:24.290 --> 00:12:29.660
因为你知道你的代码

00:12:27.410 --> 00:12:32.000
编写您通常运行的代码

00:12:29.660 --> 00:12:34.000
在您的办公桌上以较高的特权

00:12:32.000 --> 00:12:36.250
具有root用户访问权限和类似的东西

00:12:34.000 --> 00:12:40.430
谢谢

00:12:36.250 --> 00:12:43.760
您相信最神奇的事情之一

00:12:40.430 --> 00:12:46.310
是我们在其中的开源社区

00:12:43.760 --> 00:12:48.020
捐赠东西给其他人

00:12:46.310 --> 00:12:51.560
喜欢问的人哦，非常感谢你

00:12:48.020 --> 00:12:53.480
我会使用该权利，我敢打赌，如果

00:12:51.560 --> 00:12:56.450
您对以下用途有任何政策

00:12:53.480 --> 00:12:58.280
开源的东西

00:12:56.450 --> 00:13:00.050
关于不会的许可证

00:12:58.280 --> 00:13:01.220
天意不会是什么

00:13:00.050 --> 00:13:04.300
他们在做扫描他们的代码

00:13:01.220 --> 00:13:07.070
我们不这样认为的漏洞

00:13:04.300 --> 00:13:10.490
是的，所以您可以想象这些

00:13:07.070 --> 00:13:12.080
伙计们可以在伪造中获得改变

00:13:10.490 --> 00:13:14.090
某些漏洞，或者他们可以

00:13:12.080 --> 00:13:15.500
通过舔开源找出他们

00:13:14.090 --> 00:13:18.140
可以看一下开源项目，他们

00:13:15.500 --> 00:13:20.900
找到一个漏洞，然后他们去哦

00:13:18.140 --> 00:13:23.810
谁在用这个好我会针对那些

00:13:20.900 --> 00:13:25.910
对，所以总的来说，我们会做这些事情

00:13:23.810 --> 00:13:30.110
使用代码，使用我们不认为的工具

00:13:25.910 --> 00:13:32.090
关于它的权利，所以你知道我说的

00:13:30.110 --> 00:13:34.070
坏人掠夺弱者和

00:13:32.090 --> 00:13:37.010
一无所知

00:13:34.070 --> 00:13:40.090
那就是我们，这就是它所说的

00:13:37.010 --> 00:13:42.050
我们，所以如果你不认为这是真的

00:13:40.090 --> 00:13:45.500
你们当中有多少人曾经做过这些

00:13:42.050 --> 00:13:48.140
使Java正确运行的各种方法

00:13:45.500 --> 00:13:50.990
接受所有搜索几个HTTP是的

00:13:48.140 --> 00:13:55.070
不知道如何信任任何SSL电路

00:13:50.990 --> 00:13:57.470
是的证书非常信任

00:13:55.070 --> 00:14:01.610
你想去的经理- 

00:13:57.470 --> 00:14:04.790
 gugu github并进行非常搜索

00:14:01.610 --> 00:14:09.290
信托经理，您将获得数千

00:14:04.790 --> 00:14:09.710
碰到这个人之一

00:14:09.290 --> 00:14:13.100
这些

00:14:09.710 --> 00:14:16.370
这是一个x.509信任管理器

00:14:13.100 --> 00:14:18.290
有多少人说我要去

00:14:16.370 --> 00:14:20.420
写我自己的，尽管我应该

00:14:18.290 --> 00:14:22.490
有不应该把它变成红色的是

00:14:20.420 --> 00:14:25.700
客户端受信任的返回true是服务器

00:14:22.490 --> 00:14:27.650
可信赖的回报真实的权利，我会告诉你

00:14:25.700 --> 00:14:29.540
你可以去谷歌github 

00:14:27.650 --> 00:14:34.190
为此，您将找到示例

00:14:29.540 --> 00:14:36.290
编入产品中

00:14:34.190 --> 00:14:38.360
人们可以找到的存储库

00:14:36.290 --> 00:14:43.730
你会发现他们非常非常

00:14:38.360 --> 00:14:45.140
相信信任的经理正确的人

00:14:43.730 --> 00:14:48.770
那然后你说这是一个功能

00:14:45.140 --> 00:14:51.490
对您有帮助，所以现在我们可以解决

00:14:48.770 --> 00:14:54.220
不仅列出漏洞错误

00:14:51.490 --> 00:14:57.680
但它们也有很好的功能

00:14:54.220 --> 00:15:00.230
您添加的正确的东西使您的

00:14:57.680 --> 00:15:04.130
生活更轻松就能轻松得到

00:15:00.230 --> 00:15:05.990
被去剥削的人剥削了

00:15:04.130 --> 00:15:08.050
非常非常，我最后想如果

00:15:05.990 --> 00:15:11.649
做到这一点，我会告诉你其中之一

00:15:08.050 --> 00:15:13.989
对，所以重点是他们

00:15:11.649 --> 00:15:18.189
你甚至不知道的任何地方

00:15:13.989 --> 00:15:19.899
您添加的权利正确，人们

00:15:18.189 --> 00:15:21.610
外面有人付钱给

00:15:19.899 --> 00:15:23.079
发现这些真的是研究人员白

00:15:21.610 --> 00:15:25.720
帽子和黑帽子的家伙们出去

00:15:23.079 --> 00:15:28.720
寻找这个，当他们找到他们

00:15:25.720 --> 00:15:31.029
他们有一个协议，但有一些

00:15:28.720 --> 00:15:33.879
点他们将被发表，然后

00:15:31.029 --> 00:15:36.910
时钟开始在右边滴答

00:15:33.879 --> 00:15:38.889
这一点使你变得更加脆弱

00:15:36.910 --> 00:15:42.279
因为现在是知识，不是，不是

00:15:38.889 --> 00:15:44.739
就在那里，所以让我

00:15:42.279 --> 00:15:45.429
谈论仅仅为了得到这个的过程

00:15:44.739 --> 00:15:46.720
出路

00:15:45.429 --> 00:15:49.569
所以我需要和你谈谈我们

00:15:46.720 --> 00:15:50.829
管理漏洞，因为它是

00:15:49.569 --> 00:15:55.089
您需要的信息

00:15:50.829 --> 00:15:56.529
您的头部常见漏洞和

00:15:55.089 --> 00:16:00.759
暴露CVE 

00:15:56.529 --> 00:16:02.499
那是那个东西的名词

00:16:00.759 --> 00:16:06.639
跟踪漏洞发生的时间

00:16:02.499 --> 00:16:09.339
由在那里报告的人报告

00:16:06.639 --> 00:16:11.769
将是CDE条目，就是

00:16:09.339 --> 00:16:14.350
国际社会，所以

00:16:11.769 --> 00:16:15.850
有一个网站si VA doc我的两个

00:16:14.350 --> 00:16:17.649
狗不是我认为的唯一的狗

00:16:15.850 --> 00:16:18.730
还有一个，但是有

00:16:17.649 --> 00:16:22.089
你要去寻找

00:16:18.730 --> 00:16:23.709
特定事物中的漏洞

00:16:22.089 --> 00:16:25.809
因为他们注册正确，所以你可以

00:16:23.709 --> 00:16:27.579
去找到所有的Java吧

00:16:25.809 --> 00:16:30.160
事情是它允许我们谈论

00:16:27.579 --> 00:16:32.410
同样的漏洞，所以你知道你

00:16:30.160 --> 00:16:34.059
可以看到有东西发生了， 

00:16:32.410 --> 00:16:36.160
媒体在谈论它或有人

00:16:34.059 --> 00:16:37.569
说这是固定在我的东西

00:16:36.160 --> 00:16:39.939
产品有什么问题

00:16:37.569 --> 00:16:44.049
它是固定的，因此您具有该唯一标签

00:16:39.939 --> 00:16:47.110
对，所以如果你去我的网站

00:16:44.049 --> 00:16:51.490
今天早上更新，您可以搜索

00:16:47.110 --> 00:16:53.799
所以我也说照片不一样

00:16:51.490 --> 00:16:56.110
图片不是现代的关键字

00:16:53.799 --> 00:16:57.490
等于Java我做了数字，所以我去了

00:16:56.110 --> 00:17:03.220
并说有多少个CVS 

00:16:57.490 --> 00:17:08.110
系统1662好的，如果您做的更具体

00:17:03.220 --> 00:17:10.409
像征兆一样搜索，但有光束

00:17:08.110 --> 00:17:10.409
贝壳

00:17:10.569 --> 00:17:15.089
是的，所以你可以看到你和其中之一

00:17:13.209 --> 00:17:18.640
作为XML，我想当我进行序列化时

00:17:15.089 --> 00:17:23.679
是的，所以你可以去找bug 

00:17:18.640 --> 00:17:25.269
查找CVE描述，如果您查看

00:17:23.679 --> 00:17:29.470
他们会说更多的细节

00:17:25.269 --> 00:17:31.269
像这样的右梁壳才赢

00:17:29.470 --> 00:17:33.130
包括使用Java的classpath 

00:17:31.269 --> 00:17:35.490
序列化Xtreme允许远程

00:17:33.130 --> 00:17:40.899
攻击者执行任意代码

00:17:35.490 --> 00:17:42.250
对，那只是一堆，对， 

00:17:40.899 --> 00:17:44.230
那就是你说的那种话

00:17:42.250 --> 00:17:48.039
你有什么目标

00:17:44.230 --> 00:17:49.960
等等，如果您更详细地看任何

00:17:48.039 --> 00:17:51.940
其中之一就是您要去的

00:17:49.960 --> 00:17:53.110
发现我认为我们实际上并未完成

00:17:51.940 --> 00:17:55.899
这个，但是你会发现未指定的

00:17:53.110 --> 00:18:02.769
漏洞对，因为我们不是

00:17:55.899 --> 00:18:05.440
会告诉你细节的权利

00:18:02.769 --> 00:18:11.350
原因还可以，抱歉

00:18:05.440 --> 00:18:14.080
哦，好的，原因是告诉

00:18:11.350 --> 00:18:16.659
关于一个细节的世界

00:18:14.080 --> 00:18:18.240
漏洞与您发布的内容相同

00:18:16.659 --> 00:18:21.789
在您的信用卡密码上

00:18:18.240 --> 00:18:23.440
对，那是多么愚蠢，因为

00:18:21.789 --> 00:18:25.450
告诉别人，就像我发现的一样

00:18:23.440 --> 00:18:28.600
一个漏洞，没有解决办法

00:18:25.450 --> 00:18:30.309
你将要利用它，我的意思是

00:18:28.600 --> 00:18:33.880
如果有修复，您仍然会得到

00:18:30.309 --> 00:18:35.799
它适用，但是那是很不好的，所以

00:18:33.880 --> 00:18:37.360
这就是为什么您找不到任何东西的原因

00:18:35.799 --> 00:18:40.510
有关详细程度的信息

00:18:37.360 --> 00:18:42.850
好吧，我们要做的就是得分

00:18:40.510 --> 00:18:46.360
他们，还有一大堆

00:18:42.850 --> 00:18:49.120
给他们评分的流程

00:18:46.360 --> 00:18:51.010
其他其他goop公司提供的

00:18:49.120 --> 00:18:52.330
他们，但归根结底，他们所有人

00:18:51.010 --> 00:18:56.230
在一起，我们有一个共同点

00:18:52.330 --> 00:19:00.450
评分系统，它基于影响

00:18:56.230 --> 00:19:03.809
以及实际上有多困难

00:19:00.450 --> 00:19:06.519
攻击之类的东西，所以你得到

00:19:03.809 --> 00:19:09.250
这些词攻击向量

00:19:06.519 --> 00:19:11.620
所需的复杂性特权等

00:19:09.250 --> 00:19:13.750
人们评估解决方案

00:19:11.620 --> 00:19:15.279
他们没有假设的脆弱性

00:19:13.750 --> 00:19:18.820
你知道你在做什么，那

00:19:15.279 --> 00:19:20.529
你表现得很对，所以如果你

00:19:18.820 --> 00:19:22.010
当您在根目录下运行所有​​系统

00:19:20.529 --> 00:19:24.470
那不应该

00:19:22.010 --> 00:19:25.880
那是你的问题，对了，我们要

00:19:24.470 --> 00:19:29.200
假设你被送到布莱尔

00:19:25.880 --> 00:19:31.250
无论如何你如何执行事情

00:19:29.200 --> 00:19:34.490
你可以看看它，你可以进入

00:19:31.250 --> 00:19:36.290
这些然后他们从分数中得出

00:19:34.490 --> 00:19:38.360
只是它是否很重要

00:19:36.290 --> 00:19:40.130
因为在一天结束时， 

00:19:38.360 --> 00:19:41.690
投入资源来解决这些问题

00:19:40.130 --> 00:19:43.430
我想与你交流的事情

00:19:41.690 --> 00:19:47.480
关于这是否是一个重要的问题

00:19:43.430 --> 00:19:51.020
对那些不重要的问题

00:19:47.480 --> 00:19:52.700
事情可能会随着时间而改变

00:19:51.020 --> 00:19:55.400
评估的观点

00:19:52.700 --> 00:19:56.630
漏洞可能会改变

00:19:55.400 --> 00:19:58.370
信息可能会暴露出来

00:19:56.630 --> 00:20:03.520
这样可能会使你长大或

00:19:58.370 --> 00:20:07.010
降低，然后我们与您沟通

00:20:03.520 --> 00:20:08.750
我做过Oracle的CPU咨询

00:20:07.010 --> 00:20:09.520
您总能找到的各种东西

00:20:08.750 --> 00:20:11.630
这些东西

00:20:09.520 --> 00:20:13.790
我们一直在交流，我们

00:20:11.630 --> 00:20:15.530
交流有关哪些CVE 

00:20:13.790 --> 00:20:18.320
以及他们正在修复哪些产品

00:20:15.530 --> 00:20:19.910
而且我知道和一些评估

00:20:18.320 --> 00:20:23.590
关于关键程度，仅此而已

00:20:19.910 --> 00:20:25.520
如果你找到一个，你现在就会得到

00:20:23.590 --> 00:20:31.130
我们要求您报告

00:20:25.520 --> 00:20:33.380
负责任地可以不管你是否

00:20:31.130 --> 00:20:35.650
可以向Oracle报告给IBM报告

00:20:33.380 --> 00:20:38.600
这些是链接，您可以使用该链接

00:20:35.650 --> 00:20:40.520
从滑盖访问它们时

00:20:38.600 --> 00:20:42.410
他们已经出版，但有一个

00:20:40.520 --> 00:20:44.870
合理地报告他们的权利

00:20:42.410 --> 00:20:45.770
现在的事情是，如果您认为自己找到了

00:20:44.870 --> 00:20:49.040
一个报告

00:20:45.770 --> 00:20:52.550
请不要为此烦恼或大喊大叫

00:20:49.040 --> 00:20:54.080
或发布详细信息，我发现了这个

00:20:52.550 --> 00:20:56.510
编写代码，这并不令人惊讶

00:20:54.080 --> 00:20:59.720
请不要那样做，不要担心

00:20:56.510 --> 00:21:00.920
关于它是你的想法还是

00:20:59.720 --> 00:21:04.220
也许不是那么重要，如果

00:21:00.920 --> 00:21:06.320
您认为存在漏洞

00:21:04.220 --> 00:21:08.150
可以执行远程代码或

00:21:06.320 --> 00:21:10.580
访问我们在外面知道的东西

00:21:08.150 --> 00:21:12.740
特权，然后报告它就知道了

00:21:10.580 --> 00:21:13.610
不要把它卖给我的坏人

00:21:12.740 --> 00:21:15.320
不知道为什么我把它放在那

00:21:13.610 --> 00:21:17.300
因为你不会那样做

00:21:15.320 --> 00:21:20.440
如果你是我，我无法阻止你

00:21:17.300 --> 00:21:22.640
你说无论如何，但我们走了

00:21:20.440 --> 00:21:25.220
然后从

00:21:22.640 --> 00:21:28.640
修理好这些东西，你认识的人

00:21:25.220 --> 00:21:31.190
我们付出了很多努力来修复问题

00:21:28.640 --> 00:21:34.670
并修复漏洞

00:21:31.190 --> 00:21:35.930
批判性将决定如何授权

00:21:34.670 --> 00:21:38.240
关键也是

00:21:35.930 --> 00:21:39.560
也许有人出去了

00:21:38.240 --> 00:21:42.080
有人威胁说他们要去

00:21:39.560 --> 00:21:45.290
报告它，除非它得到修复

00:21:42.080 --> 00:21:47.240
有一些像那样的人，但是

00:21:45.290 --> 00:21:50.210
否则我们会尽力做到最好

00:21:47.240 --> 00:21:53.330
偶尔你会得到

00:21:50.210 --> 00:21:56.150
频段更新以及安全修复程序

00:21:53.330 --> 00:21:57.890
意味着里面有大东西

00:21:56.150 --> 00:22:04.040
否则他就进入下一个

00:21:57.890 --> 00:22:06.140
定期定期发布，现在可以了

00:22:04.040 --> 00:22:08.960
奇怪的是我们给你

00:22:06.140 --> 00:22:10.460
这些分数供您检查

00:22:08.960 --> 00:22:13.340
这对您来说意味着一切，我们告诉您

00:22:10.460 --> 00:22:15.020
理论上我可以做什么

00:22:13.340 --> 00:22:16.550
做这样的声明，如果

00:22:15.020 --> 00:22:19.640
与您无关，您将不会

00:22:16.550 --> 00:22:21.590
应用它，我不使用杰克的B 

00:22:19.640 --> 00:22:23.540
实例，所以我不需要把

00:22:21.590 --> 00:22:28.610
修复，因为它们仅用于杰克的

00:22:23.540 --> 00:22:30.130
 P好吧，我遇到的麻烦是我

00:22:28.610 --> 00:22:34.100
不会再向您显示红色屏幕

00:22:30.130 --> 00:22:36.740
好吧，这是荒谬的，如果你

00:22:34.100 --> 00:22:40.580
不知道你没有什么代码

00:22:36.740 --> 00:22:41.930
知道你是否容易受到伤害，所以如果

00:22:40.580 --> 00:22:45.370
你不知道你的依赖

00:22:41.930 --> 00:22:47.990
你不知道自己是否脆弱

00:22:45.370 --> 00:22:50.630
事情是我们不知道我们

00:22:47.990 --> 00:22:52.130
依赖是你可能不是你的

00:22:50.630 --> 00:22:54.680
您正在建立顶级依赖

00:22:52.130 --> 00:22:56.570
专家或随便你怎么回事ABC 

00:22:54.680 --> 00:22:59.020
但是他们也有依赖关系

00:22:56.570 --> 00:23:02.240
有依赖性，人们不检查

00:22:59.020 --> 00:23:04.190
对，所以你必须做的一件事

00:23:02.240 --> 00:23:06.350
开始做的是养成

00:23:04.190 --> 00:23:07.490
去我的依赖之一，在那里

00:23:06.350 --> 00:23:09.320
有在那里帮助您的工具

00:23:07.490 --> 00:23:10.730
是可以让我们评估您的工具

00:23:09.320 --> 00:23:13.370
可以去找出一个特定的

00:23:10.730 --> 00:23:15.830
 Maven模块的版本具有

00:23:13.370 --> 00:23:17.930
对的漏洞可能是

00:23:15.830 --> 00:23:20.120
修复它很复杂，但至少

00:23:17.930 --> 00:23:22.250
您会评估它，我们不这样做

00:23:20.120 --> 00:23:24.320
我们就是那个群体，我们倾向于

00:23:22.250 --> 00:23:25.790
插入并放入下一个，然后执行

00:23:24.320 --> 00:23:29.120
所以我们不知道我的尺骨

00:23:25.790 --> 00:23:32.390
能力还可以，所以

00:23:29.120 --> 00:23:34.070
过程让我们谈一点

00:23:32.390 --> 00:23:36.050
这些东西如何在袭击中

00:23:34.070 --> 00:23:37.370
向量是如何做的，人们如何得到的

00:23:36.050 --> 00:23:42.890
你身上的漏洞怎么办

00:23:37.370 --> 00:23:47.470
他们得到了如此不受信任的代码

00:23:42.890 --> 00:23:47.470
通常是两个之一

00:23:48.299 --> 00:23:54.370
这是找到你有的地方

00:23:51.519 --> 00:23:55.330
不好的代码，我可以冷却

00:23:54.370 --> 00:23:56.799
他们

00:23:55.330 --> 00:23:58.389
您可能会感到惊讶

00:23:56.799 --> 00:24:00.580
在您没有的类路径上编码

00:23:58.389 --> 00:24:02.649
知道你有，但是作为一个漏洞

00:24:00.580 --> 00:24:05.139
然后我找到一种方法

00:24:02.649 --> 00:24:07.720
调用该代码，该代码可能会做

00:24:05.139 --> 00:24:10.899
诸如运行时点之类的坏东西

00:24:07.720 --> 00:24:14.710
或我可能会知道的东西

00:24:10.899 --> 00:24:15.850
运行使您可以运行我的代码的代码或

00:24:14.710 --> 00:24:18.370
我可能会找到您已经使用的代码

00:24:15.850 --> 00:24:21.909
就像我说的那样正确地运行

00:24:18.370 --> 00:24:23.500
嵌套为您提供我可能只需要的代码

00:24:21.909 --> 00:24:25.899
给人物一个让你的方式

00:24:23.500 --> 00:24:29.710
应用程序运行您已执行的代码

00:24:25.899 --> 00:24:31.659
已经得到了，正如我们所说的那样

00:24:29.710 --> 00:24:33.669
开始这不是关于

00:24:31.659 --> 00:24:36.279
除了拒绝服务外

00:24:33.669 --> 00:24:37.629
而且你知道你做不到

00:24:36.279 --> 00:24:42.549
我知道安全不会阻止你

00:24:37.629 --> 00:24:45.370
旋转CPU，有插件

00:24:42.549 --> 00:24:47.049
网络开始，当然

00:24:45.370 --> 00:24:48.850
全世界最大的事情是

00:24:47.049 --> 00:24:50.320
担心你会产生

00:24:48.850 --> 00:24:54.159
 Java的声誉

00:24:50.320 --> 00:24:58.870
环境让我们赢了就是这样

00:24:54.159 --> 00:25:02.200
让我们不要谈论那些不受信任的数据

00:24:58.870 --> 00:25:05.049
那可能是我们最大的

00:25:02.200 --> 00:25:07.960
一切都白热化，那是你在哪里

00:25:05.049 --> 00:25:10.899
接受数据，然后

00:25:07.960 --> 00:25:12.309
解析好吧，它有些不好

00:25:10.899 --> 00:25:15.909
效果，我给你看一个例子

00:25:12.309 --> 00:25:19.090
好的，有很多解析器

00:25:15.909 --> 00:25:21.909
我们使用权利，我们想到停顿

00:25:19.090 --> 00:25:25.720
主要是文字，但实际上有

00:25:21.909 --> 00:25:29.440
图片有字体还有其他

00:25:25.720 --> 00:25:31.240
事物和不受信任的数据

00:25:29.440 --> 00:25:34.360
在不验证数据的情况下读取数据，并且

00:25:31.240 --> 00:25:35.710
它有副作用，所以对于

00:25:34.360 --> 00:25:37.440
如果您要上传图片， 

00:25:35.710 --> 00:25:40.720
你必须服务，上传图片我

00:25:37.440 --> 00:25:43.450
有一个我试图做几个星期

00:25:40.720 --> 00:25:47.620
之前服务器要我上传图片

00:25:43.450 --> 00:25:50.639
我自己，它只说蠕虫

00:25:47.620 --> 00:25:53.940
鸡蛋，我有一个图像是

00:25:50.639 --> 00:25:57.490
大得多，我上传了它， 

00:25:53.940 --> 00:25:59.179
他没有说嘿，那太大了

00:25:57.490 --> 00:26:02.659
就拿了

00:25:59.179 --> 00:26:04.940
是的，所以没什么不好的事

00:26:02.659 --> 00:26:06.589
如果我的上传会是一个漏洞

00:26:04.940 --> 00:26:09.229
比崩溃大的图像

00:26:06.589 --> 00:26:12.889
系统还可以，但更多

00:26:09.229 --> 00:26:18.320
令人兴奋的图像是这个JPEG 

00:26:12.889 --> 00:26:21.619
 2000利用一些代码使您

00:26:18.320 --> 00:26:23.989
不仅上传小猫的图片，还上传

00:26:21.619 --> 00:26:26.089
你可以接受正在进行的解析

00:26:23.989 --> 00:26:28.070
您的图像以某种形式出现

00:26:26.089 --> 00:26:30.379
被转换为内存并作为

00:26:28.070 --> 00:26:32.179
处理代码的一部分

00:26:30.379 --> 00:26:34.339
事情和有人想通了

00:26:32.179 --> 00:26:37.399
是该代码中的缓冲区溢出，并且

00:26:34.339 --> 00:26:38.899
通过拥有正确的形象，他们

00:26:37.399 --> 00:26:42.769
可以让您的代码任意运行

00:26:38.899 --> 00:26:44.509
正确的代码，所以您永远看不到

00:26:42.769 --> 00:26:48.879
在图片上，但是被藏起来了

00:26:44.509 --> 00:26:52.519
那好吗

00:26:48.879 --> 00:26:54.349
所以这就是我给你的

00:26:52.519 --> 00:26:55.849
因为这是有据可查的

00:26:54.349 --> 00:27:01.039
你不会，你会得到这个谁

00:26:55.849 --> 00:27:02.719
这是一秒钟，顶部的方框说

00:27:01.039 --> 00:27:04.899
内容类型，所以这是一种内容类型

00:27:02.719 --> 00:27:06.919
被推送到服务器的头

00:27:04.899 --> 00:27:09.399
好吧，你去拿，然后把

00:27:06.919 --> 00:27:12.799
内容类型，还有一些东西

00:27:09.399 --> 00:27:17.179
这是og NL这是一个脚本

00:27:12.799 --> 00:27:22.309
语言，后端是Apache 

00:27:17.179 --> 00:27:26.029
开始，因此Apache Struts获得了

00:27:22.309 --> 00:27:28.700
有效载荷，它说内容

00:27:26.029 --> 00:27:30.049
类型包含多部分表单数据吗

00:27:28.700 --> 00:27:33.619
不在乎是否可以满足需求

00:27:30.049 --> 00:27:37.940
我发现这些词是然后尝试

00:27:33.619 --> 00:27:41.389
解析它并尝试解析它

00:27:37.940 --> 00:27:44.899
去的不是表格数据，所以

00:27:41.389 --> 00:27:47.419
引发异常的一部分

00:27:44.899 --> 00:27:51.349
过程是建立一个很好的消息， 

00:27:47.419 --> 00:27:55.729
回去，其中一部分结束了

00:27:51.349 --> 00:27:58.429
打电话给Oh Janelle和Oh Janelle 

00:27:55.729 --> 00:28:01.039
了解那是什么，在执行

00:27:58.429 --> 00:28:02.590
它，你可以看到有一个执行卷曲

00:28:01.039 --> 00:28:07.409
本地

00:28:02.590 --> 00:28:07.409
好吧，你知道这是谁吗

00:28:07.770 --> 00:28:13.779
 Equifax没事吧，那件事

00:28:12.250 --> 00:28:18.850
你一直在听关于权利

00:28:13.779 --> 00:28:21.700
是吗，那只是一个

00:28:18.850 --> 00:28:23.289
脆弱，但因为任何人都可以

00:28:21.700 --> 00:28:25.480
之所以这样做，是因为您渴望这样做

00:28:23.289 --> 00:28:27.010
他们知道你想知道的数据

00:28:25.480 --> 00:28:31.419
如果有的话，我可以张贴什么

00:28:27.010 --> 00:28:33.159
任何人都可以获取您的漏洞

00:28:31.419 --> 00:28:39.130
系统做任何事情，因为他们得到了

00:28:33.159 --> 00:28:41.289
完全正确地访问运行时，因此

00:28:39.130 --> 00:28:44.289
另一个是密码学

00:28:41.289 --> 00:28:46.179
发出实际缺陷

00:28:44.289 --> 00:28:48.039
我们可能听说过

00:28:46.179 --> 00:28:51.399
如果有人发现

00:28:48.039 --> 00:28:54.120
加密功能不如预期

00:28:51.399 --> 00:28:56.230
期待，他们发现其中的漏洞， 

00:28:54.120 --> 00:28:57.240
由于某种原因，这些东西都得到了

00:28:56.230 --> 00:29:00.130
可爱的名字

00:28:57.240 --> 00:29:02.399
反之，如果

00:29:00.130 --> 00:29:04.899
实现这只是一个错误

00:29:02.399 --> 00:29:06.730
他们有不同的影响吧

00:29:04.899 --> 00:29:08.169
您将能够找到这些您

00:29:06.730 --> 00:29:12.309
有一个CVA网站，您将能够

00:29:08.169 --> 00:29:14.200
找到这些，您最好得到

00:29:12.309 --> 00:29:19.799
详细信息，但您可以得到一些

00:29:14.200 --> 00:29:24.340
自己的影响力，然后

00:29:19.799 --> 00:29:25.929
只能由

00:29:24.340 --> 00:29:31.210
有权访问您系统的人

00:29:25.929 --> 00:29:33.970
就像你现在一样，他们都是小事

00:29:31.210 --> 00:29:36.279
就像您创建文件一样

00:29:33.970 --> 00:29:37.960
创建一个文件，它有

00:29:36.279 --> 00:29:40.090
不当的权限是打开或

00:29:37.960 --> 00:29:42.279
随便你怎么去

00:29:40.090 --> 00:29:45.760
可以访问我的系统

00:29:42.279 --> 00:29:47.500
否则您可能会像我向您展示的

00:29:45.760 --> 00:29:49.270
从过去开始

00:29:47.500 --> 00:29:51.130
您的路径中不存在某些东西

00:29:49.270 --> 00:29:56.140
有人可以在那插入代码

00:29:51.130 --> 00:29:58.690
现在这些位置通常

00:29:56.140 --> 00:30:00.159
得分低是因为他们假设

00:29:58.690 --> 00:30:02.169
您正在保护系统， 

00:30:00.159 --> 00:30:06.640
他们实际上不能上车是你的

00:30:02.169 --> 00:30:08.350
系统，您可能会认为它说那里

00:30:06.640 --> 00:30:10.980
你不认为自己容易受到伤害

00:30:08.350 --> 00:30:10.980
局部袭击

00:30:11.049 --> 00:30:17.419
那这个人呢

00:30:15.370 --> 00:30:22.549
真的不知道有人得到了

00:30:17.419 --> 00:30:26.600
是的，这就是这美妙的渴望

00:30:22.549 --> 00:30:29.390
没关系，就是本地访问

00:30:26.600 --> 00:30:31.640
远程本地访问您的系统

00:30:29.390 --> 00:30:35.000
对，这真的很糟糕

00:30:31.640 --> 00:30:37.720
对，所以这是在五月当我

00:30:35.000 --> 00:30:40.700
写了这个然后它还在爬

00:30:37.720 --> 00:30:43.040
 250,000台计算机对数据进行加密

00:30:40.700 --> 00:30:46.090
在您的磁盘上以及如何勒索

00:30:43.040 --> 00:30:48.710
要求您赎金，然后您支付

00:30:46.090 --> 00:30:50.900
比特币中的计算机所有者

00:30:48.710 --> 00:30:54.860
无法追踪，因为你不能

00:30:50.900 --> 00:30:56.510
知道这都是匿名所有权

00:30:54.860 --> 00:31:00.440
切在盒子里，但我们读

00:30:56.510 --> 00:31:01.970
所以在英国我们有国民健康

00:31:00.440 --> 00:31:04.160
国民服务其他医院

00:31:01.970 --> 00:31:07.840
已取消操作，因为它们

00:31:04.160 --> 00:31:10.400
在印度遭受打击的所有自动取款机都已关闭

00:31:07.840 --> 00:31:13.120
日产不得不停止所有生产

00:31:10.400 --> 00:31:16.340
雷诺停止生产权

00:31:13.120 --> 00:31:18.380
部分是因为他们有这些非常古老的

00:31:16.340 --> 00:31:19.630
系统，但是你知道哭了什么

00:31:18.380 --> 00:31:22.910
那里好

00:31:19.630 --> 00:31:24.380
真正具有讽刺意味的是

00:31:22.910 --> 00:31:26.059
原来那些做这个的人

00:31:24.380 --> 00:31:27.440
然后在博客上写道

00:31:26.059 --> 00:31:28.669
对于他们来说，成功并不多

00:31:27.440 --> 00:31:31.040
没有得到多少钱

00:31:28.669 --> 00:31:34.280
正如他们期望的那样，所以他们

00:31:31.040 --> 00:31:35.990
我要再走一遍

00:31:34.280 --> 00:31:38.510
意识到访问您的

00:31:35.990 --> 00:31:41.809
服务器，即使您认为它位于

00:31:38.510 --> 00:31:44.510
数据中心也很好，不是

00:31:41.809 --> 00:31:46.549
并非没有可能，如果他们可以使用

00:31:44.510 --> 00:31:48.140
您的台式机和台式机

00:31:46.549 --> 00:31:52.760
一个开发人员，您可能会有更好的访问权限

00:31:48.140 --> 00:31:56.049
对于这些事情，他们做对了，所以

00:31:52.760 --> 00:32:00.080
更多漏洞示例

00:31:56.049 --> 00:32:02.600
序列化有多少人使用

00:32:00.080 --> 00:32:04.299
是的，每个人都使用序列化

00:32:02.600 --> 00:32:06.919
消毒

00:32:04.299 --> 00:32:10.429
有一个叫做小工具紧的概念

00:32:06.919 --> 00:32:12.440
链好，所以这里发生的是

00:32:10.429 --> 00:32:16.210
人们找出您拥有的代码

00:32:12.440 --> 00:32:19.520
然后他们开始建造

00:32:16.210 --> 00:32:21.770
特定的序列化表格，所以如果您

00:32:19.520 --> 00:32:23.780
不要在以下情况下传递您的序列化数据

00:32:21.770 --> 00:32:24.650
它进来了，我看过一些例子

00:32:23.780 --> 00:32:27.380
使用的人

00:32:24.650 --> 00:32:28.580
序列化请参见Java的实现形式

00:32:27.380 --> 00:32:31.400
然后将它们存储在Cookie上

00:32:28.580 --> 00:32:32.960
浏览器，以便他们回来

00:32:31.400 --> 00:32:35.270
他们只是反序列化它

00:32:32.960 --> 00:32:36.800
做错了事，但是你可以

00:32:35.270 --> 00:32:39.860
想像一下，如果您已序列化

00:32:36.800 --> 00:32:43.340
因为如果人们可以建造看到

00:32:39.860 --> 00:32:44.990
各种形式的数据都可以

00:32:43.340 --> 00:32:46.760
在此实现过程中， 

00:32:44.990 --> 00:32:49.280
读取对象很容易

00:32:46.760 --> 00:32:50.570
好吧，这说明了数据中的内容

00:32:49.280 --> 00:32:51.650
你那里有什么东西

00:32:50.570 --> 00:32:52.160
你无法控制的事情

00:32:51.650 --> 00:32:54.170
超过它

00:32:52.160 --> 00:32:57.590
该序列化过程正在读取

00:32:54.170 --> 00:32:59.870
什么字符串，表格说的正确

00:32:57.590 --> 00:33:04.220
而且你有很多人的实例

00:32:59.870 --> 00:33:07.690
精心序列化序列化数据支付

00:33:04.220 --> 00:33:10.010
它有效负载所以有一些

00:33:07.690 --> 00:33:13.250
进行理论过滤

00:33:10.010 --> 00:33:14.660
更好地让它成为

00:33:13.250 --> 00:33:17.030
使您要变白的东西

00:33:14.660 --> 00:33:20.510
接受权利而不是完全接受

00:33:17.030 --> 00:33:20.990
随机码，但我们已经知道

00:33:20.510 --> 00:33:23.530
年份

00:33:20.990 --> 00:33:27.350
然后有一个零散的公地

00:33:23.530 --> 00:33:29.540
使它脱颖而出的漏洞

00:33:27.350 --> 00:33:30.980
对，然后您去修复它，但是作为我

00:33:29.540 --> 00:33:33.590
说关于这个的事情是

00:33:30.980 --> 00:33:36.170
这么多人用不做

00:33:33.590 --> 00:33:38.030
任何允许您发送数据的内容

00:33:36.170 --> 00:33:40.070
它到服务器上，您收到它，然后您

00:33:38.030 --> 00:33:43.820
不要考虑你这样的事实

00:33:40.070 --> 00:33:48.440
可能变得完全虚假文明

00:33:43.820 --> 00:33:52.700
形式正确，否则你可以做事

00:33:48.440 --> 00:33:55.040
像这样更伪造的jdw p 

00:33:52.700 --> 00:33:55.940
 Java调试电线协议的东西你

00:33:55.040 --> 00:33:59.180
当您想连接您的

00:33:55.940 --> 00:34:05.090
调试器已打开，已关闭

00:33:59.180 --> 00:34:05.840
我的意思是他们是某个大型银行的领导人

00:34:05.090 --> 00:34:11.179
打开它

00:34:05.840 --> 00:34:15.169
他们在外部提供了

00:34:11.179 --> 00:34:18.620
关于jdw p的事情是没有

00:34:15.169 --> 00:34:23.000
安全性，以便您可以访问调试

00:34:18.620 --> 00:34:25.390
你可以做任何你想做的事情，所以你

00:34:23.000 --> 00:34:27.470
可以想象有人发现了这个

00:34:25.390 --> 00:34:30.830
研究人员发现它只是一个简单的端口

00:34:27.470 --> 00:34:31.480
扫描发现DWP端口不可以

00:34:30.830 --> 00:34:35.120
这个简单

00:34:31.480 --> 00:34:36.919
 Farber调试器进入我的银行

00:34:35.120 --> 00:34:38.090
得到的内容，实际上不只是

00:34:36.919 --> 00:34:44.840
我可以

00:34:38.090 --> 00:34:46.340
调试器正确的人这样做写一些

00:34:44.840 --> 00:34:51.820
更多代码，因为我确定您想要

00:34:46.340 --> 00:34:56.600
看到更多的代码，这不是，这是一个

00:34:51.820 --> 00:34:58.880
这个例子是关于我有多脆弱

00:34:56.600 --> 00:35:01.010
我们自己最大的敌人

00:34:58.880 --> 00:35:03.910
这里有很多代码，但基本上是

00:35:01.010 --> 00:35:09.620
属性对象有用的类加载器

00:35:03.910 --> 00:35:12.800
还有一个低级的有用方法

00:35:09.620 --> 00:35:16.550
然后会发生什么事

00:35:12.800 --> 00:35:21.800
字符串，然后为名称和

00:35:16.550 --> 00:35:23.030
如果找不到，它说我无法

00:35:21.800 --> 00:35:26.240
找到它，这是东西的名字

00:35:23.030 --> 00:35:28.490
你之前问过，有一点

00:35:26.240 --> 00:35:33.740
微小的属性，所以发生的是

00:35:28.490 --> 00:35:36.250
我说我有把手

00:35:33.740 --> 00:35:40.520
我有一个真实的班级名字，所以我去了

00:35:36.250 --> 00:35:43.550
低等的食物，我去地图

00:35:40.520 --> 00:35:46.400
我去关键是什么，关键是

00:35:43.550 --> 00:35:49.420
 foo有什么价值尝试找到它

00:35:46.400 --> 00:35:53.780
不起作用，所以我回来说

00:35:49.420 --> 00:35:59.450
找不到对的，所以我有我的

00:35:53.780 --> 00:36:01.430
返回我跑，我返回的东西

00:35:59.450 --> 00:36:06.070
像这样，默认类等于

00:36:01.430 --> 00:36:06.070
串食物的类食物好吗

00:36:07.100 --> 00:36:15.930
这是输出消息，然后是

00:36:13.860 --> 00:36:21.720
我要忍受使用

00:36:15.930 --> 00:36:24.600
跟踪器，所以现在如果我要求foo类，那么

00:36:21.720 --> 00:36:28.110
 foo类的默认工作空间

00:36:24.600 --> 00:36:30.720
说它说不能为

00:36:28.110 --> 00:36:34.770
值使IBM运行时稳定的处理程序foo 

00:36:30.720 --> 00:36:37.550
演示点foo好的，所以我找不到它

00:36:34.770 --> 00:36:37.550
好

00:36:39.080 --> 00:36:44.700
在那里，我们接下来就可以了

00:36:42.660 --> 00:36:46.140
如果您看到它说我低等，就会发生

00:36:44.700 --> 00:36:48.860
应该回去没有指出你

00:36:46.140 --> 00:36:51.210
让我回到您可以看到的部分

00:36:48.860 --> 00:36:53.220
在低级的尝试下

00:36:51.210 --> 00:36:56.280
有用的钥匙的名称，所以我

00:36:53.220 --> 00:36:59.520
没有默认，然后我做了foo什么

00:36:56.280 --> 00:37:01.230
如果我放了没有的东西就会发生

00:36:59.520 --> 00:37:04.890
对我的期望

00:37:01.230 --> 00:37:05.550
文件Java但ext点可以吗

00:37:04.890 --> 00:37:08.580
我回来

00:37:05.550 --> 00:37:10.740
好吧，我有一个例外，我可以

00:37:08.580 --> 00:37:14.730
在处理程序Java点之前不创建类

00:37:10.740 --> 00:37:16.500
好的，那没用

00:37:14.730 --> 00:37:20.030
值这是我的Java点的值

00:37:16.500 --> 00:37:23.220
那是从哪里来的

00:37:20.030 --> 00:37:25.380
那不在我的属性文件中

00:37:23.220 --> 00:37:28.290
我的属性文件由系统支持

00:37:25.380 --> 00:37:29.490
别有房产

00:37:28.290 --> 00:37:31.800
所以当你上车时会发生什么

00:37:29.490 --> 00:37:34.470
属性，在这种情况下，它说

00:37:31.800 --> 00:37:36.840
在您的实例纽约找不到它

00:37:34.470 --> 00:37:38.400
我回到支持属性

00:37:36.840 --> 00:37:42.410
系统点属性的情况

00:37:38.400 --> 00:37:44.580
对，所以我现在可以要求任何东西

00:37:42.410 --> 00:37:51.110
这是在您的系统点属性中

00:37:44.580 --> 00:37:53.670
正确地想象这堂课是关于

00:37:51.110 --> 00:37:55.260
你有一个你有任何钥匙

00:37:53.670 --> 00:37:57.810
课堂比赛的价值观

00:37:55.260 --> 00:37:59.010
我可以成为处理者的钥匙

00:37:57.810 --> 00:38:01.770
可能是任何东西，所以想象你有

00:37:59.010 --> 00:38:03.560
 XML之类的东西

00:38:01.770 --> 00:38:06.090
值，并说使用此处理程序

00:38:03.560 --> 00:38:07.590
对，然后代码接受

00:38:06.090 --> 00:38:09.630
经理，这可爱的纽约人

00:38:07.590 --> 00:38:11.190
小小的代码，说什么是班级

00:38:09.630 --> 00:38:14.010
此处理程序进行解析的名称

00:38:11.190 --> 00:38:18.120
好吧，然后有人把那个

00:38:14.010 --> 00:38:21.930
 XML之类的Java点首页

00:38:18.120 --> 00:38:24.390
并且它不起作用，但是失败了

00:38:21.930 --> 00:38:26.390
错误消息被过滤回来，所以

00:38:24.390 --> 00:38:28.620
攻击您系统的家伙

00:38:26.390 --> 00:38:31.020
因为你在告诉他们方面很有帮助

00:38:28.620 --> 00:38:33.180
他们试图用什么问题

00:38:31.020 --> 00:38:34.890
价值是什么，因为你已经

00:38:33.180 --> 00:38:36.060
之所以这么做，是因为你已经吃饱了

00:38:34.890 --> 00:38:37.650
好信息

00:38:36.060 --> 00:38:39.240
他们现在拥有完全访问权限，因此他们可以

00:38:37.650 --> 00:38:45.420
坐在那里徘徊在您的系统中

00:38:39.240 --> 00:38:49.260
对的，这样的事情

00:38:45.420 --> 00:38:51.840
与URL解码器的一对是

00:38:49.260 --> 00:38:54.330
是什么创造了乐趣？ 

00:38:51.840 --> 00:38:56.940
有帮助的根源

00:38:54.330 --> 00:39:00.090
的代码我有一个远程执行代码

00:38:56.940 --> 00:39:02.400
工具好，我把它们放在一起，我

00:39:00.090 --> 00:39:05.100
妥协，因为我有一个

00:39:02.400 --> 00:39:08.250
一个哭泣的东西来传递一些

00:39:05.100 --> 00:39:09.960
远程执行代码，我有办法

00:39:08.250 --> 00:39:12.660
进入并寻找信息的过程

00:39:09.960 --> 00:39:13.950
从您的系统以及两者之间

00:39:12.660 --> 00:39:21.630
那些我可以完全出口你的

00:39:13.950 --> 00:39:24.390
系统没问题，所以我们必须添加两个

00:39:21.630 --> 00:39:27.980
大括号的功能中的错误

00:39:24.390 --> 00:39:31.370
如果您有帮助，还可以提供开发人员帮助

00:39:27.980 --> 00:39:34.470
每当你对自己有帮助时

00:39:31.370 --> 00:39:37.350
每次对您有帮助时都可以

00:39:34.470 --> 00:39:42.270
你自己冒着被冒的风险

00:39:37.350 --> 00:39:43.980
对这些攻击者有帮助的是

00:39:42.270 --> 00:39:46.020
连接在一起的小东西

00:39:43.980 --> 00:39:50.880
这样做是为了在您考虑时

00:39:46.020 --> 00:39:53.040
当你想成为

00:39:50.880 --> 00:39:55.980
有益的思考的缺点

00:39:53.040 --> 00:39:58.380
您正确共享的信息是因为

00:39:55.980 --> 00:40:00.830
就是这样的小事

00:39:58.380 --> 00:40:00.830
人们在

00:40:02.180 --> 00:40:08.480
所以我还有大约10分钟的时间，让我们

00:40:05.109 --> 00:40:11.329
在这里查看摘要

00:40:08.480 --> 00:40:13.700
不幸的是是红色和白色

00:40:11.329 --> 00:40:16.130
你可以做什么，所以我说了两个

00:40:13.700 --> 00:40:18.319
就像所有的代码一样

00:40:16.130 --> 00:40:20.029
我们有代码存在漏洞

00:40:18.319 --> 00:40:23.029
发现他们，我们什么也没告诉你

00:40:20.029 --> 00:40:24.710
您已经看到的详细信息

00:40:23.029 --> 00:40:27.470
一点点的代码那里

00:40:24.710 --> 00:40:28.730
大烟枪在这里，所以有一个

00:40:27.470 --> 00:40:30.740
几件事

00:40:28.730 --> 00:40:33.859
第一个显然是保持

00:40:30.740 --> 00:40:36.500
当前可以找到的每个修复程序

00:40:33.859 --> 00:40:37.670
应该申请，我说， 

00:40:36.500 --> 00:40:40.220
人们现在在增长，但这意味着它将

00:40:37.670 --> 00:40:42.920
禁用我的系统，所以挑战

00:40:40.220 --> 00:40:46.700
你必须要的是你想要一个安全的

00:40:42.920 --> 00:40:50.260
系统或稳定系统的实际需求

00:40:46.700 --> 00:40:53.900
都对，所以好消息是

00:40:50.260 --> 00:40:55.819
像微服务这样的东西就是我们

00:40:53.900 --> 00:40:58.549
开始划分我们的

00:40:55.819 --> 00:41:01.190
应用程序使我们更容易

00:40:58.549 --> 00:41:03.799
我们试图在其中部署模型

00:41:01.190 --> 00:41:07.309
开始大规模部署服务，并且

00:41:03.799 --> 00:41:08.930
他们也提供版本服务，因为

00:41:07.309 --> 00:41:11.750
你可以实际上你实际上在

00:41:08.930 --> 00:41:14.150
模式已经测试过了，所以你

00:41:11.750 --> 00:41:17.329
实际上可以更快地部署和测试

00:41:14.150 --> 00:41:19.339
可以写并降低风险，但是

00:41:17.329 --> 00:41:21.500
就是那些舱壁是分开的

00:41:19.339 --> 00:41:23.210
我们需要创造正确的船

00:41:21.500 --> 00:41:25.190
你必须要达到

00:41:23.210 --> 00:41:28.670
单一的妥协不会带来你的

00:41:25.190 --> 00:41:31.270
系统下来正确，你必须看看

00:41:28.670 --> 00:41:33.890
您的帮助水平和

00:41:31.270 --> 00:41:35.180
灵活度

00:41:33.890 --> 00:41:36.799
大概坐在那里说好吧

00:41:35.180 --> 00:41:39.260
这将工作，如果我刚刚做这个

00:41:36.799 --> 00:41:42.529
改变它会做一些额外的事情

00:41:39.260 --> 00:41:45.109
更有用，更灵活，每次

00:41:42.529 --> 00:41:48.529
你这样做会冒着别人的风险

00:41:45.109 --> 00:41:49.640
充分利用这种灵活性

00:41:48.529 --> 00:41:50.869
那就是你要开始思考的

00:41:49.640 --> 00:41:53.270
关于何时设计Java 

00:41:50.869 --> 00:41:55.160
你的巨人设计你的api是你

00:41:53.270 --> 00:41:58.039
验证数据，您正在寻找

00:41:55.160 --> 00:41:59.869
如果您知道的灵活性，如果

00:41:58.039 --> 00:42:01.609
这个家伙通过我能做到的明星

00:41:59.869 --> 00:42:04.279
任何你知道的就是那种

00:42:01.609 --> 00:42:07.789
对您而言，价值是什么？ 

00:42:04.279 --> 00:42:09.529
为攻击者带来的价值

00:42:07.789 --> 00:42:12.490
鼓励大家去阅读

00:42:09.529 --> 00:42:15.170
渗透测试，即使您不是

00:42:12.490 --> 00:42:17.570
说他们工作的人

00:42:15.170 --> 00:42:19.700
在你知道前门附近，如果

00:42:17.570 --> 00:42:21.770
您可以了解渗透测试

00:42:19.700 --> 00:42:23.990
你会看到他们在做什么

00:42:21.770 --> 00:42:25.490
进入您的系统

00:42:23.990 --> 00:42:28.070
专业的渗透测试仪和

00:42:25.490 --> 00:42:29.360
他们将进行社会工程

00:42:28.070 --> 00:42:31.580
给您打电话并说服您

00:42:29.360 --> 00:42:32.870
他们在你妈妈那里，那会

00:42:31.580 --> 00:42:34.580
给你你的密码

00:42:32.870 --> 00:42:36.440
你知道他们很擅长

00:42:34.580 --> 00:42:37.730
从您那里得到的信息，他们

00:42:36.440 --> 00:42:40.730
非常擅长进入系统

00:42:37.730 --> 00:42:44.450
就在本周早些时候

00:42:40.730 --> 00:42:46.880
关于安全编码指南

00:42:44.450 --> 00:42:48.500
有点干燥的文件，但这也是

00:42:46.880 --> 00:42:51.140
真的很值得工作

00:42:48.500 --> 00:42:52.970
看着那从Java告诉你

00:42:51.140 --> 00:42:55.640
观点是什么，什么是好的，以及

00:42:52.970 --> 00:43:00.770
什么是坏的好好好

00:42:55.640 --> 00:43:03.950
指导方针是我的最后一行

00:43:00.770 --> 00:43:06.770
关于了解风险及其

00:43:03.950 --> 00:43:09.740
真的是关于你了解你的

00:43:06.770 --> 00:43:11.540
作为开发人员在您中扮演的角色

00:43:09.740 --> 00:43:14.270
不再有自由只写

00:43:11.540 --> 00:43:18.200
您想要思考的代码

00:43:14.270 --> 00:43:19.880
一直以来，你在做什么

00:43:18.200 --> 00:43:22.070
使您的系统更加开放

00:43:19.880 --> 00:43:26.180
对，就是您需要做的

00:43:22.070 --> 00:43:27.680
这是最大的事情，所以我

00:43:26.180 --> 00:43:29.180
认为我已经说了大部分

00:43:27.680 --> 00:43:32.990
我们还有其他要求

00:43:29.180 --> 00:43:35.330
你不这样做

00:43:32.990 --> 00:43:37.700
绝对保持最新

00:43:35.330 --> 00:43:39.380
使用那里的漏洞扫描工具

00:43:37.700 --> 00:43:40.790
有很多漏洞扫描工具

00:43:39.380 --> 00:43:45.620
如果您想了解您是否

00:43:40.790 --> 00:43:46.970
专家已经下载

00:43:45.620 --> 00:43:48.560
漏洞有针对的工具

00:43:46.970 --> 00:43:50.540
如果你想知道你的码头工人

00:43:48.560 --> 00:43:52.160
图像有漏洞

00:43:50.540 --> 00:43:53.870
有很多工具

00:43:52.160 --> 00:43:55.160
在那里让你了解你的

00:43:53.870 --> 00:43:58.250
位置，你应该看

00:43:55.160 --> 00:44:00.290
那些周围有某些事情

00:43:58.250 --> 00:44:02.570
我们会问你不要做，一般不要

00:44:00.290 --> 00:44:05.510
编写自定义安全管理器，否

00:44:02.570 --> 00:44:08.540
信任信任信任不要

00:44:05.510 --> 00:44:12.230
自己写加密代码不要认为

00:44:08.540 --> 00:44:15.790
他们正在散列是加密不

00:44:12.230 --> 00:44:17.960
基本上编写XML自定义XML解析器

00:44:15.790 --> 00:44:21.520
权衡在于您之间

00:44:17.960 --> 00:44:24.710
自己做对与

00:44:21.520 --> 00:44:27.020
弄错了，而如果你躺在

00:44:24.710 --> 00:44:29.220
你依靠别人是你的

00:44:27.020 --> 00:44:31.200
得到的可能性

00:44:29.220 --> 00:44:33.750
一些漏洞，但您有一个

00:44:31.200 --> 00:44:34.950
还有更多的人投入时间

00:44:33.750 --> 00:44:37.109
努力确保这些事情是

00:44:34.950 --> 00:44:38.970
纠正并保留您的任何内容

00:44:37.109 --> 00:44:41.339
您使用的加密协议

00:44:38.970 --> 00:44:44.520
下一个出来的时候

00:44:41.339 --> 00:44:45.990
像TLS全部一样向右移动

00:44:44.520 --> 00:44:49.109
正确地发现了他们的漏洞

00:44:45.990 --> 00:44:50.549
在这些协议中，所以这就是你

00:44:49.109 --> 00:44:52.020
知道我们您已经看过所有这些东西

00:44:50.549 --> 00:44:53.670
就像浏览器一样， 

00:44:52.020 --> 00:44:56.160
他们支持的TLS级别，因为

00:44:53.670 --> 00:44:58.020
旧的是伪造的，所以

00:44:56.160 --> 00:45:01.589
你只是在支持自己

00:44:58.020 --> 00:45:03.089
继续使用它们，然后

00:45:01.589 --> 00:45:06.780
通常非常不舒服

00:45:03.089 --> 00:45:09.630
谨慎对待不受信任的代码

00:45:06.780 --> 00:45:11.809
我要说的是D序列化

00:45:09.630 --> 00:45:13.680
好看看你为什么使用

00:45:11.809 --> 00:45:15.480
序列化以及是否应使用

00:45:13.680 --> 00:45:19.890
还有其他形式的

00:45:15.480 --> 00:45:25.770
序列化，您知道JDP等，并且

00:45:19.890 --> 00:45:29.010
退出，所以那里有坏人

00:45:25.770 --> 00:45:30.420
他们出来是为了让你正确

00:45:29.010 --> 00:45:33.630
你的工作给朋友，他们正在发生

00:45:30.420 --> 00:45:35.730
更了解情况开始改变

00:45:33.630 --> 00:45:39.240
正确行事的方式

00:45:35.730 --> 00:45:40.940
通常不会忽略它，仅此而已

00:45:39.240 --> 00:45:45.530
谢谢

00:45:40.940 --> 00:45:45.530
 [掌声] 

