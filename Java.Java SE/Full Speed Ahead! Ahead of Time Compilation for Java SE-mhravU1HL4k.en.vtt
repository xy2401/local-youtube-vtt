WEBVTT
Kind: captions
Language: en

00:00:03.149 --> 00:00:07.230 align:start position:0%
 
all<00:00:04.149><c> right</c><00:00:04.299><c> well</c><00:00:04.600><c> I</c><00:00:04.750><c> welcome</c><00:00:05.259><c> everybody</c><00:00:06.240><c> glad</c>

00:00:07.230 --> 00:00:07.240 align:start position:0%
all right well I welcome everybody glad
 

00:00:07.240 --> 00:00:09.209 align:start position:0%
all right well I welcome everybody glad
that<00:00:07.569><c> you</c><00:00:07.719><c> could</c><00:00:07.840><c> all</c><00:00:07.960><c> make</c><00:00:08.080><c> it</c><00:00:08.139><c> looking</c><00:00:08.980><c> I</c><00:00:09.070><c> see</c>

00:00:09.209 --> 00:00:09.219 align:start position:0%
that you could all make it looking I see
 

00:00:09.219 --> 00:00:12.060 align:start position:0%
that you could all make it looking I see
a<00:00:09.250><c> few</c><00:00:09.580><c> familiar</c><00:00:09.759><c> faces</c><00:00:10.120><c> out</c><00:00:10.870><c> there</c><00:00:10.929><c> us</c><00:00:11.830><c> ooh</c><00:00:11.950><c> my</c>

00:00:12.060 --> 00:00:12.070 align:start position:0%
a few familiar faces out there us ooh my
 

00:00:12.070 --> 00:00:14.100 align:start position:0%
a few familiar faces out there us ooh my
son<00:00:12.250><c> for</c><00:00:12.519><c> coming</c>

00:00:14.100 --> 00:00:14.110 align:start position:0%
son for coming
 

00:00:14.110 --> 00:00:16.140 align:start position:0%
son for coming
so<00:00:14.500><c> today</c><00:00:15.040><c> yeah</c><00:00:15.280><c> I'm</c><00:00:15.550><c> sure</c><00:00:15.730><c> you've</c><00:00:15.849><c> seen</c><00:00:15.880><c> the</c>

00:00:16.140 --> 00:00:16.150 align:start position:0%
so today yeah I'm sure you've seen the
 

00:00:16.150 --> 00:00:17.640 align:start position:0%
so today yeah I'm sure you've seen the
safe<00:00:16.330><c> harbor</c><00:00:16.660><c> statement</c><00:00:17.080><c> a</c><00:00:17.140><c> whole</c><00:00:17.349><c> bunch</c><00:00:17.529><c> of</c>

00:00:17.640 --> 00:00:17.650 align:start position:0%
safe harbor statement a whole bunch of
 

00:00:17.650 --> 00:00:19.319 align:start position:0%
safe harbor statement a whole bunch of
times<00:00:17.890><c> but</c><00:00:18.580><c> I</c><00:00:18.640><c> kind</c><00:00:18.910><c> of</c><00:00:18.939><c> just</c><00:00:19.000><c> want</c><00:00:19.269><c> to</c>

00:00:19.319 --> 00:00:19.329 align:start position:0%
times but I kind of just want to
 

00:00:19.329 --> 00:00:21.470 align:start position:0%
times but I kind of just want to
re-emphasize<00:00:19.390><c> it</c><00:00:20.230><c> for</c><00:00:20.409><c> this</c><00:00:20.529><c> talk</c><00:00:20.769><c> because</c>

00:00:21.470 --> 00:00:21.480 align:start position:0%
re-emphasize it for this talk because
 

00:00:21.480 --> 00:00:23.189 align:start position:0%
re-emphasize it for this talk because
everything<00:00:22.480><c> I'm</c><00:00:22.569><c> talking</c><00:00:22.869><c> about</c><00:00:22.900><c> in</c><00:00:23.109><c> today's</c>

00:00:23.189 --> 00:00:23.199 align:start position:0%
everything I'm talking about in today's
 

00:00:23.199 --> 00:00:25.819 align:start position:0%
everything I'm talking about in today's
section<00:00:23.859><c> or</c><00:00:24.249><c> today's</c><00:00:24.669><c> session</c><00:00:25.029><c> is</c>

00:00:25.819 --> 00:00:25.829 align:start position:0%
section or today's session is
 

00:00:25.829 --> 00:00:28.889 align:start position:0%
section or today's session is
experimental<00:00:26.829><c> as</c><00:00:27.099><c> of</c><00:00:27.429><c> JDK</c><00:00:28.179><c> 9</c><00:00:28.480><c> and</c><00:00:28.779><c> not</c>

00:00:28.889 --> 00:00:28.899 align:start position:0%
experimental as of JDK 9 and not
 

00:00:28.899 --> 00:00:31.529 align:start position:0%
experimental as of JDK 9 and not
officially<00:00:29.409><c> supported</c><00:00:29.919><c> in</c><00:00:30.039><c> any</c><00:00:30.189><c> way</c><00:00:30.539><c> so</c>

00:00:31.529 --> 00:00:31.539 align:start position:0%
officially supported in any way so
 

00:00:31.539 --> 00:00:32.970 align:start position:0%
officially supported in any way so
usually<00:00:32.050><c> we</c><00:00:32.140><c> just</c><00:00:32.259><c> kind</c><00:00:32.500><c> of</c><00:00:32.559><c> pass</c><00:00:32.770><c> right</c>

00:00:32.970 --> 00:00:32.980 align:start position:0%
usually we just kind of pass right
 

00:00:32.980 --> 00:00:35.340 align:start position:0%
usually we just kind of pass right
through<00:00:33.040><c> these</c><00:00:33.280><c> things</c><00:00:33.579><c> but</c><00:00:33.910><c> in</c><00:00:34.450><c> this</c><00:00:34.540><c> case</c><00:00:35.140><c> it</c>

00:00:35.340 --> 00:00:35.350 align:start position:0%
through these things but in this case it
 

00:00:35.350 --> 00:00:37.380 align:start position:0%
through these things but in this case it
actually<00:00:35.800><c> is</c><00:00:35.920><c> kind</c><00:00:36.430><c> of</c><00:00:36.580><c> important</c><00:00:37.000><c> so</c><00:00:37.150><c> please</c>

00:00:37.380 --> 00:00:37.390 align:start position:0%
actually is kind of important so please
 

00:00:37.390 --> 00:00:39.180 align:start position:0%
actually is kind of important so please
don't<00:00:37.750><c> build</c><00:00:38.620><c> your</c><00:00:38.680><c> entire</c><00:00:39.010><c> production</c>

00:00:39.180 --> 00:00:39.190 align:start position:0%
don't build your entire production
 

00:00:39.190 --> 00:00:42.060 align:start position:0%
don't build your entire production
system<00:00:39.850><c> based</c><00:00:40.060><c> off</c><00:00:40.240><c> of</c><00:00:40.270><c> the</c><00:00:41.170><c> OT</c><00:00:41.500><c> technology</c>

00:00:42.060 --> 00:00:42.070 align:start position:0%
system based off of the OT technology
 

00:00:42.070 --> 00:00:43.410 align:start position:0%
system based off of the OT technology
you're<00:00:42.250><c> gonna</c><00:00:42.370><c> talk</c><00:00:43.000><c> we're</c><00:00:43.210><c> going</c><00:00:43.300><c> to</c><00:00:43.360><c> talk</c>

00:00:43.410 --> 00:00:43.420 align:start position:0%
you're gonna talk we're going to talk
 

00:00:43.420 --> 00:00:46.320 align:start position:0%
you're gonna talk we're going to talk
about<00:00:43.630><c> today</c><00:00:43.980><c> so</c><00:00:44.980><c> a</c><00:00:45.460><c> few</c><00:00:46.000><c> people</c><00:00:46.030><c> in</c><00:00:46.270><c> the</c>

00:00:46.320 --> 00:00:46.330 align:start position:0%
about today so a few people in the
 

00:00:46.330 --> 00:00:48.150 align:start position:0%
about today so a few people in the
audience<00:00:46.360><c> I</c><00:00:46.690><c> think</c><00:00:46.870><c> know</c><00:00:46.960><c> me</c><00:00:47.110><c> but</c><00:00:47.350><c> just</c><00:00:48.040><c> for</c>

00:00:48.150 --> 00:00:48.160 align:start position:0%
audience I think know me but just for
 

00:00:48.160 --> 00:00:50.160 align:start position:0%
audience I think know me but just for
those<00:00:48.250><c> of</c><00:00:48.310><c> you</c><00:00:48.490><c> who</c><00:00:48.640><c> don't</c><00:00:48.790><c> I'm</c><00:00:49.690><c> a</c><00:00:49.840><c> JVM</c>

00:00:50.160 --> 00:00:50.170 align:start position:0%
those of you who don't I'm a JVM
 

00:00:50.170 --> 00:00:52.080 align:start position:0%
those of you who don't I'm a JVM
sustaining<00:00:50.620><c> engineer</c><00:00:50.950><c> which</c><00:00:51.100><c> means</c><00:00:51.340><c> I</c><00:00:51.550><c> fix</c>

00:00:52.080 --> 00:00:52.090 align:start position:0%
sustaining engineer which means I fix
 

00:00:52.090 --> 00:00:54.900 align:start position:0%
sustaining engineer which means I fix
post<00:00:52.360><c> release</c><00:00:52.750><c> hotspot</c><00:00:53.740><c> bugs</c><00:00:54.010><c> that's</c><00:00:54.400><c> my</c><00:00:54.640><c> day</c>

00:00:54.900 --> 00:00:54.910 align:start position:0%
post release hotspot bugs that's my day
 

00:00:54.910 --> 00:00:57.540 align:start position:0%
post release hotspot bugs that's my day
job<00:00:54.940><c> I'm</c><00:00:55.510><c> almost</c><00:00:56.079><c> of</c><00:00:56.290><c> the</c><00:00:56.440><c> JDK</c><00:00:57.040><c> updates</c>

00:00:57.540 --> 00:00:57.550 align:start position:0%
job I'm almost of the JDK updates
 

00:00:57.550 --> 00:01:00.300 align:start position:0%
job I'm almost of the JDK updates
project<00:00:58.030><c> maintainer</c><00:00:58.240><c> or</c><00:00:58.600><c> one</c><00:00:58.930><c> of</c><00:00:59.079><c> them</c><00:00:59.230><c> so</c><00:01:00.220><c> you</c>

00:01:00.300 --> 00:01:00.310 align:start position:0%
project maintainer or one of them so you
 

00:01:00.310 --> 00:01:02.160 align:start position:0%
project maintainer or one of them so you
can<00:01:00.579><c> find</c><00:01:00.940><c> me</c><00:01:01.060><c> sometimes</c><00:01:01.630><c> arguing</c><00:01:02.050><c> with</c>

00:01:02.160 --> 00:01:02.170 align:start position:0%
can find me sometimes arguing with
 

00:01:02.170 --> 00:01:03.780 align:start position:0%
can find me sometimes arguing with
people<00:01:02.470><c> online</c><00:01:02.590><c> about</c><00:01:03.040><c> what</c><00:01:03.489><c> kind</c><00:01:03.670><c> of</c><00:01:03.730><c> changes</c>

00:01:03.780 --> 00:01:03.790 align:start position:0%
people online about what kind of changes
 

00:01:03.790 --> 00:01:05.730 align:start position:0%
people online about what kind of changes
should<00:01:04.360><c> and</c><00:01:04.509><c> shouldn't</c><00:01:04.659><c> make</c><00:01:04.809><c> it</c><00:01:04.839><c> into</c><00:01:05.199><c> update</c>

00:01:05.730 --> 00:01:05.740 align:start position:0%
should and shouldn't make it into update
 

00:01:05.740 --> 00:01:08.550 align:start position:0%
should and shouldn't make it into update
releases<00:01:06.189><c> I've</c><00:01:06.700><c> done</c><00:01:07.000><c> Java</c><00:01:07.329><c> one</c><00:01:07.539><c> before</c>

00:01:08.550 --> 00:01:08.560 align:start position:0%
releases I've done Java one before
 

00:01:08.560 --> 00:01:10.649 align:start position:0%
releases I've done Java one before
I'm<00:01:08.829><c> co-author</c><00:01:09.249><c> of</c><00:01:09.579><c> Japan's</c><00:01:10.240><c> best-selling</c>

00:01:10.649 --> 00:01:10.659 align:start position:0%
I'm co-author of Japan's best-selling
 

00:01:10.659 --> 00:01:14.789 align:start position:0%
I'm co-author of Japan's best-selling
WebLogic<00:01:11.289><c> book</c><00:01:11.979><c> and</c><00:01:12.249><c> I</c><00:01:13.090><c> do</c><00:01:13.990><c> Twitter</c><00:01:14.259><c> and</c><00:01:14.619><c> have</c>

00:01:14.789 --> 00:01:14.799 align:start position:0%
WebLogic book and I do Twitter and have
 

00:01:14.799 --> 00:01:17.609 align:start position:0%
WebLogic book and I do Twitter and have
a<00:01:14.829><c> blog</c><00:01:15.100><c> so</c><00:01:16.030><c> we</c><00:01:16.990><c> don't</c><00:01:17.140><c> have</c><00:01:17.259><c> a</c><00:01:17.289><c> whole</c><00:01:17.439><c> lot</c><00:01:17.590><c> of</c>

00:01:17.609 --> 00:01:17.619 align:start position:0%
a blog so we don't have a whole lot of
 

00:01:17.619 --> 00:01:19.529 align:start position:0%
a blog so we don't have a whole lot of
time<00:01:17.859><c> to</c><00:01:18.159><c> talk</c><00:01:18.310><c> today</c><00:01:18.609><c> so</c><00:01:18.670><c> we're</c><00:01:19.240><c> gonna</c><00:01:19.299><c> kind</c>

00:01:19.529 --> 00:01:19.539 align:start position:0%
time to talk today so we're gonna kind
 

00:01:19.539 --> 00:01:20.910 align:start position:0%
time to talk today so we're gonna kind
of<00:01:19.630><c> try</c><00:01:19.810><c> and</c><00:01:19.869><c> keep</c><00:01:20.020><c> things</c><00:01:20.200><c> fairly</c><00:01:20.469><c> simple</c>

00:01:20.910 --> 00:01:20.920 align:start position:0%
of try and keep things fairly simple
 

00:01:20.920 --> 00:01:23.370 align:start position:0%
of try and keep things fairly simple
this<00:01:21.280><c> is</c><00:01:21.460><c> one</c><00:01:21.639><c> of</c><00:01:21.939><c> three</c><00:01:22.479><c> different</c><00:01:22.630><c> IOT</c><00:01:23.139><c> talks</c>

00:01:23.370 --> 00:01:23.380 align:start position:0%
this is one of three different IOT talks
 

00:01:23.380 --> 00:01:24.209 align:start position:0%
this is one of three different IOT talks
that<00:01:23.679><c> I'm</c><00:01:23.770><c> aware</c><00:01:23.979><c> of</c>

00:01:24.209 --> 00:01:24.219 align:start position:0%
that I'm aware of
 

00:01:24.219 --> 00:01:27.450 align:start position:0%
that I'm aware of
at<00:01:24.549><c> JavaOne</c><00:01:25.149><c> this</c><00:01:25.539><c> week</c><00:01:25.780><c> and</c><00:01:26.249><c> fortunately</c><00:01:27.249><c> the</c>

00:01:27.450 --> 00:01:27.460 align:start position:0%
at JavaOne this week and fortunately the
 

00:01:27.460 --> 00:01:29.249 align:start position:0%
at JavaOne this week and fortunately the
other<00:01:27.490><c> two</c><00:01:27.759><c> talks</c><00:01:27.999><c> are</c><00:01:28.240><c> all</c><00:01:28.509><c> tomorrow</c><00:01:28.869><c> so</c><00:01:29.170><c> if</c>

00:01:29.249 --> 00:01:29.259 align:start position:0%
other two talks are all tomorrow so if
 

00:01:29.259 --> 00:01:30.389 align:start position:0%
other two talks are all tomorrow so if
you<00:01:29.350><c> weren't</c><00:01:29.560><c> planning</c><00:01:29.950><c> on</c><00:01:30.009><c> necessarily</c>

00:01:30.389 --> 00:01:30.399 align:start position:0%
you weren't planning on necessarily
 

00:01:30.399 --> 00:01:33.449 align:start position:0%
you weren't planning on necessarily
attending<00:01:30.850><c> them</c><00:01:30.999><c> tomorrow</c><00:01:31.619><c> maybe</c><00:01:32.619><c> you</c><00:01:33.130><c> can</c><00:01:33.340><c> a</c>

00:01:33.449 --> 00:01:33.459 align:start position:0%
attending them tomorrow maybe you can a
 

00:01:33.459 --> 00:01:35.429 align:start position:0%
attending them tomorrow maybe you can a
put<00:01:34.119><c> that</c><00:01:34.179><c> into</c><00:01:34.450><c> your</c><00:01:34.600><c> schedule</c><00:01:35.020><c> because</c><00:01:35.139><c> some</c>

00:01:35.429 --> 00:01:35.439 align:start position:0%
put that into your schedule because some
 

00:01:35.439 --> 00:01:36.870 align:start position:0%
put that into your schedule because some
of<00:01:35.469><c> the</c><00:01:35.649><c> upcoming</c><00:01:35.859><c> talks</c><00:01:36.249><c> look</c><00:01:36.549><c> pretty</c>

00:01:36.870 --> 00:01:36.880 align:start position:0%
of the upcoming talks look pretty
 

00:01:36.880 --> 00:01:39.330 align:start position:0%
of the upcoming talks look pretty
interesting<00:01:37.479><c> and</c><00:01:37.600><c> good</c><00:01:37.719><c> too</c><00:01:37.929><c> and</c><00:01:38.170><c> I</c><00:01:38.530><c> have</c><00:01:38.979><c> some</c>

00:01:39.330 --> 00:01:39.340 align:start position:0%
interesting and good too and I have some
 

00:01:39.340 --> 00:01:40.800 align:start position:0%
interesting and good too and I have some
pointers<00:01:39.670><c> to</c><00:01:39.819><c> them</c><00:01:39.909><c> at</c><00:01:40.030><c> the</c><00:01:40.119><c> end</c><00:01:40.240><c> of</c><00:01:40.359><c> the</c><00:01:40.569><c> slide</c>

00:01:40.800 --> 00:01:40.810 align:start position:0%
pointers to them at the end of the slide
 

00:01:40.810 --> 00:01:42.870 align:start position:0%
pointers to them at the end of the slide
deck<00:01:40.979><c> but</c><00:01:41.979><c> for</c><00:01:42.100><c> day</c><00:01:42.189><c> this</c><00:01:42.340><c> is</c><00:01:42.490><c> kind</c><00:01:42.700><c> of</c><00:01:42.729><c> an</c>

00:01:42.870 --> 00:01:42.880 align:start position:0%
deck but for day this is kind of an
 

00:01:42.880 --> 00:01:44.609 align:start position:0%
deck but for day this is kind of an
introduction<00:01:43.270><c> to</c><00:01:43.569><c> the</c><00:01:43.659><c> feature</c><00:01:43.840><c> itself</c><00:01:44.170><c> we're</c>

00:01:44.609 --> 00:01:44.619 align:start position:0%
introduction to the feature itself we're
 

00:01:44.619 --> 00:01:45.989 align:start position:0%
introduction to the feature itself we're
gonna<00:01:44.709><c> start</c><00:01:45.009><c> off</c><00:01:45.100><c> at</c><00:01:45.280><c> the</c><00:01:45.369><c> very</c><00:01:45.549><c> beginning</c>

00:01:45.989 --> 00:01:45.999 align:start position:0%
gonna start off at the very beginning
 

00:01:45.999 --> 00:01:48.419 align:start position:0%
gonna start off at the very beginning
and<00:01:46.209><c> kind</c><00:01:46.719><c> of</c><00:01:46.779><c> introduce</c><00:01:46.929><c> what</c><00:01:47.380><c> IOT</c><00:01:47.859><c> is</c><00:01:48.069><c> and</c>

00:01:48.419 --> 00:01:48.429 align:start position:0%
and kind of introduce what IOT is and
 

00:01:48.429 --> 00:01:50.969 align:start position:0%
and kind of introduce what IOT is and
what<00:01:49.389><c> the</c><00:01:49.630><c> goals</c><00:01:49.840><c> are</c><00:01:50.020><c> that</c><00:01:50.079><c> kind</c><00:01:50.499><c> of</c><00:01:50.590><c> the</c>

00:01:50.969 --> 00:01:50.979 align:start position:0%
what the goals are that kind of the
 

00:01:50.979 --> 00:01:52.830 align:start position:0%
what the goals are that kind of the
design<00:01:51.100><c> goals</c><00:01:51.279><c> for</c><00:01:52.060><c> this</c><00:01:52.149><c> new</c><00:01:52.329><c> feature</c><00:01:52.539><c> and</c>

00:01:52.830 --> 00:01:52.840 align:start position:0%
design goals for this new feature and
 

00:01:52.840 --> 00:01:56.370 align:start position:0%
design goals for this new feature and
what<00:01:52.959><c> you</c><00:01:53.139><c> might</c><00:01:53.499><c> hope</c><00:01:53.649><c> to</c><00:01:53.829><c> get</c><00:01:53.950><c> out</c><00:01:54.009><c> of</c><00:01:54.100><c> it</c><00:01:55.380><c> so</c>

00:01:56.370 --> 00:01:56.380 align:start position:0%
what you might hope to get out of it so
 

00:01:56.380 --> 00:01:58.050 align:start position:0%
what you might hope to get out of it so
we<00:01:56.679><c> start</c><00:01:56.979><c> off</c><00:01:57.069><c> with</c><00:01:57.340><c> some</c><00:01:57.579><c> kind</c><00:01:57.789><c> of</c><00:01:57.850><c> boring</c>

00:01:58.050 --> 00:01:58.060 align:start position:0%
we start off with some kind of boring
 

00:01:58.060 --> 00:01:59.789 align:start position:0%
we start off with some kind of boring
warnings<00:01:58.630><c> just</c><00:01:58.719><c> to</c><00:01:59.049><c> make</c><00:01:59.200><c> sure</c><00:01:59.229><c> that</c><00:01:59.590><c> there's</c>

00:01:59.789 --> 00:01:59.799 align:start position:0%
warnings just to make sure that there's
 

00:01:59.799 --> 00:02:01.139 align:start position:0%
warnings just to make sure that there's
no<00:01:59.920><c> misunderstanding</c><00:02:00.700><c> and</c><00:02:00.759><c> that</c><00:02:00.819><c> everyone</c>

00:02:01.139 --> 00:02:01.149 align:start position:0%
no misunderstanding and that everyone
 

00:02:01.149 --> 00:02:02.969 align:start position:0%
no misunderstanding and that everyone
takes<00:02:01.359><c> everything</c><00:02:01.599><c> I</c><00:02:01.779><c> say</c><00:02:01.959><c> with</c><00:02:02.170><c> a</c><00:02:02.590><c> little</c><00:02:02.740><c> bit</c>

00:02:02.969 --> 00:02:02.979 align:start position:0%
takes everything I say with a little bit
 

00:02:02.979 --> 00:02:05.370 align:start position:0%
takes everything I say with a little bit
of<00:02:03.069><c> grain</c><00:02:03.369><c> of</c><00:02:03.490><c> salt</c><00:02:03.670><c> so</c><00:02:04.569><c> the</c><00:02:04.779><c> first</c><00:02:05.020><c> thing</c><00:02:05.229><c> is</c>

00:02:05.370 --> 00:02:05.380 align:start position:0%
of grain of salt so the first thing is
 

00:02:05.380 --> 00:02:07.169 align:start position:0%
of grain of salt so the first thing is
that<00:02:05.590><c> like</c><00:02:05.889><c> I</c><00:02:06.009><c> said</c><00:02:06.039><c> before</c><00:02:06.279><c> it's</c><00:02:06.759><c> not</c><00:02:06.909><c> yet</c>

00:02:07.169 --> 00:02:07.179 align:start position:0%
that like I said before it's not yet
 

00:02:07.179 --> 00:02:09.330 align:start position:0%
that like I said before it's not yet
officially<00:02:07.599><c> supported</c><00:02:08.110><c> son</c><00:02:08.860><c> and</c><00:02:09.069><c> then</c><00:02:09.160><c> later</c>

00:02:09.330 --> 00:02:09.340 align:start position:0%
officially supported son and then later
 

00:02:09.340 --> 00:02:10.970 align:start position:0%
officially supported son and then later
Oracle<00:02:09.759><c> kinda</c><00:02:10.000><c> has</c><00:02:10.090><c> a</c><00:02:10.119><c> long</c><00:02:10.330><c> history</c><00:02:10.690><c> of</c>

00:02:10.970 --> 00:02:10.980 align:start position:0%
Oracle kinda has a long history of
 

00:02:10.980 --> 00:02:14.610 align:start position:0%
Oracle kinda has a long history of
introducing<00:02:11.980><c> new</c><00:02:12.610><c> features</c><00:02:13.000><c> this</c><00:02:13.210><c> way</c><00:02:13.620><c> other</c>

00:02:14.610 --> 00:02:14.620 align:start position:0%
introducing new features this way other
 

00:02:14.620 --> 00:02:17.410 align:start position:0%
introducing new features this way other
examples<00:02:15.100><c> might</c><00:02:15.250><c> be</c><00:02:15.280><c> tiered</c><00:02:15.640><c> compilation</c>

00:02:17.410 --> 00:02:17.420 align:start position:0%
examples might be tiered compilation
 

00:02:17.420 --> 00:02:21.410 align:start position:0%
examples might be tiered compilation
the<00:02:18.420><c> gg1</c><00:02:19.500><c> compiler</c><00:02:20.130><c> the</c><00:02:20.280><c> car</c><00:02:20.400><c> I'm</c><00:02:20.520><c> the</c><00:02:20.819><c> the</c><00:02:21.120><c> g1</c>

00:02:21.410 --> 00:02:21.420 align:start position:0%
the gg1 compiler the car I'm the the g1
 

00:02:21.420 --> 00:02:23.449 align:start position:0%
the gg1 compiler the car I'm the the g1
garbage<00:02:21.780><c> collector</c><00:02:22.170><c> garbage</c><00:02:22.560><c> first</c><00:02:22.739><c> these</c>

00:02:23.449 --> 00:02:23.459 align:start position:0%
garbage collector garbage first these
 

00:02:23.459 --> 00:02:26.600 align:start position:0%
garbage collector garbage first these
are<00:02:23.580><c> all</c><00:02:23.700><c> features</c><00:02:24.150><c> that</c><00:02:24.560><c> originally</c><00:02:25.610><c> enter</c>

00:02:26.600 --> 00:02:26.610 align:start position:0%
are all features that originally enter
 

00:02:26.610 --> 00:02:28.280 align:start position:0%
are all features that originally enter
the<00:02:26.730><c> product</c><00:02:27.120><c> as</c><00:02:27.270><c> an</c><00:02:27.480><c> experimental</c><00:02:28.110><c> feature</c>

00:02:28.280 --> 00:02:28.290 align:start position:0%
the product as an experimental feature
 

00:02:28.290 --> 00:02:30.050 align:start position:0%
the product as an experimental feature
that<00:02:28.620><c> was</c><00:02:28.709><c> not</c><00:02:28.860><c> officially</c><00:02:29.220><c> supported</c><00:02:29.760><c> and</c>

00:02:30.050 --> 00:02:30.060 align:start position:0%
that was not officially supported and
 

00:02:30.060 --> 00:02:31.460 align:start position:0%
that was not officially supported and
then<00:02:30.180><c> they</c><00:02:30.300><c> became</c><00:02:30.569><c> supported</c><00:02:31.110><c> and</c><00:02:31.319><c> then</c>

00:02:31.460 --> 00:02:31.470 align:start position:0%
then they became supported and then
 

00:02:31.470 --> 00:02:33.890 align:start position:0%
then they became supported and then
later<00:02:31.620><c> they</c><00:02:31.830><c> became</c><00:02:32.160><c> the</c><00:02:32.459><c> default</c><00:02:32.900><c> enabled</c>

00:02:33.890 --> 00:02:33.900 align:start position:0%
later they became the default enabled
 

00:02:33.900 --> 00:02:36.350 align:start position:0%
later they became the default enabled
right<00:02:34.290><c> out</c><00:02:34.410><c> of</c><00:02:34.440><c> the</c><00:02:34.590><c> box</c><00:02:34.800><c> and</c><00:02:35.190><c> so</c><00:02:35.790><c> while</c><00:02:36.209><c> we</c>

00:02:36.350 --> 00:02:36.360 align:start position:0%
right out of the box and so while we
 

00:02:36.360 --> 00:02:39.229 align:start position:0%
right out of the box and so while we
don't<00:02:36.480><c> know</c><00:02:36.569><c> for</c><00:02:36.750><c> sure</c><00:02:36.810><c> whether</c><00:02:37.760><c> whether</c><00:02:38.760><c> a</c><00:02:38.880><c> OT</c>

00:02:39.229 --> 00:02:39.239 align:start position:0%
don't know for sure whether whether a OT
 

00:02:39.239 --> 00:02:41.780 align:start position:0%
don't know for sure whether whether a OT
will<00:02:39.480><c> will</c><00:02:39.750><c> take</c><00:02:39.900><c> a</c><00:02:39.930><c> similar</c><00:02:40.230><c> path</c><00:02:40.790><c> there</c>

00:02:41.780 --> 00:02:41.790 align:start position:0%
will will take a similar path there
 

00:02:41.790 --> 00:02:44.180 align:start position:0%
will will take a similar path there
there<00:02:42.000><c> is</c><00:02:42.150><c> kind</c><00:02:42.450><c> of</c><00:02:42.540><c> room</c><00:02:42.720><c> for</c><00:02:43.170><c> optimism</c><00:02:43.560><c> but</c>

00:02:44.180 --> 00:02:44.190 align:start position:0%
there is kind of room for optimism but
 

00:02:44.190 --> 00:02:46.250 align:start position:0%
there is kind of room for optimism but
as<00:02:44.640><c> of</c><00:02:44.910><c> now</c><00:02:45.060><c> it's</c><00:02:45.269><c> not</c><00:02:45.450><c> something</c><00:02:45.870><c> that</c><00:02:46.080><c> you</c>

00:02:46.250 --> 00:02:46.260 align:start position:0%
as of now it's not something that you
 

00:02:46.260 --> 00:02:48.650 align:start position:0%
as of now it's not something that you
can<00:02:46.440><c> really</c><00:02:46.650><c> affect</c><00:02:47.519><c> expect</c><00:02:48.269><c> official</c>

00:02:48.650 --> 00:02:48.660 align:start position:0%
can really affect expect official
 

00:02:48.660 --> 00:02:50.809 align:start position:0%
can really affect expect official
support<00:02:49.019><c> from</c><00:02:49.170><c> Oracle</c><00:02:49.560><c> from</c><00:02:49.680><c> that</c><00:02:50.370><c> said</c><00:02:50.640><c> if</c>

00:02:50.809 --> 00:02:50.819 align:start position:0%
support from Oracle from that said if
 

00:02:50.819 --> 00:02:52.850 align:start position:0%
support from Oracle from that said if
you<00:02:50.910><c> do</c><00:02:51.030><c> find</c><00:02:51.180><c> a</c><00:02:51.330><c> bug</c><00:02:51.480><c> please</c><00:02:51.900><c> file</c><00:02:52.620><c> a</c><00:02:52.650><c> bug</c>

00:02:52.850 --> 00:02:52.860 align:start position:0%
you do find a bug please file a bug
 

00:02:52.860 --> 00:02:54.110 align:start position:0%
you do find a bug please file a bug
report<00:02:53.160><c> we</c><00:02:53.310><c> want</c><00:02:53.400><c> to</c><00:02:53.550><c> know</c><00:02:53.640><c> about</c><00:02:53.730><c> them</c><00:02:54.000><c> we</c>

00:02:54.110 --> 00:02:54.120 align:start position:0%
report we want to know about them we
 

00:02:54.120 --> 00:02:56.320 align:start position:0%
report we want to know about them we
want<00:02:54.300><c> to</c><00:02:54.360><c> fix</c><00:02:54.510><c> it</c><00:02:54.720><c> we</c><00:02:54.840><c> want</c><00:02:55.019><c> to</c><00:02:55.140><c> make</c><00:02:55.709><c> this</c><00:02:55.890><c> as</c>

00:02:56.320 --> 00:02:56.330 align:start position:0%
want to fix it we want to make this as
 

00:02:56.330 --> 00:03:00.229 align:start position:0%
want to fix it we want to make this as
high<00:02:57.330><c> quality</c><00:02:57.540><c> as</c><00:02:57.870><c> possible</c><00:02:58.670><c> as</c><00:02:59.670><c> of</c><00:02:59.970><c> today</c>

00:03:00.229 --> 00:03:00.239 align:start position:0%
high quality as possible as of today
 

00:03:00.239 --> 00:03:04.699 align:start position:0%
high quality as possible as of today
it's<00:03:00.510><c> only</c><00:03:00.630><c> supported</c><00:03:01.230><c> on</c><00:03:01.440><c> Intel</c><00:03:02.690><c> 64-bit</c><00:03:03.709><c> for</c>

00:03:04.699 --> 00:03:04.709 align:start position:0%
it's only supported on Intel 64-bit for
 

00:03:04.709 --> 00:03:07.100 align:start position:0%
it's only supported on Intel 64-bit for
pro<00:03:04.950><c> Linux</c><00:03:05.310><c> and</c><00:03:05.580><c> also</c><00:03:06.030><c> just</c><00:03:06.510><c> as</c><00:03:06.630><c> another</c>

00:03:07.100 --> 00:03:07.110 align:start position:0%
pro Linux and also just as another
 

00:03:07.110 --> 00:03:08.870 align:start position:0%
pro Linux and also just as another
requirement<00:03:07.650><c> you</c><00:03:07.709><c> have</c><00:03:07.830><c> to</c><00:03:07.950><c> have</c><00:03:08.069><c> lib</c><00:03:08.280><c> e.l.f</c>

00:03:08.870 --> 00:03:08.880 align:start position:0%
requirement you have to have lib e.l.f
 

00:03:08.880 --> 00:03:11.150 align:start position:0%
requirement you have to have lib e.l.f
installed<00:03:09.780><c> that's</c><00:03:10.410><c> no</c><00:03:10.530><c> biggie</c><00:03:10.739><c> you</c><00:03:10.830><c> just</c><00:03:11.010><c> have</c>

00:03:11.150 --> 00:03:11.160 align:start position:0%
installed that's no biggie you just have
 

00:03:11.160 --> 00:03:12.640 align:start position:0%
installed that's no biggie you just have
to<00:03:11.310><c> get</c><00:03:11.430><c> it</c><00:03:11.580><c> before</c><00:03:11.790><c> you</c><00:03:11.970><c> build</c><00:03:12.120><c> or</c><00:03:12.299><c> whatever</c>

00:03:12.640 --> 00:03:12.650 align:start position:0%
to get it before you build or whatever
 

00:03:12.650 --> 00:03:16.280 align:start position:0%
to get it before you build or whatever
but<00:03:13.650><c> it</c><00:03:13.709><c> has</c><00:03:13.830><c> to</c><00:03:13.980><c> be</c><00:03:14.100><c> there</c><00:03:14.280><c> and</c><00:03:14.660><c> so</c><00:03:15.660><c> hopefully</c>

00:03:16.280 --> 00:03:16.290 align:start position:0%
but it has to be there and so hopefully
 

00:03:16.290 --> 00:03:19.759 align:start position:0%
but it has to be there and so hopefully
we're<00:03:17.040><c> planning</c><00:03:17.549><c> on</c><00:03:17.640><c> adding</c><00:03:17.790><c> other</c><00:03:18.769><c> other</c>

00:03:19.759 --> 00:03:19.769 align:start position:0%
we're planning on adding other other
 

00:03:19.769 --> 00:03:22.550 align:start position:0%
we're planning on adding other other
platforms<00:03:20.400><c> as</c><00:03:21.120><c> well</c><00:03:21.450><c> in</c><00:03:21.570><c> the</c><00:03:21.690><c> future</c><00:03:21.810><c> but</c><00:03:22.290><c> for</c>

00:03:22.550 --> 00:03:22.560 align:start position:0%
platforms as well in the future but for
 

00:03:22.560 --> 00:03:24.229 align:start position:0%
platforms as well in the future but for
today<00:03:22.890><c> this</c><00:03:23.070><c> is</c><00:03:23.130><c> the</c><00:03:23.280><c> only</c><00:03:23.370><c> one</c><00:03:23.609><c> that</c><00:03:23.670><c> you</c><00:03:24.060><c> can</c>

00:03:24.229 --> 00:03:24.239 align:start position:0%
today this is the only one that you can
 

00:03:24.239 --> 00:03:26.330 align:start position:0%
today this is the only one that you can
use<00:03:24.390><c> this</c><00:03:24.660><c> on</c><00:03:24.870><c> there's</c><00:03:25.620><c> also</c><00:03:25.769><c> no</c><00:03:26.010><c> official</c>

00:03:26.330 --> 00:03:26.340 align:start position:0%
use this on there's also no official
 

00:03:26.340 --> 00:03:28.640 align:start position:0%
use this on there's also no official
documentation<00:03:26.850><c> which</c><00:03:27.299><c> hopefully</c><00:03:27.540><c> I'll</c><00:03:28.200><c> kind</c>

00:03:28.640 --> 00:03:28.650 align:start position:0%
documentation which hopefully I'll kind
 

00:03:28.650 --> 00:03:30.020 align:start position:0%
documentation which hopefully I'll kind
of<00:03:28.709><c> fill</c><00:03:28.920><c> the</c><00:03:28.950><c> gap</c><00:03:29.250><c> a</c><00:03:29.280><c> little</c><00:03:29.430><c> bit</c><00:03:29.640><c> with</c>

00:03:30.020 --> 00:03:30.030 align:start position:0%
of fill the gap a little bit with
 

00:03:30.030 --> 00:03:32.509 align:start position:0%
of fill the gap a little bit with
today's<00:03:30.510><c> session</c><00:03:31.290><c> the</c><00:03:31.799><c> only</c><00:03:31.980><c> official</c><00:03:32.340><c> thing</c>

00:03:32.509 --> 00:03:32.519 align:start position:0%
today's session the only official thing
 

00:03:32.519 --> 00:03:36.080 align:start position:0%
today's session the only official thing
out<00:03:32.640><c> there</c><00:03:32.820><c> really</c><00:03:33.060><c> is</c><00:03:33.180><c> is</c><00:03:33.420><c> the</c><00:03:33.630><c> jep</c><00:03:35.090><c> document</c>

00:03:36.080 --> 00:03:36.090 align:start position:0%
out there really is is the jep document
 

00:03:36.090 --> 00:03:38.660 align:start position:0%
out there really is is the jep document
and<00:03:36.329><c> again</c><00:03:37.140><c> there</c><00:03:37.709><c> right</c><00:03:37.980><c> now</c><00:03:38.160><c> we</c><00:03:38.220><c> don't</c><00:03:38.519><c> know</c>

00:03:38.660 --> 00:03:38.670 align:start position:0%
and again there right now we don't know
 

00:03:38.670 --> 00:03:41.990 align:start position:0%
and again there right now we don't know
when<00:03:39.660><c> or</c><00:03:39.900><c> even</c><00:03:39.930><c> if</c><00:03:40.489><c> official</c><00:03:41.489><c> support</c><00:03:41.850><c> will</c>

00:03:41.990 --> 00:03:42.000 align:start position:0%
when or even if official support will
 

00:03:42.000 --> 00:03:44.660 align:start position:0%
when or even if official support will
follow<00:03:42.299><c> or</c><00:03:42.660><c> in</c><00:03:42.810><c> what</c><00:03:43.560><c> timeframe</c><00:03:43.950><c> certain</c>

00:03:44.660 --> 00:03:44.670 align:start position:0%
follow or in what timeframe certain
 

00:03:44.670 --> 00:03:46.640 align:start position:0%
follow or in what timeframe certain
platforms<00:03:45.420><c> may</c><00:03:45.570><c> or</c><00:03:45.690><c> may</c><00:03:45.810><c> not</c><00:03:45.959><c> be</c><00:03:46.140><c> entered</c>

00:03:46.640 --> 00:03:46.650 align:start position:0%
platforms may or may not be entered
 

00:03:46.650 --> 00:03:48.979 align:start position:0%
platforms may or may not be entered
that's<00:03:47.609><c> all</c><00:03:47.700><c> the</c><00:03:47.790><c> boring</c><00:03:48.000><c> boilerplate</c><00:03:48.780><c> I</c><00:03:48.810><c> had</c>

00:03:48.979 --> 00:03:48.989 align:start position:0%
that's all the boring boilerplate I had
 

00:03:48.989 --> 00:03:50.090 align:start position:0%
that's all the boring boilerplate I had
to<00:03:49.079><c> get</c><00:03:49.200><c> out</c><00:03:49.260><c> of</c><00:03:49.350><c> the</c><00:03:49.410><c> way</c><00:03:49.500><c> let's</c><00:03:49.739><c> let's</c>

00:03:50.090 --> 00:03:50.100 align:start position:0%
to get out of the way let's let's
 

00:03:50.100 --> 00:03:52.009 align:start position:0%
to get out of the way let's let's
actually<00:03:50.250><c> jump</c><00:03:50.549><c> into</c><00:03:50.760><c> a</c><00:03:50.880><c> ot</c><00:03:51.359><c> and</c><00:03:51.570><c> what</c><00:03:51.870><c> it's</c>

00:03:52.009 --> 00:03:52.019 align:start position:0%
actually jump into a ot and what it's
 

00:03:52.019 --> 00:03:52.640 align:start position:0%
actually jump into a ot and what it's
all<00:03:52.109><c> about</c>

00:03:52.640 --> 00:03:52.650 align:start position:0%
all about
 

00:03:52.650 --> 00:03:55.550 align:start position:0%
all about
so<00:03:53.100><c> given</c><00:03:53.940><c> all</c><00:03:54.090><c> the</c><00:03:54.329><c> the</c><00:03:54.900><c> things</c><00:03:55.109><c> I</c><00:03:55.200><c> just</c><00:03:55.410><c> said</c>

00:03:55.550 --> 00:03:55.560 align:start position:0%
so given all the the things I just said
 

00:03:55.560 --> 00:03:57.170 align:start position:0%
so given all the the things I just said
why<00:03:55.769><c> would</c><00:03:56.070><c> you</c><00:03:56.100><c> bother</c><00:03:56.370><c> learning</c><00:03:56.670><c> about</c><00:03:56.970><c> it</c>

00:03:57.170 --> 00:03:57.180 align:start position:0%
why would you bother learning about it
 

00:03:57.180 --> 00:03:58.940 align:start position:0%
why would you bother learning about it
if<00:03:57.299><c> you</c><00:03:57.420><c> can't</c><00:03:57.690><c> you</c><00:03:58.109><c> know</c><00:03:58.230><c> really</c><00:03:58.530><c> use</c><00:03:58.680><c> it</c><00:03:58.829><c> in</c>

00:03:58.940 --> 00:03:58.950 align:start position:0%
if you can't you know really use it in
 

00:03:58.950 --> 00:04:01.069 align:start position:0%
if you can't you know really use it in
production<00:03:59.070><c> yet</c><00:03:59.519><c> well</c><00:04:00.299><c> for</c><00:04:00.510><c> one</c><00:04:00.600><c> thing</c><00:04:00.750><c> it's</c>

00:04:01.069 --> 00:04:01.079 align:start position:0%
production yet well for one thing it's
 

00:04:01.079 --> 00:04:03.410 align:start position:0%
production yet well for one thing it's
pretty<00:04:01.709><c> darn</c><00:04:01.980><c> likely</c><00:04:02.310><c> that</c><00:04:02.519><c> this</c><00:04:03.180><c> may</c><00:04:03.359><c> be</c>

00:04:03.410 --> 00:04:03.420 align:start position:0%
pretty darn likely that this may be
 

00:04:03.420 --> 00:04:05.870 align:start position:0%
pretty darn likely that this may be
supported<00:04:03.989><c> in</c><00:04:04.079><c> the</c><00:04:04.200><c> future</c><00:04:04.530><c> and</c><00:04:04.769><c> so</c><00:04:05.190><c> just</c><00:04:05.730><c> in</c>

00:04:05.870 --> 00:04:05.880 align:start position:0%
supported in the future and so just in
 

00:04:05.880 --> 00:04:07.340 align:start position:0%
supported in the future and so just in
the<00:04:06.000><c> same</c><00:04:06.209><c> sense</c><00:04:06.450><c> that</c><00:04:06.540><c> you</c><00:04:06.750><c> want</c><00:04:06.840><c> to</c><00:04:06.959><c> get</c><00:04:07.109><c> a</c>

00:04:07.340 --> 00:04:07.350 align:start position:0%
the same sense that you want to get a
 

00:04:07.350 --> 00:04:09.830 align:start position:0%
the same sense that you want to get a
hold<00:04:07.590><c> of</c><00:04:07.680><c> EA</c><00:04:07.859><c> builds</c><00:04:08.370><c> early</c><00:04:09.120><c> access</c><00:04:09.450><c> builds</c>

00:04:09.830 --> 00:04:09.840 align:start position:0%
hold of EA builds early access builds
 

00:04:09.840 --> 00:04:11.479 align:start position:0%
hold of EA builds early access builds
and<00:04:09.989><c> play</c><00:04:10.079><c> with</c><00:04:10.230><c> them</c><00:04:10.380><c> to</c><00:04:10.500><c> learn</c><00:04:10.590><c> about</c><00:04:10.650><c> the</c>

00:04:11.479 --> 00:04:11.489 align:start position:0%
and play with them to learn about the
 

00:04:11.489 --> 00:04:13.520 align:start position:0%
and play with them to learn about the
direction<00:04:11.880><c> the</c><00:04:11.970><c> platform</c><00:04:12.359><c> may</c><00:04:12.510><c> go</c><00:04:12.660><c> in</c><00:04:12.840><c> on</c><00:04:13.049><c> this</c>

00:04:13.520 --> 00:04:13.530 align:start position:0%
direction the platform may go in on this
 

00:04:13.530 --> 00:04:15.229 align:start position:0%
direction the platform may go in on this
is<00:04:13.709><c> your</c><00:04:13.829><c> opportunity</c><00:04:14.069><c> to</c><00:04:14.400><c> get</c><00:04:14.609><c> a</c><00:04:14.670><c> jumpstart</c>

00:04:15.229 --> 00:04:15.239 align:start position:0%
is your opportunity to get a jumpstart
 

00:04:15.239 --> 00:04:17.690 align:start position:0%
is your opportunity to get a jumpstart
on<00:04:15.450><c> on</c><00:04:15.959><c> what</c><00:04:16.229><c> may</c><00:04:16.560><c> be</c><00:04:16.620><c> a</c><00:04:16.739><c> very</c><00:04:16.919><c> important</c><00:04:17.430><c> and</c>

00:04:17.690 --> 00:04:17.700 align:start position:0%
on on what may be a very important and
 

00:04:17.700 --> 00:04:20.000 align:start position:0%
on on what may be a very important and
exciting<00:04:18.090><c> technology</c><00:04:18.560><c> being</c><00:04:19.560><c> introduced</c><00:04:19.889><c> to</c>

00:04:20.000 --> 00:04:20.010 align:start position:0%
exciting technology being introduced to
 

00:04:20.010 --> 00:04:22.039 align:start position:0%
exciting technology being introduced to
the<00:04:20.160><c> platform</c><00:04:20.639><c> the</c><00:04:21.389><c> other</c><00:04:21.510><c> thing</c><00:04:21.720><c> is</c><00:04:21.840><c> that</c>

00:04:22.039 --> 00:04:22.049 align:start position:0%
the platform the other thing is that
 

00:04:22.049 --> 00:04:24.170 align:start position:0%
the platform the other thing is that
like<00:04:22.800><c> most</c><00:04:23.160><c> of</c><00:04:23.310><c> my</c><00:04:23.400><c> talks</c><00:04:23.669><c> we're</c><00:04:24.000><c> going</c><00:04:24.120><c> to</c>

00:04:24.170 --> 00:04:24.180 align:start position:0%
like most of my talks we're going to
 

00:04:24.180 --> 00:04:26.240 align:start position:0%
like most of my talks we're going to
jump<00:04:24.360><c> off</c><00:04:24.510><c> on</c><00:04:24.690><c> a</c><00:04:24.720><c> few</c><00:04:24.960><c> random</c><00:04:25.110><c> tangents</c><00:04:25.830><c> that</c>

00:04:26.240 --> 00:04:26.250 align:start position:0%
jump off on a few random tangents that
 

00:04:26.250 --> 00:04:29.000 align:start position:0%
jump off on a few random tangents that
brush<00:04:26.490><c> up</c><00:04:26.640><c> against</c><00:04:27.000><c> other</c><00:04:27.210><c> features</c><00:04:28.200><c> of</c><00:04:28.229><c> the</c>

00:04:29.000 --> 00:04:29.010 align:start position:0%
brush up against other features of the
 

00:04:29.010 --> 00:04:30.620 align:start position:0%
brush up against other features of the
hotspot<00:04:29.460><c> JVM</c><00:04:30.090><c> and</c>

00:04:30.620 --> 00:04:30.630 align:start position:0%
hotspot JVM and
 

00:04:30.630 --> 00:04:32.150 align:start position:0%
hotspot JVM and
so<00:04:30.750><c> it's</c><00:04:31.020><c> kind</c><00:04:31.230><c> of</c><00:04:31.260><c> a</c><00:04:31.320><c> good</c><00:04:31.410><c> excuse</c><00:04:31.800><c> to</c><00:04:31.830><c> just</c>

00:04:32.150 --> 00:04:32.160 align:start position:0%
so it's kind of a good excuse to just
 

00:04:32.160 --> 00:04:34.400 align:start position:0%
so it's kind of a good excuse to just
kind<00:04:32.370><c> of</c><00:04:32.430><c> cover</c><00:04:32.670><c> some</c><00:04:32.910><c> interesting</c><00:04:33.420><c> material</c>

00:04:34.400 --> 00:04:34.410 align:start position:0%
kind of cover some interesting material
 

00:04:34.410 --> 00:04:37.460 align:start position:0%
kind of cover some interesting material
and<00:04:35.400><c> also</c><00:04:35.670><c> if</c><00:04:35.850><c> you're</c><00:04:35.940><c> anything</c><00:04:36.120><c> like</c><00:04:36.360><c> me</c><00:04:36.470><c> you</c>

00:04:37.460 --> 00:04:37.470 align:start position:0%
and also if you're anything like me you
 

00:04:37.470 --> 00:04:39.230 align:start position:0%
and also if you're anything like me you
just<00:04:37.620><c> think</c><00:04:37.770><c> this</c><00:04:37.860><c> stuff</c><00:04:38.070><c> is</c><00:04:38.190><c> really</c><00:04:38.700><c> cool</c><00:04:38.820><c> and</c>

00:04:39.230 --> 00:04:39.240 align:start position:0%
just think this stuff is really cool and
 

00:04:39.240 --> 00:04:41.300 align:start position:0%
just think this stuff is really cool and
a<00:04:39.390><c> whole</c><00:04:39.540><c> lot</c><00:04:39.660><c> of</c><00:04:39.780><c> fun</c><00:04:39.960><c> so</c><00:04:40.290><c> it's</c><00:04:40.860><c> always</c><00:04:41.130><c> good</c>

00:04:41.300 --> 00:04:41.310 align:start position:0%
a whole lot of fun so it's always good
 

00:04:41.310 --> 00:04:42.800 align:start position:0%
a whole lot of fun so it's always good
to<00:04:41.340><c> kind</c><00:04:41.610><c> of</c><00:04:41.670><c> explore</c><00:04:42.060><c> and</c><00:04:42.240><c> get</c><00:04:42.420><c> a</c><00:04:42.480><c> peek</c><00:04:42.690><c> under</c>

00:04:42.800 --> 00:04:42.810 align:start position:0%
to kind of explore and get a peek under
 

00:04:42.810 --> 00:04:45.980 align:start position:0%
to kind of explore and get a peek under
the<00:04:43.050><c> hood</c><00:04:43.200><c> so</c><00:04:44.510><c> everyone's</c><00:04:45.510><c> really</c><00:04:45.630><c> interested</c>

00:04:45.980 --> 00:04:45.990 align:start position:0%
the hood so everyone's really interested
 

00:04:45.990 --> 00:04:47.960 align:start position:0%
the hood so everyone's really interested
in<00:04:46.050><c> this</c><00:04:46.110><c> because</c><00:04:46.470><c> this</c><00:04:46.830><c> is</c><00:04:47.040><c> a</c><00:04:47.070><c> fundamental</c>

00:04:47.960 --> 00:04:47.970 align:start position:0%
in this because this is a fundamental
 

00:04:47.970 --> 00:04:52.010 align:start position:0%
in this because this is a fundamental
change<00:04:48.300><c> or</c><00:04:49.020><c> addition</c><00:04:49.530><c> to</c><00:04:50.330><c> Javas</c><00:04:51.330><c> execution</c>

00:04:52.010 --> 00:04:52.020 align:start position:0%
change or addition to Javas execution
 

00:04:52.020 --> 00:04:54.620 align:start position:0%
change or addition to Javas execution
model<00:04:52.170><c> and</c><00:04:52.890><c> that's</c><00:04:53.130><c> been</c><00:04:53.340><c> kind</c><00:04:53.490><c> of</c><00:04:53.670><c> in</c><00:04:54.150><c> place</c>

00:04:54.620 --> 00:04:54.630 align:start position:0%
model and that's been kind of in place
 

00:04:54.630 --> 00:04:57.140 align:start position:0%
model and that's been kind of in place
since<00:04:54.930><c> the</c><00:04:55.080><c> beginning</c><00:04:55.410><c> of</c><00:04:55.530><c> time</c><00:04:55.740><c> immortal</c><00:04:56.400><c> so</c>

00:04:57.140 --> 00:04:57.150 align:start position:0%
since the beginning of time immortal so
 

00:04:57.150 --> 00:04:59.900 align:start position:0%
since the beginning of time immortal so
originally<00:04:57.690><c> we</c><00:04:58.260><c> had</c><00:04:58.290><c> you</c><00:04:59.250><c> know</c><00:04:59.280><c> you</c><00:04:59.730><c> had</c><00:04:59.790><c> your</c>

00:04:59.900 --> 00:04:59.910 align:start position:0%
originally we had you know you had your
 

00:04:59.910 --> 00:05:02.030 align:start position:0%
originally we had you know you had your
java<00:05:00.180><c> source</c><00:05:00.450><c> code</c><00:05:00.780><c> you</c><00:05:01.050><c> can</c><00:05:01.170><c> pile</c><00:05:01.320><c> to</c><00:05:01.470><c> Java</c><00:05:01.770><c> C</c>

00:05:02.030 --> 00:05:02.040 align:start position:0%
java source code you can pile to Java C
 

00:05:02.040 --> 00:05:04.670 align:start position:0%
java source code you can pile to Java C
you<00:05:02.370><c> get</c><00:05:02.490><c> a</c><00:05:02.520><c> class</c><00:05:02.760><c> file</c><00:05:03.260><c> and</c><00:05:04.260><c> then</c><00:05:04.410><c> you</c><00:05:04.530><c> run</c>

00:05:04.670 --> 00:05:04.680 align:start position:0%
you get a class file and then you run
 

00:05:04.680 --> 00:05:06.260 align:start position:0%
you get a class file and then you run
that<00:05:04.830><c> on</c><00:05:05.010><c> the</c><00:05:05.130><c> runtime</c><00:05:05.490><c> this</c><00:05:05.850><c> should</c><00:05:06.000><c> not</c><00:05:06.210><c> be</c>

00:05:06.260 --> 00:05:06.270 align:start position:0%
that on the runtime this should not be
 

00:05:06.270 --> 00:05:08.390 align:start position:0%
that on the runtime this should not be
surprising<00:05:06.540><c> to</c><00:05:07.140><c> anyone</c><00:05:07.320><c> and</c><00:05:08.130><c> then</c><00:05:08.250><c> of</c><00:05:08.370><c> course</c>

00:05:08.390 --> 00:05:08.400 align:start position:0%
surprising to anyone and then of course
 

00:05:08.400 --> 00:05:11.270 align:start position:0%
surprising to anyone and then of course
in<00:05:08.790><c> the</c><00:05:08.820><c> the</c><00:05:09.150><c> java</c><00:05:09.480><c> 1.2</c><00:05:10.200><c> time</c><00:05:10.500><c> frame</c><00:05:10.890><c> we</c>

00:05:11.270 --> 00:05:11.280 align:start position:0%
in the the java 1.2 time frame we
 

00:05:11.280 --> 00:05:13.730 align:start position:0%
in the the java 1.2 time frame we
started<00:05:11.610><c> adding</c><00:05:11.760><c> JIT</c><00:05:12.210><c> compilation</c><00:05:12.650><c> into</c><00:05:13.650><c> the</c>

00:05:13.730 --> 00:05:13.740 align:start position:0%
started adding JIT compilation into the
 

00:05:13.740 --> 00:05:16.640 align:start position:0%
started adding JIT compilation into the
mix<00:05:13.980><c> and</c><00:05:14.250><c> so</c><00:05:14.910><c> while</c><00:05:15.420><c> you</c><00:05:15.960><c> were</c><00:05:15.990><c> running</c><00:05:16.410><c> your</c>

00:05:16.640 --> 00:05:16.650 align:start position:0%
mix and so while you were running your
 

00:05:16.650 --> 00:05:18.890 align:start position:0%
mix and so while you were running your
application<00:05:16.770><c> on</c><00:05:17.130><c> your</c><00:05:17.160><c> runtime</c><00:05:17.670><c> the</c><00:05:18.450><c> JIT</c>

00:05:18.890 --> 00:05:18.900 align:start position:0%
application on your runtime the JIT
 

00:05:18.900 --> 00:05:21.410 align:start position:0%
application on your runtime the JIT
compiler<00:05:19.410><c> would</c><00:05:19.590><c> emit</c><00:05:20.090><c> actual</c><00:05:21.090><c> machine</c><00:05:21.390><c> code</c>

00:05:21.410 --> 00:05:21.420 align:start position:0%
compiler would emit actual machine code
 

00:05:21.420 --> 00:05:23.750 align:start position:0%
compiler would emit actual machine code
that<00:05:21.630><c> would</c><00:05:21.900><c> be</c><00:05:21.960><c> stored</c><00:05:22.380><c> and</c><00:05:22.530><c> run</c><00:05:22.980><c> from</c><00:05:23.220><c> memory</c>

00:05:23.750 --> 00:05:23.760 align:start position:0%
that would be stored and run from memory
 

00:05:23.760 --> 00:05:27.560 align:start position:0%
that would be stored and run from memory
and<00:05:24.690><c> JIT</c><00:05:25.590><c> compilation</c><00:05:26.180><c> has</c><00:05:27.180><c> many</c><00:05:27.390><c> advantages</c>

00:05:27.560 --> 00:05:27.570 align:start position:0%
and JIT compilation has many advantages
 

00:05:27.570 --> 00:05:30.230 align:start position:0%
and JIT compilation has many advantages
the<00:05:28.050><c> idea</c><00:05:28.320><c> here</c><00:05:28.530><c> is</c><00:05:28.680><c> that</c><00:05:28.710><c> methods</c><00:05:29.670><c> do</c><00:05:29.820><c> get</c>

00:05:30.230 --> 00:05:30.240 align:start position:0%
the idea here is that methods do get
 

00:05:30.240 --> 00:05:33.100 align:start position:0%
the idea here is that methods do get
compiled<00:05:30.810><c> but</c><00:05:31.260><c> compilation</c><00:05:31.950><c> is</c><00:05:32.070><c> expensive</c>

00:05:33.100 --> 00:05:33.110 align:start position:0%
compiled but compilation is expensive
 

00:05:33.110 --> 00:05:36.440 align:start position:0%
compiled but compilation is expensive
compilation<00:05:34.110><c> is</c><00:05:34.200><c> always</c><00:05:34.500><c> a</c><00:05:34.530><c> very</c><00:05:35.450><c> resource</c>

00:05:36.440 --> 00:05:36.450 align:start position:0%
compilation is always a very resource
 

00:05:36.450 --> 00:05:39.140 align:start position:0%
compilation is always a very resource
intensive<00:05:36.710><c> exercise</c><00:05:37.710><c> and</c><00:05:38.160><c> so</c><00:05:38.280><c> both</c><00:05:38.670><c> CPU</c>

00:05:39.140 --> 00:05:39.150 align:start position:0%
intensive exercise and so both CPU
 

00:05:39.150 --> 00:05:41.690 align:start position:0%
intensive exercise and so both CPU
cycles<00:05:39.660><c> and</c><00:05:39.930><c> memory</c><00:05:40.650><c> are</c><00:05:40.710><c> being</c><00:05:41.010><c> consumed</c><00:05:41.460><c> and</c>

00:05:41.690 --> 00:05:41.700 align:start position:0%
cycles and memory are being consumed and
 

00:05:41.700 --> 00:05:44.530 align:start position:0%
cycles and memory are being consumed and
your<00:05:42.360><c> applications</c><00:05:42.990><c> execution</c><00:05:43.560><c> threads</c><00:05:44.040><c> are</c>

00:05:44.530 --> 00:05:44.540 align:start position:0%
your applications execution threads are
 

00:05:44.540 --> 00:05:48.110 align:start position:0%
your applications execution threads are
basically<00:05:45.540><c> competing</c><00:05:45.870><c> with</c><00:05:46.470><c> the</c><00:05:46.980><c> C</c><00:05:47.610><c> 1</c><00:05:47.790><c> and</c><00:05:47.910><c> C</c><00:05:47.970><c> 2</c>

00:05:48.110 --> 00:05:48.120 align:start position:0%
basically competing with the C 1 and C 2
 

00:05:48.120 --> 00:05:50.570 align:start position:0%
basically competing with the C 1 and C 2
compilation<00:05:48.930><c> threads</c><00:05:49.260><c> for</c><00:05:49.980><c> limited</c>

00:05:50.570 --> 00:05:50.580 align:start position:0%
compilation threads for limited
 

00:05:50.580 --> 00:05:52.400 align:start position:0%
compilation threads for limited
resources<00:05:50.610><c> or</c><00:05:51.300><c> finite</c><00:05:51.480><c> resources</c><00:05:52.080><c> in</c><00:05:52.380><c> your</c>

00:05:52.400 --> 00:05:52.410 align:start position:0%
resources or finite resources in your
 

00:05:52.410 --> 00:05:55.850 align:start position:0%
resources or finite resources in your
application<00:05:53.040><c> but</c><00:05:53.880><c> once</c><00:05:54.090><c> we</c><00:05:54.450><c> do</c><00:05:54.630><c> get</c><00:05:55.530><c> over</c><00:05:55.770><c> that</c>

00:05:55.850 --> 00:05:55.860 align:start position:0%
application but once we do get over that
 

00:05:55.860 --> 00:05:58.040 align:start position:0%
application but once we do get over that
hump<00:05:56.100><c> and</c><00:05:56.340><c> we</c><00:05:56.430><c> get</c><00:05:56.610><c> the</c><00:05:56.730><c> method</c><00:05:57.150><c> compiled</c><00:05:57.600><c> the</c>

00:05:58.040 --> 00:05:58.050 align:start position:0%
hump and we get the method compiled the
 

00:05:58.050 --> 00:05:59.720 align:start position:0%
hump and we get the method compiled the
machine<00:05:58.350><c> language</c><00:05:58.680><c> versions</c><00:05:59.070><c> that</c><00:05:59.250><c> we</c><00:05:59.370><c> admit</c>

00:05:59.720 --> 00:05:59.730 align:start position:0%
machine language versions that we admit
 

00:05:59.730 --> 00:06:02.270 align:start position:0%
machine language versions that we admit
run<00:06:00.540><c> very</c><00:06:00.780><c> very</c><00:06:00.870><c> fast</c><00:06:01.290><c> and</c><00:06:01.500><c> gives</c><00:06:01.800><c> us</c><00:06:01.920><c> the</c><00:06:02.100><c> peak</c>

00:06:02.270 --> 00:06:02.280 align:start position:0%
run very very fast and gives us the peak
 

00:06:02.280 --> 00:06:04.280 align:start position:0%
run very very fast and gives us the peak
performance<00:06:02.880><c> that</c><00:06:03.030><c> we</c><00:06:03.120><c> expect</c><00:06:03.510><c> from</c><00:06:03.960><c> Java</c>

00:06:04.280 --> 00:06:04.290 align:start position:0%
performance that we expect from Java
 

00:06:04.290 --> 00:06:07.190 align:start position:0%
performance that we expect from Java
today<00:06:04.820><c> but</c><00:06:05.820><c> one</c><00:06:06.150><c> reasonable</c><00:06:06.390><c> question</c><00:06:06.810><c> is</c><00:06:07.020><c> is</c>

00:06:07.190 --> 00:06:07.200 align:start position:0%
today but one reasonable question is is
 

00:06:07.200 --> 00:06:09.050 align:start position:0%
today but one reasonable question is is
well<00:06:07.410><c> is</c><00:06:07.620><c> j</c><00:06:07.860><c> compilation</c><00:06:08.610><c> really</c><00:06:08.910><c> always</c>

00:06:09.050 --> 00:06:09.060 align:start position:0%
well is j compilation really always
 

00:06:09.060 --> 00:06:11.900 align:start position:0%
well is j compilation really always
superior<00:06:09.990><c> or</c><00:06:10.320><c> better</c><00:06:10.530><c> than</c><00:06:10.950><c> just</c><00:06:11.610><c> peer</c>

00:06:11.900 --> 00:06:11.910 align:start position:0%
superior or better than just peer
 

00:06:11.910 --> 00:06:14.420 align:start position:0%
superior or better than just peer
interpolate<00:06:12.450><c> in</c><00:06:13.110><c> a</c><00:06:13.620><c> peer</c><00:06:13.980><c> interpreter</c>

00:06:14.420 --> 00:06:14.430 align:start position:0%
interpolate in a peer interpreter
 

00:06:14.430 --> 00:06:17.210 align:start position:0%
interpolate in a peer interpreter
implementation<00:06:15.350><c> and</c><00:06:16.350><c> we</c><00:06:16.440><c> kind</c><00:06:16.650><c> of</c><00:06:16.740><c> have</c><00:06:16.830><c> as</c><00:06:16.980><c> a</c>

00:06:17.210 --> 00:06:17.220 align:start position:0%
implementation and we kind of have as a
 

00:06:17.220 --> 00:06:20.360 align:start position:0%
implementation and we kind of have as a
possible<00:06:17.790><c> case</c><00:06:17.970><c> study</c><00:06:18.270><c> of</c><00:06:18.420><c> that</c><00:06:18.630><c> J</c><00:06:19.320><c> rocket</c><00:06:19.710><c> so</c>

00:06:20.360 --> 00:06:20.370 align:start position:0%
possible case study of that J rocket so
 

00:06:20.370 --> 00:06:21.740 align:start position:0%
possible case study of that J rocket so
I<00:06:20.400><c> didn't</c><00:06:20.640><c> mention</c><00:06:20.880><c> in</c><00:06:20.970><c> my</c><00:06:21.000><c> self</c><00:06:21.240><c> introduction</c>

00:06:21.740 --> 00:06:21.750 align:start position:0%
I didn't mention in my self introduction
 

00:06:21.750 --> 00:06:23.750 align:start position:0%
I didn't mention in my self introduction
but<00:06:21.900><c> I</c><00:06:22.380><c> actually</c><00:06:22.740><c> come</c><00:06:23.070><c> from</c><00:06:23.100><c> from</c><00:06:23.550><c> the</c><00:06:23.640><c> J</c>

00:06:23.750 --> 00:06:23.760 align:start position:0%
but I actually come from from the J
 

00:06:23.760 --> 00:06:26.360 align:start position:0%
but I actually come from from the J
rocket<00:06:24.120><c> side</c><00:06:24.390><c> of</c><00:06:24.540><c> things</c><00:06:24.750><c> originally</c><00:06:25.320><c> and</c><00:06:25.530><c> we</c>

00:06:26.360 --> 00:06:26.370 align:start position:0%
rocket side of things originally and we
 

00:06:26.370 --> 00:06:28.640 align:start position:0%
rocket side of things originally and we
had<00:06:26.580><c> a</c><00:06:26.850><c> pure</c><00:06:27.240><c> jet</c><00:06:27.750><c> what</c><00:06:28.290><c> kind</c><00:06:28.470><c> of</c><00:06:28.530><c> like</c><00:06:28.620><c> a</c>

00:06:28.640 --> 00:06:28.650 align:start position:0%
had a pure jet what kind of like a
 

00:06:28.650 --> 00:06:30.290 align:start position:0%
had a pure jet what kind of like a
classic<00:06:29.160><c> jet</c><00:06:29.310><c> implementation</c><00:06:30.000><c> where</c><00:06:30.180><c> we</c>

00:06:30.290 --> 00:06:30.300 align:start position:0%
classic jet implementation where we
 

00:06:30.300 --> 00:06:32.210 align:start position:0%
classic jet implementation where we
didn't<00:06:30.540><c> have</c><00:06:30.810><c> an</c><00:06:31.050><c> interpreter</c><00:06:31.350><c> like</c><00:06:31.770><c> hotspot</c>

00:06:32.210 --> 00:06:32.220 align:start position:0%
didn't have an interpreter like hotspot
 

00:06:32.220 --> 00:06:35.030 align:start position:0%
didn't have an interpreter like hotspot
does<00:06:32.460><c> to</c><00:06:32.610><c> fall</c><00:06:32.760><c> back</c><00:06:32.970><c> on</c><00:06:33.000><c> so</c><00:06:33.900><c> everything</c><00:06:34.770><c> just</c>

00:06:35.030 --> 00:06:35.040 align:start position:0%
does to fall back on so everything just
 

00:06:35.040 --> 00:06:38.990 align:start position:0%
does to fall back on so everything just
got<00:06:35.460><c> jet</c><00:06:36.270><c> compiled</c><00:06:36.780><c> by</c><00:06:37.260><c> default</c><00:06:37.680><c> and</c><00:06:37.950><c> so</c><00:06:38.000><c> does</c>

00:06:38.990 --> 00:06:39.000 align:start position:0%
got jet compiled by default and so does
 

00:06:39.000 --> 00:06:40.070 align:start position:0%
got jet compiled by default and so does
this<00:06:39.090><c> really</c><00:06:39.450><c> give</c><00:06:39.600><c> you</c><00:06:39.690><c> better</c><00:06:39.900><c> performance</c>

00:06:40.070 --> 00:06:40.080 align:start position:0%
this really give you better performance
 

00:06:40.080 --> 00:06:44.090 align:start position:0%
this really give you better performance
this<00:06:40.620><c> kind</c><00:06:40.860><c> of</c><00:06:41.010><c> of</c><00:06:41.330><c> militantly</c><00:06:42.330><c> trying</c><00:06:43.260><c> to</c>

00:06:44.090 --> 00:06:44.100 align:start position:0%
this kind of of militantly trying to
 

00:06:44.100 --> 00:06:45.860 align:start position:0%
this kind of of militantly trying to
everything<00:06:44.580><c> to</c><00:06:44.940><c> machine</c><00:06:45.240><c> code</c><00:06:45.420><c> and</c><00:06:45.750><c> the</c>

00:06:45.860 --> 00:06:45.870 align:start position:0%
everything to machine code and the
 

00:06:45.870 --> 00:06:47.330 align:start position:0%
everything to machine code and the
answer<00:06:46.140><c> is</c><00:06:46.260><c> well</c><00:06:46.470><c> what's</c><00:06:46.740><c> your</c><00:06:46.800><c> definition</c><00:06:47.010><c> of</c>

00:06:47.330 --> 00:06:47.340 align:start position:0%
answer is well what's your definition of
 

00:06:47.340 --> 00:06:50.150 align:start position:0%
answer is well what's your definition of
performance<00:06:47.850><c> so</c><00:06:48.710><c> kind</c><00:06:49.710><c> of</c><00:06:49.770><c> an</c><00:06:49.860><c> extreme</c>

00:06:50.150 --> 00:06:50.160 align:start position:0%
performance so kind of an extreme
 

00:06:50.160 --> 00:06:52.190 align:start position:0%
performance so kind of an extreme
example<00:06:50.280><c> and</c><00:06:50.760><c> no</c><00:06:50.850><c> this</c><00:06:51.030><c> is</c><00:06:51.180><c> profoundly</c><00:06:51.780><c> unfair</c>

00:06:52.190 --> 00:06:52.200 align:start position:0%
example and no this is profoundly unfair
 

00:06:52.200 --> 00:06:55.400 align:start position:0%
example and no this is profoundly unfair
to<00:06:52.350><c> Java</c><00:06:52.590><c> but</c><00:06:53.550><c> on</c><00:06:53.760><c> left</c><00:06:54.000><c> here</c><00:06:54.300><c> I'm</c><00:06:54.510><c> running</c>

00:06:55.400 --> 00:06:55.410 align:start position:0%
to Java but on left here I'm running
 

00:06:55.410 --> 00:06:57.800 align:start position:0%
to Java but on left here I'm running
just<00:06:55.830><c> a</c><00:06:55.980><c> native</c><00:06:56.340><c> HelloWorld</c><00:06:57.150><c> you</c><00:06:57.540><c> know</c><00:06:57.630><c> that</c>

00:06:57.800 --> 00:06:57.810 align:start position:0%
just a native HelloWorld you know that
 

00:06:57.810 --> 00:07:01.040 align:start position:0%
just a native HelloWorld you know that
was<00:06:57.960><c> written</c><00:06:58.380><c> in</c><00:06:58.530><c> C</c><00:06:58.910><c> you</c><00:06:59.910><c> know</c><00:07:00.000><c> this</c><00:07:00.780><c> this</c>

00:07:01.040 --> 00:07:01.050 align:start position:0%
was written in C you know this this
 

00:07:01.050 --> 00:07:02.420 align:start position:0%
was written in C you know this this
comparison<00:07:01.530><c> means</c><00:07:01.830><c> nothing</c><00:07:02.220><c> because</c>

00:07:02.420 --> 00:07:02.430 align:start position:0%
comparison means nothing because
 

00:07:02.430 --> 00:07:04.340 align:start position:0%
comparison means nothing because
obviously<00:07:03.210><c> something</c><00:07:03.870><c> written</c><00:07:04.110><c> like</c><00:07:04.290><c> that</c>

00:07:04.340 --> 00:07:04.350 align:start position:0%
obviously something written like that
 

00:07:04.350 --> 00:07:06.290 align:start position:0%
obviously something written like that
versus<00:07:05.010><c> a</c><00:07:05.040><c> full</c><00:07:05.280><c> runtime</c><00:07:05.820><c> of</c><00:07:05.850><c> garbage</c>

00:07:06.290 --> 00:07:06.300 align:start position:0%
versus a full runtime of garbage
 

00:07:06.300 --> 00:07:08.390 align:start position:0%
versus a full runtime of garbage
collection<00:07:06.840><c> and</c><00:07:06.960><c> everything</c><00:07:07.560><c> else</c><00:07:08.010><c> Java</c>

00:07:08.390 --> 00:07:08.400 align:start position:0%
collection and everything else Java
 

00:07:08.400 --> 00:07:09.500 align:start position:0%
collection and everything else Java
brings<00:07:08.640><c> to</c><00:07:08.820><c> the</c><00:07:08.940><c> table</c>

00:07:09.500 --> 00:07:09.510 align:start position:0%
brings to the table
 

00:07:09.510 --> 00:07:11.180 align:start position:0%
brings to the table
you're<00:07:10.020><c> not</c><00:07:10.140><c> going</c><00:07:10.260><c> to</c><00:07:10.290><c> compete</c><00:07:10.620><c> but</c><00:07:10.830><c> the</c><00:07:10.950><c> idea</c>

00:07:11.180 --> 00:07:11.190 align:start position:0%
you're not going to compete but the idea
 

00:07:11.190 --> 00:07:12.920 align:start position:0%
you're not going to compete but the idea
here<00:07:11.460><c> is</c><00:07:11.580><c> that</c><00:07:11.610><c> that</c><00:07:12.000><c> people</c><00:07:12.300><c> really</c><00:07:12.540><c> do</c><00:07:12.690><c> look</c>

00:07:12.920 --> 00:07:12.930 align:start position:0%
here is that that people really do look
 

00:07:12.930 --> 00:07:15.920 align:start position:0%
here is that that people really do look
at<00:07:13.110><c> this</c><00:07:13.590><c> these</c><00:07:13.980><c> types</c><00:07:14.250><c> of</c><00:07:14.400><c> use</c><00:07:14.580><c> cases</c><00:07:14.670><c> and</c><00:07:15.390><c> are</c>

00:07:15.920 --> 00:07:15.930 align:start position:0%
at this these types of use cases and are
 

00:07:15.930 --> 00:07:17.570 align:start position:0%
at this these types of use cases and are
asking<00:07:16.230><c> themselves</c><00:07:16.410><c> you</c><00:07:16.980><c> know</c><00:07:17.130><c> like</c><00:07:17.340><c> like</c>

00:07:17.570 --> 00:07:17.580 align:start position:0%
asking themselves you know like like
 

00:07:17.580 --> 00:07:20.120 align:start position:0%
asking themselves you know like like
well<00:07:17.820><c> why</c><00:07:18.630><c> does</c><00:07:18.840><c> Java</c><00:07:19.050><c> take</c><00:07:19.320><c> so</c><00:07:19.530><c> long</c><00:07:19.680><c> so</c>

00:07:20.120 --> 00:07:20.130 align:start position:0%
well why does Java take so long so
 

00:07:20.130 --> 00:07:21.530 align:start position:0%
well why does Java take so long so
there's<00:07:20.340><c> always</c><00:07:20.460><c> been</c><00:07:20.730><c> this</c><00:07:20.880><c> this</c><00:07:21.120><c> pressure</c>

00:07:21.530 --> 00:07:21.540 align:start position:0%
there's always been this this pressure
 

00:07:21.540 --> 00:07:24.350 align:start position:0%
there's always been this this pressure
to<00:07:22.380><c> try</c><00:07:22.680><c> and</c><00:07:22.830><c> make</c><00:07:22.950><c> Java</c><00:07:23.220><c> start</c><00:07:23.640><c> up</c><00:07:23.760><c> and</c><00:07:23.940><c> run</c><00:07:23.970><c> as</c>

00:07:24.350 --> 00:07:24.360 align:start position:0%
to try and make Java start up and run as
 

00:07:24.360 --> 00:07:27.050 align:start position:0%
to try and make Java start up and run as
fast<00:07:24.840><c> as</c><00:07:25.050><c> possible</c><00:07:25.590><c> and</c><00:07:25.830><c> so</c><00:07:26.370><c> the</c><00:07:26.760><c> point</c><00:07:26.970><c> of</c>

00:07:27.050 --> 00:07:27.060 align:start position:0%
fast as possible and so the point of
 

00:07:27.060 --> 00:07:29.120 align:start position:0%
fast as possible and so the point of
using<00:07:27.210><c> HelloWorld</c><00:07:27.810><c> here</c><00:07:28.050><c> is</c><00:07:28.230><c> that</c><00:07:28.740><c> just</c><00:07:28.950><c> out</c>

00:07:29.120 --> 00:07:29.130 align:start position:0%
using HelloWorld here is that just out
 

00:07:29.130 --> 00:07:32.480 align:start position:0%
using HelloWorld here is that just out
of<00:07:29.190><c> the</c><00:07:29.340><c> box</c><00:07:29.490><c> even</c><00:07:30.090><c> executing</c><00:07:30.720><c> anything</c><00:07:31.490><c> you</c>

00:07:32.480 --> 00:07:32.490 align:start position:0%
of the box even executing anything you
 

00:07:32.490 --> 00:07:34.940 align:start position:0%
of the box even executing anything you
know<00:07:32.580><c> the</c><00:07:32.730><c> JVM</c><00:07:33.390><c> is</c><00:07:33.630><c> kind</c><00:07:33.960><c> of</c><00:07:34.020><c> behind</c><00:07:34.350><c> the</c>

00:07:34.940 --> 00:07:34.950 align:start position:0%
know the JVM is kind of behind the
 

00:07:34.950 --> 00:07:36.650 align:start position:0%
know the JVM is kind of behind the
native<00:07:35.220><c> world</c><00:07:35.430><c> in</c><00:07:35.700><c> terms</c><00:07:35.910><c> of</c><00:07:36.030><c> startup</c><00:07:36.390><c> time</c>

00:07:36.650 --> 00:07:36.660 align:start position:0%
native world in terms of startup time
 

00:07:36.660 --> 00:07:38.570 align:start position:0%
native world in terms of startup time
and<00:07:36.960><c> people</c><00:07:37.500><c> noticed</c><00:07:37.950><c> that</c><00:07:38.130><c> and</c><00:07:38.340><c> so</c><00:07:38.430><c> whether</c>

00:07:38.570 --> 00:07:38.580 align:start position:0%
and people noticed that and so whether
 

00:07:38.580 --> 00:07:40.490 align:start position:0%
and people noticed that and so whether
the<00:07:38.790><c> comparison</c><00:07:39.240><c> is</c><00:07:39.300><c> fair</c><00:07:39.510><c> or</c><00:07:39.630><c> not</c><00:07:39.750><c> people</c>

00:07:40.490 --> 00:07:40.500 align:start position:0%
the comparison is fair or not people
 

00:07:40.500 --> 00:07:42.320 align:start position:0%
the comparison is fair or not people
make<00:07:40.680><c> that</c><00:07:40.830><c> comparison</c><00:07:41.160><c> and</c><00:07:41.700><c> it's</c><00:07:42.120><c> something</c>

00:07:42.320 --> 00:07:42.330 align:start position:0%
make that comparison and it's something
 

00:07:42.330 --> 00:07:44.180 align:start position:0%
make that comparison and it's something
that<00:07:42.480><c> that</c><00:07:42.660><c> we</c><00:07:42.960><c> have</c><00:07:43.080><c> to</c><00:07:43.200><c> be</c><00:07:43.290><c> aware</c><00:07:43.530><c> of</c><00:07:43.590><c> and</c><00:07:43.980><c> and</c>

00:07:44.180 --> 00:07:44.190 align:start position:0%
that that we have to be aware of and and
 

00:07:44.190 --> 00:07:46.760 align:start position:0%
that that we have to be aware of and and
that<00:07:44.630><c> kind</c><00:07:45.630><c> of</c><00:07:45.660><c> motivates</c><00:07:46.110><c> us</c><00:07:46.350><c> to</c><00:07:46.500><c> try</c><00:07:46.740><c> and</c>

00:07:46.760 --> 00:07:46.770 align:start position:0%
that kind of motivates us to try and
 

00:07:46.770 --> 00:07:49.640 align:start position:0%
that kind of motivates us to try and
prove<00:07:47.520><c> on</c><00:07:48.120><c> these</c><00:07:48.270><c> times</c><00:07:48.570><c> as</c><00:07:48.990><c> much</c><00:07:49.350><c> as</c><00:07:49.530><c> humanly</c>

00:07:49.640 --> 00:07:49.650 align:start position:0%
prove on these times as much as humanly
 

00:07:49.650 --> 00:07:53.180 align:start position:0%
prove on these times as much as humanly
possible<00:07:50.430><c> so</c><00:07:51.330><c> check</c><00:07:51.960><c> compilation</c><00:07:52.470><c> isn't</c>

00:07:53.180 --> 00:07:53.190 align:start position:0%
possible so check compilation isn't
 

00:07:53.190 --> 00:07:55.970 align:start position:0%
possible so check compilation isn't
always<00:07:53.400><c> fastest</c><00:07:54.030><c> and</c><00:07:54.330><c> that's</c><00:07:54.780><c> why</c><00:07:55.020><c> we</c><00:07:55.830><c> have</c>

00:07:55.970 --> 00:07:55.980 align:start position:0%
always fastest and that's why we have
 

00:07:55.980 --> 00:07:57.950 align:start position:0%
always fastest and that's why we have
the<00:07:56.070><c> hotspot</c><00:07:56.490><c> way</c><00:07:57.450><c> of</c><00:07:57.570><c> thinking</c><00:07:57.870><c> or</c>

00:07:57.950 --> 00:07:57.960 align:start position:0%
the hotspot way of thinking or
 

00:07:57.960 --> 00:08:00.260 align:start position:0%
the hotspot way of thinking or
philosophy<00:07:58.500><c> where</c><00:07:59.160><c> we</c><00:07:59.580><c> don't</c><00:07:59.760><c> J</c><00:07:59.940><c> compile</c>

00:08:00.260 --> 00:08:00.270 align:start position:0%
philosophy where we don't J compile
 

00:08:00.270 --> 00:08:01.850 align:start position:0%
philosophy where we don't J compile
everything<00:08:00.570><c> like</c><00:08:00.870><c> J</c><00:08:01.050><c> rocket</c><00:08:01.440><c> did</c>

00:08:01.850 --> 00:08:01.860 align:start position:0%
everything like J rocket did
 

00:08:01.860 --> 00:08:04.100 align:start position:0%
everything like J rocket did
so<00:08:02.370><c> like</c><00:08:02.730><c> I</c><00:08:02.820><c> said</c><00:08:03.030><c> the</c><00:08:03.240><c> couple</c><00:08:03.390><c> the</c><00:08:03.720><c> overhead</c>

00:08:04.100 --> 00:08:04.110 align:start position:0%
so like I said the couple the overhead
 

00:08:04.110 --> 00:08:06.410 align:start position:0%
so like I said the couple the overhead
for<00:08:04.320><c> compilation</c><00:08:04.860><c> is</c><00:08:05.190><c> is</c><00:08:05.430><c> extremely</c><00:08:05.970><c> high</c><00:08:06.150><c> and</c>

00:08:06.410 --> 00:08:06.420 align:start position:0%
for compilation is is extremely high and
 

00:08:06.420 --> 00:08:09.230 align:start position:0%
for compilation is is extremely high and
so<00:08:07.200><c> we're</c><00:08:07.770><c> consuming</c><00:08:08.070><c> resources</c><00:08:08.370><c> like</c><00:08:08.910><c> memory</c>

00:08:09.230 --> 00:08:09.240 align:start position:0%
so we're consuming resources like memory
 

00:08:09.240 --> 00:08:12.440 align:start position:0%
so we're consuming resources like memory
and<00:08:09.450><c> CPU</c><00:08:09.900><c> time</c><00:08:10.110><c> but</c><00:08:11.010><c> also</c><00:08:11.130><c> another</c><00:08:11.550><c> issue</c><00:08:12.210><c> that</c>

00:08:12.440 --> 00:08:12.450 align:start position:0%
and CPU time but also another issue that
 

00:08:12.450 --> 00:08:14.090 align:start position:0%
and CPU time but also another issue that
people<00:08:12.810><c> are</c><00:08:12.930><c> not</c><00:08:13.110><c> necessarily</c><00:08:13.140><c> always</c><00:08:13.890><c> aware</c>

00:08:14.090 --> 00:08:14.100 align:start position:0%
people are not necessarily always aware
 

00:08:14.100 --> 00:08:15.670 align:start position:0%
people are not necessarily always aware
of<00:08:14.160><c> is</c><00:08:14.550><c> that</c><00:08:14.580><c> there's</c><00:08:15.030><c> also</c><00:08:15.150><c> a</c><00:08:15.270><c> latency</c>

00:08:15.670 --> 00:08:15.680 align:start position:0%
of is that there's also a latency
 

00:08:15.680 --> 00:08:17.870 align:start position:0%
of is that there's also a latency
involved<00:08:16.680><c> with</c><00:08:16.770><c> JIT</c><00:08:16.980><c> compilation</c><00:08:17.130><c> and</c><00:08:17.760><c> what</c><00:08:17.850><c> I</c>

00:08:17.870 --> 00:08:17.880 align:start position:0%
involved with JIT compilation and what I
 

00:08:17.880 --> 00:08:19.460 align:start position:0%
involved with JIT compilation and what I
mean<00:08:18.090><c> by</c><00:08:18.240><c> that</c><00:08:18.270><c> is</c><00:08:18.630><c> that</c><00:08:18.780><c> even</c><00:08:18.960><c> though</c><00:08:19.170><c> we</c><00:08:19.290><c> have</c>

00:08:19.460 --> 00:08:19.470 align:start position:0%
mean by that is that even though we have
 

00:08:19.470 --> 00:08:21.950 align:start position:0%
mean by that is that even though we have
the<00:08:19.590><c> interpreter</c><00:08:20.160><c> that</c><00:08:20.910><c> can</c><00:08:21.390><c> can</c><00:08:21.690><c> start</c>

00:08:21.950 --> 00:08:21.960 align:start position:0%
the interpreter that can can start
 

00:08:21.960 --> 00:08:24.230 align:start position:0%
the interpreter that can can start
running<00:08:22.200><c> the</c><00:08:22.290><c> code</c><00:08:22.440><c> immediately</c><00:08:22.680><c> and</c><00:08:23.310><c> we</c><00:08:24.060><c> can</c>

00:08:24.230 --> 00:08:24.240 align:start position:0%
running the code immediately and we can
 

00:08:24.240 --> 00:08:27.050 align:start position:0%
running the code immediately and we can
asynchronously<00:08:25.050><c> do</c><00:08:25.770><c> the</c><00:08:26.160><c> the</c><00:08:26.460><c> compilation</c>

00:08:27.050 --> 00:08:27.060 align:start position:0%
asynchronously do the the compilation
 

00:08:27.060 --> 00:08:29.990 align:start position:0%
asynchronously do the the compilation
and<00:08:27.540><c> a</c><00:08:27.600><c> separate</c><00:08:27.900><c> compilation</c><00:08:28.200><c> thread</c><00:08:29.000><c> there</c>

00:08:29.990 --> 00:08:30.000 align:start position:0%
and a separate compilation thread there
 

00:08:30.000 --> 00:08:31.760 align:start position:0%
and a separate compilation thread there
there's<00:08:30.270><c> a</c><00:08:30.360><c> delay</c><00:08:30.750><c> before</c><00:08:31.080><c> we</c><00:08:31.440><c> get</c><00:08:31.560><c> that</c>

00:08:31.760 --> 00:08:31.770 align:start position:0%
there's a delay before we get that
 

00:08:31.770 --> 00:08:33.320 align:start position:0%
there's a delay before we get that
compiled<00:08:32.190><c> version</c><00:08:32.610><c> so</c><00:08:32.789><c> there's</c><00:08:32.969><c> a</c><00:08:33.030><c> delay</c>

00:08:33.320 --> 00:08:33.330 align:start position:0%
compiled version so there's a delay
 

00:08:33.330 --> 00:08:36.320 align:start position:0%
compiled version so there's a delay
before<00:08:33.930><c> we</c><00:08:34.260><c> hit</c><00:08:34.410><c> the</c><00:08:34.710><c> peak</c><00:08:34.919><c> performance</c><00:08:35.580><c> for</c>

00:08:36.320 --> 00:08:36.330 align:start position:0%
before we hit the peak performance for
 

00:08:36.330 --> 00:08:38.510 align:start position:0%
before we hit the peak performance for
that<00:08:36.450><c> particular</c><00:08:36.719><c> method</c><00:08:37.080><c> and</c><00:08:37.469><c> so</c><00:08:38.250><c> in</c><00:08:38.430><c> the</c>

00:08:38.510 --> 00:08:38.520 align:start position:0%
that particular method and so in the
 

00:08:38.520 --> 00:08:40.130 align:start position:0%
that particular method and so in the
sense<00:08:38.729><c> you</c><00:08:38.969><c> know</c><00:08:39.120><c> we</c><00:08:39.630><c> get</c><00:08:39.750><c> to</c><00:08:39.810><c> run</c><00:08:40.020><c> it</c>

00:08:40.130 --> 00:08:40.140 align:start position:0%
sense you know we get to run it
 

00:08:40.140 --> 00:08:41.390 align:start position:0%
sense you know we get to run it
immediately<00:08:40.440><c> but</c><00:08:40.710><c> we're</c><00:08:40.860><c> running</c><00:08:40.950><c> it</c><00:08:41.190><c> slow</c>

00:08:41.390 --> 00:08:41.400 align:start position:0%
immediately but we're running it slow
 

00:08:41.400 --> 00:08:42.890 align:start position:0%
immediately but we're running it slow
we're<00:08:41.580><c> running</c><00:08:41.880><c> it</c><00:08:41.969><c> in</c><00:08:42.060><c> the</c><00:08:42.180><c> interpreter</c><00:08:42.690><c> and</c>

00:08:42.890 --> 00:08:42.900 align:start position:0%
we're running it in the interpreter and
 

00:08:42.900 --> 00:08:44.540 align:start position:0%
we're running it in the interpreter and
what<00:08:43.380><c> we</c><00:08:43.469><c> want</c><00:08:43.650><c> to</c><00:08:43.740><c> be</c><00:08:43.800><c> doing</c><00:08:44.070><c> is</c><00:08:44.190><c> we</c><00:08:44.310><c> want</c><00:08:44.460><c> to</c>

00:08:44.540 --> 00:08:44.550 align:start position:0%
what we want to be doing is we want to
 

00:08:44.550 --> 00:08:46.640 align:start position:0%
what we want to be doing is we want to
be<00:08:44.640><c> running</c><00:08:44.910><c> it</c><00:08:45.180><c> the</c><00:08:45.720><c> fastest</c><00:08:46.200><c> version</c><00:08:46.380><c> of</c>

00:08:46.640 --> 00:08:46.650 align:start position:0%
be running it the fastest version of
 

00:08:46.650 --> 00:08:48.110 align:start position:0%
be running it the fastest version of
that<00:08:46.740><c> method</c><00:08:47.100><c> the</c><00:08:47.220><c> compiled</c><00:08:47.550><c> version</c><00:08:47.910><c> of</c><00:08:48.030><c> that</c>

00:08:48.110 --> 00:08:48.120 align:start position:0%
that method the compiled version of that
 

00:08:48.120 --> 00:08:50.230 align:start position:0%
that method the compiled version of that
method<00:08:48.330><c> as</c><00:08:48.630><c> fast</c><00:08:49.200><c> as</c><00:08:49.380><c> humanly</c><00:08:49.500><c> possible</c>

00:08:50.230 --> 00:08:50.240 align:start position:0%
method as fast as humanly possible
 

00:08:50.240 --> 00:08:54.200 align:start position:0%
method as fast as humanly possible
so<00:08:51.240><c> in</c><00:08:51.570><c> hotspot</c><00:08:52.530><c> what</c><00:08:52.710><c> we</c><00:08:52.800><c> do</c><00:08:52.950><c> is</c><00:08:53.310><c> we</c><00:08:53.910><c> start</c><00:08:54.060><c> off</c>

00:08:54.200 --> 00:08:54.210 align:start position:0%
so in hotspot what we do is we start off
 

00:08:54.210 --> 00:08:55.790 align:start position:0%
so in hotspot what we do is we start off
every<00:08:54.510><c> method</c><00:08:54.690><c> begins</c><00:08:55.170><c> with</c><00:08:55.589><c> being</c>

00:08:55.790 --> 00:08:55.800 align:start position:0%
every method begins with being
 

00:08:55.800 --> 00:08:58.040 align:start position:0%
every method begins with being
interpreted<00:08:56.100><c> that's</c><00:08:56.910><c> the</c><00:08:57.089><c> default</c><00:08:57.480><c> you</c><00:08:57.870><c> know</c>

00:08:58.040 --> 00:08:58.050 align:start position:0%
interpreted that's the default you know
 

00:08:58.050 --> 00:08:59.600 align:start position:0%
interpreted that's the default you know
behavior<00:08:58.410><c> that</c><00:08:58.589><c> everything</c><00:08:58.949><c> gets</c><00:08:59.129><c> and</c><00:08:59.459><c> then</c>

00:08:59.600 --> 00:08:59.610 align:start position:0%
behavior that everything gets and then
 

00:08:59.610 --> 00:09:01.609 align:start position:0%
behavior that everything gets and then
we're<00:08:59.910><c> constantly</c><00:09:00.209><c> doing</c><00:09:00.689><c> what</c><00:09:01.410><c> we</c><00:09:01.499><c> call</c>

00:09:01.609 --> 00:09:01.619 align:start position:0%
we're constantly doing what we call
 

00:09:01.619 --> 00:09:03.439 align:start position:0%
we're constantly doing what we call
hotspot<00:09:02.040><c> profiling</c><00:09:02.699><c> which</c><00:09:02.910><c> is</c><00:09:03.059><c> basically</c>

00:09:03.439 --> 00:09:03.449 align:start position:0%
hotspot profiling which is basically
 

00:09:03.449 --> 00:09:04.970 align:start position:0%
hotspot profiling which is basically
just<00:09:03.569><c> collecting</c><00:09:04.230><c> you</c><00:09:04.470><c> know</c><00:09:04.529><c> doing</c><00:09:04.739><c> a</c><00:09:04.800><c> stop</c>

00:09:04.970 --> 00:09:04.980 align:start position:0%
just collecting you know doing a stop
 

00:09:04.980 --> 00:09:06.829 align:start position:0%
just collecting you know doing a stop
the<00:09:05.129><c> world</c><00:09:05.309><c> and</c><00:09:05.489><c> seeing</c><00:09:06.269><c> what</c><00:09:06.629><c> all</c><00:09:06.749><c> the</c>

00:09:06.829 --> 00:09:06.839 align:start position:0%
the world and seeing what all the
 

00:09:06.839 --> 00:09:09.019 align:start position:0%
the world and seeing what all the
threads<00:09:07.079><c> are</c><00:09:07.230><c> running</c><00:09:07.259><c> and</c><00:09:07.739><c> keeping</c><00:09:08.459><c> track</c><00:09:08.910><c> of</c>

00:09:09.019 --> 00:09:09.029 align:start position:0%
threads are running and keeping track of
 

00:09:09.029 --> 00:09:11.900 align:start position:0%
threads are running and keeping track of
all<00:09:09.269><c> that</c><00:09:09.449><c> and</c><00:09:09.689><c> then</c><00:09:10.019><c> we</c><00:09:10.739><c> have</c><00:09:10.980><c> statistics</c><00:09:11.699><c> for</c>

00:09:11.900 --> 00:09:11.910 align:start position:0%
all that and then we have statistics for
 

00:09:11.910 --> 00:09:13.669 align:start position:0%
all that and then we have statistics for
for<00:09:12.239><c> you</c><00:09:12.600><c> know</c><00:09:12.660><c> invocation</c><00:09:13.139><c> counts</c><00:09:13.529><c> and</c>

00:09:13.669 --> 00:09:13.679 align:start position:0%
for you know invocation counts and
 

00:09:13.679 --> 00:09:14.329 align:start position:0%
for you know invocation counts and
things<00:09:13.800><c> like</c><00:09:13.920><c> that</c>

00:09:14.329 --> 00:09:14.339 align:start position:0%
things like that
 

00:09:14.339 --> 00:09:15.590 align:start position:0%
things like that
the<00:09:14.429><c> interpreter</c><00:09:14.819><c> actually</c><00:09:15.119><c> gives</c><00:09:15.269><c> us</c><00:09:15.389><c> most</c>

00:09:15.590 --> 00:09:15.600 align:start position:0%
the interpreter actually gives us most
 

00:09:15.600 --> 00:09:18.470 align:start position:0%
the interpreter actually gives us most
of<00:09:15.689><c> that</c><00:09:15.809><c> information</c><00:09:16.379><c> for</c><00:09:16.559><c> free</c><00:09:17.420><c> anyway</c><00:09:18.420><c> so</c>

00:09:18.470 --> 00:09:18.480 align:start position:0%
of that information for free anyway so
 

00:09:18.480 --> 00:09:20.720 align:start position:0%
of that information for free anyway so
we<00:09:19.049><c> have</c><00:09:19.379><c> all</c><00:09:19.470><c> this</c><00:09:19.589><c> information</c><00:09:20.189><c> and</c><00:09:20.429><c> then</c><00:09:20.610><c> we</c>

00:09:20.720 --> 00:09:20.730 align:start position:0%
we have all this information and then we
 

00:09:20.730 --> 00:09:22.460 align:start position:0%
we have all this information and then we
identify<00:09:21.209><c> which</c><00:09:21.480><c> methods</c><00:09:21.929><c> are</c><00:09:22.049><c> high</c><00:09:22.139><c> and</c><00:09:22.410><c> we</c>

00:09:22.460 --> 00:09:22.470 align:start position:0%
identify which methods are high and we
 

00:09:22.470 --> 00:09:24.410 align:start position:0%
identify which methods are high and we
only<00:09:22.829><c> just</c><00:09:22.949><c> compiled</c><00:09:23.429><c> those</c><00:09:23.639><c> and</c><00:09:24.089><c> then</c><00:09:24.299><c> the</c>

00:09:24.410 --> 00:09:24.420 align:start position:0%
only just compiled those and then the
 

00:09:24.420 --> 00:09:26.269 align:start position:0%
only just compiled those and then the
interpreted<00:09:24.929><c> ones</c><00:09:25.110><c> just</c><00:09:25.529><c> remain</c><00:09:25.769><c> interpreted</c>

00:09:26.269 --> 00:09:26.279 align:start position:0%
interpreted ones just remain interpreted
 

00:09:26.279 --> 00:09:28.509 align:start position:0%
interpreted ones just remain interpreted
you<00:09:26.519><c> know</c><00:09:26.639><c> so</c><00:09:26.790><c> things</c><00:09:27.119><c> like</c><00:09:27.239><c> static</c>

00:09:28.509 --> 00:09:28.519 align:start position:0%
you know so things like static
 

00:09:28.519 --> 00:09:30.769 align:start position:0%
you know so things like static
initializers<00:09:29.519><c> and</c><00:09:29.790><c> and</c><00:09:29.970><c> other</c><00:09:30.239><c> stuff</c><00:09:30.540><c> that</c>

00:09:30.769 --> 00:09:30.779 align:start position:0%
initializers and and other stuff that
 

00:09:30.779 --> 00:09:33.949 align:start position:0%
initializers and and other stuff that
you<00:09:31.199><c> know</c><00:09:31.290><c> just</c><00:09:31.679><c> there's</c><00:09:31.920><c> no</c><00:09:32.040><c> value</c><00:09:32.459><c> in</c><00:09:32.959><c> paying</c>

00:09:33.949 --> 00:09:33.959 align:start position:0%
you know just there's no value in paying
 

00:09:33.959 --> 00:09:36.139 align:start position:0%
you know just there's no value in paying
the<00:09:34.170><c> overhead</c><00:09:34.559><c> cost</c><00:09:34.829><c> of</c><00:09:35.069><c> compiling</c><00:09:35.459><c> we</c><00:09:35.910><c> just</c>

00:09:36.139 --> 00:09:36.149 align:start position:0%
the overhead cost of compiling we just
 

00:09:36.149 --> 00:09:38.960 align:start position:0%
the overhead cost of compiling we just
avoid<00:09:36.600><c> by</c><00:09:36.749><c> compiling</c><00:09:37.189><c> by</c><00:09:38.189><c> not</c><00:09:38.369><c> compiling</c><00:09:38.730><c> at</c>

00:09:38.960 --> 00:09:38.970 align:start position:0%
avoid by compiling by not compiling at
 

00:09:38.970 --> 00:09:43.429 align:start position:0%
avoid by compiling by not compiling at
all<00:09:40.009><c> but</c><00:09:41.009><c> even</c><00:09:41.939><c> with</c><00:09:42.149><c> hotspots</c><00:09:42.749><c> JIT</c><00:09:43.079><c> that</c>

00:09:43.429 --> 00:09:43.439 align:start position:0%
all but even with hotspots JIT that
 

00:09:43.439 --> 00:09:47.329 align:start position:0%
all but even with hotspots JIT that
there's<00:09:43.679><c> still</c><00:09:43.980><c> some</c><00:09:44.429><c> some</c><00:09:44.850><c> very</c><00:09:45.600><c> bad</c><00:09:46.220><c> kind</c><00:09:47.220><c> of</c>

00:09:47.329 --> 00:09:47.339 align:start position:0%
there's still some some very bad kind of
 

00:09:47.339 --> 00:09:49.249 align:start position:0%
there's still some some very bad kind of
weak<00:09:47.519><c> points</c><00:09:47.879><c> that</c><00:09:48.449><c> that</c><00:09:48.720><c> we</c><00:09:48.839><c> have</c><00:09:48.989><c> to</c><00:09:49.110><c> deal</c>

00:09:49.249 --> 00:09:49.259 align:start position:0%
weak points that that we have to deal
 

00:09:49.259 --> 00:09:52.069 align:start position:0%
weak points that that we have to deal
with<00:09:49.399><c> application</c><00:09:50.399><c> startup</c><00:09:50.759><c> time</c><00:09:50.999><c> is</c><00:09:51.839><c> still</c>

00:09:52.069 --> 00:09:52.079 align:start position:0%
with application startup time is still
 

00:09:52.079 --> 00:09:54.859 align:start position:0%
with application startup time is still
an<00:09:52.199><c> issue</c><00:09:52.610><c> it</c><00:09:53.610><c> takes</c><00:09:53.850><c> you</c><00:09:54.239><c> know</c><00:09:54.360><c> longer</c><00:09:54.749><c> we</c>

00:09:54.859 --> 00:09:54.869 align:start position:0%
an issue it takes you know longer we
 

00:09:54.869 --> 00:09:56.689 align:start position:0%
an issue it takes you know longer we
have<00:09:54.959><c> a</c><00:09:54.989><c> warmup</c><00:09:55.410><c> period</c><00:09:55.619><c> so</c><00:09:55.980><c> even</c><00:09:56.220><c> after</c><00:09:56.549><c> your</c>

00:09:56.689 --> 00:09:56.699 align:start position:0%
have a warmup period so even after your
 

00:09:56.699 --> 00:09:58.759 align:start position:0%
have a warmup period so even after your
application<00:09:57.049><c> starts</c><00:09:58.049><c> responding</c><00:09:58.559><c> to</c>

00:09:58.759 --> 00:09:58.769 align:start position:0%
application starts responding to
 

00:09:58.769 --> 00:10:01.280 align:start position:0%
application starts responding to
incoming<00:09:59.129><c> requests</c><00:09:59.819><c> it</c><00:10:00.389><c> still</c><00:10:00.660><c> may</c><00:10:01.049><c> take</c><00:10:01.259><c> a</c>

00:10:01.280 --> 00:10:01.290 align:start position:0%
incoming requests it still may take a
 

00:10:01.290 --> 00:10:03.319 align:start position:0%
incoming requests it still may take a
while<00:10:01.499><c> before</c><00:10:01.829><c> enough</c><00:10:02.490><c> of</c><00:10:02.639><c> the</c><00:10:02.759><c> hot</c><00:10:02.910><c> methods</c>

00:10:03.319 --> 00:10:03.329 align:start position:0%
while before enough of the hot methods
 

00:10:03.329 --> 00:10:06.470 align:start position:0%
while before enough of the hot methods
get<00:10:04.189><c> compiled</c><00:10:05.189><c> to</c><00:10:05.670><c> machine</c><00:10:05.699><c> code</c><00:10:06.179><c> and</c><00:10:06.420><c> we</c>

00:10:06.470 --> 00:10:06.480 align:start position:0%
get compiled to machine code and we
 

00:10:06.480 --> 00:10:08.600 align:start position:0%
get compiled to machine code and we
start<00:10:06.720><c> seeing</c><00:10:06.779><c> peak</c><00:10:07.199><c> performance</c><00:10:07.829><c> so</c><00:10:08.189><c> startup</c>

00:10:08.600 --> 00:10:08.610 align:start position:0%
start seeing peak performance so startup
 

00:10:08.610 --> 00:10:10.759 align:start position:0%
start seeing peak performance so startup
time<00:10:08.819><c> is</c><00:10:08.999><c> one</c><00:10:09.179><c> measure</c><00:10:09.389><c> and</c><00:10:09.569><c> then</c><00:10:09.959><c> time</c><00:10:10.619><c> to</c>

00:10:10.759 --> 00:10:10.769 align:start position:0%
time is one measure and then time to
 

00:10:10.769 --> 00:10:12.410 align:start position:0%
time is one measure and then time to
peak<00:10:10.949><c> performance</c><00:10:10.980><c> is</c><00:10:11.549><c> another</c><00:10:11.819><c> measure</c><00:10:12.029><c> and</c>

00:10:12.410 --> 00:10:12.420 align:start position:0%
peak performance is another measure and
 

00:10:12.420 --> 00:10:13.669 align:start position:0%
peak performance is another measure and
they're<00:10:12.749><c> both</c><00:10:12.899><c> things</c><00:10:13.259><c> where</c><00:10:13.529><c> there's</c>

00:10:13.669 --> 00:10:13.679 align:start position:0%
they're both things where there's
 

00:10:13.679 --> 00:10:15.350 align:start position:0%
they're both things where there's
possible<00:10:14.160><c> room</c><00:10:14.369><c> for</c><00:10:14.610><c> improvement</c><00:10:15.119><c> in</c><00:10:15.299><c> the</c>

00:10:15.350 --> 00:10:15.360 align:start position:0%
possible room for improvement in the
 

00:10:15.360 --> 00:10:17.869 align:start position:0%
possible room for improvement in the
current<00:10:15.990><c> compilation</c><00:10:16.649><c> model</c><00:10:16.980><c> and</c><00:10:17.429><c> again</c>

00:10:17.869 --> 00:10:17.879 align:start position:0%
current compilation model and again
 

00:10:17.879 --> 00:10:19.699 align:start position:0%
current compilation model and again
we're<00:10:18.269><c> consuming</c><00:10:18.540><c> a</c><00:10:18.689><c> lot</c><00:10:18.809><c> of</c><00:10:18.839><c> resources</c><00:10:19.350><c> most</c>

00:10:19.699 --> 00:10:19.709 align:start position:0%
we're consuming a lot of resources most
 

00:10:19.709 --> 00:10:22.819 align:start position:0%
we're consuming a lot of resources most
notably<00:10:20.069><c> memory</c><00:10:20.480><c> and</c><00:10:21.480><c> as</c><00:10:22.049><c> kind</c><00:10:22.529><c> of</c><00:10:22.559><c> a</c><00:10:22.679><c> side</c>

00:10:22.819 --> 00:10:22.829 align:start position:0%
notably memory and as kind of a side
 

00:10:22.829 --> 00:10:24.919 align:start position:0%
notably memory and as kind of a side
thing<00:10:23.069><c> not</c><00:10:23.399><c> so</c><00:10:23.579><c> much</c><00:10:23.730><c> of</c><00:10:23.850><c> an</c><00:10:23.910><c> issue</c><00:10:23.970><c> with</c>

00:10:24.919 --> 00:10:24.929 align:start position:0%
thing not so much of an issue with
 

00:10:24.929 --> 00:10:26.720 align:start position:0%
thing not so much of an issue with
Oracle's<00:10:25.379><c> product</c><00:10:25.709><c> offerings</c><00:10:26.129><c> but</c><00:10:26.399><c> there</c><00:10:26.579><c> are</c>

00:10:26.720 --> 00:10:26.730 align:start position:0%
Oracle's product offerings but there are
 

00:10:26.730 --> 00:10:29.329 align:start position:0%
Oracle's product offerings but there are
some<00:10:27.629><c> platforms</c><00:10:28.110><c> out</c><00:10:28.259><c> there</c><00:10:28.350><c> that</c><00:10:28.889><c> for</c>

00:10:29.329 --> 00:10:29.339 align:start position:0%
some platforms out there that for
 

00:10:29.339 --> 00:10:31.460 align:start position:0%
some platforms out there that for
whatever<00:10:29.519><c> reason</c><00:10:29.670><c> disallow</c><00:10:30.389><c> the</c><00:10:31.019><c> dynamic</c>

00:10:31.460 --> 00:10:31.470 align:start position:0%
whatever reason disallow the dynamic
 

00:10:31.470 --> 00:10:34.429 align:start position:0%
whatever reason disallow the dynamic
generation<00:10:32.009><c> of</c><00:10:32.389><c> machine</c><00:10:33.389><c> code</c><00:10:33.420><c> at</c><00:10:34.170><c> runtime</c>

00:10:34.429 --> 00:10:34.439 align:start position:0%
generation of machine code at runtime
 

00:10:34.439 --> 00:10:37.160 align:start position:0%
generation of machine code at runtime
and<00:10:34.889><c> so</c><00:10:35.369><c> if</c><00:10:35.639><c> you</c><00:10:36.029><c> wanted</c><00:10:36.299><c> to</c><00:10:36.420><c> run</c><00:10:36.509><c> the</c><00:10:36.689><c> JVM</c><00:10:37.049><c> on</c>

00:10:37.160 --> 00:10:37.170 align:start position:0%
and so if you wanted to run the JVM on
 

00:10:37.170 --> 00:10:38.600 align:start position:0%
and so if you wanted to run the JVM on
them<00:10:37.350><c> you're</c><00:10:37.829><c> kind</c><00:10:38.009><c> of</c><00:10:38.069><c> stuck</c><00:10:38.309><c> with</c><00:10:38.339><c> an</c>

00:10:38.600 --> 00:10:38.610 align:start position:0%
them you're kind of stuck with an
 

00:10:38.610 --> 00:10:40.160 align:start position:0%
them you're kind of stuck with an
interpreter<00:10:39.149><c> unless</c><00:10:39.389><c> you</c><00:10:39.540><c> can</c><00:10:39.660><c> find</c><00:10:39.869><c> some</c><00:10:40.049><c> way</c>

00:10:40.160 --> 00:10:40.170 align:start position:0%
interpreter unless you can find some way
 

00:10:40.170 --> 00:10:42.919 align:start position:0%
interpreter unless you can find some way
around<00:10:40.259><c> that</c><00:10:40.819><c> so</c><00:10:41.819><c> this</c><00:10:42.569><c> is</c><00:10:42.660><c> something</c><00:10:42.779><c> I</c>

00:10:42.919 --> 00:10:42.929 align:start position:0%
around that so this is something I
 

00:10:42.929 --> 00:10:44.780 align:start position:0%
around that so this is something I
talked<00:10:43.139><c> I</c><00:10:43.350><c> talked</c><00:10:43.679><c> about</c><00:10:43.740><c> him</c><00:10:43.980><c> yes</c><00:10:44.429><c> in</c><00:10:44.669><c> my</c>

00:10:44.780 --> 00:10:44.790 align:start position:0%
talked I talked about him yes in my
 

00:10:44.790 --> 00:10:46.069 align:start position:0%
talked I talked about him yes in my
session<00:10:45.119><c> yesterday</c><00:10:45.299><c> and</c><00:10:45.720><c> I</c><00:10:45.779><c> think</c><00:10:45.959><c> those</c>

00:10:46.069 --> 00:10:46.079 align:start position:0%
session yesterday and I think those
 

00:10:46.079 --> 00:10:47.869 align:start position:0%
session yesterday and I think those
people<00:10:46.110><c> are</c><00:10:46.379><c> there</c><00:10:46.829><c> with</c><00:10:46.980><c> us</c><00:10:47.129><c> but</c><00:10:47.339><c> there's</c><00:10:47.699><c> two</c>

00:10:47.869 --> 00:10:47.879 align:start position:0%
people are there with us but there's two
 

00:10:47.879 --> 00:10:50.269 align:start position:0%
people are there with us but there's two
separate<00:10:48.529><c> compilers</c><00:10:49.529><c> that</c><00:10:49.740><c> are</c><00:10:49.829><c> built</c><00:10:50.009><c> into</c>

00:10:50.269 --> 00:10:50.279 align:start position:0%
separate compilers that are built into
 

00:10:50.279 --> 00:10:53.449 align:start position:0%
separate compilers that are built into
the<00:10:50.669><c> hot</c><00:10:51.149><c> spot</c><00:10:51.449><c> a</c><00:10:51.749><c> VM</c><00:10:52.139><c> a</c><00:10:52.470><c> c1</c><00:10:53.009><c> which</c><00:10:53.160><c> is</c><00:10:53.189><c> for</c>

00:10:53.449 --> 00:10:53.459 align:start position:0%
the hot spot a VM a c1 which is for
 

00:10:53.459 --> 00:10:55.429 align:start position:0%
the hot spot a VM a c1 which is for
client<00:10:53.790><c> use</c><00:10:53.970><c> which</c><00:10:54.299><c> kind</c><00:10:54.959><c> of</c><00:10:55.049><c> just</c><00:10:55.230><c> does</c><00:10:55.410><c> a</c>

00:10:55.429 --> 00:10:55.439 align:start position:0%
client use which kind of just does a
 

00:10:55.439 --> 00:10:57.229 align:start position:0%
client use which kind of just does a
quick<00:10:55.679><c> and</c><00:10:55.860><c> dirty</c><00:10:55.949><c> compilation</c><00:10:56.759><c> the</c><00:10:56.879><c> idea</c><00:10:57.149><c> is</c>

00:10:57.229 --> 00:10:57.239 align:start position:0%
quick and dirty compilation the idea is
 

00:10:57.239 --> 00:10:59.210 align:start position:0%
quick and dirty compilation the idea is
to<00:10:57.360><c> kind</c><00:10:57.509><c> of</c><00:10:57.540><c> finish</c><00:10:57.749><c> the</c><00:10:58.290><c> act</c><00:10:58.589><c> of</c><00:10:58.769><c> compiling</c>

00:10:59.210 --> 00:10:59.220 align:start position:0%
to kind of finish the act of compiling
 

00:10:59.220 --> 00:11:01.729 align:start position:0%
to kind of finish the act of compiling
and<00:10:59.669><c> get</c><00:11:00.239><c> that</c><00:11:00.389><c> that</c><00:11:00.689><c> quicker</c><00:11:01.019><c> machine</c>

00:11:01.729 --> 00:11:01.739 align:start position:0%
and get that that quicker machine
 

00:11:01.739 --> 00:11:03.650 align:start position:0%
and get that that quicker machine
language<00:11:02.069><c> version</c><00:11:02.429><c> of</c><00:11:02.549><c> the</c><00:11:02.639><c> method</c><00:11:02.790><c> available</c>

00:11:03.650 --> 00:11:03.660 align:start position:0%
language version of the method available
 

00:11:03.660 --> 00:11:06.289 align:start position:0%
language version of the method available
for<00:11:04.139><c> execution</c><00:11:04.619><c> as</c><00:11:04.739><c> fast</c><00:11:04.980><c> as</c><00:11:05.160><c> possible</c><00:11:05.699><c> then</c>

00:11:06.289 --> 00:11:06.299 align:start position:0%
for execution as fast as possible then
 

00:11:06.299 --> 00:11:09.049 align:start position:0%
for execution as fast as possible then
there's<00:11:06.779><c> C</c><00:11:07.019><c> 2</c><00:11:07.259><c> which</c><00:11:07.829><c> is</c><00:11:08.009><c> the</c><00:11:08.160><c> server</c><00:11:08.399><c> compiler</c>

00:11:09.049 --> 00:11:09.059 align:start position:0%
there's C 2 which is the server compiler
 

00:11:09.059 --> 00:11:11.510 align:start position:0%
there's C 2 which is the server compiler
and<00:11:09.240><c> that</c><00:11:09.720><c> one</c><00:11:09.929><c> spends</c><00:11:10.499><c> a</c><00:11:10.559><c> lot</c><00:11:10.769><c> more</c><00:11:10.799><c> time</c>

00:11:11.510 --> 00:11:11.520 align:start position:0%
and that one spends a lot more time
 

00:11:11.520 --> 00:11:14.720 align:start position:0%
and that one spends a lot more time
ie<00:11:12.000><c> resources</c><00:11:12.870><c> on</c><00:11:13.170><c> on</c><00:11:13.830><c> doing</c><00:11:14.250><c> very</c><00:11:14.459><c> heavy</c>

00:11:14.720 --> 00:11:14.730 align:start position:0%
ie resources on on doing very heavy
 

00:11:14.730 --> 00:11:16.720 align:start position:0%
ie resources on on doing very heavy
optimization<00:11:15.540><c> to</c><00:11:15.690><c> give</c><00:11:15.839><c> you</c><00:11:15.959><c> the</c><00:11:16.140><c> most</c>

00:11:16.720 --> 00:11:16.730 align:start position:0%
optimization to give you the most
 

00:11:16.730 --> 00:11:20.510 align:start position:0%
optimization to give you the most
performant<00:11:17.730><c> code</c><00:11:17.940><c> as</c><00:11:18.209><c> possible</c><00:11:18.589><c> and</c><00:11:19.589><c> that</c><00:11:20.370><c> one</c>

00:11:20.510 --> 00:11:20.520 align:start position:0%
performant code as possible and that one
 

00:11:20.520 --> 00:11:23.210 align:start position:0%
performant code as possible and that one
of<00:11:20.550><c> the</c><00:11:20.700><c> key</c><00:11:20.850><c> differences</c><00:11:21.029><c> here</c><00:11:21.720><c> is</c><00:11:21.870><c> that</c><00:11:22.350><c> c2</c>

00:11:23.210 --> 00:11:23.220 align:start position:0%
of the key differences here is that c2
 

00:11:23.220 --> 00:11:25.670 align:start position:0%
of the key differences here is that c2
can't<00:11:24.209><c> just</c><00:11:24.420><c> run</c><00:11:24.630><c> out</c><00:11:24.660><c> of</c><00:11:24.810><c> the</c><00:11:24.930><c> blue</c><00:11:25.140><c> c2</c>

00:11:25.670 --> 00:11:25.680 align:start position:0%
can't just run out of the blue c2
 

00:11:25.680 --> 00:11:28.160 align:start position:0%
can't just run out of the blue c2
depends<00:11:26.339><c> on</c><00:11:26.490><c> having</c><00:11:27.360><c> a</c><00:11:27.660><c> whole</c><00:11:27.870><c> bunch</c><00:11:28.080><c> of</c>

00:11:28.160 --> 00:11:28.170 align:start position:0%
depends on having a whole bunch of
 

00:11:28.170 --> 00:11:30.290 align:start position:0%
depends on having a whole bunch of
profiling<00:11:28.830><c> data</c><00:11:28.860><c> that</c><00:11:29.610><c> was</c><00:11:29.700><c> collected</c><00:11:29.850><c> by</c><00:11:30.149><c> the</c>

00:11:30.290 --> 00:11:30.300 align:start position:0%
profiling data that was collected by the
 

00:11:30.300 --> 00:11:33.620 align:start position:0%
profiling data that was collected by the
runtime<00:11:30.570><c> before</c><00:11:31.529><c> it</c><00:11:31.820><c> compiles</c><00:11:32.820><c> a</c><00:11:33.060><c> method</c><00:11:33.450><c> and</c>

00:11:33.620 --> 00:11:33.630 align:start position:0%
runtime before it compiles a method and
 

00:11:33.630 --> 00:11:35.600 align:start position:0%
runtime before it compiles a method and
so<00:11:34.110><c> without</c><00:11:34.260><c> that</c><00:11:34.560><c> data</c><00:11:34.740><c> we</c><00:11:34.950><c> can't</c><00:11:35.190><c> really</c><00:11:35.310><c> see</c>

00:11:35.600 --> 00:11:35.610 align:start position:0%
so without that data we can't really see
 

00:11:35.610 --> 00:11:38.780 align:start position:0%
so without that data we can't really see
to<00:11:35.790><c> compile</c><00:11:36.500><c> methods</c><00:11:37.500><c> and</c><00:11:37.800><c> that</c><00:11:38.550><c> will</c><00:11:38.640><c> come</c>

00:11:38.780 --> 00:11:38.790 align:start position:0%
to compile methods and that will come
 

00:11:38.790 --> 00:11:40.720 align:start position:0%
to compile methods and that will come
into<00:11:38.910><c> play</c><00:11:39.149><c> later</c><00:11:39.180><c> and</c><00:11:39.690><c> in</c><00:11:39.870><c> a</c><00:11:39.959><c> few</c><00:11:40.110><c> more</c><00:11:40.200><c> slides</c>

00:11:40.720 --> 00:11:40.730 align:start position:0%
into play later and in a few more slides
 

00:11:40.730 --> 00:11:44.000 align:start position:0%
into play later and in a few more slides
so<00:11:41.730><c> that's</c><00:11:42.720><c> the</c><00:11:42.930><c> current</c><00:11:43.200><c> situation</c><00:11:43.320><c> as</c><00:11:43.860><c> it</c>

00:11:44.000 --> 00:11:44.010 align:start position:0%
so that's the current situation as it
 

00:11:44.010 --> 00:11:47.360 align:start position:0%
so that's the current situation as it
exists<00:11:44.490><c> kind</c><00:11:44.910><c> of</c><00:11:45.000><c> today</c><00:11:45.209><c> or</c><00:11:45.390><c> before</c><00:11:46.200><c> JDK</c><00:11:46.680><c> 9</c><00:11:46.890><c> so</c>

00:11:47.360 --> 00:11:47.370 align:start position:0%
exists kind of today or before JDK 9 so
 

00:11:47.370 --> 00:11:50.000 align:start position:0%
exists kind of today or before JDK 9 so
what<00:11:47.880><c> does</c><00:11:48.029><c> a</c><00:11:48.120><c> Oh</c><00:11:48.149><c> to</c><00:11:48.420><c> bring</c><00:11:48.690><c> a</c><00:11:48.930><c> ot</c><00:11:49.410><c> bringing</c><00:11:49.770><c> to</c>

00:11:50.000 --> 00:11:50.010 align:start position:0%
what does a Oh to bring a ot bringing to
 

00:11:50.010 --> 00:11:52.790 align:start position:0%
what does a Oh to bring a ot bringing to
the<00:11:50.130><c> table</c><00:11:50.459><c> here</c><00:11:50.990><c> well</c><00:11:51.990><c> the</c><00:11:52.110><c> idea</c><00:11:52.350><c> is</c><00:11:52.410><c> of</c>

00:11:52.790 --> 00:11:52.800 align:start position:0%
the table here well the idea is of
 

00:11:52.800 --> 00:11:54.500 align:start position:0%
the table here well the idea is of
course<00:11:52.830><c> you</c><00:11:53.399><c> know</c><00:11:53.490><c> because</c><00:11:53.760><c> it's</c><00:11:53.880><c> ahead</c><00:11:54.270><c> of</c>

00:11:54.500 --> 00:11:54.510 align:start position:0%
course you know because it's ahead of
 

00:11:54.510 --> 00:11:56.780 align:start position:0%
course you know because it's ahead of
time<00:11:54.839><c> is</c><00:11:55.110><c> to</c><00:11:55.470><c> generate</c><00:11:55.920><c> machine</c><00:11:56.100><c> code</c><00:11:56.279><c> before</c>

00:11:56.780 --> 00:11:56.790 align:start position:0%
time is to generate machine code before
 

00:11:56.790 --> 00:11:58.970 align:start position:0%
time is to generate machine code before
the<00:11:57.570><c> runtime</c><00:11:57.959><c> before</c><00:11:58.320><c> we</c><00:11:58.440><c> actually</c><00:11:58.589><c> run</c><00:11:58.890><c> the</c>

00:11:58.970 --> 00:11:58.980 align:start position:0%
the runtime before we actually run the
 

00:11:58.980 --> 00:12:00.920 align:start position:0%
the runtime before we actually run the
application<00:11:59.610><c> so</c><00:12:00.209><c> this</c><00:12:00.300><c> is</c><00:12:00.390><c> kind</c><00:12:00.570><c> of</c><00:12:00.600><c> just</c><00:12:00.660><c> like</c>

00:12:00.920 --> 00:12:00.930 align:start position:0%
application so this is kind of just like
 

00:12:00.930 --> 00:12:03.260 align:start position:0%
application so this is kind of just like
like<00:12:01.290><c> traditional</c><00:12:01.830><c> static</c><00:12:02.070><c> compilation</c><00:12:03.029><c> and</c>

00:12:03.260 --> 00:12:03.270 align:start position:0%
like traditional static compilation and
 

00:12:03.270 --> 00:12:06.380 align:start position:0%
like traditional static compilation and
so<00:12:04.140><c> the</c><00:12:04.440><c> JVM</c><00:12:04.830><c> hopefully</c><00:12:05.279><c> can</c><00:12:05.430><c> find</c><00:12:05.700><c> and</c><00:12:06.149><c> load</c>

00:12:06.380 --> 00:12:06.390 align:start position:0%
so the JVM hopefully can find and load
 

00:12:06.390 --> 00:12:09.260 align:start position:0%
so the JVM hopefully can find and load
that<00:12:06.899><c> code</c><00:12:07.200><c> during</c><00:12:07.649><c> runtime</c><00:12:07.830><c> and</c><00:12:08.310><c> then</c><00:12:08.880><c> we</c>

00:12:09.260 --> 00:12:09.270 align:start position:0%
that code during runtime and then we
 

00:12:09.270 --> 00:12:12.340 align:start position:0%
that code during runtime and then we
bypass<00:12:10.170><c> the</c><00:12:10.830><c> latency</c><00:12:11.339><c> in</c><00:12:11.430><c> the</c><00:12:11.550><c> overhead</c><00:12:11.940><c> of</c>

00:12:12.340 --> 00:12:12.350 align:start position:0%
bypass the latency in the overhead of
 

00:12:12.350 --> 00:12:15.320 align:start position:0%
bypass the latency in the overhead of
compilation<00:12:13.350><c> work</c><00:12:13.980><c> while</c><00:12:14.250><c> we're</c><00:12:14.430><c> running</c><00:12:14.550><c> so</c>

00:12:15.320 --> 00:12:15.330 align:start position:0%
compilation work while we're running so
 

00:12:15.330 --> 00:12:17.990 align:start position:0%
compilation work while we're running so
this<00:12:16.140><c> is</c><00:12:16.350><c> the</c><00:12:16.560><c> the</c><00:12:17.070><c> kind</c><00:12:17.310><c> of</c><00:12:17.339><c> standard</c><00:12:17.730><c> model</c>

00:12:17.990 --> 00:12:18.000 align:start position:0%
this is the the kind of standard model
 

00:12:18.000 --> 00:12:19.430 align:start position:0%
this is the the kind of standard model
that<00:12:18.149><c> we</c><00:12:18.240><c> have</c><00:12:18.390><c> today</c><00:12:18.570><c> again</c><00:12:19.050><c> we</c><00:12:19.170><c> just</c><00:12:19.290><c> saw</c>

00:12:19.430 --> 00:12:19.440 align:start position:0%
that we have today again we just saw
 

00:12:19.440 --> 00:12:22.430 align:start position:0%
that we have today again we just saw
this<00:12:19.589><c> in</c><00:12:19.770><c> a</c><00:12:19.800><c> slide</c><00:12:20.010><c> a</c><00:12:20.250><c> few</c><00:12:20.459><c> slides</c><00:12:20.670><c> ago</c><00:12:20.820><c> and</c><00:12:21.440><c> the</c>

00:12:22.430 --> 00:12:22.440 align:start position:0%
this in a slide a few slides ago and the
 

00:12:22.440 --> 00:12:24.590 align:start position:0%
this in a slide a few slides ago and the
the<00:12:22.770><c> addition</c><00:12:23.279><c> here</c><00:12:23.310><c> is</c><00:12:23.700><c> that</c><00:12:24.060><c> now</c><00:12:24.240><c> we</c><00:12:24.300><c> have</c>

00:12:24.590 --> 00:12:24.600 align:start position:0%
the addition here is that now we have
 

00:12:24.600 --> 00:12:28.819 align:start position:0%
the addition here is that now we have
this<00:12:24.930><c> new</c><00:12:25.170><c> tool</c><00:12:25.440><c> this.j</c><00:12:26.220><c> a</c><00:12:26.300><c> OTC</c><00:12:27.300><c> Java</c><00:12:28.290><c> ahead</c><00:12:28.709><c> of</c>

00:12:28.819 --> 00:12:28.829 align:start position:0%
this new tool this.j a OTC Java ahead of
 

00:12:28.829 --> 00:12:30.829 align:start position:0%
this new tool this.j a OTC Java ahead of
time<00:12:29.010><c> compiler</c><00:12:29.610><c> and</c><00:12:29.820><c> it's</c><00:12:30.300><c> going</c><00:12:30.420><c> to</c><00:12:30.480><c> give</c><00:12:30.690><c> you</c>

00:12:30.829 --> 00:12:30.839 align:start position:0%
time compiler and it's going to give you
 

00:12:30.839 --> 00:12:33.740 align:start position:0%
time compiler and it's going to give you
an<00:12:31.140><c> e</c><00:12:31.350><c> LF</c><00:12:31.589><c> shared</c><00:12:32.430><c> object</c><00:12:32.940><c> or</c><00:12:33.060><c> shared</c><00:12:33.270><c> library</c>

00:12:33.740 --> 00:12:33.750 align:start position:0%
an e LF shared object or shared library
 

00:12:33.750 --> 00:12:38.079 align:start position:0%
an e LF shared object or shared library
that<00:12:34.350><c> you</c><00:12:34.980><c> can</c><00:12:35.010><c> load</c><00:12:35.610><c> into</c><00:12:36.000><c> the</c><00:12:36.270><c> runtime</c><00:12:36.810><c> and</c>

00:12:38.079 --> 00:12:38.089 align:start position:0%
that you can load into the runtime and
 

00:12:38.089 --> 00:12:41.240 align:start position:0%
that you can load into the runtime and
use<00:12:39.089><c> that</c><00:12:39.300><c> pre-existing</c><00:12:39.899><c> machine</c><00:12:40.200><c> code</c><00:12:40.470><c> to</c>

00:12:41.240 --> 00:12:41.250 align:start position:0%
use that pre-existing machine code to
 

00:12:41.250 --> 00:12:43.280 align:start position:0%
use that pre-existing machine code to
startup<00:12:41.579><c> as</c><00:12:41.700><c> fast</c><00:12:41.910><c> as</c><00:12:42.089><c> possible</c><00:12:42.600><c> but</c><00:12:43.110><c> there's</c>

00:12:43.280 --> 00:12:43.290 align:start position:0%
startup as fast as possible but there's
 

00:12:43.290 --> 00:12:45.440 align:start position:0%
startup as fast as possible but there's
some<00:12:43.410><c> other</c><00:12:43.529><c> benefits</c><00:12:43.980><c> here</c><00:12:44.220><c> and</c><00:12:44.399><c> so</c><00:12:45.060><c> in</c><00:12:45.360><c> a</c>

00:12:45.440 --> 00:12:45.450 align:start position:0%
some other benefits here and so in a
 

00:12:45.450 --> 00:12:46.880 align:start position:0%
some other benefits here and so in a
traditional<00:12:45.570><c> model</c><00:12:46.529><c> where</c><00:12:46.560><c> you</c><00:12:46.860><c> have</c>

00:12:46.880 --> 00:12:46.890 align:start position:0%
traditional model where you have
 

00:12:46.890 --> 00:12:48.500 align:start position:0%
traditional model where you have
multiple<00:12:47.190><c> JVM</c><00:12:47.790><c> running</c><00:12:48.209><c> and</c><00:12:48.329><c> they're</c><00:12:48.420><c> all</c>

00:12:48.500 --> 00:12:48.510 align:start position:0%
multiple JVM running and they're all
 

00:12:48.510 --> 00:12:50.300 align:start position:0%
multiple JVM running and they're all
running<00:12:48.660><c> the</c><00:12:48.899><c> same</c><00:12:49.079><c> code</c><00:12:49.320><c> like</c><00:12:49.649><c> say</c><00:12:49.860><c> some</c><00:12:50.100><c> sort</c>

00:12:50.300 --> 00:12:50.310 align:start position:0%
running the same code like say some sort
 

00:12:50.310 --> 00:12:53.360 align:start position:0%
running the same code like say some sort
of<00:12:50.430><c> of</c><00:12:51.020><c> redundancy</c><00:12:52.020><c> or</c><00:12:52.050><c> clustering</c><00:12:52.620><c> we've</c>

00:12:53.360 --> 00:12:53.370 align:start position:0%
of of redundancy or clustering we've
 

00:12:53.370 --> 00:12:59.150 align:start position:0%
of of redundancy or clustering we've
been<00:12:53.520><c> the</c><00:12:53.640><c> same</c><00:12:54.079><c> OS</c><00:12:55.079><c> VM</c><00:12:55.410><c> you</c><00:12:55.680><c> each</c><00:12:57.589><c> JVM</c><00:12:58.589><c> kind</c><00:12:59.070><c> of</c>

00:12:59.150 --> 00:12:59.160 align:start position:0%
been the same OS VM you each JVM kind of
 

00:12:59.160 --> 00:13:01.370 align:start position:0%
been the same OS VM you each JVM kind of
gets<00:12:59.310><c> its</c><00:12:59.490><c> own</c><00:12:59.610><c> copy</c><00:12:59.880><c> of</c><00:13:00.270><c> it</c><00:13:00.750><c> so</c><00:13:01.050><c> not</c><00:13:01.200><c> only</c>

00:13:01.370 --> 00:13:01.380 align:start position:0%
gets its own copy of it so not only
 

00:13:01.380 --> 00:13:03.250 align:start position:0%
gets its own copy of it so not only
you're<00:13:01.529><c> paying</c><00:13:01.770><c> the</c><00:13:01.860><c> performance</c><00:13:02.370><c> cost</c><00:13:02.610><c> of</c>

00:13:03.250 --> 00:13:03.260 align:start position:0%
you're paying the performance cost of
 

00:13:03.260 --> 00:13:05.510 align:start position:0%
you're paying the performance cost of
compiling<00:13:04.260><c> it</c><00:13:04.500><c> all</c><00:13:04.589><c> those</c><00:13:04.770><c> times</c><00:13:05.040><c> but</c><00:13:05.339><c> then</c>

00:13:05.510 --> 00:13:05.520 align:start position:0%
compiling it all those times but then
 

00:13:05.520 --> 00:13:07.430 align:start position:0%
compiling it all those times but then
once<00:13:05.700><c> you</c><00:13:05.820><c> have</c><00:13:06.000><c> the</c><00:13:06.149><c> output</c><00:13:06.600><c> of</c><00:13:06.630><c> that</c><00:13:06.930><c> act</c><00:13:07.260><c> of</c>

00:13:07.430 --> 00:13:07.440 align:start position:0%
once you have the output of that act of
 

00:13:07.440 --> 00:13:08.930 align:start position:0%
once you have the output of that act of
compilation<00:13:07.890><c> once</c><00:13:08.250><c> you</c><00:13:08.339><c> have</c><00:13:08.520><c> the</c><00:13:08.670><c> actual</c>

00:13:08.930 --> 00:13:08.940 align:start position:0%
compilation once you have the actual
 

00:13:08.940 --> 00:13:10.819 align:start position:0%
compilation once you have the actual
machine<00:13:09.060><c> code</c><00:13:09.480><c> that</c><00:13:09.720><c> has</c><00:13:10.230><c> to</c><00:13:10.350><c> be</c><00:13:10.410><c> kept</c><00:13:10.620><c> in</c><00:13:10.709><c> the</c>

00:13:10.819 --> 00:13:10.829 align:start position:0%
machine code that has to be kept in the
 

00:13:10.829 --> 00:13:12.980 align:start position:0%
machine code that has to be kept in the
code<00:13:11.010><c> cache</c><00:13:11.250><c> and</c><00:13:11.640><c> the</c><00:13:12.089><c> code</c><00:13:12.270><c> cache</c><00:13:12.480><c> takes</c><00:13:12.779><c> up</c><00:13:12.930><c> a</c>

00:13:12.980 --> 00:13:12.990 align:start position:0%
code cache and the code cache takes up a
 

00:13:12.990 --> 00:13:14.780 align:start position:0%
code cache and the code cache takes up a
lot<00:13:13.140><c> of</c><00:13:13.170><c> space</c><00:13:13.440><c> especially</c><00:13:14.190><c> with</c><00:13:14.670><c> the</c>

00:13:14.780 --> 00:13:14.790 align:start position:0%
lot of space especially with the
 

00:13:14.790 --> 00:13:16.400 align:start position:0%
lot of space especially with the
introduction<00:13:15.089><c> of</c><00:13:15.300><c> tiered</c><00:13:15.540><c> compilation</c><00:13:16.230><c> our</c>

00:13:16.400 --> 00:13:16.410 align:start position:0%
introduction of tiered compilation our
 

00:13:16.410 --> 00:13:18.680 align:start position:0%
introduction of tiered compilation our
code<00:13:16.589><c> cache</c><00:13:16.829><c> size</c><00:13:17.160><c> expanded</c><00:13:17.760><c> by</c><00:13:18.149><c> about</c><00:13:18.360><c> five</c>

00:13:18.680 --> 00:13:18.690 align:start position:0%
code cache size expanded by about five
 

00:13:18.690 --> 00:13:22.699 align:start position:0%
code cache size expanded by about five
times<00:13:19.050><c> and</c><00:13:19.440><c> so</c><00:13:20.190><c> if</c><00:13:20.910><c> you</c><00:13:21.029><c> run</c><00:13:21.150><c> a</c><00:13:21.209><c> lot</c><00:13:21.449><c> of</c><00:13:21.570><c> JVMs</c><00:13:22.020><c> on</c>

00:13:22.699 --> 00:13:22.709 align:start position:0%
times and so if you run a lot of JVMs on
 

00:13:22.709 --> 00:13:24.620 align:start position:0%
times and so if you run a lot of JVMs on
the<00:13:23.190><c> same</c><00:13:23.430><c> OS</c><00:13:23.790><c> instance</c>

00:13:24.620 --> 00:13:24.630 align:start position:0%
the same OS instance
 

00:13:24.630 --> 00:13:26.000 align:start position:0%
the same OS instance
that<00:13:24.960><c> can</c><00:13:25.110><c> actually</c><00:13:25.260><c> be</c><00:13:25.470><c> a</c><00:13:25.620><c> lot</c><00:13:25.890><c> of</c>

00:13:26.000 --> 00:13:26.010 align:start position:0%
that can actually be a lot of
 

00:13:26.010 --> 00:13:29.750 align:start position:0%
that can actually be a lot of
unnecessary<00:13:26.240><c> redundant</c><00:13:27.240><c> overhead</c><00:13:27.720><c> so</c><00:13:28.760><c> äôt</c>

00:13:29.750 --> 00:13:29.760 align:start position:0%
unnecessary redundant overhead so äôt
 

00:13:29.760 --> 00:13:32.440 align:start position:0%
unnecessary redundant overhead so äôt
allows<00:13:30.270><c> us</c><00:13:30.570><c> to</c><00:13:30.990><c> create</c><00:13:31.380><c> these</c><00:13:31.860><c> read-only</c>

00:13:32.440 --> 00:13:32.450 align:start position:0%
allows us to create these read-only
 

00:13:32.450 --> 00:13:35.570 align:start position:0%
allows us to create these read-only
segments<00:13:33.450><c> in</c><00:13:33.540><c> memory</c><00:13:33.870><c> that</c><00:13:34.140><c> have</c><00:13:34.590><c> the</c><00:13:35.040><c> the</c>

00:13:35.570 --> 00:13:35.580 align:start position:0%
segments in memory that have the the
 

00:13:35.580 --> 00:13:38.090 align:start position:0%
segments in memory that have the the
machine<00:13:36.240><c> code</c><00:13:36.420><c> in</c><00:13:36.600><c> them</c><00:13:36.750><c> and</c><00:13:36.960><c> the</c><00:13:37.680><c> commission</c>

00:13:38.090 --> 00:13:38.100 align:start position:0%
machine code in them and the commission
 

00:13:38.100 --> 00:13:40.790 align:start position:0%
machine code in them and the commission
that<00:13:38.250><c> can</c><00:13:38.400><c> be</c><00:13:38.490><c> shared</c><00:13:38.760><c> across</c><00:13:39.260><c> multiple</c><00:13:40.260><c> JVM</c>

00:13:40.790 --> 00:13:40.800 align:start position:0%
that can be shared across multiple JVM
 

00:13:40.800 --> 00:13:42.860 align:start position:0%
that can be shared across multiple JVM
instances<00:13:41.370><c> and</c><00:13:41.730><c> so</c><00:13:41.760><c> we</c><00:13:42.300><c> have</c><00:13:42.450><c> a</c><00:13:42.480><c> density</c>

00:13:42.860 --> 00:13:42.870 align:start position:0%
instances and so we have a density
 

00:13:42.870 --> 00:13:44.570 align:start position:0%
instances and so we have a density
improvement<00:13:43.560><c> where</c><00:13:43.830><c> if</c><00:13:44.100><c> you're</c><00:13:44.250><c> deploying</c>

00:13:44.570 --> 00:13:44.580 align:start position:0%
improvement where if you're deploying
 

00:13:44.580 --> 00:13:46.280 align:start position:0%
improvement where if you're deploying
all<00:13:44.790><c> these</c><00:13:44.940><c> different</c><00:13:45.210><c> gems</c><00:13:45.510><c> to</c><00:13:45.690><c> the</c><00:13:45.780><c> cloud</c>

00:13:46.280 --> 00:13:46.290 align:start position:0%
all these different gems to the cloud
 

00:13:46.290 --> 00:13:48.560 align:start position:0%
all these different gems to the cloud
the<00:13:46.890><c> total</c><00:13:47.250><c> consumed</c><00:13:47.730><c> memory</c><00:13:48.090><c> is</c><00:13:48.240><c> going</c><00:13:48.420><c> to</c><00:13:48.480><c> be</c>

00:13:48.560 --> 00:13:48.570 align:start position:0%
the total consumed memory is going to be
 

00:13:48.570 --> 00:13:51.710 align:start position:0%
the total consumed memory is going to be
less<00:13:49.100><c> so</c><00:13:50.100><c> there's</c><00:13:50.730><c> a</c><00:13:50.760><c> lot</c><00:13:50.880><c> of</c><00:13:51.000><c> advantages</c><00:13:51.180><c> here</c>

00:13:51.710 --> 00:13:51.720 align:start position:0%
less so there's a lot of advantages here
 

00:13:51.720 --> 00:13:53.330 align:start position:0%
less so there's a lot of advantages here
it's<00:13:52.260><c> going</c><00:13:52.350><c> to</c><00:13:52.410><c> give</c><00:13:52.500><c> you</c><00:13:52.620><c> faster</c><00:13:53.010><c> startup</c>

00:13:53.330 --> 00:13:53.340 align:start position:0%
it's going to give you faster startup
 

00:13:53.340 --> 00:13:56.090 align:start position:0%
it's going to give you faster startup
times<00:13:53.580><c> this</c><00:13:54.510><c> this</c><00:13:54.570><c> is</c><00:13:54.990><c> just</c><00:13:55.230><c> you</c><00:13:55.650><c> know</c><00:13:55.740><c> as</c><00:13:55.950><c> soon</c>

00:13:56.090 --> 00:13:56.100 align:start position:0%
times this this is just you know as soon
 

00:13:56.100 --> 00:13:58.040 align:start position:0%
times this this is just you know as soon
as<00:13:56.220><c> your</c><00:13:56.430><c> your</c><00:13:56.640><c> application</c><00:13:57.180><c> is</c><00:13:57.450><c> ready</c><00:13:57.870><c> to</c>

00:13:58.040 --> 00:13:58.050 align:start position:0%
as your your application is ready to
 

00:13:58.050 --> 00:13:59.690 align:start position:0%
as your your application is ready to
start<00:13:58.290><c> actually</c><00:13:58.650><c> taking</c><00:13:58.830><c> and</c><00:13:59.250><c> processing</c>

00:13:59.690 --> 00:13:59.700 align:start position:0%
start actually taking and processing
 

00:13:59.700 --> 00:14:02.300 align:start position:0%
start actually taking and processing
requests<00:14:00.240><c> that's</c><00:14:00.810><c> going</c><00:14:01.020><c> to</c><00:14:01.080><c> improve</c><00:14:01.350><c> then</c><00:14:02.190><c> we</c>

00:14:02.300 --> 00:14:02.310 align:start position:0%
requests that's going to improve then we
 

00:14:02.310 --> 00:14:05.750 align:start position:0%
requests that's going to improve then we
have<00:14:02.720><c> beyond</c><00:14:03.720><c> that</c><00:14:03.930><c> faster</c><00:14:04.800><c> warmup</c><00:14:05.190><c> times</c><00:14:05.430><c> or</c>

00:14:05.750 --> 00:14:05.760 align:start position:0%
have beyond that faster warmup times or
 

00:14:05.760 --> 00:14:09.290 align:start position:0%
have beyond that faster warmup times or
less<00:14:06.330><c> warmup</c><00:14:06.990><c> time</c><00:14:07.020><c> and</c><00:14:07.500><c> so</c><00:14:08.090><c> even</c><00:14:09.090><c> though</c><00:14:09.150><c> it's</c>

00:14:09.290 --> 00:14:09.300 align:start position:0%
less warmup time and so even though it's
 

00:14:09.300 --> 00:14:11.330 align:start position:0%
less warmup time and so even though it's
taking<00:14:09.630><c> requests</c><00:14:10.140><c> like</c><00:14:10.620><c> I</c><00:14:10.710><c> said</c><00:14:10.890><c> a</c><00:14:10.920><c> few</c><00:14:10.980><c> slides</c>

00:14:11.330 --> 00:14:11.340 align:start position:0%
taking requests like I said a few slides
 

00:14:11.340 --> 00:14:12.830 align:start position:0%
taking requests like I said a few slides
earlier<00:14:11.520><c> it</c><00:14:12.000><c> takes</c><00:14:12.180><c> a</c><00:14:12.270><c> little</c><00:14:12.450><c> while</c><00:14:12.600><c> before</c>

00:14:12.830 --> 00:14:12.840 align:start position:0%
earlier it takes a little while before
 

00:14:12.840 --> 00:14:14.930 align:start position:0%
earlier it takes a little while before
you<00:14:13.080><c> reach</c><00:14:13.290><c> peak</c><00:14:13.530><c> performance</c><00:14:14.100><c> but</c><00:14:14.370><c> with</c><00:14:14.460><c> äôt</c>

00:14:14.930 --> 00:14:14.940 align:start position:0%
you reach peak performance but with äôt
 

00:14:14.940 --> 00:14:16.880 align:start position:0%
you reach peak performance but with äôt
because<00:14:15.690><c> a</c><00:14:15.720><c> lot</c><00:14:15.900><c> of</c><00:14:15.930><c> that</c><00:14:16.110><c> those</c><00:14:16.350><c> hot</c><00:14:16.680><c> methods</c>

00:14:16.880 --> 00:14:16.890 align:start position:0%
because a lot of that those hot methods
 

00:14:16.890 --> 00:14:19.520 align:start position:0%
because a lot of that those hot methods
are<00:14:17.400><c> already</c><00:14:18.090><c> going</c><00:14:18.180><c> to</c><00:14:18.270><c> be</c><00:14:18.360><c> available</c><00:14:18.900><c> we</c><00:14:19.380><c> can</c>

00:14:19.520 --> 00:14:19.530 align:start position:0%
are already going to be available we can
 

00:14:19.530 --> 00:14:21.560 align:start position:0%
are already going to be available we can
reach<00:14:19.710><c> peak</c><00:14:19.950><c> performance</c><00:14:20.490><c> much</c><00:14:20.700><c> faster</c><00:14:21.240><c> and</c>

00:14:21.560 --> 00:14:21.570 align:start position:0%
reach peak performance much faster and
 

00:14:21.570 --> 00:14:23.240 align:start position:0%
reach peak performance much faster and
of<00:14:22.020><c> course</c><00:14:22.230><c> because</c><00:14:22.710><c> we're</c><00:14:22.860><c> not</c><00:14:22.950><c> doing</c><00:14:23.160><c> that</c>

00:14:23.240 --> 00:14:23.250 align:start position:0%
of course because we're not doing that
 

00:14:23.250 --> 00:14:25.580 align:start position:0%
of course because we're not doing that
compilation<00:14:23.730><c> at</c><00:14:23.820><c> runtime</c><00:14:24.000><c> we</c><00:14:24.630><c> also</c><00:14:24.780><c> have</c><00:14:25.110><c> less</c>

00:14:25.580 --> 00:14:25.590 align:start position:0%
compilation at runtime we also have less
 

00:14:25.590 --> 00:14:28.910 align:start position:0%
compilation at runtime we also have less
memory<00:14:26.040><c> footprint</c><00:14:26.460><c> we</c><00:14:26.700><c> have</c><00:14:26.910><c> a</c><00:14:27.410><c> less</c><00:14:28.410><c> overhead</c>

00:14:28.910 --> 00:14:28.920 align:start position:0%
memory footprint we have a less overhead
 

00:14:28.920 --> 00:14:31.220 align:start position:0%
memory footprint we have a less overhead
for<00:14:29.400><c> compilation</c><00:14:30.000><c> to</c><00:14:30.540><c> compete</c><00:14:30.870><c> with</c><00:14:30.990><c> your</c>

00:14:31.220 --> 00:14:31.230 align:start position:0%
for compilation to compete with your
 

00:14:31.230 --> 00:14:32.990 align:start position:0%
for compilation to compete with your
execution<00:14:31.830><c> threads</c><00:14:32.100><c> for</c><00:14:32.310><c> your</c><00:14:32.400><c> application</c>

00:14:32.990 --> 00:14:33.000 align:start position:0%
execution threads for your application
 

00:14:33.000 --> 00:14:36.440 align:start position:0%
execution threads for your application
that<00:14:33.150><c> are</c><00:14:33.210><c> doing</c><00:14:33.480><c> real</c><00:14:33.660><c> work</c><00:14:33.810><c> for</c><00:14:34.080><c> you</c><00:14:34.310><c> and</c><00:14:35.450><c> of</c>

00:14:36.440 --> 00:14:36.450 align:start position:0%
that are doing real work for you and of
 

00:14:36.450 --> 00:14:37.730 align:start position:0%
that are doing real work for you and of
course<00:14:36.690><c> we're</c><00:14:36.840><c> getting</c><00:14:37.020><c> the</c><00:14:37.110><c> space</c><00:14:37.320><c> savings</c>

00:14:37.730 --> 00:14:37.740 align:start position:0%
course we're getting the space savings
 

00:14:37.740 --> 00:14:39.320 align:start position:0%
course we're getting the space savings
the<00:14:37.980><c> density</c><00:14:38.430><c> improvements</c><00:14:39.030><c> if</c><00:14:39.150><c> you're</c>

00:14:39.320 --> 00:14:39.330 align:start position:0%
the density improvements if you're
 

00:14:39.330 --> 00:14:41.270 align:start position:0%
the density improvements if you're
running<00:14:39.510><c> multiple</c><00:14:39.840><c> JVMs</c><00:14:40.410><c> that</c><00:14:40.860><c> are</c><00:14:41.100><c> running</c>

00:14:41.270 --> 00:14:41.280 align:start position:0%
running multiple JVMs that are running
 

00:14:41.280 --> 00:14:44.750 align:start position:0%
running multiple JVMs that are running
the<00:14:41.460><c> same</c><00:14:41.640><c> code</c><00:14:41.910><c> and</c><00:14:42.270><c> now</c><00:14:43.230><c> we</c><00:14:43.290><c> can</c><00:14:43.680><c> run</c><00:14:44.070><c> on</c><00:14:44.370><c> on</c>

00:14:44.750 --> 00:14:44.760 align:start position:0%
the same code and now we can run on on
 

00:14:44.760 --> 00:14:46.700 align:start position:0%
the same code and now we can run on on
you<00:14:45.480><c> know</c><00:14:45.570><c> platforms</c><00:14:46.140><c> that</c><00:14:46.350><c> for</c><00:14:46.560><c> whatever</c>

00:14:46.700 --> 00:14:46.710 align:start position:0%
you know platforms that for whatever
 

00:14:46.710 --> 00:14:49.610 align:start position:0%
you know platforms that for whatever
reason<00:14:46.950><c> might</c><00:14:47.370><c> disallow</c><00:14:47.960><c> runtime</c><00:14:48.960><c> generation</c>

00:14:49.610 --> 00:14:49.620 align:start position:0%
reason might disallow runtime generation
 

00:14:49.620 --> 00:14:54.020 align:start position:0%
reason might disallow runtime generation
of<00:14:49.820><c> machine</c><00:14:50.820><c> code</c><00:14:51.650><c> so</c><00:14:52.650><c> I</c><00:14:52.920><c> have</c><00:14:53.460><c> little</c><00:14:53.850><c> stars</c>

00:14:54.020 --> 00:14:54.030 align:start position:0%
of machine code so I have little stars
 

00:14:54.030 --> 00:14:55.280 align:start position:0%
of machine code so I have little stars
next<00:14:54.300><c> to</c><00:14:54.450><c> all</c><00:14:54.510><c> this</c><00:14:54.660><c> so</c><00:14:54.810><c> what</c><00:14:54.900><c> I'm</c><00:14:54.990><c> saying</c><00:14:55.140><c> is</c>

00:14:55.280 --> 00:14:55.290 align:start position:0%
next to all this so what I'm saying is
 

00:14:55.290 --> 00:14:58.130 align:start position:0%
next to all this so what I'm saying is
your<00:14:55.740><c> mileage</c><00:14:56.100><c> may</c><00:14:56.130><c> vary</c><00:14:56.310><c> and</c><00:14:56.880><c> what</c><00:14:57.840><c> I</c><00:14:57.960><c> mean</c><00:14:58.080><c> by</c>

00:14:58.130 --> 00:14:58.140 align:start position:0%
your mileage may vary and what I mean by
 

00:14:58.140 --> 00:14:59.960 align:start position:0%
your mileage may vary and what I mean by
that<00:14:58.410><c> it's</c><00:14:58.920><c> like</c><00:14:59.070><c> a</c><00:14:59.100><c> lot</c><00:14:59.280><c> of</c><00:14:59.430><c> options</c><00:14:59.820><c> like</c>

00:14:59.960 --> 00:14:59.970 align:start position:0%
that it's like a lot of options like
 

00:14:59.970 --> 00:15:03.290 align:start position:0%
that it's like a lot of options like
like<00:15:00.510><c> tiered</c><00:15:01.200><c> compilation</c><00:15:01.940><c> or</c><00:15:02.940><c> different</c>

00:15:03.290 --> 00:15:03.300 align:start position:0%
like tiered compilation or different
 

00:15:03.300 --> 00:15:06.890 align:start position:0%
like tiered compilation or different
different<00:15:03.780><c> GCC's</c><00:15:04.610><c> garbage</c><00:15:05.610><c> collectors</c><00:15:06.090><c> you</c>

00:15:06.890 --> 00:15:06.900 align:start position:0%
different GCC's garbage collectors you
 

00:15:06.900 --> 00:15:09.110 align:start position:0%
different GCC's garbage collectors you
will<00:15:07.020><c> find</c><00:15:07.320><c> that</c><00:15:07.560><c> some</c><00:15:08.040><c> applications</c><00:15:08.670><c> benefit</c>

00:15:09.110 --> 00:15:09.120 align:start position:0%
will find that some applications benefit
 

00:15:09.120 --> 00:15:10.820 align:start position:0%
will find that some applications benefit
from<00:15:09.300><c> these</c><00:15:09.450><c> changes</c><00:15:09.930><c> and</c><00:15:10.080><c> improvements</c><00:15:10.650><c> and</c>

00:15:10.820 --> 00:15:10.830 align:start position:0%
from these changes and improvements and
 

00:15:10.830 --> 00:15:12.530 align:start position:0%
from these changes and improvements and
other<00:15:11.190><c> ones</c><00:15:11.430><c> might</c><00:15:11.610><c> even</c><00:15:11.760><c> have</c><00:15:12.000><c> performance</c>

00:15:12.530 --> 00:15:12.540 align:start position:0%
other ones might even have performance
 

00:15:12.540 --> 00:15:14.510 align:start position:0%
other ones might even have performance
regressions<00:15:12.750><c> from</c><00:15:13.290><c> it</c><00:15:13.440><c> it's</c><00:15:13.920><c> very</c><00:15:14.190><c> hard</c><00:15:14.340><c> to</c>

00:15:14.510 --> 00:15:14.520 align:start position:0%
regressions from it it's very hard to
 

00:15:14.520 --> 00:15:16.550 align:start position:0%
regressions from it it's very hard to
say<00:15:14.760><c> there's</c><00:15:15.060><c> no</c><00:15:15.210><c> silver</c><00:15:15.480><c> bullet</c><00:15:15.600><c> that</c><00:15:16.170><c> kind</c>

00:15:16.550 --> 00:15:16.560 align:start position:0%
say there's no silver bullet that kind
 

00:15:16.560 --> 00:15:19.400 align:start position:0%
say there's no silver bullet that kind
of<00:15:16.590><c> improves</c><00:15:17.040><c> all</c><00:15:17.400><c> cases</c><00:15:17.730><c> and</c><00:15:18.240><c> that's</c><00:15:19.140><c> one</c><00:15:19.350><c> of</c>

00:15:19.400 --> 00:15:19.410 align:start position:0%
of improves all cases and that's one of
 

00:15:19.410 --> 00:15:21.440 align:start position:0%
of improves all cases and that's one of
the<00:15:19.500><c> reasons</c><00:15:19.800><c> why</c><00:15:20.040><c> this</c><00:15:20.100><c> technology</c><00:15:20.760><c> is</c><00:15:21.240><c> is</c>

00:15:21.440 --> 00:15:21.450 align:start position:0%
the reasons why this technology is is
 

00:15:21.450 --> 00:15:24.290 align:start position:0%
the reasons why this technology is is
not<00:15:22.200><c> really</c><00:15:22.710><c> you</c><00:15:23.370><c> know</c><00:15:23.400><c> officially</c><00:15:23.640><c> supported</c>

00:15:24.290 --> 00:15:24.300 align:start position:0%
not really you know officially supported
 

00:15:24.300 --> 00:15:25.730 align:start position:0%
not really you know officially supported
yet<00:15:24.450><c> and</c><00:15:24.750><c> and</c><00:15:25.050><c> it</c><00:15:25.140><c> might</c><00:15:25.290><c> be</c><00:15:25.440><c> even</c><00:15:25.620><c> longer</c>

00:15:25.730 --> 00:15:25.740 align:start position:0%
yet and and it might be even longer
 

00:15:25.740 --> 00:15:29.180 align:start position:0%
yet and and it might be even longer
before<00:15:26.280><c> it</c><00:15:27.270><c> would</c><00:15:27.420><c> be</c><00:15:27.630><c> on</c><00:15:28.080><c> by</c><00:15:28.470><c> default</c><00:15:28.890><c> and</c>

00:15:29.180 --> 00:15:29.190 align:start position:0%
before it would be on by default and
 

00:15:29.190 --> 00:15:31.610 align:start position:0%
before it would be on by default and
that's<00:15:29.460><c> because</c><00:15:29.870><c> really</c><00:15:30.870><c> there's</c><00:15:31.380><c> there's</c>

00:15:31.610 --> 00:15:31.620 align:start position:0%
that's because really there's there's
 

00:15:31.620 --> 00:15:33.500 align:start position:0%
that's because really there's there's
cases<00:15:31.860><c> where</c><00:15:32.250><c> where</c><00:15:32.550><c> this</c><00:15:32.760><c> actually</c><00:15:33.030><c> doesn't</c>

00:15:33.500 --> 00:15:33.510 align:start position:0%
cases where where this actually doesn't
 

00:15:33.510 --> 00:15:34.880 align:start position:0%
cases where where this actually doesn't
doesn't<00:15:33.900><c> help</c><00:15:34.080><c> but</c><00:15:34.380><c> for</c><00:15:34.620><c> many</c><00:15:34.740><c> applications</c>

00:15:34.880 --> 00:15:34.890 align:start position:0%
doesn't help but for many applications
 

00:15:34.890 --> 00:15:36.920 align:start position:0%
doesn't help but for many applications
we've<00:15:35.520><c> seen</c><00:15:35.760><c> improvements</c>

00:15:36.920 --> 00:15:36.930 align:start position:0%
we've seen improvements
 

00:15:36.930 --> 00:15:39.320 align:start position:0%
we've seen improvements
so<00:15:37.890><c> I'm</c><00:15:38.310><c> sure</c><00:15:38.520><c> there's</c><00:15:38.700><c> a</c><00:15:38.760><c> few</c><00:15:38.940><c> people</c><00:15:39.060><c> in</c><00:15:39.270><c> the</c>

00:15:39.320 --> 00:15:39.330 align:start position:0%
so I'm sure there's a few people in the
 

00:15:39.330 --> 00:15:41.060 align:start position:0%
so I'm sure there's a few people in the
audience<00:15:39.360><c> they're</c><00:15:39.810><c> going</c><00:15:40.020><c> you</c><00:15:40.230><c> know</c><00:15:40.350><c> quicker</c>

00:15:41.060 --> 00:15:41.070 align:start position:0%
audience they're going you know quicker
 

00:15:41.070 --> 00:15:42.950 align:start position:0%
audience they're going you know quicker
quicker<00:15:41.520><c> warm-up</c><00:15:42.000><c> times</c><00:15:42.240><c> quicker</c><00:15:42.510><c> startup</c>

00:15:42.950 --> 00:15:42.960 align:start position:0%
quicker warm-up times quicker startup
 

00:15:42.960 --> 00:15:43.640 align:start position:0%
quicker warm-up times quicker startup
times

00:15:43.640 --> 00:15:43.650 align:start position:0%
times
 

00:15:43.650 --> 00:15:45.650 align:start position:0%
times
sharing<00:15:44.220><c> data</c><00:15:44.400><c> among</c><00:15:44.700><c> different</c><00:15:44.850><c> JVMs</c><00:15:45.360><c> all</c>

00:15:45.650 --> 00:15:45.660 align:start position:0%
sharing data among different JVMs all
 

00:15:45.660 --> 00:15:47.990 align:start position:0%
sharing data among different JVMs all
this<00:15:45.990><c> sounds</c><00:15:46.440><c> pretty</c><00:15:46.950><c> darn</c><00:15:47.190><c> familiar</c><00:15:47.700><c> like</c>

00:15:47.990 --> 00:15:48.000 align:start position:0%
this sounds pretty darn familiar like
 

00:15:48.000 --> 00:15:49.670 align:start position:0%
this sounds pretty darn familiar like
why<00:15:48.510><c> do</c><00:15:48.570><c> I</c><00:15:48.720><c> think</c><00:15:48.779><c> I've</c><00:15:49.170><c> heard</c><00:15:49.380><c> all</c><00:15:49.529><c> this</c>

00:15:49.670 --> 00:15:49.680 align:start position:0%
why do I think I've heard all this
 

00:15:49.680 --> 00:15:51.980 align:start position:0%
why do I think I've heard all this
before<00:15:49.740><c> and</c><00:15:50.430><c> reality</c><00:15:51.089><c> is</c><00:15:51.150><c> there's</c><00:15:51.360><c> actually</c><00:15:51.510><c> a</c>

00:15:51.980 --> 00:15:51.990 align:start position:0%
before and reality is there's actually a
 

00:15:51.990 --> 00:15:55.280 align:start position:0%
before and reality is there's actually a
number<00:15:52.260><c> of</c><00:15:52.680><c> other</c><00:15:53.450><c> pieces</c><00:15:54.450><c> of</c><00:15:54.600><c> functionality</c>

00:15:55.280 --> 00:15:55.290 align:start position:0%
number of other pieces of functionality
 

00:15:55.290 --> 00:15:57.320 align:start position:0%
number of other pieces of functionality
that<00:15:55.500><c> have</c><00:15:55.980><c> been</c><00:15:56.130><c> added</c><00:15:56.460><c> to</c><00:15:56.490><c> the</c><00:15:56.670><c> platform</c><00:15:57.180><c> in</c>

00:15:57.320 --> 00:15:57.330 align:start position:0%
that have been added to the platform in
 

00:15:57.330 --> 00:16:00.350 align:start position:0%
that have been added to the platform in
the<00:15:58.290><c> recent</c><00:15:58.680><c> years</c><00:15:58.920><c> that</c><00:15:59.520><c> kind</c><00:15:59.940><c> of</c><00:16:00.029><c> have</c><00:16:00.150><c> very</c>

00:16:00.350 --> 00:16:00.360 align:start position:0%
the recent years that kind of have very
 

00:16:00.360 --> 00:16:03.019 align:start position:0%
the recent years that kind of have very
similar<00:16:00.600><c> design</c><00:16:00.870><c> goals</c><00:16:01.320><c> to</c><00:16:01.980><c> what</c><00:16:02.880><c> we're</c>

00:16:03.019 --> 00:16:03.029 align:start position:0%
similar design goals to what we're
 

00:16:03.029 --> 00:16:05.600 align:start position:0%
similar design goals to what we're
trying<00:16:03.300><c> to</c><00:16:03.420><c> do</c><00:16:03.630><c> with</c><00:16:04.140><c> a</c><00:16:04.350><c> ot</c><00:16:04.710><c> and</c><00:16:05.010><c> so</c><00:16:05.430><c> I</c><00:16:05.490><c> just</c>

00:16:05.600 --> 00:16:05.610 align:start position:0%
trying to do with a ot and so I just
 

00:16:05.610 --> 00:16:06.980 align:start position:0%
trying to do with a ot and so I just
want<00:16:05.790><c> to</c><00:16:05.820><c> cover</c><00:16:05.970><c> those</c><00:16:06.150><c> really</c><00:16:06.480><c> quickly</c><00:16:06.690><c> to</c>

00:16:06.980 --> 00:16:06.990 align:start position:0%
want to cover those really quickly to
 

00:16:06.990 --> 00:16:09.170 align:start position:0%
want to cover those really quickly to
kind<00:16:07.140><c> of</c><00:16:07.260><c> put</c><00:16:07.920><c> everything</c><00:16:08.010><c> in</c><00:16:08.670><c> perspective</c>

00:16:09.170 --> 00:16:09.180 align:start position:0%
kind of put everything in perspective
 

00:16:09.180 --> 00:16:11.840 align:start position:0%
kind of put everything in perspective
and<00:16:10.050><c> see</c><00:16:10.290><c> how</c><00:16:10.500><c> IOT</c><00:16:11.010><c> kind</c><00:16:11.220><c> of</c><00:16:11.279><c> fits</c><00:16:11.490><c> into</c><00:16:11.700><c> the</c>

00:16:11.840 --> 00:16:11.850 align:start position:0%
and see how IOT kind of fits into the
 

00:16:11.850 --> 00:16:14.720 align:start position:0%
and see how IOT kind of fits into the
larger<00:16:12.029><c> picture</c><00:16:12.510><c> of</c><00:16:13.440><c> startup</c><00:16:14.339><c> time</c><00:16:14.520><c> and</c>

00:16:14.720 --> 00:16:14.730 align:start position:0%
larger picture of startup time and
 

00:16:14.730 --> 00:16:16.370 align:start position:0%
larger picture of startup time and
performance<00:16:15.210><c> improvements</c><00:16:15.810><c> that</c><00:16:16.230><c> we're</c>

00:16:16.370 --> 00:16:16.380 align:start position:0%
performance improvements that we're
 

00:16:16.380 --> 00:16:18.890 align:start position:0%
performance improvements that we're
trying<00:16:16.560><c> to</c><00:16:16.650><c> do</c><00:16:16.860><c> so</c><00:16:17.850><c> the</c><00:16:18.150><c> two</c><00:16:18.360><c> big</c><00:16:18.510><c> ones</c><00:16:18.630><c> are</c>

00:16:18.890 --> 00:16:18.900 align:start position:0%
trying to do so the two big ones are
 

00:16:18.900 --> 00:16:20.870 align:start position:0%
trying to do so the two big ones are
tiered<00:16:19.200><c> compilation</c><00:16:19.860><c> and</c><00:16:20.100><c> class</c><00:16:20.370><c> data</c>

00:16:20.870 --> 00:16:20.880 align:start position:0%
tiered compilation and class data
 

00:16:20.880 --> 00:16:23.600 align:start position:0%
tiered compilation and class data
sharing<00:16:21.240><c> and</c><00:16:22.110><c> also</c><00:16:22.560><c> app</c><00:16:22.740><c> class</c><00:16:23.070><c> data</c><00:16:23.310><c> sharing</c>

00:16:23.600 --> 00:16:23.610 align:start position:0%
sharing and also app class data sharing
 

00:16:23.610 --> 00:16:25.640 align:start position:0%
sharing and also app class data sharing
and<00:16:23.850><c> of</c><00:16:24.000><c> course</c><00:16:24.210><c> with</c><00:16:24.420><c> the</c><00:16:24.660><c> the</c><00:16:25.170><c> announcement</c>

00:16:25.640 --> 00:16:25.650 align:start position:0%
and of course with the the announcement
 

00:16:25.650 --> 00:16:28.100 align:start position:0%
and of course with the the announcement
that<00:16:25.680><c> we're</c><00:16:26.010><c> basically</c><00:16:26.760><c> taking</c><00:16:27.630><c> all</c><00:16:27.750><c> of</c><00:16:27.930><c> what</c>

00:16:28.100 --> 00:16:28.110 align:start position:0%
that we're basically taking all of what
 

00:16:28.110 --> 00:16:29.920 align:start position:0%
that we're basically taking all of what
are<00:16:28.230><c> currently</c><00:16:28.529><c> the</c><00:16:28.770><c> commercial</c><00:16:29.190><c> features</c><00:16:29.520><c> of</c>

00:16:29.920 --> 00:16:29.930 align:start position:0%
are currently the commercial features of
 

00:16:29.930 --> 00:16:33.710 align:start position:0%
are currently the commercial features of
the<00:16:30.930><c> JVM</c><00:16:31.290><c> and</c><00:16:31.710><c> making</c><00:16:32.100><c> them</c><00:16:32.220><c> open</c><00:16:32.490><c> source</c><00:16:32.760><c> for</c>

00:16:33.710 --> 00:16:33.720 align:start position:0%
the JVM and making them open source for
 

00:16:33.720 --> 00:16:36.050 align:start position:0%
the JVM and making them open source for
the<00:16:33.779><c> first</c><00:16:34.020><c> time</c><00:16:34.260><c> open</c><00:16:35.040><c> JDK</c><00:16:35.220><c> users</c><00:16:35.790><c> will</c><00:16:35.970><c> also</c>

00:16:36.050 --> 00:16:36.060 align:start position:0%
the first time open JDK users will also
 

00:16:36.060 --> 00:16:37.579 align:start position:0%
the first time open JDK users will also
be<00:16:36.330><c> able</c><00:16:36.510><c> to</c><00:16:36.570><c> take</c><00:16:36.720><c> advantage</c><00:16:37.080><c> of</c><00:16:37.170><c> app</c><00:16:37.320><c> class</c>

00:16:37.579 --> 00:16:37.589 align:start position:0%
be able to take advantage of app class
 

00:16:37.589 --> 00:16:40.970 align:start position:0%
be able to take advantage of app class
data<00:16:37.860><c> sharing</c><00:16:38.190><c> in</c><00:16:39.089><c> the</c><00:16:39.810><c> very</c><00:16:39.990><c> near</c><00:16:40.110><c> future</c><00:16:40.170><c> so</c>

00:16:40.970 --> 00:16:40.980 align:start position:0%
data sharing in the very near future so
 

00:16:40.980 --> 00:16:43.370 align:start position:0%
data sharing in the very near future so
tiered<00:16:41.250><c> compilation</c><00:16:41.850><c> it's</c><00:16:42.810><c> a</c><00:16:43.170><c> pretty</c>

00:16:43.370 --> 00:16:43.380 align:start position:0%
tiered compilation it's a pretty
 

00:16:43.380 --> 00:16:45.500 align:start position:0%
tiered compilation it's a pretty
complicated<00:16:44.010><c> topic</c><00:16:44.520><c> and</c><00:16:44.670><c> of</c><00:16:44.760><c> its</c><00:16:45.150><c> own</c><00:16:45.300><c> so</c><00:16:45.480><c> I</c>

00:16:45.500 --> 00:16:45.510 align:start position:0%
complicated topic and of its own so I
 

00:16:45.510 --> 00:16:46.910 align:start position:0%
complicated topic and of its own so I
don't<00:16:45.660><c> want</c><00:16:45.779><c> to</c><00:16:45.810><c> dive</c><00:16:46.020><c> into</c><00:16:46.200><c> too</c><00:16:46.380><c> much</c><00:16:46.500><c> detail</c>

00:16:46.910 --> 00:16:46.920 align:start position:0%
don't want to dive into too much detail
 

00:16:46.920 --> 00:16:49.490 align:start position:0%
don't want to dive into too much detail
here<00:16:47.160><c> but</c><00:16:47.339><c> basically</c><00:16:47.640><c> idea</c><00:16:48.029><c> is</c><00:16:48.180><c> that</c><00:16:48.420><c> we</c><00:16:49.380><c> no</c>

00:16:49.490 --> 00:16:49.500 align:start position:0%
here but basically idea is that we no
 

00:16:49.500 --> 00:16:50.810 align:start position:0%
here but basically idea is that we no
longer<00:16:49.529><c> have</c><00:16:50.010><c> to</c><00:16:50.040><c> make</c><00:16:50.220><c> the</c><00:16:50.520><c> choice</c><00:16:50.790><c> between</c>

00:16:50.810 --> 00:16:50.820 align:start position:0%
longer have to make the choice between
 

00:16:50.820 --> 00:16:53.480 align:start position:0%
longer have to make the choice between
using<00:16:51.750><c> the</c><00:16:51.839><c> ce-1</c><00:16:52.200><c> compiler</c><00:16:52.800><c> or</c><00:16:53.010><c> the</c><00:16:53.160><c> c2</c>

00:16:53.480 --> 00:16:53.490 align:start position:0%
using the ce-1 compiler or the c2
 

00:16:53.490 --> 00:16:56.949 align:start position:0%
using the ce-1 compiler or the c2
compiler<00:16:54.089><c> we</c><00:16:54.630><c> actually</c><00:16:54.990><c> use</c><00:16:55.170><c> both</c><00:16:55.440><c> and</c><00:16:55.800><c> so</c>

00:16:56.949 --> 00:16:56.959 align:start position:0%
compiler we actually use both and so
 

00:16:56.959 --> 00:16:59.840 align:start position:0%
compiler we actually use both and so
traditionally<00:16:57.959><c> the</c><00:16:58.020><c> server</c><00:16:58.380><c> JVM</c><00:16:59.160><c> would</c><00:16:59.610><c> just</c>

00:16:59.840 --> 00:16:59.850 align:start position:0%
traditionally the server JVM would just
 

00:16:59.850 --> 00:17:01.850 align:start position:0%
traditionally the server JVM would just
have<00:17:00.029><c> the</c><00:17:00.240><c> interpreter</c><00:17:00.720><c> which</c><00:17:01.140><c> would</c><00:17:01.320><c> run</c><00:17:01.500><c> for</c>

00:17:01.850 --> 00:17:01.860 align:start position:0%
have the interpreter which would run for
 

00:17:01.860 --> 00:17:06.140 align:start position:0%
have the interpreter which would run for
say<00:17:02.730><c> you</c><00:17:03.240><c> know</c><00:17:03.589><c> 15,000</c><00:17:04.670><c> executions</c><00:17:05.670><c> of</c><00:17:06.059><c> a</c>

00:17:06.140 --> 00:17:06.150 align:start position:0%
say you know 15,000 executions of a
 

00:17:06.150 --> 00:17:07.490 align:start position:0%
say you know 15,000 executions of a
particular<00:17:06.360><c> method</c><00:17:06.839><c> and</c><00:17:07.050><c> then</c><00:17:07.199><c> it</c><00:17:07.350><c> would</c>

00:17:07.490 --> 00:17:07.500 align:start position:0%
particular method and then it would
 

00:17:07.500 --> 00:17:09.020 align:start position:0%
particular method and then it would
compile<00:17:07.860><c> it</c><00:17:08.040><c> using</c><00:17:08.130><c> all</c><00:17:08.400><c> the</c><00:17:08.490><c> profiling</c><00:17:08.880><c> data</c>

00:17:09.020 --> 00:17:09.030 align:start position:0%
compile it using all the profiling data
 

00:17:09.030 --> 00:17:13.069 align:start position:0%
compile it using all the profiling data
and<00:17:09.559><c> with</c><00:17:10.559><c> tieran</c><00:17:11.400><c> enabled</c><00:17:11.790><c> we</c><00:17:12.329><c> now</c><00:17:12.510><c> have</c><00:17:13.050><c> a</c>

00:17:13.069 --> 00:17:13.079 align:start position:0%
and with tieran enabled we now have a
 

00:17:13.079 --> 00:17:16.100 align:start position:0%
and with tieran enabled we now have a
mid-weight<00:17:13.829><c> point</c><00:17:14.309><c> where</c><00:17:14.850><c> we</c><00:17:15.209><c> use</c><00:17:15.390><c> the</c><00:17:15.720><c> c1</c>

00:17:16.100 --> 00:17:16.110 align:start position:0%
mid-weight point where we use the c1
 

00:17:16.110 --> 00:17:18.380 align:start position:0%
mid-weight point where we use the c1
compile<00:17:16.559><c> a</c><00:17:16.770><c> compiler</c><00:17:17.339><c> to</c><00:17:17.550><c> generate</c>

00:17:18.380 --> 00:17:18.390 align:start position:0%
compile a compiler to generate
 

00:17:18.390 --> 00:17:20.510 align:start position:0%
compile a compiler to generate
instrumented<00:17:19.319><c> code</c><00:17:19.350><c> that</c><00:17:20.069><c> collects</c><00:17:20.339><c> the</c>

00:17:20.510 --> 00:17:20.520 align:start position:0%
instrumented code that collects the
 

00:17:20.520 --> 00:17:23.900 align:start position:0%
instrumented code that collects the
profiling<00:17:21.030><c> data</c><00:17:21.059><c> needed</c><00:17:21.569><c> by</c><00:17:21.720><c> c2</c><00:17:22.370><c> but</c><00:17:23.370><c> also</c><00:17:23.550><c> is</c>

00:17:23.900 --> 00:17:23.910 align:start position:0%
profiling data needed by c2 but also is
 

00:17:23.910 --> 00:17:27.860 align:start position:0%
profiling data needed by c2 but also is
much<00:17:24.600><c> quicker</c><00:17:25.380><c> and</c><00:17:25.589><c> easier</c><00:17:26.300><c> than</c><00:17:27.300><c> a</c><00:17:27.329><c> full</c><00:17:27.540><c> c2</c>

00:17:27.860 --> 00:17:27.870 align:start position:0%
much quicker and easier than a full c2
 

00:17:27.870 --> 00:17:29.450 align:start position:0%
much quicker and easier than a full c2
compilation<00:17:28.530><c> so</c><00:17:28.830><c> we</c><00:17:28.920><c> kind</c><00:17:29.070><c> of</c><00:17:29.130><c> get</c><00:17:29.190><c> the</c><00:17:29.280><c> best</c>

00:17:29.450 --> 00:17:29.460 align:start position:0%
compilation so we kind of get the best
 

00:17:29.460 --> 00:17:31.370 align:start position:0%
compilation so we kind of get the best
of<00:17:29.580><c> both</c><00:17:29.760><c> worlds</c><00:17:29.790><c> we</c><00:17:30.600><c> get</c><00:17:30.750><c> a</c><00:17:30.780><c> really</c><00:17:31.050><c> quick</c>

00:17:31.370 --> 00:17:31.380 align:start position:0%
of both worlds we get a really quick
 

00:17:31.380 --> 00:17:33.350 align:start position:0%
of both worlds we get a really quick
compilation<00:17:32.250><c> that</c><00:17:32.370><c> happens</c><00:17:32.700><c> very</c><00:17:32.910><c> early</c><00:17:33.030><c> on</c>

00:17:33.350 --> 00:17:33.360 align:start position:0%
compilation that happens very early on
 

00:17:33.360 --> 00:17:36.680 align:start position:0%
compilation that happens very early on
in<00:17:33.690><c> the</c><00:17:33.780><c> life</c><00:17:33.900><c> cycle</c><00:17:34.170><c> of</c><00:17:34.530><c> the</c><00:17:35.100><c> process</c><00:17:35.690><c> but</c>

00:17:36.680 --> 00:17:36.690 align:start position:0%
in the life cycle of the process but
 

00:17:36.690 --> 00:17:38.960 align:start position:0%
in the life cycle of the process but
it's<00:17:37.260><c> it's</c><00:17:37.710><c> fast</c><00:17:38.100><c> enough</c><00:17:38.280><c> that</c><00:17:38.670><c> it's</c><00:17:38.790><c> it's</c>

00:17:38.960 --> 00:17:38.970 align:start position:0%
it's it's fast enough that it's it's
 

00:17:38.970 --> 00:17:41.750 align:start position:0%
it's it's fast enough that it's it's
dramatically<00:17:39.540><c> quicker</c><00:17:40.320><c> than</c><00:17:40.890><c> interpreting</c>

00:17:41.750 --> 00:17:41.760 align:start position:0%
dramatically quicker than interpreting
 

00:17:41.760 --> 00:17:44.240 align:start position:0%
dramatically quicker than interpreting
the<00:17:42.030><c> the</c><00:17:42.270><c> Java</c><00:17:42.540><c> bytecode</c><00:17:42.750><c> directly</c><00:17:43.440><c> and</c><00:17:43.650><c> that</c>

00:17:44.240 --> 00:17:44.250 align:start position:0%
the the Java bytecode directly and that
 

00:17:44.250 --> 00:17:47.090 align:start position:0%
the the Java bytecode directly and that
kind<00:17:44.460><c> of</c><00:17:44.490><c> makes</c><00:17:44.670><c> things</c><00:17:44.910><c> faster</c><00:17:45.630><c> until</c><00:17:46.290><c> later</c>

00:17:47.090 --> 00:17:47.100 align:start position:0%
kind of makes things faster until later
 

00:17:47.100 --> 00:17:49.010 align:start position:0%
kind of makes things faster until later
c2<00:17:47.640><c> can</c><00:17:47.820><c> come</c><00:17:48.000><c> in</c><00:17:48.150><c> and</c><00:17:48.450><c> give</c><00:17:48.570><c> you</c><00:17:48.690><c> the</c><00:17:48.840><c> real</c>

00:17:49.010 --> 00:17:49.020 align:start position:0%
c2 can come in and give you the real
 

00:17:49.020 --> 00:17:50.140 align:start position:0%
c2 can come in and give you the real
peak<00:17:49.320><c> perform</c>

00:17:50.140 --> 00:17:50.150 align:start position:0%
peak perform
 

00:17:50.150 --> 00:17:53.410 align:start position:0%
peak perform
it's<00:17:50.330><c> a</c><00:17:50.420><c> nice</c><00:17:50.600><c> happy</c><00:17:51.230><c> middle</c><00:17:51.410><c> ground</c><00:17:52.300><c> we</c><00:17:53.300><c> also</c>

00:17:53.410 --> 00:17:53.420 align:start position:0%
it's a nice happy middle ground we also
 

00:17:53.420 --> 00:17:55.990 align:start position:0%
it's a nice happy middle ground we also
have<00:17:53.720><c> a</c><00:17:53.960><c> class</c><00:17:54.470><c> data</c><00:17:54.740><c> sharing</c><00:17:55.040><c> so</c><00:17:55.490><c> in</c><00:17:55.880><c> a</c>

00:17:55.990 --> 00:17:56.000 align:start position:0%
have a class data sharing so in a
 

00:17:56.000 --> 00:17:57.610 align:start position:0%
have a class data sharing so in a
traditional<00:17:56.120><c> situation</c><00:17:56.960><c> this</c><00:17:57.230><c> should</c><00:17:57.470><c> look</c>

00:17:57.610 --> 00:17:57.620 align:start position:0%
traditional situation this should look
 

00:17:57.620 --> 00:18:00.460 align:start position:0%
traditional situation this should look
very<00:17:57.650><c> familiar</c><00:17:57.860><c> to</c><00:17:58.430><c> a</c><00:17:58.610><c> few</c><00:17:58.850><c> slides</c><00:17:59.090><c> ago</c><00:17:59.470><c> we</c>

00:18:00.460 --> 00:18:00.470 align:start position:0%
very familiar to a few slides ago we
 

00:18:00.470 --> 00:18:03.790 align:start position:0%
very familiar to a few slides ago we
have<00:18:01.600><c> masane</c><00:18:02.600><c> class</c><00:18:02.840><c> is</c><00:18:03.110><c> being</c><00:18:03.290><c> loaded</c><00:18:03.620><c> by</c>

00:18:03.790 --> 00:18:03.800 align:start position:0%
have masane class is being loaded by
 

00:18:03.800 --> 00:18:07.060 align:start position:0%
have masane class is being loaded by
multiple<00:18:04.700><c> JVMs</c><00:18:05.180><c> on</c><00:18:05.870><c> the</c><00:18:06.080><c> same</c><00:18:06.290><c> OS</c><00:18:06.560><c> instance</c>

00:18:07.060 --> 00:18:07.070 align:start position:0%
multiple JVMs on the same OS instance
 

00:18:07.070 --> 00:18:09.160 align:start position:0%
multiple JVMs on the same OS instance
each<00:18:07.490><c> JVM</c><00:18:08.090><c> is</c><00:18:08.120><c> going</c><00:18:08.420><c> to</c><00:18:08.480><c> go</c><00:18:08.720><c> through</c><00:18:08.930><c> all</c><00:18:08.990><c> the</c>

00:18:09.160 --> 00:18:09.170 align:start position:0%
each JVM is going to go through all the
 

00:18:09.170 --> 00:18:11.590 align:start position:0%
each JVM is going to go through all the
effort<00:18:09.440><c> of</c><00:18:09.860><c> parsing</c><00:18:10.340><c> the</c><00:18:10.880><c> the</c><00:18:11.120><c> Java</c><00:18:11.330><c> bytecode</c>

00:18:11.590 --> 00:18:11.600 align:start position:0%
effort of parsing the the Java bytecode
 

00:18:11.600 --> 00:18:14.320 align:start position:0%
effort of parsing the the Java bytecode
and<00:18:11.840><c> turning</c><00:18:12.290><c> that</c><00:18:12.410><c> into</c><00:18:12.620><c> the</c><00:18:13.190><c> internal</c><00:18:13.850><c> data</c>

00:18:14.320 --> 00:18:14.330 align:start position:0%
and turning that into the internal data
 

00:18:14.330 --> 00:18:16.210 align:start position:0%
and turning that into the internal data
structures<00:18:14.870><c> that</c><00:18:15.080><c> are</c><00:18:15.140><c> used</c><00:18:15.440><c> by</c><00:18:15.590><c> the</c><00:18:15.740><c> hotspot</c>

00:18:16.210 --> 00:18:16.220 align:start position:0%
structures that are used by the hotspot
 

00:18:16.220 --> 00:18:18.790 align:start position:0%
structures that are used by the hotspot
JVM<00:18:16.990><c> traditionally</c><00:18:17.990><c> those</c><00:18:18.140><c> restored</c><00:18:18.620><c> in</c><00:18:18.740><c> the</c>

00:18:18.790 --> 00:18:18.800 align:start position:0%
JVM traditionally those restored in the
 

00:18:18.800 --> 00:18:20.800 align:start position:0%
JVM traditionally those restored in the
permanent<00:18:19.070><c> generation</c><00:18:19.700><c> now</c><00:18:20.240><c> that</c><00:18:20.480><c> that</c>

00:18:20.800 --> 00:18:20.810 align:start position:0%
permanent generation now that that
 

00:18:20.810 --> 00:18:22.330 align:start position:0%
permanent generation now that that
information<00:18:21.110><c> has</c><00:18:21.500><c> been</c><00:18:21.620><c> moved</c><00:18:21.800><c> over</c><00:18:22.100><c> to</c><00:18:22.220><c> what</c>

00:18:22.330 --> 00:18:22.340 align:start position:0%
information has been moved over to what
 

00:18:22.340 --> 00:18:24.730 align:start position:0%
information has been moved over to what
we<00:18:22.370><c> call</c><00:18:22.460><c> the</c><00:18:22.700><c> meta</c><00:18:22.850><c> space</c><00:18:23.180><c> in</c><00:18:23.450><c> JDK</c><00:18:23.870><c> 8</c><00:18:23.900><c> but</c><00:18:24.710><c> the</c>

00:18:24.730 --> 00:18:24.740 align:start position:0%
we call the meta space in JDK 8 but the
 

00:18:24.740 --> 00:18:27.070 align:start position:0%
we call the meta space in JDK 8 but the
point<00:18:24.980><c> is</c><00:18:25.100><c> is</c><00:18:25.250><c> that</c><00:18:25.280><c> it's</c><00:18:25.550><c> consuming</c><00:18:26.080><c> genuine</c>

00:18:27.070 --> 00:18:27.080 align:start position:0%
point is is that it's consuming genuine
 

00:18:27.080 --> 00:18:29.770 align:start position:0%
point is is that it's consuming genuine
memory<00:18:27.350><c> so</c><00:18:27.980><c> with</c><00:18:28.280><c> class</c><00:18:28.550><c> data</c><00:18:28.820><c> sharing</c><00:18:29.150><c> the</c>

00:18:29.770 --> 00:18:29.780 align:start position:0%
memory so with class data sharing the
 

00:18:29.780 --> 00:18:31.960 align:start position:0%
memory so with class data sharing the
idea<00:18:30.050><c> is</c><00:18:30.200><c> that</c><00:18:30.380><c> you</c><00:18:30.560><c> would</c><00:18:30.710><c> create</c><00:18:30.890><c> an</c><00:18:31.310><c> archive</c>

00:18:31.960 --> 00:18:31.970 align:start position:0%
idea is that you would create an archive
 

00:18:31.970 --> 00:18:35.140 align:start position:0%
idea is that you would create an archive
that<00:18:32.390><c> would</c><00:18:32.900><c> sit</c><00:18:33.170><c> on</c><00:18:33.980><c> your</c><00:18:34.190><c> file</c><00:18:34.370><c> system</c><00:18:34.400><c> and</c>

00:18:35.140 --> 00:18:35.150 align:start position:0%
that would sit on your file system and
 

00:18:35.150 --> 00:18:36.700 align:start position:0%
that would sit on your file system and
that<00:18:35.390><c> would</c><00:18:35.540><c> actually</c><00:18:35.690><c> have</c><00:18:36.050><c> kind</c><00:18:36.260><c> of</c><00:18:36.380><c> pre</c>

00:18:36.700 --> 00:18:36.710 align:start position:0%
that would actually have kind of pre
 

00:18:36.710 --> 00:18:39.850 align:start position:0%
that would actually have kind of pre
parsed<00:18:37.130><c> or</c><00:18:37.340><c> predigested</c><00:18:38.290><c> versions</c><00:18:39.290><c> of</c><00:18:39.560><c> the</c>

00:18:39.850 --> 00:18:39.860 align:start position:0%
parsed or predigested versions of the
 

00:18:39.860 --> 00:18:43.000 align:start position:0%
parsed or predigested versions of the
class<00:18:40.100><c> data</c><00:18:40.550><c> and</c><00:18:40.880><c> so</c><00:18:41.630><c> the</c><00:18:41.960><c> JVM</c><00:18:42.500><c> s</c><00:18:42.620><c> could</c><00:18:42.770><c> share</c>

00:18:43.000 --> 00:18:43.010 align:start position:0%
class data and so the JVM s could share
 

00:18:43.010 --> 00:18:44.620 align:start position:0%
class data and so the JVM s could share
that<00:18:43.250><c> and</c><00:18:43.520><c> that</c><00:18:43.760><c> would</c><00:18:43.880><c> give</c><00:18:44.030><c> you</c><00:18:44.120><c> a</c><00:18:44.180><c> faster</c>

00:18:44.620 --> 00:18:44.630 align:start position:0%
that and that would give you a faster
 

00:18:44.630 --> 00:18:46.000 align:start position:0%
that and that would give you a faster
startup<00:18:44.990><c> time</c><00:18:45.230><c> because</c><00:18:45.470><c> you're</c><00:18:45.560><c> not</c><00:18:45.680><c> actually</c>

00:18:46.000 --> 00:18:46.010 align:start position:0%
startup time because you're not actually
 

00:18:46.010 --> 00:18:48.040 align:start position:0%
startup time because you're not actually
parsing<00:18:46.400><c> the</c><00:18:46.520><c> Java</c><00:18:46.730><c> bytecode</c><00:18:47.000><c> and</c><00:18:47.480><c> it</c><00:18:47.930><c> would</c>

00:18:48.040 --> 00:18:48.050 align:start position:0%
parsing the Java bytecode and it would
 

00:18:48.050 --> 00:18:49.930 align:start position:0%
parsing the Java bytecode and it would
also<00:18:48.200><c> give</c><00:18:48.350><c> you</c><00:18:48.650><c> some</c><00:18:48.680><c> density</c><00:18:49.190><c> improvements</c>

00:18:49.930 --> 00:18:49.940 align:start position:0%
also give you some density improvements
 

00:18:49.940 --> 00:18:52.480 align:start position:0%
also give you some density improvements
because<00:18:50.210><c> you're</c><00:18:50.930><c> sharing</c><00:18:51.410><c> that</c><00:18:52.070><c> across</c>

00:18:52.480 --> 00:18:52.490 align:start position:0%
because you're sharing that across
 

00:18:52.490 --> 00:18:56.500 align:start position:0%
because you're sharing that across
multiple<00:18:52.730><c> address</c><00:18:53.300><c> spaces</c><00:18:54.910><c> so</c><00:18:55.910><c> there's</c>

00:18:56.500 --> 00:18:56.510 align:start position:0%
multiple address spaces so there's
 

00:18:56.510 --> 00:18:57.880 align:start position:0%
multiple address spaces so there's
actually<00:18:56.660><c> two</c><00:18:56.870><c> different</c><00:18:57.020><c> forms</c><00:18:57.590><c> of</c><00:18:57.740><c> class</c>

00:18:57.880 --> 00:18:57.890 align:start position:0%
actually two different forms of class
 

00:18:57.890 --> 00:19:00.190 align:start position:0%
actually two different forms of class
data<00:18:58.160><c> sharing</c><00:18:58.460><c> as</c><00:18:58.820><c> the</c><00:18:59.240><c> the</c><00:18:59.570><c> standard</c><00:19:00.020><c> class</c>

00:19:00.190 --> 00:19:00.200 align:start position:0%
data sharing as the the standard class
 

00:19:00.200 --> 00:19:01.630 align:start position:0%
data sharing as the the standard class
data<00:19:00.440><c> sharing</c><00:19:00.710><c> that's</c><00:19:00.950><c> been</c><00:19:01.190><c> around</c><00:19:01.280><c> for</c>

00:19:01.630 --> 00:19:01.640 align:start position:0%
data sharing that's been around for
 

00:19:01.640 --> 00:19:03.550 align:start position:0%
data sharing that's been around for
quite<00:19:02.030><c> a</c><00:19:02.240><c> while</c><00:19:02.540><c> I'm</c><00:19:02.810><c> not</c><00:19:02.960><c> actually</c><00:19:03.290><c> don't</c>

00:19:03.550 --> 00:19:03.560 align:start position:0%
quite a while I'm not actually don't
 

00:19:03.560 --> 00:19:04.810 align:start position:0%
quite a while I'm not actually don't
remember<00:19:03.650><c> when</c><00:19:04.010><c> they</c><00:19:04.100><c> added</c><00:19:04.130><c> add</c><00:19:04.550><c> something</c>

00:19:04.810 --> 00:19:04.820 align:start position:0%
remember when they added add something
 

00:19:04.820 --> 00:19:07.810 align:start position:0%
remember when they added add something
somewhere<00:19:05.450><c> on</c><00:19:05.600><c> the</c><00:19:05.720><c> 5</c><00:19:05.930><c> or</c><00:19:06.170><c> 6</c><00:19:06.410><c> era</c><00:19:07.070><c> and</c><00:19:07.520><c> and</c>

00:19:07.810 --> 00:19:07.820 align:start position:0%
somewhere on the 5 or 6 era and and
 

00:19:07.820 --> 00:19:09.580 align:start position:0%
somewhere on the 5 or 6 era and and
that's<00:19:08.000><c> kind</c><00:19:08.300><c> of</c><00:19:08.360><c> free</c><00:19:08.510><c> to</c><00:19:08.630><c> everybody</c><00:19:08.870><c> to</c><00:19:09.440><c> use</c>

00:19:09.580 --> 00:19:09.590 align:start position:0%
that's kind of free to everybody to use
 

00:19:09.590 --> 00:19:10.930 align:start position:0%
that's kind of free to everybody to use
that's<00:19:09.860><c> never</c><00:19:10.040><c> been</c><00:19:10.220><c> a</c><00:19:10.280><c> commercial</c><00:19:10.580><c> feature</c>

00:19:10.930 --> 00:19:10.940 align:start position:0%
that's never been a commercial feature
 

00:19:10.940 --> 00:19:13.900 align:start position:0%
that's never been a commercial feature
but<00:19:11.870><c> it</c><00:19:11.960><c> is</c><00:19:12.140><c> only</c><00:19:12.410><c> works</c><00:19:12.800><c> with</c><00:19:13.160><c> the</c><00:19:13.430><c> JDK</c>

00:19:13.900 --> 00:19:13.910 align:start position:0%
but it is only works with the JDK
 

00:19:13.910 --> 00:19:16.000 align:start position:0%
but it is only works with the JDK
classes<00:19:14.510><c> themselves</c><00:19:15.110><c> ie</c><00:19:15.380><c> what</c><00:19:15.680><c> used</c><00:19:15.830><c> to</c><00:19:15.950><c> be</c>

00:19:16.000 --> 00:19:16.010 align:start position:0%
classes themselves ie what used to be
 

00:19:16.010 --> 00:19:19.900 align:start position:0%
classes themselves ie what used to be
part<00:19:16.400><c> of</c><00:19:16.990><c> Archie</c><00:19:17.990><c> jar</c><00:19:18.470><c> so</c><00:19:18.890><c> the</c><00:19:19.220><c> Java</c><00:19:19.430><c> SC</c><00:19:19.700><c> class</c>

00:19:19.900 --> 00:19:19.910 align:start position:0%
part of Archie jar so the Java SC class
 

00:19:19.910 --> 00:19:22.900 align:start position:0%
part of Archie jar so the Java SC class
library<00:19:20.390><c> was</c><00:19:20.660><c> really</c><00:19:20.900><c> the</c><00:19:21.020><c> only</c><00:19:21.700><c> classes</c><00:19:22.700><c> that</c>

00:19:22.900 --> 00:19:22.910 align:start position:0%
library was really the only classes that
 

00:19:22.910 --> 00:19:25.060 align:start position:0%
library was really the only classes that
were<00:19:23.030><c> more</c><00:19:23.360><c> compatible</c><00:19:23.750><c> or</c><00:19:24.170><c> that</c><00:19:24.620><c> worked</c><00:19:24.830><c> with</c>

00:19:25.060 --> 00:19:25.070 align:start position:0%
were more compatible or that worked with
 

00:19:25.070 --> 00:19:27.340 align:start position:0%
were more compatible or that worked with
the<00:19:25.400><c> traditional</c><00:19:26.000><c> class</c><00:19:26.180><c> data</c><00:19:26.450><c> sharing</c><00:19:26.720><c> then</c>

00:19:27.340 --> 00:19:27.350 align:start position:0%
the traditional class data sharing then
 

00:19:27.350 --> 00:19:29.530 align:start position:0%
the traditional class data sharing then
there's<00:19:27.560><c> apt</c><00:19:27.860><c> class</c><00:19:28.250><c> data</c><00:19:28.520><c> sharing</c><00:19:28.820><c> which</c><00:19:29.210><c> as</c>

00:19:29.530 --> 00:19:29.540 align:start position:0%
there's apt class data sharing which as
 

00:19:29.540 --> 00:19:32.080 align:start position:0%
there's apt class data sharing which as
you<00:19:29.930><c> can</c><00:19:30.080><c> probably</c><00:19:30.340><c> assume</c><00:19:31.340><c> from</c><00:19:31.730><c> the</c><00:19:31.820><c> name</c>

00:19:32.080 --> 00:19:32.090 align:start position:0%
you can probably assume from the name
 

00:19:32.090 --> 00:19:34.360 align:start position:0%
you can probably assume from the name
means<00:19:32.810><c> that</c><00:19:33.020><c> it's</c><00:19:33.350><c> the</c><00:19:33.500><c> same</c><00:19:33.800><c> class</c><00:19:34.040><c> data</c>

00:19:34.360 --> 00:19:34.370 align:start position:0%
means that it's the same class data
 

00:19:34.370 --> 00:19:36.370 align:start position:0%
means that it's the same class data
sharing<00:19:34.670><c> technology</c><00:19:35.360><c> but</c><00:19:35.600><c> applied</c><00:19:35.900><c> to</c><00:19:35.930><c> your</c>

00:19:36.370 --> 00:19:36.380 align:start position:0%
sharing technology but applied to your
 

00:19:36.380 --> 00:19:38.650 align:start position:0%
sharing technology but applied to your
own<00:19:36.560><c> classes</c><00:19:36.890><c> and</c><00:19:37.430><c> within</c><00:19:37.700><c> your</c><00:19:37.970><c> application</c>

00:19:38.650 --> 00:19:38.660 align:start position:0%
own classes and within your application
 

00:19:38.660 --> 00:19:42.040 align:start position:0%
own classes and within your application
and<00:19:38.870><c> so</c><00:19:39.470><c> with</c><00:19:40.310><c> app</c><00:19:40.490><c> class</c><00:19:40.790><c> data</c><00:19:41.090><c> sharing</c><00:19:41.390><c> you</c>

00:19:42.040 --> 00:19:42.050 align:start position:0%
and so with app class data sharing you
 

00:19:42.050 --> 00:19:43.930 align:start position:0%
and so with app class data sharing you
can<00:19:42.080><c> actually</c><00:19:42.650><c> do</c><00:19:42.770><c> the</c><00:19:42.920><c> same</c><00:19:43.130><c> thing</c><00:19:43.550><c> with</c><00:19:43.790><c> your</c>

00:19:43.930 --> 00:19:43.940 align:start position:0%
can actually do the same thing with your
 

00:19:43.940 --> 00:19:46.120 align:start position:0%
can actually do the same thing with your
classes<00:19:44.480><c> and</c><00:19:44.690><c> share</c><00:19:45.050><c> them</c><00:19:45.230><c> across</c><00:19:45.440><c> just</c><00:19:45.980><c> kind</c>

00:19:46.120 --> 00:19:46.130 align:start position:0%
classes and share them across just kind
 

00:19:46.130 --> 00:19:48.700 align:start position:0%
classes and share them across just kind
of<00:19:46.190><c> pre</c><00:19:46.520><c> parsed</c><00:19:46.910><c> versions</c><00:19:47.870><c> of</c><00:19:48.050><c> them</c><00:19:48.230><c> across</c>

00:19:48.700 --> 00:19:48.710 align:start position:0%
of pre parsed versions of them across
 

00:19:48.710 --> 00:19:51.580 align:start position:0%
of pre parsed versions of them across
multiple<00:19:48.800><c> JVM</c><00:19:49.670><c> instances</c><00:19:50.240><c> and</c><00:19:50.540><c> today</c><00:19:51.350><c> that</c>

00:19:51.580 --> 00:19:51.590 align:start position:0%
multiple JVM instances and today that
 

00:19:51.590 --> 00:19:54.130 align:start position:0%
multiple JVM instances and today that
this<00:19:51.800><c> is</c><00:19:51.950><c> a</c><00:19:51.980><c> commercial</c><00:19:52.520><c> feature</c><00:19:52.930><c> that</c><00:19:53.930><c> you</c>

00:19:54.130 --> 00:19:54.140 align:start position:0%
this is a commercial feature that you
 

00:19:54.140 --> 00:19:55.930 align:start position:0%
this is a commercial feature that you
don't<00:19:54.170><c> that's</c><00:19:54.620><c> not</c><00:19:54.710><c> part</c><00:19:55.040><c> of</c><00:19:55.100><c> open</c><00:19:55.340><c> JDK</c><00:19:55.490><c> and</c>

00:19:55.930 --> 00:19:55.940 align:start position:0%
don't that's not part of open JDK and
 

00:19:55.940 --> 00:19:57.370 align:start position:0%
don't that's not part of open JDK and
you<00:19:56.030><c> don't</c><00:19:56.240><c> you</c><00:19:56.690><c> know</c><00:19:56.750><c> get</c><00:19:56.930><c> to</c><00:19:57.080><c> use</c><00:19:57.200><c> this</c>

00:19:57.370 --> 00:19:57.380 align:start position:0%
you don't you know get to use this
 

00:19:57.380 --> 00:19:58.120 align:start position:0%
you don't you know get to use this
without<00:19:57.560><c> paying</c>

00:19:58.120 --> 00:19:58.130 align:start position:0%
without paying
 

00:19:58.130 --> 00:20:00.370 align:start position:0%
without paying
Oracle<00:19:58.610><c> money</c><00:19:58.760><c> but</c><00:19:59.390><c> in</c><00:19:59.660><c> the</c><00:19:59.780><c> future</c><00:20:00.080><c> in</c><00:20:00.290><c> the</c>

00:20:00.370 --> 00:20:00.380 align:start position:0%
Oracle money but in the future in the
 

00:20:00.380 --> 00:20:01.960 align:start position:0%
Oracle money but in the future in the
very<00:20:00.560><c> near</c><00:20:00.830><c> future</c>

00:20:01.960 --> 00:20:01.970 align:start position:0%
very near future
 

00:20:01.970 --> 00:20:03.879 align:start position:0%
very near future
just<00:20:02.360><c> with</c><00:20:02.539><c> java</c><00:20:02.960><c> flight</c><00:20:03.230><c> recorder</c><00:20:03.679><c> and</c><00:20:03.830><c> all</c>

00:20:03.879 --> 00:20:03.889 align:start position:0%
just with java flight recorder and all
 

00:20:03.889 --> 00:20:05.350 align:start position:0%
just with java flight recorder and all
the<00:20:03.980><c> other</c><00:20:04.100><c> great</c><00:20:04.340><c> stuff</c><00:20:04.399><c> we're</c><00:20:05.179><c> actually</c>

00:20:05.350 --> 00:20:05.360 align:start position:0%
the other great stuff we're actually
 

00:20:05.360 --> 00:20:07.330 align:start position:0%
the other great stuff we're actually
bringing<00:20:05.659><c> this</c><00:20:05.960><c> into</c><00:20:06.230><c> the</c><00:20:06.379><c> open</c><00:20:06.799><c> source</c><00:20:06.980><c> and</c>

00:20:07.330 --> 00:20:07.340 align:start position:0%
bringing this into the open source and
 

00:20:07.340 --> 00:20:10.600 align:start position:0%
bringing this into the open source and
so<00:20:08.059><c> this</c><00:20:08.779><c> would</c><00:20:08.899><c> be</c><00:20:08.990><c> part</c><00:20:09.230><c> of</c><00:20:09.440><c> open</c><00:20:09.950><c> JDK</c><00:20:10.129><c> in</c><00:20:10.519><c> the</c>

00:20:10.600 --> 00:20:10.610 align:start position:0%
so this would be part of open JDK in the
 

00:20:10.610 --> 00:20:12.360 align:start position:0%
so this would be part of open JDK in the
in<00:20:10.789><c> the</c><00:20:10.940><c> very</c><00:20:11.120><c> near</c><00:20:11.330><c> future</c>

00:20:12.360 --> 00:20:12.370 align:start position:0%
in the very near future
 

00:20:12.370 --> 00:20:14.710 align:start position:0%
in the very near future
so<00:20:13.370><c> just</c><00:20:13.759><c> to</c><00:20:13.879><c> make</c><00:20:13.909><c> clear</c><00:20:14.029><c> what</c><00:20:14.389><c> that</c><00:20:14.539><c> what</c><00:20:14.629><c> the</c>

00:20:14.710 --> 00:20:14.720 align:start position:0%
so just to make clear what that what the
 

00:20:14.720 --> 00:20:17.289 align:start position:0%
so just to make clear what that what the
differences<00:20:15.169><c> here</c><00:20:15.350><c> are</c><00:20:15.500><c> so</c><00:20:16.460><c> the</c><00:20:16.909><c> reason</c><00:20:17.179><c> this</c>

00:20:17.289 --> 00:20:17.299 align:start position:0%
differences here are so the reason this
 

00:20:17.299 --> 00:20:18.580 align:start position:0%
differences here are so the reason this
whole<00:20:17.450><c> sounds</c><00:20:17.809><c> probably</c><00:20:18.259><c> really</c><00:20:18.470><c> familiar</c>

00:20:18.580 --> 00:20:18.590 align:start position:0%
whole sounds probably really familiar
 

00:20:18.590 --> 00:20:20.049 align:start position:0%
whole sounds probably really familiar
for<00:20:19.070><c> you</c><00:20:19.100><c> is</c><00:20:19.250><c> because</c><00:20:19.460><c> a</c><00:20:19.490><c> lot</c><00:20:19.610><c> of</c><00:20:19.639><c> these</c><00:20:19.759><c> diet</c>

00:20:20.049 --> 00:20:20.059 align:start position:0%
for you is because a lot of these diet
 

00:20:20.059 --> 00:20:21.700 align:start position:0%
for you is because a lot of these diet
design<00:20:20.389><c> goals</c><00:20:20.629><c> are</c><00:20:20.809><c> the</c><00:20:20.899><c> same</c><00:20:20.929><c> tiered</c>

00:20:21.700 --> 00:20:21.710 align:start position:0%
design goals are the same tiered
 

00:20:21.710 --> 00:20:23.560 align:start position:0%
design goals are the same tiered
compilation<00:20:22.370><c> that</c><00:20:22.610><c> the</c><00:20:22.759><c> killer</c><00:20:22.970><c> apps</c><00:20:23.210><c> so</c><00:20:23.480><c> to</c>

00:20:23.560 --> 00:20:23.570 align:start position:0%
compilation that the killer apps so to
 

00:20:23.570 --> 00:20:26.110 align:start position:0%
compilation that the killer apps so to
speak<00:20:23.809><c> for</c><00:20:24.019><c> that</c><00:20:24.110><c> a</c><00:20:24.559><c> faster</c><00:20:25.220><c> startup</c><00:20:25.549><c> time</c><00:20:25.820><c> and</c>

00:20:26.110 --> 00:20:26.120 align:start position:0%
speak for that a faster startup time and
 

00:20:26.120 --> 00:20:30.450 align:start position:0%
speak for that a faster startup time and
faster<00:20:27.070><c> or</c><00:20:28.070><c> at</c><00:20:28.700><c> least</c><00:20:28.940><c> a</c><00:20:29.120><c> less</c><00:20:29.929><c> noticeable</c>

00:20:30.450 --> 00:20:30.460 align:start position:0%
faster or at least a less noticeable
 

00:20:30.460 --> 00:20:33.519 align:start position:0%
faster or at least a less noticeable
warmup<00:20:31.460><c> gap</c><00:20:31.940><c> and</c><00:20:32.240><c> then</c><00:20:32.779><c> class</c><00:20:32.960><c> data</c><00:20:33.230><c> sharing</c>

00:20:33.519 --> 00:20:33.529 align:start position:0%
warmup gap and then class data sharing
 

00:20:33.529 --> 00:20:35.769 align:start position:0%
warmup gap and then class data sharing
app<00:20:33.830><c> class</c><00:20:34.159><c> data</c><00:20:34.460><c> sharing</c><00:20:34.789><c> is</c><00:20:35.149><c> also</c><00:20:35.480><c> giving</c>

00:20:35.769 --> 00:20:35.779 align:start position:0%
app class data sharing is also giving
 

00:20:35.779 --> 00:20:38.619 align:start position:0%
app class data sharing is also giving
you<00:20:35.870><c> quicker</c><00:20:36.080><c> warmup</c><00:20:36.470><c> time</c><00:20:37.009><c> and</c><00:20:37.429><c> some</c><00:20:38.389><c> some</c>

00:20:38.619 --> 00:20:38.629 align:start position:0%
you quicker warmup time and some some
 

00:20:38.629 --> 00:20:40.629 align:start position:0%
you quicker warmup time and some some
better<00:20:38.779><c> memory</c><00:20:39.110><c> efficiency</c><00:20:39.559><c> by</c><00:20:39.950><c> removing</c><00:20:40.549><c> the</c>

00:20:40.629 --> 00:20:40.639 align:start position:0%
better memory efficiency by removing the
 

00:20:40.639 --> 00:20:42.850 align:start position:0%
better memory efficiency by removing the
redundancy<00:20:41.330><c> that</c><00:20:41.539><c> would</c><00:20:42.080><c> otherwise</c><00:20:42.200><c> be</c><00:20:42.440><c> there</c>

00:20:42.850 --> 00:20:42.860 align:start position:0%
redundancy that would otherwise be there
 

00:20:42.860 --> 00:20:45.039 align:start position:0%
redundancy that would otherwise be there
for<00:20:43.100><c> having</c><00:20:43.399><c> multiple</c><00:20:44.210><c> JVM</c><00:20:44.539><c> load</c><00:20:44.779><c> the</c><00:20:44.899><c> same</c>

00:20:45.039 --> 00:20:45.049 align:start position:0%
for having multiple JVM load the same
 

00:20:45.049 --> 00:20:46.570 align:start position:0%
for having multiple JVM load the same
classes<00:20:45.529><c> but</c><00:20:45.710><c> what's</c><00:20:45.889><c> different</c><00:20:46.100><c> from</c><00:20:46.399><c> all</c>

00:20:46.570 --> 00:20:46.580 align:start position:0%
classes but what's different from all
 

00:20:46.580 --> 00:20:49.600 align:start position:0%
classes but what's different from all
these<00:20:46.759><c> what</c><00:20:47.330><c> makes</c><00:20:47.840><c> a</c><00:20:48.019><c> OT</c><00:20:48.350><c> unique</c><00:20:48.679><c> is</c><00:20:48.889><c> that</c>

00:20:49.600 --> 00:20:49.610 align:start position:0%
these what makes a OT unique is that
 

00:20:49.610 --> 00:20:51.730 align:start position:0%
these what makes a OT unique is that
none<00:20:49.879><c> of</c><00:20:49.909><c> these</c><00:20:50.090><c> involve</c><00:20:50.509><c> actual</c><00:20:50.960><c> the</c><00:20:51.379><c> output</c>

00:20:51.730 --> 00:20:51.740 align:start position:0%
none of these involve actual the output
 

00:20:51.740 --> 00:20:54.639 align:start position:0%
none of these involve actual the output
of<00:20:51.769><c> the</c><00:20:51.980><c> JIT</c><00:20:52.159><c> compilation</c><00:20:52.340><c> process</c><00:20:53.200><c> so</c><00:20:54.200><c> a</c><00:20:54.230><c> OT</c>

00:20:54.639 --> 00:20:54.649 align:start position:0%
of the JIT compilation process so a OT
 

00:20:54.649 --> 00:20:56.830 align:start position:0%
of the JIT compilation process so a OT
is<00:20:54.950><c> all</c><00:20:55.129><c> about</c><00:20:55.399><c> what</c><00:20:55.730><c> would</c><00:20:55.909><c> be</c><00:20:56.090><c> within</c><00:20:56.720><c> the</c>

00:20:56.830 --> 00:20:56.840 align:start position:0%
is all about what would be within the
 

00:20:56.840 --> 00:20:58.960 align:start position:0%
is all about what would be within the
JVM<00:20:57.259><c> code</c><00:20:57.559><c> cache</c><00:20:57.830><c> this</c><00:20:58.340><c> is</c><00:20:58.519><c> actually</c><00:20:58.879><c> the</c>

00:20:58.960 --> 00:20:58.970 align:start position:0%
JVM code cache this is actually the
 

00:20:58.970 --> 00:21:01.450 align:start position:0%
JVM code cache this is actually the
machine<00:20:59.419><c> code</c><00:20:59.750><c> that's</c><00:20:59.929><c> generated</c><00:20:59.990><c> all</c><00:21:00.679><c> of</c><00:21:01.070><c> the</c>

00:21:01.450 --> 00:21:01.460 align:start position:0%
machine code that's generated all of the
 

00:21:01.460 --> 00:21:03.039 align:start position:0%
machine code that's generated all of the
class<00:21:01.669><c> data</c><00:21:01.909><c> sharing</c><00:21:02.240><c> an</c><00:21:02.419><c> app</c><00:21:02.539><c> class</c><00:21:02.809><c> data</c>

00:21:03.039 --> 00:21:03.049 align:start position:0%
class data sharing an app class data
 

00:21:03.049 --> 00:21:05.320 align:start position:0%
class data sharing an app class data
sharing<00:21:03.379><c> saved</c><00:21:04.250><c> the</c><00:21:04.490><c> metadata</c><00:21:04.879><c> about</c><00:21:05.179><c> the</c>

00:21:05.320 --> 00:21:05.330 align:start position:0%
sharing saved the metadata about the
 

00:21:05.330 --> 00:21:07.990 align:start position:0%
sharing saved the metadata about the
classes<00:21:06.009><c> but</c><00:21:07.009><c> it</c><00:21:07.250><c> didn't</c><00:21:07.519><c> it</c><00:21:07.639><c> didn't</c><00:21:07.909><c> actually</c>

00:21:07.990 --> 00:21:08.000 align:start position:0%
classes but it didn't it didn't actually
 

00:21:08.000 --> 00:21:10.869 align:start position:0%
classes but it didn't it didn't actually
do<00:21:08.330><c> anything</c><00:21:08.539><c> with</c><00:21:08.860><c> generated</c><00:21:09.860><c> code</c><00:21:10.100><c> so</c><00:21:10.460><c> äôt</c>

00:21:10.869 --> 00:21:10.879 align:start position:0%
do anything with generated code so äôt
 

00:21:10.879 --> 00:21:12.730 align:start position:0%
do anything with generated code so äôt
is<00:21:11.000><c> really</c><00:21:11.330><c> a</c><00:21:11.360><c> first</c><00:21:11.659><c> for</c><00:21:11.960><c> the</c><00:21:12.019><c> platform</c><00:21:12.259><c> and</c>

00:21:12.730 --> 00:21:12.740 align:start position:0%
is really a first for the platform and
 

00:21:12.740 --> 00:21:15.340 align:start position:0%
is really a first for the platform and
all<00:21:13.580><c> of</c><00:21:13.940><c> these</c><00:21:14.090><c> technologies</c><00:21:14.690><c> work</c><00:21:15.139><c> together</c>

00:21:15.340 --> 00:21:15.350 align:start position:0%
all of these technologies work together
 

00:21:15.350 --> 00:21:18.610 align:start position:0%
all of these technologies work together
it's<00:21:16.220><c> not</c><00:21:16.309><c> a</c><00:21:16.820><c> mutually</c><00:21:17.570><c> exclusive</c><00:21:18.110><c> situation</c>

00:21:18.610 --> 00:21:18.620 align:start position:0%
it's not a mutually exclusive situation
 

00:21:18.620 --> 00:21:19.990 align:start position:0%
it's not a mutually exclusive situation
where<00:21:18.769><c> you</c><00:21:18.830><c> have</c><00:21:18.950><c> to</c><00:21:19.070><c> choose</c><00:21:19.279><c> one</c><00:21:19.519><c> over</c><00:21:19.730><c> the</c>

00:21:19.990 --> 00:21:20.000 align:start position:0%
where you have to choose one over the
 

00:21:20.000 --> 00:21:20.350 align:start position:0%
where you have to choose one over the
other

00:21:20.350 --> 00:21:20.360 align:start position:0%
other
 

00:21:20.360 --> 00:21:22.419 align:start position:0%
other
and<00:21:20.539><c> we</c><00:21:21.080><c> found</c><00:21:21.259><c> in</c><00:21:21.470><c> our</c><00:21:21.529><c> performance</c><00:21:22.009><c> testing</c>

00:21:22.419 --> 00:21:22.429 align:start position:0%
and we found in our performance testing
 

00:21:22.429 --> 00:21:24.369 align:start position:0%
and we found in our performance testing
that<00:21:22.519><c> they</c><00:21:22.669><c> actually</c><00:21:22.820><c> really</c><00:21:23.299><c> work</c><00:21:23.600><c> best</c><00:21:23.960><c> if</c>

00:21:24.369 --> 00:21:24.379 align:start position:0%
that they actually really work best if
 

00:21:24.379 --> 00:21:27.340 align:start position:0%
that they actually really work best if
you<00:21:24.529><c> use</c><00:21:24.740><c> all</c><00:21:24.980><c> of</c><00:21:25.129><c> them</c><00:21:25.309><c> at</c><00:21:25.940><c> the</c><00:21:25.970><c> same</c><00:21:26.120><c> time</c><00:21:26.570><c> so</c>

00:21:27.340 --> 00:21:27.350 align:start position:0%
you use all of them at the same time so
 

00:21:27.350 --> 00:21:29.259 align:start position:0%
you use all of them at the same time so
this<00:21:27.620><c> is</c><00:21:27.830><c> a</c><00:21:28.100><c> ot</c><00:21:28.490><c> represents</c><00:21:29.059><c> another</c>

00:21:29.259 --> 00:21:29.269 align:start position:0%
this is a ot represents another
 

00:21:29.269 --> 00:21:32.049 align:start position:0%
this is a ot represents another
incremental<00:21:30.019><c> improvement</c><00:21:30.740><c> in</c><00:21:30.950><c> our</c><00:21:31.549><c> goals</c><00:21:31.789><c> of</c>

00:21:32.049 --> 00:21:32.059 align:start position:0%
incremental improvement in our goals of
 

00:21:32.059 --> 00:21:35.169 align:start position:0%
incremental improvement in our goals of
faster<00:21:32.960><c> startup</c><00:21:33.350><c> time</c><00:21:33.590><c> and</c><00:21:33.860><c> and</c><00:21:34.669><c> better</c>

00:21:35.169 --> 00:21:35.179 align:start position:0%
faster startup time and and better
 

00:21:35.179 --> 00:21:39.190 align:start position:0%
faster startup time and and better
memory<00:21:35.960><c> usage</c><00:21:37.029><c> so</c><00:21:38.029><c> it</c><00:21:38.480><c> was</c><00:21:38.570><c> suggested</c><00:21:38.720><c> before</c>

00:21:39.190 --> 00:21:39.200 align:start position:0%
memory usage so it was suggested before
 

00:21:39.200 --> 00:21:41.889 align:start position:0%
memory usage so it was suggested before
I<00:21:39.230><c> did</c><00:21:39.440><c> the</c><00:21:39.590><c> this</c><00:21:40.220><c> particular</c><00:21:40.669><c> talk</c><00:21:41.029><c> for</c><00:21:41.720><c> Java</c>

00:21:41.889 --> 00:21:41.899 align:start position:0%
I did the this particular talk for Java
 

00:21:41.899 --> 00:21:43.299 align:start position:0%
I did the this particular talk for Java
de<00:21:42.080><c> Tokyo</c><00:21:42.440><c> that</c><00:21:42.710><c> I</c><00:21:42.799><c> could</c><00:21:42.980><c> play</c><00:21:43.070><c> better</c>

00:21:43.299 --> 00:21:43.309 align:start position:0%
de Tokyo that I could play better
 

00:21:43.309 --> 00:21:45.369 align:start position:0%
de Tokyo that I could play better
humanize<00:21:43.820><c> my</c><00:21:44.090><c> presentations</c><00:21:44.779><c> by</c><00:21:44.929><c> having</c><00:21:45.230><c> more</c>

00:21:45.369 --> 00:21:45.379 align:start position:0%
humanize my presentations by having more
 

00:21:45.379 --> 00:21:47.379 align:start position:0%
humanize my presentations by having more
pictures<00:21:45.740><c> of</c><00:21:45.919><c> people</c><00:21:46.250><c> and</c><00:21:46.490><c> I</c><00:21:46.940><c> was</c><00:21:47.059><c> given</c><00:21:47.299><c> this</c>

00:21:47.379 --> 00:21:47.389 align:start position:0%
pictures of people and I was given this
 

00:21:47.389 --> 00:21:49.629 align:start position:0%
pictures of people and I was given this
slide<00:21:47.659><c> so</c><00:21:48.470><c> this</c><00:21:48.799><c> brings</c><00:21:48.980><c> the</c><00:21:49.129><c> total</c><00:21:49.220><c> of</c>

00:21:49.629 --> 00:21:49.639 align:start position:0%
slide so this brings the total of
 

00:21:49.639 --> 00:21:52.570 align:start position:0%
slide so this brings the total of
pictures<00:21:50.419><c> of</c><00:21:50.450><c> people</c><00:21:50.600><c> to</c><00:21:51.049><c> 10</c><00:21:51.590><c> entire</c>

00:21:52.570 --> 00:21:52.580 align:start position:0%
pictures of people to 10 entire
 

00:21:52.580 --> 00:21:54.070 align:start position:0%
pictures of people to 10 entire
presentation<00:21:53.269><c> which</c><00:21:53.480><c> is</c><00:21:53.509><c> a</c><00:21:53.659><c> pretty</c><00:21:53.929><c> good</c>

00:21:54.070 --> 00:21:54.080 align:start position:0%
presentation which is a pretty good
 

00:21:54.080 --> 00:21:55.659 align:start position:0%
presentation which is a pretty good
average<00:21:54.409><c> I</c><00:21:54.590><c> think</c><00:21:54.620><c> most</c><00:21:54.980><c> most</c><00:21:55.370><c> of</c><00:21:55.549><c> my</c>

00:21:55.659 --> 00:21:55.669 align:start position:0%
average I think most most of my
 

00:21:55.669 --> 00:21:57.310 align:start position:0%
average I think most most of my
co-workers<00:21:56.299><c> have</c><00:21:56.509><c> only</c><00:21:56.659><c> like</c><00:21:56.899><c> 5</c><00:21:57.110><c> or</c><00:21:57.139><c> 6</c>

00:21:57.310 --> 00:21:57.320 align:start position:0%
co-workers have only like 5 or 6
 

00:21:57.320 --> 00:21:59.379 align:start position:0%
co-workers have only like 5 or 6
pictures<00:21:57.740><c> of</c><00:21:58.009><c> people</c><00:21:58.309><c> so</c><00:21:58.610><c> I</c><00:21:58.820><c> don't</c><00:21:59.269><c> think</c>

00:21:59.379 --> 00:21:59.389 align:start position:0%
pictures of people so I don't think
 

00:21:59.389 --> 00:22:02.769 align:start position:0%
pictures of people so I don't think
anyone's<00:21:59.659><c> going</c><00:21:59.750><c> to</c><00:21:59.809><c> complain</c><00:22:00.110><c> anymore</c><00:22:01.779><c> usage</c>

00:22:02.769 --> 00:22:02.779 align:start position:0%
anyone's going to complain anymore usage
 

00:22:02.779 --> 00:22:04.720 align:start position:0%
anyone's going to complain anymore usage
so<00:22:03.169><c> this</c><00:22:03.409><c> is</c><00:22:03.529><c> where</c><00:22:03.649><c> we</c><00:22:03.740><c> get</c><00:22:03.889><c> into</c><00:22:04.009><c> the</c><00:22:04.100><c> meat</c><00:22:04.700><c> of</c>

00:22:04.720 --> 00:22:04.730 align:start position:0%
so this is where we get into the meat of
 

00:22:04.730 --> 00:22:06.580 align:start position:0%
so this is where we get into the meat of
things<00:22:05.059><c> so</c><00:22:05.330><c> as</c><00:22:05.779><c> already</c><00:22:06.019><c> mentioned</c><00:22:06.409><c> we</c><00:22:06.500><c> have</c>

00:22:06.580 --> 00:22:06.590 align:start position:0%
things so as already mentioned we have
 

00:22:06.590 --> 00:22:09.519 align:start position:0%
things so as already mentioned we have
this<00:22:06.679><c> new</c><00:22:06.860><c> tool</c><00:22:07.070><c> J</c><00:22:07.759><c> a</c><00:22:07.789><c> OTC</c><00:22:08.720><c> and</c><00:22:08.750><c> it's</c><00:22:09.169><c> sitting</c>

00:22:09.519 --> 00:22:09.529 align:start position:0%
this new tool J a OTC and it's sitting
 

00:22:09.529 --> 00:22:11.049 align:start position:0%
this new tool J a OTC and it's sitting
there<00:22:09.559><c> just</c><00:22:09.919><c> right</c><00:22:10.129><c> next</c><00:22:10.250><c> to</c><00:22:10.460><c> Java</c><00:22:10.700><c> C</c><00:22:10.940><c> and</c>

00:22:11.049 --> 00:22:11.059 align:start position:0%
there just right next to Java C and
 

00:22:11.059 --> 00:22:12.369 align:start position:0%
there just right next to Java C and
everything<00:22:11.389><c> else</c><00:22:11.509><c> in</c><00:22:11.720><c> your</c><00:22:12.019><c> bin</c><00:22:12.230><c> directory</c>

00:22:12.369 --> 00:22:12.379 align:start position:0%
everything else in your bin directory
 

00:22:12.379 --> 00:22:16.330 align:start position:0%
everything else in your bin directory
and<00:22:13.240><c> using</c><00:22:14.240><c> it</c><00:22:14.360><c> is</c><00:22:14.509><c> pretty</c><00:22:14.869><c> darn</c><00:22:15.110><c> simple</c>

00:22:16.330 --> 00:22:16.340 align:start position:0%
and using it is pretty darn simple
 

00:22:16.340 --> 00:22:18.279 align:start position:0%
and using it is pretty darn simple
they<00:22:16.700><c> because</c><00:22:17.570><c> you</c><00:22:17.659><c> have</c><00:22:17.779><c> to</c><00:22:17.899><c> actually</c>

00:22:18.279 --> 00:22:18.289 align:start position:0%
they because you have to actually
 

00:22:18.289 --> 00:22:21.039 align:start position:0%
they because you have to actually
explicitly<00:22:19.090><c> label</c><00:22:20.090><c> the</c><00:22:20.210><c> output</c><00:22:20.600><c> otherwise</c>

00:22:21.039 --> 00:22:21.049 align:start position:0%
explicitly label the output otherwise
 

00:22:21.049 --> 00:22:22.779 align:start position:0%
explicitly label the output otherwise
you<00:22:21.200><c> get</c><00:22:21.350><c> like</c><00:22:21.470><c> a</c><00:22:21.500><c> really</c><00:22:21.799><c> horrendous</c><00:22:21.980><c> default</c>

00:22:22.779 --> 00:22:22.789 align:start position:0%
you get like a really horrendous default
 

00:22:22.789 --> 00:22:24.039 align:start position:0%
you get like a really horrendous default
name<00:22:22.970><c> well</c><00:22:23.120><c> I</c><00:22:23.179><c> think</c><00:22:23.240><c> it's</c><00:22:23.450><c> like</c><00:22:23.539><c> output</c><00:22:23.899><c> dot</c>

00:22:24.039 --> 00:22:24.049 align:start position:0%
name well I think it's like output dot
 

00:22:24.049 --> 00:22:26.649 align:start position:0%
name well I think it's like output dot
soo<00:22:24.380><c> or</c><00:22:24.500><c> something</c><00:22:25.029><c> it</c><00:22:26.029><c> kind</c><00:22:26.240><c> of</c><00:22:26.330><c> reminds</c><00:22:26.630><c> me</c>

00:22:26.649 --> 00:22:26.659 align:start position:0%
soo or something it kind of reminds me
 

00:22:26.659 --> 00:22:30.370 align:start position:0%
soo or something it kind of reminds me
of<00:22:26.770><c> GCC</c><00:22:27.770><c> but</c><00:22:28.600><c> anyway</c><00:22:29.600><c> you</c><00:22:29.720><c> just</c><00:22:29.870><c> tell</c><00:22:30.140><c> it</c><00:22:30.260><c> what</c>

00:22:30.370 --> 00:22:30.380 align:start position:0%
of GCC but anyway you just tell it what
 

00:22:30.380 --> 00:22:31.510 align:start position:0%
of GCC but anyway you just tell it what
the<00:22:30.470><c> name</c><00:22:30.590><c> of</c><00:22:30.679><c> the</c><00:22:30.740><c> library</c><00:22:30.890><c> that</c><00:22:31.190><c> you</c><00:22:31.309><c> want</c><00:22:31.429><c> to</c>

00:22:31.510 --> 00:22:31.520 align:start position:0%
the name of the library that you want to
 

00:22:31.520 --> 00:22:33.330 align:start position:0%
the name of the library that you want to
generate<00:22:31.669><c> and</c><00:22:32.059><c> you</c><00:22:32.240><c> feed</c><00:22:32.450><c> it</c><00:22:32.480><c> your</c><00:22:32.690><c> class</c><00:22:32.929><c> and</c>

00:22:33.330 --> 00:22:33.340 align:start position:0%
generate and you feed it your class and
 

00:22:33.340 --> 00:22:36.310 align:start position:0%
generate and you feed it your class and
it<00:22:34.340><c> will</c><00:22:34.520><c> it</c><00:22:34.760><c> will</c><00:22:34.880><c> give</c><00:22:35.059><c> you</c><00:22:35.270><c> it</c><00:22:35.960><c> will</c><00:22:36.140><c> give</c>

00:22:36.310 --> 00:22:36.320 align:start position:0%
it will it will give you it will give
 

00:22:36.320 --> 00:22:38.680 align:start position:0%
it will it will give you it will give
you<00:22:36.440><c> that</c><00:22:36.590><c> that</c><00:22:36.950><c> shared</c><00:22:37.490><c> object</c><00:22:37.820><c> file</c><00:22:38.000><c> and</c><00:22:38.570><c> of</c>

00:22:38.680 --> 00:22:38.690 align:start position:0%
you that that shared object file and of
 

00:22:38.690 --> 00:22:40.480 align:start position:0%
you that that shared object file and of
course<00:22:38.929><c> there's</c><00:22:39.380><c> rather</c><00:22:39.620><c> extensive</c><00:22:40.250><c> online</c>

00:22:40.480 --> 00:22:40.490 align:start position:0%
course there's rather extensive online
 

00:22:40.490 --> 00:22:43.269 align:start position:0%
course there's rather extensive online
help<00:22:40.940><c> that</c><00:22:41.929><c> will</c><00:22:42.200><c> be</c><00:22:42.320><c> useful</c><00:22:42.559><c> especially</c><00:22:42.860><c> if</c>

00:22:43.269 --> 00:22:43.279 align:start position:0%
help that will be useful especially if
 

00:22:43.279 --> 00:22:46.090 align:start position:0%
help that will be useful especially if
it's<00:22:43.429><c> a</c><00:22:43.490><c> new</c><00:22:43.610><c> tool</c><00:22:43.820><c> and</c><00:22:44.320><c> you'll</c><00:22:45.320><c> notice</c><00:22:45.590><c> if</c><00:22:45.710><c> the</c>

00:22:46.090 --> 00:22:46.100 align:start position:0%
it's a new tool and you'll notice if the
 

00:22:46.100 --> 00:22:48.190 align:start position:0%
it's a new tool and you'll notice if the
default<00:22:46.580><c> invocation</c><00:22:47.210><c> kind</c><00:22:47.480><c> of</c><00:22:47.570><c> follows</c><00:22:48.020><c> the</c>

00:22:48.190 --> 00:22:48.200 align:start position:0%
default invocation kind of follows the
 

00:22:48.200 --> 00:22:50.919 align:start position:0%
default invocation kind of follows the
UNIX<00:22:48.529><c> philosophy</c><00:22:48.710><c> of</c><00:22:49.429><c> you</c><00:22:49.760><c> know</c><00:22:49.880><c> don't</c><00:22:50.149><c> say</c>

00:22:50.919 --> 00:22:50.929 align:start position:0%
UNIX philosophy of you know don't say
 

00:22:50.929 --> 00:22:53.260 align:start position:0%
UNIX philosophy of you know don't say
anything<00:22:51.140><c> unless</c><00:22:51.470><c> stuff</c><00:22:51.830><c> goes</c><00:22:52.039><c> wrong</c><00:22:52.279><c> and</c>

00:22:53.260 --> 00:22:53.270 align:start position:0%
anything unless stuff goes wrong and
 

00:22:53.270 --> 00:22:54.970 align:start position:0%
anything unless stuff goes wrong and
that's<00:22:53.360><c> to</c><00:22:53.630><c> be</c><00:22:53.720><c> compatible</c><00:22:54.049><c> with</c><00:22:54.320><c> all</c><00:22:54.799><c> your</c>

00:22:54.970 --> 00:22:54.980 align:start position:0%
that's to be compatible with all your
 

00:22:54.980 --> 00:22:56.409 align:start position:0%
that's to be compatible with all your
standard<00:22:55.190><c> tools</c><00:22:55.610><c> that</c><00:22:55.820><c> assume</c><00:22:56.090><c> that</c><00:22:56.120><c> any</c>

00:22:56.409 --> 00:22:56.419 align:start position:0%
standard tools that assume that any
 

00:22:56.419 --> 00:22:58.990 align:start position:0%
standard tools that assume that any
extraneous<00:22:56.870><c> outplay</c><00:22:57.640><c> represents</c><00:22:58.640><c> some</c><00:22:58.789><c> sort</c>

00:22:58.990 --> 00:22:59.000 align:start position:0%
extraneous outplay represents some sort
 

00:22:59.000 --> 00:23:01.180 align:start position:0%
extraneous outplay represents some sort
of<00:22:59.059><c> error</c><00:22:59.320><c> but</c><00:23:00.320><c> you</c><00:23:00.380><c> can</c><00:23:00.559><c> change</c><00:23:00.740><c> that</c><00:23:00.860><c> with</c>

00:23:01.180 --> 00:23:01.190 align:start position:0%
of error but you can change that with
 

00:23:01.190 --> 00:23:02.860 align:start position:0%
of error but you can change that with
the<00:23:01.399><c> info</c><00:23:01.700><c> flag</c><00:23:01.970><c> and</c><00:23:02.240><c> that</c><00:23:02.330><c> kind</c><00:23:02.510><c> of</c><00:23:02.600><c> visit</c>

00:23:02.860 --> 00:23:02.870 align:start position:0%
the info flag and that kind of visit
 

00:23:02.870 --> 00:23:04.480 align:start position:0%
the info flag and that kind of visit
it's<00:23:02.990><c> like</c><00:23:03.080><c> a</c><00:23:03.110><c> verbose</c><00:23:03.529><c> setting</c><00:23:03.950><c> and</c><00:23:04.250><c> it</c><00:23:04.340><c> that</c>

00:23:04.480 --> 00:23:04.490 align:start position:0%
it's like a verbose setting and it that
 

00:23:04.490 --> 00:23:06.820 align:start position:0%
it's like a verbose setting and it that
will<00:23:04.640><c> actually</c><00:23:04.909><c> tell</c><00:23:05.120><c> you</c><00:23:05.149><c> what</c><00:23:06.020><c> it</c><00:23:06.289><c> what</c><00:23:06.590><c> it</c>

00:23:06.820 --> 00:23:06.830 align:start position:0%
will actually tell you what it what it
 

00:23:06.830 --> 00:23:09.250 align:start position:0%
will actually tell you what it what it
found<00:23:07.159><c> in</c><00:23:07.580><c> the</c><00:23:07.610><c> class</c><00:23:07.940><c> file</c><00:23:08.330><c> and</c><00:23:08.750><c> and</c><00:23:08.960><c> what</c><00:23:09.169><c> it</c>

00:23:09.250 --> 00:23:09.260 align:start position:0%
found in the class file and and what it
 

00:23:09.260 --> 00:23:12.250 align:start position:0%
found in the class file and and what it
decide<00:23:09.620><c> decided</c><00:23:10.490><c> to</c><00:23:10.580><c> try</c><00:23:10.820><c> and</c><00:23:11.000><c> compile</c><00:23:11.360><c> so</c><00:23:11.870><c> you</c>

00:23:12.250 --> 00:23:12.260 align:start position:0%
decide decided to try and compile so you
 

00:23:12.260 --> 00:23:13.630 align:start position:0%
decide decided to try and compile so you
can<00:23:12.409><c> kind</c><00:23:12.590><c> of</c><00:23:12.649><c> prove</c><00:23:12.860><c> to</c><00:23:12.980><c> yourself</c><00:23:13.309><c> that</c><00:23:13.399><c> it's</c>

00:23:13.630 --> 00:23:13.640 align:start position:0%
can kind of prove to yourself that it's
 

00:23:13.640 --> 00:23:16.360 align:start position:0%
can kind of prove to yourself that it's
working<00:23:14.000><c> as</c><00:23:14.330><c> you</c><00:23:14.480><c> expect</c><00:23:14.899><c> it</c><00:23:15.080><c> to</c><00:23:15.110><c> do</c><00:23:15.470><c> which</c><00:23:16.220><c> is</c>

00:23:16.360 --> 00:23:16.370 align:start position:0%
working as you expect it to do which is
 

00:23:16.370 --> 00:23:17.649 align:start position:0%
working as you expect it to do which is
kind<00:23:16.549><c> of</c><00:23:16.580><c> important</c><00:23:16.970><c> to</c><00:23:17.000><c> do</c><00:23:17.149><c> the</c><00:23:17.270><c> sanity</c>

00:23:17.649 --> 00:23:17.659 align:start position:0%
kind of important to do the sanity
 

00:23:17.659 --> 00:23:20.049 align:start position:0%
kind of important to do the sanity
checks<00:23:17.899><c> when</c><00:23:18.080><c> you're</c><00:23:18.169><c> using</c><00:23:18.320><c> a</c><00:23:18.500><c> new</c><00:23:18.620><c> tool</c><00:23:19.059><c> so</c>

00:23:20.049 --> 00:23:20.059 align:start position:0%
checks when you're using a new tool so
 

00:23:20.059 --> 00:23:22.210 align:start position:0%
checks when you're using a new tool so
there's<00:23:20.929><c> there's</c><00:23:21.230><c> a</c><00:23:21.289><c> few</c><00:23:21.529><c> gotchas</c><00:23:21.710><c> that</c><00:23:21.980><c> are</c>

00:23:22.210 --> 00:23:22.220 align:start position:0%
there's there's a few gotchas that are
 

00:23:22.220 --> 00:23:24.850 align:start position:0%
there's there's a few gotchas that are
kind<00:23:22.370><c> of</c><00:23:22.460><c> interesting</c><00:23:22.909><c> one</c><00:23:23.090><c> is</c><00:23:23.240><c> that</c><00:23:23.860><c> by</c>

00:23:24.850 --> 00:23:24.860 align:start position:0%
kind of interesting one is that by
 

00:23:24.860 --> 00:23:27.039 align:start position:0%
kind of interesting one is that by
assertions<00:23:25.820><c> which</c><00:23:26.090><c> most</c><00:23:26.330><c> people</c><00:23:26.630><c> you</c><00:23:27.020><c> know</c>

00:23:27.039 --> 00:23:27.049 align:start position:0%
assertions which most people you know
 

00:23:27.049 --> 00:23:30.669 align:start position:0%
assertions which most people you know
never<00:23:27.350><c> bother</c><00:23:27.740><c> to</c><00:23:27.860><c> enable</c><00:23:28.690><c> actually</c><00:23:29.690><c> has</c><00:23:30.500><c> to</c>

00:23:30.669 --> 00:23:30.679 align:start position:0%
never bother to enable actually has to
 

00:23:30.679 --> 00:23:33.880 align:start position:0%
never bother to enable actually has to
be<00:23:30.710><c> known</c><00:23:31.669><c> at</c><00:23:32.000><c> compile</c><00:23:32.690><c> time</c><00:23:32.720><c> and</c><00:23:33.260><c> normally</c><00:23:33.830><c> of</c>

00:23:33.880 --> 00:23:33.890 align:start position:0%
be known at compile time and normally of
 

00:23:33.890 --> 00:23:35.169 align:start position:0%
be known at compile time and normally of
JIT<00:23:34.070><c> compilation</c><00:23:34.220><c> this</c><00:23:34.730><c> isn't</c><00:23:35.000><c> an</c><00:23:35.059><c> issue</c>

00:23:35.169 --> 00:23:35.179 align:start position:0%
JIT compilation this isn't an issue
 

00:23:35.179 --> 00:23:38.200 align:start position:0%
JIT compilation this isn't an issue
because<00:23:35.720><c> the</c><00:23:35.990><c> the</c><00:23:36.200><c> JVM</c><00:23:36.620><c> knows</c><00:23:36.860><c> if</c><00:23:37.279><c> you</c><00:23:37.520><c> have</c><00:23:38.029><c> an</c>

00:23:38.200 --> 00:23:38.210 align:start position:0%
because the the JVM knows if you have an
 

00:23:38.210 --> 00:23:40.510 align:start position:0%
because the the JVM knows if you have an
assertion<00:23:38.630><c> is</c><00:23:38.899><c> enabled</c><00:23:39.260><c> or</c><00:23:39.350><c> not</c><00:23:39.380><c> but</c><00:23:40.309><c> one</c>

00:23:40.510 --> 00:23:40.520 align:start position:0%
assertion is enabled or not but one
 

00:23:40.520 --> 00:23:41.500 align:start position:0%
assertion is enabled or not but one
thing<00:23:40.700><c> that</c><00:23:40.820><c> could</c><00:23:40.880><c> happen</c><00:23:41.059><c> is</c><00:23:41.270><c> if</c><00:23:41.299><c> you</c>

00:23:41.500 --> 00:23:41.510 align:start position:0%
thing that could happen is if you
 

00:23:41.510 --> 00:23:44.830 align:start position:0%
thing that could happen is if you
compile<00:23:41.899><c> without</c><00:23:42.350><c> assertions</c><00:23:43.100><c> enabled</c><00:23:43.840><c> ahead</c>

00:23:44.830 --> 00:23:44.840 align:start position:0%
compile without assertions enabled ahead
 

00:23:44.840 --> 00:23:47.230 align:start position:0%
compile without assertions enabled ahead
of<00:23:44.960><c> time</c><00:23:45.200><c> and</c><00:23:45.529><c> then</c><00:23:46.070><c> you</c><00:23:46.130><c> run</c><00:23:46.370><c> it</c><00:23:46.490><c> in</c><00:23:46.669><c> your</c><00:23:46.789><c> JVM</c>

00:23:47.230 --> 00:23:47.240 align:start position:0%
of time and then you run it in your JVM
 

00:23:47.240 --> 00:23:49.299 align:start position:0%
of time and then you run it in your JVM
you<00:23:47.720><c> think</c><00:23:47.990><c> during</c><00:23:48.289><c> the</c><00:23:48.380><c> runtime</c><00:23:48.559><c> that</c><00:23:48.799><c> just</c>

00:23:49.299 --> 00:23:49.309 align:start position:0%
you think during the runtime that just
 

00:23:49.309 --> 00:23:52.000 align:start position:0%
you think during the runtime that just
by<00:23:49.460><c> enabling</c><00:23:49.700><c> assertions</c><00:23:50.539><c> there</c><00:23:51.409><c> that</c><00:23:51.890><c> you're</c>

00:23:52.000 --> 00:23:52.010 align:start position:0%
by enabling assertions there that you're
 

00:23:52.010 --> 00:23:53.769 align:start position:0%
by enabling assertions there that you're
getting<00:23:52.190><c> all</c><00:23:52.370><c> of</c><00:23:52.460><c> your</c><00:23:52.610><c> assertions</c><00:23:53.149><c> turned</c><00:23:53.600><c> on</c>

00:23:53.769 --> 00:23:53.779 align:start position:0%
getting all of your assertions turned on
 

00:23:53.779 --> 00:23:56.110 align:start position:0%
getting all of your assertions turned on
when<00:23:54.380><c> in</c><00:23:54.470><c> reality</c><00:23:54.909><c> anything</c><00:23:55.909><c> that</c><00:23:56.029><c> you</c>

00:23:56.110 --> 00:23:56.120 align:start position:0%
when in reality anything that you
 

00:23:56.120 --> 00:23:58.090 align:start position:0%
when in reality anything that you
compile<00:23:56.450><c> ahead</c><00:23:56.750><c> of</c><00:23:56.840><c> time</c><00:23:57.020><c> with</c><00:23:57.559><c> with</c><00:23:57.890><c> this</c>

00:23:58.090 --> 00:23:58.100 align:start position:0%
compile ahead of time with with this
 

00:23:58.100 --> 00:23:59.889 align:start position:0%
compile ahead of time with with this
tool<00:23:58.429><c> will</c><00:23:59.000><c> not</c><00:23:59.029><c> have</c><00:23:59.299><c> the</c><00:23:59.390><c> assertions</c>

00:23:59.889 --> 00:23:59.899 align:start position:0%
tool will not have the assertions
 

00:23:59.899 --> 00:24:01.419 align:start position:0%
tool will not have the assertions
enabled<00:24:00.320><c> so</c><00:24:00.799><c> if</c><00:24:00.860><c> you</c><00:24:00.980><c> want</c><00:24:01.130><c> to</c><00:24:01.190><c> have</c><00:24:01.279><c> those</c>

00:24:01.419 --> 00:24:01.429 align:start position:0%
enabled so if you want to have those
 

00:24:01.429 --> 00:24:02.620 align:start position:0%
enabled so if you want to have those
assertions<00:24:01.700><c> on</c><00:24:02.029><c> you</c><00:24:02.179><c> have</c><00:24:02.299><c> to</c><00:24:02.330><c> make</c><00:24:02.419><c> that</c>

00:24:02.620 --> 00:24:02.630 align:start position:0%
assertions on you have to make that
 

00:24:02.630 --> 00:24:05.680 align:start position:0%
assertions on you have to make that
decision<00:24:02.990><c> when</c><00:24:03.770><c> you</c><00:24:03.919><c> do</c><00:24:04.100><c> the</c><00:24:04.250><c> äôt</c><00:24:04.700><c> compilation</c>

00:24:05.680 --> 00:24:05.690 align:start position:0%
decision when you do the äôt compilation
 

00:24:05.690 --> 00:24:07.690 align:start position:0%
decision when you do the äôt compilation
and<00:24:05.929><c> this</c><00:24:06.470><c> flag</c><00:24:06.710><c> this</c><00:24:07.039><c> compile</c><00:24:07.490><c> with</c>

00:24:07.690 --> 00:24:07.700 align:start position:0%
and this flag this compile with
 

00:24:07.700 --> 00:24:11.169 align:start position:0%
and this flag this compile with
assertions<00:24:08.270><c> lets</c><00:24:08.809><c> you</c><00:24:08.929><c> do</c><00:24:09.080><c> that</c><00:24:09.260><c> I</c><00:24:10.250><c> think</c><00:24:11.029><c> we</c>

00:24:11.169 --> 00:24:11.179 align:start position:0%
assertions lets you do that I think we
 

00:24:11.179 --> 00:24:13.870 align:start position:0%
assertions lets you do that I think we
have<00:24:11.270><c> the</c><00:24:11.330><c> compiled</c><00:24:11.720><c> commands</c><00:24:12.140><c> flag</c><00:24:12.529><c> and</c><00:24:12.880><c> this</c>

00:24:13.870 --> 00:24:13.880 align:start position:0%
have the compiled commands flag and this
 

00:24:13.880 --> 00:24:15.700 align:start position:0%
have the compiled commands flag and this
is<00:24:14.029><c> simply</c><00:24:14.330><c> just</c><00:24:14.360><c> a</c><00:24:14.600><c> way</c><00:24:14.750><c> to</c><00:24:14.779><c> kind</c><00:24:15.169><c> of</c><00:24:15.260><c> bail</c><00:24:15.470><c> out</c>

00:24:15.700 --> 00:24:15.710 align:start position:0%
is simply just a way to kind of bail out
 

00:24:15.710 --> 00:24:18.730 align:start position:0%
is simply just a way to kind of bail out
of<00:24:16.010><c> compiling</c><00:24:16.850><c> specific</c><00:24:17.750><c> methods</c><00:24:18.110><c> in</c><00:24:18.649><c> the</c>

00:24:18.730 --> 00:24:18.740 align:start position:0%
of compiling specific methods in the
 

00:24:18.740 --> 00:24:20.380 align:start position:0%
of compiling specific methods in the
future<00:24:19.039><c> we</c><00:24:19.159><c> might</c><00:24:19.309><c> expand</c><00:24:19.700><c> this</c><00:24:19.850><c> we</c><00:24:20.029><c> might</c><00:24:20.240><c> add</c>

00:24:20.380 --> 00:24:20.390 align:start position:0%
future we might expand this we might add
 

00:24:20.390 --> 00:24:23.409 align:start position:0%
future we might expand this we might add
other<00:24:20.570><c> options</c><00:24:21.080><c> or</c><00:24:21.350><c> settings</c><00:24:21.860><c> or</c><00:24:22.039><c> whatnot</c><00:24:22.419><c> but</c>

00:24:23.409 --> 00:24:23.419 align:start position:0%
other options or settings or whatnot but
 

00:24:23.419 --> 00:24:26.200 align:start position:0%
other options or settings or whatnot but
as<00:24:23.600><c> of</c><00:24:23.960><c> today</c><00:24:24.110><c> the</c><00:24:24.830><c> only</c><00:24:25.010><c> thing</c><00:24:25.190><c> we</c><00:24:25.309><c> support</c><00:24:26.000><c> is</c>

00:24:26.200 --> 00:24:26.210 align:start position:0%
as of today the only thing we support is
 

00:24:26.210 --> 00:24:28.210 align:start position:0%
as of today the only thing we support is
excluding<00:24:26.929><c> individual</c><00:24:27.470><c> methods</c>

00:24:28.210 --> 00:24:28.220 align:start position:0%
excluding individual methods
 

00:24:28.220 --> 00:24:30.640 align:start position:0%
excluding individual methods
or<00:24:28.340><c> you</c><00:24:28.850><c> can</c><00:24:29.000><c> use</c><00:24:29.090><c> wildcards</c><00:24:29.780><c> to</c><00:24:30.049><c> to</c><00:24:30.470><c> say</c>

00:24:30.640 --> 00:24:30.650 align:start position:0%
or you can use wildcards to to say
 

00:24:30.650 --> 00:24:33.669 align:start position:0%
or you can use wildcards to to say
exclude<00:24:31.100><c> an</c><00:24:31.460><c> entire</c><00:24:31.760><c> package</c><00:24:32.059><c> and</c><00:24:32.570><c> so</c><00:24:33.200><c> because</c>

00:24:33.669 --> 00:24:33.679 align:start position:0%
exclude an entire package and so because
 

00:24:33.679 --> 00:24:35.380 align:start position:0%
exclude an entire package and so because
this<00:24:33.830><c> technology</c><00:24:34.190><c> is</c><00:24:34.520><c> new</c><00:24:34.730><c> and</c><00:24:34.970><c> we</c><00:24:35.120><c> haven't</c>

00:24:35.380 --> 00:24:35.390 align:start position:0%
this technology is new and we haven't
 

00:24:35.390 --> 00:24:37.330 align:start position:0%
this technology is new and we haven't
exactly<00:24:35.690><c> worked</c><00:24:35.870><c> out</c><00:24:36.169><c> all</c><00:24:36.289><c> the</c><00:24:36.320><c> kinks</c><00:24:36.440><c> there</c>

00:24:37.330 --> 00:24:37.340 align:start position:0%
exactly worked out all the kinks there
 

00:24:37.340 --> 00:24:39.760 align:start position:0%
exactly worked out all the kinks there
are<00:24:37.460><c> cases</c><00:24:37.640><c> where</c><00:24:38.120><c> you</c><00:24:38.419><c> you'll</c><00:24:38.990><c> have</c><00:24:39.470><c> problems</c>

00:24:39.760 --> 00:24:39.770 align:start position:0%
are cases where you you'll have problems
 

00:24:39.770 --> 00:24:42.159 align:start position:0%
are cases where you you'll have problems
where<00:24:40.220><c> a</c><00:24:40.490><c> particular</c><00:24:40.850><c> method</c><00:24:41.360><c> might</c><00:24:41.929><c> cause</c>

00:24:42.159 --> 00:24:42.169 align:start position:0%
where a particular method might cause
 

00:24:42.169 --> 00:24:45.210 align:start position:0%
where a particular method might cause
the<00:24:42.500><c> äôt</c><00:24:43.159><c> compilation</c><00:24:43.760><c> itself</c><00:24:44.179><c> to</c><00:24:44.390><c> fail</c><00:24:44.600><c> or</c>

00:24:45.210 --> 00:24:45.220 align:start position:0%
the äôt compilation itself to fail or
 

00:24:45.220 --> 00:24:48.340 align:start position:0%
the äôt compilation itself to fail or
perhaps<00:24:46.220><c> even</c><00:24:46.429><c> worse</c><00:24:46.700><c> the</c><00:24:47.600><c> method</c><00:24:47.870><c> might</c><00:24:48.020><c> be</c>

00:24:48.340 --> 00:24:48.350 align:start position:0%
perhaps even worse the method might be
 

00:24:48.350 --> 00:24:50.409 align:start position:0%
perhaps even worse the method might be
compiled<00:24:48.710><c> but</c><00:24:49.429><c> it</c><00:24:49.730><c> might</c><00:24:49.940><c> be</c><00:24:50.090><c> compiled</c>

00:24:50.409 --> 00:24:50.419 align:start position:0%
compiled but it might be compiled
 

00:24:50.419 --> 00:24:52.840 align:start position:0%
compiled but it might be compiled
incorrectly<00:24:50.960><c> and</c><00:24:51.230><c> so</c><00:24:51.380><c> the</c><00:24:51.830><c> generated</c><00:24:52.340><c> machine</c>

00:24:52.840 --> 00:24:52.850 align:start position:0%
incorrectly and so the generated machine
 

00:24:52.850 --> 00:24:54.490 align:start position:0%
incorrectly and so the generated machine
code<00:24:53.090><c> might</c><00:24:53.330><c> have</c><00:24:53.539><c> some</c><00:24:53.720><c> sort</c><00:24:53.960><c> of</c><00:24:53.990><c> problem</c><00:24:54.230><c> in</c>

00:24:54.490 --> 00:24:54.500 align:start position:0%
code might have some sort of problem in
 

00:24:54.500 --> 00:24:56.680 align:start position:0%
code might have some sort of problem in
it<00:24:54.620><c> and</c><00:24:54.799><c> so</c><00:24:55.130><c> at</c><00:24:55.250><c> runtime</c><00:24:55.490><c> that</c><00:24:56.000><c> problem</c>

00:24:56.680 --> 00:24:56.690 align:start position:0%
it and so at runtime that problem
 

00:24:56.690 --> 00:24:59.409 align:start position:0%
it and so at runtime that problem
manifests<00:24:57.230><c> in</c><00:24:57.350><c> some</c><00:24:57.530><c> scary</c><00:24:58.070><c> way</c><00:24:58.280><c> and</c><00:24:58.549><c> so</c><00:24:59.210><c> what</c>

00:24:59.409 --> 00:24:59.419 align:start position:0%
manifests in some scary way and so what
 

00:24:59.419 --> 00:25:00.880 align:start position:0%
manifests in some scary way and so what
you<00:24:59.480><c> can</c><00:24:59.510><c> do</c><00:24:59.720><c> is</c><00:24:59.840><c> if</c><00:24:59.960><c> you</c><00:25:00.049><c> find</c><00:25:00.350><c> that</c><00:25:00.500><c> there's</c><00:25:00.830><c> a</c>

00:25:00.880 --> 00:25:00.890 align:start position:0%
you can do is if you find that there's a
 

00:25:00.890 --> 00:25:02.140 align:start position:0%
you can do is if you find that there's a
particular<00:25:01.070><c> method</c><00:25:01.580><c> that's</c><00:25:01.730><c> causing</c><00:25:01.970><c> a</c>

00:25:02.140 --> 00:25:02.150 align:start position:0%
particular method that's causing a
 

00:25:02.150 --> 00:25:04.659 align:start position:0%
particular method that's causing a
problem<00:25:02.530><c> well</c><00:25:03.530><c> first</c><00:25:03.770><c> thing</c><00:25:03.919><c> is</c><00:25:03.980><c> I'm</c><00:25:04.130><c> hoping</c>

00:25:04.659 --> 00:25:04.669 align:start position:0%
problem well first thing is I'm hoping
 

00:25:04.669 --> 00:25:06.700 align:start position:0%
problem well first thing is I'm hoping
that<00:25:04.820><c> you'll</c><00:25:04.940><c> send</c><00:25:05.419><c> us</c><00:25:05.480><c> a</c><00:25:05.600><c> bug</c><00:25:05.750><c> report</c><00:25:06.049><c> if</c><00:25:06.289><c> we</c>

00:25:06.700 --> 00:25:06.710 align:start position:0%
that you'll send us a bug report if we
 

00:25:06.710 --> 00:25:08.440 align:start position:0%
that you'll send us a bug report if we
don't<00:25:06.860><c> know</c><00:25:06.980><c> about</c><00:25:07.070><c> it</c><00:25:07.280><c> already</c><00:25:07.429><c> but</c><00:25:08.360><c> the</c>

00:25:08.440 --> 00:25:08.450 align:start position:0%
don't know about it already but the
 

00:25:08.450 --> 00:25:09.970 align:start position:0%
don't know about it already but the
second<00:25:08.750><c> thing</c><00:25:08.870><c> is</c><00:25:08.990><c> that</c><00:25:09.140><c> you</c><00:25:09.260><c> can</c><00:25:09.470><c> use</c><00:25:09.740><c> an</c>

00:25:09.970 --> 00:25:09.980 align:start position:0%
second thing is that you can use an
 

00:25:09.980 --> 00:25:12.520 align:start position:0%
second thing is that you can use an
exclude<00:25:10.400><c> line</c><00:25:10.640><c> in</c><00:25:10.940><c> a</c><00:25:11.539><c> compiled</c><00:25:11.870><c> commands</c><00:25:12.230><c> file</c>

00:25:12.520 --> 00:25:12.530 align:start position:0%
exclude line in a compiled commands file
 

00:25:12.530 --> 00:25:15.460 align:start position:0%
exclude line in a compiled commands file
so<00:25:13.190><c> you</c><00:25:13.250><c> can</c><00:25:13.610><c> just</c><00:25:13.760><c> tell</c><00:25:14.059><c> a</c><00:25:14.330><c> OT</c><00:25:14.630><c> to</c><00:25:14.960><c> compile</c>

00:25:15.460 --> 00:25:15.470 align:start position:0%
so you can just tell a OT to compile
 

00:25:15.470 --> 00:25:17.289 align:start position:0%
so you can just tell a OT to compile
everything<00:25:15.799><c> but</c><00:25:16.159><c> that</c><00:25:16.340><c> method</c><00:25:16.760><c> and</c><00:25:16.909><c> then</c>

00:25:17.289 --> 00:25:17.299 align:start position:0%
everything but that method and then
 

00:25:17.299 --> 00:25:20.799 align:start position:0%
everything but that method and then
continue<00:25:18.020><c> using</c><00:25:18.380><c> it</c><00:25:19.120><c> so</c><00:25:20.120><c> it's</c><00:25:20.450><c> not</c><00:25:20.600><c> just</c>

00:25:20.799 --> 00:25:20.809 align:start position:0%
continue using it so it's not just
 

00:25:20.809 --> 00:25:22.510 align:start position:0%
continue using it so it's not just
classes<00:25:21.049><c> the</c><00:25:21.470><c> the</c><00:25:21.710><c> kind</c><00:25:21.890><c> of</c><00:25:21.980><c> hello</c><00:25:22.190><c> world</c>

00:25:22.510 --> 00:25:22.520 align:start position:0%
classes the the kind of hello world
 

00:25:22.520 --> 00:25:24.340 align:start position:0%
classes the the kind of hello world
example<00:25:22.640><c> is</c><00:25:23.120><c> just</c><00:25:23.419><c> you</c><00:25:23.630><c> know</c><00:25:23.659><c> doing</c><00:25:24.020><c> a</c><00:25:24.110><c> class</c>

00:25:24.340 --> 00:25:24.350 align:start position:0%
example is just you know doing a class
 

00:25:24.350 --> 00:25:27.100 align:start position:0%
example is just you know doing a class
but<00:25:24.789><c> in</c><00:25:25.789><c> practice</c><00:25:26.360><c> what</c><00:25:26.510><c> we</c><00:25:26.630><c> usually</c><00:25:26.929><c> want</c><00:25:27.049><c> to</c>

00:25:27.100 --> 00:25:27.110 align:start position:0%
but in practice what we usually want to
 

00:25:27.110 --> 00:25:28.930 align:start position:0%
but in practice what we usually want to
work<00:25:27.260><c> with</c><00:25:27.440><c> is</c><00:25:27.590><c> either</c><00:25:27.740><c> an</c><00:25:27.950><c> entire</c><00:25:28.220><c> module</c><00:25:28.669><c> at</c>

00:25:28.930 --> 00:25:28.940 align:start position:0%
work with is either an entire module at
 

00:25:28.940 --> 00:25:32.110 align:start position:0%
work with is either an entire module at
a<00:25:28.970><c> time</c><00:25:29.270><c> or</c><00:25:29.539><c> an</c><00:25:30.289><c> entire</c><00:25:30.950><c> jar</c><00:25:31.280><c> file</c><00:25:31.580><c> at</c><00:25:31.970><c> a</c><00:25:32.030><c> time</c>

00:25:32.110 --> 00:25:32.120 align:start position:0%
a time or an entire jar file at a time
 

00:25:32.120 --> 00:25:35.860 align:start position:0%
a time or an entire jar file at a time
and<00:25:33.159><c> äôt</c><00:25:34.159><c> has</c><00:25:34.309><c> no</c><00:25:34.460><c> problem</c><00:25:34.880><c> doing</c><00:25:35.450><c> that</c><00:25:35.480><c> it'll</c>

00:25:35.860 --> 00:25:35.870 align:start position:0%
and äôt has no problem doing that it'll
 

00:25:35.870 --> 00:25:37.720 align:start position:0%
and äôt has no problem doing that it'll
just<00:25:35.900><c> suck</c><00:25:36.230><c> the</c><00:25:36.350><c> entire</c><00:25:36.620><c> thing</c><00:25:36.830><c> up</c><00:25:36.980><c> one</c><00:25:37.460><c> thing</c>

00:25:37.720 --> 00:25:37.730 align:start position:0%
just suck the entire thing up one thing
 

00:25:37.730 --> 00:25:40.750 align:start position:0%
just suck the entire thing up one thing
I<00:25:38.049><c> want</c><00:25:39.049><c> to</c><00:25:39.140><c> point</c><00:25:39.289><c> out</c><00:25:39.440><c> is</c><00:25:39.620><c> that</c><00:25:39.760><c> compilation</c>

00:25:40.750 --> 00:25:40.760 align:start position:0%
I want to point out is that compilation
 

00:25:40.760 --> 00:25:42.370 align:start position:0%
I want to point out is that compilation
as<00:25:40.880><c> I've</c><00:25:41.030><c> said</c><00:25:41.210><c> several</c><00:25:41.600><c> times</c><00:25:41.929><c> already</c><00:25:42.110><c> is</c>

00:25:42.370 --> 00:25:42.380 align:start position:0%
as I've said several times already is
 

00:25:42.380 --> 00:25:45.730 align:start position:0%
as I've said several times already is
extremely<00:25:43.100><c> resource</c><00:25:43.909><c> intensive</c><00:25:44.780><c> and</c><00:25:45.049><c> Grell</c>

00:25:45.730 --> 00:25:45.740 align:start position:0%
extremely resource intensive and Grell
 

00:25:45.740 --> 00:25:48.880 align:start position:0%
extremely resource intensive and Grell
which<00:25:46.070><c> is</c><00:25:46.280><c> the</c><00:25:46.570><c> compiler</c><00:25:47.570><c> that</c><00:25:48.200><c> we</c><00:25:48.500><c> use</c><00:25:48.679><c> for</c>

00:25:48.880 --> 00:25:48.890 align:start position:0%
which is the compiler that we use for
 

00:25:48.890 --> 00:25:52.240 align:start position:0%
which is the compiler that we use for
IOT<00:25:49.100><c> compilation</c><00:25:50.289><c> definitely</c><00:25:51.289><c> uses</c><00:25:51.980><c> a</c><00:25:52.010><c> lot</c><00:25:52.220><c> of</c>

00:25:52.240 --> 00:25:52.250 align:start position:0%
IOT compilation definitely uses a lot of
 

00:25:52.250 --> 00:25:54.010 align:start position:0%
IOT compilation definitely uses a lot of
a<00:25:52.640><c> lot</c><00:25:52.940><c> of</c><00:25:52.970><c> memory</c><00:25:53.330><c> and</c><00:25:53.450><c> a</c><00:25:53.510><c> lot</c><00:25:53.539><c> of</c><00:25:53.659><c> resources</c>

00:25:54.010 --> 00:25:54.020 align:start position:0%
a lot of memory and a lot of resources
 

00:25:54.020 --> 00:25:56.260 align:start position:0%
a lot of memory and a lot of resources
and<00:25:54.380><c> because</c><00:25:54.620><c> this</c><00:25:54.740><c> actually</c><00:25:55.130><c> happens</c><00:25:55.940><c> in</c>

00:25:56.260 --> 00:25:56.270 align:start position:0%
and because this actually happens in
 

00:25:56.270 --> 00:25:58.419 align:start position:0%
and because this actually happens in
Java<00:25:56.809><c> this</c><00:25:56.990><c> is</c><00:25:57.409><c> you</c><00:25:57.530><c> know</c><00:25:57.620><c> this</c><00:25:57.740><c> is</c><00:25:57.860><c> all</c><00:25:58.130><c> Java</c>

00:25:58.419 --> 00:25:58.429 align:start position:0%
Java this is you know this is all Java
 

00:25:58.429 --> 00:26:00.159 align:start position:0%
Java this is you know this is all Java
software<00:25:58.730><c> that</c><00:25:59.150><c> does</c><00:25:59.299><c> the</c><00:25:59.450><c> compilation</c><00:25:59.960><c> for</c>

00:26:00.159 --> 00:26:00.169 align:start position:0%
software that does the compilation for
 

00:26:00.169 --> 00:26:04.029 align:start position:0%
software that does the compilation for
us<00:26:00.610><c> this</c><00:26:01.610><c> is</c><00:26:01.820><c> a</c><00:26:01.850><c> native</c><00:26:02.240><c> code</c><00:26:02.740><c> we</c><00:26:03.740><c> actually</c>

00:26:04.029 --> 00:26:04.039 align:start position:0%
us this is a native code we actually
 

00:26:04.039 --> 00:26:06.010 align:start position:0%
us this is a native code we actually
have<00:26:04.190><c> a</c><00:26:04.220><c> heap</c><00:26:04.490><c> that</c><00:26:04.970><c> you</c><00:26:05.090><c> can</c><00:26:05.270><c> run</c><00:26:05.450><c> out</c><00:26:05.600><c> of</c><00:26:05.780><c> and</c>

00:26:06.010 --> 00:26:06.020 align:start position:0%
have a heap that you can run out of and
 

00:26:06.020 --> 00:26:08.860 align:start position:0%
have a heap that you can run out of and
so<00:26:06.470><c> for</c><00:26:06.650><c> example</c><00:26:07.039><c> if</c><00:26:07.250><c> you're</c><00:26:07.789><c> compiling</c><00:26:08.539><c> the</c>

00:26:08.860 --> 00:26:08.870 align:start position:0%
so for example if you're compiling the
 

00:26:08.870 --> 00:26:11.350 align:start position:0%
so for example if you're compiling the
entire<00:26:09.169><c> java</c><00:26:09.440><c> base</c><00:26:09.820><c> module</c>

00:26:11.350 --> 00:26:11.360 align:start position:0%
entire java base module
 

00:26:11.360 --> 00:26:14.669 align:start position:0%
entire java base module
I<00:26:11.440><c> found</c><00:26:12.440><c> recent</c><00:26:13.130><c> builds</c><00:26:13.490><c> that</c><00:26:13.669><c> I</c><00:26:13.700><c> need</c><00:26:13.940><c> about</c>

00:26:14.669 --> 00:26:14.679 align:start position:0%
I found recent builds that I need about
 

00:26:14.679 --> 00:26:16.630 align:start position:0%
I found recent builds that I need about
somewhere<00:26:15.679><c> between</c><00:26:15.740><c> a</c><00:26:16.010><c> five</c><00:26:16.220><c> and</c><00:26:16.400><c> a</c><00:26:16.460><c> six</c>

00:26:16.630 --> 00:26:16.640 align:start position:0%
somewhere between a five and a six
 

00:26:16.640 --> 00:26:20.440 align:start position:0%
somewhere between a five and a six
gigabyte<00:26:17.179><c> heap</c><00:26:17.510><c> just</c><00:26:17.809><c> two</c><00:26:18.620><c> to</c><00:26:19.130><c> compile</c><00:26:19.610><c> Java</c>

00:26:20.440 --> 00:26:20.450 align:start position:0%
gigabyte heap just two to compile Java
 

00:26:20.450 --> 00:26:22.210 align:start position:0%
gigabyte heap just two to compile Java
base<00:26:20.690><c> so</c><00:26:20.929><c> if</c><00:26:21.049><c> you</c><00:26:21.169><c> pass</c><00:26:21.409><c> this</c><00:26:21.710><c> command</c><00:26:22.070><c> line</c>

00:26:22.210 --> 00:26:22.220 align:start position:0%
base so if you pass this command line
 

00:26:22.220 --> 00:26:26.590 align:start position:0%
base so if you pass this command line
today<00:26:22.820><c> to</c><00:26:23.720><c> the</c><00:26:24.500><c> äôt</c><00:26:25.490><c> compiler</c><00:26:26.090><c> it'll</c><00:26:26.480><c> actually</c>

00:26:26.590 --> 00:26:26.600 align:start position:0%
today to the äôt compiler it'll actually
 

00:26:26.600 --> 00:26:28.360 align:start position:0%
today to the äôt compiler it'll actually
thrown<00:26:27.020><c> out</c><00:26:27.169><c> of</c><00:26:27.200><c> memory</c><00:26:27.500><c> or</c><00:26:27.740><c> on</c><00:26:28.039><c> most</c><00:26:28.250><c> systems</c>

00:26:28.360 --> 00:26:28.370 align:start position:0%
thrown out of memory or on most systems
 

00:26:28.370 --> 00:26:30.130 align:start position:0%
thrown out of memory or on most systems
because<00:26:28.970><c> most</c><00:26:29.270><c> systems</c><00:26:29.659><c> you're</c><00:26:29.809><c> not</c><00:26:29.929><c> going</c><00:26:30.080><c> to</c>

00:26:30.130 --> 00:26:30.140 align:start position:0%
because most systems you're not going to
 

00:26:30.140 --> 00:26:32.289 align:start position:0%
because most systems you're not going to
have<00:26:30.260><c> a</c><00:26:30.289><c> default</c><00:26:30.679><c> heap</c><00:26:31.130><c> maximum</c><00:26:31.850><c> heap</c><00:26:32.059><c> size</c>

00:26:32.289 --> 00:26:32.299 align:start position:0%
have a default heap maximum heap size
 

00:26:32.299 --> 00:26:34.840 align:start position:0%
have a default heap maximum heap size
big<00:26:32.630><c> enough</c><00:26:32.659><c> to</c><00:26:33.559><c> handle</c><00:26:33.830><c> all</c><00:26:33.980><c> this</c><00:26:34.130><c> so</c><00:26:34.760><c> if</c>

00:26:34.840 --> 00:26:34.850 align:start position:0%
big enough to handle all this so if
 

00:26:34.850 --> 00:26:35.919 align:start position:0%
big enough to handle all this so if
you're<00:26:34.970><c> going</c><00:26:35.059><c> to</c><00:26:35.120><c> compile</c><00:26:35.390><c> something</c><00:26:35.659><c> big</c>

00:26:35.919 --> 00:26:35.929 align:start position:0%
you're going to compile something big
 

00:26:35.929 --> 00:26:38.230 align:start position:0%
you're going to compile something big
just<00:26:35.960><c> be</c><00:26:36.350><c> prepared</c><00:26:36.799><c> and</c><00:26:37.070><c> this</c><00:26:37.640><c> is</c><00:26:37.789><c> like</c><00:26:37.970><c> you</c>

00:26:38.230 --> 00:26:38.240 align:start position:0%
just be prepared and this is like you
 

00:26:38.240 --> 00:26:40.419 align:start position:0%
just be prepared and this is like you
know<00:26:38.270><c> a</c><00:26:38.360><c> huge</c><00:26:38.659><c> chunk</c><00:26:38.929><c> of</c><00:26:39.020><c> the</c><00:26:39.110><c> JDK</c><00:26:39.289><c> so</c><00:26:39.559><c> it's</c><00:26:40.190><c> not</c>

00:26:40.419 --> 00:26:40.429 align:start position:0%
know a huge chunk of the JDK so it's not
 

00:26:40.429 --> 00:26:41.529 align:start position:0%
know a huge chunk of the JDK so it's not
that<00:26:40.580><c> surprising</c><00:26:40.820><c> but</c>

00:26:41.529 --> 00:26:41.539 align:start position:0%
that surprising but
 

00:26:41.539 --> 00:26:43.719 align:start position:0%
that surprising but
be<00:26:41.809><c> prepared</c><00:26:42.229><c> to</c><00:26:42.350><c> give</c><00:26:42.739><c> it</c><00:26:42.889><c> lots</c><00:26:43.129><c> of</c><00:26:43.399><c> memory</c>

00:26:43.719 --> 00:26:43.729 align:start position:0%
be prepared to give it lots of memory
 

00:26:43.729 --> 00:26:46.779 align:start position:0%
be prepared to give it lots of memory
and<00:26:44.029><c> a</c><00:26:44.119><c> lot</c><00:26:44.269><c> of</c><00:26:44.389><c> time</c><00:26:44.629><c> I</c><00:26:44.899><c> think</c><00:26:45.679><c> I</c><00:26:45.950><c> think</c><00:26:46.669><c> this</c>

00:26:46.779 --> 00:26:46.789 align:start position:0%
and a lot of time I think I think this
 

00:26:46.789 --> 00:26:48.399 align:start position:0%
and a lot of time I think I think this
usually<00:26:47.149><c> takes</c><00:26:47.330><c> about</c><00:26:47.419><c> somewhere</c><00:26:47.779><c> between</c><00:26:47.840><c> 20</c>

00:26:48.399 --> 00:26:48.409 align:start position:0%
usually takes about somewhere between 20
 

00:26:48.409 --> 00:26:50.049 align:start position:0%
usually takes about somewhere between 20
and<00:26:48.440><c> 30</c><00:26:48.710><c> minutes</c><00:26:49.039><c> depending</c><00:26:49.190><c> on</c><00:26:49.580><c> how</c><00:26:49.729><c> fast</c>

00:26:50.049 --> 00:26:50.059 align:start position:0%
and 30 minutes depending on how fast
 

00:26:50.059 --> 00:26:54.759 align:start position:0%
and 30 minutes depending on how fast
your<00:26:50.299><c> machine</c><00:26:50.600><c> is</c><00:26:51.249><c> it's</c><00:26:52.249><c> pretty</c><00:26:52.489><c> intense</c><00:26:53.769><c> so</c>

00:26:54.759 --> 00:26:54.769 align:start position:0%
your machine is it's pretty intense so
 

00:26:54.769 --> 00:26:56.710 align:start position:0%
your machine is it's pretty intense so
another<00:26:55.279><c> thing</c><00:26:55.340><c> is</c><00:26:55.429><c> that</c><00:26:55.549><c> and</c><00:26:56.359><c> that</c><00:26:56.570><c> the</c>

00:26:56.710 --> 00:26:56.720 align:start position:0%
another thing is that and that the
 

00:26:56.720 --> 00:26:59.560 align:start position:0%
another thing is that and that the
syntax<00:26:57.320><c> is</c><00:26:57.499><c> not</c><00:26:57.649><c> unique</c><00:26:57.979><c> to</c><00:26:58.009><c> the</c><00:26:58.700><c> äôt</c><00:26:59.059><c> compiler</c>

00:26:59.560 --> 00:26:59.570 align:start position:0%
syntax is not unique to the äôt compiler
 

00:26:59.570 --> 00:27:02.080 align:start position:0%
syntax is not unique to the äôt compiler
but<00:26:59.979><c> you</c><00:27:00.979><c> should</c><00:27:01.159><c> be</c><00:27:01.249><c> aware</c><00:27:01.279><c> how</c><00:27:01.669><c> to</c><00:27:01.729><c> pass</c>

00:27:02.080 --> 00:27:02.090 align:start position:0%
but you should be aware how to pass
 

00:27:02.090 --> 00:27:04.899 align:start position:0%
but you should be aware how to pass
options<00:27:02.779><c> so</c><00:27:03.139><c> of</c><00:27:03.200><c> course</c><00:27:03.379><c> like</c><00:27:03.679><c> for</c><00:27:03.859><c> example</c><00:27:04.220><c> if</c>

00:27:04.899 --> 00:27:04.909 align:start position:0%
options so of course like for example if
 

00:27:04.909 --> 00:27:06.969 align:start position:0%
options so of course like for example if
you<00:27:05.059><c> want</c><00:27:05.359><c> to</c><00:27:05.419><c> set</c><00:27:05.690><c> a</c><00:27:05.720><c> larger</c><00:27:06.229><c> maximum</c><00:27:06.499><c> heap</c>

00:27:06.969 --> 00:27:06.979 align:start position:0%
you want to set a larger maximum heap
 

00:27:06.979 --> 00:27:08.950 align:start position:0%
you want to set a larger maximum heap
size<00:27:07.249><c> this</c><00:27:07.999><c> would</c><00:27:08.149><c> be</c><00:27:08.299><c> the</c><00:27:08.389><c> way</c><00:27:08.509><c> that</c><00:27:08.539><c> you</c><00:27:08.779><c> do</c>

00:27:08.950 --> 00:27:08.960 align:start position:0%
size this would be the way that you do
 

00:27:08.960 --> 00:27:10.629 align:start position:0%
size this would be the way that you do
it<00:27:09.109><c> and</c><00:27:09.350><c> this</c><00:27:09.470><c> is</c><00:27:09.619><c> the</c><00:27:09.769><c> standard</c><00:27:09.919><c> format</c><00:27:10.489><c> that</c>

00:27:10.629 --> 00:27:10.639 align:start position:0%
it and this is the standard format that
 

00:27:10.639 --> 00:27:12.249 align:start position:0%
it and this is the standard format that
of<00:27:10.789><c> a</c><00:27:10.970><c> C</c><00:27:11.210><c> and</c><00:27:11.419><c> a</c><00:27:11.450><c> whole</c><00:27:11.600><c> bunch</c><00:27:11.749><c> of</c><00:27:11.809><c> other</c><00:27:11.989><c> tools</c>

00:27:12.249 --> 00:27:12.259 align:start position:0%
of a C and a whole bunch of other tools
 

00:27:12.259 --> 00:27:14.950 align:start position:0%
of a C and a whole bunch of other tools
use<00:27:12.590><c> that</c><00:27:13.340><c> allow</c><00:27:13.849><c> you</c><00:27:13.909><c> to</c><00:27:14.059><c> pass</c><00:27:14.330><c> things</c><00:27:14.570><c> to</c><00:27:14.840><c> the</c>

00:27:14.950 --> 00:27:14.960 align:start position:0%
use that allow you to pass things to the
 

00:27:14.960 --> 00:27:17.830 align:start position:0%
use that allow you to pass things to the
JVM<00:27:15.379><c> running</c><00:27:16.099><c> whatever</c><00:27:16.309><c> the</c><00:27:16.940><c> whatever</c><00:27:17.570><c> it</c><00:27:17.720><c> is</c>

00:27:17.830 --> 00:27:17.840 align:start position:0%
JVM running whatever the whatever it is
 

00:27:17.840 --> 00:27:19.570 align:start position:0%
JVM running whatever the whatever it is
that<00:27:18.080><c> the</c><00:27:18.229><c> tool</c><00:27:18.649><c> that</c><00:27:18.859><c> you're</c><00:27:19.099><c> trying</c><00:27:19.399><c> to</c>

00:27:19.570 --> 00:27:19.580 align:start position:0%
that the tool that you're trying to
 

00:27:19.580 --> 00:27:22.180 align:start position:0%
that the tool that you're trying to
execute<00:27:20.029><c> there</c><00:27:20.450><c> but</c><00:27:21.379><c> this</c><00:27:21.529><c> is</c><00:27:21.649><c> actually</c><00:27:21.979><c> way</c>

00:27:22.180 --> 00:27:22.190 align:start position:0%
execute there but this is actually way
 

00:27:22.190 --> 00:27:24.009 align:start position:0%
execute there but this is actually way
more<00:27:22.220><c> important</c><00:27:22.849><c> than</c><00:27:22.970><c> then</c><00:27:23.570><c> you</c><00:27:23.899><c> would</c>

00:27:24.009 --> 00:27:24.019 align:start position:0%
more important than then you would
 

00:27:24.019 --> 00:27:26.409 align:start position:0%
more important than then you would
normally<00:27:24.349><c> and</c><00:27:25.039><c> I'm</c><00:27:25.369><c> going</c><00:27:25.580><c> to</c><00:27:25.639><c> explain</c><00:27:25.909><c> why</c><00:27:26.149><c> in</c>

00:27:26.409 --> 00:27:26.419 align:start position:0%
normally and I'm going to explain why in
 

00:27:26.419 --> 00:27:29.469 align:start position:0%
normally and I'm going to explain why in
a<00:27:27.049><c> few</c><00:27:27.080><c> more</c><00:27:27.349><c> slides</c><00:27:27.820><c> but</c><00:27:28.820><c> just</c><00:27:28.970><c> know</c><00:27:29.090><c> so</c><00:27:29.299><c> it's</c>

00:27:29.469 --> 00:27:29.479 align:start position:0%
a few more slides but just know so it's
 

00:27:29.479 --> 00:27:32.560 align:start position:0%
a few more slides but just know so it's
the<00:27:29.599><c> standard</c><00:27:29.779><c> -</c><00:27:30.529><c> J</c><00:27:31.009><c> and</c><00:27:31.369><c> then</c><00:27:31.639><c> whatever</c>

00:27:32.560 --> 00:27:32.570 align:start position:0%
the standard - J and then whatever
 

00:27:32.570 --> 00:27:44.999 align:start position:0%
the standard - J and then whatever
whatever<00:27:33.080><c> JVM</c><00:27:33.619><c> option</c><00:27:34.009><c> you</c><00:27:34.220><c> want</c><00:27:34.340><c> to</c><00:27:34.460><c> pass</c><00:27:34.639><c> I</c>

00:27:44.999 --> 00:27:45.009 align:start position:0%
 
 

00:27:45.009 --> 00:27:47.499 align:start position:0%
 
know<00:27:46.009><c> it's</c><00:27:46.399><c> only</c><00:27:46.549><c> gonna</c><00:27:46.759><c> it's</c><00:27:47.149><c> only</c><00:27:47.299><c> going</c><00:27:47.450><c> to</c>

00:27:47.499 --> 00:27:47.509 align:start position:0%
know it's only gonna it's only going to
 

00:27:47.509 --> 00:27:49.539 align:start position:0%
know it's only gonna it's only going to
be<00:27:47.570><c> what</c><00:27:47.809><c> you</c><00:27:47.929><c> explicitly</c><00:27:48.559><c> hand</c><00:27:48.889><c> it</c><00:27:49.070><c> on</c><00:27:49.279><c> the</c>

00:27:49.539 --> 00:27:49.549 align:start position:0%
be what you explicitly hand it on the
 

00:27:49.549 --> 00:27:50.320 align:start position:0%
be what you explicitly hand it on the
command<00:27:49.879><c> line</c>

00:27:50.320 --> 00:27:50.330 align:start position:0%
command line
 

00:27:50.330 --> 00:27:53.289 align:start position:0%
command line
it<00:27:50.450><c> won't</c><00:27:51.049><c> go</c><00:27:51.229><c> behind</c><00:27:51.529><c> your</c><00:27:51.619><c> back</c><00:27:51.679><c> and</c><00:27:52.299><c> compile</c>

00:27:53.289 --> 00:27:53.299 align:start position:0%
it won't go behind your back and compile
 

00:27:53.299 --> 00:27:58.229 align:start position:0%
it won't go behind your back and compile
anything<00:27:53.779><c> for</c><00:27:54.440><c> better</c><00:27:54.619><c> or</c><00:27:54.739><c> for</c><00:27:54.769><c> worse</c><00:27:56.799><c> so</c>

00:27:58.229 --> 00:27:58.239 align:start position:0%
anything for better or for worse so
 

00:27:58.239 --> 00:28:00.639 align:start position:0%
anything for better or for worse so
there's<00:27:59.239><c> another</c><00:27:59.450><c> option</c><00:27:59.690><c> this</c><00:28:00.200><c> ties</c><00:28:00.409><c> into</c>

00:28:00.639 --> 00:28:00.649 align:start position:0%
there's another option this ties into
 

00:28:00.649 --> 00:28:02.889 align:start position:0%
there's another option this ties into
the<00:28:00.859><c> tiered</c><00:28:01.070><c> compilation</c><00:28:01.789><c> that</c><00:28:02.269><c> I</c><00:28:02.629><c> would</c>

00:28:02.889 --> 00:28:02.899 align:start position:0%
the tiered compilation that I would
 

00:28:02.899 --> 00:28:04.330 align:start position:0%
the tiered compilation that I would
introduced<00:28:03.320><c> a</c><00:28:03.409><c> few</c><00:28:03.559><c> slides</c><00:28:03.799><c> ago</c><00:28:03.979><c> and</c><00:28:04.220><c> there's</c>

00:28:04.330 --> 00:28:04.340 align:start position:0%
introduced a few slides ago and there's
 

00:28:04.340 --> 00:28:06.820 align:start position:0%
introduced a few slides ago and there's
a<00:28:04.399><c> compiled</c><00:28:04.789><c> for</c><00:28:05.090><c> tiered</c><00:28:05.359><c> option</c><00:28:05.809><c> so</c><00:28:06.470><c> it</c><00:28:06.619><c> turns</c>

00:28:06.820 --> 00:28:06.830 align:start position:0%
a compiled for tiered option so it turns
 

00:28:06.830 --> 00:28:10.779 align:start position:0%
a compiled for tiered option so it turns
out<00:28:07.009><c> that</c><00:28:07.809><c> you</c><00:28:08.809><c> know</c><00:28:08.899><c> internally</c><00:28:09.499><c> the</c><00:28:10.039><c> the</c><00:28:10.279><c> äôt</c>

00:28:10.779 --> 00:28:10.789 align:start position:0%
out that you know internally the the äôt
 

00:28:10.789 --> 00:28:12.570 align:start position:0%
out that you know internally the the äôt
tool<00:28:11.059><c> does</c><00:28:11.629><c> not</c><00:28:11.659><c> use</c><00:28:12.080><c> the</c><00:28:12.320><c> same</c>

00:28:12.570 --> 00:28:12.580 align:start position:0%
tool does not use the same
 

00:28:12.580 --> 00:28:15.399 align:start position:0%
tool does not use the same
implementation<00:28:13.580><c> for</c><00:28:13.970><c> compilation</c><00:28:14.570><c> that</c><00:28:15.229><c> the</c>

00:28:15.399 --> 00:28:15.409 align:start position:0%
implementation for compilation that the
 

00:28:15.409 --> 00:28:17.560 align:start position:0%
implementation for compilation that the
hotspot<00:28:15.799><c> JIT</c><00:28:16.009><c> compilers</c><00:28:16.489><c> use</c><00:28:16.789><c> like</c><00:28:17.179><c> I</c><00:28:17.269><c> said</c><00:28:17.450><c> we</c>

00:28:17.560 --> 00:28:17.570 align:start position:0%
hotspot JIT compilers use like I said we
 

00:28:17.570 --> 00:28:19.570 align:start position:0%
hotspot JIT compilers use like I said we
had<00:28:17.690><c> to</c><00:28:17.869><c> jet</c><00:28:18.080><c> compiled</c><00:28:18.590><c> we</c><00:28:18.710><c> have</c><00:28:18.830><c> C</c><00:28:19.070><c> 1</c><00:28:19.099><c> and</c><00:28:19.369><c> C</c><00:28:19.429><c> 2</c>

00:28:19.570 --> 00:28:19.580 align:start position:0%
had to jet compiled we have C 1 and C 2
 

00:28:19.580 --> 00:28:22.539 align:start position:0%
had to jet compiled we have C 1 and C 2
and<00:28:20.119><c> a</c><00:28:20.720><c> lot</c><00:28:20.869><c> of</c><00:28:20.960><c> people</c><00:28:21.200><c> assume</c><00:28:21.559><c> that</c><00:28:22.220><c> well</c>

00:28:22.539 --> 00:28:22.549 align:start position:0%
and a lot of people assume that well
 

00:28:22.549 --> 00:28:24.190 align:start position:0%
and a lot of people assume that well
obviously<00:28:22.669><c> they</c><00:28:23.149><c> ot</c><00:28:23.299><c> tools</c><00:28:23.749><c> going</c><00:28:23.929><c> to</c><00:28:24.019><c> use</c>

00:28:24.190 --> 00:28:24.200 align:start position:0%
obviously they ot tools going to use
 

00:28:24.200 --> 00:28:26.109 align:start position:0%
obviously they ot tools going to use
that<00:28:24.440><c> that</c><00:28:24.889><c> code</c><00:28:25.190><c> base</c><00:28:25.369><c> or</c><00:28:25.700><c> that</c>

00:28:26.109 --> 00:28:26.119 align:start position:0%
that that code base or that
 

00:28:26.119 --> 00:28:28.690 align:start position:0%
that that code base or that
implementation<00:28:26.749><c> to</c><00:28:27.139><c> compile</c><00:28:27.489><c> but</c><00:28:28.489><c> it</c>

00:28:28.690 --> 00:28:28.700 align:start position:0%
implementation to compile but it
 

00:28:28.700 --> 00:28:31.359 align:start position:0%
implementation to compile but it
actually<00:28:29.119><c> uses</c><00:28:29.299><c> growl</c><00:28:29.690><c> growl</c><00:28:30.080><c> which</c><00:28:30.499><c> is</c><00:28:30.769><c> part</c>

00:28:31.359 --> 00:28:31.369 align:start position:0%
actually uses growl growl which is part
 

00:28:31.369 --> 00:28:34.299 align:start position:0%
actually uses growl growl which is part
of<00:28:31.429><c> the</c><00:28:31.580><c> Oracle</c><00:28:32.119><c> labs</c><00:28:32.299><c> work</c><00:28:33.139><c> and</c><00:28:33.710><c> study</c><00:28:34.009><c> into</c>

00:28:34.299 --> 00:28:34.309 align:start position:0%
of the Oracle labs work and study into
 

00:28:34.309 --> 00:28:38.469 align:start position:0%
of the Oracle labs work and study into
JVM<00:28:34.669><c> technology</c><00:28:35.299><c> and</c><00:28:35.979><c> growl</c><00:28:37.269><c> produces</c><00:28:38.269><c> code</c>

00:28:38.469 --> 00:28:38.479 align:start position:0%
JVM technology and growl produces code
 

00:28:38.479 --> 00:28:41.259 align:start position:0%
JVM technology and growl produces code
that<00:28:38.779><c> that</c><00:28:38.809><c> is</c><00:28:39.169><c> uniquely</c><00:28:39.919><c> different</c><00:28:40.369><c> from</c><00:28:40.940><c> C</c><00:28:41.119><c> 1</c>

00:28:41.259 --> 00:28:41.269 align:start position:0%
that that is uniquely different from C 1
 

00:28:41.269 --> 00:28:43.450 align:start position:0%
that that is uniquely different from C 1
C<00:28:41.509><c> 2</c><00:28:41.539><c> and</c><00:28:41.720><c> performance</c><00:28:42.529><c> wise</c><00:28:42.679><c> it's</c><00:28:42.919><c> actually</c>

00:28:43.450 --> 00:28:43.460 align:start position:0%
C 2 and performance wise it's actually
 

00:28:43.460 --> 00:28:46.570 align:start position:0%
C 2 and performance wise it's actually
somewhere<00:28:44.029><c> in</c><00:28:44.119><c> between</c><00:28:44.239><c> a</c><00:28:44.809><c> lot</c><00:28:45.679><c> of</c><00:28:45.799><c> testing</c>

00:28:46.570 --> 00:28:46.580 align:start position:0%
somewhere in between a lot of testing
 

00:28:46.580 --> 00:28:48.129 align:start position:0%
somewhere in between a lot of testing
that<00:28:46.639><c> we've</c><00:28:46.789><c> done</c><00:28:46.970><c> shows</c><00:28:47.359><c> that</c><00:28:47.690><c> to</c><00:28:47.840><c> somewhere</c>

00:28:48.129 --> 00:28:48.139 align:start position:0%
that we've done shows that to somewhere
 

00:28:48.139 --> 00:28:50.430 align:start position:0%
that we've done shows that to somewhere
be<00:28:48.340><c> somewhere</c><00:28:49.340><c> about</c><00:28:49.519><c> maybe</c><00:28:49.759><c> 10</c><00:28:50.149><c> percent</c>

00:28:50.430 --> 00:28:50.440 align:start position:0%
be somewhere about maybe 10 percent
 

00:28:50.440 --> 00:28:54.009 align:start position:0%
be somewhere about maybe 10 percent
slower<00:28:51.440><c> than</c><00:28:52.190><c> than</c><00:28:52.489><c> C</c><00:28:52.759><c> 2</c><00:28:52.970><c> which</c><00:28:53.359><c> is</c><00:28:53.539><c> pretty</c>

00:28:54.009 --> 00:28:54.019 align:start position:0%
slower than than C 2 which is pretty
 

00:28:54.019 --> 00:28:54.850 align:start position:0%
slower than than C 2 which is pretty
darn<00:28:54.259><c> good</c>

00:28:54.850 --> 00:28:54.860 align:start position:0%
darn good
 

00:28:54.860 --> 00:28:57.280 align:start position:0%
darn good
but<00:28:55.400><c> you're</c><00:28:55.580><c> not</c><00:28:55.670><c> getting</c><00:28:56.030><c> the</c><00:28:56.750><c> full</c><00:28:56.780><c> peak</c>

00:28:57.280 --> 00:28:57.290 align:start position:0%
but you're not getting the full peak
 

00:28:57.290 --> 00:28:59.230 align:start position:0%
but you're not getting the full peak
performance<00:28:57.830><c> that</c><00:28:57.950><c> you'd</c><00:28:58.130><c> get</c><00:28:58.340><c> from</c><00:28:58.670><c> from</c><00:28:59.030><c> a</c>

00:28:59.230 --> 00:28:59.240 align:start position:0%
performance that you'd get from from a
 

00:28:59.240 --> 00:29:02.260 align:start position:0%
performance that you'd get from from a
legitimate<00:28:59.780><c> C</c><00:28:59.960><c> to</c><00:29:00.140><c> compile</c><00:29:00.590><c> and</c><00:29:01.120><c> probably</c><00:29:02.120><c> the</c>

00:29:02.260 --> 00:29:02.270 align:start position:0%
legitimate C to compile and probably the
 

00:29:02.270 --> 00:29:05.260 align:start position:0%
legitimate C to compile and probably the
missing<00:29:02.900><c> piece</c><00:29:03.110><c> there</c><00:29:03.410><c> is</c><00:29:03.790><c> the</c><00:29:04.790><c> fact</c><00:29:05.030><c> that</c><00:29:05.120><c> we</c>

00:29:05.260 --> 00:29:05.270 align:start position:0%
missing piece there is the fact that we
 

00:29:05.270 --> 00:29:07.120 align:start position:0%
missing piece there is the fact that we
don't<00:29:05.390><c> have</c><00:29:05.510><c> the</c><00:29:05.929><c> runtime</c><00:29:06.530><c> profiling</c>

00:29:07.120 --> 00:29:07.130 align:start position:0%
don't have the runtime profiling
 

00:29:07.130 --> 00:29:09.280 align:start position:0%
don't have the runtime profiling
information<00:29:07.250><c> that</c><00:29:07.880><c> c2</c><00:29:08.480><c> can</c><00:29:08.750><c> take</c><00:29:08.900><c> advantage</c>

00:29:09.280 --> 00:29:09.290 align:start position:0%
information that c2 can take advantage
 

00:29:09.290 --> 00:29:12.160 align:start position:0%
information that c2 can take advantage
of<00:29:09.500><c> when</c><00:29:09.890><c> it</c><00:29:10.040><c> JIT</c><00:29:10.370><c> compiler</c><00:29:10.700><c> stuff</c><00:29:11.059><c> so</c><00:29:11.690><c> the</c>

00:29:12.160 --> 00:29:12.170 align:start position:0%
of when it JIT compiler stuff so the
 

00:29:12.170 --> 00:29:14.799 align:start position:0%
of when it JIT compiler stuff so the
actual<00:29:12.500><c> ideal</c><00:29:13.400><c> situation</c><00:29:14.120><c> for</c><00:29:14.150><c> for</c><00:29:14.660><c> peak</c>

00:29:14.799 --> 00:29:14.809 align:start position:0%
actual ideal situation for for peak
 

00:29:14.809 --> 00:29:17.710 align:start position:0%
actual ideal situation for for peak
performance<00:29:14.840><c> is</c><00:29:15.590><c> as</c><00:29:16.460><c> I</c><00:29:16.790><c> said</c><00:29:16.970><c> earlier</c><00:29:17.000><c> to</c><00:29:17.510><c> use</c>

00:29:17.710 --> 00:29:17.720 align:start position:0%
performance is as I said earlier to use
 

00:29:17.720 --> 00:29:21.400 align:start position:0%
performance is as I said earlier to use
äôt<00:29:18.650><c> as</c><00:29:18.950><c> just</c><00:29:19.490><c> one</c><00:29:19.670><c> component</c><00:29:20.090><c> in</c><00:29:20.510><c> your</c>

00:29:21.400 --> 00:29:21.410 align:start position:0%
äôt as just one component in your
 

00:29:21.410 --> 00:29:23.049 align:start position:0%
äôt as just one component in your
strategy<00:29:21.950><c> for</c><00:29:22.220><c> getting</c><00:29:22.309><c> the</c><00:29:22.910><c> best</c>

00:29:23.049 --> 00:29:23.059 align:start position:0%
strategy for getting the best
 

00:29:23.059 --> 00:29:24.910 align:start position:0%
strategy for getting the best
performance<00:29:23.630><c> possible</c><00:29:23.690><c> and</c><00:29:24.380><c> you</c><00:29:24.440><c> do</c><00:29:24.559><c> that</c><00:29:24.710><c> by</c>

00:29:24.910 --> 00:29:24.920 align:start position:0%
performance possible and you do that by
 

00:29:24.920 --> 00:29:26.680 align:start position:0%
performance possible and you do that by
saying<00:29:25.130><c> compile</c><00:29:25.670><c> four-tiered</c><00:29:26.210><c> when</c><00:29:26.480><c> you</c><00:29:26.570><c> have</c>

00:29:26.680 --> 00:29:26.690 align:start position:0%
saying compile four-tiered when you have
 

00:29:26.690 --> 00:29:28.900 align:start position:0%
saying compile four-tiered when you have
ot<00:29:26.960><c> compile</c><00:29:27.350><c> and</c><00:29:27.650><c> so</c><00:29:28.130><c> what</c><00:29:28.250><c> that</c><00:29:28.280><c> does</c><00:29:28.400><c> is</c><00:29:28.549><c> it</c>

00:29:28.900 --> 00:29:28.910 align:start position:0%
ot compile and so what that does is it
 

00:29:28.910 --> 00:29:31.210 align:start position:0%
ot compile and so what that does is it
doesn't<00:29:29.090><c> generate</c><00:29:29.900><c> the</c><00:29:30.290><c> default</c><00:29:30.679><c> growl</c><00:29:30.919><c> code</c>

00:29:31.210 --> 00:29:31.220 align:start position:0%
doesn't generate the default growl code
 

00:29:31.220 --> 00:29:33.789 align:start position:0%
doesn't generate the default growl code
it<00:29:32.210><c> tells</c><00:29:32.480><c> growl</c><00:29:32.750><c> to</c><00:29:33.020><c> include</c><00:29:33.440><c> the</c><00:29:33.770><c> the</c>

00:29:33.789 --> 00:29:33.799 align:start position:0%
it tells growl to include the the
 

00:29:33.799 --> 00:29:36.430 align:start position:0%
it tells growl to include the the
profiling<00:29:34.490><c> instrumentation</c><00:29:35.480><c> that</c><00:29:35.720><c> c2</c>

00:29:36.430 --> 00:29:36.440 align:start position:0%
profiling instrumentation that c2
 

00:29:36.440 --> 00:29:38.770 align:start position:0%
profiling instrumentation that c2
requires<00:29:36.919><c> for</c><00:29:37.730><c> it</c><00:29:37.970><c> to</c><00:29:38.090><c> compile</c><00:29:38.390><c> so</c><00:29:38.690><c> you</c>

00:29:38.770 --> 00:29:38.780 align:start position:0%
requires for it to compile so you
 

00:29:38.780 --> 00:29:41.230 align:start position:0%
requires for it to compile so you
actually<00:29:39.080><c> end</c><00:29:39.230><c> up</c><00:29:39.350><c> with</c><00:29:39.730><c> the</c><00:29:40.730><c> same</c><00:29:40.940><c> kind</c><00:29:41.210><c> of</c>

00:29:41.230 --> 00:29:41.240 align:start position:0%
actually end up with the same kind of
 

00:29:41.240 --> 00:29:42.460 align:start position:0%
actually end up with the same kind of
scenario<00:29:41.419><c> that</c><00:29:41.690><c> you</c><00:29:41.990><c> do</c><00:29:42.080><c> of</c><00:29:42.230><c> tiered</c>

00:29:42.460 --> 00:29:42.470 align:start position:0%
scenario that you do of tiered
 

00:29:42.470 --> 00:29:45.370 align:start position:0%
scenario that you do of tiered
compilation<00:29:43.150><c> except</c><00:29:44.150><c> the</c><00:29:44.510><c> the</c><00:29:44.809><c> middle</c><00:29:45.140><c> step</c>

00:29:45.370 --> 00:29:45.380 align:start position:0%
compilation except the the middle step
 

00:29:45.380 --> 00:29:49.120 align:start position:0%
compilation except the the middle step
is<00:29:45.650><c> no</c><00:29:46.340><c> longer</c><00:29:46.610><c> c1</c><00:29:47.299><c> it's</c><00:29:47.630><c> the</c><00:29:48.290><c> the</c><00:29:48.710><c> äôt</c>

00:29:49.120 --> 00:29:49.130 align:start position:0%
is no longer c1 it's the the äôt
 

00:29:49.130 --> 00:29:52.030 align:start position:0%
is no longer c1 it's the the äôt
compiled<00:29:49.640><c> growl</c><00:29:49.940><c> code</c><00:29:50.240><c> and</c><00:29:50.540><c> that</c><00:29:51.440><c> will</c><00:29:51.710><c> be</c>

00:29:52.030 --> 00:29:52.040 align:start position:0%
compiled growl code and that will be
 

00:29:52.040 --> 00:29:54.730 align:start position:0%
compiled growl code and that will be
just<00:29:52.340><c> a</c><00:29:52.669><c> precursor</c><00:29:53.059><c> to</c><00:29:53.360><c> what</c><00:29:54.110><c> will</c><00:29:54.559><c> hopefully</c>

00:29:54.730 --> 00:29:54.740 align:start position:0%
just a precursor to what will hopefully
 

00:29:54.740 --> 00:29:57.220 align:start position:0%
just a precursor to what will hopefully
eventually<00:29:55.130><c> be</c><00:29:55.549><c> the</c><00:29:55.580><c> c2</c><00:29:56.120><c> compiled</c><00:29:56.570><c> code</c><00:29:56.900><c> and</c>

00:29:57.220 --> 00:29:57.230 align:start position:0%
eventually be the c2 compiled code and
 

00:29:57.230 --> 00:29:59.650 align:start position:0%
eventually be the c2 compiled code and
so<00:29:57.890><c> you</c><00:29:58.309><c> don't</c><00:29:58.490><c> have</c><00:29:58.640><c> to</c><00:29:58.820><c> you</c><00:29:59.030><c> basically</c><00:29:59.360><c> get</c>

00:29:59.650 --> 00:29:59.660 align:start position:0%
so you don't have to you basically get
 

00:29:59.660 --> 00:30:00.820 align:start position:0%
so you don't have to you basically get
to<00:29:59.750><c> have</c><00:29:59.900><c> your</c><00:30:00.049><c> cake</c><00:30:00.230><c> and</c><00:30:00.260><c> eat</c><00:30:00.470><c> it</c><00:30:00.530><c> too</c>

00:30:00.820 --> 00:30:00.830 align:start position:0%
to have your cake and eat it too
 

00:30:00.830 --> 00:30:04.299 align:start position:0%
to have your cake and eat it too
here<00:30:01.340><c> as</c><00:30:01.520><c> well</c><00:30:01.730><c> you</c><00:30:02.299><c> get</c><00:30:02.540><c> the</c><00:30:03.049><c> the</c><00:30:03.650><c> immediate</c>

00:30:04.299 --> 00:30:04.309 align:start position:0%
here as well you get the the immediate
 

00:30:04.309 --> 00:30:06.280 align:start position:0%
here as well you get the the immediate
performance<00:30:04.730><c> advantage</c><00:30:05.570><c> right</c><00:30:05.900><c> out</c><00:30:06.080><c> of</c><00:30:06.110><c> the</c>

00:30:06.280 --> 00:30:06.290 align:start position:0%
performance advantage right out of the
 

00:30:06.290 --> 00:30:09.280 align:start position:0%
performance advantage right out of the
gate<00:30:06.500><c> of</c><00:30:06.710><c> having</c><00:30:07.580><c> a</c><00:30:07.910><c> pre</c><00:30:08.330><c> compiled</c><00:30:08.690><c> code</c><00:30:08.960><c> there</c>

00:30:09.280 --> 00:30:09.290 align:start position:0%
gate of having a pre compiled code there
 

00:30:09.290 --> 00:30:11.590 align:start position:0%
gate of having a pre compiled code there
but<00:30:09.830><c> then</c><00:30:09.950><c> eventually</c><00:30:10.070><c> the</c><00:30:10.580><c> JVM</c><00:30:11.000><c> on</c><00:30:11.270><c> its</c><00:30:11.480><c> own</c>

00:30:11.590 --> 00:30:11.600 align:start position:0%
but then eventually the JVM on its own
 

00:30:11.600 --> 00:30:14.650 align:start position:0%
but then eventually the JVM on its own
time<00:30:11.870><c> can</c><00:30:12.230><c> can</c><00:30:12.440><c> loop</c><00:30:12.620><c> around</c><00:30:12.950><c> and</c><00:30:13.419><c> see</c><00:30:14.419><c> to</c><00:30:14.630><c> it</c>

00:30:14.650 --> 00:30:14.660 align:start position:0%
time can can loop around and see to it
 

00:30:14.660 --> 00:30:19.600 align:start position:0%
time can can loop around and see to it
to<00:30:14.929><c> give</c><00:30:15.049><c> you</c><00:30:15.140><c> that</c><00:30:15.290><c> extra</c><00:30:15.470><c> 10%</c><00:30:15.890><c> bump</c><00:30:18.010><c> so</c><00:30:19.010><c> what</c>

00:30:19.600 --> 00:30:19.610 align:start position:0%
to give you that extra 10% bump so what
 

00:30:19.610 --> 00:30:22.090 align:start position:0%
to give you that extra 10% bump so what
does<00:30:19.730><c> actually</c><00:30:20.000><c> do</c><00:30:20.120><c> when</c><00:30:20.270><c> you</c><00:30:20.330><c> run</c><00:30:20.450><c> it</c><00:30:21.010><c> when</c><00:30:22.010><c> it</c>

00:30:22.090 --> 00:30:22.100 align:start position:0%
does actually do when you run it when it
 

00:30:22.100 --> 00:30:23.380 align:start position:0%
does actually do when you run it when it
when<00:30:22.220><c> actually</c><00:30:22.490><c> first</c><00:30:22.700><c> proposed</c><00:30:23.090><c> to</c><00:30:23.270><c> this</c>

00:30:23.380 --> 00:30:23.390 align:start position:0%
when actually first proposed to this
 

00:30:23.390 --> 00:30:24.640 align:start position:0%
when actually first proposed to this
talk<00:30:23.660><c> I</c><00:30:23.840><c> was</c><00:30:23.960><c> like</c><00:30:24.080><c> well</c><00:30:24.230><c> we're</c><00:30:24.350><c> going</c><00:30:24.470><c> to</c><00:30:24.530><c> do</c><00:30:24.620><c> a</c>

00:30:24.640 --> 00:30:24.650 align:start position:0%
talk I was like well we're going to do a
 

00:30:24.650 --> 00:30:26.140 align:start position:0%
talk I was like well we're going to do a
whole<00:30:24.770><c> bunch</c><00:30:24.830><c> of</c><00:30:25.100><c> demos</c><00:30:25.370><c> and</c><00:30:25.700><c> it</c><00:30:25.850><c> turns</c><00:30:26.030><c> out</c>

00:30:26.140 --> 00:30:26.150 align:start position:0%
whole bunch of demos and it turns out
 

00:30:26.150 --> 00:30:27.880 align:start position:0%
whole bunch of demos and it turns out
the<00:30:26.240><c> demos</c><00:30:26.540><c> are</c><00:30:26.690><c> like</c><00:30:26.840><c> not</c><00:30:26.990><c> horribly</c><00:30:27.440><c> exciting</c>

00:30:27.880 --> 00:30:27.890 align:start position:0%
the demos are like not horribly exciting
 

00:30:27.890 --> 00:30:33.400 align:start position:0%
the demos are like not horribly exciting
because<00:30:28.100><c> well</c><00:30:29.320><c> this</c><00:30:30.320><c> is</c><00:30:30.760><c> it</c><00:30:31.760><c> works</c><00:30:32.000><c> right</c><00:30:32.480><c> and</c>

00:30:33.400 --> 00:30:33.410 align:start position:0%
because well this is it works right and
 

00:30:33.410 --> 00:30:35.169 align:start position:0%
because well this is it works right and
there's<00:30:33.620><c> nothing</c><00:30:33.799><c> here</c><00:30:34.400><c> that</c><00:30:34.429><c> would</c><00:30:34.790><c> tell</c><00:30:35.000><c> you</c>

00:30:35.169 --> 00:30:35.179 align:start position:0%
there's nothing here that would tell you
 

00:30:35.179 --> 00:30:38.020 align:start position:0%
there's nothing here that would tell you
that<00:30:35.720><c> you</c><00:30:36.200><c> know</c><00:30:36.919><c> the</c><00:30:37.190><c> library</c><00:30:37.730><c> that</c><00:30:37.880><c> you</c>

00:30:38.020 --> 00:30:38.030 align:start position:0%
that you know the library that you
 

00:30:38.030 --> 00:30:41.230 align:start position:0%
that you know the library that you
actually<00:30:38.390><c> created</c><00:30:38.750><c> was</c><00:30:39.470><c> used</c><00:30:39.740><c> so</c><00:30:40.309><c> what</c><00:30:41.030><c> can</c><00:30:41.150><c> we</c>

00:30:41.230 --> 00:30:41.240 align:start position:0%
actually created was used so what can we
 

00:30:41.240 --> 00:30:42.640 align:start position:0%
actually created was used so what can we
do<00:30:41.360><c> if</c><00:30:41.419><c> we</c><00:30:41.480><c> actually</c><00:30:41.600><c> want</c><00:30:41.870><c> to</c><00:30:41.929><c> verify</c><00:30:42.110><c> that</c>

00:30:42.640 --> 00:30:42.650 align:start position:0%
do if we actually want to verify that
 

00:30:42.650 --> 00:30:44.530 align:start position:0%
do if we actually want to verify that
that<00:30:42.919><c> was</c><00:30:43.040><c> actually</c><00:30:43.340><c> used</c><00:30:43.490><c> well</c><00:30:43.790><c> there's</c><00:30:44.419><c> an</c>

00:30:44.530 --> 00:30:44.540 align:start position:0%
that was actually used well there's an
 

00:30:44.540 --> 00:30:45.820 align:start position:0%
that was actually used well there's an
option<00:30:44.900><c> there's</c><00:30:45.110><c> a</c><00:30:45.140><c> new</c><00:30:45.230><c> option</c><00:30:45.410><c> that's</c><00:30:45.679><c> been</c>

00:30:45.820 --> 00:30:45.830 align:start position:0%
option there's a new option that's been
 

00:30:45.830 --> 00:30:48.789 align:start position:0%
option there's a new option that's been
added<00:30:45.980><c> to</c><00:30:46.190><c> the</c><00:30:46.280><c> JVM</c><00:30:46.730><c> called</c><00:30:47.210><c> print</c><00:30:47.600><c> äôt</c><00:30:48.500><c> and</c>

00:30:48.789 --> 00:30:48.799 align:start position:0%
added to the JVM called print äôt and
 

00:30:48.799 --> 00:30:52.060 align:start position:0%
added to the JVM called print äôt and
it's<00:30:49.520><c> disabled</c><00:30:49.970><c> by</c><00:30:50.120><c> default</c><00:30:50.230><c> obviously</c><00:30:51.230><c> but</c>

00:30:52.060 --> 00:30:52.070 align:start position:0%
it's disabled by default obviously but
 

00:30:52.070 --> 00:30:53.740 align:start position:0%
it's disabled by default obviously but
if<00:30:52.130><c> you</c><00:30:52.220><c> put</c><00:30:52.400><c> that</c><00:30:52.520><c> in</c><00:30:52.700><c> and</c><00:30:53.000><c> you</c><00:30:53.120><c> run</c><00:30:53.299><c> it</c><00:30:53.480><c> you'll</c>

00:30:53.740 --> 00:30:53.750 align:start position:0%
if you put that in and you run it you'll
 

00:30:53.750 --> 00:30:55.900 align:start position:0%
if you put that in and you run it you'll
actually<00:30:53.870><c> get</c><00:30:54.230><c> some</c><00:30:54.799><c> output</c><00:30:55.100><c> that's</c><00:30:55.549><c> going</c><00:30:55.850><c> to</c>

00:30:55.900 --> 00:30:55.910 align:start position:0%
actually get some output that's going to
 

00:30:55.910 --> 00:30:57.669 align:start position:0%
actually get some output that's going to
look<00:30:56.000><c> a</c><00:30:56.090><c> little</c><00:30:56.330><c> similar</c><00:30:56.660><c> to</c><00:30:57.080><c> the</c><00:30:57.530><c> print</c>

00:30:57.669 --> 00:30:57.679 align:start position:0%
look a little similar to the print
 

00:30:57.679 --> 00:30:59.860 align:start position:0%
look a little similar to the print
compilation<00:30:58.340><c> output</c><00:30:58.730><c> that</c><00:30:59.090><c> we're</c><00:30:59.570><c> all</c><00:30:59.690><c> pretty</c>

00:30:59.860 --> 00:30:59.870 align:start position:0%
compilation output that we're all pretty
 

00:30:59.870 --> 00:31:01.659 align:start position:0%
compilation output that we're all pretty
used<00:31:00.110><c> to</c><00:31:00.290><c> seeing</c><00:31:00.559><c> and</c><00:31:01.010><c> this</c><00:31:01.280><c> is</c><00:31:01.400><c> telling</c><00:31:01.610><c> you</c>

00:31:01.659 --> 00:31:01.669 align:start position:0%
used to seeing and this is telling you
 

00:31:01.669 --> 00:31:03.460 align:start position:0%
used to seeing and this is telling you
two<00:31:01.850><c> important</c><00:31:02.299><c> pieces</c><00:31:02.419><c> of</c><00:31:02.600><c> information</c><00:31:02.929><c> here</c>

00:31:03.460 --> 00:31:03.470 align:start position:0%
two important pieces of information here
 

00:31:03.470 --> 00:31:06.010 align:start position:0%
two important pieces of information here
one<00:31:04.309><c> that</c><00:31:04.490><c> it</c><00:31:04.790><c> was</c><00:31:04.910><c> able</c><00:31:05.059><c> to</c><00:31:05.179><c> find</c><00:31:05.510><c> the</c><00:31:05.600><c> library</c>

00:31:06.010 --> 00:31:06.020 align:start position:0%
one that it was able to find the library
 

00:31:06.020 --> 00:31:06.910 align:start position:0%
one that it was able to find the library
and<00:31:06.290><c> load</c><00:31:06.590><c> it</c>

00:31:06.910 --> 00:31:06.920 align:start position:0%
and load it
 

00:31:06.920 --> 00:31:09.340 align:start position:0%
and load it
and<00:31:07.010><c> the</c><00:31:07.640><c> other</c><00:31:07.790><c> two</c><00:31:07.940><c> things</c><00:31:08.180><c> is</c><00:31:08.390><c> that</c><00:31:08.600><c> there</c>

00:31:09.340 --> 00:31:09.350 align:start position:0%
and the other two things is that there
 

00:31:09.350 --> 00:31:11.920 align:start position:0%
and the other two things is that there
were<00:31:09.440><c> two</c><00:31:09.470><c> separate</c><00:31:09.890><c> methods</c><00:31:10.280><c> that</c><00:31:10.940><c> were</c>

00:31:11.920 --> 00:31:11.930 align:start position:0%
were two separate methods that were
 

00:31:11.930 --> 00:31:14.830 align:start position:0%
were two separate methods that were
identified<00:31:12.500><c> and</c><00:31:12.830><c> loaded</c><00:31:13.310><c> into</c><00:31:13.460><c> or</c><00:31:14.060><c> kind</c><00:31:14.780><c> of</c>

00:31:14.830 --> 00:31:14.840 align:start position:0%
identified and loaded into or kind of
 

00:31:14.840 --> 00:31:16.450 align:start position:0%
identified and loaded into or kind of
acknowledged<00:31:15.320><c> as</c><00:31:15.530><c> being</c><00:31:15.560><c> part</c><00:31:16.040><c> of</c><00:31:16.130><c> the</c><00:31:16.190><c> code</c>

00:31:16.450 --> 00:31:16.460 align:start position:0%
acknowledged as being part of the code
 

00:31:16.460 --> 00:31:19.720 align:start position:0%
acknowledged as being part of the code
cache<00:31:16.700><c> and</c><00:31:17.350><c> that's</c><00:31:18.350><c> the</c><00:31:18.620><c> constructor</c><00:31:19.340><c> for</c><00:31:19.670><c> the</c>

00:31:19.720 --> 00:31:19.730 align:start position:0%
cache and that's the constructor for the
 

00:31:19.730 --> 00:31:23.170 align:start position:0%
cache and that's the constructor for the
class<00:31:20.030><c> and</c><00:31:20.570><c> then</c><00:31:21.140><c> the</c><00:31:21.560><c> actual</c><00:31:21.890><c> hello</c><00:31:22.880><c> world</c>

00:31:23.170 --> 00:31:23.180 align:start position:0%
class and then the actual hello world
 

00:31:23.180 --> 00:31:25.390 align:start position:0%
class and then the actual hello world
main<00:31:23.810><c> which</c><00:31:24.140><c> you</c><00:31:24.620><c> guys</c><00:31:24.800><c> don't</c><00:31:25.010><c> need</c><00:31:25.130><c> to</c><00:31:25.250><c> see</c>

00:31:25.390 --> 00:31:25.400 align:start position:0%
main which you guys don't need to see
 

00:31:25.400 --> 00:31:27.160 align:start position:0%
main which you guys don't need to see
the<00:31:25.520><c> source</c><00:31:25.820><c> code</c><00:31:25.910><c> for</c><00:31:26.510><c> because</c><00:31:26.870><c> it's</c><00:31:27.020><c> as</c>

00:31:27.160 --> 00:31:27.170 align:start position:0%
the source code for because it's as
 

00:31:27.170 --> 00:31:31.150 align:start position:0%
the source code for because it's as
boring<00:31:27.470><c> as</c><00:31:27.620><c> you're</c><00:31:27.740><c> imagining</c><00:31:28.160><c> so</c><00:31:29.980><c> let's</c><00:31:30.980><c> look</c>

00:31:31.150 --> 00:31:31.160 align:start position:0%
boring as you're imagining so let's look
 

00:31:31.160 --> 00:31:33.070 align:start position:0%
boring as you're imagining so let's look
at<00:31:31.340><c> let's</c><00:31:31.490><c> try</c><00:31:31.760><c> the</c><00:31:31.820><c> same</c><00:31:32.060><c> thing</c><00:31:32.120><c> so</c><00:31:32.540><c> let's</c><00:31:32.570><c> go</c>

00:31:33.070 --> 00:31:33.080 align:start position:0%
at let's try the same thing so let's go
 

00:31:33.080 --> 00:31:35.020 align:start position:0%
at let's try the same thing so let's go
and<00:31:33.380><c> I'm</c><00:31:33.620><c> gonna</c><00:31:33.770><c> disable</c><00:31:34.160><c> compressed</c>

00:31:35.020 --> 00:31:35.030 align:start position:0%
and I'm gonna disable compressed
 

00:31:35.030 --> 00:31:37.180 align:start position:0%
and I'm gonna disable compressed
oops<00:31:35.660><c> so</c><00:31:35.990><c> just</c><00:31:36.260><c> just</c><00:31:36.440><c> to</c><00:31:36.560><c> get</c><00:31:36.650><c> an</c><00:31:36.740><c> idea</c><00:31:36.950><c> how</c>

00:31:37.180 --> 00:31:37.190 align:start position:0%
oops so just just to get an idea how
 

00:31:37.190 --> 00:31:38.560 align:start position:0%
oops so just just to get an idea how
many<00:31:37.250><c> people</c><00:31:37.400><c> here</c><00:31:37.850><c> are</c><00:31:38.120><c> familiar</c><00:31:38.240><c> with</c>

00:31:38.560 --> 00:31:38.570 align:start position:0%
many people here are familiar with
 

00:31:38.570 --> 00:31:40.210 align:start position:0%
many people here are familiar with
compressed<00:31:38.990><c> oops</c><00:31:39.290><c> compressed</c><00:31:39.680><c> references</c>

00:31:40.210 --> 00:31:40.220 align:start position:0%
compressed oops compressed references
 

00:31:40.220 --> 00:31:45.070 align:start position:0%
compressed oops compressed references
okay<00:31:40.990><c> so</c><00:31:41.990><c> about</c><00:31:42.140><c> two</c><00:31:42.410><c> thirds</c><00:31:42.680><c> so</c><00:31:42.940><c> good</c><00:31:44.080><c> we're</c>

00:31:45.070 --> 00:31:45.080 align:start position:0%
okay so about two thirds so good we're
 

00:31:45.080 --> 00:31:46.330 align:start position:0%
okay so about two thirds so good we're
I'm<00:31:45.170><c> gonna</c><00:31:45.290><c> go</c><00:31:45.440><c> into</c><00:31:45.680><c> a</c><00:31:45.710><c> little</c><00:31:45.770><c> bit</c><00:31:45.920><c> of</c><00:31:46.010><c> detail</c>

00:31:46.330 --> 00:31:46.340 align:start position:0%
I'm gonna go into a little bit of detail
 

00:31:46.340 --> 00:31:48.700 align:start position:0%
I'm gonna go into a little bit of detail
time<00:31:46.610><c> permitting</c><00:31:47.090><c> a</c><00:31:47.300><c> bit</c><00:31:48.080><c> later</c><00:31:48.260><c> in</c><00:31:48.410><c> the</c><00:31:48.500><c> slide</c>

00:31:48.700 --> 00:31:48.710 align:start position:0%
time permitting a bit later in the slide
 

00:31:48.710 --> 00:31:51.670 align:start position:0%
time permitting a bit later in the slide
deck<00:31:48.860><c> about</c><00:31:49.100><c> those</c><00:31:49.310><c> but</c><00:31:49.730><c> you</c><00:31:50.480><c> know</c><00:31:51.470><c> very</c>

00:31:51.670 --> 00:31:51.680 align:start position:0%
deck about those but you know very
 

00:31:51.680 --> 00:31:53.620 align:start position:0%
deck about those but you know very
common<00:31:52.010><c> thing</c><00:31:52.190><c> is</c><00:31:52.430><c> is</c><00:31:52.730><c> that</c><00:31:53.060><c> you</c><00:31:53.240><c> might</c><00:31:53.420><c> want</c>

00:31:53.620 --> 00:31:53.630 align:start position:0%
common thing is is that you might want
 

00:31:53.630 --> 00:31:55.060 align:start position:0%
common thing is is that you might want
to<00:31:53.720><c> you</c><00:31:54.020><c> know</c><00:31:54.050><c> disable</c><00:31:54.620><c> compressed</c>

00:31:55.060 --> 00:31:55.070 align:start position:0%
to you know disable compressed
 

00:31:55.070 --> 00:31:56.890 align:start position:0%
to you know disable compressed
references<00:31:55.610><c> for</c><00:31:55.880><c> compressed</c><00:31:56.570><c> oops</c>

00:31:56.890 --> 00:31:56.900 align:start position:0%
references for compressed oops
 

00:31:56.900 --> 00:31:58.660 align:start position:0%
references for compressed oops
for<00:31:57.230><c> whatever</c><00:31:57.500><c> reason</c><00:31:58.010><c> so</c><00:31:58.160><c> here</c><00:31:58.400><c> we're</c>

00:31:58.660 --> 00:31:58.670 align:start position:0%
for whatever reason so here we're
 

00:31:58.670 --> 00:32:00.460 align:start position:0%
for whatever reason so here we're
starting<00:31:58.970><c> the</c><00:31:59.030><c> JVM</c><00:31:59.450><c> and</c><00:31:59.720><c> I'm</c><00:31:59.840><c> just</c><00:32:00.020><c> disabling</c>

00:32:00.460 --> 00:32:00.470 align:start position:0%
starting the JVM and I'm just disabling
 

00:32:00.470 --> 00:32:02.320 align:start position:0%
starting the JVM and I'm just disabling
that<00:32:00.530><c> and</c><00:32:01.100><c> everything</c><00:32:01.490><c> else</c><00:32:01.610><c> is</c><00:32:01.820><c> just</c><00:32:02.060><c> like</c><00:32:02.210><c> it</c>

00:32:02.320 --> 00:32:02.330 align:start position:0%
that and everything else is just like it
 

00:32:02.330 --> 00:32:04.180 align:start position:0%
that and everything else is just like it
was<00:32:02.450><c> on</c><00:32:02.540><c> the</c><00:32:02.690><c> command</c><00:32:02.960><c> line</c><00:32:03.020><c> earlier</c><00:32:03.440><c> and</c>

00:32:04.180 --> 00:32:04.190 align:start position:0%
was on the command line earlier and
 

00:32:04.190 --> 00:32:05.610 align:start position:0%
was on the command line earlier and
you'll<00:32:04.370><c> see</c><00:32:04.550><c> that</c><00:32:04.670><c> I</c><00:32:04.730><c> actually</c><00:32:04.850><c> get</c><00:32:05.150><c> an</c><00:32:05.360><c> error</c>

00:32:05.610 --> 00:32:05.620 align:start position:0%
you'll see that I actually get an error
 

00:32:05.620 --> 00:32:09.340 align:start position:0%
you'll see that I actually get an error
it<00:32:06.620><c> tells</c><00:32:06.890><c> me</c><00:32:07.040><c> that</c><00:32:07.070><c> hey</c><00:32:07.460><c> you</c><00:32:08.060><c> know</c><00:32:08.120><c> you</c><00:32:08.350><c> you</c>

00:32:09.340 --> 00:32:09.350 align:start position:0%
it tells me that hey you know you you
 

00:32:09.350 --> 00:32:12.700 align:start position:0%
it tells me that hey you know you you
wanted<00:32:09.710><c> to</c><00:32:09.950><c> load</c><00:32:10.340><c> this</c><00:32:10.550><c> äôt</c><00:32:11.150><c> library</c><00:32:11.570><c> but</c><00:32:11.960><c> it's</c>

00:32:12.700 --> 00:32:12.710 align:start position:0%
wanted to load this äôt library but it's
 

00:32:12.710 --> 00:32:15.400 align:start position:0%
wanted to load this äôt library but it's
actually<00:32:13.310><c> was</c><00:32:14.150><c> compiled</c><00:32:14.780><c> with</c><00:32:15.050><c> different</c>

00:32:15.400 --> 00:32:15.410 align:start position:0%
actually was compiled with different
 

00:32:15.410 --> 00:32:17.950 align:start position:0%
actually was compiled with different
settings<00:32:15.770><c> than</c><00:32:16.430><c> what</c><00:32:16.670><c> the</c><00:32:16.790><c> JVM</c><00:32:17.240><c> runtime</c><00:32:17.720><c> is</c>

00:32:17.950 --> 00:32:17.960 align:start position:0%
settings than what the JVM runtime is
 

00:32:17.960 --> 00:32:21.010 align:start position:0%
settings than what the JVM runtime is
set<00:32:18.560><c> for</c><00:32:18.860><c> now</c><00:32:19.400><c> notice</c><00:32:20.030><c> it</c><00:32:20.210><c> does</c><00:32:20.420><c> actually</c><00:32:20.840><c> run</c>

00:32:21.010 --> 00:32:21.020 align:start position:0%
set for now notice it does actually run
 

00:32:21.020 --> 00:32:23.470 align:start position:0%
set for now notice it does actually run
the<00:32:21.200><c> code</c><00:32:21.410><c> nothing</c><00:32:21.890><c> actually</c><00:32:22.100><c> broke</c><00:32:23.000><c> so</c><00:32:23.180><c> even</c>

00:32:23.470 --> 00:32:23.480 align:start position:0%
the code nothing actually broke so even
 

00:32:23.480 --> 00:32:27.400 align:start position:0%
the code nothing actually broke so even
when<00:32:23.690><c> we</c><00:32:24.200><c> fail</c><00:32:24.530><c> to</c><00:32:24.920><c> load</c><00:32:25.820><c> the</c><00:32:26.150><c> äôt</c><00:32:26.570><c> library</c><00:32:27.050><c> and</c>

00:32:27.400 --> 00:32:27.410 align:start position:0%
when we fail to load the äôt library and
 

00:32:27.410 --> 00:32:30.070 align:start position:0%
when we fail to load the äôt library and
use<00:32:28.040><c> it</c><00:32:28.220><c> for</c><00:32:28.250><c> whatever</c><00:32:28.550><c> reason</c><00:32:29.080><c> your</c>

00:32:30.070 --> 00:32:30.080 align:start position:0%
use it for whatever reason your
 

00:32:30.080 --> 00:32:31.270 align:start position:0%
use it for whatever reason your
application<00:32:30.560><c> will</c><00:32:30.680><c> still</c><00:32:30.860><c> rotten</c><00:32:31.130><c> you'll</c>

00:32:31.270 --> 00:32:31.280 align:start position:0%
application will still rotten you'll
 

00:32:31.280 --> 00:32:33.100 align:start position:0%
application will still rotten you'll
just<00:32:31.460><c> get</c><00:32:31.580><c> a</c><00:32:31.640><c> little</c><00:32:31.820><c> warning</c><00:32:32.270><c> if</c><00:32:32.450><c> you</c><00:32:32.810><c> have</c>

00:32:33.100 --> 00:32:33.110 align:start position:0%
just get a little warning if you have
 

00:32:33.110 --> 00:32:34.780 align:start position:0%
just get a little warning if you have
the<00:32:33.260><c> print</c><00:32:33.500><c> äôt</c><00:32:33.890><c> if</c><00:32:34.160><c> you</c><00:32:34.310><c> don't</c><00:32:34.490><c> have</c><00:32:34.670><c> the</c>

00:32:34.780 --> 00:32:34.790 align:start position:0%
the print äôt if you don't have the
 

00:32:34.790 --> 00:32:37.420 align:start position:0%
the print äôt if you don't have the
print<00:32:35.030><c> äôt</c><00:32:35.450><c> listed</c><00:32:35.930><c> it'll</c><00:32:36.560><c> actually</c><00:32:36.740><c> silently</c>

00:32:37.420 --> 00:32:37.430 align:start position:0%
print äôt listed it'll actually silently
 

00:32:37.430 --> 00:32:41.770 align:start position:0%
print äôt listed it'll actually silently
fail<00:32:37.790><c> to</c><00:32:38.420><c> load</c><00:32:38.570><c> the</c><00:32:38.750><c> AOA</c><00:32:38.990><c> ot</c><00:32:39.890><c> library</c><00:32:40.780><c> which</c>

00:32:41.770 --> 00:32:41.780 align:start position:0%
fail to load the AOA ot library which
 

00:32:41.780 --> 00:32:44.190 align:start position:0%
fail to load the AOA ot library which
may<00:32:41.990><c> or</c><00:32:42.080><c> may</c><00:32:42.170><c> not</c><00:32:42.290><c> be</c><00:32:42.470><c> the</c><00:32:42.620><c> ideal</c><00:32:43.130><c> behavior</c><00:32:43.820><c> but</c>

00:32:44.190 --> 00:32:44.200 align:start position:0%
may or may not be the ideal behavior but
 

00:32:44.200 --> 00:32:46.180 align:start position:0%
may or may not be the ideal behavior but
it<00:32:45.200><c> does</c><00:32:45.410><c> kind</c><00:32:45.620><c> of</c><00:32:45.680><c> follow</c><00:32:45.860><c> along</c>

00:32:46.180 --> 00:32:46.190 align:start position:0%
it does kind of follow along
 

00:32:46.190 --> 00:32:48.730 align:start position:0%
it does kind of follow along
the<00:32:46.720><c> philosophy</c><00:32:47.720><c> of</c><00:32:47.840><c> not</c><00:32:48.050><c> breaking</c><00:32:48.500><c> anything</c>

00:32:48.730 --> 00:32:48.740 align:start position:0%
the philosophy of not breaking anything
 

00:32:48.740 --> 00:32:53.110 align:start position:0%
the philosophy of not breaking anything
that<00:32:49.100><c> currently</c><00:32:49.700><c> works</c><00:32:50.530><c> so</c><00:32:51.530><c> the</c><00:32:52.400><c> idea</c><00:32:52.670><c> here</c><00:32:52.730><c> is</c>

00:32:53.110 --> 00:32:53.120 align:start position:0%
that currently works so the idea here is
 

00:32:53.120 --> 00:32:57.940 align:start position:0%
that currently works so the idea here is
that<00:32:53.150><c> you</c><00:32:54.110><c> need</c><00:32:54.440><c> to</c><00:32:54.590><c> match</c><00:32:54.890><c> your</c><00:32:56.680><c> your</c><00:32:57.680><c> runtime</c>

00:32:57.940 --> 00:32:57.950 align:start position:0%
that you need to match your your runtime
 

00:32:57.950 --> 00:33:02.200 align:start position:0%
that you need to match your your runtime
with<00:32:58.760><c> the</c><00:32:59.690><c> compilation</c><00:33:00.650><c> so</c><00:33:01.400><c> the</c><00:33:01.700><c> options</c><00:33:02.090><c> that</c>

00:33:02.200 --> 00:33:02.210 align:start position:0%
with the compilation so the options that
 

00:33:02.210 --> 00:33:04.510 align:start position:0%
with the compilation so the options that
you<00:33:02.420><c> use</c><00:33:02.600><c> during</c><00:33:02.840><c> compilation</c><00:33:03.170><c> have</c><00:33:04.160><c> to</c><00:33:04.340><c> match</c>

00:33:04.510 --> 00:33:04.520 align:start position:0%
you use during compilation have to match
 

00:33:04.520 --> 00:33:06.520 align:start position:0%
you use during compilation have to match
the<00:33:04.790><c> options</c><00:33:05.180><c> that</c><00:33:05.300><c> use</c><00:33:05.840><c> during</c><00:33:06.260><c> the</c><00:33:06.350><c> runtime</c>

00:33:06.520 --> 00:33:06.530 align:start position:0%
the options that use during the runtime
 

00:33:06.530 --> 00:33:09.280 align:start position:0%
the options that use during the runtime
and<00:33:07.420><c> here</c><00:33:08.420><c> I'm</c><00:33:08.510><c> just</c><00:33:08.690><c> pointing</c><00:33:08.810><c> out</c><00:33:09.050><c> that</c><00:33:09.170><c> if</c>

00:33:09.280 --> 00:33:09.290 align:start position:0%
and here I'm just pointing out that if
 

00:33:09.290 --> 00:33:10.840 align:start position:0%
and here I'm just pointing out that if
you<00:33:09.410><c> if</c><00:33:09.530><c> you</c><00:33:09.680><c> took</c><00:33:09.890><c> away</c><00:33:10.040><c> I'm</c><00:33:10.400><c> reiterating</c>

00:33:10.840 --> 00:33:10.850 align:start position:0%
you if you took away I'm reiterating
 

00:33:10.850 --> 00:33:12.520 align:start position:0%
you if you took away I'm reiterating
basically<00:33:11.480><c> that</c><00:33:11.600><c> if</c><00:33:11.960><c> you</c><00:33:11.990><c> take</c><00:33:12.230><c> away</c><00:33:12.350><c> the</c>

00:33:12.520 --> 00:33:12.530 align:start position:0%
basically that if you take away the
 

00:33:12.530 --> 00:33:15.400 align:start position:0%
basically that if you take away the
print<00:33:12.800><c> äôt</c><00:33:13.310><c> thing</c><00:33:13.610><c> and</c><00:33:14.120><c> you</c><00:33:14.270><c> run</c><00:33:14.450><c> it</c><00:33:14.630><c> this</c><00:33:15.200><c> is</c>

00:33:15.400 --> 00:33:15.410 align:start position:0%
print äôt thing and you run it this is
 

00:33:15.410 --> 00:33:17.560 align:start position:0%
print äôt thing and you run it this is
still<00:33:15.590><c> failing</c><00:33:15.860><c> this</c><00:33:16.250><c> is</c><00:33:16.430><c> exactly</c><00:33:17.090><c> the</c><00:33:17.390><c> same</c>

00:33:17.560 --> 00:33:17.570 align:start position:0%
still failing this is exactly the same
 

00:33:17.570 --> 00:33:18.940 align:start position:0%
still failing this is exactly the same
command<00:33:17.870><c> line</c><00:33:18.020><c> that</c><00:33:18.050><c> I</c><00:33:18.260><c> was</c><00:33:18.320><c> just</c><00:33:18.530><c> passing</c>

00:33:18.940 --> 00:33:18.950 align:start position:0%
command line that I was just passing
 

00:33:18.950 --> 00:33:20.720 align:start position:0%
command line that I was just passing
except<00:33:19.280><c> we</c><00:33:19.400><c> don't</c><00:33:19.520><c> have</c><00:33:19.640><c> the</c><00:33:19.910><c> verbosity</c>

00:33:20.720 --> 00:33:20.730 align:start position:0%
except we don't have the verbosity
 

00:33:20.730 --> 00:33:23.120 align:start position:0%
except we don't have the verbosity
output<00:33:21.120><c> and</c><00:33:21.360><c> so</c><00:33:21.960><c> it's</c><00:33:22.080><c> silently</c><00:33:22.530><c> failing</c><00:33:22.980><c> to</c>

00:33:23.120 --> 00:33:23.130 align:start position:0%
output and so it's silently failing to
 

00:33:23.130 --> 00:33:26.810 align:start position:0%
output and so it's silently failing to
load<00:33:23.280><c> that</c><00:33:23.490><c> for</c><00:33:23.790><c> you</c><00:33:24.500><c> but</c><00:33:25.500><c> we</c><00:33:25.740><c> have</c><00:33:26.190><c> to</c><00:33:26.370><c> we</c><00:33:26.790><c> have</c>

00:33:26.810 --> 00:33:26.820 align:start position:0%
load that for you but we have to we have
 

00:33:26.820 --> 00:33:30.169 align:start position:0%
load that for you but we have to we have
to<00:33:27.090><c> match</c><00:33:27.240><c> these</c><00:33:27.510><c> these</c><00:33:27.840><c> options</c><00:33:28.440><c> and</c><00:33:28.940><c> the</c><00:33:29.940><c> the</c>

00:33:30.169 --> 00:33:30.179 align:start position:0%
to match these these options and the the
 

00:33:30.179 --> 00:33:31.940 align:start position:0%
to match these these options and the the
current<00:33:30.540><c> kind</c><00:33:30.840><c> of</c><00:33:30.960><c> documentation</c><00:33:31.710><c> so</c><00:33:31.890><c> to</c>

00:33:31.940 --> 00:33:31.950 align:start position:0%
current kind of documentation so to
 

00:33:31.950 --> 00:33:34.340 align:start position:0%
current kind of documentation so to
speak<00:33:32.250><c> the</c><00:33:32.490><c> the</c><00:33:32.700><c> JEP</c><00:33:32.940><c> document</c><00:33:33.630><c> which</c><00:33:34.080><c> is</c><00:33:34.110><c> the</c>

00:33:34.340 --> 00:33:34.350 align:start position:0%
speak the the JEP document which is the
 

00:33:34.350 --> 00:33:36.169 align:start position:0%
speak the the JEP document which is the
closest<00:33:34.710><c> thing</c><00:33:34.770><c> we</c><00:33:34.919><c> have</c><00:33:35.100><c> to</c><00:33:35.130><c> to</c><00:33:35.730><c> any</c><00:33:35.910><c> kind</c><00:33:36.120><c> of</c>

00:33:36.169 --> 00:33:36.179 align:start position:0%
closest thing we have to to any kind of
 

00:33:36.179 --> 00:33:38.630 align:start position:0%
closest thing we have to to any kind of
official<00:33:36.660><c> documentation</c><00:33:37.620><c> for</c><00:33:38.130><c> a</c><00:33:38.340><c> OT</c>

00:33:38.630 --> 00:33:38.640 align:start position:0%
official documentation for a OT
 

00:33:38.640 --> 00:33:41.360 align:start position:0%
official documentation for a OT
currently<00:33:39.140><c> says</c><00:33:40.140><c> it</c><00:33:40.500><c> just</c><00:33:40.740><c> simply</c><00:33:41.040><c> says</c><00:33:41.220><c> that</c>

00:33:41.360 --> 00:33:41.370 align:start position:0%
currently says it just simply says that
 

00:33:41.370 --> 00:33:43.100 align:start position:0%
currently says it just simply says that
you<00:33:41.490><c> need</c><00:33:41.610><c> to</c><00:33:41.760><c> match</c><00:33:41.940><c> the</c><00:33:41.970><c> options</c><00:33:42.690><c> but</c><00:33:42.990><c> it</c>

00:33:43.100 --> 00:33:43.110 align:start position:0%
you need to match the options but it
 

00:33:43.110 --> 00:33:45.650 align:start position:0%
you need to match the options but it
doesn't<00:33:43.440><c> really</c><00:33:43.650><c> say</c><00:33:43.919><c> which</c><00:33:44.220><c> options</c><00:33:44.760><c> you</c><00:33:45.150><c> you</c>

00:33:45.650 --> 00:33:45.660 align:start position:0%
doesn't really say which options you you
 

00:33:45.660 --> 00:33:47.840 align:start position:0%
doesn't really say which options you you
really<00:33:45.900><c> need</c><00:33:46.110><c> to</c><00:33:46.290><c> to</c><00:33:47.070><c> match</c><00:33:47.250><c> although</c><00:33:47.549><c> it's</c>

00:33:47.840 --> 00:33:47.850 align:start position:0%
really need to to match although it's
 

00:33:47.850 --> 00:33:50.780 align:start position:0%
really need to to match although it's
implied<00:33:48.260><c> and</c><00:33:49.260><c> in</c><00:33:49.380><c> practice</c><00:33:49.890><c> there's</c><00:33:50.400><c> only</c><00:33:50.549><c> two</c>

00:33:50.780 --> 00:33:50.790 align:start position:0%
implied and in practice there's only two
 

00:33:50.790 --> 00:33:51.980 align:start position:0%
implied and in practice there's only two
things<00:33:50.940><c> you</c><00:33:51.059><c> need</c><00:33:51.179><c> to</c><00:33:51.299><c> worry</c><00:33:51.450><c> about</c><00:33:51.510><c> you</c><00:33:51.840><c> need</c>

00:33:51.980 --> 00:33:51.990 align:start position:0%
things you need to worry about you need
 

00:33:51.990 --> 00:33:53.360 align:start position:0%
things you need to worry about you need
to<00:33:52.049><c> worry</c><00:33:52.200><c> about</c><00:33:52.260><c> which</c><00:33:52.500><c> garbage</c><00:33:52.890><c> collector</c>

00:33:53.360 --> 00:33:53.370 align:start position:0%
to worry about which garbage collector
 

00:33:53.370 --> 00:33:55.220 align:start position:0%
to worry about which garbage collector
you're<00:33:53.700><c> using</c><00:33:53.880><c> and</c><00:33:54.179><c> you</c><00:33:54.720><c> need</c><00:33:54.870><c> to</c><00:33:54.960><c> worry</c><00:33:55.140><c> about</c>

00:33:55.220 --> 00:33:55.230 align:start position:0%
you're using and you need to worry about
 

00:33:55.230 --> 00:33:57.620 align:start position:0%
you're using and you need to worry about
whether<00:33:55.679><c> compressed</c><00:33:56.190><c> oops</c><00:33:56.669><c> is</c><00:33:57.030><c> enabled</c><00:33:57.570><c> or</c>

00:33:57.620 --> 00:33:57.630 align:start position:0%
whether compressed oops is enabled or
 

00:33:57.630 --> 00:33:59.630 align:start position:0%
whether compressed oops is enabled or
not<00:33:57.720><c> and</c><00:33:58.590><c> it's</c><00:33:59.010><c> kind</c><00:33:59.160><c> of</c><00:33:59.190><c> interesting</c><00:33:59.370><c> the</c>

00:33:59.630 --> 00:33:59.640 align:start position:0%
not and it's kind of interesting the
 

00:33:59.640 --> 00:34:02.299 align:start position:0%
not and it's kind of interesting the
thing<00:33:59.760><c> about</c><00:33:59.910><c> why</c><00:34:00.090><c> that's</c><00:34:00.330><c> the</c><00:34:00.510><c> case</c><00:34:00.540><c> but</c><00:34:01.309><c> just</c>

00:34:02.299 --> 00:34:02.309 align:start position:0%
thing about why that's the case but just
 

00:34:02.309 --> 00:34:04.280 align:start position:0%
thing about why that's the case but just
to<00:34:02.490><c> summarize</c><00:34:03.419><c> here</c><00:34:03.630><c> so</c><00:34:03.900><c> you</c><00:34:03.960><c> can</c><00:34:04.080><c> think</c><00:34:04.169><c> of</c>

00:34:04.280 --> 00:34:04.290 align:start position:0%
to summarize here so you can think of
 

00:34:04.290 --> 00:34:06.980 align:start position:0%
to summarize here so you can think of
every<00:34:04.710><c> single</c><00:34:04.740><c> compile</c><00:34:05.520><c> äôt</c><00:34:06.240><c> compile</c><00:34:06.630><c> and</c>

00:34:06.980 --> 00:34:06.990 align:start position:0%
every single compile äôt compile and
 

00:34:06.990 --> 00:34:09.740 align:start position:0%
every single compile äôt compile and
every<00:34:07.169><c> single</c><00:34:07.530><c> run</c><00:34:07.860><c> as</c><00:34:08.159><c> falling</c><00:34:09.060><c> into</c><00:34:09.300><c> one</c><00:34:09.480><c> of</c>

00:34:09.740 --> 00:34:09.750 align:start position:0%
every single run as falling into one of
 

00:34:09.750 --> 00:34:12.740 align:start position:0%
every single run as falling into one of
these<00:34:09.929><c> four</c><00:34:10.260><c> quadrants</c><00:34:10.889><c> so</c><00:34:11.190><c> you</c><00:34:12.119><c> know</c><00:34:12.210><c> each</c><00:34:12.510><c> of</c>

00:34:12.740 --> 00:34:12.750 align:start position:0%
these four quadrants so you know each of
 

00:34:12.750 --> 00:34:14.090 align:start position:0%
these four quadrants so you know each of
these<00:34:12.840><c> is</c><00:34:13.020><c> can</c><00:34:13.290><c> just</c><00:34:13.470><c> be</c><00:34:13.619><c> thought</c><00:34:13.830><c> of</c><00:34:13.859><c> as</c><00:34:14.070><c> a</c>

00:34:14.090 --> 00:34:14.100 align:start position:0%
these is can just be thought of as a
 

00:34:14.100 --> 00:34:15.950 align:start position:0%
these is can just be thought of as a
binary<00:34:14.340><c> thing</c><00:34:14.790><c> and</c><00:34:15.060><c> it's</c><00:34:15.359><c> either</c><00:34:15.540><c> on</c><00:34:15.720><c> or</c><00:34:15.750><c> off</c>

00:34:15.950 --> 00:34:15.960 align:start position:0%
binary thing and it's either on or off
 

00:34:15.960 --> 00:34:18.409 align:start position:0%
binary thing and it's either on or off
and<00:34:16.440><c> I'll</c><00:34:17.220><c> give</c><00:34:17.490><c> I'll</c><00:34:17.700><c> stick</c><00:34:18.000><c> you</c><00:34:18.090><c> into</c><00:34:18.270><c> one</c><00:34:18.389><c> of</c>

00:34:18.409 --> 00:34:18.419 align:start position:0%
and I'll give I'll stick you into one of
 

00:34:18.419 --> 00:34:19.730 align:start position:0%
and I'll give I'll stick you into one of
these<00:34:18.570><c> things</c><00:34:18.780><c> so</c><00:34:19.020><c> as</c><00:34:19.200><c> long</c><00:34:19.290><c> as</c><00:34:19.350><c> you</c><00:34:19.530><c> match</c>

00:34:19.730 --> 00:34:19.740 align:start position:0%
these things so as long as you match
 

00:34:19.740 --> 00:34:22.099 align:start position:0%
these things so as long as you match
your<00:34:20.010><c> a</c><00:34:20.070><c> ot</c><00:34:20.399><c> compile</c><00:34:20.820><c> with</c><00:34:21.600><c> your</c><00:34:21.899><c> runtime</c>

00:34:22.099 --> 00:34:22.109 align:start position:0%
your a ot compile with your runtime
 

00:34:22.109 --> 00:34:24.560 align:start position:0%
your a ot compile with your runtime
settings<00:34:22.770><c> then</c><00:34:23.429><c> the</c><00:34:23.669><c> library</c><00:34:24.210><c> should</c><00:34:24.450><c> be</c>

00:34:24.560 --> 00:34:24.570 align:start position:0%
settings then the library should be
 

00:34:24.570 --> 00:34:29.510 align:start position:0%
settings then the library should be
loaded<00:34:24.929><c> and</c><00:34:25.139><c> we</c><00:34:25.800><c> make</c><00:34:26.340><c> sure</c><00:34:26.580><c> that</c><00:34:27.560><c> that</c><00:34:28.560><c> it's</c>

00:34:29.510 --> 00:34:29.520 align:start position:0%
loaded and we make sure that that it's
 

00:34:29.520 --> 00:34:30.830 align:start position:0%
loaded and we make sure that that it's
sanity<00:34:29.940><c> checks</c><00:34:30.210><c> it</c><00:34:30.359><c> when</c><00:34:30.480><c> it</c><00:34:30.570><c> loads</c><00:34:30.750><c> the</c>

00:34:30.830 --> 00:34:30.840 align:start position:0%
sanity checks it when it loads the
 

00:34:30.840 --> 00:34:32.840 align:start position:0%
sanity checks it when it loads the
library<00:34:31.320><c> so</c><00:34:31.950><c> that</c><00:34:32.100><c> you</c><00:34:32.220><c> don't</c><00:34:32.399><c> ever</c><00:34:32.520><c> end</c><00:34:32.700><c> up</c>

00:34:32.840 --> 00:34:32.850 align:start position:0%
library so that you don't ever end up
 

00:34:32.850 --> 00:34:35.000 align:start position:0%
library so that you don't ever end up
loading<00:34:33.090><c> something</c><00:34:33.690><c> that</c><00:34:33.960><c> is</c><00:34:34.350><c> incompatible</c>

00:34:35.000 --> 00:34:35.010 align:start position:0%
loading something that is incompatible
 

00:34:35.010 --> 00:34:37.490 align:start position:0%
loading something that is incompatible
with<00:34:35.190><c> the</c><00:34:35.369><c> runtime</c><00:34:36.020><c> additionally</c><00:34:37.020><c> we</c><00:34:37.139><c> also</c><00:34:37.260><c> of</c>

00:34:37.490 --> 00:34:37.500 align:start position:0%
with the runtime additionally we also of
 

00:34:37.500 --> 00:34:38.840 align:start position:0%
with the runtime additionally we also of
course<00:34:37.560><c> check</c><00:34:38.040><c> that</c><00:34:38.220><c> the</c><00:34:38.310><c> class</c><00:34:38.520><c> hasn't</c>

00:34:38.840 --> 00:34:38.850 align:start position:0%
course check that the class hasn't
 

00:34:38.850 --> 00:34:41.359 align:start position:0%
course check that the class hasn't
changed<00:34:39.419><c> so</c><00:34:39.750><c> there's</c><00:34:40.020><c> code</c><00:34:40.500><c> in</c><00:34:40.649><c> there</c><00:34:40.830><c> that</c>

00:34:41.359 --> 00:34:41.369 align:start position:0%
changed so there's code in there that
 

00:34:41.369 --> 00:34:44.750 align:start position:0%
changed so there's code in there that
basically<00:34:42.300><c> fingerprints</c><00:34:43.080><c> classes</c><00:34:43.649><c> that</c><00:34:44.609><c> this</c>

00:34:44.750 --> 00:34:44.760 align:start position:0%
basically fingerprints classes that this
 

00:34:44.760 --> 00:34:46.639 align:start position:0%
basically fingerprints classes that this
isn't<00:34:44.970><c> we</c><00:34:45.330><c> don't</c><00:34:45.510><c> really</c><00:34:45.629><c> intend</c><00:34:46.080><c> for</c><00:34:46.200><c> like</c>

00:34:46.639 --> 00:34:46.649 align:start position:0%
isn't we don't really intend for like
 

00:34:46.649 --> 00:34:48.379 align:start position:0%
isn't we don't really intend for like
malicious<00:34:46.919><c> users</c><00:34:47.429><c> to</c><00:34:47.700><c> try</c><00:34:47.909><c> and</c><00:34:48.000><c> do</c><00:34:48.090><c> anything</c>

00:34:48.379 --> 00:34:48.389 align:start position:0%
malicious users to try and do anything
 

00:34:48.389 --> 00:34:50.560 align:start position:0%
malicious users to try and do anything
sneaky<00:34:48.510><c> so</c><00:34:49.020><c> it's</c><00:34:49.200><c> not</c><00:34:49.350><c> like</c><00:34:49.560><c> a</c><00:34:49.590><c> cryptographic</c>

00:34:50.560 --> 00:34:50.570 align:start position:0%
sneaky so it's not like a cryptographic
 

00:34:50.570 --> 00:34:53.210 align:start position:0%
sneaky so it's not like a cryptographic
sound<00:34:51.570><c> hash</c><00:34:51.899><c> or</c><00:34:52.109><c> anything</c><00:34:52.290><c> like</c><00:34:52.470><c> that</c><00:34:52.530><c> but</c><00:34:53.010><c> it</c>

00:34:53.210 --> 00:34:53.220 align:start position:0%
sound hash or anything like that but it
 

00:34:53.220 --> 00:34:54.409 align:start position:0%
sound hash or anything like that but it
should<00:34:53.429><c> be</c><00:34:53.460><c> enough</c><00:34:53.609><c> to</c><00:34:53.879><c> prevent</c><00:34:54.149><c> you</c><00:34:54.389><c> from</c>

00:34:54.409 --> 00:34:54.419 align:start position:0%
should be enough to prevent you from
 

00:34:54.419 --> 00:34:56.840 align:start position:0%
should be enough to prevent you from
accidentally<00:34:55.200><c> making</c><00:34:55.950><c> a</c><00:34:56.159><c> change</c><00:34:56.429><c> to</c><00:34:56.520><c> your</c>

00:34:56.840 --> 00:34:56.850 align:start position:0%
accidentally making a change to your
 

00:34:56.850 --> 00:34:59.540 align:start position:0%
accidentally making a change to your
class<00:34:57.119><c> so</c><00:34:57.420><c> the</c><00:34:57.510><c> bytecode</c><00:34:57.720><c> doesn't</c><00:34:58.710><c> match</c><00:34:58.890><c> the</c>

00:34:59.540 --> 00:34:59.550 align:start position:0%
class so the bytecode doesn't match the
 

00:34:59.550 --> 00:35:02.840 align:start position:0%
class so the bytecode doesn't match the
the<00:34:59.600><c> library</c><00:35:00.600><c> that</c><00:35:00.960><c> was</c><00:35:01.650><c> produced</c><00:35:02.130><c> from</c><00:35:02.340><c> a</c><00:35:02.580><c> ot</c>

00:35:02.840 --> 00:35:02.850 align:start position:0%
the library that was produced from a ot
 

00:35:02.850 --> 00:35:06.380 align:start position:0%
the library that was produced from a ot
compilation<00:35:03.480><c> of</c><00:35:03.630><c> that</c><00:35:03.810><c> same</c><00:35:04.080><c> bytecode</c><00:35:04.910><c> so</c><00:35:05.910><c> why</c>

00:35:06.380 --> 00:35:06.390 align:start position:0%
compilation of that same bytecode so why
 

00:35:06.390 --> 00:35:07.940 align:start position:0%
compilation of that same bytecode so why
do<00:35:06.480><c> we</c><00:35:06.570><c> need</c><00:35:06.690><c> to</c><00:35:06.810><c> synchronize</c><00:35:07.230><c> VM</c><00:35:07.530><c> options</c>

00:35:07.940 --> 00:35:07.950 align:start position:0%
do we need to synchronize VM options
 

00:35:07.950 --> 00:35:11.120 align:start position:0%
do we need to synchronize VM options
that<00:35:08.130><c> seems</c><00:35:08.369><c> like</c><00:35:08.490><c> a</c><00:35:08.580><c> really</c><00:35:08.730><c> arbitrary</c><00:35:10.130><c> kind</c>

00:35:11.120 --> 00:35:11.130 align:start position:0%
that seems like a really arbitrary kind
 

00:35:11.130 --> 00:35:12.590 align:start position:0%
that seems like a really arbitrary kind
of<00:35:11.220><c> pain</c><00:35:11.400><c> in</c><00:35:11.490><c> the</c><00:35:11.580><c> body</c><00:35:11.760><c> dang</c><00:35:12.090><c> right</c><00:35:12.300><c> like</c><00:35:12.570><c> that</c>

00:35:12.590 --> 00:35:12.600 align:start position:0%
of pain in the body dang right like that
 

00:35:12.600 --> 00:35:15.260 align:start position:0%
of pain in the body dang right like that
it's<00:35:13.080><c> a</c><00:35:13.380><c> usability</c><00:35:13.800><c> issue</c><00:35:14.130><c> and</c><00:35:15.119><c> there</c>

00:35:15.260 --> 00:35:15.270 align:start position:0%
it's a usability issue and there
 

00:35:15.270 --> 00:35:17.420 align:start position:0%
it's a usability issue and there
certainly<00:35:15.600><c> is</c><00:35:15.810><c> room</c><00:35:16.740><c> for</c><00:35:16.770><c> improvement</c><00:35:16.950><c> here</c>

00:35:17.420 --> 00:35:17.430 align:start position:0%
certainly is room for improvement here
 

00:35:17.430 --> 00:35:20.480 align:start position:0%
certainly is room for improvement here
and<00:35:17.790><c> that</c><00:35:17.910><c> is</c><00:35:18.030><c> kind</c><00:35:18.240><c> of</c><00:35:18.359><c> on</c><00:35:18.630><c> the</c><00:35:19.490><c> internal</c>

00:35:20.480 --> 00:35:20.490 align:start position:0%
and that is kind of on the internal
 

00:35:20.490 --> 00:35:22.550 align:start position:0%
and that is kind of on the internal
roadmap<00:35:20.820><c> to</c><00:35:21.359><c> hopefully</c><00:35:21.780><c> make</c><00:35:21.990><c> this</c><00:35:22.200><c> work</c><00:35:22.470><c> a</c>

00:35:22.550 --> 00:35:22.560 align:start position:0%
roadmap to hopefully make this work a
 

00:35:22.560 --> 00:35:24.500 align:start position:0%
roadmap to hopefully make this work a
little<00:35:22.650><c> bit</c><00:35:22.859><c> easier</c><00:35:23.220><c> or</c><00:35:23.550><c> better</c><00:35:24.060><c> or</c><00:35:24.150><c> at</c><00:35:24.359><c> least</c>

00:35:24.500 --> 00:35:24.510 align:start position:0%
little bit easier or better or at least
 

00:35:24.510 --> 00:35:26.630 align:start position:0%
little bit easier or better or at least
be<00:35:24.660><c> a</c><00:35:24.690><c> little</c><00:35:24.900><c> more</c><00:35:25.020><c> intuitive</c><00:35:25.530><c> but</c><00:35:26.340><c> today</c><00:35:26.580><c> you</c>

00:35:26.630 --> 00:35:26.640 align:start position:0%
be a little more intuitive but today you
 

00:35:26.640 --> 00:35:28.490 align:start position:0%
be a little more intuitive but today you
you<00:35:27.180><c> really</c><00:35:27.450><c> can't</c><00:35:27.660><c> do</c><00:35:27.810><c> what</c><00:35:27.990><c> we</c><00:35:28.109><c> referred</c><00:35:28.470><c> to</c>

00:35:28.490 --> 00:35:28.500 align:start position:0%
you really can't do what we referred to
 

00:35:28.500 --> 00:35:30.710 align:start position:0%
you really can't do what we referred to
as<00:35:28.590><c> cross</c><00:35:28.950><c> compilation</c><00:35:29.330><c> and</c><00:35:30.330><c> what</c><00:35:30.420><c> I</c><00:35:30.450><c> mean</c><00:35:30.630><c> by</c>

00:35:30.710 --> 00:35:30.720 align:start position:0%
as cross compilation and what I mean by
 

00:35:30.720 --> 00:35:32.090 align:start position:0%
as cross compilation and what I mean by
cross<00:35:30.930><c> compilation</c><00:35:31.109><c> is</c><00:35:31.619><c> I'm</c><00:35:31.740><c> not</c><00:35:31.830><c> talking</c>

00:35:32.090 --> 00:35:32.100 align:start position:0%
cross compilation is I'm not talking
 

00:35:32.100 --> 00:35:34.130 align:start position:0%
cross compilation is I'm not talking
about<00:35:32.130><c> from</c><00:35:32.430><c> one</c><00:35:32.609><c> CPU</c><00:35:33.119><c> type</c><00:35:33.480><c> to</c><00:35:33.660><c> another</c><00:35:33.869><c> but</c>

00:35:34.130 --> 00:35:34.140 align:start position:0%
about from one CPU type to another but
 

00:35:34.140 --> 00:35:34.460 align:start position:0%
about from one CPU type to another but
even

00:35:34.460 --> 00:35:34.470 align:start position:0%
even
 

00:35:34.470 --> 00:35:36.470 align:start position:0%
even
like<00:35:35.040><c> from</c><00:35:35.310><c> we've</c><00:35:35.460><c> compressed</c><00:35:35.760><c> references</c>

00:35:36.470 --> 00:35:36.480 align:start position:0%
like from we've compressed references
 

00:35:36.480 --> 00:35:39.140 align:start position:0%
like from we've compressed references
using<00:35:37.140><c> a</c><00:35:37.319><c> JVM</c><00:35:37.680><c> running</c><00:35:38.130><c> the</c><00:35:38.220><c> OT</c><00:35:38.550><c> tool</c><00:35:38.790><c> that</c>

00:35:39.140 --> 00:35:39.150 align:start position:0%
using a JVM running the OT tool that
 

00:35:39.150 --> 00:35:40.880 align:start position:0%
using a JVM running the OT tool that
uses<00:35:39.420><c> compressed</c><00:35:39.720><c> references</c><00:35:40.290><c> to</c><00:35:40.560><c> a</c><00:35:40.589><c> runtime</c>

00:35:40.880 --> 00:35:40.890 align:start position:0%
uses compressed references to a runtime
 

00:35:40.890 --> 00:35:43.220 align:start position:0%
uses compressed references to a runtime
that<00:35:40.950><c> doesn't</c><00:35:41.369><c> use</c><00:35:42.329><c> compressed</c><00:35:42.690><c> references</c>

00:35:43.220 --> 00:35:43.230 align:start position:0%
that doesn't use compressed references
 

00:35:43.230 --> 00:35:45.109 align:start position:0%
that doesn't use compressed references
we<00:35:43.349><c> don't</c><00:35:43.530><c> currently</c><00:35:43.650><c> support</c><00:35:43.829><c> that</c><00:35:44.310><c> so</c><00:35:44.579><c> why</c>

00:35:45.109 --> 00:35:45.119 align:start position:0%
we don't currently support that so why
 

00:35:45.119 --> 00:35:47.120 align:start position:0%
we don't currently support that so why
don't<00:35:45.329><c> we</c><00:35:45.359><c> support</c><00:35:45.750><c> that</c><00:35:45.869><c> well</c><00:35:46.230><c> if</c><00:35:46.589><c> we</c><00:35:46.890><c> look</c><00:35:47.010><c> at</c>

00:35:47.120 --> 00:35:47.130 align:start position:0%
don't we support that well if we look at
 

00:35:47.130 --> 00:35:48.920 align:start position:0%
don't we support that well if we look at
the<00:35:47.220><c> compressed</c><00:35:47.579><c> referent</c><00:35:48.390><c> or</c><00:35:48.510><c> compressed</c>

00:35:48.920 --> 00:35:48.930 align:start position:0%
the compressed referent or compressed
 

00:35:48.930 --> 00:35:51.650 align:start position:0%
the compressed referent or compressed
oops<00:35:49.170><c> and</c><00:35:49.890><c> oops</c><00:35:50.339><c> oops</c><00:35:50.550><c> by</c><00:35:50.849><c> the</c><00:35:50.910><c> way</c><00:35:51.089><c> is</c>

00:35:51.650 --> 00:35:51.660 align:start position:0%
oops and oops oops by the way is
 

00:35:51.660 --> 00:35:54.490 align:start position:0%
oops and oops oops by the way is
everyone<00:35:51.990><c> familiar</c><00:35:52.140><c> with</c><00:35:52.349><c> the</c><00:35:52.470><c> term</c><00:35:52.650><c> oops</c><00:35:52.829><c> sir</c>

00:35:54.490 --> 00:35:54.500 align:start position:0%
everyone familiar with the term oops sir
 

00:35:54.500 --> 00:35:57.470 align:start position:0%
everyone familiar with the term oops sir
okay<00:35:55.530><c> so</c><00:35:55.859><c> oops</c><00:35:56.069><c> just</c><00:35:56.369><c> means</c><00:35:56.520><c> a</c><00:35:56.609><c> reference</c><00:35:57.000><c> it's</c>

00:35:57.470 --> 00:35:57.480 align:start position:0%
okay so oops just means a reference it's
 

00:35:57.480 --> 00:35:59.390 align:start position:0%
okay so oops just means a reference it's
a<00:35:57.599><c> pointer</c><00:35:57.960><c> to</c><00:35:57.990><c> an</c><00:35:58.380><c> object</c><00:35:58.470><c> on</c><00:35:58.829><c> the</c><00:35:58.920><c> heap</c><00:35:58.950><c> that</c>

00:35:59.390 --> 00:35:59.400 align:start position:0%
a pointer to an object on the heap that
 

00:35:59.400 --> 00:36:01.550 align:start position:0%
a pointer to an object on the heap that
it<00:35:59.670><c> stands</c><00:35:59.970><c> for</c><00:36:00.089><c> ordinary</c><00:36:00.780><c> object</c><00:36:01.140><c> pointer</c>

00:36:01.550 --> 00:36:01.560 align:start position:0%
it stands for ordinary object pointer
 

00:36:01.560 --> 00:36:04.010 align:start position:0%
it stands for ordinary object pointer
and<00:36:01.849><c> it's</c><00:36:02.849><c> kind</c><00:36:03.089><c> of</c><00:36:03.119><c> a</c><00:36:03.210><c> strange</c><00:36:03.450><c> name</c><00:36:03.510><c> but</c><00:36:03.900><c> it</c>

00:36:04.010 --> 00:36:04.020 align:start position:0%
and it's kind of a strange name but it
 

00:36:04.020 --> 00:36:06.770 align:start position:0%
and it's kind of a strange name but it
has<00:36:04.200><c> a</c><00:36:04.530><c> lot</c><00:36:04.800><c> of</c><00:36:04.950><c> historical</c><00:36:05.490><c> precedent</c><00:36:06.180><c> so</c>

00:36:06.770 --> 00:36:06.780 align:start position:0%
has a lot of historical precedent so
 

00:36:06.780 --> 00:36:11.000 align:start position:0%
has a lot of historical precedent so
small<00:36:07.079><c> talk</c><00:36:07.349><c> and</c><00:36:07.619><c> self</c><00:36:08.569><c> apparently</c><00:36:09.569><c> used</c><00:36:10.410><c> this</c>

00:36:11.000 --> 00:36:11.010 align:start position:0%
small talk and self apparently used this
 

00:36:11.010 --> 00:36:12.710 align:start position:0%
small talk and self apparently used this
term<00:36:11.339><c> and</c><00:36:11.640><c> and</c><00:36:11.910><c> that's</c><00:36:12.030><c> why</c><00:36:12.210><c> we've</c><00:36:12.420><c> inherited</c>

00:36:12.710 --> 00:36:12.720 align:start position:0%
term and and that's why we've inherited
 

00:36:12.720 --> 00:36:15.770 align:start position:0%
term and and that's why we've inherited
it<00:36:13.050><c> and</c><00:36:13.319><c> of</c><00:36:13.380><c> course</c><00:36:13.410><c> the</c><00:36:13.859><c> hotspot</c><00:36:14.220><c> JVM</c><00:36:14.720><c> kind</c><00:36:15.720><c> of</c>

00:36:15.770 --> 00:36:15.780 align:start position:0%
it and of course the hotspot JVM kind of
 

00:36:15.780 --> 00:36:19.250 align:start position:0%
it and of course the hotspot JVM kind of
evolved<00:36:16.230><c> from</c><00:36:16.319><c> a</c><00:36:16.770><c> self</c><00:36:17.099><c> runtime</c><00:36:17.579><c> so</c><00:36:18.270><c> there's</c><00:36:19.200><c> a</c>

00:36:19.250 --> 00:36:19.260 align:start position:0%
evolved from a self runtime so there's a
 

00:36:19.260 --> 00:36:21.109 align:start position:0%
evolved from a self runtime so there's a
lot<00:36:19.500><c> of</c><00:36:19.589><c> history</c><00:36:20.010><c> there</c><00:36:20.040><c> for</c><00:36:20.579><c> free</c><00:36:20.760><c> using</c><00:36:20.940><c> that</c>

00:36:21.109 --> 00:36:21.119 align:start position:0%
lot of history there for free using that
 

00:36:21.119 --> 00:36:23.750 align:start position:0%
lot of history there for free using that
term<00:36:21.329><c> but</c><00:36:21.690><c> we</c><00:36:22.230><c> knew</c><00:36:22.589><c> here</c><00:36:22.770><c> oops</c><00:36:22.950><c> just</c><00:36:23.339><c> think</c><00:36:23.550><c> of</c>

00:36:23.750 --> 00:36:23.760 align:start position:0%
term but we knew here oops just think of
 

00:36:23.760 --> 00:36:25.640 align:start position:0%
term but we knew here oops just think of
object<00:36:24.390><c> reference</c><00:36:24.780><c> it's</c><00:36:25.050><c> it's</c><00:36:25.319><c> a</c><00:36:25.380><c> pointer</c>

00:36:25.640 --> 00:36:25.650 align:start position:0%
object reference it's it's a pointer
 

00:36:25.650 --> 00:36:27.349 align:start position:0%
object reference it's it's a pointer
into<00:36:25.770><c> the</c><00:36:25.890><c> heap</c><00:36:26.040><c> somewhere</c><00:36:26.220><c> so</c><00:36:27.000><c> compressed</c>

00:36:27.349 --> 00:36:27.359 align:start position:0%
into the heap somewhere so compressed
 

00:36:27.359 --> 00:36:30.109 align:start position:0%
into the heap somewhere so compressed
oops<00:36:27.599><c> is</c><00:36:27.839><c> well</c><00:36:28.230><c> a</c><00:36:28.410><c> compressed</c><00:36:28.890><c> object</c><00:36:29.760><c> pointer</c>

00:36:30.109 --> 00:36:30.119 align:start position:0%
oops is well a compressed object pointer
 

00:36:30.119 --> 00:36:34.540 align:start position:0%
oops is well a compressed object pointer
of<00:36:30.359><c> some</c><00:36:30.599><c> kind</c><00:36:30.869><c> so</c><00:36:31.849><c> what</c><00:36:32.849><c> the</c><00:36:32.970><c> idea</c><00:36:33.240><c> is</c><00:36:33.450><c> is</c><00:36:33.660><c> that</c>

00:36:34.540 --> 00:36:34.550 align:start position:0%
of some kind so what the idea is is that
 

00:36:34.550 --> 00:36:36.950 align:start position:0%
of some kind so what the idea is is that
originally<00:36:35.550><c> when</c><00:36:35.849><c> you</c><00:36:35.970><c> make</c><00:36:36.150><c> when</c><00:36:36.480><c> we</c><00:36:36.599><c> made</c>

00:36:36.950 --> 00:36:36.960 align:start position:0%
originally when you make when we made
 

00:36:36.960 --> 00:36:40.339 align:start position:0%
originally when you make when we made
the<00:36:37.079><c> move</c><00:36:37.260><c> from</c><00:36:37.589><c> 32-bit</c><00:36:38.460><c> to</c><00:36:38.849><c> 64-bit</c><00:36:39.200><c> there</c><00:36:40.200><c> was</c>

00:36:40.339 --> 00:36:40.349 align:start position:0%
the move from 32-bit to 64-bit there was
 

00:36:40.349 --> 00:36:41.780 align:start position:0%
the move from 32-bit to 64-bit there was
a<00:36:40.380><c> performance</c><00:36:40.920><c> penalty</c><00:36:41.099><c> that</c><00:36:41.609><c> you</c><00:36:41.700><c> were</c>

00:36:41.780 --> 00:36:41.790 align:start position:0%
a performance penalty that you were
 

00:36:41.790 --> 00:36:44.359 align:start position:0%
a performance penalty that you were
paying<00:36:42.170><c> even</c><00:36:43.170><c> on</c><00:36:43.260><c> a</c><00:36:43.290><c> platform</c><00:36:43.800><c> like</c><00:36:43.859><c> Intel</c>

00:36:44.359 --> 00:36:44.369 align:start position:0%
paying even on a platform like Intel
 

00:36:44.369 --> 00:36:45.530 align:start position:0%
paying even on a platform like Intel
where<00:36:44.700><c> you</c><00:36:45.000><c> were</c><00:36:45.089><c> getting</c><00:36:45.210><c> all</c><00:36:45.420><c> these</c>

00:36:45.530 --> 00:36:45.540 align:start position:0%
where you were getting all these
 

00:36:45.540 --> 00:36:47.300 align:start position:0%
where you were getting all these
additional<00:36:45.960><c> registers</c><00:36:46.380><c> and</c><00:36:46.740><c> stuff</c><00:36:46.950><c> and</c><00:36:47.190><c> so</c>

00:36:47.300 --> 00:36:47.310 align:start position:0%
additional registers and stuff and so
 

00:36:47.310 --> 00:36:49.099 align:start position:0%
additional registers and stuff and so
you'd<00:36:47.430><c> normally</c><00:36:47.579><c> expect</c><00:36:47.880><c> kind</c><00:36:48.569><c> of</c><00:36:48.660><c> a</c><00:36:48.750><c> speed-up</c>

00:36:49.099 --> 00:36:49.109 align:start position:0%
you'd normally expect kind of a speed-up
 

00:36:49.109 --> 00:36:51.050 align:start position:0%
you'd normally expect kind of a speed-up
when<00:36:49.530><c> you</c><00:36:49.619><c> go</c><00:36:49.740><c> to</c><00:36:49.829><c> 64</c><00:36:50.369><c> bit</c><00:36:50.550><c> because</c><00:36:50.760><c> the</c>

00:36:51.050 --> 00:36:51.060 align:start position:0%
when you go to 64 bit because the
 

00:36:51.060 --> 00:36:53.300 align:start position:0%
when you go to 64 bit because the
register<00:36:51.420><c> pressure</c><00:36:51.720><c> was</c><00:36:52.050><c> relieved</c><00:36:52.920><c> to</c><00:36:53.190><c> a</c>

00:36:53.300 --> 00:36:53.310 align:start position:0%
register pressure was relieved to a
 

00:36:53.310 --> 00:36:56.059 align:start position:0%
register pressure was relieved to a
great<00:36:53.490><c> extent</c><00:36:53.880><c> but</c><00:36:54.780><c> the</c><00:36:55.200><c> slowdown</c><00:36:55.440><c> was</c><00:36:56.040><c> a</c>

00:36:56.059 --> 00:36:56.069 align:start position:0%
great extent but the slowdown was a
 

00:36:56.069 --> 00:36:57.620 align:start position:0%
great extent but the slowdown was a
result<00:36:56.400><c> of</c><00:36:56.550><c> the</c><00:36:56.640><c> fact</c><00:36:56.910><c> that</c><00:36:57.030><c> all</c><00:36:57.210><c> of</c><00:36:57.300><c> a</c><00:36:57.359><c> sudden</c>

00:36:57.620 --> 00:36:57.630 align:start position:0%
result of the fact that all of a sudden
 

00:36:57.630 --> 00:37:00.500 align:start position:0%
result of the fact that all of a sudden
all<00:36:57.869><c> of</c><00:36:57.990><c> our</c><00:36:58.109><c> references</c><00:36:58.650><c> are</c><00:36:58.980><c> 64-bit</c><00:36:59.700><c> and</c><00:36:59.940><c> of</c>

00:37:00.500 --> 00:37:00.510 align:start position:0%
all of our references are 64-bit and of
 

00:37:00.510 --> 00:37:02.420 align:start position:0%
all of our references are 64-bit and of
course<00:37:00.780><c> this</c><00:37:00.900><c> isn't</c><00:37:01.109><c> Java</c><00:37:01.440><c> specific</c><00:37:02.099><c> I</c><00:37:02.280><c> mean</c>

00:37:02.420 --> 00:37:02.430 align:start position:0%
course this isn't Java specific I mean
 

00:37:02.430 --> 00:37:04.130 align:start position:0%
course this isn't Java specific I mean
all<00:37:02.579><c> software</c><00:37:03.000><c> kind</c><00:37:03.720><c> of</c><00:37:03.810><c> has</c><00:37:03.930><c> the</c><00:37:04.109><c> same</c>

00:37:04.130 --> 00:37:04.140 align:start position:0%
all software kind of has the same
 

00:37:04.140 --> 00:37:06.079 align:start position:0%
all software kind of has the same
problem<00:37:04.740><c> when</c><00:37:04.890><c> you</c><00:37:04.950><c> move</c><00:37:05.130><c> from</c><00:37:05.160><c> 32-bit</c><00:37:05.940><c> to</c>

00:37:06.079 --> 00:37:06.089 align:start position:0%
problem when you move from 32-bit to
 

00:37:06.089 --> 00:37:09.740 align:start position:0%
problem when you move from 32-bit to
64-bit<00:37:06.119><c> is</c><00:37:06.960><c> that</c><00:37:07.109><c> all</c><00:37:07.200><c> of</c><00:37:07.319><c> a</c><00:37:07.380><c> sudden</c><00:37:08.329><c> you</c><00:37:09.329><c> you</c>

00:37:09.740 --> 00:37:09.750 align:start position:0%
64-bit is that all of a sudden you you
 

00:37:09.750 --> 00:37:12.950 align:start position:0%
64-bit is that all of a sudden you you
you<00:37:10.050><c> have</c><00:37:10.920><c> this</c><00:37:11.130><c> bandwidth</c><00:37:11.609><c> cost</c><00:37:12.060><c> between</c>

00:37:12.950 --> 00:37:12.960 align:start position:0%
you have this bandwidth cost between
 

00:37:12.960 --> 00:37:14.990 align:start position:0%
you have this bandwidth cost between
memory<00:37:13.349><c> and</c><00:37:13.470><c> the</c><00:37:13.589><c> CPU</c><00:37:13.650><c> because</c><00:37:14.310><c> all</c><00:37:14.730><c> of</c><00:37:14.880><c> the</c>

00:37:14.990 --> 00:37:15.000 align:start position:0%
memory and the CPU because all of the
 

00:37:15.000 --> 00:37:17.809 align:start position:0%
memory and the CPU because all of the
pointers<00:37:15.390><c> are</c><00:37:15.720><c> now</c><00:37:15.869><c> twice</c><00:37:16.140><c> as</c><00:37:16.170><c> big</c><00:37:16.560><c> so</c><00:37:17.460><c> for</c><00:37:17.760><c> the</c>

00:37:17.809 --> 00:37:17.819 align:start position:0%
pointers are now twice as big so for the
 

00:37:17.819 --> 00:37:19.609 align:start position:0%
pointers are now twice as big so for the
heap<00:37:18.000><c> maybe</c><00:37:18.390><c> we</c><00:37:18.599><c> could</c><00:37:18.780><c> do</c><00:37:18.900><c> something</c><00:37:19.140><c> to</c>

00:37:19.609 --> 00:37:19.619 align:start position:0%
heap maybe we could do something to
 

00:37:19.619 --> 00:37:23.270 align:start position:0%
heap maybe we could do something to
alleviate<00:37:20.579><c> that</c><00:37:21.270><c> overhead</c><00:37:21.930><c> and</c><00:37:22.410><c> to</c><00:37:22.740><c> kind</c><00:37:23.220><c> of</c>

00:37:23.270 --> 00:37:23.280 align:start position:0%
alleviate that overhead and to kind of
 

00:37:23.280 --> 00:37:25.040 align:start position:0%
alleviate that overhead and to kind of
make<00:37:23.579><c> that</c><00:37:23.730><c> regression</c><00:37:24.119><c> just</c><00:37:24.510><c> magically</c><00:37:24.930><c> go</c>

00:37:25.040 --> 00:37:25.050 align:start position:0%
make that regression just magically go
 

00:37:25.050 --> 00:37:27.829 align:start position:0%
make that regression just magically go
away<00:37:25.079><c> and</c><00:37:25.589><c> the</c><00:37:26.579><c> cool</c><00:37:26.760><c> thing</c><00:37:26.940><c> is</c><00:37:26.970><c> the</c><00:37:27.270><c> the</c><00:37:27.300><c> guys</c>

00:37:27.829 --> 00:37:27.839 align:start position:0%
away and the cool thing is the the guys
 

00:37:27.839 --> 00:37:30.069 align:start position:0%
away and the cool thing is the the guys
that<00:37:28.020><c> son</c><00:37:28.230><c> did</c><00:37:28.500><c> find</c><00:37:28.710><c> a</c><00:37:28.829><c> way</c><00:37:28.920><c> to</c><00:37:28.980><c> do</c><00:37:29.190><c> this</c><00:37:29.339><c> and</c>

00:37:30.069 --> 00:37:30.079 align:start position:0%
that son did find a way to do this and
 

00:37:30.079 --> 00:37:33.079 align:start position:0%
that son did find a way to do this and
actually<00:37:31.079><c> actually</c><00:37:31.619><c> I</c><00:37:32.010><c> think</c><00:37:32.400><c> we</c><00:37:32.700><c> did</c><00:37:32.940><c> this</c><00:37:33.030><c> a</c>

00:37:33.079 --> 00:37:33.089 align:start position:0%
actually actually I think we did this a
 

00:37:33.089 --> 00:37:34.819 align:start position:0%
actually actually I think we did this a
j-rok<00:37:33.480><c> at</c><00:37:33.660><c> first</c><00:37:33.869><c> and</c><00:37:34.109><c> they</c><00:37:34.170><c> copied</c><00:37:34.470><c> us</c><00:37:34.589><c> but</c>

00:37:34.819 --> 00:37:34.829 align:start position:0%
j-rok at first and they copied us but
 

00:37:34.829 --> 00:37:37.370 align:start position:0%
j-rok at first and they copied us but
I'm<00:37:34.980><c> not</c><00:37:35.160><c> entirely</c><00:37:35.579><c> sure</c><00:37:35.990><c> what</c><00:37:36.990><c> the</c><00:37:37.109><c> history</c>

00:37:37.370 --> 00:37:37.380 align:start position:0%
I'm not entirely sure what the history
 

00:37:37.380 --> 00:37:40.730 align:start position:0%
I'm not entirely sure what the history
of<00:37:37.500><c> there</c><00:37:37.650><c> is</c><00:37:37.800><c> but</c><00:37:38.220><c> um</c><00:37:38.540><c> anyway</c><00:37:39.540><c> maybe</c><00:37:40.290><c> maybe</c><00:37:40.650><c> we</c>

00:37:40.730 --> 00:37:40.740 align:start position:0%
of there is but um anyway maybe maybe we
 

00:37:40.740 --> 00:37:41.900 align:start position:0%
of there is but um anyway maybe maybe we
both<00:37:40.859><c> came</c><00:37:41.099><c> up</c><00:37:41.220><c> with</c><00:37:41.310><c> the</c><00:37:41.369><c> idea</c><00:37:41.640><c> at</c><00:37:41.700><c> the</c><00:37:41.790><c> same</c>

00:37:41.900 --> 00:37:41.910 align:start position:0%
both came up with the idea at the same
 

00:37:41.910 --> 00:37:44.960 align:start position:0%
both came up with the idea at the same
time<00:37:42.150><c> but</c><00:37:42.720><c> the</c><00:37:43.079><c> idea</c><00:37:43.290><c> is</c><00:37:43.380><c> pretty</c><00:37:43.410><c> simple</c><00:37:43.970><c> it's</c>

00:37:44.960 --> 00:37:44.970 align:start position:0%
time but the idea is pretty simple it's
 

00:37:44.970 --> 00:37:47.059 align:start position:0%
time but the idea is pretty simple it's
what<00:37:45.390><c> is</c><00:37:45.630><c> is</c><00:37:45.869><c> if</c><00:37:46.109><c> the</c><00:37:46.290><c> heap</c><00:37:46.500><c> is</c><00:37:46.680><c> actually</c>

00:37:47.059 --> 00:37:47.069 align:start position:0%
what is is if the heap is actually
 

00:37:47.069 --> 00:37:48.770 align:start position:0%
what is is if the heap is actually
smaller<00:37:47.550><c> than</c><00:37:47.640><c> four</c><00:37:48.000><c> gigabytes</c>

00:37:48.770 --> 00:37:48.780 align:start position:0%
smaller than four gigabytes
 

00:37:48.780 --> 00:37:51.530 align:start position:0%
smaller than four gigabytes
then<00:37:48.960><c> you</c><00:37:49.440><c> don't</c><00:37:49.590><c> need</c><00:37:49.890><c> a</c><00:37:50.310><c> heap</c><00:37:50.790><c> address</c><00:37:51.270><c> space</c>

00:37:51.530 --> 00:37:51.540 align:start position:0%
then you don't need a heap address space
 

00:37:51.540 --> 00:37:54.950 align:start position:0%
then you don't need a heap address space
that's<00:37:52.440><c> larger</c><00:37:53.220><c> than</c><00:37:53.280><c> 32</c><00:37:53.790><c> bits</c><00:37:54.000><c> so</c><00:37:54.750><c> what</c><00:37:54.870><c> you</c>

00:37:54.950 --> 00:37:54.960 align:start position:0%
that's larger than 32 bits so what you
 

00:37:54.960 --> 00:37:56.570 align:start position:0%
that's larger than 32 bits so what you
can<00:37:55.110><c> do</c><00:37:55.230><c> is</c><00:37:55.440><c> just</c><00:37:55.680><c> you</c><00:37:55.980><c> know</c><00:37:56.010><c> stick</c><00:37:56.310><c> the</c><00:37:56.400><c> heap</c>

00:37:56.570 --> 00:37:56.580 align:start position:0%
can do is just you know stick the heap
 

00:37:56.580 --> 00:37:59.120 align:start position:0%
can do is just you know stick the heap
somewhere<00:37:57.390><c> in</c><00:37:57.660><c> your</c><00:37:58.080><c> address</c><00:37:58.740><c> in</c><00:37:59.040><c> the</c>

00:37:59.120 --> 00:37:59.130 align:start position:0%
somewhere in your address in the
 

00:37:59.130 --> 00:38:01.520 align:start position:0%
somewhere in your address in the
processes<00:37:59.640><c> address</c><00:38:00.030><c> space</c><00:38:00.270><c> and</c><00:38:00.600><c> then</c><00:38:01.230><c> just</c>

00:38:01.520 --> 00:38:01.530 align:start position:0%
processes address space and then just
 

00:38:01.530 --> 00:38:03.770 align:start position:0%
processes address space and then just
add<00:38:01.740><c> the</c><00:38:02.100><c> offset</c><00:38:02.250><c> of</c><00:38:02.790><c> wherever</c><00:38:03.330><c> that</c><00:38:03.570><c> heap</c>

00:38:03.770 --> 00:38:03.780 align:start position:0%
add the offset of wherever that heap
 

00:38:03.780 --> 00:38:07.670 align:start position:0%
add the offset of wherever that heap
starts<00:38:04.200><c> to</c><00:38:04.890><c> every</c><00:38:05.430><c> he</c><00:38:05.610><c> preference</c><00:38:06.060><c> and</c><00:38:06.360><c> oh</c><00:38:06.870><c> you</c>

00:38:07.670 --> 00:38:07.680 align:start position:0%
starts to every he preference and oh you
 

00:38:07.680 --> 00:38:10.490 align:start position:0%
starts to every he preference and oh you
basically<00:38:08.100><c> can</c><00:38:08.910><c> address</c><00:38:09.270><c> an</c><00:38:09.750><c> entire</c><00:38:10.050><c> four</c>

00:38:10.490 --> 00:38:10.500 align:start position:0%
basically can address an entire four
 

00:38:10.500 --> 00:38:13.460 align:start position:0%
basically can address an entire four
gigabyte<00:38:10.890><c> of</c><00:38:11.090><c> heap</c><00:38:12.090><c> without</c><00:38:12.840><c> having</c><00:38:13.140><c> to</c><00:38:13.230><c> store</c>

00:38:13.460 --> 00:38:13.470 align:start position:0%
gigabyte of heap without having to store
 

00:38:13.470 --> 00:38:16.790 align:start position:0%
gigabyte of heap without having to store
64<00:38:14.130><c> bits</c><00:38:14.400><c> of</c><00:38:14.670><c> every</c><00:38:15.270><c> address</c><00:38:15.690><c> and</c><00:38:15.990><c> this</c><00:38:16.530><c> has</c><00:38:16.770><c> a</c>

00:38:16.790 --> 00:38:16.800 align:start position:0%
64 bits of every address and this has a
 

00:38:16.800 --> 00:38:19.730 align:start position:0%
64 bits of every address and this has a
tremendous<00:38:17.460><c> impact</c><00:38:17.850><c> on</c><00:38:18.180><c> the</c><00:38:18.630><c> performance</c><00:38:18.810><c> not</c>

00:38:19.730 --> 00:38:19.740 align:start position:0%
tremendous impact on the performance not
 

00:38:19.740 --> 00:38:22.580 align:start position:0%
tremendous impact on the performance not
just<00:38:19.800><c> of</c><00:38:20.220><c> speed</c><00:38:20.520><c> but</c><00:38:20.850><c> of</c><00:38:21.000><c> size</c><00:38:21.450><c> because</c><00:38:22.380><c> all</c><00:38:22.560><c> of</c>

00:38:22.580 --> 00:38:22.590 align:start position:0%
just of speed but of size because all of
 

00:38:22.590 --> 00:38:24.920 align:start position:0%
just of speed but of size because all of
your<00:38:22.770><c> objects</c><00:38:23.400><c> any</c><00:38:23.970><c> object</c><00:38:24.390><c> that</c><00:38:24.420><c> has</c><00:38:24.660><c> a</c><00:38:24.690><c> lot</c>

00:38:24.920 --> 00:38:24.930 align:start position:0%
your objects any object that has a lot
 

00:38:24.930 --> 00:38:26.630 align:start position:0%
your objects any object that has a lot
of<00:38:24.960><c> references</c><00:38:25.530><c> in</c><00:38:25.710><c> it</c><00:38:25.800><c> to</c><00:38:25.980><c> other</c><00:38:26.160><c> objects</c>

00:38:26.630 --> 00:38:26.640 align:start position:0%
of references in it to other objects
 

00:38:26.640 --> 00:38:28.550 align:start position:0%
of references in it to other objects
pointers<00:38:27.030><c> to</c><00:38:27.180><c> other</c><00:38:27.210><c> objects</c><00:38:27.870><c> become</c>

00:38:28.550 --> 00:38:28.560 align:start position:0%
pointers to other objects become
 

00:38:28.560 --> 00:38:30.830 align:start position:0%
pointers to other objects become
significantly<00:38:29.190><c> smaller</c><00:38:29.540><c> so</c><00:38:30.540><c> it</c><00:38:30.600><c> can</c><00:38:30.720><c> actually</c>

00:38:30.830 --> 00:38:30.840 align:start position:0%
significantly smaller so it can actually
 

00:38:30.840 --> 00:38:32.510 align:start position:0%
significantly smaller so it can actually
make<00:38:31.110><c> your</c><00:38:31.230><c> heap</c><00:38:31.410><c> consumption</c><00:38:32.010><c> smaller</c><00:38:32.310><c> as</c>

00:38:32.510 --> 00:38:32.520 align:start position:0%
make your heap consumption smaller as
 

00:38:32.520 --> 00:38:35.060 align:start position:0%
make your heap consumption smaller as
well<00:38:32.720><c> so</c><00:38:33.720><c> this</c><00:38:33.960><c> is</c><00:38:34.020><c> great</c>

00:38:35.060 --> 00:38:35.070 align:start position:0%
well so this is great
 

00:38:35.070 --> 00:38:36.500 align:start position:0%
well so this is great
but<00:38:35.550><c> how</c><00:38:35.700><c> does</c><00:38:35.760><c> this</c><00:38:36.000><c> actually</c><00:38:36.390><c> get</c>

00:38:36.500 --> 00:38:36.510 align:start position:0%
but how does this actually get
 

00:38:36.510 --> 00:38:39.290 align:start position:0%
but how does this actually get
implemented<00:38:36.870><c> well</c><00:38:37.320><c> I</c><00:38:37.700><c> said</c><00:38:38.700><c> there's</c><00:38:38.910><c> you</c><00:38:39.210><c> know</c>

00:38:39.290 --> 00:38:39.300 align:start position:0%
implemented well I said there's you know
 

00:38:39.300 --> 00:38:42.440 align:start position:0%
implemented well I said there's you know
we<00:38:39.450><c> break</c><00:38:40.080><c> the</c><00:38:40.260><c> 64</c><00:38:40.770><c> bit</c><00:38:40.890><c> pointer</c><00:38:41.310><c> into</c><00:38:41.670><c> kind</c><00:38:42.420><c> of</c>

00:38:42.440 --> 00:38:42.450 align:start position:0%
we break the 64 bit pointer into kind of
 

00:38:42.450 --> 00:38:44.990 align:start position:0%
we break the 64 bit pointer into kind of
two<00:38:42.720><c> halves</c><00:38:42.930><c> and</c><00:38:43.350><c> so</c><00:38:43.650><c> there's</c><00:38:43.860><c> a</c><00:38:43.920><c> 32</c><00:38:44.430><c> bit</c><00:38:44.610><c> least</c>

00:38:44.990 --> 00:38:45.000 align:start position:0%
two halves and so there's a 32 bit least
 

00:38:45.000 --> 00:38:47.000 align:start position:0%
two halves and so there's a 32 bit least
significant<00:38:45.570><c> bits</c><00:38:45.780><c> and</c><00:38:46.050><c> then</c><00:38:46.170><c> there's</c><00:38:46.350><c> 32</c><00:38:46.710><c> bit</c>

00:38:47.000 --> 00:38:47.010 align:start position:0%
significant bits and then there's 32 bit
 

00:38:47.010 --> 00:38:48.950 align:start position:0%
significant bits and then there's 32 bit
most<00:38:47.190><c> significant</c><00:38:47.640><c> bits</c><00:38:47.820><c> and</c><00:38:48.090><c> the</c><00:38:48.660><c> idea</c><00:38:48.900><c> is</c>

00:38:48.950 --> 00:38:48.960 align:start position:0%
most significant bits and the idea is
 

00:38:48.960 --> 00:38:50.240 align:start position:0%
most significant bits and the idea is
that<00:38:49.050><c> this</c><00:38:49.230><c> these</c><00:38:49.530><c> are</c><00:38:49.710><c> not</c><00:38:49.860><c> going</c><00:38:50.010><c> to</c><00:38:50.070><c> change</c>

00:38:50.240 --> 00:38:50.250 align:start position:0%
that this these are not going to change
 

00:38:50.250 --> 00:38:52.250 align:start position:0%
that this these are not going to change
right<00:38:50.820><c> if</c><00:38:51.090><c> you</c><00:38:51.480><c> have</c><00:38:51.570><c> a</c><00:38:51.630><c> heap</c><00:38:51.840><c> that's</c><00:38:52.050><c> under</c>

00:38:52.250 --> 00:38:52.260 align:start position:0%
right if you have a heap that's under
 

00:38:52.260 --> 00:38:53.840 align:start position:0%
right if you have a heap that's under
four<00:38:52.740><c> gigabytes</c><00:38:53.160><c> and</c><00:38:53.370><c> you</c><00:38:53.430><c> align</c><00:38:53.670><c> it</c>

00:38:53.840 --> 00:38:53.850 align:start position:0%
four gigabytes and you align it
 

00:38:53.850 --> 00:38:55.460 align:start position:0%
four gigabytes and you align it
correctly<00:38:54.210><c> so</c><00:38:54.300><c> it's</c><00:38:54.570><c> not</c><00:38:54.720><c> sitting</c><00:38:54.960><c> on</c><00:38:55.230><c> on</c><00:38:55.410><c> a</c>

00:38:55.460 --> 00:38:55.470 align:start position:0%
correctly so it's not sitting on on a
 

00:38:55.470 --> 00:38:57.710 align:start position:0%
correctly so it's not sitting on on a
border<00:38:56.250><c> between</c><00:38:56.460><c> two</c><00:38:56.850><c> different</c><00:38:57.000><c> you</c><00:38:57.630><c> know</c>

00:38:57.710 --> 00:38:57.720 align:start position:0%
border between two different you know
 

00:38:57.720 --> 00:39:00.560 align:start position:0%
border between two different you know
kind<00:38:58.020><c> of</c><00:38:58.050><c> 32-bit</c><00:38:58.680><c> address</c><00:38:58.980><c> space</c><00:38:59.010><c> pages</c><00:38:59.850><c> in</c><00:39:00.450><c> a</c>

00:39:00.560 --> 00:39:00.570 align:start position:0%
kind of 32-bit address space pages in a
 

00:39:00.570 --> 00:39:03.020 align:start position:0%
kind of 32-bit address space pages in a
sense<00:39:00.840><c> then</c><00:39:01.470><c> this</c><00:39:01.980><c> whole</c><00:39:02.190><c> this</c><00:39:02.640><c> will</c><00:39:02.790><c> be</c><00:39:02.910><c> the</c>

00:39:03.020 --> 00:39:03.030 align:start position:0%
sense then this whole this will be the
 

00:39:03.030 --> 00:39:05.660 align:start position:0%
sense then this whole this will be the
same<00:39:03.240><c> for</c><00:39:03.480><c> all</c><00:39:03.600><c> of</c><00:39:03.630><c> your</c><00:39:03.870><c> pointers</c><00:39:04.260><c> and</c><00:39:04.560><c> so</c><00:39:05.190><c> we</c>

00:39:05.660 --> 00:39:05.670 align:start position:0%
same for all of your pointers and so we
 

00:39:05.670 --> 00:39:07.160 align:start position:0%
same for all of your pointers and so we
can<00:39:05.820><c> just</c><00:39:05.970><c> like</c><00:39:06.090><c> throw</c><00:39:06.330><c> that</c><00:39:06.510><c> away</c><00:39:06.630><c> we</c><00:39:06.960><c> don't</c>

00:39:07.160 --> 00:39:07.170 align:start position:0%
can just like throw that away we don't
 

00:39:07.170 --> 00:39:08.930 align:start position:0%
can just like throw that away we don't
need<00:39:07.290><c> to</c><00:39:07.470><c> keep</c><00:39:07.650><c> that</c><00:39:07.800><c> information</c><00:39:07.980><c> handy</c><00:39:08.610><c> and</c>

00:39:08.930 --> 00:39:08.940 align:start position:0%
need to keep that information handy and
 

00:39:08.940 --> 00:39:11.360 align:start position:0%
need to keep that information handy and
so<00:39:09.870><c> this</c><00:39:09.990><c> is</c><00:39:10.110><c> what</c><00:39:10.260><c> actually</c><00:39:10.410><c> gets</c><00:39:10.740><c> stored</c><00:39:11.040><c> in</c>

00:39:11.360 --> 00:39:11.370 align:start position:0%
so this is what actually gets stored in
 

00:39:11.370 --> 00:39:15.320 align:start position:0%
so this is what actually gets stored in
every<00:39:12.360><c> field</c><00:39:13.200><c> of</c><00:39:13.730><c> an</c><00:39:14.730><c> object</c><00:39:15.060><c> on</c><00:39:15.180><c> the</c><00:39:15.300><c> heap</c>

00:39:15.320 --> 00:39:15.330 align:start position:0%
every field of an object on the heap
 

00:39:15.330 --> 00:39:17.870 align:start position:0%
every field of an object on the heap
that's<00:39:16.110><c> pointing</c><00:39:16.530><c> to</c><00:39:16.770><c> another</c><00:39:17.010><c> object</c><00:39:17.370><c> and</c>

00:39:17.870 --> 00:39:17.880 align:start position:0%
that's pointing to another object and
 

00:39:17.880 --> 00:39:19.970 align:start position:0%
that's pointing to another object and
that's<00:39:18.720><c> all</c><00:39:18.870><c> fine</c><00:39:19.020><c> and</c><00:39:19.080><c> dandy</c><00:39:19.260><c> but</c><00:39:19.680><c> then</c><00:39:19.860><c> how</c>

00:39:19.970 --> 00:39:19.980 align:start position:0%
that's all fine and dandy but then how
 

00:39:19.980 --> 00:39:22.160 align:start position:0%
that's all fine and dandy but then how
do<00:39:20.040><c> we</c><00:39:20.100><c> actually</c><00:39:20.460><c> use</c><00:39:20.610><c> that</c><00:39:20.640><c> and</c><00:39:21.180><c> so</c><00:39:21.780><c> in</c><00:39:22.080><c> the</c>

00:39:22.160 --> 00:39:22.170 align:start position:0%
do we actually use that and so in the
 

00:39:22.170 --> 00:39:23.870 align:start position:0%
do we actually use that and so in the
code<00:39:22.380><c> that's</c><00:39:22.560><c> generated</c><00:39:22.700><c> when</c><00:39:23.700><c> we're</c>

00:39:23.870 --> 00:39:23.880 align:start position:0%
code that's generated when we're
 

00:39:23.880 --> 00:39:25.760 align:start position:0%
code that's generated when we're
actually<00:39:24.000><c> looking</c><00:39:24.900><c> at</c><00:39:25.050><c> a</c><00:39:25.080><c> reference</c><00:39:25.530><c> because</c>

00:39:25.760 --> 00:39:25.770 align:start position:0%
actually looking at a reference because
 

00:39:25.770 --> 00:39:29.120 align:start position:0%
actually looking at a reference because
obviously<00:39:26.310><c> on</c><00:39:26.790><c> the</c><00:39:27.000><c> 64-bit</c><00:39:27.570><c> platform</c><00:39:28.050><c> if</c><00:39:28.920><c> we</c>

00:39:29.120 --> 00:39:29.130 align:start position:0%
obviously on the 64-bit platform if we
 

00:39:29.130 --> 00:39:30.830 align:start position:0%
obviously on the 64-bit platform if we
have<00:39:29.250><c> a</c><00:39:29.280><c> pointer</c><00:39:29.700><c> that's</c><00:39:30.120><c> in</c><00:39:30.240><c> a</c><00:39:30.300><c> register</c><00:39:30.720><c> on</c>

00:39:30.830 --> 00:39:30.840 align:start position:0%
have a pointer that's in a register on
 

00:39:30.840 --> 00:39:33.500 align:start position:0%
have a pointer that's in a register on
the<00:39:30.930><c> CPU</c><00:39:31.350><c> or</c><00:39:31.680><c> somewhere</c><00:39:32.340><c> in</c><00:39:32.490><c> in</c><00:39:32.820><c> this</c><00:39:33.210><c> the</c>

00:39:33.500 --> 00:39:33.510 align:start position:0%
the CPU or somewhere in in this the
 

00:39:33.510 --> 00:39:35.750 align:start position:0%
the CPU or somewhere in in this the
threads<00:39:33.810><c> execution</c><00:39:34.500><c> stack</c><00:39:34.830><c> it</c><00:39:35.130><c> has</c><00:39:35.430><c> to</c><00:39:35.580><c> be</c><00:39:35.730><c> a</c>

00:39:35.750 --> 00:39:35.760 align:start position:0%
threads execution stack it has to be a
 

00:39:35.760 --> 00:39:38.240 align:start position:0%
threads execution stack it has to be a
real<00:39:36.300><c> 64-bit</c><00:39:37.140><c> pointer</c><00:39:37.680><c> right</c><00:39:37.830><c> so</c><00:39:37.980><c> how</c><00:39:38.070><c> do</c><00:39:38.130><c> we</c>

00:39:38.240 --> 00:39:38.250 align:start position:0%
real 64-bit pointer right so how do we
 

00:39:38.250 --> 00:39:40.970 align:start position:0%
real 64-bit pointer right so how do we
expand<00:39:38.670><c> it</c><00:39:38.820><c> or</c><00:39:39.000><c> uncompress</c><00:39:39.630><c> it</c><00:39:39.660><c> and</c><00:39:40.110><c> basically</c>

00:39:40.970 --> 00:39:40.980 align:start position:0%
expand it or uncompress it and basically
 

00:39:40.980 --> 00:39:43.280 align:start position:0%
expand it or uncompress it and basically
all<00:39:41.130><c> we</c><00:39:41.250><c> do</c><00:39:41.370><c> is</c><00:39:41.520><c> just</c><00:39:41.730><c> we</c><00:39:41.820><c> add</c><00:39:42.000><c> the</c><00:39:42.540><c> the</c><00:39:42.870><c> base</c>

00:39:43.280 --> 00:39:43.290 align:start position:0%
all we do is just we add the the base
 

00:39:43.290 --> 00:39:45.380 align:start position:0%
all we do is just we add the the base
address<00:39:43.800><c> of</c><00:39:43.950><c> the</c><00:39:44.070><c> heap</c><00:39:44.250><c> to</c><00:39:44.460><c> it</c><00:39:44.610><c> so</c><00:39:45.180><c> it's</c><00:39:45.330><c> very</c>

00:39:45.380 --> 00:39:45.390 align:start position:0%
address of the heap to it so it's very
 

00:39:45.390 --> 00:39:46.520 align:start position:0%
address of the heap to it so it's very
simple<00:39:45.690><c> and</c><00:39:45.870><c> really</c><00:39:45.990><c> easy</c><00:39:46.050><c> but</c><00:39:46.470><c> it's</c>

00:39:46.520 --> 00:39:46.530 align:start position:0%
simple and really easy but it's
 

00:39:46.530 --> 00:39:47.750 align:start position:0%
simple and really easy but it's
something<00:39:46.800><c> that</c><00:39:46.980><c> we</c><00:39:47.070><c> have</c><00:39:47.190><c> to</c><00:39:47.310><c> do</c><00:39:47.430><c> and</c>

00:39:47.750 --> 00:39:47.760 align:start position:0%
something that we have to do and
 

00:39:47.760 --> 00:39:50.390 align:start position:0%
something that we have to do and
compiled<00:39:48.450><c> code</c><00:39:48.780><c> has</c><00:39:49.230><c> to</c><00:39:49.260><c> do</c><00:39:49.560><c> this</c><00:39:49.710><c> so</c><00:39:50.190><c> this</c><00:39:50.250><c> is</c>

00:39:50.390 --> 00:39:50.400 align:start position:0%
compiled code has to do this so this is
 

00:39:50.400 --> 00:39:52.220 align:start position:0%
compiled code has to do this so this is
one<00:39:50.550><c> we</c><00:39:50.880><c> have</c><00:39:50.970><c> to</c><00:39:51.090><c> know</c><00:39:51.240><c> ahead</c><00:39:51.390><c> of</c><00:39:51.570><c> time</c><00:39:51.720><c> when</c>

00:39:52.220 --> 00:39:52.230 align:start position:0%
one we have to know ahead of time when
 

00:39:52.230 --> 00:39:55.370 align:start position:0%
one we have to know ahead of time when
we<00:39:52.350><c> äôt</c><00:39:52.770><c> compile</c><00:39:53.190><c> that</c><00:39:54.030><c> this</c><00:39:54.690><c> is</c><00:39:54.840><c> actually</c>

00:39:55.370 --> 00:39:55.380 align:start position:0%
we äôt compile that this is actually
 

00:39:55.380 --> 00:39:56.750 align:start position:0%
we äôt compile that this is actually
pointing<00:39:55.860><c> you</c><00:39:56.070><c> know</c><00:39:56.190><c> this</c><00:39:56.490><c> is</c><00:39:56.610><c> actually</c>

00:39:56.750 --> 00:39:56.760 align:start position:0%
pointing you know this is actually
 

00:39:56.760 --> 00:39:58.460 align:start position:0%
pointing you know this is actually
compressed<00:39:57.300><c> reference</c><00:39:57.750><c> not</c><00:39:58.140><c> a</c><00:39:58.200><c> full</c>

00:39:58.460 --> 00:39:58.470 align:start position:0%
compressed reference not a full
 

00:39:58.470 --> 00:40:00.200 align:start position:0%
compressed reference not a full
reference<00:39:58.860><c> and</c><00:39:59.130><c> then</c><00:39:59.400><c> we</c><00:39:59.490><c> have</c><00:39:59.700><c> to</c><00:39:59.880><c> actually</c>

00:40:00.200 --> 00:40:00.210 align:start position:0%
reference and then we have to actually
 

00:40:00.210 --> 00:40:01.850 align:start position:0%
reference and then we have to actually
manipulate<00:40:00.780><c> it</c><00:40:01.260><c> but</c>

00:40:01.850 --> 00:40:01.860 align:start position:0%
manipulate it but
 

00:40:01.860 --> 00:40:05.630 align:start position:0%
manipulate it but
or<00:40:01.980><c> we</c><00:40:02.520><c> can</c><00:40:02.700><c> use</c><00:40:02.910><c> it</c><00:40:03.150><c> in</c><00:40:03.450><c> its</c><00:40:03.600><c> raw</c><00:40:03.810><c> form</c><00:40:04.640><c> this</c>

00:40:05.630 --> 00:40:05.640 align:start position:0%
or we can use it in its raw form this
 

00:40:05.640 --> 00:40:08.690 align:start position:0%
or we can use it in its raw form this
really<00:40:05.850><c> cheap</c><00:40:06.060><c> and</c><00:40:06.360><c> easy</c><00:40:06.930><c> to</c><00:40:07.110><c> do</c><00:40:07.410><c> but</c><00:40:08.070><c> a</c><00:40:08.310><c> more</c>

00:40:08.690 --> 00:40:08.700 align:start position:0%
really cheap and easy to do but a more
 

00:40:08.700 --> 00:40:10.250 align:start position:0%
really cheap and easy to do but a more
complicated<00:40:09.060><c> example</c><00:40:09.330><c> is</c><00:40:09.690><c> what</c><00:40:09.840><c> if</c><00:40:09.960><c> the</c><00:40:10.050><c> heap</c>

00:40:10.250 --> 00:40:10.260 align:start position:0%
complicated example is what if the heap
 

00:40:10.260 --> 00:40:12.620 align:start position:0%
complicated example is what if the heap
is<00:40:10.500><c> somewhere</c><00:40:10.770><c> between</c><00:40:10.920><c> 4</c><00:40:11.460><c> and</c><00:40:11.730><c> 32</c><00:40:12.150><c> gigabytes</c>

00:40:12.620 --> 00:40:12.630 align:start position:0%
is somewhere between 4 and 32 gigabytes
 

00:40:12.630 --> 00:40:14.960 align:start position:0%
is somewhere between 4 and 32 gigabytes
well<00:40:13.230><c> surprisingly</c><00:40:13.980><c> we</c><00:40:14.310><c> can</c><00:40:14.460><c> actually</c><00:40:14.610><c> do</c>

00:40:14.960 --> 00:40:14.970 align:start position:0%
well surprisingly we can actually do
 

00:40:14.970 --> 00:40:16.760 align:start position:0%
well surprisingly we can actually do
compressed<00:40:15.390><c> references</c><00:40:15.930><c> they</c><00:40:16.110><c> are</c><00:40:16.170><c> too</c><00:40:16.440><c> and</c>

00:40:16.760 --> 00:40:16.770 align:start position:0%
compressed references they are too and
 

00:40:16.770 --> 00:40:20.240 align:start position:0%
compressed references they are too and
the<00:40:17.550><c> trick</c><00:40:17.820><c> is</c><00:40:17.970><c> that</c><00:40:18.000><c> on</c><00:40:18.960><c> a</c><00:40:19.020><c> 64-bit</c><00:40:19.620><c> platform</c>

00:40:20.240 --> 00:40:20.250 align:start position:0%
the trick is that on a 64-bit platform
 

00:40:20.250 --> 00:40:22.550 align:start position:0%
the trick is that on a 64-bit platform
there's<00:40:20.730><c> alignment</c><00:40:21.000><c> requirements</c><00:40:21.900><c> right</c><00:40:22.110><c> so</c>

00:40:22.550 --> 00:40:22.560 align:start position:0%
there's alignment requirements right so
 

00:40:22.560 --> 00:40:25.280 align:start position:0%
there's alignment requirements right so
we<00:40:23.190><c> have</c><00:40:23.430><c> to</c><00:40:23.610><c> basically</c><00:40:23.970><c> start</c><00:40:24.300><c> everything</c><00:40:24.660><c> at</c>

00:40:25.280 --> 00:40:25.290 align:start position:0%
we have to basically start everything at
 

00:40:25.290 --> 00:40:28.130 align:start position:0%
we have to basically start everything at
a<00:40:25.800><c> multiple</c><00:40:26.580><c> of</c><00:40:26.850><c> 8</c><00:40:27.030><c> the</c><00:40:27.330><c> address</c><00:40:27.690><c> always</c><00:40:27.990><c> has</c>

00:40:28.130 --> 00:40:28.140 align:start position:0%
a multiple of 8 the address always has
 

00:40:28.140 --> 00:40:30.140 align:start position:0%
a multiple of 8 the address always has
to<00:40:28.260><c> be</c><00:40:28.290><c> a</c><00:40:28.380><c> multiple</c><00:40:28.500><c> of</c><00:40:28.800><c> 8</c><00:40:28.950><c> and</c><00:40:29.190><c> so</c><00:40:29.700><c> that</c><00:40:29.910><c> means</c>

00:40:30.140 --> 00:40:30.150 align:start position:0%
to be a multiple of 8 and so that means
 

00:40:30.150 --> 00:40:33.020 align:start position:0%
to be a multiple of 8 and so that means
that<00:40:30.450><c> in</c><00:40:30.960><c> the</c><00:40:31.200><c> address</c><00:40:31.590><c> the</c><00:40:32.250><c> least</c>

00:40:33.020 --> 00:40:33.030 align:start position:0%
that in the address the least
 

00:40:33.030 --> 00:40:35.360 align:start position:0%
that in the address the least
significant<00:40:33.600><c> 3</c><00:40:33.900><c> bits</c><00:40:34.290><c> are</c><00:40:34.650><c> always</c><00:40:35.220><c> going</c><00:40:35.310><c> to</c>

00:40:35.360 --> 00:40:35.370 align:start position:0%
significant 3 bits are always going to
 

00:40:35.370 --> 00:40:37.940 align:start position:0%
significant 3 bits are always going to
be<00:40:35.520><c> 0</c><00:40:35.760><c> which</c><00:40:36.690><c> means</c><00:40:36.960><c> of</c><00:40:37.200><c> course</c><00:40:37.440><c> if</c><00:40:37.650><c> it's</c><00:40:37.800><c> in</c>

00:40:37.940 --> 00:40:37.950 align:start position:0%
be 0 which means of course if it's in
 

00:40:37.950 --> 00:40:39.860 align:start position:0%
be 0 which means of course if it's in
variate<00:40:38.340><c> that</c><00:40:38.730><c> that</c><00:40:39.150><c> that's</c><00:40:39.390><c> redundant</c>

00:40:39.860 --> 00:40:39.870 align:start position:0%
variate that that that's redundant
 

00:40:39.870 --> 00:40:42.350 align:start position:0%
variate that that that's redundant
information<00:40:40.470><c> we</c><00:40:40.620><c> don't</c><00:40:40.800><c> need</c><00:40:40.920><c> that</c><00:40:41.130><c> so</c><00:40:42.000><c> that</c>

00:40:42.350 --> 00:40:42.360 align:start position:0%
information we don't need that so that
 

00:40:42.360 --> 00:40:45.860 align:start position:0%
information we don't need that so that
kind<00:40:42.630><c> of</c><00:40:42.750><c> expands</c><00:40:43.560><c> our</c><00:40:43.820><c> are</c><00:40:44.820><c> the</c><00:40:45.150><c> ability</c><00:40:45.660><c> of</c>

00:40:45.860 --> 00:40:45.870 align:start position:0%
kind of expands our are the ability of
 

00:40:45.870 --> 00:40:47.900 align:start position:0%
kind of expands our are the ability of
the<00:40:45.990><c> largest</c><00:40:46.440><c> amount</c><00:40:46.980><c> of</c><00:40:47.220><c> address</c><00:40:47.640><c> space</c><00:40:47.760><c> that</c>

00:40:47.900 --> 00:40:47.910 align:start position:0%
the largest amount of address space that
 

00:40:47.910 --> 00:40:52.130 align:start position:0%
the largest amount of address space that
we<00:40:48.690><c> can</c><00:40:48.870><c> reason</c><00:40:49.410><c> about</c><00:40:49.470><c> to</c><00:40:50.460><c> 8</c><00:40:50.880><c> times</c><00:40:51.300><c> what</c><00:40:52.020><c> it</c>

00:40:52.130 --> 00:40:52.140 align:start position:0%
we can reason about to 8 times what it
 

00:40:52.140 --> 00:40:54.110 align:start position:0%
we can reason about to 8 times what it
was<00:40:52.290><c> before</c><00:40:52.560><c> so</c><00:40:53.310><c> that</c><00:40:53.400><c> gives</c><00:40:53.550><c> us</c><00:40:53.670><c> actually</c><00:40:53.910><c> a</c>

00:40:54.110 --> 00:40:54.120 align:start position:0%
was before so that gives us actually a
 

00:40:54.120 --> 00:40:57.800 align:start position:0%
was before so that gives us actually a
32<00:40:54.750><c> gigabyte</c><00:40:55.460><c> chunk</c><00:40:56.460><c> of</c><00:40:56.610><c> space</c><00:40:56.790><c> that</c><00:40:57.540><c> that</c><00:40:57.690><c> we</c>

00:40:57.800 --> 00:40:57.810 align:start position:0%
32 gigabyte chunk of space that that we
 

00:40:57.810 --> 00:41:00.920 align:start position:0%
32 gigabyte chunk of space that that we
can<00:40:57.960><c> reference</c><00:40:58.140><c> with</c><00:40:58.740><c> just</c><00:40:59.070><c> 32</c><00:40:59.820><c> unique</c><00:41:00.540><c> beds</c>

00:41:00.920 --> 00:41:00.930 align:start position:0%
can reference with just 32 unique beds
 

00:41:00.930 --> 00:41:04.730 align:start position:0%
can reference with just 32 unique beds
and<00:41:01.430><c> so</c><00:41:02.430><c> we</c><00:41:03.060><c> just</c><00:41:03.300><c> kind</c><00:41:03.480><c> of</c><00:41:03.570><c> take</c><00:41:04.350><c> that</c><00:41:04.530><c> out</c>

00:41:04.730 --> 00:41:04.740 align:start position:0%
and so we just kind of take that out
 

00:41:04.740 --> 00:41:06.680 align:start position:0%
and so we just kind of take that out
then<00:41:04.980><c> you</c><00:41:05.070><c> know</c><00:41:05.220><c> the</c><00:41:05.430><c> kind</c><00:41:05.640><c> of</c><00:41:05.730><c> the</c><00:41:06.090><c> only</c><00:41:06.450><c> part</c>

00:41:06.680 --> 00:41:06.690 align:start position:0%
then you know the kind of the only part
 

00:41:06.690 --> 00:41:08.210 align:start position:0%
then you know the kind of the only part
that<00:41:06.720><c> matters</c><00:41:06.930><c> so</c><00:41:07.350><c> to</c><00:41:07.500><c> speak</c><00:41:07.800><c> and</c><00:41:07.980><c> this</c><00:41:08.070><c> is</c>

00:41:08.210 --> 00:41:08.220 align:start position:0%
that matters so to speak and this is
 

00:41:08.220 --> 00:41:10.820 align:start position:0%
that matters so to speak and this is
what<00:41:08.370><c> gets</c><00:41:08.490><c> stored</c><00:41:08.670><c> in</c><00:41:09.180><c> the</c><00:41:09.810><c> heap</c><00:41:09.990><c> and</c><00:41:10.170><c> then</c>

00:41:10.820 --> 00:41:10.830 align:start position:0%
what gets stored in the heap and then
 

00:41:10.830 --> 00:41:12.380 align:start position:0%
what gets stored in the heap and then
everything<00:41:11.220><c> else</c><00:41:11.370><c> we</c><00:41:11.580><c> sort</c><00:41:12.000><c> of</c><00:41:12.090><c> just</c><00:41:12.240><c> throw</c>

00:41:12.380 --> 00:41:12.390 align:start position:0%
everything else we sort of just throw
 

00:41:12.390 --> 00:41:15.080 align:start position:0%
everything else we sort of just throw
away<00:41:12.480><c> but</c><00:41:13.440><c> again</c><00:41:13.740><c> there's</c><00:41:14.310><c> there's</c><00:41:14.610><c> a</c><00:41:14.670><c> cost</c><00:41:14.970><c> to</c>

00:41:15.080 --> 00:41:15.090 align:start position:0%
away but again there's there's a cost to
 

00:41:15.090 --> 00:41:16.880 align:start position:0%
away but again there's there's a cost to
this<00:41:15.270><c> not</c><00:41:15.540><c> so</c><00:41:15.720><c> much</c><00:41:15.780><c> in</c><00:41:16.020><c> performance</c><00:41:16.590><c> at</c><00:41:16.710><c> run</c>

00:41:16.880 --> 00:41:16.890 align:start position:0%
this not so much in performance at run
 

00:41:16.890 --> 00:41:20.120 align:start position:0%
this not so much in performance at run
time<00:41:16.920><c> but</c><00:41:17.790><c> but</c><00:41:18.120><c> in</c><00:41:18.360><c> complexity</c><00:41:19.230><c> so</c><00:41:19.860><c> when</c><00:41:20.010><c> we</c>

00:41:20.120 --> 00:41:20.130 align:start position:0%
time but but in complexity so when we
 

00:41:20.130 --> 00:41:22.880 align:start position:0%
time but but in complexity so when we
compile<00:41:20.490><c> now</c><00:41:21.210><c> we</c><00:41:21.270><c> need</c><00:41:21.540><c> to</c><00:41:21.630><c> be</c><00:41:21.750><c> aware</c><00:41:21.840><c> that</c><00:41:22.050><c> not</c>

00:41:22.880 --> 00:41:22.890 align:start position:0%
compile now we need to be aware that not
 

00:41:22.890 --> 00:41:25.060 align:start position:0%
compile now we need to be aware that not
only<00:41:23.010><c> do</c><00:41:23.430><c> we</c><00:41:23.520><c> have</c><00:41:23.640><c> to</c><00:41:23.760><c> add</c><00:41:23.880><c> some</c><00:41:24.180><c> some</c><00:41:24.570><c> base</c>

00:41:25.060 --> 00:41:25.070 align:start position:0%
only do we have to add some some base
 

00:41:25.070 --> 00:41:28.190 align:start position:0%
only do we have to add some some base
address<00:41:26.070><c> where</c><00:41:26.550><c> the</c><00:41:26.670><c> heap</c><00:41:26.850><c> is</c><00:41:26.970><c> located</c><00:41:27.540><c> but</c><00:41:28.050><c> we</c>

00:41:28.190 --> 00:41:28.200 align:start position:0%
address where the heap is located but we
 

00:41:28.200 --> 00:41:33.830 align:start position:0%
address where the heap is located but we
also<00:41:28.350><c> have</c><00:41:28.680><c> to</c><00:41:29.090><c> shift</c><00:41:30.090><c> the</c><00:41:30.840><c> the</c><00:41:31.670><c> address</c><00:41:32.840><c> three</c>

00:41:33.830 --> 00:41:33.840 align:start position:0%
also have to shift the the address three
 

00:41:33.840 --> 00:41:36.230 align:start position:0%
also have to shift the the address three
three<00:41:34.350><c> digits</c><00:41:34.860><c> three</c><00:41:35.250><c> binary</c><00:41:35.460><c> digits</c><00:41:35.970><c> to</c><00:41:36.210><c> the</c>

00:41:36.230 --> 00:41:36.240 align:start position:0%
three digits three binary digits to the
 

00:41:36.240 --> 00:41:38.210 align:start position:0%
three digits three binary digits to the
left<00:41:36.450><c> or</c><00:41:36.780><c> right</c><00:41:36.840><c> depending</c><00:41:37.530><c> on</c><00:41:37.920><c> if</c><00:41:38.040><c> we're</c>

00:41:38.210 --> 00:41:38.220 align:start position:0%
left or right depending on if we're
 

00:41:38.220 --> 00:41:39.680 align:start position:0%
left or right depending on if we're
compressing<00:41:38.730><c> or</c><00:41:38.850><c> uncompressing</c><00:41:39.510><c> the</c>

00:41:39.680 --> 00:41:39.690 align:start position:0%
compressing or uncompressing the
 

00:41:39.690 --> 00:41:42.710 align:start position:0%
compressing or uncompressing the
reference<00:41:40.220><c> interestingly</c><00:41:41.220><c> enough</c><00:41:41.790><c> this</c><00:41:42.660><c> has</c>

00:41:42.710 --> 00:41:42.720 align:start position:0%
reference interestingly enough this has
 

00:41:42.720 --> 00:41:46.310 align:start position:0%
reference interestingly enough this has
this<00:41:43.500><c> shift</c><00:41:44.010><c> is</c><00:41:44.190><c> basically</c><00:41:44.550><c> free</c><00:41:44.940><c> because</c><00:41:45.780><c> the</c>

00:41:46.310 --> 00:41:46.320 align:start position:0%
this shift is basically free because the
 

00:41:46.320 --> 00:41:49.880 align:start position:0%
this shift is basically free because the
the<00:41:46.770><c> CPUs</c><00:41:47.190><c> we</c><00:41:47.370><c> support</c><00:41:47.930><c> allow</c><00:41:48.930><c> for</c><00:41:49.530><c> move</c>

00:41:49.880 --> 00:41:49.890 align:start position:0%
the CPUs we support allow for move
 

00:41:49.890 --> 00:41:51.460 align:start position:0%
the CPUs we support allow for move
instructions<00:41:50.520><c> there's</c><00:41:50.790><c> a</c><00:41:50.850><c> scaling</c><00:41:51.270><c> factor</c>

00:41:51.460 --> 00:41:51.470 align:start position:0%
instructions there's a scaling factor
 

00:41:51.470 --> 00:41:53.990 align:start position:0%
instructions there's a scaling factor
that's<00:41:52.470><c> built</c><00:41:52.710><c> into</c><00:41:52.890><c> the</c><00:41:53.070><c> instruction</c><00:41:53.610><c> so</c><00:41:53.970><c> we</c>

00:41:53.990 --> 00:41:54.000 align:start position:0%
that's built into the instruction so we
 

00:41:54.000 --> 00:41:58.760 align:start position:0%
that's built into the instruction so we
can<00:41:54.330><c> go</c><00:41:54.510><c> up</c><00:41:54.690><c> to</c><00:41:55.820><c> we</c><00:41:56.820><c> can</c><00:41:57.150><c> multiply</c><00:41:57.390><c> by</c><00:41:58.380><c> up</c><00:41:58.710><c> to</c>

00:41:58.760 --> 00:41:58.770 align:start position:0%
can go up to we can multiply by up to
 

00:41:58.770 --> 00:42:01.640 align:start position:0%
can go up to we can multiply by up to
eight<00:41:59.420><c> when</c><00:42:00.420><c> we</c><00:42:00.570><c> do</c><00:42:00.750><c> these</c><00:42:00.930><c> moves</c><00:42:01.230><c> and</c><00:42:01.500><c> so</c>

00:42:01.640 --> 00:42:01.650 align:start position:0%
eight when we do these moves and so
 

00:42:01.650 --> 00:42:04.370 align:start position:0%
eight when we do these moves and so
there<00:42:02.130><c> isn't</c><00:42:02.280><c> actually</c><00:42:02.850><c> a</c><00:42:02.880><c> shift</c><00:42:03.690><c> instruction</c>

00:42:04.370 --> 00:42:04.380 align:start position:0%
there isn't actually a shift instruction
 

00:42:04.380 --> 00:42:07.490 align:start position:0%
there isn't actually a shift instruction
that's<00:42:04.560><c> added</c><00:42:04.920><c> to</c><00:42:05.330><c> the</c><00:42:06.330><c> outputted</c><00:42:06.780><c> code</c><00:42:07.020><c> it's</c>

00:42:07.490 --> 00:42:07.500 align:start position:0%
that's added to the outputted code it's
 

00:42:07.500 --> 00:42:09.230 align:start position:0%
that's added to the outputted code it's
all<00:42:07.740><c> compact</c><00:42:08.280><c> and</c><00:42:08.580><c> in</c><00:42:08.760><c> the</c><00:42:08.880><c> same</c><00:42:09.060><c> move</c>

00:42:09.230 --> 00:42:09.240 align:start position:0%
all compact and in the same move
 

00:42:09.240 --> 00:42:11.810 align:start position:0%
all compact and in the same move
instruction<00:42:09.840><c> so</c><00:42:10.140><c> we</c><00:42:10.260><c> get</c><00:42:10.620><c> this</c><00:42:10.740><c> for</c><00:42:10.950><c> free</c><00:42:11.160><c> but</c>

00:42:11.810 --> 00:42:11.820 align:start position:0%
instruction so we get this for free but
 

00:42:11.820 --> 00:42:14.060 align:start position:0%
instruction so we get this for free but
the<00:42:12.270><c> äôt</c><00:42:12.780><c> compiler</c><00:42:13.170><c> has</c><00:42:13.350><c> to</c><00:42:13.500><c> be</c><00:42:13.590><c> aware</c><00:42:13.800><c> of</c><00:42:13.860><c> it</c>

00:42:14.060 --> 00:42:14.070 align:start position:0%
the äôt compiler has to be aware of it
 

00:42:14.070 --> 00:42:14.579 align:start position:0%
the äôt compiler has to be aware of it
it<00:42:14.160><c> has</c><00:42:14.280><c> to</c>

00:42:14.579 --> 00:42:14.589 align:start position:0%
it has to
 

00:42:14.589 --> 00:42:16.920 align:start position:0%
it has to
to<00:42:15.400><c> do</c><00:42:15.549><c> this</c><00:42:15.729><c> and</c><00:42:16.119><c> this</c><00:42:16.269><c> is</c><00:42:16.420><c> why</c><00:42:16.539><c> we</c><00:42:16.719><c> have</c><00:42:16.809><c> to</c>

00:42:16.920 --> 00:42:16.930 align:start position:0%
to do this and this is why we have to
 

00:42:16.930 --> 00:42:19.469 align:start position:0%
to do this and this is why we have to
match<00:42:17.049><c> our</c><00:42:17.319><c> or</c><00:42:17.529><c> VM</c><00:42:17.769><c> options</c><00:42:18.190><c> the</c><00:42:19.119><c> other</c><00:42:19.269><c> thing</c>

00:42:19.469 --> 00:42:19.479 align:start position:0%
match our or VM options the other thing
 

00:42:19.479 --> 00:42:21.989 align:start position:0%
match our or VM options the other thing
is<00:42:19.630><c> is</c><00:42:19.839><c> garbage</c><00:42:20.469><c> collection</c><00:42:20.920><c> strategy</c><00:42:21.460><c> now</c>

00:42:21.989 --> 00:42:21.999 align:start position:0%
is is garbage collection strategy now
 

00:42:21.999 --> 00:42:23.999 align:start position:0%
is is garbage collection strategy now
garbage<00:42:22.599><c> collection</c><00:42:22.989><c> is</c><00:42:23.109><c> a</c><00:42:23.140><c> huge</c><00:42:23.380><c> topic</c><00:42:23.619><c> with</c>

00:42:23.999 --> 00:42:24.009 align:start position:0%
garbage collection is a huge topic with
 

00:42:24.009 --> 00:42:26.700 align:start position:0%
garbage collection is a huge topic with
a<00:42:24.339><c> bunch</c><00:42:24.849><c> of</c><00:42:24.940><c> very</c><00:42:25.119><c> complicated</c><00:42:25.599><c> details</c><00:42:25.809><c> very</c>

00:42:26.700 --> 00:42:26.710 align:start position:0%
a bunch of very complicated details very
 

00:42:26.710 --> 00:42:28.440 align:start position:0%
a bunch of very complicated details very
you<00:42:27.039><c> know</c><00:42:27.069><c> none</c><00:42:27.819><c> of</c><00:42:27.910><c> which</c><00:42:27.999><c> we</c><00:42:28.150><c> really</c><00:42:28.329><c> have</c>

00:42:28.440 --> 00:42:28.450 align:start position:0%
you know none of which we really have
 

00:42:28.450 --> 00:42:30.180 align:start position:0%
you know none of which we really have
the<00:42:28.569><c> time</c><00:42:28.690><c> to</c><00:42:28.839><c> cover</c><00:42:28.989><c> but</c><00:42:29.710><c> just</c><00:42:29.890><c> to</c><00:42:29.950><c> give</c><00:42:30.039><c> one</c>

00:42:30.180 --> 00:42:30.190 align:start position:0%
the time to cover but just to give one
 

00:42:30.190 --> 00:42:32.039 align:start position:0%
the time to cover but just to give one
example<00:42:30.219><c> of</c><00:42:30.849><c> why</c><00:42:30.999><c> you</c><00:42:31.329><c> need</c><00:42:31.569><c> to</c><00:42:31.660><c> be</c><00:42:31.779><c> aware</c><00:42:31.989><c> of</c>

00:42:32.039 --> 00:42:32.049 align:start position:0%
example of why you need to be aware of
 

00:42:32.049 --> 00:42:33.690 align:start position:0%
example of why you need to be aware of
what<00:42:32.469><c> garbage</c><00:42:32.950><c> collector</c><00:42:33.309><c> is</c><00:42:33.339><c> going</c><00:42:33.460><c> to</c><00:42:33.609><c> be</c>

00:42:33.690 --> 00:42:33.700 align:start position:0%
what garbage collector is going to be
 

00:42:33.700 --> 00:42:37.200 align:start position:0%
what garbage collector is going to be
used<00:42:33.940><c> when</c><00:42:34.569><c> you</c><00:42:34.779><c> you</c><00:42:35.109><c> when</c><00:42:35.859><c> you</c><00:42:36.279><c> are</c><00:42:36.430><c> compiling</c>

00:42:37.200 --> 00:42:37.210 align:start position:0%
used when you you when you are compiling
 

00:42:37.210 --> 00:42:38.609 align:start position:0%
used when you you when you are compiling
for<00:42:37.599><c> it</c><00:42:37.749><c> whether</c><00:42:37.989><c> it's</c><00:42:38.140><c> chicken</c><00:42:38.319><c> pot</c>

00:42:38.609 --> 00:42:38.619 align:start position:0%
for it whether it's chicken pot
 

00:42:38.619 --> 00:42:41.400 align:start position:0%
for it whether it's chicken pot
compilation<00:42:39.160><c> or</c><00:42:39.339><c> IOT</c><00:42:39.579><c> compilation</c><00:42:40.359><c> is</c><00:42:40.569><c> the</c>

00:42:41.400 --> 00:42:41.410 align:start position:0%
compilation or IOT compilation is the
 

00:42:41.410 --> 00:42:45.150 align:start position:0%
compilation or IOT compilation is the
the<00:42:42.150><c> necessity</c><00:42:43.150><c> of</c><00:42:43.180><c> right</c><00:42:43.539><c> barriers</c><00:42:43.989><c> so</c><00:42:44.739><c> right</c>

00:42:45.150 --> 00:42:45.160 align:start position:0%
the necessity of right barriers so right
 

00:42:45.160 --> 00:42:47.430 align:start position:0%
the necessity of right barriers so right
barriers<00:42:45.640><c> are</c><00:42:45.969><c> basically</c><00:42:46.509><c> a</c><00:42:46.539><c> way</c><00:42:46.809><c> that</c><00:42:47.109><c> we</c><00:42:47.229><c> can</c>

00:42:47.430 --> 00:42:47.440 align:start position:0%
barriers are basically a way that we can
 

00:42:47.440 --> 00:42:50.849 align:start position:0%
barriers are basically a way that we can
use<00:42:47.710><c> to</c><00:42:47.979><c> avoid</c><00:42:48.460><c> having</c><00:42:48.700><c> to</c><00:42:48.910><c> do</c><00:42:49.630><c> mark</c><00:42:49.989><c> for</c><00:42:50.769><c> the</c>

00:42:50.849 --> 00:42:50.859 align:start position:0%
use to avoid having to do mark for the
 

00:42:50.859 --> 00:42:52.680 align:start position:0%
use to avoid having to do mark for the
entire<00:42:51.219><c> heap</c><00:42:51.549><c> and</c><00:42:52.059><c> when</c><00:42:52.150><c> I</c><00:42:52.180><c> say</c><00:42:52.359><c> mark</c><00:42:52.569><c> I'm</c>

00:42:52.680 --> 00:42:52.690 align:start position:0%
entire heap and when I say mark I'm
 

00:42:52.690 --> 00:42:53.849 align:start position:0%
entire heap and when I say mark I'm
talking<00:42:52.900><c> about</c><00:42:52.930><c> mark</c><00:42:53.229><c> as</c><00:42:53.349><c> in</c><00:42:53.499><c> mark-and-sweep</c>

00:42:53.849 --> 00:42:53.859 align:start position:0%
talking about mark as in mark-and-sweep
 

00:42:53.859 --> 00:42:56.099 align:start position:0%
talking about mark as in mark-and-sweep
woman<00:42:54.519><c> mm</c><00:42:55.180><c> we</c><00:42:55.420><c> want</c><00:42:55.599><c> to</c><00:42:55.660><c> look</c><00:42:55.749><c> at</c><00:42:55.869><c> the</c><00:42:55.960><c> heap</c>

00:42:56.099 --> 00:42:56.109 align:start position:0%
woman mm we want to look at the heap
 

00:42:56.109 --> 00:42:59.400 align:start position:0%
woman mm we want to look at the heap
only<00:42:56.349><c> I</c><00:42:56.380><c> want</c><00:42:56.829><c> to</c><00:42:56.890><c> identify</c><00:42:57.329><c> which</c><00:42:58.410><c> objects</c>

00:42:59.400 --> 00:42:59.410 align:start position:0%
only I want to identify which objects
 

00:42:59.410 --> 00:43:02.089 align:start position:0%
only I want to identify which objects
are<00:42:59.559><c> live</c><00:43:00.219><c> versus</c><00:43:00.880><c> which</c><00:43:01.059><c> ones</c><00:43:01.269><c> are</c><00:43:01.420><c> dead</c>

00:43:02.089 --> 00:43:02.099 align:start position:0%
are live versus which ones are dead
 

00:43:02.099 --> 00:43:04.559 align:start position:0%
are live versus which ones are dead
obviously<00:43:03.099><c> for</c><00:43:03.849><c> a</c><00:43:03.880><c> very</c><00:43:04.059><c> long</c><00:43:04.210><c> time</c><00:43:04.420><c> we've</c>

00:43:04.559 --> 00:43:04.569 align:start position:0%
obviously for a very long time we've
 

00:43:04.569 --> 00:43:06.150 align:start position:0%
obviously for a very long time we've
used<00:43:04.749><c> a</c><00:43:04.900><c> technique</c><00:43:05.349><c> called</c><00:43:05.380><c> generational</c>

00:43:06.150 --> 00:43:06.160 align:start position:0%
used a technique called generational
 

00:43:06.160 --> 00:43:07.709 align:start position:0%
used a technique called generational
garbage<00:43:06.309><c> collection</c><00:43:06.519><c> based</c><00:43:07.180><c> off</c><00:43:07.390><c> of</c><00:43:07.420><c> the</c>

00:43:07.709 --> 00:43:07.719 align:start position:0%
garbage collection based off of the
 

00:43:07.719 --> 00:43:09.930 align:start position:0%
garbage collection based off of the
generational<00:43:08.259><c> hypothesis</c><00:43:08.950><c> and</c><00:43:09.249><c> that's</c><00:43:09.729><c> where</c>

00:43:09.930 --> 00:43:09.940 align:start position:0%
generational hypothesis and that's where
 

00:43:09.940 --> 00:43:12.420 align:start position:0%
generational hypothesis and that's where
we<00:43:10.029><c> divide</c><00:43:10.329><c> the</c><00:43:10.539><c> heap</c><00:43:10.749><c> into</c><00:43:11.019><c> an</c><00:43:11.859><c> area</c><00:43:12.160><c> where</c>

00:43:12.420 --> 00:43:12.430 align:start position:0%
we divide the heap into an area where
 

00:43:12.430 --> 00:43:15.359 align:start position:0%
we divide the heap into an area where
it's<00:43:12.880><c> young</c><00:43:13.180><c> and</c><00:43:13.450><c> then</c><00:43:13.900><c> there's</c><00:43:14.109><c> old</c><00:43:14.319><c> and</c><00:43:14.589><c> I'm</c>

00:43:15.359 --> 00:43:15.369 align:start position:0%
it's young and then there's old and I'm
 

00:43:15.369 --> 00:43:17.370 align:start position:0%
it's young and then there's old and I'm
deliberately<00:43:16.119><c> simplifying</c><00:43:17.079><c> this</c>

00:43:17.370 --> 00:43:17.380 align:start position:0%
deliberately simplifying this
 

00:43:17.380 --> 00:43:19.589 align:start position:0%
deliberately simplifying this
dramatically<00:43:17.920><c> obviously</c><00:43:18.910><c> g1</c><00:43:19.239><c> looks</c><00:43:19.450><c> nothing</c>

00:43:19.589 --> 00:43:19.599 align:start position:0%
dramatically obviously g1 looks nothing
 

00:43:19.599 --> 00:43:22.200 align:start position:0%
dramatically obviously g1 looks nothing
like<00:43:19.749><c> this</c><00:43:20.049><c> and</c><00:43:20.349><c> not</c><00:43:20.680><c> even</c><00:43:20.950><c> CMS</c><00:43:21.400><c> or</c><00:43:21.609><c> anything</c>

00:43:22.200 --> 00:43:22.210 align:start position:0%
like this and not even CMS or anything
 

00:43:22.210 --> 00:43:23.910 align:start position:0%
like this and not even CMS or anything
you<00:43:22.450><c> know</c><00:43:22.569><c> there's</c><00:43:22.749><c> scavenger</c><00:43:23.229><c> spaces</c><00:43:23.710><c> and</c>

00:43:23.910 --> 00:43:23.920 align:start position:0%
you know there's scavenger spaces and
 

00:43:23.920 --> 00:43:25.650 align:start position:0%
you know there's scavenger spaces and
and<00:43:24.069><c> the</c><00:43:24.519><c> role</c><00:43:24.670><c> implementation</c><00:43:25.239><c> is</c><00:43:25.329><c> much</c><00:43:25.479><c> more</c>

00:43:25.650 --> 00:43:25.660 align:start position:0%
and the role implementation is much more
 

00:43:25.660 --> 00:43:27.809 align:start position:0%
and the role implementation is much more
complicated<00:43:25.930><c> but</c><00:43:26.349><c> in</c><00:43:26.529><c> general</c><00:43:27.190><c> sometimes</c><00:43:27.549><c> we</c>

00:43:27.809 --> 00:43:27.819 align:start position:0%
complicated but in general sometimes we
 

00:43:27.819 --> 00:43:29.279 align:start position:0%
complicated but in general sometimes we
have<00:43:27.940><c> parts</c><00:43:28.299><c> of</c><00:43:28.420><c> the</c><00:43:28.479><c> heap</c><00:43:28.660><c> that</c><00:43:28.690><c> we</c><00:43:29.049><c> care</c>

00:43:29.279 --> 00:43:29.289 align:start position:0%
have parts of the heap that we care
 

00:43:29.289 --> 00:43:32.249 align:start position:0%
have parts of the heap that we care
about<00:43:29.410><c> that</c><00:43:29.859><c> we</c><00:43:30.579><c> want</c><00:43:30.789><c> to</c><00:43:30.880><c> collect</c><00:43:31.119><c> and</c><00:43:31.390><c> you</c>

00:43:32.249 --> 00:43:32.259 align:start position:0%
about that we want to collect and you
 

00:43:32.259 --> 00:43:33.870 align:start position:0%
about that we want to collect and you
know<00:43:32.380><c> I'm</c><00:43:32.469><c> very</c><00:43:32.650><c> frequent</c><00:43:33.069><c> we</c><00:43:33.579><c> have</c><00:43:33.670><c> other</c>

00:43:33.870 --> 00:43:33.880 align:start position:0%
know I'm very frequent we have other
 

00:43:33.880 --> 00:43:35.430 align:start position:0%
know I'm very frequent we have other
parts<00:43:34.180><c> of</c><00:43:34.239><c> the</c><00:43:34.329><c> heap</c><00:43:34.539><c> that</c><00:43:34.569><c> we</c><00:43:35.079><c> don't</c>

00:43:35.430 --> 00:43:35.440 align:start position:0%
parts of the heap that we don't
 

00:43:35.440 --> 00:43:37.109 align:start position:0%
parts of the heap that we don't
necessarily<00:43:35.739><c> want</c><00:43:36.190><c> to</c><00:43:36.369><c> have</c><00:43:36.460><c> to</c><00:43:36.640><c> collect</c><00:43:36.910><c> or</c>

00:43:37.109 --> 00:43:37.119 align:start position:0%
necessarily want to have to collect or
 

00:43:37.119 --> 00:43:40.349 align:start position:0%
necessarily want to have to collect or
mark<00:43:37.359><c> very</c><00:43:38.140><c> frequently</c><00:43:38.650><c> and</c><00:43:38.920><c> so</c><00:43:39.430><c> we</c><00:43:39.999><c> have</c><00:43:40.119><c> we</c>

00:43:40.349 --> 00:43:40.359 align:start position:0%
mark very frequently and so we have we
 

00:43:40.359 --> 00:43:41.609 align:start position:0%
mark very frequently and so we have we
have<00:43:40.390><c> some</c><00:43:40.630><c> division</c><00:43:40.960><c> we</c><00:43:41.079><c> want</c><00:43:41.259><c> to</c><00:43:41.319><c> handle</c>

00:43:41.609 --> 00:43:41.619 align:start position:0%
have some division we want to handle
 

00:43:41.619 --> 00:43:44.729 align:start position:0%
have some division we want to handle
them<00:43:41.769><c> differently</c><00:43:42.130><c> so</c><00:43:42.969><c> if</c><00:43:43.269><c> I</c><00:43:43.390><c> come</c><00:43:43.599><c> in</c><00:43:43.809><c> and</c><00:43:43.989><c> I'm</c>

00:43:44.729 --> 00:43:44.739 align:start position:0%
them differently so if I come in and I'm
 

00:43:44.739 --> 00:43:46.499 align:start position:0%
them differently so if I come in and I'm
trying<00:43:45.160><c> to</c><00:43:45.279><c> do</c><00:43:45.400><c> some</c><00:43:45.609><c> sort</c><00:43:45.819><c> of</c><00:43:45.880><c> concurrent</c>

00:43:46.499 --> 00:43:46.509 align:start position:0%
trying to do some sort of concurrent
 

00:43:46.509 --> 00:43:49.589 align:start position:0%
trying to do some sort of concurrent
collection<00:43:46.779><c> for</c><00:43:47.259><c> example</c><00:43:47.319><c> and</c><00:43:47.829><c> I'm</c><00:43:48.700><c> you</c><00:43:49.569><c> know</c>

00:43:49.589 --> 00:43:49.599 align:start position:0%
collection for example and I'm you know
 

00:43:49.599 --> 00:43:51.870 align:start position:0%
collection for example and I'm you know
an<00:43:50.109><c> executioner</c><00:43:50.769><c> mutator</c><00:43:51.130><c> thread</c><00:43:51.430><c> comes</c><00:43:51.700><c> in</c>

00:43:51.870 --> 00:43:51.880 align:start position:0%
an executioner mutator thread comes in
 

00:43:51.880 --> 00:43:53.519 align:start position:0%
an executioner mutator thread comes in
and<00:43:52.059><c> creates</c><00:43:52.299><c> a</c><00:43:52.359><c> new</c><00:43:52.450><c> object</c><00:43:52.479><c> and</c><00:43:53.019><c> then</c><00:43:53.319><c> has</c><00:43:53.499><c> a</c>

00:43:53.519 --> 00:43:53.529 align:start position:0%
and creates a new object and then has a
 

00:43:53.529 --> 00:43:55.979 align:start position:0%
and creates a new object and then has a
and<00:43:53.920><c> then</c><00:43:54.190><c> modifies</c><00:43:54.910><c> some</c><00:43:55.150><c> field</c><00:43:55.450><c> of</c><00:43:55.749><c> some</c>

00:43:55.979 --> 00:43:55.989 align:start position:0%
and then modifies some field of some
 

00:43:55.989 --> 00:43:58.229 align:start position:0%
and then modifies some field of some
other<00:43:56.109><c> preexisting</c><00:43:56.890><c> object</c><00:43:57.249><c> on</c><00:43:57.489><c> the</c><00:43:57.759><c> heap</c><00:43:57.789><c> to</c>

00:43:58.229 --> 00:43:58.239 align:start position:0%
other preexisting object on the heap to
 

00:43:58.239 --> 00:44:00.059 align:start position:0%
other preexisting object on the heap to
point<00:43:58.989><c> to</c><00:43:59.079><c> this</c><00:43:59.170><c> new</c><00:43:59.349><c> object</c>

00:44:00.059 --> 00:44:00.069 align:start position:0%
point to this new object
 

00:44:00.069 --> 00:44:02.039 align:start position:0%
point to this new object
well<00:44:00.579><c> this</c><00:44:01.119><c> is</c><00:44:01.269><c> okay</c><00:44:01.599><c> and</c><00:44:01.719><c> we</c><00:44:01.779><c> don't</c><00:44:01.930><c> really</c>

00:44:02.039 --> 00:44:02.049 align:start position:0%
well this is okay and we don't really
 

00:44:02.049 --> 00:44:03.900 align:start position:0%
well this is okay and we don't really
need<00:44:02.319><c> to</c><00:44:02.380><c> keep</c><00:44:02.589><c> track</c><00:44:02.799><c> of</c><00:44:02.979><c> this</c><00:44:03.069><c> because</c><00:44:03.519><c> if</c>

00:44:03.900 --> 00:44:03.910 align:start position:0%
need to keep track of this because if
 

00:44:03.910 --> 00:44:05.640 align:start position:0%
need to keep track of this because if
this<00:44:04.119><c> is</c><00:44:04.269><c> the</c><00:44:04.479><c> the</c><00:44:04.690><c> young</c><00:44:04.900><c> space</c><00:44:05.200><c> of</c><00:44:05.410><c> a</c><00:44:05.499><c> new</c>

00:44:05.640 --> 00:44:05.650 align:start position:0%
this is the the young space of a new
 

00:44:05.650 --> 00:44:07.380 align:start position:0%
this is the the young space of a new
space<00:44:05.920><c> of</c><00:44:05.950><c> the</c><00:44:06.219><c> nursery</c><00:44:06.670><c> or</c><00:44:06.819><c> whatever</c><00:44:07.150><c> it</c><00:44:07.269><c> is</c>

00:44:07.380 --> 00:44:07.390 align:start position:0%
space of the nursery or whatever it is
 

00:44:07.390 --> 00:44:09.089 align:start position:0%
space of the nursery or whatever it is
in<00:44:07.599><c> the</c><00:44:07.930><c> actual</c><00:44:08.200><c> garbage</c><00:44:08.349><c> collector</c><00:44:08.890><c> we're</c>

00:44:09.089 --> 00:44:09.099 align:start position:0%
in the actual garbage collector we're
 

00:44:09.099 --> 00:44:11.279 align:start position:0%
in the actual garbage collector we're
using<00:44:09.279><c> we're</c><00:44:10.269><c> gonna</c><00:44:10.390><c> find</c><00:44:10.660><c> this</c><00:44:10.749><c> when</c><00:44:10.960><c> we</c><00:44:11.049><c> mark</c>

00:44:11.279 --> 00:44:11.289 align:start position:0%
using we're gonna find this when we mark
 

00:44:11.289 --> 00:44:14.309 align:start position:0%
using we're gonna find this when we mark
this<00:44:11.440><c> area</c><00:44:11.799><c> so</c><00:44:12.339><c> this</c><00:44:13.029><c> is</c><00:44:13.210><c> a</c><00:44:13.239><c> this</c><00:44:13.660><c> is</c><00:44:13.719><c> actually</c>

00:44:14.309 --> 00:44:14.319 align:start position:0%
this area so this is a this is actually
 

00:44:14.319 --> 00:44:16.859 align:start position:0%
this area so this is a this is actually
you<00:44:15.009><c> know</c><00:44:15.130><c> fine</c><00:44:15.339><c> in</c><00:44:15.519><c> and</c><00:44:15.640><c> of</c><00:44:15.729><c> itself</c><00:44:15.999><c> but</c><00:44:16.719><c> what</c>

00:44:16.859 --> 00:44:16.869 align:start position:0%
you know fine in and of itself but what
 

00:44:16.869 --> 00:44:18.660 align:start position:0%
you know fine in and of itself but what
if<00:44:16.960><c> we</c><00:44:17.049><c> have</c><00:44:17.170><c> something</c><00:44:17.380><c> in</c><00:44:17.619><c> the</c><00:44:17.769><c> old</c><00:44:17.799><c> space</c><00:44:18.339><c> or</c>

00:44:18.660 --> 00:44:18.670 align:start position:0%
if we have something in the old space or
 

00:44:18.670 --> 00:44:21.239 align:start position:0%
if we have something in the old space or
you<00:44:19.210><c> know</c><00:44:19.299><c> whatever</c><00:44:19.930><c> region</c><00:44:20.259><c> that</c><00:44:20.680><c> we</c><00:44:21.009><c> don't</c>

00:44:21.239 --> 00:44:21.249 align:start position:0%
you know whatever region that we don't
 

00:44:21.249 --> 00:44:22.890 align:start position:0%
you know whatever region that we don't
want<00:44:21.430><c> to</c><00:44:21.519><c> have</c><00:44:21.640><c> to</c><00:44:21.759><c> mark</c><00:44:21.969><c> you</c><00:44:22.210><c> know</c><00:44:22.420><c> this</c><00:44:22.599><c> is</c><00:44:22.719><c> at</c>

00:44:22.890 --> 00:44:22.900 align:start position:0%
want to have to mark you know this is at
 

00:44:22.900 --> 00:44:24.329 align:start position:0%
want to have to mark you know this is at
the<00:44:23.200><c> part</c><00:44:23.410><c> of</c><00:44:23.499><c> the</c><00:44:23.559><c> heap</c><00:44:23.739><c> that</c><00:44:23.950><c> we</c><00:44:24.069><c> don't</c>

00:44:24.329 --> 00:44:24.339 align:start position:0%
the part of the heap that we don't
 

00:44:24.339 --> 00:44:27.120 align:start position:0%
the part of the heap that we don't
frequently<00:44:25.210><c> go</c><00:44:25.869><c> in</c><00:44:26.049><c> and</c><00:44:26.229><c> try</c><00:44:26.829><c> and</c><00:44:26.890><c> collect</c>

00:44:27.120 --> 00:44:27.130 align:start position:0%
frequently go in and try and collect
 

00:44:27.130 --> 00:44:28.559 align:start position:0%
frequently go in and try and collect
well<00:44:27.759><c> if</c>

00:44:28.559 --> 00:44:28.569 align:start position:0%
well if
 

00:44:28.569 --> 00:44:31.169 align:start position:0%
well if
the<00:44:28.660><c> code</c><00:44:28.900><c> modifies</c><00:44:29.559><c> an</c><00:44:29.979><c> address</c><00:44:30.489><c> pointer</c><00:44:30.880><c> or</c>

00:44:31.169 --> 00:44:31.179 align:start position:0%
the code modifies an address pointer or
 

00:44:31.179 --> 00:44:34.769 align:start position:0%
the code modifies an address pointer or
an<00:44:31.809><c> OOP</c><00:44:31.959><c> that's</c><00:44:32.650><c> here</c><00:44:33.339><c> in</c><00:44:33.549><c> the</c><00:44:33.999><c> non</c><00:44:34.179><c> collected</c>

00:44:34.769 --> 00:44:34.779 align:start position:0%
an OOP that's here in the non collected
 

00:44:34.779 --> 00:44:35.999 align:start position:0%
an OOP that's here in the non collected
the<00:44:35.019><c> the</c><00:44:35.199><c> region</c><00:44:35.499><c> we're</c><00:44:35.650><c> not</c><00:44:35.769><c> going</c><00:44:35.979><c> to</c>

00:44:35.999 --> 00:44:36.009 align:start position:0%
the the region we're not going to
 

00:44:36.009 --> 00:44:38.729 align:start position:0%
the the region we're not going to
collect<00:44:36.609><c> next</c><00:44:37.239><c> we</c><00:44:38.019><c> need</c><00:44:38.169><c> to</c><00:44:38.259><c> keep</c><00:44:38.349><c> track</c><00:44:38.589><c> of</c>

00:44:38.729 --> 00:44:38.739 align:start position:0%
collect next we need to keep track of
 

00:44:38.739 --> 00:44:40.229 align:start position:0%
collect next we need to keep track of
this<00:44:38.829><c> somehow</c><00:44:39.459><c> we</c><00:44:39.519><c> need</c><00:44:39.729><c> to</c><00:44:39.789><c> do</c><00:44:39.969><c> bookkeeping</c>

00:44:40.229 --> 00:44:40.239 align:start position:0%
this somehow we need to do bookkeeping
 

00:44:40.239 --> 00:44:43.079 align:start position:0%
this somehow we need to do bookkeeping
and<00:44:40.929><c> so</c><00:44:41.919><c> what</c><00:44:42.369><c> we</c><00:44:42.459><c> do</c><00:44:42.579><c> is</c><00:44:42.669><c> we</c><00:44:42.789><c> have</c><00:44:42.880><c> something</c>

00:44:43.079 --> 00:44:43.089 align:start position:0%
and so what we do is we have something
 

00:44:43.089 --> 00:44:44.999 align:start position:0%
and so what we do is we have something
called<00:44:43.239><c> a</c><00:44:43.359><c> card</c><00:44:43.599><c> table</c><00:44:43.779><c> and</c><00:44:44.199><c> a</c><00:44:44.349><c> card</c><00:44:44.589><c> table</c><00:44:44.769><c> is</c>

00:44:44.999 --> 00:44:45.009 align:start position:0%
called a card table and a card table is
 

00:44:45.009 --> 00:44:47.880 align:start position:0%
called a card table and a card table is
basically<00:44:45.579><c> the</c><00:44:46.449><c> data</c><00:44:46.569><c> structure</c><00:44:47.109><c> it's</c><00:44:47.559><c> used</c>

00:44:47.880 --> 00:44:47.890 align:start position:0%
basically the data structure it's used
 

00:44:47.890 --> 00:44:49.949 align:start position:0%
basically the data structure it's used
for<00:44:48.189><c> our</c><00:44:48.609><c> write</c><00:44:48.819><c> barriers</c><00:44:49.239><c> so</c><00:44:49.660><c> what</c><00:44:49.809><c> is</c><00:44:49.900><c> the</c>

00:44:49.949 --> 00:44:49.959 align:start position:0%
for our write barriers so what is the
 

00:44:49.959 --> 00:44:51.499 align:start position:0%
for our write barriers so what is the
write<00:44:50.109><c> barrier</c><00:44:50.410><c> a</c><00:44:50.469><c> write</c><00:44:50.679><c> barrier</c><00:44:51.069><c> is</c>

00:44:51.499 --> 00:44:51.509 align:start position:0%
write barrier a write barrier is
 

00:44:51.509 --> 00:44:54.239 align:start position:0%
write barrier a write barrier is
additional<00:44:52.509><c> code</c><00:44:52.779><c> that</c><00:44:53.289><c> we</c><00:44:53.439><c> admit</c><00:44:53.739><c> when</c><00:44:54.130><c> we</c>

00:44:54.239 --> 00:44:54.249 align:start position:0%
additional code that we admit when we
 

00:44:54.249 --> 00:44:56.669 align:start position:0%
additional code that we admit when we
JIT<00:44:54.489><c> compile</c><00:44:54.880><c> or</c><00:44:55.839><c> that</c><00:44:56.049><c> the</c><00:44:56.140><c> interpreter</c>

00:44:56.669 --> 00:44:56.679 align:start position:0%
JIT compile or that the interpreter
 

00:44:56.679 --> 00:44:59.729 align:start position:0%
JIT compile or that the interpreter
executes<00:44:57.489><c> that</c><00:44:58.239><c> says</c><00:44:58.900><c> that</c><00:44:59.109><c> if</c><00:44:59.229><c> you</c><00:44:59.349><c> if</c><00:44:59.589><c> you</c>

00:44:59.729 --> 00:44:59.739 align:start position:0%
executes that says that if you if you
 

00:44:59.739 --> 00:45:01.620 align:start position:0%
executes that says that if you if you
write<00:44:59.979><c> to</c><00:45:00.519><c> something</c><00:45:00.910><c> on</c><00:45:01.029><c> the</c><00:45:01.059><c> heap</c><00:45:01.359><c> if</c><00:45:01.539><c> you</c>

00:45:01.620 --> 00:45:01.630 align:start position:0%
write to something on the heap if you
 

00:45:01.630 --> 00:45:03.509 align:start position:0%
write to something on the heap if you
change<00:45:01.929><c> an</c><00:45:02.049><c> address</c><00:45:02.469><c> anywhere</c><00:45:03.069><c> on</c><00:45:03.189><c> the</c><00:45:03.279><c> heap</c>

00:45:03.509 --> 00:45:03.519 align:start position:0%
change an address anywhere on the heap
 

00:45:03.519 --> 00:45:05.279 align:start position:0%
change an address anywhere on the heap
you<00:45:04.209><c> want</c><00:45:04.359><c> to</c><00:45:04.419><c> mark</c><00:45:04.599><c> a</c><00:45:04.660><c> little</c><00:45:04.869><c> bit</c><00:45:05.019><c> in</c><00:45:05.140><c> this</c>

00:45:05.279 --> 00:45:05.289 align:start position:0%
you want to mark a little bit in this
 

00:45:05.289 --> 00:45:07.499 align:start position:0%
you want to mark a little bit in this
card<00:45:05.529><c> table</c><00:45:05.859><c> somewhere</c><00:45:06.099><c> to</c><00:45:06.400><c> say</c><00:45:06.549><c> hey</c><00:45:06.849><c> there's</c>

00:45:07.499 --> 00:45:07.509 align:start position:0%
card table somewhere to say hey there's
 

00:45:07.509 --> 00:45:09.539 align:start position:0%
card table somewhere to say hey there's
a<00:45:07.569><c> change</c><00:45:07.869><c> here</c><00:45:08.169><c> so</c><00:45:08.349><c> each</c><00:45:08.859><c> little</c><00:45:09.189><c> chunk</c><00:45:09.249><c> of</c>

00:45:09.539 --> 00:45:09.549 align:start position:0%
a change here so each little chunk of
 

00:45:09.549 --> 00:45:11.549 align:start position:0%
a change here so each little chunk of
the<00:45:09.640><c> card</c><00:45:09.849><c> table</c><00:45:10.269><c> is</c><00:45:10.479><c> just</c><00:45:11.019><c> basically</c><00:45:11.319><c> like</c><00:45:11.499><c> a</c>

00:45:11.549 --> 00:45:11.559 align:start position:0%
the card table is just basically like a
 

00:45:11.559 --> 00:45:15.870 align:start position:0%
the card table is just basically like a
map<00:45:11.859><c> that</c><00:45:12.839><c> corresponds</c><00:45:13.839><c> to</c><00:45:14.189><c> as</c><00:45:15.189><c> it</c><00:45:15.429><c> happens</c><00:45:15.729><c> to</c>

00:45:15.870 --> 00:45:15.880 align:start position:0%
map that corresponds to as it happens to
 

00:45:15.880 --> 00:45:20.969 align:start position:0%
map that corresponds to as it happens to
be<00:45:16.529><c> 512</c><00:45:17.529><c> bytes</c><00:45:18.279><c> of</c><00:45:18.609><c> of</c><00:45:19.089><c> the</c><00:45:19.390><c> heap</c><00:45:19.569><c> and</c><00:45:19.869><c> so</c><00:45:20.619><c> if</c>

00:45:20.969 --> 00:45:20.979 align:start position:0%
be 512 bytes of of the heap and so if
 

00:45:20.979 --> 00:45:23.459 align:start position:0%
be 512 bytes of of the heap and so if
there's<00:45:21.640><c> a</c><00:45:21.869><c> since</c><00:45:22.869><c> each</c><00:45:22.989><c> of</c><00:45:23.079><c> these</c><00:45:23.169><c> can</c><00:45:23.410><c> be</c>

00:45:23.459 --> 00:45:23.469 align:start position:0%
there's a since each of these can be
 

00:45:23.469 --> 00:45:25.709 align:start position:0%
there's a since each of these can be
thought<00:45:23.619><c> of</c><00:45:23.650><c> as</c><00:45:23.829><c> a</c><00:45:23.859><c> flag</c><00:45:24.160><c> if</c><00:45:24.519><c> that</c><00:45:25.089><c> flag</c><00:45:25.239><c> is</c><00:45:25.479><c> set</c>

00:45:25.709 --> 00:45:25.719 align:start position:0%
thought of as a flag if that flag is set
 

00:45:25.719 --> 00:45:27.719 align:start position:0%
thought of as a flag if that flag is set
that<00:45:26.289><c> tells</c><00:45:26.559><c> the</c><00:45:26.739><c> garbage</c><00:45:27.009><c> collector</c><00:45:27.489><c> that</c>

00:45:27.719 --> 00:45:27.729 align:start position:0%
that tells the garbage collector that
 

00:45:27.729 --> 00:45:29.789 align:start position:0%
that tells the garbage collector that
hey<00:45:27.999><c> there</c><00:45:28.269><c> was</c><00:45:28.390><c> a</c><00:45:28.419><c> change</c><00:45:28.719><c> you</c><00:45:29.529><c> know</c><00:45:29.589><c> whatever</c>

00:45:29.789 --> 00:45:29.799 align:start position:0%
hey there was a change you know whatever
 

00:45:29.799 --> 00:45:32.130 align:start position:0%
hey there was a change you know whatever
chunk<00:45:30.160><c> of</c><00:45:30.249><c> the</c><00:45:30.309><c> heap</c><00:45:30.489><c> corresponds</c><00:45:31.269><c> to</c><00:45:31.329><c> this</c>

00:45:32.130 --> 00:45:32.140 align:start position:0%
chunk of the heap corresponds to this
 

00:45:32.140 --> 00:45:34.079 align:start position:0%
chunk of the heap corresponds to this
one<00:45:32.469><c> flag</c><00:45:32.769><c> there</c><00:45:33.400><c> was</c><00:45:33.519><c> a</c><00:45:33.549><c> change</c><00:45:33.819><c> there</c><00:45:34.059><c> and</c>

00:45:34.079 --> 00:45:34.089 align:start position:0%
one flag there was a change there and
 

00:45:34.089 --> 00:45:35.219 align:start position:0%
one flag there was a change there and
you<00:45:34.269><c> should</c><00:45:34.419><c> go</c><00:45:34.509><c> look</c><00:45:34.659><c> at</c><00:45:34.809><c> that</c>

00:45:35.219 --> 00:45:35.229 align:start position:0%
you should go look at that
 

00:45:35.229 --> 00:45:39.419 align:start position:0%
you should go look at that
so<00:45:35.979><c> now</c><00:45:36.130><c> when</c><00:45:36.759><c> we</c><00:45:36.939><c> modify</c><00:45:37.239><c> any</c><00:45:38.219><c> object</c><00:45:39.219><c> aught</c>

00:45:39.419 --> 00:45:39.429 align:start position:0%
so now when we modify any object aught
 

00:45:39.429 --> 00:45:42.419 align:start position:0%
so now when we modify any object aught
you<00:45:39.909><c> know</c><00:45:39.999><c> any</c><00:45:40.569><c> object</c><00:45:41.319><c> field</c><00:45:41.589><c> or</c><00:45:41.829><c> pointer</c>

00:45:42.419 --> 00:45:42.429 align:start position:0%
you know any object field or pointer
 

00:45:42.429 --> 00:45:44.339 align:start position:0%
you know any object field or pointer
field<00:45:42.699><c> in</c><00:45:42.999><c> an</c><00:45:43.449><c> object</c><00:45:43.809><c> we</c><00:45:43.959><c> just</c><00:45:44.140><c> mark</c><00:45:44.319><c> that</c>

00:45:44.339 --> 00:45:44.349 align:start position:0%
field in an object we just mark that
 

00:45:44.349 --> 00:45:47.640 align:start position:0%
field in an object we just mark that
there<00:45:44.709><c> and</c><00:45:45.459><c> then</c><00:45:46.269><c> here</c><00:45:46.659><c> and</c><00:45:46.749><c> the</c><00:45:46.839><c> not</c><00:45:46.989><c> young</c><00:45:47.199><c> we</c>

00:45:47.640 --> 00:45:47.650 align:start position:0%
there and then here and the not young we
 

00:45:47.650 --> 00:45:49.829 align:start position:0%
there and then here and the not young we
mark<00:45:47.859><c> that</c><00:45:47.890><c> there</c><00:45:48.219><c> -</c><00:45:48.459><c> and</c><00:45:48.789><c> then</c><00:45:49.449><c> when</c><00:45:49.599><c> we</c><00:45:49.689><c> do</c><00:45:49.809><c> a</c>

00:45:49.829 --> 00:45:49.839 align:start position:0%
mark that there - and then when we do a
 

00:45:49.839 --> 00:45:52.679 align:start position:0%
mark that there - and then when we do a
GC<00:45:50.289><c> we</c><00:45:50.650><c> can</c><00:45:50.859><c> you</c><00:45:51.189><c> know</c><00:45:51.279><c> do</c><00:45:51.519><c> the</c><00:45:52.089><c> young</c>

00:45:52.679 --> 00:45:52.689 align:start position:0%
GC we can you know do the young
 

00:45:52.689 --> 00:45:54.809 align:start position:0%
GC we can you know do the young
collection<00:45:53.109><c> like</c><00:45:53.259><c> we</c><00:45:53.380><c> always</c><00:45:53.529><c> would</c><00:45:53.799><c> and</c><00:45:53.859><c> you</c>

00:45:54.809 --> 00:45:54.819 align:start position:0%
collection like we always would and you
 

00:45:54.819 --> 00:45:56.999 align:start position:0%
collection like we always would and you
know<00:45:54.909><c> mark</c><00:45:55.179><c> the</c><00:45:55.479><c> entire</c><00:45:55.569><c> thing</c><00:45:56.109><c> and</c><00:45:56.349><c> then</c><00:45:56.919><c> we</c>

00:45:56.999 --> 00:45:57.009 align:start position:0%
know mark the entire thing and then we
 

00:45:57.009 --> 00:46:00.120 align:start position:0%
know mark the entire thing and then we
can<00:45:57.130><c> just</c><00:45:57.279><c> check</c><00:45:57.549><c> the</c><00:45:58.509><c> the</c><00:45:58.739><c> individual</c><00:45:59.739><c> pieces</c>

00:46:00.120 --> 00:46:00.130 align:start position:0%
can just check the the individual pieces
 

00:46:00.130 --> 00:46:02.759 align:start position:0%
can just check the the individual pieces
of<00:46:00.579><c> the</c><00:46:01.119><c> part</c><00:46:01.359><c> that</c><00:46:01.479><c> we're</c><00:46:01.599><c> not</c><00:46:01.689><c> collecting</c><00:46:02.289><c> to</c>

00:46:02.759 --> 00:46:02.769 align:start position:0%
of the part that we're not collecting to
 

00:46:02.769 --> 00:46:05.099 align:start position:0%
of the part that we're not collecting to
see<00:46:02.949><c> if</c><00:46:03.039><c> there's</c><00:46:03.189><c> any</c><00:46:03.339><c> incoming</c><00:46:03.729><c> pointers</c><00:46:04.179><c> and</c>

00:46:05.099 --> 00:46:05.109 align:start position:0%
see if there's any incoming pointers and
 

00:46:05.109 --> 00:46:07.620 align:start position:0%
see if there's any incoming pointers and
this<00:46:05.559><c> is</c><00:46:05.709><c> tremendously</c><00:46:06.309><c> faster</c><00:46:06.909><c> than</c><00:46:07.299><c> having</c>

00:46:07.620 --> 00:46:07.630 align:start position:0%
this is tremendously faster than having
 

00:46:07.630 --> 00:46:09.419 align:start position:0%
this is tremendously faster than having
to<00:46:07.689><c> mark</c><00:46:07.900><c> the</c><00:46:08.049><c> entire</c><00:46:08.140><c> thing</c><00:46:08.589><c> so</c><00:46:09.130><c> that's</c><00:46:09.249><c> in</c><00:46:09.369><c> a</c>

00:46:09.419 --> 00:46:09.429 align:start position:0%
to mark the entire thing so that's in a
 

00:46:09.429 --> 00:46:10.890 align:start position:0%
to mark the entire thing so that's in a
nutshell<00:46:09.459><c> how</c><00:46:09.819><c> we</c><00:46:09.999><c> do</c><00:46:10.269><c> generational</c>

00:46:10.890 --> 00:46:10.900 align:start position:0%
nutshell how we do generational
 

00:46:10.900 --> 00:46:12.749 align:start position:0%
nutshell how we do generational
collection<00:46:11.409><c> and</c><00:46:11.589><c> it's</c><00:46:12.009><c> also</c><00:46:12.159><c> how</c><00:46:12.400><c> we</c><00:46:12.429><c> do</c>

00:46:12.749 --> 00:46:12.759 align:start position:0%
collection and it's also how we do
 

00:46:12.759 --> 00:46:14.789 align:start position:0%
collection and it's also how we do
concurrent<00:46:13.359><c> collection</c><00:46:13.539><c> at</c><00:46:14.169><c> the</c><00:46:14.409><c> card</c><00:46:14.619><c> table</c>

00:46:14.789 --> 00:46:14.799 align:start position:0%
concurrent collection at the card table
 

00:46:14.799 --> 00:46:17.370 align:start position:0%
concurrent collection at the card table
the<00:46:15.489><c> right</c><00:46:15.669><c> barriers</c><00:46:16.150><c> in</c><00:46:16.419><c> the</c><00:46:16.479><c> card</c><00:46:16.689><c> table</c><00:46:17.109><c> are</c>

00:46:17.370 --> 00:46:17.380 align:start position:0%
the right barriers in the card table are
 

00:46:17.380 --> 00:46:19.169 align:start position:0%
the right barriers in the card table are
integral<00:46:17.890><c> to</c><00:46:18.009><c> both</c><00:46:18.159><c> of</c><00:46:18.369><c> those</c><00:46:18.459><c> parts</c><00:46:18.999><c> of</c><00:46:19.089><c> the</c>

00:46:19.169 --> 00:46:19.179 align:start position:0%
integral to both of those parts of the
 

00:46:19.179 --> 00:46:21.329 align:start position:0%
integral to both of those parts of the
GC<00:46:19.539><c> and</c><00:46:19.809><c> I</c><00:46:20.319><c> think</c><00:46:20.529><c> knowing</c><00:46:20.709><c> that</c><00:46:20.979><c> now</c><00:46:21.189><c> it's</c>

00:46:21.329 --> 00:46:21.339 align:start position:0%
GC and I think knowing that now it's
 

00:46:21.339 --> 00:46:23.939 align:start position:0%
GC and I think knowing that now it's
pretty<00:46:21.549><c> easy</c><00:46:21.729><c> to</c><00:46:21.880><c> understand</c><00:46:22.359><c> that</c><00:46:22.689><c> when</c><00:46:23.529><c> we</c><00:46:23.559><c> a</c>

00:46:23.939 --> 00:46:23.949 align:start position:0%
pretty easy to understand that when we a
 

00:46:23.949 --> 00:46:27.179 align:start position:0%
pretty easy to understand that when we a
OT<00:46:24.400><c> compile</c><00:46:24.849><c> classes</c><00:46:25.689><c> they</c><00:46:26.380><c> ot</c><00:46:26.559><c> compiler</c>

00:46:27.179 --> 00:46:27.189 align:start position:0%
OT compile classes they ot compiler
 

00:46:27.189 --> 00:46:29.429 align:start position:0%
OT compile classes they ot compiler
needs<00:46:27.429><c> to</c><00:46:27.609><c> know</c><00:46:27.759><c> what</c><00:46:28.599><c> garbage</c><00:46:28.989><c> collection</c>

00:46:29.429 --> 00:46:29.439 align:start position:0%
needs to know what garbage collection
 

00:46:29.439 --> 00:46:31.649 align:start position:0%
needs to know what garbage collection
algorithm<00:46:29.859><c> we're</c><00:46:29.979><c> using</c><00:46:30.159><c> because</c><00:46:30.849><c> we</c><00:46:31.419><c> need</c><00:46:31.569><c> to</c>

00:46:31.649 --> 00:46:31.659 align:start position:0%
algorithm we're using because we need to
 

00:46:31.659 --> 00:46:33.329 align:start position:0%
algorithm we're using because we need to
know<00:46:31.779><c> whether</c><00:46:32.049><c> right</c><00:46:32.619><c> barriers</c><00:46:33.039><c> would</c><00:46:33.219><c> be</c>

00:46:33.329 --> 00:46:33.339 align:start position:0%
know whether right barriers would be
 

00:46:33.339 --> 00:46:35.009 align:start position:0%
know whether right barriers would be
necessary<00:46:33.819><c> or</c><00:46:33.939><c> not</c><00:46:34.150><c> if</c><00:46:34.449><c> you're</c><00:46:34.869><c> using</c>

00:46:35.009 --> 00:46:35.019 align:start position:0%
necessary or not if you're using
 

00:46:35.019 --> 00:46:37.380 align:start position:0%
necessary or not if you're using
parallel<00:46:35.529><c> GC</c><00:46:35.949><c> we</c><00:46:36.579><c> actually</c><00:46:36.880><c> don't</c><00:46:36.969><c> need</c><00:46:37.179><c> the</c>

00:46:37.380 --> 00:46:37.390 align:start position:0%
parallel GC we actually don't need the
 

00:46:37.390 --> 00:46:40.649 align:start position:0%
parallel GC we actually don't need the
right<00:46:37.509><c> barriers</c><00:46:38.130><c> necessarily</c><00:46:39.299><c> you</c><00:46:40.299><c> know</c><00:46:40.329><c> if</c>

00:46:40.649 --> 00:46:40.659 align:start position:0%
right barriers necessarily you know if
 

00:46:40.659 --> 00:46:41.880 align:start position:0%
right barriers necessarily you know if
it<00:46:40.839><c> was</c><00:46:41.019><c> if</c><00:46:41.289><c> it</c><00:46:41.319><c> was</c><00:46:41.499><c> not</c>

00:46:41.880 --> 00:46:41.890 align:start position:0%
it was if it was not
 

00:46:41.890 --> 00:46:45.570 align:start position:0%
it was if it was not
generational<00:46:42.520><c> collector</c><00:46:43.290><c> it's</c><00:46:44.290><c> not</c><00:46:44.550><c> the</c><00:46:45.550><c> I</c>

00:46:45.570 --> 00:46:45.580 align:start position:0%
generational collector it's not the I
 

00:46:45.580 --> 00:46:47.190 align:start position:0%
generational collector it's not the I
mean<00:46:45.910><c> there's</c><00:46:46.060><c> some</c><00:46:46.210><c> cases</c><00:46:46.570><c> where</c><00:46:46.720><c> we</c><00:46:46.750><c> didn't</c>

00:46:47.190 --> 00:46:47.200 align:start position:0%
mean there's some cases where we didn't
 

00:46:47.200 --> 00:46:48.720 align:start position:0%
mean there's some cases where we didn't
we<00:46:47.320><c> need</c><00:46:47.470><c> different</c><00:46:47.650><c> types</c><00:46:47.980><c> of</c><00:46:48.190><c> right</c><00:46:48.370><c> barrier</c>

00:46:48.720 --> 00:46:48.730 align:start position:0%
we need different types of right barrier
 

00:46:48.730 --> 00:46:50.520 align:start position:0%
we need different types of right barrier
there's<00:46:48.970><c> different</c><00:46:49.330><c> data</c><00:46:49.720><c> structures</c><00:46:50.230><c> that</c>

00:46:50.520 --> 00:46:50.530 align:start position:0%
there's different data structures that
 

00:46:50.530 --> 00:46:52.440 align:start position:0%
there's different data structures that
the<00:46:50.620><c> GC</c><00:46:50.920><c> uses</c><00:46:51.220><c> that</c><00:46:51.400><c> do</c><00:46:51.610><c> or</c><00:46:51.760><c> do</c><00:46:51.880><c> not</c><00:46:52.030><c> need</c><00:46:52.210><c> to</c><00:46:52.330><c> be</c>

00:46:52.440 --> 00:46:52.450 align:start position:0%
the GC uses that do or do not need to be
 

00:46:52.450 --> 00:46:54.960 align:start position:0%
the GC uses that do or do not need to be
updated<00:46:52.570><c> and</c><00:46:53.410><c> you</c><00:46:54.220><c> know</c><00:46:54.310><c> it</c><00:46:54.430><c> all</c><00:46:54.520><c> depends</c><00:46:54.820><c> on</c>

00:46:54.960 --> 00:46:54.970 align:start position:0%
updated and you know it all depends on
 

00:46:54.970 --> 00:46:56.670 align:start position:0%
updated and you know it all depends on
the<00:46:55.030><c> individual</c><00:46:55.570><c> garbage</c><00:46:56.140><c> collector</c><00:46:56.500><c> that</c>

00:46:56.670 --> 00:46:56.680 align:start position:0%
the individual garbage collector that
 

00:46:56.680 --> 00:46:59.190 align:start position:0%
the individual garbage collector that
you're<00:46:56.800><c> using</c><00:46:57.120><c> but</c><00:46:58.120><c> the</c><00:46:58.210><c> key</c><00:46:58.360><c> takeaway</c><00:46:58.540><c> is</c><00:46:58.960><c> is</c>

00:46:59.190 --> 00:46:59.200 align:start position:0%
you're using but the key takeaway is is
 

00:46:59.200 --> 00:47:01.620 align:start position:0%
you're using but the key takeaway is is
that<00:46:59.410><c> we</c><00:47:00.190><c> need</c><00:47:00.340><c> to</c><00:47:00.430><c> know</c><00:47:00.610><c> what</c><00:47:01.240><c> the</c><00:47:01.360><c> garbage</c>

00:47:01.620 --> 00:47:01.630 align:start position:0%
that we need to know what the garbage
 

00:47:01.630 --> 00:47:03.810 align:start position:0%
that we need to know what the garbage
collectors<00:47:02.080><c> expectations</c><00:47:02.770><c> are</c><00:47:02.950><c> but</c><00:47:03.310><c> when</c><00:47:03.670><c> we</c>

00:47:03.810 --> 00:47:03.820 align:start position:0%
collectors expectations are but when we
 

00:47:03.820 --> 00:47:08.340 align:start position:0%
collectors expectations are but when we
compile<00:47:05.460><c> so</c><00:47:06.460><c> anyway</c><00:47:06.780><c> we</c><00:47:07.780><c> have</c><00:47:07.810><c> these</c><00:47:08.110><c> four</c>

00:47:08.340 --> 00:47:08.350 align:start position:0%
compile so anyway we have these four
 

00:47:08.350 --> 00:47:10.260 align:start position:0%
compile so anyway we have these four
different<00:47:08.530><c> kind</c><00:47:08.890><c> of</c><00:47:08.980><c> scenarios</c><00:47:09.490><c> or</c><00:47:09.850><c> four</c>

00:47:10.260 --> 00:47:10.270 align:start position:0%
different kind of scenarios or four
 

00:47:10.270 --> 00:47:13.110 align:start position:0%
different kind of scenarios or four
different<00:47:10.450><c> types</c><00:47:10.840><c> of</c><00:47:11.200><c> äôt</c><00:47:12.040><c> compilation</c><00:47:12.760><c> that</c>

00:47:13.110 --> 00:47:13.120 align:start position:0%
different types of äôt compilation that
 

00:47:13.120 --> 00:47:15.870 align:start position:0%
different types of äôt compilation that
we<00:47:13.270><c> can</c><00:47:13.420><c> end</c><00:47:13.570><c> up</c><00:47:13.660><c> with</c><00:47:13.870><c> as</c><00:47:14.140><c> a</c><00:47:14.170><c> result</c><00:47:14.590><c> and</c><00:47:14.880><c> each</c>

00:47:15.870 --> 00:47:15.880 align:start position:0%
we can end up with as a result and each
 

00:47:15.880 --> 00:47:18.870 align:start position:0%
we can end up with as a result and each
one<00:47:16.180><c> corresponds</c><00:47:16.840><c> to</c><00:47:16.870><c> a</c><00:47:17.050><c> set</c><00:47:17.530><c> of</c><00:47:17.790><c> GART</c><00:47:18.790><c> a</c>

00:47:18.870 --> 00:47:18.880 align:start position:0%
one corresponds to a set of GART a
 

00:47:18.880 --> 00:47:20.780 align:start position:0%
one corresponds to a set of GART a
choice<00:47:19.270><c> of</c><00:47:19.450><c> garbage</c><00:47:19.780><c> collector</c><00:47:20.230><c> and</c>

00:47:20.780 --> 00:47:20.790 align:start position:0%
choice of garbage collector and
 

00:47:20.790 --> 00:47:21.960 align:start position:0%
choice of garbage collector and
compressed

00:47:21.960 --> 00:47:21.970 align:start position:0%
compressed
 

00:47:21.970 --> 00:47:25.880 align:start position:0%
compressed
oops<00:47:22.930><c> is</c><00:47:23.320><c> enabled</c><00:47:23.770><c> or</c><00:47:23.980><c> not</c><00:47:24.520><c> enabled</c><00:47:25.000><c> and</c>

00:47:25.880 --> 00:47:25.890 align:start position:0%
oops is enabled or not enabled and
 

00:47:25.890 --> 00:47:28.860 align:start position:0%
oops is enabled or not enabled and
there's<00:47:26.890><c> a</c><00:47:27.190><c> there's</c><00:47:28.180><c> actually</c><00:47:28.540><c> a</c><00:47:28.570><c> known</c>

00:47:28.860 --> 00:47:28.870 align:start position:0%
there's a there's actually a known
 

00:47:28.870 --> 00:47:31.290 align:start position:0%
there's a there's actually a known
library<00:47:29.650><c> names</c><00:47:29.920><c> that</c><00:47:30.520><c> if</c><00:47:30.670><c> we</c><00:47:30.820><c> stick</c><00:47:31.060><c> these</c>

00:47:31.290 --> 00:47:31.300 align:start position:0%
library names that if we stick these
 

00:47:31.300 --> 00:47:34.560 align:start position:0%
library names that if we stick these
these<00:47:32.190><c> libraries</c><00:47:33.190><c> under</c><00:47:33.550><c> the</c><00:47:34.270><c> Lib</c><00:47:34.420><c> directory</c>

00:47:34.560 --> 00:47:34.570 align:start position:0%
these libraries under the Lib directory
 

00:47:34.570 --> 00:47:38.310 align:start position:0%
these libraries under the Lib directory
of<00:47:35.170><c> our</c><00:47:35.410><c> JDK</c><00:47:35.830><c> directory</c><00:47:36.280><c> the</c><00:47:37.060><c> the</c><00:47:37.570><c> JVM</c><00:47:37.930><c> runtime</c>

00:47:38.310 --> 00:47:38.320 align:start position:0%
of our JDK directory the the JVM runtime
 

00:47:38.320 --> 00:47:40.140 align:start position:0%
of our JDK directory the the JVM runtime
will<00:47:38.560><c> actually</c><00:47:38.860><c> find</c><00:47:39.160><c> these</c><00:47:39.400><c> automatically</c>

00:47:40.140 --> 00:47:40.150 align:start position:0%
will actually find these automatically
 

00:47:40.150 --> 00:47:42.510 align:start position:0%
will actually find these automatically
and<00:47:40.510><c> use</c><00:47:40.780><c> them</c><00:47:41.020><c> but</c><00:47:41.440><c> it's</c><00:47:41.620><c> only</c><00:47:41.800><c> for</c><00:47:42.100><c> a</c><00:47:42.130><c> small</c>

00:47:42.510 --> 00:47:42.520 align:start position:0%
and use them but it's only for a small
 

00:47:42.520 --> 00:47:45.210 align:start position:0%
and use them but it's only for a small
subset<00:47:43.000><c> of</c><00:47:43.200><c> logic</c><00:47:44.200><c> modules</c><00:47:44.620><c> that</c><00:47:45.100><c> are</c>

00:47:45.210 --> 00:47:45.220 align:start position:0%
subset of logic modules that are
 

00:47:45.220 --> 00:47:47.880 align:start position:0%
subset of logic modules that are
actually<00:47:45.580><c> part</c><00:47:45.880><c> of</c><00:47:46.180><c> the</c><00:47:46.450><c> JDK</c><00:47:46.690><c> proper</c><00:47:47.320><c> itself</c>

00:47:47.880 --> 00:47:47.890 align:start position:0%
actually part of the JDK proper itself
 

00:47:47.890 --> 00:47:51.330 align:start position:0%
actually part of the JDK proper itself
right<00:47:48.760><c> now</c><00:47:49.020><c> so</c><00:47:50.020><c> if</c><00:47:50.140><c> you</c><00:47:50.260><c> want</c><00:47:50.290><c> to</c><00:47:50.530><c> use</c><00:47:50.890><c> your</c><00:47:51.100><c> own</c>

00:47:51.330 --> 00:47:51.340 align:start position:0%
right now so if you want to use your own
 

00:47:51.340 --> 00:47:53.430 align:start position:0%
right now so if you want to use your own
you<00:47:52.150><c> know</c><00:47:52.240><c> if</c><00:47:52.300><c> you</c><00:47:52.360><c> want</c><00:47:52.510><c> a</c><00:47:52.660><c> OT</c><00:47:52.900><c> compile</c><00:47:53.290><c> your</c>

00:47:53.430 --> 00:47:53.440 align:start position:0%
you know if you want a OT compile your
 

00:47:53.440 --> 00:47:55.470 align:start position:0%
you know if you want a OT compile your
own<00:47:53.620><c> classes</c><00:47:53.950><c> the</c><00:47:54.880><c> only</c><00:47:55.090><c> option</c><00:47:55.360><c> you</c><00:47:55.450><c> have</c>

00:47:55.470 --> 00:47:55.480 align:start position:0%
own classes the only option you have
 

00:47:55.480 --> 00:47:58.890 align:start position:0%
own classes the only option you have
today<00:47:55.780><c> is</c><00:47:56.140><c> to</c><00:47:56.350><c> pass</c><00:47:56.560><c> then</c><00:47:57.310><c> the</c><00:47:57.700><c> library</c><00:47:58.630><c> file</c>

00:47:58.890 --> 00:47:58.900 align:start position:0%
today is to pass then the library file
 

00:47:58.900 --> 00:48:02.130 align:start position:0%
today is to pass then the library file
name<00:47:59.170><c> on</c><00:47:59.440><c> the</c><00:47:59.950><c> command</c><00:48:00.280><c> line</c><00:48:00.340><c> but</c><00:48:00.700><c> if</c><00:48:01.480><c> you</c><00:48:01.780><c> are</c>

00:48:02.130 --> 00:48:02.140 align:start position:0%
name on the command line but if you are
 

00:48:02.140 --> 00:48:05.190 align:start position:0%
name on the command line but if you are
doing<00:48:02.470><c> one</c><00:48:02.650><c> of</c><00:48:02.770><c> the</c><00:48:02.860><c> one</c><00:48:03.700><c> a</c><00:48:03.730><c> chunk</c><00:48:04.660><c> of</c><00:48:04.810><c> the</c><00:48:04.990><c> JDK</c>

00:48:05.190 --> 00:48:05.200 align:start position:0%
doing one of the one a chunk of the JDK
 

00:48:05.200 --> 00:48:07.230 align:start position:0%
doing one of the one a chunk of the JDK
itself<00:48:05.800><c> a</c><00:48:05.980><c> module</c><00:48:06.340><c> from</c><00:48:06.520><c> within</c><00:48:06.790><c> the</c><00:48:06.880><c> JDK</c>

00:48:07.230 --> 00:48:07.240 align:start position:0%
itself a module from within the JDK
 

00:48:07.240 --> 00:48:08.900 align:start position:0%
itself a module from within the JDK
itself<00:48:07.570><c> and</c><00:48:07.720><c> it's</c><00:48:07.810><c> one</c><00:48:07.960><c> of</c><00:48:08.050><c> these</c><00:48:08.200><c> five</c>

00:48:08.900 --> 00:48:08.910 align:start position:0%
itself and it's one of these five
 

00:48:08.910 --> 00:48:11.340 align:start position:0%
itself and it's one of these five
packages<00:48:09.910><c> or</c><00:48:10.270><c> I'm</c><00:48:10.600><c> sorry</c><00:48:10.750><c> about</c><00:48:11.050><c> one</c><00:48:11.200><c> of</c><00:48:11.230><c> these</c>

00:48:11.340 --> 00:48:11.350 align:start position:0%
packages or I'm sorry about one of these
 

00:48:11.350 --> 00:48:14.700 align:start position:0%
packages or I'm sorry about one of these
five<00:48:11.590><c> modules</c><00:48:11.850><c> one</c><00:48:12.850><c> of</c><00:48:12.940><c> these</c><00:48:13.060><c> four</c><00:48:13.390><c> or</c><00:48:13.710><c> Java</c>

00:48:14.700 --> 00:48:14.710 align:start position:0%
five modules one of these four or Java
 

00:48:14.710 --> 00:48:17.130 align:start position:0%
five modules one of these four or Java
base<00:48:15.100><c> if</c><00:48:15.880><c> it's</c><00:48:16.240><c> one</c><00:48:16.360><c> of</c><00:48:16.390><c> those</c><00:48:16.510><c> five</c><00:48:16.780><c> then</c><00:48:17.110><c> you</c>

00:48:17.130 --> 00:48:17.140 align:start position:0%
base if it's one of those five then you
 

00:48:17.140 --> 00:48:20.760 align:start position:0%
base if it's one of those five then you
can<00:48:17.350><c> just</c><00:48:17.530><c> stick</c><00:48:17.770><c> it</c><00:48:18.700><c> in</c><00:48:18.760><c> library</c><00:48:19.300><c> in</c><00:48:19.570><c> the</c><00:48:20.560><c> libs</c>

00:48:20.760 --> 00:48:20.770 align:start position:0%
can just stick it in library in the libs
 

00:48:20.770 --> 00:48:23.550 align:start position:0%
can just stick it in library in the libs
directory<00:48:20.920><c> and</c><00:48:21.580><c> the</c><00:48:22.420><c> the</c><00:48:22.720><c> JVM</c><00:48:23.080><c> may</c><00:48:23.200><c> pick</c><00:48:23.380><c> it</c><00:48:23.470><c> up</c>

00:48:23.550 --> 00:48:23.560 align:start position:0%
directory and the the JVM may pick it up
 

00:48:23.560 --> 00:48:26.640 align:start position:0%
directory and the the JVM may pick it up
automatically<00:48:24.210><c> so</c><00:48:25.210><c> we're</c><00:48:25.780><c> out</c><00:48:25.870><c> of</c><00:48:25.900><c> time</c><00:48:26.170><c> but</c>

00:48:26.640 --> 00:48:26.650 align:start position:0%
automatically so we're out of time but
 

00:48:26.650 --> 00:48:30.470 align:start position:0%
automatically so we're out of time but
just<00:48:27.280><c> to</c><00:48:27.370><c> wrap</c><00:48:27.760><c> things</c><00:48:27.940><c> up</c><00:48:28.150><c> so</c><00:48:28.570><c> the</c><00:48:29.050><c> value</c><00:48:29.530><c> that</c>

00:48:30.470 --> 00:48:30.480 align:start position:0%
just to wrap things up so the value that
 

00:48:30.480 --> 00:48:33.510 align:start position:0%
just to wrap things up so the value that
that<00:48:31.480><c> is</c><00:48:31.570><c> added</c><00:48:31.900><c> by</c><00:48:32.020><c> ot</c><00:48:32.410><c> compilation</c><00:48:33.040><c> here</c><00:48:33.280><c> is</c>

00:48:33.510 --> 00:48:33.520 align:start position:0%
that is added by ot compilation here is
 

00:48:33.520 --> 00:48:35.550 align:start position:0%
that is added by ot compilation here is
that<00:48:34.090><c> it</c><00:48:34.180><c> really</c><00:48:34.300><c> gives</c><00:48:34.870><c> you</c><00:48:35.020><c> a</c><00:48:35.050><c> faster</c><00:48:35.500><c> start</c>

00:48:35.550 --> 00:48:35.560 align:start position:0%
that it really gives you a faster start
 

00:48:35.560 --> 00:48:37.350 align:start position:0%
that it really gives you a faster start
up<00:48:35.920><c> you</c><00:48:36.130><c> reach</c><00:48:36.280><c> peak</c><00:48:36.550><c> performance</c><00:48:37.090><c> quicker</c>

00:48:37.350 --> 00:48:37.360 align:start position:0%
up you reach peak performance quicker
 

00:48:37.360 --> 00:48:39.420 align:start position:0%
up you reach peak performance quicker
you<00:48:37.960><c> have</c><00:48:38.080><c> a</c><00:48:38.140><c> smaller</c><00:48:38.410><c> footprint</c><00:48:38.950><c> if</c><00:48:39.130><c> you</c><00:48:39.280><c> have</c>

00:48:39.420 --> 00:48:39.430 align:start position:0%
you have a smaller footprint if you have
 

00:48:39.430 --> 00:48:41.790 align:start position:0%
you have a smaller footprint if you have
multiple<00:48:39.760><c> JVM</c><00:48:40.270><c> a</c><00:48:40.480><c> smaller</c><00:48:40.960><c> total</c><00:48:41.410><c> footprint</c>

00:48:41.790 --> 00:48:41.800 align:start position:0%
multiple JVM a smaller total footprint
 

00:48:41.800 --> 00:48:43.920 align:start position:0%
multiple JVM a smaller total footprint
if<00:48:41.980><c> you</c><00:48:42.070><c> have</c><00:48:42.160><c> multiple</c><00:48:42.490><c> JVMs</c><00:48:42.970><c> running</c><00:48:43.840><c> the</c>

00:48:43.920 --> 00:48:43.930 align:start position:0%
if you have multiple JVMs running the
 

00:48:43.930 --> 00:48:46.980 align:start position:0%
if you have multiple JVMs running the
same<00:48:44.140><c> code</c><00:48:44.440><c> and</c><00:48:44.770><c> we</c><00:48:45.670><c> can</c><00:48:45.820><c> even</c><00:48:45.970><c> run</c><00:48:46.300><c> on</c><00:48:46.570><c> on</c>

00:48:46.980 --> 00:48:46.990 align:start position:0%
same code and we can even run on on
 

00:48:46.990 --> 00:48:48.870 align:start position:0%
same code and we can even run on on
platforms<00:48:47.500><c> that</c><00:48:47.680><c> would</c><00:48:47.860><c> otherwise</c><00:48:48.130><c> disallow</c>

00:48:48.870 --> 00:48:48.880 align:start position:0%
platforms that would otherwise disallow
 

00:48:48.880 --> 00:48:51.930 align:start position:0%
platforms that would otherwise disallow
jet<00:48:49.240><c> the</c><00:48:49.840><c> risks</c><00:48:50.170><c> here</c><00:48:50.410><c> the</c><00:48:50.680><c> the</c><00:48:50.980><c> caveats</c><00:48:51.580><c> are</c>

00:48:51.930 --> 00:48:51.940 align:start position:0%
jet the risks here the the caveats are
 

00:48:51.940 --> 00:48:54.150 align:start position:0%
jet the risks here the the caveats are
that<00:48:52.450><c> it's</c><00:48:52.600><c> experimental</c><00:48:53.140><c> it's</c><00:48:53.920><c> not</c>

00:48:54.150 --> 00:48:54.160 align:start position:0%
that it's experimental it's not
 

00:48:54.160 --> 00:48:55.170 align:start position:0%
that it's experimental it's not
documented

00:48:55.170 --> 00:48:55.180 align:start position:0%
documented
 

00:48:55.180 --> 00:48:58.440 align:start position:0%
documented
it<00:48:55.390><c> only</c><00:48:55.540><c> runs</c><00:48:55.720><c> on</c><00:48:55.930><c> Linux</c><00:48:56.609><c> amd64</c><00:48:57.609><c> today</c><00:48:58.150><c> and</c>

00:48:58.440 --> 00:48:58.450 align:start position:0%
it only runs on Linux amd64 today and
 

00:48:58.450 --> 00:49:00.870 align:start position:0%
it only runs on Linux amd64 today and
custom<00:48:59.319><c> class</c><00:48:59.500><c> loaders</c><00:48:59.859><c> invokedynamic</c><00:49:00.250><c> or</c>

00:49:00.870 --> 00:49:00.880 align:start position:0%
custom class loaders invokedynamic or
 

00:49:00.880 --> 00:49:04.020 align:start position:0%
custom class loaders invokedynamic or
india<00:49:01.180><c> are</c><00:49:01.450><c> not</c><00:49:01.599><c> supported</c><00:49:02.550><c> and</c><00:49:03.550><c> of</c><00:49:03.819><c> course</c>

00:49:04.020 --> 00:49:04.030 align:start position:0%
india are not supported and of course
 

00:49:04.030 --> 00:49:06.870 align:start position:0%
india are not supported and of course
your<00:49:04.329><c> mileage</c><00:49:04.690><c> may</c><00:49:04.869><c> vary</c><00:49:05.369><c> so</c><00:49:06.369><c> there's</c><00:49:06.700><c> other</c>

00:49:06.870 --> 00:49:06.880 align:start position:0%
your mileage may vary so there's other
 

00:49:06.880 --> 00:49:09.089 align:start position:0%
your mileage may vary so there's other
äôt<00:49:07.540><c> sessions</c><00:49:07.990><c> this</c><00:49:08.230><c> was</c><00:49:08.440><c> this</c><00:49:08.680><c> one</c><00:49:08.859><c> was</c><00:49:08.950><c> the</c>

00:49:09.089 --> 00:49:09.099 align:start position:0%
äôt sessions this was this one was the
 

00:49:09.099 --> 00:49:10.770 align:start position:0%
äôt sessions this was this one was the
introduction<00:49:09.460><c> one</c><00:49:09.790><c> this</c><00:49:10.000><c> one</c><00:49:10.210><c> was</c><00:49:10.390><c> just</c><00:49:10.420><c> how</c>

00:49:10.770 --> 00:49:10.780 align:start position:0%
introduction one this one was just how
 

00:49:10.780 --> 00:49:12.960 align:start position:0%
introduction one this one was just how
to<00:49:10.839><c> use</c><00:49:11.109><c> it</c><00:49:11.319><c> whether</c><00:49:11.980><c> you</c><00:49:12.369><c> know</c><00:49:12.490><c> the</c>

00:49:12.960 --> 00:49:12.970 align:start position:0%
to use it whether you know the
 

00:49:12.970 --> 00:49:14.130 align:start position:0%
to use it whether you know the
information<00:49:13.390><c> you</c><00:49:13.480><c> would</c><00:49:13.569><c> need</c><00:49:13.630><c> to</c><00:49:13.809><c> consider</c>

00:49:14.130 --> 00:49:14.140 align:start position:0%
information you would need to consider
 

00:49:14.140 --> 00:49:15.809 align:start position:0%
information you would need to consider
whether<00:49:14.380><c> you</c><00:49:14.740><c> might</c><00:49:15.040><c> want</c><00:49:15.309><c> to</c><00:49:15.369><c> use</c><00:49:15.550><c> it</c><00:49:15.670><c> or</c><00:49:15.790><c> not</c>

00:49:15.809 --> 00:49:15.819 align:start position:0%
whether you might want to use it or not
 

00:49:15.819 --> 00:49:17.339 align:start position:0%
whether you might want to use it or not
to<00:49:16.210><c> make</c><00:49:16.300><c> that</c><00:49:16.480><c> decision</c><00:49:16.750><c> and</c><00:49:17.079><c> hopefully</c>

00:49:17.339 --> 00:49:17.349 align:start position:0%
to make that decision and hopefully
 

00:49:17.349 --> 00:49:19.950 align:start position:0%
to make that decision and hopefully
you'll<00:49:18.339><c> walk</c><00:49:18.490><c> out</c><00:49:18.609><c> of</c><00:49:18.670><c> here</c><00:49:18.819><c> with</c><00:49:18.970><c> feeling</c>

00:49:19.950 --> 00:49:19.960 align:start position:0%
you'll walk out of here with feeling
 

00:49:19.960 --> 00:49:21.599 align:start position:0%
you'll walk out of here with feeling
that<00:49:20.079><c> you've</c><00:49:20.230><c> learned</c><00:49:20.410><c> that</c><00:49:20.589><c> but</c><00:49:21.309><c> if</c><00:49:21.400><c> you</c><00:49:21.460><c> want</c>

00:49:21.599 --> 00:49:21.609 align:start position:0%
that you've learned that but if you want
 

00:49:21.609 --> 00:49:23.190 align:start position:0%
that you've learned that but if you want
a<00:49:21.640><c> more</c><00:49:21.790><c> in-depth</c><00:49:22.150><c> talk</c><00:49:22.450><c> I'll</c><00:49:22.690><c> look</c><00:49:22.809><c> under</c><00:49:22.990><c> the</c>

00:49:23.190 --> 00:49:23.200 align:start position:0%
a more in-depth talk I'll look under the
 

00:49:23.200 --> 00:49:24.260 align:start position:0%
a more in-depth talk I'll look under the
hood

00:49:24.260 --> 00:49:24.270 align:start position:0%
hood
 

00:49:24.270 --> 00:49:27.329 align:start position:0%
hood
these<00:49:25.270><c> guys</c><00:49:25.480><c> are</c><00:49:25.660><c> doing</c><00:49:25.750><c> a</c><00:49:25.930><c> talk</c><00:49:26.140><c> from</c><00:49:26.530><c> that</c>

00:49:27.329 --> 00:49:27.339 align:start position:0%
these guys are doing a talk from that
 

00:49:27.339 --> 00:49:28.859 align:start position:0%
these guys are doing a talk from that
they<00:49:27.430><c> also</c><00:49:27.550><c> delivered</c><00:49:27.970><c> at</c><00:49:28.059><c> the</c><00:49:28.089><c> JVM</c><00:49:28.510><c> language</c>

00:49:28.859 --> 00:49:28.869 align:start position:0%
they also delivered at the JVM language
 

00:49:28.869 --> 00:49:31.230 align:start position:0%
they also delivered at the JVM language
summit<00:49:29.260><c> and</c><00:49:29.470><c> this</c><00:49:30.309><c> was</c><00:49:30.490><c> this</c><00:49:30.700><c> was</c><00:49:30.849><c> excellent</c>

00:49:31.230 --> 00:49:31.240 align:start position:0%
summit and this was this was excellent
 

00:49:31.240 --> 00:49:32.579 align:start position:0%
summit and this was this was excellent
at<00:49:31.540><c> the</c><00:49:31.599><c> language</c><00:49:31.900><c> summit</c><00:49:32.200><c> you</c><00:49:32.290><c> can</c><00:49:32.440><c> actually</c>

00:49:32.579 --> 00:49:32.589 align:start position:0%
at the language summit you can actually
 

00:49:32.589 --> 00:49:35.970 align:start position:0%
at the language summit you can actually
catch<00:49:32.920><c> it</c><00:49:32.950><c> on</c><00:49:33.160><c> on</c><00:49:33.510><c> YouTube</c><00:49:34.510><c> if</c><00:49:34.720><c> you</c><00:49:34.930><c> are</c><00:49:35.650><c> unable</c>

00:49:35.970 --> 00:49:35.980 align:start position:0%
catch it on on YouTube if you are unable
 

00:49:35.980 --> 00:49:38.130 align:start position:0%
catch it on on YouTube if you are unable
to<00:49:36.040><c> see</c><00:49:36.819><c> it</c><00:49:36.910><c> live</c><00:49:37.089><c> today</c><00:49:37.359><c> but</c><00:49:37.690><c> if</c><00:49:37.780><c> you</c><00:49:37.869><c> can</c><00:49:37.990><c> fit</c>

00:49:38.130 --> 00:49:38.140 align:start position:0%
to see it live today but if you can fit
 

00:49:38.140 --> 00:49:40.079 align:start position:0%
to see it live today but if you can fit
it<00:49:38.230><c> into</c><00:49:38.349><c> your</c><00:49:38.440><c> schedule</c><00:49:38.530><c> I</c><00:49:38.920><c> strongly</c><00:49:39.190><c> suggest</c>

00:49:40.079 --> 00:49:40.089 align:start position:0%
it into your schedule I strongly suggest
 

00:49:40.089 --> 00:49:42.120 align:start position:0%
it into your schedule I strongly suggest
going<00:49:40.480><c> and</c><00:49:40.900><c> seeing</c><00:49:41.140><c> them</c><00:49:41.260><c> live</c><00:49:41.440><c> tomorrow</c><00:49:41.859><c> and</c>

00:49:42.120 --> 00:49:42.130 align:start position:0%
going and seeing them live tomorrow and
 

00:49:42.130 --> 00:49:44.010 align:start position:0%
going and seeing them live tomorrow and
then<00:49:42.970><c> also</c><00:49:43.119><c> there's</c><00:49:43.390><c> another</c><00:49:43.450><c> session</c><00:49:43.960><c> I</c>

00:49:44.010 --> 00:49:44.020 align:start position:0%
then also there's another session I
 

00:49:44.020 --> 00:49:46.799 align:start position:0%
then also there's another session I
don't<00:49:44.200><c> really</c><00:49:44.349><c> know</c><00:49:44.500><c> the</c><00:49:44.619><c> details</c><00:49:44.770><c> about</c><00:49:45.809><c> but</c>

00:49:46.799 --> 00:49:46.809 align:start position:0%
don't really know the details about but
 

00:49:46.809 --> 00:49:49.579 align:start position:0%
don't really know the details about but
someone<00:49:47.319><c> is</c><00:49:47.440><c> doing</c><00:49:47.589><c> a</c><00:49:47.920><c> kind</c><00:49:48.760><c> of</c><00:49:48.819><c> more</c><00:49:49.000><c> I</c><00:49:49.180><c> guess</c>

00:49:49.579 --> 00:49:49.589 align:start position:0%
someone is doing a kind of more I guess
 

00:49:49.589 --> 00:49:51.900 align:start position:0%
someone is doing a kind of more I guess
fundamental<00:49:50.589><c> talk</c><00:49:50.829><c> about</c><00:49:51.160><c> about</c><00:49:51.520><c> some</c><00:49:51.760><c> of</c><00:49:51.849><c> the</c>

00:49:51.900 --> 00:49:51.910 align:start position:0%
fundamental talk about about some of the
 

00:49:51.910 --> 00:49:54.660 align:start position:0%
fundamental talk about about some of the
principles<00:49:52.329><c> involved</c><00:49:52.599><c> with</c><00:49:53.500><c> static</c><00:49:54.069><c> versus</c><00:49:54.460><c> a</c>

00:49:54.660 --> 00:49:54.670 align:start position:0%
principles involved with static versus a
 

00:49:54.670 --> 00:49:56.849 align:start position:0%
principles involved with static versus a
ot<00:49:54.970><c> compilation</c><00:49:55.569><c> so</c><00:49:55.960><c> it</c><00:49:56.530><c> should</c><00:49:56.680><c> be</c><00:49:56.800><c> an</c>

00:49:56.849 --> 00:49:56.859 align:start position:0%
ot compilation so it should be an
 

00:49:56.859 --> 00:49:59.099 align:start position:0%
ot compilation so it should be an
interesting<00:49:57.040><c> talk</c><00:49:57.510><c> so</c><00:49:58.510><c> thank</c><00:49:58.690><c> you</c><00:49:58.780><c> very</c><00:49:58.930><c> much</c>

00:49:59.099 --> 00:49:59.109 align:start position:0%
interesting talk so thank you very much
 

00:49:59.109 --> 00:50:00.690 align:start position:0%
interesting talk so thank you very much
for<00:49:59.230><c> your</c><00:49:59.290><c> time</c><00:49:59.500><c> I</c><00:49:59.559><c> very</c><00:50:00.069><c> much</c><00:50:00.130><c> appreciate</c><00:50:00.670><c> the</c>

00:50:00.690 --> 00:50:00.700 align:start position:0%
for your time I very much appreciate the
 

00:50:00.700 --> 00:50:09.240 align:start position:0%
for your time I very much appreciate the
oh<00:50:00.880><c> sorry</c><00:50:01.210><c> oh</c><00:50:02.190><c> it's</c><00:50:03.190><c> your</c><00:50:03.309><c> talk</c><00:50:03.490><c> okay</c><00:50:03.880><c> Wow</c><00:50:08.250><c> yeah</c>

00:50:09.240 --> 00:50:09.250 align:start position:0%
oh sorry oh it's your talk okay Wow yeah
 

00:50:09.250 --> 00:50:11.520 align:start position:0%
oh sorry oh it's your talk okay Wow yeah
yeah<00:50:09.609><c> so</c><00:50:10.000><c> I'm</c><00:50:10.630><c> sure</c><00:50:10.809><c> it's</c><00:50:10.960><c> gonna</c><00:50:11.049><c> be</c><00:50:11.140><c> a</c><00:50:11.260><c> great</c>

00:50:11.520 --> 00:50:11.530 align:start position:0%
yeah so I'm sure it's gonna be a great
 

00:50:11.530 --> 00:50:16.319 align:start position:0%
yeah so I'm sure it's gonna be a great
talk<00:50:13.980><c> okay</c><00:50:14.980><c> thank</c><00:50:15.579><c> you</c><00:50:15.700><c> very</c><00:50:15.880><c> much</c><00:50:16.059><c> for</c><00:50:16.240><c> your</c>

00:50:16.319 --> 00:50:16.329 align:start position:0%
talk okay thank you very much for your
 

00:50:16.329 --> 00:50:16.960 align:start position:0%
talk okay thank you very much for your
time

00:50:16.960 --> 00:50:16.970 align:start position:0%
time
 

00:50:16.970 --> 00:50:22.030 align:start position:0%
time
[Applause]

