WEBVTT
Kind: captions
Language: en

00:00:00.200 --> 00:00:03.249 align:start position:0%
 
[Music]

00:00:03.249 --> 00:00:03.259 align:start position:0%
[Music]
 

00:00:03.259 --> 00:00:05.840 align:start position:0%
[Music]
alright<00:00:04.259><c> welcome</c><00:00:04.890><c> to</c><00:00:05.040><c> being</c><00:00:05.310><c> the</c><00:00:05.430><c> session</c><00:00:05.730><c> on</c>

00:00:05.840 --> 00:00:05.850 align:start position:0%
alright welcome to being the session on
 

00:00:05.850 --> 00:00:07.820 align:start position:0%
alright welcome to being the session on
 programming<00:00:06.779><c> in</c><00:00:06.870><c> Java</c><00:00:07.109><c> 8</c><00:00:07.319><c> my</c><00:00:07.560><c> name</c><00:00:07.710><c> is</c>

00:00:07.820 --> 00:00:07.830 align:start position:0%
 programming in Java 8 my name is
 

00:00:07.830 --> 00:00:09.230 align:start position:0%
 programming in Java 8 my name is
Venkat<00:00:08.160><c> Subramanyam</c><00:00:08.639><c> I'm</c><00:00:08.820><c> going</c><00:00:09.030><c> to</c><00:00:09.090><c> talk</c>

00:00:09.230 --> 00:00:09.240 align:start position:0%
Venkat Subramanyam I'm going to talk
 

00:00:09.240 --> 00:00:10.520 align:start position:0%
Venkat Subramanyam I'm going to talk
about<00:00:09.360><c> function</c><00:00:09.840><c> programming</c><00:00:09.990><c> in</c><00:00:10.349><c> general</c>

00:00:10.520 --> 00:00:10.530 align:start position:0%
about function programming in general
 

00:00:10.530 --> 00:00:12.410 align:start position:0%
about function programming in general
for<00:00:10.920><c> a</c><00:00:10.950><c> little</c><00:00:11.190><c> bit</c><00:00:11.309><c> and</c><00:00:11.460><c> then</c><00:00:12.090><c> I'll</c><00:00:12.179><c> draw</c>

00:00:12.410 --> 00:00:12.420 align:start position:0%
for a little bit and then I'll draw
 

00:00:12.420 --> 00:00:14.810 align:start position:0%
for a little bit and then I'll draw
example<00:00:12.870><c> from</c><00:00:13.110><c> Java</c><00:00:13.410><c> 8</c><00:00:13.620><c> to</c><00:00:13.799><c> see</c><00:00:13.980><c> how</c><00:00:14.250><c> Java</c><00:00:14.639><c> 8</c>

00:00:14.810 --> 00:00:14.820 align:start position:0%
example from Java 8 to see how Java 8
 

00:00:14.820 --> 00:00:16.460 align:start position:0%
example from Java 8 to see how Java 8
supports<00:00:15.269><c> some</c><00:00:15.389><c> of</c><00:00:15.480><c> these</c><00:00:15.599><c> Styles</c><00:00:16.049><c> I'll</c><00:00:16.230><c> also</c>

00:00:16.460 --> 00:00:16.470 align:start position:0%
supports some of these Styles I'll also
 

00:00:16.470 --> 00:00:19.040 align:start position:0%
supports some of these Styles I'll also
make<00:00:16.740><c> certain</c><00:00:17.150><c> distinctions</c><00:00:18.150><c> as</c><00:00:18.390><c> to</c><00:00:18.660><c> a</c><00:00:18.690><c> few</c>

00:00:19.040 --> 00:00:19.050 align:start position:0%
make certain distinctions as to a few
 

00:00:19.050 --> 00:00:20.390 align:start position:0%
make certain distinctions as to a few
things<00:00:19.170><c> about</c><00:00:19.350><c> functional</c><00:00:19.830><c> style</c><00:00:20.130><c> versus</c>

00:00:20.390 --> 00:00:20.400 align:start position:0%
things about functional style versus
 

00:00:20.400 --> 00:00:22.130 align:start position:0%
things about functional style versus
functional<00:00:20.730><c> programming</c><00:00:21.060><c> so</c><00:00:21.840><c> let's</c><00:00:22.020><c> get</c>

00:00:22.130 --> 00:00:22.140 align:start position:0%
functional programming so let's get
 

00:00:22.140 --> 00:00:24.679 align:start position:0%
functional programming so let's get
started<00:00:22.560><c> well</c><00:00:23.160><c> one</c><00:00:23.640><c> of</c><00:00:23.730><c> the</c><00:00:23.820><c> really</c><00:00:24.330><c> good</c>

00:00:24.679 --> 00:00:24.689 align:start position:0%
started well one of the really good
 

00:00:24.689 --> 00:00:26.990 align:start position:0%
started well one of the really good
things<00:00:24.869><c> about</c><00:00:24.960><c> Java</c><00:00:25.710><c> is</c><00:00:25.949><c> Java</c><00:00:26.340><c> has</c><00:00:26.519><c> evolved</c>

00:00:26.990 --> 00:00:27.000 align:start position:0%
things about Java is Java has evolved
 

00:00:27.000 --> 00:00:29.089 align:start position:0%
things about Java is Java has evolved
into<00:00:27.390><c> supporting</c><00:00:28.380><c> functional</c><00:00:28.800><c> style</c><00:00:29.010><c> of</c>

00:00:29.089 --> 00:00:29.099 align:start position:0%
into supporting functional style of
 

00:00:29.099 --> 00:00:31.099 align:start position:0%
into supporting functional style of
programming<00:00:29.189><c> for</c><00:00:29.550><c> a</c><00:00:29.820><c> good</c><00:00:30.179><c> about</c><00:00:30.570><c> 20</c><00:00:31.019><c> plus</c>

00:00:31.099 --> 00:00:31.109 align:start position:0%
programming for a good about 20 plus
 

00:00:31.109 --> 00:00:33.740 align:start position:0%
programming for a good about 20 plus
years<00:00:31.529><c> Java</c><00:00:32.399><c> supported</c><00:00:32.940><c> imperative</c><00:00:33.360><c> style</c><00:00:33.600><c> of</c>

00:00:33.740 --> 00:00:33.750 align:start position:0%
years Java supported imperative style of
 

00:00:33.750 --> 00:00:35.270 align:start position:0%
years Java supported imperative style of
programming<00:00:33.870><c> along</c><00:00:34.380><c> with</c><00:00:34.559><c> object-oriented</c>

00:00:35.270 --> 00:00:35.280 align:start position:0%
programming along with object-oriented
 

00:00:35.280 --> 00:00:36.680 align:start position:0%
programming along with object-oriented
style<00:00:35.460><c> of</c><00:00:35.579><c> programming</c><00:00:35.670><c> but</c><00:00:36.210><c> now</c><00:00:36.390><c> we</c><00:00:36.450><c> can</c>

00:00:36.680 --> 00:00:36.690 align:start position:0%
style of programming but now we can
 

00:00:36.690 --> 00:00:38.330 align:start position:0%
style of programming but now we can
actually<00:00:36.840><c> do</c><00:00:37.200><c> functional</c><00:00:38.070><c> style</c><00:00:38.250><c> of</c>

00:00:38.330 --> 00:00:38.340 align:start position:0%
actually do functional style of
 

00:00:38.340 --> 00:00:40.069 align:start position:0%
actually do functional style of
programming<00:00:38.760><c> also</c><00:00:38.940><c> but</c><00:00:39.540><c> why</c><00:00:39.690><c> should</c><00:00:39.960><c> we</c>

00:00:40.069 --> 00:00:40.079 align:start position:0%
programming also but why should we
 

00:00:40.079 --> 00:00:41.209 align:start position:0%
programming also but why should we
really<00:00:40.290><c> care</c><00:00:40.590><c> about</c><00:00:40.620><c> this</c>

00:00:41.209 --> 00:00:41.219 align:start position:0%
really care about this
 

00:00:41.219 --> 00:00:43.549 align:start position:0%
really care about this
well<00:00:41.820><c> functional</c><00:00:42.239><c> programming</c><00:00:42.600><c> has</c><00:00:43.410><c> been</c>

00:00:43.549 --> 00:00:43.559 align:start position:0%
well functional programming has been
 

00:00:43.559 --> 00:00:45.410 align:start position:0%
well functional programming has been
around<00:00:43.710><c> for</c><00:00:43.920><c> a</c><00:00:43.950><c> very</c><00:00:44.250><c> long</c><00:00:44.610><c> time</c><00:00:44.640><c> it's</c><00:00:45.210><c> been</c>

00:00:45.410 --> 00:00:45.420 align:start position:0%
around for a very long time it's been
 

00:00:45.420 --> 00:00:47.720 align:start position:0%
around for a very long time it's been
around<00:00:46.020><c> for</c><00:00:46.379><c> even</c><00:00:47.309><c> longer</c><00:00:47.579><c> than</c>

00:00:47.720 --> 00:00:47.730 align:start position:0%
around for even longer than
 

00:00:47.730 --> 00:00:49.279 align:start position:0%
around for even longer than
object-oriented<00:00:48.539><c> programming</c><00:00:48.870><c> has</c><00:00:49.110><c> been</c>

00:00:49.279 --> 00:00:49.289 align:start position:0%
object-oriented programming has been
 

00:00:49.289 --> 00:00:51.560 align:start position:0%
object-oriented programming has been
around<00:00:49.500><c> and</c><00:00:49.829><c> one</c><00:00:50.550><c> of</c><00:00:50.640><c> the</c><00:00:50.820><c> interesting</c><00:00:51.149><c> things</c>

00:00:51.560 --> 00:00:51.570 align:start position:0%
around and one of the interesting things
 

00:00:51.570 --> 00:00:53.569 align:start position:0%
around and one of the interesting things
about<00:00:51.660><c> function</c><00:00:52.140><c> programming</c><00:00:52.289><c> is</c><00:00:52.829><c> it</c><00:00:53.100><c> solves</c>

00:00:53.569 --> 00:00:53.579 align:start position:0%
about function programming is it solves
 

00:00:53.579 --> 00:00:55.549 align:start position:0%
about function programming is it solves
a<00:00:53.699><c> certain</c><00:00:54.000><c> number</c><00:00:54.059><c> of</c><00:00:54.239><c> problems</c><00:00:54.690><c> that</c><00:00:54.780><c> have</c>

00:00:55.549 --> 00:00:55.559 align:start position:0%
a certain number of problems that have
 

00:00:55.559 --> 00:00:57.200 align:start position:0%
a certain number of problems that have
just<00:00:55.860><c> become</c><00:00:56.039><c> imminent</c><00:00:56.640><c> over</c><00:00:56.879><c> the</c><00:00:57.000><c> past</c>

00:00:57.200 --> 00:00:57.210 align:start position:0%
just become imminent over the past
 

00:00:57.210 --> 00:01:00.110 align:start position:0%
just become imminent over the past
decade<00:00:57.600><c> or</c><00:00:57.629><c> so</c><00:00:57.780><c> so</c><00:00:58.739><c> one</c><00:00:59.070><c> of</c><00:00:59.100><c> the</c><00:00:59.219><c> things</c><00:00:59.430><c> is</c><00:00:59.640><c> the</c>

00:01:00.110 --> 00:01:00.120 align:start position:0%
decade or so so one of the things is the
 

00:01:00.120 --> 00:01:02.029 align:start position:0%
decade or so so one of the things is the
growth<00:01:00.359><c> of</c><00:01:00.480><c> computer</c><00:01:00.840><c> applications</c><00:01:00.989><c> we</c><00:01:01.829><c> are</c>

00:01:02.029 --> 00:01:02.039 align:start position:0%
growth of computer applications we are
 

00:01:02.039 --> 00:01:04.310 align:start position:0%
growth of computer applications we are
seeing<00:01:02.629><c> massive</c><00:01:03.629><c> use</c><00:01:03.780><c> of</c><00:01:03.840><c> computer</c>

00:01:04.310 --> 00:01:04.320 align:start position:0%
seeing massive use of computer
 

00:01:04.320 --> 00:01:05.929 align:start position:0%
seeing massive use of computer
applications<00:01:04.409><c> we</c><00:01:04.920><c> can't</c><00:01:05.189><c> have</c><00:01:05.460><c> any</c><00:01:05.640><c> human</c>

00:01:05.929 --> 00:01:05.939 align:start position:0%
applications we can't have any human
 

00:01:05.939 --> 00:01:08.390 align:start position:0%
applications we can't have any human
hack<00:01:06.119><c> activity</c><00:01:06.720><c> today</c><00:01:06.990><c> that</c><00:01:07.830><c> doesn't</c><00:01:08.100><c> involve</c>

00:01:08.390 --> 00:01:08.400 align:start position:0%
hack activity today that doesn't involve
 

00:01:08.400 --> 00:01:10.070 align:start position:0%
hack activity today that doesn't involve
computer<00:01:08.820><c> applications</c><00:01:09.420><c> that</c><00:01:09.540><c> was</c><00:01:09.659><c> not</c><00:01:09.900><c> the</c>

00:01:10.070 --> 00:01:10.080 align:start position:0%
computer applications that was not the
 

00:01:10.080 --> 00:01:12.080 align:start position:0%
computer applications that was not the
case<00:01:10.229><c> of</c><00:01:10.409><c> course</c><00:01:10.619><c> a</c><00:01:10.710><c> few</c><00:01:10.860><c> decades</c><00:01:11.040><c> ago</c><00:01:11.340><c> and</c>

00:01:12.080 --> 00:01:12.090 align:start position:0%
case of course a few decades ago and
 

00:01:12.090 --> 00:01:13.580 align:start position:0%
case of course a few decades ago and
then<00:01:12.240><c> of</c><00:01:12.330><c> course</c><00:01:12.360><c> when</c><00:01:12.990><c> it</c><00:01:13.080><c> comes</c><00:01:13.260><c> to</c><00:01:13.409><c> writing</c>

00:01:13.580 --> 00:01:13.590 align:start position:0%
then of course when it comes to writing
 

00:01:13.590 --> 00:01:16.010 align:start position:0%
then of course when it comes to writing
code<00:01:13.740><c> there</c><00:01:14.460><c> are</c><00:01:14.490><c> two</c><00:01:14.729><c> kinds</c><00:01:15.210><c> of</c><00:01:15.299><c> complexity</c>

00:01:16.010 --> 00:01:16.020 align:start position:0%
code there are two kinds of complexity
 

00:01:16.020 --> 00:01:18.859 align:start position:0%
code there are two kinds of complexity
that<00:01:16.530><c> every</c><00:01:17.009><c> one</c><00:01:17.280><c> of</c><00:01:17.310><c> us</c><00:01:17.549><c> deal</c><00:01:17.909><c> with</c><00:01:18.119><c> one</c><00:01:18.840><c> of</c>

00:01:18.859 --> 00:01:18.869 align:start position:0%
that every one of us deal with one of
 

00:01:18.869 --> 00:01:20.840 align:start position:0%
that every one of us deal with one of
them<00:01:19.080><c> is</c><00:01:19.290><c> inherent</c><00:01:19.890><c> complexity</c><00:01:20.549><c> inherent</c>

00:01:20.840 --> 00:01:20.850 align:start position:0%
them is inherent complexity inherent
 

00:01:20.850 --> 00:01:23.630 align:start position:0%
them is inherent complexity inherent
complexity<00:01:21.570><c> is</c><00:01:21.869><c> the</c><00:01:22.470><c> complexity</c><00:01:22.950><c> at</c><00:01:23.250><c> the</c><00:01:23.400><c> root</c>

00:01:23.630 --> 00:01:23.640 align:start position:0%
complexity is the complexity at the root
 

00:01:23.640 --> 00:01:26.390 align:start position:0%
complexity is the complexity at the root
of<00:01:23.790><c> the</c><00:01:24.060><c> application</c><00:01:24.720><c> the</c><00:01:24.840><c> domain</c><00:01:25.200><c> and</c><00:01:25.500><c> on</c><00:01:26.159><c> the</c>

00:01:26.390 --> 00:01:26.400 align:start position:0%
of the application the domain and on the
 

00:01:26.400 --> 00:01:28.550 align:start position:0%
of the application the domain and on the
other<00:01:26.520><c> hand</c><00:01:26.820><c> a</c><00:01:27.119><c> lot</c><00:01:27.630><c> of</c><00:01:27.780><c> things</c><00:01:27.990><c> what</c><00:01:28.229><c> we</c><00:01:28.380><c> deal</c>

00:01:28.550 --> 00:01:28.560 align:start position:0%
other hand a lot of things what we deal
 

00:01:28.560 --> 00:01:30.530 align:start position:0%
other hand a lot of things what we deal
with<00:01:28.590><c> is</c><00:01:28.920><c> also</c><00:01:29.369><c> known</c><00:01:29.520><c> as</c><00:01:29.670><c> the</c><00:01:29.850><c> accidental</c>

00:01:30.530 --> 00:01:30.540 align:start position:0%
with is also known as the accidental
 

00:01:30.540 --> 00:01:33.649 align:start position:0%
with is also known as the accidental
complexity<00:01:31.579><c> unfortunately</c><00:01:32.579><c> though</c><00:01:32.850><c> while</c><00:01:33.479><c> we</c>

00:01:33.649 --> 00:01:33.659 align:start position:0%
complexity unfortunately though while we
 

00:01:33.659 --> 00:01:35.210 align:start position:0%
complexity unfortunately though while we
cannot<00:01:33.930><c> get</c><00:01:34.259><c> rid</c><00:01:34.290><c> of</c><00:01:34.560><c> the</c><00:01:34.770><c> inherent</c>

00:01:35.210 --> 00:01:35.220 align:start position:0%
cannot get rid of the inherent
 

00:01:35.220 --> 00:01:37.819 align:start position:0%
cannot get rid of the inherent
complexity<00:01:35.700><c> a</c><00:01:36.030><c> lot</c><00:01:36.299><c> of</c><00:01:36.720><c> what</c><00:01:36.869><c> we</c><00:01:37.079><c> struggle</c>

00:01:37.819 --> 00:01:37.829 align:start position:0%
complexity a lot of what we struggle
 

00:01:37.829 --> 00:01:39.830 align:start position:0%
complexity a lot of what we struggle
with<00:01:37.979><c> every</c><00:01:38.280><c> single</c><00:01:38.640><c> day</c><00:01:38.790><c> is</c><00:01:39.060><c> accidental</c>

00:01:39.830 --> 00:01:39.840 align:start position:0%
with every single day is accidental
 

00:01:39.840 --> 00:01:41.660 align:start position:0%
with every single day is accidental
complexity<00:01:40.290><c> I'm</c><00:01:40.799><c> going</c><00:01:41.100><c> to</c><00:01:41.159><c> make</c><00:01:41.280><c> the</c><00:01:41.400><c> claim</c>

00:01:41.660 --> 00:01:41.670 align:start position:0%
complexity I'm going to make the claim
 

00:01:41.670 --> 00:01:44.179 align:start position:0%
complexity I'm going to make the claim
that<00:01:42.170><c> imperative</c><00:01:43.170><c> style</c><00:01:43.470><c> of</c><00:01:43.590><c> programming</c><00:01:43.740><c> is</c>

00:01:44.179 --> 00:01:44.189 align:start position:0%
that imperative style of programming is
 

00:01:44.189 --> 00:01:46.880 align:start position:0%
that imperative style of programming is
inherently<00:01:44.850><c> complex</c><00:01:45.299><c> what</c><00:01:46.290><c> as</c><00:01:46.439><c> functional</c>

00:01:46.880 --> 00:01:46.890 align:start position:0%
inherently complex what as functional
 

00:01:46.890 --> 00:01:49.100 align:start position:0%
inherently complex what as functional
programming<00:01:47.250><c> has</c><00:01:47.640><c> removed</c><00:01:48.270><c> that</c><00:01:48.450><c> accidental</c>

00:01:49.100 --> 00:01:49.110 align:start position:0%
programming has removed that accidental
 

00:01:49.110 --> 00:01:51.260 align:start position:0%
programming has removed that accidental
complexity<00:01:49.590><c> from</c><00:01:50.220><c> our</c><00:01:50.340><c> shoulders</c><00:01:50.640><c> that's</c><00:01:51.060><c> one</c>

00:01:51.260 --> 00:01:51.270 align:start position:0%
complexity from our shoulders that's one
 

00:01:51.270 --> 00:01:53.090 align:start position:0%
complexity from our shoulders that's one
of<00:01:51.360><c> the</c><00:01:51.420><c> reasons</c><00:01:51.720><c> why</c><00:01:51.930><c> this</c><00:01:52.590><c> is</c><00:01:52.829><c> a</c><00:01:52.860><c> better</c>

00:01:53.090 --> 00:01:53.100 align:start position:0%
of the reasons why this is a better
 

00:01:53.100 --> 00:01:55.310 align:start position:0%
of the reasons why this is a better
programming<00:01:53.490><c> model</c><00:01:53.939><c> for</c><00:01:54.240><c> a</c><00:01:54.479><c> lot</c><00:01:54.840><c> of</c><00:01:54.869><c> stuff</c><00:01:55.140><c> we</c>

00:01:55.310 --> 00:01:55.320 align:start position:0%
programming model for a lot of stuff we
 

00:01:55.320 --> 00:01:57.230 align:start position:0%
programming model for a lot of stuff we
can<00:01:55.500><c> do</c><00:01:55.680><c> and</c><00:01:56.280><c> of</c><00:01:56.399><c> course</c><00:01:56.670><c> with</c>

00:01:57.230 --> 00:01:57.240 align:start position:0%
can do and of course with
 

00:01:57.240 --> 00:01:58.940 align:start position:0%
can do and of course with
object-oriented<00:01:57.930><c> programming</c><00:01:58.320><c> one</c><00:01:58.770><c> of</c><00:01:58.860><c> the</c>

00:01:58.940 --> 00:01:58.950 align:start position:0%
object-oriented programming one of the
 

00:01:58.950 --> 00:02:01.580 align:start position:0%
object-oriented programming one of the
things<00:01:59.159><c> we</c><00:01:59.280><c> quickly</c><00:01:59.790><c> run</c><00:02:00.000><c> into</c><00:02:00.210><c> is</c><00:02:00.689><c> that</c><00:02:01.020><c> it</c>

00:02:01.580 --> 00:02:01.590 align:start position:0%
things we quickly run into is that it
 

00:02:01.590 --> 00:02:03.830 align:start position:0%
things we quickly run into is that it
doesn't<00:02:01.950><c> quite</c><00:02:02.250><c> deal</c><00:02:02.579><c> with</c><00:02:02.790><c> mutable</c><00:02:03.360><c> state</c><00:02:03.630><c> a</c>

00:02:03.830 --> 00:02:03.840 align:start position:0%
doesn't quite deal with mutable state a
 

00:02:03.840 --> 00:02:06.109 align:start position:0%
doesn't quite deal with mutable state a
very<00:02:04.140><c> well</c><00:02:04.439><c> and</c><00:02:04.710><c> shared</c><00:02:05.579><c> mutable</c><00:02:05.790><c> but</c><00:02:06.030><c> it</c>

00:02:06.109 --> 00:02:06.119 align:start position:0%
very well and shared mutable but it
 

00:02:06.119 --> 00:02:08.150 align:start position:0%
very well and shared mutable but it
becomes<00:02:06.299><c> really</c><00:02:06.659><c> a</c><00:02:06.810><c> problem</c><00:02:07.140><c> and</c><00:02:07.439><c> of</c><00:02:07.920><c> course</c>

00:02:08.150 --> 00:02:08.160 align:start position:0%
becomes really a problem and of course
 

00:02:08.160 --> 00:02:10.010 align:start position:0%
becomes really a problem and of course
with<00:02:08.340><c> emergence</c><00:02:08.819><c> of</c><00:02:08.879><c> multi-core</c><00:02:09.179><c> processors</c>

00:02:10.010 --> 00:02:10.020 align:start position:0%
with emergence of multi-core processors
 

00:02:10.020 --> 00:02:12.580 align:start position:0%
with emergence of multi-core processors
we<00:02:10.709><c> no</c><00:02:10.890><c> longer</c><00:02:10.920><c> are</c><00:02:11.370><c> really</c><00:02:11.790><c> dealing</c>

00:02:12.580 --> 00:02:12.590 align:start position:0%
we no longer are really dealing
 

00:02:12.590 --> 00:02:14.050 align:start position:0%
we no longer are really dealing
with<00:02:12.769><c> multiple</c><00:02:13.069><c> threads</c><00:02:13.580><c> running</c><00:02:13.940><c> on</c><00:02:14.030><c> a</c>

00:02:14.050 --> 00:02:14.060 align:start position:0%
with multiple threads running on a
 

00:02:14.060 --> 00:02:16.199 align:start position:0%
with multiple threads running on a
single<00:02:14.420><c> machine</c><00:02:14.569><c> or</c><00:02:15.080><c> a</c><00:02:15.110><c> single</c><00:02:15.440><c> processor</c>

00:02:16.199 --> 00:02:16.209 align:start position:0%
single machine or a single processor
 

00:02:16.209 --> 00:02:18.309 align:start position:0%
single machine or a single processor
multi-threading<00:02:17.209><c> shears</c><00:02:17.510><c> truly</c><00:02:18.170><c> is</c>

00:02:18.309 --> 00:02:18.319 align:start position:0%
multi-threading shears truly is
 

00:02:18.319 --> 00:02:20.259 align:start position:0%
multi-threading shears truly is
multi-threaded<00:02:18.709><c> where</c><00:02:19.670><c> multiple</c><00:02:20.090><c> threads</c>

00:02:20.259 --> 00:02:20.269 align:start position:0%
multi-threaded where multiple threads
 

00:02:20.269 --> 00:02:22.780 align:start position:0%
multi-threaded where multiple threads
can<00:02:20.480><c> and</c><00:02:20.720><c> run</c><00:02:21.019><c> and</c><00:02:21.530><c> of</c><00:02:21.739><c> course</c><00:02:21.950><c> a</c><00:02:22.129><c> program</c><00:02:22.610><c> that</c>

00:02:22.780 --> 00:02:22.790 align:start position:0%
can and run and of course a program that
 

00:02:22.790 --> 00:02:24.220 align:start position:0%
can and run and of course a program that
may<00:02:22.879><c> pretend</c><00:02:23.300><c> to</c><00:02:23.480><c> work</c><00:02:23.599><c> correctly</c><00:02:24.080><c> on</c><00:02:24.200><c> a</c>

00:02:24.220 --> 00:02:24.230 align:start position:0%
may pretend to work correctly on a
 

00:02:24.230 --> 00:02:26.140 align:start position:0%
may pretend to work correctly on a
single<00:02:24.560><c> core</c><00:02:24.800><c> may</c><00:02:25.400><c> actually</c><00:02:25.610><c> end</c><00:02:25.970><c> up</c><00:02:26.090><c> being</c>

00:02:26.140 --> 00:02:26.150 align:start position:0%
single core may actually end up being
 

00:02:26.150 --> 00:02:28.900 align:start position:0%
single core may actually end up being
broken<00:02:26.780><c> on</c><00:02:26.900><c> a</c><00:02:26.930><c> multi-core</c><00:02:27.440><c> processor</c><00:02:28.010><c> so</c><00:02:28.640><c> how</c>

00:02:28.900 --> 00:02:28.910 align:start position:0%
broken on a multi-core processor so how
 

00:02:28.910 --> 00:02:31.270 align:start position:0%
broken on a multi-core processor so how
do<00:02:28.970><c> we</c><00:02:29.060><c> manage</c><00:02:29.390><c> some</c><00:02:29.750><c> of</c><00:02:29.780><c> these</c><00:02:30.019><c> use</c><00:02:30.530><c> well</c><00:02:31.069><c> one</c>

00:02:31.270 --> 00:02:31.280 align:start position:0%
do we manage some of these use well one
 

00:02:31.280 --> 00:02:33.729 align:start position:0%
do we manage some of these use well one
of<00:02:31.370><c> the</c><00:02:31.519><c> biggest</c><00:02:32.060><c> problems</c><00:02:32.480><c> is</c><00:02:32.690><c> mutable</c><00:02:33.349><c> state</c>

00:02:33.729 --> 00:02:33.739 align:start position:0%
of the biggest problems is mutable state
 

00:02:33.739 --> 00:02:34.570 align:start position:0%
of the biggest problems is mutable state
well

00:02:34.570 --> 00:02:34.580 align:start position:0%
well
 

00:02:34.580 --> 00:02:36.699 align:start position:0%
well
mutability<00:02:34.970><c> is</c><00:02:35.330><c> something</c><00:02:35.690><c> almost</c><00:02:35.840><c> everyone</c>

00:02:36.699 --> 00:02:36.709 align:start position:0%
mutability is something almost everyone
 

00:02:36.709 --> 00:02:39.100 align:start position:0%
mutability is something almost everyone
here<00:02:36.950><c> has</c><00:02:37.160><c> done</c><00:02:37.489><c> and</c><00:02:37.849><c> we</c><00:02:38.330><c> don't</c><00:02:38.480><c> feel</c><00:02:38.720><c> really</c>

00:02:39.100 --> 00:02:39.110 align:start position:0%
here has done and we don't feel really
 

00:02:39.110 --> 00:02:41.170 align:start position:0%
here has done and we don't feel really
that<00:02:39.290><c> bad</c><00:02:39.590><c> about</c><00:02:39.769><c> mutability</c><00:02:40.370><c> so</c><00:02:40.700><c> mutability</c>

00:02:41.170 --> 00:02:41.180 align:start position:0%
that bad about mutability so mutability
 

00:02:41.180 --> 00:02:44.199 align:start position:0%
that bad about mutability so mutability
is<00:02:41.390><c> okay</c><00:02:41.930><c> what</c><00:02:42.680><c> about</c><00:02:42.769><c> sharing</c><00:02:43.580><c> well</c><00:02:43.790><c> sharing</c>

00:02:44.199 --> 00:02:44.209 align:start position:0%
is okay what about sharing well sharing
 

00:02:44.209 --> 00:02:45.819 align:start position:0%
is okay what about sharing well sharing
is<00:02:44.330><c> a</c><00:02:44.360><c> good</c><00:02:44.660><c> thing</c><00:02:44.840><c> remember</c><00:02:45.170><c> what</c><00:02:45.349><c> mom</c><00:02:45.560><c> told</c>

00:02:45.819 --> 00:02:45.829 align:start position:0%
is a good thing remember what mom told
 

00:02:45.829 --> 00:02:48.580 align:start position:0%
is a good thing remember what mom told
us<00:02:46.010><c> to</c><00:02:46.430><c> share</c><00:02:46.760><c> so</c><00:02:47.450><c> mutability</c><00:02:48.049><c> is</c><00:02:48.200><c> okay</c>

00:02:48.580 --> 00:02:48.590 align:start position:0%
us to share so mutability is okay
 

00:02:48.590 --> 00:02:51.250 align:start position:0%
us to share so mutability is okay
sharing<00:02:49.010><c> is</c><00:02:49.130><c> good</c><00:02:49.400><c> but</c><00:02:50.060><c> shared</c><00:02:50.480><c> notability</c><00:02:51.110><c> is</c>

00:02:51.250 --> 00:02:51.260 align:start position:0%
sharing is good but shared notability is
 

00:02:51.260 --> 00:02:53.380 align:start position:0%
sharing is good but shared notability is
devil's<00:02:51.739><c> work</c><00:02:52.040><c> the</c><00:02:52.400><c> minute</c><00:02:52.730><c> we</c><00:02:52.880><c> bring</c><00:02:53.150><c> shared</c>

00:02:53.380 --> 00:02:53.390 align:start position:0%
devil's work the minute we bring shared
 

00:02:53.390 --> 00:02:55.360 align:start position:0%
devil's work the minute we bring shared
mutability<00:02:53.810><c> a</c><00:02:54.140><c> lot</c><00:02:54.680><c> of</c><00:02:54.799><c> things</c><00:02:55.010><c> can</c><00:02:55.160><c> go</c><00:02:55.340><c> wrong</c>

00:02:55.360 --> 00:02:55.370 align:start position:0%
mutability a lot of things can go wrong
 

00:02:55.370 --> 00:02:58.300 align:start position:0%
mutability a lot of things can go wrong
comes<00:02:56.090><c> really</c><00:02:56.329><c> hard</c><00:02:56.599><c> one</c><00:02:57.230><c> of</c><00:02:57.319><c> them</c><00:02:57.470><c> is</c><00:02:57.829><c> it's</c><00:02:58.129><c> a</c>

00:02:58.300 --> 00:02:58.310 align:start position:0%
comes really hard one of them is it's a
 

00:02:58.310 --> 00:03:00.759 align:start position:0%
comes really hard one of them is it's a
very<00:02:58.549><c> highly</c><00:02:58.819><c> error-prone</c><00:02:59.569><c> code</c><00:02:59.959><c> i</c><00:03:00.170><c> remember</c>

00:03:00.759 --> 00:03:00.769 align:start position:0%
very highly error-prone code i remember
 

00:03:00.769 --> 00:03:02.410 align:start position:0%
very highly error-prone code i remember
day<00:03:01.010><c> when</c><00:03:01.280><c> a</c><00:03:01.430><c> developer</c><00:03:01.790><c> came</c><00:03:01.940><c> to</c><00:03:02.120><c> me</c><00:03:02.209><c> and</c><00:03:02.329><c> he</c>

00:03:02.410 --> 00:03:02.420 align:start position:0%
day when a developer came to me and he
 

00:03:02.420 --> 00:03:04.569 align:start position:0%
day when a developer came to me and he
said<00:03:02.690><c> well</c><00:03:03.230><c> this</c><00:03:03.410><c> code</c><00:03:03.650><c> over</c><00:03:03.829><c> here</c><00:03:04.190><c> is</c><00:03:04.400><c> not</c>

00:03:04.569 --> 00:03:04.579 align:start position:0%
said well this code over here is not
 

00:03:04.579 --> 00:03:06.160 align:start position:0%
said well this code over here is not
working<00:03:05.000><c> can</c><00:03:05.150><c> you</c><00:03:05.239><c> take</c><00:03:05.420><c> a</c><00:03:05.450><c> look</c><00:03:05.599><c> at</c><00:03:05.780><c> it</c><00:03:05.900><c> to</c><00:03:06.049><c> be</c>

00:03:06.160 --> 00:03:06.170 align:start position:0%
working can you take a look at it to be
 

00:03:06.170 --> 00:03:08.559 align:start position:0%
working can you take a look at it to be
fair<00:03:06.440><c> it</c><00:03:06.560><c> was</c><00:03:06.739><c> not</c><00:03:07.010><c> a</c><00:03:07.280><c> very</c><00:03:07.700><c> long</c><00:03:08.150><c> piece</c><00:03:08.420><c> of</c>

00:03:08.559 --> 00:03:08.569 align:start position:0%
fair it was not a very long piece of
 

00:03:08.569 --> 00:03:10.509 align:start position:0%
fair it was not a very long piece of
code<00:03:08.780><c> and</c><00:03:09.019><c> and</c><00:03:09.560><c> I</c><00:03:09.650><c> looked</c><00:03:09.860><c> at</c><00:03:09.980><c> it</c><00:03:10.099><c> quickly</c><00:03:10.250><c> and</c>

00:03:10.509 --> 00:03:10.519 align:start position:0%
code and and I looked at it quickly and
 

00:03:10.519 --> 00:03:11.920 align:start position:0%
code and and I looked at it quickly and
I<00:03:10.579><c> said</c><00:03:10.790><c> if</c><00:03:10.879><c> you</c><00:03:10.940><c> send</c><00:03:11.180><c> this</c><00:03:11.269><c> input</c><00:03:11.510><c> it</c><00:03:11.810><c> should</c>

00:03:11.920 --> 00:03:11.930 align:start position:0%
I said if you send this input it should
 

00:03:11.930 --> 00:03:13.089 align:start position:0%
I said if you send this input it should
give<00:03:12.079><c> you</c><00:03:12.170><c> this</c><00:03:12.319><c> output</c><00:03:12.769><c> is</c><00:03:12.860><c> that</c><00:03:12.980><c> I</c><00:03:13.010><c> know</c>

00:03:13.089 --> 00:03:13.099 align:start position:0%
give you this output is that I know
 

00:03:13.099 --> 00:03:15.520 align:start position:0%
give you this output is that I know
right<00:03:13.459><c> but</c><00:03:13.849><c> it</c><00:03:13.970><c> doesn't</c><00:03:14.150><c> so</c><00:03:14.900><c> we</c><00:03:15.049><c> both</c><00:03:15.319><c> were</c>

00:03:15.520 --> 00:03:15.530 align:start position:0%
right but it doesn't so we both were
 

00:03:15.530 --> 00:03:17.050 align:start position:0%
right but it doesn't so we both were
straighting<00:03:16.010><c> staring</c><00:03:16.430><c> at</c><00:03:16.549><c> it</c><00:03:16.670><c> like</c><00:03:16.700><c> we</c><00:03:16.970><c> are</c>

00:03:17.050 --> 00:03:17.060 align:start position:0%
straighting staring at it like we are
 

00:03:17.060 --> 00:03:19.150 align:start position:0%
straighting staring at it like we are
stupid<00:03:17.269><c> and</c><00:03:17.660><c> after</c><00:03:18.170><c> a</c><00:03:18.200><c> few</c><00:03:18.470><c> minutes</c><00:03:18.650><c> I</c><00:03:18.889><c> said</c>

00:03:19.150 --> 00:03:19.160 align:start position:0%
stupid and after a few minutes I said
 

00:03:19.160 --> 00:03:21.250 align:start position:0%
stupid and after a few minutes I said
wait<00:03:19.400><c> did</c><00:03:19.639><c> you</c><00:03:19.730><c> really</c><00:03:20.000><c> mean</c><00:03:20.389><c> to</c><00:03:20.540><c> change</c><00:03:20.900><c> the</c>

00:03:21.250 --> 00:03:21.260 align:start position:0%
wait did you really mean to change the
 

00:03:21.260 --> 00:03:23.650 align:start position:0%
wait did you really mean to change the
input<00:03:22.190><c> given</c><00:03:22.340><c> to</c><00:03:22.609><c> this</c><00:03:22.730><c> function</c><00:03:22.970><c> on</c><00:03:23.359><c> this</c>

00:03:23.650 --> 00:03:23.660 align:start position:0%
input given to this function on this
 

00:03:23.660 --> 00:03:26.080 align:start position:0%
input given to this function on this
line<00:03:23.870><c> number</c><00:03:24.109><c> seven</c><00:03:24.620><c> he</c><00:03:25.370><c> thought</c><00:03:25.850><c> for</c><00:03:26.030><c> a</c>

00:03:26.080 --> 00:03:26.090 align:start position:0%
line number seven he thought for a
 

00:03:26.090 --> 00:03:27.580 align:start position:0%
line number seven he thought for a
second<00:03:26.420><c> and</c><00:03:26.480><c> he</c><00:03:26.569><c> said</c><00:03:26.780><c> I'm</c><00:03:26.870><c> stupid</c><00:03:27.410><c> and</c><00:03:27.530><c> he</c>

00:03:27.580 --> 00:03:27.590 align:start position:0%
second and he said I'm stupid and he
 

00:03:27.590 --> 00:03:29.740 align:start position:0%
second and he said I'm stupid and he
walked<00:03:27.799><c> away</c><00:03:27.950><c> well</c><00:03:28.730><c> a</c><00:03:29.030><c> lot</c><00:03:29.209><c> of</c><00:03:29.329><c> times</c><00:03:29.510><c> we</c><00:03:29.630><c> don't</c>

00:03:29.740 --> 00:03:29.750 align:start position:0%
walked away well a lot of times we don't
 

00:03:29.750 --> 00:03:32.470 align:start position:0%
walked away well a lot of times we don't
think<00:03:30.049><c> about</c><00:03:30.260><c> modifying</c><00:03:30.950><c> variables</c><00:03:31.489><c> it's</c>

00:03:32.470 --> 00:03:32.480 align:start position:0%
think about modifying variables it's
 

00:03:32.480 --> 00:03:34.599 align:start position:0%
think about modifying variables it's
really<00:03:32.840><c> hard</c><00:03:33.049><c> it</c><00:03:33.290><c> becomes</c><00:03:33.709><c> error-prone</c><00:03:34.310><c> over</c>

00:03:34.599 --> 00:03:34.609 align:start position:0%
really hard it becomes error-prone over
 

00:03:34.609 --> 00:03:36.699 align:start position:0%
really hard it becomes error-prone over
time<00:03:34.819><c> the</c><00:03:35.389><c> code</c><00:03:35.630><c> is</c><00:03:35.780><c> really</c><00:03:35.989><c> hard</c><00:03:36.319><c> to</c><00:03:36.380><c> reason</c>

00:03:36.699 --> 00:03:36.709 align:start position:0%
time the code is really hard to reason
 

00:03:36.709 --> 00:03:38.589 align:start position:0%
time the code is really hard to reason
as<00:03:37.099><c> well</c><00:03:37.430><c> we're</c><00:03:37.639><c> struggling</c><00:03:38.120><c> to</c><00:03:38.329><c> really</c>

00:03:38.589 --> 00:03:38.599 align:start position:0%
as well we're struggling to really
 

00:03:38.599 --> 00:03:40.780 align:start position:0%
as well we're struggling to really
understand<00:03:39.109><c> how</c><00:03:39.620><c> this</c><00:03:39.859><c> code</c><00:03:40.069><c> actually</c><00:03:40.280><c> works</c>

00:03:40.780 --> 00:03:40.790 align:start position:0%
understand how this code actually works
 

00:03:40.790 --> 00:03:42.879 align:start position:0%
understand how this code actually works
and<00:03:41.120><c> to</c><00:03:41.569><c> explain</c><00:03:41.959><c> the</c><00:03:42.109><c> code</c><00:03:42.290><c> also</c><00:03:42.470><c> becomes</c>

00:03:42.879 --> 00:03:42.889 align:start position:0%
and to explain the code also becomes
 

00:03:42.889 --> 00:03:44.740 align:start position:0%
and to explain the code also becomes
very<00:03:43.069><c> difficult</c><00:03:43.280><c> in</c><00:03:43.609><c> other</c><00:03:43.730><c> words</c><00:03:44.000><c> the</c><00:03:44.540><c> more</c>

00:03:44.740 --> 00:03:44.750 align:start position:0%
very difficult in other words the more
 

00:03:44.750 --> 00:03:47.229 align:start position:0%
very difficult in other words the more
state<00:03:45.139><c> change</c><00:03:45.530><c> we</c><00:03:45.709><c> have</c><00:03:45.919><c> in</c><00:03:46.099><c> code</c><00:03:46.370><c> the</c><00:03:46.910><c> really</c>

00:03:47.229 --> 00:03:47.239 align:start position:0%
state change we have in code the really
 

00:03:47.239 --> 00:03:49.059 align:start position:0%
state change we have in code the really
hard<00:03:47.450><c> it</c><00:03:47.569><c> is</c><00:03:47.690><c> to</c><00:03:47.959><c> read</c><00:03:48.109><c> a</c><00:03:48.319><c> reason</c><00:03:48.739><c> with</c><00:03:48.950><c> that</c>

00:03:49.059 --> 00:03:49.069 align:start position:0%
hard it is to read a reason with that
 

00:03:49.069 --> 00:03:51.699 align:start position:0%
hard it is to read a reason with that
code<00:03:49.250><c> and</c><00:03:49.819><c> of</c><00:03:49.910><c> course</c><00:03:50.180><c> wait</c><00:03:51.079><c> until</c><00:03:51.380><c> somebody</c>

00:03:51.699 --> 00:03:51.709 align:start position:0%
code and of course wait until somebody
 

00:03:51.709 --> 00:03:53.409 align:start position:0%
code and of course wait until somebody
tells<00:03:51.859><c> you</c><00:03:52.010><c> to</c><00:03:52.099><c> make</c><00:03:52.220><c> that</c><00:03:52.400><c> code</c><00:03:52.579><c> concurrent</c>

00:03:53.409 --> 00:03:53.419 align:start position:0%
tells you to make that code concurrent
 

00:03:53.419 --> 00:03:55.629 align:start position:0%
tells you to make that code concurrent
and<00:03:53.660><c> making</c><00:03:54.530><c> such</c><00:03:54.709><c> a</c><00:03:54.739><c> code</c><00:03:55.040><c> concurrent</c><00:03:55.549><c> is</c>

00:03:55.629 --> 00:03:55.639 align:start position:0%
and making such a code concurrent is
 

00:03:55.639 --> 00:03:57.670 align:start position:0%
and making such a code concurrent is
incredibly<00:03:56.389><c> difficult</c><00:03:56.630><c> in</c><00:03:57.139><c> fact</c><00:03:57.349><c> one</c><00:03:57.560><c> of</c><00:03:57.590><c> the</c>

00:03:57.670 --> 00:03:57.680 align:start position:0%
incredibly difficult in fact one of the
 

00:03:57.680 --> 00:04:00.190 align:start position:0%
incredibly difficult in fact one of the
really<00:03:58.340><c> big</c><00:03:58.489><c> problems</c><00:03:58.819><c> we</c><00:03:58.940><c> deal</c><00:03:59.180><c> with</c><00:03:59.209><c> is</c><00:03:59.660><c> the</c>

00:04:00.190 --> 00:04:00.200 align:start position:0%
really big problems we deal with is the
 

00:04:00.200 --> 00:04:02.259 align:start position:0%
really big problems we deal with is the
structure<00:04:00.680><c> of</c><00:04:00.709><c> the</c><00:04:00.950><c> code</c><00:04:01.190><c> is</c><00:04:01.430><c> very</c><00:04:01.459><c> different</c>

00:04:02.259 --> 00:04:02.269 align:start position:0%
structure of the code is very different
 

00:04:02.269 --> 00:04:04.150 align:start position:0%
structure of the code is very different
between<00:04:02.329><c> being</c><00:04:02.829><c> sequential</c><00:04:03.829><c> and</c><00:04:03.980><c> being</c>

00:04:04.150 --> 00:04:04.160 align:start position:0%
between being sequential and being
 

00:04:04.160 --> 00:04:06.610 align:start position:0%
between being sequential and being
concurrent<00:04:04.849><c> and</c><00:04:05.000><c> that</c><00:04:05.389><c> really</c><00:04:05.780><c> hurts</c><00:04:05.989><c> us</c><00:04:06.200><c> get</c>

00:04:06.610 --> 00:04:06.620 align:start position:0%
concurrent and that really hurts us get
 

00:04:06.620 --> 00:04:08.650 align:start position:0%
concurrent and that really hurts us get
performance<00:04:06.950><c> out</c><00:04:07.250><c> of</c><00:04:07.310><c> code</c><00:04:07.609><c> once</c><00:04:08.150><c> we</c><00:04:08.359><c> realize</c>

00:04:08.650 --> 00:04:08.660 align:start position:0%
performance out of code once we realize
 

00:04:08.660 --> 00:04:10.360 align:start position:0%
performance out of code once we realize
we<00:04:08.840><c> have</c><00:04:08.959><c> to</c><00:04:09.049><c> make</c><00:04:09.169><c> it</c><00:04:09.290><c> concurrent</c><00:04:09.470><c> well</c>

00:04:10.360 --> 00:04:10.370 align:start position:0%
we have to make it concurrent well
 

00:04:10.370 --> 00:04:12.460 align:start position:0%
we have to make it concurrent well
function<00:04:10.940><c> programming</c><00:04:11.120><c> solves</c><00:04:11.870><c> a</c><00:04:11.959><c> lot</c><00:04:12.319><c> of</c>

00:04:12.460 --> 00:04:12.470 align:start position:0%
function programming solves a lot of
 

00:04:12.470 --> 00:04:14.890 align:start position:0%
function programming solves a lot of
these<00:04:12.650><c> things</c><00:04:12.980><c> but</c><00:04:13.790><c> what</c><00:04:14.120><c> is</c><00:04:14.269><c> old</c><00:04:14.510><c> is</c><00:04:14.810><c> new</c>

00:04:14.890 --> 00:04:14.900 align:start position:0%
these things but what is old is new
 

00:04:14.900 --> 00:04:17.770 align:start position:0%
these things but what is old is new
again<00:04:15.260><c> in</c><00:04:15.859><c> fact</c><00:04:16.459><c> some</c><00:04:16.789><c> of</c><00:04:16.820><c> the</c><00:04:17.030><c> concepts</c><00:04:17.660><c> of</c>

00:04:17.770 --> 00:04:17.780 align:start position:0%
again in fact some of the concepts of
 

00:04:17.780 --> 00:04:19.060 align:start position:0%
again in fact some of the concepts of
function<00:04:18.079><c> programming</c><00:04:18.620><c> really</c><00:04:18.829><c> was</c>

00:04:19.060 --> 00:04:19.070 align:start position:0%
function programming really was
 

00:04:19.070 --> 00:04:23.380 align:start position:0%
function programming really was
introduced<00:04:19.609><c> way</c><00:04:20.329><c> back</c><00:04:20.780><c> in</c><00:04:21.109><c> 1929</c><00:04:21.859><c> 1930s</c><00:04:22.789><c> when</c>

00:04:23.380 --> 00:04:23.390 align:start position:0%
introduced way back in 1929 1930s when
 

00:04:23.390 --> 00:04:24.880 align:start position:0%
introduced way back in 1929 1930s when
the<00:04:23.539><c> lambda</c><00:04:23.870><c> calculus</c><00:04:23.900><c> console</c><00:04:24.770><c> was</c>

00:04:24.880 --> 00:04:24.890 align:start position:0%
the lambda calculus console was
 

00:04:24.890 --> 00:04:25.960 align:start position:0%
the lambda calculus console was
introduced

00:04:25.960 --> 00:04:25.970 align:start position:0%
introduced
 

00:04:25.970 --> 00:04:27.280 align:start position:0%
introduced
of<00:04:26.030><c> course</c><00:04:26.240><c> the</c><00:04:26.570><c> some</c><00:04:26.870><c> of</c><00:04:26.960><c> the</c><00:04:27.050><c> first</c>

00:04:27.280 --> 00:04:27.290 align:start position:0%
of course the some of the first
 

00:04:27.290 --> 00:04:29.260 align:start position:0%
of course the some of the first
programming<00:04:27.740><c> languages</c><00:04:28.340><c> actually</c><00:04:28.550><c> were</c>

00:04:29.260 --> 00:04:29.270 align:start position:0%
programming languages actually were
 

00:04:29.270 --> 00:04:31.480 align:start position:0%
programming languages actually were
functional<00:04:29.900><c> in</c><00:04:30.020><c> nature</c><00:04:30.050><c> so</c><00:04:30.920><c> this</c><00:04:31.100><c> is</c><00:04:31.190><c> not</c><00:04:31.460><c> a</c>

00:04:31.480 --> 00:04:31.490 align:start position:0%
functional in nature so this is not a
 

00:04:31.490 --> 00:04:33.850 align:start position:0%
functional in nature so this is not a
newfangled<00:04:32.000><c> idea</c><00:04:32.540><c> invented</c><00:04:33.140><c> yesterday</c><00:04:33.590><c> it</c>

00:04:33.850 --> 00:04:33.860 align:start position:0%
newfangled idea invented yesterday it
 

00:04:33.860 --> 00:04:35.470 align:start position:0%
newfangled idea invented yesterday it
has<00:04:34.220><c> been</c><00:04:34.370><c> around</c><00:04:34.580><c> for</c><00:04:34.820><c> a</c><00:04:34.850><c> very</c><00:04:34.910><c> long</c><00:04:35.450><c> time</c>

00:04:35.470 --> 00:04:35.480 align:start position:0%
has been around for a very long time
 

00:04:35.480 --> 00:04:38.680 align:start position:0%
has been around for a very long time
just<00:04:35.750><c> waiting</c><00:04:36.740><c> for</c><00:04:36.770><c> the</c><00:04:37.190><c> industry</c><00:04:38.150><c> to</c><00:04:38.180><c> grow</c><00:04:38.510><c> up</c>

00:04:38.680 --> 00:04:38.690 align:start position:0%
just waiting for the industry to grow up
 

00:04:38.690 --> 00:04:41.050 align:start position:0%
just waiting for the industry to grow up
to<00:04:38.840><c> make</c><00:04:38.990><c> use</c><00:04:39.170><c> of</c><00:04:39.200><c> some</c><00:04:39.530><c> of</c><00:04:39.560><c> these</c><00:04:39.770><c> ideas</c><00:04:40.280><c> but</c>

00:04:41.050 --> 00:04:41.060 align:start position:0%
to make use of some of these ideas but
 

00:04:41.060 --> 00:04:43.270 align:start position:0%
to make use of some of these ideas but
one<00:04:41.420><c> of</c><00:04:41.450><c> the</c><00:04:41.630><c> central</c><00:04:42.500><c> concepts</c><00:04:43.100><c> are</c>

00:04:43.270 --> 00:04:43.280 align:start position:0%
one of the central concepts are
 

00:04:43.280 --> 00:04:45.310 align:start position:0%
one of the central concepts are
functional<00:04:43.670><c> programming</c><00:04:44.060><c> is</c><00:04:44.450><c> assignment</c>

00:04:45.310 --> 00:04:45.320 align:start position:0%
functional programming is assignment
 

00:04:45.320 --> 00:04:47.860 align:start position:0%
functional programming is assignment
less<00:04:45.830><c> programming</c><00:04:46.430><c> you</c><00:04:47.210><c> may</c><00:04:47.330><c> say</c><00:04:47.570><c> wait</c><00:04:47.810><c> a</c>

00:04:47.860 --> 00:04:47.870 align:start position:0%
less programming you may say wait a
 

00:04:47.870 --> 00:04:49.840 align:start position:0%
less programming you may say wait a
second<00:04:48.380><c> are</c><00:04:48.590><c> you</c><00:04:48.650><c> out</c><00:04:49.190><c> of</c><00:04:49.220><c> your</c><00:04:49.430><c> mind</c>

00:04:49.840 --> 00:04:49.850 align:start position:0%
second are you out of your mind
 

00:04:49.850 --> 00:04:53.050 align:start position:0%
second are you out of your mind
how<00:04:50.270><c> could</c><00:04:50.630><c> you</c><00:04:50.780><c> program</c><00:04:51.260><c> no</c><00:04:51.860><c> assignments</c><00:04:52.610><c> so</c>

00:04:53.050 --> 00:04:53.060 align:start position:0%
how could you program no assignments so
 

00:04:53.060 --> 00:04:55.480 align:start position:0%
how could you program no assignments so
I<00:04:53.090><c> want</c><00:04:53.300><c> to</c><00:04:53.330><c> draw</c><00:04:53.510><c> a</c><00:04:53.720><c> parallel</c><00:04:54.380><c> to</c><00:04:54.410><c> this</c><00:04:54.770><c> so</c><00:04:55.340><c> we</c>

00:04:55.480 --> 00:04:55.490 align:start position:0%
I want to draw a parallel to this so we
 

00:04:55.490 --> 00:04:58.630 align:start position:0%
I want to draw a parallel to this so we
can<00:04:55.670><c> get</c><00:04:56.300><c> a</c><00:04:56.480><c> better</c><00:04:56.870><c> perspective</c><00:04:57.110><c> on</c><00:04:57.650><c> this</c><00:04:58.010><c> so</c>

00:04:58.630 --> 00:04:58.640 align:start position:0%
can get a better perspective on this so
 

00:04:58.640 --> 00:05:01.480 align:start position:0%
can get a better perspective on this so
if<00:04:58.790><c> you</c><00:04:58.940><c> really</c><00:04:59.180><c> look</c><00:04:59.540><c> back</c><00:04:59.750><c> in</c><00:04:59.960><c> time</c><00:05:00.280><c> back</c><00:05:01.280><c> in</c>

00:05:01.480 --> 00:05:01.490 align:start position:0%
if you really look back in time back in
 

00:05:01.490 --> 00:05:04.000 align:start position:0%
if you really look back in time back in
the<00:05:01.610><c> 60s</c><00:05:02.030><c> and</c><00:05:02.180><c> 70s</c><00:05:02.420><c> maybe</c><00:05:03.020><c> even</c><00:05:03.350><c> into</c><00:05:03.560><c> the</c><00:05:03.650><c> 80s</c>

00:05:04.000 --> 00:05:04.010 align:start position:0%
the 60s and 70s maybe even into the 80s
 

00:05:04.010 --> 00:05:06.520 align:start position:0%
the 60s and 70s maybe even into the 80s
one<00:05:04.730><c> of</c><00:05:04.820><c> the</c><00:05:04.880><c> things</c><00:05:05.090><c> we</c><00:05:05.270><c> really</c><00:05:05.870><c> focused</c><00:05:06.320><c> on</c>

00:05:06.520 --> 00:05:06.530 align:start position:0%
one of the things we really focused on
 

00:05:06.530 --> 00:05:10.120 align:start position:0%
one of the things we really focused on
is<00:05:07.040><c> that</c><00:05:07.400><c> four-letter</c><00:05:08.060><c> word</c><00:05:08.390><c> go-to</c><00:05:09.070><c> so</c><00:05:10.070><c> I'm</c>

00:05:10.120 --> 00:05:10.130 align:start position:0%
is that four-letter word go-to so I'm
 

00:05:10.130 --> 00:05:12.880 align:start position:0%
is that four-letter word go-to so I'm
going<00:05:10.340><c> to</c><00:05:10.370><c> say</c><00:05:10.580><c> go-to</c><00:05:11.360><c> is</c><00:05:11.810><c> too</c><00:05:12.170><c> structured</c>

00:05:12.880 --> 00:05:12.890 align:start position:0%
going to say go-to is too structured
 

00:05:12.890 --> 00:05:16.060 align:start position:0%
going to say go-to is too structured
programming<00:05:13.880><c> and</c><00:05:14.300><c> in</c><00:05:14.930><c> in</c><00:05:15.050><c> other</c><00:05:15.170><c> words</c><00:05:15.530><c> this</c>

00:05:16.060 --> 00:05:16.070 align:start position:0%
programming and in in other words this
 

00:05:16.070 --> 00:05:18.280 align:start position:0%
programming and in in other words this
is<00:05:16.250><c> something</c><00:05:16.580><c> we've</c><00:05:16.730><c> been</c><00:05:16.760><c> really</c><00:05:17.480><c> hammered</c>

00:05:18.280 --> 00:05:18.290 align:start position:0%
is something we've been really hammered
 

00:05:18.290 --> 00:05:21.640 align:start position:0%
is something we've been really hammered
with<00:05:18.560><c> is</c><00:05:18.830><c> not</c><00:05:19.820><c> to</c><00:05:20.060><c> use</c><00:05:20.270><c> go</c><00:05:20.630><c> tooth</c><00:05:20.900><c> let's</c>

00:05:21.640 --> 00:05:21.650 align:start position:0%
with is not to use go tooth let's
 

00:05:21.650 --> 00:05:23.890 align:start position:0%
with is not to use go tooth let's
entertain<00:05:22.010><c> the</c><00:05:22.280><c> thought</c><00:05:22.310><c> just</c><00:05:23.030><c> for</c><00:05:23.360><c> a</c><00:05:23.419><c> minute</c>

00:05:23.890 --> 00:05:23.900 align:start position:0%
entertain the thought just for a minute
 

00:05:23.900 --> 00:05:26.440 align:start position:0%
entertain the thought just for a minute
Here<00:05:24.320><c> I</c><00:05:24.350><c> am</c><00:05:24.470><c> in</c><00:05:24.740><c> Java</c><00:05:25.220><c> code</c><00:05:25.370><c> I'm</c><00:05:25.880><c> going</c><00:05:26.120><c> to</c><00:05:26.360><c> go</c>

00:05:26.440 --> 00:05:26.450 align:start position:0%
Here I am in Java code I'm going to go
 

00:05:26.450 --> 00:05:27.670 align:start position:0%
Here I am in Java code I'm going to go
ahead<00:05:26.510><c> and</c><00:05:26.720><c> call</c><00:05:26.900><c> a</c><00:05:26.930><c> little</c><00:05:27.380><c> thing</c><00:05:27.650><c> called</c>

00:05:27.670 --> 00:05:27.680 align:start position:0%
ahead and call a little thing called
 

00:05:27.680 --> 00:05:30.640 align:start position:0%
ahead and call a little thing called
blah<00:05:28.310><c> well</c><00:05:29.030><c> very</c><00:05:29.660><c> carefully</c><00:05:30.140><c> notice</c><00:05:30.470><c> what</c>

00:05:30.640 --> 00:05:30.650 align:start position:0%
blah well very carefully notice what
 

00:05:30.650 --> 00:05:33.970 align:start position:0%
blah well very carefully notice what
this<00:05:30.860><c> says</c><00:05:31.100><c> to</c><00:05:31.130><c> us</c><00:05:31.430><c> it</c><00:05:32.060><c> says</c><00:05:32.360><c> that</c><00:05:32.750><c> error</c><00:05:33.140><c> not</c><00:05:33.919><c> a</c>

00:05:33.970 --> 00:05:33.980 align:start position:0%
this says to us it says that error not a
 

00:05:33.980 --> 00:05:36.580 align:start position:0%
this says to us it says that error not a
statement<00:05:34.550><c> just</c><00:05:35.090><c> keep</c><00:05:35.240><c> that</c><00:05:35.360><c> in</c><00:05:35.419><c> mind</c><00:05:35.540><c> blah</c><00:05:36.320><c> is</c>

00:05:36.580 --> 00:05:36.590 align:start position:0%
statement just keep that in mind blah is
 

00:05:36.590 --> 00:05:38.500 align:start position:0%
statement just keep that in mind blah is
not<00:05:36.830><c> a</c><00:05:36.860><c> statement</c><00:05:37.250><c> well</c><00:05:37.880><c> I'm</c><00:05:37.970><c> going</c><00:05:38.150><c> to</c><00:05:38.180><c> change</c>

00:05:38.500 --> 00:05:38.510 align:start position:0%
not a statement well I'm going to change
 

00:05:38.510 --> 00:05:42.070 align:start position:0%
not a statement well I'm going to change
this<00:05:38.810><c> to</c><00:05:38.870><c> go</c><00:05:39.380><c> to</c><00:05:39.820><c> well</c><00:05:40.820><c> we</c><00:05:41.270><c> know</c><00:05:41.419><c> that</c><00:05:41.450><c> go-to</c><00:05:41.810><c> is</c>

00:05:42.070 --> 00:05:42.080 align:start position:0%
this to go to well we know that go-to is
 

00:05:42.080 --> 00:05:43.540 align:start position:0%
this to go to well we know that go-to is
evil<00:05:42.500><c> we</c><00:05:42.650><c> shouldn't</c><00:05:42.950><c> use</c><00:05:43.100><c> it</c><00:05:43.130><c> good</c><00:05:43.460><c> old</c>

00:05:43.540 --> 00:05:43.550 align:start position:0%
evil we shouldn't use it good old
 

00:05:43.550 --> 00:05:46.120 align:start position:0%
evil we shouldn't use it good old
Dijkstra<00:05:44.270><c> told</c><00:05:44.510><c> us</c><00:05:44.750><c> gotas</c><00:05:45.410><c> are</c><00:05:45.590><c> evil</c><00:05:46.010><c> don't</c>

00:05:46.120 --> 00:05:46.130 align:start position:0%
Dijkstra told us gotas are evil don't
 

00:05:46.130 --> 00:05:48.730 align:start position:0%
Dijkstra told us gotas are evil don't
use<00:05:46.430><c> it</c><00:05:46.700><c> so</c><00:05:47.120><c> I'm</c><00:05:47.180><c> using</c><00:05:47.360><c> go-to</c><00:05:47.750><c> here</c><00:05:48.200><c> in</c><00:05:48.320><c> Java</c>

00:05:48.730 --> 00:05:48.740 align:start position:0%
use it so I'm using go-to here in Java
 

00:05:48.740 --> 00:05:51.010 align:start position:0%
use it so I'm using go-to here in Java
but<00:05:49.400><c> when</c><00:05:49.520><c> I</c><00:05:49.550><c> run</c><00:05:49.790><c> it</c><00:05:50.060><c> notice</c><00:05:50.600><c> Java</c><00:05:50.870><c> doesn't</c>

00:05:51.010 --> 00:05:51.020 align:start position:0%
but when I run it notice Java doesn't
 

00:05:51.020 --> 00:05:54.240 align:start position:0%
but when I run it notice Java doesn't
say<00:05:51.380><c> not</c><00:05:51.800><c> a</c><00:05:51.860><c> statement</c><00:05:52.340><c> instead</c><00:05:53.330><c> Java</c><00:05:53.780><c> says</c>

00:05:54.240 --> 00:05:54.250 align:start position:0%
say not a statement instead Java says
 

00:05:54.250 --> 00:05:57.280 align:start position:0%
say not a statement instead Java says
illegal<00:05:55.250><c> start</c><00:05:55.940><c> of</c><00:05:56.060><c> expression</c><00:05:56.570><c> what</c><00:05:56.960><c> that</c>

00:05:57.280 --> 00:05:57.290 align:start position:0%
illegal start of expression what that
 

00:05:57.290 --> 00:06:00.820 align:start position:0%
illegal start of expression what that
mean<00:05:57.650><c> well</c><00:05:58.280><c> Java</c><00:05:58.850><c> says</c><00:05:59.210><c> go-to</c><00:05:59.780><c> is</c><00:06:00.140><c> a</c><00:06:00.169><c> valid</c>

00:06:00.820 --> 00:06:00.830 align:start position:0%
mean well Java says go-to is a valid
 

00:06:00.830 --> 00:06:04.030 align:start position:0%
mean well Java says go-to is a valid
keyword<00:06:01.370><c> but</c><00:06:02.000><c> I</c><00:06:02.030><c> dare</c><00:06:02.450><c> you</c><00:06:02.720><c> to</c><00:06:02.960><c> use</c><00:06:03.140><c> it</c><00:06:03.410><c> so</c><00:06:03.800><c> it's</c>

00:06:04.030 --> 00:06:04.040 align:start position:0%
keyword but I dare you to use it so it's
 

00:06:04.040 --> 00:06:05.620 align:start position:0%
keyword but I dare you to use it so it's
a<00:06:04.130><c> forbidden</c><00:06:04.400><c> keyword</c><00:06:05.030><c> they</c><00:06:05.210><c> don't</c><00:06:05.390><c> want</c><00:06:05.540><c> us</c>

00:06:05.620 --> 00:06:05.630 align:start position:0%
a forbidden keyword they don't want us
 

00:06:05.630 --> 00:06:08.020 align:start position:0%
a forbidden keyword they don't want us
to<00:06:05.660><c> use</c><00:06:05.990><c> the</c><00:06:06.200><c> keyword</c><00:06:06.590><c> okay</c><00:06:07.100><c> that's</c><00:06:07.460><c> great</c><00:06:07.790><c> but</c>

00:06:08.020 --> 00:06:08.030 align:start position:0%
to use the keyword okay that's great but
 

00:06:08.030 --> 00:06:10.120 align:start position:0%
to use the keyword okay that's great but
I<00:06:08.330><c> want</c><00:06:08.660><c> to</c><00:06:08.840><c> really</c><00:06:09.050><c> go</c><00:06:09.320><c> ahead</c><00:06:09.380><c> and</c><00:06:09.530><c> run</c><00:06:09.919><c> this</c>

00:06:10.120 --> 00:06:10.130 align:start position:0%
I want to really go ahead and run this
 

00:06:10.130 --> 00:06:11.620 align:start position:0%
I want to really go ahead and run this
little<00:06:10.310><c> code</c><00:06:10.640><c> I'm</c><00:06:10.970><c> going</c><00:06:11.180><c> to</c><00:06:11.240><c> take</c><00:06:11.360><c> a</c><00:06:11.390><c> very</c>

00:06:11.620 --> 00:06:11.630 align:start position:0%
little code I'm going to take a very
 

00:06:11.630 --> 00:06:14.200 align:start position:0%
little code I'm going to take a very
simple<00:06:11.990><c> example</c><00:06:12.200><c> here</c><00:06:12.890><c> well</c><00:06:13.460><c> we</c><00:06:13.729><c> know</c><00:06:13.910><c> that</c><00:06:14.090><c> we</c>

00:06:14.200 --> 00:06:14.210 align:start position:0%
simple example here well we know that we
 

00:06:14.210 --> 00:06:16.150 align:start position:0%
simple example here well we know that we
cannot<00:06:14.450><c> use</c><00:06:14.660><c> go-to</c><00:06:14.990><c> we</c><00:06:15.260><c> shouldn't</c><00:06:15.680><c> use</c><00:06:15.860><c> go-to</c>

00:06:16.150 --> 00:06:16.160 align:start position:0%
cannot use go-to we shouldn't use go-to
 

00:06:16.160 --> 00:06:18.130 align:start position:0%
cannot use go-to we shouldn't use go-to
if<00:06:16.669><c> somebody</c><00:06:17.060><c> even</c><00:06:17.180><c> suggest</c><00:06:17.630><c> using</c><00:06:17.780><c> go-to</c>

00:06:18.130 --> 00:06:18.140 align:start position:0%
if somebody even suggest using go-to
 

00:06:18.140 --> 00:06:20.409 align:start position:0%
if somebody even suggest using go-to
will<00:06:18.350><c> frown</c><00:06:18.620><c> on</c><00:06:18.650><c> them</c><00:06:19.070><c> all</c><00:06:19.250><c> that</c><00:06:19.460><c> is</c><00:06:19.490><c> great</c><00:06:19.880><c> but</c>

00:06:20.409 --> 00:06:20.419 align:start position:0%
will frown on them all that is great but
 

00:06:20.419 --> 00:06:22.510 align:start position:0%
will frown on them all that is great but
I'm<00:06:20.540><c> going</c><00:06:20.690><c> to</c><00:06:20.750><c> go</c><00:06:20.870><c> ahead</c><00:06:20.930><c> and</c><00:06:21.140><c> say</c><00:06:21.350><c> far</c><00:06:21.770><c> int</c><00:06:22.190><c> I</c>

00:06:22.510 --> 00:06:22.520 align:start position:0%
I'm going to go ahead and say far int I
 

00:06:22.520 --> 00:06:25.510 align:start position:0%
I'm going to go ahead and say far int I
equal<00:06:22.970><c> to</c><00:06:23.150><c> zero</c><00:06:23.510><c> I</c><00:06:23.630><c> less</c><00:06:23.720><c> than</c><00:06:24.080><c> 10</c><00:06:24.350><c> and</c><00:06:25.340><c> then</c>

00:06:25.510 --> 00:06:25.520 align:start position:0%
equal to zero I less than 10 and then
 

00:06:25.520 --> 00:06:27.040 align:start position:0%
equal to zero I less than 10 and then
I'm<00:06:25.610><c> going</c><00:06:25.790><c> to</c><00:06:25.850><c> of</c><00:06:26.000><c> course</c><00:06:26.180><c> just</c><00:06:26.630><c> do</c><00:06:26.750><c> a</c><00:06:26.780><c> very</c>

00:06:27.040 --> 00:06:27.050 align:start position:0%
I'm going to of course just do a very
 

00:06:27.050 --> 00:06:29.590 align:start position:0%
I'm going to of course just do a very
trivial<00:06:27.470><c> simple</c><00:06:28.070><c> loop</c><00:06:28.250><c> here</c><00:06:28.550><c> I</c><00:06:28.580><c> plus</c><00:06:29.000><c> plus</c><00:06:29.270><c> in</c>

00:06:29.590 --> 00:06:29.600 align:start position:0%
trivial simple loop here I plus plus in
 

00:06:29.600 --> 00:06:31.480 align:start position:0%
trivial simple loop here I plus plus in
this<00:06:30.050><c> case</c><00:06:30.110><c> of</c><00:06:30.410><c> course</c><00:06:30.440><c> I'm</c><00:06:30.919><c> going</c><00:06:31.040><c> to</c><00:06:31.100><c> say</c><00:06:31.250><c> if</c>

00:06:31.480 --> 00:06:31.490 align:start position:0%
this case of course I'm going to say if
 

00:06:31.490 --> 00:06:34.240 align:start position:0%
this case of course I'm going to say if
I<00:06:31.669><c> is</c><00:06:32.090><c> greater</c><00:06:32.419><c> than</c><00:06:32.510><c> 5</c><00:06:32.990><c> then</c><00:06:33.620><c> output</c><00:06:34.220><c> the</c>

00:06:34.240 --> 00:06:34.250 align:start position:0%
I is greater than 5 then output the
 

00:06:34.250 --> 00:06:36.880 align:start position:0%
I is greater than 5 then output the
variable<00:06:34.729><c> I</c><00:06:34.880><c> so</c><00:06:35.270><c> no</c><00:06:35.450><c> big</c><00:06:35.660><c> deal</c><00:06:35.840><c> at</c><00:06:35.960><c> all</c><00:06:36.050><c> but</c>

00:06:36.880 --> 00:06:36.890 align:start position:0%
variable I so no big deal at all but
 

00:06:36.890 --> 00:06:38.800 align:start position:0%
variable I so no big deal at all but
this<00:06:37.130><c> we</c><00:06:37.370><c> know</c><00:06:37.550><c> as</c><00:06:37.760><c> structured</c><00:06:38.330><c> programming</c>

00:06:38.800 --> 00:06:38.810 align:start position:0%
this we know as structured programming
 

00:06:38.810 --> 00:06:39.980 align:start position:0%
this we know as structured programming
it's<00:06:39.200><c> structured</c><00:06:39.560><c> program</c>

00:06:39.980 --> 00:06:39.990 align:start position:0%
it's structured program
 

00:06:39.990 --> 00:06:41.600 align:start position:0%
it's structured program
because<00:06:40.350><c> we</c><00:06:40.620><c> got</c><00:06:40.800><c> nice</c><00:06:41.009><c> structuring</c><00:06:41.490><c> of</c><00:06:41.550><c> the</c>

00:06:41.600 --> 00:06:41.610 align:start position:0%
because we got nice structuring of the
 

00:06:41.610 --> 00:06:43.670 align:start position:0%
because we got nice structuring of the
code<00:06:41.850><c> we</c><00:06:42.360><c> are</c><00:06:42.449><c> stacking</c><00:06:42.750><c> up</c><00:06:43.020><c> the</c><00:06:43.169><c> code</c><00:06:43.380><c> one</c>

00:06:43.670 --> 00:06:43.680 align:start position:0%
code we are stacking up the code one
 

00:06:43.680 --> 00:06:45.529 align:start position:0%
code we are stacking up the code one
after<00:06:44.130><c> the</c><00:06:44.250><c> other</c><00:06:44.280><c> and</c><00:06:44.759><c> there</c><00:06:45.210><c> is</c><00:06:45.330><c> a</c><00:06:45.360><c> good</c>

00:06:45.529 --> 00:06:45.539 align:start position:0%
after the other and there is a good
 

00:06:45.539 --> 00:06:47.120 align:start position:0%
after the other and there is a good
entry<00:06:45.900><c> point</c><00:06:46.080><c> there's</c><00:06:46.319><c> a</c><00:06:46.350><c> good</c><00:06:46.500><c> exit</c><00:06:46.889><c> point</c>

00:06:47.120 --> 00:06:47.130 align:start position:0%
entry point there's a good exit point
 

00:06:47.130 --> 00:06:48.860 align:start position:0%
entry point there's a good exit point
hey<00:06:47.520><c> that's</c><00:06:47.759><c> all</c><00:06:47.910><c> really</c><00:06:48.389><c> making</c><00:06:48.630><c> sense</c>

00:06:48.860 --> 00:06:48.870 align:start position:0%
hey that's all really making sense
 

00:06:48.870 --> 00:06:50.870 align:start position:0%
hey that's all really making sense
that's<00:06:49.620><c> basically</c><00:06:50.009><c> what</c><00:06:50.280><c> we</c><00:06:50.430><c> would</c><00:06:50.610><c> call</c><00:06:50.819><c> a</c>

00:06:50.870 --> 00:06:50.880 align:start position:0%
that's basically what we would call a
 

00:06:50.880 --> 00:06:52.460 align:start position:0%
that's basically what we would call a
structured<00:06:51.389><c> programming</c><00:06:51.750><c> but</c><00:06:52.169><c> what</c><00:06:52.380><c> I'm</c>

00:06:52.460 --> 00:06:52.470 align:start position:0%
structured programming but what I'm
 

00:06:52.470 --> 00:06:54.589 align:start position:0%
structured programming but what I'm
going<00:06:52.650><c> to</c><00:06:52.710><c> do</c><00:06:52.860><c> here</c><00:06:53.190><c> though</c><00:06:53.460><c> is</c><00:06:53.759><c> I'm</c><00:06:54.060><c> going</c><00:06:54.509><c> to</c>

00:06:54.589 --> 00:06:54.599 align:start position:0%
going to do here though is I'm going to
 

00:06:54.599 --> 00:06:56.300 align:start position:0%
going to do here though is I'm going to
go<00:06:54.660><c> to</c><00:06:54.720><c> the</c><00:06:54.840><c> command</c><00:06:55.110><c> line</c><00:06:55.380><c> and</c><00:06:55.530><c> say</c><00:06:55.710><c> Java</c><00:06:56.009><c> P</c>

00:06:56.300 --> 00:06:56.310 align:start position:0%
go to the command line and say Java P
 

00:06:56.310 --> 00:06:58.909 align:start position:0%
go to the command line and say Java P
minus<00:06:56.699><c> C</c><00:06:56.970><c> and</c><00:06:57.270><c> minus</c><00:06:57.810><c> C</c><00:06:57.930><c> is</c><00:06:58.050><c> already</c><00:06:58.169><c> an</c><00:06:58.440><c> alias</c>

00:06:58.909 --> 00:06:58.919 align:start position:0%
minus C and minus C is already an alias
 

00:06:58.919 --> 00:07:00.920 align:start position:0%
minus C and minus C is already an alias
on<00:06:59.130><c> my</c><00:06:59.310><c> machine</c><00:06:59.610><c> so</c><00:06:59.789><c> I</c><00:06:59.849><c> won't</c><00:07:00.030><c> provide</c><00:07:00.630><c> that</c>

00:07:00.920 --> 00:07:00.930 align:start position:0%
on my machine so I won't provide that
 

00:07:00.930 --> 00:07:03.110 align:start position:0%
on my machine so I won't provide that
and<00:07:01.410><c> then</c><00:07:01.500><c> I'm</c><00:07:01.590><c> going</c><00:07:01.710><c> to</c><00:07:01.800><c> say</c><00:07:01.919><c> classes</c><00:07:02.759><c> right</c>

00:07:03.110 --> 00:07:03.120 align:start position:0%
and then I'm going to say classes right
 

00:07:03.120 --> 00:07:05.390 align:start position:0%
and then I'm going to say classes right
here<00:07:03.270><c> and</c><00:07:03.509><c> sample</c><00:07:04.169><c> and</c><00:07:04.680><c> let's</c><00:07:04.860><c> take</c><00:07:05.099><c> a</c><00:07:05.160><c> look</c><00:07:05.310><c> at</c>

00:07:05.390 --> 00:07:05.400 align:start position:0%
here and sample and let's take a look at
 

00:07:05.400 --> 00:07:08.240 align:start position:0%
here and sample and let's take a look at
the<00:07:05.490><c> bytecode</c><00:07:06.210><c> and</c><00:07:06.569><c> what</c><00:07:07.380><c> a</c><00:07:07.410><c> surprise</c><00:07:07.949><c> if</c><00:07:08.160><c> you</c>

00:07:08.240 --> 00:07:08.250 align:start position:0%
the bytecode and what a surprise if you
 

00:07:08.250 --> 00:07:09.710 align:start position:0%
the bytecode and what a surprise if you
look<00:07:08.370><c> at</c><00:07:08.490><c> the</c><00:07:08.550><c> bytecode</c><00:07:08.759><c> being</c><00:07:09.210><c> generated</c>

00:07:09.710 --> 00:07:09.720 align:start position:0%
look at the bytecode being generated
 

00:07:09.720 --> 00:07:13.010 align:start position:0%
look at the bytecode being generated
what<00:07:10.530><c> do</c><00:07:10.620><c> you</c><00:07:10.680><c> see</c><00:07:10.860><c> over</c><00:07:10.889><c> there</c><00:07:11.400><c> go</c><00:07:12.180><c> to</c><00:07:12.570><c> in</c><00:07:12.870><c> the</c>

00:07:13.010 --> 00:07:13.020 align:start position:0%
what do you see over there go to in the
 

00:07:13.020 --> 00:07:15.110 align:start position:0%
what do you see over there go to in the
bytecode<00:07:13.229><c> hey</c><00:07:13.919><c> wait</c><00:07:14.160><c> a</c><00:07:14.190><c> minute</c><00:07:14.280><c> did</c><00:07:14.699><c> we</c><00:07:14.849><c> say</c>

00:07:15.110 --> 00:07:15.120 align:start position:0%
bytecode hey wait a minute did we say
 

00:07:15.120 --> 00:07:16.339 align:start position:0%
bytecode hey wait a minute did we say
that<00:07:15.330><c> in</c><00:07:15.419><c> a</c><00:07:15.509><c> structured</c><00:07:15.870><c> program</c><00:07:16.050><c> we</c>

00:07:16.339 --> 00:07:16.349 align:start position:0%
that in a structured program we
 

00:07:16.349 --> 00:07:19.100 align:start position:0%
that in a structured program we
shouldn't<00:07:16.650><c> use</c><00:07:16.800><c> go</c><00:07:17.039><c> twos</c><00:07:17.340><c> well</c><00:07:18.150><c> go</c><00:07:18.720><c> tools</c><00:07:18.960><c> are</c>

00:07:19.100 --> 00:07:19.110 align:start position:0%
shouldn't use go twos well go tools are
 

00:07:19.110 --> 00:07:22.010 align:start position:0%
shouldn't use go twos well go tools are
like<00:07:19.289><c> matches</c><00:07:20.009><c> you</c><00:07:20.699><c> I'm</c><00:07:20.970><c> sure</c><00:07:21.180><c> everyone</c><00:07:21.780><c> here</c>

00:07:22.010 --> 00:07:22.020 align:start position:0%
like matches you I'm sure everyone here
 

00:07:22.020 --> 00:07:23.990 align:start position:0%
like matches you I'm sure everyone here
has<00:07:22.259><c> matches</c><00:07:22.710><c> at</c><00:07:22.830><c> home</c><00:07:23.009><c> we</c><00:07:23.160><c> all</c><00:07:23.280><c> use</c><00:07:23.520><c> matches</c>

00:07:23.990 --> 00:07:24.000 align:start position:0%
has matches at home we all use matches
 

00:07:24.000 --> 00:07:25.939 align:start position:0%
has matches at home we all use matches
but<00:07:24.570><c> you</c><00:07:24.690><c> don't</c><00:07:24.870><c> go</c><00:07:25.050><c> to</c><00:07:25.110><c> the</c><00:07:25.289><c> kids</c><00:07:25.530><c> and</c><00:07:25.770><c> say</c>

00:07:25.939 --> 00:07:25.949 align:start position:0%
but you don't go to the kids and say
 

00:07:25.949 --> 00:07:27.379 align:start position:0%
but you don't go to the kids and say
kids<00:07:26.160><c> I'm</c><00:07:26.310><c> going</c><00:07:26.400><c> to</c><00:07:26.520><c> go</c><00:07:26.580><c> take</c><00:07:26.759><c> a</c><00:07:26.789><c> shower</c><00:07:26.910><c> here</c>

00:07:27.379 --> 00:07:27.389 align:start position:0%
kids I'm going to go take a shower here
 

00:07:27.389 --> 00:07:28.640 align:start position:0%
kids I'm going to go take a shower here
are<00:07:27.449><c> some</c><00:07:27.599><c> matches</c><00:07:27.930><c> for</c><00:07:28.080><c> you</c><00:07:28.139><c> to</c><00:07:28.259><c> play</c><00:07:28.470><c> with</c>

00:07:28.640 --> 00:07:28.650 align:start position:0%
are some matches for you to play with
 

00:07:28.650 --> 00:07:31.310 align:start position:0%
are some matches for you to play with
well<00:07:29.160><c> we</c><00:07:29.520><c> use</c><00:07:29.729><c> matches</c><00:07:30.449><c> but</c><00:07:30.599><c> matches</c><00:07:31.080><c> are</c><00:07:31.199><c> for</c>

00:07:31.310 --> 00:07:31.320 align:start position:0%
well we use matches but matches are for
 

00:07:31.320 --> 00:07:33.110 align:start position:0%
well we use matches but matches are for
adults<00:07:31.800><c> to</c><00:07:31.979><c> use</c><00:07:32.159><c> not</c><00:07:32.370><c> for</c><00:07:32.550><c> children's</c><00:07:32.849><c> to</c><00:07:32.970><c> play</c>

00:07:33.110 --> 00:07:33.120 align:start position:0%
adults to use not for children's to play
 

00:07:33.120 --> 00:07:34.430 align:start position:0%
adults to use not for children's to play
with<00:07:33.330><c> case</c><00:07:33.810><c> in</c><00:07:34.020><c> point</c>

00:07:34.430 --> 00:07:34.440 align:start position:0%
with case in point
 

00:07:34.440 --> 00:07:36.409 align:start position:0%
with case in point
go<00:07:34.560><c> to</c><00:07:34.620><c> is</c><00:07:34.800><c> exactly</c><00:07:35.250><c> the</c><00:07:35.400><c> same</c><00:07:35.610><c> so</c><00:07:36.180><c> a</c>

00:07:36.409 --> 00:07:36.419 align:start position:0%
go to is exactly the same so a
 

00:07:36.419 --> 00:07:39.129 align:start position:0%
go to is exactly the same so a
structured<00:07:37.080><c> program</c><00:07:37.620><c> will</c><00:07:38.159><c> have</c><00:07:38.430><c> go</c><00:07:38.759><c> to</c>

00:07:39.129 --> 00:07:39.139 align:start position:0%
structured program will have go to
 

00:07:39.139 --> 00:07:41.659 align:start position:0%
structured program will have go to
except<00:07:40.139><c> that</c><00:07:40.199><c> we</c><00:07:40.440><c> will</c><00:07:40.620><c> not</c><00:07:40.740><c> have</c><00:07:40.949><c> go</c><00:07:41.190><c> to</c><00:07:41.220><c> in</c>

00:07:41.659 --> 00:07:41.669 align:start position:0%
except that we will not have go to in
 

00:07:41.669 --> 00:07:44.689 align:start position:0%
except that we will not have go to in
our<00:07:41.909><c> code</c><00:07:42.659><c> there</c><00:07:43.319><c> could</c><00:07:43.560><c> be</c><00:07:43.590><c> go</c><00:07:43.860><c> to</c><00:07:43.919><c> act</c><00:07:44.340><c> layers</c>

00:07:44.689 --> 00:07:44.699 align:start position:0%
our code there could be go to act layers
 

00:07:44.699 --> 00:07:47.870 align:start position:0%
our code there could be go to act layers
below<00:07:45.120><c> so</c><00:07:45.780><c> in</c><00:07:45.870><c> a</c><00:07:45.960><c> very</c><00:07:46.199><c> similar</c><00:07:46.560><c> way</c><00:07:46.800><c> when</c><00:07:47.729><c> we</c>

00:07:47.870 --> 00:07:47.880 align:start position:0%
below so in a very similar way when we
 

00:07:47.880 --> 00:07:50.540 align:start position:0%
below so in a very similar way when we
say<00:07:48.150><c> assignment</c><00:07:49.110><c> less</c><00:07:49.289><c> programming</c><00:07:50.009><c> we're</c>

00:07:50.540 --> 00:07:50.550 align:start position:0%
say assignment less programming we're
 

00:07:50.550 --> 00:07:52.460 align:start position:0%
say assignment less programming we're
not<00:07:50.669><c> saying</c><00:07:50.940><c> there's</c><00:07:51.180><c> no</c><00:07:51.360><c> assignments</c><00:07:51.960><c> period</c>

00:07:52.460 --> 00:07:52.470 align:start position:0%
not saying there's no assignments period
 

00:07:52.470 --> 00:07:54.710 align:start position:0%
not saying there's no assignments period
we<00:07:52.919><c> are</c><00:07:53.039><c> saying</c><00:07:53.280><c> that</c><00:07:53.460><c> just</c><00:07:54.090><c> like</c><00:07:54.240><c> we</c><00:07:54.539><c> don't</c>

00:07:54.710 --> 00:07:54.720 align:start position:0%
we are saying that just like we don't
 

00:07:54.720 --> 00:07:58.189 align:start position:0%
we are saying that just like we don't
use<00:07:54.990><c> go</c><00:07:55.259><c> to</c><00:07:55.289><c> we</c><00:07:56.280><c> won't</c><00:07:56.520><c> use</c><00:07:56.719><c> assignments</c><00:07:57.719><c> but</c>

00:07:58.189 --> 00:07:58.199 align:start position:0%
use go to we won't use assignments but
 

00:07:58.199 --> 00:08:00.200 align:start position:0%
use go to we won't use assignments but
just<00:07:58.440><c> like</c><00:07:58.590><c> assignments</c><00:07:59.219><c> just</c><00:07:59.759><c> like</c><00:07:59.940><c> go</c><00:08:00.150><c> to</c>

00:08:00.200 --> 00:08:00.210 align:start position:0%
just like assignments just like go to
 

00:08:00.210 --> 00:08:02.570 align:start position:0%
just like assignments just like go to
can<00:08:00.479><c> happen</c><00:08:00.780><c> under</c><00:08:00.930><c> the</c><00:08:01.199><c> hood</c><00:08:01.580><c> assignments</c>

00:08:02.570 --> 00:08:02.580 align:start position:0%
can happen under the hood assignments
 

00:08:02.580 --> 00:08:04.779 align:start position:0%
can happen under the hood assignments
may<00:08:02.699><c> happen</c><00:08:03.030><c> under</c><00:08:03.270><c> the</c><00:08:03.389><c> hood</c><00:08:03.509><c> as</c><00:08:03.719><c> well</c><00:08:03.770><c> so</c>

00:08:04.779 --> 00:08:04.789 align:start position:0%
may happen under the hood as well so
 

00:08:04.789 --> 00:08:09.100 align:start position:0%
may happen under the hood as well so
assignments<00:08:05.789><c> are</c><00:08:06.259><c> easy</c><00:08:07.259><c> to</c><00:08:07.729><c> assignment</c><00:08:08.729><c> is</c><00:08:08.909><c> to</c>

00:08:09.100 --> 00:08:09.110 align:start position:0%
assignments are easy to assignment is to
 

00:08:09.110 --> 00:08:12.110 align:start position:0%
assignments are easy to assignment is to
functional<00:08:10.110><c> programming</c><00:08:10.460><c> so</c><00:08:11.460><c> this</c><00:08:11.729><c> is</c><00:08:11.849><c> a</c><00:08:11.880><c> way</c>

00:08:12.110 --> 00:08:12.120 align:start position:0%
functional programming so this is a way
 

00:08:12.120 --> 00:08:14.360 align:start position:0%
functional programming so this is a way
to<00:08:12.150><c> draw</c><00:08:12.449><c> the</c><00:08:12.599><c> distinction</c><00:08:13.080><c> that</c><00:08:13.530><c> go-to</c><00:08:14.070><c> is</c>

00:08:14.360 --> 00:08:14.370 align:start position:0%
to draw the distinction that go-to is
 

00:08:14.370 --> 00:08:16.159 align:start position:0%
to draw the distinction that go-to is
the<00:08:14.520><c> structured</c><00:08:14.909><c> programming</c><00:08:15.389><c> like</c>

00:08:16.159 --> 00:08:16.169 align:start position:0%
the structured programming like
 

00:08:16.169 --> 00:08:17.779 align:start position:0%
the structured programming like
assignments<00:08:17.099><c> these</c><00:08:17.280><c> two</c><00:08:17.430><c> functional</c>

00:08:17.779 --> 00:08:17.789 align:start position:0%
assignments these two functional
 

00:08:17.789 --> 00:08:20.839 align:start position:0%
assignments these two functional
programming<00:08:18.150><c> that</c><00:08:18.810><c> is</c><00:08:18.870><c> the</c><00:08:19.680><c> evil</c><00:08:20.190><c> part</c><00:08:20.520><c> of</c><00:08:20.669><c> the</c>

00:08:20.839 --> 00:08:20.849 align:start position:0%
programming that is the evil part of the
 

00:08:20.849 --> 00:08:22.969 align:start position:0%
programming that is the evil part of the
what<00:08:21.300><c> we</c><00:08:21.419><c> are</c><00:08:21.479><c> trying</c><00:08:21.690><c> to</c><00:08:21.750><c> avoid</c><00:08:22.080><c> like</c><00:08:22.680><c> we</c><00:08:22.830><c> try</c>

00:08:22.969 --> 00:08:22.979 align:start position:0%
what we are trying to avoid like we try
 

00:08:22.979 --> 00:08:24.680 align:start position:0%
what we are trying to avoid like we try
to<00:08:23.039><c> avoid</c><00:08:23.190><c> go</c><00:08:23.460><c> to</c><00:08:23.520><c> instructor</c><00:08:24.090><c> programming</c><00:08:24.570><c> we</c>

00:08:24.680 --> 00:08:24.690 align:start position:0%
to avoid go to instructor programming we
 

00:08:24.690 --> 00:08:27.620 align:start position:0%
to avoid go to instructor programming we
try<00:08:24.900><c> to</c><00:08:24.960><c> avoid</c><00:08:25.219><c> assignments</c><00:08:26.219><c> in</c><00:08:26.400><c> a</c><00:08:26.759><c> functional</c>

00:08:27.620 --> 00:08:27.630 align:start position:0%
try to avoid assignments in a functional
 

00:08:27.630 --> 00:08:29.600 align:start position:0%
try to avoid assignments in a functional
programming<00:08:27.930><c> but</c><00:08:28.620><c> a</c><00:08:28.650><c> lot</c><00:08:28.830><c> of</c><00:08:28.949><c> times</c><00:08:29.130><c> I</c><00:08:29.280><c> use</c><00:08:29.460><c> the</c>

00:08:29.600 --> 00:08:29.610 align:start position:0%
programming but a lot of times I use the
 

00:08:29.610 --> 00:08:31.820 align:start position:0%
programming but a lot of times I use the
word<00:08:29.789><c> explicit</c><00:08:30.750><c> assignment</c><00:08:31.409><c> rather</c><00:08:31.650><c> than</c>

00:08:31.820 --> 00:08:31.830 align:start position:0%
word explicit assignment rather than
 

00:08:31.830 --> 00:08:33.800 align:start position:0%
word explicit assignment rather than
assignment<00:08:32.399><c> meaning</c><00:08:33.000><c> we</c><00:08:33.390><c> don't</c><00:08:33.599><c> do</c>

00:08:33.800 --> 00:08:33.810 align:start position:0%
assignment meaning we don't do
 

00:08:33.810 --> 00:08:35.389 align:start position:0%
assignment meaning we don't do
assignments<00:08:34.469><c> but</c><00:08:34.620><c> it</c><00:08:34.709><c> could</c><00:08:34.860><c> happen</c><00:08:35.039><c> under</c>

00:08:35.389 --> 00:08:35.399 align:start position:0%
assignments but it could happen under
 

00:08:35.399 --> 00:08:38.360 align:start position:0%
assignments but it could happen under
the<00:08:35.550><c> hood</c><00:08:35.760><c> in</c><00:08:36.240><c> in</c><00:08:36.510><c> layers</c><00:08:36.719><c> below</c><00:08:37.099><c> well</c><00:08:38.099><c> the</c>

00:08:38.360 --> 00:08:38.370 align:start position:0%
the hood in in layers below well the
 

00:08:38.370 --> 00:08:40.219 align:start position:0%
the hood in in layers below well the
next<00:08:38.490><c> thing</c><00:08:38.760><c> is</c><00:08:38.909><c> of</c><00:08:38.940><c> course</c><00:08:39.089><c> dealing</c><00:08:39.990><c> with</c>

00:08:40.219 --> 00:08:40.229 align:start position:0%
next thing is of course dealing with
 

00:08:40.229 --> 00:08:42.440 align:start position:0%
next thing is of course dealing with
immutable<00:08:41.039><c> state</c><00:08:41.370><c> we</c><00:08:41.820><c> don't</c><00:08:42.000><c> want</c><00:08:42.329><c> to</c><00:08:42.390><c> be</c>

00:08:42.440 --> 00:08:42.450 align:start position:0%
immutable state we don't want to be
 

00:08:42.450 --> 00:08:45.170 align:start position:0%
immutable state we don't want to be
mutating<00:08:43.440><c> the</c><00:08:43.620><c> state</c><00:08:43.919><c> instead</c><00:08:44.880><c> we</c><00:08:44.970><c> want</c><00:08:45.149><c> to</c>

00:08:45.170 --> 00:08:45.180 align:start position:0%
mutating the state instead we want to
 

00:08:45.180 --> 00:08:47.030 align:start position:0%
mutating the state instead we want to
transform<00:08:45.899><c> the</c><00:08:46.020><c> state</c><00:08:46.230><c> as</c><00:08:46.380><c> much</c><00:08:46.560><c> as</c><00:08:46.680><c> you</c><00:08:46.860><c> can</c>

00:08:47.030 --> 00:08:47.040 align:start position:0%
transform the state as much as you can
 

00:08:47.040 --> 00:08:49.010 align:start position:0%
transform the state as much as you can
and<00:08:47.310><c> because</c><00:08:48.000><c> transforming</c><00:08:48.720><c> the</c><00:08:48.839><c> state</c>

00:08:49.010 --> 00:08:49.020 align:start position:0%
and because transforming the state
 

00:08:49.020 --> 00:08:51.079 align:start position:0%
and because transforming the state
becomes<00:08:49.320><c> a</c><00:08:49.440><c> lot</c><00:08:49.589><c> more</c><00:08:49.800><c> easier</c><00:08:50.370><c> to</c><00:08:50.430><c> reason</c><00:08:50.970><c> and</c>

00:08:51.079 --> 00:08:51.089 align:start position:0%
becomes a lot more easier to reason and
 

00:08:51.089 --> 00:08:53.360 align:start position:0%
becomes a lot more easier to reason and
work<00:08:51.360><c> with</c><00:08:51.660><c> than</c><00:08:52.140><c> mutating</c><00:08:52.740><c> the</c><00:08:52.860><c> state</c>

00:08:53.360 --> 00:08:53.370 align:start position:0%
work with than mutating the state
 

00:08:53.370 --> 00:08:54.950 align:start position:0%
work with than mutating the state
but<00:08:53.460><c> obviously</c><00:08:53.580><c> one</c><00:08:54.180><c> question</c><00:08:54.570><c> remains</c>

00:08:54.950 --> 00:08:54.960 align:start position:0%
but obviously one question remains
 

00:08:54.960 --> 00:08:56.870 align:start position:0%
but obviously one question remains
Kyra's<00:08:55.529><c> oh</c><00:08:55.770><c> my</c><00:08:56.160><c> gosh</c><00:08:56.339><c> if</c><00:08:56.520><c> you're</c><00:08:56.640><c> going</c><00:08:56.760><c> to</c><00:08:56.820><c> be</c>

00:08:56.870 --> 00:08:56.880 align:start position:0%
Kyra's oh my gosh if you're going to be
 

00:08:56.880 --> 00:08:59.150 align:start position:0%
Kyra's oh my gosh if you're going to be
dealing<00:08:57.180><c> with</c><00:08:57.210><c> immutable</c><00:08:57.960><c> state</c><00:08:58.320><c> would</c><00:08:58.980><c> you</c>

00:08:59.150 --> 00:08:59.160 align:start position:0%
dealing with immutable state would you
 

00:08:59.160 --> 00:09:01.790 align:start position:0%
dealing with immutable state would you
not<00:08:59.370><c> base</c><00:08:59.610><c> performance</c><00:09:00.390><c> by</c><00:09:00.510><c> copying</c><00:09:01.140><c> objects</c>

00:09:01.790 --> 00:09:01.800 align:start position:0%
not base performance by copying objects
 

00:09:01.800 --> 00:09:04.130 align:start position:0%
not base performance by copying objects
over<00:09:01.980><c> and</c><00:09:02.250><c> over</c><00:09:02.550><c> and</c><00:09:02.730><c> over</c><00:09:02.880><c> well</c><00:09:03.690><c> let's</c><00:09:04.020><c> think</c>

00:09:04.130 --> 00:09:04.140 align:start position:0%
over and over and over well let's think
 

00:09:04.140 --> 00:09:05.900 align:start position:0%
over and over and over well let's think
about<00:09:04.260><c> something</c><00:09:04.740><c> really</c><00:09:04.950><c> in</c><00:09:05.160><c> parallel</c><00:09:05.730><c> here</c>

00:09:05.900 --> 00:09:05.910 align:start position:0%
about something really in parallel here
 

00:09:05.910 --> 00:09:08.540 align:start position:0%
about something really in parallel here
again<00:09:06.270><c> version</c><00:09:07.170><c> controls</c><00:09:07.710><c> have</c><00:09:08.070><c> been</c><00:09:08.250><c> doing</c>

00:09:08.540 --> 00:09:08.550 align:start position:0%
again version controls have been doing
 

00:09:08.550 --> 00:09:10.490 align:start position:0%
again version controls have been doing
this<00:09:08.670><c> for</c><00:09:08.910><c> a</c><00:09:08.940><c> long</c><00:09:09.210><c> time</c><00:09:09.600><c> when</c><00:09:10.170><c> you</c><00:09:10.260><c> deal</c><00:09:10.470><c> with</c>

00:09:10.490 --> 00:09:10.500 align:start position:0%
this for a long time when you deal with
 

00:09:10.500 --> 00:09:12.950 align:start position:0%
this for a long time when you deal with
the<00:09:10.710><c> version</c><00:09:11.040><c> control</c><00:09:11.190><c> you</c><00:09:11.970><c> check</c><00:09:12.270><c> in</c><00:09:12.450><c> files</c>

00:09:12.950 --> 00:09:12.960 align:start position:0%
the version control you check in files
 

00:09:12.960 --> 00:09:15.200 align:start position:0%
the version control you check in files
the<00:09:13.710><c> version</c><00:09:14.040><c> controls</c><00:09:14.370><c> don't</c><00:09:14.550><c> make</c><00:09:14.820><c> a</c><00:09:14.850><c> full</c>

00:09:15.200 --> 00:09:15.210 align:start position:0%
the version controls don't make a full
 

00:09:15.210 --> 00:09:17.690 align:start position:0%
the version controls don't make a full
copy<00:09:15.540><c> of</c><00:09:15.720><c> the</c><00:09:15.810><c> files</c><00:09:16.140><c> obviously</c><00:09:16.950><c> what</c><00:09:17.460><c> they</c><00:09:17.640><c> do</c>

00:09:17.690 --> 00:09:17.700 align:start position:0%
copy of the files obviously what they do
 

00:09:17.700 --> 00:09:20.180 align:start position:0%
copy of the files obviously what they do
is<00:09:18.089><c> they</c><00:09:18.270><c> make</c><00:09:18.300><c> very</c><00:09:18.930><c> nice</c><00:09:19.200><c> smart</c><00:09:19.589><c> copying</c>

00:09:20.180 --> 00:09:20.190 align:start position:0%
is they make very nice smart copying
 

00:09:20.190 --> 00:09:22.250 align:start position:0%
is they make very nice smart copying
where<00:09:20.430><c> they</c><00:09:20.940><c> keep</c><00:09:21.120><c> the</c><00:09:21.300><c> differences</c><00:09:21.930><c> around</c>

00:09:22.250 --> 00:09:22.260 align:start position:0%
where they keep the differences around
 

00:09:22.260 --> 00:09:24.620 align:start position:0%
where they keep the differences around
so<00:09:22.710><c> in</c><00:09:22.830><c> other</c><00:09:22.890><c> words</c><00:09:23.130><c> we</c><00:09:23.339><c> do</c><00:09:23.490><c> smart</c><00:09:24.029><c> copying</c>

00:09:24.620 --> 00:09:24.630 align:start position:0%
so in other words we do smart copying
 

00:09:24.630 --> 00:09:26.690 align:start position:0%
so in other words we do smart copying
rather<00:09:24.900><c> than</c><00:09:25.170><c> through</c><00:09:25.950><c> copying</c><00:09:26.400><c> or</c><00:09:26.490><c> full</c>

00:09:26.690 --> 00:09:26.700 align:start position:0%
rather than through copying or full
 

00:09:26.700 --> 00:09:29.690 align:start position:0%
rather than through copying or full
copying<00:09:27.180><c> in</c><00:09:27.540><c> a</c><00:09:27.660><c> similar</c><00:09:28.080><c> way</c><00:09:28.490><c> languages</c><00:09:29.490><c> and</c>

00:09:29.690 --> 00:09:29.700 align:start position:0%
copying in a similar way languages and
 

00:09:29.700 --> 00:09:31.880 align:start position:0%
copying in a similar way languages and
tools<00:09:30.029><c> and</c><00:09:30.360><c> libraries</c><00:09:30.480><c> can</c><00:09:31.110><c> do</c><00:09:31.290><c> this</c><00:09:31.500><c> for</c><00:09:31.740><c> us</c>

00:09:31.880 --> 00:09:31.890 align:start position:0%
tools and libraries can do this for us
 

00:09:31.890 --> 00:09:33.860 align:start position:0%
tools and libraries can do this for us
when<00:09:32.339><c> we</c><00:09:32.460><c> make</c><00:09:32.640><c> a</c><00:09:32.670><c> copy</c><00:09:33.000><c> of</c><00:09:33.210><c> an</c><00:09:33.330><c> object</c><00:09:33.720><c> it</c>

00:09:33.860 --> 00:09:33.870 align:start position:0%
when we make a copy of an object it
 

00:09:33.870 --> 00:09:36.410 align:start position:0%
when we make a copy of an object it
doesn't<00:09:33.900><c> have</c><00:09:34.500><c> to</c><00:09:34.740><c> be</c><00:09:34.830><c> a</c><00:09:34.860><c> full</c><00:09:35.220><c> copy</c><00:09:35.460><c> it</c><00:09:36.089><c> can</c><00:09:36.240><c> be</c>

00:09:36.410 --> 00:09:36.420 align:start position:0%
doesn't have to be a full copy it can be
 

00:09:36.420 --> 00:09:38.930 align:start position:0%
doesn't have to be a full copy it can be
a<00:09:36.450><c> very</c><00:09:36.660><c> efficient</c><00:09:37.290><c> copy</c><00:09:37.500><c> a</c><00:09:37.770><c> case</c><00:09:38.220><c> in</c><00:09:38.400><c> point</c><00:09:38.430><c> is</c>

00:09:38.930 --> 00:09:38.940 align:start position:0%
a very efficient copy a case in point is
 

00:09:38.940 --> 00:09:41.660 align:start position:0%
a very efficient copy a case in point is
one<00:09:39.240><c> example</c><00:09:39.360><c> is</c><00:09:39.779><c> tries</c><00:09:40.200><c> where</c><00:09:40.980><c> it</c><00:09:41.100><c> rises</c><00:09:41.580><c> a</c>

00:09:41.660 --> 00:09:41.670 align:start position:0%
one example is tries where it rises a
 

00:09:41.670 --> 00:09:43.760 align:start position:0%
one example is tries where it rises a
data<00:09:41.880><c> structure</c><00:09:42.180><c> quite</c><00:09:42.810><c> widely</c><00:09:43.290><c> used</c><00:09:43.529><c> in</c>

00:09:43.760 --> 00:09:43.770 align:start position:0%
data structure quite widely used in
 

00:09:43.770 --> 00:09:46.730 align:start position:0%
data structure quite widely used in
languages<00:09:44.190><c> like</c><00:09:44.250><c> a</c><00:09:44.700><c> closure</c><00:09:45.240><c> and</c><00:09:45.390><c> Scala</c><00:09:45.960><c> where</c>

00:09:46.730 --> 00:09:46.740 align:start position:0%
languages like a closure and Scala where
 

00:09:46.740 --> 00:09:49.550 align:start position:0%
languages like a closure and Scala where
twice<00:09:47.190><c> make</c><00:09:47.490><c> a</c><00:09:47.760><c> very</c><00:09:47.970><c> smart</c><00:09:48.570><c> copy</c><00:09:48.930><c> of</c><00:09:49.140><c> objects</c>

00:09:49.550 --> 00:09:49.560 align:start position:0%
twice make a very smart copy of objects
 

00:09:49.560 --> 00:09:52.280 align:start position:0%
twice make a very smart copy of objects
minimally<00:09:50.220><c> on</c><00:09:50.550><c> copy</c><00:09:51.089><c> on-demand</c><00:09:51.540><c> and</c><00:09:52.020><c> that</c>

00:09:52.280 --> 00:09:52.290 align:start position:0%
minimally on copy on-demand and that
 

00:09:52.290 --> 00:09:54.230 align:start position:0%
minimally on copy on-demand and that
becomes<00:09:52.589><c> really</c><00:09:52.650><c> efficient</c><00:09:53.430><c> likewise</c>

00:09:54.230 --> 00:09:54.240 align:start position:0%
becomes really efficient likewise
 

00:09:54.240 --> 00:09:56.000 align:start position:0%
becomes really efficient likewise
libraries<00:09:54.870><c> can</c><00:09:55.050><c> also</c><00:09:55.200><c> be</c><00:09:55.440><c> smart</c><00:09:55.770><c> about</c><00:09:55.890><c> how</c>

00:09:56.000 --> 00:09:56.010 align:start position:0%
libraries can also be smart about how
 

00:09:56.010 --> 00:09:58.370 align:start position:0%
libraries can also be smart about how
they<00:09:56.490><c> handle</c><00:09:56.670><c> data</c><00:09:57.089><c> so</c><00:09:57.720><c> they</c><00:09:57.810><c> can</c><00:09:57.839><c> minimize</c>

00:09:58.370 --> 00:09:58.380 align:start position:0%
they handle data so they can minimize
 

00:09:58.380 --> 00:10:00.410 align:start position:0%
they handle data so they can minimize
these<00:09:58.680><c> garbage</c><00:09:58.980><c> objects</c><00:09:59.610><c> being</c><00:09:59.790><c> created</c><00:10:00.300><c> in</c>

00:10:00.410 --> 00:10:00.420 align:start position:0%
these garbage objects being created in
 

00:10:00.420 --> 00:10:02.750 align:start position:0%
these garbage objects being created in
between<00:10:00.900><c> so</c><00:10:01.440><c> there</c><00:10:01.589><c> are</c><00:10:01.680><c> ways</c><00:10:01.920><c> to</c><00:10:01.950><c> really</c><00:10:02.279><c> save</c>

00:10:02.750 --> 00:10:02.760 align:start position:0%
between so there are ways to really save
 

00:10:02.760 --> 00:10:04.670 align:start position:0%
between so there are ways to really save
performance<00:10:03.480><c> while</c><00:10:03.720><c> achieving</c><00:10:04.500><c> these</c><00:10:04.620><c> goals</c>

00:10:04.670 --> 00:10:04.680 align:start position:0%
performance while achieving these goals
 

00:10:04.680 --> 00:10:06.980 align:start position:0%
performance while achieving these goals
as<00:10:05.100><c> well</c><00:10:05.459><c> but</c><00:10:06.060><c> one</c><00:10:06.209><c> of</c><00:10:06.240><c> the</c><00:10:06.420><c> most</c><00:10:06.600><c> important</c>

00:10:06.980 --> 00:10:06.990 align:start position:0%
as well but one of the most important
 

00:10:06.990 --> 00:10:09.140 align:start position:0%
as well but one of the most important
things<00:10:07.200><c> to</c><00:10:07.350><c> think</c><00:10:07.560><c> about</c><00:10:07.650><c> is</c><00:10:08.100><c> functions</c><00:10:08.970><c> are</c>

00:10:09.140 --> 00:10:09.150 align:start position:0%
things to think about is functions are
 

00:10:09.150 --> 00:10:11.600 align:start position:0%
things to think about is functions are
considered<00:10:09.630><c> as</c><00:10:09.750><c> first-class</c><00:10:10.380><c> citizens</c><00:10:10.610><c> so</c>

00:10:11.600 --> 00:10:11.610 align:start position:0%
considered as first-class citizens so
 

00:10:11.610 --> 00:10:13.310 align:start position:0%
considered as first-class citizens so
what<00:10:11.790><c> does</c><00:10:11.880><c> that</c><00:10:11.910><c> really</c><00:10:12.060><c> mean</c><00:10:12.420><c> functions</c><00:10:13.200><c> are</c>

00:10:13.310 --> 00:10:13.320 align:start position:0%
what does that really mean functions are
 

00:10:13.320 --> 00:10:15.260 align:start position:0%
what does that really mean functions are
first<00:10:13.470><c> class</c><00:10:13.620><c> citizens</c><00:10:13.770><c> well</c><00:10:14.670><c> what</c><00:10:14.880><c> it</c><00:10:15.029><c> means</c>

00:10:15.260 --> 00:10:15.270 align:start position:0%
first class citizens well what it means
 

00:10:15.270 --> 00:10:18.230 align:start position:0%
first class citizens well what it means
is<00:10:15.660><c> it's</c><00:10:16.560><c> so</c><00:10:16.770><c> far</c><00:10:17.100><c> what</c><00:10:17.279><c> we</c><00:10:17.400><c> have</c><00:10:17.490><c> done</c><00:10:17.610><c> is</c><00:10:17.880><c> we</c>

00:10:18.230 --> 00:10:18.240 align:start position:0%
is it's so far what we have done is we
 

00:10:18.240 --> 00:10:21.560 align:start position:0%
is it's so far what we have done is we
can't<00:10:18.510><c> pass</c><00:10:19.040><c> objects</c><00:10:20.040><c> to</c><00:10:20.339><c> functions</c><00:10:21.029><c> well</c>

00:10:21.560 --> 00:10:21.570 align:start position:0%
can't pass objects to functions well
 

00:10:21.570 --> 00:10:24.430 align:start position:0%
can't pass objects to functions well
sure<00:10:21.810><c> we</c><00:10:22.350><c> can</c><00:10:22.560><c> create</c><00:10:23.010><c> a</c><00:10:23.370><c> in</c><00:10:23.970><c> this</c><00:10:24.150><c> case</c>

00:10:24.430 --> 00:10:24.440 align:start position:0%
sure we can create a in this case
 

00:10:24.440 --> 00:10:27.800 align:start position:0%
sure we can create a in this case
objects<00:10:25.440><c> within</c><00:10:25.980><c> within</c><00:10:26.550><c> functions</c><00:10:27.180><c> and</c><00:10:27.390><c> then</c>

00:10:27.800 --> 00:10:27.810 align:start position:0%
objects within within functions and then
 

00:10:27.810 --> 00:10:29.800 align:start position:0%
objects within within functions and then
finally<00:10:28.230><c> of</c><00:10:28.320><c> course</c><00:10:28.350><c> we</c><00:10:28.800><c> can't</c><00:10:29.220><c> return</c>

00:10:29.800 --> 00:10:29.810 align:start position:0%
finally of course we can't return
 

00:10:29.810 --> 00:10:33.079 align:start position:0%
finally of course we can't return
objects<00:10:30.810><c> from</c><00:10:30.959><c> functions</c><00:10:31.830><c> so</c><00:10:32.310><c> we</c><00:10:32.490><c> are</c><00:10:32.580><c> used</c><00:10:32.880><c> to</c>

00:10:33.079 --> 00:10:33.089 align:start position:0%
objects from functions so we are used to
 

00:10:33.089 --> 00:10:34.940 align:start position:0%
objects from functions so we are used to
doing<00:10:33.300><c> these</c><00:10:33.600><c> things</c><00:10:33.810><c> for</c><00:10:33.990><c> for</c><00:10:34.470><c> a</c><00:10:34.500><c> long</c><00:10:34.709><c> time</c>

00:10:34.940 --> 00:10:34.950 align:start position:0%
doing these things for for a long time
 

00:10:34.950 --> 00:10:37.010 align:start position:0%
doing these things for for a long time
but<00:10:35.490><c> what</c><00:10:35.700><c> if</c><00:10:35.820><c> we</c><00:10:35.940><c> treat</c><00:10:36.300><c> functions</c><00:10:36.839><c> as</c>

00:10:37.010 --> 00:10:37.020 align:start position:0%
but what if we treat functions as
 

00:10:37.020 --> 00:10:38.990 align:start position:0%
but what if we treat functions as
first-class<00:10:37.350><c> citizens</c><00:10:38.040><c> we</c><00:10:38.550><c> can</c><00:10:38.730><c> start</c>

00:10:38.990 --> 00:10:39.000 align:start position:0%
first-class citizens we can start
 

00:10:39.000 --> 00:10:40.910 align:start position:0%
first-class citizens we can start
treating<00:10:39.420><c> them</c><00:10:39.660><c> and</c><00:10:39.839><c> moving</c><00:10:40.200><c> them</c><00:10:40.350><c> around</c><00:10:40.470><c> and</c>

00:10:40.910 --> 00:10:40.920 align:start position:0%
treating them and moving them around and
 

00:10:40.920 --> 00:10:42.980 align:start position:0%
treating them and moving them around and
passing<00:10:41.310><c> them</c><00:10:41.430><c> around</c><00:10:41.550><c> so</c><00:10:42.390><c> in</c><00:10:42.600><c> other</c><00:10:42.690><c> words</c>

00:10:42.980 --> 00:10:42.990 align:start position:0%
passing them around so in other words
 

00:10:42.990 --> 00:10:45.260 align:start position:0%
passing them around so in other words
these<00:10:43.320><c> are</c><00:10:43.529><c> called</c><00:10:43.740><c> higher-order</c><00:10:44.279><c> functions</c>

00:10:45.260 --> 00:10:45.270 align:start position:0%
these are called higher-order functions
 

00:10:45.270 --> 00:10:47.449 align:start position:0%
these are called higher-order functions
so<00:10:45.750><c> what</c><00:10:46.020><c> is</c><00:10:46.110><c> a</c><00:10:46.140><c> higher-order</c><00:10:46.440><c> function</c><00:10:47.220><c> well</c>

00:10:47.449 --> 00:10:47.459 align:start position:0%
so what is a higher-order function well
 

00:10:47.459 --> 00:10:49.730 align:start position:0%
so what is a higher-order function well
a<00:10:47.490><c> higher-order</c><00:10:47.850><c> function</c><00:10:48.630><c> typically</c><00:10:49.410><c> is</c>

00:10:49.730 --> 00:10:49.740 align:start position:0%
a higher-order function typically is
 

00:10:49.740 --> 00:10:51.500 align:start position:0%
a higher-order function typically is
going<00:10:50.010><c> to</c><00:10:50.130><c> take</c><00:10:50.339><c> this</c><00:10:50.520><c> idea</c><00:10:50.970><c> that</c><00:10:51.120><c> we</c><00:10:51.270><c> talked</c>

00:10:51.500 --> 00:10:51.510 align:start position:0%
going to take this idea that we talked
 

00:10:51.510 --> 00:10:53.390 align:start position:0%
going to take this idea that we talked
about<00:10:51.779><c> but</c><00:10:52.290><c> in</c><00:10:52.380><c> addition</c><00:10:52.500><c> to</c><00:10:52.950><c> doing</c><00:10:53.100><c> the</c>

00:10:53.390 --> 00:10:53.400 align:start position:0%
about but in addition to doing the
 

00:10:53.400 --> 00:10:56.060 align:start position:0%
about but in addition to doing the
object<00:10:54.029><c> composition</c><00:10:54.779><c> we</c><00:10:55.290><c> can</c><00:10:55.320><c> also</c><00:10:55.650><c> do</c>

00:10:56.060 --> 00:10:56.070 align:start position:0%
object composition we can also do
 

00:10:56.070 --> 00:10:58.400 align:start position:0%
object composition we can also do
function<00:10:56.640><c> composition</c><00:10:57.480><c> so</c><00:10:57.930><c> if</c><00:10:58.020><c> you</c><00:10:58.110><c> look</c><00:10:58.290><c> at</c>

00:10:58.400 --> 00:10:58.410 align:start position:0%
function composition so if you look at
 

00:10:58.410 --> 00:11:00.440 align:start position:0%
function composition so if you look at
the<00:10:58.500><c> higher-order</c><00:10:58.760><c> functions</c><00:10:59.760><c> higher-order</c>

00:11:00.440 --> 00:11:00.450 align:start position:0%
the higher-order functions higher-order
 

00:11:00.450 --> 00:11:02.930 align:start position:0%
the higher-order functions higher-order
functions<00:11:01.020><c> can</c><00:11:01.230><c> pass</c><00:11:01.670><c> functions</c><00:11:02.670><c> to</c>

00:11:02.930 --> 00:11:02.940 align:start position:0%
functions can pass functions to
 

00:11:02.940 --> 00:11:06.079 align:start position:0%
functions can pass functions to
functions<00:11:03.390><c> as</c><00:11:03.540><c> well</c><00:11:04.050><c> not</c><00:11:04.709><c> just</c><00:11:05.040><c> objects</c><00:11:05.610><c> they</c>

00:11:06.079 --> 00:11:06.089 align:start position:0%
functions as well not just objects they
 

00:11:06.089 --> 00:11:07.129 align:start position:0%
functions as well not just objects they
can<00:11:06.270><c> create</c><00:11:06.720><c> fun</c>

00:11:07.129 --> 00:11:07.139 align:start position:0%
can create fun
 

00:11:07.139 --> 00:11:09.319 align:start position:0%
can create fun
functions<00:11:07.439><c> within</c><00:11:07.829><c> functions</c><00:11:08.189><c> and</c><00:11:08.699><c> of</c><00:11:09.119><c> course</c>

00:11:09.319 --> 00:11:09.329 align:start position:0%
functions within functions and of course
 

00:11:09.329 --> 00:11:11.419 align:start position:0%
functions within functions and of course
they<00:11:09.509><c> can</c><00:11:09.629><c> also</c><00:11:09.720><c> return</c><00:11:10.410><c> function</c><00:11:11.100><c> from</c>

00:11:11.419 --> 00:11:11.429 align:start position:0%
they can also return function from
 

00:11:11.429 --> 00:11:13.759 align:start position:0%
they can also return function from
functions<00:11:11.819><c> as</c><00:11:11.939><c> well</c><00:11:12.389><c> so</c><00:11:12.929><c> those</c><00:11:13.170><c> become</c><00:11:13.559><c> what</c>

00:11:13.759 --> 00:11:13.769 align:start position:0%
functions as well so those become what
 

00:11:13.769 --> 00:11:15.379 align:start position:0%
functions as well so those become what
are<00:11:13.889><c> called</c><00:11:14.069><c> higher-order</c><00:11:14.429><c> functions</c><00:11:15.269><c> that</c>

00:11:15.379 --> 00:11:15.389 align:start position:0%
are called higher-order functions that
 

00:11:15.389 --> 00:11:17.689 align:start position:0%
are called higher-order functions that
you<00:11:15.480><c> can</c><00:11:15.629><c> work</c><00:11:15.779><c> with</c><00:11:15.839><c> very</c><00:11:16.230><c> effectively</c><00:11:16.769><c> so</c><00:11:17.399><c> we</c>

00:11:17.689 --> 00:11:17.699 align:start position:0%
you can work with very effectively so we
 

00:11:17.699 --> 00:11:19.939 align:start position:0%
you can work with very effectively so we
can<00:11:17.879><c> do</c><00:11:18.029><c> up</c><00:11:18.269><c> decomposition</c><00:11:18.779><c> or</c><00:11:19.379><c> object</c>

00:11:19.939 --> 00:11:19.949 align:start position:0%
can do up decomposition or object
 

00:11:19.949 --> 00:11:21.799 align:start position:0%
can do up decomposition or object
decomposition<00:11:20.759><c> but</c><00:11:21.179><c> we</c><00:11:21.299><c> can</c><00:11:21.420><c> also</c><00:11:21.540><c> do</c>

00:11:21.799 --> 00:11:21.809 align:start position:0%
decomposition but we can also do
 

00:11:21.809 --> 00:11:24.319 align:start position:0%
decomposition but we can also do
function<00:11:22.230><c> decomposition</c><00:11:22.559><c> as</c><00:11:23.160><c> well</c><00:11:23.579><c> but</c><00:11:24.149><c> one</c>

00:11:24.319 --> 00:11:24.329 align:start position:0%
function decomposition as well but one
 

00:11:24.329 --> 00:11:25.819 align:start position:0%
function decomposition as well but one
of<00:11:24.359><c> the</c><00:11:24.540><c> most</c><00:11:24.749><c> important</c><00:11:25.199><c> things</c><00:11:25.290><c> to</c><00:11:25.499><c> keep</c><00:11:25.619><c> in</c>

00:11:25.819 --> 00:11:25.829 align:start position:0%
of the most important things to keep in
 

00:11:25.829 --> 00:11:28.819 align:start position:0%
of the most important things to keep in
mind<00:11:26.100><c> is</c><00:11:26.369><c> that</c><00:11:27.089><c> functions</c><00:11:27.629><c> don't</c><00:11:28.049><c> have</c><00:11:28.379><c> side</c>

00:11:28.819 --> 00:11:28.829 align:start position:0%
mind is that functions don't have side
 

00:11:28.829 --> 00:11:31.039 align:start position:0%
mind is that functions don't have side
effects<00:11:29.249><c> I</c><00:11:29.489><c> want</c><00:11:29.910><c> to</c><00:11:29.970><c> emphasize</c><00:11:30.509><c> that</c><00:11:30.749><c> for</c><00:11:30.809><c> a</c>

00:11:31.039 --> 00:11:31.049 align:start position:0%
effects I want to emphasize that for a
 

00:11:31.049 --> 00:11:33.619 align:start position:0%
effects I want to emphasize that for a
minute<00:11:31.319><c> because</c><00:11:31.589><c> it's</c><00:11:32.429><c> easy</c><00:11:32.699><c> to</c><00:11:32.939><c> miss</c><00:11:33.149><c> this</c><00:11:33.419><c> a</c>

00:11:33.619 --> 00:11:33.629 align:start position:0%
minute because it's easy to miss this a
 

00:11:33.629 --> 00:11:36.309 align:start position:0%
minute because it's easy to miss this a
little<00:11:33.899><c> bit</c><00:11:34.199><c> so</c><00:11:34.679><c> I</c><00:11:34.980><c> want</c><00:11:35.339><c> to</c><00:11:35.429><c> emphasize</c><00:11:35.970><c> that</c>

00:11:36.309 --> 00:11:36.319 align:start position:0%
little bit so I want to emphasize that
 

00:11:36.319 --> 00:11:39.949 align:start position:0%
little bit so I want to emphasize that
functions<00:11:37.319><c> have</c><00:11:37.799><c> to</c><00:11:37.829><c> be</c><00:11:38.279><c> pure</c><00:11:38.970><c> well</c><00:11:39.660><c> what</c><00:11:39.869><c> does</c>

00:11:39.949 --> 00:11:39.959 align:start position:0%
functions have to be pure well what does
 

00:11:39.959 --> 00:11:41.780 align:start position:0%
functions have to be pure well what does
it<00:11:40.049><c> mean</c><00:11:40.259><c> to</c><00:11:40.470><c> be</c><00:11:40.589><c> pure</c><00:11:40.949><c> meaning</c><00:11:41.399><c> pure</c>

00:11:41.780 --> 00:11:41.790 align:start position:0%
it mean to be pure meaning pure
 

00:11:41.790 --> 00:11:45.919 align:start position:0%
it mean to be pure meaning pure
functions<00:11:42.449><c> don't</c><00:11:43.439><c> have</c><00:11:44.009><c> side</c><00:11:44.669><c> effects</c><00:11:45.059><c> so</c>

00:11:45.919 --> 00:11:45.929 align:start position:0%
functions don't have side effects so
 

00:11:45.929 --> 00:11:48.019 align:start position:0%
functions don't have side effects so
side<00:11:46.439><c> effects</c><00:11:46.859><c> well</c><00:11:47.160><c> what</c><00:11:47.429><c> are</c><00:11:47.549><c> side</c><00:11:47.699><c> effects</c>

00:11:48.019 --> 00:11:48.029 align:start position:0%
side effects well what are side effects
 

00:11:48.029 --> 00:11:50.090 align:start position:0%
side effects well what are side effects
then<00:11:48.299><c> well</c><00:11:48.989><c> in</c><00:11:49.259><c> this</c><00:11:49.499><c> case</c><00:11:49.739><c> there</c><00:11:49.980><c> are</c><00:11:50.009><c> two</c>

00:11:50.090 --> 00:11:50.100 align:start position:0%
then well in this case there are two
 

00:11:50.100 --> 00:11:52.369 align:start position:0%
then well in this case there are two
points<00:11:50.339><c> we</c><00:11:50.970><c> need</c><00:11:51.119><c> to</c><00:11:51.209><c> consider</c><00:11:51.540><c> and</c><00:11:52.139><c> I</c><00:11:52.199><c> would</c>

00:11:52.369 --> 00:11:52.379 align:start position:0%
points we need to consider and I would
 

00:11:52.379 --> 00:11:54.409 align:start position:0%
points we need to consider and I would
argue<00:11:52.559><c> that</c><00:11:52.769><c> the</c><00:11:53.009><c> first</c><00:11:53.189><c> point</c><00:11:53.549><c> is</c><00:11:53.730><c> a</c><00:11:53.759><c> lot</c><00:11:54.089><c> easy</c>

00:11:54.409 --> 00:11:54.419 align:start position:0%
argue that the first point is a lot easy
 

00:11:54.419 --> 00:11:56.629 align:start position:0%
argue that the first point is a lot easy
for<00:11:54.749><c> a</c><00:11:54.779><c> lot</c><00:11:55.019><c> of</c><00:11:55.169><c> us</c><00:11:55.379><c> but</c><00:11:55.889><c> the</c><00:11:55.949><c> second</c><00:11:56.249><c> point</c><00:11:56.429><c> is</c>

00:11:56.629 --> 00:11:56.639 align:start position:0%
for a lot of us but the second point is
 

00:11:56.639 --> 00:11:59.150 align:start position:0%
for a lot of us but the second point is
not<00:11:56.819><c> that</c><00:11:57.089><c> intuitive</c><00:11:57.569><c> the</c><00:11:58.169><c> first</c><00:11:58.439><c> thing</c><00:11:58.709><c> is</c><00:11:58.919><c> a</c>

00:11:59.150 --> 00:11:59.160 align:start position:0%
not that intuitive the first thing is a
 

00:11:59.160 --> 00:12:02.269 align:start position:0%
not that intuitive the first thing is a
pure<00:11:59.519><c> function</c><00:11:59.850><c> does</c><00:12:00.720><c> not</c><00:12:01.049><c> change</c><00:12:01.529><c> anything</c>

00:12:02.269 --> 00:12:02.279 align:start position:0%
pure function does not change anything
 

00:12:02.279 --> 00:12:04.429 align:start position:0%
pure function does not change anything
so<00:12:02.669><c> we</c><00:12:02.790><c> can</c><00:12:02.970><c> all</c><00:12:03.119><c> relate</c><00:12:03.449><c> to</c><00:12:03.629><c> that</c><00:12:03.779><c> of</c><00:12:04.199><c> course</c>

00:12:04.429 --> 00:12:04.439 align:start position:0%
so we can all relate to that of course
 

00:12:04.439 --> 00:12:06.799 align:start position:0%
so we can all relate to that of course
the<00:12:04.649><c> function</c><00:12:04.889><c> is</c><00:12:05.160><c> modifying</c><00:12:05.730><c> something</c><00:12:06.089><c> well</c>

00:12:06.799 --> 00:12:06.809 align:start position:0%
the function is modifying something well
 

00:12:06.809 --> 00:12:08.989 align:start position:0%
the function is modifying something well
that's<00:12:07.049><c> not</c><00:12:07.290><c> pure</c><00:12:07.619><c> but</c><00:12:07.949><c> there's</c><00:12:08.369><c> an</c><00:12:08.519><c> important</c>

00:12:08.989 --> 00:12:08.999 align:start position:0%
that's not pure but there's an important
 

00:12:08.999 --> 00:12:12.619 align:start position:0%
that's not pure but there's an important
rule<00:12:09.209><c> here</c><00:12:09.720><c> does</c><00:12:10.259><c> not</c><00:12:10.559><c> depend</c><00:12:11.249><c> on</c><00:12:11.639><c> anything</c>

00:12:12.619 --> 00:12:12.629 align:start position:0%
rule here does not depend on anything
 

00:12:12.629 --> 00:12:17.379 align:start position:0%
rule here does not depend on anything
that<00:12:13.730><c> changes</c><00:12:14.730><c> as</c><00:12:14.879><c> well</c><00:12:15.360><c> so</c><00:12:15.899><c> in</c><00:12:16.169><c> other</c><00:12:16.290><c> words</c><00:12:16.619><c> a</c>

00:12:17.379 --> 00:12:17.389 align:start position:0%
that changes as well so in other words a
 

00:12:17.389 --> 00:12:20.269 align:start position:0%
that changes as well so in other words a
pure<00:12:18.389><c> function</c><00:12:18.959><c> should</c><00:12:19.559><c> not</c><00:12:19.889><c> make</c><00:12:20.220><c> any</c>

00:12:20.269 --> 00:12:20.279 align:start position:0%
pure function should not make any
 

00:12:20.279 --> 00:12:22.579 align:start position:0%
pure function should not make any
changes<00:12:21.149><c> but</c><00:12:21.629><c> it</c><00:12:21.809><c> shouldn't</c><00:12:22.079><c> depend</c><00:12:22.199><c> on</c>

00:12:22.579 --> 00:12:22.589 align:start position:0%
changes but it shouldn't depend on
 

00:12:22.589 --> 00:12:25.039 align:start position:0%
changes but it shouldn't depend on
anything<00:12:23.100><c> that</c><00:12:23.220><c> changes</c><00:12:23.639><c> as</c><00:12:23.819><c> well</c><00:12:24.329><c> well</c><00:12:24.929><c> the</c>

00:12:25.039 --> 00:12:25.049 align:start position:0%
anything that changes as well well the
 

00:12:25.049 --> 00:12:27.019 align:start position:0%
anything that changes as well well the
first<00:12:25.290><c> rule</c><00:12:25.649><c> I</c><00:12:25.860><c> think</c><00:12:25.889><c> is</c><00:12:26.279><c> pretty</c><00:12:26.519><c> clear</c><00:12:26.999><c> to</c>

00:12:27.019 --> 00:12:27.029 align:start position:0%
first rule I think is pretty clear to
 

00:12:27.029 --> 00:12:29.299 align:start position:0%
first rule I think is pretty clear to
most<00:12:27.389><c> of</c><00:12:27.629><c> us</c><00:12:27.779><c> it's</c><00:12:28.290><c> quite</c><00:12:28.619><c> obvious</c><00:12:28.799><c> you</c><00:12:29.160><c> don't</c>

00:12:29.299 --> 00:12:29.309 align:start position:0%
most of us it's quite obvious you don't
 

00:12:29.309 --> 00:12:31.159 align:start position:0%
most of us it's quite obvious you don't
want<00:12:29.429><c> to</c><00:12:29.489><c> mess</c><00:12:29.759><c> with</c><00:12:29.970><c> data</c><00:12:30.299><c> you</c><00:12:30.480><c> don't</c><00:12:30.929><c> want</c><00:12:31.110><c> to</c>

00:12:31.159 --> 00:12:31.169 align:start position:0%
want to mess with data you don't want to
 

00:12:31.169 --> 00:12:33.739 align:start position:0%
want to mess with data you don't want to
change<00:12:31.350><c> share</c><00:12:31.679><c> data</c><00:12:31.889><c> that's</c><00:12:32.519><c> obvious</c><00:12:33.089><c> but</c><00:12:33.629><c> if</c>

00:12:33.739 --> 00:12:33.749 align:start position:0%
change share data that's obvious but if
 

00:12:33.749 --> 00:12:35.299 align:start position:0%
change share data that's obvious but if
I<00:12:33.869><c> say</c><00:12:34.169><c> that</c><00:12:34.350><c> a</c><00:12:34.410><c> pure</c><00:12:34.649><c> function</c><00:12:35.009><c> should</c><00:12:35.129><c> not</c>

00:12:35.299 --> 00:12:35.309 align:start position:0%
I say that a pure function should not
 

00:12:35.309 --> 00:12:37.400 align:start position:0%
I say that a pure function should not
depend<00:12:35.610><c> on</c><00:12:35.850><c> anything</c><00:12:36.089><c> that</c><00:12:36.269><c> changes</c><00:12:36.869><c> we're</c>

00:12:37.400 --> 00:12:37.410 align:start position:0%
depend on anything that changes we're
 

00:12:37.410 --> 00:12:40.129 align:start position:0%
depend on anything that changes we're
like<00:12:37.619><c> why</c><00:12:38.069><c> well</c><00:12:38.790><c> the</c><00:12:38.910><c> reason</c><00:12:39.329><c> is</c><00:12:39.509><c> one</c><00:12:39.959><c> of</c><00:12:40.049><c> the</c>

00:12:40.129 --> 00:12:40.139 align:start position:0%
like why well the reason is one of the
 

00:12:40.139 --> 00:12:41.539 align:start position:0%
like why well the reason is one of the
critical<00:12:40.499><c> features</c><00:12:40.679><c> of</c><00:12:41.040><c> functional</c>

00:12:41.539 --> 00:12:41.549 align:start position:0%
critical features of functional
 

00:12:41.549 --> 00:12:44.210 align:start position:0%
critical features of functional
programming<00:12:41.610><c> is</c><00:12:42.299><c> that</c><00:12:42.689><c> functions</c><00:12:43.589><c> can</c><00:12:44.009><c> be</c>

00:12:44.210 --> 00:12:44.220 align:start position:0%
programming is that functions can be
 

00:12:44.220 --> 00:12:46.429 align:start position:0%
programming is that functions can be
lazy<00:12:44.610><c> and</c><00:12:45.269><c> if</c><00:12:45.809><c> you're</c><00:12:45.959><c> depending</c><00:12:46.350><c> on</c>

00:12:46.429 --> 00:12:46.439 align:start position:0%
lazy and if you're depending on
 

00:12:46.439 --> 00:12:48.799 align:start position:0%
lazy and if you're depending on
something<00:12:46.799><c> that</c><00:12:46.949><c> changes</c><00:12:47.459><c> outside</c><00:12:48.089><c> your</c>

00:12:48.799 --> 00:12:48.809 align:start position:0%
something that changes outside your
 

00:12:48.809 --> 00:12:50.689 align:start position:0%
something that changes outside your
function<00:12:49.199><c> cannot</c><00:12:49.439><c> be</c><00:12:49.499><c> lazily</c><00:12:50.009><c> evaluated</c>

00:12:50.689 --> 00:12:50.699 align:start position:0%
function cannot be lazily evaluated
 

00:12:50.699 --> 00:12:52.489 align:start position:0%
function cannot be lazily evaluated
we'll<00:12:50.910><c> see</c><00:12:51.059><c> some</c><00:12:51.269><c> of</c><00:12:51.389><c> this</c><00:12:51.539><c> later</c><00:12:51.720><c> on</c><00:12:51.989><c> when</c><00:12:52.470><c> we</c>

00:12:52.489 --> 00:12:52.499 align:start position:0%
we'll see some of this later on when we
 

00:12:52.499 --> 00:12:54.710 align:start position:0%
we'll see some of this later on when we
look<00:12:52.709><c> at</c><00:12:52.829><c> some</c><00:12:52.980><c> examples</c><00:12:53.009><c> along</c><00:12:53.819><c> the</c><00:12:53.999><c> way</c><00:12:54.119><c> so</c>

00:12:54.710 --> 00:12:54.720 align:start position:0%
look at some examples along the way so
 

00:12:54.720 --> 00:12:56.869 align:start position:0%
look at some examples along the way so
having<00:12:54.929><c> said</c><00:12:55.319><c> this</c><00:12:55.619><c> what</c><00:12:56.309><c> are</c><00:12:56.429><c> really</c><00:12:56.759><c> the</c>

00:12:56.869 --> 00:12:56.879 align:start position:0%
having said this what are really the
 

00:12:56.879 --> 00:12:58.400 align:start position:0%
having said this what are really the
benefits<00:12:57.329><c> of</c><00:12:57.539><c> this</c><00:12:57.779><c> one</c><00:12:58.110><c> of</c><00:12:58.199><c> the</c><00:12:58.259><c> biggest</c>

00:12:58.400 --> 00:12:58.410 align:start position:0%
benefits of this one of the biggest
 

00:12:58.410 --> 00:13:01.069 align:start position:0%
benefits of this one of the biggest
benefits<00:12:58.980><c> is</c><00:12:59.279><c> that</c><00:12:59.519><c> it</c><00:12:59.999><c> becomes</c><00:13:00.360><c> easier</c><00:13:01.049><c> to</c>

00:13:01.069 --> 00:13:01.079 align:start position:0%
benefits is that it becomes easier to
 

00:13:01.079 --> 00:13:03.289 align:start position:0%
benefits is that it becomes easier to
work<00:13:01.379><c> with</c><00:13:01.589><c> the</c><00:13:01.679><c> code</c><00:13:01.860><c> it</c><00:13:02.069><c> reduces</c><00:13:02.639><c> accidental</c>

00:13:03.289 --> 00:13:03.299 align:start position:0%
work with the code it reduces accidental
 

00:13:03.299 --> 00:13:05.779 align:start position:0%
work with the code it reduces accidental
complexity<00:13:03.899><c> in</c><00:13:04.199><c> code</c><00:13:04.529><c> quite</c><00:13:04.829><c> often</c><00:13:05.129><c> that</c><00:13:05.639><c> is</c>

00:13:05.779 --> 00:13:05.789 align:start position:0%
complexity in code quite often that is
 

00:13:05.789 --> 00:13:07.519 align:start position:0%
complexity in code quite often that is
one<00:13:05.939><c> of</c><00:13:06.029><c> the</c><00:13:06.089><c> biggest</c><00:13:06.389><c> benefits</c><00:13:06.809><c> but</c><00:13:07.289><c> I</c><00:13:07.319><c> want</c>

00:13:07.519 --> 00:13:07.529 align:start position:0%
one of the biggest benefits but I want
 

00:13:07.529 --> 00:13:08.389 align:start position:0%
one of the biggest benefits but I want
to<00:13:07.589><c> draw</c><00:13:07.739><c> the</c><00:13:07.799><c> distinction</c><00:13:08.249><c> between</c>

00:13:08.389 --> 00:13:08.399 align:start position:0%
to draw the distinction between
 

00:13:08.399 --> 00:13:10.939 align:start position:0%
to draw the distinction between
functional<00:13:08.970><c> style</c><00:13:09.389><c> versus</c><00:13:10.079><c> purely</c>

00:13:10.939 --> 00:13:10.949 align:start position:0%
functional style versus purely
 

00:13:10.949 --> 00:13:12.439 align:start position:0%
functional style versus purely
functional<00:13:11.160><c> programming</c><00:13:11.699><c> languages</c><00:13:12.299><c> a</c>

00:13:12.439 --> 00:13:12.449 align:start position:0%
functional programming languages a
 

00:13:12.449 --> 00:13:14.749 align:start position:0%
functional programming languages a
purely<00:13:13.199><c> functional</c><00:13:13.619><c> programming</c><00:13:14.160><c> language</c>

00:13:14.749 --> 00:13:14.759 align:start position:0%
purely functional programming language
 

00:13:14.759 --> 00:13:17.689 align:start position:0%
purely functional programming language
will<00:13:15.299><c> not</c><00:13:15.569><c> allow</c><00:13:15.959><c> any</c><00:13:16.259><c> mutability</c><00:13:17.009><c> period</c><00:13:17.549><c> a</c>

00:13:17.689 --> 00:13:17.699 align:start position:0%
will not allow any mutability period a
 

00:13:17.699 --> 00:13:21.170 align:start position:0%
will not allow any mutability period a
functional<00:13:18.569><c> style</c><00:13:18.959><c> language</c><00:13:19.709><c> often</c>

00:13:21.170 --> 00:13:21.180 align:start position:0%
functional style language often
 

00:13:21.180 --> 00:13:24.200 align:start position:0%
functional style language often
suitability<00:13:21.660><c> at</c><00:13:22.110><c> the</c><00:13:22.260><c> risk</c><00:13:22.500><c> of</c><00:13:22.710><c> we</c><00:13:23.100><c> failing</c><00:13:23.760><c> to</c>

00:13:24.200 --> 00:13:24.210 align:start position:0%
suitability at the risk of we failing to
 

00:13:24.210 --> 00:13:26.090 align:start position:0%
suitability at the risk of we failing to
do<00:13:24.330><c> the</c><00:13:24.450><c> right</c><00:13:24.630><c> things</c><00:13:24.930><c> so</c><00:13:25.470><c> it</c><00:13:25.620><c> puts</c><00:13:25.830><c> a</c><00:13:25.920><c> burden</c>

00:13:26.090 --> 00:13:26.100 align:start position:0%
do the right things so it puts a burden
 

00:13:26.100 --> 00:13:28.820 align:start position:0%
do the right things so it puts a burden
on<00:13:26.370><c> you</c><00:13:26.820><c> rather</c><00:13:27.270><c> than</c><00:13:27.480><c> protecting</c><00:13:27.990><c> you</c><00:13:28.170><c> but</c><00:13:28.710><c> it</c>

00:13:28.820 --> 00:13:28.830 align:start position:0%
on you rather than protecting you but it
 

00:13:28.830 --> 00:13:30.830 align:start position:0%
on you rather than protecting you but it
provides<00:13:29.190><c> higher-order</c><00:13:29.520><c> functions</c><00:13:30.300><c> so</c><00:13:30.750><c> in</c>

00:13:30.830 --> 00:13:30.840 align:start position:0%
provides higher-order functions so in
 

00:13:30.840 --> 00:13:32.510 align:start position:0%
provides higher-order functions so in
other<00:13:30.900><c> words</c><00:13:31.170><c> you</c><00:13:31.320><c> can</c><00:13:31.500><c> say</c><00:13:31.740><c> if</c><00:13:32.190><c> the</c><00:13:32.370><c> language</c>

00:13:32.510 --> 00:13:32.520 align:start position:0%
other words you can say if the language
 

00:13:32.520 --> 00:13:34.700 align:start position:0%
other words you can say if the language
provides<00:13:33.090><c> higher-order</c><00:13:33.480><c> functions</c><00:13:34.320><c> it's</c><00:13:34.590><c> a</c>

00:13:34.700 --> 00:13:34.710 align:start position:0%
provides higher-order functions it's a
 

00:13:34.710 --> 00:13:37.250 align:start position:0%
provides higher-order functions it's a
function<00:13:35.070><c> of</c><00:13:35.160><c> style</c><00:13:35.550><c> language</c><00:13:36.150><c> if</c><00:13:36.510><c> a</c><00:13:36.810><c> language</c>

00:13:37.250 --> 00:13:37.260 align:start position:0%
function of style language if a language
 

00:13:37.260 --> 00:13:38.930 align:start position:0%
function of style language if a language
goes<00:13:37.440><c> to</c><00:13:37.590><c> the</c><00:13:37.680><c> extent</c><00:13:38.040><c> of</c><00:13:38.160><c> limiting</c>

00:13:38.930 --> 00:13:38.940 align:start position:0%
goes to the extent of limiting
 

00:13:38.940 --> 00:13:42.170 align:start position:0%
goes to the extent of limiting
mutability<00:13:39.980><c> in</c><00:13:40.980><c> addition</c><00:13:41.430><c> to</c><00:13:41.550><c> providing</c><00:13:41.700><c> the</c>

00:13:42.170 --> 00:13:42.180 align:start position:0%
mutability in addition to providing the
 

00:13:42.180 --> 00:13:44.060 align:start position:0%
mutability in addition to providing the
functional<00:13:42.780><c> the</c><00:13:43.230><c> higher-order</c><00:13:43.440><c> functions</c>

00:13:44.060 --> 00:13:44.070 align:start position:0%
functional the higher-order functions
 

00:13:44.070 --> 00:13:45.680 align:start position:0%
functional the higher-order functions
then<00:13:44.610><c> it</c><00:13:44.730><c> becomes</c><00:13:45.000><c> a</c><00:13:45.090><c> purely</c><00:13:45.480><c> functional</c>

00:13:45.680 --> 00:13:45.690 align:start position:0%
then it becomes a purely functional
 

00:13:45.690 --> 00:13:48.440 align:start position:0%
then it becomes a purely functional
language<00:13:46.320><c> for</c><00:13:46.830><c> example</c><00:13:46.950><c> Java</c><00:13:47.700><c> and</c><00:13:48.060><c> a</c><00:13:48.180><c> lot</c><00:13:48.330><c> of</c>

00:13:48.440 --> 00:13:48.450 align:start position:0%
language for example Java and a lot of
 

00:13:48.450 --> 00:13:50.360 align:start position:0%
language for example Java and a lot of
other<00:13:48.660><c> languages</c><00:13:49.110><c> are</c><00:13:49.410><c> functional</c><00:13:50.010><c> style</c>

00:13:50.360 --> 00:13:50.370 align:start position:0%
other languages are functional style
 

00:13:50.370 --> 00:13:53.030 align:start position:0%
other languages are functional style
languages<00:13:51.060><c> like</c><00:13:51.600><c> like</c><00:13:51.840><c> Haskell</c><00:13:52.140><c> for</c><00:13:52.620><c> example</c>

00:13:53.030 --> 00:13:53.040 align:start position:0%
languages like like Haskell for example
 

00:13:53.040 --> 00:13:54.620 align:start position:0%
languages like like Haskell for example
is<00:13:53.100><c> a</c><00:13:53.130><c> purely</c><00:13:53.430><c> functional</c><00:13:53.730><c> language</c><00:13:54.300><c> because</c>

00:13:54.620 --> 00:13:54.630 align:start position:0%
is a purely functional language because
 

00:13:54.630 --> 00:13:56.840 align:start position:0%
is a purely functional language because
they<00:13:55.170><c> provide</c><00:13:55.560><c> higher-order</c><00:13:55.800><c> functions</c><00:13:56.490><c> but</c>

00:13:56.840 --> 00:13:56.850 align:start position:0%
they provide higher-order functions but
 

00:13:56.850 --> 00:13:59.060 align:start position:0%
they provide higher-order functions but
they<00:13:57.000><c> don't</c><00:13:57.300><c> also</c><00:13:57.510><c> permit</c><00:13:57.960><c> mutability</c><00:13:58.500><c> but</c>

00:13:59.060 --> 00:13:59.070 align:start position:0%
they don't also permit mutability but
 

00:13:59.070 --> 00:14:00.890 align:start position:0%
they don't also permit mutability but
what<00:13:59.250><c> are</c><00:13:59.370><c> some</c><00:13:59.400><c> of</c><00:13:59.580><c> the</c><00:13:59.820><c> real</c><00:14:00.270><c> benefits</c><00:14:00.480><c> of</c>

00:14:00.890 --> 00:14:00.900 align:start position:0%
what are some of the real benefits of
 

00:14:00.900 --> 00:14:02.600 align:start position:0%
what are some of the real benefits of
this<00:14:01.110><c> we're</c><00:14:01.530><c> going</c><00:14:01.650><c> to</c><00:14:01.710><c> be</c><00:14:01.800><c> looking</c><00:14:02.220><c> at</c><00:14:02.340><c> state</c>

00:14:02.600 --> 00:14:02.610 align:start position:0%
this we're going to be looking at state
 

00:14:02.610 --> 00:14:04.040 align:start position:0%
this we're going to be looking at state
transformation<00:14:03.540><c> rather</c><00:14:03.720><c> than</c><00:14:03.840><c> state</c>

00:14:04.040 --> 00:14:04.050 align:start position:0%
transformation rather than state
 

00:14:04.050 --> 00:14:06.740 align:start position:0%
transformation rather than state
mutation<00:14:04.920><c> so</c><00:14:05.460><c> we</c><00:14:05.670><c> take</c><00:14:05.940><c> their</c><00:14:06.210><c> data</c><00:14:06.420><c> and</c>

00:14:06.740 --> 00:14:06.750 align:start position:0%
mutation so we take their data and
 

00:14:06.750 --> 00:14:08.810 align:start position:0%
mutation so we take their data and
transform<00:14:07.410><c> through</c><00:14:07.650><c> the</c><00:14:07.770><c> states</c><00:14:08.070><c> rather</c><00:14:08.640><c> than</c>

00:14:08.810 --> 00:14:08.820 align:start position:0%
transform through the states rather than
 

00:14:08.820 --> 00:14:10.610 align:start position:0%
transform through the states rather than
mutating<00:14:09.390><c> the</c><00:14:09.480><c> state</c><00:14:09.690><c> but</c><00:14:10.080><c> let's</c><00:14:10.290><c> look</c><00:14:10.500><c> at</c>

00:14:10.610 --> 00:14:10.620 align:start position:0%
mutating the state but let's look at
 

00:14:10.620 --> 00:14:12.770 align:start position:0%
mutating the state but let's look at
what<00:14:10.800><c> this</c><00:14:10.950><c> really</c><00:14:11.160><c> means</c><00:14:11.580><c> to</c><00:14:11.850><c> us</c><00:14:12.000><c> in</c><00:14:12.450><c> some</c>

00:14:12.770 --> 00:14:12.780 align:start position:0%
what this really means to us in some
 

00:14:12.780 --> 00:14:15.170 align:start position:0%
what this really means to us in some
context<00:14:13.350><c> let's</c><00:14:13.980><c> say</c><00:14:14.190><c> before</c><00:14:14.730><c> we</c><00:14:14.850><c> go</c><00:14:14.970><c> any</c>

00:14:15.170 --> 00:14:15.180 align:start position:0%
context let's say before we go any
 

00:14:15.180 --> 00:14:18.200 align:start position:0%
context let's say before we go any
further<00:14:15.450><c> with</c><00:14:15.900><c> this</c><00:14:15.930><c> let's</c><00:14:16.740><c> consider</c><00:14:17.210><c> methods</c>

00:14:18.200 --> 00:14:18.210 align:start position:0%
further with this let's consider methods
 

00:14:18.210 --> 00:14:20.990 align:start position:0%
further with this let's consider methods
so<00:14:18.600><c> what</c><00:14:18.810><c> in</c><00:14:18.930><c> the</c><00:14:19.050><c> world</c><00:14:19.320><c> is</c><00:14:19.590><c> a</c><00:14:19.650><c> method</c><00:14:20.250><c> method</c>

00:14:20.990 --> 00:14:21.000 align:start position:0%
so what in the world is a method method
 

00:14:21.000 --> 00:14:24.010 align:start position:0%
so what in the world is a method method
it<00:14:21.090><c> is</c><00:14:21.120><c> a</c><00:14:21.270><c> function</c><00:14:21.750><c> after</c><00:14:22.110><c> all</c><00:14:22.290><c> which</c><00:14:23.160><c> often</c>

00:14:24.010 --> 00:14:24.020 align:start position:0%
it is a function after all which often
 

00:14:24.020 --> 00:14:28.130 align:start position:0%
it is a function after all which often
belongs<00:14:25.020><c> to</c><00:14:25.380><c> a</c><00:14:25.410><c> class</c><00:14:25.920><c> or</c><00:14:26.370><c> to</c><00:14:27.000><c> an</c><00:14:27.150><c> object</c><00:14:27.750><c> so</c>

00:14:28.130 --> 00:14:28.140 align:start position:0%
belongs to a class or to an object so
 

00:14:28.140 --> 00:14:30.560 align:start position:0%
belongs to a class or to an object so
that's<00:14:28.410><c> what</c><00:14:28.560><c> we</c><00:14:28.740><c> call</c><00:14:29.010><c> as</c><00:14:29.280><c> a</c><00:14:29.340><c> method</c><00:14:29.910><c> in</c><00:14:30.060><c> Java</c>

00:14:30.560 --> 00:14:30.570 align:start position:0%
that's what we call as a method in Java
 

00:14:30.570 --> 00:14:32.900 align:start position:0%
that's what we call as a method in Java
a<00:14:30.990><c> method</c><00:14:31.500><c> is</c><00:14:31.590><c> a</c><00:14:31.620><c> function</c><00:14:32.130><c> but</c><00:14:32.550><c> but</c><00:14:32.880><c> that</c>

00:14:32.900 --> 00:14:32.910 align:start position:0%
a method is a function but but that
 

00:14:32.910 --> 00:14:35.120 align:start position:0%
a method is a function but but that
function<00:14:33.450><c> often</c><00:14:33.720><c> belongs</c><00:14:34.260><c> to</c><00:14:34.500><c> either</c><00:14:34.710><c> a</c><00:14:34.830><c> class</c>

00:14:35.120 --> 00:14:35.130 align:start position:0%
function often belongs to either a class
 

00:14:35.130 --> 00:14:37.790 align:start position:0%
function often belongs to either a class
or<00:14:35.700><c> it</c><00:14:35.970><c> belongs</c><00:14:36.240><c> to</c><00:14:36.330><c> an</c><00:14:36.540><c> object</c><00:14:37.050><c> but</c><00:14:37.530><c> on</c><00:14:37.680><c> the</c>

00:14:37.790 --> 00:14:37.800 align:start position:0%
or it belongs to an object but on the
 

00:14:37.800 --> 00:14:40.610 align:start position:0%
or it belongs to an object but on the
other<00:14:37.920><c> hand</c><00:14:38.310><c> a</c><00:14:38.490><c> function</c><00:14:39.240><c> has</c><00:14:39.450><c> four</c><00:14:40.050><c> things</c>

00:14:40.610 --> 00:14:40.620 align:start position:0%
other hand a function has four things
 

00:14:40.620 --> 00:14:42.590 align:start position:0%
other hand a function has four things
well<00:14:41.310><c> what</c><00:14:41.520><c> are</c><00:14:41.610><c> the</c><00:14:41.670><c> four</c><00:14:41.910><c> things</c><00:14:42.120><c> a</c><00:14:42.300><c> function</c>

00:14:42.590 --> 00:14:42.600 align:start position:0%
well what are the four things a function
 

00:14:42.600 --> 00:14:44.630 align:start position:0%
well what are the four things a function
typically<00:14:43.020><c> has</c><00:14:43.200><c> the</c><00:14:43.710><c> first</c><00:14:43.950><c> thing</c><00:14:44.160><c> it</c><00:14:44.280><c> has</c><00:14:44.460><c> is</c>

00:14:44.630 --> 00:14:44.640 align:start position:0%
typically has the first thing it has is
 

00:14:44.640 --> 00:14:47.120 align:start position:0%
typically has the first thing it has is
the<00:14:44.760><c> name</c><00:14:45.060><c> of</c><00:14:45.330><c> a</c><00:14:45.480><c> function</c><00:14:45.630><c> so</c><00:14:46.200><c> we</c><00:14:46.350><c> celebrated</c>

00:14:47.120 --> 00:14:47.130 align:start position:0%
the name of a function so we celebrated
 

00:14:47.130 --> 00:14:48.980 align:start position:0%
the name of a function so we celebrated
we<00:14:47.190><c> give</c><00:14:47.370><c> names</c><00:14:47.640><c> for</c><00:14:47.850><c> functions</c><00:14:48.240><c> the</c><00:14:48.660><c> second</c>

00:14:48.980 --> 00:14:48.990 align:start position:0%
we give names for functions the second
 

00:14:48.990 --> 00:14:51.140 align:start position:0%
we give names for functions the second
thing<00:14:49.140><c> it</c><00:14:49.230><c> contains</c><00:14:49.620><c> often</c><00:14:50.100><c> is</c><00:14:50.280><c> a</c><00:14:50.310><c> return</c><00:14:50.820><c> type</c>

00:14:51.140 --> 00:14:51.150 align:start position:0%
thing it contains often is a return type
 

00:14:51.150 --> 00:14:53.180 align:start position:0%
thing it contains often is a return type
will<00:14:51.750><c> we</c><00:14:51.960><c> tell</c><00:14:52.170><c> what</c><00:14:52.500><c> this</c><00:14:52.710><c> what</c><00:14:53.010><c> is</c><00:14:53.100><c> the</c>

00:14:53.180 --> 00:14:53.190 align:start position:0%
will we tell what this what is the
 

00:14:53.190 --> 00:14:55.100 align:start position:0%
will we tell what this what is the
function<00:14:53.550><c> return</c><00:14:53.910><c> the</c><00:14:54.450><c> third</c><00:14:54.690><c> thing</c><00:14:54.960><c> is</c><00:14:55.080><c> a</c>

00:14:55.100 --> 00:14:55.110 align:start position:0%
function return the third thing is a
 

00:14:55.110 --> 00:14:57.620 align:start position:0%
function return the third thing is a
parameter<00:14:55.590><c> list</c><00:14:56.370><c> and</c><00:14:56.610><c> of</c><00:14:57.000><c> course</c><00:14:57.240><c> the</c><00:14:57.450><c> last</c>

00:14:57.620 --> 00:14:57.630 align:start position:0%
parameter list and of course the last
 

00:14:57.630 --> 00:14:59.510 align:start position:0%
parameter list and of course the last
thing<00:14:57.870><c> of</c><00:14:58.050><c> course</c><00:14:58.110><c> is</c><00:14:58.590><c> the</c><00:14:58.830><c> body</c><00:14:59.100><c> of</c><00:14:59.400><c> the</c>

00:14:59.510 --> 00:14:59.520 align:start position:0%
thing of course is the body of the
 

00:14:59.520 --> 00:15:01.100 align:start position:0%
thing of course is the body of the
function<00:14:59.850><c> so</c><00:15:00.030><c> that's</c><00:15:00.480><c> what</c><00:15:00.690><c> a</c><00:15:00.720><c> function</c>

00:15:01.100 --> 00:15:01.110 align:start position:0%
function so that's what a function
 

00:15:01.110 --> 00:15:03.860 align:start position:0%
function so that's what a function
typically<00:15:01.710><c> contains</c><00:15:02.310><c> when</c><00:15:02.820><c> we</c><00:15:02.970><c> write</c><00:15:03.240><c> them</c><00:15:03.480><c> so</c>

00:15:03.860 --> 00:15:03.870 align:start position:0%
typically contains when we write them so
 

00:15:03.870 --> 00:15:05.420 align:start position:0%
typically contains when we write them so
let's<00:15:04.020><c> look</c><00:15:04.140><c> at</c><00:15:04.290><c> an</c><00:15:04.380><c> example</c><00:15:04.740><c> of</c><00:15:05.010><c> using</c><00:15:05.190><c> a</c>

00:15:05.420 --> 00:15:05.430 align:start position:0%
let's look at an example of using a
 

00:15:05.430 --> 00:15:07.790 align:start position:0%
let's look at an example of using a
method<00:15:05.850><c> or</c><00:15:05.940><c> a</c><00:15:06.000><c> function</c><00:15:06.290><c> suppose</c><00:15:07.290><c> I</c><00:15:07.560><c> were</c><00:15:07.740><c> to</c>

00:15:07.790 --> 00:15:07.800 align:start position:0%
method or a function suppose I were to
 

00:15:07.800 --> 00:15:10.640 align:start position:0%
method or a function suppose I were to
say<00:15:08.070><c> thread</c><00:15:08.610><c> is</c><00:15:08.940><c> equal</c><00:15:09.420><c> to</c><00:15:09.570><c> new</c><00:15:09.780><c> thread</c><00:15:10.320><c> and</c>

00:15:10.640 --> 00:15:10.650 align:start position:0%
say thread is equal to new thread and
 

00:15:10.650 --> 00:15:12.080 align:start position:0%
say thread is equal to new thread and
then<00:15:11.070><c> of</c><00:15:11.160><c> course</c><00:15:11.190><c> I'm</c><00:15:11.580><c> going</c><00:15:11.670><c> to</c><00:15:11.730><c> say</c><00:15:11.790><c> thread</c>

00:15:12.080 --> 00:15:12.090 align:start position:0%
then of course I'm going to say thread
 

00:15:12.090 --> 00:15:14.450 align:start position:0%
then of course I'm going to say thread
darts<00:15:12.420><c> start</c><00:15:12.840><c> over</c><00:15:13.290><c> here</c><00:15:13.620><c> and</c><00:15:13.770><c> then</c><00:15:14.160><c> I'm</c><00:15:14.280><c> going</c>

00:15:14.450 --> 00:15:14.460 align:start position:0%
darts start over here and then I'm going
 

00:15:14.460 --> 00:15:17.120 align:start position:0%
darts start over here and then I'm going
to<00:15:14.520><c> simply</c><00:15:14.790><c> say</c><00:15:15.000><c> in</c><00:15:15.240><c> main</c><00:15:15.600><c> over</c><00:15:16.140><c> here</c><00:15:16.500><c> and</c><00:15:16.650><c> we</c>

00:15:17.120 --> 00:15:17.130 align:start position:0%
to simply say in main over here and we
 

00:15:17.130 --> 00:15:19.310 align:start position:0%
to simply say in main over here and we
can<00:15:17.280><c> see</c><00:15:17.520><c> that</c><00:15:17.550><c> in</c><00:15:17.880><c> main</c><00:15:18.120><c> just</c><00:15:18.390><c> popped</c><00:15:18.630><c> up</c><00:15:18.810><c> but</c>

00:15:19.310 --> 00:15:19.320 align:start position:0%
can see that in main just popped up but
 

00:15:19.320 --> 00:15:20.960 align:start position:0%
can see that in main just popped up but
of<00:15:19.440><c> course</c><00:15:19.710><c> I</c><00:15:20.040><c> want</c><00:15:20.250><c> to</c><00:15:20.370><c> do</c><00:15:20.490><c> something</c><00:15:20.850><c> in</c>

00:15:20.960 --> 00:15:20.970 align:start position:0%
of course I want to do something in
 

00:15:20.970 --> 00:15:23.390 align:start position:0%
of course I want to do something in
another<00:15:21.360><c> thread</c><00:15:21.750><c> so</c><00:15:22.260><c> we</c><00:15:22.290><c> say</c><00:15:22.560><c> new</c><00:15:22.770><c> runnable</c>

00:15:23.390 --> 00:15:23.400 align:start position:0%
another thread so we say new runnable
 

00:15:23.400 --> 00:15:25.970 align:start position:0%
another thread so we say new runnable
over<00:15:23.790><c> here</c><00:15:24.150><c> and</c><00:15:24.330><c> then</c><00:15:24.690><c> once</c><00:15:24.930><c> I</c><00:15:25.140><c> create</c><00:15:25.710><c> the</c>

00:15:25.970 --> 00:15:25.980 align:start position:0%
over here and then once I create the
 

00:15:25.980 --> 00:15:28.160 align:start position:0%
over here and then once I create the
runnable<00:15:26.460><c> I'm</c><00:15:26.640><c> going</c><00:15:26.880><c> to</c><00:15:26.940><c> say</c><00:15:27.120><c> public</c><00:15:27.870><c> void</c>

00:15:28.160 --> 00:15:28.170 align:start position:0%
runnable I'm going to say public void
 

00:15:28.170 --> 00:15:30.650 align:start position:0%
runnable I'm going to say public void
run<00:15:28.770><c> and</c><00:15:29.160><c> then</c><00:15:29.580><c> with</c><00:15:29.820><c> them</c><00:15:30.000><c> does</c><00:15:30.180><c> run</c><00:15:30.420><c> method</c>

00:15:30.650 --> 00:15:30.660 align:start position:0%
run and then with them does run method
 

00:15:30.660 --> 00:15:33.410 align:start position:0%
run and then with them does run method
of<00:15:30.930><c> course</c><00:15:31.170><c> I'm</c><00:15:31.410><c> going</c><00:15:31.560><c> to</c><00:15:31.620><c> say</c><00:15:31.680><c> nyan</c><00:15:32.610><c> another</c>

00:15:33.410 --> 00:15:33.420 align:start position:0%
of course I'm going to say nyan another
 

00:15:33.420 --> 00:15:36.590 align:start position:0%
of course I'm going to say nyan another
let's<00:15:33.810><c> say</c><00:15:33.990><c> a</c><00:15:34.200><c> node</c><00:15:34.560><c> or</c><00:15:34.710><c> a</c><00:15:34.980><c> thread</c><00:15:35.610><c> so</c><00:15:36.150><c> in</c><00:15:36.450><c> this</c>

00:15:36.590 --> 00:15:36.600 align:start position:0%
let's say a node or a thread so in this
 

00:15:36.600 --> 00:15:38.870 align:start position:0%
let's say a node or a thread so in this
case<00:15:36.810><c> of</c><00:15:37.020><c> course</c><00:15:37.050><c> we</c><00:15:37.590><c> will</c><00:15:37.770><c> run</c><00:15:38.010><c> this</c><00:15:38.190><c> function</c>

00:15:38.870 --> 00:15:38.880 align:start position:0%
case of course we will run this function
 

00:15:38.880 --> 00:15:41.240 align:start position:0%
case of course we will run this function
and<00:15:39.300><c> we</c><00:15:39.510><c> can</c><00:15:39.540><c> see</c><00:15:39.870><c> that</c><00:15:40.080><c> in</c><00:15:40.290><c> main</c><00:15:40.530><c> popped</c><00:15:41.070><c> up</c>

00:15:41.240 --> 00:15:41.250 align:start position:0%
and we can see that in main popped up
 

00:15:41.250 --> 00:15:43.010 align:start position:0%
and we can see that in main popped up
first<00:15:41.520><c> and</c><00:15:41.850><c> then</c><00:15:42.030><c> an</c><00:15:42.120><c> end</c><00:15:42.330><c> of</c><00:15:42.420><c> the</c><00:15:42.510><c> thread</c><00:15:42.780><c> once</c>

00:15:43.010 --> 00:15:43.020 align:start position:0%
first and then an end of the thread once
 

00:15:43.020 --> 00:15:45.530 align:start position:0%
first and then an end of the thread once
that<00:15:43.230><c> kick</c><00:15:43.440><c> thread</c><00:15:44.160><c> kicked</c><00:15:44.430><c> in</c><00:15:44.610><c> it</c><00:15:44.820><c> said</c><00:15:45.330><c> that</c>

00:15:45.530 --> 00:15:45.540 align:start position:0%
that kick thread kicked in it said that
 

00:15:45.540 --> 00:15:47.180 align:start position:0%
that kick thread kicked in it said that
that's<00:15:45.750><c> going</c><00:15:45.930><c> to</c><00:15:46.020><c> run</c><00:15:46.140><c> but</c><00:15:46.740><c> if</c><00:15:46.830><c> you</c><00:15:46.890><c> look</c><00:15:47.070><c> at</c>

00:15:47.180 --> 00:15:47.190 align:start position:0%
that's going to run but if you look at
 

00:15:47.190 --> 00:15:50.270 align:start position:0%
that's going to run but if you look at
this<00:15:47.370><c> code</c><00:15:47.580><c> line</c><00:15:47.880><c> number</c><00:15:48.120><c> 16</c><00:15:48.720><c> he</c><00:15:49.410><c> is</c><00:15:49.470><c> a</c><00:15:49.710><c> method</c>

00:15:50.270 --> 00:15:50.280 align:start position:0%
this code line number 16 he is a method
 

00:15:50.280 --> 00:15:52.730 align:start position:0%
this code line number 16 he is a method
which<00:15:50.430><c> is</c><00:15:50.490><c> the</c><00:15:50.610><c> run</c><00:15:50.910><c> method</c><00:15:51.390><c> we</c><00:15:51.930><c> lack</c><00:15:52.290><c> that</c><00:15:52.320><c> run</c>

00:15:52.730 --> 00:15:52.740 align:start position:0%
which is the run method we lack that run
 

00:15:52.740 --> 00:15:54.380 align:start position:0%
which is the run method we lack that run
method<00:15:53.070><c> with</c><00:15:53.190><c> unrunnable</c><00:15:53.520><c> and</c><00:15:53.970><c> then</c><00:15:54.060><c> we</c><00:15:54.150><c> pass</c>

00:15:54.380 --> 00:15:54.390 align:start position:0%
method with unrunnable and then we pass
 

00:15:54.390 --> 00:15:56.900 align:start position:0%
method with unrunnable and then we pass
it<00:15:54.630><c> to</c><00:15:54.840><c> the</c><00:15:55.290><c> thread</c><00:15:55.650><c> class</c><00:15:55.860><c> we've</c><00:15:56.520><c> been</c><00:15:56.640><c> doing</c>

00:15:56.900 --> 00:15:56.910 align:start position:0%
it to the thread class we've been doing
 

00:15:56.910 --> 00:15:58.990 align:start position:0%
it to the thread class we've been doing
this<00:15:57.000><c> for</c><00:15:57.210><c> a</c><00:15:57.240><c> very</c><00:15:57.300><c> long</c><00:15:57.690><c> time</c><00:15:58.260><c> of</c><00:15:58.290><c> course</c><00:15:58.650><c> but</c>

00:15:58.990 --> 00:15:59.000 align:start position:0%
this for a very long time of course but
 

00:15:59.000 --> 00:16:01.880 align:start position:0%
this for a very long time of course but
imagine<00:16:00.000><c> you</c><00:16:00.480><c> are</c><00:16:00.630><c> boarding</c><00:16:00.930><c> an</c><00:16:01.050><c> airplane</c><00:16:01.080><c> and</c>

00:16:01.880 --> 00:16:01.890 align:start position:0%
imagine you are boarding an airplane and
 

00:16:01.890 --> 00:16:04.000 align:start position:0%
imagine you are boarding an airplane and
they<00:16:02.040><c> tell</c><00:16:02.280><c> you</c><00:16:02.490><c> you</c><00:16:02.790><c> can</c><00:16:03.150><c> only</c><00:16:03.420><c> take</c><00:16:03.930><c> two</c>

00:16:04.000 --> 00:16:04.010 align:start position:0%
they tell you you can only take two
 

00:16:04.010 --> 00:16:06.800 align:start position:0%
they tell you you can only take two
items<00:16:05.010><c> with</c><00:16:05.370><c> you</c><00:16:05.640><c> and</c><00:16:05.910><c> you</c><00:16:06.180><c> cannot</c><00:16:06.420><c> take</c><00:16:06.660><c> more</c>

00:16:06.800 --> 00:16:06.810 align:start position:0%
items with you and you cannot take more
 

00:16:06.810 --> 00:16:09.200 align:start position:0%
items with you and you cannot take more
than<00:16:07.020><c> two</c><00:16:07.200><c> items</c><00:16:07.410><c> so</c><00:16:08.130><c> what</c><00:16:08.370><c> are</c><00:16:08.580><c> the</c><00:16:08.730><c> two</c><00:16:08.910><c> items</c>

00:16:09.200 --> 00:16:09.210 align:start position:0%
than two items so what are the two items
 

00:16:09.210 --> 00:16:11.600 align:start position:0%
than two items so what are the two items
you're<00:16:09.810><c> going</c><00:16:09.960><c> to</c><00:16:10.050><c> pick</c><00:16:10.290><c> from</c><00:16:10.560><c> here</c><00:16:10.620><c> well</c><00:16:11.430><c> what</c>

00:16:11.600 --> 00:16:11.610 align:start position:0%
you're going to pick from here well what
 

00:16:11.610 --> 00:16:13.520 align:start position:0%
you're going to pick from here well what
do<00:16:11.700><c> you</c><00:16:11.790><c> think</c><00:16:11.850><c> is</c><00:16:12.120><c> the</c><00:16:12.270><c> most</c><00:16:12.540><c> important</c><00:16:13.380><c> item</c>

00:16:13.520 --> 00:16:13.530 align:start position:0%
do you think is the most important item
 

00:16:13.530 --> 00:16:16.510 align:start position:0%
do you think is the most important item
here<00:16:14.010><c> the</c><00:16:14.160><c> one</c><00:16:14.340><c> you</c><00:16:14.460><c> cannot</c><00:16:14.970><c> board</c><00:16:15.690><c> without</c>

00:16:16.510 --> 00:16:16.520 align:start position:0%
here the one you cannot board without
 

00:16:16.520 --> 00:16:19.040 align:start position:0%
here the one you cannot board without
obviously<00:16:17.520><c> that</c><00:16:17.880><c> will</c><00:16:18.060><c> be</c><00:16:18.240><c> the</c><00:16:18.360><c> body</c><00:16:18.660><c> of</c><00:16:18.930><c> the</c>

00:16:19.040 --> 00:16:19.050 align:start position:0%
obviously that will be the body of the
 

00:16:19.050 --> 00:16:20.540 align:start position:0%
obviously that will be the body of the
function<00:16:19.200><c> without</c><00:16:19.860><c> the</c><00:16:20.100><c> body</c><00:16:20.280><c> of</c><00:16:20.460><c> the</c>

00:16:20.540 --> 00:16:20.550 align:start position:0%
function without the body of the
 

00:16:20.550 --> 00:16:22.130 align:start position:0%
function without the body of the
function<00:16:20.700><c> there's</c><00:16:21.090><c> no</c><00:16:21.240><c> point</c><00:16:21.570><c> doing</c><00:16:21.810><c> this</c>

00:16:22.130 --> 00:16:22.140 align:start position:0%
function there's no point doing this
 

00:16:22.140 --> 00:16:24.890 align:start position:0%
function there's no point doing this
well<00:16:22.620><c> yeah</c><00:16:23.040><c> you've</c><00:16:23.310><c> selected</c><00:16:23.610><c> one</c><00:16:24.150><c> item</c><00:16:24.660><c> you</c>

00:16:24.890 --> 00:16:24.900 align:start position:0%
well yeah you've selected one item you
 

00:16:24.900 --> 00:16:26.990 align:start position:0%
well yeah you've selected one item you
got<00:16:25.260><c> only</c><00:16:25.440><c> one</c><00:16:25.800><c> more</c><00:16:26.040><c> item</c><00:16:26.280><c> you</c><00:16:26.580><c> can</c><00:16:26.760><c> select</c>

00:16:26.990 --> 00:16:27.000 align:start position:0%
got only one more item you can select
 

00:16:27.000 --> 00:16:29.750 align:start position:0%
got only one more item you can select
well<00:16:27.690><c> obviously</c><00:16:27.980><c> what</c><00:16:28.980><c> good</c><00:16:29.220><c> is</c><00:16:29.340><c> having</c><00:16:29.490><c> the</c>

00:16:29.750 --> 00:16:29.760 align:start position:0%
well obviously what good is having the
 

00:16:29.760 --> 00:16:31.610 align:start position:0%
well obviously what good is having the
body<00:16:29.940><c> if</c><00:16:30.150><c> you</c><00:16:30.240><c> don't</c><00:16:30.420><c> have</c><00:16:30.540><c> the</c><00:16:30.690><c> data</c><00:16:30.960><c> to</c><00:16:31.200><c> work</c>

00:16:31.610 --> 00:16:31.620 align:start position:0%
body if you don't have the data to work
 

00:16:31.620 --> 00:16:33.890 align:start position:0%
body if you don't have the data to work
with<00:16:31.680><c> so</c><00:16:32.460><c> you</c><00:16:32.520><c> have</c><00:16:32.880><c> to</c><00:16:33.120><c> have</c><00:16:33.270><c> the</c><00:16:33.390><c> parameter</c>

00:16:33.890 --> 00:16:33.900 align:start position:0%
with so you have to have the parameter
 

00:16:33.900 --> 00:16:36.260 align:start position:0%
with so you have to have the parameter
looks<00:16:34.170><c> to</c><00:16:34.290><c> be</c><00:16:34.410><c> given</c><00:16:34.740><c> to</c><00:16:34.950><c> you</c><00:16:35.100><c> and</c><00:16:35.310><c> that's</c><00:16:36.060><c> it</c>

00:16:36.260 --> 00:16:36.270 align:start position:0%
looks to be given to you and that's it
 

00:16:36.270 --> 00:16:37.910 align:start position:0%
looks to be given to you and that's it
you're<00:16:36.390><c> out</c><00:16:36.540><c> of</c><00:16:36.570><c> limits</c><00:16:36.870><c> you</c><00:16:37.410><c> can</c><00:16:37.440><c> only</c><00:16:37.680><c> take</c>

00:16:37.910 --> 00:16:37.920 align:start position:0%
you're out of limits you can only take
 

00:16:37.920 --> 00:16:38.600 align:start position:0%
you're out of limits you can only take
two<00:16:38.130><c> things</c>

00:16:38.600 --> 00:16:38.610 align:start position:0%
two things
 

00:16:38.610 --> 00:16:40.810 align:start position:0%
two things
and<00:16:38.700><c> that's</c><00:16:38.910><c> exactly</c><00:16:39.060><c> what</c><00:16:39.540><c> lambda</c><00:16:39.840><c> cans</c><00:16:40.440><c> do</c>

00:16:40.810 --> 00:16:40.820 align:start position:0%
and that's exactly what lambda cans do
 

00:16:40.820 --> 00:16:44.600 align:start position:0%
and that's exactly what lambda cans do
lambda<00:16:41.820><c> expressions</c><00:16:42.920><c> essentially</c><00:16:43.920><c> have</c><00:16:44.160><c> only</c>

00:16:44.600 --> 00:16:44.610 align:start position:0%
lambda expressions essentially have only
 

00:16:44.610 --> 00:16:47.240 align:start position:0%
lambda expressions essentially have only
those<00:16:45.210><c> two</c><00:16:45.540><c> things</c><00:16:45.840><c> it's</c><00:16:46.380><c> got</c><00:16:46.620><c> a</c><00:16:46.680><c> parameter</c>

00:16:47.240 --> 00:16:47.250 align:start position:0%
those two things it's got a parameter
 

00:16:47.250 --> 00:16:49.520 align:start position:0%
those two things it's got a parameter
list<00:16:47.370><c> first</c><00:16:48.030><c> of</c><00:16:48.150><c> all</c><00:16:48.360><c> an</c><00:16:48.600><c> arrow</c><00:16:49.140><c> that</c>

00:16:49.520 --> 00:16:49.530 align:start position:0%
list first of all an arrow that
 

00:16:49.530 --> 00:16:51.350 align:start position:0%
list first of all an arrow that
separates<00:16:50.010><c> the</c><00:16:50.160><c> body</c><00:16:50.430><c> from</c><00:16:50.790><c> the</c><00:16:50.910><c> parameter</c>

00:16:51.350 --> 00:16:51.360 align:start position:0%
separates the body from the parameter
 

00:16:51.360 --> 00:16:53.450 align:start position:0%
separates the body from the parameter
list<00:16:51.540><c> that</c><00:16:52.170><c> is</c><00:16:52.500><c> the</c><00:16:52.650><c> structure</c><00:16:53.040><c> of</c><00:16:53.070><c> a</c><00:16:53.250><c> lambda</c>

00:16:53.450 --> 00:16:53.460 align:start position:0%
list that is the structure of a lambda
 

00:16:53.460 --> 00:16:55.790 align:start position:0%
list that is the structure of a lambda
expression<00:16:53.760><c> so</c><00:16:54.630><c> a</c><00:16:54.660><c> lambda</c><00:16:54.960><c> expression</c><00:16:55.230><c> has</c>

00:16:55.790 --> 00:16:55.800 align:start position:0%
expression so a lambda expression has
 

00:16:55.800 --> 00:16:58.790 align:start position:0%
expression so a lambda expression has
minimal<00:16:56.460><c> at</c><00:16:56.850><c> the</c><00:16:56.970><c> very</c><00:16:57.210><c> minimum</c><00:16:57.630><c> a</c><00:16:57.960><c> parameter</c>

00:16:58.790 --> 00:16:58.800 align:start position:0%
minimal at the very minimum a parameter
 

00:16:58.800 --> 00:17:00.740 align:start position:0%
minimal at the very minimum a parameter
list<00:16:59.070><c> and</c><00:16:59.250><c> a</c><00:16:59.310><c> body</c><00:16:59.640><c> well</c><00:17:00.270><c> what</c><00:17:00.480><c> about</c><00:17:00.570><c> the</c>

00:17:00.740 --> 00:17:00.750 align:start position:0%
list and a body well what about the
 

00:17:00.750 --> 00:17:03.140 align:start position:0%
list and a body well what about the
return<00:17:01.170><c> type</c><00:17:01.500><c> the</c><00:17:01.710><c> return</c><00:17:02.010><c> type</c><00:17:02.220><c> is</c><00:17:02.250><c> inferred</c>

00:17:03.140 --> 00:17:03.150 align:start position:0%
return type the return type is inferred
 

00:17:03.150 --> 00:17:05.330 align:start position:0%
return type the return type is inferred
based<00:17:03.840><c> on</c><00:17:04.050><c> the</c><00:17:04.170><c> context</c><00:17:04.770><c> here</c><00:17:04.890><c> you</c><00:17:05.010><c> don't</c><00:17:05.190><c> have</c>

00:17:05.330 --> 00:17:05.340 align:start position:0%
based on the context here you don't have
 

00:17:05.340 --> 00:17:07.250 align:start position:0%
based on the context here you don't have
to<00:17:05.520><c> say</c><00:17:05.670><c> the</c><00:17:05.790><c> return</c><00:17:06.060><c> type</c><00:17:06.330><c> what</c><00:17:06.960><c> about</c><00:17:07.170><c> the</c>

00:17:07.250 --> 00:17:07.260 align:start position:0%
to say the return type what about the
 

00:17:07.260 --> 00:17:09.290 align:start position:0%
to say the return type what about the
name<00:17:07.470><c> of</c><00:17:07.620><c> the</c><00:17:07.740><c> method</c><00:17:07.890><c> who</c><00:17:08.160><c> cares</c><00:17:08.520><c> when</c><00:17:09.180><c> the</c>

00:17:09.290 --> 00:17:09.300 align:start position:0%
name of the method who cares when the
 

00:17:09.300 --> 00:17:11.750 align:start position:0%
name of the method who cares when the
work<00:17:09.480><c> is</c><00:17:09.690><c> done</c><00:17:09.720><c> it's</c><00:17:10.290><c> anonymous</c><00:17:10.740><c> so</c><00:17:11.310><c> lambda</c>

00:17:11.750 --> 00:17:11.760 align:start position:0%
work is done it's anonymous so lambda
 

00:17:11.760 --> 00:17:14.180 align:start position:0%
work is done it's anonymous so lambda
expressions<00:17:12.390><c> are</c><00:17:12.510><c> anonymous</c><00:17:12.930><c> methods</c><00:17:13.740><c> whose</c>

00:17:14.180 --> 00:17:14.190 align:start position:0%
expressions are anonymous methods whose
 

00:17:14.190 --> 00:17:16.490 align:start position:0%
expressions are anonymous methods whose
return<00:17:14.550><c> pipes</c><00:17:14.850><c> are</c><00:17:15.150><c> inferred</c><00:17:15.660><c> and</c><00:17:15.960><c> all</c><00:17:16.320><c> you</c>

00:17:16.490 --> 00:17:16.500 align:start position:0%
return pipes are inferred and all you
 

00:17:16.500 --> 00:17:18.500 align:start position:0%
return pipes are inferred and all you
carry<00:17:16.800><c> with</c><00:17:17.070><c> you</c><00:17:17.100><c> is</c><00:17:17.370><c> a</c><00:17:17.400><c> parameter</c><00:17:18.030><c> list</c><00:17:18.060><c> an</c>

00:17:18.500 --> 00:17:18.510 align:start position:0%
carry with you is a parameter list an
 

00:17:18.510 --> 00:17:20.900 align:start position:0%
carry with you is a parameter list an
arrow<00:17:18.900><c> and</c><00:17:19.320><c> the</c><00:17:19.620><c> body</c><00:17:19.830><c> of</c><00:17:19.980><c> the</c><00:17:20.130><c> function</c><00:17:20.280><c> so</c>

00:17:20.900 --> 00:17:20.910 align:start position:0%
arrow and the body of the function so
 

00:17:20.910 --> 00:17:22.940 align:start position:0%
arrow and the body of the function so
what<00:17:21.090><c> I'm</c><00:17:21.180><c> going</c><00:17:21.330><c> to</c><00:17:21.420><c> do</c><00:17:21.600><c> here</c><00:17:21.930><c> is</c><00:17:22.200><c> take</c><00:17:22.620><c> this</c>

00:17:22.940 --> 00:17:22.950 align:start position:0%
what I'm going to do here is take this
 

00:17:22.950 --> 00:17:25.700 align:start position:0%
what I'm going to do here is take this
example<00:17:23.700><c> right</c><00:17:23.910><c> here</c><00:17:23.940><c> that</c><00:17:24.870><c> worked</c><00:17:25.200><c> a</c><00:17:25.380><c> minute</c>

00:17:25.700 --> 00:17:25.710 align:start position:0%
example right here that worked a minute
 

00:17:25.710 --> 00:17:27.230 align:start position:0%
example right here that worked a minute
ago<00:17:26.040><c> but</c><00:17:26.490><c> I'm</c><00:17:26.610><c> going</c><00:17:26.790><c> to</c><00:17:26.820><c> go</c><00:17:26.940><c> ahead</c><00:17:27.090><c> and</c>

00:17:27.230 --> 00:17:27.240 align:start position:0%
ago but I'm going to go ahead and
 

00:17:27.240 --> 00:17:29.870 align:start position:0%
ago but I'm going to go ahead and
rewrite<00:17:27.450><c> this</c><00:17:28.050><c> this</c><00:17:28.350><c> time</c><00:17:28.620><c> but</c><00:17:29.160><c> this</c><00:17:29.370><c> time</c><00:17:29.430><c> I'm</c>

00:17:29.870 --> 00:17:29.880 align:start position:0%
rewrite this this time but this time I'm
 

00:17:29.880 --> 00:17:32.120 align:start position:0%
rewrite this this time but this time I'm
going<00:17:30.060><c> to</c><00:17:30.180><c> remove</c><00:17:30.390><c> all</c><00:17:30.630><c> the</c><00:17:30.960><c> ceremony</c><00:17:31.620><c> around</c>

00:17:32.120 --> 00:17:32.130 align:start position:0%
going to remove all the ceremony around
 

00:17:32.130 --> 00:17:35.030 align:start position:0%
going to remove all the ceremony around
it<00:17:32.340><c> notice</c><00:17:33.150><c> that's</c><00:17:33.600><c> pure</c><00:17:33.960><c> noise</c><00:17:34.440><c> that</c><00:17:34.920><c> I've</c>

00:17:35.030 --> 00:17:35.040 align:start position:0%
it notice that's pure noise that I've
 

00:17:35.040 --> 00:17:37.970 align:start position:0%
it notice that's pure noise that I've
highlighted<00:17:35.310><c> so</c><00:17:36.030><c> I</c><00:17:36.060><c> remove</c><00:17:36.480><c> that</c><00:17:36.870><c> noise</c><00:17:37.230><c> put</c><00:17:37.950><c> a</c>

00:17:37.970 --> 00:17:37.980 align:start position:0%
highlighted so I remove that noise put a
 

00:17:37.980 --> 00:17:39.620 align:start position:0%
highlighted so I remove that noise put a
little<00:17:38.190><c> arrow</c><00:17:38.520><c> right</c><00:17:38.790><c> there</c>

00:17:39.620 --> 00:17:39.630 align:start position:0%
little arrow right there
 

00:17:39.630 --> 00:17:40.820 align:start position:0%
little arrow right there
and<00:17:39.720><c> then</c><00:17:40.050><c> I'm</c><00:17:40.140><c> going</c><00:17:40.290><c> to</c><00:17:40.350><c> remove</c><00:17:40.500><c> the</c>

00:17:40.820 --> 00:17:40.830 align:start position:0%
and then I'm going to remove the
 

00:17:40.830 --> 00:17:43.370 align:start position:0%
and then I'm going to remove the
remaining<00:17:41.430><c> noise</c><00:17:41.880><c> from</c><00:17:42.240><c> here</c><00:17:42.690><c> and</c><00:17:42.840><c> so</c><00:17:43.260><c> we</c>

00:17:43.370 --> 00:17:43.380 align:start position:0%
remaining noise from here and so we
 

00:17:43.380 --> 00:17:45.710 align:start position:0%
remaining noise from here and so we
converted<00:17:43.920><c> the</c><00:17:44.190><c> code</c><00:17:44.400><c> to</c><00:17:44.580><c> use</c><00:17:44.730><c> a</c><00:17:44.760><c> lambda</c><00:17:45.150><c> X</c>

00:17:45.710 --> 00:17:45.720 align:start position:0%
converted the code to use a lambda X
 

00:17:45.720 --> 00:17:48.200 align:start position:0%
converted the code to use a lambda X
version<00:17:46.140><c> rather</c><00:17:46.830><c> than</c><00:17:47.010><c> using</c><00:17:47.520><c> an</c><00:17:47.640><c> anonymous</c>

00:17:48.200 --> 00:17:48.210 align:start position:0%
version rather than using an anonymous
 

00:17:48.210 --> 00:17:50.270 align:start position:0%
version rather than using an anonymous
function<00:17:48.470><c> anonymous</c><00:17:49.470><c> method</c><00:17:49.860><c> anonymous</c>

00:17:50.270 --> 00:17:50.280 align:start position:0%
function anonymous method anonymous
 

00:17:50.280 --> 00:17:53.029 align:start position:0%
function anonymous method anonymous
class<00:17:50.610><c> so</c><00:17:51.210><c> in</c><00:17:51.450><c> this</c><00:17:51.600><c> case</c><00:17:51.870><c> the</c><00:17:52.230><c> thread</c><00:17:52.710><c> is</c>

00:17:53.029 --> 00:17:53.039 align:start position:0%
class so in this case the thread is
 

00:17:53.039 --> 00:17:55.520 align:start position:0%
class so in this case the thread is
actually<00:17:53.789><c> a</c><00:17:53.820><c> constructor</c><00:17:54.570><c> which</c><00:17:55.260><c> is</c><00:17:55.500><c> a</c>

00:17:55.520 --> 00:17:55.530 align:start position:0%
actually a constructor which is a
 

00:17:55.530 --> 00:17:58.039 align:start position:0%
actually a constructor which is a
higher-order<00:17:55.980><c> function</c><00:17:56.880><c> the</c><00:17:57.299><c> thread</c><00:17:57.690><c> says</c>

00:17:58.039 --> 00:17:58.049 align:start position:0%
higher-order function the thread says
 

00:17:58.049 --> 00:18:00.560 align:start position:0%
higher-order function the thread says
you<00:17:58.620><c> don't</c><00:17:58.740><c> have</c><00:17:59.070><c> to</c><00:17:59.309><c> pass</c><00:17:59.490><c> an</c><00:17:59.669><c> object</c><00:17:59.909><c> to</c><00:18:00.450><c> me</c>

00:18:00.560 --> 00:18:00.570 align:start position:0%
you don't have to pass an object to me
 

00:18:00.570 --> 00:18:03.289 align:start position:0%
you don't have to pass an object to me
of<00:18:00.720><c> runnable</c><00:18:01.530><c> it's</c><00:18:02.190><c> okay</c><00:18:02.669><c> if</c><00:18:02.730><c> you</c><00:18:02.850><c> pass</c><00:18:03.090><c> a</c>

00:18:03.289 --> 00:18:03.299 align:start position:0%
of runnable it's okay if you pass a
 

00:18:03.299 --> 00:18:05.390 align:start position:0%
of runnable it's okay if you pass a
function<00:18:03.659><c> to</c><00:18:04.169><c> me</c><00:18:04.289><c> which</c><00:18:04.409><c> has</c><00:18:04.590><c> no</c><00:18:04.830><c> name</c><00:18:05.130><c> and</c>

00:18:05.390 --> 00:18:05.400 align:start position:0%
function to me which has no name and
 

00:18:05.400 --> 00:18:07.220 align:start position:0%
function to me which has no name and
that<00:18:05.880><c> function</c><00:18:06.270><c> of</c><00:18:06.360><c> course</c><00:18:06.539><c> is</c><00:18:06.720><c> the</c><00:18:06.840><c> lambda</c>

00:18:07.220 --> 00:18:07.230 align:start position:0%
that function of course is the lambda
 

00:18:07.230 --> 00:18:09.080 align:start position:0%
that function of course is the lambda
expression<00:18:07.830><c> that</c><00:18:08.250><c> we</c><00:18:08.340><c> are</c><00:18:08.460><c> passing</c><00:18:08.640><c> to</c><00:18:08.880><c> this</c>

00:18:09.080 --> 00:18:09.090 align:start position:0%
expression that we are passing to this
 

00:18:09.090 --> 00:18:11.000 align:start position:0%
expression that we are passing to this
function<00:18:09.330><c> so</c><00:18:09.870><c> in</c><00:18:10.020><c> this</c><00:18:10.140><c> case</c><00:18:10.350><c> you</c><00:18:10.530><c> can</c><00:18:10.740><c> see</c>

00:18:11.000 --> 00:18:11.010 align:start position:0%
function so in this case you can see
 

00:18:11.010 --> 00:18:13.220 align:start position:0%
function so in this case you can see
that<00:18:11.250><c> we</c><00:18:11.400><c> passed</c><00:18:11.700><c> a</c><00:18:11.909><c> function</c><00:18:12.690><c> which</c><00:18:12.809><c> takes</c><00:18:12.990><c> no</c>

00:18:13.220 --> 00:18:13.230 align:start position:0%
that we passed a function which takes no
 

00:18:13.230 --> 00:18:15.080 align:start position:0%
that we passed a function which takes no
parameters<00:18:13.409><c> and</c><00:18:14.130><c> then</c><00:18:14.520><c> of</c><00:18:14.610><c> course</c><00:18:14.669><c> the</c><00:18:14.880><c> arrow</c>

00:18:15.080 --> 00:18:15.090 align:start position:0%
parameters and then of course the arrow
 

00:18:15.090 --> 00:18:16.700 align:start position:0%
parameters and then of course the arrow
and<00:18:15.480><c> the</c><00:18:15.539><c> body</c><00:18:15.750><c> which</c><00:18:16.020><c> is</c><00:18:16.169><c> printing</c><00:18:16.559><c> that</c>

00:18:16.700 --> 00:18:16.710 align:start position:0%
and the body which is printing that
 

00:18:16.710 --> 00:18:18.890 align:start position:0%
and the body which is printing that
message<00:18:17.159><c> so</c><00:18:17.370><c> we</c><00:18:17.820><c> were</c><00:18:17.940><c> able</c><00:18:18.090><c> to</c><00:18:18.299><c> pass</c><00:18:18.570><c> this</c>

00:18:18.890 --> 00:18:18.900 align:start position:0%
message so we were able to pass this
 

00:18:18.900 --> 00:18:20.960 align:start position:0%
message so we were able to pass this
method<00:18:19.260><c> so</c><00:18:19.620><c> for</c><00:18:19.830><c> the</c><00:18:19.919><c> first</c><00:18:20.190><c> time</c><00:18:20.490><c> in</c><00:18:20.730><c> a</c><00:18:20.820><c> long</c>

00:18:20.960 --> 00:18:20.970 align:start position:0%
method so for the first time in a long
 

00:18:20.970 --> 00:18:21.320 align:start position:0%
method so for the first time in a long
time

00:18:21.320 --> 00:18:21.330 align:start position:0%
time
 

00:18:21.330 --> 00:18:23.750 align:start position:0%
time
we've<00:18:21.900><c> been</c><00:18:22.049><c> able</c><00:18:22.230><c> to</c><00:18:22.380><c> treat</c><00:18:22.860><c> the</c><00:18:23.130><c> function</c><00:18:23.549><c> as</c>

00:18:23.750 --> 00:18:23.760 align:start position:0%
we've been able to treat the function as
 

00:18:23.760 --> 00:18:26.120 align:start position:0%
we've been able to treat the function as
a<00:18:23.789><c> first</c><00:18:24.240><c> class</c><00:18:24.360><c> citizen</c><00:18:24.590><c> so</c><00:18:25.590><c> what</c><00:18:25.770><c> that</c><00:18:25.890><c> means</c>

00:18:26.120 --> 00:18:26.130 align:start position:0%
a first class citizen so what that means
 

00:18:26.130 --> 00:18:28.159 align:start position:0%
a first class citizen so what that means
is<00:18:26.520><c> it's</c><00:18:27.000><c> kind</c><00:18:27.240><c> of</c><00:18:27.270><c> like</c><00:18:27.330><c> we've</c><00:18:27.539><c> been</c><00:18:27.659><c> creating</c>

00:18:28.159 --> 00:18:28.169 align:start position:0%
is it's kind of like we've been creating
 

00:18:28.169 --> 00:18:29.690 align:start position:0%
is it's kind of like we've been creating
functions<00:18:28.559><c> like</c><00:18:28.679><c> they're</c><00:18:28.860><c> kindergarteners</c>

00:18:29.690 --> 00:18:29.700 align:start position:0%
functions like they're kindergarteners
 

00:18:29.700 --> 00:18:31.700 align:start position:0%
functions like they're kindergarteners
the<00:18:30.150><c> function</c><00:18:30.600><c> comes</c><00:18:30.870><c> to</c><00:18:31.049><c> you</c><00:18:31.230><c> this</c><00:18:31.500><c> little</c>

00:18:31.700 --> 00:18:31.710 align:start position:0%
the function comes to you this little
 

00:18:31.710 --> 00:18:34.130 align:start position:0%
the function comes to you this little
code<00:18:32.100><c> comes</c><00:18:32.370><c> to</c><00:18:32.520><c> you</c><00:18:32.610><c> and</c><00:18:32.760><c> says</c><00:18:33.000><c> could</c><00:18:33.630><c> I</c><00:18:33.750><c> go</c><00:18:34.110><c> to</c>

00:18:34.130 --> 00:18:34.140 align:start position:0%
code comes to you and says could I go to
 

00:18:34.140 --> 00:18:36.500 align:start position:0%
code comes to you and says could I go to
the<00:18:34.350><c> neighborhood</c><00:18:34.740><c> park</c><00:18:35.130><c> please</c><00:18:35.429><c> you</c><00:18:36.120><c> said</c><00:18:36.360><c> no</c>

00:18:36.500 --> 00:18:36.510 align:start position:0%
the neighborhood park please you said no
 

00:18:36.510 --> 00:18:38.539 align:start position:0%
the neighborhood park please you said no
sweetie<00:18:36.809><c> you</c><00:18:36.929><c> cannot</c><00:18:37.140><c> go</c><00:18:37.350><c> alone</c><00:18:37.650><c> let</c><00:18:38.280><c> me</c><00:18:38.309><c> send</c>

00:18:38.539 --> 00:18:38.549 align:start position:0%
sweetie you cannot go alone let me send
 

00:18:38.549 --> 00:18:40.580 align:start position:0%
sweetie you cannot go alone let me send
an<00:18:38.669><c> adult</c><00:18:39.120><c> with</c><00:18:39.419><c> you</c><00:18:39.690><c> and</c><00:18:39.990><c> we</c><00:18:40.320><c> have</c><00:18:40.350><c> been</c>

00:18:40.580 --> 00:18:40.590 align:start position:0%
an adult with you and we have been
 

00:18:40.590 --> 00:18:43.100 align:start position:0%
an adult with you and we have been
wrapping<00:18:41.100><c> it</c><00:18:41.280><c> now</c><00:18:41.730><c> you</c><00:18:41.789><c> can</c><00:18:42.150><c> free</c><00:18:42.600><c> that</c><00:18:42.900><c> and</c>

00:18:43.100 --> 00:18:43.110 align:start position:0%
wrapping it now you can free that and
 

00:18:43.110 --> 00:18:45.230 align:start position:0%
wrapping it now you can free that and
you<00:18:43.169><c> can</c><00:18:43.320><c> send</c><00:18:43.530><c> it</c><00:18:43.650><c> away</c><00:18:43.740><c> on</c><00:18:44.190><c> its</c><00:18:44.370><c> own</c><00:18:44.460><c> so</c><00:18:45.179><c> I've</c>

00:18:45.230 --> 00:18:45.240 align:start position:0%
you can send it away on its own so I've
 

00:18:45.240 --> 00:18:46.909 align:start position:0%
you can send it away on its own so I've
been<00:18:45.330><c> creating</c><00:18:45.809><c> functions</c><00:18:46.260><c> as</c><00:18:46.409><c> a</c><00:18:46.440><c> first-class</c>

00:18:46.909 --> 00:18:46.919 align:start position:0%
been creating functions as a first-class
 

00:18:46.919 --> 00:18:49.490 align:start position:0%
been creating functions as a first-class
citizen<00:18:47.220><c> now</c><00:18:47.580><c> in</c><00:18:47.850><c> Java</c><00:18:48.480><c> 8</c><00:18:48.690><c> moving</c><00:18:49.020><c> forward</c>

00:18:49.490 --> 00:18:49.500 align:start position:0%
citizen now in Java 8 moving forward
 

00:18:49.500 --> 00:18:51.440 align:start position:0%
citizen now in Java 8 moving forward
with<00:18:50.309><c> the</c><00:18:50.429><c> functional</c><00:18:50.850><c> style</c><00:18:51.120><c> of</c><00:18:51.299><c> programming</c>

00:18:51.440 --> 00:18:51.450 align:start position:0%
with the functional style of programming
 

00:18:51.450 --> 00:18:55.399 align:start position:0%
with the functional style of programming
so<00:18:52.230><c> what</c><00:18:52.409><c> does</c><00:18:52.590><c> leads</c><00:18:52.830><c> us</c><00:18:53.010><c> to</c><00:18:53.250><c> is</c><00:18:53.490><c> we</c><00:18:54.120><c> can</c><00:18:54.409><c> do</c>

00:18:55.399 --> 00:18:55.409 align:start position:0%
so what does leads us to is we can do
 

00:18:55.409 --> 00:18:57.169 align:start position:0%
so what does leads us to is we can do
some<00:18:55.590><c> really</c><00:18:55.860><c> powerful</c><00:18:56.159><c> things</c><00:18:56.700><c> with</c><00:18:57.030><c> this</c>

00:18:57.169 --> 00:18:57.179 align:start position:0%
some really powerful things with this
 

00:18:57.179 --> 00:18:59.720 align:start position:0%
some really powerful things with this
let's<00:18:57.780><c> quickly</c><00:18:58.260><c> look</c><00:18:58.380><c> at</c><00:18:58.620><c> an</c><00:18:58.740><c> example</c><00:18:59.400><c> of</c><00:18:59.520><c> how</c>

00:18:59.720 --> 00:18:59.730 align:start position:0%
let's quickly look at an example of how
 

00:18:59.730 --> 00:19:02.240 align:start position:0%
let's quickly look at an example of how
we<00:19:00.330><c> can</c><00:19:00.360><c> reap</c><00:19:00.720><c> some</c><00:19:00.960><c> of</c><00:19:01.110><c> these</c><00:19:01.260><c> benefits</c><00:19:01.770><c> let's</c>

00:19:02.240 --> 00:19:02.250 align:start position:0%
we can reap some of these benefits let's
 

00:19:02.250 --> 00:19:03.770 align:start position:0%
we can reap some of these benefits let's
go<00:19:02.520><c> to</c><00:19:02.580><c> what</c><00:19:02.880><c> we</c><00:19:03.000><c> have</c><00:19:03.090><c> been</c><00:19:03.210><c> doing</c><00:19:03.360><c> for</c><00:19:03.630><c> a</c><00:19:03.690><c> very</c>

00:19:03.770 --> 00:19:03.780 align:start position:0%
go to what we have been doing for a very
 

00:19:03.780 --> 00:19:06.340 align:start position:0%
go to what we have been doing for a very
long<00:19:04.409><c> time</c><00:19:04.440><c> which</c><00:19:05.400><c> is</c><00:19:05.610><c> a</c><00:19:05.640><c> very</c><00:19:05.940><c> traditional</c>

00:19:06.340 --> 00:19:06.350 align:start position:0%
long time which is a very traditional
 

00:19:06.350 --> 00:19:09.289 align:start position:0%
long time which is a very traditional
looping<00:19:07.350><c> so</c><00:19:07.740><c> I</c><00:19:07.770><c> got</c><00:19:07.950><c> a</c><00:19:07.980><c> list</c><00:19:08.460><c> of</c><00:19:08.640><c> numbers</c><00:19:08.820><c> 1</c><00:19:09.270><c> to</c>

00:19:09.289 --> 00:19:09.299 align:start position:0%
looping so I got a list of numbers 1 to
 

00:19:09.299 --> 00:19:11.659 align:start position:0%
looping so I got a list of numbers 1 to
10<00:19:09.720><c> right</c><00:19:10.049><c> here</c><00:19:10.080><c> and</c><00:19:10.650><c> what</c><00:19:11.100><c> I</c><00:19:11.130><c> want</c><00:19:11.370><c> to</c><00:19:11.429><c> do</c><00:19:11.520><c> is</c>

00:19:11.659 --> 00:19:11.669 align:start position:0%
10 right here and what I want to do is
 

00:19:11.669 --> 00:19:13.669 align:start position:0%
10 right here and what I want to do is
loop<00:19:12.000><c> through</c><00:19:12.299><c> these</c><00:19:12.510><c> so</c><00:19:12.960><c> I</c><00:19:12.990><c> could</c><00:19:13.230><c> say</c><00:19:13.380><c> for</c><00:19:13.650><c> I</c>

00:19:13.669 --> 00:19:13.679 align:start position:0%
loop through these so I could say for I
 

00:19:13.679 --> 00:19:17.210 align:start position:0%
loop through these so I could say for I
equal<00:19:14.340><c> to</c><00:19:14.520><c> 0</c><00:19:14.549><c> I</c><00:19:15.059><c> less</c><00:19:15.120><c> than</c><00:19:16.020><c> and</c><00:19:16.350><c> the</c><00:19:16.770><c> number</c>

00:19:17.210 --> 00:19:17.220 align:start position:0%
equal to 0 I less than and the number
 

00:19:17.220 --> 00:19:20.060 align:start position:0%
equal to 0 I less than and the number
star<00:19:17.700><c> and</c><00:19:18.090><c> then</c><00:19:18.360><c> you</c><00:19:18.450><c> pass</c><00:19:19.169><c> and</c><00:19:19.470><c> ask</c><00:19:19.650><c> is</c><00:19:19.919><c> it</c>

00:19:20.060 --> 00:19:20.070 align:start position:0%
star and then you pass and ask is it
 

00:19:20.070 --> 00:19:21.710 align:start position:0%
star and then you pass and ask is it
sizes<00:19:20.549><c> that</c><00:19:20.669><c> length</c><00:19:20.970><c> is</c><00:19:21.179><c> it</c><00:19:21.330><c> count</c>

00:19:21.710 --> 00:19:21.720 align:start position:0%
sizes that length is it count
 

00:19:21.720 --> 00:19:23.659 align:start position:0%
sizes that length is it count
because<00:19:22.230><c> obviously</c><00:19:23.010><c> we</c><00:19:23.309><c> can't</c><00:19:23.520><c> have</c><00:19:23.640><c> a</c>

00:19:23.659 --> 00:19:23.669 align:start position:0%
because obviously we can't have a
 

00:19:23.669 --> 00:19:26.029 align:start position:0%
because obviously we can't have a
standard<00:19:24.210><c> isn't</c><00:19:24.510><c> it</c><00:19:24.600><c> if</c><00:19:24.870><c> it's</c><00:19:25.110><c> a</c><00:19:25.260><c> array</c><00:19:25.620><c> it's</c><00:19:25.890><c> a</c>

00:19:26.029 --> 00:19:26.039 align:start position:0%
standard isn't it if it's a array it's a
 

00:19:26.039 --> 00:19:27.980 align:start position:0%
standard isn't it if it's a array it's a
length<00:19:26.280><c> if</c><00:19:26.429><c> it's</c><00:19:26.610><c> a</c><00:19:26.760><c> ArrayList</c><00:19:27.480><c> it's</c><00:19:27.630><c> a</c><00:19:27.750><c> size</c>

00:19:27.980 --> 00:19:27.990 align:start position:0%
length if it's a ArrayList it's a size
 

00:19:27.990 --> 00:19:29.029 align:start position:0%
length if it's a ArrayList it's a size
go<00:19:28.590><c> figure</c>

00:19:29.029 --> 00:19:29.039 align:start position:0%
go figure
 

00:19:29.039 --> 00:19:31.909 align:start position:0%
go figure
so<00:19:29.580><c> then</c><00:19:29.789><c> we</c><00:19:29.970><c> could</c><00:19:30.210><c> say</c><00:19:30.419><c> plus</c><00:19:30.809><c> plus</c><00:19:31.140><c> and</c><00:19:31.500><c> then</c>

00:19:31.909 --> 00:19:31.919 align:start position:0%
so then we could say plus plus and then
 

00:19:31.919 --> 00:19:33.770 align:start position:0%
so then we could say plus plus and then
we<00:19:32.010><c> pass</c><00:19:32.250><c> again</c><00:19:32.580><c> as</c><00:19:32.789><c> the</c><00:19:32.970><c> question</c><00:19:33.360><c> is</c><00:19:33.480><c> it</c><00:19:33.600><c> less</c>

00:19:33.770 --> 00:19:33.780 align:start position:0%
we pass again as the question is it less
 

00:19:33.780 --> 00:19:35.840 align:start position:0%
we pass again as the question is it less
than<00:19:33.809><c> or</c><00:19:34.049><c> less</c><00:19:34.169><c> than</c><00:19:34.289><c> or</c><00:19:34.440><c> equal</c><00:19:34.679><c> to</c><00:19:35.159><c> because</c><00:19:35.610><c> we</c>

00:19:35.840 --> 00:19:35.850 align:start position:0%
than or less than or equal to because we
 

00:19:35.850 --> 00:19:37.580 align:start position:0%
than or less than or equal to because we
are<00:19:35.880><c> never</c><00:19:36.059><c> sure</c><00:19:36.390><c> about</c><00:19:36.450><c> it</c><00:19:36.960><c> and</c><00:19:37.350><c> then</c><00:19:37.470><c> of</c>

00:19:37.580 --> 00:19:37.590 align:start position:0%
are never sure about it and then of
 

00:19:37.590 --> 00:19:40.279 align:start position:0%
are never sure about it and then of
course<00:19:37.860><c> to</c><00:19:38.340><c> add</c><00:19:38.490><c> insult</c><00:19:38.880><c> to</c><00:19:39.000><c> injury</c><00:19:39.059><c> I</c><00:19:39.809><c> got</c><00:19:39.960><c> to</c>

00:19:40.279 --> 00:19:40.289 align:start position:0%
course to add insult to injury I got to
 

00:19:40.289 --> 00:19:42.260 align:start position:0%
course to add insult to injury I got to
say<00:19:40.380><c> numbers</c><00:19:40.740><c> again</c><00:19:41.100><c> and</c><00:19:41.309><c> do</c><00:19:41.400><c> a</c><00:19:41.429><c> get</c><00:19:41.820><c> and</c><00:19:42.059><c> get</c>

00:19:42.260 --> 00:19:42.270 align:start position:0%
say numbers again and do a get and get
 

00:19:42.270 --> 00:19:44.600 align:start position:0%
say numbers again and do a get and get
the<00:19:42.419><c> data</c><00:19:42.630><c> out</c><00:19:42.870><c> of</c><00:19:42.960><c> it</c><00:19:43.320><c> well</c><00:19:43.860><c> this</c><00:19:44.039><c> is</c><00:19:44.190><c> a</c><00:19:44.220><c> very</c>

00:19:44.600 --> 00:19:44.610 align:start position:0%
the data out of it well this is a very
 

00:19:44.610 --> 00:19:47.060 align:start position:0%
the data out of it well this is a very
high<00:19:44.909><c> ceremony</c><00:19:45.690><c> but</c><00:19:46.350><c> if</c><00:19:46.440><c> you</c><00:19:46.530><c> look</c><00:19:46.740><c> at</c><00:19:46.890><c> this</c>

00:19:47.060 --> 00:19:47.070 align:start position:0%
high ceremony but if you look at this
 

00:19:47.070 --> 00:19:49.399 align:start position:0%
high ceremony but if you look at this
code<00:19:47.370><c> I'm</c><00:19:47.700><c> going</c><00:19:48.179><c> to</c><00:19:48.240><c> argue</c><00:19:48.630><c> this</c><00:19:48.840><c> is</c><00:19:48.990><c> a</c><00:19:49.020><c> very</c>

00:19:49.399 --> 00:19:49.409 align:start position:0%
code I'm going to argue this is a very
 

00:19:49.409 --> 00:19:51.590 align:start position:0%
code I'm going to argue this is a very
complex<00:19:50.010><c> code</c><00:19:50.309><c> you</c><00:19:50.730><c> may</c><00:19:50.820><c> say</c><00:19:50.970><c> wait</c><00:19:51.179><c> a</c><00:19:51.240><c> minute</c>

00:19:51.590 --> 00:19:51.600 align:start position:0%
complex code you may say wait a minute
 

00:19:51.600 --> 00:19:53.870 align:start position:0%
complex code you may say wait a minute
did<00:19:51.720><c> you</c><00:19:51.750><c> say</c><00:19:51.870><c> complex</c><00:19:52.500><c> isn't</c><00:19:53.159><c> this</c><00:19:53.429><c> a</c><00:19:53.460><c> simple</c>

00:19:53.870 --> 00:19:53.880 align:start position:0%
did you say complex isn't this a simple
 

00:19:53.880 --> 00:19:56.600 align:start position:0%
did you say complex isn't this a simple
for<00:19:54.570><c> loop</c><00:19:54.600><c> oh</c><00:19:54.960><c> no</c><00:19:55.320><c> this</c><00:19:55.530><c> is</c><00:19:55.679><c> not</c><00:19:55.890><c> a</c><00:19:55.950><c> simple</c><00:19:56.370><c> for</c>

00:19:56.600 --> 00:19:56.610 align:start position:0%
for loop oh no this is not a simple for
 

00:19:56.610 --> 00:19:59.130 align:start position:0%
for loop oh no this is not a simple for
loop<00:19:56.640><c> it's</c><00:19:57.330><c> a</c><00:19:57.480><c> familiar</c><00:19:58.110><c> for</c><00:19:58.590><c> loop</c>

00:19:59.130 --> 00:19:59.140 align:start position:0%
loop it's a familiar for loop
 

00:19:59.140 --> 00:20:01.050 align:start position:0%
loop it's a familiar for loop
it's<00:19:59.260><c> important</c><00:19:59.710><c> not</c><00:19:59.860><c> not</c><00:20:00.280><c> to</c><00:20:00.460><c> get</c><00:20:00.580><c> confused</c>

00:20:01.050 --> 00:20:01.060 align:start position:0%
it's important not not to get confused
 

00:20:01.060 --> 00:20:02.970 align:start position:0%
it's important not not to get confused
with<00:20:01.270><c> the</c><00:20:01.360><c> terms</c><00:20:01.630><c> the</c><00:20:02.140><c> words</c><00:20:02.350><c> simple</c><00:20:02.800><c> and</c>

00:20:02.970 --> 00:20:02.980 align:start position:0%
with the terms the words simple and
 

00:20:02.980 --> 00:20:04.590 align:start position:0%
with the terms the words simple and
familiar<00:20:03.100><c> are</c><00:20:03.550><c> very</c><00:20:03.850><c> different</c><00:20:04.300><c> from</c><00:20:04.360><c> each</c>

00:20:04.590 --> 00:20:04.600 align:start position:0%
familiar are very different from each
 

00:20:04.600 --> 00:20:07.020 align:start position:0%
familiar are very different from each
other<00:20:04.660><c> this</c><00:20:05.560><c> is</c><00:20:05.620><c> not</c><00:20:05.770><c> a</c><00:20:05.950><c> simple</c><00:20:06.430><c> for</c><00:20:06.640><c> look</c><00:20:06.850><c> it's</c>

00:20:07.020 --> 00:20:07.030 align:start position:0%
other this is not a simple for look it's
 

00:20:07.030 --> 00:20:09.420 align:start position:0%
other this is not a simple for look it's
a<00:20:07.120><c> complex</c><00:20:07.570><c> but</c><00:20:07.810><c> familiar</c><00:20:08.110><c> for</c><00:20:08.710><c> look</c><00:20:08.890><c> so</c><00:20:09.250><c> what</c>

00:20:09.420 --> 00:20:09.430 align:start position:0%
a complex but familiar for look so what
 

00:20:09.430 --> 00:20:11.580 align:start position:0%
a complex but familiar for look so what
is<00:20:09.550><c> familiar</c><00:20:09.870><c> similar</c><00:20:10.870><c> is</c><00:20:11.110><c> something</c><00:20:11.410><c> we</c><00:20:11.500><c> have</c>

00:20:11.580 --> 00:20:11.590 align:start position:0%
is familiar similar is something we have
 

00:20:11.590 --> 00:20:13.680 align:start position:0%
is familiar similar is something we have
looked<00:20:11.830><c> at</c><00:20:11.950><c> several</c><00:20:12.250><c> times</c><00:20:12.580><c> we</c><00:20:13.570><c> don't</c>

00:20:13.680 --> 00:20:13.690 align:start position:0%
looked at several times we don't
 

00:20:13.690 --> 00:20:15.360 align:start position:0%
looked at several times we don't
probably<00:20:14.080><c> care</c><00:20:14.290><c> to</c><00:20:14.410><c> look</c><00:20:14.560><c> at</c><00:20:14.680><c> it</c><00:20:14.770><c> again</c><00:20:14.860><c> and</c>

00:20:15.360 --> 00:20:15.370 align:start position:0%
probably care to look at it again and
 

00:20:15.370 --> 00:20:17.520 align:start position:0%
probably care to look at it again and
something<00:20:16.150><c> that</c><00:20:16.240><c> we</c><00:20:16.390><c> know</c><00:20:16.660><c> very</c><00:20:16.870><c> well</c><00:20:17.080><c> and</c>

00:20:17.520 --> 00:20:17.530 align:start position:0%
something that we know very well and
 

00:20:17.530 --> 00:20:19.980 align:start position:0%
something that we know very well and
this<00:20:18.010><c> is</c><00:20:18.070><c> a</c><00:20:18.190><c> very</c><00:20:18.430><c> familiar</c><00:20:18.670><c> for</c><00:20:19.210><c> loop</c><00:20:19.450><c> but</c><00:20:19.810><c> I'm</c>

00:20:19.980 --> 00:20:19.990 align:start position:0%
this is a very familiar for loop but I'm
 

00:20:19.990 --> 00:20:22.050 align:start position:0%
this is a very familiar for loop but I'm
going<00:20:20.140><c> to</c><00:20:20.170><c> argue</c><00:20:20.230><c> this</c><00:20:20.740><c> is</c><00:20:20.890><c> complex</c><00:20:21.280><c> in</c><00:20:21.850><c> fact</c>

00:20:22.050 --> 00:20:22.060 align:start position:0%
going to argue this is complex in fact
 

00:20:22.060 --> 00:20:23.820 align:start position:0%
going to argue this is complex in fact
it's<00:20:22.240><c> very</c><00:20:22.420><c> easy</c><00:20:22.690><c> to</c><00:20:22.840><c> prove</c><00:20:23.200><c> it's</c><00:20:23.440><c> complex</c>

00:20:23.820 --> 00:20:23.830 align:start position:0%
it's very easy to prove it's complex
 

00:20:23.830 --> 00:20:25.860 align:start position:0%
it's very easy to prove it's complex
because<00:20:24.130><c> there</c><00:20:24.670><c> is</c><00:20:24.790><c> something</c><00:20:25.090><c> already</c><00:20:25.630><c> very</c>

00:20:25.860 --> 00:20:25.870 align:start position:0%
because there is something already very
 

00:20:25.870 --> 00:20:28.440 align:start position:0%
because there is something already very
simple<00:20:26.470><c> we</c><00:20:26.950><c> could</c><00:20:27.130><c> say</c><00:20:27.310><c> int</c><00:20:27.580><c> element</c><00:20:28.270><c> in</c>

00:20:28.440 --> 00:20:28.450 align:start position:0%
simple we could say int element in
 

00:20:28.450 --> 00:20:30.330 align:start position:0%
simple we could say int element in
numbers<00:20:29.050><c> and</c><00:20:29.530><c> then</c><00:20:29.890><c> we</c><00:20:30.010><c> could</c><00:20:30.190><c> of</c><00:20:30.310><c> course</c>

00:20:30.330 --> 00:20:30.340 align:start position:0%
numbers and then we could of course
 

00:20:30.340 --> 00:20:33.300 align:start position:0%
numbers and then we could of course
output<00:20:31.090><c> the</c><00:20:31.270><c> element</c><00:20:31.930><c> right</c><00:20:32.140><c> off</c><00:20:32.320><c> the</c><00:20:32.470><c> bat</c><00:20:32.680><c> so</c>

00:20:33.300 --> 00:20:33.310 align:start position:0%
output the element right off the bat so
 

00:20:33.310 --> 00:20:35.400 align:start position:0%
output the element right off the bat so
you<00:20:33.400><c> can</c><00:20:33.700><c> see</c><00:20:33.910><c> that</c><00:20:34.180><c> while</c><00:20:34.450><c> both</c><00:20:34.840><c> of</c><00:20:35.110><c> the</c><00:20:35.230><c> code</c>

00:20:35.400 --> 00:20:35.410 align:start position:0%
you can see that while both of the code
 

00:20:35.410 --> 00:20:38.010 align:start position:0%
you can see that while both of the code
produce<00:20:35.740><c> exactly</c><00:20:36.280><c> the</c><00:20:36.370><c> same</c><00:20:36.490><c> result</c><00:20:36.910><c> this</c><00:20:37.810><c> one</c>

00:20:38.010 --> 00:20:38.020 align:start position:0%
produce exactly the same result this one
 

00:20:38.020 --> 00:20:39.750 align:start position:0%
produce exactly the same result this one
is<00:20:38.140><c> a</c><00:20:38.170><c> lot</c><00:20:38.380><c> simpler</c><00:20:38.770><c> than</c><00:20:38.980><c> the</c><00:20:39.070><c> previous</c><00:20:39.550><c> one</c>

00:20:39.750 --> 00:20:39.760 align:start position:0%
is a lot simpler than the previous one
 

00:20:39.760 --> 00:20:42.140 align:start position:0%
is a lot simpler than the previous one
these<00:20:40.300><c> two</c><00:20:40.690><c> collectively</c><00:20:41.170><c> are</c><00:20:41.410><c> known</c><00:20:41.800><c> as</c>

00:20:42.140 --> 00:20:42.150 align:start position:0%
these two collectively are known as
 

00:20:42.150 --> 00:20:45.570 align:start position:0%
these two collectively are known as
external<00:20:43.150><c> iterators</c><00:20:43.870><c> but</c><00:20:44.410><c> we</c><00:20:44.590><c> can</c><00:20:44.800><c> use</c><00:20:45.100><c> what's</c>

00:20:45.570 --> 00:20:45.580 align:start position:0%
external iterators but we can use what's
 

00:20:45.580 --> 00:20:48.360 align:start position:0%
external iterators but we can use what's
called<00:20:45.670><c> an</c><00:20:45.940><c> internal</c><00:20:46.510><c> iterator</c><00:20:47.140><c> instead</c><00:20:47.830><c> so</c>

00:20:48.360 --> 00:20:48.370 align:start position:0%
called an internal iterator instead so
 

00:20:48.370 --> 00:20:50.670 align:start position:0%
called an internal iterator instead so
what<00:20:48.520><c> we</c><00:20:48.670><c> can</c><00:20:48.820><c> do</c><00:20:49.000><c> in</c><00:20:49.270><c> here</c><00:20:49.300><c> is</c><00:20:49.630><c> we</c><00:20:50.350><c> can</c><00:20:50.530><c> do</c>

00:20:50.670 --> 00:20:50.680 align:start position:0%
what we can do in here is we can do
 

00:20:50.680 --> 00:20:53.190 align:start position:0%
what we can do in here is we can do
internal<00:20:51.370><c> iterators</c><00:20:52.030><c> moving</c><00:20:52.390><c> forward</c><00:20:52.930><c> and</c>

00:20:53.190 --> 00:20:53.200 align:start position:0%
internal iterators moving forward and
 

00:20:53.200 --> 00:20:56.670 align:start position:0%
internal iterators moving forward and
what<00:20:53.890><c> that</c><00:20:54.040><c> means</c><00:20:54.250><c> is</c><00:20:54.670><c> we</c><00:20:55.000><c> can</c><00:20:55.030><c> say</c><00:20:55.680><c> rather</c>

00:20:56.670 --> 00:20:56.680 align:start position:0%
what that means is we can say rather
 

00:20:56.680 --> 00:20:59.220 align:start position:0%
what that means is we can say rather
than<00:20:56.890><c> iterating</c><00:20:57.580><c> through</c><00:20:57.610><c> this</c><00:20:57.940><c> this</c><00:20:58.240><c> way</c><00:20:58.540><c> we</c>

00:20:59.220 --> 00:20:59.230 align:start position:0%
than iterating through this this way we
 

00:20:59.230 --> 00:21:02.130 align:start position:0%
than iterating through this this way we
could<00:20:59.410><c> simply</c><00:20:59.830><c> say</c><00:21:00.160><c> well</c><00:21:00.820><c> numbers</c><00:21:01.360><c> dot</c><00:21:01.750><c> for</c>

00:21:02.130 --> 00:21:02.140 align:start position:0%
could simply say well numbers dot for
 

00:21:02.140 --> 00:21:04.590 align:start position:0%
could simply say well numbers dot for
each<00:21:02.380><c> well</c><00:21:03.310><c> let's</c><00:21:03.580><c> stop</c><00:21:03.850><c> right</c><00:21:04.210><c> there</c><00:21:04.570><c> and</c>

00:21:04.590 --> 00:21:04.600 align:start position:0%
each well let's stop right there and
 

00:21:04.600 --> 00:21:07.110 align:start position:0%
each well let's stop right there and
talk<00:21:04.930><c> about</c><00:21:05.080><c> this</c><00:21:05.320><c> for</c><00:21:05.530><c> a</c><00:21:05.560><c> second</c><00:21:05.980><c> notice</c><00:21:06.640><c> in</c>

00:21:07.110 --> 00:21:07.120 align:start position:0%
talk about this for a second notice in
 

00:21:07.120 --> 00:21:10.230 align:start position:0%
talk about this for a second notice in
the<00:21:07.210><c> earlier</c><00:21:07.660><c> example</c><00:21:08.440><c> we</c><00:21:09.070><c> were</c><00:21:09.250><c> passing</c><00:21:10.030><c> the</c>

00:21:10.230 --> 00:21:10.240 align:start position:0%
the earlier example we were passing the
 

00:21:10.240 --> 00:21:12.750 align:start position:0%
the earlier example we were passing the
number<00:21:10.690><c> too</c><00:21:10.930><c> far</c><00:21:11.350><c> and</c><00:21:11.800><c> we</c><00:21:12.220><c> know</c><00:21:12.310><c> one</c><00:21:12.550><c> thing</c>

00:21:12.750 --> 00:21:12.760 align:start position:0%
number too far and we know one thing
 

00:21:12.760 --> 00:21:14.910 align:start position:0%
number too far and we know one thing
about<00:21:12.790><c> code</c><00:21:13.240><c> structures</c><00:21:13.720><c> like</c><00:21:14.020><c> this</c><00:21:14.350><c> they</c><00:21:14.800><c> are</c>

00:21:14.910 --> 00:21:14.920 align:start position:0%
about code structures like this they are
 

00:21:14.920 --> 00:21:18.030 align:start position:0%
about code structures like this they are
never<00:21:15.390><c> polymorphic</c><00:21:16.390><c> on</c><00:21:16.570><c> the</c><00:21:17.020><c> other</c><00:21:17.200><c> hand</c><00:21:17.650><c> the</c>

00:21:18.030 --> 00:21:18.040 align:start position:0%
never polymorphic on the other hand the
 

00:21:18.040 --> 00:21:21.150 align:start position:0%
never polymorphic on the other hand the
minute<00:21:18.340><c> you</c><00:21:18.460><c> say</c><00:21:18.610><c> numbers</c><00:21:19.150><c> dot</c><00:21:19.660><c> for</c><00:21:20.050><c> each</c><00:21:20.410><c> that</c>

00:21:21.150 --> 00:21:21.160 align:start position:0%
minute you say numbers dot for each that
 

00:21:21.160 --> 00:21:23.130 align:start position:0%
minute you say numbers dot for each that
you<00:21:21.370><c> know</c><00:21:21.490><c> is</c><00:21:21.670><c> polymorphic</c><00:21:22.210><c> because</c><00:21:23.020><c> the</c>

00:21:23.130 --> 00:21:23.140 align:start position:0%
you know is polymorphic because the
 

00:21:23.140 --> 00:21:25.230 align:start position:0%
you know is polymorphic because the
implementation<00:21:23.650><c> of</c><00:21:24.100><c> for</c><00:21:24.340><c> each</c><00:21:24.550><c> can</c><00:21:24.820><c> change</c>

00:21:25.230 --> 00:21:25.240 align:start position:0%
implementation of for each can change
 

00:21:25.240 --> 00:21:27.780 align:start position:0%
implementation of for each can change
depending<00:21:26.110><c> on</c><00:21:26.230><c> the</c><00:21:26.470><c> runtime</c><00:21:26.950><c> implementation</c>

00:21:27.780 --> 00:21:27.790 align:start position:0%
depending on the runtime implementation
 

00:21:27.790 --> 00:21:29.730 align:start position:0%
depending on the runtime implementation
of<00:21:27.940><c> the</c><00:21:28.120><c> collection</c><00:21:29.080><c> you</c><00:21:29.230><c> are</c><00:21:29.260><c> dealing</c><00:21:29.560><c> with</c>

00:21:29.730 --> 00:21:29.740 align:start position:0%
of the collection you are dealing with
 

00:21:29.740 --> 00:21:31.890 align:start position:0%
of the collection you are dealing with
so<00:21:30.340><c> that's</c><00:21:30.550><c> a</c><00:21:30.640><c> benefit</c><00:21:31.030><c> already</c><00:21:31.540><c> that</c><00:21:31.780><c> you</c><00:21:31.870><c> are</c>

00:21:31.890 --> 00:21:31.900 align:start position:0%
so that's a benefit already that you are
 

00:21:31.900 --> 00:21:34.110 align:start position:0%
so that's a benefit already that you are
carrying<00:21:32.230><c> with</c><00:21:32.680><c> you</c><00:21:32.860><c> but</c><00:21:33.370><c> what</c><00:21:33.580><c> we</c><00:21:33.730><c> can</c><00:21:33.910><c> do</c>

00:21:34.110 --> 00:21:34.120 align:start position:0%
carrying with you but what we can do
 

00:21:34.120 --> 00:21:37.230 align:start position:0%
carrying with you but what we can do
with<00:21:34.330><c> this</c><00:21:34.570><c> is</c><00:21:34.900><c> you</c><00:21:35.500><c> can</c><00:21:35.530><c> now</c><00:21:35.920><c> say</c><00:21:36.310><c> for</c><00:21:36.370><c> each</c>

00:21:37.230 --> 00:21:37.240 align:start position:0%
with this is you can now say for each
 

00:21:37.240 --> 00:21:39.900 align:start position:0%
with this is you can now say for each
and<00:21:37.660><c> then</c><00:21:38.110><c> you</c><00:21:38.200><c> can</c><00:21:38.350><c> say</c><00:21:38.500><c> new</c><00:21:38.910><c> consumer</c>

00:21:39.900 --> 00:21:39.910 align:start position:0%
and then you can say new consumer
 

00:21:39.910 --> 00:21:42.630 align:start position:0%
and then you can say new consumer
integer<00:21:40.780><c> and</c><00:21:41.050><c> then</c><00:21:41.410><c> of</c><00:21:41.560><c> course</c><00:21:41.590><c> in</c><00:21:42.190><c> this</c><00:21:42.370><c> case</c>

00:21:42.630 --> 00:21:42.640 align:start position:0%
integer and then of course in this case
 

00:21:42.640 --> 00:21:45.420 align:start position:0%
integer and then of course in this case
I'm<00:21:42.820><c> going</c><00:21:42.940><c> to</c><00:21:43.000><c> say</c><00:21:43.120><c> public</c><00:21:43.600><c> void</c><00:21:43.870><c> except</c><00:21:44.860><c> the</c>

00:21:45.420 --> 00:21:45.430 align:start position:0%
I'm going to say public void except the
 

00:21:45.430 --> 00:21:49.020 align:start position:0%
I'm going to say public void except the
integer<00:21:46.050><c> value</c><00:21:47.050><c> or</c><00:21:47.320><c> element</c><00:21:48.040><c> E</c><00:21:48.250><c> and</c><00:21:48.610><c> then</c><00:21:49.000><c> we</c>

00:21:49.020 --> 00:21:49.030 align:start position:0%
integer value or element E and then we
 

00:21:49.030 --> 00:21:51.360 align:start position:0%
integer value or element E and then we
could<00:21:49.300><c> output</c><00:21:49.870><c> this</c><00:21:50.080><c> element</c><00:21:50.620><c> right</c><00:21:50.680><c> there</c>

00:21:51.360 --> 00:21:51.370 align:start position:0%
could output this element right there
 

00:21:51.370 --> 00:21:53.670 align:start position:0%
could output this element right there
so<00:21:51.700><c> in</c><00:21:51.940><c> this</c><00:21:52.120><c> case</c><00:21:52.390><c> you</c><00:21:52.570><c> can</c><00:21:52.780><c> see</c><00:21:53.080><c> the</c><00:21:53.440><c> output</c>

00:21:53.670 --> 00:21:53.680 align:start position:0%
so in this case you can see the output
 

00:21:53.680 --> 00:21:56.730 align:start position:0%
so in this case you can see the output
is<00:21:54.040><c> exactly</c><00:21:54.580><c> the</c><00:21:54.700><c> same</c><00:21:54.910><c> as</c><00:21:55.120><c> before</c><00:21:55.500><c> we</c><00:21:56.500><c> didn't</c>

00:21:56.730 --> 00:21:56.740 align:start position:0%
is exactly the same as before we didn't
 

00:21:56.740 --> 00:21:59.100 align:start position:0%
is exactly the same as before we didn't
have<00:21:56.770><c> to</c><00:21:57.190><c> use</c><00:21:57.310><c> an</c><00:21:57.460><c> external</c><00:21:57.760><c> iterator</c><00:21:58.330><c> we</c><00:21:58.900><c> used</c>

00:21:59.100 --> 00:21:59.110 align:start position:0%
have to use an external iterator we used
 

00:21:59.110 --> 00:22:01.860 align:start position:0%
have to use an external iterator we used
an<00:21:59.320><c> internal</c><00:21:59.980><c> iterator</c><00:22:00.430><c> now</c><00:22:01.090><c> the</c><00:22:01.150><c> benefit</c><00:22:01.780><c> of</c>

00:22:01.860 --> 00:22:01.870 align:start position:0%
an internal iterator now the benefit of
 

00:22:01.870 --> 00:22:04.200 align:start position:0%
an internal iterator now the benefit of
this<00:22:02.050><c> code</c><00:22:02.290><c> is</c><00:22:02.530><c> you</c><00:22:03.010><c> are</c><00:22:03.100><c> telling</c><00:22:03.280><c> what</c><00:22:03.850><c> to</c><00:22:04.060><c> do</c>

00:22:04.200 --> 00:22:04.210 align:start position:0%
this code is you are telling what to do
 

00:22:04.210 --> 00:22:05.940 align:start position:0%
this code is you are telling what to do
and<00:22:04.390><c> not</c><00:22:04.510><c> how</c><00:22:04.720><c> to</c><00:22:04.780><c> do</c><00:22:05.080><c> it</c><00:22:05.230><c> you're</c><00:22:05.350><c> focusing</c><00:22:05.800><c> on</c>

00:22:05.940 --> 00:22:05.950 align:start position:0%
and not how to do it you're focusing on
 

00:22:05.950 --> 00:22:08.490 align:start position:0%
and not how to do it you're focusing on
what<00:22:06.520><c> to</c><00:22:06.640><c> do</c><00:22:06.760><c> per</c><00:22:07.000><c> iteration</c><00:22:07.240><c> you're</c><00:22:08.230><c> putting</c>

00:22:08.490 --> 00:22:08.500 align:start position:0%
what to do per iteration you're putting
 

00:22:08.500 --> 00:22:10.890 align:start position:0%
what to do per iteration you're putting
the<00:22:08.620><c> iteration</c><00:22:09.100><c> on</c><00:22:09.220><c> autopilot</c><00:22:09.820><c> and</c><00:22:10.270><c> of</c><00:22:10.690><c> course</c>

00:22:10.890 --> 00:22:10.900 align:start position:0%
the iteration on autopilot and of course
 

00:22:10.900 --> 00:22:12.540 align:start position:0%
the iteration on autopilot and of course
you<00:22:10.990><c> can</c><00:22:11.140><c> enjoy</c><00:22:11.410><c> polymorphism</c>

00:22:12.540 --> 00:22:12.550 align:start position:0%
you can enjoy polymorphism
 

00:22:12.550 --> 00:22:14.370 align:start position:0%
you can enjoy polymorphism
all<00:22:12.640><c> of</c><00:22:12.880><c> these</c><00:22:13.030><c> things</c><00:22:13.360><c> are</c><00:22:13.540><c> good</c><00:22:13.870><c> good</c><00:22:14.140><c> things</c>

00:22:14.370 --> 00:22:14.380 align:start position:0%
all of these things are good good things
 

00:22:14.380 --> 00:22:15.840 align:start position:0%
all of these things are good good things
but<00:22:14.890><c> I</c><00:22:14.920><c> know</c><00:22:15.070><c> what</c><00:22:15.220><c> you're</c><00:22:15.370><c> thinking</c><00:22:15.760><c> you're</c>

00:22:15.840 --> 00:22:15.850 align:start position:0%
but I know what you're thinking you're
 

00:22:15.850 --> 00:22:18.840 align:start position:0%
but I know what you're thinking you're
thinking<00:22:15.910><c> if</c><00:22:16.540><c> all</c><00:22:16.990><c> that</c><00:22:17.230><c> really</c><00:22:17.890><c> good</c><00:22:18.220><c> but</c><00:22:18.730><c> to</c>

00:22:18.840 --> 00:22:18.850 align:start position:0%
thinking if all that really good but to
 

00:22:18.850 --> 00:22:20.730 align:start position:0%
thinking if all that really good but to
leave<00:22:19.030><c> that</c><00:22:19.270><c> benefit</c><00:22:19.690><c> if</c><00:22:19.780><c> I</c><00:22:19.870><c> have</c><00:22:20.110><c> to</c><00:22:20.320><c> use</c><00:22:20.410><c> yet</c>

00:22:20.730 --> 00:22:20.740 align:start position:0%
leave that benefit if I have to use yet
 

00:22:20.740 --> 00:22:23.310 align:start position:0%
leave that benefit if I have to use yet
another<00:22:21.070><c> anonymous</c><00:22:21.490><c> inner</c><00:22:22.000><c> class</c><00:22:22.390><c> heck</c><00:22:22.990><c> no</c>

00:22:23.310 --> 00:22:23.320 align:start position:0%
another anonymous inner class heck no
 

00:22:23.320 --> 00:22:25.590 align:start position:0%
another anonymous inner class heck no
well<00:22:23.890><c> sure</c><00:22:24.220><c> but</c><00:22:24.640><c> that's</c><00:22:24.790><c> the</c><00:22:25.000><c> beauty</c><00:22:25.300><c> of</c><00:22:25.330><c> this</c>

00:22:25.590 --> 00:22:25.600 align:start position:0%
well sure but that's the beauty of this
 

00:22:25.600 --> 00:22:28.080 align:start position:0%
well sure but that's the beauty of this
we<00:22:25.750><c> don't</c><00:22:25.870><c> have</c><00:22:26.020><c> to</c><00:22:26.260><c> we</c><00:22:27.040><c> can</c><00:22:27.070><c> take</c><00:22:27.610><c> this</c><00:22:27.820><c> one</c>

00:22:28.080 --> 00:22:28.090 align:start position:0%
we don't have to we can take this one
 

00:22:28.090 --> 00:22:30.180 align:start position:0%
we don't have to we can take this one
right<00:22:28.120><c> away</c><00:22:28.600><c> and</c><00:22:28.780><c> say</c><00:22:29.050><c> well</c><00:22:29.350><c> rather</c><00:22:29.950><c> than</c>

00:22:30.180 --> 00:22:30.190 align:start position:0%
right away and say well rather than
 

00:22:30.190 --> 00:22:33.390 align:start position:0%
right away and say well rather than
working<00:22:30.700><c> so</c><00:22:30.970><c> hard</c><00:22:31.330><c> we</c><00:22:32.140><c> can</c><00:22:32.410><c> remove</c><00:22:32.830><c> all</c><00:22:33.190><c> the</c>

00:22:33.390 --> 00:22:33.400 align:start position:0%
working so hard we can remove all the
 

00:22:33.400 --> 00:22:36.750 align:start position:0%
working so hard we can remove all the
ceremony<00:22:34.180><c> from</c><00:22:34.510><c> here</c><00:22:34.990><c> only</c><00:22:35.350><c> keep</c><00:22:36.040><c> the</c><00:22:36.220><c> essence</c>

00:22:36.750 --> 00:22:36.760 align:start position:0%
ceremony from here only keep the essence
 

00:22:36.760 --> 00:22:39.000 align:start position:0%
ceremony from here only keep the essence
out<00:22:36.970><c> of</c><00:22:37.240><c> this</c><00:22:37.510><c> and</c><00:22:37.870><c> then</c><00:22:38.260><c> we</c><00:22:38.410><c> can</c><00:22:38.440><c> remove</c><00:22:38.740><c> the</c>

00:22:39.000 --> 00:22:39.010 align:start position:0%
out of this and then we can remove the
 

00:22:39.010 --> 00:22:41.040 align:start position:0%
out of this and then we can remove the
rest<00:22:39.190><c> of</c><00:22:39.370><c> the</c><00:22:39.430><c> part</c><00:22:39.670><c> as</c><00:22:39.880><c> well</c><00:22:40.240><c> and</c><00:22:40.690><c> you</c><00:22:40.840><c> can</c><00:22:40.870><c> see</c>

00:22:41.040 --> 00:22:41.050 align:start position:0%
rest of the part as well and you can see
 

00:22:41.050 --> 00:22:43.680 align:start position:0%
rest of the part as well and you can see
the<00:22:41.320><c> code</c><00:22:41.530><c> still</c><00:22:41.830><c> works</c><00:22:41.860><c> right</c><00:22:42.670><c> here</c><00:22:43.060><c> so</c><00:22:43.510><c> what</c>

00:22:43.680 --> 00:22:43.690 align:start position:0%
the code still works right here so what
 

00:22:43.690 --> 00:22:46.110 align:start position:0%
the code still works right here so what
we<00:22:43.840><c> can</c><00:22:44.020><c> do</c><00:22:44.170><c> in</c><00:22:44.380><c> this</c><00:22:44.530><c> case</c><00:22:44.740><c> is</c><00:22:44.800><c> we</c><00:22:45.430><c> can</c><00:22:45.610><c> get</c><00:22:45.910><c> rid</c>

00:22:46.110 --> 00:22:46.120 align:start position:0%
we can do in this case is we can get rid
 

00:22:46.120 --> 00:22:48.660 align:start position:0%
we can do in this case is we can get rid
of<00:22:46.210><c> all</c><00:22:46.480><c> that</c><00:22:46.510><c> noise</c><00:22:47.050><c> in</c><00:22:47.530><c> the</c><00:22:47.710><c> code</c><00:22:47.920><c> these</c><00:22:48.610><c> are</c>

00:22:48.660 --> 00:22:48.670 align:start position:0%
of all that noise in the code these are
 

00:22:48.670 --> 00:22:49.440 align:start position:0%
of all that noise in the code these are
called

00:22:49.440 --> 00:22:49.450 align:start position:0%
called
 

00:22:49.450 --> 00:22:52.260 align:start position:0%
called
functional<00:22:50.290><c> interfaces</c><00:22:51.070><c> I</c><00:22:51.190><c> always</c><00:22:51.610><c> chuckle</c>

00:22:52.260 --> 00:22:52.270 align:start position:0%
functional interfaces I always chuckle
 

00:22:52.270 --> 00:22:53.700 align:start position:0%
functional interfaces I always chuckle
and<00:22:52.420><c> I</c><00:22:52.480><c> hear</c><00:22:52.660><c> the</c><00:22:52.780><c> word</c><00:22:52.930><c> functional</c><00:22:53.410><c> interface</c>

00:22:53.700 --> 00:22:53.710 align:start position:0%
and I hear the word functional interface
 

00:22:53.710 --> 00:22:55.260 align:start position:0%
and I hear the word functional interface
because<00:22:54.070><c> I</c><00:22:54.310><c> wonder</c><00:22:54.880><c> if</c><00:22:54.970><c> there</c><00:22:55.120><c> are</c><00:22:55.150><c> some</c>

00:22:55.260 --> 00:22:55.270 align:start position:0%
because I wonder if there are some
 

00:22:55.270 --> 00:22:57.060 align:start position:0%
because I wonder if there are some
interfaces<00:22:55.900><c> that</c><00:22:55.990><c> are</c><00:22:56.080><c> functional</c><00:22:56.590><c> what</c>

00:22:57.060 --> 00:22:57.070 align:start position:0%
interfaces that are functional what
 

00:22:57.070 --> 00:22:58.110 align:start position:0%
interfaces that are functional what
about<00:22:57.250><c> the</c><00:22:57.340><c> other</c><00:22:57.490><c> points</c><00:22:57.850><c> are</c><00:22:57.970><c> they</c>

00:22:58.110 --> 00:22:58.120 align:start position:0%
about the other points are they
 

00:22:58.120 --> 00:23:00.000 align:start position:0%
about the other points are they
dysfunctional<00:22:58.780><c> but</c><00:22:59.200><c> in</c><00:22:59.320><c> in</c><00:22:59.470><c> essence</c><00:22:59.830><c> it</c>

00:23:00.000 --> 00:23:00.010 align:start position:0%
dysfunctional but in in essence it
 

00:23:00.010 --> 00:23:02.220 align:start position:0%
dysfunctional but in in essence it
basically<00:23:00.430><c> in</c><00:23:00.670><c> this</c><00:23:00.790><c> case</c><00:23:00.850><c> where</c><00:23:01.810><c> were</c><00:23:02.020><c> a</c>

00:23:02.220 --> 00:23:02.230 align:start position:0%
basically in this case where were a
 

00:23:02.230 --> 00:23:04.110 align:start position:0%
basically in this case where were a
single<00:23:02.530><c> abstract</c><00:23:03.070><c> method</c><00:23:03.550><c> interface</c><00:23:03.970><c> is</c>

00:23:04.110 --> 00:23:04.120 align:start position:0%
single abstract method interface is
 

00:23:04.120 --> 00:23:05.850 align:start position:0%
single abstract method interface is
expected<00:23:04.750><c> you</c><00:23:05.110><c> are</c><00:23:05.260><c> callable</c>

00:23:05.850 --> 00:23:05.860 align:start position:0%
expected you are callable
 

00:23:05.860 --> 00:23:08.370 align:start position:0%
expected you are callable
or<00:23:06.100><c> enables</c><00:23:06.610><c> the</c><00:23:07.150><c> consumer</c><00:23:07.780><c> in</c><00:23:07.930><c> this</c><00:23:08.110><c> case</c>

00:23:08.370 --> 00:23:08.380 align:start position:0%
or enables the consumer in this case
 

00:23:08.380 --> 00:23:10.860 align:start position:0%
or enables the consumer in this case
file<00:23:08.800><c> filter</c><00:23:09.100><c> anywhere</c><00:23:09.970><c> a</c><00:23:10.120><c> single</c><00:23:10.480><c> abstract</c>

00:23:10.860 --> 00:23:10.870 align:start position:0%
file filter anywhere a single abstract
 

00:23:10.870 --> 00:23:13.080 align:start position:0%
file filter anywhere a single abstract
method<00:23:11.140><c> interface</c><00:23:11.440><c> is</c><00:23:11.590><c> expected</c><00:23:12.280><c> you</c><00:23:12.670><c> can</c><00:23:12.880><c> now</c>

00:23:13.080 --> 00:23:13.090 align:start position:0%
method interface is expected you can now
 

00:23:13.090 --> 00:23:16.110 align:start position:0%
method interface is expected you can now
pass<00:23:13.480><c> of</c><00:23:13.840><c> course</c><00:23:14.130><c> lambda</c><00:23:15.130><c> expression</c><00:23:15.910><c> very</c>

00:23:16.110 --> 00:23:16.120 align:start position:0%
pass of course lambda expression very
 

00:23:16.120 --> 00:23:18.750 align:start position:0%
pass of course lambda expression very
easily<00:23:16.420><c> that's</c><00:23:17.110><c> what</c><00:23:17.350><c> we</c><00:23:17.500><c> just</c><00:23:17.530><c> did</c><00:23:17.830><c> but</c><00:23:18.160><c> we</c>

00:23:18.750 --> 00:23:18.760 align:start position:0%
easily that's what we just did but we
 

00:23:18.760 --> 00:23:20.520 align:start position:0%
easily that's what we just did but we
can<00:23:18.910><c> go</c><00:23:19.060><c> a</c><00:23:19.090><c> let's</c><00:23:19.390><c> step</c><00:23:19.630><c> further</c><00:23:19.900><c> and</c><00:23:20.170><c> improve</c>

00:23:20.520 --> 00:23:20.530 align:start position:0%
can go a let's step further and improve
 

00:23:20.530 --> 00:23:23.070 align:start position:0%
can go a let's step further and improve
this<00:23:20.710><c> even</c><00:23:21.040><c> further</c><00:23:21.340><c> if</c><00:23:21.910><c> you</c><00:23:21.940><c> will</c><00:23:22.270><c> now</c><00:23:22.810><c> look</c>

00:23:23.070 --> 00:23:23.080 align:start position:0%
this even further if you will now look
 

00:23:23.080 --> 00:23:25.410 align:start position:0%
this even further if you will now look
at<00:23:23.230><c> this</c><00:23:23.410><c> code</c><00:23:23.650><c> for</c><00:23:23.890><c> a</c><00:23:23.950><c> second</c><00:23:24.460><c> we</c><00:23:24.940><c> are</c><00:23:25.090><c> saying</c>

00:23:25.410 --> 00:23:25.420 align:start position:0%
at this code for a second we are saying
 

00:23:25.420 --> 00:23:28.710 align:start position:0%
at this code for a second we are saying
here<00:23:25.900><c> is</c><00:23:25.960><c> a</c><00:23:26.080><c> lambda</c><00:23:26.520><c> given</c><00:23:27.520><c> an</c><00:23:27.640><c> integer</c><00:23:28.180><c> I'm</c>

00:23:28.710 --> 00:23:28.720 align:start position:0%
here is a lambda given an integer I'm
 

00:23:28.720 --> 00:23:30.810 align:start position:0%
here is a lambda given an integer I'm
going<00:23:29.200><c> to</c><00:23:29.260><c> go</c><00:23:29.350><c> ahead</c><00:23:29.410><c> and</c><00:23:29.650><c> print</c><00:23:29.980><c> that</c><00:23:30.220><c> integer</c>

00:23:30.810 --> 00:23:30.820 align:start position:0%
going to go ahead and print that integer
 

00:23:30.820 --> 00:23:33.960 align:start position:0%
going to go ahead and print that integer
but<00:23:31.240><c> let's</c><00:23:31.510><c> take</c><00:23:31.690><c> a</c><00:23:31.750><c> wild</c><00:23:32.200><c> guess</c><00:23:32.650><c> if</c><00:23:33.310><c> you</c><00:23:33.760><c> are</c>

00:23:33.960 --> 00:23:33.970 align:start position:0%
but let's take a wild guess if you are
 

00:23:33.970 --> 00:23:36.180 align:start position:0%
but let's take a wild guess if you are
iterating<00:23:34.900><c> over</c><00:23:35.020><c> a</c><00:23:35.200><c> collection</c><00:23:35.590><c> of</c><00:23:35.890><c> the</c>

00:23:36.180 --> 00:23:36.190 align:start position:0%
iterating over a collection of the
 

00:23:36.190 --> 00:23:38.400 align:start position:0%
iterating over a collection of the
integers<00:23:36.820><c> you</c><00:23:37.390><c> put</c><00:23:37.600><c> your</c><00:23:37.750><c> hand</c><00:23:38.020><c> into</c><00:23:38.200><c> this</c>

00:23:38.400 --> 00:23:38.410 align:start position:0%
integers you put your hand into this
 

00:23:38.410 --> 00:23:40.800 align:start position:0%
integers you put your hand into this
collection<00:23:38.770><c> and</c><00:23:39.070><c> pick</c><00:23:39.610><c> an</c><00:23:39.790><c> element</c><00:23:40.000><c> in</c><00:23:40.660><c> your</c>

00:23:40.800 --> 00:23:40.810 align:start position:0%
collection and pick an element in your
 

00:23:40.810 --> 00:23:43.710 align:start position:0%
collection and pick an element in your
wildest<00:23:41.500><c> imagination</c><00:23:42.250><c> can</c><00:23:42.760><c> you</c><00:23:42.910><c> imagine</c><00:23:43.090><c> what</c>

00:23:43.710 --> 00:23:43.720 align:start position:0%
wildest imagination can you imagine what
 

00:23:43.720 --> 00:23:45.420 align:start position:0%
wildest imagination can you imagine what
you<00:23:43.870><c> would</c><00:23:44.020><c> pick</c><00:23:44.350><c> from</c><00:23:44.830><c> a</c><00:23:44.920><c> collection</c><00:23:45.220><c> of</c>

00:23:45.420 --> 00:23:45.430 align:start position:0%
you would pick from a collection of
 

00:23:45.430 --> 00:23:48.510 align:start position:0%
you would pick from a collection of
integers<00:23:45.760><c> a</c><00:23:46.150><c> dog</c><00:23:46.630><c> a</c><00:23:47.080><c> monkey</c><00:23:47.620><c> well</c><00:23:48.340><c> of</c><00:23:48.490><c> course</c>

00:23:48.510 --> 00:23:48.520 align:start position:0%
integers a dog a monkey well of course
 

00:23:48.520 --> 00:23:50.760 align:start position:0%
integers a dog a monkey well of course
it<00:23:48.910><c> will</c><00:23:48.970><c> be</c><00:23:49.030><c> an</c><00:23:49.210><c> integer</c><00:23:49.480><c> so</c><00:23:50.110><c> you</c><00:23:50.170><c> know</c><00:23:50.590><c> it's</c>

00:23:50.760 --> 00:23:50.770 align:start position:0%
it will be an integer so you know it's
 

00:23:50.770 --> 00:23:52.740 align:start position:0%
it will be an integer so you know it's
an<00:23:50.920><c> integer</c><00:23:51.220><c> the</c><00:23:51.730><c> language</c><00:23:52.270><c> knows</c><00:23:52.480><c> it's</c><00:23:52.660><c> an</c>

00:23:52.740 --> 00:23:52.750 align:start position:0%
an integer the language knows it's an
 

00:23:52.750 --> 00:23:53.160 align:start position:0%
an integer the language knows it's an
integer

00:23:53.160 --> 00:23:53.170 align:start position:0%
integer
 

00:23:53.170 --> 00:23:56.100 align:start position:0%
integer
why<00:23:53.740><c> bother</c><00:23:54.160><c> seeing</c><00:23:54.550><c> or</c><00:23:54.820><c> the</c><00:23:54.850><c> typist</c><00:23:55.480><c> so</c><00:23:55.900><c> for</c>

00:23:56.100 --> 00:23:56.110 align:start position:0%
why bother seeing or the typist so for
 

00:23:56.110 --> 00:23:57.660 align:start position:0%
why bother seeing or the typist so for
the<00:23:56.200><c> first</c><00:23:56.380><c> time</c><00:23:56.620><c> in</c><00:23:56.710><c> a</c><00:23:56.800><c> long</c><00:23:57.010><c> time</c>

00:23:57.660 --> 00:23:57.670 align:start position:0%
the first time in a long time
 

00:23:57.670 --> 00:24:00.930 align:start position:0%
the first time in a long time
Java<00:23:58.150><c> is</c><00:23:58.390><c> finally</c><00:23:59.080><c> intelligent</c><00:23:59.800><c> we</c><00:24:00.310><c> can</c><00:24:00.550><c> use</c>

00:24:00.930 --> 00:24:00.940 align:start position:0%
Java is finally intelligent we can use
 

00:24:00.940 --> 00:24:04.740 align:start position:0%
Java is finally intelligent we can use
very<00:24:01.900><c> easily</c><00:24:02.230><c> type</c><00:24:02.770><c> inference</c><00:24:03.400><c> with</c><00:24:04.180><c> lambda</c>

00:24:04.740 --> 00:24:04.750 align:start position:0%
very easily type inference with lambda
 

00:24:04.750 --> 00:24:07.860 align:start position:0%
very easily type inference with lambda
expressions<00:24:05.470><c> so</c><00:24:06.100><c> you</c><00:24:06.520><c> can</c><00:24:06.790><c> simply</c><00:24:07.270><c> leave</c><00:24:07.660><c> out</c>

00:24:07.860 --> 00:24:07.870 align:start position:0%
expressions so you can simply leave out
 

00:24:07.870 --> 00:24:10.560 align:start position:0%
expressions so you can simply leave out
the<00:24:08.200><c> type</c><00:24:08.440><c> because</c><00:24:08.860><c> the</c><00:24:09.370><c> type</c><00:24:09.640><c> is</c><00:24:09.940><c> not</c><00:24:10.120><c> adding</c>

00:24:10.560 --> 00:24:10.570 align:start position:0%
the type because the type is not adding
 

00:24:10.570 --> 00:24:12.930 align:start position:0%
the type because the type is not adding
any<00:24:10.690><c> value</c><00:24:10.780><c> in</c><00:24:11.440><c> this</c><00:24:11.590><c> case</c><00:24:11.830><c> it</c><00:24:12.190><c> is</c><00:24:12.400><c> kind</c><00:24:12.610><c> it</c><00:24:12.790><c> is</c>

00:24:12.930 --> 00:24:12.940 align:start position:0%
any value in this case it is kind it is
 

00:24:12.940 --> 00:24:15.270 align:start position:0%
any value in this case it is kind it is
very<00:24:13.180><c> obvious</c><00:24:13.420><c> now</c><00:24:14.170><c> make</c><00:24:14.380><c> no</c><00:24:14.410><c> mistake</c><00:24:14.560><c> this</c><00:24:15.220><c> is</c>

00:24:15.270 --> 00:24:15.280 align:start position:0%
very obvious now make no mistake this is
 

00:24:15.280 --> 00:24:17.880 align:start position:0%
very obvious now make no mistake this is
not<00:24:15.430><c> dynamic</c><00:24:16.030><c> typing</c><00:24:16.810><c> this</c><00:24:17.200><c> actually</c><00:24:17.740><c> is</c>

00:24:17.880 --> 00:24:17.890 align:start position:0%
not dynamic typing this actually is
 

00:24:17.890 --> 00:24:20.730 align:start position:0%
not dynamic typing this actually is
static<00:24:18.580><c> typing</c><00:24:19.090><c> where</c><00:24:19.600><c> the</c><00:24:19.780><c> type</c><00:24:20.050><c> is</c><00:24:20.290><c> inferred</c>

00:24:20.730 --> 00:24:20.740 align:start position:0%
static typing where the type is inferred
 

00:24:20.740 --> 00:24:23.940 align:start position:0%
static typing where the type is inferred
at<00:24:20.920><c> compile</c><00:24:21.370><c> time</c><00:24:21.400><c> just</c><00:24:22.270><c> to</c><00:24:22.390><c> verify</c><00:24:22.690><c> that</c><00:24:23.050><c> if</c><00:24:23.740><c> I</c>

00:24:23.940 --> 00:24:23.950 align:start position:0%
at compile time just to verify that if I
 

00:24:23.950 --> 00:24:25.789 align:start position:0%
at compile time just to verify that if I
go<00:24:24.100><c> back</c><00:24:24.280><c> to</c><00:24:24.430><c> this</c><00:24:24.580><c> code</c><00:24:24.910><c> and</c>

00:24:25.789 --> 00:24:25.799 align:start position:0%
go back to this code and
 

00:24:25.799 --> 00:24:28.269 align:start position:0%
go back to this code and
on<00:24:25.889><c> the</c><00:24:26.159><c> element</c><00:24:26.730><c> II</c><00:24:26.850><c> if</c><00:24:27.149><c> I</c><00:24:27.269><c> were</c><00:24:27.389><c> to</c><00:24:27.509><c> call</c><00:24:27.659><c> foo</c>

00:24:28.269 --> 00:24:28.279 align:start position:0%
on the element II if I were to call foo
 

00:24:28.279 --> 00:24:31.039 align:start position:0%
on the element II if I were to call foo
notice<00:24:29.279><c> the</c><00:24:29.429><c> error</c><00:24:29.730><c> message</c><00:24:30.330><c> we</c><00:24:30.480><c> are</c><00:24:30.509><c> getting</c>

00:24:31.039 --> 00:24:31.049 align:start position:0%
notice the error message we are getting
 

00:24:31.049 --> 00:24:34.850 align:start position:0%
notice the error message we are getting
it<00:24:31.379><c> says</c><00:24:31.860><c> method</c><00:24:32.700><c> foo</c><00:24:33.080><c> variable</c><00:24:34.080><c> e</c><00:24:34.289><c> of</c><00:24:34.470><c> type</c>

00:24:34.850 --> 00:24:34.860 align:start position:0%
it says method foo variable e of type
 

00:24:34.860 --> 00:24:38.090 align:start position:0%
it says method foo variable e of type
integer<00:24:35.610><c> and</c><00:24:36.179><c> so</c><00:24:36.629><c> it</c><00:24:36.840><c> very</c><00:24:37.110><c> clearly</c><00:24:37.590><c> knows</c>

00:24:38.090 --> 00:24:38.100 align:start position:0%
integer and so it very clearly knows
 

00:24:38.100 --> 00:24:40.549 align:start position:0%
integer and so it very clearly knows
that<00:24:38.519><c> ease</c><00:24:38.759><c> of</c><00:24:39.029><c> integer</c><00:24:39.450><c> there</c><00:24:39.899><c> is</c><00:24:39.989><c> absolutely</c>

00:24:40.549 --> 00:24:40.559 align:start position:0%
that ease of integer there is absolutely
 

00:24:40.559 --> 00:24:42.590 align:start position:0%
that ease of integer there is absolutely
no<00:24:40.679><c> confusion</c><00:24:40.860><c> in</c><00:24:41.369><c> this</c><00:24:41.489><c> point</c><00:24:41.820><c> so</c><00:24:42.299><c> we</c><00:24:42.419><c> don't</c>

00:24:42.590 --> 00:24:42.600 align:start position:0%
no confusion in this point so we don't
 

00:24:42.600 --> 00:24:44.299 align:start position:0%
no confusion in this point so we don't
have<00:24:42.749><c> to</c><00:24:42.899><c> really</c><00:24:43.080><c> specify</c><00:24:43.320><c> the</c><00:24:43.559><c> type</c><00:24:43.860><c> in</c><00:24:44.129><c> this</c>

00:24:44.299 --> 00:24:44.309 align:start position:0%
have to really specify the type in this
 

00:24:44.309 --> 00:24:46.639 align:start position:0%
have to really specify the type in this
case<00:24:44.519><c> but</c><00:24:45.149><c> we</c><00:24:45.299><c> can</c><00:24:45.480><c> go</c><00:24:45.600><c> a</c><00:24:45.629><c> step</c><00:24:45.899><c> further</c><00:24:46.110><c> again</c>

00:24:46.639 --> 00:24:46.649 align:start position:0%
case but we can go a step further again
 

00:24:46.649 --> 00:24:49.009 align:start position:0%
case but we can go a step further again
in<00:24:46.980><c> this</c><00:24:47.129><c> if</c><00:24:47.399><c> you</c><00:24:47.519><c> will</c><00:24:47.730><c> now</c><00:24:48.389><c> that</c><00:24:48.450><c> we</c><00:24:48.779><c> know</c>

00:24:49.009 --> 00:24:49.019 align:start position:0%
in this if you will now that we know
 

00:24:49.019 --> 00:24:50.899 align:start position:0%
in this if you will now that we know
that<00:24:49.049><c> this</c><00:24:49.409><c> is</c><00:24:49.619><c> an</c><00:24:49.830><c> integer</c><00:24:50.159><c> we</c><00:24:50.489><c> don't</c><00:24:50.639><c> have</c><00:24:50.789><c> to</c>

00:24:50.899 --> 00:24:50.909 align:start position:0%
that this is an integer we don't have to
 

00:24:50.909 --> 00:24:53.269 align:start position:0%
that this is an integer we don't have to
say<00:24:51.059><c> the</c><00:24:51.210><c> type</c><00:24:51.450><c> well</c><00:24:52.110><c> we</c><00:24:52.289><c> can</c><00:24:52.499><c> also</c><00:24:52.710><c> get</c><00:24:53.039><c> rid</c><00:24:53.159><c> of</c>

00:24:53.269 --> 00:24:53.279 align:start position:0%
say the type well we can also get rid of
 

00:24:53.279 --> 00:24:55.759 align:start position:0%
say the type well we can also get rid of
that<00:24:53.460><c> silly</c><00:24:53.730><c> parentheses</c><00:24:54.509><c> so</c><00:24:55.169><c> if</c><00:24:55.440><c> you</c><00:24:55.590><c> only</c>

00:24:55.759 --> 00:24:55.769 align:start position:0%
that silly parentheses so if you only
 

00:24:55.769 --> 00:24:58.729 align:start position:0%
that silly parentheses so if you only
have<00:24:56.039><c> exactly</c><00:24:56.610><c> one</c><00:24:57.029><c> element</c><00:24:57.379><c> being</c><00:24:58.379><c> given</c><00:24:58.710><c> to</c>

00:24:58.729 --> 00:24:58.739 align:start position:0%
have exactly one element being given to
 

00:24:58.739 --> 00:25:01.549 align:start position:0%
have exactly one element being given to
your<00:24:58.980><c> lambda</c><00:24:59.369><c> you</c><00:25:00.179><c> can</c><00:25:00.419><c> get</c><00:25:00.749><c> rid</c><00:25:01.019><c> of</c><00:25:01.049><c> that</c><00:25:01.320><c> type</c>

00:25:01.549 --> 00:25:01.559 align:start position:0%
your lambda you can get rid of that type
 

00:25:01.559 --> 00:25:03.950 align:start position:0%
your lambda you can get rid of that type
the<00:25:01.980><c> parenthesis</c><00:25:02.489><c> as</c><00:25:02.669><c> well</c><00:25:03.059><c> so</c><00:25:03.629><c> if</c><00:25:03.809><c> you</c><00:25:03.929><c> don't</c>

00:25:03.950 --> 00:25:03.960 align:start position:0%
the parenthesis as well so if you don't
 

00:25:03.960 --> 00:25:06.590 align:start position:0%
the parenthesis as well so if you don't
have<00:25:04.409><c> any</c><00:25:05.009><c> parameters</c><00:25:05.879><c> you</c><00:25:06.179><c> have</c><00:25:06.330><c> to</c><00:25:06.419><c> put</c><00:25:06.539><c> a</c>

00:25:06.590 --> 00:25:06.600 align:start position:0%
have any parameters you have to put a
 

00:25:06.600 --> 00:25:08.090 align:start position:0%
have any parameters you have to put a
parenthesis<00:25:07.169><c> if</c><00:25:07.470><c> you</c><00:25:07.679><c> have</c><00:25:07.769><c> two</c><00:25:07.919><c> or</c><00:25:07.950><c> more</c>

00:25:08.090 --> 00:25:08.100 align:start position:0%
parenthesis if you have two or more
 

00:25:08.100 --> 00:25:09.979 align:start position:0%
parenthesis if you have two or more
parameters<00:25:08.970><c> you</c><00:25:09.090><c> have</c><00:25:09.149><c> to</c><00:25:09.269><c> put</c><00:25:09.389><c> a</c><00:25:09.419><c> parenthesis</c>

00:25:09.979 --> 00:25:09.989 align:start position:0%
parameters you have to put a parenthesis
 

00:25:09.989 --> 00:25:11.690 align:start position:0%
parameters you have to put a parenthesis
but<00:25:10.440><c> if</c><00:25:10.529><c> you</c><00:25:10.590><c> just</c><00:25:10.710><c> only</c><00:25:10.889><c> have</c><00:25:11.100><c> one</c><00:25:11.369><c> you</c><00:25:11.580><c> don't</c>

00:25:11.690 --> 00:25:11.700 align:start position:0%
but if you just only have one you don't
 

00:25:11.700 --> 00:25:15.349 align:start position:0%
but if you just only have one you don't
have<00:25:11.820><c> to</c><00:25:11.999><c> really</c><00:25:12.299><c> specify</c><00:25:12.809><c> that</c><00:25:13.289><c> but</c><00:25:14.279><c> one</c><00:25:15.059><c> more</c>

00:25:15.349 --> 00:25:15.359 align:start position:0%
have to really specify that but one more
 

00:25:15.359 --> 00:25:17.539 align:start position:0%
have to really specify that but one more
improvement<00:25:15.899><c> if</c><00:25:16.320><c> you</c><00:25:16.710><c> look</c><00:25:16.919><c> at</c><00:25:17.070><c> this</c><00:25:17.279><c> code</c>

00:25:17.539 --> 00:25:17.549 align:start position:0%
improvement if you look at this code
 

00:25:17.549 --> 00:25:18.799 align:start position:0%
improvement if you look at this code
that<00:25:17.580><c> we</c><00:25:17.940><c> have</c><00:25:18.090><c> at</c><00:25:18.269><c> hand</c>

00:25:18.799 --> 00:25:18.809 align:start position:0%
that we have at hand
 

00:25:18.809 --> 00:25:21.680 align:start position:0%
that we have at hand
notice<00:25:19.529><c> that</c><00:25:19.769><c> in</c><00:25:20.039><c> this</c><00:25:20.159><c> case</c><00:25:20.399><c> we</c><00:25:20.789><c> receive</c><00:25:21.179><c> an</c><00:25:21.359><c> E</c>

00:25:21.680 --> 00:25:21.690 align:start position:0%
notice that in this case we receive an E
 

00:25:21.690 --> 00:25:24.649 align:start position:0%
notice that in this case we receive an E
and<00:25:21.899><c> we</c><00:25:22.350><c> print</c><00:25:22.889><c> it</c><00:25:23.039><c> and</c><00:25:23.399><c> we</c><00:25:23.759><c> could</c><00:25:23.999><c> have</c><00:25:24.119><c> done</c><00:25:24.149><c> T</c>

00:25:24.649 --> 00:25:24.659 align:start position:0%
and we print it and we could have done T
 

00:25:24.659 --> 00:25:27.409 align:start position:0%
and we print it and we could have done T
plus<00:25:25.049><c> 1</c><00:25:25.470><c> for</c><00:25:25.919><c> example</c><00:25:26.039><c> or</c><00:25:26.639><c> we</c><00:25:27.119><c> could</c><00:25:27.299><c> have</c><00:25:27.330><c> done</c>

00:25:27.409 --> 00:25:27.419 align:start position:0%
plus 1 for example or we could have done
 

00:25:27.419 --> 00:25:30.739 align:start position:0%
plus 1 for example or we could have done
e<00:25:27.779><c> times</c><00:25:28.350><c> 2</c><00:25:28.950><c> for</c><00:25:29.279><c> example</c><00:25:29.759><c> but</c><00:25:30.059><c> the</c><00:25:30.179><c> point</c><00:25:30.450><c> is</c>

00:25:30.739 --> 00:25:30.749 align:start position:0%
e times 2 for example but the point is
 

00:25:30.749 --> 00:25:33.710 align:start position:0%
e times 2 for example but the point is
we<00:25:31.350><c> didn't</c><00:25:31.919><c> and</c><00:25:32.129><c> all</c><00:25:32.820><c> we</c><00:25:33.179><c> are</c><00:25:33.269><c> doing</c><00:25:33.389><c> is</c>

00:25:33.710 --> 00:25:33.720 align:start position:0%
we didn't and all we are doing is
 

00:25:33.720 --> 00:25:36.499 align:start position:0%
we didn't and all we are doing is
receiving<00:25:34.649><c> the</c><00:25:34.799><c> data</c><00:25:34.980><c> and</c><00:25:35.340><c> simply</c><00:25:35.700><c> passing</c><00:25:36.389><c> it</c>

00:25:36.499 --> 00:25:36.509 align:start position:0%
receiving the data and simply passing it
 

00:25:36.509 --> 00:25:39.889 align:start position:0%
receiving the data and simply passing it
and<00:25:36.659><c> this</c><00:25:37.409><c> kind</c><00:25:37.859><c> of</c><00:25:37.950><c> lambda</c><00:25:38.549><c> is</c><00:25:38.999><c> extremely</c>

00:25:39.889 --> 00:25:39.899 align:start position:0%
and this kind of lambda is extremely
 

00:25:39.899 --> 00:25:42.950 align:start position:0%
and this kind of lambda is extremely
trivial<00:25:40.320><c> in</c><00:25:41.070><c> that</c><00:25:41.399><c> it</c><00:25:41.639><c> receives</c><00:25:42.119><c> an</c><00:25:42.389><c> argument</c>

00:25:42.950 --> 00:25:42.960 align:start position:0%
trivial in that it receives an argument
 

00:25:42.960 --> 00:25:45.769 align:start position:0%
trivial in that it receives an argument
a<00:25:43.109><c> parameter</c><00:25:43.919><c> and</c><00:25:44.190><c> either</c><00:25:44.639><c> passes</c><00:25:45.299><c> it</c><00:25:45.450><c> down</c><00:25:45.480><c> to</c>

00:25:45.769 --> 00:25:45.779 align:start position:0%
a parameter and either passes it down to
 

00:25:45.779 --> 00:25:47.899 align:start position:0%
a parameter and either passes it down to
another<00:25:45.869><c> function</c><00:25:46.529><c> or</c><00:25:46.649><c> invokes</c><00:25:47.399><c> our</c><00:25:47.580><c> method</c>

00:25:47.899 --> 00:25:47.909 align:start position:0%
another function or invokes our method
 

00:25:47.909 --> 00:25:50.299 align:start position:0%
another function or invokes our method
on<00:25:48.059><c> it</c><00:25:48.359><c> I've</c><00:25:48.720><c> got</c><00:25:48.960><c> a</c><00:25:48.989><c> special</c><00:25:49.499><c> name</c><00:25:49.799><c> for</c><00:25:49.830><c> these</c>

00:25:50.299 --> 00:25:50.309 align:start position:0%
on it I've got a special name for these
 

00:25:50.309 --> 00:25:52.279 align:start position:0%
on it I've got a special name for these
kinds<00:25:50.609><c> of</c><00:25:50.669><c> lambdas</c><00:25:51.179><c> I've</c><00:25:51.570><c> called</c><00:25:52.019><c> these</c>

00:25:52.279 --> 00:25:52.289 align:start position:0%
kinds of lambdas I've called these
 

00:25:52.289 --> 00:25:54.919 align:start position:0%
kinds of lambdas I've called these
lambdas<00:25:52.799><c> are</c><00:25:52.950><c> as</c><00:25:53.279><c> the</c><00:25:53.580><c> office</c><00:25:54.090><c> space</c><00:25:54.210><c> pattern</c>

00:25:54.919 --> 00:25:54.929 align:start position:0%
lambdas are as the office space pattern
 

00:25:54.929 --> 00:25:56.539 align:start position:0%
lambdas are as the office space pattern
if<00:25:55.409><c> you</c><00:25:55.529><c> remember</c><00:25:55.859><c> watching</c><00:25:56.070><c> the</c><00:25:56.279><c> office</c>

00:25:56.539 --> 00:25:56.549 align:start position:0%
if you remember watching the office
 

00:25:56.549 --> 00:25:58.639 align:start position:0%
if you remember watching the office
space<00:25:56.730><c> movie</c><00:25:57.210><c> hey</c><00:25:57.690><c> Tom</c><00:25:57.989><c> what</c><00:25:58.259><c> do</c><00:25:58.320><c> you</c><00:25:58.379><c> do</c><00:25:58.499><c> in</c>

00:25:58.639 --> 00:25:58.649 align:start position:0%
space movie hey Tom what do you do in
 

00:25:58.649 --> 00:26:00.859 align:start position:0%
space movie hey Tom what do you do in
this<00:25:58.769><c> company</c><00:25:59.279><c> I</c><00:25:59.519><c> take</c><00:25:59.970><c> the</c><00:26:00.119><c> requirements</c><00:26:00.749><c> of</c>

00:26:00.859 --> 00:26:00.869 align:start position:0%
this company I take the requirements of
 

00:26:00.869 --> 00:26:02.960 align:start position:0%
this company I take the requirements of
the<00:26:00.929><c> program</c><00:26:01.159><c> programmers</c><00:26:02.159><c> and</c><00:26:02.399><c> give</c><00:26:02.820><c> it</c><00:26:02.940><c> to</c>

00:26:02.960 --> 00:26:02.970 align:start position:0%
the program programmers and give it to
 

00:26:02.970 --> 00:26:04.759 align:start position:0%
the program programmers and give it to
from<00:26:03.480><c> the</c><00:26:03.570><c> manager</c><00:26:03.960><c> from</c><00:26:04.379><c> the</c><00:26:04.440><c> business</c>

00:26:04.759 --> 00:26:04.769 align:start position:0%
from the manager from the business
 

00:26:04.769 --> 00:26:06.739 align:start position:0%
from the manager from the business
people<00:26:04.950><c> and</c><00:26:05.309><c> I</c><00:26:05.609><c> give</c><00:26:05.759><c> it</c><00:26:05.850><c> to</c><00:26:05.940><c> the</c><00:26:06.059><c> programmers</c>

00:26:06.739 --> 00:26:06.749 align:start position:0%
people and I give it to the programmers
 

00:26:06.749 --> 00:26:09.109 align:start position:0%
people and I give it to the programmers
so<00:26:07.169><c> all</c><00:26:07.590><c> the</c><00:26:07.769><c> tom</c><00:26:08.009><c> was</c><00:26:08.220><c> doing</c><00:26:08.519><c> in</c><00:26:08.639><c> this</c><00:26:08.730><c> company</c>

00:26:09.109 --> 00:26:09.119 align:start position:0%
so all the tom was doing in this company
 

00:26:09.119 --> 00:26:11.060 align:start position:0%
so all the tom was doing in this company
was<00:26:09.299><c> he</c><00:26:09.869><c> was</c><00:26:10.019><c> taking</c><00:26:10.350><c> the</c><00:26:10.440><c> requirements</c><00:26:11.009><c> from</c>

00:26:11.060 --> 00:26:11.070 align:start position:0%
was he was taking the requirements from
 

00:26:11.070 --> 00:26:12.289 align:start position:0%
was he was taking the requirements from
the<00:26:11.159><c> business</c><00:26:11.489><c> people</c><00:26:11.669><c> and</c><00:26:11.850><c> giving</c><00:26:12.119><c> to</c><00:26:12.210><c> the</c>

00:26:12.289 --> 00:26:12.299 align:start position:0%
the business people and giving to the
 

00:26:12.299 --> 00:26:14.419 align:start position:0%
the business people and giving to the
programmers<00:26:12.809><c> effectively</c><00:26:13.679><c> really</c><00:26:14.159><c> no</c>

00:26:14.419 --> 00:26:14.429 align:start position:0%
programmers effectively really no
 

00:26:14.429 --> 00:26:16.879 align:start position:0%
programmers effectively really no
purpose<00:26:14.850><c> well</c><00:26:15.419><c> when</c><00:26:15.869><c> you</c><00:26:16.019><c> have</c><00:26:16.230><c> a</c><00:26:16.259><c> lambda</c>

00:26:16.879 --> 00:26:16.889 align:start position:0%
purpose well when you have a lambda
 

00:26:16.889 --> 00:26:19.070 align:start position:0%
purpose well when you have a lambda
which<00:26:17.249><c> is</c><00:26:17.369><c> not</c><00:26:17.549><c> doing</c><00:26:17.909><c> really</c><00:26:18.179><c> a</c><00:26:18.330><c> lot</c><00:26:18.690><c> other</c>

00:26:19.070 --> 00:26:19.080 align:start position:0%
which is not doing really a lot other
 

00:26:19.080 --> 00:26:22.310 align:start position:0%
which is not doing really a lot other
than<00:26:19.409><c> simply</c><00:26:19.999><c> transforming</c><00:26:20.999><c> the</c><00:26:21.179><c> data</c><00:26:21.419><c> you</c>

00:26:22.310 --> 00:26:22.320 align:start position:0%
than simply transforming the data you
 

00:26:22.320 --> 00:26:24.440 align:start position:0%
than simply transforming the data you
are<00:26:22.529><c> going</c><00:26:22.710><c> to</c><00:26:22.769><c> get</c><00:26:22.859><c> tired</c><00:26:23.220><c> writing</c><00:26:24.059><c> this</c><00:26:24.210><c> and</c>

00:26:24.440 --> 00:26:24.450 align:start position:0%
are going to get tired writing this and
 

00:26:24.450 --> 00:26:26.779 align:start position:0%
are going to get tired writing this and
you're<00:26:25.169><c> going</c><00:26:25.320><c> to</c><00:26:25.379><c> say</c><00:26:25.590><c> this</c><00:26:25.830><c> code</c><00:26:26.039><c> is</c><00:26:26.190><c> stupid</c>

00:26:26.779 --> 00:26:26.789 align:start position:0%
you're going to say this code is stupid
 

00:26:26.789 --> 00:26:29.450 align:start position:0%
you're going to say this code is stupid
but<00:26:27.059><c> history</c><00:26:27.570><c> I</c><00:26:27.690><c> shown</c><00:26:27.929><c> one</c><00:26:28.230><c> thing</c><00:26:28.470><c> to</c><00:26:28.619><c> us</c><00:26:28.769><c> Java</c>

00:26:29.450 --> 00:26:29.460 align:start position:0%
but history I shown one thing to us Java
 

00:26:29.460 --> 00:26:31.909 align:start position:0%
but history I shown one thing to us Java
programmers<00:26:30.029><c> never</c><00:26:30.480><c> write</c><00:26:30.779><c> stupid</c><00:26:31.259><c> code</c><00:26:31.440><c> they</c>

00:26:31.909 --> 00:26:31.919 align:start position:0%
programmers never write stupid code they
 

00:26:31.919 --> 00:26:34.430 align:start position:0%
programmers never write stupid code they
instead<00:26:32.340><c> develop</c><00:26:32.730><c> IDE</c><00:26:33.090><c> is</c><00:26:33.359><c> to</c><00:26:33.779><c> vomit</c><00:26:34.080><c> stupid</c>

00:26:34.430 --> 00:26:34.440 align:start position:0%
instead develop IDE is to vomit stupid
 

00:26:34.440 --> 00:26:36.200 align:start position:0%
instead develop IDE is to vomit stupid
code<00:26:34.649><c> and</c><00:26:34.950><c> people</c><00:26:35.429><c> will</c><00:26:35.519><c> be</c><00:26:35.639><c> asking</c><00:26:36.029><c> each</c>

00:26:36.200 --> 00:26:36.210 align:start position:0%
code and people will be asking each
 

00:26:36.210 --> 00:26:38.620 align:start position:0%
code and people will be asking each
other<00:26:36.389><c> what</c><00:26:36.570><c> should</c><00:26:36.929><c> I</c><00:26:37.019><c> do</c><00:26:37.200><c> that</c><00:26:37.470><c> you're</c><00:26:37.740><c> using</c>

00:26:38.620 --> 00:26:38.630 align:start position:0%
other what should I do that you're using
 

00:26:38.630 --> 00:26:40.330 align:start position:0%
other what should I do that you're using
to<00:26:38.720><c> do</c><00:26:38.900><c> this</c><00:26:39.080><c> well</c><00:26:39.590><c> they</c><00:26:39.830><c> know</c><00:26:39.950><c> this</c><00:26:40.130><c> was</c>

00:26:40.330 --> 00:26:40.340 align:start position:0%
to do this well they know this was
 

00:26:40.340 --> 00:26:42.190 align:start position:0%
to do this well they know this was
coming<00:26:40.730><c> so</c><00:26:40.940><c> they</c><00:26:41.090><c> remove</c><00:26:41.390><c> this</c><00:26:41.570><c> duplication</c>

00:26:42.190 --> 00:26:42.200 align:start position:0%
coming so they remove this duplication
 

00:26:42.200 --> 00:26:44.980 align:start position:0%
coming so they remove this duplication
so<00:26:42.320><c> if</c><00:26:42.410><c> you</c><00:26:42.470><c> notice</c><00:26:42.860><c> we</c><00:26:43.400><c> have</c><00:26:43.430><c> a</c><00:26:43.640><c> e</c><00:26:43.910><c> over</c><00:26:44.570><c> here</c>

00:26:44.980 --> 00:26:44.990 align:start position:0%
so if you notice we have a e over here
 

00:26:44.990 --> 00:26:47.800 align:start position:0%
so if you notice we have a e over here
so<00:26:45.440><c> this</c><00:26:45.680><c> ski</c><00:26:46.010><c> is</c><00:26:46.280><c> common</c><00:26:46.910><c> so</c><00:26:47.120><c> we'll</c><00:26:47.270><c> remove</c><00:26:47.600><c> it</c>

00:26:47.800 --> 00:26:47.810 align:start position:0%
so this ski is common so we'll remove it
 

00:26:47.810 --> 00:26:50.170 align:start position:0%
so this ski is common so we'll remove it
with<00:26:48.080><c> this</c><00:26:48.350><c> e</c><00:26:48.560><c> right</c><00:26:48.980><c> here</c><00:26:49.400><c> and</c><00:26:49.730><c> then</c><00:26:50.030><c> we'll</c>

00:26:50.170 --> 00:26:50.180 align:start position:0%
with this e right here and then we'll
 

00:26:50.180 --> 00:26:52.720 align:start position:0%
with this e right here and then we'll
remove<00:26:50.360><c> this</c><00:26:50.720><c> arrow</c><00:26:51.020><c> as</c><00:26:51.320><c> well</c><00:26:51.680><c> and</c><00:26:51.980><c> we</c><00:26:52.370><c> simply</c>

00:26:52.720 --> 00:26:52.730 align:start position:0%
remove this arrow as well and we simply
 

00:26:52.730 --> 00:26:55.270 align:start position:0%
remove this arrow as well and we simply
change<00:26:53.060><c> this</c><00:26:53.330><c> dock</c><00:26:53.600><c> to</c><00:26:53.810><c> double</c><00:26:54.110><c> :</c><00:26:54.530><c> and</c><00:26:54.740><c> these</c>

00:26:55.270 --> 00:26:55.280 align:start position:0%
change this dock to double : and these
 

00:26:55.280 --> 00:26:56.050 align:start position:0%
change this dock to double : and these
are<00:26:55.610><c> called</c>

00:26:56.050 --> 00:26:56.060 align:start position:0%
are called
 

00:26:56.060 --> 00:26:58.690 align:start position:0%
are called
method<00:26:56.450><c> references</c><00:26:56.980><c> method</c><00:26:57.980><c> references</c><00:26:58.220><c> make</c>

00:26:58.690 --> 00:26:58.700 align:start position:0%
method references method references make
 

00:26:58.700 --> 00:27:00.490 align:start position:0%
method references method references make
the<00:26:58.820><c> code</c><00:26:59.000><c> lock</c><00:26:59.240><c> easier</c><00:26:59.660><c> to</c><00:26:59.810><c> understand</c><00:27:00.320><c> and</c>

00:27:00.490 --> 00:27:00.500 align:start position:0%
the code lock easier to understand and
 

00:27:00.500 --> 00:27:02.170 align:start position:0%
the code lock easier to understand and
work<00:27:00.680><c> with</c><00:27:00.740><c> I'm</c><00:27:01.370><c> going</c><00:27:01.640><c> to</c><00:27:01.700><c> say</c><00:27:01.820><c> method</c>

00:27:02.170 --> 00:27:02.180 align:start position:0%
work with I'm going to say method
 

00:27:02.180 --> 00:27:03.820 align:start position:0%
work with I'm going to say method
references<00:27:02.360><c> take</c><00:27:02.780><c> a</c><00:27:02.810><c> little</c><00:27:03.110><c> bit</c><00:27:03.260><c> more</c><00:27:03.320><c> effort</c>

00:27:03.820 --> 00:27:03.830 align:start position:0%
references take a little bit more effort
 

00:27:03.830 --> 00:27:05.710 align:start position:0%
references take a little bit more effort
to<00:27:03.860><c> write</c><00:27:04.280><c> them</c><00:27:04.640><c> when</c><00:27:04.910><c> you</c><00:27:05.000><c> get</c><00:27:05.150><c> before</c><00:27:05.540><c> you</c>

00:27:05.710 --> 00:27:05.720 align:start position:0%
to write them when you get before you
 

00:27:05.720 --> 00:27:07.600 align:start position:0%
to write them when you get before you
got<00:27:05.930><c> used</c><00:27:06.260><c> to</c><00:27:06.410><c> them</c><00:27:06.590><c> but</c><00:27:07.130><c> method</c><00:27:07.460><c> references</c>

00:27:07.600 --> 00:27:07.610 align:start position:0%
got used to them but method references
 

00:27:07.610 --> 00:27:10.390 align:start position:0%
got used to them but method references
often<00:27:08.300><c> are</c><00:27:08.480><c> easier</c><00:27:09.110><c> to</c><00:27:09.170><c> read</c><00:27:09.530><c> so</c><00:27:10.130><c> they</c><00:27:10.310><c> are</c>

00:27:10.390 --> 00:27:10.400 align:start position:0%
often are easier to read so they are
 

00:27:10.400 --> 00:27:12.130 align:start position:0%
often are easier to read so they are
easier<00:27:11.000><c> to</c><00:27:11.030><c> read</c><00:27:11.330><c> then</c><00:27:11.570><c> right</c><00:27:11.870><c> in</c><00:27:12.050><c> the</c>

00:27:12.130 --> 00:27:12.140 align:start position:0%
easier to read then right in the
 

00:27:12.140 --> 00:27:13.960 align:start position:0%
easier to read then right in the
beginning<00:27:12.260><c> but</c><00:27:12.860><c> over</c><00:27:13.130><c> time</c><00:27:13.310><c> we</c><00:27:13.520><c> get</c><00:27:13.700><c> really</c>

00:27:13.960 --> 00:27:13.970 align:start position:0%
beginning but over time we get really
 

00:27:13.970 --> 00:27:16.510 align:start position:0%
beginning but over time we get really
better<00:27:14.300><c> at</c><00:27:14.570><c> it</c><00:27:14.750><c> as</c><00:27:14.840><c> we</c><00:27:15.230><c> use</c><00:27:15.410><c> it</c><00:27:15.620><c> so</c><00:27:16.070><c> what</c><00:27:16.280><c> we</c><00:27:16.310><c> did</c>

00:27:16.510 --> 00:27:16.520 align:start position:0%
better at it as we use it so what we did
 

00:27:16.520 --> 00:27:18.820 align:start position:0%
better at it as we use it so what we did
in<00:27:16.640><c> this</c><00:27:16.760><c> example</c><00:27:16.820><c> is</c><00:27:17.450><c> we</c><00:27:17.570><c> took</c><00:27:17.810><c> a</c><00:27:18.020><c> external</c>

00:27:18.820 --> 00:27:18.830 align:start position:0%
in this example is we took a external
 

00:27:18.830 --> 00:27:21.370 align:start position:0%
in this example is we took a external
iterator<00:27:19.310><c> the</c><00:27:19.940><c> one</c><00:27:20.120><c> that</c><00:27:20.270><c> we</c><00:27:20.390><c> had</c><00:27:20.570><c> before</c><00:27:20.780><c> and</c>

00:27:21.370 --> 00:27:21.380 align:start position:0%
iterator the one that we had before and
 

00:27:21.380 --> 00:27:24.370 align:start position:0%
iterator the one that we had before and
we<00:27:21.860><c> refactored</c><00:27:22.490><c> it</c><00:27:22.640><c> a</c><00:27:22.730><c> few</c><00:27:22.970><c> times</c><00:27:23.270><c> here</c><00:27:23.990><c> is</c><00:27:24.170><c> the</c>

00:27:24.370 --> 00:27:24.380 align:start position:0%
we refactored it a few times here is the
 

00:27:24.380 --> 00:27:26.350 align:start position:0%
we refactored it a few times here is the
traditional<00:27:24.590><c> external</c><00:27:25.550><c> iterator</c><00:27:26.000><c> that</c><00:27:26.210><c> we</c>

00:27:26.350 --> 00:27:26.360 align:start position:0%
traditional external iterator that we
 

00:27:26.360 --> 00:27:28.660 align:start position:0%
traditional external iterator that we
started<00:27:26.810><c> with</c><00:27:27.080><c> we</c><00:27:27.650><c> got</c><00:27:27.860><c> something</c><00:27:28.220><c> simpler</c>

00:27:28.660 --> 00:27:28.670 align:start position:0%
started with we got something simpler
 

00:27:28.670 --> 00:27:31.270 align:start position:0%
started with we got something simpler
which<00:27:28.850><c> is</c><00:27:29.000><c> also</c><00:27:29.210><c> an</c><00:27:29.630><c> external</c><00:27:29.930><c> iterator</c><00:27:30.500><c> then</c>

00:27:31.270 --> 00:27:31.280 align:start position:0%
which is also an external iterator then
 

00:27:31.280 --> 00:27:33.190 align:start position:0%
which is also an external iterator then
of<00:27:31.400><c> course</c><00:27:31.640><c> we</c><00:27:31.820><c> took</c><00:27:32.000><c> the</c><00:27:32.150><c> internal</c><00:27:32.720><c> iterator</c>

00:27:33.190 --> 00:27:33.200 align:start position:0%
of course we took the internal iterator
 

00:27:33.200 --> 00:27:35.680 align:start position:0%
of course we took the internal iterator
which<00:27:33.830><c> was</c><00:27:34.040><c> verbose</c><00:27:34.670><c> but</c><00:27:35.030><c> showed</c><00:27:35.300><c> us</c><00:27:35.420><c> how</c><00:27:35.630><c> we</c>

00:27:35.680 --> 00:27:35.690 align:start position:0%
which was verbose but showed us how we
 

00:27:35.690 --> 00:27:37.930 align:start position:0%
which was verbose but showed us how we
can<00:27:35.990><c> do</c><00:27:36.170><c> the</c><00:27:36.320><c> looping</c><00:27:36.800><c> and</c><00:27:36.920><c> print</c><00:27:37.580><c> stuff</c>

00:27:37.930 --> 00:27:37.940 align:start position:0%
can do the looping and print stuff
 

00:27:37.940 --> 00:27:40.480 align:start position:0%
can do the looping and print stuff
inside<00:27:38.780><c> this</c><00:27:38.930><c> loop</c><00:27:39.200><c> and</c><00:27:39.560><c> then</c><00:27:39.950><c> finally</c><00:27:40.370><c> of</c>

00:27:40.480 --> 00:27:40.490 align:start position:0%
inside this loop and then finally of
 

00:27:40.490 --> 00:27:42.580 align:start position:0%
inside this loop and then finally of
course<00:27:40.520><c> we</c><00:27:40.880><c> traded</c><00:27:41.660><c> that</c><00:27:41.840><c> with</c><00:27:42.110><c> lambda</c>

00:27:42.580 --> 00:27:42.590 align:start position:0%
course we traded that with lambda
 

00:27:42.590 --> 00:27:44.980 align:start position:0%
course we traded that with lambda
expressions<00:27:43.250><c> we</c><00:27:43.730><c> got</c><00:27:44.060><c> rid</c><00:27:44.270><c> of</c><00:27:44.360><c> the</c><00:27:44.480><c> type</c><00:27:44.750><c> and</c>

00:27:44.980 --> 00:27:44.990 align:start position:0%
expressions we got rid of the type and
 

00:27:44.990 --> 00:27:47.920 align:start position:0%
expressions we got rid of the type and
use<00:27:45.140><c> the</c><00:27:45.290><c> type</c><00:27:45.470><c> inference</c><00:27:46.330><c> we</c><00:27:47.330><c> got</c><00:27:47.570><c> rid</c><00:27:47.720><c> of</c><00:27:47.780><c> the</c>

00:27:47.920 --> 00:27:47.930 align:start position:0%
use the type inference we got rid of the
 

00:27:47.930 --> 00:27:49.750 align:start position:0%
use the type inference we got rid of the
parentheses<00:27:48.620><c> after</c><00:27:48.860><c> that</c><00:27:49.310><c> and</c><00:27:49.550><c> then</c><00:27:49.670><c> of</c>

00:27:49.750 --> 00:27:49.760 align:start position:0%
parentheses after that and then of
 

00:27:49.760 --> 00:27:51.430 align:start position:0%
parentheses after that and then of
course<00:27:49.790><c> eventually</c><00:27:50.300><c> we</c><00:27:50.960><c> use</c><00:27:51.080><c> the</c><00:27:51.170><c> method</c>

00:27:51.430 --> 00:27:51.440 align:start position:0%
course eventually we use the method
 

00:27:51.440 --> 00:27:52.990 align:start position:0%
course eventually we use the method
reference<00:27:51.860><c> because</c><00:27:52.190><c> this</c><00:27:52.460><c> particular</c><00:27:52.790><c> lambda</c>

00:27:52.990 --> 00:27:53.000 align:start position:0%
reference because this particular lambda
 

00:27:53.000 --> 00:27:54.970 align:start position:0%
reference because this particular lambda
was<00:27:53.270><c> that</c><00:27:53.510><c> simple</c><00:27:53.960><c> so</c><00:27:54.410><c> this</c><00:27:54.560><c> gives</c><00:27:54.770><c> you</c><00:27:54.860><c> an</c>

00:27:54.970 --> 00:27:54.980 align:start position:0%
was that simple so this gives you an
 

00:27:54.980 --> 00:27:57.820 align:start position:0%
was that simple so this gives you an
idea<00:27:55.190><c> about</c><00:27:55.520><c> how</c><00:27:55.820><c> we</c><00:27:55.850><c> can</c><00:27:56.240><c> go</c><00:27:56.390><c> about</c><00:27:56.830><c> using</c>

00:27:57.820 --> 00:27:57.830 align:start position:0%
idea about how we can go about using
 

00:27:57.830 --> 00:28:00.100 align:start position:0%
idea about how we can go about using
lambda<00:27:58.190><c> expressions</c><00:27:58.880><c> to</c><00:27:59.180><c> start</c><00:27:59.810><c> writing</c>

00:28:00.100 --> 00:28:00.110 align:start position:0%
lambda expressions to start writing
 

00:28:00.110 --> 00:28:02.470 align:start position:0%
lambda expressions to start writing
these<00:28:00.350><c> kinds</c><00:28:00.650><c> of</c><00:28:00.740><c> code</c><00:28:00.950><c> moving</c><00:28:01.340><c> forward</c><00:28:01.820><c> so</c>

00:28:02.470 --> 00:28:02.480 align:start position:0%
these kinds of code moving forward so
 

00:28:02.480 --> 00:28:04.450 align:start position:0%
these kinds of code moving forward so
this<00:28:02.660><c> becomes</c><00:28:02.960><c> a</c><00:28:03.080><c> very</c><00:28:03.230><c> fundamental</c><00:28:03.560><c> shift</c><00:28:04.280><c> in</c>

00:28:04.450 --> 00:28:04.460 align:start position:0%
this becomes a very fundamental shift in
 

00:28:04.460 --> 00:28:06.790 align:start position:0%
this becomes a very fundamental shift in
how<00:28:04.520><c> we</c><00:28:04.700><c> do</c><00:28:05.090><c> this</c><00:28:05.330><c> but</c><00:28:05.990><c> one</c><00:28:06.260><c> of</c><00:28:06.290><c> the</c><00:28:06.410><c> things</c><00:28:06.650><c> to</c>

00:28:06.790 --> 00:28:06.800 align:start position:0%
how we do this but one of the things to
 

00:28:06.800 --> 00:28:09.850 align:start position:0%
how we do this but one of the things to
keep<00:28:06.980><c> in</c><00:28:07.190><c> mind</c><00:28:07.400><c> is</c><00:28:07.700><c> this</c><00:28:08.690><c> is</c><00:28:08.750><c> essentially</c><00:28:09.710><c> a</c>

00:28:09.850 --> 00:28:09.860 align:start position:0%
keep in mind is this is essentially a
 

00:28:09.860 --> 00:28:13.180 align:start position:0%
keep in mind is this is essentially a
way<00:28:10.370><c> of</c><00:28:11.030><c> programming</c><00:28:11.270><c> where</c><00:28:11.960><c> we</c><00:28:12.560><c> favor</c><00:28:12.860><c> more</c>

00:28:13.180 --> 00:28:13.190 align:start position:0%
way of programming where we favor more
 

00:28:13.190 --> 00:28:16.660 align:start position:0%
way of programming where we favor more
of<00:28:13.400><c> a</c><00:28:13.520><c> decorative</c><00:28:14.090><c> style</c><00:28:14.660><c> of</c><00:28:14.810><c> code</c><00:28:15.050><c> than</c><00:28:15.830><c> first</c>

00:28:16.660 --> 00:28:16.670 align:start position:0%
of a decorative style of code than first
 

00:28:16.670 --> 00:28:18.790 align:start position:0%
of a decorative style of code than first
and<00:28:16.970><c> then</c><00:28:17.120><c> a</c><00:28:17.150><c> functional</c><00:28:17.720><c> way</c><00:28:17.990><c> of</c><00:28:18.140><c> doing</c><00:28:18.440><c> so</c>

00:28:18.790 --> 00:28:18.800 align:start position:0%
and then a functional way of doing so
 

00:28:18.800 --> 00:28:21.490 align:start position:0%
and then a functional way of doing so
what<00:28:19.010><c> is</c><00:28:19.160><c> decorated</c><00:28:19.880><c> style</c><00:28:20.210><c> a</c><00:28:20.500><c> decorated</c>

00:28:21.490 --> 00:28:21.500 align:start position:0%
what is decorated style a decorated
 

00:28:21.500 --> 00:28:24.220 align:start position:0%
what is decorated style a decorated
style<00:28:21.740><c> of</c><00:28:21.890><c> coding</c><00:28:22.250><c> is</c><00:28:22.370><c> where</c><00:28:22.700><c> you</c><00:28:23.270><c> tell</c><00:28:23.600><c> what</c>

00:28:24.220 --> 00:28:24.230 align:start position:0%
style of coding is where you tell what
 

00:28:24.230 --> 00:28:26.410 align:start position:0%
style of coding is where you tell what
to<00:28:24.560><c> do</c><00:28:24.740><c> and</c><00:28:25.160><c> you</c><00:28:25.520><c> let</c><00:28:25.700><c> the</c><00:28:25.820><c> underlying</c>

00:28:26.410 --> 00:28:26.420 align:start position:0%
to do and you let the underlying
 

00:28:26.420 --> 00:28:29.500 align:start position:0%
to do and you let the underlying
functions<00:28:26.960><c> figure</c><00:28:27.230><c> out</c><00:28:27.440><c> how</c><00:28:27.980><c> to</c><00:28:28.040><c> do</c><00:28:28.550><c> it</c><00:28:28.730><c> in</c><00:28:29.150><c> an</c>

00:28:29.500 --> 00:28:29.510 align:start position:0%
functions figure out how to do it in an
 

00:28:29.510 --> 00:28:32.110 align:start position:0%
functions figure out how to do it in an
imperative<00:28:30.050><c> style</c><00:28:30.500><c> of</c><00:28:30.740><c> code</c><00:28:30.950><c> you</c><00:28:31.580><c> spend</c><00:28:32.000><c> your</c>

00:28:32.110 --> 00:28:32.120 align:start position:0%
imperative style of code you spend your
 

00:28:32.120 --> 00:28:34.390 align:start position:0%
imperative style of code you spend your
time<00:28:32.330><c> and</c><00:28:32.510><c> if</c><00:28:32.600><c> we're</c><00:28:32.780><c> telling</c><00:28:32.990><c> what</c><00:28:33.860><c> to</c><00:28:34.040><c> do</c><00:28:34.190><c> and</c>

00:28:34.390 --> 00:28:34.400 align:start position:0%
time and if we're telling what to do and
 

00:28:34.400 --> 00:28:36.640 align:start position:0%
time and if we're telling what to do and
also<00:28:34.580><c> how</c><00:28:35.240><c> to</c><00:28:35.300><c> do</c><00:28:35.660><c> it</c><00:28:35.810><c> let's</c><00:28:36.170><c> look</c><00:28:36.350><c> at</c><00:28:36.500><c> one</c>

00:28:36.640 --> 00:28:36.650 align:start position:0%
also how to do it let's look at one
 

00:28:36.650 --> 00:28:38.680 align:start position:0%
also how to do it let's look at one
example<00:28:36.770><c> of</c><00:28:37.250><c> this</c><00:28:37.490><c> to</c><00:28:37.910><c> get</c><00:28:38.060><c> a</c><00:28:38.120><c> better</c><00:28:38.330><c> feel</c><00:28:38.660><c> for</c>

00:28:38.680 --> 00:28:38.690 align:start position:0%
example of this to get a better feel for
 

00:28:38.690 --> 00:28:41.350 align:start position:0%
example of this to get a better feel for
what<00:28:38.930><c> that</c><00:28:39.200><c> really</c><00:28:39.440><c> means</c><00:28:39.770><c> so</c><00:28:40.490><c> here</c><00:28:40.520><c> is</c><00:28:41.000><c> a</c><00:28:41.030><c> list</c>

00:28:41.350 --> 00:28:41.360 align:start position:0%
what that really means so here is a list
 

00:28:41.360 --> 00:28:43.690 align:start position:0%
what that really means so here is a list
of<00:28:41.600><c> numbers</c><00:28:41.780><c> 1</c><00:28:42.230><c> to</c><00:28:42.380><c> 10</c><00:28:42.650><c> but</c><00:28:43.280><c> let's</c><00:28:43.460><c> say</c><00:28:43.580><c> the</c>

00:28:43.690 --> 00:28:43.700 align:start position:0%
of numbers 1 to 10 but let's say the
 

00:28:43.700 --> 00:28:47.670 align:start position:0%
of numbers 1 to 10 but let's say the
given<00:28:44.060><c> problem</c><00:28:44.390><c> is</c><00:28:44.780><c> find</c><00:28:45.470><c> the</c><00:28:46.030><c> total</c><00:28:47.030><c> of</c>

00:28:47.670 --> 00:28:47.680 align:start position:0%
given problem is find the total of
 

00:28:47.680 --> 00:28:51.310 align:start position:0%
given problem is find the total of
double<00:28:48.680><c> of</c><00:28:48.860><c> even</c><00:28:49.580><c> numbers</c><00:28:50.030><c> so</c><00:28:50.300><c> we</c><00:28:50.900><c> were</c><00:28:51.020><c> asked</c>

00:28:51.310 --> 00:28:51.320 align:start position:0%
double of even numbers so we were asked
 

00:28:51.320 --> 00:28:52.510 align:start position:0%
double of even numbers so we were asked
to<00:28:51.410><c> find</c><00:28:51.680><c> the</c><00:28:51.800><c> total</c><00:28:52.100><c> of</c>

00:28:52.510 --> 00:28:52.520 align:start position:0%
to find the total of
 

00:28:52.520 --> 00:28:55.120 align:start position:0%
to find the total of
even<00:28:53.120><c> numbers</c><00:28:53.240><c> you</c><00:28:54.200><c> normally</c><00:28:54.650><c> do</c><00:28:54.860><c> to</c><00:28:54.980><c> create</c>

00:28:55.120 --> 00:28:55.130 align:start position:0%
even numbers you normally do to create
 

00:28:55.130 --> 00:28:57.730 align:start position:0%
even numbers you normally do to create
this<00:28:55.490><c> in</c><00:28:55.670><c> the</c><00:28:55.790><c> imperative</c><00:28:56.600><c> style</c><00:28:56.840><c> well</c><00:28:57.470><c> first</c>

00:28:57.730 --> 00:28:57.740 align:start position:0%
this in the imperative style well first
 

00:28:57.740 --> 00:29:00.400 align:start position:0%
this in the imperative style well first
of<00:28:57.920><c> all</c><00:28:58.070><c> you</c><00:28:58.309><c> would</c><00:28:58.460><c> say</c><00:28:58.730><c> result</c><00:28:59.600><c> is</c><00:28:59.840><c> equal</c><00:29:00.230><c> to</c>

00:29:00.400 --> 00:29:00.410 align:start position:0%
of all you would say result is equal to
 

00:29:00.410 --> 00:29:02.410 align:start position:0%
of all you would say result is equal to
zero<00:29:00.860><c> and</c><00:29:01.400><c> when</c><00:29:01.640><c> you</c><00:29:01.730><c> are</c><00:29:01.820><c> done</c><00:29:01.940><c> you</c><00:29:02.150><c> want</c><00:29:02.360><c> to</c>

00:29:02.410 --> 00:29:02.420 align:start position:0%
zero and when you are done you want to
 

00:29:02.420 --> 00:29:04.510 align:start position:0%
zero and when you are done you want to
print<00:29:02.630><c> out</c><00:29:02.720><c> the</c><00:29:02.960><c> result</c><00:29:03.350><c> but</c><00:29:03.860><c> then</c><00:29:04.010><c> you</c><00:29:04.250><c> say</c>

00:29:04.510 --> 00:29:04.520 align:start position:0%
print out the result but then you say
 

00:29:04.520 --> 00:29:07.450 align:start position:0%
print out the result but then you say
over<00:29:04.820><c> here</c><00:29:05.240><c> for</c><00:29:05.840><c> int</c><00:29:06.200><c> element</c><00:29:06.950><c> coming</c><00:29:07.160><c> from</c>

00:29:07.450 --> 00:29:07.460 align:start position:0%
over here for int element coming from
 

00:29:07.460 --> 00:29:10.960 align:start position:0%
over here for int element coming from
numbers<00:29:08.030><c> and</c><00:29:08.510><c> then</c><00:29:08.990><c> you</c><00:29:09.140><c> say</c><00:29:09.410><c> if</c><00:29:09.679><c> element</c><00:29:10.610><c> here</c>

00:29:10.960 --> 00:29:10.970 align:start position:0%
numbers and then you say if element here
 

00:29:10.970 --> 00:29:14.350 align:start position:0%
numbers and then you say if element here
mark<00:29:11.450><c> 2</c><00:29:11.750><c> is</c><00:29:11.990><c> equal</c><00:29:12.410><c> to</c><00:29:12.590><c> 0</c><00:29:13.070><c> then</c><00:29:13.850><c> of</c><00:29:14.090><c> course</c>

00:29:14.350 --> 00:29:14.360 align:start position:0%
mark 2 is equal to 0 then of course
 

00:29:14.360 --> 00:29:16.299 align:start position:0%
mark 2 is equal to 0 then of course
you're<00:29:14.510><c> going</c><00:29:14.630><c> to</c><00:29:14.750><c> say</c><00:29:14.929><c> the</c><00:29:15.380><c> result</c><00:29:15.740><c> is</c><00:29:15.920><c> equal</c>

00:29:16.299 --> 00:29:16.309 align:start position:0%
you're going to say the result is equal
 

00:29:16.309 --> 00:29:19.210 align:start position:0%
you're going to say the result is equal
to<00:29:16.580><c> e</c><00:29:16.850><c> times</c><00:29:17.270><c> 2</c><00:29:17.809><c> but</c><00:29:18.500><c> then</c><00:29:18.650><c> you</c><00:29:18.770><c> have</c><00:29:18.920><c> to</c><00:29:18.950><c> put</c><00:29:19.190><c> a</c>

00:29:19.210 --> 00:29:19.220 align:start position:0%
to e times 2 but then you have to put a
 

00:29:19.220 --> 00:29:21.040 align:start position:0%
to e times 2 but then you have to put a
break<00:29:19.460><c> out</c><00:29:19.790><c> of</c><00:29:20.059><c> it</c><00:29:20.210><c> to</c><00:29:20.330><c> break</c><00:29:20.510><c> out</c><00:29:20.720><c> of</c><00:29:20.780><c> this</c>

00:29:21.040 --> 00:29:21.050 align:start position:0%
break out of it to break out of this
 

00:29:21.050 --> 00:29:24.250 align:start position:0%
break out of it to break out of this
loop<00:29:21.110><c> well</c><00:29:21.980><c> in</c><00:29:22.280><c> this</c><00:29:22.490><c> case</c><00:29:22.700><c> of</c><00:29:22.940><c> course</c><00:29:23.260><c> well</c>

00:29:24.250 --> 00:29:24.260 align:start position:0%
loop well in this case of course well
 

00:29:24.260 --> 00:29:25.810 align:start position:0%
loop well in this case of course well
actually<00:29:24.530><c> in</c><00:29:24.950><c> this</c><00:29:25.070><c> case</c><00:29:25.250><c> we</c><00:29:25.400><c> want</c><00:29:25.580><c> to</c><00:29:25.640><c> find</c>

00:29:25.810 --> 00:29:25.820 align:start position:0%
actually in this case we want to find
 

00:29:25.820 --> 00:29:27.549 align:start position:0%
actually in this case we want to find
the<00:29:25.970><c> total</c><00:29:26.179><c> of</c><00:29:26.360><c> all</c><00:29:26.540><c> the</c><00:29:26.720><c> numbers</c><00:29:26.750><c> so</c><00:29:27.140><c> no</c><00:29:27.320><c> break</c>

00:29:27.549 --> 00:29:27.559 align:start position:0%
the total of all the numbers so no break
 

00:29:27.559 --> 00:29:29.080 align:start position:0%
the total of all the numbers so no break
here<00:29:27.590><c> so</c><00:29:28.280><c> we</c><00:29:28.370><c> got</c><00:29:28.490><c> to</c><00:29:28.580><c> make</c><00:29:28.670><c> all</c><00:29:28.910><c> these</c>

00:29:29.080 --> 00:29:29.090 align:start position:0%
here so we got to make all these
 

00:29:29.090 --> 00:29:31.000 align:start position:0%
here so we got to make all these
decisions<00:29:29.360><c> and</c><00:29:29.750><c> then</c><00:29:29.870><c> we</c><00:29:29.990><c> have</c><00:29:30.110><c> to</c><00:29:30.200><c> say</c><00:29:30.410><c> plus</c>

00:29:31.000 --> 00:29:31.010 align:start position:0%
decisions and then we have to say plus
 

00:29:31.010 --> 00:29:33.580 align:start position:0%
decisions and then we have to say plus
equal<00:29:31.550><c> to</c><00:29:31.760><c> so</c><00:29:32.240><c> you</c><00:29:32.330><c> can</c><00:29:32.450><c> run</c><00:29:32.660><c> through</c><00:29:32.929><c> it</c><00:29:33.080><c> well</c>

00:29:33.580 --> 00:29:33.590 align:start position:0%
equal to so you can run through it well
 

00:29:33.590 --> 00:29:35.620 align:start position:0%
equal to so you can run through it well
in<00:29:33.830><c> this</c><00:29:34.010><c> case</c><00:29:34.160><c> goes</c><00:29:34.429><c> total</c><00:29:34.820><c> of</c><00:29:34.910><c> double</c><00:29:35.210><c> of</c><00:29:35.330><c> all</c>

00:29:35.620 --> 00:29:35.630 align:start position:0%
in this case goes total of double of all
 

00:29:35.630 --> 00:29:38.110 align:start position:0%
in this case goes total of double of all
the<00:29:35.929><c> even</c><00:29:36.320><c> numbers</c><00:29:36.350><c> in</c><00:29:36.860><c> the</c><00:29:36.950><c> collection</c><00:29:37.550><c> but</c>

00:29:38.110 --> 00:29:38.120 align:start position:0%
the even numbers in the collection but
 

00:29:38.120 --> 00:29:39.940 align:start position:0%
the even numbers in the collection but
we<00:29:38.270><c> have</c><00:29:38.390><c> written</c><00:29:38.570><c> code</c><00:29:38.929><c> like</c><00:29:38.990><c> this</c><00:29:39.350><c> for</c><00:29:39.679><c> ever</c>

00:29:39.940 --> 00:29:39.950 align:start position:0%
we have written code like this for ever
 

00:29:39.950 --> 00:29:42.400 align:start position:0%
we have written code like this for ever
but<00:29:40.820><c> if</c><00:29:40.940><c> you</c><00:29:40.970><c> look</c><00:29:41.240><c> at</c><00:29:41.390><c> this</c><00:29:41.600><c> code</c><00:29:41.870><c> anyone</c>

00:29:42.400 --> 00:29:42.410 align:start position:0%
but if you look at this code anyone
 

00:29:42.410 --> 00:29:43.990 align:start position:0%
but if you look at this code anyone
heroes<00:29:42.650><c> with</c><00:29:42.770><c> print</c><00:29:42.950><c> code</c><00:29:43.130><c> like</c><00:29:43.340><c> this</c><00:29:43.490><c> before</c>

00:29:43.990 --> 00:29:44.000 align:start position:0%
heroes with print code like this before
 

00:29:44.000 --> 00:29:46.419 align:start position:0%
heroes with print code like this before
well<00:29:44.540><c> of</c><00:29:44.720><c> course</c><00:29:44.750><c> every</c><00:29:45.350><c> one</c><00:29:45.650><c> of</c><00:29:45.679><c> us</c><00:29:45.950><c> but</c><00:29:46.340><c> the</c>

00:29:46.419 --> 00:29:46.429 align:start position:0%
well of course every one of us but the
 

00:29:46.429 --> 00:29:49.299 align:start position:0%
well of course every one of us but the
question<00:29:46.820><c> is</c><00:29:47.000><c> how</c><00:29:47.540><c> do</c><00:29:47.600><c> you</c><00:29:47.809><c> feel</c><00:29:48.320><c> when</c><00:29:49.220><c> you</c>

00:29:49.299 --> 00:29:49.309 align:start position:0%
question is how do you feel when you
 

00:29:49.309 --> 00:29:52.390 align:start position:0%
question is how do you feel when you
write<00:29:49.520><c> code</c><00:29:49.730><c> like</c><00:29:50.030><c> this</c><00:29:50.240><c> dirty</c><00:29:51.110><c> right</c><00:29:51.679><c> really</c>

00:29:52.390 --> 00:29:52.400 align:start position:0%
write code like this dirty right really
 

00:29:52.400 --> 00:29:55.240 align:start position:0%
write code like this dirty right really
dirty<00:29:52.730><c> in</c><00:29:53.120><c> fact</c><00:29:53.600><c> after</c><00:29:53.960><c> day</c><00:29:54.290><c> long</c><00:29:54.590><c> work</c><00:29:54.920><c> after</c>

00:29:55.240 --> 00:29:55.250 align:start position:0%
dirty in fact after day long work after
 

00:29:55.250 --> 00:29:57.190 align:start position:0%
dirty in fact after day long work after
writing<00:29:55.429><c> this</c><00:29:55.640><c> code</c><00:29:55.850><c> you</c><00:29:56.059><c> go</c><00:29:56.210><c> home</c><00:29:56.480><c> and</c><00:29:56.780><c> the</c>

00:29:57.190 --> 00:29:57.200 align:start position:0%
writing this code you go home and the
 

00:29:57.200 --> 00:29:58.930 align:start position:0%
writing this code you go home and the
kids<00:29:57.440><c> coming</c><00:29:57.679><c> run</c><00:29:57.980><c> come</c><00:29:58.220><c> running</c><00:29:58.490><c> towards</c><00:29:58.610><c> you</c>

00:29:58.930 --> 00:29:58.940 align:start position:0%
kids coming run come running towards you
 

00:29:58.940 --> 00:30:00.130 align:start position:0%
kids coming run come running towards you
you<00:29:59.090><c> say</c><00:29:59.240><c> don't</c><00:29:59.480><c> touch</c><00:29:59.720><c> me</c>

00:30:00.130 --> 00:30:00.140 align:start position:0%
you say don't touch me
 

00:30:00.140 --> 00:30:02.169 align:start position:0%
you say don't touch me
I<00:30:00.170><c> gotta</c><00:30:00.530><c> go</c><00:30:00.650><c> shove</c><00:30:00.920><c> her</c><00:30:01.040><c> first</c><00:30:01.340><c> because</c><00:30:01.850><c> this</c>

00:30:02.169 --> 00:30:02.179 align:start position:0%
I gotta go shove her first because this
 

00:30:02.179 --> 00:30:03.910 align:start position:0%
I gotta go shove her first because this
is<00:30:02.330><c> very</c><00:30:02.540><c> low-level</c><00:30:02.900><c> coding</c><00:30:03.470><c> we</c><00:30:03.590><c> have</c><00:30:03.710><c> to</c><00:30:03.800><c> be</c>

00:30:03.910 --> 00:30:03.920 align:start position:0%
is very low-level coding we have to be
 

00:30:03.920 --> 00:30:06.850 align:start position:0%
is very low-level coding we have to be
doing<00:30:04.250><c> over</c><00:30:04.540><c> we</c><00:30:05.540><c> can</c><00:30:05.720><c> do</c><00:30:05.900><c> this</c><00:30:06.110><c> again</c><00:30:06.290><c> but</c>

00:30:06.850 --> 00:30:06.860 align:start position:0%
doing over we can do this again but
 

00:30:06.860 --> 00:30:08.980 align:start position:0%
doing over we can do this again but
before<00:30:07.010><c> we</c><00:30:07.370><c> do</c><00:30:07.550><c> this</c><00:30:07.580><c> let's</c><00:30:08.300><c> talk</c><00:30:08.510><c> about</c><00:30:08.630><c> two</c>

00:30:08.980 --> 00:30:08.990 align:start position:0%
before we do this let's talk about two
 

00:30:08.990 --> 00:30:11.049 align:start position:0%
before we do this let's talk about two
different<00:30:09.380><c> things</c><00:30:09.590><c> two</c><00:30:09.860><c> different</c><00:30:10.220><c> smells</c><00:30:10.850><c> of</c>

00:30:11.049 --> 00:30:11.059 align:start position:0%
different things two different smells of
 

00:30:11.059 --> 00:30:13.750 align:start position:0%
different things two different smells of
imperative<00:30:11.630><c> code</c><00:30:11.809><c> the</c><00:30:12.260><c> first</c><00:30:12.470><c> smell</c><00:30:12.920><c> is</c><00:30:13.220><c> we</c>

00:30:13.750 --> 00:30:13.760 align:start position:0%
imperative code the first smell is we
 

00:30:13.760 --> 00:30:16.510 align:start position:0%
imperative code the first smell is we
got<00:30:13.910><c> a</c><00:30:13.940><c> variable</c><00:30:14.450><c> we</c><00:30:14.750><c> defined</c><00:30:15.140><c> over</c><00:30:15.440><c> here</c><00:30:15.950><c> but</c>

00:30:16.510 --> 00:30:16.520 align:start position:0%
got a variable we defined over here but
 

00:30:16.520 --> 00:30:18.640 align:start position:0%
got a variable we defined over here but
we<00:30:16.730><c> can</c><00:30:16.970><c> we</c><00:30:17.300><c> are</c><00:30:17.330><c> mutating</c><00:30:18.050><c> that</c><00:30:18.200><c> variable</c>

00:30:18.640 --> 00:30:18.650 align:start position:0%
we can we are mutating that variable
 

00:30:18.650 --> 00:30:21.100 align:start position:0%
we can we are mutating that variable
over<00:30:19.100><c> and</c><00:30:19.309><c> over</c><00:30:19.670><c> and</c><00:30:19.850><c> over</c><00:30:20.000><c> that's</c><00:30:20.690><c> one</c><00:30:20.929><c> of</c><00:30:21.020><c> the</c>

00:30:21.100 --> 00:30:21.110 align:start position:0%
over and over and over that's one of the
 

00:30:21.110 --> 00:30:23.650 align:start position:0%
over and over and over that's one of the
smells<00:30:21.500><c> of</c><00:30:21.740><c> imperative</c><00:30:22.580><c> style</c><00:30:22.760><c> of</c><00:30:22.970><c> coding</c><00:30:23.360><c> is</c>

00:30:23.650 --> 00:30:23.660 align:start position:0%
smells of imperative style of coding is
 

00:30:23.660 --> 00:30:26.410 align:start position:0%
smells of imperative style of coding is
we<00:30:24.050><c> do</c><00:30:24.170><c> mutability</c><00:30:24.770><c> quite</c><00:30:25.130><c> often</c><00:30:25.400><c> the</c><00:30:26.000><c> second</c>

00:30:26.410 --> 00:30:26.420 align:start position:0%
we do mutability quite often the second
 

00:30:26.420 --> 00:30:27.790 align:start position:0%
we do mutability quite often the second
thing<00:30:26.630><c> is</c><00:30:26.809><c> you</c><00:30:27.050><c> have</c><00:30:27.080><c> to</c><00:30:27.290><c> spend</c><00:30:27.530><c> your</c><00:30:27.620><c> effort</c>

00:30:27.790 --> 00:30:27.800 align:start position:0%
thing is you have to spend your effort
 

00:30:27.800 --> 00:30:30.190 align:start position:0%
thing is you have to spend your effort
telling<00:30:28.580><c> not</c><00:30:29.120><c> only</c><00:30:29.330><c> what</c><00:30:29.510><c> to</c><00:30:29.660><c> do</c><00:30:29.809><c> but</c><00:30:30.050><c> also</c>

00:30:30.190 --> 00:30:30.200 align:start position:0%
telling not only what to do but also
 

00:30:30.200 --> 00:30:33.100 align:start position:0%
telling not only what to do but also
saying<00:30:30.650><c> how</c><00:30:31.309><c> to</c><00:30:31.340><c> actually</c><00:30:31.820><c> do</c><00:30:32.360><c> this</c><00:30:32.570><c> well</c><00:30:33.080><c> on</c>

00:30:33.100 --> 00:30:33.110 align:start position:0%
saying how to actually do this well on
 

00:30:33.110 --> 00:30:35.049 align:start position:0%
saying how to actually do this well on
the<00:30:33.350><c> other</c><00:30:33.530><c> hand</c><00:30:33.920><c> we</c><00:30:34.070><c> can</c><00:30:34.220><c> rewrite</c><00:30:34.700><c> this</c><00:30:35.000><c> code</c>

00:30:35.049 --> 00:30:35.059 align:start position:0%
the other hand we can rewrite this code
 

00:30:35.059 --> 00:30:37.660 align:start position:0%
the other hand we can rewrite this code
this<00:30:35.510><c> time</c><00:30:35.780><c> but</c><00:30:36.350><c> I'm</c><00:30:36.470><c> going</c><00:30:36.650><c> to</c><00:30:36.679><c> say</c><00:30:36.890><c> output</c>

00:30:37.660 --> 00:30:37.670 align:start position:0%
this time but I'm going to say output
 

00:30:37.670 --> 00:30:41.080 align:start position:0%
this time but I'm going to say output
will<00:30:38.150><c> start</c><00:30:38.510><c> with</c><00:30:38.809><c> numbers</c><00:30:39.470><c> over</c><00:30:40.100><c> here</c><00:30:40.130><c> dart</c>

00:30:41.080 --> 00:30:41.090 align:start position:0%
will start with numbers over here dart
 

00:30:41.090 --> 00:30:43.450 align:start position:0%
will start with numbers over here dart
stream<00:30:41.720><c> think</c><00:30:42.260><c> of</c><00:30:42.380><c> stream</c><00:30:42.650><c> as</c><00:30:42.800><c> an</c><00:30:42.950><c> internal</c>

00:30:43.450 --> 00:30:43.460 align:start position:0%
stream think of stream as an internal
 

00:30:43.460 --> 00:30:46.870 align:start position:0%
stream think of stream as an internal
iterator<00:30:43.910><c> and</c><00:30:44.179><c> then</c><00:30:44.750><c> we</c><00:30:44.929><c> can</c><00:30:45.140><c> say</c><00:30:45.520><c> filter</c><00:30:46.520><c> and</c>

00:30:46.870 --> 00:30:46.880 align:start position:0%
iterator and then we can say filter and
 

00:30:46.880 --> 00:30:48.700 align:start position:0%
iterator and then we can say filter and
I'm<00:30:47.300><c> going</c><00:30:47.480><c> to</c><00:30:47.510><c> say</c><00:30:47.660><c> given</c><00:30:47.900><c> an</c><00:30:48.050><c> element</c><00:30:48.470><c> e</c>

00:30:48.700 --> 00:30:48.710 align:start position:0%
I'm going to say given an element e
 

00:30:48.710 --> 00:30:52.570 align:start position:0%
I'm going to say given an element e
return<00:30:49.280><c> the</c><00:30:49.760><c> elements</c><00:30:50.360><c> only</c><00:30:50.780><c> that</c><00:30:50.990><c> are</c><00:30:51.580><c> even</c>

00:30:52.570 --> 00:30:52.580 align:start position:0%
return the elements only that are even
 

00:30:52.580 --> 00:30:55.060 align:start position:0%
return the elements only that are even
and<00:30:52.850><c> not</c><00:30:53.120><c> any</c><00:30:53.420><c> of</c><00:30:53.630><c> the</c><00:30:53.750><c> other</c><00:30:53.900><c> elements</c><00:30:54.020><c> so</c><00:30:54.860><c> in</c>

00:30:55.060 --> 00:30:55.070 align:start position:0%
and not any of the other elements so in
 

00:30:55.070 --> 00:30:56.799 align:start position:0%
and not any of the other elements so in
this<00:30:55.190><c> case</c><00:30:55.400><c> we</c><00:30:55.580><c> applied</c><00:30:55.880><c> a</c><00:30:55.910><c> filter</c><00:30:56.510><c> we</c><00:30:56.690><c> do</c><00:30:56.780><c> a</c>

00:30:56.799 --> 00:30:56.809 align:start position:0%
this case we applied a filter we do a
 

00:30:56.809 --> 00:30:59.590 align:start position:0%
this case we applied a filter we do a
map<00:30:57.200><c> given</c><00:30:57.559><c> an</c><00:30:57.740><c> element</c><00:30:58.190><c> element</c><00:30:58.550><c> times</c><00:30:59.150><c> two</c>

00:30:59.590 --> 00:30:59.600 align:start position:0%
map given an element element times two
 

00:30:59.600 --> 00:31:02.049 align:start position:0%
map given an element element times two
and<00:30:59.990><c> of</c><00:31:00.470><c> course</c><00:31:00.740><c> finally</c><00:31:01.130><c> I'm</c><00:31:01.520><c> going</c><00:31:01.790><c> to</c><00:31:01.850><c> say</c>

00:31:02.049 --> 00:31:02.059 align:start position:0%
and of course finally I'm going to say
 

00:31:02.059 --> 00:31:04.960 align:start position:0%
and of course finally I'm going to say
go<00:31:02.960><c> ahead</c><00:31:03.110><c> and</c><00:31:03.230><c> give</c><00:31:03.350><c> me</c><00:31:03.500><c> a</c><00:31:03.530><c> sum</c><00:31:04.010><c> operation</c><00:31:04.820><c> on</c>

00:31:04.960 --> 00:31:04.970 align:start position:0%
go ahead and give me a sum operation on
 

00:31:04.970 --> 00:31:05.590 align:start position:0%
go ahead and give me a sum operation on
the<00:31:05.240><c> L</c>

00:31:05.590 --> 00:31:05.600 align:start position:0%
the L
 

00:31:05.600 --> 00:31:08.200 align:start position:0%
the L
results<00:31:06.200><c> and</c><00:31:06.289><c> return</c><00:31:06.950><c> the</c><00:31:07.100><c> result</c><00:31:07.280><c> to</c><00:31:07.610><c> me</c><00:31:07.730><c> well</c>

00:31:08.200 --> 00:31:08.210 align:start position:0%
results and return the result to me well
 

00:31:08.210 --> 00:31:10.240 align:start position:0%
results and return the result to me well
if<00:31:08.299><c> you</c><00:31:08.419><c> look</c><00:31:08.600><c> at</c><00:31:08.720><c> this</c><00:31:08.870><c> code</c><00:31:09.110><c> both</c><00:31:09.890><c> of</c><00:31:10.100><c> those</c>

00:31:10.240 --> 00:31:10.250 align:start position:0%
if you look at this code both of those
 

00:31:10.250 --> 00:31:12.760 align:start position:0%
if you look at this code both of those
code<00:31:10.520><c> produce</c><00:31:10.850><c> exactly</c><00:31:11.390><c> the</c><00:31:11.480><c> same</c><00:31:11.600><c> result</c><00:31:12.080><c> but</c>

00:31:12.760 --> 00:31:12.770 align:start position:0%
code produce exactly the same result but
 

00:31:12.770 --> 00:31:14.260 align:start position:0%
code produce exactly the same result but
there<00:31:12.950><c> is</c><00:31:13.039><c> some</c><00:31:13.250><c> really</c><00:31:13.700><c> key</c><00:31:13.910><c> difference</c>

00:31:14.260 --> 00:31:14.270 align:start position:0%
there is some really key difference
 

00:31:14.270 --> 00:31:16.360 align:start position:0%
there is some really key difference
between<00:31:14.630><c> these</c><00:31:14.750><c> two</c><00:31:14.960><c> kinds</c><00:31:15.140><c> of</c><00:31:15.350><c> code</c><00:31:15.559><c> the</c><00:31:16.130><c> top</c>

00:31:16.360 --> 00:31:16.370 align:start position:0%
between these two kinds of code the top
 

00:31:16.370 --> 00:31:18.789 align:start position:0%
between these two kinds of code the top
code<00:31:16.669><c> is</c><00:31:16.850><c> of</c><00:31:16.940><c> course</c><00:31:17.179><c> imperative</c><00:31:18.140><c> in</c><00:31:18.350><c> nature</c>

00:31:18.789 --> 00:31:18.799 align:start position:0%
code is of course imperative in nature
 

00:31:18.799 --> 00:31:20.980 align:start position:0%
code is of course imperative in nature
we<00:31:19.309><c> tell</c><00:31:19.610><c> what</c><00:31:19.910><c> to</c><00:31:20.030><c> do</c><00:31:20.150><c> and</c><00:31:20.299><c> how</c><00:31:20.450><c> to</c><00:31:20.480><c> do</c><00:31:20.780><c> and</c><00:31:20.929><c> we</c>

00:31:20.980 --> 00:31:20.990 align:start position:0%
we tell what to do and how to do and we
 

00:31:20.990 --> 00:31:23.320 align:start position:0%
we tell what to do and how to do and we
also<00:31:21.140><c> have</c><00:31:21.410><c> mutability</c><00:31:22.130><c> in</c><00:31:22.400><c> the</c><00:31:22.520><c> code</c><00:31:22.700><c> if</c><00:31:23.240><c> you</c>

00:31:23.320 --> 00:31:23.330 align:start position:0%
also have mutability in the code if you
 

00:31:23.330 --> 00:31:25.000 align:start position:0%
also have mutability in the code if you
look<00:31:23.480><c> at</c><00:31:23.570><c> the</c><00:31:23.630><c> code</c><00:31:23.809><c> in</c><00:31:23.929><c> the</c><00:31:24.020><c> bottom</c><00:31:24.440><c> I'm</c><00:31:24.650><c> going</c>

00:31:25.000 --> 00:31:25.010 align:start position:0%
look at the code in the bottom I'm going
 

00:31:25.010 --> 00:31:26.260 align:start position:0%
look at the code in the bottom I'm going
to<00:31:25.070><c> say</c><00:31:25.190><c> the</c><00:31:25.280><c> code</c><00:31:25.490><c> in</c><00:31:25.610><c> the</c><00:31:25.700><c> bottom</c><00:31:25.970><c> is</c><00:31:26.059><c> very</c>

00:31:26.260 --> 00:31:26.270 align:start position:0%
to say the code in the bottom is very
 

00:31:26.270 --> 00:31:29.169 align:start position:0%
to say the code in the bottom is very
humane<00:31:26.840><c> no</c><00:31:27.679><c> variable</c><00:31:28.130><c> was</c><00:31:28.280><c> tortured</c><00:31:28.880><c> in</c><00:31:29.090><c> the</c>

00:31:29.169 --> 00:31:29.179 align:start position:0%
humane no variable was tortured in the
 

00:31:29.179 --> 00:31:30.730 align:start position:0%
humane no variable was tortured in the
making<00:31:29.419><c> of</c><00:31:29.539><c> the</c><00:31:29.660><c> result</c><00:31:30.020><c> so</c><00:31:30.470><c> we're</c><00:31:30.620><c> not</c>

00:31:30.730 --> 00:31:30.740 align:start position:0%
making of the result so we're not
 

00:31:30.740 --> 00:31:33.279 align:start position:0%
making of the result so we're not
mutating<00:31:31.520><c> any</c><00:31:31.669><c> variables</c><00:31:32.270><c> repeatedly</c><00:31:32.870><c> the</c>

00:31:33.279 --> 00:31:33.289 align:start position:0%
mutating any variables repeatedly the
 

00:31:33.289 --> 00:31:34.720 align:start position:0%
mutating any variables repeatedly the
second<00:31:33.679><c> thing</c><00:31:33.890><c> is</c><00:31:34.039><c> if</c><00:31:34.190><c> you</c><00:31:34.250><c> look</c><00:31:34.400><c> at</c><00:31:34.490><c> the</c><00:31:34.549><c> code</c>

00:31:34.720 --> 00:31:34.730 align:start position:0%
second thing is if you look at the code
 

00:31:34.730 --> 00:31:37.779 align:start position:0%
second thing is if you look at the code
in<00:31:34.880><c> the</c><00:31:35.000><c> top</c><00:31:35.240><c> you</c><00:31:35.870><c> have</c><00:31:36.020><c> to</c><00:31:36.169><c> say</c><00:31:36.710><c> every</c><00:31:37.370><c> single</c>

00:31:37.779 --> 00:31:37.789 align:start position:0%
in the top you have to say every single
 

00:31:37.789 --> 00:31:40.029 align:start position:0%
in the top you have to say every single
detail<00:31:38.240><c> you</c><00:31:38.720><c> had</c><00:31:38.900><c> to</c><00:31:39.020><c> say</c><00:31:39.169><c> get</c><00:31:39.380><c> one</c><00:31:39.620><c> element</c><00:31:39.950><c> at</c>

00:31:40.029 --> 00:31:40.039 align:start position:0%
detail you had to say get one element at
 

00:31:40.039 --> 00:31:41.620 align:start position:0%
detail you had to say get one element at
a<00:31:40.070><c> time</c><00:31:40.100><c> please</c><00:31:40.460><c> check</c><00:31:41.150><c> is</c><00:31:41.299><c> that</c><00:31:41.330><c> element</c>

00:31:41.620 --> 00:31:41.630 align:start position:0%
a time please check is that element
 

00:31:41.630 --> 00:31:43.810 align:start position:0%
a time please check is that element
either<00:31:42.049><c> even</c><00:31:42.530><c> go</c><00:31:43.010><c> ahead</c><00:31:43.070><c> and</c><00:31:43.280><c> double</c><00:31:43.640><c> that</c>

00:31:43.810 --> 00:31:43.820 align:start position:0%
either even go ahead and double that
 

00:31:43.820 --> 00:31:45.640 align:start position:0%
either even go ahead and double that
element<00:31:44.210><c> right</c><00:31:44.390><c> here</c><00:31:44.419><c> then</c><00:31:45.169><c> fetch</c><00:31:45.470><c> the</c>

00:31:45.640 --> 00:31:45.650 align:start position:0%
element right here then fetch the
 

00:31:45.650 --> 00:31:47.620 align:start position:0%
element right here then fetch the
current<00:31:45.950><c> value</c><00:31:46.190><c> of</c><00:31:46.250><c> result</c><00:31:46.669><c> then</c><00:31:47.090><c> add</c><00:31:47.360><c> to</c><00:31:47.600><c> the</c>

00:31:47.620 --> 00:31:47.630 align:start position:0%
current value of result then add to the
 

00:31:47.630 --> 00:31:49.510 align:start position:0%
current value of result then add to the
value<00:31:47.780><c> of</c><00:31:47.990><c> result</c><00:31:48.289><c> and</c><00:31:48.500><c> then</c><00:31:48.830><c> store</c><00:31:49.190><c> it</c><00:31:49.340><c> into</c>

00:31:49.510 --> 00:31:49.520 align:start position:0%
value of result and then store it into
 

00:31:49.520 --> 00:31:51.909 align:start position:0%
value of result and then store it into
the<00:31:49.700><c> result</c><00:31:50.059><c> you</c><00:31:50.539><c> have</c><00:31:50.720><c> to</c><00:31:50.750><c> say</c><00:31:51.020><c> every</c><00:31:51.530><c> single</c>

00:31:51.909 --> 00:31:51.919 align:start position:0%
the result you have to say every single
 

00:31:51.919 --> 00:31:54.220 align:start position:0%
the result you have to say every single
thing<00:31:52.100><c> this</c><00:31:52.730><c> code</c><00:31:53.090><c> is</c><00:31:53.299><c> like</c><00:31:53.659><c> talking</c><00:31:53.990><c> to</c><00:31:54.110><c> a</c>

00:31:54.220 --> 00:31:54.230 align:start position:0%
thing this code is like talking to a
 

00:31:54.230 --> 00:31:56.380 align:start position:0%
thing this code is like talking to a
toddler<00:31:54.650><c> well</c><00:31:55.460><c> the</c><00:31:55.549><c> first</c><00:31:55.850><c> time</c><00:31:56.059><c> you</c><00:31:56.150><c> talk</c><00:31:56.360><c> to</c>

00:31:56.380 --> 00:31:56.390 align:start position:0%
toddler well the first time you talk to
 

00:31:56.390 --> 00:31:58.659 align:start position:0%
toddler well the first time you talk to
a<00:31:56.539><c> toddler</c><00:31:56.840><c> is</c><00:31:57.200><c> very</c><00:31:57.409><c> exciting</c><00:31:58.159><c> you're</c><00:31:58.549><c> going</c>

00:31:58.659 --> 00:31:58.669 align:start position:0%
a toddler is very exciting you're going
 

00:31:58.669 --> 00:32:00.250 align:start position:0%
a toddler is very exciting you're going
to<00:31:58.730><c> say</c><00:31:58.850><c> wow</c><00:31:59.030><c> this</c><00:31:59.240><c> was</c><00:31:59.390><c> awesome</c><00:31:59.630><c> talking</c><00:32:00.200><c> to</c>

00:32:00.250 --> 00:32:00.260 align:start position:0%
to say wow this was awesome talking to
 

00:32:00.260 --> 00:32:01.750 align:start position:0%
to say wow this was awesome talking to
the<00:32:00.380><c> toddler</c><00:32:00.590><c> well</c><00:32:01.159><c> the</c><00:32:01.280><c> next</c><00:32:01.429><c> thing</c><00:32:01.549><c> you</c>

00:32:01.750 --> 00:32:01.760 align:start position:0%
the toddler well the next thing you
 

00:32:01.760 --> 00:32:03.669 align:start position:0%
the toddler well the next thing you
realize<00:32:01.970><c> you</c><00:32:02.390><c> got</c><00:32:02.510><c> to</c><00:32:02.600><c> say</c><00:32:02.720><c> the</c><00:32:02.840><c> same</c><00:32:03.140><c> thing</c>

00:32:03.669 --> 00:32:03.679 align:start position:0%
realize you got to say the same thing
 

00:32:03.679 --> 00:32:05.830 align:start position:0%
realize you got to say the same thing
over<00:32:03.890><c> and</c><00:32:04.159><c> over</c><00:32:04.250><c> you're</c><00:32:05.030><c> going</c><00:32:05.150><c> to</c><00:32:05.270><c> say</c><00:32:05.419><c> well</c>

00:32:05.830 --> 00:32:05.840 align:start position:0%
over and over you're going to say well
 

00:32:05.840 --> 00:32:08.169 align:start position:0%
over and over you're going to say well
walk<00:32:06.049><c> slowly</c><00:32:06.350><c> hold</c><00:32:06.890><c> it</c><00:32:06.980><c> with</c><00:32:07.100><c> both</c><00:32:07.130><c> hands</c><00:32:07.549><c> look</c>

00:32:08.169 --> 00:32:08.179 align:start position:0%
walk slowly hold it with both hands look
 

00:32:08.179 --> 00:32:10.180 align:start position:0%
walk slowly hold it with both hands look
where<00:32:08.330><c> you're</c><00:32:08.539><c> going</c><00:32:08.870><c> don't</c><00:32:09.260><c> step</c><00:32:09.650><c> on</c><00:32:09.770><c> the</c><00:32:09.919><c> cat</c>

00:32:10.180 --> 00:32:10.190 align:start position:0%
where you're going don't step on the cat
 

00:32:10.190 --> 00:32:12.070 align:start position:0%
where you're going don't step on the cat
on<00:32:10.460><c> the</c><00:32:10.490><c> way</c><00:32:10.730><c> you're</c><00:32:11.330><c> going</c><00:32:11.480><c> to</c><00:32:11.539><c> be</c><00:32:11.630><c> having</c><00:32:11.840><c> to</c>

00:32:12.070 --> 00:32:12.080 align:start position:0%
on the way you're going to be having to
 

00:32:12.080 --> 00:32:14.380 align:start position:0%
on the way you're going to be having to
say<00:32:12.260><c> this</c><00:32:12.409><c> and</c><00:32:12.590><c> then</c><00:32:12.770><c> you</c><00:32:12.919><c> realize</c><00:32:13.370><c> this</c><00:32:14.150><c> is</c>

00:32:14.380 --> 00:32:14.390 align:start position:0%
say this and then you realize this is
 

00:32:14.390 --> 00:32:17.440 align:start position:0%
say this and then you realize this is
going<00:32:14.630><c> to</c><00:32:14.690><c> go</c><00:32:15.320><c> on</c><00:32:15.530><c> for</c><00:32:15.799><c> the</c><00:32:15.830><c> next</c><00:32:15.919><c> 18</c><00:32:16.700><c> years</c>

00:32:17.440 --> 00:32:17.450 align:start position:0%
going to go on for the next 18 years
 

00:32:17.450 --> 00:32:19.630 align:start position:0%
going to go on for the next 18 years
that's<00:32:17.870><c> called</c><00:32:18.049><c> parenting</c><00:32:18.679><c> isn't</c><00:32:19.070><c> it</c><00:32:19.220><c> well</c>

00:32:19.630 --> 00:32:19.640 align:start position:0%
that's called parenting isn't it well
 

00:32:19.640 --> 00:32:21.159 align:start position:0%
that's called parenting isn't it well
that's<00:32:19.880><c> how</c><00:32:20.000><c> it</c><00:32:20.150><c> feels</c><00:32:20.390><c> when</c><00:32:20.809><c> you</c><00:32:20.900><c> start</c>

00:32:21.159 --> 00:32:21.169 align:start position:0%
that's how it feels when you start
 

00:32:21.169 --> 00:32:23.409 align:start position:0%
that's how it feels when you start
writing<00:32:21.470><c> code</c><00:32:21.650><c> with</c><00:32:22.250><c> imperative</c><00:32:22.820><c> style</c><00:32:23.120><c> on</c>

00:32:23.409 --> 00:32:23.419 align:start position:0%
writing code with imperative style on
 

00:32:23.419 --> 00:32:25.720 align:start position:0%
writing code with imperative style on
the<00:32:23.870><c> other</c><00:32:24.020><c> hand</c><00:32:24.440><c> the</c><00:32:24.710><c> functional</c><00:32:25.400><c> style</c>

00:32:25.720 --> 00:32:25.730 align:start position:0%
the other hand the functional style
 

00:32:25.730 --> 00:32:27.730 align:start position:0%
the other hand the functional style
feels<00:32:26.630><c> like</c><00:32:27.020><c> you're</c><00:32:27.200><c> talking</c><00:32:27.500><c> to</c><00:32:27.559><c> and</c>

00:32:27.730 --> 00:32:27.740 align:start position:0%
feels like you're talking to and
 

00:32:27.740 --> 00:32:29.830 align:start position:0%
feels like you're talking to and
responsible<00:32:28.309><c> adult</c><00:32:28.760><c> that</c><00:32:29.390><c> is</c><00:32:29.510><c> one</c><00:32:29.659><c> of</c><00:32:29.750><c> the</c>

00:32:29.830 --> 00:32:29.840 align:start position:0%
responsible adult that is one of the
 

00:32:29.840 --> 00:32:31.720 align:start position:0%
responsible adult that is one of the
biggest<00:32:30.110><c> benefits</c><00:32:30.320><c> you</c><00:32:30.710><c> get</c><00:32:30.860><c> out</c><00:32:31.070><c> of</c><00:32:31.250><c> this</c><00:32:31.460><c> is</c>

00:32:31.720 --> 00:32:31.730 align:start position:0%
biggest benefits you get out of this is
 

00:32:31.730 --> 00:32:34.600 align:start position:0%
biggest benefits you get out of this is
a<00:32:32.000><c> very</c><00:32:32.480><c> nice</c><00:32:32.780><c> way</c><00:32:32.990><c> to</c><00:32:33.020><c> transform</c><00:32:33.799><c> so</c><00:32:34.250><c> given</c><00:32:34.549><c> a</c>

00:32:34.600 --> 00:32:34.610 align:start position:0%
a very nice way to transform so given a
 

00:32:34.610 --> 00:32:36.520 align:start position:0%
a very nice way to transform so given a
collection<00:32:35.179><c> of</c><00:32:35.240><c> numbers</c><00:32:35.450><c> get</c><00:32:36.289><c> me</c><00:32:36.440><c> the</c>

00:32:36.520 --> 00:32:36.530 align:start position:0%
collection of numbers get me the
 

00:32:36.530 --> 00:32:38.409 align:start position:0%
collection of numbers get me the
collection<00:32:37.039><c> which</c><00:32:37.250><c> is</c><00:32:37.460><c> only</c><00:32:37.669><c> even</c><00:32:38.059><c> numbers</c>

00:32:38.409 --> 00:32:38.419 align:start position:0%
collection which is only even numbers
 

00:32:38.419 --> 00:32:42.070 align:start position:0%
collection which is only even numbers
double<00:32:39.320><c> the</c><00:32:39.440><c> values</c><00:32:39.950><c> and</c><00:32:40.220><c> total</c><00:32:40.820><c> so</c><00:32:41.390><c> the</c><00:32:41.510><c> code</c>

00:32:42.070 --> 00:32:42.080 align:start position:0%
double the values and total so the code
 

00:32:42.080 --> 00:32:43.960 align:start position:0%
double the values and total so the code
begins<00:32:42.440><c> to</c><00:32:42.559><c> read</c><00:32:42.830><c> like</c><00:32:43.070><c> a</c><00:32:43.100><c> problem</c><00:32:43.520><c> statement</c>

00:32:43.960 --> 00:32:43.970 align:start position:0%
begins to read like a problem statement
 

00:32:43.970 --> 00:32:46.899 align:start position:0%
begins to read like a problem statement
it<00:32:44.510><c> removes</c><00:32:45.140><c> the</c><00:32:45.470><c> accidental</c><00:32:46.159><c> complexity</c>

00:32:46.899 --> 00:32:46.909 align:start position:0%
it removes the accidental complexity
 

00:32:46.909 --> 00:32:49.690 align:start position:0%
it removes the accidental complexity
that<00:32:47.450><c> usually</c><00:32:47.990><c> is</c><00:32:48.110><c> inherent</c><00:32:48.650><c> in</c><00:32:48.770><c> code</c><00:32:49.070><c> that's</c>

00:32:49.690 --> 00:32:49.700 align:start position:0%
that usually is inherent in code that's
 

00:32:49.700 --> 00:32:51.520 align:start position:0%
that usually is inherent in code that's
one<00:32:49.909><c> of</c><00:32:49.970><c> the</c><00:32:50.059><c> biggest</c><00:32:50.330><c> benefits</c><00:32:50.450><c> you</c><00:32:50.870><c> get</c><00:32:51.020><c> so</c>

00:32:51.520 --> 00:32:51.530 align:start position:0%
one of the biggest benefits you get so
 

00:32:51.530 --> 00:32:53.169 align:start position:0%
one of the biggest benefits you get so
what<00:32:51.740><c> are</c><00:32:51.830><c> some</c><00:32:51.860><c> of</c><00:32:52.010><c> the</c><00:32:52.159><c> differences</c><00:32:52.549><c> in</c><00:32:52.880><c> the</c>

00:32:53.169 --> 00:32:53.179 align:start position:0%
what are some of the differences in the
 

00:32:53.179 --> 00:32:56.080 align:start position:0%
what are some of the differences in the
imperative<00:32:53.570><c> style</c><00:32:54.110><c> you</c><00:32:54.830><c> focus</c><00:32:55.220><c> on</c><00:32:55.340><c> how</c><00:32:55.640><c> to</c><00:32:55.669><c> do</c>

00:32:56.080 --> 00:32:56.090 align:start position:0%
imperative style you focus on how to do
 

00:32:56.090 --> 00:32:58.060 align:start position:0%
imperative style you focus on how to do
things<00:32:56.390><c> whereas</c><00:32:57.230><c> in</c><00:32:57.350><c> a</c><00:32:57.440><c> decorative</c><00:32:57.620><c> and</c>

00:32:58.060 --> 00:32:58.070 align:start position:0%
things whereas in a decorative and
 

00:32:58.070 --> 00:33:00.520 align:start position:0%
things whereas in a decorative and
functional<00:32:58.280><c> style</c><00:32:58.789><c> you</c><00:32:58.909><c> focus</c><00:32:59.270><c> on</c><00:32:59.419><c> what</c><00:33:00.169><c> to</c><00:33:00.380><c> do</c>

00:33:00.520 --> 00:33:00.530 align:start position:0%
functional style you focus on what to do
 

00:33:00.530 --> 00:33:03.100 align:start position:0%
functional style you focus on what to do
mostly<00:33:01.100><c> you</c><00:33:01.610><c> encourage</c><00:33:02.150><c> mutability</c><00:33:02.809><c> in</c><00:33:03.020><c> a</c>

00:33:03.100 --> 00:33:03.110 align:start position:0%
mostly you encourage mutability in a
 

00:33:03.110 --> 00:33:05.830 align:start position:0%
mostly you encourage mutability in a
imperative<00:33:03.559><c> style</c><00:33:03.830><c> you</c><00:33:04.460><c> transform</c><00:33:05.270><c> data</c><00:33:05.570><c> in</c>

00:33:05.830 --> 00:33:05.840 align:start position:0%
imperative style you transform data in
 

00:33:05.840 --> 00:33:08.200 align:start position:0%
imperative style you transform data in
functional<00:33:06.440><c> and</c><00:33:06.590><c> decorative</c><00:33:06.740><c> you</c><00:33:07.549><c> often</c><00:33:07.880><c> deal</c>

00:33:08.200 --> 00:33:08.210 align:start position:0%
functional and decorative you often deal
 

00:33:08.210 --> 00:33:09.909 align:start position:0%
functional and decorative you often deal
with<00:33:08.240><c> side-effects</c><00:33:09.140><c> when</c><00:33:09.289><c> it</c><00:33:09.380><c> comes</c><00:33:09.650><c> to</c>

00:33:09.909 --> 00:33:09.919 align:start position:0%
with side-effects when it comes to
 

00:33:09.919 --> 00:33:12.039 align:start position:0%
with side-effects when it comes to
imperative<00:33:10.520><c> style</c><00:33:10.820><c> you</c><00:33:11.510><c> write</c><00:33:11.750><c> pure</c>

00:33:12.039 --> 00:33:12.049 align:start position:0%
imperative style you write pure
 

00:33:12.049 --> 00:33:14.770 align:start position:0%
imperative style you write pure
functions<00:33:12.650><c> when</c><00:33:12.830><c> it</c><00:33:12.950><c> comes</c><00:33:13.159><c> to</c><00:33:13.429><c> a</c><00:33:13.780><c> decorative</c>

00:33:14.770 --> 00:33:14.780 align:start position:0%
functions when it comes to a decorative
 

00:33:14.780 --> 00:33:16.690 align:start position:0%
functions when it comes to a decorative
and<00:33:15.110><c> functional</c><00:33:15.320><c> notice</c><00:33:16.190><c> each</c><00:33:16.370><c> of</c><00:33:16.549><c> these</c>

00:33:16.690 --> 00:33:16.700 align:start position:0%
and functional notice each of these
 

00:33:16.700 --> 00:33:18.970 align:start position:0%
and functional notice each of these
functions<00:33:16.909><c> are</c><00:33:17.270><c> pure</c><00:33:17.630><c> they</c><00:33:18.230><c> don't</c><00:33:18.440><c> change</c><00:33:18.770><c> the</c>

00:33:18.970 --> 00:33:18.980 align:start position:0%
functions are pure they don't change the
 

00:33:18.980 --> 00:33:19.330 align:start position:0%
functions are pure they don't change the
word

00:33:19.330 --> 00:33:19.340 align:start position:0%
word
 

00:33:19.340 --> 00:33:21.190 align:start position:0%
word
around<00:33:19.610><c> them</c><00:33:19.910><c> they</c><00:33:20.450><c> are</c><00:33:20.480><c> not</c><00:33:20.660><c> dependent</c><00:33:20.840><c> on</c>

00:33:21.190 --> 00:33:21.200 align:start position:0%
around them they are not dependent on
 

00:33:21.200 --> 00:33:22.900 align:start position:0%
around them they are not dependent on
anything<00:33:21.440><c> that's</c><00:33:21.620><c> mutable</c><00:33:22.220><c> that's</c><00:33:22.730><c> what</c>

00:33:22.900 --> 00:33:22.910 align:start position:0%
anything that's mutable that's what
 

00:33:22.910 --> 00:33:26.050 align:start position:0%
anything that's mutable that's what
these<00:33:23.060><c> do</c><00:33:23.420><c> along</c><00:33:23.900><c> the</c><00:33:24.110><c> way</c><00:33:24.140><c> and</c><00:33:24.650><c> of</c><00:33:25.190><c> course</c><00:33:25.460><c> you</c>

00:33:26.050 --> 00:33:26.060 align:start position:0%
these do along the way and of course you
 

00:33:26.060 --> 00:33:27.820 align:start position:0%
these do along the way and of course you
pass<00:33:26.330><c> objects</c><00:33:26.900><c> in</c><00:33:27.050><c> this</c><00:33:27.230><c> case</c><00:33:27.410><c> you</c><00:33:27.530><c> can</c><00:33:27.680><c> pass</c>

00:33:27.820 --> 00:33:27.830 align:start position:0%
pass objects in this case you can pass
 

00:33:27.830 --> 00:33:30.160 align:start position:0%
pass objects in this case you can pass
functions<00:33:28.280><c> as</c><00:33:28.490><c> well</c><00:33:28.760><c> and</c><00:33:29.090><c> then</c><00:33:29.540><c> finally</c><00:33:29.570><c> the</c>

00:33:30.160 --> 00:33:30.170 align:start position:0%
functions as well and then finally the
 

00:33:30.170 --> 00:33:31.660 align:start position:0%
functions as well and then finally the
code<00:33:30.380><c> is</c><00:33:30.560><c> very</c><00:33:30.710><c> hard</c><00:33:31.040><c> to</c><00:33:31.100><c> compose</c><00:33:31.520><c> an</c>

00:33:31.660 --> 00:33:31.670 align:start position:0%
code is very hard to compose an
 

00:33:31.670 --> 00:33:33.670 align:start position:0%
code is very hard to compose an
imperative<00:33:32.120><c> style</c><00:33:32.390><c> because</c><00:33:33.170><c> statements</c>

00:33:33.670 --> 00:33:33.680 align:start position:0%
imperative style because statements
 

00:33:33.680 --> 00:33:35.860 align:start position:0%
imperative style because statements
often<00:33:33.860><c> cost</c><00:33:34.310><c> mutability</c><00:33:34.970><c> and</c><00:33:35.450><c> you</c><00:33:35.540><c> got</c><00:33:35.690><c> to</c><00:33:35.780><c> go</c>

00:33:35.860 --> 00:33:35.870 align:start position:0%
often cost mutability and you got to go
 

00:33:35.870 --> 00:33:38.380 align:start position:0%
often cost mutability and you got to go
back<00:33:36.380><c> and</c><00:33:36.410><c> get</c><00:33:36.710><c> the</c><00:33:36.860><c> data</c><00:33:37.100><c> whereas</c><00:33:37.970><c> functions</c>

00:33:38.380 --> 00:33:38.390 align:start position:0%
back and get the data whereas functions
 

00:33:38.390 --> 00:33:40.330 align:start position:0%
back and get the data whereas functions
nicely<00:33:38.600><c> compose</c><00:33:39.230><c> and</c><00:33:39.500><c> you</c><00:33:39.560><c> can</c><00:33:39.710><c> transform</c>

00:33:40.330 --> 00:33:40.340 align:start position:0%
nicely compose and you can transform
 

00:33:40.340 --> 00:33:42.400 align:start position:0%
nicely compose and you can transform
data<00:33:40.640><c> from</c><00:33:40.970><c> one</c><00:33:41.450><c> to</c><00:33:41.630><c> the</c><00:33:41.660><c> next</c><00:33:41.750><c> to</c><00:33:41.990><c> the</c><00:33:42.080><c> next</c><00:33:42.200><c> to</c>

00:33:42.400 --> 00:33:42.410 align:start position:0%
data from one to the next to the next to
 

00:33:42.410 --> 00:33:44.050 align:start position:0%
data from one to the next to the next to
the<00:33:42.500><c> next</c><00:33:42.590><c> but</c><00:33:43.280><c> I</c><00:33:43.310><c> want</c><00:33:43.550><c> to</c><00:33:43.610><c> deviate</c><00:33:43.760><c> a</c><00:33:44.030><c> little</c>

00:33:44.050 --> 00:33:44.060 align:start position:0%
the next but I want to deviate a little
 

00:33:44.060 --> 00:33:46.120 align:start position:0%
the next but I want to deviate a little
bit<00:33:44.240><c> from</c><00:33:44.330><c> this</c><00:33:44.690><c> and</c><00:33:44.930><c> talk</c><00:33:45.110><c> back</c><00:33:45.470><c> into</c>

00:33:46.120 --> 00:33:46.130 align:start position:0%
bit from this and talk back into
 

00:33:46.130 --> 00:33:48.670 align:start position:0%
bit from this and talk back into
functional<00:33:46.940><c> style</c><00:33:47.240><c> about</c><00:33:47.930><c> lambdas</c><00:33:48.500><c> and</c>

00:33:48.670 --> 00:33:48.680 align:start position:0%
functional style about lambdas and
 

00:33:48.680 --> 00:33:51.130 align:start position:0%
functional style about lambdas and
closures<00:33:49.130><c> for</c><00:33:49.490><c> just</c><00:33:49.760><c> a</c><00:33:49.910><c> minute</c><00:33:50.090><c> so</c><00:33:50.690><c> going</c><00:33:50.870><c> back</c>

00:33:51.130 --> 00:33:51.140 align:start position:0%
closures for just a minute so going back
 

00:33:51.140 --> 00:33:54.580 align:start position:0%
closures for just a minute so going back
to<00:33:51.200><c> this</c><00:33:51.530><c> example</c><00:33:51.980><c> let's</c><00:33:52.880><c> take</c><00:33:53.150><c> values</c><00:33:53.840><c> 1</c><00:33:53.870><c> 2</c><00:33:54.170><c> 3</c>

00:33:54.580 --> 00:33:54.590 align:start position:0%
to this example let's take values 1 2 3
 

00:33:54.590 --> 00:33:57.010 align:start position:0%
to this example let's take values 1 2 3
for<00:33:55.010><c> a</c><00:33:55.040><c> minute</c><00:33:55.490><c> and</c><00:33:55.610><c> in</c><00:33:56.030><c> this</c><00:33:56.180><c> case</c><00:33:56.480><c> what</c><00:33:56.900><c> I'm</c>

00:33:57.010 --> 00:33:57.020 align:start position:0%
for a minute and in this case what I'm
 

00:33:57.020 --> 00:33:59.980 align:start position:0%
for a minute and in this case what I'm
going<00:33:57.200><c> to</c><00:33:57.260><c> do</c><00:33:57.470><c> is</c><00:33:57.800><c> I'm</c><00:33:58.100><c> going</c><00:33:58.550><c> to</c><00:33:58.610><c> ask</c><00:33:58.790><c> for</c><00:33:59.360><c> the</c>

00:33:59.980 --> 00:33:59.990 align:start position:0%
going to do is I'm going to ask for the
 

00:33:59.990 --> 00:34:01.990 align:start position:0%
going to do is I'm going to ask for the
values<00:34:00.380><c> to</c><00:34:00.530><c> be</c><00:34:00.560><c> doubled</c><00:34:01.220><c> first</c><00:34:01.520><c> of</c><00:34:01.640><c> all</c><00:34:01.790><c> and</c>

00:34:01.990 --> 00:34:02.000 align:start position:0%
values to be doubled first of all and
 

00:34:02.000 --> 00:34:04.030 align:start position:0%
values to be doubled first of all and
print<00:34:02.420><c> it</c><00:34:02.540><c> so</c><00:34:02.990><c> in</c><00:34:03.260><c> this</c><00:34:03.410><c> case</c><00:34:03.650><c> I'm</c><00:34:03.860><c> going</c><00:34:03.980><c> to</c>

00:34:04.030 --> 00:34:04.040 align:start position:0%
print it so in this case I'm going to
 

00:34:04.040 --> 00:34:06.640 align:start position:0%
print it so in this case I'm going to
say<00:34:04.190><c> numbers</c><00:34:04.640><c> dart</c><00:34:05.060><c> stream</c><00:34:05.750><c> and</c><00:34:06.140><c> then</c><00:34:06.530><c> I'll</c>

00:34:06.640 --> 00:34:06.650 align:start position:0%
say numbers dart stream and then I'll
 

00:34:06.650 --> 00:34:09.310 align:start position:0%
say numbers dart stream and then I'll
say<00:34:06.860><c> map</c><00:34:07.190><c> given</c><00:34:07.610><c> an</c><00:34:07.730><c> element</c><00:34:08.270><c> element</c><00:34:08.720><c> times</c><00:34:08.930><c> 2</c>

00:34:09.310 --> 00:34:09.320 align:start position:0%
say map given an element element times 2
 

00:34:09.320 --> 00:34:11.500 align:start position:0%
say map given an element element times 2
and<00:34:09.680><c> then</c><00:34:10.070><c> for</c><00:34:10.370><c> each</c><00:34:10.580><c> I'm</c><00:34:11.090><c> going</c><00:34:11.300><c> to</c><00:34:11.360><c> say</c>

00:34:11.500 --> 00:34:11.510 align:start position:0%
and then for each I'm going to say
 

00:34:11.510 --> 00:34:14.200 align:start position:0%
and then for each I'm going to say
system<00:34:11.900><c> dot</c><00:34:11.960><c> out</c><00:34:12.320><c> and</c><00:34:12.830><c> print</c><00:34:13.520><c> illan</c><00:34:13.760><c> while</c>

00:34:14.200 --> 00:34:14.210 align:start position:0%
system dot out and print illan while
 

00:34:14.210 --> 00:34:16.690 align:start position:0%
system dot out and print illan while
looking<00:34:14.600><c> at</c><00:34:14.720><c> this</c><00:34:14.870><c> code</c><00:34:15.080><c> for</c><00:34:15.350><c> a</c><00:34:15.380><c> second</c><00:34:16.010><c> look</c>

00:34:16.690 --> 00:34:16.700 align:start position:0%
looking at this code for a second look
 

00:34:16.700 --> 00:34:19.450 align:start position:0%
looking at this code for a second look
at<00:34:16.850><c> this</c><00:34:17.030><c> line</c><00:34:17.270><c> alone</c><00:34:17.750><c> if</c><00:34:18.170><c> you</c><00:34:18.350><c> will</c><00:34:18.590><c> here</c><00:34:19.220><c> is</c><00:34:19.430><c> a</c>

00:34:19.450 --> 00:34:19.460 align:start position:0%
at this line alone if you will here is a
 

00:34:19.460 --> 00:34:22.690 align:start position:0%
at this line alone if you will here is a
lambda<00:34:19.880><c> if</c><00:34:20.330><c> I</c><00:34:20.540><c> ask</c><00:34:20.720><c> you</c><00:34:21.020><c> what</c><00:34:21.230><c> 2</c><00:34:21.560><c> is</c><00:34:21.920><c> 2</c><00:34:22.520><c> is</c><00:34:22.670><c> a</c>

00:34:22.690 --> 00:34:22.700 align:start position:0%
lambda if I ask you what 2 is 2 is a
 

00:34:22.700 --> 00:34:24.760 align:start position:0%
lambda if I ask you what 2 is 2 is a
literal<00:34:23.240><c> of</c><00:34:23.390><c> course</c><00:34:23.630><c> what</c><00:34:23.990><c> in</c><00:34:24.080><c> the</c><00:34:24.140><c> world</c><00:34:24.380><c> is</c><00:34:24.560><c> e</c>

00:34:24.760 --> 00:34:24.770 align:start position:0%
literal of course what in the world is e
 

00:34:24.770 --> 00:34:28.120 align:start position:0%
literal of course what in the world is e
e<00:34:25.220><c> is</c><00:34:25.670><c> a</c><00:34:25.790><c> parameter</c><00:34:26.330><c> to</c><00:34:26.660><c> the</c><00:34:26.930><c> lambda</c><00:34:27.200><c> much</c><00:34:27.860><c> like</c>

00:34:28.120 --> 00:34:28.130 align:start position:0%
e is a parameter to the lambda much like
 

00:34:28.130 --> 00:34:30.760 align:start position:0%
e is a parameter to the lambda much like
args<00:34:28.760><c> is</c><00:34:28.970><c> a</c><00:34:29.000><c> parameter</c><00:34:29.300><c> to</c><00:34:29.690><c> main</c><00:34:29.930><c> e</c><00:34:30.260><c> is</c><00:34:30.710><c> a</c>

00:34:30.760 --> 00:34:30.770 align:start position:0%
args is a parameter to main e is a
 

00:34:30.770 --> 00:34:32.620 align:start position:0%
args is a parameter to main e is a
parameter<00:34:31.130><c> to</c><00:34:31.370><c> this</c><00:34:31.550><c> lambda</c><00:34:31.880><c> expression</c>

00:34:32.620 --> 00:34:32.630 align:start position:0%
parameter to this lambda expression
 

00:34:32.630 --> 00:34:34.630 align:start position:0%
parameter to this lambda expression
well<00:34:33.020><c> this</c><00:34:33.260><c> lambda</c><00:34:33.650><c> is</c><00:34:33.800><c> very</c><00:34:34.070><c> self-contained</c>

00:34:34.630 --> 00:34:34.640 align:start position:0%
well this lambda is very self-contained
 

00:34:34.640 --> 00:34:36.640 align:start position:0%
well this lambda is very self-contained
it's<00:34:35.060><c> happy</c><00:34:35.450><c> it</c><00:34:35.600><c> caught</c><00:34:35.870><c> everything</c><00:34:36.290><c> it</c><00:34:36.410><c> needs</c>

00:34:36.640 --> 00:34:36.650 align:start position:0%
it's happy it caught everything it needs
 

00:34:36.650 --> 00:34:40.120 align:start position:0%
it's happy it caught everything it needs
not<00:34:37.400><c> a</c><00:34:37.430><c> problem</c><00:34:37.880><c> on</c><00:34:38.210><c> the</c><00:34:38.810><c> other</c><00:34:39.020><c> hand</c><00:34:39.440><c> if</c><00:34:39.890><c> I</c>

00:34:40.120 --> 00:34:40.130 align:start position:0%
not a problem on the other hand if I
 

00:34:40.130 --> 00:34:43.330 align:start position:0%
not a problem on the other hand if I
were<00:34:40.340><c> to</c><00:34:40.550><c> say</c><00:34:40.760><c> factor</c><00:34:41.660><c> over</c><00:34:41.930><c> here</c><00:34:42.080><c> well</c><00:34:42.980><c> if</c><00:34:43.220><c> you</c>

00:34:43.330 --> 00:34:43.340 align:start position:0%
were to say factor over here well if you
 

00:34:43.340 --> 00:34:45.730 align:start position:0%
were to say factor over here well if you
look<00:34:43.490><c> at</c><00:34:43.580><c> this</c><00:34:43.790><c> code</c><00:34:44.060><c> if</c><00:34:44.390><c> I</c><00:34:44.750><c> ask</c><00:34:44.990><c> you</c><00:34:45.200><c> what</c><00:34:45.410><c> is</c><00:34:45.590><c> e</c>

00:34:45.730 --> 00:34:45.740 align:start position:0%
look at this code if I ask you what is e
 

00:34:45.740 --> 00:34:48.700 align:start position:0%
look at this code if I ask you what is e
it's<00:34:46.490><c> very</c><00:34:46.730><c> clear</c><00:34:47.000><c> what</c><00:34:47.240><c> eat</c><00:34:47.540><c> is</c><00:34:47.840><c> e</c><00:34:48.050><c> is</c><00:34:48.530><c> the</c>

00:34:48.700 --> 00:34:48.710 align:start position:0%
it's very clear what eat is e is the
 

00:34:48.710 --> 00:34:50.620 align:start position:0%
it's very clear what eat is e is the
parameter<00:34:49.310><c> to</c><00:34:49.460><c> this</c><00:34:49.580><c> lambda</c><00:34:50.000><c> what</c><00:34:50.420><c> in</c><00:34:50.510><c> the</c>

00:34:50.620 --> 00:34:50.630 align:start position:0%
parameter to this lambda what in the
 

00:34:50.630 --> 00:34:52.900 align:start position:0%
parameter to this lambda what in the
world<00:34:50.840><c> is</c><00:34:51.020><c> this</c><00:34:51.200><c> factor</c><00:34:51.860><c> well</c><00:34:52.400><c> the</c><00:34:52.520><c> fact</c><00:34:52.790><c> that</c>

00:34:52.900 --> 00:34:52.910 align:start position:0%
world is this factor well the fact that
 

00:34:52.910 --> 00:34:55.000 align:start position:0%
world is this factor well the fact that
of<00:34:53.120><c> course</c><00:34:53.270><c> is</c><00:34:53.480><c> not</c><00:34:53.750><c> defined</c><00:34:54.290><c> within</c><00:34:54.800><c> this</c>

00:34:55.000 --> 00:34:55.010 align:start position:0%
of course is not defined within this
 

00:34:55.010 --> 00:34:57.670 align:start position:0%
of course is not defined within this
lambda<00:34:55.340><c> so</c><00:34:56.120><c> this</c><00:34:56.300><c> lambda</c><00:34:56.540><c> has</c><00:34:56.900><c> to</c><00:34:56.930><c> look</c><00:34:57.380><c> for</c>

00:34:57.670 --> 00:34:57.680 align:start position:0%
lambda so this lambda has to look for
 

00:34:57.680 --> 00:35:00.940 align:start position:0%
lambda so this lambda has to look for
this<00:34:57.860><c> factor</c><00:34:58.340><c> so</c><00:34:58.520><c> this</c><00:34:59.330><c> lambda</c><00:34:59.840><c> well</c><00:35:00.800><c> I'm</c>

00:35:00.940 --> 00:35:00.950 align:start position:0%
this factor so this lambda well I'm
 

00:35:00.950 --> 00:35:03.010 align:start position:0%
this factor so this lambda well I'm
going<00:35:01.100><c> to</c><00:35:01.160><c> put</c><00:35:01.310><c> this</c><00:35:01.430><c> down</c><00:35:01.640><c> here</c><00:35:02.270><c> so</c><00:35:02.720><c> this</c>

00:35:03.010 --> 00:35:03.020 align:start position:0%
going to put this down here so this
 

00:35:03.020 --> 00:35:08.380 align:start position:0%
going to put this down here so this
lambda<00:35:03.770><c> has</c><00:35:04.730><c> to</c><00:35:04.900><c> close</c><00:35:05.900><c> over</c><00:35:06.200><c> its</c><00:35:07.390><c> defining</c>

00:35:08.380 --> 00:35:08.390 align:start position:0%
lambda has to close over its defining
 

00:35:08.390 --> 00:35:13.720 align:start position:0%
lambda has to close over its defining
scope<00:35:08.840><c> so</c><00:35:09.680><c> defining</c><00:35:10.100><c> scope</c><00:35:10.750><c> looking</c><00:35:11.950><c> for</c><00:35:12.950><c> the</c>

00:35:13.720 --> 00:35:13.730 align:start position:0%
scope so defining scope looking for the
 

00:35:13.730 --> 00:35:17.530 align:start position:0%
scope so defining scope looking for the
variable<00:35:14.480><c> factor</c><00:35:15.440><c> to</c><00:35:15.830><c> bind</c><00:35:16.160><c> to</c><00:35:16.550><c> so</c><00:35:17.090><c> in</c><00:35:17.420><c> other</c>

00:35:17.530 --> 00:35:17.540 align:start position:0%
variable factor to bind to so in other
 

00:35:17.540 --> 00:35:21.340 align:start position:0%
variable factor to bind to so in other
words<00:35:17.900><c> this</c><00:35:18.700><c> lambda</c><00:35:19.700><c> has</c><00:35:19.880><c> to</c><00:35:19.910><c> close</c><00:35:20.270><c> over</c><00:35:20.570><c> try</c>

00:35:21.340 --> 00:35:21.350 align:start position:0%
words this lambda has to close over try
 

00:35:21.350 --> 00:35:22.960 align:start position:0%
words this lambda has to close over try
saying<00:35:21.710><c> the</c><00:35:21.740><c> word</c><00:35:21.980><c> close</c><00:35:22.250><c> over</c><00:35:22.580><c> really</c><00:35:22.940><c> fast</c>

00:35:22.960 --> 00:35:22.970 align:start position:0%
saying the word close over really fast
 

00:35:22.970 --> 00:35:24.910 align:start position:0%
saying the word close over really fast
several<00:35:23.600><c> times</c><00:35:23.870><c> now</c><00:35:24.500><c> you</c><00:35:24.560><c> know</c><00:35:24.710><c> what</c><00:35:24.890><c> a</c>

00:35:24.910 --> 00:35:24.920 align:start position:0%
several times now you know what a
 

00:35:24.920 --> 00:35:28.330 align:start position:0%
several times now you know what a
closure<00:35:25.220><c> is</c><00:35:25.700><c> so</c><00:35:26.270><c> a</c><00:35:26.300><c> lambda</c><00:35:26.770><c> does</c><00:35:27.770><c> not</c><00:35:28.070><c> have</c>

00:35:28.330 --> 00:35:28.340 align:start position:0%
closure is so a lambda does not have
 

00:35:28.340 --> 00:35:31.060 align:start position:0%
closure is so a lambda does not have
state<00:35:28.880><c> so</c><00:35:29.390><c> I'm</c><00:35:29.540><c> going</c><00:35:29.720><c> to</c><00:35:29.780><c> say</c><00:35:29.930><c> lambdas</c><00:35:30.710><c> are</c>

00:35:31.060 --> 00:35:31.070 align:start position:0%
state so I'm going to say lambdas are
 

00:35:31.070 --> 00:35:32.740 align:start position:0%
state so I'm going to say lambdas are
stateless

00:35:32.740 --> 00:35:32.750 align:start position:0%
stateless
 

00:35:32.750 --> 00:35:35.080 align:start position:0%
stateless
on<00:35:32.840><c> the</c><00:35:33.080><c> other</c><00:35:33.260><c> hand</c><00:35:33.710><c> what</c><00:35:34.460><c> about</c><00:35:34.670><c> a</c><00:35:34.700><c> closure</c>

00:35:35.080 --> 00:35:35.090 align:start position:0%
on the other hand what about a closure
 

00:35:35.090 --> 00:35:40.000 align:start position:0%
on the other hand what about a closure
closure<00:35:35.810><c> has</c><00:35:36.530><c> the</c><00:35:37.430><c> immutable</c><00:35:38.210><c> state</c><00:35:38.960><c> and</c><00:35:39.200><c> so</c>

00:35:40.000 --> 00:35:40.010 align:start position:0%
closure has the immutable state and so
 

00:35:40.010 --> 00:35:42.250 align:start position:0%
closure has the immutable state and so
you<00:35:40.550><c> want</c><00:35:40.880><c> to</c><00:35:41.030><c> make</c><00:35:41.240><c> sure</c><00:35:41.570><c> that</c><00:35:41.840><c> it's</c><00:35:42.020><c> actually</c>

00:35:42.250 --> 00:35:42.260 align:start position:0%
you want to make sure that it's actually
 

00:35:42.260 --> 00:35:45.070 align:start position:0%
you want to make sure that it's actually
immutable<00:35:43.220><c> that's</c><00:35:43.790><c> very</c><00:35:44.120><c> critical</c><00:35:44.390><c> so</c>

00:35:45.070 --> 00:35:45.080 align:start position:0%
immutable that's very critical so
 

00:35:45.080 --> 00:35:48.000 align:start position:0%
immutable that's very critical so
closures<00:35:45.800><c> carrying</c><00:35:46.760><c> a</c><00:35:46.850><c> state</c><00:35:47.240><c> with</c><00:35:47.690><c> them</c>

00:35:48.000 --> 00:35:48.010 align:start position:0%
closures carrying a state with them
 

00:35:48.010 --> 00:35:51.130 align:start position:0%
closures carrying a state with them
lambdas<00:35:49.010><c> are</c><00:35:49.250><c> pretty</c><00:35:49.520><c> stateless</c><00:35:50.090><c> and</c><00:35:50.270><c> so</c><00:35:50.870><c> what</c>

00:35:51.130 --> 00:35:51.140 align:start position:0%
lambdas are pretty stateless and so what
 

00:35:51.140 --> 00:35:53.500 align:start position:0%
lambdas are pretty stateless and so what
a<00:35:51.170><c> closure</c><00:35:51.470><c> can</c><00:35:51.800><c> do</c><00:35:52.100><c> is</c><00:35:52.580><c> a</c><00:35:52.640><c> closure</c><00:35:53.150><c> and</c>

00:35:53.500 --> 00:35:53.510 align:start position:0%
a closure can do is a closure and
 

00:35:53.510 --> 00:35:55.660 align:start position:0%
a closure can do is a closure and
capture<00:35:54.050><c> a</c><00:35:54.080><c> state</c><00:35:54.560><c> where</c><00:35:55.010><c> you</c><00:35:55.130><c> are</c><00:35:55.220><c> defining</c>

00:35:55.660 --> 00:35:55.670 align:start position:0%
capture a state where you are defining
 

00:35:55.670 --> 00:35:58.120 align:start position:0%
capture a state where you are defining
it<00:35:56.030><c> and</c><00:35:56.240><c> carried</c><00:35:57.110><c> over</c><00:35:57.320><c> to</c><00:35:57.440><c> the</c><00:35:57.560><c> point</c><00:35:57.890><c> of</c>

00:35:58.120 --> 00:35:58.130 align:start position:0%
it and carried over to the point of
 

00:35:58.130 --> 00:36:01.870 align:start position:0%
it and carried over to the point of
execution<00:35:59.590><c> waiting</c><00:36:00.590><c> at</c><00:36:00.710><c> this</c><00:36:00.860><c> code</c><00:36:01.100><c> but</c><00:36:01.670><c> let's</c>

00:36:01.870 --> 00:36:01.880 align:start position:0%
execution waiting at this code but let's
 

00:36:01.880 --> 00:36:03.160 align:start position:0%
execution waiting at this code but let's
quickly<00:36:02.000><c> take</c><00:36:02.360><c> a</c><00:36:02.420><c> look</c><00:36:02.630><c> at</c><00:36:02.720><c> this</c><00:36:02.870><c> right</c><00:36:03.140><c> here</c>

00:36:03.160 --> 00:36:03.170 align:start position:0%
quickly take a look at this right here
 

00:36:03.170 --> 00:36:06.490 align:start position:0%
quickly take a look at this right here
this<00:36:03.980><c> lambda</c><00:36:04.580><c> is</c><00:36:04.730><c> defined</c><00:36:05.210><c> right</c><00:36:05.510><c> here</c><00:36:05.900><c> in</c><00:36:06.350><c> the</c>

00:36:06.490 --> 00:36:06.500 align:start position:0%
this lambda is defined right here in the
 

00:36:06.500 --> 00:36:10.180 align:start position:0%
this lambda is defined right here in the
main<00:36:06.710><c> then</c><00:36:07.340><c> you</c><00:36:07.550><c> call</c><00:36:07.910><c> the</c><00:36:08.300><c> map</c><00:36:08.810><c> method</c><00:36:09.230><c> within</c>

00:36:10.180 --> 00:36:10.190 align:start position:0%
main then you call the map method within
 

00:36:10.190 --> 00:36:12.670 align:start position:0%
main then you call the map method within
the<00:36:10.640><c> map</c><00:36:10.850><c> method</c><00:36:11.120><c> you</c><00:36:11.810><c> could</c><00:36:12.050><c> either</c><00:36:12.290><c> call</c><00:36:12.650><c> the</c>

00:36:12.670 --> 00:36:12.680 align:start position:0%
the map method you could either call the
 

00:36:12.680 --> 00:36:15.310 align:start position:0%
the map method you could either call the
lambda<00:36:13.310><c> or</c><00:36:13.550><c> you</c><00:36:14.000><c> can</c><00:36:14.210><c> pass</c><00:36:14.480><c> the</c><00:36:14.720><c> lambda</c><00:36:15.050><c> down</c>

00:36:15.310 --> 00:36:15.320 align:start position:0%
lambda or you can pass the lambda down
 

00:36:15.320 --> 00:36:17.860 align:start position:0%
lambda or you can pass the lambda down
few<00:36:16.070><c> more</c><00:36:16.250><c> levels</c><00:36:16.730><c> and</c><00:36:17.210><c> you</c><00:36:17.390><c> may</c><00:36:17.510><c> call</c><00:36:17.660><c> the</c>

00:36:17.860 --> 00:36:17.870 align:start position:0%
few more levels and you may call the
 

00:36:17.870 --> 00:36:20.410 align:start position:0%
few more levels and you may call the
lambda<00:36:18.230><c> after</c><00:36:18.740><c> that</c><00:36:18.920><c> so</c><00:36:19.310><c> in</c><00:36:19.400><c> other</c><00:36:19.520><c> words</c><00:36:19.850><c> the</c>

00:36:20.410 --> 00:36:20.420 align:start position:0%
lambda after that so in other words the
 

00:36:20.420 --> 00:36:23.110 align:start position:0%
lambda after that so in other words the
lambda<00:36:20.870><c> that's</c><00:36:21.080><c> defined</c><00:36:21.530><c> in</c><00:36:21.650><c> the</c><00:36:21.830><c> main</c><00:36:22.160><c> may</c>

00:36:23.110 --> 00:36:23.120 align:start position:0%
lambda that's defined in the main may
 

00:36:23.120 --> 00:36:25.900 align:start position:0%
lambda that's defined in the main may
actually<00:36:23.420><c> get</c><00:36:23.870><c> executed</c><00:36:24.500><c> at</c><00:36:24.740><c> one</c><00:36:25.280><c> or</c><00:36:25.490><c> two</c><00:36:25.700><c> or</c>

00:36:25.900 --> 00:36:25.910 align:start position:0%
actually get executed at one or two or
 

00:36:25.910 --> 00:36:28.270 align:start position:0%
actually get executed at one or two or
three<00:36:26.270><c> levels</c><00:36:26.690><c> from</c><00:36:26.930><c> below</c><00:36:27.200><c> the</c><00:36:27.380><c> stack</c><00:36:27.680><c> but</c>

00:36:28.270 --> 00:36:28.280 align:start position:0%
three levels from below the stack but
 

00:36:28.280 --> 00:36:30.370 align:start position:0%
three levels from below the stack but
when<00:36:28.490><c> it's</c><00:36:28.640><c> executed</c><00:36:29.390><c> in</c><00:36:29.570><c> that</c><00:36:29.780><c> stack</c><00:36:30.110><c> level</c>

00:36:30.370 --> 00:36:30.380 align:start position:0%
when it's executed in that stack level
 

00:36:30.380 --> 00:36:33.250 align:start position:0%
when it's executed in that stack level
below<00:36:30.800><c> it</c><00:36:31.370><c> needs</c><00:36:31.940><c> a</c><00:36:32.180><c> variable</c><00:36:32.660><c> defined</c><00:36:33.050><c> up</c>

00:36:33.250 --> 00:36:33.260 align:start position:0%
below it needs a variable defined up
 

00:36:33.260 --> 00:36:35.590 align:start position:0%
below it needs a variable defined up
here<00:36:33.800><c> so</c><00:36:34.250><c> that</c><00:36:34.280><c> is</c><00:36:34.550><c> where</c><00:36:34.730><c> it</c><00:36:34.880><c> captures</c><00:36:35.480><c> the</c>

00:36:35.590 --> 00:36:35.600 align:start position:0%
here so that is where it captures the
 

00:36:35.600 --> 00:36:38.860 align:start position:0%
here so that is where it captures the
context<00:36:36.260><c> from</c><00:36:36.470><c> here</c><00:36:36.860><c> and</c><00:36:37.010><c> carries</c><00:36:37.760><c> it</c><00:36:38.510><c> down</c>

00:36:38.860 --> 00:36:38.870 align:start position:0%
context from here and carries it down
 

00:36:38.870 --> 00:36:41.650 align:start position:0%
context from here and carries it down
there<00:36:39.230><c> for</c><00:36:39.760><c> availability</c><00:36:40.760><c> so</c><00:36:41.330><c> that</c><00:36:41.510><c> is</c>

00:36:41.650 --> 00:36:41.660 align:start position:0%
there for availability so that is
 

00:36:41.660 --> 00:36:43.780 align:start position:0%
there for availability so that is
basically<00:36:41.870><c> what</c><00:36:42.200><c> a</c><00:36:42.230><c> closure</c><00:36:42.560><c> s</c><00:36:43.010><c> so</c><00:36:43.460><c> one</c><00:36:43.640><c> of</c><00:36:43.730><c> the</c>

00:36:43.780 --> 00:36:43.790 align:start position:0%
basically what a closure s so one of the
 

00:36:43.790 --> 00:36:45.250 align:start position:0%
basically what a closure s so one of the
things<00:36:43.970><c> we</c><00:36:44.120><c> should</c><00:36:44.300><c> keep</c><00:36:44.450><c> in</c><00:36:44.630><c> mind</c><00:36:44.870><c> is</c>

00:36:45.250 --> 00:36:45.260 align:start position:0%
things we should keep in mind is
 

00:36:45.260 --> 00:36:48.610 align:start position:0%
things we should keep in mind is
closures<00:36:46.130><c> carry</c><00:36:46.490><c> state</c><00:36:47.150><c> but</c><00:36:47.810><c> it's</c><00:36:47.960><c> important</c>

00:36:48.610 --> 00:36:48.620 align:start position:0%
closures carry state but it's important
 

00:36:48.620 --> 00:36:50.920 align:start position:0%
closures carry state but it's important
for<00:36:48.650><c> us</c><00:36:48.830><c> to</c><00:36:48.950><c> make</c><00:36:49.220><c> sure</c><00:36:49.250><c> that</c><00:36:49.880><c> the</c><00:36:50.330><c> state</c><00:36:50.660><c> that</c>

00:36:50.920 --> 00:36:50.930 align:start position:0%
for us to make sure that the state that
 

00:36:50.930 --> 00:36:52.960 align:start position:0%
for us to make sure that the state that
is<00:36:51.080><c> carried</c><00:36:51.440><c> by</c><00:36:51.530><c> the</c><00:36:51.560><c> closures</c><00:36:52.010><c> are</c><00:36:52.250><c> immutable</c>

00:36:52.960 --> 00:36:52.970 align:start position:0%
is carried by the closures are immutable
 

00:36:52.970 --> 00:36:56.050 align:start position:0%
is carried by the closures are immutable
now<00:36:53.690><c> why</c><00:36:53.960><c> is</c><00:36:54.020><c> it</c><00:36:54.200><c> so</c><00:36:54.400><c> important</c><00:36:55.400><c> that</c><00:36:55.850><c> the</c>

00:36:56.050 --> 00:36:56.060 align:start position:0%
now why is it so important that the
 

00:36:56.060 --> 00:36:58.540 align:start position:0%
now why is it so important that the
closure<00:36:56.300><c> states</c><00:36:56.960><c> are</c><00:36:57.140><c> immutable</c><00:36:57.770><c> well</c><00:36:58.400><c> to</c>

00:36:58.540 --> 00:36:58.550 align:start position:0%
closure states are immutable well to
 

00:36:58.550 --> 00:37:01.240 align:start position:0%
closure states are immutable well to
understand<00:36:59.210><c> that</c><00:36:59.540><c> let's</c><00:37:00.290><c> go</c><00:37:00.440><c> ahead</c><00:37:00.500><c> and</c><00:37:00.740><c> do</c>

00:37:01.240 --> 00:37:01.250 align:start position:0%
understand that let's go ahead and do
 

00:37:01.250 --> 00:37:02.470 align:start position:0%
understand that let's go ahead and do
this<00:37:01.430><c> a</c><00:37:01.550><c> little</c><00:37:01.670><c> differently</c>

00:37:02.470 --> 00:37:02.480 align:start position:0%
this a little differently
 

00:37:02.480 --> 00:37:04.930 align:start position:0%
this a little differently
I'm<00:37:02.540><c> going</c><00:37:03.080><c> to</c><00:37:03.170><c> go</c><00:37:03.290><c> ahead</c><00:37:03.380><c> and</c><00:37:03.620><c> bring</c><00:37:03.950><c> in</c><00:37:04.310><c> the</c>

00:37:04.930 --> 00:37:04.940 align:start position:0%
I'm going to go ahead and bring in the
 

00:37:04.940 --> 00:37:06.760 align:start position:0%
I'm going to go ahead and bring in the
stream<00:37:05.420><c> over</c><00:37:05.900><c> here</c><00:37:06.200><c> so</c><00:37:06.350><c> I'm</c><00:37:06.440><c> going</c><00:37:06.560><c> to</c><00:37:06.650><c> say</c>

00:37:06.760 --> 00:37:06.770 align:start position:0%
stream over here so I'm going to say
 

00:37:06.770 --> 00:37:08.830 align:start position:0%
stream over here so I'm going to say
scream<00:37:07.130><c> dart</c><00:37:07.430><c> scream</c><00:37:07.820><c> and</c><00:37:08.210><c> I'm</c><00:37:08.480><c> going</c><00:37:08.660><c> to</c><00:37:08.720><c> say</c>

00:37:08.830 --> 00:37:08.840 align:start position:0%
scream dart scream and I'm going to say
 

00:37:08.840 --> 00:37:12.370 align:start position:0%
scream dart scream and I'm going to say
stream<00:37:09.350><c> off</c><00:37:09.800><c> the</c><00:37:10.490><c> integer</c><00:37:11.030><c> right</c><00:37:11.450><c> here</c><00:37:11.840><c> here</c>

00:37:12.370 --> 00:37:12.380 align:start position:0%
stream off the integer right here here
 

00:37:12.380 --> 00:37:15.160 align:start position:0%
stream off the integer right here here
and<00:37:12.620><c> then</c><00:37:12.800><c> is</c><00:37:13.040><c> equal</c><00:37:13.070><c> to</c><00:37:13.640><c> numbers</c><00:37:14.120><c> dot</c><00:37:14.480><c> scream</c>

00:37:15.160 --> 00:37:15.170 align:start position:0%
and then is equal to numbers dot scream
 

00:37:15.170 --> 00:37:17.620 align:start position:0%
and then is equal to numbers dot scream
but<00:37:15.890><c> I'm</c><00:37:16.010><c> going</c><00:37:16.130><c> to</c><00:37:16.220><c> say</c><00:37:16.310><c> dot</c><00:37:16.550><c> map</c><00:37:17.030><c> give</c><00:37:17.480><c> an</c>

00:37:17.620 --> 00:37:17.630 align:start position:0%
but I'm going to say dot map give an
 

00:37:17.630 --> 00:37:21.280 align:start position:0%
but I'm going to say dot map give an
element<00:37:18.290><c> I'm</c><00:37:18.530><c> gonna</c><00:37:19.040><c> say</c><00:37:19.310><c> element</c><00:37:20.180><c> x</c><00:37:20.420><c> factor</c>

00:37:21.280 --> 00:37:21.290 align:start position:0%
element I'm gonna say element x factor
 

00:37:21.290 --> 00:37:23.560 align:start position:0%
element I'm gonna say element x factor
and<00:37:21.710><c> then</c><00:37:22.070><c> of</c><00:37:22.190><c> course</c><00:37:22.490><c> in</c><00:37:22.880><c> this</c><00:37:23.090><c> case</c><00:37:23.300><c> I'm</c>

00:37:23.560 --> 00:37:23.570 align:start position:0%
and then of course in this case I'm
 

00:37:23.570 --> 00:37:26.410 align:start position:0%
and then of course in this case I'm
going<00:37:23.840><c> to</c><00:37:23.930><c> say</c><00:37:24.170><c> that</c><00:37:25.040><c> given</c><00:37:25.490><c> the</c><00:37:25.700><c> stream</c><00:37:26.060><c> dot</c>

00:37:26.410 --> 00:37:26.420 align:start position:0%
going to say that given the stream dot
 

00:37:26.420 --> 00:37:27.100 align:start position:0%
going to say that given the stream dot
for<00:37:26.750><c> each</c>

00:37:27.100 --> 00:37:27.110 align:start position:0%
for each
 

00:37:27.110 --> 00:37:28.960 align:start position:0%
for each
I'm<00:37:27.590><c> going</c><00:37:28.010><c> to</c><00:37:28.070><c> go</c><00:37:28.160><c> ahead</c><00:37:28.220><c> and</c><00:37:28.430><c> say</c><00:37:28.520><c> system</c><00:37:28.910><c> dot</c>

00:37:28.960 --> 00:37:28.970 align:start position:0%
I'm going to go ahead and say system dot
 

00:37:28.970 --> 00:37:31.960 align:start position:0%
I'm going to go ahead and say system dot
out<00:37:29.330><c> and</c><00:37:29.900><c> print</c><00:37:30.680><c> Len</c><00:37:30.980><c> and</c><00:37:31.280><c> I'm</c><00:37:31.610><c> going</c><00:37:31.790><c> to</c><00:37:31.820><c> go</c>

00:37:31.960 --> 00:37:31.970 align:start position:0%
out and print Len and I'm going to go
 

00:37:31.970 --> 00:37:33.880 align:start position:0%
out and print Len and I'm going to go
ahead<00:37:32.090><c> and</c><00:37:32.210><c> print</c><00:37:32.510><c> the</c><00:37:32.780><c> string</c><00:37:33.020><c> well</c><00:37:33.560><c> that's</c>

00:37:33.880 --> 00:37:33.890 align:start position:0%
ahead and print the string well that's
 

00:37:33.890 --> 00:37:36.010 align:start position:0%
ahead and print the string well that's
good<00:37:34.070><c> so</c><00:37:34.250><c> far</c><00:37:34.460><c> but</c><00:37:34.640><c> where</c><00:37:35.000><c> is</c><00:37:35.150><c> the</c><00:37:35.300><c> factor</c><00:37:35.810><c> I'm</c>

00:37:36.010 --> 00:37:36.020 align:start position:0%
good so far but where is the factor I'm
 

00:37:36.020 --> 00:37:38.260 align:start position:0%
good so far but where is the factor I'm
going<00:37:36.380><c> to</c><00:37:36.440><c> say</c><00:37:36.530><c> in</c><00:37:36.800><c> this</c><00:37:36.950><c> case</c><00:37:37.190><c> this</c><00:37:37.700><c> factor</c><00:37:38.240><c> is</c>

00:37:38.260 --> 00:37:38.270 align:start position:0%
going to say in this case this factor is
 

00:37:38.270 --> 00:37:41.740 align:start position:0%
going to say in this case this factor is
int<00:37:38.840><c> factor</c><00:37:39.590><c> is</c><00:37:40.010><c> equal</c><00:37:40.280><c> to</c><00:37:40.520><c> 2</c><00:37:40.820><c> so</c><00:37:41.360><c> the</c><00:37:41.510><c> code</c>

00:37:41.740 --> 00:37:41.750 align:start position:0%
int factor is equal to 2 so the code
 

00:37:41.750 --> 00:37:44.410 align:start position:0%
int factor is equal to 2 so the code
actually<00:37:42.350><c> in</c><00:37:42.530><c> this</c><00:37:42.650><c> case</c><00:37:42.710><c> is</c><00:37:43.300><c> taking</c><00:37:44.300><c> the</c>

00:37:44.410 --> 00:37:44.420 align:start position:0%
actually in this case is taking the
 

00:37:44.420 --> 00:37:45.790 align:start position:0%
actually in this case is taking the
factor<00:37:44.840><c> n</c><00:37:45.020><c> and</c>

00:37:45.790 --> 00:37:45.800 align:start position:0%
factor n and
 

00:37:45.800 --> 00:37:47.740 align:start position:0%
factor n and
making<00:37:46.190><c> a</c><00:37:46.280><c> product</c><00:37:46.760><c> out</c><00:37:46.910><c> of</c><00:37:46.970><c> it</c><00:37:47.270><c> so</c><00:37:47.720><c> that</c>

00:37:47.740 --> 00:37:47.750 align:start position:0%
making a product out of it so that
 

00:37:47.750 --> 00:37:50.830 align:start position:0%
making a product out of it so that
obviously<00:37:48.230><c> worked</c><00:37:49.220><c> but</c><00:37:50.000><c> one</c><00:37:50.390><c> thing</c><00:37:50.600><c> to</c><00:37:50.720><c> keep</c>

00:37:50.830 --> 00:37:50.840 align:start position:0%
obviously worked but one thing to keep
 

00:37:50.840 --> 00:37:54.280 align:start position:0%
obviously worked but one thing to keep
in<00:37:51.020><c> mind</c><00:37:51.080><c> is</c><00:37:51.620><c> look</c><00:37:52.400><c> at</c><00:37:52.610><c> this</c><00:37:52.880><c> closure</c><00:37:53.690><c> for</c><00:37:54.230><c> a</c>

00:37:54.280 --> 00:37:54.290 align:start position:0%
in mind is look at this closure for a
 

00:37:54.290 --> 00:37:56.980 align:start position:0%
in mind is look at this closure for a
minute<00:37:54.710><c> well</c><00:37:55.250><c> this</c><00:37:55.430><c> closure</c><00:37:55.870><c> definitely</c><00:37:56.870><c> is</c>

00:37:56.980 --> 00:37:56.990 align:start position:0%
minute well this closure definitely is
 

00:37:56.990 --> 00:38:01.090 align:start position:0%
minute well this closure definitely is
not<00:37:57.200><c> modifying</c><00:37:58.130><c> any</c><00:37:58.660><c> particular</c><00:37:59.660><c> variable</c><00:38:00.530><c> so</c>

00:38:01.090 --> 00:38:01.100 align:start position:0%
not modifying any particular variable so
 

00:38:01.100 --> 00:38:03.310 align:start position:0%
not modifying any particular variable so
that<00:38:01.130><c> is</c><00:38:01.370><c> good</c><00:38:01.670><c> it</c><00:38:01.970><c> satisfies</c><00:38:02.480><c> the</c><00:38:02.570><c> first</c><00:38:02.870><c> rule</c>

00:38:03.310 --> 00:38:03.320 align:start position:0%
that is good it satisfies the first rule
 

00:38:03.320 --> 00:38:05.640 align:start position:0%
that is good it satisfies the first rule
of<00:38:03.530><c> purity</c><00:38:04.010><c> it</c><00:38:04.400><c> doesn't</c><00:38:04.820><c> change</c><00:38:05.060><c> anything</c>

00:38:05.640 --> 00:38:05.650 align:start position:0%
of purity it doesn't change anything
 

00:38:05.650 --> 00:38:08.020 align:start position:0%
of purity it doesn't change anything
what<00:38:06.650><c> about</c><00:38:06.860><c> the</c><00:38:06.920><c> second</c><00:38:07.370><c> rule</c><00:38:07.490><c> of</c><00:38:07.640><c> purity</c>

00:38:08.020 --> 00:38:08.030 align:start position:0%
what about the second rule of purity
 

00:38:08.030 --> 00:38:10.240 align:start position:0%
what about the second rule of purity
remember<00:38:08.660><c> the</c><00:38:08.750><c> second</c><00:38:09.050><c> rule</c><00:38:09.140><c> of</c><00:38:09.200><c> purity</c><00:38:09.590><c> is</c><00:38:09.770><c> it</c>

00:38:10.240 --> 00:38:10.250 align:start position:0%
remember the second rule of purity is it
 

00:38:10.250 --> 00:38:12.520 align:start position:0%
remember the second rule of purity is it
doesn't<00:38:10.490><c> depend</c><00:38:10.940><c> on</c><00:38:11.150><c> anything</c><00:38:11.510><c> that</c><00:38:11.690><c> changes</c>

00:38:12.520 --> 00:38:12.530 align:start position:0%
doesn't depend on anything that changes
 

00:38:12.530 --> 00:38:15.130 align:start position:0%
doesn't depend on anything that changes
oh<00:38:12.710><c> wait</c><00:38:13.430><c> a</c><00:38:13.460><c> minute</c><00:38:13.610><c> it</c><00:38:14.120><c> does</c><00:38:14.600><c> depend</c><00:38:15.050><c> on</c>

00:38:15.130 --> 00:38:15.140 align:start position:0%
oh wait a minute it does depend on
 

00:38:15.140 --> 00:38:17.920 align:start position:0%
oh wait a minute it does depend on
factor<00:38:16.100><c> but</c><00:38:16.880><c> one</c><00:38:17.210><c> of</c><00:38:17.300><c> the</c><00:38:17.390><c> beautiful</c><00:38:17.630><c> things</c>

00:38:17.920 --> 00:38:17.930 align:start position:0%
factor but one of the beautiful things
 

00:38:17.930 --> 00:38:20.920 align:start position:0%
factor but one of the beautiful things
about<00:38:18.050><c> Java</c><00:38:18.620><c> is</c><00:38:19.010><c> that</c><00:38:19.820><c> it</c><00:38:20.060><c> treats</c><00:38:20.420><c> these</c><00:38:20.660><c> as</c>

00:38:20.920 --> 00:38:20.930 align:start position:0%
about Java is that it treats these as
 

00:38:20.930 --> 00:38:23.470 align:start position:0%
about Java is that it treats these as
what<00:38:21.170><c> are</c><00:38:21.290><c> called</c><00:38:21.460><c> effectively</c><00:38:22.460><c> final</c><00:38:22.940><c> so</c><00:38:23.360><c> in</c>

00:38:23.470 --> 00:38:23.480 align:start position:0%
what are called effectively final so in
 

00:38:23.480 --> 00:38:25.240 align:start position:0%
what are called effectively final so in
other<00:38:23.630><c> words</c><00:38:23.870><c> you</c><00:38:24.230><c> could</c><00:38:24.380><c> put</c><00:38:24.560><c> the</c><00:38:24.650><c> word</c><00:38:24.830><c> final</c>

00:38:25.240 --> 00:38:25.250 align:start position:0%
other words you could put the word final
 

00:38:25.250 --> 00:38:28.090 align:start position:0%
other words you could put the word final
right<00:38:25.730><c> here</c><00:38:26.150><c> in</c><00:38:26.600><c> this</c><00:38:26.780><c> case</c><00:38:26.990><c> if</c><00:38:27.200><c> I</c><00:38:27.290><c> say</c><00:38:27.500><c> factor</c>

00:38:28.090 --> 00:38:28.100 align:start position:0%
right here in this case if I say factor
 

00:38:28.100 --> 00:38:30.880 align:start position:0%
right here in this case if I say factor
equals<00:38:28.670><c> four</c><00:38:29.200><c> notice</c><00:38:30.200><c> you</c><00:38:30.260><c> get</c><00:38:30.410><c> an</c><00:38:30.560><c> error</c>

00:38:30.880 --> 00:38:30.890 align:start position:0%
equals four notice you get an error
 

00:38:30.890 --> 00:38:34.030 align:start position:0%
equals four notice you get an error
right<00:38:31.310><c> there</c><00:38:31.550><c> on</c><00:38:31.700><c> line</c><00:38:31.910><c> 15</c><00:38:32.720><c> and</c><00:38:33.200><c> it</c><00:38:33.620><c> says</c><00:38:33.860><c> you</c>

00:38:34.030 --> 00:38:34.040 align:start position:0%
right there on line 15 and it says you
 

00:38:34.040 --> 00:38:36.520 align:start position:0%
right there on line 15 and it says you
cannot<00:38:34.310><c> change</c><00:38:34.700><c> factor</c><00:38:35.390><c> because</c><00:38:35.690><c> its</c><00:38:36.020><c> final</c>

00:38:36.520 --> 00:38:36.530 align:start position:0%
cannot change factor because its final
 

00:38:36.530 --> 00:38:39.460 align:start position:0%
cannot change factor because its final
but<00:38:37.040><c> what</c><00:38:37.340><c> if</c><00:38:37.460><c> I</c><00:38:37.610><c> remove</c><00:38:38.150><c> this</c><00:38:38.600><c> final</c><00:38:39.230><c> from</c>

00:38:39.460 --> 00:38:39.470 align:start position:0%
but what if I remove this final from
 

00:38:39.470 --> 00:38:42.670 align:start position:0%
but what if I remove this final from
here<00:38:39.740><c> well</c><00:38:40.370><c> in</c><00:38:40.640><c> old</c><00:38:41.120><c> versions</c><00:38:41.750><c> of</c><00:38:41.930><c> Java</c><00:38:42.170><c> until</c>

00:38:42.670 --> 00:38:42.680 align:start position:0%
here well in old versions of Java until
 

00:38:42.680 --> 00:38:46.660 align:start position:0%
here well in old versions of Java until
Java<00:38:42.890><c> 7</c><00:38:43.370><c> you</c><00:38:44.270><c> have</c><00:38:44.510><c> to</c><00:38:44.750><c> put</c><00:38:44.960><c> final</c><00:38:45.590><c> you</c><00:38:46.460><c> have</c><00:38:46.640><c> a</c>

00:38:46.660 --> 00:38:46.670 align:start position:0%
Java 7 you have to put final you have a
 

00:38:46.670 --> 00:38:49.510 align:start position:0%
Java 7 you have to put final you have a
local<00:38:47.120><c> variable</c><00:38:47.620><c> which</c><00:38:48.620><c> is</c><00:38:48.860><c> accessed</c><00:38:49.490><c> from</c>

00:38:49.510 --> 00:38:49.520 align:start position:0%
local variable which is accessed from
 

00:38:49.520 --> 00:38:53.050 align:start position:0%
local variable which is accessed from
within<00:38:49.670><c> an</c><00:38:50.180><c> inner</c><00:38:50.660><c> class</c><00:38:50.870><c> Java</c><00:38:51.830><c> 8</c><00:38:52.160><c> changes</c><00:38:52.880><c> the</c>

00:38:53.050 --> 00:38:53.060 align:start position:0%
within an inner class Java 8 changes the
 

00:38:53.060 --> 00:38:56.050 align:start position:0%
within an inner class Java 8 changes the
rules<00:38:53.270><c> just</c><00:38:53.900><c> a</c><00:38:54.050><c> little</c><00:38:54.320><c> bit</c><00:38:54.440><c> in</c><00:38:54.740><c> Java</c><00:38:55.220><c> 8</c><00:38:55.550><c> you</c>

00:38:56.050 --> 00:38:56.060 align:start position:0%
rules just a little bit in Java 8 you
 

00:38:56.060 --> 00:38:58.750 align:start position:0%
rules just a little bit in Java 8 you
don't<00:38:56.600><c> have</c><00:38:57.110><c> to</c><00:38:57.320><c> put</c><00:38:57.470><c> final</c><00:38:57.920><c> now</c><00:38:58.340><c> you</c><00:38:58.400><c> may</c><00:38:58.580><c> say</c>

00:38:58.750 --> 00:38:58.760 align:start position:0%
don't have to put final now you may say
 

00:38:58.760 --> 00:38:59.410 align:start position:0%
don't have to put final now you may say
wait<00:38:58.940><c> a</c><00:38:59.000><c> minute</c>

00:38:59.410 --> 00:38:59.420 align:start position:0%
wait a minute
 

00:38:59.420 --> 00:39:02.440 align:start position:0%
wait a minute
why<00:38:59.900><c> don't</c><00:39:00.320><c> have</c><00:39:00.530><c> I</c><00:39:00.770><c> have</c><00:39:01.220><c> to</c><00:39:01.370><c> put</c><00:39:01.550><c> final</c><00:39:01.970><c> well</c>

00:39:02.440 --> 00:39:02.450 align:start position:0%
why don't have I have to put final well
 

00:39:02.450 --> 00:39:05.170 align:start position:0%
why don't have I have to put final well
Java<00:39:02.840><c> 8</c><00:39:03.170><c> says</c><00:39:03.500><c> you</c><00:39:04.280><c> and</c><00:39:04.580><c> I</c><00:39:04.670><c> have</c><00:39:04.910><c> been</c><00:39:05.030><c> going</c>

00:39:05.170 --> 00:39:05.180 align:start position:0%
Java 8 says you and I have been going
 

00:39:05.180 --> 00:39:07.720 align:start position:0%
Java 8 says you and I have been going
out<00:39:05.420><c> for</c><00:39:05.600><c> a</c><00:39:05.660><c> long</c><00:39:05.900><c> time</c><00:39:06.410><c> we</c><00:39:07.010><c> can</c><00:39:07.040><c> trust</c><00:39:07.430><c> each</c>

00:39:07.720 --> 00:39:07.730 align:start position:0%
out for a long time we can trust each
 

00:39:07.730 --> 00:39:10.090 align:start position:0%
out for a long time we can trust each
other<00:39:08.000><c> just</c><00:39:08.360><c> a</c><00:39:08.510><c> little</c><00:39:08.540><c> bit</c><00:39:08.960><c> so</c><00:39:09.320><c> as</c><00:39:09.500><c> long</c><00:39:09.800><c> as</c>

00:39:10.090 --> 00:39:10.100 align:start position:0%
other just a little bit so as long as
 

00:39:10.100 --> 00:39:12.430 align:start position:0%
other just a little bit so as long as
you<00:39:10.250><c> know</c><00:39:10.400><c> how</c><00:39:10.550><c> to</c><00:39:10.580><c> behave</c><00:39:10.910><c> you</c><00:39:11.630><c> don't</c><00:39:12.050><c> have</c><00:39:12.320><c> to</c>

00:39:12.430 --> 00:39:12.440 align:start position:0%
you know how to behave you don't have to
 

00:39:12.440 --> 00:39:14.440 align:start position:0%
you know how to behave you don't have to
go<00:39:12.590><c> through</c><00:39:12.770><c> the</c><00:39:12.890><c> ceremony</c><00:39:13.250><c> of</c><00:39:13.640><c> putting</c><00:39:14.000><c> final</c>

00:39:14.440 --> 00:39:14.450 align:start position:0%
go through the ceremony of putting final
 

00:39:14.450 --> 00:39:17.680 align:start position:0%
go through the ceremony of putting final
so<00:39:14.930><c> as</c><00:39:15.140><c> a</c><00:39:15.170><c> result</c><00:39:15.470><c> when</c><00:39:16.430><c> I</c><00:39:16.460><c> write</c><00:39:17.120><c> this</c><00:39:17.390><c> code</c>

00:39:17.680 --> 00:39:17.690 align:start position:0%
so as a result when I write this code
 

00:39:17.690 --> 00:39:20.850 align:start position:0%
so as a result when I write this code
this<00:39:18.440><c> is</c><00:39:18.710><c> called</c><00:39:18.980><c> effectively</c><00:39:19.940><c> final</c><00:39:20.390><c> however</c>

00:39:20.850 --> 00:39:20.860 align:start position:0%
this is called effectively final however
 

00:39:20.860 --> 00:39:26.580 align:start position:0%
this is called effectively final however
if<00:39:21.860><c> you</c><00:39:22.370><c> come</c><00:39:22.820><c> here</c><00:39:23.150><c> and</c><00:39:23.330><c> say</c><00:39:23.770><c> factor</c><00:39:24.770><c> equals</c><00:39:25.430><c> 4</c>

00:39:26.580 --> 00:39:26.590 align:start position:0%
if you come here and say factor equals 4
 

00:39:26.590 --> 00:39:29.830 align:start position:0%
if you come here and say factor equals 4
immediately<00:39:27.590><c> Java</c><00:39:28.160><c> screams</c><00:39:28.790><c> and</c><00:39:29.270><c> says</c><00:39:29.510><c> I</c>

00:39:29.830 --> 00:39:29.840 align:start position:0%
immediately Java screams and says I
 

00:39:29.840 --> 00:39:32.110 align:start position:0%
immediately Java screams and says I
thought<00:39:30.620><c> we</c><00:39:30.980><c> had</c><00:39:31.130><c> an</c><00:39:31.250><c> understanding</c><00:39:31.340><c> between</c>

00:39:32.110 --> 00:39:32.120 align:start position:0%
thought we had an understanding between
 

00:39:32.120 --> 00:39:34.330 align:start position:0%
thought we had an understanding between
us<00:39:32.360><c> and</c><00:39:32.750><c> you</c><00:39:33.350><c> are</c><00:39:33.470><c> now</c><00:39:33.680><c> violating</c><00:39:34.310><c> that</c>

00:39:34.330 --> 00:39:34.340 align:start position:0%
us and you are now violating that
 

00:39:34.340 --> 00:39:36.130 align:start position:0%
us and you are now violating that
contract<00:39:35.060><c> this</c><00:39:35.570><c> is</c><00:39:35.720><c> why</c><00:39:35.870><c> it's</c><00:39:36.050><c> called</c>

00:39:36.130 --> 00:39:36.140 align:start position:0%
contract this is why it's called
 

00:39:36.140 --> 00:39:38.590 align:start position:0%
contract this is why it's called
effectively<00:39:36.950><c> final</c><00:39:37.400><c> in</c><00:39:37.490><c> other</c><00:39:37.670><c> words</c><00:39:37.910><c> you</c>

00:39:38.590 --> 00:39:38.600 align:start position:0%
effectively final in other words you
 

00:39:38.600 --> 00:39:41.620 align:start position:0%
effectively final in other words you
cannot<00:39:39.080><c> access</c><00:39:39.710><c> a</c><00:39:39.770><c> variable</c><00:39:40.520><c> a</c><00:39:40.880><c> local</c>

00:39:41.620 --> 00:39:41.630 align:start position:0%
cannot access a variable a local
 

00:39:41.630 --> 00:39:44.590 align:start position:0%
cannot access a variable a local
variable<00:39:42.020><c> if</c><00:39:42.740><c> you</c><00:39:42.950><c> are</c><00:39:43.100><c> mutating</c><00:39:43.880><c> it</c><00:39:44.000><c> well</c>

00:39:44.590 --> 00:39:44.600 align:start position:0%
variable if you are mutating it well
 

00:39:44.600 --> 00:39:46.930 align:start position:0%
variable if you are mutating it well
this<00:39:44.960><c> is</c><00:39:45.080><c> a</c><00:39:45.110><c> good</c><00:39:45.410><c> news</c><00:39:45.620><c> this</c><00:39:45.950><c> is</c><00:39:46.100><c> when</c><00:39:46.250><c> Java</c><00:39:46.670><c> is</c>

00:39:46.930 --> 00:39:46.940 align:start position:0%
this is a good news this is when Java is
 

00:39:46.940 --> 00:39:48.630 align:start position:0%
this is a good news this is when Java is
trying<00:39:47.240><c> to</c><00:39:47.360><c> protect</c><00:39:47.780><c> you</c><00:39:47.990><c> in</c><00:39:48.200><c> this</c><00:39:48.350><c> case</c>

00:39:48.630 --> 00:39:48.640 align:start position:0%
trying to protect you in this case
 

00:39:48.640 --> 00:39:51.640 align:start position:0%
trying to protect you in this case
languages<00:39:49.640><c> like</c><00:39:49.820><c> Haskell</c><00:39:50.150><c> are</c><00:39:50.870><c> purely</c>

00:39:51.640 --> 00:39:51.650 align:start position:0%
languages like Haskell are purely
 

00:39:51.650 --> 00:39:53.470 align:start position:0%
languages like Haskell are purely
functional<00:39:52.040><c> languages</c><00:39:52.790><c> there</c><00:39:53.180><c> is</c><00:39:53.210><c> no</c>

00:39:53.470 --> 00:39:53.480 align:start position:0%
functional languages there is no
 

00:39:53.480 --> 00:39:55.720 align:start position:0%
functional languages there is no
assignment<00:39:53.960><c> if</c><00:39:54.710><c> you</c><00:39:54.830><c> tried</c><00:39:55.160><c> something</c><00:39:55.430><c> very</c>

00:39:55.720 --> 00:39:55.730 align:start position:0%
assignment if you tried something very
 

00:39:55.730 --> 00:39:58.140 align:start position:0%
assignment if you tried something very
similar<00:39:56.060><c> to</c><00:39:56.180><c> this</c><00:39:56.300><c> in</c><00:39:56.570><c> c-sharp</c><00:39:56.870><c> or</c>

00:39:58.140 --> 00:39:58.150 align:start position:0%
similar to this in c-sharp or
 

00:39:58.150 --> 00:40:01.200 align:start position:0%
similar to this in c-sharp or
javascript<00:39:58.900><c> are</c><00:39:59.500><c> a</c><00:39:59.559><c> few</c><00:40:00.279><c> other</c><00:40:00.460><c> languages</c>

00:40:01.200 --> 00:40:01.210 align:start position:0%
javascript are a few other languages
 

00:40:01.210 --> 00:40:04.500 align:start position:0%
javascript are a few other languages
those<00:40:01.839><c> languages</c><00:40:02.440><c> will</c><00:40:02.650><c> not</c><00:40:02.980><c> stop</c><00:40:03.520><c> you</c><00:40:03.789><c> Java</c>

00:40:04.500 --> 00:40:04.510 align:start position:0%
those languages will not stop you Java
 

00:40:04.510 --> 00:40:06.510 align:start position:0%
those languages will not stop you Java
is<00:40:04.779><c> trying</c><00:40:05.049><c> to</c><00:40:05.140><c> be</c><00:40:05.230><c> protective</c><00:40:05.920><c> here</c><00:40:06.160><c> and</c><00:40:06.339><c> says</c>

00:40:06.510 --> 00:40:06.520 align:start position:0%
is trying to be protective here and says
 

00:40:06.520 --> 00:40:08.760 align:start position:0%
is trying to be protective here and says
no<00:40:07.119><c> no</c><00:40:07.359><c> no</c><00:40:07.510><c> don't</c><00:40:07.779><c> do</c><00:40:07.960><c> that</c><00:40:08.170><c> that's</c><00:40:08.319><c> not</c><00:40:08.470><c> a</c><00:40:08.589><c> good</c>

00:40:08.760 --> 00:40:08.770 align:start position:0%
no no no don't do that that's not a good
 

00:40:08.770 --> 00:40:11.220 align:start position:0%
no no no don't do that that's not a good
programming<00:40:09.160><c> practice</c><00:40:09.700><c> don't</c><00:40:10.270><c> do</c><00:40:10.569><c> that</c><00:40:10.779><c> well</c>

00:40:11.220 --> 00:40:11.230 align:start position:0%
programming practice don't do that well
 

00:40:11.230 --> 00:40:13.440 align:start position:0%
programming practice don't do that well
that's<00:40:11.440><c> a</c><00:40:11.529><c> good</c><00:40:11.770><c> idea</c><00:40:11.950><c> so</c><00:40:12.400><c> far</c><00:40:12.430><c> but</c><00:40:13.329><c> you</c><00:40:13.420><c> know</c>

00:40:13.440 --> 00:40:13.450 align:start position:0%
that's a good idea so far but you know
 

00:40:13.450 --> 00:40:15.750 align:start position:0%
that's a good idea so far but you know
how<00:40:13.630><c> some</c><00:40:13.869><c> programmers</c><00:40:14.260><c> are</c><00:40:14.619><c> they</c><00:40:15.309><c> will</c><00:40:15.520><c> roll</c>

00:40:15.750 --> 00:40:15.760 align:start position:0%
how some programmers are they will roll
 

00:40:15.760 --> 00:40:17.760 align:start position:0%
how some programmers are they will roll
up<00:40:15.910><c> their</c><00:40:16.029><c> sleeves</c><00:40:16.089><c> and</c><00:40:16.480><c> say</c><00:40:16.690><c> let</c><00:40:17.200><c> me</c><00:40:17.230><c> tell</c><00:40:17.589><c> you</c>

00:40:17.760 --> 00:40:17.770 align:start position:0%
up their sleeves and say let me tell you
 

00:40:17.770 --> 00:40:20.309 align:start position:0%
up their sleeves and say let me tell you
how<00:40:17.890><c> to</c><00:40:17.950><c> really</c><00:40:18.549><c> cheat</c><00:40:18.880><c> Java</c><00:40:19.270><c> these</c><00:40:19.900><c> are</c><00:40:20.140><c> very</c>

00:40:20.309 --> 00:40:20.319 align:start position:0%
how to really cheat Java these are very
 

00:40:20.319 --> 00:40:22.650 align:start position:0%
how to really cheat Java these are very
dangerous<00:40:20.680><c> people</c><00:40:21.400><c> usually</c><00:40:21.579><c> but</c><00:40:22.329><c> what</c><00:40:22.539><c> you</c>

00:40:22.650 --> 00:40:22.660 align:start position:0%
dangerous people usually but what you
 

00:40:22.660 --> 00:40:24.539 align:start position:0%
dangerous people usually but what you
can<00:40:22.869><c> do</c><00:40:23.079><c> potentially</c><00:40:23.440><c> in</c><00:40:23.890><c> this</c><00:40:24.010><c> case</c><00:40:24.250><c> is</c>

00:40:24.539 --> 00:40:24.549 align:start position:0%
can do potentially in this case is
 

00:40:24.549 --> 00:40:26.490 align:start position:0%
can do potentially in this case is
because<00:40:25.270><c> Java</c><00:40:25.839><c> doesn't</c><00:40:26.109><c> all</c><00:40:26.230><c> of</c><00:40:26.260><c> you</c><00:40:26.380><c> to</c>

00:40:26.490 --> 00:40:26.500 align:start position:0%
because Java doesn't all of you to
 

00:40:26.500 --> 00:40:29.279 align:start position:0%
because Java doesn't all of you to
change<00:40:26.740><c> factor</c><00:40:27.400><c> you</c><00:40:28.059><c> may</c><00:40:28.270><c> get</c><00:40:28.420><c> tempted</c><00:40:28.779><c> to</c><00:40:29.049><c> say</c>

00:40:29.279 --> 00:40:29.289 align:start position:0%
change factor you may get tempted to say
 

00:40:29.289 --> 00:40:33.960 align:start position:0%
change factor you may get tempted to say
in<00:40:30.059><c> square</c><00:40:31.059><c> bracket</c><00:40:31.869><c> factor</c><00:40:32.349><c> equals</c><00:40:32.920><c> new</c><00:40:33.640><c> int</c>

00:40:33.960 --> 00:40:33.970 align:start position:0%
in square bracket factor equals new int
 

00:40:33.970 --> 00:40:36.329 align:start position:0%
in square bracket factor equals new int
and<00:40:34.599><c> then</c><00:40:34.960><c> you</c><00:40:35.049><c> could</c><00:40:35.170><c> put</c><00:40:35.319><c> a</c><00:40:35.349><c> two</c><00:40:35.650><c> right</c><00:40:36.039><c> here</c>

00:40:36.329 --> 00:40:36.339 align:start position:0%
and then you could put a two right here
 

00:40:36.339 --> 00:40:39.420 align:start position:0%
and then you could put a two right here
at<00:40:36.789><c> this</c><00:40:37.089><c> point</c><00:40:37.450><c> job</c><00:40:37.779><c> is</c><00:40:37.930><c> gonna</c><00:40:38.140><c> say</c><00:40:38.410><c> good</c><00:40:39.099><c> luck</c>

00:40:39.420 --> 00:40:39.430 align:start position:0%
at this point job is gonna say good luck
 

00:40:39.430 --> 00:40:41.910 align:start position:0%
at this point job is gonna say good luck
and<00:40:39.490><c> be</c><00:40:39.910><c> quiet</c><00:40:40.270><c> so</c><00:40:41.020><c> when</c><00:40:41.230><c> you</c><00:40:41.319><c> run</c><00:40:41.559><c> this</c><00:40:41.859><c> code</c>

00:40:41.910 --> 00:40:41.920 align:start position:0%
and be quiet so when you run this code
 

00:40:41.920 --> 00:40:44.609 align:start position:0%
and be quiet so when you run this code
of<00:40:42.250><c> course</c><00:40:42.520><c> you</c><00:40:42.730><c> got</c><00:40:42.880><c> factor</c><00:40:43.390><c> zero</c><00:40:43.839><c> but</c><00:40:44.440><c> if</c><00:40:44.529><c> I</c>

00:40:44.609 --> 00:40:44.619 align:start position:0%
of course you got factor zero but if I
 

00:40:44.619 --> 00:40:48.180 align:start position:0%
of course you got factor zero but if I
go<00:40:44.829><c> back</c><00:40:45.099><c> here</c><00:40:45.520><c> and</c><00:40:45.700><c> say</c><00:40:46.260><c> factor</c><00:40:47.260><c> zero</c><00:40:47.980><c> is</c>

00:40:48.180 --> 00:40:48.190 align:start position:0%
go back here and say factor zero is
 

00:40:48.190 --> 00:40:52.079 align:start position:0%
go back here and say factor zero is
equal<00:40:48.789><c> to</c><00:40:48.849><c> zero</c><00:40:49.660><c> notice</c><00:40:50.529><c> in</c><00:40:50.950><c> this</c><00:40:51.099><c> case</c><00:40:51.160><c> Java</c>

00:40:52.079 --> 00:40:52.089 align:start position:0%
equal to zero notice in this case Java
 

00:40:52.089 --> 00:40:54.750 align:start position:0%
equal to zero notice in this case Java
will<00:40:52.359><c> no</c><00:40:52.599><c> longer</c><00:40:52.900><c> complain</c><00:40:53.650><c> Java</c><00:40:54.490><c> will</c>

00:40:54.750 --> 00:40:54.760 align:start position:0%
will no longer complain Java will
 

00:40:54.760 --> 00:40:56.519 align:start position:0%
will no longer complain Java will
probably<00:40:55.150><c> sit</c><00:40:55.329><c> there</c><00:40:55.510><c> and</c><00:40:55.660><c> keep</c><00:40:55.809><c> laughing</c><00:40:56.170><c> and</c>

00:40:56.519 --> 00:40:56.529 align:start position:0%
probably sit there and keep laughing and
 

00:40:56.529 --> 00:40:57.900 align:start position:0%
probably sit there and keep laughing and
sale<00:40:56.770><c> there's</c><00:40:57.160><c> going</c><00:40:57.250><c> to</c><00:40:57.309><c> be</c><00:40:57.369><c> fun</c><00:40:57.640><c> watching</c>

00:40:57.900 --> 00:40:57.910 align:start position:0%
sale there's going to be fun watching
 

00:40:57.910 --> 00:41:00.180 align:start position:0%
sale there's going to be fun watching
these<00:40:58.240><c> this</c><00:40:58.809><c> code</c><00:40:59.049><c> but</c><00:40:59.680><c> in</c><00:40:59.770><c> this</c><00:40:59.859><c> case</c><00:41:00.010><c> it</c>

00:41:00.180 --> 00:41:00.190 align:start position:0%
these this code but in this case it
 

00:41:00.190 --> 00:41:02.069 align:start position:0%
these this code but in this case it
won't<00:41:00.309><c> protect</c><00:41:00.549><c> you</c><00:41:00.849><c> anymore</c><00:41:01.150><c> this</c><00:41:01.690><c> is</c><00:41:01.869><c> also</c>

00:41:02.069 --> 00:41:02.079 align:start position:0%
won't protect you anymore this is also
 

00:41:02.079 --> 00:41:04.859 align:start position:0%
won't protect you anymore this is also
true<00:41:02.559><c> if</c><00:41:02.859><c> this</c><00:41:03.099><c> was</c><00:41:03.369><c> a</c><00:41:03.549><c> member</c><00:41:03.910><c> variable</c><00:41:04.539><c> a</c>

00:41:04.859 --> 00:41:04.869 align:start position:0%
true if this was a member variable a
 

00:41:04.869 --> 00:41:07.799 align:start position:0%
true if this was a member variable a
field<00:41:05.470><c> in</c><00:41:05.799><c> your</c><00:41:05.980><c> class</c><00:41:06.339><c> Java</c><00:41:07.240><c> is</c><00:41:07.420><c> no</c><00:41:07.569><c> longer</c>

00:41:07.799 --> 00:41:07.809 align:start position:0%
field in your class Java is no longer
 

00:41:07.809 --> 00:41:09.779 align:start position:0%
field in your class Java is no longer
going<00:41:07.990><c> to</c><00:41:08.049><c> protect</c><00:41:08.410><c> however</c><00:41:09.069><c> keep</c><00:41:09.339><c> in</c><00:41:09.490><c> mind</c>

00:41:09.779 --> 00:41:09.789 align:start position:0%
going to protect however keep in mind
 

00:41:09.789 --> 00:41:14.430 align:start position:0%
going to protect however keep in mind
this<00:41:10.690><c> lambda</c><00:41:11.170><c> disclosure</c><00:41:12.160><c> is</c><00:41:13.150><c> a</c><00:41:13.450><c> bad</c><00:41:13.839><c> closure</c>

00:41:14.430 --> 00:41:14.440 align:start position:0%
this lambda disclosure is a bad closure
 

00:41:14.440 --> 00:41:17.670 align:start position:0%
this lambda disclosure is a bad closure
because<00:41:15.400><c> it's</c><00:41:15.849><c> no</c><00:41:16.029><c> longer</c><00:41:16.059><c> pure</c><00:41:16.869><c> why</c><00:41:17.289><c> is</c><00:41:17.349><c> it</c><00:41:17.559><c> no</c>

00:41:17.670 --> 00:41:17.680 align:start position:0%
because it's no longer pure why is it no
 

00:41:17.680 --> 00:41:19.710 align:start position:0%
because it's no longer pure why is it no
longer<00:41:17.980><c> pure</c><00:41:18.279><c> because</c><00:41:18.880><c> remember</c><00:41:19.390><c> the</c><00:41:19.510><c> two</c>

00:41:19.710 --> 00:41:19.720 align:start position:0%
longer pure because remember the two
 

00:41:19.720 --> 00:41:22.049 align:start position:0%
longer pure because remember the two
rules<00:41:20.049><c> of</c><00:41:20.319><c> purity</c><00:41:20.770><c> a</c><00:41:20.950><c> pure</c><00:41:21.400><c> function</c><00:41:21.700><c> should</c>

00:41:22.049 --> 00:41:22.059 align:start position:0%
rules of purity a pure function should
 

00:41:22.059 --> 00:41:25.170 align:start position:0%
rules of purity a pure function should
not<00:41:22.299><c> change</c><00:41:22.960><c> anything</c><00:41:23.440><c> that's</c><00:41:24.099><c> good</c><00:41:24.520><c> but</c><00:41:25.150><c> a</c>

00:41:25.170 --> 00:41:25.180 align:start position:0%
not change anything that's good but a
 

00:41:25.180 --> 00:41:27.150 align:start position:0%
not change anything that's good but a
pure<00:41:25.420><c> function</c><00:41:25.809><c> should</c><00:41:25.930><c> not</c><00:41:26.109><c> also</c><00:41:26.349><c> depend</c><00:41:26.980><c> on</c>

00:41:27.150 --> 00:41:27.160 align:start position:0%
pure function should not also depend on
 

00:41:27.160 --> 00:41:30.000 align:start position:0%
pure function should not also depend on
anything<00:41:27.609><c> that</c><00:41:27.760><c> changes</c><00:41:28.210><c> well</c><00:41:28.690><c> clearly</c><00:41:29.230><c> this</c>

00:41:30.000 --> 00:41:30.010 align:start position:0%
anything that changes well clearly this
 

00:41:30.010 --> 00:41:31.920 align:start position:0%
anything that changes well clearly this
depends<00:41:30.490><c> on</c><00:41:30.579><c> something</c><00:41:30.819><c> that</c><00:41:31.059><c> changes</c><00:41:31.480><c> in</c>

00:41:31.920 --> 00:41:31.930 align:start position:0%
depends on something that changes in
 

00:41:31.930 --> 00:41:33.480 align:start position:0%
depends on something that changes in
fact<00:41:32.289><c> the</c><00:41:32.440><c> reason</c><00:41:32.799><c> this</c><00:41:32.920><c> is</c><00:41:33.069><c> really</c><00:41:33.460><c> a</c>

00:41:33.480 --> 00:41:33.490 align:start position:0%
fact the reason this is really a
 

00:41:33.490 --> 00:41:36.029 align:start position:0%
fact the reason this is really a
terrible<00:41:34.000><c> code</c><00:41:34.240><c> is</c><00:41:34.450><c> you</c><00:41:35.049><c> can</c><00:41:35.230><c> take</c><00:41:35.440><c> this</c><00:41:35.710><c> code</c>

00:41:36.029 --> 00:41:36.039 align:start position:0%
terrible code is you can take this code
 

00:41:36.039 --> 00:41:39.180 align:start position:0%
terrible code is you can take this code
make<00:41:36.520><c> make</c><00:41:36.730><c> a</c><00:41:36.760><c> pinup</c><00:41:37.180><c> photo</c><00:41:37.809><c> of</c><00:41:38.140><c> this</c><00:41:38.410><c> and</c><00:41:38.710><c> show</c>

00:41:39.180 --> 00:41:39.190 align:start position:0%
make make a pinup photo of this and show
 

00:41:39.190 --> 00:41:41.130 align:start position:0%
make make a pinup photo of this and show
it<00:41:39.309><c> to</c><00:41:39.339><c> different</c><00:41:39.880><c> people</c><00:41:40.359><c> and</c><00:41:40.630><c> ask</c><00:41:40.809><c> them</c>

00:41:41.130 --> 00:41:41.140 align:start position:0%
it to different people and ask them
 

00:41:41.140 --> 00:41:44.760 align:start position:0%
it to different people and ask them
what's<00:41:41.829><c> going</c><00:41:42.010><c> to</c><00:41:42.250><c> be</c><00:41:42.339><c> the</c><00:41:42.490><c> output</c><00:41:42.730><c> I</c><00:41:43.180><c> -</c><00:41:44.140><c> you're</c>

00:41:44.760 --> 00:41:44.770 align:start position:0%
what's going to be the output I - you're
 

00:41:44.770 --> 00:41:46.559 align:start position:0%
what's going to be the output I - you're
going<00:41:44.980><c> to</c><00:41:45.039><c> get</c><00:41:45.160><c> different</c><00:41:45.339><c> answers</c><00:41:45.849><c> from</c><00:41:46.390><c> the</c>

00:41:46.559 --> 00:41:46.569 align:start position:0%
going to get different answers from the
 

00:41:46.569 --> 00:41:48.299 align:start position:0%
going to get different answers from the
people<00:41:46.720><c> and</c><00:41:47.109><c> some</c><00:41:47.650><c> of</c><00:41:47.740><c> them</c><00:41:47.890><c> will</c><00:41:48.039><c> tell</c><00:41:48.250><c> you</c>

00:41:48.299 --> 00:41:48.309 align:start position:0%
people and some of them will tell you
 

00:41:48.309 --> 00:41:52.319 align:start position:0%
people and some of them will tell you
well<00:41:49.089><c> because</c><00:41:49.740><c> two-factor</c><00:41:50.740><c> 0</c><00:41:51.010><c> is</c><00:41:51.160><c> -</c><00:41:51.490><c> this</c><00:41:52.210><c> is</c>

00:41:52.319 --> 00:41:52.329 align:start position:0%
well because two-factor 0 is - this is
 

00:41:52.329 --> 00:41:53.970 align:start position:0%
well because two-factor 0 is - this is
going<00:41:52.510><c> to</c><00:41:52.599><c> be</c><00:41:52.690><c> the</c><00:41:52.960><c> double</c><00:41:53.140><c> of</c><00:41:53.470><c> the</c><00:41:53.589><c> values</c>

00:41:53.970 --> 00:41:53.980 align:start position:0%
going to be the double of the values
 

00:41:53.980 --> 00:41:57.180 align:start position:0%
going to be the double of the values
other<00:41:54.369><c> people</c><00:41:54.970><c> may</c><00:41:55.119><c> say</c><00:41:55.420><c> because</c><00:41:56.109><c> factor</c><00:41:56.529><c> is</c><00:41:56.680><c> 0</c>

00:41:57.180 --> 00:41:57.190 align:start position:0%
other people may say because factor is 0
 

00:41:57.190 --> 00:42:00.420 align:start position:0%
other people may say because factor is 0
now<00:41:57.490><c> it's</c><00:41:57.970><c> going</c><00:41:58.210><c> to</c><00:41:58.270><c> be</c><00:41:58.359><c> 0</c><00:41:58.750><c> but</c><00:41:59.349><c> which</c><00:41:59.799><c> one</c><00:42:00.069><c> is</c>

00:42:00.420 --> 00:42:00.430 align:start position:0%
now it's going to be 0 but which one is
 

00:42:00.430 --> 00:42:03.089 align:start position:0%
now it's going to be 0 but which one is
it<00:42:00.640><c> the</c><00:42:01.029><c> right</c><00:42:01.210><c> answer</c><00:42:01.750><c> is</c><00:42:01.779><c> should</c><00:42:02.589><c> we</c><00:42:02.740><c> really</c>

00:42:03.089 --> 00:42:03.099 align:start position:0%
it the right answer is should we really
 

00:42:03.099 --> 00:42:05.819 align:start position:0%
it the right answer is should we really
be<00:42:03.279><c> doing</c><00:42:03.789><c> such</c><00:42:04.000><c> programming</c><00:42:04.690><c> because</c><00:42:05.319><c> if</c><00:42:05.650><c> you</c>

00:42:05.819 --> 00:42:05.829 align:start position:0%
be doing such programming because if you
 

00:42:05.829 --> 00:42:07.980 align:start position:0%
be doing such programming because if you
are<00:42:05.920><c> trying</c><00:42:06.190><c> to</c><00:42:06.279><c> write</c><00:42:06.430><c> code</c><00:42:06.730><c> like</c><00:42:06.789><c> this</c><00:42:07.329><c> this</c>

00:42:07.980 --> 00:42:07.990 align:start position:0%
are trying to write code like this this
 

00:42:07.990 --> 00:42:11.069 align:start position:0%
are trying to write code like this this
is<00:42:08.289><c> hard</c><00:42:08.589><c> to</c><00:42:08.799><c> reason</c><00:42:09.359><c> error-prone</c><00:42:10.359><c> very</c>

00:42:11.069 --> 00:42:11.079 align:start position:0%
is hard to reason error-prone very
 

00:42:11.079 --> 00:42:12.100 align:start position:0%
is hard to reason error-prone very
difficult<00:42:11.589><c> to</c><00:42:11.680><c> work</c>

00:42:12.100 --> 00:42:12.110 align:start position:0%
difficult to work
 

00:42:12.110 --> 00:42:15.520 align:start position:0%
difficult to work
this<00:42:12.740><c> is</c><00:42:13.010><c> also</c><00:42:13.430><c> known</c><00:42:13.610><c> as</c><00:42:13.760><c> bad</c><00:42:14.210><c> idea</c><00:42:14.660><c> so</c><00:42:15.260><c> don't</c>

00:42:15.520 --> 00:42:15.530 align:start position:0%
this is also known as bad idea so don't
 

00:42:15.530 --> 00:42:18.550 align:start position:0%
this is also known as bad idea so don't
do<00:42:15.740><c> this</c><00:42:15.920><c> so</c><00:42:16.310><c> this</c><00:42:16.490><c> is</c><00:42:16.670><c> the</c><00:42:16.820><c> reason</c><00:42:17.180><c> why</c><00:42:17.560><c> the</c>

00:42:18.550 --> 00:42:18.560 align:start position:0%
do this so this is the reason why the
 

00:42:18.560 --> 00:42:21.100 align:start position:0%
do this so this is the reason why the
purity<00:42:19.040><c> of</c><00:42:19.130><c> functions</c><00:42:19.520><c> is</c><00:42:19.640><c> so</c><00:42:19.880><c> important</c><00:42:20.600><c> we</c>

00:42:21.100 --> 00:42:21.110 align:start position:0%
purity of functions is so important we
 

00:42:21.110 --> 00:42:22.660 align:start position:0%
purity of functions is so important we
don't<00:42:21.440><c> want</c><00:42:21.800><c> to</c><00:42:21.890><c> be</c><00:42:21.950><c> messing</c><00:42:22.190><c> with</c><00:42:22.370><c> things</c>

00:42:22.660 --> 00:42:22.670 align:start position:0%
don't want to be messing with things
 

00:42:22.670 --> 00:42:24.790 align:start position:0%
don't want to be messing with things
like<00:42:22.970><c> this</c><00:42:23.210><c> we</c><00:42:23.720><c> want</c><00:42:23.930><c> to</c><00:42:23.960><c> preserve</c><00:42:24.170><c> the</c><00:42:24.440><c> purity</c>

00:42:24.790 --> 00:42:24.800 align:start position:0%
like this we want to preserve the purity
 

00:42:24.800 --> 00:42:26.800 align:start position:0%
like this we want to preserve the purity
of<00:42:25.040><c> closures</c><00:42:25.520><c> that</c><00:42:26.060><c> becomes</c><00:42:26.420><c> extremely</c>

00:42:26.800 --> 00:42:26.810 align:start position:0%
of closures that becomes extremely
 

00:42:26.810 --> 00:42:29.230 align:start position:0%
of closures that becomes extremely
important<00:42:27.530><c> so</c><00:42:27.980><c> we</c><00:42:28.130><c> shouldn't</c><00:42:28.520><c> mix</c><00:42:28.850><c> the</c>

00:42:29.230 --> 00:42:29.240 align:start position:0%
important so we shouldn't mix the
 

00:42:29.240 --> 00:42:31.630 align:start position:0%
important so we shouldn't mix the
impurity<00:42:30.020><c> with</c><00:42:30.260><c> these</c><00:42:30.620><c> but</c><00:42:31.250><c> this</c><00:42:31.400><c> also</c>

00:42:31.630 --> 00:42:31.640 align:start position:0%
impurity with these but this also
 

00:42:31.640 --> 00:42:33.910 align:start position:0%
impurity with these but this also
illustrates<00:42:32.090><c> the</c><00:42:32.660><c> point</c><00:42:32.900><c> about</c><00:42:33.230><c> lazy</c>

00:42:33.910 --> 00:42:33.920 align:start position:0%
illustrates the point about lazy
 

00:42:33.920 --> 00:42:36.370 align:start position:0%
illustrates the point about lazy
evaluation<00:42:34.480><c> so</c><00:42:35.480><c> let's</c><00:42:35.720><c> talk</c><00:42:35.840><c> about</c><00:42:35.900><c> lazy</c>

00:42:36.370 --> 00:42:36.380 align:start position:0%
evaluation so let's talk about lazy
 

00:42:36.380 --> 00:42:38.590 align:start position:0%
evaluation so let's talk about lazy
evaluation<00:42:36.590><c> got</c><00:42:37.370><c> an</c><00:42:37.460><c> entire</c><00:42:37.790><c> talk</c><00:42:38.060><c> on</c><00:42:38.360><c> lazy</c>

00:42:38.590 --> 00:42:38.600 align:start position:0%
evaluation got an entire talk on lazy
 

00:42:38.600 --> 00:42:40.720 align:start position:0%
evaluation got an entire talk on lazy
evaluation<00:42:38.780><c> tomorrow</c><00:42:39.320><c> but</c><00:42:40.250><c> I'll</c><00:42:40.340><c> simply</c>

00:42:40.720 --> 00:42:40.730 align:start position:0%
evaluation tomorrow but I'll simply
 

00:42:40.730 --> 00:42:42.270 align:start position:0%
evaluation tomorrow but I'll simply
merely<00:42:41.000><c> scratch</c><00:42:41.390><c> the</c><00:42:41.570><c> surface</c><00:42:41.750><c> right</c><00:42:42.140><c> now</c>

00:42:42.270 --> 00:42:42.280 align:start position:0%
merely scratch the surface right now
 

00:42:42.280 --> 00:42:45.940 align:start position:0%
merely scratch the surface right now
notice<00:42:43.280><c> that</c><00:42:43.310><c> on</c><00:42:43.610><c> line</c><00:42:43.880><c> 13</c><00:42:44.720><c> we</c><00:42:45.380><c> had</c><00:42:45.560><c> a</c><00:42:45.590><c> lambda</c>

00:42:45.940 --> 00:42:45.950 align:start position:0%
notice that on line 13 we had a lambda
 

00:42:45.950 --> 00:42:48.610 align:start position:0%
notice that on line 13 we had a lambda
expression<00:42:46.310><c> sitting</c><00:42:47.150><c> on</c><00:42:47.270><c> line</c><00:42:47.480><c> 13</c><00:42:48.020><c> that</c>

00:42:48.610 --> 00:42:48.620 align:start position:0%
expression sitting on line 13 that
 

00:42:48.620 --> 00:42:51.970 align:start position:0%
expression sitting on line 13 that
lambda<00:42:49.040><c> expression</c><00:42:49.850><c> on</c><00:42:49.970><c> line</c><00:42:50.150><c> 13</c><00:42:50.810><c> did</c><00:42:51.590><c> not</c>

00:42:51.970 --> 00:42:51.980 align:start position:0%
lambda expression on line 13 did not
 

00:42:51.980 --> 00:42:55.840 align:start position:0%
lambda expression on line 13 did not
execute<00:42:52.610><c> right</c><00:42:53.180><c> now</c><00:42:53.540><c> as</c><00:42:53.960><c> you</c><00:42:54.680><c> walk</c><00:42:54.980><c> over</c><00:42:55.310><c> line</c>

00:42:55.840 --> 00:42:55.850 align:start position:0%
execute right now as you walk over line
 

00:42:55.850 --> 00:42:59.350 align:start position:0%
execute right now as you walk over line
13<00:42:56.300><c> during</c><00:42:56.510><c> execution</c><00:42:57.460><c> instead</c><00:42:58.460><c> it</c><00:42:58.850><c> waits</c>

00:42:59.350 --> 00:42:59.360 align:start position:0%
13 during execution instead it waits
 

00:42:59.360 --> 00:43:02.710 align:start position:0%
13 during execution instead it waits
until<00:42:59.600><c> you</c><00:43:00.170><c> come</c><00:43:00.410><c> to</c><00:43:00.590><c> line</c><00:43:00.740><c> 17</c><00:43:01.640><c> and</c><00:43:02.060><c> that's</c>

00:43:02.710 --> 00:43:02.720 align:start position:0%
until you come to line 17 and that's
 

00:43:02.720 --> 00:43:05.470 align:start position:0%
until you come to line 17 and that's
when<00:43:03.110><c> that</c><00:43:03.320><c> line</c><00:43:03.590><c> 13</c><00:43:04.040><c> is</c><00:43:04.070><c> executing</c><00:43:04.760><c> that</c><00:43:05.270><c> is</c>

00:43:05.470 --> 00:43:05.480 align:start position:0%
when that line 13 is executing that is
 

00:43:05.480 --> 00:43:08.380 align:start position:0%
when that line 13 is executing that is
lazy<00:43:05.900><c> evaluation</c><00:43:06.140><c> or</c><00:43:06.920><c> deferred</c><00:43:07.340><c> execution</c><00:43:08.030><c> it</c>

00:43:08.380 --> 00:43:08.390 align:start position:0%
lazy evaluation or deferred execution it
 

00:43:08.390 --> 00:43:10.630 align:start position:0%
lazy evaluation or deferred execution it
says<00:43:08.780><c> I</c><00:43:09.140><c> don't</c><00:43:09.410><c> need</c><00:43:09.650><c> to</c><00:43:09.830><c> be</c><00:43:09.920><c> doing</c><00:43:10.160><c> this</c><00:43:10.310><c> now</c>

00:43:10.630 --> 00:43:10.640 align:start position:0%
says I don't need to be doing this now
 

00:43:10.640 --> 00:43:14.140 align:start position:0%
says I don't need to be doing this now
well<00:43:11.590><c> functional</c><00:43:12.590><c> programming</c><00:43:13.010><c> cares</c><00:43:13.730><c> a</c><00:43:13.880><c> lot</c>

00:43:14.140 --> 00:43:14.150 align:start position:0%
well functional programming cares a lot
 

00:43:14.150 --> 00:43:16.090 align:start position:0%
well functional programming cares a lot
about<00:43:14.390><c> this</c><00:43:14.870><c> so</c><00:43:15.290><c> I'm</c><00:43:15.500><c> going</c><00:43:15.620><c> to</c><00:43:15.710><c> go</c><00:43:15.800><c> ahead</c><00:43:15.860><c> and</c>

00:43:16.090 --> 00:43:16.100 align:start position:0%
about this so I'm going to go ahead and
 

00:43:16.100 --> 00:43:18.190 align:start position:0%
about this so I'm going to go ahead and
say<00:43:16.370><c> here</c><00:43:16.910><c> if</c><00:43:17.060><c> somebody</c><00:43:17.570><c> comes</c><00:43:17.870><c> to</c><00:43:17.960><c> you</c><00:43:18.080><c> and</c>

00:43:18.190 --> 00:43:18.200 align:start position:0%
say here if somebody comes to you and
 

00:43:18.200 --> 00:43:20.800 align:start position:0%
say here if somebody comes to you and
says<00:43:18.440><c> are</c><00:43:18.800><c> you</c><00:43:18.860><c> a</c><00:43:19.280><c> fan</c><00:43:19.670><c> of</c><00:43:19.810><c> object-oriented</c>

00:43:20.800 --> 00:43:20.810 align:start position:0%
says are you a fan of object-oriented
 

00:43:20.810 --> 00:43:23.260 align:start position:0%
says are you a fan of object-oriented
programming<00:43:21.320><c> you</c><00:43:21.560><c> say</c><00:43:21.740><c> oh</c><00:43:21.920><c> I</c><00:43:22.040><c> love</c><00:43:22.550><c> object</c><00:43:22.970><c> of</c>

00:43:23.260 --> 00:43:23.270 align:start position:0%
programming you say oh I love object of
 

00:43:23.270 --> 00:43:25.840 align:start position:0%
programming you say oh I love object of
the<00:43:23.360><c> programming</c><00:43:23.720><c> well</c><00:43:24.230><c> why</c><00:43:24.530><c> do</c><00:43:24.980><c> you</c><00:43:25.040><c> care</c><00:43:25.490><c> so</c>

00:43:25.840 --> 00:43:25.850 align:start position:0%
the programming well why do you care so
 

00:43:25.850 --> 00:43:27.580 align:start position:0%
the programming well why do you care so
much<00:43:25.910><c> of</c><00:43:26.150><c> an</c><00:43:26.270><c> object</c><00:43:26.600><c> into</c><00:43:26.690><c> programming</c><00:43:27.080><c> well</c>

00:43:27.580 --> 00:43:27.590 align:start position:0%
much of an object into programming well
 

00:43:27.590 --> 00:43:28.600 align:start position:0%
much of an object into programming well
don't<00:43:27.800><c> get</c><00:43:27.920><c> me</c><00:43:28.100><c> wrong</c>

00:43:28.600 --> 00:43:28.610 align:start position:0%
don't get me wrong
 

00:43:28.610 --> 00:43:29.980 align:start position:0%
don't get me wrong
things<00:43:28.790><c> like</c><00:43:28.970><c> abstraction</c><00:43:29.870><c> and</c>

00:43:29.980 --> 00:43:29.990 align:start position:0%
things like abstraction and
 

00:43:29.990 --> 00:43:33.040 align:start position:0%
things like abstraction and
encapsulation<00:43:30.050><c> are</c><00:43:31.420><c> extremely</c><00:43:32.420><c> important</c>

00:43:33.040 --> 00:43:33.050 align:start position:0%
encapsulation are extremely important
 

00:43:33.050 --> 00:43:34.750 align:start position:0%
encapsulation are extremely important
but<00:43:33.530><c> you're</c><00:43:33.680><c> not</c><00:43:33.860><c> programming</c><00:43:34.640><c> an</c>

00:43:34.750 --> 00:43:34.760 align:start position:0%
but you're not programming an
 

00:43:34.760 --> 00:43:37.300 align:start position:0%
but you're not programming an
object-oriented<00:43:35.450><c> system</c><00:43:35.990><c> just</c><00:43:36.620><c> for</c><00:43:36.740><c> extract</c>

00:43:37.300 --> 00:43:37.310 align:start position:0%
object-oriented system just for extract
 

00:43:37.310 --> 00:43:40.030 align:start position:0%
object-oriented system just for extract
or<00:43:37.430><c> encapsulation</c><00:43:38.330><c> the</c><00:43:38.720><c> real</c><00:43:39.080><c> real</c><00:43:39.530><c> power</c><00:43:39.890><c> of</c>

00:43:40.030 --> 00:43:40.040 align:start position:0%
or encapsulation the real real power of
 

00:43:40.040 --> 00:43:43.420 align:start position:0%
or encapsulation the real real power of
object<00:43:40.580><c> programming</c><00:43:41.180><c> is</c><00:43:42.040><c> polymorphism</c><00:43:43.040><c> after</c>

00:43:43.420 --> 00:43:43.430 align:start position:0%
object programming is polymorphism after
 

00:43:43.430 --> 00:43:46.680 align:start position:0%
object programming is polymorphism after
all<00:43:43.550><c> isn't</c><00:43:43.790><c> it</c><00:43:44.120><c> so</c><00:43:44.560><c> polymorphism</c><00:43:45.560><c> is</c><00:43:45.920><c> -</c>

00:43:46.680 --> 00:43:46.690 align:start position:0%
all isn't it so polymorphism is -
 

00:43:46.690 --> 00:43:50.530 align:start position:0%
all isn't it so polymorphism is -
object-oriented<00:43:48.340><c> programming</c><00:43:49.340><c> so</c><00:43:50.000><c> in</c><00:43:50.360><c> other</c>

00:43:50.530 --> 00:43:50.540 align:start position:0%
object-oriented programming so in other
 

00:43:50.540 --> 00:43:52.690 align:start position:0%
object-oriented programming so in other
words<00:43:50.840><c> this</c><00:43:51.440><c> is</c><00:43:51.590><c> what</c><00:43:51.740><c> we</c><00:43:51.890><c> really</c><00:43:52.370><c> are</c><00:43:52.400><c> after</c>

00:43:52.690 --> 00:43:52.700 align:start position:0%
words this is what we really are after
 

00:43:52.700 --> 00:43:56.430 align:start position:0%
words this is what we really are after
now<00:43:53.360><c> we</c><00:43:53.810><c> all</c><00:43:53.930><c> can</c><00:43:54.200><c> agree</c><00:43:54.350><c> you</c><00:43:55.160><c> cannot</c><00:43:55.790><c> enjoy</c>

00:43:56.430 --> 00:43:56.440 align:start position:0%
now we all can agree you cannot enjoy
 

00:43:56.440 --> 00:43:59.440 align:start position:0%
now we all can agree you cannot enjoy
polymorphism<00:43:57.440><c> without</c><00:43:58.340><c> abstraction</c><00:43:59.120><c> you</c>

00:43:59.440 --> 00:43:59.450 align:start position:0%
polymorphism without abstraction you
 

00:43:59.450 --> 00:44:01.990 align:start position:0%
polymorphism without abstraction you
cannot<00:43:59.930><c> enjoy</c><00:44:00.250><c> polymorphism</c><00:44:01.250><c> without</c>

00:44:01.990 --> 00:44:02.000 align:start position:0%
cannot enjoy polymorphism without
 

00:44:02.000 --> 00:44:05.440 align:start position:0%
cannot enjoy polymorphism without
encapsulation<00:44:02.990><c> but</c><00:44:03.380><c> polymorphism</c><00:44:04.370><c> is</c><00:44:04.700><c> what</c>

00:44:05.440 --> 00:44:05.450 align:start position:0%
encapsulation but polymorphism is what
 

00:44:05.450 --> 00:44:08.050 align:start position:0%
encapsulation but polymorphism is what
we<00:44:05.600><c> really</c><00:44:05.840><c> are</c><00:44:06.020><c> after</c><00:44:06.530><c> an</c><00:44:06.770><c> abstraction</c><00:44:07.760><c> and</c>

00:44:08.050 --> 00:44:08.060 align:start position:0%
we really are after an abstraction and
 

00:44:08.060 --> 00:44:10.300 align:start position:0%
we really are after an abstraction and
encapsulation<00:44:08.440><c> really</c><00:44:09.440><c> makes</c><00:44:09.650><c> it</c><00:44:09.800><c> possible</c>

00:44:10.300 --> 00:44:10.310 align:start position:0%
encapsulation really makes it possible
 

00:44:10.310 --> 00:44:12.460 align:start position:0%
encapsulation really makes it possible
so<00:44:10.720><c> polymorphism</c><00:44:11.720><c> is</c><00:44:11.870><c> to</c><00:44:12.080><c> optical</c>

00:44:12.460 --> 00:44:12.470 align:start position:0%
so polymorphism is to optical
 

00:44:12.470 --> 00:44:15.610 align:start position:0%
so polymorphism is to optical
programming<00:44:13.160><c> like</c><00:44:13.910><c> and</c><00:44:14.420><c> I'm</c><00:44:15.140><c> going</c><00:44:15.350><c> to</c><00:44:15.440><c> say</c>

00:44:15.610 --> 00:44:15.620 align:start position:0%
programming like and I'm going to say
 

00:44:15.620 --> 00:44:20.180 align:start position:0%
programming like and I'm going to say
lazy<00:44:16.280><c> evaluation</c><00:44:17.230><c> evaluation</c><00:44:18.760><c> is</c><00:44:19.760><c> to</c>

00:44:20.180 --> 00:44:20.190 align:start position:0%
lazy evaluation evaluation is to
 

00:44:20.190 --> 00:44:21.300 align:start position:0%
lazy evaluation evaluation is to
[Music]

00:44:21.300 --> 00:44:21.310 align:start position:0%
[Music]
 

00:44:21.310 --> 00:44:25.400 align:start position:0%
[Music]
evaluation<00:44:22.310><c> is</c><00:44:22.610><c> to</c><00:44:22.990><c> functional</c><00:44:23.990><c> programming</c>

00:44:25.400 --> 00:44:25.410 align:start position:0%
evaluation is to functional programming
 

00:44:25.410 --> 00:44:27.710 align:start position:0%
evaluation is to functional programming
of<00:44:25.650><c> course</c><00:44:25.950><c> if</c><00:44:26.520><c> you're</c><00:44:26.790><c> going</c><00:44:26.970><c> to</c><00:44:27.090><c> have</c><00:44:27.330><c> lazy</c>

00:44:27.710 --> 00:44:27.720 align:start position:0%
of course if you're going to have lazy
 

00:44:27.720 --> 00:44:30.500 align:start position:0%
of course if you're going to have lazy
valuation<00:44:28.590><c> you</c><00:44:29.220><c> cannot</c><00:44:29.880><c> have</c><00:44:30.240><c> lazy</c>

00:44:30.500 --> 00:44:30.510 align:start position:0%
valuation you cannot have lazy
 

00:44:30.510 --> 00:44:34.010 align:start position:0%
valuation you cannot have lazy
evaluation<00:44:31.010><c> without</c><00:44:32.360><c> immutability</c><00:44:33.360><c> that's</c>

00:44:34.010 --> 00:44:34.020 align:start position:0%
evaluation without immutability that's
 

00:44:34.020 --> 00:44:35.840 align:start position:0%
evaluation without immutability that's
exactly<00:44:34.500><c> what</c><00:44:34.650><c> we</c><00:44:34.830><c> saw</c><00:44:35.010><c> in</c><00:44:35.040><c> this</c><00:44:35.400><c> example</c>

00:44:35.840 --> 00:44:35.850 align:start position:0%
exactly what we saw in this example
 

00:44:35.850 --> 00:44:38.330 align:start position:0%
exactly what we saw in this example
because<00:44:36.660><c> what</c><00:44:37.170><c> is</c><00:44:37.320><c> immutability</c><00:44:37.860><c> do</c>

00:44:38.330 --> 00:44:38.340 align:start position:0%
because what is immutability do
 

00:44:38.340 --> 00:44:41.540 align:start position:0%
because what is immutability do
amiability<00:44:39.300><c> says</c><00:44:39.810><c> this</c><00:44:40.680><c> function</c><00:44:41.220><c> will</c><00:44:41.370><c> not</c>

00:44:41.540 --> 00:44:41.550 align:start position:0%
amiability says this function will not
 

00:44:41.550 --> 00:44:44.390 align:start position:0%
amiability says this function will not
modify<00:44:42.120><c> anything</c><00:44:42.780><c> and</c><00:44:43.020><c> it</c><00:44:43.530><c> is</c><00:44:43.560><c> not</c><00:44:43.830><c> depending</c>

00:44:44.390 --> 00:44:44.400 align:start position:0%
modify anything and it is not depending
 

00:44:44.400 --> 00:44:46.610 align:start position:0%
modify anything and it is not depending
on<00:44:44.550><c> anything</c><00:44:44.820><c> that</c><00:44:45.000><c> will</c><00:44:45.270><c> change</c><00:44:45.570><c> so</c><00:44:46.260><c> you</c><00:44:46.290><c> can</c>

00:44:46.610 --> 00:44:46.620 align:start position:0%
on anything that will change so you can
 

00:44:46.620 --> 00:44:49.850 align:start position:0%
on anything that will change so you can
run<00:44:46.800><c> it</c><00:44:46.980><c> now</c><00:44:47.340><c> you</c><00:44:48.000><c> can</c><00:44:48.180><c> find</c><00:44:48.390><c> it</c><00:44:48.510><c> later</c><00:44:48.540><c> or</c><00:44:49.350><c> run</c>

00:44:49.850 --> 00:44:49.860 align:start position:0%
run it now you can find it later or run
 

00:44:49.860 --> 00:44:52.400 align:start position:0%
run it now you can find it later or run
never<00:44:50.280><c> run</c><00:44:50.520><c> it</c><00:44:50.640><c> at</c><00:44:50.820><c> all</c><00:44:51.000><c> well</c><00:44:51.690><c> if</c><00:44:51.990><c> it</c><00:44:52.290><c> is</c><00:44:52.380><c> a</c>

00:44:52.400 --> 00:44:52.410 align:start position:0%
never run it at all well if it is a
 

00:44:52.410 --> 00:44:56.000 align:start position:0%
never run it at all well if it is a
impure<00:44:53.010><c> function</c><00:44:53.700><c> you</c><00:44:54.360><c> are</c><00:44:54.630><c> urgent</c><00:44:55.440><c> to</c><00:44:55.620><c> run</c><00:44:55.830><c> it</c>

00:44:56.000 --> 00:44:56.010 align:start position:0%
impure function you are urgent to run it
 

00:44:56.010 --> 00:44:57.650 align:start position:0%
impure function you are urgent to run it
you're<00:44:56.400><c> going</c><00:44:56.520><c> to</c><00:44:56.580><c> say</c><00:44:56.700><c> run</c><00:44:56.880><c> it</c><00:44:57.030><c> fast</c><00:44:57.300><c> run</c><00:44:57.540><c> it</c>

00:44:57.650 --> 00:44:57.660 align:start position:0%
you're going to say run it fast run it
 

00:44:57.660 --> 00:45:00.440 align:start position:0%
you're going to say run it fast run it
now<00:44:57.900><c> before</c><00:44:58.530><c> the</c><00:44:58.770><c> world</c><00:44:59.070><c> changes</c><00:44:59.760><c> and</c><00:45:00.030><c> you're</c>

00:45:00.440 --> 00:45:00.450 align:start position:0%
now before the world changes and you're
 

00:45:00.450 --> 00:45:02.210 align:start position:0%
now before the world changes and you're
going<00:45:00.570><c> to</c><00:45:00.630><c> be</c><00:45:00.690><c> in</c><00:45:00.750><c> a</c><00:45:00.810><c> hurry</c><00:45:01.020><c> all</c><00:45:01.470><c> the</c><00:45:01.710><c> time</c><00:45:01.920><c> and</c>

00:45:02.210 --> 00:45:02.220 align:start position:0%
going to be in a hurry all the time and
 

00:45:02.220 --> 00:45:04.490 align:start position:0%
going to be in a hurry all the time and
you<00:45:02.580><c> ask</c><00:45:02.760><c> the</c><00:45:02.910><c> question</c><00:45:03.300><c> when</c><00:45:03.690><c> did</c><00:45:04.020><c> this</c><00:45:04.200><c> run</c>

00:45:04.490 --> 00:45:04.500 align:start position:0%
you ask the question when did this run
 

00:45:04.500 --> 00:45:06.170 align:start position:0%
you ask the question when did this run
did<00:45:04.770><c> it</c><00:45:04.860><c> run</c><00:45:05.040><c> before</c><00:45:05.220><c> the</c><00:45:05.550><c> change</c><00:45:05.790><c> or</c><00:45:05.940><c> after</c>

00:45:06.170 --> 00:45:06.180 align:start position:0%
did it run before the change or after
 

00:45:06.180 --> 00:45:08.420 align:start position:0%
did it run before the change or after
the<00:45:06.300><c> change</c><00:45:06.570><c> you</c><00:45:07.140><c> can</c><00:45:07.410><c> completely</c><00:45:07.860><c> defeat</c><00:45:08.310><c> the</c>

00:45:08.420 --> 00:45:08.430 align:start position:0%
the change you can completely defeat the
 

00:45:08.430 --> 00:45:11.780 align:start position:0%
the change you can completely defeat the
purpose<00:45:08.820><c> so</c><00:45:09.270><c> you</c><00:45:09.330><c> cannot</c><00:45:09.930><c> be</c><00:45:10.260><c> lazy</c><00:45:10.790><c> without</c>

00:45:11.780 --> 00:45:11.790 align:start position:0%
purpose so you cannot be lazy without
 

00:45:11.790 --> 00:45:14.900 align:start position:0%
purpose so you cannot be lazy without
being<00:45:12.390><c> having</c><00:45:12.930><c> immutability</c><00:45:13.620><c> and</c><00:45:14.010><c> laziness</c>

00:45:14.900 --> 00:45:14.910 align:start position:0%
being having immutability and laziness
 

00:45:14.910 --> 00:45:16.780 align:start position:0%
being having immutability and laziness
is<00:45:15.240><c> an</c><00:45:15.360><c> extremely</c><00:45:15.930><c> important</c><00:45:16.380><c> thing</c><00:45:16.410><c> because</c>

00:45:16.780 --> 00:45:16.790 align:start position:0%
is an extremely important thing because
 

00:45:16.790 --> 00:45:19.700 align:start position:0%
is an extremely important thing because
laziness<00:45:17.790><c> leads</c><00:45:18.000><c> to</c><00:45:18.300><c> efficiency</c><00:45:19.260><c> in</c><00:45:19.440><c> code</c>

00:45:19.700 --> 00:45:19.710 align:start position:0%
laziness leads to efficiency in code
 

00:45:19.710 --> 00:45:21.560 align:start position:0%
laziness leads to efficiency in code
because<00:45:20.550><c> you're</c><00:45:20.790><c> not</c><00:45:20.940><c> sitting</c><00:45:21.210><c> there</c><00:45:21.450><c> and</c>

00:45:21.560 --> 00:45:21.570 align:start position:0%
because you're not sitting there and
 

00:45:21.570 --> 00:45:23.840 align:start position:0%
because you're not sitting there and
making<00:45:21.870><c> copies</c><00:45:22.110><c> and</c><00:45:22.440><c> copies</c><00:45:22.500><c> of</c><00:45:22.860><c> objects</c><00:45:23.490><c> you</c>

00:45:23.840 --> 00:45:23.850 align:start position:0%
making copies and copies of objects you
 

00:45:23.850 --> 00:45:25.850 align:start position:0%
making copies and copies of objects you
can<00:45:24.060><c> defer</c><00:45:24.480><c> execution</c><00:45:25.140><c> until</c><00:45:25.410><c> a</c><00:45:25.440><c> much</c><00:45:25.650><c> later</c>

00:45:25.850 --> 00:45:25.860 align:start position:0%
can defer execution until a much later
 

00:45:25.860 --> 00:45:28.280 align:start position:0%
can defer execution until a much later
time<00:45:26.250><c> and</c><00:45:26.460><c> have</c><00:45:26.910><c> those</c><00:45:27.120><c> executed</c><00:45:27.780><c> very</c><00:45:27.990><c> nicely</c>

00:45:28.280 --> 00:45:28.290 align:start position:0%
time and have those executed very nicely
 

00:45:28.290 --> 00:45:30.020 align:start position:0%
time and have those executed very nicely
that's<00:45:29.010><c> one</c><00:45:29.190><c> of</c><00:45:29.280><c> the</c><00:45:29.340><c> biggest</c><00:45:29.490><c> benefits</c><00:45:29.940><c> you</c>

00:45:30.020 --> 00:45:30.030 align:start position:0%
that's one of the biggest benefits you
 

00:45:30.030 --> 00:45:33.260 align:start position:0%
that's one of the biggest benefits you
get<00:45:30.210><c> out</c><00:45:30.420><c> of</c><00:45:30.570><c> this</c><00:45:30.690><c> so</c><00:45:31.470><c> to</c><00:45:31.980><c> wrap</c><00:45:32.190><c> this</c><00:45:32.460><c> up</c><00:45:32.730><c> one</c>

00:45:33.260 --> 00:45:33.270 align:start position:0%
get out of this so to wrap this up one
 

00:45:33.270 --> 00:45:35.930 align:start position:0%
get out of this so to wrap this up one
of<00:45:33.390><c> the</c><00:45:33.480><c> real</c><00:45:33.660><c> powers</c><00:45:34.170><c> in</c><00:45:34.410><c> this</c><00:45:34.770><c> is</c><00:45:35.040><c> laziness</c>

00:45:35.930 --> 00:45:35.940 align:start position:0%
of the real powers in this is laziness
 

00:45:35.940 --> 00:45:38.300 align:start position:0%
of the real powers in this is laziness
but<00:45:36.480><c> with</c><00:45:36.690><c> laziness</c><00:45:37.140><c> also</c><00:45:37.680><c> comes</c><00:45:37.950><c> this</c>

00:45:38.300 --> 00:45:38.310 align:start position:0%
but with laziness also comes this
 

00:45:38.310 --> 00:45:40.040 align:start position:0%
but with laziness also comes this
ability<00:45:38.820><c> to</c><00:45:39.000><c> what's</c><00:45:39.360><c> called</c><00:45:39.570><c> function</c>

00:45:40.040 --> 00:45:40.050 align:start position:0%
ability to what's called function
 

00:45:40.050 --> 00:45:43.130 align:start position:0%
ability to what's called function
pipelining<00:45:40.620><c> our</c><00:45:41.300><c> function</c><00:45:42.300><c> composition</c>

00:45:43.130 --> 00:45:43.140 align:start position:0%
pipelining our function composition
 

00:45:43.140 --> 00:45:45.260 align:start position:0%
pipelining our function composition
function<00:45:43.560><c> composition</c><00:45:44.400><c> is</c><00:45:44.520><c> a</c><00:45:44.550><c> very</c><00:45:44.940><c> powerful</c>

00:45:45.260 --> 00:45:45.270 align:start position:0%
function composition is a very powerful
 

00:45:45.270 --> 00:45:48.230 align:start position:0%
function composition is a very powerful
pattern<00:45:45.750><c> we</c><00:45:46.530><c> saw</c><00:45:46.770><c> examples</c><00:45:47.250><c> of</c><00:45:47.580><c> this</c><00:45:47.760><c> earlier</c>

00:45:48.230 --> 00:45:48.240 align:start position:0%
pattern we saw examples of this earlier
 

00:45:48.240 --> 00:45:51.410 align:start position:0%
pattern we saw examples of this earlier
but<00:45:48.930><c> let's</c><00:45:49.140><c> revisit</c><00:45:49.560><c> this</c><00:45:49.950><c> so</c><00:45:50.430><c> suppose</c><00:45:50.850><c> I</c><00:45:51.180><c> had</c>

00:45:51.410 --> 00:45:51.420 align:start position:0%
but let's revisit this so suppose I had
 

00:45:51.420 --> 00:45:54.110 align:start position:0%
but let's revisit this so suppose I had
a<00:45:51.630><c> collection</c><00:45:52.200><c> of</c><00:45:52.530><c> numbers</c><00:45:53.010><c> with</c><00:45:53.340><c> me</c><00:45:53.580><c> let's</c>

00:45:54.110 --> 00:45:54.120 align:start position:0%
a collection of numbers with me let's
 

00:45:54.120 --> 00:45:56.090 align:start position:0%
a collection of numbers with me let's
say<00:45:54.210><c> collection</c><00:45:54.630><c> on</c><00:45:54.720><c> numbers</c><00:45:55.080><c> a</c><00:45:55.440><c> collection</c>

00:45:56.090 --> 00:45:56.100 align:start position:0%
say collection on numbers a collection
 

00:45:56.100 --> 00:45:58.220 align:start position:0%
say collection on numbers a collection
of<00:45:56.160><c> numbers</c><00:45:56.430><c> 1</c><00:45:56.640><c> to</c><00:45:56.670><c> 10</c><00:45:57.030><c> and</c><00:45:57.330><c> I</c><00:45:57.780><c> wanted</c><00:45:58.080><c> this</c>

00:45:58.220 --> 00:45:58.230 align:start position:0%
of numbers 1 to 10 and I wanted this
 

00:45:58.230 --> 00:46:02.750 align:start position:0%
of numbers 1 to 10 and I wanted this
time<00:45:58.500><c> say</c><00:45:58.920><c> a</c><00:45:59.400><c> get</c><00:46:00.270><c> be</c><00:46:00.570><c> a</c><00:46:00.930><c> double</c><00:46:01.560><c> of</c><00:46:01.760><c> square</c>

00:46:02.750 --> 00:46:02.760 align:start position:0%
time say a get be a double of square
 

00:46:02.760 --> 00:46:06.320 align:start position:0%
time say a get be a double of square
root<00:46:03.180><c> of</c><00:46:03.420><c> let's</c><00:46:04.350><c> say</c><00:46:04.560><c> of</c><00:46:05.070><c> even</c><00:46:05.580><c> numbers</c>

00:46:06.320 --> 00:46:06.330 align:start position:0%
root of let's say of even numbers
 

00:46:06.330 --> 00:46:09.220 align:start position:0%
root of let's say of even numbers
well<00:46:06.780><c> I</c><00:46:07.110><c> can</c><00:46:07.740><c> write</c><00:46:07.980><c> this</c><00:46:08.190><c> in</c><00:46:08.400><c> a</c><00:46:08.490><c> very</c><00:46:08.700><c> nice</c>

00:46:09.220 --> 00:46:09.230 align:start position:0%
well I can write this in a very nice
 

00:46:09.230 --> 00:46:12.080 align:start position:0%
well I can write this in a very nice
flowing<00:46:10.230><c> pattern</c><00:46:10.560><c> so</c><00:46:11.280><c> what</c><00:46:11.430><c> I</c><00:46:11.460><c> can</c><00:46:11.640><c> do</c><00:46:11.760><c> is</c><00:46:12.000><c> I</c>

00:46:12.080 --> 00:46:12.090 align:start position:0%
flowing pattern so what I can do is I
 

00:46:12.090 --> 00:46:14.570 align:start position:0%
flowing pattern so what I can do is I
can<00:46:12.150><c> say</c><00:46:12.480><c> output</c><00:46:13.170><c> but</c><00:46:13.650><c> this</c><00:46:13.890><c> time</c><00:46:14.130><c> I</c><00:46:14.160><c> can</c><00:46:14.430><c> say</c>

00:46:14.570 --> 00:46:14.580 align:start position:0%
can say output but this time I can say
 

00:46:14.580 --> 00:46:17.750 align:start position:0%
can say output but this time I can say
numbers<00:46:15.060><c> start</c><00:46:15.450><c> stream</c><00:46:16.140><c> and</c><00:46:16.530><c> then</c><00:46:17.040><c> I</c><00:46:17.070><c> can</c><00:46:17.460><c> say</c>

00:46:17.750 --> 00:46:17.760 align:start position:0%
numbers start stream and then I can say
 

00:46:17.760 --> 00:46:20.780 align:start position:0%
numbers start stream and then I can say
well<00:46:18.090><c> filter</c><00:46:19.050><c> give</c><00:46:19.740><c> an</c><00:46:19.860><c> element</c><00:46:20.490><c> give</c><00:46:20.670><c> me</c>

00:46:20.780 --> 00:46:20.790 align:start position:0%
well filter give an element give me
 

00:46:20.790 --> 00:46:24.560 align:start position:0%
well filter give an element give me
element<00:46:21.240><c> mark</c><00:46:21.480><c> 2</c><00:46:21.780><c> is</c><00:46:22.050><c> equal</c><00:46:22.470><c> to</c><00:46:22.610><c> 0</c><00:46:23.610><c> then</c><00:46:24.390><c> I</c><00:46:24.420><c> can</c>

00:46:24.560 --> 00:46:24.570 align:start position:0%
element mark 2 is equal to 0 then I can
 

00:46:24.570 --> 00:46:28.580 align:start position:0%
element mark 2 is equal to 0 then I can
say<00:46:24.960><c> dot</c><00:46:25.230><c> map</c><00:46:25.800><c> and</c><00:46:26.220><c> Matt</c><00:46:26.910><c> Squire</c><00:46:27.660><c> root</c><00:46:28.080><c> after</c><00:46:28.320><c> I</c>

00:46:28.580 --> 00:46:28.590 align:start position:0%
say dot map and Matt Squire root after I
 

00:46:28.590 --> 00:46:29.960 align:start position:0%
say dot map and Matt Squire root after I
am<00:46:28.680><c> interested</c><00:46:29.070><c> in</c><00:46:29.130><c> finding</c><00:46:29.340><c> the</c><00:46:29.490><c> square</c><00:46:29.580><c> root</c>

00:46:29.960 --> 00:46:29.970 align:start position:0%
am interested in finding the square root
 

00:46:29.970 --> 00:46:31.790 align:start position:0%
am interested in finding the square root
of<00:46:30.180><c> these</c><00:46:30.390><c> and</c><00:46:30.960><c> then</c><00:46:31.170><c> of</c><00:46:31.260><c> course</c><00:46:31.290><c> this</c><00:46:31.740><c> is</c>

00:46:31.790 --> 00:46:31.800 align:start position:0%
of these and then of course this is
 

00:46:31.800 --> 00:46:33.830 align:start position:0%
of these and then of course this is
going<00:46:32.100><c> to</c><00:46:32.220><c> be</c><00:46:32.340><c> mapped</c><00:46:32.760><c> to</c><00:46:32.970><c> double</c><00:46:33.390><c> this</c><00:46:33.570><c> time</c>

00:46:33.830 --> 00:46:33.840 align:start position:0%
going to be mapped to double this time
 

00:46:33.840 --> 00:46:37.400 align:start position:0%
going to be mapped to double this time
and<00:46:34.110><c> then</c><00:46:34.500><c> finally</c><00:46:34.800><c> I</c><00:46:35.100><c> can</c><00:46:35.460><c> say</c><00:46:35.760><c> darts</c><00:46:36.600><c> sum</c><00:46:36.960><c> and</c>

00:46:37.400 --> 00:46:37.410 align:start position:0%
and then finally I can say darts sum and
 

00:46:37.410 --> 00:46:38.830 align:start position:0%
and then finally I can say darts sum and
then<00:46:37.860><c> of</c><00:46:38.040><c> course</c><00:46:38.070><c> one</c>

00:46:38.830 --> 00:46:38.840 align:start position:0%
then of course one
 

00:46:38.840 --> 00:46:41.620 align:start position:0%
then of course one
so<00:46:38.900><c> I</c><00:46:38.960><c> totally</c><00:46:39.230><c> I</c><00:46:39.830><c> can</c><00:46:40.220><c> simply</c><00:46:40.550><c> return</c><00:46:41.000><c> it</c><00:46:41.030><c> well</c>

00:46:41.620 --> 00:46:41.630 align:start position:0%
so I totally I can simply return it well
 

00:46:41.630 --> 00:46:43.450 align:start position:0%
so I totally I can simply return it well
if<00:46:41.840><c> you</c><00:46:41.990><c> look</c><00:46:42.140><c> at</c><00:46:42.290><c> this</c><00:46:42.470><c> code</c><00:46:42.710><c> this</c><00:46:43.160><c> time</c>

00:46:43.450 --> 00:46:43.460 align:start position:0%
if you look at this code this time
 

00:46:43.460 --> 00:46:45.520 align:start position:0%
if you look at this code this time
though<00:46:43.790><c> what</c><00:46:44.390><c> we</c><00:46:44.540><c> have</c><00:46:44.630><c> done</c><00:46:44.840><c> in</c><00:46:45.020><c> this</c><00:46:45.140><c> case</c><00:46:45.350><c> is</c>

00:46:45.520 --> 00:46:45.530 align:start position:0%
though what we have done in this case is
 

00:46:45.530 --> 00:46:46.960 align:start position:0%
though what we have done in this case is
we<00:46:45.650><c> are</c><00:46:45.740><c> saying</c><00:46:45.920><c> given</c><00:46:46.160><c> the</c><00:46:46.250><c> collection</c><00:46:46.850><c> of</c>

00:46:46.960 --> 00:46:46.970 align:start position:0%
we are saying given the collection of
 

00:46:46.970 --> 00:46:49.810 align:start position:0%
we are saying given the collection of
numbers<00:46:47.120><c> get</c><00:46:48.050><c> me</c><00:46:48.200><c> only</c><00:46:48.350><c> the</c><00:46:48.530><c> even</c><00:46:48.860><c> numbers</c><00:46:49.220><c> but</c>

00:46:49.810 --> 00:46:49.820 align:start position:0%
numbers get me only the even numbers but
 

00:46:49.820 --> 00:46:51.400 align:start position:0%
numbers get me only the even numbers but
give<00:46:49.970><c> me</c><00:46:50.030><c> the</c><00:46:50.090><c> square</c><00:46:50.570><c> root</c><00:46:50.780><c> of</c><00:46:50.870><c> those</c><00:46:51.050><c> even</c>

00:46:51.400 --> 00:46:51.410 align:start position:0%
give me the square root of those even
 

00:46:51.410 --> 00:46:54.190 align:start position:0%
give me the square root of those even
numbers<00:46:51.740><c> and</c><00:46:51.980><c> then</c><00:46:52.460><c> find</c><00:46:52.730><c> the</c><00:46:52.850><c> sum</c><00:46:53.120><c> of</c><00:46:53.360><c> it</c><00:46:53.750><c> and</c>

00:46:54.190 --> 00:46:54.200 align:start position:0%
numbers and then find the sum of it and
 

00:46:54.200 --> 00:46:55.810 align:start position:0%
numbers and then find the sum of it and
you<00:46:54.290><c> can</c><00:46:54.470><c> see</c><00:46:54.650><c> how</c><00:46:54.830><c> this</c><00:46:55.070><c> begins</c><00:46:55.340><c> to</c><00:46:55.460><c> flow</c>

00:46:55.810 --> 00:46:55.820 align:start position:0%
you can see how this begins to flow
 

00:46:55.820 --> 00:46:58.120 align:start position:0%
you can see how this begins to flow
through<00:46:56.180><c> this</c><00:46:56.930><c> becomes</c><00:46:57.380><c> what's</c><00:46:57.680><c> called</c><00:46:57.950><c> a</c>

00:46:58.120 --> 00:46:58.130 align:start position:0%
through this becomes what's called a
 

00:46:58.130 --> 00:47:00.480 align:start position:0%
through this becomes what's called a
function<00:46:58.520><c> composition</c><00:46:59.390><c> you'll</c><00:46:59.900><c> go</c><00:47:00.230><c> through</c>

00:47:00.480 --> 00:47:00.490 align:start position:0%
function composition you'll go through
 

00:47:00.490 --> 00:47:02.950 align:start position:0%
function composition you'll go through
transformations<00:47:01.490><c> you</c><00:47:01.880><c> take</c><00:47:02.150><c> the</c><00:47:02.300><c> collection</c>

00:47:02.950 --> 00:47:02.960 align:start position:0%
transformations you take the collection
 

00:47:02.960 --> 00:47:05.860 align:start position:0%
transformations you take the collection
you<00:47:03.110><c> transform</c><00:47:03.830><c> to</c><00:47:04.040><c> even</c><00:47:04.370><c> numbers</c><00:47:04.670><c> to</c><00:47:05.000><c> a</c><00:47:05.240><c> map</c>

00:47:05.860 --> 00:47:05.870 align:start position:0%
you transform to even numbers to a map
 

00:47:05.870 --> 00:47:08.110 align:start position:0%
you transform to even numbers to a map
to<00:47:06.020><c> double</c><00:47:06.350><c> to</c><00:47:06.590><c> performing</c><00:47:07.070><c> the</c><00:47:07.100><c> Sun</c><00:47:07.460><c> well</c>

00:47:08.110 --> 00:47:08.120 align:start position:0%
to double to performing the Sun well
 

00:47:08.120 --> 00:47:10.420 align:start position:0%
to double to performing the Sun well
this<00:47:08.510><c> is</c><00:47:08.660><c> a</c><00:47:08.690><c> function</c><00:47:09.080><c> composition</c><00:47:09.770><c> but</c><00:47:10.310><c> the</c>

00:47:10.420 --> 00:47:10.430 align:start position:0%
this is a function composition but the
 

00:47:10.430 --> 00:47:13.840 align:start position:0%
this is a function composition but the
evaluation<00:47:11.210><c> is</c><00:47:11.330><c> also</c><00:47:11.510><c> pretty</c><00:47:12.470><c> lazy</c><00:47:12.950><c> so</c><00:47:13.670><c> what</c><00:47:13.820><c> I</c>

00:47:13.840 --> 00:47:13.850 align:start position:0%
evaluation is also pretty lazy so what I
 

00:47:13.850 --> 00:47:16.810 align:start position:0%
evaluation is also pretty lazy so what I
mean<00:47:14.060><c> by</c><00:47:14.120><c> the</c><00:47:14.420><c> evaluation</c><00:47:15.050><c> is</c><00:47:15.140><c> lazy</c><00:47:15.410><c> is</c><00:47:15.820><c> until</c>

00:47:16.810 --> 00:47:16.820 align:start position:0%
mean by the evaluation is lazy is until
 

00:47:16.820 --> 00:47:19.420 align:start position:0%
mean by the evaluation is lazy is until
you<00:47:17.000><c> hit</c><00:47:17.150><c> the</c><00:47:17.210><c> sum</c><00:47:17.750><c> operation</c><00:47:18.740><c> these</c>

00:47:19.420 --> 00:47:19.430 align:start position:0%
you hit the sum operation these
 

00:47:19.430 --> 00:47:22.060 align:start position:0%
you hit the sum operation these
operations<00:47:20.330><c> are</c><00:47:20.540><c> not</c><00:47:20.840><c> going</c><00:47:21.110><c> to</c><00:47:21.200><c> execute</c><00:47:21.770><c> and</c>

00:47:22.060 --> 00:47:22.070 align:start position:0%
operations are not going to execute and
 

00:47:22.070 --> 00:47:23.440 align:start position:0%
operations are not going to execute and
then<00:47:22.460><c> minimally</c><00:47:23.030><c> they're</c><00:47:23.180><c> going</c><00:47:23.330><c> to</c><00:47:23.390><c> execute</c>

00:47:23.440 --> 00:47:23.450 align:start position:0%
then minimally they're going to execute
 

00:47:23.450 --> 00:47:25.930 align:start position:0%
then minimally they're going to execute
whatever<00:47:24.020><c> is</c><00:47:24.170><c> necessary</c><00:47:24.410><c> so</c><00:47:25.340><c> the</c><00:47:25.460><c> efficiency</c>

00:47:25.930 --> 00:47:25.940 align:start position:0%
whatever is necessary so the efficiency
 

00:47:25.940 --> 00:47:29.260 align:start position:0%
whatever is necessary so the efficiency
is<00:47:26.270><c> big</c><00:47:26.540><c> then</c><00:47:26.780><c> furthermore</c><00:47:27.760><c> in</c><00:47:28.760><c> languages</c>

00:47:29.260 --> 00:47:29.270 align:start position:0%
is big then furthermore in languages
 

00:47:29.270 --> 00:47:31.540 align:start position:0%
is big then furthermore in languages
like<00:47:29.510><c> Java</c><00:47:29.930><c> one</c><00:47:30.830><c> of</c><00:47:30.920><c> the</c><00:47:31.010><c> cool</c><00:47:31.220><c> things</c><00:47:31.250><c> about</c>

00:47:31.540 --> 00:47:31.550 align:start position:0%
like Java one of the cool things about
 

00:47:31.550 --> 00:47:34.450 align:start position:0%
like Java one of the cool things about
this<00:47:31.910><c> is</c><00:47:32.210><c> it</c><00:47:32.810><c> is</c><00:47:32.960><c> not</c><00:47:33.170><c> taking</c><00:47:33.620><c> a</c><00:47:33.710><c> collection</c>

00:47:34.450 --> 00:47:34.460 align:start position:0%
this is it is not taking a collection
 

00:47:34.460 --> 00:47:37.300 align:start position:0%
this is it is not taking a collection
and<00:47:34.750><c> creating</c><00:47:35.750><c> an</c><00:47:35.870><c> intermediate</c><00:47:36.770><c> collection</c>

00:47:37.300 --> 00:47:37.310 align:start position:0%
and creating an intermediate collection
 

00:47:37.310 --> 00:47:39.250 align:start position:0%
and creating an intermediate collection
and<00:47:37.460><c> then</c><00:47:37.940><c> yet</c><00:47:38.420><c> another</c><00:47:38.660><c> intermediate</c>

00:47:39.250 --> 00:47:39.260 align:start position:0%
and then yet another intermediate
 

00:47:39.260 --> 00:47:41.500 align:start position:0%
and then yet another intermediate
collection<00:47:39.980><c> it's</c><00:47:40.370><c> not</c><00:47:40.730><c> going</c><00:47:41.030><c> to</c><00:47:41.120><c> be</c><00:47:41.180><c> doing</c>

00:47:41.500 --> 00:47:41.510 align:start position:0%
collection it's not going to be doing
 

00:47:41.510 --> 00:47:44.320 align:start position:0%
collection it's not going to be doing
that<00:47:41.690><c> for</c><00:47:41.750><c> you</c><00:47:42.230><c> instead</c><00:47:43.130><c> it's</c><00:47:43.460><c> very</c><00:47:43.700><c> efficient</c>

00:47:44.320 --> 00:47:44.330 align:start position:0%
that for you instead it's very efficient
 

00:47:44.330 --> 00:47:46.300 align:start position:0%
that for you instead it's very efficient
in<00:47:44.480><c> knowing</c><00:47:44.900><c> that</c><00:47:45.170><c> these</c><00:47:45.710><c> intermediate</c>

00:47:46.300 --> 00:47:46.310 align:start position:0%
in knowing that these intermediate
 

00:47:46.310 --> 00:47:48.460 align:start position:0%
in knowing that these intermediate
collections<00:47:46.730><c> are</c><00:47:46.880><c> really</c><00:47:47.150><c> not</c><00:47:47.330><c> needed</c><00:47:47.930><c> first</c>

00:47:48.460 --> 00:47:48.470 align:start position:0%
collections are really not needed first
 

00:47:48.470 --> 00:47:49.660 align:start position:0%
collections are really not needed first
of<00:47:48.620><c> all</c><00:47:48.740><c> they're</c><00:47:48.860><c> not</c><00:47:48.890><c> available</c><00:47:49.130><c> they're</c><00:47:49.580><c> not</c>

00:47:49.660 --> 00:47:49.670 align:start position:0%
of all they're not available they're not
 

00:47:49.670 --> 00:47:52.720 align:start position:0%
of all they're not available they're not
visible<00:47:49.910><c> outside</c><00:47:50.330><c> so</c><00:47:51.140><c> internally</c><00:47:51.860><c> it</c><00:47:52.340><c> doesn't</c>

00:47:52.720 --> 00:47:52.730 align:start position:0%
visible outside so internally it doesn't
 

00:47:52.730 --> 00:47:55.480 align:start position:0%
visible outside so internally it doesn't
waste<00:47:53.060><c> performance</c><00:47:53.900><c> by</c><00:47:54.050><c> creating</c><00:47:54.680><c> all</c><00:47:54.890><c> those</c>

00:47:55.480 --> 00:47:55.490 align:start position:0%
waste performance by creating all those
 

00:47:55.490 --> 00:47:58.420 align:start position:0%
waste performance by creating all those
garbage<00:47:56.270><c> collections</c><00:47:57.200><c> internally</c><00:47:57.830><c> it</c>

00:47:58.420 --> 00:47:58.430 align:start position:0%
garbage collections internally it
 

00:47:58.430 --> 00:48:00.400 align:start position:0%
garbage collections internally it
directly<00:47:58.940><c> gets</c><00:47:59.240><c> you</c><00:47:59.390><c> to</c><00:47:59.570><c> the</c><00:47:59.600><c> result</c><00:48:00.080><c> in</c><00:48:00.290><c> the</c>

00:48:00.400 --> 00:48:00.410 align:start position:0%
directly gets you to the result in the
 

00:48:00.410 --> 00:48:03.340 align:start position:0%
directly gets you to the result in the
end<00:48:00.440><c> so</c><00:48:01.190><c> efficiency</c><00:48:01.880><c> is</c><00:48:02.090><c> big</c><00:48:02.420><c> then</c><00:48:02.660><c> it</c><00:48:02.840><c> is</c>

00:48:03.340 --> 00:48:03.350 align:start position:0%
end so efficiency is big then it is
 

00:48:03.350 --> 00:48:05.080 align:start position:0%
end so efficiency is big then it is
really<00:48:03.740><c> hard</c><00:48:03.920><c> for</c><00:48:04.160><c> it</c><00:48:04.250><c> to</c><00:48:04.280><c> be</c><00:48:04.430><c> efficient</c>

00:48:05.080 --> 00:48:05.090 align:start position:0%
really hard for it to be efficient
 

00:48:05.090 --> 00:48:07.600 align:start position:0%
really hard for it to be efficient
without<00:48:05.390><c> laziness</c><00:48:05.990><c> as</c><00:48:06.200><c> well</c><00:48:06.590><c> in</c><00:48:07.070><c> fact</c><00:48:07.310><c> when</c>

00:48:07.600 --> 00:48:07.610 align:start position:0%
without laziness as well in fact when
 

00:48:07.610 --> 00:48:09.730 align:start position:0%
without laziness as well in fact when
the<00:48:07.700><c> terminal</c><00:48:08.120><c> operation</c><00:48:08.660><c> some</c><00:48:09.020><c> is</c><00:48:09.320><c> called</c>

00:48:09.730 --> 00:48:09.740 align:start position:0%
the terminal operation some is called
 

00:48:09.740 --> 00:48:11.470 align:start position:0%
the terminal operation some is called
that's<00:48:10.490><c> when</c><00:48:10.730><c> it</c><00:48:10.850><c> performs</c><00:48:11.240><c> the</c><00:48:11.390><c> operation</c>

00:48:11.470 --> 00:48:11.480 align:start position:0%
that's when it performs the operation
 

00:48:11.480 --> 00:48:14.590 align:start position:0%
that's when it performs the operation
and<00:48:12.410><c> because</c><00:48:13.100><c> of</c><00:48:13.130><c> that</c><00:48:13.430><c> it</c><00:48:13.730><c> can</c><00:48:13.820><c> be</c><00:48:13.970><c> efficient</c>

00:48:14.590 --> 00:48:14.600 align:start position:0%
and because of that it can be efficient
 

00:48:14.600 --> 00:48:16.870 align:start position:0%
and because of that it can be efficient
it<00:48:15.050><c> is</c><00:48:15.200><c> not</c><00:48:15.380><c> wasting</c><00:48:15.950><c> its</c><00:48:16.100><c> time</c><00:48:16.160><c> and</c><00:48:16.520><c> effort</c>

00:48:16.870 --> 00:48:16.880 align:start position:0%
it is not wasting its time and effort
 

00:48:16.880 --> 00:48:19.300 align:start position:0%
it is not wasting its time and effort
building<00:48:17.600><c> all</c><00:48:17.960><c> these</c><00:48:18.140><c> intermediate</c><00:48:18.770><c> results</c>

00:48:19.300 --> 00:48:19.310 align:start position:0%
building all these intermediate results
 

00:48:19.310 --> 00:48:21.310 align:start position:0%
building all these intermediate results
along<00:48:19.520><c> the</c><00:48:19.700><c> way</c><00:48:19.850><c> that</c><00:48:20.420><c> you</c><00:48:20.480><c> get</c><00:48:20.810><c> out</c><00:48:21.020><c> of</c><00:48:21.170><c> this</c>

00:48:21.310 --> 00:48:21.320 align:start position:0%
along the way that you get out of this
 

00:48:21.320 --> 00:48:24.130 align:start position:0%
along the way that you get out of this
so<00:48:21.830><c> the</c><00:48:21.980><c> benefits</c><00:48:22.490><c> of</c><00:48:22.670><c> doing</c><00:48:22.820><c> this</c><00:48:23.210><c> is</c><00:48:23.600><c> first</c>

00:48:24.130 --> 00:48:24.140 align:start position:0%
so the benefits of doing this is first
 

00:48:24.140 --> 00:48:26.770 align:start position:0%
so the benefits of doing this is first
of<00:48:24.320><c> all</c><00:48:24.500><c> you</c><00:48:24.830><c> get</c><00:48:25.280><c> cold</c><00:48:25.580><c> clarity</c><00:48:26.240><c> when</c><00:48:26.690><c> you</c>

00:48:26.770 --> 00:48:26.780 align:start position:0%
of all you get cold clarity when you
 

00:48:26.780 --> 00:48:28.630 align:start position:0%
of all you get cold clarity when you
look<00:48:26.960><c> at</c><00:48:27.080><c> the</c><00:48:27.200><c> code</c><00:48:27.440><c> you're</c><00:48:27.950><c> not</c><00:48:28.070><c> going</c><00:48:28.340><c> back</c>

00:48:28.630 --> 00:48:28.640 align:start position:0%
look at the code you're not going back
 

00:48:28.640 --> 00:48:30.760 align:start position:0%
look at the code you're not going back
it's<00:48:29.390><c> trying</c><00:48:29.630><c> to</c><00:48:29.750><c> figure</c><00:48:29.960><c> out</c><00:48:30.170><c> what</c><00:48:30.410><c> this</c><00:48:30.560><c> code</c>

00:48:30.760 --> 00:48:30.770 align:start position:0%
it's trying to figure out what this code
 

00:48:30.770 --> 00:48:33.220 align:start position:0%
it's trying to figure out what this code
is<00:48:30.800><c> doing</c><00:48:30.970><c> you're</c><00:48:31.970><c> able</c><00:48:32.240><c> to</c><00:48:32.270><c> just</c><00:48:32.630><c> loop</c><00:48:33.200><c> the</c>

00:48:33.220 --> 00:48:33.230 align:start position:0%
is doing you're able to just loop the
 

00:48:33.230 --> 00:48:35.620 align:start position:0%
is doing you're able to just loop the
follow<00:48:34.040><c> this</c><00:48:34.280><c> code</c><00:48:34.550><c> think</c><00:48:35.030><c> about</c><00:48:35.240><c> this</c><00:48:35.360><c> for</c><00:48:35.570><c> a</c>

00:48:35.620 --> 00:48:35.630 align:start position:0%
follow this code think about this for a
 

00:48:35.630 --> 00:48:38.920 align:start position:0%
follow this code think about this for a
minute<00:48:35.810><c> if</c><00:48:36.140><c> I</c><00:48:36.500><c> give</c><00:48:36.770><c> you</c><00:48:36.890><c> a</c><00:48:36.950><c> for</c><00:48:37.670><c> loop</c><00:48:38.090><c> with</c><00:48:38.750><c> an</c>

00:48:38.920 --> 00:48:38.930 align:start position:0%
minute if I give you a for loop with an
 

00:48:38.930 --> 00:48:41.200 align:start position:0%
minute if I give you a for loop with an
if<00:48:39.110><c> condition</c><00:48:39.680><c> and</c><00:48:39.770><c> a</c><00:48:39.890><c> bake</c><00:48:40.160><c> and</c><00:48:40.430><c> I</c><00:48:40.490><c> continue</c>

00:48:41.200 --> 00:48:41.210 align:start position:0%
if condition and a bake and I continue
 

00:48:41.210 --> 00:48:43.000 align:start position:0%
if condition and a bake and I continue
and<00:48:41.480><c> I</c><00:48:41.810><c> give</c><00:48:41.990><c> you</c><00:48:42.020><c> this</c><00:48:42.260><c> code</c><00:48:42.500><c> and</c><00:48:42.650><c> ask</c><00:48:42.800><c> you</c>

00:48:43.000 --> 00:48:43.010 align:start position:0%
and I give you this code and ask you
 

00:48:43.010 --> 00:48:44.650 align:start position:0%
and I give you this code and ask you
tell<00:48:43.340><c> me</c><00:48:43.430><c> what</c><00:48:43.580><c> this</c><00:48:43.730><c> code</c><00:48:43.940><c> is</c><00:48:43.970><c> doing</c><00:48:44.120><c> and</c>

00:48:44.650 --> 00:48:44.660 align:start position:0%
tell me what this code is doing and
 

00:48:44.660 --> 00:48:46.900 align:start position:0%
tell me what this code is doing and
here's<00:48:45.290><c> a</c><00:48:45.380><c> challenge</c><00:48:45.740><c> for</c><00:48:45.980><c> you</c><00:48:46.160><c> give</c><00:48:46.790><c> an</c>

00:48:46.900 --> 00:48:46.910 align:start position:0%
here's a challenge for you give an
 

00:48:46.910 --> 00:48:49.300 align:start position:0%
here's a challenge for you give an
imperative<00:48:47.390><c> code</c><00:48:47.570><c> to</c><00:48:47.720><c> somebody</c><00:48:48.140><c> to</c><00:48:48.800><c> ask</c><00:48:48.980><c> them</c>

00:48:49.300 --> 00:48:49.310 align:start position:0%
imperative code to somebody to ask them
 

00:48:49.310 --> 00:48:51.910 align:start position:0%
imperative code to somebody to ask them
what<00:48:49.490><c> does</c><00:48:49.610><c> this</c><00:48:49.700><c> go</c><00:48:49.910><c> do</c><00:48:50.270><c> and</c><00:48:50.600><c> sit</c><00:48:51.140><c> in</c><00:48:51.260><c> front</c><00:48:51.680><c> of</c>

00:48:51.910 --> 00:48:51.920 align:start position:0%
what does this go do and sit in front of
 

00:48:51.920 --> 00:48:52.549 align:start position:0%
what does this go do and sit in front of
them

00:48:52.549 --> 00:48:52.559 align:start position:0%
them
 

00:48:52.559 --> 00:48:54.529 align:start position:0%
them
and<00:48:52.650><c> what's</c><00:48:53.069><c> their</c><00:48:53.309><c> eyeball</c><00:48:53.849><c> and</c><00:48:54.150><c> their</c>

00:48:54.529 --> 00:48:54.539 align:start position:0%
and what's their eyeball and their
 

00:48:54.539 --> 00:48:56.209 align:start position:0%
and what's their eyeball and their
eyeball<00:48:54.930><c> is</c><00:48:55.049><c> going</c><00:48:55.229><c> to</c><00:48:55.319><c> do</c><00:48:55.439><c> this</c><00:48:55.619><c> it's</c><00:48:56.039><c> going</c>

00:48:56.209 --> 00:48:56.219 align:start position:0%
eyeball is going to do this it's going
 

00:48:56.219 --> 00:48:58.459 align:start position:0%
eyeball is going to do this it's going
to<00:48:56.309><c> start</c><00:48:56.579><c> in</c><00:48:56.699><c> the</c><00:48:56.819><c> top</c><00:48:56.999><c> look</c><00:48:57.719><c> at</c><00:48:57.809><c> the</c><00:48:57.930><c> code</c><00:48:58.170><c> and</c>

00:48:58.459 --> 00:48:58.469 align:start position:0%
to start in the top look at the code and
 

00:48:58.469 --> 00:49:00.380 align:start position:0%
to start in the top look at the code and
it's<00:48:58.739><c> going</c><00:48:58.890><c> to</c><00:48:58.949><c> do</c><00:48:59.130><c> this</c><00:48:59.430><c> and</c><00:48:59.699><c> then</c><00:49:00.089><c> it</c><00:49:00.209><c> does</c>

00:49:00.380 --> 00:49:00.390 align:start position:0%
it's going to do this and then it does
 

00:49:00.390 --> 00:49:02.089 align:start position:0%
it's going to do this and then it does
this<00:49:00.689><c> that</c><00:49:01.109><c> point</c><00:49:01.439><c> is</c><00:49:01.529><c> called</c><00:49:01.709><c> quite</c><00:49:02.069><c> a</c>

00:49:02.089 --> 00:49:02.099 align:start position:0%
this that point is called quite a
 

00:49:02.099 --> 00:49:04.459 align:start position:0%
this that point is called quite a
confusion<00:49:02.670><c> right</c><00:49:03.059><c> it's</c><00:49:03.479><c> like</c><00:49:03.630><c> I</c><00:49:03.660><c> don't</c><00:49:04.349><c> know</c>

00:49:04.459 --> 00:49:04.469 align:start position:0%
confusion right it's like I don't know
 

00:49:04.469 --> 00:49:06.289 align:start position:0%
confusion right it's like I don't know
what<00:49:04.619><c> this</c><00:49:04.739><c> code</c><00:49:04.920><c> is</c><00:49:04.949><c> doing</c><00:49:05.099><c> but</c><00:49:05.759><c> look</c><00:49:05.999><c> at</c><00:49:06.150><c> the</c>

00:49:06.289 --> 00:49:06.299 align:start position:0%
what this code is doing but look at the
 

00:49:06.299 --> 00:49:08.689 align:start position:0%
what this code is doing but look at the
functional<00:49:06.989><c> code</c><00:49:07.229><c> you</c><00:49:07.829><c> go</c><00:49:08.009><c> through</c><00:49:08.219><c> a</c><00:49:08.249><c> single</c>

00:49:08.689 --> 00:49:08.699 align:start position:0%
functional code you go through a single
 

00:49:08.699 --> 00:49:11.660 align:start position:0%
functional code you go through a single
pass<00:49:09.059><c> through</c><00:49:09.599><c> it</c><00:49:09.809><c> given</c><00:49:10.410><c> the</c><00:49:10.499><c> collection</c><00:49:11.160><c> get</c>

00:49:11.660 --> 00:49:11.670 align:start position:0%
pass through it given the collection get
 

00:49:11.670 --> 00:49:13.819 align:start position:0%
pass through it given the collection get
me<00:49:11.789><c> all</c><00:49:11.939><c> even</c><00:49:12.269><c> numbers</c><00:49:12.390><c> find</c><00:49:13.349><c> the</c><00:49:13.439><c> square</c><00:49:13.680><c> root</c>

00:49:13.819 --> 00:49:13.829 align:start position:0%
me all even numbers find the square root
 

00:49:13.829 --> 00:49:16.429 align:start position:0%
me all even numbers find the square root
of<00:49:13.920><c> them</c><00:49:14.189><c> and</c><00:49:14.459><c> total</c><00:49:14.999><c> you're</c><00:49:15.809><c> doing</c><00:49:16.049><c> a</c><00:49:16.109><c> single</c>

00:49:16.429 --> 00:49:16.439 align:start position:0%
of them and total you're doing a single
 

00:49:16.439 --> 00:49:18.529 align:start position:0%
of them and total you're doing a single
pass<00:49:16.680><c> through</c><00:49:17.069><c> it</c><00:49:17.249><c> that</c><00:49:17.640><c> becomes</c><00:49:17.969><c> very</c><00:49:18.150><c> clear</c>

00:49:18.529 --> 00:49:18.539 align:start position:0%
pass through it that becomes very clear
 

00:49:18.539 --> 00:49:21.049 align:start position:0%
pass through it that becomes very clear
to<00:49:18.839><c> understand</c><00:49:19.349><c> you</c><00:49:19.859><c> also</c><00:49:20.099><c> have</c><00:49:20.459><c> fewer</c><00:49:20.670><c> errors</c>

00:49:21.049 --> 00:49:21.059 align:start position:0%
to understand you also have fewer errors
 

00:49:21.059 --> 00:49:24.620 align:start position:0%
to understand you also have fewer errors
in<00:49:21.539><c> code</c><00:49:21.779><c> because</c><00:49:22.589><c> a</c><00:49:22.920><c> the</c><00:49:23.759><c> code</c><00:49:23.999><c> is</c><00:49:24.209><c> doesn't</c>

00:49:24.620 --> 00:49:24.630 align:start position:0%
in code because a the code is doesn't
 

00:49:24.630 --> 00:49:27.499 align:start position:0%
in code because a the code is doesn't
have<00:49:24.869><c> accidental</c><00:49:25.650><c> complexity</c><00:49:26.309><c> in</c><00:49:26.519><c> it</c><00:49:26.759><c> second</c>

00:49:27.499 --> 00:49:27.509 align:start position:0%
have accidental complexity in it second
 

00:49:27.509 --> 00:49:29.059 align:start position:0%
have accidental complexity in it second
reason<00:49:27.660><c> why</c><00:49:27.900><c> there</c><00:49:28.079><c> are</c><00:49:28.109><c> fewer</c><00:49:28.319><c> errors</c><00:49:28.650><c> is</c>

00:49:29.059 --> 00:49:29.069 align:start position:0%
reason why there are fewer errors is
 

00:49:29.069 --> 00:49:31.640 align:start position:0%
reason why there are fewer errors is
there<00:49:29.549><c> is</c><00:49:29.670><c> less</c><00:49:29.880><c> mutability</c><00:49:30.599><c> in</c><00:49:30.839><c> code</c><00:49:31.109><c> as</c><00:49:31.319><c> well</c>

00:49:31.640 --> 00:49:31.650 align:start position:0%
there is less mutability in code as well
 

00:49:31.650 --> 00:49:34.880 align:start position:0%
there is less mutability in code as well
and<00:49:32.009><c> that</c><00:49:32.519><c> reduces</c><00:49:32.910><c> errors</c><00:49:33.449><c> also</c><00:49:33.779><c> so</c><00:49:34.559><c> less</c>

00:49:34.880 --> 00:49:34.890 align:start position:0%
and that reduces errors also so less
 

00:49:34.890 --> 00:49:38.179 align:start position:0%
and that reduces errors also so less
complexity<00:49:35.430><c> less</c><00:49:36.089><c> mutable</c><00:49:36.619><c> favors</c><00:49:37.619><c> a</c><00:49:37.829><c> fewer</c>

00:49:38.179 --> 00:49:38.189 align:start position:0%
complexity less mutable favors a fewer
 

00:49:38.189 --> 00:49:40.849 align:start position:0%
complexity less mutable favors a fewer
errors<00:49:38.489><c> in</c><00:49:38.849><c> code</c><00:49:39.059><c> it</c><00:49:39.599><c> also</c><00:49:39.809><c> removes</c><00:49:40.439><c> all</c><00:49:40.799><c> the</c>

00:49:40.849 --> 00:49:40.859 align:start position:0%
errors in code it also removes all the
 

00:49:40.859 --> 00:49:43.519 align:start position:0%
errors in code it also removes all the
extra<00:49:41.609><c> garbage</c><00:49:42.269><c> variables</c><00:49:42.959><c> we</c><00:49:43.079><c> have</c><00:49:43.199><c> to</c><00:49:43.289><c> carry</c>

00:49:43.519 --> 00:49:43.529 align:start position:0%
extra garbage variables we have to carry
 

00:49:43.529 --> 00:49:45.979 align:start position:0%
extra garbage variables we have to carry
around<00:49:43.799><c> and</c><00:49:44.279><c> so</c><00:49:44.849><c> it</c><00:49:45.119><c> becomes</c><00:49:45.390><c> hard</c><00:49:45.630><c> to</c><00:49:45.719><c> reason</c>

00:49:45.979 --> 00:49:45.989 align:start position:0%
around and so it becomes hard to reason
 

00:49:45.989 --> 00:49:48.650 align:start position:0%
around and so it becomes hard to reason
you<00:49:46.499><c> can</c><00:49:46.680><c> remove</c><00:49:46.920><c> that</c><00:49:46.979><c> as</c><00:49:47.249><c> well</c><00:49:47.279><c> and</c><00:49:47.729><c> finally</c>

00:49:48.650 --> 00:49:48.660 align:start position:0%
you can remove that as well and finally
 

00:49:48.660 --> 00:49:51.469 align:start position:0%
you can remove that as well and finally
the<00:49:49.229><c> code</c><00:49:49.439><c> becomes</c><00:49:49.769><c> easier</c><00:49:50.279><c> to</c><00:49:50.519><c> paralyse</c><00:49:51.239><c> as</c>

00:49:51.469 --> 00:49:51.479 align:start position:0%
the code becomes easier to paralyse as
 

00:49:51.479 --> 00:49:53.630 align:start position:0%
the code becomes easier to paralyse as
well<00:49:51.930><c> if</c><00:49:52.349><c> you</c><00:49:52.589><c> are</c><00:49:52.619><c> taking</c><00:49:53.069><c> an</c><00:49:53.160><c> imperative</c>

00:49:53.630 --> 00:49:53.640 align:start position:0%
well if you are taking an imperative
 

00:49:53.640 --> 00:49:55.969 align:start position:0%
well if you are taking an imperative
code<00:49:53.819><c> with</c><00:49:54.029><c> shared</c><00:49:54.449><c> mutability</c><00:49:55.019><c> and</c><00:49:55.349><c> you</c><00:49:55.680><c> tell</c>

00:49:55.969 --> 00:49:55.979 align:start position:0%
code with shared mutability and you tell
 

00:49:55.979 --> 00:49:58.370 align:start position:0%
code with shared mutability and you tell
them<00:49:56.189><c> to</c><00:49:56.249><c> make</c><00:49:56.519><c> the</c><00:49:56.670><c> code</c><00:49:56.849><c> concurrent</c><00:49:57.719><c> that's</c>

00:49:58.370 --> 00:49:58.380 align:start position:0%
them to make the code concurrent that's
 

00:49:58.380 --> 00:50:01.099 align:start position:0%
them to make the code concurrent that's
really<00:49:59.099><c> hard</c><00:49:59.339><c> because</c><00:49:59.839><c> structure</c><00:50:00.839><c> of</c><00:50:00.989><c> the</c>

00:50:01.099 --> 00:50:01.109 align:start position:0%
really hard because structure of the
 

00:50:01.109 --> 00:50:03.709 align:start position:0%
really hard because structure of the
code<00:50:01.349><c> changes</c><00:50:01.619><c> a</c><00:50:02.279><c> lot</c><00:50:02.640><c> between</c><00:50:02.880><c> sequential</c>

00:50:03.709 --> 00:50:03.719 align:start position:0%
code changes a lot between sequential
 

00:50:03.719 --> 00:50:06.319 align:start position:0%
code changes a lot between sequential
and<00:50:03.869><c> concurrent</c><00:50:04.439><c> on</c><00:50:04.589><c> the</c><00:50:05.160><c> other</c><00:50:05.339><c> hand</c><00:50:05.759><c> with</c>

00:50:06.319 --> 00:50:06.329 align:start position:0%
and concurrent on the other hand with
 

00:50:06.329 --> 00:50:08.689 align:start position:0%
and concurrent on the other hand with
this<00:50:06.599><c> kind</c><00:50:06.959><c> of</c><00:50:07.079><c> code</c><00:50:07.410><c> imagine</c><00:50:08.309><c> this</c><00:50:08.459><c> was</c><00:50:08.670><c> a</c>

00:50:08.689 --> 00:50:08.699 align:start position:0%
this kind of code imagine this was a
 

00:50:08.699 --> 00:50:11.539 align:start position:0%
this kind of code imagine this was a
very<00:50:08.999><c> fairly</c><00:50:09.719><c> large</c><00:50:09.989><c> collection</c><00:50:10.799><c> what</c><00:50:11.400><c> you</c>

00:50:11.539 --> 00:50:11.549 align:start position:0%
very fairly large collection what you
 

00:50:11.549 --> 00:50:13.189 align:start position:0%
very fairly large collection what you
can<00:50:11.729><c> do</c><00:50:11.939><c> is</c><00:50:12.179><c> when</c><00:50:12.359><c> you</c><00:50:12.420><c> run</c><00:50:12.599><c> the</c><00:50:12.809><c> code</c><00:50:12.989><c> you</c><00:50:13.140><c> can</c>

00:50:13.189 --> 00:50:13.199 align:start position:0%
can do is when you run the code you can
 

00:50:13.199 --> 00:50:15.769 align:start position:0%
can do is when you run the code you can
see<00:50:13.589><c> that</c><00:50:13.619><c> it</c><00:50:14.309><c> produces</c><00:50:14.640><c> the</c><00:50:14.819><c> result</c><00:50:15.209><c> but</c><00:50:15.749><c> you</c>

00:50:15.769 --> 00:50:15.779 align:start position:0%
see that it produces the result but you
 

00:50:15.779 --> 00:50:18.140 align:start position:0%
see that it produces the result but you
can<00:50:15.989><c> simply</c><00:50:16.170><c> throw</c><00:50:16.469><c> a</c><00:50:16.499><c> parallel</c><00:50:17.249><c> in</c><00:50:17.459><c> here</c><00:50:17.969><c> and</c>

00:50:18.140 --> 00:50:18.150 align:start position:0%
can simply throw a parallel in here and
 

00:50:18.150 --> 00:50:20.299 align:start position:0%
can simply throw a parallel in here and
this<00:50:18.660><c> will</c><00:50:18.839><c> run</c><00:50:19.019><c> in</c><00:50:19.289><c> parallel</c><00:50:19.679><c> and</c><00:50:20.009><c> produce</c>

00:50:20.299 --> 00:50:20.309 align:start position:0%
this will run in parallel and produce
 

00:50:20.309 --> 00:50:22.400 align:start position:0%
this will run in parallel and produce
the<00:50:20.489><c> result</c><00:50:20.819><c> across</c><00:50:21.150><c> the</c><00:50:21.299><c> course</c><00:50:21.539><c> either</c><00:50:22.199><c> you</c>

00:50:22.400 --> 00:50:22.410 align:start position:0%
the result across the course either you
 

00:50:22.410 --> 00:50:24.289 align:start position:0%
the result across the course either you
can<00:50:22.559><c> call</c><00:50:22.769><c> parallel</c><00:50:23.279><c> like</c><00:50:23.429><c> this</c><00:50:23.459><c> or</c><00:50:23.939><c> you</c><00:50:24.119><c> can</c>

00:50:24.289 --> 00:50:24.299 align:start position:0%
can call parallel like this or you can
 

00:50:24.299 --> 00:50:26.390 align:start position:0%
can call parallel like this or you can
turn<00:50:24.449><c> this</c><00:50:24.630><c> into</c><00:50:24.839><c> a</c><00:50:24.959><c> parallel</c><00:50:25.469><c> stream</c><00:50:25.799><c> as</c><00:50:25.979><c> well</c>

00:50:26.390 --> 00:50:26.400 align:start position:0%
turn this into a parallel stream as well
 

00:50:26.400 --> 00:50:28.880 align:start position:0%
turn this into a parallel stream as well
but<00:50:27.059><c> the</c><00:50:27.269><c> beauty</c><00:50:27.660><c> of</c><00:50:27.689><c> this</c><00:50:27.989><c> more</c><00:50:28.170><c> important</c><00:50:28.650><c> is</c>

00:50:28.880 --> 00:50:28.890 align:start position:0%
but the beauty of this more important is
 

00:50:28.890 --> 00:50:31.339 align:start position:0%
but the beauty of this more important is
the<00:50:29.339><c> code</c><00:50:29.670><c> structure</c><00:50:30.150><c> is</c><00:50:30.449><c> not</c><00:50:30.719><c> different</c>

00:50:31.339 --> 00:50:31.349 align:start position:0%
the code structure is not different
 

00:50:31.349 --> 00:50:34.130 align:start position:0%
the code structure is not different
between<00:50:31.849><c> sequential</c><00:50:32.849><c> and</c><00:50:32.999><c> parallel</c><00:50:33.140><c> the</c>

00:50:34.130 --> 00:50:34.140 align:start position:0%
between sequential and parallel the
 

00:50:34.140 --> 00:50:35.900 align:start position:0%
between sequential and parallel the
chord<00:50:34.469><c> structure</c><00:50:34.859><c> for</c><00:50:35.160><c> the</c><00:50:35.249><c> first</c><00:50:35.489><c> time</c><00:50:35.699><c> in</c><00:50:35.819><c> a</c>

00:50:35.900 --> 00:50:35.910 align:start position:0%
chord structure for the first time in a
 

00:50:35.910 --> 00:50:38.419 align:start position:0%
chord structure for the first time in a
long<00:50:36.089><c> time</c><00:50:36.150><c> is</c><00:50:36.900><c> exactly</c><00:50:37.890><c> the</c><00:50:38.009><c> same</c><00:50:38.189><c> between</c>

00:50:38.419 --> 00:50:38.429 align:start position:0%
long time is exactly the same between
 

00:50:38.429 --> 00:50:40.969 align:start position:0%
long time is exactly the same between
sequential<00:50:39.029><c> and</c><00:50:39.150><c> concurrent</c><00:50:39.749><c> that's</c><00:50:40.319><c> a</c><00:50:40.499><c> huge</c>

00:50:40.969 --> 00:50:40.979 align:start position:0%
sequential and concurrent that's a huge
 

00:50:40.979 --> 00:50:43.669 align:start position:0%
sequential and concurrent that's a huge
benefit<00:50:41.459><c> for</c><00:50:41.519><c> us</c><00:50:41.819><c> to</c><00:50:42.029><c> enjoy</c><00:50:42.539><c> and</c><00:50:42.839><c> that</c><00:50:43.410><c> is</c><00:50:43.529><c> one</c>

00:50:43.669 --> 00:50:43.679 align:start position:0%
benefit for us to enjoy and that is one
 

00:50:43.679 --> 00:50:45.529 align:start position:0%
benefit for us to enjoy and that is one
of<00:50:43.769><c> the</c><00:50:43.829><c> biggest</c><00:50:44.099><c> benefits</c><00:50:44.519><c> tells</c><00:50:45.179><c> us</c><00:50:45.390><c> to</c>

00:50:45.529 --> 00:50:45.539 align:start position:0%
of the biggest benefits tells us to
 

00:50:45.539 --> 00:50:48.140 align:start position:0%
of the biggest benefits tells us to
summarize<00:50:46.069><c> functional</c><00:50:47.069><c> programming</c><00:50:47.489><c> removes</c>

00:50:48.140 --> 00:50:48.150 align:start position:0%
summarize functional programming removes
 

00:50:48.150 --> 00:50:51.439 align:start position:0%
summarize functional programming removes
accidental<00:50:49.140><c> complexity</c><00:50:49.619><c> from</c><00:50:50.309><c> our</c><00:50:50.519><c> code</c><00:50:50.969><c> well</c>

00:50:51.439 --> 00:50:51.449 align:start position:0%
accidental complexity from our code well
 

00:50:51.449 --> 00:50:54.049 align:start position:0%
accidental complexity from our code well
clearly<00:50:51.929><c> we</c><00:50:52.170><c> can</c><00:50:52.410><c> all</c><00:50:52.650><c> agree</c><00:50:53.059><c> functional</c>

00:50:54.049 --> 00:50:54.059 align:start position:0%
clearly we can all agree functional
 

00:50:54.059 --> 00:50:56.029 align:start position:0%
clearly we can all agree functional
programming<00:50:54.390><c> takes</c><00:50:54.689><c> a</c><00:50:54.809><c> lot</c><00:50:54.959><c> more</c><00:50:55.170><c> effort</c><00:50:55.529><c> to</c>

00:50:56.029 --> 00:50:56.039 align:start position:0%
programming takes a lot more effort to
 

00:50:56.039 --> 00:50:57.979 align:start position:0%
programming takes a lot more effort to
understand<00:50:56.459><c> the</c><00:50:56.640><c> beginning</c><00:50:56.880><c> that's</c><00:50:57.660><c> because</c>

00:50:57.979 --> 00:50:57.989 align:start position:0%
understand the beginning that's because
 

00:50:57.989 --> 00:51:00.109 align:start position:0%
understand the beginning that's because
we're<00:50:58.170><c> not</c><00:50:58.199><c> familiar</c><00:50:58.559><c> with</c><00:50:59.219><c> it</c><00:50:59.429><c> we</c><00:50:59.939><c> are</c>

00:51:00.109 --> 00:51:00.119 align:start position:0%
we're not familiar with it we are
 

00:51:00.119 --> 00:51:01.849 align:start position:0%
we're not familiar with it we are
familiar<00:51:00.630><c> with</c><00:51:00.660><c> imperative</c><00:51:01.349><c> style</c><00:51:01.619><c> of</c>

00:51:01.849 --> 00:51:01.859 align:start position:0%
familiar with imperative style of
 

00:51:01.859 --> 00:51:03.439 align:start position:0%
familiar with imperative style of
programming<00:51:02.369><c> but</c><00:51:02.519><c> once</c><00:51:02.969><c> they</c><00:51:03.179><c> become</c>

00:51:03.439 --> 00:51:03.449 align:start position:0%
programming but once they become
 

00:51:03.449 --> 00:51:05.719 align:start position:0%
programming but once they become
familiar<00:51:03.689><c> it</c><00:51:04.410><c> takes</c><00:51:04.920><c> us</c><00:51:05.069><c> a</c><00:51:05.099><c> lot</c><00:51:05.339><c> less</c><00:51:05.579><c> effort</c>

00:51:05.719 --> 00:51:05.729 align:start position:0%
familiar it takes us a lot less effort
 

00:51:05.729 --> 00:51:06.500 align:start position:0%
familiar it takes us a lot less effort
to<00:51:06.059><c> write</c>

00:51:06.500 --> 00:51:06.510 align:start position:0%
to write
 

00:51:06.510 --> 00:51:08.930 align:start position:0%
to write
it<00:51:07.050><c> removes</c><00:51:07.470><c> these</c><00:51:07.770><c> accidental</c><00:51:08.460><c> complexity</c>

00:51:08.930 --> 00:51:08.940 align:start position:0%
it removes these accidental complexity
 

00:51:08.940 --> 00:51:11.420 align:start position:0%
it removes these accidental complexity
it<00:51:09.420><c> makes</c><00:51:09.900><c> it</c><00:51:10.050><c> easier</c><00:51:10.260><c> to</c><00:51:10.320><c> reason</c><00:51:10.740><c> the</c><00:51:10.890><c> code</c><00:51:11.070><c> it</c>

00:51:11.420 --> 00:51:11.430 align:start position:0%
it makes it easier to reason the code it
 

00:51:11.430 --> 00:51:13.280 align:start position:0%
it makes it easier to reason the code it
makes<00:51:11.670><c> it</c><00:51:11.820><c> easier</c><00:51:12.120><c> to</c><00:51:12.150><c> penalize</c><00:51:12.600><c> the</c><00:51:12.660><c> code</c><00:51:12.930><c> so</c>

00:51:13.280 --> 00:51:13.290 align:start position:0%
makes it easier to penalize the code so
 

00:51:13.290 --> 00:51:15.920 align:start position:0%
makes it easier to penalize the code so
all<00:51:13.590><c> that</c><00:51:13.890><c> benefit</c><00:51:14.340><c> we</c><00:51:14.460><c> can</c><00:51:14.610><c> enjoy</c><00:51:15.030><c> that's</c><00:51:15.720><c> one</c>

00:51:15.920 --> 00:51:15.930 align:start position:0%
all that benefit we can enjoy that's one
 

00:51:15.930 --> 00:51:17.390 align:start position:0%
all that benefit we can enjoy that's one
of<00:51:16.020><c> the</c><00:51:16.080><c> reasons</c><00:51:16.380><c> why</c><00:51:16.500><c> we</c><00:51:16.650><c> want</c><00:51:16.800><c> to</c><00:51:16.860><c> favor</c><00:51:17.100><c> this</c>

00:51:17.390 --> 00:51:17.400 align:start position:0%
of the reasons why we want to favor this
 

00:51:17.400 --> 00:51:19.820 align:start position:0%
of the reasons why we want to favor this
and<00:51:17.640><c> it's</c><00:51:18.030><c> really</c><00:51:18.330><c> cool</c><00:51:18.510><c> that</c><00:51:18.650><c> most</c><00:51:19.650><c> of</c><00:51:19.770><c> the</c>

00:51:19.820 --> 00:51:19.830 align:start position:0%
and it's really cool that most of the
 

00:51:19.830 --> 00:51:22.010 align:start position:0%
and it's really cool that most of the
mainstream<00:51:20.010><c> languages</c><00:51:20.700><c> today</c><00:51:20.880><c> are</c><00:51:21.180><c> providing</c>

00:51:22.010 --> 00:51:22.020 align:start position:0%
mainstream languages today are providing
 

00:51:22.020 --> 00:51:23.900 align:start position:0%
mainstream languages today are providing
this<00:51:22.200><c> including</c><00:51:22.740><c> Java</c><00:51:22.950><c> 8</c><00:51:23.220><c> if</c><00:51:23.640><c> you're</c>

00:51:23.900 --> 00:51:23.910 align:start position:0%
this including Java 8 if you're
 

00:51:23.910 --> 00:51:25.070 align:start position:0%
this including Java 8 if you're
interested<00:51:24.330><c> in</c><00:51:24.420><c> downloading</c><00:51:24.540><c> the</c><00:51:24.900><c> code</c>

00:51:25.070 --> 00:51:25.080 align:start position:0%
interested in downloading the code
 

00:51:25.080 --> 00:51:26.780 align:start position:0%
interested in downloading the code
examples<00:51:25.530><c> I</c><00:51:25.620><c> showed</c><00:51:25.830><c> you</c><00:51:26.070><c> you're</c><00:51:26.580><c> most</c>

00:51:26.780 --> 00:51:26.790 align:start position:0%
examples I showed you you're most
 

00:51:26.790 --> 00:51:28.610 align:start position:0%
examples I showed you you're most
welcome<00:51:26.970><c> to</c><00:51:27.180><c> download</c><00:51:27.630><c> them</c><00:51:27.840><c> at</c><00:51:28.050><c> the</c><00:51:28.380><c> link</c>

00:51:28.610 --> 00:51:28.620 align:start position:0%
welcome to download them at the link
 

00:51:28.620 --> 00:51:30.560 align:start position:0%
welcome to download them at the link
that's<00:51:28.830><c> shown</c><00:51:29.100><c> in</c><00:51:29.250><c> the</c><00:51:29.340><c> bottom</c><00:51:29.520><c> hope</c><00:51:30.300><c> that</c><00:51:30.480><c> was</c>

00:51:30.560 --> 00:51:30.570 align:start position:0%
that's shown in the bottom hope that was
 

00:51:30.570 --> 00:51:32.260 align:start position:0%
that's shown in the bottom hope that was
useful<00:51:30.720><c> thankful</c><00:51:31.440><c> thanks</c><00:51:31.650><c> for</c><00:51:31.770><c> your</c><00:51:31.830><c> time</c>

00:51:32.260 --> 00:51:32.270 align:start position:0%
useful thankful thanks for your time
 

00:51:32.270 --> 00:51:38.799 align:start position:0%
useful thankful thanks for your time
[Music]

