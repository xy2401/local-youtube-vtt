WEBVTT
Kind: captions
Language: en

00:00:00.030 --> 00:00:02.659 align:start position:0%
 
hello<00:00:00.570><c> there</c><00:00:00.780><c> welcome</c><00:00:01.380><c> to</c><00:00:01.620><c> the</c><00:00:02.159><c> keynote</c><00:00:02.490><c> our</c>

00:00:02.659 --> 00:00:02.669 align:start position:0%
hello there welcome to the keynote our
 

00:00:02.669 --> 00:00:04.030 align:start position:0%
hello there welcome to the keynote our
laziness<00:00:03.149><c> the</c><00:00:03.419><c> ultimate</c><00:00:03.840><c> sophistication</c>

00:00:04.030 --> 00:00:04.040 align:start position:0%
laziness the ultimate sophistication
 

00:00:04.040 --> 00:00:07.160 align:start position:0%
laziness the ultimate sophistication
both<00:00:05.040><c> in</c><00:00:05.160><c> life</c><00:00:05.310><c> and</c><00:00:05.339><c> programming</c><00:00:06.330><c> my</c><00:00:06.899><c> name</c><00:00:07.049><c> is</c>

00:00:07.160 --> 00:00:07.170 align:start position:0%
both in life and programming my name is
 

00:00:07.170 --> 00:00:08.810 align:start position:0%
both in life and programming my name is
Becca<00:00:07.350><c> Subramanyam</c><00:00:08.099><c> I'm</c><00:00:08.429><c> gonna</c><00:00:08.639><c> talk</c><00:00:08.790><c> about</c>

00:00:08.810 --> 00:00:08.820 align:start position:0%
Becca Subramanyam I'm gonna talk about
 

00:00:08.820 --> 00:00:10.640 align:start position:0%
Becca Subramanyam I'm gonna talk about
my<00:00:09.150><c> excitement</c><00:00:09.809><c> around</c><00:00:09.900><c> functional</c><00:00:10.380><c> style</c><00:00:10.559><c> of</c>

00:00:10.640 --> 00:00:10.650 align:start position:0%
my excitement around functional style of
 

00:00:10.650 --> 00:00:12.589 align:start position:0%
my excitement around functional style of
programming<00:00:10.769><c> how</c><00:00:11.670><c> practical</c><00:00:12.150><c> is</c><00:00:12.330><c> it</c><00:00:12.450><c> to</c>

00:00:12.589 --> 00:00:12.599 align:start position:0%
programming how practical is it to
 

00:00:12.599 --> 00:00:14.720 align:start position:0%
programming how practical is it to
really<00:00:12.840><c> achieve</c><00:00:13.049><c> that</c><00:00:13.290><c> and</c><00:00:13.740><c> how</c><00:00:14.219><c> language</c><00:00:14.429><c> is</c>

00:00:14.720 --> 00:00:14.730 align:start position:0%
really achieve that and how language is
 

00:00:14.730 --> 00:00:16.849 align:start position:0%
really achieve that and how language is
like<00:00:14.820><c> Java</c><00:00:15.089><c> make</c><00:00:15.330><c> it</c><00:00:15.480><c> really</c><00:00:16.020><c> easy</c><00:00:16.260><c> for</c><00:00:16.560><c> us</c>

00:00:16.849 --> 00:00:16.859 align:start position:0%
like Java make it really easy for us
 

00:00:16.859 --> 00:00:19.010 align:start position:0%
like Java make it really easy for us
well<00:00:17.820><c> we've</c><00:00:17.970><c> been</c><00:00:18.060><c> programming</c><00:00:18.539><c> in</c><00:00:18.869><c> the</c>

00:00:19.010 --> 00:00:19.020 align:start position:0%
well we've been programming in the
 

00:00:19.020 --> 00:00:21.620 align:start position:0%
well we've been programming in the
imperative<00:00:19.710><c> style</c><00:00:20.010><c> most</c><00:00:20.670><c> of</c><00:00:20.789><c> the</c><00:00:20.880><c> predominant</c>

00:00:21.620 --> 00:00:21.630 align:start position:0%
imperative style most of the predominant
 

00:00:21.630 --> 00:00:23.540 align:start position:0%
imperative style most of the predominant
mainstream<00:00:22.439><c> languages</c><00:00:22.890><c> provide</c><00:00:23.070><c> impetus</c>

00:00:23.540 --> 00:00:23.550 align:start position:0%
mainstream languages provide impetus
 

00:00:23.550 --> 00:00:25.880 align:start position:0%
mainstream languages provide impetus
Tylar<00:00:24.000><c> programming</c><00:00:24.539><c> for</c><00:00:24.779><c> a</c><00:00:24.810><c> very</c><00:00:25.109><c> long</c><00:00:25.410><c> time</c>

00:00:25.880 --> 00:00:25.890 align:start position:0%
Tylar programming for a very long time
 

00:00:25.890 --> 00:00:27.859 align:start position:0%
Tylar programming for a very long time
well<00:00:26.400><c> in</c><00:00:26.580><c> the</c><00:00:26.760><c> impetus</c><00:00:27.180><c> trail</c><00:00:27.330><c> of</c><00:00:27.420><c> programming</c>

00:00:27.859 --> 00:00:27.869 align:start position:0%
well in the impetus trail of programming
 

00:00:27.869 --> 00:00:29.990 align:start position:0%
well in the impetus trail of programming
we<00:00:28.019><c> focus</c><00:00:28.380><c> on</c><00:00:28.560><c> what</c><00:00:28.949><c> to</c><00:00:29.099><c> do</c><00:00:29.250><c> but</c><00:00:29.849><c> unfortunately</c>

00:00:29.990 --> 00:00:30.000 align:start position:0%
we focus on what to do but unfortunately
 

00:00:30.000 --> 00:00:32.959 align:start position:0%
we focus on what to do but unfortunately
mostly<00:00:30.960><c> on</c><00:00:31.170><c> how</c><00:00:31.650><c> to</c><00:00:31.710><c> do</c><00:00:32.009><c> let's</c><00:00:32.669><c> talk</c><00:00:32.850><c> about</c>

00:00:32.959 --> 00:00:32.969 align:start position:0%
mostly on how to do let's talk about
 

00:00:32.969 --> 00:00:35.299 align:start position:0%
mostly on how to do let's talk about
this<00:00:33.210><c> with</c><00:00:33.360><c> a</c><00:00:33.420><c> really</c><00:00:33.899><c> small</c><00:00:33.960><c> little</c><00:00:34.710><c> example</c>

00:00:35.299 --> 00:00:35.309 align:start position:0%
this with a really small little example
 

00:00:35.309 --> 00:00:37.490 align:start position:0%
this with a really small little example
a<00:00:35.489><c> trivial</c><00:00:36.180><c> example</c><00:00:36.630><c> but</c><00:00:36.660><c> nevertheless</c><00:00:37.050><c> place</c>

00:00:37.490 --> 00:00:37.500 align:start position:0%
a trivial example but nevertheless place
 

00:00:37.500 --> 00:00:39.260 align:start position:0%
a trivial example but nevertheless place
with<00:00:37.680><c> illustrates</c><00:00:38.160><c> the</c><00:00:38.250><c> point</c><00:00:38.430><c> really</c><00:00:39.059><c> well</c>

00:00:39.260 --> 00:00:39.270 align:start position:0%
with illustrates the point really well
 

00:00:39.270 --> 00:00:40.850 align:start position:0%
with illustrates the point really well
so<00:00:39.899><c> let's</c><00:00:40.079><c> get</c><00:00:40.170><c> started</c><00:00:40.530><c> with</c><00:00:40.680><c> a</c><00:00:40.739><c> little</c>

00:00:40.850 --> 00:00:40.860 align:start position:0%
so let's get started with a little
 

00:00:40.860 --> 00:00:43.310 align:start position:0%
so let's get started with a little
example<00:00:41.460><c> here</c><00:00:41.670><c> here's</c><00:00:42.329><c> a</c><00:00:42.450><c> list</c><00:00:42.600><c> of</c><00:00:42.750><c> names</c><00:00:42.989><c> half</c>

00:00:43.310 --> 00:00:43.320 align:start position:0%
example here here's a list of names half
 

00:00:43.320 --> 00:00:45.380 align:start position:0%
example here here's a list of names half
of<00:00:43.440><c> which</c><00:00:43.590><c> we</c><00:00:43.739><c> cannot</c><00:00:43.950><c> see</c><00:00:44.010><c> but</c><00:00:44.940><c> I'm</c><00:00:45.030><c> curious</c>

00:00:45.380 --> 00:00:45.390 align:start position:0%
of which we cannot see but I'm curious
 

00:00:45.390 --> 00:00:48.020 align:start position:0%
of which we cannot see but I'm curious
either<00:00:45.780><c> a</c><00:00:45.930><c> friend</c><00:00:46.260><c> Nemo</c><00:00:46.500><c> in</c><00:00:46.770><c> the</c><00:00:46.980><c> list</c><00:00:47.190><c> how</c><00:00:47.969><c> do</c>

00:00:48.020 --> 00:00:48.030 align:start position:0%
either a friend Nemo in the list how do
 

00:00:48.030 --> 00:00:50.240 align:start position:0%
either a friend Nemo in the list how do
we<00:00:48.210><c> solve</c><00:00:48.420><c> this</c><00:00:48.629><c> problem</c><00:00:48.690><c> well</c><00:00:49.649><c> an</c><00:00:49.770><c> imperative</c>

00:00:50.240 --> 00:00:50.250 align:start position:0%
we solve this problem well an imperative
 

00:00:50.250 --> 00:00:52.819 align:start position:0%
we solve this problem well an imperative
style<00:00:50.579><c> it</c><00:00:51.149><c> starts</c><00:00:51.539><c> with</c><00:00:51.629><c> a</c><00:00:51.660><c> ceremony</c><00:00:52.230><c> right</c>

00:00:52.819 --> 00:00:52.829 align:start position:0%
style it starts with a ceremony right
 

00:00:52.829 --> 00:00:55.729 align:start position:0%
style it starts with a ceremony right
off<00:00:53.100><c> the</c><00:00:53.340><c> bat</c><00:00:53.520><c> so</c><00:00:54.210><c> first</c><00:00:54.570><c> of</c><00:00:54.690><c> all</c><00:00:54.809><c> say</c><00:00:55.079><c> boolean</c>

00:00:55.729 --> 00:00:55.739 align:start position:0%
off the bat so first of all say boolean
 

00:00:55.739 --> 00:00:58.520 align:start position:0%
off the bat so first of all say boolean
thousand<00:00:56.460><c> is</c><00:00:56.579><c> equal</c><00:00:56.940><c> to</c><00:00:57.149><c> in</c><00:00:57.480><c> this</c><00:00:57.840><c> case</c><00:00:57.899><c> false</c>

00:00:58.520 --> 00:00:58.530 align:start position:0%
thousand is equal to in this case false
 

00:00:58.530 --> 00:01:01.970 align:start position:0%
thousand is equal to in this case false
we<00:00:59.399><c> want</c><00:00:59.609><c> to</c><00:00:59.670><c> then</c><00:00:59.789><c> say</c><00:01:00.030><c> for</c><00:01:00.090><c> pick</c><00:01:01.020><c> one</c><00:01:01.410><c> name</c><00:01:01.649><c> at</c>

00:01:01.970 --> 00:01:01.980 align:start position:0%
we want to then say for pick one name at
 

00:01:01.980 --> 00:01:04.399 align:start position:0%
we want to then say for pick one name at
a<00:01:02.010><c> time</c><00:01:02.280><c> from</c><00:01:02.789><c> the</c><00:01:02.940><c> list</c><00:01:03.149><c> of</c><00:01:03.300><c> course</c><00:01:03.570><c> and</c><00:01:04.290><c> then</c>

00:01:04.399 --> 00:01:04.409 align:start position:0%
a time from the list of course and then
 

00:01:04.409 --> 00:01:06.590 align:start position:0%
a time from the list of course and then
we<00:01:04.500><c> gonna</c><00:01:04.619><c> examine</c><00:01:05.159><c> given</c><00:01:05.850><c> each</c><00:01:06.119><c> of</c><00:01:06.330><c> the</c><00:01:06.420><c> name</c>

00:01:06.590 --> 00:01:06.600 align:start position:0%
we gonna examine given each of the name
 

00:01:06.600 --> 00:01:09.170 align:start position:0%
we gonna examine given each of the name
we're<00:01:07.229><c> gonna</c><00:01:07.350><c> ask</c><00:01:07.560><c> you</c><00:01:07.799><c> that</c><00:01:08.100><c> name</c><00:01:08.310><c> is</c><00:01:08.520><c> equal</c>

00:01:09.170 --> 00:01:09.180 align:start position:0%
we're gonna ask you that name is equal
 

00:01:09.180 --> 00:01:12.710 align:start position:0%
we're gonna ask you that name is equal
to<00:01:09.479><c> well</c><00:01:10.350><c> of</c><00:01:10.560><c> course</c><00:01:10.799><c> the</c><00:01:11.010><c> word</c><00:01:11.189><c> Nemo</c><00:01:11.580><c> well</c><00:01:12.479><c> if</c>

00:01:12.710 --> 00:01:12.720 align:start position:0%
to well of course the word Nemo well if
 

00:01:12.720 --> 00:01:14.570 align:start position:0%
to well of course the word Nemo well if
it<00:01:12.869><c> is</c><00:01:12.990><c> found</c><00:01:13.200><c> we</c><00:01:13.619><c> declare</c><00:01:13.979><c> the</c><00:01:14.130><c> victory</c><00:01:14.430><c> by</c>

00:01:14.570 --> 00:01:14.580 align:start position:0%
it is found we declare the victory by
 

00:01:14.580 --> 00:01:16.940 align:start position:0%
it is found we declare the victory by
setting<00:01:14.939><c> found</c><00:01:15.240><c> equal</c><00:01:15.600><c> to</c><00:01:15.720><c> true</c><00:01:15.990><c> but</c><00:01:16.560><c> not</c><00:01:16.710><c> so</c>

00:01:16.940 --> 00:01:16.950 align:start position:0%
setting found equal to true but not so
 

00:01:16.950 --> 00:01:18.980 align:start position:0%
setting found equal to true but not so
fast<00:01:17.220><c> you</c><00:01:17.790><c> better</c><00:01:17.970><c> remember</c><00:01:18.119><c> to</c><00:01:18.450><c> break</c><00:01:18.720><c> out</c><00:01:18.960><c> of</c>

00:01:18.980 --> 00:01:18.990 align:start position:0%
fast you better remember to break out of
 

00:01:18.990 --> 00:01:21.499 align:start position:0%
fast you better remember to break out of
this<00:01:19.170><c> as</c><00:01:19.409><c> well</c><00:01:19.680><c> otherwise</c><00:01:20.310><c> we'll</c><00:01:20.580><c> be</c><00:01:20.610><c> cut</c><00:01:21.299><c> into</c>

00:01:21.499 --> 00:01:21.509 align:start position:0%
this as well otherwise we'll be cut into
 

00:01:21.509 --> 00:01:23.240 align:start position:0%
this as well otherwise we'll be cut into
process<00:01:22.080><c> even</c><00:01:22.290><c> after</c><00:01:22.530><c> we</c><00:01:22.619><c> found</c><00:01:22.740><c> the</c><00:01:22.920><c> result</c>

00:01:23.240 --> 00:01:23.250 align:start position:0%
process even after we found the result
 

00:01:23.250 --> 00:01:25.370 align:start position:0%
process even after we found the result
which<00:01:23.880><c> is</c><00:01:24.000><c> not</c><00:01:24.210><c> very</c><00:01:24.540><c> good</c><00:01:24.689><c> for</c><00:01:24.840><c> performance</c>

00:01:25.370 --> 00:01:25.380 align:start position:0%
which is not very good for performance
 

00:01:25.380 --> 00:01:27.109 align:start position:0%
which is not very good for performance
especially<00:01:25.560><c> when</c><00:01:26.040><c> we</c><00:01:26.189><c> have</c><00:01:26.369><c> a</c><00:01:26.549><c> very</c><00:01:26.880><c> large</c>

00:01:27.109 --> 00:01:27.119 align:start position:0%
especially when we have a very large
 

00:01:27.119 --> 00:01:30.080 align:start position:0%
especially when we have a very large
collection<00:01:27.409><c> but</c><00:01:28.409><c> not</c><00:01:28.829><c> quite</c><00:01:29.100><c> done</c><00:01:29.340><c> yet</c><00:01:29.369><c> we</c>

00:01:30.080 --> 00:01:30.090 align:start position:0%
collection but not quite done yet we
 

00:01:30.090 --> 00:01:31.580 align:start position:0%
collection but not quite done yet we
still<00:01:30.270><c> have</c><00:01:30.420><c> to</c><00:01:30.509><c> come</c><00:01:30.659><c> back</c><00:01:30.840><c> and</c><00:01:30.990><c> examine</c><00:01:31.470><c> the</c>

00:01:31.580 --> 00:01:31.590 align:start position:0%
still have to come back and examine the
 

00:01:31.590 --> 00:01:33.469 align:start position:0%
still have to come back and examine the
found<00:01:31.860><c> and</c><00:01:32.490><c> then</c><00:01:32.640><c> we</c><00:01:32.729><c> have</c><00:01:32.880><c> to</c><00:01:33.030><c> say</c><00:01:33.210><c> output</c>

00:01:33.469 --> 00:01:33.479 align:start position:0%
found and then we have to say output
 

00:01:33.479 --> 00:01:36.770 align:start position:0%
found and then we have to say output
Nemo<00:01:34.409><c> found</c><00:01:34.770><c> and</c><00:01:35.040><c> celebrate</c><00:01:35.549><c> about</c><00:01:35.939><c> it</c><00:01:36.180><c> of</c>

00:01:36.770 --> 00:01:36.780 align:start position:0%
Nemo found and celebrate about it of
 

00:01:36.780 --> 00:01:39.410 align:start position:0%
Nemo found and celebrate about it of
course<00:01:37.079><c> sadly</c><00:01:37.619><c> we</c><00:01:37.829><c> couldn't</c><00:01:38.070><c> find</c><00:01:38.310><c> Nemo</c><00:01:38.759><c> will</c>

00:01:39.410 --> 00:01:39.420 align:start position:0%
course sadly we couldn't find Nemo will
 

00:01:39.420 --> 00:01:42.109 align:start position:0%
course sadly we couldn't find Nemo will
then<00:01:39.630><c> declare</c><00:01:40.079><c> saying</c><00:01:40.680><c> oh</c><00:01:40.920><c> maybe</c><00:01:41.400><c> that</c><00:01:41.759><c> Nemo</c>

00:01:42.109 --> 00:01:42.119 align:start position:0%
then declare saying oh maybe that Nemo
 

00:01:42.119 --> 00:01:44.960 align:start position:0%
then declare saying oh maybe that Nemo
was<00:01:42.360><c> not</c><00:01:42.570><c> found</c><00:01:42.930><c> quite</c><00:01:43.590><c> here</c><00:01:43.890><c> in</c><00:01:44.070><c> this</c><00:01:44.250><c> case</c><00:01:44.460><c> so</c>

00:01:44.960 --> 00:01:44.970 align:start position:0%
was not found quite here in this case so
 

00:01:44.970 --> 00:01:47.420 align:start position:0%
was not found quite here in this case so
we'll<00:01:45.119><c> say</c><00:01:45.329><c> Nemo</c><00:01:45.689><c> not</c><00:01:46.200><c> found</c><00:01:46.530><c> maybe</c><00:01:46.829><c> play</c><00:01:47.159><c> sad</c>

00:01:47.420 --> 00:01:47.430 align:start position:0%
we'll say Nemo not found maybe play sad
 

00:01:47.430 --> 00:01:49.340 align:start position:0%
we'll say Nemo not found maybe play sad
music<00:01:47.549><c> let's</c><00:01:48.450><c> go</c><00:01:48.540><c> ahead</c><00:01:48.659><c> and</c><00:01:48.750><c> run</c><00:01:48.899><c> this</c><00:01:49.110><c> code</c>

00:01:49.340 --> 00:01:49.350 align:start position:0%
music let's go ahead and run this code
 

00:01:49.350 --> 00:01:51.819 align:start position:0%
music let's go ahead and run this code
and<00:01:49.409><c> see</c><00:01:49.590><c> yay</c><00:01:50.280><c> good</c><00:01:50.670><c> news</c><00:01:50.909><c> we</c><00:01:51.270><c> found</c><00:01:51.299><c> Nemo</c>

00:01:51.819 --> 00:01:51.829 align:start position:0%
and see yay good news we found Nemo
 

00:01:51.829 --> 00:01:54.370 align:start position:0%
and see yay good news we found Nemo
that's<00:01:52.829><c> imperative</c><00:01:53.369><c> style</c><00:01:53.850><c> of</c><00:01:54.210><c> programming</c>

00:01:54.370 --> 00:01:54.380 align:start position:0%
that's imperative style of programming
 

00:01:54.380 --> 00:01:57.530 align:start position:0%
that's imperative style of programming
well<00:01:55.380><c> I</c><00:01:55.590><c> call</c><00:01:55.920><c> this</c><00:01:56.100><c> accidental</c><00:01:56.969><c> complexity</c>

00:01:57.530 --> 00:01:57.540 align:start position:0%
well I call this accidental complexity
 

00:01:57.540 --> 00:02:01.789 align:start position:0%
well I call this accidental complexity
because<00:01:58.500><c> in</c><00:01:58.860><c> the</c><00:01:59.100><c> imperative</c><00:01:59.579><c> style</c><00:02:00.420><c> we</c><00:02:01.320><c> focus</c>

00:02:01.789 --> 00:02:01.799 align:start position:0%
because in the imperative style we focus
 

00:02:01.799 --> 00:02:05.660 align:start position:0%
because in the imperative style we focus
on<00:02:01.979><c> what</c><00:02:02.490><c> to</c><00:02:02.700><c> do</c><00:02:02.880><c> but</c><00:02:03.630><c> also</c><00:02:03.990><c> on</c><00:02:04.619><c> how</c><00:02:05.219><c> to</c><00:02:05.280><c> do</c><00:02:05.640><c> it</c>

00:02:05.660 --> 00:02:05.670 align:start position:0%
on what to do but also on how to do it
 

00:02:05.670 --> 00:02:08.809 align:start position:0%
on what to do but also on how to do it
we<00:02:06.540><c> could</c><00:02:06.689><c> drag</c><00:02:07.079><c> into</c><00:02:07.380><c> the</c><00:02:07.530><c> details</c><00:02:07.890><c> of</c><00:02:08.099><c> how</c><00:02:08.429><c> we</c>

00:02:08.809 --> 00:02:08.819 align:start position:0%
we could drag into the details of how we
 

00:02:08.819 --> 00:02:12.170 align:start position:0%
we could drag into the details of how we
had<00:02:09.420><c> to</c><00:02:09.450><c> take</c><00:02:10.349><c> every</c><00:02:10.800><c> single</c><00:02:11.160><c> element</c><00:02:11.370><c> we</c><00:02:12.060><c> have</c>

00:02:12.170 --> 00:02:12.180 align:start position:0%
had to take every single element we have
 

00:02:12.180 --> 00:02:12.920 align:start position:0%
had to take every single element we have
to<00:02:12.270><c> compare</c><00:02:12.690><c> the</c>

00:02:12.920 --> 00:02:12.930 align:start position:0%
to compare the
 

00:02:12.930 --> 00:02:15.319 align:start position:0%
to compare the
element<00:02:13.349><c> we</c><00:02:13.769><c> have</c><00:02:13.799><c> to</c><00:02:14.040><c> set</c><00:02:14.189><c> a</c><00:02:14.219><c> flag</c><00:02:14.579><c> and</c><00:02:14.909><c> don't</c>

00:02:15.319 --> 00:02:15.329 align:start position:0%
element we have to set a flag and don't
 

00:02:15.329 --> 00:02:17.599 align:start position:0%
element we have to set a flag and don't
remember<00:02:15.599><c> to</c><00:02:15.750><c> break</c><00:02:15.989><c> out</c><00:02:16.200><c> of</c><00:02:16.230><c> the</c><00:02:16.379><c> loop</c><00:02:16.609><c> every</c>

00:02:17.599 --> 00:02:17.609 align:start position:0%
remember to break out of the loop every
 

00:02:17.609 --> 00:02:20.360 align:start position:0%
remember to break out of the loop every
single<00:02:17.939><c> piece</c><00:02:18.120><c> is</c><00:02:18.450><c> your</c><00:02:19.019><c> responsibility</c><00:02:19.859><c> our</c>

00:02:20.360 --> 00:02:20.370 align:start position:0%
single piece is your responsibility our
 

00:02:20.370 --> 00:02:22.069 align:start position:0%
single piece is your responsibility our
responsibility<00:02:20.670><c> when</c><00:02:21.450><c> it</c><00:02:21.540><c> comes</c><00:02:21.719><c> to</c><00:02:21.870><c> coding</c>

00:02:22.069 --> 00:02:22.079 align:start position:0%
responsibility when it comes to coding
 

00:02:22.079 --> 00:02:24.949 align:start position:0%
responsibility when it comes to coding
in<00:02:22.409><c> the</c><00:02:22.469><c> style</c><00:02:23.069><c> of</c><00:02:23.219><c> programming</c><00:02:23.370><c> so</c><00:02:24.329><c> introduce</c>

00:02:24.949 --> 00:02:24.959 align:start position:0%
in the style of programming so introduce
 

00:02:24.959 --> 00:02:27.020 align:start position:0%
in the style of programming so introduce
style<00:02:25.200><c> of</c><00:02:25.319><c> programming</c><00:02:25.469><c> is</c><00:02:25.920><c> where</c><00:02:26.219><c> we</c><00:02:26.879><c> get</c>

00:02:27.020 --> 00:02:27.030 align:start position:0%
style of programming is where we get
 

00:02:27.030 --> 00:02:29.209 align:start position:0%
style of programming is where we get
pumped<00:02:27.450><c> down</c><00:02:27.659><c> with</c><00:02:27.989><c> the</c><00:02:28.109><c> details</c><00:02:28.500><c> that</c>

00:02:29.209 --> 00:02:29.219 align:start position:0%
pumped down with the details that
 

00:02:29.219 --> 00:02:31.490 align:start position:0%
pumped down with the details that
introduces<00:02:29.790><c> accidental</c><00:02:30.359><c> complexity</c><00:02:30.810><c> makes</c>

00:02:31.490 --> 00:02:31.500 align:start position:0%
introduces accidental complexity makes
 

00:02:31.500 --> 00:02:34.039 align:start position:0%
introduces accidental complexity makes
code<00:02:31.739><c> really</c><00:02:32.280><c> hard</c><00:02:32.519><c> to</c><00:02:32.670><c> change</c><00:02:32.849><c> that's</c><00:02:33.810><c> the</c>

00:02:34.039 --> 00:02:34.049 align:start position:0%
code really hard to change that's the
 

00:02:34.049 --> 00:02:34.490 align:start position:0%
code really hard to change that's the
past

00:02:34.490 --> 00:02:34.500 align:start position:0%
past
 

00:02:34.500 --> 00:02:36.709 align:start position:0%
past
every<00:02:35.310><c> single</c><00:02:35.670><c> mainstream</c><00:02:36.030><c> language</c><00:02:36.420><c> did</c>

00:02:36.709 --> 00:02:36.719 align:start position:0%
every single mainstream language did
 

00:02:36.719 --> 00:02:39.140 align:start position:0%
every single mainstream language did
this<00:02:36.900><c> to</c><00:02:37.019><c> us</c><00:02:37.049><c> but</c><00:02:37.889><c> it's</c><00:02:38.400><c> not</c><00:02:38.489><c> our</c><00:02:38.700><c> fault</c><00:02:38.790><c> as</c>

00:02:39.140 --> 00:02:39.150 align:start position:0%
this to us but it's not our fault as
 

00:02:39.150 --> 00:02:41.179 align:start position:0%
this to us but it's not our fault as
programmers<00:02:39.569><c> but</c><00:02:40.260><c> we</c><00:02:40.469><c> had</c><00:02:40.680><c> to</c><00:02:40.799><c> really</c><00:02:40.980><c> work</c>

00:02:41.179 --> 00:02:41.189 align:start position:0%
programmers but we had to really work
 

00:02:41.189 --> 00:02:43.280 align:start position:0%
programmers but we had to really work
with<00:02:41.219><c> tools</c><00:02:41.670><c> given</c><00:02:41.969><c> to</c><00:02:42.209><c> us</c><00:02:42.359><c> and</c><00:02:42.540><c> what's</c><00:02:42.870><c> mostly</c>

00:02:43.280 --> 00:02:43.290 align:start position:0%
with tools given to us and what's mostly
 

00:02:43.290 --> 00:02:46.699 align:start position:0%
with tools given to us and what's mostly
available<00:02:43.620><c> and</c><00:02:44.359><c> popular</c><00:02:45.359><c> as</c><00:02:45.510><c> well</c><00:02:45.780><c> but</c><00:02:46.439><c> the</c>

00:02:46.699 --> 00:02:46.709 align:start position:0%
available and popular as well but the
 

00:02:46.709 --> 00:02:48.830 align:start position:0%
available and popular as well but the
good<00:02:46.889><c> news</c><00:02:47.069><c> is</c><00:02:47.370><c> the</c><00:02:47.639><c> future</c><00:02:48.090><c> is</c><00:02:48.269><c> moving</c><00:02:48.629><c> in</c><00:02:48.750><c> a</c>

00:02:48.830 --> 00:02:48.840 align:start position:0%
good news is the future is moving in a
 

00:02:48.840 --> 00:02:51.440 align:start position:0%
good news is the future is moving in a
different<00:02:48.959><c> direction</c><00:02:49.579><c> almost</c><00:02:50.579><c> every</c><00:02:51.150><c> new</c>

00:02:51.440 --> 00:02:51.450 align:start position:0%
different direction almost every new
 

00:02:51.450 --> 00:02:53.809 align:start position:0%
different direction almost every new
mainstream<00:02:52.019><c> language</c><00:02:52.530><c> today</c><00:02:52.709><c> is</c><00:02:53.099><c> moving</c>

00:02:53.809 --> 00:02:53.819 align:start position:0%
mainstream language today is moving
 

00:02:53.819 --> 00:02:56.030 align:start position:0%
mainstream language today is moving
towards<00:02:54.269><c> the</c><00:02:54.689><c> functional</c><00:02:55.620><c> style</c><00:02:55.889><c> of</c>

00:02:56.030 --> 00:02:56.040 align:start position:0%
towards the functional style of
 

00:02:56.040 --> 00:02:58.099 align:start position:0%
towards the functional style of
programming<00:02:56.239><c> well</c><00:02:57.239><c> the</c><00:02:57.419><c> future</c><00:02:57.870><c> isn't</c>

00:02:58.099 --> 00:02:58.109 align:start position:0%
programming well the future isn't
 

00:02:58.109 --> 00:03:00.319 align:start position:0%
programming well the future isn't
decorated<00:02:59.040><c> style</c><00:02:59.310><c> and</c><00:02:59.549><c> function</c><00:02:59.969><c> of</c><00:03:00.030><c> style</c>

00:03:00.319 --> 00:03:00.329 align:start position:0%
decorated style and function of style
 

00:03:00.329 --> 00:03:02.839 align:start position:0%
decorated style and function of style
let's<00:03:00.959><c> talk</c><00:03:01.139><c> about</c><00:03:01.230><c> technologies</c><00:03:02.159><c> file</c><00:03:02.430><c> first</c>

00:03:02.839 --> 00:03:02.849 align:start position:0%
let's talk about technologies file first
 

00:03:02.849 --> 00:03:05.479 align:start position:0%
let's talk about technologies file first
going<00:03:03.780><c> back</c><00:03:03.959><c> to</c><00:03:04.139><c> this</c><00:03:04.260><c> example</c><00:03:04.709><c> this</c><00:03:05.310><c> was</c><00:03:05.459><c> a</c>

00:03:05.479 --> 00:03:05.489 align:start position:0%
going back to this example this was a
 

00:03:05.489 --> 00:03:08.270 align:start position:0%
going back to this example this was a
lot<00:03:05.849><c> of</c><00:03:06.030><c> ceremony</c><00:03:06.540><c> a</c><00:03:06.780><c> lot</c><00:03:07.349><c> of</c><00:03:07.500><c> noise</c><00:03:07.680><c> to</c><00:03:08.040><c> find</c>

00:03:08.270 --> 00:03:08.280 align:start position:0%
lot of ceremony a lot of noise to find
 

00:03:08.280 --> 00:03:11.449 align:start position:0%
lot of ceremony a lot of noise to find
Nemo<00:03:08.760><c> let's</c><00:03:09.750><c> get</c><00:03:09.959><c> rid</c><00:03:10.109><c> of</c><00:03:10.260><c> all</c><00:03:10.469><c> the</c><00:03:10.919><c> noise</c><00:03:11.129><c> and</c>

00:03:11.449 --> 00:03:11.459 align:start position:0%
Nemo let's get rid of all the noise and
 

00:03:11.459 --> 00:03:14.509 align:start position:0%
Nemo let's get rid of all the noise and
ceremony<00:03:12.000><c> in</c><00:03:12.269><c> this</c><00:03:12.510><c> code</c><00:03:12.780><c> right</c><00:03:13.349><c> here</c><00:03:13.379><c> and</c><00:03:13.709><c> I</c>

00:03:14.509 --> 00:03:14.519 align:start position:0%
ceremony in this code right here and I
 

00:03:14.519 --> 00:03:16.699 align:start position:0%
ceremony in this code right here and I
will<00:03:14.700><c> just</c><00:03:14.969><c> come</c><00:03:15.180><c> down</c><00:03:15.359><c> to</c><00:03:15.569><c> the</c><00:03:15.689><c> found</c><00:03:16.200><c> right</c>

00:03:16.699 --> 00:03:16.709 align:start position:0%
will just come down to the found right
 

00:03:16.709 --> 00:03:19.729 align:start position:0%
will just come down to the found right
here<00:03:17.040><c> and</c><00:03:17.310><c> change</c><00:03:18.060><c> it</c><00:03:18.180><c> to</c><00:03:18.239><c> let's</c><00:03:19.079><c> say</c><00:03:19.290><c> name</c>

00:03:19.729 --> 00:03:19.739 align:start position:0%
here and change it to let's say name
 

00:03:19.739 --> 00:03:22.699 align:start position:0%
here and change it to let's say name
start<00:03:20.220><c> contains</c><00:03:21.030><c> and</c><00:03:21.959><c> then</c><00:03:21.989><c> of</c><00:03:22.169><c> course</c><00:03:22.409><c> ask</c>

00:03:22.699 --> 00:03:22.709 align:start position:0%
start contains and then of course ask
 

00:03:22.709 --> 00:03:26.180 align:start position:0%
start contains and then of course ask
for<00:03:23.129><c> Nemo</c><00:03:23.780><c> what</c><00:03:24.780><c> all</c><00:03:25.079><c> that</c><00:03:25.470><c> effort</c><00:03:25.799><c> we</c><00:03:25.949><c> had</c><00:03:26.099><c> to</c>

00:03:26.180 --> 00:03:26.190 align:start position:0%
for Nemo what all that effort we had to
 

00:03:26.190 --> 00:03:28.699 align:start position:0%
for Nemo what all that effort we had to
put<00:03:26.340><c> in</c><00:03:26.430><c> is</c><00:03:26.579><c> gone</c><00:03:26.909><c> we</c><00:03:27.629><c> can</c><00:03:27.810><c> quickly</c><00:03:28.079><c> come</c><00:03:28.470><c> here</c>

00:03:28.699 --> 00:03:28.709 align:start position:0%
put in is gone we can quickly come here
 

00:03:28.709 --> 00:03:31.479 align:start position:0%
put in is gone we can quickly come here
and<00:03:28.859><c> get</c><00:03:29.159><c> the</c><00:03:29.310><c> result</c><00:03:29.659><c> that's</c><00:03:30.659><c> an</c><00:03:30.870><c> example</c><00:03:31.169><c> of</c>

00:03:31.479 --> 00:03:31.489 align:start position:0%
and get the result that's an example of
 

00:03:31.489 --> 00:03:35.000 align:start position:0%
and get the result that's an example of
decorative<00:03:32.489><c> style</c><00:03:33.329><c> of</c><00:03:33.659><c> programming</c><00:03:33.840><c> so</c><00:03:34.739><c> what</c>

00:03:35.000 --> 00:03:35.010 align:start position:0%
decorative style of programming so what
 

00:03:35.010 --> 00:03:38.000 align:start position:0%
decorative style of programming so what
is<00:03:35.129><c> a</c><00:03:35.310><c> decorative</c><00:03:35.699><c> style</c><00:03:36.540><c> salt</c><00:03:37.349><c> in</c><00:03:37.620><c> the</c><00:03:37.769><c> Tecla</c>

00:03:38.000 --> 00:03:38.010 align:start position:0%
is a decorative style salt in the Tecla
 

00:03:38.010 --> 00:03:42.349 align:start position:0%
is a decorative style salt in the Tecla
relative<00:03:38.639><c> style</c><00:03:39.169><c> we</c><00:03:40.169><c> can</c><00:03:40.470><c> focus</c><00:03:40.769><c> on</c><00:03:41.159><c> what</c><00:03:42.000><c> to</c>

00:03:42.349 --> 00:03:42.359 align:start position:0%
relative style we can focus on what to
 

00:03:42.359 --> 00:03:47.960 align:start position:0%
relative style we can focus on what to
do<00:03:42.569><c> and</c><00:03:43.250><c> not</c><00:03:44.250><c> on</c><00:03:44.599><c> how</c><00:03:45.599><c> to</c><00:03:45.659><c> do</c><00:03:46.169><c> it</c><00:03:46.349><c> so</c><00:03:46.949><c> we</c><00:03:47.489><c> focus</c>

00:03:47.960 --> 00:03:47.970 align:start position:0%
do and not on how to do it so we focus
 

00:03:47.970 --> 00:03:51.110 align:start position:0%
do and not on how to do it so we focus
on<00:03:48.150><c> what</c><00:03:48.750><c> to</c><00:03:48.959><c> do</c><00:03:49.139><c> that</c><00:03:49.919><c> is</c><00:03:50.099><c> our</c><00:03:50.250><c> main</c><00:03:50.549><c> focus</c>

00:03:51.110 --> 00:03:51.120 align:start position:0%
on what to do that is our main focus
 

00:03:51.120 --> 00:03:53.449 align:start position:0%
on what to do that is our main focus
whatever<00:03:51.419><c> we</c><00:03:51.659><c> interested</c><00:03:52.229><c> in</c><00:03:52.349><c> so</c><00:03:52.889><c> focus</c><00:03:53.340><c> on</c>

00:03:53.449 --> 00:03:53.459 align:start position:0%
whatever we interested in so focus on
 

00:03:53.459 --> 00:03:57.050 align:start position:0%
whatever we interested in so focus on
what<00:03:53.729><c> to</c><00:03:53.909><c> do</c><00:03:54.060><c> not</c><00:03:54.509><c> on</c><00:03:54.750><c> how</c><00:03:55.650><c> to</c><00:03:55.709><c> do</c><00:03:55.949><c> it</c><00:03:56.129><c> well</c><00:03:56.759><c> the</c>

00:03:57.050 --> 00:03:57.060 align:start position:0%
what to do not on how to do it well the
 

00:03:57.060 --> 00:03:58.429 align:start position:0%
what to do not on how to do it well the
decorative<00:03:57.449><c> style</c><00:03:57.810><c> removes</c><00:03:58.109><c> all</c><00:03:58.379><c> the</c>

00:03:58.429 --> 00:03:58.439 align:start position:0%
decorative style removes all the
 

00:03:58.439 --> 00:04:01.009 align:start position:0%
decorative style removes all the
accidental<00:03:59.340><c> complicity</c><00:03:59.879><c> in</c><00:04:00.030><c> the</c><00:04:00.150><c> code</c><00:04:00.359><c> we</c>

00:04:01.009 --> 00:04:01.019 align:start position:0%
accidental complicity in the code we
 

00:04:01.019 --> 00:04:02.839 align:start position:0%
accidental complicity in the code we
might<00:04:01.199><c> ask</c><00:04:01.439><c> the</c><00:04:01.650><c> question</c><00:04:02.129><c> how</c><00:04:02.790><c> does</c>

00:04:02.839 --> 00:04:02.849 align:start position:0%
might ask the question how does
 

00:04:02.849 --> 00:04:04.670 align:start position:0%
might ask the question how does
containers<00:04:03.599><c> really</c><00:04:03.989><c> do</c><00:04:04.139><c> the</c><00:04:04.290><c> work</c>

00:04:04.670 --> 00:04:04.680 align:start position:0%
containers really do the work
 

00:04:04.680 --> 00:04:07.249 align:start position:0%
containers really do the work
what<00:04:05.310><c> answer</c><00:04:05.519><c> possibly</c><00:04:06.209><c> is</c><00:04:06.389><c> it's</c><00:04:06.959><c> doing</c>

00:04:07.249 --> 00:04:07.259 align:start position:0%
what answer possibly is it's doing
 

00:04:07.259 --> 00:04:09.559 align:start position:0%
what answer possibly is it's doing
exactly<00:04:07.739><c> this</c><00:04:07.979><c> we</c><00:04:08.669><c> come</c><00:04:08.849><c> up</c><00:04:08.939><c> with</c><00:04:09.030><c> all</c><00:04:09.180><c> other</c>

00:04:09.559 --> 00:04:09.569 align:start position:0%
exactly this we come up with all other
 

00:04:09.569 --> 00:04:11.599 align:start position:0%
exactly this we come up with all other
kinds<00:04:09.959><c> of</c><00:04:09.989><c> ideas</c><00:04:10.409><c> as</c><00:04:10.590><c> to</c><00:04:10.620><c> how</c><00:04:10.799><c> contains</c><00:04:11.340><c> works</c>

00:04:11.599 --> 00:04:11.609 align:start position:0%
kinds of ideas as to how contains works
 

00:04:11.609 --> 00:04:13.550 align:start position:0%
kinds of ideas as to how contains works
and<00:04:11.939><c> different</c><00:04:12.689><c> languages</c><00:04:13.109><c> may</c><00:04:13.259><c> implement</c>

00:04:13.550 --> 00:04:13.560 align:start position:0%
and different languages may implement
 

00:04:13.560 --> 00:04:15.890 align:start position:0%
and different languages may implement
contains<00:04:14.009><c> differently</c><00:04:14.579><c> but</c><00:04:15.239><c> I</c><00:04:15.299><c> like</c><00:04:15.509><c> a</c><00:04:15.540><c> better</c>

00:04:15.890 --> 00:04:15.900 align:start position:0%
contains differently but I like a better
 

00:04:15.900 --> 00:04:19.490 align:start position:0%
contains differently but I like a better
answer<00:04:16.199><c> and</c><00:04:16.620><c> that</c><00:04:17.159><c> is</c><00:04:17.370><c> I</c><00:04:17.639><c> don't</c><00:04:18.090><c> care</c><00:04:18.810><c> okay</c>

00:04:19.490 --> 00:04:19.500 align:start position:0%
answer and that is I don't care okay
 

00:04:19.500 --> 00:04:21.140 align:start position:0%
answer and that is I don't care okay
maybe<00:04:19.709><c> that's</c><00:04:19.799><c> a</c><00:04:19.949><c> little</c><00:04:20.099><c> rude</c><00:04:20.430><c> but</c><00:04:20.940><c> rather</c>

00:04:21.140 --> 00:04:21.150 align:start position:0%
maybe that's a little rude but rather
 

00:04:21.150 --> 00:04:22.820 align:start position:0%
maybe that's a little rude but rather
than<00:04:21.299><c> saying</c><00:04:21.510><c> I</c><00:04:21.659><c> don't</c><00:04:21.719><c> care</c><00:04:22.079><c> we</c><00:04:22.229><c> can</c><00:04:22.380><c> say</c><00:04:22.560><c> it's</c>

00:04:22.820 --> 00:04:22.830 align:start position:0%
than saying I don't care we can say it's
 

00:04:22.830 --> 00:04:25.159 align:start position:0%
than saying I don't care we can say it's
encapsulated<00:04:23.580><c> well</c><00:04:24.360><c> that</c><00:04:24.539><c> sounds</c><00:04:24.840><c> so</c><00:04:25.050><c> much</c>

00:04:25.159 --> 00:04:25.169 align:start position:0%
encapsulated well that sounds so much
 

00:04:25.169 --> 00:04:26.629 align:start position:0%
encapsulated well that sounds so much
better<00:04:25.229><c> well</c><00:04:26.070><c> meaning</c>

00:04:26.629 --> 00:04:26.639 align:start position:0%
better well meaning
 

00:04:26.639 --> 00:04:29.149 align:start position:0%
better well meaning
I<00:04:26.669><c> don't</c><00:04:26.909><c> care</c><00:04:27.120><c> well</c><00:04:27.689><c> true</c><00:04:28.229><c> we</c><00:04:28.740><c> can</c><00:04:28.889><c> all</c><00:04:29.009><c> agree</c>

00:04:29.149 --> 00:04:29.159 align:start position:0%
I don't care well true we can all agree
 

00:04:29.159 --> 00:04:31.580 align:start position:0%
I don't care well true we can all agree
that<00:04:29.370><c> there</c><00:04:29.819><c> are</c><00:04:29.939><c> times</c><00:04:30.150><c> we</c><00:04:30.360><c> absolutely</c><00:04:31.289><c> care</c>

00:04:31.580 --> 00:04:31.590 align:start position:0%
that there are times we absolutely care
 

00:04:31.590 --> 00:04:33.770 align:start position:0%
that there are times we absolutely care
but<00:04:32.370><c> the</c><00:04:32.460><c> beauty</c><00:04:32.759><c> with</c><00:04:32.879><c> the</c><00:04:32.969><c> Declaration</c><00:04:33.659><c> of</c>

00:04:33.770 --> 00:04:33.780 align:start position:0%
but the beauty with the Declaration of
 

00:04:33.780 --> 00:04:36.320 align:start position:0%
but the beauty with the Declaration of
programming<00:04:34.259><c> is</c><00:04:34.439><c> we</c><00:04:35.189><c> can</c><00:04:35.370><c> get</c><00:04:35.610><c> to</c><00:04:35.789><c> the</c><00:04:35.879><c> details</c>

00:04:36.320 --> 00:04:36.330 align:start position:0%
programming is we can get to the details
 

00:04:36.330 --> 00:04:39.019 align:start position:0%
programming is we can get to the details
when<00:04:36.990><c> we</c><00:04:37.229><c> care</c><00:04:37.560><c> about</c><00:04:37.740><c> it</c><00:04:38.129><c> we</c><00:04:38.669><c> don't</c><00:04:38.849><c> care</c>

00:04:39.019 --> 00:04:39.029 align:start position:0%
when we care about it we don't care
 

00:04:39.029 --> 00:04:41.959 align:start position:0%
when we care about it we don't care
about<00:04:39.060><c> it</c><00:04:39.419><c> it's</c><00:04:39.810><c> not</c><00:04:40.199><c> on</c><00:04:40.560><c> our</c><00:04:40.590><c> face</c><00:04:40.830><c> in</c><00:04:41.340><c> the</c>

00:04:41.959 --> 00:04:41.969 align:start position:0%
about it it's not on our face in the
 

00:04:41.969 --> 00:04:44.209 align:start position:0%
about it it's not on our face in the
imperative<00:04:42.509><c> style</c><00:04:42.810><c> we</c><00:04:43.319><c> have</c><00:04:43.349><c> no</c><00:04:43.860><c> choice</c>

00:04:44.209 --> 00:04:44.219 align:start position:0%
imperative style we have no choice
 

00:04:44.219 --> 00:04:46.820 align:start position:0%
imperative style we have no choice
whatsoever<00:04:44.659><c> the</c><00:04:45.659><c> details</c><00:04:46.110><c> are</c><00:04:46.289><c> in</c><00:04:46.319><c> front</c><00:04:46.680><c> of</c>

00:04:46.820 --> 00:04:46.830 align:start position:0%
whatsoever the details are in front of
 

00:04:46.830 --> 00:04:48.980 align:start position:0%
whatsoever the details are in front of
us<00:04:46.949><c> whether</c><00:04:47.159><c> we</c><00:04:47.370><c> like</c><00:04:47.580><c> it</c><00:04:47.610><c> or</c><00:04:47.789><c> not</c><00:04:47.999><c> we</c><00:04:48.810><c> have</c>

00:04:48.980 --> 00:04:48.990 align:start position:0%
us whether we like it or not we have
 

00:04:48.990 --> 00:04:51.830 align:start position:0%
us whether we like it or not we have
absolutely<00:04:49.620><c> no</c><00:04:49.889><c> escape</c><00:04:50.310><c> from</c><00:04:50.490><c> the</c><00:04:50.669><c> details</c><00:04:51.120><c> so</c>

00:04:51.830 --> 00:04:51.840 align:start position:0%
absolutely no escape from the details so
 

00:04:51.840 --> 00:04:53.869 align:start position:0%
absolutely no escape from the details so
in<00:04:52.139><c> the</c><00:04:52.259><c> decorative</c><00:04:52.740><c> style</c><00:04:52.979><c> we</c><00:04:53.099><c> focus</c><00:04:53.490><c> on</c><00:04:53.639><c> what</c>

00:04:53.869 --> 00:04:53.879 align:start position:0%
in the decorative style we focus on what
 

00:04:53.879 --> 00:04:57.260 align:start position:0%
in the decorative style we focus on what
to<00:04:54.029><c> do</c><00:04:54.180><c> not</c><00:04:54.840><c> on</c><00:04:55.199><c> how</c><00:04:55.680><c> to</c><00:04:55.740><c> do</c><00:04:56.009><c> it</c><00:04:56.159><c> well</c><00:04:56.879><c> that's</c>

00:04:57.260 --> 00:04:57.270 align:start position:0%
to do not on how to do it well that's
 

00:04:57.270 --> 00:04:59.450 align:start position:0%
to do not on how to do it well that's
decorated<00:04:57.539><c> so</c><00:04:58.409><c> think</c><00:04:58.710><c> decorative</c><00:04:59.099><c> leave</c>

00:04:59.450 --> 00:04:59.460 align:start position:0%
decorated so think decorative leave
 

00:04:59.460 --> 00:05:02.390 align:start position:0%
decorated so think decorative leave
first<00:04:59.930><c> functional</c><00:05:00.930><c> comes</c><00:05:01.229><c> next</c><00:05:01.800><c> in</c>

00:05:02.390 --> 00:05:02.400 align:start position:0%
first functional comes next in
 

00:05:02.400 --> 00:05:04.999 align:start position:0%
first functional comes next in
functional<00:05:03.060><c> style</c><00:05:03.449><c> of</c><00:05:03.569><c> programming</c><00:05:03.770><c> we</c><00:05:04.770><c> are</c>

00:05:04.999 --> 00:05:05.009 align:start position:0%
functional style of programming we are
 

00:05:05.009 --> 00:05:08.300 align:start position:0%
functional style of programming we are
also<00:05:05.430><c> using</c><00:05:05.639><c> decorative</c><00:05:06.419><c> style</c><00:05:07.310><c> functional</c>

00:05:08.300 --> 00:05:08.310 align:start position:0%
also using decorative style functional
 

00:05:08.310 --> 00:05:10.369 align:start position:0%
also using decorative style functional
style<00:05:08.550><c> programming</c><00:05:08.969><c> is</c><00:05:09.210><c> not</c><00:05:09.449><c> new</c><00:05:09.810><c> thank</c>

00:05:10.369 --> 00:05:10.379 align:start position:0%
style programming is not new thank
 

00:05:10.379 --> 00:05:12.230 align:start position:0%
style programming is not new thank
goodness<00:05:10.830><c> it's</c><00:05:10.979><c> not</c><00:05:11.039><c> new</c><00:05:11.460><c> it's</c><00:05:12.000><c> not</c><00:05:12.120><c> a</c>

00:05:12.230 --> 00:05:12.240 align:start position:0%
goodness it's not new it's not a
 

00:05:12.240 --> 00:05:14.719 align:start position:0%
goodness it's not new it's not a
newfangled<00:05:12.629><c> idea</c><00:05:13.169><c> invented</c><00:05:13.740><c> last</c><00:05:13.919><c> night</c><00:05:14.219><c> it's</c>

00:05:14.719 --> 00:05:14.729 align:start position:0%
newfangled idea invented last night it's
 

00:05:14.729 --> 00:05:16.249 align:start position:0%
newfangled idea invented last night it's
been<00:05:14.879><c> around</c><00:05:15.060><c> for</c><00:05:15.300><c> a</c><00:05:15.330><c> very</c><00:05:15.389><c> long</c><00:05:15.719><c> time</c>

00:05:16.249 --> 00:05:16.259 align:start position:0%
been around for a very long time
 

00:05:16.259 --> 00:05:18.409 align:start position:0%
been around for a very long time
it's<00:05:16.590><c> been</c><00:05:16.770><c> tried</c><00:05:16.949><c> it</c><00:05:17.219><c> tested</c><00:05:17.789><c> and</c><00:05:17.909><c> been</c>

00:05:18.409 --> 00:05:18.419 align:start position:0%
it's been tried it tested and been
 

00:05:18.419 --> 00:05:20.779 align:start position:0%
it's been tried it tested and been
practiced<00:05:19.020><c> quite</c><00:05:19.229><c> a</c><00:05:19.379><c> bit</c><00:05:19.650><c> it</c><00:05:20.099><c> just</c><00:05:20.129><c> was</c><00:05:20.490><c> not</c>

00:05:20.779 --> 00:05:20.789 align:start position:0%
practiced quite a bit it just was not
 

00:05:20.789 --> 00:05:23.149 align:start position:0%
practiced quite a bit it just was not
popular<00:05:21.330><c> in</c><00:05:21.479><c> the</c><00:05:21.599><c> mainstream</c><00:05:21.779><c> languages</c><00:05:22.500><c> but</c>

00:05:23.149 --> 00:05:23.159 align:start position:0%
popular in the mainstream languages but
 

00:05:23.159 --> 00:05:25.420 align:start position:0%
popular in the mainstream languages but
almost<00:05:23.400><c> all</c><00:05:23.639><c> mainstream</c><00:05:24.300><c> languages</c><00:05:24.719><c> now</c><00:05:25.020><c> are</c>

00:05:25.420 --> 00:05:25.430 align:start position:0%
almost all mainstream languages now are
 

00:05:25.430 --> 00:05:27.170 align:start position:0%
almost all mainstream languages now are
providing<00:05:26.430><c> functional</c><00:05:26.849><c> style</c><00:05:27.089><c> of</c>

00:05:27.170 --> 00:05:27.180 align:start position:0%
providing functional style of
 

00:05:27.180 --> 00:05:28.989 align:start position:0%
providing functional style of
programming<00:05:27.659><c> which</c><00:05:27.960><c> is</c><00:05:27.990><c> really</c><00:05:28.650><c> phenomenal</c>

00:05:28.989 --> 00:05:28.999 align:start position:0%
programming which is really phenomenal
 

00:05:28.999 --> 00:05:32.209 align:start position:0%
programming which is really phenomenal
so<00:05:29.999><c> this</c><00:05:30.180><c> is</c><00:05:30.240><c> a</c><00:05:30.300><c> very</c><00:05:30.509><c> old</c><00:05:30.870><c> idea</c><00:05:31.169><c> but</c><00:05:31.770><c> with</c>

00:05:32.209 --> 00:05:32.219 align:start position:0%
so this is a very old idea but with
 

00:05:32.219 --> 00:05:34.129 align:start position:0%
so this is a very old idea but with
renewed<00:05:32.639><c> interest</c><00:05:33.060><c> what</c><00:05:33.659><c> are</c><00:05:33.750><c> some</c><00:05:33.900><c> of</c><00:05:34.020><c> the</c>

00:05:34.129 --> 00:05:34.139 align:start position:0%
renewed interest what are some of the
 

00:05:34.139 --> 00:05:36.589 align:start position:0%
renewed interest what are some of the
reasons<00:05:34.589><c> for</c><00:05:34.740><c> it</c><00:05:34.889><c> well</c><00:05:35.460><c> the</c><00:05:35.490><c> world</c><00:05:36.029><c> we</c><00:05:36.240><c> live</c><00:05:36.449><c> in</c>

00:05:36.589 --> 00:05:36.599 align:start position:0%
reasons for it well the world we live in
 

00:05:36.599 --> 00:05:38.600 align:start position:0%
reasons for it well the world we live in
has<00:05:36.750><c> changed</c><00:05:37.229><c> quite</c><00:05:37.379><c> a</c><00:05:37.589><c> bit</c><00:05:37.680><c> the</c><00:05:38.219><c> type</c><00:05:38.460><c> of</c>

00:05:38.600 --> 00:05:38.610 align:start position:0%
has changed quite a bit the type of
 

00:05:38.610 --> 00:05:41.059 align:start position:0%
has changed quite a bit the type of
applications<00:05:39.300><c> we</c><00:05:39.449><c> develop</c><00:05:39.839><c> the</c><00:05:40.080><c> type</c><00:05:40.259><c> of</c><00:05:40.289><c> data</c>

00:05:41.059 --> 00:05:41.069 align:start position:0%
applications we develop the type of data
 

00:05:41.069 --> 00:05:43.550 align:start position:0%
applications we develop the type of data
we<00:05:41.219><c> process</c><00:05:41.849><c> and</c><00:05:42.029><c> deal</c><00:05:42.330><c> with</c><00:05:42.360><c> a</c><00:05:42.750><c> lot</c><00:05:43.289><c> of</c><00:05:43.319><c> these</c>

00:05:43.550 --> 00:05:43.560 align:start position:0%
we process and deal with a lot of these
 

00:05:43.560 --> 00:05:45.619 align:start position:0%
we process and deal with a lot of these
things<00:05:43.830><c> are</c><00:05:43.949><c> different</c><00:05:44.069><c> from</c><00:05:44.629><c> applications</c>

00:05:45.619 --> 00:05:45.629 align:start position:0%
things are different from applications
 

00:05:45.629 --> 00:05:48.439 align:start position:0%
things are different from applications
we<00:05:45.750><c> develop</c><00:05:46.080><c> 20-30</c><00:05:46.620><c> years</c><00:05:46.740><c> ago</c><00:05:47.310><c> but</c><00:05:48.029><c> what</c><00:05:48.360><c> is</c>

00:05:48.439 --> 00:05:48.449 align:start position:0%
we develop 20-30 years ago but what is
 

00:05:48.449 --> 00:05:50.240 align:start position:0%
we develop 20-30 years ago but what is
the<00:05:48.569><c> charm</c><00:05:48.899><c> of</c><00:05:49.169><c> functional</c><00:05:49.740><c> style</c><00:05:50.009><c> of</c>

00:05:50.240 --> 00:05:50.250 align:start position:0%
the charm of functional style of
 

00:05:50.250 --> 00:05:52.700 align:start position:0%
the charm of functional style of
programming<00:05:50.599><c> let's</c><00:05:51.599><c> talk</c><00:05:51.839><c> about</c><00:05:51.990><c> that</c><00:05:52.349><c> right</c>

00:05:52.700 --> 00:05:52.710 align:start position:0%
programming let's talk about that right
 

00:05:52.710 --> 00:05:54.709 align:start position:0%
programming let's talk about that right
here<00:05:52.979><c> for</c><00:05:53.729><c> that</c><00:05:53.759><c> let's</c><00:05:54.149><c> take</c><00:05:54.300><c> slightly</c>

00:05:54.709 --> 00:05:54.719 align:start position:0%
here for that let's take slightly
 

00:05:54.719 --> 00:05:56.839 align:start position:0%
here for that let's take slightly
different<00:05:55.169><c> example</c><00:05:55.259><c> here</c><00:05:55.979><c> than</c><00:05:56.399><c> the</c><00:05:56.639><c> names</c>

00:05:56.839 --> 00:05:56.849 align:start position:0%
different example here than the names
 

00:05:56.849 --> 00:05:59.450 align:start position:0%
different example here than the names
let's<00:05:57.719><c> start</c><00:05:58.020><c> with</c><00:05:58.259><c> a</c><00:05:58.289><c> list</c><00:05:58.620><c> of</c><00:05:58.740><c> numbers</c><00:05:59.219><c> let's</c>

00:05:59.450 --> 00:05:59.460 align:start position:0%
let's start with a list of numbers let's
 

00:05:59.460 --> 00:06:02.300 align:start position:0%
let's start with a list of numbers let's
say<00:05:59.639><c> one</c><00:06:00.180><c> to</c><00:06:00.360><c> ten</c><00:06:00.569><c> given</c><00:06:01.439><c> these</c><00:06:01.589><c> numbers</c><00:06:01.620><c> I'll</c>

00:06:02.300 --> 00:06:02.310 align:start position:0%
say one to ten given these numbers I'll
 

00:06:02.310 --> 00:06:05.929 align:start position:0%
say one to ten given these numbers I'll
say<00:06:02.550><c> finally</c><00:06:03.210><c> total</c><00:06:03.659><c> of</c><00:06:04.259><c> the</c><00:06:04.740><c> double</c><00:06:05.099><c> of</c><00:06:05.279><c> even</c>

00:06:05.929 --> 00:06:05.939 align:start position:0%
say finally total of the double of even
 

00:06:05.939 --> 00:06:08.240 align:start position:0%
say finally total of the double of even
numbers<00:06:06.539><c> well</c><00:06:07.199><c> great</c><00:06:07.560><c> I</c><00:06:07.589><c> want</c><00:06:07.860><c> to</c><00:06:07.979><c> find</c><00:06:08.159><c> the</c>

00:06:08.240 --> 00:06:08.250 align:start position:0%
numbers well great I want to find the
 

00:06:08.250 --> 00:06:10.550 align:start position:0%
numbers well great I want to find the
title<00:06:08.699><c> of</c><00:06:08.819><c> double</c><00:06:09.089><c> of</c><00:06:09.180><c> even</c><00:06:09.479><c> numbers</c><00:06:09.779><c> well</c>

00:06:10.550 --> 00:06:10.560 align:start position:0%
title of double of even numbers well
 

00:06:10.560 --> 00:06:13.369 align:start position:0%
title of double of even numbers well
what's<00:06:10.919><c> the</c><00:06:11.069><c> imperative</c><00:06:11.699><c> style</c><00:06:11.969><c> do</c><00:06:12.330><c> it</c><00:06:12.990><c> beats</c>

00:06:13.369 --> 00:06:13.379 align:start position:0%
what's the imperative style do it beats
 

00:06:13.379 --> 00:06:14.839 align:start position:0%
what's the imperative style do it beats
you<00:06:13.500><c> down</c><00:06:13.529><c> from</c><00:06:13.889><c> the</c><00:06:14.069><c> beginning</c><00:06:14.430><c> isn't</c><00:06:14.580><c> it</c>

00:06:14.839 --> 00:06:14.849 align:start position:0%
you down from the beginning isn't it
 

00:06:14.849 --> 00:06:18.079 align:start position:0%
you down from the beginning isn't it
result<00:06:15.539><c> is</c><00:06:15.629><c> equal</c><00:06:15.930><c> to</c><00:06:16.139><c> zero</c><00:06:16.500><c> for</c><00:06:17.089><c> integer</c>

00:06:18.079 --> 00:06:18.089 align:start position:0%
result is equal to zero for integer
 

00:06:18.089 --> 00:06:19.760 align:start position:0%
result is equal to zero for integer
element<00:06:18.689><c> coming</c><00:06:18.899><c> from</c><00:06:19.169><c> the</c><00:06:19.349><c> numbers</c>

00:06:19.760 --> 00:06:19.770 align:start position:0%
element coming from the numbers
 

00:06:19.770 --> 00:06:22.879 align:start position:0%
element coming from the numbers
collection<00:06:20.520><c> we</c><00:06:21.089><c> then</c><00:06:21.330><c> say</c><00:06:21.569><c> if</c><00:06:21.810><c> element</c><00:06:22.379><c> Mar</c><00:06:22.560><c> 2</c>

00:06:22.879 --> 00:06:22.889 align:start position:0%
collection we then say if element Mar 2
 

00:06:22.889 --> 00:06:25.909 align:start position:0%
collection we then say if element Mar 2
is<00:06:23.129><c> equal</c><00:06:23.520><c> to</c><00:06:23.699><c> 0</c><00:06:24.060><c> then</c><00:06:24.779><c> of</c><00:06:25.020><c> course</c><00:06:25.349><c> we'll</c><00:06:25.710><c> say</c>

00:06:25.909 --> 00:06:25.919 align:start position:0%
is equal to 0 then of course we'll say
 

00:06:25.919 --> 00:06:29.869 align:start position:0%
is equal to 0 then of course we'll say
result<00:06:26.430><c> plus</c><00:06:27.300><c> equal</c><00:06:27.899><c> to</c><00:06:28.169><c> and</c><00:06:28.529><c> then</c><00:06:28.949><c> e</c><00:06:29.219><c> times</c><00:06:29.520><c> 2</c>

00:06:29.869 --> 00:06:29.879 align:start position:0%
result plus equal to and then e times 2
 

00:06:29.879 --> 00:06:31.909 align:start position:0%
result plus equal to and then e times 2
and<00:06:30.629><c> when</c><00:06:30.899><c> we</c><00:06:31.020><c> are</c><00:06:31.139><c> done</c><00:06:31.319><c> with</c><00:06:31.529><c> this</c><00:06:31.710><c> whole</c>

00:06:31.909 --> 00:06:31.919 align:start position:0%
and when we are done with this whole
 

00:06:31.919 --> 00:06:34.759 align:start position:0%
and when we are done with this whole
thing<00:06:31.979><c> we</c><00:06:32.729><c> can</c><00:06:33.000><c> display</c><00:06:33.629><c> the</c><00:06:33.839><c> output</c><00:06:34.050><c> of</c><00:06:34.560><c> the</c>

00:06:34.759 --> 00:06:34.769 align:start position:0%
thing we can display the output of the
 

00:06:34.769 --> 00:06:37.999 align:start position:0%
thing we can display the output of the
result<00:06:35.190><c> right</c><00:06:35.370><c> here</c><00:06:35.629><c> in</c><00:06:36.629><c> the</c><00:06:36.719><c> very</c><00:06:36.899><c> end</c><00:06:37.229><c> so</c><00:06:37.860><c> we</c>

00:06:37.999 --> 00:06:38.009 align:start position:0%
result right here in the very end so we
 

00:06:38.009 --> 00:06:40.050 align:start position:0%
result right here in the very end so we
can<00:06:38.190><c> see</c><00:06:38.430><c> the</c><00:06:38.580><c> result</c><00:06:38.879><c> is</c><00:06:39.029><c> 60</c>

00:06:40.050 --> 00:06:40.060 align:start position:0%
can see the result is 60
 

00:06:40.060 --> 00:06:41.880 align:start position:0%
can see the result is 60
that's<00:06:40.420><c> quite</c><00:06:40.690><c> a</c><00:06:40.750><c> bit</c><00:06:40.930><c> of</c><00:06:41.020><c> work</c><00:06:41.230><c> again</c><00:06:41.680><c> an</c>

00:06:41.880 --> 00:06:41.890 align:start position:0%
that's quite a bit of work again an
 

00:06:41.890 --> 00:06:44.700 align:start position:0%
that's quite a bit of work again an
imperative<00:06:42.550><c> style</c><00:06:42.940><c> of</c><00:06:43.270><c> programming</c><00:06:43.680><c> we</c><00:06:44.680><c> will</c>

00:06:44.700 --> 00:06:44.710 align:start position:0%
imperative style of programming we will
 

00:06:44.710 --> 00:06:47.910 align:start position:0%
imperative style of programming we will
switch<00:06:45.100><c> here</c><00:06:45.400><c> to</c><00:06:45.760><c> a</c><00:06:46.060><c> rather</c><00:06:46.630><c> a</c><00:06:46.920><c> functional</c>

00:06:47.910 --> 00:06:47.920 align:start position:0%
switch here to a rather a functional
 

00:06:47.920 --> 00:06:50.580 align:start position:0%
switch here to a rather a functional
style<00:06:48.580><c> of</c><00:06:48.940><c> programming</c><00:06:49.180><c> or</c><00:06:50.140><c> what</c><00:06:50.410><c> in</c><00:06:50.500><c> the</c>

00:06:50.580 --> 00:06:50.590 align:start position:0%
style of programming or what in the
 

00:06:50.590 --> 00:06:53.190 align:start position:0%
style of programming or what in the
world<00:06:50.800><c> is</c><00:06:50.980><c> functional</c><00:06:51.700><c> style</c><00:06:52.000><c> not</c><00:06:52.870><c> all</c>

00:06:53.190 --> 00:06:53.200 align:start position:0%
world is functional style not all
 

00:06:53.200 --> 00:06:55.260 align:start position:0%
world is functional style not all
declarative<00:06:53.950><c> code</c><00:06:54.160><c> declarative</c><00:06:54.880><c> code</c><00:06:55.090><c> is</c>

00:06:55.260 --> 00:06:55.270 align:start position:0%
declarative code declarative code is
 

00:06:55.270 --> 00:06:57.690 align:start position:0%
declarative code declarative code is
functional<00:06:55.840><c> remember</c><00:06:56.650><c> the</c><00:06:56.770><c> contains</c><00:06:57.220><c> method</c>

00:06:57.690 --> 00:06:57.700 align:start position:0%
functional remember the contains method
 

00:06:57.700 --> 00:06:59.700 align:start position:0%
functional remember the contains method
that<00:06:58.150><c> contains</c><00:06:58.480><c> method</c><00:06:58.750><c> is</c><00:06:58.840><c> declarative</c><00:06:59.380><c> but</c>

00:06:59.700 --> 00:06:59.710 align:start position:0%
that contains method is declarative but
 

00:06:59.710 --> 00:07:02.100 align:start position:0%
that contains method is declarative but
not<00:06:59.890><c> functional</c><00:07:00.490><c> but</c><00:07:01.150><c> all</c><00:07:01.330><c> functional</c><00:07:01.930><c> code</c>

00:07:02.100 --> 00:07:02.110 align:start position:0%
not functional but all functional code
 

00:07:02.110 --> 00:07:04.730 align:start position:0%
not functional but all functional code
is<00:07:02.440><c> declarative</c><00:07:03.010><c> so</c><00:07:03.760><c> this</c><00:07:04.000><c> is</c><00:07:04.150><c> declarative</c>

00:07:04.730 --> 00:07:04.740 align:start position:0%
is declarative so this is declarative
 

00:07:04.740 --> 00:07:08.730 align:start position:0%
is declarative so this is declarative
plus<00:07:05.740><c> higher</c><00:07:06.340><c> order</c><00:07:06.940><c> functions</c><00:07:07.780><c> so</c><00:07:08.440><c> what</c><00:07:08.650><c> in</c>

00:07:08.730 --> 00:07:08.740 align:start position:0%
plus higher order functions so what in
 

00:07:08.740 --> 00:07:11.370 align:start position:0%
plus higher order functions so what in
the<00:07:08.860><c> world</c><00:07:09.100><c> is</c><00:07:09.370><c> higher</c><00:07:10.090><c> order</c><00:07:10.390><c> functions</c><00:07:10.810><c> what</c>

00:07:11.370 --> 00:07:11.380 align:start position:0%
the world is higher order functions what
 

00:07:11.380 --> 00:07:13.260 align:start position:0%
the world is higher order functions what
decorated<00:07:12.010><c> is</c><00:07:12.130><c> where</c><00:07:12.310><c> we</c><00:07:12.460><c> say</c><00:07:12.640><c> what</c><00:07:12.850><c> to</c><00:07:13.000><c> do</c><00:07:13.090><c> and</c>

00:07:13.260 --> 00:07:13.270 align:start position:0%
decorated is where we say what to do and
 

00:07:13.270 --> 00:07:15.360 align:start position:0%
decorated is where we say what to do and
not<00:07:13.390><c> how</c><00:07:13.570><c> to</c><00:07:13.630><c> do</c><00:07:13.900><c> it</c><00:07:14.110><c> let's</c><00:07:14.710><c> go</c><00:07:14.860><c> to</c><00:07:14.950><c> that</c><00:07:15.070><c> being</c>

00:07:15.360 --> 00:07:15.370 align:start position:0%
not how to do it let's go to that being
 

00:07:15.370 --> 00:07:17.700 align:start position:0%
not how to do it let's go to that being
real<00:07:15.700><c> quick</c><00:07:16.030><c> and</c><00:07:16.210><c> see</c><00:07:16.390><c> the</c><00:07:16.510><c> example</c><00:07:17.050><c> so</c><00:07:17.560><c> it</c>

00:07:17.700 --> 00:07:17.710 align:start position:0%
real quick and see the example so it
 

00:07:17.710 --> 00:07:19.890 align:start position:0%
real quick and see the example so it
started<00:07:18.130><c> with</c><00:07:18.280><c> an</c><00:07:18.490><c> output</c><00:07:19.030><c> right</c><00:07:19.360><c> off</c><00:07:19.570><c> the</c><00:07:19.720><c> bat</c>

00:07:19.890 --> 00:07:19.900 align:start position:0%
started with an output right off the bat
 

00:07:19.900 --> 00:07:23.040 align:start position:0%
started with an output right off the bat
number<00:07:20.770><c> start</c><00:07:21.190><c> stream</c><00:07:21.790><c> per</c><00:07:22.420><c> stream</c><00:07:22.750><c> is</c><00:07:23.020><c> a</c>

00:07:23.040 --> 00:07:23.050 align:start position:0%
number start stream per stream is a
 

00:07:23.050 --> 00:07:25.470 align:start position:0%
number start stream per stream is a
fancy<00:07:23.590><c> internal</c><00:07:24.100><c> iterator</c><00:07:24.550><c> what's</c><00:07:25.270><c> on</c><00:07:25.450><c> a</c>

00:07:25.470 --> 00:07:25.480 align:start position:0%
fancy internal iterator what's on a
 

00:07:25.480 --> 00:07:28.590 align:start position:0%
fancy internal iterator what's on a
filter<00:07:25.900><c> given</c><00:07:26.380><c> an</c><00:07:26.470><c> element</c><00:07:26.980><c> element</c><00:07:27.370><c> ma</c><00:07:27.880><c> du</c><00:07:28.270><c> is</c>

00:07:28.590 --> 00:07:28.600 align:start position:0%
filter given an element element ma du is
 

00:07:28.600 --> 00:07:33.030 align:start position:0%
filter given an element element ma du is
equal<00:07:28.780><c> to</c><00:07:29.050><c> 0</c><00:07:29.950><c> so</c><00:07:30.790><c> we</c><00:07:30.940><c> get</c><00:07:31.630><c> only</c><00:07:32.020><c> even</c><00:07:32.650><c> values</c>

00:07:33.030 --> 00:07:33.040 align:start position:0%
equal to 0 so we get only even values
 

00:07:33.040 --> 00:07:35.130 align:start position:0%
equal to 0 so we get only even values
from<00:07:33.250><c> the</c><00:07:33.340><c> collection</c><00:07:33.910><c> then</c><00:07:34.570><c> we</c><00:07:34.720><c> perform</c><00:07:34.870><c> a</c>

00:07:35.130 --> 00:07:35.140 align:start position:0%
from the collection then we perform a
 

00:07:35.140 --> 00:07:38.490 align:start position:0%
from the collection then we perform a
map<00:07:35.380><c> to</c><00:07:35.740><c> let's</c><00:07:36.280><c> say</c><00:07:36.490><c> double</c><00:07:37.150><c> right</c><00:07:37.510><c> here</c><00:07:37.540><c> and</c>

00:07:38.490 --> 00:07:38.500 align:start position:0%
map to let's say double right here and
 

00:07:38.500 --> 00:07:40.650 align:start position:0%
map to let's say double right here and
then<00:07:38.740><c> in</c><00:07:38.860><c> this</c><00:07:38.980><c> case</c><00:07:39.040><c> our</c><00:07:39.520><c> map</c><00:07:39.820><c> to</c><00:07:40.090><c> intruder</c>

00:07:40.650 --> 00:07:40.660 align:start position:0%
then in this case our map to intruder
 

00:07:40.660 --> 00:07:42.870 align:start position:0%
then in this case our map to intruder
map<00:07:41.470><c> to</c><00:07:41.710><c> end</c><00:07:41.920><c> and</c><00:07:42.160><c> we</c><00:07:42.280><c> will</c><00:07:42.460><c> go</c><00:07:42.610><c> ahead</c><00:07:42.730><c> and</c>

00:07:42.870 --> 00:07:42.880 align:start position:0%
map to end and we will go ahead and
 

00:07:42.880 --> 00:07:45.840 align:start position:0%
map to end and we will go ahead and
double<00:07:43.210><c> the</c><00:07:43.330><c> element</c><00:07:43.780><c> times</c><00:07:44.140><c> two</c><00:07:44.530><c> and</c><00:07:44.800><c> once</c><00:07:45.640><c> we</c>

00:07:45.840 --> 00:07:45.850 align:start position:0%
double the element times two and once we
 

00:07:45.850 --> 00:07:47.490 align:start position:0%
double the element times two and once we
of<00:07:46.000><c> course</c><00:07:46.240><c> double</c><00:07:46.570><c> the</c><00:07:46.690><c> value</c><00:07:46.810><c> will</c><00:07:47.140><c> call</c><00:07:47.320><c> the</c>

00:07:47.490 --> 00:07:47.500 align:start position:0%
of course double the value will call the
 

00:07:47.500 --> 00:07:50.070 align:start position:0%
of course double the value will call the
sum<00:07:47.770><c> off</c><00:07:47.980><c> it</c><00:07:48.310><c> and</c><00:07:48.490><c> get</c><00:07:49.000><c> the</c><00:07:49.150><c> total</c><00:07:49.420><c> of</c><00:07:49.840><c> the</c>

00:07:50.070 --> 00:07:50.080 align:start position:0%
sum off it and get the total of the
 

00:07:50.080 --> 00:07:52.920 align:start position:0%
sum off it and get the total of the
double<00:07:50.950><c> of</c><00:07:51.100><c> the</c><00:07:51.250><c> even</c><00:07:51.580><c> values</c><00:07:51.610><c> when</c><00:07:52.600><c> we</c><00:07:52.750><c> run</c>

00:07:52.920 --> 00:07:52.930 align:start position:0%
double of the even values when we run
 

00:07:52.930 --> 00:07:54.420 align:start position:0%
double of the even values when we run
the<00:07:53.110><c> code</c><00:07:53.320><c> notice</c><00:07:53.680><c> the</c><00:07:53.800><c> result</c><00:07:54.100><c> is</c><00:07:54.220><c> still</c><00:07:54.370><c> the</c>

00:07:54.420 --> 00:07:54.430 align:start position:0%
the code notice the result is still the
 

00:07:54.430 --> 00:07:56.910 align:start position:0%
the code notice the result is still the
same<00:07:54.730><c> in</c><00:07:55.000><c> this</c><00:07:55.270><c> code</c><00:07:55.480><c> example</c><00:07:55.990><c> it</c><00:07:56.680><c> is</c>

00:07:56.910 --> 00:07:56.920 align:start position:0%
same in this code example it is
 

00:07:56.920 --> 00:07:59.610 align:start position:0%
same in this code example it is
decorated<00:07:57.370><c> because</c><00:07:57.820><c> we</c><00:07:58.480><c> told</c><00:07:58.780><c> what</c><00:07:59.290><c> to</c><00:07:59.320><c> do</c>

00:07:59.610 --> 00:07:59.620 align:start position:0%
decorated because we told what to do
 

00:07:59.620 --> 00:08:01.770 align:start position:0%
decorated because we told what to do
grandpa<00:08:00.310><c> from</c><00:08:00.460><c> the</c><00:08:00.610><c> some</c><00:08:00.820><c> operating</c><00:08:01.360><c> perform</c>

00:08:01.770 --> 00:08:01.780 align:start position:0%
grandpa from the some operating perform
 

00:08:01.780 --> 00:08:04.380 align:start position:0%
grandpa from the some operating perform
filter<00:08:02.320><c> perform</c><00:08:03.130><c> mapping</c><00:08:03.790><c> or</c><00:08:03.910><c> transformation</c>

00:08:04.380 --> 00:08:04.390 align:start position:0%
filter perform mapping or transformation
 

00:08:04.390 --> 00:08:06.660 align:start position:0%
filter perform mapping or transformation
of<00:08:04.780><c> the</c><00:08:04.870><c> data</c><00:08:05.110><c> but</c><00:08:05.860><c> it's</c><00:08:06.010><c> high</c><00:08:06.190><c> in</c><00:08:06.250><c> order</c>

00:08:06.660 --> 00:08:06.670 align:start position:0%
of the data but it's high in order
 

00:08:06.670 --> 00:08:09.480 align:start position:0%
of the data but it's high in order
because<00:08:06.850><c> we</c><00:08:07.750><c> are</c><00:08:07.870><c> passing</c><00:08:08.230><c> a</c><00:08:08.650><c> function</c><00:08:08.920><c> to</c>

00:08:09.480 --> 00:08:09.490 align:start position:0%
because we are passing a function to
 

00:08:09.490 --> 00:08:11.760 align:start position:0%
because we are passing a function to
another<00:08:09.880><c> function</c><00:08:10.030><c> the</c><00:08:11.020><c> highlighted</c><00:08:11.470><c> code</c><00:08:11.620><c> of</c>

00:08:11.760 --> 00:08:11.770 align:start position:0%
another function the highlighted code of
 

00:08:11.770 --> 00:08:14.010 align:start position:0%
another function the highlighted code of
course<00:08:11.980><c> is</c><00:08:12.220><c> a</c><00:08:12.250><c> lambda</c><00:08:12.610><c> expression</c><00:08:13.020><c> and</c>

00:08:14.010 --> 00:08:14.020 align:start position:0%
course is a lambda expression and
 

00:08:14.020 --> 00:08:16.260 align:start position:0%
course is a lambda expression and
expressions<00:08:14.650><c> are</c><00:08:14.830><c> lambdas</c><00:08:15.310><c> or</c><00:08:15.550><c> anonymous</c>

00:08:16.260 --> 00:08:16.270 align:start position:0%
expressions are lambdas or anonymous
 

00:08:16.270 --> 00:08:18.420 align:start position:0%
expressions are lambdas or anonymous
functions<00:08:16.660><c> we're</c><00:08:17.230><c> passing</c><00:08:17.710><c> a</c><00:08:17.800><c> function</c><00:08:17.980><c> to</c>

00:08:18.420 --> 00:08:18.430 align:start position:0%
functions we're passing a function to
 

00:08:18.430 --> 00:08:21.030 align:start position:0%
functions we're passing a function to
this<00:08:18.610><c> filter</c><00:08:19.150><c> method</c><00:08:19.360><c> or</c><00:08:19.690><c> filter</c><00:08:20.020><c> function</c><00:08:20.440><c> so</c>

00:08:21.030 --> 00:08:21.040 align:start position:0%
this filter method or filter function so
 

00:08:21.040 --> 00:08:23.400 align:start position:0%
this filter method or filter function so
in<00:08:21.190><c> higher</c><00:08:21.400><c> order</c><00:08:21.640><c> functions</c><00:08:22.390><c> we</c><00:08:22.930><c> can</c><00:08:23.110><c> pass</c>

00:08:23.400 --> 00:08:23.410 align:start position:0%
in higher order functions we can pass
 

00:08:23.410 --> 00:08:25.680 align:start position:0%
in higher order functions we can pass
functions<00:08:24.040><c> around</c><00:08:24.370><c> we</c><00:08:25.030><c> can</c><00:08:25.180><c> pass</c><00:08:25.390><c> a</c><00:08:25.420><c> function</c>

00:08:25.680 --> 00:08:25.690 align:start position:0%
functions around we can pass a function
 

00:08:25.690 --> 00:08:27.900 align:start position:0%
functions around we can pass a function
to<00:08:25.990><c> a</c><00:08:26.020><c> function</c><00:08:26.470><c> create</c><00:08:27.220><c> a</c><00:08:27.250><c> function</c><00:08:27.700><c> with</c><00:08:27.820><c> our</c>

00:08:27.900 --> 00:08:27.910 align:start position:0%
to a function create a function with our
 

00:08:27.910 --> 00:08:30.030 align:start position:0%
to a function create a function with our
function<00:08:28.360><c> even</c><00:08:28.900><c> return</c><00:08:29.410><c> a</c><00:08:29.440><c> function</c><00:08:29.650><c> from</c><00:08:29.950><c> a</c>

00:08:30.030 --> 00:08:30.040 align:start position:0%
function even return a function from a
 

00:08:30.040 --> 00:08:32.580 align:start position:0%
function even return a function from a
function<00:08:30.460><c> those</c><00:08:31.060><c> make</c><00:08:31.330><c> in</c><00:08:31.480><c> higher</c><00:08:31.660><c> order</c><00:08:31.900><c> so</c>

00:08:32.580 --> 00:08:32.590 align:start position:0%
function those make in higher order so
 

00:08:32.590 --> 00:08:35.820 align:start position:0%
function those make in higher order so
this<00:08:32.860><c> line</c><00:08:33.130><c> of</c><00:08:33.340><c> code</c><00:08:33.550><c> is</c><00:08:33.880><c> functional</c><00:08:34.840><c> meaning</c>

00:08:35.820 --> 00:08:35.830 align:start position:0%
this line of code is functional meaning
 

00:08:35.830 --> 00:08:39.780 align:start position:0%
this line of code is functional meaning
it<00:08:36.220><c> is</c><00:08:36.460><c> declared</c><00:08:37.120><c> a</c><00:08:37.570><c> plus</c><00:08:38.440><c> higher</c><00:08:38.860><c> order</c><00:08:39.460><c> on</c>

00:08:39.780 --> 00:08:39.790 align:start position:0%
it is declared a plus higher order on
 

00:08:39.790 --> 00:08:42.540 align:start position:0%
it is declared a plus higher order on
the<00:08:40.300><c> other</c><00:08:40.480><c> hand</c><00:08:40.950><c> similarly</c><00:08:41.950><c> this</c><00:08:42.100><c> one</c><00:08:42.310><c> is</c>

00:08:42.540 --> 00:08:42.550 align:start position:0%
the other hand similarly this one is
 

00:08:42.550 --> 00:08:45.270 align:start position:0%
the other hand similarly this one is
functional<00:08:43.300><c> as</c><00:08:43.510><c> well</c><00:08:43.870><c> but</c><00:08:44.560><c> this</c><00:08:44.860><c> one</c><00:08:45.070><c> is</c>

00:08:45.270 --> 00:08:45.280 align:start position:0%
functional as well but this one is
 

00:08:45.280 --> 00:08:48.990 align:start position:0%
functional as well but this one is
purely<00:08:45.790><c> declarative</c><00:08:46.770><c> so</c><00:08:47.770><c> this</c><00:08:48.280><c> of</c><00:08:48.430><c> course</c><00:08:48.460><c> is</c>

00:08:48.990 --> 00:08:49.000 align:start position:0%
purely declarative so this of course is
 

00:08:49.000 --> 00:08:51.240 align:start position:0%
purely declarative so this of course is
focused<00:08:49.210><c> on</c><00:08:49.570><c> telling</c><00:08:49.840><c> what</c><00:08:50.230><c> to</c><00:08:50.260><c> do</c><00:08:50.560><c> we're</c><00:08:51.220><c> not</c>

00:08:51.240 --> 00:08:51.250 align:start position:0%
focused on telling what to do we're not
 

00:08:51.250 --> 00:08:52.980 align:start position:0%
focused on telling what to do we're not
passing<00:08:51.580><c> any</c><00:08:51.850><c> functions</c><00:08:52.270><c> to</c><00:08:52.420><c> these</c><00:08:52.540><c> functions</c>

00:08:52.980 --> 00:08:52.990 align:start position:0%
passing any functions to these functions
 

00:08:52.990 --> 00:08:53.860 align:start position:0%
passing any functions to these functions
and

00:08:53.860 --> 00:08:53.870 align:start position:0%
and
 

00:08:53.870 --> 00:08:55.360 align:start position:0%
and
basically<00:08:54.260><c> the</c><00:08:54.529><c> functional</c><00:08:55.010><c> style</c><00:08:55.220><c> of</c>

00:08:55.360 --> 00:08:55.370 align:start position:0%
basically the functional style of
 

00:08:55.370 --> 00:08:57.940 align:start position:0%
basically the functional style of
programming<00:08:55.520><c> but</c><00:08:56.510><c> what's</c><00:08:56.720><c> the</c><00:08:56.870><c> charm</c><00:08:57.230><c> of</c><00:08:57.560><c> a</c>

00:08:57.940 --> 00:08:57.950 align:start position:0%
programming but what's the charm of a
 

00:08:57.950 --> 00:09:00.490 align:start position:0%
programming but what's the charm of a
functional<00:08:58.730><c> style</c><00:08:59.000><c> of</c><00:08:59.330><c> programming</c><00:08:59.960><c> the</c>

00:09:00.490 --> 00:09:00.500 align:start position:0%
functional style of programming the
 

00:09:00.500 --> 00:09:02.140 align:start position:0%
functional style of programming the
charm<00:09:00.800><c> of</c><00:09:00.950><c> functional</c><00:09:01.490><c> programming</c><00:09:01.520><c> is</c>

00:09:02.140 --> 00:09:02.150 align:start position:0%
charm of functional programming is
 

00:09:02.150 --> 00:09:04.990 align:start position:0%
charm of functional programming is
highly<00:09:02.720><c> expressive</c><00:09:03.410><c> code</c><00:09:03.770><c> so</c><00:09:04.370><c> the</c><00:09:04.790><c> code</c>

00:09:04.990 --> 00:09:05.000 align:start position:0%
highly expressive code so the code
 

00:09:05.000 --> 00:09:07.210 align:start position:0%
highly expressive code so the code
becomes<00:09:05.330><c> a</c><00:09:05.420><c> lot</c><00:09:05.540><c> more</c><00:09:05.570><c> easier</c><00:09:06.230><c> to</c><00:09:06.560><c> work</c><00:09:07.160><c> with</c>

00:09:07.210 --> 00:09:07.220 align:start position:0%
becomes a lot more easier to work with
 

00:09:07.220 --> 00:09:09.579 align:start position:0%
becomes a lot more easier to work with
easier<00:09:07.910><c> to</c><00:09:08.089><c> write</c><00:09:08.300><c> let's</c><00:09:09.080><c> look</c><00:09:09.290><c> at</c><00:09:09.410><c> one</c>

00:09:09.579 --> 00:09:09.589 align:start position:0%
easier to write let's look at one
 

00:09:09.589 --> 00:09:12.250 align:start position:0%
easier to write let's look at one
example<00:09:09.710><c> of</c><00:09:10.250><c> this</c><00:09:10.460><c> to</c><00:09:10.610><c> see</c><00:09:10.790><c> how</c><00:09:11.390><c> beautifully</c>

00:09:12.250 --> 00:09:12.260 align:start position:0%
example of this to see how beautifully
 

00:09:12.260 --> 00:09:14.680 align:start position:0%
example of this to see how beautifully
the<00:09:12.380><c> code</c><00:09:12.620><c> begins</c><00:09:12.980><c> to</c><00:09:13.160><c> flow</c><00:09:13.520><c> I</c><00:09:13.850><c> was</c><00:09:14.420><c> teaching</c>

00:09:14.680 --> 00:09:14.690 align:start position:0%
the code begins to flow I was teaching
 

00:09:14.690 --> 00:09:16.329 align:start position:0%
the code begins to flow I was teaching
the<00:09:14.779><c> Java</c><00:09:14.960><c> eight</c><00:09:15.170><c> cores</c><00:09:15.440><c> for</c><00:09:15.620><c> a</c><00:09:15.650><c> client</c><00:09:16.010><c> and</c>

00:09:16.329 --> 00:09:16.339 align:start position:0%
the Java eight cores for a client and
 

00:09:16.339 --> 00:09:18.820 align:start position:0%
the Java eight cores for a client and
they<00:09:17.089><c> have</c><00:09:17.210><c> been</c><00:09:17.330><c> using</c><00:09:17.480><c> Java</c><00:09:17.810><c> 8</c><00:09:17.990><c> already</c><00:09:18.440><c> and</c>

00:09:18.820 --> 00:09:18.830 align:start position:0%
they have been using Java 8 already and
 

00:09:18.830 --> 00:09:20.290 align:start position:0%
they have been using Java 8 already and
what<00:09:19.160><c> if</c><00:09:19.250><c> the</c><00:09:19.310><c> developer</c><00:09:19.670><c> said</c><00:09:19.910><c> can</c><00:09:20.120><c> you</c><00:09:20.150><c> take</c>

00:09:20.290 --> 00:09:20.300 align:start position:0%
what if the developer said can you take
 

00:09:20.300 --> 00:09:21.700 align:start position:0%
what if the developer said can you take
a<00:09:20.360><c> look</c><00:09:20.510><c> at</c><00:09:20.570><c> our</c><00:09:20.660><c> code</c><00:09:20.930><c> and</c><00:09:21.140><c> critique</c><00:09:21.529><c> it</c>

00:09:21.700 --> 00:09:21.710 align:start position:0%
a look at our code and critique it
 

00:09:21.710 --> 00:09:23.860 align:start position:0%
a look at our code and critique it
usually<00:09:22.640><c> I</c><00:09:22.670><c> get</c><00:09:22.880><c> scared</c><00:09:23.180><c> when</c><00:09:23.390><c> people</c><00:09:23.450><c> ask</c>

00:09:23.860 --> 00:09:23.870 align:start position:0%
usually I get scared when people ask
 

00:09:23.870 --> 00:09:25.480 align:start position:0%
usually I get scared when people ask
this<00:09:24.080><c> question</c><00:09:24.440><c> what</c><00:09:24.560><c> if</c><00:09:24.680><c> the</c><00:09:24.770><c> code</c><00:09:24.980><c> is</c><00:09:25.100><c> really</c>

00:09:25.480 --> 00:09:25.490 align:start position:0%
this question what if the code is really
 

00:09:25.490 --> 00:09:27.460 align:start position:0%
this question what if the code is really
highly<00:09:26.120><c> complex</c><00:09:26.480><c> and</c><00:09:26.690><c> I</c><00:09:26.720><c> cannot</c><00:09:26.960><c> understand</c>

00:09:27.460 --> 00:09:27.470 align:start position:0%
highly complex and I cannot understand
 

00:09:27.470 --> 00:09:28.840 align:start position:0%
highly complex and I cannot understand
it<00:09:27.620><c> I</c><00:09:27.710><c> don't</c><00:09:27.830><c> want</c><00:09:27.980><c> to</c><00:09:28.040><c> insult</c><00:09:28.339><c> them</c><00:09:28.550><c> by</c><00:09:28.580><c> saying</c>

00:09:28.840 --> 00:09:28.850 align:start position:0%
it I don't want to insult them by saying
 

00:09:28.850 --> 00:09:30.760 align:start position:0%
it I don't want to insult them by saying
anything<00:09:29.210><c> well</c><00:09:29.839><c> in</c><00:09:30.020><c> this</c><00:09:30.140><c> case</c><00:09:30.320><c> the</c><00:09:30.440><c> code</c><00:09:30.589><c> was</c>

00:09:30.760 --> 00:09:30.770 align:start position:0%
anything well in this case the code was
 

00:09:30.770 --> 00:09:32.980 align:start position:0%
anything well in this case the code was
written<00:09:30.800><c> using</c><00:09:31.310><c> Java</c><00:09:31.550><c> 8</c><00:09:31.820><c> streams</c><00:09:32.240><c> I</c><00:09:32.570><c> just</c>

00:09:32.980 --> 00:09:32.990 align:start position:0%
written using Java 8 streams I just
 

00:09:32.990 --> 00:09:35.170 align:start position:0%
written using Java 8 streams I just
started<00:09:33.260><c> reading</c><00:09:33.680><c> the</c><00:09:33.800><c> code</c><00:09:34.010><c> and</c><00:09:34.400><c> even</c><00:09:34.850><c> I</c><00:09:35.120><c> who</c>

00:09:35.170 --> 00:09:35.180 align:start position:0%
started reading the code and even I who
 

00:09:35.180 --> 00:09:36.700 align:start position:0%
started reading the code and even I who
doesn't<00:09:35.690><c> have</c><00:09:35.750><c> any</c><00:09:35.930><c> understanding</c><00:09:36.230><c> of</c><00:09:36.589><c> their</c>

00:09:36.700 --> 00:09:36.710 align:start position:0%
doesn't have any understanding of their
 

00:09:36.710 --> 00:09:39.070 align:start position:0%
doesn't have any understanding of their
domain<00:09:36.890><c> was</c><00:09:37.820><c> able</c><00:09:38.089><c> to</c><00:09:38.120><c> quickly</c><00:09:38.450><c> understand</c>

00:09:39.070 --> 00:09:39.080 align:start position:0%
domain was able to quickly understand
 

00:09:39.080 --> 00:09:40.780 align:start position:0%
domain was able to quickly understand
what<00:09:39.230><c> they</c><00:09:39.380><c> were</c><00:09:39.440><c> doing</c><00:09:39.920><c> that's</c><00:09:40.490><c> one</c><00:09:40.640><c> of</c><00:09:40.730><c> the</c>

00:09:40.780 --> 00:09:40.790 align:start position:0%
what they were doing that's one of the
 

00:09:40.790 --> 00:09:42.579 align:start position:0%
what they were doing that's one of the
biggest<00:09:41.060><c> charms</c><00:09:41.600><c> of</c><00:09:41.779><c> functional</c><00:09:42.200><c> style</c><00:09:42.440><c> of</c>

00:09:42.579 --> 00:09:42.589 align:start position:0%
biggest charms of functional style of
 

00:09:42.589 --> 00:09:44.560 align:start position:0%
biggest charms of functional style of
programming<00:09:42.740><c> let's</c><00:09:43.730><c> start</c><00:09:43.970><c> with</c><00:09:44.120><c> a</c><00:09:44.150><c> create</c>

00:09:44.560 --> 00:09:44.570 align:start position:0%
programming let's start with a create
 

00:09:44.570 --> 00:09:47.350 align:start position:0%
programming let's start with a create
people<00:09:45.050><c> list</c><00:09:45.560><c> right</c><00:09:45.830><c> here</c><00:09:45.860><c> and</c><00:09:46.400><c> given</c><00:09:47.089><c> a</c><00:09:47.150><c> list</c>

00:09:47.350 --> 00:09:47.360 align:start position:0%
people list right here and given a list
 

00:09:47.360 --> 00:09:49.540 align:start position:0%
people list right here and given a list
of<00:09:47.570><c> people</c><00:09:48.050><c> let's</c><00:09:48.620><c> say</c><00:09:48.830><c> I</c><00:09:48.980><c> want</c><00:09:49.279><c> to</c><00:09:49.310><c> go</c><00:09:49.490><c> ahead</c>

00:09:49.540 --> 00:09:49.550 align:start position:0%
of people let's say I want to go ahead
 

00:09:49.550 --> 00:09:52.300 align:start position:0%
of people let's say I want to go ahead
and<00:09:49.700><c> store</c><00:09:50.029><c> that</c><00:09:50.060><c> here</c><00:09:50.510><c> into</c><00:09:51.020><c> list</c><00:09:51.770><c> let's</c><00:09:52.160><c> say</c>

00:09:52.300 --> 00:09:52.310 align:start position:0%
and store that here into list let's say
 

00:09:52.310 --> 00:09:55.890 align:start position:0%
and store that here into list let's say
person<00:09:52.730><c> people</c><00:09:53.510><c> is</c><00:09:53.930><c> equal</c><00:09:54.320><c> to</c><00:09:54.529><c> create</c><00:09:55.400><c> people</c>

00:09:55.890 --> 00:09:55.900 align:start position:0%
person people is equal to create people
 

00:09:55.900 --> 00:09:59.100 align:start position:0%
person people is equal to create people
but<00:09:56.900><c> I</c><00:09:56.930><c> want</c><00:09:57.110><c> to</c><00:09:57.170><c> find</c><00:09:57.440><c> the</c><00:09:58.070><c> names</c><00:09:58.339><c> let's</c><00:09:58.850><c> say</c>

00:09:59.100 --> 00:09:59.110 align:start position:0%
but I want to find the names let's say
 

00:09:59.110 --> 00:10:03.760 align:start position:0%
but I want to find the names let's say
get<00:10:00.110><c> the</c><00:10:00.320><c> names</c><00:10:00.820><c> all</c><00:10:01.820><c> in</c><00:10:02.420><c> uppercase</c><00:10:02.779><c> let's</c><00:10:03.589><c> say</c>

00:10:03.760 --> 00:10:03.770 align:start position:0%
get the names all in uppercase let's say
 

00:10:03.770 --> 00:10:08.140 align:start position:0%
get the names all in uppercase let's say
and<00:10:04.730><c> then</c><00:10:04.910><c> of</c><00:10:05.000><c> course</c><00:10:05.029><c> of</c><00:10:06.130><c> everyone</c><00:10:07.130><c> who</c><00:10:07.850><c> is</c>

00:10:08.140 --> 00:10:08.150 align:start position:0%
and then of course of everyone who is
 

00:10:08.150 --> 00:10:12.130 align:start position:0%
and then of course of everyone who is
younger<00:10:08.900><c> than</c><00:10:09.650><c> 18</c><00:10:10.339><c> oh</c><00:10:10.970><c> that</c><00:10:11.839><c> should</c><00:10:12.020><c> be</c><00:10:12.050><c> easy</c>

00:10:12.130 --> 00:10:12.140 align:start position:0%
younger than 18 oh that should be easy
 

00:10:12.140 --> 00:10:14.470 align:start position:0%
younger than 18 oh that should be easy
isn't<00:10:12.860><c> get</c><00:10:13.339><c> the</c><00:10:13.430><c> names</c><00:10:13.610><c> in</c><00:10:14.000><c> all</c><00:10:14.209><c> in</c><00:10:14.390><c> uppercase</c>

00:10:14.470 --> 00:10:14.480 align:start position:0%
isn't get the names in all in uppercase
 

00:10:14.480 --> 00:10:17.590 align:start position:0%
isn't get the names in all in uppercase
of<00:10:15.020><c> everyone</c><00:10:15.470><c> younger</c><00:10:15.860><c> than</c><00:10:16.070><c> 18</c><00:10:16.450><c> well</c><00:10:17.450><c> we</c>

00:10:17.590 --> 00:10:17.600 align:start position:0%
of everyone younger than 18 well we
 

00:10:17.600 --> 00:10:19.720 align:start position:0%
of everyone younger than 18 well we
could<00:10:17.750><c> start</c><00:10:18.050><c> again</c><00:10:18.200><c> with</c><00:10:18.560><c> the</c><00:10:18.740><c> list</c><00:10:19.010><c> string</c>

00:10:19.720 --> 00:10:19.730 align:start position:0%
could start again with the list string
 

00:10:19.730 --> 00:10:23.620 align:start position:0%
could start again with the list string
over<00:10:20.600><c> here</c><00:10:20.810><c> so</c><00:10:21.529><c> we</c><00:10:21.650><c> could</c><00:10:21.770><c> say</c><00:10:21.980><c> string</c><00:10:22.670><c> and</c><00:10:23.060><c> we</c>

00:10:23.620 --> 00:10:23.630 align:start position:0%
over here so we could say string and we
 

00:10:23.630 --> 00:10:25.870 align:start position:0%
over here so we could say string and we
could<00:10:23.779><c> say</c><00:10:23.930><c> juniors</c><00:10:24.589><c> just</c><00:10:25.370><c> to</c><00:10:25.459><c> call</c><00:10:25.640><c> them</c><00:10:25.760><c> as</c>

00:10:25.870 --> 00:10:25.880 align:start position:0%
could say juniors just to call them as
 

00:10:25.880 --> 00:10:28.750 align:start position:0%
could say juniors just to call them as
juniors<00:10:26.360><c> or</c><00:10:26.720><c> kids</c><00:10:27.709><c> if</c><00:10:28.100><c> you</c><00:10:28.250><c> want</c><00:10:28.430><c> to</c><00:10:28.490><c> call</c><00:10:28.610><c> them</c>

00:10:28.750 --> 00:10:28.760 align:start position:0%
juniors or kids if you want to call them
 

00:10:28.760 --> 00:10:31.600 align:start position:0%
juniors or kids if you want to call them
kids<00:10:29.000><c> though</c><00:10:29.500><c> 17</c><00:10:30.500><c> year</c><00:10:30.620><c> old</c><00:10:30.800><c> may</c><00:10:31.010><c> really</c>

00:10:31.600 --> 00:10:31.610 align:start position:0%
kids though 17 year old may really
 

00:10:31.610 --> 00:10:33.550 align:start position:0%
kids though 17 year old may really
object<00:10:31.760><c> to</c><00:10:32.089><c> it</c><00:10:32.240><c> but</c><00:10:32.660><c> let's</c><00:10:32.810><c> call</c><00:10:32.930><c> it</c><00:10:33.080><c> as</c><00:10:33.200><c> kids</c>

00:10:33.550 --> 00:10:33.560 align:start position:0%
object to it but let's call it as kids
 

00:10:33.560 --> 00:10:37.150 align:start position:0%
object to it but let's call it as kids
is<00:10:34.070><c> equal</c><00:10:34.550><c> to</c><00:10:34.730><c> new</c><00:10:35.000><c> arrays</c><00:10:35.600><c> and</c><00:10:36.290><c> in</c><00:10:36.830><c> this</c><00:10:36.950><c> case</c>

00:10:37.150 --> 00:10:37.160 align:start position:0%
is equal to new arrays and in this case
 

00:10:37.160 --> 00:10:39.250 align:start position:0%
is equal to new arrays and in this case
ArrayList<00:10:37.880><c> and</c><00:10:38.150><c> we</c><00:10:38.330><c> create</c><00:10:38.660><c> an</c><00:10:38.750><c> empty</c><00:10:39.170><c> list</c>

00:10:39.250 --> 00:10:39.260 align:start position:0%
ArrayList and we create an empty list
 

00:10:39.260 --> 00:10:41.590 align:start position:0%
ArrayList and we create an empty list
look<00:10:40.070><c> at</c><00:10:40.190><c> the</c><00:10:40.310><c> ceremony</c><00:10:40.820><c> again</c><00:10:40.970><c> we're</c>

00:10:41.590 --> 00:10:41.600 align:start position:0%
look at the ceremony again we're
 

00:10:41.600 --> 00:10:43.720 align:start position:0%
look at the ceremony again we're
spending<00:10:41.810><c> time</c><00:10:42.170><c> telling</c><00:10:42.800><c> how</c><00:10:43.190><c> to</c><00:10:43.250><c> do</c><00:10:43.520><c> things</c>

00:10:43.720 --> 00:10:43.730 align:start position:0%
spending time telling how to do things
 

00:10:43.730 --> 00:10:47.170 align:start position:0%
spending time telling how to do things
and<00:10:44.029><c> then</c><00:10:44.510><c> far</c><00:10:44.900><c> a</c><00:10:45.260><c> person</c><00:10:45.950><c> and</c><00:10:46.310><c> given</c><00:10:46.640><c> a</c><00:10:46.700><c> person</c>

00:10:47.170 --> 00:10:47.180 align:start position:0%
and then far a person and given a person
 

00:10:47.180 --> 00:10:49.150 align:start position:0%
and then far a person and given a person
coming<00:10:47.390><c> from</c><00:10:47.660><c> the</c><00:10:47.839><c> people</c><00:10:48.350><c> collection</c><00:10:48.950><c> and</c>

00:10:49.150 --> 00:10:49.160 align:start position:0%
coming from the people collection and
 

00:10:49.160 --> 00:10:50.650 align:start position:0%
coming from the people collection and
what<00:10:49.670><c> are</c><00:10:49.730><c> we</c><00:10:49.820><c> going</c><00:10:49.940><c> to</c><00:10:50.000><c> do</c><00:10:50.150><c> with</c><00:10:50.300><c> every</c>

00:10:50.650 --> 00:10:50.660 align:start position:0%
what are we going to do with every
 

00:10:50.660 --> 00:10:53.620 align:start position:0%
what are we going to do with every
single<00:10:50.810><c> person</c><00:10:51.410><c> we</c><00:10:52.130><c> say</c><00:10:52.339><c> if</c><00:10:52.610><c> the</c><00:10:52.910><c> person</c><00:10:53.120><c> d'art</c>

00:10:53.620 --> 00:10:53.630 align:start position:0%
single person we say if the person d'art
 

00:10:53.630 --> 00:10:56.620 align:start position:0%
single person we say if the person d'art
get<00:10:53.900><c> age</c><00:10:54.200><c> is</c><00:10:54.709><c> greater</c><00:10:55.190><c> than</c><00:10:55.490><c> well</c><00:10:56.180><c> less</c><00:10:56.600><c> than</c>

00:10:56.620 --> 00:10:56.630 align:start position:0%
get age is greater than well less than
 

00:10:56.630 --> 00:11:00.160 align:start position:0%
get age is greater than well less than
18<00:10:57.560><c> then</c><00:10:58.520><c> of</c><00:10:58.820><c> course</c><00:10:59.089><c> we're</c><00:10:59.420><c> going</c><00:10:59.450><c> to</c><00:10:59.630><c> say</c><00:10:59.900><c> a</c>

00:11:00.160 --> 00:11:00.170 align:start position:0%
18 then of course we're going to say a
 

00:11:00.170 --> 00:11:03.400 align:start position:0%
18 then of course we're going to say a
kid<00:11:00.770><c> start</c><00:11:01.130><c> and</c><00:11:01.370><c> well</c><00:11:02.329><c> then</c><00:11:02.720><c> of</c><00:11:02.839><c> course</c><00:11:03.110><c> get</c>

00:11:03.400 --> 00:11:03.410 align:start position:0%
kid start and well then of course get
 

00:11:03.410 --> 00:11:06.250 align:start position:0%
kid start and well then of course get
the<00:11:03.440><c> name</c><00:11:03.740><c> of</c><00:11:03.890><c> the</c><00:11:04.010><c> person</c><00:11:04.430><c> get</c><00:11:04.670><c> name</c><00:11:05.240><c> and</c><00:11:05.750><c> then</c>

00:11:06.250 --> 00:11:06.260 align:start position:0%
the name of the person get name and then
 

00:11:06.260 --> 00:11:07.780 align:start position:0%
the name of the person get name and then
to<00:11:06.560><c> uppercase</c>

00:11:07.780 --> 00:11:07.790 align:start position:0%
to uppercase
 

00:11:07.790 --> 00:11:09.790 align:start position:0%
to uppercase
and<00:11:07.970><c> then</c><00:11:08.330><c> of</c><00:11:08.450><c> course</c><00:11:08.480><c> added</c><00:11:09.170><c> to</c><00:11:09.260><c> the</c><00:11:09.410><c> kids</c>

00:11:09.790 --> 00:11:09.800 align:start position:0%
and then of course added to the kids
 

00:11:09.800 --> 00:11:11.860 align:start position:0%
and then of course added to the kids
collection<00:11:10.430><c> when</c><00:11:11.209><c> they're</c><00:11:11.420><c> done</c><00:11:11.570><c> with</c><00:11:11.810><c> that</c>

00:11:11.860 --> 00:11:11.870 align:start position:0%
collection when they're done with that
 

00:11:11.870 --> 00:11:13.420 align:start position:0%
collection when they're done with that
we'll<00:11:12.230><c> go</c><00:11:12.410><c> ahead</c><00:11:12.470><c> and</c><00:11:12.560><c> I</c><00:11:12.830><c> don't</c><00:11:13.100><c> put</c><00:11:13.310><c> the</c>

00:11:13.420 --> 00:11:13.430 align:start position:0%
we'll go ahead and I don't put the
 

00:11:13.430 --> 00:11:16.540 align:start position:0%
we'll go ahead and I don't put the
values<00:11:13.910><c> for</c><00:11:14.300><c> kids</c><00:11:14.630><c> and</c><00:11:15.050><c> quickly</c><00:11:15.950><c> glancing</c><00:11:16.399><c> at</c>

00:11:16.540 --> 00:11:16.550 align:start position:0%
values for kids and quickly glancing at
 

00:11:16.550 --> 00:11:19.030 align:start position:0%
values for kids and quickly glancing at
this<00:11:16.700><c> we</c><00:11:16.880><c> see</c><00:11:17.149><c> that</c><00:11:17.360><c> there</c><00:11:17.540><c> is</c><00:11:17.570><c> Jack</c><00:11:17.959><c> Jack</c><00:11:18.380><c> what</c>

00:11:19.030 --> 00:11:19.040 align:start position:0%
this we see that there is Jack Jack what
 

00:11:19.040 --> 00:11:20.920 align:start position:0%
this we see that there is Jack Jack what
are<00:11:19.070><c> the</c><00:11:19.220><c> Jack's</c><00:11:19.490><c> and</c><00:11:19.820><c> Jill</c><00:11:20.209><c> who</c><00:11:20.570><c> are</c><00:11:20.720><c> less</c>

00:11:20.920 --> 00:11:20.930 align:start position:0%
are the Jack's and Jill who are less
 

00:11:20.930 --> 00:11:23.560 align:start position:0%
are the Jack's and Jill who are less
than<00:11:21.140><c> 18</c><00:11:21.649><c> let's</c><00:11:22.430><c> see</c><00:11:22.580><c> if</c><00:11:22.670><c> the</c><00:11:22.790><c> court</c><00:11:23.029><c> produces</c>

00:11:23.560 --> 00:11:23.570 align:start position:0%
than 18 let's see if the court produces
 

00:11:23.570 --> 00:11:25.600 align:start position:0%
than 18 let's see if the court produces
that<00:11:23.720><c> result</c><00:11:24.260><c> and</c><00:11:24.500><c> sure</c><00:11:24.920><c> enough</c><00:11:24.950><c> it's</c><00:11:25.399><c> Jack</c>

00:11:25.600 --> 00:11:25.610 align:start position:0%
that result and sure enough it's Jack
 

00:11:25.610 --> 00:11:27.630 align:start position:0%
that result and sure enough it's Jack
and<00:11:25.790><c> Jill</c><00:11:26.000><c> but</c><00:11:26.720><c> if</c><00:11:26.810><c> you</c><00:11:26.870><c> look</c><00:11:27.020><c> at</c><00:11:27.140><c> this</c><00:11:27.290><c> code</c>

00:11:27.630 --> 00:11:27.640 align:start position:0%
and Jill but if you look at this code
 

00:11:27.640 --> 00:11:30.190 align:start position:0%
and Jill but if you look at this code
there<00:11:28.640><c> is</c><00:11:28.760><c> a</c><00:11:28.790><c> few</c><00:11:29.300><c> different</c><00:11:29.510><c> there</c><00:11:29.870><c> are</c><00:11:29.899><c> few</c>

00:11:30.190 --> 00:11:30.200 align:start position:0%
there is a few different there are few
 

00:11:30.200 --> 00:11:31.990 align:start position:0%
there is a few different there are few
different<00:11:30.470><c> problems</c><00:11:30.860><c> in</c><00:11:31.040><c> this</c><00:11:31.190><c> code</c><00:11:31.430><c> it's</c>

00:11:31.990 --> 00:11:32.000 align:start position:0%
different problems in this code it's
 

00:11:32.000 --> 00:11:33.550 align:start position:0%
different problems in this code it's
verbose<00:11:32.630><c> to</c><00:11:32.930><c> begin</c><00:11:33.200><c> with</c>

00:11:33.550 --> 00:11:33.560 align:start position:0%
verbose to begin with
 

00:11:33.560 --> 00:11:37.389 align:start position:0%
verbose to begin with
second<00:11:34.399><c> it</c><00:11:34.850><c> lacks</c><00:11:35.560><c> cohesion</c><00:11:36.560><c> what</c><00:11:37.190><c> in</c><00:11:37.279><c> the</c>

00:11:37.389 --> 00:11:37.399 align:start position:0%
second it lacks cohesion what in the
 

00:11:37.399 --> 00:11:39.579 align:start position:0%
second it lacks cohesion what in the
world<00:11:37.670><c> am</c><00:11:37.880><c> I</c><00:11:37.970><c> talking</c><00:11:38.360><c> about</c><00:11:38.570><c> well</c><00:11:39.140><c> look</c><00:11:39.500><c> at</c>

00:11:39.579 --> 00:11:39.589 align:start position:0%
world am I talking about well look at
 

00:11:39.589 --> 00:11:42.490 align:start position:0%
world am I talking about well look at
this<00:11:39.709><c> one</c><00:11:40.070><c> line</c><00:11:40.430><c> of</c><00:11:40.459><c> code</c><00:11:40.670><c> it's</c><00:11:41.540><c> doing</c><00:11:41.839><c> one</c><00:11:42.200><c> too</c>

00:11:42.490 --> 00:11:42.500 align:start position:0%
this one line of code it's doing one too
 

00:11:42.500 --> 00:11:44.949 align:start position:0%
this one line of code it's doing one too
many<00:11:42.680><c> things</c><00:11:43.010><c> it</c><00:11:43.640><c> had</c><00:11:43.820><c> to</c><00:11:43.940><c> get</c><00:11:44.089><c> the</c><00:11:44.270><c> name</c><00:11:44.510><c> it</c>

00:11:44.949 --> 00:11:44.959 align:start position:0%
many things it had to get the name it
 

00:11:44.959 --> 00:11:47.139 align:start position:0%
many things it had to get the name it
actor<00:11:45.350><c> turns</c><00:11:45.560><c> for</c><00:11:45.770><c> me</c><00:11:45.860><c> to</c><00:11:45.980><c> uppercase</c><00:11:46.520><c> it</c><00:11:46.850><c> had</c>

00:11:47.139 --> 00:11:47.149 align:start position:0%
actor turns for me to uppercase it had
 

00:11:47.149 --> 00:11:49.389 align:start position:0%
actor turns for me to uppercase it had
to<00:11:47.330><c> Hat</c><00:11:47.600><c> to</c><00:11:47.779><c> the</c><00:11:47.899><c> collection</c><00:11:48.410><c> that's</c><00:11:48.950><c> a</c><00:11:49.190><c> lot</c><00:11:49.370><c> of</c>

00:11:49.389 --> 00:11:49.399 align:start position:0%
to Hat to the collection that's a lot of
 

00:11:49.399 --> 00:11:51.100 align:start position:0%
to Hat to the collection that's a lot of
work<00:11:49.640><c> and</c><00:11:50.209><c> of</c><00:11:50.360><c> course</c><00:11:50.600><c> that</c><00:11:50.750><c> somebody</c><00:11:50.990><c> comes</c>

00:11:51.100 --> 00:11:51.110 align:start position:0%
work and of course that somebody comes
 

00:11:51.110 --> 00:11:52.960 align:start position:0%
work and of course that somebody comes
along<00:11:51.260><c> and</c><00:11:51.440><c> says</c><00:11:51.620><c> it's</c><00:11:52.100><c> a</c><00:11:52.220><c> very</c><00:11:52.339><c> long</c><00:11:52.640><c> list</c>

00:11:52.960 --> 00:11:52.970 align:start position:0%
along and says it's a very long list
 

00:11:52.970 --> 00:11:55.210 align:start position:0%
along and says it's a very long list
make<00:11:53.570><c> it</c><00:11:53.720><c> parallel</c><00:11:53.930><c> you're</c><00:11:54.740><c> gonna</c><00:11:54.830><c> find</c><00:11:55.100><c> the</c>

00:11:55.210 --> 00:11:55.220 align:start position:0%
make it parallel you're gonna find the
 

00:11:55.220 --> 00:11:57.550 align:start position:0%
make it parallel you're gonna find the
nearest<00:11:55.370><c> exit</c><00:11:55.610><c> to</c><00:11:56.060><c> get</c><00:11:56.209><c> out</c><00:11:56.450><c> a</c><00:11:56.720><c> lot</c><00:11:57.110><c> of</c><00:11:57.260><c> work</c><00:11:57.410><c> to</c>

00:11:57.550 --> 00:11:57.560 align:start position:0%
nearest exit to get out a lot of work to
 

00:11:57.560 --> 00:11:59.500 align:start position:0%
nearest exit to get out a lot of work to
make<00:11:57.680><c> this</c><00:11:57.800><c> chord</c><00:11:58.010><c> parallel</c><00:11:58.399><c> of</c><00:11:58.520><c> course</c><00:11:58.730><c> but</c>

00:11:59.500 --> 00:11:59.510 align:start position:0%
make this chord parallel of course but
 

00:11:59.510 --> 00:12:01.690 align:start position:0%
make this chord parallel of course but
we<00:11:59.720><c> can</c><00:11:59.959><c> save</c><00:12:00.500><c> a</c><00:12:00.529><c> lot</c><00:12:00.770><c> of</c><00:12:00.920><c> effort</c><00:12:01.220><c> by</c><00:12:01.399><c> going</c>

00:12:01.690 --> 00:12:01.700 align:start position:0%
we can save a lot of effort by going
 

00:12:01.700 --> 00:12:04.769 align:start position:0%
we can save a lot of effort by going
functional<00:12:02.570><c> on</c><00:12:02.750><c> this</c><00:12:03.020><c> that's</c><00:12:03.620><c> the</c><00:12:03.860><c> charm</c><00:12:04.220><c> of</c>

00:12:04.769 --> 00:12:04.779 align:start position:0%
functional on this that's the charm of
 

00:12:04.779 --> 00:12:08.170 align:start position:0%
functional on this that's the charm of
functional<00:12:05.779><c> the</c><00:12:06.440><c> style</c><00:12:06.860><c> so</c><00:12:07.640><c> what</c><00:12:08.029><c> is</c><00:12:08.089><c> the</c>

00:12:08.170 --> 00:12:08.180 align:start position:0%
functional the style so what is the
 

00:12:08.180 --> 00:12:10.810 align:start position:0%
functional the style so what is the
charm<00:12:08.450><c> in</c><00:12:08.690><c> this</c><00:12:08.930><c> example</c><00:12:09.260><c> we</c><00:12:09.980><c> can</c><00:12:10.160><c> now</c><00:12:10.190><c> again</c>

00:12:10.810 --> 00:12:10.820 align:start position:0%
charm in this example we can now again
 

00:12:10.820 --> 00:12:14.440 align:start position:0%
charm in this example we can now again
start<00:12:11.270><c> once</c><00:12:11.990><c> once</c><00:12:12.290><c> more</c><00:12:12.560><c> output</c><00:12:13.459><c> but</c><00:12:14.209><c> this</c>

00:12:14.440 --> 00:12:14.450 align:start position:0%
start once once more output but this
 

00:12:14.450 --> 00:12:15.790 align:start position:0%
start once once more output but this
time<00:12:14.690><c> we</c><00:12:14.839><c> would</c><00:12:14.959><c> start</c><00:12:15.230><c> with</c><00:12:15.290><c> people</c>

00:12:15.790 --> 00:12:15.800 align:start position:0%
time we would start with people
 

00:12:15.800 --> 00:12:18.190 align:start position:0%
time we would start with people
collection<00:12:16.670><c> I</c><00:12:16.850><c> don't</c><00:12:17.450><c> look</c><00:12:17.510><c> at</c><00:12:17.690><c> the</c><00:12:17.810><c> stream</c>

00:12:18.190 --> 00:12:18.200 align:start position:0%
collection I don't look at the stream
 

00:12:18.200 --> 00:12:18.760 align:start position:0%
collection I don't look at the stream
again

00:12:18.760 --> 00:12:18.770 align:start position:0%
again
 

00:12:18.770 --> 00:12:21.610 align:start position:0%
again
we'll<00:12:19.130><c> do</c><00:12:19.250><c> a</c><00:12:19.279><c> filter</c><00:12:19.730><c> given</c><00:12:20.270><c> a</c><00:12:20.360><c> person</c><00:12:21.020><c> will</c>

00:12:21.610 --> 00:12:21.620 align:start position:0%
we'll do a filter given a person will
 

00:12:21.620 --> 00:12:24.639 align:start position:0%
we'll do a filter given a person will
simply<00:12:21.770><c> say</c><00:12:22.220><c> person</c><00:12:22.670><c> dot</c><00:12:22.850><c> get</c><00:12:23.180><c> age</c><00:12:23.540><c> is</c><00:12:24.050><c> less</c>

00:12:24.639 --> 00:12:24.649 align:start position:0%
simply say person dot get age is less
 

00:12:24.649 --> 00:12:27.519 align:start position:0%
simply say person dot get age is less
than<00:12:24.709><c> 18</c><00:12:25.579><c> but</c><00:12:26.360><c> then</c><00:12:26.570><c> we'll</c><00:12:26.779><c> perform</c><00:12:26.930><c> a</c><00:12:27.170><c> map</c>

00:12:27.519 --> 00:12:27.529 align:start position:0%
than 18 but then we'll perform a map
 

00:12:27.529 --> 00:12:30.430 align:start position:0%
than 18 but then we'll perform a map
would<00:12:28.279><c> say</c><00:12:28.459><c> given</c><00:12:28.730><c> a</c><00:12:28.880><c> person</c><00:12:29.570><c> give</c><00:12:29.779><c> me</c><00:12:29.930><c> the</c>

00:12:30.430 --> 00:12:30.440 align:start position:0%
would say given a person give me the
 

00:12:30.440 --> 00:12:34.120 align:start position:0%
would say given a person give me the
person<00:12:30.860><c> dot</c><00:12:31.040><c> get</c><00:12:31.399><c> name</c><00:12:31.820><c> right</c><00:12:32.480><c> here</c><00:12:32.779><c> or</c><00:12:33.410><c> as</c><00:12:33.829><c> we</c>

00:12:34.120 --> 00:12:34.130 align:start position:0%
person dot get name right here or as we
 

00:12:34.130 --> 00:12:35.889 align:start position:0%
person dot get name right here or as we
would<00:12:34.310><c> do</c><00:12:34.490><c> with</c><00:12:34.520><c> refactor</c><00:12:35.270><c> this</c><00:12:35.450><c> to</c><00:12:35.570><c> using</c>

00:12:35.889 --> 00:12:35.899 align:start position:0%
would do with refactor this to using
 

00:12:35.899 --> 00:12:37.960 align:start position:0%
would do with refactor this to using
method<00:12:36.170><c> references</c><00:12:36.380><c> in</c><00:12:36.829><c> just</c><00:12:37.010><c> a</c><00:12:37.100><c> minute</c><00:12:37.250><c> we</c>

00:12:37.960 --> 00:12:37.970 align:start position:0%
method references in just a minute we
 

00:12:37.970 --> 00:12:40.569 align:start position:0%
method references in just a minute we
can<00:12:38.120><c> then</c><00:12:38.390><c> say</c><00:12:38.690><c> given</c><00:12:39.079><c> a</c><00:12:39.170><c> name</c><00:12:39.380><c> we'll</c><00:12:40.070><c> say</c><00:12:40.339><c> name</c>

00:12:40.569 --> 00:12:40.579 align:start position:0%
can then say given a name we'll say name
 

00:12:40.579 --> 00:12:44.470 align:start position:0%
can then say given a name we'll say name
to<00:12:40.880><c> uppercase</c><00:12:41.890><c> right</c><00:12:42.890><c> here</c><00:12:43.310><c> and</c><00:12:43.910><c> then</c><00:12:44.060><c> once</c><00:12:44.300><c> we</c>

00:12:44.470 --> 00:12:44.480 align:start position:0%
to uppercase right here and then once we
 

00:12:44.480 --> 00:12:46.360 align:start position:0%
to uppercase right here and then once we
get<00:12:44.600><c> the</c><00:12:44.720><c> upper</c><00:12:45.020><c> case</c><00:12:45.200><c> we</c><00:12:45.410><c> can</c><00:12:45.560><c> say</c><00:12:45.800><c> collect</c>

00:12:46.360 --> 00:12:46.370 align:start position:0%
get the upper case we can say collect
 

00:12:46.370 --> 00:12:48.639 align:start position:0%
get the upper case we can say collect
and<00:12:47.000><c> we</c><00:12:47.240><c> will</c><00:12:47.390><c> collect</c><00:12:47.660><c> it</c><00:12:47.870><c> into</c><00:12:48.260><c> a</c><00:12:48.290><c> nice</c>

00:12:48.639 --> 00:12:48.649 align:start position:0%
and we will collect it into a nice
 

00:12:48.649 --> 00:12:51.790 align:start position:0%
and we will collect it into a nice
little<00:12:48.920><c> list</c><00:12:49.670><c> if</c><00:12:49.940><c> you</c><00:12:50.120><c> will</c><00:12:50.329><c> so</c><00:12:51.050><c> here</c><00:12:51.350><c> is</c><00:12:51.500><c> to</c>

00:12:51.790 --> 00:12:51.800 align:start position:0%
little list if you will so here is to
 

00:12:51.800 --> 00:12:54.250 align:start position:0%
little list if you will so here is to
list<00:12:52.190><c> and</c><00:12:52.520><c> of</c><00:12:53.180><c> course</c><00:12:53.420><c> to</c><00:12:53.660><c> list</c><00:12:53.870><c> comes</c><00:12:54.110><c> from</c>

00:12:54.250 --> 00:12:54.260 align:start position:0%
list and of course to list comes from
 

00:12:54.260 --> 00:12:58.269 align:start position:0%
list and of course to list comes from
the<00:12:54.350><c> collectors</c><00:12:54.950><c> of</c><00:12:56.020><c> utility</c><00:12:57.020><c> method</c><00:12:57.890><c> so</c>

00:12:58.269 --> 00:12:58.279 align:start position:0%
the collectors of utility method so
 

00:12:58.279 --> 00:13:00.970 align:start position:0%
the collectors of utility method so
we'll<00:12:58.459><c> say</c><00:12:58.640><c> collectors</c><00:12:59.360><c> and</c><00:12:59.810><c> right</c><00:13:00.560><c> there</c><00:13:00.800><c> is</c>

00:13:00.970 --> 00:13:00.980 align:start position:0%
we'll say collectors and right there is
 

00:13:00.980 --> 00:13:03.069 align:start position:0%
we'll say collectors and right there is
the<00:13:01.130><c> to</c><00:13:01.339><c> list</c><00:13:01.610><c> coming</c><00:13:01.880><c> from</c><00:13:02.149><c> the</c><00:13:02.360><c> collectors</c>

00:13:03.069 --> 00:13:03.079 align:start position:0%
the to list coming from the collectors
 

00:13:03.079 --> 00:13:05.199 align:start position:0%
the to list coming from the collectors
let's<00:13:03.860><c> go</c><00:13:04.010><c> ahead</c><00:13:04.070><c> and</c><00:13:04.250><c> run</c><00:13:04.459><c> this</c><00:13:04.670><c> code</c><00:13:04.880><c> and</c><00:13:05.029><c> see</c>

00:13:05.199 --> 00:13:05.209 align:start position:0%
let's go ahead and run this code and see
 

00:13:05.209 --> 00:13:07.480 align:start position:0%
let's go ahead and run this code and see
what<00:13:05.240><c> it</c><00:13:05.600><c> does</c><00:13:05.839><c> and</c><00:13:06.079><c> of</c><00:13:06.529><c> course</c><00:13:06.800><c> in</c><00:13:07.130><c> this</c><00:13:07.279><c> case</c>

00:13:07.480 --> 00:13:07.490 align:start position:0%
what it does and of course in this case
 

00:13:07.490 --> 00:13:09.220 align:start position:0%
what it does and of course in this case
given<00:13:07.850><c> a</c><00:13:08.029><c> person</c><00:13:08.600><c> I</c><00:13:08.690><c> should</c><00:13:08.750><c> spell</c><00:13:09.110><c> it</c>

00:13:09.220 --> 00:13:09.230 align:start position:0%
given a person I should spell it
 

00:13:09.230 --> 00:13:11.769 align:start position:0%
given a person I should spell it
properly<00:13:09.589><c> here</c><00:13:09.920><c> is</c><00:13:10.010><c> a</c><00:13:10.040><c> person</c><00:13:10.700><c> and</c><00:13:10.940><c> of</c><00:13:11.510><c> course</c>

00:13:11.769 --> 00:13:11.779 align:start position:0%
properly here is a person and of course
 

00:13:11.779 --> 00:13:13.210 align:start position:0%
properly here is a person and of course
go<00:13:12.050><c> ahead</c><00:13:12.200><c> and</c><00:13:12.290><c> run</c><00:13:12.470><c> this</c><00:13:12.620><c> code</c><00:13:12.829><c> and</c><00:13:13.010><c> see</c>

00:13:13.210 --> 00:13:13.220 align:start position:0%
go ahead and run this code and see
 

00:13:13.220 --> 00:13:15.850 align:start position:0%
go ahead and run this code and see
that's<00:13:13.520><c> a</c><00:13:13.670><c> jack-and-jill</c><00:13:14.410><c> but</c><00:13:15.410><c> look</c><00:13:15.620><c> at</c><00:13:15.740><c> the</c>

00:13:15.850 --> 00:13:15.860 align:start position:0%
that's a jack-and-jill but look at the
 

00:13:15.860 --> 00:13:18.430 align:start position:0%
that's a jack-and-jill but look at the
function<00:13:16.510><c> composition</c><00:13:17.510><c> we</c><00:13:17.690><c> see</c><00:13:17.900><c> right</c><00:13:18.170><c> here</c>

00:13:18.430 --> 00:13:18.440 align:start position:0%
function composition we see right here
 

00:13:18.440 --> 00:13:20.980 align:start position:0%
function composition we see right here
give<00:13:19.220><c> it</c><00:13:19.250><c> a</c><00:13:19.400><c> collection</c><00:13:19.760><c> of</c><00:13:19.850><c> person</c>

00:13:20.980 --> 00:13:20.990 align:start position:0%
give it a collection of person
 

00:13:20.990 --> 00:13:23.350 align:start position:0%
give it a collection of person
we<00:13:21.260><c> get</c><00:13:21.500><c> all</c><00:13:21.740><c> the</c><00:13:21.980><c> people</c><00:13:22.310><c> in</c><00:13:22.550><c> more</c><00:13:22.790><c> than</c><00:13:22.880><c> 18</c>

00:13:23.350 --> 00:13:23.360 align:start position:0%
we get all the people in more than 18
 

00:13:23.360 --> 00:13:26.230 align:start position:0%
we get all the people in more than 18
get<00:13:24.050><c> their</c><00:13:24.230><c> name</c><00:13:24.530><c> convert</c><00:13:25.340><c> to</c><00:13:25.460><c> uppercase</c><00:13:25.910><c> and</c>

00:13:26.230 --> 00:13:26.240 align:start position:0%
get their name convert to uppercase and
 

00:13:26.240 --> 00:13:28.870 align:start position:0%
get their name convert to uppercase and
put<00:13:26.570><c> it</c><00:13:26.630><c> back</c><00:13:26.750><c> into</c><00:13:26.930><c> a</c><00:13:27.020><c> list</c><00:13:27.320><c> it</c><00:13:27.980><c> becomes</c><00:13:28.340><c> a</c><00:13:28.460><c> one</c>

00:13:28.870 --> 00:13:28.880 align:start position:0%
put it back into a list it becomes a one
 

00:13:28.880 --> 00:13:32.260 align:start position:0%
put it back into a list it becomes a one
flow<00:13:29.690><c> to</c><00:13:30.110><c> top</c><00:13:30.560><c> to</c><00:13:30.740><c> bottom</c><00:13:30.980><c> we</c><00:13:31.880><c> don't</c><00:13:32.060><c> have</c><00:13:32.180><c> to</c>

00:13:32.260 --> 00:13:32.270 align:start position:0%
flow to top to bottom we don't have to
 

00:13:32.270 --> 00:13:34.450 align:start position:0%
flow to top to bottom we don't have to
go<00:13:32.390><c> back</c><00:13:32.570><c> and</c><00:13:32.780><c> forth</c><00:13:33.080><c> to</c><00:13:33.320><c> understand</c><00:13:33.830><c> there</c><00:13:34.430><c> is</c>

00:13:34.450 --> 00:13:34.460 align:start position:0%
go back and forth to understand there is
 

00:13:34.460 --> 00:13:36.580 align:start position:0%
go back and forth to understand there is
no<00:13:34.580><c> need</c><00:13:34.880><c> for</c><00:13:34.910><c> the</c><00:13:35.330><c> breaks</c><00:13:35.690><c> and</c><00:13:35.960><c> continues</c><00:13:36.410><c> and</c>

00:13:36.580 --> 00:13:36.590 align:start position:0%
no need for the breaks and continues and
 

00:13:36.590 --> 00:13:38.740 align:start position:0%
no need for the breaks and continues and
all<00:13:36.740><c> that</c><00:13:36.980><c> thing</c><00:13:37.250><c> we</c><00:13:37.430><c> do</c><00:13:37.610><c> it</c><00:13:38.210><c> becomes</c><00:13:38.480><c> a</c><00:13:38.600><c> lot</c>

00:13:38.740 --> 00:13:38.750 align:start position:0%
all that thing we do it becomes a lot
 

00:13:38.750 --> 00:13:41.080 align:start position:0%
all that thing we do it becomes a lot
easier<00:13:39.290><c> of</c><00:13:39.830><c> course</c><00:13:39.890><c> we</c><00:13:40.430><c> could</c><00:13:40.580><c> take</c><00:13:40.760><c> this</c><00:13:40.940><c> one</c>

00:13:41.080 --> 00:13:41.090 align:start position:0%
easier of course we could take this one
 

00:13:41.090 --> 00:13:43.630 align:start position:0%
easier of course we could take this one
and<00:13:41.270><c> say</c><00:13:41.420><c> string</c><00:13:41.960><c> colon</c><00:13:42.470><c> colon</c><00:13:42.860><c> and</c><00:13:43.070><c> use</c><00:13:43.610><c> a</c>

00:13:43.630 --> 00:13:43.640 align:start position:0%
and say string colon colon and use a
 

00:13:43.640 --> 00:13:46.690 align:start position:0%
and say string colon colon and use a
method<00:13:44.000><c> reference</c><00:13:44.390><c> as</c><00:13:44.540><c> well</c><00:13:45.020><c> and</c><00:13:45.430><c> likewise</c><00:13:46.430><c> we</c>

00:13:46.690 --> 00:13:46.700 align:start position:0%
method reference as well and likewise we
 

00:13:46.700 --> 00:13:49.390 align:start position:0%
method reference as well and likewise we
could<00:13:46.910><c> use</c><00:13:47.090><c> a</c><00:13:47.300><c> method</c><00:13:47.750><c> reference</c><00:13:48.140><c> here</c><00:13:48.350><c> do</c><00:13:48.650><c> so</c>

00:13:49.390 --> 00:13:49.400 align:start position:0%
could use a method reference here do so
 

00:13:49.400 --> 00:13:51.250 align:start position:0%
could use a method reference here do so
we<00:13:49.550><c> can</c><00:13:49.760><c> save</c><00:13:50.090><c> quite</c><00:13:50.120><c> a</c><00:13:50.480><c> bit</c><00:13:50.570><c> of</c><00:13:50.750><c> effort</c><00:13:50.960><c> and</c>

00:13:51.250 --> 00:13:51.260 align:start position:0%
we can save quite a bit of effort and
 

00:13:51.260 --> 00:13:53.470 align:start position:0%
we can save quite a bit of effort and
reading<00:13:51.680><c> this</c><00:13:51.830><c> code</c><00:13:52.100><c> and</c><00:13:52.460><c> make</c><00:13:52.880><c> it</c><00:13:53.030><c> really</c>

00:13:53.470 --> 00:13:53.480 align:start position:0%
reading this code and make it really
 

00:13:53.480 --> 00:13:55.600 align:start position:0%
reading this code and make it really
elegant<00:13:54.110><c> if</c><00:13:54.260><c> you</c><00:13:54.410><c> want</c><00:13:54.650><c> so</c><00:13:55.160><c> in</c><00:13:55.280><c> this</c><00:13:55.370><c> case</c><00:13:55.580><c> of</c>

00:13:55.600 --> 00:13:55.610 align:start position:0%
elegant if you want so in this case of
 

00:13:55.610 --> 00:13:58.270 align:start position:0%
elegant if you want so in this case of
course<00:13:55.760><c> given</c><00:13:56.360><c> a</c><00:13:56.480><c> person</c><00:13:57.170><c> we</c><00:13:57.740><c> are</c><00:13:57.770><c> going</c><00:13:58.040><c> to</c>

00:13:58.270 --> 00:13:58.280 align:start position:0%
course given a person we are going to
 

00:13:58.280 --> 00:14:00.760 align:start position:0%
course given a person we are going to
get<00:13:58.730><c> the</c><00:13:58.880><c> person's</c><00:13:59.330><c> name</c><00:13:59.780><c> and</c><00:14:00.230><c> then</c><00:14:00.620><c> we're</c>

00:14:00.760 --> 00:14:00.770 align:start position:0%
get the person's name and then we're
 

00:14:00.770 --> 00:14:02.920 align:start position:0%
get the person's name and then we're
going<00:14:00.890><c> to</c><00:14:01.010><c> convert</c><00:14:01.370><c> it</c><00:14:01.520><c> to</c><00:14:01.550><c> uppercase</c><00:14:02.210><c> and</c><00:14:02.510><c> get</c>

00:14:02.920 --> 00:14:02.930 align:start position:0%
going to convert it to uppercase and get
 

00:14:02.930 --> 00:14:05.230 align:start position:0%
going to convert it to uppercase and get
the<00:14:03.050><c> result</c><00:14:03.380><c> this</c><00:14:03.980><c> function</c><00:14:04.400><c> composition</c><00:14:05.120><c> is</c>

00:14:05.230 --> 00:14:05.240 align:start position:0%
the result this function composition is
 

00:14:05.240 --> 00:14:07.990 align:start position:0%
the result this function composition is
extremely<00:14:05.990><c> compelling</c><00:14:06.500><c> and</c><00:14:06.950><c> so</c><00:14:07.490><c> that's</c><00:14:07.700><c> one</c>

00:14:07.990 --> 00:14:08.000 align:start position:0%
extremely compelling and so that's one
 

00:14:08.000 --> 00:14:09.400 align:start position:0%
extremely compelling and so that's one
of<00:14:08.030><c> the</c><00:14:08.120><c> biggest</c><00:14:08.420><c> benefits</c><00:14:08.990><c> we</c><00:14:09.110><c> can</c><00:14:09.260><c> out</c><00:14:09.380><c> of</c>

00:14:09.400 --> 00:14:09.410 align:start position:0%
of the biggest benefits we can out of
 

00:14:09.410 --> 00:14:11.290 align:start position:0%
of the biggest benefits we can out of
this<00:14:09.590><c> but</c><00:14:10.340><c> of</c><00:14:10.430><c> course</c><00:14:10.640><c> the</c><00:14:10.790><c> question</c><00:14:11.180><c> is</c>

00:14:11.290 --> 00:14:11.300 align:start position:0%
this but of course the question is
 

00:14:11.300 --> 00:14:13.150 align:start position:0%
this but of course the question is
what's<00:14:12.170><c> the</c><00:14:12.380><c> catch</c>

00:14:13.150 --> 00:14:13.160 align:start position:0%
what's the catch
 

00:14:13.160 --> 00:14:15.160 align:start position:0%
what's the catch
that's<00:14:13.580><c> what</c><00:14:13.760><c> intelligent</c><00:14:14.660><c> programmers</c>

00:14:15.160 --> 00:14:15.170 align:start position:0%
that's what intelligent programmers
 

00:14:15.170 --> 00:14:17.770 align:start position:0%
that's what intelligent programmers
always<00:14:15.590><c> ask</c><00:14:15.860><c> what's</c><00:14:16.430><c> the</c><00:14:16.580><c> catch</c><00:14:16.790><c> well</c><00:14:17.570><c> let's</c>

00:14:17.770 --> 00:14:17.780 align:start position:0%
always ask what's the catch well let's
 

00:14:17.780 --> 00:14:19.690 align:start position:0%
always ask what's the catch well let's
talk<00:14:17.900><c> about</c><00:14:18.170><c> the</c><00:14:18.290><c> big</c><00:14:18.530><c> elephant</c><00:14:19.190><c> in</c><00:14:19.340><c> the</c><00:14:19.670><c> room</c>

00:14:19.690 --> 00:14:19.700 align:start position:0%
talk about the big elephant in the room
 

00:14:19.700 --> 00:14:23.020 align:start position:0%
talk about the big elephant in the room
I've<00:14:20.690><c> never</c><00:14:21.170><c> walked</c><00:14:21.650><c> into</c><00:14:22.070><c> a</c><00:14:22.100><c> client</c><00:14:22.730><c> site</c>

00:14:23.020 --> 00:14:23.030 align:start position:0%
I've never walked into a client site
 

00:14:23.030 --> 00:14:26.500 align:start position:0%
I've never walked into a client site
where<00:14:24.020><c> the</c><00:14:24.260><c> minute</c><00:14:24.650><c> I</c><00:14:24.800><c> talk</c><00:14:25.040><c> about</c><00:14:25.220><c> Java</c><00:14:25.880><c> 8</c><00:14:26.180><c> and</c>

00:14:26.500 --> 00:14:26.510 align:start position:0%
where the minute I talk about Java 8 and
 

00:14:26.510 --> 00:14:29.350 align:start position:0%
where the minute I talk about Java 8 and
functional<00:14:27.140><c> programming</c><00:14:27.530><c> the</c><00:14:28.520><c> immediate</c>

00:14:29.350 --> 00:14:29.360 align:start position:0%
functional programming the immediate
 

00:14:29.360 --> 00:14:31.270 align:start position:0%
functional programming the immediate
question<00:14:29.510><c> is</c><00:14:29.930><c> gosh</c><00:14:30.560><c> but</c><00:14:30.860><c> what</c><00:14:31.100><c> about</c>

00:14:31.270 --> 00:14:31.280 align:start position:0%
question is gosh but what about
 

00:14:31.280 --> 00:14:33.550 align:start position:0%
question is gosh but what about
performance<00:14:31.930><c> performance</c><00:14:32.930><c> is</c><00:14:33.260><c> something</c>

00:14:33.550 --> 00:14:33.560 align:start position:0%
performance performance is something
 

00:14:33.560 --> 00:14:37.240 align:start position:0%
performance performance is something
extremely<00:14:34.420><c> important</c><00:14:35.420><c> but</c><00:14:35.960><c> it</c><00:14:36.080><c> turns</c><00:14:36.320><c> out</c><00:14:36.560><c> not</c>

00:14:37.240 --> 00:14:37.250 align:start position:0%
extremely important but it turns out not
 

00:14:37.250 --> 00:14:39.370 align:start position:0%
extremely important but it turns out not
all<00:14:37.580><c> languages</c><00:14:38.000><c> are</c><00:14:38.270><c> created</c><00:14:38.690><c> equal</c>

00:14:39.370 --> 00:14:39.380 align:start position:0%
all languages are created equal
 

00:14:39.380 --> 00:14:42.430 align:start position:0%
all languages are created equal
let's<00:14:40.070><c> just</c><00:14:40.370><c> take</c><00:14:40.580><c> a</c><00:14:40.640><c> detour</c><00:14:41.180><c> and</c><00:14:41.600><c> take</c><00:14:42.170><c> a</c><00:14:42.200><c> look</c>

00:14:42.430 --> 00:14:42.440 align:start position:0%
let's just take a detour and take a look
 

00:14:42.440 --> 00:14:45.100 align:start position:0%
let's just take a detour and take a look
at<00:14:42.560><c> Ruby</c><00:14:42.860><c> real</c><00:14:43.460><c> quick</c><00:14:43.790><c> before</c><00:14:44.660><c> I</c><00:14:44.690><c> get</c><00:14:44.780><c> started</c>

00:14:45.100 --> 00:14:45.110 align:start position:0%
at Ruby real quick before I get started
 

00:14:45.110 --> 00:14:47.350 align:start position:0%
at Ruby real quick before I get started
though<00:14:45.320><c> on</c><00:14:45.740><c> this</c><00:14:45.980><c> I</c><00:14:46.220><c> want</c><00:14:46.700><c> to</c><00:14:46.730><c> emphasize</c><00:14:47.120><c> one</c>

00:14:47.350 --> 00:14:47.360 align:start position:0%
though on this I want to emphasize one
 

00:14:47.360 --> 00:14:50.980 align:start position:0%
though on this I want to emphasize one
thing<00:14:47.390><c> I</c><00:14:47.750><c> love</c><00:14:48.650><c> Ruby</c><00:14:49.370><c> I</c><00:14:49.580><c> don't</c><00:14:50.030><c> want</c><00:14:50.270><c> me</c><00:14:50.690><c> saying</c>

00:14:50.980 --> 00:14:50.990 align:start position:0%
thing I love Ruby I don't want me saying
 

00:14:50.990 --> 00:14:52.450 align:start position:0%
thing I love Ruby I don't want me saying
negative<00:14:51.320><c> things</c><00:14:51.560><c> about</c><00:14:51.740><c> a</c><00:14:51.890><c> language</c><00:14:52.070><c> to</c><00:14:52.370><c> be</c>

00:14:52.450 --> 00:14:52.460 align:start position:0%
negative things about a language to be
 

00:14:52.460 --> 00:14:55.690 align:start position:0%
negative things about a language to be
taken<00:14:52.760><c> as</c><00:14:52.940><c> a</c><00:14:53.350><c> hateful</c><00:14:54.350><c> comment</c><00:14:54.770><c> I'm</c><00:14:55.310><c> I'm</c>

00:14:55.690 --> 00:14:55.700 align:start position:0%
taken as a hateful comment I'm I'm
 

00:14:55.700 --> 00:14:57.580 align:start position:0%
taken as a hateful comment I'm I'm
objective<00:14:56.330><c> I</c><00:14:56.450><c> want</c><00:14:56.750><c> to</c><00:14:56.810><c> show</c><00:14:56.960><c> good</c><00:14:57.200><c> things</c><00:14:57.440><c> and</c>

00:14:57.580 --> 00:14:57.590 align:start position:0%
objective I want to show good things and
 

00:14:57.590 --> 00:14:59.470 align:start position:0%
objective I want to show good things and
I<00:14:57.620><c> want</c><00:14:57.800><c> to</c><00:14:57.860><c> show</c><00:14:58.070><c> not-so-good</c><00:14:59.030><c> things</c><00:14:59.090><c> as</c>

00:14:59.470 --> 00:14:59.480 align:start position:0%
I want to show not-so-good things as
 

00:14:59.480 --> 00:15:01.480 align:start position:0%
I want to show not-so-good things as
well<00:14:59.930><c> in</c><00:15:00.170><c> fact</c><00:15:00.470><c> I</c><00:15:00.770><c> would</c><00:15:00.890><c> even</c><00:15:00.980><c> point</c><00:15:01.310><c> that</c>

00:15:01.480 --> 00:15:01.490 align:start position:0%
well in fact I would even point that
 

00:15:01.490 --> 00:15:04.060 align:start position:0%
well in fact I would even point that
about<00:15:01.730><c> Java</c><00:15:01.970><c> 8</c><00:15:02.180><c> in</c><00:15:02.360><c> the</c><00:15:02.450><c> end</c><00:15:02.660><c> I</c><00:15:02.990><c> love</c><00:15:03.650><c> Ruby</c><00:15:04.040><c> I</c>

00:15:04.060 --> 00:15:04.070 align:start position:0%
about Java 8 in the end I love Ruby I
 

00:15:04.070 --> 00:15:06.070 align:start position:0%
about Java 8 in the end I love Ruby I
use<00:15:04.460><c> Ruby</c><00:15:04.820><c> extensively</c><00:15:05.300><c> our</c><00:15:05.810><c> god</c>

00:15:06.070 --> 00:15:06.080 align:start position:0%
use Ruby extensively our god
 

00:15:06.080 --> 00:15:07.960 align:start position:0%
use Ruby extensively our god
applications<00:15:06.710><c> I</c><00:15:06.800><c> maintain</c><00:15:07.340><c> in</c><00:15:07.490><c> production</c>

00:15:07.960 --> 00:15:07.970 align:start position:0%
applications I maintain in production
 

00:15:07.970 --> 00:15:10.180 align:start position:0%
applications I maintain in production
using<00:15:08.270><c> Ruby</c><00:15:08.510><c> as</c><00:15:08.630><c> well</c><00:15:08.900><c> as</c><00:15:09.350><c> much</c><00:15:09.620><c> as</c><00:15:09.650><c> a</c><00:15:09.800><c> lot</c><00:15:09.950><c> of</c>

00:15:10.180 --> 00:15:10.190 align:start position:0%
using Ruby as well as much as a lot of
 

00:15:10.190 --> 00:15:12.340 align:start position:0%
using Ruby as well as much as a lot of
other<00:15:10.370><c> languages</c><00:15:11.020><c> however</c><00:15:12.020><c> from</c><00:15:12.230><c> the</c>

00:15:12.340 --> 00:15:12.350 align:start position:0%
other languages however from the
 

00:15:12.350 --> 00:15:14.380 align:start position:0%
other languages however from the
language<00:15:12.650><c> point</c><00:15:12.890><c> of</c><00:15:12.980><c> view</c><00:15:13.130><c> I</c><00:15:13.370><c> looked</c><00:15:13.940><c> like</c><00:15:14.240><c> to</c>

00:15:14.380 --> 00:15:14.390 align:start position:0%
language point of view I looked like to
 

00:15:14.390 --> 00:15:15.970 align:start position:0%
language point of view I looked like to
learn<00:15:14.600><c> from</c><00:15:15.020><c> what</c><00:15:15.290><c> the</c><00:15:15.470><c> strengths</c><00:15:15.860><c> and</c>

00:15:15.970 --> 00:15:15.980 align:start position:0%
learn from what the strengths and
 

00:15:15.980 --> 00:15:17.830 align:start position:0%
learn from what the strengths and
weaknesses<00:15:16.400><c> of</c><00:15:16.430><c> languages</c><00:15:16.940><c> are</c><00:15:17.150><c> the</c>

00:15:17.830 --> 00:15:17.840 align:start position:0%
weaknesses of languages are the
 

00:15:17.840 --> 00:15:20.670 align:start position:0%
weaknesses of languages are the
strengths<00:15:18.140><c> of</c><00:15:18.290><c> Ruby</c><00:15:18.620><c> is</c><00:15:18.830><c> pure</c><00:15:19.460><c> elegance</c><00:15:20.120><c> it's</c>

00:15:20.670 --> 00:15:20.680 align:start position:0%
strengths of Ruby is pure elegance it's
 

00:15:20.680 --> 00:15:21.850 align:start position:0%
strengths of Ruby is pure elegance it's
beautiful

00:15:21.850 --> 00:15:21.860 align:start position:0%
beautiful
 

00:15:21.860 --> 00:15:24.640 align:start position:0%
beautiful
no<00:15:22.340><c> ceremony</c><00:15:22.910><c> so</c><00:15:23.780><c> it's</c><00:15:23.930><c> a</c><00:15:24.050><c> really</c><00:15:24.500><c> good</c>

00:15:24.640 --> 00:15:24.650 align:start position:0%
no ceremony so it's a really good
 

00:15:24.650 --> 00:15:27.490 align:start position:0%
no ceremony so it's a really good
language<00:15:25.160><c> for</c><00:15:25.700><c> a</c><00:15:25.910><c> certain</c><00:15:26.510><c> type</c><00:15:26.750><c> of</c><00:15:26.780><c> things</c><00:15:27.230><c> we</c>

00:15:27.490 --> 00:15:27.500 align:start position:0%
language for a certain type of things we
 

00:15:27.500 --> 00:15:30.400 align:start position:0%
language for a certain type of things we
do<00:15:27.710><c> kind</c><00:15:28.640><c> of</c><00:15:28.730><c> like</c><00:15:28.850><c> a</c><00:15:29.120><c> bicycle</c><00:15:29.660><c> versus</c><00:15:30.200><c> serve</c>

00:15:30.400 --> 00:15:30.410 align:start position:0%
do kind of like a bicycle versus serve
 

00:15:30.410 --> 00:15:31.930 align:start position:0%
do kind of like a bicycle versus serve
rocket<00:15:31.010><c> if</c><00:15:31.160><c> you</c><00:15:31.250><c> want</c><00:15:31.400><c> to</c><00:15:31.490><c> think</c><00:15:31.550><c> about</c><00:15:31.790><c> it</c>

00:15:31.930 --> 00:15:31.940 align:start position:0%
rocket if you want to think about it
 

00:15:31.940 --> 00:15:33.890 align:start position:0%
rocket if you want to think about it
that<00:15:32.120><c> way</c><00:15:32.360><c> there</c><00:15:33.020><c> are</c><00:15:33.050><c> planes</c><00:15:33.320><c> when</c>

00:15:33.890 --> 00:15:33.900 align:start position:0%
that way there are planes when
 

00:15:33.900 --> 00:15:36.560 align:start position:0%
that way there are planes when
rocket<00:15:34.470><c> is</c><00:15:34.740><c> maybe</c><00:15:35.250><c> the</c><00:15:35.460><c> right</c><00:15:35.610><c> vehicle</c><00:15:36.270><c> to</c><00:15:36.420><c> use</c>

00:15:36.560 --> 00:15:36.570 align:start position:0%
rocket is maybe the right vehicle to use
 

00:15:36.570 --> 00:15:39.350 align:start position:0%
rocket is maybe the right vehicle to use
a<00:15:36.930><c> lot</c><00:15:37.410><c> of</c><00:15:37.500><c> times</c><00:15:37.740><c> bicycle</c><00:15:38.490><c> is</c><00:15:38.580><c> awesome</c><00:15:39.180><c> to</c><00:15:39.330><c> use</c>

00:15:39.350 --> 00:15:39.360 align:start position:0%
a lot of times bicycle is awesome to use
 

00:15:39.360 --> 00:15:41.330 align:start position:0%
a lot of times bicycle is awesome to use
and<00:15:39.780><c> I</c><00:15:40.140><c> want</c><00:15:40.350><c> to</c><00:15:40.440><c> be</c><00:15:40.530><c> able</c><00:15:40.770><c> to</c><00:15:40.920><c> pick</c><00:15:41.130><c> and</c><00:15:41.280><c> choose</c>

00:15:41.330 --> 00:15:41.340 align:start position:0%
and I want to be able to pick and choose
 

00:15:41.340 --> 00:15:43.310 align:start position:0%
and I want to be able to pick and choose
what<00:15:41.760><c> may</c><00:15:41.970><c> make</c><00:15:42.090><c> sense</c><00:15:42.330><c> let's</c><00:15:42.990><c> talk</c><00:15:43.200><c> about</c>

00:15:43.310 --> 00:15:43.320 align:start position:0%
what may make sense let's talk about
 

00:15:43.320 --> 00:15:46.190 align:start position:0%
what may make sense let's talk about
Ruby<00:15:43.800><c> real</c><00:15:44.130><c> quick</c><00:15:44.490><c> so</c><00:15:45.150><c> here</c><00:15:45.360><c> I'm</c><00:15:45.540><c> in</c><00:15:45.570><c> the</c><00:15:45.720><c> Ruby</c>

00:15:46.190 --> 00:15:46.200 align:start position:0%
Ruby real quick so here I'm in the Ruby
 

00:15:46.200 --> 00:15:48.910 align:start position:0%
Ruby real quick so here I'm in the Ruby
source<00:15:46.560><c> code</c><00:15:46.890><c> let's</c><00:15:47.700><c> talk</c><00:15:47.970><c> about</c><00:15:48.210><c> a</c><00:15:48.810><c> little</c>

00:15:48.910 --> 00:15:48.920 align:start position:0%
source code let's talk about a little
 

00:15:48.920 --> 00:15:51.950 align:start position:0%
source code let's talk about a little
transformation<00:15:49.920><c> I</c><00:15:50.370><c> want</c><00:15:50.670><c> to</c><00:15:50.760><c> do</c><00:15:50.880><c> let's</c><00:15:51.750><c> do</c>

00:15:51.950 --> 00:15:51.960 align:start position:0%
transformation I want to do let's do
 

00:15:51.960 --> 00:15:55.310 align:start position:0%
transformation I want to do let's do
numbers<00:15:52.500><c> is</c><00:15:53.160><c> equal</c><00:15:53.700><c> to</c><00:15:53.970><c> and</c><00:15:54.720><c> I</c><00:15:54.810><c> want</c><00:15:55.020><c> to</c><00:15:55.110><c> save</c>

00:15:55.310 --> 00:15:55.320 align:start position:0%
numbers is equal to and I want to save
 

00:15:55.320 --> 00:15:57.980 align:start position:0%
numbers is equal to and I want to save
one<00:15:55.740><c> two</c><00:15:56.010><c> three</c><00:15:56.340><c> maybe</c><00:15:56.820><c> a</c><00:15:57.000><c> few</c><00:15:57.390><c> numbers</c><00:15:57.750><c> right</c>

00:15:57.980 --> 00:15:57.990 align:start position:0%
one two three maybe a few numbers right
 

00:15:57.990 --> 00:16:00.220 align:start position:0%
one two three maybe a few numbers right
here<00:15:58.380><c> I</c><00:15:58.560><c> don't</c><00:15:59.100><c> want</c><00:15:59.220><c> to</c><00:15:59.310><c> take</c><00:15:59.490><c> these</c><00:15:59.730><c> numbers</c>

00:16:00.220 --> 00:16:00.230 align:start position:0%
here I don't want to take these numbers
 

00:16:00.230 --> 00:16:03.230 align:start position:0%
here I don't want to take these numbers
but<00:16:01.230><c> what</c><00:16:01.440><c> do</c><00:16:01.500><c> I</c><00:16:01.620><c> want</c><00:16:01.860><c> to</c><00:16:01.950><c> do</c><00:16:02.070><c> I'm</c><00:16:02.640><c> gonna</c><00:16:02.910><c> say</c>

00:16:03.230 --> 00:16:03.240 align:start position:0%
but what do I want to do I'm gonna say
 

00:16:03.240 --> 00:16:07.250 align:start position:0%
but what do I want to do I'm gonna say
find<00:16:03.870><c> the</c><00:16:04.490><c> first</c><00:16:05.490><c> let's</c><00:16:06.090><c> say</c><00:16:06.270><c> what</c><00:16:06.600><c> find</c><00:16:06.990><c> E</c>

00:16:07.250 --> 00:16:07.260 align:start position:0%
find the first let's say what find E
 

00:16:07.260 --> 00:16:11.060 align:start position:0%
find the first let's say what find E
let's<00:16:07.980><c> say</c><00:16:08.190><c> double</c><00:16:08.910><c> off</c><00:16:09.150><c> are</c><00:16:09.870><c> all</c><00:16:10.230><c> even</c>

00:16:11.060 --> 00:16:11.070 align:start position:0%
let's say double off are all even
 

00:16:11.070 --> 00:16:13.370 align:start position:0%
let's say double off are all even
numbers<00:16:11.490><c> so</c><00:16:11.970><c> I</c><00:16:12.390><c> want</c><00:16:12.570><c> to</c><00:16:12.600><c> find</c><00:16:12.810><c> the</c><00:16:12.930><c> double</c><00:16:13.260><c> of</c>

00:16:13.370 --> 00:16:13.380 align:start position:0%
numbers so I want to find the double of
 

00:16:13.380 --> 00:16:15.530 align:start position:0%
numbers so I want to find the double of
all<00:16:13.590><c> even</c><00:16:14.040><c> numbers</c><00:16:14.160><c> well</c><00:16:14.970><c> that</c><00:16:15.210><c> shouldn't</c><00:16:15.480><c> be</c>

00:16:15.530 --> 00:16:15.540 align:start position:0%
all even numbers well that shouldn't be
 

00:16:15.540 --> 00:16:18.350 align:start position:0%
all even numbers well that shouldn't be
really<00:16:15.900><c> hard</c><00:16:16.260><c> to</c><00:16:16.530><c> do</c><00:16:16.710><c> is</c><00:16:16.950><c> it</c><00:16:17.190><c> well</c><00:16:17.880><c> if</c><00:16:18.090><c> I</c><00:16:18.180><c> want</c>

00:16:18.350 --> 00:16:18.360 align:start position:0%
really hard to do is it well if I want
 

00:16:18.360 --> 00:16:19.700 align:start position:0%
really hard to do is it well if I want
to<00:16:18.420><c> find</c><00:16:18.570><c> the</c><00:16:18.660><c> double</c><00:16:18.930><c> of</c><00:16:19.020><c> all</c><00:16:19.200><c> even</c><00:16:19.590><c> numbers</c>

00:16:19.700 --> 00:16:19.710 align:start position:0%
to find the double of all even numbers
 

00:16:19.710 --> 00:16:21.920 align:start position:0%
to find the double of all even numbers
I'm<00:16:20.430><c> gonna</c><00:16:20.730><c> just</c><00:16:20.910><c> take</c><00:16:21.120><c> every</c><00:16:21.420><c> number</c><00:16:21.570><c> fine</c>

00:16:21.920 --> 00:16:21.930 align:start position:0%
I'm gonna just take every number fine
 

00:16:21.930 --> 00:16:23.840 align:start position:0%
I'm gonna just take every number fine
which<00:16:22.110><c> is</c><00:16:22.140><c> even</c><00:16:22.590><c> double</c><00:16:22.920><c> it</c><00:16:23.070><c> and</c><00:16:23.580><c> then</c><00:16:23.730><c> of</c>

00:16:23.840 --> 00:16:23.850 align:start position:0%
which is even double it and then of
 

00:16:23.850 --> 00:16:26.810 align:start position:0%
which is even double it and then of
course<00:16:24.150><c> you</c><00:16:24.840><c> know</c><00:16:24.990><c> total</c><00:16:25.410><c> it</c><00:16:25.530><c> well</c><00:16:26.340><c> okay</c>

00:16:26.810 --> 00:16:26.820 align:start position:0%
course you know total it well okay
 

00:16:26.820 --> 00:16:28.730 align:start position:0%
course you know total it well okay
that's<00:16:26.970><c> not</c><00:16:27.240><c> really</c><00:16:27.570><c> that</c><00:16:27.600><c> hard</c><00:16:27.960><c> but</c><00:16:28.590><c> to</c>

00:16:28.730 --> 00:16:28.740 align:start position:0%
that's not really that hard but to
 

00:16:28.740 --> 00:16:31.160 align:start position:0%
that's not really that hard but to
change<00:16:28.980><c> the</c><00:16:29.130><c> problem</c><00:16:29.340><c> a</c><00:16:29.700><c> little</c><00:16:30.030><c> bit</c><00:16:30.210><c> what</c><00:16:31.050><c> if</c>

00:16:31.160 --> 00:16:31.170 align:start position:0%
change the problem a little bit what if
 

00:16:31.170 --> 00:16:33.380 align:start position:0%
change the problem a little bit what if
this<00:16:31.320><c> collection</c><00:16:31.680><c> we're</c><00:16:32.220><c> to</c><00:16:32.460><c> have</c><00:16:32.670><c> our</c>

00:16:33.380 --> 00:16:33.390 align:start position:0%
this collection we're to have our
 

00:16:33.390 --> 00:16:36.680 align:start position:0%
this collection we're to have our
different<00:16:33.960><c> values</c><00:16:34.530><c> along</c><00:16:35.010><c> the</c><00:16:35.280><c> way</c><00:16:35.430><c> say</c><00:16:36.330><c> maybe</c>

00:16:36.680 --> 00:16:36.690 align:start position:0%
different values along the way say maybe
 

00:16:36.690 --> 00:16:39.290 align:start position:0%
different values along the way say maybe
some<00:16:37.230><c> things</c><00:16:37.410><c> along</c><00:16:37.830><c> these</c><00:16:38.070><c> lines</c><00:16:38.460><c> I'm</c><00:16:38.910><c> gonna</c>

00:16:39.290 --> 00:16:39.300 align:start position:0%
some things along these lines I'm gonna
 

00:16:39.300 --> 00:16:41.990 align:start position:0%
some things along these lines I'm gonna
change<00:16:39.600><c> it</c><00:16:39.810><c> to</c><00:16:39.840><c> some</c><00:16:40.320><c> arbitrary</c><00:16:40.980><c> values</c><00:16:41.850><c> that</c>

00:16:41.990 --> 00:16:42.000 align:start position:0%
change it to some arbitrary values that
 

00:16:42.000 --> 00:16:43.940 align:start position:0%
change it to some arbitrary values that
I'm<00:16:42.120><c> going</c><00:16:42.330><c> to</c><00:16:42.390><c> work</c><00:16:42.660><c> with</c><00:16:42.870><c> so</c><00:16:43.530><c> in</c><00:16:43.830><c> this</c>

00:16:43.940 --> 00:16:43.950 align:start position:0%
I'm going to work with so in this
 

00:16:43.950 --> 00:16:45.890 align:start position:0%
I'm going to work with so in this
example<00:16:44.130><c> of</c><00:16:44.580><c> course</c><00:16:44.880><c> I've</c><00:16:45.150><c> got</c><00:16:45.180><c> a</c><00:16:45.570><c> bunch</c><00:16:45.810><c> of</c>

00:16:45.890 --> 00:16:45.900 align:start position:0%
example of course I've got a bunch of
 

00:16:45.900 --> 00:16:48.620 align:start position:0%
example of course I've got a bunch of
different<00:16:46.200><c> values</c><00:16:46.320><c> but</c><00:16:46.860><c> find</c><00:16:47.850><c> that</c><00:16:48.090><c> let's</c><00:16:48.450><c> say</c>

00:16:48.620 --> 00:16:48.630 align:start position:0%
different values but find that let's say
 

00:16:48.630 --> 00:16:53.450 align:start position:0%
different values but find that let's say
find<00:16:49.080><c> thee</c><00:16:49.470><c> a</c><00:16:50.030><c> double</c><00:16:51.030><c> let's</c><00:16:51.660><c> say</c><00:16:51.780><c> double</c><00:16:52.460><c> and</c>

00:16:53.450 --> 00:16:53.460 align:start position:0%
find thee a double let's say double and
 

00:16:53.460 --> 00:16:58.750 align:start position:0%
find thee a double let's say double and
off<00:16:54.060><c> the</c><00:16:54.600><c> first</c><00:16:55.290><c> number</c><00:16:56.190><c> a</c><00:16:56.600><c> greater</c><00:16:57.600><c> than</c><00:16:58.290><c> o</c>

00:16:58.750 --> 00:16:58.760 align:start position:0%
off the first number a greater than o
 

00:16:58.760 --> 00:17:01.820 align:start position:0%
off the first number a greater than o
let's<00:16:59.760><c> say</c><00:17:00.000><c> in</c><00:17:00.300><c> this</c><00:17:00.480><c> case</c><00:17:00.540><c> greater</c><00:17:01.260><c> than</c><00:17:01.500><c> what</c>

00:17:01.820 --> 00:17:01.830 align:start position:0%
let's say in this case greater than what
 

00:17:01.830 --> 00:17:04.280 align:start position:0%
let's say in this case greater than what
of<00:17:02.250><c> 50</c><00:17:02.760><c> so</c><00:17:03.390><c> I</c><00:17:03.420><c> want</c><00:17:03.570><c> to</c><00:17:03.600><c> find</c><00:17:03.750><c> the</c><00:17:03.930><c> double</c><00:17:04.200><c> of</c>

00:17:04.280 --> 00:17:04.290 align:start position:0%
of 50 so I want to find the double of
 

00:17:04.290 --> 00:17:06.800 align:start position:0%
of 50 so I want to find the double of
the<00:17:04.380><c> first</c><00:17:04.620><c> number</c><00:17:05.100><c> greater</c><00:17:05.339><c> than</c><00:17:05.459><c> 50</c><00:17:06.000><c> so</c><00:17:06.660><c> how</c>

00:17:06.800 --> 00:17:06.810 align:start position:0%
the first number greater than 50 so how
 

00:17:06.810 --> 00:17:09.230 align:start position:0%
the first number greater than 50 so how
would<00:17:06.870><c> I</c><00:17:07.020><c> do</c><00:17:07.290><c> this</c><00:17:07.320><c> well</c><00:17:08.190><c> we</c><00:17:08.490><c> are</c><00:17:08.640><c> like</c>

00:17:09.230 --> 00:17:09.240 align:start position:0%
would I do this well we are like
 

00:17:09.240 --> 00:17:10.850 align:start position:0%
would I do this well we are like
function<00:17:09.690><c> of</c><00:17:09.810><c> style</c><00:17:10.080><c> of</c><00:17:10.170><c> programming</c><00:17:10.320><c> it's</c>

00:17:10.850 --> 00:17:10.860 align:start position:0%
function of style of programming it's
 

00:17:10.860 --> 00:17:13.100 align:start position:0%
function of style of programming it's
charming<00:17:11.220><c> it's</c><00:17:11.550><c> beautiful</c><00:17:12.060><c> its</c><00:17:12.180><c> elegant</c><00:17:12.390><c> how</c>

00:17:13.100 --> 00:17:13.110 align:start position:0%
charming it's beautiful its elegant how
 

00:17:13.110 --> 00:17:15.350 align:start position:0%
charming it's beautiful its elegant how
easy<00:17:13.680><c> it</c><00:17:13.920><c> is</c><00:17:14.010><c> to</c><00:17:14.160><c> understand</c><00:17:14.700><c> the</c><00:17:14.850><c> code</c><00:17:15.089><c> and</c>

00:17:15.350 --> 00:17:15.360 align:start position:0%
easy it is to understand the code and
 

00:17:15.360 --> 00:17:17.480 align:start position:0%
easy it is to understand the code and
Ruby<00:17:16.140><c> has</c><00:17:16.260><c> been</c><00:17:16.440><c> supporting</c><00:17:17.010><c> the</c><00:17:17.130><c> functional</c>

00:17:17.480 --> 00:17:17.490 align:start position:0%
Ruby has been supporting the functional
 

00:17:17.490 --> 00:17:19.160 align:start position:0%
Ruby has been supporting the functional
side<00:17:17.610><c> of</c><00:17:17.760><c> programming</c><00:17:18.240><c> as</c><00:17:18.390><c> much</c><00:17:19.020><c> as</c>

00:17:19.160 --> 00:17:19.170 align:start position:0%
side of programming as much as
 

00:17:19.170 --> 00:17:21.260 align:start position:0%
side of programming as much as
imperative<00:17:19.560><c> style</c><00:17:19.740><c> of</c><00:17:19.890><c> programming</c><00:17:20.060><c> from</c><00:17:21.060><c> day</c>

00:17:21.260 --> 00:17:21.270 align:start position:0%
imperative style of programming from day
 

00:17:21.270 --> 00:17:24.079 align:start position:0%
imperative style of programming from day
one<00:17:21.540><c> so</c><00:17:22.110><c> in</c><00:17:22.320><c> that</c><00:17:22.470><c> sense</c><00:17:22.770><c> Ruby</c><00:17:23.190><c> is</c><00:17:23.459><c> beings</c><00:17:23.940><c> been</c>

00:17:24.079 --> 00:17:24.089 align:start position:0%
one so in that sense Ruby is beings been
 

00:17:24.089 --> 00:17:26.360 align:start position:0%
one so in that sense Ruby is beings been
doing<00:17:24.330><c> what</c><00:17:24.480><c> Java</c><00:17:24.839><c> has</c><00:17:25.050><c> been</c><00:17:25.260><c> recently</c><00:17:26.100><c> doing</c>

00:17:26.360 --> 00:17:26.370 align:start position:0%
doing what Java has been recently doing
 

00:17:26.370 --> 00:17:28.370 align:start position:0%
doing what Java has been recently doing
providing<00:17:27.330><c> both</c><00:17:27.480><c> imperative</c><00:17:28.080><c> and</c><00:17:28.200><c> functional</c>

00:17:28.370 --> 00:17:28.380 align:start position:0%
providing both imperative and functional
 

00:17:28.380 --> 00:17:30.530 align:start position:0%
providing both imperative and functional
style<00:17:28.770><c> of</c><00:17:28.890><c> programming</c><00:17:29.040><c> well</c><00:17:30.030><c> let's</c><00:17:30.360><c> give</c><00:17:30.510><c> it</c>

00:17:30.530 --> 00:17:30.540 align:start position:0%
style of programming well let's give it
 

00:17:30.540 --> 00:17:35.030 align:start position:0%
style of programming well let's give it
a<00:17:30.660><c> try</c><00:17:30.840><c> so</c><00:17:31.620><c> numbers</c><00:17:32.130><c> dart</c><00:17:33.030><c> map</c><00:17:33.720><c> just</c><00:17:34.590><c> like</c><00:17:34.740><c> how</c>

00:17:35.030 --> 00:17:35.040 align:start position:0%
a try so numbers dart map just like how
 

00:17:35.040 --> 00:17:37.250 align:start position:0%
a try so numbers dart map just like how
we<00:17:35.100><c> used</c><00:17:35.520><c> a</c><00:17:35.760><c> map</c><00:17:36.150><c> function</c><00:17:36.510><c> right</c><00:17:36.900><c> here</c><00:17:36.960><c> for</c>

00:17:37.250 --> 00:17:37.260 align:start position:0%
we used a map function right here for
 

00:17:37.260 --> 00:17:39.650 align:start position:0%
we used a map function right here for
transforming<00:17:38.010><c> we</c><00:17:38.490><c> could</c><00:17:38.670><c> use</c><00:17:38.850><c> a</c><00:17:38.880><c> map</c><00:17:39.360><c> function</c>

00:17:39.650 --> 00:17:39.660 align:start position:0%
transforming we could use a map function
 

00:17:39.660 --> 00:17:41.810 align:start position:0%
transforming we could use a map function
oh<00:17:40.080><c> but</c><00:17:40.590><c> wait</c><00:17:40.740><c> a</c><00:17:40.800><c> minute</c><00:17:40.920><c> we</c><00:17:41.250><c> want</c><00:17:41.400><c> numbers</c>

00:17:41.810 --> 00:17:41.820 align:start position:0%
oh but wait a minute we want numbers
 

00:17:41.820 --> 00:17:44.900 align:start position:0%
oh but wait a minute we want numbers
greater<00:17:42.030><c> than</c><00:17:42.320><c> 50</c><00:17:43.320><c> isn't</c><00:17:43.680><c> it</c><00:17:43.830><c> so</c><00:17:44.340><c> we</c><00:17:44.490><c> could</c><00:17:44.640><c> say</c>

00:17:44.900 --> 00:17:44.910 align:start position:0%
greater than 50 isn't it so we could say
 

00:17:44.910 --> 00:17:46.820 align:start position:0%
greater than 50 isn't it so we could say
we<00:17:45.210><c> could</c><00:17:45.360><c> say</c><00:17:45.570><c> filter</c>

00:17:46.820 --> 00:17:46.830 align:start position:0%
we could say filter
 

00:17:46.830 --> 00:17:49.790 align:start position:0%
we could say filter
and<00:17:46.920><c> give</c><00:17:47.310><c> an</c><00:17:47.430><c> element</c><00:17:48.120><c> over</c><00:17:48.480><c> here</c><00:17:48.780><c> so</c><00:17:49.410><c> here</c><00:17:49.710><c> is</c>

00:17:49.790 --> 00:17:49.800 align:start position:0%
and give an element over here so here is
 

00:17:49.800 --> 00:17:52.040 align:start position:0%
and give an element over here so here is
an<00:17:49.950><c> element</c><00:17:50.280><c> this</c><00:17:50.400><c> is</c><00:17:50.490><c> Ruby</c><00:17:50.760><c> syntax</c><00:17:50.970><c> we</c><00:17:51.840><c> could</c>

00:17:52.040 --> 00:17:52.050 align:start position:0%
an element this is Ruby syntax we could
 

00:17:52.050 --> 00:17:55.070 align:start position:0%
an element this is Ruby syntax we could
say<00:17:52.290><c> a</c><00:17:52.650><c> greater</c><00:17:53.250><c> than</c><00:17:53.430><c> will</c><00:17:54.030><c> say</c><00:17:54.240><c> is</c><00:17:54.630><c> greater</c>

00:17:55.070 --> 00:17:55.080 align:start position:0%
say a greater than will say is greater
 

00:17:55.080 --> 00:17:58.610 align:start position:0%
say a greater than will say is greater
than<00:17:55.350><c> well</c><00:17:56.100><c> is</c><00:17:56.370><c> greater</c><00:17:56.940><c> than</c><00:17:57.180><c> in</c><00:17:57.960><c> in</c><00:17:58.470><c> this</c>

00:17:58.610 --> 00:17:58.620 align:start position:0%
than well is greater than in in this
 

00:17:58.620 --> 00:18:01.070 align:start position:0%
than well is greater than in in this
case<00:17:58.800><c> 50</c><00:17:59.550><c> and</c><00:18:00.150><c> we're</c><00:18:00.240><c> going</c><00:18:00.360><c> to</c><00:18:00.420><c> ask</c><00:18:00.630><c> if</c><00:18:00.930><c> it's</c>

00:18:01.070 --> 00:18:01.080 align:start position:0%
case 50 and we're going to ask if it's
 

00:18:01.080 --> 00:18:02.480 align:start position:0%
case 50 and we're going to ask if it's
greater<00:18:01.320><c> than</c><00:18:01.350><c> 50</c><00:18:01.770><c> for</c><00:18:01.950><c> this</c><00:18:02.100><c> particular</c>

00:18:02.480 --> 00:18:02.490 align:start position:0%
greater than 50 for this particular
 

00:18:02.490 --> 00:18:04.430 align:start position:0%
greater than 50 for this particular
element<00:18:02.760><c> so</c><00:18:03.540><c> we'll</c><00:18:03.690><c> go</c><00:18:03.780><c> ahead</c><00:18:03.810><c> and</c><00:18:03.960><c> write</c><00:18:04.200><c> that</c>

00:18:04.430 --> 00:18:04.440 align:start position:0%
element so we'll go ahead and write that
 

00:18:04.440 --> 00:18:06.380 align:start position:0%
element so we'll go ahead and write that
function<00:18:04.620><c> e</c><00:18:04.950><c> is</c><00:18:05.100><c> greater</c><00:18:05.490><c> than</c><00:18:05.640><c> 50</c><00:18:06.060><c> given</c><00:18:06.330><c> a</c>

00:18:06.380 --> 00:18:06.390 align:start position:0%
function e is greater than 50 given a
 

00:18:06.390 --> 00:18:09.200 align:start position:0%
function e is greater than 50 given a
number<00:18:06.660><c> n</c><00:18:06.930><c> I</c><00:18:07.260><c> want</c><00:18:07.890><c> to</c><00:18:07.950><c> simply</c><00:18:08.250><c> return</c><00:18:08.520><c> this</c>

00:18:09.200 --> 00:18:09.210 align:start position:0%
number n I want to simply return this
 

00:18:09.210 --> 00:18:11.960 align:start position:0%
number n I want to simply return this
value<00:18:09.600><c> will</c><00:18:09.720><c> say</c><00:18:09.900><c> return</c><00:18:10.260><c> n</c><00:18:10.680><c> is</c><00:18:11.370><c> greater</c><00:18:11.790><c> than</c>

00:18:11.960 --> 00:18:11.970 align:start position:0%
value will say return n is greater than
 

00:18:11.970 --> 00:18:12.680 align:start position:0%
value will say return n is greater than
50

00:18:12.680 --> 00:18:12.690 align:start position:0%
50
 

00:18:12.690 --> 00:18:15.170 align:start position:0%
50
how<00:18:12.930><c> charming</c><00:18:13.140><c> that's</c><00:18:13.590><c> great</c><00:18:13.920><c> then</c><00:18:14.670><c> we'd</c><00:18:14.910><c> say</c>

00:18:15.170 --> 00:18:15.180 align:start position:0%
how charming that's great then we'd say
 

00:18:15.180 --> 00:18:17.420 align:start position:0%
how charming that's great then we'd say
a<00:18:15.360><c> map</c><00:18:15.750><c> function</c><00:18:16.290><c> in</c><00:18:16.830><c> this</c><00:18:17.040><c> case</c><00:18:17.100><c> of</c><00:18:17.400><c> course</c>

00:18:17.420 --> 00:18:17.430 align:start position:0%
a map function in this case of course
 

00:18:17.430 --> 00:18:20.150 align:start position:0%
a map function in this case of course
given<00:18:17.970><c> an</c><00:18:18.060><c> element</c><00:18:18.660><c> we</c><00:18:18.810><c> will</c><00:18:18.930><c> say</c><00:18:19.200><c> we</c><00:18:19.860><c> want</c><00:18:20.100><c> to</c>

00:18:20.150 --> 00:18:20.160 align:start position:0%
given an element we will say we want to
 

00:18:20.160 --> 00:18:21.800 align:start position:0%
given an element we will say we want to
double<00:18:20.370><c> the</c><00:18:20.580><c> element</c><00:18:21.150><c> so</c><00:18:21.270><c> we'll</c><00:18:21.420><c> double</c><00:18:21.720><c> the</c>

00:18:21.800 --> 00:18:21.810 align:start position:0%
double the element so we'll double the
 

00:18:21.810 --> 00:18:23.600 align:start position:0%
double the element so we'll double the
element<00:18:22.140><c> right</c><00:18:22.350><c> off</c><00:18:22.500><c> the</c><00:18:22.620><c> back</c><00:18:22.830><c> so</c><00:18:23.430><c> this</c>

00:18:23.600 --> 00:18:23.610 align:start position:0%
element right off the back so this
 

00:18:23.610 --> 00:18:25.700 align:start position:0%
element right off the back so this
requires<00:18:23.760><c> us</c><00:18:24.150><c> to</c><00:18:24.360><c> write</c><00:18:24.630><c> a</c><00:18:24.840><c> double</c><00:18:25.320><c> function</c>

00:18:25.700 --> 00:18:25.710 align:start position:0%
requires us to write a double function
 

00:18:25.710 --> 00:18:28.160 align:start position:0%
requires us to write a double function
which<00:18:26.070><c> takes</c><00:18:26.340><c> a</c><00:18:26.520><c> number</c><00:18:26.550><c> n</c><00:18:27.120><c> and</c><00:18:27.720><c> all</c><00:18:27.840><c> that</c><00:18:28.050><c> it's</c>

00:18:28.160 --> 00:18:28.170 align:start position:0%
which takes a number n and all that it's
 

00:18:28.170 --> 00:18:30.590 align:start position:0%
which takes a number n and all that it's
going<00:18:28.320><c> to</c><00:18:28.410><c> do</c><00:18:28.530><c> is</c><00:18:28.710><c> return</c><00:18:28.980><c> n</c><00:18:29.220><c> times</c><00:18:29.490><c> 2</c><00:18:29.850><c> that's</c>

00:18:30.590 --> 00:18:30.600 align:start position:0%
going to do is return n times 2 that's
 

00:18:30.600 --> 00:18:33.230 align:start position:0%
going to do is return n times 2 that's
awesome<00:18:31.110><c> so</c><00:18:31.260><c> far</c><00:18:31.530><c> but</c><00:18:32.250><c> remember</c><00:18:32.820><c> all</c><00:18:33.060><c> I</c><00:18:33.090><c> don't</c>

00:18:33.230 --> 00:18:33.240 align:start position:0%
awesome so far but remember all I don't
 

00:18:33.240 --> 00:18:35.330 align:start position:0%
awesome so far but remember all I don't
I<00:18:33.540><c> don't</c><00:18:33.690><c> want</c><00:18:33.960><c> all</c><00:18:34.110><c> of</c><00:18:34.140><c> the</c><00:18:34.350><c> values</c><00:18:34.470><c> I</c><00:18:34.950><c> want</c>

00:18:35.330 --> 00:18:35.340 align:start position:0%
I don't want all of the values I want
 

00:18:35.340 --> 00:18:37.580 align:start position:0%
I don't want all of the values I want
just<00:18:35.520><c> the</c><00:18:35.610><c> first</c><00:18:35.910><c> value</c><00:18:36.360><c> and</c><00:18:36.780><c> we</c><00:18:37.350><c> will</c><00:18:37.440><c> of</c>

00:18:37.580 --> 00:18:37.590 align:start position:0%
just the first value and we will of
 

00:18:37.590 --> 00:18:39.320 align:start position:0%
just the first value and we will of
course<00:18:37.620><c> print</c><00:18:38.400><c> this</c><00:18:38.550><c> result</c><00:18:38.940><c> when</c><00:18:39.090><c> we</c><00:18:39.120><c> are</c>

00:18:39.320 --> 00:18:39.330 align:start position:0%
course print this result when we are
 

00:18:39.330 --> 00:18:41.690 align:start position:0%
course print this result when we are
done<00:18:39.540><c> right</c><00:18:39.900><c> here</c><00:18:40.290><c> so</c><00:18:40.740><c> let's</c><00:18:40.890><c> say</c><00:18:41.010><c> puts</c><00:18:41.400><c> and</c>

00:18:41.690 --> 00:18:41.700 align:start position:0%
done right here so let's say puts and
 

00:18:41.700 --> 00:18:44.870 align:start position:0%
done right here so let's say puts and
ask<00:18:42.150><c> it</c><00:18:42.360><c> to</c><00:18:42.390><c> print</c><00:18:43.110><c> the</c><00:18:43.260><c> result</c><00:18:43.620><c> so</c><00:18:44.250><c> let's</c><00:18:44.670><c> go</c>

00:18:44.870 --> 00:18:44.880 align:start position:0%
ask it to print the result so let's go
 

00:18:44.880 --> 00:18:46.520 align:start position:0%
ask it to print the result so let's go
ahead<00:18:44.940><c> and</c><00:18:45.150><c> try</c><00:18:45.360><c> this</c><00:18:45.420><c> my</c><00:18:45.690><c> number</c><00:18:45.750><c> 13</c><00:18:46.260><c> has</c><00:18:46.380><c> an</c>

00:18:46.520 --> 00:18:46.530 align:start position:0%
ahead and try this my number 13 has an
 

00:18:46.530 --> 00:18:48.350 align:start position:0%
ahead and try this my number 13 has an
error<00:18:46.680><c> we'll</c><00:18:46.950><c> fix</c><00:18:47.160><c> it</c><00:18:47.340><c> so</c><00:18:47.850><c> in</c><00:18:48.060><c> this</c><00:18:48.150><c> case</c>

00:18:48.350 --> 00:18:48.360 align:start position:0%
error we'll fix it so in this case
 

00:18:48.360 --> 00:18:50.390 align:start position:0%
error we'll fix it so in this case
numbers<00:18:48.930><c> in</c><00:18:49.350><c> this</c><00:18:49.560><c> case</c><00:18:49.770><c> of</c><00:18:49.950><c> course</c><00:18:50.130><c> we</c><00:18:50.250><c> gonna</c>

00:18:50.390 --> 00:18:50.400 align:start position:0%
numbers in this case of course we gonna
 

00:18:50.400 --> 00:18:53.030 align:start position:0%
numbers in this case of course we gonna
say<00:18:50.550><c> find</c><00:18:50.940><c> are</c><00:18:51.240><c> all</c><00:18:51.630><c> we're</c><00:18:52.290><c> gonna</c><00:18:52.410><c> ask</c><00:18:52.650><c> for</c>

00:18:53.030 --> 00:18:53.040 align:start position:0%
say find are all we're gonna ask for
 

00:18:53.040 --> 00:18:55.190 align:start position:0%
say find are all we're gonna ask for
every<00:18:53.340><c> single</c><00:18:53.580><c> value</c><00:18:53.880><c> and</c><00:18:54.420><c> then</c><00:18:54.750><c> double</c><00:18:55.110><c> it</c>

00:18:55.190 --> 00:18:55.200 align:start position:0%
every single value and then double it
 

00:18:55.200 --> 00:18:57.350 align:start position:0%
every single value and then double it
well<00:18:55.740><c> find</c><00:18:56.130><c> out</c><00:18:56.220><c> is</c><00:18:56.400><c> equal</c><00:18:56.520><c> into</c><00:18:56.790><c> our</c><00:18:56.880><c> filter</c>

00:18:57.350 --> 00:18:57.360 align:start position:0%
well find out is equal into our filter
 

00:18:57.360 --> 00:18:59.660 align:start position:0%
well find out is equal into our filter
right<00:18:57.690><c> here</c><00:18:57.750><c> in</c><00:18:58.020><c> Ruby</c><00:18:58.410><c> well</c><00:18:59.010><c> the</c><00:18:59.220><c> first</c><00:18:59.400><c> number</c>

00:18:59.660 --> 00:18:59.670 align:start position:0%
right here in Ruby well the first number
 

00:18:59.670 --> 00:19:02.510 align:start position:0%
right here in Ruby well the first number
that's<00:18:59.880><c> greater</c><00:19:00.060><c> than</c><00:19:00.300><c> 50</c><00:19:00.900><c> is</c><00:19:01.050><c> 54</c><00:19:01.620><c> so</c><00:19:02.280><c> the</c>

00:19:02.510 --> 00:19:02.520 align:start position:0%
that's greater than 50 is 54 so the
 

00:19:02.520 --> 00:19:05.390 align:start position:0%
that's greater than 50 is 54 so the
times<00:19:02.820><c> 2</c><00:19:03.060><c> is</c><00:19:03.240><c> 108</c><00:19:03.570><c> we</c><00:19:04.080><c> can</c><00:19:04.230><c> see</c><00:19:04.410><c> that</c><00:19:04.590><c> so</c><00:19:05.040><c> that's</c>

00:19:05.390 --> 00:19:05.400 align:start position:0%
times 2 is 108 we can see that so that's
 

00:19:05.400 --> 00:19:07.700 align:start position:0%
times 2 is 108 we can see that so that's
doing<00:19:05.700><c> the</c><00:19:05.820><c> work</c><00:19:05.970><c> but</c><00:19:06.870><c> remember</c><00:19:07.410><c> in</c><00:19:07.590><c> this</c>

00:19:07.700 --> 00:19:07.710 align:start position:0%
doing the work but remember in this
 

00:19:07.710 --> 00:19:11.120 align:start position:0%
doing the work but remember in this
example<00:19:08.130><c> we</c><00:19:08.940><c> really</c><00:19:09.300><c> wanted</c><00:19:09.690><c> the</c><00:19:09.870><c> first</c><00:19:10.230><c> value</c>

00:19:11.120 --> 00:19:11.130 align:start position:0%
example we really wanted the first value
 

00:19:11.130 --> 00:19:13.400 align:start position:0%
example we really wanted the first value
that<00:19:11.250><c> meet</c><00:19:11.460><c> just</c><00:19:11.640><c> meets</c><00:19:11.880><c> the</c><00:19:12.000><c> criteria</c><00:19:12.570><c> but</c>

00:19:13.400 --> 00:19:13.410 align:start position:0%
that meet just meets the criteria but
 

00:19:13.410 --> 00:19:16.040 align:start position:0%
that meet just meets the criteria but
how<00:19:13.590><c> much</c><00:19:13.740><c> work</c><00:19:14.010><c> did</c><00:19:14.220><c> Ruby</c><00:19:14.430><c> really</c><00:19:14.850><c> do</c><00:19:15.330><c> in</c><00:19:15.810><c> this</c>

00:19:16.040 --> 00:19:16.050 align:start position:0%
how much work did Ruby really do in this
 

00:19:16.050 --> 00:19:18.980 align:start position:0%
how much work did Ruby really do in this
particular<00:19:16.230><c> case</c><00:19:16.580><c> well</c><00:19:17.580><c> it</c><00:19:17.700><c> turns</c><00:19:17.970><c> out</c><00:19:18.270><c> ruby</c>

00:19:18.980 --> 00:19:18.990 align:start position:0%
particular case well it turns out ruby
 

00:19:18.990 --> 00:19:22.160 align:start position:0%
particular case well it turns out ruby
was<00:19:19.230><c> very</c><00:19:19.500><c> eager</c><00:19:20.010><c> it</c><00:19:20.430><c> did</c><00:19:20.700><c> a</c><00:19:20.730><c> lot</c><00:19:21.150><c> of</c><00:19:21.180><c> work</c><00:19:21.510><c> so</c>

00:19:22.160 --> 00:19:22.170 align:start position:0%
was very eager it did a lot of work so
 

00:19:22.170 --> 00:19:25.010 align:start position:0%
was very eager it did a lot of work so
if<00:19:22.410><c> you</c><00:19:22.530><c> go</c><00:19:22.770><c> over</c><00:19:23.100><c> here</c><00:19:23.130><c> and</c><00:19:23.600><c> print</c><00:19:24.600><c> if</c><00:19:24.990><c> you</c>

00:19:25.010 --> 00:19:25.020 align:start position:0%
if you go over here and print if you
 

00:19:25.020 --> 00:19:27.710 align:start position:0%
if you go over here and print if you
will<00:19:25.350><c> in</c><00:19:25.860><c> this</c><00:19:26.310><c> case</c><00:19:26.520><c> we'll</c><00:19:26.730><c> say</c><00:19:26.940><c> e</c><00:19:27.150><c> is</c><00:19:27.390><c> greater</c>

00:19:27.710 --> 00:19:27.720 align:start position:0%
will in this case we'll say e is greater
 

00:19:27.720 --> 00:19:29.990 align:start position:0%
will in this case we'll say e is greater
than<00:19:28.110><c> and</c><00:19:28.500><c> then</c><00:19:28.920><c> we'll</c><00:19:29.070><c> print</c><00:19:29.370><c> the</c><00:19:29.520><c> value</c><00:19:29.880><c> that</c>

00:19:29.990 --> 00:19:30.000 align:start position:0%
than and then we'll print the value that
 

00:19:30.000 --> 00:19:32.090 align:start position:0%
than and then we'll print the value that
we<00:19:30.150><c> are</c><00:19:30.210><c> asking</c><00:19:30.570><c> for</c><00:19:30.870><c> and</c><00:19:31.530><c> then</c><00:19:31.740><c> we'll</c><00:19:31.890><c> go</c><00:19:32.040><c> to</c>

00:19:32.090 --> 00:19:32.100 align:start position:0%
we are asking for and then we'll go to
 

00:19:32.100 --> 00:19:34.580 align:start position:0%
we are asking for and then we'll go to
the<00:19:32.280><c> double</c><00:19:32.760><c> and</c><00:19:32.970><c> then</c><00:19:33.210><c> ask</c><00:19:33.510><c> it</c><00:19:33.750><c> to</c><00:19:33.960><c> print</c><00:19:34.470><c> the</c>

00:19:34.580 --> 00:19:34.590 align:start position:0%
the double and then ask it to print the
 

00:19:34.590 --> 00:19:36.710 align:start position:0%
the double and then ask it to print the
result<00:19:34.950><c> of</c><00:19:35.160><c> double</c><00:19:35.700><c> and</c><00:19:36.030><c> then</c><00:19:36.570><c> of</c><00:19:36.690><c> course</c>

00:19:36.710 --> 00:19:36.720 align:start position:0%
result of double and then of course
 

00:19:36.720 --> 00:19:39.130 align:start position:0%
result of double and then of course
specify<00:19:37.560><c> what</c><00:19:38.190><c> the</c><00:19:38.370><c> value</c><00:19:38.820><c> is</c>

00:19:39.130 --> 00:19:39.140 align:start position:0%
specify what the value is
 

00:19:39.140 --> 00:19:42.560 align:start position:0%
specify what the value is
notice<00:19:40.140><c> all</c><00:19:40.320><c> the</c><00:19:40.430><c> processing</c><00:19:41.430><c> we</c><00:19:41.640><c> did</c><00:19:41.910><c> we</c>

00:19:42.560 --> 00:19:42.570 align:start position:0%
notice all the processing we did we
 

00:19:42.570 --> 00:19:45.050 align:start position:0%
notice all the processing we did we
computed<00:19:43.200><c> we</c><00:19:43.410><c> checked</c><00:19:43.770><c> if</c><00:19:44.010><c> every</c><00:19:44.670><c> single</c>

00:19:45.050 --> 00:19:45.060 align:start position:0%
computed we checked if every single
 

00:19:45.060 --> 00:19:47.150 align:start position:0%
computed we checked if every single
value<00:19:45.300><c> is</c><00:19:45.420><c> greater</c><00:19:45.690><c> than</c><00:19:45.780><c> 50</c><00:19:46.380><c> all</c><00:19:46.710><c> the</c><00:19:47.070><c> way</c>

00:19:47.150 --> 00:19:47.160 align:start position:0%
value is greater than 50 all the way
 

00:19:47.160 --> 00:19:49.670 align:start position:0%
value is greater than 50 all the way
from<00:19:47.340><c> the</c><00:19:47.460><c> one</c><00:19:47.670><c> to</c><00:19:47.910><c> the</c><00:19:47.940><c> end</c><00:19:48.180><c> 20</c><00:19:48.840><c> then</c><00:19:49.530><c> we</c>

00:19:49.670 --> 00:19:49.680 align:start position:0%
from the one to the end 20 then we
 

00:19:49.680 --> 00:19:51.710 align:start position:0%
from the one to the end 20 then we
doubled<00:19:50.220><c> all</c><00:19:50.550><c> the</c><00:19:50.700><c> values</c><00:19:50.970><c> greater</c><00:19:51.120><c> than</c><00:19:51.270><c> 50</c>

00:19:51.710 --> 00:19:51.720 align:start position:0%
doubled all the values greater than 50
 

00:19:51.720 --> 00:19:57.340 align:start position:0%
doubled all the values greater than 50
54<00:19:52.170><c> 61</c><00:19:52.770><c> 77</c><00:19:53.370><c> 98</c><00:19:53.790><c> and</c><00:19:54.230><c> finally</c><00:19:55.230><c> we</c><00:19:56.300><c> discarded</c>

00:19:57.340 --> 00:19:57.350 align:start position:0%
54 61 77 98 and finally we discarded
 

00:19:57.350 --> 00:20:00.470 align:start position:0%
54 61 77 98 and finally we discarded
everything<00:19:58.350><c> and</c><00:19:58.650><c> just</c><00:19:59.130><c> get</c><00:19:59.280><c> the</c><00:19:59.430><c> first</c><00:19:59.730><c> value</c>

00:20:00.470 --> 00:20:00.480 align:start position:0%
everything and just get the first value
 

00:20:00.480 --> 00:20:03.409 align:start position:0%
everything and just get the first value
what<00:20:00.990><c> a</c><00:20:01.020><c> waste</c><00:20:01.500><c> of</c><00:20:01.830><c> performance</c><00:20:02.460><c> nothing</c><00:20:03.330><c> is</c>

00:20:03.409 --> 00:20:03.419 align:start position:0%
what a waste of performance nothing is
 

00:20:03.419 --> 00:20:06.590 align:start position:0%
what a waste of performance nothing is
great<00:20:03.900><c> for</c><00:20:04.290><c> what</c><00:20:05.040><c> it</c><00:20:05.190><c> does</c><00:20:05.429><c> but</c><00:20:06.150><c> what</c><00:20:06.360><c> if</c><00:20:06.480><c> I'm</c>

00:20:06.590 --> 00:20:06.600 align:start position:0%
great for what it does but what if I'm
 

00:20:06.600 --> 00:20:09.320 align:start position:0%
great for what it does but what if I'm
dealing<00:20:06.780><c> with</c><00:20:07.169><c> a</c><00:20:07.380><c> large</c><00:20:07.860><c> amount</c><00:20:08.429><c> of</c><00:20:08.640><c> data</c><00:20:08.940><c> in</c>

00:20:09.320 --> 00:20:09.330 align:start position:0%
dealing with a large amount of data in
 

00:20:09.330 --> 00:20:11.060 align:start position:0%
dealing with a large amount of data in
some<00:20:09.900><c> projects</c><00:20:10.260><c> I'm</c><00:20:10.380><c> working</c><00:20:10.410><c> with</c><00:20:10.830><c> we</c><00:20:10.980><c> are</c>

00:20:11.060 --> 00:20:11.070 align:start position:0%
some projects I'm working with we are
 

00:20:11.070 --> 00:20:13.580 align:start position:0%
some projects I'm working with we are
dealing<00:20:11.340><c> with</c><00:20:11.419><c> literally</c><00:20:12.419><c> millions</c><00:20:13.169><c> and</c>

00:20:13.580 --> 00:20:13.590 align:start position:0%
dealing with literally millions and
 

00:20:13.590 --> 00:20:15.650 align:start position:0%
dealing with literally millions and
millions<00:20:13.890><c> of</c><00:20:14.070><c> data</c><00:20:14.280><c> this</c><00:20:15.000><c> would</c><00:20:15.150><c> not</c><00:20:15.360><c> work</c>

00:20:15.650 --> 00:20:15.660 align:start position:0%
millions of data this would not work
 

00:20:15.660 --> 00:20:18.500 align:start position:0%
millions of data this would not work
really<00:20:15.870><c> well</c><00:20:16.200><c> in</c><00:20:16.770><c> such</c><00:20:17.070><c> situations</c><00:20:17.730><c> isn't</c><00:20:18.240><c> it</c>

00:20:18.500 --> 00:20:18.510 align:start position:0%
really well in such situations isn't it
 

00:20:18.510 --> 00:20:21.950 align:start position:0%
really well in such situations isn't it
so<00:20:18.929><c> what</c><00:20:19.740><c> really</c><00:20:20.010><c> attracted</c><00:20:20.549><c> me</c><00:20:20.610><c> to</c><00:20:20.880><c> Java</c><00:20:21.270><c> 8</c><00:20:21.630><c> is</c>

00:20:21.950 --> 00:20:21.960 align:start position:0%
so what really attracted me to Java 8 is
 

00:20:21.960 --> 00:20:24.799 align:start position:0%
so what really attracted me to Java 8 is
not<00:20:22.679><c> the</c><00:20:22.919><c> fact</c><00:20:23.190><c> that</c><00:20:23.340><c> it</c><00:20:23.640><c> actually</c><00:20:23.850><c> has</c><00:20:24.299><c> the</c>

00:20:24.799 --> 00:20:24.809 align:start position:0%
not the fact that it actually has the
 

00:20:24.809 --> 00:20:26.659 align:start position:0%
not the fact that it actually has the
function<00:20:25.200><c> of</c><00:20:25.260><c> style</c><00:20:25.530><c> of</c><00:20:25.650><c> programming</c><00:20:26.100><c> in</c><00:20:26.490><c> all</c>

00:20:26.659 --> 00:20:26.669 align:start position:0%
function of style of programming in all
 

00:20:26.669 --> 00:20:29.690 align:start position:0%
function of style of programming in all
honesty<00:20:27.360><c> I</c><00:20:27.660><c> kind</c><00:20:28.350><c> of</c><00:20:28.410><c> discarded</c><00:20:29.010><c> what</c><00:20:29.220><c> Java</c><00:20:29.460><c> it</c>

00:20:29.690 --> 00:20:29.700 align:start position:0%
honesty I kind of discarded what Java it
 

00:20:29.700 --> 00:20:32.180 align:start position:0%
honesty I kind of discarded what Java it
provided<00:20:30.330><c> to</c><00:20:30.480><c> begin</c><00:20:30.809><c> with</c><00:20:30.990><c> because</c><00:20:31.740><c> I</c><00:20:31.950><c> said</c>

00:20:32.180 --> 00:20:32.190 align:start position:0%
provided to begin with because I said
 

00:20:32.190 --> 00:20:34.490 align:start position:0%
provided to begin with because I said
what's<00:20:32.490><c> the</c><00:20:32.580><c> big</c><00:20:32.730><c> deal</c><00:20:32.970><c> other</c><00:20:33.540><c> languages</c><00:20:34.350><c> have</c>

00:20:34.490 --> 00:20:34.500 align:start position:0%
what's the big deal other languages have
 

00:20:34.500 --> 00:20:37.010 align:start position:0%
what's the big deal other languages have
lambdas<00:20:35.010><c> Java</c><00:20:35.520><c> now</c><00:20:35.700><c> has</c><00:20:35.910><c> lambdas</c><00:20:36.360><c> why</c><00:20:36.840><c> should</c>

00:20:37.010 --> 00:20:37.020 align:start position:0%
lambdas Java now has lambdas why should
 

00:20:37.020 --> 00:20:40.490 align:start position:0%
lambdas Java now has lambdas why should
I<00:20:37.110><c> care</c><00:20:37.280><c> but</c><00:20:38.280><c> I</c><00:20:38.490><c> found</c><00:20:38.910><c> there's</c><00:20:39.809><c> a</c><00:20:39.900><c> lot</c><00:20:40.169><c> more</c>

00:20:40.490 --> 00:20:40.500 align:start position:0%
I care but I found there's a lot more
 

00:20:40.500 --> 00:20:43.700 align:start position:0%
I care but I found there's a lot more
than<00:20:40.830><c> lambdas</c><00:20:41.400><c> in</c><00:20:41.880><c> Java</c><00:20:42.600><c> 8</c><00:20:42.840><c> and</c><00:20:43.140><c> that's</c><00:20:43.559><c> what</c>

00:20:43.700 --> 00:20:43.710 align:start position:0%
than lambdas in Java 8 and that's what
 

00:20:43.710 --> 00:20:47.060 align:start position:0%
than lambdas in Java 8 and that's what
really<00:20:44.100><c> drew</c><00:20:44.610><c> me</c><00:20:44.640><c> towards</c><00:20:44.910><c> Java</c><00:20:45.570><c> 8</c><00:20:46.070><c> elegance</c>

00:20:47.060 --> 00:20:47.070 align:start position:0%
really drew me towards Java 8 elegance
 

00:20:47.070 --> 00:20:50.030 align:start position:0%
really drew me towards Java 8 elegance
is<00:20:47.309><c> very</c><00:20:47.669><c> useful</c><00:20:48.299><c> we</c><00:20:48.960><c> would</c><00:20:49.140><c> not</c><00:20:49.350><c> discard</c><00:20:49.830><c> them</c>

00:20:50.030 --> 00:20:50.040 align:start position:0%
is very useful we would not discard them
 

00:20:50.040 --> 00:20:52.400 align:start position:0%
is very useful we would not discard them
beautiful<00:20:50.760><c> code</c><00:20:50.940><c> is</c><00:20:51.150><c> great</c><00:20:51.450><c> code</c><00:20:52.169><c> that</c><00:20:52.320><c> is</c>

00:20:52.400 --> 00:20:52.410 align:start position:0%
beautiful code is great code that is
 

00:20:52.410 --> 00:20:53.990 align:start position:0%
beautiful code is great code that is
expressive<00:20:52.919><c> code</c><00:20:53.400><c> that</c><00:20:53.520><c> is</c><00:20:53.610><c> easier</c><00:20:53.940><c> to</c>

00:20:53.990 --> 00:20:54.000 align:start position:0%
expressive code that is easier to
 

00:20:54.000 --> 00:20:55.789 align:start position:0%
expressive code that is easier to
communicate<00:20:54.240><c> with</c><00:20:54.780><c> awesome</c><00:20:55.350><c> that's</c><00:20:55.559><c> great</c>

00:20:55.789 --> 00:20:55.799 align:start position:0%
communicate with awesome that's great
 

00:20:55.799 --> 00:20:59.720 align:start position:0%
communicate with awesome that's great
but<00:20:56.690><c> performance</c><00:20:57.690><c> is</c><00:20:57.929><c> critical</c><00:20:58.770><c> give</c><00:20:59.490><c> me</c><00:20:59.549><c> four</c>

00:20:59.720 --> 00:20:59.730 align:start position:0%
but performance is critical give me four
 

00:20:59.730 --> 00:21:01.370 align:start position:0%
but performance is critical give me four
famines<00:21:00.090><c> or</c><00:21:00.179><c> give</c><00:21:00.330><c> me</c><00:21:00.419><c> death</c><00:21:00.450><c> is</c><00:21:00.870><c> probably</c><00:21:01.200><c> a</c>

00:21:01.370 --> 00:21:01.380 align:start position:0%
famines or give me death is probably a
 

00:21:01.380 --> 00:21:04.400 align:start position:0%
famines or give me death is probably a
slogan<00:21:01.650><c> we</c><00:21:01.919><c> can</c><00:21:02.070><c> all</c><00:21:02.190><c> say</c><00:21:02.460><c> so</c><00:21:03.059><c> elegance</c><00:21:03.929><c> in</c><00:21:04.200><c> the</c>

00:21:04.400 --> 00:21:04.410 align:start position:0%
slogan we can all say so elegance in the
 

00:21:04.410 --> 00:21:07.220 align:start position:0%
slogan we can all say so elegance in the
admins<00:21:04.799><c> of</c><00:21:04.860><c> performance</c><00:21:05.549><c> is</c><00:21:05.790><c> not</c><00:21:06.570><c> gonna</c><00:21:06.809><c> scale</c>

00:21:07.220 --> 00:21:07.230 align:start position:0%
admins of performance is not gonna scale
 

00:21:07.230 --> 00:21:10.850 align:start position:0%
admins of performance is not gonna scale
really<00:21:07.530><c> well</c><00:21:07.710><c> so</c><00:21:08.580><c> what</c><00:21:09.179><c> gives</c><00:21:09.450><c> what</c><00:21:09.900><c> we</c><00:21:10.080><c> do</c><00:21:10.320><c> are</c>

00:21:10.850 --> 00:21:10.860 align:start position:0%
really well so what gives what we do are
 

00:21:10.860 --> 00:21:13.070 align:start position:0%
really well so what gives what we do are
we<00:21:11.309><c> doomed</c><00:21:11.549><c> with</c><00:21:11.970><c> this</c><00:21:12.150><c> kind</c><00:21:12.360><c> of</c><00:21:12.450><c> programming</c>

00:21:13.070 --> 00:21:13.080 align:start position:0%
we doomed with this kind of programming
 

00:21:13.080 --> 00:21:14.690 align:start position:0%
we doomed with this kind of programming
then<00:21:13.320><c> where</c><00:21:13.950><c> we</c><00:21:14.130><c> can</c><00:21:14.250><c> have</c><00:21:14.429><c> either</c>

00:21:14.690 --> 00:21:14.700 align:start position:0%
then where we can have either
 

00:21:14.700 --> 00:21:17.750 align:start position:0%
then where we can have either
performance<00:21:15.419><c> or</c><00:21:15.750><c> we</c><00:21:16.350><c> can</c><00:21:16.500><c> have</c><00:21:16.679><c> elegance</c><00:21:17.250><c> but</c>

00:21:17.750 --> 00:21:17.760 align:start position:0%
performance or we can have elegance but
 

00:21:17.760 --> 00:21:20.210 align:start position:0%
performance or we can have elegance but
not<00:21:18.000><c> both</c><00:21:18.299><c> well</c><00:21:19.049><c> it</c><00:21:19.140><c> turns</c><00:21:19.350><c> out</c><00:21:19.650><c> that's</c><00:21:20.070><c> not</c>

00:21:20.210 --> 00:21:20.220 align:start position:0%
not both well it turns out that's not
 

00:21:20.220 --> 00:21:21.049 align:start position:0%
not both well it turns out that's not
entirely<00:21:20.640><c> true</c>

00:21:21.049 --> 00:21:21.059 align:start position:0%
entirely true
 

00:21:21.059 --> 00:21:23.180 align:start position:0%
entirely true
let's<00:21:21.929><c> look</c><00:21:22.169><c> at</c><00:21:22.350><c> other</c><00:21:22.470><c> languages</c><00:21:22.980><c> to</c><00:21:23.160><c> learn</c>

00:21:23.180 --> 00:21:23.190 align:start position:0%
let's look at other languages to learn
 

00:21:23.190 --> 00:21:25.730 align:start position:0%
let's look at other languages to learn
from<00:21:23.730><c> let's</c><00:21:24.419><c> turn</c><00:21:24.630><c> to</c><00:21:24.780><c> a</c><00:21:24.870><c> truly</c><00:21:25.200><c> functional</c>

00:21:25.730 --> 00:21:25.740 align:start position:0%
from let's turn to a truly functional
 

00:21:25.740 --> 00:21:28.789 align:start position:0%
from let's turn to a truly functional
programming<00:21:26.010><c> language</c><00:21:26.570><c> Haskell</c><00:21:27.570><c> I</c><00:21:27.799><c> really</c>

00:21:28.789 --> 00:21:28.799 align:start position:0%
programming language Haskell I really
 

00:21:28.799 --> 00:21:31.039 align:start position:0%
programming language Haskell I really
love<00:21:29.010><c> Haskell</c><00:21:29.490><c> for</c><00:21:29.520><c> what</c><00:21:29.850><c> it</c><00:21:29.970><c> does</c><00:21:30.179><c> let's</c><00:21:30.840><c> take</c>

00:21:31.039 --> 00:21:31.049 align:start position:0%
love Haskell for what it does let's take
 

00:21:31.049 --> 00:21:33.980 align:start position:0%
love Haskell for what it does let's take
a<00:21:31.080><c> look</c><00:21:31.260><c> at</c><00:21:31.350><c> Haskell</c><00:21:31.530><c> really</c><00:21:32.429><c> quickly</c><00:21:32.880><c> if</c><00:21:33.510><c> you</c>

00:21:33.980 --> 00:21:33.990 align:start position:0%
a look at Haskell really quickly if you
 

00:21:33.990 --> 00:21:36.260 align:start position:0%
a look at Haskell really quickly if you
look<00:21:34.350><c> at</c><00:21:34.470><c> Haskell</c><00:21:34.650><c> right</c><00:21:35.220><c> here</c><00:21:35.549><c> I'm</c><00:21:36.059><c> gonna</c>

00:21:36.260 --> 00:21:36.270 align:start position:0%
look at Haskell right here I'm gonna
 

00:21:36.270 --> 00:21:37.730 align:start position:0%
look at Haskell right here I'm gonna
write<00:21:36.510><c> a</c><00:21:36.540><c> method</c><00:21:36.809><c> call</c><00:21:37.169><c> a</c><00:21:37.380><c> function</c><00:21:37.710><c> called</c>

00:21:37.730 --> 00:21:37.740 align:start position:0%
write a method call a function called
 

00:21:37.740 --> 00:21:41.600 align:start position:0%
write a method call a function called
add<00:21:38.100><c> a</c><00:21:38.580><c> B</c><00:21:38.790><c> equals</c><00:21:39.360><c> a</c><00:21:39.570><c> plus</c><00:21:39.750><c> B</c><00:21:40.080><c> so</c><00:21:40.320><c> in</c><00:21:41.160><c> this</c><00:21:41.309><c> case</c>

00:21:41.600 --> 00:21:41.610 align:start position:0%
add a B equals a plus B so in this case
 

00:21:41.610 --> 00:21:44.000 align:start position:0%
add a B equals a plus B so in this case
it's<00:21:42.150><c> gonna</c><00:21:42.390><c> return</c><00:21:42.570><c> the</c><00:21:42.960><c> result</c><00:21:43.410><c> total</c><00:21:43.679><c> of</c><00:21:43.770><c> a</c>

00:21:44.000 --> 00:21:44.010 align:start position:0%
it's gonna return the result total of a
 

00:21:44.010 --> 00:21:47.270 align:start position:0%
it's gonna return the result total of a
plus<00:21:44.309><c> B</c><00:21:44.720><c> but</c><00:21:45.720><c> these</c><00:21:46.230><c> functions</c><00:21:46.799><c> and</c><00:21:46.980><c> hostel</c>

00:21:47.270 --> 00:21:47.280 align:start position:0%
plus B but these functions and hostel
 

00:21:47.280 --> 00:21:50.299 align:start position:0%
plus B but these functions and hostel
are<00:21:47.370><c> known</c><00:21:47.580><c> as</c><00:21:47.820><c> pure</c><00:21:48.510><c> functions</c><00:21:49.169><c> now</c><00:21:49.950><c> we</c><00:21:50.010><c> write</c>

00:21:50.299 --> 00:21:50.309 align:start position:0%
are known as pure functions now we write
 

00:21:50.309 --> 00:21:52.700 align:start position:0%
are known as pure functions now we write
an<00:21:50.460><c> evaluate</c><00:21:51.090><c> function</c><00:21:51.570><c> when</c><00:21:52.200><c> it</c><00:21:52.320><c> takes</c><00:21:52.530><c> a</c>

00:21:52.700 --> 00:21:52.710 align:start position:0%
an evaluate function when it takes a
 

00:21:52.710 --> 00:21:55.520 align:start position:0%
an evaluate function when it takes a
value<00:21:53.190><c> and</c><00:21:53.340><c> returns</c><00:21:53.700><c> a</c><00:21:53.880><c> value</c><00:21:54.030><c> and</c><00:21:54.960><c> of</c><00:21:55.260><c> course</c>

00:21:55.520 --> 00:21:55.530 align:start position:0%
value and returns a value and of course
 

00:21:55.530 --> 00:21:57.110 align:start position:0%
value and returns a value and of course
I'm<00:21:55.770><c> gonna</c><00:21:55.919><c> write</c><00:21:56.100><c> a</c><00:21:56.130><c> main</c><00:21:56.370><c> function</c><00:21:56.910><c> which</c>

00:21:57.110 --> 00:21:57.120 align:start position:0%
I'm gonna write a main function which
 

00:21:57.120 --> 00:21:58.010 align:start position:0%
I'm gonna write a main function which
has<00:21:57.299><c> a</c><00:21:57.330><c> side-effect</c>

00:21:58.010 --> 00:21:58.020 align:start position:0%
has a side-effect
 

00:21:58.020 --> 00:22:00.169 align:start position:0%
has a side-effect
I<00:21:58.049><c> put</c><00:21:58.260><c> an</c><00:21:58.350><c> equal</c><00:21:58.770><c> right</c><00:21:58.980><c> there</c><00:21:59.580><c> and</c><00:21:59.940><c> then</c><00:22:00.059><c> I'm</c>

00:22:00.169 --> 00:22:00.179 align:start position:0%
I put an equal right there and then I'm
 

00:22:00.179 --> 00:22:03.230 align:start position:0%
I put an equal right there and then I'm
gonna<00:22:00.330><c> say</c><00:22:00.600><c> rent</c><00:22:01.260><c> and</c><00:22:01.650><c> the</c><00:22:02.250><c> print</c><00:22:02.580><c> is</c><00:22:02.760><c> going</c><00:22:03.030><c> to</c>

00:22:03.230 --> 00:22:03.240 align:start position:0%
gonna say rent and the print is going to
 

00:22:03.240 --> 00:22:06.200 align:start position:0%
gonna say rent and the print is going to
print<00:22:03.570><c> evaluate</c><00:22:04.440><c> let's</c><00:22:05.130><c> go</c><00:22:05.190><c> to</c><00:22:05.250><c> print</c><00:22:05.610><c> add</c><00:22:05.760><c> one</c>

00:22:06.200 --> 00:22:06.210 align:start position:0%
print evaluate let's go to print add one
 

00:22:06.210 --> 00:22:08.180 align:start position:0%
print evaluate let's go to print add one
and<00:22:06.419><c> three</c><00:22:06.660><c> what</c><00:22:07.200><c> I</c><00:22:07.230><c> run</c><00:22:07.500><c> this</c><00:22:07.679><c> of</c><00:22:07.830><c> course</c><00:22:07.860><c> it</c>

00:22:08.180 --> 00:22:08.190 align:start position:0%
and three what I run this of course it
 

00:22:08.190 --> 00:22:11.960 align:start position:0%
and three what I run this of course it
says<00:22:08.370><c> four</c><00:22:08.880><c> however</c><00:22:09.840><c> in</c><00:22:10.260><c> this</c><00:22:10.380><c> example</c><00:22:10.850><c> I</c><00:22:11.850><c> have</c>

00:22:11.960 --> 00:22:11.970 align:start position:0%
says four however in this example I have
 

00:22:11.970 --> 00:22:14.120 align:start position:0%
says four however in this example I have
still<00:22:12.390><c> had</c><00:22:12.540><c> to</c><00:22:12.690><c> do</c><00:22:12.780><c> all</c><00:22:12.990><c> the</c><00:22:13.140><c> work</c>

00:22:14.120 --> 00:22:14.130 align:start position:0%
still had to do all the work
 

00:22:14.130 --> 00:22:17.150 align:start position:0%
still had to do all the work
unlike<00:22:15.000><c> a</c><00:22:15.030><c> lot</c><00:22:15.300><c> of</c><00:22:15.330><c> other</c><00:22:15.540><c> languages</c><00:22:16.160><c> applies</c>

00:22:17.150 --> 00:22:17.160 align:start position:0%
unlike a lot of other languages applies
 

00:22:17.160 --> 00:22:21.050 align:start position:0%
unlike a lot of other languages applies
what<00:22:17.640><c> is</c><00:22:17.760><c> called</c><00:22:18.030><c> by</c><00:22:18.570><c> normal</c><00:22:19.350><c> order</c><00:22:19.800><c> while</c><00:22:20.640><c> a</c>

00:22:21.050 --> 00:22:21.060 align:start position:0%
what is called by normal order while a
 

00:22:21.060 --> 00:22:25.760 align:start position:0%
what is called by normal order while a
lot<00:22:21.480><c> of</c><00:22:22.010><c> of</c><00:22:23.010><c> other</c><00:22:23.520><c> languages</c><00:22:24.420><c> are</c><00:22:24.770><c> languages</c>

00:22:25.760 --> 00:22:25.770 align:start position:0%
lot of of other languages are languages
 

00:22:25.770 --> 00:22:28.510 align:start position:0%
lot of of other languages are languages
including<00:22:26.460><c> Java</c><00:22:26.730><c> use</c><00:22:27.660><c> what</c><00:22:28.080><c> is</c><00:22:28.200><c> called</c>

00:22:28.510 --> 00:22:28.520 align:start position:0%
including Java use what is called
 

00:22:28.520 --> 00:22:31.400 align:start position:0%
including Java use what is called
applicative<00:22:29.520><c> order</c><00:22:29.810><c> so</c><00:22:30.810><c> what</c><00:22:30.990><c> in</c><00:22:31.080><c> the</c><00:22:31.170><c> world</c>

00:22:31.400 --> 00:22:31.410 align:start position:0%
applicative order so what in the world
 

00:22:31.410 --> 00:22:33.100 align:start position:0%
applicative order so what in the world
is<00:22:31.620><c> the</c><00:22:31.920><c> difference</c><00:22:32.250><c> between</c><00:22:32.280><c> those</c><00:22:32.640><c> two</c>

00:22:33.100 --> 00:22:33.110 align:start position:0%
is the difference between those two
 

00:22:33.110 --> 00:22:36.560 align:start position:0%
is the difference between those two
normal<00:22:34.110><c> order</c><00:22:34.500><c> is</c><00:22:35.280><c> quite</c><00:22:35.580><c> abnormal</c><00:22:35.730><c> as</c><00:22:36.420><c> you</c>

00:22:36.560 --> 00:22:36.570 align:start position:0%
normal order is quite abnormal as you
 

00:22:36.570 --> 00:22:38.480 align:start position:0%
normal order is quite abnormal as you
can<00:22:36.720><c> see</c><00:22:36.900><c> not</c><00:22:37.200><c> a</c><00:22:37.260><c> lot</c><00:22:37.620><c> of</c><00:22:37.650><c> languages</c><00:22:38.100><c> do</c><00:22:38.250><c> this</c>

00:22:38.480 --> 00:22:38.490 align:start position:0%
can see not a lot of languages do this
 

00:22:38.490 --> 00:22:40.820 align:start position:0%
can see not a lot of languages do this
is<00:22:39.210><c> the</c><00:22:39.540><c> evaluation</c><00:22:39.750><c> of</c><00:22:40.230><c> the</c><00:22:40.320><c> function</c><00:22:40.470><c> is</c>

00:22:40.820 --> 00:22:40.830 align:start position:0%
is the evaluation of the function is
 

00:22:40.830 --> 00:22:43.580 align:start position:0%
is the evaluation of the function is
postponed<00:22:41.430><c> untilled</c><00:22:42.030><c> the</c><00:22:42.810><c> value</c><00:22:43.350><c> of</c><00:22:43.500><c> that</c>

00:22:43.580 --> 00:22:43.590 align:start position:0%
postponed untilled the value of that
 

00:22:43.590 --> 00:22:46.370 align:start position:0%
postponed untilled the value of that
evaluation<00:22:44.070><c> is</c><00:22:44.310><c> actually</c><00:22:44.940><c> needed</c><00:22:45.210><c> in</c><00:22:46.080><c> this</c>

00:22:46.370 --> 00:22:46.380 align:start position:0%
evaluation is actually needed in this
 

00:22:46.380 --> 00:22:48.170 align:start position:0%
evaluation is actually needed in this
example<00:22:46.770><c> ad</c><00:22:47.100><c> is</c><00:22:47.370><c> not</c><00:22:47.580><c> going</c><00:22:47.790><c> to</c><00:22:47.850><c> be</c><00:22:47.940><c> called</c>

00:22:48.170 --> 00:22:48.180 align:start position:0%
example ad is not going to be called
 

00:22:48.180 --> 00:22:51.440 align:start position:0%
example ad is not going to be called
until<00:22:48.630><c> we</c><00:22:48.750><c> step</c><00:22:48.960><c> in</c><00:22:49.110><c> to</c><00:22:49.230><c> evaluate</c><00:22:49.700><c> so</c><00:22:50.700><c> if</c><00:22:51.030><c> ad</c><00:22:51.270><c> is</c>

00:22:51.440 --> 00:22:51.450 align:start position:0%
until we step in to evaluate so if ad is
 

00:22:51.450 --> 00:22:53.600 align:start position:0%
until we step in to evaluate so if ad is
not<00:22:51.480><c> needed</c><00:22:52.050><c> at</c><00:22:52.170><c> all</c><00:22:52.320><c> it</c><00:22:53.070><c> would</c><00:22:53.280><c> never</c><00:22:53.430><c> get</c>

00:22:53.600 --> 00:22:53.610 align:start position:0%
not needed at all it would never get
 

00:22:53.610 --> 00:22:56.300 align:start position:0%
not needed at all it would never get
executed<00:22:54.120><c> let's</c><00:22:54.870><c> prove</c><00:22:55.170><c> this</c><00:22:55.470><c> in</c><00:22:56.010><c> this</c><00:22:56.130><c> case</c>

00:22:56.300 --> 00:22:56.310 align:start position:0%
executed let's prove this in this case
 

00:22:56.310 --> 00:22:58.460 align:start position:0%
executed let's prove this in this case
I'm<00:22:56.460><c> gonna</c><00:22:56.640><c> show</c><00:22:56.910><c> that</c><00:22:57.660><c> ad</c><00:22:57.870><c> is</c><00:22:58.020><c> going</c><00:22:58.260><c> to</c><00:22:58.380><c> be</c>

00:22:58.460 --> 00:22:58.470 align:start position:0%
I'm gonna show that ad is going to be
 

00:22:58.470 --> 00:23:01.340 align:start position:0%
I'm gonna show that ad is going to be
actually<00:22:59.040><c> called</c><00:22:59.370><c> well</c><00:23:00.180><c> I</c><00:23:00.420><c> can't</c><00:23:00.900><c> put</c><00:23:01.050><c> a</c><00:23:01.080><c> print</c>

00:23:01.340 --> 00:23:01.350 align:start position:0%
actually called well I can't put a print
 

00:23:01.350 --> 00:23:02.990 align:start position:0%
actually called well I can't put a print
statement<00:23:01.590><c> in</c><00:23:01.920><c> there</c><00:23:02.070><c> because</c><00:23:02.280><c> prints</c><00:23:02.790><c> are</c>

00:23:02.990 --> 00:23:03.000 align:start position:0%
statement in there because prints are
 

00:23:03.000 --> 00:23:05.210 align:start position:0%
statement in there because prints are
side<00:23:03.540><c> effects</c><00:23:03.900><c> so</c><00:23:04.560><c> what</c><00:23:04.710><c> are</c><00:23:04.770><c> we</c><00:23:04.830><c> gonna</c><00:23:04.980><c> do</c>

00:23:05.210 --> 00:23:05.220 align:start position:0%
side effects so what are we gonna do
 

00:23:05.220 --> 00:23:07.160 align:start position:0%
side effects so what are we gonna do
here<00:23:05.520><c> well</c><00:23:06.150><c> the</c><00:23:06.450><c> way</c><00:23:06.570><c> we'll</c><00:23:06.810><c> work</c><00:23:06.990><c> through</c>

00:23:07.160 --> 00:23:07.170 align:start position:0%
here well the way we'll work through
 

00:23:07.170 --> 00:23:09.530 align:start position:0%
here well the way we'll work through
this<00:23:07.410><c> is</c><00:23:07.650><c> to</c><00:23:07.860><c> bring</c><00:23:08.100><c> up</c><00:23:08.220><c> the</c><00:23:08.340><c> GHC</c><00:23:08.820><c> I</c><00:23:08.850><c> the</c>

00:23:09.530 --> 00:23:09.540 align:start position:0%
this is to bring up the GHC I the
 

00:23:09.540 --> 00:23:11.780 align:start position:0%
this is to bring up the GHC I the
compiler<00:23:10.140><c> and</c><00:23:10.920><c> I'm</c><00:23:11.010><c> gonna</c><00:23:11.190><c> load</c><00:23:11.430><c> up</c><00:23:11.460><c> the</c>

00:23:11.780 --> 00:23:11.790 align:start position:0%
compiler and I'm gonna load up the
 

00:23:11.790 --> 00:23:14.510 align:start position:0%
compiler and I'm gonna load up the
Haskell<00:23:12.660><c> file</c><00:23:12.900><c> into</c><00:23:13.290><c> it</c><00:23:13.470><c> I'm</c><00:23:14.100><c> gonna</c><00:23:14.310><c> put</c><00:23:14.490><c> a</c>

00:23:14.510 --> 00:23:14.520 align:start position:0%
Haskell file into it I'm gonna put a
 

00:23:14.520 --> 00:23:16.850 align:start position:0%
Haskell file into it I'm gonna put a
breakpoint<00:23:14.910><c> on</c><00:23:15.420><c> line</c><00:23:15.540><c> number</c><00:23:15.960><c> one</c><00:23:16.290><c> character</c>

00:23:16.850 --> 00:23:16.860 align:start position:0%
breakpoint on line number one character
 

00:23:16.860 --> 00:23:20.330 align:start position:0%
breakpoint on line number one character
16<00:23:17.340><c> and</c><00:23:18.210><c> I'm</c><00:23:18.300><c> gonna</c><00:23:18.420><c> ask</c><00:23:18.660><c> me</c><00:23:19.170><c> to</c><00:23:19.410><c> be</c><00:23:19.590><c> evaluated</c>

00:23:20.330 --> 00:23:20.340 align:start position:0%
16 and I'm gonna ask me to be evaluated
 

00:23:20.340 --> 00:23:24.350 align:start position:0%
16 and I'm gonna ask me to be evaluated
notice<00:23:21.270><c> it</c><00:23:21.450><c> stopped</c><00:23:21.930><c> on</c><00:23:22.530><c> line</c><00:23:22.950><c> number</c><00:23:23.070><c> 1</c><00:23:23.520><c> when</c>

00:23:24.350 --> 00:23:24.360 align:start position:0%
notice it stopped on line number 1 when
 

00:23:24.360 --> 00:23:27.020 align:start position:0%
notice it stopped on line number 1 when
I<00:23:24.390><c> say</c><00:23:24.690><c> continue</c><00:23:25.560><c> now</c><00:23:25.950><c> you</c><00:23:26.550><c> can</c><00:23:26.760><c> see</c><00:23:26.910><c> it</c>

00:23:27.020 --> 00:23:27.030 align:start position:0%
I say continue now you can see it
 

00:23:27.030 --> 00:23:29.450 align:start position:0%
I say continue now you can see it
produce<00:23:27.360><c> the</c><00:23:27.510><c> result</c><00:23:27.780><c> of</c><00:23:27.930><c> 4</c><00:23:28.200><c> so</c><00:23:28.890><c> I</c><00:23:28.920><c> just</c><00:23:29.160><c> proved</c>

00:23:29.450 --> 00:23:29.460 align:start position:0%
produce the result of 4 so I just proved
 

00:23:29.460 --> 00:23:32.300 align:start position:0%
produce the result of 4 so I just proved
that<00:23:29.490><c> it</c><00:23:29.910><c> executed</c><00:23:30.570><c> the</c><00:23:30.660><c> add</c><00:23:30.870><c> function</c><00:23:31.310><c> ignore</c>

00:23:32.300 --> 00:23:32.310 align:start position:0%
that it executed the add function ignore
 

00:23:32.310 --> 00:23:34.610 align:start position:0%
that it executed the add function ignore
that<00:23:32.520><c> we'll</c><00:23:32.700><c> come</c><00:23:32.850><c> back</c><00:23:33.030><c> to</c><00:23:33.210><c> it</c><00:23:33.360><c> now</c><00:23:34.200><c> let's</c><00:23:34.470><c> go</c>

00:23:34.610 --> 00:23:34.620 align:start position:0%
that we'll come back to it now let's go
 

00:23:34.620 --> 00:23:36.920 align:start position:0%
that we'll come back to it now let's go
back<00:23:34.800><c> to</c><00:23:34.830><c> the</c><00:23:35.010><c> score</c><00:23:35.250><c> and</c><00:23:35.490><c> simply</c><00:23:35.910><c> return</c><00:23:36.330><c> at</c>

00:23:36.920 --> 00:23:36.930 align:start position:0%
back to the score and simply return at
 

00:23:36.930 --> 00:23:39.830 align:start position:0%
back to the score and simply return at
42<00:23:37.680><c> now</c><00:23:38.640><c> when</c><00:23:38.850><c> I</c><00:23:38.880><c> run</c><00:23:39.060><c> the</c><00:23:39.210><c> code</c><00:23:39.390><c> it</c><00:23:39.510><c> produced</c>

00:23:39.830 --> 00:23:39.840 align:start position:0%
42 now when I run the code it produced
 

00:23:39.840 --> 00:23:43.190 align:start position:0%
42 now when I run the code it produced
42<00:23:40.290><c> but</c><00:23:40.980><c> how</c><00:23:41.280><c> has</c><00:23:41.580><c> still</c><00:23:41.760><c> is</c><00:23:41.850><c> smart</c><00:23:42.240><c> a</c><00:23:42.450><c> normal</c>

00:23:43.190 --> 00:23:43.200 align:start position:0%
42 but how has still is smart a normal
 

00:23:43.200 --> 00:23:45.770 align:start position:0%
42 but how has still is smart a normal
order<00:23:43.500><c> it</c><00:23:44.160><c> says</c><00:23:44.430><c> I</c><00:23:44.910><c> don't</c><00:23:45.210><c> have</c><00:23:45.390><c> to</c><00:23:45.630><c> evaluate</c>

00:23:45.770 --> 00:23:45.780 align:start position:0%
order it says I don't have to evaluate
 

00:23:45.780 --> 00:23:48.560 align:start position:0%
order it says I don't have to evaluate
ad<00:23:46.200><c> after</c><00:23:46.770><c> all</c><00:23:46.950><c> because</c><00:23:47.910><c> you're</c><00:23:48.030><c> never</c><00:23:48.180><c> using</c>

00:23:48.560 --> 00:23:48.570 align:start position:0%
ad after all because you're never using
 

00:23:48.570 --> 00:23:51.050 align:start position:0%
ad after all because you're never using
the<00:23:48.660><c> result</c><00:23:49.080><c> of</c><00:23:49.290><c> ad</c><00:23:49.500><c> that's</c><00:23:50.340><c> only</c><00:23:50.550><c> possible</c>

00:23:51.050 --> 00:23:51.060 align:start position:0%
the result of ad that's only possible
 

00:23:51.060 --> 00:23:52.640 align:start position:0%
the result of ad that's only possible
when<00:23:51.180><c> functions</c><00:23:51.630><c> are</c><00:23:51.750><c> pure</c><00:23:52.080><c> I'll</c><00:23:52.410><c> talk</c><00:23:52.620><c> about</c>

00:23:52.640 --> 00:23:52.650 align:start position:0%
when functions are pure I'll talk about
 

00:23:52.650 --> 00:23:54.980 align:start position:0%
when functions are pure I'll talk about
that<00:23:52.950><c> in</c><00:23:53.010><c> a</c><00:23:53.190><c> minute</c><00:23:53.310><c> so</c><00:23:54.090><c> because</c><00:23:54.450><c> of</c><00:23:54.630><c> that</c><00:23:54.660><c> ad</c>

00:23:54.980 --> 00:23:54.990 align:start position:0%
that in a minute so because of that ad
 

00:23:54.990 --> 00:23:57.500 align:start position:0%
that in a minute so because of that ad
is<00:23:55.170><c> never</c><00:23:55.440><c> evaluated</c><00:23:55.710><c> in</c><00:23:56.250><c> this</c><00:23:56.370><c> example</c><00:23:56.730><c> let's</c>

00:23:57.500 --> 00:23:57.510 align:start position:0%
is never evaluated in this example let's
 

00:23:57.510 --> 00:23:59.990 align:start position:0%
is never evaluated in this example let's
prove<00:23:57.870><c> it</c><00:23:58.050><c> so</c><00:23:58.650><c> let's</c><00:23:58.830><c> go</c><00:23:58.980><c> back</c><00:23:59.130><c> here</c><00:23:59.430><c> and</c><00:23:59.490><c> run</c>

00:23:59.990 --> 00:24:00.000 align:start position:0%
prove it so let's go back here and run
 

00:24:00.000 --> 00:24:03.590 align:start position:0%
prove it so let's go back here and run
the<00:24:00.240><c> Haskell</c><00:24:00.750><c> GHz</c><00:24:01.500><c> I</c><00:24:01.530><c> Rapala</c><00:24:02.370><c> gain</c><00:24:02.550><c> let's</c><00:24:03.450><c> go</c>

00:24:03.590 --> 00:24:03.600 align:start position:0%
the Haskell GHz I Rapala gain let's go
 

00:24:03.600 --> 00:24:06.080 align:start position:0%
the Haskell GHz I Rapala gain let's go
ahead<00:24:03.660><c> and</c><00:24:03.900><c> say</c><00:24:04.140><c> in</c><00:24:04.440><c> this</c><00:24:04.620><c> case</c><00:24:05.030><c> put</c><00:24:06.030><c> a</c>

00:24:06.080 --> 00:24:06.090 align:start position:0%
ahead and say in this case put a
 

00:24:06.090 --> 00:24:08.300 align:start position:0%
ahead and say in this case put a
breakpoint<00:24:06.420><c> on</c><00:24:06.990><c> line</c><00:24:07.050><c> number</c><00:24:07.470><c> one</c><00:24:07.800><c> character</c>

00:24:08.300 --> 00:24:08.310 align:start position:0%
breakpoint on line number one character
 

00:24:08.310 --> 00:24:11.540 align:start position:0%
breakpoint on line number one character
16<00:24:08.790><c> but</c><00:24:09.540><c> called</c><00:24:09.810><c> main</c><00:24:10.170><c> this</c><00:24:10.470><c> time</c><00:24:10.710><c> and</c><00:24:11.070><c> notice</c>

00:24:11.540 --> 00:24:11.550 align:start position:0%
16 but called main this time and notice
 

00:24:11.550 --> 00:24:14.510 align:start position:0%
16 but called main this time and notice
it<00:24:11.760><c> never</c><00:24:12.060><c> stepped</c><00:24:12.480><c> into</c><00:24:12.690><c> the</c><00:24:13.500><c> function</c><00:24:14.040><c> and</c>

00:24:14.510 --> 00:24:14.520 align:start position:0%
it never stepped into the function and
 

00:24:14.520 --> 00:24:17.960 align:start position:0%
it never stepped into the function and
that's<00:24:15.450><c> because</c><00:24:16.010><c> hostile</c><00:24:17.010><c> says</c><00:24:17.250><c> there</c><00:24:17.700><c> is</c><00:24:17.790><c> no</c>

00:24:17.960 --> 00:24:17.970 align:start position:0%
that's because hostile says there is no
 

00:24:17.970 --> 00:24:20.840 align:start position:0%
that's because hostile says there is no
reason<00:24:18.330><c> to</c><00:24:18.360><c> evaluate</c><00:24:19.200><c> that</c><00:24:19.440><c> method</c><00:24:20.070><c> add</c><00:24:20.280><c> a</c>

00:24:20.840 --> 00:24:20.850 align:start position:0%
reason to evaluate that method add a
 

00:24:20.850 --> 00:24:22.700 align:start position:0%
reason to evaluate that method add a
function<00:24:21.300><c> and</c><00:24:21.690><c> because</c><00:24:22.050><c> you're</c><00:24:22.230><c> never</c><00:24:22.380><c> using</c>

00:24:22.700 --> 00:24:22.710 align:start position:0%
function and because you're never using
 

00:24:22.710 --> 00:24:23.600 align:start position:0%
function and because you're never using
the<00:24:22.800><c> result</c><00:24:23.130><c> of</c><00:24:23.310><c> it</c>

00:24:23.600 --> 00:24:23.610 align:start position:0%
the result of it
 

00:24:23.610 --> 00:24:27.200 align:start position:0%
the result of it
that's<00:24:24.410><c> efficiency</c><00:24:25.410><c> is</c><00:24:25.620><c> entered</c><00:24:26.210><c> efficiency</c>

00:24:27.200 --> 00:24:27.210 align:start position:0%
that's efficiency is entered efficiency
 

00:24:27.210 --> 00:24:27.860 align:start position:0%
that's efficiency is entered efficiency
is

00:24:27.860 --> 00:24:27.870 align:start position:0%
is
 

00:24:27.870 --> 00:24:29.960 align:start position:0%
is
avoiding<00:24:28.409><c> work</c><00:24:28.650><c> that</c><00:24:29.250><c> shouldn't</c><00:24:29.520><c> be</c><00:24:29.640><c> done</c><00:24:29.820><c> in</c>

00:24:29.960 --> 00:24:29.970 align:start position:0%
avoiding work that shouldn't be done in
 

00:24:29.970 --> 00:24:31.789 align:start position:0%
avoiding work that shouldn't be done in
the<00:24:30.090><c> first</c><00:24:30.240><c> place</c><00:24:30.419><c> you</c><00:24:31.350><c> don't</c><00:24:31.380><c> want</c><00:24:31.679><c> to</c><00:24:31.740><c> be</c>

00:24:31.789 --> 00:24:31.799 align:start position:0%
the first place you don't want to be
 

00:24:31.799 --> 00:24:34.460 align:start position:0%
the first place you don't want to be
fast<00:24:32.250><c> you</c><00:24:32.700><c> want</c><00:24:33.000><c> to</c><00:24:33.029><c> be</c><00:24:33.150><c> efficient</c><00:24:33.870><c> when</c>

00:24:34.460 --> 00:24:34.470 align:start position:0%
fast you want to be efficient when
 

00:24:34.470 --> 00:24:35.720 align:start position:0%
fast you want to be efficient when
you're<00:24:34.620><c> efficient</c><00:24:35.070><c> you're</c><00:24:35.309><c> automatically</c>

00:24:35.720 --> 00:24:35.730 align:start position:0%
you're efficient you're automatically
 

00:24:35.730 --> 00:24:37.490 align:start position:0%
you're efficient you're automatically
going<00:24:35.909><c> to</c><00:24:35.970><c> have</c><00:24:36.120><c> better</c><00:24:36.270><c> performance</c><00:24:36.500><c> because</c>

00:24:37.490 --> 00:24:37.500 align:start position:0%
going to have better performance because
 

00:24:37.500 --> 00:24:40.039 align:start position:0%
going to have better performance because
you're<00:24:37.620><c> not</c><00:24:37.740><c> doing</c><00:24:38.039><c> unnecessary</c><00:24:38.190><c> work</c><00:24:38.880><c> so</c><00:24:39.690><c> how</c>

00:24:40.039 --> 00:24:40.049 align:start position:0%
you're not doing unnecessary work so how
 

00:24:40.049 --> 00:24:41.930 align:start position:0%
you're not doing unnecessary work so how
is<00:24:40.169><c> this</c><00:24:40.289><c> even</c><00:24:40.409><c> possible</c><00:24:40.590><c> how</c><00:24:41.429><c> would</c><00:24:41.610><c> a</c><00:24:41.640><c> skill</c>

00:24:41.930 --> 00:24:41.940 align:start position:0%
is this even possible how would a skill
 

00:24:41.940 --> 00:24:44.240 align:start position:0%
is this even possible how would a skill
do<00:24:42.150><c> this</c><00:24:42.330><c> that's</c><00:24:43.140><c> because</c><00:24:43.590><c> we</c><00:24:43.860><c> have</c><00:24:44.039><c> what</c><00:24:44.220><c> are</c>

00:24:44.240 --> 00:24:44.250 align:start position:0%
do this that's because we have what are
 

00:24:44.250 --> 00:24:47.210 align:start position:0%
do this that's because we have what are
called<00:24:44.370><c> pure</c><00:24:45.029><c> functions</c><00:24:45.630><c> so</c><00:24:46.260><c> what</c><00:24:46.529><c> are</c><00:24:46.799><c> really</c>

00:24:47.210 --> 00:24:47.220 align:start position:0%
called pure functions so what are really
 

00:24:47.220 --> 00:24:49.850 align:start position:0%
called pure functions so what are really
pure<00:24:47.549><c> functions</c><00:24:48.150><c> we</c><00:24:48.840><c> are</c><00:24:48.990><c> functions</c><00:24:49.559><c> give</c>

00:24:49.850 --> 00:24:49.860 align:start position:0%
pure functions we are functions give
 

00:24:49.860 --> 00:24:52.519 align:start position:0%
pure functions we are functions give
exactly<00:24:50.460><c> the</c><00:24:50.549><c> same</c><00:24:50.820><c> result</c><00:24:51.299><c> as</c><00:24:51.539><c> long</c><00:24:52.289><c> as</c><00:24:52.440><c> the</c>

00:24:52.519 --> 00:24:52.529 align:start position:0%
exactly the same result as long as the
 

00:24:52.529 --> 00:24:54.919 align:start position:0%
exactly the same result as long as the
input<00:24:52.710><c> is</c><00:24:52.919><c> exactly</c><00:24:53.520><c> the</c><00:24:53.640><c> same</c><00:24:53.880><c> every</c><00:24:54.150><c> single</c>

00:24:54.919 --> 00:24:54.929 align:start position:0%
input is exactly the same every single
 

00:24:54.929 --> 00:24:57.769 align:start position:0%
input is exactly the same every single
time<00:24:55.380><c> pure</c><00:24:56.370><c> functions</c><00:24:56.820><c> will</c><00:24:56.970><c> never</c><00:24:57.270><c> give</c><00:24:57.570><c> us</c><00:24:57.690><c> a</c>

00:24:57.769 --> 00:24:57.779 align:start position:0%
time pure functions will never give us a
 

00:24:57.779 --> 00:24:59.330 align:start position:0%
time pure functions will never give us a
different<00:24:58.110><c> result</c><00:24:58.260><c> for</c><00:24:58.559><c> the</c><00:24:58.679><c> given</c><00:24:58.919><c> subset</c><00:24:59.309><c> of</c>

00:24:59.330 --> 00:24:59.340 align:start position:0%
different result for the given subset of
 

00:24:59.340 --> 00:25:01.460 align:start position:0%
different result for the given subset of
input<00:24:59.700><c> we</c><00:24:59.940><c> are</c><00:25:00.600><c> functions</c><00:25:00.990><c> don't</c><00:25:01.200><c> have</c><00:25:01.350><c> any</c>

00:25:01.460 --> 00:25:01.470 align:start position:0%
input we are functions don't have any
 

00:25:01.470 --> 00:25:03.860 align:start position:0%
input we are functions don't have any
side<00:25:01.830><c> effects</c><00:25:02.220><c> so</c><00:25:02.970><c> when</c><00:25:03.419><c> you</c><00:25:03.510><c> run</c><00:25:03.659><c> the</c>

00:25:03.860 --> 00:25:03.870 align:start position:0%
side effects so when you run the
 

00:25:03.870 --> 00:25:06.169 align:start position:0%
side effects so when you run the
function<00:25:04.080><c> you</c><00:25:04.980><c> wouldn't</c><00:25:05.250><c> know</c><00:25:05.549><c> if</c><00:25:05.760><c> they</c><00:25:05.940><c> ran</c>

00:25:06.169 --> 00:25:06.179 align:start position:0%
function you wouldn't know if they ran
 

00:25:06.179 --> 00:25:09.260 align:start position:0%
function you wouldn't know if they ran
or<00:25:06.480><c> not</c><00:25:06.929><c> anyway</c><00:25:07.890><c> matter</c><00:25:08.220><c> you</c><00:25:08.760><c> wouldn't</c><00:25:09.059><c> know</c>

00:25:09.260 --> 00:25:09.270 align:start position:0%
or not anyway matter you wouldn't know
 

00:25:09.270 --> 00:25:11.419 align:start position:0%
or not anyway matter you wouldn't know
how<00:25:09.510><c> what</c><00:25:10.169><c> their</c><00:25:10.380><c> effect</c><00:25:10.559><c> was</c><00:25:10.950><c> because</c><00:25:11.309><c> they</c>

00:25:11.419 --> 00:25:11.429 align:start position:0%
how what their effect was because they
 

00:25:11.429 --> 00:25:13.850 align:start position:0%
how what their effect was because they
have<00:25:11.580><c> no</c><00:25:11.940><c> side</c><00:25:12.210><c> effects</c><00:25:12.539><c> so</c><00:25:13.260><c> they</c><00:25:13.440><c> take</c><00:25:13.770><c> an</c>

00:25:13.850 --> 00:25:13.860 align:start position:0%
have no side effects so they take an
 

00:25:13.860 --> 00:25:15.649 align:start position:0%
have no side effects so they take an
input<00:25:14.010><c> they</c><00:25:14.279><c> give</c><00:25:14.429><c> an</c><00:25:14.549><c> output</c><00:25:14.700><c> if</c><00:25:15.149><c> you</c><00:25:15.510><c> don't</c>

00:25:15.649 --> 00:25:15.659 align:start position:0%
input they give an output if you don't
 

00:25:15.659 --> 00:25:17.510 align:start position:0%
input they give an output if you don't
use<00:25:15.809><c> the</c><00:25:15.960><c> output</c><00:25:16.380><c> it</c><00:25:16.620><c> doesn't</c><00:25:16.919><c> matter</c><00:25:17.100><c> it's</c><00:25:17.309><c> as</c>

00:25:17.510 --> 00:25:17.520 align:start position:0%
use the output it doesn't matter it's as
 

00:25:17.520 --> 00:25:20.330 align:start position:0%
use the output it doesn't matter it's as
if<00:25:17.700><c> they</c><00:25:17.820><c> were</c><00:25:17.880><c> never</c><00:25:18.149><c> actually</c><00:25:18.450><c> run</c><00:25:18.960><c> so</c><00:25:19.890><c> what</c>

00:25:20.330 --> 00:25:20.340 align:start position:0%
if they were never actually run so what
 

00:25:20.340 --> 00:25:22.730 align:start position:0%
if they were never actually run so what
are<00:25:20.429><c> benefits</c><00:25:20.820><c> of</c><00:25:20.970><c> pure</c><00:25:21.299><c> functions</c><00:25:21.779><c> the</c><00:25:22.529><c> first</c>

00:25:22.730 --> 00:25:22.740 align:start position:0%
are benefits of pure functions the first
 

00:25:22.740 --> 00:25:25.850 align:start position:0%
are benefits of pure functions the first
benefit<00:25:23.279><c> is</c><00:25:23.309><c> their</c><00:25:24.120><c> idempotent</c><00:25:25.020><c> you</c><00:25:25.500><c> can</c><00:25:25.649><c> call</c>

00:25:25.850 --> 00:25:25.860 align:start position:0%
benefit is their idempotent you can call
 

00:25:25.860 --> 00:25:28.519 align:start position:0%
benefit is their idempotent you can call
them<00:25:26.010><c> any</c><00:25:26.279><c> number</c><00:25:26.760><c> of</c><00:25:26.909><c> times</c><00:25:27.120><c> for</c><00:25:27.870><c> example</c><00:25:28.440><c> you</c>

00:25:28.519 --> 00:25:28.529 align:start position:0%
them any number of times for example you
 

00:25:28.529 --> 00:25:29.840 align:start position:0%
them any number of times for example you
call<00:25:28.710><c> your</c><00:25:28.890><c> bank</c><00:25:29.100><c> and</c><00:25:29.250><c> say</c><00:25:29.399><c> what's</c><00:25:29.580><c> my</c><00:25:29.610><c> balance</c>

00:25:29.840 --> 00:25:29.850 align:start position:0%
call your bank and say what's my balance
 

00:25:29.850 --> 00:25:31.880 align:start position:0%
call your bank and say what's my balance
and<00:25:30.299><c> then</c><00:25:30.659><c> immediately</c><00:25:31.230><c> what's</c><00:25:31.409><c> your</c><00:25:31.529><c> balance</c>

00:25:31.880 --> 00:25:31.890 align:start position:0%
and then immediately what's your balance
 

00:25:31.890 --> 00:25:33.889 align:start position:0%
and then immediately what's your balance
assuming<00:25:32.700><c> it</c><00:25:32.820><c> didn't</c><00:25:33.059><c> really</c><00:25:33.299><c> deposit</c><00:25:33.779><c> any</c>

00:25:33.889 --> 00:25:33.899 align:start position:0%
assuming it didn't really deposit any
 

00:25:33.899 --> 00:25:35.120 align:start position:0%
assuming it didn't really deposit any
money<00:25:34.110><c> I</c><00:25:34.169><c> would</c><00:25:34.350><c> draw</c><00:25:34.559><c> the</c><00:25:34.620><c> balance</c><00:25:34.980><c> will</c><00:25:35.100><c> be</c>

00:25:35.120 --> 00:25:35.130 align:start position:0%
money I would draw the balance will be
 

00:25:35.130 --> 00:25:37.669 align:start position:0%
money I would draw the balance will be
the<00:25:35.340><c> same</c><00:25:35.520><c> in</c><00:25:36.210><c> this</c><00:25:36.480><c> particular</c><00:25:36.809><c> case</c><00:25:36.990><c> usually</c>

00:25:37.669 --> 00:25:37.679 align:start position:0%
the same in this particular case usually
 

00:25:37.679 --> 00:25:39.139 align:start position:0%
the same in this particular case usually
that's<00:25:37.799><c> not</c><00:25:37.890><c> an</c><00:25:38.100><c> idempotent</c><00:25:38.340><c> operation</c>

00:25:39.139 --> 00:25:39.149 align:start position:0%
that's not an idempotent operation
 

00:25:39.149 --> 00:25:41.330 align:start position:0%
that's not an idempotent operation
because<00:25:39.480><c> the</c><00:25:39.649><c> money</c><00:25:40.649><c> in</c><00:25:40.799><c> the</c><00:25:40.890><c> bank</c><00:25:41.039><c> keeps</c>

00:25:41.330 --> 00:25:41.340 align:start position:0%
because the money in the bank keeps
 

00:25:41.340 --> 00:25:43.549 align:start position:0%
because the money in the bank keeps
changing<00:25:41.610><c> in</c><00:25:42.000><c> a</c><00:25:42.750><c> lot</c><00:25:42.870><c> of</c><00:25:42.899><c> cases</c><00:25:43.140><c> keeps</c>

00:25:43.549 --> 00:25:43.559 align:start position:0%
changing in a lot of cases keeps
 

00:25:43.559 --> 00:25:45.470 align:start position:0%
changing in a lot of cases keeps
decreasing<00:25:43.710><c> frustratingly</c><00:25:44.640><c> but</c><00:25:45.179><c> the</c><00:25:45.240><c> point</c>

00:25:45.470 --> 00:25:45.480 align:start position:0%
decreasing frustratingly but the point
 

00:25:45.480 --> 00:25:47.409 align:start position:0%
decreasing frustratingly but the point
really<00:25:45.630><c> is</c><00:25:45.809><c> it</c><00:25:46.230><c> keeps</c><00:25:46.440><c> changing</c><00:25:46.649><c> so</c>

00:25:47.409 --> 00:25:47.419 align:start position:0%
really is it keeps changing so
 

00:25:47.419 --> 00:25:49.850 align:start position:0%
really is it keeps changing so
idempotency<00:25:48.450><c> is</c><00:25:48.630><c> when</c><00:25:48.960><c> you</c><00:25:49.289><c> can</c><00:25:49.440><c> do</c><00:25:49.529><c> the</c><00:25:49.649><c> same</c>

00:25:49.850 --> 00:25:49.860 align:start position:0%
idempotency is when you can do the same
 

00:25:49.860 --> 00:25:51.919 align:start position:0%
idempotency is when you can do the same
work<00:25:50.100><c> repeatedly</c><00:25:50.909><c> and</c><00:25:51.179><c> gives</c><00:25:51.690><c> the</c><00:25:51.809><c> same</c>

00:25:51.919 --> 00:25:51.929 align:start position:0%
work repeatedly and gives the same
 

00:25:51.929 --> 00:25:53.980 align:start position:0%
work repeatedly and gives the same
result<00:25:52.470><c> like</c><00:25:52.860><c> the</c><00:25:53.010><c> add</c><00:25:53.159><c> function</c>

00:25:53.980 --> 00:25:53.990 align:start position:0%
result like the add function
 

00:25:53.990 --> 00:25:56.990 align:start position:0%
result like the add function
preferentially<00:25:54.990><c> transparent</c><00:25:55.980><c> you</c><00:25:56.490><c> can</c><00:25:56.700><c> call</c>

00:25:56.990 --> 00:25:57.000 align:start position:0%
preferentially transparent you can call
 

00:25:57.000 --> 00:25:59.570 align:start position:0%
preferentially transparent you can call
a<00:25:57.029><c> function</c><00:25:57.480><c> and</c><00:25:58.020><c> you</c><00:25:58.049><c> can</c><00:25:58.799><c> replace</c><00:25:59.220><c> the</c>

00:25:59.570 --> 00:25:59.580 align:start position:0%
a function and you can replace the
 

00:25:59.580 --> 00:26:02.960 align:start position:0%
a function and you can replace the
function<00:25:59.760><c> or</c><00:26:00.210><c> expression</c><00:26:00.870><c> with</c><00:26:01.350><c> its</c><00:26:01.559><c> value</c><00:26:02.399><c> so</c>

00:26:02.960 --> 00:26:02.970 align:start position:0%
function or expression with its value so
 

00:26:02.970 --> 00:26:05.029 align:start position:0%
function or expression with its value so
for<00:26:03.149><c> example</c><00:26:03.840><c> in</c><00:26:04.080><c> this</c><00:26:04.380><c> eggs</c><00:26:04.679><c> in</c><00:26:04.890><c> this</c>

00:26:05.029 --> 00:26:05.039 align:start position:0%
for example in this eggs in this
 

00:26:05.039 --> 00:26:07.130 align:start position:0%
for example in this eggs in this
particular<00:26:05.399><c> case</c><00:26:05.640><c> has</c><00:26:06.570><c> to</c><00:26:06.750><c> put</c><00:26:06.929><c> I</c><00:26:06.960><c> have</c>

00:26:07.130 --> 00:26:07.140 align:start position:0%
particular case has to put I have
 

00:26:07.140 --> 00:26:10.340 align:start position:0%
particular case has to put I have
decided<00:26:07.649><c> to</c><00:26:07.890><c> replace</c><00:26:08.190><c> this</c><00:26:08.580><c> add</c><00:26:08.760><c> 1/3</c><00:26:09.390><c> with</c><00:26:10.200><c> the</c>

00:26:10.340 --> 00:26:10.350 align:start position:0%
decided to replace this add 1/3 with the
 

00:26:10.350 --> 00:26:13.010 align:start position:0%
decided to replace this add 1/3 with the
value<00:26:10.620><c> of</c><00:26:10.710><c> 4</c><00:26:11.159><c> if</c><00:26:11.490><c> it</c><00:26:11.669><c> wanted</c><00:26:12.059><c> to</c><00:26:12.120><c> it</c><00:26:12.419><c> could</c><00:26:12.809><c> do</c>

00:26:13.010 --> 00:26:13.020 align:start position:0%
value of 4 if it wanted to it could do
 

00:26:13.020 --> 00:26:14.750 align:start position:0%
value of 4 if it wanted to it could do
this<00:26:13.200><c> and</c><00:26:13.440><c> that's</c><00:26:13.980><c> referential</c><00:26:14.549><c> transparency</c>

00:26:14.750 --> 00:26:14.760 align:start position:0%
this and that's referential transparency
 

00:26:14.760 --> 00:26:17.630 align:start position:0%
this and that's referential transparency
in<00:26:15.390><c> fact</c><00:26:15.870><c> Java</c><00:26:16.080><c> compiler</c><00:26:16.409><c> does</c><00:26:16.799><c> that</c><00:26:17.070><c> but</c><00:26:17.549><c> it</c>

00:26:17.630 --> 00:26:17.640 align:start position:0%
in fact Java compiler does that but it
 

00:26:17.640 --> 00:26:19.940 align:start position:0%
in fact Java compiler does that but it
knows<00:26:17.880><c> that</c><00:26:17.909><c> the</c><00:26:18.690><c> functions</c><00:26:19.049><c> are</c><00:26:19.230><c> evaluations</c>

00:26:19.940 --> 00:26:19.950 align:start position:0%
knows that the functions are evaluations
 

00:26:19.950 --> 00:26:22.340 align:start position:0%
knows that the functions are evaluations
expressions<00:26:20.429><c> are</c><00:26:20.610><c> pure</c><00:26:21.029><c> it's</c><00:26:21.809><c> easy</c><00:26:22.049><c> to</c>

00:26:22.340 --> 00:26:22.350 align:start position:0%
expressions are pure it's easy to
 

00:26:22.350 --> 00:26:24.560 align:start position:0%
expressions are pure it's easy to
memorize<00:26:22.649><c> the</c><00:26:23.250><c> result</c><00:26:23.580><c> memorization</c><00:26:24.299><c> is</c>

00:26:24.560 --> 00:26:24.570 align:start position:0%
memorize the result memorization is
 

00:26:24.570 --> 00:26:26.690 align:start position:0%
memorize the result memorization is
storing<00:26:25.169><c> them</c><00:26:25.409><c> so</c><00:26:25.950><c> you</c><00:26:26.010><c> can</c><00:26:26.190><c> put</c><00:26:26.340><c> them</c><00:26:26.460><c> into</c><00:26:26.610><c> a</c>

00:26:26.690 --> 00:26:26.700 align:start position:0%
storing them so you can put them into a
 

00:26:26.700 --> 00:26:29.180 align:start position:0%
storing them so you can put them into a
cache<00:26:27.120><c> and</c><00:26:27.600><c> say</c><00:26:27.929><c> the</c><00:26:28.529><c> next</c><00:26:28.740><c> time</c><00:26:28.860><c> you</c><00:26:28.980><c> call</c>

00:26:29.180 --> 00:26:29.190 align:start position:0%
cache and say the next time you call
 

00:26:29.190 --> 00:26:30.980 align:start position:0%
cache and say the next time you call
this<00:26:29.340><c> function</c><00:26:29.549><c> I</c><00:26:29.880><c> won't</c><00:26:30.090><c> evaluate</c><00:26:30.659><c> it</c><00:26:30.840><c> I'll</c>

00:26:30.980 --> 00:26:30.990 align:start position:0%
this function I won't evaluate it I'll
 

00:26:30.990 --> 00:26:33.320 align:start position:0%
this function I won't evaluate it I'll
just<00:26:31.500><c> give</c><00:26:31.740><c> you</c><00:26:31.770><c> this</c><00:26:32.039><c> result</c><00:26:32.429><c> back</c><00:26:32.640><c> this</c><00:26:33.240><c> is</c>

00:26:33.320 --> 00:26:33.330 align:start position:0%
just give you this result back this is
 

00:26:33.330 --> 00:26:35.659 align:start position:0%
just give you this result back this is
used<00:26:33.570><c> in</c><00:26:33.929><c> what</c><00:26:34.500><c> are</c><00:26:34.679><c> called</c><00:26:34.919><c> as</c><00:26:35.130><c> dynamic</c>

00:26:35.659 --> 00:26:35.669 align:start position:0%
used in what are called as dynamic
 

00:26:35.669 --> 00:26:37.639 align:start position:0%
used in what are called as dynamic
programming<00:26:36.270><c> problems</c><00:26:36.809><c> an</c><00:26:36.990><c> algorithmic</c>

00:26:37.639 --> 00:26:37.649 align:start position:0%
programming problems an algorithmic
 

00:26:37.649 --> 00:26:39.289 align:start position:0%
programming problems an algorithmic
approach<00:26:38.070><c> where</c><00:26:38.340><c> we</c><00:26:38.460><c> use</c><00:26:38.610><c> excess</c><00:26:38.909><c> amount</c><00:26:39.179><c> of</c>

00:26:39.289 --> 00:26:39.299 align:start position:0%
approach where we use excess amount of
 

00:26:39.299 --> 00:26:41.310 align:start position:0%
approach where we use excess amount of
recursion<00:26:39.630><c> but</c><00:26:40.559><c> we</c><00:26:40.740><c> save</c>

00:26:41.310 --> 00:26:41.320 align:start position:0%
recursion but we save
 

00:26:41.320 --> 00:26:44.460 align:start position:0%
recursion but we save
performance<00:26:41.830><c> by</c><00:26:42.040><c> memorizing</c><00:26:43.020><c> code</c><00:26:44.020><c> is</c><00:26:44.170><c> easier</c>

00:26:44.460 --> 00:26:44.470 align:start position:0%
performance by memorizing code is easier
 

00:26:44.470 --> 00:26:46.710 align:start position:0%
performance by memorizing code is easier
to<00:26:44.530><c> test</c><00:26:44.920><c> as</c><00:26:45.160><c> long</c><00:26:45.760><c> as</c><00:26:46.000><c> the</c><00:26:46.090><c> input</c><00:26:46.360><c> is</c><00:26:46.390><c> the</c><00:26:46.510><c> same</c>

00:26:46.710 --> 00:26:46.720 align:start position:0%
to test as long as the input is the same
 

00:26:46.720 --> 00:26:48.960 align:start position:0%
to test as long as the input is the same
output<00:26:47.350><c> is</c><00:26:47.440><c> the</c><00:26:47.530><c> same</c><00:26:47.740><c> don't</c><00:26:48.670><c> have</c><00:26:48.790><c> any</c>

00:26:48.960 --> 00:26:48.970 align:start position:0%
output is the same don't have any
 

00:26:48.970 --> 00:26:51.330 align:start position:0%
output is the same don't have any
external<00:26:49.210><c> dependencies</c><00:26:49.980><c> awesome</c>

00:26:51.330 --> 00:26:51.340 align:start position:0%
external dependencies awesome
 

00:26:51.340 --> 00:26:53.550 align:start position:0%
external dependencies awesome
that's<00:26:51.580><c> the</c><00:26:51.880><c> dreamland</c><00:26:52.270><c> for</c><00:26:52.420><c> really</c><00:26:53.410><c> having</c>

00:26:53.550 --> 00:26:53.560 align:start position:0%
that's the dreamland for really having
 

00:26:53.560 --> 00:26:55.580 align:start position:0%
that's the dreamland for really having
ability<00:26:54.130><c> to</c><00:26:54.250><c> test</c><00:26:54.490><c> it</c><00:26:54.670><c> very</c><00:26:54.850><c> easily</c><00:26:55.150><c> and</c>

00:26:55.580 --> 00:26:55.590 align:start position:0%
ability to test it very easily and
 

00:26:55.590 --> 00:26:57.810 align:start position:0%
ability to test it very easily and
finally<00:26:56.590><c> of</c><00:26:56.680><c> course</c><00:26:56.710><c> it's</c><00:26:57.220><c> easier</c><00:26:57.610><c> to</c>

00:26:57.810 --> 00:26:57.820 align:start position:0%
finally of course it's easier to
 

00:26:57.820 --> 00:27:00.750 align:start position:0%
finally of course it's easier to
paralyze<00:26:58.570><c> the</c><00:26:58.600><c> code</c><00:26:58.990><c> as</c><00:26:59.230><c> well</c><00:26:59.740><c> you</c><00:27:00.340><c> can</c><00:27:00.520><c> throw</c>

00:27:00.750 --> 00:27:00.760 align:start position:0%
paralyze the code as well you can throw
 

00:27:00.760 --> 00:27:03.660 align:start position:0%
paralyze the code as well you can throw
concurrency<00:27:01.510><c> into</c><00:27:01.810><c> a</c><00:27:01.840><c> pure</c><00:27:02.140><c> function</c><00:27:02.670><c> because</c>

00:27:03.660 --> 00:27:03.670 align:start position:0%
concurrency into a pure function because
 

00:27:03.670 --> 00:27:05.760 align:start position:0%
concurrency into a pure function because
it<00:27:03.820><c> has</c><00:27:03.940><c> no</c><00:27:04.090><c> side</c><00:27:04.330><c> effects</c><00:27:04.720><c> it's</c><00:27:05.320><c> not</c><00:27:05.530><c> going</c><00:27:05.710><c> to</c>

00:27:05.760 --> 00:27:05.770 align:start position:0%
it has no side effects it's not going to
 

00:27:05.770 --> 00:27:07.380 align:start position:0%
it has no side effects it's not going to
run<00:27:05.890><c> into</c><00:27:05.980><c> any</c><00:27:06.040><c> race</c><00:27:06.340><c> conditions</c><00:27:06.910><c> and</c><00:27:07.210><c> mess</c>

00:27:07.380 --> 00:27:07.390 align:start position:0%
run into any race conditions and mess
 

00:27:07.390 --> 00:27:09.180 align:start position:0%
run into any race conditions and mess
with<00:27:07.600><c> some</c><00:27:07.780><c> shared</c><00:27:08.110><c> global</c><00:27:08.500><c> mutable</c><00:27:08.920><c> state</c>

00:27:09.180 --> 00:27:09.190 align:start position:0%
with some shared global mutable state
 

00:27:09.190 --> 00:27:11.490 align:start position:0%
with some shared global mutable state
and<00:27:09.460><c> it's</c><00:27:10.240><c> not</c><00:27:10.330><c> gonna</c><00:27:10.540><c> be</c><00:27:10.630><c> affected</c><00:27:11.080><c> by</c><00:27:11.230><c> state</c>

00:27:11.490 --> 00:27:11.500 align:start position:0%
and it's not gonna be affected by state
 

00:27:11.500 --> 00:27:14.340 align:start position:0%
and it's not gonna be affected by state
outside<00:27:11.890><c> as</c><00:27:12.040><c> well</c><00:27:12.370><c> but</c><00:27:13.030><c> for</c><00:27:13.420><c> our</c><00:27:13.540><c> purpose</c><00:27:14.170><c> the</c>

00:27:14.340 --> 00:27:14.350 align:start position:0%
outside as well but for our purpose the
 

00:27:14.350 --> 00:27:16.950 align:start position:0%
outside as well but for our purpose the
most<00:27:14.620><c> interesting</c><00:27:15.070><c> part</c><00:27:15.310><c> here</c><00:27:15.490><c> is</c><00:27:15.700><c> it</c><00:27:16.450><c> can</c><00:27:16.930><c> be</c>

00:27:16.950 --> 00:27:16.960 align:start position:0%
most interesting part here is it can be
 

00:27:16.960 --> 00:27:20.640 align:start position:0%
most interesting part here is it can be
lazy<00:27:17.880><c> so</c><00:27:18.880><c> it</c><00:27:19.240><c> can</c><00:27:19.420><c> take</c><00:27:19.630><c> it</c><00:27:19.750><c> easy</c><00:27:19.990><c> and</c><00:27:20.350><c> wait</c>

00:27:20.640 --> 00:27:20.650 align:start position:0%
lazy so it can take it easy and wait
 

00:27:20.650 --> 00:27:23.840 align:start position:0%
lazy so it can take it easy and wait
until<00:27:21.220><c> it</c><00:27:22.180><c> doesn't</c><00:27:22.510><c> have</c><00:27:22.810><c> to</c><00:27:23.050><c> execute</c><00:27:23.320><c> it</c><00:27:23.620><c> or</c>

00:27:23.840 --> 00:27:23.850 align:start position:0%
until it doesn't have to execute it or
 

00:27:23.850 --> 00:27:26.540 align:start position:0%
until it doesn't have to execute it or
until<00:27:24.850><c> the</c><00:27:24.970><c> last</c><00:27:25.180><c> responsible</c><00:27:25.990><c> moment</c>

00:27:26.540 --> 00:27:26.550 align:start position:0%
until the last responsible moment
 

00:27:26.550 --> 00:27:29.550 align:start position:0%
until the last responsible moment
laziness<00:27:27.550><c> is</c><00:27:27.730><c> the</c><00:27:27.790><c> real</c><00:27:28.150><c> charm</c><00:27:28.720><c> in</c><00:27:29.110><c> this</c><00:27:29.350><c> case</c>

00:27:29.550 --> 00:27:29.560 align:start position:0%
laziness is the real charm in this case
 

00:27:29.560 --> 00:27:32.490 align:start position:0%
laziness is the real charm in this case
and<00:27:30.250><c> what</c><00:27:30.550><c> you</c><00:27:30.670><c> just</c><00:27:30.790><c> saw</c><00:27:31.060><c> here</c><00:27:31.360><c> was</c><00:27:31.600><c> Haskell</c>

00:27:32.490 --> 00:27:32.500 align:start position:0%
and what you just saw here was Haskell
 

00:27:32.500 --> 00:27:34.410 align:start position:0%
and what you just saw here was Haskell
being<00:27:32.710><c> lazy</c><00:27:32.950><c> about</c><00:27:33.400><c> implementing</c><00:27:34.180><c> the</c><00:27:34.270><c> add</c>

00:27:34.410 --> 00:27:34.420 align:start position:0%
being lazy about implementing the add
 

00:27:34.420 --> 00:27:38.250 align:start position:0%
being lazy about implementing the add
functions<00:27:35.080><c> of</c><00:27:35.700><c> evaluation</c><00:27:36.700><c> so</c><00:27:36.910><c> it</c><00:27:37.720><c> postponed</c>

00:27:38.250 --> 00:27:38.260 align:start position:0%
functions of evaluation so it postponed
 

00:27:38.260 --> 00:27:39.840 align:start position:0%
functions of evaluation so it postponed
it<00:27:38.350><c> long</c><00:27:38.530><c> enough</c><00:27:38.800><c> that</c><00:27:39.010><c> it</c><00:27:39.100><c> didn't</c><00:27:39.370><c> have</c><00:27:39.520><c> to</c><00:27:39.670><c> do</c>

00:27:39.840 --> 00:27:39.850 align:start position:0%
it long enough that it didn't have to do
 

00:27:39.850 --> 00:27:42.270 align:start position:0%
it long enough that it didn't have to do
it<00:27:40.000><c> at</c><00:27:40.120><c> all</c><00:27:40.300><c> other</c><00:27:41.140><c> languages</c><00:27:41.710><c> that</c><00:27:41.830><c> use</c>

00:27:42.270 --> 00:27:42.280 align:start position:0%
it at all other languages that use
 

00:27:42.280 --> 00:27:44.580 align:start position:0%
it at all other languages that use
applicative<00:27:42.790><c> order</c><00:27:42.930><c> eagerly</c><00:27:43.930><c> evaluate</c><00:27:44.350><c> those</c>

00:27:44.580 --> 00:27:44.590 align:start position:0%
applicative order eagerly evaluate those
 

00:27:44.590 --> 00:27:47.430 align:start position:0%
applicative order eagerly evaluate those
things<00:27:45.150><c> but</c><00:27:46.150><c> like</c><00:27:46.390><c> I</c><00:27:46.420><c> said</c><00:27:46.570><c> not</c><00:27:46.930><c> like</c><00:27:47.170><c> law</c>

00:27:47.430 --> 00:27:47.440 align:start position:0%
things but like I said not like law
 

00:27:47.440 --> 00:27:50.280 align:start position:0%
things but like I said not like law
language<00:27:47.770><c> that</c><00:27:47.920><c> weird</c><00:27:48.130><c> equal</c><00:27:48.900><c> haskell</c><00:27:49.900><c> faults</c>

00:27:50.280 --> 00:27:50.290 align:start position:0%
language that weird equal haskell faults
 

00:27:50.290 --> 00:27:52.530 align:start position:0%
language that weird equal haskell faults
on<00:27:50.470><c> what</c><00:27:50.770><c> I</c><00:27:50.800><c> call</c><00:27:51.010><c> a</c><00:27:51.040><c> save</c><00:27:51.430><c> the</c><00:27:51.640><c> false</c><00:27:51.850><c> it</c>

00:27:52.530 --> 00:27:52.540 align:start position:0%
on what I call a save the false it
 

00:27:52.540 --> 00:27:54.720 align:start position:0%
on what I call a save the false it
assumes<00:27:52.960><c> all</c><00:27:53.230><c> the</c><00:27:53.680><c> functions</c><00:27:54.070><c> are</c><00:27:54.220><c> pure</c>

00:27:54.720 --> 00:27:54.730 align:start position:0%
assumes all the functions are pure
 

00:27:54.730 --> 00:27:57.390 align:start position:0%
assumes all the functions are pure
unless<00:27:55.570><c> otherwise</c><00:27:55.780><c> stated</c><00:27:56.170><c> like</c><00:27:57.130><c> we're</c><00:27:57.370><c> just</c>

00:27:57.390 --> 00:27:57.400 align:start position:0%
unless otherwise stated like we're just
 

00:27:57.400 --> 00:28:02.340 align:start position:0%
unless otherwise stated like we're just
like<00:27:57.610><c> Java</c><00:27:58.300><c> Scala</c><00:27:59.140><c> and</c><00:27:59.470><c> so</c><00:27:59.740><c> on</c><00:28:00.030><c> rely</c><00:28:01.030><c> on</c><00:28:01.350><c> you</c>

00:28:02.340 --> 00:28:02.350 align:start position:0%
like Java Scala and so on rely on you
 

00:28:02.350 --> 00:28:04.170 align:start position:0%
like Java Scala and so on rely on you
know<00:28:02.470><c> fearing</c><00:28:03.010><c> that</c><00:28:03.220><c> functions</c><00:28:03.610><c> are</c><00:28:03.700><c> mutable</c>

00:28:04.170 --> 00:28:04.180 align:start position:0%
know fearing that functions are mutable
 

00:28:04.180 --> 00:28:07.230 align:start position:0%
know fearing that functions are mutable
unless<00:28:04.960><c> otherwise</c><00:28:05.260><c> stated</c><00:28:05.950><c> so</c><00:28:06.850><c> let's</c><00:28:07.090><c> talk</c>

00:28:07.230 --> 00:28:07.240 align:start position:0%
unless otherwise stated so let's talk
 

00:28:07.240 --> 00:28:09.900 align:start position:0%
unless otherwise stated so let's talk
about<00:28:07.300><c> Scala</c><00:28:08.020><c> just</c><00:28:08.320><c> for</c><00:28:08.530><c> a</c><00:28:08.560><c> little</c><00:28:08.830><c> bit</c><00:28:09.070><c> let's</c>

00:28:09.900 --> 00:28:09.910 align:start position:0%
about Scala just for a little bit let's
 

00:28:09.910 --> 00:28:12.150 align:start position:0%
about Scala just for a little bit let's
go<00:28:10.120><c> to</c><00:28:10.180><c> Scala</c><00:28:10.720><c> real</c><00:28:10.990><c> coin</c><00:28:11.410><c> I'm</c><00:28:11.920><c> going</c><00:28:12.100><c> to</c>

00:28:12.150 --> 00:28:12.160 align:start position:0%
go to Scala real coin I'm going to
 

00:28:12.160 --> 00:28:13.980 align:start position:0%
go to Scala real coin I'm going to
create<00:28:12.310><c> a</c><00:28:12.430><c> function</c><00:28:12.730><c> right</c><00:28:13.210><c> here</c><00:28:13.390><c> called</c><00:28:13.690><c> and</c>

00:28:13.980 --> 00:28:13.990 align:start position:0%
create a function right here called and
 

00:28:13.990 --> 00:28:17.430 align:start position:0%
create a function right here called and
compute<00:28:14.470><c> this</c><00:28:15.220><c> takes</c><00:28:15.520><c> a</c><00:28:15.730><c> value</c><00:28:15.880><c> int</c><00:28:16.450><c> and</c><00:28:16.900><c> it's</c>

00:28:17.430 --> 00:28:17.440 align:start position:0%
compute this takes a value int and it's
 

00:28:17.440 --> 00:28:21.060 align:start position:0%
compute this takes a value int and it's
going<00:28:17.620><c> to</c><00:28:17.740><c> return</c><00:28:18.040><c> let's</c><00:28:18.430><c> say</c><00:28:18.670><c> n</c><00:28:18.970><c> times</c><00:28:19.750><c> 2</c><00:28:20.260><c> well</c>

00:28:21.060 --> 00:28:21.070 align:start position:0%
going to return let's say n times 2 well
 

00:28:21.070 --> 00:28:23.730 align:start position:0%
going to return let's say n times 2 well
I'm<00:28:21.580><c> gonna</c><00:28:21.910><c> go</c><00:28:22.060><c> ahead</c><00:28:22.120><c> and</c><00:28:22.240><c> say</c><00:28:22.510><c> Val</c><00:28:22.960><c> X</c><00:28:23.320><c> equal</c>

00:28:23.730 --> 00:28:23.740 align:start position:0%
I'm gonna go ahead and say Val X equal
 

00:28:23.740 --> 00:28:29.100 align:start position:0%
I'm gonna go ahead and say Val X equal
to<00:28:23.950><c> 4</c><00:28:24.580><c> if</c><00:28:25.360><c> X</c><00:28:25.780><c> is</c><00:28:26.080><c> greater</c><00:28:26.410><c> than</c><00:28:26.800><c> 5</c><00:28:27.250><c> and</c><00:28:28.110><c> compute</c>

00:28:29.100 --> 00:28:29.110 align:start position:0%
to 4 if X is greater than 5 and compute
 

00:28:29.110 --> 00:28:33.090 align:start position:0%
to 4 if X is greater than 5 and compute
a<00:28:29.230><c> for</c><00:28:29.710><c> let's</c><00:28:30.340><c> say</c><00:28:30.550><c> is</c><00:28:31.060><c> greater</c><00:28:31.870><c> than</c><00:28:32.110><c> 10</c><00:28:32.740><c> I</c>

00:28:33.090 --> 00:28:33.100 align:start position:0%
a for let's say is greater than 10 I
 

00:28:33.100 --> 00:28:36.390 align:start position:0%
a for let's say is greater than 10 I
want<00:28:33.910><c> to</c><00:28:34.000><c> go</c><00:28:34.060><c> ahead</c><00:28:34.120><c> an</c><00:28:34.330><c> output</c><00:28:34.960><c> print</c><00:28:35.350><c> 1</c><00:28:35.590><c> let's</c>

00:28:36.390 --> 00:28:36.400 align:start position:0%
want to go ahead an output print 1 let's
 

00:28:36.400 --> 00:28:39.420 align:start position:0%
want to go ahead an output print 1 let's
say<00:28:36.670><c> result</c><00:28:37.420><c> 1</c><00:28:37.690><c> otherwise</c><00:28:38.560><c> I'm</c><00:28:39.160><c> going</c><00:28:39.370><c> to</c>

00:28:39.420 --> 00:28:39.430 align:start position:0%
say result 1 otherwise I'm going to
 

00:28:39.430 --> 00:28:42.780 align:start position:0%
say result 1 otherwise I'm going to
print<00:28:39.760><c> out</c><00:28:39.910><c> let's</c><00:28:40.240><c> say</c><00:28:40.450><c> a</c><00:28:40.780><c> result</c><00:28:41.470><c> 2</c><00:28:41.860><c> when</c><00:28:42.760><c> I</c>

00:28:42.780 --> 00:28:42.790 align:start position:0%
print out let's say a result 2 when I
 

00:28:42.790 --> 00:28:45.300 align:start position:0%
print out let's say a result 2 when I
run<00:28:43.090><c> this</c><00:28:43.300><c> code</c><00:28:43.420><c> the</c><00:28:43.840><c> question</c><00:28:44.230><c> really</c><00:28:44.440><c> to</c><00:28:45.010><c> ask</c>

00:28:45.300 --> 00:28:45.310 align:start position:0%
run this code the question really to ask
 

00:28:45.310 --> 00:28:48.900 align:start position:0%
run this code the question really to ask
us<00:28:45.610><c> is</c><00:28:46.450><c> color</c><00:28:46.930><c> gonna</c><00:28:47.200><c> run</c><00:28:47.470><c> the</c><00:28:47.830><c> compute</c><00:28:48.430><c> method</c>

00:28:48.900 --> 00:28:48.910 align:start position:0%
us is color gonna run the compute method
 

00:28:48.910 --> 00:28:51.690 align:start position:0%
us is color gonna run the compute method
we<00:28:49.510><c> all</c><00:28:49.660><c> know</c><00:28:49.870><c> the</c><00:28:50.050><c> answer</c><00:28:50.080><c> foreign</c><00:28:50.920><c> compute</c>

00:28:51.690 --> 00:28:51.700 align:start position:0%
we all know the answer foreign compute
 

00:28:51.700 --> 00:28:55.040 align:start position:0%
we all know the answer foreign compute
will<00:28:51.850><c> not</c><00:28:52.090><c> run</c><00:28:52.480><c> Y</c><00:28:53.200><c> so</c><00:28:53.500><c> that's</c><00:28:54.280><c> called</c>

00:28:55.040 --> 00:28:55.050 align:start position:0%
will not run Y so that's called
 

00:28:55.050 --> 00:28:58.590 align:start position:0%
will not run Y so that's called
short-circuiting<00:28:56.080><c> hey</c><00:28:56.650><c> great</c><00:28:57.250><c> shot</c><00:28:58.000><c> securing</c>

00:28:58.590 --> 00:28:58.600 align:start position:0%
short-circuiting hey great shot securing
 

00:28:58.600 --> 00:29:00.810 align:start position:0%
short-circuiting hey great shot securing
is<00:28:58.690><c> another</c><00:28:59.140><c> example</c><00:28:59.290><c> of</c><00:28:59.740><c> laziness</c>

00:29:00.810 --> 00:29:00.820 align:start position:0%
is another example of laziness
 

00:29:00.820 --> 00:29:04.320 align:start position:0%
is another example of laziness
it<00:29:01.210><c> doesn't</c><00:29:01.810><c> evaluate</c><00:29:01.960><c> compute</c><00:29:02.850><c> unless</c><00:29:03.850><c> this</c>

00:29:04.320 --> 00:29:04.330 align:start position:0%
it doesn't evaluate compute unless this
 

00:29:04.330 --> 00:29:06.930 align:start position:0%
it doesn't evaluate compute unless this
one<00:29:04.630><c> turned</c><00:29:04.930><c> out</c><00:29:05.050><c> to</c><00:29:05.260><c> be</c><00:29:05.380><c> true</c><00:29:05.770><c> after</c><00:29:06.280><c> all</c>

00:29:06.930 --> 00:29:06.940 align:start position:0%
one turned out to be true after all
 

00:29:06.940 --> 00:29:09.540 align:start position:0%
one turned out to be true after all
so<00:29:07.360><c> we</c><00:29:07.570><c> know</c><00:29:07.810><c> that</c><00:29:07.980><c> conditionals</c><00:29:08.980><c> have</c><00:29:09.310><c> shots</c>

00:29:09.540 --> 00:29:09.550 align:start position:0%
so we know that conditionals have shots
 

00:29:09.550 --> 00:29:12.690 align:start position:0%
so we know that conditionals have shots
of<00:29:09.730><c> queuing</c><00:29:10.120><c> and</c><00:29:10.270><c> laziness</c><00:29:11.020><c> in</c><00:29:11.350><c> place</c><00:29:11.650><c> so</c><00:29:12.400><c> if</c><00:29:12.580><c> I</c>

00:29:12.690 --> 00:29:12.700 align:start position:0%
of queuing and laziness in place so if I
 

00:29:12.700 --> 00:29:15.870 align:start position:0%
of queuing and laziness in place so if I
go<00:29:12.850><c> back</c><00:29:12.880><c> here</c><00:29:13.270><c> and</c><00:29:13.480><c> say</c><00:29:13.780><c> called</c><00:29:14.620><c> right</c><00:29:15.400><c> here</c>

00:29:15.870 --> 00:29:15.880 align:start position:0%
go back here and say called right here
 

00:29:15.880 --> 00:29:17.820 align:start position:0%
go back here and say called right here
you<00:29:16.480><c> will</c><00:29:16.660><c> notice</c><00:29:17.050><c> that</c><00:29:17.080><c> it</c><00:29:17.320><c> was</c><00:29:17.500><c> actually</c>

00:29:17.820 --> 00:29:17.830 align:start position:0%
you will notice that it was actually
 

00:29:17.830 --> 00:29:21.420 align:start position:0%
you will notice that it was actually
never<00:29:18.520><c> called</c><00:29:18.850><c> that's</c><00:29:19.420><c> awesome</c><00:29:20.140><c> but</c><00:29:20.920><c> what</c><00:29:21.220><c> if</c>

00:29:21.420 --> 00:29:21.430 align:start position:0%
never called that's awesome but what if
 

00:29:21.430 --> 00:29:24.870 align:start position:0%
never called that's awesome but what if
we<00:29:21.670><c> take</c><00:29:21.940><c> this</c><00:29:22.180><c> out</c><00:29:22.480><c> of</c><00:29:22.540><c> here</c><00:29:22.930><c> and</c><00:29:23.590><c> call</c><00:29:24.370><c> it</c><00:29:24.400><c> him</c>

00:29:24.870 --> 00:29:24.880 align:start position:0%
we take this out of here and call it him
 

00:29:24.880 --> 00:29:28.350 align:start position:0%
we take this out of here and call it him
and<00:29:25.120><c> we</c><00:29:25.810><c> say</c><00:29:26.080><c> over</c><00:29:26.560><c> here</c><00:29:26.980><c> valid</c><00:29:27.850><c> temp</c><00:29:28.120><c> is</c><00:29:28.330><c> equal</c>

00:29:28.350 --> 00:29:28.360 align:start position:0%
and we say over here valid temp is equal
 

00:29:28.360 --> 00:29:32.280 align:start position:0%
and we say over here valid temp is equal
to<00:29:28.870><c> compute</c><00:29:29.670><c> sadly</c><00:29:30.670><c> though</c><00:29:30.940><c> this</c><00:29:31.510><c> time</c><00:29:31.810><c> how</c>

00:29:32.280 --> 00:29:32.290 align:start position:0%
to compute sadly though this time how
 

00:29:32.290 --> 00:29:35.610 align:start position:0%
to compute sadly though this time how
what<00:29:32.560><c> were</c><00:29:32.710><c> when</c><00:29:33.430><c> you</c><00:29:33.550><c> run</c><00:29:33.880><c> this</c><00:29:34.180><c> Scala</c><00:29:35.170><c> called</c>

00:29:35.610 --> 00:29:35.620 align:start position:0%
what were when you run this Scala called
 

00:29:35.620 --> 00:29:37.920 align:start position:0%
what were when you run this Scala called
the<00:29:35.890><c> compute</c><00:29:36.250><c> method</c><00:29:36.610><c> should</c><00:29:37.390><c> it</c><00:29:37.540><c> have</c><00:29:37.690><c> called</c>

00:29:37.920 --> 00:29:37.930 align:start position:0%
the compute method should it have called
 

00:29:37.930 --> 00:29:40.710 align:start position:0%
the compute method should it have called
no<00:29:38.710><c> of</c><00:29:38.890><c> course</c><00:29:39.190><c> not</c><00:29:39.520><c> we're</c><00:29:40.060><c> not</c><00:29:40.180><c> using</c><00:29:40.480><c> the</c>

00:29:40.710 --> 00:29:40.720 align:start position:0%
no of course not we're not using the
 

00:29:40.720 --> 00:29:43.170 align:start position:0%
no of course not we're not using the
result<00:29:40.960><c> of</c><00:29:41.080><c> compute</c><00:29:41.470><c> but</c><00:29:42.070><c> Scala</c><00:29:42.370><c> evaluated</c>

00:29:43.170 --> 00:29:43.180 align:start position:0%
result of compute but Scala evaluated
 

00:29:43.180 --> 00:29:46.650 align:start position:0%
result of compute but Scala evaluated
compute<00:29:43.680><c> eagerly</c><00:29:44.680><c> why</c><00:29:45.400><c> did</c><00:29:45.700><c> it</c><00:29:45.850><c> really</c><00:29:46.270><c> do</c><00:29:46.480><c> it</c>

00:29:46.650 --> 00:29:46.660 align:start position:0%
compute eagerly why did it really do it
 

00:29:46.660 --> 00:29:49.380 align:start position:0%
compute eagerly why did it really do it
the<00:29:47.110><c> reason</c><00:29:47.530><c> is</c><00:29:47.740><c> Scala</c><00:29:48.460><c> is</c><00:29:48.610><c> worried</c><00:29:49.030><c> that</c>

00:29:49.380 --> 00:29:49.390 align:start position:0%
the reason is Scala is worried that
 

00:29:49.390 --> 00:29:51.750 align:start position:0%
the reason is Scala is worried that
compute<00:29:50.050><c> may</c><00:29:50.140><c> have</c><00:29:50.320><c> a</c><00:29:50.350><c> side</c><00:29:50.620><c> effect</c><00:29:50.650><c> but</c><00:29:51.610><c> wait</c>

00:29:51.750 --> 00:29:51.760 align:start position:0%
compute may have a side effect but wait
 

00:29:51.760 --> 00:29:52.170 align:start position:0%
compute may have a side effect but wait
a<00:29:51.790><c> minute</c>

00:29:52.170 --> 00:29:52.180 align:start position:0%
a minute
 

00:29:52.180 --> 00:29:54.750 align:start position:0%
a minute
it<00:29:52.690><c> had</c><00:29:52.900><c> a</c><00:29:52.930><c> side</c><00:29:53.140><c> effect</c><00:29:53.380><c> a</c><00:29:53.470><c> minute</c><00:29:53.770><c> ago</c><00:29:54.040><c> when</c>

00:29:54.750 --> 00:29:54.760 align:start position:0%
it had a side effect a minute ago when
 

00:29:54.760 --> 00:29:57.900 align:start position:0%
it had a side effect a minute ago when
we<00:29:54.910><c> called</c><00:29:55.210><c> it</c><00:29:55.510><c> with</c><00:29:56.050><c> compute</c><00:29:56.530><c> right</c><00:29:56.740><c> here</c><00:29:57.130><c> so</c>

00:29:57.900 --> 00:29:57.910 align:start position:0%
we called it with compute right here so
 

00:29:57.910 --> 00:30:00.900 align:start position:0%
we called it with compute right here so
why<00:29:58.180><c> did</c><00:29:58.360><c> it</c><00:29:58.390><c> not</c><00:29:58.690><c> call</c><00:29:59.020><c> it</c><00:29:59.200><c> here</c><00:29:59.920><c> but</c><00:30:00.550><c> why</c><00:30:00.760><c> does</c>

00:30:00.900 --> 00:30:00.910 align:start position:0%
why did it not call it here but why does
 

00:30:00.910 --> 00:30:03.540 align:start position:0%
why did it not call it here but why does
it<00:30:00.940><c> call</c><00:30:01.180><c> it</c><00:30:01.330><c> now</c><00:30:01.510><c> the</c><00:30:02.320><c> answer</c><00:30:02.740><c> is</c><00:30:02.890><c> very</c><00:30:02.920><c> simple</c>

00:30:03.540 --> 00:30:03.550 align:start position:0%
it call it now the answer is very simple
 

00:30:03.550 --> 00:30:05.880 align:start position:0%
it call it now the answer is very simple
language<00:30:04.300><c> spec</c><00:30:04.780><c> the</c><00:30:05.500><c> language</c>

00:30:05.880 --> 00:30:05.890 align:start position:0%
language spec the language
 

00:30:05.890 --> 00:30:08.220 align:start position:0%
language spec the language
specifications<00:30:06.640><c> rule</c><00:30:07.230><c> language</c>

00:30:08.220 --> 00:30:08.230 align:start position:0%
specifications rule language
 

00:30:08.230 --> 00:30:10.980 align:start position:0%
specifications rule language
specifications<00:30:08.950><c> say</c><00:30:09.420><c> even</c><00:30:10.420><c> if</c><00:30:10.510><c> a</c><00:30:10.570><c> function</c>

00:30:10.980 --> 00:30:10.990 align:start position:0%
specifications say even if a function
 

00:30:10.990 --> 00:30:13.890 align:start position:0%
specifications say even if a function
were<00:30:11.260><c> to</c><00:30:11.440><c> have</c><00:30:11.560><c> a</c><00:30:11.590><c> side</c><00:30:11.920><c> effect</c><00:30:12.270><c> we</c><00:30:13.270><c> will</c><00:30:13.420><c> make</c>

00:30:13.890 --> 00:30:13.900 align:start position:0%
were to have a side effect we will make
 

00:30:13.900 --> 00:30:16.770 align:start position:0%
were to have a side effect we will make
we<00:30:14.110><c> may</c><00:30:14.290><c> not</c><00:30:14.440><c> call</c><00:30:14.800><c> them</c><00:30:15.130><c> if</c><00:30:15.970><c> those</c><00:30:16.420><c> are</c><00:30:16.600><c> in</c><00:30:16.720><c> a</c>

00:30:16.770 --> 00:30:16.780 align:start position:0%
we may not call them if those are in a
 

00:30:16.780 --> 00:30:20.250 align:start position:0%
we may not call them if those are in a
short-circuit<00:30:17.230><c> situation</c><00:30:18.130><c> so</c><00:30:19.020><c> language</c><00:30:20.020><c> spec</c>

00:30:20.250 --> 00:30:20.260 align:start position:0%
short-circuit situation so language spec
 

00:30:20.260 --> 00:30:22.590 align:start position:0%
short-circuit situation so language spec
language<00:30:21.100><c> say</c><00:30:21.310><c> is</c><00:30:21.490><c> there</c><00:30:21.760><c> you</c><00:30:22.090><c> know</c><00:30:22.180><c> times</c><00:30:22.420><c> we</c>

00:30:22.590 --> 00:30:22.600 align:start position:0%
language say is there you know times we
 

00:30:22.600 --> 00:30:24.270 align:start position:0%
language say is there you know times we
will<00:30:22.750><c> call</c><00:30:22.960><c> methods</c><00:30:23.380><c> if</c><00:30:23.530><c> they</c><00:30:23.920><c> have</c><00:30:24.070><c> side</c>

00:30:24.270 --> 00:30:24.280 align:start position:0%
will call methods if they have side
 

00:30:24.280 --> 00:30:26.190 align:start position:0%
will call methods if they have side
effect<00:30:24.640><c> here</c><00:30:25.270><c> are</c><00:30:25.390><c> times</c><00:30:25.600><c> when</c><00:30:25.810><c> we</c><00:30:25.930><c> may</c><00:30:26.080><c> not</c>

00:30:26.190 --> 00:30:26.200 align:start position:0%
effect here are times when we may not
 

00:30:26.200 --> 00:30:28.560 align:start position:0%
effect here are times when we may not
even<00:30:26.500><c> call</c><00:30:26.710><c> it</c><00:30:26.950><c> even</c><00:30:27.670><c> if</c><00:30:27.760><c> it</c><00:30:27.880><c> has</c><00:30:28.030><c> side</c><00:30:28.240><c> effect</c>

00:30:28.560 --> 00:30:28.570 align:start position:0%
even call it even if it has side effect
 

00:30:28.570 --> 00:30:31.320 align:start position:0%
even call it even if it has side effect
so<00:30:28.990><c> it</c><00:30:29.110><c> really</c><00:30:29.650><c> boils</c><00:30:30.010><c> down</c><00:30:30.070><c> to</c><00:30:30.370><c> language</c>

00:30:31.320 --> 00:30:31.330 align:start position:0%
so it really boils down to language
 

00:30:31.330 --> 00:30:33.570 align:start position:0%
so it really boils down to language
specifications<00:30:31.990><c> and</c><00:30:32.560><c> in</c><00:30:32.710><c> Scala</c><00:30:33.010><c> chose</c><00:30:33.340><c> to</c>

00:30:33.570 --> 00:30:33.580 align:start position:0%
specifications and in Scala chose to
 

00:30:33.580 --> 00:30:37.020 align:start position:0%
specifications and in Scala chose to
call<00:30:33.730><c> methods</c><00:30:34.320><c> unless</c><00:30:35.320><c> you</c><00:30:36.280><c> are</c><00:30:36.550><c> using</c><00:30:36.730><c> in</c><00:30:36.970><c> a</c>

00:30:37.020 --> 00:30:37.030 align:start position:0%
call methods unless you are using in a
 

00:30:37.030 --> 00:30:40.110 align:start position:0%
call methods unless you are using in a
short<00:30:37.300><c> circuited</c><00:30:37.630><c> situation</c><00:30:38.320><c> are</c><00:30:39.090><c> you</c>

00:30:40.110 --> 00:30:40.120 align:start position:0%
short circuited situation are you
 

00:30:40.120 --> 00:30:45.060 align:start position:0%
short circuited situation are you
predominantly<00:30:41.050><c> tell</c><00:30:41.740><c> Scala</c><00:30:42.550><c> it's</c><00:30:43.540><c> okay</c><00:30:44.260><c> by</c>

00:30:45.060 --> 00:30:45.070 align:start position:0%
predominantly tell Scala it's okay by
 

00:30:45.070 --> 00:30:48.990 align:start position:0%
predominantly tell Scala it's okay by
marking<00:30:45.520><c> it</c><00:30:45.640><c> as</c><00:30:45.790><c> lazy</c><00:30:46.450><c> by</c><00:30:47.290><c> saying</c><00:30:47.620><c> lazy</c><00:30:48.070><c> you</c>

00:30:48.990 --> 00:30:49.000 align:start position:0%
marking it as lazy by saying lazy you
 

00:30:49.000 --> 00:30:51.150 align:start position:0%
marking it as lazy by saying lazy you
are<00:30:49.150><c> saying</c><00:30:49.390><c> don't</c><00:30:50.080><c> bother</c><00:30:50.260><c> running</c><00:30:50.530><c> this</c><00:30:50.890><c> if</c>

00:30:51.150 --> 00:30:51.160 align:start position:0%
are saying don't bother running this if
 

00:30:51.160 --> 00:30:53.550 align:start position:0%
are saying don't bother running this if
you<00:30:51.490><c> really</c><00:30:51.700><c> don't</c><00:30:52.000><c> need</c><00:30:52.240><c> it</c><00:30:52.420><c> as</c><00:30:53.230><c> you</c><00:30:53.380><c> can</c><00:30:53.500><c> see</c>

00:30:53.550 --> 00:30:53.560 align:start position:0%
you really don't need it as you can see
 

00:30:53.560 --> 00:30:56.720 align:start position:0%
you really don't need it as you can see
in<00:30:53.830><c> this</c><00:30:53.920><c> example</c><00:30:54.040><c> if</c><00:30:54.640><c> I</c><00:30:55.180><c> change</c><00:30:55.480><c> it</c><00:30:55.600><c> to</c><00:30:55.840><c> a</c><00:30:56.110><c> one</c>

00:30:56.720 --> 00:30:56.730 align:start position:0%
in this example if I change it to a one
 

00:30:56.730 --> 00:31:00.510 align:start position:0%
in this example if I change it to a one
you<00:30:57.730><c> will</c><00:30:57.910><c> notice</c><00:30:58.330><c> that</c><00:30:58.540><c> it</c><00:30:59.080><c> did</c><00:30:59.320><c> call</c><00:30:59.650><c> it</c><00:30:59.830><c> but</c>

00:31:00.510 --> 00:31:00.520 align:start position:0%
you will notice that it did call it but
 

00:31:00.520 --> 00:31:03.330 align:start position:0%
you will notice that it did call it but
if<00:31:00.730><c> I</c><00:31:00.880><c> put</c><00:31:01.150><c> a</c><00:31:01.180><c> five</c><00:31:01.480><c> here</c><00:31:01.990><c> it</c><00:31:02.230><c> doesn't</c><00:31:02.800><c> call</c><00:31:03.160><c> it</c>

00:31:03.330 --> 00:31:03.340 align:start position:0%
if I put a five here it doesn't call it
 

00:31:03.340 --> 00:31:06.450 align:start position:0%
if I put a five here it doesn't call it
that's<00:31:03.730><c> being</c><00:31:04.120><c> lazy</c><00:31:04.540><c> as</c><00:31:04.960><c> we</c><00:31:05.170><c> can</c><00:31:05.350><c> see</c><00:31:05.530><c> really</c>

00:31:06.450 --> 00:31:06.460 align:start position:0%
that's being lazy as we can see really
 

00:31:06.460 --> 00:31:08.760 align:start position:0%
that's being lazy as we can see really
beautiful<00:31:06.940><c> as</c><00:31:07.030><c> ended</c><00:31:07.330><c> so</c><00:31:07.900><c> you</c>

00:31:08.760 --> 00:31:08.770 align:start position:0%
beautiful as ended so you
 

00:31:08.770 --> 00:31:10.500 align:start position:0%
beautiful as ended so you
have<00:31:08.920><c> these</c><00:31:09.130><c> tweaks</c><00:31:09.580><c> and</c><00:31:09.850><c> languages</c><00:31:10.330><c> which</c>

00:31:10.500 --> 00:31:10.510 align:start position:0%
have these tweaks and languages which
 

00:31:10.510 --> 00:31:12.840 align:start position:0%
have these tweaks and languages which
you<00:31:10.630><c> can</c><00:31:10.810><c> use</c><00:31:11.140><c> to</c><00:31:11.470><c> control</c><00:31:11.800><c> whether</c><00:31:12.640><c> the</c>

00:31:12.840 --> 00:31:12.850 align:start position:0%
you can use to control whether the
 

00:31:12.850 --> 00:31:14.610 align:start position:0%
you can use to control whether the
language<00:31:12.970><c> is</c><00:31:13.270><c> gonna</c><00:31:13.450><c> exercise</c><00:31:13.900><c> something</c><00:31:14.350><c> or</c>

00:31:14.610 --> 00:31:14.620 align:start position:0%
language is gonna exercise something or
 

00:31:14.620 --> 00:31:16.770 align:start position:0%
language is gonna exercise something or
it's<00:31:15.040><c> not</c><00:31:15.340><c> going</c><00:31:15.670><c> to</c><00:31:15.910><c> exercise</c><00:31:16.150><c> something</c>

00:31:16.770 --> 00:31:16.780 align:start position:0%
it's not going to exercise something
 

00:31:16.780 --> 00:31:19.560 align:start position:0%
it's not going to exercise something
very<00:31:17.350><c> powerful</c><00:31:17.650><c> as</c><00:31:18.070><c> you</c><00:31:18.190><c> can</c><00:31:18.340><c> see</c><00:31:18.520><c> but</c><00:31:19.390><c> what's</c>

00:31:19.560 --> 00:31:19.570 align:start position:0%
very powerful as you can see but what's
 

00:31:19.570 --> 00:31:21.990 align:start position:0%
very powerful as you can see but what's
really<00:31:19.750><c> special</c><00:31:20.050><c> about</c><00:31:20.380><c> Java</c><00:31:21.130><c> though</c><00:31:21.280><c> well</c>

00:31:21.990 --> 00:31:22.000 align:start position:0%
really special about Java though well
 

00:31:22.000 --> 00:31:24.690 align:start position:0%
really special about Java though well
Java<00:31:22.480><c> has</c><00:31:22.630><c> been</c><00:31:22.870><c> predominantly</c><00:31:23.260><c> a</c><00:31:23.830><c> imperative</c>

00:31:24.690 --> 00:31:24.700 align:start position:0%
Java has been predominantly a imperative
 

00:31:24.700 --> 00:31:26.430 align:start position:0%
Java has been predominantly a imperative
style<00:31:24.970><c> an</c><00:31:25.180><c> object-oriented</c><00:31:25.810><c> style</c><00:31:26.230><c> of</c>

00:31:26.430 --> 00:31:26.440 align:start position:0%
style an object-oriented style of
 

00:31:26.440 --> 00:31:28.650 align:start position:0%
style an object-oriented style of
programming<00:31:26.590><c> language</c><00:31:27.370><c> so</c><00:31:28.150><c> this</c><00:31:28.330><c> has</c><00:31:28.510><c> been</c>

00:31:28.650 --> 00:31:28.660 align:start position:0%
programming language so this has been
 

00:31:28.660 --> 00:31:31.290 align:start position:0%
programming language so this has been
our<00:31:28.840><c> experience</c><00:31:29.590><c> in</c><00:31:29.830><c> the</c><00:31:29.950><c> past</c><00:31:30.160><c> so</c><00:31:31.000><c> when</c><00:31:31.180><c> it</c>

00:31:31.290 --> 00:31:31.300 align:start position:0%
our experience in the past so when it
 

00:31:31.300 --> 00:31:34.910 align:start position:0%
our experience in the past so when it
comes<00:31:31.510><c> to</c><00:31:31.750><c> Java</c><00:31:32.140><c> 7</c><00:31:32.650><c> and</c><00:31:33.010><c> earlier</c><00:31:33.730><c> we</c><00:31:34.720><c> did</c>

00:31:34.910 --> 00:31:34.920 align:start position:0%
comes to Java 7 and earlier we did
 

00:31:34.920 --> 00:31:38.610 align:start position:0%
comes to Java 7 and earlier we did
imperative<00:31:35.920><c> plus</c><00:31:36.990><c> object-oriented</c><00:31:37.990><c> and</c>

00:31:38.610 --> 00:31:38.620 align:start position:0%
imperative plus object-oriented and
 

00:31:38.620 --> 00:31:41.340 align:start position:0%
imperative plus object-oriented and
that's<00:31:39.190><c> been</c><00:31:39.490><c> the</c><00:31:39.880><c> real</c><00:31:40.060><c> mode</c><00:31:40.390><c> of</c><00:31:40.540><c> programming</c>

00:31:41.340 --> 00:31:41.350 align:start position:0%
that's been the real mode of programming
 

00:31:41.350 --> 00:31:46.200 align:start position:0%
that's been the real mode of programming
in<00:31:42.160><c> Java</c><00:31:42.640><c> itself</c><00:31:43.180><c> but</c><00:31:43.990><c> starting</c><00:31:44.740><c> with</c><00:31:44.770><c> Java</c><00:31:45.310><c> 8</c>

00:31:46.200 --> 00:31:46.210 align:start position:0%
in Java itself but starting with Java 8
 

00:31:46.210 --> 00:31:50.430 align:start position:0%
in Java itself but starting with Java 8
what<00:31:47.200><c> we</c><00:31:47.350><c> can</c><00:31:47.590><c> do</c><00:31:47.800><c> is</c><00:31:48.070><c> sure</c><00:31:48.760><c> you</c><00:31:49.120><c> can</c><00:31:49.440><c> program</c>

00:31:50.430 --> 00:31:50.440 align:start position:0%
what we can do is sure you can program
 

00:31:50.440 --> 00:31:53.730 align:start position:0%
what we can do is sure you can program
and<00:31:51.370><c> later</c><00:31:51.910><c> let's</c><00:31:52.270><c> say</c><00:31:52.450><c> Sheree</c><00:31:53.110><c> can</c><00:31:53.320><c> program</c>

00:31:53.730 --> 00:31:53.740 align:start position:0%
and later let's say Sheree can program
 

00:31:53.740 --> 00:31:56.880 align:start position:0%
and later let's say Sheree can program
an<00:31:53.950><c> interactive</c><00:31:54.460><c> style</c><00:31:54.700><c> if</c><00:31:55.030><c> you</c><00:31:55.240><c> want</c><00:31:55.600><c> to</c><00:31:55.900><c> but</c>

00:31:56.880 --> 00:31:56.890 align:start position:0%
an interactive style if you want to but
 

00:31:56.890 --> 00:31:59.810 align:start position:0%
an interactive style if you want to but
you<00:31:57.160><c> can</c><00:31:57.310><c> also</c><00:31:57.460><c> do</c><00:31:57.790><c> functional</c><00:31:58.500><c> +</c>

00:31:59.810 --> 00:31:59.820 align:start position:0%
you can also do functional +
 

00:31:59.820 --> 00:32:03.030 align:start position:0%
you can also do functional +
object-oriented<00:32:00.820><c> with</c><00:32:01.780><c> the</c><00:32:01.930><c> hope</c><00:32:02.170><c> that</c><00:32:02.200><c> we</c>

00:32:03.030 --> 00:32:03.040 align:start position:0%
object-oriented with the hope that we
 

00:32:03.040 --> 00:32:05.670 align:start position:0%
object-oriented with the hope that we
will<00:32:03.220><c> do</c><00:32:03.340><c> predominantly</c><00:32:04.240><c> a</c><00:32:04.680><c> functional</c>

00:32:05.670 --> 00:32:05.680 align:start position:0%
will do predominantly a functional
 

00:32:05.680 --> 00:32:08.420 align:start position:0%
will do predominantly a functional
rather<00:32:05.950><c> than</c><00:32:06.280><c> object</c><00:32:07.180><c> rather</c><00:32:08.170><c> than</c>

00:32:08.420 --> 00:32:08.430 align:start position:0%
rather than object rather than
 

00:32:08.430 --> 00:32:11.700 align:start position:0%
rather than object rather than
imperative<00:32:09.430><c> rather</c><00:32:09.760><c> so</c><00:32:10.480><c> the</c><00:32:10.990><c> real</c><00:32:11.140><c> culprit</c>

00:32:11.700 --> 00:32:11.710 align:start position:0%
imperative rather so the real culprit
 

00:32:11.710 --> 00:32:14.070 align:start position:0%
imperative rather so the real culprit
here<00:32:11.740><c> is</c><00:32:12.190><c> not</c><00:32:12.430><c> object-oriented</c><00:32:13.060><c> the</c><00:32:13.900><c> real</c>

00:32:14.070 --> 00:32:14.080 align:start position:0%
here is not object-oriented the real
 

00:32:14.080 --> 00:32:16.380 align:start position:0%
here is not object-oriented the real
culprit<00:32:14.560><c> here</c><00:32:14.710><c> is</c><00:32:14.800><c> the</c><00:32:15.030><c> imperative</c><00:32:16.030><c> style</c><00:32:16.240><c> of</c>

00:32:16.380 --> 00:32:16.390 align:start position:0%
culprit here is the imperative style of
 

00:32:16.390 --> 00:32:18.810 align:start position:0%
culprit here is the imperative style of
programming<00:32:16.510><c> by</c><00:32:17.500><c> replacing</c><00:32:18.010><c> the</c><00:32:18.310><c> imperative</c>

00:32:18.810 --> 00:32:18.820 align:start position:0%
programming by replacing the imperative
 

00:32:18.820 --> 00:32:20.550 align:start position:0%
programming by replacing the imperative
with<00:32:18.970><c> functional</c><00:32:19.630><c> we</c><00:32:20.200><c> could</c><00:32:20.350><c> still</c><00:32:20.530><c> use</c>

00:32:20.550 --> 00:32:20.560 align:start position:0%
with functional we could still use
 

00:32:20.560 --> 00:32:22.470 align:start position:0%
with functional we could still use
infrared<00:32:20.890><c> if</c><00:32:21.100><c> you</c><00:32:21.190><c> wanted</c><00:32:21.610><c> to</c><00:32:21.790><c> but</c><00:32:22.270><c> we</c><00:32:22.450><c> have</c>

00:32:22.470 --> 00:32:22.480 align:start position:0%
infrared if you wanted to but we have
 

00:32:22.480 --> 00:32:24.900 align:start position:0%
infrared if you wanted to but we have
the<00:32:22.690><c> ability</c><00:32:23.140><c> to</c><00:32:23.170><c> replace</c><00:32:23.530><c> at</c><00:32:23.740><c> ports</c><00:32:24.130><c> we</c><00:32:24.700><c> can</c>

00:32:24.900 --> 00:32:24.910 align:start position:0%
the ability to replace at ports we can
 

00:32:24.910 --> 00:32:26.940 align:start position:0%
the ability to replace at ports we can
get<00:32:25.120><c> some</c><00:32:25.480><c> really</c><00:32:25.690><c> good</c><00:32:25.900><c> benefits</c><00:32:26.350><c> and</c><00:32:26.560><c> the</c>

00:32:26.940 --> 00:32:26.950 align:start position:0%
get some really good benefits and the
 

00:32:26.950 --> 00:32:28.680 align:start position:0%
get some really good benefits and the
benefit<00:32:27.370><c> as</c><00:32:27.460><c> you</c><00:32:27.580><c> can</c><00:32:27.730><c> see</c><00:32:27.880><c> in</c><00:32:28.030><c> this</c><00:32:28.180><c> case</c><00:32:28.360><c> is</c>

00:32:28.680 --> 00:32:28.690 align:start position:0%
benefit as you can see in this case is
 

00:32:28.690 --> 00:32:32.190 align:start position:0%
benefit as you can see in this case is
that<00:32:29.350><c> charming</c><00:32:30.070><c> feature</c><00:32:30.400><c> of</c><00:32:30.820><c> how</c><00:32:31.540><c> we</c><00:32:31.600><c> could</c><00:32:31.990><c> do</c>

00:32:32.190 --> 00:32:32.200 align:start position:0%
that charming feature of how we could do
 

00:32:32.200 --> 00:32:34.800 align:start position:0%
that charming feature of how we could do
this<00:32:32.410><c> in</c><00:32:32.650><c> the</c><00:32:32.860><c> function</c><00:32:33.820><c> composition</c><00:32:34.510><c> style</c>

00:32:34.800 --> 00:32:34.810 align:start position:0%
this in the function composition style
 

00:32:34.810 --> 00:32:37.170 align:start position:0%
this in the function composition style
but<00:32:35.590><c> before</c><00:32:35.950><c> we</c><00:32:36.070><c> talk</c><00:32:36.310><c> about</c><00:32:36.340><c> this</c><00:32:36.850><c> though</c>

00:32:37.170 --> 00:32:37.180 align:start position:0%
but before we talk about this though
 

00:32:37.180 --> 00:32:39.630 align:start position:0%
but before we talk about this though
let's<00:32:37.870><c> talk</c><00:32:38.050><c> about</c><00:32:38.200><c> one</c><00:32:38.800><c> benefit</c><00:32:39.400><c> and</c><00:32:39.520><c> how</c><00:32:39.580><c> we</c>

00:32:39.630 --> 00:32:39.640 align:start position:0%
let's talk about one benefit and how we
 

00:32:39.640 --> 00:32:42.120 align:start position:0%
let's talk about one benefit and how we
can<00:32:39.820><c> achieve</c><00:32:39.970><c> that</c><00:32:40.180><c> benefit</c><00:32:40.840><c> so</c><00:32:41.350><c> the</c><00:32:41.920><c> real</c>

00:32:42.120 --> 00:32:42.130 align:start position:0%
can achieve that benefit so the real
 

00:32:42.130 --> 00:32:45.330 align:start position:0%
can achieve that benefit so the real
charm<00:32:42.550><c> here</c><00:32:42.850><c> in</c><00:32:43.000><c> Java</c><00:32:43.330><c> 8</c><00:32:43.600><c> is</c><00:32:43.900><c> that</c><00:32:44.740><c> Java</c><00:32:45.130><c> 8</c>

00:32:45.330 --> 00:32:45.340 align:start position:0%
charm here in Java 8 is that Java 8
 

00:32:45.340 --> 00:32:48.210 align:start position:0%
charm here in Java 8 is that Java 8
actually<00:32:45.990><c> does</c><00:32:46.990><c> something</c><00:32:47.260><c> a</c><00:32:47.470><c> lot</c><00:32:47.590><c> more</c><00:32:47.650><c> than</c>

00:32:48.210 --> 00:32:48.220 align:start position:0%
actually does something a lot more than
 

00:32:48.220 --> 00:32:51.150 align:start position:0%
actually does something a lot more than
providing<00:32:48.910><c> just</c><00:32:49.660><c> a</c><00:32:49.870><c> functional</c><00:32:50.530><c> style</c><00:32:50.950><c> of</c>

00:32:51.150 --> 00:32:51.160 align:start position:0%
providing just a functional style of
 

00:32:51.160 --> 00:32:53.310 align:start position:0%
providing just a functional style of
programming<00:32:51.310><c> Java</c><00:32:52.210><c> did</c><00:32:52.570><c> not</c><00:32:52.750><c> walk</c><00:32:53.110><c> away</c>

00:32:53.310 --> 00:32:53.320 align:start position:0%
programming Java did not walk away
 

00:32:53.320 --> 00:32:56.460 align:start position:0%
programming Java did not walk away
saying<00:32:53.770><c> here</c><00:32:54.430><c> are</c><00:32:54.460><c> lambdas</c><00:32:55.060><c> good</c><00:32:55.510><c> luck</c><00:32:55.750><c> what</c>

00:32:56.460 --> 00:32:56.470 align:start position:0%
saying here are lambdas good luck what
 

00:32:56.470 --> 00:32:58.470 align:start position:0%
saying here are lambdas good luck what
was<00:32:56.590><c> right</c><00:32:56.770><c> in</c><00:32:56.890><c> the</c><00:32:56.980><c> Java</c><00:32:57.160><c> 8</c><00:32:57.370><c> book</c><00:32:57.730><c> I</c><00:32:57.970><c> don't</c>

00:32:58.470 --> 00:32:58.480 align:start position:0%
was right in the Java 8 book I don't
 

00:32:58.480 --> 00:33:00.510 align:start position:0%
was right in the Java 8 book I don't
something<00:32:58.720><c> in</c><00:32:58.810><c> the</c><00:32:58.930><c> book</c><00:32:59.170><c> which</c><00:32:59.680><c> really</c>

00:33:00.510 --> 00:33:00.520 align:start position:0%
something in the book which really
 

00:33:00.520 --> 00:33:02.280 align:start position:0%
something in the book which really
surprised<00:33:00.970><c> me</c><00:33:01.000><c> that</c><00:33:01.270><c> even</c><00:33:01.480><c> I</c><00:33:01.540><c> wrote</c><00:33:01.780><c> it</c><00:33:01.930><c> but</c><00:33:02.080><c> my</c>

00:33:02.280 --> 00:33:02.290 align:start position:0%
surprised me that even I wrote it but my
 

00:33:02.290 --> 00:33:04.650 align:start position:0%
surprised me that even I wrote it but my
statement<00:33:02.740><c> was</c><00:33:02.890><c> that</c><00:33:03.420><c> lambdas</c><00:33:04.420><c> of</c><00:33:04.540><c> the</c>

00:33:04.650 --> 00:33:04.660 align:start position:0%
statement was that lambdas of the
 

00:33:04.660 --> 00:33:07.080 align:start position:0%
statement was that lambdas of the
gateway<00:33:04.990><c> drug</c><00:33:05.350><c> but</c><00:33:06.010><c> streams</c><00:33:06.460><c> are</c><00:33:06.790><c> the</c><00:33:06.940><c> real</c>

00:33:07.080 --> 00:33:07.090 align:start position:0%
gateway drug but streams are the real
 

00:33:07.090 --> 00:33:09.320 align:start position:0%
gateway drug but streams are the real
addiction<00:33:07.540><c> so</c><00:33:08.290><c> the</c><00:33:08.380><c> point</c><00:33:08.620><c> really</c><00:33:08.830><c> is</c><00:33:09.190><c> that</c>

00:33:09.320 --> 00:33:09.330 align:start position:0%
addiction so the point really is that
 

00:33:09.330 --> 00:33:12.480 align:start position:0%
addiction so the point really is that
the<00:33:10.330><c> lambdas</c><00:33:10.990><c> really</c><00:33:11.500><c> draw</c><00:33:11.710><c> you</c><00:33:11.770><c> in</c>

00:33:12.480 --> 00:33:12.490 align:start position:0%
the lambdas really draw you in
 

00:33:12.490 --> 00:33:14.070 align:start position:0%
the lambdas really draw you in
but<00:33:13.000><c> the</c><00:33:13.150><c> streams</c><00:33:13.450><c> are</c><00:33:13.690><c> the</c><00:33:13.720><c> ones</c><00:33:13.900><c> that</c><00:33:13.990><c> are</c>

00:33:14.070 --> 00:33:14.080 align:start position:0%
but the streams are the ones that are
 

00:33:14.080 --> 00:33:15.930 align:start position:0%
but the streams are the ones that are
going<00:33:14.170><c> to</c><00:33:14.260><c> keep</c><00:33:14.440><c> you</c><00:33:14.620><c> and</c><00:33:14.770><c> because</c><00:33:15.100><c> if</c><00:33:15.760><c> you</c>

00:33:15.930 --> 00:33:15.940 align:start position:0%
going to keep you and because if you
 

00:33:15.940 --> 00:33:17.070 align:start position:0%
going to keep you and because if you
don't<00:33:16.090><c> have</c><00:33:16.210><c> performance</c><00:33:16.840><c> you're</c><00:33:16.960><c> gonna</c>

00:33:17.070 --> 00:33:17.080 align:start position:0%
don't have performance you're gonna
 

00:33:17.080 --> 00:33:19.770 align:start position:0%
don't have performance you're gonna
leave<00:33:17.410><c> as</c><00:33:17.710><c> soon</c><00:33:17.740><c> as</c><00:33:18.040><c> you</c><00:33:18.160><c> come</c><00:33:18.400><c> in</c><00:33:18.550><c> but</c><00:33:19.300><c> how</c><00:33:19.720><c> do</c>

00:33:19.770 --> 00:33:19.780 align:start position:0%
leave as soon as you come in but how do
 

00:33:19.780 --> 00:33:22.080 align:start position:0%
leave as soon as you come in but how do
streams<00:33:20.260><c> give</c><00:33:20.530><c> us</c><00:33:20.620><c> performance</c><00:33:21.250><c> let's</c><00:33:21.850><c> talk</c>

00:33:22.080 --> 00:33:22.090 align:start position:0%
streams give us performance let's talk
 

00:33:22.090 --> 00:33:22.590 align:start position:0%
streams give us performance let's talk
about

00:33:22.590 --> 00:33:22.600 align:start position:0%
about
 

00:33:22.600 --> 00:33:24.870 align:start position:0%
about
real<00:33:22.960><c> quick</c><00:33:23.260><c> let's</c><00:33:23.530><c> get</c><00:33:24.400><c> back</c><00:33:24.610><c> to</c><00:33:24.760><c> this</c>

00:33:24.870 --> 00:33:24.880 align:start position:0%
real quick let's get back to this
 

00:33:24.880 --> 00:33:28.049 align:start position:0%
real quick let's get back to this
example<00:33:25.419><c> real</c><00:33:25.600><c> fast</c><00:33:26.470><c> and</c><00:33:26.679><c> understand</c><00:33:27.250><c> a</c><00:33:27.460><c> one</c>

00:33:28.049 --> 00:33:28.059 align:start position:0%
example real fast and understand a one
 

00:33:28.059 --> 00:33:30.510 align:start position:0%
example real fast and understand a one
key<00:33:28.299><c> difference</c><00:33:28.650><c> notice</c><00:33:29.650><c> that</c><00:33:29.890><c> an</c><00:33:30.010><c> exam</c><00:33:30.340><c> in</c>

00:33:30.510 --> 00:33:30.520 align:start position:0%
key difference notice that an exam in
 

00:33:30.520 --> 00:33:33.390 align:start position:0%
key difference notice that an exam in
this<00:33:30.610><c> example</c><00:33:30.970><c> we</c><00:33:31.179><c> have</c><00:33:31.210><c> stream</c><00:33:31.870><c> a</c><00:33:32.260><c> stream</c><00:33:32.770><c> is</c>

00:33:33.390 --> 00:33:33.400 align:start position:0%
this example we have stream a stream is
 

00:33:33.400 --> 00:33:36.390 align:start position:0%
this example we have stream a stream is
very<00:33:33.700><c> different</c><00:33:34.150><c> from</c><00:33:34.330><c> a</c><00:33:34.570><c> list</c><00:33:35.190><c> let's</c><00:33:36.190><c> talk</c>

00:33:36.390 --> 00:33:36.400 align:start position:0%
very different from a list let's talk
 

00:33:36.400 --> 00:33:38.370 align:start position:0%
very different from a list let's talk
about<00:33:36.549><c> these</c><00:33:36.880><c> two</c><00:33:37.120><c> for</c><00:33:37.390><c> a</c><00:33:37.419><c> minute</c><00:33:37.780><c> put</c><00:33:38.230><c> the</c>

00:33:38.370 --> 00:33:38.380 align:start position:0%
about these two for a minute put the
 

00:33:38.380 --> 00:33:41.669 align:start position:0%
about these two for a minute put the
word<00:33:38.620><c> list</c><00:33:39.160><c> down</c><00:33:39.460><c> for</c><00:33:39.850><c> a</c><00:33:39.880><c> second</c><00:33:40.450><c> and</c><00:33:41.110><c> also</c><00:33:41.410><c> for</c>

00:33:41.669 --> 00:33:41.679 align:start position:0%
word list down for a second and also for
 

00:33:41.679 --> 00:33:46.320 align:start position:0%
word list down for a second and also for
the<00:33:41.799><c> word</c><00:33:42.010><c> stream</c><00:33:43.020><c> list</c><00:33:44.020><c> is</c><00:33:44.320><c> concrete</c><00:33:45.309><c> on</c><00:33:45.610><c> the</c>

00:33:46.320 --> 00:33:46.330 align:start position:0%
the word stream list is concrete on the
 

00:33:46.330 --> 00:33:50.070 align:start position:0%
the word stream list is concrete on the
other<00:33:46.510><c> hand</c><00:33:46.780><c> stream</c><00:33:47.230><c> is</c><00:33:47.980><c> an</c><00:33:48.400><c> abstraction</c><00:33:49.330><c> yeah</c>

00:33:50.070 --> 00:33:50.080 align:start position:0%
other hand stream is an abstraction yeah
 

00:33:50.080 --> 00:33:51.360 align:start position:0%
other hand stream is an abstraction yeah
what<00:33:50.440><c> does</c><00:33:50.530><c> that</c><00:33:50.559><c> really</c><00:33:50.799><c> mean</c>

00:33:51.360 --> 00:33:51.370 align:start position:0%
what does that really mean
 

00:33:51.370 --> 00:33:55.740 align:start position:0%
what does that really mean
list<00:33:52.090><c> is</c><00:33:52.330><c> a</c><00:33:52.360><c> container</c><00:33:53.039><c> well</c><00:33:54.039><c> this</c><00:33:54.610><c> is</c><00:33:54.909><c> a</c>

00:33:55.740 --> 00:33:55.750 align:start position:0%
list is a container well this is a
 

00:33:55.750 --> 00:33:58.289 align:start position:0%
list is a container well this is a
series<00:33:56.320><c> of</c><00:33:56.500><c> functions</c><00:33:57.100><c> that</c><00:33:57.309><c> still</c><00:33:58.120><c> doesn't</c>

00:33:58.289 --> 00:33:58.299 align:start position:0%
series of functions that still doesn't
 

00:33:58.299 --> 00:34:01.049 align:start position:0%
series of functions that still doesn't
ring<00:33:58.510><c> the</c><00:33:58.690><c> bell</c><00:33:58.840><c> think</c><00:33:59.620><c> of</c><00:33:59.740><c> the</c><00:33:59.799><c> word</c><00:34:00.010><c> bucket</c><00:34:00.820><c> I</c>

00:34:01.049 --> 00:34:01.059 align:start position:0%
ring the bell think of the word bucket I
 

00:34:01.059 --> 00:34:03.480 align:start position:0%
ring the bell think of the word bucket I
can<00:34:01.870><c> have</c><00:34:02.020><c> a</c><00:34:02.049><c> bucket</c><00:34:02.500><c> with</c><00:34:02.710><c> a</c><00:34:02.740><c> pile</c><00:34:03.010><c> of</c><00:34:03.039><c> water</c>

00:34:03.480 --> 00:34:03.490 align:start position:0%
can have a bucket with a pile of water
 

00:34:03.490 --> 00:34:06.539 align:start position:0%
can have a bucket with a pile of water
the<00:34:04.330><c> bucket</c><00:34:04.809><c> contains</c><00:34:05.200><c> water</c><00:34:05.590><c> in</c><00:34:05.919><c> it</c><00:34:06.070><c> I</c><00:34:06.280><c> can</c>

00:34:06.539 --> 00:34:06.549 align:start position:0%
the bucket contains water in it I can
 

00:34:06.549 --> 00:34:09.930 align:start position:0%
the bucket contains water in it I can
store<00:34:07.150><c> the</c><00:34:07.179><c> water</c><00:34:07.570><c> in</c><00:34:07.929><c> a</c><00:34:08.020><c> bucket</c><00:34:08.200><c> I</c><00:34:08.560><c> can</c><00:34:09.460><c> come</c>

00:34:09.930 --> 00:34:09.940 align:start position:0%
store the water in a bucket I can come
 

00:34:09.940 --> 00:34:13.050 align:start position:0%
store the water in a bucket I can come
back<00:34:10.090><c> and</c><00:34:10.149><c> use</c><00:34:11.109><c> the</c><00:34:11.379><c> water</c><00:34:11.619><c> stored</c><00:34:12.550><c> in</c><00:34:12.820><c> the</c>

00:34:13.050 --> 00:34:13.060 align:start position:0%
back and use the water stored in the
 

00:34:13.060 --> 00:34:16.379 align:start position:0%
back and use the water stored in the
bucket<00:34:13.450><c> list</c><00:34:14.409><c> is</c><00:34:14.619><c> a</c><00:34:14.649><c> container</c><00:34:15.280><c> we</c><00:34:15.970><c> store</c>

00:34:16.379 --> 00:34:16.389 align:start position:0%
bucket list is a container we store
 

00:34:16.389 --> 00:34:19.500 align:start position:0%
bucket list is a container we store
stuff<00:34:16.750><c> into</c><00:34:17.260><c> it</c><00:34:17.409><c> a</c><00:34:17.760><c> stream</c><00:34:18.760><c> on</c><00:34:19.030><c> the</c><00:34:19.060><c> other</c><00:34:19.270><c> hand</c>

00:34:19.500 --> 00:34:19.510 align:start position:0%
stuff into it a stream on the other hand
 

00:34:19.510 --> 00:34:23.460 align:start position:0%
stuff into it a stream on the other hand
is<00:34:19.750><c> a</c><00:34:19.780><c> pipe</c><00:34:20.580><c> it</c><00:34:21.580><c> liquid</c><00:34:22.450><c> flows</c><00:34:22.899><c> through</c><00:34:23.290><c> it</c>

00:34:23.460 --> 00:34:23.470 align:start position:0%
is a pipe it liquid flows through it
 

00:34:23.470 --> 00:34:26.250 align:start position:0%
is a pipe it liquid flows through it
data<00:34:23.980><c> flows</c><00:34:24.520><c> through</c><00:34:24.879><c> this</c><00:34:25.000><c> pipe</c><00:34:25.300><c> it's</c><00:34:26.020><c> not</c>

00:34:26.250 --> 00:34:26.260 align:start position:0%
data flows through this pipe it's not
 

00:34:26.260 --> 00:34:28.919 align:start position:0%
data flows through this pipe it's not
for<00:34:26.500><c> storing</c><00:34:27.040><c> things</c><00:34:27.070><c> it's</c><00:34:27.879><c> for</c><00:34:28.149><c> transforming</c>

00:34:28.919 --> 00:34:28.929 align:start position:0%
for storing things it's for transforming
 

00:34:28.929 --> 00:34:31.770 align:start position:0%
for storing things it's for transforming
and<00:34:29.080><c> moving</c><00:34:29.740><c> things</c><00:34:29.980><c> a</c><00:34:30.310><c> list</c><00:34:31.090><c> is</c><00:34:31.210><c> a</c><00:34:31.240><c> container</c>

00:34:31.770 --> 00:34:31.780 align:start position:0%
and moving things a list is a container
 

00:34:31.780 --> 00:34:34.290 align:start position:0%
and moving things a list is a container
like<00:34:32.109><c> a</c><00:34:32.169><c> bucket</c><00:34:32.679><c> a</c><00:34:32.859><c> stream</c><00:34:33.550><c> is</c><00:34:33.700><c> a</c><00:34:33.730><c> series</c><00:34:34.149><c> of</c>

00:34:34.290 --> 00:34:34.300 align:start position:0%
like a bucket a stream is a series of
 

00:34:34.300 --> 00:34:37.260 align:start position:0%
like a bucket a stream is a series of
pipeline<00:34:34.840><c> of</c><00:34:35.020><c> functions</c><00:34:35.590><c> to</c><00:34:36.060><c> transform</c><00:34:37.060><c> the</c>

00:34:37.260 --> 00:34:37.270 align:start position:0%
pipeline of functions to transform the
 

00:34:37.270 --> 00:34:39.990 align:start position:0%
pipeline of functions to transform the
data<00:34:37.300><c> along</c><00:34:38.169><c> the</c><00:34:38.350><c> way</c><00:34:38.500><c> so</c><00:34:39.250><c> in</c><00:34:39.490><c> that</c><00:34:39.669><c> regard</c>

00:34:39.990 --> 00:34:40.000 align:start position:0%
data along the way so in that regard
 

00:34:40.000 --> 00:34:42.359 align:start position:0%
data along the way so in that regard
what<00:34:40.899><c> is</c><00:34:41.020><c> that</c><00:34:41.200><c> what</c><00:34:41.350><c> does</c><00:34:41.409><c> it</c><00:34:41.530><c> really</c><00:34:41.710><c> mean</c><00:34:42.070><c> to</c>

00:34:42.359 --> 00:34:42.369 align:start position:0%
what is that what does it really mean to
 

00:34:42.369 --> 00:34:45.090 align:start position:0%
what is that what does it really mean to
us<00:34:42.399><c> what</c><00:34:43.240><c> it</c><00:34:43.359><c> means</c><00:34:43.600><c> to</c><00:34:43.810><c> us</c><00:34:43.840><c> is</c><00:34:44.260><c> a</c><00:34:44.440><c> streams</c><00:34:44.919><c> a</c>

00:34:45.090 --> 00:34:45.100 align:start position:0%
us what it means to us is a streams a
 

00:34:45.100 --> 00:34:47.820 align:start position:0%
us what it means to us is a streams a
series<00:34:45.550><c> of</c><00:34:45.669><c> transformations</c><00:34:46.290><c> to</c><00:34:47.290><c> understand</c>

00:34:47.820 --> 00:34:47.830 align:start position:0%
series of transformations to understand
 

00:34:47.830 --> 00:34:49.470 align:start position:0%
series of transformations to understand
this<00:34:47.950><c> a</c><00:34:48.010><c> little</c><00:34:48.190><c> bit</c><00:34:48.340><c> better</c><00:34:48.490><c> let's</c><00:34:49.179><c> go</c><00:34:49.300><c> back</c>

00:34:49.470 --> 00:34:49.480 align:start position:0%
this a little bit better let's go back
 

00:34:49.480 --> 00:34:51.540 align:start position:0%
this a little bit better let's go back
to<00:34:49.629><c> another</c><00:34:49.750><c> example</c><00:34:50.409><c> we</c><00:34:50.560><c> saw</c><00:34:50.770><c> earlier</c><00:34:51.159><c> and</c>

00:34:51.540 --> 00:34:51.550 align:start position:0%
to another example we saw earlier and
 

00:34:51.550 --> 00:34:54.060 align:start position:0%
to another example we saw earlier and
then<00:34:52.240><c> we</c><00:34:52.450><c> will</c><00:34:52.659><c> relate</c><00:34:53.169><c> back</c><00:34:53.379><c> to</c><00:34:53.440><c> this</c><00:34:53.710><c> real</c>

00:34:54.060 --> 00:34:54.070 align:start position:0%
then we will relate back to this real
 

00:34:54.070 --> 00:34:57.180 align:start position:0%
then we will relate back to this real
quick<00:34:54.399><c> let's</c><00:34:55.300><c> bring</c><00:34:55.600><c> back</c><00:34:55.840><c> our</c><00:34:56.080><c> sample</c><00:34:56.740><c> dot</c><00:34:56.889><c> RB</c>

00:34:57.180 --> 00:34:57.190 align:start position:0%
quick let's bring back our sample dot RB
 

00:34:57.190 --> 00:35:00.060 align:start position:0%
quick let's bring back our sample dot RB
code<00:34:57.820><c> right</c><00:34:58.090><c> here</c><00:34:58.119><c> and</c><00:34:58.570><c> take</c><00:34:59.410><c> a</c><00:34:59.440><c> look</c><00:34:59.740><c> at</c><00:34:59.859><c> the</c>

00:35:00.060 --> 00:35:00.070 align:start position:0%
code right here and take a look at the
 

00:35:00.070 --> 00:35:03.240 align:start position:0%
code right here and take a look at the
Ruby<00:35:01.030><c> code</c><00:35:01.210><c> one</c><00:35:01.570><c> more</c><00:35:01.600><c> time</c><00:35:02.020><c> if</c><00:35:02.290><c> you</c><00:35:02.950><c> look</c><00:35:03.160><c> at</c>

00:35:03.240 --> 00:35:03.250 align:start position:0%
Ruby code one more time if you look at
 

00:35:03.250 --> 00:35:06.270 align:start position:0%
Ruby code one more time if you look at
this<00:35:03.369><c> example</c><00:35:04.170><c> watch</c><00:35:05.170><c> carefully</c><00:35:05.770><c> the</c>

00:35:06.270 --> 00:35:06.280 align:start position:0%
this example watch carefully the
 

00:35:06.280 --> 00:35:09.570 align:start position:0%
this example watch carefully the
execution<00:35:07.090><c> path</c><00:35:07.450><c> this</c><00:35:07.930><c> Court</c><00:35:08.200><c> took</c><00:35:08.580><c> it</c>

00:35:09.570 --> 00:35:09.580 align:start position:0%
execution path this Court took it
 

00:35:09.580 --> 00:35:13.940 align:start position:0%
execution path this Court took it
executed<00:35:10.480><c> the</c><00:35:10.720><c> is</c><00:35:11.140><c> greater</c><00:35:11.740><c> than</c><00:35:12.010><c> function</c><00:35:12.910><c> on</c>

00:35:13.940 --> 00:35:13.950 align:start position:0%
executed the is greater than function on
 

00:35:13.950 --> 00:35:18.800 align:start position:0%
executed the is greater than function on
every<00:35:14.950><c> single</c><00:35:15.450><c> value</c><00:35:16.450><c> so</c><00:35:17.230><c> what</c><00:35:17.560><c> did</c><00:35:17.710><c> Ruby</c><00:35:18.100><c> do</c>

00:35:18.800 --> 00:35:18.810 align:start position:0%
every single value so what did Ruby do
 

00:35:18.810 --> 00:35:24.690 align:start position:0%
every single value so what did Ruby do
apply<00:35:20.070><c> the</c><00:35:21.070><c> first</c><00:35:21.869><c> function</c><00:35:22.869><c> on</c><00:35:23.530><c> the</c><00:35:24.130><c> entire</c>

00:35:24.690 --> 00:35:24.700 align:start position:0%
apply the first function on the entire
 

00:35:24.700 --> 00:35:29.340 align:start position:0%
apply the first function on the entire
collection<00:35:25.830><c> then</c><00:35:26.830><c> it</c><00:35:27.130><c> said</c><00:35:27.430><c> apply</c><00:35:27.970><c> the</c><00:35:28.540><c> second</c>

00:35:29.340 --> 00:35:29.350 align:start position:0%
collection then it said apply the second
 

00:35:29.350 --> 00:35:33.780 align:start position:0%
collection then it said apply the second
function<00:35:29.710><c> on</c><00:35:30.670><c> the</c><00:35:31.150><c> result</c><00:35:31.660><c> collection</c><00:35:32.530><c> so</c><00:35:33.400><c> in</c>

00:35:33.780 --> 00:35:33.790 align:start position:0%
function on the result collection so in
 

00:35:33.790 --> 00:35:36.000 align:start position:0%
function on the result collection so in
other<00:35:33.910><c> words</c><00:35:34.210><c> that's</c><00:35:34.630><c> eager</c>

00:35:36.000 --> 00:35:36.010 align:start position:0%
other words that's eager
 

00:35:36.010 --> 00:35:38.430 align:start position:0%
other words that's eager
keep<00:35:36.369><c> that</c><00:35:36.550><c> in</c><00:35:36.700><c> mind</c><00:35:37.210><c> we'll</c><00:35:37.660><c> see</c><00:35:37.839><c> how</c><00:35:37.990><c> Java</c>

00:35:38.430 --> 00:35:38.440 align:start position:0%
keep that in mind we'll see how Java
 

00:35:38.440 --> 00:35:41.250 align:start position:0%
keep that in mind we'll see how Java
does<00:35:38.740><c> things</c><00:35:39.069><c> very</c><00:35:39.280><c> differently</c><00:35:40.150><c> in</c><00:35:40.960><c> the</c><00:35:41.079><c> case</c>

00:35:41.250 --> 00:35:41.260 align:start position:0%
does things very differently in the case
 

00:35:41.260 --> 00:35:47.640 align:start position:0%
does things very differently in the case
of<00:35:41.470><c> Java</c><00:35:41.970><c> Java</c><00:35:42.970><c> is</c><00:35:43.800><c> assuming</c><00:35:44.800><c> that</c><00:35:45.609><c> the</c><00:35:46.650><c> lambda</c>

00:35:47.640 --> 00:35:47.650 align:start position:0%
of Java Java is assuming that the lambda
 

00:35:47.650 --> 00:35:50.819 align:start position:0%
of Java Java is assuming that the lambda
expressions<00:35:48.160><c> are</c><00:35:48.339><c> pure</c><00:35:49.290><c> this</c><00:35:50.290><c> is</c><00:35:50.410><c> one</c><00:35:50.650><c> big</c>

00:35:50.819 --> 00:35:50.829 align:start position:0%
expressions are pure this is one big
 

00:35:50.829 --> 00:35:53.970 align:start position:0%
expressions are pure this is one big
difference<00:35:51.010><c> between</c><00:35:51.240><c> Haskell</c><00:35:52.270><c> and</c><00:35:52.450><c> Java</c><00:35:52.990><c> has</c>

00:35:53.970 --> 00:35:53.980 align:start position:0%
difference between Haskell and Java has
 

00:35:53.980 --> 00:35:56.700 align:start position:0%
difference between Haskell and Java has
got<00:35:54.220><c> a</c><00:35:54.250><c> bit</c><00:35:54.520><c> boring</c><00:35:54.910><c> in</c><00:35:55.270><c> my</c><00:35:55.390><c> opinion</c><00:35:55.869><c> Haskell</c>

00:35:56.700 --> 00:35:56.710 align:start position:0%
got a bit boring in my opinion Haskell
 

00:35:56.710 --> 00:35:58.980 align:start position:0%
got a bit boring in my opinion Haskell
will<00:35:56.859><c> come</c><00:35:57.069><c> back</c><00:35:57.250><c> and</c><00:35:57.460><c> beat</c><00:35:57.760><c> you</c><00:35:57.940><c> down</c><00:35:58.119><c> and</c><00:35:58.450><c> say</c>

00:35:58.980 --> 00:35:58.990 align:start position:0%
will come back and beat you down and say
 

00:35:58.990 --> 00:36:01.349 align:start position:0%
will come back and beat you down and say
you<00:35:59.349><c> will</c><00:35:59.470><c> not</c><00:35:59.740><c> mutate</c><00:36:00.339><c> you</c><00:36:00.760><c> will</c><00:36:00.910><c> not</c><00:36:01.089><c> have</c>

00:36:01.349 --> 00:36:01.359 align:start position:0%
you will not mutate you will not have
 

00:36:01.359 --> 00:36:02.099 align:start position:0%
you will not mutate you will not have
side<00:36:01.569><c> effects</c>

00:36:02.099 --> 00:36:02.109 align:start position:0%
side effects
 

00:36:02.109 --> 00:36:05.160 align:start position:0%
side effects
Haskell<00:36:02.920><c> will</c><00:36:03.040><c> emphasize</c><00:36:03.819><c> and</c><00:36:04.150><c> verify</c><00:36:04.990><c> and</c>

00:36:05.160 --> 00:36:05.170 align:start position:0%
Haskell will emphasize and verify and
 

00:36:05.170 --> 00:36:08.579 align:start position:0%
Haskell will emphasize and verify and
confirm<00:36:05.440><c> and</c><00:36:06.160><c> follow</c><00:36:06.970><c> you</c><00:36:07.180><c> home</c><00:36:07.450><c> sit</c><00:36:08.230><c> next</c><00:36:08.410><c> to</c>

00:36:08.579 --> 00:36:08.589 align:start position:0%
confirm and follow you home sit next to
 

00:36:08.589 --> 00:36:11.220 align:start position:0%
confirm and follow you home sit next to
you<00:36:08.740><c> stare</c><00:36:09.250><c> at</c><00:36:09.280><c> you</c><00:36:09.579><c> and</c><00:36:09.609><c> say</c><00:36:09.970><c> it</c><00:36:10.690><c> better</c><00:36:11.050><c> be</c>

00:36:11.220 --> 00:36:11.230 align:start position:0%
you stare at you and say it better be
 

00:36:11.230 --> 00:36:13.980 align:start position:0%
you stare at you and say it better be
pure<00:36:11.910><c> Java</c><00:36:12.910><c> is</c><00:36:13.089><c> a</c><00:36:13.150><c> lot</c><00:36:13.359><c> better</c><00:36:13.569><c> in</c><00:36:13.780><c> my</c><00:36:13.900><c> opinion</c>

00:36:13.980 --> 00:36:13.990 align:start position:0%
pure Java is a lot better in my opinion
 

00:36:13.990 --> 00:36:16.829 align:start position:0%
pure Java is a lot better in my opinion
for<00:36:14.440><c> that</c><00:36:14.589><c> reason</c><00:36:14.920><c> because</c><00:36:15.730><c> Java</c><00:36:16.000><c> assumes</c>

00:36:16.829 --> 00:36:16.839 align:start position:0%
for that reason because Java assumes
 

00:36:16.839 --> 00:36:19.770 align:start position:0%
for that reason because Java assumes
that<00:36:17.200><c> lambdas</c><00:36:18.069><c> are</c><00:36:18.220><c> pure</c><00:36:18.430><c> what</c><00:36:19.300><c> happens</c><00:36:19.660><c> when</c>

00:36:19.770 --> 00:36:19.780 align:start position:0%
that lambdas are pure what happens when
 

00:36:19.780 --> 00:36:22.620 align:start position:0%
that lambdas are pure what happens when
a<00:36:19.810><c> language</c><00:36:19.990><c> assumes</c><00:36:20.650><c> things</c><00:36:21.010><c> when</c><00:36:21.849><c> you</c><00:36:22.210><c> and</c>

00:36:22.620 --> 00:36:22.630 align:start position:0%
a language assumes things when you and
 

00:36:22.630 --> 00:36:26.819 align:start position:0%
a language assumes things when you and
Java<00:36:23.440><c> disagree</c><00:36:24.190><c> you</c><00:36:24.790><c> know</c><00:36:24.910><c> who</c><00:36:25.030><c> wins</c><00:36:25.240><c> so</c><00:36:26.079><c> this</c>

00:36:26.819 --> 00:36:26.829 align:start position:0%
Java disagree you know who wins so this
 

00:36:26.829 --> 00:36:28.319 align:start position:0%
Java disagree you know who wins so this
is<00:36:26.950><c> one</c><00:36:27.099><c> of</c><00:36:27.190><c> the</c><00:36:27.250><c> reasons</c><00:36:27.550><c> why</c><00:36:27.730><c> if</c><00:36:28.240><c> you</c>

00:36:28.319 --> 00:36:28.329 align:start position:0%
is one of the reasons why if you
 

00:36:28.329 --> 00:36:30.930 align:start position:0%
is one of the reasons why if you
programmed<00:36:28.750><c> in</c><00:36:28.900><c> Haskell</c><00:36:29.440><c> you'll</c><00:36:29.980><c> go</c><00:36:30.190><c> home</c><00:36:30.430><c> on</c>

00:36:30.930 --> 00:36:30.940 align:start position:0%
programmed in Haskell you'll go home on
 

00:36:30.940 --> 00:36:33.750 align:start position:0%
programmed in Haskell you'll go home on
time<00:36:31.329><c> and</c><00:36:31.839><c> your</c><00:36:32.319><c> kids</c><00:36:32.560><c> ask</c><00:36:32.800><c> you</c><00:36:33.040><c> how</c><00:36:33.460><c> does</c><00:36:33.520><c> that</c>

00:36:33.750 --> 00:36:33.760 align:start position:0%
time and your kids ask you how does that
 

00:36:33.760 --> 00:36:36.960 align:start position:0%
time and your kids ask you how does that
work<00:36:34.060><c> mom</c><00:36:34.420><c> and</c><00:36:35.109><c> you're</c><00:36:35.380><c> gonna</c><00:36:35.500><c> say</c><00:36:35.770><c> it</c><00:36:36.550><c> was</c>

00:36:36.960 --> 00:36:36.970 align:start position:0%
work mom and you're gonna say it was
 

00:36:36.970 --> 00:36:39.000 align:start position:0%
work mom and you're gonna say it was
pouring<00:36:37.300><c> everything</c><00:36:37.900><c> I</c><00:36:38.109><c> wrote</c><00:36:38.290><c> word</c><00:36:38.589><c> there's</c>

00:36:39.000 --> 00:36:39.010 align:start position:0%
pouring everything I wrote word there's
 

00:36:39.010 --> 00:36:41.970 align:start position:0%
pouring everything I wrote word there's
no<00:36:39.130><c> fun</c><00:36:39.400><c> on</c><00:36:40.180><c> the</c><00:36:40.359><c> other</c><00:36:40.510><c> hand</c><00:36:40.869><c> you</c><00:36:41.680><c> already</c>

00:36:41.970 --> 00:36:41.980 align:start position:0%
no fun on the other hand you already
 

00:36:41.980 --> 00:36:44.609 align:start position:0%
no fun on the other hand you already
code<00:36:42.220><c> in</c><00:36:42.369><c> Java</c><00:36:42.760><c> and</c><00:36:43.300><c> maybe</c><00:36:44.020><c> you</c><00:36:44.170><c> forgot</c><00:36:44.560><c> that</c>

00:36:44.609 --> 00:36:44.619 align:start position:0%
code in Java and maybe you forgot that
 

00:36:44.619 --> 00:36:48.630 align:start position:0%
code in Java and maybe you forgot that
these<00:36:45.069><c> lambdas</c><00:36:45.730><c> are</c><00:36:45.940><c> pure</c><00:36:46.470><c> you</c><00:36:47.470><c> go</c><00:36:47.950><c> home</c><00:36:48.130><c> late</c>

00:36:48.630 --> 00:36:48.640 align:start position:0%
these lambdas are pure you go home late
 

00:36:48.640 --> 00:36:52.470 align:start position:0%
these lambdas are pure you go home late
after<00:36:49.180><c> a</c><00:36:49.210><c> very</c><00:36:49.480><c> tiring</c><00:36:49.950><c> day</c><00:36:50.950><c> at</c><00:36:51.010><c> work</c><00:36:51.460><c> and</c><00:36:51.910><c> you</c>

00:36:52.470 --> 00:36:52.480 align:start position:0%
after a very tiring day at work and you
 

00:36:52.480 --> 00:36:54.210 align:start position:0%
after a very tiring day at work and you
go<00:36:52.630><c> home</c><00:36:52.839><c> and</c><00:36:52.990><c> the</c><00:36:53.050><c> kids</c><00:36:53.260><c> ask</c><00:36:53.470><c> you</c><00:36:53.740><c> how</c><00:36:54.069><c> was</c>

00:36:54.210 --> 00:36:54.220 align:start position:0%
go home and the kids ask you how was
 

00:36:54.220 --> 00:36:57.240 align:start position:0%
go home and the kids ask you how was
work<00:36:54.880><c> how</c><00:36:55.420><c> was</c><00:36:55.450><c> the</c><00:36:55.690><c> day</c><00:36:55.869><c> and</c><00:36:56.290><c> you</c><00:36:56.800><c> say</c><00:36:57.010><c> let</c><00:36:57.220><c> me</c>

00:36:57.240 --> 00:36:57.250 align:start position:0%
work how was the day and you say let me
 

00:36:57.250 --> 00:37:00.150 align:start position:0%
work how was the day and you say let me
tell<00:36:57.460><c> you</c><00:36:57.579><c> all</c><00:36:57.849><c> about</c><00:36:58.060><c> it</c><00:36:58.630><c> we</c><00:36:59.170><c> had</c><00:36:59.410><c> a</c><00:36:59.440><c> monster</c>

00:37:00.150 --> 00:37:00.160 align:start position:0%
tell you all about it we had a monster
 

00:37:00.160 --> 00:37:02.250 align:start position:0%
tell you all about it we had a monster
we<00:37:00.280><c> had</c><00:37:00.430><c> to</c><00:37:00.550><c> tackle</c><00:37:00.760><c> and</c><00:37:01.420><c> other</c><00:37:01.569><c> stories</c><00:37:01.900><c> to</c>

00:37:02.250 --> 00:37:02.260 align:start position:0%
we had to tackle and other stories to
 

00:37:02.260 --> 00:37:03.390 align:start position:0%
we had to tackle and other stories to
tell<00:37:02.470><c> that's</c><00:37:02.740><c> one</c><00:37:02.859><c> of</c><00:37:02.920><c> the</c><00:37:03.010><c> reasons</c><00:37:03.280><c> why</c><00:37:03.369><c> I</c>

00:37:03.390 --> 00:37:03.400 align:start position:0%
tell that's one of the reasons why I
 

00:37:03.400 --> 00:37:05.490 align:start position:0%
tell that's one of the reasons why I
love<00:37:03.730><c> these</c><00:37:03.880><c> kinds</c><00:37:04.119><c> of</c><00:37:04.180><c> languages</c><00:37:04.540><c> okay</c><00:37:05.170><c> I'm</c><00:37:05.260><c> a</c>

00:37:05.490 --> 00:37:05.500 align:start position:0%
love these kinds of languages okay I'm a
 

00:37:05.500 --> 00:37:07.530 align:start position:0%
love these kinds of languages okay I'm a
little<00:37:05.589><c> bit</c><00:37:05.829><c> being</c><00:37:06.280><c> kiddush</c><00:37:06.670><c> here</c><00:37:06.849><c> but</c><00:37:07.450><c> the</c>

00:37:07.530 --> 00:37:07.540 align:start position:0%
little bit being kiddush here but the
 

00:37:07.540 --> 00:37:10.380 align:start position:0%
little bit being kiddush here but the
point<00:37:07.780><c> really</c><00:37:08.109><c> though</c><00:37:08.260><c> is</c><00:37:08.470><c> don't</c><00:37:08.710><c> forget</c><00:37:09.390><c> Java</c>

00:37:10.380 --> 00:37:10.390 align:start position:0%
point really though is don't forget Java
 

00:37:10.390 --> 00:37:12.750 align:start position:0%
point really though is don't forget Java
may<00:37:10.690><c> not</c><00:37:10.930><c> really</c><00:37:11.200><c> warn</c><00:37:11.650><c> you</c><00:37:11.920><c> may</c><00:37:12.250><c> not</c><00:37:12.430><c> give</c><00:37:12.670><c> you</c>

00:37:12.750 --> 00:37:12.760 align:start position:0%
may not really warn you may not give you
 

00:37:12.760 --> 00:37:16.050 align:start position:0%
may not really warn you may not give you
a<00:37:12.790><c> error</c><00:37:13.119><c> if</c><00:37:13.869><c> you</c><00:37:14.319><c> make</c><00:37:14.560><c> mutations</c><00:37:15.069><c> in</c><00:37:15.520><c> lambdas</c>

00:37:16.050 --> 00:37:16.060 align:start position:0%
a error if you make mutations in lambdas
 

00:37:16.060 --> 00:37:19.349 align:start position:0%
a error if you make mutations in lambdas
because<00:37:16.450><c> Java</c><00:37:16.930><c> assumes</c><00:37:17.640><c> lambdas</c><00:37:18.640><c> are</c><00:37:18.849><c> pure</c>

00:37:19.349 --> 00:37:19.359 align:start position:0%
because Java assumes lambdas are pure
 

00:37:19.359 --> 00:37:22.079 align:start position:0%
because Java assumes lambdas are pure
the<00:37:20.170><c> purity</c><00:37:20.680><c> gives</c><00:37:20.920><c> us</c><00:37:21.069><c> laziness</c><00:37:21.730><c> we</c><00:37:21.880><c> talked</c>

00:37:22.079 --> 00:37:22.089 align:start position:0%
the purity gives us laziness we talked
 

00:37:22.089 --> 00:37:25.800 align:start position:0%
the purity gives us laziness we talked
about<00:37:22.210><c> so</c><00:37:22.810><c> streams</c><00:37:23.230><c> are</c><00:37:23.589><c> inherently</c><00:37:24.250><c> lazy</c><00:37:24.910><c> so</c>

00:37:25.800 --> 00:37:25.810 align:start position:0%
about so streams are inherently lazy so
 

00:37:25.810 --> 00:37:27.300 align:start position:0%
about so streams are inherently lazy so
what<00:37:26.020><c> is</c><00:37:26.109><c> the</c><00:37:26.200><c> benefit</c><00:37:26.680><c> of</c><00:37:26.710><c> that</c><00:37:26.829><c> approach</c>

00:37:27.300 --> 00:37:27.310 align:start position:0%
what is the benefit of that approach
 

00:37:27.310 --> 00:37:30.450 align:start position:0%
what is the benefit of that approach
let's<00:37:28.270><c> talk</c><00:37:28.480><c> about</c><00:37:28.630><c> this</c><00:37:28.990><c> now</c><00:37:29.230><c> as</c><00:37:29.560><c> different</c>

00:37:30.450 --> 00:37:30.460 align:start position:0%
let's talk about this now as different
 

00:37:30.460 --> 00:37:33.690 align:start position:0%
let's talk about this now as different
in<00:37:30.640><c> Java</c><00:37:31.030><c> versus</c><00:37:31.569><c> language</c><00:37:32.170><c> like</c><00:37:32.380><c> Ruby</c><00:37:32.589><c> so</c><00:37:33.490><c> in</c>

00:37:33.690 --> 00:37:33.700 align:start position:0%
in Java versus language like Ruby so in
 

00:37:33.700 --> 00:37:37.920 align:start position:0%
in Java versus language like Ruby so in
the<00:37:33.760><c> case</c><00:37:33.910><c> of</c><00:37:34.060><c> Java</c><00:37:34.950><c> the</c><00:37:35.950><c> a</c><00:37:36.599><c> collection</c><00:37:37.599><c> of</c>

00:37:37.920 --> 00:37:37.930 align:start position:0%
the case of Java the a collection of
 

00:37:37.930 --> 00:37:43.280 align:start position:0%
the case of Java the a collection of
functions<00:37:38.800><c> are</c><00:37:39.720><c> applied</c><00:37:40.720><c> on</c><00:37:41.170><c> each</c><00:37:41.670><c> element</c><00:37:42.670><c> as</c>

00:37:43.280 --> 00:37:43.290 align:start position:0%
functions are applied on each element as
 

00:37:43.290 --> 00:37:48.810 align:start position:0%
functions are applied on each element as
as<00:37:45.030><c> necessary</c><00:37:46.030><c> so</c><00:37:47.430><c> in</c>

00:37:48.810 --> 00:37:48.820 align:start position:0%
as necessary so in
 

00:37:48.820 --> 00:37:54.720 align:start position:0%
as necessary so in
of<00:37:49.150><c> a</c><00:37:49.950><c> function</c><00:37:50.950><c> being</c><00:37:51.430><c> up</c><00:37:52.140><c> being</c><00:37:53.140><c> a</c><00:37:53.380><c> flight</c><00:37:53.730><c> so</c>

00:37:54.720 --> 00:37:54.730 align:start position:0%
of a function being up being a flight so
 

00:37:54.730 --> 00:38:00.780 align:start position:0%
of a function being up being a flight so
being<00:37:55.090><c> applied</c><00:37:56.550><c> applied</c><00:37:57.550><c> upon</c><00:37:58.230><c> each</c><00:37:59.370><c> on</c><00:38:00.370><c> the</c>

00:38:00.780 --> 00:38:00.790 align:start position:0%
being applied applied upon each on the
 

00:38:00.790 --> 00:38:04.470 align:start position:0%
being applied applied upon each on the
entire<00:38:01.180><c> collection</c><00:38:01.630><c> so</c><00:38:02.530><c> let's</c><00:38:03.490><c> revisit</c><00:38:04.000><c> this</c>

00:38:04.470 --> 00:38:04.480 align:start position:0%
entire collection so let's revisit this
 

00:38:04.480 --> 00:38:07.460 align:start position:0%
entire collection so let's revisit this
one<00:38:04.990><c> more</c><00:38:05.170><c> time</c><00:38:05.380><c> in</c><00:38:06.070><c> the</c><00:38:06.220><c> case</c><00:38:06.400><c> of</c><00:38:06.610><c> Ruby</c><00:38:07.120><c> a</c>

00:38:07.460 --> 00:38:07.470 align:start position:0%
one more time in the case of Ruby a
 

00:38:07.470 --> 00:38:09.900 align:start position:0%
one more time in the case of Ruby a
function<00:38:08.470><c> was</c><00:38:08.650><c> applied</c><00:38:08.950><c> on</c><00:38:09.100><c> the</c><00:38:09.250><c> entire</c>

00:38:09.900 --> 00:38:09.910 align:start position:0%
function was applied on the entire
 

00:38:09.910 --> 00:38:13.680 align:start position:0%
function was applied on the entire
collection<00:38:10.530><c> not</c><00:38:11.530><c> so</c><00:38:11.830><c> in</c><00:38:12.010><c> Java</c><00:38:12.310><c> a</c><00:38:12.690><c> collection</c>

00:38:13.680 --> 00:38:13.690 align:start position:0%
collection not so in Java a collection
 

00:38:13.690 --> 00:38:17.850 align:start position:0%
collection not so in Java a collection
of<00:38:13.810><c> functions</c><00:38:14.460><c> are</c><00:38:15.480><c> applied</c><00:38:16.480><c> on</c><00:38:16.660><c> each</c><00:38:16.900><c> element</c>

00:38:17.850 --> 00:38:17.860 align:start position:0%
of functions are applied on each element
 

00:38:17.860 --> 00:38:21.450 align:start position:0%
of functions are applied on each element
as<00:38:18.040><c> necessary</c><00:38:18.820><c> so</c><00:38:19.180><c> what</c><00:38:19.630><c> Java</c><00:38:19.930><c> does</c><00:38:20.290><c> is</c><00:38:21.100><c> it</c>

00:38:21.450 --> 00:38:21.460 align:start position:0%
as necessary so what Java does is it
 

00:38:21.460 --> 00:38:25.130 align:start position:0%
as necessary so what Java does is it
takes<00:38:21.760><c> these</c><00:38:22.630><c> functions</c><00:38:23.620><c> these</c><00:38:24.340><c> are</c><00:38:24.400><c> called</c>

00:38:25.130 --> 00:38:25.140 align:start position:0%
takes these functions these are called
 

00:38:25.140 --> 00:38:28.830 align:start position:0%
takes these functions these are called
intermediate<00:38:26.280><c> operations</c><00:38:27.280><c> so</c><00:38:27.940><c> intermediate</c>

00:38:28.830 --> 00:38:28.840 align:start position:0%
intermediate operations so intermediate
 

00:38:28.840 --> 00:38:31.500 align:start position:0%
intermediate operations so intermediate
operations<00:38:29.710><c> and</c><00:38:29.950><c> these</c><00:38:30.940><c> of</c><00:38:31.120><c> course</c><00:38:31.300><c> are</c>

00:38:31.500 --> 00:38:31.510 align:start position:0%
operations and these of course are
 

00:38:31.510 --> 00:38:32.100 align:start position:0%
operations and these of course are
called

00:38:32.100 --> 00:38:32.110 align:start position:0%
called
 

00:38:32.110 --> 00:38:35.820 align:start position:0%
called
our<00:38:32.590><c> terminal</c><00:38:33.370><c> operations</c><00:38:34.120><c> so</c><00:38:35.050><c> in</c><00:38:35.440><c> the</c><00:38:35.620><c> case</c>

00:38:35.820 --> 00:38:35.830 align:start position:0%
our terminal operations so in the case
 

00:38:35.830 --> 00:38:37.980 align:start position:0%
our terminal operations so in the case
of<00:38:36.570><c> Java</c>

00:38:37.980 --> 00:38:37.990 align:start position:0%
of Java
 

00:38:37.990 --> 00:38:40.080 align:start position:0%
of Java
it'll<00:38:38.680><c> take</c><00:38:38.890><c> all</c><00:38:39.160><c> the</c><00:38:39.400><c> intermediate</c>

00:38:40.080 --> 00:38:40.090 align:start position:0%
it'll take all the intermediate
 

00:38:40.090 --> 00:38:44.730 align:start position:0%
it'll take all the intermediate
operations<00:38:40.300><c> and</c><00:38:41.700><c> what</c><00:38:42.700><c> does</c><00:38:42.820><c> do</c><00:38:43.120><c> are</c><00:38:43.740><c> fused</c>

00:38:44.730 --> 00:38:44.740 align:start position:0%
operations and what does do are fused
 

00:38:44.740 --> 00:38:48.270 align:start position:0%
operations and what does do are fused
together<00:38:45.690><c> so</c><00:38:46.690><c> it</c><00:38:47.050><c> is</c><00:38:47.080><c> going</c><00:38:47.650><c> to</c><00:38:47.770><c> take</c><00:38:48.040><c> all</c>

00:38:48.270 --> 00:38:48.280 align:start position:0%
together so it is going to take all
 

00:38:48.280 --> 00:38:51.060 align:start position:0%
together so it is going to take all
these<00:38:48.490><c> intermediate</c><00:38:49.360><c> operations</c><00:38:50.290><c> and</c><00:38:50.620><c> it's</c>

00:38:51.060 --> 00:38:51.070 align:start position:0%
these intermediate operations and it's
 

00:38:51.070 --> 00:38:53.510 align:start position:0%
these intermediate operations and it's
going<00:38:51.280><c> to</c><00:38:51.370><c> fuse</c><00:38:51.730><c> them</c><00:38:52.060><c> together</c><00:38:52.270><c> into</c><00:38:53.140><c> one</c>

00:38:53.510 --> 00:38:53.520 align:start position:0%
going to fuse them together into one
 

00:38:53.520 --> 00:38:56.910 align:start position:0%
going to fuse them together into one
collection<00:38:54.520><c> of</c><00:38:54.670><c> functions</c><00:38:55.330><c> it</c><00:38:56.110><c> dem</c><00:38:56.500><c> applies</c>

00:38:56.910 --> 00:38:56.920 align:start position:0%
collection of functions it dem applies
 

00:38:56.920 --> 00:38:59.430 align:start position:0%
collection of functions it dem applies
the<00:38:57.700><c> collection</c><00:38:58.420><c> of</c><00:38:58.480><c> functions</c><00:38:58.750><c> on</c><00:38:59.200><c> each</c>

00:38:59.430 --> 00:38:59.440 align:start position:0%
the collection of functions on each
 

00:38:59.440 --> 00:39:03.240 align:start position:0%
the collection of functions on each
element<00:38:59.830><c> but</c><00:39:00.820><c> only</c><00:39:01.000><c> as</c><00:39:01.440><c> necessary</c><00:39:02.440><c> so</c><00:39:02.770><c> to</c>

00:39:03.240 --> 00:39:03.250 align:start position:0%
element but only as necessary so to
 

00:39:03.250 --> 00:39:04.760 align:start position:0%
element but only as necessary so to
understand<00:39:03.820><c> this</c><00:39:03.940><c> a</c><00:39:04.000><c> little</c><00:39:04.090><c> bit</c><00:39:04.390><c> better</c>

00:39:04.760 --> 00:39:04.770 align:start position:0%
understand this a little bit better
 

00:39:04.770 --> 00:39:06.660 align:start position:0%
understand this a little bit better
let's<00:39:05.770><c> take</c><00:39:06.010><c> a</c><00:39:06.040><c> look</c><00:39:06.250><c> at</c><00:39:06.370><c> a</c><00:39:06.520><c> slightly</c>

00:39:06.660 --> 00:39:06.670 align:start position:0%
let's take a look at a slightly
 

00:39:06.670 --> 00:39:09.420 align:start position:0%
let's take a look at a slightly
different<00:39:07.540><c> example</c><00:39:07.660><c> here</c><00:39:08.380><c> and</c><00:39:08.560><c> work</c><00:39:09.040><c> with</c><00:39:09.280><c> it</c>

00:39:09.420 --> 00:39:09.430 align:start position:0%
different example here and work with it
 

00:39:09.430 --> 00:39:13.200 align:start position:0%
different example here and work with it
so<00:39:10.090><c> rather</c><00:39:10.480><c> than</c><00:39:10.750><c> asking</c><00:39:11.350><c> for</c><00:39:11.650><c> all</c><00:39:12.160><c> the</c><00:39:12.700><c> people</c>

00:39:13.200 --> 00:39:13.210 align:start position:0%
so rather than asking for all the people
 

00:39:13.210 --> 00:39:15.870 align:start position:0%
so rather than asking for all the people
who<00:39:13.900><c> are</c><00:39:13.930><c> younger</c><00:39:14.470><c> than</c><00:39:14.590><c> 18</c><00:39:14.950><c> and</c><00:39:15.550><c> their</c><00:39:15.670><c> name</c>

00:39:15.870 --> 00:39:15.880 align:start position:0%
who are younger than 18 and their name
 

00:39:15.880 --> 00:39:18.150 align:start position:0%
who are younger than 18 and their name
in<00:39:16.030><c> uppercase</c><00:39:16.540><c> let's</c><00:39:17.290><c> say</c><00:39:17.410><c> we</c><00:39:17.530><c> want</c><00:39:17.710><c> only</c><00:39:17.830><c> the</c>

00:39:18.150 --> 00:39:18.160 align:start position:0%
in uppercase let's say we want only the
 

00:39:18.160 --> 00:39:20.850 align:start position:0%
in uppercase let's say we want only the
first<00:39:18.520><c> one</c><00:39:18.850><c> so</c><00:39:19.600><c> we'll</c><00:39:19.720><c> go</c><00:39:19.870><c> back</c><00:39:19.900><c> here</c><00:39:20.110><c> and</c><00:39:20.800><c> we</c>

00:39:20.850 --> 00:39:20.860 align:start position:0%
first one so we'll go back here and we
 

00:39:20.860 --> 00:39:24.960 align:start position:0%
first one so we'll go back here and we
will<00:39:21.040><c> simply</c><00:39:21.400><c> say</c><00:39:21.670><c> dart</c><00:39:22.030><c> find</c><00:39:22.960><c> first</c><00:39:23.620><c> and</c><00:39:24.010><c> what</c>

00:39:24.960 --> 00:39:24.970 align:start position:0%
will simply say dart find first and what
 

00:39:24.970 --> 00:39:27.000 align:start position:0%
will simply say dart find first and what
if<00:39:25.060><c> we</c><00:39:25.240><c> don't</c><00:39:25.360><c> have</c><00:39:25.690><c> a</c><00:39:25.720><c> value</c><00:39:26.080><c> what</c><00:39:26.800><c> are</c><00:39:26.890><c> we</c>

00:39:27.000 --> 00:39:27.010 align:start position:0%
if we don't have a value what are we
 

00:39:27.010 --> 00:39:30.150 align:start position:0%
if we don't have a value what are we
gonna<00:39:27.130><c> do</c><00:39:27.400><c> would</c><00:39:27.970><c> say</c><00:39:28.120><c> our</c><00:39:28.360><c> elves</c><00:39:29.050><c> will</c><00:39:29.530><c> say</c><00:39:29.770><c> no</c>

00:39:30.150 --> 00:39:30.160 align:start position:0%
gonna do would say our elves will say no
 

00:39:30.160 --> 00:39:33.030 align:start position:0%
gonna do would say our elves will say no
one<00:39:30.580><c> found</c><00:39:31.060><c> so</c><00:39:31.870><c> when</c><00:39:32.050><c> I</c><00:39:32.140><c> run</c><00:39:32.350><c> this</c><00:39:32.560><c> little</c><00:39:32.830><c> code</c>

00:39:33.030 --> 00:39:33.040 align:start position:0%
one found so when I run this little code
 

00:39:33.040 --> 00:39:35.760 align:start position:0%
one found so when I run this little code
now<00:39:33.370><c> you</c><00:39:34.030><c> can</c><00:39:34.240><c> see</c><00:39:34.450><c> that</c><00:39:34.660><c> it</c><00:39:34.750><c> produced</c><00:39:35.140><c> Jack</c><00:39:35.530><c> as</c>

00:39:35.760 --> 00:39:35.770 align:start position:0%
now you can see that it produced Jack as
 

00:39:35.770 --> 00:39:38.550 align:start position:0%
now you can see that it produced Jack as
the<00:39:36.010><c> result</c><00:39:36.400><c> of</c><00:39:36.580><c> course</c><00:39:37.300><c> in</c><00:39:37.630><c> this</c><00:39:37.810><c> case</c><00:39:38.020><c> we</c><00:39:38.080><c> can</c>

00:39:38.550 --> 00:39:38.560 align:start position:0%
the result of course in this case we can
 

00:39:38.560 --> 00:39:40.560 align:start position:0%
the result of course in this case we can
go<00:39:38.680><c> back</c><00:39:38.830><c> and</c><00:39:39.040><c> remove</c><00:39:39.310><c> this</c><00:39:39.640><c> operation</c><00:39:40.360><c> right</c>

00:39:40.560 --> 00:39:40.570 align:start position:0%
go back and remove this operation right
 

00:39:40.570 --> 00:39:41.130 align:start position:0%
go back and remove this operation right
here

00:39:41.130 --> 00:39:41.140 align:start position:0%
here
 

00:39:41.140 --> 00:39:43.560 align:start position:0%
here
that's<00:39:41.590><c> the</c><00:39:41.740><c> imperative</c><00:39:42.160><c> style</c><00:39:42.460><c> and</c><00:39:43.270><c> we</c><00:39:43.450><c> will</c>

00:39:43.560 --> 00:39:43.570 align:start position:0%
that's the imperative style and we will
 

00:39:43.570 --> 00:39:46.050 align:start position:0%
that's the imperative style and we will
simply<00:39:43.960><c> use</c><00:39:43.990><c> the</c><00:39:44.710><c> function</c><00:39:45.430><c> of</c><00:39:45.550><c> style</c><00:39:45.820><c> code</c>

00:39:46.050 --> 00:39:46.060 align:start position:0%
simply use the function of style code
 

00:39:46.060 --> 00:39:49.140 align:start position:0%
simply use the function of style code
right<00:39:46.360><c> here</c><00:39:46.390><c> an</c><00:39:46.810><c> except</c><00:39:47.350><c> Jack</c><00:39:47.560><c> well</c><00:39:48.460><c> it</c><00:39:48.700><c> found</c>

00:39:49.140 --> 00:39:49.150 align:start position:0%
right here an except Jack well it found
 

00:39:49.150 --> 00:39:52.380 align:start position:0%
right here an except Jack well it found
the<00:39:49.330><c> first</c><00:39:49.720><c> value</c><00:39:50.350><c> in</c><00:39:50.890><c> this</c><00:39:51.430><c> collection</c><00:39:51.940><c> in</c>

00:39:52.380 --> 00:39:52.390 align:start position:0%
the first value in this collection in
 

00:39:52.390 --> 00:39:54.840 align:start position:0%
the first value in this collection in
this<00:39:52.660><c> output</c><00:39:53.070><c> let's</c><00:39:54.070><c> go</c><00:39:54.220><c> back</c><00:39:54.370><c> and</c><00:39:54.580><c> remove</c><00:39:54.790><c> the</c>

00:39:54.840 --> 00:39:54.850 align:start position:0%
this output let's go back and remove the
 

00:39:54.850 --> 00:39:57.180 align:start position:0%
this output let's go back and remove the
commented<00:39:55.360><c> out</c><00:39:55.450><c> code</c><00:39:55.750><c> and</c><00:39:56.080><c> run</c><00:39:56.260><c> this</c><00:39:56.440><c> how</c><00:39:57.130><c> does</c>

00:39:57.180 --> 00:39:57.190 align:start position:0%
commented out code and run this how does
 

00:39:57.190 --> 00:40:01.140 align:start position:0%
commented out code and run this how does
this<00:39:57.400><c> go</c><00:39:57.610><c> really</c><00:39:57.970><c> work</c><00:39:58.330><c> well</c><00:39:59.290><c> imagine</c><00:39:59.970><c> you</c><00:40:00.970><c> are</c>

00:40:01.140 --> 00:40:01.150 align:start position:0%
this go really work well imagine you are
 

00:40:01.150 --> 00:40:03.150 align:start position:0%
this go really work well imagine you are
at<00:40:01.360><c> work</c><00:40:01.720><c> and</c><00:40:02.020><c> on</c>

00:40:03.150 --> 00:40:03.160 align:start position:0%
at work and on
 

00:40:03.160 --> 00:40:05.970 align:start position:0%
at work and on
the<00:40:03.520><c> 15</c><00:40:03.940><c> the</c><00:40:04.120><c> boss</c><00:40:04.330><c> calls</c><00:40:04.660><c> you</c><00:40:04.780><c> and</c><00:40:05.020><c> says</c><00:40:05.170><c> I</c><00:40:05.530><c> can</c>

00:40:05.970 --> 00:40:05.980 align:start position:0%
the 15 the boss calls you and says I can
 

00:40:05.980 --> 00:40:07.050 align:start position:0%
the 15 the boss calls you and says I can
produce<00:40:06.100><c> for</c><00:40:06.550><c> you</c>

00:40:07.050 --> 00:40:07.060 align:start position:0%
produce for you
 

00:40:07.060 --> 00:40:09.840 align:start position:0%
produce for you
you<00:40:07.720><c> got</c><00:40:08.020><c> a</c><00:40:08.200><c> project</c><00:40:08.440><c> you're</c><00:40:09.250><c> gonna</c><00:40:09.340><c> start</c><00:40:09.670><c> on</c>

00:40:09.840 --> 00:40:09.850 align:start position:0%
you got a project you're gonna start on
 

00:40:09.850 --> 00:40:14.670 align:start position:0%
you got a project you're gonna start on
it<00:40:10.030><c> and</c><00:40:10.350><c> it's</c><00:40:11.350><c> due</c><00:40:11.740><c> on</c><00:40:12.070><c> April</c><00:40:12.730><c> the</c><00:40:12.760><c> 15th</c><00:40:13.440><c> do</c><00:40:14.440><c> you</c>

00:40:14.670 --> 00:40:14.680 align:start position:0%
it and it's due on April the 15th do you
 

00:40:14.680 --> 00:40:16.890 align:start position:0%
it and it's due on April the 15th do you
come<00:40:15.070><c> out</c><00:40:15.220><c> of</c><00:40:15.250><c> the</c><00:40:15.430><c> boss's</c><00:40:15.760><c> office</c><00:40:15.940><c> on</c><00:40:16.360><c> January</c>

00:40:16.890 --> 00:40:16.900 align:start position:0%
come out of the boss's office on January
 

00:40:16.900 --> 00:40:19.710 align:start position:0%
come out of the boss's office on January
the<00:40:16.960><c> 15th</c><00:40:17.170><c> and</c><00:40:17.680><c> start</c><00:40:18.640><c> on</c><00:40:18.760><c> it</c><00:40:18.850><c> right</c><00:40:19.240><c> away</c><00:40:19.270><c> of</c>

00:40:19.710 --> 00:40:19.720 align:start position:0%
the 15th and start on it right away of
 

00:40:19.720 --> 00:40:21.210 align:start position:0%
the 15th and start on it right away of
course<00:40:20.230><c> not</c>

00:40:21.210 --> 00:40:21.220 align:start position:0%
course not
 

00:40:21.220 --> 00:40:23.760 align:start position:0%
course not
you<00:40:21.670><c> will</c><00:40:21.820><c> start</c><00:40:22.120><c> on</c><00:40:22.240><c> it</c><00:40:22.330><c> promptly</c><00:40:22.750><c> on</c><00:40:23.080><c> April</c>

00:40:23.760 --> 00:40:23.770 align:start position:0%
you will start on it promptly on April
 

00:40:23.770 --> 00:40:25.380 align:start position:0%
you will start on it promptly on April
the<00:40:23.800><c> 14th</c><00:40:24.340><c> isn't</c><00:40:24.760><c> it</c><00:40:24.910><c> because</c><00:40:25.150><c> it's</c><00:40:25.270><c> due</c><00:40:25.360><c> on</c>

00:40:25.380 --> 00:40:25.390 align:start position:0%
the 14th isn't it because it's due on
 

00:40:25.390 --> 00:40:26.220 align:start position:0%
the 14th isn't it because it's due on
the<00:40:25.630><c> 15</c>

00:40:26.220 --> 00:40:26.230 align:start position:0%
the 15
 

00:40:26.230 --> 00:40:29.070 align:start position:0%
the 15
that's<00:40:26.680><c> called</c><00:40:26.980><c> efficiency</c><00:40:27.760><c> well</c><00:40:28.660><c> the</c><00:40:28.900><c> point</c>

00:40:29.070 --> 00:40:29.080 align:start position:0%
that's called efficiency well the point
 

00:40:29.080 --> 00:40:32.040 align:start position:0%
that's called efficiency well the point
really<00:40:29.320><c> is</c><00:40:29.500><c> we</c><00:40:30.370><c> don't</c><00:40:30.520><c> do</c><00:40:30.850><c> things</c><00:40:31.120><c> until</c><00:40:31.630><c> those</c>

00:40:32.040 --> 00:40:32.050 align:start position:0%
really is we don't do things until those
 

00:40:32.050 --> 00:40:34.590 align:start position:0%
really is we don't do things until those
become<00:40:32.410><c> relevant</c><00:40:32.740><c> and</c><00:40:33.040><c> imminent</c><00:40:33.550><c> in</c><00:40:34.120><c> fact</c><00:40:34.420><c> if</c>

00:40:34.590 --> 00:40:34.600 align:start position:0%
become relevant and imminent in fact if
 

00:40:34.600 --> 00:40:36.300 align:start position:0%
become relevant and imminent in fact if
you<00:40:34.750><c> know</c><00:40:34.930><c> you're</c><00:40:35.050><c> gonna</c><00:40:35.200><c> quit</c><00:40:35.530><c> on</c><00:40:35.740><c> March</c><00:40:36.010><c> 1st</c>

00:40:36.300 --> 00:40:36.310 align:start position:0%
you know you're gonna quit on March 1st
 

00:40:36.310 --> 00:40:38.670 align:start position:0%
you know you're gonna quit on March 1st
why<00:40:36.730><c> would</c><00:40:36.910><c> you</c><00:40:37.000><c> even</c><00:40:37.060><c> start</c><00:40:37.510><c> on</c><00:40:37.720><c> this</c><00:40:37.930><c> any</c><00:40:38.530><c> any</c>

00:40:38.670 --> 00:40:38.680 align:start position:0%
why would you even start on this any any
 

00:40:38.680 --> 00:40:41.550 align:start position:0%
why would you even start on this any any
sooner<00:40:39.070><c> than</c><00:40:39.100><c> that</c><00:40:39.280><c> the</c><00:40:40.120><c> point</c><00:40:40.390><c> really</c><00:40:40.540><c> is</c><00:40:40.870><c> we</c>

00:40:41.550 --> 00:40:41.560 align:start position:0%
sooner than that the point really is we
 

00:40:41.560 --> 00:40:43.710 align:start position:0%
sooner than that the point really is we
have<00:40:41.770><c> by</c><00:40:42.400><c> not</c><00:40:42.700><c> doing</c><00:40:43.090><c> things</c><00:40:43.300><c> you</c><00:40:43.510><c> don't</c><00:40:43.600><c> have</c>

00:40:43.710 --> 00:40:43.720 align:start position:0%
have by not doing things you don't have
 

00:40:43.720 --> 00:40:46.380 align:start position:0%
have by not doing things you don't have
to<00:40:43.930><c> do</c><00:40:44.050><c> right</c><00:40:44.260><c> now</c><00:40:44.530><c> you</c><00:40:44.890><c> are</c><00:40:45.430><c> able</c><00:40:45.640><c> to</c><00:40:45.760><c> focus</c><00:40:46.030><c> on</c>

00:40:46.380 --> 00:40:46.390 align:start position:0%
to do right now you are able to focus on
 

00:40:46.390 --> 00:40:48.300 align:start position:0%
to do right now you are able to focus on
things<00:40:46.630><c> that</c><00:40:46.690><c> have</c><00:40:47.050><c> to</c><00:40:47.320><c> be</c><00:40:47.350><c> done</c><00:40:47.620><c> right</c><00:40:48.010><c> now</c>

00:40:48.300 --> 00:40:48.310 align:start position:0%
things that have to be done right now
 

00:40:48.310 --> 00:40:50.370 align:start position:0%
things that have to be done right now
and<00:40:48.700><c> if</c><00:40:49.330><c> things</c><00:40:49.660><c> are</c><00:40:49.840><c> not</c><00:40:50.020><c> relevant</c>

00:40:50.370 --> 00:40:50.380 align:start position:0%
and if things are not relevant
 

00:40:50.380 --> 00:40:52.170 align:start position:0%
and if things are not relevant
eventually<00:40:51.040><c> you</c><00:40:51.130><c> don't</c><00:40:51.250><c> have</c><00:40:51.460><c> to</c><00:40:51.610><c> do</c><00:40:51.760><c> it</c><00:40:51.970><c> and</c>

00:40:52.170 --> 00:40:52.180 align:start position:0%
eventually you don't have to do it and
 

00:40:52.180 --> 00:40:55.020 align:start position:0%
eventually you don't have to do it and
that's<00:40:52.930><c> called</c><00:40:53.230><c> efficiency</c><00:40:53.770><c> so</c><00:40:54.670><c> I'll</c><00:40:54.790><c> find</c>

00:40:55.020 --> 00:40:55.030 align:start position:0%
that's called efficiency so I'll find
 

00:40:55.030 --> 00:40:56.790 align:start position:0%
that's called efficiency so I'll find
somebody<00:40:55.180><c> was</c><00:40:55.420><c> really</c><00:40:55.780><c> really</c><00:40:55.990><c> busy</c><00:40:56.260><c> and</c><00:40:56.620><c> give</c>

00:40:56.790 --> 00:40:56.800 align:start position:0%
somebody was really really busy and give
 

00:40:56.800 --> 00:40:58.710 align:start position:0%
somebody was really really busy and give
them<00:40:56.920><c> work</c><00:40:57.100><c> and</c><00:40:57.370><c> they</c><00:40:57.460><c> get</c><00:40:57.580><c> done</c><00:40:57.820><c> but</c><00:40:58.480><c> how</c>

00:40:58.710 --> 00:40:58.720 align:start position:0%
them work and they get done but how
 

00:40:58.720 --> 00:41:01.710 align:start position:0%
them work and they get done but how
because<00:40:59.680><c> they</c><00:41:00.040><c> prioritize</c><00:41:00.790><c> and</c><00:41:01.150><c> they</c><00:41:01.570><c> don't</c>

00:41:01.710 --> 00:41:01.720 align:start position:0%
because they prioritize and they don't
 

00:41:01.720 --> 00:41:03.150 align:start position:0%
because they prioritize and they don't
waste<00:41:02.020><c> time</c><00:41:02.380><c> doing</c><00:41:02.590><c> things</c><00:41:02.860><c> that</c><00:41:03.040><c> are</c>

00:41:03.150 --> 00:41:03.160 align:start position:0%
waste time doing things that are
 

00:41:03.160 --> 00:41:06.360 align:start position:0%
waste time doing things that are
unnecessary<00:41:03.990><c> that's</c><00:41:04.990><c> exactly</c><00:41:05.710><c> the</c><00:41:05.830><c> point</c><00:41:06.070><c> is</c>

00:41:06.360 --> 00:41:06.370 align:start position:0%
unnecessary that's exactly the point is
 

00:41:06.370 --> 00:41:08.280 align:start position:0%
unnecessary that's exactly the point is
that<00:41:07.060><c> you</c><00:41:07.210><c> want</c><00:41:07.330><c> to</c><00:41:07.480><c> be</c><00:41:07.540><c> efficient</c><00:41:08.140><c> in</c><00:41:08.260><c> what</c>

00:41:08.280 --> 00:41:08.290 align:start position:0%
that you want to be efficient in what
 

00:41:08.290 --> 00:41:11.640 align:start position:0%
that you want to be efficient in what
you<00:41:08.620><c> do</c><00:41:08.800><c> not</c><00:41:09.340><c> just</c><00:41:09.610><c> simply</c><00:41:09.820><c> faster</c><00:41:10.450><c> so</c><00:41:11.110><c> both</c>

00:41:11.640 --> 00:41:11.650 align:start position:0%
you do not just simply faster so both
 

00:41:11.650 --> 00:41:14.670 align:start position:0%
you do not just simply faster so both
wise<00:41:11.980><c> and</c><00:41:12.010><c> in</c><00:41:12.610><c> programming</c><00:41:13.380><c> laziness</c><00:41:14.380><c> is</c><00:41:14.560><c> the</c>

00:41:14.670 --> 00:41:14.680 align:start position:0%
wise and in programming laziness is the
 

00:41:14.680 --> 00:41:16.290 align:start position:0%
wise and in programming laziness is the
ultimate<00:41:15.040><c> sophistication</c><00:41:15.190><c> as</c><00:41:15.850><c> we</c><00:41:15.970><c> can</c><00:41:16.120><c> see</c>

00:41:16.290 --> 00:41:16.300 align:start position:0%
ultimate sophistication as we can see
 

00:41:16.300 --> 00:41:19.080 align:start position:0%
ultimate sophistication as we can see
here<00:41:16.540><c> let's</c><00:41:17.290><c> prove</c><00:41:17.560><c> that</c><00:41:17.620><c> right</c><00:41:18.010><c> now</c><00:41:18.220><c> so</c><00:41:18.910><c> when</c>

00:41:19.080 --> 00:41:19.090 align:start position:0%
here let's prove that right now so when
 

00:41:19.090 --> 00:41:20.790 align:start position:0%
here let's prove that right now so when
you<00:41:19.180><c> run</c><00:41:19.390><c> the</c><00:41:19.540><c> code</c><00:41:19.570><c> you</c><00:41:19.870><c> see</c><00:41:20.080><c> you</c><00:41:20.200><c> got</c><00:41:20.380><c> Jack</c>

00:41:20.790 --> 00:41:20.800 align:start position:0%
you run the code you see you got Jack
 

00:41:20.800 --> 00:41:23.370 align:start position:0%
you run the code you see you got Jack
but<00:41:21.550><c> let's</c><00:41:21.760><c> go</c><00:41:21.910><c> to</c><00:41:21.940><c> the</c><00:41:22.120><c> person</c><00:41:22.690><c> class</c><00:41:22.930><c> real</c>

00:41:23.370 --> 00:41:23.380 align:start position:0%
but let's go to the person class real
 

00:41:23.380 --> 00:41:26.940 align:start position:0%
but let's go to the person class real
quick<00:41:23.680><c> in</c><00:41:24.460><c> the</c><00:41:24.520><c> person</c><00:41:25.150><c> class</c><00:41:25.360><c> I</c><00:41:25.810><c> remember</c><00:41:26.470><c> we</c>

00:41:26.940 --> 00:41:26.950 align:start position:0%
quick in the person class I remember we
 

00:41:26.950 --> 00:41:29.520 align:start position:0%
quick in the person class I remember we
asked<00:41:27.280><c> for</c><00:41:27.430><c> the</c><00:41:27.610><c> age</c><00:41:27.850><c> first</c><00:41:28.300><c> and</c><00:41:28.660><c> then</c><00:41:29.350><c> the</c>

00:41:29.520 --> 00:41:29.530 align:start position:0%
asked for the age first and then the
 

00:41:29.530 --> 00:41:32.280 align:start position:0%
asked for the age first and then the
name<00:41:29.740><c> so</c><00:41:30.610><c> let's</c><00:41:30.730><c> go</c><00:41:30.880><c> to</c><00:41:30.940><c> the</c><00:41:31.060><c> age</c><00:41:31.300><c> function</c><00:41:31.990><c> and</c>

00:41:32.280 --> 00:41:32.290 align:start position:0%
name so let's go to the age function and
 

00:41:32.290 --> 00:41:35.810 align:start position:0%
name so let's go to the age function and
we<00:41:32.800><c> will</c><00:41:32.920><c> output</c><00:41:33.460><c> right</c><00:41:33.670><c> here</c><00:41:33.720><c> get</c><00:41:34.720><c> age</c><00:41:34.990><c> called</c>

00:41:35.810 --> 00:41:35.820 align:start position:0%
we will output right here get age called
 

00:41:35.820 --> 00:41:39.180 align:start position:0%
we will output right here get age called
for<00:41:36.820><c> and</c><00:41:37.360><c> in</c><00:41:37.840><c> this</c><00:41:37.960><c> case</c><00:41:38.200><c> we'll</c><00:41:38.560><c> output</c><00:41:39.040><c> the</c>

00:41:39.180 --> 00:41:39.190 align:start position:0%
for and in this case we'll output the
 

00:41:39.190 --> 00:41:41.820 align:start position:0%
for and in this case we'll output the
name<00:41:39.460><c> of</c><00:41:39.760><c> the</c><00:41:39.880><c> person</c><00:41:40.440><c> likewise</c><00:41:41.440><c> we'll</c><00:41:41.650><c> go</c>

00:41:41.820 --> 00:41:41.830 align:start position:0%
name of the person likewise we'll go
 

00:41:41.830 --> 00:41:44.430 align:start position:0%
name of the person likewise we'll go
ahead<00:41:42.010><c> and</c><00:41:42.130><c> say</c><00:41:42.370><c> in</c><00:41:42.940><c> this</c><00:41:43.240><c> case</c><00:41:43.450><c> then</c><00:41:43.780><c> name</c>

00:41:44.430 --> 00:41:44.440 align:start position:0%
ahead and say in this case then name
 

00:41:44.440 --> 00:41:47.760 align:start position:0%
ahead and say in this case then name
itself<00:41:44.800><c> will</c><00:41:45.160><c> say</c><00:41:45.370><c> get</c><00:41:46.060><c> name</c><00:41:46.360><c> called</c><00:41:46.780><c> for</c><00:41:47.140><c> so</c>

00:41:47.760 --> 00:41:47.770 align:start position:0%
itself will say get name called for so
 

00:41:47.770 --> 00:41:51.690 align:start position:0%
itself will say get name called for so
this<00:41:48.100><c> will</c><00:41:48.250><c> be</c><00:41:48.400><c> get</c><00:41:48.940><c> name</c><00:41:49.590><c> for</c><00:41:50.590><c> then</c><00:41:50.860><c> of</c><00:41:51.430><c> course</c>

00:41:51.690 --> 00:41:51.700 align:start position:0%
this will be get name for then of course
 

00:41:51.700 --> 00:41:53.790 align:start position:0%
this will be get name for then of course
we'll<00:41:52.150><c> print</c><00:41:52.360><c> out</c><00:41:52.540><c> the</c><00:41:52.810><c> neat</c><00:41:53.050><c> and</c><00:41:53.230><c> details</c><00:41:53.590><c> of</c>

00:41:53.790 --> 00:41:53.800 align:start position:0%
we'll print out the neat and details of
 

00:41:53.800 --> 00:41:56.850 align:start position:0%
we'll print out the neat and details of
that<00:41:54.010><c> but</c><00:41:54.850><c> if</c><00:41:55.060><c> this</c><00:41:55.210><c> were</c><00:41:55.390><c> eager</c><00:41:55.960><c> remember</c>

00:41:56.850 --> 00:41:56.860 align:start position:0%
that but if this were eager remember
 

00:41:56.860 --> 00:41:58.590 align:start position:0%
that but if this were eager remember
what<00:41:57.070><c> happened</c><00:41:57.460><c> in</c><00:41:57.550><c> language</c><00:41:57.910><c> like</c><00:41:58.060><c> Ruby</c>

00:41:58.590 --> 00:41:58.600 align:start position:0%
what happened in language like Ruby
 

00:41:58.600 --> 00:42:00.540 align:start position:0%
what happened in language like Ruby
it<00:41:59.050><c> was</c><00:41:59.290><c> eager</c><00:41:59.740><c> and</c><00:41:59.980><c> executed</c><00:42:00.460><c> the</c><00:42:00.520><c> first</c>

00:42:00.540 --> 00:42:00.550 align:start position:0%
it was eager and executed the first
 

00:42:00.550 --> 00:42:03.870 align:start position:0%
it was eager and executed the first
method<00:42:01.150><c> for</c><00:42:01.360><c> every</c><00:42:02.110><c> single</c><00:42:02.350><c> thing</c><00:42:02.500><c> if</c><00:42:03.400><c> John</c>

00:42:03.870 --> 00:42:03.880 align:start position:0%
method for every single thing if John
 

00:42:03.880 --> 00:42:06.600 align:start position:0%
method for every single thing if John
was<00:42:04.150><c> eager</c><00:42:04.660><c> it</c><00:42:05.320><c> will</c><00:42:05.500><c> ask</c><00:42:05.680><c> for</c><00:42:05.890><c> the</c><00:42:06.070><c> age</c><00:42:06.310><c> of</c>

00:42:06.600 --> 00:42:06.610 align:start position:0%
was eager it will ask for the age of
 

00:42:06.610 --> 00:42:10.140 align:start position:0%
was eager it will ask for the age of
every<00:42:07.540><c> single</c><00:42:08.080><c> person</c><00:42:08.530><c> including</c><00:42:09.280><c> this</c><00:42:09.820><c> jack</c>

00:42:10.140 --> 00:42:10.150 align:start position:0%
every single person including this jack
 

00:42:10.150 --> 00:42:13.710 align:start position:0%
every single person including this jack
and<00:42:10.420><c> this</c><00:42:10.870><c> Jill</c><00:42:11.460><c> however</c><00:42:12.460><c> in</c><00:42:13.300><c> this</c><00:42:13.510><c> particular</c>

00:42:13.710 --> 00:42:13.720 align:start position:0%
and this Jill however in this particular
 

00:42:13.720 --> 00:42:16.920 align:start position:0%
and this Jill however in this particular
case<00:42:14.230><c> because</c><00:42:15.100><c> jack</c><00:42:15.910><c> is</c><00:42:16.120><c> the</c><00:42:16.330><c> result</c><00:42:16.720><c> we</c>

00:42:16.920 --> 00:42:16.930 align:start position:0%
case because jack is the result we
 

00:42:16.930 --> 00:42:19.410 align:start position:0%
case because jack is the result we
looking<00:42:17.290><c> for</c><00:42:17.589><c> it</c><00:42:18.160><c> we'll</c><00:42:18.579><c> never</c><00:42:18.819><c> have</c><00:42:19.089><c> to</c><00:42:19.240><c> touch</c>

00:42:19.410 --> 00:42:19.420 align:start position:0%
looking for it we'll never have to touch
 

00:42:19.420 --> 00:42:21.900 align:start position:0%
looking for it we'll never have to touch
this<00:42:19.750><c> tack</c><00:42:20.050><c> and</c><00:42:20.260><c> this</c><00:42:20.530><c> joke</c><00:42:20.770><c> may</c><00:42:21.460><c> not</c><00:42:21.609><c> be</c><00:42:21.760><c> such</c>

00:42:21.900 --> 00:42:21.910 align:start position:0%
this tack and this joke may not be such
 

00:42:21.910 --> 00:42:24.390 align:start position:0%
this tack and this joke may not be such
a<00:42:21.940><c> big</c><00:42:22.210><c> deal</c><00:42:22.480><c> in</c><00:42:22.750><c> this</c><00:42:22.900><c> case</c><00:42:23.109><c> but</c><00:42:23.890><c> what</c><00:42:24.130><c> if</c><00:42:24.220><c> this</c>

00:42:24.390 --> 00:42:24.400 align:start position:0%
a big deal in this case but what if this
 

00:42:24.400 --> 00:42:27.210 align:start position:0%
a big deal in this case but what if this
were<00:42:24.670><c> a</c><00:42:24.940><c> million</c><00:42:25.540><c> elements</c><00:42:26.020><c> a</c><00:42:26.319><c> lot</c><00:42:27.069><c> of</c>

00:42:27.210 --> 00:42:27.220 align:start position:0%
were a million elements a lot of
 

00:42:27.220 --> 00:42:29.640 align:start position:0%
were a million elements a lot of
elements<00:42:27.400><c> after</c><00:42:27.730><c> this</c><00:42:28.390><c> one</c><00:42:28.630><c> we</c><00:42:29.290><c> don't</c><00:42:29.440><c> want</c><00:42:29.589><c> to</c>

00:42:29.640 --> 00:42:29.650 align:start position:0%
elements after this one we don't want to
 

00:42:29.650 --> 00:42:32.010 align:start position:0%
elements after this one we don't want to
evaluate<00:42:29.800><c> them</c><00:42:30.250><c> once</c><00:42:30.520><c> we</c><00:42:30.670><c> find</c><00:42:30.880><c> a</c><00:42:30.970><c> result</c><00:42:31.359><c> so</c>

00:42:32.010 --> 00:42:32.020 align:start position:0%
evaluate them once we find a result so
 

00:42:32.020 --> 00:42:35.040 align:start position:0%
evaluate them once we find a result so
in<00:42:32.349><c> this</c><00:42:32.500><c> case</c><00:42:32.770><c> the</c><00:42:33.490><c> get</c><00:42:33.730><c> age</c><00:42:34.000><c> is</c><00:42:34.630><c> going</c><00:42:34.930><c> to</c><00:42:34.990><c> be</c>

00:42:35.040 --> 00:42:35.050 align:start position:0%
in this case the get age is going to be
 

00:42:35.050 --> 00:42:37.940 align:start position:0%
in this case the get age is going to be
called<00:42:35.349><c> on</c><00:42:35.650><c> on</c><00:42:36.040><c> what</c><00:42:36.520><c> it</c><00:42:36.819><c> will</c><00:42:37.300><c> be</c><00:42:37.420><c> called</c><00:42:37.720><c> on</c>

00:42:37.940 --> 00:42:37.950 align:start position:0%
called on on what it will be called on
 

00:42:37.950 --> 00:42:41.270 align:start position:0%
called on on what it will be called on
Sarah<00:42:38.950><c> Sarah</c><00:42:39.339><c> Bob</c><00:42:39.640><c> para</c><00:42:39.940><c> Paul</c><00:42:40.270><c> and</c><00:42:40.510><c> Jack</c>

00:42:41.270 --> 00:42:41.280 align:start position:0%
Sarah Sarah Bob para Paul and Jack
 

00:42:41.280 --> 00:42:44.309 align:start position:0%
Sarah Sarah Bob para Paul and Jack
however<00:42:42.540><c> there's</c><00:42:43.540><c> one</c><00:42:43.630><c> big</c><00:42:43.930><c> difference</c>

00:42:44.309 --> 00:42:44.319 align:start position:0%
however there's one big difference
 

00:42:44.319 --> 00:42:47.910 align:start position:0%
however there's one big difference
though<00:42:44.530><c> it's</c><00:42:45.339><c> not</c><00:42:45.640><c> going</c><00:42:45.940><c> to</c><00:42:46.030><c> call</c><00:42:46.470><c> the</c><00:42:47.470><c> get</c><00:42:47.680><c> a</c>

00:42:47.910 --> 00:42:47.920 align:start position:0%
though it's not going to call the get a
 

00:42:47.920 --> 00:42:51.660 align:start position:0%
though it's not going to call the get a
john<00:42:48.309><c> all</c><00:42:49.000><c> the</c><00:42:49.480><c> elements</c><00:42:49.930><c> first</c><00:42:50.309><c> again</c><00:42:51.309><c> if</c><00:42:51.579><c> you</c>

00:42:51.660 --> 00:42:51.670 align:start position:0%
john all the elements first again if you
 

00:42:51.670 --> 00:42:53.460 align:start position:0%
john all the elements first again if you
go<00:42:51.790><c> back</c><00:42:51.970><c> to</c><00:42:52.059><c> this</c><00:42:52.180><c> example</c><00:42:52.359><c> and</c><00:42:52.839><c> run</c><00:42:53.020><c> this</c>

00:42:53.460 --> 00:42:53.470 align:start position:0%
go back to this example and run this
 

00:42:53.470 --> 00:42:57.359 align:start position:0%
go back to this example and run this
notice<00:42:54.220><c> that</c><00:42:54.309><c> evaluated</c><00:42:54.940><c> YZ</c><00:42:55.270><c> g</c><00:42:56.099><c> t-54</c><00:42:57.099><c> all</c>

00:42:57.359 --> 00:42:57.369 align:start position:0%
notice that evaluated YZ g t-54 all
 

00:42:57.369 --> 00:43:00.329 align:start position:0%
notice that evaluated YZ g t-54 all
elements<00:42:58.260><c> only</c><00:42:59.260><c> after</c><00:42:59.619><c> that</c><00:42:59.770><c> it</c><00:43:00.010><c> started</c>

00:43:00.329 --> 00:43:00.339 align:start position:0%
elements only after that it started
 

00:43:00.339 --> 00:43:03.059 align:start position:0%
elements only after that it started
evaluating<00:43:00.640><c> the</c><00:43:00.970><c> double</c><00:43:01.390><c> function</c><00:43:01.630><c> not</c><00:43:02.619><c> so</c><00:43:02.890><c> in</c>

00:43:03.059 --> 00:43:03.069 align:start position:0%
evaluating the double function not so in
 

00:43:03.069 --> 00:43:06.240 align:start position:0%
evaluating the double function not so in
Java<00:43:03.369><c> it</c><00:43:04.059><c> evaluate</c><00:43:04.809><c> the</c><00:43:05.470><c> group</c><00:43:05.800><c> of</c><00:43:06.040><c> these</c>

00:43:06.240 --> 00:43:06.250 align:start position:0%
Java it evaluate the group of these
 

00:43:06.250 --> 00:43:09.540 align:start position:0%
Java it evaluate the group of these
functions<00:43:06.670><c> as</c><00:43:06.880><c> necessary</c><00:43:07.750><c> on</c><00:43:08.050><c> one</c><00:43:08.859><c> element</c><00:43:09.369><c> at</c>

00:43:09.540 --> 00:43:09.550 align:start position:0%
functions as necessary on one element at
 

00:43:09.550 --> 00:43:12.690 align:start position:0%
functions as necessary on one element at
a<00:43:09.609><c> time</c><00:43:09.819><c> so</c><00:43:10.780><c> I</c><00:43:10.809><c> run</c><00:43:11.200><c> this</c><00:43:11.410><c> code</c><00:43:11.530><c> notice</c><00:43:12.190><c> it</c>

00:43:12.690 --> 00:43:12.700 align:start position:0%
a time so I run this code notice it
 

00:43:12.700 --> 00:43:15.420 align:start position:0%
a time so I run this code notice it
called<00:43:13.030><c> get</c><00:43:13.390><c> age</c><00:43:13.599><c> on</c><00:43:13.960><c> Sarah</c><00:43:14.440><c> Sarah</c><00:43:14.770><c> Bob</c><00:43:15.130><c> Paula</c>

00:43:15.420 --> 00:43:15.430 align:start position:0%
called get age on Sarah Sarah Bob Paula
 

00:43:15.430 --> 00:43:18.030 align:start position:0%
called get age on Sarah Sarah Bob Paula
Paul<00:43:15.760><c> Jack</c><00:43:16.119><c> but</c><00:43:17.050><c> then</c><00:43:17.170><c> it</c><00:43:17.260><c> calls</c><00:43:17.470><c> get</c><00:43:17.710><c> name</c><00:43:17.859><c> on</c>

00:43:18.030 --> 00:43:18.040 align:start position:0%
Paul Jack but then it calls get name on
 

00:43:18.040 --> 00:43:20.339 align:start position:0%
Paul Jack but then it calls get name on
Jack<00:43:18.369><c> but</c><00:43:19.000><c> it</c><00:43:19.119><c> never</c><00:43:19.390><c> touched</c><00:43:19.720><c> the</c><00:43:19.930><c> second</c>

00:43:20.339 --> 00:43:20.349 align:start position:0%
Jack but it never touched the second
 

00:43:20.349 --> 00:43:23.520 align:start position:0%
Jack but it never touched the second
Jack<00:43:20.589><c> and</c><00:43:20.829><c> B</c><00:43:21.579><c> and</c><00:43:21.819><c> the</c><00:43:21.970><c> Jill</c><00:43:22.180><c> hmm</c><00:43:22.990><c> doesn't</c>

00:43:23.520 --> 00:43:23.530 align:start position:0%
Jack and B and the Jill hmm doesn't
 

00:43:23.530 --> 00:43:25.140 align:start position:0%
Jack and B and the Jill hmm doesn't
quite<00:43:23.829><c> illustrate</c><00:43:24.339><c> what</c><00:43:24.609><c> I</c><00:43:24.640><c> wanted</c><00:43:24.910><c> to</c><00:43:24.970><c> show</c>

00:43:25.140 --> 00:43:25.150 align:start position:0%
quite illustrate what I wanted to show
 

00:43:25.150 --> 00:43:27.180 align:start position:0%
quite illustrate what I wanted to show
here<00:43:25.359><c> yet</c><00:43:25.690><c> isn't</c><00:43:26.049><c> it</c><00:43:26.200><c> let's</c><00:43:26.829><c> try</c><00:43:27.040><c> a</c><00:43:27.069><c> little</c>

00:43:27.180 --> 00:43:27.190 align:start position:0%
here yet isn't it let's try a little
 

00:43:27.190 --> 00:43:29.789 align:start position:0%
here yet isn't it let's try a little
different<00:43:27.730><c> example</c><00:43:28.150><c> let's</c><00:43:29.020><c> say</c><00:43:29.200><c> I</c><00:43:29.230><c> want</c><00:43:29.440><c> the</c>

00:43:29.789 --> 00:43:29.799 align:start position:0%
different example let's say I want the
 

00:43:29.799 --> 00:43:34.680 align:start position:0%
different example let's say I want the
first<00:43:30.099><c> person</c><00:43:30.790><c> who</c><00:43:31.660><c> was</c><00:43:31.869><c> older</c><00:43:32.380><c> than</c><00:43:32.670><c> 20</c><00:43:33.690><c> but</c>

00:43:34.680 --> 00:43:34.690 align:start position:0%
first person who was older than 20 but
 

00:43:34.690 --> 00:43:38.700 align:start position:0%
first person who was older than 20 but
it<00:43:34.780><c> was</c><00:43:34.869><c> also</c><00:43:35.140><c> a</c><00:43:35.799><c> female</c><00:43:36.540><c> older</c><00:43:37.540><c> than</c><00:43:37.660><c> 20</c><00:43:38.049><c> well</c>

00:43:38.700 --> 00:43:38.710 align:start position:0%
it was also a female older than 20 well
 

00:43:38.710 --> 00:43:42.720 align:start position:0%
it was also a female older than 20 well
that's<00:43:39.220><c> Sarah</c><00:43:39.839><c> but</c><00:43:40.839><c> also</c><00:43:41.470><c> a</c><00:43:41.829><c> female</c><00:43:42.339><c> that's</c>

00:43:42.720 --> 00:43:42.730 align:start position:0%
that's Sarah but also a female that's
 

00:43:42.730 --> 00:43:46.170 align:start position:0%
that's Sarah but also a female that's
Sarah<00:43:43.030><c> -</c><00:43:43.329><c> let's</c><00:43:44.170><c> make</c><00:43:44.380><c> it</c><00:43:44.440><c> all</c><00:43:44.680><c> in</c><00:43:44.890><c> the</c><00:43:44.950><c> man</c><00:43:45.180><c> 30</c>

00:43:46.170 --> 00:43:46.180 align:start position:0%
Sarah - let's make it all in the man 30
 

00:43:46.180 --> 00:43:49.260 align:start position:0%
Sarah - let's make it all in the man 30
that'll<00:43:46.990><c> be</c><00:43:47.049><c> this</c><00:43:47.200><c> Paula</c><00:43:47.530><c> great</c><00:43:48.400><c> so</c><00:43:49.089><c> let's</c>

00:43:49.260 --> 00:43:49.270 align:start position:0%
that'll be this Paula great so let's
 

00:43:49.270 --> 00:43:50.280 align:start position:0%
that'll be this Paula great so let's
evaluate<00:43:49.450><c> that</c>

00:43:50.280 --> 00:43:50.290 align:start position:0%
evaluate that
 

00:43:50.290 --> 00:43:54.809 align:start position:0%
evaluate that
so<00:43:50.589><c> get</c><00:43:50.980><c> H</c><00:43:51.250><c> is</c><00:43:51.579><c> greater</c><00:43:52.329><c> than</c><00:43:52.690><c> 30</c><00:43:53.500><c> and</c><00:43:53.950><c> then</c><00:43:54.790><c> I</c>

00:43:54.809 --> 00:43:54.819 align:start position:0%
so get H is greater than 30 and then I
 

00:43:54.819 --> 00:43:58.289 align:start position:0%
so get H is greater than 30 and then I
want<00:43:55.059><c> to</c><00:43:55.180><c> say</c><00:43:55.359><c> that</c><00:43:56.230><c> filter</c><00:43:56.980><c> in</c><00:43:57.369><c> this</c><00:43:57.910><c> case</c><00:43:58.150><c> of</c>

00:43:58.289 --> 00:43:58.299 align:start position:0%
want to say that filter in this case of
 

00:43:58.299 --> 00:44:01.440 align:start position:0%
want to say that filter in this case of
course<00:43:58.329><c> and</c><00:43:58.930><c> we</c><00:43:59.890><c> want</c><00:44:00.099><c> to</c><00:44:00.160><c> say</c><00:44:00.339><c> given</c><00:44:00.790><c> a</c><00:44:00.849><c> person</c>

00:44:01.440 --> 00:44:01.450 align:start position:0%
course and we want to say given a person
 

00:44:01.450 --> 00:44:06.510 align:start position:0%
course and we want to say given a person
will<00:44:02.109><c> say</c><00:44:02.349><c> person</c><00:44:03.040><c> dark</c><00:44:03.910><c> get</c><00:44:04.420><c> gender</c><00:44:05.260><c> and</c><00:44:05.650><c> in</c>

00:44:06.510 --> 00:44:06.520 align:start position:0%
will say person dark get gender and in
 

00:44:06.520 --> 00:44:08.700 align:start position:0%
will say person dark get gender and in
this<00:44:06.640><c> case</c><00:44:06.849><c> of</c><00:44:07.030><c> course</c><00:44:07.059><c> is</c><00:44:07.660><c> equal</c><00:44:08.109><c> to</c><00:44:08.319><c> gender</c>

00:44:08.700 --> 00:44:08.710 align:start position:0%
this case of course is equal to gender
 

00:44:08.710 --> 00:44:11.730 align:start position:0%
this case of course is equal to gender
dot<00:44:08.920><c> female</c><00:44:09.750><c> when</c><00:44:10.750><c> I</c><00:44:10.780><c> run</c><00:44:11.049><c> this</c><00:44:11.230><c> little</c><00:44:11.410><c> code</c>

00:44:11.730 --> 00:44:11.740 align:start position:0%
dot female when I run this little code
 

00:44:11.740 --> 00:44:13.349 align:start position:0%
dot female when I run this little code
let's<00:44:12.130><c> go</c><00:44:12.220><c> ahead</c><00:44:12.280><c> and</c><00:44:12.430><c> comment</c><00:44:12.670><c> these</c><00:44:12.940><c> out</c><00:44:13.119><c> for</c>

00:44:13.349 --> 00:44:13.359 align:start position:0%
let's go ahead and comment these out for
 

00:44:13.359 --> 00:44:15.030 align:start position:0%
let's go ahead and comment these out for
just<00:44:13.630><c> a</c><00:44:13.750><c> second</c><00:44:14.200><c> we'll</c><00:44:14.349><c> come</c><00:44:14.500><c> back</c><00:44:14.650><c> to</c><00:44:14.829><c> this</c>

00:44:15.030 --> 00:44:15.040 align:start position:0%
just a second we'll come back to this
 

00:44:15.040 --> 00:44:17.760 align:start position:0%
just a second we'll come back to this
and<00:44:15.280><c> we</c><00:44:16.089><c> will</c><00:44:16.240><c> go</c><00:44:16.329><c> ahead</c><00:44:16.390><c> and</c><00:44:16.750><c> put</c><00:44:17.260><c> the</c><00:44:17.410><c> print</c>

00:44:17.760 --> 00:44:17.770 align:start position:0%
and we will go ahead and put the print
 

00:44:17.770 --> 00:44:19.710 align:start position:0%
and we will go ahead and put the print
children<00:44:18.099><c> the</c><00:44:18.220><c> gender</c><00:44:18.579><c> as</c><00:44:18.760><c> well</c><00:44:19.150><c> so</c><00:44:19.390><c> we</c><00:44:19.510><c> can</c>

00:44:19.710 --> 00:44:19.720 align:start position:0%
children the gender as well so we can
 

00:44:19.720 --> 00:44:23.789 align:start position:0%
children the gender as well so we can
look<00:44:20.170><c> at</c><00:44:20.319><c> it</c><00:44:20.440><c> to</c><00:44:20.650><c> here</c><00:44:21.130><c> so</c><00:44:21.849><c> here</c><00:44:22.119><c> is</c><00:44:22.329><c> the</c><00:44:22.599><c> Jo</c><00:44:23.470><c> get</c>

00:44:23.789 --> 00:44:23.799 align:start position:0%
look at it to here so here is the Jo get
 

00:44:23.799 --> 00:44:27.599 align:start position:0%
look at it to here so here is the Jo get
gender<00:44:24.220><c> so</c><00:44:25.119><c> we'll</c><00:44:25.299><c> say</c><00:44:25.540><c> get</c><00:44:26.079><c> gender</c><00:44:27.010><c> call</c><00:44:27.250><c> for</c>

00:44:27.599 --> 00:44:27.609 align:start position:0%
gender so we'll say get gender call for
 

00:44:27.609 --> 00:44:29.460 align:start position:0%
gender so we'll say get gender call for
so

00:44:29.460 --> 00:44:29.470 align:start position:0%
so
 

00:44:29.470 --> 00:44:32.339 align:start position:0%
so
and<00:44:29.560><c> then</c><00:44:29.740><c> of</c><00:44:29.829><c> course</c><00:44:30.270><c> the</c><00:44:31.270><c> name</c><00:44:31.420><c> let's</c><00:44:32.230><c> go</c>

00:44:32.339 --> 00:44:32.349 align:start position:0%
and then of course the name let's go
 

00:44:32.349 --> 00:44:34.200 align:start position:0%
and then of course the name let's go
ahead<00:44:32.410><c> and</c><00:44:32.589><c> run</c><00:44:32.710><c> this</c><00:44:32.890><c> real</c><00:44:33.099><c> example</c><00:44:33.609><c> that's</c>

00:44:34.200 --> 00:44:34.210 align:start position:0%
ahead and run this real example that's
 

00:44:34.210 --> 00:44:37.440 align:start position:0%
ahead and run this real example that's
Paula<00:44:34.690><c> if</c><00:44:35.530><c> this</c><00:44:35.800><c> were</c><00:44:35.920><c> eager</c><00:44:36.430><c> you</c><00:44:37.089><c> were</c><00:44:37.180><c> asked</c>

00:44:37.440 --> 00:44:37.450 align:start position:0%
Paula if this were eager you were asked
 

00:44:37.450 --> 00:44:40.559 align:start position:0%
Paula if this were eager you were asked
for<00:44:37.660><c> age</c><00:44:37.869><c> of</c><00:44:38.140><c> everyone</c><00:44:39.000><c> gender</c><00:44:40.000><c> for</c><00:44:40.180><c> everyone</c>

00:44:40.559 --> 00:44:40.569 align:start position:0%
for age of everyone gender for everyone
 

00:44:40.569 --> 00:44:43.740 align:start position:0%
for age of everyone gender for everyone
or<00:44:40.780><c> than</c><00:44:41.109><c> 30</c><00:44:41.490><c> name</c><00:44:42.490><c> of</c><00:44:42.849><c> everyone</c><00:44:43.150><c> older</c><00:44:43.599><c> than</c>

00:44:43.740 --> 00:44:43.750 align:start position:0%
or than 30 name of everyone older than
 

00:44:43.750 --> 00:44:46.980 align:start position:0%
or than 30 name of everyone older than
30<00:44:43.990><c> and</c><00:44:44.170><c> female</c><00:44:44.640><c> convert</c><00:44:45.640><c> all</c><00:44:45.760><c> the</c><00:44:46.089><c> names</c><00:44:46.329><c> only</c>

00:44:46.980 --> 00:44:46.990 align:start position:0%
30 and female convert all the names only
 

00:44:46.990 --> 00:44:49.920 align:start position:0%
30 and female convert all the names only
to<00:44:47.530><c> throw</c><00:44:47.800><c> away</c><00:44:47.980><c> most</c><00:44:48.250><c> of</c><00:44:48.460><c> the</c><00:44:48.550><c> work</c><00:44:48.700><c> but</c><00:44:48.970><c> not</c>

00:44:49.920 --> 00:44:49.930 align:start position:0%
to throw away most of the work but not
 

00:44:49.930 --> 00:44:52.470 align:start position:0%
to throw away most of the work but not
so<00:44:50.200><c> in</c><00:44:50.230><c> this</c><00:44:50.560><c> example</c><00:44:50.980><c> if</c><00:44:51.339><c> I</c><00:44:51.910><c> go</c><00:44:52.060><c> back</c><00:44:52.210><c> in</c>

00:44:52.470 --> 00:44:52.480 align:start position:0%
so in this example if I go back in
 

00:44:52.480 --> 00:44:55.319 align:start position:0%
so in this example if I go back in
uncomment<00:44:53.380><c> these</c><00:44:53.589><c> print</c><00:44:54.550><c> statements</c><00:44:55.089><c> though</c>

00:44:55.319 --> 00:44:55.329 align:start position:0%
uncomment these print statements though
 

00:44:55.329 --> 00:44:58.920 align:start position:0%
uncomment these print statements though
what<00:44:56.230><c> you</c><00:44:56.380><c> notice</c><00:44:56.770><c> right</c><00:44:56.800><c> here</c><00:44:57.010><c> is</c><00:44:57.550><c> that</c><00:44:58.480><c> when</c>

00:44:58.920 --> 00:44:58.930 align:start position:0%
what you notice right here is that when
 

00:44:58.930 --> 00:45:00.780 align:start position:0%
what you notice right here is that when
we<00:44:58.960><c> Wonder's</c><00:44:59.650><c> look</c><00:44:59.920><c> at</c><00:45:00.040><c> the</c><00:45:00.130><c> sequence</c><00:45:00.550><c> of</c><00:45:00.670><c> the</c>

00:45:00.780 --> 00:45:00.790 align:start position:0%
we Wonder's look at the sequence of the
 

00:45:00.790 --> 00:45:04.410 align:start position:0%
we Wonder's look at the sequence of the
output<00:45:01.270><c> it</c><00:45:01.900><c> called</c><00:45:02.260><c> get</c><00:45:02.560><c> a</c><00:45:02.589><c> John</c><00:45:03.010><c> Sarah</c><00:45:03.420><c> it</c>

00:45:04.410 --> 00:45:04.420 align:start position:0%
output it called get a John Sarah it
 

00:45:04.420 --> 00:45:06.690 align:start position:0%
output it called get a John Sarah it
called<00:45:04.839><c> get</c><00:45:05.079><c> 8</c><00:45:05.260><c> on</c><00:45:05.440><c> the</c><00:45:05.560><c> second</c><00:45:05.950><c> Sarah</c><00:45:06.280><c> it</c>

00:45:06.690 --> 00:45:06.700 align:start position:0%
called get 8 on the second Sarah it
 

00:45:06.700 --> 00:45:10.260 align:start position:0%
called get 8 on the second Sarah it
called<00:45:07.480><c> on</c><00:45:07.690><c> Bob</c><00:45:08.140><c> and</c><00:45:08.410><c> Paula</c><00:45:08.710><c> then</c><00:45:09.700><c> gender</c><00:45:10.119><c> and</c>

00:45:10.260 --> 00:45:10.270 align:start position:0%
called on Bob and Paula then gender and
 

00:45:10.270 --> 00:45:13.500 align:start position:0%
called on Bob and Paula then gender and
Paula<00:45:10.540><c> name</c><00:45:11.260><c> are</c><00:45:11.440><c> para</c><00:45:11.710><c> and</c><00:45:12.040><c> done</c><00:45:12.430><c> if</c><00:45:12.730><c> I</c><00:45:13.390><c> were</c>

00:45:13.500 --> 00:45:13.510 align:start position:0%
Paula name are para and done if I were
 

00:45:13.510 --> 00:45:16.800 align:start position:0%
Paula name are para and done if I were
to<00:45:13.630><c> flip</c><00:45:13.869><c> this</c><00:45:14.319><c> over</c><00:45:14.970><c> asking</c><00:45:15.970><c> for</c><00:45:16.450><c> all</c><00:45:16.660><c> the</c>

00:45:16.800 --> 00:45:16.810 align:start position:0%
to flip this over asking for all the
 

00:45:16.810 --> 00:45:19.620 align:start position:0%
to flip this over asking for all the
females<00:45:17.200><c> first</c><00:45:17.470><c> and</c><00:45:17.770><c> then</c><00:45:18.040><c> the</c><00:45:18.190><c> age</c><00:45:18.420><c> then</c><00:45:19.420><c> you</c>

00:45:19.620 --> 00:45:19.630 align:start position:0%
females first and then the age then you
 

00:45:19.630 --> 00:45:22.410 align:start position:0%
females first and then the age then you
notice<00:45:20.050><c> it</c><00:45:20.710><c> asks</c><00:45:21.099><c> for</c><00:45:21.130><c> gender</c><00:45:21.670><c> on</c><00:45:21.849><c> Sarah</c><00:45:22.150><c> and</c>

00:45:22.410 --> 00:45:22.420 align:start position:0%
notice it asks for gender on Sarah and
 

00:45:22.420 --> 00:45:25.260 align:start position:0%
notice it asks for gender on Sarah and
age<00:45:22.660><c> on</c><00:45:22.960><c> Sarah</c><00:45:23.260><c> right</c><00:45:23.560><c> away</c><00:45:23.880><c> gender</c><00:45:24.880><c> innate</c><00:45:25.119><c> on</c>

00:45:25.260 --> 00:45:25.270 align:start position:0%
age on Sarah right away gender innate on
 

00:45:25.270 --> 00:45:27.480 align:start position:0%
age on Sarah right away gender innate on
the<00:45:25.420><c> second</c><00:45:25.810><c> Sarah</c><00:45:26.050><c> right</c><00:45:26.290><c> away</c><00:45:26.530><c> gender</c>

00:45:27.480 --> 00:45:27.490 align:start position:0%
the second Sarah right away gender
 

00:45:27.490 --> 00:45:30.690 align:start position:0%
the second Sarah right away gender
gender<00:45:27.790><c> on</c><00:45:28.150><c> Bob</c><00:45:28.390><c> and</c><00:45:28.420><c> Paula</c><00:45:28.839><c> age</c><00:45:29.710><c> on</c><00:45:30.040><c> Paula</c><00:45:30.339><c> and</c>

00:45:30.690 --> 00:45:30.700 align:start position:0%
gender on Bob and Paula age on Paula and
 

00:45:30.700 --> 00:45:33.660 align:start position:0%
gender on Bob and Paula age on Paula and
Mayman<00:45:31.660><c> Paula</c><00:45:31.900><c> look</c><00:45:32.619><c> at</c><00:45:32.740><c> only</c><00:45:32.829><c> the</c><00:45:32.980><c> first</c><00:45:33.099><c> four</c>

00:45:33.660 --> 00:45:33.670 align:start position:0%
Mayman Paula look at only the first four
 

00:45:33.670 --> 00:45:37.050 align:start position:0%
Mayman Paula look at only the first four
lines<00:45:34.000><c> for</c><00:45:34.270><c> me</c><00:45:34.530><c> notice</c><00:45:35.530><c> get</c><00:45:36.010><c> gender</c><00:45:36.460><c> get</c><00:45:36.760><c> age</c>

00:45:37.050 --> 00:45:37.060 align:start position:0%
lines for me notice get gender get age
 

00:45:37.060 --> 00:45:40.079 align:start position:0%
lines for me notice get gender get age
then<00:45:37.960><c> again</c><00:45:38.260><c> get</c><00:45:38.589><c> gender</c><00:45:38.890><c> and</c><00:45:39.040><c> get</c><00:45:39.220><c> age</c><00:45:39.430><c> then</c>

00:45:40.079 --> 00:45:40.089 align:start position:0%
then again get gender and get age then
 

00:45:40.089 --> 00:45:42.660 align:start position:0%
then again get gender and get age then
again<00:45:40.390><c> get</c><00:45:40.599><c> gender</c><00:45:40.990><c> in</c><00:45:41.260><c> other</c><00:45:41.530><c> words</c><00:45:41.770><c> unlike</c>

00:45:42.660 --> 00:45:42.670 align:start position:0%
again get gender in other words unlike
 

00:45:42.670 --> 00:45:46.020 align:start position:0%
again get gender in other words unlike
Ruby<00:45:43.150><c> where</c><00:45:43.390><c> all</c><00:45:44.109><c> of</c><00:45:44.680><c> the</c><00:45:44.829><c> methods</c><00:45:45.220><c> of</c><00:45:45.369><c> one</c>

00:45:46.020 --> 00:45:46.030 align:start position:0%
Ruby where all of the methods of one
 

00:45:46.030 --> 00:45:48.690 align:start position:0%
Ruby where all of the methods of one
line<00:45:46.329><c> were</c><00:45:46.510><c> executed</c><00:45:47.079><c> eagerly</c><00:45:47.560><c> this</c><00:45:48.369><c> is</c><00:45:48.520><c> being</c>

00:45:48.690 --> 00:45:48.700 align:start position:0%
line were executed eagerly this is being
 

00:45:48.700 --> 00:45:51.750 align:start position:0%
line were executed eagerly this is being
absolutely<00:45:49.329><c> lazy</c><00:45:50.050><c> it</c><00:45:50.470><c> evaluates</c><00:45:51.339><c> a</c><00:45:51.430><c> little</c>

00:45:51.750 --> 00:45:51.760 align:start position:0%
absolutely lazy it evaluates a little
 

00:45:51.760 --> 00:45:54.930 align:start position:0%
absolutely lazy it evaluates a little
bit<00:45:51.910><c> of</c><00:45:52.060><c> the</c><00:45:52.300><c> first</c><00:45:53.170><c> function</c><00:45:53.680><c> and</c><00:45:53.829><c> the</c><00:45:54.520><c> second</c>

00:45:54.930 --> 00:45:54.940 align:start position:0%
bit of the first function and the second
 

00:45:54.940 --> 00:45:57.660 align:start position:0%
bit of the first function and the second
and<00:45:55.150><c> goes</c><00:45:55.750><c> as</c><00:45:55.960><c> long</c><00:45:56.230><c> as</c><00:45:56.380><c> it</c><00:45:56.530><c> can</c><00:45:56.680><c> go</c><00:45:56.890><c> in</c><00:45:57.190><c> other</c>

00:45:57.660 --> 00:45:57.670 align:start position:0%
and goes as long as it can go in other
 

00:45:57.670 --> 00:46:01.069 align:start position:0%
and goes as long as it can go in other
words<00:45:57.940><c> it</c><00:45:59.160><c> fuses</c><00:46:00.160><c> these</c><00:46:00.310><c> functions</c>

00:46:01.069 --> 00:46:01.079 align:start position:0%
words it fuses these functions
 

00:46:01.079 --> 00:46:03.720 align:start position:0%
words it fuses these functions
collection<00:46:02.079><c> of</c><00:46:02.200><c> function</c><00:46:02.650><c> apply</c><00:46:03.400><c> on</c><00:46:03.550><c> one</c>

00:46:03.720 --> 00:46:03.730 align:start position:0%
collection of function apply on one
 

00:46:03.730 --> 00:46:06.300 align:start position:0%
collection of function apply on one
element<00:46:03.910><c> Sarah</c><00:46:04.630><c> and</c><00:46:05.020><c> if</c><00:46:05.589><c> necessary</c><00:46:05.740><c> on</c><00:46:06.160><c> the</c>

00:46:06.300 --> 00:46:06.310 align:start position:0%
element Sarah and if necessary on the
 

00:46:06.310 --> 00:46:08.460 align:start position:0%
element Sarah and if necessary on the
second<00:46:06.670><c> and</c><00:46:06.790><c> the</c><00:46:06.970><c> third</c><00:46:07.000><c> but</c><00:46:07.900><c> the</c><00:46:07.930><c> minute</c><00:46:08.349><c> it</c>

00:46:08.460 --> 00:46:08.470 align:start position:0%
second and the third but the minute it
 

00:46:08.470 --> 00:46:11.520 align:start position:0%
second and the third but the minute it
finds<00:46:08.950><c> the</c><00:46:09.099><c> answer</c><00:46:09.250><c> it</c><00:46:10.180><c> no</c><00:46:10.569><c> longer</c><00:46:10.750><c> applies</c><00:46:11.290><c> it</c>

00:46:11.520 --> 00:46:11.530 align:start position:0%
finds the answer it no longer applies it
 

00:46:11.530 --> 00:46:14.760 align:start position:0%
finds the answer it no longer applies it
in<00:46:12.220><c> fact</c><00:46:12.700><c> let's</c><00:46:12.970><c> go</c><00:46:13.150><c> to</c><00:46:13.210><c> the</c><00:46:13.390><c> next</c><00:46:13.720><c> level</c><00:46:14.109><c> to</c>

00:46:14.760 --> 00:46:14.770 align:start position:0%
in fact let's go to the next level to
 

00:46:14.770 --> 00:46:17.190 align:start position:0%
in fact let's go to the next level to
see<00:46:14.980><c> how</c><00:46:15.310><c> laziness</c><00:46:15.970><c> really</c><00:46:16.450><c> plays</c><00:46:16.660><c> a</c><00:46:16.690><c> role</c><00:46:16.960><c> in</c>

00:46:17.190 --> 00:46:17.200 align:start position:0%
see how laziness really plays a role in
 

00:46:17.200 --> 00:46:19.890 align:start position:0%
see how laziness really plays a role in
here<00:46:17.560><c> if</c><00:46:18.400><c> we</c><00:46:18.700><c> were</c><00:46:18.849><c> to</c><00:46:19.119><c> go</c><00:46:19.510><c> back</c><00:46:19.630><c> to</c><00:46:19.780><c> this</c>

00:46:19.890 --> 00:46:19.900 align:start position:0%
here if we were to go back to this
 

00:46:19.900 --> 00:46:23.010 align:start position:0%
here if we were to go back to this
example<00:46:20.230><c> and</c><00:46:21.030><c> let's</c><00:46:22.030><c> remove</c><00:46:22.329><c> the</c><00:46:22.510><c> print</c><00:46:22.780><c> line</c>

00:46:23.010 --> 00:46:23.020 align:start position:0%
example and let's remove the print line
 

00:46:23.020 --> 00:46:26.010 align:start position:0%
example and let's remove the print line
for<00:46:23.440><c> a</c><00:46:23.470><c> second</c><00:46:23.950><c> and</c><00:46:24.160><c> in</c><00:46:24.910><c> this</c><00:46:25.030><c> case</c><00:46:25.300><c> I'm</c><00:46:25.750><c> going</c>

00:46:26.010 --> 00:46:26.020 align:start position:0%
for a second and in this case I'm going
 

00:46:26.020 --> 00:46:29.099 align:start position:0%
for a second and in this case I'm going
to<00:46:26.079><c> go</c><00:46:26.140><c> ahead</c><00:46:26.290><c> and</c><00:46:26.500><c> say</c><00:46:26.680><c> done</c><00:46:27.369><c> right</c><00:46:28.060><c> here</c><00:46:28.300><c> when</c>

00:46:29.099 --> 00:46:29.109 align:start position:0%
to go ahead and say done right here when
 

00:46:29.109 --> 00:46:30.780 align:start position:0%
to go ahead and say done right here when
I<00:46:29.140><c> execute</c><00:46:29.530><c> the</c><00:46:29.770><c> code</c><00:46:29.950><c> you</c><00:46:30.069><c> can</c><00:46:30.130><c> see</c><00:46:30.339><c> all</c><00:46:30.579><c> that</c>

00:46:30.780 --> 00:46:30.790 align:start position:0%
I execute the code you can see all that
 

00:46:30.790 --> 00:46:33.839 align:start position:0%
I execute the code you can see all that
output<00:46:31.180><c> and</c><00:46:31.390><c> they're</c><00:46:31.569><c> done</c><00:46:31.890><c> however</c><00:46:32.890><c> if</c><00:46:33.640><c> I</c>

00:46:33.839 --> 00:46:33.849 align:start position:0%
output and they're done however if I
 

00:46:33.849 --> 00:46:37.540 align:start position:0%
output and they're done however if I
were<00:46:33.880><c> to</c><00:46:34.210><c> go</c><00:46:34.329><c> back</c><00:46:34.359><c> and</c><00:46:34.810><c> comment</c><00:46:35.410><c> out</c><00:46:35.640><c> just</c><00:46:36.640><c> the</c>

00:46:37.540 --> 00:46:37.550 align:start position:0%
were to go back and comment out just the
 

00:46:37.550 --> 00:46:41.320 align:start position:0%
were to go back and comment out just the
last<00:46:37.730><c> two</c><00:46:38.180><c> lines</c><00:46:38.540><c> over</c><00:46:39.110><c> here</c><00:46:39.460><c> then</c><00:46:40.460><c> we're</c><00:46:41.150><c> not</c>

00:46:41.320 --> 00:46:41.330 align:start position:0%
last two lines over here then we're not
 

00:46:41.330 --> 00:46:44.230 align:start position:0%
last two lines over here then we're not
calling<00:46:41.600><c> the</c><00:46:41.930><c> terminal</c><00:46:42.800><c> method</c><00:46:43.220><c> we</c><00:46:43.910><c> have</c><00:46:44.060><c> this</c>

00:46:44.230 --> 00:46:44.240 align:start position:0%
calling the terminal method we have this
 

00:46:44.240 --> 00:46:47.650 align:start position:0%
calling the terminal method we have this
collection<00:46:44.690><c> of</c><00:46:45.320><c> this</c><00:46:46.150><c> terminal</c><00:46:47.150><c> functions</c>

00:46:47.650 --> 00:46:47.660 align:start position:0%
collection of this terminal functions
 

00:46:47.660 --> 00:46:50.200 align:start position:0%
collection of this terminal functions
fused<00:46:48.170><c> together</c><00:46:48.460><c> but</c><00:46:49.460><c> we</c><00:46:49.610><c> never</c><00:46:49.640><c> call</c><00:46:50.090><c> the</c>

00:46:50.200 --> 00:46:50.210 align:start position:0%
fused together but we never call the
 

00:46:50.210 --> 00:46:52.450 align:start position:0%
fused together but we never call the
terminal<00:46:50.600><c> method</c><00:46:50.930><c> it's</c><00:46:51.560><c> a</c><00:46:51.680><c> terminal</c><00:46:51.950><c> method</c>

00:46:52.450 --> 00:46:52.460 align:start position:0%
terminal method it's a terminal method
 

00:46:52.460 --> 00:46:54.670 align:start position:0%
terminal method it's a terminal method
that<00:46:52.580><c> triggers</c><00:46:52.940><c> the</c><00:46:53.120><c> evaluation</c><00:46:53.720><c> as</c><00:46:53.900><c> you</c><00:46:54.530><c> can</c>

00:46:54.670 --> 00:46:54.680 align:start position:0%
that triggers the evaluation as you can
 

00:46:54.680 --> 00:46:57.790 align:start position:0%
that triggers the evaluation as you can
see<00:46:54.890><c> in</c><00:46:55.100><c> here</c><00:46:55.520><c> the</c><00:46:56.060><c> result</c><00:46:56.390><c> is</c><00:46:56.510><c> simply</c><00:46:56.660><c> done</c><00:46:57.260><c> it</c>

00:46:57.790 --> 00:46:57.800 align:start position:0%
see in here the result is simply done it
 

00:46:57.800 --> 00:47:01.240 align:start position:0%
see in here the result is simply done it
doesn't<00:46:58.670><c> really</c><00:46:59.290><c> execute</c><00:47:00.290><c> all</c><00:47:00.560><c> the</c>

00:47:01.240 --> 00:47:01.250 align:start position:0%
doesn't really execute all the
 

00:47:01.250 --> 00:47:02.590 align:start position:0%
doesn't really execute all the
intermediate<00:47:01.880><c> functions</c>

00:47:02.590 --> 00:47:02.600 align:start position:0%
intermediate functions
 

00:47:02.600 --> 00:47:06.370 align:start position:0%
intermediate functions
it's<00:47:03.020><c> absolutely</c><00:47:03.980><c> lazy</c><00:47:04.780><c> I've</c><00:47:05.780><c> been</c><00:47:05.990><c> working</c>

00:47:06.370 --> 00:47:06.380 align:start position:0%
it's absolutely lazy I've been working
 

00:47:06.380 --> 00:47:08.380 align:start position:0%
it's absolutely lazy I've been working
on<00:47:06.560><c> a</c><00:47:06.590><c> project</c><00:47:06.890><c> where</c><00:47:07.310><c> we</c><00:47:07.370><c> are</c><00:47:08.060><c> dealing</c><00:47:08.240><c> with</c>

00:47:08.380 --> 00:47:08.390 align:start position:0%
on a project where we are dealing with
 

00:47:08.390 --> 00:47:11.440 align:start position:0%
on a project where we are dealing with
literally<00:47:09.290><c> millions</c><00:47:10.250><c> and</c><00:47:10.730><c> millions</c><00:47:11.210><c> of</c>

00:47:11.440 --> 00:47:11.450 align:start position:0%
literally millions and millions of
 

00:47:11.450 --> 00:47:13.690 align:start position:0%
literally millions and millions of
pieces<00:47:11.660><c> of</c><00:47:11.840><c> data</c><00:47:12.200><c> we've</c><00:47:13.130><c> been</c><00:47:13.280><c> running</c><00:47:13.490><c> it</c>

00:47:13.690 --> 00:47:13.700 align:start position:0%
pieces of data we've been running it
 

00:47:13.700 --> 00:47:15.610 align:start position:0%
pieces of data we've been running it
through<00:47:13.730><c> the</c><00:47:14.150><c> functional</c><00:47:14.570><c> pipeline</c><00:47:14.930><c> through</c>

00:47:15.610 --> 00:47:15.620 align:start position:0%
through the functional pipeline through
 

00:47:15.620 --> 00:47:19.470 align:start position:0%
through the functional pipeline through
lambdas<00:47:16.190><c> in</c><00:47:16.550><c> fact</c><00:47:17.180><c> a</c><00:47:17.420><c> lot</c><00:47:18.140><c> of</c><00:47:18.320><c> lambdas</c><00:47:18.950><c> and</c>

00:47:19.470 --> 00:47:19.480 align:start position:0%
lambdas in fact a lot of lambdas and
 

00:47:19.480 --> 00:47:21.670 align:start position:0%
lambdas in fact a lot of lambdas and
we're<00:47:20.480><c> not</c><00:47:20.660><c> seeing</c><00:47:20.930><c> any</c><00:47:21.170><c> performance</c>

00:47:21.670 --> 00:47:21.680 align:start position:0%
we're not seeing any performance
 

00:47:21.680 --> 00:47:24.430 align:start position:0%
we're not seeing any performance
degradation<00:47:21.830><c> due</c><00:47:22.790><c> to</c><00:47:22.940><c> lambdas</c><00:47:23.420><c> or</c><00:47:23.660><c> due</c><00:47:24.290><c> to</c>

00:47:24.430 --> 00:47:24.440 align:start position:0%
degradation due to lambdas or due to
 

00:47:24.440 --> 00:47:26.980 align:start position:0%
degradation due to lambdas or due to
pipeline<00:47:25.100><c> in</c><00:47:25.700><c> fact</c><00:47:26.090><c> there's</c><00:47:26.270><c> a</c><00:47:26.360><c> benefit</c><00:47:26.840><c> we</c>

00:47:26.980 --> 00:47:26.990 align:start position:0%
pipeline in fact there's a benefit we
 

00:47:26.990 --> 00:47:29.290 align:start position:0%
pipeline in fact there's a benefit we
get<00:47:27.140><c> right</c><00:47:27.500><c> off</c><00:47:27.680><c> the</c><00:47:27.830><c> bat</c><00:47:27.980><c> not</c><00:47:28.850><c> only</c><00:47:29.090><c> can</c><00:47:29.270><c> we</c>

00:47:29.290 --> 00:47:29.300 align:start position:0%
get right off the bat not only can we
 

00:47:29.300 --> 00:47:31.420 align:start position:0%
get right off the bat not only can we
have<00:47:29.540><c> efficiency</c><00:47:30.110><c> through</c><00:47:30.320><c> lace</c><00:47:30.590><c> evaluation</c>

00:47:31.420 --> 00:47:31.430 align:start position:0%
have efficiency through lace evaluation
 

00:47:31.430 --> 00:47:33.970 align:start position:0%
have efficiency through lace evaluation
we<00:47:32.210><c> can</c><00:47:32.330><c> also</c><00:47:32.450><c> paralyze</c><00:47:33.170><c> the</c><00:47:33.350><c> scored</c><00:47:33.620><c> also</c>

00:47:33.970 --> 00:47:33.980 align:start position:0%
we can also paralyze the scored also
 

00:47:33.980 --> 00:47:37.060 align:start position:0%
we can also paralyze the scored also
more<00:47:34.160><c> easily</c><00:47:34.670><c> to</c><00:47:35.450><c> get</c><00:47:35.600><c> there</c><00:47:35.720><c> as</c><00:47:35.810><c> a</c><00:47:35.840><c> faster</c><00:47:36.590><c> if</c>

00:47:37.060 --> 00:47:37.070 align:start position:0%
more easily to get there as a faster if
 

00:47:37.070 --> 00:47:39.880 align:start position:0%
more easily to get there as a faster if
we<00:47:37.280><c> have</c><00:47:37.430><c> a</c><00:47:37.610><c> lot</c><00:47:37.790><c> of</c><00:47:37.970><c> data</c><00:47:38.150><c> to</c><00:47:38.390><c> process</c><00:47:38.660><c> so</c><00:47:39.560><c> in</c>

00:47:39.880 --> 00:47:39.890 align:start position:0%
we have a lot of data to process so in
 

00:47:39.890 --> 00:47:42.850 align:start position:0%
we have a lot of data to process so in
other<00:47:40.010><c> words</c><00:47:40.330><c> the</c><00:47:41.330><c> function</c><00:47:42.170><c> of</c><00:47:42.290><c> style</c><00:47:42.710><c> of</c>

00:47:42.850 --> 00:47:42.860 align:start position:0%
other words the function of style of
 

00:47:42.860 --> 00:47:45.490 align:start position:0%
other words the function of style of
programming<00:47:43.040><c> is</c><00:47:43.490><c> very</c><00:47:43.850><c> charming</c><00:47:44.500><c> the</c>

00:47:45.490 --> 00:47:45.500 align:start position:0%
programming is very charming the
 

00:47:45.500 --> 00:47:46.690 align:start position:0%
programming is very charming the
function<00:47:45.860><c> pipelining</c>

00:47:46.690 --> 00:47:46.700 align:start position:0%
function pipelining
 

00:47:46.700 --> 00:47:50.770 align:start position:0%
function pipelining
is<00:47:46.930><c> beautiful</c><00:47:47.930><c> it</c><00:47:48.560><c> removes</c><00:47:49.160><c> the</c><00:47:49.910><c> accidental</c>

00:47:50.770 --> 00:47:50.780 align:start position:0%
is beautiful it removes the accidental
 

00:47:50.780 --> 00:47:53.680 align:start position:0%
is beautiful it removes the accidental
complexity<00:47:51.590><c> from</c><00:47:51.890><c> the</c><00:47:52.070><c> code</c><00:47:52.510><c> compared</c><00:47:53.510><c> to</c><00:47:53.660><c> a</c>

00:47:53.680 --> 00:47:53.690 align:start position:0%
complexity from the code compared to a
 

00:47:53.690 --> 00:47:56.110 align:start position:0%
complexity from the code compared to a
imperative<00:47:54.440><c> style</c><00:47:54.650><c> code</c><00:47:54.950><c> a</c><00:47:55.190><c> function</c><00:47:56.000><c> of</c>

00:47:56.110 --> 00:47:56.120 align:start position:0%
imperative style code a function of
 

00:47:56.120 --> 00:47:58.870 align:start position:0%
imperative style code a function of
style<00:47:56.360><c> code</c><00:47:56.630><c> is</c><00:47:56.870><c> a</c><00:47:56.900><c> single</c><00:47:57.440><c> pass</c><00:47:57.710><c> through</c><00:47:58.130><c> the</c>

00:47:58.870 --> 00:47:58.880 align:start position:0%
style code is a single pass through the
 

00:47:58.880 --> 00:48:00.760 align:start position:0%
style code is a single pass through the
code<00:47:59.120><c> begins</c><00:47:59.480><c> to</c><00:47:59.600><c> read</c><00:47:59.870><c> like</c><00:48:00.110><c> the</c><00:48:00.230><c> problem</c>

00:48:00.760 --> 00:48:00.770 align:start position:0%
code begins to read like the problem
 

00:48:00.770 --> 00:48:02.950 align:start position:0%
code begins to read like the problem
statement<00:48:01.040><c> we</c><00:48:01.400><c> can</c><00:48:01.940><c> relate</c><00:48:02.270><c> to</c><00:48:02.330><c> what</c><00:48:02.660><c> the</c><00:48:02.780><c> code</c>

00:48:02.950 --> 00:48:02.960 align:start position:0%
statement we can relate to what the code
 

00:48:02.960 --> 00:48:05.290 align:start position:0%
statement we can relate to what the code
is<00:48:02.990><c> doing</c><00:48:03.170><c> and</c><00:48:03.710><c> we</c><00:48:04.220><c> can</c><00:48:04.370><c> quickly</c><00:48:04.580><c> understand</c>

00:48:05.290 --> 00:48:05.300 align:start position:0%
is doing and we can quickly understand
 

00:48:05.300 --> 00:48:07.510 align:start position:0%
is doing and we can quickly understand
it<00:48:05.450><c> it</c><00:48:05.930><c> removes</c><00:48:06.410><c> that</c><00:48:06.620><c> accidental</c><00:48:07.040><c> complexity</c>

00:48:07.510 --> 00:48:07.520 align:start position:0%
it it removes that accidental complexity
 

00:48:07.520 --> 00:48:09.400 align:start position:0%
it it removes that accidental complexity
and<00:48:07.880><c> makes</c><00:48:08.360><c> the</c><00:48:08.480><c> code</c><00:48:08.600><c> easier</c><00:48:08.660><c> to</c><00:48:08.960><c> understand</c>

00:48:09.400 --> 00:48:09.410 align:start position:0%
and makes the code easier to understand
 

00:48:09.410 --> 00:48:12.730 align:start position:0%
and makes the code easier to understand
the<00:48:09.800><c> code</c><00:48:09.980><c> is</c><00:48:10.190><c> cookies</c><00:48:11.080><c> every</c><00:48:12.080><c> single</c><00:48:12.560><c> line</c><00:48:12.710><c> of</c>

00:48:12.730 --> 00:48:12.740 align:start position:0%
the code is cookies every single line of
 

00:48:12.740 --> 00:48:15.880 align:start position:0%
the code is cookies every single line of
code<00:48:12.920><c> that's</c><00:48:13.640><c> one</c><00:48:13.970><c> thing</c><00:48:14.240><c> only</c><00:48:14.560><c> this</c><00:48:15.560><c> line</c>

00:48:15.880 --> 00:48:15.890 align:start position:0%
code that's one thing only this line
 

00:48:15.890 --> 00:48:18.730 align:start position:0%
code that's one thing only this line
checks<00:48:16.280><c> if</c><00:48:16.490><c> a</c><00:48:16.670><c> person</c><00:48:17.060><c> is</c><00:48:17.330><c> a</c><00:48:17.570><c> female</c><00:48:18.080><c> or</c><00:48:18.470><c> male</c>

00:48:18.730 --> 00:48:18.740 align:start position:0%
checks if a person is a female or male
 

00:48:18.740 --> 00:48:21.580 align:start position:0%
checks if a person is a female or male
this<00:48:19.700><c> checks</c><00:48:20.030><c> if</c><00:48:20.240><c> the</c><00:48:20.630><c> a</c><00:48:20.780><c> age</c><00:48:21.050><c> is</c><00:48:21.200><c> greater</c><00:48:21.320><c> than</c>

00:48:21.580 --> 00:48:21.590 align:start position:0%
this checks if the a age is greater than
 

00:48:21.590 --> 00:48:24.550 align:start position:0%
this checks if the a age is greater than
30<00:48:21.860><c> this</c><00:48:22.610><c> gets</c><00:48:22.880><c> the</c><00:48:23.030><c> name</c><00:48:23.150><c> this</c><00:48:23.990><c> transforms</c>

00:48:24.550 --> 00:48:24.560 align:start position:0%
30 this gets the name this transforms
 

00:48:24.560 --> 00:48:26.410 align:start position:0%
30 this gets the name this transforms
the<00:48:24.620><c> name</c><00:48:24.770><c> to</c><00:48:24.920><c> uppercase</c><00:48:25.180><c> compare</c><00:48:26.180><c> this</c><00:48:26.300><c> to</c>

00:48:26.410 --> 00:48:26.420 align:start position:0%
the name to uppercase compare this to
 

00:48:26.420 --> 00:48:28.540 align:start position:0%
the name to uppercase compare this to
the<00:48:26.510><c> previous</c><00:48:26.630><c> code</c><00:48:27.080><c> we</c><00:48:27.290><c> wrote</c><00:48:27.440><c> where</c><00:48:27.770><c> a</c><00:48:28.040><c> line</c>

00:48:28.540 --> 00:48:28.550 align:start position:0%
the previous code we wrote where a line
 

00:48:28.550 --> 00:48:30.310 align:start position:0%
the previous code we wrote where a line
was<00:48:28.790><c> doing</c><00:48:29.000><c> multiple</c><00:48:29.390><c> things</c><00:48:29.630><c> lack</c><00:48:30.170><c> of</c>

00:48:30.310 --> 00:48:30.320 align:start position:0%
was doing multiple things lack of
 

00:48:30.320 --> 00:48:33.190 align:start position:0%
was doing multiple things lack of
cohesion<00:48:30.650><c> this</c><00:48:31.580><c> one</c><00:48:31.790><c> is</c><00:48:31.910><c> easier</c><00:48:32.240><c> to</c><00:48:32.300><c> remove</c>

00:48:33.190 --> 00:48:33.200 align:start position:0%
cohesion this one is easier to remove
 

00:48:33.200 --> 00:48:36.400 align:start position:0%
cohesion this one is easier to remove
some<00:48:33.620><c> pieces</c><00:48:33.770><c> or</c><00:48:34.340><c> to</c><00:48:34.850><c> add</c><00:48:35.000><c> some</c><00:48:35.420><c> pieces</c><00:48:35.630><c> it's</c>

00:48:36.400 --> 00:48:36.410 align:start position:0%
some pieces or to add some pieces it's
 

00:48:36.410 --> 00:48:38.710 align:start position:0%
some pieces or to add some pieces it's
cohesive<00:48:36.890><c> a</c><00:48:37.340><c> cohesive</c><00:48:38.000><c> code</c><00:48:38.150><c> is</c><00:48:38.270><c> easier</c><00:48:38.690><c> to</c>

00:48:38.710 --> 00:48:38.720 align:start position:0%
cohesive a cohesive code is easier to
 

00:48:38.720 --> 00:48:41.410 align:start position:0%
cohesive a cohesive code is easier to
modify<00:48:39.110><c> the</c><00:48:39.950><c> code</c><00:48:40.190><c> removes</c><00:48:40.850><c> the</c><00:48:41.060><c> impedance</c>

00:48:41.410 --> 00:48:41.420 align:start position:0%
modify the code removes the impedance
 

00:48:41.420 --> 00:48:44.110 align:start position:0%
modify the code removes the impedance
mismatch<00:48:42.020><c> of</c><00:48:42.260><c> trying</c><00:48:42.950><c> to</c><00:48:43.010><c> figure</c><00:48:43.580><c> out</c><00:48:43.850><c> and</c>

00:48:44.110 --> 00:48:44.120 align:start position:0%
mismatch of trying to figure out and
 

00:48:44.120 --> 00:48:46.360 align:start position:0%
mismatch of trying to figure out and
extract<00:48:44.960><c> the</c><00:48:45.140><c> details</c><00:48:45.590><c> of</c><00:48:45.770><c> business</c><00:48:45.950><c> logic</c>

00:48:46.360 --> 00:48:46.370 align:start position:0%
extract the details of business logic
 

00:48:46.370 --> 00:48:48.550 align:start position:0%
extract the details of business logic
from<00:48:46.580><c> the</c><00:48:46.790><c> code</c><00:48:47.030><c> the</c><00:48:47.690><c> code</c><00:48:47.930><c> becomes</c><00:48:48.350><c> the</c>

00:48:48.550 --> 00:48:48.560 align:start position:0%
from the code the code becomes the
 

00:48:48.560 --> 00:48:50.680 align:start position:0%
from the code the code becomes the
business<00:48:48.890><c> logic</c><00:48:49.130><c> the</c><00:48:49.730><c> code</c><00:48:49.940><c> becomes</c><00:48:50.300><c> easier</c>

00:48:50.680 --> 00:48:50.690 align:start position:0%
business logic the code becomes easier
 

00:48:50.690 --> 00:48:50.850 align:start position:0%
business logic the code becomes easier
to

00:48:50.850 --> 00:48:50.860 align:start position:0%
to
 

00:48:50.860 --> 00:48:53.640 align:start position:0%
to
understand<00:48:51.310><c> and</c><00:48:51.520><c> see</c><00:48:52.150><c> what</c><00:48:52.390><c> it's</c><00:48:52.540><c> doing</c><00:48:52.720><c> but</c>

00:48:53.640 --> 00:48:53.650 align:start position:0%
understand and see what it's doing but
 

00:48:53.650 --> 00:48:55.710 align:start position:0%
understand and see what it's doing but
of<00:48:53.740><c> course</c><00:48:54.010><c> we</c><00:48:54.220><c> cannot</c><00:48:54.580><c> claim</c><00:48:55.030><c> all</c><00:48:55.360><c> this</c>

00:48:55.710 --> 00:48:55.720 align:start position:0%
of course we cannot claim all this
 

00:48:55.720 --> 00:48:59.010 align:start position:0%
of course we cannot claim all this
beauty<00:48:56.260><c> is</c><00:48:56.950><c> great</c><00:48:57.460><c> but</c><00:48:58.420><c> we</c><00:48:58.570><c> can't</c><00:48:58.840><c> give</c>

00:48:59.010 --> 00:48:59.020 align:start position:0%
beauty is great but we can't give
 

00:48:59.020 --> 00:49:02.460 align:start position:0%
beauty is great but we can't give
performance<00:48:59.680><c> so</c><00:49:00.340><c> to</c><00:49:00.400><c> me</c><00:49:00.780><c> what</c><00:49:01.780><c> really</c><00:49:02.050><c> grabbed</c>

00:49:02.460 --> 00:49:02.470 align:start position:0%
performance so to me what really grabbed
 

00:49:02.470 --> 00:49:05.610 align:start position:0%
performance so to me what really grabbed
my<00:49:02.590><c> attention</c><00:49:02.650><c> in</c><00:49:03.430><c> Java</c><00:49:03.970><c> was</c><00:49:04.330><c> not</c><00:49:05.170><c> the</c><00:49:05.350><c> fact</c>

00:49:05.610 --> 00:49:05.620 align:start position:0%
my attention in Java was not the fact
 

00:49:05.620 --> 00:49:08.730 align:start position:0%
my attention in Java was not the fact
that<00:49:05.770><c> Java</c><00:49:06.100><c> has</c><00:49:06.360><c> lambda</c><00:49:07.360><c> expressions</c><00:49:08.050><c> have</c>

00:49:08.730 --> 00:49:08.740 align:start position:0%
that Java has lambda expressions have
 

00:49:08.740 --> 00:49:10.830 align:start position:0%
that Java has lambda expressions have
you<00:49:08.950><c> slammed</c><00:49:09.280><c> as</c><00:49:09.490><c> in</c><00:49:09.640><c> other</c><00:49:09.850><c> languages</c><00:49:10.390><c> Ruby</c>

00:49:10.830 --> 00:49:10.840 align:start position:0%
you slammed as in other languages Ruby
 

00:49:10.840 --> 00:49:15.240 align:start position:0%
you slammed as in other languages Ruby
groovy<00:49:11.760><c> Python</c><00:49:12.760><c> to</c><00:49:13.330><c> name</c><00:49:13.510><c> a</c><00:49:13.540><c> few</c><00:49:13.960><c> and</c><00:49:14.290><c> Scala</c><00:49:14.980><c> of</c>

00:49:15.240 --> 00:49:15.250 align:start position:0%
groovy Python to name a few and Scala of
 

00:49:15.250 --> 00:49:17.880 align:start position:0%
groovy Python to name a few and Scala of
course<00:49:15.490><c> in</c><00:49:15.640><c> closure</c><00:49:15.940><c> and</c><00:49:16.300><c> so</c><00:49:16.450><c> on</c><00:49:16.890><c> however</c>

00:49:17.880 --> 00:49:17.890 align:start position:0%
course in closure and so on however
 

00:49:17.890 --> 00:49:21.600 align:start position:0%
course in closure and so on however
these<00:49:18.850><c> all</c><00:49:19.180><c> these</c><00:49:19.480><c> beautiful</c><00:49:20.610><c> function</c>

00:49:21.600 --> 00:49:21.610 align:start position:0%
these all these beautiful function
 

00:49:21.610 --> 00:49:24.300 align:start position:0%
these all these beautiful function
pipelining<00:49:22.180><c> and</c><00:49:22.510><c> expressive</c><00:49:23.260><c> code</c><00:49:23.500><c> these</c>

00:49:24.300 --> 00:49:24.310 align:start position:0%
pipelining and expressive code these
 

00:49:24.310 --> 00:49:26.310 align:start position:0%
pipelining and expressive code these
things<00:49:24.640><c> we</c><00:49:24.790><c> can</c><00:49:24.970><c> only</c><00:49:25.090><c> frame</c><00:49:25.540><c> and</c><00:49:25.750><c> celebrate</c>

00:49:26.310 --> 00:49:26.320 align:start position:0%
things we can only frame and celebrate
 

00:49:26.320 --> 00:49:29.220 align:start position:0%
things we can only frame and celebrate
but<00:49:27.100><c> can't</c><00:49:27.490><c> really</c><00:49:27.790><c> use</c><00:49:28.030><c> on</c><00:49:28.270><c> big</c><00:49:28.420><c> projects</c><00:49:29.020><c> and</c>

00:49:29.220 --> 00:49:29.230 align:start position:0%
but can't really use on big projects and
 

00:49:29.230 --> 00:49:32.940 align:start position:0%
but can't really use on big projects and
big<00:49:30.010><c> data</c><00:49:30.220><c> projects</c><00:49:30.790><c> if</c><00:49:31.510><c> the</c><00:49:32.410><c> language</c><00:49:32.590><c> does</c>

00:49:32.940 --> 00:49:32.950 align:start position:0%
big data projects if the language does
 

00:49:32.950 --> 00:49:36.600 align:start position:0%
big data projects if the language does
not<00:49:32.980><c> support</c><00:49:33.550><c> lazy</c><00:49:34.330><c> evaluation</c><00:49:34.920><c> so</c><00:49:35.920><c> the</c><00:49:36.370><c> fact</c>

00:49:36.600 --> 00:49:36.610 align:start position:0%
not support lazy evaluation so the fact
 

00:49:36.610 --> 00:49:39.210 align:start position:0%
not support lazy evaluation so the fact
that<00:49:36.730><c> Java</c><00:49:37.150><c> supports</c><00:49:37.690><c> laziness</c><00:49:38.380><c> is</c><00:49:38.890><c> one</c><00:49:39.130><c> of</c>

00:49:39.210 --> 00:49:39.220 align:start position:0%
that Java supports laziness is one of
 

00:49:39.220 --> 00:49:41.670 align:start position:0%
that Java supports laziness is one of
the<00:49:39.280><c> most</c><00:49:39.460><c> charming</c><00:49:39.640><c> features</c><00:49:40.470><c> streams</c><00:49:41.470><c> are</c>

00:49:41.670 --> 00:49:41.680 align:start position:0%
the most charming features streams are
 

00:49:41.680 --> 00:49:43.530 align:start position:0%
the most charming features streams are
really<00:49:41.950><c> powerful</c><00:49:42.360><c> but</c><00:49:43.360><c> there</c><00:49:43.480><c> are</c>

00:49:43.530 --> 00:49:43.540 align:start position:0%
really powerful but there are
 

00:49:43.540 --> 00:49:45.240 align:start position:0%
really powerful but there are
limitations<00:49:44.020><c> to</c><00:49:44.050><c> stream</c><00:49:44.350><c> as</c><00:49:44.530><c> well</c><00:49:44.800><c> in</c><00:49:44.980><c> Java</c>

00:49:45.240 --> 00:49:45.250 align:start position:0%
limitations to stream as well in Java
 

00:49:45.250 --> 00:49:47.580 align:start position:0%
limitations to stream as well in Java
Java<00:49:46.210><c> streams</c><00:49:46.540><c> unfortunately</c><00:49:47.140><c> don't</c><00:49:47.320><c> handle</c>

00:49:47.580 --> 00:49:47.590 align:start position:0%
Java streams unfortunately don't handle
 

00:49:47.590 --> 00:49:50.190 align:start position:0%
Java streams unfortunately don't handle
exceptions<00:49:48.160><c> really</c><00:49:48.550><c> well</c><00:49:48.730><c> and</c><00:49:49.030><c> if</c><00:49:49.840><c> you</c><00:49:49.930><c> really</c>

00:49:50.190 --> 00:49:50.200 align:start position:0%
exceptions really well and if you really
 

00:49:50.200 --> 00:49:52.440 align:start position:0%
exceptions really well and if you really
want<00:49:50.380><c> to</c><00:49:50.470><c> do</c><00:49:50.530><c> powerful</c><00:49:50.770><c> streaming</c><00:49:51.550><c> there</c><00:49:52.330><c> are</c>

00:49:52.440 --> 00:49:52.450 align:start position:0%
want to do powerful streaming there are
 

00:49:52.450 --> 00:49:54.510 align:start position:0%
want to do powerful streaming there are
other<00:49:52.630><c> things</c><00:49:52.900><c> you</c><00:49:53.020><c> can</c><00:49:53.080><c> do</c><00:49:53.440><c> for</c><00:49:53.950><c> example</c><00:49:54.370><c> the</c>

00:49:54.510 --> 00:49:54.520 align:start position:0%
other things you can do for example the
 

00:49:54.520 --> 00:49:56.730 align:start position:0%
other things you can do for example the
reactive<00:49:54.880><c> programming</c><00:49:55.030><c> model</c><00:49:55.740><c> observables</c>

00:49:56.730 --> 00:49:56.740 align:start position:0%
reactive programming model observables
 

00:49:56.740 --> 00:49:59.460 align:start position:0%
reactive programming model observables
and<00:49:56.890><c> flow</c><00:49:57.400><c> those</c><00:49:58.360><c> ideas</c><00:49:58.750><c> are</c><00:49:58.960><c> not</c><00:49:59.110><c> very</c>

00:49:59.460 --> 00:49:59.470 align:start position:0%
and flow those ideas are not very
 

00:49:59.470 --> 00:50:01.620 align:start position:0%
and flow those ideas are not very
different<00:49:59.680><c> from</c><00:49:59.860><c> streams</c><00:50:00.310><c> just</c><00:50:01.000><c> the</c><00:50:01.240><c> streams</c>

00:50:01.620 --> 00:50:01.630 align:start position:0%
different from streams just the streams
 

00:50:01.630 --> 00:50:03.150 align:start position:0%
different from streams just the streams
implemented<00:50:02.200><c> in</c><00:50:02.260><c> Java</c><00:50:02.470><c> has</c><00:50:02.710><c> a</c><00:50:02.950><c> few</c>

00:50:03.150 --> 00:50:03.160 align:start position:0%
implemented in Java has a few
 

00:50:03.160 --> 00:50:05.250 align:start position:0%
implemented in Java has a few
limitations<00:50:03.700><c> we</c><00:50:04.390><c> do</c><00:50:04.540><c> use</c><00:50:04.720><c> streams</c><00:50:05.020><c> quite</c>

00:50:05.250 --> 00:50:05.260 align:start position:0%
limitations we do use streams quite
 

00:50:05.260 --> 00:50:07.230 align:start position:0%
limitations we do use streams quite
extensively<00:50:05.710><c> when</c><00:50:06.310><c> we</c><00:50:06.460><c> don't</c><00:50:06.640><c> really</c><00:50:06.820><c> have</c><00:50:07.090><c> to</c>

00:50:07.230 --> 00:50:07.240 align:start position:0%
extensively when we don't really have to
 

00:50:07.240 --> 00:50:09.150 align:start position:0%
extensively when we don't really have to
worry<00:50:07.450><c> about</c><00:50:07.720><c> those</c><00:50:07.900><c> limitations</c><00:50:08.470><c> depends</c><00:50:09.040><c> on</c>

00:50:09.150 --> 00:50:09.160 align:start position:0%
worry about those limitations depends on
 

00:50:09.160 --> 00:50:12.540 align:start position:0%
worry about those limitations depends on
the<00:50:09.250><c> case</c><00:50:09.430><c> but</c><00:50:10.390><c> just</c><00:50:11.200><c> like</c><00:50:11.380><c> I</c><00:50:11.500><c> said</c><00:50:11.770><c> languages</c>

00:50:12.540 --> 00:50:12.550 align:start position:0%
the case but just like I said languages
 

00:50:12.550 --> 00:50:14.880 align:start position:0%
the case but just like I said languages
are<00:50:12.640><c> created</c><00:50:13.030><c> different</c><00:50:13.450><c> one</c><00:50:14.440><c> of</c><00:50:14.530><c> the</c><00:50:14.590><c> reasons</c>

00:50:14.880 --> 00:50:14.890 align:start position:0%
are created different one of the reasons
 

00:50:14.890 --> 00:50:17.280 align:start position:0%
are created different one of the reasons
I<00:50:14.980><c> got</c><00:50:15.100><c> really</c><00:50:15.430><c> excited</c><00:50:15.760><c> about</c><00:50:15.790><c> Java</c><00:50:16.180><c> was</c><00:50:16.480><c> not</c>

00:50:17.280 --> 00:50:17.290 align:start position:0%
I got really excited about Java was not
 

00:50:17.290 --> 00:50:20.310 align:start position:0%
I got really excited about Java was not
the<00:50:17.470><c> fact</c><00:50:17.740><c> that</c><00:50:17.830><c> Java</c><00:50:18.100><c> has</c><00:50:18.330><c> lambdas</c><00:50:19.330><c> what</c>

00:50:20.310 --> 00:50:20.320 align:start position:0%
the fact that Java has lambdas what
 

00:50:20.320 --> 00:50:23.130 align:start position:0%
the fact that Java has lambdas what
really<00:50:20.590><c> got</c><00:50:20.860><c> me</c><00:50:21.070><c> who</c><00:50:21.190><c> don't</c><00:50:21.490><c> Java</c><00:50:21.880><c> was</c><00:50:22.210><c> that</c>

00:50:23.130 --> 00:50:23.140 align:start position:0%
really got me who don't Java was that
 

00:50:23.140 --> 00:50:26.790 align:start position:0%
really got me who don't Java was that
streams<00:50:23.590><c> are</c><00:50:23.950><c> lazy</c><00:50:24.760><c> in</c><00:50:25.660><c> fact</c><00:50:26.020><c> it's</c><00:50:26.680><c> the</c>

00:50:26.790 --> 00:50:26.800 align:start position:0%
streams are lazy in fact it's the
 

00:50:26.800 --> 00:50:29.040 align:start position:0%
streams are lazy in fact it's the
laziness<00:50:27.400><c> that</c><00:50:27.700><c> drew</c><00:50:27.910><c> me</c><00:50:28.030><c> into</c><00:50:28.300><c> Java</c><00:50:28.510><c> 8</c><00:50:28.780><c> and</c>

00:50:29.040 --> 00:50:29.050 align:start position:0%
laziness that drew me into Java 8 and
 

00:50:29.050 --> 00:50:31.260 align:start position:0%
laziness that drew me into Java 8 and
I've<00:50:29.530><c> been</c><00:50:29.680><c> singing</c><00:50:29.860><c> its</c><00:50:30.070><c> praise</c><00:50:30.370><c> ever</c><00:50:30.670><c> since</c>

00:50:31.260 --> 00:50:31.270 align:start position:0%
I've been singing its praise ever since
 

00:50:31.270 --> 00:50:33.830 align:start position:0%
I've been singing its praise ever since
if<00:50:31.570><c> Java</c><00:50:31.930><c> had</c><00:50:32.110><c> not</c><00:50:32.410><c> implemented</c><00:50:33.010><c> laziness</c>

00:50:33.830 --> 00:50:33.840 align:start position:0%
if Java had not implemented laziness
 

00:50:33.840 --> 00:50:37.500 align:start position:0%
if Java had not implemented laziness
into<00:50:34.840><c> streams</c><00:50:35.500><c> API</c><00:50:35.910><c> we</c><00:50:36.910><c> wouldn't</c><00:50:37.240><c> be</c><00:50:37.330><c> talking</c>

00:50:37.500 --> 00:50:37.510 align:start position:0%
into streams API we wouldn't be talking
 

00:50:37.510 --> 00:50:39.510 align:start position:0%
into streams API we wouldn't be talking
about<00:50:37.780><c> and</c><00:50:38.170><c> getting</c><00:50:38.620><c> excited</c><00:50:38.920><c> about</c><00:50:38.980><c> Java</c><00:50:39.280><c> 8</c>

00:50:39.510 --> 00:50:39.520 align:start position:0%
about and getting excited about Java 8
 

00:50:39.520 --> 00:50:43.320 align:start position:0%
about and getting excited about Java 8
and<00:50:39.790><c> so</c><00:50:40.660><c> I'll</c><00:50:41.200><c> conclude</c><00:50:41.410><c> by</c><00:50:41.620><c> saying</c><00:50:42.330><c> laziness</c>

00:50:43.320 --> 00:50:43.330 align:start position:0%
and so I'll conclude by saying laziness
 

00:50:43.330 --> 00:50:46.380 align:start position:0%
and so I'll conclude by saying laziness
is<00:50:43.570><c> the</c><00:50:43.710><c> ultimate</c><00:50:44.710><c> sophistication</c><00:50:45.270><c> both</c><00:50:46.270><c> in</c>

00:50:46.380 --> 00:50:46.390 align:start position:0%
is the ultimate sophistication both in
 

00:50:46.390 --> 00:50:49.710 align:start position:0%
is the ultimate sophistication both in
programming<00:50:46.960><c> and</c><00:50:47.170><c> in</c><00:50:47.950><c> life</c><00:50:48.450><c> hope</c><00:50:49.450><c> that</c><00:50:49.630><c> was</c>

00:50:49.710 --> 00:50:49.720 align:start position:0%
programming and in life hope that was
 

00:50:49.720 --> 00:50:57.760 align:start position:0%
programming and in life hope that was
useful<00:50:49.840><c> thank</c><00:50:50.620><c> you</c>

00:50:57.760 --> 00:50:57.770 align:start position:0%
 
 

00:50:57.770 --> 00:51:10.599 align:start position:0%
 
you

00:51:10.599 --> 00:51:10.609 align:start position:0%
 
 

00:51:10.609 --> 00:51:14.710 align:start position:0%
 
you

00:51:14.710 --> 00:51:14.720 align:start position:0%
 
 

00:51:14.720 --> 00:51:49.950 align:start position:0%
 
you

00:51:49.950 --> 00:51:49.960 align:start position:0%
 
 

00:51:49.960 --> 00:51:54.530 align:start position:0%
 
you

00:51:54.530 --> 00:51:54.540 align:start position:0%
 
 

00:51:54.540 --> 00:51:57.970 align:start position:0%
 
you

00:51:57.970 --> 00:51:57.980 align:start position:0%
 
 

00:51:57.980 --> 00:52:01.349 align:start position:0%
 
you

00:52:01.349 --> 00:52:01.359 align:start position:0%
 
 

00:52:01.359 --> 00:52:10.830 align:start position:0%
 
you

00:52:10.830 --> 00:52:10.840 align:start position:0%
 
 

00:52:10.840 --> 00:52:15.720 align:start position:0%
 
you

00:52:15.720 --> 00:52:15.730 align:start position:0%
 
 

00:52:15.730 --> 00:53:13.530 align:start position:0%
 
you

00:53:13.530 --> 00:53:13.540 align:start position:0%
 
 

00:53:13.540 --> 00:53:27.410 align:start position:0%
 
you

00:53:27.410 --> 00:53:27.420 align:start position:0%
 
 

00:53:27.420 --> 00:56:21.420 align:start position:0%
 
you

00:56:21.420 --> 00:56:21.430 align:start position:0%
 
 

00:56:21.430 --> 00:56:49.910 align:start position:0%
 
you

00:56:49.910 --> 00:56:49.920 align:start position:0%
 
 

00:56:49.920 --> 00:57:40.819 align:start position:0%
 
you

00:57:40.819 --> 00:57:40.829 align:start position:0%
 
 

00:57:40.829 --> 00:57:46.830 align:start position:0%
 
you

00:57:46.830 --> 00:57:46.840 align:start position:0%
 
 

00:57:46.840 --> 00:57:51.480 align:start position:0%
 
you

00:57:51.480 --> 00:57:51.490 align:start position:0%
 
 

00:57:51.490 --> 00:57:58.260 align:start position:0%
 
you

00:57:58.260 --> 00:57:58.270 align:start position:0%
 
 

00:57:58.270 --> 00:59:07.450 align:start position:0%
 
you

00:59:07.450 --> 00:59:07.460 align:start position:0%
 
 

00:59:07.460 --> 00:59:24.049 align:start position:0%
 
you

00:59:24.049 --> 00:59:24.059 align:start position:0%
 
 

00:59:24.059 --> 00:59:26.789 align:start position:0%
 
you

00:59:26.789 --> 00:59:26.799 align:start position:0%
 
 

00:59:26.799 --> 00:59:30.030 align:start position:0%
 
you

00:59:30.030 --> 00:59:30.040 align:start position:0%
 
 

00:59:30.040 --> 00:59:49.250 align:start position:0%
 
you

00:59:49.250 --> 00:59:49.260 align:start position:0%
 
 

00:59:49.260 --> 00:59:52.140 align:start position:0%
 
you

00:59:52.140 --> 00:59:52.150 align:start position:0%
 
 

00:59:52.150 --> 00:59:57.960 align:start position:0%
 
you

00:59:57.960 --> 00:59:57.970 align:start position:0%
 
 

00:59:57.970 --> 01:00:00.030 align:start position:0%
 
you

