WEBVTT
Kind: captions
Language: en

00:00:03.570 --> 00:00:08.880 align:start position:0%
 
so<00:00:04.570><c> hello</c><00:00:05.200><c> everybody</c><00:00:06.810><c> let's</c><00:00:07.810><c> talk</c><00:00:08.109><c> about</c>

00:00:08.880 --> 00:00:08.890 align:start position:0%
so hello everybody let's talk about
 

00:00:08.890 --> 00:00:10.380 align:start position:0%
so hello everybody let's talk about
scaling<00:00:09.340><c> up</c><00:00:09.460><c> with</c><00:00:09.640><c> luck</c><00:00:10.059><c> for</c><00:00:10.210><c> algorithms</c>

00:00:10.380 --> 00:00:10.390 align:start position:0%
scaling up with luck for algorithms
 

00:00:10.390 --> 00:00:14.940 align:start position:0%
scaling up with luck for algorithms
today<00:00:10.750><c> so</c><00:00:11.620><c> I</c><00:00:11.950><c> let</c><00:00:12.879><c> me</c><00:00:12.969><c> present</c><00:00:13.360><c> myself</c><00:00:13.629><c> I</c><00:00:14.049><c> and</c>

00:00:14.940 --> 00:00:14.950 align:start position:0%
today so I let me present myself I and
 

00:00:14.950 --> 00:00:16.650 align:start position:0%
today so I let me present myself I and
therefore<00:00:15.339><c> the</c><00:00:15.460><c> things</c><00:00:15.940><c> interesting</c><00:00:16.240><c> here</c><00:00:16.630><c> I</c>

00:00:16.650 --> 00:00:16.660 align:start position:0%
therefore the things interesting here I
 

00:00:16.660 --> 00:00:18.450 align:start position:0%
therefore the things interesting here I
teach<00:00:17.040><c> concurrent</c><00:00:18.040><c> I</c><00:00:18.100><c> serve</c><00:00:18.250><c> you</c><00:00:18.280><c> as</c><00:00:18.400><c> a</c>

00:00:18.450 --> 00:00:18.460 align:start position:0%
teach concurrent I serve you as a
 

00:00:18.460 --> 00:00:20.640 align:start position:0%
teach concurrent I serve you as a
program<00:00:18.760><c> in</c><00:00:18.850><c> a</c><00:00:18.910><c> st.</c><00:00:19.240><c> Petersburg</c><00:00:19.330><c> IT</c><00:00:19.900><c> mo</c><00:00:20.199><c> but</c>

00:00:20.640 --> 00:00:20.650 align:start position:0%
program in a st. Petersburg IT mo but
 

00:00:20.650 --> 00:00:23.759 align:start position:0%
program in a st. Petersburg IT mo but
we're<00:00:20.890><c> not</c><00:00:21.210><c> going</c><00:00:22.210><c> to</c><00:00:22.510><c> go</c><00:00:22.960><c> into</c><00:00:23.109><c> deep</c><00:00:23.320><c> theory</c>

00:00:23.759 --> 00:00:23.769 align:start position:0%
we're not going to go into deep theory
 

00:00:23.769 --> 00:00:27.210 align:start position:0%
we're not going to go into deep theory
of<00:00:24.070><c> concurrent</c><00:00:24.640><c> computing</c><00:00:25.230><c> today</c><00:00:26.230><c> today</c>

00:00:27.210 --> 00:00:27.220 align:start position:0%
of concurrent computing today today
 

00:00:27.220 --> 00:00:28.589 align:start position:0%
of concurrent computing today today
we're<00:00:27.369><c> going</c><00:00:27.519><c> to</c><00:00:27.760><c> talk</c><00:00:27.939><c> about</c><00:00:27.970><c> scalability</c>

00:00:28.589 --> 00:00:28.599 align:start position:0%
we're going to talk about scalability
 

00:00:28.599 --> 00:00:32.550 align:start position:0%
we're going to talk about scalability
issues<00:00:29.230><c> and</c><00:00:29.470><c> what</c><00:00:30.099><c> we'll</c><00:00:30.250><c> see</c><00:00:30.279><c> some</c><00:00:30.960><c> some</c><00:00:31.960><c> some</c>

00:00:32.550 --> 00:00:32.560 align:start position:0%
issues and what we'll see some some some
 

00:00:32.560 --> 00:00:35.040 align:start position:0%
issues and what we'll see some some some
stuff<00:00:32.830><c> I</c><00:00:33.070><c> also</c><00:00:33.970><c> work</c><00:00:34.210><c> in</c><00:00:34.360><c> Kaplan</c><00:00:34.600><c> for</c>

00:00:35.040 --> 00:00:35.050 align:start position:0%
stuff I also work in Kaplan for
 

00:00:35.050 --> 00:00:37.440 align:start position:0%
stuff I also work in Kaplan for
jetbrains<00:00:35.469><c> so</c><00:00:35.710><c> if</c><00:00:36.430><c> you</c><00:00:36.579><c> excuse</c><00:00:36.790><c> me</c><00:00:36.820><c> my</c><00:00:37.000><c> coding</c>

00:00:37.440 --> 00:00:37.450 align:start position:0%
jetbrains so if you excuse me my coding
 

00:00:37.450 --> 00:00:38.850 align:start position:0%
jetbrains so if you excuse me my coding
examples<00:00:37.809><c> will</c><00:00:37.930><c> be</c><00:00:37.960><c> in</c><00:00:38.260><c> cotton</c><00:00:38.680><c> but</c><00:00:38.770><c> I</c>

00:00:38.850 --> 00:00:38.860 align:start position:0%
examples will be in cotton but I
 

00:00:38.860 --> 00:00:41.340 align:start position:0%
examples will be in cotton but I
hopefully<00:00:39.480><c> they'll</c><00:00:40.480><c> be</c><00:00:40.540><c> easier</c><00:00:40.930><c> to</c><00:00:41.050><c> incent</c>

00:00:41.340 --> 00:00:41.350 align:start position:0%
hopefully they'll be easier to incent
 

00:00:41.350 --> 00:00:45.510 align:start position:0%
hopefully they'll be easier to incent
for<00:00:41.530><c> everybody</c><00:00:42.480><c> and</c><00:00:43.770><c> I'm</c><00:00:44.770><c> really</c><00:00:45.309><c> clueless</c>

00:00:45.510 --> 00:00:45.520 align:start position:0%
for everybody and I'm really clueless
 

00:00:45.520 --> 00:00:48.889 align:start position:0%
for everybody and I'm really clueless
about<00:00:45.640><c> you</c><00:00:45.910><c> guys</c><00:00:46.090><c> so</c><00:00:46.390><c> who</c><00:00:46.780><c> is</c><00:00:47.520><c> first</c><00:00:48.520><c> of</c><00:00:48.699><c> all</c>

00:00:48.889 --> 00:00:48.899 align:start position:0%
about you guys so who is first of all
 

00:00:48.899 --> 00:00:53.040 align:start position:0%
about you guys so who is first of all
who<00:00:50.100><c> has</c><00:00:51.100><c> obviously</c><00:00:52.090><c> if</c><00:00:52.510><c> you</c><00:00:52.600><c> came</c><00:00:52.840><c> here</c>

00:00:53.040 --> 00:00:53.050 align:start position:0%
who has obviously if you came here
 

00:00:53.050 --> 00:00:55.380 align:start position:0%
who has obviously if you came here
probably<00:00:53.430><c> being</c><00:00:54.430><c> writing</c><00:00:54.820><c> some</c><00:00:55.000><c> concurrent</c>

00:00:55.380 --> 00:00:55.390 align:start position:0%
probably being writing some concurrent
 

00:00:55.390 --> 00:00:59.029 align:start position:0%
probably being writing some concurrent
code<00:00:55.510><c> please</c><00:00:55.750><c> raise</c><00:00:56.469><c> your</c><00:00:56.500><c> hands</c><00:00:56.829><c> if</c><00:00:57.010><c> you</c><00:00:57.129><c> did</c>

00:00:59.029 --> 00:00:59.039 align:start position:0%
code please raise your hands if you did
 

00:00:59.039 --> 00:01:02.430 align:start position:0%
code please raise your hands if you did
okay<00:01:00.039><c> okay</c><00:01:00.640><c> so</c><00:01:00.699><c> I</c><00:01:00.940><c> see</c><00:01:01.180><c> so</c><00:01:01.420><c> so</c><00:01:01.809><c> the</c><00:01:02.050><c> most</c><00:01:02.230><c> of</c><00:01:02.379><c> you</c>

00:01:02.430 --> 00:01:02.440 align:start position:0%
okay okay so I see so so the most of you
 

00:01:02.440 --> 00:01:05.820 align:start position:0%
okay okay so I see so so the most of you
didn't<00:01:02.739><c> so</c><00:01:02.980><c> in</c><00:01:03.190><c> a</c><00:01:03.219><c> year</c><00:01:03.309><c> you</c><00:01:04.150><c> come</c><00:01:04.560><c> to</c><00:01:05.560><c> see</c>

00:01:05.820 --> 00:01:05.830 align:start position:0%
didn't so in a year you come to see
 

00:01:05.830 --> 00:01:08.400 align:start position:0%
didn't so in a year you come to see
what's<00:01:06.550><c> going</c><00:01:06.730><c> on</c><00:01:06.880><c> so</c><00:01:07.090><c> I'll</c><00:01:07.780><c> help</c><00:01:08.110><c> you</c><00:01:08.260><c> today</c>

00:01:08.400 --> 00:01:08.410 align:start position:0%
what's going on so I'll help you today
 

00:01:08.410 --> 00:01:10.950 align:start position:0%
what's going on so I'll help you today
so<00:01:09.100><c> today</c><00:01:09.400><c> we're</c><00:01:09.640><c> going</c><00:01:09.820><c> to</c><00:01:10.180><c> talk</c><00:01:10.390><c> about</c><00:01:10.420><c> share</c>

00:01:10.950 --> 00:01:10.960 align:start position:0%
so today we're going to talk about share
 

00:01:10.960 --> 00:01:14.220 align:start position:0%
so today we're going to talk about share
it<00:01:11.140><c> mutable</c><00:01:11.890><c> state</c><00:01:12.370><c> and</c><00:01:12.940><c> that's</c><00:01:13.630><c> kind</c><00:01:14.170><c> of</c>

00:01:14.220 --> 00:01:14.230 align:start position:0%
it mutable state and that's kind of
 

00:01:14.230 --> 00:01:18.090 align:start position:0%
it mutable state and that's kind of
three<00:01:14.470><c> words</c><00:01:14.710><c> that</c><00:01:15.420><c> really</c><00:01:16.420><c> dread</c><00:01:17.100><c> people</c>

00:01:18.090 --> 00:01:18.100 align:start position:0%
three words that really dread people
 

00:01:18.100 --> 00:01:21.750 align:start position:0%
three words that really dread people
really<00:01:18.670><c> know</c><00:01:18.850><c> what</c><00:01:19.120><c> it's</c><00:01:19.390><c> about</c><00:01:19.770><c> because</c><00:01:20.770><c> when</c>

00:01:21.750 --> 00:01:21.760 align:start position:0%
really know what it's about because when
 

00:01:21.760 --> 00:01:25.650 align:start position:0%
really know what it's about because when
people<00:01:22.210><c> who</c><00:01:22.480><c> programmed</c><00:01:23.350><c> for</c><00:01:24.150><c> for</c><00:01:25.150><c> for</c><00:01:25.450><c> many</c>

00:01:25.650 --> 00:01:25.660 align:start position:0%
people who programmed for for for many
 

00:01:25.660 --> 00:01:27.990 align:start position:0%
people who programmed for for for many
years<00:01:26.020><c> when</c><00:01:26.500><c> they</c><00:01:26.770><c> hear</c><00:01:27.220><c> the</c><00:01:27.400><c> word</c><00:01:27.550><c> share</c><00:01:27.730><c> it</c>

00:01:27.990 --> 00:01:28.000 align:start position:0%
years when they hear the word share it
 

00:01:28.000 --> 00:01:30.720 align:start position:0%
years when they hear the word share it
will<00:01:28.150><c> stay</c><00:01:28.450><c> they</c><00:01:29.370><c> they</c><00:01:30.370><c> get</c><00:01:30.520><c> different</c>

00:01:30.720 --> 00:01:30.730 align:start position:0%
will stay they they get different
 

00:01:30.730 --> 00:01:32.700 align:start position:0%
will stay they they get different
associations<00:01:31.180><c> maybe</c><00:01:31.930><c> something</c><00:01:32.380><c> like</c><00:01:32.470><c> this</c>

00:01:32.700 --> 00:01:32.710 align:start position:0%
associations maybe something like this
 

00:01:32.710 --> 00:01:34.920 align:start position:0%
associations maybe something like this
you<00:01:33.400><c> know</c><00:01:33.550><c> when</c><00:01:33.700><c> it</c><00:01:33.790><c> all</c><00:01:33.910><c> crashes</c><00:01:34.660><c> and</c><00:01:34.810><c> blue</c>

00:01:34.920 --> 00:01:34.930 align:start position:0%
you know when it all crashes and blue
 

00:01:34.930 --> 00:01:38.250 align:start position:0%
you know when it all crashes and blue
screens<00:01:35.380><c> or</c><00:01:36.090><c> maybe</c><00:01:37.090><c> it</c><00:01:37.210><c> sounds</c><00:01:37.420><c> like</c><00:01:37.570><c> this</c><00:01:37.780><c> you</c>

00:01:38.250 --> 00:01:38.260 align:start position:0%
screens or maybe it sounds like this you
 

00:01:38.260 --> 00:01:40.890 align:start position:0%
screens or maybe it sounds like this you
know<00:01:38.410><c> that's</c><00:01:38.680><c> kind</c><00:01:39.190><c> of</c><00:01:39.280><c> you</c><00:01:39.400><c> know</c><00:01:39.900><c> association</c>

00:01:40.890 --> 00:01:40.900 align:start position:0%
know that's kind of you know association
 

00:01:40.900 --> 00:01:42.210 align:start position:0%
know that's kind of you know association
with<00:01:41.050><c> people</c><00:01:41.290><c> here</c><00:01:41.440><c> because</c><00:01:41.680><c> share</c><00:01:41.890><c> instead</c>

00:01:42.210 --> 00:01:42.220 align:start position:0%
with people here because share instead
 

00:01:42.220 --> 00:01:43.950 align:start position:0%
with people here because share instead
was<00:01:42.400><c> three</c><00:01:42.550><c> things</c><00:01:42.700><c> you</c><00:01:42.910><c> you</c><00:01:43.180><c> should</c><00:01:43.720><c> never</c>

00:01:43.950 --> 00:01:43.960 align:start position:0%
was three things you you should never
 

00:01:43.960 --> 00:01:47.160 align:start position:0%
was three things you you should never
ever<00:01:44.820><c> put</c><00:01:45.820><c> together</c><00:01:46.030><c> you</c><00:01:46.540><c> know</c><00:01:46.630><c> you</c><00:01:46.660><c> can</c><00:01:46.990><c> have</c>

00:01:47.160 --> 00:01:47.170 align:start position:0%
ever put together you know you can have
 

00:01:47.170 --> 00:01:50.550 align:start position:0%
ever put together you know you can have
mutability<00:01:47.800><c> you</c><00:01:48.070><c> but</c><00:01:48.870><c> separately</c><00:01:49.870><c> you</c><00:01:50.530><c> know</c>

00:01:50.550 --> 00:01:50.560 align:start position:0%
mutability you but separately you know
 

00:01:50.560 --> 00:01:52.260 align:start position:0%
mutability you but separately you know
sharing<00:01:51.130><c> separately</c><00:01:51.580><c> but</c><00:01:51.670><c> when</c><00:01:51.880><c> you</c><00:01:52.000><c> do</c><00:01:52.120><c> it</c>

00:01:52.260 --> 00:01:52.270 align:start position:0%
sharing separately but when you do it
 

00:01:52.270 --> 00:01:52.860 align:start position:0%
sharing separately but when you do it
all<00:01:52.390><c> together</c>

00:01:52.860 --> 00:01:52.870 align:start position:0%
all together
 

00:01:52.870 --> 00:01:55.760 align:start position:0%
all together
it's<00:01:53.530><c> it's</c><00:01:54.100><c> it's</c><00:01:54.370><c> it's</c><00:01:54.640><c> become</c><00:01:54.820><c> a</c><00:01:55.000><c> really</c><00:01:55.270><c> hard</c>

00:01:55.760 --> 00:01:55.770 align:start position:0%
it's it's it's it's become a really hard
 

00:01:55.770 --> 00:01:59.430 align:start position:0%
it's it's it's it's become a really hard
so<00:01:56.770><c> if</c><00:01:57.130><c> it's</c><00:01:57.370><c> that</c><00:01:57.730><c> bad</c><00:01:57.970><c> then</c><00:01:58.390><c> why</c><00:01:59.020><c> people</c><00:01:59.380><c> is</c>

00:01:59.430 --> 00:01:59.440 align:start position:0%
so if it's that bad then why people is
 

00:01:59.440 --> 00:02:01.350 align:start position:0%
so if it's that bad then why people is
doing<00:01:59.650><c> this</c><00:01:59.770><c> so</c><00:02:00.040><c> why</c><00:02:00.220><c> we</c><00:02:00.400><c> have</c><00:02:00.610><c> this</c><00:02:00.820><c> shared</c>

00:02:01.350 --> 00:02:01.360 align:start position:0%
doing this so why we have this shared
 

00:02:01.360 --> 00:02:04.680 align:start position:0%
doing this so why we have this shared
middle<00:02:01.690><c> state</c><00:02:01.960><c> and</c><00:02:02.320><c> why</c><00:02:03.250><c> Java</c><00:02:04.030><c> supports</c><00:02:04.570><c> it</c>

00:02:04.680 --> 00:02:04.690 align:start position:0%
middle state and why Java supports it
 

00:02:04.690 --> 00:02:06.390 align:start position:0%
middle state and why Java supports it
when<00:02:04.870><c> many</c><00:02:05.050><c> other</c><00:02:05.140><c> modern</c><00:02:05.650><c> languages</c><00:02:06.130><c> do</c>

00:02:06.390 --> 00:02:06.400 align:start position:0%
when many other modern languages do
 

00:02:06.400 --> 00:02:09.869 align:start position:0%
when many other modern languages do
support<00:02:06.790><c> it</c><00:02:07.259><c> why</c><00:02:08.259><c> not</c><00:02:08.289><c> why</c><00:02:08.649><c> don't</c><00:02:09.160><c> we</c><00:02:09.310><c> go</c><00:02:09.610><c> like</c>

00:02:09.869 --> 00:02:09.879 align:start position:0%
support it why not why don't we go like
 

00:02:09.879 --> 00:02:12.000 align:start position:0%
support it why not why don't we go like
and<00:02:10.209><c> forbid</c><00:02:10.660><c> it</c><00:02:10.780><c> like</c><00:02:10.989><c> there</c><00:02:11.770><c> are</c><00:02:11.830><c> some</c>

00:02:12.000 --> 00:02:12.010 align:start position:0%
and forbid it like there are some
 

00:02:12.010 --> 00:02:14.550 align:start position:0%
and forbid it like there are some
languages<00:02:12.760><c> that</c><00:02:12.940><c> do</c><00:02:13.420><c> completely</c><00:02:13.810><c> forbid</c>

00:02:14.550 --> 00:02:14.560 align:start position:0%
languages that do completely forbid
 

00:02:14.560 --> 00:02:15.790 align:start position:0%
languages that do completely forbid
you're<00:02:15.100><c> from</c><00:02:15.250><c> Harry</c>

00:02:15.790 --> 00:02:15.800 align:start position:0%
you're from Harry
 

00:02:15.800 --> 00:02:18.010 align:start position:0%
you're from Harry
Oh<00:02:15.830><c> state</c><00:02:16.250><c> and</c><00:02:16.670><c> there</c><00:02:17.060><c> was</c><00:02:17.150><c> this</c><00:02:17.270><c> actually</c>

00:02:18.010 --> 00:02:18.020 align:start position:0%
Oh state and there was this actually
 

00:02:18.020 --> 00:02:20.110 align:start position:0%
Oh state and there was this actually
really<00:02:18.380><c> simple</c><00:02:18.710><c> like</c><00:02:19.010><c> if</c><00:02:19.460><c> you</c><00:02:19.610><c> look</c><00:02:19.790><c> at</c><00:02:19.910><c> the</c>

00:02:20.110 --> 00:02:20.120 align:start position:0%
really simple like if you look at the
 

00:02:20.120 --> 00:02:22.900 align:start position:0%
really simple like if you look at the
morning<00:02:20.360><c> world</c><00:02:20.570><c> and</c><00:02:20.900><c> you</c><00:02:20.990><c> have</c><00:02:21.050><c> this</c><00:02:21.880><c> you</c><00:02:22.880><c> know</c>

00:02:22.900 --> 00:02:22.910 align:start position:0%
morning world and you have this you know
 

00:02:22.910 --> 00:02:25.660 align:start position:0%
morning world and you have this you know
 word<00:02:24.110><c> week</c><00:02:24.470><c> data</c><00:02:24.980><c> so</c><00:02:25.220><c> I</c><00:02:25.250><c> put</c><00:02:25.400><c> a</c><00:02:25.430><c> big</c>

00:02:25.660 --> 00:02:25.670 align:start position:0%
 word week data so I put a big
 

00:02:25.670 --> 00:02:27.580 align:start position:0%
 word week data so I put a big
big<00:02:25.910><c> data</c><00:02:26.150><c> and</c><00:02:26.780><c> you</c><00:02:26.930><c> have</c><00:02:26.990><c> to</c><00:02:27.170><c> do</c><00:02:27.230><c> something</c>

00:02:27.580 --> 00:02:27.590 align:start position:0%
big data and you have to do something
 

00:02:27.590 --> 00:02:31.690 align:start position:0%
big data and you have to do something
with<00:02:27.740><c> it</c><00:02:27.770><c> you</c><00:02:28.310><c> know</c><00:02:28.430><c> many</c><00:02:29.420><c> times</c><00:02:29.660><c> the</c><00:02:30.700><c> your</c>

00:02:31.690 --> 00:02:31.700 align:start position:0%
with it you know many times the your
 

00:02:31.700 --> 00:02:34.380 align:start position:0%
with it you know many times the your
problem<00:02:32.150><c> that</c><00:02:32.330><c> you're</c><00:02:32.450><c> trying</c><00:02:32.480><c> to</c><00:02:32.750><c> solve</c><00:02:33.110><c> is</c>

00:02:34.380 --> 00:02:34.390 align:start position:0%
problem that you're trying to solve is
 

00:02:34.390 --> 00:02:37.090 align:start position:0%
problem that you're trying to solve is
you<00:02:35.390><c> can't</c><00:02:35.690><c> represent</c><00:02:35.930><c> it</c><00:02:36.230><c> with</c><00:02:36.500><c> this</c><00:02:36.830><c> pattern</c>

00:02:37.090 --> 00:02:37.100 align:start position:0%
you can't represent it with this pattern
 

00:02:37.100 --> 00:02:38.920 align:start position:0%
you can't represent it with this pattern
you<00:02:37.310><c> have</c><00:02:37.520><c> this</c><00:02:37.670><c> big</c><00:02:37.880><c> data</c><00:02:38.060><c> you</c><00:02:38.390><c> split</c><00:02:38.720><c> it</c><00:02:38.810><c> in</c>

00:02:38.920 --> 00:02:38.930 align:start position:0%
you have this big data you split it in
 

00:02:38.930 --> 00:02:42.220 align:start position:0%
you have this big data you split it in
two<00:02:39.080><c> batches</c><00:02:39.590><c> then</c><00:02:40.130><c> you</c><00:02:40.340><c> do</c><00:02:41.180><c> some</c><00:02:41.630><c> processing</c>

00:02:42.220 --> 00:02:42.230 align:start position:0%
two batches then you do some processing
 

00:02:42.230 --> 00:02:44.890 align:start position:0%
two batches then you do some processing
with<00:02:42.350><c> camapign</c><00:02:42.770><c> the</c><00:02:43.100><c> data</c><00:02:43.280><c> then</c><00:02:44.000><c> you</c><00:02:44.180><c> collect</c>

00:02:44.890 --> 00:02:44.900 align:start position:0%
with camapign the data then you collect
 

00:02:44.900 --> 00:02:47.590 align:start position:0%
with camapign the data then you collect
the<00:02:45.290><c> results</c><00:02:45.470><c> in</c><00:02:46.010><c> getting</c><00:02:46.310><c> answer</c><00:02:46.760><c> that's</c>

00:02:47.590 --> 00:02:47.600 align:start position:0%
the results in getting answer that's
 

00:02:47.600 --> 00:02:50.140 align:start position:0%
the results in getting answer that's
most<00:02:48.260><c> of</c><00:02:48.440><c> the</c><00:02:48.470><c> problems</c><00:02:48.920><c> I</c><00:02:49.040><c> like</c><00:02:49.070><c> that</c><00:02:49.370><c> and</c><00:02:49.640><c> the</c>

00:02:50.140 --> 00:02:50.150 align:start position:0%
most of the problems I like that and the
 

00:02:50.150 --> 00:02:51.340 align:start position:0%
most of the problems I like that and the
problems<00:02:50.510><c> I</c><00:02:50.630><c> like</c><00:02:50.660><c> that</c><00:02:50.930><c> are</c><00:02:51.110><c> called</c>

00:02:51.340 --> 00:02:51.350 align:start position:0%
problems I like that are called
 

00:02:51.350 --> 00:02:53.050 align:start position:0%
problems I like that are called
embarrassingly<00:02:52.040><c> parallel</c><00:02:52.130><c> that's</c><00:02:52.730><c> actually</c>

00:02:53.050 --> 00:02:53.060 align:start position:0%
embarrassingly parallel that's actually
 

00:02:53.060 --> 00:02:54.970 align:start position:0%
embarrassingly parallel that's actually
the<00:02:53.210><c> actual</c><00:02:53.510><c> technical</c><00:02:53.780><c> term</c><00:02:54.140><c> the</c><00:02:54.650><c> problems</c>

00:02:54.970 --> 00:02:54.980 align:start position:0%
the actual technical term the problems
 

00:02:54.980 --> 00:02:57.040 align:start position:0%
the actual technical term the problems
in<00:02:55.070><c> calling</c><00:02:55.640><c> embarrass</c><00:02:56.000><c> in</c><00:02:56.150><c> parallel</c><00:02:56.510><c> and</c>

00:02:57.040 --> 00:02:57.050 align:start position:0%
in calling embarrass in parallel and
 

00:02:57.050 --> 00:02:59.830 align:start position:0%
in calling embarrass in parallel and
because<00:02:57.770><c> to</c><00:02:57.890><c> solve</c><00:02:58.160><c> them</c><00:02:58.400><c> I</c><00:02:58.610><c> mean</c><00:02:59.240><c> the</c><00:02:59.390><c> easy</c><00:02:59.600><c> to</c>

00:02:59.830 --> 00:02:59.840 align:start position:0%
because to solve them I mean the easy to
 

00:02:59.840 --> 00:03:04.390 align:start position:0%
because to solve them I mean the easy to
realize<00:03:00.260><c> and</c><00:03:00.770><c> you</c><00:03:01.490><c> don't</c><00:03:01.820><c> have</c><00:03:02.030><c> to</c><00:03:02.950><c> to</c><00:03:03.950><c> go</c><00:03:04.160><c> in</c>

00:03:04.390 --> 00:03:04.400 align:start position:0%
realize and you don't have to to go in
 

00:03:04.400 --> 00:03:07.000 align:start position:0%
realize and you don't have to to go in
this<00:03:04.580><c> scary</c><00:03:04.940><c> world</c><00:03:05.270><c> of</c><00:03:05.660><c> shared</c><00:03:06.530><c> mutable</c><00:03:06.680><c> state</c>

00:03:07.000 --> 00:03:07.010 align:start position:0%
this scary world of shared mutable state
 

00:03:07.010 --> 00:03:09.400 align:start position:0%
this scary world of shared mutable state
because<00:03:07.370><c> you</c><00:03:07.850><c> know</c><00:03:07.970><c> there's</c><00:03:08.750><c> nothing</c><00:03:08.990><c> shared</c>

00:03:09.400 --> 00:03:09.410 align:start position:0%
because you know there's nothing shared
 

00:03:09.410 --> 00:03:12.430 align:start position:0%
because you know there's nothing shared
here<00:03:09.650><c> you</c><00:03:09.920><c> can</c><00:03:10.160><c> scale</c><00:03:11.000><c> it</c><00:03:11.030><c> upskill</c><00:03:11.570><c> diode</c><00:03:11.870><c> into</c>

00:03:12.430 --> 00:03:12.440 align:start position:0%
here you can scale it upskill diode into
 

00:03:12.440 --> 00:03:14.710 align:start position:0%
here you can scale it upskill diode into
cluster<00:03:12.920><c> you</c><00:03:13.340><c> can</c><00:03:13.520><c> write</c><00:03:13.730><c> your</c><00:03:13.910><c> regular</c><00:03:14.360><c> DNA</c>

00:03:14.710 --> 00:03:14.720 align:start position:0%
cluster you can write your regular DNA
 

00:03:14.720 --> 00:03:17.590 align:start position:0%
cluster you can write your regular DNA
processing<00:03:15.140><c> code</c><00:03:15.410><c> let's</c><00:03:16.010><c> framework</c><00:03:16.610><c> that's</c>

00:03:17.590 --> 00:03:17.600 align:start position:0%
processing code let's framework that's
 

00:03:17.600 --> 00:03:19.710 align:start position:0%
processing code let's framework that's
it's<00:03:17.870><c> the</c><00:03:17.930><c> bottom</c><00:03:18.260><c> take</c><00:03:18.680><c> care</c><00:03:18.980><c> about</c>

00:03:19.710 --> 00:03:19.720 align:start position:0%
it's the bottom take care about
 

00:03:19.720 --> 00:03:22.240 align:start position:0%
it's the bottom take care about
arranging<00:03:20.720><c> only</c><00:03:20.930><c> operation</c><00:03:21.350><c> that's</c><00:03:21.530><c> it</c><00:03:21.650><c> if</c>

00:03:22.240 --> 00:03:22.250 align:start position:0%
arranging only operation that's it if
 

00:03:22.250 --> 00:03:24.520 align:start position:0%
arranging only operation that's it if
the<00:03:22.489><c> if</c><00:03:22.910><c> your</c><00:03:23.270><c> problem</c><00:03:23.600><c> is</c><00:03:23.660><c> like</c><00:03:23.840><c> that</c><00:03:24.080><c> you're</c>

00:03:24.520 --> 00:03:24.530 align:start position:0%
the if your problem is like that you're
 

00:03:24.530 --> 00:03:27.160 align:start position:0%
the if your problem is like that you're
a<00:03:24.560><c> happy</c><00:03:24.800><c> guy</c><00:03:25.040><c> you</c><00:03:25.910><c> you</c><00:03:26.390><c> don't</c><00:03:26.780><c> have</c><00:03:26.959><c> to</c><00:03:27.050><c> be</c>

00:03:27.160 --> 00:03:27.170 align:start position:0%
a happy guy you you don't have to be
 

00:03:27.170 --> 00:03:31.750 align:start position:0%
a happy guy you you don't have to be
here<00:03:27.489><c> however</c><00:03:29.050><c> sometimes</c><00:03:30.130><c> you</c><00:03:31.130><c> have</c><00:03:31.340><c> this</c><00:03:31.489><c> big</c>

00:03:31.750 --> 00:03:31.760 align:start position:0%
here however sometimes you have this big
 

00:03:31.760 --> 00:03:34.630 align:start position:0%
here however sometimes you have this big
big<00:03:31.970><c> data</c><00:03:32.239><c> but</c><00:03:33.110><c> it</c><00:03:33.260><c> is</c><00:03:33.380><c> also</c><00:03:33.620><c> like</c><00:03:34.070><c> real-time</c>

00:03:34.630 --> 00:03:34.640 align:start position:0%
big data but it is also like real-time
 

00:03:34.640 --> 00:03:36.820 align:start position:0%
big data but it is also like real-time
or<00:03:35.090><c> semi</c><00:03:35.510><c> real-time</c><00:03:35.959><c> oh</c><00:03:36.170><c> it</c><00:03:36.350><c> changes</c><00:03:36.620><c> all</c><00:03:36.800><c> the</c>

00:03:36.820 --> 00:03:36.830 align:start position:0%
or semi real-time oh it changes all the
 

00:03:36.830 --> 00:03:39.220 align:start position:0%
or semi real-time oh it changes all the
time<00:03:37.040><c> like</c><00:03:37.190><c> for</c><00:03:37.610><c> example</c><00:03:37.730><c> stock</c><00:03:38.690><c> quotations</c>

00:03:39.220 --> 00:03:39.230 align:start position:0%
time like for example stock quotations
 

00:03:39.230 --> 00:03:41.550 align:start position:0%
time like for example stock quotations
change<00:03:39.590><c> all</c><00:03:39.739><c> the</c><00:03:39.860><c> time</c><00:03:39.890><c> you</c><00:03:40.730><c> know</c><00:03:40.850><c> your</c>

00:03:41.550 --> 00:03:41.560 align:start position:0%
change all the time you know your
 

00:03:41.560 --> 00:03:44.410 align:start position:0%
change all the time you know your
inventory<00:03:42.560><c> in</c><00:03:42.800><c> a</c><00:03:42.920><c> big</c><00:03:43.070><c> company</c><00:03:43.459><c> something</c>

00:03:44.410 --> 00:03:44.420 align:start position:0%
inventory in a big company something
 

00:03:44.420 --> 00:03:49.210 align:start position:0%
inventory in a big company something
that<00:03:45.430><c> you</c><00:03:46.430><c> know</c><00:03:46.610><c> status</c><00:03:47.420><c> of</c><00:03:47.709><c> users</c><00:03:48.709><c> in</c><00:03:48.890><c> social</c>

00:03:49.210 --> 00:03:49.220 align:start position:0%
that you know status of users in social
 

00:03:49.220 --> 00:03:51.210 align:start position:0%
that you know status of users in social
network<00:03:49.550><c> like</c><00:03:50.120><c> there's</c><00:03:50.360><c> a</c><00:03:50.420><c> lots</c><00:03:50.660><c> of</c><00:03:50.720><c> data</c><00:03:50.959><c> it's</c>

00:03:51.210 --> 00:03:51.220 align:start position:0%
network like there's a lots of data it's
 

00:03:51.220 --> 00:03:54.240 align:start position:0%
network like there's a lots of data it's
constantly<00:03:52.220><c> changes</c><00:03:52.640><c> and</c><00:03:53.270><c> you</c><00:03:53.360><c> have</c><00:03:53.540><c> lots</c><00:03:53.780><c> of</c>

00:03:54.240 --> 00:03:54.250 align:start position:0%
constantly changes and you have lots of
 

00:03:54.250 --> 00:03:57.190 align:start position:0%
constantly changes and you have lots of
simultaneous<00:03:55.250><c> requests</c><00:03:55.880><c> coming</c><00:03:56.239><c> to</c><00:03:57.110><c> do</c>

00:03:57.190 --> 00:03:57.200 align:start position:0%
simultaneous requests coming to do
 

00:03:57.200 --> 00:03:58.330 align:start position:0%
simultaneous requests coming to do
something<00:03:57.590><c> with</c><00:03:57.770><c> this</c><00:03:57.920><c> data</c>

00:03:58.330 --> 00:03:58.340 align:start position:0%
something with this data
 

00:03:58.340 --> 00:04:02.050 align:start position:0%
something with this data
you<00:03:58.700><c> know</c><00:03:58.880><c> compute</c><00:03:59.600><c> it</c><00:03:59.770><c> your</c><00:04:00.770><c> portfolio</c><00:04:01.370><c> you</c>

00:04:02.050 --> 00:04:02.060 align:start position:0%
you know compute it your portfolio you
 

00:04:02.060 --> 00:04:03.160 align:start position:0%
you know compute it your portfolio you
know<00:04:02.209><c> yet</c>

00:04:03.160 --> 00:04:03.170 align:start position:0%
know yet
 

00:04:03.170 --> 00:04:05.170 align:start position:0%
know yet
real-time<00:04:03.680><c> statuses</c><00:04:04.280><c> for</c><00:04:04.489><c> users</c><00:04:04.880><c> in</c><00:04:05.030><c> your</c>

00:04:05.170 --> 00:04:05.180 align:start position:0%
real-time statuses for users in your
 

00:04:05.180 --> 00:04:07.030 align:start position:0%
real-time statuses for users in your
social<00:04:05.390><c> network</c><00:04:05.930><c> do</c><00:04:06.470><c> something</c><00:04:06.890><c> like</c><00:04:06.980><c> that</c>

00:04:07.030 --> 00:04:07.040 align:start position:0%
social network do something like that
 

00:04:07.040 --> 00:04:10.600 align:start position:0%
social network do something like that
and<00:04:08.200><c> when</c><00:04:09.200><c> you</c><00:04:09.320><c> start</c><00:04:09.860><c> trying</c><00:04:10.010><c> to</c><00:04:10.250><c> solve</c><00:04:10.459><c> this</c>

00:04:10.600 --> 00:04:10.610 align:start position:0%
and when you start trying to solve this
 

00:04:10.610 --> 00:04:13.570 align:start position:0%
and when you start trying to solve this
problem<00:04:10.750><c> in</c><00:04:11.750><c> a</c><00:04:11.930><c> both</c><00:04:12.170><c> scalable</c><00:04:13.010><c> and</c>

00:04:13.570 --> 00:04:13.580 align:start position:0%
problem in a both scalable and
 

00:04:13.580 --> 00:04:16.539 align:start position:0%
problem in a both scalable and
performant<00:04:14.209><c> way</c><00:04:14.739><c> there's</c><00:04:15.739><c> simply</c><00:04:15.980><c> no</c><00:04:16.220><c> way</c><00:04:16.250><c> to</c>

00:04:16.539 --> 00:04:16.549 align:start position:0%
performant way there's simply no way to
 

00:04:16.549 --> 00:04:19.840 align:start position:0%
performant way there's simply no way to
to<00:04:17.299><c> solve</c><00:04:17.570><c> it</c><00:04:17.720><c> which</c><00:04:17.989><c> is</c><00:04:18.169><c> in</c><00:04:18.680><c> most</c><00:04:18.859><c> performant</c>

00:04:19.840 --> 00:04:19.850 align:start position:0%
to solve it which is in most performant
 

00:04:19.850 --> 00:04:21.880 align:start position:0%
to solve it which is in most performant
and<00:04:19.940><c> scalable</c><00:04:20.419><c> without</c><00:04:20.930><c> actually</c><00:04:21.410><c> sharing</c>

00:04:21.880 --> 00:04:21.890 align:start position:0%
and scalable without actually sharing
 

00:04:21.890 --> 00:04:24.430 align:start position:0%
and scalable without actually sharing
this<00:04:22.010><c> big</c><00:04:22.580><c> data</c><00:04:22.760><c> which</c><00:04:23.600><c> changes</c><00:04:24.080><c> which</c><00:04:24.289><c> is</c>

00:04:24.430 --> 00:04:24.440 align:start position:0%
this big data which changes which is
 

00:04:24.440 --> 00:04:26.380 align:start position:0%
this big data which changes which is
minimal<00:04:24.860><c> between</c><00:04:25.550><c> all</c><00:04:25.789><c> the</c><00:04:26.000><c> current</c>

00:04:26.380 --> 00:04:26.390 align:start position:0%
minimal between all the current
 

00:04:26.390 --> 00:04:28.720 align:start position:0%
minimal between all the current
concurrent<00:04:26.870><c> processes</c><00:04:27.380><c> then</c><00:04:27.530><c> you</c><00:04:27.620><c> have</c>

00:04:28.720 --> 00:04:28.730 align:start position:0%
concurrent processes then you have
 

00:04:28.730 --> 00:04:32.080 align:start position:0%
concurrent processes then you have
I<00:04:28.760><c> mean</c><00:04:29.390><c> if</c><00:04:29.510><c> you</c><00:04:29.980><c> take</c><00:04:30.980><c> the</c><00:04:31.190><c> other</c><00:04:31.400><c> approach</c>

00:04:32.080 --> 00:04:32.090 align:start position:0%
I mean if you take the other approach
 

00:04:32.090 --> 00:04:34.390 align:start position:0%
I mean if you take the other approach
you<00:04:32.750><c> just</c><00:04:32.780><c> okay</c><00:04:33.260><c> let's</c><00:04:33.470><c> not</c><00:04:33.680><c> share</c><00:04:34.010><c> anything</c>

00:04:34.390 --> 00:04:34.400 align:start position:0%
you just okay let's not share anything
 

00:04:34.400 --> 00:04:37.060 align:start position:0%
you just okay let's not share anything
you<00:04:35.090><c> know</c><00:04:35.240><c> then</c><00:04:35.480><c> it</c><00:04:36.380><c> gets</c><00:04:36.650><c> a</c><00:04:36.770><c> massive</c>

00:04:37.060 --> 00:04:37.070 align:start position:0%
you know then it gets a massive
 

00:04:37.070 --> 00:04:38.290 align:start position:0%
you know then it gets a massive
duplication<00:04:37.400><c> later</c>

00:04:38.290 --> 00:04:38.300 align:start position:0%
duplication later
 

00:04:38.300 --> 00:04:40.840 align:start position:0%
duplication later
I<00:04:38.330><c> mean</c><00:04:38.750><c> SEO</c><00:04:39.170><c> and</c><00:04:39.590><c> if</c><00:04:39.980><c> data</c><00:04:40.190><c> changes</c><00:04:40.610><c> in</c><00:04:40.730><c> real</c>

00:04:40.840 --> 00:04:40.850 align:start position:0%
I mean SEO and if data changes in real
 

00:04:40.850 --> 00:04:42.700 align:start position:0%
I mean SEO and if data changes in real
time<00:04:41.000><c> you</c><00:04:41.090><c> have</c><00:04:41.240><c> to</c><00:04:41.330><c> deliver</c><00:04:41.630><c> it</c><00:04:41.870><c> in</c><00:04:42.020><c> all</c><00:04:42.530><c> the</c>

00:04:42.700 --> 00:04:42.710 align:start position:0%
time you have to deliver it in all the
 

00:04:42.710 --> 00:04:44.950 align:start position:0%
time you have to deliver it in all the
copies<00:04:42.950><c> etc</c><00:04:43.610><c> a</c><00:04:43.760><c> huge</c><00:04:44.030><c> waste</c><00:04:44.240><c> of</c><00:04:44.330><c> resources</c><00:04:44.480><c> so</c>

00:04:44.950 --> 00:04:44.960 align:start position:0%
copies etc a huge waste of resources so
 

00:04:44.960 --> 00:04:47.380 align:start position:0%
copies etc a huge waste of resources so
many<00:04:45.200><c> problems</c><00:04:45.620><c> of</c><00:04:45.710><c> this</c><00:04:45.890><c> kind</c><00:04:46.130><c> can</c><00:04:47.090><c> be</c><00:04:47.240><c> only</c>

00:04:47.380 --> 00:04:47.390 align:start position:0%
many problems of this kind can be only
 

00:04:47.390 --> 00:04:50.550 align:start position:0%
many problems of this kind can be only
salt<00:04:47.840><c> if</c><00:04:48.110><c> you</c><00:04:48.140><c> actually</c><00:04:48.440><c> take</c><00:04:49.280><c> this</c><00:04:49.490><c> beta</c><00:04:49.730><c> data</c>

00:04:50.550 --> 00:04:50.560 align:start position:0%
salt if you actually take this beta data
 

00:04:50.560 --> 00:04:54.520 align:start position:0%
salt if you actually take this beta data
put<00:04:51.560><c> it</c><00:04:51.590><c> in</c><00:04:51.800><c> some</c><00:04:52.180><c> memory</c><00:04:53.180><c> and</c><00:04:53.450><c> access</c><00:04:54.380><c> it</c>

00:04:54.520 --> 00:04:54.530 align:start position:0%
put it in some memory and access it
 

00:04:54.530 --> 00:04:57.310 align:start position:0%
put it in some memory and access it
concurrently<00:04:55.100><c> for</c><00:04:55.910><c> all</c><00:04:56.150><c> the</c><00:04:56.420><c> requests</c><00:04:57.080><c> that</c>

00:04:57.310 --> 00:04:57.320 align:start position:0%
concurrently for all the requests that
 

00:04:57.320 --> 00:05:00.580 align:start position:0%
concurrently for all the requests that
you<00:04:57.380><c> have</c><00:04:58.270><c> and</c><00:04:59.270><c> this</c><00:04:59.510><c> is</c><00:04:59.690><c> of</c><00:04:59.780><c> course</c><00:04:59.810><c> duties</c>

00:05:00.580 --> 00:05:00.590 align:start position:0%
you have and this is of course duties
 

00:05:00.590 --> 00:05:02.920 align:start position:0%
you have and this is of course duties
stuff<00:05:00.950><c> like</c><00:05:01.100><c> this</c><00:05:01.220><c> is</c><00:05:01.400><c> a</c><00:05:01.430><c> really</c><00:05:01.790><c> dark</c><00:05:02.570><c> side</c>

00:05:02.920 --> 00:05:02.930 align:start position:0%
stuff like this is a really dark side
 

00:05:02.930 --> 00:05:04.750 align:start position:0%
stuff like this is a really dark side
but<00:05:03.290><c> I</c><00:05:03.530><c> mean</c><00:05:03.740><c> we</c><00:05:03.860><c> have</c><00:05:04.010><c> to</c><00:05:04.070><c> embrace</c><00:05:04.280><c> this</c><00:05:04.550><c> dark</c>

00:05:04.750 --> 00:05:04.760 align:start position:0%
but I mean we have to embrace this dark
 

00:05:04.760 --> 00:05:07.360 align:start position:0%
but I mean we have to embrace this dark
side<00:05:04.970><c> when</c><00:05:05.210><c> we</c><00:05:05.590><c> when</c><00:05:06.590><c> we</c><00:05:06.620><c> work</c><00:05:06.890><c> with</c><00:05:07.070><c> it</c><00:05:07.250><c> I</c><00:05:07.280><c> mean</c>

00:05:07.360 --> 00:05:07.370 align:start position:0%
side when we when we work with it I mean
 

00:05:07.370 --> 00:05:09.090 align:start position:0%
side when we when we work with it I mean
there's<00:05:07.640><c> simply</c><00:05:07.850><c> no</c><00:05:08.000><c> other</c><00:05:08.150><c> way</c><00:05:08.360><c> so</c><00:05:08.420><c> let's</c>

00:05:09.090 --> 00:05:09.100 align:start position:0%
there's simply no other way so let's
 

00:05:09.100 --> 00:05:11.530 align:start position:0%
there's simply no other way so let's
let's<00:05:10.100><c> come</c><00:05:10.310><c> forward</c><00:05:10.640><c> to</c><00:05:10.730><c> this</c><00:05:10.850><c> dark</c><00:05:11.030><c> side</c><00:05:11.300><c> and</c>

00:05:11.530 --> 00:05:11.540 align:start position:0%
let's come forward to this dark side and
 

00:05:11.540 --> 00:05:16.060 align:start position:0%
let's come forward to this dark side and
work<00:05:12.470><c> with</c><00:05:12.650><c> it</c><00:05:13.840><c> in</c><00:05:14.840><c> order</c><00:05:15.020><c> for</c><00:05:15.440><c> this</c>

00:05:16.060 --> 00:05:16.070 align:start position:0%
work with it in order for this
 

00:05:16.070 --> 00:05:18.160 align:start position:0%
work with it in order for this
particular<00:05:16.850><c> presentation</c><00:05:17.150><c> we</c><00:05:17.840><c> have</c><00:05:18.020><c> to</c><00:05:18.140><c> I</c>

00:05:18.160 --> 00:05:18.170 align:start position:0%
particular presentation we have to I
 

00:05:18.170 --> 00:05:18.700 align:start position:0%
particular presentation we have to I
have<00:05:18.380><c> to</c>

00:05:18.700 --> 00:05:18.710 align:start position:0%
have to
 

00:05:18.710 --> 00:05:21.310 align:start position:0%
have to
it<00:05:19.610><c> will</c><00:05:19.820><c> straight</c><00:05:20.090><c> you</c><00:05:20.270><c> with</c><00:05:20.600><c> some</c><00:05:20.840><c> examples</c>

00:05:21.310 --> 00:05:21.320 align:start position:0%
it will straight you with some examples
 

00:05:21.320 --> 00:05:23.410 align:start position:0%
it will straight you with some examples
so<00:05:21.950><c> we'll</c><00:05:22.310><c> have</c><00:05:22.400><c> to</c><00:05:22.550><c> pick</c><00:05:22.670><c> some</c><00:05:22.820><c> toy</c><00:05:23.030><c> problem</c>

00:05:23.410 --> 00:05:23.420 align:start position:0%
so we'll have to pick some toy problem
 

00:05:23.420 --> 00:05:24.940 align:start position:0%
so we'll have to pick some toy problem
and<00:05:23.690><c> that's</c><00:05:24.080><c> the</c><00:05:24.290><c> hardest</c><00:05:24.620><c> part</c>

00:05:24.940 --> 00:05:24.950 align:start position:0%
and that's the hardest part
 

00:05:24.950 --> 00:05:27.190 align:start position:0%
and that's the hardest part
I<00:05:25.160><c> mean</c><00:05:25.700><c> peeking</c><00:05:26.030><c> into</c><00:05:26.180><c> a</c><00:05:26.300><c> problem</c><00:05:26.570><c> to</c>

00:05:27.190 --> 00:05:27.200 align:start position:0%
I mean peeking into a problem to
 

00:05:27.200 --> 00:05:28.630 align:start position:0%
I mean peeking into a problem to
showcase<00:05:27.590><c> concurrency</c><00:05:28.070><c> because</c><00:05:28.340><c> to</c><00:05:28.610><c> a</c>

00:05:28.630 --> 00:05:28.640 align:start position:0%
showcase concurrency because to a
 

00:05:28.640 --> 00:05:31.000 align:start position:0%
showcase concurrency because to a
program<00:05:28.940><c> never</c><00:05:29.180><c> never</c><00:05:29.990><c> real</c><00:05:30.260><c> problem</c><00:05:30.800><c> and</c>

00:05:31.000 --> 00:05:31.010 align:start position:0%
program never never real problem and
 

00:05:31.010 --> 00:05:33.430 align:start position:0%
program never never real problem and
will<00:05:32.000><c> never</c><00:05:32.150><c> show</c><00:05:32.450><c> you</c><00:05:32.510><c> the</c><00:05:32.840><c> two</c><00:05:33.140><c> problems</c>

00:05:33.430 --> 00:05:33.440 align:start position:0%
will never show you the two problems
 

00:05:33.440 --> 00:05:36.400 align:start position:0%
will never show you the two problems
that<00:05:33.650><c> you'll</c><00:05:34.370><c> encounter</c><00:05:34.580><c> real</c><00:05:35.150><c> life</c><00:05:35.360><c> but</c><00:05:36.200><c> for</c>

00:05:36.400 --> 00:05:36.410 align:start position:0%
that you'll encounter real life but for
 

00:05:36.410 --> 00:05:38.890 align:start position:0%
that you'll encounter real life but for
those<00:05:36.530><c> this</c><00:05:36.920><c> particular</c><00:05:37.610><c> problem</c><00:05:37.910><c> I've</c><00:05:38.330><c> built</c>

00:05:38.890 --> 00:05:38.900 align:start position:0%
those this particular problem I've built
 

00:05:38.900 --> 00:05:43.300 align:start position:0%
those this particular problem I've built
a<00:05:39.020><c> stack</c><00:05:39.730><c> there</c><00:05:40.730><c> isn't</c><00:05:41.000><c> simple</c><00:05:41.480><c> most</c><00:05:42.440><c> people</c>

00:05:43.300 --> 00:05:43.310 align:start position:0%
a stack there isn't simple most people
 

00:05:43.310 --> 00:05:46.570 align:start position:0%
a stack there isn't simple most people
no<00:05:43.790><c> know</c><00:05:44.180><c> how</c><00:05:44.420><c> stacks</c><00:05:44.720><c> work</c><00:05:44.960><c> and</c><00:05:45.260><c> you</c><00:05:46.220><c> know</c><00:05:46.340><c> it</c>

00:05:46.570 --> 00:05:46.580 align:start position:0%
no know how stacks work and you know it
 

00:05:46.580 --> 00:05:49.270 align:start position:0%
no know how stacks work and you know it
will<00:05:46.760><c> let</c><00:05:46.940><c> us</c><00:05:47.440><c> showcase</c><00:05:48.440><c> some</c><00:05:48.620><c> core</c><00:05:48.830><c> concepts</c>

00:05:49.270 --> 00:05:49.280 align:start position:0%
will let us showcase some core concepts
 

00:05:49.280 --> 00:05:52.660 align:start position:0%
will let us showcase some core concepts
they<00:05:49.670><c> will</c><00:05:50.180><c> be</c><00:05:50.300><c> working</c><00:05:50.450><c> with</c><00:05:51.400><c> for</c><00:05:52.400><c> sake</c><00:05:52.550><c> is</c>

00:05:52.660 --> 00:05:52.670 align:start position:0%
they will be working with for sake is
 

00:05:52.670 --> 00:05:54.520 align:start position:0%
they will be working with for sake is
simple<00:05:53.090><c> will</c><00:05:53.420><c> get</c><00:05:53.690><c> the</c><00:05:53.810><c> Lincoln</c><00:05:54.080><c> stack</c><00:05:54.320><c> so</c>

00:05:54.520 --> 00:05:54.530 align:start position:0%
simple will get the Lincoln stack so
 

00:05:54.530 --> 00:05:56.650 align:start position:0%
simple will get the Lincoln stack so
we'll<00:05:54.710><c> have</c><00:05:55.190><c> a</c><00:05:55.250><c> node</c><00:05:55.550><c> in</c><00:05:55.850><c> a</c><00:05:55.940><c> stack</c><00:05:56.180><c> that</c><00:05:56.210><c> has</c><00:05:56.630><c> a</c>

00:05:56.650 --> 00:05:56.660 align:start position:0%
we'll have a node in a stack that has a
 

00:05:56.660 --> 00:05:59.560 align:start position:0%
we'll have a node in a stack that has a
next<00:05:57.470><c> reference</c><00:05:58.190><c> and</c><00:05:58.700><c> the</c><00:05:58.820><c> value</c><00:05:59.150><c> of</c><00:05:59.330><c> some</c>

00:05:59.560 --> 00:05:59.570 align:start position:0%
next reference and the value of some
 

00:05:59.570 --> 00:06:01.960 align:start position:0%
next reference and the value of some
type<00:05:59.750><c> T</c><00:06:00.020><c> and</c><00:06:00.620><c> I'm</c><00:06:00.770><c> doing</c><00:06:00.980><c> my</c><00:06:01.100><c> as</c><00:06:01.310><c> I</c><00:06:01.340><c> said</c><00:06:01.790><c> my</c>

00:06:01.960 --> 00:06:01.970 align:start position:0%
type T and I'm doing my as I said my
 

00:06:01.970 --> 00:06:04.270 align:start position:0%
type T and I'm doing my as I said my
examples<00:06:02.480><c> in</c><00:06:02.600><c> Kotlin</c><00:06:03.080><c> just</c><00:06:03.590><c> because</c><00:06:03.860><c> a</c><00:06:03.890><c> cotton</c>

00:06:04.270 --> 00:06:04.280 align:start position:0%
examples in Kotlin just because a cotton
 

00:06:04.280 --> 00:06:05.320 align:start position:0%
examples in Kotlin just because a cotton
is<00:06:04.370><c> you</c><00:06:04.490><c> know</c><00:06:04.580><c> special</c><00:06:04.940><c> English</c><00:06:05.090><c> were</c>

00:06:05.320 --> 00:06:05.330 align:start position:0%
is you know special English were
 

00:06:05.330 --> 00:06:07.840 align:start position:0%
is you know special English were
invented<00:06:05.720><c> so</c><00:06:05.750><c> or</c><00:06:06.410><c> code</c><00:06:06.920><c> fits</c><00:06:07.190><c> on</c><00:06:07.340><c> slide</c><00:06:07.640><c> you</c>

00:06:07.840 --> 00:06:07.850 align:start position:0%
invented so or code fits on slide you
 

00:06:07.850 --> 00:06:10.120 align:start position:0%
invented so or code fits on slide you
know<00:06:07.970><c> and</c><00:06:08.660><c> because</c><00:06:08.990><c> if</c><00:06:09.230><c> I</c><00:06:09.350><c> do</c><00:06:09.410><c> it</c><00:06:09.530><c> in</c><00:06:09.650><c> Java</c><00:06:09.920><c> you</c>

00:06:10.120 --> 00:06:10.130 align:start position:0%
know and because if I do it in Java you
 

00:06:10.130 --> 00:06:12.220 align:start position:0%
know and because if I do it in Java you
know<00:06:10.250><c> it's</c><00:06:10.430><c> a</c><00:06:10.490><c> full</c><00:06:10.670><c> side</c><00:06:10.910><c> of</c><00:06:11.060><c> code</c><00:06:11.270><c> and</c><00:06:11.540><c> you</c>

00:06:12.220 --> 00:06:12.230 align:start position:0%
know it's a full side of code and you
 

00:06:12.230 --> 00:06:15.310 align:start position:0%
know it's a full side of code and you
know<00:06:12.350><c> in</c><00:06:12.620><c> the</c><00:06:12.740><c> Wisconsin</c><00:06:13.490><c> III</c><00:06:13.970><c> can</c><00:06:14.510><c> fit</c>

00:06:15.310 --> 00:06:15.320 align:start position:0%
know in the Wisconsin III can fit
 

00:06:15.320 --> 00:06:17.230 align:start position:0%
know in the Wisconsin III can fit
something<00:06:15.530><c> else</c><00:06:15.830><c> in</c><00:06:16.160><c> addition</c><00:06:16.280><c> to</c><00:06:16.610><c> that</c><00:06:16.730><c> and</c>

00:06:17.230 --> 00:06:17.240 align:start position:0%
something else in addition to that and
 

00:06:17.240 --> 00:06:19.690 align:start position:0%
something else in addition to that and
that's<00:06:17.390><c> what</c><00:06:17.630><c> I</c><00:06:17.660><c> need</c><00:06:17.900><c> so</c><00:06:18.140><c> oh</c><00:06:18.470><c> I</c><00:06:19.100><c> won't</c><00:06:19.610><c> be</c>

00:06:19.690 --> 00:06:19.700 align:start position:0%
that's what I need so oh I won't be
 

00:06:19.700 --> 00:06:21.670 align:start position:0%
that's what I need so oh I won't be
scared<00:06:20.060><c> it</c><00:06:20.180><c> was</c><00:06:20.270><c> Java</c><00:06:20.480><c> anymore</c>

00:06:21.670 --> 00:06:21.680 align:start position:0%
scared it was Java anymore
 

00:06:21.680 --> 00:06:26.040 align:start position:0%
scared it was Java anymore
so<00:06:23.140><c> the</c><00:06:24.140><c> sec</c><00:06:24.320><c> is</c><00:06:24.440><c> simple</c><00:06:24.830><c> so</c><00:06:25.340><c> how</c><00:06:25.520><c> it</c><00:06:25.610><c> works</c>

00:06:26.040 --> 00:06:26.050 align:start position:0%
so the sec is simple so how it works
 

00:06:26.050 --> 00:06:28.860 align:start position:0%
so the sec is simple so how it works
anyone<00:06:27.050><c> starts</c><00:06:27.290><c> with</c><00:06:27.440><c> an</c><00:06:27.560><c> empty</c><00:06:27.800><c> stack</c><00:06:28.010><c> that's</c>

00:06:28.860 --> 00:06:28.870 align:start position:0%
anyone starts with an empty stack that's
 

00:06:28.870 --> 00:06:31.480 align:start position:0%
anyone starts with an empty stack that's
some<00:06:29.870><c> top</c><00:06:30.080><c> variable</c><00:06:30.620><c> with</c><00:06:30.890><c> their</c><00:06:31.160><c> null</c>

00:06:31.480 --> 00:06:31.490 align:start position:0%
some top variable with their null
 

00:06:31.490 --> 00:06:34.180 align:start position:0%
some top variable with their null
pointer<00:06:31.940><c> then</c><00:06:32.540><c> we</c><00:06:32.690><c> add</c><00:06:32.840><c> an</c><00:06:33.170><c> element</c><00:06:33.440><c> to</c><00:06:33.770><c> it</c><00:06:33.890><c> and</c>

00:06:34.180 --> 00:06:34.190 align:start position:0%
pointer then we add an element to it and
 

00:06:34.190 --> 00:06:37.120 align:start position:0%
pointer then we add an element to it and
it<00:06:34.820><c> stopped</c><00:06:35.180><c> once</c><00:06:35.510><c> to</c><00:06:35.630><c> attend</c><00:06:36.050><c> its</c><00:06:36.230><c> next</c><00:06:37.010><c> is</c>

00:06:37.120 --> 00:06:37.130 align:start position:0%
it stopped once to attend its next is
 

00:06:37.130 --> 00:06:40.390 align:start position:0%
it stopped once to attend its next is
now<00:06:37.310><c> then</c><00:06:37.940><c> we</c><00:06:38.090><c> can</c><00:06:38.300><c> add</c><00:06:38.930><c> another</c><00:06:39.230><c> one</c><00:06:39.950><c> element</c>

00:06:40.390 --> 00:06:40.400 align:start position:0%
now then we can add another one element
 

00:06:40.400 --> 00:06:40.940 align:start position:0%
now then we can add another one element
to

00:06:40.940 --> 00:06:40.950 align:start position:0%
to
 

00:06:40.950 --> 00:06:44.210 align:start position:0%
to
then<00:06:41.280><c> switch</c><00:06:41.970><c> top</c><00:06:42.270><c> tweet</c><00:06:42.900><c> and</c><00:06:43.200><c> that's</c><00:06:43.890><c> a</c><00:06:44.010><c> stack</c>

00:06:44.210 --> 00:06:44.220 align:start position:0%
then switch top tweet and that's a stack
 

00:06:44.220 --> 00:06:46.820 align:start position:0%
then switch top tweet and that's a stack
contains<00:06:44.550><c> two</c><00:06:44.730><c> elements</c><00:06:45.180><c> in</c><00:06:45.450><c> me</c><00:06:45.900><c> so</c><00:06:46.560><c> that's</c>

00:06:46.820 --> 00:06:46.830 align:start position:0%
contains two elements in me so that's
 

00:06:46.830 --> 00:06:49.070 align:start position:0%
contains two elements in me so that's
that's<00:06:47.460><c> that's</c><00:06:47.850><c> real</c><00:06:48.060><c> easy</c><00:06:48.210><c> so</c><00:06:48.390><c> push</c><00:06:48.660><c> elements</c>

00:06:49.070 --> 00:06:49.080 align:start position:0%
that's that's real easy so push elements
 

00:06:49.080 --> 00:06:51.200 align:start position:0%
that's that's real easy so push elements
the<00:06:49.140><c> stack</c><00:06:49.290><c> is</c><00:06:49.470><c> easy</c><00:06:49.590><c> and</c><00:06:50.100><c> we</c><00:06:50.610><c> can</c><00:06:50.850><c> easily</c>

00:06:51.200 --> 00:06:51.210 align:start position:0%
the stack is easy and we can easily
 

00:06:51.210 --> 00:06:53.810 align:start position:0%
the stack is easy and we can easily
write<00:06:51.600><c> this</c><00:06:51.870><c> code</c><00:06:52.110><c> I</c><00:06:52.410><c> mean</c><00:06:52.860><c> we</c><00:06:53.010><c> can</c><00:06:53.220><c> just</c>

00:06:53.810 --> 00:06:53.820 align:start position:0%
write this code I mean we can just
 

00:06:53.820 --> 00:06:56.300 align:start position:0%
write this code I mean we can just
declare<00:06:54.330><c> class</c><00:06:54.870><c> for</c><00:06:55.140><c> a</c><00:06:55.170><c> stack</c><00:06:55.440><c> we</c><00:06:55.950><c> can</c><00:06:56.130><c> declare</c>

00:06:56.300 --> 00:06:56.310 align:start position:0%
declare class for a stack we can declare
 

00:06:56.310 --> 00:06:59.930 align:start position:0%
declare class for a stack we can declare
top<00:06:57.300><c> variable</c><00:06:57.990><c> and</c><00:06:58.350><c> I'll</c><00:06:58.530><c> push</c><00:06:58.800><c> is</c><00:06:59.010><c> just</c><00:06:59.760><c> one</c>

00:06:59.930 --> 00:06:59.940 align:start position:0%
top variable and I'll push is just one
 

00:06:59.940 --> 00:07:06.620 align:start position:0%
top variable and I'll push is just one
liner<00:07:00.150><c> easy</c><00:07:02.600><c> not</c><00:07:03.600><c> not</c><00:07:03.870><c> a</c><00:07:03.900><c> video</c><00:07:04.080><c> so</c><00:07:05.390><c> that's</c><00:07:06.390><c> our</c>

00:07:06.620 --> 00:07:06.630 align:start position:0%
liner easy not not a video so that's our
 

00:07:06.630 --> 00:07:13.010 align:start position:0%
liner easy not not a video so that's our
top<00:07:06.840><c> that's</c><00:07:07.170><c> a</c><00:07:07.260><c> push</c><00:07:09.050><c> so</c><00:07:11.390><c> how</c><00:07:12.390><c> do</c><00:07:12.450><c> we</c><00:07:12.600><c> pop</c><00:07:12.870><c> an</c>

00:07:13.010 --> 00:07:13.020 align:start position:0%
top that's a push so how do we pop an
 

00:07:13.020 --> 00:07:14.090 align:start position:0%
top that's a push so how do we pop an
item<00:07:13.230><c> from</c><00:07:13.380><c> the</c><00:07:13.560><c> circuit</c>

00:07:14.090 --> 00:07:14.100 align:start position:0%
item from the circuit
 

00:07:14.100 --> 00:07:17.300 align:start position:0%
item from the circuit
so<00:07:14.220><c> we</c><00:07:14.460><c> examine</c><00:07:15.180><c> what</c><00:07:15.210><c> the</c><00:07:15.860><c> what</c><00:07:16.860><c> the</c><00:07:16.890><c> current</c>

00:07:17.300 --> 00:07:17.310 align:start position:0%
so we examine what the what the current
 

00:07:17.310 --> 00:07:19.730 align:start position:0%
so we examine what the what the current
element<00:07:17.670><c> is</c><00:07:17.790><c> the</c><00:07:17.970><c> top</c><00:07:18.180><c> and</c><00:07:18.450><c> then</c><00:07:18.750><c> we</c><00:07:18.990><c> flip</c><00:07:19.620><c> the</c>

00:07:19.730 --> 00:07:19.740 align:start position:0%
element is the top and then we flip the
 

00:07:19.740 --> 00:07:21.740 align:start position:0%
element is the top and then we flip the
top<00:07:19.920><c> to</c><00:07:20.130><c> the</c><00:07:20.250><c> next</c><00:07:20.460><c> one</c><00:07:20.640><c> and</c><00:07:20.820><c> we</c><00:07:20.880><c> read</c><00:07:21.630><c> the</c>

00:07:21.740 --> 00:07:21.750 align:start position:0%
top to the next one and we read the
 

00:07:21.750 --> 00:07:24.020 align:start position:0%
top to the next one and we read the
result<00:07:22.110><c> and</c><00:07:22.470><c> get</c><00:07:22.740><c> an</c><00:07:22.800><c> easy</c><00:07:22.920><c> and</c><00:07:23.400><c> just</c><00:07:23.700><c> how</c><00:07:23.880><c> it</c>

00:07:24.020 --> 00:07:24.030 align:start position:0%
result and get an easy and just how it
 

00:07:24.030 --> 00:07:24.410 align:start position:0%
result and get an easy and just how it
looks

00:07:24.410 --> 00:07:24.420 align:start position:0%
looks
 

00:07:24.420 --> 00:07:27.020 align:start position:0%
looks
that's<00:07:24.900><c> the</c><00:07:25.080><c> way</c><00:07:25.230><c> it</c><00:07:25.290><c> works</c><00:07:25.800><c> so</c><00:07:26.250><c> this</c><00:07:26.640><c> which</c><00:07:26.910><c> is</c>

00:07:27.020 --> 00:07:27.030 align:start position:0%
that's the way it works so this which is
 

00:07:27.030 --> 00:07:28.790 align:start position:0%
that's the way it works so this which is
especially<00:07:27.360><c> you</c><00:07:27.720><c> know</c><00:07:27.810><c> concise</c><00:07:28.260><c> and</c><00:07:28.470><c> coupling</c>

00:07:28.790 --> 00:07:28.800 align:start position:0%
especially you know concise and coupling
 

00:07:28.800 --> 00:07:32.450 align:start position:0%
especially you know concise and coupling
because<00:07:29.130><c> you</c><00:07:29.730><c> know</c><00:07:29.850><c> I</c><00:07:29.880><c> can</c><00:07:30.300><c> I</c><00:07:30.600><c> can</c><00:07:31.290><c> fold</c><00:07:31.860><c> my</c><00:07:32.070><c> no</c>

00:07:32.450 --> 00:07:32.460 align:start position:0%
because you know I can I can fold my no
 

00:07:32.460 --> 00:07:35.030 align:start position:0%
because you know I can I can fold my no
checks<00:07:32.820><c> into</c><00:07:33.090><c> this</c><00:07:33.420><c> nice</c><00:07:33.680><c> syntactical</c><00:07:34.680><c> cancer</c>

00:07:35.030 --> 00:07:35.040 align:start position:0%
checks into this nice syntactical cancer
 

00:07:35.040 --> 00:07:36.950 align:start position:0%
checks into this nice syntactical cancer
so<00:07:35.250><c> it's</c><00:07:35.340><c> really</c><00:07:35.520><c> really</c><00:07:35.880><c> like</c><00:07:36.510><c> everything</c>

00:07:36.950 --> 00:07:36.960 align:start position:0%
so it's really really like everything
 

00:07:36.960 --> 00:07:39.440 align:start position:0%
so it's really really like everything
fits<00:07:37.230><c> on</c><00:07:37.380><c> one</c><00:07:37.410><c> slide</c><00:07:37.580><c> that's</c><00:07:38.580><c> very</c><00:07:39.210><c> simple</c>

00:07:39.440 --> 00:07:39.450 align:start position:0%
fits on one slide that's very simple
 

00:07:39.450 --> 00:07:42.770 align:start position:0%
fits on one slide that's very simple
second<00:07:39.870><c> plantation</c><00:07:40.610><c> so</c><00:07:41.610><c> does</c><00:07:41.790><c> it</c><00:07:41.910><c> work</c><00:07:41.940><c> of</c>

00:07:42.770 --> 00:07:42.780 align:start position:0%
second plantation so does it work of
 

00:07:42.780 --> 00:07:45.710 align:start position:0%
second plantation so does it work of
course<00:07:42.990><c> it</c><00:07:43.080><c> works</c><00:07:43.320><c> if</c><00:07:44.160><c> I</c><00:07:44.370><c> do</c><00:07:44.430><c> it</c><00:07:44.640><c> serially</c><00:07:45.300><c> like</c>

00:07:45.710 --> 00:07:45.720 align:start position:0%
course it works if I do it serially like
 

00:07:45.720 --> 00:07:48.410 align:start position:0%
course it works if I do it serially like
if<00:07:45.930><c> I</c><00:07:46.080><c> if</c><00:07:46.530><c> only</c><00:07:46.800><c> once</c><00:07:46.980><c> threaded</c><00:07:47.940><c> time</c><00:07:48.180><c> works</c>

00:07:48.410 --> 00:07:48.420 align:start position:0%
if I if only once threaded time works
 

00:07:48.420 --> 00:07:51.080 align:start position:0%
if I if only once threaded time works
with<00:07:49.050><c> my</c><00:07:49.260><c> stat</c><00:07:49.620><c> if</c><00:07:49.950><c> I</c><00:07:50.070><c> don't</c><00:07:50.250><c> share</c><00:07:50.520><c> it</c><00:07:50.850><c> right</c>

00:07:51.080 --> 00:07:51.090 align:start position:0%
with my stat if I don't share it right
 

00:07:51.090 --> 00:07:52.940 align:start position:0%
with my stat if I don't share it right
everything<00:07:52.080><c> works</c><00:07:52.260><c> perfect</c><00:07:52.590><c> but</c><00:07:52.710><c> I</c><00:07:52.740><c> said</c>

00:07:52.940 --> 00:07:52.950 align:start position:0%
everything works perfect but I said
 

00:07:52.950 --> 00:07:55.490 align:start position:0%
everything works perfect but I said
working<00:07:53.250><c> if</c><00:07:53.340><c> I</c><00:07:53.430><c> actually</c><00:07:53.850><c> share</c><00:07:54.420><c> alright</c><00:07:55.350><c> if</c>

00:07:55.490 --> 00:07:55.500 align:start position:0%
working if I actually share alright if
 

00:07:55.500 --> 00:07:57.080 align:start position:0%
working if I actually share alright if
it's<00:07:55.680><c> shared</c><00:07:55.860><c> middle</c><00:07:56.280><c> state</c><00:07:56.430><c> if</c><00:07:56.550><c> the</c><00:07:56.700><c> stack</c><00:07:56.940><c> is</c>

00:07:57.080 --> 00:07:57.090 align:start position:0%
it's shared middle state if the stack is
 

00:07:57.090 --> 00:08:00.770 align:start position:0%
it's shared middle state if the stack is
a<00:07:57.120><c> partnership</c><00:07:57.450><c> maybe</c><00:07:57.810><c> I'm</c><00:07:58.140><c> doing</c><00:07:59.630><c> maybe</c><00:08:00.630><c> I'm</c>

00:08:00.770 --> 00:08:00.780 align:start position:0%
a partnership maybe I'm doing maybe I'm
 

00:08:00.780 --> 00:08:05.780 align:start position:0%
a partnership maybe I'm doing maybe I'm
doing<00:08:01.340><c> kind</c><00:08:02.340><c> of</c><00:08:02.520><c> for</c><00:08:03.450><c> example</c><00:08:03.540><c> a</c><00:08:04.110><c> pool</c><00:08:04.920><c> of</c><00:08:05.100><c> four</c>

00:08:05.780 --> 00:08:05.790 align:start position:0%
doing kind of for example a pool of four
 

00:08:05.790 --> 00:08:07.940 align:start position:0%
doing kind of for example a pool of four
big<00:08:05.940><c> objects</c><00:08:06.420><c> or</c><00:08:06.510><c> for</c><00:08:06.630><c> my</c><00:08:06.750><c> data</c><00:08:06.930><c> and</c><00:08:07.260><c> pulling</c>

00:08:07.940 --> 00:08:07.950 align:start position:0%
big objects or for my data and pulling
 

00:08:07.950 --> 00:08:09.830 align:start position:0%
big objects or for my data and pulling
objects<00:08:08.310><c> is</c><00:08:08.460><c> easy</c><00:08:08.790><c> to</c><00:08:09.150><c> do</c><00:08:09.240><c> with</c><00:08:09.390><c> stack</c><00:08:09.630><c> stack</c>

00:08:09.830 --> 00:08:09.840 align:start position:0%
objects is easy to do with stack stack
 

00:08:09.840 --> 00:08:10.550 align:start position:0%
objects is easy to do with stack stack
stack<00:08:09.870><c> is</c><00:08:10.170><c> nice</c>

00:08:10.550 --> 00:08:10.560 align:start position:0%
stack is nice
 

00:08:10.560 --> 00:08:12.830 align:start position:0%
stack is nice
absolutely<00:08:11.340><c> nice</c><00:08:11.610><c> data</c><00:08:12.060><c> structure</c><00:08:12.480><c> to</c><00:08:12.720><c> do</c><00:08:12.810><c> a</c>

00:08:12.830 --> 00:08:12.840 align:start position:0%
absolutely nice data structure to do a
 

00:08:12.840 --> 00:08:15.500 align:start position:0%
absolutely nice data structure to do a
pool<00:08:13.440><c> of</c><00:08:13.470><c> objects</c><00:08:13.980><c> so</c><00:08:14.490><c> suppose</c><00:08:14.970><c> I</c><00:08:15.060><c> have</c><00:08:15.090><c> a</c><00:08:15.270><c> pool</c>

00:08:15.500 --> 00:08:15.510 align:start position:0%
pool of objects so suppose I have a pool
 

00:08:15.510 --> 00:08:17.780 align:start position:0%
pool of objects so suppose I have a pool
of<00:08:15.540><c> some</c><00:08:16.020><c> buffers</c><00:08:16.620><c> or</c><00:08:16.800><c> a</c><00:08:16.920><c> seller</c><00:08:17.130><c> put</c><00:08:17.400><c> in</c><00:08:17.520><c> stack</c>

00:08:17.780 --> 00:08:17.790 align:start position:0%
of some buffers or a seller put in stack
 

00:08:17.790 --> 00:08:20.360 align:start position:0%
of some buffers or a seller put in stack
and<00:08:18.090><c> now</c><00:08:18.450><c> I</c><00:08:18.780><c> have</c><00:08:19.020><c> this</c><00:08:19.290><c> big</c><00:08:19.590><c> parallel</c>

00:08:20.360 --> 00:08:20.370 align:start position:0%
and now I have this big parallel
 

00:08:20.370 --> 00:08:22.850 align:start position:0%
and now I have this big parallel
processing<00:08:20.910><c> and</c><00:08:21.150><c> my</c><00:08:21.300><c> many</c><00:08:21.690><c> threads</c><00:08:21.960><c> needs</c><00:08:22.260><c> to</c>

00:08:22.850 --> 00:08:22.860 align:start position:0%
processing and my many threads needs to
 

00:08:22.860 --> 00:08:26.600 align:start position:0%
processing and my many threads needs to
take<00:08:23.100><c> items</c><00:08:23.960><c> from</c><00:08:24.960><c> the</c><00:08:25.140><c> pool</c><00:08:25.320><c> and</c><00:08:25.590><c> put</c><00:08:26.430><c> back</c>

00:08:26.600 --> 00:08:26.610 align:start position:0%
take items from the pool and put back
 

00:08:26.610 --> 00:08:29.690 align:start position:0%
take items from the pool and put back
items<00:08:27.060><c> into</c><00:08:27.360><c> the</c><00:08:27.450><c> pool</c><00:08:27.660><c> so</c><00:08:28.190><c> so</c><00:08:29.190><c> what</c><00:08:29.340><c> happens</c>

00:08:29.690 --> 00:08:29.700 align:start position:0%
items into the pool so so what happens
 

00:08:29.700 --> 00:08:32.060 align:start position:0%
items into the pool so so what happens
if<00:08:29.850><c> two</c><00:08:29.880><c> threads</c><00:08:30.300><c> try</c><00:08:31.020><c> to</c><00:08:31.080><c> push</c><00:08:31.380><c> into</c><00:08:31.680><c> stack</c>

00:08:32.060 --> 00:08:32.070 align:start position:0%
if two threads try to push into stack
 

00:08:32.070 --> 00:08:34.430 align:start position:0%
if two threads try to push into stack
right<00:08:32.610><c> so</c><00:08:33.000><c> one</c><00:08:33.210><c> of</c><00:08:33.300><c> them</c><00:08:33.420><c> comes</c><00:08:33.720><c> you</c><00:08:34.290><c> know</c>

00:08:34.430 --> 00:08:34.440 align:start position:0%
right so one of them comes you know
 

00:08:34.440 --> 00:08:37.820 align:start position:0%
right so one of them comes you know
weeds<00:08:35.370><c> the</c><00:08:35.700><c> top</c><00:08:35.940><c> tries</c><00:08:36.510><c> to</c><00:08:36.690><c> add</c><00:08:36.810><c> value</c><00:08:37.050><c> B</c><00:08:37.380><c> then</c>

00:08:37.820 --> 00:08:37.830 align:start position:0%
weeds the top tries to add value B then
 

00:08:37.830 --> 00:08:40.070 align:start position:0%
weeds the top tries to add value B then
the<00:08:37.950><c> other</c><00:08:38.070><c> comes</c><00:08:38.400><c> with</c><00:08:38.790><c> it</c><00:08:38.970><c> up</c><00:08:39.120><c> tries</c><00:08:39.780><c> to</c><00:08:39.990><c> add</c>

00:08:40.070 --> 00:08:40.080 align:start position:0%
the other comes with it up tries to add
 

00:08:40.080 --> 00:08:43.310 align:start position:0%
the other comes with it up tries to add
element<00:08:40.620><c> C</c><00:08:40.830><c> but</c><00:08:41.490><c> now</c><00:08:41.640><c> only</c><00:08:42.060><c> one</c><00:08:42.210><c> of</c><00:08:42.330><c> them</c><00:08:42.510><c> will</c>

00:08:43.310 --> 00:08:43.320 align:start position:0%
element C but now only one of them will
 

00:08:43.320 --> 00:08:45.740 align:start position:0%
element C but now only one of them will
succeed<00:08:43.890><c> in</c><00:08:44.040><c> updating</c><00:08:44.370><c> the</c><00:08:44.700><c> top</c><00:08:44.940><c> and</c><00:08:45.270><c> the</c>

00:08:45.740 --> 00:08:45.750 align:start position:0%
succeed in updating the top and the
 

00:08:45.750 --> 00:08:49.310 align:start position:0%
succeed in updating the top and the
other<00:08:45.780><c> one</c><00:08:46.200><c> will</c><00:08:46.890><c> rewrite</c><00:08:47.640><c> the</c><00:08:48.510><c> top</c><00:08:48.720><c> from</c><00:08:49.170><c> the</c>

00:08:49.310 --> 00:08:49.320 align:start position:0%
other one will rewrite the top from the
 

00:08:49.320 --> 00:08:52.040 align:start position:0%
other one will rewrite the top from the
first<00:08:49.530><c> one</c><00:08:49.770><c> so</c><00:08:50.400><c> we'll</c><00:08:50.640><c> get</c><00:08:50.850><c> in</c><00:08:51.150><c> the</c><00:08:51.570><c> end</c><00:08:51.750><c> will</c>

00:08:52.040 --> 00:08:52.050 align:start position:0%
first one so we'll get in the end will
 

00:08:52.050 --> 00:08:53.079 align:start position:0%
first one so we'll get in the end will
get<00:08:52.230><c> only</c>

00:08:53.079 --> 00:08:53.089 align:start position:0%
get only
 

00:08:53.089 --> 00:08:54.819 align:start position:0%
get only
two<00:08:53.300><c> threats</c><00:08:53.540><c> concurrently</c><00:08:53.930><c> push</c><00:08:54.170><c> will</c><00:08:54.649><c> get</c>

00:08:54.819 --> 00:08:54.829 align:start position:0%
two threats concurrently push will get
 

00:08:54.829 --> 00:08:57.970 align:start position:0%
two threats concurrently push will get
only<00:08:54.949><c> one</c><00:08:55.279><c> of</c><00:08:55.370><c> them</c><00:08:55.519><c> added</c><00:08:55.939><c> to</c><00:08:56.720><c> the</c><00:08:56.870><c> stack</c><00:08:57.110><c> and</c>

00:08:57.970 --> 00:08:57.980 align:start position:0%
only one of them added to the stack and
 

00:08:57.980 --> 00:09:00.670 align:start position:0%
only one of them added to the stack and
this<00:08:58.309><c> is</c><00:08:58.490><c> a</c><00:08:58.519><c> common</c><00:08:58.819><c> problem</c><00:08:58.970><c> this</c><00:08:59.809><c> it's</c><00:09:00.499><c> I</c>

00:09:00.670 --> 00:09:00.680 align:start position:0%
this is a common problem this it's I
 

00:09:00.680 --> 00:09:03.100 align:start position:0%
this is a common problem this it's I
think<00:09:00.860><c> you</c><00:09:00.949><c> called</c><00:09:01.189><c> it</c><00:09:01.279><c> conflict</c><00:09:02.120><c> and</c><00:09:02.569><c> it's</c>

00:09:03.100 --> 00:09:03.110 align:start position:0%
think you called it conflict and it's
 

00:09:03.110 --> 00:09:06.220 align:start position:0%
think you called it conflict and it's
easy<00:09:03.319><c> to</c><00:09:03.439><c> solve</c><00:09:03.829><c> in</c><00:09:04.339><c> both</c><00:09:04.639><c> Java</c><00:09:04.939><c> ya</c><00:09:05.300><c> Kotlin</c><00:09:06.079><c> you</c>

00:09:06.220 --> 00:09:06.230 align:start position:0%
easy to solve in both Java ya Kotlin you
 

00:09:06.230 --> 00:09:07.569 align:start position:0%
easy to solve in both Java ya Kotlin you
just<00:09:06.410><c> market</c><00:09:06.680><c> synchronizing</c><00:09:07.220><c> job</c><00:09:07.370><c> it's</c><00:09:07.519><c> a</c>

00:09:07.569 --> 00:09:07.579 align:start position:0%
just market synchronizing job it's a
 

00:09:07.579 --> 00:09:13.090 align:start position:0%
just market synchronizing job it's a
keyword<00:09:07.939><c> you</c><00:09:08.269><c> know</c><00:09:08.839><c> in</c><00:09:10.329><c> in</c><00:09:11.329><c> the</c><00:09:12.139><c> cotton</c><00:09:12.769><c> it's</c><00:09:12.949><c> a</c>

00:09:13.090 --> 00:09:13.100 align:start position:0%
keyword you know in in the cotton it's a
 

00:09:13.100 --> 00:09:14.559 align:start position:0%
keyword you know in in the cotton it's a
annotation<00:09:13.790><c> but</c><00:09:13.910><c> the</c><00:09:13.970><c> concept</c><00:09:14.300><c> is</c><00:09:14.360><c> the</c><00:09:14.540><c> same</c>

00:09:14.559 --> 00:09:14.569 align:start position:0%
annotation but the concept is the same
 

00:09:14.569 --> 00:09:18.090 align:start position:0%
annotation but the concept is the same
by<00:09:14.959><c> marking</c><00:09:15.350><c> it</c><00:09:15.499><c> synchronize</c><00:09:16.160><c> you</c><00:09:16.370><c> you</c>

00:09:18.090 --> 00:09:18.100 align:start position:0%
by marking it synchronize you you
 

00:09:18.100 --> 00:09:20.549 align:start position:0%
by marking it synchronize you you
ensured<00:09:19.100><c> mutual</c><00:09:19.579><c> exclusion</c><00:09:19.879><c> between</c>

00:09:20.549 --> 00:09:20.559 align:start position:0%
ensured mutual exclusion between
 

00:09:20.559 --> 00:09:23.470 align:start position:0%
ensured mutual exclusion between
different<00:09:21.559><c> threads</c><00:09:21.999><c> that</c><00:09:22.999><c> are</c><00:09:23.059><c> trying</c><00:09:23.329><c> to</c>

00:09:23.470 --> 00:09:23.480 align:start position:0%
different threads that are trying to
 

00:09:23.480 --> 00:09:26.470 align:start position:0%
different threads that are trying to
push<00:09:23.660><c> and</c><00:09:23.839><c> pop</c><00:09:23.990><c> and</c><00:09:24.499><c> this</c><00:09:25.220><c> way</c><00:09:25.459><c> it</c><00:09:25.819><c> prevents</c>

00:09:26.470 --> 00:09:26.480 align:start position:0%
push and pop and this way it prevents
 

00:09:26.480 --> 00:09:29.769 align:start position:0%
push and pop and this way it prevents
the<00:09:27.259><c> problems</c><00:09:27.920><c> that</c><00:09:28.069><c> we</c><00:09:28.249><c> saw</c><00:09:28.660><c> but</c><00:09:29.660><c> the</c>

00:09:29.769 --> 00:09:29.779 align:start position:0%
the problems that we saw but the
 

00:09:29.779 --> 00:09:32.350 align:start position:0%
the problems that we saw but the
question<00:09:30.139><c> we</c><00:09:30.259><c> came</c><00:09:30.949><c> here</c><00:09:31.189><c> to</c><00:09:31.550><c> understand</c><00:09:32.240><c> it</c>

00:09:32.350 --> 00:09:32.360 align:start position:0%
question we came here to understand it
 

00:09:32.360 --> 00:09:34.449 align:start position:0%
question we came here to understand it
does<00:09:32.509><c> it</c><00:09:32.629><c> scale</c><00:09:32.839><c> okay</c><00:09:33.529><c> so</c><00:09:33.829><c> I</c><00:09:33.860><c> saw</c><00:09:34.069><c> the</c><00:09:34.129><c> problem</c>

00:09:34.449 --> 00:09:34.459 align:start position:0%
does it scale okay so I saw the problem
 

00:09:34.459 --> 00:09:37.960 align:start position:0%
does it scale okay so I saw the problem
now<00:09:34.579><c> works</c><00:09:34.939><c> but</c><00:09:35.930><c> does</c><00:09:35.959><c> it</c><00:09:36.259><c> skill</c><00:09:36.610><c> in</c><00:09:37.610><c> order</c><00:09:37.730><c> to</c>

00:09:37.960 --> 00:09:37.970 align:start position:0%
now works but does it skill in order to
 

00:09:37.970 --> 00:09:40.530 align:start position:0%
now works but does it skill in order to
figure<00:09:38.240><c> out</c><00:09:38.329><c> if</c><00:09:38.449><c> it</c><00:09:38.569><c> scales</c><00:09:38.839><c> we</c><00:09:39.079><c> have</c><00:09:39.259><c> to</c>

00:09:40.530 --> 00:09:40.540 align:start position:0%
figure out if it scales we have to
 

00:09:40.540 --> 00:09:42.639 align:start position:0%
figure out if it scales we have to
understand<00:09:41.540><c> what's</c><00:09:41.779><c> called</c><00:09:41.990><c> bilities</c><00:09:42.350><c> and</c>

00:09:42.639 --> 00:09:42.649 align:start position:0%
understand what's called bilities and
 

00:09:42.649 --> 00:09:45.249 align:start position:0%
understand what's called bilities and
some<00:09:42.860><c> who</c><00:09:42.980><c> measure</c><00:09:43.220><c> it</c><00:09:43.660><c> remember</c><00:09:44.660><c> we'll</c><00:09:45.019><c> just</c>

00:09:45.249 --> 00:09:45.259 align:start position:0%
some who measure it remember we'll just
 

00:09:45.259 --> 00:09:48.400 align:start position:0%
some who measure it remember we'll just
run<00:09:45.350><c> a</c><00:09:45.410><c> benchmark</c><00:09:45.910><c> and</c><00:09:46.910><c> we'll</c><00:09:47.360><c> use</c><00:09:47.389><c> this</c><00:09:47.779><c> this</c>

00:09:48.400 --> 00:09:48.410 align:start position:0%
run a benchmark and we'll use this this
 

00:09:48.410 --> 00:09:51.009 align:start position:0%
run a benchmark and we'll use this this
nice<00:09:48.559><c> gem</c><00:09:49.459><c> a</c><00:09:49.579><c> framework</c><00:09:49.910><c> that's</c><00:09:50.329><c> I</c><00:09:50.809><c> would</c>

00:09:51.009 --> 00:09:51.019 align:start position:0%
nice gem a framework that's I would
 

00:09:51.019 --> 00:09:53.129 align:start position:0%
nice gem a framework that's I would
recommend<00:09:51.740><c> anyone</c><00:09:52.100><c> who</c><00:09:52.339><c> is</c><00:09:52.459><c> writing</c>

00:09:53.129 --> 00:09:53.139 align:start position:0%
recommend anyone who is writing
 

00:09:53.139 --> 00:09:56.949 align:start position:0%
recommend anyone who is writing
benchmark<00:09:54.139><c> is</c><00:09:54.259><c> open</c><00:09:54.470><c> source</c><00:09:54.709><c> on</c><00:09:55.749><c> open</c><00:09:56.749><c> source</c>

00:09:56.949 --> 00:09:56.959 align:start position:0%
benchmark is open source on open source
 

00:09:56.959 --> 00:09:58.419 align:start position:0%
benchmark is open source on open source
and<00:09:57.170><c> I</c><00:09:57.379><c> will</c><00:09:57.529><c> have</c><00:09:57.679><c> all</c><00:09:57.769><c> the</c><00:09:57.949><c> links</c><00:09:58.069><c> at</c><00:09:58.279><c> the</c><00:09:58.309><c> end</c>

00:09:58.419 --> 00:09:58.429 align:start position:0%
and I will have all the links at the end
 

00:09:58.429 --> 00:10:04.299 align:start position:0%
and I will have all the links at the end
it's<00:09:58.670><c> open</c><00:09:58.910><c> source</c><00:09:59.120><c> on</c><00:09:59.300><c> D</c><00:10:00.040><c> on</c><00:10:01.040><c> the</c><00:10:03.069><c> Java</c><00:10:04.069><c> side</c>

00:10:04.299 --> 00:10:04.309 align:start position:0%
it's open source on D on the Java side
 

00:10:04.309 --> 00:10:08.110 align:start position:0%
it's open source on D on the Java side
so<00:10:04.610><c> and</c><00:10:05.949><c> it's</c><00:10:06.949><c> part</c><00:10:07.160><c> of</c><00:10:07.249><c> what</c><00:10:07.309><c> man</c><00:10:07.550><c> GDK</c><00:10:07.910><c> so</c><00:10:08.089><c> I</c>

00:10:08.110 --> 00:10:08.120 align:start position:0%
so and it's part of what man GDK so I
 

00:10:08.120 --> 00:10:11.259 align:start position:0%
so and it's part of what man GDK so I
can<00:10:08.540><c> just</c><00:10:08.749><c> declare</c><00:10:09.110><c> my</c><00:10:09.439><c> benchmark</c><00:10:10.149><c> which</c><00:10:11.149><c> I</c>

00:10:11.259 --> 00:10:11.269 align:start position:0%
can just declare my benchmark which I
 

00:10:11.269 --> 00:10:13.449 align:start position:0%
can just declare my benchmark which I
have<00:10:11.449><c> a</c><00:10:11.480><c> share</c><00:10:11.809><c> stick</c><00:10:12.110><c> and</c><00:10:12.379><c> I</c><00:10:12.860><c> will</c><00:10:13.309><c> have</c>

00:10:13.449 --> 00:10:13.459 align:start position:0%
have a share stick and I will have
 

00:10:13.459 --> 00:10:15.549 align:start position:0%
have a share stick and I will have
multiple<00:10:13.850><c> threads</c><00:10:13.970><c> just</c><00:10:14.329><c> trying</c><00:10:15.230><c> to</c><00:10:15.379><c> push</c>

00:10:15.549 --> 00:10:15.559 align:start position:0%
multiple threads just trying to push
 

00:10:15.559 --> 00:10:18.280 align:start position:0%
multiple threads just trying to push
item<00:10:15.860><c> set</c><00:10:16.069><c> popping</c><00:10:16.459><c> making</c><00:10:16.850><c> sure</c><00:10:16.999><c> they</c><00:10:17.839><c> pop</c>

00:10:18.280 --> 00:10:18.290 align:start position:0%
item set popping making sure they pop
 

00:10:18.290 --> 00:10:21.910 align:start position:0%
item set popping making sure they pop
and<00:10:18.769><c> one</c><00:10:18.949><c> so</c><00:10:19.699><c> the</c><00:10:20.540><c> work</c><00:10:20.929><c> my</c><00:10:21.079><c> workload</c><00:10:21.470><c> is</c><00:10:21.740><c> real</c>

00:10:21.910 --> 00:10:21.920 align:start position:0%
and one so the work my workload is real
 

00:10:21.920 --> 00:10:24.429 align:start position:0%
and one so the work my workload is real
simple<00:10:22.339><c> just</c><00:10:22.490><c> the</c><00:10:23.120><c> sequence</c><00:10:23.329><c> push</c><00:10:23.689><c> pop</c><00:10:23.899><c> I</c><00:10:24.110><c> make</c>

00:10:24.429 --> 00:10:24.439 align:start position:0%
simple just the sequence push pop I make
 

00:10:24.439 --> 00:10:25.869 align:start position:0%
simple just the sequence push pop I make
sure<00:10:24.589><c> that</c><00:10:24.769><c> issue</c><00:10:24.980><c> is</c><00:10:25.129><c> pushes</c><00:10:25.429><c> and</c><00:10:25.579><c> pops</c><00:10:25.639><c> OH</c>

00:10:25.869 --> 00:10:25.879 align:start position:0%
sure that issue is pushes and pops OH
 

00:10:25.879 --> 00:10:27.460 align:start position:0%
sure that issue is pushes and pops OH
stacks<00:10:26.329><c> doesn't</c><00:10:26.389><c> grow</c><00:10:26.779><c> indefinitely</c><00:10:27.019><c> it's</c>

00:10:27.460 --> 00:10:27.470 align:start position:0%
stacks doesn't grow indefinitely it's
 

00:10:27.470 --> 00:10:30.129 align:start position:0%
stacks doesn't grow indefinitely it's
just<00:10:27.649><c> limited</c><00:10:28.040><c> in</c><00:10:28.129><c> size</c><00:10:28.339><c> and</c><00:10:28.970><c> to</c><00:10:29.660><c> measure</c><00:10:29.899><c> how</c>

00:10:30.129 --> 00:10:30.139 align:start position:0%
just limited in size and to measure how
 

00:10:30.139 --> 00:10:30.819 align:start position:0%
just limited in size and to measure how
it<00:10:30.290><c> scales</c>

00:10:30.819 --> 00:10:30.829 align:start position:0%
it scales
 

00:10:30.829 --> 00:10:34.360 align:start position:0%
it scales
I<00:10:30.860><c> want</c><00:10:31.519><c> this</c><00:10:31.699><c> benchmark</c><00:10:32.259><c> by</c><00:10:33.259><c> wiring</c><00:10:34.069><c> the</c>

00:10:34.360 --> 00:10:34.370 align:start position:0%
I want this benchmark by wiring the
 

00:10:34.370 --> 00:10:36.220 align:start position:0%
I want this benchmark by wiring the
number<00:10:34.610><c> of</c><00:10:34.699><c> threats</c><00:10:34.939><c> enter</c><00:10:35.209><c> on</c><00:10:35.300><c> it</c><00:10:35.480><c> and</c><00:10:36.050><c> in</c>

00:10:36.220 --> 00:10:36.230 align:start position:0%
number of threats enter on it and in
 

00:10:36.230 --> 00:10:39.069 align:start position:0%
number of threats enter on it and in
order<00:10:36.319><c> to</c><00:10:36.559><c> make</c><00:10:36.800><c> it</c><00:10:36.980><c> realistic</c><00:10:37.490><c> I've</c><00:10:37.850><c> went</c><00:10:38.749><c> and</c>

00:10:39.069 --> 00:10:39.079 align:start position:0%
order to make it realistic I've went and
 

00:10:39.079 --> 00:10:43.449 align:start position:0%
order to make it realistic I've went and
rented<00:10:39.740><c> this</c><00:10:40.730><c> the</c><00:10:41.029><c> largest</c><00:10:41.480><c> Amazon</c><00:10:42.459><c> instance</c>

00:10:43.449 --> 00:10:43.459 align:start position:0%
rented this the largest Amazon instance
 

00:10:43.459 --> 00:10:45.730 align:start position:0%
rented this the largest Amazon instance
I<00:10:43.579><c> could</c><00:10:43.759><c> get</c><00:10:43.910><c> my</c><00:10:43.999><c> hands</c><00:10:44.300><c> on</c><00:10:44.389><c> with</c><00:10:44.600><c> some</c><00:10:45.019><c> extra</c>

00:10:45.730 --> 00:10:45.740 align:start position:0%
I could get my hands on with some extra
 

00:10:45.740 --> 00:10:48.730 align:start position:0%
I could get my hands on with some extra
large<00:10:46.179><c> compute</c><00:10:47.179><c> instance</c><00:10:47.600><c> with</c><00:10:47.929><c> you</c><00:10:48.559><c> know</c>

00:10:48.730 --> 00:10:48.740 align:start position:0%
large compute instance with you know
 

00:10:48.740 --> 00:10:52.110 align:start position:0%
large compute instance with you know
Xeon<00:10:49.670><c> processors</c><00:10:50.209><c> 32</c><00:10:50.870><c> Hardware</c><00:10:51.230><c> threads</c><00:10:51.499><c> so</c>

00:10:52.110 --> 00:10:52.120 align:start position:0%
Xeon processors 32 Hardware threads so
 

00:10:52.120 --> 00:10:55.869 align:start position:0%
Xeon processors 32 Hardware threads so
like<00:10:53.120><c> I</c><00:10:53.149><c> think</c><00:10:53.480><c> that's</c><00:10:54.139><c> how</c><00:10:54.259><c> you</c><00:10:54.819><c> run</c><00:10:55.819><c> your</c>

00:10:55.869 --> 00:10:55.879 align:start position:0%
like I think that's how you run your
 

00:10:55.879 --> 00:10:57.879 align:start position:0%
like I think that's how you run your
wheel<00:10:56.269><c> application</c><00:10:56.899><c> right</c><00:10:57.019><c> you'll</c><00:10:57.319><c> if</c><00:10:57.740><c> you</c>

00:10:57.879 --> 00:10:57.889 align:start position:0%
wheel application right you'll if you
 

00:10:57.889 --> 00:10:59.619 align:start position:0%
wheel application right you'll if you
have<00:10:58.069><c> lots</c><00:10:58.279><c> of</c><00:10:58.399><c> data</c><00:10:58.550><c> you</c><00:10:58.790><c> have</c><00:10:59.120><c> this</c><00:10:59.449><c> big</c>

00:10:59.619 --> 00:10:59.629 align:start position:0%
have lots of data you have this big
 

00:10:59.629 --> 00:11:02.230 align:start position:0%
have lots of data you have this big
machine<00:10:59.779><c> lots</c><00:11:00.170><c> of</c><00:11:00.259><c> memory</c><00:11:00.589><c> and</c><00:11:01.120><c> lots</c><00:11:02.120><c> of</c>

00:11:02.230 --> 00:11:02.240 align:start position:0%
machine lots of memory and lots of
 

00:11:02.240 --> 00:11:04.269 align:start position:0%
machine lots of memory and lots of
Hardware<00:11:02.629><c> threads</c><00:11:02.870><c> you'll</c><00:11:03.290><c> load</c><00:11:03.649><c> your</c><00:11:04.069><c> data</c>

00:11:04.269 --> 00:11:04.279 align:start position:0%
Hardware threads you'll load your data
 

00:11:04.279 --> 00:11:04.870 align:start position:0%
Hardware threads you'll load your data
inside

00:11:04.870 --> 00:11:04.880 align:start position:0%
inside
 

00:11:04.880 --> 00:11:09.220 align:start position:0%
inside
machine<00:11:05.839><c> and</c><00:11:05.990><c> you</c><00:11:06.139><c> will</c><00:11:06.290><c> start</c><00:11:06.560><c> all</c><00:11:06.889><c> your</c><00:11:08.230><c> data</c>

00:11:09.220 --> 00:11:09.230 align:start position:0%
machine and you will start all your data
 

00:11:09.230 --> 00:11:10.870 align:start position:0%
machine and you will start all your data
processing<00:11:09.860><c> threats</c><00:11:10.130><c> will</c><00:11:10.339><c> start</c><00:11:10.579><c> working</c>

00:11:10.870 --> 00:11:10.880 align:start position:0%
processing threats will start working
 

00:11:10.880 --> 00:11:12.879 align:start position:0%
processing threats will start working
with<00:11:11.149><c> this</c><00:11:11.269><c> data</c><00:11:11.449><c> concurrently</c><00:11:12.050><c> so</c><00:11:12.620><c> the</c><00:11:12.769><c> in</c>

00:11:12.879 --> 00:11:12.889 align:start position:0%
with this data concurrently so the in
 

00:11:12.889 --> 00:11:14.620 align:start position:0%
with this data concurrently so the in
this<00:11:13.009><c> whole</c><00:11:13.220><c> model</c><00:11:13.670><c> that's</c><00:11:14.029><c> basically</c><00:11:14.420><c> this</c>

00:11:14.620 --> 00:11:14.630 align:start position:0%
this whole model that's basically this
 

00:11:14.630 --> 00:11:17.110 align:start position:0%
this whole model that's basically this
wheel<00:11:14.990><c> tour</c><00:11:15.259><c> examples</c><00:11:15.649><c> on</c><00:11:15.740><c> model</c><00:11:16.100><c> of</c><00:11:16.370><c> that</c>

00:11:17.110 --> 00:11:17.120 align:start position:0%
wheel tour examples on model of that
 

00:11:17.120 --> 00:11:19.180 align:start position:0%
wheel tour examples on model of that
kind<00:11:17.480><c> of</c><00:11:17.569><c> real-life</c><00:11:17.899><c> processing</c><00:11:18.560><c> if</c><00:11:18.709><c> so</c><00:11:19.040><c> I'm</c>

00:11:19.180 --> 00:11:19.190 align:start position:0%
kind of real-life processing if so I'm
 

00:11:19.190 --> 00:11:21.280 align:start position:0%
kind of real-life processing if so I'm
running<00:11:19.339><c> this</c><00:11:19.610><c> of</c><00:11:19.819><c> real-life</c><00:11:20.720><c> looking</c>

00:11:21.280 --> 00:11:21.290 align:start position:0%
running this of real-life looking
 

00:11:21.290 --> 00:11:25.120 align:start position:0%
running this of real-life looking
machine<00:11:21.410><c> and</c><00:11:21.800><c> that's</c><00:11:22.730><c> what</c><00:11:22.910><c> I</c><00:11:22.940><c> get</c><00:11:23.980><c> what</c><00:11:24.980><c> I</c><00:11:25.009><c> get</c>

00:11:25.120 --> 00:11:25.130 align:start position:0%
machine and that's what I get what I get
 

00:11:25.130 --> 00:11:28.660 align:start position:0%
machine and that's what I get what I get
is<00:11:25.399><c> that</c><00:11:25.610><c> it's</c><00:11:26.269><c> it</c><00:11:26.630><c> does</c><00:11:27.259><c> like</c><00:11:27.440><c> 20</c><00:11:27.889><c> millions</c><00:11:28.459><c> of</c>

00:11:28.660 --> 00:11:28.670 align:start position:0%
is that it's it does like 20 millions of
 

00:11:28.670 --> 00:11:30.249 align:start position:0%
is that it's it does like 20 millions of
these<00:11:28.790><c> operations</c><00:11:29.360><c> per</c><00:11:29.600><c> second</c><00:11:29.990><c> in</c><00:11:30.079><c> one</c>

00:11:30.249 --> 00:11:30.259 align:start position:0%
these operations per second in one
 

00:11:30.259 --> 00:11:33.730 align:start position:0%
these operations per second in one
thread<00:11:30.500><c> but</c><00:11:31.459><c> then</c><00:11:31.639><c> if</c><00:11:32.000><c> I</c><00:11:32.120><c> add</c><00:11:32.269><c> more</c><00:11:32.509><c> threads</c><00:11:32.899><c> it</c>

00:11:33.730 --> 00:11:33.740 align:start position:0%
thread but then if I add more threads it
 

00:11:33.740 --> 00:11:35.350 align:start position:0%
thread but then if I add more threads it
doesn't<00:11:34.279><c> become</c><00:11:34.490><c> better</c><00:11:34.730><c> it's</c><00:11:35.120><c> actually</c>

00:11:35.350 --> 00:11:35.360 align:start position:0%
doesn't become better it's actually
 

00:11:35.360 --> 00:11:38.110 align:start position:0%
doesn't become better it's actually
become<00:11:35.600><c> worse</c><00:11:36.339><c> you</c><00:11:37.339><c> know</c><00:11:37.430><c> it's</c><00:11:37.639><c> especially</c>

00:11:38.110 --> 00:11:38.120 align:start position:0%
become worse you know it's especially
 

00:11:38.120 --> 00:11:39.790 align:start position:0%
become worse you know it's especially
working<00:11:38.509><c> two</c><00:11:38.810><c> threads</c><00:11:39.110><c> which</c><00:11:39.410><c> kinds</c><00:11:39.740><c> of</c>

00:11:39.790 --> 00:11:39.800 align:start position:0%
working two threads which kinds of
 

00:11:39.800 --> 00:11:41.620 align:start position:0%
working two threads which kinds of
interesting<00:11:40.310><c> effect</c><00:11:40.610><c> when</c><00:11:40.850><c> we</c><00:11:41.029><c> have</c><00:11:41.209><c> two</c>

00:11:41.620 --> 00:11:41.630 align:start position:0%
interesting effect when we have two
 

00:11:41.630 --> 00:11:43.600 align:start position:0%
interesting effect when we have two
threads<00:11:41.899><c> is</c><00:11:42.110><c> like</c><00:11:42.319><c> the</c><00:11:42.709><c> worst</c><00:11:42.920><c> of</c><00:11:43.069><c> the</c><00:11:43.220><c> worst</c>

00:11:43.600 --> 00:11:43.610 align:start position:0%
threads is like the worst of the worst
 

00:11:43.610 --> 00:11:45.550 align:start position:0%
threads is like the worst of the worst
but<00:11:44.089><c> as</c><00:11:44.269><c> which</c><00:11:44.690><c> number</c><00:11:44.930><c> of</c><00:11:44.990><c> threads</c><00:11:45.139><c> kind</c><00:11:45.470><c> of</c>

00:11:45.550 --> 00:11:45.560 align:start position:0%
but as which number of threads kind of
 

00:11:45.560 --> 00:11:47.559 align:start position:0%
but as which number of threads kind of
stabilizes<00:11:46.100><c> and</c><00:11:46.250><c> but</c><00:11:46.639><c> still</c><00:11:46.910><c> it</c><00:11:47.269><c> does</c><00:11:47.449><c> not</c>

00:11:47.559 --> 00:11:47.569 align:start position:0%
stabilizes and but still it does not
 

00:11:47.569 --> 00:11:49.960 align:start position:0%
stabilizes and but still it does not
perform<00:11:47.990><c> as</c><00:11:48.170><c> well</c><00:11:48.500><c> as</c><00:11:48.949><c> if</c><00:11:49.279><c> it</c><00:11:49.430><c> were</c><00:11:49.639><c> running</c>

00:11:49.960 --> 00:11:49.970 align:start position:0%
perform as well as if it were running
 

00:11:49.970 --> 00:11:52.660 align:start position:0%
perform as well as if it were running
just<00:11:50.660><c> a</c><00:11:50.810><c> single</c><00:11:51.139><c> thread</c><00:11:51.440><c> so</c><00:11:51.860><c> differently</c><00:11:52.250><c> this</c>

00:11:52.660 --> 00:11:52.670 align:start position:0%
just a single thread so differently this
 

00:11:52.670 --> 00:11:54.970 align:start position:0%
just a single thread so differently this
kind<00:11:52.910><c> of</c><00:11:52.940><c> problem</c><00:11:53.329><c> in</c><00:11:53.540><c> the</c><00:11:54.110><c> solution</c><00:11:54.529><c> to</c><00:11:54.649><c> it</c><00:11:54.740><c> is</c>

00:11:54.970 --> 00:11:54.980 align:start position:0%
kind of problem in the solution to it is
 

00:11:54.980 --> 00:11:57.309 align:start position:0%
kind of problem in the solution to it is
we're<00:11:55.220><c> adding</c><00:11:55.730><c> more</c><00:11:55.940><c> threads</c><00:11:56.389><c> doesn't</c><00:11:57.170><c> make</c>

00:11:57.309 --> 00:11:57.319 align:start position:0%
we're adding more threads doesn't make
 

00:11:57.319 --> 00:12:00.730 align:start position:0%
we're adding more threads doesn't make
it<00:11:58.000><c> doesn't</c><00:11:59.000><c> make</c><00:11:59.209><c> it</c><00:11:59.329><c> better</c><00:11:59.449><c> it</c><00:11:59.870><c> doesn't</c><00:12:00.620><c> let</c>

00:12:00.730 --> 00:12:00.740 align:start position:0%
it doesn't make it better it doesn't let
 

00:12:00.740 --> 00:12:03.249 align:start position:0%
it doesn't make it better it doesn't let
it<00:12:00.860><c> push</c><00:12:01.670><c> more</c><00:12:02.060><c> operations</c><00:12:02.600><c> per</c><00:12:02.779><c> second</c><00:12:03.139><c> so</c>

00:12:03.249 --> 00:12:03.259 align:start position:0%
it push more operations per second so
 

00:12:03.259 --> 00:12:05.740 align:start position:0%
it push more operations per second so
it's<00:12:03.560><c> what's</c><00:12:04.250><c> called</c><00:12:04.430><c> doesn't</c><00:12:04.730><c> skill</c><00:12:04.970><c> why</c>

00:12:05.740 --> 00:12:05.750 align:start position:0%
it's what's called doesn't skill why
 

00:12:05.750 --> 00:12:07.629 align:start position:0%
it's what's called doesn't skill why
doesn't<00:12:06.079><c> kill</c><00:12:06.290><c> because</c><00:12:06.860><c> because</c><00:12:07.490><c> I</c><00:12:07.519><c> think</c>

00:12:07.629 --> 00:12:07.639 align:start position:0%
doesn't kill because because I think
 

00:12:07.639 --> 00:12:10.689 align:start position:0%
doesn't kill because because I think
that<00:12:07.819><c> its</c><00:12:08.029><c> technical</c><00:12:08.509><c> contention</c><00:12:09.199><c> so</c><00:12:09.920><c> because</c>

00:12:10.689 --> 00:12:10.699 align:start position:0%
that its technical contention so because
 

00:12:10.699 --> 00:12:12.790 align:start position:0%
that its technical contention so because
when<00:12:11.180><c> one</c><00:12:11.389><c> threads</c><00:12:11.689><c> perform</c><00:12:12.319><c> said</c><00:12:12.560><c> for</c>

00:12:12.790 --> 00:12:12.800 align:start position:0%
when one threads perform said for
 

00:12:12.800 --> 00:12:15.340 align:start position:0%
when one threads perform said for
example<00:12:12.889><c> a</c><00:12:13.160><c> pop</c><00:12:13.339><c> and</c><00:12:13.670><c> the</c><00:12:14.180><c> other</c><00:12:14.329><c> thread</c><00:12:14.870><c> in</c>

00:12:15.340 --> 00:12:15.350 align:start position:0%
example a pop and the other thread in
 

00:12:15.350 --> 00:12:17.290 align:start position:0%
example a pop and the other thread in
the<00:12:15.860><c> middle</c><00:12:16.189><c> of</c><00:12:16.250><c> the</c><00:12:16.370><c> pop</c><00:12:16.550><c> comes</c><00:12:16.850><c> and</c><00:12:17.060><c> tries</c><00:12:17.180><c> to</c>

00:12:17.290 --> 00:12:17.300 align:start position:0%
the middle of the pop comes and tries to
 

00:12:17.300 --> 00:12:20.199 align:start position:0%
the middle of the pop comes and tries to
do<00:12:17.600><c> it</c><00:12:17.750><c> it</c><00:12:18.290><c> can't</c><00:12:18.860><c> do</c><00:12:19.100><c> it</c><00:12:19.189><c> has</c><00:12:19.430><c> to</c><00:12:19.639><c> wait</c><00:12:19.850><c> because</c>

00:12:20.199 --> 00:12:20.209 align:start position:0%
do it it can't do it has to wait because
 

00:12:20.209 --> 00:12:21.850 align:start position:0%
do it it can't do it has to wait because
synchronized<00:12:20.870><c> is</c><00:12:21.170><c> a</c><00:12:21.199><c> mutual</c><00:12:21.620><c> exclusion</c>

00:12:21.850 --> 00:12:21.860 align:start position:0%
synchronized is a mutual exclusion
 

00:12:21.860 --> 00:12:23.439 align:start position:0%
synchronized is a mutual exclusion
concept<00:12:22.370><c> you</c><00:12:22.759><c> know</c><00:12:22.880><c> we'll</c><00:12:23.029><c> have</c><00:12:23.180><c> to</c><00:12:23.300><c> wait</c>

00:12:23.439 --> 00:12:23.449 align:start position:0%
concept you know we'll have to wait
 

00:12:23.449 --> 00:12:25.509 align:start position:0%
concept you know we'll have to wait
until<00:12:23.480><c> the</c><00:12:23.839><c> first</c><00:12:24.019><c> pop</c><00:12:24.230><c> completes</c><00:12:24.800><c> and</c><00:12:24.980><c> only</c>

00:12:25.509 --> 00:12:25.519 align:start position:0%
until the first pop completes and only
 

00:12:25.519 --> 00:12:28.829 align:start position:0%
until the first pop completes and only
then<00:12:25.819><c> we</c><00:12:26.660><c> can</c><00:12:26.810><c> pop</c><00:12:27.019><c> an</c><00:12:27.170><c> item</c><00:12:27.410><c> from</c><00:12:27.560><c> the</c><00:12:27.709><c> stack</c>

00:12:28.829 --> 00:12:28.839 align:start position:0%
then we can pop an item from the stack
 

00:12:28.839 --> 00:12:32.199 align:start position:0%
then we can pop an item from the stack
so<00:12:29.839><c> that's</c><00:12:30.079><c> that's</c><00:12:30.380><c> one</c><00:12:30.649><c> one</c><00:12:31.130><c> problem</c><00:12:31.730><c> with</c>

00:12:32.199 --> 00:12:32.209 align:start position:0%
so that's that's one one problem with
 

00:12:32.209 --> 00:12:35.679 align:start position:0%
so that's that's one one problem with
synchronization<00:12:33.170><c> which</c><00:12:34.009><c> all</c><00:12:34.220><c> usual</c><00:12:34.689><c> solution</c>

00:12:35.679 --> 00:12:35.689 align:start position:0%
synchronization which all usual solution
 

00:12:35.689 --> 00:12:38.079 align:start position:0%
synchronization which all usual solution
to<00:12:36.529><c> the</c><00:12:36.649><c> concurrency</c><00:12:37.189><c> is</c><00:12:37.250><c> that</c><00:12:37.459><c> under</c>

00:12:38.079 --> 00:12:38.089 align:start position:0%
to the concurrency is that under
 

00:12:38.089 --> 00:12:40.689 align:start position:0%
to the concurrency is that under
contention<00:12:38.750><c> we're</c><00:12:39.649><c> starting</c><00:12:40.100><c> to</c><00:12:40.250><c> wait</c><00:12:40.430><c> we</c>

00:12:40.689 --> 00:12:40.699 align:start position:0%
contention we're starting to wait we
 

00:12:40.699 --> 00:12:42.910 align:start position:0%
contention we're starting to wait we
cannot<00:12:41.029><c> do</c><00:12:41.269><c> things</c><00:12:41.509><c> concurrently</c><00:12:41.920><c> like</c>

00:12:42.910 --> 00:12:42.920 align:start position:0%
cannot do things concurrently like
 

00:12:42.920 --> 00:12:44.860 align:start position:0%
cannot do things concurrently like
really<00:12:43.250><c> seen</c><00:12:43.550><c> synchronized</c><00:12:44.180><c> keywords</c><00:12:44.689><c> and</c>

00:12:44.860 --> 00:12:44.870 align:start position:0%
really seen synchronized keywords and
 

00:12:44.870 --> 00:12:48.850 align:start position:0%
really seen synchronized keywords and
locks<00:12:45.139><c> they</c><00:12:46.720><c> limit</c><00:12:47.720><c> our</c><00:12:47.930><c> concurrency</c><00:12:48.560><c> because</c>

00:12:48.850 --> 00:12:48.860 align:start position:0%
locks they limit our concurrency because
 

00:12:48.860 --> 00:12:50.889 align:start position:0%
locks they limit our concurrency because
we<00:12:49.370><c> have</c><00:12:49.610><c> to</c><00:12:49.790><c> since</c><00:12:50.389><c> have</c><00:12:50.569><c> to</c><00:12:50.689><c> be</c><00:12:50.779><c> done</c>

00:12:50.889 --> 00:12:50.899 align:start position:0%
we have to since have to be done
 

00:12:50.899 --> 00:12:54.579 align:start position:0%
we have to since have to be done
serially<00:12:51.410><c> more</c><00:12:52.220><c> more</c><00:12:52.910><c> so</c><00:12:53.180><c> it</c><00:12:53.600><c> adds</c><00:12:53.899><c> overhead</c>

00:12:54.579 --> 00:12:54.589 align:start position:0%
serially more more so it adds overhead
 

00:12:54.589 --> 00:12:58.329 align:start position:0%
serially more more so it adds overhead
because<00:12:55.100><c> every</c><00:12:55.730><c> time</c><00:12:55.970><c> I</c><00:12:56.110><c> stumble</c><00:12:57.110><c> into</c><00:12:57.339><c> the</c>

00:12:58.329 --> 00:12:58.339 align:start position:0%
because every time I stumble into the
 

00:12:58.339 --> 00:13:00.550 align:start position:0%
because every time I stumble into the
log<00:12:58.610><c> by</c><00:12:58.880><c> other</c><00:12:59.060><c> thread</c><00:12:59.449><c> I</c><00:12:59.660><c> have</c><00:13:00.079><c> to</c><00:13:00.199><c> contact</c>

00:13:00.550 --> 00:13:00.560 align:start position:0%
log by other thread I have to contact
 

00:13:00.560 --> 00:13:03.220 align:start position:0%
log by other thread I have to contact
tsuge<00:13:00.889><c> that's</c><00:13:01.339><c> why</c><00:13:01.579><c> it</c><00:13:01.819><c> falls</c><00:13:02.269><c> down</c><00:13:02.389><c> under</c>

00:13:03.220 --> 00:13:03.230 align:start position:0%
tsuge that's why it falls down under
 

00:13:03.230 --> 00:13:04.990 align:start position:0%
tsuge that's why it falls down under
when<00:13:03.769><c> we</c><00:13:03.920><c> have</c><00:13:04.040><c> multiple</c><00:13:04.220><c> say</c><00:13:04.519><c> it's</c><00:13:04.819><c> not</c><00:13:04.939><c> just</c>

00:13:04.990 --> 00:13:05.000 align:start position:0%
when we have multiple say it's not just
 

00:13:05.000 --> 00:13:07.449 align:start position:0%
when we have multiple say it's not just
stays<00:13:05.360><c> flat</c><00:13:05.689><c> like</c><00:13:06.500><c> we</c><00:13:06.709><c> can</c><00:13:06.860><c> only</c><00:13:06.980><c> push</c><00:13:07.189><c> more</c>

00:13:07.449 --> 00:13:07.459 align:start position:0%
stays flat like we can only push more
 

00:13:07.459 --> 00:13:09.490 align:start position:0%
stays flat like we can only push more
operations<00:13:07.639><c> per</c><00:13:08.060><c> second</c><00:13:08.329><c> we</c><00:13:08.420><c> actually</c><00:13:08.810><c> under</c>

00:13:09.490 --> 00:13:09.500 align:start position:0%
operations per second we actually under
 

00:13:09.500 --> 00:13:11.829 align:start position:0%
operations per second we actually under
contention<00:13:10.189><c> when</c><00:13:10.370><c> we</c><00:13:10.490><c> have</c><00:13:10.639><c> lots</c><00:13:11.120><c> of</c><00:13:11.209><c> doing</c><00:13:11.750><c> it</c>

00:13:11.829 --> 00:13:11.839 align:start position:0%
contention when we have lots of doing it
 

00:13:11.839 --> 00:13:13.750 align:start position:0%
contention when we have lots of doing it
we're<00:13:12.050><c> pushing</c><00:13:12.290><c> less</c><00:13:12.560><c> operations</c><00:13:13.189><c> per</c><00:13:13.370><c> second</c>

00:13:13.750 --> 00:13:13.760 align:start position:0%
we're pushing less operations per second
 

00:13:13.760 --> 00:13:16.030 align:start position:0%
we're pushing less operations per second
because<00:13:14.269><c> there's</c><00:13:14.720><c> X</c><00:13:14.930><c> overhead</c><00:13:15.470><c> involved</c><00:13:15.829><c> in</c>

00:13:16.030 --> 00:13:16.040 align:start position:0%
because there's X overhead involved in
 

00:13:16.040 --> 00:13:17.369 align:start position:0%
because there's X overhead involved in
managing

00:13:17.369 --> 00:13:17.379 align:start position:0%
managing
 

00:13:17.379 --> 00:13:20.280 align:start position:0%
managing
but<00:13:17.980><c> that</c><00:13:18.129><c> just</c><00:13:18.250><c> one</c><00:13:18.519><c> problem</c><00:13:18.939><c> with</c><00:13:19.329><c> locks</c><00:13:19.569><c> the</c>

00:13:20.280 --> 00:13:20.290 align:start position:0%
but that just one problem with locks the
 

00:13:20.290 --> 00:13:21.840 align:start position:0%
but that just one problem with locks the
other<00:13:20.410><c> problem</c><00:13:20.769><c> is</c><00:13:20.800><c> ox</c><00:13:20.980><c> is</c><00:13:21.100><c> dead</c><00:13:21.279><c> locks</c><00:13:21.550><c> when</c>

00:13:21.840 --> 00:13:21.850 align:start position:0%
other problem is ox is dead locks when
 

00:13:21.850 --> 00:13:24.269 align:start position:0%
other problem is ox is dead locks when
we<00:13:22.000><c> start</c><00:13:22.240><c> to</c><00:13:22.360><c> writing</c><00:13:22.600><c> a</c><00:13:23.040><c> rake</c><00:13:24.040><c> in</c><00:13:24.189><c> our</c>

00:13:24.269 --> 00:13:24.279 align:start position:0%
we start to writing a rake in our
 

00:13:24.279 --> 00:13:28.079 align:start position:0%
we start to writing a rake in our
application<00:13:24.970><c> we</c><00:13:25.930><c> synchronize</c><00:13:26.379><c> with</c><00:13:26.709><c> locks</c><00:13:27.089><c> as</c>

00:13:28.079 --> 00:13:28.089 align:start position:0%
application we synchronize with locks as
 

00:13:28.089 --> 00:13:30.540 align:start position:0%
application we synchronize with locks as
we<00:13:28.779><c> add</c><00:13:28.930><c> more</c><00:13:28.959><c> and</c><00:13:29.230><c> more</c><00:13:29.379><c> locks</c><00:13:29.680><c> in</c><00:13:29.949><c> our</c><00:13:30.069><c> amps</c>

00:13:30.540 --> 00:13:30.550 align:start position:0%
we add more and more locks in our amps
 

00:13:30.550 --> 00:13:33.360 align:start position:0%
we add more and more locks in our amps
we<00:13:31.209><c> add</c><00:13:31.509><c> the</c><00:13:31.779><c> contents</c><00:13:32.319><c> risk</c><00:13:32.769><c> intron</c><00:13:33.339><c> and</c>

00:13:33.360 --> 00:13:33.370 align:start position:0%
we add the contents risk intron and
 

00:13:33.370 --> 00:13:35.369 align:start position:0%
we add the contents risk intron and
daggered<00:13:33.879><c> locks</c><00:13:34.060><c> in</c><00:13:34.389><c> the</c><00:13:34.720><c> situation</c><00:13:35.139><c> where</c>

00:13:35.369 --> 00:13:35.379 align:start position:0%
daggered locks in the situation where
 

00:13:35.379 --> 00:13:37.710 align:start position:0%
daggered locks in the situation where
you<00:13:36.189><c> know</c><00:13:36.279><c> I</c><00:13:36.310><c> cannot</c><00:13:36.879><c> take</c><00:13:37.120><c> a</c><00:13:37.149><c> lot</c><00:13:37.389><c> because</c>

00:13:37.710 --> 00:13:37.720 align:start position:0%
you know I cannot take a lot because
 

00:13:37.720 --> 00:13:40.079 align:start position:0%
you know I cannot take a lot because
it's<00:13:38.410><c> taking</c><00:13:38.829><c> but</c><00:13:38.980><c> some</c><00:13:39.100><c> other</c><00:13:39.250><c> thread</c><00:13:39.579><c> who</c>

00:13:40.079 --> 00:13:40.089 align:start position:0%
it's taking but some other thread who
 

00:13:40.089 --> 00:13:42.240 align:start position:0%
it's taking but some other thread who
turns<00:13:40.509><c> out</c><00:13:40.629><c> to</c><00:13:40.839><c> be</c><00:13:40.870><c> waiting</c><00:13:41.230><c> for</c><00:13:41.259><c> for</c><00:13:41.980><c> the</c><00:13:42.009><c> log</c>

00:13:42.240 --> 00:13:42.250 align:start position:0%
turns out to be waiting for for the log
 

00:13:42.250 --> 00:13:45.210 align:start position:0%
turns out to be waiting for for the log
that<00:13:42.459><c> I</c><00:13:42.699><c> keep</c><00:13:43.509><c> and</c><00:13:43.870><c> that's</c><00:13:44.470><c> that</c><00:13:44.829><c> that's</c>

00:13:45.210 --> 00:13:45.220 align:start position:0%
that I keep and that's that that's
 

00:13:45.220 --> 00:13:47.220 align:start position:0%
that I keep and that's that that's
that's<00:13:45.639><c> the</c><00:13:45.850><c> other</c><00:13:46.000><c> scalability</c><00:13:46.629><c> problem</c>

00:13:47.220 --> 00:13:47.230 align:start position:0%
that's the other scalability problem
 

00:13:47.230 --> 00:13:50.189 align:start position:0%
that's the other scalability problem
with<00:13:47.740><c> locks</c><00:13:48.009><c> were</c><00:13:48.519><c> scalability</c><00:13:49.329><c> not</c><00:13:49.810><c> in</c><00:13:50.019><c> terms</c>

00:13:50.189 --> 00:13:50.199 align:start position:0%
with locks were scalability not in terms
 

00:13:50.199 --> 00:13:53.550 align:start position:0%
with locks were scalability not in terms
of<00:13:50.410><c> how</c><00:13:50.709><c> many</c><00:13:51.509><c> Hardware</c><00:13:52.509><c> course</c><00:13:52.810><c> I</c><00:13:52.990><c> have</c><00:13:53.230><c> but</c>

00:13:53.550 --> 00:13:53.560 align:start position:0%
of how many Hardware course I have but
 

00:13:53.560 --> 00:13:54.929 align:start position:0%
of how many Hardware course I have but
skull<00:13:53.829><c> built</c><00:13:54.009><c> in</c><00:13:54.160><c> terms</c><00:13:54.339><c> of</c><00:13:54.490><c> how</c><00:13:54.610><c> large</c><00:13:54.819><c> my</c>

00:13:54.929 --> 00:13:54.939 align:start position:0%
skull built in terms of how large my
 

00:13:54.939 --> 00:13:56.610 align:start position:0%
skull built in terms of how large my
project<00:13:55.420><c> is</c><00:13:55.540><c> the</c><00:13:55.660><c> logic</c><00:13:55.899><c> my</c><00:13:55.990><c> project</c><00:13:56.319><c> becomes</c>

00:13:56.610 --> 00:13:56.620 align:start position:0%
project is the logic my project becomes
 

00:13:56.620 --> 00:14:00.150 align:start position:0%
project is the logic my project becomes
the<00:13:57.220><c> harder</c><00:13:57.579><c> it</c><00:13:58.079><c> becomes</c><00:13:59.079><c> to</c><00:13:59.350><c> maintain</c><00:13:59.829><c> if</c><00:14:00.009><c> I'm</c>

00:14:00.150 --> 00:14:00.160 align:start position:0%
the harder it becomes to maintain if I'm
 

00:14:00.160 --> 00:14:03.439 align:start position:0%
the harder it becomes to maintain if I'm
using<00:14:00.490><c> locks</c><00:14:00.819><c> in</c><00:14:00.970><c> it</c><00:14:01.649><c> so</c><00:14:02.649><c> that's</c><00:14:02.889><c> why</c><00:14:03.129><c> we're</c>

00:14:03.439 --> 00:14:03.449 align:start position:0%
using locks in it so that's why we're
 

00:14:03.449 --> 00:14:05.840 align:start position:0%
using locks in it so that's why we're
for<00:14:04.449><c> either</c><00:14:04.810><c> of</c><00:14:05.019><c> those</c><00:14:05.139><c> problems</c><00:14:05.529><c> were</c>

00:14:05.840 --> 00:14:05.850 align:start position:0%
for either of those problems were
 

00:14:05.850 --> 00:14:07.769 align:start position:0%
for either of those problems were
turning<00:14:06.850><c> our</c><00:14:06.910><c> sighting</c><00:14:07.300><c> to</c><00:14:07.449><c> lock</c><00:14:07.600><c> for</c>

00:14:07.769 --> 00:14:07.779 align:start position:0%
turning our sighting to lock for
 

00:14:07.779 --> 00:14:09.660 align:start position:0%
turning our sighting to lock for
algorithms<00:14:08.290><c> algorithms</c><00:14:08.560><c> that</c><00:14:08.920><c> don't</c><00:14:09.550><c> use</c>

00:14:09.660 --> 00:14:09.670 align:start position:0%
algorithms algorithms that don't use
 

00:14:09.670 --> 00:14:13.740 align:start position:0%
algorithms algorithms that don't use
locks<00:14:09.939><c> to</c><00:14:10.269><c> solve</c><00:14:10.480><c> this</c><00:14:10.629><c> same</c><00:14:10.779><c> problem</c><00:14:10.949><c> and</c><00:14:12.750><c> the</c>

00:14:13.740 --> 00:14:13.750 align:start position:0%
locks to solve this same problem and the
 

00:14:13.750 --> 00:14:15.780 align:start position:0%
locks to solve this same problem and the
to<00:14:14.379><c> understand</c><00:14:14.800><c> how</c><00:14:15.160><c> lock</c><00:14:15.399><c> for</c><00:14:15.610><c> algorithms</c>

00:14:15.780 --> 00:14:15.790 align:start position:0%
to understand how lock for algorithms
 

00:14:15.790 --> 00:14:19.259 align:start position:0%
to understand how lock for algorithms
work<00:14:16.180><c> how</c><00:14:16.449><c> they</c><00:14:16.629><c> don't</c><00:14:17.490><c> don't</c><00:14:18.490><c> run</c><00:14:18.639><c> into</c><00:14:18.970><c> the</c>

00:14:19.259 --> 00:14:19.269 align:start position:0%
work how they don't don't run into the
 

00:14:19.269 --> 00:14:21.629 align:start position:0%
work how they don't don't run into the
problems<00:14:19.689><c> with</c><00:14:19.899><c> concurrency</c><00:14:20.560><c> but</c><00:14:20.980><c> without</c>

00:14:21.629 --> 00:14:21.639 align:start position:0%
problems with concurrency but without
 

00:14:21.639 --> 00:14:24.900 align:start position:0%
problems with concurrency but without
using<00:14:22.000><c> locks</c><00:14:22.209><c> let's</c><00:14:23.100><c> consider</c><00:14:24.100><c> what</c><00:14:24.370><c> prevents</c>

00:14:24.900 --> 00:14:24.910 align:start position:0%
using locks let's consider what prevents
 

00:14:24.910 --> 00:14:28.590 align:start position:0%
using locks let's consider what prevents
us<00:14:25.029><c> from</c><00:14:25.500><c> pushing</c><00:14:26.610><c> two</c><00:14:27.610><c> items</c><00:14:27.970><c> concurrently</c>

00:14:28.590 --> 00:14:28.600 align:start position:0%
us from pushing two items concurrently
 

00:14:28.600 --> 00:14:31.410 align:start position:0%
us from pushing two items concurrently
into<00:14:28.870><c> the</c><00:14:29.019><c> stacks</c><00:14:29.290><c> the</c><00:14:30.189><c> problem</c><00:14:30.579><c> is</c><00:14:30.730><c> that</c><00:14:30.879><c> when</c>

00:14:31.410 --> 00:14:31.420 align:start position:0%
into the stacks the problem is that when
 

00:14:31.420 --> 00:14:36.720 align:start position:0%
into the stacks the problem is that when
we've<00:14:31.629><c> prepared</c><00:14:32.519><c> to</c><00:14:33.519><c> push</c><00:14:33.790><c> an</c><00:14:34.259><c> item</c><00:14:35.259><c> we</c><00:14:36.160><c> expect</c>

00:14:36.720 --> 00:14:36.730 align:start position:0%
we've prepared to push an item we expect
 

00:14:36.730 --> 00:14:40.949 align:start position:0%
we've prepared to push an item we expect
that<00:14:37.000><c> the</c><00:14:37.240><c> top</c><00:14:37.509><c> is</c><00:14:37.930><c> still</c><00:14:38.589><c> pointing</c><00:14:39.809><c> to</c><00:14:40.809><c> the</c>

00:14:40.949 --> 00:14:40.959 align:start position:0%
that the top is still pointing to the
 

00:14:40.959 --> 00:14:45.749 align:start position:0%
that the top is still pointing to the
old<00:14:41.170><c> item</c><00:14:41.559><c> and</c><00:14:41.740><c> we</c><00:14:42.519><c> want</c><00:14:42.879><c> to</c><00:14:43.059><c> update</c><00:14:43.829><c> it</c><00:14:44.829><c> to</c><00:14:45.610><c> the</c>

00:14:45.749 --> 00:14:45.759 align:start position:0%
old item and we want to update it to the
 

00:14:45.759 --> 00:14:47.400 align:start position:0%
old item and we want to update it to the
new<00:14:45.939><c> item</c><00:14:46.240><c> wearing</c><00:14:46.540><c> short</c><00:14:46.779><c> leave</c><00:14:46.959><c> this</c><00:14:47.139><c> deck</c>

00:14:47.400 --> 00:14:47.410 align:start position:0%
new item wearing short leave this deck
 

00:14:47.410 --> 00:14:50.030 align:start position:0%
new item wearing short leave this deck
if<00:14:48.009><c> only</c><00:14:48.579><c> we</c><00:14:48.699><c> can</c><00:14:48.879><c> do</c><00:14:49.149><c> this</c><00:14:49.329><c> operation</c>

00:14:50.030 --> 00:14:50.040 align:start position:0%
if only we can do this operation
 

00:14:50.040 --> 00:14:52.949 align:start position:0%
if only we can do this operation
atomically<00:14:51.040><c> making</c><00:14:51.939><c> sure</c><00:14:52.089><c> nobody</c><00:14:52.449><c> else</c><00:14:52.509><c> can</c>

00:14:52.949 --> 00:14:52.959 align:start position:0%
atomically making sure nobody else can
 

00:14:52.959 --> 00:14:57.030 align:start position:0%
atomically making sure nobody else can
interfere<00:14:53.500><c> and</c><00:14:53.800><c> add</c><00:14:54.490><c> their</c><00:14:55.449><c> element</c><00:14:56.139><c> faster</c>

00:14:57.030 --> 00:14:57.040 align:start position:0%
interfere and add their element faster
 

00:14:57.040 --> 00:14:59.280 align:start position:0%
interfere and add their element faster
than<00:14:57.189><c> we</c><00:14:57.430><c> did</c><00:14:57.610><c> and</c><00:14:58.089><c> that's</c><00:14:58.449><c> exactly</c><00:14:59.139><c> this</c>

00:14:59.280 --> 00:14:59.290 align:start position:0%
than we did and that's exactly this
 

00:14:59.290 --> 00:15:02.970 align:start position:0%
than we did and that's exactly this
atomic<00:14:59.920><c> update</c><00:15:00.399><c> from</c><00:15:00.850><c> expected</c><00:15:01.860><c> reference</c><00:15:02.860><c> to</c>

00:15:02.970 --> 00:15:02.980 align:start position:0%
atomic update from expected reference to
 

00:15:02.980 --> 00:15:05.280 align:start position:0%
atomic update from expected reference to
the<00:15:03.069><c> new</c><00:15:03.220><c> one</c><00:15:03.370><c> is</c><00:15:03.720><c> is</c><00:15:04.720><c> called</c>

00:15:05.280 --> 00:15:05.290 align:start position:0%
the new one is is called
 

00:15:05.290 --> 00:15:06.929 align:start position:0%
the new one is is called
is<00:15:05.439><c> there</c><00:15:05.800><c> is</c><00:15:05.949><c> there's</c><00:15:06.339><c> an</c><00:15:06.490><c> A</c><00:15:06.579><c> for</c><00:15:06.639><c> search</c>

00:15:06.929 --> 00:15:06.939 align:start position:0%
is there is there's an A for search
 

00:15:06.939 --> 00:15:09.420 align:start position:0%
is there is there's an A for search
operation<00:15:07.389><c> the</c><00:15:07.569><c> name</c><00:15:07.779><c> is</c><00:15:08.040><c> compared</c><00:15:09.040><c> and</c><00:15:09.069><c> set</c>

00:15:09.420 --> 00:15:09.430 align:start position:0%
operation the name is compared and set
 

00:15:09.430 --> 00:15:11.819 align:start position:0%
operation the name is compared and set
and<00:15:09.670><c> there</c><00:15:09.850><c> is</c><00:15:09.939><c> a</c><00:15:09.970><c> class</c><00:15:10.329><c> in</c><00:15:10.660><c> Java</c><00:15:11.529><c> called</c>

00:15:11.819 --> 00:15:11.829 align:start position:0%
and there is a class in Java called
 

00:15:11.829 --> 00:15:14.400 align:start position:0%
and there is a class in Java called
atomic<00:15:12.129><c> reference</c><00:15:12.639><c> that</c><00:15:13.029><c> provides</c><00:15:13.540><c> us</c><00:15:13.930><c> such</c>

00:15:14.400 --> 00:15:14.410 align:start position:0%
atomic reference that provides us such
 

00:15:14.410 --> 00:15:16.470 align:start position:0%
atomic reference that provides us such
functionality<00:15:15.339><c> it's</c><00:15:15.910><c> a</c><00:15:16.059><c> it's</c><00:15:16.240><c> a</c><00:15:16.300><c> class</c>

00:15:16.470 --> 00:15:16.480 align:start position:0%
functionality it's a it's a class
 

00:15:16.480 --> 00:15:18.210 align:start position:0%
functionality it's a it's a class
actually<00:15:16.660><c> you</c><00:15:17.379><c> know</c><00:15:17.500><c> it's</c><00:15:17.649><c> it's</c><00:15:17.889><c> a</c><00:15:17.980><c> part</c><00:15:18.129><c> of</c>

00:15:18.210 --> 00:15:18.220 align:start position:0%
actually you know it's it's a part of
 

00:15:18.220 --> 00:15:20.069 align:start position:0%
actually you know it's it's a part of
GDK<00:15:18.850><c> so</c><00:15:19.029><c> we</c><00:15:19.149><c> can</c><00:15:19.300><c> use</c><00:15:19.449><c> it</c><00:15:19.569><c> from</c><00:15:19.720><c> any</c><00:15:19.930><c> given</c>

00:15:20.069 --> 00:15:20.079 align:start position:0%
GDK so we can use it from any given
 

00:15:20.079 --> 00:15:23.610 align:start position:0%
GDK so we can use it from any given
language<00:15:20.410><c> on</c><00:15:21.069><c> this</c><00:15:21.279><c> example</c><00:15:21.670><c> we'll</c><00:15:22.449><c> be</c><00:15:22.480><c> in</c><00:15:23.470><c> the</c>

00:15:23.610 --> 00:15:23.620 align:start position:0%
language on this example we'll be in the
 

00:15:23.620 --> 00:15:26.100 align:start position:0%
language on this example we'll be in the
following<00:15:23.860><c> slides</c><00:15:24.100><c> using</c><00:15:24.399><c> it</c><00:15:24.490><c> from</c><00:15:24.929><c> code</c><00:15:25.929><c> line</c>

00:15:26.100 --> 00:15:26.110 align:start position:0%
following slides using it from code line
 

00:15:26.110 --> 00:15:28.900 align:start position:0%
following slides using it from code line
because<00:15:26.410><c> it</c><00:15:26.559><c> just</c><00:15:27.069><c> a</c><00:15:27.130><c> class</c><00:15:27.339><c> we</c><00:15:27.490><c> can</c><00:15:27.670><c> use</c><00:15:27.880><c> and</c>

00:15:28.900 --> 00:15:28.910 align:start position:0%
because it just a class we can use and
 

00:15:28.910 --> 00:15:31.840 align:start position:0%
because it just a class we can use and
inside<00:15:29.449><c> it</c><00:15:29.569><c> contains</c><00:15:29.720><c> two</c><00:15:30.079><c> volatile</c><00:15:30.850><c> variable</c>

00:15:31.840 --> 00:15:31.850 align:start position:0%
inside it contains two volatile variable
 

00:15:31.850 --> 00:15:34.480 align:start position:0%
inside it contains two volatile variable
you<00:15:32.149><c> can</c><00:15:32.329><c> get</c><00:15:32.600><c> it</c><00:15:32.750><c> or</c><00:15:33.470><c> you</c><00:15:33.769><c> can</c><00:15:33.980><c> compare</c><00:15:34.370><c> and</c>

00:15:34.480 --> 00:15:34.490 align:start position:0%
you can get it or you can compare and
 

00:15:34.490 --> 00:15:36.550 align:start position:0%
you can get it or you can compare and
set<00:15:34.730><c> it</c><00:15:34.880><c> you</c><00:15:35.029><c> can</c><00:15:35.149><c> prime</c><00:15:35.329><c> said</c><00:15:35.540><c> is</c><00:15:35.750><c> that's</c>

00:15:36.550 --> 00:15:36.560 align:start position:0%
set it you can prime said is that's
 

00:15:36.560 --> 00:15:40.170 align:start position:0%
set it you can prime said is that's
atomic<00:15:37.370><c> update</c><00:15:37.730><c> I'm</c><00:15:38.240><c> updating</c><00:15:39.050><c> variable</c>

00:15:40.170 --> 00:15:40.180 align:start position:0%
atomic update I'm updating variable
 

00:15:40.180 --> 00:15:44.519 align:start position:0%
atomic update I'm updating variable
under<00:15:41.180><c> condition</c><00:15:41.690><c> that</c><00:15:41.899><c> nobody</c><00:15:42.529><c> else</c><00:15:42.709><c> has</c><00:15:43.509><c> has</c>

00:15:44.519 --> 00:15:44.529 align:start position:0%
under condition that nobody else has has
 

00:15:44.529 --> 00:15:46.900 align:start position:0%
under condition that nobody else has has
changes<00:15:45.529><c> is</c><00:15:45.680><c> still</c><00:15:45.920><c> equal</c><00:15:46.160><c> to</c><00:15:46.550><c> the</c><00:15:46.670><c> expected</c>

00:15:46.900 --> 00:15:46.910 align:start position:0%
changes is still equal to the expected
 

00:15:46.910 --> 00:15:50.110 align:start position:0%
changes is still equal to the expected
value<00:15:47.680><c> it's</c><00:15:48.680><c> available</c><00:15:48.889><c> since</c><00:15:49.610><c> ages</c><00:15:49.970><c> since</c>

00:15:50.110 --> 00:15:50.120 align:start position:0%
value it's available since ages since
 

00:15:50.120 --> 00:15:53.680 align:start position:0%
value it's available since ages since
1.5<00:15:50.779><c> and</c><00:15:51.350><c> I</c><00:15:52.009><c> mean</c><00:15:52.459><c> it's</c><00:15:53.060><c> real</c><00:15:53.240><c> prison</c><00:15:53.509><c> a</c><00:15:53.540><c> long</c>

00:15:53.680 --> 00:15:53.690 align:start position:0%
1.5 and I mean it's real prison a long
 

00:15:53.690 --> 00:15:57.749 align:start position:0%
1.5 and I mean it's real prison a long
time<00:15:53.930><c> ago</c><00:15:54.139><c> 1.5</c><00:15:54.949><c> and</c><00:15:55.779><c> job</c><00:15:56.779><c> was</c><00:15:56.990><c> the</c><00:15:57.110><c> first</c>

00:15:57.749 --> 00:15:57.759 align:start position:0%
time ago 1.5 and job was the first
 

00:15:57.759 --> 00:16:00.639 align:start position:0%
time ago 1.5 and job was the first
language<00:15:58.759><c> major</c><00:15:59.630><c> language</c><00:16:00.110><c> who</c><00:16:00.290><c> kind</c><00:16:00.529><c> of</c>

00:16:00.639 --> 00:16:00.649 align:start position:0%
language major language who kind of
 

00:16:00.649 --> 00:16:02.980 align:start position:0%
language major language who kind of
standardized<00:16:01.370><c> such</c><00:16:02.089><c> operations</c><00:16:02.389><c> compare</c>

00:16:02.980 --> 00:16:02.990 align:start position:0%
standardized such operations compare
 

00:16:02.990 --> 00:16:06.550 align:start position:0%
standardized such operations compare
said<00:16:03.319><c> like</c><00:16:03.500><c> in</c><00:16:03.620><c> c</c><00:16:03.949><c> plus</c><00:16:04.940><c> plus</c><00:16:04.970><c> he</c><00:16:05.300><c> used</c><00:16:05.509><c> to</c><00:16:06.440><c> be</c>

00:16:06.550 --> 00:16:06.560 align:start position:0%
said like in c plus plus he used to be
 

00:16:06.560 --> 00:16:08.949 align:start position:0%
said like in c plus plus he used to be
forced<00:16:06.980><c> to</c><00:16:07.069><c> use</c><00:16:07.940><c> like</c><00:16:08.509><c> vendor</c><00:16:08.779><c> specific</c>

00:16:08.949 --> 00:16:08.959 align:start position:0%
forced to use like vendor specific
 

00:16:08.959 --> 00:16:11.079 align:start position:0%
forced to use like vendor specific
extensions<00:16:09.800><c> some</c><00:16:10.009><c> libraries</c><00:16:10.490><c> it</c><00:16:10.579><c> wasn't</c><00:16:10.819><c> part</c>

00:16:11.079 --> 00:16:11.089 align:start position:0%
extensions some libraries it wasn't part
 

00:16:11.089 --> 00:16:12.699 align:start position:0%
extensions some libraries it wasn't part
of<00:16:11.180><c> the</c><00:16:11.360><c> language</c><00:16:11.509><c> in</c><00:16:11.899><c> became</c><00:16:12.290><c> partners</c>

00:16:12.699 --> 00:16:12.709 align:start position:0%
of the language in became partners
 

00:16:12.709 --> 00:16:16.420 align:start position:0%
of the language in became partners
language<00:16:13.009><c> in</c><00:16:13.160><c> c++</c><00:16:13.990><c> only</c><00:16:14.990><c> recently</c><00:16:15.500><c> and</c><00:16:15.740><c> that's</c>

00:16:16.420 --> 00:16:16.430 align:start position:0%
language in c++ only recently and that's
 

00:16:16.430 --> 00:16:18.670 align:start position:0%
language in c++ only recently and that's
why<00:16:16.699><c> when</c><00:16:17.240><c> you</c><00:16:17.269><c> start</c><00:16:18.019><c> reading</c><00:16:18.170><c> literature</c>

00:16:18.670 --> 00:16:18.680 align:start position:0%
why when you start reading literature
 

00:16:18.680 --> 00:16:22.210 align:start position:0%
why when you start reading literature
and<00:16:18.889><c> concurrent</c><00:16:19.810><c> computing</c><00:16:20.810><c> on</c><00:16:21.220><c> logarithms</c>

00:16:22.210 --> 00:16:22.220 align:start position:0%
and concurrent computing on logarithms
 

00:16:22.220 --> 00:16:24.610 align:start position:0%
and concurrent computing on logarithms
you<00:16:22.399><c> often</c><00:16:22.759><c> find</c><00:16:22.910><c> examples</c><00:16:23.209><c> in</c><00:16:23.509><c> java</c><00:16:23.750><c> because</c>

00:16:24.610 --> 00:16:24.620 align:start position:0%
you often find examples in java because
 

00:16:24.620 --> 00:16:27.370 align:start position:0%
you often find examples in java because
because<00:16:25.279><c> java</c><00:16:25.639><c> has</c><00:16:25.850><c> me</c><00:16:26.360><c> has</c><00:16:26.720><c> standardized</c>

00:16:27.370 --> 00:16:27.380 align:start position:0%
because java has me has standardized
 

00:16:27.380 --> 00:16:31.269 align:start position:0%
because java has me has standardized
this<00:16:27.800><c> kind</c><00:16:28.519><c> of</c><00:16:28.639><c> code</c><00:16:28.940><c> way</c><00:16:29.930><c> longer</c><00:16:30.410><c> than</c><00:16:30.589><c> than</c>

00:16:31.269 --> 00:16:31.279 align:start position:0%
this kind of code way longer than than
 

00:16:31.279 --> 00:16:35.470 align:start position:0%
this kind of code way longer than than
any<00:16:31.519><c> other</c><00:16:31.790><c> language</c><00:16:33.370><c> so</c><00:16:34.370><c> i</c><00:16:34.610><c> mean</c><00:16:34.880><c> that's</c><00:16:35.300><c> easy</c>

00:16:35.470 --> 00:16:35.480 align:start position:0%
any other language so i mean that's easy
 

00:16:35.480 --> 00:16:37.449 align:start position:0%
any other language so i mean that's easy
so<00:16:35.720><c> we</c><00:16:35.870><c> have</c><00:16:36.350><c> yeah</c><00:16:36.529><c> we'll</c><00:16:36.769><c> have</c><00:16:36.949><c> well</c><00:16:37.130><c> you</c><00:16:37.160><c> may</c>

00:16:37.449 --> 00:16:37.459 align:start position:0%
so we have yeah we'll have well you may
 

00:16:37.459 --> 00:16:41.860 align:start position:0%
so we have yeah we'll have well you may
compare<00:16:37.850><c> and</c><00:16:38.000><c> said</c><00:16:38.149><c> that's</c><00:16:38.839><c> always</c><00:16:40.810><c> how</c><00:16:41.810><c> we</c>

00:16:41.860 --> 00:16:41.870 align:start position:0%
compare and said that's always how we
 

00:16:41.870 --> 00:16:46.449 align:start position:0%
compare and said that's always how we
use<00:16:42.139><c> it</c><00:16:43.029><c> we</c><00:16:44.029><c> use</c><00:16:44.060><c> it</c><00:16:44.209><c> by</c><00:16:45.170><c> replacing</c><00:16:45.620><c> our</c><00:16:46.189><c> top</c>

00:16:46.449 --> 00:16:46.459 align:start position:0%
use it we use it by replacing our top
 

00:16:46.459 --> 00:16:49.870 align:start position:0%
use it we use it by replacing our top
variable<00:16:47.829><c> instead</c><00:16:48.829><c> of</c><00:16:48.949><c> being</c><00:16:49.250><c> a</c><00:16:49.370><c> variable</c>

00:16:49.870 --> 00:16:49.880 align:start position:0%
variable instead of being a variable
 

00:16:49.880 --> 00:16:51.249 align:start position:0%
variable instead of being a variable
that<00:16:49.910><c> we're</c><00:16:50.180><c> going</c><00:16:50.389><c> to</c><00:16:50.569><c> change</c><00:16:50.810><c> is</c><00:16:50.990><c> going</c><00:16:51.170><c> to</c>

00:16:51.249 --> 00:16:51.259 align:start position:0%
that we're going to change is going to
 

00:16:51.259 --> 00:16:52.960 align:start position:0%
that we're going to change is going to
be<00:16:51.350><c> value</c><00:16:51.980><c> we're</c><00:16:52.279><c> not</c><00:16:52.430><c> going</c><00:16:52.610><c> to</c><00:16:52.699><c> reach</c><00:16:52.819><c> the</c>

00:16:52.960 --> 00:16:52.970 align:start position:0%
be value we're not going to reach the
 

00:16:52.970 --> 00:16:55.420 align:start position:0%
be value we're not going to reach the
top<00:16:53.120><c> itself</c><00:16:53.449><c> instead</c><00:16:54.319><c> it's</c><00:16:54.470><c> going</c><00:16:54.680><c> to</c><00:16:55.130><c> contain</c>

00:16:55.420 --> 00:16:55.430 align:start position:0%
top itself instead it's going to contain
 

00:16:55.430 --> 00:16:58.179 align:start position:0%
top itself instead it's going to contain
atomic<00:16:55.850><c> reference</c><00:16:56.269><c> and</c><00:16:56.449><c> we'll</c><00:16:57.079><c> be</c><00:16:57.230><c> using</c><00:16:57.860><c> this</c>

00:16:58.179 --> 00:16:58.189 align:start position:0%
atomic reference and we'll be using this
 

00:16:58.189 --> 00:16:59.920 align:start position:0%
atomic reference and we'll be using this
atomic<00:16:58.490><c> reference</c><00:16:59.000><c> it's</c><00:16:59.209><c> one</c><00:16:59.449><c> change</c><00:16:59.660><c> itself</c>

00:16:59.920 --> 00:16:59.930 align:start position:0%
atomic reference it's one change itself
 

00:16:59.930 --> 00:17:02.170 align:start position:0%
atomic reference it's one change itself
but<00:17:00.079><c> we'll</c><00:17:00.259><c> be</c><00:17:00.410><c> updating</c><00:17:01.160><c> it</c><00:17:01.189><c> and</c><00:17:01.399><c> the</c><00:17:02.029><c> way</c><00:17:02.120><c> you</c>

00:17:02.170 --> 00:17:02.180 align:start position:0%
but we'll be updating it and the way you
 

00:17:02.180 --> 00:17:04.480 align:start position:0%
but we'll be updating it and the way you
write<00:17:02.480><c> lock</c><00:17:02.720><c> for</c><00:17:02.930><c> algorithms</c><00:17:03.170><c> is</c><00:17:03.649><c> by</c>

00:17:04.480 --> 00:17:04.490 align:start position:0%
write lock for algorithms is by
 

00:17:04.490 --> 00:17:06.669 align:start position:0%
write lock for algorithms is by
following<00:17:04.669><c> this</c><00:17:04.880><c> pattern</c><00:17:05.150><c> so</c><00:17:06.020><c> we</c><00:17:06.260><c> read</c><00:17:06.500><c> the</c>

00:17:06.669 --> 00:17:06.679 align:start position:0%
following this pattern so we read the
 

00:17:06.679 --> 00:17:11.100 align:start position:0%
following this pattern so we read the
current<00:17:07.010><c> value</c><00:17:07.569><c> and</c><00:17:08.569><c> we're</c><00:17:08.900><c> using</c><00:17:09.140><c> yet</c><00:17:09.470><c> we</c>

00:17:11.100 --> 00:17:11.110 align:start position:0%
current value and we're using yet we
 

00:17:11.110 --> 00:17:14.110 align:start position:0%
current value and we're using yet we
decide<00:17:12.110><c> how</c><00:17:12.260><c> we</c><00:17:12.319><c> want</c><00:17:12.470><c> updated</c><00:17:13.159><c> in</c><00:17:13.280><c> this</c><00:17:13.579><c> case</c>

00:17:14.110 --> 00:17:14.120 align:start position:0%
decide how we want updated in this case
 

00:17:14.120 --> 00:17:15.960 align:start position:0%
decide how we want updated in this case
we<00:17:14.329><c> want</c><00:17:14.510><c> to</c><00:17:14.539><c> create</c><00:17:14.630><c> a</c><00:17:14.870><c> new</c><00:17:15.079><c> node</c><00:17:15.319><c> with</c>

00:17:15.960 --> 00:17:15.970 align:start position:0%
we want to create a new node with
 

00:17:15.970 --> 00:17:18.549 align:start position:0%
we want to create a new node with
pointing<00:17:16.970><c> to</c><00:17:17.209><c> the</c><00:17:17.390><c> well</c><00:17:17.900><c> you</c><00:17:18.020><c> were</c><00:17:18.169><c> just</c><00:17:18.199><c> read</c>

00:17:18.549 --> 00:17:18.559 align:start position:0%
pointing to the well you were just read
 

00:17:18.559 --> 00:17:21.399 align:start position:0%
pointing to the well you were just read
with<00:17:18.799><c> our</c><00:17:18.949><c> value</c><00:17:19.400><c> and</c><00:17:19.850><c> we'll</c><00:17:20.360><c> try</c><00:17:20.750><c> to</c><00:17:20.809><c> perform</c>

00:17:21.399 --> 00:17:21.409 align:start position:0%
with our value and we'll try to perform
 

00:17:21.409 --> 00:17:23.230 align:start position:0%
with our value and we'll try to perform
this<00:17:21.620><c> atomic</c><00:17:21.919><c> update</c><00:17:22.309><c> through</c><00:17:22.549><c> comparing</c><00:17:23.030><c> set</c>

00:17:23.230 --> 00:17:23.240 align:start position:0%
this atomic update through comparing set
 

00:17:23.240 --> 00:17:26.199 align:start position:0%
this atomic update through comparing set
and<00:17:23.569><c> if</c><00:17:23.809><c> it's</c><00:17:23.959><c> successful</c><00:17:24.079><c> we</c><00:17:24.740><c> return</c><00:17:25.309><c> if</c><00:17:25.760><c> it's</c>

00:17:26.199 --> 00:17:26.209 align:start position:0%
and if it's successful we return if it's
 

00:17:26.209 --> 00:17:28.510 align:start position:0%
and if it's successful we return if it's
not<00:17:26.390><c> successful</c><00:17:26.600><c> just</c><00:17:27.230><c> loop</c><00:17:27.409><c> which</c><00:17:28.280><c> is</c><00:17:28.400><c> slow</c>

00:17:28.510 --> 00:17:28.520 align:start position:0%
not successful just loop which is slow
 

00:17:28.520 --> 00:17:30.610 align:start position:0%
not successful just loop which is slow
passing<00:17:28.820><c> or</c><00:17:28.940><c> successful</c><00:17:29.360><c> we</c><00:17:30.020><c> just</c><00:17:30.230><c> retry</c>

00:17:30.610 --> 00:17:30.620 align:start position:0%
passing or successful we just retry
 

00:17:30.620 --> 00:17:33.610 align:start position:0%
passing or successful we just retry
until<00:17:31.280><c> we</c><00:17:31.370><c> successfully</c><00:17:31.970><c> push</c><00:17:32.510><c> it</c><00:17:32.659><c> and</c><00:17:32.809><c> this</c>

00:17:33.610 --> 00:17:33.620 align:start position:0%
until we successfully push it and this
 

00:17:33.620 --> 00:17:36.100 align:start position:0%
until we successfully push it and this
pattern<00:17:34.039><c> is</c><00:17:34.460><c> you'll</c><00:17:34.940><c> find</c><00:17:35.240><c> in</c><00:17:35.330><c> almost</c><00:17:35.630><c> every</c>

00:17:36.100 --> 00:17:36.110 align:start position:0%
pattern is you'll find in almost every
 

00:17:36.110 --> 00:17:38.049 align:start position:0%
pattern is you'll find in almost every
lock<00:17:36.320><c> tree</c><00:17:36.470><c> algorithm</c><00:17:37.070><c> it's</c><00:17:37.490><c> really</c><00:17:37.700><c> powerful</c>

00:17:38.049 --> 00:17:38.059 align:start position:0%
lock tree algorithm it's really powerful
 

00:17:38.059 --> 00:17:40.810 align:start position:0%
lock tree algorithm it's really powerful
pattern<00:17:38.390><c> because</c><00:17:38.659><c> it</c><00:17:38.690><c> lets</c><00:17:38.990><c> us</c><00:17:39.370><c> solve</c><00:17:40.370><c> the</c>

00:17:40.810 --> 00:17:40.820 align:start position:0%
pattern because it lets us solve the
 

00:17:40.820 --> 00:17:41.290 align:start position:0%
pattern because it lets us solve the
problem

00:17:41.290 --> 00:17:41.300 align:start position:0%
problem
 

00:17:41.300 --> 00:17:42.850 align:start position:0%
problem
concurrently<00:17:41.929><c> modified</c><00:17:42.290><c> data</c><00:17:42.380><c> structure</c>

00:17:42.850 --> 00:17:42.860 align:start position:0%
concurrently modified data structure
 

00:17:42.860 --> 00:17:46.510 align:start position:0%
concurrently modified data structure
without<00:17:43.280><c> using</c><00:17:43.790><c> any</c><00:17:43.910><c> law</c><00:17:44.120><c> whatsoever</c><00:17:45.020><c> I</c><00:17:45.530><c> said</c>

00:17:46.510 --> 00:17:46.520 align:start position:0%
without using any law whatsoever I said
 

00:17:46.520 --> 00:17:49.510 align:start position:0%
without using any law whatsoever I said
that's<00:17:46.730><c> the</c><00:17:46.850><c> the</c><00:17:47.420><c> real</c><00:17:47.630><c> power</c><00:17:48.260><c> of</c><00:17:48.500><c> walk</c><00:17:49.250><c> free</c>

00:17:49.510 --> 00:17:49.520 align:start position:0%
that's the the real power of walk free
 

00:17:49.520 --> 00:17:53.580 align:start position:0%
that's the the real power of walk free
you<00:17:50.000><c> know</c><00:17:50.120><c> and</c><00:17:50.390><c> but</c><00:17:51.230><c> the</c><00:17:51.350><c> pattern</c><00:17:51.650><c> is</c><00:17:51.740><c> simple</c>

00:17:53.580 --> 00:17:53.590 align:start position:0%
you know and but the pattern is simple
 

00:17:53.590 --> 00:17:58.660 align:start position:0%
you know and but the pattern is simple
we<00:17:54.590><c> can</c><00:17:56.140><c> similar</c><00:17:57.140><c> right</c><00:17:57.350><c> pop</c><00:17:57.620><c> I</c><00:17:57.920><c> mean</c><00:17:58.460><c> it's</c>

00:17:58.660 --> 00:17:58.670 align:start position:0%
we can similar right pop I mean it's
 

00:17:58.670 --> 00:18:01.419 align:start position:0%
we can similar right pop I mean it's
it's<00:17:59.120><c> I</c><00:17:59.360><c> won't</c><00:17:59.630><c> go</c><00:17:59.780><c> step</c><00:18:00.200><c> by</c><00:18:00.230><c> step</c><00:18:00.350><c> here</c><00:18:00.830><c> but</c>

00:18:01.419 --> 00:18:01.429 align:start position:0%
it's I won't go step by step here but
 

00:18:01.429 --> 00:18:02.980 align:start position:0%
it's I won't go step by step here but
it's<00:18:01.610><c> the</c><00:18:01.790><c> same</c><00:18:01.910><c> idea</c><00:18:02.030><c> we</c><00:18:02.450><c> with</c><00:18:02.630><c> the</c><00:18:02.720><c> current</c>

00:18:02.980 --> 00:18:02.990 align:start position:0%
it's the same idea we with the current
 

00:18:02.990 --> 00:18:04.720 align:start position:0%
it's the same idea we with the current
value<00:18:03.320><c> we</c><00:18:03.770><c> try</c><00:18:04.010><c> to</c><00:18:04.070><c> updated</c><00:18:04.460><c> necks</c><00:18:04.610><c> of</c>

00:18:04.720 --> 00:18:04.730 align:start position:0%
value we try to updated necks of
 

00:18:04.730 --> 00:18:07.560 align:start position:0%
value we try to updated necks of
successful<00:18:05.300><c> return</c><00:18:05.480><c> well</c><00:18:05.630><c> if</c><00:18:05.750><c> not</c><00:18:05.870><c> you</c><00:18:05.929><c> try</c>

00:18:07.560 --> 00:18:07.570 align:start position:0%
successful return well if not you try
 

00:18:07.570 --> 00:18:11.350 align:start position:0%
successful return well if not you try
but<00:18:08.570><c> notice</c><00:18:08.900><c> that</c><00:18:09.130><c> here</c><00:18:10.130><c> to</c><00:18:10.760><c> write</c><00:18:10.940><c> this</c><00:18:11.120><c> we're</c>

00:18:11.350 --> 00:18:11.360 align:start position:0%
but notice that here to write this we're
 

00:18:11.360 --> 00:18:16.390 align:start position:0%
but notice that here to write this we're
using<00:18:11.570><c> atomic</c><00:18:11.870><c> reference</c><00:18:12.559><c> class</c><00:18:13.340><c> and</c><00:18:13.760><c> I</c><00:18:15.400><c> mean</c>

00:18:16.390 --> 00:18:16.400 align:start position:0%
using atomic reference class and I mean
 

00:18:16.400 --> 00:18:18.430 align:start position:0%
using atomic reference class and I mean
let's<00:18:17.000><c> remember</c><00:18:17.120><c> why</c><00:18:17.510><c> we</c><00:18:17.750><c> started</c><00:18:17.990><c> doing</c>

00:18:18.430 --> 00:18:18.440 align:start position:0%
let's remember why we started doing
 

00:18:18.440 --> 00:18:20.560 align:start position:0%
let's remember why we started doing
lock-free<00:18:18.710><c> so</c><00:18:19.190><c> our</c><00:18:19.429><c> end</c><00:18:19.700><c> goal</c><00:18:19.910><c> in</c><00:18:20.240><c> this</c>

00:18:20.560 --> 00:18:20.570 align:start position:0%
lock-free so our end goal in this
 

00:18:20.570 --> 00:18:22.750 align:start position:0%
lock-free so our end goal in this
presentation<00:18:21.350><c> is</c><00:18:21.710><c> to</c><00:18:22.130><c> make</c><00:18:22.250><c> a</c><00:18:22.340><c> scalable</c>

00:18:22.750 --> 00:18:22.760 align:start position:0%
presentation is to make a scalable
 

00:18:22.760 --> 00:18:25.120 align:start position:0%
presentation is to make a scalable
application<00:18:23.270><c> and</c><00:18:23.480><c> then</c><00:18:23.929><c> scale</c><00:18:24.530><c> with</c><00:18:24.710><c> somewhat</c>

00:18:25.120 --> 00:18:25.130 align:start position:0%
application and then scale with somewhat
 

00:18:25.130 --> 00:18:28.570 align:start position:0%
application and then scale with somewhat
implies<00:18:25.870><c> it's</c><00:18:26.870><c> going</c><00:18:27.170><c> to</c><00:18:27.320><c> be</c><00:18:27.410><c> fast</c><00:18:27.710><c> but</c><00:18:28.429><c> by</c>

00:18:28.570 --> 00:18:28.580 align:start position:0%
implies it's going to be fast but by
 

00:18:28.580 --> 00:18:29.890 align:start position:0%
implies it's going to be fast but by
using<00:18:28.730><c> atomic</c><00:18:28.970><c> reference</c><00:18:29.480><c> we</c><00:18:29.540><c> can</c><00:18:29.690><c> create</c>

00:18:29.890 --> 00:18:29.900 align:start position:0%
using atomic reference we can create
 

00:18:29.900 --> 00:18:33.070 align:start position:0%
using atomic reference we can create
another<00:18:30.140><c> layer</c><00:18:30.500><c> in</c><00:18:31.210><c> direction</c><00:18:32.210><c> instead</c><00:18:32.960><c> of</c>

00:18:33.070 --> 00:18:33.080 align:start position:0%
another layer in direction instead of
 

00:18:33.080 --> 00:18:34.990 align:start position:0%
another layer in direction instead of
just<00:18:33.320><c> working</c><00:18:33.559><c> with</c><00:18:33.830><c> the</c><00:18:33.980><c> top</c><00:18:34.610><c> variable</c>

00:18:34.990 --> 00:18:35.000 align:start position:0%
just working with the top variable
 

00:18:35.000 --> 00:18:36.700 align:start position:0%
just working with the top variable
directly<00:18:35.300><c> we've</c><00:18:35.870><c> created</c><00:18:36.140><c> yet</c><00:18:36.470><c> another</c>

00:18:36.700 --> 00:18:36.710 align:start position:0%
directly we've created yet another
 

00:18:36.710 --> 00:18:38.380 align:start position:0%
directly we've created yet another
object<00:18:37.040><c> atomic</c><00:18:37.700><c> reference</c><00:18:38.059><c> and</c><00:18:38.240><c> we're</c>

00:18:38.380 --> 00:18:38.390 align:start position:0%
object atomic reference and we're
 

00:18:38.390 --> 00:18:43.750 align:start position:0%
object atomic reference and we're
constantly<00:18:39.100><c> indirectly</c><00:18:40.100><c> going</c><00:18:41.440><c> there</c><00:18:42.760><c> by</c>

00:18:43.750 --> 00:18:43.760 align:start position:0%
constantly indirectly going there by
 

00:18:43.760 --> 00:18:45.340 align:start position:0%
constantly indirectly going there by
reference<00:18:44.150><c> into</c><00:18:44.330><c> another</c><00:18:44.600><c> object</c><00:18:44.780><c> which</c>

00:18:45.340 --> 00:18:45.350 align:start position:0%
reference into another object which
 

00:18:45.350 --> 00:18:47.020 align:start position:0%
reference into another object which
might<00:18:45.559><c> be</c><00:18:45.679><c> a</c><00:18:45.710><c> key</c><00:18:46.010><c> for</c><00:18:46.340><c> this</c><00:18:46.550><c> small</c><00:18:46.910><c> example</c>

00:18:47.020 --> 00:18:47.030 align:start position:0%
might be a key for this small example
 

00:18:47.030 --> 00:18:49.030 align:start position:0%
might be a key for this small example
but<00:18:47.750><c> in</c><00:18:47.870><c> larger</c><00:18:48.140><c> application</c><00:18:48.679><c> we'll</c><00:18:48.860><c> have</c><00:18:49.010><c> a</c>

00:18:49.030 --> 00:18:49.040 align:start position:0%
but in larger application we'll have a
 

00:18:49.040 --> 00:18:51.190 align:start position:0%
but in larger application we'll have a
lots<00:18:49.340><c> of</c><00:18:49.490><c> concurrent</c><00:18:50.360><c> options</c><00:18:50.720><c> it</c><00:18:50.870><c> might</c><00:18:51.050><c> be</c>

00:18:51.190 --> 00:18:51.200 align:start position:0%
lots of concurrent options it might be
 

00:18:51.200 --> 00:18:54.460 align:start position:0%
lots of concurrent options it might be
might<00:18:52.130><c> be</c><00:18:52.160><c> a</c><00:18:52.309><c> performance</c><00:18:52.640><c> problem</c><00:18:53.030><c> so</c><00:18:53.809><c> so</c>

00:18:54.460 --> 00:18:54.470 align:start position:0%
might be a performance problem so so
 

00:18:54.470 --> 00:18:56.980 align:start position:0%
might be a performance problem so so
it's<00:18:54.710><c> a</c><00:18:54.830><c> trap</c><00:18:55.070><c> here</c><00:18:55.400><c> that</c><00:18:55.850><c> then</c><00:18:56.300><c> we</c><00:18:56.630><c> need</c><00:18:56.780><c> we</c>

00:18:56.980 --> 00:18:56.990 align:start position:0%
it's a trap here that then we need we
 

00:18:56.990 --> 00:18:59.290 align:start position:0%
it's a trap here that then we need we
need<00:18:57.110><c> to</c><00:18:57.410><c> solve</c><00:18:57.590><c> it</c><00:18:57.710><c> somehow</c><00:18:58.000><c> there</c><00:18:59.000><c> are</c><00:18:59.120><c> two</c>

00:18:59.290 --> 00:18:59.300 align:start position:0%
need to solve it somehow there are two
 

00:18:59.300 --> 00:19:01.840 align:start position:0%
need to solve it somehow there are two
solutions<00:19:00.130><c> first</c><00:19:01.130><c> of</c><00:19:01.309><c> all</c><00:19:01.400><c> what</c><00:19:01.580><c> we</c><00:19:01.730><c> would</c>

00:19:01.840 --> 00:19:01.850 align:start position:0%
solutions first of all what we would
 

00:19:01.850 --> 00:19:04.600 align:start position:0%
solutions first of all what we would
like<00:19:02.120><c> to</c><00:19:02.450><c> do</c><00:19:02.570><c> is</c><00:19:02.900><c> we</c><00:19:03.770><c> would</c><00:19:03.890><c> like</c><00:19:04.070><c> to</c><00:19:04.100><c> be</c><00:19:04.490><c> able</c>

00:19:04.600 --> 00:19:04.610 align:start position:0%
like to do is we would like to be able
 

00:19:04.610 --> 00:19:07.450 align:start position:0%
like to do is we would like to be able
to<00:19:05.090><c> directly</c><00:19:05.660><c> modify</c><00:19:06.470><c> node</c><00:19:06.830><c> if</c><00:19:07.250><c> there's</c>

00:19:07.450 --> 00:19:07.460 align:start position:0%
to directly modify node if there's
 

00:19:07.460 --> 00:19:09.490 align:start position:0%
to directly modify node if there's
actual<00:19:07.820><c> volatile</c><00:19:08.240><c> might've</c><00:19:08.630><c> modifier</c><00:19:09.350><c> in</c>

00:19:09.490 --> 00:19:09.500 align:start position:0%
actual volatile might've modifier in
 

00:19:09.500 --> 00:19:12.160 align:start position:0%
actual volatile might've modifier in
Java<00:19:09.740><c> or</c><00:19:10.040><c> volatile</c><00:19:10.820><c> tation</c><00:19:11.240><c> cotton</c><00:19:11.600><c> that</c><00:19:11.750><c> you</c>

00:19:12.160 --> 00:19:12.170 align:start position:0%
Java or volatile tation cotton that you
 

00:19:12.170 --> 00:19:14.770 align:start position:0%
Java or volatile tation cotton that you
can<00:19:12.400><c> use</c><00:19:13.400><c> to</c><00:19:13.580><c> specify</c><00:19:13.790><c> that</c><00:19:14.059><c> I'm</c><00:19:14.390><c> going</c><00:19:14.630><c> to</c>

00:19:14.770 --> 00:19:14.780 align:start position:0%
can use to specify that I'm going to
 

00:19:14.780 --> 00:19:17.650 align:start position:0%
can use to specify that I'm going to
modify<00:19:15.429><c> variable</c><00:19:16.429><c> from</c><00:19:17.120><c> multiple</c><00:19:17.600><c> threads</c>

00:19:17.650 --> 00:19:17.660 align:start position:0%
modify variable from multiple threads
 

00:19:17.660 --> 00:19:20.620 align:start position:0%
modify variable from multiple threads
and<00:19:18.110><c> it's</c><00:19:18.260><c> is</c><00:19:19.130><c> going</c><00:19:20.090><c> to</c><00:19:20.179><c> ensure</c><00:19:20.300><c> all</c><00:19:20.600><c> the</c>

00:19:20.620 --> 00:19:20.630 align:start position:0%
and it's is going to ensure all the
 

00:19:20.630 --> 00:19:22.660 align:start position:0%
and it's is going to ensure all the
query<00:19:20.960><c> memory</c><00:19:21.260><c> semantics</c><00:19:21.650><c> for</c><00:19:21.710><c> you</c><00:19:21.950><c> but</c><00:19:22.460><c> how</c><00:19:22.640><c> I</c>

00:19:22.660 --> 00:19:22.670 align:start position:0%
query memory semantics for you but how I
 

00:19:22.670 --> 00:19:25.210 align:start position:0%
query memory semantics for you but how I
actually<00:19:23.300><c> do</c><00:19:23.690><c> compare</c><00:19:24.050><c> and</c><00:19:24.170><c> set</c><00:19:24.350><c> I</c><00:19:24.590><c> can</c><00:19:25.010><c> read</c>

00:19:25.210 --> 00:19:25.220 align:start position:0%
actually do compare and set I can read
 

00:19:25.220 --> 00:19:27.700 align:start position:0%
actually do compare and set I can read
and<00:19:25.309><c> write</c><00:19:25.400><c> it</c><00:19:25.730><c> but</c><00:19:25.850><c> how</c><00:19:26.030><c> do</c><00:19:26.750><c> I</c><00:19:26.780><c> comprehend</c>

00:19:27.700 --> 00:19:27.710 align:start position:0%
and write it but how do I comprehend
 

00:19:27.710 --> 00:19:28.870 align:start position:0%
and write it but how do I comprehend
operations<00:19:28.100><c> that</c><00:19:28.220><c> they</c><00:19:28.340><c> need</c><00:19:28.610><c> for</c><00:19:28.760><c> this</c>

00:19:28.870 --> 00:19:28.880 align:start position:0%
operations that they need for this
 

00:19:28.880 --> 00:19:32.440 align:start position:0%
operations that they need for this
atomic<00:19:29.179><c> update</c><00:19:29.830><c> one</c><00:19:30.830><c> solution</c><00:19:31.280><c> is</c><00:19:31.400><c> a</c><00:19:32.000><c> class</c>

00:19:32.440 --> 00:19:32.450 align:start position:0%
atomic update one solution is a class
 

00:19:32.450 --> 00:19:34.810 align:start position:0%
atomic update one solution is a class
called<00:19:32.480><c> atomic</c><00:19:32.960><c> reference</c><00:19:33.410><c> updater</c><00:19:33.820><c> which</c>

00:19:34.810 --> 00:19:34.820 align:start position:0%
called atomic reference updater which
 

00:19:34.820 --> 00:19:38.740 align:start position:0%
called atomic reference updater which
also<00:19:35.300><c> defines</c><00:19:35.750><c> this</c><00:19:35.900><c> Java</c><00:19:36.140><c> in</c><00:19:36.320><c> five</c><00:19:36.650><c> and</c><00:19:37.750><c> john</c>

00:19:38.740 --> 00:19:38.750 align:start position:0%
also defines this Java in five and john
 

00:19:38.750 --> 00:19:42.280 align:start position:0%
also defines this Java in five and john
1.5<00:19:39.260><c> and</c><00:19:39.470><c> it's</c><00:19:40.240><c> it's</c><00:19:41.240><c> pretty</c><00:19:41.450><c> ugly</c><00:19:41.660><c> class</c><00:19:42.050><c> in</c>

00:19:42.280 --> 00:19:42.290 align:start position:0%
1.5 and it's it's pretty ugly class in
 

00:19:42.290 --> 00:19:44.410 align:start position:0%
1.5 and it's it's pretty ugly class in
the<00:19:42.410><c> sense</c><00:19:42.590><c> that</c><00:19:42.710><c> you</c><00:19:43.190><c> know</c><00:19:43.220><c> it's</c><00:19:43.760><c> even</c><00:19:44.300><c> its</c>

00:19:44.410 --> 00:19:44.420 align:start position:0%
the sense that you know it's even its
 

00:19:44.420 --> 00:19:47.890 align:start position:0%
the sense that you know it's even its
signatures<00:19:45.110><c> look</c><00:19:45.559><c> scary</c><00:19:45.920><c> and</c><00:19:46.570><c> when</c><00:19:47.570><c> you</c><00:19:47.690><c> use</c>

00:19:47.890 --> 00:19:47.900 align:start position:0%
signatures look scary and when you use
 

00:19:47.900 --> 00:19:50.020 align:start position:0%
signatures look scary and when you use
it<00:19:47.929><c> you</c><00:19:48.110><c> have</c><00:19:48.260><c> to</c><00:19:48.620><c> earn</c><00:19:48.980><c> a</c><00:19:49.100><c> living</c><00:19:49.130><c> example</c><00:19:49.610><c> in</c>

00:19:50.020 --> 00:19:50.030 align:start position:0%
it you have to earn a living example in
 

00:19:50.030 --> 00:19:52.240 align:start position:0%
it you have to earn a living example in
Java<00:19:50.720><c> because</c><00:19:50.870><c> there's</c><00:19:51.140><c> no</c><00:19:51.320><c> ugly</c><00:19:51.530><c> code</c><00:19:51.919><c> and</c>

00:19:52.240 --> 00:19:52.250 align:start position:0%
Java because there's no ugly code and
 

00:19:52.250 --> 00:19:53.440 align:start position:0%
Java because there's no ugly code and
that's<00:19:52.580><c> why</c><00:19:52.760><c> they're</c><00:19:53.120><c> in</c>

00:19:53.440 --> 00:19:53.450 align:start position:0%
that's why they're in
 

00:19:53.450 --> 00:19:56.440 align:start position:0%
that's why they're in
Java<00:19:53.750><c> so</c><00:19:54.760><c> you'll</c><00:19:55.760><c> have</c><00:19:56.029><c> to</c><00:19:56.149><c> defy</c>

00:19:56.440 --> 00:19:56.450 align:start position:0%
Java so you'll have to defy
 

00:19:56.450 --> 00:19:57.580 align:start position:0%
Java so you'll have to defy
multi-variable

00:19:57.580 --> 00:19:57.590 align:start position:0%
multi-variable
 

00:19:57.590 --> 00:20:01.060 align:start position:0%
multi-variable
and<00:19:58.240><c> you'll</c><00:19:59.240><c> have</c><00:19:59.389><c> to</c><00:19:59.510><c> define</c><00:20:00.169><c> static-filled</c>

00:20:01.060 --> 00:20:01.070 align:start position:0%
and you'll have to define static-filled
 

00:20:01.070 --> 00:20:03.730 align:start position:0%
and you'll have to define static-filled
and<00:20:01.330><c> that's</c><00:20:02.330><c> using</c><00:20:02.690><c> this</c><00:20:02.870><c> new</c><00:20:03.080><c> update</c><00:20:03.409><c> or</c><00:20:03.590><c> get</c>

00:20:03.730 --> 00:20:03.740 align:start position:0%
and that's using this new update or get
 

00:20:03.740 --> 00:20:06.610 align:start position:0%
and that's using this new update or get
your<00:20:03.860><c> first</c><00:20:04.279><c> job</c><00:20:04.429><c> data</c><00:20:04.789><c> which</c><00:20:05.389><c> is</c><00:20:05.600><c> pretty</c><00:20:06.110><c> big</c>

00:20:06.610 --> 00:20:06.620 align:start position:0%
your first job data which is pretty big
 

00:20:06.620 --> 00:20:08.049 align:start position:0%
your first job data which is pretty big
amount<00:20:06.830><c> of</c><00:20:06.950><c> boilerplate</c><00:20:07.279><c> doesn't</c><00:20:07.700><c> even</c><00:20:07.850><c> fit</c>

00:20:08.049 --> 00:20:08.059 align:start position:0%
amount of boilerplate doesn't even fit
 

00:20:08.059 --> 00:20:10.570 align:start position:0%
amount of boilerplate doesn't even fit
on<00:20:08.179><c> my</c><00:20:08.690><c> slide</c><00:20:08.929><c> horizontally</c><00:20:09.080><c> and</c><00:20:09.740><c> then</c><00:20:10.250><c> in</c><00:20:10.399><c> the</c>

00:20:10.570 --> 00:20:10.580 align:start position:0%
on my slide horizontally and then in the
 

00:20:10.580 --> 00:20:12.789 align:start position:0%
on my slide horizontally and then in the
code<00:20:10.789><c> when</c><00:20:11.000><c> you</c><00:20:11.029><c> scamper</c><00:20:11.750><c> and</c><00:20:11.809><c> said</c><00:20:12.080><c> instead</c>

00:20:12.789 --> 00:20:12.799 align:start position:0%
code when you scamper and said instead
 

00:20:12.799 --> 00:20:15.159 align:start position:0%
code when you scamper and said instead
of<00:20:12.889><c> writing</c><00:20:13.100><c> it</c><00:20:13.389><c> naturally</c><00:20:14.389><c> like</c><00:20:14.570><c> I</c><00:20:14.960><c> want</c><00:20:15.139><c> to</c>

00:20:15.159 --> 00:20:15.169 align:start position:0%
of writing it naturally like I want to
 

00:20:15.169 --> 00:20:17.409 align:start position:0%
of writing it naturally like I want to
update<00:20:15.320><c> top</c><00:20:15.679><c> I'm</c><00:20:15.980><c> writing</c><00:20:16.519><c> very</c><00:20:16.700><c> in</c><00:20:16.940><c> natural</c>

00:20:17.409 --> 00:20:17.419 align:start position:0%
update top I'm writing very in natural
 

00:20:17.419 --> 00:20:19.720 align:start position:0%
update top I'm writing very in natural
style<00:20:17.720><c> I</c><00:20:17.840><c> have</c><00:20:17.870><c> using</c><00:20:18.289><c> this</c><00:20:18.470><c> constant</c><00:20:19.279><c> to</c><00:20:19.549><c> call</c>

00:20:19.720 --> 00:20:19.730 align:start position:0%
style I have using this constant to call
 

00:20:19.730 --> 00:20:21.340 align:start position:0%
style I have using this constant to call
compare<00:20:20.059><c> and</c><00:20:20.179><c> say</c><00:20:20.269><c> degree</c><00:20:20.720><c> so</c><00:20:20.870><c> it</c><00:20:20.990><c> it</c><00:20:21.289><c> just</c>

00:20:21.340 --> 00:20:21.350 align:start position:0%
compare and say degree so it it just
 

00:20:21.350 --> 00:20:22.960 align:start position:0%
compare and say degree so it it just
doesn't<00:20:21.799><c> look</c><00:20:21.950><c> like</c><00:20:22.070><c> it</c><00:20:22.700><c> looks</c><00:20:22.909><c> like</c>

00:20:22.960 --> 00:20:22.970 align:start position:0%
doesn't look like it looks like
 

00:20:22.970 --> 00:20:26.529 align:start position:0%
doesn't look like it looks like
boilerplate<00:20:23.570><c> not</c><00:20:23.750><c> a</c><00:20:24.049><c> real</c><00:20:24.289><c> code</c><00:20:25.029><c> but</c><00:20:26.029><c> it</c><00:20:26.120><c> works</c>

00:20:26.529 --> 00:20:26.539 align:start position:0%
boilerplate not a real code but it works
 

00:20:26.539 --> 00:20:30.009 align:start position:0%
boilerplate not a real code but it works
it<00:20:26.720><c> lets</c><00:20:26.990><c> me</c><00:20:27.049><c> avoid</c><00:20:27.649><c> this</c><00:20:28.159><c> extra</c><00:20:28.750><c> extra</c><00:20:29.750><c> field</c>

00:20:30.009 --> 00:20:30.019 align:start position:0%
it lets me avoid this extra extra field
 

00:20:30.019 --> 00:20:32.889 align:start position:0%
it lets me avoid this extra extra field
and<00:20:30.500><c> the</c><00:20:31.190><c> other</c><00:20:31.220><c> solution</c><00:20:31.639><c> has</c><00:20:32.419><c> appeared</c><00:20:32.720><c> just</c>

00:20:32.889 --> 00:20:32.899 align:start position:0%
and the other solution has appeared just
 

00:20:32.899 --> 00:20:36.009 align:start position:0%
and the other solution has appeared just
recently<00:20:33.260><c> it's</c><00:20:33.980><c> built</c><00:20:34.760><c> in</c><00:20:34.880><c> Java</c><00:20:35.120><c> 9</c><00:20:35.330><c> in</c><00:20:35.659><c> Joanna</c>

00:20:36.009 --> 00:20:36.019 align:start position:0%
recently it's built in Java 9 in Joanna
 

00:20:36.019 --> 00:20:38.110 align:start position:0%
recently it's built in Java 9 in Joanna
has<00:20:36.230><c> the</c><00:20:36.649><c> thing</c><00:20:36.860><c> called</c><00:20:37.039><c> war</c><00:20:37.220><c> handle</c><00:20:37.669><c> it's</c><00:20:38.000><c> a</c>

00:20:38.110 --> 00:20:38.120 align:start position:0%
has the thing called war handle it's a
 

00:20:38.120 --> 00:20:42.070 align:start position:0%
has the thing called war handle it's a
new<00:20:38.269><c> new</c><00:20:38.929><c> abstraction</c><00:20:39.470><c> Joe</c><00:20:39.679><c> and</c><00:20:39.830><c> I</c><00:20:40.090><c> it's</c><00:20:41.090><c> it's</c>

00:20:42.070 --> 00:20:42.080 align:start position:0%
new new abstraction Joe and I it's it's
 

00:20:42.080 --> 00:20:44.080 align:start position:0%
new new abstraction Joe and I it's it's
somewhat<00:20:42.440><c> similar</c><00:20:42.649><c> to</c><00:20:43.370><c> atomic</c><00:20:43.730><c> reference</c>

00:20:44.080 --> 00:20:44.090 align:start position:0%
somewhat similar to atomic reference
 

00:20:44.090 --> 00:20:45.909 align:start position:0%
somewhat similar to atomic reference
update<00:20:44.330><c> in</c><00:20:44.630><c> the</c><00:20:44.809><c> sense</c><00:20:45.019><c> that</c><00:20:45.080><c> you</c><00:20:45.200><c> also</c><00:20:45.320><c> can</c>

00:20:45.909 --> 00:20:45.919 align:start position:0%
update in the sense that you also can
 

00:20:45.919 --> 00:20:48.519 align:start position:0%
update in the sense that you also can
compare<00:20:46.250><c> set</c><00:20:46.519><c> through</c><00:20:46.760><c> it</c><00:20:46.850><c> and</c><00:20:47.389><c> use</c><00:20:48.019><c> it</c><00:20:48.049><c> very</c>

00:20:48.519 --> 00:20:48.529 align:start position:0%
compare set through it and use it very
 

00:20:48.529 --> 00:20:50.200 align:start position:0%
compare set through it and use it very
similar<00:20:48.950><c> way</c><00:20:49.159><c> just</c><00:20:49.460><c> the</c><00:20:49.519><c> code</c><00:20:49.700><c> even</c><00:20:50.000><c> more</c>

00:20:50.200 --> 00:20:50.210 align:start position:0%
similar way just the code even more
 

00:20:50.210 --> 00:20:51.940 align:start position:0%
similar way just the code even more
argue<00:20:50.539><c> later</c><00:20:50.659><c> you</c><00:20:50.960><c> have</c><00:20:51.110><c> to</c><00:20:51.260><c> write</c><00:20:51.470><c> even</c><00:20:51.620><c> more</c>

00:20:51.940 --> 00:20:51.950 align:start position:0%
argue later you have to write even more
 

00:20:51.950 --> 00:20:54.450 align:start position:0%
argue later you have to write even more
boilerplate<00:20:52.519><c> to</c><00:20:52.669><c> use</c><00:20:52.820><c> it</c><00:20:53.000><c> so</c><00:20:53.539><c> I</c><00:20:53.570><c> mean</c>

00:20:54.450 --> 00:20:54.460 align:start position:0%
boilerplate to use it so I mean
 

00:20:54.460 --> 00:20:56.440 align:start position:0%
boilerplate to use it so I mean
unfortunately<00:20:55.460><c> that's</c><00:20:55.580><c> kind</c><00:20:55.730><c> of</c><00:20:55.880><c> progress</c><00:20:56.240><c> in</c>

00:20:56.440 --> 00:20:56.450 align:start position:0%
unfortunately that's kind of progress in
 

00:20:56.450 --> 00:20:59.500 align:start position:0%
unfortunately that's kind of progress in
this<00:20:56.600><c> respect</c><00:20:57.130><c> but</c><00:20:58.130><c> it</c><00:20:58.610><c> you</c><00:20:59.149><c> have</c><00:20:59.299><c> tried</c>

00:20:59.500 --> 00:20:59.510 align:start position:0%
this respect but it you have tried
 

00:20:59.510 --> 00:21:01.090 align:start position:0%
this respect but it you have tried
mobile<00:20:59.809><c> play</c><00:20:59.990><c> to</c><00:21:00.049><c> initialize</c><00:21:00.559><c> it</c><00:21:00.590><c> looks</c>

00:21:01.090 --> 00:21:01.100 align:start position:0%
mobile play to initialize it looks
 

00:21:01.100 --> 00:21:03.580 align:start position:0%
mobile play to initialize it looks
similar<00:21:01.340><c> more</c><00:21:01.850><c> boilerplate</c><00:21:02.269><c> but</c><00:21:02.510><c> then</c><00:21:03.470><c> you</c>

00:21:03.580 --> 00:21:03.590 align:start position:0%
similar more boilerplate but then you
 

00:21:03.590 --> 00:21:05.289 align:start position:0%
similar more boilerplate but then you
use<00:21:03.740><c> it</c><00:21:03.889><c> again</c><00:21:04.130><c> in</c><00:21:04.279><c> the</c><00:21:04.370><c> same</c><00:21:04.519><c> ugly</c><00:21:04.639><c> way</c><00:21:04.940><c> it</c>

00:21:05.289 --> 00:21:05.299 align:start position:0%
use it again in the same ugly way it
 

00:21:05.299 --> 00:21:09.850 align:start position:0%
use it again in the same ugly way it
just<00:21:05.510><c> doesn't</c><00:21:05.779><c> look</c><00:21:05.809><c> natural</c><00:21:07.809><c> since</c><00:21:08.809><c> I</c><00:21:08.929><c> write</c>

00:21:09.850 --> 00:21:09.860 align:start position:0%
just doesn't look natural since I write
 

00:21:09.860 --> 00:21:11.560 align:start position:0%
just doesn't look natural since I write
lots<00:21:10.100><c> of</c><00:21:10.220><c> lock-free</c><00:21:10.460><c> code</c><00:21:10.880><c> in</c><00:21:11.210><c> this</c>

00:21:11.560 --> 00:21:11.570 align:start position:0%
lots of lock-free code in this
 

00:21:11.570 --> 00:21:13.509 align:start position:0%
lots of lock-free code in this
concurrent<00:21:11.929><c> code</c><00:21:12.169><c> and</c><00:21:12.440><c> part</c><00:21:12.980><c> of</c><00:21:13.039><c> my</c><00:21:13.130><c> day</c><00:21:13.190><c> job</c>

00:21:13.509 --> 00:21:13.519 align:start position:0%
concurrent code and part of my day job
 

00:21:13.519 --> 00:21:16.060 align:start position:0%
concurrent code and part of my day job
and<00:21:13.820><c> I</c><00:21:14.299><c> can't</c><00:21:14.899><c> say</c><00:21:15.110><c> when</c><00:21:15.289><c> I</c><00:21:15.350><c> start</c><00:21:15.529><c> coding</c><00:21:15.950><c> and</c>

00:21:16.060 --> 00:21:16.070 align:start position:0%
and I can't say when I start coding and
 

00:21:16.070 --> 00:21:19.539 align:start position:0%
and I can't say when I start coding and
calling<00:21:16.370><c> you</c><00:21:16.580><c> you</c><00:21:17.149><c> start</c><00:21:17.480><c> you</c><00:21:18.440><c> start</c><00:21:18.830><c> to</c>

00:21:19.539 --> 00:21:19.549 align:start position:0%
calling you you start you start to
 

00:21:19.549 --> 00:21:21.279 align:start position:0%
calling you you start you start to
notice<00:21:19.730><c> all</c><00:21:20.029><c> this</c><00:21:20.210><c> boilerplate</c><00:21:20.570><c> you</c><00:21:21.169><c> know</c>

00:21:21.279 --> 00:21:21.289 align:start position:0%
notice all this boilerplate you know
 

00:21:21.289 --> 00:21:22.779 align:start position:0%
notice all this boilerplate you know
because<00:21:21.590><c> you're</c><00:21:21.740><c> so</c><00:21:21.769><c> much</c><00:21:22.190><c> less</c><00:21:22.399><c> boilerplate</c>

00:21:22.779 --> 00:21:22.789 align:start position:0%
because you're so much less boilerplate
 

00:21:22.789 --> 00:21:24.759 align:start position:0%
because you're so much less boilerplate
in<00:21:22.909><c> coding</c><00:21:23.210><c> code</c><00:21:23.360><c> so</c><00:21:23.510><c> you</c><00:21:23.690><c> kind</c><00:21:24.110><c> of</c><00:21:24.200><c> try</c><00:21:24.710><c> to</c>

00:21:24.759 --> 00:21:24.769 align:start position:0%
in coding code so you kind of try to
 

00:21:24.769 --> 00:21:27.070 align:start position:0%
in coding code so you kind of try to
issue<00:21:24.950><c> it</c><00:21:25.220><c> as</c><00:21:25.340><c> much</c><00:21:25.519><c> as</c><00:21:25.669><c> possible</c><00:21:25.779><c> so</c><00:21:26.779><c> I</c><00:21:26.809><c> wrote</c>

00:21:27.070 --> 00:21:27.080 align:start position:0%
issue it as much as possible so I wrote
 

00:21:27.080 --> 00:21:28.870 align:start position:0%
issue it as much as possible so I wrote
this<00:21:27.230><c> very</c><00:21:27.620><c> simple</c><00:21:27.919><c> library</c><00:21:28.130><c> called</c><00:21:28.580><c> atomic</c>

00:21:28.870 --> 00:21:28.880 align:start position:0%
this very simple library called atomic
 

00:21:28.880 --> 00:21:31.090 align:start position:0%
this very simple library called atomic
phone<00:21:29.179><c> so</c><00:21:30.019><c> instead</c><00:21:30.289><c> of</c><00:21:30.350><c> going</c><00:21:30.679><c> through</c><00:21:30.919><c> this</c>

00:21:31.090 --> 00:21:31.100 align:start position:0%
phone so instead of going through this
 

00:21:31.100 --> 00:21:32.590 align:start position:0%
phone so instead of going through this
boilerplate<00:21:31.460><c> I</c><00:21:31.639><c> can</c><00:21:31.970><c> just</c><00:21:32.179><c> write</c>

00:21:32.590 --> 00:21:32.600 align:start position:0%
boilerplate I can just write
 

00:21:32.600 --> 00:21:36.549 align:start position:0%
boilerplate I can just write
top<00:21:33.230><c> as</c><00:21:33.500><c> if</c><00:21:33.980><c> it</c><00:21:34.159><c> was</c><00:21:34.399><c> an</c><00:21:34.639><c> atomic</c><00:21:35.090><c> reference</c><00:21:36.080><c> I</c>

00:21:36.549 --> 00:21:36.559 align:start position:0%
top as if it was an atomic reference I
 

00:21:36.559 --> 00:21:39.490 align:start position:0%
top as if it was an atomic reference I
just<00:21:37.159><c> have</c><00:21:37.490><c> a</c><00:21:37.519><c> nice</c><00:21:37.840><c> function</c><00:21:38.840><c> called</c><00:21:39.169><c> atomic</c>

00:21:39.490 --> 00:21:39.500 align:start position:0%
just have a nice function called atomic
 

00:21:39.500 --> 00:21:42.519 align:start position:0%
just have a nice function called atomic
that<00:21:40.059><c> that</c><00:21:41.059><c> trusts</c><00:21:41.419><c> me</c><00:21:41.570><c> like</c><00:21:41.779><c> it's</c><00:21:42.260><c> real</c>

00:21:42.519 --> 00:21:42.529 align:start position:0%
that that trusts me like it's real
 

00:21:42.529 --> 00:21:45.310 align:start position:0%
that that trusts me like it's real
compact<00:21:43.010><c> way</c><00:21:43.190><c> to</c><00:21:43.429><c> declare</c><00:21:44.299><c> the</c><00:21:44.480><c> fact</c><00:21:44.690><c> that</c><00:21:44.779><c> top</c>

00:21:45.310 --> 00:21:45.320 align:start position:0%
compact way to declare the fact that top
 

00:21:45.320 --> 00:21:47.289 align:start position:0%
compact way to declare the fact that top
should<00:21:45.620><c> be</c><00:21:45.679><c> atomic</c><00:21:45.980><c> variable</c><00:21:46.519><c> that</c><00:21:47.029><c> contains</c>

00:21:47.289 --> 00:21:47.299 align:start position:0%
should be atomic variable that contains
 

00:21:47.299 --> 00:21:49.539 align:start position:0%
should be atomic variable that contains
note<00:21:47.809><c> maybe</c><00:21:48.169><c> now</c><00:21:48.440><c> and</c><00:21:48.710><c> it's</c><00:21:48.950><c> initially</c><00:21:49.429><c> now</c>

00:21:49.539 --> 00:21:49.549 align:start position:0%
note maybe now and it's initially now
 

00:21:49.549 --> 00:21:52.299 align:start position:0%
note maybe now and it's initially now
the<00:21:50.480><c> inner</c><00:21:50.690><c> just</c><00:21:51.110><c> use</c><00:21:51.500><c> it</c><00:21:51.649><c> just</c><00:21:51.919><c> like</c><00:21:52.100><c> I</c><00:21:52.250><c> did</c>

00:21:52.299 --> 00:21:52.309 align:start position:0%
the inner just use it just like I did
 

00:21:52.309 --> 00:21:55.840 align:start position:0%
the inner just use it just like I did
with<00:21:52.669><c> atomic</c><00:21:52.970><c> reference</c><00:21:53.510><c> so</c><00:21:54.320><c> I</c><00:21:54.620><c> you</c><00:21:55.610><c> stop</c>

00:21:55.840 --> 00:21:55.850 align:start position:0%
with atomic reference so I you stop
 

00:21:55.850 --> 00:21:58.750 align:start position:0%
with atomic reference so I you stop
comparing<00:21:56.149><c> set</c><00:21:56.539><c> and</c><00:21:56.840><c> that's</c><00:21:57.529><c> it</c><00:21:57.679><c> this</c><00:21:58.010><c> but</c><00:21:58.519><c> the</c>

00:21:58.750 --> 00:21:58.760 align:start position:0%
comparing set and that's it this but the
 

00:21:58.760 --> 00:22:01.029 align:start position:0%
comparing set and that's it this but the
trick<00:21:59.029><c> is</c><00:21:59.149><c> that</c><00:21:59.210><c> I</c><00:21:59.659><c> code</c><00:22:00.380><c> it</c><00:22:00.559><c> like</c><00:22:00.740><c> atomic</c>

00:22:01.029 --> 00:22:01.039 align:start position:0%
trick is that I code it like atomic
 

00:22:01.039 --> 00:22:03.669 align:start position:0%
trick is that I code it like atomic
reference<00:22:01.580><c> and</c><00:22:02.179><c> I</c><00:22:02.240><c> compile</c><00:22:02.720><c> it</c><00:22:02.990><c> into</c><00:22:03.230><c> Java</c>

00:22:03.669 --> 00:22:03.679 align:start position:0%
reference and I compile it into Java
 

00:22:03.679 --> 00:22:06.580 align:start position:0%
reference and I compile it into Java
byte<00:22:03.919><c> code</c><00:22:04.029><c> just</c><00:22:05.029><c> like</c><00:22:05.330><c> Road</c><00:22:06.019><c> but</c><00:22:06.260><c> then</c><00:22:06.379><c> there</c>

00:22:06.580 --> 00:22:06.590 align:start position:0%
byte code just like Road but then there
 

00:22:06.590 --> 00:22:08.799 align:start position:0%
byte code just like Road but then there
a<00:22:06.700><c> bytecode</c><00:22:07.700><c> pass</c><00:22:07.940><c> processor</c><00:22:08.480><c> who</c><00:22:08.659><c> actually</c>

00:22:08.799 --> 00:22:08.809 align:start position:0%
a bytecode pass processor who actually
 

00:22:08.809 --> 00:22:12.130 align:start position:0%
a bytecode pass processor who actually
chose<00:22:09.169><c> this</c><00:22:09.320><c> code</c><00:22:09.590><c> into</c><00:22:10.390><c> coded</c><00:22:11.390><c> using</c><00:22:11.779><c> atomic</c>

00:22:12.130 --> 00:22:12.140 align:start position:0%
chose this code into coded using atomic
 

00:22:12.140 --> 00:22:14.110 align:start position:0%
chose this code into coded using atomic
reference<00:22:12.620><c> filled</c><00:22:12.830><c> up</c><00:22:12.950><c> later</c><00:22:13.130><c> so</c><00:22:13.640><c> behind</c><00:22:13.909><c> it</c>

00:22:14.110 --> 00:22:14.120 align:start position:0%
reference filled up later so behind it
 

00:22:14.120 --> 00:22:15.730 align:start position:0%
reference filled up later so behind it
since<00:22:14.299><c> it's</c><00:22:14.510><c> so</c><00:22:14.960><c> I</c><00:22:14.990><c> don't</c><00:22:15.200><c> have</c><00:22:15.320><c> to</c><00:22:15.440><c> write</c><00:22:15.620><c> this</c>

00:22:15.730 --> 00:22:15.740 align:start position:0%
since it's so I don't have to write this
 

00:22:15.740 --> 00:22:18.070 align:start position:0%
since it's so I don't have to write this
boilerplate<00:22:16.159><c> and</c><00:22:16.580><c> I</c><00:22:16.940><c> let</c><00:22:17.179><c> the</c><00:22:17.330><c> to</c><00:22:17.539><c> write</c><00:22:17.929><c> this</c>

00:22:18.070 --> 00:22:18.080 align:start position:0%
boilerplate and I let the to write this
 

00:22:18.080 --> 00:22:19.810 align:start position:0%
boilerplate and I let the to write this
boilerplate<00:22:18.440><c> for</c><00:22:18.799><c> me</c><00:22:18.919><c> and</c><00:22:19.130><c> that's</c><00:22:19.490><c> that's</c>

00:22:19.810 --> 00:22:19.820 align:start position:0%
boilerplate for me and that's that's
 

00:22:19.820 --> 00:22:21.700 align:start position:0%
boilerplate for me and that's that's
that's<00:22:20.150><c> kind</c><00:22:20.330><c> of</c><00:22:20.390><c> what</c><00:22:20.600><c> what</c><00:22:20.929><c> kind</c><00:22:21.140><c> of</c><00:22:21.200><c> the</c>

00:22:21.700 --> 00:22:21.710 align:start position:0%
that's kind of what what kind of the
 

00:22:21.710 --> 00:22:23.710 align:start position:0%
that's kind of what what kind of the
progress<00:22:22.159><c> in</c><00:22:22.370><c> you</c><00:22:22.940><c> know</c><00:22:23.120><c> computer</c>

00:22:23.710 --> 00:22:23.720 align:start position:0%
progress in you know computer
 

00:22:23.720 --> 00:22:26.080 align:start position:0%
progress in you know computer
programming<00:22:24.080><c> what's</c><00:22:24.230><c> about</c><00:22:24.440><c> your</c><00:22:24.890><c> as</c><00:22:25.669><c> you</c>

00:22:26.080 --> 00:22:26.090 align:start position:0%
programming what's about your as you
 

00:22:26.090 --> 00:22:27.880 align:start position:0%
programming what's about your as you
know<00:22:26.210><c> you</c><00:22:26.270><c> go</c><00:22:27.169><c> into</c><00:22:27.380><c> a</c><00:22:27.409><c> high</c><00:22:27.529><c> level</c><00:22:27.740><c> of</c>

00:22:27.880 --> 00:22:27.890 align:start position:0%
know you go into a high level of
 

00:22:27.890 --> 00:22:30.100 align:start position:0%
know you go into a high level of
assertion<00:22:28.190><c> you</c><00:22:28.490><c> let</c><00:22:28.669><c> tools</c><00:22:28.940><c> do</c><00:22:29.690><c> boilerplate</c>

00:22:30.100 --> 00:22:30.110 align:start position:0%
assertion you let tools do boilerplate
 

00:22:30.110 --> 00:22:31.840 align:start position:0%
assertion you let tools do boilerplate
for<00:22:30.140><c> you</c><00:22:30.440><c> they</c><00:22:30.679><c> don't</c><00:22:30.830><c> write</c><00:22:30.919><c> yourself</c><00:22:31.159><c> the</c>

00:22:31.840 --> 00:22:31.850 align:start position:0%
for you they don't write yourself the
 

00:22:31.850 --> 00:22:33.190 align:start position:0%
for you they don't write yourself the
good<00:22:32.090><c> thing</c><00:22:32.240><c> about</c><00:22:32.360><c> it</c><00:22:32.690><c> that</c><00:22:32.720><c> without</c>

00:22:33.190 --> 00:22:33.200 align:start position:0%
good thing about it that without
 

00:22:33.200 --> 00:22:35.560 align:start position:0%
good thing about it that without
changing<00:22:33.230><c> my</c><00:22:33.620><c> source</c><00:22:33.919><c> I</c><00:22:34.220><c> can</c><00:22:34.820><c> turn</c><00:22:35.090><c> flip</c><00:22:35.390><c> and</c>

00:22:35.560 --> 00:22:35.570 align:start position:0%
changing my source I can turn flip and
 

00:22:35.570 --> 00:22:37.539 align:start position:0%
changing my source I can turn flip and
switch<00:22:35.690><c> and</c><00:22:36.080><c> have</c><00:22:36.650><c> it</c><00:22:36.799><c> emit</c><00:22:37.070><c> the</c><00:22:37.190><c> code</c><00:22:37.220><c> that</c>

00:22:37.539 --> 00:22:37.549 align:start position:0%
switch and have it emit the code that
 

00:22:37.549 --> 00:22:40.419 align:start position:0%
switch and have it emit the code that
using<00:22:37.940><c> more</c><00:22:38.510><c> handle</c><00:22:38.960><c> so</c><00:22:39.260><c> I</c><00:22:39.289><c> don't</c><00:22:40.220><c> have</c><00:22:40.309><c> to</c>

00:22:40.419 --> 00:22:40.429 align:start position:0%
using more handle so I don't have to
 

00:22:40.429 --> 00:22:42.419 align:start position:0%
using more handle so I don't have to
change<00:22:40.610><c> a</c><00:22:40.760><c> single</c><00:22:40.789><c> line</c><00:22:41.179><c> of</c><00:22:41.210><c> my</c><00:22:41.510><c> code</c><00:22:41.750><c> for</c><00:22:41.960><c> that</c>

00:22:42.419 --> 00:22:42.429 align:start position:0%
change a single line of my code for that
 

00:22:42.429 --> 00:22:45.220 align:start position:0%
change a single line of my code for that
of<00:22:43.429><c> course</c><00:22:43.640><c> the</c><00:22:43.789><c> question</c><00:22:44.090><c> is</c><00:22:44.179><c> is</c><00:22:44.419><c> was</c><00:22:45.049><c> it</c>

00:22:45.220 --> 00:22:45.230 align:start position:0%
of course the question is is was it
 

00:22:45.230 --> 00:22:45.940 align:start position:0%
of course the question is is was it
worth<00:22:45.590><c> it</c>

00:22:45.940 --> 00:22:45.950 align:start position:0%
worth it
 

00:22:45.950 --> 00:22:48.039 align:start position:0%
worth it
okay<00:22:46.429><c> so</c><00:22:46.700><c> we</c><00:22:46.820><c> did</c><00:22:46.970><c> all</c><00:22:47.299><c> the</c><00:22:47.480><c> step</c><00:22:47.690><c> will</c><00:22:47.899><c> learn</c>

00:22:48.039 --> 00:22:48.049 align:start position:0%
okay so we did all the step will learn
 

00:22:48.049 --> 00:22:50.799 align:start position:0%
okay so we did all the step will learn
how<00:22:48.289><c> to</c><00:22:48.320><c> write</c><00:22:49.039><c> lock</c><00:22:49.279><c> free</c><00:22:49.520><c> stack</c><00:22:49.820><c> even</c><00:22:50.120><c> would</c>

00:22:50.799 --> 00:22:50.809 align:start position:0%
how to write lock free stack even would
 

00:22:50.809 --> 00:22:53.320 align:start position:0%
how to write lock free stack even would
even<00:22:51.080><c> learn</c><00:22:51.230><c> how</c><00:22:51.500><c> to</c><00:22:51.529><c> write</c><00:22:51.799><c> it</c><00:22:51.980><c> so</c><00:22:52.190><c> it's</c><00:22:53.000><c> nice</c>

00:22:53.320 --> 00:22:53.330 align:start position:0%
even learn how to write it so it's nice
 

00:22:53.330 --> 00:22:55.659 align:start position:0%
even learn how to write it so it's nice
you<00:22:53.870><c> know</c><00:22:54.020><c> and</c><00:22:54.470><c> can</c><00:22:54.799><c> work</c><00:22:55.100><c> around</c><00:22:55.309><c> different</c>

00:22:55.659 --> 00:22:55.669 align:start position:0%
you know and can work around different
 

00:22:55.669 --> 00:23:00.760 align:start position:0%
you know and can work around different
api's<00:22:56.179><c> but</c><00:22:56.390><c> addy</c><00:22:57.110><c> like</c><00:22:58.010><c> why</c><00:22:58.250><c> what</c><00:22:58.820><c> what</c><00:22:59.529><c> did</c><00:23:00.529><c> we</c>

00:23:00.760 --> 00:23:00.770 align:start position:0%
api's but addy like why what what did we
 

00:23:00.770 --> 00:23:03.600 align:start position:0%
api's but addy like why what what did we
win<00:23:01.100><c> anything</c><00:23:01.429><c> so</c><00:23:01.970><c> let's</c><00:23:02.149><c> measure</c><00:23:02.330><c> it</c><00:23:02.600><c> and</c>

00:23:03.600 --> 00:23:03.610 align:start position:0%
win anything so let's measure it and
 

00:23:03.610 --> 00:23:06.549 align:start position:0%
win anything so let's measure it and
when<00:23:04.610><c> we</c><00:23:04.640><c> measure</c><00:23:04.940><c> it</c><00:23:05.240><c> you</c><00:23:05.870><c> know</c><00:23:05.990><c> the</c><00:23:06.200><c> results</c>

00:23:06.549 --> 00:23:06.559 align:start position:0%
when we measure it you know the results
 

00:23:06.559 --> 00:23:10.539 align:start position:0%
when we measure it you know the results
want<00:23:07.250><c> look</c><00:23:07.490><c> they</c><00:23:08.390><c> kind</c><00:23:09.140><c> of</c><00:23:09.230><c> mixed</c><00:23:09.559><c> so</c><00:23:10.070><c> for</c>

00:23:10.539 --> 00:23:10.549 align:start position:0%
want look they kind of mixed so for
 

00:23:10.549 --> 00:23:13.389 align:start position:0%
want look they kind of mixed so for
single<00:23:11.480><c> thread</c><00:23:12.230><c> case</c><00:23:12.500><c> there's</c><00:23:12.919><c> a</c><00:23:12.980><c> definitely</c>

00:23:13.389 --> 00:23:13.399 align:start position:0%
single thread case there's a definitely
 

00:23:13.399 --> 00:23:15.580 align:start position:0%
single thread case there's a definitely
win<00:23:13.730><c> and</c><00:23:13.970><c> that's</c><00:23:14.570><c> one</c><00:23:14.899><c> advantage</c><00:23:15.289><c> of</c><00:23:15.500><c> our</c>

00:23:15.580 --> 00:23:15.590 align:start position:0%
win and that's one advantage of our
 

00:23:15.590 --> 00:23:19.289 align:start position:0%
win and that's one advantage of our
algorithms<00:23:16.250><c> that</c><00:23:16.429><c> they</c><00:23:16.580><c> just</c><00:23:16.970><c> have</c><00:23:17.240><c> more</c><00:23:18.159><c> more</c>

00:23:19.289 --> 00:23:19.299 align:start position:0%
algorithms that they just have more more
 

00:23:19.299 --> 00:23:22.120 align:start position:0%
algorithms that they just have more more
they're<00:23:20.299><c> more</c><00:23:20.330><c> performant</c><00:23:21.049><c> when</c><00:23:21.770><c> there</c><00:23:21.950><c> is</c><00:23:22.010><c> no</c>

00:23:22.120 --> 00:23:22.130 align:start position:0%
they're more performant when there is no
 

00:23:22.130 --> 00:23:24.010 align:start position:0%
they're more performant when there is no
contention<00:23:22.520><c> a</c><00:23:22.789><c> single</c><00:23:23.179><c> thread</c><00:23:23.330><c> case</c><00:23:23.570><c> but</c>

00:23:24.010 --> 00:23:24.020 align:start position:0%
contention a single thread case but
 

00:23:24.020 --> 00:23:25.659 align:start position:0%
contention a single thread case but
unfortunately<00:23:24.740><c> it's</c><00:23:24.890><c> kind</c><00:23:24.980><c> of</c><00:23:25.100><c> in</c><00:23:25.220><c> contention</c>

00:23:25.659 --> 00:23:25.669 align:start position:0%
unfortunately it's kind of in contention
 

00:23:25.669 --> 00:23:28.480 align:start position:0%
unfortunately it's kind of in contention
case<00:23:26.149><c> we're</c><00:23:26.899><c> losing</c><00:23:27.529><c> a</c><00:23:27.649><c> lot</c><00:23:27.679><c> as</c><00:23:28.100><c> you</c><00:23:28.250><c> became</c>

00:23:28.480 --> 00:23:28.490 align:start position:0%
case we're losing a lot as you became
 

00:23:28.490 --> 00:23:30.880 align:start position:0%
case we're losing a lot as you became
we're<00:23:29.240><c> working</c><00:23:29.570><c> if</c><00:23:29.690><c> not</c><00:23:30.140><c> working</c><00:23:30.470><c> much</c><00:23:30.620><c> worse</c>

00:23:30.880 --> 00:23:30.890 align:start position:0%
we're working if not working much worse
 

00:23:30.890 --> 00:23:36.850 align:start position:0%
we're working if not working much worse
than<00:23:31.490><c> it</c><00:23:31.580><c> worked</c><00:23:31.789><c> with</c><00:23:31.940><c> logs</c><00:23:34.179><c> so</c><00:23:35.179><c> why</c><00:23:35.799><c> why</c><00:23:36.799><c> is</c>

00:23:36.850 --> 00:23:36.860 align:start position:0%
than it worked with logs so why why is
 

00:23:36.860 --> 00:23:39.669 align:start position:0%
than it worked with logs so why why is
that<00:23:37.360><c> wildly</c><00:23:38.360><c> one</c><00:23:38.690><c> third</c><00:23:38.929><c> case</c><00:23:39.140><c> faster</c><00:23:39.559><c> is</c>

00:23:39.669 --> 00:23:39.679 align:start position:0%
that wildly one third case faster is
 

00:23:39.679 --> 00:23:41.649 align:start position:0%
that wildly one third case faster is
obvious<00:23:40.190><c> because</c><00:23:40.340><c> we</c><00:23:40.610><c> don't</c><00:23:40.760><c> have</c><00:23:40.789><c> locks</c><00:23:41.149><c> it's</c>

00:23:41.649 --> 00:23:41.659 align:start position:0%
obvious because we don't have locks it's
 

00:23:41.659 --> 00:23:45.430 align:start position:0%
obvious because we don't have locks it's
just<00:23:41.840><c> much</c><00:23:42.620><c> less</c><00:23:42.649><c> overhead</c><00:23:43.659><c> but</c><00:23:44.659><c> why</c><00:23:45.200><c> we're</c>

00:23:45.430 --> 00:23:45.440 align:start position:0%
just much less overhead but why we're
 

00:23:45.440 --> 00:23:48.940 align:start position:0%
just much less overhead but why we're
having<00:23:45.740><c> such</c><00:23:46.309><c> worse</c><00:23:46.580><c> results</c><00:23:47.240><c> like</c><00:23:47.950><c> several</c>

00:23:48.940 --> 00:23:48.950 align:start position:0%
having such worse results like several
 

00:23:48.950 --> 00:23:51.760 align:start position:0%
having such worse results like several
times<00:23:49.070><c> less</c><00:23:49.970><c> operations</c><00:23:50.480><c> per</c><00:23:50.630><c> second</c><00:23:51.020><c> in</c><00:23:51.260><c> the</c>

00:23:51.760 --> 00:23:51.770 align:start position:0%
times less operations per second in the
 

00:23:51.770 --> 00:23:53.769 align:start position:0%
times less operations per second in the
ministry<00:23:52.130><c> s</c><00:23:52.190><c> case</c><00:23:52.399><c> the</c><00:23:52.789><c> reason</c><00:23:53.029><c> is</c><00:23:53.120><c> it</c><00:23:53.240><c> that</c>

00:23:53.769 --> 00:23:53.779 align:start position:0%
ministry s case the reason is it that
 

00:23:53.779 --> 00:23:55.269 align:start position:0%
ministry s case the reason is it that
water<00:23:54.080><c> algorithms</c><00:23:54.620><c> also</c><00:23:54.830><c> suffer</c><00:23:55.250><c> from</c>

00:23:55.269 --> 00:23:55.279 align:start position:0%
water algorithms also suffer from
 

00:23:55.279 --> 00:23:56.950 align:start position:0%
water algorithms also suffer from
contention<00:23:55.940><c> but</c><00:23:56.360><c> they</c><00:23:56.510><c> suffer</c><00:23:56.690><c> in</c><00:23:56.899><c> a</c>

00:23:56.950 --> 00:23:56.960 align:start position:0%
contention but they suffer in a
 

00:23:56.960 --> 00:23:59.830 align:start position:0%
contention but they suffer in a
different<00:23:57.289><c> way</c><00:23:57.529><c> because</c><00:23:58.520><c> when</c><00:23:58.909><c> lock</c><00:23:59.149><c> free</c><00:23:59.419><c> to</c>

00:23:59.830 --> 00:23:59.840 align:start position:0%
different way because when lock free to
 

00:23:59.840 --> 00:24:02.380 align:start position:0%
different way because when lock free to
log<00:23:59.960><c> preparations</c><00:24:00.620><c> overlap</c><00:24:01.039><c> the</c><00:24:02.000><c> second</c><00:24:02.299><c> one</c>

00:24:02.380 --> 00:24:02.390 align:start position:0%
log preparations overlap the second one
 

00:24:02.390 --> 00:24:04.990 align:start position:0%
log preparations overlap the second one
not<00:24:02.600><c> just</c><00:24:02.630><c> wait</c><00:24:03.549><c> until</c><00:24:04.549><c> the</c><00:24:04.669><c> first</c><00:24:04.820><c> one</c>

00:24:04.990 --> 00:24:05.000 align:start position:0%
not just wait until the first one
 

00:24:05.000 --> 00:24:07.149 align:start position:0%
not just wait until the first one
completes<00:24:05.480><c> it</c><00:24:05.630><c> wastes</c><00:24:06.320><c> the</c><00:24:06.559><c> whole</c><00:24:06.740><c> work</c><00:24:06.980><c> it</c>

00:24:07.149 --> 00:24:07.159 align:start position:0%
completes it wastes the whole work it
 

00:24:07.159 --> 00:24:09.730 align:start position:0%
completes it wastes the whole work it
tries<00:24:07.760><c> to</c><00:24:07.789><c> do</c><00:24:08.120><c> it</c><00:24:08.419><c> because</c><00:24:08.960><c> it</c><00:24:09.320><c> tries</c><00:24:09.710><c> to</c>

00:24:09.730 --> 00:24:09.740 align:start position:0%
tries to do it because it tries to
 

00:24:09.740 --> 00:24:12.039 align:start position:0%
tries to do it because it tries to
update<00:24:10.220><c> but</c><00:24:10.399><c> then</c><00:24:10.570><c> encounters</c><00:24:11.570><c> that</c><00:24:11.809><c> the</c>

00:24:12.039 --> 00:24:12.049 align:start position:0%
update but then encounters that the
 

00:24:12.049 --> 00:24:14.019 align:start position:0%
update but then encounters that the
other<00:24:12.169><c> thread</c><00:24:12.559><c> want</c><00:24:13.070><c> the</c><00:24:13.279><c> race</c><00:24:13.429><c> and</c><00:24:13.730><c> did</c><00:24:13.909><c> it</c>

00:24:14.019 --> 00:24:14.029 align:start position:0%
other thread want the race and did it
 

00:24:14.029 --> 00:24:17.020 align:start position:0%
other thread want the race and did it
did<00:24:15.020><c> it</c><00:24:15.140><c> before</c><00:24:15.320><c> so</c><00:24:16.010><c> it</c><00:24:16.130><c> has</c><00:24:16.280><c> to</c><00:24:16.399><c> try</c><00:24:16.700><c> the</c><00:24:16.760><c> whole</c>

00:24:17.020 --> 00:24:17.030 align:start position:0%
did it before so it has to try the whole
 

00:24:17.030 --> 00:24:19.230 align:start position:0%
did it before so it has to try the whole
operation<00:24:17.630><c> so</c><00:24:18.380><c> the</c>

00:24:19.230 --> 00:24:19.240 align:start position:0%
operation so the
 

00:24:19.240 --> 00:24:21.120 align:start position:0%
operation so the
fact<00:24:19.360><c> of</c><00:24:19.510><c> contention</c><00:24:20.050><c> on</c><00:24:20.140><c> log</c><00:24:20.350><c> preparation</c><00:24:20.950><c> is</c>

00:24:21.120 --> 00:24:21.130 align:start position:0%
fact of contention on log preparation is
 

00:24:21.130 --> 00:24:24.240 align:start position:0%
fact of contention on log preparation is
much<00:24:21.820><c> more</c><00:24:22.030><c> pronounced</c><00:24:22.540><c> and</c><00:24:23.110><c> there</c><00:24:23.830><c> of</c><00:24:23.980><c> course</c>

00:24:24.240 --> 00:24:24.250 align:start position:0%
much more pronounced and there of course
 

00:24:24.250 --> 00:24:27.390 align:start position:0%
much more pronounced and there of course
there<00:24:24.670><c> are</c><00:24:24.850><c> a</c><00:24:24.880><c> lot</c><00:24:25.090><c> of</c><00:24:25.120><c> techniques</c><00:24:25.690><c> to</c><00:24:26.650><c> olivey</c>

00:24:27.390 --> 00:24:27.400 align:start position:0%
there are a lot of techniques to olivey
 

00:24:27.400 --> 00:24:28.830 align:start position:0%
there are a lot of techniques to olivey
the<00:24:27.640><c> problem</c><00:24:27.940><c> there</c><00:24:28.090><c> are</c><00:24:28.120><c> lots</c><00:24:28.330><c> of</c><00:24:28.420><c> papers</c><00:24:28.809><c> on</c>

00:24:28.830 --> 00:24:28.840 align:start position:0%
the problem there are lots of papers on
 

00:24:28.840 --> 00:24:31.049 align:start position:0%
the problem there are lots of papers on
how<00:24:29.200><c> to</c><00:24:29.920><c> make</c><00:24:30.100><c> a</c><00:24:30.130><c> lot</c><00:24:30.429><c> for</c><00:24:30.580><c> algorithm</c>

00:24:31.049 --> 00:24:31.059 align:start position:0%
how to make a lot for algorithm
 

00:24:31.059 --> 00:24:33.780 align:start position:0%
how to make a lot for algorithm
basically<00:24:31.480><c> by</c><00:24:31.690><c> doing</c><00:24:32.190><c> tricks</c><00:24:33.190><c> like</c><00:24:33.429><c> you</c><00:24:33.640><c> know</c>

00:24:33.780 --> 00:24:33.790 align:start position:0%
basically by doing tricks like you know
 

00:24:33.790 --> 00:24:36.870 align:start position:0%
basically by doing tricks like you know
exponential<00:24:34.780><c> back-off</c><00:24:35.260><c> a</c><00:24:35.620><c> proper</c><00:24:36.429><c> spinning</c>

00:24:36.870 --> 00:24:36.880 align:start position:0%
exponential back-off a proper spinning
 

00:24:36.880 --> 00:24:39.210 align:start position:0%
exponential back-off a proper spinning
ceteris<00:24:37.360><c> better</c><00:24:37.630><c> others</c><00:24:37.990><c> worse</c><00:24:38.620><c> combiners</c>

00:24:39.210 --> 00:24:39.220 align:start position:0%
ceteris better others worse combiners
 

00:24:39.220 --> 00:24:42.480 align:start position:0%
ceteris better others worse combiners
lots<00:24:39.400><c> of</c><00:24:39.460><c> papers</c><00:24:39.850><c> that</c><00:24:40.740><c> apply</c><00:24:41.740><c> these</c><00:24:42.130><c> are</c><00:24:42.340><c> that</c>

00:24:42.480 --> 00:24:42.490 align:start position:0%
lots of papers that apply these are that
 

00:24:42.490 --> 00:24:45.870 align:start position:0%
lots of papers that apply these are that
techniques<00:24:42.910><c> in</c><00:24:43.179><c> certain</c><00:24:43.540><c> situation</c><00:24:44.050><c> well</c><00:24:44.880><c> you</c>

00:24:45.870 --> 00:24:45.880 align:start position:0%
techniques in certain situation well you
 

00:24:45.880 --> 00:24:48.210 align:start position:0%
techniques in certain situation well you
can<00:24:46.150><c> actually</c><00:24:46.590><c> get</c><00:24:47.590><c> performance</c><00:24:47.980><c> of</c>

00:24:48.210 --> 00:24:48.220 align:start position:0%
can actually get performance of
 

00:24:48.220 --> 00:24:50.820 align:start position:0%
can actually get performance of
logarithms<00:24:48.880><c> on</c><00:24:49.030><c> par</c><00:24:49.300><c> with</c><00:24:49.710><c> synchronous</c><00:24:50.710><c> all</c>

00:24:50.820 --> 00:24:50.830 align:start position:0%
logarithms on par with synchronous all
 

00:24:50.830 --> 00:24:53.940 align:start position:0%
logarithms on par with synchronous all
then<00:24:50.980><c> while</c><00:24:51.160><c> still</c><00:24:51.190><c> keeping</c><00:24:51.900><c> this</c><00:24:52.900><c> good</c><00:24:53.679><c> case</c>

00:24:53.940 --> 00:24:53.950 align:start position:0%
then while still keeping this good case
 

00:24:53.950 --> 00:24:56.640 align:start position:0%
then while still keeping this good case
of<00:24:54.160><c> being</c><00:24:54.580><c> passed</c><00:24:54.880><c> in</c><00:24:55.150><c> knock</c><00:24:55.990><c> non</c><00:24:56.260><c> container</c>

00:24:56.640 --> 00:24:56.650 align:start position:0%
of being passed in knock non container
 

00:24:56.650 --> 00:24:59.220 align:start position:0%
of being passed in knock non container
case<00:24:56.920><c> but</c><00:24:57.670><c> we're</c><00:24:58.090><c> not</c><00:24:58.300><c> going</c><00:24:58.570><c> to</c><00:24:58.809><c> go</c><00:24:58.960><c> into</c>

00:24:59.220 --> 00:24:59.230 align:start position:0%
case but we're not going to go into
 

00:24:59.230 --> 00:25:01.470 align:start position:0%
case but we're not going to go into
there<00:24:59.410><c> I</c><00:24:59.559><c> mean</c><00:24:59.860><c> because</c><00:25:00.220><c> usually</c><00:25:00.790><c> practice</c>

00:25:01.470 --> 00:25:01.480 align:start position:0%
there I mean because usually practice
 

00:25:01.480 --> 00:25:03.000 align:start position:0%
there I mean because usually practice
you'll<00:25:01.809><c> never</c><00:25:02.080><c> need</c><00:25:02.290><c> this</c><00:25:02.470><c> advancing</c>

00:25:03.000 --> 00:25:03.010 align:start position:0%
you'll never need this advancing
 

00:25:03.010 --> 00:25:05.930 align:start position:0%
you'll never need this advancing
techniques<00:25:03.670><c> and</c><00:25:03.850><c> now</c><00:25:03.940><c> I'll</c><00:25:04.630><c> show</c><00:25:04.809><c> you</c><00:25:04.870><c> why</c>

00:25:05.930 --> 00:25:05.940 align:start position:0%
techniques and now I'll show you why
 

00:25:05.940 --> 00:25:09.110 align:start position:0%
techniques and now I'll show you why
first<00:25:06.940><c> of</c><00:25:07.059><c> all</c><00:25:07.150><c> let's</c><00:25:07.360><c> see</c><00:25:07.570><c> whether</c><00:25:07.990><c> we</c><00:25:08.320><c> had</c>

00:25:09.110 --> 00:25:09.120 align:start position:0%
first of all let's see whether we had
 

00:25:09.120 --> 00:25:12.750 align:start position:0%
first of all let's see whether we had
our<00:25:10.120><c> problem</c><00:25:10.690><c> is</c><00:25:10.840><c> to</c><00:25:10.870><c> toy</c><00:25:11.410><c> like</c><00:25:12.040><c> we</c><00:25:12.280><c> first</c><00:25:12.670><c> of</c>

00:25:12.750 --> 00:25:12.760 align:start position:0%
our problem is to toy like we first of
 

00:25:12.760 --> 00:25:14.070 align:start position:0%
our problem is to toy like we first of
all<00:25:12.850><c> we've</c><00:25:13.000><c> looked</c><00:25:13.240><c> at</c><00:25:13.360><c> it</c><00:25:13.480><c> to</c><00:25:13.570><c> a</c><00:25:13.600><c> problem</c><00:25:13.840><c> to</c>

00:25:14.070 --> 00:25:14.080 align:start position:0%
all we've looked at it to a problem to
 

00:25:14.080 --> 00:25:16.169 align:start position:0%
all we've looked at it to a problem to
start<00:25:14.290><c> with</c><00:25:14.470><c> the</c><00:25:15.370><c> stack</c><00:25:15.580><c> is</c><00:25:15.730><c> not</c><00:25:15.850><c> something</c>

00:25:16.169 --> 00:25:16.179 align:start position:0%
start with the stack is not something
 

00:25:16.179 --> 00:25:19.740 align:start position:0%
start with the stack is not something
you<00:25:16.360><c> typically</c><00:25:16.990><c> work</c><00:25:17.620><c> with</c><00:25:17.679><c> typically</c><00:25:18.750><c> your</c>

00:25:19.740 --> 00:25:19.750 align:start position:0%
you typically work with typically your
 

00:25:19.750 --> 00:25:21.900 align:start position:0%
you typically work with typically your
data<00:25:20.200><c> structures</c><00:25:20.650><c> are</c><00:25:20.800><c> way</c><00:25:21.010><c> more</c><00:25:21.040><c> complex</c><00:25:21.580><c> and</c>

00:25:21.900 --> 00:25:21.910 align:start position:0%
data structures are way more complex and
 

00:25:21.910 --> 00:25:23.520 align:start position:0%
data structures are way more complex and
they're<00:25:22.000><c> just</c><00:25:22.210><c> a</c><00:25:22.300><c> stack</c><00:25:22.540><c> you</c><00:25:22.960><c> have</c><00:25:23.170><c> some</c><00:25:23.380><c> maybe</c>

00:25:23.520 --> 00:25:23.530 align:start position:0%
they're just a stack you have some maybe
 

00:25:23.530 --> 00:25:25.770 align:start position:0%
they're just a stack you have some maybe
you<00:25:24.130><c> know</c><00:25:24.250><c> code</c><00:25:24.610><c> database</c><00:25:24.880><c> that's</c><00:25:25.420><c> your</c>

00:25:25.770 --> 00:25:25.780 align:start position:0%
you know code database that's your
 

00:25:25.780 --> 00:25:28.230 align:start position:0%
you know code database that's your
update<00:25:25.960><c> concurrently</c><00:25:26.740><c> or</c><00:25:27.000><c> something</c><00:25:28.000><c> else</c>

00:25:28.230 --> 00:25:28.240 align:start position:0%
update concurrently or something else
 

00:25:28.240 --> 00:25:32.669 align:start position:0%
update concurrently or something else
that<00:25:29.070><c> that</c><00:25:30.070><c> sits</c><00:25:30.370><c> in</c><00:25:30.880><c> updating</c><00:25:31.390><c> it</c><00:25:31.720><c> it</c><00:25:31.929><c> takes</c>

00:25:32.669 --> 00:25:32.679 align:start position:0%
that that sits in updating it it takes
 

00:25:32.679 --> 00:25:35.040 align:start position:0%
that that sits in updating it it takes
much<00:25:32.890><c> more</c><00:25:33.160><c> time</c><00:25:33.220><c> so</c><00:25:34.179><c> let's</c><00:25:34.420><c> try</c><00:25:34.660><c> to</c><00:25:34.720><c> simulate</c>

00:25:35.040 --> 00:25:35.050 align:start position:0%
much more time so let's try to simulate
 

00:25:35.050 --> 00:25:39.660 align:start position:0%
much more time so let's try to simulate
it<00:25:35.350><c> let's</c><00:25:36.030><c> let's</c><00:25:37.030><c> add</c><00:25:37.530><c> let's</c><00:25:38.530><c> take</c><00:25:39.370><c> it</c><00:25:39.520><c> more</c>

00:25:39.660 --> 00:25:39.670 align:start position:0%
it let's let's add let's take it more
 

00:25:39.670 --> 00:25:43.410 align:start position:0%
it let's let's add let's take it more
real<00:25:39.940><c> but</c><00:25:40.300><c> you</c><00:25:41.230><c> know</c><00:25:41.610><c> artificially</c><00:25:42.610><c> inflating</c>

00:25:43.410 --> 00:25:43.420 align:start position:0%
real but you know artificially inflating
 

00:25:43.420 --> 00:25:45.060 align:start position:0%
real but you know artificially inflating
the<00:25:43.540><c> time</c><00:25:43.780><c> of</c><00:25:43.929><c> our</c><00:25:44.110><c> current</c><00:25:44.530><c> operation</c><00:25:44.950><c> by</c>

00:25:45.060 --> 00:25:45.070 align:start position:0%
the time of our current operation by
 

00:25:45.070 --> 00:25:47.370 align:start position:0%
the time of our current operation by
just<00:25:45.610><c> spending</c><00:25:46.000><c> some</c><00:25:46.210><c> time</c><00:25:46.240><c> and</c><00:25:46.630><c> site</c><00:25:46.809><c> we'll</c>

00:25:47.370 --> 00:25:47.380 align:start position:0%
just spending some time and site we'll
 

00:25:47.380 --> 00:25:50.700 align:start position:0%
just spending some time and site we'll
do<00:25:47.530><c> this</c><00:25:47.679><c> both</c><00:25:48.190><c> for</c><00:25:48.520><c> our</c><00:25:49.500><c> algorithm</c><00:25:50.500><c> wheels</c>

00:25:50.700 --> 00:25:50.710 align:start position:0%
do this both for our algorithm wheels
 

00:25:50.710 --> 00:25:53.250 align:start position:0%
do this both for our algorithm wheels
locks<00:25:50.980><c> and</c><00:25:51.250><c> the</c><00:25:52.030><c> same</c><00:25:52.300><c> change</c><00:25:52.630><c> for</c><00:25:52.870><c> a</c><00:25:52.900><c> lock</c><00:25:53.110><c> for</c>

00:25:53.250 --> 00:25:53.260 align:start position:0%
locks and the same change for a lock for
 

00:25:53.260 --> 00:25:55.560 align:start position:0%
locks and the same change for a lock for
implementation<00:25:53.980><c> and</c><00:25:54.640><c> let's</c><00:25:55.120><c> see</c><00:25:55.240><c> how</c><00:25:55.390><c> they</c>

00:25:55.560 --> 00:25:55.570 align:start position:0%
implementation and let's see how they
 

00:25:55.570 --> 00:25:59.419 align:start position:0%
implementation and let's see how they
behave<00:25:56.309><c> that's</c><00:25:57.309><c> what</c><00:25:57.460><c> we</c><00:25:57.610><c> see</c><00:25:58.050><c> because</c><00:25:59.050><c> we've</c>

00:25:59.419 --> 00:25:59.429 align:start position:0%
behave that's what we see because we've
 

00:25:59.429 --> 00:26:04.290 align:start position:0%
behave that's what we see because we've
our<00:26:00.429><c> operations</c><00:26:00.910><c> became</c><00:26:01.570><c> longer</c><00:26:01.809><c> we</c><00:26:02.650><c> don't</c><00:26:03.300><c> we</c>

00:26:04.290 --> 00:26:04.300 align:start position:0%
our operations became longer we don't we
 

00:26:04.300 --> 00:26:06.299 align:start position:0%
our operations became longer we don't we
we<00:26:04.690><c> don't</c><00:26:04.840><c> see</c><00:26:05.020><c> much</c><00:26:05.410><c> difference</c><00:26:05.890><c> in</c><00:26:06.100><c> there</c>

00:26:06.299 --> 00:26:06.309 align:start position:0%
we don't see much difference in there
 

00:26:06.309 --> 00:26:07.740 align:start position:0%
we don't see much difference in there
single<00:26:06.640><c> thread</c><00:26:06.820><c> performance</c><00:26:07.030><c> anymore</c>

00:26:07.740 --> 00:26:07.750 align:start position:0%
single thread performance anymore
 

00:26:07.750 --> 00:26:11.730 align:start position:0%
single thread performance anymore
because<00:26:08.410><c> this</c><00:26:08.740><c> over</c><00:26:08.980><c> here</c><00:26:09.250><c> of</c><00:26:09.460><c> locks</c><00:26:10.240><c> is</c><00:26:10.740><c> now</c>

00:26:11.730 --> 00:26:11.740 align:start position:0%
because this over here of locks is now
 

00:26:11.740 --> 00:26:15.090 align:start position:0%
because this over here of locks is now
small<00:26:12.160><c> compared</c><00:26:12.790><c> to</c><00:26:13.480><c> the</c><00:26:13.870><c> cost</c><00:26:14.500><c> of</c><00:26:14.620><c> operation</c>

00:26:15.090 --> 00:26:15.100 align:start position:0%
small compared to the cost of operation
 

00:26:15.100 --> 00:26:18.330 align:start position:0%
small compared to the cost of operation
itself<00:26:15.510><c> but</c><00:26:16.510><c> we</c><00:26:17.080><c> still</c><00:26:17.290><c> see</c><00:26:17.500><c> that</c><00:26:17.710><c> lock</c><00:26:18.130><c> three</c>

00:26:18.330 --> 00:26:18.340 align:start position:0%
itself but we still see that lock three
 

00:26:18.340 --> 00:26:21.510 align:start position:0%
itself but we still see that lock three
algorithms<00:26:18.840><c> don't</c><00:26:19.840><c> shine</c><00:26:20.740><c> here</c><00:26:21.070><c> under</c>

00:26:21.510 --> 00:26:21.520 align:start position:0%
algorithms don't shine here under
 

00:26:21.520 --> 00:26:24.090 align:start position:0%
algorithms don't shine here under
contention<00:26:22.120><c> the</c><00:26:22.600><c> same</c><00:26:22.840><c> rule</c><00:26:23.080><c> kicks</c><00:26:23.380><c> in</c><00:26:23.679><c> you</c>

00:26:24.090 --> 00:26:24.100 align:start position:0%
contention the same rule kicks in you
 

00:26:24.100 --> 00:26:26.220 align:start position:0%
contention the same rule kicks in you
know<00:26:24.190><c> under</c><00:26:24.429><c> contention</c><00:26:24.880><c> locks</c><00:26:25.179><c> degree</c><00:26:25.780><c> but</c>

00:26:26.220 --> 00:26:26.230 align:start position:0%
know under contention locks degree but
 

00:26:26.230 --> 00:26:28.590 align:start position:0%
know under contention locks degree but
now<00:26:26.350><c> they</c><00:26:26.530><c> degrade</c><00:26:26.980><c> like</c><00:26:27.090><c> there's</c><00:26:28.090><c> no</c><00:26:28.270><c> this</c>

00:26:28.590 --> 00:26:28.600 align:start position:0%
now they degrade like there's no this
 

00:26:28.600 --> 00:26:33.160 align:start position:0%
now they degrade like there's no this
strange<00:26:29.590><c> d-pad</c><00:26:30.580><c> to</c><00:26:30.940><c> thread</c><00:26:31.179><c> case</c><00:26:31.950><c> but</c>

00:26:33.160 --> 00:26:33.170 align:start position:0%
strange d-pad to thread case but
 

00:26:33.170 --> 00:26:35.050 align:start position:0%
strange d-pad to thread case but
and<00:26:33.350><c> they</c><00:26:33.710><c> stay</c><00:26:33.890><c> pretty</c><00:26:34.040><c> constant</c><00:26:34.580><c> degraded</c>

00:26:35.050 --> 00:26:35.060 align:start position:0%
and they stay pretty constant degraded
 

00:26:35.060 --> 00:26:36.250 align:start position:0%
and they stay pretty constant degraded
with<00:26:35.150><c> a</c><00:26:35.270><c> pretty</c><00:26:35.480><c> constant</c><00:26:35.690><c> and</c><00:26:35.990><c> lock-free</c>

00:26:36.250 --> 00:26:36.260 align:start position:0%
with a pretty constant and lock-free
 

00:26:36.260 --> 00:26:38.560 align:start position:0%
with a pretty constant and lock-free
algorithm<00:26:36.920><c> degrade</c><00:26:37.400><c> under</c><00:26:38.000><c> contention</c>

00:26:38.560 --> 00:26:38.570 align:start position:0%
algorithm degrade under contention
 

00:26:38.570 --> 00:26:41.080 align:start position:0%
algorithm degrade under contention
because<00:26:39.080><c> again</c><00:26:39.830><c> the</c><00:26:40.010><c> same</c><00:26:40.190><c> problem</c><00:26:40.520><c> they</c><00:26:40.880><c> have</c>

00:26:41.080 --> 00:26:41.090 align:start position:0%
because again the same problem they have
 

00:26:41.090 --> 00:26:43.210 align:start position:0%
because again the same problem they have
to<00:26:41.120><c> retry</c><00:26:41.660><c> operation</c><00:26:42.320><c> which</c><00:26:42.740><c> is</c><00:26:42.770><c> now</c><00:26:42.950><c> became</c>

00:26:43.210 --> 00:26:43.220 align:start position:0%
to retry operation which is now became
 

00:26:43.220 --> 00:26:45.670 align:start position:0%
to retry operation which is now became
more<00:26:43.370><c> complex</c><00:26:43.760><c> but</c><00:26:44.630><c> there's</c><00:26:44.840><c> by</c><00:26:45.200><c> the</c><00:26:45.260><c> way</c><00:26:45.440><c> less</c>

00:26:45.670 --> 00:26:45.680 align:start position:0%
more complex but there's by the way less
 

00:26:45.680 --> 00:26:47.320 align:start position:0%
more complex but there's by the way less
less<00:26:46.610><c> difference</c><00:26:47.000><c> in</c><00:26:47.150><c> their</c><00:26:47.300><c> performance</c>

00:26:47.320 --> 00:26:47.330 align:start position:0%
less difference in their performance
 

00:26:47.330 --> 00:26:52.810 align:start position:0%
less difference in their performance
someone<00:26:49.750><c> so</c><00:26:50.750><c> I</c><00:26:51.080><c> promise</c><00:26:51.800><c> here</c><00:26:52.010><c> that's</c><00:26:52.430><c> or</c>

00:26:52.810 --> 00:26:52.820 align:start position:0%
someone so I promise here that's or
 

00:26:52.820 --> 00:26:54.340 align:start position:0%
someone so I promise here that's or
lock-free<00:26:53.240><c> should</c><00:26:53.630><c> be</c><00:26:53.720><c> good</c><00:26:53.870><c> so</c><00:26:53.900><c> what's</c>

00:26:54.340 --> 00:26:54.350 align:start position:0%
lock-free should be good so what's
 

00:26:54.350 --> 00:26:55.180 align:start position:0%
lock-free should be good so what's
what's<00:26:54.680><c> the</c><00:26:54.770><c> reason</c>

00:26:55.180 --> 00:26:55.190 align:start position:0%
what's the reason
 

00:26:55.190 --> 00:26:57.790 align:start position:0%
what's the reason
let's<00:26:55.700><c> try</c><00:26:55.880><c> to</c><00:26:55.940><c> lay</c><00:26:56.150><c> a</c><00:26:56.180><c> workload</c><00:26:56.600><c> whether</c><00:26:57.470><c> this</c>

00:26:57.790 --> 00:26:57.800 align:start position:0%
let's try to lay a workload whether this
 

00:26:57.800 --> 00:27:00.130 align:start position:0%
let's try to lay a workload whether this
workload<00:26:58.160><c> really</c><00:26:58.820><c> representative</c><00:26:59.540><c> of</c><00:26:59.840><c> what</c>

00:27:00.130 --> 00:27:00.140 align:start position:0%
workload really representative of what
 

00:27:00.140 --> 00:27:04.780 align:start position:0%
workload really representative of what
we<00:27:00.380><c> do</c><00:27:00.680><c> with</c><00:27:01.010><c> our</c><00:27:01.720><c> data</c><00:27:02.720><c> structures</c><00:27:03.700><c> and</c><00:27:04.700><c> of</c>

00:27:04.780 --> 00:27:04.790 align:start position:0%
we do with our data structures and of
 

00:27:04.790 --> 00:27:07.090 align:start position:0%
we do with our data structures and of
course<00:27:04.970><c> is</c><00:27:05.090><c> not</c><00:27:05.240><c> because</c><00:27:05.780><c> usually</c><00:27:06.020><c> when</c><00:27:06.950><c> we</c>

00:27:07.090 --> 00:27:07.100 align:start position:0%
course is not because usually when we
 

00:27:07.100 --> 00:27:08.980 align:start position:0%
course is not because usually when we
have<00:27:07.310><c> this</c><00:27:07.460><c> big</c><00:27:07.790><c> data</c><00:27:08.090><c> problem</c><00:27:08.660><c> that's</c>

00:27:08.980 --> 00:27:08.990 align:start position:0%
have this big data problem that's
 

00:27:08.990 --> 00:27:10.330 align:start position:0%
have this big data problem that's
updates<00:27:09.470><c> in</c><00:27:09.650><c> real</c><00:27:09.860><c> time</c>

00:27:10.330 --> 00:27:10.340 align:start position:0%
updates in real time
 

00:27:10.340 --> 00:27:12.880 align:start position:0%
updates in real time
usually<00:27:11.030><c> it's</c><00:27:11.150><c> updates</c><00:27:11.890><c> occasionally</c>

00:27:12.880 --> 00:27:12.890 align:start position:0%
usually it's updates occasionally
 

00:27:12.890 --> 00:27:15.910 align:start position:0%
usually it's updates occasionally
compared<00:27:13.820><c> to</c><00:27:14.240><c> the</c><00:27:14.420><c> number</c><00:27:14.780><c> of</c><00:27:14.990><c> queries</c><00:27:15.560><c> and</c>

00:27:15.910 --> 00:27:15.920 align:start position:0%
compared to the number of queries and
 

00:27:15.920 --> 00:27:17.730 align:start position:0%
compared to the number of queries and
reads<00:27:16.190><c> there</c><00:27:16.520><c> -</c><00:27:16.670><c> you're</c><00:27:16.790><c> doing</c><00:27:17.030><c> against</c><00:27:17.390><c> it</c>

00:27:17.730 --> 00:27:17.740 align:start position:0%
reads there - you're doing against it
 

00:27:17.740 --> 00:27:21.700 align:start position:0%
reads there - you're doing against it
and<00:27:18.740><c> that's</c><00:27:19.700><c> that's</c><00:27:20.000><c> really</c><00:27:20.150><c> common</c><00:27:20.710><c> pattern</c>

00:27:21.700 --> 00:27:21.710 align:start position:0%
and that's that's really common pattern
 

00:27:21.710 --> 00:27:25.000 align:start position:0%
and that's that's really common pattern
when<00:27:22.160><c> you</c><00:27:22.190><c> face</c><00:27:22.640><c> this</c><00:27:23.540><c> ability</c><00:27:24.500><c> in</c><00:27:24.620><c> big</c><00:27:24.800><c> data</c>

00:27:25.000 --> 00:27:25.010 align:start position:0%
when you face this ability in big data
 

00:27:25.010 --> 00:27:27.220 align:start position:0%
when you face this ability in big data
problem<00:27:25.400><c> because</c><00:27:25.700><c> if</c><00:27:25.910><c> the</c><00:27:25.940><c> data</c><00:27:26.300><c> is</c><00:27:26.480><c> big</c><00:27:26.720><c> you</c>

00:27:27.220 --> 00:27:27.230 align:start position:0%
problem because if the data is big you
 

00:27:27.230 --> 00:27:29.590 align:start position:0%
problem because if the data is big you
know<00:27:27.350><c> only</c><00:27:27.620><c> small</c><00:27:28.190><c> bits</c><00:27:28.430><c> of</c><00:27:28.550><c> pieces</c><00:27:28.790><c> of</c><00:27:29.090><c> it</c>

00:27:29.590 --> 00:27:29.600 align:start position:0%
know only small bits of pieces of it
 

00:27:29.600 --> 00:27:33.040 align:start position:0%
know only small bits of pieces of it
update<00:27:29.930><c> so</c><00:27:30.410><c> every</c><00:27:30.950><c> piece</c><00:27:31.790><c> of</c><00:27:31.850><c> data</c><00:27:32.240><c> updates</c>

00:27:33.040 --> 00:27:33.050 align:start position:0%
update so every piece of data updates
 

00:27:33.050 --> 00:27:36.010 align:start position:0%
update so every piece of data updates
relatively<00:27:34.040><c> rare</c><00:27:34.430><c> compared</c><00:27:35.000><c> to</c><00:27:35.150><c> the</c><00:27:35.750><c> number</c>

00:27:36.010 --> 00:27:36.020 align:start position:0%
relatively rare compared to the number
 

00:27:36.020 --> 00:27:38.500 align:start position:0%
relatively rare compared to the number
of<00:27:36.050><c> virus</c><00:27:36.800><c> reports</c><00:27:37.730><c> and</c><00:27:38.000><c> read</c><00:27:38.240><c> operations</c>

00:27:38.500 --> 00:27:38.510 align:start position:0%
of virus reports and read operations
 

00:27:38.510 --> 00:27:42.790 align:start position:0%
of virus reports and read operations
that<00:27:38.960><c> have</c><00:27:39.200><c> -</c><00:27:39.730><c> that</c><00:27:40.730><c> have</c><00:27:40.940><c> to</c><00:27:41.290><c> see</c><00:27:42.290><c> what</c><00:27:42.530><c> the</c>

00:27:42.790 --> 00:27:42.800 align:start position:0%
that have - that have to see what the
 

00:27:42.800 --> 00:27:45.310 align:start position:0%
that have - that have to see what the
current<00:27:43.070><c> value</c><00:27:43.100><c> is</c><00:27:43.520><c> so</c><00:27:44.120><c> we'll</c><00:27:44.540><c> workloads</c><00:27:45.110><c> are</c>

00:27:45.310 --> 00:27:45.320 align:start position:0%
current value is so we'll workloads are
 

00:27:45.320 --> 00:27:48.280 align:start position:0%
current value is so we'll workloads are
mostly<00:27:45.590><c> dominated</c><00:27:46.570><c> so</c><00:27:47.570><c> in</c><00:27:47.720><c> order</c><00:27:47.960><c> to</c><00:27:48.080><c> simulate</c>

00:27:48.280 --> 00:27:48.290 align:start position:0%
mostly dominated so in order to simulate
 

00:27:48.290 --> 00:27:54.130 align:start position:0%
mostly dominated so in order to simulate
this<00:27:48.710><c> will</c><00:27:49.130><c> add</c><00:27:49.690><c> we'll</c><00:27:50.690><c> add</c><00:27:52.270><c> in</c><00:27:53.270><c> our</c><00:27:53.420><c> operation</c>

00:27:54.130 --> 00:27:54.140 align:start position:0%
this will add we'll add in our operation
 

00:27:54.140 --> 00:27:57.790 align:start position:0%
this will add we'll add in our operation
will<00:27:54.380><c> be</c><00:27:55.160><c> twisted</c><00:27:55.370><c> push</c><00:27:55.850><c> and</c><00:27:56.060><c> pop</c><00:27:56.630><c> will</c><00:27:57.260><c> do</c>

00:27:57.790 --> 00:27:57.800 align:start position:0%
will be twisted push and pop will do
 

00:27:57.800 --> 00:27:59.800 align:start position:0%
will be twisted push and pop will do
some<00:27:58.040><c> weeds</c><00:27:58.310><c> will</c><00:27:58.760><c> peak</c><00:27:59.060><c> at</c><00:27:59.090><c> the</c><00:27:59.360><c> top</c><00:27:59.540><c> of</c><00:27:59.690><c> the</c>

00:27:59.800 --> 00:27:59.810 align:start position:0%
some weeds will peak at the top of the
 

00:27:59.810 --> 00:28:02.590 align:start position:0%
some weeds will peak at the top of the
stack<00:28:00.050><c> measure</c><00:28:00.380><c> it's</c><00:28:00.710><c> one</c><00:28:01.010><c> there</c><00:28:01.250><c> will</c><00:28:02.180><c> do</c><00:28:02.330><c> ten</c>

00:28:02.590 --> 00:28:02.600 align:start position:0%
stack measure it's one there will do ten
 

00:28:02.600 --> 00:28:03.010 align:start position:0%
stack measure it's one there will do ten
times

00:28:03.010 --> 00:28:03.020 align:start position:0%
times
 

00:28:03.020 --> 00:28:06.120 align:start position:0%
times
so<00:28:03.350><c> in</c><00:28:03.620><c> this</c><00:28:04.010><c> going</c><00:28:04.460><c> to</c><00:28:04.580><c> ten</c><00:28:04.790><c> to</c><00:28:04.970><c> one</c><00:28:05.090><c> basically</c>

00:28:06.120 --> 00:28:06.130 align:start position:0%
so in this going to ten to one basically
 

00:28:06.130 --> 00:28:10.390 align:start position:0%
so in this going to ten to one basically
ten<00:28:07.130><c> Whisperer</c><00:28:07.960><c> perturb</c><00:28:08.960><c> dates</c><00:28:09.140><c> actually</c><00:28:09.400><c> in</c>

00:28:10.390 --> 00:28:10.400 align:start position:0%
ten Whisperer perturb dates actually in
 

00:28:10.400 --> 00:28:12.810 align:start position:0%
ten Whisperer perturb dates actually in
our<00:28:10.490><c> workload</c><00:28:11.060><c> in</c><00:28:11.300><c> the</c><00:28:11.540><c> peak</c><00:28:11.720><c> operation</c><00:28:12.320><c> for</c>

00:28:12.810 --> 00:28:12.820 align:start position:0%
our workload in the peak operation for
 

00:28:12.820 --> 00:28:15.130 align:start position:0%
our workload in the peak operation for
synchronize<00:28:13.820><c> implemented</c><00:28:14.120><c> in</c><00:28:14.450><c> this</c><00:28:14.540><c> is</c><00:28:14.810><c> easy</c>

00:28:15.130 --> 00:28:15.140 align:start position:0%
synchronize implemented in this is easy
 

00:28:15.140 --> 00:28:17.650 align:start position:0%
synchronize implemented in this is easy
we<00:28:15.380><c> just</c><00:28:15.620><c> we</c><00:28:16.190><c> just</c><00:28:16.220><c> reach</c><00:28:16.550><c> top</c><00:28:16.880><c> well</c><00:28:17.120><c> your</c><00:28:17.360><c> war</c>

00:28:17.650 --> 00:28:17.660 align:start position:0%
we just we just reach top well your war
 

00:28:17.660 --> 00:28:21.330 align:start position:0%
we just we just reach top well your war
if<00:28:18.230><c> it's</c><00:28:18.560><c> null</c><00:28:18.800><c> return</c><00:28:19.040><c> now</c><00:28:19.840><c> for</c><00:28:20.840><c> lock</c><00:28:21.020><c> free</c>

00:28:21.330 --> 00:28:21.340 align:start position:0%
if it's null return now for lock free
 

00:28:21.340 --> 00:28:23.590 align:start position:0%
if it's null return now for lock free
implementation<00:28:22.340><c> that's</c><00:28:22.550><c> also</c><00:28:22.820><c> easy</c><00:28:22.970><c> we</c><00:28:23.480><c> do</c>

00:28:23.590 --> 00:28:23.600 align:start position:0%
implementation that's also easy we do
 

00:28:23.600 --> 00:28:26.710 align:start position:0%
implementation that's also easy we do
the<00:28:23.750><c> same</c><00:28:23.930><c> change</c><00:28:24.230><c> and</c><00:28:24.710><c> you</c><00:28:25.610><c> know</c><00:28:25.760><c> withers</c><00:28:26.450><c> and</c>

00:28:26.710 --> 00:28:26.720 align:start position:0%
the same change and you know withers and
 

00:28:26.720 --> 00:28:30.460 align:start position:0%
the same change and you know withers and
implement<00:28:27.620><c> peak</c><00:28:27.910><c> for</c><00:28:28.910><c> lock</c><00:28:29.060><c> reads</c><00:28:29.470><c> especially</c>

00:28:30.460 --> 00:28:30.470 align:start position:0%
implement peak for lock reads especially
 

00:28:30.470 --> 00:28:33.670 align:start position:0%
implement peak for lock reads especially
simple<00:28:31.370><c> implantation</c><00:28:31.760><c> so</c><00:28:32.210><c> let's</c><00:28:32.390><c> see</c><00:28:32.680><c> what's</c>

00:28:33.670 --> 00:28:33.680 align:start position:0%
simple implantation so let's see what's
 

00:28:33.680 --> 00:28:37.030 align:start position:0%
simple implantation so let's see what's
going<00:28:33.890><c> on</c><00:28:33.950><c> now</c><00:28:34.160><c> the</c><00:28:34.640><c> picture</c><00:28:35.630><c> is</c><00:28:36.040><c> totally</c>

00:28:37.030 --> 00:28:37.040 align:start position:0%
going on now the picture is totally
 

00:28:37.040 --> 00:28:37.570 align:start position:0%
going on now the picture is totally
different

00:28:37.570 --> 00:28:37.580 align:start position:0%
different
 

00:28:37.580 --> 00:28:42.040 align:start position:0%
different
first<00:28:38.090><c> of</c><00:28:38.210><c> all</c><00:28:38.590><c> the</c><00:28:39.590><c> throughput</c><00:28:40.550><c> of</c><00:28:40.880><c> the</c><00:28:41.050><c> lock</c>

00:28:42.040 --> 00:28:42.050 align:start position:0%
first of all the throughput of the lock
 

00:28:42.050 --> 00:28:43.930 align:start position:0%
first of all the throughput of the lock
from<00:28:42.170><c> finish</c><00:28:42.500><c> now</c><00:28:42.940><c> significantly</c>

00:28:43.930 --> 00:28:43.940 align:start position:0%
from finish now significantly
 

00:28:43.940 --> 00:28:46.120 align:start position:0%
from finish now significantly
outperforming<00:28:44.630><c> the</c>

00:28:46.120 --> 00:28:46.130 align:start position:0%
outperforming the
 

00:28:46.130 --> 00:28:48.610 align:start position:0%
outperforming the
simply<00:28:46.760><c> significantly</c><00:28:47.570><c> second</c><00:28:48.410><c> they</c><00:28:48.500><c> now</c>

00:28:48.610 --> 00:28:48.620 align:start position:0%
simply significantly second they now
 

00:28:48.620 --> 00:28:51.220 align:start position:0%
simply significantly second they now
catch<00:28:48.920><c> up</c><00:28:49.570><c> under</c><00:28:50.570><c> increasing</c><00:28:50.990><c> number</c><00:28:51.200><c> of</c>

00:28:51.220 --> 00:28:51.230 align:start position:0%
catch up under increasing number of
 

00:28:51.230 --> 00:28:54.040 align:start position:0%
catch up under increasing number of
threat<00:28:51.500><c> threats</c><00:28:52.310><c> and</c><00:28:52.520><c> that's</c><00:28:52.910><c> that's</c><00:28:53.330><c> clear</c>

00:28:54.040 --> 00:28:54.050 align:start position:0%
threat threats and that's that's clear
 

00:28:54.050 --> 00:28:56.050 align:start position:0%
threat threats and that's that's clear
demonstrates<00:28:54.590><c> were</c><00:28:54.800><c> locked</c><00:28:55.280><c> free</c><00:28:55.520><c> algorithms</c>

00:28:56.050 --> 00:28:56.060 align:start position:0%
demonstrates were locked free algorithms
 

00:28:56.060 --> 00:28:58.720 align:start position:0%
demonstrates were locked free algorithms
chime<00:28:56.330><c> Laufer</c><00:28:56.690><c> algorithms</c><00:28:57.260><c> shine</c><00:28:57.800><c> in</c><00:28:58.370><c> weed</c>

00:28:58.720 --> 00:28:58.730 align:start position:0%
chime Laufer algorithms shine in weed
 

00:28:58.730 --> 00:29:01.090 align:start position:0%
chime Laufer algorithms shine in weed
dominated<00:28:59.360><c> workloads</c><00:29:00.020><c> when</c><00:29:00.530><c> you</c><00:29:00.680><c> read</c><00:29:00.950><c> your</c>

00:29:01.090 --> 00:29:01.100 align:start position:0%
dominated workloads when you read your
 

00:29:01.100 --> 00:29:03.790 align:start position:0%
dominated workloads when you read your
data<00:29:01.280><c> much</c><00:29:02.150><c> more</c><00:29:02.720><c> often</c><00:29:02.930><c> than</c><00:29:03.140><c> you</c><00:29:03.350><c> update</c>

00:29:03.790 --> 00:29:03.800 align:start position:0%
data much more often than you update
 

00:29:03.800 --> 00:29:07.690 align:start position:0%
data much more often than you update
them<00:29:03.950><c> because</c><00:29:04.820><c> with</c><00:29:05.120><c> lock-free</c><00:29:05.860><c> weeds</c><00:29:06.860><c> don't</c>

00:29:07.690 --> 00:29:07.700 align:start position:0%
them because with lock-free weeds don't
 

00:29:07.700 --> 00:29:11.020 align:start position:0%
them because with lock-free weeds don't
never<00:29:08.660><c> there's</c><00:29:08.960><c> no</c><00:29:09.110><c> loop</c><00:29:09.350><c> there's</c><00:29:09.770><c> no</c><00:29:10.030><c> reason</c>

00:29:11.020 --> 00:29:11.030 align:start position:0%
never there's no loop there's no reason
 

00:29:11.030 --> 00:29:13.060 align:start position:0%
never there's no loop there's no reason
Locker<00:29:11.180><c> algorithm</c><00:29:11.630><c> never</c><00:29:11.920><c> suffer</c><00:29:12.920><c> from</c>

00:29:13.060 --> 00:29:13.070 align:start position:0%
Locker algorithm never suffer from
 

00:29:13.070 --> 00:29:14.740 align:start position:0%
Locker algorithm never suffer from
contention<00:29:13.550><c> they</c><00:29:13.940><c> could</c><00:29:14.120><c> just</c><00:29:14.300><c> weed</c><00:29:14.630><c> the</c>

00:29:14.740 --> 00:29:14.750 align:start position:0%
contention they could just weed the
 

00:29:14.750 --> 00:29:16.450 align:start position:0%
contention they could just weed the
current<00:29:15.020><c> value</c><00:29:15.290><c> while</c><00:29:15.740><c> weeds</c><00:29:16.220><c> of</c><00:29:16.430><c> the</c>

00:29:16.450 --> 00:29:16.460 align:start position:0%
current value while weeds of the
 

00:29:16.460 --> 00:29:18.340 align:start position:0%
current value while weeds of the
synchronize<00:29:17.030><c> data</c><00:29:17.060><c> structure</c><00:29:17.720><c> that's</c>

00:29:18.340 --> 00:29:18.350 align:start position:0%
synchronize data structure that's
 

00:29:18.350 --> 00:29:20.890 align:start position:0%
synchronize data structure that's
protected<00:29:19.160><c> by</c><00:29:19.190><c> logs</c><00:29:19.550><c> they</c><00:29:20.270><c> have</c><00:29:20.510><c> to</c><00:29:20.660><c> suffer</c>

00:29:20.890 --> 00:29:20.900 align:start position:0%
protected by logs they have to suffer
 

00:29:20.900 --> 00:29:24.280 align:start position:0%
protected by logs they have to suffer
they<00:29:21.650><c> they</c><00:29:22.460><c> have</c><00:29:22.670><c> to</c><00:29:22.790><c> wait</c><00:29:22.970><c> until</c><00:29:23.150><c> the</c><00:29:23.480><c> writers</c>

00:29:24.280 --> 00:29:24.290 align:start position:0%
they they have to wait until the writers
 

00:29:24.290 --> 00:29:26.380 align:start position:0%
they they have to wait until the writers
change<00:29:24.650><c> their</c><00:29:25.040><c> modifications</c><00:29:25.340><c> and</c><00:29:25.910><c> it's</c><00:29:26.240><c> not</c>

00:29:26.380 --> 00:29:26.390 align:start position:0%
change their modifications and it's not
 

00:29:26.390 --> 00:29:29.320 align:start position:0%
change their modifications and it's not
you<00:29:27.080><c> see</c><00:29:27.230><c> it's</c><00:29:27.410><c> not</c><00:29:27.530><c> that</c><00:29:28.070><c> you</c><00:29:28.430><c> know</c><00:29:28.580><c> some</c>

00:29:29.320 --> 00:29:29.330 align:start position:0%
you see it's not that you know some
 

00:29:29.330 --> 00:29:30.850 align:start position:0%
you see it's not that you know some
people<00:29:29.480><c> think</c><00:29:29.870><c> oh</c><00:29:29.960><c> no</c><00:29:30.140><c> problem</c><00:29:30.410><c> I'll</c><00:29:30.590><c> just</c>

00:29:30.850 --> 00:29:30.860 align:start position:0%
people think oh no problem I'll just
 

00:29:30.860 --> 00:29:33.940 align:start position:0%
people think oh no problem I'll just
remove<00:29:32.140><c> synchronize</c><00:29:33.140><c> from</c><00:29:33.320><c> Maurice</c><00:29:33.650><c> it's</c><00:29:33.800><c> not</c>

00:29:33.940 --> 00:29:33.950 align:start position:0%
remove synchronize from Maurice it's not
 

00:29:33.950 --> 00:29:37.180 align:start position:0%
remove synchronize from Maurice it's not
that<00:29:34.460><c> simple</c><00:29:34.940><c> because</c><00:29:35.650><c> ability</c><00:29:36.650><c> to</c><00:29:36.890><c> remove</c>

00:29:37.180 --> 00:29:37.190 align:start position:0%
that simple because ability to remove
 

00:29:37.190 --> 00:29:38.890 align:start position:0%
that simple because ability to remove
this<00:29:37.400><c> sin</c><00:29:37.850><c> question</c><00:29:38.180><c> or</c><00:29:38.240><c> it</c><00:29:38.330><c> it</c><00:29:38.630><c> possibly</c>

00:29:38.890 --> 00:29:38.900 align:start position:0%
this sin question or it it possibly
 

00:29:38.900 --> 00:29:40.360 align:start position:0%
this sin question or it it possibly
depends<00:29:39.230><c> what</c><00:29:39.380><c> data</c><00:29:39.530><c> structure</c><00:29:39.980><c> it</c><00:29:40.070><c> is</c><00:29:40.190><c> the</c>

00:29:40.360 --> 00:29:40.370 align:start position:0%
depends what data structure it is the
 

00:29:40.370 --> 00:29:42.520 align:start position:0%
depends what data structure it is the
basically<00:29:40.730><c> depends</c><00:29:41.030><c> on</c><00:29:41.390><c> whether</c><00:29:41.690><c> you</c><00:29:41.960><c> can</c><00:29:42.140><c> do</c>

00:29:42.520 --> 00:29:42.530 align:start position:0%
basically depends on whether you can do
 

00:29:42.530 --> 00:29:45.070 align:start position:0%
basically depends on whether you can do
it<00:29:42.650><c> at</c><00:29:42.800><c> least</c><00:29:42.980><c> semi</c><00:29:43.400><c> log</c><00:29:43.610><c> free</c><00:29:43.850><c> and</c><00:29:44.120><c> again</c><00:29:44.660><c> can</c>

00:29:45.070 --> 00:29:45.080 align:start position:0%
it at least semi log free and again can
 

00:29:45.080 --> 00:29:46.600 align:start position:0%
it at least semi log free and again can
you<00:29:45.140><c> shoot</c><00:29:45.470><c> the</c><00:29:45.620><c> logs</c><00:29:45.800><c> for</c><00:29:46.070><c> weeding</c><00:29:46.370><c> for</c>

00:29:46.600 --> 00:29:46.610 align:start position:0%
you shoot the logs for weeding for
 

00:29:46.610 --> 00:29:48.670 align:start position:0%
you shoot the logs for weeding for
example<00:29:46.910><c> if</c><00:29:46.970><c> you</c><00:29:47.060><c> take</c><00:29:47.210><c> the</c><00:29:47.390><c> regular</c><00:29:48.140><c> hash</c><00:29:48.410><c> map</c>

00:29:48.670 --> 00:29:48.680 align:start position:0%
example if you take the regular hash map
 

00:29:48.680 --> 00:29:51.700 align:start position:0%
example if you take the regular hash map
that's<00:29:49.340><c> in</c><00:29:49.580><c> the</c><00:29:49.730><c> GDK</c><00:29:50.210><c> and</c><00:29:50.660><c> you</c><00:29:51.110><c> think</c><00:29:51.320><c> oh</c><00:29:51.470><c> you</c>

00:29:51.700 --> 00:29:51.710 align:start position:0%
that's in the GDK and you think oh you
 

00:29:51.710 --> 00:29:53.950 align:start position:0%
that's in the GDK and you think oh you
know<00:29:51.740><c> synchronizing</c><00:29:52.610><c> on</c><00:29:52.730><c> every</c><00:29:53.060><c> hash</c><00:29:53.720><c> max</c>

00:29:53.950 --> 00:29:53.960 align:start position:0%
know synchronizing on every hash max
 

00:29:53.960 --> 00:29:55.960 align:start position:0%
know synchronizing on every hash max
getting<00:29:54.260><c> expensive</c><00:29:54.740><c> let's</c><00:29:55.430><c> listen</c>

00:29:55.960 --> 00:29:55.970 align:start position:0%
getting expensive let's listen
 

00:29:55.970 --> 00:29:58.300 align:start position:0%
getting expensive let's listen
translation<00:29:56.540><c> on</c><00:29:56.780><c> when</c><00:29:57.320><c> I</c><00:29:57.350><c> put</c><00:29:57.650><c> into</c><00:29:57.890><c> hash</c><00:29:58.100><c> map</c>

00:29:58.300 --> 00:29:58.310 align:start position:0%
translation on when I put into hash map
 

00:29:58.310 --> 00:30:00.100 align:start position:0%
translation on when I put into hash map
and<00:29:58.550><c> leave</c><00:29:58.910><c> all</c><00:29:59.060><c> my</c><00:29:59.180><c> hash</c><00:29:59.360><c> map</c><00:29:59.540><c> guess</c><00:29:59.780><c> not</c>

00:30:00.100 --> 00:30:00.110 align:start position:0%
and leave all my hash map guess not
 

00:30:00.110 --> 00:30:01.600 align:start position:0%
and leave all my hash map guess not
surprise<00:30:00.470><c> for</c><00:30:00.680><c> pure</c><00:30:00.800><c> formats</c><00:30:01.160><c> because</c><00:30:01.310><c> you</c>

00:30:01.600 --> 00:30:01.610 align:start position:0%
surprise for pure formats because you
 

00:30:01.610 --> 00:30:04.260 align:start position:0%
surprise for pure formats because you
know<00:30:01.730><c> because</c><00:30:02.510><c> it's</c><00:30:02.690><c> doesn't</c><00:30:03.350><c> let</c><00:30:03.590><c> me</c><00:30:03.620><c> scale</c>

00:30:04.260 --> 00:30:04.270 align:start position:0%
know because it's doesn't let me scale
 

00:30:04.270 --> 00:30:08.200 align:start position:0%
know because it's doesn't let me scale
and<00:30:05.770><c> you'll</c><00:30:06.770><c> find</c><00:30:07.100><c> that</c><00:30:07.280><c> it</c><00:30:07.550><c> just</c><00:30:07.730><c> doesn't</c>

00:30:08.200 --> 00:30:08.210 align:start position:0%
and you'll find that it just doesn't
 

00:30:08.210 --> 00:30:11.200 align:start position:0%
and you'll find that it just doesn't
work<00:30:08.330><c> I</c><00:30:08.660><c> mean</c><00:30:09.400><c> I've</c><00:30:10.400><c> seen</c><00:30:10.550><c> instance</c><00:30:11.120><c> in</c>

00:30:11.200 --> 00:30:11.210 align:start position:0%
work I mean I've seen instance in
 

00:30:11.210 --> 00:30:12.790 align:start position:0%
work I mean I've seen instance in
production<00:30:11.660><c> where</c><00:30:11.840><c> people</c><00:30:12.200><c> forget</c><00:30:12.380><c> into</c>

00:30:12.790 --> 00:30:12.800 align:start position:0%
production where people forget into
 

00:30:12.800 --> 00:30:15.790 align:start position:0%
production where people forget into
synchronization<00:30:13.430><c> read</c><00:30:13.670><c> and</c><00:30:14.410><c> you</c><00:30:15.410><c> know</c><00:30:15.500><c> hash</c>

00:30:15.790 --> 00:30:15.800 align:start position:0%
synchronization read and you know hash
 

00:30:15.800 --> 00:30:18.760 align:start position:0%
synchronization read and you know hash
map<00:30:15.980><c> just</c><00:30:16.160><c> hand</c><00:30:16.430><c> to</c><00:30:16.640><c> some</c><00:30:17.200><c> moment</c><00:30:18.200><c> when</c><00:30:18.620><c> you</c>

00:30:18.760 --> 00:30:18.770 align:start position:0%
map just hand to some moment when you
 

00:30:18.770 --> 00:30:21.120 align:start position:0%
map just hand to some moment when you
starting<00:30:19.160><c> to</c><00:30:19.310><c> read</c><00:30:19.460><c> without</c>

00:30:21.120 --> 00:30:21.130 align:start position:0%
starting to read without
 

00:30:21.130 --> 00:30:24.040 align:start position:0%
starting to read without
synchronization<00:30:22.130><c> you</c><00:30:22.250><c> end</c><00:30:22.430><c> up</c><00:30:22.610><c> in</c><00:30:23.270><c> some</c><00:30:23.330><c> crazy</c>

00:30:24.040 --> 00:30:24.050 align:start position:0%
synchronization you end up in some crazy
 

00:30:24.050 --> 00:30:26.770 align:start position:0%
synchronization you end up in some crazy
states<00:30:24.560><c> where</c><00:30:25.010><c> the</c><00:30:25.580><c> read</c><00:30:25.820><c> that</c><00:30:26.030><c> is</c><00:30:26.180><c> not</c>

00:30:26.770 --> 00:30:26.780 align:start position:0%
states where the read that is not
 

00:30:26.780 --> 00:30:29.020 align:start position:0%
states where the read that is not
synchronize<00:30:27.320><c> just</c><00:30:27.650><c> just</c><00:30:27.920><c> hand</c><00:30:28.250><c> once</c><00:30:28.610><c> into</c><00:30:29.000><c> the</c>

00:30:29.020 --> 00:30:29.030 align:start position:0%
synchronize just just hand once into the
 

00:30:29.030 --> 00:30:31.630 align:start position:0%
synchronize just just hand once into the
infinite<00:30:29.900><c> loop</c><00:30:30.020><c> so</c><00:30:30.650><c> not</c><00:30:31.010><c> every</c><00:30:31.310><c> structure</c>

00:30:31.630 --> 00:30:31.640 align:start position:0%
infinite loop so not every structure
 

00:30:31.640 --> 00:30:34.360 align:start position:0%
infinite loop so not every structure
unless<00:30:32.270><c> the</c><00:30:32.510><c> data</c><00:30:32.630><c> is</c><00:30:32.990><c> designed</c><00:30:33.500><c> to</c><00:30:34.130><c> allow</c>

00:30:34.360 --> 00:30:34.370 align:start position:0%
unless the data is designed to allow
 

00:30:34.370 --> 00:30:36.790 align:start position:0%
unless the data is designed to allow
lock<00:30:34.670><c> for</c><00:30:34.910><c> weeds</c><00:30:35.240><c> you</c><00:30:35.390><c> can</c><00:30:35.510><c> adjust</c><00:30:36.140><c> say</c><00:30:36.470><c> okay</c><00:30:36.770><c> I</c>

00:30:36.790 --> 00:30:36.800 align:start position:0%
lock for weeds you can adjust say okay I
 

00:30:36.800 --> 00:30:40.690 align:start position:0%
lock for weeds you can adjust say okay I
don't<00:30:36.950><c> need</c><00:30:37.250><c> locks</c><00:30:37.910><c> on</c><00:30:38.120><c> reading</c><00:30:38.420><c> it</c><00:30:39.520><c> see</c><00:30:40.520><c> but</c>

00:30:40.690 --> 00:30:40.700 align:start position:0%
don't need locks on reading it see but
 

00:30:40.700 --> 00:30:42.460 align:start position:0%
don't need locks on reading it see but
let's<00:30:40.880><c> see</c><00:30:40.970><c> interest</c><00:30:41.690><c> to</c><00:30:41.840><c> see</c><00:30:41.990><c> what</c><00:30:42.140><c> happens</c>

00:30:42.460 --> 00:30:42.470 align:start position:0%
let's see interest to see what happens
 

00:30:42.470 --> 00:30:44.560 align:start position:0%
let's see interest to see what happens
if<00:30:42.650><c> it's</c><00:30:43.010><c> even</c><00:30:43.370><c> more</c><00:30:43.580><c> read</c><00:30:43.850><c> emanated</c><00:30:44.390><c> if</c><00:30:44.480><c> you</c>

00:30:44.560 --> 00:30:44.570 align:start position:0%
if it's even more read emanated if you
 

00:30:44.570 --> 00:30:47.200 align:start position:0%
if it's even more read emanated if you
have<00:30:44.780><c> hundred</c><00:30:45.110><c> reads</c><00:30:45.430><c> you</c><00:30:46.430><c> see</c><00:30:46.640><c> as</c><00:30:46.910><c> the</c>

00:30:47.200 --> 00:30:47.210 align:start position:0%
have hundred reads you see as the
 

00:30:47.210 --> 00:30:49.840 align:start position:0%
have hundred reads you see as the
lockrey<00:30:47.720><c> becomes</c><00:30:48.080><c> even</c><00:30:48.560><c> better</c><00:30:48.710><c> like</c><00:30:49.610><c> it's</c>

00:30:49.840 --> 00:30:49.850 align:start position:0%
lockrey becomes even better like it's
 

00:30:49.850 --> 00:30:53.379 align:start position:0%
lockrey becomes even better like it's
now<00:30:50.000><c> clear</c><00:30:50.510><c> clear</c><00:30:51.110><c> outperforms</c>

00:30:53.379 --> 00:30:53.389 align:start position:0%
now clear clear outperforms
 

00:30:53.389 --> 00:30:57.430 align:start position:0%
now clear clear outperforms
limitation<00:30:53.979><c> but</c><00:30:54.979><c> see</c><00:30:55.219><c> I'll</c><00:30:55.639><c> have</c><00:30:56.629><c> this</c><00:30:56.839><c> deep</c>

00:30:57.430 --> 00:30:57.440 align:start position:0%
limitation but see I'll have this deep
 

00:30:57.440 --> 00:30:59.949 align:start position:0%
limitation but see I'll have this deep
is<00:30:57.739><c> still</c><00:30:57.979><c> one</c><00:30:58.489><c> thread</c><00:30:58.789><c> the</c><00:30:58.969><c> faster</c><00:30:59.389><c> more</c>

00:30:59.949 --> 00:30:59.959 align:start position:0%
is still one thread the faster more
 

00:30:59.959 --> 00:31:00.519 align:start position:0%
is still one thread the faster more
threats

00:31:00.519 --> 00:31:00.529 align:start position:0%
threats
 

00:31:00.529 --> 00:31:02.409 align:start position:0%
threats
you<00:31:00.649><c> know</c><00:31:00.799><c> slower</c><00:31:01.099><c> but</c><00:31:01.940><c> where's</c><00:31:02.299><c> the</c>

00:31:02.409 --> 00:31:02.419 align:start position:0%
you know slower but where's the
 

00:31:02.419 --> 00:31:05.769 align:start position:0%
you know slower but where's the
scalability<00:31:02.899><c> so</c><00:31:03.529><c> the</c><00:31:04.070><c> whole</c><00:31:04.459><c> topic</c><00:31:05.389><c> of</c><00:31:05.659><c> the</c>

00:31:05.769 --> 00:31:05.779 align:start position:0%
scalability so the whole topic of the
 

00:31:05.779 --> 00:31:08.889 align:start position:0%
scalability so the whole topic of the
talk<00:31:05.809><c> was</c><00:31:06.409><c> Caleb</c><00:31:07.159><c> and</c><00:31:07.700><c> here</c><00:31:08.209><c> I</c><00:31:08.239><c> show</c><00:31:08.329><c> you</c><00:31:08.539><c> the</c>

00:31:08.889 --> 00:31:08.899 align:start position:0%
talk was Caleb and here I show you the
 

00:31:08.899 --> 00:31:11.259 align:start position:0%
talk was Caleb and here I show you the
most<00:31:08.929><c> as</c><00:31:09.229><c> you</c><00:31:09.259><c> add</c><00:31:09.619><c> this</c><00:31:10.549><c> slower</c><00:31:10.789><c> everything</c>

00:31:11.259 --> 00:31:11.269 align:start position:0%
most as you add this slower everything
 

00:31:11.269 --> 00:31:13.209 align:start position:0%
most as you add this slower everything
works<00:31:11.479><c> so</c><00:31:12.049><c> then</c><00:31:12.259><c> what</c><00:31:12.409><c> was</c><00:31:12.559><c> the</c><00:31:12.709><c> point</c><00:31:12.889><c> of</c>

00:31:13.209 --> 00:31:13.219 align:start position:0%
works so then what was the point of
 

00:31:13.219 --> 00:31:16.869 align:start position:0%
works so then what was the point of
having<00:31:13.429><c> this</c><00:31:13.879><c> huge</c><00:31:14.629><c> 32</c><00:31:15.700><c> Hardware</c><00:31:16.700><c> threads</c>

00:31:16.869 --> 00:31:16.879 align:start position:0%
having this huge 32 Hardware threads
 

00:31:16.879 --> 00:31:19.659 align:start position:0%
having this huge 32 Hardware threads
machine<00:31:17.359><c> to</c><00:31:17.989><c> run</c><00:31:18.139><c> this</c><00:31:18.349><c> code</c><00:31:18.619><c> if</c><00:31:18.889><c> just</c><00:31:19.549><c> any</c>

00:31:19.659 --> 00:31:19.669 align:start position:0%
machine to run this code if just any
 

00:31:19.669 --> 00:31:21.899 align:start position:0%
machine to run this code if just any
more<00:31:19.969><c> stress</c><00:31:20.209><c> just</c><00:31:20.509><c> makes</c><00:31:20.749><c> everything</c><00:31:21.049><c> floor</c>

00:31:21.899 --> 00:31:21.909 align:start position:0%
more stress just makes everything floor
 

00:31:21.909 --> 00:31:25.599 align:start position:0%
more stress just makes everything floor
the<00:31:22.909><c> reason</c><00:31:23.179><c> is</c><00:31:23.299><c> that</c><00:31:23.409><c> again</c><00:31:24.409><c> the</c><00:31:25.009><c> workload</c><00:31:25.429><c> we</c>

00:31:25.599 --> 00:31:25.609 align:start position:0%
the reason is that again the workload we
 

00:31:25.609 --> 00:31:26.649 align:start position:0%
the reason is that again the workload we
have<00:31:25.759><c> is</c><00:31:25.879><c> artificial</c>

00:31:26.649 --> 00:31:26.659 align:start position:0%
have is artificial
 

00:31:26.659 --> 00:31:31.089 align:start position:0%
have is artificial
in<00:31:27.169><c> reality</c><00:31:28.179><c> you</c><00:31:29.179><c> never</c><00:31:29.450><c> have</c><00:31:30.349><c> like</c><00:31:30.649><c> all</c><00:31:30.889><c> your</c>

00:31:31.089 --> 00:31:31.099 align:start position:0%
in reality you never have like all your
 

00:31:31.099 --> 00:31:34.329 align:start position:0%
in reality you never have like all your
threads<00:31:31.459><c> badger</c><00:31:32.179><c> in</c><00:31:32.929><c> to</c><00:31:33.499><c> the</c><00:31:33.829><c> single</c><00:31:34.190><c> day</c>

00:31:34.329 --> 00:31:34.339 align:start position:0%
threads badger in to the single day
 

00:31:34.339 --> 00:31:36.459 align:start position:0%
threads badger in to the single day
distortion<00:31:34.849><c> that</c><00:31:35.119><c> never</c><00:31:35.389><c> is</c><00:31:35.479><c> a</c><00:31:35.509><c> case</c><00:31:35.779><c> well</c>

00:31:36.459 --> 00:31:36.469 align:start position:0%
distortion that never is a case well
 

00:31:36.469 --> 00:31:39.729 align:start position:0%
distortion that never is a case well
know<00:31:36.799><c> if</c><00:31:36.919><c> you</c><00:31:37.039><c> have</c><00:31:37.159><c> a</c><00:31:37.190><c> shared</c><00:31:37.519><c> data</c><00:31:38.739><c> that's</c>

00:31:39.729 --> 00:31:39.739 align:start position:0%
know if you have a shared data that's
 

00:31:39.739 --> 00:31:42.269 align:start position:0%
know if you have a shared data that's
shared<00:31:40.039><c> mutable</c><00:31:40.249><c> data</c><00:31:40.459><c> in</c><00:31:41.299><c> your</c><00:31:41.599><c> code</c><00:31:41.809><c> you</c>

00:31:42.269 --> 00:31:42.279 align:start position:0%
shared mutable data in your code you
 

00:31:42.279 --> 00:31:44.769 align:start position:0%
shared mutable data in your code you
usually<00:31:43.279><c> with</c><00:31:43.549><c> something</c><00:31:43.969><c> from</c><00:31:44.119><c> it</c><00:31:44.269><c> then</c><00:31:44.599><c> you</c>

00:31:44.769 --> 00:31:44.779 align:start position:0%
usually with something from it then you
 

00:31:44.779 --> 00:31:46.419 align:start position:0%
usually with something from it then you
do<00:31:44.989><c> something</c><00:31:45.259><c> with</c><00:31:45.619><c> it</c><00:31:45.649><c> you</c><00:31:45.979><c> do</c><00:31:46.159><c> some</c>

00:31:46.419 --> 00:31:46.429 align:start position:0%
do something with it you do some
 

00:31:46.429 --> 00:31:49.060 align:start position:0%
do something with it you do some
computation<00:31:47.359><c> processing</c><00:31:48.109><c> it's</c><00:31:48.499><c> not</c><00:31:48.679><c> like</c><00:31:48.859><c> you</c>

00:31:49.060 --> 00:31:49.070 align:start position:0%
computation processing it's not like you
 

00:31:49.070 --> 00:31:51.129 align:start position:0%
computation processing it's not like you
read<00:31:49.309><c> it</c><00:31:49.429><c> read</c><00:31:49.669><c> it</c><00:31:49.700><c> read</c><00:31:49.879><c> it</c><00:31:49.940><c> constantly</c><00:31:50.509><c> it's</c>

00:31:51.129 --> 00:31:51.139 align:start position:0%
read it read it read it constantly it's
 

00:31:51.139 --> 00:31:52.959 align:start position:0%
read it read it read it constantly it's
never<00:31:51.349><c> like</c><00:31:51.559><c> that</c><00:31:51.859><c> and</c><00:31:52.190><c> you</c><00:31:52.399><c> don't</c><00:31:52.489><c> update</c><00:31:52.700><c> it</c>

00:31:52.959 --> 00:31:52.969 align:start position:0%
never like that and you don't update it
 

00:31:52.969 --> 00:31:56.219 align:start position:0%
never like that and you don't update it
console<00:31:53.389><c> it's</c><00:31:53.629><c> never</c><00:31:53.779><c> like</c><00:31:53.959><c> that</c><00:31:54.139><c> you</c><00:31:55.209><c> you</c>

00:31:56.219 --> 00:31:56.229 align:start position:0%
console it's never like that you you
 

00:31:56.229 --> 00:31:58.569 align:start position:0%
console it's never like that you you
receive<00:31:57.229><c> some</c><00:31:57.379><c> data</c><00:31:57.559><c> from</c><00:31:57.679><c> Network</c><00:31:58.070><c> parses</c>

00:31:58.569 --> 00:31:58.579 align:start position:0%
receive some data from Network parses
 

00:31:58.579 --> 00:32:01.149 align:start position:0%
receive some data from Network parses
that<00:31:58.849><c> update</c><00:31:59.239><c> you</c><00:31:59.839><c> moves</c><00:32:00.469><c> you</c><00:32:00.559><c> some</c><00:32:00.709><c> requests</c>

00:32:01.149 --> 00:32:01.159 align:start position:0%
that update you moves you some requests
 

00:32:01.159 --> 00:32:04.930 align:start position:0%
that update you moves you some requests
read<00:32:02.149><c> some</c><00:32:02.419><c> data</c><00:32:02.599><c> do</c><00:32:03.169><c> some</c><00:32:03.440><c> processing</c><00:32:03.940><c> reply</c>

00:32:04.930 --> 00:32:04.940 align:start position:0%
read some data do some processing reply
 

00:32:04.940 --> 00:32:07.449 align:start position:0%
read some data do some processing reply
you<00:32:05.509><c> know</c><00:32:05.629><c> it's</c><00:32:05.869><c> never</c><00:32:06.019><c> Unicode</c><00:32:06.950><c> never</c><00:32:07.159><c> better</c>

00:32:07.449 --> 00:32:07.459 align:start position:0%
you know it's never Unicode never better
 

00:32:07.459 --> 00:32:09.729 align:start position:0%
you know it's never Unicode never better
sin<00:32:07.820><c> to</c><00:32:07.969><c> the</c><00:32:08.089><c> single</c><00:32:08.479><c> you</c><00:32:08.809><c> know</c><00:32:08.929><c> single</c><00:32:09.649><c> day</c>

00:32:09.729 --> 00:32:09.739 align:start position:0%
sin to the single you know single day
 

00:32:09.739 --> 00:32:11.469 align:start position:0%
sin to the single you know single day
search<00:32:09.979><c> all</c><00:32:10.219><c> the</c><00:32:10.369><c> time</c><00:32:10.579><c> some</c><00:32:10.820><c> work</c><00:32:11.059><c> law</c><00:32:11.269><c> that</c>

00:32:11.469 --> 00:32:11.479 align:start position:0%
search all the time some work law that
 

00:32:11.479 --> 00:32:12.999 align:start position:0%
search all the time some work law that
we'll<00:32:11.629><c> be</c><00:32:11.779><c> measuring</c><00:32:11.989><c> so</c><00:32:12.349><c> far</c><00:32:12.589><c> it's</c>

00:32:12.999 --> 00:32:13.009 align:start position:0%
we'll be measuring so far it's
 

00:32:13.009 --> 00:32:14.889 align:start position:0%
we'll be measuring so far it's
completely<00:32:13.519><c> non</c><00:32:13.849><c> representative</c><00:32:14.570><c> of</c><00:32:14.719><c> the</c>

00:32:14.889 --> 00:32:14.899 align:start position:0%
completely non representative of the
 

00:32:14.899 --> 00:32:17.019 align:start position:0%
completely non representative of the
actual<00:32:15.349><c> were</c><00:32:15.529><c> close</c><00:32:15.799><c> you'll</c><00:32:16.070><c> encounter</c><00:32:16.339><c> in</c>

00:32:17.019 --> 00:32:17.029 align:start position:0%
actual were close you'll encounter in
 

00:32:17.029 --> 00:32:19.180 align:start position:0%
actual were close you'll encounter in
practice<00:32:17.059><c> in</c><00:32:17.749><c> practice</c><00:32:18.139><c> your</c><00:32:18.529><c> clothes</c><00:32:18.919><c> will</c>

00:32:19.180 --> 00:32:19.190 align:start position:0%
practice in practice your clothes will
 

00:32:19.190 --> 00:32:20.259 align:start position:0%
practice in practice your clothes will
look<00:32:19.399><c> something</c><00:32:19.609><c> like</c><00:32:19.789><c> this</c>

00:32:20.259 --> 00:32:20.269 align:start position:0%
look something like this
 

00:32:20.269 --> 00:32:22.569 align:start position:0%
look something like this
that's<00:32:20.629><c> the</c><00:32:20.959><c> best</c><00:32:21.139><c> thing</c><00:32:21.229><c> we</c><00:32:21.289><c> can</c><00:32:21.589><c> model</c><00:32:21.979><c> the</c>

00:32:22.569 --> 00:32:22.579 align:start position:0%
that's the best thing we can model the
 

00:32:22.579 --> 00:32:26.049 align:start position:0%
that's the best thing we can model the
real-life<00:32:22.820><c> workloads</c><00:32:23.570><c> in</c><00:32:23.859><c> this</c><00:32:24.859><c> in</c><00:32:25.639><c> as</c><00:32:26.029><c> a</c>

00:32:26.049 --> 00:32:26.059 align:start position:0%
real-life workloads in this in as a
 

00:32:26.059 --> 00:32:28.629 align:start position:0%
real-life workloads in this in as a
micro<00:32:26.570><c> test</c><00:32:26.959><c> so</c><00:32:27.320><c> we'll</c><00:32:27.529><c> just</c><00:32:27.769><c> consume</c><00:32:28.399><c> some</c>

00:32:28.629 --> 00:32:28.639 align:start position:0%
micro test so we'll just consume some
 

00:32:28.639 --> 00:32:30.999 align:start position:0%
micro test so we'll just consume some
CPU<00:32:29.029><c> between</c><00:32:29.419><c> you</c><00:32:29.869><c> know</c><00:32:29.989><c> every</c><00:32:30.289><c> we'd</c><00:32:30.499><c> to</c>

00:32:30.999 --> 00:32:31.009 align:start position:0%
CPU between you know every we'd to
 

00:32:31.009 --> 00:32:32.829 align:start position:0%
CPU between you know every we'd to
simulate<00:32:31.309><c> the</c><00:32:31.639><c> fact</c><00:32:31.879><c> that</c><00:32:31.969><c> in</c><00:32:32.419><c> real</c>

00:32:32.829 --> 00:32:32.839 align:start position:0%
simulate the fact that in real
 

00:32:32.839 --> 00:32:34.769 align:start position:0%
simulate the fact that in real
application<00:32:33.440><c> you're</c><00:32:34.190><c> doing</c><00:32:34.489><c> something</c>

00:32:34.769 --> 00:32:34.779 align:start position:0%
application you're doing something
 

00:32:34.779 --> 00:32:37.509 align:start position:0%
application you're doing something
instead<00:32:35.779><c> of</c><00:32:35.839><c> just</c><00:32:35.929><c> reading</c><00:32:36.259><c> and</c><00:32:37.159><c> of</c><00:32:37.309><c> course</c>

00:32:37.509 --> 00:32:37.519 align:start position:0%
instead of just reading and of course
 

00:32:37.519 --> 00:32:41.919 align:start position:0%
instead of just reading and of course
we'll<00:32:37.700><c> do</c><00:32:37.820><c> this</c><00:32:37.999><c> for</c><00:32:38.529><c> all</c><00:32:39.529><c> our</c><00:32:39.879><c> both</c><00:32:40.879><c> you</c><00:32:41.779><c> know</c>

00:32:41.919 --> 00:32:41.929 align:start position:0%
we'll do this for all our both you know
 

00:32:41.929 --> 00:32:48.180 align:start position:0%
we'll do this for all our both you know
lock<00:32:42.440><c> free</c><00:32:42.709><c> and</c><00:32:43.690><c> Link</c><00:32:44.690><c> it</c><00:32:44.839><c> implementation</c><00:32:45.559><c> and</c>

00:32:48.180 --> 00:32:48.190 align:start position:0%
lock free and Link it implementation and
 

00:32:48.190 --> 00:32:53.139 align:start position:0%
lock free and Link it implementation and
let's<00:32:49.190><c> see</c><00:32:49.309><c> what</c><00:32:49.729><c> happens</c><00:32:50.059><c> and</c><00:32:50.889><c> that's</c><00:32:52.149><c> that's</c>

00:32:53.139 --> 00:32:53.149 align:start position:0%
let's see what happens and that's that's
 

00:32:53.149 --> 00:32:55.629 align:start position:0%
let's see what happens and that's that's
where<00:32:53.570><c> we</c><00:32:53.690><c> clearly</c><00:32:53.989><c> see</c><00:32:54.289><c> the</c><00:32:54.469><c> scale</c><00:32:55.219><c> of</c><00:32:55.399><c> this</c>

00:32:55.629 --> 00:32:55.639 align:start position:0%
where we clearly see the scale of this
 

00:32:55.639 --> 00:32:59.409 align:start position:0%
where we clearly see the scale of this
i've<00:32:55.929><c> initially</c><00:32:56.929><c> promised</c><00:32:57.289><c> you</c><00:32:57.849><c> because</c><00:32:58.849><c> you</c>

00:32:59.409 --> 00:32:59.419 align:start position:0%
i've initially promised you because you
 

00:32:59.419 --> 00:33:03.819 align:start position:0%
i've initially promised you because you
see<00:32:59.659><c> here</c><00:32:59.989><c> that</c><00:33:00.139><c> now</c><00:33:02.169><c> actually</c><00:33:03.169><c> both</c><00:33:03.349><c> for</c><00:33:03.559><c> link</c>

00:33:03.819 --> 00:33:03.829 align:start position:0%
see here that now actually both for link
 

00:33:03.829 --> 00:33:05.859 align:start position:0%
see here that now actually both for link
stack<00:33:04.159><c> and</c><00:33:04.429><c> for</c><00:33:04.789><c> lock</c><00:33:04.940><c> free</c><00:33:05.239><c> as</c><00:33:05.450><c> i</c><00:33:05.690><c> increase</c>

00:33:05.859 --> 00:33:05.869 align:start position:0%
stack and for lock free as i increase
 

00:33:05.869 --> 00:33:07.440 align:start position:0%
stack and for lock free as i increase
the<00:33:06.409><c> number</c><00:33:06.769><c> of</c>

00:33:07.440 --> 00:33:07.450 align:start position:0%
the number of
 

00:33:07.450 --> 00:33:09.779 align:start position:0%
the number of
when<00:33:07.659><c> I</c><00:33:07.690><c> run</c><00:33:07.900><c> my</c><00:33:08.049><c> code</c><00:33:08.230><c> I</c><00:33:08.559><c> get</c><00:33:09.010><c> more</c><00:33:09.309><c> privations</c>

00:33:09.779 --> 00:33:09.789 align:start position:0%
when I run my code I get more privations
 

00:33:09.789 --> 00:33:14.190 align:start position:0%
when I run my code I get more privations
per<00:33:09.970><c> second</c><00:33:10.360><c> because</c><00:33:11.140><c> you</c><00:33:11.650><c> know</c><00:33:12.870><c> they</c><00:33:13.870><c> can</c><00:33:14.049><c> do</c>

00:33:14.190 --> 00:33:14.200 align:start position:0%
per second because you know they can do
 

00:33:14.200 --> 00:33:16.020 align:start position:0%
per second because you know they can do
more<00:33:14.440><c> of</c><00:33:14.470><c> those</c><00:33:14.799><c> processing</c><00:33:15.490><c> concurrently</c>

00:33:16.020 --> 00:33:16.030 align:start position:0%
more of those processing concurrently
 

00:33:16.030 --> 00:33:19.140 align:start position:0%
more of those processing concurrently
and<00:33:16.600><c> you</c><00:33:16.960><c> see</c><00:33:17.140><c> that</c><00:33:17.320><c> in</c><00:33:17.590><c> those</c><00:33:18.039><c> more</c><00:33:18.850><c> will</c>

00:33:19.140 --> 00:33:19.150 align:start position:0%
and you see that in those more will
 

00:33:19.150 --> 00:33:21.830 align:start position:0%
and you see that in those more will
worsen<00:33:19.390><c> errors</c><00:33:20.039><c> scalability</c><00:33:21.039><c> of</c><00:33:21.309><c> lock-free</c>

00:33:21.830 --> 00:33:21.840 align:start position:0%
worsen errors scalability of lock-free
 

00:33:21.840 --> 00:33:24.690 align:start position:0%
worsen errors scalability of lock-free
clearly<00:33:22.840><c> better</c><00:33:23.140><c> than</c><00:33:23.530><c> scalability</c><00:33:24.159><c> of</c><00:33:24.429><c> links</c>

00:33:24.690 --> 00:33:24.700 align:start position:0%
clearly better than scalability of links
 

00:33:24.700 --> 00:33:26.850 align:start position:0%
clearly better than scalability of links
if<00:33:24.850><c> they</c><00:33:25.000><c> start</c><00:33:25.299><c> now</c><00:33:25.929><c> they</c><00:33:26.200><c> start</c><00:33:26.440><c> at</c><00:33:26.620><c> some</c>

00:33:26.850 --> 00:33:26.860 align:start position:0%
if they start now they start at some
 

00:33:26.860 --> 00:33:29.430 align:start position:0%
if they start now they start at some
point<00:33:27.130><c> because</c><00:33:27.940><c> compared</c><00:33:28.419><c> to</c><00:33:28.750><c> the</c><00:33:28.900><c> cost</c><00:33:29.169><c> of</c>

00:33:29.430 --> 00:33:29.440 align:start position:0%
point because compared to the cost of
 

00:33:29.440 --> 00:33:31.830 align:start position:0%
point because compared to the cost of
the<00:33:29.620><c> other</c><00:33:30.150><c> CPU</c><00:33:31.150><c> expense</c><00:33:31.480><c> of</c><00:33:31.600><c> the</c><00:33:31.720><c> other</c>

00:33:31.830 --> 00:33:31.840 align:start position:0%
the other CPU expense of the other
 

00:33:31.840 --> 00:33:35.029 align:start position:0%
the other CPU expense of the other
operation<00:33:32.470><c> it</c><00:33:32.679><c> is</c><00:33:33.070><c> the</c><00:33:33.429><c> same</c><00:33:33.669><c> their</c><00:33:34.330><c> minor</c>

00:33:35.029 --> 00:33:35.039 align:start position:0%
operation it is the same their minor
 

00:33:35.039 --> 00:33:39.690 align:start position:0%
operation it is the same their minor
compared<00:33:36.039><c> to</c><00:33:37.000><c> the</c><00:33:37.860><c> you</c><00:33:38.860><c> know</c><00:33:38.980><c> to</c><00:33:39.039><c> the</c><00:33:39.280><c> spin</c>

00:33:39.690 --> 00:33:39.700 align:start position:0%
compared to the you know to the spin
 

00:33:39.700 --> 00:33:43.200 align:start position:0%
compared to the you know to the spin
that<00:33:40.030><c> we've</c><00:33:40.210><c> added</c><00:33:40.510><c> but</c><00:33:41.440><c> as</c><00:33:41.919><c> number</c><00:33:42.850><c> of</c><00:33:42.880><c> firsts</c>

00:33:43.200 --> 00:33:43.210 align:start position:0%
that we've added but as number of firsts
 

00:33:43.210 --> 00:33:45.450 align:start position:0%
that we've added but as number of firsts
increase<00:33:43.600><c> we</c><00:33:44.289><c> see</c><00:33:44.500><c> the</c><00:33:44.650><c> squabbles</c><00:33:44.950><c> of</c><00:33:45.280><c> La</c>

00:33:45.450 --> 00:33:45.460 align:start position:0%
increase we see the squabbles of La
 

00:33:45.460 --> 00:33:48.330 align:start position:0%
increase we see the squabbles of La
falourdel's<00:33:45.640><c> clearly</c><00:33:46.919><c> clear</c><00:33:47.919><c> bed</c><00:33:48.159><c> and</c>

00:33:48.330 --> 00:33:48.340 align:start position:0%
falourdel's clearly clear bed and
 

00:33:48.340 --> 00:33:49.590 align:start position:0%
falourdel's clearly clear bed and
actually<00:33:48.820><c> yes</c>

00:33:49.590 --> 00:33:49.600 align:start position:0%
actually yes
 

00:33:49.600 --> 00:33:51.299 align:start position:0%
actually yes
how<00:33:49.870><c> many</c><00:33:50.080><c> Hardware</c><00:33:50.530><c> threads</c><00:33:50.740><c> our</c><00:33:50.980><c> machine</c>

00:33:51.299 --> 00:33:51.309 align:start position:0%
how many Hardware threads our machine
 

00:33:51.309 --> 00:33:53.940 align:start position:0%
how many Hardware threads our machine
has<00:33:51.549><c> because</c><00:33:52.210><c> you</c><00:33:52.299><c> see</c><00:33:52.510><c> it's</c><00:33:52.720><c> increases</c><00:33:53.440><c> in</c>

00:33:53.940 --> 00:33:53.950 align:start position:0%
has because you see it's increases in
 

00:33:53.950 --> 00:33:56.490 align:start position:0%
has because you see it's increases in
who's<00:33:54.250><c> locked</c><00:33:54.490><c> up</c><00:33:54.730><c> until</c><00:33:55.179><c> we</c><00:33:55.600><c> have</c><00:33:55.780><c> 32</c><00:33:56.110><c> threads</c>

00:33:56.490 --> 00:33:56.500 align:start position:0%
who's locked up until we have 32 threads
 

00:33:56.500 --> 00:33:59.669 align:start position:0%
who's locked up until we have 32 threads
and<00:33:56.740><c> says</c><00:33:57.010><c> flats</c><00:33:57.340><c> after</c><00:33:57.700><c> that</c><00:33:57.880><c> because</c><00:33:58.840><c> I</c><00:33:59.110><c> mean</c>

00:33:59.669 --> 00:33:59.679 align:start position:0%
and says flats after that because I mean
 

00:33:59.679 --> 00:34:01.500 align:start position:0%
and says flats after that because I mean
there's<00:33:59.890><c> no</c><00:34:00.010><c> reason</c><00:34:00.250><c> to</c><00:34:00.610><c> have</c><00:34:01.240><c> any</c><00:34:01.390><c> more</c>

00:34:01.500 --> 00:34:01.510 align:start position:0%
there's no reason to have any more
 

00:34:01.510 --> 00:34:04.770 align:start position:0%
there's no reason to have any more
threats<00:34:01.809><c> than</c><00:34:01.960><c> like</c><00:34:02.470><c> with</c><00:34:03.120><c> the</c><00:34:04.120><c> Machine</c><00:34:04.510><c> I</c><00:34:04.539><c> was</c>

00:34:04.770 --> 00:34:04.780 align:start position:0%
threats than like with the Machine I was
 

00:34:04.780 --> 00:34:07.770 align:start position:0%
threats than like with the Machine I was
running<00:34:05.080><c> that</c><00:34:05.620><c> on</c><00:34:05.679><c> has</c><00:34:06.490><c> just</c><00:34:06.880><c> 32</c><00:34:07.270><c> threads</c><00:34:07.539><c> so</c>

00:34:07.770 --> 00:34:07.780 align:start position:0%
running that on has just 32 threads so
 

00:34:07.780 --> 00:34:10.349 align:start position:0%
running that on has just 32 threads so
adding<00:34:08.280><c> physical</c><00:34:09.280><c> you</c><00:34:09.790><c> know</c><00:34:09.820><c> Hardware</c>

00:34:10.349 --> 00:34:10.359 align:start position:0%
adding physical you know Hardware
 

00:34:10.359 --> 00:34:11.669 align:start position:0%
adding physical you know Hardware
threads<00:34:10.599><c> so</c><00:34:10.990><c> anymore</c>

00:34:11.669 --> 00:34:11.679 align:start position:0%
threads so anymore
 

00:34:11.679 --> 00:34:15.270 align:start position:0%
threads so anymore
you<00:34:12.280><c> know</c><00:34:13.020><c> threads</c><00:34:14.020><c> because</c><00:34:14.349><c> all</c><00:34:14.770><c> our</c><00:34:14.919><c> threats</c>

00:34:15.270 --> 00:34:15.280 align:start position:0%
you know threads because all our threats
 

00:34:15.280 --> 00:34:18.389 align:start position:0%
you know threads because all our threats
are<00:34:15.460><c> consuming</c><00:34:16.359><c> CPU</c><00:34:16.480><c> they</c><00:34:16.929><c> need</c><00:34:17.169><c> anymore</c><00:34:17.800><c> does</c>

00:34:18.389 --> 00:34:18.399 align:start position:0%
are consuming CPU they need anymore does
 

00:34:18.399 --> 00:34:20.460 align:start position:0%
are consuming CPU they need anymore does
not<00:34:18.580><c> do</c><00:34:19.000><c> any</c><00:34:19.179><c> good</c><00:34:19.210><c> but</c><00:34:19.659><c> the</c><00:34:19.839><c> good</c><00:34:20.020><c> thing</c><00:34:20.050><c> is</c><00:34:20.200><c> it</c>

00:34:20.460 --> 00:34:20.470 align:start position:0%
not do any good but the good thing is it
 

00:34:20.470 --> 00:34:24.690 align:start position:0%
not do any good but the good thing is it
doesn't<00:34:20.649><c> harm</c><00:34:20.919><c> either</c><00:34:21.250><c> on</c><00:34:21.700><c> the</c><00:34:22.599><c> real</c><00:34:23.700><c> size</c>

00:34:24.690 --> 00:34:24.700 align:start position:0%
doesn't harm either on the real size
 

00:34:24.700 --> 00:34:26.460 align:start position:0%
doesn't harm either on the real size
number<00:34:25.089><c> of</c><00:34:25.210><c> threads</c><00:34:25.419><c> we</c><00:34:25.960><c> don't</c><00:34:26.169><c> see</c><00:34:26.349><c> any</c>

00:34:26.460 --> 00:34:26.470 align:start position:0%
number of threads we don't see any
 

00:34:26.470 --> 00:34:29.700 align:start position:0%
number of threads we don't see any
decline<00:34:27.099><c> when</c><00:34:27.970><c> we</c><00:34:28.210><c> over</c><00:34:28.839><c> subscribe</c><00:34:29.500><c> our</c>

00:34:29.700 --> 00:34:29.710 align:start position:0%
decline when we over subscribe our
 

00:34:29.710 --> 00:34:31.290 align:start position:0%
decline when we over subscribe our
machine<00:34:30.159><c> and</c><00:34:30.369><c> that's</c><00:34:30.460><c> very</c><00:34:30.790><c> important</c><00:34:31.240><c> for</c>

00:34:31.290 --> 00:34:31.300 align:start position:0%
machine and that's very important for
 

00:34:31.300 --> 00:34:33.720 align:start position:0%
machine and that's very important for
practical<00:34:32.169><c> applications</c><00:34:32.679><c> because</c><00:34:33.040><c> you</c><00:34:33.580><c> know</c>

00:34:33.720 --> 00:34:33.730 align:start position:0%
practical applications because you know
 

00:34:33.730 --> 00:34:35.760 align:start position:0%
practical applications because you know
in<00:34:34.210><c> practice</c><00:34:34.839><c> if</c><00:34:35.020><c> you</c><00:34:35.200><c> especially</c><00:34:35.470><c> if</c><00:34:35.679><c> you</c>

00:34:35.760 --> 00:34:35.770 align:start position:0%
in practice if you especially if you
 

00:34:35.770 --> 00:34:39.450 align:start position:0%
in practice if you especially if you
program<00:34:35.980><c> with</c><00:34:36.129><c> threads</c><00:34:37.000><c> in</c><00:34:38.190><c> deviant</c><00:34:39.190><c> world</c>

00:34:39.450 --> 00:34:39.460 align:start position:0%
program with threads in deviant world
 

00:34:39.460 --> 00:34:42.780 align:start position:0%
program with threads in deviant world
you<00:34:40.389><c> might</c><00:34:40.629><c> for</c><00:34:41.080><c> virus</c><00:34:41.470><c> reasons</c><00:34:41.919><c> might</c><00:34:42.580><c> have</c>

00:34:42.780 --> 00:34:42.790 align:start position:0%
you might for virus reasons might have
 

00:34:42.790 --> 00:34:45.570 align:start position:0%
you might for virus reasons might have
way<00:34:43.270><c> more</c><00:34:43.510><c> threats</c><00:34:44.080><c> than</c><00:34:44.290><c> you</c><00:34:44.560><c> have</c><00:34:44.740><c> CPU</c><00:34:45.339><c> cores</c>

00:34:45.570 --> 00:34:45.580 align:start position:0%
way more threats than you have CPU cores
 

00:34:45.580 --> 00:34:48.030 align:start position:0%
way more threats than you have CPU cores
for<00:34:45.790><c> example</c><00:34:46.089><c> of</c><00:34:46.149><c> bein</c><00:34:46.649><c> when</c><00:34:47.649><c> working</c><00:34:47.889><c> on</c>

00:34:48.030 --> 00:34:48.040 align:start position:0%
for example of bein when working on
 

00:34:48.040 --> 00:34:49.409 align:start position:0%
for example of bein when working on
versed<00:34:48.250><c> in</c><00:34:48.339><c> the</c><00:34:48.460><c> rest</c><00:34:48.669><c> applications</c><00:34:49.210><c> have</c>

00:34:49.409 --> 00:34:49.419 align:start position:0%
versed in the rest applications have
 

00:34:49.419 --> 00:34:51.599 align:start position:0%
versed in the rest applications have
seen<00:34:49.750><c> applications</c><00:34:50.290><c> that</c><00:34:50.440><c> run</c><00:34:50.679><c> hundreds</c><00:34:51.490><c> of</c>

00:34:51.599 --> 00:34:51.609 align:start position:0%
seen applications that run hundreds of
 

00:34:51.609 --> 00:34:54.780 align:start position:0%
seen applications that run hundreds of
threads<00:34:51.790><c> in</c><00:34:52.169><c> much</c><00:34:53.169><c> on</c><00:34:53.349><c> machines</c><00:34:53.800><c> that</c><00:34:54.070><c> support</c>

00:34:54.780 --> 00:34:54.790 align:start position:0%
threads in much on machines that support
 

00:34:54.790 --> 00:34:58.260 align:start position:0%
threads in much on machines that support
only<00:34:55.210><c> 64</c><00:34:56.109><c> Hardware</c><00:34:56.440><c> threads</c><00:34:56.740><c> and</c><00:34:57.730><c> that's</c>

00:34:58.260 --> 00:34:58.270 align:start position:0%
only 64 Hardware threads and that's
 

00:34:58.270 --> 00:35:00.150 align:start position:0%
only 64 Hardware threads and that's
normal<00:34:58.630><c> because</c><00:34:58.780><c> you</c><00:34:59.410><c> might</c><00:34:59.770><c> be</c><00:34:59.800><c> might</c><00:35:00.010><c> need</c>

00:35:00.150 --> 00:35:00.160 align:start position:0%
normal because you might be might need
 

00:35:00.160 --> 00:35:01.859 align:start position:0%
normal because you might be might need
those<00:35:00.310><c> hundreds</c><00:35:00.640><c> work</c><00:35:01.030><c> with</c><00:35:01.210><c> database</c><00:35:01.599><c> or</c>

00:35:01.859 --> 00:35:01.869 align:start position:0%
those hundreds work with database or
 

00:35:01.869 --> 00:35:03.870 align:start position:0%
those hundreds work with database or
with<00:35:02.050><c> other</c><00:35:02.230><c> blocking</c><00:35:02.980><c> operations</c><00:35:03.490><c> but</c><00:35:03.790><c> the</c>

00:35:03.870 --> 00:35:03.880 align:start position:0%
with other blocking operations but the
 

00:35:03.880 --> 00:35:07.050 align:start position:0%
with other blocking operations but the
same<00:35:04.119><c> time</c><00:35:04.390><c> in</c><00:35:04.990><c> my</c><00:35:05.500><c> application</c><00:35:06.040><c> I</c><00:35:06.640><c> have</c><00:35:06.880><c> some</c>

00:35:07.050 --> 00:35:07.060 align:start position:0%
same time in my application I have some
 

00:35:07.060 --> 00:35:08.370 align:start position:0%
same time in my application I have some
shared<00:35:07.359><c> data</c><00:35:07.570><c> structures</c><00:35:08.080><c> like</c><00:35:08.140><c> the</c>

00:35:08.370 --> 00:35:08.380 align:start position:0%
shared data structures like the
 

00:35:08.380 --> 00:35:10.410 align:start position:0%
shared data structures like the
constantly<00:35:08.770><c> update</c><00:35:09.099><c> and</c><00:35:09.369><c> I</c><00:35:09.730><c> want</c><00:35:10.000><c> to</c><00:35:10.180><c> read</c>

00:35:10.410 --> 00:35:10.420 align:start position:0%
constantly update and I want to read
 

00:35:10.420 --> 00:35:11.579 align:start position:0%
constantly update and I want to read
them<00:35:10.630><c> to</c><00:35:10.869><c> do</c>

00:35:11.579 --> 00:35:11.589 align:start position:0%
them to do
 

00:35:11.589 --> 00:35:13.620 align:start position:0%
them to do
baris<00:35:12.130><c> analytics</c><00:35:12.670><c> like</c><00:35:12.880><c> figuring</c><00:35:13.180><c> out</c><00:35:13.300><c> what's</c>

00:35:13.620 --> 00:35:13.630 align:start position:0%
baris analytics like figuring out what's
 

00:35:13.630 --> 00:35:17.160 align:start position:0%
baris analytics like figuring out what's
the<00:35:13.839><c> current</c><00:35:14.830><c> stock</c><00:35:15.010><c> prices</c><00:35:15.430><c> and</c><00:35:15.990><c> for</c><00:35:16.990><c> those</c>

00:35:17.160 --> 00:35:17.170 align:start position:0%
the current stock prices and for those
 

00:35:17.170 --> 00:35:20.760 align:start position:0%
the current stock prices and for those
you<00:35:17.560><c> know</c><00:35:17.859><c> I</c><00:35:18.160><c> I</c><00:35:19.119><c> wanted</c><00:35:20.080><c> to</c><00:35:20.170><c> scale</c>

00:35:20.760 --> 00:35:20.770 align:start position:0%
you know I I wanted to scale
 

00:35:20.770 --> 00:35:23.310 align:start position:0%
you know I I wanted to scale
want<00:35:20.920><c> access</c><00:35:21.370><c> to</c><00:35:21.730><c> the</c><00:35:21.940><c> shared</c><00:35:22.180><c> data</c><00:35:22.480><c> to</c><00:35:23.080><c> slow</c>

00:35:23.310 --> 00:35:23.320 align:start position:0%
want access to the shared data to slow
 

00:35:23.320 --> 00:35:27.360 align:start position:0%
want access to the shared data to slow
down<00:35:23.710><c> the</c><00:35:24.580><c> rest</c><00:35:25.000><c> of</c><00:35:25.150><c> my</c><00:35:25.300><c> work</c><00:35:25.540><c> and</c><00:35:26.110><c> I</c><00:35:26.560><c> wanted</c><00:35:27.160><c> as</c>

00:35:27.360 --> 00:35:27.370 align:start position:0%
down the rest of my work and I wanted as
 

00:35:27.370 --> 00:35:31.050 align:start position:0%
down the rest of my work and I wanted as
little<00:35:27.990><c> as</c><00:35:28.990><c> little</c><00:35:29.050><c> barrier</c><00:35:29.740><c> as</c><00:35:29.980><c> possible</c><00:35:30.640><c> and</c>

00:35:31.050 --> 00:35:31.060 align:start position:0%
little as little barrier as possible and
 

00:35:31.060 --> 00:35:33.570 align:start position:0%
little as little barrier as possible and
that's<00:35:32.050><c> that's</c><00:35:32.530><c> good</c><00:35:32.770><c> that's</c><00:35:32.980><c> you</c><00:35:33.250><c> know</c><00:35:33.370><c> it's</c>

00:35:33.570 --> 00:35:33.580 align:start position:0%
that's that's good that's you know it's
 

00:35:33.580 --> 00:35:35.430 align:start position:0%
that's that's good that's you know it's
number<00:35:33.820><c> I</c><00:35:33.850><c> think</c><00:35:34.210><c> you</c><00:35:34.300><c> did</c><00:35:34.510><c> it</c><00:35:34.900><c> doesn't</c><00:35:35.230><c> become</c>

00:35:35.430 --> 00:35:35.440 align:start position:0%
number I think you did it doesn't become
 

00:35:35.440 --> 00:35:44.520 align:start position:0%
number I think you did it doesn't become
worse<00:35:38.100><c> so</c><00:35:40.290><c> the</c><00:35:41.430><c> the</c><00:35:42.810><c> kind</c><00:35:43.810><c> of</c><00:35:43.840><c> a</c><00:35:43.960><c> lesson</c><00:35:44.140><c> here</c>

00:35:44.520 --> 00:35:44.530 align:start position:0%
worse so the the kind of a lesson here
 

00:35:44.530 --> 00:35:47.520 align:start position:0%
worse so the the kind of a lesson here
is<00:35:44.680><c> that</c><00:35:45.490><c> we</c><00:35:46.240><c> need</c><00:35:46.480><c> when</c><00:35:46.750><c> we</c><00:35:46.780><c> measure</c>

00:35:47.520 --> 00:35:47.530 align:start position:0%
is that we need when we measure
 

00:35:47.530 --> 00:35:49.830 align:start position:0%
is that we need when we measure
performance<00:35:47.860><c> we</c><00:35:48.430><c> need</c><00:35:48.580><c> to</c><00:35:48.790><c> make</c><00:35:49.420><c> sure</c><00:35:49.540><c> we</c><00:35:49.690><c> ask</c>

00:35:49.830 --> 00:35:49.840 align:start position:0%
performance we need to make sure we ask
 

00:35:49.840 --> 00:35:51.720 align:start position:0%
performance we need to make sure we ask
the<00:35:49.990><c> ask</c><00:35:50.110><c> the</c><00:35:50.590><c> right</c><00:35:50.740><c> question</c><00:35:51.130><c> is</c><00:35:51.220><c> the</c><00:35:51.550><c> most</c>

00:35:51.720 --> 00:35:51.730 align:start position:0%
the ask the right question is the most
 

00:35:51.730 --> 00:35:54.240 align:start position:0%
the ask the right question is the most
challenge<00:35:52.360><c> actually</c><00:35:52.480><c> task</c><00:35:52.960><c> into</c><00:35:53.470><c> measuring</c>

00:35:54.240 --> 00:35:54.250 align:start position:0%
challenge actually task into measuring
 

00:35:54.250 --> 00:35:55.740 align:start position:0%
challenge actually task into measuring
performance<00:35:54.460><c> especially</c><00:35:54.910><c> concurrent</c><00:35:55.600><c> code</c>

00:35:55.740 --> 00:35:55.750 align:start position:0%
performance especially concurrent code
 

00:35:55.750 --> 00:35:58.050 align:start position:0%
performance especially concurrent code
and<00:35:56.310><c> especially</c><00:35:57.310><c> if</c><00:35:57.520><c> you're</c><00:35:57.670><c> trying</c><00:35:57.880><c> to</c>

00:35:58.050 --> 00:35:58.060 align:start position:0%
and especially if you're trying to
 

00:35:58.060 --> 00:36:00.450 align:start position:0%
and especially if you're trying to
assess<00:35:58.330><c> such</c><00:35:59.230><c> fleeting</c><00:35:59.650><c> characteristics</c>

00:36:00.450 --> 00:36:00.460 align:start position:0%
assess such fleeting characteristics
 

00:36:00.460 --> 00:36:03.090 align:start position:0%
assess such fleeting characteristics
like<00:36:00.670><c> scalability</c><00:36:01.300><c> is</c><00:36:01.720><c> us</c><00:36:02.680><c> there</c><00:36:03.010><c> are</c>

00:36:03.090 --> 00:36:03.100 align:start position:0%
like scalability is us there are
 

00:36:03.100 --> 00:36:05.580 align:start position:0%
like scalability is us there are
questions<00:36:03.520><c> and</c><00:36:03.760><c> like</c><00:36:04.690><c> modeling</c><00:36:05.290><c> your</c>

00:36:05.580 --> 00:36:05.590 align:start position:0%
questions and like modeling your
 

00:36:05.590 --> 00:36:09.000 align:start position:0%
questions and like modeling your
workload<00:36:06.160><c> is</c><00:36:06.400><c> is</c><00:36:07.320><c> really</c><00:36:08.320><c> exercise</c><00:36:08.650><c> it</c><00:36:08.800><c> pays</c>

00:36:09.000 --> 00:36:09.010 align:start position:0%
workload is is really exercise it pays
 

00:36:09.010 --> 00:36:13.830 align:start position:0%
workload is is really exercise it pays
off<00:36:09.250><c> so</c><00:36:10.060><c> if</c><00:36:10.360><c> you</c><00:36:10.600><c> are</c><00:36:10.810><c> into</c><00:36:12.330><c> into</c><00:36:13.330><c> the</c><00:36:13.450><c> task</c><00:36:13.660><c> of</c>

00:36:13.830 --> 00:36:13.840 align:start position:0%
off so if you are into into the task of
 

00:36:13.840 --> 00:36:15.600 align:start position:0%
off so if you are into into the task of
making<00:36:13.960><c> sure</c><00:36:14.170><c> you</c><00:36:14.290><c> got</c><00:36:14.470><c> scales</c>

00:36:15.600 --> 00:36:15.610 align:start position:0%
making sure you got scales
 

00:36:15.610 --> 00:36:21.600 align:start position:0%
making sure you got scales
I<00:36:15.670><c> mean</c><00:36:16.540><c> don't</c><00:36:17.790><c> never</c><00:36:18.790><c> you</c><00:36:19.300><c> know</c><00:36:20.400><c> don't</c><00:36:21.400><c> think</c>

00:36:21.600 --> 00:36:21.610 align:start position:0%
I mean don't never you know don't think
 

00:36:21.610 --> 00:36:24.870 align:start position:0%
I mean don't never you know don't think
like<00:36:21.970><c> you</c><00:36:22.630><c> can</c><00:36:22.900><c> just</c><00:36:23.410><c> you</c><00:36:24.040><c> know</c><00:36:24.100><c> um</c><00:36:24.280><c> eat</c><00:36:24.490><c> this</c>

00:36:24.870 --> 00:36:24.880 align:start position:0%
like you can just you know um eat this
 

00:36:24.880 --> 00:36:26.430 align:start position:0%
like you can just you know um eat this
exercise<00:36:25.480><c> of</c><00:36:25.630><c> trying</c><00:36:25.870><c> to</c><00:36:25.930><c> model</c><00:36:26.290><c> your</c>

00:36:26.430 --> 00:36:26.440 align:start position:0%
exercise of trying to model your
 

00:36:26.440 --> 00:36:28.020 align:start position:0%
exercise of trying to model your
workflow<00:36:26.830><c> I</c><00:36:27.070><c> mean</c><00:36:27.280><c> modeling</c><00:36:27.550><c> workflow</c><00:36:27.730><c> is</c>

00:36:28.020 --> 00:36:28.030 align:start position:0%
workflow I mean modeling workflow is
 

00:36:28.030 --> 00:36:29.580 align:start position:0%
workflow I mean modeling workflow is
important<00:36:28.450><c> because</c><00:36:28.570><c> if</c><00:36:28.960><c> you</c><00:36:29.050><c> don't</c><00:36:29.170><c> model</c>

00:36:29.580 --> 00:36:29.590 align:start position:0%
important because if you don't model
 

00:36:29.590 --> 00:36:31.770 align:start position:0%
important because if you don't model
your<00:36:29.770><c> flow</c><00:36:29.980><c> correctly</c><00:36:30.250><c> you</c><00:36:31.000><c> are</c><00:36:31.120><c> not</c><00:36:31.270><c> getting</c>

00:36:31.770 --> 00:36:31.780 align:start position:0%
your flow correctly you are not getting
 

00:36:31.780 --> 00:36:32.940 align:start position:0%
your flow correctly you are not getting
the<00:36:31.870><c> right</c><00:36:31.990><c> answers</c><00:36:32.410><c> out</c><00:36:32.650><c> of</c><00:36:32.680><c> your</c>

00:36:32.940 --> 00:36:32.950 align:start position:0%
the right answers out of your
 

00:36:32.950 --> 00:36:34.920 align:start position:0%
the right answers out of your
measurements<00:36:33.430><c> and</c><00:36:33.490><c> then</c><00:36:34.030><c> when</c><00:36:34.270><c> you</c><00:36:34.390><c> have</c><00:36:34.900><c> a</c>

00:36:34.920 --> 00:36:34.930 align:start position:0%
measurements and then when you have a
 

00:36:34.930 --> 00:36:37.590 align:start position:0%
measurements and then when you have a
great<00:36:35.350><c> model</c><00:36:35.740><c> for</c><00:36:35.770><c> a</c><00:36:35.950><c> workflow</c><00:36:36.310><c> you</c><00:36:37.030><c> know</c><00:36:37.150><c> you</c>

00:36:37.590 --> 00:36:37.600 align:start position:0%
great model for a workflow you know you
 

00:36:37.600 --> 00:36:39.330 align:start position:0%
great model for a workflow you know you
can<00:36:37.900><c> then</c><00:36:38.530><c> you</c><00:36:38.650><c> can</c><00:36:38.680><c> compare</c><00:36:39.100><c> what's</c>

00:36:39.330 --> 00:36:39.340 align:start position:0%
can then you can compare what's
 

00:36:39.340 --> 00:36:40.950 align:start position:0%
can then you can compare what's
implementations<00:36:40.060><c> and</c><00:36:40.270><c> see</c><00:36:40.510><c> that</c><00:36:40.690><c> if</c><00:36:40.840><c> you</c><00:36:40.930><c> have</c>

00:36:40.950 --> 00:36:40.960 align:start position:0%
implementations and see that if you have
 

00:36:40.960 --> 00:36:42.750 align:start position:0%
implementations and see that if you have
a<00:36:41.080><c> reader</c><00:36:41.440><c> manator</c><00:36:41.710><c> workload</c><00:36:42.280><c> and</c><00:36:42.460><c> the</c><00:36:42.520><c> real</c>

00:36:42.750 --> 00:36:42.760 align:start position:0%
a reader manator workload and the real
 

00:36:42.760 --> 00:36:44.390 align:start position:0%
a reader manator workload and the real
life<00:36:42.910><c> condition</c><00:36:43.420><c> lock-free</c>

00:36:44.390 --> 00:36:44.400 align:start position:0%
life condition lock-free
 

00:36:44.400 --> 00:36:47.400 align:start position:0%
life condition lock-free
algorithms<00:36:45.400><c> often</c><00:36:46.080><c> outperform</c><00:36:47.080><c> the</c>

00:36:47.400 --> 00:36:47.410 align:start position:0%
algorithms often outperform the
 

00:36:47.410 --> 00:36:49.830 align:start position:0%
algorithms often outperform the
velvetiness<00:36:48.340><c> who</c><00:36:48.490><c> has</c><00:36:48.610><c> logs</c><00:36:48.850><c> and</c><00:36:49.060><c> if</c><00:36:49.600><c> you</c><00:36:49.690><c> want</c>

00:36:49.830 --> 00:36:49.840 align:start position:0%
velvetiness who has logs and if you want
 

00:36:49.840 --> 00:36:52.380 align:start position:0%
velvetiness who has logs and if you want
to<00:36:49.990><c> learn</c><00:36:50.170><c> more</c><00:36:50.410><c> about</c><00:36:50.470><c> that</c><00:36:50.860><c> this</c><00:36:51.820><c> is</c><00:36:52.000><c> true</c>

00:36:52.380 --> 00:36:52.390 align:start position:0%
to learn more about that this is true
 

00:36:52.390 --> 00:36:55.130 align:start position:0%
to learn more about that this is true
great<00:36:52.690><c> book</c><00:36:52.870><c> I</c><00:36:52.990><c> would</c><00:36:53.140><c> recommend</c><00:36:53.430><c> the</c><00:36:54.430><c> one</c><00:36:54.580><c> is</c>

00:36:55.130 --> 00:36:55.140 align:start position:0%
great book I would recommend the one is
 

00:36:55.140 --> 00:36:58.460 align:start position:0%
great book I would recommend the one is
Java<00:36:56.140><c> concurrency</c><00:36:56.320><c> and</c><00:36:56.590><c> practice</c><00:36:57.160><c> by</c><00:36:57.310><c> Brian</c>

00:36:58.460 --> 00:36:58.470 align:start position:0%
Java concurrency and practice by Brian
 

00:36:58.470 --> 00:37:02.820 align:start position:0%
Java concurrency and practice by Brian
it's<00:36:59.470><c> really</c><00:37:00.240><c> good</c><00:37:01.240><c> book</c><00:37:01.570><c> for</c><00:37:01.830><c> practitioners</c>

00:37:02.820 --> 00:37:02.830 align:start position:0%
it's really good book for practitioners
 

00:37:02.830 --> 00:37:05.040 align:start position:0%
it's really good book for practitioners
with<00:37:03.130><c> the</c><00:37:03.280><c> only</c><00:37:03.550><c> downside</c><00:37:04.510><c> that</c><00:37:04.540><c> it</c><00:37:04.870><c> has</c>

00:37:05.040 --> 00:37:05.050 align:start position:0%
with the only downside that it has
 

00:37:05.050 --> 00:37:06.870 align:start position:0%
with the only downside that it has
examples<00:37:05.350><c> in</c><00:37:05.620><c> Java</c><00:37:05.860><c> this</c><00:37:06.100><c> is</c><00:37:06.310><c> slightly</c><00:37:06.640><c> too</c>

00:37:06.870 --> 00:37:06.880 align:start position:0%
examples in Java this is slightly too
 

00:37:06.880 --> 00:37:10.260 align:start position:0%
examples in Java this is slightly too
verbose<00:37:07.270><c> but</c><00:37:08.020><c> I</c><00:37:08.620><c> mean</c><00:37:08.860><c> there's</c><00:37:09.580><c> they</c><00:37:09.820><c> easily</c>

00:37:10.260 --> 00:37:10.270 align:start position:0%
verbose but I mean there's they easily
 

00:37:10.270 --> 00:37:13.380 align:start position:0%
verbose but I mean there's they easily
translate<00:37:10.780><c> it</c><00:37:10.840><c> in</c><00:37:10.930><c> Catalan</c><00:37:11.350><c> II</c><00:37:11.760><c> and</c><00:37:12.760><c> you</c><00:37:13.240><c> know</c>

00:37:13.380 --> 00:37:13.390 align:start position:0%
translate it in Catalan II and you know
 

00:37:13.390 --> 00:37:15.510 align:start position:0%
translate it in Catalan II and you know
save<00:37:13.660><c> you</c><00:37:13.780><c> a</c><00:37:13.810><c> lot</c><00:37:13.930><c> of</c><00:37:13.990><c> typing</c><00:37:14.260><c> but</c><00:37:14.950><c> and</c><00:37:15.370><c> the</c>

00:37:15.510 --> 00:37:15.520 align:start position:0%
save you a lot of typing but and the
 

00:37:15.520 --> 00:37:17.520 align:start position:0%
save you a lot of typing but and the
other<00:37:15.550><c> book</c><00:37:15.970><c> is</c><00:37:16.120><c> more</c><00:37:16.480><c> from</c><00:37:17.110><c> the</c><00:37:17.260><c> theoretical</c>

00:37:17.520 --> 00:37:17.530 align:start position:0%
other book is more from the theoretical
 

00:37:17.530 --> 00:37:19.980 align:start position:0%
other book is more from the theoretical
standpoint<00:37:17.950><c> they</c><00:37:18.820><c> are</c><00:37:18.940><c> the</c><00:37:19.060><c> most</c><00:37:19.210><c> processor</c>

00:37:19.980 --> 00:37:19.990 align:start position:0%
standpoint they are the most processor
 

00:37:19.990 --> 00:37:22.440 align:start position:0%
standpoint they are the most processor
programming<00:37:20.470><c> by</c><00:37:21.040><c> hello</c><00:37:21.250><c> here's</c><00:37:21.580><c> a</c><00:37:21.640><c> bit</c><00:37:21.820><c> and</c><00:37:22.060><c> it</c>

00:37:22.440 --> 00:37:22.450 align:start position:0%
programming by hello here's a bit and it
 

00:37:22.450 --> 00:37:25.010 align:start position:0%
programming by hello here's a bit and it
goes<00:37:23.320><c> deeper</c><00:37:23.860><c> into</c><00:37:23.890><c> the</c><00:37:24.130><c> theory</c><00:37:24.580><c> of</c>

00:37:25.010 --> 00:37:25.020 align:start position:0%
goes deeper into the theory of
 

00:37:25.020 --> 00:37:26.280 align:start position:0%
goes deeper into the theory of
concurrency

00:37:26.280 --> 00:37:26.290 align:start position:0%
concurrency
 

00:37:26.290 --> 00:37:28.650 align:start position:0%
concurrency
explains<00:37:27.040><c> lots</c><00:37:27.700><c> of</c><00:37:27.820><c> interesting</c><00:37:28.480><c> in</c>

00:37:28.650 --> 00:37:28.660 align:start position:0%
explains lots of interesting in
 

00:37:28.660 --> 00:37:29.400 align:start position:0%
explains lots of interesting in
non-trivial

00:37:29.400 --> 00:37:29.410 align:start position:0%
non-trivial
 

00:37:29.410 --> 00:37:32.890 align:start position:0%
non-trivial
lock-free<00:37:30.130><c> algorithms</c><00:37:30.760><c> in</c><00:37:31.330><c> a</c><00:37:31.480><c> deep</c><00:37:31.690><c> way</c>

00:37:32.890 --> 00:37:32.900 align:start position:0%
lock-free algorithms in a deep way
 

00:37:32.900 --> 00:37:36.519 align:start position:0%
lock-free algorithms in a deep way
so<00:37:33.609><c> for</c><00:37:34.609><c> anyone</c><00:37:34.969><c> who</c><00:37:35.180><c> is</c><00:37:35.269><c> interested</c><00:37:35.420><c> or</c><00:37:35.989><c> -</c>

00:37:36.519 --> 00:37:36.529 align:start position:0%
so for anyone who is interested or -
 

00:37:36.529 --> 00:37:38.680 align:start position:0%
so for anyone who is interested or -
that's<00:37:36.920><c> two</c><00:37:37.549><c> bucks</c><00:37:37.729><c> in</c><00:37:37.880><c> a</c><00:37:37.940><c> third-order</c><00:37:38.299><c> you</c>

00:37:38.680 --> 00:37:38.690 align:start position:0%
that's two bucks in a third-order you
 

00:37:38.690 --> 00:37:40.420 align:start position:0%
that's two bucks in a third-order you
can<00:37:38.869><c> start</c><00:37:39.109><c> with</c><00:37:39.289><c> either</c><00:37:39.499><c> one</c><00:37:39.979><c> depending</c><00:37:40.099><c> how</c>

00:37:40.420 --> 00:37:40.430 align:start position:0%
can start with either one depending how
 

00:37:40.430 --> 00:37:41.829 align:start position:0%
can start with either one depending how
your<00:37:40.549><c> mind</c><00:37:40.670><c> works</c><00:37:40.789><c> like</c><00:37:41.509><c> you're</c><00:37:41.719><c> more</c>

00:37:41.829 --> 00:37:41.839 align:start position:0%
your mind works like you're more
 

00:37:41.839 --> 00:37:44.009 align:start position:0%
your mind works like you're more
theoretically<00:37:42.319><c> or</c><00:37:42.619><c> practically</c><00:37:43.099><c> inclined</c>

00:37:44.009 --> 00:37:44.019 align:start position:0%
theoretically or practically inclined
 

00:37:44.019 --> 00:37:47.229 align:start position:0%
theoretically or practically inclined
there<00:37:45.019><c> -</c><00:37:45.380><c> good</c><00:37:45.979><c> complement</c><00:37:46.910><c> each</c><00:37:46.999><c> other</c>

00:37:47.229 --> 00:37:47.239 align:start position:0%
there - good complement each other
 

00:37:47.239 --> 00:37:51.849 align:start position:0%
there - good complement each other
really<00:37:47.479><c> well</c><00:37:47.900><c> and</c><00:37:48.940><c> really</c><00:37:49.940><c> nice</c><00:37:50.569><c> read</c><00:37:51.229><c> and</c>

00:37:51.849 --> 00:37:51.859 align:start position:0%
really well and really nice read and
 

00:37:51.859 --> 00:37:54.400 align:start position:0%
really well and really nice read and
some<00:37:52.400><c> links</c><00:37:52.609><c> at</c><00:37:53.119><c> the</c><00:37:53.150><c> end</c><00:37:53.359><c> so</c><00:37:53.719><c> I</c><00:37:53.749><c> mean</c><00:37:54.079><c> I</c><00:37:54.200><c> hope</c>

00:37:54.400 --> 00:37:54.410 align:start position:0%
some links at the end so I mean I hope
 

00:37:54.410 --> 00:37:57.459 align:start position:0%
some links at the end so I mean I hope
the<00:37:54.650><c> slides</c><00:37:54.859><c> will</c><00:37:55.009><c> be</c><00:37:55.039><c> posted</c><00:37:55.150><c> so</c><00:37:56.150><c> the</c><00:37:57.109><c> gym</c><00:37:57.319><c> age</c>

00:37:57.459 --> 00:37:57.469 align:start position:0%
the slides will be posted so the gym age
 

00:37:57.469 --> 00:38:00.039 align:start position:0%
the slides will be posted so the gym age
that<00:37:57.710><c> I've</c><00:37:57.890><c> used</c><00:37:58.039><c> for</c><00:37:58.160><c> benchmarking</c><00:37:58.819><c> the</c><00:37:59.119><c> the</c>

00:38:00.039 --> 00:38:00.049 align:start position:0%
that I've used for benchmarking the the
 

00:38:00.049 --> 00:38:01.599 align:start position:0%
that I've used for benchmarking the the
reference<00:38:00.559><c> to</c><00:38:00.710><c> content</c><00:38:01.160><c> that</c><00:38:01.190><c> I</c><00:38:01.309><c> use</c><00:38:01.460><c> my</c>

00:38:01.599 --> 00:38:01.609 align:start position:0%
reference to content that I use my
 

00:38:01.609 --> 00:38:04.450 align:start position:0%
reference to content that I use my
examples<00:38:02.059><c> and</c><00:38:02.349><c> atomic</c><00:38:03.349><c> food</c><00:38:03.559><c> that</c><00:38:03.739><c> lets</c><00:38:04.039><c> me</c>

00:38:04.450 --> 00:38:04.460 align:start position:0%
examples and atomic food that lets me
 

00:38:04.460 --> 00:38:06.910 align:start position:0%
examples and atomic food that lets me
write<00:38:04.729><c> it</c><00:38:04.999><c> all</c><00:38:05.269><c> in</c><00:38:05.509><c> a</c><00:38:05.749><c> nice</c><00:38:05.930><c> you</c><00:38:06.170><c> know</c><00:38:06.200><c> concise</c>

00:38:06.910 --> 00:38:06.920 align:start position:0%
write it all in a nice you know concise
 

00:38:06.920 --> 00:38:09.870 align:start position:0%
write it all in a nice you know concise
way<00:38:07.099><c> and</c><00:38:07.670><c> I'm</c><00:38:08.180><c> open</c><00:38:08.450><c> to</c><00:38:08.539><c> questions</c>

00:38:09.870 --> 00:38:09.880 align:start position:0%
way and I'm open to questions
 

00:38:09.880 --> 00:38:19.509 align:start position:0%
way and I'm open to questions
yeah<00:38:15.910><c> the</c><00:38:16.910><c> bench</c><00:38:17.089><c> managed</c><00:38:17.450><c> image</c><00:38:18.069><c> you</c><00:38:19.069><c> run</c><00:38:19.430><c> it</c>

00:38:19.509 --> 00:38:19.519 align:start position:0%
yeah the bench managed image you run it
 

00:38:19.519 --> 00:38:20.920 align:start position:0%
yeah the bench managed image you run it
with<00:38:19.549><c> the</c><00:38:19.759><c> number</c><00:38:19.999><c> of</c><00:38:20.089><c> threats</c><00:38:20.329><c> you</c><00:38:20.450><c> want</c><00:38:20.660><c> and</c>

00:38:20.920 --> 00:38:20.930 align:start position:0%
with the number of threats you want and
 

00:38:20.930 --> 00:38:24.400 align:start position:0%
with the number of threats you want and
it<00:38:21.859><c> will</c><00:38:21.920><c> just</c><00:38:22.609><c> runs</c><00:38:22.910><c> as</c><00:38:23.119><c> as</c><00:38:23.569><c> many</c><00:38:23.930><c> threats</c><00:38:24.229><c> as</c>

00:38:24.400 --> 00:38:24.410 align:start position:0%
it will just runs as as many threats as
 

00:38:24.410 --> 00:38:27.640 align:start position:0%
it will just runs as as many threats as
you<00:38:24.650><c> ask</c><00:38:24.920><c> it</c><00:38:25.190><c> for</c><00:38:25.479><c> you</c><00:38:26.479><c> know</c><00:38:26.599><c> because</c><00:38:26.960><c> my</c><00:38:27.170><c> state</c>

00:38:27.640 --> 00:38:27.650 align:start position:0%
you ask it for you know because my state
 

00:38:27.650 --> 00:38:29.739 align:start position:0%
you ask it for you know because my state
is<00:38:27.859><c> called</c><00:38:28.160><c> per</c><00:38:28.430><c> benchmark</c><00:38:28.969><c> there</c><00:38:29.269><c> is</c><00:38:29.359><c> a</c><00:38:29.390><c> scope</c>

00:38:29.739 --> 00:38:29.749 align:start position:0%
is called per benchmark there is a scope
 

00:38:29.749 --> 00:38:31.719 align:start position:0%
is called per benchmark there is a scope
benchmark<00:38:30.200><c> annotation</c><00:38:30.710><c> so</c><00:38:31.190><c> it</c><00:38:31.309><c> will</c><00:38:31.430><c> share</c>

00:38:31.719 --> 00:38:31.729 align:start position:0%
benchmark annotation so it will share
 

00:38:31.729 --> 00:38:34.930 align:start position:0%
benchmark annotation so it will share
this<00:38:32.029><c> state</c><00:38:32.299><c> between</c><00:38:32.479><c> all</c><00:38:32.839><c> the</c><00:38:32.989><c> stress</c><00:38:33.229><c> and</c><00:38:33.940><c> it</c>

00:38:34.930 --> 00:38:34.940 align:start position:0%
this state between all the stress and it
 

00:38:34.940 --> 00:38:39.430 align:start position:0%
this state between all the stress and it
just<00:38:37.329><c> they</c><00:38:38.329><c> do</c><00:38:38.479><c> well</c><00:38:38.630><c> use</c><00:38:38.839><c> operations</c><00:38:39.319><c> per</c>

00:38:39.430 --> 00:38:39.440 align:start position:0%
just they do well use operations per
 

00:38:39.440 --> 00:38:41.650 align:start position:0%
just they do well use operations per
second<00:38:39.799><c> so</c><00:38:39.920><c> in</c><00:38:40.130><c> vacations</c><00:38:40.670><c> of</c><00:38:40.849><c> my</c><00:38:41.119><c> this</c><00:38:41.420><c> is</c>

00:38:41.650 --> 00:38:41.660 align:start position:0%
second so in vacations of my this is
 

00:38:41.660 --> 00:38:43.839 align:start position:0%
second so in vacations of my this is
this<00:38:42.109><c> is</c><00:38:42.319><c> my</c><00:38:42.440><c> benchmark</c><00:38:42.710><c> method</c><00:38:43.219><c> and</c><00:38:43.400><c> the</c>

00:38:43.839 --> 00:38:43.849 align:start position:0%
this is my benchmark method and the
 

00:38:43.849 --> 00:38:46.239 align:start position:0%
this is my benchmark method and the
metric<00:38:44.210><c> I</c><00:38:44.299><c> show</c><00:38:44.479><c> is</c><00:38:44.690><c> up</c><00:38:44.930><c> operations</c><00:38:45.680><c> operation</c>

00:38:46.239 --> 00:38:46.249 align:start position:0%
metric I show is up operations operation
 

00:38:46.249 --> 00:38:50.279 align:start position:0%
metric I show is up operations operation
is<00:38:46.400><c> one</c><00:38:46.700><c> invocation</c><00:38:47.210><c> of</c><00:38:47.509><c> this</c><00:38:47.719><c> this</c><00:38:48.529><c> function</c>

00:38:50.279 --> 00:38:50.289 align:start position:0%
is one invocation of this this function
 

00:38:50.289 --> 00:38:52.660 align:start position:0%
is one invocation of this this function
number<00:38:51.289><c> of</c><00:38:51.380><c> methods</c><00:38:51.559><c> successfully</c><00:38:52.309><c> completed</c>

00:38:52.660 --> 00:38:52.670 align:start position:0%
number of methods successfully completed
 

00:38:52.670 --> 00:38:54.759 align:start position:0%
number of methods successfully completed
medicals<00:38:53.119><c> per</c><00:38:53.390><c> second</c><00:38:53.809><c> that's</c><00:38:54.109><c> that's</c><00:38:54.650><c> a</c>

00:38:54.759 --> 00:38:54.769 align:start position:0%
medicals per second that's that's a
 

00:38:54.769 --> 00:38:57.339 align:start position:0%
medicals per second that's that's a
measurement<00:38:55.039><c> that's</c><00:38:55.579><c> just</c><00:38:56.089><c> default</c><00:38:56.479><c> in</c><00:38:56.719><c> Gmail</c>

00:38:57.339 --> 00:38:57.349 align:start position:0%
measurement that's just default in Gmail
 

00:38:57.349 --> 00:38:59.170 align:start position:0%
measurement that's just default in Gmail
you<00:38:57.469><c> can</c><00:38:57.499><c> configure</c><00:38:58.069><c> what</c><00:38:58.609><c> you</c><00:38:58.700><c> want</c><00:38:58.880><c> to</c><00:38:58.999><c> see</c>

00:38:59.170 --> 00:38:59.180 align:start position:0%
you can configure what you want to see
 

00:38:59.180 --> 00:39:01.690 align:start position:0%
you can configure what you want to see
you<00:38:59.390><c> can</c><00:38:59.630><c> see</c><00:39:00.380><c> like</c><00:39:00.589><c> how</c><00:39:00.769><c> many</c><00:39:00.829><c> nine</c><00:39:01.279><c> seconds</c>

00:39:01.690 --> 00:39:01.700 align:start position:0%
you can see like how many nine seconds
 

00:39:01.700 --> 00:39:04.049 align:start position:0%
you can see like how many nine seconds
or<00:39:01.789><c> microseconds</c><00:39:02.359><c> into</c><00:39:02.719><c> but</c><00:39:03.410><c> default</c><00:39:03.829><c> is</c>

00:39:04.049 --> 00:39:04.059 align:start position:0%
or microseconds into but default is
 

00:39:04.059 --> 00:39:11.279 align:start position:0%
or microseconds into but default is
operations<00:39:05.059><c> per</c><00:39:05.210><c> second</c>

00:39:11.279 --> 00:39:11.289 align:start position:0%
 
 

00:39:11.289 --> 00:39:13.420 align:start position:0%
 
yeah<00:39:12.289><c> there</c><00:39:12.470><c> are</c><00:39:12.559><c> lots</c><00:39:12.710><c> of</c><00:39:12.859><c> no</c><00:39:13.099><c> of</c><00:39:13.160><c> course</c>

00:39:13.420 --> 00:39:13.430 align:start position:0%
yeah there are lots of no of course
 

00:39:13.430 --> 00:39:14.829 align:start position:0%
yeah there are lots of no of course
there<00:39:13.549><c> are</c><00:39:13.609><c> lots</c><00:39:13.789><c> of</c><00:39:13.910><c> ways</c><00:39:14.059><c> I</c><00:39:14.240><c> mean</c><00:39:14.359><c> actually</c>

00:39:14.829 --> 00:39:14.839 align:start position:0%
there are lots of ways I mean actually
 

00:39:14.839 --> 00:39:17.170 align:start position:0%
there are lots of ways I mean actually
if<00:39:14.900><c> you</c><00:39:14.990><c> read</c><00:39:15.260><c> this</c><00:39:15.440><c> book</c><00:39:15.880><c> there's</c><00:39:16.880><c> a</c><00:39:16.970><c> whole</c>

00:39:17.170 --> 00:39:17.180 align:start position:0%
if you read this book there's a whole
 

00:39:17.180 --> 00:39:19.180 align:start position:0%
if you read this book there's a whole
chapter<00:39:17.210><c> on</c><00:39:17.720><c> virus</c><00:39:18.170><c> techniques</c><00:39:18.680><c> to</c><00:39:18.890><c> make</c><00:39:19.039><c> it</c>

00:39:19.180 --> 00:39:19.190 align:start position:0%
chapter on virus techniques to make it
 

00:39:19.190 --> 00:39:21.430 align:start position:0%
chapter on virus techniques to make it
better<00:39:19.339><c> there's</c><00:39:20.180><c> a</c><00:39:20.240><c> whole</c><00:39:20.420><c> chapter</c><00:39:20.450><c> I</c><00:39:20.990><c> mean</c><00:39:21.200><c> I</c>

00:39:21.430 --> 00:39:21.440 align:start position:0%
better there's a whole chapter I mean I
 

00:39:21.440 --> 00:39:24.490 align:start position:0%
better there's a whole chapter I mean I
just<00:39:21.770><c> just</c><00:39:22.220><c> this</c><00:39:22.730><c> prison</c><00:39:23.539><c> is</c><00:39:23.599><c> too</c><00:39:23.869><c> small</c><00:39:24.170><c> to</c><00:39:24.349><c> go</c>

00:39:24.490 --> 00:39:24.500 align:start position:0%
just just this prison is too small to go
 

00:39:24.500 --> 00:39:27.670 align:start position:0%
just just this prison is too small to go
my<00:39:25.099><c> goal</c><00:39:25.490><c> was</c><00:39:25.760><c> to</c><00:39:25.789><c> if</c><00:39:26.750><c> you</c><00:39:26.869><c> get</c><00:39:27.020><c> interested</c><00:39:27.319><c> if</c>

00:39:27.670 --> 00:39:27.680 align:start position:0%
my goal was to if you get interested if
 

00:39:27.680 --> 00:39:29.170 align:start position:0%
my goal was to if you get interested if
and<00:39:27.920><c> if</c><00:39:28.160><c> you</c><00:39:28.280><c> want</c><00:39:28.490><c> to</c><00:39:28.609><c> know</c><00:39:28.700><c> how</c><00:39:28.910><c> to</c><00:39:28.970><c> do</c><00:39:29.150><c> just</c>

00:39:29.170 --> 00:39:29.180 align:start position:0%
and if you want to know how to do just
 

00:39:29.180 --> 00:39:44.049 align:start position:0%
and if you want to know how to do just
read<00:39:29.539><c> this</c><00:39:29.690><c> book</c><00:39:32.619><c> excuse</c><00:39:33.619><c> me</c><00:39:34.030><c> yeah</c><00:39:36.849><c> yep</c><00:39:43.059><c> there</c>

00:39:44.049 --> 00:39:44.059 align:start position:0%
read this book excuse me yeah yep there
 

00:39:44.059 --> 00:39:46.480 align:start position:0%
read this book excuse me yeah yep there
is<00:39:44.150><c> a</c><00:39:44.180><c> lot</c><00:39:44.450><c> of</c><00:39:44.530><c> libraries</c><00:39:45.589><c> first</c><00:39:46.069><c> of</c><00:39:46.160><c> all</c><00:39:46.220><c> Java</c>

00:39:46.480 --> 00:39:46.490 align:start position:0%
is a lot of libraries first of all Java
 

00:39:46.490 --> 00:39:48.039 align:start position:0%
is a lot of libraries first of all Java
library<00:39:46.789><c> contains</c><00:39:47.240><c> some</c><00:39:47.569><c> of</c><00:39:47.599><c> the</c><00:39:47.720><c> lock</c><00:39:47.900><c> for</c>

00:39:48.039 --> 00:39:48.049 align:start position:0%
library contains some of the lock for
 

00:39:48.049 --> 00:39:49.870 align:start position:0%
library contains some of the lock for
algorithms<00:39:48.260><c> in</c><00:39:48.619><c> the</c><00:39:48.740><c> standard</c><00:39:49.099><c> library</c><00:39:49.250><c> like</c>

00:39:49.870 --> 00:39:49.880 align:start position:0%
algorithms in the standard library like
 

00:39:49.880 --> 00:39:52.480 align:start position:0%
algorithms in the standard library like
concurrent<00:39:50.630><c> hash</c><00:39:50.780><c> phase</c><00:39:51.109><c> map</c><00:39:51.319><c> and</c><00:39:51.740><c> and</c><00:39:52.160><c> and</c>

00:39:52.480 --> 00:39:52.490 align:start position:0%
concurrent hash phase map and and and
 

00:39:52.490 --> 00:39:56.620 align:start position:0%
concurrent hash phase map and and and
others<00:39:52.849><c> concurrent</c><00:39:53.510><c> skip</c><00:39:53.720><c> list</c><00:39:54.490><c> so</c><00:39:55.490><c> but</c><00:39:56.420><c> the</c>

00:39:56.620 --> 00:39:56.630 align:start position:0%
others concurrent skip list so but the
 

00:39:56.630 --> 00:39:59.049 align:start position:0%
others concurrent skip list so but the
the<00:39:57.200><c> well</c><00:39:58.010><c> I</c><00:39:58.039><c> found</c><00:39:58.369><c> from</c><00:39:58.670><c> a</c><00:39:58.730><c> practical</c>

00:39:59.049 --> 00:39:59.059 align:start position:0%
the well I found from a practical
 

00:39:59.059 --> 00:40:01.180 align:start position:0%
the well I found from a practical
experience<00:39:59.480><c> and</c><00:39:59.839><c> if</c><00:40:00.140><c> you</c><00:40:00.230><c> face</c><00:40:00.470><c> a</c><00:40:00.500><c> real</c><00:40:00.829><c> life</c>

00:40:01.180 --> 00:40:01.190 align:start position:0%
experience and if you face a real life
 

00:40:01.190 --> 00:40:03.130 align:start position:0%
experience and if you face a real life
problem<00:40:01.789><c> the</c><00:40:02.059><c> problem</c><00:40:02.359><c> is</c><00:40:02.420><c> locked</c><00:40:02.539><c> algorithms</c>

00:40:03.130 --> 00:40:03.140 align:start position:0%
problem the problem is locked algorithms
 

00:40:03.140 --> 00:40:06.029 align:start position:0%
problem the problem is locked algorithms
they<00:40:03.890><c> don't</c><00:40:04.099><c> compose</c><00:40:04.430><c> so</c><00:40:05.150><c> somebody</c><00:40:05.599><c> gave</c><00:40:05.780><c> me</c>

00:40:06.029 --> 00:40:06.039 align:start position:0%
they don't compose so somebody gave me
 

00:40:06.039 --> 00:40:08.380 align:start position:0%
they don't compose so somebody gave me
you<00:40:07.039><c> know</c><00:40:07.069><c> ready</c><00:40:07.549><c> to</c><00:40:07.730><c> use</c><00:40:07.849><c> concurrent</c><00:40:08.329><c> hash</c>

00:40:08.380 --> 00:40:08.390 align:start position:0%
you know ready to use concurrent hash
 

00:40:08.390 --> 00:40:10.270 align:start position:0%
you know ready to use concurrent hash
map<00:40:08.750><c> and</c><00:40:08.990><c> I</c><00:40:09.020><c> have</c><00:40:09.200><c> a</c><00:40:09.230><c> slightly</c><00:40:09.559><c> different</c>

00:40:10.270 --> 00:40:10.280 align:start position:0%
map and I have a slightly different
 

00:40:10.280 --> 00:40:13.210 align:start position:0%
map and I have a slightly different
problem<00:40:10.970><c> like</c><00:40:11.720><c> some</c><00:40:12.260><c> operations</c><00:40:12.770><c> it</c><00:40:12.859><c> doesn't</c>

00:40:13.210 --> 00:40:13.220 align:start position:0%
problem like some operations it doesn't
 

00:40:13.220 --> 00:40:15.130 align:start position:0%
problem like some operations it doesn't
natively<00:40:13.490><c> support</c><00:40:13.940><c> I</c><00:40:14.059><c> cannot</c><00:40:14.510><c> unlike</c><00:40:14.900><c> I</c>

00:40:15.130 --> 00:40:15.140 align:start position:0%
natively support I cannot unlike I
 

00:40:15.140 --> 00:40:17.140 align:start position:0%
natively support I cannot unlike I
cannot<00:40:15.500><c> just</c><00:40:15.680><c> extend</c><00:40:16.130><c> it</c><00:40:16.250><c> there's</c><00:40:16.579><c> no</c><00:40:16.760><c> way</c><00:40:16.940><c> I</c>

00:40:17.140 --> 00:40:17.150 align:start position:0%
cannot just extend it there's no way I
 

00:40:17.150 --> 00:40:18.700 align:start position:0%
cannot just extend it there's no way I
have<00:40:17.390><c> to</c><00:40:17.510><c> rewrite</c><00:40:17.869><c> the</c><00:40:17.930><c> whole</c><00:40:18.049><c> data</c><00:40:18.349><c> structure</c>

00:40:18.700 --> 00:40:18.710 align:start position:0%
have to rewrite the whole data structure
 

00:40:18.710 --> 00:40:20.559 align:start position:0%
have to rewrite the whole data structure
from<00:40:18.829><c> scratch</c><00:40:19.160><c> so</c><00:40:19.579><c> in</c><00:40:19.640><c> practice</c><00:40:20.059><c> when</c><00:40:20.450><c> you</c>

00:40:20.559 --> 00:40:20.569 align:start position:0%
from scratch so in practice when you
 

00:40:20.569 --> 00:40:22.480 align:start position:0%
from scratch so in practice when you
face<00:40:21.020><c> the</c><00:40:21.049><c> scalability</c><00:40:21.529><c> challenges</c><00:40:22.220><c> in</c><00:40:22.339><c> real</c>

00:40:22.480 --> 00:40:22.490 align:start position:0%
face the scalability challenges in real
 

00:40:22.490 --> 00:40:25.390 align:start position:0%
face the scalability challenges in real
life<00:40:22.700><c> you</c><00:40:23.270><c> almost</c><00:40:24.170><c> always</c><00:40:24.380><c> find</c><00:40:24.529><c> that</c><00:40:25.039><c> no</c>

00:40:25.390 --> 00:40:25.400 align:start position:0%
life you almost always find that no
 

00:40:25.400 --> 00:40:28.059 align:start position:0%
life you almost always find that no
existing<00:40:26.059><c> controller</c><00:40:26.809><c> solves</c><00:40:27.529><c> your</c><00:40:27.559><c> problem</c>

00:40:28.059 --> 00:40:28.069 align:start position:0%
existing controller solves your problem
 

00:40:28.069 --> 00:40:30.460 align:start position:0%
existing controller solves your problem
the<00:40:29.000><c> way</c><00:40:29.119><c> you</c><00:40:29.180><c> want</c><00:40:29.510><c> you</c><00:40:29.690><c> still</c><00:40:30.079><c> have</c><00:40:30.260><c> to</c><00:40:30.380><c> write</c>

00:40:30.460 --> 00:40:30.470 align:start position:0%
the way you want you still have to write
 

00:40:30.470 --> 00:40:31.960 align:start position:0%
the way you want you still have to write
it<00:40:30.589><c> from</c><00:40:30.710><c> scratch</c><00:40:30.799><c> and</c><00:40:31.369><c> again</c><00:40:31.609><c> it</c><00:40:31.819><c> doesn't</c>

00:40:31.960 --> 00:40:31.970 align:start position:0%
it from scratch and again it doesn't
 

00:40:31.970 --> 00:40:33.519 align:start position:0%
it from scratch and again it doesn't
happen<00:40:32.150><c> often</c><00:40:32.450><c> because</c><00:40:32.900><c> most</c><00:40:33.079><c> of</c><00:40:33.140><c> the</c><00:40:33.230><c> damages</c>

00:40:33.519 --> 00:40:33.529 align:start position:0%
happen often because most of the damages
 

00:40:33.529 --> 00:40:35.260 align:start position:0%
happen often because most of the damages
write<00:40:33.740><c> the</c><00:40:33.859><c> code</c><00:40:34.010><c> just</c><00:40:34.160><c> works</c><00:40:34.400><c> I</c><00:40:34.609><c> mean</c><00:40:35.000><c> in</c><00:40:35.150><c> any</c>

00:40:35.260 --> 00:40:35.270 align:start position:0%
write the code just works I mean in any
 

00:40:35.270 --> 00:40:37.120 align:start position:0%
write the code just works I mean in any
type<00:40:35.450><c> of</c><00:40:35.569><c> complication</c><00:40:36.109><c> most</c><00:40:36.710><c> of</c><00:40:36.829><c> the</c><00:40:36.920><c> code</c>

00:40:37.120 --> 00:40:37.130 align:start position:0%
type of complication most of the code
 

00:40:37.130 --> 00:40:39.010 align:start position:0%
type of complication most of the code
just<00:40:37.430><c> is</c><00:40:37.670><c> not</c><00:40:37.819><c> performance</c><00:40:38.390><c> sensitive</c><00:40:38.510><c> at</c><00:40:38.869><c> all</c>

00:40:39.010 --> 00:40:39.020 align:start position:0%
just is not performance sensitive at all
 

00:40:39.020 --> 00:40:41.319 align:start position:0%
just is not performance sensitive at all
there's<00:40:39.559><c> at</c><00:40:39.829><c> most</c><00:40:40.039><c> one</c><00:40:40.430><c> percent</c><00:40:40.849><c> of</c><00:40:41.000><c> your</c><00:40:41.119><c> code</c>

00:40:41.319 --> 00:40:41.329 align:start position:0%
there's at most one percent of your code
 

00:40:41.329 --> 00:40:43.569 align:start position:0%
there's at most one percent of your code
that<00:40:41.569><c> needs</c><00:40:42.109><c> this</c><00:40:42.410><c> attention</c><00:40:42.770><c> to</c><00:40:43.010><c> scalability</c>

00:40:43.569 --> 00:40:43.579 align:start position:0%
that needs this attention to scalability
 

00:40:43.579 --> 00:40:46.029 align:start position:0%
that needs this attention to scalability
performance<00:40:44.270><c> and</c><00:40:44.839><c> usually</c><00:40:45.529><c> writing</c>

00:40:46.029 --> 00:40:46.039 align:start position:0%
performance and usually writing
 

00:40:46.039 --> 00:40:48.910 align:start position:0%
performance and usually writing
something<00:40:46.660><c> specifically</c><00:40:47.660><c> if</c><00:40:47.779><c> if</c><00:40:48.109><c> again</c><00:40:48.440><c> if</c>

00:40:48.910 --> 00:40:48.920 align:start position:0%
something specifically if if again if
 

00:40:48.920 --> 00:40:50.950 align:start position:0%
something specifically if if again if
your<00:40:49.339><c> business</c><00:40:49.880><c> domain</c><00:40:50.329><c> is</c><00:40:50.539><c> where</c>

00:40:50.950 --> 00:40:50.960 align:start position:0%
your business domain is where
 

00:40:50.960 --> 00:40:52.539 align:start position:0%
your business domain is where
performance<00:40:51.440><c> matters</c><00:40:51.589><c> if</c><00:40:51.950><c> you</c><00:40:52.069><c> care</c><00:40:52.339><c> bus</c>

00:40:52.539 --> 00:40:52.549 align:start position:0%
performance matters if you care bus
 

00:40:52.549 --> 00:40:54.910 align:start position:0%
performance matters if you care bus
codes<00:40:52.970><c> if</c><00:40:53.119><c> you</c><00:40:53.240><c> want</c><00:40:53.420><c> to</c><00:40:53.539><c> analyze</c><00:40:54.109><c> this</c><00:40:54.680><c> real</c>

00:40:54.910 --> 00:40:54.920 align:start position:0%
codes if you want to analyze this real
 

00:40:54.920 --> 00:40:57.010 align:start position:0%
codes if you want to analyze this real
term<00:40:55.130><c> big</c><00:40:55.520><c> data</c><00:40:55.549><c> work</c><00:40:56.000><c> clothes</c><00:40:56.329><c> then</c><00:40:56.839><c> it's</c>

00:40:57.010 --> 00:40:57.020 align:start position:0%
term big data work clothes then it's
 

00:40:57.020 --> 00:40:59.559 align:start position:0%
term big data work clothes then it's
usually<00:40:57.349><c> pays</c><00:40:57.740><c> off</c><00:40:57.920><c> in</c><00:40:58.130><c> writing</c><00:40:58.579><c> in</c><00:40:59.150><c> writing</c>

00:40:59.559 --> 00:40:59.569 align:start position:0%
usually pays off in writing in writing
 

00:40:59.569 --> 00:41:08.079 align:start position:0%
usually pays off in writing in writing
your<00:40:59.750><c> own</c><00:40:59.990><c> customized</c><00:41:00.500><c> invalidation</c>

00:41:08.079 --> 00:41:08.089 align:start position:0%
 
 

00:41:08.089 --> 00:41:09.819 align:start position:0%
 
oh<00:41:08.119><c> that's</c><00:41:08.989><c> that's</c><00:41:09.229><c> a</c><00:41:09.410><c> really</c><00:41:09.529><c> hard</c><00:41:09.739><c> question</c>

00:41:09.819 --> 00:41:09.829 align:start position:0%
oh that's that's a really hard question
 

00:41:09.829 --> 00:41:12.999 align:start position:0%
oh that's that's a really hard question
I<00:41:10.400><c> mean</c><00:41:10.670><c> there's</c><00:41:11.479><c> it</c><00:41:11.779><c> it's</c><00:41:12.109><c> a</c><00:41:12.259><c> thriving</c><00:41:12.680><c> area</c>

00:41:12.999 --> 00:41:13.009 align:start position:0%
I mean there's it it's a thriving area
 

00:41:13.009 --> 00:41:15.729 align:start position:0%
I mean there's it it's a thriving area
of<00:41:13.249><c> research</c><00:41:13.670><c> and</c><00:41:13.999><c> there's</c><00:41:14.569><c> lots</c><00:41:14.900><c> of</c><00:41:15.079><c> our</c>

00:41:15.729 --> 00:41:15.739 align:start position:0%
of research and there's lots of our
 

00:41:15.739 --> 00:41:18.660 align:start position:0%
of research and there's lots of our
formal<00:41:16.249><c> methods</c><00:41:16.640><c> to</c><00:41:17.359><c> produce</c><00:41:17.930><c> those</c><00:41:18.289><c> proof</c>

00:41:18.660 --> 00:41:18.670 align:start position:0%
formal methods to produce those proof
 

00:41:18.670 --> 00:41:21.130 align:start position:0%
formal methods to produce those proof
the<00:41:19.670><c> problem</c><00:41:20.059><c> is</c><00:41:20.180><c> all</c><00:41:20.329><c> the</c><00:41:20.449><c> formal</c><00:41:20.809><c> methods</c>

00:41:21.130 --> 00:41:21.140 align:start position:0%
the problem is all the formal methods
 

00:41:21.140 --> 00:41:23.289 align:start position:0%
the problem is all the formal methods
that<00:41:21.380><c> first</c><00:41:22.249><c> of</c><00:41:22.309><c> all</c><00:41:22.369><c> they</c><00:41:22.519><c> don't</c><00:41:22.699><c> scale</c><00:41:22.999><c> to</c>

00:41:23.289 --> 00:41:23.299 align:start position:0%
that first of all they don't scale to
 

00:41:23.299 --> 00:41:25.630 align:start position:0%
that first of all they don't scale to
beacons<00:41:23.809><c> complex</c><00:41:24.380><c> algorithms</c><00:41:24.890><c> the</c><00:41:25.309><c> second</c>

00:41:25.630 --> 00:41:25.640 align:start position:0%
beacons complex algorithms the second
 

00:41:25.640 --> 00:41:27.819 align:start position:0%
beacons complex algorithms the second
problem<00:41:25.759><c> is</c><00:41:26.089><c> like</c><00:41:26.989><c> you</c><00:41:27.259><c> write</c><00:41:27.469><c> in</c><00:41:27.619><c> some</c>

00:41:27.819 --> 00:41:27.829 align:start position:0%
problem is like you write in some
 

00:41:27.829 --> 00:41:30.910 align:start position:0%
problem is like you write in some
special<00:41:28.489><c> language</c><00:41:28.670><c> your</c><00:41:29.359><c> code</c><00:41:29.749><c> then</c><00:41:30.410><c> you</c><00:41:30.739><c> have</c>

00:41:30.910 --> 00:41:30.920 align:start position:0%
special language your code then you have
 

00:41:30.920 --> 00:41:32.469 align:start position:0%
special language your code then you have
approval<00:41:31.339><c> that</c><00:41:31.549><c> would</c><00:41:31.729><c> prove</c><00:41:31.939><c> your</c><00:41:32.089><c> code</c><00:41:32.269><c> but</c>

00:41:32.469 --> 00:41:32.479 align:start position:0%
approval that would prove your code but
 

00:41:32.479 --> 00:41:34.599 align:start position:0%
approval that would prove your code but
then<00:41:32.719><c> the</c><00:41:33.589><c> complex</c><00:41:34.130><c> problem</c><00:41:34.369><c> how</c><00:41:34.549><c> you</c>

00:41:34.599 --> 00:41:34.609 align:start position:0%
then the complex problem how you
 

00:41:34.609 --> 00:41:37.479 align:start position:0%
then the complex problem how you
translate<00:41:35.119><c> this</c><00:41:35.269><c> proven</c><00:41:35.779><c> algorithm</c><00:41:36.410><c> into</c><00:41:37.279><c> the</c>

00:41:37.479 --> 00:41:37.489 align:start position:0%
translate this proven algorithm into the
 

00:41:37.489 --> 00:41:39.370 align:start position:0%
translate this proven algorithm into the
actual<00:41:38.059><c> code</c><00:41:38.150><c> how</c><00:41:38.599><c> you</c><00:41:38.660><c> make</c><00:41:38.900><c> sure</c><00:41:38.930><c> you</c><00:41:39.229><c> have</c>

00:41:39.370 --> 00:41:39.380 align:start position:0%
actual code how you make sure you have
 

00:41:39.380 --> 00:41:41.829 align:start position:0%
actual code how you make sure you have
not<00:41:39.559><c> introduced</c><00:41:40.279><c> any</c><00:41:40.369><c> backs</c><00:41:40.729><c> bugs</c><00:41:41.479><c> while</c>

00:41:41.829 --> 00:41:41.839 align:start position:0%
not introduced any backs bugs while
 

00:41:41.839 --> 00:41:45.099 align:start position:0%
not introduced any backs bugs while
while<00:41:42.349><c> making</c><00:41:43.160><c> the</c><00:41:43.369><c> switch</c><00:41:43.519><c> so</c><00:41:43.729><c> so</c><00:41:44.359><c> what's</c>

00:41:45.099 --> 00:41:45.109 align:start position:0%
while making the switch so so what's
 

00:41:45.109 --> 00:41:47.319 align:start position:0%
while making the switch so so what's
more<00:41:45.439><c> a</c><00:41:45.589><c> practical</c><00:41:46.130><c> pragmatical</c><00:41:46.729><c> question</c><00:41:47.180><c> is</c>

00:41:47.319 --> 00:41:47.329 align:start position:0%
more a practical pragmatical question is
 

00:41:47.329 --> 00:41:50.679 align:start position:0%
more a practical pragmatical question is
how<00:41:47.749><c> do</c><00:41:47.809><c> I</c><00:41:47.930><c> test</c><00:41:48.369><c> that</c><00:41:49.369><c> is</c><00:41:49.519><c> correct</c><00:41:49.939><c> and</c><00:41:50.119><c> for</c>

00:41:50.679 --> 00:41:50.689 align:start position:0%
how do I test that is correct and for
 

00:41:50.689 --> 00:41:51.969 align:start position:0%
how do I test that is correct and for
this<00:41:50.779><c> purpose</c><00:41:51.140><c> there</c><00:41:51.439><c> was</c><00:41:51.619><c> a</c><00:41:51.650><c> bunch</c><00:41:51.890><c> of</c>

00:41:51.969 --> 00:41:51.979 align:start position:0%
this purpose there was a bunch of
 

00:41:51.979 --> 00:41:53.620 align:start position:0%
this purpose there was a bunch of
framework<00:41:52.369><c> sexually</c><00:41:52.819><c> there</c><00:41:52.999><c> is</c><00:41:53.119><c> I</c><00:41:53.150><c> don't</c><00:41:53.539><c> have</c>

00:41:53.620 --> 00:41:53.630 align:start position:0%
framework sexually there is I don't have
 

00:41:53.630 --> 00:41:55.479 align:start position:0%
framework sexually there is I don't have
a<00:41:53.749><c> link</c><00:41:53.989><c> there</c><00:41:54.170><c> is</c><00:41:54.259><c> if</c><00:41:54.619><c> you</c><00:41:54.829><c> google</c><00:41:55.219><c> for</c>

00:41:55.479 --> 00:41:55.489 align:start position:0%
a link there is if you google for
 

00:41:55.489 --> 00:41:59.529 align:start position:0%
a link there is if you google for
example<00:41:56.890><c> there</c><00:41:57.890><c> is</c><00:41:58.009><c> link</c><00:41:58.309><c> check</c><00:41:58.549><c> to</c><00:41:58.759><c> open</c>

00:41:59.529 --> 00:41:59.539 align:start position:0%
example there is link check to open
 

00:41:59.539 --> 00:42:01.329 align:start position:0%
example there is link check to open
source<00:41:59.749><c> ELISA</c><00:42:00.049><c> for</c><00:42:00.289><c> example</c><00:42:00.589><c> check</c><00:42:00.859><c> veneers</c>

00:42:01.329 --> 00:42:01.339 align:start position:0%
source ELISA for example check veneers
 

00:42:01.339 --> 00:42:03.400 align:start position:0%
source ELISA for example check veneers
ability<00:42:01.819><c> of</c><00:42:02.029><c> your</c><00:42:02.329><c> data</c><00:42:02.539><c> structures</c><00:42:02.989><c> and</c><00:42:03.170><c> a</c>

00:42:03.400 --> 00:42:03.410 align:start position:0%
ability of your data structures and a
 

00:42:03.410 --> 00:42:06.160 align:start position:0%
ability of your data structures and a
multiple<00:42:04.249><c> threads</c><00:42:04.519><c> it's</c><00:42:05.390><c> not</c><00:42:05.599><c> it</c><00:42:05.900><c> doesn't</c>

00:42:06.160 --> 00:42:06.170 align:start position:0%
multiple threads it's not it doesn't
 

00:42:06.170 --> 00:42:07.569 align:start position:0%
multiple threads it's not it doesn't
prove<00:42:06.319><c> you</c><00:42:06.499><c> anything</c><00:42:06.829><c> but</c><00:42:07.160><c> it</c><00:42:07.309><c> lets</c><00:42:07.489><c> you</c>

00:42:07.569 --> 00:42:07.579 align:start position:0%
prove you anything but it lets you
 

00:42:07.579 --> 00:42:10.870 align:start position:0%
prove you anything but it lets you
quickly<00:42:08.329><c> find</c><00:42:08.569><c> common</c><00:42:09.319><c> common</c><00:42:10.160><c> bugs</c><00:42:10.369><c> that</c><00:42:10.640><c> you</c>

00:42:10.870 --> 00:42:10.880 align:start position:0%
quickly find common common bugs that you
 

00:42:10.880 --> 00:42:13.120 align:start position:0%
quickly find common common bugs that you
did<00:42:11.119><c> and</c><00:42:11.509><c> oh</c><00:42:12.170><c> I'll</c><00:42:12.380><c> prove</c><00:42:12.559><c> is</c><00:42:12.679><c> the</c><00:42:12.769><c> work</c><00:42:12.890><c> in</c><00:42:13.009><c> the</c>

00:42:13.120 --> 00:42:13.130 align:start position:0%
did and oh I'll prove is the work in the
 

00:42:13.130 --> 00:42:14.709 align:start position:0%
did and oh I'll prove is the work in the
rest<00:42:13.309><c> of</c><00:42:13.400><c> us</c><00:42:13.489><c> I've</c><00:42:13.640><c> been</c><00:42:13.819><c> I've</c><00:42:14.150><c> been</c><00:42:14.209><c> involved</c>

00:42:14.709 --> 00:42:14.719 align:start position:0%
rest of us I've been I've been involved
 

00:42:14.719 --> 00:42:17.079 align:start position:0%
rest of us I've been I've been involved
in<00:42:14.809><c> its</c><00:42:15.170><c> design</c><00:42:15.739><c> you</c><00:42:15.859><c> know</c><00:42:15.979><c> and</c><00:42:16.189><c> creation</c><00:42:17.059><c> of</c>

00:42:17.079 --> 00:42:17.089 align:start position:0%
in its design you know and creation of
 

00:42:17.089 --> 00:42:20.709 align:start position:0%
in its design you know and creation of
this<00:42:17.269><c> tool</c><00:42:17.509><c> so</c><00:42:18.999><c> but</c><00:42:19.999><c> not</c><00:42:20.150><c> tools</c><00:42:20.509><c> there</c><00:42:20.660><c> is</c>

00:42:20.709 --> 00:42:20.719 align:start position:0%
this tool so but not tools there is
 

00:42:20.719 --> 00:42:22.479 align:start position:0%
this tool so but not tools there is
nothing<00:42:21.019><c> entry</c><00:42:21.439><c> and</c><00:42:21.589><c> that</c><00:42:21.829><c> from</c><00:42:22.160><c> you</c><00:42:22.369><c> know</c>

00:42:22.479 --> 00:42:22.489 align:start position:0%
nothing entry and that from you know
 

00:42:22.489 --> 00:42:24.819 align:start position:0%
nothing entry and that from you know
design<00:42:23.150><c> to</c><00:42:23.420><c> unfortunately</c><00:42:24.049><c> and</c><00:42:24.199><c> that's</c><00:42:24.439><c> still</c>

00:42:24.819 --> 00:42:24.829 align:start position:0%
design to unfortunately and that's still
 

00:42:24.829 --> 00:42:26.679 align:start position:0%
design to unfortunately and that's still
open<00:42:24.949><c> question</c><00:42:25.369><c> hopefully</c><00:42:25.549><c> somebody</c><00:42:26.059><c> solves</c>

00:42:26.679 --> 00:42:26.689 align:start position:0%
open question hopefully somebody solves
 

00:42:26.689 --> 00:42:29.669 align:start position:0%
open question hopefully somebody solves
it<00:42:26.959><c> some</c><00:42:27.619><c> point</c><00:42:27.859><c> in</c><00:42:28.009><c> the</c><00:42:28.099><c> future</c>

00:42:29.669 --> 00:42:29.679 align:start position:0%
it some point in the future
 

00:42:29.679 --> 00:42:39.530 align:start position:0%
it some point in the future
yep

00:42:39.530 --> 00:42:39.540 align:start position:0%
 
 

00:42:39.540 --> 00:42:44.510 align:start position:0%
 
it's<00:42:40.020><c> a</c><00:42:40.230><c> is</c><00:42:40.530><c> Java</c><00:42:41.520><c> if</c><00:42:41.940><c> you</c><00:42:42.380><c> if</c><00:42:43.380><c> you</c><00:42:43.590><c> replace</c><00:42:44.310><c> the</c>

00:42:44.510 --> 00:42:44.520 align:start position:0%
it's a is Java if you if you replace the
 

00:42:44.520 --> 00:42:48.980 align:start position:0%
it's a is Java if you if you replace the
synchronized<00:42:45.090><c> with</c><00:42:47.450><c> whistling</c><00:42:48.450><c> words</c><00:42:48.750><c> my</c>

00:42:48.980 --> 00:42:48.990 align:start position:0%
synchronized with whistling words my
 

00:42:48.990 --> 00:42:50.240 align:start position:0%
synchronized with whistling words my
sink<00:42:49.200><c> right</c><00:42:49.380><c> so</c><00:42:49.590><c> you</c><00:42:49.650><c> pee</c><00:42:49.860><c> yeah</c><00:42:49.980><c> you</c><00:42:50.040><c> can</c>

00:42:50.240 --> 00:42:50.250 align:start position:0%
sink right so you pee yeah you can
 

00:42:50.250 --> 00:42:53.090 align:start position:0%
sink right so you pee yeah you can
replace<00:42:50.460><c> synchronized</c><00:42:50.970><c> with</c><00:42:51.770><c> javis</c><00:42:52.770><c> rented</c>

00:42:53.090 --> 00:42:53.100 align:start position:0%
replace synchronized with javis rented
 

00:42:53.100 --> 00:42:55.610 align:start position:0%
replace synchronized with javis rented
lock<00:42:53.280><c> you'll</c><00:42:53.970><c> get</c><00:42:54.180><c> approximately</c><00:42:54.990><c> the</c><00:42:55.470><c> same</c>

00:42:55.610 --> 00:42:55.620 align:start position:0%
lock you'll get approximately the same
 

00:42:55.620 --> 00:42:57.350 align:start position:0%
lock you'll get approximately the same
performance<00:42:55.920><c> I</c><00:42:56.160><c> mean</c><00:42:56.190><c> because</c><00:42:56.520><c> inside</c>

00:42:57.350 --> 00:42:57.360 align:start position:0%
performance I mean because inside
 

00:42:57.360 --> 00:42:59.270 align:start position:0%
performance I mean because inside
they're<00:42:57.540><c> very</c><00:42:57.780><c> similar</c><00:42:58.110><c> I</c><00:42:58.470><c> mean</c><00:42:58.590><c> it</c><00:42:59.070><c> just</c>

00:42:59.270 --> 00:42:59.280 align:start position:0%
they're very similar I mean it just
 

00:42:59.280 --> 00:43:03.920 align:start position:0%
they're very similar I mean it just
synchronize<00:43:00.060><c> it's</c><00:43:00.570><c> just</c><00:43:00.930><c> less</c><00:43:01.710><c> code</c><00:43:02.100><c> and</c><00:43:02.930><c> with</c>

00:43:03.920 --> 00:43:03.930 align:start position:0%
synchronize it's just less code and with
 

00:43:03.930 --> 00:43:05.690 align:start position:0%
synchronize it's just less code and with
reinterred<00:43:04.470><c> block</c><00:43:04.740><c> actually</c><00:43:04.920><c> in</c><00:43:05.280><c> cotton</c>

00:43:05.690 --> 00:43:05.700 align:start position:0%
reinterred block actually in cotton
 

00:43:05.700 --> 00:43:07.940 align:start position:0%
reinterred block actually in cotton
there<00:43:05.910><c> is</c><00:43:06.000><c> a</c><00:43:06.090><c> nice</c><00:43:06.240><c> extension</c><00:43:07.170><c> so</c><00:43:07.470><c> you</c><00:43:07.560><c> can</c><00:43:07.770><c> do</c>

00:43:07.940 --> 00:43:07.950 align:start position:0%
there is a nice extension so you can do
 

00:43:07.950 --> 00:43:09.740 align:start position:0%
there is a nice extension so you can do
it<00:43:07.980><c> with</c><00:43:08.310><c> lock</c><00:43:08.640><c> model</c><00:43:09.090><c> so</c><00:43:09.210><c> it's</c><00:43:09.360><c> it's</c><00:43:09.600><c> actually</c>

00:43:09.740 --> 00:43:09.750 align:start position:0%
it with lock model so it's it's actually
 

00:43:09.750 --> 00:43:11.570 align:start position:0%
it with lock model so it's it's actually
using<00:43:10.200><c> interlocked</c><00:43:10.710><c> is</c><00:43:10.890><c> way</c><00:43:11.400><c> more</c>

00:43:11.570 --> 00:43:11.580 align:start position:0%
using interlocked is way more
 

00:43:11.580 --> 00:43:13.880 align:start position:0%
using interlocked is way more
comfortable<00:43:12.120><c> in</c><00:43:12.360><c> cotton</c><00:43:12.780><c> because</c><00:43:13.080><c> of</c><00:43:13.140><c> the</c><00:43:13.320><c> DSL</c>

00:43:13.880 --> 00:43:13.890 align:start position:0%
comfortable in cotton because of the DSL
 

00:43:13.890 --> 00:43:15.800 align:start position:0%
comfortable in cotton because of the DSL
nature<00:43:14.220><c> of</c><00:43:14.310><c> cotton</c><00:43:14.640><c> so</c><00:43:15.060><c> you</c><00:43:15.120><c> write</c><00:43:15.450><c> much</c><00:43:15.630><c> less</c>

00:43:15.800 --> 00:43:15.810 align:start position:0%
nature of cotton so you write much less
 

00:43:15.810 --> 00:43:17.600 align:start position:0%
nature of cotton so you write much less
code<00:43:15.990><c> because</c><00:43:16.170><c> in</c><00:43:16.260><c> Java</c><00:43:16.470><c> just</c><00:43:16.710><c> very</c><00:43:17.550><c> very</c>

00:43:17.600 --> 00:43:17.610 align:start position:0%
code because in Java just very very
 

00:43:17.610 --> 00:43:19.280 align:start position:0%
code because in Java just very very
broad<00:43:17.910><c> boilerplate</c><00:43:18.510><c> so</c><00:43:18.660><c> in</c><00:43:18.780><c> Java</c><00:43:18.990><c> you</c><00:43:19.170><c> would</c>

00:43:19.280 --> 00:43:19.290 align:start position:0%
broad boilerplate so in Java you would
 

00:43:19.290 --> 00:43:21.110 align:start position:0%
broad boilerplate so in Java you would
usually<00:43:19.740><c> use</c><00:43:20.040><c> synchronous</c><00:43:20.340><c> just</c><00:43:20.790><c> because</c>

00:43:21.110 --> 00:43:21.120 align:start position:0%
usually use synchronous just because
 

00:43:21.120 --> 00:43:23.090 align:start position:0%
usually use synchronous just because
using<00:43:21.570><c> your</c><00:43:21.840><c> entered</c><00:43:22.080><c> Locker</c><00:43:22.260><c> just</c><00:43:22.620><c> produces</c>

00:43:23.090 --> 00:43:23.100 align:start position:0%
using your entered Locker just produces
 

00:43:23.100 --> 00:43:25.520 align:start position:0%
using your entered Locker just produces
lines<00:43:23.580><c> and</c><00:43:23.820><c> lights</c><00:43:24.000><c> a</c><00:43:24.090><c> boilerplate</c><00:43:24.450><c> in</c><00:43:25.110><c> cotton</c>

00:43:25.520 --> 00:43:25.530 align:start position:0%
lines and lights a boilerplate in cotton
 

00:43:25.530 --> 00:43:29.120 align:start position:0%
lines and lights a boilerplate in cotton
is<00:43:25.680><c> not</c><00:43:25.920><c> a</c><00:43:25.950><c> big</c><00:43:26.400><c> problem</c><00:43:26.610><c> but</c><00:43:27.920><c> from</c><00:43:28.920><c> the</c>

00:43:29.120 --> 00:43:29.130 align:start position:0%
is not a big problem but from the
 

00:43:29.130 --> 00:43:31.660 align:start position:0%
is not a big problem but from the
scalability<00:43:29.520><c> standpoint</c><00:43:30.210><c> there</c><00:43:31.020><c> is</c><00:43:31.050><c> no</c><00:43:31.200><c> win</c>

00:43:31.660 --> 00:43:31.670 align:start position:0%
scalability standpoint there is no win
 

00:43:31.670 --> 00:43:34.190 align:start position:0%
scalability standpoint there is no win
the<00:43:32.670><c> reason</c><00:43:32.970><c> why</c><00:43:33.060><c> people</c><00:43:33.270><c> would</c><00:43:33.540><c> use</c><00:43:33.810><c> rented</c>

00:43:34.190 --> 00:43:34.200 align:start position:0%
the reason why people would use rented
 

00:43:34.200 --> 00:43:35.810 align:start position:0%
the reason why people would use rented
lock<00:43:34.350><c> is</c><00:43:34.500><c> totally</c><00:43:34.830><c> different</c><00:43:34.980><c> the</c><00:43:35.310><c> reason</c><00:43:35.700><c> why</c>

00:43:35.810 --> 00:43:35.820 align:start position:0%
lock is totally different the reason why
 

00:43:35.820 --> 00:43:37.760 align:start position:0%
lock is totally different the reason why
people<00:43:36.060><c> would</c><00:43:36.450><c> use</c><00:43:36.600><c> your</c><00:43:36.720><c> ended</c><00:43:36.960><c> lock</c><00:43:37.110><c> is</c><00:43:37.320><c> if</c>

00:43:37.760 --> 00:43:37.770 align:start position:0%
people would use your ended lock is if
 

00:43:37.770 --> 00:43:40.670 align:start position:0%
people would use your ended lock is if
they<00:43:38.010><c> want</c><00:43:38.190><c> is</c><00:43:38.430><c> they</c><00:43:38.700><c> having</c><00:43:39.690><c> very</c><00:43:40.260><c> complex</c>

00:43:40.670 --> 00:43:40.680 align:start position:0%
they want is they having very complex
 

00:43:40.680 --> 00:43:42.710 align:start position:0%
they want is they having very complex
data<00:43:40.770><c> structure</c><00:43:41.340><c> with</c><00:43:41.700><c> lots</c><00:43:41.970><c> of</c><00:43:42.090><c> locks</c><00:43:42.330><c> which</c>

00:43:42.710 --> 00:43:42.720 align:start position:0%
data structure with lots of locks which
 

00:43:42.720 --> 00:43:44.000 align:start position:0%
data structure with lots of locks which
is<00:43:42.870><c> a</c><00:43:42.900><c> challenge</c><00:43:43.200><c> to</c><00:43:43.470><c> design</c><00:43:43.710><c> because</c><00:43:43.860><c> you</c>

00:43:44.000 --> 00:43:44.010 align:start position:0%
is a challenge to design because you
 

00:43:44.010 --> 00:43:45.830 align:start position:0%
is a challenge to design because you
have<00:43:44.250><c> to</c><00:43:44.640><c> make</c><00:43:44.790><c> sure</c><00:43:45.000><c> that</c><00:43:45.360><c> you</c><00:43:45.510><c> don't</c><00:43:45.660><c> try</c><00:43:45.810><c> to</c>

00:43:45.830 --> 00:43:45.840 align:start position:0%
have to make sure that you don't try to
 

00:43:45.840 --> 00:43:47.660 align:start position:0%
have to make sure that you don't try to
deadlock<00:43:46.410><c> and</c><00:43:46.560><c> they</c><00:43:47.010><c> want</c><00:43:47.190><c> to</c><00:43:47.250><c> hand</c><00:43:47.550><c> over</c>

00:43:47.660 --> 00:43:47.670 align:start position:0%
deadlock and they want to hand over
 

00:43:47.670 --> 00:43:50.360 align:start position:0%
deadlock and they want to hand over
locking<00:43:48.120><c> they</c><00:43:48.630><c> want</c><00:43:48.810><c> to</c><00:43:48.930><c> take</c><00:43:49.050><c> one</c><00:43:49.320><c> lock</c><00:43:49.560><c> but</c>

00:43:50.360 --> 00:43:50.370 align:start position:0%
locking they want to take one lock but
 

00:43:50.370 --> 00:43:51.680 align:start position:0%
locking they want to take one lock but
then<00:43:50.490><c> another</c><00:43:50.730><c> then</c><00:43:51.060><c> it</c><00:43:51.180><c> really</c><00:43:51.300><c> is</c><00:43:51.420><c> the</c><00:43:51.510><c> first</c>

00:43:51.680 --> 00:43:51.690 align:start position:0%
then another then it really is the first
 

00:43:51.690 --> 00:43:53.420 align:start position:0%
then another then it really is the first
one<00:43:51.960><c> there's</c><00:43:52.530><c> no</c><00:43:52.650><c> way</c><00:43:52.770><c> you</c><00:43:52.830><c> can</c><00:43:53.070><c> do</c><00:43:53.160><c> it</c><00:43:53.280><c> with</c>

00:43:53.420 --> 00:43:53.430 align:start position:0%
one there's no way you can do it with
 

00:43:53.430 --> 00:43:54.710 align:start position:0%
one there's no way you can do it with
Java<00:43:53.670><c> synchronized</c><00:43:54.210><c> but</c><00:43:54.420><c> with</c><00:43:54.600><c> your</c>

00:43:54.710 --> 00:43:54.720 align:start position:0%
Java synchronized but with your
 

00:43:54.720 --> 00:43:56.120 align:start position:0%
Java synchronized but with your
interlock<00:43:55.020><c> you</c><00:43:55.140><c> can</c><00:43:55.320><c> do</c><00:43:55.440><c> it</c><00:43:55.560><c> because</c><00:43:55.680><c> you</c><00:43:55.860><c> can</c>

00:43:56.120 --> 00:43:56.130 align:start position:0%
interlock you can do it because you can
 

00:43:56.130 --> 00:43:58.460 align:start position:0%
interlock you can do it because you can
control<00:43:56.370><c> input</c><00:43:57.360><c> your</c><00:43:57.540><c> invitations</c><00:43:57.780><c> of</c><00:43:58.260><c> lock</c>

00:43:58.460 --> 00:43:58.470 align:start position:0%
control input your invitations of lock
 

00:43:58.470 --> 00:44:00.290 align:start position:0%
control input your invitations of lock
up<00:43:58.590><c> and</c><00:43:58.740><c> lock</c><00:43:58.920><c> but</c><00:43:59.340><c> from</c><00:43:59.490><c> performance</c><00:44:00.120><c> then</c>

00:44:00.290 --> 00:44:00.300 align:start position:0%
up and lock but from performance then
 

00:44:00.300 --> 00:44:02.330 align:start position:0%
up and lock but from performance then
where<00:44:00.510><c> there's</c><00:44:00.750><c> there's</c><00:44:01.290><c> no</c><00:44:01.440><c> wind</c><00:44:01.680><c> from</c><00:44:02.100><c> skull</c>

00:44:02.330 --> 00:44:02.340 align:start position:0%
where there's there's no wind from skull
 

00:44:02.340 --> 00:44:09.400 align:start position:0%
where there's there's no wind from skull
podium

00:44:09.400 --> 00:44:09.410 align:start position:0%
 
 

00:44:09.410 --> 00:44:12.020 align:start position:0%
 
yeah<00:44:10.410><c> you</c><00:44:10.470><c> can</c><00:44:10.710><c> do</c><00:44:10.860><c> we</c><00:44:11.070><c> dreadlock</c><00:44:11.520><c> in</c><00:44:11.730><c> there</c><00:44:11.880><c> is</c>

00:44:12.020 --> 00:44:12.030 align:start position:0%
yeah you can do we dreadlock in there is
 

00:44:12.030 --> 00:44:14.000 align:start position:0%
yeah you can do we dreadlock in there is
there<00:44:12.300><c> is</c><00:44:12.360><c> approach</c><00:44:12.750><c> yeah</c><00:44:13.110><c> there</c><00:44:13.440><c> is</c><00:44:13.560><c> there's</c>

00:44:14.000 --> 00:44:14.010 align:start position:0%
there is approach yeah there is there's
 

00:44:14.010 --> 00:44:15.440 align:start position:0%
there is approach yeah there is there's
actually<00:44:14.250><c> there</c><00:44:14.730><c> is</c><00:44:14.820><c> thing</c><00:44:15.000><c> called</c><00:44:15.210><c> to</c><00:44:15.330><c> reach</c>

00:44:15.440 --> 00:44:15.450 align:start position:0%
actually there is thing called to reach
 

00:44:15.450 --> 00:44:16.100 align:start position:0%
actually there is thing called to reach
dreadlock

00:44:16.100 --> 00:44:16.110 align:start position:0%
dreadlock
 

00:44:16.110 --> 00:44:19.280 align:start position:0%
dreadlock
so<00:44:16.440><c> you</c><00:44:16.500><c> can</c><00:44:16.860><c> use</c><00:44:17.250><c> a</c><00:44:17.280><c> separate</c><00:44:17.850><c> you</c><00:44:18.570><c> can</c><00:44:18.780><c> do</c>

00:44:19.280 --> 00:44:19.290 align:start position:0%
so you can use a separate you can do
 

00:44:19.290 --> 00:44:20.900 align:start position:0%
so you can use a separate you can do
read<00:44:19.440><c> lock</c><00:44:19.620><c> but</c><00:44:19.920><c> the</c><00:44:20.070><c> the</c><00:44:20.340><c> problem</c><00:44:20.670><c> is</c><00:44:20.700><c> do</c>

00:44:20.900 --> 00:44:20.910 align:start position:0%
read lock but the the problem is do
 

00:44:20.910 --> 00:44:23.090 align:start position:0%
read lock but the the problem is do
dreadlocks<00:44:21.390><c> it's</c><00:44:21.630><c> it's</c><00:44:22.290><c> it's</c><00:44:22.590><c> a</c><00:44:22.740><c> source</c><00:44:23.010><c> of</c>

00:44:23.090 --> 00:44:23.100 align:start position:0%
dreadlocks it's it's it's a source of
 

00:44:23.100 --> 00:44:24.800 align:start position:0%
dreadlocks it's it's it's a source of
over<00:44:23.400><c> here</c><00:44:23.610><c> so</c><00:44:23.850><c> we</c><00:44:23.940><c> still</c><00:44:24.150><c> get</c><00:44:24.240><c> this</c><00:44:24.420><c> lock</c><00:44:24.660><c> in</c>

00:44:24.800 --> 00:44:24.810 align:start position:0%
over here so we still get this lock in
 

00:44:24.810 --> 00:44:26.780 align:start position:0%
over here so we still get this lock in
over<00:44:25.020><c> here</c><00:44:25.230><c> even</c><00:44:25.860><c> though</c><00:44:26.010><c> you</c><00:44:26.280><c> in</c><00:44:26.370><c> crystal</c>

00:44:26.780 --> 00:44:26.790 align:start position:0%
over here even though you in crystal
 

00:44:26.790 --> 00:44:28.070 align:start position:0%
over here even though you in crystal
currency<00:44:27.150><c> by</c><00:44:27.300><c> dreadlocks</c><00:44:27.690><c> it's</c><00:44:27.870><c> another</c>

00:44:28.070 --> 00:44:28.080 align:start position:0%
currency by dreadlocks it's another
 

00:44:28.080 --> 00:44:28.760 align:start position:0%
currency by dreadlocks it's another
techniques

00:44:28.760 --> 00:44:28.770 align:start position:0%
techniques
 

00:44:28.770 --> 00:44:30.830 align:start position:0%
techniques
so<00:44:29.250><c> basically</c><00:44:29.790><c> when</c><00:44:30.210><c> you're</c><00:44:30.360><c> running</c><00:44:30.510><c> to</c>

00:44:30.830 --> 00:44:30.840 align:start position:0%
so basically when you're running to
 

00:44:30.840 --> 00:44:32.780 align:start position:0%
so basically when you're running to
sculpt<00:44:31.080><c> with</c><00:44:31.200><c> your</c><00:44:31.290><c> problem</c><00:44:31.620><c> since</c><00:44:31.770><c> locks</c><00:44:32.070><c> one</c>

00:44:32.780 --> 00:44:32.790 align:start position:0%
sculpt with your problem since locks one
 

00:44:32.790 --> 00:44:34.610 align:start position:0%
sculpt with your problem since locks one
thing<00:44:33.000><c> is</c><00:44:33.150><c> go</c><00:44:33.300><c> lock</c><00:44:33.570><c> free</c><00:44:33.780><c> the</c><00:44:33.930><c> others</c><00:44:34.170><c> go</c><00:44:34.380><c> read</c>

00:44:34.610 --> 00:44:34.620 align:start position:0%
thing is go lock free the others go read
 

00:44:34.620 --> 00:44:35.930 align:start position:0%
thing is go lock free the others go read
read<00:44:34.800><c> lock</c><00:44:35.010><c> so</c><00:44:35.220><c> there's</c><00:44:35.370><c> two</c><00:44:35.640><c> different</c>

00:44:35.930 --> 00:44:35.940 align:start position:0%
read lock so there's two different
 

00:44:35.940 --> 00:44:38.060 align:start position:0%
read lock so there's two different
sometimes<00:44:36.720><c> you</c><00:44:37.170><c> know</c><00:44:37.290><c> if</c><00:44:37.470><c> it's</c><00:44:37.680><c> data</c>

00:44:38.060 --> 00:44:38.070 align:start position:0%
sometimes you know if it's data
 

00:44:38.070 --> 00:44:40.670 align:start position:0%
sometimes you know if it's data
structure<00:44:38.490><c> is</c><00:44:38.550><c> very</c><00:44:38.730><c> complex</c><00:44:39.320><c> it</c><00:44:40.320><c> compensates</c>

00:44:40.670 --> 00:44:40.680 align:start position:0%
structure is very complex it compensates
 

00:44:40.680 --> 00:44:42.410 align:start position:0%
structure is very complex it compensates
search<00:44:41.010><c> a</c><00:44:41.130><c> hard</c><00:44:41.370><c> to</c><00:44:41.550><c> implement</c><00:44:41.880><c> lock</c><00:44:42.180><c> for</c><00:44:42.330><c> your</c>

00:44:42.410 --> 00:44:42.420 align:start position:0%
search a hard to implement lock for your
 

00:44:42.420 --> 00:44:44.720 align:start position:0%
search a hard to implement lock for your
way<00:44:42.540><c> I</c><00:44:42.780><c> mean</c><00:44:43.320><c> I</c><00:44:43.560><c> mean</c><00:44:43.890><c> there's</c><00:44:44.130><c> some</c><00:44:44.370><c> limit</c><00:44:44.640><c> on</c>

00:44:44.720 --> 00:44:44.730 align:start position:0%
way I mean I mean there's some limit on
 

00:44:44.730 --> 00:44:47.030 align:start position:0%
way I mean I mean there's some limit on
how<00:44:45.000><c> a</c><00:44:45.270><c> complicated</c><00:44:46.230><c> structure</c><00:44:46.530><c> can</c><00:44:46.710><c> be</c><00:44:46.740><c> to</c>

00:44:47.030 --> 00:44:47.040 align:start position:0%
how a complicated structure can be to
 

00:44:47.040 --> 00:44:49.490 align:start position:0%
how a complicated structure can be to
make<00:44:47.190><c> it</c><00:44:47.220><c> lock</c><00:44:47.490><c> free</c><00:44:47.700><c> so</c><00:44:48.180><c> usually</c><00:44:48.870><c> the</c><00:44:49.230><c> rule</c><00:44:49.380><c> of</c>

00:44:49.490 --> 00:44:49.500 align:start position:0%
make it lock free so usually the rule of
 

00:44:49.500 --> 00:44:50.690 align:start position:0%
make it lock free so usually the rule of
thumb<00:44:49.680><c> of</c><00:44:49.800><c> this</c><00:44:49.950><c> if</c><00:44:50.130><c> your</c><00:44:50.250><c> structure</c><00:44:50.550><c> is</c>

00:44:50.690 --> 00:44:50.700 align:start position:0%
thumb of this if your structure is
 

00:44:50.700 --> 00:44:51.890 align:start position:0%
thumb of this if your structure is
simple<00:44:50.880><c> enough</c><00:44:51.060><c> so</c><00:44:51.210><c> you</c><00:44:51.300><c> can</c><00:44:51.450><c> make</c><00:44:51.570><c> it</c><00:44:51.750><c> look</c>

00:44:51.890 --> 00:44:51.900 align:start position:0%
simple enough so you can make it look
 

00:44:51.900 --> 00:44:54.260 align:start position:0%
simple enough so you can make it look
for<00:44:52.110><c> just</c><00:44:52.260><c> make</c><00:44:52.530><c> it</c><00:44:52.650><c> lock</c><00:44:52.830><c> free</c><00:44:53.070><c> if</c><00:44:53.370><c> you</c><00:44:53.820><c> cannot</c>

00:44:54.260 --> 00:44:54.270 align:start position:0%
for just make it lock free if you cannot
 

00:44:54.270 --> 00:44:56.180 align:start position:0%
for just make it lock free if you cannot
make<00:44:54.510><c> it</c><00:44:54.540><c> for</c><00:44:54.840><c> walk</c><00:44:54.990><c> free</c><00:44:55.230><c> then</c><00:44:55.500><c> but</c><00:44:55.890><c> you</c><00:44:55.980><c> still</c>

00:44:56.180 --> 00:44:56.190 align:start position:0%
make it for walk free then but you still
 

00:44:56.190 --> 00:44:58.400 align:start position:0%
make it for walk free then but you still
have<00:44:56.340><c> to</c><00:44:56.490><c> scale</c><00:44:56.790><c> and</c><00:44:57.240><c> matzo</c><00:44:57.690><c> first</c><00:44:57.870><c> then</c><00:44:58.110><c> you</c>

00:44:58.400 --> 00:44:58.410 align:start position:0%
have to scale and matzo first then you
 

00:44:58.410 --> 00:45:01.760 align:start position:0%
have to scale and matzo first then you
would<00:44:58.620><c> go</c><00:44:58.890><c> with</c><00:44:58.920><c> ruh</c><00:44:59.310><c> dreadlocks</c>

