WEBVTT
Kind: captions
Language: en

00:00:03.149 --> 00:00:06.650 align:start position:0%
 
okay<00:00:04.380><c> right</c><00:00:05.100><c> well</c><00:00:05.519><c> good</c><00:00:05.790><c> morning</c><00:00:06.090><c> and</c><00:00:06.240><c> welcome</c>

00:00:06.650 --> 00:00:06.660 align:start position:0%
okay right well good morning and welcome
 

00:00:06.660 --> 00:00:08.780 align:start position:0%
okay right well good morning and welcome
after<00:00:07.649><c> so</c><00:00:07.919><c> it's</c><00:00:08.040><c> really</c><00:00:08.219><c> good</c><00:00:08.340><c> to</c><00:00:08.400><c> see</c><00:00:08.520><c> so</c><00:00:08.670><c> many</c>

00:00:08.780 --> 00:00:08.790 align:start position:0%
after so it's really good to see so many
 

00:00:08.790 --> 00:00:10.160 align:start position:0%
after so it's really good to see so many
people<00:00:09.000><c> here</c><00:00:09.240><c> at</c><00:00:09.420><c> half</c><00:00:09.570><c> past</c><00:00:09.719><c> eight</c><00:00:09.930><c> in</c><00:00:09.959><c> the</c>

00:00:10.160 --> 00:00:10.170 align:start position:0%
people here at half past eight in the
 

00:00:10.170 --> 00:00:10.549 align:start position:0%
people here at half past eight in the
morning

00:00:10.549 --> 00:00:10.559 align:start position:0%
morning
 

00:00:10.559 --> 00:00:12.620 align:start position:0%
morning
bit<00:00:11.130><c> of</c><00:00:11.160><c> an</c><00:00:11.280><c> early</c><00:00:11.400><c> start</c><00:00:11.490><c> I</c><00:00:11.880><c> know</c><00:00:11.940><c> last</c><00:00:12.509><c> night</c>

00:00:12.620 --> 00:00:12.630 align:start position:0%
bit of an early start I know last night
 

00:00:12.630 --> 00:00:16.070 align:start position:0%
bit of an early start I know last night
number<00:00:13.170><c> of</c><00:00:13.230><c> parties</c><00:00:13.849><c> but</c><00:00:14.849><c> what</c><00:00:15.780><c> we</c><00:00:15.839><c> can</c><00:00:15.960><c> do</c>

00:00:16.070 --> 00:00:16.080 align:start position:0%
number of parties but what we can do
 

00:00:16.080 --> 00:00:19.010 align:start position:0%
number of parties but what we can do
this<00:00:16.379><c> morning</c><00:00:16.560><c> is</c><00:00:16.860><c> talk</c><00:00:17.790><c> about</c><00:00:17.970><c> streams</c><00:00:18.300><c> in</c>

00:00:19.010 --> 00:00:19.020 align:start position:0%
this morning is talk about streams in
 

00:00:19.020 --> 00:00:21.530 align:start position:0%
this morning is talk about streams in
JDK<00:00:19.560><c> eight</c><00:00:19.739><c> and</c><00:00:20.040><c> we've</c><00:00:20.820><c> kind</c><00:00:21.029><c> of</c><00:00:21.060><c> titled</c><00:00:21.419><c> this</c>

00:00:21.530 --> 00:00:21.540 align:start position:0%
JDK eight and we've kind of titled this
 

00:00:21.540 --> 00:00:24.530 align:start position:0%
JDK eight and we've kind of titled this
the<00:00:21.689><c> good</c><00:00:21.869><c> the</c><00:00:22.050><c> bad</c><00:00:22.230><c> and</c><00:00:22.559><c> the</c><00:00:22.590><c> ugly</c><00:00:23.009><c> and</c><00:00:23.700><c> the</c>

00:00:24.530 --> 00:00:24.540 align:start position:0%
the good the bad and the ugly and the
 

00:00:24.540 --> 00:00:26.060 align:start position:0%
the good the bad and the ugly and the
idea<00:00:24.779><c> of</c><00:00:24.840><c> this</c><00:00:24.960><c> presentation</c><00:00:25.320><c> is</c><00:00:25.559><c> really</c><00:00:25.590><c> to</c>

00:00:26.060 --> 00:00:26.070 align:start position:0%
idea of this presentation is really to
 

00:00:26.070 --> 00:00:29.240 align:start position:0%
idea of this presentation is really to
sort<00:00:26.279><c> of</c><00:00:26.309><c> help</c><00:00:26.730><c> you</c><00:00:27.029><c> learn</c><00:00:27.419><c> from</c><00:00:28.169><c> my</c><00:00:28.800><c> mistakes</c>

00:00:29.240 --> 00:00:29.250 align:start position:0%
sort of help you learn from my mistakes
 

00:00:29.250 --> 00:00:33.470 align:start position:0%
sort of help you learn from my mistakes
not<00:00:29.880><c> Stuart's</c><00:00:30.239><c> my</c><00:00:30.809><c> mistakes</c><00:00:31.169><c> and</c><00:00:32.390><c> what</c><00:00:33.390><c> we're</c>

00:00:33.470 --> 00:00:33.480 align:start position:0%
not Stuart's my mistakes and what we're
 

00:00:33.480 --> 00:00:34.340 align:start position:0%
not Stuart's my mistakes and what we're
going<00:00:33.600><c> to</c><00:00:33.630><c> do</c><00:00:33.719><c> is</c><00:00:33.780><c> we</c><00:00:33.840><c> can</c><00:00:33.960><c> look</c><00:00:33.989><c> at</c><00:00:34.200><c> some</c>

00:00:34.340 --> 00:00:34.350 align:start position:0%
going to do is we can look at some
 

00:00:34.350 --> 00:00:37.340 align:start position:0%
going to do is we can look at some
samples<00:00:34.800><c> of</c><00:00:35.070><c> streams</c><00:00:35.579><c> code</c><00:00:35.940><c> and</c><00:00:36.269><c> really</c><00:00:37.230><c> this</c>

00:00:37.340 --> 00:00:37.350 align:start position:0%
samples of streams code and really this
 

00:00:37.350 --> 00:00:39.380 align:start position:0%
samples of streams code and really this
is<00:00:37.410><c> kind</c><00:00:37.589><c> of</c><00:00:37.920><c> tracking</c><00:00:38.280><c> some</c><00:00:38.820><c> of</c><00:00:38.940><c> my</c><00:00:39.149><c> learning</c>

00:00:39.380 --> 00:00:39.390 align:start position:0%
is kind of tracking some of my learning
 

00:00:39.390 --> 00:00:43.430 align:start position:0%
is kind of tracking some of my learning
process<00:00:39.809><c> about</c><00:00:40.710><c> streams</c><00:00:41.190><c> and</c><00:00:42.440><c> understanding</c>

00:00:43.430 --> 00:00:43.440 align:start position:0%
process about streams and understanding
 

00:00:43.440 --> 00:00:45.470 align:start position:0%
process about streams and understanding
how<00:00:44.010><c> you</c><00:00:44.039><c> need</c><00:00:44.429><c> to</c><00:00:44.579><c> think</c><00:00:44.879><c> differently</c>

00:00:45.470 --> 00:00:45.480 align:start position:0%
how you need to think differently
 

00:00:45.480 --> 00:00:50.060 align:start position:0%
how you need to think differently
because<00:00:46.320><c> as</c><00:00:47.329><c> Java</c><00:00:48.329><c> programmers</c><00:00:48.960><c> we</c><00:00:49.800><c> are</c><00:00:49.890><c> very</c>

00:00:50.060 --> 00:00:50.070 align:start position:0%
because as Java programmers we are very
 

00:00:50.070 --> 00:00:51.500 align:start position:0%
because as Java programmers we are very
much<00:00:50.190><c> focused</c><00:00:50.370><c> on</c><00:00:50.640><c> imperative</c><00:00:51.089><c> programming</c>

00:00:51.500 --> 00:00:51.510 align:start position:0%
much focused on imperative programming
 

00:00:51.510 --> 00:00:53.569 align:start position:0%
much focused on imperative programming
we<00:00:51.899><c> understand</c><00:00:52.440><c> the</c><00:00:52.649><c> idea</c><00:00:52.949><c> of</c><00:00:53.010><c> loops</c><00:00:53.280><c> we</c>

00:00:53.569 --> 00:00:53.579 align:start position:0%
we understand the idea of loops we
 

00:00:53.579 --> 00:00:56.479 align:start position:0%
we understand the idea of loops we
understand<00:00:54.089><c> the</c><00:00:54.359><c> idea</c><00:00:54.690><c> of</c><00:00:54.839><c> mutable</c><00:00:55.620><c> state</c><00:00:55.980><c> so</c>

00:00:56.479 --> 00:00:56.489 align:start position:0%
understand the idea of mutable state so
 

00:00:56.489 --> 00:00:58.880 align:start position:0%
understand the idea of mutable state so
we<00:00:56.730><c> put</c><00:00:56.909><c> things</c><00:00:57.030><c> in</c><00:00:57.210><c> variables</c><00:00:57.629><c> so</c><00:00:58.530><c> if</c><00:00:58.589><c> I</c><00:00:58.710><c> ask</c>

00:00:58.880 --> 00:00:58.890 align:start position:0%
we put things in variables so if I ask
 

00:00:58.890 --> 00:01:00.919 align:start position:0%
we put things in variables so if I ask
show<00:00:59.789><c> of</c><00:00:59.850><c> hands</c><00:01:00.030><c> who</c><00:01:00.300><c> here</c><00:01:00.329><c> thinks</c><00:01:00.510><c> they're</c><00:01:00.899><c> a</c>

00:01:00.919 --> 00:01:00.929 align:start position:0%
show of hands who here thinks they're a
 

00:01:00.929 --> 00:01:04.189 align:start position:0%
show of hands who here thinks they're a
Java<00:01:01.260><c> programmer</c><00:01:02.420><c> okay</c><00:01:03.420><c> that's</c><00:01:03.659><c> good</c><00:01:03.929><c> we</c><00:01:04.080><c> have</c>

00:01:04.189 --> 00:01:04.199 align:start position:0%
Java programmer okay that's good we have
 

00:01:04.199 --> 00:01:05.780 align:start position:0%
Java programmer okay that's good we have
the<00:01:04.290><c> right</c><00:01:04.409><c> audience</c><00:01:04.769><c> who</c><00:01:05.430><c> here</c><00:01:05.670><c> would</c>

00:01:05.780 --> 00:01:05.790 align:start position:0%
the right audience who here would
 

00:01:05.790 --> 00:01:07.250 align:start position:0%
the right audience who here would
describe<00:01:06.090><c> themselves</c><00:01:06.270><c> as</c><00:01:06.540><c> a</c><00:01:06.600><c> functional</c>

00:01:07.250 --> 00:01:07.260 align:start position:0%
describe themselves as a functional
 

00:01:07.260 --> 00:01:10.070 align:start position:0%
describe themselves as a functional
programmer<00:01:08.330><c> yes</c><00:01:09.330><c> you</c><00:01:09.570><c> see</c><00:01:09.720><c> there's</c><00:01:09.900><c> only</c><00:01:09.960><c> a</c>

00:01:10.070 --> 00:01:10.080 align:start position:0%
programmer yes you see there's only a
 

00:01:10.080 --> 00:01:12.500 align:start position:0%
programmer yes you see there's only a
few<00:01:10.350><c> people</c><00:01:10.800><c> here</c><00:01:11.010><c> and</c><00:01:11.340><c> that's</c><00:01:12.000><c> that's</c><00:01:12.330><c> the</c>

00:01:12.500 --> 00:01:12.510 align:start position:0%
few people here and that's that's the
 

00:01:12.510 --> 00:01:13.820 align:start position:0%
few people here and that's that's the
key<00:01:12.690><c> thing</c><00:01:12.900><c> here</c><00:01:12.960><c> is</c><00:01:13.170><c> that</c><00:01:13.260><c> functional</c>

00:01:13.820 --> 00:01:13.830 align:start position:0%
key thing here is that functional
 

00:01:13.830 --> 00:01:15.620 align:start position:0%
key thing here is that functional
programming<00:01:14.190><c> is</c><00:01:14.340><c> very</c><00:01:14.490><c> different</c><00:01:14.970><c> to</c>

00:01:15.620 --> 00:01:15.630 align:start position:0%
programming is very different to
 

00:01:15.630 --> 00:01:17.870 align:start position:0%
programming is very different to
imperative<00:01:16.620><c> programming</c><00:01:17.010><c> and</c><00:01:17.280><c> you</c><00:01:17.520><c> do</c><00:01:17.700><c> need</c>

00:01:17.870 --> 00:01:17.880 align:start position:0%
imperative programming and you do need
 

00:01:17.880 --> 00:01:19.430 align:start position:0%
imperative programming and you do need
to<00:01:17.970><c> think</c><00:01:18.000><c> differently</c><00:01:18.480><c> so</c><00:01:18.750><c> we're</c><00:01:19.260><c> going</c><00:01:19.380><c> to</c>

00:01:19.430 --> 00:01:19.440 align:start position:0%
to think differently so we're going to
 

00:01:19.440 --> 00:01:22.670 align:start position:0%
to think differently so we're going to
give<00:01:19.530><c> you</c><00:01:19.560><c> some</c><00:01:19.740><c> examples</c><00:01:20.130><c> of</c><00:01:20.280><c> how</c><00:01:20.460><c> to</c><00:01:21.380><c> not</c><00:01:22.380><c> do</c>

00:01:22.670 --> 00:01:22.680 align:start position:0%
give you some examples of how to not do
 

00:01:22.680 --> 00:01:25.150 align:start position:0%
give you some examples of how to not do
things<00:01:22.950><c> as</c><00:01:23.220><c> well</c><00:01:23.370><c> as</c><00:01:23.460><c> how</c><00:01:23.580><c> to</c><00:01:23.610><c> do</c><00:01:23.910><c> things</c><00:01:24.120><c> and</c>

00:01:25.150 --> 00:01:25.160 align:start position:0%
things as well as how to do things and
 

00:01:25.160 --> 00:01:27.290 align:start position:0%
things as well as how to do things and
really<00:01:26.160><c> the</c><00:01:26.310><c> sort</c><00:01:26.460><c> of</c><00:01:26.520><c> idea</c><00:01:26.790><c> behind</c><00:01:27.000><c> this</c>

00:01:27.290 --> 00:01:27.300 align:start position:0%
really the sort of idea behind this
 

00:01:27.300 --> 00:01:29.240 align:start position:0%
really the sort of idea behind this
presentation<00:01:27.720><c> came</c><00:01:28.050><c> about</c><00:01:28.290><c> because</c><00:01:28.500><c> I</c><00:01:28.920><c> wrote</c>

00:01:29.240 --> 00:01:29.250 align:start position:0%
presentation came about because I wrote
 

00:01:29.250 --> 00:01:31.670 align:start position:0%
presentation came about because I wrote
a<00:01:29.280><c> blog</c><00:01:29.460><c> entry</c><00:01:29.730><c> where</c><00:01:30.450><c> I</c><00:01:30.480><c> explained</c><00:01:31.290><c> about</c><00:01:31.500><c> how</c>

00:01:31.670 --> 00:01:31.680 align:start position:0%
a blog entry where I explained about how
 

00:01:31.680 --> 00:01:33.110 align:start position:0%
a blog entry where I explained about how
I'd<00:01:31.800><c> done</c><00:01:31.950><c> some</c><00:01:32.160><c> things</c><00:01:32.370><c> with</c><00:01:32.580><c> streams</c><00:01:32.880><c> and</c>

00:01:33.110 --> 00:01:33.120 align:start position:0%
I'd done some things with streams and
 

00:01:33.120 --> 00:01:35.930 align:start position:0%
I'd done some things with streams and
somebody<00:01:33.930><c> didn't</c><00:01:34.290><c> like</c><00:01:34.320><c> my</c><00:01:34.680><c> code</c><00:01:34.920><c> and</c><00:01:35.160><c> he</c><00:01:35.760><c> kind</c>

00:01:35.930 --> 00:01:35.940 align:start position:0%
somebody didn't like my code and he kind
 

00:01:35.940 --> 00:01:37.220 align:start position:0%
somebody didn't like my code and he kind
of<00:01:35.970><c> criticized</c><00:01:36.420><c> it</c><00:01:36.660><c> and</c><00:01:36.870><c> so</c><00:01:36.990><c> we</c><00:01:37.080><c> had</c><00:01:37.200><c> a</c>

00:01:37.220 --> 00:01:37.230 align:start position:0%
of criticized it and so we had a
 

00:01:37.230 --> 00:01:39.560 align:start position:0%
of criticized it and so we had a
discussion<00:01:38.010><c> about</c><00:01:38.220><c> that</c><00:01:38.370><c> and</c><00:01:38.790><c> so</c><00:01:39.150><c> this</c><00:01:39.510><c> is</c>

00:01:39.560 --> 00:01:39.570 align:start position:0%
discussion about that and so this is
 

00:01:39.570 --> 00:01:41.270 align:start position:0%
discussion about that and so this is
kind<00:01:40.020><c> of</c><00:01:40.110><c> how</c><00:01:40.290><c> we</c><00:01:40.350><c> came</c><00:01:40.590><c> about</c><00:01:40.650><c> this</c>

00:01:41.270 --> 00:01:41.280 align:start position:0%
kind of how we came about this
 

00:01:41.280 --> 00:01:45.760 align:start position:0%
kind of how we came about this
presentation<00:01:42.740><c> so</c><00:01:43.740><c> first</c><00:01:44.040><c> I</c><00:01:44.340><c> should</c><00:01:44.880><c> introduce</c>

00:01:45.760 --> 00:01:45.770 align:start position:0%
presentation so first I should introduce
 

00:01:45.770 --> 00:01:48.670 align:start position:0%
presentation so first I should introduce
so<00:01:46.770><c> I'm</c><00:01:46.980><c> Simon</c><00:01:47.280><c> Ritter</c><00:01:47.430><c> I</c><00:01:47.730><c> work</c><00:01:48.240><c> for</c><00:01:48.420><c> is</c><00:01:48.480><c> all</c>

00:01:48.670 --> 00:01:48.680 align:start position:0%
so I'm Simon Ritter I work for is all
 

00:01:48.680 --> 00:01:51.740 align:start position:0%
so I'm Simon Ritter I work for is all
I'm<00:01:49.680><c> I'm</c><00:01:50.070><c> Stuart</c><00:01:50.370><c> marks</c><00:01:50.640><c> I</c><00:01:50.850><c> work</c><00:01:51.030><c> for</c><00:01:51.300><c> Oracle</c>

00:01:51.740 --> 00:01:51.750 align:start position:0%
I'm I'm Stuart marks I work for Oracle
 

00:01:51.750 --> 00:01:54.440 align:start position:0%
I'm I'm Stuart marks I work for Oracle
on<00:01:51.930><c> the</c><00:01:52.170><c> JDK</c><00:01:52.530><c> core</c><00:01:52.770><c> libraries</c><00:01:53.160><c> yes</c><00:01:53.730><c> so</c><00:01:54.090><c> Stuart</c>

00:01:54.440 --> 00:01:54.450 align:start position:0%
on the JDK core libraries yes so Stuart
 

00:01:54.450 --> 00:01:55.850 align:start position:0%
on the JDK core libraries yes so Stuart
obviously<00:01:54.780><c> has</c><00:01:54.900><c> had</c><00:01:54.930><c> a</c><00:01:55.080><c> lot</c><00:01:55.290><c> to</c><00:01:55.320><c> do</c><00:01:55.590><c> with</c><00:01:55.710><c> the</c>

00:01:55.850 --> 00:01:55.860 align:start position:0%
obviously has had a lot to do with the
 

00:01:55.860 --> 00:01:59.240 align:start position:0%
obviously has had a lot to do with the
development<00:01:56.130><c> of</c><00:01:56.400><c> streams</c><00:01:56.700><c> I</c><00:01:57.570><c> haven't</c>

00:01:59.240 --> 00:01:59.250 align:start position:0%
development of streams I haven't
 

00:01:59.250 --> 00:02:01.670 align:start position:0%
development of streams I haven't
okay<00:02:00.090><c> so</c><00:02:00.180><c> the</c><00:02:00.270><c> first</c><00:02:00.420><c> thing</c><00:02:00.540><c> was</c><00:02:00.840><c> was</c><00:02:01.200><c> dealing</c>

00:02:01.670 --> 00:02:01.680 align:start position:0%
okay so the first thing was was dealing
 

00:02:01.680 --> 00:02:03.560 align:start position:0%
okay so the first thing was was dealing
with<00:02:01.860><c> exceptions</c><00:02:02.430><c> because</c><00:02:02.730><c> this</c><00:02:02.940><c> actually</c><00:02:03.450><c> is</c>

00:02:03.560 --> 00:02:03.570 align:start position:0%
with exceptions because this actually is
 

00:02:03.570 --> 00:02:06.140 align:start position:0%
with exceptions because this actually is
something<00:02:03.780><c> which</c><00:02:04.290><c> can</c><00:02:04.530><c> be</c><00:02:04.560><c> quite</c><00:02:04.920><c> tricky</c><00:02:05.400><c> when</c>

00:02:06.140 --> 00:02:06.150 align:start position:0%
something which can be quite tricky when
 

00:02:06.150 --> 00:02:09.460 align:start position:0%
something which can be quite tricky when
it<00:02:06.270><c> comes</c><00:02:06.510><c> to</c><00:02:06.990><c> using</c><00:02:07.260><c> screens</c><00:02:08.040><c> as</c><00:02:08.550><c> we</c><00:02:08.820><c> will</c><00:02:08.970><c> see</c>

00:02:09.460 --> 00:02:09.470 align:start position:0%
it comes to using screens as we will see
 

00:02:09.470 --> 00:02:14.330 align:start position:0%
it comes to using screens as we will see
now<00:02:10.470><c> the</c><00:02:11.040><c> problem</c><00:02:11.430><c> that</c><00:02:11.760><c> I</c><00:02:12.060><c> had</c><00:02:12.480><c> was</c><00:02:13.260><c> I</c><00:02:13.680><c> was</c>

00:02:14.330 --> 00:02:14.340 align:start position:0%
now the problem that I had was I was
 

00:02:14.340 --> 00:02:16.310 align:start position:0%
now the problem that I had was I was
trying<00:02:14.550><c> to</c><00:02:14.730><c> process</c><00:02:14.850><c> some</c><00:02:15.570><c> data</c><00:02:15.810><c> that</c><00:02:15.960><c> was</c>

00:02:16.310 --> 00:02:16.320 align:start position:0%
trying to process some data that was
 

00:02:16.320 --> 00:02:17.780 align:start position:0%
trying to process some data that was
coming<00:02:16.470><c> through</c><00:02:16.650><c> like</c><00:02:17.220><c> a</c><00:02:17.250><c> sort</c><00:02:17.490><c> of</c><00:02:17.520><c> web</c>

00:02:17.780 --> 00:02:17.790 align:start position:0%
coming through like a sort of web
 

00:02:17.790 --> 00:02:20.540 align:start position:0%
coming through like a sort of web
interface<00:02:18.300><c> and</c><00:02:18.600><c> so</c><00:02:19.470><c> the</c><00:02:19.890><c> idea</c><00:02:20.130><c> is</c><00:02:20.250><c> you've</c><00:02:20.400><c> got</c>

00:02:20.540 --> 00:02:20.550 align:start position:0%
interface and so the idea is you've got
 

00:02:20.550 --> 00:02:22.880 align:start position:0%
interface and so the idea is you've got
a<00:02:20.580><c> very</c><00:02:20.790><c> simple</c><00:02:21.210><c> you</c><00:02:21.450><c> know</c><00:02:21.570><c> key</c><00:02:21.810><c> value</c><00:02:22.290><c> set</c>

00:02:22.880 --> 00:02:22.890 align:start position:0%
a very simple you know key value set
 

00:02:22.890 --> 00:02:24.740 align:start position:0%
a very simple you know key value set
that<00:02:23.610><c> you</c><00:02:23.730><c> want</c><00:02:23.940><c> to</c><00:02:24.120><c> extract</c><00:02:24.360><c> information</c>

00:02:24.740 --> 00:02:24.750 align:start position:0%
that you want to extract information
 

00:02:24.750 --> 00:02:28.040 align:start position:0%
that you want to extract information
from<00:02:25.370><c> so</c><00:02:26.370><c> simple</c><00:02:26.850><c> thing</c><00:02:27.000><c> in</c><00:02:27.150><c> few</c><00:02:27.330><c> action</c><00:02:27.930><c> is</c>

00:02:28.040 --> 00:02:28.050 align:start position:0%
from so simple thing in few action is
 

00:02:28.050 --> 00:02:31.850 align:start position:0%
from so simple thing in few action is
validate<00:02:28.470><c> key</c><00:02:28.920><c> is</c><00:02:29.220><c> 10</c><00:02:29.820><c> key</c><00:02:30.420><c> is</c><00:02:30.600><c> 22</c><00:02:31.170><c> key</c><00:02:31.500><c> is</c><00:02:31.620><c> 10</c>

00:02:31.850 --> 00:02:31.860 align:start position:0%
validate key is 10 key is 22 key is 10
 

00:02:31.860 --> 00:02:36.140 align:start position:0%
validate key is 10 key is 22 key is 10
key<00:02:32.100><c> is</c><00:02:32.160><c> 33</c><00:02:32.700><c> so</c><00:02:33.390><c> what</c><00:02:34.230><c> I</c><00:02:34.260><c> wanted</c><00:02:34.620><c> was</c><00:02:35.160><c> results</c>

00:02:36.140 --> 00:02:36.150 align:start position:0%
key is 33 so what I wanted was results
 

00:02:36.150 --> 00:02:37.940 align:start position:0%
key is 33 so what I wanted was results
in<00:02:36.300><c> the</c><00:02:36.360><c> form</c><00:02:36.570><c> of</c><00:02:36.690><c> action</c><00:02:37.080><c> and</c><00:02:37.200><c> validate</c><00:02:37.590><c> and</c>

00:02:37.940 --> 00:02:37.950 align:start position:0%
in the form of action and validate and
 

00:02:37.950 --> 00:02:40.040 align:start position:0%
in the form of action and validate and
then<00:02:38.220><c> key</c><00:02:38.520><c> where</c><00:02:38.790><c> I</c><00:02:38.820><c> had</c><00:02:38.940><c> a</c><00:02:38.970><c> set</c><00:02:39.240><c> of</c><00:02:39.360><c> values</c><00:02:39.720><c> 10</c>

00:02:40.040 --> 00:02:40.050 align:start position:0%
then key where I had a set of values 10
 

00:02:40.050 --> 00:02:43.040 align:start position:0%
then key where I had a set of values 10
22<00:02:40.920><c> 10</c><00:02:41.280><c> and</c><00:02:41.490><c> 33</c><00:02:42.060><c> so</c><00:02:42.540><c> the</c><00:02:42.600><c> important</c><00:02:42.930><c> thing</c><00:02:42.959><c> is</c>

00:02:43.040 --> 00:02:43.050 align:start position:0%
22 10 and 33 so the important thing is
 

00:02:43.050 --> 00:02:44.930 align:start position:0%
22 10 and 33 so the important thing is
that<00:02:43.290><c> I</c><00:02:43.350><c> could</c><00:02:43.500><c> have</c><00:02:43.590><c> duplicate</c><00:02:44.040><c> values</c><00:02:44.070><c> in</c>

00:02:44.930 --> 00:02:44.940 align:start position:0%
that I could have duplicate values in
 

00:02:44.940 --> 00:02:46.730 align:start position:0%
that I could have duplicate values in
the<00:02:45.510><c> set</c><00:02:45.690><c> that</c><00:02:45.810><c> I've</c><00:02:45.930><c> got</c><00:02:46.110><c> that</c><00:02:46.500><c> would</c><00:02:46.620><c> that</c>

00:02:46.730 --> 00:02:46.740 align:start position:0%
the set that I've got that would that
 

00:02:46.740 --> 00:02:48.699 align:start position:0%
the set that I've got that would that
was<00:02:46.860><c> actually</c><00:02:47.130><c> quite</c><00:02:47.280><c> a</c><00:02:47.310><c> an</c><00:02:47.940><c> important</c><00:02:48.360><c> point</c>

00:02:48.699 --> 00:02:48.709 align:start position:0%
was actually quite a an important point
 

00:02:48.709 --> 00:02:51.530 align:start position:0%
was actually quite a an important point
so<00:02:49.709><c> of</c><00:02:50.400><c> course</c><00:02:50.520><c> the</c><00:02:50.670><c> first</c><00:02:50.790><c> thing</c><00:02:50.910><c> I</c><00:02:51.030><c> do</c><00:02:51.090><c> is</c><00:02:51.390><c> I</c>

00:02:51.530 --> 00:02:51.540 align:start position:0%
so of course the first thing I do is I
 

00:02:51.540 --> 00:02:53.810 align:start position:0%
so of course the first thing I do is I
go<00:02:51.810><c> to</c><00:02:51.840><c> stack</c><00:02:52.530><c> overflow</c><00:02:52.560><c> and</c><00:02:52.980><c> I</c><00:02:53.160><c> say</c><00:02:53.370><c> has</c>

00:02:53.810 --> 00:02:53.820 align:start position:0%
go to stack overflow and I say has
 

00:02:53.820 --> 00:02:56.090 align:start position:0%
go to stack overflow and I say has
anybody<00:02:54.060><c> faced</c><00:02:54.420><c> this</c><00:02:54.570><c> problem</c><00:02:54.660><c> before</c><00:02:55.020><c> and</c><00:02:55.500><c> I</c>

00:02:56.090 --> 00:02:56.100 align:start position:0%
anybody faced this problem before and I
 

00:02:56.100 --> 00:02:57.410 align:start position:0%
anybody faced this problem before and I
look<00:02:56.250><c> around</c><00:02:56.340><c> and</c><00:02:56.550><c> I</c><00:02:56.670><c> find</c><00:02:56.880><c> that</c><00:02:56.940><c> yes</c>

00:02:57.410 --> 00:02:57.420 align:start position:0%
look around and I find that yes
 

00:02:57.420 --> 00:02:59.390 align:start position:0%
look around and I find that yes
somebody<00:02:57.990><c> has</c><00:02:58.140><c> produced</c><00:02:58.470><c> a</c><00:02:58.560><c> nice</c><00:02:58.740><c> peat</c><00:02:59.010><c> well</c><00:02:59.190><c> a</c>

00:02:59.390 --> 00:02:59.400 align:start position:0%
somebody has produced a nice peat well a
 

00:02:59.400 --> 00:03:02.480 align:start position:0%
somebody has produced a nice peat well a
piece<00:02:59.730><c> of</c><00:02:59.850><c> code</c><00:03:00.030><c> which</c><00:03:00.959><c> does</c><00:03:01.290><c> this</c><00:03:01.470><c> now</c><00:03:02.010><c> we're</c>

00:03:02.480 --> 00:03:02.490 align:start position:0%
piece of code which does this now we're
 

00:03:02.490 --> 00:03:03.560 align:start position:0%
piece of code which does this now we're
not<00:03:02.610><c> going</c><00:03:02.730><c> to</c><00:03:02.760><c> talk</c><00:03:02.880><c> about</c><00:03:03.000><c> this</c><00:03:03.269><c> because</c>

00:03:03.560 --> 00:03:03.570 align:start position:0%
not going to talk about this because
 

00:03:03.570 --> 00:03:06.790 align:start position:0%
not going to talk about this because
this<00:03:03.720><c> is</c><00:03:04.550><c> obviously</c><00:03:05.550><c> it's</c><00:03:05.910><c> rather</c><00:03:06.030><c> small</c><00:03:06.239><c> and</c>

00:03:06.790 --> 00:03:06.800 align:start position:0%
this is obviously it's rather small and
 

00:03:06.800 --> 00:03:09.020 align:start position:0%
this is obviously it's rather small and
it's<00:03:07.800><c> actually</c><00:03:08.040><c> not</c><00:03:08.130><c> a</c><00:03:08.190><c> very</c><00:03:08.430><c> nice</c><00:03:08.640><c> piece</c><00:03:08.880><c> of</c>

00:03:09.020 --> 00:03:09.030 align:start position:0%
it's actually not a very nice piece of
 

00:03:09.030 --> 00:03:10.520 align:start position:0%
it's actually not a very nice piece of
code<00:03:09.150><c> even</c><00:03:09.360><c> I</c><00:03:09.480><c> would</c><00:03:09.630><c> have</c><00:03:09.930><c> to</c><00:03:10.200><c> admit</c><00:03:10.410><c> that</c>

00:03:10.520 --> 00:03:10.530 align:start position:0%
code even I would have to admit that
 

00:03:10.530 --> 00:03:11.870 align:start position:0%
code even I would have to admit that
there's<00:03:10.739><c> a</c><00:03:10.800><c> lot</c><00:03:10.980><c> of</c><00:03:11.010><c> things</c><00:03:11.220><c> in</c><00:03:11.550><c> this</c><00:03:11.670><c> code</c>

00:03:11.870 --> 00:03:11.880 align:start position:0%
there's a lot of things in this code
 

00:03:11.880 --> 00:03:13.970 align:start position:0%
there's a lot of things in this code
that<00:03:12.060><c> could</c><00:03:12.180><c> be</c><00:03:12.269><c> tidied</c><00:03:12.600><c> up</c><00:03:12.690><c> and</c><00:03:12.900><c> improved</c><00:03:13.290><c> so</c>

00:03:13.970 --> 00:03:13.980 align:start position:0%
that could be tidied up and improved so
 

00:03:13.980 --> 00:03:16.610 align:start position:0%
that could be tidied up and improved so
we<00:03:14.100><c> won't</c><00:03:14.250><c> talk</c><00:03:14.370><c> about</c><00:03:14.610><c> that</c><00:03:15.080><c> other</c><00:03:16.080><c> than</c><00:03:16.410><c> to</c>

00:03:16.610 --> 00:03:16.620 align:start position:0%
we won't talk about that other than to
 

00:03:16.620 --> 00:03:17.840 align:start position:0%
we won't talk about that other than to
say<00:03:16.650><c> that</c><00:03:16.800><c> I've</c><00:03:17.100><c> looked</c><00:03:17.459><c> at</c><00:03:17.610><c> that</c><00:03:17.670><c> and</c><00:03:17.790><c> I</c>

00:03:17.840 --> 00:03:17.850 align:start position:0%
say that I've looked at that and I
 

00:03:17.850 --> 00:03:19.460 align:start position:0%
say that I've looked at that and I
thought<00:03:17.940><c> to</c><00:03:18.090><c> myself</c><00:03:18.120><c> no</c><00:03:18.840><c> I</c><00:03:19.050><c> don't</c><00:03:19.230><c> want</c><00:03:19.350><c> to</c><00:03:19.410><c> do</c>

00:03:19.460 --> 00:03:19.470 align:start position:0%
thought to myself no I don't want to do
 

00:03:19.470 --> 00:03:23.330 align:start position:0%
thought to myself no I don't want to do
it<00:03:19.560><c> that</c><00:03:19.650><c> way</c><00:03:19.800><c> I</c><00:03:20.070><c> want</c><00:03:20.430><c> to</c><00:03:20.580><c> use</c><00:03:20.790><c> streams</c><00:03:21.830><c> so</c><00:03:22.830><c> I</c>

00:03:23.330 --> 00:03:23.340 align:start position:0%
it that way I want to use streams so I
 

00:03:23.340 --> 00:03:26.120 align:start position:0%
it that way I want to use streams so I
came<00:03:24.150><c> up</c><00:03:24.300><c> with</c><00:03:24.330><c> this</c><00:03:24.540><c> and</c><00:03:24.840><c> the</c><00:03:25.560><c> the</c><00:03:25.769><c> thing</c><00:03:25.950><c> that</c>

00:03:26.120 --> 00:03:26.130 align:start position:0%
came up with this and the the thing that
 

00:03:26.130 --> 00:03:27.470 align:start position:0%
came up with this and the the thing that
I<00:03:26.190><c> was</c><00:03:26.280><c> really</c><00:03:26.550><c> focused</c><00:03:26.940><c> on</c><00:03:27.060><c> which</c><00:03:27.269><c> I</c>

00:03:27.470 --> 00:03:27.480 align:start position:0%
I was really focused on which I
 

00:03:27.480 --> 00:03:29.690 align:start position:0%
I was really focused on which I
shouldn't<00:03:27.810><c> have</c><00:03:27.959><c> been</c><00:03:28.170><c> was</c><00:03:28.950><c> making</c><00:03:29.400><c> this</c><00:03:29.519><c> as</c>

00:03:29.690 --> 00:03:29.700 align:start position:0%
shouldn't have been was making this as
 

00:03:29.700 --> 00:03:32.300 align:start position:0%
shouldn't have been was making this as
compact<00:03:30.330><c> as</c><00:03:30.570><c> possible</c><00:03:30.890><c> so</c><00:03:31.890><c> I</c><00:03:31.920><c> want</c><00:03:32.130><c> you</c><00:03:32.220><c> to</c>

00:03:32.300 --> 00:03:32.310 align:start position:0%
compact as possible so I want you to
 

00:03:32.310 --> 00:03:34.550 align:start position:0%
compact as possible so I want you to
squeeze<00:03:32.670><c> us</c><00:03:33.060><c> into</c><00:03:33.269><c> literally</c><00:03:33.810><c> three</c><00:03:34.200><c> lines</c><00:03:34.410><c> of</c>

00:03:34.550 --> 00:03:34.560 align:start position:0%
squeeze us into literally three lines of
 

00:03:34.560 --> 00:03:37.400 align:start position:0%
squeeze us into literally three lines of
code<00:03:34.620><c> so</c><00:03:35.489><c> as</c><00:03:35.519><c> you</c><00:03:35.670><c> can</c><00:03:35.760><c> see</c><00:03:35.940><c> here</c><00:03:36.239><c> I</c><00:03:36.390><c> have</c><00:03:37.019><c> come</c>

00:03:37.400 --> 00:03:37.410 align:start position:0%
code so as you can see here I have come
 

00:03:37.410 --> 00:03:41.300 align:start position:0%
code so as you can see here I have come
up<00:03:37.530><c> with</c><00:03:37.560><c> Perl</c><00:03:38.959><c> because</c><00:03:39.959><c> it's</c><00:03:40.440><c> rather</c><00:03:40.950><c> dense</c>

00:03:41.300 --> 00:03:41.310 align:start position:0%
up with Perl because it's rather dense
 

00:03:41.310 --> 00:03:43.729 align:start position:0%
up with Perl because it's rather dense
and<00:03:41.670><c> it's</c><00:03:42.299><c> not</c><00:03:42.540><c> actually</c><00:03:42.720><c> the</c><00:03:43.019><c> best</c><00:03:43.260><c> kind</c><00:03:43.650><c> of</c>

00:03:43.729 --> 00:03:43.739 align:start position:0%
and it's not actually the best kind of
 

00:03:43.739 --> 00:03:44.150 align:start position:0%
and it's not actually the best kind of
code

00:03:44.150 --> 00:03:44.160 align:start position:0%
code
 

00:03:44.160 --> 00:03:46.520 align:start position:0%
code
so<00:03:44.700><c> there</c><00:03:45.150><c> are</c><00:03:45.180><c> three</c><00:03:45.810><c> problems</c><00:03:46.019><c> with</c><00:03:46.380><c> this</c>

00:03:46.520 --> 00:03:46.530 align:start position:0%
so there are three problems with this
 

00:03:46.530 --> 00:03:48.140 align:start position:0%
so there are three problems with this
and<00:03:46.680><c> in</c><00:03:46.769><c> fact</c><00:03:46.920><c> I</c><00:03:47.220><c> I</c><00:03:47.400><c> came</c><00:03:47.820><c> up</c><00:03:47.940><c> with</c><00:03:47.970><c> two</c>

00:03:48.140 --> 00:03:48.150 align:start position:0%
and in fact I I came up with two
 

00:03:48.150 --> 00:03:50.060 align:start position:0%
and in fact I I came up with two
problems<00:03:48.480><c> and</c><00:03:48.600><c> then</c><00:03:48.720><c> Stewart</c><00:03:49.709><c> pointed</c><00:03:49.830><c> out</c>

00:03:50.060 --> 00:03:50.070 align:start position:0%
problems and then Stewart pointed out
 

00:03:50.070 --> 00:03:51.500 align:start position:0%
problems and then Stewart pointed out
there<00:03:50.220><c> was</c><00:03:50.340><c> a</c><00:03:50.370><c> third</c><00:03:50.730><c> problem</c><00:03:51.030><c> associated</c>

00:03:51.500 --> 00:03:51.510 align:start position:0%
there was a third problem associated
 

00:03:51.510 --> 00:03:54.039 align:start position:0%
there was a third problem associated
with<00:03:51.840><c> this</c><00:03:52.019><c> the</c><00:03:52.530><c> three</c><00:03:52.739><c> problems</c><00:03:53.070><c> are</c><00:03:53.370><c> that</c>

00:03:54.039 --> 00:03:54.049 align:start position:0%
with this the three problems are that
 

00:03:54.049 --> 00:03:57.500 align:start position:0%
with this the three problems are that
this<00:03:55.049><c> can</c><00:03:55.440><c> return</c><00:03:55.709><c> a</c><00:03:55.950><c> null</c><00:03:56.220><c> so</c><00:03:56.940><c> that's</c><00:03:57.120><c> you</c>

00:03:57.500 --> 00:03:57.510 align:start position:0%
this can return a null so that's you
 

00:03:57.510 --> 00:03:58.970 align:start position:0%
this can return a null so that's you
know<00:03:57.540><c> never</c><00:03:57.840><c> a</c><00:03:57.900><c> good</c><00:03:58.080><c> idea</c><00:03:58.320><c> because</c><00:03:58.470><c> if</c><00:03:58.890><c> you</c>

00:03:58.970 --> 00:03:58.980 align:start position:0%
know never a good idea because if you
 

00:03:58.980 --> 00:04:00.470 align:start position:0%
know never a good idea because if you
return<00:03:59.250><c> and</c><00:03:59.370><c> now</c><00:03:59.519><c> then</c><00:04:00.030><c> you're</c><00:04:00.150><c> gonna</c><00:04:00.239><c> have</c><00:04:00.420><c> to</c>

00:04:00.470 --> 00:04:00.480 align:start position:0%
return and now then you're gonna have to
 

00:04:00.480 --> 00:04:02.180 align:start position:0%
return and now then you're gonna have to
test<00:04:00.750><c> for</c><00:04:00.959><c> the</c><00:04:01.019><c> null</c><00:04:01.200><c> when</c><00:04:01.470><c> you</c><00:04:01.590><c> get</c><00:04:02.100><c> the</c>

00:04:02.180 --> 00:04:02.190 align:start position:0%
test for the null when you get the
 

00:04:02.190 --> 00:04:05.060 align:start position:0%
test for the null when you get the
result<00:04:02.519><c> and</c><00:04:02.760><c> deal</c><00:04:03.360><c> with</c><00:04:03.390><c> it</c><00:04:03.660><c> appropriately</c><00:04:04.070><c> so</c>

00:04:05.060 --> 00:04:05.070 align:start position:0%
result and deal with it appropriately so
 

00:04:05.070 --> 00:04:06.199 align:start position:0%
result and deal with it appropriately so
returning<00:04:05.430><c> and</c><00:04:05.549><c> I'll</c><00:04:05.640><c> not</c><00:04:05.910><c> a</c><00:04:05.940><c> good</c><00:04:06.090><c> idea</c>

00:04:06.199 --> 00:04:06.209 align:start position:0%
returning and I'll not a good idea
 

00:04:06.209 --> 00:04:07.910 align:start position:0%
returning and I'll not a good idea
especially<00:04:06.390><c> since</c><00:04:06.870><c> we</c><00:04:06.989><c> have</c><00:04:07.140><c> an</c><00:04:07.230><c> optional</c><00:04:07.620><c> in</c>

00:04:07.910 --> 00:04:07.920 align:start position:0%
especially since we have an optional in
 

00:04:07.920 --> 00:04:10.020 align:start position:0%
especially since we have an optional in
JDK<00:04:08.640><c> 8</c>

00:04:10.020 --> 00:04:10.030 align:start position:0%
JDK 8
 

00:04:10.030 --> 00:04:13.120 align:start position:0%
JDK 8
the<00:04:11.030><c> second</c><00:04:11.599><c> thing</c><00:04:11.750><c> is</c><00:04:11.959><c> that</c><00:04:12.020><c> split</c><00:04:12.560><c> this</c><00:04:12.980><c> is</c>

00:04:13.120 --> 00:04:13.130 align:start position:0%
the second thing is that split this is
 

00:04:13.130 --> 00:04:14.320 align:start position:0%
the second thing is that split this is
one<00:04:13.280><c> that</c><00:04:13.430><c> Stewart</c><00:04:13.849><c> pointed</c><00:04:13.970><c> out</c><00:04:14.209><c> to</c><00:04:14.300><c> me</c>

00:04:14.320 --> 00:04:14.330 align:start position:0%
one that Stewart pointed out to me
 

00:04:14.330 --> 00:04:16.720 align:start position:0%
one that Stewart pointed out to me
recently<00:04:14.569><c> split</c><00:04:14.989><c> is</c><00:04:15.230><c> called</c><00:04:15.440><c> twice</c><00:04:15.739><c> so</c><00:04:16.430><c> we're</c>

00:04:16.720 --> 00:04:16.730 align:start position:0%
recently split is called twice so we're
 

00:04:16.730 --> 00:04:17.530 align:start position:0%
recently split is called twice so we're
doing<00:04:16.790><c> the</c><00:04:16.940><c> same</c><00:04:17.000><c> thing</c>

00:04:17.530 --> 00:04:17.540 align:start position:0%
doing the same thing
 

00:04:17.540 --> 00:04:19.780 align:start position:0%
doing the same thing
calling<00:04:17.900><c> split</c><00:04:18.109><c> twice</c><00:04:18.380><c> and</c><00:04:18.650><c> that's</c><00:04:19.400><c> very</c>

00:04:19.780 --> 00:04:19.790 align:start position:0%
calling split twice and that's very
 

00:04:19.790 --> 00:04:22.060 align:start position:0%
calling split twice and that's very
inefficient<00:04:20.239><c> so</c><00:04:20.660><c> we</c><00:04:20.810><c> need</c><00:04:20.959><c> to</c><00:04:21.079><c> resolve</c><00:04:21.739><c> that</c>

00:04:22.060 --> 00:04:22.070 align:start position:0%
inefficient so we need to resolve that
 

00:04:22.070 --> 00:04:25.150 align:start position:0%
inefficient so we need to resolve that
problem<00:04:22.130><c> and</c><00:04:22.880><c> then</c><00:04:23.660><c> third</c><00:04:23.900><c> thing</c><00:04:24.080><c> is</c><00:04:24.230><c> it</c>

00:04:25.150 --> 00:04:25.160 align:start position:0%
problem and then third thing is it
 

00:04:25.160 --> 00:04:28.840 align:start position:0%
problem and then third thing is it
doesn't<00:04:25.400><c> call</c><00:04:25.700><c> the</c><00:04:26.300><c> URL</c><00:04:26.780><c> decode</c><00:04:27.850><c> decode</c>

00:04:28.840 --> 00:04:28.850 align:start position:0%
doesn't call the URL decode decode
 

00:04:28.850 --> 00:04:30.940 align:start position:0%
doesn't call the URL decode decode
method<00:04:29.270><c> which</c><00:04:29.630><c> is</c><00:04:29.930><c> used</c><00:04:30.260><c> in</c><00:04:30.440><c> the</c><00:04:30.560><c> original</c>

00:04:30.940 --> 00:04:30.950 align:start position:0%
method which is used in the original
 

00:04:30.950 --> 00:04:34.300 align:start position:0%
method which is used in the original
code<00:04:31.220><c> and</c><00:04:31.840><c> the</c><00:04:32.840><c> reason</c><00:04:33.169><c> for</c><00:04:33.200><c> that</c><00:04:33.350><c> was</c><00:04:34.010><c> because</c>

00:04:34.300 --> 00:04:34.310 align:start position:0%
code and the reason for that was because
 

00:04:34.310 --> 00:04:36.460 align:start position:0%
code and the reason for that was because
I<00:04:34.970><c> didn't</c><00:04:35.600><c> want</c><00:04:35.630><c> to</c><00:04:35.810><c> have</c><00:04:35.900><c> to</c><00:04:36.050><c> deal</c><00:04:36.200><c> with</c><00:04:36.350><c> the</c>

00:04:36.460 --> 00:04:36.470 align:start position:0%
I didn't want to have to deal with the
 

00:04:36.470 --> 00:04:38.440 align:start position:0%
I didn't want to have to deal with the
exception<00:04:36.950><c> because</c><00:04:37.220><c> the</c><00:04:37.760><c> problem</c><00:04:38.060><c> is</c><00:04:38.180><c> that</c>

00:04:38.440 --> 00:04:38.450 align:start position:0%
exception because the problem is that
 

00:04:38.450 --> 00:04:41.980 align:start position:0%
exception because the problem is that
decode<00:04:39.320><c> throws</c><00:04:39.680><c> a</c><00:04:39.889><c> checked</c><00:04:40.130><c> exception</c><00:04:40.639><c> and</c><00:04:40.990><c> if</c>

00:04:41.980 --> 00:04:41.990 align:start position:0%
decode throws a checked exception and if
 

00:04:41.990 --> 00:04:43.750 align:start position:0%
decode throws a checked exception and if
you're<00:04:42.200><c> using</c><00:04:42.410><c> a</c><00:04:42.560><c> stream</c><00:04:42.860><c> and</c><00:04:43.310><c> using</c><00:04:43.639><c> the</c>

00:04:43.750 --> 00:04:43.760 align:start position:0%
you're using a stream and using the
 

00:04:43.760 --> 00:04:46.240 align:start position:0%
you're using a stream and using the
stream<00:04:43.970><c> API</c><00:04:44.290><c> you</c><00:04:45.290><c> can't</c><00:04:45.560><c> throw</c><00:04:45.889><c> an</c><00:04:46.160><c> exception</c>

00:04:46.240 --> 00:04:46.250 align:start position:0%
stream API you can't throw an exception
 

00:04:46.250 --> 00:04:49.300 align:start position:0%
stream API you can't throw an exception
out<00:04:46.790><c> of</c><00:04:47.060><c> the</c><00:04:47.300><c> stream</c><00:04:47.660><c> method</c><00:04:48.110><c> so</c><00:04:48.560><c> do</c><00:04:49.070><c> you</c><00:04:49.160><c> want</c>

00:04:49.300 --> 00:04:49.310 align:start position:0%
out of the stream method so do you want
 

00:04:49.310 --> 00:04:51.760 align:start position:0%
out of the stream method so do you want
to<00:04:49.370><c> just</c><00:04:49.690><c> yeah</c><00:04:50.690><c> a</c><00:04:50.720><c> couple</c><00:04:51.050><c> things</c><00:04:51.139><c> on</c><00:04:51.350><c> that</c><00:04:51.380><c> so</c>

00:04:51.760 --> 00:04:51.770 align:start position:0%
to just yeah a couple things on that so
 

00:04:51.770 --> 00:04:53.800 align:start position:0%
to just yeah a couple things on that so
so<00:04:52.040><c> one</c><00:04:52.250><c> is</c><00:04:52.430><c> yeah</c><00:04:52.760><c> so</c><00:04:52.880><c> the</c><00:04:52.970><c> original</c><00:04:53.120><c> code</c><00:04:53.510><c> had</c>

00:04:53.800 --> 00:04:53.810 align:start position:0%
so one is yeah so the original code had
 

00:04:53.810 --> 00:04:55.600 align:start position:0%
so one is yeah so the original code had
this<00:04:53.990><c> had</c><00:04:54.320><c> this</c><00:04:54.470><c> interesting</c><00:04:54.979><c> thing</c><00:04:55.190><c> and</c><00:04:55.340><c> this</c>

00:04:55.600 --> 00:04:55.610 align:start position:0%
this had this interesting thing and this
 

00:04:55.610 --> 00:04:57.490 align:start position:0%
this had this interesting thing and this
isn't<00:04:55.910><c> particularly</c><00:04:56.360><c> about</c><00:04:56.720><c> streams</c><00:04:57.169><c> but</c>

00:04:57.490 --> 00:04:57.500 align:start position:0%
isn't particularly about streams but
 

00:04:57.500 --> 00:05:00.879 align:start position:0%
isn't particularly about streams but
it's<00:04:57.830><c> it's</c><00:04:58.240><c> it's</c><00:04:59.240><c> about</c><00:04:59.389><c> general</c><00:04:59.750><c> code</c><00:04:59.990><c> and</c><00:05:00.380><c> as</c>

00:05:00.879 --> 00:05:00.889 align:start position:0%
it's it's it's about general code and as
 

00:05:00.889 --> 00:05:02.409 align:start position:0%
it's it's it's about general code and as
we<00:05:01.070><c> improve</c><00:05:01.370><c> the</c><00:05:01.520><c> code</c><00:05:01.760><c> in</c><00:05:01.940><c> general</c><00:05:02.300><c> it</c>

00:05:02.409 --> 00:05:02.419 align:start position:0%
we improve the code in general it
 

00:05:02.419 --> 00:05:04.690 align:start position:0%
we improve the code in general it
actually<00:05:02.720><c> makes</c><00:05:02.870><c> streams</c><00:05:03.229><c> much</c><00:05:03.740><c> much</c><00:05:04.370><c> nicer</c>

00:05:04.690 --> 00:05:04.700 align:start position:0%
actually makes streams much much nicer
 

00:05:04.700 --> 00:05:06.820 align:start position:0%
actually makes streams much much nicer
to<00:05:04.729><c> deal</c><00:05:04.970><c> with</c><00:05:05.180><c> but</c><00:05:05.450><c> in</c><00:05:05.840><c> this</c><00:05:06.200><c> particular</c><00:05:06.380><c> case</c>

00:05:06.820 --> 00:05:06.830 align:start position:0%
to deal with but in this particular case
 

00:05:06.830 --> 00:05:09.700 align:start position:0%
to deal with but in this particular case
the<00:05:07.460><c> the</c><00:05:07.490><c> original</c><00:05:08.270><c> code</c><00:05:08.540><c> accepted</c><00:05:09.380><c> a</c><00:05:09.500><c> null</c>

00:05:09.700 --> 00:05:09.710 align:start position:0%
the the original code accepted a null
 

00:05:09.710 --> 00:05:12.010 align:start position:0%
the the original code accepted a null
and<00:05:10.010><c> it</c><00:05:10.160><c> had</c><00:05:10.310><c> to</c><00:05:10.400><c> test</c><00:05:10.639><c> it</c><00:05:10.820><c> and</c><00:05:11.000><c> if</c><00:05:11.240><c> it</c><00:05:11.389><c> if</c><00:05:11.960><c> the</c>

00:05:12.010 --> 00:05:12.020 align:start position:0%
and it had to test it and if it if the
 

00:05:12.020 --> 00:05:15.279 align:start position:0%
and it had to test it and if it if the
input<00:05:12.620><c> was</c><00:05:12.650><c> null</c><00:05:13.040><c> a</c><00:05:13.070><c> returned</c><00:05:13.550><c> null</c><00:05:13.850><c> and</c><00:05:14.289><c> and</c>

00:05:15.279 --> 00:05:15.289 align:start position:0%
input was null a returned null and and
 

00:05:15.289 --> 00:05:17.529 align:start position:0%
input was null a returned null and and
it's<00:05:16.010><c> like</c><00:05:16.039><c> everybody</c><00:05:16.640><c> does</c><00:05:16.850><c> that</c><00:05:17.000><c> and</c><00:05:17.270><c> that's</c>

00:05:17.529 --> 00:05:17.539 align:start position:0%
it's like everybody does that and that's
 

00:05:17.539 --> 00:05:19.000 align:start position:0%
it's like everybody does that and that's
that's<00:05:17.840><c> sort</c><00:05:18.050><c> of</c><00:05:18.080><c> a</c><00:05:18.200><c> strange</c><00:05:18.470><c> thing</c><00:05:18.680><c> to</c><00:05:18.740><c> do</c><00:05:18.890><c> if</c>

00:05:19.000 --> 00:05:19.010 align:start position:0%
that's sort of a strange thing to do if
 

00:05:19.010 --> 00:05:20.200 align:start position:0%
that's sort of a strange thing to do if
you<00:05:19.100><c> think</c><00:05:19.160><c> about</c><00:05:19.370><c> it</c><00:05:19.610><c> because</c><00:05:19.850><c> what</c><00:05:19.970><c> you</c><00:05:20.090><c> want</c>

00:05:20.200 --> 00:05:20.210 align:start position:0%
you think about it because what you want
 

00:05:20.210 --> 00:05:22.180 align:start position:0%
you think about it because what you want
is<00:05:20.419><c> a</c><00:05:20.450><c> value</c><00:05:20.960><c> which</c><00:05:21.260><c> is</c><00:05:21.410><c> a</c><00:05:21.440><c> map</c><00:05:21.650><c> from</c><00:05:21.680><c> string</c><00:05:22.160><c> to</c>

00:05:22.180 --> 00:05:22.190 align:start position:0%
is a value which is a map from string to
 

00:05:22.190 --> 00:05:24.250 align:start position:0%
is a value which is a map from string to
string<00:05:22.820><c> Kalista</c><00:05:23.240><c> string</c><00:05:23.479><c> and</c><00:05:23.990><c> you</c><00:05:24.050><c> want</c><00:05:24.200><c> to</c>

00:05:24.250 --> 00:05:24.260 align:start position:0%
string Kalista string and you want to
 

00:05:24.260 --> 00:05:26.830 align:start position:0%
string Kalista string and you want to
process<00:05:24.440><c> those</c><00:05:24.860><c> and</c><00:05:25.160><c> so</c><00:05:25.580><c> if</c><00:05:26.030><c> you</c><00:05:26.240><c> have</c><00:05:26.419><c> this</c><00:05:26.570><c> I</c>

00:05:26.830 --> 00:05:26.840 align:start position:0%
process those and so if you have this I
 

00:05:26.840 --> 00:05:29.230 align:start position:0%
process those and so if you have this I
think<00:05:27.380><c> it's</c><00:05:27.590><c> a</c><00:05:27.650><c> bad</c><00:05:27.830><c> coding</c><00:05:28.190><c> habit</c><00:05:28.610><c> Trisha</c><00:05:28.850><c> gee</c>

00:05:29.230 --> 00:05:29.240 align:start position:0%
think it's a bad coding habit Trisha gee
 

00:05:29.240 --> 00:05:31.270 align:start position:0%
think it's a bad coding habit Trisha gee
wrote<00:05:29.570><c> a</c><00:05:29.600><c> blog</c><00:05:30.080><c> post</c><00:05:30.140><c> a</c><00:05:30.470><c> few</c><00:05:30.590><c> weeks</c><00:05:30.770><c> ago</c><00:05:30.950><c> at</c><00:05:31.220><c> the</c>

00:05:31.270 --> 00:05:31.280 align:start position:0%
wrote a blog post a few weeks ago at the
 

00:05:31.280 --> 00:05:32.370 align:start position:0%
wrote a blog post a few weeks ago at the
JetBrains

00:05:32.370 --> 00:05:32.380 align:start position:0%
JetBrains
 

00:05:32.380 --> 00:05:34.810 align:start position:0%
JetBrains
she<00:05:33.380><c> has</c><00:05:33.470><c> a</c><00:05:33.500><c> blog</c><00:05:33.800><c> series</c><00:05:34.010><c> about</c><00:05:34.280><c> code</c><00:05:34.520><c> smells</c>

00:05:34.810 --> 00:05:34.820 align:start position:0%
she has a blog series about code smells
 

00:05:34.820 --> 00:05:37.450 align:start position:0%
she has a blog series about code smells
where<00:05:35.060><c> she</c><00:05:35.180><c> talks</c><00:05:35.360><c> about</c><00:05:35.570><c> no</c><00:05:35.780><c> and</c><00:05:36.190><c> it</c><00:05:37.190><c> turns</c>

00:05:37.450 --> 00:05:37.460 align:start position:0%
where she talks about no and it turns
 

00:05:37.460 --> 00:05:38.860 align:start position:0%
where she talks about no and it turns
out<00:05:37.610><c> the</c><00:05:37.760><c> code</c><00:05:37.940><c> base</c><00:05:38.090><c> she</c><00:05:38.270><c> was</c><00:05:38.419><c> she</c><00:05:38.750><c> was</c>

00:05:38.860 --> 00:05:38.870 align:start position:0%
out the code base she was she was
 

00:05:38.870 --> 00:05:42.640 align:start position:0%
out the code base she was she was
working<00:05:39.169><c> on</c><00:05:39.490><c> every</c><00:05:40.490><c> method</c><00:05:40.669><c> said</c><00:05:41.180><c> oh</c><00:05:41.510><c> if</c><00:05:42.289><c> I</c><00:05:42.470><c> get</c>

00:05:42.640 --> 00:05:42.650 align:start position:0%
working on every method said oh if I get
 

00:05:42.650 --> 00:05:45.430 align:start position:0%
working on every method said oh if I get
null<00:05:42.889><c> return</c><00:05:43.070><c> null</c><00:05:43.250><c> and</c><00:05:43.870><c> even</c><00:05:44.870><c> if</c><00:05:45.020><c> that</c><00:05:45.169><c> didn't</c>

00:05:45.430 --> 00:05:45.440 align:start position:0%
null return null and even if that didn't
 

00:05:45.440 --> 00:05:46.900 align:start position:0%
null return null and even if that didn't
make<00:05:45.530><c> sense</c><00:05:45.680><c> at</c><00:05:45.860><c> all</c><00:05:45.979><c> it</c><00:05:46.280><c> was</c><00:05:46.400><c> sort</c><00:05:46.580><c> of</c><00:05:46.610><c> a</c><00:05:46.700><c> bad</c>

00:05:46.900 --> 00:05:46.910 align:start position:0%
make sense at all it was sort of a bad
 

00:05:46.910 --> 00:05:48.550 align:start position:0%
make sense at all it was sort of a bad
habit<00:05:47.330><c> that</c><00:05:47.360><c> was</c><00:05:47.570><c> propagated</c><00:05:48.169><c> throughout</c><00:05:48.380><c> the</c>

00:05:48.550 --> 00:05:48.560 align:start position:0%
habit that was propagated throughout the
 

00:05:48.560 --> 00:05:49.960 align:start position:0%
habit that was propagated throughout the
code<00:05:48.740><c> base</c><00:05:48.889><c> and</c><00:05:49.160><c> I</c><00:05:49.400><c> think</c><00:05:49.610><c> that's</c><00:05:49.729><c> kind</c><00:05:49.940><c> of</c>

00:05:49.960 --> 00:05:49.970 align:start position:0%
code base and I think that's kind of
 

00:05:49.970 --> 00:05:52.360 align:start position:0%
code base and I think that's kind of
what's<00:05:50.150><c> going</c><00:05:50.330><c> on</c><00:05:50.510><c> here</c><00:05:50.990><c> because</c><00:05:51.770><c> if</c><00:05:52.190><c> you</c>

00:05:52.360 --> 00:05:52.370 align:start position:0%
what's going on here because if you
 

00:05:52.370 --> 00:05:53.920 align:start position:0%
what's going on here because if you
think<00:05:52.550><c> think</c><00:05:52.910><c> about</c><00:05:53.090><c> the</c><00:05:53.210><c> context</c><00:05:53.720><c> here</c>

00:05:53.920 --> 00:05:53.930 align:start position:0%
think think about the context here
 

00:05:53.930 --> 00:05:56.200 align:start position:0%
think think about the context here
you're<00:05:54.110><c> you</c><00:05:54.350><c> have</c><00:05:54.380><c> a</c><00:05:54.500><c> URL</c><00:05:54.740><c> and</c><00:05:55.340><c> you</c><00:05:55.910><c> want</c><00:05:56.090><c> to</c>

00:05:56.200 --> 00:05:56.210 align:start position:0%
you're you have a URL and you want to
 

00:05:56.210 --> 00:05:57.550 align:start position:0%
you're you have a URL and you want to
grab<00:05:56.450><c> the</c><00:05:56.630><c> arguments</c><00:05:57.050><c> off</c><00:05:57.139><c> the</c><00:05:57.289><c> end</c><00:05:57.440><c> of</c><00:05:57.500><c> the</c>

00:05:57.550 --> 00:05:57.560 align:start position:0%
grab the arguments off the end of the
 

00:05:57.560 --> 00:06:01.140 align:start position:0%
grab the arguments off the end of the
URL<00:05:58.180><c> so</c><00:05:59.180><c> if</c><00:05:59.780><c> there</c><00:06:00.050><c> are</c><00:06:00.110><c> any</c><00:06:00.229><c> arguments</c><00:06:00.770><c> then</c>

00:06:01.140 --> 00:06:01.150 align:start position:0%
URL so if there are any arguments then
 

00:06:01.150 --> 00:06:04.719 align:start position:0%
URL so if there are any arguments then
that<00:06:02.150><c> you</c><00:06:02.510><c> have</c><00:06:02.840><c> a</c><00:06:02.870><c> non-empty</c><00:06:03.289><c> string</c><00:06:03.830><c> if</c>

00:06:04.719 --> 00:06:04.729 align:start position:0%
that you have a non-empty string if
 

00:06:04.729 --> 00:06:06.670 align:start position:0%
that you have a non-empty string if
there<00:06:04.970><c> aren't</c><00:06:05.180><c> any</c><00:06:05.330><c> arguments</c><00:06:05.960><c> then</c><00:06:06.200><c> maybe</c>

00:06:06.670 --> 00:06:06.680 align:start position:0%
there aren't any arguments then maybe
 

00:06:06.680 --> 00:06:08.469 align:start position:0%
there aren't any arguments then maybe
you<00:06:06.770><c> should</c><00:06:06.919><c> have</c><00:06:06.950><c> an</c><00:06:07.130><c> empty</c><00:06:07.310><c> string</c><00:06:07.610><c> but</c><00:06:08.389><c> you</c>

00:06:08.469 --> 00:06:08.479 align:start position:0%
you should have an empty string but you
 

00:06:08.479 --> 00:06:09.820 align:start position:0%
you should have an empty string but you
should<00:06:08.630><c> never</c><00:06:08.780><c> have</c><00:06:08.960><c> null</c><00:06:09.200><c> so</c><00:06:09.560><c> where</c><00:06:09.710><c> does</c>

00:06:09.820 --> 00:06:09.830 align:start position:0%
should never have null so where does
 

00:06:09.830 --> 00:06:12.520 align:start position:0%
should never have null so where does
null<00:06:10.039><c> come</c><00:06:10.310><c> from</c><00:06:10.570><c> right</c><00:06:11.570><c> and</c><00:06:11.750><c> then</c><00:06:11.870><c> so</c><00:06:12.139><c> if</c><00:06:12.380><c> you</c>

00:06:12.520 --> 00:06:12.530 align:start position:0%
null come from right and then so if you
 

00:06:12.530 --> 00:06:14.290 align:start position:0%
null come from right and then so if you
if<00:06:12.770><c> you</c><00:06:12.860><c> think</c><00:06:13.039><c> about</c><00:06:13.310><c> getting</c><00:06:13.669><c> rid</c><00:06:13.910><c> of</c><00:06:13.970><c> nulls</c>

00:06:14.290 --> 00:06:14.300 align:start position:0%
if you think about getting rid of nulls
 

00:06:14.300 --> 00:06:16.060 align:start position:0%
if you think about getting rid of nulls
you<00:06:14.570><c> never</c><00:06:14.810><c> return</c><00:06:15.169><c> null</c><00:06:15.410><c> should</c><00:06:15.680><c> return</c><00:06:15.919><c> an</c>

00:06:16.060 --> 00:06:16.070 align:start position:0%
you never return null should return an
 

00:06:16.070 --> 00:06:17.800 align:start position:0%
you never return null should return an
empty<00:06:16.190><c> map</c><00:06:16.550><c> instead</c><00:06:17.060><c> and</c><00:06:17.389><c> then</c><00:06:17.510><c> whatever</c>

00:06:17.800 --> 00:06:17.810 align:start position:0%
empty map instead and then whatever
 

00:06:17.810 --> 00:06:19.510 align:start position:0%
empty map instead and then whatever
meets<00:06:18.440><c> the</c><00:06:18.560><c> processes</c><00:06:19.070><c> it</c><00:06:19.159><c> will</c><00:06:19.280><c> process</c>

00:06:19.510 --> 00:06:19.520 align:start position:0%
meets the processes it will process
 

00:06:19.520 --> 00:06:21.370 align:start position:0%
meets the processes it will process
every<00:06:20.060><c> entry</c><00:06:20.360><c> of</c><00:06:20.450><c> the</c><00:06:20.539><c> empty</c><00:06:20.840><c> map</c><00:06:20.990><c> which</c>

00:06:21.370 --> 00:06:21.380 align:start position:0%
every entry of the empty map which
 

00:06:21.380 --> 00:06:24.010 align:start position:0%
every entry of the empty map which
we'll<00:06:21.710><c> just</c><00:06:21.920><c> do</c><00:06:22.100><c> nothing</c><00:06:22.490><c> so</c><00:06:23.060><c> you</c><00:06:23.120><c> just</c><00:06:23.300><c> so</c>

00:06:24.010 --> 00:06:24.020 align:start position:0%
we'll just do nothing so you just so
 

00:06:24.020 --> 00:06:26.830 align:start position:0%
we'll just do nothing so you just so
you'd<00:06:24.650><c> really</c><00:06:24.980><c> try</c><00:06:25.520><c> to</c><00:06:25.580><c> think</c><00:06:25.910><c> about</c><00:06:26.060><c> when</c><00:06:26.570><c> you</c>

00:06:26.830 --> 00:06:26.840 align:start position:0%
you'd really try to think about when you
 

00:06:26.840 --> 00:06:28.900 align:start position:0%
you'd really try to think about when you
really<00:06:27.290><c> need</c><00:06:27.590><c> to</c><00:06:27.710><c> process</c><00:06:27.950><c> null</c><00:06:28.400><c> and</c><00:06:28.730><c> when</c>

00:06:28.900 --> 00:06:28.910 align:start position:0%
really need to process null and when
 

00:06:28.910 --> 00:06:30.580 align:start position:0%
really need to process null and when
it's<00:06:29.060><c> just</c><00:06:29.210><c> a</c><00:06:29.300><c> bad</c><00:06:29.450><c> habit</c><00:06:29.690><c> of</c><00:06:30.110><c> oh</c><00:06:30.290><c> I</c><00:06:30.320><c> better</c>

00:06:30.580 --> 00:06:30.590 align:start position:0%
it's just a bad habit of oh I better
 

00:06:30.590 --> 00:06:34.150 align:start position:0%
it's just a bad habit of oh I better
check<00:06:30.800><c> for</c><00:06:31.010><c> null</c><00:06:31.130><c> and</c><00:06:31.310><c> return</c><00:06:31.610><c> null</c><00:06:31.820><c> oh</c><00:06:33.160><c> and</c>

00:06:34.150 --> 00:06:34.160 align:start position:0%
check for null and return null oh and
 

00:06:34.160 --> 00:06:35.410 align:start position:0%
check for null and return null oh and
then<00:06:34.250><c> one</c><00:06:34.430><c> quick</c><00:06:34.610><c> thing</c><00:06:34.820><c> here</c><00:06:35.120><c> to</c><00:06:35.270><c> the</c>

00:06:35.410 --> 00:06:35.420 align:start position:0%
then one quick thing here to the
 

00:06:35.420 --> 00:06:38.140 align:start position:0%
then one quick thing here to the
original<00:06:35.720><c> code</c><00:06:35.930><c> had</c><00:06:36.860><c> a</c><00:06:37.130><c> regular</c><00:06:37.610><c> expression</c>

00:06:38.140 --> 00:06:38.150 align:start position:0%
original code had a regular expression
 

00:06:38.150 --> 00:06:41.110 align:start position:0%
original code had a regular expression
in<00:06:39.080><c> the</c><00:06:39.290><c> split</c><00:06:39.710><c> command</c><00:06:40.010><c> which</c><00:06:40.790><c> actually</c>

00:06:41.110 --> 00:06:41.120 align:start position:0%
in the split command which actually
 

00:06:41.120 --> 00:06:42.670 align:start position:0%
in the split command which actually
slows<00:06:41.390><c> it</c><00:06:41.540><c> down</c><00:06:41.570><c> quite</c><00:06:41.990><c> a</c><00:06:42.020><c> bit</c><00:06:42.110><c> because</c><00:06:42.410><c> it's</c>

00:06:42.670 --> 00:06:42.680 align:start position:0%
slows it down quite a bit because it's
 

00:06:42.680 --> 00:06:44.080 align:start position:0%
slows it down quite a bit because it's
all<00:06:42.800><c> it's</c><00:06:42.980><c> doing</c><00:06:43.130><c> is</c><00:06:43.340><c> matching</c><00:06:43.730><c> a</c><00:06:43.790><c> single</c>

00:06:44.080 --> 00:06:44.090 align:start position:0%
all it's doing is matching a single
 

00:06:44.090 --> 00:06:45.610 align:start position:0%
all it's doing is matching a single
character<00:06:44.540><c> so</c><00:06:44.840><c> there's</c><00:06:45.020><c> actually</c><00:06:45.320><c> a</c><00:06:45.350><c> fast</c>

00:06:45.610 --> 00:06:45.620 align:start position:0%
character so there's actually a fast
 

00:06:45.620 --> 00:06:47.680 align:start position:0%
character so there's actually a fast
path<00:06:45.920><c> in</c><00:06:46.160><c> the</c><00:06:46.280><c> split</c><00:06:46.550><c> method</c><00:06:46.580><c> it</c><00:06:47.360><c> takes</c><00:06:47.600><c> a</c>

00:06:47.680 --> 00:06:47.690 align:start position:0%
path in the split method it takes a
 

00:06:47.690 --> 00:06:49.420 align:start position:0%
path in the split method it takes a
regular<00:06:47.960><c> expression</c><00:06:48.410><c> but</c><00:06:48.590><c> if</c><00:06:48.680><c> it</c><00:06:48.800><c> says</c><00:06:48.980><c> oh</c><00:06:49.190><c> if</c>

00:06:49.420 --> 00:06:49.430 align:start position:0%
regular expression but if it says oh if
 

00:06:49.430 --> 00:06:51.190 align:start position:0%
regular expression but if it says oh if
I'm<00:06:49.520><c> splitting</c><00:06:49.910><c> on</c><00:06:49.970><c> a</c><00:06:50.030><c> single</c><00:06:50.330><c> character</c><00:06:50.510><c> goes</c>

00:06:51.190 --> 00:06:51.200 align:start position:0%
I'm splitting on a single character goes
 

00:06:51.200 --> 00:06:52.480 align:start position:0%
I'm splitting on a single character goes
through<00:06:51.230><c> a</c><00:06:51.410><c> completely</c><00:06:51.830><c> different</c><00:06:51.980><c> section</c>

00:06:52.480 --> 00:06:52.490 align:start position:0%
through a completely different section
 

00:06:52.490 --> 00:06:54.880 align:start position:0%
through a completely different section
of<00:06:52.550><c> code</c><00:06:52.760><c> that</c><00:06:52.790><c> bypasses</c><00:06:53.390><c> all</c><00:06:53.750><c> the</c><00:06:53.960><c> expensive</c>

00:06:54.880 --> 00:06:54.890 align:start position:0%
of code that bypasses all the expensive
 

00:06:54.890 --> 00:06:56.710 align:start position:0%
of code that bypasses all the expensive
regular<00:06:55.250><c> expression</c><00:06:55.640><c> processing</c><00:06:56.150><c> so</c><00:06:56.540><c> it</c><00:06:56.600><c> goes</c>

00:06:56.710 --> 00:06:56.720 align:start position:0%
regular expression processing so it goes
 

00:06:56.720 --> 00:07:00.430 align:start position:0%
regular expression processing so it goes
much<00:06:56.870><c> faster</c><00:06:57.670><c> good</c><00:06:58.670><c> to</c><00:06:58.760><c> know</c><00:06:58.930><c> okay</c><00:06:59.960><c> so</c><00:07:00.260><c> then</c>

00:07:00.430 --> 00:07:00.440 align:start position:0%
much faster good to know okay so then
 

00:07:00.440 --> 00:07:02.170 align:start position:0%
much faster good to know okay so then
obviously<00:07:00.950><c> after</c><00:07:01.340><c> a</c><00:07:01.460><c> bit</c><00:07:01.580><c> of</c><00:07:01.670><c> discussion</c><00:07:01.910><c> with</c>

00:07:02.170 --> 00:07:02.180 align:start position:0%
obviously after a bit of discussion with
 

00:07:02.180 --> 00:07:04.120 align:start position:0%
obviously after a bit of discussion with
it<00:07:02.570><c> Stewart</c><00:07:02.870><c> I</c><00:07:03.050><c> came</c><00:07:03.440><c> up</c><00:07:03.560><c> with</c><00:07:03.590><c> a</c><00:07:03.740><c> better</c>

00:07:04.120 --> 00:07:04.130 align:start position:0%
it Stewart I came up with a better
 

00:07:04.130 --> 00:07:08.680 align:start position:0%
it Stewart I came up with a better
approach<00:07:04.430><c> and</c><00:07:05.890><c> so</c><00:07:06.890><c> the</c><00:07:07.850><c> idea</c><00:07:08.060><c> here</c><00:07:08.120><c> is</c><00:07:08.360><c> to</c><00:07:08.390><c> to</c>

00:07:08.680 --> 00:07:08.690 align:start position:0%
approach and so the idea here is to to
 

00:07:08.690 --> 00:07:10.480 align:start position:0%
approach and so the idea here is to to
extract<00:07:09.050><c> some</c><00:07:09.230><c> of</c><00:07:09.260><c> the</c><00:07:09.380><c> code</c><00:07:09.530><c> out</c><00:07:09.680><c> into</c><00:07:10.460><c> a</c>

00:07:10.480 --> 00:07:10.490 align:start position:0%
extract some of the code out into a
 

00:07:10.490 --> 00:07:12.910 align:start position:0%
extract some of the code out into a
method<00:07:11.260><c> here</c><00:07:12.260><c> what</c><00:07:12.470><c> we're</c><00:07:12.560><c> going</c><00:07:12.680><c> to</c><00:07:12.710><c> do</c><00:07:12.830><c> is</c>

00:07:12.910 --> 00:07:12.920 align:start position:0%
method here what we're going to do is
 

00:07:12.920 --> 00:07:14.440 align:start position:0%
method here what we're going to do is
we're<00:07:13.040><c> going</c><00:07:13.130><c> to</c><00:07:13.190><c> split</c><00:07:13.400><c> the</c><00:07:13.640><c> key</c><00:07:13.850><c> and</c><00:07:14.060><c> the</c>

00:07:14.440 --> 00:07:14.450 align:start position:0%
we're going to split the key and the
 

00:07:14.450 --> 00:07:17.380 align:start position:0%
we're going to split the key and the
value<00:07:14.510><c> and</c><00:07:15.080><c> that</c><00:07:15.800><c> way</c><00:07:16.010><c> we</c><00:07:16.220><c> can</c><00:07:16.430><c> use</c><00:07:16.700><c> the</c><00:07:16.970><c> URL</c>

00:07:17.380 --> 00:07:17.390 align:start position:0%
value and that way we can use the URL
 

00:07:17.390 --> 00:07:20.140 align:start position:0%
value and that way we can use the URL
decoded<00:07:18.170><c> decode</c><00:07:18.530><c> method</c><00:07:18.920><c> and</c><00:07:19.160><c> we</c><00:07:19.850><c> can</c><00:07:20.000><c> deal</c>

00:07:20.140 --> 00:07:20.150 align:start position:0%
decoded decode method and we can deal
 

00:07:20.150 --> 00:07:21.610 align:start position:0%
decoded decode method and we can deal
with<00:07:20.180><c> the</c><00:07:20.510><c> exception</c><00:07:20.930><c> but</c><00:07:21.020><c> we</c><00:07:21.140><c> have</c><00:07:21.350><c> to</c><00:07:21.500><c> do</c>

00:07:21.610 --> 00:07:21.620 align:start position:0%
with the exception but we have to do
 

00:07:21.620 --> 00:07:23.170 align:start position:0%
with the exception but we have to do
that<00:07:21.770><c> in</c><00:07:21.920><c> the</c><00:07:22.010><c> method</c><00:07:22.370><c> so</c><00:07:22.490><c> we</c><00:07:22.610><c> have</c><00:07:22.760><c> to</c><00:07:22.880><c> somehow</c>

00:07:23.170 --> 00:07:23.180 align:start position:0%
that in the method so we have to somehow
 

00:07:23.180 --> 00:07:25.120 align:start position:0%
that in the method so we have to somehow
deal<00:07:23.780><c> with</c><00:07:23.960><c> the</c><00:07:24.110><c> exception</c><00:07:24.770><c> the</c><00:07:24.950><c> checked</c>

00:07:25.120 --> 00:07:25.130 align:start position:0%
deal with the exception the checked
 

00:07:25.130 --> 00:07:28.390 align:start position:0%
deal with the exception the checked
exception<00:07:25.580><c> in</c><00:07:26.000><c> that</c><00:07:26.060><c> method</c><00:07:26.450><c> and</c><00:07:26.810><c> so</c><00:07:27.620><c> you</c><00:07:28.280><c> know</c>

00:07:28.390 --> 00:07:28.400 align:start position:0%
exception in that method and so you know
 

00:07:28.400 --> 00:07:30.490 align:start position:0%
exception in that method and so you know
it's<00:07:29.030><c> it</c><00:07:29.510><c> comes</c><00:07:29.630><c> down</c><00:07:29.870><c> to</c><00:07:29.990><c> the</c><00:07:30.080><c> design</c><00:07:30.320><c> of</c><00:07:30.440><c> the</c>

00:07:30.490 --> 00:07:30.500 align:start position:0%
it's it comes down to the design of the
 

00:07:30.500 --> 00:07:32.680 align:start position:0%
it's it comes down to the design of the
streams<00:07:30.740><c> API</c><00:07:31.040><c> and</c><00:07:31.490><c> I'm</c><00:07:31.610><c> spoken</c><00:07:32.390><c> to</c><00:07:32.450><c> Brian</c>

00:07:32.680 --> 00:07:32.690 align:start position:0%
streams API and I'm spoken to Brian
 

00:07:32.690 --> 00:07:35.290 align:start position:0%
streams API and I'm spoken to Brian
about<00:07:32.930><c> this</c><00:07:33.140><c> in</c><00:07:33.470><c> the</c><00:07:33.590><c> past</c><00:07:33.910><c> about</c><00:07:34.910><c> the</c><00:07:35.030><c> digit</c>

00:07:35.290 --> 00:07:35.300 align:start position:0%
about this in the past about the digit
 

00:07:35.300 --> 00:07:39.580 align:start position:0%
about this in the past about the digit
yes<00:07:35.450><c> yeah</c><00:07:35.870><c> brackets</c><00:07:36.230><c> yeah</c><00:07:36.880><c> yeah</c><00:07:38.320><c> about</c><00:07:39.320><c> you</c>

00:07:39.580 --> 00:07:39.590 align:start position:0%
yes yeah brackets yeah yeah about you
 

00:07:39.590 --> 00:07:41.530 align:start position:0%
yes yeah brackets yeah yeah about you
know<00:07:39.710><c> the</c><00:07:39.860><c> way</c><00:07:40.130><c> that</c><00:07:40.280><c> you</c><00:07:40.340><c> don't</c><00:07:40.730><c> have</c><00:07:41.360><c> the</c>

00:07:41.530 --> 00:07:41.540 align:start position:0%
know the way that you don't have the
 

00:07:41.540 --> 00:07:44.260 align:start position:0%
know the way that you don't have the
ability<00:07:41.840><c> to</c><00:07:41.870><c> throw</c><00:07:42.230><c> an</c><00:07:42.590><c> exception</c><00:07:42.980><c> out</c><00:07:43.580><c> of</c><00:07:43.910><c> a</c>

00:07:44.260 --> 00:07:44.270 align:start position:0%
ability to throw an exception out of a
 

00:07:44.270 --> 00:07:46.090 align:start position:0%
ability to throw an exception out of a
stream<00:07:44.840><c> because</c><00:07:45.110><c> ideally</c><00:07:45.560><c> what</c><00:07:45.800><c> we'd</c><00:07:45.920><c> like</c><00:07:46.040><c> to</c>

00:07:46.090 --> 00:07:46.100 align:start position:0%
stream because ideally what we'd like to
 

00:07:46.100 --> 00:07:47.950 align:start position:0%
stream because ideally what we'd like to
be<00:07:46.220><c> able</c><00:07:46.340><c> to</c><00:07:46.430><c> do</c><00:07:46.550><c> is</c><00:07:46.670><c> have</c><00:07:46.820><c> a</c><00:07:46.850><c> stream</c><00:07:47.210><c> and</c><00:07:47.480><c> then</c>

00:07:47.950 --> 00:07:47.960 align:start position:0%
be able to do is have a stream and then
 

00:07:47.960 --> 00:07:49.420 align:start position:0%
be able to do is have a stream and then
at<00:07:48.080><c> some</c><00:07:48.230><c> point</c><00:07:48.440><c> something</c><00:07:48.890><c> happens</c><00:07:49.280><c> in</c><00:07:49.370><c> a</c>

00:07:49.420 --> 00:07:49.430 align:start position:0%
at some point something happens in a
 

00:07:49.430 --> 00:07:50.530 align:start position:0%
at some point something happens in a
lambo<00:07:49.640><c> Xpression</c><00:07:50.060><c> you</c><00:07:50.180><c> throw</c><00:07:50.390><c> an</c><00:07:50.480><c> exception</c>

00:07:50.530 --> 00:07:50.540 align:start position:0%
lambo Xpression you throw an exception
 

00:07:50.540 --> 00:07:52.270 align:start position:0%
lambo Xpression you throw an exception
and<00:07:51.110><c> then</c><00:07:51.440><c> that</c><00:07:51.560><c> gets</c><00:07:51.740><c> thrown</c><00:07:51.920><c> out</c><00:07:52.070><c> of</c><00:07:52.130><c> the</c>

00:07:52.270 --> 00:07:52.280 align:start position:0%
and then that gets thrown out of the
 

00:07:52.280 --> 00:07:53.590 align:start position:0%
and then that gets thrown out of the
whole<00:07:52.370><c> stream</c><00:07:52.760><c> but</c><00:07:52.940><c> it</c><00:07:53.090><c> just</c><00:07:53.240><c> doesn't</c><00:07:53.510><c> work</c>

00:07:53.590 --> 00:07:53.600 align:start position:0%
whole stream but it just doesn't work
 

00:07:53.600 --> 00:07:56.530 align:start position:0%
whole stream but it just doesn't work
that<00:07:53.840><c> way</c><00:07:54.520><c> so</c><00:07:55.520><c> what</c><00:07:55.730><c> what</c><00:07:56.090><c> we</c><00:07:56.180><c> have</c><00:07:56.300><c> to</c><00:07:56.420><c> do</c><00:07:56.480><c> is</c>

00:07:56.530 --> 00:07:56.540 align:start position:0%
that way so what what we have to do is
 

00:07:56.540 --> 00:07:58.210 align:start position:0%
that way so what what we have to do is
we<00:07:56.630><c> have</c><00:07:56.750><c> to</c><00:07:56.780><c> have</c><00:07:56.900><c> a</c><00:07:57.140><c> method</c><00:07:57.470><c> and</c><00:07:57.710><c> in</c><00:07:58.130><c> this</c>

00:07:58.210 --> 00:07:58.220 align:start position:0%
we have to have a method and in this
 

00:07:58.220 --> 00:08:00.100 align:start position:0%
we have to have a method and in this
case<00:07:58.430><c> we</c><00:07:58.550><c> have</c><00:07:58.670><c> to</c><00:07:58.790><c> do</c><00:07:58.910><c> something</c><00:07:59.180><c> in</c><00:07:59.630><c> terms</c><00:07:59.660><c> of</c>

00:08:00.100 --> 00:08:00.110 align:start position:0%
case we have to do something in terms of
 

00:08:00.110 --> 00:08:01.570 align:start position:0%
case we have to do something in terms of
dealing<00:08:00.290><c> with</c><00:08:00.440><c> that</c><00:08:00.680><c> exception</c><00:08:01.010><c> so</c><00:08:01.310><c> we</c><00:08:01.400><c> call</c>

00:08:01.570 --> 00:08:01.580 align:start position:0%
dealing with that exception so we call
 

00:08:01.580 --> 00:08:03.880 align:start position:0%
dealing with that exception so we call
the<00:08:01.700><c> dqo</c><00:08:02.030><c> method</c><00:08:02.750><c> it</c><00:08:03.320><c> could</c><00:08:03.560><c> potentially</c>

00:08:03.880 --> 00:08:03.890 align:start position:0%
the dqo method it could potentially
 

00:08:03.890 --> 00:08:05.110 align:start position:0%
the dqo method it could potentially
throw<00:08:04.070><c> exception</c><00:08:04.520><c> in</c><00:08:04.640><c> this</c><00:08:04.700><c> case</c><00:08:04.910><c> we're</c><00:08:05.030><c> going</c>

00:08:05.110 --> 00:08:05.120 align:start position:0%
throw exception in this case we're going
 

00:08:05.120 --> 00:08:08.080 align:start position:0%
throw exception in this case we're going
to<00:08:05.210><c> do</c><00:08:05.360><c> a</c><00:08:05.390><c> a</c><00:08:05.900><c> warning</c><00:08:06.680><c> from</c><00:08:07.070><c> the</c><00:08:07.400><c> logger</c><00:08:07.790><c> and</c>

00:08:08.080 --> 00:08:08.090 align:start position:0%
to do a a warning from the logger and
 

00:08:08.090 --> 00:08:11.200 align:start position:0%
to do a a warning from the logger and
we'll<00:08:08.570><c> return</c><00:08:08.810><c> null</c><00:08:09.910><c> the</c><00:08:10.910><c> other</c><00:08:11.030><c> thing</c><00:08:11.150><c> about</c>

00:08:11.200 --> 00:08:11.210 align:start position:0%
we'll return null the other thing about
 

00:08:11.210 --> 00:08:14.860 align:start position:0%
we'll return null the other thing about
this<00:08:11.450><c> is</c><00:08:11.630><c> that</c><00:08:11.780><c> it</c><00:08:11.900><c> uses</c><00:08:12.140><c> a</c><00:08:12.710><c> JDK</c><00:08:13.280><c> 9</c><00:08:13.870><c> enhancement</c>

00:08:14.860 --> 00:08:14.870 align:start position:0%
this is that it uses a JDK 9 enhancement
 

00:08:14.870 --> 00:08:18.190 align:start position:0%
this is that it uses a JDK 9 enhancement
which<00:08:15.530><c> is</c><00:08:15.740><c> met</c><00:08:16.250><c> map</c><00:08:16.490><c> dot</c><00:08:16.910><c> entry</c><00:08:17.390><c> so</c><00:08:17.840><c> map</c><00:08:18.020><c> dot</c>

00:08:18.190 --> 00:08:18.200 align:start position:0%
which is met map dot entry so map dot
 

00:08:18.200 --> 00:08:20.830 align:start position:0%
which is met map dot entry so map dot
entry<00:08:18.590><c> will</c><00:08:18.770><c> return</c><00:08:19.100><c> you</c><00:08:19.310><c> well</c><00:08:19.760><c> a</c><00:08:20.030><c> map</c><00:08:20.390><c> entry</c>

00:08:20.830 --> 00:08:20.840 align:start position:0%
entry will return you well a map entry
 

00:08:20.840 --> 00:08:22.540 align:start position:0%
entry will return you well a map entry
the<00:08:21.440><c> nice</c><00:08:21.560><c> thing</c><00:08:21.740><c> about</c><00:08:21.770><c> that</c><00:08:22.160><c> is</c><00:08:22.340><c> that</c><00:08:22.370><c> you</c>

00:08:22.540 --> 00:08:22.550 align:start position:0%
the nice thing about that is that you
 

00:08:22.550 --> 00:08:25.530 align:start position:0%
the nice thing about that is that you
don't<00:08:22.670><c> have</c><00:08:22.820><c> to</c><00:08:23.030><c> use</c><00:08:23.300><c> there's</c><00:08:23.630><c> a</c><00:08:23.690><c> kind</c><00:08:23.990><c> of</c>

00:08:25.530 --> 00:08:25.540 align:start position:0%
don't have to use there's a kind of
 

00:08:25.540 --> 00:08:28.220 align:start position:0%
don't have to use there's a kind of
class<00:08:26.200><c> which</c><00:08:26.440><c> is</c><00:08:26.560><c> buried</c><00:08:26.890><c> in</c><00:08:27.070><c> was</c><00:08:27.490><c> abstract</c>

00:08:28.220 --> 00:08:28.230 align:start position:0%
class which is buried in was abstract
 

00:08:28.230 --> 00:08:30.990 align:start position:0%
class which is buried in was abstract
abstract<00:08:29.230><c> map</c><00:08:29.650><c> that</c><00:08:30.010><c> simple</c><00:08:30.400><c> immutable</c><00:08:30.760><c> entry</c>

00:08:30.990 --> 00:08:31.000 align:start position:0%
abstract map that simple immutable entry
 

00:08:31.000 --> 00:08:33.270 align:start position:0%
abstract map that simple immutable entry
yes<00:08:31.390><c> abstract</c><00:08:31.930><c> map</c><00:08:32.169><c> dot</c><00:08:32.410><c> simple</c><00:08:32.830><c> immutable</c>

00:08:33.270 --> 00:08:33.280 align:start position:0%
yes abstract map dot simple immutable
 

00:08:33.280 --> 00:08:35.370 align:start position:0%
yes abstract map dot simple immutable
entry<00:08:33.550><c> as</c><00:08:33.729><c> opposed</c><00:08:34.330><c> to</c><00:08:34.479><c> the</c><00:08:34.720><c> class</c><00:08:34.990><c> which</c><00:08:35.229><c> we</c>

00:08:35.370 --> 00:08:35.380 align:start position:0%
entry as opposed to the class which we
 

00:08:35.380 --> 00:08:39.590 align:start position:0%
entry as opposed to the class which we
should<00:08:35.440><c> have</c><00:08:35.800><c> which</c><00:08:35.950><c> is</c><00:08:36.100><c> called</c><00:08:36.160><c> tuple</c><00:08:36.940><c> and</c><00:08:37.560><c> so</c>

00:08:39.590 --> 00:08:39.600 align:start position:0%
should have which is called tuple and so
 

00:08:39.600 --> 00:08:41.790 align:start position:0%
should have which is called tuple and so
so<00:08:40.600><c> we</c><00:08:40.720><c> ended</c><00:08:40.870><c> up</c><00:08:40.930><c> with</c><00:08:41.080><c> this</c><00:08:41.260><c> where</c><00:08:41.470><c> we</c>

00:08:41.790 --> 00:08:41.800 align:start position:0%
so we ended up with this where we
 

00:08:41.800 --> 00:08:43.590 align:start position:0%
so we ended up with this where we
actually<00:08:41.950><c> return</c><00:08:42.640><c> a</c><00:08:42.669><c> map</c><00:08:42.880><c> taught</c><00:08:43.030><c> entry</c><00:08:43.390><c> and</c>

00:08:43.590 --> 00:08:43.600 align:start position:0%
actually return a map taught entry and
 

00:08:43.600 --> 00:08:45.810 align:start position:0%
actually return a map taught entry and
we<00:08:44.350><c> get</c><00:08:44.530><c> one</c><00:08:44.740><c> which</c><00:08:45.130><c> is</c><00:08:45.250><c> a</c><00:08:45.280><c> string</c><00:08:45.520><c> in</c><00:08:45.610><c> a</c><00:08:45.640><c> string</c>

00:08:45.810 --> 00:08:45.820 align:start position:0%
we get one which is a string in a string
 

00:08:45.820 --> 00:08:47.760 align:start position:0%
we get one which is a string in a string
so<00:08:46.030><c> so</c><00:08:46.300><c> we</c><00:08:46.390><c> extract</c><00:08:46.810><c> out</c><00:08:47.020><c> the</c><00:08:47.170><c> code</c><00:08:47.320><c> that</c><00:08:47.530><c> needs</c>

00:08:47.760 --> 00:08:47.770 align:start position:0%
so so we extract out the code that needs
 

00:08:47.770 --> 00:08:49.110 align:start position:0%
so so we extract out the code that needs
to<00:08:47.890><c> deal</c><00:08:48.040><c> with</c><00:08:48.100><c> the</c><00:08:48.280><c> exception</c><00:08:48.700><c> into</c><00:08:49.090><c> a</c>

00:08:49.110 --> 00:08:49.120 align:start position:0%
to deal with the exception into a
 

00:08:49.120 --> 00:08:53.280 align:start position:0%
to deal with the exception into a
separate<00:08:49.450><c> method</c><00:08:49.830><c> and</c><00:08:50.970><c> then</c><00:08:51.970><c> in</c><00:08:52.510><c> terms</c><00:08:53.110><c> of</c>

00:08:53.280 --> 00:08:53.290 align:start position:0%
separate method and then in terms of
 

00:08:53.290 --> 00:08:56.430 align:start position:0%
separate method and then in terms of
actually<00:08:53.560><c> making</c><00:08:54.310><c> our</c><00:08:54.580><c> code</c><00:08:54.760><c> nicer</c><00:08:55.390><c> we</c><00:08:56.080><c> end</c><00:08:56.260><c> up</c>

00:08:56.430 --> 00:08:56.440 align:start position:0%
actually making our code nicer we end up
 

00:08:56.440 --> 00:08:58.110 align:start position:0%
actually making our code nicer we end up
with<00:08:56.620><c> this</c><00:08:56.890><c> where</c><00:08:57.250><c> obviously</c><00:08:57.520><c> we</c><00:08:57.790><c> made</c><00:08:58.030><c> it</c><00:08:58.090><c> a</c>

00:08:58.110 --> 00:08:58.120 align:start position:0%
with this where obviously we made it a
 

00:08:58.120 --> 00:09:00.270 align:start position:0%
with this where obviously we made it a
little<00:08:58.240><c> bit</c><00:08:58.360><c> bigger</c><00:08:58.510><c> but</c><00:08:59.260><c> it's</c><00:08:59.500><c> much</c><00:08:59.800><c> easier</c>

00:09:00.270 --> 00:09:00.280 align:start position:0%
little bit bigger but it's much easier
 

00:09:00.280 --> 00:09:02.520 align:start position:0%
little bit bigger but it's much easier
to<00:09:00.460><c> read</c><00:09:00.790><c> so</c><00:09:01.090><c> now</c><00:09:01.660><c> we</c><00:09:01.720><c> have</c><00:09:01.990><c> the</c><00:09:02.230><c> idea</c><00:09:02.410><c> we're</c>

00:09:02.520 --> 00:09:02.530 align:start position:0%
to read so now we have the idea we're
 

00:09:02.530 --> 00:09:04.860 align:start position:0%
to read so now we have the idea we're
going<00:09:02.620><c> to</c><00:09:02.710><c> pause</c><00:09:02.860><c> the</c><00:09:03.040><c> query</c><00:09:03.310><c> we</c><00:09:04.270><c> we</c><00:09:04.600><c> create</c><00:09:04.840><c> a</c>

00:09:04.860 --> 00:09:04.870 align:start position:0%
going to pause the query we we create a
 

00:09:04.870 --> 00:09:06.510 align:start position:0%
going to pause the query we we create a
stream<00:09:05.140><c> based</c><00:09:05.350><c> on</c><00:09:05.530><c> splitting</c><00:09:05.830><c> on</c><00:09:06.250><c> the</c>

00:09:06.510 --> 00:09:06.520 align:start position:0%
stream based on splitting on the
 

00:09:06.520 --> 00:09:10.500 align:start position:0%
stream based on splitting on the
ampersand<00:09:07.030><c> and</c><00:09:07.510><c> then</c><00:09:08.020><c> we</c><00:09:08.230><c> filter</c><00:09:08.820><c> to</c><00:09:09.820><c> ensure</c>

00:09:10.500 --> 00:09:10.510 align:start position:0%
ampersand and then we filter to ensure
 

00:09:10.510 --> 00:09:13.230 align:start position:0%
ampersand and then we filter to ensure
that<00:09:10.660><c> we</c><00:09:10.780><c> don't</c><00:09:11.020><c> get</c><00:09:11.320><c> any</c><00:09:11.530><c> non</c><00:09:12.190><c> null</c><00:09:12.640><c> or</c><00:09:13.060><c> any</c>

00:09:13.230 --> 00:09:13.240 align:start position:0%
that we don't get any non null or any
 

00:09:13.240 --> 00:09:15.210 align:start position:0%
that we don't get any non null or any
null<00:09:13.540><c> objects</c><00:09:14.110><c> so</c><00:09:14.230><c> that's</c><00:09:14.680><c> a</c><00:09:14.770><c> simple</c><00:09:14.950><c> way</c><00:09:15.190><c> of</c>

00:09:15.210 --> 00:09:15.220 align:start position:0%
null objects so that's a simple way of
 

00:09:15.220 --> 00:09:18.830 align:start position:0%
null objects so that's a simple way of
eliminating<00:09:15.820><c> that</c><00:09:15.850><c> problem</c><00:09:16.420><c> of</c><00:09:17.400><c> the</c><00:09:18.400><c> null</c>

00:09:18.830 --> 00:09:18.840 align:start position:0%
eliminating that problem of the null
 

00:09:18.840 --> 00:09:21.060 align:start position:0%
eliminating that problem of the null
obviously<00:09:19.840><c> at</c><00:09:19.930><c> that</c><00:09:20.050><c> point</c><00:09:20.290><c> because</c><00:09:20.800><c> we're</c>

00:09:21.060 --> 00:09:21.070 align:start position:0%
obviously at that point because we're
 

00:09:21.070 --> 00:09:23.790 align:start position:0%
obviously at that point because we're
calling<00:09:21.400><c> objects</c><00:09:22.090><c> dot</c><00:09:22.450><c> require</c><00:09:22.780><c> non</c><00:09:23.080><c> null</c><00:09:23.320><c> if</c>

00:09:23.790 --> 00:09:23.800 align:start position:0%
calling objects dot require non null if
 

00:09:23.800 --> 00:09:25.260 align:start position:0%
calling objects dot require non null if
it's<00:09:24.040><c> a</c><00:09:24.160><c> null</c><00:09:24.310><c> ill</c><00:09:24.490><c> throw</c><00:09:24.670><c> a</c><00:09:24.760><c> null</c><00:09:24.970><c> pointer</c>

00:09:25.260 --> 00:09:25.270 align:start position:0%
it's a null ill throw a null pointer
 

00:09:25.270 --> 00:09:26.940 align:start position:0%
it's a null ill throw a null pointer
exception<00:09:25.630><c> but</c><00:09:25.780><c> that</c><00:09:25.960><c> is</c><00:09:26.110><c> at</c><00:09:26.290><c> least</c><00:09:26.350><c> a</c><00:09:26.710><c> better</c>

00:09:26.940 --> 00:09:26.950 align:start position:0%
exception but that is at least a better
 

00:09:26.950 --> 00:09:28.770 align:start position:0%
exception but that is at least a better
way<00:09:27.160><c> of</c><00:09:27.270><c> potentially</c><00:09:28.270><c> dealing</c><00:09:28.510><c> with</c><00:09:28.630><c> it</c>

00:09:28.770 --> 00:09:28.780 align:start position:0%
way of potentially dealing with it
 

00:09:28.780 --> 00:09:29.880 align:start position:0%
way of potentially dealing with it
because<00:09:29.170><c> did</c><00:09:29.380><c> you</c><00:09:29.410><c> want</c><00:09:29.590><c> to</c><00:09:29.650><c> say</c><00:09:29.710><c> anything</c>

00:09:29.880 --> 00:09:29.890 align:start position:0%
because did you want to say anything
 

00:09:29.890 --> 00:09:32.670 align:start position:0%
because did you want to say anything
about<00:09:30.070><c> that</c><00:09:30.190><c> yeah</c><00:09:30.640><c> oh</c><00:09:30.870><c> yeah</c><00:09:31.870><c> when</c><00:09:32.560><c> you're</c>

00:09:32.670 --> 00:09:32.680 align:start position:0%
about that yeah oh yeah when you're
 

00:09:32.680 --> 00:09:33.810 align:start position:0%
about that yeah oh yeah when you're
finished<00:09:32.950><c> I'll</c><00:09:33.070><c> go</c><00:09:33.160><c> back</c><00:09:33.250><c> to</c><00:09:33.400><c> the</c><00:09:33.460><c> previously</c>

00:09:33.810 --> 00:09:33.820 align:start position:0%
finished I'll go back to the previously
 

00:09:33.820 --> 00:09:36.990 align:start position:0%
finished I'll go back to the previously
okay<00:09:34.090><c> the</c><00:09:34.240><c> opposite</c><00:09:34.830><c> so</c><00:09:35.830><c> we</c><00:09:35.950><c> eliminate</c><00:09:36.910><c> the</c>

00:09:36.990 --> 00:09:37.000 align:start position:0%
okay the opposite so we eliminate the
 

00:09:37.000 --> 00:09:38.910 align:start position:0%
okay the opposite so we eliminate the
problem<00:09:37.240><c> having</c><00:09:37.480><c> null</c><00:09:37.780><c> in</c><00:09:38.470><c> terms</c><00:09:38.680><c> of</c><00:09:38.800><c> our</c>

00:09:38.910 --> 00:09:38.920 align:start position:0%
problem having null in terms of our
 

00:09:38.920 --> 00:09:41.310 align:start position:0%
problem having null in terms of our
value<00:09:39.220><c> then</c><00:09:39.430><c> we</c><00:09:39.760><c> call</c><00:09:40.000><c> the</c><00:09:40.120><c> map</c><00:09:40.360><c> and</c><00:09:40.750><c> we</c><00:09:41.170><c> use</c>

00:09:41.310 --> 00:09:41.320 align:start position:0%
value then we call the map and we use
 

00:09:41.320 --> 00:09:42.690 align:start position:0%
value then we call the map and we use
our<00:09:41.470><c> split</c><00:09:41.710><c> key</c><00:09:41.890><c> value</c><00:09:42.190><c> which</c><00:09:42.310><c> is</c><00:09:42.460><c> the</c><00:09:42.580><c> one</c>

00:09:42.690 --> 00:09:42.700 align:start position:0%
our split key value which is the one
 

00:09:42.700 --> 00:09:44.340 align:start position:0%
our split key value which is the one
that<00:09:42.880><c> we've</c><00:09:43.090><c> extracted</c><00:09:43.300><c> out</c><00:09:43.690><c> the</c><00:09:43.900><c> the</c><00:09:44.170><c> code</c>

00:09:44.340 --> 00:09:44.350 align:start position:0%
that we've extracted out the the code
 

00:09:44.350 --> 00:09:46.320 align:start position:0%
that we've extracted out the the code
that<00:09:44.560><c> deals</c><00:09:44.650><c> with</c><00:09:44.800><c> the</c><00:09:44.980><c> exception</c><00:09:45.460><c> then</c><00:09:46.180><c> we</c>

00:09:46.320 --> 00:09:46.330 align:start position:0%
that deals with the exception then we
 

00:09:46.330 --> 00:09:48.660 align:start position:0%
that deals with the exception then we
found<00:09:46.570><c> filth</c><00:09:46.960><c> of</c><00:09:47.110><c> that</c><00:09:47.320><c> to</c><00:09:47.950><c> say</c><00:09:48.430><c> if</c><00:09:48.640><c> that</c>

00:09:48.660 --> 00:09:48.670 align:start position:0%
found filth of that to say if that
 

00:09:48.670 --> 00:09:50.400 align:start position:0%
found filth of that to say if that
returns<00:09:48.970><c> our</c><00:09:49.270><c> null</c><00:09:49.420><c> then</c><00:09:49.570><c> we</c><00:09:49.630><c> just</c><00:09:49.870><c> ignore</c>

00:09:50.400 --> 00:09:50.410 align:start position:0%
returns our null then we just ignore
 

00:09:50.410 --> 00:09:51.720 align:start position:0%
returns our null then we just ignore
anything<00:09:50.800><c> because</c><00:09:51.250><c> obviously</c><00:09:51.370><c> that's</c><00:09:51.610><c> not</c>

00:09:51.720 --> 00:09:51.730 align:start position:0%
anything because obviously that's not
 

00:09:51.730 --> 00:09:53.190 align:start position:0%
anything because obviously that's not
the<00:09:52.090><c> information</c><00:09:52.390><c> we</c><00:09:52.780><c> need</c><00:09:52.960><c> so</c><00:09:53.080><c> we</c><00:09:53.110><c> can</c>

00:09:53.190 --> 00:09:53.200 align:start position:0%
the information we need so we can
 

00:09:53.200 --> 00:09:55.490 align:start position:0%
the information we need so we can
eliminate<00:09:53.440><c> that</c><00:09:53.620><c> and</c><00:09:53.920><c> then</c><00:09:54.430><c> we</c><00:09:54.550><c> use</c><00:09:54.700><c> a</c><00:09:54.730><c> collect</c>

00:09:55.490 --> 00:09:55.500 align:start position:0%
eliminate that and then we use a collect
 

00:09:55.500 --> 00:09:58.950 align:start position:0%
eliminate that and then we use a collect
reduction<00:09:56.500><c> so</c><00:09:57.010><c> we're</c><00:09:57.160><c> grouping</c><00:09:57.430><c> by</c><00:09:57.730><c> the</c><00:09:58.570><c> key</c>

00:09:58.950 --> 00:09:58.960 align:start position:0%
reduction so we're grouping by the key
 

00:09:58.960 --> 00:10:00.690 align:start position:0%
reduction so we're grouping by the key
and<00:09:59.260><c> the</c><00:09:59.920><c> value</c>

00:10:00.690 --> 00:10:00.700 align:start position:0%
and the value
 

00:10:00.700 --> 00:10:03.210 align:start position:0%
and the value
and<00:10:01.030><c> generating</c><00:10:01.720><c> a</c><00:10:01.780><c> list</c><00:10:01.900><c> so</c><00:10:02.470><c> it's</c><00:10:02.980><c> a</c><00:10:03.040><c> lot</c>

00:10:03.210 --> 00:10:03.220 align:start position:0%
and generating a list so it's a lot
 

00:10:03.220 --> 00:10:03.960 align:start position:0%
and generating a list so it's a lot
clearer

00:10:03.960 --> 00:10:03.970 align:start position:0%
clearer
 

00:10:03.970 --> 00:10:07.080 align:start position:0%
clearer
Oh<00:10:04.120><c> Nita</c><00:10:04.960><c> lot</c><00:10:05.380><c> tidier</c><00:10:05.590><c> Vann</c><00:10:06.340><c> the</c><00:10:06.670><c> three</c><00:10:06.910><c> lines</c>

00:10:07.080 --> 00:10:07.090 align:start position:0%
Oh Nita lot tidier Vann the three lines
 

00:10:07.090 --> 00:10:08.580 align:start position:0%
Oh Nita lot tidier Vann the three lines
of<00:10:07.180><c> code</c><00:10:07.240><c> that</c><00:10:07.480><c> I</c><00:10:07.540><c> tried</c><00:10:07.750><c> to</c><00:10:07.870><c> write</c><00:10:08.050><c> originally</c>

00:10:08.580 --> 00:10:08.590 align:start position:0%
of code that I tried to write originally
 

00:10:08.590 --> 00:10:10.430 align:start position:0%
of code that I tried to write originally
so<00:10:09.280><c> if</c><00:10:09.370><c> I</c><00:10:09.460><c> go</c><00:10:09.550><c> back</c><00:10:09.580><c> to</c><00:10:09.820><c> the</c><00:10:09.880><c> previous</c><00:10:10.090><c> slide</c>

00:10:10.430 --> 00:10:10.440 align:start position:0%
so if I go back to the previous slide
 

00:10:10.440 --> 00:10:12.870 align:start position:0%
so if I go back to the previous slide
okay<00:10:11.440><c> yeah</c><00:10:11.710><c> a</c><00:10:11.740><c> couple</c><00:10:12.040><c> comments</c><00:10:12.190><c> on</c><00:10:12.520><c> this</c><00:10:12.670><c> so</c>

00:10:12.870 --> 00:10:12.880 align:start position:0%
okay yeah a couple comments on this so
 

00:10:12.880 --> 00:10:15.810 align:start position:0%
okay yeah a couple comments on this so
so<00:10:13.150><c> as</c><00:10:13.390><c> Simon</c><00:10:13.990><c> pointed</c><00:10:14.290><c> out</c><00:10:14.410><c> the</c><00:10:14.650><c> the</c><00:10:15.310><c> the</c>

00:10:15.810 --> 00:10:15.820 align:start position:0%
so as Simon pointed out the the the
 

00:10:15.820 --> 00:10:17.280 align:start position:0%
so as Simon pointed out the the the
there's<00:10:16.180><c> a</c><00:10:16.240><c> there's</c><00:10:16.630><c> a</c><00:10:16.660><c> problem</c><00:10:17.020><c> here</c><00:10:17.260><c> because</c>

00:10:17.280 --> 00:10:17.290 align:start position:0%
there's a there's a problem here because
 

00:10:17.290 --> 00:10:19.410 align:start position:0%
there's a there's a problem here because
there's<00:10:17.650><c> a</c><00:10:17.740><c> mismatch</c><00:10:18.070><c> between</c><00:10:18.100><c> AP</c><00:10:18.850><c> is</c><00:10:19.000><c> in</c><00:10:19.330><c> the</c>

00:10:19.410 --> 00:10:19.420 align:start position:0%
there's a mismatch between AP is in the
 

00:10:19.420 --> 00:10:21.360 align:start position:0%
there's a mismatch between AP is in the
jdk<00:10:19.810><c> that</c><00:10:20.050><c> throw</c><00:10:20.290><c> checked</c><00:10:20.590><c> exceptions</c><00:10:21.130><c> and</c>

00:10:21.360 --> 00:10:21.370 align:start position:0%
jdk that throw checked exceptions and
 

00:10:21.370 --> 00:10:26.040 align:start position:0%
jdk that throw checked exceptions and
using<00:10:22.240><c> those</c><00:10:22.870><c> api's</c><00:10:23.440><c> in</c><00:10:24.330><c> streams</c><00:10:25.330><c> which</c>

00:10:26.040 --> 00:10:26.050 align:start position:0%
using those api's in streams which
 

00:10:26.050 --> 00:10:28.260 align:start position:0%
using those api's in streams which
generally<00:10:26.770><c> do</c><00:10:27.100><c> not</c><00:10:27.310><c> allow</c><00:10:27.910><c> checked</c>

00:10:28.260 --> 00:10:28.270 align:start position:0%
generally do not allow checked
 

00:10:28.270 --> 00:10:30.480 align:start position:0%
generally do not allow checked
exceptions<00:10:28.750><c> and</c><00:10:28.960><c> so</c><00:10:29.560><c> the</c><00:10:29.920><c> sad</c><00:10:30.100><c> thing</c><00:10:30.310><c> about</c>

00:10:30.480 --> 00:10:30.490 align:start position:0%
exceptions and so the sad thing about
 

00:10:30.490 --> 00:10:32.220 align:start position:0%
exceptions and so the sad thing about
this<00:10:30.700><c> is</c><00:10:30.940><c> i</c><00:10:30.970><c> went</c><00:10:31.330><c> back</c><00:10:31.450><c> and</c><00:10:31.510><c> revisited</c><00:10:31.810><c> this</c>

00:10:32.220 --> 00:10:32.230 align:start position:0%
this is i went back and revisited this
 

00:10:32.230 --> 00:10:34.440 align:start position:0%
this is i went back and revisited this
this<00:10:32.590><c> it's</c><00:10:32.950><c> actually</c><00:10:33.280><c> totally</c><00:10:34.240><c> unnecessary</c>

00:10:34.440 --> 00:10:34.450 align:start position:0%
this it's actually totally unnecessary
 

00:10:34.450 --> 00:10:36.569 align:start position:0%
this it's actually totally unnecessary
to<00:10:34.960><c> have</c><00:10:34.990><c> a</c><00:10:35.350><c> checked</c><00:10:35.620><c> exception</c><00:10:35.710><c> in</c><00:10:36.160><c> this</c><00:10:36.220><c> case</c>

00:10:36.569 --> 00:10:36.579 align:start position:0%
to have a checked exception in this case
 

00:10:36.579 --> 00:10:39.239 align:start position:0%
to have a checked exception in this case
but<00:10:37.540><c> the</c><00:10:37.689><c> the</c><00:10:37.899><c> bug</c><00:10:38.049><c> is</c><00:10:38.199><c> actually</c><00:10:38.559><c> missing</c>

00:10:39.239 --> 00:10:39.249 align:start position:0%
but the the bug is actually missing
 

00:10:39.249 --> 00:10:41.759 align:start position:0%
but the the bug is actually missing
api's<00:10:39.639><c> in</c><00:10:39.879><c> the</c><00:10:39.939><c> jdk</c><00:10:40.360><c> so</c><00:10:40.839><c> so</c><00:10:41.259><c> if</c><00:10:41.350><c> you</c><00:10:41.439><c> dig</c><00:10:41.619><c> into</c>

00:10:41.759 --> 00:10:41.769 align:start position:0%
api's in the jdk so so if you dig into
 

00:10:41.769 --> 00:10:44.369 align:start position:0%
api's in the jdk so so if you dig into
this<00:10:41.949><c> what's</c><00:10:42.220><c> going</c><00:10:42.369><c> on</c><00:10:42.610><c> is</c><00:10:42.850><c> so</c><00:10:43.509><c> it's</c><00:10:43.899><c> the</c><00:10:44.049><c> URL</c>

00:10:44.369 --> 00:10:44.379 align:start position:0%
this what's going on is so it's the URL
 

00:10:44.379 --> 00:10:46.350 align:start position:0%
this what's going on is so it's the URL
decode<00:10:44.769><c> or</c><00:10:44.920><c> decode</c><00:10:45.279><c> method</c><00:10:45.699><c> throws</c><00:10:46.089><c> this</c>

00:10:46.350 --> 00:10:46.360 align:start position:0%
decode or decode method throws this
 

00:10:46.360 --> 00:10:48.419 align:start position:0%
decode or decode method throws this
unsupported<00:10:47.230><c> encoding</c><00:10:47.589><c> exception</c><00:10:48.040><c> that's</c>

00:10:48.419 --> 00:10:48.429 align:start position:0%
unsupported encoding exception that's
 

00:10:48.429 --> 00:10:49.710 align:start position:0%
unsupported encoding exception that's
because<00:10:48.759><c> you</c><00:10:48.970><c> have</c><00:10:49.119><c> to</c><00:10:49.239><c> tell</c><00:10:49.449><c> it</c><00:10:49.600><c> what</c>

00:10:49.710 --> 00:10:49.720 align:start position:0%
because you have to tell it what
 

00:10:49.720 --> 00:10:52.559 align:start position:0%
because you have to tell it what
encoding<00:10:50.290><c> it</c><00:10:50.379><c> uses</c><00:10:50.769><c> and</c><00:10:51.149><c> the</c><00:10:52.149><c> way</c><00:10:52.239><c> you</c><00:10:52.299><c> tell</c><00:10:52.540><c> it</c>

00:10:52.559 --> 00:10:52.569 align:start position:0%
encoding it uses and the way you tell it
 

00:10:52.569 --> 00:10:55.139 align:start position:0%
encoding it uses and the way you tell it
what<00:10:52.749><c> encoding</c><00:10:53.319><c> to</c><00:10:53.529><c> use</c><00:10:53.739><c> is</c><00:10:54.069><c> by</c><00:10:54.429><c> giving</c><00:10:54.670><c> it</c><00:10:54.970><c> the</c>

00:10:55.139 --> 00:10:55.149 align:start position:0%
what encoding to use is by giving it the
 

00:10:55.149 --> 00:10:59.549 align:start position:0%
what encoding to use is by giving it the
string<00:10:55.540><c> name</c><00:10:55.809><c> of</c><00:10:56.170><c> an</c><00:10:56.379><c> encoding</c><00:10:56.920><c> and</c><00:10:58.559><c> so</c>

00:10:59.549 --> 00:10:59.559 align:start position:0%
string name of an encoding and so
 

00:10:59.559 --> 00:11:02.340 align:start position:0%
string name of an encoding and so
there's<00:11:00.189><c> the</c><00:11:00.279><c> possibility</c><00:11:00.399><c> that</c><00:11:01.350><c> the</c>

00:11:02.340 --> 00:11:02.350 align:start position:0%
there's the possibility that the
 

00:11:02.350 --> 00:11:04.859 align:start position:0%
there's the possibility that the
encoding<00:11:03.339><c> for</c><00:11:03.730><c> that</c><00:11:03.910><c> string</c><00:11:04.360><c> name</c><00:11:04.569><c> that</c><00:11:04.749><c> you</c>

00:11:04.859 --> 00:11:04.869 align:start position:0%
encoding for that string name that you
 

00:11:04.869 --> 00:11:07.199 align:start position:0%
encoding for that string name that you
give<00:11:05.049><c> it</c><00:11:05.230><c> is</c><00:11:05.410><c> not</c><00:11:05.949><c> present</c><00:11:06.489><c> and</c><00:11:06.670><c> that's</c>

00:11:07.199 --> 00:11:07.209 align:start position:0%
give it is not present and that's
 

00:11:07.209 --> 00:11:08.879 align:start position:0%
give it is not present and that's
actually<00:11:07.389><c> kind</c><00:11:07.660><c> of</c><00:11:07.749><c> an</c><00:11:07.869><c> old-fashioned</c><00:11:08.559><c> API</c>

00:11:08.879 --> 00:11:08.889 align:start position:0%
actually kind of an old-fashioned API
 

00:11:08.889 --> 00:11:10.559 align:start position:0%
actually kind of an old-fashioned API
those<00:11:09.279><c> those</c><00:11:09.549><c> were</c><00:11:09.670><c> introduced</c><00:11:10.029><c> very</c><00:11:10.209><c> early</c>

00:11:10.559 --> 00:11:10.569 align:start position:0%
those those were introduced very early
 

00:11:10.569 --> 00:11:13.019 align:start position:0%
those those were introduced very early
on<00:11:10.600><c> in</c><00:11:10.869><c> the</c><00:11:10.929><c> JDK</c><00:11:11.350><c> much</c><00:11:11.949><c> more</c><00:11:12.129><c> recently</c><00:11:12.579><c> a</c><00:11:12.670><c> bunch</c>

00:11:13.019 --> 00:11:13.029 align:start position:0%
on in the JDK much more recently a bunch
 

00:11:13.029 --> 00:11:15.809 align:start position:0%
on in the JDK much more recently a bunch
of<00:11:13.299><c> the</c><00:11:13.480><c> api's</c><00:11:13.899><c> have</c><00:11:14.470><c> been</c><00:11:14.679><c> added</c><00:11:15.100><c> there's</c><00:11:15.730><c> a</c>

00:11:15.809 --> 00:11:15.819 align:start position:0%
of the api's have been added there's a
 

00:11:15.819 --> 00:11:18.479 align:start position:0%
of the api's have been added there's a
there's<00:11:16.059><c> a</c><00:11:16.119><c> char</c><00:11:16.389><c> set</c><00:11:16.629><c> object</c><00:11:17.139><c> and</c><00:11:17.379><c> there</c><00:11:18.249><c> are</c>

00:11:18.479 --> 00:11:18.489 align:start position:0%
there's a char set object and there are
 

00:11:18.489 --> 00:11:21.739 align:start position:0%
there's a char set object and there are
char<00:11:18.910><c> set</c><00:11:19.149><c> constants</c><00:11:19.929><c> like</c><00:11:20.259><c> charset</c><00:11:20.920><c> utf-8</c>

00:11:21.739 --> 00:11:21.749 align:start position:0%
char set constants like charset utf-8
 

00:11:21.749 --> 00:11:25.259 align:start position:0%
char set constants like charset utf-8
and<00:11:22.749><c> that's</c><00:11:23.709><c> present</c><00:11:24.129><c> everywhere</c><00:11:24.489><c> so</c><00:11:25.029><c> there's</c>

00:11:25.259 --> 00:11:25.269 align:start position:0%
and that's present everywhere so there's
 

00:11:25.269 --> 00:11:27.210 align:start position:0%
and that's present everywhere so there's
this<00:11:25.420><c> oh</c><00:11:25.689><c> yeah</c><00:11:26.439><c> somebody</c><00:11:26.649><c> has</c><00:11:26.769><c> points</c><00:11:27.100><c> that</c>

00:11:27.210 --> 00:11:27.220 align:start position:0%
this oh yeah somebody has points that
 

00:11:27.220 --> 00:11:31.949 align:start position:0%
this oh yeah somebody has points that
standard<00:11:27.579><c> char</c><00:11:27.759><c> sets</c><00:11:28.089><c> yes</c><00:11:28.329><c> so</c><00:11:29.670><c> so</c><00:11:30.670><c> so</c><00:11:31.660><c> anyway</c>

00:11:31.949 --> 00:11:31.959 align:start position:0%
standard char sets yes so so so anyway
 

00:11:31.959 --> 00:11:34.229 align:start position:0%
standard char sets yes so so so anyway
so<00:11:32.019><c> the</c><00:11:32.769><c> those</c><00:11:33.279><c> are</c><00:11:33.489><c> guaranteed</c><00:11:34.029><c> to</c><00:11:34.119><c> be</c>

00:11:34.229 --> 00:11:34.239 align:start position:0%
so the those are guaranteed to be
 

00:11:34.239 --> 00:11:36.600 align:start position:0%
so the those are guaranteed to be
present<00:11:34.600><c> in</c><00:11:34.689><c> the</c><00:11:34.779><c> JDK</c><00:11:35.199><c> and</c><00:11:35.470><c> so</c><00:11:35.949><c> if</c><00:11:36.100><c> you</c><00:11:36.249><c> use</c><00:11:36.579><c> a</c>

00:11:36.600 --> 00:11:36.610 align:start position:0%
present in the JDK and so if you use a
 

00:11:36.610 --> 00:11:40.710 align:start position:0%
present in the JDK and so if you use a
char<00:11:37.119><c> set</c><00:11:37.299><c> object</c><00:11:37.779><c> then</c><00:11:38.350><c> you</c><00:11:38.860><c> can</c><00:11:39.189><c> often</c><00:11:39.730><c> call</c>

00:11:40.710 --> 00:11:40.720 align:start position:0%
char set object then you can often call
 

00:11:40.720 --> 00:11:43.049 align:start position:0%
char set object then you can often call
an<00:11:40.899><c> API</c><00:11:41.230><c> and</c><00:11:41.619><c> pass</c><00:11:41.799><c> the</c><00:11:41.980><c> char</c><00:11:42.189><c> set</c><00:11:42.399><c> object</c><00:11:42.879><c> and</c>

00:11:43.049 --> 00:11:43.059 align:start position:0%
an API and pass the char set object and
 

00:11:43.059 --> 00:11:44.900 align:start position:0%
an API and pass the char set object and
it<00:11:43.329><c> doesn't</c><00:11:43.720><c> throw</c><00:11:43.869><c> a</c><00:11:43.899><c> checked</c><00:11:44.169><c> exception</c>

00:11:44.900 --> 00:11:44.910 align:start position:0%
it doesn't throw a checked exception
 

00:11:44.910 --> 00:11:47.189 align:start position:0%
it doesn't throw a checked exception
unfortunately<00:11:45.910><c> there</c><00:11:46.089><c> is</c><00:11:46.209><c> no</c><00:11:46.419><c> such</c><00:11:46.449><c> overload</c>

00:11:47.189 --> 00:11:47.199 align:start position:0%
unfortunately there is no such overload
 

00:11:47.199 --> 00:11:50.249 align:start position:0%
unfortunately there is no such overload
for<00:11:47.679><c> URL</c><00:11:48.309><c> decode</c><00:11:48.669><c> or</c><00:11:48.850><c> decode</c><00:11:49.449><c> and</c><00:11:49.689><c> also</c><00:11:49.989><c> for</c>

00:11:50.249 --> 00:11:50.259 align:start position:0%
for URL decode or decode and also for
 

00:11:50.259 --> 00:11:52.289 align:start position:0%
for URL decode or decode and also for
encode<00:11:50.679><c> so</c><00:11:51.279><c> really</c><00:11:51.610><c> what</c><00:11:51.759><c> we</c><00:11:51.850><c> need</c><00:11:51.999><c> to</c><00:11:52.089><c> do</c><00:11:52.179><c> is</c>

00:11:52.289 --> 00:11:52.299 align:start position:0%
encode so really what we need to do is
 

00:11:52.299 --> 00:11:54.210 align:start position:0%
encode so really what we need to do is
fix<00:11:52.509><c> up</c><00:11:52.660><c> the</c><00:11:52.779><c> api's</c><00:11:53.139><c> and</c><00:11:53.529><c> then</c><00:11:53.679><c> this</c><00:11:53.889><c> this</c>

00:11:54.210 --> 00:11:54.220 align:start position:0%
fix up the api's and then this this
 

00:11:54.220 --> 00:11:56.009 align:start position:0%
fix up the api's and then this this
whole<00:11:54.459><c> segment</c><00:11:54.669><c> of</c><00:11:54.879><c> the</c><00:11:54.970><c> problem</c><00:11:55.360><c> should</c><00:11:55.540><c> go</c>

00:11:56.009 --> 00:11:56.019 align:start position:0%
whole segment of the problem should go
 

00:11:56.019 --> 00:11:58.319 align:start position:0%
whole segment of the problem should go
away<00:11:56.489><c> and</c><00:11:57.489><c> then</c><00:11:57.669><c> there's</c><00:11:57.819><c> another</c><00:11:57.939><c> problem</c>

00:11:58.319 --> 00:11:58.329 align:start position:0%
away and then there's another problem
 

00:11:58.329 --> 00:12:02.429 align:start position:0%
away and then there's another problem
which<00:11:58.809><c> which</c><00:11:59.319><c> is</c><00:12:00.600><c> I'm</c><00:12:01.600><c> not</c><00:12:01.779><c> entirely</c><00:12:02.079><c> sure</c><00:12:02.259><c> but</c>

00:12:02.429 --> 00:12:02.439 align:start position:0%
which which is I'm not entirely sure but
 

00:12:02.439 --> 00:12:04.979 align:start position:0%
which which is I'm not entirely sure but
if<00:12:02.709><c> we're</c><00:12:02.860><c> decoding</c><00:12:03.160><c> the</c><00:12:03.399><c> URL</c><00:12:03.819><c> the</c><00:12:04.360><c> the</c><00:12:04.629><c> actual</c>

00:12:04.979 --> 00:12:04.989 align:start position:0%
if we're decoding the URL the the actual
 

00:12:04.989 --> 00:12:08.759 align:start position:0%
if we're decoding the URL the the actual
character<00:12:05.410><c> encoding</c><00:12:05.679><c> is</c><00:12:06.279><c> I</c><00:12:06.519><c> think</c><00:12:07.769><c> officially</c>

00:12:08.759 --> 00:12:08.769 align:start position:0%
character encoding is I think officially
 

00:12:08.769 --> 00:12:12.299 align:start position:0%
character encoding is I think officially
unspecified<00:12:09.279><c> but</c><00:12:09.879><c> it's</c><00:12:10.179><c> usually</c><00:12:10.799><c> utf-8</c><00:12:11.799><c> so</c>

00:12:12.299 --> 00:12:12.309 align:start position:0%
unspecified but it's usually utf-8 so
 

00:12:12.309 --> 00:12:13.889 align:start position:0%
unspecified but it's usually utf-8 so
you<00:12:12.369><c> might</c><00:12:12.579><c> be</c><00:12:12.610><c> able</c><00:12:12.790><c> to</c><00:12:12.910><c> get</c><00:12:13.089><c> away</c><00:12:13.179><c> if</c><00:12:13.509><c> you</c><00:12:13.749><c> had</c>

00:12:13.889 --> 00:12:13.899 align:start position:0%
you might be able to get away if you had
 

00:12:13.899 --> 00:12:15.299 align:start position:0%
you might be able to get away if you had
a<00:12:13.929><c> better</c><00:12:14.110><c> API</c><00:12:14.439><c> you</c><00:12:14.559><c> might</c><00:12:14.799><c> be</c><00:12:14.949><c> able</c><00:12:15.040><c> to</c><00:12:15.189><c> get</c>

00:12:15.299 --> 00:12:15.309 align:start position:0%
a better API you might be able to get
 

00:12:15.309 --> 00:12:17.609 align:start position:0%
a better API you might be able to get
away<00:12:15.429><c> with</c><00:12:15.699><c> specifying</c><00:12:16.209><c> utf-8</c><00:12:16.929><c> here</c><00:12:17.230><c> then</c><00:12:17.529><c> you</c>

00:12:17.609 --> 00:12:17.619 align:start position:0%
away with specifying utf-8 here then you
 

00:12:17.619 --> 00:12:19.289 align:start position:0%
away with specifying utf-8 here then you
avoid<00:12:17.919><c> the</c><00:12:18.069><c> whole</c><00:12:18.189><c> checked</c><00:12:18.459><c> exception</c><00:12:18.939><c> and</c><00:12:19.179><c> in</c>

00:12:19.289 --> 00:12:19.299 align:start position:0%
avoid the whole checked exception and in
 

00:12:19.299 --> 00:12:20.609 align:start position:0%
avoid the whole checked exception and in
fact<00:12:19.419><c> then</c><00:12:19.600><c> you</c><00:12:19.720><c> could</c><00:12:19.869><c> refactor</c><00:12:20.379><c> the</c><00:12:20.470><c> whole</c>

00:12:20.609 --> 00:12:20.619 align:start position:0%
fact then you could refactor the whole
 

00:12:20.619 --> 00:12:22.710 align:start position:0%
fact then you could refactor the whole
thing<00:12:20.860><c> and</c><00:12:21.160><c> and</c><00:12:21.819><c> it</c><00:12:21.910><c> would</c><00:12:21.999><c> get</c><00:12:22.119><c> much</c><00:12:22.360><c> nicer</c>

00:12:22.710 --> 00:12:22.720 align:start position:0%
thing and and it would get much nicer
 

00:12:22.720 --> 00:12:24.900 align:start position:0%
thing and and it would get much nicer
but<00:12:23.259><c> we</c><00:12:23.410><c> do</c><00:12:23.559><c> not</c><00:12:23.679><c> have</c><00:12:23.889><c> that</c><00:12:24.069><c> option</c><00:12:24.220><c> today</c><00:12:24.610><c> but</c>

00:12:24.900 --> 00:12:24.910 align:start position:0%
but we do not have that option today but
 

00:12:24.910 --> 00:12:26.909 align:start position:0%
but we do not have that option today but
somebody<00:12:25.600><c> remind</c><00:12:25.929><c> me</c><00:12:26.049><c> to</c><00:12:26.199><c> file</c><00:12:26.439><c> a</c><00:12:26.559><c> bug</c><00:12:26.709><c> for</c>

00:12:26.909 --> 00:12:26.919 align:start position:0%
somebody remind me to file a bug for
 

00:12:26.919 --> 00:12:28.040 align:start position:0%
somebody remind me to file a bug for
that

00:12:28.040 --> 00:12:28.050 align:start position:0%
that
 

00:12:28.050 --> 00:12:31.590 align:start position:0%
that
okay<00:12:29.100><c> one</c><00:12:30.100><c> more</c><00:12:30.280><c> thing</c><00:12:30.580><c> oh</c><00:12:30.700><c> and</c><00:12:31.090><c> then</c><00:12:31.270><c> also</c>

00:12:31.590 --> 00:12:31.600 align:start position:0%
okay one more thing oh and then also
 

00:12:31.600 --> 00:12:35.250 align:start position:0%
okay one more thing oh and then also
there's<00:12:32.290><c> this</c><00:12:32.550><c> split</c><00:12:33.550><c> method</c><00:12:34.000><c> so</c><00:12:34.810><c> so</c>

00:12:35.250 --> 00:12:35.260 align:start position:0%
there's this split method so so
 

00:12:35.260 --> 00:12:37.200 align:start position:0%
there's this split method so so
basically<00:12:35.650><c> that</c><00:12:35.920><c> you</c><00:12:36.430><c> essentially</c><00:12:36.760><c> want</c><00:12:36.880><c> key</c>

00:12:37.200 --> 00:12:37.210 align:start position:0%
basically that you essentially want key
 

00:12:37.210 --> 00:12:39.270 align:start position:0%
basically that you essentially want key
value<00:12:37.540><c> pairs</c><00:12:37.750><c> and</c><00:12:37.990><c> we</c><00:12:38.050><c> split</c><00:12:38.320><c> on</c><00:12:38.470><c> equals</c><00:12:38.980><c> and</c>

00:12:39.270 --> 00:12:39.280 align:start position:0%
value pairs and we split on equals and
 

00:12:39.280 --> 00:12:42.090 align:start position:0%
value pairs and we split on equals and
so<00:12:39.550><c> there's</c><00:12:39.730><c> this</c><00:12:39.910><c> issue</c><00:12:40.150><c> here</c><00:12:40.570><c> which</c><00:12:41.080><c> is</c><00:12:41.320><c> so</c>

00:12:42.090 --> 00:12:42.100 align:start position:0%
so there's this issue here which is so
 

00:12:42.100 --> 00:12:44.580 align:start position:0%
so there's this issue here which is so
we<00:12:42.220><c> use</c><00:12:42.340><c> the</c><00:12:42.520><c> the</c><00:12:42.550><c> overload</c><00:12:43.330><c> of</c><00:12:43.600><c> split</c><00:12:43.990><c> which</c>

00:12:44.580 --> 00:12:44.590 align:start position:0%
we use the the overload of split which
 

00:12:44.590 --> 00:12:46.980 align:start position:0%
we use the the overload of split which
takes<00:12:44.980><c> a</c><00:12:45.130><c> limit</c><00:12:45.550><c> argument</c><00:12:46.090><c> so</c><00:12:46.480><c> that</c><00:12:46.510><c> means</c><00:12:46.840><c> if</c>

00:12:46.980 --> 00:12:46.990 align:start position:0%
takes a limit argument so that means if
 

00:12:46.990 --> 00:12:49.080 align:start position:0%
takes a limit argument so that means if
they're<00:12:47.110><c> multiple</c><00:12:47.560><c> equal</c><00:12:47.890><c> sign</c><00:12:48.160><c> in</c><00:12:48.850><c> one</c>

00:12:49.080 --> 00:12:49.090 align:start position:0%
they're multiple equal sign in one
 

00:12:49.090 --> 00:12:52.230 align:start position:0%
they're multiple equal sign in one
string<00:12:49.480><c> we</c><00:12:49.960><c> take</c><00:12:50.260><c> the</c><00:12:50.470><c> the</c><00:12:51.040><c> first</c><00:12:51.730><c> chunk</c><00:12:52.060><c> to</c>

00:12:52.230 --> 00:12:52.240 align:start position:0%
string we take the the first chunk to
 

00:12:52.240 --> 00:12:54.090 align:start position:0%
string we take the the first chunk to
the<00:12:52.360><c> left</c><00:12:52.540><c> of</c><00:12:52.720><c> the</c><00:12:52.810><c> first</c><00:12:53.020><c> equal</c><00:12:53.560><c> sign</c><00:12:53.800><c> and</c>

00:12:54.090 --> 00:12:54.100 align:start position:0%
the left of the first equal sign and
 

00:12:54.100 --> 00:12:56.220 align:start position:0%
the left of the first equal sign and
call<00:12:54.310><c> that</c><00:12:54.460><c> the</c><00:12:54.610><c> key</c><00:12:54.820><c> and</c><00:12:55.060><c> the</c><00:12:55.480><c> rest</c><00:12:55.750><c> of</c><00:12:56.020><c> the</c>

00:12:56.220 --> 00:12:56.230 align:start position:0%
call that the key and the rest of the
 

00:12:56.230 --> 00:12:59.100 align:start position:0%
call that the key and the rest of the
string<00:12:56.500><c> is</c><00:12:56.740><c> the</c><00:12:57.010><c> value</c><00:12:57.660><c> even</c><00:12:58.660><c> if</c><00:12:58.780><c> it</c><00:12:58.870><c> includes</c>

00:12:59.100 --> 00:12:59.110 align:start position:0%
string is the value even if it includes
 

00:12:59.110 --> 00:13:01.560 align:start position:0%
string is the value even if it includes
equal<00:12:59.440><c> signs</c><00:12:59.680><c> but</c><00:13:00.460><c> there's</c><00:13:00.640><c> still</c><00:13:00.790><c> a</c><00:13:00.850><c> bug</c><00:13:01.090><c> here</c>

00:13:01.560 --> 00:13:01.570 align:start position:0%
equal signs but there's still a bug here
 

00:13:01.570 --> 00:13:03.750 align:start position:0%
equal signs but there's still a bug here
which<00:13:01.750><c> is</c><00:13:01.930><c> if</c><00:13:02.140><c> the</c><00:13:02.500><c> chunk</c><00:13:02.740><c> we</c><00:13:02.890><c> get</c><00:13:03.100><c> has</c><00:13:03.400><c> no</c>

00:13:03.750 --> 00:13:03.760 align:start position:0%
which is if the chunk we get has no
 

00:13:03.760 --> 00:13:06.240 align:start position:0%
which is if the chunk we get has no
equal<00:13:04.180><c> sign</c><00:13:04.210><c> this</c><00:13:04.990><c> will</c><00:13:05.230><c> return</c><00:13:05.530><c> an</c><00:13:05.890><c> array</c><00:13:06.100><c> of</c>

00:13:06.240 --> 00:13:06.250 align:start position:0%
equal sign this will return an array of
 

00:13:06.250 --> 00:13:08.460 align:start position:0%
equal sign this will return an array of
length<00:13:06.430><c> one</c><00:13:06.760><c> and</c><00:13:07.030><c> actually</c><00:13:07.660><c> we'll</c><00:13:07.870><c> throw</c><00:13:08.230><c> up</c>

00:13:08.460 --> 00:13:08.470 align:start position:0%
length one and actually we'll throw up
 

00:13:08.470 --> 00:13:10.680 align:start position:0%
length one and actually we'll throw up
array<00:13:08.980><c> index</c><00:13:09.730><c> out</c><00:13:09.820><c> of</c><00:13:09.880><c> bounds</c><00:13:09.970><c> exception</c><00:13:10.240><c> so</c>

00:13:10.680 --> 00:13:10.690 align:start position:0%
array index out of bounds exception so
 

00:13:10.690 --> 00:13:12.390 align:start position:0%
array index out of bounds exception so
so<00:13:11.050><c> anyway</c><00:13:11.290><c> so</c><00:13:11.350><c> there's</c><00:13:11.620><c> there's</c><00:13:11.890><c> a</c><00:13:11.980><c> lot</c><00:13:12.190><c> of</c>

00:13:12.390 --> 00:13:12.400 align:start position:0%
so anyway so there's there's a lot of
 

00:13:12.400 --> 00:13:13.680 align:start position:0%
so anyway so there's there's a lot of
stuff<00:13:12.550><c> going</c><00:13:12.730><c> on</c><00:13:12.910><c> in</c><00:13:12.970><c> this</c><00:13:13.150><c> code</c><00:13:13.360><c> you</c><00:13:13.480><c> have</c><00:13:13.510><c> to</c>

00:13:13.680 --> 00:13:13.690 align:start position:0%
stuff going on in this code you have to
 

00:13:13.690 --> 00:13:15.690 align:start position:0%
stuff going on in this code you have to
think<00:13:13.870><c> about</c><00:13:13.930><c> but</c><00:13:14.230><c> all</c><00:13:15.190><c> right</c><00:13:15.280><c> well</c><00:13:15.460><c> but</c><00:13:15.610><c> we</c>

00:13:15.690 --> 00:13:15.700 align:start position:0%
think about but all right well but we
 

00:13:15.700 --> 00:13:17.520 align:start position:0%
think about but all right well but we
should<00:13:15.850><c> move</c><00:13:16.000><c> on</c><00:13:16.120><c> yeah</c><00:13:16.360><c> wise</c><00:13:16.540><c> did</c><00:13:17.260><c> you</c><00:13:17.320><c> want</c><00:13:17.470><c> to</c>

00:13:17.520 --> 00:13:17.530 align:start position:0%
should move on yeah wise did you want to
 

00:13:17.530 --> 00:13:20.490 align:start position:0%
should move on yeah wise did you want to
talk<00:13:17.620><c> about</c><00:13:17.710><c> the</c><00:13:17.890><c> second</c><00:13:18.160><c> slide</c><00:13:18.340><c> I</c><00:13:18.850><c> think</c><00:13:19.510><c> no</c>

00:13:20.490 --> 00:13:20.500 align:start position:0%
talk about the second slide I think no
 

00:13:20.500 --> 00:13:23.490 align:start position:0%
talk about the second slide I think no
I'm<00:13:20.680><c> sure</c><00:13:20.860><c> he's</c><00:13:20.980><c> going</c><00:13:21.190><c> right</c><00:13:21.460><c> okay</c><00:13:21.940><c> so</c><00:13:22.930><c> next</c>

00:13:23.490 --> 00:13:23.500 align:start position:0%
I'm sure he's going right okay so next
 

00:13:23.500 --> 00:13:25.950 align:start position:0%
I'm sure he's going right okay so next
thing<00:13:23.740><c> is</c><00:13:23.890><c> imperative</c><00:13:24.760><c> screams</c><00:13:25.180><c> if</c><00:13:25.780><c> we</c><00:13:25.840><c> can</c>

00:13:25.950 --> 00:13:25.960 align:start position:0%
thing is imperative screams if we can
 

00:13:25.960 --> 00:13:29.190 align:start position:0%
thing is imperative screams if we can
hold<00:13:26.230><c> questions</c><00:13:26.740><c> until</c><00:13:26.830><c> the</c><00:13:27.010><c> end</c><00:13:27.810><c> ya</c><00:13:28.810><c> know</c><00:13:29.020><c> if</c>

00:13:29.190 --> 00:13:29.200 align:start position:0%
hold questions until the end ya know if
 

00:13:29.200 --> 00:13:30.990 align:start position:0%
hold questions until the end ya know if
we<00:13:29.320><c> keep</c><00:13:30.220><c> questions</c><00:13:30.580><c> till</c><00:13:30.730><c> the</c><00:13:30.790><c> end</c><00:13:30.910><c> because</c>

00:13:30.990 --> 00:13:31.000 align:start position:0%
we keep questions till the end because
 

00:13:31.000 --> 00:13:32.610 align:start position:0%
we keep questions till the end because
we<00:13:31.210><c> got</c><00:13:31.510><c> quite</c><00:13:31.630><c> a</c><00:13:31.690><c> lot</c><00:13:31.810><c> to</c><00:13:31.900><c> get</c><00:13:31.960><c> through</c><00:13:32.140><c> so</c><00:13:32.200><c> we</c>

00:13:32.610 --> 00:13:32.620 align:start position:0%
we got quite a lot to get through so we
 

00:13:32.620 --> 00:13:34.710 align:start position:0%
we got quite a lot to get through so we
don't<00:13:32.650><c> were</c><00:13:32.800><c> kind</c><00:13:33.010><c> of</c><00:13:33.040><c> pause</c><00:13:33.370><c> too</c><00:13:33.790><c> much</c>

00:13:34.710 --> 00:13:34.720 align:start position:0%
don't were kind of pause too much
 

00:13:34.720 --> 00:13:36.780 align:start position:0%
don't were kind of pause too much
okay<00:13:35.530><c> so</c><00:13:35.589><c> imperative</c><00:13:35.920><c> streams</c><00:13:36.370><c> now</c><00:13:36.670><c> this</c>

00:13:36.780 --> 00:13:36.790 align:start position:0%
okay so imperative streams now this
 

00:13:36.790 --> 00:13:38.550 align:start position:0%
okay so imperative streams now this
comes<00:13:36.970><c> back</c><00:13:37.150><c> to</c><00:13:37.450><c> what</c><00:13:38.110><c> I</c><00:13:38.140><c> was</c><00:13:38.230><c> saying</c><00:13:38.410><c> about</c>

00:13:38.550 --> 00:13:38.560 align:start position:0%
comes back to what I was saying about
 

00:13:38.560 --> 00:13:41.400 align:start position:0%
comes back to what I was saying about
how<00:13:38.740><c> as</c><00:13:39.190><c> Java</c><00:13:39.850><c> developers</c><00:13:40.300><c> we</c><00:13:40.660><c> tend</c><00:13:41.110><c> to</c><00:13:41.200><c> think</c>

00:13:41.400 --> 00:13:41.410 align:start position:0%
how as Java developers we tend to think
 

00:13:41.410 --> 00:13:43.410 align:start position:0%
how as Java developers we tend to think
imperatively<00:13:42.100><c> we</c><00:13:42.310><c> think</c><00:13:42.550><c> in</c><00:13:42.730><c> terms</c><00:13:42.760><c> of</c><00:13:43.120><c> loops</c>

00:13:43.410 --> 00:13:43.420 align:start position:0%
imperatively we think in terms of loops
 

00:13:43.420 --> 00:13:47.250 align:start position:0%
imperatively we think in terms of loops
and<00:13:43.780><c> so</c><00:13:44.740><c> when</c><00:13:45.339><c> JDK</c><00:13:45.790><c> 8</c><00:13:46.030><c> first</c><00:13:46.510><c> came</c><00:13:46.720><c> out</c><00:13:46.870><c> I</c>

00:13:47.250 --> 00:13:47.260 align:start position:0%
and so when JDK 8 first came out I
 

00:13:47.260 --> 00:13:50.010 align:start position:0%
and so when JDK 8 first came out I
decided<00:13:48.040><c> to</c><00:13:48.400><c> write</c><00:13:48.730><c> some</c><00:13:48.940><c> code</c><00:13:49.150><c> that</c><00:13:49.510><c> would</c>

00:13:50.010 --> 00:13:50.020 align:start position:0%
decided to write some code that would
 

00:13:50.020 --> 00:13:51.930 align:start position:0%
decided to write some code that would
scan<00:13:50.320><c> through</c><00:13:50.530><c> all</c><00:13:50.560><c> the</c><00:13:50.860><c> Java</c><00:13:51.100><c> Doc's</c><00:13:51.310><c> and</c><00:13:51.580><c> find</c>

00:13:51.930 --> 00:13:51.940 align:start position:0%
scan through all the Java Doc's and find
 

00:13:51.940 --> 00:13:54.420 align:start position:0%
scan through all the Java Doc's and find
all<00:13:52.210><c> places</c><00:13:52.570><c> where</c><00:13:53.380><c> you</c><00:13:53.589><c> had</c><00:13:53.860><c> a</c><00:13:54.070><c> method</c><00:13:54.400><c> to</c>

00:13:54.420 --> 00:13:54.430 align:start position:0%
all places where you had a method to
 

00:13:54.430 --> 00:13:56.790 align:start position:0%
all places where you had a method to
returned<00:13:54.880><c> a</c><00:13:55.089><c> stream</c><00:13:55.540><c> and</c><00:13:55.839><c> all</c><00:13:56.470><c> the</c><00:13:56.589><c> places</c>

00:13:56.790 --> 00:13:56.800 align:start position:0%
returned a stream and all the places
 

00:13:56.800 --> 00:13:59.520 align:start position:0%
returned a stream and all the places
where<00:13:57.370><c> you</c><00:13:57.460><c> had</c><00:13:57.640><c> a</c><00:13:57.670><c> method</c><00:13:58.120><c> that</c><00:13:58.720><c> would</c><00:13:58.960><c> take</c>

00:13:59.520 --> 00:13:59.530 align:start position:0%
where you had a method that would take
 

00:13:59.530 --> 00:14:01.260 align:start position:0%
where you had a method that would take
an<00:13:59.680><c> argument</c><00:14:00.190><c> which</c><00:14:00.580><c> is</c><00:14:00.730><c> a</c><00:14:00.760><c> functional</c>

00:14:01.260 --> 00:14:01.270 align:start position:0%
an argument which is a functional
 

00:14:01.270 --> 00:14:02.790 align:start position:0%
an argument which is a functional
interface<00:14:01.810><c> and</c><00:14:02.110><c> therefore</c><00:14:02.410><c> I</c><00:14:02.440><c> could</c><00:14:02.650><c> use</c><00:14:02.770><c> a</c>

00:14:02.790 --> 00:14:02.800 align:start position:0%
interface and therefore I could use a
 

00:14:02.800 --> 00:14:04.320 align:start position:0%
interface and therefore I could use a
lambda<00:14:03.070><c> expression</c><00:14:03.280><c> because</c><00:14:04.000><c> there</c><00:14:04.120><c> was</c><00:14:04.210><c> no</c>

00:14:04.320 --> 00:14:04.330 align:start position:0%
lambda expression because there was no
 

00:14:04.330 --> 00:14:05.910 align:start position:0%
lambda expression because there was no
kind<00:14:04.630><c> of</c><00:14:04.750><c> sick</c><00:14:05.050><c> sink</c><00:14:05.260><c> list</c><00:14:05.530><c> that</c><00:14:05.800><c> was</c>

00:14:05.910 --> 00:14:05.920 align:start position:0%
kind of sick sink list that was
 

00:14:05.920 --> 00:14:07.829 align:start position:0%
kind of sick sink list that was
available<00:14:06.070><c> so</c><00:14:06.970><c> I</c><00:14:07.000><c> did</c><00:14:07.210><c> that</c><00:14:07.330><c> and</c><00:14:07.630><c> I</c><00:14:07.720><c> thought</c>

00:14:07.829 --> 00:14:07.839 align:start position:0%
available so I did that and I thought
 

00:14:07.839 --> 00:14:09.480 align:start position:0%
available so I did that and I thought
right<00:14:08.140><c> I'm</c><00:14:08.260><c> gonna</c><00:14:08.380><c> use</c><00:14:08.589><c> streams</c><00:14:09.040><c> to</c><00:14:09.339><c> write</c>

00:14:09.480 --> 00:14:09.490 align:start position:0%
right I'm gonna use streams to write
 

00:14:09.490 --> 00:14:11.550 align:start position:0%
right I'm gonna use streams to write
this<00:14:09.670><c> code</c><00:14:09.910><c> and</c><00:14:10.210><c> one</c><00:14:11.020><c> of</c><00:14:11.110><c> the</c><00:14:11.170><c> bits</c><00:14:11.290><c> of</c><00:14:11.410><c> code</c><00:14:11.530><c> I</c>

00:14:11.550 --> 00:14:11.560 align:start position:0%
this code and one of the bits of code I
 

00:14:11.560 --> 00:14:13.890 align:start position:0%
this code and one of the bits of code I
ended<00:14:11.890><c> up</c><00:14:11.980><c> with</c><00:14:12.220><c> was</c><00:14:12.880><c> where</c><00:14:13.180><c> I</c><00:14:13.210><c> want</c><00:14:13.420><c> to</c><00:14:13.480><c> count</c>

00:14:13.890 --> 00:14:13.900 align:start position:0%
ended up with was where I want to count
 

00:14:13.900 --> 00:14:17.730 align:start position:0%
ended up with was where I want to count
how<00:14:14.230><c> many</c><00:14:15.300><c> new</c><00:14:16.300><c> or</c><00:14:16.540><c> how</c><00:14:16.690><c> many</c><00:14:16.750><c> class</c><00:14:17.050><c> I'm</c><00:14:17.290><c> sorry</c>

00:14:17.730 --> 00:14:17.740 align:start position:0%
how many new or how many class I'm sorry
 

00:14:17.740 --> 00:14:18.930 align:start position:0%
how many new or how many class I'm sorry
how<00:14:17.830><c> many</c><00:14:17.860><c> methods</c><00:14:18.370><c> there</c><00:14:18.550><c> were</c><00:14:18.700><c> which</c>

00:14:18.930 --> 00:14:18.940 align:start position:0%
how many methods there were which
 

00:14:18.940 --> 00:14:22.680 align:start position:0%
how many methods there were which
returned<00:14:19.270><c> a</c><00:14:19.390><c> stream</c><00:14:19.660><c> so</c><00:14:20.500><c> I</c><00:14:20.530><c> had</c><00:14:20.830><c> a</c><00:14:21.450><c> map</c><00:14:22.450><c> of</c>

00:14:22.680 --> 00:14:22.690 align:start position:0%
returned a stream so I had a map of
 

00:14:22.690 --> 00:14:26.790 align:start position:0%
returned a stream so I had a map of
classes<00:14:23.650><c> two</c><00:14:23.830><c> methods</c><00:14:24.190><c> and</c><00:14:25.110><c> so</c><00:14:26.110><c> what</c><00:14:26.320><c> I</c><00:14:26.350><c> wanted</c>

00:14:26.790 --> 00:14:26.800 align:start position:0%
classes two methods and so what I wanted
 

00:14:26.800 --> 00:14:27.870 align:start position:0%
classes two methods and so what I wanted
to<00:14:26.890><c> be</c><00:14:26.950><c> able</c><00:14:27.070><c> to</c><00:14:27.130><c> do</c><00:14:27.220><c> is</c><00:14:27.310><c> go</c><00:14:27.460><c> through</c><00:14:27.490><c> that</c><00:14:27.730><c> and</c>

00:14:27.870 --> 00:14:27.880 align:start position:0%
to be able to do is go through that and
 

00:14:27.880 --> 00:14:30.210 align:start position:0%
to be able to do is go through that and
count<00:14:28.000><c> up</c><00:14:28.180><c> how</c><00:14:28.450><c> many</c><00:14:28.540><c> there</c><00:14:28.780><c> were</c><00:14:29.100><c> so</c><00:14:30.100><c> I</c><00:14:30.130><c> came</c>

00:14:30.210 --> 00:14:30.220 align:start position:0%
count up how many there were so I came
 

00:14:30.220 --> 00:14:32.730 align:start position:0%
count up how many there were so I came
up<00:14:30.430><c> with</c><00:14:30.520><c> this</c><00:14:30.580><c> piece</c><00:14:30.760><c> of</c><00:14:30.880><c> code</c><00:14:31.030><c> and</c><00:14:31.350><c> I</c><00:14:32.350><c> said</c>

00:14:32.730 --> 00:14:32.740 align:start position:0%
up with this piece of code and I said
 

00:14:32.740 --> 00:14:35.520 align:start position:0%
up with this piece of code and I said
okay<00:14:32.950><c> let's</c><00:14:33.130><c> take</c><00:14:33.310><c> out</c><00:14:33.490><c> our</c><00:14:33.910><c> map</c><00:14:34.180><c> and</c><00:14:34.530><c> then</c>

00:14:35.520 --> 00:14:35.530 align:start position:0%
okay let's take out our map and then
 

00:14:35.530 --> 00:14:37.320 align:start position:0%
okay let's take out our map and then
we'll<00:14:35.740><c> get</c><00:14:36.310><c> the</c><00:14:36.400><c> class</c><00:14:36.580><c> from</c><00:14:36.760><c> that</c><00:14:36.850><c> and</c><00:14:37.209><c> we'll</c>

00:14:37.320 --> 00:14:37.330 align:start position:0%
we'll get the class from that and we'll
 

00:14:37.330 --> 00:14:40.150 align:start position:0%
we'll get the class from that and we'll
create<00:14:37.870><c> a</c><00:14:37.990><c> stream</c><00:14:38.200><c> from</c><00:14:38.380><c> that</c><00:14:38.589><c> and</c><00:14:38.890><c> then</c>

00:14:40.150 --> 00:14:40.160 align:start position:0%
create a stream from that and then
 

00:14:40.160 --> 00:14:42.189 align:start position:0%
create a stream from that and then
each<00:14:40.250><c> of</c><00:14:40.459><c> those</c><00:14:40.579><c> I</c><00:14:40.910><c> need</c><00:14:41.060><c> to</c><00:14:41.269><c> do</c><00:14:41.389><c> something</c><00:14:41.779><c> so</c>

00:14:42.189 --> 00:14:42.199 align:start position:0%
each of those I need to do something so
 

00:14:42.199 --> 00:14:43.629 align:start position:0%
each of those I need to do something so
what<00:14:42.529><c> I</c><00:14:42.589><c> want</c><00:14:42.800><c> to</c><00:14:42.829><c> do</c><00:14:43.009><c> is</c><00:14:43.129><c> I'm</c><00:14:43.220><c> going</c><00:14:43.310><c> to</c><00:14:43.370><c> print</c>

00:14:43.629 --> 00:14:43.639 align:start position:0%
what I want to do is I'm going to print
 

00:14:43.639 --> 00:14:47.079 align:start position:0%
what I want to do is I'm going to print
out<00:14:43.879><c> the</c><00:14:44.660><c> the</c><00:14:44.990><c> method</c><00:14:45.139><c> and</c><00:14:45.560><c> then</c><00:14:46.279><c> I</c><00:14:46.579><c> want</c><00:14:46.879><c> to</c>

00:14:47.079 --> 00:14:47.089 align:start position:0%
out the the method and then I want to
 

00:14:47.089 --> 00:14:50.559 align:start position:0%
out the the method and then I want to
count<00:14:47.509><c> if</c><00:14:47.839><c> this</c><00:14:48.500><c> is</c><00:14:48.620><c> a</c><00:14:48.649><c> new</c><00:14:48.949><c> method</c><00:14:49.509><c> so</c><00:14:50.509><c> I</c>

00:14:50.559 --> 00:14:50.569 align:start position:0%
count if this is a new method so I
 

00:14:50.569 --> 00:14:52.389 align:start position:0%
count if this is a new method so I
thought<00:14:50.720><c> to</c><00:14:50.779><c> myself</c><00:14:50.899><c> okay</c><00:14:51.259><c> so</c><00:14:51.769><c> I</c><00:14:52.100><c> know</c><00:14:52.220><c> that</c>

00:14:52.389 --> 00:14:52.399 align:start position:0%
thought to myself okay so I know that
 

00:14:52.399 --> 00:14:54.009 align:start position:0%
thought to myself okay so I know that
this<00:14:52.759><c> could</c><00:14:52.970><c> potentially</c><00:14:53.029><c> be</c><00:14:53.360><c> multi-threaded</c>

00:14:54.009 --> 00:14:54.019 align:start position:0%
this could potentially be multi-threaded
 

00:14:54.019 --> 00:14:56.230 align:start position:0%
this could potentially be multi-threaded
so<00:14:54.199><c> I'm</c><00:14:54.290><c> going</c><00:14:54.500><c> to</c><00:14:54.560><c> use</c><00:14:54.769><c> a</c><00:14:54.800><c> long</c><00:14:55.160><c> adder</c><00:14:55.490><c> which</c>

00:14:56.230 --> 00:14:56.240 align:start position:0%
so I'm going to use a long adder which
 

00:14:56.240 --> 00:14:57.579 align:start position:0%
so I'm going to use a long adder which
is<00:14:56.389><c> specifically</c><00:14:56.870><c> designed</c><00:14:57.079><c> for</c><00:14:57.259><c> this</c><00:14:57.379><c> type</c>

00:14:57.579 --> 00:14:57.589 align:start position:0%
is specifically designed for this type
 

00:14:57.589 --> 00:14:59.829 align:start position:0%
is specifically designed for this type
of<00:14:57.620><c> situation</c><00:14:57.800><c> where</c><00:14:58.639><c> you</c><00:14:58.730><c> got</c><00:14:58.910><c> frequent</c>

00:14:59.829 --> 00:14:59.839 align:start position:0%
of situation where you got frequent
 

00:14:59.839 --> 00:15:01.869 align:start position:0%
of situation where you got frequent
writes<00:15:00.139><c> and</c><00:15:00.560><c> infrequent</c><00:15:01.040><c> reads</c><00:15:01.250><c> so</c><00:15:01.759><c> each</c>

00:15:01.869 --> 00:15:01.879 align:start position:0%
writes and infrequent reads so each
 

00:15:01.879 --> 00:15:03.280 align:start position:0%
writes and infrequent reads so each
thread<00:15:02.240><c> gets</c><00:15:02.480><c> its</c><00:15:02.629><c> own</c><00:15:02.720><c> instance</c><00:15:03.110><c> of</c><00:15:03.199><c> the</c>

00:15:03.280 --> 00:15:03.290 align:start position:0%
thread gets its own instance of the
 

00:15:03.290 --> 00:15:04.360 align:start position:0%
thread gets its own instance of the
variable<00:15:03.709><c> you</c><00:15:03.829><c> can</c><00:15:03.949><c> update</c><00:15:04.069><c> them</c>

00:15:04.360 --> 00:15:04.370 align:start position:0%
variable you can update them
 

00:15:04.370 --> 00:15:05.980 align:start position:0%
variable you can update them
independently<00:15:04.879><c> there's</c><00:15:05.209><c> no</c><00:15:05.329><c> contention</c>

00:15:05.980 --> 00:15:05.990 align:start position:0%
independently there's no contention
 

00:15:05.990 --> 00:15:07.780 align:start position:0%
independently there's no contention
there<00:15:06.259><c> locking</c><00:15:06.589><c> and</c><00:15:06.800><c> then</c><00:15:07.279><c> when</c><00:15:07.399><c> you</c><00:15:07.519><c> need</c><00:15:07.639><c> the</c>

00:15:07.780 --> 00:15:07.790 align:start position:0%
there locking and then when you need the
 

00:15:07.790 --> 00:15:09.400 align:start position:0%
there locking and then when you need the
result<00:15:07.910><c> it</c><00:15:08.240><c> brings</c><00:15:08.449><c> it</c><00:15:08.569><c> all</c><00:15:08.629><c> together</c><00:15:08.810><c> so</c><00:15:09.379><c> I</c>

00:15:09.400 --> 00:15:09.410 align:start position:0%
result it brings it all together so I
 

00:15:09.410 --> 00:15:10.660 align:start position:0%
result it brings it all together so I
thought<00:15:09.589><c> that's</c><00:15:09.769><c> a</c><00:15:09.949><c> really</c><00:15:10.160><c> good</c><00:15:10.279><c> thing</c><00:15:10.430><c> to</c><00:15:10.459><c> do</c>

00:15:10.660 --> 00:15:10.670 align:start position:0%
thought that's a really good thing to do
 

00:15:10.670 --> 00:15:13.360 align:start position:0%
thought that's a really good thing to do
it's<00:15:10.879><c> new</c><00:15:11.000><c> and</c><00:15:11.120><c> JDK</c><00:15:11.509><c> 8</c><00:15:11.540><c> will</c><00:15:12.050><c> use</c><00:15:12.230><c> that</c><00:15:12.470><c> so</c><00:15:13.339><c> I</c>

00:15:13.360 --> 00:15:13.370 align:start position:0%
it's new and JDK 8 will use that so I
 

00:15:13.370 --> 00:15:14.499 align:start position:0%
it's new and JDK 8 will use that so I
ended<00:15:13.519><c> up</c><00:15:13.610><c> with</c><00:15:13.759><c> this</c><00:15:13.850><c> very</c><00:15:14.060><c> nice</c><00:15:14.149><c> piece</c><00:15:14.389><c> of</c>

00:15:14.499 --> 00:15:14.509 align:start position:0%
ended up with this very nice piece of
 

00:15:14.509 --> 00:15:15.850 align:start position:0%
ended up with this very nice piece of
code<00:15:14.689><c> where</c><00:15:14.870><c> I</c><00:15:14.899><c> said</c><00:15:15.110><c> okay</c><00:15:15.319><c> take</c><00:15:15.500><c> the</c><00:15:15.620><c> stream</c>

00:15:15.850 --> 00:15:15.860 align:start position:0%
code where I said okay take the stream
 

00:15:15.860 --> 00:15:18.309 align:start position:0%
code where I said okay take the stream
do<00:15:16.189><c> for</c><00:15:16.490><c> each</c><00:15:16.639><c> and</c><00:15:16.970><c> then</c><00:15:17.600><c> I'll</c><00:15:17.689><c> take</c><00:15:17.870><c> my</c><00:15:17.899><c> method</c>

00:15:18.309 --> 00:15:18.319 align:start position:0%
do for each and then I'll take my method
 

00:15:18.319 --> 00:15:20.530 align:start position:0%
do for each and then I'll take my method
name<00:15:18.680><c> and</c><00:15:19.009><c> then</c><00:15:19.100><c> I</c><00:15:19.160><c> printed</c><00:15:19.459><c> out</c><00:15:19.610><c> a</c><00:15:19.939><c> check</c><00:15:20.420><c> of</c>

00:15:20.530 --> 00:15:20.540 align:start position:0%
name and then I printed out a check of
 

00:15:20.540 --> 00:15:22.840 align:start position:0%
name and then I printed out a check of
its<00:15:20.660><c> new</c><00:15:20.899><c> method</c><00:15:21.290><c> and</c><00:15:21.529><c> then</c><00:15:22.370><c> I'll</c><00:15:22.519><c> increment</c>

00:15:22.840 --> 00:15:22.850 align:start position:0%
its new method and then I'll increment
 

00:15:22.850 --> 00:15:25.689 align:start position:0%
its new method and then I'll increment
it<00:15:23.180><c> okay</c><00:15:23.959><c> so</c><00:15:24.589><c> I</c><00:15:24.649><c> spoke</c><00:15:24.980><c> to</c><00:15:25.040><c> the</c><00:15:25.250><c> steward</c><00:15:25.519><c> about</c>

00:15:25.689 --> 00:15:25.699 align:start position:0%
it okay so I spoke to the steward about
 

00:15:25.699 --> 00:15:27.249 align:start position:0%
it okay so I spoke to the steward about
this<00:15:25.850><c> and</c><00:15:25.939><c> he</c><00:15:26.000><c> said</c><00:15:26.149><c> ah</c><00:15:26.269><c> well</c><00:15:26.750><c> you</c><00:15:26.899><c> see</c><00:15:26.959><c> that's</c>

00:15:27.249 --> 00:15:27.259 align:start position:0%
this and he said ah well you see that's
 

00:15:27.259 --> 00:15:29.920 align:start position:0%
this and he said ah well you see that's
not<00:15:27.439><c> functional</c><00:15:28.279><c> programming</c><00:15:28.759><c> this</c><00:15:29.569><c> is</c><00:15:29.689><c> very</c>

00:15:29.920 --> 00:15:29.930 align:start position:0%
not functional programming this is very
 

00:15:29.930 --> 00:15:31.540 align:start position:0%
not functional programming this is very
bad<00:15:30.139><c> this</c><00:15:30.439><c> is</c><00:15:30.589><c> not</c><00:15:30.769><c> functional</c><00:15:31.220><c> programming</c>

00:15:31.540 --> 00:15:31.550 align:start position:0%
bad this is not functional programming
 

00:15:31.550 --> 00:15:33.939 align:start position:0%
bad this is not functional programming
so<00:15:32.329><c> I</c><00:15:32.360><c> thought</c><00:15:32.540><c> okay</c><00:15:32.839><c> I'll</c><00:15:33.170><c> go</c><00:15:33.410><c> with</c><00:15:33.439><c> and</c><00:15:33.860><c> I'll</c>

00:15:33.939 --> 00:15:33.949 align:start position:0%
so I thought okay I'll go with and I'll
 

00:15:33.949 --> 00:15:37.179 align:start position:0%
so I thought okay I'll go with and I'll
have<00:15:34.129><c> another</c><00:15:34.490><c> go</c><00:15:35.149><c> at</c><00:15:35.180><c> that</c><00:15:35.980><c> so</c><00:15:36.980><c> I</c><00:15:37.040><c> thought</c>

00:15:37.179 --> 00:15:37.189 align:start position:0%
have another go at that so I thought
 

00:15:37.189 --> 00:15:37.629 align:start position:0%
have another go at that so I thought
right

00:15:37.629 --> 00:15:37.639 align:start position:0%
right
 

00:15:37.639 --> 00:15:39.819 align:start position:0%
right
I<00:15:37.670><c> don't</c><00:15:38.060><c> need</c><00:15:38.240><c> stating</c><00:15:38.810><c> this</c><00:15:38.930><c> in</c><00:15:39.379><c> terms</c><00:15:39.649><c> of</c>

00:15:39.819 --> 00:15:39.829 align:start position:0%
I don't need stating this in terms of
 

00:15:39.829 --> 00:15:41.530 align:start position:0%
I don't need stating this in terms of
external<00:15:40.160><c> state</c><00:15:40.550><c> so</c><00:15:40.790><c> what</c><00:15:40.910><c> I'll</c><00:15:41.029><c> do</c><00:15:41.180><c> is</c><00:15:41.389><c> I'll</c>

00:15:41.530 --> 00:15:41.540 align:start position:0%
external state so what I'll do is I'll
 

00:15:41.540 --> 00:15:42.429 align:start position:0%
external state so what I'll do is I'll
make<00:15:41.660><c> it</c><00:15:41.720><c> a</c><00:15:41.750><c> little</c><00:15:41.870><c> bit</c><00:15:41.990><c> more</c><00:15:42.110><c> complicated</c>

00:15:42.429 --> 00:15:42.439 align:start position:0%
make it a little bit more complicated
 

00:15:42.439 --> 00:15:45.670 align:start position:0%
make it a little bit more complicated
and<00:15:43.009><c> I'll</c><00:15:43.939><c> come</c><00:15:44.120><c> up</c><00:15:44.149><c> with</c><00:15:44.480><c> the</c><00:15:45.230><c> idea</c><00:15:45.500><c> that</c><00:15:45.649><c> I</c>

00:15:45.670 --> 00:15:45.680 align:start position:0%
and I'll come up with the idea that I
 

00:15:45.680 --> 00:15:47.980 align:start position:0%
and I'll come up with the idea that I
create<00:15:46.100><c> my</c><00:15:46.160><c> stream</c><00:15:46.490><c> and</c><00:15:46.850><c> obviously</c><00:15:47.779><c> I</c><00:15:47.870><c> should</c>

00:15:47.980 --> 00:15:47.990 align:start position:0%
create my stream and obviously I should
 

00:15:47.990 --> 00:15:49.329 align:start position:0%
create my stream and obviously I should
have<00:15:48.079><c> shifted</c><00:15:48.230><c> this</c><00:15:48.500><c> out</c><00:15:48.649><c> into</c><00:15:48.800><c> a</c><00:15:48.889><c> method</c><00:15:49.220><c> but</c>

00:15:49.329 --> 00:15:49.339 align:start position:0%
have shifted this out into a method but
 

00:15:49.339 --> 00:15:50.439 align:start position:0%
have shifted this out into a method but
I'll<00:15:49.490><c> put</c><00:15:49.579><c> it</c><00:15:49.699><c> in</c><00:15:49.819><c> here</c><00:15:50.029><c> just</c><00:15:50.060><c> to</c><00:15:50.300><c> make</c><00:15:50.420><c> it</c>

00:15:50.439 --> 00:15:50.449 align:start position:0%
I'll put it in here just to make it
 

00:15:50.449 --> 00:15:52.809 align:start position:0%
I'll put it in here just to make it
easier<00:15:50.870><c> to</c><00:15:50.959><c> see</c><00:15:51.079><c> on</c><00:15:51.110><c> one</c><00:15:51.319><c> slide</c><00:15:51.709><c> and</c><00:15:52.490><c> I'll</c><00:15:52.670><c> say</c>

00:15:52.809 --> 00:15:52.819 align:start position:0%
easier to see on one slide and I'll say
 

00:15:52.819 --> 00:15:54.699 align:start position:0%
easier to see on one slide and I'll say
take<00:15:53.000><c> the</c><00:15:53.089><c> method</c><00:15:53.360><c> and</c><00:15:53.569><c> then</c><00:15:54.019><c> I'll</c><00:15:54.170><c> have</c><00:15:54.680><c> a</c>

00:15:54.699 --> 00:15:54.709 align:start position:0%
take the method and then I'll have a
 

00:15:54.709 --> 00:15:57.069 align:start position:0%
take the method and then I'll have a
variable<00:15:55.130><c> inside</c><00:15:55.880><c> my</c><00:15:56.209><c> lambda</c><00:15:56.569><c> expression</c>

00:15:57.069 --> 00:15:57.079 align:start position:0%
variable inside my lambda expression
 

00:15:57.079 --> 00:16:00.220 align:start position:0%
variable inside my lambda expression
which<00:15:57.709><c> is</c><00:15:57.889><c> new</c><00:15:58.100><c> method</c><00:15:58.370><c> is</c><00:15:58.490><c> zero</c><00:15:58.839><c> then</c><00:15:59.839><c> I'll</c>

00:16:00.220 --> 00:16:00.230 align:start position:0%
which is new method is zero then I'll
 

00:16:00.230 --> 00:16:01.990 align:start position:0%
which is new method is zero then I'll
print<00:16:00.500><c> out</c><00:16:00.649><c> the</c><00:16:00.800><c> method</c><00:16:01.100><c> and</c><00:16:01.310><c> then</c><00:16:01.670><c> I'll</c><00:16:01.759><c> check</c>

00:16:01.990 --> 00:16:02.000 align:start position:0%
print out the method and then I'll check
 

00:16:02.000 --> 00:16:03.970 align:start position:0%
print out the method and then I'll check
see<00:16:02.149><c> if</c><00:16:02.180><c> it's</c><00:16:02.329><c> a</c><00:16:02.389><c> new</c><00:16:02.509><c> method</c><00:16:02.810><c> if</c><00:16:03.199><c> it</c><00:16:03.589><c> is</c><00:16:03.709><c> I'll</c>

00:16:03.970 --> 00:16:03.980 align:start position:0%
see if it's a new method if it is I'll
 

00:16:03.980 --> 00:16:06.009 align:start position:0%
see if it's a new method if it is I'll
set<00:16:04.250><c> a</c><00:16:04.279><c> new</c><00:16:04.370><c> method</c><00:16:04.639><c> be</c><00:16:04.759><c> one</c><00:16:05.120><c> I</c><00:16:05.389><c> mean</c><00:16:05.870><c> I'll</c><00:16:05.990><c> just</c>

00:16:06.009 --> 00:16:06.019 align:start position:0%
set a new method be one I mean I'll just
 

00:16:06.019 --> 00:16:08.199 align:start position:0%
set a new method be one I mean I'll just
return<00:16:06.470><c> a</c><00:16:06.680><c> new</c><00:16:06.889><c> method</c><00:16:07.279><c> so</c><00:16:07.490><c> I</c><00:16:07.550><c> get</c><00:16:07.670><c> a</c><00:16:07.699><c> stream</c><00:16:08.029><c> of</c>

00:16:08.199 --> 00:16:08.209 align:start position:0%
return a new method so I get a stream of
 

00:16:08.209 --> 00:16:12.100 align:start position:0%
return a new method so I get a stream of
ones<00:16:08.420><c> and</c><00:16:08.569><c> zeros</c><00:16:08.959><c> and</c><00:16:09.430><c> I</c><00:16:10.430><c> add</c><00:16:10.819><c> those</c><00:16:10.970><c> up</c><00:16:11.029><c> and</c><00:16:11.420><c> I</c>

00:16:12.100 --> 00:16:12.110 align:start position:0%
ones and zeros and I add those up and I
 

00:16:12.110 --> 00:16:13.660 align:start position:0%
ones and zeros and I add those up and I
get<00:16:12.259><c> a</c><00:16:12.290><c> count</c><00:16:12.529><c> of</c><00:16:12.649><c> how</c><00:16:12.740><c> many</c><00:16:12.889><c> new</c><00:16:13.279><c> methods</c>

00:16:13.660 --> 00:16:13.670 align:start position:0%
get a count of how many new methods
 

00:16:13.670 --> 00:16:18.670 align:start position:0%
get a count of how many new methods
there<00:16:13.819><c> are</c><00:16:13.850><c> which</c><00:16:15.880><c> do</c><00:16:16.880><c> what</c><00:16:17.000><c> I</c><00:16:17.029><c> want</c><00:16:17.439><c> so</c><00:16:18.439><c> again</c>

00:16:18.670 --> 00:16:18.680 align:start position:0%
there are which do what I want so again
 

00:16:18.680 --> 00:16:20.290 align:start position:0%
there are which do what I want so again
I<00:16:18.860><c> showed</c><00:16:19.220><c> this</c><00:16:19.339><c> to</c><00:16:19.399><c> Stuart</c><00:16:19.759><c> he</c><00:16:19.850><c> said</c><00:16:20.029><c> well</c>

00:16:20.290 --> 00:16:20.300 align:start position:0%
I showed this to Stuart he said well
 

00:16:20.300 --> 00:16:22.389 align:start position:0%
I showed this to Stuart he said well
yeah<00:16:20.750><c> you</c><00:16:21.110><c> see</c><00:16:21.259><c> this</c><00:16:21.410><c> is</c><00:16:21.589><c> this</c><00:16:21.800><c> is</c><00:16:21.949><c> kind</c><00:16:22.250><c> of</c><00:16:22.279><c> a</c>

00:16:22.389 --> 00:16:22.399 align:start position:0%
yeah you see this is this is kind of a
 

00:16:22.399 --> 00:16:24.280 align:start position:0%
yeah you see this is this is kind of a
bit<00:16:22.610><c> more</c><00:16:22.639><c> functional</c><00:16:23.389><c> but</c><00:16:23.959><c> it's</c><00:16:24.110><c> not</c>

00:16:24.280 --> 00:16:24.290 align:start position:0%
bit more functional but it's not
 

00:16:24.290 --> 00:16:27.100 align:start position:0%
bit more functional but it's not
functional<00:16:24.860><c> because</c><00:16:25.399><c> we've</c><00:16:25.910><c> still</c><00:16:26.329><c> got</c><00:16:26.600><c> state</c>

00:16:27.100 --> 00:16:27.110 align:start position:0%
functional because we've still got state
 

00:16:27.110 --> 00:16:29.049 align:start position:0%
functional because we've still got state
involved<00:16:27.889><c> so</c><00:16:28.220><c> even</c><00:16:28.459><c> though</c><00:16:28.550><c> we've</c><00:16:28.699><c> taken</c><00:16:28.939><c> the</c>

00:16:29.049 --> 00:16:29.059 align:start position:0%
involved so even though we've taken the
 

00:16:29.059 --> 00:16:31.689 align:start position:0%
involved so even though we've taken the
state<00:16:29.439><c> internally</c><00:16:30.439><c> we're</c><00:16:31.130><c> still</c><00:16:31.309><c> modifying</c>

00:16:31.689 --> 00:16:31.699 align:start position:0%
state internally we're still modifying
 

00:16:31.699 --> 00:16:33.579 align:start position:0%
state internally we're still modifying
state<00:16:31.970><c> so</c><00:16:32.480><c> strictly</c><00:16:32.959><c> speaking</c><00:16:33.050><c> I</c><00:16:33.350><c> mean</c><00:16:33.500><c> you</c>

00:16:33.579 --> 00:16:33.589 align:start position:0%
state so strictly speaking I mean you
 

00:16:33.589 --> 00:16:35.740 align:start position:0%
state so strictly speaking I mean you
know<00:16:33.680><c> as</c><00:16:33.800><c> a</c><00:16:33.829><c> function</c><00:16:34.339><c> it</c><00:16:34.670><c> would</c><00:16:34.880><c> work</c><00:16:35.209><c> because</c>

00:16:35.740 --> 00:16:35.750 align:start position:0%
know as a function it would work because
 

00:16:35.750 --> 00:16:37.480 align:start position:0%
know as a function it would work because
you<00:16:35.990><c> could</c><00:16:36.139><c> put</c><00:16:36.259><c> apply</c><00:16:36.559><c> the</c><00:16:36.620><c> same</c><00:16:36.860><c> input</c><00:16:37.189><c> and</c>

00:16:37.480 --> 00:16:37.490 align:start position:0%
you could put apply the same input and
 

00:16:37.490 --> 00:16:39.069 align:start position:0%
you could put apply the same input and
get<00:16:37.850><c> the</c><00:16:37.970><c> same</c><00:16:38.120><c> output</c><00:16:38.329><c> no</c><00:16:38.660><c> matter</c><00:16:38.809><c> how</c><00:16:38.959><c> many</c>

00:16:39.069 --> 00:16:39.079 align:start position:0%
get the same output no matter how many
 

00:16:39.079 --> 00:16:40.960 align:start position:0%
get the same output no matter how many
times<00:16:39.350><c> but</c><00:16:39.860><c> there</c><00:16:40.040><c> still</c><00:16:40.100><c> be</c><00:16:40.339><c> state</c><00:16:40.730><c> being</c>

00:16:40.960 --> 00:16:40.970 align:start position:0%
times but there still be state being
 

00:16:40.970 --> 00:16:43.860 align:start position:0%
times but there still be state being
modified<00:16:41.269><c> so</c><00:16:42.110><c> that's</c><00:16:42.740><c> not</c><00:16:43.100><c> the</c><00:16:43.370><c> way</c><00:16:43.399><c> to</c><00:16:43.490><c> do</c><00:16:43.699><c> it</c>

00:16:43.860 --> 00:16:43.870 align:start position:0%
modified so that's not the way to do it
 

00:16:43.870 --> 00:16:46.240 align:start position:0%
modified so that's not the way to do it
so<00:16:44.870><c> I</c><00:16:44.899><c> thought</c><00:16:45.050><c> okay</c><00:16:45.319><c> I'll</c><00:16:45.649><c> go</c><00:16:45.860><c> well</c><00:16:46.009><c> have</c>

00:16:46.240 --> 00:16:46.250 align:start position:0%
so I thought okay I'll go well have
 

00:16:46.250 --> 00:16:50.430 align:start position:0%
so I thought okay I'll go well have
another<00:16:46.279><c> go</c><00:16:46.939><c> at</c><00:16:47.089><c> this</c><00:16:47.269><c> and</c><00:16:47.809><c> so</c><00:16:48.500><c> I</c><00:16:48.529><c> came</c><00:16:48.649><c> up</c><00:16:48.949><c> with</c>

00:16:50.430 --> 00:16:50.440 align:start position:0%
another go at this and so I came up with
 

00:16:50.440 --> 00:16:52.980 align:start position:0%
another go at this and so I came up with
a<00:16:50.470><c> better</c><00:16:50.950><c> way</c><00:16:51.100><c> of</c><00:16:51.130><c> doing</c><00:16:51.250><c> it</c><00:16:51.430><c> which</c><00:16:51.970><c> is</c><00:16:52.180><c> almost</c>

00:16:52.980 --> 00:16:52.990 align:start position:0%
a better way of doing it which is almost
 

00:16:52.990 --> 00:16:56.220 align:start position:0%
a better way of doing it which is almost
functional<00:16:53.650><c> but</c><00:16:54.310><c> not</c><00:16:54.340><c> quite</c><00:16:54.840><c> so</c><00:16:55.840><c> again</c><00:16:56.080><c> we</c>

00:16:56.220 --> 00:16:56.230 align:start position:0%
functional but not quite so again we
 

00:16:56.230 --> 00:16:57.420 align:start position:0%
functional but not quite so again we
take<00:16:56.260><c> the</c><00:16:56.440><c> stream</c><00:16:56.710><c> and</c><00:16:56.890><c> then</c><00:16:57.010><c> we</c><00:16:57.070><c> use</c><00:16:57.220><c> this</c>

00:16:57.420 --> 00:16:57.430 align:start position:0%
take the stream and then we use this
 

00:16:57.430 --> 00:16:58.950 align:start position:0%
take the stream and then we use this
this<00:16:57.700><c> handy</c><00:16:58.060><c> little</c><00:16:58.180><c> method</c><00:16:58.510><c> called</c><00:16:58.690><c> peak</c>

00:16:58.950 --> 00:16:58.960 align:start position:0%
this handy little method called peak
 

00:16:58.960 --> 00:17:01.080 align:start position:0%
this handy little method called peak
peak<00:16:59.650><c> allows</c><00:16:59.920><c> you</c><00:17:00.130><c> to</c><00:17:00.190><c> look</c><00:17:00.370><c> at</c><00:17:00.520><c> the</c><00:17:00.640><c> elements</c>

00:17:01.080 --> 00:17:01.090 align:start position:0%
peak allows you to look at the elements
 

00:17:01.090 --> 00:17:03.960 align:start position:0%
peak allows you to look at the elements
of<00:17:01.210><c> the</c><00:17:01.390><c> stream</c><00:17:01.810><c> as</c><00:17:02.050><c> they</c><00:17:02.410><c> go</c><00:17:02.590><c> past</c><00:17:02.860><c> and</c><00:17:03.310><c> so</c>

00:17:03.960 --> 00:17:03.970 align:start position:0%
of the stream as they go past and so
 

00:17:03.970 --> 00:17:05.130 align:start position:0%
of the stream as they go past and so
long<00:17:04.060><c> as</c><00:17:04.120><c> you</c><00:17:04.209><c> don't</c><00:17:04.270><c> modify</c><00:17:04.689><c> them</c><00:17:04.870><c> you</c><00:17:04.959><c> can</c>

00:17:05.130 --> 00:17:05.140 align:start position:0%
long as you don't modify them you can
 

00:17:05.140 --> 00:17:06.270 align:start position:0%
long as you don't modify them you can
you<00:17:05.410><c> can</c><00:17:05.530><c> look</c><00:17:05.560><c> at</c><00:17:05.770><c> them</c><00:17:05.860><c> and</c><00:17:05.980><c> you</c><00:17:06.040><c> can</c><00:17:06.160><c> do</c>

00:17:06.270 --> 00:17:06.280 align:start position:0%
you can look at them and you can do
 

00:17:06.280 --> 00:17:07.949 align:start position:0%
you can look at them and you can do
something<00:17:06.550><c> like</c><00:17:06.670><c> print</c><00:17:06.910><c> them</c><00:17:07.030><c> out</c><00:17:07.089><c> so</c><00:17:07.750><c> I</c><00:17:07.810><c> could</c>

00:17:07.949 --> 00:17:07.959 align:start position:0%
something like print them out so I could
 

00:17:07.959 --> 00:17:09.780 align:start position:0%
something like print them out so I could
print<00:17:08.170><c> out</c><00:17:08.319><c> the</c><00:17:08.589><c> the</c><00:17:08.860><c> method</c><00:17:09.130><c> names</c><00:17:09.339><c> as</c><00:17:09.579><c> they</c>

00:17:09.780 --> 00:17:09.790 align:start position:0%
print out the the method names as they
 

00:17:09.790 --> 00:17:11.910 align:start position:0%
print out the the method names as they
were<00:17:09.850><c> getting</c><00:17:10.030><c> passed</c><00:17:10.390><c> and</c><00:17:11.170><c> then</c><00:17:11.439><c> I</c><00:17:11.620><c> passed</c>

00:17:11.910 --> 00:17:11.920 align:start position:0%
were getting passed and then I passed
 

00:17:11.920 --> 00:17:15.569 align:start position:0%
were getting passed and then I passed
that<00:17:12.130><c> to</c><00:17:12.250><c> map</c><00:17:12.490><c> tint</c><00:17:12.850><c> and</c><00:17:13.350><c> no</c><00:17:14.350><c> state</c><00:17:14.740><c> involved</c>

00:17:15.569 --> 00:17:15.579 align:start position:0%
that to map tint and no state involved
 

00:17:15.579 --> 00:17:17.520 align:start position:0%
that to map tint and no state involved
in<00:17:15.730><c> terms</c><00:17:15.910><c> of</c><00:17:16.030><c> having</c><00:17:16.209><c> a</c><00:17:16.329><c> variable</c><00:17:16.959><c> and</c><00:17:17.350><c> I</c>

00:17:17.520 --> 00:17:17.530 align:start position:0%
in terms of having a variable and I
 

00:17:17.530 --> 00:17:19.050 align:start position:0%
in terms of having a variable and I
thought<00:17:17.680><c> right</c><00:17:17.829><c> I'll</c><00:17:18.010><c> use</c><00:17:18.220><c> the</c><00:17:18.459><c> conditional</c>

00:17:19.050 --> 00:17:19.060 align:start position:0%
thought right I'll use the conditional
 

00:17:19.060 --> 00:17:20.850 align:start position:0%
thought right I'll use the conditional
operator<00:17:19.120><c> and</c><00:17:19.839><c> I'll</c><00:17:19.990><c> say</c><00:17:20.170><c> if</c><00:17:20.410><c> it's</c><00:17:20.680><c> a</c><00:17:20.740><c> new</c>

00:17:20.850 --> 00:17:20.860 align:start position:0%
operator and I'll say if it's a new
 

00:17:20.860 --> 00:17:23.579 align:start position:0%
operator and I'll say if it's a new
method<00:17:21.220><c> return</c><00:17:21.579><c> 1</c><00:17:21.880><c> otherwise</c><00:17:22.089><c> return</c><00:17:22.720><c> 0</c><00:17:23.170><c> so</c><00:17:23.560><c> I</c>

00:17:23.579 --> 00:17:23.589 align:start position:0%
method return 1 otherwise return 0 so I
 

00:17:23.589 --> 00:17:24.960 align:start position:0%
method return 1 otherwise return 0 so I
still<00:17:23.770><c> get</c><00:17:23.860><c> my</c><00:17:23.920><c> stream</c><00:17:24.220><c> of</c><00:17:24.339><c> zeros</c><00:17:24.670><c> and</c><00:17:24.790><c> ones</c>

00:17:24.960 --> 00:17:24.970 align:start position:0%
still get my stream of zeros and ones
 

00:17:24.970 --> 00:17:27.620 align:start position:0%
still get my stream of zeros and ones
and<00:17:25.300><c> I</c><00:17:26.170><c> sum</c><00:17:26.560><c> those</c><00:17:26.680><c> up</c><00:17:26.740><c> and</c><00:17:27.040><c> I</c><00:17:27.069><c> get</c><00:17:27.220><c> my</c><00:17:27.339><c> result</c>

00:17:27.620 --> 00:17:27.630 align:start position:0%
and I sum those up and I get my result
 

00:17:27.630 --> 00:17:30.150 align:start position:0%
and I sum those up and I get my result
and<00:17:28.630><c> then</c><00:17:28.840><c> Stewart</c><00:17:29.650><c> pointed</c><00:17:29.770><c> out</c><00:17:30.010><c> well</c>

00:17:30.150 --> 00:17:30.160 align:start position:0%
and then Stewart pointed out well
 

00:17:30.160 --> 00:17:31.380 align:start position:0%
and then Stewart pointed out well
actually<00:17:30.310><c> there's</c><00:17:30.610><c> a</c><00:17:30.670><c> slightly</c><00:17:30.910><c> better</c><00:17:31.240><c> way</c>

00:17:31.380 --> 00:17:31.390 align:start position:0%
actually there's a slightly better way
 

00:17:31.390 --> 00:17:33.900 align:start position:0%
actually there's a slightly better way
of<00:17:31.510><c> doing</c><00:17:31.750><c> that</c><00:17:32.100><c> which</c><00:17:33.100><c> is</c><00:17:33.130><c> to</c><00:17:33.520><c> use</c><00:17:33.610><c> a</c><00:17:33.640><c> filter</c>

00:17:33.900 --> 00:17:33.910 align:start position:0%
of doing that which is to use a filter
 

00:17:33.910 --> 00:17:36.690 align:start position:0%
of doing that which is to use a filter
so<00:17:34.660><c> rather</c><00:17:34.930><c> than</c><00:17:35.260><c> you</c><00:17:36.100><c> know</c><00:17:36.190><c> doing</c><00:17:36.340><c> an</c><00:17:36.580><c> if</c>

00:17:36.690 --> 00:17:36.700 align:start position:0%
so rather than you know doing an if
 

00:17:36.700 --> 00:17:39.000 align:start position:0%
so rather than you know doing an if
statement<00:17:36.910><c> inside</c><00:17:37.210><c> a</c><00:17:37.390><c> map</c><00:17:37.630><c> to</c><00:17:37.810><c> int</c><00:17:37.990><c> why</c><00:17:38.860><c> not</c>

00:17:39.000 --> 00:17:39.010 align:start position:0%
statement inside a map to int why not
 

00:17:39.010 --> 00:17:40.440 align:start position:0%
statement inside a map to int why not
use<00:17:39.220><c> a</c><00:17:39.250><c> filter</c><00:17:39.610><c> because</c><00:17:39.970><c> I</c><00:17:40.000><c> thought</c><00:17:40.120><c> it</c><00:17:40.300><c> takes</c>

00:17:40.440 --> 00:17:40.450 align:start position:0%
use a filter because I thought it takes
 

00:17:40.450 --> 00:17:42.150 align:start position:0%
use a filter because I thought it takes
a<00:17:40.510><c> predicate</c><00:17:40.870><c> and</c><00:17:40.990><c> a</c><00:17:41.080><c> predicate</c><00:17:41.380><c> is</c><00:17:41.530><c> an</c><00:17:42.040><c> if</c>

00:17:42.150 --> 00:17:42.160 align:start position:0%
a predicate and a predicate is an if
 

00:17:42.160 --> 00:17:43.980 align:start position:0%
a predicate and a predicate is an if
statement<00:17:42.340><c> so</c><00:17:43.240><c> we</c><00:17:43.270><c> can</c><00:17:43.360><c> do</c><00:17:43.510><c> it</c><00:17:43.600><c> that</c><00:17:43.690><c> way</c><00:17:43.750><c> and</c>

00:17:43.980 --> 00:17:43.990 align:start position:0%
statement so we can do it that way and
 

00:17:43.990 --> 00:17:46.050 align:start position:0%
statement so we can do it that way and
we<00:17:44.110><c> end</c><00:17:44.230><c> up</c><00:17:44.290><c> with</c><00:17:44.350><c> filter</c><00:17:44.710><c> M</c><00:17:44.860><c> goes</c><00:17:45.400><c> to</c><00:17:45.610><c> is</c><00:17:45.850><c> new</c>

00:17:46.050 --> 00:17:46.060 align:start position:0%
we end up with filter M goes to is new
 

00:17:46.060 --> 00:17:48.450 align:start position:0%
we end up with filter M goes to is new
method<00:17:46.450><c> and</c><00:17:46.630><c> then</c><00:17:47.590><c> we</c><00:17:47.800><c> pass</c><00:17:47.950><c> it</c><00:17:47.980><c> to</c><00:17:48.220><c> count</c>

00:17:48.450 --> 00:17:48.460 align:start position:0%
method and then we pass it to count
 

00:17:48.460 --> 00:17:51.420 align:start position:0%
method and then we pass it to count
rather<00:17:48.820><c> than</c><00:17:49.060><c> sum</c><00:17:49.330><c> and</c><00:17:49.660><c> everything</c><00:17:50.650><c> works</c><00:17:50.830><c> so</c>

00:17:51.420 --> 00:17:51.430 align:start position:0%
rather than sum and everything works so
 

00:17:51.430 --> 00:17:53.040 align:start position:0%
rather than sum and everything works so
this<00:17:51.610><c> is</c><00:17:51.760><c> all</c><00:17:51.850><c> very</c><00:17:52.030><c> good</c><00:17:52.180><c> so</c><00:17:52.360><c> this</c><00:17:52.480><c> looks</c><00:17:52.810><c> I</c>

00:17:53.040 --> 00:17:53.050 align:start position:0%
this is all very good so this looks I
 

00:17:53.050 --> 00:17:54.510 align:start position:0%
this is all very good so this looks I
think<00:17:53.380><c> it's</c><00:17:53.500><c> myself</c><00:17:53.830><c> look</c><00:17:53.980><c> this</c><00:17:54.310><c> is</c>

00:17:54.510 --> 00:17:54.520 align:start position:0%
think it's myself look this is
 

00:17:54.520 --> 00:17:56.640 align:start position:0%
think it's myself look this is
functional<00:17:55.360><c> code</c><00:17:55.600><c> we</c><00:17:55.810><c> have</c><00:17:55.960><c> done</c><00:17:56.110><c> really</c><00:17:56.440><c> well</c>

00:17:56.640 --> 00:17:56.650 align:start position:0%
functional code we have done really well
 

00:17:56.650 --> 00:18:00.030 align:start position:0%
functional code we have done really well
here<00:17:56.940><c> and</c><00:17:57.940><c> then</c><00:17:58.060><c> Stuart</c><00:17:58.330><c> said</c><00:17:58.480><c> no</c><00:17:58.930><c> it</c><00:17:59.500><c> is</c><00:17:59.710><c> not</c>

00:18:00.030 --> 00:18:00.040 align:start position:0%
here and then Stuart said no it is not
 

00:18:00.040 --> 00:18:02.250 align:start position:0%
here and then Stuart said no it is not
functional<00:18:00.610><c> code</c><00:18:00.820><c> he</c><00:18:01.720><c> said</c>

00:18:02.250 --> 00:18:02.260 align:start position:0%
functional code he said
 

00:18:02.260 --> 00:18:05.910 align:start position:0%
functional code he said
strictly<00:18:03.100><c> speaking</c><00:18:03.300><c> print</c><00:18:04.300><c> line</c><00:18:04.510><c> is</c><00:18:04.920><c> side</c>

00:18:05.910 --> 00:18:05.920 align:start position:0%
strictly speaking print line is side
 

00:18:05.920 --> 00:18:07.770 align:start position:0%
strictly speaking print line is side
effect<00:18:06.220><c> and</c><00:18:06.460><c> if</c><00:18:07.090><c> you're</c><00:18:07.270><c> being</c><00:18:07.570><c> purely</c>

00:18:07.770 --> 00:18:07.780 align:start position:0%
effect and if you're being purely
 

00:18:07.780 --> 00:18:10.290 align:start position:0%
effect and if you're being purely
functional<00:18:08.020><c> you</c><00:18:08.650><c> can't</c><00:18:08.950><c> have</c><00:18:09.340><c> side</c><00:18:09.850><c> effects</c>

00:18:10.290 --> 00:18:10.300 align:start position:0%
functional you can't have side effects
 

00:18:10.300 --> 00:18:13.580 align:start position:0%
functional you can't have side effects
so<00:18:10.840><c> I'm</c><00:18:10.900><c> gonna</c><00:18:11.020><c> hand</c><00:18:11.170><c> it</c><00:18:11.230><c> over</c><00:18:11.260><c> to</c><00:18:11.500><c> Stuart</c><00:18:11.890><c> -</c><00:18:12.510><c> ok</c>

00:18:13.580 --> 00:18:13.590 align:start position:0%
so I'm gonna hand it over to Stuart - ok
 

00:18:13.590 --> 00:18:15.960 align:start position:0%
so I'm gonna hand it over to Stuart - ok
all<00:18:14.590><c> right</c><00:18:14.650><c> so</c><00:18:14.800><c> yeah</c><00:18:15.190><c> that</c><00:18:15.340><c> was</c><00:18:15.430><c> quite</c><00:18:15.550><c> a</c><00:18:15.640><c> quite</c>

00:18:15.960 --> 00:18:15.970 align:start position:0%
all right so yeah that was quite a quite
 

00:18:15.970 --> 00:18:17.970 align:start position:0%
all right so yeah that was quite a quite
an<00:18:16.060><c> evolution</c><00:18:16.150><c> there</c><00:18:16.690><c> and</c><00:18:16.930><c> I</c><00:18:17.500><c> think</c><00:18:17.740><c> that's</c>

00:18:17.970 --> 00:18:17.980 align:start position:0%
an evolution there and I think that's
 

00:18:17.980 --> 00:18:20.070 align:start position:0%
an evolution there and I think that's
true<00:18:18.280><c> and</c><00:18:18.400><c> I</c><00:18:18.460><c> think</c><00:18:18.490><c> that</c><00:18:18.760><c> I</c><00:18:18.790><c> think</c><00:18:19.330><c> peak</c><00:18:19.510><c> using</c>

00:18:20.070 --> 00:18:20.080 align:start position:0%
true and I think that I think peak using
 

00:18:20.080 --> 00:18:22.380 align:start position:0%
true and I think that I think peak using
peak<00:18:20.290><c> for</c><00:18:20.560><c> printing</c><00:18:21.310><c> out</c><00:18:21.370><c> logging</c><00:18:21.820><c> is</c><00:18:21.910><c> a</c><00:18:22.120><c> fine</c>

00:18:22.380 --> 00:18:22.390 align:start position:0%
peak for printing out logging is a fine
 

00:18:22.390 --> 00:18:24.240 align:start position:0%
peak for printing out logging is a fine
thing<00:18:22.630><c> to</c><00:18:22.660><c> do</c><00:18:22.840><c> this</c><00:18:23.380><c> is</c><00:18:23.530><c> kind</c><00:18:23.680><c> of</c><00:18:23.710><c> a</c><00:18:23.800><c> debugging</c>

00:18:24.240 --> 00:18:24.250 align:start position:0%
thing to do this is kind of a debugging
 

00:18:24.250 --> 00:18:26.700 align:start position:0%
thing to do this is kind of a debugging
thing<00:18:24.430><c> I</c><00:18:25.180><c> guess</c><00:18:25.810><c> if</c><00:18:26.080><c> you</c><00:18:26.230><c> want</c><00:18:26.410><c> to</c><00:18:26.530><c> actually</c>

00:18:26.700 --> 00:18:26.710 align:start position:0%
thing I guess if you want to actually
 

00:18:26.710 --> 00:18:28.410 align:start position:0%
thing I guess if you want to actually
store<00:18:27.250><c> the</c><00:18:27.370><c> results</c><00:18:27.730><c> somewhere</c><00:18:28.000><c> you</c><00:18:28.120><c> probably</c>

00:18:28.410 --> 00:18:28.420 align:start position:0%
store the results somewhere you probably
 

00:18:28.420 --> 00:18:29.910 align:start position:0%
store the results somewhere you probably
should<00:18:28.600><c> build</c><00:18:29.020><c> them</c><00:18:29.140><c> up</c><00:18:29.230><c> in</c><00:18:29.380><c> a</c><00:18:29.440><c> data</c><00:18:29.620><c> structure</c>

00:18:29.910 --> 00:18:29.920 align:start position:0%
should build them up in a data structure
 

00:18:29.920 --> 00:18:32.070 align:start position:0%
should build them up in a data structure
using<00:18:30.760><c> a</c><00:18:30.850><c> collector</c><00:18:31.330><c> or</c><00:18:31.480><c> something</c><00:18:31.750><c> like</c><00:18:31.840><c> that</c>

00:18:32.070 --> 00:18:32.080 align:start position:0%
using a collector or something like that
 

00:18:32.080 --> 00:18:34.980 align:start position:0%
using a collector or something like that
we<00:18:32.680><c> have</c><00:18:32.800><c> examples</c><00:18:33.310><c> of</c><00:18:33.370><c> that</c><00:18:33.430><c> later</c><00:18:33.850><c> on</c><00:18:33.940><c> but</c><00:18:34.930><c> I</c>

00:18:34.980 --> 00:18:34.990 align:start position:0%
we have examples of that later on but I
 

00:18:34.990 --> 00:18:37.080 align:start position:0%
we have examples of that later on but I
just<00:18:35.350><c> wanted</c><00:18:35.590><c> to</c><00:18:35.650><c> reflect</c><00:18:36.040><c> on</c><00:18:36.280><c> the</c><00:18:36.580><c> the</c><00:18:36.910><c> very</c>

00:18:37.080 --> 00:18:37.090 align:start position:0%
just wanted to reflect on the the very
 

00:18:37.090 --> 00:18:38.160 align:start position:0%
just wanted to reflect on the the very
beginning<00:18:37.510><c> of</c><00:18:37.570><c> this</c><00:18:37.690><c> I</c><00:18:37.870><c> don't</c><00:18:37.960><c> know</c><00:18:38.050><c> if</c><00:18:38.110><c> you</c>

00:18:38.160 --> 00:18:38.170 align:start position:0%
beginning of this I don't know if you
 

00:18:38.170 --> 00:18:39.840 align:start position:0%
beginning of this I don't know if you
want<00:18:38.320><c> to</c><00:18:38.380><c> mind</c><00:18:38.530><c> back</c><00:18:38.770><c> to</c><00:18:38.920><c> the</c><00:18:39.070><c> to</c><00:18:39.580><c> the</c><00:18:39.670><c> first</c>

00:18:39.840 --> 00:18:39.850 align:start position:0%
want to mind back to the to the first
 

00:18:39.850 --> 00:18:41.060 align:start position:0%
want to mind back to the to the first
slide<00:18:40.150><c> of</c><00:18:40.360><c> this</c>

00:18:41.060 --> 00:18:41.070 align:start position:0%
slide of this
 

00:18:41.070 --> 00:18:42.710 align:start position:0%
slide of this
so<00:18:41.610><c> you</c><00:18:41.700><c> see</c><00:18:41.880><c> that</c><00:18:42.060><c> there's</c><00:18:42.390><c> a</c><00:18:42.450><c> lot</c><00:18:42.630><c> of</c>

00:18:42.710 --> 00:18:42.720 align:start position:0%
so you see that there's a lot of
 

00:18:42.720 --> 00:18:44.810 align:start position:0%
so you see that there's a lot of
evolution<00:18:43.290><c> of</c><00:18:43.440><c> the</c><00:18:43.710><c> stream</c><00:18:44.010><c> going</c><00:18:44.370><c> on</c><00:18:44.580><c> here</c>

00:18:44.810 --> 00:18:44.820 align:start position:0%
evolution of the stream going on here
 

00:18:44.820 --> 00:18:47.090 align:start position:0%
evolution of the stream going on here
and<00:18:44.970><c> that</c><00:18:45.690><c> one</c><00:18:45.870><c> okay</c>

00:18:47.090 --> 00:18:47.100 align:start position:0%
and that one okay
 

00:18:47.100 --> 00:18:50.540 align:start position:0%
and that one okay
so<00:18:47.630><c> Simon</c><00:18:48.630><c> started</c><00:18:49.020><c> off</c><00:18:49.170><c> with</c><00:18:49.560><c> four</c><00:18:50.010><c> each</c><00:18:50.190><c> and</c>

00:18:50.540 --> 00:18:50.550 align:start position:0%
so Simon started off with four each and
 

00:18:50.550 --> 00:18:53.450 align:start position:0%
so Simon started off with four each and
the<00:18:51.330><c> the</c><00:18:52.110><c> problem</c><00:18:52.230><c> with</c><00:18:52.560><c> four</c><00:18:52.800><c> each</c><00:18:52.980><c> is</c><00:18:53.280><c> that</c>

00:18:53.450 --> 00:18:53.460 align:start position:0%
the the problem with four each is that
 

00:18:53.460 --> 00:18:56.000 align:start position:0%
the the problem with four each is that
it's<00:18:53.670><c> it's</c><00:18:53.910><c> the</c><00:18:54.060><c> easiest</c><00:18:54.540><c> stream</c><00:18:55.260><c> function</c><00:18:55.890><c> to</c>

00:18:56.000 --> 00:18:56.010 align:start position:0%
it's it's the easiest stream function to
 

00:18:56.010 --> 00:18:58.220 align:start position:0%
it's it's the easiest stream function to
understand<00:18:56.610><c> but</c><00:18:57.270><c> it's</c><00:18:57.420><c> actually</c><00:18:57.990><c> probably</c>

00:18:58.220 --> 00:18:58.230 align:start position:0%
understand but it's actually probably
 

00:18:58.230 --> 00:19:02.320 align:start position:0%
understand but it's actually probably
one<00:18:58.650><c> of</c><00:18:58.680><c> the</c><00:18:58.830><c> least</c><00:18:59.040><c> useful</c><00:18:59.430><c> ones</c><00:18:59.820><c> because</c><00:19:01.190><c> I</c>

00:19:02.320 --> 00:19:02.330 align:start position:0%
one of the least useful ones because I
 

00:19:02.330 --> 00:19:05.570 align:start position:0%
one of the least useful ones because I
think<00:19:03.330><c> I</c><00:19:03.930><c> don't</c><00:19:04.290><c> want</c><00:19:04.470><c> to</c><00:19:04.560><c> harp</c><00:19:05.190><c> on</c><00:19:05.340><c> you</c><00:19:05.460><c> too</c>

00:19:05.570 --> 00:19:05.580 align:start position:0%
think I don't want to harp on you too
 

00:19:05.580 --> 00:19:06.830 align:start position:0%
think I don't want to harp on you too
much<00:19:05.610><c> but</c><00:19:05.880><c> I</c><00:19:05.910><c> think</c><00:19:06.060><c> Simon</c><00:19:06.270><c> fell</c><00:19:06.570><c> into</c><00:19:06.720><c> this</c>

00:19:06.830 --> 00:19:06.840 align:start position:0%
much but I think Simon fell into this
 

00:19:06.840 --> 00:19:08.900 align:start position:0%
much but I think Simon fell into this
trap<00:19:07.080><c> which</c><00:19:07.320><c> is</c><00:19:07.350><c> there's</c><00:19:08.310><c> all</c><00:19:08.430><c> this</c><00:19:08.580><c> there's</c>

00:19:08.900 --> 00:19:08.910 align:start position:0%
trap which is there's all this there's
 

00:19:08.910 --> 00:19:10.280 align:start position:0%
trap which is there's all this there's
all<00:19:09.030><c> this</c><00:19:09.120><c> weird</c><00:19:09.300><c> stuff</c><00:19:09.600><c> well</c><00:19:09.780><c> for</c><00:19:09.990><c> each</c><00:19:10.110><c> well</c>

00:19:10.280 --> 00:19:10.290 align:start position:0%
all this weird stuff well for each well
 

00:19:10.290 --> 00:19:11.390 align:start position:0%
all this weird stuff well for each well
I<00:19:10.320><c> know</c><00:19:10.440><c> what</c><00:19:10.620><c> that</c><00:19:10.770><c> does</c><00:19:10.980><c> so</c><00:19:11.100><c> I'll</c><00:19:11.190><c> start</c>

00:19:11.390 --> 00:19:11.400 align:start position:0%
I know what that does so I'll start
 

00:19:11.400 --> 00:19:13.070 align:start position:0%
I know what that does so I'll start
writing<00:19:11.580><c> with</c><00:19:11.760><c> for</c><00:19:11.940><c> each</c><00:19:12.060><c> and</c><00:19:12.330><c> the</c><00:19:12.720><c> problem</c>

00:19:13.070 --> 00:19:13.080 align:start position:0%
writing with for each and the problem
 

00:19:13.080 --> 00:19:14.780 align:start position:0%
writing with for each and the problem
with<00:19:13.200><c> for</c><00:19:13.380><c> each</c><00:19:13.500><c> is</c><00:19:13.710><c> that</c><00:19:13.950><c> and</c><00:19:14.100><c> immediately</c>

00:19:14.780 --> 00:19:14.790 align:start position:0%
with for each is that and immediately
 

00:19:14.790 --> 00:19:18.200 align:start position:0%
with for each is that and immediately
leads<00:19:15.060><c> you</c><00:19:15.300><c> into</c><00:19:15.570><c> side-effects</c><00:19:16.560><c> and</c><00:19:17.210><c> once</c>

00:19:18.200 --> 00:19:18.210 align:start position:0%
leads you into side-effects and once
 

00:19:18.210 --> 00:19:19.310 align:start position:0%
leads you into side-effects and once
you've<00:19:18.360><c> fallen</c><00:19:18.480><c> into</c><00:19:18.780><c> the</c><00:19:18.930><c> trap</c><00:19:19.140><c> of</c>

00:19:19.310 --> 00:19:19.320 align:start position:0%
you've fallen into the trap of
 

00:19:19.320 --> 00:19:21.290 align:start position:0%
you've fallen into the trap of
side-effects<00:19:20.010><c> then</c><00:19:20.190><c> you</c><00:19:20.610><c> really</c><00:19:21.000><c> have</c><00:19:21.150><c> to</c>

00:19:21.290 --> 00:19:21.300 align:start position:0%
side-effects then you really have to
 

00:19:21.300 --> 00:19:23.660 align:start position:0%
side-effects then you really have to
think<00:19:21.620><c> differently</c><00:19:22.620><c> about</c><00:19:22.680><c> how</c><00:19:22.920><c> to</c><00:19:23.100><c> extricate</c>

00:19:23.660 --> 00:19:23.670 align:start position:0%
think differently about how to extricate
 

00:19:23.670 --> 00:19:24.980 align:start position:0%
think differently about how to extricate
yourself<00:19:24.030><c> from</c><00:19:24.090><c> that</c><00:19:24.360><c> and</c><00:19:24.570><c> so</c><00:19:24.660><c> that's</c><00:19:24.840><c> what</c>

00:19:24.980 --> 00:19:24.990 align:start position:0%
yourself from that and so that's what
 

00:19:24.990 --> 00:19:26.840 align:start position:0%
yourself from that and so that's what
this<00:19:25.080><c> exercise</c><00:19:25.290><c> was</c><00:19:26.040><c> about</c><00:19:26.310><c> so</c><00:19:26.550><c> I</c><00:19:26.580><c> think</c><00:19:26.760><c> we</c>

00:19:26.840 --> 00:19:26.850 align:start position:0%
this exercise was about so I think we
 

00:19:26.850 --> 00:19:28.550 align:start position:0%
this exercise was about so I think we
have<00:19:26.970><c> some</c><00:19:27.120><c> more</c><00:19:27.150><c> for</c><00:19:27.510><c> each's</c><00:19:27.840><c> coming</c><00:19:28.440><c> up</c>

00:19:28.550 --> 00:19:28.560 align:start position:0%
have some more for each's coming up
 

00:19:28.560 --> 00:19:30.580 align:start position:0%
have some more for each's coming up
later<00:19:28.770><c> on</c><00:19:28.860><c> in</c><00:19:28.980><c> the</c><00:19:29.160><c> presentation</c><00:19:29.520><c> as</c><00:19:30.030><c> well</c>

00:19:30.580 --> 00:19:30.590 align:start position:0%
later on in the presentation as well
 

00:19:30.590 --> 00:19:33.680 align:start position:0%
later on in the presentation as well
yeah<00:19:31.590><c> and</c><00:19:32.130><c> that's</c><00:19:32.340><c> kind</c><00:19:32.730><c> of</c><00:19:33.030><c> Stewart</c><00:19:33.480><c> makes</c><00:19:33.630><c> a</c>

00:19:33.680 --> 00:19:33.690 align:start position:0%
yeah and that's kind of Stewart makes a
 

00:19:33.690 --> 00:19:35.270 align:start position:0%
yeah and that's kind of Stewart makes a
really<00:19:33.840><c> good</c><00:19:33.960><c> point</c><00:19:34.110><c> because</c><00:19:34.290><c> it's</c><00:19:34.980><c> this</c>

00:19:35.270 --> 00:19:35.280 align:start position:0%
really good point because it's this
 

00:19:35.280 --> 00:19:36.500 align:start position:0%
really good point because it's this
whole<00:19:35.490><c> idea</c><00:19:35.610><c> of</c><00:19:35.820><c> thinking</c><00:19:36.150><c> differently</c>

00:19:36.500 --> 00:19:36.510 align:start position:0%
whole idea of thinking differently
 

00:19:36.510 --> 00:19:38.780 align:start position:0%
whole idea of thinking differently
because<00:19:37.320><c> the</c><00:19:37.920><c> way</c><00:19:38.010><c> I</c><00:19:38.040><c> looked</c><00:19:38.340><c> at</c><00:19:38.460><c> it</c><00:19:38.550><c> was</c><00:19:38.700><c> I</c>

00:19:38.780 --> 00:19:38.790 align:start position:0%
because the way I looked at it was I
 

00:19:38.790 --> 00:19:40.130 align:start position:0%
because the way I looked at it was I
said<00:19:38.970><c> okay</c><00:19:39.210><c> so</c><00:19:39.240><c> I've</c><00:19:39.420><c> got</c><00:19:39.450><c> these</c><00:19:39.720><c> elements</c>

00:19:40.130 --> 00:19:40.140 align:start position:0%
said okay so I've got these elements
 

00:19:40.140 --> 00:19:41.150 align:start position:0%
said okay so I've got these elements
coming<00:19:40.380><c> through</c><00:19:40.590><c> and</c><00:19:40.740><c> then</c><00:19:40.860><c> for</c><00:19:41.040><c> each</c><00:19:41.070><c> of</c>

00:19:41.150 --> 00:19:41.160 align:start position:0%
coming through and then for each of
 

00:19:41.160 --> 00:19:42.890 align:start position:0%
coming through and then for each of
those<00:19:41.400><c> I</c><00:19:41.580><c> want</c><00:19:41.670><c> to</c><00:19:41.790><c> do</c><00:19:41.970><c> something</c><00:19:42.390><c> so</c>

00:19:42.890 --> 00:19:42.900 align:start position:0%
those I want to do something so
 

00:19:42.900 --> 00:19:44.480 align:start position:0%
those I want to do something so
immediately<00:19:43.560><c> I've</c><00:19:43.710><c> got</c><00:19:43.860><c> those</c><00:19:44.010><c> two</c><00:19:44.160><c> words</c><00:19:44.340><c> in</c>

00:19:44.480 --> 00:19:44.490 align:start position:0%
immediately I've got those two words in
 

00:19:44.490 --> 00:19:45.740 align:start position:0%
immediately I've got those two words in
there<00:19:44.610><c> for</c><00:19:44.760><c> each</c><00:19:44.850><c> of</c><00:19:45.000><c> those</c><00:19:45.120><c> I</c><00:19:45.360><c> want</c><00:19:45.480><c> to</c><00:19:45.630><c> do</c>

00:19:45.740 --> 00:19:45.750 align:start position:0%
there for each of those I want to do
 

00:19:45.750 --> 00:19:47.210 align:start position:0%
there for each of those I want to do
something<00:19:45.960><c> oh</c><00:19:46.170><c> look</c><00:19:46.530><c> there's</c><00:19:46.800><c> a</c><00:19:46.860><c> for</c><00:19:47.100><c> each</c>

00:19:47.210 --> 00:19:47.220 align:start position:0%
something oh look there's a for each
 

00:19:47.220 --> 00:19:49.400 align:start position:0%
something oh look there's a for each
method<00:19:47.520><c> I'll</c><00:19:47.850><c> use</c><00:19:48.360><c> the</c><00:19:48.480><c> for</c><00:19:48.660><c> each</c><00:19:48.690><c> method</c><00:19:49.050><c> and</c>

00:19:49.400 --> 00:19:49.410 align:start position:0%
method I'll use the for each method and
 

00:19:49.410 --> 00:19:51.560 align:start position:0%
method I'll use the for each method and
that's<00:19:49.650><c> not</c><00:19:49.980><c> the</c><00:19:50.250><c> way</c><00:19:50.340><c> to</c><00:19:50.400><c> do</c><00:19:50.550><c> it</c><00:19:50.640><c> and</c><00:19:50.790><c> the</c><00:19:51.450><c> way</c>

00:19:51.560 --> 00:19:51.570 align:start position:0%
that's not the way to do it and the way
 

00:19:51.570 --> 00:19:52.940 align:start position:0%
that's not the way to do it and the way
I<00:19:51.600><c> kind</c><00:19:51.870><c> of</c><00:19:51.960><c> explain</c><00:19:52.260><c> this</c><00:19:52.380><c> when</c><00:19:52.560><c> I</c><00:19:52.620><c> talk</c><00:19:52.860><c> to</c>

00:19:52.940 --> 00:19:52.950 align:start position:0%
I kind of explain this when I talk to
 

00:19:52.950 --> 00:19:55.070 align:start position:0%
I kind of explain this when I talk to
people<00:19:53.070><c> on</c><00:19:53.970><c> other</c><00:19:54.210><c> sort</c><00:19:54.660><c> of</c><00:19:54.690><c> lambdas</c><00:19:55.020><c> and</c>

00:19:55.070 --> 00:19:55.080 align:start position:0%
people on other sort of lambdas and
 

00:19:55.080 --> 00:19:57.110 align:start position:0%
people on other sort of lambdas and
streams<00:19:55.410><c> stuff</c><00:19:55.890><c> that</c><00:19:56.040><c> I</c><00:19:56.100><c> do</c><00:19:56.160><c> it's</c><00:19:56.400><c> like</c><00:19:56.520><c> if</c><00:19:56.790><c> you</c>

00:19:57.110 --> 00:19:57.120 align:start position:0%
streams stuff that I do it's like if you
 

00:19:57.120 --> 00:19:58.820 align:start position:0%
streams stuff that I do it's like if you
think<00:19:57.360><c> if</c><00:19:57.630><c> you</c><00:19:57.690><c> look</c><00:19:58.050><c> at</c><00:19:58.140><c> for</c><00:19:58.410><c> each</c><00:19:58.440><c> and</c><00:19:58.770><c> you</c>

00:19:58.820 --> 00:19:58.830 align:start position:0%
think if you look at for each and you
 

00:19:58.830 --> 00:20:01.100 align:start position:0%
think if you look at for each and you
think<00:19:59.040><c> just</c><00:19:59.190><c> I'll</c><00:19:59.550><c> use</c><00:19:59.700><c> for</c><00:19:59.940><c> each</c><00:20:00.060><c> stop</c><00:20:00.780><c> and</c>

00:20:01.100 --> 00:20:01.110 align:start position:0%
think just I'll use for each stop and
 

00:20:01.110 --> 00:20:03.080 align:start position:0%
think just I'll use for each stop and
think<00:20:01.860><c> should</c><00:20:02.190><c> I</c><00:20:02.280><c> really</c><00:20:02.490><c> be</c><00:20:02.580><c> using</c><00:20:02.940><c> that</c>

00:20:03.080 --> 00:20:03.090 align:start position:0%
think should I really be using that
 

00:20:03.090 --> 00:20:04.940 align:start position:0%
think should I really be using that
because<00:20:03.240><c> there</c><00:20:03.810><c> are</c><00:20:03.930><c> legitimate</c><00:20:04.290><c> situations</c>

00:20:04.940 --> 00:20:04.950 align:start position:0%
because there are legitimate situations
 

00:20:04.950 --> 00:20:06.800 align:start position:0%
because there are legitimate situations
where<00:20:05.070><c> you</c><00:20:05.160><c> can</c><00:20:05.280><c> use</c><00:20:05.430><c> for</c><00:20:05.640><c> each</c><00:20:05.790><c> but</c><00:20:06.570><c> there</c><00:20:06.690><c> are</c>

00:20:06.800 --> 00:20:06.810 align:start position:0%
where you can use for each but there are
 

00:20:06.810 --> 00:20:09.020 align:start position:0%
where you can use for each but there are
many<00:20:07.050><c> where</c><00:20:07.290><c> you</c><00:20:07.380><c> shouldn't</c><00:20:07.680><c> and</c><00:20:08.010><c> so</c><00:20:08.220><c> using</c><00:20:08.940><c> it</c>

00:20:09.020 --> 00:20:09.030 align:start position:0%
many where you shouldn't and so using it
 

00:20:09.030 --> 00:20:10.970 align:start position:0%
many where you shouldn't and so using it
in<00:20:09.180><c> a</c><00:20:09.210><c> more</c><00:20:09.390><c> functional</c><00:20:09.720><c> way</c><00:20:10.050><c> is</c><00:20:10.320><c> the</c><00:20:10.830><c> way</c><00:20:10.920><c> to</c>

00:20:10.970 --> 00:20:10.980 align:start position:0%
in a more functional way is the way to
 

00:20:10.980 --> 00:20:12.920 align:start position:0%
in a more functional way is the way to
do<00:20:11.130><c> that</c><00:20:11.280><c> so</c><00:20:11.430><c> the</c><00:20:12.210><c> moment</c><00:20:12.540><c> you</c><00:20:12.600><c> think</c><00:20:12.720><c> about</c>

00:20:12.920 --> 00:20:12.930 align:start position:0%
do that so the moment you think about
 

00:20:12.930 --> 00:20:14.870 align:start position:0%
do that so the moment you think about
using<00:20:13.080><c> for</c><00:20:13.350><c> each</c><00:20:13.470><c> stop</c><00:20:14.010><c> and</c><00:20:14.280><c> kind</c><00:20:14.550><c> of</c><00:20:14.640><c> think</c>

00:20:14.870 --> 00:20:14.880 align:start position:0%
using for each stop and kind of think
 

00:20:14.880 --> 00:20:16.580 align:start position:0%
using for each stop and kind of think
about<00:20:14.910><c> it</c><00:20:15.060><c> very</c><00:20:15.300><c> carefully</c><00:20:15.480><c> to</c><00:20:16.320><c> decide</c>

00:20:16.580 --> 00:20:16.590 align:start position:0%
about it very carefully to decide
 

00:20:16.590 --> 00:20:17.680 align:start position:0%
about it very carefully to decide
whether<00:20:16.770><c> that</c><00:20:16.830><c> actually</c><00:20:17.010><c> makes</c><00:20:17.280><c> sense</c>

00:20:17.680 --> 00:20:17.690 align:start position:0%
whether that actually makes sense
 

00:20:17.690 --> 00:20:25.040 align:start position:0%
whether that actually makes sense
okay<00:20:18.690><c> so</c><00:20:22.190><c> right</c><00:20:23.220><c> mixing</c><00:20:24.180><c> internal</c><00:20:24.840><c> and</c>

00:20:25.040 --> 00:20:25.050 align:start position:0%
okay so right mixing internal and
 

00:20:25.050 --> 00:20:27.530 align:start position:0%
okay so right mixing internal and
external<00:20:25.140><c> iteration</c><00:20:26.100><c> so</c><00:20:26.700><c> again</c><00:20:27.060><c> you</c><00:20:27.270><c> see</c><00:20:27.420><c> this</c>

00:20:27.530 --> 00:20:27.540 align:start position:0%
external iteration so again you see this
 

00:20:27.540 --> 00:20:29.150 align:start position:0%
external iteration so again you see this
is<00:20:27.690><c> the</c><00:20:27.780><c> problem</c><00:20:27.870><c> being</c><00:20:28.320><c> a</c><00:20:28.440><c> Java</c><00:20:28.650><c> programmer</c>

00:20:29.150 --> 00:20:29.160 align:start position:0%
is the problem being a Java programmer
 

00:20:29.160 --> 00:20:31.820 align:start position:0%
is the problem being a Java programmer
and<00:20:29.400><c> not</c><00:20:29.490><c> a</c><00:20:29.520><c> functional</c><00:20:29.970><c> programmer</c><00:20:30.590><c> so</c><00:20:31.590><c> here</c>

00:20:31.820 --> 00:20:31.830 align:start position:0%
and not a functional programmer so here
 

00:20:31.830 --> 00:20:34.430 align:start position:0%
and not a functional programmer so here
is<00:20:31.920><c> the</c><00:20:32.070><c> the</c><00:20:32.520><c> back</c><00:20:32.730><c> so</c><00:20:33.660><c> what</c><00:20:33.930><c> I</c><00:20:33.960><c> wanted</c><00:20:34.230><c> to</c><00:20:34.320><c> do</c>

00:20:34.430 --> 00:20:34.440 align:start position:0%
is the the back so what I wanted to do
 

00:20:34.440 --> 00:20:36.680 align:start position:0%
is the the back so what I wanted to do
was<00:20:34.590><c> I</c><00:20:34.620><c> had</c><00:20:34.770><c> a</c><00:20:34.980><c> set</c><00:20:35.190><c> of</c><00:20:35.310><c> data</c><00:20:35.460><c> which</c><00:20:36.330><c> was</c><00:20:36.630><c> a</c>

00:20:36.680 --> 00:20:36.690 align:start position:0%
was I had a set of data which was a
 

00:20:36.690 --> 00:20:38.660 align:start position:0%
was I had a set of data which was a
number<00:20:37.170><c> of</c><00:20:37.260><c> values</c><00:20:37.620><c> for</c><00:20:38.010><c> each</c><00:20:38.190><c> day</c><00:20:38.460><c> of</c><00:20:38.490><c> the</c>

00:20:38.660 --> 00:20:38.670 align:start position:0%
number of values for each day of the
 

00:20:38.670 --> 00:20:40.400 align:start position:0%
number of values for each day of the
year<00:20:38.700><c> and</c><00:20:39.060><c> what</c><00:20:39.540><c> I</c><00:20:39.570><c> wanted</c><00:20:39.870><c> to</c><00:20:39.990><c> do</c><00:20:40.110><c> was</c><00:20:40.260><c> to</c>

00:20:40.400 --> 00:20:40.410 align:start position:0%
year and what I wanted to do was to
 

00:20:40.410 --> 00:20:43.130 align:start position:0%
year and what I wanted to do was to
group<00:20:40.650><c> them</c><00:20:40.950><c> into</c><00:20:41.220><c> months</c><00:20:42.150><c> so</c><00:20:42.810><c> that</c><00:20:42.840><c> I</c><00:20:42.960><c> could</c>

00:20:43.130 --> 00:20:43.140 align:start position:0%
group them into months so that I could
 

00:20:43.140 --> 00:20:44.930 align:start position:0%
group them into months so that I could
build<00:20:43.260><c> a</c><00:20:43.380><c> graph</c><00:20:43.620><c> of</c><00:20:43.770><c> each</c><00:20:43.920><c> month</c><00:20:44.250><c> and</c><00:20:44.550><c> then</c>

00:20:44.930 --> 00:20:44.940 align:start position:0%
build a graph of each month and then
 

00:20:44.940 --> 00:20:46.970 align:start position:0%
build a graph of each month and then
have<00:20:45.090><c> a</c><00:20:45.120><c> bar</c><00:20:45.390><c> associated</c><00:20:46.290><c> with</c><00:20:46.380><c> each</c><00:20:46.500><c> day</c><00:20:46.770><c> so</c><00:20:46.830><c> I</c>

00:20:46.970 --> 00:20:46.980 align:start position:0%
have a bar associated with each day so I
 

00:20:46.980 --> 00:20:48.350 align:start position:0%
have a bar associated with each day so I
could<00:20:47.070><c> see</c><00:20:47.280><c> how</c><00:20:47.400><c> much</c><00:20:47.520><c> data</c><00:20:47.760><c> there</c><00:20:47.970><c> was</c><00:20:48.150><c> for</c>

00:20:48.350 --> 00:20:48.360 align:start position:0%
could see how much data there was for
 

00:20:48.360 --> 00:20:50.600 align:start position:0%
could see how much data there was for
that<00:20:48.450><c> particular</c><00:20:48.720><c> day</c><00:20:49.140><c> so</c><00:20:49.410><c> I</c><00:20:50.010><c> went</c><00:20:50.220><c> I</c><00:20:50.310><c> needed</c>

00:20:50.600 --> 00:20:50.610 align:start position:0%
that particular day so I went I needed
 

00:20:50.610 --> 00:20:51.980 align:start position:0%
that particular day so I went I needed
some<00:20:50.730><c> we're</c><00:20:50.880><c> grouping</c><00:20:51.300><c> them</c><00:20:51.420><c> by</c><00:20:51.450><c> month</c><00:20:51.780><c> and</c>

00:20:51.980 --> 00:20:51.990 align:start position:0%
some we're grouping them by month and
 

00:20:51.990 --> 00:20:52.370 align:start position:0%
some we're grouping them by month and
then

00:20:52.370 --> 00:20:52.380 align:start position:0%
then
 

00:20:52.380 --> 00:20:55.450 align:start position:0%
then
having<00:20:52.530><c> values</c><00:20:52.890><c> for</c><00:20:53.580><c> each</c><00:20:53.730><c> day</c><00:20:54.000><c> in</c><00:20:54.240><c> that</c><00:20:54.480><c> month</c>

00:20:55.450 --> 00:20:55.460 align:start position:0%
having values for each day in that month
 

00:20:55.460 --> 00:20:57.890 align:start position:0%
having values for each day in that month
so<00:20:56.460><c> I</c><00:20:56.490><c> started</c><00:20:56.790><c> off</c><00:20:56.910><c> with</c><00:20:57.180><c> a</c><00:20:57.240><c> very</c><00:20:57.570><c> simple</c>

00:20:57.890 --> 00:20:57.900 align:start position:0%
so I started off with a very simple
 

00:20:57.900 --> 00:20:59.420 align:start position:0%
so I started off with a very simple
piece<00:20:58.260><c> of</c><00:20:58.290><c> code</c><00:20:58.380><c> where</c><00:20:58.650><c> I</c><00:20:58.680><c> said</c><00:20:58.860><c> for</c><00:20:59.100><c> int</c><00:20:59.340><c> I</c>

00:20:59.420 --> 00:20:59.430 align:start position:0%
piece of code where I said for int I
 

00:20:59.430 --> 00:21:02.870 align:start position:0%
piece of code where I said for int I
equals<00:20:59.850><c> 0</c><00:21:00.450><c> I</c><00:21:00.780><c> less</c><00:21:00.900><c> than</c><00:21:01.110><c> 12</c><00:21:01.440><c> I</c><00:21:01.560><c> plus</c><00:21:01.800><c> plus</c><00:21:01.880><c> good</c>

00:21:02.870 --> 00:21:02.880 align:start position:0%
equals 0 I less than 12 I plus plus good
 

00:21:02.880 --> 00:21:05.720 align:start position:0%
equals 0 I less than 12 I plus plus good
Java<00:21:03.090><c> code</c><00:21:03.440><c> simple</c><00:21:04.440><c> loop</c><00:21:04.560><c> and</c><00:21:05.250><c> then</c><00:21:05.520><c> I</c><00:21:05.580><c> thought</c>

00:21:05.720 --> 00:21:05.730 align:start position:0%
Java code simple loop and then I thought
 

00:21:05.730 --> 00:21:07.670 align:start position:0%
Java code simple loop and then I thought
right<00:21:05.940><c> so</c><00:21:06.330><c> I've</c><00:21:06.420><c> got</c><00:21:06.450><c> a</c><00:21:06.570><c> loop</c><00:21:06.750><c> I'm</c><00:21:07.230><c> going</c><00:21:07.290><c> to</c>

00:21:07.670 --> 00:21:07.680 align:start position:0%
right so I've got a loop I'm going to
 

00:21:07.680 --> 00:21:09.980 align:start position:0%
right so I've got a loop I'm going to
use<00:21:07.830><c> a</c><00:21:07.860><c> stream</c><00:21:08.220><c> so</c><00:21:08.940><c> I</c><00:21:08.970><c> put</c><00:21:09.210><c> a</c><00:21:09.240><c> stream</c><00:21:09.570><c> inside</c><00:21:09.810><c> my</c>

00:21:09.980 --> 00:21:09.990 align:start position:0%
use a stream so I put a stream inside my
 

00:21:09.990 --> 00:21:11.870 align:start position:0%
use a stream so I put a stream inside my
loop<00:21:10.200><c> and</c><00:21:10.740><c> I'll</c><00:21:10.890><c> say</c><00:21:11.100><c> the</c><00:21:11.220><c> days</c><00:21:11.460><c> of</c><00:21:11.490><c> the</c><00:21:11.700><c> month</c>

00:21:11.870 --> 00:21:11.880 align:start position:0%
loop and I'll say the days of the month
 

00:21:11.880 --> 00:21:14.900 align:start position:0%
loop and I'll say the days of the month
for<00:21:12.510><c> that</c><00:21:12.690><c> month</c><00:21:12.990><c> is</c><00:21:13.320><c> the</c><00:21:14.250><c> data</c><00:21:14.460><c> that</c><00:21:14.610><c> I've</c><00:21:14.730><c> got</c>

00:21:14.900 --> 00:21:14.910 align:start position:0%
for that month is the data that I've got
 

00:21:14.910 --> 00:21:16.910 align:start position:0%
for that month is the data that I've got
our<00:21:15.180><c> critter</c><00:21:15.480><c> stream</c><00:21:15.900><c> I</c><00:21:16.230><c> mean</c><00:21:16.710><c> I've</c><00:21:16.770><c> got</c><00:21:16.890><c> a</c>

00:21:16.910 --> 00:21:16.920 align:start position:0%
our critter stream I mean I've got a
 

00:21:16.920 --> 00:21:19.430 align:start position:0%
our critter stream I mean I've got a
filter<00:21:17.280><c> it</c><00:21:17.370><c> so</c><00:21:18.180><c> that</c><00:21:18.420><c> I</c><00:21:18.450><c> say</c><00:21:18.750><c> get</c><00:21:18.990><c> the</c><00:21:19.080><c> month</c>

00:21:19.430 --> 00:21:19.440 align:start position:0%
filter it so that I say get the month
 

00:21:19.440 --> 00:21:21.980 align:start position:0%
filter it so that I say get the month
and<00:21:20.150><c> check</c><00:21:21.150><c> to</c><00:21:21.240><c> see</c><00:21:21.300><c> if</c><00:21:21.390><c> that</c><00:21:21.570><c> compares</c>

00:21:21.980 --> 00:21:21.990 align:start position:0%
and check to see if that compares
 

00:21:21.990 --> 00:21:24.980 align:start position:0%
and check to see if that compares
against<00:21:22.260><c> then</c><00:21:22.620><c> of</c><00:21:22.740><c> course</c><00:21:22.950><c> in</c><00:21:23.670><c> that</c><00:21:23.790><c> case</c><00:21:24.480><c> you</c>

00:21:24.980 --> 00:21:24.990 align:start position:0%
against then of course in that case you
 

00:21:24.990 --> 00:21:26.960 align:start position:0%
against then of course in that case you
know<00:21:25.080><c> it's</c><00:21:25.200><c> starting</c><00:21:26.190><c> from</c><00:21:26.280><c> 0</c><00:21:26.580><c> versus</c>

00:21:26.960 --> 00:21:26.970 align:start position:0%
know it's starting from 0 versus
 

00:21:26.970 --> 00:21:29.960 align:start position:0%
know it's starting from 0 versus
starting<00:21:27.180><c> from</c><00:21:27.450><c> 1</c><00:21:27.720><c> so</c><00:21:28.410><c> we</c><00:21:28.650><c> have</c><00:21:28.800><c> to</c><00:21:28.980><c> add</c><00:21:29.220><c> 1</c><00:21:29.670><c> to</c><00:21:29.880><c> I</c>

00:21:29.960 --> 00:21:29.970 align:start position:0%
starting from 1 so we have to add 1 to I
 

00:21:29.970 --> 00:21:31.760 align:start position:0%
starting from 1 so we have to add 1 to I
in<00:21:30.510><c> order</c><00:21:30.720><c> to</c><00:21:30.840><c> get</c><00:21:31.050><c> the</c><00:21:31.170><c> appropriate</c><00:21:31.380><c> month</c>

00:21:31.760 --> 00:21:31.770 align:start position:0%
in order to get the appropriate month
 

00:21:31.770 --> 00:21:33.110 align:start position:0%
in order to get the appropriate month
number<00:21:32.160><c> this</c><00:21:32.250><c> is</c><00:21:32.310><c> where</c><00:21:32.580><c> things</c><00:21:32.790><c> get</c><00:21:33.000><c> a</c><00:21:33.060><c> little</c>

00:21:33.110 --> 00:21:33.120 align:start position:0%
number this is where things get a little
 

00:21:33.120 --> 00:21:34.880 align:start position:0%
number this is where things get a little
bit<00:21:33.270><c> complicated</c><00:21:33.540><c> so</c><00:21:33.960><c> we</c><00:21:34.350><c> check</c><00:21:34.560><c> to</c><00:21:34.650><c> see</c><00:21:34.740><c> where</c>

00:21:34.880 --> 00:21:34.890 align:start position:0%
bit complicated so we check to see where
 

00:21:34.890 --> 00:21:36.890 align:start position:0%
bit complicated so we check to see where
it's<00:21:35.100><c> the</c><00:21:35.190><c> right</c><00:21:35.370><c> month</c><00:21:35.610><c> and</c><00:21:35.850><c> then</c><00:21:36.360><c> we</c><00:21:36.750><c> say</c>

00:21:36.890 --> 00:21:36.900 align:start position:0%
it's the right month and then we say
 

00:21:36.900 --> 00:21:38.630 align:start position:0%
it's the right month and then we say
filter<00:21:37.200><c> that</c><00:21:37.350><c> to</c><00:21:37.500><c> only</c><00:21:37.710><c> get</c><00:21:37.890><c> the</c><00:21:38.100><c> data</c><00:21:38.310><c> for</c>

00:21:38.630 --> 00:21:38.640 align:start position:0%
filter that to only get the data for
 

00:21:38.640 --> 00:21:41.480 align:start position:0%
filter that to only get the data for
that<00:21:38.670><c> month</c><00:21:39.120><c> and</c><00:21:39.450><c> then</c><00:21:39.900><c> we</c><00:21:39.990><c> collect</c><00:21:40.200><c> it</c><00:21:40.560><c> using</c>

00:21:41.480 --> 00:21:41.490 align:start position:0%
that month and then we collect it using
 

00:21:41.490 --> 00:21:43.190 align:start position:0%
that month and then we collect it using
a<00:21:41.550><c> grouping</c><00:21:41.880><c> by</c><00:21:42.090><c> where</c><00:21:42.720><c> we're</c><00:21:42.870><c> getting</c><00:21:43.080><c> the</c>

00:21:43.190 --> 00:21:43.200 align:start position:0%
a grouping by where we're getting the
 

00:21:43.200 --> 00:21:44.990 align:start position:0%
a grouping by where we're getting the
day<00:21:43.440><c> of</c><00:21:43.560><c> the</c><00:21:43.650><c> month</c><00:21:43.860><c> and</c><00:21:44.190><c> then</c><00:21:44.550><c> the</c><00:21:44.610><c> count</c>

00:21:44.990 --> 00:21:45.000 align:start position:0%
day of the month and then the count
 

00:21:45.000 --> 00:21:47.300 align:start position:0%
day of the month and then the count
associated<00:21:45.810><c> with</c><00:21:45.990><c> that</c><00:21:46.170><c> day</c><00:21:46.350><c> of</c><00:21:46.470><c> the</c><00:21:46.500><c> month</c><00:21:46.740><c> so</c>

00:21:47.300 --> 00:21:47.310 align:start position:0%
associated with that day of the month so
 

00:21:47.310 --> 00:21:49.370 align:start position:0%
associated with that day of the month so
that<00:21:47.400><c> generates</c><00:21:48.060><c> what</c><00:21:48.450><c> we</c><00:21:48.570><c> need</c><00:21:48.750><c> in</c><00:21:48.960><c> terms</c><00:21:49.140><c> of</c>

00:21:49.370 --> 00:21:49.380 align:start position:0%
that generates what we need in terms of
 

00:21:49.380 --> 00:21:52.610 align:start position:0%
that generates what we need in terms of
the<00:21:49.560><c> the</c><00:21:49.950><c> map</c><00:21:50.130><c> that</c><00:21:50.610><c> we're</c><00:21:50.760><c> creating</c><00:21:51.320><c> now</c><00:21:52.320><c> if</c>

00:21:52.610 --> 00:21:52.620 align:start position:0%
the the map that we're creating now if
 

00:21:52.620 --> 00:21:55.100 align:start position:0%
the the map that we're creating now if
you<00:21:52.950><c> look</c><00:21:53.070><c> at</c><00:21:53.160><c> that</c><00:21:53.340><c> ok</c><00:21:53.940><c> so</c><00:21:54.000><c> that's</c><00:21:54.450><c> a</c><00:21:54.840><c> little</c>

00:21:55.100 --> 00:21:55.110 align:start position:0%
you look at that ok so that's a little
 

00:21:55.110 --> 00:21:57.140 align:start position:0%
you look at that ok so that's a little
bit<00:21:55.440><c> odd</c><00:21:55.590><c> but</c><00:21:55.950><c> it</c><00:21:56.160><c> sort</c><00:21:56.640><c> of</c><00:21:56.700><c> you</c><00:21:56.910><c> think</c><00:21:57.120><c> to</c>

00:21:57.140 --> 00:21:57.150 align:start position:0%
bit odd but it sort of you think to
 

00:21:57.150 --> 00:21:58.910 align:start position:0%
bit odd but it sort of you think to
yourself<00:21:57.240><c> ok</c><00:21:57.600><c> would</c><00:21:57.900><c> that</c><00:21:58.080><c> work</c><00:21:58.350><c> and</c><00:21:58.740><c> the</c>

00:21:58.910 --> 00:21:58.920 align:start position:0%
yourself ok would that work and the
 

00:21:58.920 --> 00:22:01.040 align:start position:0%
yourself ok would that work and the
answer<00:21:59.130><c> is</c><00:21:59.220><c> no</c><00:21:59.460><c> it</c><00:21:59.550><c> won't</c><00:21:59.910><c> for</c><00:22:00.690><c> the</c><00:22:00.750><c> simple</c>

00:22:01.040 --> 00:22:01.050 align:start position:0%
answer is no it won't for the simple
 

00:22:01.050 --> 00:22:04.160 align:start position:0%
answer is no it won't for the simple
reason<00:22:01.080><c> that</c><00:22:01.470><c> we're</c><00:22:01.830><c> using</c><00:22:01.980><c> I</c><00:22:02.190><c> plus</c><00:22:02.790><c> 1</c><00:22:03.270><c> now</c>

00:22:04.160 --> 00:22:04.170 align:start position:0%
reason that we're using I plus 1 now
 

00:22:04.170 --> 00:22:05.420 align:start position:0%
reason that we're using I plus 1 now
because<00:22:04.410><c> we're</c><00:22:04.530><c> in</c><00:22:04.560><c> a</c><00:22:04.650><c> stream</c><00:22:05.010><c> we're</c><00:22:05.190><c> using</c><00:22:05.310><c> a</c>

00:22:05.420 --> 00:22:05.430 align:start position:0%
because we're in a stream we're using a
 

00:22:05.430 --> 00:22:07.430 align:start position:0%
because we're in a stream we're using a
lambda<00:22:05.610><c> expression</c><00:22:05.810><c> and</c><00:22:06.810><c> our</c><00:22:06.930><c> expressions</c>

00:22:07.430 --> 00:22:07.440 align:start position:0%
lambda expression and our expressions
 

00:22:07.440 --> 00:22:10.610 align:start position:0%
lambda expression and our expressions
can<00:22:07.680><c> only</c><00:22:08.090><c> reference</c><00:22:09.090><c> variables</c><00:22:09.840><c> from</c><00:22:10.140><c> the</c>

00:22:10.610 --> 00:22:10.620 align:start position:0%
can only reference variables from the
 

00:22:10.620 --> 00:22:12.110 align:start position:0%
can only reference variables from the
surrounding<00:22:11.250><c> scope</c><00:22:11.520><c> if</c><00:22:11.730><c> they</c><00:22:11.970><c> are</c>

00:22:12.110 --> 00:22:12.120 align:start position:0%
surrounding scope if they are
 

00:22:12.120 --> 00:22:14.300 align:start position:0%
surrounding scope if they are
effectively<00:22:12.660><c> final</c><00:22:13.200><c> now</c><00:22:13.890><c> because</c><00:22:14.130><c> we're</c>

00:22:14.300 --> 00:22:14.310 align:start position:0%
effectively final now because we're
 

00:22:14.310 --> 00:22:16.850 align:start position:0%
effectively final now because we're
adding<00:22:14.520><c> 1</c><00:22:14.880><c> to</c><00:22:15.150><c> I</c><00:22:15.180><c> it</c><00:22:15.990><c> is</c><00:22:16.140><c> not</c><00:22:16.170><c> effectively</c>

00:22:16.850 --> 00:22:16.860 align:start position:0%
adding 1 to I it is not effectively
 

00:22:16.860 --> 00:22:19.640 align:start position:0%
adding 1 to I it is not effectively
final<00:22:17.220><c> and</c><00:22:17.340><c> also</c><00:22:17.730><c> because</c><00:22:18.030><c> I</c><00:22:18.270><c> is</c><00:22:18.510><c> changing</c><00:22:19.500><c> I</c>

00:22:19.640 --> 00:22:19.650 align:start position:0%
final and also because I is changing I
 

00:22:19.650 --> 00:22:22.220 align:start position:0%
final and also because I is changing I
is<00:22:20.040><c> not</c><00:22:20.370><c> effectively</c><00:22:20.850><c> final</c><00:22:21.180><c> so</c><00:22:21.660><c> we</c><00:22:21.750><c> can't</c><00:22:21.960><c> do</c>

00:22:22.220 --> 00:22:22.230 align:start position:0%
is not effectively final so we can't do
 

00:22:22.230 --> 00:22:24.500 align:start position:0%
is not effectively final so we can't do
that<00:22:22.410><c> so</c><00:22:23.190><c> I</c><00:22:23.520><c> looked</c><00:22:24.000><c> at</c><00:22:24.120><c> that</c><00:22:24.180><c> and</c><00:22:24.330><c> I</c><00:22:24.390><c> thought</c>

00:22:24.500 --> 00:22:24.510 align:start position:0%
that so I looked at that and I thought
 

00:22:24.510 --> 00:22:26.210 align:start position:0%
that so I looked at that and I thought
to<00:22:24.630><c> myself</c><00:22:24.750><c> hmmm</c><00:22:25.320><c> how</c><00:22:25.500><c> can</c><00:22:25.680><c> we</c><00:22:25.800><c> solve</c><00:22:26.070><c> this</c>

00:22:26.210 --> 00:22:26.220 align:start position:0%
to myself hmmm how can we solve this
 

00:22:26.220 --> 00:22:28.760 align:start position:0%
to myself hmmm how can we solve this
problem<00:22:26.370><c> I</c><00:22:26.850><c> know</c><00:22:27.270><c> I'll</c><00:22:27.630><c> add</c><00:22:27.960><c> one</c><00:22:28.230><c> more</c><00:22:28.410><c> line</c><00:22:28.650><c> of</c>

00:22:28.760 --> 00:22:28.770 align:start position:0%
problem I know I'll add one more line of
 

00:22:28.770 --> 00:22:32.240 align:start position:0%
problem I know I'll add one more line of
code<00:22:29.040><c> I</c><00:22:29.390><c> will</c><00:22:30.390><c> set</c><00:22:30.840><c> a</c><00:22:31.050><c> new</c><00:22:31.110><c> variable</c><00:22:31.470><c> called</c><00:22:31.770><c> I</c>

00:22:32.240 --> 00:22:32.250 align:start position:0%
code I will set a new variable called I
 

00:22:32.250 --> 00:22:34.250 align:start position:0%
code I will set a new variable called I
and<00:22:32.520><c> then</c><00:22:33.090><c> I'll</c><00:22:33.180><c> change</c><00:22:33.390><c> the</c><00:22:33.570><c> the</c><00:22:33.840><c> loop</c>

00:22:34.250 --> 00:22:34.260 align:start position:0%
and then I'll change the the loop
 

00:22:34.260 --> 00:22:37.880 align:start position:0%
and then I'll change the the loop
variable<00:22:34.290><c> name</c><00:22:34.920><c> and</c><00:22:35.250><c> I'll</c><00:22:36.180><c> set</c><00:22:36.540><c> I</c><00:22:36.750><c> to</c><00:22:36.960><c> BM</c><00:22:37.440><c> so</c>

00:22:37.880 --> 00:22:37.890 align:start position:0%
variable name and I'll set I to BM so
 

00:22:37.890 --> 00:22:40.760 align:start position:0%
variable name and I'll set I to BM so
then<00:22:38.070><c> I</c><00:22:38.250><c> is</c><00:22:38.780><c> effectively</c><00:22:39.780><c> final</c><00:22:40.200><c> and</c><00:22:40.530><c> I</c><00:22:40.620><c> can</c>

00:22:40.760 --> 00:22:40.770 align:start position:0%
then I is effectively final and I can
 

00:22:40.770 --> 00:22:42.830 align:start position:0%
then I is effectively final and I can
get<00:22:40.890><c> away</c><00:22:41.010><c> with</c><00:22:41.280><c> that</c><00:22:41.430><c> you</c><00:22:42.270><c> can</c><00:22:42.420><c> notice</c><00:22:42.690><c> that</c>

00:22:42.830 --> 00:22:42.840 align:start position:0%
get away with that you can notice that
 

00:22:42.840 --> 00:22:44.150 align:start position:0%
get away with that you can notice that
you<00:22:42.960><c> know</c><00:22:43.050><c> I'm</c><00:22:43.230><c> not</c><00:22:43.410><c> really</c><00:22:43.650><c> a</c><00:22:43.800><c> functional</c>

00:22:44.150 --> 00:22:44.160 align:start position:0%
you know I'm not really a functional
 

00:22:44.160 --> 00:22:47.000 align:start position:0%
you know I'm not really a functional
programmer<00:22:44.580><c> here</c><00:22:45.020><c> so</c><00:22:46.020><c> clearly</c><00:22:46.530><c> at</c><00:22:46.650><c> this</c><00:22:46.740><c> point</c>

00:22:47.000 --> 00:22:47.010 align:start position:0%
programmer here so clearly at this point
 

00:22:47.010 --> 00:22:49.610 align:start position:0%
programmer here so clearly at this point
I<00:22:47.190><c> is</c><00:22:47.730><c> now</c><00:22:48.060><c> effectively</c><00:22:48.480><c> final</c><00:22:48.960><c> and</c><00:22:49.200><c> we</c><00:22:49.500><c> can</c>

00:22:49.610 --> 00:22:49.620 align:start position:0%
I is now effectively final and we can
 

00:22:49.620 --> 00:22:52.040 align:start position:0%
I is now effectively final and we can
actually<00:22:49.890><c> get</c><00:22:50.010><c> away</c><00:22:50.100><c> with</c><00:22:50.400><c> adding</c><00:22:51.360><c> 1</c><00:22:51.540><c> to</c><00:22:51.840><c> that</c>

00:22:52.040 --> 00:22:52.050 align:start position:0%
actually get away with adding 1 to that
 

00:22:52.050 --> 00:22:57.710 align:start position:0%
actually get away with adding 1 to that
in<00:22:52.440><c> that</c><00:22:52.560><c> case</c><00:22:54.020><c> so</c><00:22:55.020><c> ok</c><00:22:55.860><c> that's</c><00:22:56.670><c> really</c><00:22:57.390><c> not</c><00:22:57.480><c> the</c>

00:22:57.710 --> 00:22:57.720 align:start position:0%
in that case so ok that's really not the
 

00:22:57.720 --> 00:22:59.360 align:start position:0%
in that case so ok that's really not the
right<00:22:57.750><c> way</c><00:22:57.990><c> to</c><00:22:58.050><c> do</c><00:22:58.260><c> it</c><00:22:58.380><c> so</c><00:22:58.590><c> what</c><00:22:58.980><c> we</c><00:22:59.100><c> should</c><00:22:59.160><c> be</c>

00:22:59.360 --> 00:22:59.370 align:start position:0%
right way to do it so what we should be
 

00:22:59.370 --> 00:23:03.410 align:start position:0%
right way to do it so what we should be
doing<00:22:59.520><c> is</c><00:23:00.080><c> using</c><00:23:01.400><c> internal</c><00:23:02.400><c> iteration</c><00:23:02.910><c> for</c>

00:23:03.410 --> 00:23:03.420 align:start position:0%
doing is using internal iteration for
 

00:23:03.420 --> 00:23:05.480 align:start position:0%
doing is using internal iteration for
both<00:23:03.600><c> the</c><00:23:04.230><c> the</c><00:23:04.590><c> weight</c><00:23:04.770><c> what</c><00:23:04.950><c> both</c><00:23:05.250><c> of</c><00:23:05.280><c> the</c>

00:23:05.480 --> 00:23:05.490 align:start position:0%
both the the weight what both of the
 

00:23:05.490 --> 00:23:06.440 align:start position:0%
both the the weight what both of the
loops<00:23:06.000><c> that</c><00:23:06.180><c> we</c>

00:23:06.440 --> 00:23:06.450 align:start position:0%
loops that we
 

00:23:06.450 --> 00:23:09.920 align:start position:0%
loops that we
doing<00:23:06.630><c> here</c><00:23:08.120><c> so</c><00:23:09.120><c> why</c><00:23:09.240><c> don't</c><00:23:09.360><c> we</c><00:23:09.390><c> use</c><00:23:09.570><c> streams</c>

00:23:09.920 --> 00:23:09.930 align:start position:0%
doing here so why don't we use streams
 

00:23:09.930 --> 00:23:13.310 align:start position:0%
doing here so why don't we use streams
for<00:23:10.470><c> iteration</c><00:23:10.980><c> and</c><00:23:11.750><c> so</c><00:23:12.750><c> what</c><00:23:12.870><c> I</c><00:23:12.900><c> could</c><00:23:13.020><c> do</c><00:23:13.200><c> is</c>

00:23:13.310 --> 00:23:13.320 align:start position:0%
for iteration and so what I could do is
 

00:23:13.320 --> 00:23:14.000 align:start position:0%
for iteration and so what I could do is
I<00:23:13.410><c> could</c><00:23:13.470><c> do</c><00:23:13.680><c> okay</c>

00:23:14.000 --> 00:23:14.010 align:start position:0%
I could do okay
 

00:23:14.010 --> 00:23:16.550 align:start position:0%
I could do okay
let's<00:23:14.430><c> create</c><00:23:14.730><c> a</c><00:23:15.030><c> stream</c><00:23:15.660><c> from</c><00:23:15.960><c> int</c><00:23:16.230><c> stream</c>

00:23:16.550 --> 00:23:16.560 align:start position:0%
let's create a stream from int stream
 

00:23:16.560 --> 00:23:19.550 align:start position:0%
let's create a stream from int stream
where<00:23:17.520><c> we're</c><00:23:17.760><c> going</c><00:23:17.910><c> from</c><00:23:18.090><c> 0</c><00:23:18.360><c> to</c><00:23:18.420><c> 12</c><00:23:18.750><c> so</c><00:23:19.470><c> that</c>

00:23:19.550 --> 00:23:19.560 align:start position:0%
where we're going from 0 to 12 so that
 

00:23:19.560 --> 00:23:21.440 align:start position:0%
where we're going from 0 to 12 so that
gives<00:23:19.740><c> us</c><00:23:19.860><c> a</c><00:23:19.950><c> stream</c><00:23:20.280><c> in</c><00:23:20.700><c> the</c><00:23:21.000><c> same</c><00:23:21.150><c> way</c><00:23:21.300><c> that</c>

00:23:21.440 --> 00:23:21.450 align:start position:0%
gives us a stream in the same way that
 

00:23:21.450 --> 00:23:23.690 align:start position:0%
gives us a stream in the same way that
we<00:23:21.540><c> have</c><00:23:21.690><c> our</c><00:23:21.870><c> loop</c><00:23:22.380><c> that</c><00:23:22.620><c> goes</c><00:23:22.650><c> from</c><00:23:22.890><c> 0</c><00:23:23.370><c> to</c><00:23:23.460><c> 12</c>

00:23:23.690 --> 00:23:23.700 align:start position:0%
we have our loop that goes from 0 to 12
 

00:23:23.700 --> 00:23:26.330 align:start position:0%
we have our loop that goes from 0 to 12
will<00:23:24.300><c> create</c><00:23:24.510><c> a</c><00:23:24.720><c> stream</c><00:23:25.050><c> of</c><00:23:25.230><c> intz</c><00:23:25.560><c> which</c><00:23:26.160><c> goes</c>

00:23:26.330 --> 00:23:26.340 align:start position:0%
will create a stream of intz which goes
 

00:23:26.340 --> 00:23:27.950 align:start position:0%
will create a stream of intz which goes
from<00:23:26.490><c> 0</c><00:23:26.700><c> to</c><00:23:26.790><c> 12</c><00:23:26.970><c> and</c><00:23:27.150><c> then</c><00:23:27.270><c> we'll</c><00:23:27.390><c> use</c><00:23:27.540><c> for</c><00:23:27.840><c> each</c>

00:23:27.950 --> 00:23:27.960 align:start position:0%
from 0 to 12 and then we'll use for each
 

00:23:27.960 --> 00:23:28.940 align:start position:0%
from 0 to 12 and then we'll use for each
aha

00:23:28.940 --> 00:23:28.950 align:start position:0%
aha
 

00:23:28.950 --> 00:23:30.140 align:start position:0%
aha
are<00:23:29.070><c> we</c><00:23:29.190><c> using</c><00:23:29.370><c> the</c><00:23:29.580><c> right</c><00:23:29.730><c> thing</c><00:23:29.940><c> here</c>

00:23:30.140 --> 00:23:30.150 align:start position:0%
are we using the right thing here
 

00:23:30.150 --> 00:23:31.360 align:start position:0%
are we using the right thing here
immediately<00:23:30.540><c> we</c><00:23:30.690><c> have</c><00:23:30.810><c> to</c><00:23:30.930><c> ask</c><00:23:31.020><c> ourselves</c>

00:23:31.360 --> 00:23:31.370 align:start position:0%
immediately we have to ask ourselves
 

00:23:31.370 --> 00:23:35.030 align:start position:0%
immediately we have to ask ourselves
probably<00:23:32.370><c> not</c><00:23:32.630><c> and</c><00:23:33.630><c> then</c><00:23:34.380><c> what</c><00:23:34.680><c> we</c><00:23:34.770><c> do</c><00:23:34.860><c> is</c><00:23:34.950><c> we</c>

00:23:35.030 --> 00:23:35.040 align:start position:0%
probably not and then what we do is we
 

00:23:35.040 --> 00:23:38.090 align:start position:0%
probably not and then what we do is we
say<00:23:35.160><c> okay</c><00:23:35.190><c> take</c><00:23:35.550><c> I</c><00:23:35.730><c> and</c><00:23:36.060><c> then</c><00:23:36.690><c> we'll</c><00:23:36.960><c> say</c><00:23:37.440><c> days</c>

00:23:38.090 --> 00:23:38.100 align:start position:0%
say okay take I and then we'll say days
 

00:23:38.100 --> 00:23:40.640 align:start position:0%
say okay take I and then we'll say days
a<00:23:38.130><c> month</c><00:23:38.490><c> I</c><00:23:38.760><c> is</c><00:23:39.300><c> and</c><00:23:39.960><c> then</c><00:23:40.110><c> we</c><00:23:40.170><c> go</c><00:23:40.290><c> back</c><00:23:40.320><c> to</c><00:23:40.470><c> our</c>

00:23:40.640 --> 00:23:40.650 align:start position:0%
a month I is and then we go back to our
 

00:23:40.650 --> 00:23:42.500 align:start position:0%
a month I is and then we go back to our
stream<00:23:40.980><c> for</c><00:23:41.160><c> the</c><00:23:41.220><c> data</c><00:23:41.460><c> so</c><00:23:42.060><c> now</c><00:23:42.240><c> we're</c><00:23:42.360><c> looping</c>

00:23:42.500 --> 00:23:42.510 align:start position:0%
stream for the data so now we're looping
 

00:23:42.510 --> 00:23:44.840 align:start position:0%
stream for the data so now we're looping
through<00:23:42.780><c> the</c><00:23:42.930><c> data</c><00:23:43.140><c> internally</c><00:23:43.860><c> and</c><00:23:44.370><c> then</c><00:23:44.730><c> we</c>

00:23:44.840 --> 00:23:44.850 align:start position:0%
through the data internally and then we
 

00:23:44.850 --> 00:23:46.580 align:start position:0%
through the data internally and then we
do<00:23:44.940><c> the</c><00:23:45.030><c> same</c><00:23:45.150><c> thing</c><00:23:45.360><c> we</c><00:23:45.450><c> had</c><00:23:45.570><c> before</c><00:23:45.600><c> so</c><00:23:46.440><c> we</c>

00:23:46.580 --> 00:23:46.590 align:start position:0%
do the same thing we had before so we
 

00:23:46.590 --> 00:23:49.280 align:start position:0%
do the same thing we had before so we
have<00:23:46.740><c> filter</c><00:23:47.130><c> month</c><00:23:47.700><c> the</c><00:23:47.970><c> R</c><00:23:48.180><c> of</c><00:23:48.510><c> I</c><00:23:48.840><c> plus</c><00:23:49.050><c> 1</c>

00:23:49.280 --> 00:23:49.290 align:start position:0%
have filter month the R of I plus 1
 

00:23:49.290 --> 00:23:53.300 align:start position:0%
have filter month the R of I plus 1
collect<00:23:50.040><c> same</c><00:23:50.550><c> collector</c><00:23:51.380><c> so</c><00:23:52.380><c> in</c><00:23:52.590><c> this</c><00:23:52.710><c> case</c><00:23:52.980><c> I</c>

00:23:53.300 --> 00:23:53.310 align:start position:0%
collect same collector so in this case I
 

00:23:53.310 --> 00:23:55.790 align:start position:0%
collect same collector so in this case I
is<00:23:54.060><c> a</c><00:23:54.120><c> valid</c><00:23:54.450><c> reference</c><00:23:54.810><c> so</c><00:23:55.200><c> we</c><00:23:55.440><c> can</c><00:23:55.590><c> get</c><00:23:55.710><c> away</c>

00:23:55.790 --> 00:23:55.800 align:start position:0%
is a valid reference so we can get away
 

00:23:55.800 --> 00:23:58.570 align:start position:0%
is a valid reference so we can get away
with<00:23:56.040><c> that</c><00:23:56.190><c> so</c><00:23:57.030><c> this</c><00:23:57.180><c> gives</c><00:23:57.630><c> us</c><00:23:57.750><c> some</c><00:23:57.960><c> you</c><00:23:58.320><c> know</c>

00:23:58.570 --> 00:23:58.580 align:start position:0%
with that so this gives us some you know
 

00:23:58.580 --> 00:24:01.010 align:start position:0%
with that so this gives us some you know
we're<00:23:59.580><c> using</c><00:23:59.730><c> iterate</c><00:24:00.240><c> internal</c><00:24:00.630><c> iteration</c>

00:24:01.010 --> 00:24:01.020 align:start position:0%
we're using iterate internal iteration
 

00:24:01.020 --> 00:24:03.860 align:start position:0%
we're using iterate internal iteration
for<00:24:01.170><c> both</c><00:24:01.410><c> loops</c><00:24:01.980><c> but</c><00:24:02.640><c> it's</c><00:24:03.120><c> still</c><00:24:03.450><c> pretty</c>

00:24:03.860 --> 00:24:03.870 align:start position:0%
for both loops but it's still pretty
 

00:24:03.870 --> 00:24:06.650 align:start position:0%
for both loops but it's still pretty
ugly<00:24:04.170><c> code</c><00:24:04.800><c> so</c><00:24:05.700><c> do</c><00:24:06.150><c> you</c><00:24:06.210><c> want</c><00:24:06.330><c> to</c><00:24:06.390><c> meet</c><00:24:06.480><c> me</c><00:24:06.570><c> go</c>

00:24:06.650 --> 00:24:06.660 align:start position:0%
ugly code so do you want to meet me go
 

00:24:06.660 --> 00:24:10.150 align:start position:0%
ugly code so do you want to meet me go
all<00:24:07.080><c> the</c><00:24:07.170><c> way</c><00:24:07.200><c> through</c><00:24:07.350><c> to</c><00:24:07.470><c> the</c><00:24:07.560><c> end</c><00:24:07.680><c> and</c><00:24:07.890><c> then</c>

00:24:10.150 --> 00:24:10.160 align:start position:0%
 
 

00:24:10.160 --> 00:24:13.250 align:start position:0%
 
so<00:24:11.160><c> then</c><00:24:11.390><c> Stewart</c><00:24:12.390><c> had</c><00:24:12.750><c> to</c><00:24:12.810><c> look</c><00:24:12.930><c> at</c><00:24:13.020><c> this</c><00:24:13.140><c> and</c>

00:24:13.250 --> 00:24:13.260 align:start position:0%
so then Stewart had to look at this and
 

00:24:13.260 --> 00:24:14.660 align:start position:0%
so then Stewart had to look at this and
you<00:24:13.290><c> guys</c><00:24:13.440><c> mmm</c><00:24:13.800><c> okay</c><00:24:14.130><c> there's</c><00:24:14.370><c> there</c><00:24:14.580><c> some</c>

00:24:14.660 --> 00:24:14.670 align:start position:0%
you guys mmm okay there's there some
 

00:24:14.670 --> 00:24:16.040 align:start position:0%
you guys mmm okay there's there some
better<00:24:14.880><c> things</c><00:24:15.120><c> that</c><00:24:15.270><c> we</c><00:24:15.360><c> can</c><00:24:15.480><c> do</c><00:24:15.600><c> here</c><00:24:15.630><c> the</c>

00:24:16.040 --> 00:24:16.050 align:start position:0%
better things that we can do here the
 

00:24:16.050 --> 00:24:17.930 align:start position:0%
better things that we can do here the
first<00:24:16.320><c> of</c><00:24:16.410><c> those</c><00:24:16.530><c> is</c><00:24:16.590><c> to</c><00:24:16.800><c> eliminate</c><00:24:17.130><c> for</c><00:24:17.760><c> each</c>

00:24:17.930 --> 00:24:17.940 align:start position:0%
first of those is to eliminate for each
 

00:24:17.940 --> 00:24:20.180 align:start position:0%
first of those is to eliminate for each
so<00:24:18.660><c> this</c><00:24:18.870><c> is</c><00:24:18.930><c> the</c><00:24:19.170><c> thing</c><00:24:19.320><c> we</c><00:24:19.590><c> don't</c><00:24:19.770><c> want</c><00:24:20.010><c> to</c><00:24:20.100><c> be</c>

00:24:20.180 --> 00:24:20.190 align:start position:0%
so this is the thing we don't want to be
 

00:24:20.190 --> 00:24:21.670 align:start position:0%
so this is the thing we don't want to be
using<00:24:20.430><c> for</c><00:24:20.550><c> each</c><00:24:20.700><c> in</c><00:24:20.820><c> a</c><00:24:20.880><c> situation</c><00:24:21.330><c> like</c><00:24:21.360><c> this</c>

00:24:21.670 --> 00:24:21.680 align:start position:0%
using for each in a situation like this
 

00:24:21.680 --> 00:24:23.840 align:start position:0%
using for each in a situation like this
so<00:24:22.680><c> what</c><00:24:22.800><c> we</c><00:24:22.860><c> actually</c><00:24:22.950><c> do</c><00:24:23.220><c> is</c><00:24:23.340><c> we</c><00:24:23.370><c> say</c><00:24:23.610><c> okay</c>

00:24:23.840 --> 00:24:23.850 align:start position:0%
so what we actually do is we say okay
 

00:24:23.850 --> 00:24:25.670 align:start position:0%
so what we actually do is we say okay
we're<00:24:23.970><c> going</c><00:24:24.000><c> to</c><00:24:24.150><c> create</c><00:24:24.300><c> a</c><00:24:24.360><c> map</c><00:24:24.630><c> going</c><00:24:25.440><c> from</c>

00:24:25.670 --> 00:24:25.680 align:start position:0%
we're going to create a map going from
 

00:24:25.680 --> 00:24:28.640 align:start position:0%
we're going to create a map going from
month<00:24:25.920><c> to</c><00:24:26.070><c> a</c><00:24:26.370><c> map</c><00:24:26.730><c> of</c><00:24:26.970><c> integers</c><00:24:27.810><c> and</c><00:24:27.930><c> Long's</c><00:24:28.170><c> so</c>

00:24:28.640 --> 00:24:28.650 align:start position:0%
month to a map of integers and Long's so
 

00:24:28.650 --> 00:24:31.280 align:start position:0%
month to a map of integers and Long's so
this<00:24:28.830><c> is</c><00:24:28.950><c> the</c><00:24:29.160><c> the</c><00:24:30.120><c> second</c><00:24:30.570><c> the</c><00:24:30.750><c> internal</c><00:24:31.140><c> map</c>

00:24:31.280 --> 00:24:31.290 align:start position:0%
this is the the second the internal map
 

00:24:31.290 --> 00:24:33.770 align:start position:0%
this is the the second the internal map
is<00:24:31.470><c> the</c><00:24:31.650><c> day</c><00:24:32.010><c> of</c><00:24:32.040><c> the</c><00:24:32.340><c> month</c><00:24:32.970><c> and</c><00:24:33.150><c> the</c><00:24:33.510><c> count</c>

00:24:33.770 --> 00:24:33.780 align:start position:0%
is the day of the month and the count
 

00:24:33.780 --> 00:24:35.900 align:start position:0%
is the day of the month and the count
associated<00:24:34.500><c> with</c><00:24:34.620><c> that</c><00:24:34.770><c> month</c><00:24:35.010><c> and</c><00:24:35.700><c> we'll</c>

00:24:35.900 --> 00:24:35.910 align:start position:0%
associated with that month and we'll
 

00:24:35.910 --> 00:24:38.060 align:start position:0%
associated with that month and we'll
create<00:24:36.000><c> results</c><00:24:36.390><c> so</c><00:24:36.840><c> we</c><00:24:36.930><c> take</c><00:24:37.080><c> our</c><00:24:37.200><c> data</c><00:24:37.410><c> and</c>

00:24:38.060 --> 00:24:38.070 align:start position:0%
create results so we take our data and
 

00:24:38.070 --> 00:24:40.880 align:start position:0%
create results so we take our data and
we<00:24:38.250><c> stream</c><00:24:38.490><c> it</c><00:24:38.640><c> okay</c><00:24:39.480><c> and</c><00:24:40.290><c> what</c><00:24:40.710><c> we're</c><00:24:40.770><c> going</c>

00:24:40.880 --> 00:24:40.890 align:start position:0%
we stream it okay and what we're going
 

00:24:40.890 --> 00:24:44.720 align:start position:0%
we stream it okay and what we're going
to<00:24:40.950><c> do</c><00:24:41.070><c> is</c><00:24:41.190><c> we</c><00:24:41.340><c> had</c><00:24:41.430><c> a</c><00:24:41.460><c> map</c><00:24:42.110><c> to</c><00:24:43.110><c> the</c><00:24:43.590><c> date</c><00:24:43.890><c> okay</c>

00:24:44.720 --> 00:24:44.730 align:start position:0%
to do is we had a map to the date okay
 

00:24:44.730 --> 00:24:46.400 align:start position:0%
to do is we had a map to the date okay
that's<00:24:45.120><c> all</c><00:24:45.300><c> good</c><00:24:45.330><c> so</c><00:24:45.660><c> we</c><00:24:45.750><c> get</c><00:24:45.870><c> the</c><00:24:45.960><c> date</c><00:24:46.140><c> for</c>

00:24:46.400 --> 00:24:46.410 align:start position:0%
that's all good so we get the date for
 

00:24:46.410 --> 00:24:48.830 align:start position:0%
that's all good so we get the date for
that<00:24:46.560><c> particular</c><00:24:46.890><c> piece</c><00:24:47.250><c> of</c><00:24:47.400><c> data</c><00:24:47.640><c> and</c><00:24:48.090><c> then</c>

00:24:48.830 --> 00:24:48.840 align:start position:0%
that particular piece of data and then
 

00:24:48.840 --> 00:24:50.210 align:start position:0%
that particular piece of data and then
we're<00:24:48.930><c> going</c><00:24:49.050><c> to</c><00:24:49.080><c> collect</c><00:24:49.500><c> but</c><00:24:49.830><c> the</c><00:24:49.920><c> collect</c>

00:24:50.210 --> 00:24:50.220 align:start position:0%
we're going to collect but the collect
 

00:24:50.220 --> 00:24:54.920 align:start position:0%
we're going to collect but the collect
changes<00:24:51.030><c> so</c><00:24:51.420><c> we</c><00:24:51.510><c> use</c><00:24:51.630><c> a</c><00:24:51.660><c> more</c><00:24:52.560><c> a</c><00:24:53.570><c> better</c><00:24:54.570><c> way</c><00:24:54.900><c> of</c>

00:24:54.920 --> 00:24:54.930 align:start position:0%
changes so we use a more a better way of
 

00:24:54.930 --> 00:24:56.720 align:start position:0%
changes so we use a more a better way of
doing<00:24:55.320><c> the</c><00:24:55.530><c> collector</c><00:24:55.920><c> so</c><00:24:56.040><c> we</c><00:24:56.130><c> said</c><00:24:56.370><c> collect</c>

00:24:56.720 --> 00:24:56.730 align:start position:0%
doing the collector so we said collect
 

00:24:56.730 --> 00:24:59.540 align:start position:0%
doing the collector so we said collect
we<00:24:57.240><c> want</c><00:24:57.360><c> to</c><00:24:57.450><c> group</c><00:24:57.660><c> by</c><00:24:58.080><c> and</c><00:24:58.500><c> in</c><00:24:59.280><c> this</c><00:24:59.370><c> case</c>

00:24:59.540 --> 00:24:59.550 align:start position:0%
we want to group by and in this case
 

00:24:59.550 --> 00:25:01.460 align:start position:0%
we want to group by and in this case
we're<00:24:59.670><c> gonna</c><00:24:59.760><c> use</c><00:24:59.820><c> own</c><00:25:00.090><c> date/time</c><00:25:00.570><c> get</c><00:25:01.140><c> month</c>

00:25:01.460 --> 00:25:01.470 align:start position:0%
we're gonna use own date/time get month
 

00:25:01.470 --> 00:25:03.830 align:start position:0%
we're gonna use own date/time get month
so<00:25:02.220><c> we</c><00:25:02.310><c> get</c><00:25:02.460><c> the</c><00:25:02.550><c> month</c><00:25:02.880><c> associated</c><00:25:03.540><c> with</c><00:25:03.570><c> that</c>

00:25:03.830 --> 00:25:03.840 align:start position:0%
so we get the month associated with that
 

00:25:03.840 --> 00:25:06.050 align:start position:0%
so we get the month associated with that
so<00:25:04.260><c> to</c><00:25:04.320><c> group</c><00:25:04.560><c> by</c><00:25:04.710><c> month</c><00:25:04.920><c> and</c><00:25:05.280><c> then</c><00:25:05.910><c> we're</c>

00:25:06.050 --> 00:25:06.060 align:start position:0%
so to group by month and then we're
 

00:25:06.060 --> 00:25:08.000 align:start position:0%
so to group by month and then we're
going<00:25:06.180><c> to</c><00:25:06.210><c> group</c><00:25:06.450><c> by</c><00:25:06.750><c> the</c><00:25:07.290><c> day</c><00:25:07.590><c> of</c><00:25:07.710><c> the</c><00:25:07.800><c> month</c>

00:25:08.000 --> 00:25:08.010 align:start position:0%
going to group by the day of the month
 

00:25:08.010 --> 00:25:11.240 align:start position:0%
going to group by the day of the month
and<00:25:08.750><c> then</c><00:25:09.750><c> we're</c><00:25:10.050><c> going</c><00:25:10.140><c> to</c><00:25:10.200><c> count</c><00:25:10.560><c> so</c><00:25:11.010><c> this</c>

00:25:11.240 --> 00:25:11.250 align:start position:0%
and then we're going to count so this
 

00:25:11.250 --> 00:25:13.160 align:start position:0%
and then we're going to count so this
gives<00:25:11.610><c> us</c><00:25:11.640><c> exactly</c><00:25:12.270><c> what</c><00:25:12.510><c> we</c><00:25:12.600><c> want</c><00:25:12.810><c> in</c><00:25:12.990><c> terms</c>

00:25:13.160 --> 00:25:13.170 align:start position:0%
gives us exactly what we want in terms
 

00:25:13.170 --> 00:25:15.500 align:start position:0%
gives us exactly what we want in terms
of<00:25:13.380><c> a</c><00:25:13.470><c> map</c><00:25:13.650><c> which</c><00:25:13.920><c> maps</c><00:25:14.190><c> from</c><00:25:14.400><c> the</c><00:25:14.490><c> month</c><00:25:14.790><c> to</c>

00:25:15.500 --> 00:25:15.510 align:start position:0%
of a map which maps from the month to
 

00:25:15.510 --> 00:25:16.850 align:start position:0%
of a map which maps from the month to
the<00:25:15.660><c> day</c><00:25:15.810><c> of</c><00:25:15.930><c> the</c><00:25:15.990><c> month</c><00:25:16.200><c> and</c><00:25:16.470><c> account</c>

00:25:16.850 --> 00:25:16.860 align:start position:0%
the day of the month and account
 

00:25:16.860 --> 00:25:18.570 align:start position:0%
the day of the month and account
associated<00:25:17.190><c> with</c><00:25:17.550><c> that</c><00:25:18.000><c> month</c>

00:25:18.570 --> 00:25:18.580 align:start position:0%
associated with that month
 

00:25:18.580 --> 00:25:22.130 align:start position:0%
associated with that month
and<00:25:18.669><c> so</c><00:25:19.600><c> that</c><00:25:19.899><c> is</c><00:25:20.470><c> obviously</c><00:25:20.590><c> the</c><00:25:20.950><c> better</c>

00:25:22.130 --> 00:25:22.140 align:start position:0%
and so that is obviously the better
 

00:25:22.140 --> 00:25:28.320 align:start position:0%
and so that is obviously the better
stream<00:25:23.140><c> solution</c><00:25:23.380><c> so</c><00:25:23.789><c> Jonah</c><00:25:24.789><c> okay</c><00:25:25.690><c> so</c><00:25:26.169><c> this</c><00:25:27.330><c> I</c>

00:25:28.320 --> 00:25:28.330 align:start position:0%
stream solution so Jonah okay so this I
 

00:25:28.330 --> 00:25:29.909 align:start position:0%
stream solution so Jonah okay so this I
get<00:25:28.779><c> I'll</c><00:25:28.899><c> tell</c><00:25:29.110><c> you</c><00:25:29.200><c> in</c><00:25:29.260><c> a</c><00:25:29.289><c> moment</c><00:25:29.380><c> right</c><00:25:29.769><c> but</c>

00:25:29.909 --> 00:25:29.919 align:start position:0%
get I'll tell you in a moment right but
 

00:25:29.919 --> 00:25:31.860 align:start position:0%
get I'll tell you in a moment right but
let's<00:25:30.070><c> look</c><00:25:30.190><c> at</c><00:25:30.279><c> this</c><00:25:30.429><c> code</c><00:25:30.789><c> for</c><00:25:31.210><c> a</c><00:25:31.419><c> moment</c><00:25:31.809><c> I</c>

00:25:31.860 --> 00:25:31.870 align:start position:0%
let's look at this code for a moment I
 

00:25:31.870 --> 00:25:33.600 align:start position:0%
let's look at this code for a moment I
think<00:25:31.960><c> this</c><00:25:32.200><c> is</c><00:25:32.350><c> the</c><00:25:32.649><c> the</c><00:25:32.830><c> nested</c><00:25:33.130><c> grouping</c><00:25:33.429><c> by</c>

00:25:33.600 --> 00:25:33.610 align:start position:0%
think this is the the nested grouping by
 

00:25:33.610 --> 00:25:35.399 align:start position:0%
think this is the the nested grouping by
I<00:25:33.640><c> think</c><00:25:33.850><c> throws</c><00:25:34.179><c> a</c><00:25:34.210><c> lot</c><00:25:34.390><c> of</c><00:25:34.450><c> people</c><00:25:34.779><c> and</c><00:25:35.049><c> it's</c>

00:25:35.399 --> 00:25:35.409 align:start position:0%
I think throws a lot of people and it's
 

00:25:35.409 --> 00:25:37.230 align:start position:0%
I think throws a lot of people and it's
kind<00:25:35.529><c> of</c><00:25:35.769><c> hard</c><00:25:35.980><c> to</c><00:25:36.100><c> come</c><00:25:36.250><c> out</c><00:25:36.399><c> with</c><00:25:36.669><c> with</c><00:25:37.210><c> a</c>

00:25:37.230 --> 00:25:37.240 align:start position:0%
kind of hard to come out with with a
 

00:25:37.240 --> 00:25:39.570 align:start position:0%
kind of hard to come out with with a
nested<00:25:37.690><c> grouping</c><00:25:37.990><c> by</c><00:25:38.140><c> you</c><00:25:39.010><c> know</c><00:25:39.130><c> right</c><00:25:39.429><c> off</c>

00:25:39.570 --> 00:25:39.580 align:start position:0%
nested grouping by you know right off
 

00:25:39.580 --> 00:25:47.940 align:start position:0%
nested grouping by you know right off
the<00:25:39.730><c> top</c><00:25:39.880><c> of</c><00:25:39.909><c> your</c><00:25:40.149><c> head</c><00:25:40.330><c> but</c><00:25:46.380><c> yeah</c><00:25:47.380><c> I</c><00:25:47.409><c> I</c><00:25:47.529><c> think</c>

00:25:47.940 --> 00:25:47.950 align:start position:0%
the top of your head but yeah I I think
 

00:25:47.950 --> 00:25:49.259 align:start position:0%
the top of your head but yeah I I think
the<00:25:48.159><c> way</c><00:25:48.279><c> to</c><00:25:48.309><c> think</c><00:25:48.519><c> about</c><00:25:48.669><c> it</c><00:25:48.880><c> is</c><00:25:48.970><c> to</c><00:25:49.000><c> build</c>

00:25:49.259 --> 00:25:49.269 align:start position:0%
the way to think about it is to build
 

00:25:49.269 --> 00:25:50.789 align:start position:0%
the way to think about it is to build
things<00:25:49.480><c> up</c><00:25:49.630><c> incrementally</c><00:25:49.990><c> so</c><00:25:50.320><c> why</c><00:25:50.620><c> don't</c><00:25:50.769><c> we</c>

00:25:50.789 --> 00:25:50.799 align:start position:0%
things up incrementally so why don't we
 

00:25:50.799 --> 00:25:52.500 align:start position:0%
things up incrementally so why don't we
go<00:25:50.950><c> back</c><00:25:51.100><c> to</c><00:25:51.340><c> the</c><00:25:51.460><c> to</c><00:25:51.669><c> the</c><00:25:51.700><c> very</c><00:25:51.940><c> first</c><00:25:52.210><c> slide</c>

00:25:52.500 --> 00:25:52.510 align:start position:0%
go back to the to the very first slide
 

00:25:52.510 --> 00:26:00.119 align:start position:0%
go back to the to the very first slide
that<00:25:52.779><c> hasn't</c><00:25:53.200><c> has</c><00:25:53.649><c> the</c><00:25:53.799><c> array</c>

00:26:00.119 --> 00:26:00.129 align:start position:0%
 
 

00:26:00.129 --> 00:26:02.619 align:start position:0%
 
okay<00:26:01.129><c> yeah</c><00:26:01.879><c> that's</c><00:26:01.999><c> a</c><00:26:02.149><c> fine</c><00:26:02.299><c> one</c><00:26:02.450><c> because</c>

00:26:02.619 --> 00:26:02.629 align:start position:0%
okay yeah that's a fine one because
 

00:26:02.629 --> 00:26:03.969 align:start position:0%
okay yeah that's a fine one because
that's<00:26:02.749><c> yeah</c><00:26:03.169><c> that's</c><00:26:03.200><c> logically</c><00:26:03.769><c> the</c><00:26:03.950><c> same</c>

00:26:03.969 --> 00:26:03.979 align:start position:0%
that's yeah that's logically the same
 

00:26:03.979 --> 00:26:05.409 align:start position:0%
that's yeah that's logically the same
thing<00:26:04.309><c> it's</c><00:26:04.459><c> just</c><00:26:04.609><c> yeah</c><00:26:04.969><c> this</c><00:26:05.119><c> is</c><00:26:05.179><c> the</c><00:26:05.239><c> first</c>

00:26:05.409 --> 00:26:05.419 align:start position:0%
thing it's just yeah this is the first
 

00:26:05.419 --> 00:26:07.119 align:start position:0%
thing it's just yeah this is the first
the<00:26:05.629><c> first</c><00:26:05.749><c> code</c><00:26:05.989><c> that</c><00:26:06.169><c> that</c><00:26:06.200><c> works</c><00:26:06.709><c> because</c>

00:26:07.119 --> 00:26:07.129 align:start position:0%
the first code that that works because
 

00:26:07.129 --> 00:26:08.859 align:start position:0%
the first code that that works because
of<00:26:07.309><c> the</c><00:26:07.429><c> effectively</c><00:26:07.909><c> final</c><00:26:08.299><c> issue</c><00:26:08.450><c> right</c><00:26:08.690><c> so</c>

00:26:08.859 --> 00:26:08.869 align:start position:0%
of the effectively final issue right so
 

00:26:08.869 --> 00:26:12.369 align:start position:0%
of the effectively final issue right so
so<00:26:09.529><c> what's</c><00:26:10.459><c> not</c><00:26:10.639><c> on</c><00:26:10.940><c> this</c><00:26:11.149><c> slide</c><00:26:11.330><c> is</c><00:26:11.899><c> the</c>

00:26:12.369 --> 00:26:12.379 align:start position:0%
so what's not on this slide is the
 

00:26:12.379 --> 00:26:14.949 align:start position:0%
so what's not on this slide is the
Declaration<00:26:13.009><c> of</c><00:26:13.249><c> this</c><00:26:13.669><c> this</c><00:26:14.179><c> array</c><00:26:14.659><c> that's</c>

00:26:14.949 --> 00:26:14.959 align:start position:0%
Declaration of this this array that's
 

00:26:14.959 --> 00:26:17.680 align:start position:0%
Declaration of this this array that's
being<00:26:15.139><c> assigned</c><00:26:15.529><c> to</c><00:26:16.039><c> and</c><00:26:16.369><c> so</c><00:26:17.029><c> if</c><00:26:17.209><c> you</c><00:26:17.359><c> if</c><00:26:17.539><c> you</c>

00:26:17.680 --> 00:26:17.690 align:start position:0%
being assigned to and so if you if you
 

00:26:17.690 --> 00:26:20.440 align:start position:0%
being assigned to and so if you if you
if<00:26:17.929><c> you</c><00:26:18.109><c> look</c><00:26:18.259><c> at</c><00:26:18.379><c> this</c><00:26:18.469><c> carefully</c><00:26:19.129><c> it's</c><00:26:20.119><c> it's</c>

00:26:20.440 --> 00:26:20.450 align:start position:0%
if you look at this carefully it's it's
 

00:26:20.450 --> 00:26:22.749 align:start position:0%
if you look at this carefully it's it's
an<00:26:20.570><c> array</c><00:26:20.809><c> that</c><00:26:21.409><c> has</c><00:26:21.440><c> to</c><00:26:21.830><c> go</c><00:26:21.950><c> that</c><00:26:22.249><c> has</c><00:26:22.429><c> that</c>

00:26:22.749 --> 00:26:22.759 align:start position:0%
an array that has to go that has that
 

00:26:22.759 --> 00:26:24.759 align:start position:0%
an array that has to go that has that
has<00:26:22.909><c> to</c><00:26:23.029><c> have</c><00:26:23.149><c> twelve</c><00:26:23.419><c> twelve</c><00:26:24.169><c> elements</c><00:26:24.619><c> and</c>

00:26:24.759 --> 00:26:24.769 align:start position:0%
has to have twelve twelve elements and
 

00:26:24.769 --> 00:26:28.269 align:start position:0%
has to have twelve twelve elements and
there's<00:26:26.529><c> it's</c><00:26:27.529><c> I</c><00:26:27.799><c> think</c><00:26:27.979><c> the</c><00:26:28.039><c> array</c><00:26:28.190><c> is</c>

00:26:28.269 --> 00:26:28.279 align:start position:0%
there's it's I think the array is
 

00:26:28.279 --> 00:26:29.649 align:start position:0%
there's it's I think the array is
actually<00:26:28.369><c> miss</c><00:26:28.700><c> named</c><00:26:28.969><c> but</c><00:26:29.209><c> it's</c><00:26:29.329><c> basically</c>

00:26:29.649 --> 00:26:29.659 align:start position:0%
actually miss named but it's basically
 

00:26:29.659 --> 00:26:32.229 align:start position:0%
actually miss named but it's basically
an<00:26:29.869><c> array</c><00:26:29.959><c> element</c><00:26:30.469><c> for</c><00:26:30.649><c> each</c><00:26:30.799><c> month</c><00:26:31.099><c> so</c><00:26:31.729><c> the</c>

00:26:32.229 --> 00:26:32.239 align:start position:0%
an array element for each month so the
 

00:26:32.239 --> 00:26:34.779 align:start position:0%
an array element for each month so the
the<00:26:32.659><c> the</c><00:26:32.690><c> indexes</c><00:26:33.559><c> into</c><00:26:33.769><c> the</c><00:26:33.859><c> array</c><00:26:34.099><c> are</c><00:26:34.429><c> 0</c>

00:26:34.779 --> 00:26:34.789 align:start position:0%
the the indexes into the array are 0
 

00:26:34.789 --> 00:26:36.279 align:start position:0%
the the indexes into the array are 0
through<00:26:34.969><c> 11</c><00:26:35.389><c> because</c><00:26:35.899><c> that's</c><00:26:36.049><c> what</c><00:26:36.169><c> we're</c>

00:26:36.279 --> 00:26:36.289 align:start position:0%
through 11 because that's what we're
 

00:26:36.289 --> 00:26:37.389 align:start position:0%
through 11 because that's what we're
getting<00:26:36.409><c> out</c><00:26:36.649><c> of</c><00:26:36.739><c> the</c><00:26:36.799><c> for</c><00:26:36.979><c> loop</c><00:26:37.009><c> and</c><00:26:37.279><c> we're</c>

00:26:37.389 --> 00:26:37.399 align:start position:0%
getting out of the for loop and we're
 

00:26:37.399 --> 00:26:39.099 align:start position:0%
getting out of the for loop and we're
assigning<00:26:37.639><c> something</c><00:26:38.329><c> to</c><00:26:38.539><c> each</c><00:26:38.839><c> array</c>

00:26:39.099 --> 00:26:39.109 align:start position:0%
assigning something to each array
 

00:26:39.109 --> 00:26:41.139 align:start position:0%
assigning something to each array
element<00:26:39.139><c> based</c><00:26:39.649><c> on</c><00:26:39.829><c> the</c><00:26:40.070><c> month</c><00:26:40.309><c> and</c><00:26:40.759><c> so</c><00:26:40.940><c> that</c>

00:26:41.139 --> 00:26:41.149 align:start position:0%
element based on the month and so that
 

00:26:41.149 --> 00:26:43.449 align:start position:0%
element based on the month and so that
should<00:26:41.269><c> think</c><00:26:41.899><c> about</c><00:26:41.989><c> this</c><00:26:42.289><c> a</c><00:26:42.499><c> little</c><00:26:42.709><c> bit</c><00:26:42.950><c> so</c>

00:26:43.449 --> 00:26:43.459 align:start position:0%
should think about this a little bit so
 

00:26:43.459 --> 00:26:46.269 align:start position:0%
should think about this a little bit so
if<00:26:43.579><c> you</c><00:26:43.669><c> have</c><00:26:43.820><c> an</c><00:26:43.909><c> O</c><00:26:44.119><c> and</c><00:26:44.329><c> then</c><00:26:44.589><c> the</c><00:26:45.589><c> element</c>

00:26:46.269 --> 00:26:46.279 align:start position:0%
if you have an O and then the element
 

00:26:46.279 --> 00:26:48.729 align:start position:0%
if you have an O and then the element
type<00:26:46.940><c> of</c><00:26:47.179><c> the</c><00:26:47.539><c> array</c><00:26:47.629><c> is</c><00:26:48.109><c> whatever</c><00:26:48.379><c> you</c><00:26:48.589><c> get</c>

00:26:48.729 --> 00:26:48.739 align:start position:0%
type of the array is whatever you get
 

00:26:48.739 --> 00:26:50.619 align:start position:0%
type of the array is whatever you get
back<00:26:48.889><c> from</c><00:26:48.919><c> that</c><00:26:49.219><c> stream</c><00:26:49.639><c> and</c><00:26:49.999><c> so</c><00:26:50.239><c> what</c><00:26:50.479><c> we're</c>

00:26:50.619 --> 00:26:50.629 align:start position:0%
back from that stream and so what we're
 

00:26:50.629 --> 00:26:53.349 align:start position:0%
back from that stream and so what we're
doing<00:26:50.659><c> is</c><00:26:51.019><c> we're</c><00:26:51.289><c> collecting</c><00:26:51.769><c> using</c><00:26:52.609><c> grouping</c>

00:26:53.349 --> 00:26:53.359 align:start position:0%
doing is we're collecting using grouping
 

00:26:53.359 --> 00:26:56.859 align:start position:0%
doing is we're collecting using grouping
by<00:26:53.570><c> and</c><00:26:53.929><c> so</c><00:26:54.200><c> the</c><00:26:54.409><c> result</c><00:26:54.799><c> is</c><00:26:55.219><c> each</c><00:26:56.149><c> element</c><00:26:56.659><c> is</c>

00:26:56.859 --> 00:26:56.869 align:start position:0%
by and so the result is each element is
 

00:26:56.869 --> 00:26:59.199 align:start position:0%
by and so the result is each element is
a<00:26:56.899><c> map</c><00:26:57.529><c> right</c><00:26:58.159><c> so</c><00:26:58.369><c> that's</c><00:26:58.549><c> that's</c><00:26:58.789><c> our</c><00:26:58.999><c> that's</c>

00:26:59.199 --> 00:26:59.209 align:start position:0%
a map right so that's that's our that's
 

00:26:59.209 --> 00:27:02.769 align:start position:0%
a map right so that's that's our that's
our<00:26:59.599><c> count</c><00:26:59.959><c> from</c><00:27:00.379><c> the</c><00:27:00.440><c> day</c><00:27:01.429><c> of</c><00:27:01.459><c> the</c><00:27:01.639><c> month</c><00:27:01.849><c> to</c>

00:27:02.769 --> 00:27:02.779 align:start position:0%
our count from the day of the month to
 

00:27:02.779 --> 00:27:05.289 align:start position:0%
our count from the day of the month to
sorry<00:27:03.769><c> that's</c><00:27:04.099><c> a</c><00:27:04.190><c> map</c><00:27:04.459><c> from</c><00:27:04.729><c> the</c><00:27:04.879><c> day</c><00:27:05.089><c> of</c><00:27:05.239><c> the</c>

00:27:05.289 --> 00:27:05.299 align:start position:0%
sorry that's a map from the day of the
 

00:27:05.299 --> 00:27:08.889 align:start position:0%
sorry that's a map from the day of the
month<00:27:05.509><c> to</c><00:27:06.139><c> count</c><00:27:06.709><c> the</c><00:27:07.039><c> count</c><00:27:07.339><c> and</c><00:27:07.669><c> so</c><00:27:08.239><c> so</c><00:27:08.719><c> in</c>

00:27:08.889 --> 00:27:08.899 align:start position:0%
month to count the count and so so in
 

00:27:08.899 --> 00:27:11.589 align:start position:0%
month to count the count and so so in
the<00:27:08.989><c> inner</c><00:27:09.200><c> in</c><00:27:09.619><c> in</c><00:27:09.889><c> so</c><00:27:10.399><c> that's</c><00:27:10.519><c> already</c><00:27:10.940><c> you</c>

00:27:11.589 --> 00:27:11.599 align:start position:0%
the inner in in so that's already you
 

00:27:11.599 --> 00:27:14.440 align:start position:0%
the inner in in so that's already you
see<00:27:11.809><c> the</c><00:27:11.929><c> inner</c><00:27:12.139><c> grouping</c><00:27:12.709><c> by</c><00:27:12.889><c> there</c><00:27:13.249><c> so</c><00:27:13.849><c> so</c>

00:27:14.440 --> 00:27:14.450 align:start position:0%
see the inner grouping by there so so
 

00:27:14.450 --> 00:27:16.060 align:start position:0%
see the inner grouping by there so so
let's<00:27:14.779><c> just</c><00:27:14.989><c> say</c><00:27:15.079><c> we're</c><00:27:15.259><c> working</c><00:27:15.589><c> on</c><00:27:15.739><c> one</c>

00:27:16.060 --> 00:27:16.070 align:start position:0%
let's just say we're working on one
 

00:27:16.070 --> 00:27:18.099 align:start position:0%
let's just say we're working on one
month<00:27:16.399><c> right</c><00:27:16.999><c> so</c><00:27:17.209><c> what</c><00:27:17.389><c> this</c><00:27:17.509><c> does</c><00:27:17.719><c> is</c><00:27:17.899><c> it</c><00:27:17.989><c> goes</c>

00:27:18.099 --> 00:27:18.109 align:start position:0%
month right so what this does is it goes
 

00:27:18.109 --> 00:27:20.560 align:start position:0%
month right so what this does is it goes
through<00:27:18.469><c> for</c><00:27:18.859><c> that</c><00:27:19.039><c> month</c><00:27:19.369><c> for</c><00:27:19.999><c> each</c><00:27:20.239><c> day</c><00:27:20.539><c> of</c>

00:27:20.560 --> 00:27:20.570 align:start position:0%
through for that month for each day of
 

00:27:20.570 --> 00:27:23.169 align:start position:0%
through for that month for each day of
the<00:27:20.719><c> month</c><00:27:20.859><c> uses</c><00:27:21.859><c> the</c><00:27:22.070><c> day</c><00:27:22.369><c> of</c><00:27:22.519><c> the</c><00:27:22.669><c> month</c><00:27:22.909><c> as</c>

00:27:23.169 --> 00:27:23.179 align:start position:0%
the month uses the day of the month as
 

00:27:23.179 --> 00:27:26.979 align:start position:0%
the month uses the day of the month as
as<00:27:23.749><c> the</c><00:27:24.529><c> grouping</c><00:27:25.039><c> key</c><00:27:25.339><c> and</c><00:27:25.729><c> then</c><00:27:26.209><c> the</c><00:27:26.599><c> count</c>

00:27:26.979 --> 00:27:26.989 align:start position:0%
as the grouping key and then the count
 

00:27:26.989 --> 00:27:29.079 align:start position:0%
as the grouping key and then the count
ends<00:27:27.499><c> up</c><00:27:27.589><c> in</c><00:27:27.739><c> the</c><00:27:27.829><c> value</c><00:27:28.249><c> so</c><00:27:28.639><c> that's</c><00:27:28.820><c> that's</c>

00:27:29.079 --> 00:27:29.089 align:start position:0%
ends up in the value so that's that's
 

00:27:29.089 --> 00:27:30.999 align:start position:0%
ends up in the value so that's that's
where<00:27:29.329><c> you</c><00:27:29.450><c> get</c><00:27:29.599><c> that</c><00:27:29.899><c> that</c><00:27:30.200><c> turns</c><00:27:30.529><c> into</c><00:27:30.769><c> your</c>

00:27:30.999 --> 00:27:31.009 align:start position:0%
where you get that that turns into your
 

00:27:31.009 --> 00:27:34.599 align:start position:0%
where you get that that turns into your
inner<00:27:31.309><c> grouping</c><00:27:32.089><c> by</c><00:27:32.469><c> but</c><00:27:33.469><c> we</c><00:27:33.679><c> wrap</c><00:27:34.339><c> something</c>

00:27:34.599 --> 00:27:34.609 align:start position:0%
inner grouping by but we wrap something
 

00:27:34.609 --> 00:27:36.969 align:start position:0%
inner grouping by but we wrap something
around<00:27:34.789><c> it</c><00:27:35.179><c> which</c><00:27:35.539><c> is</c><00:27:35.779><c> a</c><00:27:36.019><c> for</c><00:27:36.379><c> loop</c><00:27:36.559><c> which</c><00:27:36.829><c> is</c>

00:27:36.969 --> 00:27:36.979 align:start position:0%
around it which is a for loop which is
 

00:27:36.979 --> 00:27:40.289 align:start position:0%
around it which is a for loop which is
for<00:27:37.399><c> each</c><00:27:37.669><c> month</c><00:27:38.200><c> but</c><00:27:39.200><c> then</c><00:27:39.320><c> the</c><00:27:39.409><c> result</c><00:27:39.829><c> is</c>

00:27:40.289 --> 00:27:40.299 align:start position:0%
for each month but then the result is
 

00:27:40.299 --> 00:27:46.509 align:start position:0%
for each month but then the result is
this<00:27:41.299><c> array</c><00:27:41.869><c> of</c><00:27:44.109><c> entries</c><00:27:45.109><c> per</c><00:27:45.379><c> month</c><00:27:45.709><c> which</c><00:27:46.309><c> is</c>

00:27:46.509 --> 00:27:46.519 align:start position:0%
this array of entries per month which is
 

00:27:46.519 --> 00:27:48.310 align:start position:0%
this array of entries per month which is
this<00:27:46.700><c> map</c><00:27:46.999><c> and</c><00:27:47.359><c> so</c><00:27:47.539><c> if</c><00:27:47.659><c> you</c><00:27:47.749><c> think</c><00:27:47.929><c> about</c><00:27:48.049><c> an</c>

00:27:48.310 --> 00:27:48.320 align:start position:0%
this map and so if you think about an
 

00:27:48.320 --> 00:27:50.469 align:start position:0%
this map and so if you think about an
array<00:27:48.619><c> this</c><00:27:49.099><c> in</c><00:27:49.309><c> a</c><00:27:49.700><c> different</c><00:27:50.029><c> way</c>

00:27:50.469 --> 00:27:50.479 align:start position:0%
array this in a different way
 

00:27:50.479 --> 00:27:53.319 align:start position:0%
array this in a different way
this<00:27:51.109><c> is</c><00:27:51.259><c> an</c><00:27:51.349><c> array</c><00:27:51.619><c> of</c><00:27:51.649><c> maps</c><00:27:52.609><c> which</c><00:27:52.940><c> first</c><00:27:53.209><c> of</c>

00:27:53.319 --> 00:27:53.329 align:start position:0%
this is an array of maps which first of
 

00:27:53.329 --> 00:27:54.819 align:start position:0%
this is an array of maps which first of
all<00:27:53.450><c> mixing</c><00:27:53.749><c> arrays</c><00:27:54.019><c> and</c><00:27:54.259><c> generics</c><00:27:54.709><c> is</c>

00:27:54.819 --> 00:27:54.829 align:start position:0%
all mixing arrays and generics is
 

00:27:54.829 --> 00:27:56.319 align:start position:0%
all mixing arrays and generics is
usually<00:27:55.159><c> pretty</c><00:27:55.369><c> bad</c><00:27:55.579><c> and</c><00:27:55.879><c> I</c><00:27:56.059><c> think</c><00:27:56.239><c> you</c>

00:27:56.319 --> 00:27:56.329 align:start position:0%
usually pretty bad and I think you
 

00:27:56.329 --> 00:27:57.699 align:start position:0%
usually pretty bad and I think you
didn't<00:27:56.629><c> include</c><00:27:56.959><c> the</c><00:27:57.079><c> declaration</c><00:27:57.589><c> in</c><00:27:57.679><c> the</c>

00:27:57.699 --> 00:27:57.709 align:start position:0%
didn't include the declaration in the
 

00:27:57.709 --> 00:27:59.589 align:start position:0%
didn't include the declaration in the
array<00:27:57.919><c> because</c><00:27:58.129><c> it's</c><00:27:58.339><c> really</c><00:27:58.579><c> ugly</c><00:27:58.789><c> because</c>

00:27:59.589 --> 00:27:59.599 align:start position:0%
array because it's really ugly because
 

00:27:59.599 --> 00:28:00.759 align:start position:0%
array because it's really ugly because
because<00:27:59.839><c> you</c><00:27:59.959><c> have</c><00:28:00.109><c> to</c><00:28:00.229><c> you</c><00:28:00.469><c> have</c><00:28:00.499><c> to</c><00:28:00.619><c> use</c>

00:28:00.759 --> 00:28:00.769 align:start position:0%
because you have to you have to use
 

00:28:00.769 --> 00:28:03.139 align:start position:0%
because you have to you have to use
unsafe<00:28:01.190><c> casts</c><00:28:01.759><c> in</c><00:28:01.849><c> order</c><00:28:02.059><c> to</c><00:28:02.179><c> allocate</c><00:28:02.359><c> it</c><00:28:02.749><c> but</c>

00:28:03.139 --> 00:28:03.149 align:start position:0%
unsafe casts in order to allocate it but
 

00:28:03.149 --> 00:28:05.810 align:start position:0%
unsafe casts in order to allocate it but
but<00:28:03.960><c> really</c><00:28:04.259><c> this</c><00:28:04.679><c> this</c><00:28:04.979><c> should</c><00:28:05.129><c> start</c><00:28:05.700><c> to</c>

00:28:05.810 --> 00:28:05.820 align:start position:0%
but really this this should start to
 

00:28:05.820 --> 00:28:07.849 align:start position:0%
but really this this should start to
tell<00:28:05.999><c> you</c><00:28:06.149><c> that</c><00:28:06.359><c> maybe</c><00:28:06.839><c> an</c><00:28:07.200><c> array</c><00:28:07.409><c> is</c><00:28:07.529><c> not</c><00:28:07.710><c> the</c>

00:28:07.849 --> 00:28:07.859 align:start position:0%
tell you that maybe an array is not the
 

00:28:07.859 --> 00:28:09.979 align:start position:0%
tell you that maybe an array is not the
right<00:28:08.009><c> data</c><00:28:08.309><c> structure</c><00:28:08.669><c> for</c><00:28:08.940><c> this</c><00:28:09.029><c> because</c><00:28:09.839><c> if</c>

00:28:09.979 --> 00:28:09.989 align:start position:0%
right data structure for this because if
 

00:28:09.989 --> 00:28:11.539 align:start position:0%
right data structure for this because if
you<00:28:10.019><c> have</c><00:28:10.109><c> an</c><00:28:10.289><c> array</c><00:28:10.529><c> going</c><00:28:10.859><c> from</c><00:28:11.099><c> 0</c><00:28:11.339><c> to</c><00:28:11.369><c> 11</c>

00:28:11.539 --> 00:28:11.549 align:start position:0%
you have an array going from 0 to 11
 

00:28:11.549 --> 00:28:14.299 align:start position:0%
you have an array going from 0 to 11
where<00:28:12.359><c> each</c><00:28:12.570><c> each</c><00:28:13.019><c> array</c><00:28:13.379><c> index</c><00:28:13.739><c> represents</c><00:28:13.979><c> a</c>

00:28:14.299 --> 00:28:14.309 align:start position:0%
where each each array index represents a
 

00:28:14.309 --> 00:28:17.209 align:start position:0%
where each each array index represents a
month<00:28:14.549><c> and</c><00:28:15.389><c> then</c><00:28:15.989><c> you</c><00:28:16.080><c> have</c><00:28:16.200><c> a</c><00:28:16.229><c> value</c><00:28:16.950><c> stored</c>

00:28:17.209 --> 00:28:17.219 align:start position:0%
month and then you have a value stored
 

00:28:17.219 --> 00:28:19.969 align:start position:0%
month and then you have a value stored
in<00:28:17.309><c> that</c><00:28:17.399><c> array</c><00:28:17.669><c> that's</c><00:28:18.599><c> actually</c><00:28:19.019><c> a</c><00:28:19.080><c> map</c><00:28:19.409><c> it's</c>

00:28:19.969 --> 00:28:19.979 align:start position:0%
in that array that's actually a map it's
 

00:28:19.979 --> 00:28:23.419 align:start position:0%
in that array that's actually a map it's
a<00:28:20.070><c> map</c><00:28:20.099><c> from</c><00:28:21.089><c> a</c><00:28:21.330><c> month</c><00:28:21.599><c> to</c><00:28:22.080><c> some</c><00:28:22.289><c> value</c><00:28:22.559><c> and</c><00:28:23.159><c> so</c>

00:28:23.419 --> 00:28:23.429 align:start position:0%
a map from a month to some value and so
 

00:28:23.429 --> 00:28:25.940 align:start position:0%
a map from a month to some value and so
that's<00:28:23.609><c> where</c><00:28:23.729><c> we</c><00:28:23.759><c> get</c><00:28:24.029><c> our</c><00:28:24.089><c> outer</c><00:28:24.599><c> map</c><00:28:25.080><c> and</c><00:28:25.409><c> so</c>

00:28:25.940 --> 00:28:25.950 align:start position:0%
that's where we get our outer map and so
 

00:28:25.950 --> 00:28:28.249 align:start position:0%
that's where we get our outer map and so
instead<00:28:26.519><c> of</c><00:28:26.700><c> looping</c><00:28:27.210><c> over</c><00:28:27.629><c> the</c><00:28:27.749><c> array</c><00:28:28.019><c> and</c>

00:28:28.249 --> 00:28:28.259 align:start position:0%
instead of looping over the array and
 

00:28:28.259 --> 00:28:29.869 align:start position:0%
instead of looping over the array and
actually<00:28:28.769><c> kind</c><00:28:29.039><c> of</c><00:28:29.099><c> another</c><00:28:29.339><c> thing</c><00:28:29.580><c> that</c><00:28:29.759><c> this</c>

00:28:29.869 --> 00:28:29.879 align:start position:0%
actually kind of another thing that this
 

00:28:29.879 --> 00:28:31.549 align:start position:0%
actually kind of another thing that this
does<00:28:30.059><c> this</c><00:28:30.210><c> is</c><00:28:30.269><c> imagine</c><00:28:30.960><c> this</c><00:28:31.019><c> is</c><00:28:31.169><c> very</c><00:28:31.349><c> large</c>

00:28:31.549 --> 00:28:31.559 align:start position:0%
does this is imagine this is very large
 

00:28:31.559 --> 00:28:33.200 align:start position:0%
does this is imagine this is very large
data<00:28:31.799><c> set</c><00:28:32.009><c> this</c><00:28:32.339><c> actually</c><00:28:32.789><c> loops</c><00:28:32.969><c> over</c><00:28:33.089><c> the</c>

00:28:33.200 --> 00:28:33.210 align:start position:0%
data set this actually loops over the
 

00:28:33.210 --> 00:28:37.039 align:start position:0%
data set this actually loops over the
entire<00:28:33.539><c> data</c><00:28:33.839><c> set</c><00:28:34.049><c> 12</c><00:28:34.379><c> times</c><00:28:34.739><c> and</c><00:28:35.279><c> so</c><00:28:36.179><c> what</c>

00:28:37.039 --> 00:28:37.049 align:start position:0%
entire data set 12 times and so what
 

00:28:37.049 --> 00:28:39.469 align:start position:0%
entire data set 12 times and so what
what<00:28:37.499><c> we</c><00:28:37.619><c> really</c><00:28:37.919><c> want</c><00:28:38.099><c> to</c><00:28:38.190><c> do</c><00:28:38.309><c> is</c><00:28:38.609><c> take</c><00:28:39.269><c> one</c>

00:28:39.469 --> 00:28:39.479 align:start position:0%
what we really want to do is take one
 

00:28:39.479 --> 00:28:41.659 align:start position:0%
what we really want to do is take one
pass<00:28:39.690><c> over</c><00:28:40.019><c> the</c><00:28:40.109><c> array</c><00:28:40.320><c> and</c><00:28:40.589><c> say</c><00:28:40.739><c> ah</c><00:28:40.950><c> ok</c><00:28:41.460><c> which</c>

00:28:41.659 --> 00:28:41.669 align:start position:0%
pass over the array and say ah ok which
 

00:28:41.669 --> 00:28:43.609 align:start position:0%
pass over the array and say ah ok which
month<00:28:41.909><c> does</c><00:28:42.119><c> this</c><00:28:42.210><c> belong</c><00:28:42.570><c> in</c><00:28:42.839><c> and</c><00:28:43.049><c> classify</c>

00:28:43.609 --> 00:28:43.619 align:start position:0%
month does this belong in and classify
 

00:28:43.619 --> 00:28:46.399 align:start position:0%
month does this belong in and classify
it<00:28:44.029><c> now</c><00:28:45.029><c> that</c><00:28:45.239><c> we</c><00:28:45.330><c> have</c><00:28:45.539><c> some</c><00:28:45.779><c> piece</c><00:28:46.049><c> of</c><00:28:46.229><c> data</c>

00:28:46.399 --> 00:28:46.409 align:start position:0%
it now that we have some piece of data
 

00:28:46.409 --> 00:28:51.259 align:start position:0%
it now that we have some piece of data
for<00:28:46.979><c> this</c><00:28:47.070><c> month</c><00:28:47.369><c> say</c><00:28:48.979><c> what</c><00:28:49.979><c> day</c><00:28:50.399><c> of</c><00:28:50.789><c> the</c><00:28:50.820><c> month</c>

00:28:51.259 --> 00:28:51.269 align:start position:0%
for this month say what day of the month
 

00:28:51.269 --> 00:28:54.739 align:start position:0%
for this month say what day of the month
is<00:28:51.989><c> this</c><00:28:52.979><c> and</c><00:28:53.460><c> so</c><00:28:53.580><c> we're</c><00:28:53.940><c> classifying</c><00:28:54.570><c> it</c>

00:28:54.739 --> 00:28:54.749 align:start position:0%
is this and so we're classifying it
 

00:28:54.749 --> 00:28:59.359 align:start position:0%
is this and so we're classifying it
again<00:28:55.229><c> and</c><00:28:56.210><c> then</c><00:28:57.210><c> with</c><00:28:58.200><c> that</c><00:28:58.379><c> item</c><00:28:58.649><c> add</c><00:28:58.950><c> 1</c><00:28:59.219><c> to</c>

00:28:59.359 --> 00:28:59.369 align:start position:0%
again and then with that item add 1 to
 

00:28:59.369 --> 00:29:01.219 align:start position:0%
again and then with that item add 1 to
that<00:28:59.489><c> count</c><00:28:59.849><c> so</c><00:29:00.419><c> we're</c><00:29:00.539><c> doing</c><00:29:00.629><c> these</c><00:29:00.869><c> two</c>

00:29:01.219 --> 00:29:01.229 align:start position:0%
that count so we're doing these two
 

00:29:01.229 --> 00:29:03.680 align:start position:0%
that count so we're doing these two
levels<00:29:01.619><c> of</c><00:29:01.799><c> classification</c><00:29:02.269><c> first</c><00:29:03.269><c> by</c><00:29:03.419><c> month</c>

00:29:03.680 --> 00:29:03.690 align:start position:0%
levels of classification first by month
 

00:29:03.690 --> 00:29:06.589 align:start position:0%
levels of classification first by month
at<00:29:03.960><c> first</c><00:29:04.649><c> bite</c><00:29:04.830><c> and</c><00:29:05.099><c> then</c><00:29:05.399><c> second</c><00:29:05.849><c> by</c><00:29:05.969><c> day</c><00:29:06.029><c> of</c>

00:29:06.589 --> 00:29:06.599 align:start position:0%
at first bite and then second by day of
 

00:29:06.599 --> 00:29:08.690 align:start position:0%
at first bite and then second by day of
the<00:29:06.899><c> month</c><00:29:07.080><c> and</c><00:29:07.349><c> that's</c><00:29:07.830><c> where</c><00:29:08.099><c> we</c><00:29:08.279><c> get</c><00:29:08.489><c> our</c>

00:29:08.690 --> 00:29:08.700 align:start position:0%
the month and that's where we get our
 

00:29:08.700 --> 00:29:12.200 align:start position:0%
the month and that's where we get our
two<00:29:08.969><c> grouping</c><00:29:09.479><c> buys</c><00:29:09.659><c> so</c><00:29:10.349><c> that</c><00:29:10.379><c> the</c><00:29:11.129><c> so</c><00:29:11.999><c> if</c><00:29:12.119><c> you</c>

00:29:12.200 --> 00:29:12.210 align:start position:0%
two grouping buys so that the so if you
 

00:29:12.210 --> 00:29:13.909 align:start position:0%
two grouping buys so that the so if you
change<00:29:12.570><c> the</c><00:29:12.749><c> data</c><00:29:12.899><c> structure</c><00:29:13.320><c> from</c><00:29:13.469><c> an</c><00:29:13.649><c> array</c>

00:29:13.909 --> 00:29:13.919 align:start position:0%
change the data structure from an array
 

00:29:13.919 --> 00:29:16.399 align:start position:0%
change the data structure from an array
to<00:29:13.950><c> a</c><00:29:14.249><c> map</c><00:29:14.580><c> and</c><00:29:15.570><c> then</c><00:29:15.719><c> you</c><00:29:15.809><c> can</c><00:29:15.929><c> say</c><00:29:16.049><c> oh</c><00:29:16.080><c> we're</c>

00:29:16.399 --> 00:29:16.409 align:start position:0%
to a map and then you can say oh we're
 

00:29:16.409 --> 00:29:17.959 align:start position:0%
to a map and then you can say oh we're
classifying<00:29:16.649><c> by</c><00:29:17.159><c> months</c><00:29:17.549><c> and</c><00:29:17.729><c> whenever</c>

00:29:17.959 --> 00:29:17.969 align:start position:0%
classifying by months and whenever
 

00:29:17.969 --> 00:29:19.729 align:start position:0%
classifying by months and whenever
you're<00:29:18.119><c> classifying</c><00:29:18.570><c> by</c><00:29:18.960><c> some</c><00:29:19.200><c> value</c><00:29:19.379><c> that</c>

00:29:19.729 --> 00:29:19.739 align:start position:0%
you're classifying by some value that
 

00:29:19.739 --> 00:29:21.560 align:start position:0%
you're classifying by some value that
turns<00:29:20.009><c> into</c><00:29:20.219><c> a</c><00:29:20.339><c> grouping</c><00:29:20.820><c> by</c><00:29:20.969><c> that's</c><00:29:21.389><c> where</c>

00:29:21.560 --> 00:29:21.570 align:start position:0%
turns into a grouping by that's where
 

00:29:21.570 --> 00:29:23.719 align:start position:0%
turns into a grouping by that's where
the<00:29:21.659><c> outermost</c><00:29:22.080><c> grouping</c><00:29:22.859><c> by</c><00:29:22.979><c> comes</c><00:29:23.279><c> from</c><00:29:23.489><c> and</c>

00:29:23.719 --> 00:29:23.729 align:start position:0%
the outermost grouping by comes from and
 

00:29:23.729 --> 00:29:25.190 align:start position:0%
the outermost grouping by comes from and
so<00:29:23.999><c> why</c><00:29:24.119><c> don't</c><00:29:24.179><c> you</c><00:29:24.299><c> why</c><00:29:24.509><c> don't</c><00:29:24.539><c> we</c><00:29:24.719><c> wind</c><00:29:24.929><c> back</c>

00:29:25.190 --> 00:29:25.200 align:start position:0%
so why don't you why don't we wind back
 

00:29:25.200 --> 00:29:27.409 align:start position:0%
so why don't you why don't we wind back
to<00:29:25.409><c> the</c><00:29:25.529><c> to</c><00:29:26.249><c> the</c><00:29:26.369><c> last</c><00:29:26.580><c> slide</c><00:29:26.849><c> there</c><00:29:27.210><c> and</c><00:29:27.330><c> you</c>

00:29:27.409 --> 00:29:27.419 align:start position:0%
to the to the last slide there and you
 

00:29:27.419 --> 00:29:32.320 align:start position:0%
to the to the last slide there and you
can<00:29:27.539><c> you</c><00:29:27.779><c> can</c><00:29:27.929><c> see</c><00:29:28.109><c> that</c>

00:29:32.320 --> 00:29:32.330 align:start position:0%
 
 

00:29:32.330 --> 00:29:36.170 align:start position:0%
 
so<00:29:33.380><c> so</c><00:29:34.380><c> I</c><00:29:34.410><c> think</c><00:29:34.680><c> this</c><00:29:35.280><c> what's</c><00:29:35.850><c> what's</c><00:29:36.090><c> you</c>

00:29:36.170 --> 00:29:36.180 align:start position:0%
so so I think this what's what's you
 

00:29:36.180 --> 00:29:37.910 align:start position:0%
so so I think this what's what's you
understand<00:29:36.809><c> see</c><00:29:36.930><c> once</c><00:29:37.260><c> you've</c><00:29:37.380><c> you</c><00:29:37.860><c> know</c>

00:29:37.910 --> 00:29:37.920 align:start position:0%
understand see once you've you know
 

00:29:37.920 --> 00:29:40.310 align:start position:0%
understand see once you've you know
bought<00:29:38.220><c> into</c><00:29:38.430><c> the</c><00:29:38.640><c> idea</c><00:29:38.670><c> of</c><00:29:39.059><c> grouping</c><00:29:39.840><c> by</c><00:29:40.020><c> as</c>

00:29:40.310 --> 00:29:40.320 align:start position:0%
bought into the idea of grouping by as
 

00:29:40.320 --> 00:29:43.340 align:start position:0%
bought into the idea of grouping by as
classifying<00:29:41.160><c> things</c><00:29:41.430><c> into</c><00:29:41.700><c> a</c><00:29:41.730><c> map</c><00:29:42.030><c> then</c><00:29:42.660><c> here</c>

00:29:43.340 --> 00:29:43.350 align:start position:0%
classifying things into a map then here
 

00:29:43.350 --> 00:29:44.450 align:start position:0%
classifying things into a map then here
we<00:29:43.500><c> have</c><00:29:43.680><c> you</c><00:29:43.920><c> know</c><00:29:43.950><c> you</c><00:29:44.040><c> see</c><00:29:44.220><c> the</c><00:29:44.309><c> first</c>

00:29:44.450 --> 00:29:44.460 align:start position:0%
we have you know you see the first
 

00:29:44.460 --> 00:29:46.970 align:start position:0%
we have you know you see the first
grouping<00:29:44.850><c> by</c><00:29:45.000><c> is</c><00:29:45.330><c> by</c><00:29:45.480><c> month</c><00:29:45.780><c> second</c><00:29:46.680><c> grouping</c>

00:29:46.970 --> 00:29:46.980 align:start position:0%
grouping by is by month second grouping
 

00:29:46.980 --> 00:29:49.640 align:start position:0%
grouping by is by month second grouping
by<00:29:47.160><c> is</c><00:29:47.460><c> by</c><00:29:47.730><c> day</c><00:29:48.180><c> of</c><00:29:48.330><c> month</c><00:29:48.480><c> and</c><00:29:48.809><c> then</c><00:29:49.260><c> the</c><00:29:49.410><c> count</c>

00:29:49.640 --> 00:29:49.650 align:start position:0%
by is by day of month and then the count
 

00:29:49.650 --> 00:29:52.990 align:start position:0%
by is by day of month and then the count
is<00:29:49.830><c> the</c><00:29:50.010><c> third</c><00:29:50.220><c> thing</c><00:29:50.400><c> so</c><00:29:50.670><c> you</c><00:29:50.730><c> get</c><00:29:50.940><c> this</c><00:29:51.150><c> yes</c><00:29:51.750><c> I</c>

00:29:52.990 --> 00:29:53.000 align:start position:0%
is the third thing so you get this yes I
 

00:29:53.000 --> 00:29:55.100 align:start position:0%
is the third thing so you get this yes I
mean<00:29:54.000><c> it's</c><00:29:54.150><c> a</c><00:29:54.180><c> little</c><00:29:54.390><c> complicated</c><00:29:54.840><c> but</c><00:29:54.960><c> it's</c>

00:29:55.100 --> 00:29:55.110 align:start position:0%
mean it's a little complicated but it's
 

00:29:55.110 --> 00:29:57.290 align:start position:0%
mean it's a little complicated but it's
this<00:29:55.200><c> nested</c><00:29:55.650><c> map</c><00:29:55.800><c> structure</c><00:29:56.160><c> but</c><00:29:56.850><c> it's</c><00:29:57.120><c> much</c>

00:29:57.290 --> 00:29:57.300 align:start position:0%
this nested map structure but it's much
 

00:29:57.300 --> 00:29:59.150 align:start position:0%
this nested map structure but it's much
nicer<00:29:57.720><c> than</c><00:29:57.870><c> having</c><00:29:58.170><c> an</c><00:29:58.260><c> array</c><00:29:58.470><c> of</c><00:29:58.500><c> maps</c><00:29:58.860><c> I'll</c>

00:29:59.150 --> 00:29:59.160 align:start position:0%
nicer than having an array of maps I'll
 

00:29:59.160 --> 00:30:03.080 align:start position:0%
nicer than having an array of maps I'll
tell<00:29:59.340><c> you</c><00:29:59.430><c> that</c><00:29:59.750><c> and</c><00:30:01.700><c> the</c><00:30:02.700><c> other</c><00:30:02.850><c> nice</c><00:30:03.059><c> thing</c>

00:30:03.080 --> 00:30:03.090 align:start position:0%
tell you that and the other nice thing
 

00:30:03.090 --> 00:30:04.610 align:start position:0%
tell you that and the other nice thing
is<00:30:03.510><c> that</c><00:30:03.690><c> if</c><00:30:03.840><c> you</c><00:30:03.900><c> remember</c><00:30:04.140><c> the</c><00:30:04.350><c> previous</c>

00:30:04.610 --> 00:30:04.620 align:start position:0%
is that if you remember the previous
 

00:30:04.620 --> 00:30:07.430 align:start position:0%
is that if you remember the previous
slides<00:30:05.040><c> we</c><00:30:05.400><c> well</c><00:30:06.300><c> what</c><00:30:06.750><c> wasn't</c><00:30:06.929><c> on</c><00:30:07.140><c> the</c><00:30:07.260><c> slide</c>

00:30:07.430 --> 00:30:07.440 align:start position:0%
slides we well what wasn't on the slide
 

00:30:07.440 --> 00:30:09.230 align:start position:0%
slides we well what wasn't on the slide
was<00:30:07.679><c> the</c><00:30:07.710><c> initial</c><00:30:08.220><c> allocation</c><00:30:08.370><c> of</c><00:30:08.880><c> the</c><00:30:08.970><c> array</c>

00:30:09.230 --> 00:30:09.240 align:start position:0%
was the initial allocation of the array
 

00:30:09.240 --> 00:30:12.710 align:start position:0%
was the initial allocation of the array
and<00:30:09.600><c> then</c><00:30:10.410><c> the</c><00:30:10.740><c> what</c><00:30:11.250><c> was</c><00:30:11.429><c> in</c><00:30:11.720><c> the</c>

00:30:12.710 --> 00:30:12.720 align:start position:0%
and then the what was in the
 

00:30:12.720 --> 00:30:15.460 align:start position:0%
and then the what was in the
intermediate<00:30:13.410><c> code</c><00:30:13.650><c> was</c><00:30:13.920><c> assignments</c><00:30:14.760><c> to</c>

00:30:15.460 --> 00:30:15.470 align:start position:0%
intermediate code was assignments to
 

00:30:15.470 --> 00:30:18.650 align:start position:0%
intermediate code was assignments to
individual<00:30:16.470><c> array</c><00:30:16.710><c> elements</c><00:30:17.280><c> and</c><00:30:17.460><c> so</c><00:30:18.000><c> again</c>

00:30:18.650 --> 00:30:18.660 align:start position:0%
individual array elements and so again
 

00:30:18.660 --> 00:30:20.600 align:start position:0%
individual array elements and so again
back<00:30:19.110><c> to</c><00:30:19.320><c> side</c><00:30:19.559><c> effects</c><00:30:19.950><c> inside</c><00:30:20.220><c> of</c><00:30:20.370><c> for</c><00:30:20.580><c> each</c>

00:30:20.600 --> 00:30:20.610 align:start position:0%
back to side effects inside of for each
 

00:30:20.610 --> 00:30:22.820 align:start position:0%
back to side effects inside of for each
right<00:30:21.120><c> so</c><00:30:21.270><c> if</c><00:30:21.360><c> we</c><00:30:21.450><c> continue</c><00:30:21.630><c> in</c><00:30:21.960><c> that</c><00:30:22.050><c> theme</c><00:30:22.320><c> we</c>

00:30:22.820 --> 00:30:22.830 align:start position:0%
right so if we continue in that theme we
 

00:30:22.830 --> 00:30:27.380 align:start position:0%
right so if we continue in that theme we
want<00:30:23.010><c> to</c><00:30:23.100><c> we</c><00:30:23.460><c> want</c><00:30:23.490><c> to</c><00:30:24.080><c> we</c><00:30:25.080><c> want</c><00:30:25.110><c> to</c><00:30:26.030><c> avoid</c><00:30:27.030><c> side</c>

00:30:27.380 --> 00:30:27.390 align:start position:0%
want to we want to we want to avoid side
 

00:30:27.390 --> 00:30:29.630 align:start position:0%
want to we want to we want to avoid side
effects<00:30:27.720><c> if</c><00:30:27.960><c> possible</c><00:30:28.559><c> and</c><00:30:28.800><c> say</c><00:30:28.980><c> okay</c><00:30:29.370><c> how</c><00:30:29.580><c> can</c>

00:30:29.630 --> 00:30:29.640 align:start position:0%
effects if possible and say okay how can
 

00:30:29.640 --> 00:30:31.760 align:start position:0%
effects if possible and say okay how can
we<00:30:29.850><c> construct</c><00:30:30.390><c> a</c><00:30:30.480><c> value</c><00:30:31.020><c> that</c><00:30:31.230><c> has</c><00:30:31.470><c> the</c><00:30:31.620><c> right</c>

00:30:31.760 --> 00:30:31.770 align:start position:0%
we construct a value that has the right
 

00:30:31.770 --> 00:30:33.799 align:start position:0%
we construct a value that has the right
properties<00:30:32.309><c> we</c><00:30:32.490><c> want</c><00:30:32.640><c> and</c><00:30:32.940><c> so</c><00:30:32.970><c> that's</c><00:30:33.630><c> what</c>

00:30:33.799 --> 00:30:33.809 align:start position:0%
properties we want and so that's what
 

00:30:33.809 --> 00:30:36.710 align:start position:0%
properties we want and so that's what
collecting<00:30:34.290><c> does</c><00:30:34.470><c> so</c><00:30:35.190><c> we</c><00:30:36.000><c> have</c><00:30:36.179><c> all</c><00:30:36.450><c> of</c><00:30:36.660><c> our</c>

00:30:36.710 --> 00:30:36.720 align:start position:0%
collecting does so we have all of our
 

00:30:36.720 --> 00:30:38.210 align:start position:0%
collecting does so we have all of our
stream<00:30:36.960><c> elements</c><00:30:37.470><c> they</c><00:30:37.620><c> run</c><00:30:37.830><c> through</c><00:30:38.070><c> this</c>

00:30:38.210 --> 00:30:38.220 align:start position:0%
stream elements they run through this
 

00:30:38.220 --> 00:30:39.950 align:start position:0%
stream elements they run through this
collector<00:30:38.970><c> that</c><00:30:39.179><c> does</c><00:30:39.330><c> this</c><00:30:39.510><c> nested</c>

00:30:39.950 --> 00:30:39.960 align:start position:0%
collector that does this nested
 

00:30:39.960 --> 00:30:41.900 align:start position:0%
collector that does this nested
classification<00:30:40.740><c> and</c><00:30:40.920><c> it</c><00:30:41.340><c> builds</c><00:30:41.580><c> up</c><00:30:41.790><c> this</c>

00:30:41.900 --> 00:30:41.910 align:start position:0%
classification and it builds up this
 

00:30:41.910 --> 00:30:44.360 align:start position:0%
classification and it builds up this
two-level<00:30:42.420><c> map</c><00:30:42.600><c> and</c><00:30:42.929><c> that's</c><00:30:43.800><c> the</c><00:30:43.950><c> result</c><00:30:44.280><c> of</c>

00:30:44.360 --> 00:30:44.370 align:start position:0%
two-level map and that's the result of
 

00:30:44.370 --> 00:30:46.510 align:start position:0%
two-level map and that's the result of
our<00:30:44.490><c> method</c><00:30:44.850><c> so</c><00:30:45.150><c> no</c><00:30:45.360><c> side</c><00:30:45.600><c> effects</c><00:30:45.960><c> in</c><00:30:46.050><c> here</c>

00:30:46.510 --> 00:30:46.520 align:start position:0%
our method so no side effects in here
 

00:30:46.520 --> 00:30:52.790 align:start position:0%
our method so no side effects in here
good<00:30:48.410><c> okay</c><00:30:49.410><c> so</c><00:30:50.040><c> the</c><00:30:50.309><c> next</c><00:30:50.460><c> one</c><00:30:50.640><c> is</c><00:30:51.620><c> one</c><00:30:52.620><c> of</c><00:30:52.650><c> the</c>

00:30:52.790 --> 00:30:52.800 align:start position:0%
good okay so the next one is one of the
 

00:30:52.800 --> 00:30:54.680 align:start position:0%
good okay so the next one is one of the
things<00:30:53.309><c> that</c><00:30:53.429><c> we</c><00:30:53.520><c> did</c><00:30:53.640><c> in</c><00:30:53.760><c> a</c><00:30:53.820><c> hands-on</c><00:30:54.120><c> lab</c><00:30:54.360><c> so</c>

00:30:54.680 --> 00:30:54.690 align:start position:0%
things that we did in a hands-on lab so
 

00:30:54.690 --> 00:30:56.419 align:start position:0%
things that we did in a hands-on lab so
Stuart<00:30:55.230><c> and</c><00:30:55.320><c> I</c><00:30:55.350><c> have</c><00:30:55.470><c> been</c><00:30:55.679><c> the</c><00:30:55.770><c> past</c><00:30:55.950><c> of</c><00:30:56.130><c> and</c>

00:30:56.419 --> 00:30:56.429 align:start position:0%
Stuart and I have been the past of and
 

00:30:56.429 --> 00:30:59.630 align:start position:0%
Stuart and I have been the past of and
today<00:30:57.240><c> yesterday</c><00:30:57.929><c> I've</c><00:30:58.080><c> run</c><00:30:58.890><c> hands-on</c><00:30:59.400><c> labs</c>

00:30:59.630 --> 00:30:59.640 align:start position:0%
today yesterday I've run hands-on labs
 

00:30:59.640 --> 00:31:01.730 align:start position:0%
today yesterday I've run hands-on labs
for<00:30:59.940><c> streams</c><00:31:00.210><c> where</c><00:31:00.540><c> people</c><00:31:00.870><c> get</c><00:31:01.020><c> exercises</c>

00:31:01.730 --> 00:31:01.740 align:start position:0%
for streams where people get exercises
 

00:31:01.740 --> 00:31:02.840 align:start position:0%
for streams where people get exercises
that<00:31:01.920><c> they</c><00:31:02.010><c> can</c><00:31:02.160><c> work</c><00:31:02.250><c> through</c><00:31:02.490><c> and</c><00:31:02.730><c> they</c><00:31:02.820><c> can</c>

00:31:02.840 --> 00:31:02.850 align:start position:0%
that they can work through and they can
 

00:31:02.850 --> 00:31:05.330 align:start position:0%
that they can work through and they can
see<00:31:03.630><c> how</c><00:31:03.750><c> they</c><00:31:03.870><c> work</c><00:31:03.929><c> and</c><00:31:04.350><c> so</c><00:31:04.980><c> one</c><00:31:05.130><c> of</c><00:31:05.160><c> those</c>

00:31:05.330 --> 00:31:05.340 align:start position:0%
see how they work and so one of those
 

00:31:05.340 --> 00:31:08.570 align:start position:0%
see how they work and so one of those
that<00:31:06.120><c> I</c><00:31:06.150><c> ran</c><00:31:06.590><c> last</c><00:31:07.590><c> year</c><00:31:07.800><c> I</c><00:31:07.830><c> think</c><00:31:07.890><c> it</c><00:31:08.040><c> was</c><00:31:08.220><c> was</c>

00:31:08.570 --> 00:31:08.580 align:start position:0%
that I ran last year I think it was was
 

00:31:08.580 --> 00:31:11.180 align:start position:0%
that I ran last year I think it was was
a<00:31:08.610><c> simple</c><00:31:09.150><c> exercise</c><00:31:09.660><c> the</c><00:31:10.590><c> idea</c><00:31:10.830><c> was</c><00:31:10.950><c> you</c><00:31:10.980><c> had</c>

00:31:11.180 --> 00:31:11.190 align:start position:0%
a simple exercise the idea was you had
 

00:31:11.190 --> 00:31:12.740 align:start position:0%
a simple exercise the idea was you had
to<00:31:11.220><c> concatenate</c><00:31:11.790><c> the</c><00:31:11.910><c> first</c><00:31:12.120><c> character</c><00:31:12.600><c> of</c>

00:31:12.740 --> 00:31:12.750 align:start position:0%
to concatenate the first character of
 

00:31:12.750 --> 00:31:14.810 align:start position:0%
to concatenate the first character of
each<00:31:12.900><c> string</c><00:31:13.350><c> in</c><00:31:13.590><c> a</c><00:31:13.650><c> list</c><00:31:13.950><c> to</c><00:31:14.280><c> generate</c><00:31:14.580><c> a</c><00:31:14.640><c> new</c>

00:31:14.810 --> 00:31:14.820 align:start position:0%
each string in a list to generate a new
 

00:31:14.820 --> 00:31:16.970 align:start position:0%
each string in a list to generate a new
string<00:31:15.120><c> so</c><00:31:15.809><c> the</c><00:31:16.020><c> input</c><00:31:16.290><c> was</c><00:31:16.410><c> alpha</c><00:31:16.710><c> Bravo</c>

00:31:16.970 --> 00:31:16.980 align:start position:0%
string so the input was alpha Bravo
 

00:31:16.980 --> 00:31:19.070 align:start position:0%
string so the input was alpha Bravo
Charlie<00:31:17.010><c> Delta</c><00:31:17.340><c> echo</c><00:31:17.730><c> Foxtrot</c><00:31:18.270><c> so</c><00:31:18.870><c> what</c><00:31:18.990><c> we</c>

00:31:19.070 --> 00:31:19.080 align:start position:0%
Charlie Delta echo Foxtrot so what we
 

00:31:19.080 --> 00:31:20.380 align:start position:0%
Charlie Delta echo Foxtrot so what we
were<00:31:19.170><c> looking</c><00:31:19.410><c> for</c><00:31:19.620><c> was</c><00:31:19.830><c> a</c><00:31:19.860><c> way</c><00:31:19.980><c> of</c><00:31:20.010><c> getting</c>

00:31:20.380 --> 00:31:20.390 align:start position:0%
were looking for was a way of getting
 

00:31:20.390 --> 00:31:25.030 align:start position:0%
were looking for was a way of getting
ABCDEF<00:31:21.390><c> okay</c><00:31:22.200><c> and</c><00:31:22.429><c> the</c><00:31:23.429><c> answer</c><00:31:23.460><c> to</c><00:31:24.270><c> that</c><00:31:24.300><c> is</c>

00:31:25.030 --> 00:31:25.040 align:start position:0%
ABCDEF okay and the answer to that is
 

00:31:25.040 --> 00:31:28.250 align:start position:0%
ABCDEF okay and the answer to that is
not<00:31:26.040><c> to</c><00:31:26.160><c> use</c><00:31:26.250><c> streams</c><00:31:26.580><c> it</c><00:31:27.330><c> actually</c><00:31:27.690><c> uses</c><00:31:27.840><c> the</c>

00:31:28.250 --> 00:31:28.260 align:start position:0%
not to use streams it actually uses the
 

00:31:28.260 --> 00:31:31.790 align:start position:0%
not to use streams it actually uses the
for<00:31:28.590><c> each</c><00:31:28.710><c> method</c><00:31:28.920><c> on</c><00:31:29.250><c> the</c><00:31:29.570><c> iterable</c><00:31:30.800><c> iterable</c>

00:31:31.790 --> 00:31:31.800 align:start position:0%
for each method on the iterable iterable
 

00:31:31.800 --> 00:31:34.490 align:start position:0%
for each method on the iterable iterable
interface<00:31:32.690><c> so</c><00:31:33.690><c> what</c><00:31:33.929><c> we</c><00:31:33.990><c> do</c><00:31:34.080><c> is</c><00:31:34.170><c> we</c><00:31:34.260><c> create</c><00:31:34.350><c> a</c>

00:31:34.490 --> 00:31:34.500 align:start position:0%
interface so what we do is we create a
 

00:31:34.500 --> 00:31:36.799 align:start position:0%
interface so what we do is we create a
string<00:31:34.650><c> builder</c><00:31:34.830><c> and</c><00:31:35.220><c> then</c><00:31:36.000><c> we</c><00:31:36.120><c> say</c><00:31:36.300><c> input</c><00:31:36.480><c> dot</c>

00:31:36.799 --> 00:31:36.809 align:start position:0%
string builder and then we say input dot
 

00:31:36.809 --> 00:31:38.299 align:start position:0%
string builder and then we say input dot
for<00:31:37.020><c> each</c><00:31:37.170><c> and</c><00:31:37.440><c> this</c><00:31:37.530><c> is</c><00:31:37.650><c> a</c><00:31:37.679><c> legitimate</c><00:31:37.860><c> user</c>

00:31:38.299 --> 00:31:38.309 align:start position:0%
for each and this is a legitimate user
 

00:31:38.309 --> 00:31:41.630 align:start position:0%
for each and this is a legitimate user
for<00:31:38.580><c> each</c><00:31:38.700><c> and</c><00:31:39.179><c> we</c><00:31:40.170><c> say</c><00:31:40.320><c> append</c><00:31:40.710><c> the</c><00:31:41.250><c> character</c>

00:31:41.630 --> 00:31:41.640 align:start position:0%
for each and we say append the character
 

00:31:41.640 --> 00:31:43.010 align:start position:0%
for each and we say append the character
at<00:31:41.760><c> zero</c><00:31:42.030><c> to</c><00:31:42.179><c> ours</c>

00:31:43.010 --> 00:31:43.020 align:start position:0%
at zero to ours
 

00:31:43.020 --> 00:31:47.090 align:start position:0%
at zero to ours
Miller<00:31:43.290><c> yes</c><00:31:44.280><c> and</c><00:31:44.520><c> then</c><00:31:45.410><c> the</c><00:31:46.410><c> result</c><00:31:46.710><c> is</c><00:31:46.890><c> simply</c>

00:31:47.090 --> 00:31:47.100 align:start position:0%
Miller yes and then the result is simply
 

00:31:47.100 --> 00:31:48.710 align:start position:0%
Miller yes and then the result is simply
to<00:31:47.400><c> extract</c><00:31:47.730><c> the</c><00:31:47.820><c> string</c><00:31:48.030><c> from</c><00:31:48.330><c> the</c>

00:31:48.710 --> 00:31:48.720 align:start position:0%
to extract the string from the
 

00:31:48.720 --> 00:31:49.130 align:start position:0%
to extract the string from the
stringbuilder

00:31:49.130 --> 00:31:49.140 align:start position:0%
stringbuilder
 

00:31:49.140 --> 00:31:51.169 align:start position:0%
stringbuilder
three<00:31:49.559><c> lines</c><00:31:49.740><c> of</c><00:31:49.800><c> code</c><00:31:49.860><c> does</c><00:31:50.490><c> exactly</c><00:31:50.880><c> what</c><00:31:51.030><c> it</c>

00:31:51.169 --> 00:31:51.179 align:start position:0%
three lines of code does exactly what it
 

00:31:51.179 --> 00:31:53.930 align:start position:0%
three lines of code does exactly what it
should<00:31:51.210><c> do</c><00:31:51.480><c> and</c><00:31:51.809><c> it</c><00:31:51.929><c> works</c><00:31:52.080><c> perfectly</c><00:31:52.790><c> so</c><00:31:53.790><c> the</c>

00:31:53.930 --> 00:31:53.940 align:start position:0%
should do and it works perfectly so the
 

00:31:53.940 --> 00:31:55.640 align:start position:0%
should do and it works perfectly so the
the<00:31:54.210><c> thing</c><00:31:54.240><c> that</c><00:31:54.660><c> happened</c><00:31:55.110><c> was</c><00:31:55.230><c> I</c><00:31:55.410><c> was</c><00:31:55.559><c> doing</c>

00:31:55.640 --> 00:31:55.650 align:start position:0%
the thing that happened was I was doing
 

00:31:55.650 --> 00:31:57.980 align:start position:0%
the thing that happened was I was doing
this<00:31:55.800><c> course</c><00:31:56.040><c> and</c><00:31:56.250><c> somebody</c><00:31:56.820><c> was</c><00:31:57.450><c> asking</c><00:31:57.720><c> a</c>

00:31:57.980 --> 00:31:57.990 align:start position:0%
this course and somebody was asking a
 

00:31:57.990 --> 00:31:59.330 align:start position:0%
this course and somebody was asking a
question<00:31:58.020><c> they</c><00:31:58.440><c> said</c><00:31:58.590><c> well</c><00:31:58.710><c> okay</c><00:31:58.950><c> so</c><00:31:58.980><c> that</c>

00:31:59.330 --> 00:31:59.340 align:start position:0%
question they said well okay so that
 

00:31:59.340 --> 00:32:00.650 align:start position:0%
question they said well okay so that
that<00:31:59.370><c> uses</c><00:31:59.850><c> that</c><00:32:00.000><c> could</c><00:32:00.240><c> we</c><00:32:00.330><c> do</c><00:32:00.450><c> it</c><00:32:00.540><c> with</c>

00:32:00.650 --> 00:32:00.660 align:start position:0%
that uses that could we do it with
 

00:32:00.660 --> 00:32:03.110 align:start position:0%
that uses that could we do it with
streams<00:32:00.960><c> and</c><00:32:01.590><c> I</c><00:32:01.860><c> said</c><00:32:02.040><c> well</c><00:32:02.280><c> yes</c><00:32:02.730><c> I</c><00:32:02.880><c> suppose</c><00:32:02.910><c> we</c>

00:32:03.110 --> 00:32:03.120 align:start position:0%
streams and I said well yes I suppose we
 

00:32:03.120 --> 00:32:04.549 align:start position:0%
streams and I said well yes I suppose we
could<00:32:03.360><c> do</c><00:32:03.540><c> it</c><00:32:03.600><c> with</c><00:32:03.690><c> streams</c><00:32:03.929><c> let's</c><00:32:04.260><c> do</c><00:32:04.440><c> it</c>

00:32:04.549 --> 00:32:04.559 align:start position:0%
could do it with streams let's do it
 

00:32:04.559 --> 00:32:07.190 align:start position:0%
could do it with streams let's do it
this<00:32:04.920><c> way</c><00:32:05.179><c> so</c><00:32:06.179><c> a</c><00:32:06.210><c> correct</c><00:32:06.510><c> result</c><00:32:06.690><c> where</c><00:32:07.080><c> we</c>

00:32:07.190 --> 00:32:07.200 align:start position:0%
this way so a correct result where we
 

00:32:07.200 --> 00:32:08.900 align:start position:0%
this way so a correct result where we
take<00:32:07.350><c> their</c><00:32:07.530><c> input</c><00:32:07.650><c> we</c><00:32:07.950><c> take</c><00:32:08.160><c> the</c><00:32:08.250><c> stream</c><00:32:08.490><c> we</c>

00:32:08.900 --> 00:32:08.910 align:start position:0%
take their input we take the stream we
 

00:32:08.910 --> 00:32:11.980 align:start position:0%
take their input we take the stream we
map<00:32:09.150><c> our</c><00:32:09.929><c> used</c><00:32:10.380><c> substring</c><00:32:10.800><c> 0</c><00:32:11.100><c> 1</c><00:32:11.309><c> for</c><00:32:11.490><c> this</c><00:32:11.580><c> one</c>

00:32:11.980 --> 00:32:11.990 align:start position:0%
map our used substring 0 1 for this one
 

00:32:11.990 --> 00:32:14.540 align:start position:0%
map our used substring 0 1 for this one
so<00:32:12.990><c> we</c><00:32:13.080><c> mapped</c><00:32:13.290><c> to</c><00:32:13.500><c> the</c><00:32:13.679><c> first</c><00:32:13.980><c> character</c><00:32:14.429><c> in</c>

00:32:14.540 --> 00:32:14.550 align:start position:0%
so we mapped to the first character in
 

00:32:14.550 --> 00:32:17.210 align:start position:0%
so we mapped to the first character in
the<00:32:14.580><c> string</c><00:32:15.059><c> and</c><00:32:15.300><c> then</c><00:32:15.929><c> we</c><00:32:16.050><c> reduce</c><00:32:16.200><c> it</c><00:32:16.559><c> so</c>

00:32:17.210 --> 00:32:17.220 align:start position:0%
the string and then we reduce it so
 

00:32:17.220 --> 00:32:19.130 align:start position:0%
the string and then we reduce it so
we'll<00:32:17.340><c> use</c><00:32:17.490><c> a</c><00:32:17.520><c> reduction</c><00:32:18.210><c> the</c><00:32:18.510><c> reduction</c><00:32:18.960><c> is</c>

00:32:19.130 --> 00:32:19.140 align:start position:0%
we'll use a reduction the reduction is
 

00:32:19.140 --> 00:32:21.530 align:start position:0%
we'll use a reduction the reduction is
where<00:32:20.010><c> we</c><00:32:20.130><c> take</c><00:32:20.550><c> an</c><00:32:20.670><c> initial</c><00:32:20.970><c> value</c><00:32:21.270><c> which</c><00:32:21.300><c> is</c>

00:32:21.530 --> 00:32:21.540 align:start position:0%
where we take an initial value which is
 

00:32:21.540 --> 00:32:23.150 align:start position:0%
where we take an initial value which is
an<00:32:21.630><c> empty</c><00:32:21.840><c> string</c><00:32:22.110><c> and</c><00:32:22.380><c> then</c><00:32:22.860><c> we</c><00:32:22.950><c> use</c><00:32:23.070><c> an</c>

00:32:23.150 --> 00:32:23.160 align:start position:0%
an empty string and then we use an
 

00:32:23.160 --> 00:32:25.940 align:start position:0%
an empty string and then we use an
accumulator<00:32:23.640><c> which</c><00:32:24.270><c> says</c><00:32:24.510><c> take</c><00:32:24.870><c> the</c><00:32:25.230><c> the</c>

00:32:25.940 --> 00:32:25.950 align:start position:0%
accumulator which says take the the
 

00:32:25.950 --> 00:32:28.400 align:start position:0%
accumulator which says take the the
partial<00:32:26.340><c> result</c><00:32:26.610><c> a</c><00:32:26.730><c> and</c><00:32:27.150><c> the</c><00:32:27.660><c> next</c><00:32:27.840><c> element</c><00:32:28.290><c> in</c>

00:32:28.400 --> 00:32:28.410 align:start position:0%
partial result a and the next element in
 

00:32:28.410 --> 00:32:30.850 align:start position:0%
partial result a and the next element in
the<00:32:28.650><c> stream</c><00:32:28.890><c> be</c><00:32:29.250><c> E</c><00:32:29.280><c> and</c><00:32:29.640><c> apply</c><00:32:30.540><c> some</c>

00:32:30.850 --> 00:32:30.860 align:start position:0%
the stream be E and apply some
 

00:32:30.860 --> 00:32:33.140 align:start position:0%
the stream be E and apply some
accumulation<00:32:31.860><c> to</c><00:32:32.040><c> those</c><00:32:32.220><c> so</c><00:32:32.820><c> in</c><00:32:32.910><c> this</c><00:32:33.000><c> case</c>

00:32:33.140 --> 00:32:33.150 align:start position:0%
accumulation to those so in this case
 

00:32:33.150 --> 00:32:36.080 align:start position:0%
accumulation to those so in this case
we're<00:32:33.330><c> just</c><00:32:33.360><c> doing</c><00:32:33.540><c> string</c><00:32:33.929><c> concatenation</c><00:32:35.090><c> so</c>

00:32:36.080 --> 00:32:36.090 align:start position:0%
we're just doing string concatenation so
 

00:32:36.090 --> 00:32:38.060 align:start position:0%
we're just doing string concatenation so
looked<00:32:36.570><c> at</c><00:32:36.660><c> that</c><00:32:36.780><c> and</c><00:32:36.990><c> it</c><00:32:37.050><c> was</c><00:32:37.320><c> like</c><00:32:37.350><c> okay</c><00:32:37.890><c> well</c>

00:32:38.060 --> 00:32:38.070 align:start position:0%
looked at that and it was like okay well
 

00:32:38.070 --> 00:32:39.650 align:start position:0%
looked at that and it was like okay well
that<00:32:38.280><c> doesn't</c><00:32:38.610><c> solve</c><00:32:38.910><c> the</c><00:32:39.059><c> problem</c><00:32:39.150><c> but</c><00:32:39.540><c> it</c>

00:32:39.650 --> 00:32:39.660 align:start position:0%
that doesn't solve the problem but it
 

00:32:39.660 --> 00:32:41.270 align:start position:0%
that doesn't solve the problem but it
doesn't<00:32:39.960><c> do</c><00:32:40.110><c> it</c><00:32:40.200><c> in</c><00:32:40.320><c> a</c><00:32:40.380><c> very</c><00:32:40.559><c> nice</c><00:32:40.679><c> way</c><00:32:40.740><c> because</c>

00:32:41.270 --> 00:32:41.280 align:start position:0%
doesn't do it in a very nice way because
 

00:32:41.280 --> 00:32:43.850 align:start position:0%
doesn't do it in a very nice way because
even<00:32:41.670><c> I</c><00:32:42.030><c> can</c><00:32:42.240><c> see</c><00:32:42.270><c> that</c><00:32:43.170><c> we're</c><00:32:43.470><c> doing</c><00:32:43.559><c> string</c>

00:32:43.850 --> 00:32:43.860 align:start position:0%
even I can see that we're doing string
 

00:32:43.860 --> 00:32:45.200 align:start position:0%
even I can see that we're doing string
concatenation<00:32:44.429><c> there</c><00:32:44.760><c> so</c><00:32:44.910><c> there's</c><00:32:45.030><c> a</c><00:32:45.059><c> lot</c><00:32:45.179><c> of</c>

00:32:45.200 --> 00:32:45.210 align:start position:0%
concatenation there so there's a lot of
 

00:32:45.210 --> 00:32:47.090 align:start position:0%
concatenation there so there's a lot of
intermediate<00:32:45.540><c> objects</c><00:32:46.170><c> being</c><00:32:46.380><c> created</c><00:32:46.830><c> and</c>

00:32:47.090 --> 00:32:47.100 align:start position:0%
intermediate objects being created and
 

00:32:47.100 --> 00:32:49.549 align:start position:0%
intermediate objects being created and
we'll<00:32:47.910><c> have</c><00:32:48.090><c> a</c><00:32:48.120><c> situation</c><00:32:48.570><c> where</c><00:32:49.020><c> if</c><00:32:49.260><c> this</c><00:32:49.380><c> was</c>

00:32:49.549 --> 00:32:49.559 align:start position:0%
we'll have a situation where if this was
 

00:32:49.559 --> 00:32:50.690 align:start position:0%
we'll have a situation where if this was
a<00:32:49.590><c> large</c><00:32:50.010><c> data</c><00:32:50.280><c> set</c>

00:32:50.690 --> 00:32:50.700 align:start position:0%
a large data set
 

00:32:50.700 --> 00:32:52.130 align:start position:0%
a large data set
it'd<00:32:50.850><c> be</c><00:32:51.030><c> very</c><00:32:51.059><c> inefficient</c><00:32:51.450><c> certainly</c>

00:32:52.130 --> 00:32:52.140 align:start position:0%
it'd be very inefficient certainly
 

00:32:52.140 --> 00:32:55.190 align:start position:0%
it'd be very inefficient certainly
compared<00:32:52.620><c> to</c><00:32:52.860><c> the</c><00:32:52.980><c> previous</c><00:32:53.309><c> one</c><00:32:53.660><c> so</c><00:32:54.660><c> then</c><00:32:54.900><c> the</c>

00:32:55.190 --> 00:32:55.200 align:start position:0%
compared to the previous one so then the
 

00:32:55.200 --> 00:32:56.450 align:start position:0%
compared to the previous one so then the
question<00:32:55.290><c> was</c><00:32:55.559><c> well</c><00:32:55.770><c> could</c><00:32:55.980><c> we</c><00:32:56.010><c> do</c><00:32:56.250><c> it</c><00:32:56.340><c> with</c><00:32:56.429><c> a</c>

00:32:56.450 --> 00:32:56.460 align:start position:0%
question was well could we do it with a
 

00:32:56.460 --> 00:32:58.850 align:start position:0%
question was well could we do it with a
reduction<00:32:56.730><c> using</c><00:32:57.690><c> a</c><00:32:57.750><c> string</c><00:32:57.960><c> builder</c><00:32:58.110><c> so</c>

00:32:58.850 --> 00:32:58.860 align:start position:0%
reduction using a string builder so
 

00:32:58.860 --> 00:33:00.440 align:start position:0%
reduction using a string builder so
rather<00:32:59.070><c> than</c><00:32:59.340><c> you</c><00:32:59.670><c> know</c><00:32:59.730><c> using</c><00:33:00.120><c> a</c><00:33:00.179><c> string</c>

00:33:00.440 --> 00:33:00.450 align:start position:0%
rather than you know using a string
 

00:33:00.450 --> 00:33:01.880 align:start position:0%
rather than you know using a string
concatenation<00:33:01.020><c> operation</c><00:33:01.410><c> let's</c><00:33:01.679><c> use</c><00:33:01.860><c> a</c>

00:33:01.880 --> 00:33:01.890 align:start position:0%
concatenation operation let's use a
 

00:33:01.890 --> 00:33:04.370 align:start position:0%
concatenation operation let's use a
string<00:33:02.100><c> builder</c><00:33:02.250><c> so</c><00:33:02.790><c> I</c><00:33:02.820><c> thought</c><00:33:03.150><c> right</c><00:33:03.380><c> let's</c>

00:33:04.370 --> 00:33:04.380 align:start position:0%
string builder so I thought right let's
 

00:33:04.380 --> 00:33:06.380 align:start position:0%
string builder so I thought right let's
see<00:33:04.980><c> if</c><00:33:05.130><c> we</c><00:33:05.220><c> can</c><00:33:05.370><c> do</c><00:33:05.460><c> that</c><00:33:05.640><c> and</c><00:33:05.940><c> I</c><00:33:06.059><c> came</c><00:33:06.210><c> up</c><00:33:06.360><c> with</c>

00:33:06.380 --> 00:33:06.390 align:start position:0%
see if we can do that and I came up with
 

00:33:06.390 --> 00:33:09.980 align:start position:0%
see if we can do that and I came up with
a<00:33:06.510><c> piece</c><00:33:06.630><c> of</c><00:33:06.660><c> code</c><00:33:06.929><c> to</c><00:33:07.410><c> do</c><00:33:07.530><c> that</c><00:33:08.960><c> kind</c><00:33:09.960><c> of</c>

00:33:09.980 --> 00:33:09.990 align:start position:0%
a piece of code to do that kind of
 

00:33:09.990 --> 00:33:11.630 align:start position:0%
a piece of code to do that kind of
interesting<00:33:10.410><c> so</c><00:33:11.010><c> we</c><00:33:11.130><c> create</c><00:33:11.340><c> a</c><00:33:11.370><c> new</c><00:33:11.460><c> string</c>

00:33:11.630 --> 00:33:11.640 align:start position:0%
interesting so we create a new string
 

00:33:11.640 --> 00:33:14.630 align:start position:0%
interesting so we create a new string
builder<00:33:11.790><c> and</c><00:33:12.179><c> then</c><00:33:12.780><c> we</c><00:33:12.900><c> say</c><00:33:13.050><c> take</c><00:33:14.010><c> the</c><00:33:14.160><c> input</c>

00:33:14.630 --> 00:33:14.640 align:start position:0%
builder and then we say take the input
 

00:33:14.640 --> 00:33:16.370 align:start position:0%
builder and then we say take the input
stream<00:33:14.850><c> and</c><00:33:15.120><c> then</c><00:33:15.660><c> we'll</c><00:33:15.780><c> map</c><00:33:15.929><c> it</c><00:33:16.050><c> to</c><00:33:16.080><c> our</c>

00:33:16.370 --> 00:33:16.380 align:start position:0%
stream and then we'll map it to our
 

00:33:16.380 --> 00:33:18.560 align:start position:0%
stream and then we'll map it to our
substring<00:33:16.800><c> and</c><00:33:16.980><c> then</c><00:33:17.070><c> we'll</c><00:33:17.190><c> reduce</c><00:33:17.340><c> it</c><00:33:17.730><c> but</c>

00:33:18.560 --> 00:33:18.570 align:start position:0%
substring and then we'll reduce it but
 

00:33:18.570 --> 00:33:20.090 align:start position:0%
substring and then we'll reduce it but
this<00:33:18.690><c> time</c><00:33:18.929><c> we'll</c><00:33:19.320><c> use</c><00:33:19.530><c> our</c><00:33:19.679><c> string</c><00:33:19.950><c> builder</c>

00:33:20.090 --> 00:33:20.100 align:start position:0%
this time we'll use our string builder
 

00:33:20.100 --> 00:33:23.240 align:start position:0%
this time we'll use our string builder
in<00:33:20.490><c> the</c><00:33:21.170><c> reduction</c><00:33:22.170><c> and</c><00:33:22.350><c> we'll</c><00:33:22.740><c> say</c><00:33:22.890><c> that</c><00:33:23.070><c> the</c>

00:33:23.240 --> 00:33:23.250 align:start position:0%
in the reduction and we'll say that the
 

00:33:23.250 --> 00:33:25.760 align:start position:0%
in the reduction and we'll say that the
accumulator<00:33:23.760><c> is</c><00:33:23.970><c> to</c><00:33:24.120><c> append</c><00:33:24.510><c> B</c><00:33:24.840><c> and</c><00:33:25.200><c> then</c>

00:33:25.760 --> 00:33:25.770 align:start position:0%
accumulator is to append B and then
 

00:33:25.770 --> 00:33:27.500 align:start position:0%
accumulator is to append B and then
returned<00:33:26.160><c> that</c><00:33:26.309><c> as</c><00:33:26.460><c> a</c><00:33:26.490><c> string</c><00:33:26.820><c> so</c><00:33:27.480><c> that</c>

00:33:27.500 --> 00:33:27.510 align:start position:0%
returned that as a string so that
 

00:33:27.510 --> 00:33:31.130 align:start position:0%
returned that as a string so that
creates<00:33:27.929><c> a</c><00:33:28.020><c> new</c><00:33:28.820><c> puncture</c><00:33:29.820><c> result</c><00:33:30.150><c> by</c><00:33:30.660><c> pending</c>

00:33:31.130 --> 00:33:31.140 align:start position:0%
creates a new puncture result by pending
 

00:33:31.140 --> 00:33:35.210 align:start position:0%
creates a new puncture result by pending
B<00:33:31.350><c> to</c><00:33:31.740><c> our</c><00:33:31.860><c> string</c><00:33:32.240><c> so</c><00:33:33.240><c> then</c><00:33:33.780><c> we</c><00:33:34.410><c> the</c><00:33:34.830><c> results</c>

00:33:35.210 --> 00:33:35.220 align:start position:0%
B to our string so then we the results
 

00:33:35.220 --> 00:33:36.500 align:start position:0%
B to our string so then we the results
because<00:33:35.520><c> it's</c><00:33:35.640><c> an</c><00:33:35.730><c> optional</c><00:33:36.030><c> we</c><00:33:36.150><c> can't</c><00:33:36.330><c> need</c>

00:33:36.500 --> 00:33:36.510 align:start position:0%
because it's an optional we can't need
 

00:33:36.510 --> 00:33:38.630 align:start position:0%
because it's an optional we can't need
to<00:33:36.660><c> return</c><00:33:37.380><c> what</c><00:33:37.830><c> the</c><00:33:37.980><c> value</c><00:33:38.280><c> of</c><00:33:38.340><c> the</c><00:33:38.400><c> option</c>

00:33:38.630 --> 00:33:38.640 align:start position:0%
to return what the value of the option
 

00:33:38.640 --> 00:33:41.840 align:start position:0%
to return what the value of the option
is<00:33:38.760><c> so</c><00:33:39.090><c> who</c><00:33:39.210><c> thinks</c><00:33:39.360><c> that</c><00:33:39.510><c> would</c><00:33:39.750><c> work</c><00:33:40.730><c> okay</c>

00:33:41.840 --> 00:33:41.850 align:start position:0%
is so who thinks that would work okay
 

00:33:41.850 --> 00:33:44.360 align:start position:0%
is so who thinks that would work okay
yes<00:33:42.030><c> good</c><00:33:42.710><c> well</c><00:33:43.710><c> I'm</c><00:33:43.800><c> obviously</c><00:33:43.920><c> not</c><00:33:44.190><c> going</c><00:33:44.309><c> to</c>

00:33:44.360 --> 00:33:44.370 align:start position:0%
yes good well I'm obviously not going to
 

00:33:44.370 --> 00:33:45.790 align:start position:0%
yes good well I'm obviously not going to
ask<00:33:44.460><c> that</c><00:33:44.580><c> question</c><00:33:44.760><c> if</c><00:33:45.030><c> it</c><00:33:45.120><c> did</c><00:33:45.270><c> work</c><00:33:45.390><c> am</c><00:33:45.630><c> i</c>

00:33:45.790 --> 00:33:45.800 align:start position:0%
ask that question if it did work am i
 

00:33:45.800 --> 00:33:48.680 align:start position:0%
ask that question if it did work am i
okay<00:33:46.800><c> so</c><00:33:46.860><c> that</c><00:33:47.130><c> that</c><00:33:47.309><c> fails</c><00:33:47.640><c> okay</c><00:33:48.510><c> anybody</c>

00:33:48.680 --> 00:33:48.690 align:start position:0%
okay so that that fails okay anybody
 

00:33:48.690 --> 00:33:52.810 align:start position:0%
okay so that that fails okay anybody
want<00:33:48.870><c> to</c><00:33:49.200><c> guess</c><00:33:49.410><c> what</c><00:33:49.679><c> the</c><00:33:49.740><c> actual</c><00:33:50.190><c> result</c><00:33:50.580><c> is</c>

00:33:52.810 --> 00:33:52.820 align:start position:0%
 
 

00:33:52.820 --> 00:33:57.770 align:start position:0%
 
nope<00:33:54.140><c> second</c><00:33:56.210><c> not</c><00:33:57.210><c> a</c><00:33:57.240><c> different</c><00:33:57.570><c> order</c><00:33:57.720><c> of</c>

00:33:57.770 --> 00:33:57.780 align:start position:0%
nope second not a different order of
 

00:33:57.780 --> 00:34:00.320 align:start position:0%
nope second not a different order of
letters<00:33:58.050><c> now</c><00:33:58.170><c> actually</c><00:33:58.500><c> what</c><00:33:58.680><c> you</c><00:33:58.770><c> get</c><00:33:58.980><c> is</c><00:33:59.220><c> b</c><00:33:59.820><c> c</c>

00:34:00.320 --> 00:34:00.330 align:start position:0%
letters now actually what you get is b c
 

00:34:00.330 --> 00:34:03.860 align:start position:0%
letters now actually what you get is b c
d<00:34:00.360><c> e</c><00:34:00.750><c> f</c><00:34:01.020><c> the</c><00:34:01.800><c> reason</c><00:34:02.070><c> for</c><00:34:02.190><c> that</c><00:34:02.250><c> is</c><00:34:02.760><c> that</c><00:34:03.240><c> if</c><00:34:03.780><c> you</c>

00:34:03.860 --> 00:34:03.870 align:start position:0%
d e f the reason for that is that if you
 

00:34:03.870 --> 00:34:05.330 align:start position:0%
d e f the reason for that is that if you
look<00:34:04.020><c> at</c><00:34:04.110><c> the</c><00:34:04.170><c> reduce</c><00:34:04.560><c> there</c><00:34:04.830><c> you've</c><00:34:05.070><c> got</c><00:34:05.190><c> a</c>

00:34:05.330 --> 00:34:05.340 align:start position:0%
look at the reduce there you've got a
 

00:34:05.340 --> 00:34:08.030 align:start position:0%
look at the reduce there you've got a
and<00:34:05.640><c> b</c><00:34:06.000><c> and</c><00:34:06.300><c> i've</c><00:34:06.720><c> conveniently</c><00:34:07.410><c> ignored</c><00:34:07.800><c> a</c>

00:34:08.030 --> 00:34:08.040 align:start position:0%
and b and i've conveniently ignored a
 

00:34:08.040 --> 00:34:10.940 align:start position:0%
and b and i've conveniently ignored a
now<00:34:08.970><c> a</c><00:34:09.179><c> is</c><00:34:09.360><c> the</c><00:34:09.510><c> partial</c><00:34:10.020><c> result</c><00:34:10.380><c> and</c><00:34:10.710><c> when</c><00:34:10.860><c> you</c>

00:34:10.940 --> 00:34:10.950 align:start position:0%
now a is the partial result and when you
 

00:34:10.950 --> 00:34:13.250 align:start position:0%
now a is the partial result and when you
first<00:34:11.220><c> start</c><00:34:11.700><c> processing</c><00:34:12.540><c> the</c><00:34:12.720><c> stream</c><00:34:13.050><c> the</c>

00:34:13.250 --> 00:34:13.260 align:start position:0%
first start processing the stream the
 

00:34:13.260 --> 00:34:15.500 align:start position:0%
first start processing the stream the
first<00:34:13.560><c> partial</c><00:34:13.890><c> result</c><00:34:14.429><c> is</c><00:34:14.610><c> the</c><00:34:14.910><c> first</c>

00:34:15.500 --> 00:34:15.510 align:start position:0%
first partial result is the first
 

00:34:15.510 --> 00:34:17.630 align:start position:0%
first partial result is the first
element<00:34:16.050><c> in</c><00:34:16.200><c> that</c><00:34:16.260><c> stream</c><00:34:16.710><c> so</c><00:34:17.310><c> if</c><00:34:17.400><c> you</c><00:34:17.490><c> ignore</c>

00:34:17.630 --> 00:34:17.640 align:start position:0%
element in that stream so if you ignore
 

00:34:17.640 --> 00:34:20.120 align:start position:0%
element in that stream so if you ignore
the<00:34:17.940><c> first</c><00:34:18.240><c> partial</c><00:34:18.750><c> result</c><00:34:19.110><c> then</c><00:34:19.800><c> you</c><00:34:19.830><c> don't</c>

00:34:20.120 --> 00:34:20.130 align:start position:0%
the first partial result then you don't
 

00:34:20.130 --> 00:34:22.550 align:start position:0%
the first partial result then you don't
get<00:34:20.400><c> a</c><00:34:20.640><c> in</c><00:34:21.179><c> your</c><00:34:21.690><c> straight</c><00:34:21.990><c> in</c><00:34:22.140><c> your</c><00:34:22.320><c> stream</c>

00:34:22.550 --> 00:34:22.560 align:start position:0%
get a in your straight in your stream
 

00:34:22.560 --> 00:34:25.310 align:start position:0%
get a in your straight in your stream
you<00:34:22.830><c> don't</c><00:34:22.980><c> get</c><00:34:23.130><c> the</c><00:34:23.280><c> what</c><00:34:23.820><c> you</c><00:34:23.910><c> need</c><00:34:24.290><c> so</c><00:34:25.290><c> I</c>

00:34:25.310 --> 00:34:25.320 align:start position:0%
you don't get the what you need so I
 

00:34:25.320 --> 00:34:27.950 align:start position:0%
you don't get the what you need so I
thought<00:34:25.470><c> to</c><00:34:25.560><c> myself</c><00:34:26.000><c> I'm</c><00:34:27.000><c> not</c><00:34:27.330><c> going</c><00:34:27.630><c> to</c><00:34:27.810><c> be</c>

00:34:27.950 --> 00:34:27.960 align:start position:0%
thought to myself I'm not going to be
 

00:34:27.960 --> 00:34:29.810 align:start position:0%
thought to myself I'm not going to be
defeated<00:34:28.230><c> by</c><00:34:28.530><c> this</c><00:34:28.590><c> there</c><00:34:29.130><c> is</c><00:34:29.220><c> a</c><00:34:29.250><c> way</c><00:34:29.490><c> to</c><00:34:29.550><c> do</c>

00:34:29.810 --> 00:34:29.820 align:start position:0%
defeated by this there is a way to do
 

00:34:29.820 --> 00:34:31.430 align:start position:0%
defeated by this there is a way to do
this<00:34:30.000><c> using</c><00:34:30.270><c> a</c><00:34:30.450><c> string</c><00:34:30.690><c> builder</c><00:34:30.810><c> and</c><00:34:31.260><c> so</c><00:34:31.410><c> I</c>

00:34:31.430 --> 00:34:31.440 align:start position:0%
this using a string builder and so I
 

00:34:31.440 --> 00:34:35.390 align:start position:0%
this using a string builder and so I
came<00:34:31.710><c> up</c><00:34:31.860><c> with</c><00:34:31.910><c> this</c><00:34:33.230><c> so</c><00:34:34.230><c> I</c><00:34:34.260><c> said</c><00:34:34.470><c> okay</c><00:34:34.830><c> let's</c>

00:34:35.390 --> 00:34:35.400 align:start position:0%
came up with this so I said okay let's
 

00:34:35.400 --> 00:34:38.060 align:start position:0%
came up with this so I said okay let's
be<00:34:35.520><c> sneaky</c><00:34:35.850><c> about</c><00:34:36.000><c> this</c><00:34:36.470><c> let's</c><00:34:37.470><c> say</c><00:34:37.650><c> if</c><00:34:37.860><c> a</c>

00:34:38.060 --> 00:34:38.070 align:start position:0%
be sneaky about this let's say if a
 

00:34:38.070 --> 00:34:40.250 align:start position:0%
be sneaky about this let's say if a
which<00:34:38.700><c> is</c><00:34:38.850><c> our</c><00:34:39.000><c> partial</c><00:34:39.360><c> result</c><00:34:39.630><c> has</c><00:34:39.870><c> a</c><00:34:39.900><c> length</c>

00:34:40.250 --> 00:34:40.260 align:start position:0%
which is our partial result has a length
 

00:34:40.260 --> 00:34:42.440 align:start position:0%
which is our partial result has a length
of<00:34:40.410><c> 1</c><00:34:40.470><c> that</c><00:34:41.280><c> means</c><00:34:41.460><c> it's</c><00:34:41.610><c> the</c><00:34:41.700><c> first</c><00:34:41.970><c> element</c>

00:34:42.440 --> 00:34:42.450 align:start position:0%
of 1 that means it's the first element
 

00:34:42.450 --> 00:34:44.720 align:start position:0%
of 1 that means it's the first element
because<00:34:42.660><c> it's</c><00:34:42.840><c> only</c><00:34:43.290><c> a</c><00:34:43.380><c> 1</c><00:34:43.620><c> character</c><00:34:44.010><c> then</c>

00:34:44.720 --> 00:34:44.730 align:start position:0%
because it's only a 1 character then
 

00:34:44.730 --> 00:34:46.909 align:start position:0%
because it's only a 1 character then
we'll<00:34:44.970><c> append</c><00:34:45.300><c> a</c><00:34:45.570><c> to</c><00:34:46.440><c> our</c><00:34:46.470><c> string</c><00:34:46.800><c> builder</c>

00:34:46.909 --> 00:34:46.919 align:start position:0%
we'll append a to our string builder
 

00:34:46.919 --> 00:34:48.950 align:start position:0%
we'll append a to our string builder
otherwise<00:34:47.669><c> we</c><00:34:47.880><c> ignore</c><00:34:48.120><c> that</c><00:34:48.270><c> and</c><00:34:48.600><c> we</c><00:34:48.750><c> simply</c>

00:34:48.950 --> 00:34:48.960 align:start position:0%
otherwise we ignore that and we simply
 

00:34:48.960 --> 00:34:52.700 align:start position:0%
otherwise we ignore that and we simply
return<00:34:49.910><c> there</c><00:34:50.910><c> speed</c><00:34:51.150><c> append</c><00:34:51.540><c> B</c><00:34:51.780><c> to</c><00:34:52.230><c> string</c>

00:34:52.700 --> 00:34:52.710 align:start position:0%
return there speed append B to string
 

00:34:52.710 --> 00:34:54.860 align:start position:0%
return there speed append B to string
great<00:34:53.130><c> and</c><00:34:53.429><c> that</c><00:34:54.060><c> actually</c><00:34:54.450><c> gives</c><00:34:54.570><c> you</c><00:34:54.750><c> the</c>

00:34:54.860 --> 00:34:54.870 align:start position:0%
great and that actually gives you the
 

00:34:54.870 --> 00:34:57.560 align:start position:0%
great and that actually gives you the
right<00:34:55.020><c> result</c><00:34:55.790><c> clearly</c><00:34:56.790><c> that</c><00:34:56.970><c> is</c><00:34:57.180><c> probably</c>

00:34:57.560 --> 00:34:57.570 align:start position:0%
right result clearly that is probably
 

00:34:57.570 --> 00:34:58.520 align:start position:0%
right result clearly that is probably
not<00:34:57.750><c> the</c><00:34:57.960><c> best</c><00:34:58.140><c> approach</c>

00:34:58.520 --> 00:34:58.530 align:start position:0%
not the best approach
 

00:34:58.530 --> 00:35:00.710 align:start position:0%
not the best approach
so<00:34:59.520><c> then</c><00:34:59.670><c> we</c><00:35:00.060><c> kind</c><00:35:00.240><c> of</c><00:35:00.300><c> discussed</c><00:35:00.600><c> this</c>

00:35:00.710 --> 00:35:00.720 align:start position:0%
so then we kind of discussed this
 

00:35:00.720 --> 00:35:02.210 align:start position:0%
so then we kind of discussed this
further<00:35:00.990><c> in</c><00:35:01.140><c> the</c><00:35:01.200><c> class</c><00:35:01.410><c> and</c><00:35:01.620><c> we</c><00:35:01.710><c> said</c><00:35:01.860><c> ok</c><00:35:02.070><c> well</c>

00:35:02.210 --> 00:35:02.220 align:start position:0%
further in the class and we said ok well
 

00:35:02.220 --> 00:35:04.850 align:start position:0%
further in the class and we said ok well
rather<00:35:03.000><c> than</c><00:35:03.150><c> using</c><00:35:03.570><c> an</c><00:35:03.720><c> explicit</c><00:35:04.140><c> reduction</c>

00:35:04.850 --> 00:35:04.860 align:start position:0%
rather than using an explicit reduction
 

00:35:04.860 --> 00:35:08.060 align:start position:0%
rather than using an explicit reduction
let's<00:35:05.520><c> use</c><00:35:05.940><c> a</c><00:35:06.270><c> form</c><00:35:07.080><c> of</c><00:35:07.200><c> reduction</c><00:35:07.680><c> which</c><00:35:07.920><c> is</c><00:35:08.040><c> a</c>

00:35:08.060 --> 00:35:08.070 align:start position:0%
let's use a form of reduction which is a
 

00:35:08.070 --> 00:35:10.910 align:start position:0%
let's use a form of reduction which is a
collection<00:35:08.480><c> ok</c><00:35:09.480><c> now</c><00:35:10.200><c> you</c><00:35:10.260><c> can</c><00:35:10.380><c> create</c><00:35:10.800><c> your</c>

00:35:10.910 --> 00:35:10.920 align:start position:0%
collection ok now you can create your
 

00:35:10.920 --> 00:35:13.010 align:start position:0%
collection ok now you can create your
own<00:35:10.980><c> collector</c><00:35:11.730><c> so</c><00:35:12.270><c> what</c><00:35:12.480><c> we</c><00:35:12.570><c> could</c><00:35:12.660><c> do</c><00:35:12.780><c> is</c><00:35:12.900><c> we</c>

00:35:13.010 --> 00:35:13.020 align:start position:0%
own collector so what we could do is we
 

00:35:13.020 --> 00:35:14.900 align:start position:0%
own collector so what we could do is we
could<00:35:13.140><c> say</c><00:35:13.320><c> let's</c><00:35:13.980><c> collect</c><00:35:14.280><c> and</c><00:35:14.640><c> then</c><00:35:14.790><c> we'll</c>

00:35:14.900 --> 00:35:14.910 align:start position:0%
could say let's collect and then we'll
 

00:35:14.910 --> 00:35:16.850 align:start position:0%
could say let's collect and then we'll
say<00:35:15.060><c> collector</c><00:35:15.600><c> dot</c><00:35:15.750><c> off</c><00:35:15.990><c> and</c><00:35:16.260><c> we'll</c><00:35:16.380><c> create</c><00:35:16.560><c> a</c>

00:35:16.850 --> 00:35:16.860 align:start position:0%
say collector dot off and we'll create a
 

00:35:16.860 --> 00:35:18.860 align:start position:0%
say collector dot off and we'll create a
new<00:35:16.890><c> collector</c><00:35:17.610><c> and</c><00:35:18.300><c> the</c><00:35:18.390><c> way</c><00:35:18.480><c> you</c><00:35:18.540><c> create</c>

00:35:18.860 --> 00:35:18.870 align:start position:0%
new collector and the way you create
 

00:35:18.870 --> 00:35:20.960 align:start position:0%
new collector and the way you create
collectors<00:35:19.320><c> you</c><00:35:19.440><c> need</c><00:35:19.590><c> to</c><00:35:19.680><c> provide</c><00:35:20.010><c> a</c><00:35:20.340><c> number</c>

00:35:20.960 --> 00:35:20.970 align:start position:0%
collectors you need to provide a number
 

00:35:20.970 --> 00:35:23.380 align:start position:0%
collectors you need to provide a number
of<00:35:21.170><c> components</c><00:35:22.170><c> if</c><00:35:22.290><c> you</c><00:35:22.380><c> like</c><00:35:22.560><c> to</c><00:35:22.830><c> the</c>

00:35:23.380 --> 00:35:23.390 align:start position:0%
of components if you like to the
 

00:35:23.390 --> 00:35:25.640 align:start position:0%
of components if you like to the
collector<00:35:24.390><c> so</c><00:35:24.870><c> the</c><00:35:24.960><c> first</c><00:35:25.170><c> of</c><00:35:25.260><c> those</c><00:35:25.380><c> is</c><00:35:25.440><c> the</c>

00:35:25.640 --> 00:35:25.650 align:start position:0%
collector so the first of those is the
 

00:35:25.650 --> 00:35:27.830 align:start position:0%
collector so the first of those is the
supplier<00:35:26.100><c> what</c><00:35:26.880><c> are</c><00:35:27.030><c> we</c><00:35:27.120><c> going</c><00:35:27.270><c> to</c><00:35:27.450><c> collect</c>

00:35:27.830 --> 00:35:27.840 align:start position:0%
supplier what are we going to collect
 

00:35:27.840 --> 00:35:29.990 align:start position:0%
supplier what are we going to collect
into<00:35:28.320><c> so</c><00:35:29.070><c> we'll</c><00:35:29.190><c> say</c><00:35:29.340><c> in</c><00:35:29.460><c> this</c><00:35:29.550><c> case</c><00:35:29.700><c> it's</c><00:35:29.940><c> a</c>

00:35:29.990 --> 00:35:30.000 align:start position:0%
into so we'll say in this case it's a
 

00:35:30.000 --> 00:35:31.790 align:start position:0%
into so we'll say in this case it's a
stringbuilder<00:35:30.270><c> so</c><00:35:30.660><c> we</c><00:35:30.840><c> want</c><00:35:31.020><c> to</c><00:35:31.230><c> use</c>

00:35:31.790 --> 00:35:31.800 align:start position:0%
stringbuilder so we want to use
 

00:35:31.800 --> 00:35:32.990 align:start position:0%
stringbuilder so we want to use
moving<00:35:32.130><c> on</c><00:35:32.190><c> to</c><00:35:32.280><c> generate</c><00:35:32.580><c> a</c><00:35:32.640><c> new</c><00:35:32.760><c> string</c>

00:35:32.990 --> 00:35:33.000 align:start position:0%
moving on to generate a new string
 

00:35:33.000 --> 00:35:37.400 align:start position:0%
moving on to generate a new string
builder<00:35:33.120><c> so</c><00:35:33.480><c> we</c><00:35:33.600><c> use</c><00:35:33.930><c> the</c><00:35:34.140><c> the</c><00:35:36.410><c> constructor</c>

00:35:37.400 --> 00:35:37.410 align:start position:0%
builder so we use the the constructor
 

00:35:37.410 --> 00:35:38.650 align:start position:0%
builder so we use the the constructor
reference<00:35:37.740><c> that's</c><00:35:38.040><c> what</c><00:35:38.130><c> I'm</c><00:35:38.190><c> looking</c><00:35:38.400><c> for</c>

00:35:38.650 --> 00:35:38.660 align:start position:0%
reference that's what I'm looking for
 

00:35:38.660 --> 00:35:42.170 align:start position:0%
reference that's what I'm looking for
then<00:35:39.660><c> you</c><00:35:39.690><c> need</c><00:35:39.960><c> an</c><00:35:40.470><c> accumulator</c><00:35:41.280><c> so</c><00:35:41.850><c> sames</c>

00:35:42.170 --> 00:35:42.180 align:start position:0%
then you need an accumulator so sames
 

00:35:42.180 --> 00:35:43.550 align:start position:0%
then you need an accumulator so sames
maybe<00:35:42.600><c> we're</c><00:35:42.690><c> doing</c><00:35:42.840><c> a</c><00:35:42.900><c> reduction</c><00:35:43.230><c> so</c><00:35:43.260><c> we</c><00:35:43.440><c> need</c>

00:35:43.550 --> 00:35:43.560 align:start position:0%
maybe we're doing a reduction so we need
 

00:35:43.560 --> 00:35:45.110 align:start position:0%
maybe we're doing a reduction so we need
an<00:35:43.650><c> accumulator</c><00:35:44.040><c> and</c><00:35:44.160><c> in</c><00:35:44.400><c> this</c><00:35:44.520><c> case</c><00:35:44.700><c> we</c><00:35:44.910><c> want</c>

00:35:45.110 --> 00:35:45.120 align:start position:0%
an accumulator and in this case we want
 

00:35:45.120 --> 00:35:47.240 align:start position:0%
an accumulator and in this case we want
to<00:35:45.210><c> append</c><00:35:45.540><c> the</c><00:35:45.870><c> string</c><00:35:46.380><c> to</c><00:35:46.740><c> the</c><00:35:47.070><c> string</c>

00:35:47.240 --> 00:35:47.250 align:start position:0%
to append the string to the string
 

00:35:47.250 --> 00:35:49.970 align:start position:0%
to append the string to the string
builder<00:35:47.370><c> great</c><00:35:48.200><c> then</c><00:35:49.200><c> third</c><00:35:49.500><c> arguments</c><00:35:49.950><c> a</c>

00:35:49.970 --> 00:35:49.980 align:start position:0%
builder great then third arguments a
 

00:35:49.980 --> 00:35:51.680 align:start position:0%
builder great then third arguments a
little<00:35:50.130><c> bit</c><00:35:50.220><c> odd</c><00:35:50.370><c> because</c><00:35:50.820><c> you</c><00:35:51.240><c> need</c><00:35:51.450><c> a</c>

00:35:51.680 --> 00:35:51.690 align:start position:0%
little bit odd because you need a
 

00:35:51.690 --> 00:35:54.410 align:start position:0%
little bit odd because you need a
combiner<00:35:52.170><c> and</c><00:35:52.500><c> a</c><00:35:52.830><c> combiner</c><00:35:53.220><c> in</c><00:35:53.820><c> this</c><00:35:54.000><c> case</c><00:35:54.210><c> is</c>

00:35:54.410 --> 00:35:54.420 align:start position:0%
combiner and a combiner in this case is
 

00:35:54.420 --> 00:35:57.260 align:start position:0%
combiner and a combiner in this case is
the<00:35:54.600><c> same</c><00:35:54.810><c> as</c><00:35:55.110><c> the</c><00:35:55.530><c> accumulator</c><00:35:56.070><c> the</c><00:35:56.970><c> reason</c>

00:35:57.260 --> 00:35:57.270 align:start position:0%
the same as the accumulator the reason
 

00:35:57.270 --> 00:35:59.060 align:start position:0%
the same as the accumulator the reason
for<00:35:57.420><c> having</c><00:35:57.510><c> a</c><00:35:57.690><c> combiner</c><00:35:58.080><c> and</c><00:35:58.290><c> an</c><00:35:58.560><c> accumulator</c>

00:35:59.060 --> 00:35:59.070 align:start position:0%
for having a combiner and an accumulator
 

00:35:59.070 --> 00:36:01.430 align:start position:0%
for having a combiner and an accumulator
is<00:35:59.400><c> that</c><00:36:00.000><c> this</c><00:36:00.120><c> potentially</c><00:36:00.690><c> could</c><00:36:00.840><c> be</c><00:36:01.080><c> split</c>

00:36:01.430 --> 00:36:01.440 align:start position:0%
is that this potentially could be split
 

00:36:01.440 --> 00:36:04.250 align:start position:0%
is that this potentially could be split
into<00:36:01.650><c> multiple</c><00:36:01.800><c> threads</c><00:36:02.280><c> so</c><00:36:03.240><c> each</c><00:36:03.720><c> thread</c>

00:36:04.250 --> 00:36:04.260 align:start position:0%
into multiple threads so each thread
 

00:36:04.260 --> 00:36:05.000 align:start position:0%
into multiple threads so each thread
will

00:36:05.000 --> 00:36:05.010 align:start position:0%
will
 

00:36:05.010 --> 00:36:06.740 align:start position:0%
will
use<00:36:05.100><c> the</c><00:36:05.220><c> accumulator</c><00:36:05.670><c> to</c><00:36:05.850><c> generate</c><00:36:06.450><c> its</c>

00:36:06.740 --> 00:36:06.750 align:start position:0%
use the accumulator to generate its
 

00:36:06.750 --> 00:36:09.170 align:start position:0%
use the accumulator to generate its
particular<00:36:07.260><c> result</c><00:36:07.740><c> and</c><00:36:08.220><c> then</c><00:36:08.520><c> the</c><00:36:08.790><c> combiner</c>

00:36:09.170 --> 00:36:09.180 align:start position:0%
particular result and then the combiner
 

00:36:09.180 --> 00:36:11.060 align:start position:0%
particular result and then the combiner
is<00:36:09.510><c> used</c><00:36:09.810><c> to</c><00:36:09.930><c> combine</c><00:36:10.110><c> the</c><00:36:10.470><c> results</c><00:36:10.830><c> of</c><00:36:10.950><c> each</c>

00:36:11.060 --> 00:36:11.070 align:start position:0%
is used to combine the results of each
 

00:36:11.070 --> 00:36:15.040 align:start position:0%
is used to combine the results of each
thread<00:36:11.400><c> into</c><00:36:11.700><c> a</c><00:36:11.940><c> single</c><00:36:12.740><c> result</c><00:36:13.740><c> for</c><00:36:14.160><c> the</c>

00:36:15.040 --> 00:36:15.050 align:start position:0%
thread into a single result for the
 

00:36:15.050 --> 00:36:17.570 align:start position:0%
thread into a single result for the
collection<00:36:16.050><c> so</c><00:36:16.710><c> they</c><00:36:16.920><c> could</c><00:36:17.100><c> potentially</c><00:36:17.310><c> be</c>

00:36:17.570 --> 00:36:17.580 align:start position:0%
collection so they could potentially be
 

00:36:17.580 --> 00:36:18.530 align:start position:0%
collection so they could potentially be
different<00:36:17.820><c> but</c><00:36:17.940><c> in</c><00:36:18.000><c> this</c><00:36:18.090><c> case</c><00:36:18.270><c> they're</c>

00:36:18.530 --> 00:36:18.540 align:start position:0%
different but in this case they're
 

00:36:18.540 --> 00:36:20.450 align:start position:0%
different but in this case they're
they're<00:36:18.780><c> the</c><00:36:18.900><c> same</c><00:36:19.050><c> and</c><00:36:19.320><c> then</c><00:36:19.980><c> you</c><00:36:20.280><c> need</c><00:36:20.430><c> a</c>

00:36:20.450 --> 00:36:20.460 align:start position:0%
they're the same and then you need a
 

00:36:20.460 --> 00:36:22.550 align:start position:0%
they're the same and then you need a
finisher<00:36:21.000><c> which</c><00:36:21.450><c> is</c><00:36:21.630><c> how</c><00:36:21.870><c> you</c><00:36:21.930><c> generate</c><00:36:22.110><c> the</c>

00:36:22.550 --> 00:36:22.560 align:start position:0%
finisher which is how you generate the
 

00:36:22.560 --> 00:36:24.890 align:start position:0%
finisher which is how you generate the
result<00:36:22.830><c> from</c><00:36:23.070><c> the</c><00:36:24.030><c> the</c><00:36:24.420><c> work</c><00:36:24.570><c> that</c><00:36:24.780><c> you've</c>

00:36:24.890 --> 00:36:24.900 align:start position:0%
result from the the work that you've
 

00:36:24.900 --> 00:36:26.510 align:start position:0%
result from the the work that you've
been<00:36:24.930><c> doing</c><00:36:25.080><c> and</c><00:36:25.500><c> in</c><00:36:26.040><c> this</c><00:36:26.100><c> case</c><00:36:26.310><c> we're</c><00:36:26.490><c> just</c>

00:36:26.510 --> 00:36:26.520 align:start position:0%
been doing and in this case we're just
 

00:36:26.520 --> 00:36:29.480 align:start position:0%
been doing and in this case we're just
calling<00:36:26.790><c> the</c><00:36:27.000><c> to</c><00:36:27.120><c> string</c><00:36:27.360><c> on</c><00:36:27.420><c> that</c><00:36:27.740><c> now</c><00:36:28.740><c> that</c>

00:36:29.480 --> 00:36:29.490 align:start position:0%
calling the to string on that now that
 

00:36:29.490 --> 00:36:32.780 align:start position:0%
calling the to string on that now that
obviously<00:36:29.820><c> works</c><00:36:30.450><c> and</c><00:36:30.920><c> is</c><00:36:31.920><c> fine</c><00:36:32.430><c> but</c><00:36:32.610><c> there</c><00:36:32.700><c> is</c>

00:36:32.780 --> 00:36:32.790 align:start position:0%
obviously works and is fine but there is
 

00:36:32.790 --> 00:36:34.700 align:start position:0%
obviously works and is fine but there is
actually<00:36:32.940><c> a</c><00:36:33.120><c> much</c><00:36:33.300><c> simpler</c><00:36:33.990><c> way</c><00:36:34.170><c> of</c><00:36:34.470><c> doing</c>

00:36:34.700 --> 00:36:34.710 align:start position:0%
actually a much simpler way of doing
 

00:36:34.710 --> 00:36:36.950 align:start position:0%
actually a much simpler way of doing
this<00:36:34.830><c> which</c><00:36:35.550><c> is</c><00:36:35.760><c> just</c><00:36:35.790><c> use</c><00:36:36.330><c> collectors</c>

00:36:36.950 --> 00:36:36.960 align:start position:0%
this which is just use collectors
 

00:36:36.960 --> 00:36:39.350 align:start position:0%
this which is just use collectors
joining<00:36:37.620><c> so</c><00:36:38.040><c> use</c><00:36:38.220><c> the</c><00:36:38.400><c> existing</c><00:36:38.820><c> collector</c>

00:36:39.350 --> 00:36:39.360 align:start position:0%
joining so use the existing collector
 

00:36:39.360 --> 00:36:40.730 align:start position:0%
joining so use the existing collector
and<00:36:39.660><c> in</c><00:36:39.780><c> fact</c><00:36:39.930><c> if</c><00:36:40.110><c> you</c><00:36:40.140><c> look</c><00:36:40.320><c> at</c><00:36:40.380><c> the</c><00:36:40.530><c> source</c>

00:36:40.730 --> 00:36:40.740 align:start position:0%
and in fact if you look at the source
 

00:36:40.740 --> 00:36:42.110 align:start position:0%
and in fact if you look at the source
code<00:36:40.800><c> for</c><00:36:40.980><c> collectors</c><00:36:41.370><c> joining</c><00:36:41.880><c> what</c><00:36:42.000><c> you'll</c>

00:36:42.110 --> 00:36:42.120 align:start position:0%
code for collectors joining what you'll
 

00:36:42.120 --> 00:36:43.610 align:start position:0%
code for collectors joining what you'll
find<00:36:42.270><c> is</c><00:36:42.450><c> it's</c><00:36:42.630><c> exactly</c><00:36:42.720><c> the</c><00:36:43.200><c> same</c><00:36:43.320><c> as</c><00:36:43.380><c> the</c>

00:36:43.610 --> 00:36:43.620 align:start position:0%
find is it's exactly the same as the
 

00:36:43.620 --> 00:36:47.150 align:start position:0%
find is it's exactly the same as the
previous<00:36:43.950><c> slide</c><00:36:44.040><c> so</c><00:36:44.640><c> I</c><00:36:44.970><c> ended</c><00:36:45.840><c> up</c><00:36:45.960><c> doing</c><00:36:46.260><c> the</c>

00:36:47.150 --> 00:36:47.160 align:start position:0%
previous slide so I ended up doing the
 

00:36:47.160 --> 00:36:51.500 align:start position:0%
previous slide so I ended up doing the
same<00:36:47.190><c> thing</c><00:36:47.640><c> in</c><00:36:47.760><c> in</c><00:36:47.940><c> essence</c><00:36:48.300><c> so</c><00:36:49.610><c> okay</c><00:36:50.610><c> so</c><00:36:51.390><c> can</c>

00:36:51.500 --> 00:36:51.510 align:start position:0%
same thing in in essence so okay so can
 

00:36:51.510 --> 00:36:52.940 align:start position:0%
same thing in in essence so okay so can
you<00:36:51.570><c> wind</c><00:36:51.780><c> back</c><00:36:51.930><c> to</c><00:36:51.960><c> the</c><00:36:52.230><c> beginning</c><00:36:52.770><c> of</c><00:36:52.830><c> this</c>

00:36:52.940 --> 00:36:52.950 align:start position:0%
you wind back to the beginning of this
 

00:36:52.950 --> 00:36:56.780 align:start position:0%
you wind back to the beginning of this
scenario<00:36:54.350><c> just</c><00:36:55.350><c> a</c><00:36:55.440><c> couple</c><00:36:55.710><c> brief</c><00:36:56.070><c> comments</c><00:36:56.610><c> on</c>

00:36:56.780 --> 00:36:56.790 align:start position:0%
scenario just a couple brief comments on
 

00:36:56.790 --> 00:37:05.690 align:start position:0%
scenario just a couple brief comments on
this<00:37:02.090><c> okay</c><00:37:03.090><c> so</c><00:37:03.780><c> the</c><00:37:04.560><c> the</c><00:37:04.920><c> segment</c><00:37:05.400><c> of</c><00:37:05.460><c> code</c><00:37:05.580><c> at</c>

00:37:05.690 --> 00:37:05.700 align:start position:0%
this okay so the the segment of code at
 

00:37:05.700 --> 00:37:08.330 align:start position:0%
this okay so the the segment of code at
the<00:37:05.760><c> bottom</c><00:37:06.060><c> is</c><00:37:06.690><c> correct</c><00:37:07.140><c> as</c><00:37:07.380><c> as</c><00:37:07.770><c> Simon</c>

00:37:08.330 --> 00:37:08.340 align:start position:0%
the bottom is correct as as Simon
 

00:37:08.340 --> 00:37:09.800 align:start position:0%
the bottom is correct as as Simon
observed<00:37:08.610><c> but</c><00:37:08.850><c> it</c><00:37:08.910><c> is</c><00:37:09.120><c> quite</c><00:37:09.450><c> inefficient</c>

00:37:09.800 --> 00:37:09.810 align:start position:0%
observed but it is quite inefficient
 

00:37:09.810 --> 00:37:12.800 align:start position:0%
observed but it is quite inefficient
because<00:37:10.260><c> this</c><00:37:10.440><c> is</c><00:37:10.970><c> this</c><00:37:11.970><c> is</c><00:37:12.120><c> this</c><00:37:12.300><c> the</c><00:37:12.360><c> string</c>

00:37:12.800 --> 00:37:12.810 align:start position:0%
because this is this is this the string
 

00:37:12.810 --> 00:37:15.560 align:start position:0%
because this is this is this the string
concatenation<00:37:13.220><c> anti-pattern</c><00:37:14.220><c> and</c><00:37:14.430><c> so</c><00:37:15.180><c> the</c>

00:37:15.560 --> 00:37:15.570 align:start position:0%
concatenation anti-pattern and so the
 

00:37:15.570 --> 00:37:18.110 align:start position:0%
concatenation anti-pattern and so the
problem<00:37:16.260><c> is</c><00:37:16.410><c> that</c><00:37:16.710><c> when</c><00:37:17.160><c> you</c><00:37:17.190><c> reduce</c><00:37:17.670><c> this</c><00:37:17.910><c> way</c>

00:37:18.110 --> 00:37:18.120 align:start position:0%
problem is that when you reduce this way
 

00:37:18.120 --> 00:37:20.450 align:start position:0%
problem is that when you reduce this way
the<00:37:18.630><c> intermediate</c><00:37:19.170><c> result</c><00:37:19.650><c> gets</c><00:37:19.980><c> copied</c>

00:37:20.450 --> 00:37:20.460 align:start position:0%
the intermediate result gets copied
 

00:37:20.460 --> 00:37:22.280 align:start position:0%
the intermediate result gets copied
multiple<00:37:20.880><c> times</c><00:37:21.150><c> because</c><00:37:21.630><c> it's</c><00:37:21.780><c> producing</c>

00:37:22.280 --> 00:37:22.290 align:start position:0%
multiple times because it's producing
 

00:37:22.290 --> 00:37:24.590 align:start position:0%
multiple times because it's producing
strings<00:37:22.740><c> every</c><00:37:23.160><c> time</c><00:37:23.370><c> and</c><00:37:23.670><c> so</c><00:37:24.000><c> if</c><00:37:24.120><c> you</c><00:37:24.240><c> have</c><00:37:24.360><c> n</c>

00:37:24.590 --> 00:37:24.600 align:start position:0%
strings every time and so if you have n
 

00:37:24.600 --> 00:37:27.350 align:start position:0%
strings every time and so if you have n
the<00:37:24.990><c> strings</c><00:37:25.320><c> input</c><00:37:25.830><c> that</c><00:37:26.250><c> are</c><00:37:26.640><c> being</c>

00:37:27.350 --> 00:37:27.360 align:start position:0%
the strings input that are being
 

00:37:27.360 --> 00:37:29.210 align:start position:0%
the strings input that are being
concatenated<00:37:28.050><c> this</c><00:37:28.200><c> way</c><00:37:28.350><c> this</c><00:37:28.560><c> turns</c><00:37:28.830><c> into</c><00:37:29.010><c> an</c>

00:37:29.210 --> 00:37:29.220 align:start position:0%
concatenated this way this turns into an
 

00:37:29.220 --> 00:37:31.700 align:start position:0%
concatenated this way this turns into an
order<00:37:29.520><c> and</c><00:37:29.700><c> squared</c><00:37:30.240><c> problem</c><00:37:31.230><c> and</c><00:37:31.410><c> so</c><00:37:31.470><c> this</c><00:37:31.590><c> is</c>

00:37:31.700 --> 00:37:31.710 align:start position:0%
order and squared problem and so this is
 

00:37:31.710 --> 00:37:33.860 align:start position:0%
order and squared problem and so this is
a<00:37:31.740><c> very</c><00:37:32.010><c> very</c><00:37:32.250><c> expensive</c><00:37:32.790><c> way</c><00:37:32.940><c> of</c><00:37:33.150><c> of</c>

00:37:33.860 --> 00:37:33.870 align:start position:0%
a very very expensive way of of
 

00:37:33.870 --> 00:37:35.840 align:start position:0%
a very very expensive way of of
concatenating<00:37:34.500><c> strings</c><00:37:34.590><c> so</c><00:37:35.370><c> that's</c><00:37:35.550><c> why</c><00:37:35.670><c> we</c>

00:37:35.840 --> 00:37:35.850 align:start position:0%
concatenating strings so that's why we
 

00:37:35.850 --> 00:37:37.790 align:start position:0%
concatenating strings so that's why we
added<00:37:36.120><c> the</c><00:37:36.210><c> the</c><00:37:36.750><c> joining</c><00:37:37.290><c> method</c><00:37:37.560><c> because</c>

00:37:37.790 --> 00:37:37.800 align:start position:0%
added the the joining method because
 

00:37:37.800 --> 00:37:39.560 align:start position:0%
added the the joining method because
this<00:37:37.950><c> is</c><00:37:38.070><c> a</c><00:37:38.100><c> common</c><00:37:38.340><c> thing</c><00:37:38.640><c> and</c><00:37:38.880><c> we</c><00:37:39.000><c> don't</c><00:37:39.360><c> want</c>

00:37:39.560 --> 00:37:39.570 align:start position:0%
this is a common thing and we don't want
 

00:37:39.570 --> 00:37:41.540 align:start position:0%
this is a common thing and we don't want
people<00:37:39.810><c> to</c><00:37:39.930><c> have</c><00:37:40.050><c> to</c><00:37:40.230><c> write</c><00:37:40.550><c> expensive</c>

00:37:41.540 --> 00:37:41.550 align:start position:0%
people to have to write expensive
 

00:37:41.550 --> 00:37:43.850 align:start position:0%
people to have to write expensive
algorithms<00:37:42.060><c> like</c><00:37:42.210><c> this</c><00:37:42.390><c> okay</c>

00:37:43.850 --> 00:37:43.860 align:start position:0%
algorithms like this okay
 

00:37:43.860 --> 00:37:45.920 align:start position:0%
algorithms like this okay
once<00:37:44.460><c> you</c><00:37:44.610><c> go</c><00:37:44.820><c> to</c><00:37:44.850><c> the</c><00:37:45.210><c> to</c><00:37:45.540><c> the</c><00:37:45.630><c> really</c>

00:37:45.920 --> 00:37:45.930 align:start position:0%
once you go to the to the really
 

00:37:45.930 --> 00:37:48.560 align:start position:0%
once you go to the to the really
complicated<00:37:46.590><c> one</c><00:37:46.740><c> couple</c><00:37:47.550><c> Oh</c><00:37:47.730><c> actually</c><00:37:48.060><c> yeah</c>

00:37:48.560 --> 00:37:48.570 align:start position:0%
complicated one couple Oh actually yeah
 

00:37:48.570 --> 00:37:49.970 align:start position:0%
complicated one couple Oh actually yeah
that<00:37:48.750><c> so</c><00:37:49.140><c> that</c><00:37:49.290><c> one</c><00:37:49.440><c> yeah</c><00:37:49.740><c> I'll</c><00:37:49.890><c> just</c>

00:37:49.970 --> 00:37:49.980 align:start position:0%
that so that one yeah I'll just
 

00:37:49.980 --> 00:37:53.660 align:start position:0%
that so that one yeah I'll just
reiterate<00:37:50.310><c> here</c><00:37:51.710><c> Simon</c><00:37:52.710><c> observed</c><00:37:53.010><c> that</c><00:37:53.280><c> if</c>

00:37:53.660 --> 00:37:53.670 align:start position:0%
reiterate here Simon observed that if
 

00:37:53.670 --> 00:37:54.920 align:start position:0%
reiterate here Simon observed that if
you<00:37:53.790><c> have</c><00:37:53.910><c> a</c><00:37:53.940><c> reduction</c><00:37:54.270><c> function</c><00:37:54.780><c> that</c>

00:37:54.920 --> 00:37:54.930 align:start position:0%
you have a reduction function that
 

00:37:54.930 --> 00:37:56.330 align:start position:0%
you have a reduction function that
doesn't<00:37:55.230><c> use</c><00:37:55.350><c> one</c><00:37:55.500><c> of</c><00:37:55.560><c> its</c><00:37:55.710><c> arguments</c><00:37:56.190><c> it's</c>

00:37:56.330 --> 00:37:56.340 align:start position:0%
doesn't use one of its arguments it's
 

00:37:56.340 --> 00:37:59.390 align:start position:0%
doesn't use one of its arguments it's
very<00:37:56.520><c> probably</c><00:37:56.970><c> wrong</c><00:37:57.180><c> and</c><00:37:58.110><c> and</c><00:37:58.950><c> and</c><00:37:59.220><c> actually</c>

00:37:59.390 --> 00:37:59.400 align:start position:0%
very probably wrong and and and actually
 

00:37:59.400 --> 00:38:00.950 align:start position:0%
very probably wrong and and and actually
but<00:37:59.730><c> what</c><00:37:59.970><c> what</c><00:38:00.120><c> you</c><00:38:00.240><c> were</c><00:38:00.360><c> trying</c><00:38:00.630><c> to</c><00:38:00.780><c> do</c>

00:38:00.950 --> 00:38:00.960 align:start position:0%
but what what you were trying to do
 

00:38:00.960 --> 00:38:02.900 align:start position:0%
but what what you were trying to do
there<00:38:01.260><c> which</c><00:38:01.620><c> which</c><00:38:01.950><c> I've</c><00:38:02.100><c> also</c><00:38:02.250><c> seen</c><00:38:02.550><c> before</c>

00:38:02.900 --> 00:38:02.910 align:start position:0%
there which which I've also seen before
 

00:38:02.910 --> 00:38:03.730 align:start position:0%
there which which I've also seen before
in<00:38:03.030><c> other</c><00:38:03.120><c> code</c>

00:38:03.730 --> 00:38:03.740 align:start position:0%
in other code
 

00:38:03.740 --> 00:38:06.480 align:start position:0%
in other code
is<00:38:03.800><c> that</c><00:38:04.010><c> well</c><00:38:04.660><c> the</c><00:38:05.660><c> thing</c><00:38:05.869><c> that</c><00:38:05.990><c> leads</c><00:38:06.200><c> you</c><00:38:06.380><c> to</c>

00:38:06.480 --> 00:38:06.490 align:start position:0%
is that well the thing that leads you to
 

00:38:06.490 --> 00:38:08.650 align:start position:0%
is that well the thing that leads you to
not<00:38:07.490><c> use</c><00:38:07.730><c> one</c><00:38:07.880><c> of</c><00:38:07.910><c> the</c><00:38:08.060><c> arguments</c><00:38:08.480><c> is</c><00:38:08.630><c> that</c>

00:38:08.650 --> 00:38:08.660 align:start position:0%
not use one of the arguments is that
 

00:38:08.660 --> 00:38:10.780 align:start position:0%
not use one of the arguments is that
you're<00:38:08.990><c> doing</c><00:38:09.080><c> side</c><00:38:09.410><c> effects</c><00:38:09.860><c> in</c><00:38:09.980><c> it</c><00:38:10.130><c> okay</c>

00:38:10.780 --> 00:38:10.790 align:start position:0%
you're doing side effects in it okay
 

00:38:10.790 --> 00:38:13.090 align:start position:0%
you're doing side effects in it okay
right<00:38:11.119><c> and</c><00:38:11.330><c> so</c><00:38:11.480><c> again</c><00:38:11.750><c> this</c><00:38:12.410><c> elimination</c><00:38:13.010><c> of</c>

00:38:13.090 --> 00:38:13.100 align:start position:0%
right and so again this elimination of
 

00:38:13.100 --> 00:38:15.220 align:start position:0%
right and so again this elimination of
side<00:38:13.220><c> effect</c><00:38:13.550><c> or</c><00:38:13.690><c> avoidance</c><00:38:14.690><c> of</c><00:38:14.780><c> side</c><00:38:14.960><c> effects</c>

00:38:15.220 --> 00:38:15.230 align:start position:0%
side effect or avoidance of side effects
 

00:38:15.230 --> 00:38:16.480 align:start position:0%
side effect or avoidance of side effects
is<00:38:15.380><c> something</c><00:38:15.680><c> that</c><00:38:15.800><c> we</c><00:38:15.890><c> need</c><00:38:16.010><c> to</c><00:38:16.070><c> keep</c><00:38:16.280><c> an</c><00:38:16.400><c> eye</c>

00:38:16.480 --> 00:38:16.490 align:start position:0%
is something that we need to keep an eye
 

00:38:16.490 --> 00:38:20.740 align:start position:0%
is something that we need to keep an eye
on<00:38:16.520><c> okay</c><00:38:17.360><c> so</c><00:38:17.420><c> one</c><00:38:17.750><c> one</c><00:38:18.200><c> more</c><00:38:18.440><c> slide</c><00:38:19.340><c> here</c><00:38:19.670><c> so</c><00:38:19.820><c> so</c>

00:38:20.740 --> 00:38:20.750 align:start position:0%
on okay so one one more slide here so so
 

00:38:20.750 --> 00:38:23.260 align:start position:0%
on okay so one one more slide here so so
another<00:38:21.500><c> one</c><00:38:22.369><c> one</c><00:38:22.670><c> point</c><00:38:22.910><c> about</c><00:38:23.090><c> the</c>

00:38:23.260 --> 00:38:23.270 align:start position:0%
another one one point about the
 

00:38:23.270 --> 00:38:25.020 align:start position:0%
another one one point about the
reduction<00:38:23.540><c> function</c><00:38:24.110><c> is</c><00:38:24.350><c> that</c><00:38:24.470><c> it</c><00:38:24.619><c> must</c><00:38:24.860><c> be</c>

00:38:25.020 --> 00:38:25.030 align:start position:0%
reduction function is that it must be
 

00:38:25.030 --> 00:38:27.340 align:start position:0%
reduction function is that it must be
associative<00:38:26.030><c> and</c><00:38:26.480><c> when</c><00:38:27.110><c> we</c><00:38:27.200><c> get</c><00:38:27.290><c> to</c>

00:38:27.340 --> 00:38:27.350 align:start position:0%
associative and when we get to
 

00:38:27.350 --> 00:38:29.140 align:start position:0%
associative and when we get to
parallelism<00:38:27.830><c> that'll</c><00:38:28.280><c> be</c><00:38:28.369><c> it</c><00:38:28.550><c> that'll</c><00:38:28.970><c> be</c><00:38:29.060><c> an</c>

00:38:29.140 --> 00:38:29.150 align:start position:0%
parallelism that'll be it that'll be an
 

00:38:29.150 --> 00:38:33.430 align:start position:0%
parallelism that'll be it that'll be an
issue<00:38:29.300><c> but</c><00:38:31.540><c> don't</c><00:38:32.540><c> have</c><00:38:32.690><c> time</c><00:38:32.840><c> to</c><00:38:33.020><c> go</c><00:38:33.200><c> into</c><00:38:33.350><c> a</c>

00:38:33.430 --> 00:38:33.440 align:start position:0%
issue but don't have time to go into a
 

00:38:33.440 --> 00:38:35.109 align:start position:0%
issue but don't have time to go into a
full<00:38:33.590><c> explanation</c><00:38:33.860><c> of</c><00:38:34.430><c> whether</c><00:38:34.700><c> something</c><00:38:35.030><c> is</c>

00:38:35.109 --> 00:38:35.119 align:start position:0%
full explanation of whether something is
 

00:38:35.119 --> 00:38:36.190 align:start position:0%
full explanation of whether something is
associative<00:38:35.630><c> but</c><00:38:35.869><c> there</c><00:38:35.990><c> are</c><00:38:36.050><c> a</c><00:38:36.080><c> lot</c><00:38:36.170><c> of</c>

00:38:36.190 --> 00:38:36.200 align:start position:0%
associative but there are a lot of
 

00:38:36.200 --> 00:38:38.140 align:start position:0%
associative but there are a lot of
things<00:38:36.500><c> that</c><00:38:36.680><c> are</c><00:38:36.890><c> and</c><00:38:37.190><c> if</c><00:38:37.880><c> you</c><00:38:38.030><c> have</c>

00:38:38.140 --> 00:38:38.150 align:start position:0%
things that are and if you have
 

00:38:38.150 --> 00:38:39.609 align:start position:0%
things that are and if you have
something<00:38:38.420><c> that's</c><00:38:38.510><c> slightly</c><00:38:38.690><c> complex</c><00:38:39.290><c> it</c>

00:38:39.609 --> 00:38:39.619 align:start position:0%
something that's slightly complex it
 

00:38:39.619 --> 00:38:41.740 align:start position:0%
something that's slightly complex it
actually<00:38:40.010><c> moves</c><00:38:40.310><c> you</c><00:38:40.460><c> to</c><00:38:40.550><c> go</c><00:38:40.670><c> through</c><00:38:40.970><c> a</c><00:38:41.180><c> proof</c>

00:38:41.740 --> 00:38:41.750 align:start position:0%
actually moves you to go through a proof
 

00:38:41.750 --> 00:38:45.160 align:start position:0%
actually moves you to go through a proof
of<00:38:41.990><c> of</c><00:38:42.770><c> whether</c><00:38:43.250><c> it's</c><00:38:43.460><c> associative</c><00:38:43.880><c> and</c><00:38:44.240><c> if</c>

00:38:45.160 --> 00:38:45.170 align:start position:0%
of of whether it's associative and if
 

00:38:45.170 --> 00:38:48.310 align:start position:0%
of of whether it's associative and if
you<00:38:45.290><c> have</c><00:38:45.470><c> side</c><00:38:45.800><c> effects</c><00:38:46.160><c> in</c><00:38:46.820><c> your</c><00:38:47.600><c> reduction</c>

00:38:48.310 --> 00:38:48.320 align:start position:0%
you have side effects in your reduction
 

00:38:48.320 --> 00:38:50.710 align:start position:0%
you have side effects in your reduction
function<00:38:48.950><c> that</c><00:38:49.280><c> proof</c><00:38:49.640><c> becomes</c><00:38:50.030><c> extremely</c>

00:38:50.710 --> 00:38:50.720 align:start position:0%
function that proof becomes extremely
 

00:38:50.720 --> 00:38:54.100 align:start position:0%
function that proof becomes extremely
difficult<00:38:51.050><c> if</c><00:38:51.500><c> not</c><00:38:51.590><c> impossible</c><00:38:52.780><c> so</c><00:38:53.780><c> once</c>

00:38:54.100 --> 00:38:54.110 align:start position:0%
difficult if not impossible so once
 

00:38:54.110 --> 00:38:56.080 align:start position:0%
difficult if not impossible so once
again<00:38:54.260><c> side</c><00:38:54.650><c> effects</c><00:38:55.010><c> are</c><00:38:55.100><c> are</c><00:38:55.610><c> to</c><00:38:55.790><c> be</c><00:38:55.880><c> avoided</c>

00:38:56.080 --> 00:38:56.090 align:start position:0%
again side effects are are to be avoided
 

00:38:56.090 --> 00:38:58.000 align:start position:0%
again side effects are are to be avoided
okay<00:38:56.869><c> why</c><00:38:57.020><c> don't</c><00:38:57.080><c> we</c><00:38:57.200><c> move</c><00:38:57.530><c> on</c><00:38:57.650><c> to</c><00:38:57.770><c> the</c><00:38:57.860><c> next</c>

00:38:58.000 --> 00:38:58.010 align:start position:0%
okay why don't we move on to the next
 

00:38:58.010 --> 00:39:01.120 align:start position:0%
okay why don't we move on to the next
scenario<00:38:58.130><c> okay</c><00:38:59.050><c> yeah</c><00:39:00.050><c> I</c><00:39:00.560><c> think</c><00:39:01.010><c> we're</c>

00:39:01.120 --> 00:39:01.130 align:start position:0%
scenario okay yeah I think we're
 

00:39:01.130 --> 00:39:01.930 align:start position:0%
scenario okay yeah I think we're
probably<00:39:01.250><c> not</c><00:39:01.550><c> gonna</c><00:39:01.670><c> get</c><00:39:01.850><c> through</c>

00:39:01.930 --> 00:39:01.940 align:start position:0%
probably not gonna get through
 

00:39:01.940 --> 00:39:05.440 align:start position:0%
probably not gonna get through
everything<00:39:02.330><c> in</c><00:39:02.420><c> the</c><00:39:02.510><c> end</c><00:39:03.520><c> okay</c><00:39:04.520><c> so</c><00:39:05.300><c> we'll</c><00:39:05.420><c> just</c>

00:39:05.440 --> 00:39:05.450 align:start position:0%
everything in the end okay so we'll just
 

00:39:05.450 --> 00:39:08.620 align:start position:0%
everything in the end okay so we'll just
do<00:39:05.630><c> some</c><00:39:05.840><c> quick</c><00:39:06.050><c> performance</c><00:39:06.410><c> examples</c><00:39:07.630><c> so</c>

00:39:08.620 --> 00:39:08.630 align:start position:0%
do some quick performance examples so
 

00:39:08.630 --> 00:39:11.890 align:start position:0%
do some quick performance examples so
one<00:39:08.810><c> is</c><00:39:08.930><c> extremely</c><00:39:09.410><c> reuse</c><00:39:09.950><c> good</c><00:39:10.640><c> or</c><00:39:10.760><c> bad</c><00:39:10.910><c> so</c>

00:39:11.890 --> 00:39:11.900 align:start position:0%
one is extremely reuse good or bad so
 

00:39:11.900 --> 00:39:13.990 align:start position:0%
one is extremely reuse good or bad so
we've<00:39:12.080><c> got</c><00:39:12.230><c> a</c><00:39:12.260><c> stream</c><00:39:12.500><c> here</c><00:39:12.680><c> of</c><00:39:12.859><c> intz</c><00:39:13.340><c> from</c><00:39:13.580><c> 1</c>

00:39:13.990 --> 00:39:14.000 align:start position:0%
we've got a stream here of intz from 1
 

00:39:14.000 --> 00:39:17.080 align:start position:0%
we've got a stream here of intz from 1
to<00:39:14.119><c> 10</c><00:39:14.300><c> print</c><00:39:14.990><c> those</c><00:39:15.140><c> out</c><00:39:15.290><c> so</c><00:39:16.220><c> why</c><00:39:16.940><c> don't</c><00:39:17.060><c> we</c>

00:39:17.080 --> 00:39:17.090 align:start position:0%
to 10 print those out so why don't we
 

00:39:17.090 --> 00:39:19.300 align:start position:0%
to 10 print those out so why don't we
reuse<00:39:17.450><c> it</c><00:39:17.600><c> and</c><00:39:17.780><c> do</c><00:39:18.109><c> you</c><00:39:18.470><c> know</c><00:39:18.560><c> make</c><00:39:19.040><c> life</c>

00:39:19.300 --> 00:39:19.310 align:start position:0%
reuse it and do you know make life
 

00:39:19.310 --> 00:39:22.090 align:start position:0%
reuse it and do you know make life
efficient<00:39:19.730><c> well</c><00:39:19.910><c> reuse</c><00:39:20.210><c> that</c><00:39:20.920><c> anybody</c><00:39:21.920><c> think</c>

00:39:22.090 --> 00:39:22.100 align:start position:0%
efficient well reuse that anybody think
 

00:39:22.100 --> 00:39:24.160 align:start position:0%
efficient well reuse that anybody think
that<00:39:22.220><c> would</c><00:39:22.340><c> work</c><00:39:22.720><c> again</c><00:39:23.720><c> I'm</c><00:39:23.840><c> asking</c><00:39:23.960><c> a</c>

00:39:24.160 --> 00:39:24.170 align:start position:0%
that would work again I'm asking a
 

00:39:24.170 --> 00:39:25.359 align:start position:0%
that would work again I'm asking a
question<00:39:24.200><c> which</c><00:39:24.530><c> you're</c><00:39:24.680><c> probably</c><00:39:24.710><c> not</c><00:39:25.220><c> going</c>

00:39:25.359 --> 00:39:25.369 align:start position:0%
question which you're probably not going
 

00:39:25.369 --> 00:39:26.830 align:start position:0%
question which you're probably not going
to<00:39:25.430><c> be</c><00:39:25.520><c> so</c><00:39:25.760><c> the</c><00:39:25.940><c> answer</c><00:39:26.150><c> is</c><00:39:26.180><c> no</c><00:39:26.359><c> because</c><00:39:26.540><c> that</c>

00:39:26.830 --> 00:39:26.840 align:start position:0%
to be so the answer is no because that
 

00:39:26.840 --> 00:39:28.359 align:start position:0%
to be so the answer is no because that
will<00:39:26.990><c> throw</c><00:39:27.230><c> an</c><00:39:27.320><c> illegal</c><00:39:27.650><c> state</c><00:39:27.859><c> exception</c>

00:39:28.359 --> 00:39:28.369 align:start position:0%
will throw an illegal state exception
 

00:39:28.369 --> 00:39:30.280 align:start position:0%
will throw an illegal state exception
because<00:39:28.850><c> the</c><00:39:29.090><c> stream</c><00:39:29.300><c> has</c><00:39:29.540><c> already</c><00:39:29.869><c> already</c>

00:39:30.280 --> 00:39:30.290 align:start position:0%
because the stream has already already
 

00:39:30.290 --> 00:39:33.280 align:start position:0%
because the stream has already already
been<00:39:30.440><c> operated</c><00:39:30.920><c> on</c><00:39:31.040><c> or</c><00:39:31.280><c> closed</c><00:39:32.030><c> so</c><00:39:32.570><c> you</c><00:39:33.140><c> can</c>

00:39:33.280 --> 00:39:33.290 align:start position:0%
been operated on or closed so you can
 

00:39:33.290 --> 00:39:35.020 align:start position:0%
been operated on or closed so you can
only<00:39:33.440><c> use</c><00:39:33.650><c> the</c><00:39:33.770><c> stream</c><00:39:34.040><c> once</c><00:39:34.520><c> that's</c><00:39:34.910><c> the</c>

00:39:35.020 --> 00:39:35.030 align:start position:0%
only use the stream once that's the
 

00:39:35.030 --> 00:39:38.080 align:start position:0%
only use the stream once that's the
important<00:39:35.359><c> thing</c><00:39:35.390><c> about</c><00:39:35.570><c> that</c><00:39:37.030><c> second</c><00:39:38.030><c> one</c>

00:39:38.080 --> 00:39:38.090 align:start position:0%
important thing about that second one
 

00:39:38.090 --> 00:39:40.840 align:start position:0%
important thing about that second one
which<00:39:38.869><c> is</c><00:39:39.020><c> better</c><00:39:39.200><c> and</c><00:39:39.470><c> why</c><00:39:39.710><c> so</c><00:39:40.609><c> we've</c><00:39:40.730><c> got</c>

00:39:40.840 --> 00:39:40.850 align:start position:0%
which is better and why so we've got
 

00:39:40.850 --> 00:39:42.520 align:start position:0%
which is better and why so we've got
point<00:39:41.119><c> stream</c><00:39:41.930><c> and</c><00:39:42.140><c> then</c><00:39:42.230><c> we're</c><00:39:42.320><c> doing</c><00:39:42.380><c> a</c>

00:39:42.520 --> 00:39:42.530 align:start position:0%
point stream and then we're doing a
 

00:39:42.530 --> 00:39:45.700 align:start position:0%
point stream and then we're doing a
filter<00:39:42.859><c> map</c><00:39:43.160><c> and</c><00:39:43.369><c> well</c><00:39:44.119><c> for</c><00:39:44.359><c> each</c><00:39:44.540><c> and</c><00:39:44.840><c> so</c>

00:39:45.700 --> 00:39:45.710 align:start position:0%
filter map and well for each and so
 

00:39:45.710 --> 00:39:46.960 align:start position:0%
filter map and well for each and so
we're<00:39:45.830><c> using</c><00:39:45.980><c> an</c><00:39:46.369><c> explicit</c><00:39:46.580><c> lambda</c>

00:39:46.960 --> 00:39:46.970 align:start position:0%
we're using an explicit lambda
 

00:39:46.970 --> 00:39:48.520 align:start position:0%
we're using an explicit lambda
expression<00:39:47.359><c> here</c><00:39:47.600><c> to</c><00:39:47.630><c> say</c><00:39:48.080><c> that</c><00:39:48.230><c> we</c><00:39:48.290><c> want</c><00:39:48.470><c> to</c>

00:39:48.520 --> 00:39:48.530 align:start position:0%
expression here to say that we want to
 

00:39:48.530 --> 00:39:50.740 align:start position:0%
expression here to say that we want to
get<00:39:48.770><c> is</c><00:39:48.950><c> this</c><00:39:49.190><c> point</c><00:39:49.400><c> in</c><00:39:49.580><c> view</c><00:39:49.880><c> invert</c><00:39:50.600><c> the</c>

00:39:50.740 --> 00:39:50.750 align:start position:0%
get is this point in view invert the
 

00:39:50.750 --> 00:39:53.130 align:start position:0%
get is this point in view invert the
point<00:39:50.990><c> and</c><00:39:51.230><c> then</c><00:39:51.380><c> print</c><00:39:51.590><c> it</c><00:39:51.680><c> out</c><00:39:51.850><c> same</c>

00:39:53.130 --> 00:39:53.140 align:start position:0%
point and then print it out same
 

00:39:53.140 --> 00:39:55.270 align:start position:0%
point and then print it out same
effective<00:39:54.140><c> piece</c><00:39:54.350><c> of</c><00:39:54.380><c> code</c><00:39:54.619><c> is</c><00:39:54.770><c> functionally</c>

00:39:55.270 --> 00:39:55.280 align:start position:0%
effective piece of code is functionally
 

00:39:55.280 --> 00:39:57.460 align:start position:0%
effective piece of code is functionally
the<00:39:55.369><c> same</c><00:39:55.580><c> stream</c><00:39:56.270><c> filter</c><00:39:56.810><c> but</c><00:39:56.990><c> we</c><00:39:57.080><c> this</c><00:39:57.290><c> time</c>

00:39:57.460 --> 00:39:57.470 align:start position:0%
the same stream filter but we this time
 

00:39:57.470 --> 00:39:59.349 align:start position:0%
the same stream filter but we this time
we're<00:39:57.650><c> using</c><00:39:57.800><c> the</c><00:39:58.280><c> method</c><00:39:58.730><c> reference</c><00:39:59.090><c> rather</c>

00:39:59.349 --> 00:39:59.359 align:start position:0%
we're using the method reference rather
 

00:39:59.359 --> 00:40:02.650 align:start position:0%
we're using the method reference rather
than<00:39:59.780><c> the</c><00:40:00.200><c> lambda</c><00:40:01.160><c> expression</c><00:40:01.520><c> so</c><00:40:02.030><c> who</c><00:40:02.300><c> thinks</c>

00:40:02.650 --> 00:40:02.660 align:start position:0%
than the lambda expression so who thinks
 

00:40:02.660 --> 00:40:06.520 align:start position:0%
than the lambda expression so who thinks
the<00:40:02.810><c> top</c><00:40:03.050><c> one</c><00:40:03.260><c> is</c><00:40:03.470><c> more</c><00:40:04.100><c> efficient</c><00:40:05.080><c> okay</c><00:40:06.080><c> who</c>

00:40:06.520 --> 00:40:06.530 align:start position:0%
the top one is more efficient okay who
 

00:40:06.530 --> 00:40:07.810 align:start position:0%
the top one is more efficient okay who
thinks<00:40:06.710><c> the</c><00:40:06.890><c> bottom</c><00:40:07.100><c> one</c><00:40:07.220><c> is</c><00:40:07.310><c> more</c><00:40:07.460><c> efficient</c>

00:40:07.810 --> 00:40:07.820 align:start position:0%
thinks the bottom one is more efficient
 

00:40:07.820 --> 00:40:11.269 align:start position:0%
thinks the bottom one is more efficient
okay<00:40:08.780><c> who</c><00:40:09.290><c> thinks</c><00:40:10.010><c> they're</c><00:40:10.190><c> the</c><00:40:10.310><c> same</c>

00:40:11.269 --> 00:40:11.279 align:start position:0%
okay who thinks they're the same
 

00:40:11.279 --> 00:40:13.729 align:start position:0%
okay who thinks they're the same
ha<00:40:11.640><c> okay</c><00:40:11.969><c> so</c><00:40:12.599><c> the</c><00:40:12.689><c> answer</c><00:40:12.719><c> is</c><00:40:12.989><c> that</c><00:40:13.140><c> the</c><00:40:13.439><c> bottom</c>

00:40:13.729 --> 00:40:13.739 align:start position:0%
ha okay so the answer is that the bottom
 

00:40:13.739 --> 00:40:16.429 align:start position:0%
ha okay so the answer is that the bottom
one<00:40:13.890><c> is</c><00:40:14.099><c> slightly</c><00:40:14.909><c> more</c><00:40:15.299><c> efficient</c><00:40:15.809><c> and</c><00:40:16.319><c> the</c>

00:40:16.429 --> 00:40:16.439 align:start position:0%
one is slightly more efficient and the
 

00:40:16.439 --> 00:40:18.169 align:start position:0%
one is slightly more efficient and the
reason<00:40:16.709><c> for</c><00:40:16.739><c> that</c><00:40:16.859><c> actually</c><00:40:17.819><c> if</c><00:40:17.880><c> you</c><00:40:17.969><c> want</c><00:40:18.119><c> to</c>

00:40:18.169 --> 00:40:18.179 align:start position:0%
reason for that actually if you want to
 

00:40:18.179 --> 00:40:19.249 align:start position:0%
reason for that actually if you want to
learn<00:40:18.239><c> more</c><00:40:18.390><c> about</c><00:40:18.449><c> that</c><00:40:18.719><c> you</c><00:40:18.809><c> can</c><00:40:18.929><c> come</c><00:40:19.079><c> to</c><00:40:19.169><c> my</c>

00:40:19.249 --> 00:40:19.259 align:start position:0%
learn more about that you can come to my
 

00:40:19.259 --> 00:40:20.929 align:start position:0%
learn more about that you can come to my
session<00:40:19.439><c> this</c><00:40:19.650><c> afternoon</c><00:40:19.769><c> what</c><00:40:20.609><c> I'm</c><00:40:20.699><c> talking</c>

00:40:20.929 --> 00:40:20.939 align:start position:0%
session this afternoon what I'm talking
 

00:40:20.939 --> 00:40:22.729 align:start position:0%
session this afternoon what I'm talking
about<00:40:20.969><c> lambdas</c><00:40:21.449><c> is</c><00:40:21.539><c> explicitly</c><00:40:22.049><c> but</c><00:40:22.169><c> the</c><00:40:22.380><c> the</c>

00:40:22.729 --> 00:40:22.739 align:start position:0%
about lambdas is explicitly but the the
 

00:40:22.739 --> 00:40:25.069 align:start position:0%
about lambdas is explicitly but the the
key<00:40:23.189><c> point</c><00:40:23.429><c> is</c><00:40:23.549><c> that</c><00:40:23.579><c> when</c><00:40:23.939><c> a</c><00:40:24.150><c> lambda</c><00:40:24.449><c> gets</c>

00:40:25.069 --> 00:40:25.079 align:start position:0%
key point is that when a lambda gets
 

00:40:25.079 --> 00:40:28.609 align:start position:0%
key point is that when a lambda gets
compiled<00:40:25.650><c> it</c><00:40:26.640><c> gets</c><00:40:27.119><c> compiled</c><00:40:27.539><c> in</c><00:40:27.959><c> the</c><00:40:28.349><c> the</c>

00:40:28.609 --> 00:40:28.619 align:start position:0%
compiled it gets compiled in the the
 

00:40:28.619 --> 00:40:30.229 align:start position:0%
compiled it gets compiled in the the
body<00:40:28.829><c> of</c><00:40:28.979><c> the</c><00:40:29.099><c> lambda</c><00:40:29.400><c> expression</c><00:40:29.789><c> needs</c><00:40:29.939><c> to</c>

00:40:30.229 --> 00:40:30.239 align:start position:0%
body of the lambda expression needs to
 

00:40:30.239 --> 00:40:32.599 align:start position:0%
body of the lambda expression needs to
be<00:40:30.419><c> put</c><00:40:30.659><c> into</c><00:40:30.900><c> a</c><00:40:31.079><c> method</c><00:40:31.679><c> that's</c><00:40:32.249><c> associated</c>

00:40:32.599 --> 00:40:32.609 align:start position:0%
be put into a method that's associated
 

00:40:32.609 --> 00:40:34.609 align:start position:0%
be put into a method that's associated
with<00:40:32.969><c> the</c><00:40:33.299><c> the</c><00:40:33.659><c> place</c><00:40:33.839><c> where</c><00:40:34.019><c> it's</c><00:40:34.140><c> used</c><00:40:34.349><c> and</c>

00:40:34.609 --> 00:40:34.619 align:start position:0%
with the the place where it's used and
 

00:40:34.619 --> 00:40:36.829 align:start position:0%
with the the place where it's used and
so<00:40:35.189><c> if</c><00:40:35.339><c> we</c><00:40:35.459><c> have</c><00:40:35.609><c> already</c><00:40:35.969><c> a</c><00:40:35.999><c> method</c><00:40:36.329><c> reference</c>

00:40:36.829 --> 00:40:36.839 align:start position:0%
so if we have already a method reference
 

00:40:36.839 --> 00:40:39.649 align:start position:0%
so if we have already a method reference
then<00:40:37.409><c> you</c><00:40:37.769><c> don't</c><00:40:37.979><c> need</c><00:40:38.219><c> to</c><00:40:38.609><c> put</c><00:40:39.359><c> it</c><00:40:39.449><c> into</c>

00:40:39.649 --> 00:40:39.659 align:start position:0%
then you don't need to put it into
 

00:40:39.659 --> 00:40:41.089 align:start position:0%
then you don't need to put it into
another<00:40:39.779><c> method</c><00:40:40.349><c> reference</c><00:40:40.709><c> or</c><00:40:40.859><c> another</c>

00:40:41.089 --> 00:40:41.099 align:start position:0%
another method reference or another
 

00:40:41.099 --> 00:40:43.609 align:start position:0%
another method reference or another
method<00:40:41.429><c> so</c><00:40:41.939><c> it</c><00:40:42.089><c> saves</c><00:40:42.390><c> a</c><00:40:42.779><c> level</c><00:40:43.559><c> of</c>

00:40:43.609 --> 00:40:43.619 align:start position:0%
method so it saves a level of
 

00:40:43.619 --> 00:40:45.949 align:start position:0%
method so it saves a level of
indirection<00:40:43.859><c> if</c><00:40:44.249><c> you</c><00:40:44.429><c> know</c><00:40:44.549><c> in</c><00:40:44.849><c> essence</c><00:40:45.359><c> so</c>

00:40:45.949 --> 00:40:45.959 align:start position:0%
indirection if you know in essence so
 

00:40:45.959 --> 00:40:47.859 align:start position:0%
indirection if you know in essence so
that's<00:40:46.229><c> why</c><00:40:46.380><c> it's</c><00:40:46.529><c> a</c><00:40:46.559><c> little</c><00:40:46.619><c> bit</c><00:40:46.739><c> more</c>

00:40:47.859 --> 00:40:47.869 align:start position:0%
that's why it's a little bit more
 

00:40:47.869 --> 00:40:50.499 align:start position:0%
that's why it's a little bit more
slightly<00:40:48.869><c> better</c><00:40:49.259><c> in</c><00:40:49.529><c> terms</c><00:40:49.679><c> of</c><00:40:49.769><c> performance</c>

00:40:50.499 --> 00:40:50.509 align:start position:0%
slightly better in terms of performance
 

00:40:50.509 --> 00:40:53.749 align:start position:0%
slightly better in terms of performance
and<00:40:51.509><c> then</c><00:40:51.959><c> multi</c><00:40:52.319><c> sorts</c><00:40:52.619><c> okay</c><00:40:53.189><c> so</c><00:40:53.249><c> this</c><00:40:53.489><c> is</c><00:40:53.640><c> the</c>

00:40:53.749 --> 00:40:53.759 align:start position:0%
and then multi sorts okay so this is the
 

00:40:53.759 --> 00:40:56.509 align:start position:0%
and then multi sorts okay so this is the
bad<00:40:54.179><c> way</c><00:40:54.479><c> of</c><00:40:54.509><c> doing</c><00:40:54.809><c> things</c><00:40:55.019><c> so</c><00:40:55.259><c> we</c><00:40:55.919><c> what</c><00:40:56.400><c> we're</c>

00:40:56.509 --> 00:40:56.519 align:start position:0%
bad way of doing things so we what we're
 

00:40:56.519 --> 00:40:57.859 align:start position:0%
bad way of doing things so we what we're
looking<00:40:56.729><c> is</c><00:40:56.819><c> we've</c><00:40:56.999><c> got</c><00:40:57.089><c> some</c><00:40:57.119><c> patience</c><00:40:57.719><c> we've</c>

00:40:57.859 --> 00:40:57.869 align:start position:0%
looking is we've got some patience we've
 

00:40:57.869 --> 00:41:00.079 align:start position:0%
looking is we've got some patience we've
got<00:40:58.019><c> some</c><00:40:58.169><c> information</c><00:40:58.289><c> about</c><00:40:58.709><c> them</c><00:40:59.069><c> and</c><00:40:59.309><c> so</c>

00:41:00.079 --> 00:41:00.089 align:start position:0%
got some information about them and so
 

00:41:00.089 --> 00:41:02.029 align:start position:0%
got some information about them and so
we're<00:41:01.019><c> saying</c><00:41:01.199><c> okay</c><00:41:01.499><c> if</c><00:41:01.679><c> this</c><00:41:01.829><c> is</c><00:41:01.890><c> valid</c>

00:41:02.029 --> 00:41:02.039 align:start position:0%
we're saying okay if this is valid
 

00:41:02.039 --> 00:41:04.099 align:start position:0%
we're saying okay if this is valid
record<00:41:02.489><c> then</c><00:41:02.669><c> we</c><00:41:02.729><c> want</c><00:41:02.880><c> sort</c><00:41:03.150><c> by</c><00:41:03.390><c> medication</c>

00:41:04.099 --> 00:41:04.109 align:start position:0%
record then we want sort by medication
 

00:41:04.109 --> 00:41:05.449 align:start position:0%
record then we want sort by medication
then<00:41:04.469><c> we</c><00:41:04.559><c> want</c><00:41:04.739><c> to</c><00:41:04.799><c> talk</c><00:41:04.919><c> by</c><00:41:05.039><c> physical</c>

00:41:05.449 --> 00:41:05.459 align:start position:0%
then we want to talk by physical
 

00:41:05.459 --> 00:41:07.159 align:start position:0%
then we want to talk by physical
physician<00:41:05.939><c> and</c><00:41:06.390><c> we</c><00:41:06.509><c> sort</c><00:41:06.689><c> want</c><00:41:06.929><c> to</c><00:41:06.989><c> sort</c><00:41:07.109><c> by</c>

00:41:07.159 --> 00:41:07.169 align:start position:0%
physician and we sort want to sort by
 

00:41:07.169 --> 00:41:10.249 align:start position:0%
physician and we sort want to sort by
name<00:41:07.499><c> so</c><00:41:08.009><c> we</c><00:41:08.099><c> do</c><00:41:08.189><c> it</c><00:41:08.219><c> in</c><00:41:08.549><c> that</c><00:41:08.640><c> sense</c><00:41:09.259><c> the</c>

00:41:10.249 --> 00:41:10.259 align:start position:0%
name so we do it in that sense the
 

00:41:10.259 --> 00:41:11.449 align:start position:0%
name so we do it in that sense the
reality<00:41:10.709><c> is</c><00:41:10.799><c> that</c><00:41:10.829><c> that</c><00:41:11.039><c> would</c><00:41:11.159><c> actually</c><00:41:11.400><c> be</c>

00:41:11.449 --> 00:41:11.459 align:start position:0%
reality is that that would actually be
 

00:41:11.459 --> 00:41:14.749 align:start position:0%
reality is that that would actually be
much<00:41:11.609><c> better</c><00:41:11.819><c> if</c><00:41:12.599><c> we</c><00:41:12.989><c> do</c><00:41:13.349><c> it</c><00:41:13.499><c> using</c><00:41:14.069><c> then</c>

00:41:14.749 --> 00:41:14.759 align:start position:0%
much better if we do it using then
 

00:41:14.759 --> 00:41:16.489 align:start position:0%
much better if we do it using then
comparing<00:41:15.299><c> so</c><00:41:15.630><c> we</c><00:41:15.749><c> do</c><00:41:15.869><c> the</c><00:41:15.989><c> same</c><00:41:16.140><c> thing</c><00:41:16.380><c> in</c>

00:41:16.489 --> 00:41:16.499 align:start position:0%
comparing so we do the same thing in
 

00:41:16.499 --> 00:41:18.079 align:start position:0%
comparing so we do the same thing in
effect<00:41:16.769><c> so</c><00:41:16.949><c> we're</c><00:41:17.069><c> still</c><00:41:17.219><c> comparing</c><00:41:17.640><c> based</c><00:41:17.880><c> on</c>

00:41:18.079 --> 00:41:18.089 align:start position:0%
effect so we're still comparing based on
 

00:41:18.089 --> 00:41:19.759 align:start position:0%
effect so we're still comparing based on
but<00:41:18.539><c> we</c><00:41:18.659><c> have</c><00:41:18.779><c> to</c><00:41:18.869><c> reverse</c><00:41:19.079><c> the</c><00:41:19.289><c> order</c><00:41:19.319><c> as</c><00:41:19.589><c> well</c>

00:41:19.759 --> 00:41:19.769 align:start position:0%
but we have to reverse the order as well
 

00:41:19.769 --> 00:41:22.609 align:start position:0%
but we have to reverse the order as well
name<00:41:20.759><c> physician</c><00:41:21.449><c> medication</c><00:41:22.049><c> so</c><00:41:22.199><c> do</c><00:41:22.380><c> you</c><00:41:22.469><c> want</c>

00:41:22.609 --> 00:41:22.619 align:start position:0%
name physician medication so do you want
 

00:41:22.619 --> 00:41:27.589 align:start position:0%
name physician medication so do you want
to<00:41:22.679><c> say</c><00:41:24.919><c> parallel</c><00:41:25.919><c> streams</c><00:41:26.219><c> okay</c><00:41:26.969><c> let's</c><00:41:27.449><c> just</c>

00:41:27.589 --> 00:41:27.599 align:start position:0%
to say parallel streams okay let's just
 

00:41:27.599 --> 00:41:29.959 align:start position:0%
to say parallel streams okay let's just
talk<00:41:27.749><c> about</c><00:41:27.809><c> that</c><00:41:28.079><c> briefly</c><00:41:28.429><c> so</c><00:41:29.429><c> parallel</c>

00:41:29.959 --> 00:41:29.969 align:start position:0%
talk about that briefly so parallel
 

00:41:29.969 --> 00:41:32.599 align:start position:0%
talk about that briefly so parallel
streams<00:41:30.419><c> are</c><00:41:30.719><c> faster</c><00:41:31.439><c> surely</c><00:41:32.009><c> because</c><00:41:32.429><c> we're</c>

00:41:32.599 --> 00:41:32.609 align:start position:0%
streams are faster surely because we're
 

00:41:32.609 --> 00:41:34.309 align:start position:0%
streams are faster surely because we're
doing<00:41:32.819><c> things</c><00:41:32.999><c> in</c><00:41:33.150><c> parallel</c><00:41:33.509><c> we</c><00:41:33.630><c> must</c><00:41:33.869><c> get</c><00:41:34.140><c> a</c>

00:41:34.309 --> 00:41:34.319 align:start position:0%
doing things in parallel we must get a
 

00:41:34.319 --> 00:41:37.459 align:start position:0%
doing things in parallel we must get a
better<00:41:34.890><c> faster</c><00:41:35.669><c> result</c><00:41:36.349><c> unfortunately</c><00:41:37.349><c> it's</c>

00:41:37.459 --> 00:41:37.469 align:start position:0%
better faster result unfortunately it's
 

00:41:37.469 --> 00:41:39.229 align:start position:0%
better faster result unfortunately it's
not<00:41:37.559><c> guaranteed</c><00:41:38.219><c> and</c><00:41:38.640><c> the</c><00:41:38.789><c> reason</c><00:41:39.059><c> for</c><00:41:39.179><c> that</c>

00:41:39.229 --> 00:41:39.239 align:start position:0%
not guaranteed and the reason for that
 

00:41:39.239 --> 00:41:41.569 align:start position:0%
not guaranteed and the reason for that
is<00:41:39.569><c> that</c><00:41:39.779><c> a</c><00:41:39.809><c> parallel</c><00:41:40.319><c> stream</c><00:41:40.799><c> you</c><00:41:41.429><c> can</c>

00:41:41.569 --> 00:41:41.579 align:start position:0%
is that a parallel stream you can
 

00:41:41.579 --> 00:41:43.370 align:start position:0%
is that a parallel stream you can
guarantee<00:41:41.819><c> that</c><00:41:42.179><c> there's</c><00:41:42.719><c> always</c><00:41:42.959><c> going</c><00:41:43.349><c> to</c>

00:41:43.370 --> 00:41:43.380 align:start position:0%
guarantee that there's always going to
 

00:41:43.380 --> 00:41:45.529 align:start position:0%
guarantee that there's always going to
be<00:41:43.469><c> more</c><00:41:43.709><c> work</c><00:41:43.890><c> involved</c><00:41:44.189><c> because</c><00:41:45.059><c> you've</c><00:41:45.359><c> got</c>

00:41:45.529 --> 00:41:45.539 align:start position:0%
be more work involved because you've got
 

00:41:45.539 --> 00:41:46.789 align:start position:0%
be more work involved because you've got
the<00:41:45.630><c> fork/join</c><00:41:45.989><c> framework</c><00:41:46.409><c> that's</c><00:41:46.650><c> used</c>

00:41:46.789 --> 00:41:46.799 align:start position:0%
the fork/join framework that's used
 

00:41:46.799 --> 00:41:49.579 align:start position:0%
the fork/join framework that's used
underneath<00:41:47.099><c> and</c><00:41:47.839><c> what</c><00:41:48.839><c> you</c><00:41:49.079><c> have</c><00:41:49.229><c> to</c><00:41:49.349><c> set</c><00:41:49.499><c> up</c>

00:41:49.579 --> 00:41:49.589 align:start position:0%
underneath and what you have to set up
 

00:41:49.589 --> 00:41:52.519 align:start position:0%
underneath and what you have to set up
the<00:41:49.849><c> framework</c><00:41:50.849><c> you</c><00:41:51.029><c> have</c><00:41:51.239><c> to</c><00:41:51.449><c> create</c><00:41:52.349><c> the</c>

00:41:52.519 --> 00:41:52.529 align:start position:0%
the framework you have to create the
 

00:41:52.529 --> 00:41:53.959 align:start position:0%
the framework you have to create the
jobs<00:41:52.769><c> that</c><00:41:53.069><c> are</c><00:41:53.130><c> associated</c><00:41:53.309><c> with</c><00:41:53.640><c> the</c><00:41:53.759><c> queues</c>

00:41:53.959 --> 00:41:53.969 align:start position:0%
jobs that are associated with the queues
 

00:41:53.969 --> 00:41:55.819 align:start position:0%
jobs that are associated with the queues
for<00:41:54.119><c> those</c><00:41:54.269><c> threads</c><00:41:54.599><c> you</c><00:41:55.319><c> have</c><00:41:55.349><c> to</c><00:41:55.559><c> do</c><00:41:55.650><c> all</c><00:41:55.739><c> the</c>

00:41:55.819 --> 00:41:55.829 align:start position:0%
for those threads you have to do all the
 

00:41:55.829 --> 00:41:57.799 align:start position:0%
for those threads you have to do all the
work<00:41:55.949><c> and</c><00:41:56.099><c> then</c><00:41:56.219><c> you</c><00:41:56.309><c> have</c><00:41:56.429><c> to</c><00:41:56.609><c> collect</c><00:41:57.569><c> the</c>

00:41:57.799 --> 00:41:57.809 align:start position:0%
work and then you have to collect the
 

00:41:57.809 --> 00:42:00.409 align:start position:0%
work and then you have to collect the
results<00:41:58.019><c> at</c><00:41:58.349><c> the</c><00:41:58.439><c> end</c><00:41:58.589><c> so</c><00:41:59.099><c> it's</c><00:42:00.059><c> definitely</c>

00:42:00.409 --> 00:42:00.419 align:start position:0%
results at the end so it's definitely
 

00:42:00.419 --> 00:42:02.449 align:start position:0%
results at the end so it's definitely
gonna<00:42:00.539><c> be</c><00:42:00.659><c> more</c><00:42:00.809><c> work</c><00:42:01.019><c> it</c><00:42:01.319><c> might</c><00:42:01.769><c> happen</c><00:42:02.069><c> or</c>

00:42:02.449 --> 00:42:02.459 align:start position:0%
gonna be more work it might happen or
 

00:42:02.459 --> 00:42:05.479 align:start position:0%
gonna be more work it might happen or
might<00:42:02.699><c> complete</c><00:42:03.269><c> more</c><00:42:03.509><c> quickly</c><00:42:03.900><c> a</c><00:42:04.109><c> couple</c><00:42:04.919><c> of</c>

00:42:05.479 --> 00:42:05.489 align:start position:0%
might complete more quickly a couple of
 

00:42:05.489 --> 00:42:06.919 align:start position:0%
might complete more quickly a couple of
important<00:42:05.849><c> facts</c><00:42:06.119><c> about</c><00:42:06.150><c> parallel</c><00:42:06.630><c> streams</c>

00:42:06.919 --> 00:42:06.929 align:start position:0%
important facts about parallel streams
 

00:42:06.929 --> 00:42:09.859 align:start position:0%
important facts about parallel streams
are<00:42:07.380><c> the</c><00:42:08.249><c> fact</c><00:42:08.519><c> that</c><00:42:08.640><c> they</c><00:42:08.909><c> use</c><00:42:09.179><c> the</c><00:42:09.539><c> common</c>

00:42:09.859 --> 00:42:09.869 align:start position:0%
are the fact that they use the common
 

00:42:09.869 --> 00:42:12.559 align:start position:0%
are the fact that they use the common
fork/join<00:42:10.259><c> pool</c><00:42:10.529><c> so</c><00:42:11.189><c> there's</c><00:42:11.489><c> a</c><00:42:11.569><c> fork/join</c>

00:42:12.559 --> 00:42:12.569 align:start position:0%
fork/join pool so there's a fork/join
 

00:42:12.569 --> 00:42:14.269 align:start position:0%
fork/join pool so there's a fork/join
pool<00:42:12.719><c> that's</c><00:42:12.929><c> created</c><00:42:13.259><c> when</c><00:42:13.289><c> the</c><00:42:13.529><c> JVM</c><00:42:13.890><c> starts</c>

00:42:14.269 --> 00:42:14.279 align:start position:0%
pool that's created when the JVM starts
 

00:42:14.279 --> 00:42:17.029 align:start position:0%
pool that's created when the JVM starts
up<00:42:14.459><c> and</c><00:42:14.699><c> they</c><00:42:15.539><c> will</c><00:42:15.689><c> all</c><00:42:15.900><c> you</c><00:42:16.199><c> in</c><00:42:16.650><c> terms</c><00:42:16.829><c> of</c>

00:42:17.029 --> 00:42:17.039 align:start position:0%
up and they will all you in terms of
 

00:42:17.039 --> 00:42:18.529 align:start position:0%
up and they will all you in terms of
parallel<00:42:17.640><c> streams</c><00:42:17.909><c> they</c><00:42:18.029><c> will</c><00:42:18.150><c> always</c><00:42:18.390><c> use</c>

00:42:18.529 --> 00:42:18.539 align:start position:0%
parallel streams they will always use
 

00:42:18.539 --> 00:42:20.839 align:start position:0%
parallel streams they will always use
the<00:42:18.659><c> fork/join</c><00:42:19.049><c> pool</c><00:42:19.400><c> in</c><00:42:20.400><c> terms</c><00:42:20.669><c> of</c><00:42:20.789><c> the</c>

00:42:20.839 --> 00:42:20.849 align:start position:0%
the fork/join pool in terms of the
 

00:42:20.849 --> 00:42:22.399 align:start position:0%
the fork/join pool in terms of the
number<00:42:21.029><c> of</c><00:42:21.089><c> CPUs</c><00:42:21.569><c> that</c><00:42:21.809><c> that</c><00:42:21.929><c> uses</c><00:42:22.259><c> it</c>

00:42:22.399 --> 00:42:22.409 align:start position:0%
number of CPUs that that uses it
 

00:42:22.409 --> 00:42:24.769 align:start position:0%
number of CPUs that that uses it
defaults<00:42:22.829><c> to</c><00:42:22.919><c> the</c><00:42:23.069><c> number</c><00:42:23.549><c> of</c><00:42:23.699><c> cores</c><00:42:24.059><c> or</c><00:42:24.209><c> CPUs</c>

00:42:24.769 --> 00:42:24.779 align:start position:0%
defaults to the number of cores or CPUs
 

00:42:24.779 --> 00:42:25.190 align:start position:0%
defaults to the number of cores or CPUs
that

00:42:25.190 --> 00:42:25.200 align:start position:0%
that
 

00:42:25.200 --> 00:42:26.930 align:start position:0%
that
reported<00:42:25.590><c> by</c><00:42:25.710><c> the</c><00:42:25.770><c> operating</c><00:42:26.220><c> system</c><00:42:26.340><c> some</c>

00:42:26.930 --> 00:42:26.940 align:start position:0%
reported by the operating system some
 

00:42:26.940 --> 00:42:28.700 align:start position:0%
reported by the operating system some
people<00:42:27.150><c> have</c><00:42:27.390><c> said</c><00:42:27.600><c> it's</c><00:42:27.630><c> twice</c><00:42:28.320><c> that</c><00:42:28.350><c> number</c>

00:42:28.700 --> 00:42:28.710 align:start position:0%
people have said it's twice that number
 

00:42:28.710 --> 00:42:30.140 align:start position:0%
people have said it's twice that number
some<00:42:29.040><c> people</c><00:42:29.280><c> say</c><00:42:29.430><c> it's</c><00:42:29.580><c> that</c><00:42:29.700><c> another</c><00:42:29.910><c> plus</c>

00:42:30.140 --> 00:42:30.150 align:start position:0%
some people say it's that another plus
 

00:42:30.150 --> 00:42:31.850 align:start position:0%
some people say it's that another plus
one<00:42:30.450><c> if</c><00:42:30.960><c> you</c><00:42:31.020><c> look</c><00:42:31.170><c> at</c><00:42:31.230><c> the</c><00:42:31.290><c> source</c><00:42:31.440><c> code</c><00:42:31.530><c> it</c><00:42:31.770><c> is</c>

00:42:31.850 --> 00:42:31.860 align:start position:0%
one if you look at the source code it is
 

00:42:31.860 --> 00:42:33.410 align:start position:0%
one if you look at the source code it is
actually<00:42:32.190><c> the</c><00:42:32.250><c> number</c><00:42:32.460><c> of</c><00:42:32.520><c> CPUs</c><00:42:32.880><c> reported</c><00:42:33.330><c> by</c>

00:42:33.410 --> 00:42:33.420 align:start position:0%
actually the number of CPUs reported by
 

00:42:33.420 --> 00:42:35.750 align:start position:0%
actually the number of CPUs reported by
the<00:42:33.480><c> operating</c><00:42:33.870><c> system</c><00:42:34.130><c> one</c><00:42:35.130><c> point</c><00:42:35.490><c> that's</c>

00:42:35.750 --> 00:42:35.760 align:start position:0%
the operating system one point that's
 

00:42:35.760 --> 00:42:37.010 align:start position:0%
the operating system one point that's
interesting<00:42:36.270><c> about</c><00:42:36.390><c> that</c><00:42:36.450><c> is</c><00:42:36.600><c> if</c><00:42:36.840><c> you're</c>

00:42:37.010 --> 00:42:37.020 align:start position:0%
interesting about that is if you're
 

00:42:37.020 --> 00:42:40.160 align:start position:0%
interesting about that is if you're
using<00:42:37.670><c> JDK</c><00:42:38.670><c> 8</c><00:42:38.880><c> I'm</c><00:42:39.660><c> not</c><00:42:39.810><c> sure</c><00:42:39.930><c> if</c><00:42:39.990><c> this</c><00:42:40.080><c> is</c>

00:42:40.160 --> 00:42:40.170 align:start position:0%
using JDK 8 I'm not sure if this is
 

00:42:40.170 --> 00:42:41.300 align:start position:0%
using JDK 8 I'm not sure if this is
being<00:42:40.410><c> back</c><00:42:40.500><c> ported</c><00:42:40.800><c> but</c><00:42:40.950><c> if</c><00:42:41.070><c> you're</c><00:42:41.190><c> using</c>

00:42:41.300 --> 00:42:41.310 align:start position:0%
being back ported but if you're using
 

00:42:41.310 --> 00:42:45.200 align:start position:0%
being back ported but if you're using
JDK<00:42:41.820><c> 8</c><00:42:41.870><c> that's</c><00:42:42.870><c> not</c><00:42:43.260><c> see</c><00:42:43.950><c> group</c><00:42:44.160><c> aware</c><00:42:44.550><c> which</c>

00:42:45.200 --> 00:42:45.210 align:start position:0%
JDK 8 that's not see group aware which
 

00:42:45.210 --> 00:42:46.880 align:start position:0%
JDK 8 that's not see group aware which
means<00:42:45.450><c> if</c><00:42:45.630><c> you're</c><00:42:45.720><c> using</c><00:42:45.780><c> a</c><00:42:46.170><c> docker</c><00:42:46.440><c> container</c>

00:42:46.880 --> 00:42:46.890 align:start position:0%
means if you're using a docker container
 

00:42:46.890 --> 00:42:49.640 align:start position:0%
means if you're using a docker container
and<00:42:47.220><c> you</c><00:42:48.180><c> run</c><00:42:48.360><c> your</c><00:42:48.390><c> JVM</c><00:42:48.900><c> within</c><00:42:49.260><c> that</c><00:42:49.440><c> docker</c>

00:42:49.640 --> 00:42:49.650 align:start position:0%
and you run your JVM within that docker
 

00:42:49.650 --> 00:42:51.680 align:start position:0%
and you run your JVM within that docker
container<00:42:50.100><c> when</c><00:42:50.790><c> it</c><00:42:50.880><c> sets</c><00:42:51.090><c> up</c><00:42:51.240><c> the</c><00:42:51.330><c> full</c><00:42:51.480><c> joint</c>

00:42:51.680 --> 00:42:51.690 align:start position:0%
container when it sets up the full joint
 

00:42:51.690 --> 00:42:53.480 align:start position:0%
container when it sets up the full joint
pool<00:42:51.990><c> and</c><00:42:52.440><c> this</c><00:42:52.560><c> is</c><00:42:52.650><c> the</c><00:42:52.740><c> same</c><00:42:52.920><c> for</c><00:42:53.100><c> the</c><00:42:53.160><c> memory</c>

00:42:53.480 --> 00:42:53.490 align:start position:0%
pool and this is the same for the memory
 

00:42:53.490 --> 00:42:55.310 align:start position:0%
pool and this is the same for the memory
that<00:42:53.760><c> it</c><00:42:53.880><c> uses</c><00:42:54.150><c> for</c><00:42:54.270><c> the</c><00:42:54.330><c> heap</c><00:42:54.480><c> as</c><00:42:54.600><c> well</c><00:42:54.750><c> it's</c>

00:42:55.310 --> 00:42:55.320 align:start position:0%
that it uses for the heap as well it's
 

00:42:55.320 --> 00:42:56.540 align:start position:0%
that it uses for the heap as well it's
going<00:42:55.500><c> to</c><00:42:55.590><c> get</c><00:42:55.740><c> the</c><00:42:55.800><c> results</c><00:42:56.130><c> for</c><00:42:56.250><c> the</c><00:42:56.340><c> whole</c>

00:42:56.540 --> 00:42:56.550 align:start position:0%
going to get the results for the whole
 

00:42:56.550 --> 00:42:59.120 align:start position:0%
going to get the results for the whole
machine<00:42:56.910><c> not</c><00:42:57.150><c> for</c><00:42:57.480><c> the</c><00:42:57.600><c> container</c><00:42:57.930><c> JDK</c><00:42:58.710><c> 9</c><00:42:58.890><c> has</c>

00:42:59.120 --> 00:42:59.130 align:start position:0%
machine not for the container JDK 9 has
 

00:42:59.130 --> 00:43:01.700 align:start position:0%
machine not for the container JDK 9 has
had<00:42:59.310><c> some</c><00:42:59.490><c> changes</c><00:42:59.880><c> so</c><00:43:00.090><c> JDK</c><00:43:00.720><c> 9</c><00:43:00.900><c> on</c><00:43:01.050><c> Linux</c><00:43:01.350><c> is</c>

00:43:01.700 --> 00:43:01.710 align:start position:0%
had some changes so JDK 9 on Linux is
 

00:43:01.710 --> 00:43:05.750 align:start position:0%
had some changes so JDK 9 on Linux is
now<00:43:02.010><c> container</c><00:43:02.430><c> aware</c><00:43:04.160><c> okay</c><00:43:05.160><c> so</c><00:43:05.340><c> the</c><00:43:05.490><c> last</c>

00:43:05.750 --> 00:43:05.760 align:start position:0%
now container aware okay so the last
 

00:43:05.760 --> 00:43:07.430 align:start position:0%
now container aware okay so the last
last<00:43:06.180><c> example</c><00:43:06.600><c> very</c><00:43:06.900><c> quickly</c><00:43:07.080><c> because</c><00:43:07.350><c> we've</c>

00:43:07.430 --> 00:43:07.440 align:start position:0%
last example very quickly because we've
 

00:43:07.440 --> 00:43:10.610 align:start position:0%
last example very quickly because we've
got<00:43:07.530><c> about</c><00:43:07.620><c> two</c><00:43:07.860><c> minutes</c><00:43:09.170><c> nesting</c><00:43:10.170><c> parallel</c>

00:43:10.610 --> 00:43:10.620 align:start position:0%
got about two minutes nesting parallel
 

00:43:10.620 --> 00:43:13.010 align:start position:0%
got about two minutes nesting parallel
streams<00:43:11.010><c> this</c><00:43:11.670><c> is</c><00:43:11.730><c> a</c><00:43:12.060><c> really</c><00:43:12.330><c> bad</c><00:43:12.450><c> idea</c>

00:43:13.010 --> 00:43:13.020 align:start position:0%
streams this is a really bad idea
 

00:43:13.020 --> 00:43:15.320 align:start position:0%
streams this is a really bad idea
because<00:43:13.470><c> we're</c><00:43:13.770><c> using</c><00:43:13.890><c> the</c><00:43:14.130><c> same</c><00:43:14.490><c> fork/join</c>

00:43:15.320 --> 00:43:15.330 align:start position:0%
because we're using the same fork/join
 

00:43:15.330 --> 00:43:18.950 align:start position:0%
because we're using the same fork/join
pool<00:43:15.750><c> which</c><00:43:16.530><c> means</c><00:43:16.800><c> that</c><00:43:17.130><c> although</c><00:43:17.720><c> we</c><00:43:18.720><c> have</c>

00:43:18.950 --> 00:43:18.960 align:start position:0%
pool which means that although we have
 

00:43:18.960 --> 00:43:20.480 align:start position:0%
pool which means that although we have
separate<00:43:19.530><c> queues</c><00:43:19.830><c> so</c><00:43:19.860><c> we</c><00:43:20.190><c> don't</c><00:43:20.340><c> get</c><00:43:20.430><c> any</c>

00:43:20.480 --> 00:43:20.490 align:start position:0%
separate queues so we don't get any
 

00:43:20.490 --> 00:43:22.760 align:start position:0%
separate queues so we don't get any
corruption<00:43:21.090><c> of</c><00:43:21.300><c> data</c><00:43:21.510><c> we're</c><00:43:22.350><c> trying</c><00:43:22.560><c> to</c><00:43:22.650><c> use</c>

00:43:22.760 --> 00:43:22.770 align:start position:0%
corruption of data we're trying to use
 

00:43:22.770 --> 00:43:24.890 align:start position:0%
corruption of data we're trying to use
the<00:43:22.920><c> same</c><00:43:23.040><c> set</c><00:43:23.280><c> of</c><00:43:23.340><c> threads</c><00:43:23.610><c> to</c><00:43:23.910><c> do</c><00:43:24.060><c> the</c><00:43:24.360><c> nested</c>

00:43:24.890 --> 00:43:24.900 align:start position:0%
the same set of threads to do the nested
 

00:43:24.900 --> 00:43:27.940 align:start position:0%
the same set of threads to do the nested
parallel<00:43:25.740><c> stream</c><00:43:26.100><c> and</c><00:43:26.340><c> you</c><00:43:27.120><c> end</c><00:43:27.270><c> up</c><00:43:27.420><c> with</c>

00:43:27.940 --> 00:43:27.950 align:start position:0%
parallel stream and you end up with
 

00:43:27.950 --> 00:43:29.960 align:start position:0%
parallel stream and you end up with
effectively<00:43:28.950><c> worst</c><00:43:29.160><c> performance</c><00:43:29.610><c> because</c>

00:43:29.960 --> 00:43:29.970 align:start position:0%
effectively worst performance because
 

00:43:29.970 --> 00:43:31.640 align:start position:0%
effectively worst performance because
you're<00:43:30.240><c> trying</c><00:43:30.480><c> to</c><00:43:30.570><c> reuse</c><00:43:30.840><c> those</c><00:43:31.050><c> threads</c><00:43:31.290><c> but</c>

00:43:31.640 --> 00:43:31.650 align:start position:0%
you're trying to reuse those threads but
 

00:43:31.650 --> 00:43:33.590 align:start position:0%
you're trying to reuse those threads but
so<00:43:31.890><c> rather</c><00:43:32.040><c> than</c><00:43:32.130><c> having</c><00:43:32.340><c> separate</c><00:43:32.970><c> sets</c><00:43:33.450><c> of</c>

00:43:33.590 --> 00:43:33.600 align:start position:0%
so rather than having separate sets of
 

00:43:33.600 --> 00:43:35.300 align:start position:0%
so rather than having separate sets of
threads<00:43:34.080><c> associated</c><00:43:35.010><c> with</c><00:43:35.130><c> the</c><00:43:35.190><c> different</c>

00:43:35.300 --> 00:43:35.310 align:start position:0%
threads associated with the different
 

00:43:35.310 --> 00:43:38.000 align:start position:0%
threads associated with the different
parallel<00:43:36.270><c> streams</c><00:43:36.600><c> it's</c><00:43:37.260><c> going</c><00:43:37.500><c> to</c><00:43:37.560><c> be</c><00:43:37.650><c> worse</c>

00:43:38.000 --> 00:43:38.010 align:start position:0%
parallel streams it's going to be worse
 

00:43:38.010 --> 00:43:40.030 align:start position:0%
parallel streams it's going to be worse
in<00:43:38.220><c> case</c><00:43:38.400><c> of</c><00:43:38.580><c> in</c><00:43:38.820><c> the</c><00:43:38.850><c> case</c><00:43:38.970><c> of</c><00:43:39.240><c> performance</c>

00:43:40.030 --> 00:43:40.040 align:start position:0%
in case of in the case of performance
 

00:43:40.040 --> 00:43:43.580 align:start position:0%
in case of in the case of performance
there<00:43:41.040><c> is</c><00:43:41.540><c> a</c><00:43:42.540><c> way</c><00:43:42.870><c> around</c><00:43:43.020><c> this</c>

00:43:43.580 --> 00:43:43.590 align:start position:0%
there is a way around this
 

00:43:43.590 --> 00:43:46.640 align:start position:0%
there is a way around this
which<00:43:44.070><c> is</c><00:43:44.220><c> you</c><00:43:44.310><c> create</c><00:43:44.550><c> your</c><00:43:44.670><c> own</c><00:43:45.650><c> fork/join</c>

00:43:46.640 --> 00:43:46.650 align:start position:0%
which is you create your own fork/join
 

00:43:46.650 --> 00:43:48.710 align:start position:0%
which is you create your own fork/join
pool<00:43:46.890><c> so</c><00:43:47.550><c> you</c><00:43:47.580><c> can</c><00:43:47.820><c> actually</c><00:43:48.090><c> create</c><00:43:48.420><c> for</c>

00:43:48.710 --> 00:43:48.720 align:start position:0%
pool so you can actually create for
 

00:43:48.720 --> 00:43:51.560 align:start position:0%
pool so you can actually create for
joint<00:43:48.960><c> tasks</c><00:43:49.250><c> using</c><00:43:50.250><c> a</c><00:43:50.310><c> custom</c><00:43:50.760><c> pool</c><00:43:50.970><c> of</c><00:43:51.180><c> how</c>

00:43:51.560 --> 00:43:51.570 align:start position:0%
joint tasks using a custom pool of how
 

00:43:51.570 --> 00:43:53.120 align:start position:0%
joint tasks using a custom pool of how
many<00:43:51.840><c> threads</c><00:43:52.080><c> you</c><00:43:52.200><c> want</c><00:43:52.410><c> and</c><00:43:52.860><c> then</c><00:43:53.010><c> you</c>

00:43:53.120 --> 00:43:53.130 align:start position:0%
many threads you want and then you
 

00:43:53.130 --> 00:43:55.580 align:start position:0%
many threads you want and then you
submit<00:43:53.370><c> your</c><00:43:53.820><c> parallel</c><00:43:54.360><c> stream</c><00:43:54.690><c> task</c><00:43:55.050><c> to</c><00:43:55.410><c> that</c>

00:43:55.580 --> 00:43:55.590 align:start position:0%
submit your parallel stream task to that
 

00:43:55.590 --> 00:43:58.070 align:start position:0%
submit your parallel stream task to that
and<00:43:55.920><c> that</c><00:43:56.820><c> will</c><00:43:57.000><c> use</c><00:43:57.210><c> a</c><00:43:57.240><c> separate</c><00:43:57.870><c> set</c><00:43:58.050><c> of</c>

00:43:58.070 --> 00:43:58.080 align:start position:0%
and that will use a separate set of
 

00:43:58.080 --> 00:43:59.540 align:start position:0%
and that will use a separate set of
threads<00:43:58.380><c> so</c><00:43:58.890><c> you</c><00:43:58.950><c> can</c><00:43:59.160><c> potentially</c><00:43:59.280><c> get</c>

00:43:59.540 --> 00:43:59.550 align:start position:0%
threads so you can potentially get
 

00:43:59.550 --> 00:44:00.680 align:start position:0%
threads so you can potentially get
better<00:43:59.760><c> performance</c><00:43:59.850><c> but</c><00:44:00.240><c> you</c><00:44:00.270><c> had</c><00:44:00.540><c> something</c>

00:44:00.680 --> 00:44:00.690 align:start position:0%
better performance but you had something
 

00:44:00.690 --> 00:44:02.270 align:start position:0%
better performance but you had something
to<00:44:00.810><c> say</c><00:44:00.900><c> about</c><00:44:00.960><c> that</c><00:44:01.140><c> can</c><00:44:01.380><c> you</c><00:44:01.470><c> yeah</c><00:44:01.800><c> a</c><00:44:01.830><c> couple</c>

00:44:02.270 --> 00:44:02.280 align:start position:0%
to say about that can you yeah a couple
 

00:44:02.280 --> 00:44:04.190 align:start position:0%
to say about that can you yeah a couple
things<00:44:02.430><c> about</c><00:44:02.640><c> this</c><00:44:03.000><c> technique</c><00:44:03.390><c> here</c><00:44:03.690><c> so</c><00:44:03.930><c> so</c>

00:44:04.190 --> 00:44:04.200 align:start position:0%
things about this technique here so so
 

00:44:04.200 --> 00:44:06.140 align:start position:0%
things about this technique here so so
one<00:44:04.380><c> is</c><00:44:04.590><c> if</c><00:44:04.890><c> you</c><00:44:05.100><c> find</c><00:44:05.430><c> yourself</c><00:44:05.580><c> wanting</c><00:44:05.880><c> to</c>

00:44:06.140 --> 00:44:06.150 align:start position:0%
one is if you find yourself wanting to
 

00:44:06.150 --> 00:44:07.730 align:start position:0%
one is if you find yourself wanting to
use<00:44:06.330><c> your</c><00:44:06.510><c> own</c><00:44:06.600><c> fork/join</c><00:44:07.080><c> pool</c><00:44:07.320><c> I</c><00:44:07.500><c> think</c><00:44:07.680><c> if</c>

00:44:07.730 --> 00:44:07.740 align:start position:0%
use your own fork/join pool I think if
 

00:44:07.740 --> 00:44:09.500 align:start position:0%
use your own fork/join pool I think if
you<00:44:07.800><c> think</c><00:44:08.040><c> very</c><00:44:08.190><c> carefully</c><00:44:08.520><c> about</c><00:44:08.820><c> it</c><00:44:08.970><c> the</c>

00:44:09.500 --> 00:44:09.510 align:start position:0%
you think very carefully about it the
 

00:44:09.510 --> 00:44:12.290 align:start position:0%
you think very carefully about it the
first<00:44:09.780><c> is</c><00:44:10.080><c> that</c><00:44:10.700><c> this</c><00:44:11.700><c> is</c><00:44:11.940><c> really</c><00:44:11.970><c> an</c>

00:44:12.290 --> 00:44:12.300 align:start position:0%
first is that this is really an
 

00:44:12.300 --> 00:44:14.480 align:start position:0%
first is that this is really an
implementation<00:44:12.930><c> specific</c><00:44:13.110><c> behavior</c><00:44:13.800><c> which</c>

00:44:14.480 --> 00:44:14.490 align:start position:0%
implementation specific behavior which
 

00:44:14.490 --> 00:44:16.040 align:start position:0%
implementation specific behavior which
is<00:44:14.520><c> that</c><00:44:14.910><c> if</c><00:44:15.030><c> you</c><00:44:15.060><c> submit</c><00:44:15.450><c> a</c><00:44:15.480><c> task</c><00:44:15.720><c> to</c><00:44:16.020><c> a</c>

00:44:16.040 --> 00:44:16.050 align:start position:0%
is that if you submit a task to a
 

00:44:16.050 --> 00:44:18.710 align:start position:0%
is that if you submit a task to a
fork/join<00:44:16.560><c> pool</c><00:44:16.800><c> any</c><00:44:17.670><c> streams</c><00:44:18.150><c> processing</c>

00:44:18.710 --> 00:44:18.720 align:start position:0%
fork/join pool any streams processing
 

00:44:18.720 --> 00:44:21.770 align:start position:0%
fork/join pool any streams processing
that's<00:44:18.900><c> that's</c><00:44:19.440><c> done</c><00:44:19.850><c> within</c><00:44:20.850><c> that</c><00:44:21.030><c> task</c><00:44:21.360><c> will</c>

00:44:21.770 --> 00:44:21.780 align:start position:0%
that's that's done within that task will
 

00:44:21.780 --> 00:44:24.410 align:start position:0%
that's that's done within that task will
will<00:44:22.650><c> be</c><00:44:22.680><c> executed</c><00:44:23.370><c> in</c><00:44:23.490><c> the</c><00:44:23.520><c> same</c><00:44:23.820><c> fork/join</c>

00:44:24.410 --> 00:44:24.420 align:start position:0%
will be executed in the same fork/join
 

00:44:24.420 --> 00:44:25.940 align:start position:0%
will be executed in the same fork/join
pool<00:44:24.690><c> so</c><00:44:24.930><c> that's</c><00:44:25.110><c> that's</c><00:44:25.320><c> how</c><00:44:25.470><c> this</c><00:44:25.620><c> works</c><00:44:25.800><c> but</c>

00:44:25.940 --> 00:44:25.950 align:start position:0%
pool so that's that's how this works but
 

00:44:25.950 --> 00:44:27.650 align:start position:0%
pool so that's that's how this works but
that's<00:44:26.070><c> not</c><00:44:26.280><c> guaranteed</c><00:44:26.760><c> by</c><00:44:26.880><c> the</c><00:44:26.940><c> spec</c><00:44:27.270><c> that's</c>

00:44:27.650 --> 00:44:27.660 align:start position:0%
that's not guaranteed by the spec that's
 

00:44:27.660 --> 00:44:30.100 align:start position:0%
that's not guaranteed by the spec that's
just<00:44:27.960><c> how</c><00:44:28.080><c> the</c><00:44:28.140><c> implementation</c><00:44:28.440><c> works</c><00:44:29.040><c> today</c>

00:44:30.100 --> 00:44:30.110 align:start position:0%
just how the implementation works today
 

00:44:30.110 --> 00:44:32.720 align:start position:0%
just how the implementation works today
certainly<00:44:31.110><c> I</c><00:44:31.320><c> mean</c><00:44:31.470><c> for</c><00:44:31.680><c> all</c><00:44:31.710><c> of</c><00:44:31.800><c> JDK</c><00:44:32.190><c> agents</c>

00:44:32.720 --> 00:44:32.730 align:start position:0%
certainly I mean for all of JDK agents
 

00:44:32.730 --> 00:44:34.040 align:start position:0%
certainly I mean for all of JDK agents
worked<00:44:32.940><c> that</c><00:44:33.120><c> way</c><00:44:33.270><c> and</c><00:44:33.390><c> it's</c><00:44:33.540><c> at</c><00:44:33.810><c> this</c><00:44:33.960><c> point</c>

00:44:34.040 --> 00:44:34.050 align:start position:0%
worked that way and it's at this point
 

00:44:34.050 --> 00:44:35.470 align:start position:0%
worked that way and it's at this point
it's<00:44:34.320><c> not</c><00:44:34.380><c> going</c><00:44:34.500><c> to</c><00:44:34.710><c> change</c><00:44:34.890><c> but</c><00:44:35.190><c> it</c><00:44:35.280><c> might</c>

00:44:35.470 --> 00:44:35.480 align:start position:0%
it's not going to change but it might
 

00:44:35.480 --> 00:44:37.660 align:start position:0%
it's not going to change but it might
change<00:44:35.690><c> in</c><00:44:35.810><c> the</c><00:44:35.900><c> future</c><00:44:36.020><c> release</c><00:44:36.440><c> the</c><00:44:37.340><c> second</c>

00:44:37.660 --> 00:44:37.670 align:start position:0%
change in the future release the second
 

00:44:37.670 --> 00:44:39.640 align:start position:0%
change in the future release the second
thing<00:44:37.820><c> is</c><00:44:38.030><c> it's</c><00:44:38.750><c> like</c><00:44:38.810><c> well</c><00:44:39.050><c> you</c><00:44:39.260><c> might</c><00:44:39.440><c> you</c>

00:44:39.640 --> 00:44:39.650 align:start position:0%
thing is it's like well you might you
 

00:44:39.650 --> 00:44:41.140 align:start position:0%
thing is it's like well you might you
might<00:44:39.680><c> think</c><00:44:39.980><c> okay</c><00:44:40.250><c> well</c><00:44:40.400><c> I'm</c><00:44:40.490><c> gonna</c><00:44:40.640><c> want</c><00:44:41.060><c> to</c>

00:44:41.140 --> 00:44:41.150 align:start position:0%
might think okay well I'm gonna want to
 

00:44:41.150 --> 00:44:42.280 align:start position:0%
might think okay well I'm gonna want to
control<00:44:41.420><c> this</c><00:44:41.570><c> so</c><00:44:41.720><c> I'm</c><00:44:41.780><c> going</c><00:44:41.930><c> to</c><00:44:41.960><c> create</c><00:44:42.170><c> my</c>

00:44:42.280 --> 00:44:42.290 align:start position:0%
control this so I'm going to create my
 

00:44:42.290 --> 00:44:44.050 align:start position:0%
control this so I'm going to create my
own<00:44:42.320><c> fork/join</c><00:44:42.950><c> pool</c><00:44:43.220><c> but</c><00:44:43.700><c> you</c><00:44:43.760><c> should</c><00:44:43.940><c> be</c>

00:44:44.050 --> 00:44:44.060 align:start position:0%
own fork/join pool but you should be
 

00:44:44.060 --> 00:44:45.790 align:start position:0%
own fork/join pool but you should be
very<00:44:44.090><c> careful</c><00:44:44.540><c> because</c><00:44:44.930><c> if</c><00:44:45.320><c> you</c><00:44:45.350><c> start</c>

00:44:45.790 --> 00:44:45.800 align:start position:0%
very careful because if you start
 

00:44:45.800 --> 00:44:47.440 align:start position:0%
very careful because if you start
creating<00:44:45.980><c> fork/join</c><00:44:46.550><c> pools</c><00:44:46.820><c> all</c><00:44:47.060><c> over</c><00:44:47.300><c> your</c>

00:44:47.440 --> 00:44:47.450 align:start position:0%
creating fork/join pools all over your
 

00:44:47.450 --> 00:44:49.660 align:start position:0%
creating fork/join pools all over your
code<00:44:47.660><c> and</c><00:44:48.290><c> they</c><00:44:48.380><c> have</c><00:44:48.500><c> hard-coded</c><00:44:48.800><c> constants</c>

00:44:49.660 --> 00:44:49.670 align:start position:0%
code and they have hard-coded constants
 

00:44:49.670 --> 00:44:51.190 align:start position:0%
code and they have hard-coded constants
in<00:44:49.790><c> here</c><00:44:50.030><c> you</c><00:44:50.540><c> know</c><00:44:50.630><c> somebody's</c><00:44:50.930><c> gonna</c><00:44:51.020><c> run</c>

00:44:51.190 --> 00:44:51.200 align:start position:0%
in here you know somebody's gonna run
 

00:44:51.200 --> 00:44:52.990 align:start position:0%
in here you know somebody's gonna run
this<00:44:51.350><c> on</c><00:44:51.500><c> a</c><00:44:51.530><c> 24</c><00:44:51.950><c> core</c><00:44:52.160><c> machine</c><00:44:52.490><c> and</c><00:44:52.730><c> saying</c><00:44:52.880><c> why</c>

00:44:52.990 --> 00:44:53.000 align:start position:0%
this on a 24 core machine and saying why
 

00:44:53.000 --> 00:44:56.880 align:start position:0%
this on a 24 core machine and saying why
am<00:44:53.090><c> I</c><00:44:53.210><c> only</c><00:44:53.240><c> gonna</c><00:44:53.540><c> get</c><00:44:53.720><c> 4x</c><00:44:54.200><c> speed</c><00:44:54.590><c> up</c><00:44:54.760><c> so</c><00:44:55.760><c> or</c>

00:44:56.880 --> 00:44:56.890 align:start position:0%
am I only gonna get 4x speed up so or
 

00:44:56.890 --> 00:44:59.230 align:start position:0%
am I only gonna get 4x speed up so or
somebody<00:44:57.890><c> runs</c><00:44:58.100><c> it</c><00:44:58.220><c> on</c><00:44:58.340><c> a</c><00:44:58.369><c> few</c><00:44:58.670><c> core</c><00:44:58.880><c> machines</c>

00:44:59.230 --> 00:44:59.240 align:start position:0%
somebody runs it on a few core machines
 

00:44:59.240 --> 00:45:01.420 align:start position:0%
somebody runs it on a few core machines
and<00:44:59.600><c> there</c><00:44:59.960><c> are</c><00:45:00.080><c> thread</c><00:45:00.500><c> contention</c><00:45:00.980><c> going</c><00:45:01.250><c> on</c>

00:45:01.420 --> 00:45:01.430 align:start position:0%
and there are thread contention going on
 

00:45:01.430 --> 00:45:02.830 align:start position:0%
and there are thread contention going on
because<00:45:01.670><c> everybody's</c><00:45:02.270><c> created</c><00:45:02.660><c> his</c><00:45:02.750><c> own</c>

00:45:02.830 --> 00:45:02.840 align:start position:0%
because everybody's created his own
 

00:45:02.840 --> 00:45:04.840 align:start position:0%
because everybody's created his own
fork/join<00:45:03.440><c> pool</c><00:45:03.680><c> each</c><00:45:03.980><c> of</c><00:45:04.190><c> which</c><00:45:04.369><c> thinks</c><00:45:04.730><c> it</c>

00:45:04.840 --> 00:45:04.850 align:start position:0%
fork/join pool each of which thinks it
 

00:45:04.850 --> 00:45:07.060 align:start position:0%
fork/join pool each of which thinks it
owns<00:45:05.060><c> the</c><00:45:05.359><c> whole</c><00:45:05.510><c> machine</c><00:45:05.930><c> or</c><00:45:06.320><c> container</c><00:45:06.770><c> or</c>

00:45:07.060 --> 00:45:07.070 align:start position:0%
owns the whole machine or container or
 

00:45:07.070 --> 00:45:09.550 align:start position:0%
owns the whole machine or container or
whatever<00:45:07.430><c> so</c><00:45:08.030><c> I</c><00:45:08.270><c> mean</c><00:45:08.480><c> this</c><00:45:08.570><c> this</c><00:45:08.900><c> is</c><00:45:08.960><c> a</c><00:45:09.109><c> valid</c>

00:45:09.550 --> 00:45:09.560 align:start position:0%
whatever so I mean this this is a valid
 

00:45:09.560 --> 00:45:11.320 align:start position:0%
whatever so I mean this this is a valid
technique<00:45:09.710><c> if</c><00:45:10.010><c> you're</c><00:45:10.160><c> experimenting</c><00:45:10.700><c> and</c><00:45:11.180><c> if</c>

00:45:11.320 --> 00:45:11.330 align:start position:0%
technique if you're experimenting and if
 

00:45:11.330 --> 00:45:12.609 align:start position:0%
technique if you're experimenting and if
you're<00:45:11.450><c> very</c><00:45:11.630><c> very</c><00:45:11.750><c> careful</c><00:45:12.109><c> about</c><00:45:12.410><c> how</c><00:45:12.590><c> you</c>

00:45:12.609 --> 00:45:12.619 align:start position:0%
you're very very careful about how you
 

00:45:12.619 --> 00:45:15.700 align:start position:0%
you're very very careful about how you
deploy<00:45:12.950><c> it</c><00:45:12.980><c> but</c><00:45:13.660><c> it's</c><00:45:14.660><c> something</c><00:45:14.810><c> too</c><00:45:15.050><c> many</c>

00:45:15.700 --> 00:45:15.710 align:start position:0%
deploy it but it's something too many
 

00:45:15.710 --> 00:45:18.790 align:start position:0%
deploy it but it's something too many
things<00:45:15.920><c> to</c><00:45:16.010><c> be</c><00:45:16.100><c> careful</c><00:45:16.400><c> about</c><00:45:16.580><c> here</c><00:45:16.869><c> okay</c><00:45:17.869><c> so</c>

00:45:18.790 --> 00:45:18.800 align:start position:0%
things to be careful about here okay so
 

00:45:18.800 --> 00:45:20.050 align:start position:0%
things to be careful about here okay so
so<00:45:19.190><c> that</c><00:45:19.340><c> is</c><00:45:19.369><c> basically</c><00:45:19.640><c> it</c>

00:45:20.050 --> 00:45:20.060 align:start position:0%
so that is basically it
 

00:45:20.060 --> 00:45:23.980 align:start position:0%
so that is basically it
so<00:45:20.590><c> in</c><00:45:21.590><c> conclusion</c><00:45:22.510><c> streams</c><00:45:23.510><c> are</c><00:45:23.780><c> very</c>

00:45:23.980 --> 00:45:23.990 align:start position:0%
so in conclusion streams are very
 

00:45:23.990 --> 00:45:26.380 align:start position:0%
so in conclusion streams are very
powerful<00:45:24.320><c> but</c><00:45:24.670><c> with</c><00:45:25.670><c> great</c><00:45:25.880><c> power</c><00:45:26.090><c> comes</c>

00:45:26.380 --> 00:45:26.390 align:start position:0%
powerful but with great power comes
 

00:45:26.390 --> 00:45:29.320 align:start position:0%
powerful but with great power comes
great<00:45:26.720><c> responsibility</c><00:45:26.869><c> and</c><00:45:27.940><c> the</c><00:45:28.940><c> important</c>

00:45:29.320 --> 00:45:29.330 align:start position:0%
great responsibility and the important
 

00:45:29.330 --> 00:45:30.700 align:start position:0%
great responsibility and the important
thing<00:45:29.510><c> that</c><00:45:29.540><c> hopefully</c><00:45:30.109><c> you've</c><00:45:30.410><c> got</c><00:45:30.560><c> from</c>

00:45:30.700 --> 00:45:30.710 align:start position:0%
thing that hopefully you've got from
 

00:45:30.710 --> 00:45:32.830 align:start position:0%
thing that hopefully you've got from
this<00:45:30.890><c> is</c><00:45:31.070><c> trying</c><00:45:31.460><c> not</c><00:45:31.700><c> to</c><00:45:31.760><c> think</c><00:45:32.180><c> imperatively</c>

00:45:32.830 --> 00:45:32.840 align:start position:0%
this is trying not to think imperatively
 

00:45:32.840 --> 00:45:34.390 align:start position:0%
this is trying not to think imperatively
try<00:45:33.200><c> not</c><00:45:33.380><c> to</c><00:45:33.470><c> think</c><00:45:33.680><c> in</c><00:45:33.800><c> terms</c><00:45:33.830><c> of</c><00:45:34.160><c> loops</c>

00:45:34.390 --> 00:45:34.400 align:start position:0%
try not to think in terms of loops
 

00:45:34.400 --> 00:45:36.430 align:start position:0%
try not to think in terms of loops
because<00:45:34.850><c> whenever</c><00:45:35.630><c> you</c><00:45:35.840><c> think</c><00:45:35.960><c> of</c><00:45:36.080><c> for</c><00:45:36.320><c> each</c>

00:45:36.430 --> 00:45:36.440 align:start position:0%
because whenever you think of for each
 

00:45:36.440 --> 00:45:39.400 align:start position:0%
because whenever you think of for each
you<00:45:37.250><c> need</c><00:45:37.430><c> to</c><00:45:37.640><c> step</c><00:45:38.270><c> back</c><00:45:38.300><c> and</c><00:45:38.570><c> say</c><00:45:38.750><c> is</c><00:45:39.109><c> that</c>

00:45:39.400 --> 00:45:39.410 align:start position:0%
you need to step back and say is that
 

00:45:39.410 --> 00:45:41.050 align:start position:0%
you need to step back and say is that
the<00:45:39.500><c> way</c><00:45:39.619><c> that</c><00:45:39.650><c> you</c><00:45:39.950><c> should</c><00:45:40.100><c> do</c><00:45:40.220><c> it</c><00:45:40.310><c> and</c><00:45:40.430><c> as</c>

00:45:41.050 --> 00:45:41.060 align:start position:0%
the way that you should do it and as
 

00:45:41.060 --> 00:45:42.550 align:start position:0%
the way that you should do it and as
Stewart<00:45:41.570><c> said</c><00:45:41.780><c> several</c><00:45:42.050><c> times</c><00:45:42.230><c> during</c><00:45:42.440><c> the</c>

00:45:42.550 --> 00:45:42.560 align:start position:0%
Stewart said several times during the
 

00:45:42.560 --> 00:45:44.800 align:start position:0%
Stewart said several times during the
presentation<00:45:43.240><c> side-effects</c><00:45:44.240><c> are</c><00:45:44.390><c> the</c><00:45:44.630><c> things</c>

00:45:44.800 --> 00:45:44.810 align:start position:0%
presentation side-effects are the things
 

00:45:44.810 --> 00:45:47.830 align:start position:0%
presentation side-effects are the things
to<00:45:44.960><c> be</c><00:45:45.170><c> avoided</c><00:45:45.890><c> if</c><00:45:46.790><c> you</c><00:45:46.940><c> can</c><00:45:47.060><c> avoid</c><00:45:47.300><c> those</c><00:45:47.630><c> at</c>

00:45:47.830 --> 00:45:47.840 align:start position:0%
to be avoided if you can avoid those at
 

00:45:47.840 --> 00:45:51.430 align:start position:0%
to be avoided if you can avoid those at
all<00:45:48.080><c> costs</c><00:45:48.500><c> then</c><00:45:48.770><c> then</c><00:45:49.070><c> do</c><00:45:49.220><c> so</c><00:45:50.260><c> part</c><00:45:51.260><c> of</c><00:45:51.350><c> this</c>

00:45:51.430 --> 00:45:51.440 align:start position:0%
all costs then then do so part of this
 

00:45:51.440 --> 00:45:54.010 align:start position:0%
all costs then then do so part of this
the<00:45:51.800><c> power</c><00:45:52.609><c> of</c><00:45:52.760><c> streams</c><00:45:53.030><c> is</c><00:45:53.180><c> the</c><00:45:53.300><c> clarity</c><00:45:53.750><c> of</c>

00:45:54.010 --> 00:45:54.020 align:start position:0%
the power of streams is the clarity of
 

00:45:54.020 --> 00:45:56.020 align:start position:0%
the power of streams is the clarity of
the<00:45:54.109><c> code</c><00:45:54.320><c> don't</c><00:45:54.859><c> be</c><00:45:54.980><c> tempted</c><00:45:55.130><c> like</c><00:45:55.430><c> I</c><00:45:55.520><c> was</c><00:45:55.760><c> to</c>

00:45:56.020 --> 00:45:56.030 align:start position:0%
the code don't be tempted like I was to
 

00:45:56.030 --> 00:45:57.849 align:start position:0%
the code don't be tempted like I was to
go<00:45:56.180><c> and</c><00:45:56.270><c> try</c><00:45:56.630><c> and</c><00:45:56.750><c> squash</c><00:45:57.200><c> everything</c><00:45:57.650><c> into</c>

00:45:57.849 --> 00:45:57.859 align:start position:0%
go and try and squash everything into
 

00:45:57.859 --> 00:45:59.430 align:start position:0%
go and try and squash everything into
the<00:45:57.950><c> smallest</c><00:45:58.250><c> possible</c><00:45:58.580><c> number</c><00:45:58.820><c> of</c><00:45:59.090><c> lines</c>

00:45:59.430 --> 00:45:59.440 align:start position:0%
the smallest possible number of lines
 

00:45:59.440 --> 00:46:01.780 align:start position:0%
the smallest possible number of lines
make<00:46:00.440><c> it</c><00:46:00.590><c> readable</c><00:46:00.830><c> make</c><00:46:01.220><c> it</c><00:46:01.340><c> understandable</c>

00:46:01.780 --> 00:46:01.790 align:start position:0%
make it readable make it understandable
 

00:46:01.790 --> 00:46:03.940 align:start position:0%
make it readable make it understandable
by<00:46:02.000><c> other</c><00:46:02.150><c> people</c><00:46:02.420><c> and</c><00:46:02.630><c> as</c><00:46:03.320><c> we</c><00:46:03.500><c> just</c><00:46:03.619><c> explained</c>

00:46:03.940 --> 00:46:03.950 align:start position:0%
by other people and as we just explained
 

00:46:03.950 --> 00:46:05.940 align:start position:0%
by other people and as we just explained
parallel<00:46:04.310><c> doesn't</c><00:46:04.670><c> necessarily</c><00:46:05.300><c> mean</c><00:46:05.450><c> faster</c>

00:46:05.940 --> 00:46:05.950 align:start position:0%
parallel doesn't necessarily mean faster
 

00:46:05.950 --> 00:46:08.109 align:start position:0%
parallel doesn't necessarily mean faster
so<00:46:06.950><c> I</c><00:46:06.980><c> think</c><00:46:07.070><c> that</c><00:46:07.340><c> that's</c><00:46:07.460><c> you</c><00:46:07.820><c> know</c><00:46:07.910><c> you've</c>

00:46:08.109 --> 00:46:08.119 align:start position:0%
so I think that that's you know you've
 

00:46:08.119 --> 00:46:10.420 align:start position:0%
so I think that that's you know you've
got<00:46:08.270><c> a</c><00:46:08.300><c> couple</c><00:46:08.510><c> of</c><00:46:08.600><c> key</c><00:46:09.170><c> key</c><00:46:09.500><c> takeaway</c><00:46:09.920><c> if</c><00:46:10.250><c> you</c>

00:46:10.420 --> 00:46:10.430 align:start position:0%
got a couple of key key takeaway if you
 

00:46:10.430 --> 00:46:12.220 align:start position:0%
got a couple of key key takeaway if you
find<00:46:10.640><c> yourself</c><00:46:10.730><c> writing</c><00:46:11.240><c> for</c><00:46:11.570><c> each</c><00:46:11.720><c> with</c><00:46:12.020><c> side</c>

00:46:12.220 --> 00:46:12.230 align:start position:0%
find yourself writing for each with side
 

00:46:12.230 --> 00:46:17.680 align:start position:0%
find yourself writing for each with side
effects<00:46:12.560><c> look</c><00:46:13.040><c> at</c><00:46:13.160><c> collectors</c><00:46:14.859><c> so</c><00:46:16.630><c> thank</c><00:46:17.630><c> you</c>

00:46:17.680 --> 00:46:17.690 align:start position:0%
effects look at collectors so thank you
 

00:46:17.690 --> 00:46:18.890 align:start position:0%
effects look at collectors so thank you
very<00:46:17.780><c> much</c>

00:46:18.890 --> 00:46:18.900 align:start position:0%
very much
 

00:46:18.900 --> 00:46:20.960 align:start position:0%
very much
you

