WEBVTT
Kind: captions
Language: en

00:00:03.500 --> 00:00:08.420 align:start position:0%
 
well<00:00:04.500><c> I</c><00:00:04.530><c> guess</c><00:00:04.800><c> we</c><00:00:04.950><c> can</c><00:00:05.160><c> we</c><00:00:05.790><c> can</c><00:00:05.940><c> begin</c><00:00:07.430><c> welcome</c>

00:00:08.420 --> 00:00:08.430 align:start position:0%
well I guess we can we can begin welcome
 

00:00:08.430 --> 00:00:10.130 align:start position:0%
well I guess we can we can begin welcome
to<00:00:08.610><c> to</c><00:00:08.910><c> these</c><00:00:09.030><c> talk</c><00:00:09.300><c> streams</c><00:00:09.720><c> in</c><00:00:09.870><c> a</c><00:00:09.960><c> while</c>

00:00:10.130 --> 00:00:10.140 align:start position:0%
to to these talk streams in a while
 

00:00:10.140 --> 00:00:13.790 align:start position:0%
to to these talk streams in a while
thank<00:00:10.769><c> you</c><00:00:10.860><c> for</c><00:00:11.040><c> coming</c><00:00:11.510><c> I</c><00:00:12.510><c> hope</c><00:00:13.110><c> you'll</c><00:00:13.470><c> enjoy</c>

00:00:13.790 --> 00:00:13.800 align:start position:0%
thank you for coming I hope you'll enjoy
 

00:00:13.800 --> 00:00:18.650 align:start position:0%
thank you for coming I hope you'll enjoy
your<00:00:13.830><c> next</c><00:00:14.280><c> 45</c><00:00:14.760><c> minutes</c><00:00:14.960><c> in</c><00:00:15.960><c> this</c><00:00:16.170><c> room</c><00:00:17.630><c> what</c><00:00:18.630><c> I</c>

00:00:18.650 --> 00:00:18.660 align:start position:0%
your next 45 minutes in this room what I
 

00:00:18.660 --> 00:00:21.350 align:start position:0%
your next 45 minutes in this room what I
would<00:00:18.869><c> like</c><00:00:18.960><c> to</c><00:00:19.019><c> talk</c><00:00:19.289><c> to</c><00:00:19.410><c> you</c><00:00:19.530><c> about</c><00:00:20.430><c> today</c><00:00:20.910><c> is</c>

00:00:21.350 --> 00:00:21.360 align:start position:0%
would like to talk to you about today is
 

00:00:21.360 --> 00:00:22.910 align:start position:0%
would like to talk to you about today is
of<00:00:21.750><c> course</c><00:00:21.960><c> about</c><00:00:22.200><c> the</c><00:00:22.350><c> stream</c><00:00:22.740><c> API</c>

00:00:22.910 --> 00:00:22.920 align:start position:0%
of course about the stream API
 

00:00:22.920 --> 00:00:26.090 align:start position:0%
of course about the stream API
introduced<00:00:23.910><c> in</c><00:00:24.119><c> Java</c><00:00:24.360><c> 8</c><00:00:24.600><c> and</c><00:00:25.200><c> especially</c><00:00:25.980><c> to</c>

00:00:26.090 --> 00:00:26.100 align:start position:0%
introduced in Java 8 and especially to
 

00:00:26.100 --> 00:00:27.200 align:start position:0%
introduced in Java 8 and especially to
show<00:00:26.130><c> you</c>

00:00:27.200 --> 00:00:27.210 align:start position:0%
show you
 

00:00:27.210 --> 00:00:29.740 align:start position:0%
show you
advanced<00:00:28.020><c> patterns</c><00:00:28.470><c> with</c><00:00:29.010><c> the</c><00:00:29.130><c> stream</c><00:00:29.369><c> API</c>

00:00:29.740 --> 00:00:29.750 align:start position:0%
advanced patterns with the stream API
 

00:00:29.750 --> 00:00:32.479 align:start position:0%
advanced patterns with the stream API
basically<00:00:30.750><c> based</c><00:00:31.230><c> on</c><00:00:31.380><c> the</c><00:00:31.560><c> splitter</c><00:00:32.039><c> ater</c>

00:00:32.479 --> 00:00:32.489 align:start position:0%
basically based on the splitter ater
 

00:00:32.489 --> 00:00:35.870 align:start position:0%
basically based on the splitter ater
API<00:00:32.879><c> which</c><00:00:33.239><c> is</c><00:00:33.420><c> a</c><00:00:33.449><c> an</c><00:00:34.020><c> API</c><00:00:34.379><c> from</c><00:00:34.770><c> inside</c><00:00:35.160><c> the</c>

00:00:35.870 --> 00:00:35.880 align:start position:0%
API which is a an API from inside the
 

00:00:35.880 --> 00:00:39.620 align:start position:0%
API which is a an API from inside the
stream<00:00:36.149><c> API</c><00:00:36.800><c> this</c><00:00:37.800><c> will</c><00:00:37.980><c> be</c><00:00:38.100><c> mostly</c><00:00:39.030><c> a</c><00:00:39.149><c> live</c>

00:00:39.620 --> 00:00:39.630 align:start position:0%
stream API this will be mostly a live
 

00:00:39.630 --> 00:00:43.160 align:start position:0%
stream API this will be mostly a live
coding<00:00:39.870><c> session</c><00:00:40.320><c> I</c><00:00:40.560><c> hope</c><00:00:41.190><c> you</c><00:00:41.399><c> all</c><00:00:41.670><c> liked</c><00:00:42.329><c> live</c>

00:00:43.160 --> 00:00:43.170 align:start position:0%
coding session I hope you all liked live
 

00:00:43.170 --> 00:00:46.880 align:start position:0%
coding session I hope you all liked live
coding<00:00:43.440><c> yeah</c><00:00:44.220><c> do</c><00:00:45.059><c> your</c><00:00:45.210><c> previous</c><00:00:45.540><c> lines</c><00:00:45.890><c> but</c>

00:00:46.880 --> 00:00:46.890 align:start position:0%
coding yeah do your previous lines but
 

00:00:46.890 --> 00:00:49.459 align:start position:0%
coding yeah do your previous lines but
at<00:00:47.010><c> points</c><00:00:47.309><c> plenty</c><00:00:48.210><c> of</c><00:00:48.300><c> bullet</c><00:00:48.540><c> points</c><00:00:48.840><c> many</c>

00:00:49.459 --> 00:00:49.469 align:start position:0%
at points plenty of bullet points many
 

00:00:49.469 --> 00:00:51.440 align:start position:0%
at points plenty of bullet points many
many<00:00:49.739><c> burritos</c><00:00:49.920><c> I've</c><00:00:50.760><c> got</c><00:00:50.940><c> something</c><00:00:51.270><c> for</c><00:00:51.390><c> you</c>

00:00:51.440 --> 00:00:51.450 align:start position:0%
many burritos I've got something for you
 

00:00:51.450 --> 00:00:53.959 align:start position:0%
many burritos I've got something for you
for<00:00:51.660><c> that</c><00:00:51.780><c> showing</c><00:00:52.559><c> that</c><00:00:52.649><c> this</c><00:00:53.579><c> work</c><00:00:53.790><c> is</c>

00:00:53.959 --> 00:00:53.969 align:start position:0%
for that showing that this work is
 

00:00:53.969 --> 00:00:56.240 align:start position:0%
for that showing that this work is
mostly<00:00:54.390><c> based</c><00:00:54.600><c> on</c><00:00:54.809><c> a</c><00:00:55.290><c> work</c><00:00:55.500><c> I've</c><00:00:55.649><c> published</c><00:00:55.890><c> on</c>

00:00:56.240 --> 00:00:56.250 align:start position:0%
mostly based on a work I've published on
 

00:00:56.250 --> 00:01:00.799 align:start position:0%
mostly based on a work I've published on
huge<00:00:56.489><c> on</c><00:00:56.790><c> YouTube</c><00:00:57.120><c> on</c><00:00:58.190><c> github</c><00:00:59.190><c> sorry</c><00:00:59.520><c> a</c><00:00:59.809><c> few</c>

00:01:00.799 --> 00:01:00.809 align:start position:0%
huge on YouTube on github sorry a few
 

00:01:00.809 --> 00:01:03.860 align:start position:0%
huge on YouTube on github sorry a few
months<00:01:01.170><c> if</c><00:01:01.469><c> not</c><00:01:01.800><c> a</c><00:01:02.270><c> little</c><00:01:03.270><c> more</c><00:01:03.420><c> than</c><00:01:03.539><c> a</c><00:01:03.660><c> year</c>

00:01:03.860 --> 00:01:03.870 align:start position:0%
months if not a little more than a year
 

00:01:03.870 --> 00:01:07.960 align:start position:0%
months if not a little more than a year
ago<00:01:03.960><c> an</c><00:01:04.320><c> API</c><00:01:04.619><c> called</c><00:01:04.979><c> streams</c><00:01:05.280><c> utils</c><00:01:05.610><c> which</c><00:01:06.570><c> is</c>

00:01:07.960 --> 00:01:07.970 align:start position:0%
ago an API called streams utils which is
 

00:01:07.970 --> 00:01:10.580 align:start position:0%
ago an API called streams utils which is
basically<00:01:08.970><c> an</c><00:01:09.150><c> API</c><00:01:09.479><c> that</c><00:01:09.630><c> extends</c><00:01:10.380><c> what</c><00:01:10.500><c> we</c>

00:01:10.580 --> 00:01:10.590 align:start position:0%
basically an API that extends what we
 

00:01:10.590 --> 00:01:12.500 align:start position:0%
basically an API that extends what we
are<00:01:10.680><c> going</c><00:01:10.830><c> to</c><00:01:10.979><c> show</c><00:01:11.190><c> what</c><00:01:11.909><c> I'm</c><00:01:12.030><c> going</c><00:01:12.240><c> to</c><00:01:12.270><c> show</c>

00:01:12.500 --> 00:01:12.510 align:start position:0%
are going to show what I'm going to show
 

00:01:12.510 --> 00:01:16.910 align:start position:0%
are going to show what I'm going to show
you<00:01:12.740><c> in</c><00:01:13.740><c> a</c><00:01:14.010><c> minute</c><00:01:14.460><c> to</c><00:01:14.670><c> come</c><00:01:14.850><c> my</c><00:01:15.840><c> name</c><00:01:15.869><c> is</c><00:01:16.049><c> Josie</c>

00:01:16.910 --> 00:01:16.920 align:start position:0%
you in a minute to come my name is Josie
 

00:01:16.920 --> 00:01:19.700 align:start position:0%
you in a minute to come my name is Josie
and<00:01:17.130><c> live</c><00:01:17.280><c> in</c><00:01:17.310><c> a</c><00:01:17.549><c> Paris</c><00:01:18.090><c> area</c><00:01:18.390><c> here</c><00:01:19.320><c> are</c><00:01:19.470><c> some</c>

00:01:19.700 --> 00:01:19.710 align:start position:0%
and live in a Paris area here are some
 

00:01:19.710 --> 00:01:22.219 align:start position:0%
and live in a Paris area here are some
links<00:01:19.890><c> with</c><00:01:20.220><c> the</c><00:01:20.610><c> some</c><00:01:21.299><c> of</c><00:01:21.420><c> my</c><00:01:21.540><c> works</c><00:01:21.810><c> you</c><00:01:22.049><c> can</c>

00:01:22.219 --> 00:01:22.229 align:start position:0%
links with the some of my works you can
 

00:01:22.229 --> 00:01:24.950 align:start position:0%
links with the some of my works you can
find<00:01:22.500><c> on</c><00:01:22.680><c> the</c><00:01:22.860><c> on</c><00:01:23.130><c> the</c><00:01:23.280><c> Internet</c><00:01:23.640><c> including</c><00:01:24.360><c> a</c>

00:01:24.950 --> 00:01:24.960 align:start position:0%
find on the on the Internet including a
 

00:01:24.960 --> 00:01:28.460 align:start position:0%
find on the on the Internet including a
youtube<00:01:25.470><c> Botox</c><00:01:26.330><c> my</c><00:01:27.330><c> also</c><00:01:27.510><c> proud</c><00:01:27.990><c> member</c><00:01:28.439><c> of</c>

00:01:28.460 --> 00:01:28.470 align:start position:0%
youtube Botox my also proud member of
 

00:01:28.470 --> 00:01:31.640 align:start position:0%
youtube Botox my also proud member of
the<00:01:28.619><c> Paris</c><00:01:29.070><c> Java</c><00:01:29.430><c> user</c><00:01:29.670><c> group</c><00:01:29.990><c> in</c><00:01:30.990><c> case</c><00:01:31.500><c> you</c>

00:01:31.640 --> 00:01:31.650 align:start position:0%
the Paris Java user group in case you
 

00:01:31.650 --> 00:01:34.010 align:start position:0%
the Paris Java user group in case you
have<00:01:31.770><c> questions</c><00:01:31.799><c> just</c><00:01:32.670><c> raise</c><00:01:33.450><c> your</c><00:01:33.509><c> hand</c>

00:01:34.010 --> 00:01:34.020 align:start position:0%
have questions just raise your hand
 

00:01:34.020 --> 00:01:36.289 align:start position:0%
have questions just raise your hand
shout<00:01:34.560><c> make</c><00:01:35.070><c> some</c><00:01:35.310><c> noise</c><00:01:35.460><c> so</c><00:01:35.759><c> that</c><00:01:35.909><c> they</c><00:01:36.090><c> can</c>

00:01:36.289 --> 00:01:36.299 align:start position:0%
shout make some noise so that they can
 

00:01:36.299 --> 00:01:39.980 align:start position:0%
shout make some noise so that they can
hear<00:01:36.810><c> and</c><00:01:37.020><c> see</c><00:01:37.950><c> you</c><00:01:38.189><c> and</c><00:01:38.490><c> take</c><00:01:39.030><c> a</c><00:01:39.060><c> question</c><00:01:39.299><c> do</c>

00:01:39.980 --> 00:01:39.990 align:start position:0%
hear and see you and take a question do
 

00:01:39.990 --> 00:01:41.690 align:start position:0%
hear and see you and take a question do
not<00:01:40.110><c> hesitate</c><00:01:40.470><c> to</c><00:01:40.799><c> interrupt</c><00:01:41.040><c> do</c><00:01:41.400><c> not</c><00:01:41.549><c> do</c><00:01:41.670><c> not</c>

00:01:41.690 --> 00:01:41.700 align:start position:0%
not hesitate to interrupt do not do not
 

00:01:41.700 --> 00:01:43.340 align:start position:0%
not hesitate to interrupt do not do not
wait<00:01:42.090><c> for</c><00:01:42.299><c> the</c><00:01:42.390><c> for</c><00:01:42.600><c> the</c><00:01:42.689><c> end</c><00:01:42.810><c> of</c><00:01:42.900><c> the</c><00:01:42.990><c> talk</c><00:01:43.170><c> if</c>

00:01:43.340 --> 00:01:43.350 align:start position:0%
wait for the for the end of the talk if
 

00:01:43.350 --> 00:01:45.800 align:start position:0%
wait for the for the end of the talk if
you<00:01:43.439><c> have</c><00:01:43.470><c> questions</c><00:01:44.420><c> and</c><00:01:45.420><c> if</c><00:01:45.540><c> you</c><00:01:45.689><c> have</c>

00:01:45.800 --> 00:01:45.810 align:start position:0%
you have questions and if you have
 

00:01:45.810 --> 00:01:48.170 align:start position:0%
you have questions and if you have
questions<00:01:45.979><c> afterwards</c><00:01:46.979><c> you</c><00:01:47.070><c> can</c><00:01:47.250><c> use</c><00:01:48.000><c> this</c>

00:01:48.170 --> 00:01:48.180 align:start position:0%
questions afterwards you can use this
 

00:01:48.180 --> 00:01:50.660 align:start position:0%
questions afterwards you can use this
hashtag<00:01:48.390><c> I'm</c><00:01:48.780><c> always</c><00:01:48.960><c> monitoring</c><00:01:49.710><c> it</c><00:01:49.860><c> so</c><00:01:50.490><c> if</c>

00:01:50.660 --> 00:01:50.670 align:start position:0%
hashtag I'm always monitoring it so if
 

00:01:50.670 --> 00:01:52.520 align:start position:0%
hashtag I'm always monitoring it so if
you<00:01:50.850><c> have</c><00:01:50.880><c> it's</c><00:01:51.600><c> a</c><00:01:51.750><c> good</c><00:01:51.930><c> way</c><00:01:52.079><c> to</c><00:01:52.140><c> interact</c>

00:01:52.520 --> 00:01:52.530 align:start position:0%
you have it's a good way to interact
 

00:01:52.530 --> 00:01:55.780 align:start position:0%
you have it's a good way to interact
offline<00:01:53.340><c> after</c><00:01:53.880><c> after</c><00:01:54.479><c> the</c><00:01:54.600><c> conference</c><00:01:54.960><c> and</c>

00:01:55.780 --> 00:01:55.790 align:start position:0%
offline after after the conference and
 

00:01:55.790 --> 00:01:59.420 align:start position:0%
offline after after the conference and
that's<00:01:56.790><c> it</c><00:01:57.060><c> for</c><00:01:57.630><c> the</c><00:01:57.750><c> slides</c><00:01:58.079><c> now</c><00:01:58.320><c> I</c><00:01:58.740><c> know</c><00:01:59.100><c> that</c>

00:01:59.420 --> 00:01:59.430 align:start position:0%
that's it for the slides now I know that
 

00:01:59.430 --> 00:02:01.280 align:start position:0%
that's it for the slides now I know that
some<00:01:59.700><c> of</c><00:01:59.759><c> you</c><00:01:59.880><c> probably</c><00:02:00.509><c> like</c><00:02:00.720><c> bullet</c><00:02:01.020><c> points</c>

00:02:01.280 --> 00:02:01.290 align:start position:0%
some of you probably like bullet points
 

00:02:01.290 --> 00:02:03.109 align:start position:0%
some of you probably like bullet points
are<00:02:01.409><c> I</c><00:02:01.500><c> do</c><00:02:01.560><c> not</c><00:02:01.649><c> want</c><00:02:01.979><c> to</c><00:02:02.130><c> create</c><00:02:02.490><c> any</c><00:02:02.790><c> kind</c><00:02:03.000><c> of</c>

00:02:03.109 --> 00:02:03.119 align:start position:0%
are I do not want to create any kind of
 

00:02:03.119 --> 00:02:05.060 align:start position:0%
are I do not want to create any kind of
frustration<00:02:03.659><c> in</c><00:02:03.990><c> the</c><00:02:04.079><c> audience</c><00:02:04.380><c> so</c><00:02:05.040><c> I</c>

00:02:05.060 --> 00:02:05.070 align:start position:0%
frustration in the audience so I
 

00:02:05.070 --> 00:02:07.039 align:start position:0%
frustration in the audience so I
gathered<00:02:05.640><c> a</c><00:02:05.820><c> bunch</c><00:02:06.240><c> of</c><00:02:06.390><c> bullet</c><00:02:06.720><c> points</c><00:02:07.020><c> here</c>

00:02:07.039 --> 00:02:07.049 align:start position:0%
gathered a bunch of bullet points here
 

00:02:07.049 --> 00:02:08.630 align:start position:0%
gathered a bunch of bullet points here
for<00:02:07.290><c> you</c><00:02:07.590><c> guys</c>

00:02:08.630 --> 00:02:08.640 align:start position:0%
for you guys
 

00:02:08.640 --> 00:02:13.340 align:start position:0%
for you guys
and<00:02:08.820><c> that's</c><00:02:09.570><c> it</c><00:02:10.220><c> any</c><00:02:11.220><c> Oracle</c><00:02:12.210><c> OpenWorld</c><00:02:12.420><c> only</c>

00:02:13.340 --> 00:02:13.350 align:start position:0%
and that's it any Oracle OpenWorld only
 

00:02:13.350 --> 00:02:17.870 align:start position:0%
and that's it any Oracle OpenWorld only
people<00:02:13.860><c> in</c><00:02:13.890><c> the</c><00:02:14.100><c> room</c><00:02:16.340><c> it</c><00:02:17.340><c> shouldn't</c><00:02:17.760><c> be</c>

00:02:17.870 --> 00:02:17.880 align:start position:0%
people in the room it shouldn't be
 

00:02:17.880 --> 00:02:23.530 align:start position:0%
people in the room it shouldn't be
saying<00:02:18.090><c> that</c><00:02:21.350><c> imagine</c><00:02:22.350><c> the</c><00:02:22.380><c> answer</c><00:02:22.590><c> is</c><00:02:22.860><c> true</c>

00:02:23.530 --> 00:02:23.540 align:start position:0%
saying that imagine the answer is true
 

00:02:23.540 --> 00:02:26.240 align:start position:0%
saying that imagine the answer is true
what<00:02:24.540><c> I'm</c><00:02:24.660><c> looking</c><00:02:25.080><c> at</c><00:02:25.200><c> yes</c><00:02:25.440><c> this</c><00:02:25.740><c> I</c><00:02:26.040><c> need</c><00:02:26.220><c> to</c>

00:02:26.240 --> 00:02:26.250 align:start position:0%
what I'm looking at yes this I need to
 

00:02:26.250 --> 00:02:32.290 align:start position:0%
what I'm looking at yes this I need to
switch<00:02:27.120><c> this</c><00:02:27.390><c> right</c><00:02:28.230><c> and</c><00:02:29.090><c> switch</c><00:02:30.090><c> to</c><00:02:31.280><c> here</c>

00:02:32.290 --> 00:02:32.300 align:start position:0%
switch this right and switch to here
 

00:02:32.300 --> 00:02:35.840 align:start position:0%
switch this right and switch to here
this<00:02:33.300><c> is</c><00:02:33.450><c> an</c><00:02:33.570><c> ID</c><00:02:33.690><c> can</c><00:02:34.170><c> you</c><00:02:34.260><c> see</c><00:02:34.470><c> it</c><00:02:34.700><c> sit</c><00:02:35.700><c> I</c><00:02:35.820><c> will</c>

00:02:35.840 --> 00:02:35.850 align:start position:0%
this is an ID can you see it sit I will
 

00:02:35.850 --> 00:02:37.790 align:start position:0%
this is an ID can you see it sit I will
favorite<00:02:36.240><c> tool</c><00:02:36.480><c> it</c><00:02:36.870><c> is</c><00:02:37.020><c> the</c><00:02:37.230><c> phone</c><00:02:37.440><c> big</c><00:02:37.620><c> enough</c>

00:02:37.790 --> 00:02:37.800 align:start position:0%
favorite tool it is the phone big enough
 

00:02:37.800 --> 00:02:38.449 align:start position:0%
favorite tool it is the phone big enough
for<00:02:37.860><c> everyone</c>

00:02:38.449 --> 00:02:38.459 align:start position:0%
for everyone
 

00:02:38.459 --> 00:02:43.699 align:start position:0%
for everyone
yeah<00:02:39.650><c> could</c><00:02:40.650><c> it</c><00:02:40.740><c> be</c><00:02:40.770><c> bigger</c><00:02:41.160><c> I</c><00:02:42.350><c> can</c><00:02:43.350><c> I</c><00:02:43.410><c> do</c><00:02:43.470><c> that</c>

00:02:43.699 --> 00:02:43.709 align:start position:0%
yeah could it be bigger I can I do that
 

00:02:43.709 --> 00:02:47.410 align:start position:0%
yeah could it be bigger I can I do that
print<00:02:44.070><c> on</c><00:02:44.130><c> to</c><00:02:44.280><c> mode</c><00:02:44.459><c> maybe</c><00:02:44.870><c> where</c><00:02:45.870><c> is</c><00:02:46.020><c> it</c><00:02:46.200><c> here</c>

00:02:47.410 --> 00:02:47.420 align:start position:0%
print on to mode maybe where is it here
 

00:02:47.420 --> 00:02:50.229 align:start position:0%
print on to mode maybe where is it here
presentation<00:02:48.420><c> mode</c><00:02:48.570><c> is</c><00:02:49.440><c> it</c><00:02:49.590><c> bigger</c>

00:02:50.229 --> 00:02:50.239 align:start position:0%
presentation mode is it bigger
 

00:02:50.239 --> 00:02:55.449 align:start position:0%
presentation mode is it bigger
not<00:02:51.239><c> really</c><00:02:51.750><c> yeah</c><00:02:52.530><c> is</c><00:02:53.370><c> it</c><00:02:53.580><c> okay</c><00:02:53.820><c> for</c><00:02:53.850><c> everybody</c>

00:02:55.449 --> 00:02:55.459 align:start position:0%
not really yeah is it okay for everybody
 

00:02:55.459 --> 00:02:58.820 align:start position:0%
not really yeah is it okay for everybody
okay<00:02:56.459><c> fine</c><00:02:56.940><c> so</c><00:02:57.209><c> what</c><00:02:57.959><c> do</c><00:02:58.050><c> we</c><00:02:58.110><c> have</c><00:02:58.170><c> here</c><00:02:58.620><c> we</c>

00:02:58.820 --> 00:02:58.830 align:start position:0%
okay fine so what do we have here we
 

00:02:58.830 --> 00:03:01.970 align:start position:0%
okay fine so what do we have here we
have<00:02:58.860><c> a</c><00:02:59.010><c> basic</c><00:02:59.880><c> list</c><00:03:00.450><c> of</c><00:03:00.810><c> strings</c><00:03:01.140><c> Java</c><00:03:01.739><c> 8</c>

00:03:01.970 --> 00:03:01.980 align:start position:0%
have a basic list of strings Java 8
 

00:03:01.980 --> 00:03:05.150 align:start position:0%
have a basic list of strings Java 8
style<00:03:02.520><c> we</c><00:03:03.330><c> we</c><00:03:03.870><c> could</c><00:03:04.050><c> have</c><00:03:04.170><c> used</c><00:03:04.410><c> the</c><00:03:04.620><c> the</c>

00:03:05.150 --> 00:03:05.160 align:start position:0%
style we we could have used the the
 

00:03:05.160 --> 00:03:08.330 align:start position:0%
style we we could have used the the
wonderful<00:03:06.320><c> factory</c><00:03:07.320><c> method</c><00:03:07.739><c> from</c><00:03:07.890><c> the</c><00:03:08.100><c> list</c>

00:03:08.330 --> 00:03:08.340 align:start position:0%
wonderful factory method from the list
 

00:03:08.340 --> 00:03:10.370 align:start position:0%
wonderful factory method from the list
interface<00:03:08.640><c> but</c><00:03:09.150><c> this</c><00:03:09.420><c> is</c><00:03:09.600><c> this</c><00:03:09.780><c> is</c><00:03:09.930><c> still</c><00:03:10.170><c> Java</c>

00:03:10.370 --> 00:03:10.380 align:start position:0%
interface but this is this is still Java
 

00:03:10.380 --> 00:03:13.729 align:start position:0%
interface but this is this is still Java
8<00:03:10.650><c> code</c><00:03:10.950><c> so</c><00:03:11.250><c> it's</c><00:03:11.910><c> not</c><00:03:12.060><c> you</c><00:03:12.989><c> all</c><00:03:13.170><c> know</c><00:03:13.350><c> that</c><00:03:13.500><c> to</c>

00:03:13.729 --> 00:03:13.739 align:start position:0%
8 code so it's not you all know that to
 

00:03:13.739 --> 00:03:16.640 align:start position:0%
8 code so it's not you all know that to
create<00:03:14.070><c> a</c><00:03:14.100><c> string</c><00:03:14.610><c> on</c><00:03:14.850><c> this</c><00:03:15.200><c> we</c><00:03:16.200><c> need</c><00:03:16.350><c> to</c><00:03:16.440><c> call</c>

00:03:16.640 --> 00:03:16.650 align:start position:0%
create a string on this we need to call
 

00:03:16.650 --> 00:03:19.340 align:start position:0%
create a string on this we need to call
the<00:03:16.799><c> streamer</c><00:03:17.299><c> method</c><00:03:18.299><c> on</c><00:03:18.420><c> it</c><00:03:18.450><c> and</c><00:03:18.840><c> from</c><00:03:19.170><c> that</c>

00:03:19.340 --> 00:03:19.350 align:start position:0%
the streamer method on it and from that
 

00:03:19.350 --> 00:03:21.440 align:start position:0%
the streamer method on it and from that
we<00:03:19.920><c> can</c><00:03:20.100><c> just</c><00:03:20.310><c> call</c><00:03:20.519><c> for</c><00:03:20.760><c> instance</c><00:03:21.030><c> for</c><00:03:21.299><c> each</c>

00:03:21.440 --> 00:03:21.450 align:start position:0%
we can just call for instance for each
 

00:03:21.450 --> 00:03:28.460 align:start position:0%
we can just call for instance for each
to<00:03:22.170><c> print</c><00:03:22.440><c> out</c><00:03:25.519><c> the</c><00:03:26.519><c> content</c><00:03:26.940><c> of</c><00:03:27.540><c> that</c><00:03:28.140><c> stream</c>

00:03:28.460 --> 00:03:28.470 align:start position:0%
to print out the content of that stream
 

00:03:28.470 --> 00:03:30.070 align:start position:0%
to print out the content of that stream
of<00:03:29.160><c> that</c><00:03:29.310><c> stream</c>

00:03:30.070 --> 00:03:30.080 align:start position:0%
of that stream
 

00:03:30.080 --> 00:03:35.270 align:start position:0%
of that stream
okay<00:03:31.080><c> let</c><00:03:31.290><c> us</c><00:03:31.320><c> run</c><00:03:31.620><c> this</c><00:03:31.739><c> code</c><00:03:33.290><c> great</c><00:03:34.290><c> it</c><00:03:35.040><c> does</c>

00:03:35.270 --> 00:03:35.280 align:start position:0%
okay let us run this code great it does
 

00:03:35.280 --> 00:03:37.940 align:start position:0%
okay let us run this code great it does
what<00:03:35.489><c> we</c><00:03:35.730><c> expect</c><00:03:36.030><c> it</c><00:03:36.510><c> to</c><00:03:36.630><c> do</c><00:03:36.750><c> where</c><00:03:37.650><c> did</c><00:03:37.830><c> this</c>

00:03:37.940 --> 00:03:37.950 align:start position:0%
what we expect it to do where did this
 

00:03:37.950 --> 00:03:40.670 align:start position:0%
what we expect it to do where did this
stream<00:03:38.610><c> method</c><00:03:38.970><c> comes</c><00:03:39.299><c> comes</c><00:03:40.170><c> from</c><00:03:40.410><c> it</c><00:03:40.620><c> comes</c>

00:03:40.670 --> 00:03:40.680 align:start position:0%
stream method comes comes from it comes
 

00:03:40.680 --> 00:03:42.259 align:start position:0%
stream method comes comes from it comes
from<00:03:41.010><c> the</c><00:03:41.130><c> default</c><00:03:41.610><c> method</c><00:03:41.790><c> from</c><00:03:42.090><c> the</c>

00:03:42.259 --> 00:03:42.269 align:start position:0%
from the default method from the
 

00:03:42.269 --> 00:03:46.039 align:start position:0%
from the default method from the
collection<00:03:42.750><c> interface</c><00:03:44.000><c> that</c><00:03:45.000><c> in</c><00:03:45.209><c> fact</c><00:03:45.450><c> does</c>

00:03:46.039 --> 00:03:46.049 align:start position:0%
collection interface that in fact does
 

00:03:46.049 --> 00:03:49.009 align:start position:0%
collection interface that in fact does
two<00:03:46.290><c> things</c><00:03:46.670><c> create</c><00:03:47.670><c> a</c><00:03:47.700><c> splitter</c><00:03:48.209><c> rater</c><00:03:48.480><c> here</c>

00:03:49.009 --> 00:03:49.019 align:start position:0%
two things create a splitter rater here
 

00:03:49.019 --> 00:03:51.640 align:start position:0%
two things create a splitter rater here
by<00:03:49.650><c> calling</c><00:03:50.010><c> another</c><00:03:50.280><c> default</c><00:03:50.940><c> method</c><00:03:51.120><c> and</c>

00:03:51.640 --> 00:03:51.650 align:start position:0%
by calling another default method and
 

00:03:51.650 --> 00:03:54.710 align:start position:0%
by calling another default method and
passing<00:03:52.650><c> this</c><00:03:52.830><c> Peter</c><00:03:53.130><c> rater</c><00:03:53.400><c> to</c><00:03:54.209><c> a</c><00:03:54.239><c> stream</c>

00:03:54.710 --> 00:03:54.720 align:start position:0%
passing this Peter rater to a stream
 

00:03:54.720 --> 00:03:56.690 align:start position:0%
passing this Peter rater to a stream
factory<00:03:55.170><c> method</c><00:03:55.530><c> of</c><00:03:55.680><c> the</c><00:03:55.799><c> stream</c><00:03:56.250><c> support</c>

00:03:56.690 --> 00:03:56.700 align:start position:0%
factory method of the stream support
 

00:03:56.700 --> 00:04:00.500 align:start position:0%
factory method of the stream support
class<00:03:57.209><c> which</c><00:03:58.019><c> can</c><00:03:58.260><c> create</c><00:03:58.530><c> stream</c><00:03:59.190><c> and</c><00:03:59.610><c> what</c>

00:04:00.500 --> 00:04:00.510 align:start position:0%
class which can create stream and what
 

00:04:00.510 --> 00:04:03.110 align:start position:0%
class which can create stream and what
does<00:04:00.750><c> this</c><00:04:00.930><c> stream</c><00:04:01.380><c> support</c><00:04:01.799><c> class</c><00:04:02.010><c> do</c><00:04:02.250><c> it</c>

00:04:03.110 --> 00:04:03.120 align:start position:0%
does this stream support class do it
 

00:04:03.120 --> 00:04:05.930 align:start position:0%
does this stream support class do it
does<00:04:03.709><c> once</c><00:04:04.709><c> again</c><00:04:05.010><c> several</c><00:04:05.280><c> things</c><00:04:05.610><c> it</c>

00:04:05.930 --> 00:04:05.940 align:start position:0%
does once again several things it
 

00:04:05.940 --> 00:04:08.420 align:start position:0%
does once again several things it
creates<00:04:06.480><c> an</c><00:04:06.660><c> instance</c><00:04:06.930><c> of</c><00:04:07.410><c> this</c><00:04:07.739><c> reference</c>

00:04:08.420 --> 00:04:08.430 align:start position:0%
creates an instance of this reference
 

00:04:08.430 --> 00:04:11.240 align:start position:0%
creates an instance of this reference
pipeline<00:04:08.910><c> dot</c><00:04:09.150><c> add</c><00:04:09.329><c> class</c><00:04:09.930><c> which</c><00:04:10.739><c> is</c><00:04:10.920><c> in</c><00:04:11.040><c> fact</c>

00:04:11.240 --> 00:04:11.250 align:start position:0%
pipeline dot add class which is in fact
 

00:04:11.250 --> 00:04:13.550 align:start position:0%
pipeline dot add class which is in fact
the<00:04:11.430><c> implementation</c><00:04:12.209><c> and</c><00:04:12.480><c> implementation</c><00:04:13.410><c> of</c>

00:04:13.550 --> 00:04:13.560 align:start position:0%
the implementation and implementation of
 

00:04:13.560 --> 00:04:17.210 align:start position:0%
the implementation and implementation of
the<00:04:13.980><c> stream</c><00:04:14.250><c> interface</c><00:04:14.459><c> itself</c><00:04:15.000><c> and</c><00:04:15.329><c> pass</c><00:04:16.290><c> the</c>

00:04:17.210 --> 00:04:17.220 align:start position:0%
the stream interface itself and pass the
 

00:04:17.220 --> 00:04:19.880 align:start position:0%
the stream interface itself and pass the
splitter<00:04:17.640><c> rater</c><00:04:17.940><c> object</c><00:04:18.359><c> we</c><00:04:18.510><c> just</c><00:04:18.750><c> created</c><00:04:19.049><c> to</c>

00:04:19.880 --> 00:04:19.890 align:start position:0%
splitter rater object we just created to
 

00:04:19.890 --> 00:04:22.670 align:start position:0%
splitter rater object we just created to
this<00:04:20.099><c> implementation</c><00:04:21.090><c> what</c><00:04:21.959><c> what</c><00:04:22.229><c> if</c>

00:04:22.670 --> 00:04:22.680 align:start position:0%
this implementation what what if
 

00:04:22.680 --> 00:04:24.110 align:start position:0%
this implementation what what if
if<00:04:22.830><c> I'm</c><00:04:22.979><c> showing</c><00:04:23.220><c> you</c><00:04:23.310><c> this</c><00:04:23.550><c> code</c><00:04:23.850><c> it's</c><00:04:24.090><c> just</c>

00:04:24.110 --> 00:04:24.120 align:start position:0%
if I'm showing you this code it's just
 

00:04:24.120 --> 00:04:26.090 align:start position:0%
if I'm showing you this code it's just
to<00:04:24.330><c> show</c><00:04:24.570><c> you</c><00:04:24.630><c> that</c><00:04:24.720><c> in</c><00:04:25.080><c> fact</c><00:04:25.110><c> the</c><00:04:25.800><c> stream</c>

00:04:26.090 --> 00:04:26.100 align:start position:0%
to show you that in fact the stream
 

00:04:26.100 --> 00:04:28.490 align:start position:0%
to show you that in fact the stream
object<00:04:26.250><c> as</c><00:04:26.820><c> an</c><00:04:27.030><c> implementation</c><00:04:27.389><c> as</c><00:04:27.990><c> a</c><00:04:28.050><c> runtime</c>

00:04:28.490 --> 00:04:28.500 align:start position:0%
object as an implementation as a runtime
 

00:04:28.500 --> 00:04:31.700 align:start position:0%
object as an implementation as a runtime
object<00:04:28.889><c> is</c><00:04:29.340><c> in</c><00:04:29.520><c> fact</c><00:04:29.729><c> created</c><00:04:30.120><c> on</c><00:04:30.240><c> two</c><00:04:30.560><c> objects</c>

00:04:31.700 --> 00:04:31.710 align:start position:0%
object is in fact created on two objects
 

00:04:31.710 --> 00:04:33.980 align:start position:0%
object is in fact created on two objects
well<00:04:32.100><c> at</c><00:04:32.220><c> least</c><00:04:32.400><c> two</c><00:04:32.610><c> objects</c><00:04:32.880><c> first</c><00:04:33.660><c> a</c>

00:04:33.980 --> 00:04:33.990 align:start position:0%
well at least two objects first a
 

00:04:33.990 --> 00:04:36.260 align:start position:0%
well at least two objects first a
reference<00:04:34.440><c> pipeline</c><00:04:34.830><c> object</c><00:04:35.190><c> which</c><00:04:35.970><c> is</c><00:04:36.150><c> in</c>

00:04:36.260 --> 00:04:36.270 align:start position:0%
reference pipeline object which is in
 

00:04:36.270 --> 00:04:38.990 align:start position:0%
reference pipeline object which is in
fact<00:04:36.509><c> where</c><00:04:36.930><c> all</c><00:04:37.259><c> the</c><00:04:37.560><c> complex</c><00:04:38.100><c> algorithms</c>

00:04:38.990 --> 00:04:39.000 align:start position:0%
fact where all the complex algorithms
 

00:04:39.000 --> 00:04:42.100 align:start position:0%
fact where all the complex algorithms
the<00:04:39.330><c> map</c><00:04:39.600><c> filter</c><00:04:39.960><c> reduce</c><00:04:40.620><c> collect</c><00:04:41.190><c> stuff</c>

00:04:42.100 --> 00:04:42.110 align:start position:0%
the map filter reduce collect stuff
 

00:04:42.110 --> 00:04:45.469 align:start position:0%
the map filter reduce collect stuff
lives<00:04:43.110><c> on</c><00:04:43.320><c> and</c><00:04:43.530><c> another</c><00:04:44.160><c> object</c><00:04:44.430><c> the</c><00:04:45.060><c> splitter</c>

00:04:45.469 --> 00:04:45.479 align:start position:0%
lives on and another object the splitter
 

00:04:45.479 --> 00:04:47.390 align:start position:0%
lives on and another object the splitter
rate<00:04:45.720><c> object</c><00:04:46.169><c> that</c><00:04:46.740><c> is</c><00:04:46.919><c> passed</c><00:04:47.190><c> as</c><00:04:47.370><c> a</c>

00:04:47.390 --> 00:04:47.400 align:start position:0%
rate object that is passed as a
 

00:04:47.400 --> 00:04:49.730 align:start position:0%
rate object that is passed as a
parameter<00:04:47.639><c> as</c><00:04:48.210><c> a</c><00:04:48.270><c> collaborator</c><00:04:49.020><c> to</c><00:04:49.139><c> this</c><00:04:49.440><c> to</c>

00:04:49.730 --> 00:04:49.740 align:start position:0%
parameter as a collaborator to this to
 

00:04:49.740 --> 00:04:51.830 align:start position:0%
parameter as a collaborator to this to
this<00:04:49.860><c> implementation</c><00:04:50.610><c> and</c><00:04:50.850><c> that</c><00:04:50.880><c> is</c><00:04:51.660><c> in</c><00:04:51.810><c> fact</c>

00:04:51.830 --> 00:04:51.840 align:start position:0%
this implementation and that is in fact
 

00:04:51.840 --> 00:04:57.499 align:start position:0%
this implementation and that is in fact
meant<00:04:53.060><c> to</c><00:04:54.060><c> be</c><00:04:54.210><c> to</c><00:04:54.960><c> be</c><00:04:55.139><c> overridden</c><00:04:55.860><c> if</c><00:04:56.849><c> I</c><00:04:57.120><c> go</c>

00:04:57.499 --> 00:04:57.509 align:start position:0%
meant to be to be overridden if I go
 

00:04:57.509 --> 00:05:01.610 align:start position:0%
meant to be to be overridden if I go
back<00:04:57.690><c> to</c><00:04:57.900><c> this</c><00:04:58.020><c> split</c><00:04:58.560><c> orator</c><00:04:58.830><c> method</c><00:04:59.280><c> I</c><00:05:00.620><c> mean</c>

00:05:01.610 --> 00:05:01.620 align:start position:0%
back to this split orator method I mean
 

00:05:01.620 --> 00:05:05.629 align:start position:0%
back to this split orator method I mean
stream<00:05:02.039><c> support</c><00:05:03.770><c> hey</c><00:05:04.770><c> sorry</c><00:05:05.099><c> guys</c><00:05:05.190><c> I'm</c><00:05:05.520><c> in</c>

00:05:05.629 --> 00:05:05.639 align:start position:0%
stream support hey sorry guys I'm in
 

00:05:05.639 --> 00:05:18.200 align:start position:0%
stream support hey sorry guys I'm in
trouble<00:05:05.820><c> with</c><00:05:06.000><c> this</c><00:05:06.380><c> presenter</c><00:05:07.380><c> mode</c><00:05:10.580><c> okay</c><00:05:17.210><c> if</c>

00:05:18.200 --> 00:05:18.210 align:start position:0%
trouble with this presenter mode okay if
 

00:05:18.210 --> 00:05:21.110 align:start position:0%
trouble with this presenter mode okay if
I<00:05:18.479><c> if</c><00:05:18.720><c> I</c><00:05:18.930><c> go</c><00:05:19.410><c> back</c><00:05:19.590><c> to</c><00:05:19.800><c> this</c><00:05:19.949><c> to</c><00:05:20.310><c> this</c><00:05:20.460><c> splitter</c>

00:05:21.110 --> 00:05:21.120 align:start position:0%
I if I go back to this to this splitter
 

00:05:21.120 --> 00:05:24.230 align:start position:0%
I if I go back to this to this splitter
writer<00:05:21.300><c> object</c><00:05:21.690><c> here</c><00:05:22.050><c> and</c><00:05:22.560><c> see</c><00:05:23.460><c> what</c><00:05:23.580><c> it</c><00:05:23.699><c> does</c>

00:05:24.230 --> 00:05:24.240 align:start position:0%
writer object here and see what it does
 

00:05:24.240 --> 00:05:27.260 align:start position:0%
writer object here and see what it does
it<00:05:24.900><c> is</c><00:05:25.050><c> indeed</c><00:05:25.380><c> the</c><00:05:25.560><c> default</c><00:05:25.949><c> method</c><00:05:26.130><c> from</c><00:05:27.030><c> the</c>

00:05:27.260 --> 00:05:27.270 align:start position:0%
it is indeed the default method from the
 

00:05:27.270 --> 00:05:29.510 align:start position:0%
it is indeed the default method from the
from<00:05:27.570><c> the</c><00:05:27.690><c> collection</c><00:05:28.080><c> framework</c><00:05:28.530><c> but</c><00:05:29.340><c> that</c>

00:05:29.510 --> 00:05:29.520 align:start position:0%
from the collection framework but that
 

00:05:29.520 --> 00:05:32.779 align:start position:0%
from the collection framework but that
is<00:05:29.699><c> overridden</c><00:05:30.419><c> in</c><00:05:31.169><c> nearly</c><00:05:31.680><c> all</c><00:05:31.889><c> the</c><00:05:32.340><c> classes</c>

00:05:32.779 --> 00:05:32.789 align:start position:0%
is overridden in nearly all the classes
 

00:05:32.789 --> 00:05:34.700 align:start position:0%
is overridden in nearly all the classes
of<00:05:32.820><c> the</c><00:05:33.060><c> collection</c><00:05:33.570><c> framework</c><00:05:33.960><c> here's</c><00:05:34.440><c> the</c>

00:05:34.700 --> 00:05:34.710 align:start position:0%
of the collection framework here's the
 

00:05:34.710 --> 00:05:38.570 align:start position:0%
of the collection framework here's the
the<00:05:35.539><c> override</c><00:05:36.539><c> of</c><00:05:36.750><c> this</c><00:05:37.440><c> split</c><00:05:37.889><c> orator</c><00:05:38.190><c> method</c>

00:05:38.570 --> 00:05:38.580 align:start position:0%
the override of this split orator method
 

00:05:38.580 --> 00:05:40.730 align:start position:0%
the override of this split orator method
from<00:05:39.150><c> the</c><00:05:39.330><c> ArrayList</c><00:05:39.780><c> class</c><00:05:39.870><c> for</c><00:05:40.260><c> instance</c><00:05:40.530><c> it</c>

00:05:40.730 --> 00:05:40.740 align:start position:0%
from the ArrayList class for instance it
 

00:05:40.740 --> 00:05:43.969 align:start position:0%
from the ArrayList class for instance it
returns<00:05:41.550><c> an</c><00:05:41.760><c> ASP</c><00:05:42.510><c> literature</c><00:05:43.020><c> that</c><00:05:43.139><c> is</c><00:05:43.320><c> that</c>

00:05:43.969 --> 00:05:43.979 align:start position:0%
returns an ASP literature that is that
 

00:05:43.979 --> 00:05:46.100 align:start position:0%
returns an ASP literature that is that
is<00:05:44.159><c> particular</c><00:05:45.090><c> to</c><00:05:45.120><c> this</c><00:05:45.419><c> to</c><00:05:45.780><c> this</c><00:05:45.900><c> already</c>

00:05:46.100 --> 00:05:46.110 align:start position:0%
is particular to this to this already
 

00:05:46.110 --> 00:05:48.589 align:start position:0%
is particular to this to this already
subject<00:05:46.699><c> and</c><00:05:47.699><c> in</c><00:05:47.820><c> fact</c><00:05:48.030><c> what</c><00:05:48.270><c> does</c><00:05:48.449><c> this</c>

00:05:48.589 --> 00:05:48.599 align:start position:0%
subject and in fact what does this
 

00:05:48.599 --> 00:05:50.659 align:start position:0%
subject and in fact what does this
pretreat<00:05:49.080><c> object</c><00:05:49.440><c> does</c><00:05:49.650><c> it</c><00:05:49.949><c> does</c><00:05:50.250><c> the</c><00:05:50.400><c> same</c>

00:05:50.659 --> 00:05:50.669 align:start position:0%
pretreat object does it does the same
 

00:05:50.669 --> 00:05:53.540 align:start position:0%
pretreat object does it does the same
kind<00:05:50.970><c> of</c><00:05:51.060><c> thing</c><00:05:51.360><c> as</c><00:05:51.570><c> the</c><00:05:52.050><c> iterator</c><00:05:52.740><c> does</c><00:05:53.070><c> to</c>

00:05:53.540 --> 00:05:53.550 align:start position:0%
kind of thing as the iterator does to
 

00:05:53.550 --> 00:05:55.969 align:start position:0%
kind of thing as the iterator does to
the<00:05:53.669><c> collection</c><00:05:54.180><c> implementations</c><00:05:55.080><c> you</c><00:05:55.860><c> know</c>

00:05:55.969 --> 00:05:55.979 align:start position:0%
the collection implementations you know
 

00:05:55.979 --> 00:05:57.980 align:start position:0%
the collection implementations you know
that<00:05:56.159><c> we</c><00:05:56.430><c> have</c><00:05:56.580><c> a</c><00:05:56.610><c> released</c><00:05:57.000><c> and</c><00:05:57.300><c> an</c><00:05:57.419><c> iterator</c>

00:05:57.980 --> 00:05:57.990 align:start position:0%
that we have a released and an iterator
 

00:05:57.990 --> 00:06:00.710 align:start position:0%
that we have a released and an iterator
for<00:05:58.110><c> our</c><00:05:58.500><c> list</c><00:05:58.740><c> the</c><00:05:59.370><c> same</c><00:05:59.580><c> for</c><00:05:59.789><c> our</c><00:05:59.970><c> set</c><00:06:00.300><c> and</c><00:06:00.599><c> an</c>

00:06:00.710 --> 00:06:00.720 align:start position:0%
for our list the same for our set and an
 

00:06:00.720 --> 00:06:03.469 align:start position:0%
for our list the same for our set and an
iterator<00:06:01.259><c> for</c><00:06:01.380><c> our</c><00:06:01.979><c> set</c><00:06:02.250><c> the</c><00:06:03.030><c> stream</c><00:06:03.330><c> API</c>

00:06:03.469 --> 00:06:03.479 align:start position:0%
iterator for our set the stream API
 

00:06:03.479 --> 00:06:05.180 align:start position:0%
iterator for our set the stream API
works<00:06:04.020><c> kind</c><00:06:04.320><c> of</c><00:06:04.409><c> the</c><00:06:04.500><c> same</c><00:06:04.740><c> we</c><00:06:04.979><c> have</c><00:06:05.009><c> the</c>

00:06:05.180 --> 00:06:05.190 align:start position:0%
works kind of the same we have the
 

00:06:05.190 --> 00:06:07.520 align:start position:0%
works kind of the same we have the
implementation<00:06:06.000><c> where</c><00:06:06.630><c> all</c><00:06:06.810><c> the</c><00:06:06.960><c> complexity</c>

00:06:07.520 --> 00:06:07.530 align:start position:0%
implementation where all the complexity
 

00:06:07.530 --> 00:06:09.290 align:start position:0%
implementation where all the complexity
is<00:06:07.710><c> and</c><00:06:08.039><c> we</c><00:06:08.280><c> don't</c><00:06:08.490><c> want</c><00:06:08.669><c> to</c><00:06:08.759><c> look</c><00:06:08.880><c> into</c><00:06:09.060><c> that</c>

00:06:09.290 --> 00:06:09.300 align:start position:0%
is and we don't want to look into that
 

00:06:09.300 --> 00:06:12.980 align:start position:0%
is and we don't want to look into that
and<00:06:09.570><c> an</c><00:06:10.259><c> object</c><00:06:10.650><c> that</c><00:06:10.979><c> in</c><00:06:11.190><c> fact</c><00:06:11.810><c> hold</c><00:06:12.810><c> the</c>

00:06:12.980 --> 00:06:12.990 align:start position:0%
and an object that in fact hold the
 

00:06:12.990 --> 00:06:15.379 align:start position:0%
and an object that in fact hold the
logic<00:06:13.380><c> to</c><00:06:13.530><c> access</c><00:06:13.860><c> the</c><00:06:14.039><c> data</c><00:06:14.250><c> and</c><00:06:14.580><c> this</c><00:06:15.030><c> little</c>

00:06:15.379 --> 00:06:15.389 align:start position:0%
logic to access the data and this little
 

00:06:15.389 --> 00:06:17.719 align:start position:0%
logic to access the data and this little
rater<00:06:15.570><c> object</c><00:06:15.930><c> is</c><00:06:16.080><c> is</c><00:06:16.320><c> a</c><00:06:16.620><c> little</c><00:06:17.220><c> more</c><00:06:17.400><c> complex</c>

00:06:17.719 --> 00:06:17.729 align:start position:0%
rater object is is a little more complex
 

00:06:17.729 --> 00:06:19.820 align:start position:0%
rater object is is a little more complex
than<00:06:17.880><c> the</c><00:06:18.120><c> iterator</c><00:06:18.539><c> object</c><00:06:18.659><c> but</c><00:06:19.380><c> it's</c><00:06:19.500><c> still</c>

00:06:19.820 --> 00:06:19.830 align:start position:0%
than the iterator object but it's still
 

00:06:19.830 --> 00:06:22.520 align:start position:0%
than the iterator object but it's still
fairly<00:06:20.669><c> easy</c><00:06:21.000><c> to</c><00:06:21.270><c> implement</c><00:06:21.479><c> yourself</c><00:06:21.750><c> either</c>

00:06:22.520 --> 00:06:22.530 align:start position:0%
fairly easy to implement yourself either
 

00:06:22.530 --> 00:06:25.219 align:start position:0%
fairly easy to implement yourself either
to<00:06:22.889><c> connect</c><00:06:23.190><c> your</c><00:06:23.340><c> streams</c><00:06:23.729><c> up</c><00:06:23.970><c> to</c><00:06:24.479><c> particular</c>

00:06:25.219 --> 00:06:25.229 align:start position:0%
to connect your streams up to particular
 

00:06:25.229 --> 00:06:27.830 align:start position:0%
to connect your streams up to particular
sources<00:06:25.789><c> non-standard</c><00:06:26.789><c> sources</c><00:06:27.210><c> of</c><00:06:27.360><c> data</c><00:06:27.570><c> you</c>

00:06:27.830 --> 00:06:27.840 align:start position:0%
sources non-standard sources of data you
 

00:06:27.840 --> 00:06:29.930 align:start position:0%
sources non-standard sources of data you
may<00:06:27.960><c> have</c><00:06:28.169><c> in</c><00:06:28.409><c> your</c><00:06:28.440><c> applications</c><00:06:29.070><c> all</c><00:06:29.340><c> to</c>

00:06:29.930 --> 00:06:29.940 align:start position:0%
may have in your applications all to
 

00:06:29.940 --> 00:06:33.649 align:start position:0%
may have in your applications all to
create<00:06:30.330><c> streams</c><00:06:30.690><c> of</c><00:06:30.990><c> other</c><00:06:31.800><c> streams</c><00:06:32.659><c> once</c>

00:06:33.649 --> 00:06:33.659 align:start position:0%
create streams of other streams once
 

00:06:33.659 --> 00:06:36.110 align:start position:0%
create streams of other streams once
we've<00:06:33.840><c> seen</c><00:06:34.080><c> that</c><00:06:34.310><c> we</c><00:06:35.310><c> can</c><00:06:35.520><c> begin</c><00:06:35.669><c> to</c><00:06:35.820><c> play</c>

00:06:36.110 --> 00:06:36.120 align:start position:0%
we've seen that we can begin to play
 

00:06:36.120 --> 00:06:37.100 align:start position:0%
we've seen that we can begin to play
with

00:06:37.100 --> 00:06:37.110 align:start position:0%
with
 

00:06:37.110 --> 00:06:42.920 align:start position:0%
with
for<00:06:38.110><c> instance</c><00:06:38.470><c> a</c><00:06:38.680><c> okay</c><00:06:39.130><c> I'm</c><00:06:39.280><c> going</c><00:06:39.490><c> to</c><00:06:39.580><c> take</c><00:06:40.380><c> I</c>

00:06:42.920 --> 00:06:42.930 align:start position:0%
for instance a okay I'm going to take I
 

00:06:42.930 --> 00:06:47.790 align:start position:0%
for instance a okay I'm going to take I
need<00:06:43.930><c> to</c><00:06:44.020><c> take</c><00:06:44.199><c> this</c><00:06:44.319><c> code</c><00:06:46.110><c> take</c><00:06:47.110><c> the</c><00:06:47.289><c> iterator</c>

00:06:47.790 --> 00:06:47.800 align:start position:0%
need to take this code take the iterator
 

00:06:47.800 --> 00:06:51.960 align:start position:0%
need to take this code take the iterator
of<00:06:48.759><c> the</c><00:06:48.970><c> subject</c><00:06:49.830><c> put</c><00:06:50.830><c> this</c><00:06:50.979><c> iterator</c><00:06:51.520><c> in</c><00:06:51.910><c> a</c>

00:06:51.960 --> 00:06:51.970 align:start position:0%
of the subject put this iterator in a
 

00:06:51.970 --> 00:06:56.219 align:start position:0%
of the subject put this iterator in a
variable<00:06:52.539><c> and</c><00:06:53.580><c> just</c><00:06:54.580><c> call</c><00:06:54.960><c> create</c><00:06:55.960><c> another</c>

00:06:56.219 --> 00:06:56.229 align:start position:0%
variable and just call create another
 

00:06:56.229 --> 00:06:59.900 align:start position:0%
variable and just call create another
stream<00:06:56.620><c> by</c><00:06:57.370><c> calling</c><00:06:57.819><c> this</c><00:06:58.000><c> stream</c><00:06:58.389><c> support</c>

00:06:59.900 --> 00:06:59.910 align:start position:0%
stream by calling this stream support
 

00:06:59.910 --> 00:07:05.550 align:start position:0%
stream by calling this stream support
dot<00:07:00.910><c> stream</c><00:07:01.620><c> iterator</c><00:07:02.620><c> and</c><00:07:03.750><c> pass</c><00:07:04.750><c> false</c><00:07:05.259><c> the</c>

00:07:05.550 --> 00:07:05.560 align:start position:0%
dot stream iterator and pass false the
 

00:07:05.560 --> 00:07:08.309 align:start position:0%
dot stream iterator and pass false the
second<00:07:05.889><c> parameter</c><00:07:06.069><c> is</c><00:07:06.610><c> a</c><00:07:06.880><c> boolean</c><00:07:07.180><c> now</c><00:07:07.539><c> this</c>

00:07:08.309 --> 00:07:08.319 align:start position:0%
second parameter is a boolean now this
 

00:07:08.319 --> 00:07:10.230 align:start position:0%
second parameter is a boolean now this
boolean<00:07:08.710><c> is</c><00:07:08.860><c> true</c><00:07:08.889><c> if</c><00:07:09.400><c> you</c><00:07:09.580><c> want</c><00:07:09.759><c> this</c><00:07:09.910><c> string</c>

00:07:10.230 --> 00:07:10.240 align:start position:0%
boolean is true if you want this string
 

00:07:10.240 --> 00:07:12.150 align:start position:0%
boolean is true if you want this string
to<00:07:10.389><c> be</c><00:07:10.419><c> parallel</c><00:07:10.840><c> and</c><00:07:11.110><c> false</c><00:07:11.620><c> if</c><00:07:11.800><c> you</c><00:07:11.919><c> do</c><00:07:12.039><c> not</c>

00:07:12.150 --> 00:07:12.160 align:start position:0%
to be parallel and false if you do not
 

00:07:12.160 --> 00:07:14.159 align:start position:0%
to be parallel and false if you do not
want<00:07:12.430><c> this</c><00:07:12.520><c> dream</c><00:07:12.729><c> to</c><00:07:12.880><c> be</c><00:07:12.970><c> part</c><00:07:13.210><c> he</c><00:07:13.870><c> I'm</c><00:07:13.990><c> not</c>

00:07:14.159 --> 00:07:14.169 align:start position:0%
want this dream to be part he I'm not
 

00:07:14.169 --> 00:07:16.439 align:start position:0%
want this dream to be part he I'm not
going<00:07:14.410><c> into</c><00:07:14.620><c> this</c><00:07:14.889><c> kind</c><00:07:15.250><c> of</c><00:07:15.310><c> thing</c><00:07:15.400><c> think</c><00:07:16.180><c> so</c>

00:07:16.439 --> 00:07:16.449 align:start position:0%
going into this kind of thing think so
 

00:07:16.449 --> 00:07:19.770 align:start position:0%
going into this kind of thing think so
I'm<00:07:16.930><c> just</c><00:07:17.289><c> going</c><00:07:17.620><c> to</c><00:07:17.740><c> keep</c><00:07:17.949><c> this</c><00:07:18.699><c> as</c><00:07:19.000><c> a</c><00:07:19.030><c> as</c><00:07:19.389><c> a</c>

00:07:19.770 --> 00:07:19.780 align:start position:0%
I'm just going to keep this as a as a
 

00:07:19.780 --> 00:07:23.610 align:start position:0%
I'm just going to keep this as a as a
false<00:07:20.289><c> or</c><00:07:20.620><c> false</c><00:07:20.830><c> value</c><00:07:21.660><c> so</c><00:07:22.660><c> this</c><00:07:22.960><c> is</c><00:07:23.110><c> a</c><00:07:23.139><c> stream</c>

00:07:23.610 --> 00:07:23.620 align:start position:0%
false or false value so this is a stream
 

00:07:23.620 --> 00:07:30.140 align:start position:0%
false or false value so this is a stream
of<00:07:24.930><c> string</c><00:07:27.419><c> why</c><00:07:28.419><c> isn't</c><00:07:28.780><c> it</c><00:07:28.870><c> happy</c><00:07:29.169><c> with</c><00:07:29.320><c> it</c>

00:07:30.140 --> 00:07:30.150 align:start position:0%
of string why isn't it happy with it
 

00:07:30.150 --> 00:07:33.200 align:start position:0%
of string why isn't it happy with it
and<00:07:31.150><c> from</c><00:07:31.389><c> that</c><00:07:31.419><c> I</c><00:07:31.900><c> just</c><00:07:32.349><c> want</c><00:07:32.590><c> to</c><00:07:32.680><c> catch</c><00:07:33.009><c> that</c>

00:07:33.200 --> 00:07:33.210 align:start position:0%
and from that I just want to catch that
 

00:07:33.210 --> 00:07:38.070 align:start position:0%
and from that I just want to catch that
what<00:07:34.210><c> problem</c><00:07:34.569><c> do</c><00:07:34.659><c> I</c><00:07:34.750><c> have</c><00:07:34.960><c> here</c><00:07:36.270><c> I</c><00:07:37.270><c> really</c>

00:07:38.070 --> 00:07:38.080 align:start position:0%
what problem do I have here I really
 

00:07:38.080 --> 00:07:48.740 align:start position:0%
what problem do I have here I really
don't<00:07:38.229><c> see</c><00:07:44.820><c> yes</c><00:07:46.620><c> thank</c><00:07:47.620><c> you</c>

00:07:48.740 --> 00:07:48.750 align:start position:0%
don't see yes thank you
 

00:07:48.750 --> 00:07:52.140 align:start position:0%
don't see yes thank you
this<00:07:49.750><c> is</c><00:07:49.900><c> a</c><00:07:49.930><c> splitter</c><00:07:50.289><c> returning</c><00:07:51.000><c> not</c><00:07:52.000><c> the</c>

00:07:52.140 --> 00:07:52.150 align:start position:0%
this is a splitter returning not the
 

00:07:52.150 --> 00:07:53.790 align:start position:0%
this is a splitter returning not the
iterator<00:07:52.570><c> and</c><00:07:53.050><c> I'm</c><00:07:53.199><c> going</c><00:07:53.440><c> to</c><00:07:53.590><c> call</c><00:07:53.770><c> that</c>

00:07:53.790 --> 00:07:53.800 align:start position:0%
iterator and I'm going to call that
 

00:07:53.800 --> 00:08:02.189 align:start position:0%
iterator and I'm going to call that
splitter<00:07:54.280><c> Reiter</c><00:07:56.580><c> Reiter</c><00:08:00.840><c> all</c><00:08:01.840><c> right</c>

00:08:02.189 --> 00:08:02.199 align:start position:0%
splitter Reiter Reiter all right
 

00:08:02.199 --> 00:08:04.649 align:start position:0%
splitter Reiter Reiter all right
let<00:08:02.949><c> us</c><00:08:03.099><c> run</c><00:08:03.310><c> this</c><00:08:03.460><c> code</c><00:08:03.699><c> and</c><00:08:03.759><c> in</c><00:08:04.000><c> fact</c><00:08:04.210><c> it</c><00:08:04.360><c> runs</c>

00:08:04.649 --> 00:08:04.659 align:start position:0%
let us run this code and in fact it runs
 

00:08:04.659 --> 00:08:07.320 align:start position:0%
let us run this code and in fact it runs
in<00:08:05.050><c> the</c><00:08:05.380><c> exact</c><00:08:05.680><c> same</c><00:08:05.860><c> way</c><00:08:05.919><c> as</c><00:08:06.370><c> the</c><00:08:06.789><c> previous</c>

00:08:07.320 --> 00:08:07.330 align:start position:0%
in the exact same way as the previous
 

00:08:07.330 --> 00:08:11.430 align:start position:0%
in the exact same way as the previous
one<00:08:07.860><c> okay</c><00:08:08.860><c> so</c><00:08:09.340><c> how</c><00:08:10.150><c> can</c><00:08:10.449><c> we</c><00:08:10.599><c> create</c><00:08:10.870><c> other</c>

00:08:11.430 --> 00:08:11.440 align:start position:0%
one okay so how can we create other
 

00:08:11.440 --> 00:08:13.709 align:start position:0%
one okay so how can we create other
splitter<00:08:11.889><c> raters</c><00:08:12.310><c> starting</c><00:08:13.210><c> from</c><00:08:13.449><c> this</c>

00:08:13.709 --> 00:08:13.719 align:start position:0%
splitter raters starting from this
 

00:08:13.719 --> 00:08:16.499 align:start position:0%
splitter raters starting from this
little<00:08:14.020><c> Reiter</c><00:08:14.289><c> created</c><00:08:15.159><c> on</c><00:08:15.280><c> that</c><00:08:15.430><c> stream</c><00:08:15.789><c> let</c>

00:08:16.499 --> 00:08:16.509 align:start position:0%
little Reiter created on that stream let
 

00:08:16.509 --> 00:08:19.620 align:start position:0%
little Reiter created on that stream let
us<00:08:16.630><c> do</c><00:08:16.780><c> that</c><00:08:17.280><c> I'm</c><00:08:18.280><c> going</c><00:08:18.520><c> to</c><00:08:18.669><c> first</c><00:08:18.909><c> create</c><00:08:19.120><c> a</c>

00:08:19.620 --> 00:08:19.630 align:start position:0%
us do that I'm going to first create a
 

00:08:19.630 --> 00:08:21.959 align:start position:0%
us do that I'm going to first create a
very<00:08:19.990><c> simple</c><00:08:20.770><c> splitter</c><00:08:21.250><c> ATAR</c><00:08:21.430><c> that</c><00:08:21.669><c> in</c><00:08:21.789><c> fact</c>

00:08:21.959 --> 00:08:21.969 align:start position:0%
very simple splitter ATAR that in fact
 

00:08:21.969 --> 00:08:23.760 align:start position:0%
very simple splitter ATAR that in fact
does<00:08:22.180><c> nothing</c><00:08:22.599><c> and</c><00:08:22.870><c> it</c><00:08:23.289><c> should</c><00:08:23.440><c> be</c><00:08:23.560><c> a</c><00:08:23.590><c> good</c>

00:08:23.760 --> 00:08:23.770 align:start position:0%
does nothing and it should be a good
 

00:08:23.770 --> 00:08:25.620 align:start position:0%
does nothing and it should be a good
occasion<00:08:24.009><c> just</c><00:08:24.400><c> to</c><00:08:24.550><c> visit</c><00:08:24.909><c> the</c><00:08:25.030><c> interface</c><00:08:25.419><c> we</c>

00:08:25.620 --> 00:08:25.630 align:start position:0%
occasion just to visit the interface we
 

00:08:25.630 --> 00:08:28.469 align:start position:0%
occasion just to visit the interface we
need<00:08:25.780><c> to</c><00:08:25.900><c> implement</c><00:08:26.110><c> and</c><00:08:26.530><c> see</c><00:08:27.250><c> how</c><00:08:27.520><c> the</c><00:08:28.120><c> method</c>

00:08:28.469 --> 00:08:28.479 align:start position:0%
need to implement and see how the method
 

00:08:28.479 --> 00:08:31.110 align:start position:0%
need to implement and see how the method
we<00:08:28.630><c> need</c><00:08:28.780><c> to</c><00:08:28.900><c> implement</c><00:08:29.110><c> work</c><00:08:29.849><c> so</c><00:08:30.849><c> I'm</c><00:08:30.940><c> going</c>

00:08:31.110 --> 00:08:31.120 align:start position:0%
we need to implement work so I'm going
 

00:08:31.120 --> 00:08:33.329 align:start position:0%
we need to implement work so I'm going
to<00:08:31.240><c> create</c><00:08:31.449><c> a</c><00:08:31.539><c> no</c><00:08:31.840><c> operation</c><00:08:32.620><c> of</c><00:08:32.829><c> splitter</c>

00:08:33.329 --> 00:08:33.339 align:start position:0%
to create a no operation of splitter
 

00:08:33.339 --> 00:08:38.459 align:start position:0%
to create a no operation of splitter
ATAR<00:08:33.610><c> of</c><00:08:34.529><c> string</c><00:08:36.630><c> no</c><00:08:37.630><c> operation</c><00:08:38.050><c> splitter</c>

00:08:38.459 --> 00:08:38.469 align:start position:0%
ATAR of string no operation splitter
 

00:08:38.469 --> 00:08:42.029 align:start position:0%
ATAR of string no operation splitter
ater<00:08:38.940><c> let</c><00:08:39.940><c> us</c><00:08:40.060><c> create</c><00:08:40.329><c> this</c><00:08:40.539><c> class</c><00:08:40.839><c> real</c><00:08:41.740><c> quick</c>

00:08:42.029 --> 00:08:42.039 align:start position:0%
ater let us create this class real quick
 

00:08:42.039 --> 00:08:45.639 align:start position:0%
ater let us create this class real quick
I<00:08:42.370><c> want</c><00:08:43.089><c> to</c><00:08:43.450><c> create</c><00:08:43.690><c> it</c><00:08:43.899><c> in</c><00:08:44.110><c> that</c><00:08:44.260><c> package</c>

00:08:45.639 --> 00:08:45.649 align:start position:0%
I want to create it in that package
 

00:08:45.649 --> 00:08:52.329 align:start position:0%
I want to create it in that package
great<00:08:46.649><c> it</c><00:08:46.980><c> implements</c><00:08:49.040><c> speech</c><00:08:50.040><c> orator</c><00:08:50.540><c> of</c><00:08:51.540><c> tea</c>

00:08:52.329 --> 00:08:52.339 align:start position:0%
great it implements speech orator of tea
 

00:08:52.339 --> 00:08:57.199 align:start position:0%
great it implements speech orator of tea
right<00:08:53.720><c> what</c><00:08:54.720><c> do</c><00:08:54.810><c> we</c><00:08:54.930><c> have</c><00:08:55.079><c> here</c><00:08:55.940><c> we</c><00:08:56.940><c> have</c><00:08:57.060><c> in</c>

00:08:57.199 --> 00:08:57.209 align:start position:0%
right what do we have here we have in
 

00:08:57.209 --> 00:08:59.060 align:start position:0%
right what do we have here we have in
fact<00:08:57.420><c> a</c><00:08:57.750><c> collection</c><00:08:58.019><c> of</c><00:08:58.350><c> methods</c><00:08:58.560><c> to</c>

00:08:59.060 --> 00:08:59.070 align:start position:0%
fact a collection of methods to
 

00:08:59.070 --> 00:09:01.160 align:start position:0%
fact a collection of methods to
implement<00:08:59.550><c> which</c><00:08:59.699><c> are</c><00:08:59.880><c> abstract</c><00:09:00.389><c> method</c><00:09:00.720><c> they</c>

00:09:01.160 --> 00:09:01.170 align:start position:0%
implement which are abstract method they
 

00:09:01.170 --> 00:09:03.980 align:start position:0%
implement which are abstract method they
are<00:09:01.259><c> for</c><00:09:01.470><c> them</c><00:09:01.709><c> and</c><00:09:02.120><c> for</c><00:09:03.120><c> other</c><00:09:03.300><c> methods</c><00:09:03.750><c> that</c>

00:09:03.980 --> 00:09:03.990 align:start position:0%
are for them and for other methods that
 

00:09:03.990 --> 00:09:06.110 align:start position:0%
are for them and for other methods that
are<00:09:04.170><c> default</c><00:09:04.500><c> methods</c><00:09:04.949><c> that</c><00:09:05.370><c> we</c><00:09:05.550><c> do</c><00:09:05.699><c> not</c><00:09:05.850><c> need</c>

00:09:06.110 --> 00:09:06.120 align:start position:0%
are default methods that we do not need
 

00:09:06.120 --> 00:09:08.930 align:start position:0%
are default methods that we do not need
to<00:09:06.269><c> implement</c><00:09:06.540><c> in</c><00:09:07.500><c> a</c><00:09:07.680><c> first</c><00:09:07.920><c> step</c><00:09:08.100><c> all</c><00:09:08.790><c> right</c>

00:09:08.930 --> 00:09:08.940 align:start position:0%
to implement in a first step all right
 

00:09:08.940 --> 00:09:10.939 align:start position:0%
to implement in a first step all right
we<00:09:09.420><c> will</c><00:09:09.779><c> look</c><00:09:09.959><c> into</c><00:09:10.139><c> that</c><00:09:10.259><c> more</c><00:09:10.560><c> precisely</c>

00:09:10.939 --> 00:09:10.949 align:start position:0%
we will look into that more precisely
 

00:09:10.949 --> 00:09:13.280 align:start position:0%
we will look into that more precisely
because<00:09:11.250><c> there</c><00:09:11.790><c> is</c><00:09:11.940><c> a</c><00:09:11.970><c> there</c><00:09:12.329><c> is</c><00:09:12.660><c> a</c><00:09:12.779><c> trap</c><00:09:13.110><c> in</c>

00:09:13.280 --> 00:09:13.290 align:start position:0%
because there is a there is a trap in
 

00:09:13.290 --> 00:09:16.579 align:start position:0%
because there is a there is a trap in
that<00:09:14.569><c> okay</c><00:09:15.569><c> so</c><00:09:15.630><c> this</c><00:09:15.930><c> is</c><00:09:16.110><c> our</c><00:09:16.259><c> basic</c>

00:09:16.579 --> 00:09:16.589 align:start position:0%
that okay so this is our basic
 

00:09:16.589 --> 00:09:19.999 align:start position:0%
that okay so this is our basic
implementation<00:09:16.980><c> I'm</c><00:09:17.880><c> just</c><00:09:18.750><c> going</c><00:09:19.019><c> to</c><00:09:19.079><c> do</c><00:09:19.980><c> a</c>

00:09:19.999 --> 00:09:20.009 align:start position:0%
implementation I'm just going to do a
 

00:09:20.009 --> 00:09:21.920 align:start position:0%
implementation I'm just going to do a
little<00:09:20.160><c> further</c><00:09:20.550><c> go</c><00:09:20.910><c> a</c><00:09:20.940><c> little</c><00:09:21.120><c> further</c><00:09:21.420><c> here</c>

00:09:21.920 --> 00:09:21.930 align:start position:0%
little further go a little further here
 

00:09:21.930 --> 00:09:24.410 align:start position:0%
little further go a little further here
because<00:09:22.290><c> this</c><00:09:22.440><c> knobs</c><00:09:22.769><c> Peter</c><00:09:23.100><c> Reiter</c><00:09:23.370><c> is</c><00:09:24.180><c> in</c>

00:09:24.410 --> 00:09:24.420 align:start position:0%
because this knobs Peter Reiter is in
 

00:09:24.420 --> 00:09:27.860 align:start position:0%
because this knobs Peter Reiter is in
fact<00:09:24.660><c> going</c><00:09:24.810><c> to</c><00:09:24.930><c> be</c><00:09:25.230><c> created</c><00:09:25.769><c> on</c><00:09:26.480><c> the</c><00:09:27.480><c> splitter</c>

00:09:27.860 --> 00:09:27.870 align:start position:0%
fact going to be created on the splitter
 

00:09:27.870 --> 00:09:28.280 align:start position:0%
fact going to be created on the splitter
Reiter

00:09:28.280 --> 00:09:28.290 align:start position:0%
Reiter
 

00:09:28.290 --> 00:09:31.100 align:start position:0%
Reiter
of<00:09:28.440><c> the</c><00:09:28.649><c> underlying</c><00:09:29.009><c> stream</c><00:09:29.509><c> so</c><00:09:30.509><c> I'm</c><00:09:30.779><c> going</c><00:09:30.990><c> to</c>

00:09:31.100 --> 00:09:31.110 align:start position:0%
of the underlying stream so I'm going to
 

00:09:31.110 --> 00:09:34.670 align:start position:0%
of the underlying stream so I'm going to
create<00:09:31.410><c> this</c><00:09:31.649><c> constructor</c><00:09:33.050><c> great</c><00:09:34.050><c> this</c><00:09:34.470><c> is</c><00:09:34.649><c> a</c>

00:09:34.670 --> 00:09:34.680 align:start position:0%
create this constructor great this is a
 

00:09:34.680 --> 00:09:37.850 align:start position:0%
create this constructor great this is a
splitter<00:09:35.100><c> root</c><00:09:35.220><c> of</c><00:09:35.370><c> T</c><00:09:35.639><c> indeed</c><00:09:36.089><c> and</c><00:09:36.660><c> I</c><00:09:37.410><c> want</c><00:09:37.740><c> to</c>

00:09:37.850 --> 00:09:37.860 align:start position:0%
splitter root of T indeed and I want to
 

00:09:37.860 --> 00:09:41.960 align:start position:0%
splitter root of T indeed and I want to
create<00:09:38.100><c> that</c><00:09:38.279><c> field</c><00:09:39.769><c> and</c><00:09:40.769><c> this</c><00:09:41.490><c> idea</c><00:09:41.850><c> is</c>

00:09:41.960 --> 00:09:41.970 align:start position:0%
create that field and this idea is
 

00:09:41.970 --> 00:09:45.259 align:start position:0%
create that field and this idea is
really<00:09:42.240><c> great</c><00:09:42.509><c> in</c><00:09:42.870><c> hand</c><00:09:43.139><c> I</c><00:09:43.230><c> mean</c><00:09:43.440><c> that</c><00:09:44.269><c> right</c>

00:09:45.259 --> 00:09:45.269 align:start position:0%
really great in hand I mean that right
 

00:09:45.269 --> 00:09:48.170 align:start position:0%
really great in hand I mean that right
so<00:09:45.959><c> now</c><00:09:46.170><c> I</c><00:09:46.440><c> have</c><00:09:46.709><c> this</c><00:09:46.860><c> no</c><00:09:47.160><c> operation</c><00:09:47.850><c> splitter</c>

00:09:48.170 --> 00:09:48.180 align:start position:0%
so now I have this no operation splitter
 

00:09:48.180 --> 00:09:50.750 align:start position:0%
so now I have this no operation splitter
a<00:09:48.269><c> turd</c><00:09:48.589><c> created</c><00:09:49.589><c> on</c><00:09:49.800><c> another</c><00:09:50.190><c> splitter</c><00:09:50.579><c> a</c>

00:09:50.750 --> 00:09:50.760 align:start position:0%
a turd created on another splitter a
 

00:09:50.760 --> 00:09:52.850 align:start position:0%
a turd created on another splitter a
turd<00:09:50.970><c> itself</c><00:09:51.569><c> created</c><00:09:52.110><c> on</c><00:09:52.319><c> an</c><00:09:52.500><c> incoming</c>

00:09:52.850 --> 00:09:52.860 align:start position:0%
turd itself created on an incoming
 

00:09:52.860 --> 00:09:56.210 align:start position:0%
turd itself created on an incoming
stream<00:09:53.250><c> or</c><00:09:53.459><c> on</c><00:09:53.760><c> an</c><00:09:54.089><c> upstream</c><00:09:54.630><c> right</c><00:09:55.170><c> what</c><00:09:55.980><c> do</c><00:09:56.130><c> I</c>

00:09:56.210 --> 00:09:56.220 align:start position:0%
stream or on an upstream right what do I
 

00:09:56.220 --> 00:09:59.449 align:start position:0%
stream or on an upstream right what do I
have<00:09:56.569><c> to</c><00:09:57.569><c> implement</c><00:09:57.839><c> for</c><00:09:58.440><c> that</c><00:09:58.560><c> I</c><00:09:58.800><c> have</c><00:09:59.069><c> four</c>

00:09:59.449 --> 00:09:59.459 align:start position:0%
have to implement for that I have four
 

00:09:59.459 --> 00:10:01.790 align:start position:0%
have to implement for that I have four
abstract<00:10:00.269><c> method</c><00:10:00.600><c> that</c><00:10:01.199><c> I</c><00:10:01.230><c> need</c><00:10:01.470><c> to</c><00:10:01.589><c> implement</c>

00:10:01.790 --> 00:10:01.800 align:start position:0%
abstract method that I need to implement
 

00:10:01.800 --> 00:10:03.620 align:start position:0%
abstract method that I need to implement
of<00:10:02.100><c> course</c><00:10:02.310><c> if</c><00:10:02.430><c> I</c><00:10:02.490><c> do</c><00:10:02.550><c> not</c><00:10:02.760><c> do</c><00:10:02.940><c> that</c><00:10:02.970><c> it</c><00:10:03.449><c> will</c>

00:10:03.620 --> 00:10:03.630 align:start position:0%
of course if I do not do that it will
 

00:10:03.630 --> 00:10:06.710 align:start position:0%
of course if I do not do that it will
not<00:10:03.779><c> work</c><00:10:03.990><c> try</c><00:10:04.800><c> advanced</c><00:10:05.250><c> try</c><00:10:05.699><c> split</c><00:10:06.029><c> estimate</c>

00:10:06.710 --> 00:10:06.720 align:start position:0%
not work try advanced try split estimate
 

00:10:06.720 --> 00:10:09.350 align:start position:0%
not work try advanced try split estimate
size<00:10:06.930><c> and</c><00:10:07.230><c> characteristics</c><00:10:08.160><c> now</c><00:10:09.029><c> you</c><00:10:09.089><c> may</c>

00:10:09.350 --> 00:10:09.360 align:start position:0%
size and characteristics now you may
 

00:10:09.360 --> 00:10:11.860 align:start position:0%
size and characteristics now you may
think<00:10:09.389><c> that</c><00:10:09.660><c> those</c><00:10:10.110><c> methods</c><00:10:10.529><c> have</c><00:10:10.980><c> kind</c><00:10:11.519><c> of</c>

00:10:11.860 --> 00:10:11.870 align:start position:0%
think that those methods have kind of
 

00:10:11.870 --> 00:10:16.189 align:start position:0%
think that those methods have kind of
bizarre<00:10:12.870><c> names</c><00:10:13.230><c> on</c><00:10:13.500><c> try</c><00:10:14.399><c> split--</c><00:10:15.199><c> estimate</c>

00:10:16.189 --> 00:10:16.199 align:start position:0%
bizarre names on try split-- estimate
 

00:10:16.199 --> 00:10:18.230 align:start position:0%
bizarre names on try split-- estimate
size<00:10:16.470><c> and</c><00:10:16.769><c> collection</c><00:10:17.190><c> I</c><00:10:17.279><c> have</c><00:10:17.430><c> a</c><00:10:17.459><c> size</c><00:10:17.790><c> method</c>

00:10:18.230 --> 00:10:18.240 align:start position:0%
size and collection I have a size method
 

00:10:18.240 --> 00:10:19.850 align:start position:0%
size and collection I have a size method
but<00:10:18.389><c> I</c><00:10:18.480><c> do</c><00:10:18.540><c> not</c><00:10:18.720><c> have</c><00:10:18.870><c> an</c><00:10:19.019><c> estimate</c><00:10:19.589><c> size</c>

00:10:19.850 --> 00:10:19.860 align:start position:0%
but I do not have an estimate size
 

00:10:19.860 --> 00:10:22.670 align:start position:0%
but I do not have an estimate size
method<00:10:20.459><c> and</c><00:10:20.910><c> this</c><00:10:21.540><c> is</c><00:10:21.690><c> in</c><00:10:21.810><c> fact</c><00:10:22.019><c> quite</c><00:10:22.170><c> normal</c>

00:10:22.670 --> 00:10:22.680 align:start position:0%
method and this is in fact quite normal
 

00:10:22.680 --> 00:10:24.350 align:start position:0%
method and this is in fact quite normal
and<00:10:22.800><c> it</c><00:10:22.920><c> comes</c><00:10:23.160><c> from</c><00:10:23.370><c> the</c><00:10:23.579><c> the</c><00:10:24.060><c> way</c><00:10:24.300><c> the</c>

00:10:24.350 --> 00:10:24.360 align:start position:0%
and it comes from the the way the
 

00:10:24.360 --> 00:10:27.559 align:start position:0%
and it comes from the the way the
streams<00:10:24.870><c> work</c><00:10:25.699><c> when</c><00:10:26.699><c> you</c><00:10:26.790><c> create</c><00:10:27.089><c> a</c><00:10:27.120><c> stream</c><00:10:27.449><c> on</c>

00:10:27.559 --> 00:10:27.569 align:start position:0%
streams work when you create a stream on
 

00:10:27.569 --> 00:10:29.929 align:start position:0%
streams work when you create a stream on
a<00:10:27.630><c> source</c><00:10:27.870><c> of</c><00:10:27.930><c> object</c><00:10:28.350><c> you</c><00:10:28.920><c> ought</c><00:10:29.220><c> not</c><00:10:29.430><c> you</c><00:10:29.819><c> do</c>

00:10:29.929 --> 00:10:29.939 align:start position:0%
a source of object you ought not you do
 

00:10:29.939 --> 00:10:32.120 align:start position:0%
a source of object you ought not you do
not<00:10:30.089><c> necessarily</c><00:10:30.420><c> know</c><00:10:31.110><c> how</c><00:10:31.470><c> many</c><00:10:31.649><c> object</c><00:10:32.040><c> you</c>

00:10:32.120 --> 00:10:32.130 align:start position:0%
not necessarily know how many object you
 

00:10:32.130 --> 00:10:34.160 align:start position:0%
not necessarily know how many object you
are<00:10:32.189><c> going</c><00:10:32.430><c> to</c><00:10:32.639><c> to</c><00:10:33.149><c> process</c><00:10:33.630><c> through</c><00:10:34.139><c> that</c>

00:10:34.160 --> 00:10:34.170 align:start position:0%
are going to to process through that
 

00:10:34.170 --> 00:10:36.139 align:start position:0%
are going to to process through that
stream<00:10:34.589><c> you</c><00:10:34.800><c> don't</c><00:10:35.010><c> do</c><00:10:35.250><c> not</c><00:10:35.370><c> know</c><00:10:35.579><c> that</c><00:10:35.730><c> when</c>

00:10:36.139 --> 00:10:36.149 align:start position:0%
stream you don't do not know that when
 

00:10:36.149 --> 00:10:37.910 align:start position:0%
stream you don't do not know that when
you<00:10:36.269><c> create</c><00:10:36.569><c> a</c><00:10:36.630><c> collection</c><00:10:36.959><c> on</c><00:10:37.350><c> an</c><00:10:37.529><c> array</c><00:10:37.800><c> list</c>

00:10:37.910 --> 00:10:37.920 align:start position:0%
you create a collection on an array list
 

00:10:37.920 --> 00:10:40.429 align:start position:0%
you create a collection on an array list
for<00:10:38.339><c> instance</c><00:10:38.430><c> so</c><00:10:38.790><c> set</c><00:10:39.329><c> of</c><00:10:39.449><c> object</c><00:10:39.810><c> you</c><00:10:40.319><c> know</c>

00:10:40.429 --> 00:10:40.439 align:start position:0%
for instance so set of object you know
 

00:10:40.439 --> 00:10:41.809 align:start position:0%
for instance so set of object you know
exactly<00:10:40.769><c> how</c><00:10:40.949><c> many</c><00:10:41.010><c> objects</c><00:10:41.459><c> you</c><00:10:41.550><c> have</c><00:10:41.579><c> in</c>

00:10:41.809 --> 00:10:41.819 align:start position:0%
exactly how many objects you have in
 

00:10:41.819 --> 00:10:43.819 align:start position:0%
exactly how many objects you have in
this<00:10:41.939><c> ArrayList</c><00:10:42.360><c> but</c><00:10:42.990><c> it</c><00:10:43.139><c> is</c><00:10:43.290><c> not</c><00:10:43.380><c> the</c><00:10:43.529><c> case</c><00:10:43.709><c> on</c>

00:10:43.819 --> 00:10:43.829 align:start position:0%
this ArrayList but it is not the case on
 

00:10:43.829 --> 00:10:45.769 align:start position:0%
this ArrayList but it is not the case on
us<00:10:43.980><c> of</c><00:10:44.189><c> first</c><00:10:44.519><c> stream</c><00:10:44.819><c> if</c><00:10:45.329><c> you</c><00:10:45.509><c> create</c><00:10:45.750><c> a</c>

00:10:45.769 --> 00:10:45.779 align:start position:0%
us of first stream if you create a
 

00:10:45.779 --> 00:10:48.650 align:start position:0%
us of first stream if you create a
stream<00:10:46.199><c> on</c><00:10:46.500><c> on</c><00:10:47.490><c> an</c><00:10:47.699><c> ArrayList</c><00:10:48.089><c> okay</c><00:10:48.360><c> you</c><00:10:48.420><c> know</c>

00:10:48.650 --> 00:10:48.660 align:start position:0%
stream on on an ArrayList okay you know
 

00:10:48.660 --> 00:10:50.030 align:start position:0%
stream on on an ArrayList okay you know
the<00:10:48.839><c> number</c><00:10:49.139><c> of</c><00:10:49.170><c> objects</c><00:10:49.529><c> you</c><00:10:49.680><c> are</c><00:10:49.740><c> going</c><00:10:49.920><c> to</c>

00:10:50.030 --> 00:10:50.040 align:start position:0%
the number of objects you are going to
 

00:10:50.040 --> 00:10:52.400 align:start position:0%
the number of objects you are going to
consume<00:10:50.370><c> but</c><00:10:51.120><c> if</c><00:10:51.269><c> you</c><00:10:51.420><c> create</c><00:10:51.750><c> a</c><00:10:51.779><c> stream</c><00:10:52.170><c> for</c>

00:10:52.400 --> 00:10:52.410 align:start position:0%
consume but if you create a stream for
 

00:10:52.410 --> 00:10:54.379 align:start position:0%
consume but if you create a stream for
instance<00:10:52.769><c> on</c><00:10:53.130><c> a</c><00:10:53.189><c> text</c><00:10:53.670><c> file</c><00:10:53.880><c> and</c><00:10:54.089><c> there</c><00:10:54.240><c> is</c><00:10:54.300><c> the</c>

00:10:54.379 --> 00:10:54.389 align:start position:0%
instance on a text file and there is the
 

00:10:54.389 --> 00:10:56.230 align:start position:0%
instance on a text file and there is the
method<00:10:54.569><c> for</c><00:10:54.899><c> that</c><00:10:54.990><c> on</c><00:10:55.230><c> bufferedreader</c><00:10:55.680><c> class</c>

00:10:56.230 --> 00:10:56.240 align:start position:0%
method for that on bufferedreader class
 

00:10:56.240 --> 00:10:59.240 align:start position:0%
method for that on bufferedreader class
which<00:10:57.240><c> is</c><00:10:57.510><c> which</c><00:10:57.810><c> is</c><00:10:57.990><c> called</c><00:10:58.139><c> lines</c>

00:10:59.240 --> 00:10:59.250 align:start position:0%
which is which is called lines
 

00:10:59.250 --> 00:11:01.340 align:start position:0%
which is which is called lines
this<00:10:59.400><c> method</c><00:10:59.880><c> reads</c><00:11:00.330><c> on</c><00:11:00.510><c> the</c><00:11:00.540><c> stream</c><00:11:00.960><c> on</c><00:11:01.170><c> the</c>

00:11:01.340 --> 00:11:01.350 align:start position:0%
this method reads on the stream on the
 

00:11:01.350 --> 00:11:03.590 align:start position:0%
this method reads on the stream on the
lines<00:11:01.560><c> of</c><00:11:01.950><c> this</c><00:11:02.100><c> text</c><00:11:02.370><c> file</c><00:11:02.520><c> even</c><00:11:03.090><c> if</c><00:11:03.270><c> you</c><00:11:03.450><c> know</c>

00:11:03.590 --> 00:11:03.600 align:start position:0%
lines of this text file even if you know
 

00:11:03.600 --> 00:11:06.110 align:start position:0%
lines of this text file even if you know
that<00:11:03.780><c> there</c><00:11:04.020><c> are</c><00:11:04.110><c> two</c><00:11:04.350><c> megabytes</c><00:11:04.770><c> of</c><00:11:05.610><c> content</c>

00:11:06.110 --> 00:11:06.120 align:start position:0%
that there are two megabytes of content
 

00:11:06.120 --> 00:11:07.580 align:start position:0%
that there are two megabytes of content
in<00:11:06.240><c> this</c><00:11:06.360><c> text</c><00:11:06.690><c> file</c><00:11:06.840><c> you</c><00:11:07.020><c> do</c><00:11:07.170><c> not</c><00:11:07.290><c> know</c><00:11:07.470><c> in</c>

00:11:07.580 --> 00:11:07.590 align:start position:0%
in this text file you do not know in
 

00:11:07.590 --> 00:11:09.680 align:start position:0%
in this text file you do not know in
advance<00:11:07.680><c> how</c><00:11:08.430><c> many</c><00:11:08.460><c> lines</c><00:11:08.940><c> they</c><00:11:09.330><c> are</c><00:11:09.450><c> in</c><00:11:09.570><c> it</c>

00:11:09.680 --> 00:11:09.690 align:start position:0%
advance how many lines they are in it
 

00:11:09.690 --> 00:11:12.110 align:start position:0%
advance how many lines they are in it
there<00:11:10.080><c> may</c><00:11:10.230><c> be</c><00:11:10.260><c> one</c><00:11:10.980><c> line</c><00:11:11.220><c> or</c><00:11:11.520><c> a</c><00:11:11.550><c> million</c><00:11:11.940><c> line</c>

00:11:12.110 --> 00:11:12.120 align:start position:0%
there may be one line or a million line
 

00:11:12.120 --> 00:11:14.390 align:start position:0%
there may be one line or a million line
or<00:11:12.390><c> ten</c><00:11:12.810><c> lines</c><00:11:13.050><c> you</c><00:11:13.620><c> need</c><00:11:13.770><c> to</c><00:11:13.890><c> analyze</c><00:11:14.040><c> the</c>

00:11:14.390 --> 00:11:14.400 align:start position:0%
or ten lines you need to analyze the
 

00:11:14.400 --> 00:11:16.370 align:start position:0%
or ten lines you need to analyze the
text<00:11:14.550><c> file</c><00:11:14.790><c> for</c><00:11:14.940><c> that</c><00:11:15.060><c> so</c><00:11:15.600><c> it's</c><00:11:15.900><c> really</c><00:11:16.200><c> a</c>

00:11:16.370 --> 00:11:16.380 align:start position:0%
text file for that so it's really a
 

00:11:16.380 --> 00:11:19.160 align:start position:0%
text file for that so it's really a
method<00:11:16.560><c> estimate</c><00:11:17.460><c> site</c><00:11:17.670><c> that</c><00:11:18.480><c> does</c><00:11:18.690><c> that</c><00:11:18.930><c> an</c>

00:11:19.160 --> 00:11:19.170 align:start position:0%
method estimate site that does that an
 

00:11:19.170 --> 00:11:21.440 align:start position:0%
method estimate site that does that an
estimation<00:11:19.680><c> of</c><00:11:20.070><c> the</c><00:11:20.310><c> sides</c><00:11:20.610><c> of</c><00:11:20.850><c> the</c><00:11:20.970><c> stream</c>

00:11:21.440 --> 00:11:21.450 align:start position:0%
estimation of the sides of the stream
 

00:11:21.450 --> 00:11:23.900 align:start position:0%
estimation of the sides of the stream
in<00:11:21.600><c> some</c><00:11:21.870><c> cases</c><00:11:22.110><c> this</c><00:11:23.040><c> estimation</c><00:11:23.550><c> may</c><00:11:23.850><c> be</c>

00:11:23.900 --> 00:11:23.910 align:start position:0%
in some cases this estimation may be
 

00:11:23.910 --> 00:11:26.150 align:start position:0%
in some cases this estimation may be
accurate<00:11:24.120><c> in</c><00:11:24.870><c> some</c><00:11:25.110><c> other</c><00:11:25.320><c> cases</c><00:11:25.560><c> it</c><00:11:25.890><c> may</c><00:11:26.130><c> be</c>

00:11:26.150 --> 00:11:26.160 align:start position:0%
accurate in some other cases it may be
 

00:11:26.160 --> 00:11:29.360 align:start position:0%
accurate in some other cases it may be
not<00:11:26.970><c> accurate</c><00:11:27.420><c> for</c><00:11:27.710><c> the</c><00:11:28.710><c> moment</c><00:11:29.010><c> what</c><00:11:29.220><c> I'm</c>

00:11:29.360 --> 00:11:29.370 align:start position:0%
not accurate for the moment what I'm
 

00:11:29.370 --> 00:11:32.840 align:start position:0%
not accurate for the moment what I'm
going<00:11:29.580><c> to</c><00:11:29.640><c> do</c><00:11:29.820><c> is</c><00:11:29.970><c> just</c><00:11:30.210><c> wire</c><00:11:31.050><c> this</c><00:11:32.040><c> method</c><00:11:32.490><c> on</c>

00:11:32.840 --> 00:11:32.850 align:start position:0%
going to do is just wire this method on
 

00:11:32.850 --> 00:11:36.050 align:start position:0%
going to do is just wire this method on
the<00:11:33.180><c> underlying</c><00:11:33.840><c> split</c><00:11:34.500><c> aerator</c><00:11:34.800><c> so</c><00:11:35.760><c> this</c>

00:11:36.050 --> 00:11:36.060 align:start position:0%
the underlying split aerator so this
 

00:11:36.060 --> 00:11:38.330 align:start position:0%
the underlying split aerator so this
estimate<00:11:36.750><c> size</c><00:11:36.960><c> will</c><00:11:37.320><c> just</c><00:11:37.560><c> return</c><00:11:37.890><c> the</c><00:11:38.100><c> same</c>

00:11:38.330 --> 00:11:38.340 align:start position:0%
estimate size will just return the same
 

00:11:38.340 --> 00:11:40.730 align:start position:0%
estimate size will just return the same
result<00:11:38.700><c> as</c><00:11:38.850><c> the</c><00:11:39.080><c> estimate</c><00:11:40.080><c> size</c><00:11:40.290><c> of</c><00:11:40.530><c> the</c>

00:11:40.730 --> 00:11:40.740 align:start position:0%
result as the estimate size of the
 

00:11:40.740 --> 00:11:44.300 align:start position:0%
result as the estimate size of the
splitter<00:11:41.040><c> rater</c><00:11:41.280><c> I</c><00:11:41.550><c> am</c><00:11:41.790><c> creating</c><00:11:42.360><c> on</c><00:11:42.920><c> this</c><00:11:43.920><c> tri</c>

00:11:44.300 --> 00:11:44.310 align:start position:0%
splitter rater I am creating on this tri
 

00:11:44.310 --> 00:11:47.090 align:start position:0%
splitter rater I am creating on this tri
split<00:11:44.640><c> method</c><00:11:44.850><c> will</c><00:11:45.660><c> be</c><00:11:45.690><c> called</c><00:11:45.840><c> if</c><00:11:46.470><c> I</c><00:11:46.740><c> want</c><00:11:46.980><c> to</c>

00:11:47.090 --> 00:11:47.100 align:start position:0%
split method will be called if I want to
 

00:11:47.100 --> 00:11:49.670 align:start position:0%
split method will be called if I want to
go<00:11:47.250><c> parallel</c><00:11:47.630><c> going</c><00:11:48.630><c> parallel</c><00:11:48.960><c> means</c><00:11:49.380><c> I</c><00:11:49.590><c> need</c>

00:11:49.670 --> 00:11:49.680 align:start position:0%
go parallel going parallel means I need
 

00:11:49.680 --> 00:11:53.180 align:start position:0%
go parallel going parallel means I need
to<00:11:49.860><c> split</c><00:11:50.370><c> my</c><00:11:50.790><c> stream</c><00:11:51.210><c> in</c><00:11:51.540><c> two</c><00:11:51.780><c> parts</c><00:11:52.170><c> give</c><00:11:53.040><c> the</c>

00:11:53.180 --> 00:11:53.190 align:start position:0%
to split my stream in two parts give the
 

00:11:53.190 --> 00:11:55.970 align:start position:0%
to split my stream in two parts give the
first<00:11:53.430><c> part</c><00:11:53.700><c> to</c><00:11:54.030><c> a</c><00:11:54.060><c> given</c><00:11:54.330><c> Cove</c><00:11:54.750><c> my</c><00:11:55.020><c> CPU</c><00:11:55.560><c> on</c><00:11:55.800><c> the</c>

00:11:55.970 --> 00:11:55.980 align:start position:0%
first part to a given Cove my CPU on the
 

00:11:55.980 --> 00:11:58.010 align:start position:0%
first part to a given Cove my CPU on the
second<00:11:56.310><c> part</c><00:11:56.490><c> to</c><00:11:56.520><c> another</c><00:11:56.820><c> core</c><00:11:57.420><c> my</c><00:11:57.600><c> CPU</c>

00:11:58.010 --> 00:11:58.020 align:start position:0%
second part to another core my CPU
 

00:11:58.020 --> 00:12:00.710 align:start position:0%
second part to another core my CPU
process<00:11:58.620><c> stuff</c><00:11:59.160><c> in</c><00:11:59.310><c> parallel</c><00:11:59.670><c> if</c><00:12:00.090><c> I</c><00:12:00.330><c> do</c><00:12:00.390><c> not</c>

00:12:00.710 --> 00:12:00.720 align:start position:0%
process stuff in parallel if I do not
 

00:12:00.720 --> 00:12:03.080 align:start position:0%
process stuff in parallel if I do not
want<00:12:01.110><c> to</c><00:12:01.260><c> go</c><00:12:01.410><c> parallel</c><00:12:01.740><c> we</c><00:12:01.950><c> fight</c><00:12:02.220><c> I</c><00:12:02.400><c> am</c><00:12:02.760><c> sure</c><00:12:03.060><c> I</c>

00:12:03.080 --> 00:12:03.090 align:start position:0%
want to go parallel we fight I am sure I
 

00:12:03.090 --> 00:12:05.360 align:start position:0%
want to go parallel we fight I am sure I
will<00:12:03.330><c> not</c><00:12:03.510><c> go</c><00:12:03.690><c> parallel</c><00:12:04.080><c> I</c><00:12:04.260><c> can</c><00:12:04.830><c> return</c><00:12:05.130><c> nil</c>

00:12:05.360 --> 00:12:05.370 align:start position:0%
will not go parallel I can return nil
 

00:12:05.370 --> 00:12:08.920 align:start position:0%
will not go parallel I can return nil
with<00:12:05.640><c> this</c><00:12:05.820><c> try</c><00:12:06.120><c> split</c><00:12:06.420><c> method</c>

00:12:08.920 --> 00:12:08.930 align:start position:0%
 
 

00:12:08.930 --> 00:12:10.940 align:start position:0%
 
characteristics<00:12:09.930><c> for</c><00:12:10.380><c> the</c><00:12:10.440><c> moment</c><00:12:10.680><c> I</c><00:12:10.770><c> will</c>

00:12:10.940 --> 00:12:10.950 align:start position:0%
characteristics for the moment I will
 

00:12:10.950 --> 00:12:13.760 align:start position:0%
characteristics for the moment I will
not<00:12:11.250><c> go</c><00:12:11.580><c> into</c><00:12:11.700><c> details</c><00:12:12.180><c> in</c><00:12:12.990><c> this</c><00:12:13.170><c> method</c><00:12:13.380><c> we'll</c>

00:12:13.760 --> 00:12:13.770 align:start position:0%
not go into details in this method we'll
 

00:12:13.770 --> 00:12:15.680 align:start position:0%
not go into details in this method we'll
do<00:12:13.920><c> that</c><00:12:14.040><c> in</c><00:12:14.220><c> a</c><00:12:14.310><c> minute</c><00:12:14.430><c> for</c><00:12:15.270><c> the</c><00:12:15.390><c> moment</c><00:12:15.600><c> I</c>

00:12:15.680 --> 00:12:15.690 align:start position:0%
do that in a minute for the moment I
 

00:12:15.690 --> 00:12:17.870 align:start position:0%
do that in a minute for the moment I
will<00:12:15.870><c> just</c><00:12:16.140><c> continue</c><00:12:17.130><c> to</c><00:12:17.280><c> return</c><00:12:17.760><c> the</c>

00:12:17.870 --> 00:12:17.880 align:start position:0%
will just continue to return the
 

00:12:17.880 --> 00:12:19.910 align:start position:0%
will just continue to return the
characteristics<00:12:18.630><c> of</c><00:12:18.780><c> the</c><00:12:19.080><c> underlying</c><00:12:19.560><c> stream</c>

00:12:19.910 --> 00:12:19.920 align:start position:0%
characteristics of the underlying stream
 

00:12:19.920 --> 00:12:22.880 align:start position:0%
characteristics of the underlying stream
and<00:12:20.910><c> now</c><00:12:21.089><c> there</c><00:12:21.330><c> is</c><00:12:21.390><c> this</c><00:12:21.660><c> trial</c><00:12:22.170><c> runs</c><00:12:22.500><c> method</c>

00:12:22.880 --> 00:12:22.890 align:start position:0%
and now there is this trial runs method
 

00:12:22.890 --> 00:12:27.440 align:start position:0%
and now there is this trial runs method
this<00:12:23.370><c> is</c><00:12:23.430><c> really</c><00:12:24.180><c> where</c><00:12:24.750><c> I</c><00:12:25.470><c> need</c><00:12:25.950><c> to</c><00:12:26.240><c> write</c><00:12:27.240><c> my</c>

00:12:27.440 --> 00:12:27.450 align:start position:0%
this is really where I need to write my
 

00:12:27.450 --> 00:12:29.720 align:start position:0%
this is really where I need to write my
code<00:12:27.690><c> if</c><00:12:27.960><c> I</c><00:12:28.110><c> want</c><00:12:28.320><c> to</c><00:12:28.470><c> do</c><00:12:28.620><c> stuff</c><00:12:28.680><c> non</c><00:12:29.520><c> trivial</c>

00:12:29.720 --> 00:12:29.730 align:start position:0%
code if I want to do stuff non trivial
 

00:12:29.730 --> 00:12:31.400 align:start position:0%
code if I want to do stuff non trivial
stuff<00:12:30.089><c> later</c><00:12:30.390><c> let</c><00:12:30.660><c> us</c><00:12:30.780><c> state</c><00:12:30.990><c> it</c><00:12:31.110><c> like</c><00:12:31.260><c> that</c>

00:12:31.400 --> 00:12:31.410 align:start position:0%
stuff later let us state it like that
 

00:12:31.410 --> 00:12:34.340 align:start position:0%
stuff later let us state it like that
this<00:12:32.250><c> try</c><00:12:32.490><c> advanced</c><00:12:32.880><c> method</c><00:12:33.300><c> can</c><00:12:33.600><c> be</c><00:12:33.780><c> seen</c><00:12:34.140><c> as</c>

00:12:34.340 --> 00:12:34.350 align:start position:0%
this try advanced method can be seen as
 

00:12:34.350 --> 00:12:37.520 align:start position:0%
this try advanced method can be seen as
the<00:12:34.680><c> equivalent</c><00:12:35.310><c> of</c><00:12:35.520><c> the</c><00:12:35.880><c> next</c><00:12:36.300><c> method</c><00:12:36.510><c> of</c><00:12:36.900><c> the</c>

00:12:37.520 --> 00:12:37.530 align:start position:0%
the equivalent of the next method of the
 

00:12:37.530 --> 00:12:39.620 align:start position:0%
the equivalent of the next method of the
of<00:12:37.740><c> the</c><00:12:37.890><c> iterator</c><00:12:38.400><c> object</c><00:12:38.490><c> but</c><00:12:39.300><c> it</c><00:12:39.390><c> works</c>

00:12:39.620 --> 00:12:39.630 align:start position:0%
of the iterator object but it works
 

00:12:39.630 --> 00:12:42.700 align:start position:0%
of the iterator object but it works
differently<00:12:40.100><c> first</c><00:12:41.100><c> it</c><00:12:41.400><c> returns</c><00:12:41.850><c> a</c><00:12:41.940><c> boolean</c>

00:12:42.700 --> 00:12:42.710 align:start position:0%
differently first it returns a boolean
 

00:12:42.710 --> 00:12:45.710 align:start position:0%
differently first it returns a boolean
right<00:12:43.710><c> and</c><00:12:43.980><c> this</c><00:12:44.670><c> boolean</c><00:12:45.030><c> of</c><00:12:45.210><c> force</c><00:12:45.420><c> can</c><00:12:45.600><c> be</c>

00:12:45.710 --> 00:12:45.720 align:start position:0%
right and this boolean of force can be
 

00:12:45.720 --> 00:12:50.150 align:start position:0%
right and this boolean of force can be
true<00:12:45.960><c> or</c><00:12:46.050><c> false</c><00:12:46.080><c> as</c><00:12:46.700><c> many</c><00:12:47.700><c> billions</c><00:12:48.860><c> if</c><00:12:49.860><c> it's</c>

00:12:50.150 --> 00:12:50.160 align:start position:0%
true or false as many billions if it's
 

00:12:50.160 --> 00:12:52.850 align:start position:0%
true or false as many billions if it's
false<00:12:50.490><c> it</c><00:12:51.030><c> means</c><00:12:51.450><c> that</c><00:12:51.690><c> I</c><00:12:51.930><c> do</c><00:12:52.110><c> not</c><00:12:52.410><c> have</c><00:12:52.470><c> any</c>

00:12:52.850 --> 00:12:52.860 align:start position:0%
false it means that I do not have any
 

00:12:52.860 --> 00:12:55.340 align:start position:0%
false it means that I do not have any
more<00:12:53.040><c> object</c><00:12:53.370><c> to</c><00:12:54.030><c> produce</c><00:12:54.240><c> with</c><00:12:54.900><c> the</c><00:12:54.930><c> splitter</c>

00:12:55.340 --> 00:12:55.350 align:start position:0%
more object to produce with the splitter
 

00:12:55.350 --> 00:12:57.890 align:start position:0%
more object to produce with the splitter
rater<00:12:55.620><c> and</c><00:12:55.950><c> if</c><00:12:56.580><c> it</c><00:12:56.730><c> returns</c><00:12:56.940><c> true</c><00:12:57.330><c> it</c><00:12:57.630><c> means</c>

00:12:57.890 --> 00:12:57.900 align:start position:0%
rater and if it returns true it means
 

00:12:57.900 --> 00:13:01.700 align:start position:0%
rater and if it returns true it means
that<00:12:58.140><c> I</c><00:12:58.380><c> should</c><00:12:59.960><c> the</c><00:13:00.960><c> implementation</c><00:13:01.680><c> should</c>

00:13:01.700 --> 00:13:01.710 align:start position:0%
that I should the implementation should
 

00:13:01.710 --> 00:13:03.470 align:start position:0%
that I should the implementation should
keep<00:13:02.160><c> calling</c><00:13:02.520><c> this</c><00:13:02.700><c> right</c><00:13:02.910><c> nonce</c><00:13:03.150><c> method</c>

00:13:03.470 --> 00:13:03.480 align:start position:0%
keep calling this right nonce method
 

00:13:03.480 --> 00:13:06.920 align:start position:0%
keep calling this right nonce method
because<00:13:03.750><c> more</c><00:13:04.050><c> objects</c><00:13:04.500><c> are</c><00:13:04.890><c> coming</c><00:13:05.510><c> okay</c><00:13:06.540><c> and</c>

00:13:06.920 --> 00:13:06.930 align:start position:0%
because more objects are coming okay and
 

00:13:06.930 --> 00:13:09.680 align:start position:0%
because more objects are coming okay and
now<00:13:07.770><c> it</c><00:13:07.920><c> takes</c><00:13:08.070><c> also</c><00:13:08.490><c> consumer</c><00:13:09.209><c> as</c><00:13:09.390><c> a</c>

00:13:09.680 --> 00:13:09.690 align:start position:0%
now it takes also consumer as a
 

00:13:09.690 --> 00:13:12.430 align:start position:0%
now it takes also consumer as a
parameter<00:13:10.310><c> action</c>

00:13:12.430 --> 00:13:12.440 align:start position:0%
parameter action
 

00:13:12.440 --> 00:13:14.290 align:start position:0%
parameter action
we<00:13:12.860><c> need</c><00:13:13.010><c> to</c><00:13:13.130><c> understand</c><00:13:13.550><c> that</c><00:13:13.640><c> this</c><00:13:13.970><c> try</c>

00:13:14.290 --> 00:13:14.300 align:start position:0%
we need to understand that this try
 

00:13:14.300 --> 00:13:16.330 align:start position:0%
we need to understand that this try
entrance<00:13:14.660><c> method</c><00:13:15.050><c> is</c><00:13:15.260><c> going</c><00:13:15.560><c> to</c><00:13:15.680><c> be</c><00:13:15.770><c> called</c><00:13:16.190><c> by</c>

00:13:16.330 --> 00:13:16.340 align:start position:0%
entrance method is going to be called by
 

00:13:16.340 --> 00:13:19.450 align:start position:0%
entrance method is going to be called by
the<00:13:16.550><c> reference</c><00:13:17.090><c> pipeline</c><00:13:17.570><c> object</c><00:13:18.460><c> provided</c>

00:13:19.450 --> 00:13:19.460 align:start position:0%
the reference pipeline object provided
 

00:13:19.460 --> 00:13:21.430 align:start position:0%
the reference pipeline object provided
the<00:13:19.970><c> splitter</c><00:13:20.330><c> rater</c><00:13:20.540><c> is</c><00:13:20.660><c> provided</c><00:13:21.140><c> to</c><00:13:21.170><c> that</c>

00:13:21.430 --> 00:13:21.440 align:start position:0%
the splitter rater is provided to that
 

00:13:21.440 --> 00:13:22.840 align:start position:0%
the splitter rater is provided to that
object<00:13:21.770><c> so</c><00:13:21.890><c> it's</c><00:13:22.220><c> going</c><00:13:22.340><c> to</c><00:13:22.430><c> be</c><00:13:22.520><c> called</c><00:13:22.730><c> by</c><00:13:22.790><c> the</c>

00:13:22.840 --> 00:13:22.850 align:start position:0%
object so it's going to be called by the
 

00:13:22.850 --> 00:13:25.270 align:start position:0%
object so it's going to be called by the
implementation<00:13:23.600><c> and</c><00:13:23.960><c> the</c><00:13:24.560><c> implementation</c>

00:13:25.270 --> 00:13:25.280 align:start position:0%
implementation and the implementation
 

00:13:25.280 --> 00:13:27.610 align:start position:0%
implementation and the implementation
will<00:13:25.460><c> check</c><00:13:25.850><c> if</c><00:13:26.090><c> there</c><00:13:26.330><c> are</c><00:13:26.390><c> more</c><00:13:26.600><c> objects</c><00:13:27.080><c> to</c>

00:13:27.610 --> 00:13:27.620 align:start position:0%
will check if there are more objects to
 

00:13:27.620 --> 00:13:30.550 align:start position:0%
will check if there are more objects to
be<00:13:27.740><c> consumed</c><00:13:28.160><c> and</c><00:13:28.490><c> if</c><00:13:28.850><c> they</c><00:13:29.120><c> are</c><00:13:29.240><c> we'll</c><00:13:29.990><c> expect</c>

00:13:30.550 --> 00:13:30.560 align:start position:0%
be consumed and if they are we'll expect
 

00:13:30.560 --> 00:13:32.290 align:start position:0%
be consumed and if they are we'll expect
those<00:13:30.770><c> objects</c><00:13:31.190><c> to</c><00:13:31.250><c> come</c><00:13:31.460><c> at</c><00:13:31.640><c> some</c><00:13:31.880><c> point</c><00:13:32.120><c> but</c>

00:13:32.290 --> 00:13:32.300 align:start position:0%
those objects to come at some point but
 

00:13:32.300 --> 00:13:34.510 align:start position:0%
those objects to come at some point but
not<00:13:32.660><c> necessarily</c><00:13:33.290><c> at</c><00:13:33.920><c> the</c><00:13:34.100><c> moment</c><00:13:34.370><c> at</c><00:13:34.490><c> which</c>

00:13:34.510 --> 00:13:34.520 align:start position:0%
not necessarily at the moment at which
 

00:13:34.520 --> 00:13:36.880 align:start position:0%
not necessarily at the moment at which
destroyed<00:13:35.240><c> ones</c><00:13:35.450><c> method</c><00:13:35.780><c> is</c><00:13:35.900><c> called</c><00:13:36.110><c> we're</c>

00:13:36.880 --> 00:13:36.890 align:start position:0%
destroyed ones method is called we're
 

00:13:36.890 --> 00:13:39.130 align:start position:0%
destroyed ones method is called we're
going<00:13:37.100><c> to</c><00:13:37.280><c> to</c><00:13:37.790><c> see</c><00:13:38.000><c> examples</c><00:13:38.210><c> of</c><00:13:38.420><c> that</c><00:13:38.480><c> later</c>

00:13:39.130 --> 00:13:39.140 align:start position:0%
going to to see examples of that later
 

00:13:39.140 --> 00:13:42.160 align:start position:0%
going to to see examples of that later
so<00:13:39.800><c> this</c><00:13:40.100><c> consumer</c><00:13:40.670><c> is</c><00:13:40.850><c> provided</c><00:13:41.510><c> by</c><00:13:41.930><c> this</c>

00:13:42.160 --> 00:13:42.170 align:start position:0%
so this consumer is provided by this
 

00:13:42.170 --> 00:13:44.470 align:start position:0%
so this consumer is provided by this
reference<00:13:42.530><c> pipeline</c><00:13:42.980><c> object</c><00:13:43.310><c> and</c><00:13:43.610><c> I</c><00:13:44.240><c> should</c>

00:13:44.470 --> 00:13:44.480 align:start position:0%
reference pipeline object and I should
 

00:13:44.480 --> 00:13:46.660 align:start position:0%
reference pipeline object and I should
call<00:13:44.840><c> the</c><00:13:45.050><c> accept</c><00:13:45.380><c> method</c><00:13:45.440><c> of</c><00:13:45.890><c> this</c><00:13:46.160><c> consumer</c>

00:13:46.660 --> 00:13:46.670 align:start position:0%
call the accept method of this consumer
 

00:13:46.670 --> 00:13:50.170 align:start position:0%
call the accept method of this consumer
with<00:13:47.330><c> the</c><00:13:47.540><c> object</c><00:13:47.900><c> I</c><00:13:48.110><c> want</c><00:13:48.440><c> to</c><00:13:48.770><c> consume</c><00:13:49.180><c> okay</c>

00:13:50.170 --> 00:13:50.180 align:start position:0%
with the object I want to consume okay
 

00:13:50.180 --> 00:13:53.800 align:start position:0%
with the object I want to consume okay
so<00:13:50.690><c> somehow</c><00:13:50.990><c> well</c><00:13:51.920><c> I</c><00:13:52.430><c> am</c><00:13:52.970><c> on</c><00:13:53.120><c> a</c><00:13:53.150><c> splitter</c><00:13:53.510><c> rater</c>

00:13:53.800 --> 00:13:53.810 align:start position:0%
so somehow well I am on a splitter rater
 

00:13:53.810 --> 00:13:57.130 align:start position:0%
so somehow well I am on a splitter rater
created<00:13:54.770><c> on</c><00:13:54.890><c> an</c><00:13:55.010><c> other</c><00:13:55.280><c> splitter</c><00:13:55.700><c> rater</c><00:13:55.940><c> so</c><00:13:56.870><c> if</c>

00:13:57.130 --> 00:13:57.140 align:start position:0%
created on an other splitter rater so if
 

00:13:57.140 --> 00:13:59.320 align:start position:0%
created on an other splitter rater so if
I<00:13:57.290><c> want</c><00:13:57.560><c> to</c><00:13:57.650><c> know</c><00:13:57.950><c> what</c><00:13:58.310><c> objects</c><00:13:58.850><c> are</c><00:13:58.940><c> going</c><00:13:59.180><c> to</c>

00:13:59.320 --> 00:13:59.330 align:start position:0%
I want to know what objects are going to
 

00:13:59.330 --> 00:14:02.650 align:start position:0%
I want to know what objects are going to
consumed<00:14:00.260><c> by</c><00:14:00.620><c> the</c><00:14:01.010><c> stream</c><00:14:01.430><c> I</c><00:14:01.550><c> I</c><00:14:01.580><c> mean</c><00:14:01.910><c> I</c><00:14:02.120><c> need</c>

00:14:02.650 --> 00:14:02.660 align:start position:0%
consumed by the stream I I mean I need
 

00:14:02.660 --> 00:14:05.890 align:start position:0%
consumed by the stream I I mean I need
to<00:14:02.810><c> call</c><00:14:03.080><c> the</c><00:14:03.710><c> underlying</c><00:14:04.070><c> splitter</c><00:14:04.580><c> rater</c><00:14:04.900><c> so</c>

00:14:05.890 --> 00:14:05.900 align:start position:0%
to call the underlying splitter rater so
 

00:14:05.900 --> 00:14:07.180 align:start position:0%
to call the underlying splitter rater so
in<00:14:06.020><c> fact</c><00:14:06.260><c> also</c><00:14:06.560><c> called</c>

00:14:07.180 --> 00:14:07.190 align:start position:0%
in fact also called
 

00:14:07.190 --> 00:14:10.810 align:start position:0%
in fact also called
this<00:14:08.000><c> splitter</c><00:14:08.690><c> rater</c><00:14:08.960><c> dot</c><00:14:09.920><c> try</c><00:14:10.460><c> it</c><00:14:10.520><c> once</c>

00:14:10.810 --> 00:14:10.820 align:start position:0%
this splitter rater dot try it once
 

00:14:10.820 --> 00:14:14.140 align:start position:0%
this splitter rater dot try it once
method<00:14:11.360><c> and</c><00:14:11.720><c> do</c><00:14:12.410><c> the</c><00:14:12.560><c> same</c><00:14:12.800><c> that</c><00:14:13.010><c> is</c><00:14:13.190><c> provide</c><00:14:13.850><c> a</c>

00:14:14.140 --> 00:14:14.150 align:start position:0%
method and do the same that is provide a
 

00:14:14.150 --> 00:14:17.740 align:start position:0%
method and do the same that is provide a
consumer<00:14:14.750><c> to</c><00:14:14.960><c> this</c><00:14:15.950><c> trade</c><00:14:16.220><c> wanted</c><00:14:16.790><c> to</c><00:14:17.330><c> get</c><00:14:17.570><c> the</c>

00:14:17.740 --> 00:14:17.750 align:start position:0%
consumer to this trade wanted to get the
 

00:14:17.750 --> 00:14:19.540 align:start position:0%
consumer to this trade wanted to get the
object<00:14:17.900><c> produce</c><00:14:18.620><c> by</c><00:14:18.920><c> the</c><00:14:18.980><c> underlying</c>

00:14:19.540 --> 00:14:19.550 align:start position:0%
object produce by the underlying
 

00:14:19.550 --> 00:14:23.650 align:start position:0%
object produce by the underlying
splitter<00:14:20.360><c> rater</c><00:14:20.630><c> so</c><00:14:21.440><c> let</c><00:14:21.590><c> us</c><00:14:22.540><c> provide</c><00:14:23.540><c> the</c>

00:14:23.650 --> 00:14:23.660 align:start position:0%
splitter rater so let us provide the
 

00:14:23.660 --> 00:14:26.800 align:start position:0%
splitter rater so let us provide the
consumer<00:14:24.460><c> this</c><00:14:25.460><c> is</c><00:14:25.520><c> a</c><00:14:25.670><c> consumer</c><00:14:26.210><c> doesn't</c><00:14:26.750><c> do</c>

00:14:26.800 --> 00:14:26.810 align:start position:0%
consumer this is a consumer doesn't do
 

00:14:26.810 --> 00:14:30.730 align:start position:0%
consumer this is a consumer doesn't do
much<00:14:27.070><c> this</c><00:14:28.070><c> consumer</c><00:14:28.730><c> will</c><00:14:29.360><c> be</c><00:14:29.510><c> called</c><00:14:29.840><c> by</c><00:14:30.680><c> the</c>

00:14:30.730 --> 00:14:30.740 align:start position:0%
much this consumer will be called by the
 

00:14:30.740 --> 00:14:33.580 align:start position:0%
much this consumer will be called by the
underlying<00:14:31.190><c> splitter</c><00:14:31.880><c> rater</c><00:14:32.060><c> the</c><00:14:32.570><c> one</c><00:14:32.810><c> I</c><00:14:33.080><c> am</c>

00:14:33.580 --> 00:14:33.590 align:start position:0%
underlying splitter rater the one I am
 

00:14:33.590 --> 00:14:36.460 align:start position:0%
underlying splitter rater the one I am
built<00:14:34.250><c> and</c><00:14:34.550><c> created</c><00:14:35.120><c> on</c><00:14:35.270><c> and</c><00:14:35.510><c> this</c><00:14:36.200><c> object</c>

00:14:36.460 --> 00:14:36.470 align:start position:0%
built and created on and this object
 

00:14:36.470 --> 00:14:40.330 align:start position:0%
built and created on and this object
here<00:14:37.240><c> will</c><00:14:38.240><c> be</c><00:14:38.480><c> will</c><00:14:38.870><c> have</c><00:14:39.110><c> to</c><00:14:39.260><c> be</c><00:14:39.350><c> passed</c><00:14:39.590><c> to</c>

00:14:40.330 --> 00:14:40.340 align:start position:0%
here will be will have to be passed to
 

00:14:40.340 --> 00:14:42.400 align:start position:0%
here will be will have to be passed to
the<00:14:40.520><c> to</c><00:14:40.790><c> the</c><00:14:41.390><c> reference</c><00:14:41.780><c> pipeline</c><00:14:42.200><c> that</c><00:14:42.350><c> is</c>

00:14:42.400 --> 00:14:42.410 align:start position:0%
the to the reference pipeline that is
 

00:14:42.410 --> 00:14:44.530 align:start position:0%
the to the reference pipeline that is
calling<00:14:42.830><c> me</c><00:14:42.980><c> so</c><00:14:43.460><c> what</c><00:14:43.640><c> I</c><00:14:43.670><c> need</c><00:14:43.880><c> to</c><00:14:44.030><c> do</c><00:14:44.150><c> is</c><00:14:44.300><c> just</c>

00:14:44.530 --> 00:14:44.540 align:start position:0%
calling me so what I need to do is just
 

00:14:44.540 --> 00:14:48.520 align:start position:0%
calling me so what I need to do is just
call<00:14:44.810><c> action</c><00:14:45.410><c> dot</c><00:14:45.980><c> except</c><00:14:46.550><c> of</c><00:14:47.210><c> T</c><00:14:47.450><c> right</c><00:14:48.320><c> here</c>

00:14:48.520 --> 00:14:48.530 align:start position:0%
call action dot except of T right here
 

00:14:48.530 --> 00:14:51.580 align:start position:0%
call action dot except of T right here
I'm<00:14:49.040><c> not</c><00:14:49.190><c> doing</c><00:14:49.460><c> anything</c><00:14:49.670><c> I'm</c><00:14:50.090><c> just</c><00:14:50.590><c> calling</c>

00:14:51.580 --> 00:14:51.590 align:start position:0%
I'm not doing anything I'm just calling
 

00:14:51.590 --> 00:14:53.800 align:start position:0%
I'm not doing anything I'm just calling
the<00:14:51.740><c> underlying</c><00:14:52.100><c> splitter</c><00:14:52.490><c> ater</c><00:14:52.730><c> hey</c><00:14:53.120><c> do</c><00:14:53.690><c> you</c>

00:14:53.800 --> 00:14:53.810 align:start position:0%
the underlying splitter ater hey do you
 

00:14:53.810 --> 00:14:56.680 align:start position:0%
the underlying splitter ater hey do you
have<00:14:53.930><c> object</c><00:14:54.260><c> for</c><00:14:54.410><c> me</c><00:14:54.530><c> if</c><00:14:55.190><c> so</c><00:14:55.520><c> just</c><00:14:56.180><c> call</c><00:14:56.510><c> the</c>

00:14:56.680 --> 00:14:56.690 align:start position:0%
have object for me if so just call the
 

00:14:56.690 --> 00:14:59.680 align:start position:0%
have object for me if so just call the
consumer<00:14:57.020><c> I'm</c><00:14:57.350><c> giving</c><00:14:57.920><c> you</c><00:14:58.040><c> and</c><00:14:58.280><c> if</c><00:14:59.270><c> my</c>

00:14:59.680 --> 00:14:59.690 align:start position:0%
consumer I'm giving you and if my
 

00:14:59.690 --> 00:15:01.240 align:start position:0%
consumer I'm giving you and if my
consumer<00:15:00.200><c> is</c><00:15:00.290><c> called</c><00:15:00.560><c> then</c><00:15:00.770><c> I</c><00:15:00.860><c> take</c><00:15:01.100><c> the</c>

00:15:01.240 --> 00:15:01.250 align:start position:0%
consumer is called then I take the
 

00:15:01.250 --> 00:15:04.780 align:start position:0%
consumer is called then I take the
object<00:15:01.370><c> and</c><00:15:01.700><c> call</c><00:15:02.660><c> the</c><00:15:03.230><c> other</c><00:15:03.380><c> consumer</c><00:15:04.010><c> given</c>

00:15:04.780 --> 00:15:04.790 align:start position:0%
object and call the other consumer given
 

00:15:04.790 --> 00:15:07.420 align:start position:0%
object and call the other consumer given
to<00:15:04.940><c> me</c><00:15:05.060><c> with</c><00:15:05.540><c> that</c><00:15:05.750><c> object</c><00:15:05.900><c> and</c><00:15:06.320><c> this</c><00:15:07.010><c> is</c><00:15:07.220><c> the</c>

00:15:07.420 --> 00:15:07.430 align:start position:0%
to me with that object and this is the
 

00:15:07.430 --> 00:15:09.460 align:start position:0%
to me with that object and this is the
way<00:15:07.640><c> an</c><00:15:07.940><c> object</c><00:15:08.300><c> is</c><00:15:08.450><c> transmitted</c><00:15:09.140><c> from</c><00:15:09.170><c> a</c>

00:15:09.460 --> 00:15:09.470 align:start position:0%
way an object is transmitted from a
 

00:15:09.470 --> 00:15:11.920 align:start position:0%
way an object is transmitted from a
splitter<00:15:09.770><c> rater</c><00:15:10.040><c> to</c><00:15:10.340><c> a</c><00:15:10.370><c> stream</c><00:15:10.730><c> by</c><00:15:11.510><c> calling</c>

00:15:11.920 --> 00:15:11.930 align:start position:0%
splitter rater to a stream by calling
 

00:15:11.930 --> 00:15:15.250 align:start position:0%
splitter rater to a stream by calling
this<00:15:12.110><c> this</c><00:15:12.560><c> consumer</c><00:15:13.130><c> now</c><00:15:14.120><c> this</c><00:15:14.660><c> try</c><00:15:14.900><c> and</c><00:15:14.930><c> want</c>

00:15:15.250 --> 00:15:15.260 align:start position:0%
this this consumer now this try and want
 

00:15:15.260 --> 00:15:19.020 align:start position:0%
this this consumer now this try and want
method<00:15:15.680><c> method</c><00:15:16.070><c> is</c><00:15:16.370><c> going</c><00:15:16.790><c> to</c><00:15:16.880><c> return</c><00:15:17.030><c> a</c><00:15:17.300><c> brand</c>

00:15:19.020 --> 00:15:19.030 align:start position:0%
method method is going to return a brand
 

00:15:19.030 --> 00:15:23.260 align:start position:0%
method method is going to return a brand
I'm<00:15:20.030><c> going</c><00:15:20.210><c> to</c><00:15:20.330><c> call</c><00:15:20.480><c> it</c><00:15:20.570><c> as</c><00:15:20.750><c> mall</c><00:15:22.270><c> this</c>

00:15:23.260 --> 00:15:23.270 align:start position:0%
I'm going to call it as mall this
 

00:15:23.270 --> 00:15:24.970 align:start position:0%
I'm going to call it as mall this
boolean<00:15:23.630><c> will</c><00:15:23.810><c> be</c><00:15:23.930><c> true</c><00:15:24.200><c> if</c><00:15:24.410><c> they</c><00:15:24.620><c> are</c><00:15:24.710><c> more</c>

00:15:24.970 --> 00:15:24.980 align:start position:0%
boolean will be true if they are more
 

00:15:24.980 --> 00:15:25.870 align:start position:0%
boolean will be true if they are more
object<00:15:25.280><c> to</c><00:15:25.370><c> consume</c>

00:15:25.870 --> 00:15:25.880 align:start position:0%
object to consume
 

00:15:25.880 --> 00:15:28.480 align:start position:0%
object to consume
and<00:15:26.000><c> false</c><00:15:26.420><c> if</c><00:15:26.720><c> it's</c><00:15:26.959><c> not</c><00:15:27.139><c> the</c><00:15:27.230><c> case</c><00:15:27.410><c> so</c><00:15:27.889><c> since</c>

00:15:28.480 --> 00:15:28.490 align:start position:0%
and false if it's not the case so since
 

00:15:28.490 --> 00:15:30.639 align:start position:0%
and false if it's not the case so since
this<00:15:28.759><c> literature</c><00:15:29.360><c> is</c><00:15:29.540><c> not</c><00:15:29.569><c> doing</c><00:15:29.990><c> anything</c><00:15:30.259><c> I</c>

00:15:30.639 --> 00:15:30.649 align:start position:0%
this literature is not doing anything I
 

00:15:30.649 --> 00:15:34.629 align:start position:0%
this literature is not doing anything I
can<00:15:31.310><c> just</c><00:15:31.579><c> return</c><00:15:32.269><c> this</c><00:15:32.660><c> as</c><00:15:32.899><c> more</c><00:15:33.259><c> object</c><00:15:33.709><c> just</c>

00:15:34.629 --> 00:15:34.639 align:start position:0%
can just return this as more object just
 

00:15:34.639 --> 00:15:37.079 align:start position:0%
can just return this as more object just
to<00:15:34.819><c> to</c><00:15:35.540><c> complete</c><00:15:36.019><c> to</c><00:15:36.139><c> complete</c><00:15:36.170><c> the</c><00:15:36.500><c> process</c>

00:15:37.079 --> 00:15:37.089 align:start position:0%
to to complete to complete the process
 

00:15:37.089 --> 00:15:42.160 align:start position:0%
to to complete to complete the process
and<00:15:38.089><c> now</c><00:15:38.389><c> if</c><00:15:38.600><c> I</c><00:15:38.720><c> check</c><00:15:38.990><c> my</c><00:15:39.550><c> calling</c><00:15:40.550><c> code</c><00:15:41.170><c> this</c>

00:15:42.160 --> 00:15:42.170 align:start position:0%
and now if I check my calling code this
 

00:15:42.170 --> 00:15:45.400 align:start position:0%
and now if I check my calling code this
splitter<00:15:42.949><c> Reiter</c><00:15:43.220><c> I</c><00:15:43.579><c> can</c><00:15:44.000><c> just</c><00:15:44.870><c> provide</c><00:15:45.110><c> it</c>

00:15:45.400 --> 00:15:45.410 align:start position:0%
splitter Reiter I can just provide it
 

00:15:45.410 --> 00:15:49.090 align:start position:0%
splitter Reiter I can just provide it
here<00:15:45.800><c> so</c><00:15:46.699><c> this</c><00:15:46.880><c> stream</c><00:15:47.209><c> is</c><00:15:47.360><c> now</c><00:15:47.600><c> created</c><00:15:48.529><c> on</c><00:15:48.709><c> my</c>

00:15:49.090 --> 00:15:49.100 align:start position:0%
here so this stream is now created on my
 

00:15:49.100 --> 00:15:51.519 align:start position:0%
here so this stream is now created on my
operation<00:15:49.970><c> splitter</c><00:15:50.240><c> writer</c><00:15:50.449><c> and</c><00:15:50.750><c> I</c><00:15:51.290><c> should</c>

00:15:51.519 --> 00:15:51.529 align:start position:0%
operation splitter writer and I should
 

00:15:51.529 --> 00:15:53.259 align:start position:0%
operation splitter writer and I should
not<00:15:51.740><c> observe</c><00:15:51.949><c> any</c><00:15:52.190><c> kind</c><00:15:52.490><c> of</c><00:15:52.610><c> differences</c>

00:15:53.259 --> 00:15:53.269 align:start position:0%
not observe any kind of differences
 

00:15:53.269 --> 00:15:55.749 align:start position:0%
not observe any kind of differences
since<00:15:53.720><c> my</c><00:15:53.930><c> no</c><00:15:53.990><c> obliterator</c><00:15:54.769><c> is</c><00:15:55.220><c> not</c><00:15:55.490><c> doing</c>

00:15:55.749 --> 00:15:55.759 align:start position:0%
since my no obliterator is not doing
 

00:15:55.759 --> 00:15:59.259 align:start position:0%
since my no obliterator is not doing
anything<00:15:57.040><c> so</c><00:15:58.040><c> let</c><00:15:58.190><c> us</c><00:15:58.220><c> run</c><00:15:58.459><c> this</c><00:15:58.610><c> code</c><00:15:58.850><c> and</c>

00:15:59.259 --> 00:15:59.269 align:start position:0%
anything so let us run this code and
 

00:15:59.269 --> 00:16:03.519 align:start position:0%
anything so let us run this code and
indeed<00:15:59.899><c> I</c><00:16:01.089><c> have</c><00:16:02.089><c> the</c><00:16:02.269><c> exact</c><00:16:02.600><c> same</c><00:16:02.690><c> behavior</c><00:16:03.319><c> as</c>

00:16:03.519 --> 00:16:03.529 align:start position:0%
indeed I have the exact same behavior as
 

00:16:03.529 --> 00:16:05.860 align:start position:0%
indeed I have the exact same behavior as
previously<00:16:04.339><c> minor</c><00:16:04.730><c> op</c><00:16:04.970><c> splitter</c><00:16:05.300><c> it</c><00:16:05.509><c> is</c><00:16:05.720><c> not</c>

00:16:05.860 --> 00:16:05.870 align:start position:0%
previously minor op splitter it is not
 

00:16:05.870 --> 00:16:09.189 align:start position:0%
previously minor op splitter it is not
doing<00:16:06.110><c> anything</c><00:16:06.850><c> but</c><00:16:07.850><c> then</c><00:16:08.000><c> I</c><00:16:08.029><c> can</c><00:16:08.329><c> go</c><00:16:08.569><c> one</c>

00:16:09.189 --> 00:16:09.199 align:start position:0%
doing anything but then I can go one
 

00:16:09.199 --> 00:16:11.019 align:start position:0%
doing anything but then I can go one
step<00:16:09.470><c> further</c><00:16:09.649><c> by</c><00:16:09.800><c> creating</c><00:16:09.980><c> for</c><00:16:10.639><c> instance</c><00:16:10.910><c> a</c>

00:16:11.019 --> 00:16:11.029 align:start position:0%
step further by creating for instance a
 

00:16:11.029 --> 00:16:13.720 align:start position:0%
step further by creating for instance a
splitter<00:16:11.329><c> rater</c><00:16:11.569><c> that</c><00:16:11.899><c> is</c><00:16:12.019><c> going</c><00:16:12.290><c> to</c><00:16:12.500><c> to</c><00:16:13.160><c> block</c>

00:16:13.720 --> 00:16:13.730 align:start position:0%
splitter rater that is going to to block
 

00:16:13.730 --> 00:16:16.420 align:start position:0%
splitter rater that is going to to block
some<00:16:13.970><c> objects</c><00:16:14.420><c> not</c><00:16:15.199><c> transmitting</c><00:16:15.920><c> all</c><00:16:16.100><c> of</c>

00:16:16.420 --> 00:16:16.430 align:start position:0%
some objects not transmitting all of
 

00:16:16.430 --> 00:16:20.460 align:start position:0%
some objects not transmitting all of
them<00:16:16.810><c> suppose</c><00:16:17.810><c> we</c><00:16:18.069><c> create</c><00:16:19.069><c> a</c><00:16:19.100><c> filter</c><00:16:19.579><c> in</c>

00:16:20.460 --> 00:16:20.470 align:start position:0%
them suppose we create a filter in
 

00:16:20.470 --> 00:16:22.980 align:start position:0%
them suppose we create a filter in
splitter<00:16:21.470><c> rater</c>

00:16:22.980 --> 00:16:22.990 align:start position:0%
splitter rater
 

00:16:22.990 --> 00:16:27.100 align:start position:0%
splitter rater
of<00:16:23.990><c> string</c><00:16:24.410><c> now</c><00:16:24.589><c> let</c><00:16:25.190><c> us</c><00:16:25.220><c> collect</c><00:16:26.110><c> filtering</c>

00:16:27.100 --> 00:16:27.110 align:start position:0%
of string now let us collect filtering
 

00:16:27.110 --> 00:16:30.460 align:start position:0%
of string now let us collect filtering
splitter<00:16:27.380><c> rater</c><00:16:28.720><c> I'm</c><00:16:29.720><c> going</c><00:16:29.990><c> to</c><00:16:30.110><c> create</c><00:16:30.350><c> it</c>

00:16:30.460 --> 00:16:30.470 align:start position:0%
splitter rater I'm going to create it
 

00:16:30.470 --> 00:16:35.519 align:start position:0%
splitter rater I'm going to create it
just<00:16:31.360><c> as</c><00:16:32.360><c> the</c><00:16:32.569><c> previous</c><00:16:32.750><c> one</c><00:16:33.939><c> in</c><00:16:34.939><c> this</c><00:16:35.089><c> package</c>

00:16:35.519 --> 00:16:35.529 align:start position:0%
just as the previous one in this package
 

00:16:35.529 --> 00:16:41.079 align:start position:0%
just as the previous one in this package
I'm<00:16:36.529><c> going</c><00:16:36.860><c> to</c><00:16:37.009><c> implement</c><00:16:38.410><c> splitter</c><00:16:39.410><c> rater</c><00:16:40.089><c> of</c>

00:16:41.079 --> 00:16:41.089 align:start position:0%
I'm going to implement splitter rater of
 

00:16:41.089 --> 00:16:45.400 align:start position:0%
I'm going to implement splitter rater of
T<00:16:41.449><c> and</c><00:16:42.939><c> basically</c><00:16:43.939><c> I</c><00:16:44.420><c> will</c><00:16:44.630><c> just</c><00:16:45.199><c> have</c><00:16:45.350><c> the</c>

00:16:45.400 --> 00:16:45.410 align:start position:0%
T and basically I will just have the
 

00:16:45.410 --> 00:16:50.019 align:start position:0%
T and basically I will just have the
same<00:16:45.889><c> code</c><00:16:46.220><c> as</c><00:16:46.779><c> the</c><00:16:47.889><c> no</c><00:16:48.889><c> operation</c><00:16:49.550><c> splitter</c>

00:16:50.019 --> 00:16:50.029 align:start position:0%
same code as the no operation splitter
 

00:16:50.029 --> 00:16:52.150 align:start position:0%
same code as the no operation splitter
rater<00:16:50.350><c> so</c><00:16:51.350><c> I'm</c><00:16:51.410><c> just</c><00:16:51.589><c> going</c><00:16:51.769><c> to</c><00:16:51.829><c> copy</c><00:16:52.040><c> paste</c>

00:16:52.150 --> 00:16:52.160 align:start position:0%
rater so I'm just going to copy paste
 

00:16:52.160 --> 00:16:56.460 align:start position:0%
rater so I'm just going to copy paste
all<00:16:52.519><c> this</c><00:16:52.699><c> yes</c><00:16:53.269><c> this</c><00:16:53.509><c> is</c><00:16:53.660><c> a</c><00:16:53.689><c> consumer</c><00:16:54.910><c> alright</c>

00:16:56.460 --> 00:16:56.470 align:start position:0%
all this yes this is a consumer alright
 

00:16:56.470 --> 00:17:02.259 align:start position:0%
all this yes this is a consumer alright
I'm<00:16:57.470><c> going</c><00:16:57.829><c> to</c><00:16:58.209><c> by</c><00:16:59.209><c> the</c><00:16:59.269><c> way</c><00:16:59.509><c> also</c><00:17:00.970><c> copy</c><00:17:01.970><c> this</c>

00:17:02.259 --> 00:17:02.269 align:start position:0%
I'm going to by the way also copy this
 

00:17:02.269 --> 00:17:08.829 align:start position:0%
I'm going to by the way also copy this
the<00:17:03.019><c> constructor</c><00:17:06.909><c> this</c><00:17:07.909><c> is</c><00:17:08.120><c> the</c><00:17:08.209><c> constructor</c>

00:17:08.829 --> 00:17:08.839 align:start position:0%
the constructor this is the constructor
 

00:17:08.839 --> 00:17:11.020 align:start position:0%
the constructor this is the constructor
of<00:17:08.990><c> the</c><00:17:09.079><c> filtering</c><00:17:09.709><c> splitter</c><00:17:09.980><c> rater</c><00:17:10.220><c> and</c><00:17:10.520><c> I'm</c>

00:17:11.020 --> 00:17:11.030 align:start position:0%
of the filtering splitter rater and I'm
 

00:17:11.030 --> 00:17:13.029 align:start position:0%
of the filtering splitter rater and I'm
going<00:17:11.299><c> also</c><00:17:11.600><c> to</c><00:17:11.659><c> pass</c><00:17:11.990><c> a</c><00:17:12.049><c> predicate</c><00:17:12.709><c> as</c><00:17:12.980><c> a</c>

00:17:13.029 --> 00:17:13.039 align:start position:0%
going also to pass a predicate as a
 

00:17:13.039 --> 00:17:16.630 align:start position:0%
going also to pass a predicate as a
parameter<00:17:13.959><c> predicate</c><00:17:14.959><c> of</c><00:17:15.110><c> T</c><00:17:15.380><c> and</c><00:17:16.339><c> I'm</c><00:17:16.429><c> going</c>

00:17:16.630 --> 00:17:16.640 align:start position:0%
parameter predicate of T and I'm going
 

00:17:16.640 --> 00:17:20.980 align:start position:0%
parameter predicate of T and I'm going
to<00:17:16.699><c> call</c><00:17:17.000><c> filter</c><00:17:18.490><c> and</c><00:17:19.490><c> just</c><00:17:19.970><c> do</c><00:17:20.270><c> that</c><00:17:20.510><c> this</c>

00:17:20.980 --> 00:17:20.990 align:start position:0%
to call filter and just do that this
 

00:17:20.990 --> 00:17:23.230 align:start position:0%
to call filter and just do that this
filter

00:17:23.230 --> 00:17:23.240 align:start position:0%
filter
 

00:17:23.240 --> 00:17:30.890 align:start position:0%
filter
equals<00:17:24.240><c> filter</c><00:17:26.240><c> filter</c><00:17:29.030><c> create</c><00:17:30.030><c> the</c><00:17:30.600><c> field</c>

00:17:30.890 --> 00:17:30.900 align:start position:0%
equals filter filter create the field
 

00:17:30.900 --> 00:17:34.100 align:start position:0%
equals filter filter create the field
just<00:17:31.860><c> like</c><00:17:31.950><c> that</c><00:17:32.190><c> and</c><00:17:32.910><c> now</c><00:17:33.090><c> in</c><00:17:33.690><c> my</c><00:17:33.750><c> try</c>

00:17:34.100 --> 00:17:34.110 align:start position:0%
just like that and now in my try
 

00:17:34.110 --> 00:17:36.980 align:start position:0%
just like that and now in my try
advanced<00:17:34.410><c> method</c><00:17:34.770><c> what</c><00:17:35.220><c> I</c><00:17:35.250><c> want</c><00:17:35.580><c> to</c><00:17:35.700><c> do</c><00:17:35.850><c> is</c><00:17:36.090><c> say</c>

00:17:36.980 --> 00:17:36.990 align:start position:0%
advanced method what I want to do is say
 

00:17:36.990 --> 00:17:40.280 align:start position:0%
advanced method what I want to do is say
alright<00:17:37.530><c> I</c><00:17:38.070><c> see</c><00:17:38.910><c> objects</c><00:17:39.420><c> coming</c><00:17:39.600><c> out</c><00:17:39.810><c> from</c><00:17:40.110><c> my</c>

00:17:40.280 --> 00:17:40.290 align:start position:0%
alright I see objects coming out from my
 

00:17:40.290 --> 00:17:43.250 align:start position:0%
alright I see objects coming out from my
underlying<00:17:40.830><c> splitter</c><00:17:41.220><c> rater</c><00:17:41.600><c> as</c><00:17:42.600><c> long</c><00:17:42.930><c> as</c><00:17:43.110><c> I</c>

00:17:43.250 --> 00:17:43.260 align:start position:0%
underlying splitter rater as long as I
 

00:17:43.260 --> 00:17:45.380 align:start position:0%
underlying splitter rater as long as I
can<00:17:43.560><c> see</c><00:17:43.830><c> object</c><00:17:44.190><c> I</c><00:17:44.340><c> will</c><00:17:44.580><c> continue</c><00:17:44.880><c> to</c><00:17:45.030><c> return</c>

00:17:45.380 --> 00:17:45.390 align:start position:0%
can see object I will continue to return
 

00:17:45.390 --> 00:17:47.390 align:start position:0%
can see object I will continue to return
true<00:17:45.690><c> because</c><00:17:45.720><c> it</c><00:17:46.440><c> means</c><00:17:46.650><c> that</c><00:17:46.830><c> I</c><00:17:46.860><c> can</c><00:17:47.160><c> produce</c>

00:17:47.390 --> 00:17:47.400 align:start position:0%
true because it means that I can produce
 

00:17:47.400 --> 00:17:50.420 align:start position:0%
true because it means that I can produce
more<00:17:48.060><c> objects</c><00:17:48.450><c> but</c><00:17:49.440><c> I</c><00:17:49.710><c> do</c><00:17:49.860><c> not</c><00:17:50.040><c> want</c><00:17:50.250><c> to</c>

00:17:50.420 --> 00:17:50.430 align:start position:0%
more objects but I do not want to
 

00:17:50.430 --> 00:17:52.790 align:start position:0%
more objects but I do not want to
transmit<00:17:50.820><c> the</c><00:17:51.780><c> object</c><00:17:52.140><c> that</c><00:17:52.260><c> do</c><00:17:52.440><c> not</c><00:17:52.560><c> pass</c>

00:17:52.790 --> 00:17:52.800 align:start position:0%
transmit the object that do not pass
 

00:17:52.800 --> 00:17:54.410 align:start position:0%
transmit the object that do not pass
this<00:17:53.130><c> filter</c><00:17:53.790><c> here</c>

00:17:54.410 --> 00:17:54.420 align:start position:0%
this filter here
 

00:17:54.420 --> 00:18:02.240 align:start position:0%
this filter here
so<00:17:55.020><c> if</c><00:17:56.240><c> filter</c><00:17:57.240><c> the</c><00:17:57.870><c> test</c><00:17:58.490><c> of</c><00:17:59.490><c> T</c><00:18:00.110><c> is</c><00:18:01.110><c> true</c><00:18:01.350><c> then</c>

00:18:02.240 --> 00:18:02.250 align:start position:0%
so if filter the test of T is true then
 

00:18:02.250 --> 00:18:05.030 align:start position:0%
so if filter the test of T is true then
I<00:18:02.280><c> transmit</c><00:18:02.760><c> the</c><00:18:03.030><c> object</c><00:18:03.330><c> if</c><00:18:04.080><c> it</c><00:18:04.350><c> is</c><00:18:04.500><c> false</c>

00:18:05.030 --> 00:18:05.040 align:start position:0%
I transmit the object if it is false
 

00:18:05.040 --> 00:18:09.440 align:start position:0%
I transmit the object if it is false
I<00:18:05.070><c> do</c><00:18:05.310><c> not</c><00:18:05.700><c> transmit</c><00:18:06.090><c> the</c><00:18:06.330><c> object</c><00:18:06.860><c> right</c><00:18:08.450><c> let</c>

00:18:09.440 --> 00:18:09.450 align:start position:0%
I do not transmit the object right let
 

00:18:09.450 --> 00:18:11.200 align:start position:0%
I do not transmit the object right let
us<00:18:09.600><c> see</c><00:18:09.810><c> what</c><00:18:09.930><c> it</c><00:18:10.050><c> does</c>

00:18:11.200 --> 00:18:11.210 align:start position:0%
us see what it does
 

00:18:11.210 --> 00:18:15.040 align:start position:0%
us see what it does
so<00:18:12.210><c> this</c><00:18:12.420><c> filtering</c><00:18:12.840><c> splitter</c><00:18:13.200><c> rater</c><00:18:13.470><c> is</c>

00:18:15.040 --> 00:18:15.050 align:start position:0%
so this filtering splitter rater is
 

00:18:15.050 --> 00:18:20.420 align:start position:0%
so this filtering splitter rater is
Cribs<00:18:16.190><c> is</c><00:18:17.190><c> created</c><00:18:18.410><c> let's</c><00:18:19.410><c> see</c><00:18:19.680><c> an</c><00:18:19.800><c> in</c><00:18:19.950><c> on</c><00:18:20.250><c> the</c>

00:18:20.420 --> 00:18:20.430 align:start position:0%
Cribs is created let's see an in on the
 

00:18:20.430 --> 00:18:23.150 align:start position:0%
Cribs is created let's see an in on the
know<00:18:20.700><c> operation</c><00:18:21.510><c> splitter</c><00:18:21.810><c> rater</c><00:18:22.080><c> it</c><00:18:22.770><c> needs</c><00:18:23.040><c> a</c>

00:18:23.150 --> 00:18:23.160 align:start position:0%
know operation splitter rater it needs a
 

00:18:23.160 --> 00:18:24.560 align:start position:0%
know operation splitter rater it needs a
predicate<00:18:23.580><c> of</c><00:18:23.760><c> string</c>

00:18:24.560 --> 00:18:24.570 align:start position:0%
predicate of string
 

00:18:24.570 --> 00:18:28.610 align:start position:0%
predicate of string
let<00:18:25.200><c> us</c><00:18:25.320><c> select</c><00:18:25.560><c> only</c><00:18:26.180><c> the</c><00:18:27.180><c> strings</c><00:18:27.620><c> with</c>

00:18:28.610 --> 00:18:28.620 align:start position:0%
let us select only the strings with
 

00:18:28.620 --> 00:18:37.970 align:start position:0%
let us select only the strings with
length<00:18:28.890><c> 3</c><00:18:29.760><c> and</c><00:18:30.060><c> run</c><00:18:30.900><c> the</c><00:18:31.020><c> code</c><00:18:36.320><c> okay</c><00:18:37.320><c> so</c><00:18:37.710><c> I</c><00:18:37.740><c> need</c>

00:18:37.970 --> 00:18:37.980 align:start position:0%
length 3 and run the code okay so I need
 

00:18:37.980 --> 00:18:40.400 align:start position:0%
length 3 and run the code okay so I need
to<00:18:38.190><c> create</c><00:18:39.030><c> pass</c><00:18:39.420><c> my</c><00:18:39.630><c> stream</c><00:18:39.930><c> here</c><00:18:40.200><c> on</c><00:18:40.290><c> this</c>

00:18:40.400 --> 00:18:40.410 align:start position:0%
to create pass my stream here on this
 

00:18:40.410 --> 00:18:42.880 align:start position:0%
to create pass my stream here on this
filter<00:18:40.680><c> ring</c><00:18:40.950><c> of</c><00:18:41.520><c> course</c><00:18:41.790><c> Peter</c><00:18:42.090><c> ater</c>

00:18:42.880 --> 00:18:42.890 align:start position:0%
filter ring of course Peter ater
 

00:18:42.890 --> 00:18:45.920 align:start position:0%
filter ring of course Peter ater
and<00:18:43.890><c> you</c><00:18:44.040><c> see</c><00:18:44.220><c> that</c><00:18:44.400><c> this</c><00:18:44.670><c> time</c><00:18:44.970><c> only</c><00:18:45.630><c> the</c>

00:18:45.920 --> 00:18:45.930 align:start position:0%
and you see that this time only the
 

00:18:45.930 --> 00:18:48.770 align:start position:0%
and you see that this time only the
objects<00:18:46.530><c> with</c><00:18:46.950><c> 3</c><00:18:47.280><c> characters</c><00:18:47.940><c> have</c><00:18:48.240><c> been</c>

00:18:48.770 --> 00:18:48.780 align:start position:0%
objects with 3 characters have been
 

00:18:48.780 --> 00:18:50.960 align:start position:0%
objects with 3 characters have been
transmitted<00:18:49.380><c> to</c><00:18:49.620><c> the</c><00:18:50.130><c> to</c><00:18:50.400><c> do</c><00:18:50.580><c> to</c><00:18:50.820><c> the</c>

00:18:50.960 --> 00:18:50.970 align:start position:0%
transmitted to the to do to the
 

00:18:50.970 --> 00:18:52.940 align:start position:0%
transmitted to the to do to the
downstream<00:18:51.390><c> we</c><00:18:51.960><c> created</c><00:18:52.380><c> on</c><00:18:52.500><c> the</c><00:18:52.620><c> filtering</c>

00:18:52.940 --> 00:18:52.950 align:start position:0%
downstream we created on the filtering
 

00:18:52.950 --> 00:18:56.990 align:start position:0%
downstream we created on the filtering
splitter<00:18:53.310><c> rater</c><00:18:53.750><c> so</c><00:18:54.750><c> this</c><00:18:55.230><c> you</c><00:18:56.040><c> see</c><00:18:56.220><c> that</c><00:18:56.430><c> if</c><00:18:56.640><c> I</c>

00:18:56.990 --> 00:18:57.000 align:start position:0%
splitter rater so this you see that if I
 

00:18:57.000 --> 00:18:58.910 align:start position:0%
splitter rater so this you see that if I
show<00:18:57.240><c> this</c><00:18:57.390><c> example</c><00:18:57.600><c> to</c><00:18:58.020><c> you</c><00:18:58.140><c> it</c><00:18:58.350><c> just</c><00:18:58.500><c> to</c><00:18:58.710><c> show</c>

00:18:58.910 --> 00:18:58.920 align:start position:0%
show this example to you it just to show
 

00:18:58.920 --> 00:19:02.030 align:start position:0%
show this example to you it just to show
you<00:18:58.980><c> that</c><00:18:59.100><c> it's</c><00:18:59.910><c> not</c><00:19:00.150><c> because</c><00:19:00.600><c> I</c><00:19:00.870><c> am</c><00:19:01.710><c> returning</c>

00:19:02.030 --> 00:19:02.040 align:start position:0%
you that it's not because I am returning
 

00:19:02.040 --> 00:19:04.640 align:start position:0%
you that it's not because I am returning
true<00:19:02.460><c> that</c><00:19:03.240><c> I</c><00:19:03.270><c> need</c><00:19:03.570><c> to</c><00:19:03.690><c> transmit</c><00:19:04.020><c> an</c><00:19:04.290><c> object</c>

00:19:04.640 --> 00:19:04.650 align:start position:0%
true that I need to transmit an object
 

00:19:04.650 --> 00:19:07.640 align:start position:0%
true that I need to transmit an object
to<00:19:05.160><c> the</c><00:19:05.280><c> end</c><00:19:05.430><c> to</c><00:19:05.670><c> do</c><00:19:05.820><c> to</c><00:19:06.000><c> the</c><00:19:06.120><c> downstream</c><00:19:06.650><c> to</c>

00:19:07.640 --> 00:19:07.650 align:start position:0%
to the end to do to the downstream to
 

00:19:07.650 --> 00:19:10.850 align:start position:0%
to the end to do to the downstream to
the<00:19:07.680><c> downstream</c><00:19:08.130><c> splitter</c><00:19:08.550><c> ater</c><00:19:08.730><c> right</c><00:19:09.710><c> if</c><00:19:10.710><c> I</c>

00:19:10.850 --> 00:19:10.860 align:start position:0%
the downstream splitter ater right if I
 

00:19:10.860 --> 00:19:12.890 align:start position:0%
the downstream splitter ater right if I
return<00:19:11.160><c> true</c><00:19:11.400><c> it</c><00:19:11.610><c> just</c><00:19:11.880><c> mean</c><00:19:12.090><c> that</c><00:19:12.300><c> I</c><00:19:12.510><c> have</c>

00:19:12.890 --> 00:19:12.900 align:start position:0%
return true it just mean that I have
 

00:19:12.900 --> 00:19:15.590 align:start position:0%
return true it just mean that I have
more<00:19:13.140><c> object</c><00:19:13.440><c> to</c><00:19:13.860><c> send</c><00:19:14.100><c> but</c><00:19:14.610><c> maybe</c><00:19:15.030><c> not</c><00:19:15.330><c> now</c>

00:19:15.590 --> 00:19:15.600 align:start position:0%
more object to send but maybe not now
 

00:19:15.600 --> 00:19:18.350 align:start position:0%
more object to send but maybe not now
maybe<00:19:15.630><c> maybe</c><00:19:16.410><c> later</c><00:19:16.770><c> and</c><00:19:17.700><c> if</c><00:19:17.820><c> you</c><00:19:17.940><c> examine</c><00:19:18.150><c> the</c>

00:19:18.350 --> 00:19:18.360 align:start position:0%
maybe maybe later and if you examine the
 

00:19:18.360 --> 00:19:20.450 align:start position:0%
maybe maybe later and if you examine the
stream<00:19:18.690><c> API</c><00:19:18.840><c> there</c><00:19:19.770><c> are</c><00:19:19.860><c> at</c><00:19:20.010><c> least</c><00:19:20.070><c> two</c>

00:19:20.450 --> 00:19:20.460 align:start position:0%
stream API there are at least two
 

00:19:20.460 --> 00:19:22.760 align:start position:0%
stream API there are at least two
examples<00:19:20.580><c> that</c><00:19:21.210><c> works</c><00:19:21.480><c> like</c><00:19:21.690><c> that</c><00:19:21.720><c> the</c><00:19:22.530><c> first</c>

00:19:22.760 --> 00:19:22.770 align:start position:0%
examples that works like that the first
 

00:19:22.770 --> 00:19:25.010 align:start position:0%
examples that works like that the first
one<00:19:22.950><c> the</c><00:19:23.490><c> most</c><00:19:23.520><c> obvious</c><00:19:24.090><c> one</c><00:19:24.270><c> is</c><00:19:24.450><c> the</c><00:19:24.480><c> sorted</c>

00:19:25.010 --> 00:19:25.020 align:start position:0%
one the most obvious one is the sorted
 

00:19:25.020 --> 00:19:28.070 align:start position:0%
one the most obvious one is the sorted
example<00:19:25.470><c> to</c><00:19:26.040><c> sort</c><00:19:26.340><c> a</c><00:19:26.670><c> set</c><00:19:27.330><c> of</c><00:19:27.480><c> objects</c><00:19:27.870><c> you</c>

00:19:28.070 --> 00:19:28.080 align:start position:0%
example to sort a set of objects you
 

00:19:28.080 --> 00:19:30.530 align:start position:0%
example to sort a set of objects you
need<00:19:28.200><c> to</c><00:19:28.440><c> see</c><00:19:28.710><c> them</c><00:19:28.980><c> all</c><00:19:29.130><c> you</c><00:19:29.610><c> cannot</c><00:19:29.880><c> begin</c><00:19:30.360><c> to</c>

00:19:30.530 --> 00:19:30.540 align:start position:0%
need to see them all you cannot begin to
 

00:19:30.540 --> 00:19:33.980 align:start position:0%
need to see them all you cannot begin to
to<00:19:31.170><c> produce</c><00:19:31.380><c> object</c><00:19:31.920><c> until</c><00:19:32.850><c> you</c><00:19:33.060><c> have</c><00:19:33.300><c> seen</c>

00:19:33.980 --> 00:19:33.990 align:start position:0%
to produce object until you have seen
 

00:19:33.990 --> 00:19:35.779 align:start position:0%
to produce object until you have seen
all<00:19:34.230><c> the</c><00:19:34.410><c> objects</c><00:19:34.740><c> produced</c><00:19:35.040><c> by</c><00:19:35.190><c> this</c><00:19:35.250><c> that's</c>

00:19:35.779 --> 00:19:35.789 align:start position:0%
all the objects produced by this that's
 

00:19:35.789 --> 00:19:38.389 align:start position:0%
all the objects produced by this that's
dreama<00:19:36.090><c> so</c><00:19:36.299><c> this</c><00:19:36.629><c> accept</c><00:19:37.200><c> method</c><00:19:37.590><c> will</c><00:19:38.129><c> keep</c>

00:19:38.389 --> 00:19:38.399 align:start position:0%
dreama so this accept method will keep
 

00:19:38.399 --> 00:19:40.039 align:start position:0%
dreama so this accept method will keep
answering<00:19:38.729><c> true</c><00:19:39.450><c> without</c><00:19:39.809><c> producing</c>

00:19:40.039 --> 00:19:40.049 align:start position:0%
answering true without producing
 

00:19:40.049 --> 00:19:40.879 align:start position:0%
answering true without producing
anything

00:19:40.879 --> 00:19:40.889 align:start position:0%
anything
 

00:19:40.889 --> 00:19:43.399 align:start position:0%
anything
and<00:19:41.039><c> once</c><00:19:41.729><c> the</c><00:19:42.210><c> the</c><00:19:42.239><c> up</c><00:19:42.570><c> streamer</c><00:19:42.960><c> is</c>

00:19:43.399 --> 00:19:43.409 align:start position:0%
and once the the up streamer is
 

00:19:43.409 --> 00:19:45.289 align:start position:0%
and once the the up streamer is
completely<00:19:43.979><c> consumed</c><00:19:44.429><c> then</c><00:19:44.700><c> the</c><00:19:44.909><c> sorting</c>

00:19:45.289 --> 00:19:45.299 align:start position:0%
completely consumed then the sorting
 

00:19:45.299 --> 00:19:47.269 align:start position:0%
completely consumed then the sorting
will<00:19:45.479><c> occur</c><00:19:45.779><c> and</c><00:19:46.019><c> then</c><00:19:46.350><c> the</c><00:19:46.529><c> produce</c><00:19:46.859><c> the</c><00:19:47.249><c> the</c>

00:19:47.269 --> 00:19:47.279 align:start position:0%
will occur and then the produce the the
 

00:19:47.279 --> 00:19:49.849 align:start position:0%
will occur and then the produce the the
transmission<00:19:48.029><c> of</c><00:19:48.210><c> the</c><00:19:48.299><c> object</c><00:19:48.629><c> will</c><00:19:49.409><c> be</c><00:19:49.559><c> will</c>

00:19:49.849 --> 00:19:49.859 align:start position:0%
transmission of the object will be will
 

00:19:49.859 --> 00:19:52.519 align:start position:0%
transmission of the object will be will
be<00:19:49.979><c> done</c><00:19:50.159><c> and</c><00:19:50.700><c> the</c><00:19:51.479><c> second</c><00:19:51.809><c> example</c><00:19:52.080><c> the</c>

00:19:52.519 --> 00:19:52.529 align:start position:0%
be done and the second example the
 

00:19:52.529 --> 00:19:55.129 align:start position:0%
be done and the second example the
distinct<00:19:53.009><c> also</c><00:19:53.549><c> these</c><00:19:54.179><c> things</c><00:19:54.450><c> were</c><00:19:54.690><c> works</c>

00:19:55.129 --> 00:19:55.139 align:start position:0%
distinct also these things were works
 

00:19:55.139 --> 00:19:58.239 align:start position:0%
distinct also these things were works
with<00:19:55.710><c> the</c><00:19:55.830><c> mental</c><00:19:56.269><c> index</c><00:19:57.269><c> if</c><00:19:57.720><c> an</c><00:19:57.869><c> object</c>

00:19:58.239 --> 00:19:58.249 align:start position:0%
with the mental index if an object
 

00:19:58.249 --> 00:19:59.419 align:start position:0%
with the mental index if an object
resina

00:19:59.419 --> 00:19:59.429 align:start position:0%
resina
 

00:19:59.429 --> 00:20:01.460 align:start position:0%
resina
do<00:19:59.820><c> we</c><00:20:00.059><c> have</c><00:20:00.149><c> already</c><00:20:00.330><c> seen</c><00:20:00.840><c> the</c><00:20:00.989><c> subject</c><00:20:01.350><c> if</c>

00:20:01.460 --> 00:20:01.470 align:start position:0%
do we have already seen the subject if
 

00:20:01.470 --> 00:20:03.710 align:start position:0%
do we have already seen the subject if
not<00:20:01.710><c> then</c><00:20:02.009><c> I</c><00:20:02.100><c> transmit</c><00:20:02.519><c> it</c><00:20:02.639><c> if</c><00:20:03.119><c> I</c><00:20:03.299><c> did</c><00:20:03.509><c> then</c>

00:20:03.710 --> 00:20:03.720 align:start position:0%
not then I transmit it if I did then
 

00:20:03.720 --> 00:20:06.109 align:start position:0%
not then I transmit it if I did then
unblock<00:20:04.109><c> it</c><00:20:04.139><c> it's</c><00:20:04.799><c> kind</c><00:20:05.129><c> of</c><00:20:05.249><c> adaptive</c>

00:20:06.109 --> 00:20:06.119 align:start position:0%
unblock it it's kind of adaptive
 

00:20:06.119 --> 00:20:09.289 align:start position:0%
unblock it it's kind of adaptive
filtering<00:20:06.690><c> as</c><00:20:07.590><c> you</c><00:20:07.799><c> as</c><00:20:07.979><c> in</c><00:20:08.159><c> this</c><00:20:08.279><c> case</c><00:20:08.340><c> so</c><00:20:09.090><c> in</c>

00:20:09.289 --> 00:20:09.299 align:start position:0%
filtering as you as in this case so in
 

00:20:09.299 --> 00:20:11.359 align:start position:0%
filtering as you as in this case so in
fact<00:20:09.479><c> this</c><00:20:09.659><c> is</c><00:20:09.720><c> a</c><00:20:09.840><c> very</c><00:20:10.109><c> classical</c><00:20:10.619><c> way</c><00:20:10.830><c> of</c>

00:20:11.359 --> 00:20:11.369 align:start position:0%
fact this is a very classical way of
 

00:20:11.369 --> 00:20:14.779 align:start position:0%
fact this is a very classical way of
using<00:20:11.639><c> this</c><00:20:11.999><c> splitter</c><00:20:12.779><c> Reiter</c><00:20:13.580><c> Reiter</c><00:20:14.580><c> Reiter</c>

00:20:14.779 --> 00:20:14.789 align:start position:0%
using this splitter Reiter Reiter Reiter
 

00:20:14.789 --> 00:20:19.869 align:start position:0%
using this splitter Reiter Reiter Reiter
stuff<00:20:15.950><c> ASP</c><00:20:16.950><c> literature</c><00:20:17.489><c> can</c><00:20:17.789><c> also</c><00:20:18.059><c> be</c><00:20:18.479><c> used</c><00:20:18.749><c> to</c>

00:20:19.869 --> 00:20:19.879 align:start position:0%
stuff ASP literature can also be used to
 

00:20:19.879 --> 00:20:24.169 align:start position:0%
stuff ASP literature can also be used to
modify<00:20:20.879><c> the</c><00:20:21.409><c> object</c><00:20:22.409><c> transmitted</c><00:20:23.129><c> let</c><00:20:24.029><c> us</c>

00:20:24.169 --> 00:20:24.179 align:start position:0%
modify the object transmitted let us
 

00:20:24.179 --> 00:20:34.219 align:start position:0%
modify the object transmitted let us
create<00:20:24.840><c> a</c><00:20:25.879><c> mapping</c><00:20:28.789><c> splitter</c><00:20:29.789><c> rater</c><00:20:33.229><c> mapping</c>

00:20:34.219 --> 00:20:34.229 align:start position:0%
create a mapping splitter rater mapping
 

00:20:34.229 --> 00:20:39.229 align:start position:0%
create a mapping splitter rater mapping
split<00:20:34.499><c> a</c><00:20:34.529><c> bit</c><00:20:34.739><c> of</c><00:20:34.919><c> string</c><00:20:37.519><c> I'm</c><00:20:38.519><c> going</c><00:20:38.849><c> to</c><00:20:38.999><c> keep</c>

00:20:39.229 --> 00:20:39.239 align:start position:0%
split a bit of string I'm going to keep
 

00:20:39.239 --> 00:20:42.349 align:start position:0%
split a bit of string I'm going to keep
it<00:20:39.389><c> simple</c><00:20:39.840><c> so</c><00:20:40.700><c> I'm</c><00:20:41.700><c> going</c><00:20:41.909><c> to</c><00:20:42.029><c> create</c><00:20:42.210><c> the</c>

00:20:42.349 --> 00:20:42.359 align:start position:0%
it simple so I'm going to create the
 

00:20:42.359 --> 00:20:45.229 align:start position:0%
it simple so I'm going to create the
class<00:20:43.070><c> once</c><00:20:44.070><c> again</c><00:20:44.369><c> in</c><00:20:44.519><c> the</c><00:20:44.639><c> splitter</c><00:20:44.940><c> it's</c><00:20:45.179><c> a</c>

00:20:45.229 --> 00:20:45.239 align:start position:0%
class once again in the splitter it's a
 

00:20:45.239 --> 00:20:51.560 align:start position:0%
class once again in the splitter it's a
package<00:20:47.389><c> I'm</c><00:20:48.389><c> going</c><00:20:48.720><c> to</c><00:20:49.129><c> yeah</c><00:20:50.359><c> copy-paste</c><00:20:51.359><c> all</c>

00:20:51.560 --> 00:20:51.570 align:start position:0%
package I'm going to yeah copy-paste all
 

00:20:51.570 --> 00:20:59.859 align:start position:0%
package I'm going to yeah copy-paste all
this<00:20:51.720><c> in</c><00:20:51.929><c> fact</c><00:20:55.940><c> all</c><00:20:56.940><c> right</c><00:20:57.440><c> not</c><00:20:58.440><c> this</c><00:20:58.590><c> one</c>

00:20:59.859 --> 00:20:59.869 align:start position:0%
this in fact all right not this one
 

00:20:59.869 --> 00:21:03.950 align:start position:0%
this in fact all right not this one
great<00:21:01.009><c> so</c><00:21:02.009><c> this</c><00:21:02.159><c> is</c><00:21:02.369><c> a</c><00:21:02.399><c> mapping</c><00:21:02.759><c> flip</c><00:21:03.179><c> iterator</c>

00:21:03.950 --> 00:21:03.960 align:start position:0%
great so this is a mapping flip iterator
 

00:21:03.960 --> 00:21:06.589 align:start position:0%
great so this is a mapping flip iterator
and<00:21:04.289><c> in</c><00:21:04.499><c> fact</c><00:21:04.830><c> the</c><00:21:05.669><c> second</c><00:21:06.059><c> element</c><00:21:06.210><c> is</c><00:21:06.479><c> not</c>

00:21:06.589 --> 00:21:06.599 align:start position:0%
and in fact the second element is not
 

00:21:06.599 --> 00:21:08.930 align:start position:0%
and in fact the second element is not
going<00:21:06.840><c> to</c><00:21:06.960><c> be</c><00:21:07.080><c> a</c><00:21:07.109><c> predicate</c><00:21:07.619><c> but</c><00:21:07.979><c> let's</c><00:21:08.729><c> say</c><00:21:08.909><c> a</c>

00:21:08.930 --> 00:21:08.940 align:start position:0%
going to be a predicate but let's say a
 

00:21:08.940 --> 00:21:11.570 align:start position:0%
going to be a predicate but let's say a
unary<00:21:09.330><c> operator</c><00:21:09.869><c> which</c><00:21:10.830><c> I'm</c><00:21:11.009><c> going</c><00:21:11.190><c> to</c><00:21:11.340><c> call</c><00:21:11.549><c> a</c>

00:21:11.570 --> 00:21:11.580 align:start position:0%
unary operator which I'm going to call a
 

00:21:11.580 --> 00:21:17.869 align:start position:0%
unary operator which I'm going to call a
mapper<00:21:11.849><c> and</c><00:21:13.340><c> this</c><00:21:14.340><c> mapper</c><00:21:16.009><c> will</c><00:21:17.009><c> be</c><00:21:17.190><c> a</c><00:21:17.399><c> mapper</c>

00:21:17.869 --> 00:21:17.879 align:start position:0%
mapper and this mapper will be a mapper
 

00:21:17.879 --> 00:21:20.379 align:start position:0%
mapper and this mapper will be a mapper
so<00:21:18.090><c> I</c><00:21:18.179><c> need</c><00:21:18.330><c> to</c><00:21:18.479><c> change</c><00:21:18.809><c> this</c><00:21:19.289><c> one</c><00:21:19.559><c> again</c><00:21:19.979><c> so</c>

00:21:20.379 --> 00:21:20.389 align:start position:0%
so I need to change this one again so
 

00:21:20.389 --> 00:21:26.710 align:start position:0%
so I need to change this one again so
now<00:21:21.389><c> what</c><00:21:21.629><c> I'm</c><00:21:21.720><c> going</c><00:21:21.899><c> to</c><00:21:21.989><c> do</c><00:21:23.210><c> is</c><00:21:24.210><c> in</c><00:21:24.509><c> fact</c><00:21:24.809><c> oops</c>

00:21:26.710 --> 00:21:26.720 align:start position:0%
now what I'm going to do is in fact oops
 

00:21:26.720 --> 00:21:31.909 align:start position:0%
now what I'm going to do is in fact oops
is<00:21:27.720><c> in</c><00:21:27.989><c> fact</c><00:21:29.179><c> remap</c><00:21:30.179><c> this</c><00:21:30.659><c> T</c><00:21:30.899><c> object</c><00:21:31.229><c> using</c>

00:21:31.909 --> 00:21:31.919 align:start position:0%
is in fact remap this T object using
 

00:21:31.919 --> 00:21:36.080 align:start position:0%
is in fact remap this T object using
this<00:21:32.039><c> mapper</c><00:21:32.340><c> this</c><00:21:32.789><c> is</c><00:21:32.940><c> my</c><00:21:33.090><c> map</c><00:21:34.940><c> using</c><00:21:35.940><c> these</c>

00:21:36.080 --> 00:21:36.090 align:start position:0%
this mapper this is my map using these
 

00:21:36.090 --> 00:21:39.229 align:start position:0%
this mapper this is my map using these
mappers<00:21:36.359><c> I'm</c><00:21:36.690><c> just</c><00:21:36.960><c> going</c><00:21:37.169><c> to</c><00:21:37.759><c> call</c><00:21:38.759><c> mapper</c>

00:21:39.229 --> 00:21:39.239 align:start position:0%
mappers I'm just going to call mapper
 

00:21:39.239 --> 00:21:44.779 align:start position:0%
mappers I'm just going to call mapper
dot<00:21:39.570><c> apply</c><00:21:40.019><c> of</c><00:21:40.320><c> T</c><00:21:41.389><c> that</c><00:21:42.389><c> is</c><00:21:42.450><c> I</c><00:21:42.809><c> am</c><00:21:43.609><c> changing</c><00:21:44.609><c> the</c>

00:21:44.779 --> 00:21:44.789 align:start position:0%
dot apply of T that is I am changing the
 

00:21:44.789 --> 00:21:46.519 align:start position:0%
dot apply of T that is I am changing the
nature<00:21:44.970><c> of</c><00:21:45.119><c> the</c><00:21:45.239><c> subject</c><00:21:45.690><c> I</c><00:21:45.899><c> am</c><00:21:46.109><c> not</c><00:21:46.349><c> changing</c>

00:21:46.519 --> 00:21:46.529 align:start position:0%
nature of the subject I am not changing
 

00:21:46.529 --> 00:21:48.710 align:start position:0%
nature of the subject I am not changing
the<00:21:46.889><c> type</c><00:21:47.099><c> but</c><00:21:47.429><c> I</c><00:21:47.489><c> could</c><00:21:47.789><c> change</c><00:21:47.820><c> the</c><00:21:48.179><c> type</c><00:21:48.359><c> as</c>

00:21:48.710 --> 00:21:48.720 align:start position:0%
the type but I could change the type as
 

00:21:48.720 --> 00:21:49.190 align:start position:0%
the type but I could change the type as
well

00:21:49.190 --> 00:21:49.200 align:start position:0%
well
 

00:21:49.200 --> 00:21:51.650 align:start position:0%
well
and<00:21:49.290><c> transmit</c><00:21:50.250><c> this</c><00:21:50.430><c> and</c><00:21:50.940><c> transmit</c><00:21:51.510><c> this</c>

00:21:51.650 --> 00:21:51.660 align:start position:0%
and transmit this and transmit this
 

00:21:51.660 --> 00:21:54.890 align:start position:0%
and transmit this and transmit this
transform<00:21:52.200><c> object</c><00:21:52.700><c> to</c><00:21:53.700><c> to</c><00:21:53.850><c> my</c><00:21:54.000><c> to</c><00:21:54.060><c> my</c><00:21:54.240><c> to</c><00:21:54.780><c> my</c>

00:21:54.890 --> 00:21:54.900 align:start position:0%
transform object to to my to my to my
 

00:21:54.900 --> 00:22:00.380 align:start position:0%
transform object to to my to my to my
downstream<00:21:56.540><c> so</c><00:21:57.650><c> let</c><00:21:58.650><c> us</c><00:21:58.940><c> work</c><00:21:59.940><c> that</c><00:22:00.180><c> on</c>

00:22:00.380 --> 00:22:00.390 align:start position:0%
downstream so let us work that on
 

00:22:00.390 --> 00:22:03.140 align:start position:0%
downstream so let us work that on
example<00:22:00.930><c> I'm</c><00:22:01.740><c> going</c><00:22:02.070><c> to</c><00:22:02.250><c> take</c><00:22:02.460><c> my</c><00:22:02.640><c> filtering</c>

00:22:03.140 --> 00:22:03.150 align:start position:0%
example I'm going to take my filtering
 

00:22:03.150 --> 00:22:06.460 align:start position:0%
example I'm going to take my filtering
splitter<00:22:03.450><c> rater</c><00:22:03.720><c> pass</c><00:22:04.650><c> for</c><00:22:04.950><c> instance</c><00:22:05.340><c> strings</c>

00:22:06.460 --> 00:22:06.470 align:start position:0%
splitter rater pass for instance strings
 

00:22:06.470 --> 00:22:11.690 align:start position:0%
splitter rater pass for instance strings
to<00:22:07.470><c> uppercase</c><00:22:08.960><c> like</c><00:22:09.960><c> that</c><00:22:10.460><c> this</c><00:22:11.460><c> is</c><00:22:11.670><c> my</c>

00:22:11.690 --> 00:22:11.700 align:start position:0%
to uppercase like that this is my
 

00:22:11.700 --> 00:22:14.510 align:start position:0%
to uppercase like that this is my
mapping<00:22:12.210><c> splitter</c><00:22:12.660><c> rater</c><00:22:12.930><c> and</c><00:22:13.230><c> then</c><00:22:14.010><c> on</c><00:22:14.250><c> this</c>

00:22:14.510 --> 00:22:14.520 align:start position:0%
mapping splitter rater and then on this
 

00:22:14.520 --> 00:22:15.200 align:start position:0%
mapping splitter rater and then on this
little<00:22:14.790><c> rater</c>

00:22:15.200 --> 00:22:15.210 align:start position:0%
little rater
 

00:22:15.210 --> 00:22:17.930 align:start position:0%
little rater
I<00:22:15.390><c> create</c><00:22:16.290><c> a</c><00:22:16.350><c> stream</c><00:22:16.770><c> and</c><00:22:17.040><c> see</c><00:22:17.430><c> what</c><00:22:17.580><c> it</c><00:22:17.700><c> gives</c>

00:22:17.930 --> 00:22:17.940 align:start position:0%
I create a stream and see what it gives
 

00:22:17.940 --> 00:22:21.470 align:start position:0%
I create a stream and see what it gives
and<00:22:18.500><c> you</c><00:22:19.500><c> see</c><00:22:19.710><c> that</c><00:22:19.890><c> both</c><00:22:20.400><c> the</c><00:22:20.850><c> filtering</c><00:22:21.180><c> and</c>

00:22:21.470 --> 00:22:21.480 align:start position:0%
and you see that both the filtering and
 

00:22:21.480 --> 00:22:24.250 align:start position:0%
and you see that both the filtering and
the<00:22:21.870><c> mapping</c><00:22:22.080><c> have</c><00:22:22.470><c> been</c><00:22:22.770><c> applied</c><00:22:23.070><c> that</c><00:22:23.850><c> is</c>

00:22:24.250 --> 00:22:24.260 align:start position:0%
the mapping have been applied that is
 

00:22:24.260 --> 00:22:26.960 align:start position:0%
the mapping have been applied that is
I've<00:22:25.260><c> just</c><00:22:25.650><c> changed</c><00:22:25.980><c> my</c><00:22:26.250><c> different</c><00:22:26.700><c> splitter</c>

00:22:26.960 --> 00:22:26.970 align:start position:0%
I've just changed my different splitter
 

00:22:26.970 --> 00:22:31.490 align:start position:0%
I've just changed my different splitter
rater<00:22:27.240><c> in</c><00:22:27.840><c> the</c><00:22:27.990><c> old</c><00:22:28.200><c> chain</c><00:22:29.060><c> okay</c><00:22:30.140><c> but</c><00:22:31.140><c> what</c><00:22:31.470><c> I</c>

00:22:31.490 --> 00:22:31.500 align:start position:0%
rater in the old chain okay but what I
 

00:22:31.500 --> 00:22:34.250 align:start position:0%
rater in the old chain okay but what I
could<00:22:31.920><c> do</c><00:22:32.100><c> also</c><00:22:32.280><c> so</c><00:22:32.640><c> so</c><00:22:32.910><c> here</c><00:22:33.210><c> whatever</c><00:22:33.450><c> I</c><00:22:33.870><c> have</c>

00:22:34.250 --> 00:22:34.260 align:start position:0%
could do also so so here whatever I have
 

00:22:34.260 --> 00:22:35.780 align:start position:0%
could do also so so here whatever I have
done<00:22:34.410><c> I</c><00:22:34.560><c> have</c><00:22:34.620><c> blocked</c><00:22:35.070><c> object</c><00:22:35.490><c> I</c><00:22:35.700><c> have</c>

00:22:35.780 --> 00:22:35.790 align:start position:0%
done I have blocked object I have
 

00:22:35.790 --> 00:22:38.630 align:start position:0%
done I have blocked object I have
transform<00:22:36.480><c> object</c><00:22:36.780><c> but</c><00:22:37.260><c> I</c><00:22:37.290><c> can</c><00:22:37.530><c> also</c><00:22:37.710><c> create</c>

00:22:38.630 --> 00:22:38.640 align:start position:0%
transform object but I can also create
 

00:22:38.640 --> 00:22:41.630 align:start position:0%
transform object but I can also create
more<00:22:39.090><c> object</c><00:22:39.510><c> in</c><00:22:40.080><c> the</c><00:22:40.260><c> downstream</c><00:22:40.740><c> splitter</c>

00:22:41.630 --> 00:22:41.640 align:start position:0%
more object in the downstream splitter
 

00:22:41.640 --> 00:22:44.180 align:start position:0%
more object in the downstream splitter
ater<00:22:41.850><c> than</c><00:22:42.120><c> I</c><00:22:42.240><c> had</c><00:22:42.720><c> in</c><00:22:43.230><c> the</c><00:22:43.410><c> upstream</c><00:22:43.830><c> spitter</c>

00:22:44.180 --> 00:22:44.190 align:start position:0%
ater than I had in the upstream spitter
 

00:22:44.190 --> 00:22:48.400 align:start position:0%
ater than I had in the upstream spitter
rater<00:22:44.460><c> let</c><00:22:45.450><c> us</c><00:22:45.570><c> create</c><00:22:45.840><c> a</c><00:22:46.170><c> fourth</c><00:22:46.560><c> wanna</c><00:22:46.830><c> a</c>

00:22:48.400 --> 00:22:48.410 align:start position:0%
rater let us create a fourth wanna a
 

00:22:48.410 --> 00:22:53.710 align:start position:0%
rater let us create a fourth wanna a
repeating<00:22:51.800><c> splitter</c><00:22:52.800><c> rater</c>

00:22:53.710 --> 00:22:53.720 align:start position:0%
repeating splitter rater
 

00:22:53.720 --> 00:23:01.670 align:start position:0%
repeating splitter rater
of<00:22:54.720><c> stream</c><00:22:59.540><c> repeating</c><00:23:00.540><c> splitter</c><00:23:00.810><c> return</c><00:23:01.230><c> let</c>

00:23:01.670 --> 00:23:01.680 align:start position:0%
of stream repeating splitter return let
 

00:23:01.680 --> 00:23:08.860 align:start position:0%
of stream repeating splitter return let
us<00:23:01.860><c> let</c><00:23:02.430><c> us</c><00:23:02.460><c> create</c><00:23:02.880><c> this</c><00:23:03.120><c> class</c>

00:23:08.860 --> 00:23:08.870 align:start position:0%
 
 

00:23:08.870 --> 00:23:17.570 align:start position:0%
 
here<00:23:11.300><c> going</c><00:23:12.300><c> to</c><00:23:12.660><c> copy</c><00:23:13.470><c> paste</c><00:23:13.590><c> this</c><00:23:14.010><c> code</c><00:23:16.580><c> to</c>

00:23:17.570 --> 00:23:17.580 align:start position:0%
here going to copy paste this code to
 

00:23:17.580 --> 00:23:21.200 align:start position:0%
here going to copy paste this code to
make<00:23:17.730><c> things</c><00:23:18.000><c> quicker</c><00:23:18.900><c> I</c><00:23:19.880><c> implement</c><00:23:20.880><c> splitter</c>

00:23:21.200 --> 00:23:21.210 align:start position:0%
make things quicker I implement splitter
 

00:23:21.210 --> 00:23:23.510 align:start position:0%
make things quicker I implement splitter
rater<00:23:21.510><c> this</c><00:23:21.840><c> is</c><00:23:22.020><c> a</c><00:23:22.050><c> repeating</c><00:23:22.800><c> a</c><00:23:22.830><c> splitter</c>

00:23:23.510 --> 00:23:23.520 align:start position:0%
rater this is a repeating a splitter
 

00:23:23.520 --> 00:23:28.610 align:start position:0%
rater this is a repeating a splitter
rater<00:23:23.790><c> and</c><00:23:24.180><c> I</c><00:23:24.450><c> can</c><00:23:25.110><c> for</c><00:23:25.650><c> instance</c><00:23:27.440><c> pass</c><00:23:28.440><c> an</c>

00:23:28.610 --> 00:23:28.620 align:start position:0%
rater and I can for instance pass an
 

00:23:28.620 --> 00:23:33.580 align:start position:0%
rater and I can for instance pass an
integer<00:23:28.890><c> as</c><00:23:29.340><c> a</c><00:23:29.400><c> parameter</c><00:23:30.200><c> this</c><00:23:31.200><c> repeat</c><00:23:32.100><c> oops</c>

00:23:33.580 --> 00:23:33.590 align:start position:0%
integer as a parameter this repeat oops
 

00:23:33.590 --> 00:23:40.000 align:start position:0%
integer as a parameter this repeat oops
equals<00:23:34.590><c> repeat</c><00:23:36.830><c> yeah</c><00:23:38.360><c> create</c><00:23:39.360><c> the</c><00:23:39.480><c> field</c>

00:23:40.000 --> 00:23:40.010 align:start position:0%
equals repeat yeah create the field
 

00:23:40.010 --> 00:23:44.180 align:start position:0%
equals repeat yeah create the field
thank<00:23:41.010><c> you</c><00:23:41.190><c> and</c><00:23:41.910><c> then</c><00:23:42.809><c> each</c><00:23:43.470><c> time</c><00:23:43.530><c> I</c><00:23:43.890><c> get</c><00:23:43.950><c> an</c>

00:23:44.180 --> 00:23:44.190 align:start position:0%
thank you and then each time I get an
 

00:23:44.190 --> 00:23:47.540 align:start position:0%
thank you and then each time I get an
object<00:23:44.690><c> what</c><00:23:45.690><c> I</c><00:23:45.720><c> want</c><00:23:45.960><c> to</c><00:23:46.080><c> do</c><00:23:46.230><c> is</c><00:23:46.440><c> repeat</c><00:23:47.429><c> that</c>

00:23:47.540 --> 00:23:47.550 align:start position:0%
object what I want to do is repeat that
 

00:23:47.550 --> 00:23:49.220 align:start position:0%
object what I want to do is repeat that
object<00:23:47.970><c> the</c><00:23:48.150><c> number</c><00:23:48.450><c> of</c><00:23:48.570><c> time</c><00:23:48.780><c> I</c><00:23:48.960><c> haven't</c>

00:23:49.220 --> 00:23:49.230 align:start position:0%
object the number of time I haven't
 

00:23:49.230 --> 00:23:51.590 align:start position:0%
object the number of time I haven't
passed<00:23:49.380><c> it</c><00:23:49.620><c> so</c><00:23:50.190><c> if</c><00:23:50.400><c> repeat</c><00:23:50.790><c> is</c><00:23:50.910><c> equal</c><00:23:51.179><c> to</c><00:23:51.330><c> three</c>

00:23:51.590 --> 00:23:51.600 align:start position:0%
passed it so if repeat is equal to three
 

00:23:51.600 --> 00:23:54.320 align:start position:0%
passed it so if repeat is equal to three
for<00:23:51.809><c> instance</c><00:23:52.110><c> I</c><00:23:52.320><c> want</c><00:23:52.770><c> to</c><00:23:52.890><c> repeat</c><00:23:53.250><c> the</c><00:23:53.970><c> object</c>

00:23:54.320 --> 00:23:54.330 align:start position:0%
for instance I want to repeat the object
 

00:23:54.330 --> 00:23:57.230 align:start position:0%
for instance I want to repeat the object
incoming<00:23:54.840><c> object</c><00:23:55.140><c> three</c><00:23:55.440><c> times</c><00:23:55.760><c> so</c><00:23:56.760><c> I</c><00:23:56.790><c> can</c><00:23:57.090><c> do</c>

00:23:57.230 --> 00:23:57.240 align:start position:0%
incoming object three times so I can do
 

00:23:57.240 --> 00:23:57.650 align:start position:0%
incoming object three times so I can do
that

00:23:57.650 --> 00:23:57.660 align:start position:0%
that
 

00:23:57.660 --> 00:24:01.610 align:start position:0%
that
I<00:23:57.690><c> guess</c><00:23:58.080><c> like</c><00:23:58.290><c> that</c><00:23:59.059><c> in</c><00:24:00.059><c> stream</c><00:24:00.510><c> dot</c><00:24:01.260><c> range</c>

00:24:01.610 --> 00:24:01.620 align:start position:0%
I guess like that in stream dot range
 

00:24:01.620 --> 00:24:08.560 align:start position:0%
I guess like that in stream dot range
from<00:24:02.400><c> zero</c><00:24:02.760><c> to</c><00:24:03.120><c> n</c><00:24:04.700><c> so</c><00:24:05.700><c> you</c><00:24:05.760><c> repeat</c><00:24:06.179><c> and</c><00:24:07.220><c> then</c>

00:24:08.560 --> 00:24:08.570 align:start position:0%
from zero to n so you repeat and then
 

00:24:08.570 --> 00:24:16.040 align:start position:0%
from zero to n so you repeat and then
for<00:24:09.570><c> each</c><00:24:11.330><c> index</c><00:24:12.710><c> actually</c><00:24:13.710><c> accept</c><00:24:14.720><c> yes</c><00:24:15.720><c> that</c>

00:24:16.040 --> 00:24:16.050 align:start position:0%
for each index actually accept yes that
 

00:24:16.050 --> 00:24:16.840 align:start position:0%
for each index actually accept yes that
should<00:24:16.230><c> do</c><00:24:16.410><c> the</c><00:24:16.440><c> trick</c>

00:24:16.840 --> 00:24:16.850 align:start position:0%
should do the trick
 

00:24:16.850 --> 00:24:21.620 align:start position:0%
should do the trick
right<00:24:17.850><c> if</c><00:24:18.510><c> I</c><00:24:18.780><c> go</c><00:24:18.990><c> back</c><00:24:19.140><c> to</c><00:24:19.380><c> this</c><00:24:19.700><c> stuff</c><00:24:20.700><c> yes</c><00:24:21.450><c> I</c>

00:24:21.620 --> 00:24:21.630 align:start position:0%
right if I go back to this stuff yes I
 

00:24:21.630 --> 00:24:25.280 align:start position:0%
right if I go back to this stuff yes I
need<00:24:21.690><c> to</c><00:24:21.980><c> instantiate</c><00:24:22.980><c> it</c><00:24:23.840><c> new</c><00:24:24.840><c> repeating</c>

00:24:25.280 --> 00:24:25.290 align:start position:0%
need to instantiate it new repeating
 

00:24:25.290 --> 00:24:27.380 align:start position:0%
need to instantiate it new repeating
splitter<00:24:25.590><c> later</c><00:24:25.860><c> on</c><00:24:26.309><c> the</c><00:24:26.610><c> filtering</c><00:24:27.000><c> splitter</c>

00:24:27.380 --> 00:24:27.390 align:start position:0%
splitter later on the filtering splitter
 

00:24:27.390 --> 00:24:33.530 align:start position:0%
splitter later on the filtering splitter
return<00:24:27.840><c> by</c><00:24:28.470><c> a</c><00:24:28.500><c> factor</c><00:24:28.950><c> of</c><00:24:28.980><c> two</c><00:24:32.450><c> create</c><00:24:33.450><c> the</c>

00:24:33.530 --> 00:24:33.540 align:start position:0%
return by a factor of two create the
 

00:24:33.540 --> 00:24:37.580 align:start position:0%
return by a factor of two create the
stream<00:24:33.780><c> on</c><00:24:33.929><c> it</c><00:24:34.080><c> run</c><00:24:34.980><c> the</c><00:24:35.100><c> code</c><00:24:36.140><c> and</c><00:24:37.140><c> you</c><00:24:37.380><c> see</c>

00:24:37.580 --> 00:24:37.590 align:start position:0%
stream on it run the code and you see
 

00:24:37.590 --> 00:24:38.650 align:start position:0%
stream on it run the code and you see
this<00:24:37.740><c> time</c><00:24:37.980><c> whoops</c>

00:24:38.650 --> 00:24:38.660 align:start position:0%
this time whoops
 

00:24:38.660 --> 00:24:41.419 align:start position:0%
this time whoops
what<00:24:39.660><c> did</c><00:24:39.780><c> I'm</c><00:24:39.960><c> oh</c><00:24:40.200><c> yes</c><00:24:40.679><c> I</c><00:24:40.890><c> didn't</c><00:24:41.190><c> take</c><00:24:41.309><c> the</c>

00:24:41.419 --> 00:24:41.429 align:start position:0%
what did I'm oh yes I didn't take the
 

00:24:41.429 --> 00:24:42.950 align:start position:0%
what did I'm oh yes I didn't take the
mapping<00:24:41.850><c> splitter</c><00:24:42.120><c> it</c><00:24:42.330><c> let</c><00:24:42.570><c> us</c><00:24:42.690><c> take</c><00:24:42.870><c> the</c>

00:24:42.950 --> 00:24:42.960 align:start position:0%
mapping splitter it let us take the
 

00:24:42.960 --> 00:24:47.630 align:start position:0%
mapping splitter it let us take the
mapping<00:24:43.290><c> splitter</c><00:24:43.559><c> later</c><00:24:46.010><c> okay</c><00:24:47.010><c> so</c><00:24:47.070><c> here</c><00:24:47.490><c> you</c>

00:24:47.630 --> 00:24:47.640 align:start position:0%
mapping splitter later okay so here you
 

00:24:47.640 --> 00:24:50.060 align:start position:0%
mapping splitter later okay so here you
see<00:24:47.670><c> that</c><00:24:47.850><c> every</c><00:24:48.450><c> element</c><00:24:48.660><c> has</c><00:24:49.290><c> been</c><00:24:49.590><c> repeated</c>

00:24:50.060 --> 00:24:50.070 align:start position:0%
see that every element has been repeated
 

00:24:50.070 --> 00:25:02.330 align:start position:0%
see that every element has been repeated
twice<00:24:50.929><c> so</c><00:24:51.929><c> you</c><00:24:51.990><c> really</c><00:24:52.500><c> ask</c><00:24:52.830><c> a</c><00:24:53.040><c> question</c>

00:25:02.330 --> 00:25:02.340 align:start position:0%
 
 

00:25:02.340 --> 00:25:07.410 align:start position:0%
 
yeah

00:25:07.410 --> 00:25:07.420 align:start position:0%
 
 

00:25:07.420 --> 00:25:14.000 align:start position:0%
 
you<00:25:08.050><c> mean</c><00:25:08.200><c> in</c><00:25:08.320><c> try</c><00:25:08.500><c> advance</c>

00:25:14.000 --> 00:25:14.010 align:start position:0%
 
 

00:25:14.010 --> 00:25:16.380 align:start position:0%
 
yeah

00:25:16.380 --> 00:25:16.390 align:start position:0%
yeah
 

00:25:16.390 --> 00:25:19.690 align:start position:0%
yeah
[Music]

00:25:19.690 --> 00:25:19.700 align:start position:0%
 
 

00:25:19.700 --> 00:25:23.390 align:start position:0%
 
yeah<00:25:20.700><c> that's</c><00:25:21.120><c> okay</c><00:25:21.470><c> that's</c><00:25:22.470><c> okay</c><00:25:22.650><c> this</c><00:25:23.220><c> is</c>

00:25:23.390 --> 00:25:23.400 align:start position:0%
yeah that's okay that's okay this is
 

00:25:23.400 --> 00:25:26.060 align:start position:0%
yeah that's okay that's okay this is
what<00:25:23.550><c> it's</c><00:25:24.030><c> not</c><00:25:24.470><c> doctor</c><00:25:25.470><c> deprecated</c><00:25:25.920><c> that</c>

00:25:26.060 --> 00:25:26.070 align:start position:0%
what it's not doctor deprecated that
 

00:25:26.070 --> 00:25:27.170 align:start position:0%
what it's not doctor deprecated that
does<00:25:26.250><c> not</c><00:25:26.370><c> agree</c><00:25:26.610><c> with</c><00:25:26.700><c> that</c>

00:25:27.170 --> 00:25:27.180 align:start position:0%
does not agree with that
 

00:25:27.180 --> 00:25:54.150 align:start position:0%
does not agree with that
why<00:25:27.900><c> not</c>

00:25:54.150 --> 00:25:54.160 align:start position:0%
 
 

00:25:54.160 --> 00:25:56.460 align:start position:0%
 
so<00:25:54.730><c> yeah</c><00:25:54.910><c> you're</c><00:25:55.180><c> just</c><00:25:55.420><c> allowed</c><00:25:55.780><c> to</c><00:25:55.960><c> call</c><00:25:56.380><c> the</c>

00:25:56.460 --> 00:25:56.470 align:start position:0%
so yeah you're just allowed to call the
 

00:25:56.470 --> 00:26:05.880 align:start position:0%
so yeah you're just allowed to call the
consumer<00:25:56.770><c> once</c><00:25:57.100><c> I</c><00:25:58.830><c> assure</c><00:25:59.830><c> that</c><00:26:04.560><c> so</c><00:26:05.560><c> this</c><00:26:05.710><c> is</c><00:26:05.770><c> a</c>

00:26:05.880 --> 00:26:05.890 align:start position:0%
consumer once I assure that so this is a
 

00:26:05.890 --> 00:26:21.090 align:start position:0%
consumer once I assure that so this is a
bag<00:26:06.160><c> I</c><00:26:16.320><c> discuss</c><00:26:17.320><c> about</c><00:26:17.620><c> that</c><00:26:17.770><c> more</c><00:26:18.010><c> I</c><00:26:20.100><c> really</c>

00:26:21.090 --> 00:26:21.100 align:start position:0%
bag I discuss about that more I really
 

00:26:21.100 --> 00:26:23.190 align:start position:0%
bag I discuss about that more I really
wonder<00:26:21.400><c> how</c><00:26:21.430><c> you're</c><00:26:22.180><c> sorted</c><00:26:22.540><c> method</c><00:26:22.840><c> can</c><00:26:23.020><c> work</c>

00:26:23.190 --> 00:26:23.200 align:start position:0%
wonder how you're sorted method can work
 

00:26:23.200 --> 00:26:25.530 align:start position:0%
wonder how you're sorted method can work
if<00:26:23.680><c> you</c><00:26:23.920><c> do</c><00:26:24.400><c> not</c><00:26:24.580><c> allow</c><00:26:24.850><c> this</c><00:26:25.030><c> kind</c><00:26:25.240><c> of</c><00:26:25.330><c> thing</c>

00:26:25.530 --> 00:26:25.540 align:start position:0%
if you do not allow this kind of thing
 

00:26:25.540 --> 00:26:35.940 align:start position:0%
if you do not allow this kind of thing
so<00:26:26.070><c> you're</c><00:26:27.070><c> not</c><00:26:27.160><c> allowed</c><00:26:27.370><c> to</c><00:26:27.430><c> do</c><00:26:27.640><c> that</c><00:26:33.270><c> hmm</c><00:26:34.950><c> if</c>

00:26:35.940 --> 00:26:35.950 align:start position:0%
so you're not allowed to do that hmm if
 

00:26:35.950 --> 00:26:38.370 align:start position:0%
so you're not allowed to do that hmm if
you<00:26:36.160><c> change</c><00:26:36.370><c> the</c><00:26:36.520><c> behavior</c><00:26:36.640><c> in</c><00:26:37.030><c> 10</c><00:26:37.870><c> that</c><00:26:38.110><c> is</c><00:26:38.230><c> in</c>

00:26:38.370 --> 00:26:38.380 align:start position:0%
you change the behavior in 10 that is in
 

00:26:38.380 --> 00:26:46.400 align:start position:0%
you change the behavior in 10 that is in
21<00:26:38.920><c> 10</c><00:26:40.080><c> 10.3</c><00:26:43.830><c> all</c><00:26:44.830><c> right</c><00:26:45.010><c> well</c><00:26:45.310><c> it</c><00:26:45.400><c> works</c><00:26:45.700><c> right</c>

00:26:46.400 --> 00:26:46.410 align:start position:0%
21 10 10.3 all right well it works right
 

00:26:46.410 --> 00:26:56.060 align:start position:0%
21 10 10.3 all right well it works right
it's<00:26:47.410><c> pretty</c><00:26:47.710><c> well</c>

00:26:56.060 --> 00:26:56.070 align:start position:0%
 
 

00:26:56.070 --> 00:26:59.029 align:start position:0%
 
yes<00:26:57.070><c> we're</c><00:26:57.279><c> not</c><00:26:57.399><c> doing</c><00:26:57.609><c> power</c><00:26:57.789><c> there</c><00:26:58.209><c> clearly</c>

00:26:59.029 --> 00:26:59.039 align:start position:0%
yes we're not doing power there clearly
 

00:26:59.039 --> 00:27:02.459 align:start position:0%
yes we're not doing power there clearly
clearly<00:27:00.509><c> there</c><00:27:01.509><c> is</c><00:27:01.629><c> another</c><00:27:01.989><c> point</c><00:27:02.289><c> I</c><00:27:02.409><c> would</c>

00:27:02.459 --> 00:27:02.469 align:start position:0%
clearly there is another point I would
 

00:27:02.469 --> 00:27:04.199 align:start position:0%
clearly there is another point I would
like<00:27:02.529><c> to</c><00:27:02.739><c> raise</c><00:27:02.859><c> it</c><00:27:03.039><c> at</c><00:27:03.190><c> this</c><00:27:03.429><c> split</c><00:27:03.909><c> orator</c>

00:27:04.199 --> 00:27:04.209 align:start position:0%
like to raise it at this split orator
 

00:27:04.209 --> 00:27:06.989 align:start position:0%
like to raise it at this split orator
estimate<00:27:04.719><c> size</c><00:27:04.929><c> here</c><00:27:05.399><c> because</c><00:27:06.399><c> obviously</c><00:27:06.519><c> I'm</c>

00:27:06.989 --> 00:27:06.999 align:start position:0%
estimate size here because obviously I'm
 

00:27:06.999 --> 00:27:09.539 align:start position:0%
estimate size here because obviously I'm
multiplying<00:27:07.809><c> the</c><00:27:08.440><c> the</c><00:27:08.679><c> size</c><00:27:08.919><c> of</c><00:27:09.429><c> this</c>

00:27:09.539 --> 00:27:09.549 align:start position:0%
multiplying the the size of this
 

00:27:09.549 --> 00:27:12.810 align:start position:0%
multiplying the the size of this
predator<00:27:10.029><c> by</c><00:27:10.269><c> the</c><00:27:10.329><c> repeat</c><00:27:10.749><c> factor</c><00:27:11.639><c> this</c><00:27:12.639><c> is</c>

00:27:12.810 --> 00:27:12.820 align:start position:0%
predator by the repeat factor this is
 

00:27:12.820 --> 00:27:15.269 align:start position:0%
predator by the repeat factor this is
alone<00:27:13.119><c> and</c><00:27:13.419><c> the</c><00:27:13.959><c> estimate</c><00:27:14.379><c> size</c><00:27:14.619><c> might</c><00:27:15.070><c> be</c>

00:27:15.269 --> 00:27:15.279 align:start position:0%
alone and the estimate size might be
 

00:27:15.279 --> 00:27:18.629 align:start position:0%
alone and the estimate size might be
long<00:27:16.179><c> that</c><00:27:16.419><c> max</c><00:27:16.690><c> value</c><00:27:17.049><c> in</c><00:27:17.259><c> some</c><00:27:17.469><c> cases</c><00:27:17.709><c> so</c><00:27:18.519><c> if</c>

00:27:18.629 --> 00:27:18.639 align:start position:0%
long that max value in some cases so if
 

00:27:18.639 --> 00:27:23.369 align:start position:0%
long that max value in some cases so if
I<00:27:18.789><c> just</c><00:27:19.119><c> return</c><00:27:19.570><c> repeat</c><00:27:21.269><c> time</c><00:27:22.269><c> this</c><00:27:23.019><c> splitter</c>

00:27:23.369 --> 00:27:23.379 align:start position:0%
I just return repeat time this splitter
 

00:27:23.379 --> 00:27:23.789 align:start position:0%
I just return repeat time this splitter
ATAR

00:27:23.789 --> 00:27:23.799 align:start position:0%
ATAR
 

00:27:23.799 --> 00:27:26.249 align:start position:0%
ATAR
repeat<00:27:24.339><c> here</c><00:27:24.669><c> time</c><00:27:25.269><c> this</c><00:27:25.719><c> splitter</c><00:27:26.019><c> Reiter</c>

00:27:26.249 --> 00:27:26.259 align:start position:0%
repeat here time this splitter Reiter
 

00:27:26.259 --> 00:27:28.859 align:start position:0%
repeat here time this splitter Reiter
estimate<00:27:26.799><c> size</c><00:27:27.009><c> here</c><00:27:27.339><c> am</c><00:27:27.909><c> I</c><00:27:28.119><c> going</c><00:27:28.329><c> to</c><00:27:28.479><c> trouble</c>

00:27:28.859 --> 00:27:28.869 align:start position:0%
estimate size here am I going to trouble
 

00:27:28.869 --> 00:27:31.349 align:start position:0%
estimate size here am I going to trouble
because<00:27:29.169><c> this</c><00:27:29.379><c> long</c><00:27:29.799><c> might</c><00:27:30.489><c> become</c><00:27:30.879><c> negative</c>

00:27:31.349 --> 00:27:31.359 align:start position:0%
because this long might become negative
 

00:27:31.359 --> 00:27:36.749 align:start position:0%
because this long might become negative
if<00:27:32.429><c> this</c><00:27:33.429><c> estimate</c><00:27:33.999><c> size</c><00:27:34.349><c> is</c><00:27:35.429><c> itself</c><00:27:36.429><c> from</c><00:27:36.699><c> my</c>

00:27:36.749 --> 00:27:36.759 align:start position:0%
if this estimate size is itself from my
 

00:27:36.759 --> 00:27:39.479 align:start position:0%
if this estimate size is itself from my
long<00:27:37.269><c> dot</c><00:27:37.479><c> max</c><00:27:37.690><c> value</c><00:27:38.019><c> so</c><00:27:38.739><c> I'm</c><00:27:39.009><c> not</c><00:27:39.190><c> going</c><00:27:39.369><c> to</c>

00:27:39.479 --> 00:27:39.489 align:start position:0%
long dot max value so I'm not going to
 

00:27:39.489 --> 00:27:41.489 align:start position:0%
long dot max value so I'm not going to
write<00:27:39.669><c> this</c><00:27:39.879><c> I'm</c><00:27:40.179><c> going</c><00:27:40.539><c> to</c><00:27:40.690><c> keep</c><00:27:40.929><c> it</c><00:27:41.079><c> this</c><00:27:41.319><c> is</c>

00:27:41.489 --> 00:27:41.499 align:start position:0%
write this I'm going to keep it this is
 

00:27:41.499 --> 00:27:44.699 align:start position:0%
write this I'm going to keep it this is
just<00:27:41.739><c> an</c><00:27:41.859><c> estimation</c><00:27:42.279><c> anyway</c><00:27:42.969><c> so</c><00:27:43.959><c> I'm</c><00:27:44.469><c> just</c>

00:27:44.699 --> 00:27:44.709 align:start position:0%
just an estimation anyway so I'm just
 

00:27:44.709 --> 00:27:52.049 align:start position:0%
just an estimation anyway so I'm just
going<00:27:44.949><c> to</c><00:27:45.009><c> keep</c><00:27:45.669><c> it</c><00:27:45.729><c> like</c><00:27:46.059><c> that</c><00:27:47.489><c> I</c><00:27:50.609><c> just</c><00:27:51.609><c> told</c>

00:27:52.049 --> 00:27:52.059 align:start position:0%
going to keep it like that I just told
 

00:27:52.059 --> 00:27:54.869 align:start position:0%
going to keep it like that I just told
you<00:27:52.299><c> a</c><00:27:52.539><c> few</c><00:27:52.569><c> minutes</c><00:27:52.929><c> ago</c><00:27:53.019><c> that</c><00:27:53.319><c> it</c><00:27:53.589><c> was</c><00:27:53.889><c> that</c>

00:27:54.869 --> 00:27:54.879 align:start position:0%
you a few minutes ago that it was that
 

00:27:54.879 --> 00:27:58.039 align:start position:0%
you a few minutes ago that it was that
sorry<00:27:55.299><c> that</c><00:27:56.169><c> implementing</c><00:27:57.069><c> those</c><00:27:57.249><c> four</c>

00:27:58.039 --> 00:27:58.049 align:start position:0%
sorry that implementing those four
 

00:27:58.049 --> 00:28:02.069 align:start position:0%
sorry that implementing those four
methods<00:27:59.069><c> was</c><00:28:00.069><c> was</c><00:28:00.579><c> enough</c><00:28:01.299><c> to</c><00:28:01.599><c> implement</c><00:28:01.839><c> a</c>

00:28:02.069 --> 00:28:02.079 align:start position:0%
methods was was enough to implement a
 

00:28:02.079 --> 00:28:04.559 align:start position:0%
methods was was enough to implement a
splitter<00:28:02.379><c> rater</c><00:28:02.679><c> in</c><00:28:03.069><c> fact</c><00:28:03.399><c> it's</c><00:28:03.669><c> not</c><00:28:04.059><c> exactly</c>

00:28:04.559 --> 00:28:04.569 align:start position:0%
splitter rater in fact it's not exactly
 

00:28:04.569 --> 00:28:08.129 align:start position:0%
splitter rater in fact it's not exactly
the<00:28:04.659><c> case</c><00:28:05.940><c> suppose</c><00:28:06.940><c> this</c><00:28:07.179><c> splitter</c><00:28:07.869><c> rater</c>

00:28:08.129 --> 00:28:08.139 align:start position:0%
the case suppose this splitter rater
 

00:28:08.139 --> 00:28:13.669 align:start position:0%
the case suppose this splitter rater
here<00:28:09.389><c> becomes</c><00:28:10.389><c> sorted</c><00:28:11.879><c> right</c><00:28:12.879><c> could</c><00:28:13.419><c> do</c><00:28:13.509><c> that</c>

00:28:13.669 --> 00:28:13.679 align:start position:0%
here becomes sorted right could do that
 

00:28:13.679 --> 00:28:18.479 align:start position:0%
here becomes sorted right could do that
run<00:28:14.679><c> this</c><00:28:14.829><c> code</c><00:28:15.099><c> and</c><00:28:16.499><c> here</c><00:28:17.499><c> I</c><00:28:17.739><c> will</c><00:28:17.919><c> get</c><00:28:18.190><c> an</c><00:28:18.339><c> it</c>

00:28:18.479 --> 00:28:18.489 align:start position:0%
run this code and here I will get an it
 

00:28:18.489 --> 00:28:20.849 align:start position:0%
run this code and here I will get an it
illegal<00:28:19.029><c> state</c><00:28:19.239><c> exception</c><00:28:19.779><c> coming</c><00:28:20.469><c> from</c><00:28:20.679><c> the</c>

00:28:20.849 --> 00:28:20.859 align:start position:0%
illegal state exception coming from the
 

00:28:20.859 --> 00:28:23.159 align:start position:0%
illegal state exception coming from the
gate<00:28:21.129><c> comparator</c><00:28:21.699><c> method</c><00:28:22.059><c> of</c><00:28:22.239><c> the</c><00:28:22.839><c> splitter</c>

00:28:23.159 --> 00:28:23.169 align:start position:0%
gate comparator method of the splitter
 

00:28:23.169 --> 00:28:25.529 align:start position:0%
gate comparator method of the splitter
Reiter<00:28:23.440><c> interface</c><00:28:24.069><c> and</c><00:28:24.849><c> if</c><00:28:24.999><c> I</c><00:28:25.119><c> check</c><00:28:25.389><c> that</c>

00:28:25.529 --> 00:28:25.539 align:start position:0%
Reiter interface and if I check that
 

00:28:25.539 --> 00:28:27.599 align:start position:0%
Reiter interface and if I check that
indeed<00:28:26.049><c> the</c><00:28:26.379><c> default</c><00:28:26.739><c> method</c><00:28:26.949><c> of</c><00:28:27.339><c> the</c>

00:28:27.599 --> 00:28:27.609 align:start position:0%
indeed the default method of the
 

00:28:27.609 --> 00:28:29.999 align:start position:0%
indeed the default method of the
splitter<00:28:27.940><c> Reiter</c><00:28:28.269><c> interface</c><00:28:28.690><c> throws</c><00:28:29.619><c> this</c>

00:28:29.999 --> 00:28:30.009 align:start position:0%
splitter Reiter interface throws this
 

00:28:30.009 --> 00:28:33.599 align:start position:0%
splitter Reiter interface throws this
illegal<00:28:30.940><c> state</c><00:28:31.149><c> exception</c><00:28:31.829><c> now</c><00:28:32.829><c> this</c><00:28:33.369><c> gate</c>

00:28:33.599 --> 00:28:33.609 align:start position:0%
illegal state exception now this gate
 

00:28:33.609 --> 00:28:35.459 align:start position:0%
illegal state exception now this gate
comparative<00:28:34.119><c> method</c><00:28:34.419><c> is</c><00:28:34.690><c> called</c><00:28:35.259><c> by</c><00:28:35.440><c> the</c>

00:28:35.459 --> 00:28:35.469 align:start position:0%
comparative method is called by the
 

00:28:35.469 --> 00:28:37.919 align:start position:0%
comparative method is called by the
reference<00:28:35.979><c> pipeline</c><00:28:36.369><c> object</c><00:28:36.729><c> only</c><00:28:37.419><c> in</c><00:28:37.809><c> the</c>

00:28:37.919 --> 00:28:37.929 align:start position:0%
reference pipeline object only in the
 

00:28:37.929 --> 00:28:42.719 align:start position:0%
reference pipeline object only in the
case<00:28:38.169><c> of</c><00:28:38.409><c> a</c><00:28:38.679><c> sorted</c><00:28:39.249><c> stream</c><00:28:39.899><c> so</c><00:28:40.899><c> I</c><00:28:41.199><c> have</c><00:28:41.619><c> I</c><00:28:42.039><c> can</c>

00:28:42.719 --> 00:28:42.729 align:start position:0%
case of a sorted stream so I have I can
 

00:28:42.729 --> 00:28:45.119 align:start position:0%
case of a sorted stream so I have I can
do<00:28:42.819><c> two</c><00:28:42.999><c> things</c><00:28:43.029><c> here</c><00:28:43.359><c> either</c><00:28:44.349><c> I</c><00:28:44.529><c> say</c><00:28:44.829><c> alright</c>

00:28:45.119 --> 00:28:45.129 align:start position:0%
do two things here either I say alright
 

00:28:45.129 --> 00:28:48.149 align:start position:0%
do two things here either I say alright
this<00:28:45.309><c> stream</c><00:28:45.609><c> is</c><00:28:45.909><c> not</c><00:28:46.059><c> sorted</c><00:28:47.009><c> whether</c><00:28:48.009><c> I</c>

00:28:48.149 --> 00:28:48.159 align:start position:0%
this stream is not sorted whether I
 

00:28:48.159 --> 00:28:51.319 align:start position:0%
this stream is not sorted whether I
provide<00:28:48.819><c> a</c><00:28:48.849><c> comparator</c><00:28:49.569><c> from</c><00:28:50.079><c> that</c><00:28:50.229><c> stream</c>

00:28:51.319 --> 00:28:51.329 align:start position:0%
provide a comparator from that stream
 

00:28:51.329 --> 00:28:54.569 align:start position:0%
provide a comparator from that stream
note<00:28:52.329><c> that</c><00:28:52.569><c> here</c><00:28:53.440><c> I</c><00:28:53.469><c> sorted</c><00:28:54.129><c> my</c><00:28:54.279><c> stream</c>

00:28:54.569 --> 00:28:54.579 align:start position:0%
note that here I sorted my stream
 

00:28:54.579 --> 00:28:56.309 align:start position:0%
note that here I sorted my stream
explicitly<00:28:55.179><c> but</c><00:28:55.389><c> suppose</c><00:28:55.749><c> I</c><00:28:55.869><c> have</c><00:28:56.019><c> a</c><00:28:56.049><c> method</c>

00:28:56.309 --> 00:28:56.319 align:start position:0%
explicitly but suppose I have a method
 

00:28:56.319 --> 00:28:59.339 align:start position:0%
explicitly but suppose I have a method
that<00:28:56.859><c> takes</c><00:28:57.159><c> a</c><00:28:57.459><c> collection</c><00:28:58.029><c> any</c><00:28:58.809><c> correction</c>

00:28:59.339 --> 00:28:59.349 align:start position:0%
that takes a collection any correction
 

00:28:59.349 --> 00:29:01.139 align:start position:0%
that takes a collection any correction
and<00:28:59.649><c> I</c><00:28:59.919><c> call</c><00:29:00.159><c> stream</c><00:29:00.549><c> on</c><00:29:00.729><c> that</c><00:29:00.849><c> correction</c>

00:29:01.139 --> 00:29:01.149 align:start position:0%
and I call stream on that correction
 

00:29:01.149 --> 00:29:03.690 align:start position:0%
and I call stream on that correction
that<00:29:01.619><c> correction</c><00:29:02.619><c> could</c><00:29:02.889><c> also</c><00:29:03.099><c> be</c><00:29:03.459><c> for</c>

00:29:03.690 --> 00:29:03.700 align:start position:0%
that correction could also be for
 

00:29:03.700 --> 00:29:07.560 align:start position:0%
that correction could also be for
instance<00:29:03.819><c> at</c><00:29:04.119><c> reset</c><00:29:05.279><c> let</c><00:29:06.279><c> us</c><00:29:06.429><c> do</c><00:29:06.579><c> that</c>

00:29:07.560 --> 00:29:07.570 align:start position:0%
instance at reset let us do that
 

00:29:07.570 --> 00:29:19.220 align:start position:0%
instance at reset let us do that
quick<00:29:08.250><c> reset</c><00:29:09.250><c> of</c><00:29:09.790><c> string</c><00:29:14.280><c> created</c><00:29:15.280><c> on</c><00:29:15.580><c> this</c>

00:29:19.220 --> 00:29:19.230 align:start position:0%
 
 

00:29:19.230 --> 00:29:29.430 align:start position:0%
 
sorry<00:29:21.360><c> on</c><00:29:22.360><c> this</c><00:29:22.570><c> released</c><00:29:26.250><c> string</c><00:29:27.250><c> them</c><00:29:28.440><c> pass</c>

00:29:29.430 --> 00:29:29.440 align:start position:0%
sorry on this released string them pass
 

00:29:29.440 --> 00:29:32.790 align:start position:0%
sorry on this released string them pass
this<00:29:29.770><c> reset</c><00:29:30.250><c> here</c><00:29:30.610><c> and</c><00:29:30.970><c> now</c><00:29:31.600><c> since</c><00:29:32.110><c> this</c><00:29:32.320><c> reset</c>

00:29:32.790 --> 00:29:32.800 align:start position:0%
this reset here and now since this reset
 

00:29:32.800 --> 00:29:35.430 align:start position:0%
this reset here and now since this reset
is<00:29:33.040><c> a</c><00:29:33.070><c> sorted</c><00:29:33.520><c> set</c><00:29:33.730><c> in</c><00:29:33.910><c> fact</c><00:29:34.150><c> the</c><00:29:35.110><c> stream</c>

00:29:35.430 --> 00:29:35.440 align:start position:0%
is a sorted set in fact the stream
 

00:29:35.440 --> 00:29:37.530 align:start position:0%
is a sorted set in fact the stream
produced<00:29:35.860><c> is</c><00:29:36.070><c> automatically</c><00:29:36.820><c> sorted</c><00:29:37.180><c> itself</c>

00:29:37.530 --> 00:29:37.540 align:start position:0%
produced is automatically sorted itself
 

00:29:37.540 --> 00:29:40.170 align:start position:0%
produced is automatically sorted itself
and<00:29:37.960><c> I</c><00:29:38.290><c> have</c><00:29:38.470><c> the</c><00:29:38.590><c> exact</c><00:29:38.860><c> same</c><00:29:38.920><c> bird</c><00:29:39.250><c> Iligan</c>

00:29:40.170 --> 00:29:40.180 align:start position:0%
and I have the exact same bird Iligan
 

00:29:40.180 --> 00:29:43.500 align:start position:0%
and I have the exact same bird Iligan
state<00:29:40.420><c> exception</c><00:29:40.900><c> right</c><00:29:41.700><c> so</c><00:29:42.700><c> here</c><00:29:43.030><c> what</c><00:29:43.180><c> can</c><00:29:43.360><c> I</c>

00:29:43.500 --> 00:29:43.510 align:start position:0%
state exception right so here what can I
 

00:29:43.510 --> 00:29:46.410 align:start position:0%
state exception right so here what can I
do<00:29:43.570><c> I'm</c><00:29:44.200><c> going</c><00:29:44.440><c> to</c><00:29:44.530><c> my</c><00:29:44.860><c> know</c><00:29:45.310><c> up</c><00:29:45.610><c> splitter</c><00:29:46.150><c> ater</c>

00:29:46.410 --> 00:29:46.420 align:start position:0%
do I'm going to my know up splitter ater
 

00:29:46.420 --> 00:29:49.680 align:start position:0%
do I'm going to my know up splitter ater
here<00:29:46.900><c> and</c><00:29:47.260><c> if</c><00:29:48.250><c> the</c><00:29:48.700><c> underlying</c><00:29:49.090><c> stream</c><00:29:49.540><c> of</c>

00:29:49.680 --> 00:29:49.690 align:start position:0%
here and if the underlying stream of
 

00:29:49.690 --> 00:29:52.140 align:start position:0%
here and if the underlying stream of
this<00:29:49.840><c> node</c><00:29:50.050><c> splitter</c><00:29:50.260><c> ater</c><00:29:50.710><c> is</c><00:29:51.160><c> itself</c><00:29:51.700><c> sorted</c>

00:29:52.140 --> 00:29:52.150 align:start position:0%
this node splitter ater is itself sorted
 

00:29:52.150 --> 00:29:54.750 align:start position:0%
this node splitter ater is itself sorted
it's<00:29:52.510><c> quite</c><00:29:52.810><c> normal</c><00:29:53.050><c> to</c><00:29:53.410><c> have</c><00:29:53.530><c> assorted</c><00:29:54.280><c> beta</c>

00:29:54.750 --> 00:29:54.760 align:start position:0%
it's quite normal to have assorted beta
 

00:29:54.760 --> 00:29:57.840 align:start position:0%
it's quite normal to have assorted beta
beta<00:29:54.940><c> so</c><00:29:55.780><c> what</c><00:29:55.900><c> I</c><00:29:55.930><c> need</c><00:29:56.050><c> to</c><00:29:56.200><c> do</c><00:29:56.440><c> is</c><00:29:56.950><c> provide</c><00:29:57.520><c> a</c>

00:29:57.840 --> 00:29:57.850 align:start position:0%
beta so what I need to do is provide a
 

00:29:57.850 --> 00:30:00.990 align:start position:0%
beta so what I need to do is provide a
comparator<00:29:58.830><c> let</c><00:29:59.830><c> me</c><00:30:00.010><c> override</c><00:30:00.430><c> this</c><00:30:00.760><c> gate</c>

00:30:00.990 --> 00:30:01.000 align:start position:0%
comparator let me override this gate
 

00:30:01.000 --> 00:30:03.330 align:start position:0%
comparator let me override this gate
comparator<00:30:01.480><c> method</c><00:30:01.840><c> by</c><00:30:02.530><c> providing</c><00:30:02.980><c> this</c>

00:30:03.330 --> 00:30:03.340 align:start position:0%
comparator method by providing this
 

00:30:03.340 --> 00:30:04.490 align:start position:0%
comparator method by providing this
pizza<00:30:04.000><c> rater</c>

00:30:04.490 --> 00:30:04.500 align:start position:0%
pizza rater
 

00:30:04.500 --> 00:30:09.060 align:start position:0%
pizza rater
get<00:30:05.500><c> comparator</c><00:30:06.240><c> method</c><00:30:07.240><c> object</c><00:30:07.390><c> here</c><00:30:07.840><c> and</c><00:30:08.770><c> I</c>

00:30:09.060 --> 00:30:09.070 align:start position:0%
get comparator method object here and I
 

00:30:09.070 --> 00:30:10.980 align:start position:0%
get comparator method object here and I
will<00:30:09.250><c> have</c><00:30:09.370><c> to</c><00:30:09.490><c> do</c><00:30:09.610><c> the</c><00:30:09.730><c> same</c><00:30:09.970><c> in</c><00:30:10.360><c> fact</c><00:30:10.570><c> for</c><00:30:10.840><c> all</c>

00:30:10.980 --> 00:30:10.990 align:start position:0%
will have to do the same in fact for all
 

00:30:10.990 --> 00:30:14.910 align:start position:0%
will have to do the same in fact for all
my<00:30:11.350><c> comparator</c><00:30:11.970><c> splitter</c><00:30:12.970><c> rater</c><00:30:13.260><c> let</c><00:30:14.260><c> me</c><00:30:14.500><c> copy</c>

00:30:14.910 --> 00:30:14.920 align:start position:0%
my comparator splitter rater let me copy
 

00:30:14.920 --> 00:30:17.970 align:start position:0%
my comparator splitter rater let me copy
paste<00:30:15.220><c> this</c><00:30:15.750><c> splitter</c><00:30:16.750><c> rater</c><00:30:17.050><c> sorry</c><00:30:17.770><c> the</c>

00:30:17.970 --> 00:30:17.980 align:start position:0%
paste this splitter rater sorry the
 

00:30:17.980 --> 00:30:19.200 align:start position:0%
paste this splitter rater sorry the
filtering<00:30:18.520><c> splitter</c><00:30:18.790><c> rater</c>

00:30:19.200 --> 00:30:19.210 align:start position:0%
filtering splitter rater
 

00:30:19.210 --> 00:30:21.720 align:start position:0%
filtering splitter rater
quite<00:30:19.900><c> obviously</c><00:30:20.410><c> will</c><00:30:20.650><c> not</c><00:30:20.830><c> change</c><00:30:21.130><c> the</c>

00:30:21.720 --> 00:30:21.730 align:start position:0%
quite obviously will not change the
 

00:30:21.730 --> 00:30:24.900 align:start position:0%
quite obviously will not change the
salted<00:30:22.210><c> nature</c><00:30:22.990><c> of</c><00:30:23.200><c> the</c><00:30:23.590><c> streamer</c><00:30:23.890><c> so</c><00:30:24.610><c> I</c><00:30:24.640><c> can</c>

00:30:24.900 --> 00:30:24.910 align:start position:0%
salted nature of the streamer so I can
 

00:30:24.910 --> 00:30:29.580 align:start position:0%
salted nature of the streamer so I can
do<00:30:25.030><c> the</c><00:30:25.180><c> same</c><00:30:26.220><c> provide</c><00:30:27.220><c> also</c><00:30:27.460><c> a</c><00:30:28.590><c> comparator</c>

00:30:29.580 --> 00:30:29.590 align:start position:0%
do the same provide also a comparator
 

00:30:29.590 --> 00:30:34.980 align:start position:0%
do the same provide also a comparator
here<00:30:31.290><c> the</c><00:30:32.290><c> mapping</c><00:30:32.650><c> splitter</c><00:30:33.010><c> rater</c><00:30:33.780><c> since</c><00:30:34.780><c> it</c>

00:30:34.980 --> 00:30:34.990 align:start position:0%
here the mapping splitter rater since it
 

00:30:34.990 --> 00:30:37.130 align:start position:0%
here the mapping splitter rater since it
can<00:30:35.200><c> change</c><00:30:35.560><c> the</c><00:30:36.160><c> nature</c><00:30:36.370><c> of</c><00:30:36.550><c> the</c><00:30:36.760><c> object</c>

00:30:37.130 --> 00:30:37.140 align:start position:0%
can change the nature of the object
 

00:30:37.140 --> 00:30:40.020 align:start position:0%
can change the nature of the object
probably<00:30:38.140><c> change</c><00:30:39.070><c> a</c><00:30:39.190><c> string</c><00:30:39.430><c> into</c><00:30:39.850><c> an</c><00:30:39.940><c> integer</c>

00:30:40.020 --> 00:30:40.030 align:start position:0%
probably change a string into an integer
 

00:30:40.030 --> 00:30:42.630 align:start position:0%
probably change a string into an integer
or<00:30:40.450><c> person</c><00:30:41.260><c> into</c><00:30:41.560><c> the</c><00:30:41.800><c> name</c><00:30:41.950><c> of</c><00:30:42.070><c> that</c><00:30:42.190><c> person</c>

00:30:42.630 --> 00:30:42.640 align:start position:0%
or person into the name of that person
 

00:30:42.640 --> 00:30:44.820 align:start position:0%
or person into the name of that person
it<00:30:42.970><c> will</c><00:30:43.210><c> most</c><00:30:43.420><c> probably</c><00:30:43.510><c> change</c><00:30:44.140><c> the</c><00:30:44.230><c> salted</c>

00:30:44.820 --> 00:30:44.830 align:start position:0%
it will most probably change the salted
 

00:30:44.830 --> 00:30:47.490 align:start position:0%
it will most probably change the salted
nature<00:30:45.190><c> of</c><00:30:45.550><c> that</c><00:30:45.760><c> stream</c><00:30:46.090><c> so</c><00:30:46.810><c> this</c><00:30:46.990><c> time</c><00:30:47.260><c> watch</c>

00:30:47.490 --> 00:30:47.500 align:start position:0%
nature of that stream so this time watch
 

00:30:47.500 --> 00:30:49.890 align:start position:0%
nature of that stream so this time watch
what<00:30:47.950><c> I</c><00:30:47.980><c> should</c><00:30:48.310><c> save</c><00:30:48.550><c> for</c><00:30:48.790><c> this</c><00:30:48.880><c> potato</c><00:30:49.150><c> is</c>

00:30:49.890 --> 00:30:49.900 align:start position:0%
what I should save for this potato is
 

00:30:49.900 --> 00:30:52.320 align:start position:0%
what I should save for this potato is
that<00:30:50.170><c> the</c><00:30:50.260><c> produced</c><00:30:50.710><c> stream</c><00:30:51.190><c> is</c><00:30:51.460><c> not</c><00:30:51.850><c> sorted</c>

00:30:52.320 --> 00:30:52.330 align:start position:0%
that the produced stream is not sorted
 

00:30:52.330 --> 00:30:55.470 align:start position:0%
that the produced stream is not sorted
in<00:30:52.600><c> any</c><00:30:52.870><c> case</c><00:30:53.140><c> and</c><00:30:53.440><c> to</c><00:30:54.250><c> do</c><00:30:54.400><c> that</c><00:30:54.550><c> I</c><00:30:54.910><c> need</c><00:30:55.270><c> to</c>

00:30:55.470 --> 00:30:55.480 align:start position:0%
in any case and to do that I need to
 

00:30:55.480 --> 00:30:59.220 align:start position:0%
in any case and to do that I need to
touch<00:30:55.810><c> these</c><00:30:56.580><c> characteristics</c><00:30:57.840><c> method</c><00:30:58.840><c> here</c>

00:30:59.220 --> 00:30:59.230 align:start position:0%
touch these characteristics method here
 

00:30:59.230 --> 00:31:02.840 align:start position:0%
touch these characteristics method here
in<00:30:59.770><c> fact</c><00:31:00.070><c> this</c><00:31:00.250><c> characteristic</c><00:31:00.910><c> subject</c><00:31:01.510><c> is</c><00:31:02.080><c> a</c>

00:31:02.840 --> 00:31:02.850 align:start position:0%
in fact this characteristic subject is a
 

00:31:02.850 --> 00:31:07.350 align:start position:0%
in fact this characteristic subject is a
word<00:31:03.870><c> field</c><00:31:04.870><c> of</c><00:31:05.020><c> bits</c><00:31:05.260><c> and</c><00:31:05.500><c> each</c><00:31:05.950><c> bit</c><00:31:06.400><c> each</c><00:31:07.120><c> bit</c>

00:31:07.350 --> 00:31:07.360 align:start position:0%
word field of bits and each bit each bit
 

00:31:07.360 --> 00:31:10.050 align:start position:0%
word field of bits and each bit each bit
of<00:31:07.510><c> this</c><00:31:07.630><c> word</c><00:31:07.900><c> has</c><00:31:08.110><c> a</c><00:31:08.230><c> meaning</c><00:31:08.700><c> there</c><00:31:09.700><c> is</c><00:31:09.730><c> one</c>

00:31:10.050 --> 00:31:10.060 align:start position:0%
of this word has a meaning there is one
 

00:31:10.060 --> 00:31:13.200 align:start position:0%
of this word has a meaning there is one
that<00:31:10.300><c> is</c><00:31:10.450><c> the</c><00:31:10.660><c> sorted</c><00:31:11.080><c> bit</c><00:31:11.640><c> so</c><00:31:12.640><c> if</c><00:31:12.730><c> I</c><00:31:12.850><c> want</c><00:31:13.060><c> to</c>

00:31:13.200 --> 00:31:13.210 align:start position:0%
that is the sorted bit so if I want to
 

00:31:13.210 --> 00:31:16.440 align:start position:0%
that is the sorted bit so if I want to
say<00:31:13.420><c> that</c><00:31:13.770><c> this</c><00:31:15.120><c> characteristics</c><00:31:16.120><c> are</c><00:31:16.240><c> not</c>

00:31:16.440 --> 00:31:16.450 align:start position:0%
say that this characteristics are not
 

00:31:16.450 --> 00:31:19.370 align:start position:0%
say that this characteristics are not
sorted<00:31:16.870><c> anymore</c><00:31:17.290><c> I</c><00:31:17.530><c> need</c><00:31:18.340><c> to</c>

00:31:19.370 --> 00:31:19.380 align:start position:0%
sorted anymore I need to
 

00:31:19.380 --> 00:31:22.760 align:start position:0%
sorted anymore I need to
at<00:31:19.890><c> the</c><00:31:20.430><c> logical</c><00:31:20.880><c> end</c><00:31:21.030><c> with</c><00:31:21.540><c> it</c><00:31:21.720><c> to</c><00:31:22.200><c> set</c><00:31:22.470><c> the</c>

00:31:22.760 --> 00:31:22.770 align:start position:0%
at the logical end with it to set the
 

00:31:22.770 --> 00:31:25.790 align:start position:0%
at the logical end with it to set the
sorted<00:31:23.130><c> bit</c><00:31:23.310><c> to</c><00:31:23.700><c> zero</c><00:31:23.970><c> and</c><00:31:24.390><c> this</c><00:31:25.140><c> is</c><00:31:25.200><c> the</c><00:31:25.560><c> right</c>

00:31:25.790 --> 00:31:25.800 align:start position:0%
sorted bit to zero and this is the right
 

00:31:25.800 --> 00:31:28.940 align:start position:0%
sorted bit to zero and this is the right
way<00:31:26.010><c> of</c><00:31:26.250><c> doing</c><00:31:26.940><c> it</c><00:31:27.200><c> the</c><00:31:28.200><c> repeating</c><00:31:28.680><c> speed</c>

00:31:28.940 --> 00:31:28.950 align:start position:0%
way of doing it the repeating speed
 

00:31:28.950 --> 00:31:32.920 align:start position:0%
way of doing it the repeating speed
generator<00:31:29.310><c> would</c><00:31:29.820><c> probably</c><00:31:30.300><c> not</c><00:31:30.450><c> change</c><00:31:30.890><c> the</c>

00:31:32.920 --> 00:31:32.930 align:start position:0%
generator would probably not change the
 

00:31:32.930 --> 00:31:36.860 align:start position:0%
generator would probably not change the
thus<00:31:33.930><c> altered</c><00:31:34.350><c> the</c><00:31:35.010><c> nature</c><00:31:35.040><c> of</c><00:31:35.640><c> this</c><00:31:36.090><c> of</c><00:31:36.660><c> this</c>

00:31:36.860 --> 00:31:36.870 align:start position:0%
thus altered the nature of this of this
 

00:31:36.870 --> 00:31:40.100 align:start position:0%
thus altered the nature of this of this
trimmer<00:31:37.290><c> and</c><00:31:37.880><c> I</c><00:31:38.880><c> think</c><00:31:39.210><c> that's</c><00:31:39.360><c> it</c><00:31:39.540><c> so</c><00:31:39.900><c> if</c><00:31:39.990><c> I</c>

00:31:40.100 --> 00:31:40.110 align:start position:0%
trimmer and I think that's it so if I
 

00:31:40.110 --> 00:31:44.300 align:start position:0%
trimmer and I think that's it so if I
run<00:31:40.260><c> this</c><00:31:40.320><c> code</c><00:31:40.620><c> again</c><00:31:41.450><c> now</c><00:31:42.450><c> I</c><00:31:42.750><c> have</c><00:31:43.170><c> fixed</c><00:31:43.950><c> all</c>

00:31:44.300 --> 00:31:44.310 align:start position:0%
run this code again now I have fixed all
 

00:31:44.310 --> 00:31:47.990 align:start position:0%
run this code again now I have fixed all
my<00:31:45.180><c> streams</c><00:31:45.600><c> either</c><00:31:46.230><c> it's</c><00:31:46.530><c> not</c><00:31:46.980><c> so</c><00:31:47.250><c> non</c><00:31:47.550><c> sorted</c>

00:31:47.990 --> 00:31:48.000 align:start position:0%
my streams either it's not so non sorted
 

00:31:48.000 --> 00:31:50.180 align:start position:0%
my streams either it's not so non sorted
either<00:31:48.270><c> it's</c><00:31:48.600><c> sorted</c><00:31:49.050><c> and</c><00:31:49.170><c> it</c><00:31:49.470><c> can</c><00:31:49.920><c> provide</c>

00:31:50.180 --> 00:31:50.190 align:start position:0%
either it's sorted and it can provide
 

00:31:50.190 --> 00:31:52.130 align:start position:0%
either it's sorted and it can provide
the<00:31:50.310><c> comparator</c><00:31:50.790><c> so</c><00:31:51.300><c> now</c><00:31:51.450><c> I</c><00:31:51.480><c> do</c><00:31:51.630><c> not</c><00:31:51.810><c> have</c><00:31:51.870><c> the</c>

00:31:52.130 --> 00:31:52.140 align:start position:0%
the comparator so now I do not have the
 

00:31:52.140 --> 00:31:55.400 align:start position:0%
the comparator so now I do not have the
back<00:31:52.290><c> anymore</c><00:31:53.690><c> but</c><00:31:54.690><c> I</c><00:31:54.720><c> still</c><00:31:54.870><c> have</c><00:31:55.380><c> another</c>

00:31:55.400 --> 00:31:55.410 align:start position:0%
back anymore but I still have another
 

00:31:55.410 --> 00:31:57.890 align:start position:0%
back anymore but I still have another
bug<00:31:55.920><c> in</c><00:31:56.280><c> this</c><00:31:56.460><c> code</c><00:31:56.520><c> beside</c><00:31:57.450><c> the</c><00:31:57.570><c> fact</c><00:31:57.750><c> that</c>

00:31:57.890 --> 00:31:57.900 align:start position:0%
bug in this code beside the fact that
 

00:31:57.900 --> 00:32:01.190 align:start position:0%
bug in this code beside the fact that
I'm<00:31:58.080><c> calling</c><00:31:58.370><c> accept</c><00:31:59.370><c> twice</c><00:31:59.760><c> I</c><00:32:00.090><c> really</c><00:32:01.020><c> think</c>

00:32:01.190 --> 00:32:01.200 align:start position:0%
I'm calling accept twice I really think
 

00:32:01.200 --> 00:32:06.140 align:start position:0%
I'm calling accept twice I really think
I<00:32:01.290><c> can</c><00:32:04.160><c> which</c><00:32:05.160><c> is</c><00:32:05.310><c> which</c><00:32:05.520><c> is</c><00:32:05.670><c> the</c><00:32:05.760><c> following</c>

00:32:06.140 --> 00:32:06.150 align:start position:0%
I can which is which is the following
 

00:32:06.150 --> 00:32:08.420 align:start position:0%
I can which is which is the following
when<00:32:06.900><c> I'm</c><00:32:07.020><c> when</c><00:32:07.260><c> I'm</c><00:32:07.350><c> closing</c><00:32:07.860><c> a</c><00:32:07.950><c> stream</c><00:32:08.280><c> in</c>

00:32:08.420 --> 00:32:08.430 align:start position:0%
when I'm when I'm closing a stream in
 

00:32:08.430 --> 00:32:12.440 align:start position:0%
when I'm when I'm closing a stream in
fact<00:32:09.170><c> let</c><00:32:10.170><c> me</c><00:32:10.200><c> what</c><00:32:11.100><c> can</c><00:32:11.280><c> I</c><00:32:11.370><c> do</c><00:32:11.430><c> here</c><00:32:11.850><c> let</c><00:32:12.420><c> me</c>

00:32:12.440 --> 00:32:12.450 align:start position:0%
fact let me what can I do here let me
 

00:32:12.450 --> 00:32:16.760 align:start position:0%
fact let me what can I do here let me
just<00:32:14.720><c> comment</c><00:32:15.720><c> this</c><00:32:15.870><c> code</c><00:32:16.200><c> for</c><00:32:16.410><c> the</c><00:32:16.470><c> moment</c>

00:32:16.760 --> 00:32:16.770 align:start position:0%
just comment this code for the moment
 

00:32:16.770 --> 00:32:19.040 align:start position:0%
just comment this code for the moment
like<00:32:17.220><c> that</c><00:32:17.450><c> we'll</c><00:32:18.450><c> come</c><00:32:18.630><c> back</c><00:32:18.780><c> to</c><00:32:18.900><c> it</c><00:32:19.020><c> later</c>

00:32:19.040 --> 00:32:19.050 align:start position:0%
like that we'll come back to it later
 

00:32:19.050 --> 00:32:24.050 align:start position:0%
like that we'll come back to it later
and<00:32:19.560><c> just</c><00:32:20.450><c> produce</c><00:32:21.450><c> the</c><00:32:22.380><c> stream</c><00:32:22.800><c> here</c><00:32:23.730><c> and</c><00:32:23.910><c> I'm</c>

00:32:24.050 --> 00:32:24.060 align:start position:0%
and just produce the stream here and I'm
 

00:32:24.060 --> 00:32:26.930 align:start position:0%
and just produce the stream here and I'm
going<00:32:24.300><c> to</c><00:32:24.470><c> to</c><00:32:25.470><c> just</c><00:32:25.740><c> to</c><00:32:25.890><c> print</c><00:32:26.250><c> out</c><00:32:26.430><c> the</c><00:32:26.610><c> result</c>

00:32:26.930 --> 00:32:26.940 align:start position:0%
going to to just to print out the result
 

00:32:26.940 --> 00:32:31.660 align:start position:0%
going to to just to print out the result
of<00:32:27.060><c> that</c><00:32:27.150><c> stream</c><00:32:27.770><c> system</c><00:32:28.770><c> that</c><00:32:28.980><c> I</c><00:32:29.160><c> would</c>

00:32:31.660 --> 00:32:31.670 align:start position:0%
 
 

00:32:31.670 --> 00:32:35.180 align:start position:0%
 
printer<00:32:33.170><c> so</c><00:32:34.170><c> if</c><00:32:34.290><c> I</c><00:32:34.410><c> run</c><00:32:34.560><c> this</c><00:32:34.710><c> code</c><00:32:34.770><c> it</c><00:32:35.040><c> will</c>

00:32:35.180 --> 00:32:35.190 align:start position:0%
printer so if I run this code it will
 

00:32:35.190 --> 00:32:36.770 align:start position:0%
printer so if I run this code it will
print<00:32:35.370><c> out</c><00:32:35.520><c> the</c><00:32:35.640><c> result</c><00:32:35.940><c> we</c><00:32:36.450><c> all</c><00:32:36.540><c> know</c><00:32:36.630><c> that</c>

00:32:36.770 --> 00:32:36.780 align:start position:0%
print out the result we all know that
 

00:32:36.780 --> 00:32:40.820 align:start position:0%
print out the result we all know that
but<00:32:36.960><c> what</c><00:32:37.200><c> I</c><00:32:37.230><c> can</c><00:32:37.380><c> do</c><00:32:38.030><c> is</c><00:32:39.030><c> set</c><00:32:39.570><c> a</c><00:32:39.600><c> callback</c><00:32:39.990><c> on</c>

00:32:40.820 --> 00:32:40.830 align:start position:0%
but what I can do is set a callback on
 

00:32:40.830 --> 00:32:43.400 align:start position:0%
but what I can do is set a callback on
the<00:32:41.160><c> close</c><00:32:41.520><c> method</c><00:32:41.820><c> on</c><00:32:42.180><c> a</c><00:32:42.210><c> close</c><00:32:42.510><c> call</c><00:32:42.810><c> of</c><00:32:43.140><c> that</c>

00:32:43.400 --> 00:32:43.410 align:start position:0%
the close method on a close call of that
 

00:32:43.410 --> 00:32:49.000 align:start position:0%
the close method on a close call of that
stream<00:32:43.710><c> sorry</c><00:32:44.400><c> let</c><00:32:45.240><c> me</c><00:32:45.270><c> put</c><00:32:45.990><c> this</c><00:32:46.200><c> in</c><00:32:46.800><c> variable</c>

00:32:49.000 --> 00:32:49.010 align:start position:0%
stream sorry let me put this in variable
 

00:32:49.010 --> 00:32:55.220 align:start position:0%
stream sorry let me put this in variable
right<00:32:51.470><c> call</c><00:32:52.640><c> stream</c><00:32:53.640><c> on</c><00:32:53.940><c> closer</c><00:32:54.420><c> provide</c><00:32:55.200><c> a</c>

00:32:55.220 --> 00:32:55.230 align:start position:0%
right call stream on closer provide a
 

00:32:55.230 --> 00:33:03.820 align:start position:0%
right call stream on closer provide a
runnable<00:32:55.740><c> for</c><00:32:56.700><c> instance</c><00:32:59.930><c> system</c><00:33:00.930><c> out</c><00:33:02.390><c> closing</c>

00:33:03.820 --> 00:33:03.830 align:start position:0%
runnable for instance system out closing
 

00:33:03.830 --> 00:33:11.450 align:start position:0%
runnable for instance system out closing
okay<00:33:04.830><c> and</c><00:33:05.250><c> closer</c><00:33:07.460><c> explicitly</c><00:33:08.900><c> and</c><00:33:10.310><c> call</c><00:33:11.310><c> the</c>

00:33:11.450 --> 00:33:11.460 align:start position:0%
okay and closer explicitly and call the
 

00:33:11.460 --> 00:33:13.040 align:start position:0%
okay and closer explicitly and call the
close<00:33:11.700><c> method</c><00:33:11.850><c> on</c><00:33:12.180><c> that</c><00:33:12.210><c> stream</c><00:33:12.570><c> if</c><00:33:12.780><c> I</c><00:33:12.870><c> run</c>

00:33:13.040 --> 00:33:13.050 align:start position:0%
close method on that stream if I run
 

00:33:13.050 --> 00:33:16.850 align:start position:0%
close method on that stream if I run
this<00:33:13.170><c> code</c><00:33:14.540><c> then</c><00:33:15.540><c> I</c><00:33:15.810><c> will</c><00:33:16.110><c> have</c><00:33:16.290><c> all</c><00:33:16.590><c> the</c>

00:33:16.850 --> 00:33:16.860 align:start position:0%
this code then I will have all the
 

00:33:16.860 --> 00:33:18.980 align:start position:0%
this code then I will have all the
content<00:33:17.160><c> of</c><00:33:17.370><c> the</c><00:33:17.460><c> streamer</c><00:33:17.820><c> displayed</c><00:33:18.630><c> here</c>

00:33:18.980 --> 00:33:18.990 align:start position:0%
content of the streamer displayed here
 

00:33:18.990 --> 00:33:22.220 align:start position:0%
content of the streamer displayed here
and<00:33:19.200><c> the</c><00:33:19.800><c> closing</c><00:33:20.130><c> method</c><00:33:20.940><c> the</c><00:33:21.690><c> closing</c>

00:33:22.220 --> 00:33:22.230 align:start position:0%
and the closing method the closing
 

00:33:22.230 --> 00:33:24.350 align:start position:0%
and the closing method the closing
message<00:33:22.380><c> appearing</c><00:33:23.070><c> since</c><00:33:23.850><c> this</c><00:33:24.120><c> callback</c>

00:33:24.350 --> 00:33:24.360 align:start position:0%
message appearing since this callback
 

00:33:24.360 --> 00:33:28.700 align:start position:0%
message appearing since this callback
has<00:33:24.810><c> been</c><00:33:25.380><c> called</c><00:33:26.040><c> here</c><00:33:26.480><c> now</c><00:33:27.480><c> if</c><00:33:27.780><c> I</c><00:33:28.020><c> keep</c><00:33:28.470><c> this</c>

00:33:28.700 --> 00:33:28.710 align:start position:0%
has been called here now if I keep this
 

00:33:28.710 --> 00:33:30.499 align:start position:0%
has been called here now if I keep this
callback<00:33:29.160><c> here</c><00:33:29.490><c> so</c><00:33:29.880><c> now</c>

00:33:30.499 --> 00:33:30.509 align:start position:0%
callback here so now
 

00:33:30.509 --> 00:33:33.709 align:start position:0%
callback here so now
we<00:33:30.629><c> get</c><00:33:31.139><c> rid</c><00:33:31.289><c> of</c><00:33:31.349><c> this</c><00:33:31.559><c> code</c><00:33:31.829><c> and</c><00:33:32.190><c> and</c><00:33:33.179><c> come</c><00:33:33.599><c> on</c>

00:33:33.709 --> 00:33:33.719 align:start position:0%
we get rid of this code and and come on
 

00:33:33.719 --> 00:33:50.060 align:start position:0%
we get rid of this code and and come on
that<00:33:37.099><c> all</c><00:33:38.099><c> right</c><00:33:38.309><c> so</c><00:33:43.129><c> here</c><00:33:47.239><c> I'm</c><00:33:48.239><c> going</c><00:33:48.479><c> to</c><00:33:49.070><c> fall</c>

00:33:50.060 --> 00:33:50.070 align:start position:0%
that all right so here I'm going to fall
 

00:33:50.070 --> 00:33:51.759 align:start position:0%
that all right so here I'm going to fall
back<00:33:50.249><c> to</c><00:33:50.279><c> this</c><00:33:50.609><c> stream</c><00:33:50.999><c> here</c>

00:33:51.759 --> 00:33:51.769 align:start position:0%
back to this stream here
 

00:33:51.769 --> 00:33:54.589 align:start position:0%
back to this stream here
Cora<00:33:52.769><c> stream</c><00:33:53.129><c> to</c><00:33:53.369><c> there</c><00:33:53.579><c> under</c><00:33:54.119><c> stream</c><00:33:54.419><c> to</c>

00:33:54.589 --> 00:33:54.599 align:start position:0%
Cora stream to there under stream to
 

00:33:54.599 --> 00:34:01.430 align:start position:0%
Cora stream to there under stream to
there<00:33:55.129><c> if</c><00:33:56.129><c> I</c><00:33:56.719><c> close</c><00:33:57.719><c> my</c><00:33:57.749><c> stream</c><00:33:58.619><c> to</c><00:33:59.329><c> here</c><00:34:00.329><c> I</c><00:34:00.629><c> set</c>

00:34:01.430 --> 00:34:01.440 align:start position:0%
there if I close my stream to here I set
 

00:34:01.440 --> 00:34:03.259 align:start position:0%
there if I close my stream to here I set
up<00:34:01.469><c> a</c><00:34:01.739><c> callback</c><00:34:01.979><c> did</c><00:34:02.279><c> I</c><00:34:02.339><c> set</c><00:34:02.549><c> up</c><00:34:02.579><c> a</c><00:34:02.759><c> callback</c>

00:34:03.259 --> 00:34:03.269 align:start position:0%
up a callback did I set up a callback
 

00:34:03.269 --> 00:34:05.180 align:start position:0%
up a callback did I set up a callback
yes<00:34:03.449><c> the</c><00:34:03.749><c> set</c><00:34:03.959><c> up</c><00:34:04.109><c> the</c><00:34:04.319><c> callback</c><00:34:04.649><c> is</c><00:34:04.829><c> set</c><00:34:05.039><c> up</c>

00:34:05.180 --> 00:34:05.190 align:start position:0%
yes the set up the callback is set up
 

00:34:05.190 --> 00:34:07.549 align:start position:0%
yes the set up the callback is set up
here<00:34:05.489><c> this</c><00:34:06.209><c> tree</c><00:34:06.479><c> set</c><00:34:06.690><c> is</c><00:34:06.869><c> not</c><00:34:07.049><c> used</c><00:34:07.289><c> anymore</c>

00:34:07.549 --> 00:34:07.559 align:start position:0%
here this tree set is not used anymore
 

00:34:07.559 --> 00:34:10.730 align:start position:0%
here this tree set is not used anymore
and<00:34:08.009><c> I'm</c><00:34:08.669><c> just</c><00:34:08.909><c> creating</c><00:34:09.240><c> this</c><00:34:09.809><c> predator</c><00:34:10.379><c> on</c>

00:34:10.730 --> 00:34:10.740 align:start position:0%
and I'm just creating this predator on
 

00:34:10.740 --> 00:34:13.879 align:start position:0%
and I'm just creating this predator on
this<00:34:11.129><c> stream</c><00:34:11.519><c> here</c><00:34:12.119><c> and</c><00:34:12.329><c> calling</c><00:34:13.230><c> the</c><00:34:13.470><c> close</c>

00:34:13.879 --> 00:34:13.889 align:start position:0%
this stream here and calling the close
 

00:34:13.889 --> 00:34:16.190 align:start position:0%
this stream here and calling the close
method<00:34:14.129><c> of</c><00:34:14.519><c> the</c><00:34:14.849><c> of</c><00:34:15.119><c> the</c><00:34:15.389><c> stream</c><00:34:15.659><c> I</c><00:34:15.779><c> have</c><00:34:15.809><c> built</c>

00:34:16.190 --> 00:34:16.200 align:start position:0%
method of the of the stream I have built
 

00:34:16.200 --> 00:34:19.180 align:start position:0%
method of the of the stream I have built
on<00:34:16.319><c> this</c><00:34:16.500><c> one</c><00:34:16.679><c> but</c><00:34:17.159><c> if</c><00:34:17.250><c> I</c><00:34:17.399><c> if</c><00:34:17.970><c> I</c><00:34:18.210><c> run</c><00:34:18.450><c> this</c><00:34:18.599><c> code</c>

00:34:19.180 --> 00:34:19.190 align:start position:0%
on this one but if I if I run this code
 

00:34:19.190 --> 00:34:22.129 align:start position:0%
on this one but if I if I run this code
in<00:34:20.190><c> fact</c><00:34:20.429><c> this</c><00:34:21.119><c> code</c><00:34:21.450><c> the</c><00:34:21.569><c> callback</c><00:34:21.899><c> of</c><00:34:22.049><c> the</c>

00:34:22.129 --> 00:34:22.139 align:start position:0%
in fact this code the callback of the
 

00:34:22.139 --> 00:34:25.159 align:start position:0%
in fact this code the callback of the
first<00:34:22.440><c> stream</c><00:34:22.769><c> is</c><00:34:23.519><c> not</c><00:34:23.789><c> cold</c><00:34:24.029><c> anymore</c><00:34:24.119><c> and</c><00:34:24.659><c> it</c>

00:34:25.159 --> 00:34:25.169 align:start position:0%
first stream is not cold anymore and it
 

00:34:25.169 --> 00:34:27.049 align:start position:0%
first stream is not cold anymore and it
should<00:34:25.409><c> be</c><00:34:25.559><c> since</c><00:34:25.919><c> it's</c><00:34:26.279><c> a</c><00:34:26.399><c> callback</c><00:34:26.609><c> and</c><00:34:26.940><c> all</c>

00:34:27.049 --> 00:34:27.059 align:start position:0%
should be since it's a callback and all
 

00:34:27.059 --> 00:34:28.639 align:start position:0%
should be since it's a callback and all
the<00:34:27.210><c> streams</c><00:34:27.509><c> should</c><00:34:27.569><c> should</c><00:34:28.139><c> call</c><00:34:28.470><c> that</c>

00:34:28.639 --> 00:34:28.649 align:start position:0%
the streams should should call that
 

00:34:28.649 --> 00:34:30.859 align:start position:0%
the streams should should call that
close<00:34:28.889><c> method</c><00:34:29.099><c> themselves</c><00:34:29.700><c> so</c><00:34:30.210><c> every</c><00:34:30.659><c> time</c><00:34:30.809><c> I</c>

00:34:30.859 --> 00:34:30.869 align:start position:0%
close method themselves so every time I
 

00:34:30.869 --> 00:34:33.919 align:start position:0%
close method themselves so every time I
am<00:34:31.139><c> creating</c><00:34:31.919><c> a</c><00:34:32.339><c> stream</c><00:34:33.240><c> like</c><00:34:33.450><c> that</c><00:34:33.599><c> on</c><00:34:33.869><c> a</c>

00:34:33.919 --> 00:34:33.929 align:start position:0%
am creating a stream like that on a
 

00:34:33.929 --> 00:34:36.289 align:start position:0%
am creating a stream like that on a
splitter<00:34:34.289><c> ater</c><00:34:34.759><c> what</c><00:34:35.759><c> I</c><00:34:35.789><c> should</c><00:34:36.119><c> be</c><00:34:36.269><c> doing</c>

00:34:36.289 --> 00:34:36.299 align:start position:0%
splitter ater what I should be doing
 

00:34:36.299 --> 00:34:43.069 align:start position:0%
splitter ater what I should be doing
really<00:34:36.720><c> is</c><00:34:37.589><c> a</c><00:34:38.480><c> stream</c><00:34:39.480><c> to</c><00:34:41.149><c> call</c><00:34:42.149><c> the</c><00:34:42.299><c> on</c><00:34:42.539><c> close</c>

00:34:43.069 --> 00:34:43.079 align:start position:0%
really is a stream to call the on close
 

00:34:43.079 --> 00:34:49.249 align:start position:0%
really is a stream to call the on close
and<00:34:43.440><c> call</c><00:34:44.009><c> the</c><00:34:44.159><c> streamer</c><00:34:46.309><c> close</c><00:34:47.309><c> method</c><00:34:48.259><c> of</c>

00:34:49.249 --> 00:34:49.259 align:start position:0%
and call the streamer close method of
 

00:34:49.259 --> 00:34:52.460 align:start position:0%
and call the streamer close method of
the<00:34:49.470><c> other</c><00:34:49.649><c> stream</c><00:34:50.099><c> my</c><00:34:50.990><c> splitter</c><00:34:51.990><c> ater</c><00:34:52.230><c> have</c>

00:34:52.460 --> 00:34:52.470 align:start position:0%
the other stream my splitter ater have
 

00:34:52.470 --> 00:34:55.220 align:start position:0%
the other stream my splitter ater have
been<00:34:52.679><c> created</c><00:34:53.129><c> on</c><00:34:53.429><c> this</c><00:34:54.269><c> splitter</c><00:34:54.720><c> Reiter</c><00:34:54.929><c> is</c>

00:34:55.220 --> 00:34:55.230 align:start position:0%
been created on this splitter Reiter is
 

00:34:55.230 --> 00:34:57.680 align:start position:0%
been created on this splitter Reiter is
created<00:34:55.919><c> on</c><00:34:56.039><c> the</c><00:34:56.159><c> stream</c><00:34:56.460><c> then</c><00:34:57.180><c> all</c><00:34:57.390><c> the</c><00:34:57.539><c> other</c>

00:34:57.680 --> 00:34:57.690 align:start position:0%
created on the stream then all the other
 

00:34:57.690 --> 00:34:59.390 align:start position:0%
created on the stream then all the other
splitter<00:34:58.049><c> raters</c><00:34:58.410><c> are</c><00:34:58.559><c> created</c><00:34:58.950><c> on</c><00:34:59.039><c> this</c><00:34:59.190><c> one</c>

00:34:59.390 --> 00:34:59.400 align:start position:0%
splitter raters are created on this one
 

00:34:59.400 --> 00:35:02.420 align:start position:0%
splitter raters are created on this one
right<00:35:00.329><c> so</c><00:35:00.960><c> this</c><00:35:01.170><c> is</c><00:35:01.230><c> the</c><00:35:01.529><c> stream</c><00:35:01.859><c> that</c><00:35:02.069><c> I</c><00:35:02.099><c> need</c>

00:35:02.420 --> 00:35:02.430 align:start position:0%
right so this is the stream that I need
 

00:35:02.430 --> 00:35:06.529 align:start position:0%
right so this is the stream that I need
to<00:35:03.150><c> to</c><00:35:03.509><c> to</c><00:35:03.920><c> the</c><00:35:04.920><c> callback</c><00:35:05.250><c> has</c><00:35:05.400><c> been</c><00:35:05.579><c> defined</c>

00:35:06.529 --> 00:35:06.539 align:start position:0%
to to to the callback has been defined
 

00:35:06.539 --> 00:35:09.230 align:start position:0%
to to to the callback has been defined
on<00:35:06.779><c> this</c><00:35:06.960><c> dreamer</c><00:35:07.349><c> and</c><00:35:07.710><c> closing</c><00:35:08.640><c> that</c><00:35:08.670><c> stream</c>

00:35:09.230 --> 00:35:09.240 align:start position:0%
on this dreamer and closing that stream
 

00:35:09.240 --> 00:35:10.880 align:start position:0%
on this dreamer and closing that stream
created<00:35:09.720><c> on</c><00:35:09.839><c> the</c><00:35:09.930><c> other</c><00:35:09.990><c> one</c><00:35:10.259><c> should</c><00:35:10.680><c> also</c>

00:35:10.880 --> 00:35:10.890 align:start position:0%
created on the other one should also
 

00:35:10.890 --> 00:35:12.980 align:start position:0%
created on the other one should also
call<00:35:11.279><c> the</c><00:35:11.430><c> callback</c><00:35:11.640><c> of</c><00:35:11.910><c> this</c><00:35:12.029><c> one</c><00:35:12.240><c> so</c><00:35:12.779><c> now</c><00:35:12.930><c> if</c>

00:35:12.980 --> 00:35:12.990 align:start position:0%
call the callback of this one so now if
 

00:35:12.990 --> 00:35:18.140 align:start position:0%
call the callback of this one so now if
I<00:35:13.140><c> run</c><00:35:13.170><c> my</c><00:35:13.380><c> code</c><00:35:13.740><c> I</c><00:35:15.259><c> have</c><00:35:16.259><c> the</c><00:35:16.589><c> closing</c><00:35:17.150><c> method</c>

00:35:18.140 --> 00:35:18.150 align:start position:0%
I run my code I have the closing method
 

00:35:18.150 --> 00:35:21.220 align:start position:0%
I run my code I have the closing method
that<00:35:18.329><c> is</c><00:35:18.480><c> properly</c><00:35:18.900><c> called</c><00:35:19.170><c> so</c><00:35:20.160><c> in</c><00:35:20.279><c> fact</c><00:35:20.490><c> when</c>

00:35:21.220 --> 00:35:21.230 align:start position:0%
that is properly called so in fact when
 

00:35:21.230 --> 00:35:24.529 align:start position:0%
that is properly called so in fact when
implementing<00:35:22.230><c> a</c><00:35:22.470><c> splitter</c><00:35:22.859><c> ater</c><00:35:23.329><c> there</c><00:35:24.329><c> is</c>

00:35:24.529 --> 00:35:24.539 align:start position:0%
implementing a splitter ater there is
 

00:35:24.539 --> 00:35:26.749 align:start position:0%
implementing a splitter ater there is
the<00:35:24.750><c> technical</c><00:35:25.200><c> part</c><00:35:25.440><c> implementing</c><00:35:26.309><c> the</c><00:35:26.430><c> for</c>

00:35:26.749 --> 00:35:26.759 align:start position:0%
the technical part implementing the for
 

00:35:26.759 --> 00:35:29.390 align:start position:0%
the technical part implementing the for
abstract<00:35:27.329><c> method</c><00:35:27.750><c> that's</c><00:35:28.259><c> okay</c><00:35:28.559><c> we</c><00:35:28.829><c> saw</c><00:35:29.220><c> that</c>

00:35:29.390 --> 00:35:29.400 align:start position:0%
abstract method that's okay we saw that
 

00:35:29.400 --> 00:35:32.509 align:start position:0%
abstract method that's okay we saw that
but<00:35:29.970><c> I</c><00:35:30.029><c> also</c><00:35:30.420><c> need</c><00:35:30.750><c> to</c><00:35:30.960><c> be</c><00:35:31.079><c> sure</c><00:35:31.109><c> that</c><00:35:31.589><c> this</c><00:35:32.250><c> on</c>

00:35:32.509 --> 00:35:32.519 align:start position:0%
but I also need to be sure that this on
 

00:35:32.519 --> 00:35:35.180 align:start position:0%
but I also need to be sure that this on
close<00:35:32.940><c> method</c><00:35:33.289><c> should</c><00:35:34.289><c> the</c><00:35:34.680><c> on</c><00:35:34.799><c> close</c><00:35:35.009><c> method</c>

00:35:35.180 --> 00:35:35.190 align:start position:0%
close method should the on close method
 

00:35:35.190 --> 00:35:37.819 align:start position:0%
close method should the on close method
well<00:35:35.640><c> the</c><00:35:36.059><c> closing</c><00:35:36.509><c> callback</c><00:35:37.200><c> is</c><00:35:37.410><c> properly</c>

00:35:37.819 --> 00:35:37.829 align:start position:0%
well the closing callback is properly
 

00:35:37.829 --> 00:35:40.220 align:start position:0%
well the closing callback is properly
called<00:35:38.519><c> when</c><00:35:38.880><c> closing</c><00:35:39.210><c> the</c><00:35:39.450><c> new</c><00:35:39.660><c> stream</c><00:35:40.019><c> I'm</c>

00:35:40.220 --> 00:35:40.230 align:start position:0%
called when closing the new stream I'm
 

00:35:40.230 --> 00:35:42.829 align:start position:0%
called when closing the new stream I'm
creating<00:35:40.920><c> on</c><00:35:41.160><c> the</c><00:35:41.190><c> splitter</c><00:35:41.579><c> ater</c><00:35:41.789><c> and</c><00:35:42.269><c> I</c><00:35:42.599><c> also</c>

00:35:42.829 --> 00:35:42.839 align:start position:0%
creating on the splitter ater and I also
 

00:35:42.839 --> 00:35:44.440 align:start position:0%
creating on the splitter ater and I also
need<00:35:43.200><c> to</c><00:35:43.349><c> make</c><00:35:43.529><c> sure</c><00:35:43.559><c> that</c>

00:35:44.440 --> 00:35:44.450 align:start position:0%
need to make sure that
 

00:35:44.450 --> 00:35:47.109 align:start position:0%
need to make sure that
I am<00:35:44.630><c> probably</c><00:35:45.010><c> properly</c><00:35:46.010><c> and</c><00:35:46.130><c> linked</c><00:35:46.490><c> salted</c>

00:35:47.109 --> 00:35:47.119 align:start position:0%
I am probably properly and linked salted
 

00:35:47.119 --> 00:35:50.140 align:start position:0%
I am probably properly and linked salted
the<00:35:47.990><c> salted</c><00:35:48.320><c> stream</c><00:35:48.619><c> that</c><00:35:48.829><c> may</c><00:35:49.150><c> raise</c>

00:35:50.140 --> 00:35:50.150 align:start position:0%
the salted stream that may raise
 

00:35:50.150 --> 00:35:53.410 align:start position:0%
the salted stream that may raise
exception<00:35:50.690><c> if</c><00:35:50.869><c> if</c><00:35:51.650><c> I</c><00:35:51.829><c> do</c><00:35:52.250><c> not</c><00:35:52.609><c> handle</c><00:35:53.240><c> them</c>

00:35:53.410 --> 00:35:53.420 align:start position:0%
exception if if I do not handle them
 

00:35:53.420 --> 00:35:56.109 align:start position:0%
exception if if I do not handle them
properly<00:35:53.859><c> so</c><00:35:54.859><c> those</c><00:35:55.040><c> are</c><00:35:55.160><c> the</c><00:35:55.339><c> three</c><00:35:55.670><c> the</c><00:35:55.910><c> two</c>

00:35:56.109 --> 00:35:56.119 align:start position:0%
properly so those are the three the two
 

00:35:56.119 --> 00:36:00.609 align:start position:0%
properly so those are the three the two
main<00:35:56.720><c> traps</c><00:35:57.020><c> in</c><00:35:57.730><c> in</c><00:35:59.140><c> handling</c><00:36:00.140><c> those</c><00:36:00.320><c> streams</c>

00:36:00.609 --> 00:36:00.619 align:start position:0%
main traps in in handling those streams
 

00:36:00.619 --> 00:36:11.530 align:start position:0%
main traps in in handling those streams
in<00:36:00.770><c> fact</c><00:36:01.839><c> questions</c><00:36:02.839><c> yeah</c><00:36:09.400><c> yes</c><00:36:10.450><c> sometimes</c><00:36:11.450><c> you</c>

00:36:11.530 --> 00:36:11.540 align:start position:0%
in fact questions yeah yes sometimes you
 

00:36:11.540 --> 00:36:14.319 align:start position:0%
in fact questions yeah yes sometimes you
can<00:36:11.720><c> open</c><00:36:12.170><c> streams</c><00:36:12.560><c> on</c><00:36:12.950><c> our</c><00:36:13.280><c> resources</c><00:36:13.849><c> which</c>

00:36:14.319 --> 00:36:14.329 align:start position:0%
can open streams on our resources which
 

00:36:14.329 --> 00:36:16.000 align:start position:0%
can open streams on our resources which
is<00:36:14.480><c> the</c><00:36:14.599><c> case</c><00:36:14.810><c> for</c><00:36:14.839><c> the</c><00:36:15.200><c> bufferedreader</c><00:36:15.560><c> for</c>

00:36:16.000 --> 00:36:16.010 align:start position:0%
is the case for the bufferedreader for
 

00:36:16.010 --> 00:36:18.700 align:start position:0%
is the case for the bufferedreader for
instance<00:36:16.339><c> so</c><00:36:16.700><c> closing</c><00:36:17.349><c> calling</c><00:36:18.349><c> the</c><00:36:18.470><c> close</c>

00:36:18.700 --> 00:36:18.710 align:start position:0%
instance so closing calling the close
 

00:36:18.710 --> 00:36:21.400 align:start position:0%
instance so closing calling the close
method<00:36:18.920><c> on</c><00:36:19.400><c> the</c><00:36:19.550><c> stream</c><00:36:19.820><c> should</c><00:36:20.780><c> be</c><00:36:21.109><c> closing</c>

00:36:21.400 --> 00:36:21.410 align:start position:0%
method on the stream should be closing
 

00:36:21.410 --> 00:36:23.890 align:start position:0%
method on the stream should be closing
also<00:36:21.890><c> your</c><00:36:22.430><c> i/o</c><00:36:22.640><c> through</c><00:36:23.089><c> which</c><00:36:23.329><c> resource</c>

00:36:23.890 --> 00:36:23.900 align:start position:0%
also your i/o through which resource
 

00:36:23.900 --> 00:36:27.010 align:start position:0%
also your i/o through which resource
that<00:36:24.140><c> you</c><00:36:24.380><c> that</c><00:36:25.190><c> you've</c><00:36:25.339><c> been</c><00:36:25.490><c> using</c><00:36:25.780><c> in</c><00:36:26.780><c> fact</c>

00:36:27.010 --> 00:36:27.020 align:start position:0%
that you that you've been using in fact
 

00:36:27.020 --> 00:36:29.230 align:start position:0%
that you that you've been using in fact
the<00:36:27.140><c> stream</c><00:36:27.440><c> extends</c><00:36:28.250><c> auto</c><00:36:28.430><c> crucible</c><00:36:28.970><c> so</c><00:36:29.180><c> you</c>

00:36:29.230 --> 00:36:29.240 align:start position:0%
the stream extends auto crucible so you
 

00:36:29.240 --> 00:36:31.510 align:start position:0%
the stream extends auto crucible so you
can<00:36:29.480><c> use</c><00:36:29.690><c> a</c><00:36:29.720><c> stream</c><00:36:30.050><c> in</c><00:36:30.500><c> in</c><00:36:30.980><c> a</c><00:36:31.099><c> try</c><00:36:31.310><c> with</c>

00:36:31.510 --> 00:36:31.520 align:start position:0%
can use a stream in in a try with
 

00:36:31.520 --> 00:36:35.829 align:start position:0%
can use a stream in in a try with
resource<00:36:32.740><c> api</c><00:36:33.740><c> when</c><00:36:34.250><c> you're</c><00:36:34.400><c> just</c><00:36:34.839><c> calling</c>

00:36:35.829 --> 00:36:35.839 align:start position:0%
resource api when you're just calling
 

00:36:35.839 --> 00:36:37.569 align:start position:0%
resource api when you're just calling
streams<00:36:36.170><c> on</c><00:36:36.349><c> ArrayList</c><00:36:36.859><c> and</c><00:36:37.010><c> you</c><00:36:37.160><c> don't</c><00:36:37.369><c> call</c>

00:36:37.569 --> 00:36:37.579 align:start position:0%
streams on ArrayList and you don't call
 

00:36:37.579 --> 00:36:40.150 align:start position:0%
streams on ArrayList and you don't call
the<00:36:37.700><c> close</c><00:36:37.910><c> method</c><00:36:38.089><c> yourself</c><00:36:38.630><c> it</c><00:36:39.200><c> will</c><00:36:39.320><c> not</c><00:36:39.560><c> be</c>

00:36:40.150 --> 00:36:40.160 align:start position:0%
the close method yourself it will not be
 

00:36:40.160 --> 00:36:43.630 align:start position:0%
the close method yourself it will not be
very<00:36:40.339><c> very</c><00:36:41.089><c> harmful</c><00:36:41.390><c> but</c><00:36:41.720><c> if</c><00:36:41.900><c> you're</c><00:36:42.140><c> using</c><00:36:42.800><c> io</c>

00:36:43.630 --> 00:36:43.640 align:start position:0%
very very harmful but if you're using io
 

00:36:43.640 --> 00:36:46.060 align:start position:0%
very very harmful but if you're using io
resources<00:36:44.390><c> then</c><00:36:45.200><c> you</c><00:36:45.380><c> should</c><00:36:45.560><c> definitely</c><00:36:45.680><c> do</c>

00:36:46.060 --> 00:36:46.070 align:start position:0%
resources then you should definitely do
 

00:36:46.070 --> 00:36:53.890 align:start position:0%
resources then you should definitely do
that<00:36:47.440><c> other</c><00:36:48.440><c> questions</c><00:36:49.060><c> yeah</c>

00:36:53.890 --> 00:36:53.900 align:start position:0%
 
 

00:36:53.900 --> 00:36:56.180 align:start position:0%
 
does<00:36:54.900><c> the</c><00:36:55.080><c> splitter</c><00:36:55.380><c> return</c><00:36:55.740><c> needs</c><00:36:55.920><c> to</c><00:36:56.070><c> be</c>

00:36:56.180 --> 00:36:56.190 align:start position:0%
does the splitter return needs to be
 

00:36:56.190 --> 00:36:58.430 align:start position:0%
does the splitter return needs to be
thread-safe<00:36:56.490><c> it</c><00:36:56.910><c> really</c><00:36:57.210><c> depends</c><00:36:57.630><c> on</c><00:36:57.720><c> whether</c>

00:36:58.430 --> 00:36:58.440 align:start position:0%
thread-safe it really depends on whether
 

00:36:58.440 --> 00:37:02.990 align:start position:0%
thread-safe it really depends on whether
you<00:36:58.740><c> are</c><00:36:58.770><c> using</c><00:37:00.980><c> it</c><00:37:01.980><c> in</c><00:37:02.130><c> parallel</c><00:37:02.430><c> or</c><00:37:02.640><c> not</c><00:37:02.790><c> if</c>

00:37:02.990 --> 00:37:03.000 align:start position:0%
you are using it in parallel or not if
 

00:37:03.000 --> 00:37:05.000 align:start position:0%
you are using it in parallel or not if
you're<00:37:03.180><c> using</c><00:37:03.360><c> it</c><00:37:03.600><c> in</c><00:37:03.630><c> parallel</c><00:37:04.020><c> the</c><00:37:04.350><c> API</c><00:37:04.680><c> will</c>

00:37:05.000 --> 00:37:05.010 align:start position:0%
you're using it in parallel the API will
 

00:37:05.010 --> 00:37:08.180 align:start position:0%
you're using it in parallel the API will
call<00:37:05.280><c> this</c><00:37:06.030><c> tri</c><00:37:06.330><c> split</c><00:37:06.630><c> method</c><00:37:06.810><c> and</c><00:37:07.350><c> you</c>

00:37:08.180 --> 00:37:08.190 align:start position:0%
call this tri split method and you
 

00:37:08.190 --> 00:37:09.920 align:start position:0%
call this tri split method and you
should<00:37:08.430><c> be</c><00:37:08.610><c> returning</c><00:37:09.000><c> another</c><00:37:09.570><c> splitter</c>

00:37:09.920 --> 00:37:09.930 align:start position:0%
should be returning another splitter
 

00:37:09.930 --> 00:37:13.700 align:start position:0%
should be returning another splitter
later<00:37:10.230><c> on</c><00:37:10.530><c> a</c><00:37:10.590><c> portion</c><00:37:11.340><c> of</c><00:37:11.460><c> that</c><00:37:11.520><c> stream</c><00:37:12.380><c> so</c><00:37:13.380><c> in</c>

00:37:13.700 --> 00:37:13.710 align:start position:0%
later on a portion of that stream so in
 

00:37:13.710 --> 00:37:17.330 align:start position:0%
later on a portion of that stream so in
itself<00:37:15.020><c> it</c><00:37:16.020><c> depends</c><00:37:16.470><c> if</c><00:37:16.620><c> you</c><00:37:16.800><c> have</c><00:37:16.950><c> a</c><00:37:16.980><c> shared</c>

00:37:17.330 --> 00:37:17.340 align:start position:0%
itself it depends if you have a shared
 

00:37:17.340 --> 00:37:19.160 align:start position:0%
itself it depends if you have a shared
state<00:37:17.640><c> in</c><00:37:17.820><c> it</c><00:37:17.940><c> or</c><00:37:18.090><c> not</c><00:37:18.210><c> but</c><00:37:18.450><c> Denis</c><00:37:18.660><c> in</c><00:37:18.840><c> itself</c>

00:37:19.160 --> 00:37:19.170 align:start position:0%
state in it or not but Denis in itself
 

00:37:19.170 --> 00:37:20.720 align:start position:0%
state in it or not but Denis in itself
all<00:37:19.410><c> the</c><00:37:19.530><c> other</c><00:37:19.740><c> methods</c><00:37:20.250><c> that</c><00:37:20.280><c> do</c><00:37:20.460><c> not</c><00:37:20.580><c> need</c>

00:37:20.720 --> 00:37:20.730 align:start position:0%
all the other methods that do not need
 

00:37:20.730 --> 00:37:22.250 align:start position:0%
all the other methods that do not need
to<00:37:20.790><c> be</c><00:37:20.970><c> synchronized</c><00:37:21.180><c> and</c><00:37:21.690><c> should</c><00:37:22.080><c> not</c><00:37:22.200><c> be</c>

00:37:22.250 --> 00:37:22.260 align:start position:0%
to be synchronized and should not be
 

00:37:22.260 --> 00:37:27.230 align:start position:0%
to be synchronized and should not be
synchronized<00:37:22.830><c> by</c><00:37:23.820><c> default</c><00:37:25.790><c> all</c><00:37:26.790><c> right</c><00:37:27.000><c> I</c>

00:37:27.230 --> 00:37:27.240 align:start position:0%
synchronized by default all right I
 

00:37:27.240 --> 00:37:30.260 align:start position:0%
synchronized by default all right I
think<00:37:27.540><c> that</c><00:37:27.750><c> we</c><00:37:28.050><c> are</c><00:37:28.280><c> kind</c><00:37:29.280><c> of</c><00:37:29.460><c> running</c><00:37:30.120><c> out</c><00:37:30.210><c> of</c>

00:37:30.260 --> 00:37:30.270 align:start position:0%
think that we are kind of running out of
 

00:37:30.270 --> 00:37:34.130 align:start position:0%
think that we are kind of running out of
time<00:37:30.600><c> so</c><00:37:31.100><c> I</c><00:37:32.100><c> just</c><00:37:32.400><c> added</c><00:37:32.610><c> a</c><00:37:32.820><c> few</c><00:37:33.000><c> slides</c><00:37:33.300><c> as</c><00:37:34.080><c> a</c>

00:37:34.130 --> 00:37:34.140 align:start position:0%
time so I just added a few slides as a
 

00:37:34.140 --> 00:37:36.860 align:start position:0%
time so I just added a few slides as a
reference<00:37:34.650><c> the</c><00:37:35.370><c> different</c><00:37:35.790><c> meaning</c><00:37:36.630><c> of</c><00:37:36.780><c> the</c>

00:37:36.860 --> 00:37:36.870 align:start position:0%
reference the different meaning of the
 

00:37:36.870 --> 00:37:38.840 align:start position:0%
reference the different meaning of the
different<00:37:37.230><c> bits</c><00:37:37.440><c> of</c><00:37:37.650><c> this</c><00:37:38.010><c> characteristics</c>

00:37:38.840 --> 00:37:38.850 align:start position:0%
different bits of this characteristics
 

00:37:38.850 --> 00:37:42.460 align:start position:0%
different bits of this characteristics
word<00:37:39.090><c> we</c><00:37:39.480><c> just</c><00:37:39.510><c> saw</c><00:37:40.040><c> during</c><00:37:41.040><c> the</c><00:37:41.370><c> during</c><00:37:41.730><c> the</c>

00:37:42.460 --> 00:37:42.470 align:start position:0%
word we just saw during the during the
 

00:37:42.470 --> 00:37:45.200 align:start position:0%
word we just saw during the during the
the<00:37:43.470><c> the</c><00:37:43.770><c> live</c><00:37:43.950><c> coding</c><00:37:44.190><c> part</c><00:37:44.730><c> of</c><00:37:44.850><c> the</c><00:37:44.970><c> stuff</c>

00:37:45.200 --> 00:37:45.210 align:start position:0%
the the live coding part of the stuff
 

00:37:45.210 --> 00:37:48.680 align:start position:0%
the the live coding part of the stuff
they<00:37:45.780><c> are</c><00:37:45.810><c> basically</c><00:37:46.820><c> self-explanatory</c><00:37:47.820><c> and</c>

00:37:48.680 --> 00:37:48.690 align:start position:0%
they are basically self-explanatory and
 

00:37:48.690 --> 00:37:51.950 align:start position:0%
they are basically self-explanatory and
maybe<00:37:49.580><c> sighs</c><00:37:50.580><c> the</c><00:37:50.940><c> mean</c><00:37:51.360><c> that</c><00:37:51.600><c> you</c><00:37:51.840><c> are</c>

00:37:51.950 --> 00:37:51.960 align:start position:0%
maybe sighs the mean that you are
 

00:37:51.960 --> 00:37:54.920 align:start position:0%
maybe sighs the mean that you are
opening<00:37:52.740><c> a</c><00:37:52.890><c> splitter</c><00:37:53.190><c> later</c><00:37:53.460><c> on</c><00:37:53.940><c> a</c><00:37:54.000><c> structure</c>

00:37:54.920 --> 00:37:54.930 align:start position:0%
opening a splitter later on a structure
 

00:37:54.930 --> 00:37:57.620 align:start position:0%
opening a splitter later on a structure
that<00:37:55.470><c> knows</c><00:37:55.890><c> the</c><00:37:56.520><c> amount</c><00:37:56.820><c> of</c><00:37:56.970><c> element</c><00:37:57.330><c> it</c><00:37:57.450><c> will</c>

00:37:57.620 --> 00:37:57.630 align:start position:0%
that knows the amount of element it will
 

00:37:57.630 --> 00:37:59.960 align:start position:0%
that knows the amount of element it will
is<00:37:58.050><c> going</c><00:37:58.260><c> to</c><00:37:58.410><c> create</c><00:37:58.650><c> think</c><00:37:59.550><c> of</c><00:37:59.700><c> an</c><00:37:59.790><c> array</c>

00:37:59.960 --> 00:37:59.970 align:start position:0%
is going to create think of an array
 

00:37:59.970 --> 00:38:02.600 align:start position:0%
is going to create think of an array
list<00:38:00.150><c> for</c><00:38:00.450><c> instance</c><00:38:00.780><c> or</c><00:38:01.020><c> are</c><00:38:01.290><c> set</c><00:38:01.560><c> and</c><00:38:01.920><c> sub</c>

00:38:02.600 --> 00:38:02.610 align:start position:0%
list for instance or are set and sub
 

00:38:02.610 --> 00:38:04.190 align:start position:0%
list for instance or are set and sub
size<00:38:02.850><c> them</c><00:38:03.150><c> which</c><00:38:03.420><c> is</c><00:38:03.600><c> the</c><00:38:03.720><c> other</c><00:38:03.750><c> one</c><00:38:04.020><c> that</c><00:38:04.050><c> is</c>

00:38:04.190 --> 00:38:04.200 align:start position:0%
size them which is the other one that is
 

00:38:04.200 --> 00:38:06.890 align:start position:0%
size them which is the other one that is
maybe<00:38:04.890><c> non-trivial</c><00:38:05.400><c> means</c><00:38:06.270><c> that</c><00:38:06.480><c> if</c><00:38:06.690><c> you</c>

00:38:06.890 --> 00:38:06.900 align:start position:0%
maybe non-trivial means that if you
 

00:38:06.900 --> 00:38:10.580 align:start position:0%
maybe non-trivial means that if you
split<00:38:07.500><c> the</c><00:38:08.280><c> source</c><00:38:08.550><c> of</c><00:38:08.790><c> your</c><00:38:09.360><c> of</c><00:38:09.960><c> your</c><00:38:10.260><c> of</c><00:38:10.320><c> your</c>

00:38:10.580 --> 00:38:10.590 align:start position:0%
split the source of your of your of your
 

00:38:10.590 --> 00:38:13.820 align:start position:0%
split the source of your of your of your
streamer<00:38:11.330><c> if</c><00:38:12.330><c> you</c><00:38:12.450><c> go</c><00:38:12.570><c> parallel</c><00:38:12.900><c> then</c><00:38:13.650><c> the</c>

00:38:13.820 --> 00:38:13.830 align:start position:0%
streamer if you go parallel then the
 

00:38:13.830 --> 00:38:15.950 align:start position:0%
streamer if you go parallel then the
splitting<00:38:14.130><c> will</c><00:38:14.400><c> also</c><00:38:14.790><c> produce</c><00:38:15.030><c> elements</c>

00:38:15.950 --> 00:38:15.960 align:start position:0%
splitting will also produce elements
 

00:38:15.960 --> 00:38:18.710 align:start position:0%
splitting will also produce elements
while<00:38:16.170><c> sub</c><00:38:16.560><c> streams</c><00:38:16.920><c> that</c><00:38:17.430><c> are</c><00:38:17.490><c> sized</c><00:38:17.940><c> if</c><00:38:18.540><c> you</c>

00:38:18.710 --> 00:38:18.720 align:start position:0%
while sub streams that are sized if you
 

00:38:18.720 --> 00:38:20.690 align:start position:0%
while sub streams that are sized if you
split<00:38:19.020><c> an</c><00:38:19.170><c> ArrayList</c><00:38:19.500><c> in</c><00:38:19.680><c> two</c><00:38:19.890><c> you</c><00:38:20.070><c> can</c><00:38:20.280><c> you</c>

00:38:20.690 --> 00:38:20.700 align:start position:0%
split an ArrayList in two you can you
 

00:38:20.700 --> 00:38:23.180 align:start position:0%
split an ArrayList in two you can you
can<00:38:20.960><c> count</c><00:38:21.960><c> the</c><00:38:22.140><c> number</c><00:38:22.170><c> of</c><00:38:22.470><c> elements</c><00:38:22.740><c> in</c><00:38:22.980><c> each</c>

00:38:23.180 --> 00:38:23.190 align:start position:0%
can count the number of elements in each
 

00:38:23.190 --> 00:38:25.430 align:start position:0%
can count the number of elements in each
part<00:38:23.490><c> of</c><00:38:23.730><c> the</c><00:38:24.030><c> array</c><00:38:24.210><c> list</c><00:38:24.360><c> if</c><00:38:24.870><c> you</c><00:38:25.050><c> split</c><00:38:25.320><c> an</c>

00:38:25.430 --> 00:38:25.440 align:start position:0%
part of the array list if you split an
 

00:38:25.440 --> 00:38:27.980 align:start position:0%
part of the array list if you split an
asset<00:38:25.890><c> into</c><00:38:26.100><c> by</c><00:38:26.490><c> by</c><00:38:27.000><c> cutting</c><00:38:27.420><c> the</c><00:38:27.600><c> underlying</c>

00:38:27.980 --> 00:38:27.990 align:start position:0%
asset into by by cutting the underlying
 

00:38:27.990 --> 00:38:30.530 align:start position:0%
asset into by by cutting the underlying
array<00:38:28.980><c> you</c><00:38:29.340><c> have</c><00:38:29.460><c> in</c><00:38:29.580><c> an</c><00:38:29.700><c> asset</c><00:38:30.060><c> or</c><00:38:30.270><c> in</c><00:38:30.450><c> the</c>

00:38:30.530 --> 00:38:30.540 align:start position:0%
array you have in an asset or in the
 

00:38:30.540 --> 00:38:33.440 align:start position:0%
array you have in an asset or in the
Nash<00:38:30.720><c> map</c><00:38:30.960><c> into</c><00:38:31.770><c> you</c><00:38:32.280><c> cannot</c><00:38:32.640><c> foresee</c><00:38:33.330><c> how</c>

00:38:33.440 --> 00:38:33.450 align:start position:0%
Nash map into you cannot foresee how
 

00:38:33.450 --> 00:38:35.240 align:start position:0%
Nash map into you cannot foresee how
many<00:38:33.660><c> elements</c><00:38:34.230><c> they</c><00:38:34.500><c> are</c><00:38:34.530><c> in</c><00:38:34.710><c> the</c><00:38:34.830><c> right</c><00:38:35.040><c> path</c>

00:38:35.240 --> 00:38:35.250 align:start position:0%
many elements they are in the right path
 

00:38:35.250 --> 00:38:37.430 align:start position:0%
many elements they are in the right path
and<00:38:35.490><c> in</c><00:38:35.730><c> the</c><00:38:35.760><c> left</c><00:38:36.000><c> part</c><00:38:36.300><c> of</c><00:38:36.480><c> this</c><00:38:36.720><c> array</c><00:38:36.990><c> so</c>

00:38:37.430 --> 00:38:37.440 align:start position:0%
and in the left part of this array so
 

00:38:37.440 --> 00:38:39.710 align:start position:0%
and in the left part of this array so
the<00:38:37.590><c> sides</c><00:38:38.070><c> for</c><00:38:38.280><c> our</c><00:38:38.640><c> set</c><00:38:38.880><c> for</c><00:38:39.030><c> instance</c><00:38:39.300><c> is</c>

00:38:39.710 --> 00:38:39.720 align:start position:0%
the sides for our set for instance is
 

00:38:39.720 --> 00:38:44.120 align:start position:0%
the sides for our set for instance is
false<00:38:40.080><c> whereas</c><00:38:40.860><c> it's</c><00:38:41.160><c> true</c><00:38:41.460><c> for</c><00:38:41.730><c> erased</c><00:38:42.950><c> and</c><00:38:43.950><c> I</c>

00:38:44.120 --> 00:38:44.130 align:start position:0%
false whereas it's true for erased and I
 

00:38:44.130 --> 00:38:46.550 align:start position:0%
false whereas it's true for erased and I
also<00:38:44.340><c> give</c><00:38:44.640><c> you</c><00:38:44.760><c> a</c><00:38:44.790><c> hint</c><00:38:45.060><c> at</c><00:38:45.330><c> the</c><00:38:45.600><c> stream</c><00:38:46.200><c> duty</c>

00:38:46.550 --> 00:38:46.560 align:start position:0%
also give you a hint at the stream duty
 

00:38:46.560 --> 00:38:50.360 align:start position:0%
also give you a hint at the stream duty
API<00:38:47.120><c> that</c><00:38:48.120><c> you</c><00:38:48.240><c> can</c><00:38:48.270><c> find</c><00:38:48.660><c> on</c><00:38:48.840><c> on</c><00:38:49.200><c> github</c><00:38:49.620><c> your</c>

00:38:50.360 --> 00:38:50.370 align:start position:0%
API that you can find on on github your
 

00:38:50.370 --> 00:38:54.010 align:start position:0%
API that you can find on on github your
there<00:38:50.850><c> are</c><00:38:50.940><c> many</c><00:38:51.660><c> more</c><00:38:52.190><c> sophisticated</c>

00:38:54.010 --> 00:38:54.020 align:start position:0%
there are many more sophisticated
 

00:38:54.020 --> 00:38:57.020 align:start position:0%
there are many more sophisticated
operation<00:38:55.020><c> than</c><00:38:55.290><c> the</c><00:38:55.500><c> mapping</c><00:38:56.040><c> filtering</c><00:38:56.640><c> no</c>

00:38:57.020 --> 00:38:57.030 align:start position:0%
operation than the mapping filtering no
 

00:38:57.030 --> 00:38:59.960 align:start position:0%
operation than the mapping filtering no
op<00:38:57.180><c> which</c><00:38:57.900><c> was</c><00:38:58.140><c> really</c><00:38:58.350><c> easy</c><00:38:58.560><c> one</c><00:38:58.970><c> available</c>

00:38:59.960 --> 00:38:59.970 align:start position:0%
op which was really easy one available
 

00:38:59.970 --> 00:39:02.720 align:start position:0%
op which was really easy one available
like<00:39:00.480><c> grouping</c><00:39:00.960><c> rolling</c><00:39:01.470><c> zipping</c><00:39:02.430><c> they</c><00:39:02.640><c> are</c>

00:39:02.720 --> 00:39:02.730 align:start position:0%
like grouping rolling zipping they are
 

00:39:02.730 --> 00:39:06.140 align:start position:0%
like grouping rolling zipping they are
they<00:39:02.940><c> are</c><00:39:03.030><c> I</c><00:39:03.360><c> think</c><00:39:03.810><c> 20</c><00:39:04.110><c> or</c><00:39:04.320><c> 19</c><00:39:04.970><c> operates</c>

00:39:06.140 --> 00:39:06.150 align:start position:0%
they are I think 20 or 19 operates
 

00:39:06.150 --> 00:39:08.150 align:start position:0%
they are I think 20 or 19 operates
different<00:39:06.390><c> operate</c><00:39:06.720><c> on</c><00:39:06.869><c> it</c><00:39:07.049><c> and</c><00:39:07.619><c> you</c><00:39:07.980><c> have</c>

00:39:08.150 --> 00:39:08.160 align:start position:0%
different operate on it and you have
 

00:39:08.160 --> 00:39:11.630 align:start position:0%
different operate on it and you have
also<00:39:08.520><c> an</c><00:39:08.880><c> an</c><00:39:09.630><c> operator</c><00:39:10.099><c> which</c><00:39:11.099><c> does</c><00:39:11.369><c> a</c>

00:39:11.630 --> 00:39:11.640 align:start position:0%
also an an operator which does a
 

00:39:11.640 --> 00:39:13.519 align:start position:0%
also an an operator which does a
collection<00:39:12.210><c> on</c><00:39:12.329><c> a</c><00:39:12.420><c> shifting</c><00:39:12.869><c> window</c><00:39:13.200><c> which</c><00:39:13.500><c> is</c>

00:39:13.519 --> 00:39:13.529 align:start position:0%
collection on a shifting window which is
 

00:39:13.529 --> 00:39:15.650 align:start position:0%
collection on a shifting window which is
extremely<00:39:14.039><c> useful</c><00:39:14.130><c> when</c><00:39:14.490><c> you</c><00:39:14.730><c> have</c><00:39:14.760><c> a</c><00:39:14.910><c> huge</c>

00:39:15.650 --> 00:39:15.660 align:start position:0%
extremely useful when you have a huge
 

00:39:15.660 --> 00:39:18.230 align:start position:0%
extremely useful when you have a huge
stream<00:39:16.020><c> of</c><00:39:16.200><c> elements</c><00:39:16.770><c> and</c><00:39:16.980><c> you</c><00:39:17.130><c> want</c><00:39:17.309><c> to</c><00:39:17.490><c> to</c>

00:39:18.230 --> 00:39:18.240 align:start position:0%
stream of elements and you want to to
 

00:39:18.240 --> 00:39:20.059 align:start position:0%
stream of elements and you want to to
compute<00:39:18.660><c> an</c><00:39:18.779><c> average</c><00:39:18.869><c> for</c><00:39:19.349><c> instance</c><00:39:19.680><c> and</c><00:39:19.890><c> on</c>

00:39:20.059 --> 00:39:20.069 align:start position:0%
compute an average for instance and on
 

00:39:20.069 --> 00:39:21.620 align:start position:0%
compute an average for instance and on
the<00:39:20.190><c> shifting</c><00:39:20.549><c> window</c><00:39:20.819><c> in</c><00:39:20.970><c> average</c><00:39:21.210><c> it's</c><00:39:21.420><c> just</c>

00:39:21.620 --> 00:39:21.630 align:start position:0%
the shifting window in average it's just
 

00:39:21.630 --> 00:39:25.819 align:start position:0%
the shifting window in average it's just
a<00:39:22.230><c> special</c><00:39:22.950><c> case</c><00:39:23.369><c> of</c><00:39:23.549><c> a</c><00:39:24.510><c> fur</c><00:39:25.260><c> collection</c><00:39:25.410><c> so</c>

00:39:25.819 --> 00:39:25.829 align:start position:0%
a special case of a fur collection so
 

00:39:25.829 --> 00:39:28.309 align:start position:0%
a special case of a fur collection so
you<00:39:25.859><c> can</c><00:39:26.010><c> you</c><00:39:26.490><c> can</c><00:39:26.700><c> do</c><00:39:26.789><c> that</c><00:39:26.910><c> you</c><00:39:27.329><c> can</c><00:39:27.510><c> also</c><00:39:27.690><c> the</c>

00:39:28.309 --> 00:39:28.319 align:start position:0%
you can you can do that you can also the
 

00:39:28.319 --> 00:39:30.650 align:start position:0%
you can you can do that you can also the
results<00:39:28.680><c> I</c><00:39:28.770><c> also</c><00:39:29.190><c> put</c><00:39:29.490><c> an</c><00:39:30.210><c> efficient</c>

00:39:30.650 --> 00:39:30.660 align:start position:0%
results I also put an efficient
 

00:39:30.660 --> 00:39:33.529 align:start position:0%
results I also put an efficient
algorithm<00:39:30.930><c> to</c><00:39:31.200><c> extract</c><00:39:31.740><c> the</c><00:39:32.010><c> N</c><00:39:32.520><c> maxes</c><00:39:33.089><c> of</c><00:39:33.329><c> a</c>

00:39:33.529 --> 00:39:33.539 align:start position:0%
algorithm to extract the N maxes of a
 

00:39:33.539 --> 00:39:36.319 align:start position:0%
algorithm to extract the N maxes of a
given<00:39:33.779><c> stream</c><00:39:34.079><c> which</c><00:39:34.799><c> is</c><00:39:35.010><c> a</c><00:39:35.059><c> useful</c><00:39:36.059><c> in</c><00:39:36.180><c> many</c>

00:39:36.319 --> 00:39:36.329 align:start position:0%
given stream which is a useful in many
 

00:39:36.329 --> 00:39:40.309 align:start position:0%
given stream which is a useful in many
cases<00:39:37.789><c> so</c><00:39:38.789><c> this</c><00:39:38.940><c> is</c><00:39:39.119><c> the</c><00:39:39.240><c> link</c><00:39:39.450><c> to</c><00:39:39.839><c> the</c><00:39:39.990><c> stream</c>

00:39:40.309 --> 00:39:40.319 align:start position:0%
cases so this is the link to the stream
 

00:39:40.319 --> 00:39:43.250 align:start position:0%
cases so this is the link to the stream
API<00:39:41.180><c> conclusion</c><00:39:42.180><c> yes</c><00:39:42.660><c> if</c><00:39:42.869><c> you</c><00:39:42.990><c> want</c><00:39:43.140><c> to</c>

00:39:43.250 --> 00:39:43.260 align:start position:0%
API conclusion yes if you want to
 

00:39:43.260 --> 00:39:47.269 align:start position:0%
API conclusion yes if you want to
connect<00:39:43.559><c> your</c><00:39:44.329><c> stream</c><00:39:45.920><c> algorithm</c><00:39:46.920><c> and</c><00:39:47.130><c> on</c>

00:39:47.269 --> 00:39:47.279 align:start position:0%
connect your stream algorithm and on
 

00:39:47.279 --> 00:39:50.359 align:start position:0%
connect your stream algorithm and on
your<00:39:47.549><c> own</c><00:39:47.819><c> sources</c><00:39:48.299><c> of</c><00:39:48.539><c> data</c><00:39:48.920><c> well</c><00:39:49.920><c> you</c><00:39:50.010><c> can</c><00:39:50.220><c> do</c>

00:39:50.359 --> 00:39:50.369 align:start position:0%
your own sources of data well you can do
 

00:39:50.369 --> 00:39:52.010 align:start position:0%
your own sources of data well you can do
that<00:39:50.549><c> by</c><00:39:50.760><c> your</c><00:39:50.970><c> fiddling</c><00:39:51.420><c> with</c><00:39:51.569><c> the</c><00:39:51.720><c> splitter</c>

00:39:52.010 --> 00:39:52.020 align:start position:0%
that by your fiddling with the splitter
 

00:39:52.020 --> 00:39:54.319 align:start position:0%
that by your fiddling with the splitter
rate<00:39:52.260><c> or</c><00:39:52.380><c> API</c><00:39:52.650><c> it's</c><00:39:53.369><c> not</c><00:39:53.579><c> that</c><00:39:53.730><c> easy</c><00:39:54.000><c> it's</c><00:39:54.240><c> a</c>

00:39:54.319 --> 00:39:54.329 align:start position:0%
rate or API it's not that easy it's a
 

00:39:54.329 --> 00:39:56.480 align:start position:0%
rate or API it's not that easy it's a
little<00:39:54.539><c> tricky</c><00:39:54.930><c> but</c><00:39:55.410><c> it's</c><00:39:55.589><c> very</c><00:39:55.740><c> powerful</c><00:39:56.309><c> and</c>

00:39:56.480 --> 00:39:56.490 align:start position:0%
little tricky but it's very powerful and
 

00:39:56.490 --> 00:39:59.299 align:start position:0%
little tricky but it's very powerful and
it<00:39:56.579><c> will</c><00:39:56.789><c> it</c><00:39:57.270><c> will</c><00:39:57.539><c> really</c><00:39:57.839><c> allow</c><00:39:58.619><c> it</c><00:39:58.980><c> really</c>

00:39:59.299 --> 00:39:59.309 align:start position:0%
it will it will really allow it really
 

00:39:59.309 --> 00:40:01.510 align:start position:0%
it will it will really allow it really
allows<00:39:59.520><c> you</c><00:39:59.730><c> to</c><00:39:59.970><c> leverage</c><00:40:00.359><c> all</c><00:40:00.750><c> the</c><00:40:00.809><c> powerful</c>

00:40:01.510 --> 00:40:01.520 align:start position:0%
allows you to leverage all the powerful
 

00:40:01.520 --> 00:40:04.039 align:start position:0%
allows you to leverage all the powerful
algorithm<00:40:02.520><c> that</c><00:40:02.760><c> are</c><00:40:02.910><c> in</c><00:40:03.270><c> the</c><00:40:03.539><c> behind</c><00:40:03.930><c> the</c>

00:40:04.039 --> 00:40:04.049 align:start position:0%
algorithm that are in the behind the
 

00:40:04.049 --> 00:40:06.319 align:start position:0%
algorithm that are in the behind the
stream<00:40:04.349><c> API</c><00:40:04.650><c> which</c><00:40:05.309><c> is</c><00:40:05.520><c> which</c><00:40:05.880><c> is</c><00:40:05.910><c> really</c>

00:40:06.319 --> 00:40:06.329 align:start position:0%
stream API which is which is really
 

00:40:06.329 --> 00:40:08.690 align:start position:0%
stream API which is which is really
great<00:40:06.480><c> and</c><00:40:06.750><c> I</c><00:40:06.990><c> also</c><00:40:07.140><c> provided</c><00:40:07.619><c> the</c><00:40:07.829><c> link</c><00:40:08.039><c> with</c>

00:40:08.690 --> 00:40:08.700 align:start position:0%
great and I also provided the link with
 

00:40:08.700 --> 00:40:11.539 align:start position:0%
great and I also provided the link with
my<00:40:08.880><c> github</c><00:40:09.089><c> account</c><00:40:09.270><c> and</c><00:40:09.950><c> with</c><00:40:10.950><c> that</c><00:40:11.099><c> I</c><00:40:11.369><c> think</c>

00:40:11.539 --> 00:40:11.549 align:start position:0%
my github account and with that I think
 

00:40:11.549 --> 00:40:13.609 align:start position:0%
my github account and with that I think
we<00:40:12.029><c> don't</c><00:40:12.299><c> thank</c><00:40:12.599><c> you</c><00:40:12.750><c> for</c><00:40:12.930><c> your</c><00:40:13.079><c> attention</c><00:40:13.289><c> I</c>

00:40:13.609 --> 00:40:13.619 align:start position:0%
we don't thank you for your attention I
 

00:40:13.619 --> 00:40:15.500 align:start position:0%
we don't thank you for your attention I
don't<00:40:14.160><c> know</c><00:40:14.250><c> we</c><00:40:14.400><c> still</c><00:40:14.760><c> have</c><00:40:14.910><c> a</c><00:40:14.940><c> few</c><00:40:15.180><c> minutes</c>

00:40:15.500 --> 00:40:15.510 align:start position:0%
don't know we still have a few minutes
 

00:40:15.510 --> 00:40:17.329 align:start position:0%
don't know we still have a few minutes
for<00:40:15.660><c> questions</c><00:40:16.020><c> if</c><00:40:16.140><c> you</c><00:40:16.319><c> have</c><00:40:16.500><c> if</c><00:40:17.010><c> you</c><00:40:17.190><c> have</c>

00:40:17.329 --> 00:40:17.339 align:start position:0%
for questions if you have if you have
 

00:40:17.339 --> 00:40:31.950 align:start position:0%
for questions if you have if you have
any<00:40:19.970><c> yeah</c><00:40:20.970><c> please</c>

00:40:31.950 --> 00:40:31.960 align:start position:0%
 
 

00:40:31.960 --> 00:40:35.099 align:start position:0%
 
I<00:40:33.030><c> don't</c><00:40:34.030><c> know</c><00:40:34.089><c> if</c><00:40:34.150><c> any</c><00:40:34.300><c> threshold</c><00:40:34.570><c> really</c><00:40:35.050><c> it</c>

00:40:35.099 --> 00:40:35.109 align:start position:0%
I don't know if any threshold really it
 

00:40:35.109 --> 00:40:36.839 align:start position:0%
I don't know if any threshold really it
really<00:40:35.260><c> depends</c><00:40:35.770><c> on</c><00:40:35.859><c> what</c><00:40:36.099><c> you</c><00:40:36.339><c> what</c><00:40:36.580><c> you</c><00:40:36.700><c> need</c>

00:40:36.839 --> 00:40:36.849 align:start position:0%
really depends on what you what you need
 

00:40:36.849 --> 00:40:44.400 align:start position:0%
really depends on what you what you need
to<00:40:36.970><c> do</c><00:40:37.800><c> so</c><00:40:42.300><c> then</c><00:40:43.300><c> I</c><00:40:43.330><c> I</c><00:40:43.599><c> never</c><00:40:43.810><c> I</c><00:40:44.050><c> never</c><00:40:44.230><c> came</c>

00:40:44.400 --> 00:40:44.410 align:start position:0%
to do so then I I never I never came
 

00:40:44.410 --> 00:40:45.870 align:start position:0%
to do so then I I never I never came
across<00:40:44.470><c> any</c><00:40:44.920><c> kind</c><00:40:45.130><c> of</c><00:40:45.190><c> problem</c><00:40:45.550><c> with</c><00:40:45.700><c> this</c>

00:40:45.870 --> 00:40:45.880 align:start position:0%
across any kind of problem with this
 

00:40:45.880 --> 00:40:48.870 align:start position:0%
across any kind of problem with this
with<00:40:46.240><c> this</c><00:40:46.390><c> stuff</c><00:40:46.630><c> and</c><00:40:47.200><c> I</c><00:40:47.500><c> really</c><00:40:47.859><c> had</c><00:40:47.980><c> to</c><00:40:48.010><c> to</c>

00:40:48.870 --> 00:40:48.880 align:start position:0%
with this stuff and I really had to to
 

00:40:48.880 --> 00:40:51.480 align:start position:0%
with this stuff and I really had to to
manage<00:40:49.210><c> large</c><00:40:49.599><c> amount</c><00:40:49.930><c> of</c><00:40:50.020><c> data</c><00:40:50.260><c> with</c><00:40:50.800><c> not</c><00:40:50.980><c> big</c>

00:40:51.480 --> 00:40:51.490 align:start position:0%
manage large amount of data with not big
 

00:40:51.490 --> 00:40:54.060 align:start position:0%
manage large amount of data with not big
data<00:40:51.790><c> side</c><00:40:52.540><c> terabytes</c><00:40:53.080><c> of</c><00:40:53.200><c> data</c><00:40:53.349><c> but</c><00:40:53.859><c> in</c>

00:40:54.060 --> 00:40:54.070 align:start position:0%
data side terabytes of data but in
 

00:40:54.070 --> 00:40:56.579 align:start position:0%
data side terabytes of data but in
memory<00:40:54.369><c> large</c><00:40:54.700><c> sets</c><00:40:55.060><c> of</c><00:40:55.180><c> data</c><00:40:55.240><c> and</c><00:40:56.140><c> I</c><00:40:56.290><c> could</c><00:40:56.500><c> do</c>

00:40:56.579 --> 00:40:56.589 align:start position:0%
memory large sets of data and I could do
 

00:40:56.589 --> 00:40:58.829 align:start position:0%
memory large sets of data and I could do
that<00:40:56.740><c> very</c><00:40:57.369><c> easily</c><00:40:57.640><c> going</c><00:40:58.240><c> parallel</c><00:40:58.690><c> is</c>

00:40:58.829 --> 00:40:58.839 align:start position:0%
that very easily going parallel is
 

00:40:58.839 --> 00:41:02.970 align:start position:0%
that very easily going parallel is
always<00:40:59.170><c> a</c><00:40:59.940><c> more</c><00:41:00.940><c> complexity</c><00:41:01.570><c> and</c><00:41:01.780><c> I</c><00:41:02.589><c> would</c><00:41:02.800><c> not</c>

00:41:02.970 --> 00:41:02.980 align:start position:0%
always a more complexity and I would not
 

00:41:02.980 --> 00:41:05.220 align:start position:0%
always a more complexity and I would not
recommend<00:41:03.220><c> going</c><00:41:03.730><c> parallel</c><00:41:04.180><c> if</c><00:41:04.330><c> you</c><00:41:04.540><c> not</c>

00:41:05.220 --> 00:41:05.230 align:start position:0%
recommend going parallel if you not
 

00:41:05.230 --> 00:41:07.950 align:start position:0%
recommend going parallel if you not
really<00:41:05.560><c> sure</c><00:41:05.890><c> that</c><00:41:06.220><c> what</c><00:41:06.580><c> you're</c><00:41:06.790><c> doing</c>

00:41:07.950 --> 00:41:07.960 align:start position:0%
really sure that what you're doing
 

00:41:07.960 --> 00:41:11.160 align:start position:0%
really sure that what you're doing
stay<00:41:08.710><c> stay</c><00:41:09.369><c> in</c><00:41:09.430><c> a</c><00:41:09.609><c> non</c><00:41:09.790><c> parallel</c><00:41:10.089><c> world</c><00:41:10.420><c> as</c>

00:41:11.160 --> 00:41:11.170 align:start position:0%
stay stay in a non parallel world as
 

00:41:11.170 --> 00:41:13.829 align:start position:0%
stay stay in a non parallel world as
long<00:41:11.380><c> as</c><00:41:11.530><c> you</c><00:41:11.619><c> can</c><00:41:11.970><c> because</c><00:41:12.970><c> going</c><00:41:13.540><c> parallel</c>

00:41:13.829 --> 00:41:13.839 align:start position:0%
long as you can because going parallel
 

00:41:13.839 --> 00:41:16.170 align:start position:0%
long as you can because going parallel
might<00:41:14.140><c> in</c><00:41:14.349><c> fact</c><00:41:14.380><c> decrease</c><00:41:15.250><c> your</c><00:41:15.640><c> performance</c>

00:41:16.170 --> 00:41:16.180 align:start position:0%
might in fact decrease your performance
 

00:41:16.180 --> 00:41:18.720 align:start position:0%
might in fact decrease your performance
instead<00:41:16.510><c> of</c><00:41:16.690><c> of</c><00:41:17.230><c> increasing</c><00:41:17.740><c> them</c><00:41:17.859><c> be</c>

00:41:18.720 --> 00:41:18.730 align:start position:0%
instead of of increasing them be
 

00:41:18.730 --> 00:41:22.200 align:start position:0%
instead of of increasing them be
extremely<00:41:19.180><c> careful</c><00:41:19.330><c> with</c><00:41:19.599><c> that</c><00:41:21.000><c> any</c><00:41:22.000><c> other</c>

00:41:22.200 --> 00:41:22.210 align:start position:0%
extremely careful with that any other
 

00:41:22.210 --> 00:41:25.220 align:start position:0%
extremely careful with that any other
questions

00:41:25.220 --> 00:41:25.230 align:start position:0%
 
 

00:41:25.230 --> 00:41:27.599 align:start position:0%
 
okay<00:41:26.230><c> so</c><00:41:26.290><c> thank</c><00:41:26.680><c> you</c><00:41:26.800><c> I'll</c><00:41:27.040><c> make</c><00:41:27.250><c> this</c><00:41:27.369><c> slide</c>

00:41:27.599 --> 00:41:27.609 align:start position:0%
okay so thank you I'll make this slide
 

00:41:27.609 --> 00:41:28.950 align:start position:0%
okay so thank you I'll make this slide
on<00:41:27.790><c> a</c><00:41:27.820><c> variable</c><00:41:28.150><c> on</c><00:41:28.359><c> my</c><00:41:28.480><c> SlideShare</c><00:41:28.930><c> account</c>

00:41:28.950 --> 00:41:28.960 align:start position:0%
on a variable on my SlideShare account
 

00:41:28.960 --> 00:41:31.530 align:start position:0%
on a variable on my SlideShare account
very<00:41:29.890><c> soon</c><00:41:30.130><c> so</c><00:41:30.310><c> you</c><00:41:30.400><c> can</c><00:41:30.430><c> check</c><00:41:30.760><c> that</c><00:41:30.940><c> and</c><00:41:31.359><c> I</c>

00:41:31.530 --> 00:41:31.540 align:start position:0%
very soon so you can check that and I
 

00:41:31.540 --> 00:41:32.350 align:start position:0%
very soon so you can check that and I
will<00:41:31.630><c> tweet</c><00:41:31.780><c> about</c>

00:41:32.350 --> 00:41:32.360 align:start position:0%
will tweet about
 

00:41:32.360 --> 00:41:37.969 align:start position:0%
will tweet about
[Applause]

