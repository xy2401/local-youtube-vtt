WEBVTT
Kind: captions
Language: en

00:00:03.110 --> 00:00:06.789 align:start position:0%
 
all<00:00:04.040><c> right</c><00:00:04.279><c> hello</c><00:00:05.060><c> and</c><00:00:05.269><c> welcome</c><00:00:05.660><c> I'm</c><00:00:06.140><c> Pooh</c>

00:00:06.789 --> 00:00:06.799 align:start position:0%
all right hello and welcome I'm Pooh
 

00:00:06.799 --> 00:00:09.370 align:start position:0%
all right hello and welcome I'm Pooh
number<00:00:07.100><c> half</c><00:00:07.370><c> I'm</c><00:00:07.700><c> working</c><00:00:08.210><c> in</c><00:00:08.389><c> JVM</c>

00:00:09.370 --> 00:00:09.380 align:start position:0%
number half I'm working in JVM
 

00:00:09.380 --> 00:00:11.909 align:start position:0%
number half I'm working in JVM
sustaining<00:00:10.040><c> engineering</c><00:00:10.429><c> team</c><00:00:10.880><c> at</c><00:00:11.120><c> Oracle</c><00:00:11.719><c> a</c>

00:00:11.909 --> 00:00:11.919 align:start position:0%
sustaining engineering team at Oracle a
 

00:00:11.919 --> 00:00:14.980 align:start position:0%
sustaining engineering team at Oracle a
gentleman<00:00:12.919><c> here</c><00:00:13.129><c> asked</c><00:00:13.639><c> you</c><00:00:14.360><c> know</c><00:00:14.480><c> what</c><00:00:14.780><c> does</c>

00:00:14.980 --> 00:00:14.990 align:start position:0%
gentleman here asked you know what does
 

00:00:14.990 --> 00:00:17.050 align:start position:0%
gentleman here asked you know what does
JVM<00:00:15.589><c> sustaining</c><00:00:16.250><c> engineer</c><00:00:16.760><c> it's</c><00:00:16.880><c> an</c>

00:00:17.050 --> 00:00:17.060 align:start position:0%
JVM sustaining engineer it's an
 

00:00:17.060 --> 00:00:18.130 align:start position:0%
JVM sustaining engineer it's an
interesting<00:00:17.360><c> title</c>

00:00:18.130 --> 00:00:18.140 align:start position:0%
interesting title
 

00:00:18.140 --> 00:00:22.090 align:start position:0%
interesting title
interesting<00:00:18.860><c> title</c><00:00:19.280><c> so</c><00:00:20.590><c> JVM</c><00:00:21.590><c> sustaining</c>

00:00:22.090 --> 00:00:22.100 align:start position:0%
interesting title so JVM sustaining
 

00:00:22.100 --> 00:00:25.000 align:start position:0%
interesting title so JVM sustaining
engineering<00:00:22.370><c> as</c><00:00:22.790><c> a</c><00:00:22.820><c> group</c><00:00:23.360><c> in</c><00:00:23.630><c> Oracle</c><00:00:24.260><c> where</c>

00:00:25.000 --> 00:00:25.010 align:start position:0%
engineering as a group in Oracle where
 

00:00:25.010 --> 00:00:27.640 align:start position:0%
engineering as a group in Oracle where
we<00:00:25.160><c> work</c><00:00:25.370><c> really</c><00:00:25.670><c> hard</c><00:00:26.050><c> on</c><00:00:27.050><c> resolving</c>

00:00:27.640 --> 00:00:27.650 align:start position:0%
we work really hard on resolving
 

00:00:27.650 --> 00:00:29.890 align:start position:0%
we work really hard on resolving
customer<00:00:28.070><c> escalated</c><00:00:28.880><c> problems</c><00:00:29.330><c> against</c>

00:00:29.890 --> 00:00:29.900 align:start position:0%
customer escalated problems against
 

00:00:29.900 --> 00:00:34.180 align:start position:0%
customer escalated problems against
hotspot<00:00:30.860><c> JVM</c><00:00:31.809><c> so</c><00:00:32.809><c> here's</c><00:00:33.079><c> a</c><00:00:33.230><c> little</c><00:00:33.829><c> bit</c><00:00:33.950><c> about</c>

00:00:34.180 --> 00:00:34.190 align:start position:0%
hotspot JVM so here's a little bit about
 

00:00:34.190 --> 00:00:37.990 align:start position:0%
hotspot JVM so here's a little bit about
me<00:00:34.630><c> I'm</c><00:00:35.630><c> a</c><00:00:35.690><c> co-author</c><00:00:36.620><c> of</c><00:00:37.010><c> the</c><00:00:37.280><c> book</c><00:00:37.460><c> Java</c>

00:00:37.990 --> 00:00:38.000 align:start position:0%
me I'm a co-author of the book Java
 

00:00:38.000 --> 00:00:39.940 align:start position:0%
me I'm a co-author of the book Java
performance<00:00:38.570><c> companion</c><00:00:39.200><c> I</c><00:00:39.410><c> have</c><00:00:39.800><c> been</c>

00:00:39.940 --> 00:00:39.950 align:start position:0%
performance companion I have been
 

00:00:39.950 --> 00:00:43.060 align:start position:0%
performance companion I have been
speaking<00:00:40.220><c> at</c><00:00:40.720><c> Java</c><00:00:41.720><c> one</c><00:00:41.989><c> for</c><00:00:42.710><c> a</c><00:00:42.739><c> couple</c><00:00:43.040><c> of</c>

00:00:43.060 --> 00:00:43.070 align:start position:0%
speaking at Java one for a couple of
 

00:00:43.070 --> 00:00:46.450 align:start position:0%
speaking at Java one for a couple of
years<00:00:43.280><c> and</c><00:00:43.790><c> a</c><00:00:44.090><c> Java</c><00:00:44.480><c> one</c><00:00:44.750><c> rockstar</c><00:00:45.380><c> I've</c><00:00:46.280><c> been</c>

00:00:46.450 --> 00:00:46.460 align:start position:0%
years and a Java one rockstar I've been
 

00:00:46.460 --> 00:00:49.450 align:start position:0%
years and a Java one rockstar I've been
speaking<00:00:46.670><c> at</c><00:00:46.970><c> other</c><00:00:47.210><c> Java</c><00:00:47.840><c> conferences</c><00:00:48.530><c> as</c>

00:00:49.450 --> 00:00:49.460 align:start position:0%
speaking at other Java conferences as
 

00:00:49.460 --> 00:00:53.139 align:start position:0%
speaking at other Java conferences as
well<00:00:49.880><c> I</c><00:00:50.210><c> maintain</c><00:00:51.140><c> a</c><00:00:51.170><c> blog</c><00:00:51.680><c> here</c><00:00:52.160><c> at</c><00:00:52.340><c> this</c><00:00:52.489><c> link</c>

00:00:53.139 --> 00:00:53.149 align:start position:0%
well I maintain a blog here at this link
 

00:00:53.149 --> 00:00:56.620 align:start position:0%
well I maintain a blog here at this link
and<00:00:53.510><c> I</c><00:00:53.840><c> published</c><00:00:54.320><c> a</c><00:00:55.010><c> number</c><00:00:55.430><c> of</c><00:00:55.579><c> articles</c><00:00:55.850><c> on</c>

00:00:56.620 --> 00:00:56.630 align:start position:0%
and I published a number of articles on
 

00:00:56.630 --> 00:01:00.460 align:start position:0%
and I published a number of articles on
how<00:00:57.200><c> to</c><00:00:57.739><c> troubleshoot</c><00:00:58.130><c> problems</c><00:00:58.899><c> in</c><00:00:59.899><c> hotspot</c>

00:01:00.460 --> 00:01:00.470 align:start position:0%
how to troubleshoot problems in hotspot
 

00:01:00.470 --> 00:01:06.219 align:start position:0%
how to troubleshoot problems in hotspot
JVM<00:01:02.800><c> so</c><00:01:03.800><c> all</c><00:01:03.950><c> right</c><00:01:04.129><c> how</c><00:01:05.059><c> many</c><00:01:05.119><c> of</c><00:01:05.509><c> you</c><00:01:05.780><c> have</c>

00:01:06.219 --> 00:01:06.229 align:start position:0%
JVM so all right how many of you have
 

00:01:06.229 --> 00:01:09.630 align:start position:0%
JVM so all right how many of you have
seen<00:01:06.619><c> this</c><00:01:06.979><c> out</c><00:01:07.370><c> of</c><00:01:07.610><c> memory</c><00:01:07.850><c> error</c><00:01:08.180><c> exception</c>

00:01:09.630 --> 00:01:09.640 align:start position:0%
seen this out of memory error exception
 

00:01:09.640 --> 00:01:13.930 align:start position:0%
seen this out of memory error exception
everybody<00:01:10.640><c> ok</c><00:01:11.710><c> so</c><00:01:12.710><c> so</c><00:01:13.040><c> you</c><00:01:13.100><c> are</c><00:01:13.460><c> in</c><00:01:13.700><c> the</c><00:01:13.729><c> right</c>

00:01:13.930 --> 00:01:13.940 align:start position:0%
everybody ok so so you are in the right
 

00:01:13.940 --> 00:01:17.380 align:start position:0%
everybody ok so so you are in the right
room<00:01:14.240><c> so</c><00:01:15.140><c> whenever</c><00:01:15.620><c> we</c><00:01:15.920><c> see</c><00:01:16.400><c> this</c><00:01:16.640><c> exception</c>

00:01:17.380 --> 00:01:17.390 align:start position:0%
room so whenever we see this exception
 

00:01:17.390 --> 00:01:20.380 align:start position:0%
room so whenever we see this exception
you<00:01:17.659><c> know</c><00:01:17.780><c> we</c><00:01:17.930><c> are</c><00:01:18.080><c> kind</c><00:01:19.070><c> of</c><00:01:19.220><c> scared</c><00:01:19.640><c> oh</c><00:01:19.820><c> this</c>

00:01:20.380 --> 00:01:20.390 align:start position:0%
you know we are kind of scared oh this
 

00:01:20.390 --> 00:01:22.810 align:start position:0%
you know we are kind of scared oh this
means<00:01:20.630><c> that</c><00:01:21.020><c> there</c><00:01:21.440><c> is</c><00:01:21.680><c> some</c><00:01:22.010><c> sort</c><00:01:22.310><c> of</c><00:01:22.400><c> memory</c>

00:01:22.810 --> 00:01:22.820 align:start position:0%
means that there is some sort of memory
 

00:01:22.820 --> 00:01:25.149 align:start position:0%
means that there is some sort of memory
related<00:01:23.390><c> issue</c><00:01:23.630><c> with</c><00:01:24.020><c> my</c><00:01:24.200><c> application</c><00:01:24.409><c> and</c>

00:01:25.149 --> 00:01:25.159 align:start position:0%
related issue with my application and
 

00:01:25.159 --> 00:01:27.780 align:start position:0%
related issue with my application and
I'll<00:01:25.460><c> have</c><00:01:25.700><c> to</c><00:01:25.850><c> spend</c><00:01:26.150><c> days</c><00:01:26.450><c> and</c><00:01:26.900><c> nights</c>

00:01:27.780 --> 00:01:27.790 align:start position:0%
I'll have to spend days and nights
 

00:01:27.790 --> 00:01:30.370 align:start position:0%
I'll have to spend days and nights
figuring<00:01:28.790><c> out</c><00:01:29.150><c> what's</c><00:01:29.510><c> wrong</c><00:01:29.840><c> with</c><00:01:29.900><c> my</c>

00:01:30.370 --> 00:01:30.380 align:start position:0%
figuring out what's wrong with my
 

00:01:30.380 --> 00:01:32.469 align:start position:0%
figuring out what's wrong with my
application<00:01:31.100><c> you</c><00:01:31.280><c> know</c><00:01:31.400><c> why</c><00:01:31.610><c> this</c><00:01:31.670><c> exception</c>

00:01:32.469 --> 00:01:32.479 align:start position:0%
application you know why this exception
 

00:01:32.479 --> 00:01:34.179 align:start position:0%
application you know why this exception
is<00:01:32.600><c> occurring</c><00:01:32.960><c> so</c><00:01:33.260><c> this</c><00:01:33.500><c> is</c><00:01:33.680><c> kind</c><00:01:33.950><c> of</c><00:01:34.040><c> a</c>

00:01:34.179 --> 00:01:34.189 align:start position:0%
is occurring so this is kind of a
 

00:01:34.189 --> 00:01:37.480 align:start position:0%
is occurring so this is kind of a
symptom<00:01:34.580><c> that</c><00:01:34.810><c> there</c><00:01:35.810><c> is</c><00:01:36.200><c> something</c><00:01:36.920><c> related</c>

00:01:37.480 --> 00:01:37.490 align:start position:0%
symptom that there is something related
 

00:01:37.490 --> 00:01:41.620 align:start position:0%
symptom that there is something related
to<00:01:38.080><c> memory</c><00:01:39.080><c> which</c><00:01:39.560><c> is</c><00:01:39.590><c> you</c><00:01:40.040><c> know</c><00:01:40.600><c> which</c><00:01:41.600><c> is</c>

00:01:41.620 --> 00:01:41.630 align:start position:0%
to memory which is you know which is
 

00:01:41.630 --> 00:01:44.140 align:start position:0%
to memory which is you know which is
which<00:01:41.990><c> is</c><00:01:42.020><c> not</c><00:01:42.470><c> right</c><00:01:43.130><c> with</c><00:01:43.369><c> the</c><00:01:43.490><c> application</c>

00:01:44.140 --> 00:01:44.150 align:start position:0%
which is not right with the application
 

00:01:44.150 --> 00:01:47.260 align:start position:0%
which is not right with the application
so<00:01:44.960><c> not</c><00:01:45.140><c> just</c><00:01:45.439><c> out</c><00:01:45.770><c> of</c><00:01:45.830><c> memory</c><00:01:46.270><c> error</c>

00:01:47.260 --> 00:01:47.270 align:start position:0%
so not just out of memory error
 

00:01:47.270 --> 00:01:50.340 align:start position:0%
so not just out of memory error
exception<00:01:47.840><c> there</c><00:01:48.229><c> are</c><00:01:48.320><c> other</c><00:01:48.590><c> symptoms</c><00:01:49.040><c> such</c>

00:01:50.340 --> 00:01:50.350 align:start position:0%
exception there are other symptoms such
 

00:01:50.350 --> 00:01:54.070 align:start position:0%
exception there are other symptoms such
as<00:01:51.350><c> unexpected</c><00:01:52.310><c> memory</c><00:01:52.909><c> growth</c><00:01:53.180><c> in</c><00:01:53.930><c> our</c>

00:01:54.070 --> 00:01:54.080 align:start position:0%
as unexpected memory growth in our
 

00:01:54.080 --> 00:01:56.130 align:start position:0%
as unexpected memory growth in our
application<00:01:54.860><c> or</c><00:01:55.009><c> poor</c><00:01:55.820><c> application</c>

00:01:56.130 --> 00:01:56.140 align:start position:0%
application or poor application
 

00:01:56.140 --> 00:02:00.910 align:start position:0%
application or poor application
performance<00:01:57.140><c> which</c><00:01:58.509><c> kind</c><00:01:59.509><c> of</c><00:01:59.689><c> indicate</c><00:02:00.380><c> that</c>

00:02:00.910 --> 00:02:00.920 align:start position:0%
performance which kind of indicate that
 

00:02:00.920 --> 00:02:03.370 align:start position:0%
performance which kind of indicate that
our<00:02:01.820><c> application</c><00:02:02.570><c> is</c><00:02:02.750><c> struggling</c><00:02:03.049><c> with</c>

00:02:03.370 --> 00:02:03.380 align:start position:0%
our application is struggling with
 

00:02:03.380 --> 00:02:06.060 align:start position:0%
our application is struggling with
memory<00:02:03.860><c> issues</c><00:02:04.400><c> and</c><00:02:04.729><c> we</c><00:02:05.509><c> should</c><00:02:05.750><c> be</c>

00:02:06.060 --> 00:02:06.070 align:start position:0%
memory issues and we should be
 

00:02:06.070 --> 00:02:09.910 align:start position:0%
memory issues and we should be
investigating<00:02:07.070><c> that</c><00:02:07.539><c> and</c><00:02:08.539><c> oftentimes</c><00:02:09.229><c> these</c>

00:02:09.910 --> 00:02:09.920 align:start position:0%
investigating that and oftentimes these
 

00:02:09.920 --> 00:02:12.850 align:start position:0%
investigating that and oftentimes these
symptoms<00:02:10.459><c> are</c><00:02:10.909><c> connected</c><00:02:11.569><c> to</c><00:02:11.810><c> GC</c><00:02:12.200><c> activities</c>

00:02:12.850 --> 00:02:12.860 align:start position:0%
symptoms are connected to GC activities
 

00:02:12.860 --> 00:02:15.680 align:start position:0%
symptoms are connected to GC activities
in<00:02:13.190><c> Java</c><00:02:13.640><c> applications</c><00:02:14.030><c> from</c>

00:02:15.680 --> 00:02:15.690 align:start position:0%
in Java applications from
 

00:02:15.690 --> 00:02:18.200 align:start position:0%
in Java applications from
and<00:02:15.780><c> those</c><00:02:16.050><c> you</c><00:02:16.710><c> know</c><00:02:16.830><c> can</c><00:02:17.190><c> be</c><00:02:17.370><c> conformed</c><00:02:18.150><c> by</c>

00:02:18.200 --> 00:02:18.210 align:start position:0%
and those you know can be conformed by
 

00:02:18.210 --> 00:02:21.190 align:start position:0%
and those you know can be conformed by
looking<00:02:18.780><c> at</c><00:02:18.960><c> GC</c><00:02:19.560><c> logs</c><00:02:19.800><c> or</c><00:02:20.100><c> monitoring</c><00:02:20.640><c> our</c>

00:02:21.190 --> 00:02:21.200 align:start position:0%
looking at GC logs or monitoring our
 

00:02:21.200 --> 00:02:24.590 align:start position:0%
looking at GC logs or monitoring our
applications<00:02:22.200><c> and</c><00:02:22.820><c> conforming</c><00:02:23.820><c> that</c><00:02:24.180><c> there</c>

00:02:24.590 --> 00:02:24.600 align:start position:0%
applications and conforming that there
 

00:02:24.600 --> 00:02:27.320 align:start position:0%
applications and conforming that there
are<00:02:24.900><c> are</c><00:02:25.320><c> there</c><00:02:25.380><c> long</c><00:02:25.890><c> GC</c><00:02:26.310><c> pauses</c><00:02:26.610><c> are</c><00:02:27.030><c> their</c>

00:02:27.320 --> 00:02:27.330 align:start position:0%
are are there long GC pauses are their
 

00:02:27.330 --> 00:02:30.080 align:start position:0%
are are there long GC pauses are their
excessive<00:02:27.900><c> GCS</c><00:02:28.380><c> and</c><00:02:28.620><c> my</c><00:02:28.740><c> application</c><00:02:29.490><c> which</c>

00:02:30.080 --> 00:02:30.090 align:start position:0%
excessive GCS and my application which
 

00:02:30.090 --> 00:02:32.810 align:start position:0%
excessive GCS and my application which
could<00:02:30.360><c> be</c><00:02:30.510><c> caused</c><00:02:30.810><c> due</c><00:02:31.230><c> to</c><00:02:31.820><c> miss</c>

00:02:32.810 --> 00:02:32.820 align:start position:0%
could be caused due to miss
 

00:02:32.820 --> 00:02:35.510 align:start position:0%
could be caused due to miss
configuration<00:02:33.630><c> of</c><00:02:33.780><c> memory</c><00:02:34.200><c> pools</c><00:02:34.560><c> excessive</c>

00:02:35.510 --> 00:02:35.520 align:start position:0%
configuration of memory pools excessive
 

00:02:35.520 --> 00:02:38.060 align:start position:0%
configuration of memory pools excessive
use<00:02:35.760><c> of</c><00:02:35.790><c> finalized</c><00:02:36.510><c> errs</c><00:02:36.780><c> explicit</c><00:02:37.740><c> GC</c>

00:02:38.060 --> 00:02:38.070 align:start position:0%
use of finalized errs explicit GC
 

00:02:38.070 --> 00:02:41.060 align:start position:0%
use of finalized errs explicit GC
invocations<00:02:38.250><c> or</c><00:02:39.030><c> even</c><00:02:40.020><c> a</c><00:02:40.110><c> memory</c><00:02:40.440><c> leak</c><00:02:40.650><c> in</c><00:02:40.950><c> the</c>

00:02:41.060 --> 00:02:41.070 align:start position:0%
invocations or even a memory leak in the
 

00:02:41.070 --> 00:02:43.430 align:start position:0%
invocations or even a memory leak in the
application<00:02:41.730><c> so</c><00:02:42.300><c> in</c><00:02:42.420><c> this</c><00:02:42.570><c> session</c><00:02:42.810><c> our</c><00:02:43.140><c> goal</c>

00:02:43.430 --> 00:02:43.440 align:start position:0%
application so in this session our goal
 

00:02:43.440 --> 00:02:45.910 align:start position:0%
application so in this session our goal
is<00:02:43.650><c> to</c><00:02:43.950><c> understand</c><00:02:44.580><c> how</c><00:02:45.060><c> we</c><00:02:45.120><c> can</c><00:02:45.450><c> go</c><00:02:45.660><c> about</c>

00:02:45.910 --> 00:02:45.920 align:start position:0%
is to understand how we can go about
 

00:02:45.920 --> 00:02:49.970 align:start position:0%
is to understand how we can go about
from<00:02:46.920><c> symptoms</c><00:02:47.460><c> or</c><00:02:47.910><c> behavior</c><00:02:48.570><c> those</c><00:02:49.440><c> specific</c>

00:02:49.970 --> 00:02:49.980 align:start position:0%
from symptoms or behavior those specific
 

00:02:49.980 --> 00:02:53.480 align:start position:0%
from symptoms or behavior those specific
behaviors<00:02:50.580><c> and</c><00:02:50.790><c> our</c><00:02:50.910><c> application</c><00:02:51.150><c> to</c><00:02:52.490><c> the</c>

00:02:53.480 --> 00:02:53.490 align:start position:0%
behaviors and our application to the
 

00:02:53.490 --> 00:02:56.360 align:start position:0%
behaviors and our application to the
bottom<00:02:53.850><c> box</c><00:02:54.120><c> what</c><00:02:55.080><c> is</c><00:02:55.320><c> causing</c><00:02:55.950><c> those</c>

00:02:56.360 --> 00:02:56.370 align:start position:0%
bottom box what is causing those
 

00:02:56.370 --> 00:03:00.410 align:start position:0%
bottom box what is causing those
symptoms<00:02:56.880><c> in</c><00:02:57.150><c> our</c><00:02:57.270><c> application</c><00:02:59.090><c> this</c><00:03:00.090><c> is</c><00:03:00.240><c> what</c>

00:03:00.410 --> 00:03:00.420 align:start position:0%
symptoms in our application this is what
 

00:03:00.420 --> 00:03:02.630 align:start position:0%
symptoms in our application this is what
the<00:03:00.570><c> agenda</c><00:03:00.810><c> looks</c><00:03:01.140><c> like</c><00:03:01.410><c> we'll</c><00:03:02.310><c> be</c><00:03:02.340><c> talking</c>

00:03:02.630 --> 00:03:02.640 align:start position:0%
the agenda looks like we'll be talking
 

00:03:02.640 --> 00:03:05.690 align:start position:0%
the agenda looks like we'll be talking
about<00:03:03.020><c> memory</c><00:03:04.020><c> issues</c><00:03:04.380><c> related</c><00:03:04.920><c> to</c><00:03:04.950><c> Java</c><00:03:05.340><c> he</c>

00:03:05.690 --> 00:03:05.700 align:start position:0%
about memory issues related to Java he
 

00:03:05.700 --> 00:03:08.300 align:start position:0%
about memory issues related to Java he
permanent<00:03:06.240><c> generation</c><00:03:06.810><c> meta</c><00:03:07.110><c> space</c><00:03:07.530><c> code</c>

00:03:08.300 --> 00:03:08.310 align:start position:0%
permanent generation meta space code
 

00:03:08.310 --> 00:03:12.410 align:start position:0%
permanent generation meta space code
cache<00:03:08.640><c> native</c><00:03:09.270><c> memory</c><00:03:09.600><c> and</c><00:03:10.400><c> what</c><00:03:11.400><c> you</c><00:03:12.300><c> know</c>

00:03:12.410 --> 00:03:12.420 align:start position:0%
cache native memory and what you know
 

00:03:12.420 --> 00:03:14.600 align:start position:0%
cache native memory and what you know
what<00:03:12.690><c> is</c><00:03:12.840><c> causing</c><00:03:13.140><c> those</c><00:03:13.500><c> issues</c><00:03:14.010><c> and</c><00:03:14.310><c> how</c><00:03:14.550><c> do</c>

00:03:14.600 --> 00:03:14.610 align:start position:0%
what is causing those issues and how do
 

00:03:14.610 --> 00:03:16.610 align:start position:0%
what is causing those issues and how do
we<00:03:14.790><c> troubleshoot</c><00:03:15.420><c> them</c><00:03:15.660><c> we'll</c><00:03:16.140><c> also</c><00:03:16.290><c> take</c><00:03:16.560><c> a</c>

00:03:16.610 --> 00:03:16.620 align:start position:0%
we troubleshoot them we'll also take a
 

00:03:16.620 --> 00:03:19.460 align:start position:0%
we troubleshoot them we'll also take a
look<00:03:16.800><c> at</c><00:03:16.980><c> out</c><00:03:17.850><c> of</c><00:03:17.910><c> memory</c><00:03:18.390><c> related</c><00:03:18.690><c> issues</c><00:03:19.260><c> due</c>

00:03:19.460 --> 00:03:19.470 align:start position:0%
look at out of memory related issues due
 

00:03:19.470 --> 00:03:23.810 align:start position:0%
look at out of memory related issues due
to<00:03:19.680><c> finalization</c><00:03:21.800><c> so</c><00:03:22.800><c> Java</c><00:03:23.010><c> heap</c><00:03:23.340><c> memory</c>

00:03:23.810 --> 00:03:23.820 align:start position:0%
to finalization so Java heap memory
 

00:03:23.820 --> 00:03:28.729 align:start position:0%
to finalization so Java heap memory
issues<00:03:26.420><c> so</c><00:03:27.420><c> when</c><00:03:27.600><c> we</c><00:03:27.750><c> when</c><00:03:28.050><c> we</c><00:03:28.170><c> look</c><00:03:28.200><c> at</c><00:03:28.530><c> those</c>

00:03:28.729 --> 00:03:28.739 align:start position:0%
issues so when we when we look at those
 

00:03:28.739 --> 00:03:32.720 align:start position:0%
issues so when we when we look at those
symptoms<00:03:29.070><c> you</c><00:03:29.760><c> know</c><00:03:30.600><c> just</c><00:03:31.140><c> rather</c><00:03:31.950><c> rather</c>

00:03:32.720 --> 00:03:32.730 align:start position:0%
symptoms you know just rather rather
 

00:03:32.730 --> 00:03:34.640 align:start position:0%
symptoms you know just rather rather
than<00:03:32.970><c> just</c><00:03:33.239><c> jumping</c><00:03:33.330><c> at</c><00:03:33.870><c> the</c><00:03:34.020><c> conclusion</c><00:03:34.620><c> that</c>

00:03:34.640 --> 00:03:34.650 align:start position:0%
than just jumping at the conclusion that
 

00:03:34.650 --> 00:03:37.220 align:start position:0%
than just jumping at the conclusion that
all<00:03:35.100><c> my</c><00:03:35.400><c> application</c><00:03:36.270><c> is</c><00:03:36.510><c> having</c><00:03:36.900><c> a</c><00:03:37.020><c> memory</c>

00:03:37.220 --> 00:03:37.230 align:start position:0%
all my application is having a memory
 

00:03:37.230 --> 00:03:39.140 align:start position:0%
all my application is having a memory
leak<00:03:37.530><c> because</c><00:03:37.890><c> I</c><00:03:37.920><c> see</c><00:03:38.280><c> those</c><00:03:38.459><c> symptoms</c><00:03:38.790><c> there</c>

00:03:39.140 --> 00:03:39.150 align:start position:0%
leak because I see those symptoms there
 

00:03:39.150 --> 00:03:41.090 align:start position:0%
leak because I see those symptoms there
is<00:03:39.290><c> unexpected</c><00:03:40.290><c> memory</c><00:03:40.620><c> growth</c><00:03:40.830><c> there</c><00:03:41.070><c> is</c>

00:03:41.090 --> 00:03:41.100 align:start position:0%
is unexpected memory growth there is
 

00:03:41.100 --> 00:03:43.520 align:start position:0%
is unexpected memory growth there is
poor<00:03:41.400><c> poor</c><00:03:42.060><c> performance</c><00:03:42.630><c> of</c><00:03:42.750><c> the</c><00:03:42.810><c> application</c>

00:03:43.520 --> 00:03:43.530 align:start position:0%
poor poor performance of the application
 

00:03:43.530 --> 00:03:45.470 align:start position:0%
poor poor performance of the application
or<00:03:43.680><c> my</c><00:03:43.890><c> application</c><00:03:44.489><c> is</c><00:03:44.610><c> failing</c><00:03:44.820><c> with</c><00:03:45.120><c> out</c><00:03:45.450><c> of</c>

00:03:45.470 --> 00:03:45.480 align:start position:0%
or my application is failing with out of
 

00:03:45.480 --> 00:03:48.500 align:start position:0%
or my application is failing with out of
memory<00:03:45.989><c> error</c><00:03:46.280><c> before</c><00:03:47.280><c> doing</c><00:03:47.700><c> that</c><00:03:47.850><c> before</c>

00:03:48.500 --> 00:03:48.510 align:start position:0%
memory error before doing that before
 

00:03:48.510 --> 00:03:50.600 align:start position:0%
memory error before doing that before
jumping<00:03:49.170><c> at</c><00:03:49.470><c> the</c><00:03:49.560><c> conclusion</c><00:03:50.160><c> that</c><00:03:50.190><c> there</c><00:03:50.580><c> is</c>

00:03:50.600 --> 00:03:50.610 align:start position:0%
jumping at the conclusion that there is
 

00:03:50.610 --> 00:03:52.670 align:start position:0%
jumping at the conclusion that there is
a<00:03:50.730><c> memory</c><00:03:51.030><c> leak</c><00:03:51.330><c> we</c><00:03:51.510><c> first</c><00:03:51.780><c> should</c><00:03:51.989><c> confirm</c>

00:03:52.670 --> 00:03:52.680 align:start position:0%
a memory leak we first should confirm
 

00:03:52.680 --> 00:03:55.070 align:start position:0%
a memory leak we first should confirm
whether<00:03:53.250><c> there</c><00:03:53.550><c> is</c><00:03:53.700><c> a</c><00:03:53.730><c> memory</c><00:03:54.030><c> leak</c><00:03:54.300><c> we</c><00:03:54.930><c> should</c>

00:03:55.070 --> 00:03:55.080 align:start position:0%
whether there is a memory leak we should
 

00:03:55.080 --> 00:03:57.800 align:start position:0%
whether there is a memory leak we should
monitor<00:03:55.290><c> our</c><00:03:55.680><c> Java</c><00:03:56.040><c> heap</c><00:03:56.340><c> usage</c><00:03:56.760><c> over</c><00:03:57.000><c> time</c><00:03:57.150><c> if</c>

00:03:57.800 --> 00:03:57.810 align:start position:0%
monitor our Java heap usage over time if
 

00:03:57.810 --> 00:03:59.990 align:start position:0%
monitor our Java heap usage over time if
there<00:03:58.080><c> are</c><00:03:58.110><c> full</c><00:03:58.620><c> G</c><00:03:58.800><c> C's</c><00:03:59.040><c> occurring</c><00:03:59.550><c> during</c>

00:03:59.990 --> 00:04:00.000 align:start position:0%
there are full G C's occurring during
 

00:04:00.000 --> 00:04:02.060 align:start position:0%
there are full G C's occurring during
the<00:04:00.269><c> runtime</c><00:04:00.720><c> of</c><00:04:00.750><c> our</c><00:04:01.110><c> application</c>

00:04:02.060 --> 00:04:02.070 align:start position:0%
the runtime of our application
 

00:04:02.070 --> 00:04:05.810 align:start position:0%
the runtime of our application
are<00:04:02.519><c> those</c><00:04:02.910><c> fuji</c><00:04:03.450><c> c's</c><00:04:03.750><c> able</c><00:04:04.410><c> to</c><00:04:04.560><c> claim</c><00:04:04.980><c> reclaim</c>

00:04:05.810 --> 00:04:05.820 align:start position:0%
are those fuji c's able to claim reclaim
 

00:04:05.820 --> 00:04:09.440 align:start position:0%
are those fuji c's able to claim reclaim
space<00:04:06.060><c> in</c><00:04:06.600><c> the</c><00:04:06.750><c> old</c><00:04:06.930><c> generation</c><00:04:07.560><c> of</c><00:04:08.209><c> the</c><00:04:09.209><c> Java</c>

00:04:09.440 --> 00:04:09.450 align:start position:0%
space in the old generation of the Java
 

00:04:09.450 --> 00:04:11.780 align:start position:0%
space in the old generation of the Java
heap<00:04:09.810><c> if</c><00:04:10.050><c> they</c><00:04:10.320><c> are</c><00:04:10.470><c> not</c><00:04:10.709><c> then</c><00:04:11.190><c> probably</c><00:04:11.640><c> it's</c>

00:04:11.780 --> 00:04:11.790 align:start position:0%
heap if they are not then probably it's
 

00:04:11.790 --> 00:04:14.479 align:start position:0%
heap if they are not then probably it's
just<00:04:11.880><c> a</c><00:04:12.209><c> configuration</c><00:04:12.810><c> issue</c><00:04:13.200><c> our</c><00:04:13.739><c> Java</c><00:04:14.190><c> heap</c>

00:04:14.479 --> 00:04:14.489 align:start position:0%
just a configuration issue our Java heap
 

00:04:14.489 --> 00:04:17.060 align:start position:0%
just a configuration issue our Java heap
size<00:04:14.760><c> may</c><00:04:15.300><c> not</c><00:04:15.540><c> be</c><00:04:15.930><c> appropriately</c><00:04:16.830><c> configured</c>

00:04:17.060 --> 00:04:17.070 align:start position:0%
size may not be appropriately configured
 

00:04:17.070 --> 00:04:20.210 align:start position:0%
size may not be appropriately configured
it<00:04:17.489><c> might</c><00:04:17.760><c> be</c><00:04:18.000><c> sized</c><00:04:18.239><c> too</c><00:04:18.660><c> small</c><00:04:18.989><c> so</c><00:04:19.830><c> the</c><00:04:20.010><c> first</c>

00:04:20.210 --> 00:04:20.220 align:start position:0%
it might be sized too small so the first
 

00:04:20.220 --> 00:04:22.640 align:start position:0%
it might be sized too small so the first
step<00:04:20.430><c> is</c><00:04:20.640><c> increase</c><00:04:21.180><c> the</c><00:04:21.209><c> heap</c><00:04:21.660><c> size</c><00:04:21.959><c> test</c><00:04:22.440><c> the</c>

00:04:22.640 --> 00:04:22.650 align:start position:0%
step is increase the heap size test the
 

00:04:22.650 --> 00:04:26.460 align:start position:0%
step is increase the heap size test the
application<00:04:23.310><c> again</c><00:04:23.490><c> and</c><00:04:23.970><c> if</c><00:04:24.539><c> there</c><00:04:25.020><c> is</c><00:04:25.260><c> still</c>

00:04:26.460 --> 00:04:26.470 align:start position:0%
application again and if there is still
 

00:04:26.470 --> 00:04:30.030 align:start position:0%
application again and if there is still
can<00:04:27.040><c> take</c><00:04:27.240><c> continuous</c><00:04:28.240><c> memory</c><00:04:28.660><c> growth</c><00:04:28.960><c> in</c><00:04:29.800><c> the</c>

00:04:30.030 --> 00:04:30.040 align:start position:0%
can take continuous memory growth in the
 

00:04:30.040 --> 00:04:33.000 align:start position:0%
can take continuous memory growth in the
application<00:04:30.760><c> in</c><00:04:30.910><c> our</c><00:04:31.000><c> processes</c><00:04:32.010><c> then</c>

00:04:33.000 --> 00:04:33.010 align:start position:0%
application in our processes then
 

00:04:33.010 --> 00:04:35.130 align:start position:0%
application in our processes then
probably<00:04:33.550><c> you</c><00:04:33.910><c> know</c><00:04:34.030><c> there</c><00:04:34.570><c> is</c><00:04:34.690><c> a</c><00:04:34.720><c> likelihood</c>

00:04:35.130 --> 00:04:35.140 align:start position:0%
probably you know there is a likelihood
 

00:04:35.140 --> 00:04:37.290 align:start position:0%
probably you know there is a likelihood
that<00:04:35.260><c> there</c><00:04:36.160><c> is</c><00:04:36.340><c> a</c><00:04:36.370><c> memory</c><00:04:36.730><c> leak</c><00:04:37.000><c> in</c><00:04:37.210><c> the</c>

00:04:37.290 --> 00:04:37.300 align:start position:0%
that there is a memory leak in the
 

00:04:37.300 --> 00:04:41.250 align:start position:0%
that there is a memory leak in the
application<00:04:38.280><c> so</c><00:04:39.280><c> we</c><00:04:40.210><c> can</c><00:04:40.390><c> use</c><00:04:40.570><c> various</c><00:04:40.960><c> tools</c>

00:04:41.250 --> 00:04:41.260 align:start position:0%
application so we can use various tools
 

00:04:41.260 --> 00:04:44.700 align:start position:0%
application so we can use various tools
to<00:04:41.590><c> monitor</c><00:04:41.830><c> heap</c><00:04:42.550><c> usage</c><00:04:43.060><c> of</c><00:04:43.240><c> our</c><00:04:43.840><c> application</c>

00:04:44.700 --> 00:04:44.710 align:start position:0%
to monitor heap usage of our application
 

00:04:44.710 --> 00:04:46.560 align:start position:0%
to monitor heap usage of our application
for<00:04:45.010><c> example</c><00:04:45.460><c> in</c><00:04:45.580><c> this</c><00:04:45.730><c> case</c><00:04:45.970><c> this</c><00:04:46.210><c> is</c><00:04:46.270><c> J</c>

00:04:46.560 --> 00:04:46.570 align:start position:0%
for example in this case this is J
 

00:04:46.570 --> 00:04:49.080 align:start position:0%
for example in this case this is J
console<00:04:47.110><c> connected</c><00:04:47.950><c> to</c><00:04:48.070><c> a</c><00:04:48.100><c> live</c><00:04:48.370><c> application</c>

00:04:49.080 --> 00:04:49.090 align:start position:0%
console connected to a live application
 

00:04:49.090 --> 00:04:52.110 align:start position:0%
console connected to a live application
and<00:04:49.240><c> monitoring</c><00:04:49.690><c> the</c><00:04:50.320><c> heap</c><00:04:51.220><c> usage</c><00:04:51.700><c> in</c><00:04:51.940><c> this</c>

00:04:52.110 --> 00:04:52.120 align:start position:0%
and monitoring the heap usage in this
 

00:04:52.120 --> 00:04:54.480 align:start position:0%
and monitoring the heap usage in this
case<00:04:52.390><c> it</c><00:04:52.600><c> is</c><00:04:52.780><c> clear</c><00:04:53.050><c> that</c><00:04:53.490><c> permanent</c>

00:04:54.480 --> 00:04:54.490 align:start position:0%
case it is clear that permanent
 

00:04:54.490 --> 00:04:57.630 align:start position:0%
case it is clear that permanent
generation<00:04:55.180><c> occupancy</c><00:04:55.960><c> is</c><00:04:56.440><c> growing</c><00:04:57.340><c> over</c>

00:04:57.630 --> 00:04:57.640 align:start position:0%
generation occupancy is growing over
 

00:04:57.640 --> 00:05:04.590 align:start position:0%
generation occupancy is growing over
time<00:05:00.300><c> if</c><00:05:01.300><c> it</c><00:05:01.510><c> is</c><00:05:01.600><c> not</c><00:05:01.810><c> possible</c><00:05:02.050><c> to</c><00:05:03.240><c> do</c><00:05:04.240><c> life</c>

00:05:04.590 --> 00:05:04.600 align:start position:0%
time if it is not possible to do life
 

00:05:04.600 --> 00:05:06.750 align:start position:0%
time if it is not possible to do life
monitoring<00:05:05.290><c> of</c><00:05:05.470><c> the</c><00:05:05.620><c> application</c><00:05:06.400><c> we</c><00:05:06.580><c> can</c>

00:05:06.750 --> 00:05:06.760 align:start position:0%
monitoring of the application we can
 

00:05:06.760 --> 00:05:09.690 align:start position:0%
monitoring of the application we can
collect<00:05:07.150><c> GC</c><00:05:07.660><c> logs</c><00:05:07.960><c> and</c><00:05:08.380><c> we</c><00:05:08.620><c> can</c><00:05:08.860><c> analyze</c><00:05:09.100><c> those</c>

00:05:09.690 --> 00:05:09.700 align:start position:0%
collect GC logs and we can analyze those
 

00:05:09.700 --> 00:05:13.620 align:start position:0%
collect GC logs and we can analyze those
those<00:05:10.120><c> GC</c><00:05:10.540><c> logs</c><00:05:10.840><c> to</c><00:05:11.140><c> see</c><00:05:11.380><c> what</c><00:05:12.090><c> is</c><00:05:13.090><c> the</c><00:05:13.420><c> heap</c>

00:05:13.620 --> 00:05:13.630 align:start position:0%
those GC logs to see what is the heap
 

00:05:13.630 --> 00:05:17.670 align:start position:0%
those GC logs to see what is the heap
usage<00:05:14.110><c> of</c><00:05:14.290><c> our</c><00:05:14.410><c> application</c><00:05:15.310><c> you</c><00:05:15.610><c> know</c><00:05:16.140><c> is</c><00:05:17.140><c> it</c>

00:05:17.670 --> 00:05:17.680 align:start position:0%
usage of our application you know is it
 

00:05:17.680 --> 00:05:22.110 align:start position:0%
usage of our application you know is it
is<00:05:17.890><c> it</c><00:05:19.140><c> sized</c><00:05:20.140><c> appropriately</c><00:05:20.560><c> is</c><00:05:21.250><c> it</c><00:05:21.430><c> good</c>

00:05:22.110 --> 00:05:22.120 align:start position:0%
is it sized appropriately is it good
 

00:05:22.120 --> 00:05:25.500 align:start position:0%
is it sized appropriately is it good
enough<00:05:22.480><c> is</c><00:05:22.720><c> it</c><00:05:22.900><c> big</c><00:05:23.080><c> enough</c><00:05:23.230><c> to</c><00:05:23.800><c> hold</c><00:05:24.270><c> the</c><00:05:25.270><c> live</c>

00:05:25.500 --> 00:05:25.510 align:start position:0%
enough is it big enough to hold the live
 

00:05:25.510 --> 00:05:28.320 align:start position:0%
enough is it big enough to hold the live
data<00:05:25.810><c> set</c><00:05:26.230><c> of</c><00:05:26.380><c> our</c><00:05:26.530><c> application</c><00:05:27.310><c> for</c><00:05:28.120><c> example</c>

00:05:28.320 --> 00:05:28.330 align:start position:0%
data set of our application for example
 

00:05:28.330 --> 00:05:31.140 align:start position:0%
data set of our application for example
in<00:05:28.660><c> this</c><00:05:28.780><c> case</c><00:05:29.020><c> from</c><00:05:29.260><c> the</c><00:05:29.470><c> GC</c><00:05:29.770><c> log</c><00:05:29.980><c> you</c><00:05:30.730><c> can</c><00:05:30.940><c> see</c>

00:05:31.140 --> 00:05:31.150 align:start position:0%
in this case from the GC log you can see
 

00:05:31.150 --> 00:05:34.410 align:start position:0%
in this case from the GC log you can see
that<00:05:31.420><c> even</c><00:05:31.660><c> after</c><00:05:32.050><c> full</c><00:05:32.500><c> GCS</c><00:05:32.980><c> the</c><00:05:33.670><c> heap</c><00:05:33.910><c> usage</c>

00:05:34.410 --> 00:05:34.420 align:start position:0%
that even after full GCS the heap usage
 

00:05:34.420 --> 00:05:38.580 align:start position:0%
that even after full GCS the heap usage
is<00:05:34.660><c> continuously</c><00:05:35.260><c> growing</c><00:05:36.540><c> so</c><00:05:37.540><c> the</c><00:05:37.690><c> option</c><00:05:38.320><c> we</c>

00:05:38.580 --> 00:05:38.590 align:start position:0%
is continuously growing so the option we
 

00:05:38.590 --> 00:05:41.250 align:start position:0%
is continuously growing so the option we
should<00:05:38.800><c> be</c><00:05:38.920><c> using</c><00:05:39.130><c> to</c><00:05:39.850><c> appropriately</c><00:05:40.840><c> sized</c>

00:05:41.250 --> 00:05:41.260 align:start position:0%
should be using to appropriately sized
 

00:05:41.260 --> 00:05:45.720 align:start position:0%
should be using to appropriately sized
our<00:05:41.830><c> Java</c><00:05:42.610><c> heap</c><00:05:42.940><c> is</c><00:05:43.120><c> -</c><00:05:43.540><c> X</c><00:05:43.750><c> MX</c><00:05:44.190><c> which</c><00:05:45.190><c> sets</c><00:05:45.490><c> the</c>

00:05:45.720 --> 00:05:45.730 align:start position:0%
our Java heap is - X MX which sets the
 

00:05:45.730 --> 00:05:49.830 align:start position:0%
our Java heap is - X MX which sets the
maximum<00:05:45.940><c> heap</c><00:05:46.720><c> size</c><00:05:47.220><c> for</c><00:05:48.220><c> our</c><00:05:48.250><c> Java</c><00:05:48.610><c> heap</c><00:05:48.970><c> and</c>

00:05:49.830 --> 00:05:49.840 align:start position:0%
maximum heap size for our Java heap and
 

00:05:49.840 --> 00:05:53.130 align:start position:0%
maximum heap size for our Java heap and
we<00:05:50.140><c> recommend</c><00:05:50.710><c> setting</c><00:05:51.100><c> this</c><00:05:51.550><c> value</c><00:05:51.880><c> equal</c><00:05:52.870><c> to</c>

00:05:53.130 --> 00:05:53.140 align:start position:0%
we recommend setting this value equal to
 

00:05:53.140 --> 00:05:55.830 align:start position:0%
we recommend setting this value equal to
the<00:05:53.470><c> value</c><00:05:53.590><c> of</c><00:05:53.800><c> minus</c><00:05:54.460><c> X</c><00:05:54.730><c> ms</c><00:05:55.150><c> which</c><00:05:55.450><c> sets</c><00:05:55.720><c> the</c>

00:05:55.830 --> 00:05:55.840 align:start position:0%
the value of minus X ms which sets the
 

00:05:55.840 --> 00:06:01.980 align:start position:0%
the value of minus X ms which sets the
initial<00:05:56.440><c> value</c><00:05:56.860><c> of</c><00:05:57.060><c> Java</c><00:05:58.060><c> heap</c><00:05:59.730><c> so</c><00:06:00.840><c> so</c><00:06:01.840><c> there</c>

00:06:01.980 --> 00:06:01.990 align:start position:0%
initial value of Java heap so so there
 

00:06:01.990 --> 00:06:03.960 align:start position:0%
initial value of Java heap so so there
are<00:06:02.080><c> three</c><00:06:02.380><c> steps</c><00:06:02.680><c> of</c><00:06:03.010><c> troubleshooting</c><00:06:03.490><c> any</c>

00:06:03.960 --> 00:06:03.970 align:start position:0%
are three steps of troubleshooting any
 

00:06:03.970 --> 00:06:07.080 align:start position:0%
are three steps of troubleshooting any
problem<00:06:04.540><c> you</c><00:06:05.169><c> know</c><00:06:05.430><c> understand</c><00:06:06.430><c> that</c><00:06:06.820><c> what</c>

00:06:07.080 --> 00:06:07.090 align:start position:0%
problem you know understand that what
 

00:06:07.090 --> 00:06:09.240 align:start position:0%
problem you know understand that what
the<00:06:07.270><c> problem</c><00:06:07.510><c> is</c><00:06:07.870><c> for</c><00:06:08.290><c> example</c><00:06:08.770><c> in</c><00:06:08.890><c> this</c><00:06:09.010><c> case</c>

00:06:09.240 --> 00:06:09.250 align:start position:0%
the problem is for example in this case
 

00:06:09.250 --> 00:06:12.240 align:start position:0%
the problem is for example in this case
we<00:06:09.310><c> are</c><00:06:09.880><c> looking</c><00:06:10.390><c> at</c><00:06:10.690><c> out</c><00:06:11.230><c> of</c><00:06:11.560><c> memory</c><00:06:11.830><c> or</c>

00:06:12.240 --> 00:06:12.250 align:start position:0%
we are looking at out of memory or
 

00:06:12.250 --> 00:06:14.670 align:start position:0%
we are looking at out of memory or
memory<00:06:12.580><c> related</c><00:06:13.270><c> issues</c><00:06:13.630><c> to</c><00:06:13.930><c> Java</c><00:06:14.320><c> heap</c>

00:06:14.670 --> 00:06:14.680 align:start position:0%
memory related issues to Java heap
 

00:06:14.680 --> 00:06:17.640 align:start position:0%
memory related issues to Java heap
second<00:06:15.460><c> step</c><00:06:15.700><c> is</c><00:06:15.910><c> to</c><00:06:16.210><c> get</c><00:06:16.450><c> insights</c><00:06:17.140><c> into</c><00:06:17.470><c> the</c>

00:06:17.640 --> 00:06:17.650 align:start position:0%
second step is to get insights into the
 

00:06:17.650 --> 00:06:21.180 align:start position:0%
second step is to get insights into the
problem<00:06:18.040><c> to</c><00:06:18.190><c> collect</c><00:06:18.700><c> diagnostic</c><00:06:19.690><c> data</c><00:06:20.190><c> from</c>

00:06:21.180 --> 00:06:21.190 align:start position:0%
problem to collect diagnostic data from
 

00:06:21.190 --> 00:06:22.830 align:start position:0%
problem to collect diagnostic data from
the<00:06:21.370><c> system</c><00:06:21.580><c> and</c><00:06:22.000><c> the</c><00:06:22.090><c> third</c><00:06:22.300><c> step</c><00:06:22.600><c> is</c><00:06:22.810><c> to</c>

00:06:22.830 --> 00:06:22.840 align:start position:0%
the system and the third step is to
 

00:06:22.840 --> 00:06:25.140 align:start position:0%
the system and the third step is to
analyze<00:06:23.500><c> that</c><00:06:23.770><c> data</c><00:06:23.830><c> to</c><00:06:24.340><c> understand</c><00:06:24.850><c> why</c><00:06:25.090><c> the</c>

00:06:25.140 --> 00:06:25.150 align:start position:0%
analyze that data to understand why the
 

00:06:25.150 --> 00:06:27.630 align:start position:0%
analyze that data to understand why the
problem<00:06:25.690><c> is</c><00:06:25.840><c> occurring</c><00:06:26.020><c> and</c><00:06:26.490><c> find</c><00:06:27.490><c> the</c>

00:06:27.630 --> 00:06:27.640 align:start position:0%
problem is occurring and find the
 

00:06:27.640 --> 00:06:31.590 align:start position:0%
problem is occurring and find the
solution<00:06:28.120><c> so</c><00:06:28.750><c> let's</c><00:06:29.740><c> go</c><00:06:29.919><c> ahead</c><00:06:30.220><c> with</c><00:06:30.430><c> the</c><00:06:30.640><c> step</c>

00:06:31.590 --> 00:06:31.600 align:start position:0%
solution so let's go ahead with the step
 

00:06:31.600 --> 00:06:34.050 align:start position:0%
solution so let's go ahead with the step
of<00:06:31.870><c> collecting</c><00:06:32.470><c> diagnostic</c><00:06:33.280><c> data</c><00:06:33.490><c> what</c>

00:06:34.050 --> 00:06:34.060 align:start position:0%
of collecting diagnostic data what
 

00:06:34.060 --> 00:06:35.550 align:start position:0%
of collecting diagnostic data what
diagnostic<00:06:34.690><c> data</c><00:06:34.810><c> we</c><00:06:35.080><c> should</c><00:06:35.260><c> be</c><00:06:35.380><c> collecting</c>

00:06:35.550 --> 00:06:35.560 align:start position:0%
diagnostic data we should be collecting
 

00:06:35.560 --> 00:06:39.420 align:start position:0%
diagnostic data we should be collecting
to<00:06:36.720><c> to</c><00:06:37.720><c> troubleshoot</c><00:06:38.470><c> Java</c><00:06:38.680><c> heap</c><00:06:39.010><c> related</c>

00:06:39.420 --> 00:06:39.430 align:start position:0%
to to troubleshoot Java heap related
 

00:06:39.430 --> 00:06:41.060 align:start position:0%
to to troubleshoot Java heap related
memory<00:06:39.760><c> problem</c>

00:06:41.060 --> 00:06:41.070 align:start position:0%
memory problem
 

00:06:41.070 --> 00:06:44.370 align:start position:0%
memory problem
and<00:06:42.070><c> so</c><00:06:42.250><c> far</c><00:06:42.460><c> for</c><00:06:42.970><c> for</c><00:06:43.270><c> Java</c><00:06:43.570><c> heap</c><00:06:43.900><c> related</c>

00:06:44.370 --> 00:06:44.380 align:start position:0%
and so far for for Java heap related
 

00:06:44.380 --> 00:06:47.520 align:start position:0%
and so far for for Java heap related
memory<00:06:44.710><c> issues</c><00:06:45.040><c> we</c><00:06:45.250><c> should</c><00:06:45.490><c> be</c><00:06:46.139><c> collecting</c><00:06:47.139><c> GC</c>

00:06:47.520 --> 00:06:47.530 align:start position:0%
memory issues we should be collecting GC
 

00:06:47.530 --> 00:06:51.030 align:start position:0%
memory issues we should be collecting GC
logs<00:06:47.770><c> heap</c><00:06:48.400><c> dump</c><00:06:48.669><c> heap</c><00:06:49.570><c> histograms</c><00:06:50.229><c> so</c><00:06:50.830><c> let's</c>

00:06:51.030 --> 00:06:51.040 align:start position:0%
logs heap dump heap histograms so let's
 

00:06:51.040 --> 00:06:53.850 align:start position:0%
logs heap dump heap histograms so let's
take<00:06:51.340><c> a</c><00:06:51.520><c> look</c><00:06:51.669><c> at</c><00:06:51.880><c> you</c><00:06:52.510><c> know</c><00:06:52.540><c> in</c><00:06:52.780><c> detail</c><00:06:53.020><c> one</c><00:06:53.680><c> by</c>

00:06:53.850 --> 00:06:53.860 align:start position:0%
take a look at you know in detail one by
 

00:06:53.860 --> 00:06:57.300 align:start position:0%
take a look at you know in detail one by
one<00:06:54.070><c> how</c><00:06:54.960><c> we</c><00:06:55.960><c> which</c><00:06:56.410><c> tools</c><00:06:56.740><c> we</c><00:06:56.949><c> can</c><00:06:57.100><c> use</c><00:06:57.160><c> to</c>

00:06:57.300 --> 00:06:57.310 align:start position:0%
one how we which tools we can use to
 

00:06:57.310 --> 00:07:00.510 align:start position:0%
one how we which tools we can use to
collect<00:06:57.610><c> this</c><00:06:57.880><c> data</c><00:06:57.940><c> and</c><00:06:58.360><c> how</c><00:06:58.540><c> this</c><00:06:59.070><c> each</c><00:07:00.070><c> each</c>

00:07:00.510 --> 00:07:00.520 align:start position:0%
collect this data and how this each each
 

00:07:00.520 --> 00:07:02.490 align:start position:0%
collect this data and how this each each
each<00:07:00.850><c> diagnostic</c><00:07:01.600><c> data</c><00:07:01.690><c> helps</c><00:07:02.169><c> us</c><00:07:02.320><c> in</c>

00:07:02.490 --> 00:07:02.500 align:start position:0%
each diagnostic data helps us in
 

00:07:02.500 --> 00:07:05.310 align:start position:0%
each diagnostic data helps us in
troubleshooting<00:07:03.449><c> GC</c><00:07:04.449><c> locks</c><00:07:04.720><c> they</c><00:07:05.020><c> are</c><00:07:05.110><c> very</c>

00:07:05.310 --> 00:07:05.320 align:start position:0%
troubleshooting GC locks they are very
 

00:07:05.320 --> 00:07:06.900 align:start position:0%
troubleshooting GC locks they are very
helpful<00:07:05.560><c> in</c><00:07:05.830><c> determining</c><00:07:06.070><c> the</c><00:07:06.669><c> heap</c>

00:07:06.900 --> 00:07:06.910 align:start position:0%
helpful in determining the heap
 

00:07:06.910 --> 00:07:10.530 align:start position:0%
helpful in determining the heap
requirements<00:07:07.720><c> they</c><00:07:08.500><c> tell</c><00:07:08.770><c> us</c><00:07:09.040><c> what</c><00:07:09.850><c> is</c><00:07:10.150><c> the</c>

00:07:10.530 --> 00:07:10.540 align:start position:0%
requirements they tell us what is the
 

00:07:10.540 --> 00:07:13.440 align:start position:0%
requirements they tell us what is the
you<00:07:11.110><c> know</c><00:07:11.139><c> the</c><00:07:11.530><c> appropriate</c><00:07:12.070><c> size</c><00:07:12.310><c> of</c><00:07:12.520><c> Java</c>

00:07:13.440 --> 00:07:13.450 align:start position:0%
you know the appropriate size of Java
 

00:07:13.450 --> 00:07:14.670 align:start position:0%
you know the appropriate size of Java
heap

00:07:14.670 --> 00:07:14.680 align:start position:0%
heap
 

00:07:14.680 --> 00:07:17.610 align:start position:0%
heap
they<00:07:14.970><c> tell</c><00:07:15.970><c> us</c><00:07:16.150><c> if</c><00:07:16.389><c> there</c><00:07:16.540><c> are</c><00:07:16.570><c> excessive</c><00:07:17.169><c> GCS</c>

00:07:17.610 --> 00:07:17.620 align:start position:0%
they tell us if there are excessive GCS
 

00:07:17.620 --> 00:07:20.010 align:start position:0%
they tell us if there are excessive GCS
or<00:07:17.919><c> if</c><00:07:18.130><c> there</c><00:07:18.310><c> are</c><00:07:18.520><c> long</c><00:07:18.820><c> GC</c><00:07:19.330><c> pauses</c><00:07:19.570><c> in</c>

00:07:20.010 --> 00:07:20.020 align:start position:0%
or if there are long GC pauses in
 

00:07:20.020 --> 00:07:24.330 align:start position:0%
or if there are long GC pauses in
application<00:07:20.860><c> execution</c><00:07:22.710><c> these</c><00:07:23.710><c> are</c><00:07:23.889><c> the</c><00:07:24.010><c> GC</c>

00:07:24.330 --> 00:07:24.340 align:start position:0%
application execution these are the GC
 

00:07:24.340 --> 00:07:26.280 align:start position:0%
application execution these are the GC
logging<00:07:24.669><c> options</c><00:07:25.150><c> that</c><00:07:25.360><c> can</c><00:07:25.630><c> be</c><00:07:25.810><c> used</c><00:07:26.080><c> to</c>

00:07:26.280 --> 00:07:26.290 align:start position:0%
logging options that can be used to
 

00:07:26.290 --> 00:07:31.170 align:start position:0%
logging options that can be used to
collect<00:07:26.740><c> GC</c><00:07:27.220><c> logs</c><00:07:27.460><c> for</c><00:07:28.210><c> Java</c><00:07:28.450><c> 9</c><00:07:28.780><c> we</c><00:07:29.410><c> can</c><00:07:29.620><c> we</c><00:07:30.180><c> use</c>

00:07:31.170 --> 00:07:31.180 align:start position:0%
collect GC logs for Java 9 we can we use
 

00:07:31.180 --> 00:07:36.510 align:start position:0%
collect GC logs for Java 9 we can we use
my<00:07:31.630><c> new</c><00:07:32.520><c> JVM</c><00:07:33.520><c> option</c><00:07:33.970><c> minus</c><00:07:34.450><c> X</c><00:07:34.720><c> log</c><00:07:35.229><c> GC</c><00:07:35.830><c> to</c>

00:07:36.510 --> 00:07:36.520 align:start position:0%
my new JVM option minus X log GC to
 

00:07:36.520 --> 00:07:40.020 align:start position:0%
my new JVM option minus X log GC to
collect<00:07:37.180><c> GC</c><00:07:37.510><c> logs</c><00:07:37.750><c> and</c><00:07:38.310><c> you</c><00:07:39.310><c> know</c><00:07:39.430><c> these</c><00:07:39.610><c> these</c>

00:07:40.020 --> 00:07:40.030 align:start position:0%
collect GC logs and you know these these
 

00:07:40.030 --> 00:07:43.590 align:start position:0%
collect GC logs and you know these these
in<00:07:40.389><c> the</c><00:07:40.510><c> first</c><00:07:40.660><c> two</c><00:07:40.930><c> lines</c><00:07:41.380><c> tell</c><00:07:42.310><c> us</c><00:07:42.520><c> the</c><00:07:43.150><c> GC</c>

00:07:43.590 --> 00:07:43.600 align:start position:0%
in the first two lines tell us the GC
 

00:07:43.600 --> 00:07:46.620 align:start position:0%
in the first two lines tell us the GC
log<00:07:43.810><c> options</c><00:07:44.530><c> to</c><00:07:44.950><c> be</c><00:07:45.039><c> used</c><00:07:45.220><c> with</c><00:07:45.430><c> G</c><00:07:45.639><c> 1</c><00:07:45.669><c> and</c><00:07:46.120><c> non</c>

00:07:46.620 --> 00:07:46.630 align:start position:0%
log options to be used with G 1 and non
 

00:07:46.630 --> 00:07:48.840 align:start position:0%
log options to be used with G 1 and non
G<00:07:46.870><c> 1</c><00:07:47.080><c> collectors</c><00:07:47.620><c> and</c><00:07:47.830><c> for</c><00:07:48.280><c> prior</c><00:07:48.520><c> Java</c>

00:07:48.840 --> 00:07:48.850 align:start position:0%
G 1 collectors and for prior Java
 

00:07:48.850 --> 00:07:50.879 align:start position:0%
G 1 collectors and for prior Java
versions<00:07:49.300><c> we</c><00:07:49.479><c> can</c><00:07:49.630><c> use</c><00:07:49.810><c> print</c><00:07:50.110><c> GC</c><00:07:50.470><c> details</c>

00:07:50.879 --> 00:07:50.889 align:start position:0%
versions we can use print GC details
 

00:07:50.889 --> 00:07:53.700 align:start position:0%
versions we can use print GC details
print<00:07:51.250><c> GC</c><00:07:51.550><c> time</c><00:07:51.760><c> stamps</c><00:07:52.389><c> date</c><00:07:52.990><c> stamps</c><00:07:53.500><c> and</c>

00:07:53.700 --> 00:07:53.710 align:start position:0%
print GC time stamps date stamps and
 

00:07:53.710 --> 00:07:56.370 align:start position:0%
print GC time stamps date stamps and
minus<00:07:54.100><c> X</c><00:07:54.280><c> log</c><00:07:54.700><c> GC</c><00:07:55.210><c> these</c><00:07:55.720><c> options</c><00:07:56.110><c> are</c><00:07:56.260><c> not</c>

00:07:56.370 --> 00:07:56.380 align:start position:0%
minus X log GC these options are not
 

00:07:56.380 --> 00:07:58.800 align:start position:0%
minus X log GC these options are not
available<00:07:56.590><c> in</c><00:07:57.039><c> Jellico</c><00:07:57.340><c> 9</c><00:07:57.700><c> they</c><00:07:58.360><c> have</c><00:07:58.599><c> been</c>

00:07:58.800 --> 00:07:58.810 align:start position:0%
available in Jellico 9 they have been
 

00:07:58.810 --> 00:08:01.589 align:start position:0%
available in Jellico 9 they have been
you<00:07:59.320><c> know</c><00:07:59.440><c> you</c><00:08:00.220><c> would</c><00:08:00.669><c> see</c><00:08:00.700><c> a</c><00:08:00.849><c> warning</c><00:08:01.240><c> that</c>

00:08:01.589 --> 00:08:01.599 align:start position:0%
you know you would see a warning that
 

00:08:01.599 --> 00:08:03.839 align:start position:0%
you know you would see a warning that
these<00:08:01.930><c> are</c><00:08:02.169><c> deprecated</c><00:08:02.800><c> but</c><00:08:03.099><c> internally</c><00:08:03.700><c> they</c>

00:08:03.839 --> 00:08:03.849 align:start position:0%
these are deprecated but internally they
 

00:08:03.849 --> 00:08:08.150 align:start position:0%
these are deprecated but internally they
are<00:08:03.940><c> mapped</c><00:08:04.180><c> to</c><00:08:04.479><c> using</c><00:08:05.440><c> minus</c><00:08:05.919><c> X</c><00:08:06.160><c> log</c><00:08:06.490><c> option</c>

00:08:08.150 --> 00:08:08.160 align:start position:0%
are mapped to using minus X log option
 

00:08:08.160 --> 00:08:10.710 align:start position:0%
are mapped to using minus X log option
so<00:08:09.160><c> here</c><00:08:09.370><c> in</c><00:08:09.520><c> this</c><00:08:09.610><c> example</c><00:08:10.030><c> we</c><00:08:10.270><c> can</c><00:08:10.479><c> see</c><00:08:10.690><c> that</c>

00:08:10.710 --> 00:08:10.720 align:start position:0%
so here in this example we can see that
 

00:08:10.720 --> 00:08:15.060 align:start position:0%
so here in this example we can see that
from<00:08:11.110><c> GC</c><00:08:11.530><c> logs</c><00:08:11.800><c> we</c><00:08:12.039><c> can</c><00:08:12.190><c> see</c><00:08:12.370><c> heap</c><00:08:12.880><c> usage</c><00:08:14.070><c> in</c>

00:08:15.060 --> 00:08:15.070 align:start position:0%
from GC logs we can see heap usage in
 

00:08:15.070 --> 00:08:18.930 align:start position:0%
from GC logs we can see heap usage in
this<00:08:15.310><c> example</c><00:08:16.080><c> there</c><00:08:17.080><c> is</c><00:08:17.200><c> a</c><00:08:17.229><c> full</c><00:08:17.500><c> GC</c><00:08:17.889><c> and</c><00:08:18.099><c> it</c>

00:08:18.930 --> 00:08:18.940 align:start position:0%
this example there is a full GC and it
 

00:08:18.940 --> 00:08:22.050 align:start position:0%
this example there is a full GC and it
is<00:08:19.240><c> not</c><00:08:19.479><c> able</c><00:08:19.780><c> to</c><00:08:19.960><c> collect</c><00:08:20.260><c> any</c><00:08:20.740><c> spare</c><00:08:21.430><c> any</c><00:08:21.639><c> any</c>

00:08:22.050 --> 00:08:22.060 align:start position:0%
is not able to collect any spare any any
 

00:08:22.060 --> 00:08:25.589 align:start position:0%
is not able to collect any spare any any
you<00:08:22.720><c> know</c><00:08:23.130><c> it</c><00:08:24.130><c> is</c><00:08:24.310><c> not</c><00:08:24.430><c> able</c><00:08:24.669><c> to</c><00:08:24.940><c> free</c><00:08:25.210><c> up</c><00:08:25.240><c> any</c>

00:08:25.589 --> 00:08:25.599 align:start position:0%
you know it is not able to free up any
 

00:08:25.599 --> 00:08:28.440 align:start position:0%
you know it is not able to free up any
space<00:08:25.990><c> in</c><00:08:26.020><c> all</c><00:08:26.710><c> generation</c><00:08:27.400><c> which</c><00:08:27.849><c> means</c><00:08:28.150><c> that</c>

00:08:28.440 --> 00:08:28.450 align:start position:0%
space in all generation which means that
 

00:08:28.450 --> 00:08:30.510 align:start position:0%
space in all generation which means that
probably<00:08:29.080><c> old</c><00:08:29.349><c> generation</c><00:08:29.860><c> is</c><00:08:30.010><c> not</c><00:08:30.220><c> big</c>

00:08:30.510 --> 00:08:30.520 align:start position:0%
probably old generation is not big
 

00:08:30.520 --> 00:08:33.230 align:start position:0%
probably old generation is not big
enough<00:08:30.550><c> to</c><00:08:31.120><c> hold</c><00:08:31.300><c> data</c><00:08:31.840><c> or</c><00:08:32.200><c> hold</c><00:08:32.440><c> the</c><00:08:32.589><c> live</c>

00:08:33.230 --> 00:08:33.240 align:start position:0%
enough to hold data or hold the live
 

00:08:33.240 --> 00:08:38.310 align:start position:0%
enough to hold data or hold the live
data<00:08:34.240><c> set</c><00:08:34.599><c> of</c><00:08:34.779><c> our</c><00:08:34.900><c> application</c><00:08:36.839><c> GC</c><00:08:37.839><c> logs</c><00:08:38.050><c> also</c>

00:08:38.310 --> 00:08:38.320 align:start position:0%
data set of our application GC logs also
 

00:08:38.320 --> 00:08:40.680 align:start position:0%
data set of our application GC logs also
can<00:08:38.740><c> show</c><00:08:38.950><c> us</c><00:08:39.130><c> if</c><00:08:39.370><c> there</c><00:08:39.520><c> are</c><00:08:39.669><c> excessive</c><00:08:40.240><c> G</c><00:08:40.450><c> C's</c>

00:08:40.680 --> 00:08:40.690 align:start position:0%
can show us if there are excessive G C's
 

00:08:40.690 --> 00:08:42.570 align:start position:0%
can show us if there are excessive G C's
in<00:08:40.959><c> this</c><00:08:41.140><c> case</c><00:08:41.349><c> there</c><00:08:41.589><c> are</c><00:08:41.620><c> back-to-back</c>

00:08:42.570 --> 00:08:42.580 align:start position:0%
in this case there are back-to-back
 

00:08:42.580 --> 00:08:45.510 align:start position:0%
in this case there are back-to-back
frequent<00:08:43.150><c> full</c><00:08:43.419><c> GC</c><00:08:43.810><c> s</c><00:08:43.870><c> which</c><00:08:44.200><c> you</c><00:08:44.950><c> know</c><00:08:45.070><c> impact</c>

00:08:45.510 --> 00:08:45.520 align:start position:0%
frequent full GC s which you know impact
 

00:08:45.520 --> 00:08:49.819 align:start position:0%
frequent full GC s which you know impact
the<00:08:45.790><c> application</c><00:08:46.420><c> performance</c><00:08:47.400><c> very</c><00:08:48.400><c> badly</c>

00:08:49.819 --> 00:08:49.829 align:start position:0%
the application performance very badly
 

00:08:49.829 --> 00:08:52.710 align:start position:0%
the application performance very badly
GC<00:08:50.829><c> rocks</c><00:08:51.070><c> can</c><00:08:51.280><c> show</c><00:08:51.490><c> us</c><00:08:51.670><c> if</c><00:08:51.820><c> there</c><00:08:52.000><c> are</c><00:08:52.270><c> long</c>

00:08:52.710 --> 00:08:52.720 align:start position:0%
GC rocks can show us if there are long
 

00:08:52.720 --> 00:08:53.910 align:start position:0%
GC rocks can show us if there are long
GC<00:08:53.260><c> pauses</c>

00:08:53.910 --> 00:08:53.920 align:start position:0%
GC pauses
 

00:08:53.920 --> 00:08:55.590 align:start position:0%
GC pauses
this<00:08:54.070><c> case</c><00:08:54.279><c> there's</c><00:08:54.579><c> a</c><00:08:54.639><c> full</c><00:08:54.910><c> GC</c><00:08:55.269><c> which</c><00:08:55.450><c> is</c>

00:08:55.590 --> 00:08:55.600 align:start position:0%
this case there's a full GC which is
 

00:08:55.600 --> 00:08:59.490 align:start position:0%
this case there's a full GC which is
taking<00:08:55.990><c> 50</c><00:08:56.560><c> seconds</c><00:08:57.220><c> of</c><00:08:57.399><c> time</c><00:08:58.360><c> and</c><00:08:58.750><c> that's</c>

00:08:59.490 --> 00:08:59.500 align:start position:0%
taking 50 seconds of time and that's
 

00:08:59.500 --> 00:09:02.340 align:start position:0%
taking 50 seconds of time and that's
pretty<00:09:00.040><c> long</c><00:09:00.310><c> so</c><00:09:00.700><c> we</c><00:09:00.880><c> should</c><00:09:01.149><c> investigate</c><00:09:01.839><c> and</c>

00:09:02.340 --> 00:09:02.350 align:start position:0%
pretty long so we should investigate and
 

00:09:02.350 --> 00:09:04.440 align:start position:0%
pretty long so we should investigate and
find<00:09:02.620><c> out</c><00:09:02.889><c> why</c><00:09:03.220><c> these</c><00:09:03.279><c> long</c><00:09:03.970><c> cc's</c><00:09:04.420><c> are</c>

00:09:04.440 --> 00:09:04.450 align:start position:0%
find out why these long cc's are
 

00:09:04.450 --> 00:09:07.710 align:start position:0%
find out why these long cc's are
occurring<00:09:04.990><c> and</c><00:09:05.230><c> how</c><00:09:05.889><c> we</c><00:09:05.950><c> can</c><00:09:06.519><c> avoid</c><00:09:06.880><c> full</c><00:09:07.570><c> G</c>

00:09:07.710 --> 00:09:07.720 align:start position:0%
occurring and how we can avoid full G
 

00:09:07.720 --> 00:09:10.670 align:start position:0%
occurring and how we can avoid full G
season<00:09:08.110><c> our</c><00:09:08.230><c> application</c><00:09:09.149><c> so</c><00:09:10.149><c> the</c><00:09:10.269><c> next</c>

00:09:10.670 --> 00:09:10.680 align:start position:0%
season our application so the next
 

00:09:10.680 --> 00:09:12.930 align:start position:0%
season our application so the next
diagnostic<00:09:11.680><c> data</c><00:09:11.889><c> which</c><00:09:12.519><c> is</c><00:09:12.670><c> the</c><00:09:12.790><c> most</c>

00:09:12.930 --> 00:09:12.940 align:start position:0%
diagnostic data which is the most
 

00:09:12.940 --> 00:09:15.379 align:start position:0%
diagnostic data which is the most
important<00:09:13.449><c> diagnostic</c><00:09:14.019><c> data</c><00:09:14.139><c> to</c>

00:09:15.379 --> 00:09:15.389 align:start position:0%
important diagnostic data to
 

00:09:15.389 --> 00:09:18.150 align:start position:0%
important diagnostic data to
troubleshoot<00:09:16.389><c> memory</c><00:09:16.810><c> related</c><00:09:17.350><c> issues</c><00:09:17.980><c> is</c>

00:09:18.150 --> 00:09:18.160 align:start position:0%
troubleshoot memory related issues is
 

00:09:18.160 --> 00:09:21.060 align:start position:0%
troubleshoot memory related issues is
heap<00:09:18.399><c> dumps</c><00:09:18.790><c> it</c><00:09:19.120><c> can</c><00:09:19.570><c> be</c><00:09:19.750><c> collected</c><00:09:20.230><c> using</c><00:09:20.260><c> J</c>

00:09:21.060 --> 00:09:21.070 align:start position:0%
heap dumps it can be collected using J
 

00:09:21.070 --> 00:09:24.810 align:start position:0%
heap dumps it can be collected using J
command<00:09:21.459><c> J</c><00:09:21.699><c> map</c><00:09:22.480><c> J</c><00:09:23.079><c> console</c><00:09:23.680><c> Java</c><00:09:24.430><c> mission</c>

00:09:24.810 --> 00:09:24.820 align:start position:0%
command J map J console Java mission
 

00:09:24.820 --> 00:09:27.090 align:start position:0%
command J map J console Java mission
control<00:09:25.269><c> and</c><00:09:25.480><c> also</c><00:09:25.930><c> there</c><00:09:26.199><c> is</c><00:09:26.290><c> an</c><00:09:26.410><c> option</c><00:09:26.800><c> he</c>

00:09:27.090 --> 00:09:27.100 align:start position:0%
control and also there is an option he
 

00:09:27.100 --> 00:09:29.699 align:start position:0%
control and also there is an option he
pump<00:09:27.550><c> on</c><00:09:27.820><c> out</c><00:09:28.060><c> of</c><00:09:28.089><c> memory</c><00:09:28.510><c> error</c><00:09:28.839><c> which</c><00:09:29.380><c> is</c><00:09:29.560><c> you</c>

00:09:29.699 --> 00:09:29.709 align:start position:0%
pump on out of memory error which is you
 

00:09:29.709 --> 00:09:32.939 align:start position:0%
pump on out of memory error which is you
know<00:09:29.829><c> pretty</c><00:09:29.860><c> handy</c><00:09:30.490><c> because</c><00:09:31.199><c> you</c><00:09:32.199><c> have</c><00:09:32.709><c> this</c>

00:09:32.939 --> 00:09:32.949 align:start position:0%
know pretty handy because you have this
 

00:09:32.949 --> 00:09:35.220 align:start position:0%
know pretty handy because you have this
in<00:09:33.910><c> place</c><00:09:33.970><c> when</c><00:09:34.510><c> you</c><00:09:34.600><c> launch</c><00:09:34.810><c> your</c><00:09:35.019><c> java</c>

00:09:35.220 --> 00:09:35.230 align:start position:0%
in place when you launch your java
 

00:09:35.230 --> 00:09:38.280 align:start position:0%
in place when you launch your java
applications<00:09:36.040><c> and</c><00:09:36.399><c> if</c><00:09:37.149><c> in</c><00:09:37.570><c> case</c><00:09:37.959><c> your</c>

00:09:38.280 --> 00:09:38.290 align:start position:0%
applications and if in case your
 

00:09:38.290 --> 00:09:40.439 align:start position:0%
applications and if in case your
application<00:09:38.920><c> fails</c><00:09:39.130><c> with</c><00:09:39.430><c> out</c><00:09:39.940><c> of</c><00:09:40.240><c> memory</c>

00:09:40.439 --> 00:09:40.449 align:start position:0%
application fails with out of memory
 

00:09:40.449 --> 00:09:43.050 align:start position:0%
application fails with out of memory
error<00:09:40.750><c> you</c><00:09:41.050><c> would</c><00:09:41.290><c> have</c><00:09:41.620><c> heap</c><00:09:42.040><c> dump</c><00:09:42.310><c> available</c>

00:09:43.050 --> 00:09:43.060 align:start position:0%
error you would have heap dump available
 

00:09:43.060 --> 00:09:46.319 align:start position:0%
error you would have heap dump available
with<00:09:43.209><c> you</c><00:09:43.420><c> to</c><00:09:43.750><c> to</c><00:09:44.500><c> to</c><00:09:45.190><c> troubleshoot</c><00:09:45.730><c> later</c><00:09:46.000><c> on</c>

00:09:46.319 --> 00:09:46.329 align:start position:0%
with you to to to troubleshoot later on
 

00:09:46.329 --> 00:09:49.170 align:start position:0%
with you to to to troubleshoot later on
you<00:09:46.600><c> know</c><00:09:46.720><c> why</c><00:09:47.430><c> your</c><00:09:48.430><c> application</c><00:09:48.550><c> failed</c>

00:09:49.170 --> 00:09:49.180 align:start position:0%
you know why your application failed
 

00:09:49.180 --> 00:09:52.079 align:start position:0%
you know why your application failed
with<00:09:49.389><c> out</c><00:09:49.570><c> of</c><00:09:49.600><c> memory</c><00:09:49.930><c> error</c><00:09:50.370><c> so</c><00:09:51.370><c> in</c><00:09:51.490><c> this</c>

00:09:52.079 --> 00:09:52.089 align:start position:0%
with out of memory error so in this
 

00:09:52.089 --> 00:09:54.569 align:start position:0%
with out of memory error so in this
snapshot<00:09:52.420><c> I</c><00:09:53.050><c> hope</c><00:09:53.410><c> you</c><00:09:53.589><c> can</c><00:09:53.800><c> see</c><00:09:54.010><c> clearly</c><00:09:54.310><c> at</c>

00:09:54.569 --> 00:09:54.579 align:start position:0%
snapshot I hope you can see clearly at
 

00:09:54.579 --> 00:09:57.269 align:start position:0%
snapshot I hope you can see clearly at
the<00:09:54.670><c> back</c><00:09:54.820><c> so</c><00:09:55.779><c> this</c><00:09:55.930><c> is</c><00:09:55.990><c> J</c><00:09:56.260><c> console</c><00:09:56.800><c> showing</c>

00:09:57.269 --> 00:09:57.279 align:start position:0%
the back so this is J console showing
 

00:09:57.279 --> 00:10:03.030 align:start position:0%
the back so this is J console showing
that<00:09:58.680><c> there</c><00:09:59.680><c> are</c><00:09:59.980><c> n</c><00:10:00.370><c> beans</c><00:10:00.699><c> in</c><00:10:01.120><c> this</c><00:10:01.329><c> case</c><00:10:02.040><c> hot</c>

00:10:03.030 --> 00:10:03.040 align:start position:0%
that there are n beans in this case hot
 

00:10:03.040 --> 00:10:05.460 align:start position:0%
that there are n beans in this case hot
spot<00:10:03.310><c> diagnostic</c><00:10:04.029><c> M</c><00:10:04.209><c> bean</c><00:10:04.540><c> and</c><00:10:04.810><c> it</c><00:10:05.079><c> has</c><00:10:05.290><c> an</c>

00:10:05.460 --> 00:10:05.470 align:start position:0%
spot diagnostic M bean and it has an
 

00:10:05.470 --> 00:10:09.030 align:start position:0%
spot diagnostic M bean and it has an
operation<00:10:06.040><c> dump</c><00:10:06.430><c> heap</c><00:10:06.970><c> using</c><00:10:07.660><c> that</c><00:10:08.290><c> operation</c>

00:10:09.030 --> 00:10:09.040 align:start position:0%
operation dump heap using that operation
 

00:10:09.040 --> 00:10:13.110 align:start position:0%
operation dump heap using that operation
we<00:10:09.940><c> can</c><00:10:10.240><c> collect</c><00:10:10.779><c> heap</c><00:10:11.290><c> dumps</c><00:10:11.709><c> from</c><00:10:12.120><c> live</c>

00:10:13.110 --> 00:10:13.120 align:start position:0%
we can collect heap dumps from live
 

00:10:13.120 --> 00:10:17.130 align:start position:0%
we can collect heap dumps from live
running<00:10:13.480><c> applications</c><00:10:15.209><c> so</c><00:10:16.209><c> this</c><00:10:16.360><c> screenshot</c>

00:10:17.130 --> 00:10:17.140 align:start position:0%
running applications so this screenshot
 

00:10:17.140 --> 00:10:19.590 align:start position:0%
running applications so this screenshot
shows<00:10:17.649><c> Java</c><00:10:18.279><c> Mission</c><00:10:18.640><c> Control</c><00:10:18.970><c> through</c><00:10:19.390><c> Java</c>

00:10:19.590 --> 00:10:19.600 align:start position:0%
shows Java Mission Control through Java
 

00:10:19.600 --> 00:10:21.780 align:start position:0%
shows Java Mission Control through Java
Mission<00:10:19.959><c> Control</c><00:10:20.290><c> as</c><00:10:20.620><c> well</c><00:10:20.980><c> it</c><00:10:21.190><c> is</c><00:10:21.220><c> possible</c>

00:10:21.780 --> 00:10:21.790 align:start position:0%
Mission Control as well it is possible
 

00:10:21.790 --> 00:10:25.040 align:start position:0%
Mission Control as well it is possible
to<00:10:21.820><c> collect</c><00:10:22.089><c> heap</c><00:10:22.480><c> dump</c><00:10:22.720><c> again</c><00:10:23.350><c> there</c><00:10:23.890><c> are</c><00:10:24.100><c> two</c>

00:10:25.040 --> 00:10:25.050 align:start position:0%
to collect heap dump again there are two
 

00:10:25.050 --> 00:10:28.410 align:start position:0%
to collect heap dump again there are two
am<00:10:26.050><c> beans</c><00:10:26.350><c> a</c><00:10:26.740><c> hot</c><00:10:27.250><c> spot</c><00:10:27.459><c> diagnostic</c><00:10:28.209><c> and</c>

00:10:28.410 --> 00:10:28.420 align:start position:0%
am beans a hot spot diagnostic and
 

00:10:28.420 --> 00:10:30.360 align:start position:0%
am beans a hot spot diagnostic and
diagnostic<00:10:29.050><c> command</c><00:10:29.440><c> using</c><00:10:30.220><c> their</c>

00:10:30.360 --> 00:10:30.370 align:start position:0%
diagnostic command using their
 

00:10:30.370 --> 00:10:32.910 align:start position:0%
diagnostic command using their
operations<00:10:31.060><c> in</c><00:10:31.300><c> this</c><00:10:31.449><c> case</c><00:10:31.750><c> dump</c><00:10:32.680><c> heap</c>

00:10:32.910 --> 00:10:32.920 align:start position:0%
operations in this case dump heap
 

00:10:32.920 --> 00:10:36.000 align:start position:0%
operations in this case dump heap
operation<00:10:33.550><c> of</c><00:10:33.760><c> hot</c><00:10:34.300><c> hot</c><00:10:34.870><c> spot</c><00:10:35.079><c> diagnostic</c><00:10:35.769><c> and</c>

00:10:36.000 --> 00:10:36.010 align:start position:0%
operation of hot hot spot diagnostic and
 

00:10:36.010 --> 00:10:39.300 align:start position:0%
operation of hot hot spot diagnostic and
bean<00:10:36.190><c> we</c><00:10:37.000><c> can</c><00:10:37.180><c> collect</c><00:10:37.569><c> heap</c><00:10:37.810><c> dumps</c><00:10:38.199><c> so</c><00:10:39.069><c> as</c><00:10:39.190><c> I</c>

00:10:39.300 --> 00:10:39.310 align:start position:0%
bean we can collect heap dumps so as I
 

00:10:39.310 --> 00:10:41.220 align:start position:0%
bean we can collect heap dumps so as I
mentioned<00:10:39.699><c> there</c><00:10:39.790><c> is</c><00:10:39.910><c> a</c><00:10:39.940><c> JVM</c><00:10:40.329><c> option</c><00:10:40.839><c> heap</c>

00:10:41.220 --> 00:10:41.230 align:start position:0%
mentioned there is a JVM option heap
 

00:10:41.230 --> 00:10:43.769 align:start position:0%
mentioned there is a JVM option heap
dump<00:10:41.560><c> on</c><00:10:41.890><c> out</c><00:10:42.160><c> of</c><00:10:42.190><c> memory</c><00:10:42.640><c> error</c><00:10:42.970><c> which</c><00:10:43.329><c> can</c><00:10:43.600><c> be</c>

00:10:43.769 --> 00:10:43.779 align:start position:0%
dump on out of memory error which can be
 

00:10:43.779 --> 00:10:47.670 align:start position:0%
dump on out of memory error which can be
used<00:10:44.019><c> to</c><00:10:44.319><c> collect</c><00:10:44.890><c> heap</c><00:10:45.519><c> dumps</c><00:10:46.170><c> in</c><00:10:47.170><c> case</c><00:10:47.410><c> there</c>

00:10:47.670 --> 00:10:47.680 align:start position:0%
used to collect heap dumps in case there
 

00:10:47.680 --> 00:10:50.660 align:start position:0%
used to collect heap dumps in case there
is<00:10:47.890><c> a</c><00:10:48.010><c> JVM</c><00:10:48.640><c> fails</c><00:10:48.940><c> with</c><00:10:49.149><c> out</c><00:10:49.360><c> of</c><00:10:49.510><c> memory</c><00:10:49.750><c> error</c>

00:10:50.660 --> 00:10:50.670 align:start position:0%
is a JVM fails with out of memory error
 

00:10:50.670 --> 00:10:54.389 align:start position:0%
is a JVM fails with out of memory error
so<00:10:51.899><c> here</c><00:10:52.899><c> we</c><00:10:53.170><c> can</c><00:10:53.319><c> see</c><00:10:53.500><c> that</c><00:10:53.680><c> you</c><00:10:53.889><c> know</c><00:10:54.010><c> on</c><00:10:54.250><c> the</c>

00:10:54.389 --> 00:10:54.399 align:start position:0%
so here we can see that you know on the
 

00:10:54.399 --> 00:10:56.639 align:start position:0%
so here we can see that you know on the
on<00:10:54.639><c> the</c><00:10:54.760><c> left</c><00:10:54.910><c> hand</c><00:10:55.149><c> side</c><00:10:55.360><c> from</c><00:10:55.930><c> the</c><00:10:56.019><c> GC</c><00:10:56.410><c> logs</c>

00:10:56.639 --> 00:10:56.649 align:start position:0%
on the left hand side from the GC logs
 

00:10:56.649 --> 00:10:58.290 align:start position:0%
on the left hand side from the GC logs
we<00:10:56.860><c> can</c><00:10:57.010><c> see</c><00:10:57.220><c> that</c><00:10:57.399><c> the</c><00:10:57.550><c> application</c><00:10:57.699><c> is</c>

00:10:58.290 --> 00:10:58.300 align:start position:0%
we can see that the application is
 

00:10:58.300 --> 00:11:01.140 align:start position:0%
we can see that the application is
failing<00:10:58.569><c> with</c><00:10:58.899><c> GC</c><00:10:59.740><c> overhead</c>

00:11:01.140 --> 00:11:01.150 align:start position:0%
failing with GC overhead
 

00:11:01.150 --> 00:11:04.320 align:start position:0%
failing with GC overhead
limit<00:11:02.080><c> exceeded</c><00:11:02.560><c> out</c><00:11:03.340><c> of</c><00:11:03.550><c> memory</c><00:11:03.880><c> error</c><00:11:04.060><c> and</c>

00:11:04.320 --> 00:11:04.330 align:start position:0%
limit exceeded out of memory error and
 

00:11:04.330 --> 00:11:08.370 align:start position:0%
limit exceeded out of memory error and
after<00:11:05.020><c> that</c><00:11:05.200><c> there</c><00:11:05.650><c> it</c><00:11:05.890><c> is</c><00:11:05.920><c> it</c><00:11:06.340><c> is</c><00:11:07.380><c> creating</c>

00:11:08.370 --> 00:11:08.380 align:start position:0%
after that there it is it is creating
 

00:11:08.380 --> 00:11:12.120 align:start position:0%
after that there it is it is creating
the<00:11:08.560><c> heap</c><00:11:08.800><c> dump</c><00:11:09.390><c> so</c><00:11:10.440><c> there</c><00:11:11.440><c> are</c><00:11:11.680><c> scenarios</c>

00:11:12.120 --> 00:11:12.130 align:start position:0%
the heap dump so there are scenarios
 

00:11:12.130 --> 00:11:14.550 align:start position:0%
the heap dump so there are scenarios
where<00:11:12.430><c> you</c><00:11:13.090><c> know</c><00:11:13.240><c> especially</c><00:11:13.960><c> parallel</c>

00:11:14.550 --> 00:11:14.560 align:start position:0%
where you know especially parallel
 

00:11:14.560 --> 00:11:18.990 align:start position:0%
where you know especially parallel
collector<00:11:15.070><c> it</c><00:11:15.790><c> can</c><00:11:16.650><c> continuously</c><00:11:17.650><c> put</c><00:11:18.640><c> in</c><00:11:18.790><c> its</c>

00:11:18.990 --> 00:11:19.000 align:start position:0%
collector it can continuously put in its
 

00:11:19.000 --> 00:11:23.190 align:start position:0%
collector it can continuously put in its
efforts<00:11:19.510><c> to</c><00:11:20.370><c> collect</c><00:11:21.370><c> you</c><00:11:22.330><c> know</c><00:11:22.360><c> or</c><00:11:22.630><c> reclaim</c>

00:11:23.190 --> 00:11:23.200 align:start position:0%
efforts to collect you know or reclaim
 

00:11:23.200 --> 00:11:26.040 align:start position:0%
efforts to collect you know or reclaim
some<00:11:23.530><c> space</c><00:11:23.860><c> and</c><00:11:24.100><c> the</c><00:11:24.220><c> in</c><00:11:24.580><c> in</c><00:11:24.790><c> Java</c><00:11:25.210><c> heap</c><00:11:25.480><c> even</c>

00:11:26.040 --> 00:11:26.050 align:start position:0%
some space and the in in Java heap even
 

00:11:26.050 --> 00:11:28.200 align:start position:0%
some space and the in in Java heap even
though<00:11:26.620><c> the</c><00:11:26.860><c> returns</c><00:11:27.220><c> of</c><00:11:27.430><c> that</c><00:11:27.670><c> are</c><00:11:27.940><c> very</c>

00:11:28.200 --> 00:11:28.210 align:start position:0%
though the returns of that are very
 

00:11:28.210 --> 00:11:31.560 align:start position:0%
though the returns of that are very
minimal<00:11:28.690><c> so</c><00:11:29.470><c> in</c><00:11:30.280><c> such</c><00:11:30.550><c> cases</c><00:11:30.910><c> you</c><00:11:31.150><c> know</c><00:11:31.420><c> we</c>

00:11:31.560 --> 00:11:31.570 align:start position:0%
minimal so in such cases you know we
 

00:11:31.570 --> 00:11:33.930 align:start position:0%
minimal so in such cases you know we
have<00:11:31.840><c> to</c><00:11:32.080><c> instruct</c><00:11:32.410><c> the</c><00:11:33.100><c> garbage</c><00:11:33.460><c> collector</c>

00:11:33.930 --> 00:11:33.940 align:start position:0%
have to instruct the garbage collector
 

00:11:33.940 --> 00:11:36.780 align:start position:0%
have to instruct the garbage collector
that<00:11:34.150><c> don't</c><00:11:35.020><c> you</c><00:11:35.530><c> know</c><00:11:35.650><c> don't</c><00:11:36.070><c> put</c><00:11:36.280><c> in</c><00:11:36.430><c> so</c><00:11:36.610><c> many</c>

00:11:36.780 --> 00:11:36.790 align:start position:0%
that don't you know don't put in so many
 

00:11:36.790 --> 00:11:40.830 align:start position:0%
that don't you know don't put in so many
so<00:11:37.150><c> much</c><00:11:37.330><c> effort</c><00:11:37.750><c> when</c><00:11:37.960><c> the</c><00:11:38.320><c> gains</c><00:11:38.620><c> are</c><00:11:39.840><c> are</c>

00:11:40.830 --> 00:11:40.840 align:start position:0%
so much effort when the gains are are
 

00:11:40.840 --> 00:11:43.830 align:start position:0%
so much effort when the gains are are
not<00:11:41.200><c> significant</c><00:11:41.980><c> you</c><00:11:42.190><c> should</c><00:11:42.610><c> exit</c><00:11:43.330><c> come</c><00:11:43.690><c> out</c>

00:11:43.830 --> 00:11:43.840 align:start position:0%
not significant you should exit come out
 

00:11:43.840 --> 00:11:46.760 align:start position:0%
not significant you should exit come out
of<00:11:44.050><c> it</c><00:11:44.260><c> and</c><00:11:44.500><c> you</c><00:11:44.770><c> know</c><00:11:44.890><c> let</c><00:11:45.310><c> the</c><00:11:45.460><c> application</c>

00:11:46.760 --> 00:11:46.770 align:start position:0%
of it and you know let the application
 

00:11:46.770 --> 00:11:50.670 align:start position:0%
of it and you know let the application
stop<00:11:47.770><c> or</c><00:11:48.070><c> let</c><00:11:48.850><c> the</c><00:11:49.000><c> if</c><00:11:49.570><c> there</c><00:11:49.990><c> is</c><00:11:50.080><c> a</c><00:11:50.110><c> if</c><00:11:50.200><c> there</c>

00:11:50.670 --> 00:11:50.680 align:start position:0%
stop or let the if there is a if there
 

00:11:50.680 --> 00:11:53.280 align:start position:0%
stop or let the if there is a if there
is<00:11:50.770><c> a</c><00:11:50.800><c> you</c><00:11:51.610><c> know</c><00:11:51.640><c> application</c><00:11:52.390><c> server</c><00:11:52.660><c> hosted</c>

00:11:53.280 --> 00:11:53.290 align:start position:0%
is a you know application server hosted
 

00:11:53.290 --> 00:11:57.140 align:start position:0%
is a you know application server hosted
application<00:11:53.920><c> let</c><00:11:54.370><c> it</c><00:11:54.550><c> restart</c><00:11:55.240><c> on</c><00:11:55.510><c> its</c><00:11:55.720><c> own</c><00:11:55.980><c> so</c>

00:11:57.140 --> 00:11:57.150 align:start position:0%
application let it restart on its own so
 

00:11:57.150 --> 00:12:00.870 align:start position:0%
application let it restart on its own so
in<00:11:58.150><c> such</c><00:11:58.690><c> scenarios</c><00:11:59.350><c> it</c><00:11:59.650><c> can</c><00:11:59.920><c> actually</c><00:12:00.370><c> delay</c>

00:12:00.870 --> 00:12:00.880 align:start position:0%
in such scenarios it can actually delay
 

00:12:00.880 --> 00:12:03.240 align:start position:0%
in such scenarios it can actually delay
the<00:12:01.150><c> exit</c><00:12:01.570><c> or</c><00:12:01.780><c> restart</c><00:12:02.290><c> of</c><00:12:02.440><c> the</c><00:12:02.470><c> application</c>

00:12:03.240 --> 00:12:03.250 align:start position:0%
the exit or restart of the application
 

00:12:03.250 --> 00:12:06.270 align:start position:0%
the exit or restart of the application
and<00:12:03.460><c> it</c><00:12:03.610><c> delays</c><00:12:04.000><c> the</c><00:12:04.690><c> creation</c><00:12:05.620><c> of</c><00:12:05.770><c> heap</c><00:12:06.070><c> dump</c>

00:12:06.270 --> 00:12:06.280 align:start position:0%
and it delays the creation of heap dump
 

00:12:06.280 --> 00:12:10.680 align:start position:0%
and it delays the creation of heap dump
as<00:12:06.610><c> well</c><00:12:06.820><c> so</c><00:12:07.690><c> so</c><00:12:07.930><c> this</c><00:12:08.580><c> delay</c><00:12:09.580><c> can</c><00:12:10.180><c> actually</c>

00:12:10.680 --> 00:12:10.690 align:start position:0%
as well so so this delay can actually
 

00:12:10.690 --> 00:12:12.990 align:start position:0%
as well so so this delay can actually
have<00:12:11.050><c> performance</c><00:12:12.040><c> penalties</c><00:12:12.520><c> for</c><00:12:12.820><c> our</c>

00:12:12.990 --> 00:12:13.000 align:start position:0%
have performance penalties for our
 

00:12:13.000 --> 00:12:16.530 align:start position:0%
have performance penalties for our
application<00:12:13.780><c> so</c><00:12:14.770><c> first</c><00:12:15.460><c> for</c><00:12:15.700><c> such</c><00:12:15.910><c> scenarios</c>

00:12:16.530 --> 00:12:16.540 align:start position:0%
application so first for such scenarios
 

00:12:16.540 --> 00:12:19.680 align:start position:0%
application so first for such scenarios
we<00:12:16.780><c> can</c><00:12:16.810><c> use</c><00:12:17.170><c> two</c><00:12:17.440><c> JVM</c><00:12:17.920><c> options</c><00:12:18.430><c> GC</c><00:12:19.000><c> time</c><00:12:19.270><c> limit</c>

00:12:19.680 --> 00:12:19.690 align:start position:0%
we can use two JVM options GC time limit
 

00:12:19.690 --> 00:12:22.980 align:start position:0%
we can use two JVM options GC time limit
and<00:12:19.840><c> GC</c><00:12:20.230><c> heap</c><00:12:20.470><c> free</c><00:12:20.950><c> limit</c><00:12:21.310><c> so</c><00:12:22.120><c> GC</c><00:12:22.450><c> time</c><00:12:22.660><c> limit</c>

00:12:22.980 --> 00:12:22.990 align:start position:0%
and GC heap free limit so GC time limit
 

00:12:22.990 --> 00:12:25.050 align:start position:0%
and GC heap free limit so GC time limit
sets<00:12:23.230><c> an</c><00:12:23.410><c> upper</c><00:12:23.530><c> limit</c><00:12:23.950><c> on</c><00:12:24.280><c> the</c><00:12:24.460><c> amount</c><00:12:24.610><c> of</c>

00:12:25.050 --> 00:12:25.060 align:start position:0%
sets an upper limit on the amount of
 

00:12:25.060 --> 00:12:28.680 align:start position:0%
sets an upper limit on the amount of
time<00:12:25.330><c> that</c><00:12:25.440><c> GCS</c><00:12:26.440><c> can</c><00:12:26.740><c> spend</c><00:12:27.220><c> in</c><00:12:28.090><c> percent</c><00:12:28.540><c> of</c>

00:12:28.680 --> 00:12:28.690 align:start position:0%
time that GCS can spend in percent of
 

00:12:28.690 --> 00:12:32.580 align:start position:0%
time that GCS can spend in percent of
total<00:12:28.960><c> time</c><00:12:29.370><c> and</c><00:12:30.370><c> GC</c><00:12:30.880><c> heap</c><00:12:31.120><c> free</c><00:12:31.480><c> limit</c><00:12:31.870><c> Setser</c>

00:12:32.580 --> 00:12:32.590 align:start position:0%
total time and GC heap free limit Setser
 

00:12:32.590 --> 00:12:35.730 align:start position:0%
total time and GC heap free limit Setser
lower<00:12:33.130><c> limit</c><00:12:33.610><c> on</c><00:12:33.820><c> the</c><00:12:33.970><c> amount</c><00:12:34.150><c> of</c><00:12:34.690><c> space</c><00:12:35.080><c> that</c>

00:12:35.730 --> 00:12:35.740 align:start position:0%
lower limit on the amount of space that
 

00:12:35.740 --> 00:12:37.830 align:start position:0%
lower limit on the amount of space that
should<00:12:35.980><c> be</c><00:12:36.130><c> free</c><00:12:36.460><c> after</c><00:12:36.730><c> garbage</c><00:12:37.330><c> collections</c>

00:12:37.830 --> 00:12:37.840 align:start position:0%
should be free after garbage collections
 

00:12:37.840 --> 00:12:40.950 align:start position:0%
should be free after garbage collections
so<00:12:38.440><c> the</c><00:12:38.560><c> default</c><00:12:39.190><c> value</c><00:12:39.610><c> of</c><00:12:39.670><c> GC</c><00:12:40.180><c> time</c><00:12:40.450><c> limit</c><00:12:40.810><c> is</c>

00:12:40.950 --> 00:12:40.960 align:start position:0%
so the default value of GC time limit is
 

00:12:40.960 --> 00:12:43.590 align:start position:0%
so the default value of GC time limit is
98<00:12:41.560><c> percent</c><00:12:41.590><c> on</c><00:12:42.250><c> the</c><00:12:42.340><c> default</c><00:12:42.730><c> value</c><00:12:43.120><c> of</c><00:12:43.150><c> GC</c>

00:12:43.590 --> 00:12:43.600 align:start position:0%
98 percent on the default value of GC
 

00:12:43.600 --> 00:12:45.810 align:start position:0%
98 percent on the default value of GC
heap<00:12:43.780><c> free</c><00:12:44.080><c> limit</c><00:12:44.440><c> is</c><00:12:44.680><c> two</c><00:12:44.920><c> percent</c><00:12:45.370><c> which</c>

00:12:45.810 --> 00:12:45.820 align:start position:0%
heap free limit is two percent which
 

00:12:45.820 --> 00:12:49.440 align:start position:0%
heap free limit is two percent which
means<00:12:46.590><c> if</c><00:12:47.590><c> the</c><00:12:48.280><c> garbage</c><00:12:48.520><c> collections</c><00:12:49.210><c> are</c>

00:12:49.440 --> 00:12:49.450 align:start position:0%
means if the garbage collections are
 

00:12:49.450 --> 00:12:51.840 align:start position:0%
means if the garbage collections are
able<00:12:49.840><c> to</c><00:12:49.960><c> meet</c><00:12:50.140><c> these</c><00:12:50.440><c> two</c><00:12:50.740><c> conditions</c><00:12:51.130><c> it</c><00:12:51.580><c> can</c>

00:12:51.840 --> 00:12:51.850 align:start position:0%
able to meet these two conditions it can
 

00:12:51.850 --> 00:12:53.370 align:start position:0%
able to meet these two conditions it can
you<00:12:52.180><c> know</c><00:12:52.270><c> the</c><00:12:52.510><c> garbage</c><00:12:52.810><c> collections</c><00:12:53.260><c> are</c>

00:12:53.370 --> 00:12:53.380 align:start position:0%
you know the garbage collections are
 

00:12:53.380 --> 00:12:56.280 align:start position:0%
you know the garbage collections are
allowed<00:12:53.710><c> to</c><00:12:53.950><c> take</c><00:12:54.760><c> up</c><00:12:54.970><c> to</c><00:12:55.120><c> 98</c><00:12:55.600><c> percent</c><00:12:55.840><c> of</c><00:12:56.170><c> the</c>

00:12:56.280 --> 00:12:56.290 align:start position:0%
allowed to take up to 98 percent of the
 

00:12:56.290 --> 00:12:58.590 align:start position:0%
allowed to take up to 98 percent of the
time<00:12:56.500><c> and</c><00:12:56.650><c> if</c><00:12:57.310><c> there</c><00:12:57.640><c> is</c><00:12:57.850><c> at</c><00:12:58.120><c> least</c><00:12:58.360><c> two</c>

00:12:58.590 --> 00:12:58.600 align:start position:0%
time and if there is at least two
 

00:12:58.600 --> 00:13:01.740 align:start position:0%
time and if there is at least two
percent<00:12:59.140><c> of</c><00:12:59.290><c> the</c><00:12:59.470><c> heap</c><00:13:00.160><c> space</c><00:13:00.730><c> free</c><00:13:01.240><c> after</c>

00:13:01.740 --> 00:13:01.750 align:start position:0%
percent of the heap space free after
 

00:13:01.750 --> 00:13:03.570 align:start position:0%
percent of the heap space free after
collections<00:13:02.320><c> the</c><00:13:02.620><c> garbage</c><00:13:02.950><c> collections</c><00:13:03.430><c> will</c>

00:13:03.570 --> 00:13:03.580 align:start position:0%
collections the garbage collections will
 

00:13:03.580 --> 00:13:05.850 align:start position:0%
collections the garbage collections will
continue<00:13:04.120><c> they</c><00:13:04.420><c> they</c><00:13:04.630><c> won't</c><00:13:04.840><c> exit</c><00:13:05.320><c> you</c><00:13:05.740><c> know</c>

00:13:05.850 --> 00:13:05.860 align:start position:0%
continue they they won't exit you know
 

00:13:05.860 --> 00:13:07.500 align:start position:0%
continue they they won't exit you know
there<00:13:06.010><c> will</c><00:13:06.070><c> be</c><00:13:06.160><c> back-to-back</c><00:13:06.820><c> frequent</c><00:13:07.330><c> full</c>

00:13:07.500 --> 00:13:07.510 align:start position:0%
there will be back-to-back frequent full
 

00:13:07.510 --> 00:13:13.050 align:start position:0%
there will be back-to-back frequent full
GCS<00:13:07.960><c> so</c><00:13:08.500><c> we</c><00:13:08.680><c> can</c><00:13:08.920><c> tune</c><00:13:09.250><c> these</c><00:13:09.580><c> two</c><00:13:10.650><c> options</c><00:13:12.060><c> we</c>

00:13:13.050 --> 00:13:13.060 align:start position:0%
GCS so we can tune these two options we
 

00:13:13.060 --> 00:13:14.670 align:start position:0%
GCS so we can tune these two options we
can<00:13:13.240><c> try</c><00:13:13.450><c> to</c><00:13:13.480><c> in</c>

00:13:14.670 --> 00:13:14.680 align:start position:0%
can try to in
 

00:13:14.680 --> 00:13:16.769 align:start position:0%
can try to in
Cree's<00:13:15.010><c> GC</c><00:13:15.550><c> time</c><00:13:15.760><c> limit</c><00:13:16.149><c> and</c><00:13:16.330><c> we</c><00:13:16.420><c> can</c><00:13:16.570><c> try</c><00:13:16.750><c> to</c>

00:13:16.769 --> 00:13:16.779 align:start position:0%
Cree's GC time limit and we can try to
 

00:13:16.779 --> 00:13:20.130 align:start position:0%
Cree's GC time limit and we can try to
increase<00:13:17.140><c> GC</c><00:13:17.950><c> heap</c><00:13:18.490><c> a</c><00:13:18.790><c> free</c><00:13:19.029><c> limit</c><00:13:19.390><c> so</c><00:13:19.570><c> that</c><00:13:19.750><c> we</c>

00:13:20.130 --> 00:13:20.140 align:start position:0%
increase GC heap a free limit so that we
 

00:13:20.140 --> 00:13:22.829 align:start position:0%
increase GC heap a free limit so that we
don't<00:13:20.320><c> have</c><00:13:20.550><c> this</c><00:13:21.550><c> this</c><00:13:22.240><c> issue</c><00:13:22.450><c> of</c>

00:13:22.829 --> 00:13:22.839 align:start position:0%
don't have this this issue of
 

00:13:22.839 --> 00:13:25.320 align:start position:0%
don't have this this issue of
back-to-back<00:13:23.140><c> frequent</c><00:13:23.950><c> full</c><00:13:24.430><c> G</c><00:13:24.610><c> C's</c><00:13:24.850><c> in</c>

00:13:25.320 --> 00:13:25.330 align:start position:0%
back-to-back frequent full G C's in
 

00:13:25.330 --> 00:13:27.480 align:start position:0%
back-to-back frequent full G C's in
cases<00:13:25.870><c> where</c><00:13:26.050><c> the</c><00:13:26.200><c> applique</c><00:13:26.680><c> expect</c><00:13:27.399><c> the</c>

00:13:27.480 --> 00:13:27.490 align:start position:0%
cases where the applique expect the
 

00:13:27.490 --> 00:13:30.480 align:start position:0%
cases where the applique expect the
application<00:13:28.089><c> to</c><00:13:28.420><c> to</c><00:13:28.779><c> exit</c><00:13:29.200><c> rather</c><00:13:30.190><c> than</c>

00:13:30.480 --> 00:13:30.490 align:start position:0%
application to to exit rather than
 

00:13:30.490 --> 00:13:33.720 align:start position:0%
application to to exit rather than
lingering<00:13:30.940><c> around</c><00:13:31.089><c> there</c><00:13:32.100><c> so</c><00:13:33.100><c> an</c><00:13:33.430><c> out</c><00:13:33.700><c> of</c>

00:13:33.720 --> 00:13:33.730 align:start position:0%
lingering around there so an out of
 

00:13:33.730 --> 00:13:36.120 align:start position:0%
lingering around there so an out of
memory<00:13:33.940><c> error</c><00:13:34.390><c> is</c><00:13:34.600><c> thrown</c><00:13:34.959><c> after</c><00:13:35.200><c> a</c><00:13:35.500><c> full</c><00:13:35.770><c> GC</c>

00:13:36.120 --> 00:13:36.130 align:start position:0%
memory error is thrown after a full GC
 

00:13:36.130 --> 00:13:39.420 align:start position:0%
memory error is thrown after a full GC
if<00:13:36.370><c> the</c><00:13:36.880><c> previous</c><00:13:37.330><c> five</c><00:13:37.930><c> consecutive</c><00:13:38.440><c> GCS</c><00:13:39.190><c> are</c>

00:13:39.420 --> 00:13:39.430 align:start position:0%
if the previous five consecutive GCS are
 

00:13:39.430 --> 00:13:42.660 align:start position:0%
if the previous five consecutive GCS are
not<00:13:39.700><c> able</c><00:13:40.000><c> to</c><00:13:40.149><c> meet</c><00:13:40.690><c> the</c><00:13:40.750><c> the</c><00:13:41.440><c> value</c><00:13:42.279><c> set</c><00:13:42.640><c> by</c>

00:13:42.660 --> 00:13:42.670 align:start position:0%
not able to meet the the value set by
 

00:13:42.670 --> 00:13:46.710 align:start position:0%
not able to meet the the value set by
these<00:13:43.120><c> two</c><00:13:43.690><c> JVM</c><00:13:44.110><c> options</c><00:13:45.420><c> so</c><00:13:46.420><c> the</c><00:13:46.510><c> next</c>

00:13:46.710 --> 00:13:46.720 align:start position:0%
these two JVM options so the next
 

00:13:46.720 --> 00:13:49.440 align:start position:0%
these two JVM options so the next
diagnostic<00:13:47.350><c> data</c><00:13:47.470><c> is</c><00:13:47.770><c> heap</c><00:13:48.070><c> histogram</c><00:13:48.700><c> he</c>

00:13:49.440 --> 00:13:49.450 align:start position:0%
diagnostic data is heap histogram he
 

00:13:49.450 --> 00:13:51.510 align:start position:0%
diagnostic data is heap histogram he
pistol<00:13:49.810><c> Graham's</c><00:13:50.080><c> give</c><00:13:50.380><c> quick</c><00:13:50.890><c> glimpse</c><00:13:51.399><c> of</c>

00:13:51.510 --> 00:13:51.520 align:start position:0%
pistol Graham's give quick glimpse of
 

00:13:51.520 --> 00:13:54.300 align:start position:0%
pistol Graham's give quick glimpse of
objects<00:13:52.060><c> in</c><00:13:52.240><c> Java</c><00:13:52.480><c> heap</c><00:13:52.810><c> so</c><00:13:53.230><c> you</c><00:13:53.980><c> don't</c><00:13:54.160><c> have</c>

00:13:54.300 --> 00:13:54.310 align:start position:0%
objects in Java heap so you don't have
 

00:13:54.310 --> 00:13:55.769 align:start position:0%
objects in Java heap so you don't have
you<00:13:54.430><c> don't</c><00:13:54.550><c> have</c><00:13:54.670><c> to</c><00:13:54.910><c> follow</c><00:13:55.060><c> two</c><00:13:55.360><c> steps</c><00:13:55.660><c> you</c>

00:13:55.769 --> 00:13:55.779 align:start position:0%
you don't have to follow two steps you
 

00:13:55.779 --> 00:13:57.630 align:start position:0%
you don't have to follow two steps you
know<00:13:55.930><c> collect</c><00:13:56.230><c> heap</c><00:13:56.410><c> dumps</c><00:13:56.830><c> and</c><00:13:57.010><c> then</c><00:13:57.130><c> analyze</c>

00:13:57.630 --> 00:13:57.640 align:start position:0%
know collect heap dumps and then analyze
 

00:13:57.640 --> 00:14:00.829 align:start position:0%
know collect heap dumps and then analyze
them<00:13:58.089><c> using</c><00:13:58.480><c> some</c><00:13:58.779><c> tool</c><00:13:59.020><c> so</c><00:13:59.680><c> these</c><00:14:00.310><c> are</c>

00:14:00.829 --> 00:14:00.839 align:start position:0%
them using some tool so these are
 

00:14:00.839 --> 00:14:04.680 align:start position:0%
them using some tool so these are
textual<00:14:01.950><c> you</c><00:14:02.950><c> know</c><00:14:03.070><c> output</c><00:14:03.670><c> where</c><00:14:04.089><c> you</c><00:14:04.420><c> can</c>

00:14:04.680 --> 00:14:04.690 align:start position:0%
textual you know output where you can
 

00:14:04.690 --> 00:14:07.500 align:start position:0%
textual you know output where you can
quickly<00:14:05.080><c> see</c><00:14:05.470><c> which</c><00:14:05.860><c> objects</c><00:14:06.850><c> are</c><00:14:07.029><c> which</c><00:14:07.209><c> kind</c>

00:14:07.500 --> 00:14:07.510 align:start position:0%
quickly see which objects are which kind
 

00:14:07.510 --> 00:14:11.040 align:start position:0%
quickly see which objects are which kind
of<00:14:07.660><c> objects</c><00:14:08.140><c> are</c><00:14:08.350><c> growing</c><00:14:08.740><c> in</c><00:14:08.980><c> heap</c><00:14:09.839><c> heap</c><00:14:10.839><c> now</c>

00:14:11.040 --> 00:14:11.050 align:start position:0%
of objects are growing in heap heap now
 

00:14:11.050 --> 00:14:13.110 align:start position:0%
of objects are growing in heap heap now
this<00:14:11.589><c> heap</c><00:14:11.830><c> histograms</c><00:14:12.430><c> can</c><00:14:12.610><c> be</c><00:14:12.880><c> collected</c>

00:14:13.110 --> 00:14:13.120 align:start position:0%
this heap histograms can be collected
 

00:14:13.120 --> 00:14:16.410 align:start position:0%
this heap histograms can be collected
using<00:14:13.540><c> the</c><00:14:13.899><c> print</c><00:14:14.290><c> class</c><00:14:14.620><c> histogram</c><00:14:15.420><c> J</c>

00:14:16.410 --> 00:14:16.420 align:start position:0%
using the print class histogram J
 

00:14:16.420 --> 00:14:19.470 align:start position:0%
using the print class histogram J
command<00:14:16.810><c> J</c><00:14:17.020><c> map</c><00:14:17.830><c> and</c><00:14:18.250><c> there</c><00:14:18.580><c> is</c><00:14:18.670><c> a</c><00:14:18.700><c> new</c><00:14:18.970><c> tool</c><00:14:19.209><c> J</c>

00:14:19.470 --> 00:14:19.480 align:start position:0%
command J map and there is a new tool J
 

00:14:19.480 --> 00:14:23.579 align:start position:0%
command J map and there is a new tool J
HSD<00:14:20.230><c> be</c><00:14:20.410><c> added</c><00:14:20.890><c> in</c><00:14:21.180><c> jdk</c><00:14:22.180><c> 9</c><00:14:22.450><c> which</c><00:14:22.900><c> can</c><00:14:23.140><c> be</c><00:14:23.320><c> used</c>

00:14:23.579 --> 00:14:23.589 align:start position:0%
HSD be added in jdk 9 which can be used
 

00:14:23.589 --> 00:14:26.630 align:start position:0%
HSD be added in jdk 9 which can be used
to<00:14:23.770><c> collect</c><00:14:23.980><c> heap</c><00:14:24.310><c> dumps</c><00:14:24.670><c> from</c><00:14:24.880><c> code</c><00:14:25.150><c> files</c><00:14:25.480><c> or</c>

00:14:26.630 --> 00:14:26.640 align:start position:0%
to collect heap dumps from code files or
 

00:14:26.640 --> 00:14:29.790 align:start position:0%
to collect heap dumps from code files or
nonresponsive<00:14:27.640><c> processes</c><00:14:28.240><c> as</c><00:14:28.480><c> well</c><00:14:28.660><c> and</c><00:14:28.959><c> we</c>

00:14:29.790 --> 00:14:29.800 align:start position:0%
nonresponsive processes as well and we
 

00:14:29.800 --> 00:14:31.829 align:start position:0%
nonresponsive processes as well and we
can<00:14:29.950><c> use</c><00:14:30.160><c> diagnostic</c><00:14:30.790><c> commands</c><00:14:31.270><c> in</c><00:14:31.450><c> Java</c>

00:14:31.829 --> 00:14:31.839 align:start position:0%
can use diagnostic commands in Java
 

00:14:31.839 --> 00:14:33.720 align:start position:0%
can use diagnostic commands in Java
Mission<00:14:32.170><c> Control</c><00:14:32.470><c> to</c><00:14:32.830><c> collect</c><00:14:33.459><c> heap</c>

00:14:33.720 --> 00:14:33.730 align:start position:0%
Mission Control to collect heap
 

00:14:33.730 --> 00:14:36.090 align:start position:0%
Mission Control to collect heap
histograms<00:14:34.300><c> let's</c><00:14:35.110><c> see</c><00:14:35.230><c> some</c><00:14:35.470><c> examples</c><00:14:35.589><c> here</c>

00:14:36.090 --> 00:14:36.100 align:start position:0%
histograms let's see some examples here
 

00:14:36.100 --> 00:14:39.660 align:start position:0%
histograms let's see some examples here
we<00:14:36.490><c> can</c><00:14:36.640><c> see</c><00:14:36.820><c> Java</c><00:14:37.540><c> Mission</c><00:14:37.990><c> Control</c><00:14:38.310><c> in</c><00:14:39.310><c> that</c>

00:14:39.660 --> 00:14:39.670 align:start position:0%
we can see Java Mission Control in that
 

00:14:39.670 --> 00:14:44.420 align:start position:0%
we can see Java Mission Control in that
we<00:14:39.970><c> can</c><00:14:40.209><c> execute</c><00:14:41.490><c> GC</c><00:14:42.490><c> dot</c><00:14:42.970><c> class</c><00:14:43.270><c> histogram</c>

00:14:44.420 --> 00:14:44.430 align:start position:0%
we can execute GC dot class histogram
 

00:14:44.430 --> 00:14:46.140 align:start position:0%
we can execute GC dot class histogram
operation

00:14:46.140 --> 00:14:46.150 align:start position:0%
operation
 

00:14:46.150 --> 00:14:49.290 align:start position:0%
operation
you<00:14:46.480><c> know</c><00:14:46.570><c> diagnostic</c><00:14:47.230><c> command</c><00:14:47.589><c> on</c><00:14:47.860><c> the</c><00:14:48.300><c> live</c>

00:14:49.290 --> 00:14:49.300 align:start position:0%
you know diagnostic command on the live
 

00:14:49.300 --> 00:14:52.650 align:start position:0%
you know diagnostic command on the live
process<00:14:49.839><c> to</c><00:14:50.050><c> collect</c><00:14:50.200><c> heap</c><00:14:50.529><c> histogram</c><00:14:51.040><c> and</c><00:14:51.660><c> it</c>

00:14:52.650 --> 00:14:52.660 align:start position:0%
process to collect heap histogram and it
 

00:14:52.660 --> 00:14:54.960 align:start position:0%
process to collect heap histogram and it
shows<00:14:52.900><c> the</c><00:14:53.110><c> heap</c><00:14:53.290><c> histogram</c><00:14:53.800><c> at</c><00:14:53.980><c> the</c><00:14:54.130><c> bottom</c>

00:14:54.960 --> 00:14:54.970 align:start position:0%
shows the heap histogram at the bottom
 

00:14:54.970 --> 00:14:59.760 align:start position:0%
shows the heap histogram at the bottom
pane<00:14:55.150><c> of</c><00:14:56.820><c> Java</c><00:14:57.820><c> Mission</c><00:14:58.120><c> Control</c><00:14:58.390><c> so</c><00:14:59.230><c> once</c><00:14:59.470><c> we</c>

00:14:59.760 --> 00:14:59.770 align:start position:0%
pane of Java Mission Control so once we
 

00:14:59.770 --> 00:15:02.040 align:start position:0%
pane of Java Mission Control so once we
have<00:14:59.980><c> collected</c><00:15:00.490><c> data</c><00:15:00.520><c> we</c><00:15:01.120><c> have</c><00:15:01.270><c> GC</c><00:15:01.600><c> logs</c><00:15:01.839><c> we</c>

00:15:02.040 --> 00:15:02.050 align:start position:0%
have collected data we have GC logs we
 

00:15:02.050 --> 00:15:04.290 align:start position:0%
have collected data we have GC logs we
have<00:15:02.230><c> heap</c><00:15:02.440><c> terms</c><00:15:02.680><c> we</c><00:15:02.920><c> have</c><00:15:02.950><c> histograms</c><00:15:03.640><c> which</c>

00:15:04.290 --> 00:15:04.300 align:start position:0%
have heap terms we have histograms which
 

00:15:04.300 --> 00:15:06.150 align:start position:0%
have heap terms we have histograms which
tools<00:15:04.690><c> should</c><00:15:04.930><c> be</c><00:15:04.990><c> used</c><00:15:05.110><c> to</c><00:15:05.529><c> analyze</c><00:15:05.950><c> that</c>

00:15:06.150 --> 00:15:06.160 align:start position:0%
tools should be used to analyze that
 

00:15:06.160 --> 00:15:08.550 align:start position:0%
tools should be used to analyze that
data<00:15:06.220><c> to</c><00:15:06.670><c> see</c><00:15:06.850><c> you</c><00:15:06.970><c> know</c><00:15:07.089><c> what</c><00:15:07.300><c> what</c><00:15:07.900><c> kind</c><00:15:08.470><c> of</c>

00:15:08.550 --> 00:15:08.560 align:start position:0%
data to see you know what what kind of
 

00:15:08.560 --> 00:15:12.540 align:start position:0%
data to see you know what what kind of
memory<00:15:08.920><c> problem</c><00:15:09.339><c> I'm</c><00:15:09.520><c> encountering</c><00:15:11.370><c> GC</c><00:15:12.370><c> log</c>

00:15:12.540 --> 00:15:12.550 align:start position:0%
memory problem I'm encountering GC log
 

00:15:12.550 --> 00:15:15.569 align:start position:0%
memory problem I'm encountering GC log
and<00:15:12.820><c> GC</c><00:15:13.209><c> logs</c><00:15:13.420><c> analysis</c><00:15:14.110><c> so</c><00:15:14.649><c> in</c><00:15:14.890><c> the</c><00:15:15.010><c> GC</c><00:15:15.339><c> logs</c>

00:15:15.569 --> 00:15:15.579 align:start position:0%
and GC logs analysis so in the GC logs
 

00:15:15.579 --> 00:15:17.220 align:start position:0%
and GC logs analysis so in the GC logs
what<00:15:15.850><c> do</c><00:15:15.970><c> we</c><00:15:16.060><c> want</c><00:15:16.209><c> to</c><00:15:16.329><c> look</c><00:15:16.480><c> for</c><00:15:16.540><c> we</c><00:15:16.959><c> want</c><00:15:17.140><c> to</c>

00:15:17.220 --> 00:15:17.230 align:start position:0%
what do we want to look for we want to
 

00:15:17.230 --> 00:15:19.410 align:start position:0%
what do we want to look for we want to
see<00:15:17.350><c> if</c><00:15:17.560><c> there</c><00:15:17.770><c> are</c><00:15:18.010><c> too</c><00:15:18.279><c> many</c><00:15:18.430><c> Fuji</c><00:15:18.910><c> sees</c><00:15:19.149><c> if</c>

00:15:19.410 --> 00:15:19.420 align:start position:0%
see if there are too many Fuji sees if
 

00:15:19.420 --> 00:15:22.050 align:start position:0%
see if there are too many Fuji sees if
are<00:15:20.170><c> those</c><00:15:20.380><c> G</c><00:15:20.589><c> sees</c>

00:15:22.050 --> 00:15:22.060 align:start position:0%
are those G sees
 

00:15:22.060 --> 00:15:24.660 align:start position:0%
are those G sees
having<00:15:22.720><c> long</c><00:15:22.960><c> pauses</c><00:15:23.290><c> are</c><00:15:23.710><c> those</c><00:15:24.280><c> eces</c>

00:15:24.660 --> 00:15:24.670 align:start position:0%
having long pauses are those eces
 

00:15:24.670 --> 00:15:26.910 align:start position:0%
having long pauses are those eces
occurring<00:15:25.180><c> too</c><00:15:25.390><c> frequently</c><00:15:25.960><c> we</c><00:15:26.560><c> can</c><00:15:26.740><c> do</c>

00:15:26.910 --> 00:15:26.920 align:start position:0%
occurring too frequently we can do
 

00:15:26.920 --> 00:15:29.100 align:start position:0%
occurring too frequently we can do
manual<00:15:27.430><c> inspection</c><00:15:27.670><c> of</c><00:15:28.090><c> the</c><00:15:28.240><c> GC</c><00:15:28.570><c> logs</c><00:15:28.810><c> are</c>

00:15:29.100 --> 00:15:29.110 align:start position:0%
manual inspection of the GC logs are
 

00:15:29.110 --> 00:15:31.710 align:start position:0%
manual inspection of the GC logs are
there<00:15:29.740><c> are</c><00:15:29.980><c> automatic</c><00:15:30.730><c> analysis</c><00:15:31.420><c> tools</c>

00:15:31.710 --> 00:15:31.720 align:start position:0%
there are automatic analysis tools
 

00:15:31.720 --> 00:15:34.580 align:start position:0%
there are automatic analysis tools
available<00:15:32.020><c> which</c><00:15:32.920><c> we</c><00:15:33.070><c> can</c><00:15:33.280><c> use</c><00:15:33.580><c> to</c><00:15:33.610><c> you</c><00:15:34.390><c> know</c>

00:15:34.580 --> 00:15:34.590 align:start position:0%
available which we can use to you know
 

00:15:34.590 --> 00:15:39.000 align:start position:0%
available which we can use to you know
understand<00:15:36.900><c> what</c><00:15:37.900><c> what's</c><00:15:38.170><c> what's</c><00:15:38.500><c> happening</c>

00:15:39.000 --> 00:15:39.010 align:start position:0%
understand what what's what's happening
 

00:15:39.010 --> 00:15:40.620 align:start position:0%
understand what what's what's happening
what's<00:15:39.430><c> wrong</c><00:15:39.790><c> with</c><00:15:40.180><c> my</c><00:15:40.390><c> memory</c>

00:15:40.620 --> 00:15:40.630 align:start position:0%
what's wrong with my memory
 

00:15:40.630 --> 00:15:44.160 align:start position:0%
what's wrong with my memory
configuration<00:15:41.560><c> are</c><00:15:41.940><c> why</c><00:15:42.940><c> these</c><00:15:43.000><c> GCS</c><00:15:43.990><c> are</c>

00:15:44.160 --> 00:15:44.170 align:start position:0%
configuration are why these GCS are
 

00:15:44.170 --> 00:15:45.990 align:start position:0%
configuration are why these GCS are
occurring<00:15:44.590><c> too</c><00:15:44.770><c> frequently</c><00:15:45.280><c> or</c><00:15:45.550><c> why</c><00:15:45.700><c> they</c><00:15:45.880><c> are</c>

00:15:45.990 --> 00:15:46.000 align:start position:0%
occurring too frequently or why they are
 

00:15:46.000 --> 00:15:50.280 align:start position:0%
occurring too frequently or why they are
taking<00:15:46.150><c> too</c><00:15:46.450><c> much</c><00:15:46.630><c> time</c><00:15:48.360><c> so</c><00:15:49.360><c> here</c><00:15:49.570><c> this</c><00:15:50.110><c> is</c><00:15:50.170><c> a</c>

00:15:50.280 --> 00:15:50.290 align:start position:0%
taking too much time so here this is a
 

00:15:50.290 --> 00:15:52.800 align:start position:0%
taking too much time so here this is a
GC<00:15:50.680><c> viewer</c><00:15:50.980><c> tool</c><00:15:51.280><c> in</c><00:15:51.520><c> this</c><00:15:51.760><c> week</c><00:15:51.970><c> if</c><00:15:52.150><c> we</c><00:15:52.360><c> look</c>

00:15:52.800 --> 00:15:52.810 align:start position:0%
GC viewer tool in this week if we look
 

00:15:52.810 --> 00:15:56.160 align:start position:0%
GC viewer tool in this week if we look
closely<00:15:53.140><c> there</c><00:15:53.680><c> are</c><00:15:53.880><c> GC</c><00:15:54.880><c> pause</c><00:15:55.180><c> you</c><00:15:55.810><c> know</c><00:15:55.930><c> to</c>

00:15:56.160 --> 00:15:56.170 align:start position:0%
closely there are GC pause you know to
 

00:15:56.170 --> 00:16:00.110 align:start position:0%
closely there are GC pause you know to
space<00:15:56.700><c> exhausted</c><00:15:58.050><c> events</c><00:15:59.050><c> there</c><00:15:59.230><c> are</c><00:15:59.260><c> two</c>

00:16:00.110 --> 00:16:00.120 align:start position:0%
space exhausted events there are two
 

00:16:00.120 --> 00:16:03.180 align:start position:0%
space exhausted events there are two
collections<00:16:01.120><c> which</c><00:16:01.420><c> are</c><00:16:01.630><c> full</c><00:16:02.080><c> GCS</c><00:16:02.560><c> and</c><00:16:02.770><c> they</c>

00:16:03.180 --> 00:16:03.190 align:start position:0%
collections which are full GCS and they
 

00:16:03.190 --> 00:16:06.570 align:start position:0%
collections which are full GCS and they
took<00:16:03.370><c> around</c><00:16:04.230><c> four</c><00:16:05.230><c> seconds</c><00:16:05.740><c> each</c><00:16:05.920><c> you</c><00:16:06.460><c> know</c>

00:16:06.570 --> 00:16:06.580 align:start position:0%
took around four seconds each you know
 

00:16:06.580 --> 00:16:10.020 align:start position:0%
took around four seconds each you know
not<00:16:07.240><c> each</c><00:16:07.720><c> they</c><00:16:08.110><c> took</c><00:16:08.560><c> in</c><00:16:09.370><c> total</c><00:16:09.730><c> they</c><00:16:09.880><c> took</c>

00:16:10.020 --> 00:16:10.030 align:start position:0%
not each they took in total they took
 

00:16:10.030 --> 00:16:12.660 align:start position:0%
not each they took in total they took
around<00:16:10.240><c> four</c><00:16:10.690><c> seconds</c><00:16:11.140><c> which</c><00:16:11.320><c> is</c><00:16:11.350><c> you</c><00:16:11.980><c> know</c><00:16:12.100><c> a</c>

00:16:12.660 --> 00:16:12.670 align:start position:0%
around four seconds which is you know a
 

00:16:12.670 --> 00:16:16.290 align:start position:0%
around four seconds which is you know a
long<00:16:13.390><c> pause</c><00:16:13.810><c> for</c><00:16:14.700><c> for</c><00:16:15.700><c> response</c><00:16:16.150><c> and</c>

00:16:16.290 --> 00:16:16.300 align:start position:0%
long pause for for response and
 

00:16:16.300 --> 00:16:19.590 align:start position:0%
long pause for for response and
intensive<00:16:17.080><c> intensive</c><00:16:17.790><c> applications</c><00:16:18.790><c> so</c><00:16:19.450><c> in</c>

00:16:19.590 --> 00:16:19.600 align:start position:0%
intensive intensive applications so in
 

00:16:19.600 --> 00:16:24.090 align:start position:0%
intensive intensive applications so in
such<00:16:19.840><c> cases</c><00:16:21.540><c> you</c><00:16:22.540><c> know</c><00:16:22.660><c> this</c><00:16:23.230><c> is</c><00:16:23.410><c> a</c><00:16:23.440><c> this</c><00:16:23.890><c> is</c><00:16:24.070><c> a</c>

00:16:24.090 --> 00:16:24.100 align:start position:0%
such cases you know this is a this is a
 

00:16:24.100 --> 00:16:28.470 align:start position:0%
such cases you know this is a this is a
GC<00:16:24.490><c> log</c><00:16:24.730><c> of</c><00:16:25.000><c> G</c><00:16:25.030><c> one</c><00:16:25.510><c> collector</c><00:16:26.110><c> and</c><00:16:27.090><c> two</c><00:16:28.090><c> space</c>

00:16:28.470 --> 00:16:28.480 align:start position:0%
GC log of G one collector and two space
 

00:16:28.480 --> 00:16:31.170 align:start position:0%
GC log of G one collector and two space
exhausted<00:16:29.110><c> GC</c><00:16:29.440><c> me</c><00:16:29.680><c> DC's</c><00:16:30.160><c> mean</c><00:16:30.430><c> that</c><00:16:30.760><c> there</c><00:16:31.030><c> is</c>

00:16:31.170 --> 00:16:31.180 align:start position:0%
exhausted GC me DC's mean that there is
 

00:16:31.180 --> 00:16:34.020 align:start position:0%
exhausted GC me DC's mean that there is
not<00:16:31.630><c> enough</c><00:16:32.230><c> room</c><00:16:32.500><c> available</c><00:16:33.280><c> in</c><00:16:33.490><c> the</c><00:16:33.700><c> old</c>

00:16:34.020 --> 00:16:34.030 align:start position:0%
not enough room available in the old
 

00:16:34.030 --> 00:16:37.740 align:start position:0%
not enough room available in the old
regions<00:16:34.630><c> to</c><00:16:35.230><c> promote</c><00:16:36.420><c> objects</c><00:16:37.420><c> from</c><00:16:37.510><c> the</c>

00:16:37.740 --> 00:16:37.750 align:start position:0%
regions to promote objects from the
 

00:16:37.750 --> 00:16:41.130 align:start position:0%
regions to promote objects from the
young<00:16:37.960><c> regions</c><00:16:38.470><c> so</c><00:16:39.400><c> inside</c><00:16:39.970><c> it's</c><00:16:40.330><c> in</c><00:16:40.840><c> such</c>

00:16:41.130 --> 00:16:41.140 align:start position:0%
young regions so inside it's in such
 

00:16:41.140 --> 00:16:43.950 align:start position:0%
young regions so inside it's in such
scenarios<00:16:41.740><c> we</c><00:16:42.010><c> have</c><00:16:42.280><c> to</c><00:16:42.430><c> make</c><00:16:42.760><c> sure</c><00:16:43.150><c> you</c><00:16:43.840><c> know</c>

00:16:43.950 --> 00:16:43.960 align:start position:0%
scenarios we have to make sure you know
 

00:16:43.960 --> 00:16:47.160 align:start position:0%
scenarios we have to make sure you know
our<00:16:44.250><c> old</c><00:16:45.250><c> region's</c><00:16:46.060><c> old</c><00:16:46.420><c> generation</c><00:16:46.990><c> and</c>

00:16:47.160 --> 00:16:47.170 align:start position:0%
our old region's old generation and
 

00:16:47.170 --> 00:16:49.740 align:start position:0%
our old region's old generation and
young<00:16:47.980><c> generation</c><00:16:48.640><c> are</c><00:16:48.820><c> sized</c><00:16:49.450><c> appropriately</c>

00:16:49.740 --> 00:16:49.750 align:start position:0%
young generation are sized appropriately
 

00:16:49.750 --> 00:16:52.170 align:start position:0%
young generation are sized appropriately
there<00:16:50.710><c> is</c><00:16:50.830><c> enough</c><00:16:51.160><c> room</c><00:16:51.370><c> available</c><00:16:51.940><c> in</c><00:16:52.060><c> the</c>

00:16:52.170 --> 00:16:52.180 align:start position:0%
there is enough room available in the
 

00:16:52.180 --> 00:16:56.010 align:start position:0%
there is enough room available in the
old<00:16:52.300><c> generation</c><00:16:52.510><c> and</c><00:16:53.400><c> in</c><00:16:54.400><c> g1</c><00:16:54.790><c> there</c><00:16:55.450><c> are</c><00:16:55.690><c> mixed</c>

00:16:56.010 --> 00:16:56.020 align:start position:0%
old generation and in g1 there are mixed
 

00:16:56.020 --> 00:16:56.880 align:start position:0%
old generation and in g1 there are mixed
collections

00:16:56.880 --> 00:16:56.890 align:start position:0%
collections
 

00:16:56.890 --> 00:17:00.150 align:start position:0%
collections
you<00:16:57.520><c> know</c><00:16:57.610><c> the</c><00:16:58.060><c> collections</c><00:16:58.600><c> in</c><00:16:58.810><c> which</c><00:16:59.160><c> some</c>

00:17:00.150 --> 00:17:00.160 align:start position:0%
you know the collections in which some
 

00:17:00.160 --> 00:17:02.100 align:start position:0%
you know the collections in which some
of<00:17:00.190><c> the</c><00:17:00.400><c> old</c><00:17:00.580><c> regions</c><00:17:01.030><c> are</c><00:17:01.210><c> collected</c><00:17:01.690><c> along</c>

00:17:02.100 --> 00:17:02.110 align:start position:0%
of the old regions are collected along
 

00:17:02.110 --> 00:17:04.590 align:start position:0%
of the old regions are collected along
with<00:17:02.530><c> young</c><00:17:02.950><c> regions</c><00:17:03.490><c> so</c><00:17:03.940><c> we</c><00:17:03.970><c> have</c><00:17:04.270><c> to</c><00:17:04.420><c> make</c>

00:17:04.590 --> 00:17:04.600 align:start position:0%
with young regions so we have to make
 

00:17:04.600 --> 00:17:07.710 align:start position:0%
with young regions so we have to make
sure<00:17:04.839><c> those</c><00:17:05.170><c> mixed</c><00:17:05.949><c> GCS</c><00:17:06.550><c> are</c><00:17:06.819><c> running</c>

00:17:07.710 --> 00:17:07.720 align:start position:0%
sure those mixed GCS are running
 

00:17:07.720 --> 00:17:08.460 align:start position:0%
sure those mixed GCS are running
effectively

00:17:08.460 --> 00:17:08.470 align:start position:0%
effectively
 

00:17:08.470 --> 00:17:11.780 align:start position:0%
effectively
if<00:17:08.920><c> we</c><00:17:09.160><c> look</c><00:17:09.339><c> closely</c><00:17:09.730><c> there</c><00:17:10.150><c> is</c><00:17:10.180><c> an</c><00:17:10.390><c> option</c>

00:17:11.780 --> 00:17:11.790 align:start position:0%
if we look closely there is an option
 

00:17:11.790 --> 00:17:15.059 align:start position:0%
if we look closely there is an option
you<00:17:12.790><c> know</c><00:17:12.910><c> there</c><00:17:13.089><c> is</c><00:17:13.300><c> at</c><00:17:13.990><c> the</c><00:17:14.199><c> bottom</c><00:17:14.560><c> we</c><00:17:14.949><c> can</c>

00:17:15.059 --> 00:17:15.069 align:start position:0%
you know there is at the bottom we can
 

00:17:15.069 --> 00:17:17.760 align:start position:0%
you know there is at the bottom we can
see<00:17:15.280><c> that</c><00:17:15.430><c> initiating</c><00:17:16.329><c> occupancy</c><00:17:16.959><c> fraction</c>

00:17:17.760 --> 00:17:17.770 align:start position:0%
see that initiating occupancy fraction
 

00:17:17.770 --> 00:17:21.660 align:start position:0%
see that initiating occupancy fraction
which<00:17:18.459><c> is</c><00:17:18.610><c> a</c><00:17:18.640><c> value</c><00:17:19.209><c> that</c><00:17:20.140><c> indicates</c><00:17:20.890><c> at</c><00:17:21.250><c> which</c>

00:17:21.660 --> 00:17:21.670 align:start position:0%
which is a value that indicates at which
 

00:17:21.670 --> 00:17:24.750 align:start position:0%
which is a value that indicates at which
fraction<00:17:22.150><c> the</c><00:17:22.900><c> concurrent</c><00:17:23.560><c> marking</c><00:17:24.100><c> cycle</c><00:17:24.579><c> of</c>

00:17:24.750 --> 00:17:24.760 align:start position:0%
fraction the concurrent marking cycle of
 

00:17:24.760 --> 00:17:27.660 align:start position:0%
fraction the concurrent marking cycle of
g1<00:17:25.270><c> collector</c><00:17:25.810><c> should</c><00:17:26.050><c> start</c><00:17:26.439><c> which</c><00:17:26.980><c> prepares</c>

00:17:27.660 --> 00:17:27.670 align:start position:0%
g1 collector should start which prepares
 

00:17:27.670 --> 00:17:31.020 align:start position:0%
g1 collector should start which prepares
the<00:17:27.970><c> old</c><00:17:28.180><c> generation</c><00:17:28.750><c> regions</c>

00:17:31.020 --> 00:17:31.030 align:start position:0%
the old generation regions
 

00:17:31.030 --> 00:17:33.750 align:start position:0%
the old generation regions
so<00:17:31.630><c> that</c><00:17:31.809><c> they</c><00:17:31.929><c> can</c><00:17:32.500><c> be</c><00:17:32.679><c> included</c><00:17:32.919><c> in</c><00:17:33.340><c> mixed</c>

00:17:33.750 --> 00:17:33.760 align:start position:0%
so that they can be included in mixed
 

00:17:33.760 --> 00:17:34.440 align:start position:0%
so that they can be included in mixed
regions

00:17:34.440 --> 00:17:34.450 align:start position:0%
regions
 

00:17:34.450 --> 00:17:37.830 align:start position:0%
regions
you<00:17:35.320><c> know</c><00:17:35.409><c> if</c><00:17:35.679><c> the</c><00:17:36.490><c> mixed</c><00:17:36.909><c> collections</c><00:17:37.570><c> are</c>

00:17:37.830 --> 00:17:37.840 align:start position:0%
you know if the mixed collections are
 

00:17:37.840 --> 00:17:42.539 align:start position:0%
you know if the mixed collections are
not<00:17:38.760><c> not</c><00:17:40.080><c> having</c><00:17:41.080><c> old</c><00:17:41.440><c> generation</c><00:17:42.010><c> regions</c><00:17:42.400><c> as</c>

00:17:42.539 --> 00:17:42.549 align:start position:0%
not not having old generation regions as
 

00:17:42.549 --> 00:17:46.080 align:start position:0%
not not having old generation regions as
part<00:17:42.850><c> of</c><00:17:43.000><c> them</c><00:17:43.210><c> the</c><00:17:43.630><c> old</c><00:17:44.280><c> data</c><00:17:45.280><c> doesn't</c><00:17:45.789><c> get</c>

00:17:46.080 --> 00:17:46.090 align:start position:0%
part of them the old data doesn't get
 

00:17:46.090 --> 00:17:47.880 align:start position:0%
part of them the old data doesn't get
collected<00:17:46.570><c> the</c><00:17:46.720><c> only</c><00:17:47.020><c> objects</c><00:17:47.530><c> that</c><00:17:47.679><c> have</c>

00:17:47.880 --> 00:17:47.890 align:start position:0%
collected the only objects that have
 

00:17:47.890 --> 00:17:49.950 align:start position:0%
collected the only objects that have
been<00:17:48.070><c> renewed</c><00:17:48.580><c> that</c><00:17:49.030><c> have</c><00:17:49.210><c> been</c><00:17:49.360><c> moved</c><00:17:49.600><c> to</c><00:17:49.809><c> all</c>

00:17:49.950 --> 00:17:49.960 align:start position:0%
been renewed that have been moved to all
 

00:17:49.960 --> 00:17:52.440 align:start position:0%
been renewed that have been moved to all
generation<00:17:50.559><c> don't</c><00:17:51.100><c> get</c><00:17:51.309><c> collected</c><00:17:51.820><c> so</c><00:17:52.240><c> here</c>

00:17:52.440 --> 00:17:52.450 align:start position:0%
generation don't get collected so here
 

00:17:52.450 --> 00:17:55.140 align:start position:0%
generation don't get collected so here
we<00:17:52.690><c> can</c><00:17:52.840><c> see</c><00:17:53.020><c> that</c><00:17:53.230><c> the</c><00:17:53.500><c> this</c><00:17:54.150><c> occupancy</c>

00:17:55.140 --> 00:17:55.150 align:start position:0%
we can see that the this occupancy
 

00:17:55.150 --> 00:18:00.149 align:start position:0%
we can see that the this occupancy
fraction<00:17:55.809><c> is</c><00:17:56.020><c> set</c><00:17:56.679><c> at</c><00:17:56.919><c> as</c><00:17:57.630><c> 87</c><00:17:58.630><c> percent</c><00:17:59.080><c> if</c><00:17:59.950><c> we</c>

00:18:00.149 --> 00:18:00.159 align:start position:0%
fraction is set at as 87 percent if we
 

00:18:00.159 --> 00:18:03.360 align:start position:0%
fraction is set at as 87 percent if we
reduce<00:18:00.580><c> this</c><00:18:00.880><c> percentage</c><00:18:01.539><c> we</c><00:18:01.960><c> would</c><00:18:02.289><c> you</c><00:18:03.250><c> know</c>

00:18:03.360 --> 00:18:03.370 align:start position:0%
reduce this percentage we would you know
 

00:18:03.370 --> 00:18:06.299 align:start position:0%
reduce this percentage we would you know
start<00:18:04.000><c> the</c><00:18:04.179><c> the</c><00:18:04.960><c> concurrent</c><00:18:05.530><c> marking</c><00:18:05.919><c> cycle</c>

00:18:06.299 --> 00:18:06.309 align:start position:0%
start the the concurrent marking cycle
 

00:18:06.309 --> 00:18:08.549 align:start position:0%
start the the concurrent marking cycle
of<00:18:06.429><c> g1</c><00:18:06.789><c> collector</c><00:18:07.299><c> earlier</c><00:18:07.900><c> which</c><00:18:08.409><c> would</c>

00:18:08.549 --> 00:18:08.559 align:start position:0%
of g1 collector earlier which would
 

00:18:08.559 --> 00:18:10.590 align:start position:0%
of g1 collector earlier which would
which<00:18:09.039><c> would</c><00:18:09.340><c> make</c><00:18:09.789><c> sure</c><00:18:10.030><c> that</c><00:18:10.299><c> the</c><00:18:10.450><c> old</c>

00:18:10.590 --> 00:18:10.600 align:start position:0%
which would make sure that the old
 

00:18:10.600 --> 00:18:13.140 align:start position:0%
which would make sure that the old
regions<00:18:11.020><c> are</c><00:18:11.289><c> ready</c><00:18:12.010><c> for</c><00:18:12.340><c> mixed</c><00:18:12.669><c> collections</c>

00:18:13.140 --> 00:18:13.150 align:start position:0%
regions are ready for mixed collections
 

00:18:13.150 --> 00:18:15.240 align:start position:0%
regions are ready for mixed collections
and<00:18:13.360><c> would</c><00:18:13.570><c> leave</c><00:18:13.900><c> enough</c><00:18:14.350><c> room</c><00:18:14.530><c> in</c><00:18:14.860><c> the</c><00:18:14.950><c> older</c>

00:18:15.240 --> 00:18:15.250 align:start position:0%
and would leave enough room in the older
 

00:18:15.250 --> 00:18:18.450 align:start position:0%
and would leave enough room in the older
generation<00:18:15.940><c> for</c><00:18:16.350><c> promotion</c><00:18:17.350><c> of</c><00:18:17.530><c> promotions</c>

00:18:18.450 --> 00:18:18.460 align:start position:0%
generation for promotion of promotions
 

00:18:18.460 --> 00:18:24.180 align:start position:0%
generation for promotion of promotions
of<00:18:18.610><c> objects</c><00:18:19.240><c> from</c><00:18:20.049><c> young</c><00:18:20.289><c> regions</c><00:18:22.380><c> so</c><00:18:23.380><c> next</c>

00:18:24.180 --> 00:18:24.190 align:start position:0%
of objects from young regions so next
 

00:18:24.190 --> 00:18:27.330 align:start position:0%
of objects from young regions so next
thing<00:18:24.370><c> to</c><00:18:24.640><c> look</c><00:18:24.820><c> for</c><00:18:25.090><c> is</c><00:18:25.390><c> do</c><00:18:26.169><c> we</c><00:18:26.289><c> have</c><00:18:26.340><c> explicit</c>

00:18:27.330 --> 00:18:27.340 align:start position:0%
thing to look for is do we have explicit
 

00:18:27.340 --> 00:18:30.740 align:start position:0%
thing to look for is do we have explicit
Fuji<00:18:27.760><c> sees</c><00:18:28.030><c> because</c><00:18:28.240><c> explicit</c><00:18:28.990><c> Fuji</c><00:18:29.440><c> sees</c><00:18:29.710><c> can</c>

00:18:30.740 --> 00:18:30.750 align:start position:0%
Fuji sees because explicit Fuji sees can
 

00:18:30.750 --> 00:18:34.169 align:start position:0%
Fuji sees because explicit Fuji sees can
cause<00:18:31.750><c> long</c><00:18:32.350><c> pauses</c><00:18:32.740><c> in</c><00:18:33.159><c> our</c><00:18:33.280><c> application</c><00:18:34.059><c> and</c>

00:18:34.169 --> 00:18:34.179 align:start position:0%
cause long pauses in our application and
 

00:18:34.179 --> 00:18:37.169 align:start position:0%
cause long pauses in our application and
they<00:18:35.140><c> are</c><00:18:35.230><c> easy</c><00:18:35.440><c> to</c><00:18:35.590><c> spot</c><00:18:35.980><c> in</c><00:18:36.250><c> the</c><00:18:36.400><c> GC</c><00:18:36.700><c> logs</c><00:18:36.940><c> if</c>

00:18:37.169 --> 00:18:37.179 align:start position:0%
they are easy to spot in the GC logs if
 

00:18:37.179 --> 00:18:39.930 align:start position:0%
they are easy to spot in the GC logs if
you<00:18:37.330><c> look</c><00:18:37.539><c> for</c><00:18:37.870><c> a</c><00:18:37.900><c> system</c><00:18:38.320><c> strength</c><00:18:39.159><c> in</c><00:18:39.520><c> the</c><00:18:39.640><c> GC</c>

00:18:39.930 --> 00:18:39.940 align:start position:0%
you look for a system strength in the GC
 

00:18:39.940 --> 00:18:42.810 align:start position:0%
you look for a system strength in the GC
log<00:18:40.120><c> entries</c><00:18:40.890><c> that</c><00:18:41.890><c> means</c><00:18:42.220><c> that</c><00:18:42.610><c> there</c><00:18:42.789><c> are</c>

00:18:42.810 --> 00:18:42.820 align:start position:0%
log entries that means that there are
 

00:18:42.820 --> 00:18:46.080 align:start position:0%
log entries that means that there are
explicit<00:18:43.539><c> full</c><00:18:43.960><c> GC</c><00:18:44.380><c> is</c><00:18:44.440><c> being</c><00:18:44.679><c> invoked</c><00:18:45.090><c> these</c>

00:18:46.080 --> 00:18:46.090 align:start position:0%
explicit full GC is being invoked these
 

00:18:46.090 --> 00:18:48.720 align:start position:0%
explicit full GC is being invoked these
explicit<00:18:46.630><c> full</c><00:18:46.990><c> GC</c><00:18:47.380><c> s</c><00:18:47.440><c> can</c><00:18:47.679><c> be</c><00:18:47.710><c> invoked</c><00:18:48.070><c> using</c>

00:18:48.720 --> 00:18:48.730 align:start position:0%
explicit full GC s can be invoked using
 

00:18:48.730 --> 00:18:52.919 align:start position:0%
explicit full GC s can be invoked using
system<00:18:49.120><c> dot</c><00:18:49.330><c> GC</c><00:18:49.720><c> call</c><00:18:50.020><c> if</c><00:18:50.799><c> you</c><00:18:50.980><c> are</c><00:18:51.159><c> using</c><00:18:51.370><c> RM</c><00:18:51.940><c> I</c>

00:18:52.919 --> 00:18:52.929 align:start position:0%
system dot GC call if you are using RM I
 

00:18:52.929 --> 00:18:57.960 align:start position:0%
system dot GC call if you are using RM I
and<00:18:53.260><c> you</c><00:18:53.980><c> know</c><00:18:55.409><c> the</c><00:18:56.409><c> RM</c><00:18:56.770><c> I</c><00:18:56.890><c> applications</c><00:18:57.760><c> at</c>

00:18:57.960 --> 00:18:57.970 align:start position:0%
and you know the RM I applications at
 

00:18:57.970 --> 00:19:00.120 align:start position:0%
and you know the RM I applications at
certain<00:18:58.539><c> intervals</c><00:18:58.659><c> which</c><00:18:59.260><c> is</c><00:18:59.440><c> specified</c>

00:19:00.120 --> 00:19:00.130 align:start position:0%
certain intervals which is specified
 

00:19:00.130 --> 00:19:04.110 align:start position:0%
certain intervals which is specified
with<00:19:00.730><c> these</c><00:19:00.940><c> properties</c><00:19:02.340><c> invoke</c><00:19:03.340><c> explicit</c>

00:19:04.110 --> 00:19:04.120 align:start position:0%
with these properties invoke explicit
 

00:19:04.120 --> 00:19:08.279 align:start position:0%
with these properties invoke explicit
full<00:19:04.360><c> GCS</c><00:19:04.809><c> and</c><00:19:05.710><c> if</c><00:19:06.510><c> we</c><00:19:07.510><c> need</c><00:19:07.659><c> to</c><00:19:07.690><c> we</c><00:19:08.049><c> need</c><00:19:08.169><c> to</c>

00:19:08.279 --> 00:19:08.289 align:start position:0%
full GCS and if we need to we need to
 

00:19:08.289 --> 00:19:11.370 align:start position:0%
full GCS and if we need to we need to
make<00:19:08.470><c> sure</c><00:19:08.740><c> that</c><00:19:09.059><c> the</c><00:19:10.059><c> diagnostic</c><00:19:10.809><c> tools</c><00:19:11.110><c> we</c>

00:19:11.370 --> 00:19:11.380 align:start position:0%
make sure that the diagnostic tools we
 

00:19:11.380 --> 00:19:13.529 align:start position:0%
make sure that the diagnostic tools we
are<00:19:11.530><c> using</c><00:19:11.770><c> to</c><00:19:12.220><c> collect</c><00:19:12.429><c> the</c><00:19:12.700><c> diagnostic</c><00:19:13.419><c> data</c>

00:19:13.529 --> 00:19:13.539 align:start position:0%
are using to collect the diagnostic data
 

00:19:13.539 --> 00:19:17.370 align:start position:0%
are using to collect the diagnostic data
they<00:19:13.929><c> are</c><00:19:13.960><c> not</c><00:19:14.470><c> you</c><00:19:14.919><c> know</c><00:19:16.080><c> unknowingly</c><00:19:17.080><c> they</c>

00:19:17.370 --> 00:19:17.380 align:start position:0%
they are not you know unknowingly they
 

00:19:17.380 --> 00:19:19.680 align:start position:0%
they are not you know unknowingly they
are<00:19:17.530><c> not</c><00:19:17.799><c> invoking</c><00:19:18.490><c> full</c><00:19:18.940><c> GCS</c><00:19:19.390><c> in</c><00:19:19.570><c> our</c>

00:19:19.680 --> 00:19:19.690 align:start position:0%
are not invoking full GCS in our
 

00:19:19.690 --> 00:19:21.390 align:start position:0%
are not invoking full GCS in our
application<00:19:20.320><c> for</c><00:19:20.350><c> example</c><00:19:20.919><c> if</c><00:19:21.039><c> we</c><00:19:21.190><c> have</c>

00:19:21.390 --> 00:19:21.400 align:start position:0%
application for example if we have
 

00:19:21.400 --> 00:19:24.299 align:start position:0%
application for example if we have
option<00:19:21.850><c> print</c><00:19:22.179><c> class</c><00:19:22.480><c> histogram</c><00:19:23.169><c> in</c><00:19:24.159><c> our</c>

00:19:24.299 --> 00:19:24.309 align:start position:0%
option print class histogram in our
 

00:19:24.309 --> 00:19:27.240 align:start position:0%
option print class histogram in our
application<00:19:25.030><c> enabled</c><00:19:25.570><c> and</c><00:19:26.350><c> if</c><00:19:26.559><c> we</c><00:19:26.710><c> send</c><00:19:26.980><c> sick</c>

00:19:27.240 --> 00:19:27.250 align:start position:0%
application enabled and if we send sick
 

00:19:27.250 --> 00:19:29.010 align:start position:0%
application enabled and if we send sick
break<00:19:27.490><c> or</c><00:19:27.669><c> secret</c><00:19:28.179><c> signal</c><00:19:28.600><c> to</c><00:19:28.870><c> the</c>

00:19:29.010 --> 00:19:29.020 align:start position:0%
break or secret signal to the
 

00:19:29.020 --> 00:19:31.409 align:start position:0%
break or secret signal to the
application<00:19:29.710><c> it</c><00:19:29.919><c> would</c><00:19:30.100><c> invoke</c><00:19:30.549><c> a</c><00:19:30.789><c> full</c><00:19:31.059><c> GC</c>

00:19:31.409 --> 00:19:31.419 align:start position:0%
application it would invoke a full GC
 

00:19:31.419 --> 00:19:34.680 align:start position:0%
application it would invoke a full GC
before<00:19:32.020><c> collecting</c><00:19:32.620><c> the</c><00:19:32.850><c> class</c><00:19:33.850><c> histogram</c><00:19:34.480><c> or</c>

00:19:34.680 --> 00:19:34.690 align:start position:0%
before collecting the class histogram or
 

00:19:34.690 --> 00:19:38.159 align:start position:0%
before collecting the class histogram or
the<00:19:35.110><c> object</c><00:19:35.500><c> histogram</c><00:19:36.360><c> so</c><00:19:37.360><c> in</c><00:19:37.539><c> such</c>

00:19:38.159 --> 00:19:38.169 align:start position:0%
the object histogram so in such
 

00:19:38.169 --> 00:19:40.680 align:start position:0%
the object histogram so in such
scenarios<00:19:38.740><c> we</c><00:19:38.980><c> have</c><00:19:39.159><c> to</c><00:19:39.280><c> be</c><00:19:39.399><c> aware</c>

00:19:40.680 --> 00:19:40.690 align:start position:0%
scenarios we have to be aware
 

00:19:40.690 --> 00:19:43.379 align:start position:0%
scenarios we have to be aware
that<00:19:41.259><c> we</c><00:19:41.739><c> our</c><00:19:41.950><c> application</c><00:19:42.700><c> doesn't</c><00:19:43.149><c> have</c>

00:19:43.379 --> 00:19:43.389 align:start position:0%
that we our application doesn't have
 

00:19:43.389 --> 00:19:46.859 align:start position:0%
that we our application doesn't have
explicit<00:19:44.200><c> full</c><00:19:44.440><c> GCS</c><00:19:44.919><c> getting</c><00:19:45.340><c> invoked</c><00:19:45.869><c> there</c>

00:19:46.859 --> 00:19:46.869 align:start position:0%
explicit full GCS getting invoked there
 

00:19:46.869 --> 00:19:49.139 align:start position:0%
explicit full GCS getting invoked there
is<00:19:46.960><c> an</c><00:19:47.080><c> option</c><00:19:47.440><c> disable</c><00:19:47.919><c> explicit</c><00:19:48.549><c> GC</c><00:19:48.940><c> which</c>

00:19:49.139 --> 00:19:49.149 align:start position:0%
is an option disable explicit GC which
 

00:19:49.149 --> 00:19:53.489 align:start position:0%
is an option disable explicit GC which
can<00:19:49.450><c> you</c><00:19:50.109><c> know</c><00:19:50.229><c> completely</c><00:19:50.669><c> disable</c><00:19:51.809><c> the</c><00:19:52.809><c> the</c>

00:19:53.489 --> 00:19:53.499 align:start position:0%
can you know completely disable the the
 

00:19:53.499 --> 00:19:55.710 align:start position:0%
can you know completely disable the the
explicit<00:19:53.889><c> GC</c><00:19:54.700><c> invocation</c><00:19:55.330><c> for</c><00:19:55.570><c> our</c>

00:19:55.710 --> 00:19:55.720 align:start position:0%
explicit GC invocation for our
 

00:19:55.720 --> 00:19:59.369 align:start position:0%
explicit GC invocation for our
applications<00:19:57.210><c> so</c><00:19:58.210><c> once</c><00:19:58.419><c> we</c><00:19:58.570><c> have</c><00:19:58.779><c> heap</c><00:19:59.019><c> dumps</c>

00:19:59.369 --> 00:19:59.379 align:start position:0%
applications so once we have heap dumps
 

00:19:59.379 --> 00:20:02.219 align:start position:0%
applications so once we have heap dumps
collected<00:19:59.859><c> how</c><00:20:00.099><c> do</c><00:20:00.159><c> we</c><00:20:00.460><c> analyze</c><00:20:00.840><c> heap</c><00:20:01.840><c> dumps</c>

00:20:02.219 --> 00:20:02.229 align:start position:0%
collected how do we analyze heap dumps
 

00:20:02.229 --> 00:20:04.289 align:start position:0%
collected how do we analyze heap dumps
there<00:20:02.950><c> are</c><00:20:03.190><c> you</c><00:20:03.549><c> know</c><00:20:03.580><c> plenty</c><00:20:03.849><c> of</c><00:20:04.090><c> tools</c>

00:20:04.289 --> 00:20:04.299 align:start position:0%
there are you know plenty of tools
 

00:20:04.299 --> 00:20:08.609 align:start position:0%
there are you know plenty of tools
available<00:20:04.619><c> for</c><00:20:05.619><c> heap</c><00:20:06.460><c> dump</c><00:20:06.639><c> analysis</c><00:20:07.619><c> until</c>

00:20:08.609 --> 00:20:08.619 align:start position:0%
available for heap dump analysis until
 

00:20:08.619 --> 00:20:11.789 align:start position:0%
available for heap dump analysis until
JDK<00:20:09.070><c> 8</c><00:20:09.249><c> we</c><00:20:09.639><c> had</c><00:20:09.940><c> J</c><00:20:10.210><c> ha</c><00:20:10.450><c> Java</c><00:20:10.840><c> visual</c><00:20:11.200><c> VM</c><00:20:11.559><c> which</c>

00:20:11.789 --> 00:20:11.799 align:start position:0%
JDK 8 we had J ha Java visual VM which
 

00:20:11.799 --> 00:20:14.099 align:start position:0%
JDK 8 we had J ha Java visual VM which
have<00:20:12.009><c> been</c><00:20:12.159><c> removed</c><00:20:12.489><c> from</c><00:20:12.639><c> JDK</c><00:20:13.269><c> 9</c><00:20:13.479><c> but</c><00:20:13.840><c> you</c>

00:20:14.099 --> 00:20:14.109 align:start position:0%
have been removed from JDK 9 but you
 

00:20:14.109 --> 00:20:16.139 align:start position:0%
have been removed from JDK 9 but you
know<00:20:14.229><c> the</c><00:20:14.710><c> open</c><00:20:15.070><c> source</c><00:20:15.190><c> project</c><00:20:15.729><c> of</c><00:20:15.879><c> Java</c>

00:20:16.139 --> 00:20:16.149 align:start position:0%
know the open source project of Java
 

00:20:16.149 --> 00:20:18.989 align:start position:0%
know the open source project of Java
visual<00:20:16.509><c> VM</c><00:20:16.840><c> is</c><00:20:17.019><c> still</c><00:20:17.679><c> available</c><00:20:18.249><c> if</c><00:20:18.549><c> you</c><00:20:18.700><c> if</c>

00:20:18.989 --> 00:20:18.999 align:start position:0%
visual VM is still available if you if
 

00:20:18.999 --> 00:20:21.359 align:start position:0%
visual VM is still available if you if
you<00:20:19.149><c> wish</c><00:20:19.359><c> to</c><00:20:19.389><c> run</c><00:20:19.749><c> your</c><00:20:19.989><c> JDK</c><00:20:20.379><c> 9</c><00:20:20.559><c> applications</c>

00:20:21.359 --> 00:20:21.369 align:start position:0%
you wish to run your JDK 9 applications
 

00:20:21.369 --> 00:20:23.789 align:start position:0%
you wish to run your JDK 9 applications
you<00:20:21.909><c> know</c><00:20:21.999><c> if</c><00:20:22.149><c> you</c><00:20:22.330><c> wish</c><00:20:22.570><c> to</c><00:20:22.869><c> analyze</c><00:20:23.080><c> heap</c>

00:20:23.789 --> 00:20:23.799 align:start position:0%
you know if you wish to analyze heap
 

00:20:23.799 --> 00:20:26.430 align:start position:0%
you know if you wish to analyze heap
dumps<00:20:24.220><c> from</c><00:20:24.700><c> your</c><00:20:24.940><c> JDK</c><00:20:25.389><c> 9</c><00:20:25.599><c> applications</c><00:20:26.320><c> you</c>

00:20:26.430 --> 00:20:26.440 align:start position:0%
dumps from your JDK 9 applications you
 

00:20:26.440 --> 00:20:29.399 align:start position:0%
dumps from your JDK 9 applications you
can<00:20:26.649><c> you</c><00:20:26.859><c> could</c><00:20:27.039><c> still</c><00:20:27.279><c> use</c><00:20:27.629><c> Java</c><00:20:28.629><c> visual</c><00:20:29.049><c> vm</c>

00:20:29.399 --> 00:20:29.409 align:start position:0%
can you could still use Java visual vm
 

00:20:29.409 --> 00:20:31.680 align:start position:0%
can you could still use Java visual vm
and<00:20:29.649><c> there</c><00:20:30.070><c> is</c><00:20:30.190><c> an</c><00:20:30.340><c> excellent</c><00:20:30.759><c> tool</c><00:20:31.059><c> eclipse</c>

00:20:31.680 --> 00:20:31.690 align:start position:0%
and there is an excellent tool eclipse
 

00:20:31.690 --> 00:20:33.960 align:start position:0%
and there is an excellent tool eclipse
mat<00:20:32.080><c> which</c><00:20:32.470><c> is</c><00:20:32.499><c> a</c><00:20:32.710><c> community</c><00:20:33.460><c> developed</c>

00:20:33.960 --> 00:20:33.970 align:start position:0%
mat which is a community developed
 

00:20:33.970 --> 00:20:36.629 align:start position:0%
mat which is a community developed
open-source<00:20:34.570><c> tool</c><00:20:34.869><c> and</c><00:20:35.769><c> it</c><00:20:36.039><c> has</c><00:20:36.369><c> you</c><00:20:36.609><c> know</c>

00:20:36.629 --> 00:20:36.639 align:start position:0%
open-source tool and it has you know
 

00:20:36.639 --> 00:20:39.479 align:start position:0%
open-source tool and it has you know
amazing<00:20:37.239><c> features</c><00:20:37.690><c> which</c><00:20:38.019><c> lets</c><00:20:38.409><c> you</c><00:20:38.710><c> explore</c>

00:20:39.479 --> 00:20:39.489 align:start position:0%
amazing features which lets you explore
 

00:20:39.489 --> 00:20:42.469 align:start position:0%
amazing features which lets you explore
dig<00:20:40.029><c> deep</c><00:20:40.239><c> into</c><00:20:40.570><c> your</c><00:20:40.779><c> heap</c><00:20:41.289><c> dumps</c><00:20:41.769><c> and</c><00:20:41.950><c> see</c>

00:20:42.469 --> 00:20:42.479 align:start position:0%
dig deep into your heap dumps and see
 

00:20:42.479 --> 00:20:46.279 align:start position:0%
dig deep into your heap dumps and see
what<00:20:43.479><c> might</c><00:20:43.929><c> be</c><00:20:44.099><c> consuming</c><00:20:45.099><c> memory</c><00:20:45.580><c> in</c><00:20:45.879><c> your</c>

00:20:46.279 --> 00:20:46.289 align:start position:0%
what might be consuming memory in your
 

00:20:46.289 --> 00:20:52.799 align:start position:0%
what might be consuming memory in your
heaps<00:20:49.200><c> so</c><00:20:50.200><c> here</c><00:20:50.409><c> I</c><00:20:51.220><c> have</c><00:20:51.789><c> a</c><00:20:51.820><c> heap</c><00:20:52.090><c> dump</c><00:20:52.269><c> open</c><00:20:52.659><c> an</c>

00:20:52.799 --> 00:20:52.809 align:start position:0%
heaps so here I have a heap dump open an
 

00:20:52.809 --> 00:20:55.379 align:start position:0%
heaps so here I have a heap dump open an
eclipse<00:20:53.320><c> mat</c><00:20:53.710><c> in</c><00:20:54.099><c> this</c><00:20:54.340><c> case</c><00:20:54.580><c> we</c><00:20:54.820><c> can</c><00:20:54.999><c> see</c><00:20:55.179><c> that</c>

00:20:55.379 --> 00:20:55.389 align:start position:0%
eclipse mat in this case we can see that
 

00:20:55.389 --> 00:20:58.469 align:start position:0%
eclipse mat in this case we can see that
the<00:20:55.570><c> instances</c><00:20:56.169><c> of</c><00:20:56.349><c> byte</c><00:20:56.649><c> array</c><00:20:57.159><c> are</c><00:20:57.479><c> taking</c>

00:20:58.469 --> 00:20:58.479 align:start position:0%
the instances of byte array are taking
 

00:20:58.479 --> 00:21:01.139 align:start position:0%
the instances of byte array are taking
up<00:20:58.659><c> to</c><00:20:58.840><c> four</c><00:20:59.049><c> hundred</c><00:20:59.200><c> and</c><00:20:59.470><c> six</c><00:20:59.849><c> megabytes</c><00:21:00.849><c> and</c>

00:21:01.139 --> 00:21:01.149 align:start position:0%
up to four hundred and six megabytes and
 

00:21:01.149 --> 00:21:04.889 align:start position:0%
up to four hundred and six megabytes and
we<00:21:01.659><c> can</c><00:21:01.869><c> in</c><00:21:02.590><c> Eclipse</c><00:21:03.070><c> matte</c><00:21:03.309><c> we</c><00:21:03.609><c> can</c><00:21:03.879><c> go</c><00:21:04.659><c> and</c>

00:21:04.889 --> 00:21:04.899 align:start position:0%
we can in Eclipse matte we can go and
 

00:21:04.899 --> 00:21:07.739 align:start position:0%
we can in Eclipse matte we can go and
look<00:21:05.109><c> at</c><00:21:05.289><c> the</c><00:21:05.470><c> instance</c><00:21:05.979><c> instances</c><00:21:06.759><c> of</c><00:21:06.999><c> this</c>

00:21:07.739 --> 00:21:07.749 align:start position:0%
look at the instance instances of this
 

00:21:07.749 --> 00:21:10.440 align:start position:0%
look at the instance instances of this
byte<00:21:08.440><c> array</c><00:21:08.830><c> and</c><00:21:09.129><c> here</c><00:21:09.639><c> we</c><00:21:09.759><c> can</c><00:21:09.909><c> see</c><00:21:10.090><c> a</c><00:21:10.119><c> pattern</c>

00:21:10.440 --> 00:21:10.450 align:start position:0%
byte array and here we can see a pattern
 

00:21:10.450 --> 00:21:13.019 align:start position:0%
byte array and here we can see a pattern
that<00:21:10.869><c> you</c><00:21:11.440><c> know</c><00:21:11.529><c> byte</c><00:21:11.739><c> array</c><00:21:12.099><c> of</c><00:21:12.309><c> length</c><00:21:12.609><c> one</c>

00:21:13.019 --> 00:21:13.029 align:start position:0%
that you know byte array of length one
 

00:21:13.029 --> 00:21:16.589 align:start position:0%
that you know byte array of length one
zero<00:21:13.299><c> two</c><00:21:13.359><c> four</c><00:21:13.840><c> are</c><00:21:14.700><c> repeating</c><00:21:15.700><c> there</c><00:21:16.299><c> there</c>

00:21:16.589 --> 00:21:16.599 align:start position:0%
zero two four are repeating there there
 

00:21:16.599 --> 00:21:19.019 align:start position:0%
zero two four are repeating there there
are<00:21:16.749><c> too</c><00:21:16.960><c> many</c><00:21:17.080><c> objects</c><00:21:17.619><c> of</c><00:21:17.830><c> one</c><00:21:18.700><c> zero</c><00:21:18.879><c> two</c>

00:21:19.019 --> 00:21:19.029 align:start position:0%
are too many objects of one zero two
 

00:21:19.029 --> 00:21:25.680 align:start position:0%
are too many objects of one zero two
four<00:21:20.190><c> length</c><00:21:21.190><c> byte</c><00:21:21.580><c> array</c><00:21:23.369><c> in</c><00:21:24.369><c> eclipse</c><00:21:25.090><c> mat</c><00:21:25.299><c> we</c>

00:21:25.680 --> 00:21:25.690 align:start position:0%
four length byte array in eclipse mat we
 

00:21:25.690 --> 00:21:29.430 align:start position:0%
four length byte array in eclipse mat we
can<00:21:25.960><c> see</c><00:21:26.470><c> the</c><00:21:26.909><c> reference</c><00:21:27.909><c> chains</c><00:21:28.359><c> of</c><00:21:29.049><c> these</c>

00:21:29.430 --> 00:21:29.440 align:start position:0%
can see the reference chains of these
 

00:21:29.440 --> 00:21:31.919 align:start position:0%
can see the reference chains of these
objects<00:21:30.129><c> to</c><00:21:30.369><c> their</c><00:21:30.609><c> GC</c><00:21:31.059><c> roots</c><00:21:31.239><c> which</c><00:21:31.659><c> means</c>

00:21:31.919 --> 00:21:31.929 align:start position:0%
objects to their GC roots which means
 

00:21:31.929 --> 00:21:35.159 align:start position:0%
objects to their GC roots which means
the<00:21:32.679><c> roots</c><00:21:32.979><c> in</c><00:21:33.609><c> the</c><00:21:33.849><c> JVM</c><00:21:34.359><c> which</c><00:21:34.389><c> are</c><00:21:34.779><c> holding</c>

00:21:35.159 --> 00:21:35.169 align:start position:0%
the roots in the JVM which are holding
 

00:21:35.169 --> 00:21:37.560 align:start position:0%
the roots in the JVM which are holding
on<00:21:35.440><c> to</c><00:21:35.799><c> these</c><00:21:35.979><c> objects</c><00:21:36.789><c> and</c><00:21:36.999><c> which</c><00:21:37.179><c> are</c><00:21:37.359><c> not</c>

00:21:37.560 --> 00:21:37.570 align:start position:0%
on to these objects and which are not
 

00:21:37.570 --> 00:21:40.859 align:start position:0%
on to these objects and which are not
letting<00:21:37.929><c> them</c><00:21:38.409><c> be</c><00:21:39.239><c> collected</c><00:21:40.239><c> by</c><00:21:40.570><c> the</c><00:21:40.629><c> garbage</c>

00:21:40.859 --> 00:21:40.869 align:start position:0%
letting them be collected by the garbage
 

00:21:40.869 --> 00:21:43.200 align:start position:0%
letting them be collected by the garbage
collector<00:21:41.109><c> so</c><00:21:42.099><c> in</c><00:21:42.249><c> this</c><00:21:42.369><c> case</c><00:21:42.639><c> we</c><00:21:42.849><c> can</c><00:21:42.999><c> see</c>

00:21:43.200 --> 00:21:43.210 align:start position:0%
collector so in this case we can see
 

00:21:43.210 --> 00:21:46.080 align:start position:0%
collector so in this case we can see
that<00:21:43.450><c> there</c><00:21:43.779><c> is</c><00:21:43.809><c> a</c><00:21:44.019><c> vector</c><00:21:44.460><c> long-lived</c><00:21:45.460><c> object</c>

00:21:46.080 --> 00:21:46.090 align:start position:0%
that there is a vector long-lived object
 

00:21:46.090 --> 00:21:49.079 align:start position:0%
that there is a vector long-lived object
in<00:21:46.330><c> memory</c><00:21:47.139><c> Li</c><00:21:47.559><c> class</c><00:21:47.919><c> which</c><00:21:48.340><c> is</c><00:21:48.519><c> actually</c>

00:21:49.079 --> 00:21:49.089 align:start position:0%
in memory Li class which is actually
 

00:21:49.089 --> 00:21:51.509 align:start position:0%
in memory Li class which is actually
responsible<00:21:49.509><c> for</c><00:21:49.839><c> holding</c><00:21:50.529><c> on</c><00:21:50.739><c> to</c><00:21:50.950><c> this</c><00:21:51.129><c> these</c>

00:21:51.509 --> 00:21:51.519 align:start position:0%
responsible for holding on to this these
 

00:21:51.519 --> 00:21:54.270 align:start position:0%
responsible for holding on to this these
byte<00:21:52.359><c> array</c><00:21:52.659><c> instances</c>

00:21:54.270 --> 00:21:54.280 align:start position:0%
byte array instances
 

00:21:54.280 --> 00:21:58.270 align:start position:0%
byte array instances
so<00:21:55.280><c> permanent</c><00:21:55.790><c> generation</c><00:21:56.830><c> metaphase</c><00:21:57.830><c> memory</c>

00:21:58.270 --> 00:21:58.280 align:start position:0%
so permanent generation metaphase memory
 

00:21:58.280 --> 00:22:01.960 align:start position:0%
so permanent generation metaphase memory
issues<00:21:59.440><c> so</c><00:22:00.440><c> in</c><00:22:00.650><c> this</c><00:22:00.830><c> case</c><00:22:01.100><c> as</c><00:22:01.370><c> well</c><00:22:01.550><c> like</c><00:22:01.790><c> we</c>

00:22:01.960 --> 00:22:01.970 align:start position:0%
issues so in this case as well like we
 

00:22:01.970 --> 00:22:04.240 align:start position:0%
issues so in this case as well like we
did<00:22:02.120><c> in</c><00:22:02.270><c> Java</c><00:22:02.510><c> heap</c><00:22:02.870><c> with</c><00:22:03.500><c> Java</c><00:22:03.740><c> heap</c><00:22:04.070><c> memory</c>

00:22:04.240 --> 00:22:04.250 align:start position:0%
did in Java heap with Java heap memory
 

00:22:04.250 --> 00:22:06.460 align:start position:0%
did in Java heap with Java heap memory
related<00:22:04.820><c> issues</c><00:22:05.150><c> in</c><00:22:05.330><c> this</c><00:22:05.480><c> case</c><00:22:05.720><c> also</c><00:22:05.990><c> we</c><00:22:06.200><c> need</c>

00:22:06.460 --> 00:22:06.470 align:start position:0%
related issues in this case also we need
 

00:22:06.470 --> 00:22:08.260 align:start position:0%
related issues in this case also we need
to<00:22:06.620><c> first</c><00:22:06.800><c> confirm</c><00:22:07.340><c> if</c><00:22:07.580><c> there</c><00:22:07.790><c> is</c><00:22:07.970><c> a</c><00:22:08.000><c> memory</c>

00:22:08.260 --> 00:22:08.270 align:start position:0%
to first confirm if there is a memory
 

00:22:08.270 --> 00:22:10.630 align:start position:0%
to first confirm if there is a memory
leak<00:22:08.600><c> monitored</c><00:22:09.470><c> your</c><00:22:09.650><c> permanent</c><00:22:10.010><c> generation</c>

00:22:10.630 --> 00:22:10.640 align:start position:0%
leak monitored your permanent generation
 

00:22:10.640 --> 00:22:13.420 align:start position:0%
leak monitored your permanent generation
or<00:22:10.820><c> meta</c><00:22:11.000><c> space</c><00:22:11.360><c> usage</c><00:22:11.690><c> over</c><00:22:12.140><c> time</c><00:22:12.260><c> and</c><00:22:12.800><c> if</c>

00:22:13.420 --> 00:22:13.430 align:start position:0%
or meta space usage over time and if
 

00:22:13.430 --> 00:22:16.600 align:start position:0%
or meta space usage over time and if
full<00:22:13.760><c> G</c><00:22:13.940><c> C's</c><00:22:14.180><c> are</c><00:22:14.450><c> not</c><00:22:14.690><c> able</c><00:22:15.020><c> to</c><00:22:15.170><c> claim</c><00:22:15.620><c> any</c>

00:22:16.600 --> 00:22:16.610 align:start position:0%
full G C's are not able to claim any
 

00:22:16.610 --> 00:22:19.390 align:start position:0%
full G C's are not able to claim any
space<00:22:17.090><c> from</c><00:22:17.600><c> meta</c><00:22:17.900><c> space</c><00:22:18.200><c> or</c><00:22:18.440><c> form</c><00:22:18.710><c> John</c><00:22:18.950><c> that</c>

00:22:19.390 --> 00:22:19.400 align:start position:0%
space from meta space or form John that
 

00:22:19.400 --> 00:22:20.830 align:start position:0%
space from meta space or form John that
could<00:22:19.640><c> mean</c><00:22:19.880><c> that</c><00:22:19.910><c> your</c><00:22:20.480><c> permanent</c>

00:22:20.830 --> 00:22:20.840 align:start position:0%
could mean that your permanent
 

00:22:20.840 --> 00:22:23.200 align:start position:0%
could mean that your permanent
generation<00:22:21.500><c> or</c><00:22:21.710><c> meta</c><00:22:21.980><c> space</c><00:22:22.310><c> is</c><00:22:22.550><c> not</c><00:22:22.820><c> sized</c>

00:22:23.200 --> 00:22:23.210 align:start position:0%
generation or meta space is not sized
 

00:22:23.210 --> 00:22:25.870 align:start position:0%
generation or meta space is not sized
appropriately<00:22:23.980><c> increase</c><00:22:24.980><c> the</c><00:22:25.190><c> size</c><00:22:25.430><c> test</c>

00:22:25.870 --> 00:22:25.880 align:start position:0%
appropriately increase the size test
 

00:22:25.880 --> 00:22:28.330 align:start position:0%
appropriately increase the size test
your<00:22:26.090><c> application</c><00:22:26.750><c> again</c><00:22:27.050><c> and</c><00:22:27.260><c> if</c><00:22:27.740><c> it</c><00:22:27.950><c> stills</c>

00:22:28.330 --> 00:22:28.340 align:start position:0%
your application again and if it stills
 

00:22:28.340 --> 00:22:30.070 align:start position:0%
your application again and if it stills
you<00:22:28.580><c> know</c><00:22:28.700><c> after</c><00:22:29.060><c> the</c><00:22:29.180><c> application</c><00:22:29.330><c> reaches</c><00:22:30.050><c> a</c>

00:22:30.070 --> 00:22:30.080 align:start position:0%
you know after the application reaches a
 

00:22:30.080 --> 00:22:32.890 align:start position:0%
you know after the application reaches a
steady<00:22:30.410><c> state</c><00:22:30.830><c> if</c><00:22:31.010><c> it</c><00:22:31.460><c> still</c><00:22:31.790><c> keeps</c><00:22:32.150><c> growing</c>

00:22:32.890 --> 00:22:32.900 align:start position:0%
steady state if it still keeps growing
 

00:22:32.900 --> 00:22:37.120 align:start position:0%
steady state if it still keeps growing
in<00:22:33.650><c> size</c><00:22:34.480><c> its</c><00:22:35.480><c> its</c><00:22:35.750><c> occupancy</c><00:22:36.470><c> still</c><00:22:36.860><c> keeps</c>

00:22:37.120 --> 00:22:37.130 align:start position:0%
in size its its occupancy still keeps
 

00:22:37.130 --> 00:22:39.220 align:start position:0%
in size its its occupancy still keeps
growing<00:22:37.550><c> that</c><00:22:38.030><c> would</c><00:22:38.540><c> indicate</c><00:22:38.960><c> that</c>

00:22:39.220 --> 00:22:39.230 align:start position:0%
growing that would indicate that
 

00:22:39.230 --> 00:22:42.880 align:start position:0%
growing that would indicate that
probably<00:22:40.190><c> there</c><00:22:40.370><c> is</c><00:22:40.400><c> a</c><00:22:40.520><c> memory</c><00:22:40.970><c> leak</c><00:22:41.890><c> to</c>

00:22:42.880 --> 00:22:42.890 align:start position:0%
probably there is a memory leak to
 

00:22:42.890 --> 00:22:52.330 align:start position:0%
probably there is a memory leak to
configure<00:22:50.020><c> it</c><00:22:51.020><c> is</c><00:22:51.260><c> native</c><00:22:51.620><c> but</c><00:22:51.770><c> it</c><00:22:51.890><c> is</c>

00:22:52.330 --> 00:22:52.340 align:start position:0%
configure it is native but it is
 

00:22:52.340 --> 00:22:56.350 align:start position:0%
configure it is native but it is
collected<00:22:52.820><c> by</c><00:22:52.940><c> the</c><00:22:53.000><c> garbage</c><00:22:53.210><c> collector</c><00:22:55.360><c> so</c>

00:22:56.350 --> 00:22:56.360 align:start position:0%
collected by the garbage collector so
 

00:22:56.360 --> 00:22:58.810 align:start position:0%
collected by the garbage collector so
configure<00:22:56.870><c> to</c><00:22:57.770><c> configure</c><00:22:57.800><c> our</c><00:22:58.340><c> permanent</c>

00:22:58.810 --> 00:22:58.820 align:start position:0%
configure to configure our permanent
 

00:22:58.820 --> 00:23:00.940 align:start position:0%
configure to configure our permanent
generation<00:22:59.570><c> we</c><00:22:59.990><c> can</c><00:23:00.020><c> use</c><00:23:00.290><c> two</c><00:23:00.500><c> options</c>

00:23:00.940 --> 00:23:00.950 align:start position:0%
generation we can use two options
 

00:23:00.950 --> 00:23:02.590 align:start position:0%
generation we can use two options
permanent<00:23:01.940><c> generation</c>

00:23:02.590 --> 00:23:02.600 align:start position:0%
permanent generation
 

00:23:02.600 --> 00:23:06.160 align:start position:0%
permanent generation
palm<00:23:02.990><c> size</c><00:23:03.350><c> and</c><00:23:03.770><c> Max</c><00:23:03.980><c> palm</c><00:23:04.310><c> size</c><00:23:04.840><c> to</c><00:23:05.840><c> set</c><00:23:06.020><c> the</c>

00:23:06.160 --> 00:23:06.170 align:start position:0%
palm size and Max palm size to set the
 

00:23:06.170 --> 00:23:07.930 align:start position:0%
palm size and Max palm size to set the
initial<00:23:06.560><c> and</c><00:23:06.800><c> the</c><00:23:06.830><c> maximum</c><00:23:07.400><c> permanent</c>

00:23:07.930 --> 00:23:07.940 align:start position:0%
initial and the maximum permanent
 

00:23:07.940 --> 00:23:10.810 align:start position:0%
initial and the maximum permanent
generation<00:23:08.360><c> size</c><00:23:08.570><c> a</c><00:23:09.190><c> point</c><00:23:10.190><c> to</c><00:23:10.370><c> note</c><00:23:10.550><c> here</c><00:23:10.580><c> is</c>

00:23:10.810 --> 00:23:10.820 align:start position:0%
generation size a point to note here is
 

00:23:10.820 --> 00:23:13.330 align:start position:0%
generation size a point to note here is
that<00:23:11.320><c> permanent</c><00:23:12.320><c> generation</c><00:23:12.980><c> has</c><00:23:13.310><c> been</c>

00:23:13.330 --> 00:23:13.340 align:start position:0%
that permanent generation has been
 

00:23:13.340 --> 00:23:16.420 align:start position:0%
that permanent generation has been
removed<00:23:14.090><c> in</c><00:23:14.390><c> JDK</c><00:23:14.840><c> 8</c><00:23:15.110><c> so</c><00:23:15.620><c> we</c><00:23:15.860><c> don't</c><00:23:16.070><c> have</c><00:23:16.250><c> how</c>

00:23:16.420 --> 00:23:16.430 align:start position:0%
removed in JDK 8 so we don't have how
 

00:23:16.430 --> 00:23:19.000 align:start position:0%
removed in JDK 8 so we don't have how
many<00:23:16.640><c> generations</c><00:23:16.970><c> JDK</c><00:23:17.630><c> 8</c><00:23:17.780><c> onwards</c><00:23:18.410><c> there</c><00:23:18.830><c> is</c>

00:23:19.000 --> 00:23:19.010 align:start position:0%
many generations JDK 8 onwards there is
 

00:23:19.010 --> 00:23:23.230 align:start position:0%
many generations JDK 8 onwards there is
meta<00:23:19.700><c> space</c><00:23:20.090><c> where</c><00:23:20.540><c> we</c><00:23:20.780><c> store</c><00:23:21.790><c> class</c><00:23:22.790><c> metadata</c>

00:23:23.230 --> 00:23:23.240 align:start position:0%
meta space where we store class metadata
 

00:23:23.240 --> 00:23:26.790 align:start position:0%
meta space where we store class metadata
information<00:23:24.430><c> so</c><00:23:25.430><c> to</c><00:23:25.490><c> configure</c><00:23:26.150><c> meta</c><00:23:26.390><c> space</c>

00:23:26.790 --> 00:23:26.800 align:start position:0%
information so to configure meta space
 

00:23:26.800 --> 00:23:30.070 align:start position:0%
information so to configure meta space
meta<00:23:27.800><c> space</c><00:23:28.130><c> size</c><00:23:28.430><c> and</c><00:23:28.910><c> max</c><00:23:29.180><c> meta</c><00:23:29.480><c> space</c><00:23:29.810><c> size</c>

00:23:30.070 --> 00:23:30.080 align:start position:0%
meta space size and max meta space size
 

00:23:30.080 --> 00:23:34.510 align:start position:0%
meta space size and max meta space size
JVM<00:23:30.650><c> options</c><00:23:31.510><c> if</c><00:23:32.510><c> max</c><00:23:33.140><c> meta</c><00:23:33.470><c> space</c><00:23:33.830><c> size</c><00:23:34.130><c> is</c>

00:23:34.510 --> 00:23:34.520 align:start position:0%
JVM options if max meta space size is
 

00:23:34.520 --> 00:23:38.110 align:start position:0%
JVM options if max meta space size is
not<00:23:35.030><c> used</c><00:23:35.540><c> then</c><00:23:36.080><c> the</c><00:23:36.110><c> JVM</c><00:23:36.770><c> is</c><00:23:37.040><c> you</c><00:23:37.790><c> know</c><00:23:37.910><c> free</c>

00:23:38.110 --> 00:23:38.120 align:start position:0%
not used then the JVM is you know free
 

00:23:38.120 --> 00:23:40.540 align:start position:0%
not used then the JVM is you know free
to<00:23:38.330><c> use</c><00:23:38.540><c> all</c><00:23:38.990><c> of</c><00:23:39.230><c> the</c><00:23:39.410><c> native</c><00:23:39.770><c> memory</c>

00:23:40.540 --> 00:23:40.550 align:start position:0%
to use all of the native memory
 

00:23:40.550 --> 00:23:43.720 align:start position:0%
to use all of the native memory
available<00:23:40.940><c> to</c><00:23:41.510><c> it</c><00:23:41.660><c> because</c><00:23:42.650><c> the</c><00:23:42.980><c> meta</c><00:23:43.310><c> space</c>

00:23:43.720 --> 00:23:43.730 align:start position:0%
available to it because the meta space
 

00:23:43.730 --> 00:23:46.570 align:start position:0%
available to it because the meta space
unlike<00:23:44.300><c> permanent</c><00:23:45.230><c> generation</c><00:23:45.710><c> is</c><00:23:45.890><c> allocated</c>

00:23:46.570 --> 00:23:46.580 align:start position:0%
unlike permanent generation is allocated
 

00:23:46.580 --> 00:23:51.880 align:start position:0%
unlike permanent generation is allocated
from<00:23:46.820><c> native</c><00:23:47.180><c> memory</c><00:23:50.140><c> alright</c><00:23:51.140><c> so</c><00:23:51.380><c> we</c><00:23:51.560><c> talked</c>

00:23:51.880 --> 00:23:51.890 align:start position:0%
from native memory alright so we talked
 

00:23:51.890 --> 00:23:54.340 align:start position:0%
from native memory alright so we talked
about<00:23:52.190><c> out</c><00:23:52.460><c> of</c><00:23:52.640><c> memory</c><00:23:52.910><c> error</c><00:23:53.330><c> or</c><00:23:53.660><c> memory</c><00:23:54.050><c> leak</c>

00:23:54.340 --> 00:23:54.350 align:start position:0%
about out of memory error or memory leak
 

00:23:54.350 --> 00:23:56.860 align:start position:0%
about out of memory error or memory leak
situation<00:23:55.040><c> with</c><00:23:55.460><c> meta</c><00:23:55.850><c> space</c><00:23:56.240><c> and</c><00:23:56.480><c> what</c><00:23:56.630><c> what</c>

00:23:56.860 --> 00:23:56.870 align:start position:0%
situation with meta space and what what
 

00:23:56.870 --> 00:23:57.700 align:start position:0%
situation with meta space and what what
is<00:23:57.020><c> this</c>

00:23:57.700 --> 00:23:57.710 align:start position:0%
is this
 

00:23:57.710 --> 00:23:59.860 align:start position:0%
is this
you<00:23:57.860><c> know</c><00:23:57.980><c> another</c><00:23:58.400><c> space</c><00:23:59.000><c> compressed</c><00:23:59.570><c> class</c>

00:23:59.860 --> 00:23:59.870 align:start position:0%
you know another space compressed class
 

00:23:59.870 --> 00:24:02.050 align:start position:0%
you know another space compressed class
space<00:24:00.200><c> so</c><00:24:00.800><c> compressed</c><00:24:01.160><c> class</c><00:24:01.430><c> space</c><00:24:01.730><c> is</c>

00:24:02.050 --> 00:24:02.060 align:start position:0%
space so compressed class space is
 

00:24:02.060 --> 00:24:05.950 align:start position:0%
space so compressed class space is
actually<00:24:03.160><c> part</c><00:24:04.160><c> of</c><00:24:04.280><c> meta</c><00:24:04.730><c> space</c><00:24:05.120><c> which</c><00:24:05.780><c> is</c><00:24:05.930><c> a</c>

00:24:05.950 --> 00:24:05.960 align:start position:0%
actually part of meta space which is a
 

00:24:05.960 --> 00:24:07.870 align:start position:0%
actually part of meta space which is a
you<00:24:06.380><c> know</c><00:24:06.410><c> logical</c><00:24:07.130><c> region</c>

00:24:07.870 --> 00:24:07.880 align:start position:0%
you know logical region
 

00:24:07.880 --> 00:24:10.640 align:start position:0%
you know logical region
it's<00:24:08.880><c> not</c><00:24:09.090><c> physically</c><00:24:09.750><c> part</c><00:24:09.990><c> of</c><00:24:10.110><c> meta</c><00:24:10.320><c> space</c>

00:24:10.640 --> 00:24:10.650 align:start position:0%
it's not physically part of meta space
 

00:24:10.650 --> 00:24:13.520 align:start position:0%
it's not physically part of meta space
it's<00:24:10.890><c> a</c><00:24:10.980><c> logical</c><00:24:11.780><c> it's</c><00:24:12.780><c> a</c><00:24:12.900><c> region</c><00:24:13.230><c> which</c><00:24:13.380><c> is</c>

00:24:13.520 --> 00:24:13.530 align:start position:0%
it's a logical it's a region which is
 

00:24:13.530 --> 00:24:15.790 align:start position:0%
it's a logical it's a region which is
logically<00:24:14.190><c> included</c><00:24:14.700><c> into</c><00:24:14.910><c> the</c><00:24:15.030><c> meta</c><00:24:15.240><c> space</c>

00:24:15.790 --> 00:24:15.800 align:start position:0%
logically included into the meta space
 

00:24:15.800 --> 00:24:19.790 align:start position:0%
logically included into the meta space
and<00:24:16.800><c> we</c><00:24:17.190><c> have</c><00:24:17.520><c> meta</c><00:24:17.940><c> space</c><00:24:18.530><c> you</c><00:24:19.530><c> know</c><00:24:19.620><c> meta</c>

00:24:19.790 --> 00:24:19.800 align:start position:0%
and we have meta space you know meta
 

00:24:19.800 --> 00:24:22.010 align:start position:0%
and we have meta space you know meta
space<00:24:20.100><c> having</c><00:24:20.490><c> compressed</c><00:24:21.059><c> class</c><00:24:21.330><c> space</c><00:24:21.690><c> if</c>

00:24:22.010 --> 00:24:22.020 align:start position:0%
space having compressed class space if
 

00:24:22.020 --> 00:24:24.680 align:start position:0%
space having compressed class space if
the<00:24:22.530><c> option</c><00:24:22.980><c> use</c><00:24:23.250><c> compressed</c><00:24:23.820><c> class</c><00:24:24.090><c> pointers</c>

00:24:24.680 --> 00:24:24.690 align:start position:0%
the option use compressed class pointers
 

00:24:24.690 --> 00:24:27.110 align:start position:0%
the option use compressed class pointers
is<00:24:24.900><c> enabled</c><00:24:25.410><c> which</c><00:24:26.040><c> is</c><00:24:26.220><c> enabled</c><00:24:26.520><c> if</c><00:24:26.880><c> use</c>

00:24:27.110 --> 00:24:27.120 align:start position:0%
is enabled which is enabled if use
 

00:24:27.120 --> 00:24:28.970 align:start position:0%
is enabled which is enabled if use
compressed<00:24:27.720><c> oops</c><00:24:27.900><c> is</c><00:24:28.110><c> enable</c><00:24:28.530><c> and</c><00:24:28.710><c> which</c><00:24:28.830><c> is</c>

00:24:28.970 --> 00:24:28.980 align:start position:0%
compressed oops is enable and which is
 

00:24:28.980 --> 00:24:32.510 align:start position:0%
compressed oops is enable and which is
true<00:24:29.220><c> for</c><00:24:29.870><c> 64-bit</c><00:24:30.870><c> platforms</c><00:24:31.050><c> so</c><00:24:31.890><c> by</c><00:24:32.280><c> default</c>

00:24:32.510 --> 00:24:32.520 align:start position:0%
true for 64-bit platforms so by default
 

00:24:32.520 --> 00:24:34.400 align:start position:0%
true for 64-bit platforms so by default
you<00:24:32.910><c> would</c><00:24:33.150><c> have</c><00:24:33.390><c> used</c><00:24:33.690><c> compressed</c><00:24:34.020><c> class</c>

00:24:34.400 --> 00:24:34.410 align:start position:0%
you would have used compressed class
 

00:24:34.410 --> 00:24:39.799 align:start position:0%
you would have used compressed class
pointers<00:24:35.010><c> on</c><00:24:35.220><c> on</c><00:24:35.580><c> your</c><00:24:35.820><c> 64-bit</c><00:24:36.860><c> JVM</c><00:24:38.540><c> and</c><00:24:39.540><c> with</c>

00:24:39.799 --> 00:24:39.809 align:start position:0%
pointers on on your 64-bit JVM and with
 

00:24:39.809 --> 00:24:44.060 align:start position:0%
pointers on on your 64-bit JVM and with
this<00:24:39.960><c> option</c><00:24:40.440><c> on</c><00:24:40.650><c> this</c><00:24:41.690><c> the</c><00:24:42.690><c> 64-bit</c><00:24:43.679><c> class</c>

00:24:44.060 --> 00:24:44.070 align:start position:0%
this option on this the 64-bit class
 

00:24:44.070 --> 00:24:47.419 align:start position:0%
this option on this the 64-bit class
pointers<00:24:44.670><c> are</c><00:24:44.910><c> represented</c><00:24:45.630><c> by</c><00:24:46.429><c> 32-bit</c>

00:24:47.419 --> 00:24:47.429 align:start position:0%
pointers are represented by 32-bit
 

00:24:47.429 --> 00:24:49.490 align:start position:0%
pointers are represented by 32-bit
offset<00:24:47.670><c> so</c><00:24:48.120><c> there</c><00:24:48.300><c> is</c><00:24:48.420><c> a</c><00:24:48.450><c> you</c><00:24:49.020><c> know</c><00:24:49.050><c> separate</c>

00:24:49.490 --> 00:24:49.500 align:start position:0%
offset so there is a you know separate
 

00:24:49.500 --> 00:24:53.810 align:start position:0%
offset so there is a you know separate
space<00:24:50.460><c> a</c><00:24:50.760><c> separate</c><00:24:51.210><c> memory</c><00:24:51.600><c> pool</c><00:24:52.100><c> and</c><00:24:53.100><c> the</c>

00:24:53.810 --> 00:24:53.820 align:start position:0%
space a separate memory pool and the
 

00:24:53.820 --> 00:24:56.210 align:start position:0%
space a separate memory pool and the
class<00:24:54.150><c> metadata</c><00:24:54.750><c> in</c><00:24:55.050><c> that</c><00:24:55.260><c> memory</c><00:24:55.650><c> pool</c><00:24:55.920><c> can</c>

00:24:56.210 --> 00:24:56.220 align:start position:0%
class metadata in that memory pool can
 

00:24:56.220 --> 00:24:58.790 align:start position:0%
class metadata in that memory pool can
be<00:24:56.280><c> referenced</c><00:24:56.850><c> by</c><00:24:56.970><c> 32-bit</c><00:24:57.660><c> offsets</c><00:24:58.230><c> instead</c>

00:24:58.790 --> 00:24:58.800 align:start position:0%
be referenced by 32-bit offsets instead
 

00:24:58.800 --> 00:25:02.450 align:start position:0%
be referenced by 32-bit offsets instead
of<00:24:58.920><c> 64-bit</c><00:24:59.550><c> pointers</c><00:25:00.110><c> by</c><00:25:01.110><c> default</c><00:25:01.620><c> 1gb</c><00:25:02.429><c> of</c>

00:25:02.450 --> 00:25:02.460 align:start position:0%
of 64-bit pointers by default 1gb of
 

00:25:02.460 --> 00:25:04.400 align:start position:0%
of 64-bit pointers by default 1gb of
address<00:25:02.970><c> space</c><00:25:03.059><c> is</c><00:25:03.420><c> reserved</c><00:25:03.990><c> for</c><00:25:04.110><c> the</c>

00:25:04.400 --> 00:25:04.410 align:start position:0%
address space is reserved for the
 

00:25:04.410 --> 00:25:06.530 align:start position:0%
address space is reserved for the
compressed<00:25:04.800><c> class</c><00:25:05.040><c> space</c><00:25:05.309><c> when</c><00:25:05.700><c> you</c><00:25:06.300><c> know</c><00:25:06.420><c> the</c>

00:25:06.530 --> 00:25:06.540 align:start position:0%
compressed class space when you know the
 

00:25:06.540 --> 00:25:09.260 align:start position:0%
compressed class space when you know the
JVM<00:25:06.960><c> initializes</c><00:25:07.800><c> and</c><00:25:08.010><c> but</c><00:25:08.730><c> this</c><00:25:08.880><c> can</c><00:25:09.090><c> be</c>

00:25:09.260 --> 00:25:09.270 align:start position:0%
JVM initializes and but this can be
 

00:25:09.270 --> 00:25:11.450 align:start position:0%
JVM initializes and but this can be
configured<00:25:09.630><c> using</c><00:25:09.840><c> option</c><00:25:10.530><c> compressed</c><00:25:11.100><c> class</c>

00:25:11.450 --> 00:25:11.460 align:start position:0%
configured using option compressed class
 

00:25:11.460 --> 00:25:15.470 align:start position:0%
configured using option compressed class
space<00:25:11.760><c> size</c><00:25:12.710><c> and</c><00:25:13.710><c> an</c><00:25:14.130><c> important</c><00:25:14.940><c> point</c><00:25:15.120><c> here</c>

00:25:15.470 --> 00:25:15.480 align:start position:0%
space size and an important point here
 

00:25:15.480 --> 00:25:18.260 align:start position:0%
space size and an important point here
is<00:25:15.540><c> that</c><00:25:15.750><c> the</c><00:25:16.080><c> the</c><00:25:16.620><c> the</c><00:25:16.650><c> option</c><00:25:17.429><c> max</c><00:25:17.880><c> meta</c>

00:25:18.260 --> 00:25:18.270 align:start position:0%
is that the the the option max meta
 

00:25:18.270 --> 00:25:21.860 align:start position:0%
is that the the the option max meta
space<00:25:18.630><c> size</c><00:25:18.900><c> sets</c><00:25:19.530><c> an</c><00:25:19.710><c> upper</c><00:25:20.100><c> limit</c><00:25:20.309><c> on</c><00:25:20.730><c> on</c><00:25:21.660><c> the</c>

00:25:21.860 --> 00:25:21.870 align:start position:0%
space size sets an upper limit on on the
 

00:25:21.870 --> 00:25:24.560 align:start position:0%
space size sets an upper limit on on the
committed<00:25:22.260><c> sizes</c><00:25:22.740><c> of</c><00:25:22.980><c> both</c><00:25:23.700><c> these</c><00:25:24.179><c> spaces</c>

00:25:24.560 --> 00:25:24.570 align:start position:0%
committed sizes of both these spaces
 

00:25:24.570 --> 00:25:28.970 align:start position:0%
committed sizes of both these spaces
meta<00:25:25.080><c> space</c><00:25:25.470><c> and</c><00:25:25.770><c> compressed</c><00:25:26.490><c> class</c><00:25:26.790><c> space</c><00:25:27.980><c> so</c>

00:25:28.970 --> 00:25:28.980 align:start position:0%
meta space and compressed class space so
 

00:25:28.980 --> 00:25:32.330 align:start position:0%
meta space and compressed class space so
to<00:25:29.790><c> understand</c><00:25:30.420><c> this</c><00:25:30.630><c> better</c><00:25:30.929><c> if</c><00:25:31.830><c> we</c><00:25:32.070><c> don't</c>

00:25:32.330 --> 00:25:32.340 align:start position:0%
to understand this better if we don't
 

00:25:32.340 --> 00:25:35.390 align:start position:0%
to understand this better if we don't
have<00:25:32.640><c> compressed</c><00:25:33.390><c> class</c><00:25:33.720><c> pointers</c><00:25:34.380><c> enable</c><00:25:34.980><c> in</c>

00:25:35.390 --> 00:25:35.400 align:start position:0%
have compressed class pointers enable in
 

00:25:35.400 --> 00:25:38.270 align:start position:0%
have compressed class pointers enable in
the<00:25:35.640><c> Java</c><00:25:35.910><c> heap</c><00:25:36.300><c> we</c><00:25:36.630><c> have</c><00:25:36.870><c> you</c><00:25:37.050><c> know</c><00:25:37.280><c> objects</c>

00:25:38.270 --> 00:25:38.280 align:start position:0%
the Java heap we have you know objects
 

00:25:38.280 --> 00:25:40.549 align:start position:0%
the Java heap we have you know objects
in<00:25:38.429><c> objects</c><00:25:39.059><c> we</c><00:25:39.210><c> have</c><00:25:39.240><c> these</c><00:25:39.600><c> class</c><00:25:39.960><c> pointers</c>

00:25:40.549 --> 00:25:40.559 align:start position:0%
in objects we have these class pointers
 

00:25:40.559 --> 00:25:42.890 align:start position:0%
in objects we have these class pointers
so<00:25:41.220><c> these</c><00:25:41.400><c> class</c><00:25:41.670><c> pointers</c><00:25:42.210><c> on</c><00:25:42.360><c> 64-bit</c>

00:25:42.890 --> 00:25:42.900 align:start position:0%
so these class pointers on 64-bit
 

00:25:42.900 --> 00:25:46.760 align:start position:0%
so these class pointers on 64-bit
platforms<00:25:43.200><c> are</c><00:25:43.890><c> 64-bit</c><00:25:45.679><c> 64-bit</c><00:25:46.679><c> platforms</c>

00:25:46.760 --> 00:25:46.770 align:start position:0%
platforms are 64-bit 64-bit platforms
 

00:25:46.770 --> 00:25:50.180 align:start position:0%
platforms are 64-bit 64-bit platforms
our<00:25:47.250><c> 64-bit</c><00:25:48.000><c> pointers</c><00:25:48.300><c> and</c><00:25:48.780><c> these</c><00:25:49.410><c> 64-bit</c>

00:25:50.180 --> 00:25:50.190 align:start position:0%
our 64-bit pointers and these 64-bit
 

00:25:50.190 --> 00:25:52.940 align:start position:0%
our 64-bit pointers and these 64-bit
pointers<00:25:50.429><c> are</c><00:25:51.000><c> then</c><00:25:51.240><c> used</c><00:25:51.990><c> to</c><00:25:52.200><c> reference</c><00:25:52.470><c> to</c>

00:25:52.940 --> 00:25:52.950 align:start position:0%
pointers are then used to reference to
 

00:25:52.950 --> 00:25:55.820 align:start position:0%
pointers are then used to reference to
class<00:25:53.250><c> metadata</c><00:25:53.760><c> in</c><00:25:54.059><c> meta</c><00:25:54.420><c> space</c><00:25:54.840><c> but</c><00:25:55.500><c> when</c><00:25:55.679><c> we</c>

00:25:55.820 --> 00:25:55.830 align:start position:0%
class metadata in meta space but when we
 

00:25:55.830 --> 00:25:58.370 align:start position:0%
class metadata in meta space but when we
have<00:25:56.130><c> used</c><00:25:56.910><c> compressed</c><00:25:57.330><c> class</c><00:25:57.750><c> pointers</c>

00:25:58.370 --> 00:25:58.380 align:start position:0%
have used compressed class pointers
 

00:25:58.380 --> 00:26:02.030 align:start position:0%
have used compressed class pointers
enabled<00:25:59.250><c> these</c><00:25:59.990><c> underscore</c><00:26:00.990><c> class</c><00:26:01.380><c> pointers</c>

00:26:02.030 --> 00:26:02.040 align:start position:0%
enabled these underscore class pointers
 

00:26:02.040 --> 00:26:04.460 align:start position:0%
enabled these underscore class pointers
in<00:26:02.309><c> Java</c><00:26:02.670><c> objects</c><00:26:03.270><c> in</c><00:26:03.450><c> the</c><00:26:03.540><c> Java</c><00:26:03.780><c> heap</c><00:26:04.170><c> are</c>

00:26:04.460 --> 00:26:04.470 align:start position:0%
in Java objects in the Java heap are
 

00:26:04.470 --> 00:26:08.270 align:start position:0%
in Java objects in the Java heap are
actually<00:26:05.220><c> 32</c><00:26:05.610><c> bit</c><00:26:05.970><c> offset</c><00:26:06.270><c> so</c><00:26:06.750><c> it</c><00:26:06.960><c> says</c><00:26:07.590><c> you</c>

00:26:08.270 --> 00:26:08.280 align:start position:0%
actually 32 bit offset so it says you
 

00:26:08.280 --> 00:26:11.990 align:start position:0%
actually 32 bit offset so it says you
know<00:26:08.750><c> space</c><00:26:09.750><c> in</c><00:26:10.440><c> our</c><00:26:10.620><c> Java</c><00:26:10.950><c> heaps</c><00:26:11.370><c> if</c><00:26:11.610><c> we</c><00:26:11.790><c> have</c>

00:26:11.990 --> 00:26:12.000 align:start position:0%
know space in our Java heaps if we have
 

00:26:12.000 --> 00:26:15.380 align:start position:0%
know space in our Java heaps if we have
32-bit<00:26:12.480><c> pointers</c><00:26:13.080><c> instead</c><00:26:13.470><c> of</c><00:26:13.620><c> 64-bit</c><00:26:14.429><c> so</c>

00:26:15.380 --> 00:26:15.390 align:start position:0%
32-bit pointers instead of 64-bit so
 

00:26:15.390 --> 00:26:17.840 align:start position:0%
32-bit pointers instead of 64-bit so
these<00:26:15.540><c> 32-bit</c><00:26:16.440><c> offsets</c><00:26:16.919><c> can</c><00:26:17.040><c> be</c><00:26:17.340><c> used</c><00:26:17.610><c> to</c>

00:26:17.840 --> 00:26:17.850 align:start position:0%
these 32-bit offsets can be used to
 

00:26:17.850 --> 00:26:20.810 align:start position:0%
these 32-bit offsets can be used to
reference<00:26:18.330><c> to</c><00:26:18.630><c> this</c><00:26:18.809><c> class</c><00:26:19.169><c> metadata</c><00:26:19.950><c> in</c>

00:26:20.810 --> 00:26:20.820 align:start position:0%
reference to this class metadata in
 

00:26:20.820 --> 00:26:24.860 align:start position:0%
reference to this class metadata in
pressed<00:26:21.090><c> glass</c><00:26:21.360><c> space</c><00:26:22.940><c> and</c><00:26:23.940><c> when</c><00:26:24.540><c> we</c><00:26:24.660><c> have</c>

00:26:24.860 --> 00:26:24.870 align:start position:0%
pressed glass space and when we have
 

00:26:24.870 --> 00:26:28.400 align:start position:0%
pressed glass space and when we have
used<00:26:25.140><c> compressed</c><00:26:25.440><c> glass</c><00:26:25.800><c> pointers</c><00:26:26.340><c> on</c><00:26:27.080><c> and</c><00:26:28.080><c> if</c>

00:26:28.400 --> 00:26:28.410 align:start position:0%
used compressed glass pointers on and if
 

00:26:28.410 --> 00:26:31.670 align:start position:0%
used compressed glass pointers on and if
we<00:26:28.530><c> look</c><00:26:28.710><c> at</c><00:26:28.890><c> the</c><00:26:29.100><c> GC</c><00:26:29.520><c> log</c><00:26:29.760><c> entry</c><00:26:30.480><c> we</c><00:26:31.320><c> can</c><00:26:31.350><c> see</c>

00:26:31.670 --> 00:26:31.680 align:start position:0%
we look at the GC log entry we can see
 

00:26:31.680 --> 00:26:33.440 align:start position:0%
we look at the GC log entry we can see
that<00:26:31.860><c> there</c><00:26:32.040><c> are</c><00:26:32.280><c> you</c><00:26:32.490><c> know</c><00:26:32.520><c> two</c><00:26:32.790><c> lines</c><00:26:33.060><c> one</c>

00:26:33.440 --> 00:26:33.450 align:start position:0%
that there are you know two lines one
 

00:26:33.450 --> 00:26:35.420 align:start position:0%
that there are you know two lines one
for<00:26:33.750><c> marrow</c><00:26:33.960><c> space</c><00:26:34.320><c> and</c><00:26:34.620><c> the</c><00:26:34.740><c> another</c><00:26:34.950><c> one</c><00:26:35.070><c> is</c>

00:26:35.420 --> 00:26:35.430 align:start position:0%
for marrow space and the another one is
 

00:26:35.430 --> 00:26:40.100 align:start position:0%
for marrow space and the another one is
for<00:26:35.640><c> compressed</c><00:26:36.150><c> class</c><00:26:36.630><c> space</c><00:26:37.130><c> and</c><00:26:38.780><c> note</c><00:26:39.780><c> here</c>

00:26:40.100 --> 00:26:40.110 align:start position:0%
for compressed class space and note here
 

00:26:40.110 --> 00:26:43.280 align:start position:0%
for compressed class space and note here
that<00:26:40.140><c> you</c><00:26:40.830><c> know</c><00:26:40.950><c> the</c><00:26:41.100><c> committed</c><00:26:41.700><c> size</c><00:26:42.150><c> of</c><00:26:42.660><c> meta</c>

00:26:43.280 --> 00:26:43.290 align:start position:0%
that you know the committed size of meta
 

00:26:43.290 --> 00:26:47.990 align:start position:0%
that you know the committed size of meta
space<00:26:43.680><c> is</c><00:26:44.010><c> 4</c><00:26:44.550><c> 8</c><00:26:44.850><c> 6</c><00:26:45.510><c> 4</c><00:26:45.780><c> K</c><00:26:46.080><c> which</c><00:26:46.650><c> includes</c><00:26:47.610><c> the</c>

00:26:47.990 --> 00:26:48.000 align:start position:0%
space is 4 8 6 4 K which includes the
 

00:26:48.000 --> 00:26:50.330 align:start position:0%
space is 4 8 6 4 K which includes the
committed<00:26:48.480><c> size</c><00:26:48.750><c> of</c><00:26:49.080><c> compressed</c><00:26:49.620><c> class</c><00:26:49.980><c> space</c>

00:26:50.330 --> 00:26:50.340 align:start position:0%
committed size of compressed class space
 

00:26:50.340 --> 00:26:55.280 align:start position:0%
committed size of compressed class space
so<00:26:50.760><c> 512</c><00:26:51.570><c> K</c><00:26:51.960><c> is</c><00:26:52.320><c> not</c><00:26:52.890><c> you</c><00:26:53.580><c> know</c><00:26:53.700><c> a</c><00:26:54.290><c> separate</c>

00:26:55.280 --> 00:26:55.290 align:start position:0%
so 512 K is not you know a separate
 

00:26:55.290 --> 00:26:59.630 align:start position:0%
so 512 K is not you know a separate
space<00:26:55.770><c> it</c><00:26:56.100><c> is</c><00:26:56.340><c> included</c><00:26:57.090><c> in</c><00:26:57.120><c> 4</c><00:26:57.690><c> 8</c><00:26:57.990><c> 6</c><00:26:58.350><c> 4</c><00:26:58.620><c> k</c><00:26:58.920><c> for</c>

00:26:59.630 --> 00:26:59.640 align:start position:0%
space it is included in 4 8 6 4 k for
 

00:26:59.640 --> 00:27:05.000 align:start position:0%
space it is included in 4 8 6 4 k for
meta<00:27:00.030><c> space</c><00:27:03.170><c> diagnostic</c><00:27:04.170><c> data</c><00:27:04.320><c> collection</c>

00:27:05.000 --> 00:27:05.010 align:start position:0%
meta space diagnostic data collection
 

00:27:05.010 --> 00:27:06.920 align:start position:0%
meta space diagnostic data collection
and<00:27:05.220><c> analysis</c><00:27:05.880><c> for</c><00:27:06.060><c> permanent</c><00:27:06.450><c> generation</c>

00:27:06.920 --> 00:27:06.930 align:start position:0%
and analysis for permanent generation
 

00:27:06.930 --> 00:27:09.710 align:start position:0%
and analysis for permanent generation
and<00:27:07.110><c> meta</c><00:27:07.470><c> space</c><00:27:07.830><c> so</c><00:27:08.760><c> we</c><00:27:09.420><c> should</c><00:27:09.600><c> be</c>

00:27:09.710 --> 00:27:09.720 align:start position:0%
and meta space so we should be
 

00:27:09.720 --> 00:27:11.630 align:start position:0%
and meta space so we should be
collecting<00:27:10.170><c> GC</c><00:27:10.530><c> logs</c><00:27:10.770><c> and</c><00:27:11.130><c> those</c><00:27:11.400><c> can</c><00:27:11.610><c> be</c>

00:27:11.630 --> 00:27:11.640 align:start position:0%
collecting GC logs and those can be
 

00:27:11.640 --> 00:27:14.090 align:start position:0%
collecting GC logs and those can be
collected<00:27:12.210><c> with</c><00:27:12.420><c> verbose</c><00:27:13.020><c> class</c><00:27:13.440><c> or</c><00:27:13.890><c> trace</c>

00:27:14.090 --> 00:27:14.100 align:start position:0%
collected with verbose class or trace
 

00:27:14.100 --> 00:27:16.220 align:start position:0%
collected with verbose class or trace
class<00:27:14.400><c> loading</c><00:27:14.850><c> trace</c><00:27:15.090><c> class</c><00:27:15.450><c> unloading</c>

00:27:16.220 --> 00:27:16.230 align:start position:0%
class loading trace class unloading
 

00:27:16.230 --> 00:27:18.890 align:start position:0%
class loading trace class unloading
options<00:27:16.730><c> we</c><00:27:17.730><c> can</c><00:27:17.880><c> collect</c><00:27:18.240><c> it</c><00:27:18.420><c> we</c><00:27:18.660><c> should</c><00:27:18.810><c> be</c>

00:27:18.890 --> 00:27:18.900 align:start position:0%
options we can collect it we should be
 

00:27:18.900 --> 00:27:22.280 align:start position:0%
options we can collect it we should be
collecting<00:27:19.320><c> data</c><00:27:19.470><c> with</c><00:27:19.860><c> J</c><00:27:20.280><c> map</c><00:27:20.600><c> -</c><00:27:21.600><c> pom</c><00:27:21.960><c> stat</c>

00:27:22.280 --> 00:27:22.290 align:start position:0%
collecting data with J map - pom stat
 

00:27:22.290 --> 00:27:26.510 align:start position:0%
collecting data with J map - pom stat
for<00:27:22.890><c> JDK</c><00:27:23.700><c> is</c><00:27:23.760><c> up</c><00:27:23.940><c> to</c><00:27:24.090><c> JDK</c><00:27:24.420><c> 7</c><00:27:24.810><c> and</c><00:27:24.960><c> J</c><00:27:25.440><c> map</c><00:27:25.680><c> -</c><00:27:26.010><c> CL</c>

00:27:26.510 --> 00:27:26.520 align:start position:0%
for JDK is up to JDK 7 and J map - CL
 

00:27:26.520 --> 00:27:30.440 align:start position:0%
for JDK is up to JDK 7 and J map - CL
start<00:27:26.910><c> for</c><00:27:27.210><c> JDK</c><00:27:27.600><c> 8</c><00:27:27.780><c> onwards</c><00:27:28.470><c> and</c><00:27:29.000><c> he</c><00:27:30.000><c> prompts</c>

00:27:30.440 --> 00:27:30.450 align:start position:0%
start for JDK 8 onwards and he prompts
 

00:27:30.450 --> 00:27:33.650 align:start position:0%
start for JDK 8 onwards and he prompts
help<00:27:30.750><c> in</c><00:27:31.040><c> diagnosing</c><00:27:32.040><c> or</c><00:27:32.760><c> investigating</c>

00:27:33.650 --> 00:27:33.660 align:start position:0%
help in diagnosing or investigating
 

00:27:33.660 --> 00:27:35.570 align:start position:0%
help in diagnosing or investigating
permanent<00:27:34.500><c> generation</c><00:27:34.950><c> on</c><00:27:35.040><c> meta</c><00:27:35.220><c> space</c>

00:27:35.570 --> 00:27:35.580 align:start position:0%
permanent generation on meta space
 

00:27:35.580 --> 00:27:40.280 align:start position:0%
permanent generation on meta space
related<00:27:36.210><c> issues</c><00:27:36.540><c> as</c><00:27:36.780><c> well</c><00:27:37.460><c> and</c><00:27:38.630><c> JDK</c><00:27:39.630><c> 8</c><00:27:39.930><c> onwards</c>

00:27:40.280 --> 00:27:40.290 align:start position:0%
related issues as well and JDK 8 onwards
 

00:27:40.290 --> 00:27:42.530 align:start position:0%
related issues as well and JDK 8 onwards
class<00:27:40.920><c> statistics</c><00:27:41.520><c> information</c><00:27:42.210><c> can</c><00:27:42.420><c> be</c>

00:27:42.530 --> 00:27:42.540 align:start position:0%
class statistics information can be
 

00:27:42.540 --> 00:27:46.130 align:start position:0%
class statistics information can be
collected<00:27:42.780><c> with</c><00:27:43.140><c> J</c><00:27:43.440><c> command</c><00:27:44.240><c> GC</c><00:27:45.240><c> dot</c><00:27:45.480><c> class</c>

00:27:46.130 --> 00:27:46.140 align:start position:0%
collected with J command GC dot class
 

00:27:46.140 --> 00:27:53.450 align:start position:0%
collected with J command GC dot class
underscore<00:27:46.200><c> stats</c><00:27:47.210><c> command</c><00:27:50.090><c> so</c><00:27:51.980><c> you</c><00:27:52.980><c> know</c>

00:27:53.450 --> 00:27:53.460 align:start position:0%
underscore stats command so you know
 

00:27:53.460 --> 00:27:56.030 align:start position:0%
underscore stats command so you know
while<00:27:53.820><c> investigating</c><00:27:54.540><c> the</c><00:27:54.750><c> classes</c><00:27:55.590><c> or</c><00:27:55.800><c> class</c>

00:27:56.030 --> 00:27:56.040 align:start position:0%
while investigating the classes or class
 

00:27:56.040 --> 00:27:58.520 align:start position:0%
while investigating the classes or class
loader<00:27:56.400><c> related</c><00:27:56.970><c> memory</c><00:27:57.180><c> problems</c><00:27:57.810><c> we</c><00:27:58.050><c> should</c>

00:27:58.520 --> 00:27:58.530 align:start position:0%
loader related memory problems we should
 

00:27:58.530 --> 00:28:00.650 align:start position:0%
loader related memory problems we should
we<00:27:58.770><c> need</c><00:27:59.190><c> to</c><00:27:59.340><c> make</c><00:27:59.520><c> sure</c><00:27:59.760><c> that</c><00:28:00.030><c> the</c><00:28:00.360><c> classes</c>

00:28:00.650 --> 00:28:00.660 align:start position:0%
we need to make sure that the classes
 

00:28:00.660 --> 00:28:03.500 align:start position:0%
we need to make sure that the classes
are<00:28:01.080><c> getting</c><00:28:01.470><c> unloaded</c><00:28:01.860><c> make</c><00:28:02.580><c> sure</c><00:28:02.760><c> we</c><00:28:03.030><c> you</c>

00:28:03.500 --> 00:28:03.510 align:start position:0%
are getting unloaded make sure we you
 

00:28:03.510 --> 00:28:07.280 align:start position:0%
are getting unloaded make sure we you
know<00:28:03.630><c> there</c><00:28:03.900><c> the</c><00:28:04.380><c> option</c><00:28:05.010><c> -</c><00:28:05.550><c> X</c><00:28:05.790><c> no</c><00:28:06.240><c> class</c><00:28:06.570><c> GC</c><00:28:07.110><c> is</c>

00:28:07.280 --> 00:28:07.290 align:start position:0%
know there the option - X no class GC is
 

00:28:07.290 --> 00:28:10.010 align:start position:0%
know there the option - X no class GC is
not<00:28:07.530><c> in</c><00:28:07.860><c> use</c><00:28:08.070><c> if</c><00:28:08.310><c> it</c><00:28:08.490><c> is</c><00:28:08.640><c> there</c><00:28:08.880><c> your</c><00:28:09.480><c> classes</c>

00:28:10.010 --> 00:28:10.020 align:start position:0%
not in use if it is there your classes
 

00:28:10.020 --> 00:28:11.510 align:start position:0%
not in use if it is there your classes
will<00:28:10.230><c> not</c><00:28:10.440><c> get</c><00:28:10.740><c> unloaded</c>

00:28:11.510 --> 00:28:11.520 align:start position:0%
will not get unloaded
 

00:28:11.520 --> 00:28:15.800 align:start position:0%
will not get unloaded
you<00:28:11.970><c> know</c><00:28:12.650><c> the</c><00:28:13.650><c> JVM</c><00:28:14.160><c> would</c><00:28:15.090><c> keep</c><00:28:15.390><c> loading</c>

00:28:15.800 --> 00:28:15.810 align:start position:0%
you know the JVM would keep loading
 

00:28:15.810 --> 00:28:18.560 align:start position:0%
you know the JVM would keep loading
classes<00:28:16.560><c> and</c><00:28:16.890><c> none</c><00:28:17.670><c> of</c><00:28:17.700><c> the</c><00:28:17.940><c> classes</c><00:28:18.360><c> get</c>

00:28:18.560 --> 00:28:18.570 align:start position:0%
classes and none of the classes get
 

00:28:18.570 --> 00:28:21.920 align:start position:0%
classes and none of the classes get
unloaded<00:28:19.050><c> you</c><00:28:19.950><c> will</c><00:28:20.190><c> bloat</c><00:28:20.730><c> the</c><00:28:21.060><c> the</c><00:28:21.720><c> meta</c>

00:28:21.920 --> 00:28:21.930 align:start position:0%
unloaded you will bloat the the meta
 

00:28:21.930 --> 00:28:24.890 align:start position:0%
unloaded you will bloat the the meta
space<00:28:22.230><c> or</c><00:28:22.590><c> permanent</c><00:28:23.040><c> generation</c><00:28:23.600><c> usage</c><00:28:24.600><c> and</c>

00:28:24.890 --> 00:28:24.900 align:start position:0%
space or permanent generation usage and
 

00:28:24.900 --> 00:28:28.370 align:start position:0%
space or permanent generation usage and
ensure<00:28:25.830><c> that</c><00:28:25.860><c> CMS</c><00:28:26.670><c> class</c><00:28:27.060><c> unloading</c><00:28:27.780><c> enabled</c>

00:28:28.370 --> 00:28:28.380 align:start position:0%
ensure that CMS class unloading enabled
 

00:28:28.380 --> 00:28:32.660 align:start position:0%
ensure that CMS class unloading enabled
option<00:28:28.940><c> is</c><00:28:29.940><c> on</c><00:28:30.330><c> when</c><00:28:30.750><c> using</c><00:28:30.930><c> CMS</c><00:28:31.530><c> on</c><00:28:31.770><c> Java</c><00:28:32.070><c> 6</c><00:28:32.400><c> or</c>

00:28:32.660 --> 00:28:32.670 align:start position:0%
option is on when using CMS on Java 6 or
 

00:28:32.670 --> 00:28:34.040 align:start position:0%
option is on when using CMS on Java 6 or
Java<00:28:32.910><c> 7</c><00:28:33.240><c> -</c>

00:28:34.040 --> 00:28:34.050 align:start position:0%
Java 7 -
 

00:28:34.050 --> 00:28:36.530 align:start position:0%
Java 7 -
sure<00:28:34.290><c> that</c><00:28:34.650><c> classes</c><00:28:35.640><c> are</c><00:28:35.730><c> getting</c><00:28:35.910><c> unloaded</c>

00:28:36.530 --> 00:28:36.540 align:start position:0%
sure that classes are getting unloaded
 

00:28:36.540 --> 00:28:39.050 align:start position:0%
sure that classes are getting unloaded
during<00:28:37.530><c> concurrent</c><00:28:38.070><c> marking</c><00:28:38.580><c> cycles</c>

00:28:39.050 --> 00:28:39.060 align:start position:0%
during concurrent marking cycles
 

00:28:39.060 --> 00:28:41.210 align:start position:0%
during concurrent marking cycles
otherwise<00:28:39.480><c> they</c><00:28:39.720><c> get</c><00:28:39.930><c> unloaded</c><00:28:40.350><c> only</c><00:28:40.830><c> at</c><00:28:40.980><c> full</c>

00:28:41.210 --> 00:28:41.220 align:start position:0%
otherwise they get unloaded only at full
 

00:28:41.220 --> 00:28:47.690 align:start position:0%
otherwise they get unloaded only at full
GCS<00:28:42.380><c> so</c><00:28:43.380><c> here</c><00:28:44.090><c> this</c><00:28:45.090><c> is</c><00:28:45.150><c> the</c><00:28:45.510><c> logs</c><00:28:46.700><c> collected</c>

00:28:47.690 --> 00:28:47.700 align:start position:0%
GCS so here this is the logs collected
 

00:28:47.700 --> 00:28:50.300 align:start position:0%
GCS so here this is the logs collected
with<00:28:47.850><c> -</c><00:28:48.210><c> for</c><00:28:48.390><c> both</c><00:28:48.540><c> class</c><00:28:48.900><c> and</c><00:28:49.230><c> these</c><00:28:49.830><c> logs</c><00:28:50.100><c> are</c>

00:28:50.300 --> 00:28:50.310 align:start position:0%
with - for both class and these logs are
 

00:28:50.310 --> 00:28:52.340 align:start position:0%
with - for both class and these logs are
important<00:28:50.850><c> to</c><00:28:51.000><c> tell</c><00:28:51.480><c> us</c>

00:28:52.340 --> 00:28:52.350 align:start position:0%
important to tell us
 

00:28:52.350 --> 00:28:53.660 align:start position:0%
important to tell us
you<00:28:52.560><c> know</c><00:28:52.650><c> if</c><00:28:52.830><c> the</c><00:28:52.980><c> classes</c><00:28:53.430><c> are</c><00:28:53.550><c> getting</c>

00:28:53.660 --> 00:28:53.670 align:start position:0%
you know if the classes are getting
 

00:28:53.670 --> 00:28:56.150 align:start position:0%
you know if the classes are getting
loaded<00:28:54.000><c> from</c><00:28:54.360><c> correct</c><00:28:54.720><c> package</c><00:28:55.320><c> or</c><00:28:55.530><c> jar</c><00:28:55.830><c> files</c>

00:28:56.150 --> 00:28:56.160 align:start position:0%
loaded from correct package or jar files
 

00:28:56.160 --> 00:28:59.900 align:start position:0%
loaded from correct package or jar files
and<00:28:56.460><c> if</c><00:28:57.150><c> they</c><00:28:57.390><c> are</c><00:28:57.600><c> getting</c><00:28:57.840><c> unloaded</c><00:28:58.620><c> when</c><00:28:59.130><c> we</c>

00:28:59.900 --> 00:28:59.910 align:start position:0%
and if they are getting unloaded when we
 

00:28:59.910 --> 00:29:06.320 align:start position:0%
and if they are getting unloaded when we
expect<00:29:00.510><c> them</c><00:29:00.750><c> to</c><00:29:03.260><c> so</c><00:29:04.260><c> in</c><00:29:04.410><c> this</c><00:29:04.670><c> specific</c><00:29:05.670><c> GC</c>

00:29:06.320 --> 00:29:06.330 align:start position:0%
expect them to so in this specific GC
 

00:29:06.330 --> 00:29:08.000 align:start position:0%
expect them to so in this specific GC
logs<00:29:06.570><c> entry</c><00:29:06.990><c> we</c><00:29:07.110><c> can</c><00:29:07.290><c> see</c><00:29:07.470><c> that</c><00:29:07.650><c> there</c><00:29:07.860><c> is</c><00:29:07.890><c> a</c>

00:29:08.000 --> 00:29:08.010 align:start position:0%
logs entry we can see that there is a
 

00:29:08.010 --> 00:29:11.930 align:start position:0%
logs entry we can see that there is a
full<00:29:08.340><c> GC</c><00:29:08.760><c> and</c><00:29:09.110><c> it</c><00:29:10.110><c> is</c><00:29:10.470><c> happening</c><00:29:11.220><c> because</c><00:29:11.400><c> meta</c>

00:29:11.930 --> 00:29:11.940 align:start position:0%
full GC and it is happening because meta
 

00:29:11.940 --> 00:29:16.400 align:start position:0%
full GC and it is happening because meta
space<00:29:12.330><c> has</c><00:29:12.660><c> reached</c><00:29:13.140><c> is</c><00:29:13.580><c> high-water</c><00:29:14.580><c> mark</c><00:29:15.410><c> and</c>

00:29:16.400 --> 00:29:16.410 align:start position:0%
space has reached is high-water mark and
 

00:29:16.410 --> 00:29:18.770 align:start position:0%
space has reached is high-water mark and
here<00:29:17.040><c> we</c><00:29:17.190><c> can</c><00:29:17.370><c> see</c><00:29:17.580><c> that</c><00:29:17.610><c> you</c><00:29:18.240><c> know</c><00:29:18.360><c> there</c><00:29:18.750><c> is</c>

00:29:18.770 --> 00:29:18.780 align:start position:0%
here we can see that you know there is
 

00:29:18.780 --> 00:29:21.980 align:start position:0%
here we can see that you know there is
enough<00:29:19.380><c> room</c><00:29:19.800><c> available</c><00:29:20.460><c> in</c><00:29:20.640><c> meta</c><00:29:20.940><c> space</c><00:29:21.330><c> meta</c>

00:29:21.980 --> 00:29:21.990 align:start position:0%
enough room available in meta space meta
 

00:29:21.990 --> 00:29:25.850 align:start position:0%
enough room available in meta space meta
space<00:29:22.850><c> capacities</c><00:29:23.850><c> at</c><00:29:24.120><c> 6</c><00:29:24.390><c> GB</c><00:29:24.810><c> but</c><00:29:25.170><c> its</c><00:29:25.380><c> usage</c>

00:29:25.850 --> 00:29:25.860 align:start position:0%
space capacities at 6 GB but its usage
 

00:29:25.860 --> 00:29:28.910 align:start position:0%
space capacities at 6 GB but its usage
is<00:29:26.040><c> only</c><00:29:26.250><c> at</c><00:29:26.520><c> 4</c><00:29:26.820><c> GB</c><00:29:27.270><c> and</c><00:29:27.600><c> it</c><00:29:27.810><c> is</c><00:29:27.960><c> still</c><00:29:28.260><c> you</c><00:29:28.800><c> know</c>

00:29:28.910 --> 00:29:28.920 align:start position:0%
is only at 4 GB and it is still you know
 

00:29:28.920 --> 00:29:31.370 align:start position:0%
is only at 4 GB and it is still you know
throwing<00:29:29.310><c> out</c><00:29:29.670><c> of</c><00:29:29.850><c> memory</c><00:29:30.090><c> error</c><00:29:30.390><c> if</c><00:29:30.720><c> you</c><00:29:31.200><c> look</c>

00:29:31.370 --> 00:29:31.380 align:start position:0%
throwing out of memory error if you look
 

00:29:31.380 --> 00:29:33.890 align:start position:0%
throwing out of memory error if you look
closely<00:29:31.740><c> the</c><00:29:32.250><c> out</c><00:29:32.430><c> of</c><00:29:32.640><c> memory</c><00:29:32.880><c> error</c><00:29:33.180><c> being</c>

00:29:33.890 --> 00:29:33.900 align:start position:0%
closely the out of memory error being
 

00:29:33.900 --> 00:29:36.950 align:start position:0%
closely the out of memory error being
thrown<00:29:34.200><c> is</c><00:29:34.500><c> for</c><00:29:34.740><c> compressed</c><00:29:35.280><c> class</c><00:29:35.670><c> space</c><00:29:36.120><c> not</c>

00:29:36.950 --> 00:29:36.960 align:start position:0%
thrown is for compressed class space not
 

00:29:36.960 --> 00:29:40.160 align:start position:0%
thrown is for compressed class space not
for<00:29:37.290><c> meta</c><00:29:37.530><c> space</c><00:29:37.920><c> so</c><00:29:38.490><c> that</c><00:29:39.000><c> that</c><00:29:39.480><c> you</c><00:29:40.050><c> know</c>

00:29:40.160 --> 00:29:40.170 align:start position:0%
for meta space so that that you know
 

00:29:40.170 --> 00:29:43.130 align:start position:0%
for meta space so that that you know
separate<00:29:40.590><c> region</c><00:29:41.160><c> we</c><00:29:41.630><c> talked</c><00:29:42.630><c> about</c><00:29:42.780><c> in</c>

00:29:43.130 --> 00:29:43.140 align:start position:0%
separate region we talked about in
 

00:29:43.140 --> 00:29:45.920 align:start position:0%
separate region we talked about in
previous<00:29:43.380><c> slides</c><00:29:44.060><c> the</c><00:29:45.060><c> compressed</c><00:29:45.600><c> class</c>

00:29:45.920 --> 00:29:45.930 align:start position:0%
previous slides the compressed class
 

00:29:45.930 --> 00:29:47.660 align:start position:0%
previous slides the compressed class
space<00:29:46.290><c> which</c><00:29:46.560><c> is</c><00:29:46.710><c> part</c><00:29:46.950><c> of</c><00:29:47.040><c> meta</c><00:29:47.280><c> space</c>

00:29:47.660 --> 00:29:47.670 align:start position:0%
space which is part of meta space
 

00:29:47.670 --> 00:29:50.060 align:start position:0%
space which is part of meta space
doesn't<00:29:48.420><c> have</c><00:29:48.630><c> enough</c><00:29:49.050><c> room</c><00:29:49.230><c> to</c><00:29:49.410><c> load</c><00:29:49.800><c> more</c>

00:29:50.060 --> 00:29:50.070 align:start position:0%
doesn't have enough room to load more
 

00:29:50.070 --> 00:29:53.150 align:start position:0%
doesn't have enough room to load more
classes<00:29:50.670><c> so</c><00:29:51.120><c> we</c><00:29:51.150><c> should</c><00:29:51.570><c> be</c><00:29:51.720><c> using</c><00:29:52.110><c> you</c><00:29:53.070><c> know</c>

00:29:53.150 --> 00:29:53.160 align:start position:0%
classes so we should be using you know
 

00:29:53.160 --> 00:29:55.130 align:start position:0%
classes so we should be using you know
compressed<00:29:53.550><c> class</c><00:29:53.790><c> space</c><00:29:54.030><c> size</c><00:29:54.300><c> option</c><00:29:54.930><c> to</c>

00:29:55.130 --> 00:29:55.140 align:start position:0%
compressed class space size option to
 

00:29:55.140 --> 00:29:59.240 align:start position:0%
compressed class space size option to
configure<00:29:55.770><c> the</c><00:29:57.020><c> size</c><00:29:58.020><c> for</c><00:29:58.440><c> compressed</c><00:29:59.010><c> class</c>

00:29:59.240 --> 00:29:59.250 align:start position:0%
configure the size for compressed class
 

00:29:59.250 --> 00:30:05.240 align:start position:0%
configure the size for compressed class
space<00:30:01.160><c> we</c><00:30:02.160><c> can</c><00:30:02.750><c> see</c><00:30:03.750><c> class</c><00:30:04.290><c> loader</c><00:30:04.590><c> statistics</c>

00:30:05.240 --> 00:30:05.250 align:start position:0%
space we can see class loader statistics
 

00:30:05.250 --> 00:30:08.360 align:start position:0%
space we can see class loader statistics
collected<00:30:05.550><c> with</c><00:30:06.000><c> the</c><00:30:06.210><c> palm</c><00:30:06.600><c> stat</c><00:30:06.990><c> the</c><00:30:07.830><c> JDK</c><00:30:08.310><c> is</c>

00:30:08.360 --> 00:30:08.370 align:start position:0%
collected with the palm stat the JDK is
 

00:30:08.370 --> 00:30:11.960 align:start position:0%
collected with the palm stat the JDK is
you<00:30:09.120><c> know</c><00:30:09.350><c> up</c><00:30:10.350><c> to</c><00:30:10.560><c> JDK</c><00:30:11.070><c> 7</c><00:30:11.430><c> which</c><00:30:11.670><c> have</c><00:30:11.940><c> a</c>

00:30:11.960 --> 00:30:11.970 align:start position:0%
you know up to JDK 7 which have a
 

00:30:11.970 --> 00:30:16.070 align:start position:0%
you know up to JDK 7 which have a
permanent<00:30:12.450><c> generation</c><00:30:13.580><c> and</c><00:30:14.600><c> JDK</c><00:30:15.600><c> 8</c><00:30:15.630><c> onwards</c>

00:30:16.070 --> 00:30:16.080 align:start position:0%
permanent generation and JDK 8 onwards
 

00:30:16.080 --> 00:30:20.380 align:start position:0%
permanent generation and JDK 8 onwards
we<00:30:16.590><c> can</c><00:30:16.770><c> use</c><00:30:17.040><c> J</c><00:30:17.670><c> map</c><00:30:17.970><c> there</c><00:30:18.480><c> are</c><00:30:18.510><c> CL</c><00:30:19.050><c> stats</c>

00:30:20.380 --> 00:30:20.390 align:start position:0%
we can use J map there are CL stats
 

00:30:20.390 --> 00:30:23.030 align:start position:0%
we can use J map there are CL stats
option<00:30:21.390><c> to</c><00:30:21.570><c> collect</c><00:30:21.900><c> class</c><00:30:22.410><c> loader</c><00:30:22.680><c> stressed</c>

00:30:23.030 --> 00:30:23.040 align:start position:0%
option to collect class loader stressed
 

00:30:23.040 --> 00:30:25.750 align:start position:0%
option to collect class loader stressed
statistics<00:30:23.790><c> so</c><00:30:24.210><c> class</c><00:30:24.420><c> loader</c><00:30:24.690><c> statistics</c><00:30:25.320><c> is</c>

00:30:25.750 --> 00:30:25.760 align:start position:0%
statistics so class loader statistics is
 

00:30:25.760 --> 00:30:28.100 align:start position:0%
statistics so class loader statistics is
important<00:30:26.760><c> because</c><00:30:27.090><c> it</c><00:30:27.420><c> gives</c><00:30:27.660><c> us</c>

00:30:28.100 --> 00:30:28.110 align:start position:0%
important because it gives us
 

00:30:28.110 --> 00:30:30.470 align:start position:0%
important because it gives us
information<00:30:28.320><c> about</c><00:30:28.860><c> the</c><00:30:29.820><c> class</c><00:30:30.240><c> loader</c>

00:30:30.470 --> 00:30:30.480 align:start position:0%
information about the class loader
 

00:30:30.480 --> 00:30:33.080 align:start position:0%
information about the class loader
instances<00:30:31.260><c> available</c><00:30:32.070><c> and</c><00:30:32.250><c> the</c><00:30:32.550><c> classes</c>

00:30:33.080 --> 00:30:33.090 align:start position:0%
instances available and the classes
 

00:30:33.090 --> 00:30:35.690 align:start position:0%
instances available and the classes
loaded<00:30:33.600><c> by</c><00:30:33.780><c> them</c><00:30:34.050><c> whether</c><00:30:34.560><c> these</c><00:30:35.160><c> classes</c>

00:30:35.690 --> 00:30:35.700 align:start position:0%
loaded by them whether these classes
 

00:30:35.700 --> 00:30:37.910 align:start position:0%
loaded by them whether these classes
class<00:30:36.120><c> loaders</c><00:30:36.510><c> are</c><00:30:36.690><c> alive</c><00:30:37.080><c> or</c><00:30:37.410><c> dead</c><00:30:37.650><c> in</c>

00:30:37.910 --> 00:30:37.920 align:start position:0%
class loaders are alive or dead in
 

00:30:37.920 --> 00:30:40.820 align:start position:0%
class loaders are alive or dead in
memory<00:30:38.250><c> or</c><00:30:38.630><c> you</c><00:30:39.630><c> know</c><00:30:39.750><c> the</c><00:30:39.990><c> the</c><00:30:40.440><c> number</c><00:30:40.710><c> of</c>

00:30:40.820 --> 00:30:40.830 align:start position:0%
memory or you know the the number of
 

00:30:40.830 --> 00:30:42.890 align:start position:0%
memory or you know the the number of
classes<00:30:41.310><c> loaded</c><00:30:41.610><c> by</c><00:30:41.730><c> them</c><00:30:42.000><c> or</c><00:30:42.240><c> the</c><00:30:42.630><c> bytes</c>

00:30:42.890 --> 00:30:42.900 align:start position:0%
classes loaded by them or the bytes
 

00:30:42.900 --> 00:30:46.580 align:start position:0%
classes loaded by them or the bytes
occupied<00:30:43.650><c> by</c><00:30:43.920><c> those</c><00:30:44.130><c> classes</c><00:30:44.760><c> in</c><00:30:44.970><c> Metis</c><00:30:45.300><c> P</c>

00:30:46.580 --> 00:30:46.590 align:start position:0%
occupied by those classes in Metis P
 

00:30:46.590 --> 00:30:50.570 align:start position:0%
occupied by those classes in Metis P
permanent<00:30:47.460><c> generation</c><00:30:48.740><c> so</c><00:30:49.740><c> heap</c><00:30:49.950><c> dumps</c><00:30:50.310><c> help</c>

00:30:50.570 --> 00:30:50.580 align:start position:0%
permanent generation so heap dumps help
 

00:30:50.580 --> 00:30:52.640 align:start position:0%
permanent generation so heap dumps help
in<00:30:50.850><c> this</c><00:30:51.030><c> case</c><00:30:51.270><c> as</c><00:30:51.570><c> well</c><00:30:51.780><c> we</c><00:30:52.320><c> should</c><00:30:52.500><c> be</c>

00:30:52.640 --> 00:30:52.650 align:start position:0%
in this case as well we should be
 

00:30:52.650 --> 00:30:54.590 align:start position:0%
in this case as well we should be
looking<00:30:52.980><c> for</c><00:30:53.010><c> classes</c><00:30:53.700><c> that</c><00:30:53.940><c> should</c><00:30:54.210><c> have</c>

00:30:54.590 --> 00:30:54.600 align:start position:0%
looking for classes that should have
 

00:30:54.600 --> 00:30:57.770 align:start position:0%
looking for classes that should have
been<00:30:54.870><c> unloaded</c><00:30:55.680><c> and</c><00:30:55.800><c> eclipse</c><00:30:56.640><c> matt</c><00:30:56.940><c> has</c><00:30:57.750><c> a</c>

00:30:57.770 --> 00:30:57.780 align:start position:0%
been unloaded and eclipse matt has a
 

00:30:57.780 --> 00:30:59.600 align:start position:0%
been unloaded and eclipse matt has a
very<00:30:58.080><c> nice</c><00:30:58.290><c> feature</c><00:30:58.620><c> called</c><00:30:59.040><c> duplicate</c>

00:30:59.600 --> 00:30:59.610 align:start position:0%
very nice feature called duplicate
 

00:30:59.610 --> 00:31:02.420 align:start position:0%
very nice feature called duplicate
classes<00:31:00.120><c> which</c><00:31:00.330><c> can</c><00:31:00.540><c> show</c><00:31:00.780><c> us</c><00:31:01.020><c> the</c><00:31:01.430><c> duplicate</c>

00:31:02.420 --> 00:31:02.430 align:start position:0%
classes which can show us the duplicate
 

00:31:02.430 --> 00:31:04.430 align:start position:0%
classes which can show us the duplicate
classes<00:31:03.030><c> which</c><00:31:03.270><c> have</c><00:31:03.480><c> been</c><00:31:03.630><c> loaded</c><00:31:03.870><c> you</c><00:31:04.290><c> know</c>

00:31:04.430 --> 00:31:04.440 align:start position:0%
classes which have been loaded you know
 

00:31:04.440 --> 00:31:09.310 align:start position:0%
classes which have been loaded you know
by<00:31:04.590><c> multiple</c><00:31:06.470><c> instances</c><00:31:07.470><c> of</c><00:31:07.530><c> class</c><00:31:08.040><c> loaders</c>

00:31:09.310 --> 00:31:09.320 align:start position:0%
by multiple instances of class loaders
 

00:31:09.320 --> 00:31:12.950 align:start position:0%
by multiple instances of class loaders
here<00:31:10.320><c> in</c><00:31:11.040><c> this</c><00:31:11.220><c> case</c><00:31:11.550><c> you</c><00:31:12.330><c> know</c><00:31:12.420><c> this</c><00:31:12.570><c> example</c>

00:31:12.950 --> 00:31:12.960 align:start position:0%
here in this case you know this example
 

00:31:12.960 --> 00:31:16.160 align:start position:0%
here in this case you know this example
shows<00:31:13.580><c> duplicate</c><00:31:14.580><c> classes</c><00:31:15.150><c> and</c><00:31:15.360><c> here</c><00:31:15.870><c> we</c><00:31:16.020><c> can</c>

00:31:16.160 --> 00:31:16.170 align:start position:0%
shows duplicate classes and here we can
 

00:31:16.170 --> 00:31:19.270 align:start position:0%
shows duplicate classes and here we can
see<00:31:16.410><c> that</c><00:31:16.590><c> the</c><00:31:16.830><c> jacks</c><00:31:17.280><c> be</c><00:31:17.550><c> generated</c><00:31:18.120><c> classes</c>

00:31:19.270 --> 00:31:19.280 align:start position:0%
see that the jacks be generated classes
 

00:31:19.280 --> 00:31:21.830 align:start position:0%
see that the jacks be generated classes
there<00:31:20.280><c> are</c><00:31:20.490><c> multiple</c><00:31:20.970><c> instances</c><00:31:21.450><c> of</c><00:31:21.510><c> those</c>

00:31:21.830 --> 00:31:21.840 align:start position:0%
there are multiple instances of those
 

00:31:21.840 --> 00:31:23.750 align:start position:0%
there are multiple instances of those
classes<00:31:22.410><c> which</c><00:31:22.560><c> are</c><00:31:22.710><c> loaded</c><00:31:23.070><c> by</c><00:31:23.220><c> different</c>

00:31:23.750 --> 00:31:23.760 align:start position:0%
classes which are loaded by different
 

00:31:23.760 --> 00:31:26.300 align:start position:0%
classes which are loaded by different
class<00:31:24.000><c> loader</c><00:31:24.330><c> instances</c><00:31:25.020><c> and</c><00:31:25.290><c> in</c><00:31:25.890><c> this</c><00:31:26.040><c> case</c>

00:31:26.300 --> 00:31:26.310 align:start position:0%
class loader instances and in this case
 

00:31:26.310 --> 00:31:30.950 align:start position:0%
class loader instances and in this case
the<00:31:27.210><c> issue</c><00:31:27.660><c> was</c><00:31:28.130><c> you</c><00:31:29.130><c> know</c><00:31:29.220><c> we</c><00:31:29.370><c> had</c><00:31:29.750><c> the</c><00:31:30.750><c> the</c>

00:31:30.950 --> 00:31:30.960 align:start position:0%
the issue was you know we had the the
 

00:31:30.960 --> 00:31:33.200 align:start position:0%
the issue was you know we had the the
customer<00:31:31.410><c> who</c><00:31:31.560><c> reported</c><00:31:31.980><c> this</c><00:31:32.100><c> issue</c><00:31:32.310><c> they</c>

00:31:33.200 --> 00:31:33.210 align:start position:0%
customer who reported this issue they
 

00:31:33.210 --> 00:31:36.100 align:start position:0%
customer who reported this issue they
had<00:31:33.570><c> different</c><00:31:34.470><c> version</c><00:31:34.920><c> of</c><00:31:35.070><c> Jack's</c><00:31:35.520><c> B</c>

00:31:36.100 --> 00:31:36.110 align:start position:0%
had different version of Jack's B
 

00:31:36.110 --> 00:31:38.540 align:start position:0%
had different version of Jack's B
libraries<00:31:37.110><c> on</c><00:31:37.350><c> their</c><00:31:37.530><c> class</c><00:31:37.830><c> path</c><00:31:38.130><c> and</c><00:31:38.400><c> which</c>

00:31:38.540 --> 00:31:38.550 align:start position:0%
libraries on their class path and which
 

00:31:38.550 --> 00:31:42.170 align:start position:0%
libraries on their class path and which
was<00:31:38.730><c> causing</c><00:31:39.480><c> class</c><00:31:40.110><c> linking</c><00:31:40.710><c> errors</c><00:31:41.220><c> and</c>

00:31:42.170 --> 00:31:42.180 align:start position:0%
was causing class linking errors and
 

00:31:42.180 --> 00:31:45.380 align:start position:0%
was causing class linking errors and
that<00:31:42.750><c> that</c><00:31:43.200><c> led</c><00:31:43.530><c> to</c><00:31:43.800><c> loading</c><00:31:44.310><c> of</c><00:31:44.760><c> multiple</c>

00:31:45.380 --> 00:31:45.390 align:start position:0%
that that led to loading of multiple
 

00:31:45.390 --> 00:31:48.980 align:start position:0%
that that led to loading of multiple
classes<00:31:46.020><c> by</c><00:31:46.320><c> different</c><00:31:46.680><c> class</c><00:31:46.920><c> loaders</c><00:31:47.990><c> so</c>

00:31:48.980 --> 00:31:48.990 align:start position:0%
classes by different class loaders so
 

00:31:48.990 --> 00:31:52.250 align:start position:0%
classes by different class loaders so
you<00:31:49.620><c> know</c><00:31:49.740><c> duplicate</c><00:31:50.610><c> classes</c><00:31:51.090><c> can</c><00:31:51.360><c> give</c><00:31:52.110><c> us</c>

00:31:52.250 --> 00:31:52.260 align:start position:0%
you know duplicate classes can give us
 

00:31:52.260 --> 00:31:54.710 align:start position:0%
you know duplicate classes can give us
clues<00:31:52.530><c> where</c><00:31:53.280><c> we</c><00:31:53.490><c> should</c><00:31:53.670><c> be</c><00:31:53.820><c> looking</c><00:31:54.150><c> for</c><00:31:54.180><c> why</c>

00:31:54.710 --> 00:31:54.720 align:start position:0%
clues where we should be looking for why
 

00:31:54.720 --> 00:31:56.780 align:start position:0%
clues where we should be looking for why
these<00:31:55.020><c> classes</c><00:31:55.530><c> are</c><00:31:55.680><c> getting</c><00:31:56.010><c> you</c><00:31:56.760><c> know</c>

00:31:56.780 --> 00:31:56.790 align:start position:0%
these classes are getting you know
 

00:31:56.790 --> 00:32:01.130 align:start position:0%
these classes are getting you know
loaded<00:31:57.780><c> multiple</c><00:31:58.230><c> number</c><00:31:58.500><c> of</c><00:31:58.650><c> times</c><00:31:59.960><c> so</c><00:32:00.960><c> out</c>

00:32:01.130 --> 00:32:01.140 align:start position:0%
loaded multiple number of times so out
 

00:32:01.140 --> 00:32:04.700 align:start position:0%
loaded multiple number of times so out
of<00:32:01.170><c> memory</c><00:32:01.620><c> error</c><00:32:01.830><c> due</c><00:32:02.130><c> to</c><00:32:02.360><c> finalization</c><00:32:03.710><c> so</c>

00:32:04.700 --> 00:32:04.710 align:start position:0%
of memory error due to finalization so
 

00:32:04.710 --> 00:32:07.340 align:start position:0%
of memory error due to finalization so
as<00:32:04.890><c> we</c><00:32:05.100><c> all</c><00:32:05.130><c> know</c><00:32:05.720><c> finalization</c><00:32:06.720><c> is</c><00:32:06.960><c> a</c><00:32:06.990><c> feature</c>

00:32:07.340 --> 00:32:07.350 align:start position:0%
as we all know finalization is a feature
 

00:32:07.350 --> 00:32:11.300 align:start position:0%
as we all know finalization is a feature
in<00:32:07.910><c> Java</c><00:32:08.910><c> where</c><00:32:09.410><c> your</c><00:32:10.410><c> class</c><00:32:10.710><c> can</c><00:32:10.980><c> have</c><00:32:11.250><c> a</c>

00:32:11.300 --> 00:32:11.310 align:start position:0%
in Java where your class can have a
 

00:32:11.310 --> 00:32:13.850 align:start position:0%
in Java where your class can have a
finalized<00:32:11.910><c> method</c><00:32:12.330><c> and</c><00:32:12.540><c> instruct</c><00:32:13.050><c> JVM</c><00:32:13.560><c> that</c>

00:32:13.850 --> 00:32:13.860 align:start position:0%
finalized method and instruct JVM that
 

00:32:13.860 --> 00:32:16.270 align:start position:0%
finalized method and instruct JVM that
you<00:32:14.040><c> know</c><00:32:14.160><c> don't</c><00:32:14.400><c> collect</c><00:32:14.820><c> my</c><00:32:15.030><c> objects</c><00:32:15.660><c> until</c>

00:32:16.270 --> 00:32:16.280 align:start position:0%
you know don't collect my objects until
 

00:32:16.280 --> 00:32:21.160 align:start position:0%
you know don't collect my objects until
my<00:32:17.280><c> finalized</c><00:32:18.030><c> method</c><00:32:18.510><c> has</c><00:32:18.750><c> been</c><00:32:18.960><c> executed</c><00:32:20.120><c> so</c>

00:32:21.160 --> 00:32:21.170 align:start position:0%
my finalized method has been executed so
 

00:32:21.170 --> 00:32:25.420 align:start position:0%
my finalized method has been executed so
even<00:32:22.170><c> if</c><00:32:22.350><c> you're</c><00:32:22.730><c> even</c><00:32:23.730><c> if</c><00:32:23.940><c> the</c><00:32:24.270><c> objects</c><00:32:25.080><c> of</c>

00:32:25.420 --> 00:32:25.430 align:start position:0%
even if you're even if the objects of
 

00:32:25.430 --> 00:32:28.190 align:start position:0%
even if you're even if the objects of
offers<00:32:26.430><c> in</c><00:32:26.700><c> a</c><00:32:26.820><c> specific</c><00:32:27.030><c> class</c><00:32:27.630><c> which</c><00:32:27.930><c> has</c><00:32:27.960><c> a</c>

00:32:28.190 --> 00:32:28.200 align:start position:0%
offers in a specific class which has a
 

00:32:28.200 --> 00:32:30.650 align:start position:0%
offers in a specific class which has a
finalized<00:32:28.770><c> method</c><00:32:29.220><c> are</c><00:32:29.970><c> eligible</c><00:32:30.600><c> for</c>

00:32:30.650 --> 00:32:30.660 align:start position:0%
finalized method are eligible for
 

00:32:30.660 --> 00:32:33.020 align:start position:0%
finalized method are eligible for
collection<00:32:31.380><c> they</c><00:32:31.620><c> won't</c><00:32:31.920><c> be</c><00:32:32.070><c> collected</c><00:32:32.580><c> until</c>

00:32:33.020 --> 00:32:33.030 align:start position:0%
collection they won't be collected until
 

00:32:33.030 --> 00:32:36.140 align:start position:0%
collection they won't be collected until
finalizer<00:32:33.900><c> thread</c><00:32:34.380><c> has</c><00:32:34.710><c> the</c><00:32:34.980><c> has</c><00:32:35.610><c> the</c><00:32:35.820><c> chance</c>

00:32:36.140 --> 00:32:36.150 align:start position:0%
finalizer thread has the has the chance
 

00:32:36.150 --> 00:32:39.680 align:start position:0%
finalizer thread has the has the chance
to<00:32:36.740><c> to</c><00:32:37.740><c> execute</c><00:32:38.190><c> finalized</c><00:32:38.670><c> method</c><00:32:39.120><c> on</c><00:32:39.330><c> those</c>

00:32:39.680 --> 00:32:39.690 align:start position:0%
to to execute finalized method on those
 

00:32:39.690 --> 00:32:43.010 align:start position:0%
to to execute finalized method on those
instances<00:32:40.350><c> so</c><00:32:41.100><c> we</c><00:32:41.850><c> have</c><00:32:42.120><c> the</c><00:32:42.360><c> single</c><00:32:42.570><c> only</c>

00:32:43.010 --> 00:32:43.020 align:start position:0%
instances so we have the single only
 

00:32:43.020 --> 00:32:45.290 align:start position:0%
instances so we have the single only
thread<00:32:43.320><c> finalizer</c><00:32:43.920><c> thread</c><00:32:44.400><c> which</c><00:32:44.670><c> you</c><00:32:45.210><c> know</c>

00:32:45.290 --> 00:32:45.300 align:start position:0%
thread finalizer thread which you know
 

00:32:45.300 --> 00:32:48.530 align:start position:0%
thread finalizer thread which you know
has<00:32:45.510><c> the</c><00:32:45.720><c> responsibility</c><00:32:46.290><c> to</c><00:32:46.970><c> to</c><00:32:47.970><c> execute</c>

00:32:48.530 --> 00:32:48.540 align:start position:0%
has the responsibility to to execute
 

00:32:48.540 --> 00:32:51.320 align:start position:0%
has the responsibility to to execute
finalized<00:32:49.260><c> method</c><00:32:49.770><c> on</c><00:32:49.950><c> objects</c><00:32:50.910><c> which</c><00:32:51.180><c> are</c>

00:32:51.320 --> 00:32:51.330 align:start position:0%
finalized method on objects which are
 

00:32:51.330 --> 00:32:55.310 align:start position:0%
finalized method on objects which are
pending<00:32:51.630><c> finalization</c><00:32:52.730><c> and</c><00:32:53.730><c> if</c><00:32:54.120><c> this</c><00:32:54.360><c> single</c>

00:32:55.310 --> 00:32:55.320 align:start position:0%
pending finalization and if this single
 

00:32:55.320 --> 00:32:58.040 align:start position:0%
pending finalization and if this single
thread<00:32:55.650><c> is</c><00:32:55.890><c> not</c><00:32:56.100><c> able</c><00:32:56.400><c> to</c><00:32:56.550><c> keep</c><00:32:57.090><c> up</c><00:32:57.360><c> with</c><00:32:57.780><c> the</c>

00:32:58.040 --> 00:32:58.050 align:start position:0%
thread is not able to keep up with the
 

00:32:58.050 --> 00:32:58.620 align:start position:0%
thread is not able to keep up with the
width

00:32:58.620 --> 00:32:58.630 align:start position:0%
width
 

00:32:58.630 --> 00:33:00.590 align:start position:0%
width
Lord<00:32:58.840><c> that</c><00:32:59.050><c> has</c><00:32:59.260><c> been</c><00:32:59.470><c> added</c><00:32:59.680><c> to</c><00:32:59.830><c> its</c><00:33:00.100><c> queue</c>

00:33:00.590 --> 00:33:00.600 align:start position:0%
Lord that has been added to its queue
 

00:33:00.600 --> 00:33:03.990 align:start position:0%
Lord that has been added to its queue
you<00:33:01.600><c> know</c><00:33:01.690><c> if</c><00:33:01.810><c> it</c><00:33:01.930><c> lags</c><00:33:02.170><c> behind</c><00:33:02.610><c> then</c><00:33:03.610><c> we</c><00:33:03.820><c> will</c>

00:33:03.990 --> 00:33:04.000 align:start position:0%
you know if it lags behind then we will
 

00:33:04.000 --> 00:33:07.080 align:start position:0%
you know if it lags behind then we will
have<00:33:04.420><c> you</c><00:33:05.380><c> know</c><00:33:05.440><c> a</c><00:33:05.650><c> list</c><00:33:05.950><c> of</c><00:33:06.280><c> objects</c><00:33:06.880><c> which</c>

00:33:07.080 --> 00:33:07.090 align:start position:0%
have you know a list of objects which
 

00:33:07.090 --> 00:33:09.750 align:start position:0%
have you know a list of objects which
are<00:33:07.270><c> otherwise</c><00:33:07.600><c> garbage</c><00:33:08.320><c> and</c><00:33:08.680><c> if</c><00:33:09.160><c> if</c><00:33:09.520><c> they</c>

00:33:09.750 --> 00:33:09.760 align:start position:0%
are otherwise garbage and if if they
 

00:33:09.760 --> 00:33:11.520 align:start position:0%
are otherwise garbage and if if they
were<00:33:09.820><c> collected</c><00:33:10.540><c> we</c><00:33:10.780><c> would</c><00:33:10.990><c> have</c><00:33:11.260><c> room</c>

00:33:11.520 --> 00:33:11.530 align:start position:0%
were collected we would have room
 

00:33:11.530 --> 00:33:14.040 align:start position:0%
were collected we would have room
available<00:33:12.160><c> in</c><00:33:12.310><c> Java</c><00:33:12.580><c> heap</c><00:33:12.940><c> or</c><00:33:13.210><c> you</c><00:33:13.930><c> know</c>

00:33:14.040 --> 00:33:14.050 align:start position:0%
available in Java heap or you know
 

00:33:14.050 --> 00:33:16.920 align:start position:0%
available in Java heap or you know
corresponding<00:33:14.770><c> room</c><00:33:14.980><c> in</c><00:33:15.250><c> native</c><00:33:15.640><c> memory</c><00:33:15.930><c> but</c>

00:33:16.920 --> 00:33:16.930 align:start position:0%
corresponding room in native memory but
 

00:33:16.930 --> 00:33:18.870 align:start position:0%
corresponding room in native memory but
they<00:33:17.140><c> are</c><00:33:17.380><c> still</c><00:33:17.650><c> there</c><00:33:17.710><c> because</c><00:33:18.370><c> their</c>

00:33:18.870 --> 00:33:18.880 align:start position:0%
they are still there because their
 

00:33:18.880 --> 00:33:22.320 align:start position:0%
they are still there because their
finalize<00:33:19.390><c> method</c><00:33:19.660><c> needs</c><00:33:20.140><c> to</c><00:33:20.320><c> be</c><00:33:20.470><c> executed</c><00:33:21.330><c> so</c>

00:33:22.320 --> 00:33:22.330 align:start position:0%
finalize method needs to be executed so
 

00:33:22.330 --> 00:33:24.870 align:start position:0%
finalize method needs to be executed so
this<00:33:22.960><c> this</c><00:33:23.230><c> could</c><00:33:23.410><c> waste</c><00:33:23.710><c> a</c><00:33:24.130><c> lot</c><00:33:24.280><c> of</c><00:33:24.460><c> memory</c>

00:33:24.870 --> 00:33:24.880 align:start position:0%
this this could waste a lot of memory
 

00:33:24.880 --> 00:33:28.410 align:start position:0%
this this could waste a lot of memory
and<00:33:25.740><c> good</c><00:33:26.740><c> news</c><00:33:26.920><c> is</c><00:33:27.130><c> that</c><00:33:27.210><c> finalization</c><00:33:28.210><c> has</c>

00:33:28.410 --> 00:33:28.420 align:start position:0%
and good news is that finalization has
 

00:33:28.420 --> 00:33:30.660 align:start position:0%
and good news is that finalization has
been<00:33:28.600><c> deprecated</c><00:33:29.140><c> in</c><00:33:29.410><c> Java</c><00:33:29.710><c> 9</c><00:33:29.980><c> and</c><00:33:30.250><c> this</c><00:33:30.490><c> is</c>

00:33:30.660 --> 00:33:30.670 align:start position:0%
been deprecated in Java 9 and this is
 

00:33:30.670 --> 00:33:35.700 align:start position:0%
been deprecated in Java 9 and this is
the<00:33:30.790><c> CR</c><00:33:32.100><c> ID</c><00:33:33.100><c> for</c><00:33:33.760><c> that</c><00:33:34.150><c> change</c><00:33:34.630><c> which</c><00:33:34.960><c> you</c><00:33:35.590><c> know</c>

00:33:35.700 --> 00:33:35.710 align:start position:0%
the CR ID for that change which you know
 

00:33:35.710 --> 00:33:37.920 align:start position:0%
the CR ID for that change which you know
with<00:33:36.370><c> which</c><00:33:36.580><c> it</c><00:33:36.760><c> has</c><00:33:36.970><c> been</c><00:33:37.000><c> deprecated</c><00:33:37.720><c> in</c>

00:33:37.920 --> 00:33:37.930 align:start position:0%
with which it has been deprecated in
 

00:33:37.930 --> 00:33:40.470 align:start position:0%
with which it has been deprecated in
Java<00:33:38.170><c> 9</c><00:33:38.440><c> and</c><00:33:38.650><c> this</c><00:33:39.340><c> bug</c><00:33:39.580><c> report</c><00:33:39.610><c> actually</c>

00:33:40.470 --> 00:33:40.480 align:start position:0%
Java 9 and this bug report actually
 

00:33:40.480 --> 00:33:43.890 align:start position:0%
Java 9 and this bug report actually
talks<00:33:41.440><c> about</c><00:33:42.000><c> alternative</c><00:33:43.000><c> solutions</c><00:33:43.630><c> which</c>

00:33:43.890 --> 00:33:43.900 align:start position:0%
talks about alternative solutions which
 

00:33:43.900 --> 00:33:45.710 align:start position:0%
talks about alternative solutions which
should<00:33:44.170><c> be</c><00:33:44.320><c> used</c><00:33:44.590><c> rather</c><00:33:45.160><c> than</c><00:33:45.460><c> using</c>

00:33:45.710 --> 00:33:45.720 align:start position:0%
should be used rather than using
 

00:33:45.720 --> 00:33:50.460 align:start position:0%
should be used rather than using
finalization<00:33:48.330><c> so</c><00:33:49.330><c> which</c><00:33:49.510><c> diagnostic</c><00:33:50.170><c> data</c>

00:33:50.460 --> 00:33:50.470 align:start position:0%
finalization so which diagnostic data
 

00:33:50.470 --> 00:33:53.730 align:start position:0%
finalization so which diagnostic data
and<00:33:50.950><c> tools</c><00:33:51.340><c> can</c><00:33:51.640><c> help</c><00:33:51.670><c> us</c><00:33:52.120><c> we</c><00:33:52.690><c> can</c><00:33:52.930><c> see</c><00:33:53.200><c> objects</c>

00:33:53.730 --> 00:33:53.740 align:start position:0%
and tools can help us we can see objects
 

00:33:53.740 --> 00:33:55.950 align:start position:0%
and tools can help us we can see objects
pending<00:33:54.040><c> finalization</c><00:33:54.910><c> using</c><00:33:55.270><c> j</c><00:33:55.420><c> console</c>

00:33:55.950 --> 00:33:55.960 align:start position:0%
pending finalization using j console
 

00:33:55.960 --> 00:34:00.210 align:start position:0%
pending finalization using j console
using<00:33:56.950><c> j</c><00:33:57.280><c> map</c><00:33:57.520><c> -</c><00:33:57.970><c> finalizar</c><00:33:58.600><c> info</c><00:33:59.230><c> and</c><00:33:59.470><c> we</c><00:33:59.950><c> can</c>

00:34:00.210 --> 00:34:00.220 align:start position:0%
using j map - finalizar info and we can
 

00:34:00.220 --> 00:34:03.410 align:start position:0%
using j map - finalizar info and we can
see<00:34:00.490><c> you</c><00:34:01.120><c> know</c><00:34:01.240><c> information</c><00:34:02.170><c> about</c><00:34:02.650><c> finalized</c>

00:34:03.410 --> 00:34:03.420 align:start position:0%
see you know information about finalized
 

00:34:03.420 --> 00:34:07.080 align:start position:0%
see you know information about finalized
the<00:34:04.420><c> objects</c><00:34:04.930><c> pending</c><00:34:05.200><c> finalization</c><00:34:06.090><c> using</c>

00:34:07.080 --> 00:34:07.090 align:start position:0%
the objects pending finalization using
 

00:34:07.090 --> 00:34:11.040 align:start position:0%
the objects pending finalization using
heap<00:34:07.300><c> dumps</c><00:34:07.660><c> as</c><00:34:07.780><c> well</c><00:34:08.909><c> so</c><00:34:09.909><c> here</c><00:34:10.149><c> in</c><00:34:10.360><c> J</c><00:34:10.570><c> console</c>

00:34:11.040 --> 00:34:11.050 align:start position:0%
heap dumps as well so here in J console
 

00:34:11.050 --> 00:34:12.899 align:start position:0%
heap dumps as well so here in J console
we<00:34:11.230><c> can</c><00:34:11.260><c> see</c><00:34:11.649><c> that</c><00:34:11.950><c> you</c><00:34:12.490><c> know</c><00:34:12.580><c> pending</c>

00:34:12.899 --> 00:34:12.909 align:start position:0%
we can see that you know pending
 

00:34:12.909 --> 00:34:15.629 align:start position:0%
we can see that you know pending
finalization<00:34:13.750><c> objects</c><00:34:14.230><c> the</c><00:34:14.620><c> count</c><00:34:14.860><c> is</c><00:34:15.010><c> 0</c><00:34:15.340><c> here</c>

00:34:15.629 --> 00:34:15.639 align:start position:0%
finalization objects the count is 0 here
 

00:34:15.639 --> 00:34:18.060 align:start position:0%
finalization objects the count is 0 here
but<00:34:16.120><c> if</c><00:34:16.330><c> this</c><00:34:16.600><c> count</c><00:34:16.899><c> is</c><00:34:17.080><c> high</c><00:34:17.290><c> this</c><00:34:17.770><c> means</c>

00:34:18.060 --> 00:34:18.070 align:start position:0%
but if this count is high this means
 

00:34:18.070 --> 00:34:20.580 align:start position:0%
but if this count is high this means
that<00:34:18.639><c> the</c><00:34:18.790><c> objects</c><00:34:19.360><c> which</c><00:34:20.230><c> are</c><00:34:20.379><c> pending</c>

00:34:20.580 --> 00:34:20.590 align:start position:0%
that the objects which are pending
 

00:34:20.590 --> 00:34:23.250 align:start position:0%
that the objects which are pending
finalization<00:34:21.520><c> are</c><00:34:21.730><c> wasting</c><00:34:22.300><c> our</c><00:34:22.480><c> Java</c><00:34:22.990><c> heap</c>

00:34:23.250 --> 00:34:23.260 align:start position:0%
finalization are wasting our Java heap
 

00:34:23.260 --> 00:34:25.800 align:start position:0%
finalization are wasting our Java heap
memory<00:34:23.500><c> and</c><00:34:23.889><c> if</c><00:34:24.370><c> those</c><00:34:24.639><c> objects</c><00:34:25.240><c> are</c><00:34:25.389><c> holding</c>

00:34:25.800 --> 00:34:25.810 align:start position:0%
memory and if those objects are holding
 

00:34:25.810 --> 00:34:27.540 align:start position:0%
memory and if those objects are holding
something<00:34:26.050><c> in</c><00:34:26.350><c> native</c><00:34:26.770><c> memory</c><00:34:26.980><c> if</c><00:34:27.190><c> they</c><00:34:27.310><c> have</c>

00:34:27.540 --> 00:34:27.550 align:start position:0%
something in native memory if they have
 

00:34:27.550 --> 00:34:29.820 align:start position:0%
something in native memory if they have
allocated<00:34:28.179><c> buffers</c><00:34:28.540><c> in</c><00:34:28.720><c> native</c><00:34:29.020><c> memory</c><00:34:29.379><c> then</c>

00:34:29.820 --> 00:34:29.830 align:start position:0%
allocated buffers in native memory then
 

00:34:29.830 --> 00:34:32.600 align:start position:0%
allocated buffers in native memory then
those<00:34:30.070><c> resources</c><00:34:30.760><c> are</c><00:34:31.060><c> also</c><00:34:31.210><c> being</c><00:34:31.570><c> held</c><00:34:31.840><c> on</c>

00:34:32.600 --> 00:34:32.610 align:start position:0%
those resources are also being held on
 

00:34:32.610 --> 00:34:35.490 align:start position:0%
those resources are also being held on
because<00:34:33.610><c> of</c><00:34:33.850><c> the</c><00:34:34.720><c> objects</c><00:34:35.230><c> pending</c>

00:34:35.490 --> 00:34:35.500 align:start position:0%
because of the objects pending
 

00:34:35.500 --> 00:34:39.960 align:start position:0%
because of the objects pending
finalization<00:34:37.530><c> we</c><00:34:38.530><c> can</c><00:34:38.710><c> see</c><00:34:38.970><c> information</c>

00:34:39.960 --> 00:34:39.970 align:start position:0%
finalization we can see information
 

00:34:39.970 --> 00:34:43.860 align:start position:0%
finalization we can see information
about<00:34:40.330><c> finalized</c><00:34:40.990><c> errs</c><00:34:41.290><c> in</c><00:34:42.270><c> eclipse</c><00:34:43.270><c> matte</c><00:34:43.540><c> as</c>

00:34:43.860 --> 00:34:43.870 align:start position:0%
about finalized errs in eclipse matte as
 

00:34:43.870 --> 00:34:44.550 align:start position:0%
about finalized errs in eclipse matte as
well

00:34:44.550 --> 00:34:44.560 align:start position:0%
well
 

00:34:44.560 --> 00:34:50.820 align:start position:0%
well
by<00:34:45.220><c> analyzing</c><00:34:45.909><c> heap</c><00:34:46.120><c> dumps</c><00:34:48.149><c> so</c><00:34:49.290><c> code</c><00:34:50.290><c> cache</c><00:34:50.590><c> is</c>

00:34:50.820 --> 00:34:50.830 align:start position:0%
by analyzing heap dumps so code cache is
 

00:34:50.830 --> 00:34:52.980 align:start position:0%
by analyzing heap dumps so code cache is
full<00:34:50.860><c> and</c><00:34:51.310><c> compiler</c><00:34:51.700><c> has</c><00:34:51.850><c> been</c><00:34:52.300><c> disabled</c><00:34:52.810><c> so</c>

00:34:52.980 --> 00:34:52.990 align:start position:0%
full and compiler has been disabled so
 

00:34:52.990 --> 00:34:55.889 align:start position:0%
full and compiler has been disabled so
there<00:34:53.169><c> is</c><00:34:53.379><c> a</c><00:34:53.730><c> separate</c><00:34:54.730><c> memory</c><00:34:55.120><c> pool</c><00:34:55.389><c> in</c><00:34:55.720><c> the</c>

00:34:55.889 --> 00:34:55.899 align:start position:0%
there is a separate memory pool in the
 

00:34:55.899 --> 00:34:59.250 align:start position:0%
there is a separate memory pool in the
JVM<00:34:56.440><c> which</c><00:34:56.820><c> which</c><00:34:57.820><c> stores</c><00:34:58.240><c> the</c><00:34:58.570><c> compiled</c><00:34:59.080><c> code</c>

00:34:59.250 --> 00:34:59.260 align:start position:0%
JVM which which stores the compiled code
 

00:34:59.260 --> 00:35:02.490 align:start position:0%
JVM which which stores the compiled code
generated<00:34:59.830><c> by</c><00:34:59.980><c> JIT</c><00:35:00.460><c> compilers</c><00:35:01.120><c> and</c><00:35:01.500><c> this</c>

00:35:02.490 --> 00:35:02.500 align:start position:0%
generated by JIT compilers and this
 

00:35:02.500 --> 00:35:06.770 align:start position:0%
generated by JIT compilers and this
memory<00:35:02.740><c> pool</c><00:35:03.180><c> you</c><00:35:04.180><c> know</c><00:35:04.300><c> has</c><00:35:04.630><c> a</c><00:35:04.660><c> defined</c><00:35:05.290><c> size</c>

00:35:06.770 --> 00:35:06.780 align:start position:0%
memory pool you know has a defined size
 

00:35:06.780 --> 00:35:10.740 align:start position:0%
memory pool you know has a defined size
specified<00:35:07.780><c> size</c><00:35:08.160><c> and</c><00:35:09.160><c> that</c><00:35:09.460><c> it</c><00:35:09.970><c> can</c><00:35:10.210><c> also</c><00:35:10.420><c> get</c>

00:35:10.740 --> 00:35:10.750 align:start position:0%
specified size and that it can also get
 

00:35:10.750 --> 00:35:11.910 align:start position:0%
specified size and that it can also get
full<00:35:11.020><c> and</c><00:35:11.260><c> when</c>

00:35:11.910 --> 00:35:11.920 align:start position:0%
full and when
 

00:35:11.920 --> 00:35:14.760 align:start position:0%
full and when
this<00:35:12.160><c> memory</c><00:35:12.549><c> pool</c><00:35:12.819><c> becomes</c><00:35:13.089><c> full</c><00:35:13.660><c> you</c><00:35:14.589><c> would</c>

00:35:14.760 --> 00:35:14.770 align:start position:0%
this memory pool becomes full you would
 

00:35:14.770 --> 00:35:17.220 align:start position:0%
this memory pool becomes full you would
see<00:35:14.950><c> this</c><00:35:15.130><c> message</c><00:35:15.940><c> that</c><00:35:16.210><c> the</c><00:35:16.359><c> code</c><00:35:16.690><c> cache</c><00:35:16.960><c> is</c>

00:35:17.220 --> 00:35:17.230 align:start position:0%
see this message that the code cache is
 

00:35:17.230 --> 00:35:18.960 align:start position:0%
see this message that the code cache is
full<00:35:17.470><c> and</c><00:35:17.650><c> compiler</c><00:35:18.069><c> has</c><00:35:18.369><c> been</c><00:35:18.579><c> disabled</c>

00:35:18.960 --> 00:35:18.970 align:start position:0%
full and compiler has been disabled
 

00:35:18.970 --> 00:35:21.240 align:start position:0%
full and compiler has been disabled
though<00:35:19.420><c> you</c><00:35:19.480><c> won't</c><00:35:19.900><c> see</c><00:35:20.200><c> it's</c><00:35:20.530><c> just</c><00:35:20.859><c> a</c><00:35:21.010><c> warning</c>

00:35:21.240 --> 00:35:21.250 align:start position:0%
though you won't see it's just a warning
 

00:35:21.250 --> 00:35:24.569 align:start position:0%
though you won't see it's just a warning
your<00:35:21.579><c> application</c><00:35:22.150><c> won't</c><00:35:22.299><c> exit</c><00:35:23.280><c> you</c><00:35:24.280><c> you</c>

00:35:24.569 --> 00:35:24.579 align:start position:0%
your application won't exit you you
 

00:35:24.579 --> 00:35:28.470 align:start position:0%
your application won't exit you you
won't<00:35:24.849><c> see</c><00:35:25.059><c> any</c><00:35:25.240><c> out</c><00:35:25.450><c> of</c><00:35:25.480><c> memory</c><00:35:26.020><c> error</c><00:35:27.480><c> but</c>

00:35:28.470 --> 00:35:28.480 align:start position:0%
won't see any out of memory error but
 

00:35:28.480 --> 00:35:31.260 align:start position:0%
won't see any out of memory error but
there<00:35:29.140><c> are</c><00:35:29.410><c> disadvantages</c><00:35:30.010><c> you</c><00:35:30.819><c> know</c><00:35:31.030><c> there</c>

00:35:31.260 --> 00:35:31.270 align:start position:0%
there are disadvantages you know there
 

00:35:31.270 --> 00:35:35.430 align:start position:0%
there are disadvantages you know there
are<00:35:31.510><c> performance</c><00:35:33.630><c> penalties</c><00:35:34.630><c> when</c><00:35:34.960><c> when</c><00:35:35.290><c> you</c>

00:35:35.430 --> 00:35:35.440 align:start position:0%
are performance penalties when when you
 

00:35:35.440 --> 00:35:37.620 align:start position:0%
are performance penalties when when you
or<00:35:35.650><c> when</c><00:35:35.799><c> you</c><00:35:35.920><c> see</c><00:35:36.099><c> this</c><00:35:36.280><c> message</c><00:35:37.119><c> in</c><00:35:37.569><c> your</c>

00:35:37.620 --> 00:35:37.630 align:start position:0%
or when you see this message in your
 

00:35:37.630 --> 00:35:40.620 align:start position:0%
or when you see this message in your
application<00:35:38.319><c> run</c><00:35:38.730><c> so</c><00:35:39.730><c> when</c><00:35:39.910><c> when</c><00:35:40.150><c> code</c><00:35:40.420><c> cache</c>

00:35:40.620 --> 00:35:40.630 align:start position:0%
application run so when when code cache
 

00:35:40.630 --> 00:35:43.020 align:start position:0%
application run so when when code cache
becomes<00:35:41.049><c> full</c><00:35:41.319><c> and</c><00:35:41.589><c> emergency</c><00:35:42.400><c> code</c><00:35:42.730><c> cache</c>

00:35:43.020 --> 00:35:43.030 align:start position:0%
becomes full and emergency code cache
 

00:35:43.030 --> 00:35:45.630 align:start position:0%
becomes full and emergency code cache
cleanup<00:35:43.750><c> is</c><00:35:44.230><c> invoked</c><00:35:44.799><c> which</c><00:35:45.099><c> actually</c>

00:35:45.630 --> 00:35:45.640 align:start position:0%
cleanup is invoked which actually
 

00:35:45.640 --> 00:35:48.240 align:start position:0%
cleanup is invoked which actually
discards<00:35:46.299><c> almost</c><00:35:46.809><c> half</c><00:35:47.140><c> of</c><00:35:47.470><c> the</c><00:35:47.710><c> compiled</c>

00:35:48.240 --> 00:35:48.250 align:start position:0%
discards almost half of the compiled
 

00:35:48.250 --> 00:35:50.940 align:start position:0%
discards almost half of the compiled
code<00:35:48.579><c> and</c><00:35:48.849><c> if</c><00:35:49.660><c> that</c><00:35:50.020><c> compile</c><00:35:50.500><c> code</c><00:35:50.770><c> is</c>

00:35:50.940 --> 00:35:50.950 align:start position:0%
code and if that compile code is
 

00:35:50.950 --> 00:35:56.280 align:start position:0%
code and if that compile code is
required<00:35:51.490><c> soon</c><00:35:52.030><c> after</c><00:35:52.630><c> you</c><00:35:53.140><c> know</c><00:35:54.240><c> soon</c><00:35:55.240><c> it</c><00:35:55.900><c> is</c>

00:35:56.280 --> 00:35:56.290 align:start position:0%
required soon after you know soon it is
 

00:35:56.290 --> 00:35:58.140 align:start position:0%
required soon after you know soon it is
discarded<00:35:56.710><c> then</c><00:35:57.069><c> the</c><00:35:57.160><c> compiler</c><00:35:57.430><c> has</c><00:35:57.609><c> to</c><00:35:57.819><c> work</c>

00:35:58.140 --> 00:35:58.150 align:start position:0%
discarded then the compiler has to work
 

00:35:58.150 --> 00:36:02.549 align:start position:0%
discarded then the compiler has to work
again<00:35:58.750><c> to</c><00:35:59.200><c> compile</c><00:36:00.099><c> those</c><00:36:00.670><c> methods</c><00:36:01.329><c> so</c><00:36:01.809><c> you</c>

00:36:02.549 --> 00:36:02.559 align:start position:0%
again to compile those methods so you
 

00:36:02.559 --> 00:36:05.039 align:start position:0%
again to compile those methods so you
would<00:36:03.069><c> have</c><00:36:03.280><c> performance</c><00:36:04.049><c> degradation</c>

00:36:05.039 --> 00:36:05.049 align:start position:0%
would have performance degradation
 

00:36:05.049 --> 00:36:07.849 align:start position:0%
would have performance degradation
because<00:36:05.710><c> your</c><00:36:06.220><c> your</c><00:36:06.670><c> compile</c><00:36:07.030><c> code</c><00:36:07.270><c> is</c><00:36:07.450><c> gone</c>

00:36:07.849 --> 00:36:07.859 align:start position:0%
because your your compile code is gone
 

00:36:07.859 --> 00:36:11.160 align:start position:0%
because your your compile code is gone
though<00:36:08.859><c> that</c><00:36:09.040><c> compiled</c><00:36:09.540><c> those</c><00:36:10.540><c> methods</c><00:36:11.109><c> will</c>

00:36:11.160 --> 00:36:11.170 align:start position:0%
though that compiled those methods will
 

00:36:11.170 --> 00:36:13.620 align:start position:0%
though that compiled those methods will
run<00:36:11.440><c> an</c><00:36:11.619><c> interpreted</c><00:36:12.160><c> mode</c><00:36:12.369><c> now</c><00:36:12.579><c> and</c><00:36:12.849><c> the</c>

00:36:13.620 --> 00:36:13.630 align:start position:0%
run an interpreted mode now and the
 

00:36:13.630 --> 00:36:16.039 align:start position:0%
run an interpreted mode now and the
compiler<00:36:14.230><c> will</c><00:36:14.589><c> take</c><00:36:14.799><c> resources</c><00:36:15.549><c> to</c>

00:36:16.039 --> 00:36:16.049 align:start position:0%
compiler will take resources to
 

00:36:16.049 --> 00:36:20.190 align:start position:0%
compiler will take resources to
recompile<00:36:17.049><c> those</c><00:36:17.410><c> methods</c><00:36:17.980><c> so</c><00:36:18.549><c> the</c><00:36:18.940><c> we</c><00:36:19.359><c> should</c>

00:36:20.190 --> 00:36:20.200 align:start position:0%
recompile those methods so the we should
 

00:36:20.200 --> 00:36:22.920 align:start position:0%
recompile those methods so the we should
make<00:36:20.410><c> efforts</c><00:36:20.619><c> to</c><00:36:21.130><c> avoid</c><00:36:21.549><c> this</c><00:36:22.119><c> situation</c><00:36:22.750><c> and</c>

00:36:22.920 --> 00:36:22.930 align:start position:0%
make efforts to avoid this situation and
 

00:36:22.930 --> 00:36:25.049 align:start position:0%
make efforts to avoid this situation and
we<00:36:23.650><c> should</c><00:36:23.799><c> ensure</c><00:36:24.130><c> that</c><00:36:24.190><c> the</c><00:36:24.520><c> code</c><00:36:24.730><c> cache</c>

00:36:25.049 --> 00:36:25.059 align:start position:0%
we should ensure that the code cache
 

00:36:25.059 --> 00:36:27.480 align:start position:0%
we should ensure that the code cache
size<00:36:25.510><c> is</c><00:36:25.930><c> sufficient</c><00:36:26.530><c> enough</c><00:36:26.710><c> to</c><00:36:26.950><c> hold</c><00:36:27.309><c> our</c>

00:36:27.480 --> 00:36:27.490 align:start position:0%
size is sufficient enough to hold our
 

00:36:27.490 --> 00:36:29.579 align:start position:0%
size is sufficient enough to hold our
compiled<00:36:28.000><c> code</c><00:36:28.210><c> and</c><00:36:28.510><c> there</c><00:36:29.200><c> is</c><00:36:29.290><c> an</c><00:36:29.380><c> option</c>

00:36:29.579 --> 00:36:29.589 align:start position:0%
compiled code and there is an option
 

00:36:29.589 --> 00:36:32.789 align:start position:0%
compiled code and there is an option
reserved<00:36:30.220><c> code</c><00:36:30.579><c> cache</c><00:36:30.849><c> size</c><00:36:31.410><c> using</c><00:36:32.410><c> which</c><00:36:32.589><c> we</c>

00:36:32.789 --> 00:36:32.799 align:start position:0%
reserved code cache size using which we
 

00:36:32.799 --> 00:36:37.500 align:start position:0%
reserved code cache size using which we
can<00:36:33.040><c> configure</c><00:36:33.579><c> our</c><00:36:34.000><c> code</c><00:36:34.540><c> cache</c><00:36:34.750><c> size</c><00:36:36.359><c> so</c><00:36:37.359><c> out</c>

00:36:37.500 --> 00:36:37.510 align:start position:0%
can configure our code cache size so out
 

00:36:37.510 --> 00:36:41.309 align:start position:0%
can configure our code cache size so out
of<00:36:37.750><c> memory</c><00:36:38.470><c> error</c><00:36:38.770><c> for</c><00:36:39.099><c> native</c><00:36:39.579><c> memory</c><00:36:40.319><c> so</c>

00:36:41.309 --> 00:36:41.319 align:start position:0%
of memory error for native memory so
 

00:36:41.319 --> 00:36:44.280 align:start position:0%
of memory error for native memory so
these<00:36:41.530><c> two</c><00:36:41.770><c> examples</c><00:36:41.920><c> show</c><00:36:42.609><c> that</c><00:36:43.260><c> JVM</c><00:36:44.260><c> is</c>

00:36:44.280 --> 00:36:44.290 align:start position:0%
these two examples show that JVM is
 

00:36:44.290 --> 00:36:48.990 align:start position:0%
these two examples show that JVM is
running<00:36:44.920><c> out</c><00:36:45.130><c> of</c><00:36:45.160><c> native</c><00:36:45.760><c> memory</c><00:36:47.160><c> so</c><00:36:48.160><c> when</c><00:36:48.849><c> we</c>

00:36:48.990 --> 00:36:49.000 align:start position:0%
running out of native memory so when we
 

00:36:49.000 --> 00:36:50.880 align:start position:0%
running out of native memory so when we
when<00:36:49.150><c> we</c><00:36:49.299><c> see</c><00:36:49.450><c> this</c><00:36:49.660><c> error</c><00:36:50.200><c> message</c><00:36:50.319><c> this</c>

00:36:50.880 --> 00:36:50.890 align:start position:0%
when we see this error message this
 

00:36:50.890 --> 00:36:53.789 align:start position:0%
when we see this error message this
means<00:36:51.220><c> that</c><00:36:51.579><c> JVM</c><00:36:52.240><c> is</c><00:36:52.480><c> not</c><00:36:52.750><c> able</c><00:36:53.319><c> to</c><00:36:53.500><c> allocate</c>

00:36:53.789 --> 00:36:53.799 align:start position:0%
means that JVM is not able to allocate
 

00:36:53.799 --> 00:36:56.309 align:start position:0%
means that JVM is not able to allocate
from<00:36:54.280><c> native</c><00:36:54.670><c> memory</c><00:36:54.849><c> which</c><00:36:55.150><c> is</c><00:36:55.299><c> not</c><00:36:55.660><c> managed</c>

00:36:56.309 --> 00:36:56.319 align:start position:0%
from native memory which is not managed
 

00:36:56.319 --> 00:36:59.130 align:start position:0%
from native memory which is not managed
by<00:36:56.470><c> the</c><00:36:56.680><c> JVM</c><00:36:57.309><c> not</c><00:36:58.030><c> directly</c><00:36:58.480><c> managed</c><00:36:58.930><c> by</c><00:36:59.079><c> the</c>

00:36:59.130 --> 00:36:59.140 align:start position:0%
by the JVM not directly managed by the
 

00:36:59.140 --> 00:37:02.970 align:start position:0%
by the JVM not directly managed by the
JVM<00:36:59.940><c> so</c><00:37:00.940><c> this</c><00:37:01.180><c> process</c><00:37:01.450><c> our</c><00:37:02.079><c> current</c><00:37:02.530><c> process</c>

00:37:02.970 --> 00:37:02.980 align:start position:0%
JVM so this process our current process
 

00:37:02.980 --> 00:37:05.309 align:start position:0%
JVM so this process our current process
or<00:37:03.190><c> other</c><00:37:03.299><c> processes</c><00:37:04.299><c> on</c><00:37:04.480><c> the</c><00:37:04.510><c> system</c><00:37:05.049><c> might</c>

00:37:05.309 --> 00:37:05.319 align:start position:0%
or other processes on the system might
 

00:37:05.319 --> 00:37:08.760 align:start position:0%
or other processes on the system might
be<00:37:05.680><c> consuming</c><00:37:06.460><c> native</c><00:37:07.329><c> memory</c><00:37:07.569><c> and</c><00:37:07.930><c> we</c><00:37:08.589><c> can</c>

00:37:08.760 --> 00:37:08.770 align:start position:0%
be consuming native memory and we can
 

00:37:08.770 --> 00:37:11.280 align:start position:0%
be consuming native memory and we can
make<00:37:08.980><c> more</c><00:37:09.609><c> room</c><00:37:09.880><c> for</c><00:37:09.940><c> you</c><00:37:10.900><c> know</c><00:37:10.990><c> native</c>

00:37:11.280 --> 00:37:11.290 align:start position:0%
make more room for you know native
 

00:37:11.290 --> 00:37:14.700 align:start position:0%
make more room for you know native
memory<00:37:11.530><c> by</c><00:37:12.750><c> reducing</c><00:37:13.750><c> the</c><00:37:13.900><c> Java</c><00:37:14.140><c> heap</c><00:37:14.440><c> size</c>

00:37:14.700 --> 00:37:14.710 align:start position:0%
memory by reducing the Java heap size
 

00:37:14.710 --> 00:37:16.920 align:start position:0%
memory by reducing the Java heap size
are<00:37:15.160><c> reducing</c><00:37:15.760><c> the</c><00:37:15.880><c> permanent</c><00:37:16.299><c> generation</c><00:37:16.780><c> or</c>

00:37:16.920 --> 00:37:16.930 align:start position:0%
are reducing the permanent generation or
 

00:37:16.930 --> 00:37:19.319 align:start position:0%
are reducing the permanent generation or
meta<00:37:17.200><c> space</c><00:37:17.559><c> size</c><00:37:17.859><c> reducing</c><00:37:18.790><c> the</c><00:37:18.880><c> number</c><00:37:19.180><c> of</c>

00:37:19.319 --> 00:37:19.329 align:start position:0%
meta space size reducing the number of
 

00:37:19.329 --> 00:37:23.130 align:start position:0%
meta space size reducing the number of
active<00:37:19.900><c> threads</c><00:37:20.260><c> are</c><00:37:20.530><c> there</c><00:37:20.890><c> stack</c><00:37:21.160><c> sizes</c><00:37:22.140><c> are</c>

00:37:23.130 --> 00:37:23.140 align:start position:0%
active threads are there stack sizes are
 

00:37:23.140 --> 00:37:25.620 align:start position:0%
active threads are there stack sizes are
reducing<00:37:24.010><c> by</c><00:37:24.220><c> terminating</c><00:37:25.000><c> some</c><00:37:25.299><c> of</c><00:37:25.420><c> the</c>

00:37:25.620 --> 00:37:25.630 align:start position:0%
reducing by terminating some of the
 

00:37:25.630 --> 00:37:27.960 align:start position:0%
reducing by terminating some of the
processes<00:37:26.200><c> on</c><00:37:26.440><c> our</c><00:37:26.650><c> system</c><00:37:27.190><c> which</c><00:37:27.369><c> we</c><00:37:27.730><c> don't</c>

00:37:27.960 --> 00:37:27.970 align:start position:0%
processes on our system which we don't
 

00:37:27.970 --> 00:37:30.809 align:start position:0%
processes on our system which we don't
need<00:37:28.329><c> at</c><00:37:28.569><c> that</c><00:37:28.599><c> moment</c><00:37:29.220><c> and</c><00:37:30.220><c> if</c><00:37:30.430><c> the</c><00:37:30.549><c> above</c>

00:37:30.809 --> 00:37:30.819 align:start position:0%
need at that moment and if the above
 

00:37:30.819 --> 00:37:33.569 align:start position:0%
need at that moment and if the above
doesn't<00:37:31.509><c> help</c><00:37:31.779><c> we</c><00:37:32.140><c> might</c><00:37:32.380><c> be</c><00:37:32.559><c> facing</c><00:37:32.769><c> a</c><00:37:33.130><c> native</c>

00:37:33.569 --> 00:37:33.579 align:start position:0%
doesn't help we might be facing a native
 

00:37:33.579 --> 00:37:36.779 align:start position:0%
doesn't help we might be facing a native
memory<00:37:33.940><c> leak</c><00:37:34.150><c> for</c><00:37:34.720><c> example</c><00:37:35.230><c> you</c><00:37:36.009><c> know</c><00:37:36.130><c> j'ni</c>

00:37:36.779 --> 00:37:36.789 align:start position:0%
memory leak for example you know j'ni
 

00:37:36.789 --> 00:37:39.960 align:start position:0%
memory leak for example you know j'ni
code<00:37:36.819><c> might</c><00:37:37.509><c> be</c><00:37:37.779><c> j'ni</c><00:37:38.349><c> or</c><00:37:38.619><c> JVM</c><00:37:38.920><c> ti</c><00:37:39.309><c> coal</c><00:37:39.700><c> might</c>

00:37:39.960 --> 00:37:39.970 align:start position:0%
code might be j'ni or JVM ti coal might
 

00:37:39.970 --> 00:37:42.089 align:start position:0%
code might be j'ni or JVM ti coal might
be<00:37:40.210><c> allocating</c><00:37:40.869><c> native</c><00:37:41.289><c> buffers</c><00:37:41.710><c> and</c><00:37:41.920><c> might</c>

00:37:42.089 --> 00:37:42.099 align:start position:0%
be allocating native buffers and might
 

00:37:42.099 --> 00:37:46.309 align:start position:0%
be allocating native buffers and might
not<00:37:42.369><c> be</c><00:37:42.640><c> D</c><00:37:42.880><c> allocating</c><00:37:43.599><c> them</c><00:37:43.859><c> as</c><00:37:44.859><c> necessary</c>

00:37:46.309 --> 00:37:46.319 align:start position:0%
not be D allocating them as necessary
 

00:37:46.319 --> 00:37:50.519 align:start position:0%
not be D allocating them as necessary
so<00:37:47.519><c> which</c><00:37:48.519><c> diagnostic</c><00:37:49.210><c> data</c><00:37:49.329><c> can</c><00:37:49.779><c> help</c><00:37:50.079><c> us</c><00:37:50.289><c> to</c>

00:37:50.519 --> 00:37:50.529 align:start position:0%
so which diagnostic data can help us to
 

00:37:50.529 --> 00:37:53.309 align:start position:0%
so which diagnostic data can help us to
troubleshoot<00:37:51.069><c> native</c><00:37:51.490><c> memory</c><00:37:51.730><c> issues</c><00:37:52.319><c> native</c>

00:37:53.309 --> 00:37:53.319 align:start position:0%
troubleshoot native memory issues native
 

00:37:53.319 --> 00:37:56.700 align:start position:0%
troubleshoot native memory issues native
memory<00:37:53.500><c> leaks</c><00:37:54.059><c> you</c><00:37:55.059><c> know</c><00:37:55.230><c> two</c><00:37:56.230><c> kinds</c><00:37:56.619><c> of</c>

00:37:56.700 --> 00:37:56.710 align:start position:0%
memory leaks you know two kinds of
 

00:37:56.710 --> 00:37:58.920 align:start position:0%
memory leaks you know two kinds of
native<00:37:56.890><c> memory</c><00:37:57.309><c> leaks</c><00:37:57.549><c> it</c><00:37:58.059><c> could</c><00:37:58.329><c> be</c><00:37:58.509><c> in</c><00:37:58.720><c> the</c>

00:37:58.920 --> 00:37:58.930 align:start position:0%
native memory leaks it could be in the
 

00:37:58.930 --> 00:38:03.089 align:start position:0%
native memory leaks it could be in the
JVM<00:37:59.410><c> or</c><00:37:59.710><c> it</c><00:38:00.190><c> could</c><00:38:00.460><c> be</c><00:38:01.140><c> outside</c><00:38:02.140><c> JVM</c><00:38:02.769><c> you</c><00:38:02.980><c> know</c>

00:38:03.089 --> 00:38:03.099 align:start position:0%
JVM or it could be outside JVM you know
 

00:38:03.099 --> 00:38:06.539 align:start position:0%
JVM or it could be outside JVM you know
some<00:38:03.369><c> code</c><00:38:03.609><c> outside</c><00:38:03.880><c> JVM</c><00:38:04.779><c> might</c><00:38:05.109><c> be</c><00:38:05.400><c> might</c><00:38:06.400><c> be</c>

00:38:06.539 --> 00:38:06.549 align:start position:0%
some code outside JVM might be might be
 

00:38:06.549 --> 00:38:09.180 align:start position:0%
some code outside JVM might be might be
leaking<00:38:06.809><c> native</c><00:38:07.809><c> memory</c><00:38:08.019><c> so</c><00:38:08.650><c> for</c><00:38:08.859><c> tracking</c>

00:38:09.180 --> 00:38:09.190 align:start position:0%
leaking native memory so for tracking
 

00:38:09.190 --> 00:38:11.609 align:start position:0%
leaking native memory so for tracking
native<00:38:09.759><c> memory</c><00:38:10.029><c> leaks</c><00:38:10.269><c> in</c><00:38:10.480><c> the</c><00:38:10.720><c> JVM</c><00:38:11.200><c> we</c><00:38:11.410><c> have</c><00:38:11.589><c> a</c>

00:38:11.609 --> 00:38:11.619 align:start position:0%
native memory leaks in the JVM we have a
 

00:38:11.619 --> 00:38:13.529 align:start position:0%
native memory leaks in the JVM we have a
tool<00:38:11.859><c> called</c><00:38:12.069><c> native</c><00:38:12.490><c> memory</c><00:38:12.730><c> tracker</c><00:38:13.150><c> we</c>

00:38:13.529 --> 00:38:13.539 align:start position:0%
tool called native memory tracker we
 

00:38:13.539 --> 00:38:16.529 align:start position:0%
tool called native memory tracker we
should<00:38:13.720><c> use</c><00:38:14.349><c> this</c><00:38:14.589><c> tool</c><00:38:14.920><c> to</c><00:38:14.950><c> to</c><00:38:15.940><c> understand</c>

00:38:16.529 --> 00:38:16.539 align:start position:0%
should use this tool to to understand
 

00:38:16.539 --> 00:38:21.720 align:start position:0%
should use this tool to to understand
the<00:38:16.900><c> usage</c><00:38:17.349><c> of</c><00:38:18.480><c> native</c><00:38:19.480><c> memory</c><00:38:19.869><c> by</c><00:38:20.650><c> by</c><00:38:21.039><c> the</c><00:38:21.099><c> JVM</c>

00:38:21.720 --> 00:38:21.730 align:start position:0%
the usage of native memory by by the JVM
 

00:38:21.730 --> 00:38:24.420 align:start position:0%
the usage of native memory by by the JVM
or<00:38:21.910><c> we</c><00:38:22.779><c> could</c><00:38:22.990><c> use</c><00:38:23.230><c> you</c><00:38:23.769><c> know</c><00:38:23.829><c> for</c><00:38:24.130><c> for</c>

00:38:24.420 --> 00:38:24.430 align:start position:0%
or we could use you know for for
 

00:38:24.430 --> 00:38:27.089 align:start position:0%
or we could use you know for for
tracking<00:38:24.789><c> native</c><00:38:25.420><c> memory</c><00:38:25.660><c> leaks</c><00:38:25.869><c> outside</c><00:38:26.559><c> JVM</c>

00:38:27.089 --> 00:38:27.099 align:start position:0%
tracking native memory leaks outside JVM
 

00:38:27.099 --> 00:38:29.970 align:start position:0%
tracking native memory leaks outside JVM
we<00:38:27.460><c> need</c><00:38:27.700><c> to</c><00:38:27.849><c> you</c><00:38:28.089><c> know</c><00:38:28.180><c> rely</c><00:38:28.720><c> on</c><00:38:29.019><c> platform</c>

00:38:29.970 --> 00:38:29.980 align:start position:0%
we need to you know rely on platform
 

00:38:29.980 --> 00:38:33.120 align:start position:0%
we need to you know rely on platform
native<00:38:30.339><c> OS</c><00:38:31.299><c> level</c><00:38:31.779><c> tools</c><00:38:32.140><c> for</c><00:38:32.440><c> example</c><00:38:32.920><c> pea</c>

00:38:33.120 --> 00:38:33.130 align:start position:0%
native OS level tools for example pea
 

00:38:33.130 --> 00:38:35.430 align:start position:0%
native OS level tools for example pea
map<00:38:33.400><c> to</c><00:38:33.819><c> look</c><00:38:34.000><c> at</c><00:38:34.150><c> the</c><00:38:34.269><c> process</c><00:38:34.720><c> map</c><00:38:34.960><c> to</c>

00:38:35.430 --> 00:38:35.440 align:start position:0%
map to look at the process map to
 

00:38:35.440 --> 00:38:38.819 align:start position:0%
map to look at the process map to
understand<00:38:35.950><c> where</c><00:38:36.359><c> you</c><00:38:37.359><c> know</c><00:38:37.480><c> which</c><00:38:38.200><c> parts</c><00:38:38.650><c> of</c>

00:38:38.819 --> 00:38:38.829 align:start position:0%
understand where you know which parts of
 

00:38:38.829 --> 00:38:42.599 align:start position:0%
understand where you know which parts of
the<00:38:38.980><c> memory</c><00:38:39.160><c> is</c><00:38:39.430><c> consumed</c><00:38:39.940><c> by</c><00:38:41.099><c> you</c><00:38:42.099><c> know</c><00:38:42.220><c> which</c>

00:38:42.599 --> 00:38:42.609 align:start position:0%
the memory is consumed by you know which
 

00:38:42.609 --> 00:38:46.380 align:start position:0%
the memory is consumed by you know which
allocations<00:38:43.359><c> and</c><00:38:44.279><c> results</c><00:38:45.279><c> from</c><00:38:45.460><c> native</c>

00:38:46.380 --> 00:38:46.390 align:start position:0%
allocations and results from native
 

00:38:46.390 --> 00:38:48.359 align:start position:0%
allocations and results from native
memory<00:38:46.569><c> leaks</c><00:38:46.900><c> tools</c><00:38:47.259><c> leak</c><00:38:47.890><c> tools</c><00:38:48.130><c> such</c><00:38:48.339><c> as</c>

00:38:48.359 --> 00:38:48.369 align:start position:0%
memory leaks tools leak tools such as
 

00:38:48.369 --> 00:38:52.249 align:start position:0%
memory leaks tools leak tools such as
Libya<00:38:48.789><c> mam</c><00:38:49.150><c> valgrind</c><00:38:49.779><c> etc</c><00:38:50.559><c> and</c><00:38:50.829><c> of</c><00:38:51.759><c> course</c>

00:38:52.249 --> 00:38:52.259 align:start position:0%
Libya mam valgrind etc and of course
 

00:38:52.259 --> 00:38:54.660 align:start position:0%
Libya mam valgrind etc and of course
inspecting<00:38:53.259><c> different</c><00:38:54.039><c> segments</c><00:38:54.519><c> of</c><00:38:54.609><c> the</c>

00:38:54.660 --> 00:38:54.670 align:start position:0%
inspecting different segments of the
 

00:38:54.670 --> 00:38:56.670 align:start position:0%
inspecting different segments of the
core<00:38:54.970><c> file</c><00:38:55.269><c> can</c><00:38:55.539><c> also</c><00:38:55.690><c> reveal</c><00:38:56.289><c> information</c>

00:38:56.670 --> 00:38:56.680 align:start position:0%
core file can also reveal information
 

00:38:56.680 --> 00:39:01.170 align:start position:0%
core file can also reveal information
about<00:38:58.109><c> where</c><00:38:59.109><c> what</c><00:38:59.650><c> kind</c><00:38:59.920><c> of</c><00:39:00.130><c> native</c><00:39:00.970><c> memory</c>

00:39:01.170 --> 00:39:01.180 align:start position:0%
about where what kind of native memory
 

00:39:01.180 --> 00:39:04.890 align:start position:0%
about where what kind of native memory
allocations<00:39:01.960><c> are</c><00:39:02.289><c> causing</c><00:39:03.210><c> Nitin</c><00:39:04.210><c> and</c><00:39:04.509><c> the</c>

00:39:04.890 --> 00:39:04.900 align:start position:0%
allocations are causing Nitin and the
 

00:39:04.900 --> 00:39:08.180 align:start position:0%
allocations are causing Nitin and the
the<00:39:05.079><c> observed</c><00:39:05.500><c> native</c><00:39:05.859><c> out</c><00:39:06.069><c> of</c><00:39:06.279><c> memory</c><00:39:06.460><c> error</c>

00:39:08.180 --> 00:39:08.190 align:start position:0%
the observed native out of memory error
 

00:39:08.190 --> 00:39:11.400 align:start position:0%
the observed native out of memory error
we<00:39:09.190><c> can</c><00:39:09.220><c> use</c><00:39:09.549><c> a</c><00:39:09.579><c> native</c><00:39:10.359><c> memory</c><00:39:10.690><c> -</c><00:39:10.990><c> tracker</c>

00:39:11.400 --> 00:39:11.410 align:start position:0%
we can use a native memory - tracker
 

00:39:11.410 --> 00:39:14.220 align:start position:0%
we can use a native memory - tracker
tool<00:39:11.740><c> as</c><00:39:11.890><c> I</c><00:39:12.039><c> said</c><00:39:12.309><c> to</c><00:39:12.549><c> track</c><00:39:13.019><c> native</c><00:39:14.019><c> memory</c>

00:39:14.220 --> 00:39:14.230 align:start position:0%
tool as I said to track native memory
 

00:39:14.230 --> 00:39:18.299 align:start position:0%
tool as I said to track native memory
allocations<00:39:15.069><c> which</c><00:39:16.059><c> are</c><00:39:16.240><c> done</c><00:39:16.480><c> by</c><00:39:17.470><c> the</c><00:39:17.500><c> JVM</c>

00:39:18.299 --> 00:39:18.309 align:start position:0%
allocations which are done by the JVM
 

00:39:18.309 --> 00:39:20.789 align:start position:0%
allocations which are done by the JVM
and<00:39:18.549><c> it</c><00:39:19.059><c> cannot</c><00:39:19.390><c> track</c><00:39:19.720><c> memory</c><00:39:20.170><c> allocated</c>

00:39:20.789 --> 00:39:20.799 align:start position:0%
and it cannot track memory allocated
 

00:39:20.799 --> 00:39:25.130 align:start position:0%
and it cannot track memory allocated
outside<00:39:21.519><c> the</c><00:39:21.700><c> JVM</c><00:39:22.180><c> or</c><00:39:22.450><c> by</c><00:39:22.720><c> native</c><00:39:23.220><c> libraries</c>

00:39:25.130 --> 00:39:25.140 align:start position:0%
outside the JVM or by native libraries
 

00:39:25.140 --> 00:39:29.880 align:start position:0%
outside the JVM or by native libraries
so<00:39:26.140><c> to</c><00:39:26.200><c> use</c><00:39:26.789><c> nmt</c><00:39:27.789><c> we</c><00:39:28.059><c> can</c><00:39:28.269><c> use</c><00:39:28.960><c> option</c><00:39:29.470><c> native</c>

00:39:29.880 --> 00:39:29.890 align:start position:0%
so to use nmt we can use option native
 

00:39:29.890 --> 00:39:33.509 align:start position:0%
so to use nmt we can use option native
memory<00:39:30.160><c> tracking</c><00:39:30.839><c> and</c><00:39:32.009><c> we</c><00:39:33.009><c> need</c><00:39:33.130><c> to</c><00:39:33.250><c> you</c><00:39:33.490><c> know</c>

00:39:33.509 --> 00:39:33.519 align:start position:0%
memory tracking and we need to you know
 

00:39:33.519 --> 00:39:35.370 align:start position:0%
memory tracking and we need to you know
launch<00:39:33.819><c> our</c><00:39:34.029><c> applications</c><00:39:34.750><c> with</c><00:39:34.930><c> this</c><00:39:35.049><c> option</c>

00:39:35.370 --> 00:39:35.380 align:start position:0%
launch our applications with this option
 

00:39:35.380 --> 00:39:37.010 align:start position:0%
launch our applications with this option
on<00:39:35.710><c> and</c>

00:39:37.010 --> 00:39:37.020 align:start position:0%
on and
 

00:39:37.020 --> 00:39:39.020 align:start position:0%
on and
this<00:39:37.470><c> option</c><00:39:37.829><c> can</c><00:39:38.010><c> be</c><00:39:38.040><c> used</c><00:39:38.160><c> at</c><00:39:38.579><c> two</c><00:39:38.819><c> levels</c>

00:39:39.020 --> 00:39:39.030 align:start position:0%
this option can be used at two levels
 

00:39:39.030 --> 00:39:41.900 align:start position:0%
this option can be used at two levels
somebody<00:39:39.780><c> and</c><00:39:40.050><c> detail</c><00:39:40.619><c> depending</c><00:39:41.369><c> upon</c><00:39:41.490><c> the</c>

00:39:41.900 --> 00:39:41.910 align:start position:0%
somebody and detail depending upon the
 

00:39:41.910 --> 00:39:45.470 align:start position:0%
somebody and detail depending upon the
verbosity<00:39:42.390><c> level</c><00:39:43.079><c> of</c><00:39:43.319><c> information</c><00:39:44.089><c> we</c><00:39:45.089><c> would</c>

00:39:45.470 --> 00:39:45.480 align:start position:0%
verbosity level of information we would
 

00:39:45.480 --> 00:39:47.780 align:start position:0%
verbosity level of information we would
like<00:39:45.660><c> to</c><00:39:45.690><c> see</c><00:39:46.050><c> and</c><00:39:46.260><c> then</c><00:39:46.770><c> we</c><00:39:46.920><c> can</c><00:39:47.099><c> use</c><00:39:47.309><c> J</c>

00:39:47.780 --> 00:39:47.790 align:start position:0%
like to see and then we can use J
 

00:39:47.790 --> 00:39:49.819 align:start position:0%
like to see and then we can use J
command<00:39:48.180><c> to</c><00:39:48.510><c> connect</c><00:39:48.809><c> to</c><00:39:48.930><c> the</c><00:39:49.050><c> process</c><00:39:49.559><c> and</c>

00:39:49.819 --> 00:39:49.829 align:start position:0%
command to connect to the process and
 

00:39:49.829 --> 00:39:53.000 align:start position:0%
command to connect to the process and
extract<00:39:50.760><c> native</c><00:39:51.510><c> memory</c><00:39:51.839><c> in</c><00:39:52.109><c> usage</c>

00:39:53.000 --> 00:39:53.010 align:start position:0%
extract native memory in usage
 

00:39:53.010 --> 00:39:55.460 align:start position:0%
extract native memory in usage
information<00:39:53.700><c> using</c><00:39:53.940><c> VM</c><00:39:54.450><c> dot</c><00:39:54.780><c> native</c>

00:39:55.460 --> 00:39:55.470 align:start position:0%
information using VM dot native
 

00:39:55.470 --> 00:40:00.200 align:start position:0%
information using VM dot native
underscore<00:39:56.059><c> memory</c><00:39:57.059><c> command</c><00:39:58.819><c> this</c><00:39:59.819><c> is</c><00:40:00.000><c> how</c>

00:40:00.200 --> 00:40:00.210 align:start position:0%
underscore memory command this is how
 

00:40:00.210 --> 00:40:03.650 align:start position:0%
underscore memory command this is how
the<00:40:00.780><c> output</c><00:40:01.050><c> from</c><00:40:01.859><c> VM</c><00:40:02.609><c> dot</c><00:40:02.849><c> native</c><00:40:03.210><c> underscore</c>

00:40:03.650 --> 00:40:03.660 align:start position:0%
the output from VM dot native underscore
 

00:40:03.660 --> 00:40:07.460 align:start position:0%
the output from VM dot native underscore
memory<00:40:04.050><c> looks</c><00:40:04.559><c> like</c><00:40:05.300><c> this</c><00:40:06.300><c> shows</c><00:40:06.569><c> you</c><00:40:07.349><c> know</c>

00:40:07.460 --> 00:40:07.470 align:start position:0%
memory looks like this shows you know
 

00:40:07.470 --> 00:40:11.299 align:start position:0%
memory looks like this shows you know
the<00:40:08.250><c> memory</c><00:40:08.940><c> used</c><00:40:09.480><c> internally</c><00:40:10.200><c> by</c><00:40:10.230><c> the</c><00:40:10.470><c> JVM</c><00:40:11.099><c> by</c>

00:40:11.299 --> 00:40:11.309 align:start position:0%
the memory used internally by the JVM by
 

00:40:11.309 --> 00:40:14.150 align:start position:0%
the memory used internally by the JVM by
different<00:40:11.700><c> components</c><00:40:12.270><c> of</c><00:40:12.359><c> the</c><00:40:12.510><c> JVM</c><00:40:12.900><c> by</c><00:40:13.800><c> you</c>

00:40:14.150 --> 00:40:14.160 align:start position:0%
different components of the JVM by you
 

00:40:14.160 --> 00:40:18.230 align:start position:0%
different components of the JVM by you
know<00:40:14.280><c> Java</c><00:40:14.520><c> heap</c><00:40:14.940><c> threads</c><00:40:15.450><c> compiler</c><00:40:16.290><c> GC</c><00:40:17.240><c> so</c>

00:40:18.230 --> 00:40:18.240 align:start position:0%
know Java heap threads compiler GC so
 

00:40:18.240 --> 00:40:21.680 align:start position:0%
know Java heap threads compiler GC so
this<00:40:19.050><c> gives</c><00:40:19.349><c> us</c><00:40:19.589><c> a</c><00:40:19.770><c> clue</c><00:40:19.800><c> you</c><00:40:20.700><c> know</c><00:40:21.210><c> which</c>

00:40:21.680 --> 00:40:21.690 align:start position:0%
this gives us a clue you know which
 

00:40:21.690 --> 00:40:25.549 align:start position:0%
this gives us a clue you know which
which<00:40:22.109><c> part</c><00:40:22.140><c> of</c><00:40:22.650><c> the</c><00:40:23.150><c> JVM</c><00:40:24.150><c> is</c><00:40:24.359><c> consuming</c><00:40:25.170><c> more</c>

00:40:25.549 --> 00:40:25.559 align:start position:0%
which part of the JVM is consuming more
 

00:40:25.559 --> 00:40:28.400 align:start position:0%
which part of the JVM is consuming more
memory<00:40:25.950><c> or</c><00:40:26.250><c> is</c><00:40:26.579><c> you</c><00:40:27.089><c> know</c><00:40:27.210><c> growing</c><00:40:27.780><c> in</c><00:40:28.050><c> usage</c>

00:40:28.400 --> 00:40:28.410 align:start position:0%
memory or is you know growing in usage
 

00:40:28.410 --> 00:40:32.260 align:start position:0%
memory or is you know growing in usage
of<00:40:28.589><c> memory</c><00:40:28.980><c> and</c><00:40:29.329><c> we</c><00:40:30.329><c> can</c><00:40:30.480><c> collect</c><00:40:30.660><c> a</c><00:40:30.960><c> baseline</c>

00:40:32.260 --> 00:40:32.270 align:start position:0%
of memory and we can collect a baseline
 

00:40:32.270 --> 00:40:35.720 align:start position:0%
of memory and we can collect a baseline
output<00:40:33.270><c> using</c><00:40:33.660><c> nmt</c><00:40:34.319><c> and</c><00:40:34.559><c> that</c><00:40:34.710><c> baseline</c><00:40:35.069><c> can</c>

00:40:35.720 --> 00:40:35.730 align:start position:0%
output using nmt and that baseline can
 

00:40:35.730 --> 00:40:39.710 align:start position:0%
output using nmt and that baseline can
be<00:40:35.910><c> compared</c><00:40:36.540><c> against</c><00:40:37.250><c> you</c><00:40:38.250><c> know</c><00:40:38.720><c> outputs</c>

00:40:39.710 --> 00:40:39.720 align:start position:0%
be compared against you know outputs
 

00:40:39.720 --> 00:40:41.210 align:start position:0%
be compared against you know outputs
collected<00:40:40.200><c> at</c><00:40:40.319><c> different</c><00:40:40.349><c> stages</c><00:40:40.950><c> of</c>

00:40:41.210 --> 00:40:41.220 align:start position:0%
collected at different stages of
 

00:40:41.220 --> 00:40:43.760 align:start position:0%
collected at different stages of
application<00:40:41.970><c> run</c><00:40:42.210><c> and</c><00:40:42.450><c> see</c><00:40:42.690><c> which</c><00:40:43.230><c> parts</c><00:40:43.619><c> are</c>

00:40:43.760 --> 00:40:43.770 align:start position:0%
application run and see which parts are
 

00:40:43.770 --> 00:40:47.630 align:start position:0%
application run and see which parts are
growing<00:40:44.069><c> in</c><00:40:44.579><c> memory</c><00:40:45.510><c> usage</c><00:40:46.160><c> so</c><00:40:47.160><c> for</c><00:40:47.309><c> native</c>

00:40:47.630 --> 00:40:47.640 align:start position:0%
growing in memory usage so for native
 

00:40:47.640 --> 00:40:52.490 align:start position:0%
growing in memory usage so for native
memory<00:40:47.970><c> leaks</c><00:40:48.869><c> outside</c><00:40:49.859><c> JVM</c><00:40:50.839><c> we</c><00:40:51.839><c> need</c><00:40:52.109><c> to</c><00:40:52.290><c> use</c>

00:40:52.490 --> 00:40:52.500 align:start position:0%
memory leaks outside JVM we need to use
 

00:40:52.500 --> 00:40:55.849 align:start position:0%
memory leaks outside JVM we need to use
a<00:40:52.530><c> native</c><00:40:53.339><c> platform</c><00:40:54.059><c> native</c><00:40:54.359><c> memory</c><00:40:54.859><c> leak</c>

00:40:55.849 --> 00:40:55.859 align:start position:0%
a native platform native memory leak
 

00:40:55.859 --> 00:40:58.670 align:start position:0%
a native platform native memory leak
detection<00:40:56.220><c> tools</c><00:40:57.020><c> for</c><00:40:58.020><c> example</c><00:40:58.109><c> we</c><00:40:58.500><c> can</c><00:40:58.650><c> use</c>

00:40:58.670 --> 00:40:58.680 align:start position:0%
detection tools for example we can use
 

00:40:58.680 --> 00:41:05.780 align:start position:0%
detection tools for example we can use
dbx<00:40:59.609><c> laboum</c><00:41:00.390><c> m</c><00:41:00.599><c> valgrind</c><00:41:01.319><c> purify</c><00:41:02.280><c> and</c><00:41:02.670><c> so</c><00:41:03.150><c> on</c>

00:41:05.780 --> 00:41:05.790 align:start position:0%
 
 

00:41:05.790 --> 00:41:09.799 align:start position:0%
 
so<00:41:06.210><c> to</c><00:41:06.270><c> summarize</c><00:41:07.670><c> causes</c><00:41:08.670><c> of</c><00:41:08.880><c> memory</c><00:41:09.660><c> related</c>

00:41:09.799 --> 00:41:09.809 align:start position:0%
so to summarize causes of memory related
 

00:41:09.809 --> 00:41:11.900 align:start position:0%
so to summarize causes of memory related
problems<00:41:10.530><c> could</c><00:41:10.740><c> be</c><00:41:10.799><c> you</c><00:41:11.309><c> know</c><00:41:11.430><c> miss</c>

00:41:11.900 --> 00:41:11.910 align:start position:0%
problems could be you know miss
 

00:41:11.910 --> 00:41:14.539 align:start position:0%
problems could be you know miss
configuration<00:41:12.690><c> of</c><00:41:12.869><c> memory</c><00:41:13.230><c> pools</c><00:41:13.549><c> excessive</c>

00:41:14.539 --> 00:41:14.549 align:start position:0%
configuration of memory pools excessive
 

00:41:14.549 --> 00:41:17.839 align:start position:0%
configuration of memory pools excessive
use<00:41:14.730><c> of</c><00:41:14.760><c> finalized</c><00:41:15.480><c> errs</c><00:41:15.750><c> like</c><00:41:16.490><c> explicit</c><00:41:17.490><c> GC</c>

00:41:17.839 --> 00:41:17.849 align:start position:0%
use of finalized errs like explicit GC
 

00:41:17.849 --> 00:41:21.440 align:start position:0%
use of finalized errs like explicit GC
invocations<00:41:18.030><c> or</c><00:41:18.839><c> memory</c><00:41:19.470><c> leaks</c><00:41:19.740><c> and</c><00:41:20.010><c> we</c><00:41:20.880><c> the</c>

00:41:21.440 --> 00:41:21.450 align:start position:0%
invocations or memory leaks and we the
 

00:41:21.450 --> 00:41:23.539 align:start position:0%
invocations or memory leaks and we the
first<00:41:21.599><c> step</c><00:41:21.869><c> to</c><00:41:22.319><c> understand</c><00:41:23.099><c> or</c><00:41:23.339><c> to</c>

00:41:23.539 --> 00:41:23.549 align:start position:0%
first step to understand or to
 

00:41:23.549 --> 00:41:25.760 align:start position:0%
first step to understand or to
troubleshoot<00:41:24.150><c> memory</c><00:41:24.720><c> related</c><00:41:25.109><c> problems</c><00:41:25.530><c> is</c>

00:41:25.760 --> 00:41:25.770 align:start position:0%
troubleshoot memory related problems is
 

00:41:25.770 --> 00:41:29.270 align:start position:0%
troubleshoot memory related problems is
to<00:41:25.819><c> size</c><00:41:26.819><c> our</c><00:41:27.210><c> memory</c><00:41:27.660><c> pools</c><00:41:28.280><c> appropriately</c>

00:41:29.270 --> 00:41:29.280 align:start position:0%
to size our memory pools appropriately
 

00:41:29.280 --> 00:41:31.789 align:start position:0%
to size our memory pools appropriately
and<00:41:29.490><c> the</c><00:41:29.910><c> tools</c><00:41:30.150><c> that</c><00:41:30.359><c> we</c><00:41:30.660><c> can</c><00:41:31.200><c> use</c><00:41:31.230><c> to</c>

00:41:31.789 --> 00:41:31.799 align:start position:0%
and the tools that we can use to
 

00:41:31.799 --> 00:41:34.760 align:start position:0%
and the tools that we can use to
troubleshoot<00:41:32.309><c> memory</c><00:41:32.730><c> problems</c><00:41:33.150><c> are</c><00:41:33.770><c> heap</c>

00:41:34.760 --> 00:41:34.770 align:start position:0%
troubleshoot memory problems are heap
 

00:41:34.770 --> 00:41:37.190 align:start position:0%
troubleshoot memory problems are heap
dump<00:41:35.010><c> on</c><00:41:35.339><c> out</c><00:41:35.549><c> of</c><00:41:35.579><c> memory</c><00:41:35.910><c> error</c><00:41:36.210><c> and</c><00:41:36.780><c> print</c>

00:41:37.190 --> 00:41:37.200 align:start position:0%
dump on out of memory error and print
 

00:41:37.200 --> 00:41:40.130 align:start position:0%
dump on out of memory error and print
class<00:41:37.440><c> histogram</c><00:41:38.099><c> options</c><00:41:38.609><c> J</c><00:41:39.270><c> console</c><00:41:39.780><c> J</c>

00:41:40.130 --> 00:41:40.140 align:start position:0%
class histogram options J console J
 

00:41:40.140 --> 00:41:44.210 align:start position:0%
class histogram options J console J
command<00:41:40.470><c> J</c><00:41:40.710><c> map</c><00:41:41.250><c> GC</c><00:41:41.790><c> logs</c><00:41:42.059><c> Eclipse</c><00:41:42.720><c> mat</c><00:41:43.020><c> and</c><00:41:43.380><c> MT</c>

00:41:44.210 --> 00:41:44.220 align:start position:0%
command J map GC logs Eclipse mat and MT
 

00:41:44.220 --> 00:41:48.380 align:start position:0%
command J map GC logs Eclipse mat and MT
are<00:41:44.520><c> native</c><00:41:45.390><c> memory</c><00:41:45.630><c> detection</c><00:41:46.200><c> tools</c>

00:41:48.380 --> 00:41:48.390 align:start position:0%
are native memory detection tools
 

00:41:48.390 --> 00:41:52.640 align:start position:0%
are native memory detection tools
so<00:41:49.319><c> these</c><00:41:49.440><c> are</c><00:41:49.650><c> some</c><00:41:50.249><c> references</c><00:41:50.849><c> you</c><00:41:51.599><c> can</c><00:41:51.839><c> you</c>

00:41:52.640 --> 00:41:52.650 align:start position:0%
so these are some references you can you
 

00:41:52.650 --> 00:41:55.279 align:start position:0%
so these are some references you can you
know<00:41:52.769><c> look</c><00:41:53.160><c> at</c><00:41:53.450><c> refer</c><00:41:54.450><c> to</c><00:41:54.599><c> troubleshooting</c>

00:41:55.279 --> 00:41:55.289 align:start position:0%
know look at refer to troubleshooting
 

00:41:55.289 --> 00:41:58.549 align:start position:0%
know look at refer to troubleshooting
guides<00:41:55.730><c> here</c><00:41:56.730><c> I</c><00:41:56.759><c> provided</c><00:41:57.299><c> links</c><00:41:57.720><c> for</c><00:41:57.900><c> JDK</c><00:41:58.349><c> 9</c>

00:41:58.549 --> 00:41:58.559 align:start position:0%
guides here I provided links for JDK 9
 

00:41:58.559 --> 00:42:01.519 align:start position:0%
guides here I provided links for JDK 9
and<00:41:58.859><c> JDK</c><00:41:59.220><c> 8</c><00:41:59.369><c> troubleshooting</c><00:42:00.089><c> guides</c><00:42:00.299><c> I</c><00:42:00.930><c> have</c>

00:42:01.519 --> 00:42:01.529 align:start position:0%
and JDK 8 troubleshooting guides I have
 

00:42:01.529 --> 00:42:04.130 align:start position:0%
and JDK 8 troubleshooting guides I have
a<00:42:01.559><c> blog</c><00:42:01.920><c> where</c><00:42:02.489><c> i</c><00:42:02.519><c> share</c><00:42:03.059><c> my</c><00:42:03.140><c> troubleshooting</c>

00:42:04.130 --> 00:42:04.140 align:start position:0%
a blog where i share my troubleshooting
 

00:42:04.140 --> 00:42:06.529 align:start position:0%
a blog where i share my troubleshooting
experiences<00:42:04.950><c> you</c><00:42:05.609><c> know</c><00:42:05.730><c> quite</c><00:42:05.910><c> often</c><00:42:06.180><c> and</c>

00:42:06.529 --> 00:42:06.539 align:start position:0%
experiences you know quite often and
 

00:42:06.539 --> 00:42:10.359 align:start position:0%
experiences you know quite often and
there<00:42:07.499><c> is</c><00:42:07.680><c> a</c><00:42:07.710><c> free</c><00:42:08.269><c> ongoing</c><00:42:09.269><c> online</c><00:42:09.779><c> course</c>

00:42:10.359 --> 00:42:10.369 align:start position:0%
there is a free ongoing online course
 

00:42:10.369 --> 00:42:13.069 align:start position:0%
there is a free ongoing online course
for<00:42:11.369><c> troubleshooting</c><00:42:12.180><c> memory</c><00:42:12.509><c> issues</c><00:42:12.839><c> in</c>

00:42:13.069 --> 00:42:13.079 align:start position:0%
for troubleshooting memory issues in
 

00:42:13.079 --> 00:42:15.349 align:start position:0%
for troubleshooting memory issues in
java<00:42:13.319><c> applications</c><00:42:14.099><c> the</c><00:42:14.670><c> enrollments</c><00:42:15.239><c> are</c>

00:42:15.349 --> 00:42:15.359 align:start position:0%
java applications the enrollments are
 

00:42:15.359 --> 00:42:18.140 align:start position:0%
java applications the enrollments are
still<00:42:15.599><c> open</c><00:42:15.930><c> until</c><00:42:16.079><c> october</c><00:42:17.009><c> 11</c><00:42:17.549><c> so</c><00:42:17.789><c> you</c><00:42:17.849><c> could</c>

00:42:18.140 --> 00:42:18.150 align:start position:0%
still open until october 11 so you could
 

00:42:18.150 --> 00:42:19.849 align:start position:0%
still open until october 11 so you could
enroll<00:42:18.359><c> into</c><00:42:18.809><c> that</c><00:42:18.960><c> course</c><00:42:19.289><c> and</c><00:42:19.529><c> you</c><00:42:19.739><c> know</c>

00:42:19.849 --> 00:42:19.859 align:start position:0%
enroll into that course and you know
 

00:42:19.859 --> 00:42:21.979 align:start position:0%
enroll into that course and you know
learn<00:42:20.039><c> more</c><00:42:20.339><c> about</c><00:42:20.630><c> how</c><00:42:21.630><c> to</c><00:42:21.690><c> troubleshoot</c>

00:42:21.979 --> 00:42:21.989 align:start position:0%
learn more about how to troubleshoot
 

00:42:21.989 --> 00:42:25.099 align:start position:0%
learn more about how to troubleshoot
memory<00:42:22.619><c> issues</c><00:42:22.999><c> and</c><00:42:23.999><c> there's</c><00:42:24.269><c> an</c><00:42:24.420><c> article</c><00:42:24.630><c> on</c>

00:42:25.099 --> 00:42:25.109 align:start position:0%
memory issues and there's an article on
 

00:42:25.109 --> 00:42:27.200 align:start position:0%
memory issues and there's an article on
troubleshooting<00:42:25.950><c> Java</c><00:42:26.190><c> memory</c><00:42:26.430><c> issues</c><00:42:26.910><c> on</c>

00:42:27.200 --> 00:42:27.210 align:start position:0%
troubleshooting Java memory issues on
 

00:42:27.210 --> 00:42:29.890 align:start position:0%
troubleshooting Java memory issues on
info<00:42:27.720><c> cube</c><00:42:27.779><c> the</c><00:42:28.499><c> link</c><00:42:28.710><c> is</c><00:42:28.859><c> given</c><00:42:29.009><c> here</c><00:42:29.430><c> so</c>

00:42:29.890 --> 00:42:29.900 align:start position:0%
info cube the link is given here so
 

00:42:29.900 --> 00:42:33.490 align:start position:0%
info cube the link is given here so
that's<00:42:30.900><c> all</c><00:42:31.109><c> I</c><00:42:31.140><c> had</c><00:42:31.559><c> to</c><00:42:31.680><c> share</c><00:42:31.859><c> thank</c><00:42:32.579><c> you</c>

00:42:33.490 --> 00:42:33.500 align:start position:0%
that's all I had to share thank you
 

00:42:33.500 --> 00:42:38.409 align:start position:0%
that's all I had to share thank you
[Applause]

