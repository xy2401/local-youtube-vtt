WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.000 --> 00:00:03.929
很好，我要讲一个

00:00:02.429 --> 00:00:06.210
里面有很多JavaScript 

00:00:03.929 --> 00:00:09.570
有时会得到类似嘘的反应

00:00:06.210 --> 00:00:11.160
你知道你们有多少人

00:00:09.570 --> 00:00:14.670
定期使用JavaScript 

00:00:11.160 --> 00:00:18.000
根据这是无处不在的情况

00:00:14.670 --> 00:00:21.779
和嗯，但是人们说我是Java 

00:00:18.000 --> 00:00:23.640
开发人员JavaScript是错误的语言

00:00:21.779 --> 00:00:27.029
我将要尝试谈论的内容

00:00:23.640 --> 00:00:30.029
这个话题是那个假设

00:00:27.029 --> 00:00:32.099
心态是一种错觉

00:00:30.029 --> 00:00:33.930
每个人都有它，每个人都必须

00:00:32.099 --> 00:00:35.460
这些天使用JavaScript，因为

00:00:33.930 --> 00:00:37.530
它在浏览器中无处不在，所以

00:00:35.460 --> 00:00:39.899
我想做的是介绍一些

00:00:37.530 --> 00:00:41.070
在这次谈话中要做的事情，但充满挑战

00:00:39.899 --> 00:00:43.800
您对是否

00:00:41.070 --> 00:00:46.620
 JavaScript甚至是或不属于

00:00:43.800 --> 00:00:48.360
 Java环境，所以我们将讨论

00:00:46.620 --> 00:00:49.680
我将要谈论网络

00:00:48.360 --> 00:00:53.190
扩展你们有多少人

00:00:49.680 --> 00:00:54.840
听说网络扩展了，我要走了

00:00:53.190 --> 00:00:56.160
弄清楚它们是什么以及它们如何

00:00:54.840 --> 00:00:58.590
工作，我也要谈

00:00:56.160 --> 00:01:02.129
同构应用多少人

00:00:58.590 --> 00:01:04.409
听说过这个概念，所以同构

00:01:02.129 --> 00:01:06.900
应用程序只是意味着获取您的

00:01:04.409 --> 00:01:09.420
代码在多个环境中运行

00:01:06.900 --> 00:01:11.460
然后最后我要谈

00:01:09.420 --> 00:01:14.610
关于我正在处理的项目

00:01:11.460 --> 00:01:16.530
 Mozilla及其相关内容和过滤条件

00:01:14.610 --> 00:01:18.630
气泡，我们可以谈谈

00:01:16.530 --> 00:01:21.000
然后我有一些可以工作的机器人东西

00:01:18.630 --> 00:01:23.159
我知道那只是一种乐趣和酷

00:01:21.000 --> 00:01:25.799
你们想要机器人的东西吗

00:01:23.159 --> 00:01:27.240
像三分钟有趣的机器人

00:01:25.799 --> 00:01:35.400
您想在一开始播放视频还是

00:01:27.240 --> 00:01:35.790
以开始开始结束

00:01:35.400 --> 00:01:37.920
大

00:01:35.790 --> 00:01:43.079
对不起，我很难听到太多摇滚

00:01:37.920 --> 00:01:45.659
节目让我们看看这里，所以我是室友

00:01:43.079 --> 00:01:48.090
在大学里和一个叫戴夫·汉森的家伙

00:01:45.659 --> 00:01:50.790
谁因制造超级而出名

00:01:48.090 --> 00:01:52.820
现实的机器人，我将向您展示

00:01:50.790 --> 00:01:56.729
其中一些，然后我会告诉你

00:01:52.820 --> 00:01:59.250
吉米·法伦（Jimmy Fallon）观众的最新视频

00:01:56.729 --> 00:02:01.619
像吉米·法伦这样的人在这里，我

00:01:59.250 --> 00:02:04.110
将在吉米展示索非亚机器人

00:02:01.619 --> 00:02:07.229
法伦，然后我会告诉你发展

00:02:04.110 --> 00:02:09.179
 2014年香港的录像带

00:02:07.229 --> 00:02:12.110
告诉你事情如何快速

00:02:09.179 --> 00:02:12.110
事情进展

00:02:12.810 --> 00:02:18.540
你知道你当然在哪里

00:02:16.500 --> 00:02:31.680
我最喜欢纽约市

00:02:18.540 --> 00:02:34.519
节目《今晚》，请确保知道什么

00:02:31.680 --> 00:02:34.519
永远不会是你的

00:02:35.330 --> 00:02:57.599
玉米片奶酪真的很有趣

00:02:55.470 --> 00:03:00.480
在正确的地方工作很多

00:02:57.599 --> 00:03:03.090
在索菲亚里面，那里有

00:03:00.480 --> 00:03:06.930
那里大约有40台电动机

00:03:03.090 --> 00:03:09.030
控制有实时消息

00:03:06.930 --> 00:03:11.880
总线消息队列中发生的事情

00:03:09.030 --> 00:03:14.880
来控制所有声音

00:03:11.880 --> 00:03:17.510
然后合成语音识别

00:03:14.880 --> 00:03:21.299
你知道的语音识别专业城市

00:03:17.510 --> 00:03:23.220
情感内容分析有很多

00:03:21.299 --> 00:03:25.049
您可以尝试的东西

00:03:23.220 --> 00:03:28.530
建立这样的系统

00:03:25.049 --> 00:03:30.630
像Alexa一样，但是您正在尝试

00:03:28.530 --> 00:03:32.700
超越并获得它

00:03:30.630 --> 00:03:35.069
不要以用户身份考虑自己的脸

00:03:32.700 --> 00:03:37.260
界面，但您知道或怀抱

00:03:35.069 --> 00:03:39.450
你的手或手势，但所有这些

00:03:37.260 --> 00:03:41.190
事情对你很有意义

00:03:39.450 --> 00:03:43.260
人，我们有这些非常老练的人

00:03:41.190 --> 00:03:45.569
关于我们如何建立的规则

00:03:43.260 --> 00:03:47.670
彼此交流，这是

00:03:45.569 --> 00:03:49.590
编程很有趣，因为您

00:03:47.670 --> 00:03:53.340
必须真正意识到所有

00:03:49.590 --> 00:03:55.440
这些事情，所以当戴夫和我们在一起时

00:03:53.340 --> 00:03:58.290
做了很长时间但

00:03:55.440 --> 00:04:00.450
他们的动画平台以前是

00:03:58.290 --> 00:04:02.910
更像是让我们

00:04:00.450 --> 00:04:04.230
说你有流水线自动化

00:04:02.910 --> 00:04:06.660
而您正在尝试控制手臂

00:04:04.230 --> 00:04:08.760
在你知道的苹果酱上盖上盖子

00:04:06.660 --> 00:04:10.560
在一条传送带上经过

00:04:08.760 --> 00:04:13.109
有点像他们正在使用的东西

00:04:10.560 --> 00:04:16.169
所以每个，除了那张脸

00:04:13.109 --> 00:04:18.209
数十个控制皮带轮的电动机和

00:04:16.169 --> 00:04:20.519
你知道模仿肌腱和

00:04:18.209 --> 00:04:22.979
脸上的其他结构，例如马达

00:04:20.519 --> 00:04:26.160
就像拉网的绳子一样

00:04:22.979 --> 00:04:28.890
融合到帽子里

00:04:26.160 --> 00:04:30.840
戴夫开发的橡胶

00:04:28.890 --> 00:04:34.620
创建这些你知道不同的东西

00:04:30.840 --> 00:04:37.290
表达正确，所以戴夫和他的团队

00:04:34.620 --> 00:04:40.350
我们必须进入时间表

00:04:37.290 --> 00:04:42.540
基本上每个马达都有一个

00:04:40.350 --> 00:04:45.060
代表电动机位置的图表

00:04:42.540 --> 00:04:47.940
他们不得不辛苦地摆姿势

00:04:45.060 --> 00:04:50.640
在迪士尼，这些东西都很好

00:04:47.940 --> 00:04:53.520
电影或类似皮克斯电影的电影

00:04:50.640 --> 00:04:57.150
方式更成熟的一套旅游工具

00:04:53.520 --> 00:04:59.580
做情感动画以及多少

00:04:57.150 --> 00:05:01.710
你们曾经用过搅拌机或玛雅人

00:04:59.580 --> 00:05:04.260
或任何这类工具

00:05:01.710 --> 00:05:07.560
搅拌器是一个了不起的免费工具

00:05:04.260 --> 00:05:10.050
使您真正强大的软件

00:05:07.560 --> 00:05:13.050
一套很棒的工具

00:05:10.050 --> 00:05:14.760
动画，我和戴夫交谈，说

00:05:13.050 --> 00:05:17.670
你知道你们应该用这个

00:05:14.760 --> 00:05:21.240
我们可以在

00:05:17.670 --> 00:05:23.970
动画工具以及

00:05:21.240 --> 00:05:25.770
机器人操作中的电机控制

00:05:23.970 --> 00:05:29.670
系统，所以没有人听说过

00:05:25.770 --> 00:05:32.160
机器人操作系统罗斯，罗斯也这样做

00:05:29.670 --> 00:05:35.040
一些非常酷的东西就像

00:05:32.160 --> 00:05:37.140
机器人权利操作系统

00:05:35.040 --> 00:05:39.540
机器人操作系统怎么办

00:05:37.140 --> 00:05:42.720
这意味着在操作系统上

00:05:39.540 --> 00:05:46.020
提供了一层之间的抽象

00:05:42.720 --> 00:05:47.460
您的程序和外围设备

00:05:46.020 --> 00:05:50.220
比方说，在早期

00:05:47.460 --> 00:05:52.620
像Wang一样的早期早期文字处理程序

00:05:50.220 --> 00:05:55.590
文字处理器IBM文字处理器

00:05:52.620 --> 00:05:58.140
王文字处理器可以在王上工作

00:05:55.590 --> 00:06:00.330
打印机，实际上甚至只是一个

00:05:58.140 --> 00:06:03.060
特定的王打印机所以字面上的

00:06:00.330 --> 00:06:05.640
其代码中的文字处理器具有

00:06:03.060 --> 00:06:07.650
此特定打印机的控制代码

00:06:05.640 --> 00:06:09.720
你不能带一台IBM打印机放

00:06:07.650 --> 00:06:11.490
将其放在您的Wang文字处理器上或副

00:06:09.720 --> 00:06:14.090
反之亦然，因为它们是书面的

00:06:11.490 --> 00:06:16.980
专门互相合作

00:06:14.090 --> 00:06:19.470
当操作系统变得更加成熟时

00:06:16.980 --> 00:06:21.780
他们提供了一个抽象层

00:06:19.470 --> 00:06:24.000
您知道文档的这种想法

00:06:21.780 --> 00:06:26.669
需要打印的你知道单词

00:06:24.000 --> 00:06:28.350
或您的文字处理器操纵一个

00:06:26.669 --> 00:06:30.090
文档，它说嘿操作

00:06:28.350 --> 00:06:31.950
系统为我和

00:06:30.090 --> 00:06:34.530
操作系统照顾

00:06:31.950 --> 00:06:36.840
翻译的抽象概念

00:06:34.530 --> 00:06:39.660
文件成控制码

00:06:36.840 --> 00:06:40.110
控制打印机，以便Ross做到这一点

00:06:39.660 --> 00:06:42.240
对于

00:06:40.110 --> 00:06:45.240
例如，机器人技术

00:06:42.240 --> 00:06:48.720
有两种主要的电动机

00:06:45.240 --> 00:06:51.030
伺服电机和步进电机

00:06:48.720 --> 00:06:53.430
电机通常只有一条控制线

00:06:51.030 --> 00:06:55.950
它使用脉冲的定时

00:06:53.430 --> 00:06:57.630
控制线设置位置

00:06:55.950 --> 00:07:00.600
电机的旋转位置

00:06:57.630 --> 00:07:03.510
步进电机有多条控制线

00:07:00.600 --> 00:07:06.600
并通过激活

00:07:03.510 --> 00:07:08.460
串联的线也设置旋转

00:07:06.600 --> 00:07:10.410
电机的功率，如果您正在编写

00:07:08.460 --> 00:07:12.030
程序你并不在乎

00:07:10.410 --> 00:07:14.910
所有的作品，你只是说我有一个

00:07:12.030 --> 00:07:18.180
旋转关节，我希望它在45岁

00:07:14.910 --> 00:07:20.400
度，然后罗斯照顾

00:07:18.180 --> 00:07:22.650
该摘要之间的翻译

00:07:20.400 --> 00:07:24.990
旋转电机和

00:07:22.650 --> 00:07:27.930
操作一些的物理现实

00:07:24.990 --> 00:07:30.510
特定的硬件，所以我写了一个

00:07:27.930 --> 00:07:33.780
绑定层将

00:07:30.510 --> 00:07:36.870
在Blender中制作动画装备，然后

00:07:33.780 --> 00:07:38.790
将其连接到罗斯抽象概念

00:07:36.870 --> 00:07:41.250
电机，以便它可以驱动

00:07:38.790 --> 00:07:44.070
索非亚头脑中真正的马达，所以我

00:07:41.250 --> 00:07:46.440
在有一个小型订约公司

00:07:44.070 --> 00:07:48.540
达拉斯，您知道某种规模的企业

00:07:46.440 --> 00:07:51.270
你知道也许你们可以开始

00:07:48.540 --> 00:07:53.790
我们有四个员工，但我们都做

00:07:51.270 --> 00:07:56.910
大部分不同的东西

00:07:53.790 --> 00:07:59.820
我们这样做是为了使租金IR 

00:07:56.910 --> 00:08:01.950
通常是在

00:07:59.820 --> 00:08:05.400
 apap营业，通常

00:08:01.950 --> 00:08:07.530
与现代的JavaScript前端，所以我

00:08:05.400 --> 00:08:10.620
我花很多时间写Java吗

00:08:07.530 --> 00:08:13.140
和编写JavaScript，但我做到了

00:08:10.620 --> 00:08:15.330
有一件有趣的工作来

00:08:13.140 --> 00:08:18.600
在那个Mozilla想要我帮助

00:08:15.330 --> 00:08:20.970
帮助他们做一些过滤器

00:08:18.600 --> 00:08:25.410
你知道的那种泡沫

00:08:20.970 --> 00:08:28.980
整个假新闻新闻的公正

00:08:25.410 --> 00:08:31.140
中等现代媒体并试图建立

00:08:28.980 --> 00:08:33.360
帮助用户了解内容的工具

00:08:31.140 --> 00:08:37.380
在现代媒体和

00:08:33.360 --> 00:08:39.930
演示新的Web扩展API 

00:08:37.380 --> 00:08:43.979
那么我们的网络扩展网站

00:08:39.930 --> 00:08:46.680
扩展程序是一个新的api 

00:08:43.979 --> 00:08:50.360
 Mozilla之间最初的合作

00:08:46.680 --> 00:08:53.970
和谷歌浏览器，使您可以编写

00:08:50.360 --> 00:08:56.759
浏览器的插件使用

00:08:53.970 --> 00:08:59.430
编写代码和HTML的脚本

00:08:56.759 --> 00:09:02.069
建立您的用户界面，而不是

00:08:59.430 --> 00:09:03.480
 C ++和xpcom以及所有这些

00:09:02.069 --> 00:09:06.060
内部浏览器

00:09:03.480 --> 00:09:08.959
具体实施细节

00:09:06.060 --> 00:09:11.370
浏览器您具有很高的水平

00:09:08.959 --> 00:09:13.110
漂亮的编程环境

00:09:11.370 --> 00:09:15.240
很像你已经习惯的

00:09:13.110 --> 00:09:18.000
使用构建普通网页

00:09:15.240 --> 00:09:22.470
 JavaScript，可让您添加新按钮

00:09:18.000 --> 00:09:25.170
到浏览器中的工具栏，您

00:09:22.470 --> 00:09:27.240
知道这只是一个HTML页面， 

00:09:25.170 --> 00:09:32.699
然后你可以做各种各样的事情

00:09:27.240 --> 00:09:34.709
你不能从普通网页上做

00:09:32.699 --> 00:09:37.620
让您知道可以监视用户

00:09:34.709 --> 00:09:40.139
活动中您可以观看所有标签

00:09:37.620 --> 00:09:42.600
在浏览器中他们在您的页面上

00:09:40.139 --> 00:09:45.000
可以告诉他们何时更改页面

00:09:42.600 --> 00:09:47.939
有人切换时回电

00:09:45.000 --> 00:09:50.100
您可以在其中查看内容的页面

00:09:47.939 --> 00:09:52.139
看看每个窗户的

00:09:50.100 --> 00:09:54.209
在浏览器中打开，您可以看到

00:09:52.139 --> 00:09:55.829
浏览器的历史记录，您可以看到

00:09:54.209 --> 00:09:57.930
您可以操作的书签

00:09:55.829 --> 00:09:59.879
您可以创建书签

00:09:57.930 --> 00:10:02.399
基本上可以让您控制

00:09:59.879 --> 00:10:04.529
您知道的浏览器并能更好地控制

00:10:02.399 --> 00:10:07.889
方式比您拥有的更多

00:10:04.529 --> 00:10:10.920
在页面上下文中就可以了

00:10:07.889 --> 00:10:12.990
目前我不会说这是一个

00:10:10.920 --> 00:10:14.939
我的百分之一百便携式

00:10:12.990 --> 00:10:17.490
意思是不完全像你写的那样

00:10:14.939 --> 00:10:19.980
完全一样的JavaScript， 

00:10:17.490 --> 00:10:24.000
将在Firefox Chrome Opera和

00:10:19.980 --> 00:10:26.160
边缘，但那里好像是95 98％ 

00:10:24.000 --> 00:10:28.019
有越来越多的图书馆

00:10:26.160 --> 00:10:29.639
已经有很多图书馆

00:10:28.019 --> 00:10:31.649
创建polyfills 

00:10:29.639 --> 00:10:34.139
对，这是一个适配器类

00:10:31.649 --> 00:10:36.389
基本上可以平滑任何

00:10:34.139 --> 00:10:38.550
剩下的差异，所以已经

00:10:36.389 --> 00:10:42.360
有了一些库，您可以可靠地

00:10:38.550 --> 00:10:44.309
写一个javascript HTML 

00:10:42.360 --> 00:10:45.959
代码并将其插入所有这四个

00:10:44.309 --> 00:10:47.699
浏览器，然后添加到任何

00:10:45.959 --> 00:10:52.019
这些浏览器，这真的是

00:10:47.699 --> 00:10:53.910
强大的概念等结构

00:10:52.019 --> 00:10:55.860
这些事情之一基本上像

00:10:53.910 --> 00:10:57.990
这个你有一个清单文件

00:10:55.860 --> 00:11:00.149
设置不同的组件

00:10:57.990 --> 00:11:02.100
您通常会有几个

00:11:00.149 --> 00:11:04.829
不同的UI元素，因此您将拥有

00:11:02.100 --> 00:11:07.110
该弹出窗口有一个弹出HTML和一个

00:11:04.829 --> 00:11:07.680
弹出j / s，就像建立网站一样

00:11:07.110 --> 00:11:09.540
页

00:11:07.680 --> 00:11:11.970
你也我没有，但是你

00:11:09.540 --> 00:11:13.649
也可以创建选项页面

00:11:11.970 --> 00:11:15.060
就像您使用过任何插件一样

00:11:13.649 --> 00:11:16.740
然后您进入设置，它带给您

00:11:15.060 --> 00:11:18.990
到一个您可以控制的单独页面

00:11:16.740 --> 00:11:21.180
该插件的设置

00:11:18.990 --> 00:11:24.000
让你做那种事情，但是

00:11:21.180 --> 00:11:27.480
您也有背景联系人

00:11:24.000 --> 00:11:30.089
浏览器启动时的脚本

00:11:27.480 --> 00:11:32.700
它会运行您的后台脚本，您

00:11:30.089 --> 00:11:34.500
可以启动流程然后运行

00:11:32.700 --> 00:11:36.959
一直在后台

00:11:34.500 --> 00:11:38.700
基本上每次您都会弹出时间

00:11:36.959 --> 00:11:41.130
弹出，然后关闭

00:11:38.700 --> 00:11:43.470
就像您已重新加载页面一样

00:11:41.130 --> 00:11:45.029
状态每次都会重置，但

00:11:43.470 --> 00:11:46.980
后台脚本的状态是

00:11:45.029 --> 00:11:49.140
一直在那里，然后你也

00:11:46.980 --> 00:11:51.839
有内容脚本以及

00:11:49.140 --> 00:11:54.209
内容脚本要做的是，当任何页面

00:11:51.839 --> 00:11:57.060
基本上是在浏览器中打开的

00:11:54.209 --> 00:12:00.149
让您将自己的JavaScript注入

00:11:57.060 --> 00:12:03.029
该页面的JavaScript环境

00:12:00.149 --> 00:12:04.770
您可以添加其他监听器

00:12:03.029 --> 00:12:06.990
可以操纵文档，所以您知道

00:12:04.770 --> 00:12:08.820
你可能就像你可以放

00:12:06.990 --> 00:12:11.580
在那里的内容脚本哦

00:12:08.820 --> 00:12:13.380
我在Google网页环境中可以吗

00:12:11.580 --> 00:12:15.870
我将搜索字段设为蓝色

00:12:13.380 --> 00:12:17.670
而且任何时候你去谷歌

00:12:15.870 --> 00:12:19.589
机器并打开它的搜索字段

00:12:17.670 --> 00:12:21.420
会是蓝色的，所以你可以做

00:12:19.589 --> 00:12:24.240
没关系，它可以让您添加

00:12:21.420 --> 00:12:29.880
 JavaScript到您的任何页面

00:12:24.240 --> 00:12:31.920
 JavaScript，因此请记住

00:12:29.880 --> 00:12:35.370
谈论同构应用

00:12:31.920 --> 00:12:37.290
一点点，那你怎么办

00:12:35.370 --> 00:12:39.510
这些网络扩展之一非常合适

00:12:37.290 --> 00:12:41.820
假设您拥有Java， 

00:12:39.510 --> 00:12:43.470
您知道他们是您的企业工具

00:12:41.820 --> 00:12:46.020
公司，你想拥有一些东西

00:12:43.470 --> 00:12:47.940
轻松地找到销售线索

00:12:46.020 --> 00:12:50.040
一直在您的销售人员可以

00:12:47.940 --> 00:12:52.110
只需按一个按钮，这就是您的表格

00:12:50.040 --> 00:12:54.390
填写新的销售假期

00:12:52.110 --> 00:12:57.390
取决于您，取决于您的Java 

00:12:54.390 --> 00:12:59.339
服务器或假设您有两个

00:12:57.390 --> 00:13:01.320
旧版应用程序运行了多少次

00:12:59.339 --> 00:13:03.329
你有这个吗，你必须打开

00:13:01.320 --> 00:13:04.920
某些页面中的内容和旧版

00:13:03.329 --> 00:13:06.720
实际坐在某人的应用程序

00:13:04.920 --> 00:13:09.120
在另一个选项卡中并将其键入

00:13:06.720 --> 00:13:11.100
好吧，你可以扩展一下

00:13:09.120 --> 00:13:12.930
你知道可以看到哦，我知道了

00:13:11.100 --> 00:13:15.029
你有旧订单申请

00:13:12.930 --> 00:13:16.440
打开，您正在尝试输入

00:13:15.029 --> 00:13:18.360
新订单，它可能会达到

00:13:16.440 --> 00:13:19.450
从一个中拉出数据并粘贴

00:13:18.360 --> 00:13:20.980
变成另一种形式

00:13:19.450 --> 00:13:22.510
这样用户就可以查看并继续

00:13:20.980 --> 00:13:24.610
那是正确的提交而不是

00:13:22.510 --> 00:13:26.950
我必须重新整理好一切

00:13:24.610 --> 00:13:28.300
随时都有很多机会

00:13:26.950 --> 00:13:30.760
想要一下子变成两个

00:13:28.300 --> 00:13:33.760
页面或类似的内容，您可以

00:13:30.760 --> 00:13:36.370
可以做到，你们有多少人

00:13:33.760 --> 00:13:40.900
必须编写JavaScript表单

00:13:36.370 --> 00:13:41.950
验证码很好，所以其中之一

00:13:40.900 --> 00:13:44.350
我想挑战你的事情

00:13:41.950 --> 00:13:46.630
在我进行本演讲时，关于

00:13:44.350 --> 00:13:49.420
你能重用完全一样的东西吗

00:13:46.630 --> 00:13:51.730
 Java内部的验证逻辑

00:13:49.420 --> 00:13:54.070
应用程序，所以还有更多

00:13:51.730 --> 00:13:56.050
更多工具来做这种事情之一

00:13:54.070 --> 00:13:58.870
其中最经典的是犀牛

00:13:56.050 --> 00:14:01.450
大约很长一段时间，但在Java和

00:13:58.870 --> 00:14:03.730
 VM现在是VM中的标准配置

00:14:01.450 --> 00:14:06.750
名为nashorn的工具，任何人都可以使用

00:14:03.730 --> 00:14:08.770
因此，全国范围内的敌人更多

00:14:06.750 --> 00:14:11.170
高性能JavaScript环境

00:14:08.770 --> 00:14:12.640
一直内置在JVM中

00:14:11.170 --> 00:14:15.610
我要说的是，但是有

00:14:12.640 --> 00:14:17.980
还有像关闭脚本这样的东西，如果

00:14:15.610 --> 00:14:20.410
你正在写闭包，你可以编译

00:14:17.980 --> 00:14:23.650
闭包到JavaScript中

00:14:20.410 --> 00:14:26.260
脚本，但也有J sweet，其中J 

00:14:23.650 --> 00:14:28.480
不错，您可以编写标准的Java及其它

00:14:26.260 --> 00:14:29.710
将您的Java编译成JavaScript 

00:14:28.480 --> 00:14:33.910
然后可以放入浏览器

00:14:29.710 --> 00:14:37.030
那么Nashua Nash的出生

00:14:33.910 --> 00:14:40.300
就像我说的是JD kaise JavaScript 

00:14:37.030 --> 00:14:42.610
解决方案运送标准在JDK中

00:14:40.300 --> 00:14:45.640
 Java VM，因此它们一直都在

00:14:42.610 --> 00:14:47.710
他们的甲骨文正在认真努力

00:14:45.640 --> 00:14:49.950
使其成为高性能

00:14:47.710 --> 00:14:53.110
知道在Java 7中您已经调用了动态

00:14:49.950 --> 00:14:55.300
有改进的地方

00:14:53.110 --> 00:14:57.700
每个Java版本以改进

00:14:55.300 --> 00:15:00.100
我不会告诉你nashorn的表现

00:14:57.700 --> 00:15:02.890
它与nodejs平价

00:15:00.100 --> 00:15:05.140
但差距在缩小

00:15:02.890 --> 00:15:09.130
情况会影响你

00:15:05.140 --> 00:15:11.590
知道几乎没有js'，但您知道

00:15:09.130 --> 00:15:13.990
最大的不同是你在

00:15:11.590 --> 00:15:17.350
 java vm，因此您可以访问设施

00:15:13.990 --> 00:15:19.690
在不存在的java vm中

00:15:17.350 --> 00:15:21.940
 node.js房间对，没有js没有

00:15:19.690 --> 00:15:25.380
线程正确，没有线程

00:15:21.940 --> 00:15:28.270
 for node.js，因此您可以使用

00:15:25.380 --> 00:15:30.460
你知道回传数据， 

00:15:28.270 --> 00:15:32.680
您必须派遣工人之间来回

00:15:30.460 --> 00:15:34.899
本质上是消息对象和过去的一天

00:15:32.680 --> 00:15:37.960
按价值计算，但您知道我们拥有

00:15:34.899 --> 00:15:40.480
破坏者环形缓冲区之类的东西

00:15:37.960 --> 00:15:42.910
对，这是超高性能

00:15:40.480 --> 00:15:45.370
 Java环形缓冲区的结构

00:15:42.910 --> 00:15:47.020
很像一些股票交易应用程序

00:15:45.370 --> 00:15:49.540
如果您有8 GB，请使用它

00:15:47.020 --> 00:15:51.130
您正在使用的内存中数据结构

00:15:49.540 --> 00:15:52.660
在一堆线程之间共享

00:15:51.130 --> 00:15:54.700
线程是同时的

00:15:52.660 --> 00:15:58.060
操纵你不能去处理

00:15:54.700 --> 00:16:00.880
工人之间有8个演出对象

00:15:58.060 --> 00:16:03.399
您可以在

00:16:00.880 --> 00:16:05.680
您甚至无法做到的Java虚拟机

00:16:03.399 --> 00:16:08.440
正确的nodejs甚至不可能

00:16:05.680 --> 00:16:10.570
苹果与苹果的性能比较

00:16:08.440 --> 00:16:13.990
很难制造，因为设施

00:16:10.570 --> 00:16:16.270
根本不在那儿，这有多容易

00:16:13.990 --> 00:16:18.279
开始，所以这两行

00:16:16.270 --> 00:16:20.890
给你展示一个超简单的例子

00:16:18.279 --> 00:16:22.720
一些JavaScript，你会被问到

00:16:20.890 --> 00:16:24.640
用于脚本中的新脚本引擎

00:16:22.720 --> 00:16:27.190
您按名称要求的引擎管理员

00:16:24.640 --> 00:16:29.200
 Nashorn，然后在这里进行引擎评估

00:16:27.190 --> 00:16:31.690
你可以放任何你想要的JavaScript 

00:16:29.200 --> 00:16:33.670
在里面，它将运行它将

00:16:31.690 --> 00:16:36.220
将其转换为Java字节码并执行

00:16:33.670 --> 00:16:37.779
它，但你不仅可以知道吐

00:16:36.220 --> 00:16:40.360
如果您要标准化一些东西

00:16:37.779 --> 00:16:42.700
在此处用JavaScript实例化对象

00:16:40.360 --> 00:16:45.070
并返回您将要回来

00:16:42.700 --> 00:16:47.740
 Java中的对象句柄

00:16:45.070 --> 00:16:50.080
调用方法，甚至可以传递

00:16:47.740 --> 00:16:52.779
 Java对象进入并拥有

00:16:50.080 --> 00:16:55.690
您的JavaScript对象调用方法

00:16:52.779 --> 00:16:57.339
 Java对象，一切正常

00:16:55.690 --> 00:16:59.680
无缝地对所有的一切

00:16:57.339 --> 00:17:00.700
 Java VM中的对象，这是

00:16:59.680 --> 00:17:02.470
我要你们思考的事情

00:17:00.700 --> 00:17:04.480
关于是不要像这样想

00:17:02.470 --> 00:17:07.750
 Java世界中有JavaScript世界

00:17:04.480 --> 00:17:10.360
 Java是人类语言Java VM 

00:17:07.750 --> 00:17:11.740
不能运行Java源代码

00:17:10.360 --> 00:17:14.920
运行Java字节码

00:17:11.740 --> 00:17:17.679
 Nashorn将JavaScript编译成

00:17:14.920 --> 00:17:19.809
 Java字节码所以Nashorn的JavaScript 

00:17:17.679 --> 00:17:23.170
只是产生Java的另一种方式

00:17:19.809 --> 00:17:24.880
字节码，所以如果您已经有

00:17:23.170 --> 00:17:28.300
验证逻辑（如果您已经拥有） 

00:17:24.880 --> 00:17:30.070
现有JavaScript中的价值

00:17:28.300 --> 00:17:32.650
您必须为Web应用程序编写

00:17:30.070 --> 00:17:34.600
在用Java重写之前，请先

00:17:32.650 --> 00:17:36.220
退后一步，就像我们可以使用

00:17:34.600 --> 00:17:38.110
那我们必须重写它，并且

00:17:36.220 --> 00:17:40.690
真的考虑那个权利，因为如果

00:17:38.110 --> 00:17:43.690
你的位置是

00:17:40.690 --> 00:17:46.480
不仅要执行验证逻辑

00:17:43.690 --> 00:17:47.950
假设在您的Web应用程序中

00:17:46.480 --> 00:17:49.780
但是现在您正在谈论做一个

00:17:47.950 --> 00:17:51.820
 iOS原生应用，您正在谈论

00:17:49.780 --> 00:17:53.260
做一个您知道的Android本机应用程序

00:17:51.820 --> 00:17:55.690
你将不得不保持你的

00:17:53.260 --> 00:17:57.850
验证的目标C版本

00:17:55.690 --> 00:17:59.679
就像逻辑上那样

00:17:57.850 --> 00:18:01.510
验证逻辑您的JavaScript版本

00:17:59.679 --> 00:18:03.490
验证逻辑的全部

00:18:01.510 --> 00:18:06.370
工程时间，这些都是

00:18:03.490 --> 00:18:08.320
失败的机会就可以

00:18:06.370 --> 00:18:10.600
在您的版本和

00:18:08.320 --> 00:18:12.820
这就是您遇到严重错误的方式

00:18:10.600 --> 00:18:14.740
平台，所以您想知道不

00:18:12.820 --> 00:18:17.290
重复自己的真相

00:18:14.740 --> 00:18:19.540
您可以重用该代码吗？ 

00:18:17.290 --> 00:18:25.510
这就是同构应用

00:18:19.540 --> 00:18:27.309
关于它，我认为是埃克曼剧本5 

00:18:25.510 --> 00:18:28.900
还有一些ACMA脚本6，但是

00:18:27.309 --> 00:18:32.350
你可以知道你可以跑步

00:18:28.900 --> 00:18:35.020
像巴贝尔一样表达

00:18:32.350 --> 00:18:38.350
 webpack和babel并使用

00:18:35.020 --> 00:18:41.110
可以在nashua上运行的转译器

00:18:38.350 --> 00:18:43.419
您可以使用echo脚本6构造

00:18:41.110 --> 00:18:45.130
他们只是被转译，所以有一些

00:18:43.419 --> 00:18:46.929
性能方面的考虑，但和我一样

00:18:45.130 --> 00:18:49.450
说自然的肯定在

00:18:46.929 --> 00:18:51.730
积极发展Oracle绝对是

00:18:49.450 --> 00:18:55.270
得到它Java中的JavaScript很大

00:18:51.730 --> 00:18:57.429
交易，他们追求，因为

00:18:55.270 --> 00:19:00.460
您知道现实是Java和

00:18:57.429 --> 00:19:01.990
浏览器小程序正确无人

00:19:00.460 --> 00:19:03.250
甚至想着我的意思是在那之前

00:19:01.990 --> 00:19:06.250
现在，即使他们是

00:19:03.250 --> 00:19:08.290
正式走了，没有人真的是

00:19:06.250 --> 00:19:11.320
很高兴一段时间使用小程序

00:19:08.290 --> 00:19:14.770
现在，网络正逐渐成为

00:19:11.320 --> 00:19:16.510
越来越大的交易和JavaScript是

00:19:14.770 --> 00:19:18.820
借助工具了解的任何地方

00:19:16.510 --> 00:19:21.190
像PhoneGap Apache Cordova一样

00:19:18.820 --> 00:19:22.990
曾经玩过，你可以

00:19:21.190 --> 00:19:25.540
构建一个简单的Web应用程序并

00:19:22.990 --> 00:19:26.890
将其打包到您可以放置​​的网上商店

00:19:25.540 --> 00:19:28.840
将其放入Apple Store中

00:19:26.890 --> 00:19:30.820
 Android商店，所以这些功能强大

00:19:28.840 --> 00:19:33.370
新兴平台让您

00:19:30.820 --> 00:19:35.980
在各种代码之间移动代码

00:19:33.370 --> 00:19:41.669
您可以获得的不同环境

00:19:35.980 --> 00:19:41.669
 nodejs风格与yeah合作

00:19:49.070 --> 00:20:00.030
是的，所以你应该可以

00:19:57.000 --> 00:20:03.090
从中调用任何Java对象上的任何方法

00:20:00.030 --> 00:20:06.030
使用Nashorn的javascript 

00:20:03.090 --> 00:20:07.230
我相信我可以用Java编写

00:20:06.030 --> 00:20:09.210
相信你应该能够打动你

00:20:07.230 --> 00:20:12.870
可以做诸如操纵线程之类的事情

00:20:09.210 --> 00:20:14.520
从JavaScript中使用Nashorn 

00:20:12.870 --> 00:20:16.920
你知道你是否有能力

00:20:14.520 --> 00:20:18.930
你可以打电话给你的东西

00:20:16.920 --> 00:20:21.450
 Java对象上的调用方法

00:20:18.930 --> 00:20:23.730
您可以通过在Java上调用方法来完成

00:20:21.450 --> 00:20:25.770
您可能需要做的事情

00:20:23.730 --> 00:20:27.150
取决于您的铸造

00:20:25.770 --> 00:20:30.120
例如，如果您尝试真正做某事

00:20:27.150 --> 00:20:33.300
低级别的我没有Pat的答案

00:20:30.120 --> 00:20:35.100
你知道的话会很容易，但是

00:20:33.300 --> 00:20:36.630
你应该做任何你能做的

00:20:35.100 --> 00:20:40.560
您应该能够使用的Java 

00:20:36.630 --> 00:20:41.970
 JavaScript可能有一些类似的东西

00:20:40.560 --> 00:20:43.950
可能是一些有趣的事情

00:20:41.970 --> 00:20:46.290
如果你喜欢你就会得到

00:20:43.950 --> 00:20:48.510
知道您正在使用转换的方法

00:20:46.290 --> 00:20:50.850
你知道类型检测

00:20:48.510 --> 00:20:53.010
在其中扮演重要角色，可能会

00:20:50.850 --> 00:20:54.510
有点复杂，但您可能会有

00:20:53.010 --> 00:20:57.210
做类似写适配器的事情

00:20:54.510 --> 00:20:59.550
 Java中的类，它提供了JavaScript 

00:20:57.210 --> 00:21:05.880
几乎没有什么帮助，只是为了了解

00:20:59.550 --> 00:21:08.670
打字系统，所以你知道

00:21:05.880 --> 00:21:11.550
因为有太多

00:21:08.670 --> 00:21:14.070
 JavaScript发生了很多

00:21:11.550 --> 00:21:15.750
 JavaScript中发生的进化

00:21:14.070 --> 00:21:18.060
空间非常复杂

00:21:15.750 --> 00:21:20.580
 Java领域的热门概念

00:21:18.060 --> 00:21:23.370
对像这样的想法

00:21:20.580 --> 00:21:25.980
不可变的操作脚本回调

00:21:23.370 --> 00:21:28.890
 JavaScript中的面向程序设计是

00:21:25.980 --> 00:21:30.300
非常非常复杂，就像Java 

00:21:28.890 --> 00:21:32.940
程序员只是现在

00:21:30.300 --> 00:21:34.680
发现lambda以及如何处理

00:21:32.940 --> 00:21:36.840
他们很好的JavaScript一直在思考

00:21:34.680 --> 00:21:39.780
这种方式很长一段时间，你知道

00:21:36.840 --> 00:21:42.120
就像异步IO的一个重要原因

00:21:39.780 --> 00:21:43.980
在Java中，每个人都可以

00:21:42.120 --> 00:21:45.570
记得历史上没有爵士乐来过

00:21:43.980 --> 00:21:47.670
突然间

00:21:45.570 --> 00:21:51.210
大量同时

00:21:47.670 --> 00:21:53.100
会话node.js只是Java语言

00:21:51.210 --> 00:21:54.220
你知道用Java写的，但是你知道

00:21:53.100 --> 00:21:57.130
因为它

00:21:54.220 --> 00:21:59.440
并不是nodejs产生了方式

00:21:57.130 --> 00:22:01.750
更快的代码，这只是一种方式

00:21:59.440 --> 00:22:04.270
不同的策略，因为如果你有

00:22:01.750 --> 00:22:06.640
 10,000个旧会话同时进行

00:22:04.270 --> 00:22:10.210
您有10,000个servlet结构

00:22:06.640 --> 00:22:13.120
线程，但没有js'，则有10,000个

00:22:10.210 --> 00:22:14.919
坐在一个数组中的回调

00:22:13.120 --> 00:22:16.330
线程遍历那些并看到

00:22:14.919 --> 00:22:17.740
如果数据准备好了，那就去

00:22:16.330 --> 00:22:19.900
这是一些数据这是一些数据

00:22:17.740 --> 00:22:22.780
一些数据，以便摆脱

00:22:19.900 --> 00:22:25.390
所有这些线程的开销是

00:22:22.780 --> 00:22:27.669
他们为什么不进行异步输入输出

00:22:25.390 --> 00:22:29.650
 Java具有非常好的性能，所以现在

00:22:27.669 --> 00:22:32.409
人们正在使用那种

00:22:29.650 --> 00:22:35.890
技术主要来自

00:22:32.409 --> 00:22:37.990
您可以在Java VM中使用JavaScript空间

00:22:35.890 --> 00:22:40.590
回到平价和性能上

00:22:37.990 --> 00:22:42.820
有很多事情发生

00:22:40.590 --> 00:22:44.230
面向回调的编程

00:22:42.820 --> 00:22:46.150
您可能会发现的JavaScript 

00:22:44.230 --> 00:22:48.190
实际上更容易写

00:22:46.150 --> 00:22:50.080
 JavaScript还是更成熟

00:22:48.190 --> 00:22:52.120
 JavaScript中提供的工具，因为

00:22:50.080 --> 00:22:54.580
像你知道的事情已经记住了

00:22:52.120 --> 00:22:56.530
当你第一次做的时候你知道

00:22:54.580 --> 00:22:57.970
美元符号得到，你就成功了

00:22:56.530 --> 00:23:00.190
回调，比如说您正在尝试

00:22:57.970 --> 00:23:01.600
依次致电一系列休息服务

00:23:00.190 --> 00:23:03.370
而且你必须要

00:23:01.600 --> 00:23:05.350
嵌套在另一个里面就对了

00:23:03.370 --> 00:23:07.539
得到这些疯狂的飞V 

00:23:05.350 --> 00:23:09.039
您的代码精通JavaScript的人们

00:23:07.539 --> 00:23:11.140
厌倦了那个，那是

00:23:09.039 --> 00:23:12.460
那么你知道操作员是从哪里来的

00:23:11.140 --> 00:23:14.679
还有我可以做的事情

00:23:12.460 --> 00:23:16.990
你在说我想叫这个

00:23:14.679 --> 00:23:18.610
然后当我想要的时候

00:23:16.990 --> 00:23:20.169
希望此函数被调用，然后

00:23:18.610 --> 00:23:23.049
我想调用此函数，然后

00:23:20.169 --> 00:23:25.030
您可以使用非常干净的代码

00:23:23.049 --> 00:23:26.830
这些面向嵌套的回调

00:23:25.030 --> 00:23:29.350
结构，这是一种不同的方式

00:23:26.830 --> 00:23:31.510
思考，所以花一些时间在

00:23:29.350 --> 00:23:34.000
这些库的JavaScript空间

00:23:31.510 --> 00:23:36.400
确实会提高您的游戏使用能力

00:23:34.000 --> 00:23:38.770
 Java中的lambda，因为它是概念性的

00:23:36.400 --> 00:23:40.720
对，这不只是关于

00:23:38.770 --> 00:23:42.960
语言是一个概念，就像

00:23:40.720 --> 00:23:45.429
循环或您是否知道任何编程

00:23:42.960 --> 00:23:47.980
概念真的是关于概念

00:23:45.429 --> 00:23:49.840
因为那些很容易学习，如果你

00:23:47.980 --> 00:23:52.360
理解一个概念很容易

00:23:49.840 --> 00:23:54.250
一种新的语言，理解和学习

00:23:52.360 --> 00:23:56.799
如果您使用新的语言，该概念

00:23:54.250 --> 00:23:59.610
不明白这个概念，那就是

00:23:56.799 --> 00:23:59.610
什么很难学

00:24:03.210 --> 00:24:06.570
所以我正在做一些反应

00:24:04.919 --> 00:24:10.320
很多人在工作会做出反应或

00:24:06.570 --> 00:24:12.630
 redux，所以这就像一个例子

00:24:10.320 --> 00:24:15.059
一些非常酷的概念

00:24:12.630 --> 00:24:19.200
应用在Java空间中，但是

00:24:15.059 --> 00:24:22.860
这样的概念框架

00:24:19.200 --> 00:24:25.950
应用程序位置状态是不可变的

00:24:22.860 --> 00:24:28.289
运行的动作对象

00:24:25.950 --> 00:24:30.330
原子称为减速器的东西

00:24:28.289 --> 00:24:32.820
操纵国家，因为你

00:24:30.330 --> 00:24:35.970
在JavaScript中没有线程

00:24:32.820 --> 00:24:41.700
确实是原子状态

00:24:35.970 --> 00:24:43.500
一个你有一个你有一个非常

00:24:41.700 --> 00:24:45.120
我要进行可预测的状态转换

00:24:43.500 --> 00:24:47.130
在第二张幻灯片中讨论

00:24:45.120 --> 00:24:48.659
这只是给你一个例子

00:24:47.130 --> 00:24:51.000
很多人在哪里写了什么

00:24:48.659 --> 00:24:53.370
你知道回调驱动像

00:24:51.000 --> 00:24:54.990
每个秋千，你知道秋千程序员或

00:24:53.370 --> 00:24:56.850
只是在JavaScript中，您就知道了，但是

00:24:54.990 --> 00:24:58.710
单击按钮，然后编写函数

00:24:56.850 --> 00:25:00.960
在那个功能中

00:24:58.710 --> 00:25:02.909
如果你有一个jQuery，你会做得很好

00:25:00.960 --> 00:25:04.789
很多这样的东西在你身上

00:25:02.909 --> 00:25:07.980
可能会很复杂

00:25:04.789 --> 00:25:10.230
所有时间之间的相互作用

00:25:07.980 --> 00:25:12.149
这些事件如何正确发生，因为

00:25:10.230 --> 00:25:13.620
你以为你将能够

00:25:12.149 --> 00:25:16.260
做到jQuery的，它将

00:25:13.620 --> 00:25:18.450
按特定顺序回来，但喜欢

00:25:16.260 --> 00:25:20.789
如果您假设这总是

00:25:18.450 --> 00:25:22.919
将会在一定的时间发生

00:25:20.789 --> 00:25:24.990
会变得非常复杂和调试

00:25:22.919 --> 00:25:27.899
理解正在发生的事情可以

00:25:24.990 --> 00:25:31.289
变得非常复杂，所以发生了什么

00:25:27.899 --> 00:25:34.200
与redux和反应是当你

00:25:31.289 --> 00:25:36.600
最初不会触发事件

00:25:34.200 --> 00:25:38.250
你永远不会做任何其他的事

00:25:36.600 --> 00:25:40.649
比您创建的对象

00:25:38.250 --> 00:25:43.470
代表要求做某事， 

00:25:40.649 --> 00:25:45.419
你基本上把它放在一个队列中

00:25:43.470 --> 00:25:47.850
稍后将在外面进行处理

00:25:45.419 --> 00:25:49.980
您的代码确定性地

00:25:47.850 --> 00:25:52.320
然后那个东西

00:25:49.980 --> 00:25:55.559
流程，这是一个动作

00:25:52.320 --> 00:25:58.679
在React Redux Land中发生事件，然后稍后

00:25:55.559 --> 00:26:00.149
您带给您的动作事件处理器

00:25:58.679 --> 00:26:02.700
看到您将要执行此操作

00:26:00.149 --> 00:26:05.100
然后你把状态复制

00:26:02.700 --> 00:26:07.980
状态，您返回修改后的

00:26:05.100 --> 00:26:10.440
复制，所以这是副作用免费的权利

00:26:07.980 --> 00:26:12.899
因为你永远不会直接操纵一个

00:26:10.440 --> 00:26:15.590
说你总是复制状态和

00:26:12.899 --> 00:26:17.659
返回新的修改后的副本

00:26:15.590 --> 00:26:19.460
所以我有一些有趣的副作用

00:26:17.659 --> 00:26:21.679
因为你的动作事件结束了

00:26:19.460 --> 00:26:23.149
像个钢琴演奏者一样

00:26:21.679 --> 00:26:25.190
可以想像它是机械的

00:26:23.149 --> 00:26:27.620
磁带控制您的程序

00:26:25.190 --> 00:26:29.779
一个行动，一个行动，他们

00:26:27.620 --> 00:26:31.879
以某种顺序发生，这很容易

00:26:29.779 --> 00:26:34.070
您可以对此流进行审核

00:26:31.879 --> 00:26:36.049
行动，因为实际上只是你

00:26:34.070 --> 00:26:38.059
可以将其视为对象数组

00:26:36.049 --> 00:26:40.879
代表程序的动作

00:26:38.059 --> 00:26:43.279
需要采取，他们造成了一系列

00:26:40.879 --> 00:26:47.080
状态转换的原因在于

00:26:43.279 --> 00:26:49.909
总是被修改为版权

00:26:47.080 --> 00:26:51.710
过渡非常容易

00:26:49.909 --> 00:26:53.690
明白，所以假设您得到了

00:26:51.710 --> 00:26:56.450
待办事项列表正确，您一开始就是空的

00:26:53.690 --> 00:26:58.610
待办事项列表将其添加到执行两个操作中

00:26:56.450 --> 00:27:02.049
一个要做的遗产加它做两个

00:26:58.610 --> 00:27:05.090
去删除它做回到右

00:27:02.049 --> 00:27:07.429
这种方法可以让您做一些非常

00:27:05.090 --> 00:27:10.399
测试方面有趣的事情

00:27:07.429 --> 00:27:11.929
在调试方面，比如说

00:27:10.399 --> 00:27:14.749
您在应用程序中放置了功能切换

00:27:11.929 --> 00:27:16.009
如果你有一个地方，你会说

00:27:14.749 --> 00:27:17.809
您有遇到问题的用户

00:27:16.009 --> 00:27:19.249
有一些设施，你可以打开一个

00:27:17.809 --> 00:27:21.740
未来的切换

00:27:19.249 --> 00:27:23.539
记录一系列的动作

00:27:21.740 --> 00:27:24.889
动作以及何时发生错误

00:27:23.539 --> 00:27:27.259
推动了一系列行动

00:27:24.889 --> 00:27:29.690
对象到服务器，这样您就可以

00:27:27.259 --> 00:27:31.490
下拉那一系列动作对象

00:27:29.690 --> 00:27:34.340
您的开发环境

00:27:31.490 --> 00:27:36.259
如果正确编写，请重播

00:27:34.340 --> 00:27:38.629
您遵循可以播放的规则

00:27:36.259 --> 00:27:41.059
用户系列的动作对象和

00:27:38.629 --> 00:27:43.429
您将获得完全相同的状态

00:27:41.059 --> 00:27:44.539
确定性的，这很有趣

00:27:43.429 --> 00:27:46.639
知道事情变得复杂

00:27:44.539 --> 00:27:48.320
你开始走下去，真的还可以吗

00:27:46.639 --> 00:27:50.600
确定您是否拥有

00:27:48.320 --> 00:27:53.059
计算机程序及其确定性

00:27:50.600 --> 00:27:55.129
不管它有多复杂

00:27:53.059 --> 00:27:58.429
重播它，机械地你

00:27:55.129 --> 00:27:59.690
将获得相同的状态，所以这让

00:27:58.429 --> 00:28:02.029
你做一些有趣的事情

00:27:59.690 --> 00:28:04.580
就像说你很好，让我们接受这个

00:28:02.029 --> 00:28:06.529
假设您要测试

00:28:04.580 --> 00:28:08.629
就像你说的那样，这需要你

00:28:06.529 --> 00:28:10.369
数小时的互动才能达到目的

00:28:08.629 --> 00:28:12.860
状态，然后这就是您的错误所在

00:28:10.369 --> 00:28:15.559
开始发生的很好，您可以序列化

00:28:12.860 --> 00:28:17.509
您知道可以打开包装的状态

00:28:15.559 --> 00:28:19.970
序列化状态并开始播放

00:28:17.509 --> 00:28:21.889
针对它的一系列动作和

00:28:19.970 --> 00:28:23.600
您将再次能够

00:28:21.889 --> 00:28:27.409
从那里向前移动，它可以让您

00:28:23.600 --> 00:28:29.510
例如快照时间，时间旅行

00:28:27.409 --> 00:28:31.700
想要撤消就对了

00:28:29.510 --> 00:28:33.530
要执行撤消操作，您只是按一下

00:28:31.700 --> 00:28:36.140
应用状态回到

00:28:33.530 --> 00:28:38.150
以前的状态，而您正在这样做

00:28:36.140 --> 00:28:41.090
因为整个应用程序状态是

00:28:38.150 --> 00:28:43.190
在单个状态对象中

00:28:41.090 --> 00:28:45.140
应用程式会重新回到您的位置

00:28:43.190 --> 00:28:46.970
知道你是否说过撤消删除

00:28:45.140 --> 00:28:50.810
有两个有两个要做的对象

00:28:46.970 --> 00:28:52.250
再次，这就是我所涵盖的

00:28:50.810 --> 00:28:54.950
在这里，但我认为这样更容易

00:28:52.250 --> 00:28:57.200
是的，用于测试

00:28:54.950 --> 00:28:58.970
再一次，你知道你可以拥有你的

00:28:57.200 --> 00:29:01.310
在测试环境中模拟状态

00:28:58.970 --> 00:29:03.380
想测试您的应用程序，您可以

00:29:01.310 --> 00:29:05.900
只需恢复此复杂的用户状态

00:29:03.380 --> 00:29:07.700
代表长期的互动

00:29:05.900 --> 00:29:09.530
从那里开始播放

00:29:07.700 --> 00:29:11.150
总是喜欢重播所有

00:29:09.530 --> 00:29:17.930
从一开始就有点像

00:29:11.150 --> 00:29:19.970
硒，所以滤泡器是一个程序

00:29:17.930 --> 00:29:22.880
上是我的网络扩展

00:29:19.970 --> 00:29:26.300
由穆斯林赞助实施

00:29:22.880 --> 00:29:28.550
与他们合作，就是让你

00:29:26.300 --> 00:29:31.130
首先是演示网络

00:29:28.550 --> 00:29:33.710
扩展API，但随后

00:29:31.130 --> 00:29:36.530
就像让您分析网页浏览

00:29:33.710 --> 00:29:38.630
习惯也一样大

00:29:36.530 --> 00:29:40.850
像Facebook和Google这样的指南

00:29:38.630 --> 00:29:44.000
正确分析您的网络浏览习惯

00:29:40.850 --> 00:29:46.910
现在，这是让你形象化

00:29:44.000 --> 00:29:49.760
你的滤泡，那么什么是滤镜

00:29:46.910 --> 00:29:52.280
气泡过滤器气泡真的是另一个

00:29:49.760 --> 00:29:53.540
认知偏见这个词对吧

00:29:52.280 --> 00:29:56.780
人们听过这个词认知

00:29:53.540 --> 00:29:58.610
偏见，例如认知偏见

00:29:56.780 --> 00:30:00.380
我应该是个Java的家伙

00:29:58.610 --> 00:30:02.360
不像JavaScript评论是这样

00:30:00.380 --> 00:30:05.120
没错，这是一种认知偏见

00:30:02.360 --> 00:30:07.220
这是我们看到的一组假设

00:30:05.120 --> 00:30:09.290
通过世界有时

00:30:07.220 --> 00:30:10.370
假设可能像您一样准确

00:30:09.290 --> 00:30:12.200
知道不应该跳下悬崖

00:30:10.370 --> 00:30:13.730
有时他们可能只是事物

00:30:12.200 --> 00:30:15.770
您一路走来， 

00:30:13.730 --> 00:30:18.820
那是你认为是真的，也许

00:30:15.770 --> 00:30:21.800
他们是真的，也许不是， 

00:30:18.820 --> 00:30:23.420
这一直是典型的权利，我们

00:30:21.800 --> 00:30:26.210
与我们周围的人在一起

00:30:23.420 --> 00:30:27.770
就像我们读杂志和报纸一样

00:30:26.210 --> 00:30:29.420
关于我们喜欢你的事情，如果我们知道

00:30:27.770 --> 00:30:31.280
就像骑自行车，我们读骑自行车

00:30:29.420 --> 00:30:33.380
我们对骑自行车了解很多的杂志

00:30:31.280 --> 00:30:36.920
我们可能不知道编织，所以

00:30:33.380 --> 00:30:39.740
那很正常，但是现在搜索

00:30:36.920 --> 00:30:41.720
引擎和社交网络发挥着

00:30:39.740 --> 00:30:43.160
这些在我们的生活中起着主导作用

00:30:41.720 --> 00:30:46.430
组织是你

00:30:43.160 --> 00:30:49.220
非常复杂的工具来监控我们的

00:30:46.430 --> 00:30:52.190
行为并利用我们的优势

00:30:49.220 --> 00:30:55.190
认知偏见来控制我们的浏览

00:30:52.190 --> 00:30:56.530
习惯，所以你知道例如Facebook 

00:30:55.190 --> 00:30:59.660
他们正在使用最先进的

00:30:56.530 --> 00:31:01.880
深度学习可用的技术

00:30:59.660 --> 00:31:03.590
记录所有这些，我的意思是他们发明了很多

00:31:01.880 --> 00:31:05.930
他们为什么会选择大数据呢？ 

00:31:03.590 --> 00:31:09.760
很好地分析用户

00:31:05.930 --> 00:31:12.200
行为并向您发送输入

00:31:09.760 --> 00:31:14.330
从理论上讲，您是

00:31:12.200 --> 00:31:16.310
会喜欢最正确的，这样可能

00:31:14.330 --> 00:31:18.020
成为关键绩效指标之一

00:31:16.310 --> 00:31:20.450
他们正在使用的是您按了多少

00:31:18.020 --> 00:31:22.760
喜欢，但显然他们还有其他

00:31:20.450 --> 00:31:24.620
他们想保留的事情在他们的议程上

00:31:22.760 --> 00:31:26.480
您在系统上他们想要您

00:31:24.620 --> 00:31:28.520
知道他们想要您在Facebook上的时间

00:31:26.480 --> 00:31:30.470
爆炸很长时间，他们可以为您服务

00:31:28.520 --> 00:31:32.840
他们希望您点击很多广告

00:31:30.470 --> 00:31:34.490
广告，如果他们注意到

00:31:32.840 --> 00:31:36.590
像你这样的浏览习惯

00:31:34.490 --> 00:31:38.750
点击某些类型的广告

00:31:36.590 --> 00:31:41.180
要尝试看看你知道的

00:31:38.750 --> 00:31:43.340
朋友，寻找看起来像的帖子

00:31:41.180 --> 00:31:45.950
类似于发布的内容

00:31:43.340 --> 00:31:48.320
像您这样的人可以点击广告

00:31:45.950 --> 00:31:50.870
而且我们没有那些工具

00:31:48.320 --> 00:31:52.940
自己了解我们自己的浏览

00:31:50.870 --> 00:31:55.040
习惯，我们甚至看不到这些

00:31:52.940 --> 00:31:56.960
事情是正确的，所以在某些在某些

00:31:55.040 --> 00:31:59.300
在某些情况下，这些组织

00:31:56.960 --> 00:32:01.550
比我们更了解我们的行为

00:31:59.300 --> 00:32:02.900
了解我们自己的行为

00:32:01.550 --> 00:32:06.950
因为它们非常复杂

00:32:02.900 --> 00:32:09.710
知识，所以过滤器起泡器的目标

00:32:06.950 --> 00:32:13.310
试图给我们一些工具去做

00:32:09.710 --> 00:32:15.710
分析我们自己的行为

00:32:13.310 --> 00:32:18.170
确实会过滤起泡器吗

00:32:15.710 --> 00:32:20.660
类似于垃圾邮件过滤器的本质

00:32:18.170 --> 00:32:22.990
每个人都使用垃圾邮件过滤器

00:32:20.660 --> 00:32:25.610
谁在这个房间里使用垃圾邮件过滤器

00:32:22.990 --> 00:32:28.130
你想过的每个人都对

00:32:25.610 --> 00:32:31.400
垃圾邮件过滤器做什么

00:32:28.130 --> 00:32:35.000
您已经提交了一个使用

00:32:31.400 --> 00:32:37.520
统计分析权威

00:32:35.000 --> 00:32:39.590
决定消息是否到达

00:32:37.520 --> 00:32:41.900
如果决定的话，你说的对

00:32:39.590 --> 00:32:44.240
从统计上讲该消息

00:32:41.900 --> 00:32:46.580
匹配垃圾邮件，它永远不会进入您的

00:32:44.240 --> 00:32:51.200
收件箱是一个非常强大的主意

00:32:46.580 --> 00:32:53.600
准确度确实是

00:32:51.200 --> 00:32:55.340
令人印象深刻的垃圾邮件过滤人员

00:32:53.600 --> 00:32:56.750
到九十九点九九九

00:32:55.340 --> 00:32:59.090
百分之八

00:32:56.750 --> 00:33:01.160
可能是准确的，如果不是那样

00:32:59.090 --> 00:33:02.870
准确的人不会容忍它，但是

00:33:01.160 --> 00:33:05.690
垃圾邮件过滤器的有趣之处在于

00:33:02.870 --> 00:33:07.970
他们不在乎这是垃圾邮件对吗

00:33:05.690 --> 00:33:10.730
纯粹是统计分析

00:33:07.970 --> 00:33:13.130
简单的贝叶斯分析

00:33:10.730 --> 00:33:15.290
接受您的讯息说打破它们

00:33:13.130 --> 00:33:17.480
分成五个词，你就是

00:33:15.290 --> 00:33:19.670
对什么进行统计分析

00:33:17.480 --> 00:33:22.310
五个单词组出现在什么

00:33:19.670 --> 00:33:24.020
邮件组，所以它不在乎

00:33:22.310 --> 00:33:26.090
您正在尝试的模式是什么

00:33:24.020 --> 00:33:28.400
匹配，也不必是一个

00:33:26.090 --> 00:33:31.550
一种模式一桶模式

00:33:28.400 --> 00:33:33.200
例如我可以听到一些东西

00:33:31.550 --> 00:33:36.170
那种把我吹走的是

00:33:33.200 --> 00:33:39.260
他们评估SAT论文的方式

00:33:36.170 --> 00:33:41.210
现在他们使用贝叶斯分析了吗

00:33:39.260 --> 00:33:43.760
他们采取，他们使语料库

00:33:41.210 --> 00:33:45.500
像这些都是写得很好的论文

00:33:43.760 --> 00:33:47.630
是写得不好的论文，然后他们

00:33:45.500 --> 00:33:50.000
只是将论文输入到其中，就像

00:33:47.630 --> 00:33:52.010
一个垃圾邮件过滤器，它比人类要好

00:33:50.000 --> 00:33:54.830
精度达到九十九点

00:33:52.010 --> 00:33:57.080
九九八成

00:33:54.830 --> 00:33:59.090
是愚蠢的文盲文章，还是这是

00:33:57.080 --> 00:34:01.160
写得好，因为不好

00:33:59.090 --> 00:34:03.800
例如语法是一个

00:34:01.160 --> 00:34:05.660
统计资料中某些词是

00:34:03.800 --> 00:34:07.250
在syriza中使用，它们不应该

00:34:05.660 --> 00:34:09.530
对，那是不好的语法

00:34:07.250 --> 00:34:11.210
所以因为你可以做任何事情

00:34:09.530 --> 00:34:13.879
巴特勒所做的过滤器是什么

00:34:11.210 --> 00:34:16.399
创建一系列的文本语料库

00:34:13.879 --> 00:34:18.020
基本上是您的标签网址，所以让我们

00:34:16.399 --> 00:34:20.120
你刚走的时候说真的很简单

00:34:18.020 --> 00:34:22.159
去这个页面上有很棒的东西

00:34:20.120 --> 00:34:24.679
这个页面上有愚蠢的东西

00:34:22.159 --> 00:34:27.470
将要建立两个清单的清单

00:34:24.679 --> 00:34:29.929
网址系统将读取

00:34:27.470 --> 00:34:31.940
这些页面并建立统计数据

00:34:29.929 --> 00:34:35.419
令人敬畏和愚蠢的形象

00:34:31.940 --> 00:34:38.149
这样您就可以整个系统

00:34:35.419 --> 00:34:40.550
可插拔，因此源可插拔

00:34:38.149 --> 00:34:41.899
分类器分类器是可插入的

00:34:40.550 --> 00:34:45.620
然后输出

00:34:41.899 --> 00:34:47.870
分类是可插入的，因此简单

00:34:45.620 --> 00:34:49.970
版本可能会查看您所在的页面

00:34:47.870 --> 00:34:52.190
目前正在看它通过

00:34:49.970 --> 00:34:55.220
分类器将其与两者进行比较

00:34:52.190 --> 00:34:56.990
然后进行语料库的分类

00:34:55.220 --> 00:34:58.640
显示在您说的下拉菜单中

00:34:56.990 --> 00:35:00.290
这个页面很棒，这个页面是

00:34:58.640 --> 00:35:00.770
愚蠢的，但你可以做其他的事情

00:35:00.290 --> 00:35:04.970
对

00:35:00.770 --> 00:35:08.270
你可以敲我的键盘

00:35:04.970 --> 00:35:11.390
你可以相信我的来源是

00:35:08.270 --> 00:35:14.390
我的浏览历史记录的最后一年和

00:35:11.390 --> 00:35:16.730
水槽是一个完整的新文件夹，我要去

00:35:14.390 --> 00:35:18.980
在我的书签中创建，以便我可以

00:35:16.730 --> 00:35:22.070
我整个过去的浏览历史记录

00:35:18.980 --> 00:35:24.020
将每个页面的每个内容进行比较

00:35:22.070 --> 00:35:26.359
它是为了令人敬畏或愚蠢， 

00:35:24.020 --> 00:35:28.700
一个新文件夹下面有两个文件夹

00:35:26.359 --> 00:35:30.440
真棒和愚蠢，我的个人

00:35:28.700 --> 00:35:32.840
浏览历史将自动

00:35:30.440 --> 00:35:34.220
陷入愚蠢和愚蠢的想法

00:35:32.840 --> 00:35:36.500
关于你将要做什么

00:35:34.220 --> 00:35:39.170
自己去经历和评估

00:35:36.500 --> 00:35:41.030
您自己的历史浏览年份

00:35:39.170 --> 00:35:43.970
在其中寻找模式的历史

00:35:41.030 --> 00:35:46.070
那和这些分类是

00:35:43.970 --> 00:35:48.170
也可插拔，我们正在努力

00:35:46.070 --> 00:35:50.599
最初是一个，我们要写一个

00:35:48.170 --> 00:35:53.960
 Java服务器Java JavaScript服务器为

00:35:50.599 --> 00:35:56.599
好吧，但我什至在做一个WordPress的

00:35:53.960 --> 00:35:57.550
插件，因此任何使用WordPress的人都可以设置

00:35:56.599 --> 00:35:59.990
自己的小私人

00:35:57.550 --> 00:36:01.880
分类服务器，以便他们和

00:35:59.990 --> 00:36:04.310
他们的朋友可以一起做

00:36:01.880 --> 00:36:06.230
他们自己的内容分类和

00:36:04.310 --> 00:36:10.010
分享这些分类并建立

00:36:06.230 --> 00:36:12.320
他们作为一个小组，所以你可以知道

00:36:10.010 --> 00:36:14.330
除了这个简单的例子，让我们

00:36:12.320 --> 00:36:16.550
说你可以接受《纽约时报》 

00:36:14.330 --> 00:36:19.369
就像《纽约时报》最近五年一样

00:36:16.550 --> 00:36:23.119
故事并按部门分开

00:36:19.369 --> 00:36:24.859
所以你知道体育的政治艺术等等

00:36:23.119 --> 00:36:26.510
然后，如果您想从

00:36:24.859 --> 00:36:28.609
去年您的浏览历史记录

00:36:26.510 --> 00:36:31.099
看起来像您正在寻找的东西

00:36:28.609 --> 00:36:32.630
在体育页面上，您可以再次进入

00:36:31.099 --> 00:36:34.070
通过它，它会掉进一个

00:36:32.630 --> 00:36:36.200
文件夹，您可以转到

00:36:34.070 --> 00:36:38.119
运动文件夹，您会看到自己的页面

00:36:36.200 --> 00:36:40.400
您访问过的网站看起来像他们

00:36:38.119 --> 00:36:45.400
关于体育运动，那基本上就是

00:36:40.400 --> 00:36:47.920
我们可以进行质量检查的想法

00:36:45.400 --> 00:36:50.540
我将把这些放起来，以便您可以

00:36:47.920 --> 00:36:52.400
写下URL，如果需要的话

00:36:50.540 --> 00:36:54.820
基本上我的谈话，我很高兴

00:36:52.400 --> 00:36:54.820
回答任何问题

00:36:55.020 --> 00:37:03.080
 [掌声] 

00:36:59.950 --> 00:37:05.570
是的，绝对可以

00:37:03.080 --> 00:37:10.100
绝对可以的

00:37:05.570 --> 00:37:12.170
因此，通过反应和还原你，他们他们

00:37:10.100 --> 00:37:14.690
具有完全无头模式

00:37:12.170 --> 00:37:17.240
服务器端渲染等，如果您

00:37:14.690 --> 00:37:20.360
想要预加载渲染的缓存

00:37:17.240 --> 00:37:22.460
您所有产品页面中的

00:37:20.360 --> 00:37:24.680
当有人要求产品时，您

00:37:22.460 --> 00:37:26.900
您知道基于Java的网站

00:37:24.680 --> 00:37:29.000
您正在发送HTML 

00:37:26.900 --> 00:37:31.460
在浏览器中使用相同

00:37:29.000 --> 00:37:33.260
 Java中的服务器上的模板

00:37:31.460 --> 00:37:36.380
生成它们，是的，您绝对可以做到

00:37:33.260 --> 00:37:39.710
并以Redux为例

00:37:36.380 --> 00:37:42.140
也可以完全不渲染

00:37:39.710 --> 00:37:44.690
 HTML并使用，如果您只想

00:37:42.140 --> 00:37:47.390
使用减速器的逻辑和动作

00:37:44.690 --> 00:37:48.980
你可以尽自己所能去做

00:37:47.390 --> 00:37:50.750
在那里，你只是开始推动

00:37:48.980 --> 00:37:53.450
进入状态，你只是不依附

00:37:50.750 --> 00:37:55.700
视图可以像这样反对

00:37:53.450 --> 00:37:57.770
也这样做，但绝对不是

00:37:55.700 --> 00:37:59.840
你不仅可以做出反应

00:37:57.770 --> 00:38:05.660
但是有几个平台，例如view 

00:37:59.840 --> 00:38:08.260
嫉妒也将支持任何人

00:38:05.660 --> 00:38:08.260
否则

00:38:12.200 --> 00:38:18.900
可以使用NPM的同一拍子

00:38:15.900 --> 00:38:21.900
哦，再次抱歉，for nodejs 

00:38:18.900 --> 00:38:25.710
您拥有NPM语言世界

00:38:21.900 --> 00:38:28.099
您可以使用Nashorn运行NPM，然后

00:38:25.710 --> 00:38:30.089
可以实际使用您的咕actually声

00:38:28.099 --> 00:38:34.980
 Nashorn现在差不多

00:38:30.089 --> 00:38:36.599
与node.js处于API奇偶校验的位置

00:38:34.980 --> 00:38:38.700
可能会有一些表现

00:38:36.599 --> 00:38:40.950
差异，但您基本上可以运行

00:38:38.700 --> 00:38:44.910
您可以在其中运行的JavaScript库

00:38:40.950 --> 00:38:47.700
您可以在nashua中运行的node.js，如果

00:38:44.910 --> 00:38:49.559
您可以使用NPM相同的工具

00:38:47.700 --> 00:38:51.960
您已经习惯于构建

00:38:49.559 --> 00:38:54.720
您运行的应用程序

00:38:51.960 --> 00:38:56.759
 nashua，如果您通过脚本执行

00:38:54.720 --> 00:38:58.230
经理，它倾向于重建

00:38:56.759 --> 00:39:00.119
每次您的国家和环境

00:38:58.230 --> 00:39:02.430
要求一个新实例，您不必

00:39:00.119 --> 00:39:05.460
以这种方式可以实例化并

00:39:02.430 --> 00:39:07.109
您可以实例化自然运行JIT 

00:39:05.460 --> 00:39:09.630
编译口译员，您可以继续

00:39:07.109 --> 00:39:11.999
它周围的状态，所以你没有

00:39:09.630 --> 00:39:14.599
有那种行为，你只是不是

00:39:11.999 --> 00:39:14.599
单线

00:39:19.960 --> 00:39:27.940
是的，肯定像职业城市一样

00:39:25.150 --> 00:39:31.810
走路时说话的歌声

00:39:27.940 --> 00:39:34.060
真的，你知道，所以卡尔比是一个

00:39:31.810 --> 00:39:36.010
有趣的Java环境

00:39:34.060 --> 00:39:37.690
有些东西是声音

00:39:36.010 --> 00:39:39.580
可以识别的环境

00:39:37.690 --> 00:39:44.770
实际上给你一些色调， 

00:39:39.580 --> 00:40:02.980
来自说话者的拐点数据

00:39:44.770 --> 00:40:04.720
 di yes yeah the分类为

00:40:02.980 --> 00:40:07.630
就分类器框架而言

00:40:04.720 --> 00:40:09.400
有关过滤器起泡器只是

00:40:07.630 --> 00:40:11.590
有兴趣的话，您好嘿分类器

00:40:09.400 --> 00:40:14.980
这是一些文字，您认为标签是什么

00:40:11.590 --> 00:40:17.470
因此，它是有目的的

00:40:14.980 --> 00:40:20.320
通用权，所以如果您想使用

00:40:17.470 --> 00:40:24.850
 Veck的实现方式

00:40:20.320 --> 00:40:27.310
甚至就像嗯，什么是Google框架

00:40:24.850 --> 00:40:28.890
张量流就像你想拥有你

00:40:27.310 --> 00:40:31.300
知道它甚至不必是Java 

00:40:28.890 --> 00:40:32.980
您知道的javascript 

00:40:31.300 --> 00:40:35.920
导致JavaScript环境

00:40:32.980 --> 00:40:37.630
拿到标签袋我不读

00:40:35.920 --> 00:40:39.310
关于特卫强一词，我尝试玩

00:40:37.630 --> 00:40:41.890
用一点点，实际上

00:40:39.310 --> 00:40:46.960
有一些很酷的东西可以切成小方块

00:40:41.890 --> 00:40:48.910
 comm为太阳能搜索开源

00:40:46.960 --> 00:40:51.400
和基于Java的搜索引擎

00:40:48.910 --> 00:40:54.310
告诉维克，如果你做的话

00:40:51.400 --> 00:40:57.340
就像您搜寻数据科学家一样

00:40:54.310 --> 00:40:59.490
您将获得Java工作，因为

00:40:57.340 --> 00:41:03.010
 Veck就像一个字

00:40:59.490 --> 00:41:05.440
关联那些Java和数据

00:41:03.010 --> 00:41:10.170
科学家经常有一个

00:41:05.440 --> 00:41:15.430
彼此很酷的关系

00:41:10.170 --> 00:41:19.210
有一个哦，有iOS和

00:41:15.430 --> 00:41:21.550
和Android实施， 

00:41:19.210 --> 00:41:23.980
也是本机Web实施，但是

00:41:21.550 --> 00:41:24.670
这与SWT的想法相同

00:41:23.980 --> 00:41:26.710
日食

00:41:24.670 --> 00:41:30.670
那是你在写一个程序

00:41:26.710 --> 00:41:32.950
 JavaScript，它正在实例化本机UI 

00:41:30.670 --> 00:41:35.140
同行，然后你

00:41:32.950 --> 00:41:40.210
而不是像秋千那样后方重写了所有

00:41:35.140 --> 00:41:41.950
 UI在Java中是对等的，但在SWT中

00:41:40.210 --> 00:41:44.680
它剪辑的内容就是这样写的

00:41:41.950 --> 00:41:48.280
实际上使用来自

00:41:44.680 --> 00:41:50.740
操作系统，所以本机反应是

00:41:48.280 --> 00:41:54.010
这种相同的想法，但对于建筑

00:41:50.740 --> 00:41:55.210
使用JavaScript的用户界面，这样我就不会

00:41:54.010 --> 00:41:56.619
知道是否像我说的那样

00:41:55.210 --> 00:41:59.290
有趣的问题，我会调查一下

00:41:56.619 --> 00:42:02.859
并在我的网站上放一些东西

00:41:59.290 --> 00:42:04.630
你应该能够做到

00:42:02.859 --> 00:42:06.940
有人应该这样做

00:42:04.630 --> 00:42:08.740
好主意是做一个反应本机端口

00:42:06.940 --> 00:42:11.079
 Java，这样您就可以

00:42:08.740 --> 00:42:13.329
对运行在其上的本机应用程序做出反应

00:42:11.079 --> 00:42:15.099
 iOS和Android，您可以运行它

00:42:13.329 --> 00:42:16.690
在Java VM上，它将是一个桌面

00:42:15.099 --> 00:42:21.579
地图位置的工作

00:42:16.690 --> 00:42:23.230
很酷，所以理论上可能像我说的那样

00:42:21.579 --> 00:42:24.760
不知道好像是那种

00:42:23.230 --> 00:42:26.619
某处某人的事

00:42:24.760 --> 00:42:37.300
就像我很无聊，我要尝试这个，所以我

00:42:26.619 --> 00:42:40.329
我要去看你哥们

00:42:37.300 --> 00:42:42.839
好吧，我想我会把它交给

00:42:40.329 --> 00:42:53.280
我们在播音员和主持人中讲

00:42:42.839 --> 00:42:56.619
布鲁诺的呼啦好吧，就这样吧

00:42:53.280 --> 00:42:59.530
再次感谢你，你知道吗

00:42:56.619 --> 00:43:00.910
因为我们拥有了那是一个新的

00:42:59.530 --> 00:43:03.640
我们在这里的事情我们还没有谈过

00:43:00.910 --> 00:43:07.000
关于你知道甚至得到他的java 

00:43:03.640 --> 00:43:12.150
 javascript对话，但我们确实有

00:43:07.000 --> 00:43:12.150
我们是我们Oracle的好朋友

