WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.440 --> 00:00:09.500
哦，谢谢你来这里演讲

00:00:07.459 --> 00:00:11.360
关于类似的配置管理

00:00:09.500 --> 00:00:13.459
 kubernetes我知道kubernetes喜欢

00:00:11.360 --> 00:00:16.330
它超级受欢迎，但这是 Spring 

00:00:13.459 --> 00:00:18.740
靴子会议，所以我会尝试申请

00:00:16.330 --> 00:00:22.010
被称为kubernetes的会议

00:00:18.740 --> 00:00:25.130
收件人到 spring boot 我是尼古拉

00:00:22.010 --> 00:00:26.900
弗兰克尔这实际上是我的第二个

00:00:25.130 --> 00:00:30.759
 Spring 我哦，我就像两三个

00:00:26.900 --> 00:00:33.739
年前我不记得我去过

00:00:30.759 --> 00:00:36.969
做超过17项咨询工作

00:00:33.739 --> 00:00:40.640
作为Java开发人员多年

00:00:36.969 --> 00:00:42.440
建筑师的职位，六个月前我

00:00:40.640 --> 00:00:46.340
决定要好得多

00:00:42.440 --> 00:00:48.949
付费参加会议做演讲

00:00:46.340 --> 00:00:52.520
啤酒满足人们，这是一种赚钱的好方法

00:00:48.949 --> 00:00:56.449
我一直很感兴趣的钱

00:00:52.520 --> 00:00:58.820
就像墙外的东西

00:00:56.449 --> 00:01:01.219
你知道有一个开发者

00:00:58.820 --> 00:01:06.470
空间，如果你是谁，这里是一个

00:01:01.219 --> 00:01:09.920
开发人员好吧，几乎所有人

00:01:06.470 --> 00:01:11.720
您创建软件包后，它不是

00:01:09.920 --> 00:01:15.020
您的问题了，再发送给您

00:01:11.720 --> 00:01:17.810
之后，无论发生什么

00:01:15.020 --> 00:01:21.770
我不知道为什么我已经

00:01:17.810 --> 00:01:24.260
对之后发生的事情感兴趣

00:01:21.770 --> 00:01:26.120
我的第一个念头就是

00:01:24.260 --> 00:01:28.070
之前的内容是关于

00:01:26.120 --> 00:01:30.350
Spring Boot Actuator

00:01:28.070 --> 00:01:33.980
超级棒的工程和

00:01:30.350 --> 00:01:35.630
今天是关于我工作的kubernetes 

00:01:33.980 --> 00:01:38.420
公司叫做规模蛋

00:01:35.630 --> 00:01:40.280
不使用的欧洲云提供商

00:01:38.420 --> 00:01:46.510
云，但每个人都做谁

00:01:40.280 --> 00:01:53.780
使用谁正在使用亚马逊的云

00:01:46.510 --> 00:01:55.520
 Google是的，亚洲，微软，亚洲，好的

00:01:53.780 --> 00:01:57.740
所有那些不错的公司

00:01:55.520 --> 00:02:03.200
美国公司，谁知道

00:01:57.740 --> 00:02:07.400
云动哈哈哈几手和

00:02:03.200 --> 00:02:10.940
当然少于我们使用的所有

00:02:07.400 --> 00:02:13.670
云法是美国法律，但

00:02:10.940 --> 00:02:14.150
就像GDP一样供应全世界

00:02:13.670 --> 00:02:15.950
啊但是

00:02:14.150 --> 00:02:18.530
诗句告诉你，如果你

00:02:15.950 --> 00:02:20.780
与美国公司签约

00:02:18.530 --> 00:02:25.310
政府可以在任何地方访问您的数据

00:02:20.780 --> 00:02:28.090
即使你像

00:02:25.310 --> 00:02:32.480
就像我的数据中心在巴塞罗那一样

00:02:28.090 --> 00:02:34.579
如果您重视自己的数据

00:02:32.480 --> 00:02:36.859
客户，如果您重视自己的数据，我

00:02:34.579 --> 00:02:39.590
鼓励你看云行为

00:02:36.859 --> 00:02:41.780
了解什么细节

00:02:39.590 --> 00:02:46.670
结果是and和检查

00:02:41.780 --> 00:02:49.220
反正欧洲云提供商如此

00:02:46.670 --> 00:02:51.440
您可以在Wikipedia上找到有关

00:02:49.220 --> 00:02:54.680
配置管理，这是一个超级

00:02:51.440 --> 00:02:59.150
一段很好的文字告诉你

00:02:54.680 --> 00:03:01.340
当您认为时，一般术语

00:02:59.150 --> 00:03:05.659
关于配置管理的你

00:03:01.340 --> 00:03:07.430
想想那些，当然

00:03:05.659 --> 00:03:12.950
配置管理的第一步

00:03:07.430 --> 00:03:16.459
是您试图使自己的生活脚本

00:03:12.950 --> 00:03:18.349
通过创建脚本更容易，但是对于一个

00:03:16.459 --> 00:03:21.019
两台机器，五台机器

00:03:18.349 --> 00:03:23.269
可能会在某些时候工作的机器

00:03:21.019 --> 00:03:24.980
但是你注意到那不是

00:03:23.269 --> 00:03:28.250
扩展规模，因为那时你有很多

00:03:24.980 --> 00:03:31.790
机器，现在我们处于一个时代

00:03:28.250 --> 00:03:33.980
我们没有像宠物一样的小型服务器

00:03:31.790 --> 00:03:36.290
当无法正常工作时要烧水壶

00:03:33.980 --> 00:03:39.530
我们杀死了他们，我们将发射他们， 

00:03:36.290 --> 00:03:43.069
我们要确保这些是

00:03:39.530 --> 00:03:45.979
就像我们之前记得的一样

00:03:43.069 --> 00:03:48.620
多年前发生了什么事

00:03:45.979 --> 00:03:50.659
生产，虽然我们部署喜欢

00:03:48.620 --> 00:03:53.659
三个生产之前我们没有注意到

00:03:50.659 --> 00:03:55.549
然后是我的问题，但为什么我的意思是

00:03:53.659 --> 00:03:58.069
环境应该是

00:03:55.549 --> 00:04:00.319
一样，但是当然不是

00:03:58.069 --> 00:04:04.729
无法手动保留您的

00:04:00.319 --> 00:04:07.099
像一样的配置等等

00:04:04.729 --> 00:04:11.000
就像很多新工具一样

00:04:07.099 --> 00:04:14.120
厨师的灵魂状态和西比尔

00:04:11.000 --> 00:04:18.079
应该为你在这里做的

00:04:14.120 --> 00:04:23.389
是配置管理用户，不是

00:04:18.079 --> 00:04:27.380
这么多人偶厨师和西比尔

00:04:23.389 --> 00:04:27.950
这很有趣，现在我总是添加一个

00:04:27.380 --> 00:04:31.400
问题

00:04:27.950 --> 00:04:33.320
 Ansible，因为一旦我了解了p 

00:04:31.400 --> 00:04:35.750
和厨师对我来说很难

00:04:33.320 --> 00:04:38.300
回到类似的键入命令，因为

00:04:35.750 --> 00:04:40.070
你什么时候会做什么

00:04:38.300 --> 00:04:43.100
配置管理是

00:04:40.070 --> 00:04:46.070
基本上你说你描述你

00:04:43.100 --> 00:04:49.100
声明系统状态，您

00:04:46.070 --> 00:04:51.890
希望系统处于运行状态，然后您

00:04:49.100 --> 00:04:55.550
信任配置管理工具

00:04:51.890 --> 00:04:59.030
使该系统保持这种状态

00:04:55.550 --> 00:05:00.650
当然你的系统会漂移，然后

00:04:59.030 --> 00:05:02.840
这是配置的角色

00:05:00.650 --> 00:05:05.960
总是喜欢推的管理工具

00:05:02.840 --> 00:05:08.870
回到原来的地方

00:05:05.960 --> 00:05:13.130
陈述式的力量

00:05:08.870 --> 00:05:16.070
配置管理是和结果

00:05:13.130 --> 00:05:18.800
社区，你没有这个

00:05:16.070 --> 00:05:22.370
问题了，因为你有

00:05:18.800 --> 00:05:27.590
无论您在哪里使用，图像都是不变的

00:05:22.370 --> 00:05:29.450
码头工人或不是他们可变的图像，所以

00:05:27.590 --> 00:05:31.520
他们不应该改变，那么

00:05:29.450 --> 00:05:35.900
配置管理的重点

00:05:31.520 --> 00:05:38.020
这种情况下，问题是同一张图片

00:05:35.900 --> 00:05:42.290
需要部署在不同的位置

00:05:38.020 --> 00:05:45.190
环境，即使图像是

00:05:42.290 --> 00:05:50.300
不可变，应在

00:05:45.190 --> 00:05:53.770
像以前一样的不同方式

00:05:50.300 --> 00:05:56.210
战争，然后将其部署到Tomcat中， 

00:05:53.770 --> 00:05:58.550
当然，如果您将其部署在

00:05:56.210 --> 00:06:00.410
开发环境或类似

00:05:58.550 --> 00:06:04.250
暂存环境数据库

00:06:00.410 --> 00:06:05.810
到达是不一样的，所以尽管你

00:06:04.250 --> 00:06:09.280
战争是一成不变的

00:06:05.810 --> 00:06:17.030
您需要以某种方式进行配置， 

00:06:09.280 --> 00:06:19.730
为此，如果您使用WebSphere或Tomcat 

00:06:17.030 --> 00:06:25.910
是的，有人用WebSphere相信

00:06:19.730 --> 00:06:28.370
我很好，你可以配置符号

00:06:25.910 --> 00:06:30.110
链接到真实的数据库数据源

00:06:28.370 --> 00:06:32.630
根据您的环境

00:06:30.110 --> 00:06:37.460
如果不这样做，这里还有几个座位

00:06:32.630 --> 00:06:41.150
想站立，虽然你想站立

00:06:37.460 --> 00:06:41.480
好，那也很好，所以我们有相同的

00:06:41.150 --> 00:06:43.640
探测

00:06:41.480 --> 00:06:46.490
我们有docker镜像我们希望它们成为

00:06:43.640 --> 00:06:48.590
一成不变，但我们仍然希望他们喜欢

00:06:46.490 --> 00:06:53.480
可配置，具体取决于您

00:06:48.590 --> 00:06:57.830
环境，为此，有一个非常

00:06:53.480 --> 00:07:00.260
部署您的简单用例

00:06:57.830 --> 00:07:03.380
在不同环境中的应用

00:07:00.260 --> 00:07:06.230
然后您处于测试环境中

00:07:03.380 --> 00:07:08.800
而您想重置整个数据库

00:07:06.230 --> 00:07:11.870
因为你想运行测试

00:07:08.800 --> 00:07:13.790
所以你去删除的应用程序

00:07:11.870 --> 00:07:16.850
每个用户取决于用户

00:07:13.790 --> 00:07:21.290
界面，然后您注意到我在

00:07:16.850 --> 00:07:27.170
生产它从未发生在你身上

00:07:21.290 --> 00:07:30.380
对，所以以前我们如何解决

00:07:27.170 --> 00:07:32.210
可能您仍然这样做

00:07:30.380 --> 00:07:34.580
根据您所处的环境

00:07:32.210 --> 00:07:35.530
带有环境名称的横幅

00:07:34.580 --> 00:07:40.610
在它的上面

00:07:35.530 --> 00:07:43.850
谁已经做过，所以我猜所有

00:07:40.610 --> 00:07:45.400
其他人不是，这是个好主意

00:07:43.850 --> 00:07:47.810
关于它

00:07:45.400 --> 00:07:50.750
所以在生产中您当然没有

00:07:47.810 --> 00:07:52.370
横幅是好东西，但随后

00:07:50.750 --> 00:07:55.040
每个环境，那么你有这个

00:07:52.370 --> 00:07:57.470
标语和名称，这是一个完美的选择

00:07:55.040 --> 00:07:59.570
用例，因为我们有

00:07:57.470 --> 00:08:01.100
同一应用程序，我们将其部署到

00:07:59.570 --> 00:08:04.550
不同的环境，然后我们得到

00:08:01.100 --> 00:08:12.200
这样，我已经说了足够多了，让我们做

00:08:04.550 --> 00:08:14.330
一些演示的东西，所以我创建了一个

00:08:12.200 --> 00:08:17.660
应用程序上现有的应用程序

00:08:14.330 --> 00:08:20.780
我在星点上弹Spring 

00:08:17.660 --> 00:08:23.390
一个喜欢重定向的简单控制器

00:08:20.780 --> 00:08:26.060
我来一整套模板，并在

00:08:23.390 --> 00:08:29.150
我喜欢的时间叶模板

00:08:26.060 --> 00:08:30.920
标签，我得到的颜色，如果

00:08:29.150 --> 00:08:32.630
标签和颜色（如果有的话） 

00:08:30.920 --> 00:08:35.599
没有标签，当然没有颜色

00:08:32.630 --> 00:08:38.240
什么都不要显示，所以我只显示

00:08:35.599 --> 00:08:40.760
您如何在没有任何个人资料的情况下工作，或

00:08:38.240 --> 00:08:46.100
像天翻地覆的一切

00:08:40.760 --> 00:08:49.460
是的，开始工作，然后我可以展示

00:08:46.100 --> 00:08:50.630
你我是多么优秀的设计师，然后

00:08:49.460 --> 00:08:53.200
你明白我为什么是后端

00:08:50.630 --> 00:08:53.200
工程师

00:09:06.750 --> 00:09:13.079
看到非常好，这基本上就是我

00:09:10.620 --> 00:09:14.699
想要投入生产，然后投入生产

00:09:13.079 --> 00:09:17.250
我想展现的心意

00:09:14.699 --> 00:09:21.439
其他一些最简单的方法之一

00:09:17.250 --> 00:09:21.439
实现基本上就是创造

00:09:25.639 --> 00:09:32.939
我要创建配置文件的配置文件

00:09:29.370 --> 00:09:37.079
所以我有一个开发人员资料

00:09:32.939 --> 00:09:40.139
个人资料已激活，我想拥有

00:09:37.079 --> 00:09:42.810
黄色发展旗帜，何时

00:09:40.139 --> 00:09:48.029
已激活，我有暂存橙色

00:09:42.810 --> 00:09:51.509
东西还好，让我们尝试一下，这样您就可以

00:09:48.029 --> 00:09:53.129
首先知道像 spring boot 

00:09:51.509 --> 00:09:56.600
要做的是我会得到

00:09:53.129 --> 00:10:04.079
如此私人和环境化的环境

00:09:56.600 --> 00:10:13.430
然后我将其定型，然后我可以

00:10:04.079 --> 00:10:13.430
得到那些键AB点和点颜色

00:10:20.900 --> 00:10:30.670
和标签，然后我将其传递给

00:10:27.200 --> 00:10:30.670
示范权

00:10:46.470 --> 00:10:57.390
所以通常在这里会发生什么

00:10:54.720 --> 00:11:02.270
抱歉，这是你的会议

00:10:57.390 --> 00:11:02.270
应该工作现在发生了什么

00:11:02.600 --> 00:11:09.990
谢谢，什么都没有发生

00:11:07.590 --> 00:11:12.720
这是我想要的，因为我是

00:11:09.990 --> 00:11:16.590
默认配置文件的生产，所以现在我

00:11:12.720 --> 00:11:20.850
将激活登台配置文件并

00:11:16.590 --> 00:11:28.170
通常我没有检查我希望我检查

00:11:20.850 --> 00:11:32.400
这里的东西是def profile是的

00:11:28.170 --> 00:11:35.730
它很容易完成，但是

00:11:32.400 --> 00:11:37.800
您可能会反对

00:11:35.730 --> 00:11:40.710
环境不是很好，因为

00:11:37.800 --> 00:11:42.960
然后我们得到全部东西，也许

00:11:40.710 --> 00:11:45.990
活下去可能会更好

00:11:42.960 --> 00:11:52.850
个别按键，因此也可以完成

00:11:45.990 --> 00:12:02.370
通过注释和注入价值

00:11:52.850 --> 00:12:05.540
像这样的颜色虽然我也会在这里

00:12:02.370 --> 00:12:05.540
只需将粘贴复制到

00:12:09.680 --> 00:12:19.160
和水平和水平，如果我

00:12:16.700 --> 00:12:21.980
重置我将更改为

00:12:19.160 --> 00:12:25.060
只是为了确保不是

00:12:21.980 --> 00:12:25.060
缓存或其他任何东西

00:12:35.120 --> 00:12:44.420
是的，它有效，但我的意思是很难

00:12:40.790 --> 00:12:46.550
测试我是否不喜欢

00:12:44.420 --> 00:12:48.710
集成测试我需要掌握

00:12:46.550 --> 00:12:50.930
私有领域的注入

00:12:48.710 --> 00:12:53.300
再见再见领域不是很好，所以

00:12:50.930 --> 00:12:57.920
我们拥有的另一个选择之一

00:12:53.300 --> 00:13:01.310
是要创建像直接属性一样

00:12:57.920 --> 00:13:04.779
可以创建专门的课程

00:13:01.310 --> 00:13:10.940
创建应用程序环境

00:13:04.779 --> 00:13:17.540
属性，然后我不记得了

00:13:10.940 --> 00:13:20.120
命名它的冲突道具是的，所以我在这里

00:13:17.540 --> 00:13:22.520
在课堂上我只是模仿结构

00:13:20.120 --> 00:13:25.010
黄色文件，然后

00:13:22.520 --> 00:13:28.100
自动神奇地，当然

00:13:25.010 --> 00:13:30.860
因为我在启动时给它们加了注释

00:13:28.100 --> 00:13:33.140
像 Spring 一样的时间会读亚马尔

00:13:30.860 --> 00:13:36.020
文件，我们将山药的值

00:13:33.140 --> 00:13:40.779
进入这堂课，所以我现在只需要

00:13:36.020 --> 00:13:45.459
回到我的私人决赛

00:13:40.779 --> 00:13:51.110
应用废弃属性道具

00:13:45.459 --> 00:13:55.279
我可以做点滴点和

00:13:51.110 --> 00:14:00.980
上帝还没有变色哦

00:13:55.279 --> 00:14:07.670
上色并发送道具套件和

00:14:00.980 --> 00:14:11.140
想得到水平，这里我只有

00:14:07.670 --> 00:14:13.730
我整齐地需要的价值观

00:14:11.140 --> 00:14:18.560
注射类，以便您可以点燃

00:14:13.730 --> 00:14:21.680
集成测试，无论您在何处

00:14:18.560 --> 00:14:23.540
现在它再次完美

00:14:21.680 --> 00:14:27.140
一切都很好，现在我们有了东西

00:14:23.540 --> 00:14:29.570
起作用了，我们如何做到这一点

00:14:27.140 --> 00:14:32.180
 kubernetes做的第一件事就是

00:14:29.570 --> 00:14:38.300
实际上创建部署文件

00:14:32.180 --> 00:14:46.480
所以我将创建一个新的ml文件

00:14:38.300 --> 00:14:48.690
卡德斯部署点黄，我会在这里

00:14:46.480 --> 00:14:53.930
喜欢创建非常容易

00:14:48.690 --> 00:14:53.930
我的部署速度非常快，是的，我知道

00:14:54.140 --> 00:15:00.720
所以首先我将创建一个名称空间

00:14:57.030 --> 00:15:03.900
因为就像您在执行代码一样

00:15:00.720 --> 00:15:06.600
包在这里我创建我的部署

00:15:03.900 --> 00:15:13.200
在一个非常具体的地方，所以我创建了一个

00:15:06.600 --> 00:15:14.790
命名空间，第二部分是

00:15:13.200 --> 00:15:17.700
关于服务的信息，因为您知道

00:15:14.790 --> 00:15:20.940
默认情况下， 

00:15:17.700 --> 00:15:25.140
 kubernetes集群停留在

00:15:20.940 --> 00:15:28.110
你知道的kubernetes集群

00:15:25.140 --> 00:15:30.060
拉斯维加斯，但是这里是一样的，如果

00:15:28.110 --> 00:15:33.360
您想访问kubernetes 

00:15:30.060 --> 00:15:35.910
您需要像输入一样给集群

00:15:33.360 --> 00:15:38.790
点，有几个进入

00:15:35.910 --> 00:15:42.780
可用积分最容易使用

00:15:38.790 --> 00:15:46.530
至少用于测试不是毛孔，所以

00:15:42.780 --> 00:15:48.870
这意味着我将给IP 

00:15:46.530 --> 00:15:53.580
俱乐部kubernetes集群的本地IP 

00:15:48.870 --> 00:15:57.710
和这个端口号，我将能够

00:15:53.580 --> 00:16:01.620
访问其中的单个代码

00:15:57.710 --> 00:16:06.030
最后我有一个单一的端口是

00:16:01.620 --> 00:16:10.980
足以满足我们的需求，我部署

00:16:06.030 --> 00:16:13.860
我的申请，但到目前为止我还没有

00:16:10.980 --> 00:16:19.560
我要部署的任何容器

00:16:13.860 --> 00:16:22.230
我的申请表

00:16:19.560 --> 00:16:24.120
您可以添加G插件吗​​？ 

00:16:22.230 --> 00:16:26.970
鼓励您看一下G插件

00:16:24.120 --> 00:16:29.280
真的很棒，它是一个插件， 

00:16:26.970 --> 00:16:33.089
 Google，您无需创建一个

00:16:29.280 --> 00:16:40.410
 docker镜像G插件负责

00:16:33.089 --> 00:16:44.180
它给你，所以它只会检查

00:16:40.410 --> 00:16:46.980
主要阶级和主要阶级之外

00:16:44.180 --> 00:16:50.850
将创建所有的docker镜像

00:16:46.980 --> 00:16:53.010
对所有的要求

00:16:50.850 --> 00:16:57.780
编译的类和所有资源

00:16:53.010 --> 00:17:00.750
那是超级超级伟大，你有

00:16:57.780 --> 00:17:03.770
像有两个目标，第一个

00:17:00.750 --> 00:17:07.770
基本上就是你

00:17:03.770 --> 00:17:10.949
您的图像到注册表，所以默认情况下

00:17:07.770 --> 00:17:12.809
是docker hub注册表，但您可以

00:17:10.949 --> 00:17:15.929
用凭据配置等等

00:17:12.809 --> 00:17:18.240
等等等等，或者我将要做什么

00:17:15.929 --> 00:17:21.270
只会将其发送到本地

00:17:18.240 --> 00:17:23.069
 docker daemon，这意味着我没有

00:17:21.270 --> 00:17:27.600
来回推，然后证明

00:17:23.069 --> 00:17:31.290
如您所见，它非常有用

00:17:27.600 --> 00:17:33.450
就像班级本身和

00:17:31.290 --> 00:17:35.910
眼睛较黑的下巴

00:17:33.450 --> 00:17:45.179
我不从中创建抽屉

00:17:35.910 --> 00:18:00.450
应用程序，所以现在正常，如果我码头工人

00:17:45.179 --> 00:18:04.320
映像grep config mg mg和config以及

00:18:00.450 --> 00:18:13.770
我不知道为什么我有

00:18:04.320 --> 00:18:18.570
麻烦对不起，让我们

00:18:13.770 --> 00:18:21.300
忘记相信我，他们在这里，那又怎样

00:18:18.570 --> 00:18:25.290
我现在想部署它，所以我会

00:18:21.300 --> 00:18:27.660
进行部署并进行部署

00:18:25.290 --> 00:18:31.020
不好意思安排，因为在

00:18:27.660 --> 00:18:34.650
您在Kubernetes上调度图像I 

00:18:31.020 --> 00:18:39.450
将应用我刚刚的文件

00:18:34.650 --> 00:18:42.690
创建并且名称空间已经

00:18:39.450 --> 00:18:44.760
创建服务就像已经

00:18:42.690 --> 00:18:51.419
创造的唯一新事物是

00:18:44.760 --> 00:18:56.550
应用程序，现在我有了我的

00:18:51.419 --> 00:18:59.190
我和kubernetes上运行的应用程序

00:18:56.550 --> 00:19:01.740
只需获取IP，即可运行

00:18:59.190 --> 00:19:09.240
在迷你立方体上，所以我需要获取IP 

00:19:01.740 --> 00:19:11.540
迷你立方体，正如我告诉你的，我只需要

00:19:09.240 --> 00:19:11.540
至

00:19:11.859 --> 00:19:24.200
这里有一个零太多了，所以

00:19:19.460 --> 00:19:27.409
现在是如何获得我的横幅，如果

00:19:24.200 --> 00:19:31.429
我们已经创建好了必要的资料

00:19:27.409 --> 00:19:33.830
所以让我们使用配置文件

00:19:31.429 --> 00:19:36.529
直到G里面的轮廓只是一个

00:19:33.830 --> 00:19:39.349
复选框，但通常配置文件是

00:19:36.529 --> 00:19:42.830
就像开创了一个额外的

00:19:39.349 --> 00:19:47.450
命令行后的参数

00:19:42.830 --> 00:19:50.629
主班这样我们要做

00:19:47.450 --> 00:19:52.909
确切地说，我们只会做“不” 

00:19:50.629 --> 00:19:57.590
因为我很懒我已经准备好了

00:19:52.909 --> 00:20:00.940
这里的一切，所以我会添加一个

00:19:57.590 --> 00:20:07.340
命令行的附加参数

00:20:00.940 --> 00:20:10.249
就像Jib会做的那样，现在，如果我愿意

00:20:07.340 --> 00:20:12.889
在这里，我必须删除现有的锅

00:20:10.249 --> 00:20:23.840
因为我没有用任何花哨的东西

00:20:12.889 --> 00:20:31.609
删除pod的多维数据集城市及其部署

00:20:23.840 --> 00:20:38.090
所以没有删除吊舱抱歉没有拉

00:20:31.609 --> 00:20:41.749
应用程序，因此现在将其删除

00:20:38.090 --> 00:20:43.700
锅，它部署了另一个

00:20:41.749 --> 00:20:48.889
可以检查一切都还好

00:20:43.700 --> 00:20:52.070
是的，它再次运行，现在我们有了

00:20:48.889 --> 00:20:54.710
横幅，所以我们只有一个

00:20:52.070 --> 00:20:57.830
不变的图像，然后非常容易

00:20:54.710 --> 00:21:02.019
通过将配置文件作为参数传递给

00:20:57.830 --> 00:21:07.159
就像上下文相关

00:21:02.019 --> 00:21:11.029
这可能对你足够好了

00:21:07.159 --> 00:21:14.330
大多数情况下，但问题是

00:21:11.029 --> 00:21:21.169
如果您在公司工作会发生

00:21:14.330 --> 00:21:22.970
如果您经常固定环境

00:21:21.169 --> 00:21:24.920
环境数量少

00:21:22.970 --> 00:21:26.870
稳定不会经常改变

00:21:24.920 --> 00:21:28.610
但是每次您构建新的

00:21:26.870 --> 00:21:30.980
您创建新环境的环境

00:21:28.610 --> 00:21:37.430
这意味着您需要创建一个

00:21:30.980 --> 00:21:39.410
图像中的配置文件，这意味着

00:21:37.430 --> 00:21:41.180
即使图像没有改变，因为

00:21:39.410 --> 00:21:45.040
代码，您将需要创建一个

00:21:41.180 --> 00:21:47.810
新版本以添加新的配置文件

00:21:45.040 --> 00:21:53.000
所以新的东西

00:21:47.810 --> 00:21:59.660
不改变就没有意义了

00:21:53.000 --> 00:22:07.280
另一种方法是

00:21:59.660 --> 00:22:09.530
使用系统属性，而不是

00:22:07.280 --> 00:22:15.410
使用个人资料，您可以做的是

00:22:09.530 --> 00:22:19.730
像直接将值传递给系统

00:22:15.410 --> 00:22:21.970
属性只是让我们在本地尝试

00:22:19.730 --> 00:22:21.970
第一

00:22:34.850 --> 00:22:44.750
它可以正常工作，所以我们只需要

00:22:38.780 --> 00:22:49.420
改变论点，对，记得

00:22:44.750 --> 00:22:54.380
你需要工作得很对

00:22:49.420 --> 00:22:56.390
不不，因为实际上参数

00:22:54.380 --> 00:22:59.570
他们在命令行之后

00:22:56.390 --> 00:23:02.810
配置文件在命令行之后，但是如果

00:22:59.570 --> 00:23:09.260
您想在那里传递系统属性

00:23:02.810 --> 00:23:12.200
应该在主要班级之前

00:23:09.260 --> 00:23:14.780
表示您需要了解

00:23:12.200 --> 00:23:25.250
臂架命令行并覆盖它

00:23:14.780 --> 00:23:34.640
所以有可能但不是很好

00:23:25.250 --> 00:23:37.060
可能会隐藏你的幸福

00:23:34.640 --> 00:23:37.060
马上

00:23:39.909 --> 00:23:49.529
所以现在我应该工作像紫色

00:23:46.629 --> 00:23:53.429
和繁殖，所以现在如果我们继续

00:23:49.529 --> 00:23:56.289
 kubernetes在生产中群集紫色

00:23:53.429 --> 00:23:59.440
所以这对你可能已经足够了，但是

00:23:56.289 --> 00:24:01.269
实际上臂架是一个很好的抽象

00:23:59.440 --> 00:24:03.219
不在乎它对

00:24:01.269 --> 00:24:05.829
关于类传递的命令行

00:24:03.219 --> 00:24:09.969
现在我们需要了解什么

00:24:05.829 --> 00:24:13.569
码头工人形象看起来和要做

00:24:09.969 --> 00:24:17.679
现在低于抽象的东西

00:24:13.569 --> 00:24:22.809
我们需要弄污喜欢的人

00:24:17.679 --> 00:24:27.190
是的，对您来说可能已经足够了

00:24:22.809 --> 00:24:30.309
需求很好，让我们来看看

00:24:27.190 --> 00:24:34.839
我们实际上可以做些什么，您可能知道

00:24:30.309 --> 00:24:39.690
您可能不使用系统属性

00:24:34.839 --> 00:24:41.829
但是环境变量代替了

00:24:39.690 --> 00:24:44.699
我们没有任何问题

00:24:41.829 --> 00:24:44.699
命令行了

00:24:52.030 --> 00:24:55.030
选择

00:24:56.020 --> 00:24:58.080
您

00:25:04.190 --> 00:25:07.300
啊，太早了

00:25:07.980 --> 00:25:17.309
不，嘿总有演示效果

00:25:14.720 --> 00:25:27.570
所以它工作得更好，因为现在

00:25:17.309 --> 00:25:30.210
我们保留了抽象，但是是的，我是

00:25:27.570 --> 00:25:32.789
对不起，我喜欢戴眼镜，所以

00:25:30.210 --> 00:25:34.470
基本上在我看到的第一行以下

00:25:32.789 --> 00:25:35.880
你的模糊，你只是坐在

00:25:34.470 --> 00:25:42.750
第一排，所以我需要解决

00:25:35.880 --> 00:25:44.779
我的意思是没有上演

00:25:42.750 --> 00:25:50.639
被安排

00:25:44.779 --> 00:25:55.820
否则您可能已经记不清了

00:25:50.639 --> 00:25:58.350
问题基本上是如果光

00:25:55.820 --> 00:26:00.740
变量参数无论您调用什么

00:25:58.350 --> 00:26:03.559
他们彼此依赖

00:26:00.740 --> 00:26:08.820
可能会犯这种错误，因为

00:26:03.559 --> 00:26:11.549
不管发生什么事

00:26:08.820 --> 00:26:14.730
很棒，如果我们又像一个

00:26:11.549 --> 00:26:19.080
抽象映射要放置的数据结构

00:26:14.730 --> 00:26:21.750
我们需要的所有变量

00:26:19.080 --> 00:26:23.519
就像一个地方，那很好

00:26:21.750 --> 00:26:29.000
因为如果您了解kubernetes 

00:26:23.519 --> 00:26:32.820
有一些叫做config map和

00:26:29.000 --> 00:26:36.029
 config Mac基本上就是

00:26:32.820 --> 00:26:41.340
只是一个映射键值对和一个名称

00:26:36.029 --> 00:26:44.480
然后您可以从

00:26:41.340 --> 00:26:52.500
您的容器，而不是结束

00:26:44.480 --> 00:26:55.370
我们有一个叫做and from的东西

00:26:52.500 --> 00:27:01.019
我们得到那些喜欢环境价值的东西

00:26:55.370 --> 00:27:03.330
从配置图，所以现在我们很好

00:27:01.019 --> 00:27:07.019
孤立，我需要运行它，因为

00:27:03.330 --> 00:27:11.010
否则你不会相信我

00:27:07.019 --> 00:27:14.970
再次，我们保持我们的gyp抽象

00:27:11.010 --> 00:27:18.539
层，我们很好地隔离，我们有

00:27:14.970 --> 00:27:20.850
我们的环境集中在一个地方

00:27:18.539 --> 00:27:22.080
我们可以参考，其中有一个

00:27:20.850 --> 00:27:26.309
语义学

00:27:22.080 --> 00:27:28.919
就像高清一样，所以我们知道

00:27:26.309 --> 00:27:32.100
分阶段你不能犯错误

00:27:28.919 --> 00:27:39.140
那我们总是可以的，但让我们说

00:27:32.100 --> 00:27:39.140
你再次降低了概率

00:27:40.070 --> 00:27:49.289
谁对此感到满意，也很

00:27:44.970 --> 00:27:51.330
很高兴，但是现在你必须考虑好的

00:27:49.289 --> 00:27:53.730
就像创建地图一样

00:27:51.330 --> 00:27:57.200
更新地图并创建新地图

00:27:53.730 --> 00:28:00.840
和东西，也许在你的公司

00:27:57.200 --> 00:28:02.669
抱歉，有一个kubernetes 

00:28:00.840 --> 00:28:04.890
管理员，还有开发人员

00:28:02.669 --> 00:28:06.780
也许他们不共享相同的

00:28:04.890 --> 00:28:08.700
他们拥有不同的访问权限

00:28:06.780 --> 00:28:11.130
生命周期不同的工作方式

00:28:08.700 --> 00:28:15.809
好吧，说一句话，你就是

00:28:11.130 --> 00:28:20.250
没有发展，所以也许你想

00:28:15.809 --> 00:28:22.710
留给开发商的方式

00:28:20.250 --> 00:28:28.049
可以更新这些值而无需管理

00:28:22.710 --> 00:28:31.530
完全是kubernetes，所以我们删除

00:28:28.049 --> 00:28:36.150
配置图，让我们在评论中

00:28:31.530 --> 00:28:40.049
因为我以后会需要它，还有我们

00:28:36.150 --> 00:28:44.490
可以做的就是说

00:28:40.049 --> 00:28:47.700
值放入git存储库并获取

00:28:44.490 --> 00:28:49.320
仓库，这是真实的

00:28:47.700 --> 00:28:51.770
开发人员，以便他们可以随时随地进行推送

00:28:49.320 --> 00:28:51.770
他们要

00:28:54.880 --> 00:29:10.269
现在它变得有点复杂，但是

00:28:59.049 --> 00:29:13.870
只有一点点，所以我在这里创建

00:29:10.269 --> 00:29:17.500
称为get容器get的东西

00:29:13.870 --> 00:29:21.100
初始化容器并通过合同

00:29:17.500 --> 00:29:24.730
初始化容器将成功运行

00:29:21.100 --> 00:29:28.659
在广告连播中的任何图片之前

00:29:24.730 --> 00:29:30.460
如果初始化容器，则当然开始

00:29:28.659 --> 00:29:33.820
失败，那么什么也不会启动

00:29:30.460 --> 00:29:37.539
发生，但如果这样做，则意味着

00:29:33.820 --> 00:29:40.419
无论您做什么，都可以确定

00:29:37.539 --> 00:29:43.659
您可以喜欢的容器

00:29:40.419 --> 00:29:45.820
在那种情况下依靠它我的意思是是的

00:29:43.659 --> 00:29:50.740
长长的命令行，但相信我，我

00:29:45.820 --> 00:29:54.159
只是做一个仓库的git克隆

00:29:50.740 --> 00:30:01.059
 git存储库，我把东西放进去了

00:29:54.159 --> 00:30:05.460
一个配置文件夹，因为这个配置

00:30:01.059 --> 00:30:11.980
文件夹已安装到公共卷

00:30:05.460 --> 00:30:14.019
在这里和这里发生的是

00:30:11.980 --> 00:30:20.590
 git存储库的内容将是

00:30:14.019 --> 00:30:24.850
可在我的应用程序图像中访问

00:30:20.590 --> 00:30:27.669
它可以使用它，因为我已将其映射

00:30:24.850 --> 00:30:30.159
它的格式像Springwood 

00:30:27.669 --> 00:30:33.039
知道如何读书，因为你知道

00:30:30.159 --> 00:30:35.080
它可以从斜杠配置中读取内容，因此

00:30:33.039 --> 00:30:37.000
不仅环境变量

00:30:35.080 --> 00:30:39.700
系统属性不仅是配置文件，而且

00:30:37.000 --> 00:30:42.610
也像应该是

00:30:39.700 --> 00:30:46.049
在斜杠配置文件夹中，然后弹跳

00:30:42.610 --> 00:30:46.049
启动可以使用这些文件

00:30:49.080 --> 00:30:52.590
所以让我们尝试一下

00:31:01.790 --> 00:31:10.990
我不相信这还没有安排

00:31:05.210 --> 00:31:10.990
是的，它仍然有效

00:31:12.610 --> 00:31:22.570
但是现在你可能会说好的，但是我可能

00:31:19.010 --> 00:31:26.600
想要相同的机制，但我想成为

00:31:22.570 --> 00:31:30.100
参数化，那么我们可以使用配置

00:31:26.600 --> 00:31:30.100
弗雷德以前的地图

00:31:36.900 --> 00:32:08.620
 mmm clone Trump，我会在这里使用

00:31:49.060 --> 00:32:11.950
不，不是那样的死亡，所以我添加了一个

00:32:08.620 --> 00:32:15.880
附加的抽象层，以便

00:32:11.950 --> 00:32:17.920
现在我的配置图不包含该值

00:32:15.880 --> 00:32:20.710
但是只是环境和

00:32:17.920 --> 00:32:28.300
版本，当然我需要

00:32:20.710 --> 00:32:34.540
传递给谁，谁爱你呀，好，谁

00:32:28.300 --> 00:32:42.340
讨厌XML我真的不明白

00:32:34.540 --> 00:32:45.670
我的意思是，梅尔（Mel）是专业的Python 

00:32:42.340 --> 00:32:50.980
配置文件，如果您忘记了一个

00:32:45.670 --> 00:32:53.020
太空，你有，我超级开心

00:32:50.980 --> 00:32:58.600
有智慧告诉我不，你做了

00:32:53.020 --> 00:33:05.890
否则不好，在这里我必须

00:32:58.600 --> 00:33:12.070
真的有这个你不喜欢XML 

00:33:05.890 --> 00:33:16.720
我的意思是说它有语法Jason no grammar 

00:33:12.070 --> 00:33:19.080
是的，整个他妈的都没有语法必须

00:33:16.720 --> 00:33:19.080
被告知

00:33:24.940 --> 00:33:34.300
让我们检查一下

00:33:28.180 --> 00:33:37.300
部署是，它已经部署并且

00:33:34.300 --> 00:33:39.040
仍然可以正常工作，如果我们

00:33:37.300 --> 00:33:41.410
更改值，因为我只想

00:33:39.040 --> 00:33:44.170
确保一切正常

00:33:41.410 --> 00:33:47.070
开发人员和我保留版本，因为我

00:33:44.170 --> 00:33:47.070
只有一个版本

00:33:54.300 --> 00:33:57.560
需要一点时间

00:34:03.100 --> 00:34:12.310
是的，我喜欢它，是的，我一直

00:34:10.450 --> 00:34:18.819
顾问，但我不是在欺负您

00:34:12.310 --> 00:34:22.329
它确实有效，不是白板，所以

00:34:18.819 --> 00:34:26.230
基本上我们已经看到了多种方法

00:34:22.329 --> 00:34:28.960
初始化并配置您的docker 

00:34:26.230 --> 00:34:31.109
包含Spring 的图像

00:34:28.960 --> 00:34:35.589
 kubernetes集群中的应用程序

00:34:31.109 --> 00:34:36.220
最简单的方法无疑是个人资料

00:34:35.589 --> 00:34:38.770
关于它

00:34:36.220 --> 00:34:41.740
配置文件是最简单的方法

00:34:38.770 --> 00:34:44.710
您的环境不稳定

00:34:41.740 --> 00:34:47.290
他们改变了很多，你必须依靠

00:34:44.710 --> 00:34:49.149
时不时的新环境

00:34:47.290 --> 00:34:52.060
不是正确的解决方案，因为那时您

00:34:49.149 --> 00:34:55.629
将需要更新图像，那就是

00:34:52.060 --> 00:34:58.150
你不想做什么我们拥有的

00:34:55.629 --> 00:35:02.260
后来看到的也许是

00:34:58.150 --> 00:35:05.980
就像添加系统一样容易

00:35:02.260 --> 00:35:09.490
变量环境对不起是的设置

00:35:05.980 --> 00:35:11.560
变量系统属性抱歉， 

00:35:09.490 --> 00:35:16.150
那么您需要了解

00:35:11.560 --> 00:35:18.280
臂架启动您的图像，然后您

00:35:16.150 --> 00:35:19.780
需要将其对齐，然后您

00:35:18.280 --> 00:35:21.760
需要改变它不是超级

00:35:19.780 --> 00:35:25.329
安慰你输了你输了

00:35:21.760 --> 00:35:29.740
我们看到的第三种抽象

00:35:25.329 --> 00:35:32.710
我们可以使用环境变量吗

00:35:29.740 --> 00:35:37.300
效果很好，我们得到了抽象

00:35:32.710 --> 00:35:40.359
再次，但如果

00:35:37.300 --> 00:35:43.210
值彼此依赖

00:35:40.359 --> 00:35:45.400
也许你可能不匹配他们，你

00:35:43.210 --> 00:35:47.380
那样的话你会犯错吗

00:35:45.400 --> 00:35:51.640
当然，这的重点是

00:35:47.380 --> 00:35:53.650
想要避免错误，那么我们已经看到

00:35:51.640 --> 00:35:57.040
你可以把所有的东西

00:35:53.650 --> 00:35:59.740
在配置图中相关，再次

00:35:57.040 --> 00:36:01.630
如果您在开发人员中，可能会为您工作

00:35:59.740 --> 00:36:03.730
沮丧，但如果你有非常喜欢

00:36:01.630 --> 00:36:07.230
如果您的开发人员没有分开的角色

00:36:03.730 --> 00:36:09.640
在那种情况下可以访问

00:36:07.230 --> 00:36:12.280
也许最好有一个init 

00:36:09.640 --> 00:36:14.589
容器和初始化合同

00:36:12.280 --> 00:36:16.930
再次容器就像您确定

00:36:14.589 --> 00:36:18.910
它已经成功运行，因为您

00:36:16.930 --> 00:36:22.270
将您的另一个容器点入海中

00:36:18.910 --> 00:36:28.329
与我们使用git相同的端口

00:36:22.270 --> 00:36:29.770
仓库，然后我们可以去

00:36:28.329 --> 00:36:34.270
整个九码

00:36:29.770 --> 00:36:36.040
就像我们再次向其中添加配置映射

00:36:34.270 --> 00:36:42.599
参数化一些git命令

00:36:36.040 --> 00:36:42.599
运行

00:36:48.730 --> 00:36:54.730
最后，您可以阅读有关我的博客的信息

00:36:51.790 --> 00:36:57.730
您可以在Twitter上关注我

00:36:54.730 --> 00:37:00.640
课程获取存储库并进行操作

00:36:57.730 --> 00:37:02.800
为自己，以及我的每一步

00:37:00.640 --> 00:37:06.070
曾经犯过，所以你可以看到是什么

00:37:02.800 --> 00:37:09.070
在两次提交之间切换，如果

00:37:06.070 --> 00:37:11.619
需要记住我当时告诉你的一切

00:37:09.070 --> 00:37:14.530
我为你写了一篇文章

00:37:11.619 --> 00:37:18.040
跟我讲的一样详细

00:37:14.530 --> 00:37:21.010
在这里，所以现在我们有10分钟的时间

00:37:18.040 --> 00:37:21.640
问题，我很乐意回答

00:37:21.010 --> 00:37:23.710
他们

00:37:21.640 --> 00:37:25.089
是的，只有一点

00:37:23.710 --> 00:37:30.970
许多问题

00:37:25.089 --> 00:37:34.480
这位先生可能已经是麦克风了

00:37:30.970 --> 00:37:38.680
所以问题是你的方法如何

00:37:34.480 --> 00:37:41.710
优于使用Spring Cloud Config 

00:37:38.680 --> 00:37:44.140
服务器是另一种选择

00:37:41.710 --> 00:37:46.270
完成不同的选择基本上是什么

00:37:44.140 --> 00:37:48.520
我本可以在其中一个

00:37:46.270 --> 00:37:50.500
选项基本上是给你使用

00:37:48.520 --> 00:37:53.910
带有酷容器的kubernetes 

00:37:50.500 --> 00:37:57.849
使用spring配置服务器

00:37:53.910 --> 00:37:59.880
这取决于Spring Cloud配置

00:37:57.849 --> 00:38:01.690
我必须承认我从未使用过

00:37:59.880 --> 00:38:03.369
基本上你不需要使用

00:38:01.690 --> 00:38:07.119
 kubernetes您自己使用的所有东西

00:38:03.369 --> 00:38:09.609
我的方法是什么，不是我的

00:38:07.119 --> 00:38:13.660
办法是我的办法不是更好

00:38:09.609 --> 00:38:15.880
只是我给你一个整体

00:38:13.660 --> 00:38:18.369
可能的选择调色板

00:38:15.880 --> 00:38:20.650
取决于您使用的环境

00:38:18.369 --> 00:38:22.540
您喜欢的公司案例

00:38:20.650 --> 00:38:24.430
我们不喜欢什么对你有用

00:38:22.540 --> 00:38:26.500
然后你就可以选择任何东西

00:38:24.430 --> 00:38:27.940
想要您的 Spring Cloud 配置

00:38:26.500 --> 00:38:34.300
然后你对此感到高兴

00:38:27.940 --> 00:38:36.329
一切都很好，有一个问题

00:38:34.300 --> 00:38:36.329
这里

00:38:39.980 --> 00:38:46.430
在这里谢谢

00:38:51.530 --> 00:38:56.250
在运行时更改中更改值

00:38:55.020 --> 00:38:56.940
运行时的值和门

00:38:56.250 --> 00:38:59.100
资料库

00:38:56.940 --> 00:39:03.570
确实反映在我们的春季申请中

00:38:59.100 --> 00:39:06.540
还是不知道这些值并不热门

00:39:03.570 --> 00:39:07.830
重新加载，所以如果您更改值

00:39:06.540 --> 00:39:12.840
运行时，您仍然会拥有相同的

00:39:07.830 --> 00:39:16.170
你可以做的事情就是你可以

00:39:12.840 --> 00:39:19.050
就像重新启动容器时

00:39:16.170 --> 00:39:21.690
 kubernetes检测到更改，因此通过

00:39:19.050 --> 00:39:25.520
您可以使用专用的kubernetes容器

00:39:21.690 --> 00:39:30.030
观察值是否更改

00:39:25.520 --> 00:39:31.950
嗯，然后你就可以停止 bean 荚了

00:39:30.030 --> 00:39:33.630
然后重新开始一个新的或开始像

00:39:31.950 --> 00:39:35.940
如果您要更改副本集

00:39:33.630 --> 00:39:39.810
使用真正的副本集或部署

00:39:35.940 --> 00:39:44.370
或者如果你想烤的话

00:39:39.810 --> 00:39:48.630
进入 spring boot ，我不知道如何

00:39:44.370 --> 00:39:51.600
可以做到，我不知道怎么回事

00:39:48.630 --> 00:39:55.680
做的很有趣，但也许你

00:39:51.600 --> 00:39:57.270
可以喜欢斯蒂芬妮·科尔（Stephanie Cole）或

00:39:55.680 --> 00:40:00.090
他们可能知道的团队

00:39:57.270 --> 00:40:02.400
我从Kubernetes的角度知道

00:40:00.090 --> 00:40:04.920
您可以喜欢观看的变化

00:40:02.400 --> 00:40:08.010
然后使用新值重新启动Pod 

00:40:04.920 --> 00:40:09.870
如果你喜欢任何一个

00:40:08.010 --> 00:40:12.360
您可以滚动进行部署

00:40:09.870 --> 00:40:16.190
更新，这样也很好，你也没有

00:40:12.360 --> 00:40:19.620
没有停机时间，您如何处理密码

00:40:16.190 --> 00:40:22.280
有一个专用的类似配置图

00:40:19.620 --> 00:40:22.280
被称为秘密

00:40:31.099 --> 00:40:36.829
好的，谢谢你的演讲

00:40:34.200 --> 00:40:39.000
您在任何时候都假设

00:40:36.829 --> 00:40:43.470
有专门的协调人

00:40:39.000 --> 00:40:45.809
 kubernetes文件在其文件中yes 

00:40:43.470 --> 00:40:49.349
配对环境，因为显然您

00:40:45.809 --> 00:40:51.240
在所有选项中都有环境

00:40:49.349 --> 00:40:57.299
我们已经看到它在该文件中

00:40:51.240 --> 00:40:59.280
所以我看过其他类似的选择

00:40:57.299 --> 00:41:02.640
一份封面通知五张

00:40:59.280 --> 00:41:06.329
我烘烤了图像，并且图像具有

00:41:02.640 --> 00:41:08.819
每个环境的属性都可以

00:41:06.329 --> 00:41:12.480
你拥有的另一个选择

00:41:08.819 --> 00:41:16.559
提出我认为是使用头盔

00:41:12.480 --> 00:41:18.690
图表以具有以下模板

00:41:16.559 --> 00:41:21.210
环境，最后你有了

00:41:18.690 --> 00:41:24.960
与您拥有的文件相同，但位于

00:41:21.210 --> 00:41:28.770
家庭图表的方式和环境

00:41:24.960 --> 00:41:31.890
是可变的，所以那么你只

00:41:28.770 --> 00:41:34.260
管理一个象限是文件，我

00:41:31.890 --> 00:41:37.859
意味着有多种处理方式

00:41:34.260 --> 00:41:39.869
这个配置文件不是

00:41:37.859 --> 00:41:42.930
演讲的主题，老实说，我

00:41:39.869 --> 00:41:44.880
已经看到了很多方法可以做到这一点， 

00:41:42.930 --> 00:41:48.990
似乎公司社区还没有

00:41:44.880 --> 00:41:51.390
找到了真正的好方法，所以我

00:41:48.990 --> 00:41:53.369
不要以为只有一个文件

00:41:51.390 --> 00:41:55.740
在我的演示中，这要容易得多

00:41:53.369 --> 00:41:57.150
拥有一个文件，但是您可以

00:41:55.740 --> 00:41:58.500
可能拥有您知道的名称空间

00:41:57.150 --> 00:42:00.180
文件，您可以在其中提供服务

00:41:58.500 --> 00:42:02.819
另一个文件，您可以在其中放置广告连播

00:42:00.180 --> 00:42:05.549
你可能想要的第三个文件

00:42:02.819 --> 00:42:09.510
每个环境的文件您可以做任何事情

00:42:05.549 --> 00:42:14.190
你想我没有真正好的建议

00:42:09.510 --> 00:42:17.040
告诉你，但是等到有一个

00:42:14.190 --> 00:42:20.760
共识是我的意思是

00:42:17.040 --> 00:42:23.910
面对它kubernetes就像很轻

00:42:20.760 --> 00:42:26.520
在生命周期的早期

00:42:23.910 --> 00:42:28.619
我们需要很多东西

00:42:26.520 --> 00:42:33.270
了解它是如何工作的，以及

00:42:28.619 --> 00:42:35.220
基本上，我们通过失败来学习

00:42:33.270 --> 00:42:37.710
现在我还不够堕落，无法告诉你

00:42:35.220 --> 00:42:39.060
这就是我应该看到的

00:42:37.710 --> 00:42:41.700
帮助图表

00:42:39.060 --> 00:42:43.950
所以参数化基本上就是你

00:42:41.700 --> 00:42:48.360
后来什么都不懂

00:42:43.950 --> 00:42:50.400
是自定义的，但不要

00:42:48.360 --> 00:42:52.980
我把所有东西都放在同一事实

00:42:50.400 --> 00:42:56.520
文件，你应该怎么做

00:42:52.980 --> 00:42:58.830
就像只是为了演示而已

00:42:56.520 --> 00:43:00.450
然后很好，然后我继续

00:42:58.830 --> 00:43:07.340
门将所有内容都保存在一个文件中

00:43:00.450 --> 00:43:07.340
可以看到其他所有问题

00:43:09.530 --> 00:43:21.160
一切都清楚了，我是午餐时间

00:43:17.370 --> 00:43:23.890
好吧，非常感谢你

00:43:21.160 --> 00:43:29.420
 [掌声] 

00:43:23.890 --> 00:43:29.420
 [音乐] 

