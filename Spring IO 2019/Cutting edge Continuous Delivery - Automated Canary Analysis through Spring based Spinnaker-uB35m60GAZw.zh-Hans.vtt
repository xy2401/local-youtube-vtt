WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.900 --> 00:00:10.630
 [音乐] 

00:00:06.269 --> 00:00:12.400
好吧，一大群人感谢您的加入

00:00:10.630 --> 00:00:15.160
我，因为还有一段乔希长话

00:00:12.400 --> 00:00:17.050
继续进行下去，以防万一您

00:00:15.160 --> 00:00:20.140
错过了，你知道我们仍然可以去那里

00:00:17.050 --> 00:00:21.880
但是谢谢你来我的演讲

00:00:20.140 --> 00:00:26.289
你吃了一顿很棒的午餐，我真的很喜欢

00:00:21.880 --> 00:00:27.520
虾意大利面很特别但是

00:00:26.289 --> 00:00:28.680
我不会谈论这个

00:00:27.520 --> 00:00:30.869
显然我将要谈论

00:00:28.680 --> 00:00:32.649
尖端的持续交付

00:00:30.869 --> 00:00:34.480
通过自动金丝雀分析

00:00:32.649 --> 00:00:38.440
现在的大三角帆

00:00:34.480 --> 00:00:41.410
好的，让我先自我介绍我

00:00:38.440 --> 00:00:44.320
 Andrea服务我是一名解决方案架构师

00:00:41.410 --> 00:00:46.290
在关键，我很活跃

00:00:44.320 --> 00:00:50.230
应用程序转换或应用程序TX 

00:00:46.290 --> 00:00:52.329
我曾经在amia的关键部门内

00:00:50.230 --> 00:00:54.430
为J box工作，有几个

00:00:52.329 --> 00:00:56.440
前同事在这里，这很酷

00:00:54.430 --> 00:00:59.289
您可以在Twitter上与我联系

00:00:56.440 --> 00:01:01.030
当然与我真正的手柄和

00:00:59.289 --> 00:01:02.710
谈话后的接收者，如果你

00:01:01.030 --> 00:01:04.869
有没有收到的任何问题

00:01:02.710 --> 00:01:10.119
得到答案就可以总是

00:01:04.869 --> 00:01:12.220
在那里联系我，所以当我们说话时

00:01:10.119 --> 00:01:14.380
关于持续交付最终

00:01:12.220 --> 00:01:16.540
我们试图实现的目标是部署

00:01:14.380 --> 00:01:18.850
快速自动地正确安装软件

00:01:16.540 --> 00:01:21.939
这只有在我们

00:01:18.850 --> 00:01:24.070
无需担心就可以推送新代码

00:01:21.939 --> 00:01:27.159
这是我所见过的

00:01:24.070 --> 00:01:29.020
这些年来，甚至在我之前

00:01:27.159 --> 00:01:31.390
开始进行软件开发

00:01:29.020 --> 00:01:34.000
这两种对立

00:01:31.390 --> 00:01:35.979
试图在

00:01:34.000 --> 00:01:37.360
一方面您拥有速度，另一方面

00:01:35.979 --> 00:01:39.630
另一方面，你有信心

00:01:37.360 --> 00:01:42.490
他们并不总是能很好地合作

00:01:39.630 --> 00:01:44.290
也许当我们回到基地时

00:01:42.490 --> 00:01:47.070
首先在

00:01:44.290 --> 00:01:49.869
至少我开始从事软件开发

00:01:47.070 --> 00:01:51.670
有些人过去只是改变事情

00:01:49.869 --> 00:01:53.860
在生产中无需测试，您

00:01:51.670 --> 00:01:55.600
只知道热交换代码，也许你知道

00:01:53.860 --> 00:01:57.310
那给了你很多速度，但是

00:01:55.600 --> 00:01:59.649
没给你任何信心，所以

00:01:57.310 --> 00:02:01.479
然后我们开始添加手动测试

00:01:59.649 --> 00:02:03.040
手动测试很昂贵，所以我们

00:02:01.479 --> 00:02:04.990
开始分组功能，导致

00:02:03.040 --> 00:02:07.000
公司发布周期以及那些

00:02:04.990 --> 00:02:08.619
事情再次对速度产生了巨大影响

00:02:07.000 --> 00:02:11.079
所以虽然我们增加了信心

00:02:08.619 --> 00:02:13.280
我们有一些速度，所以我们

00:02:11.079 --> 00:02:15.740
开始自动执行这些测试

00:02:13.280 --> 00:02:17.990
这给了我们一些额外的好处

00:02:15.740 --> 00:02:20.120
加快速度，但这还不够

00:02:17.990 --> 00:02:21.650
我们在最近的这些经历中看到了什么

00:02:20.120 --> 00:02:24.860
年是我们走向

00:02:21.650 --> 00:02:26.270
例如建筑模块化

00:02:24.860 --> 00:02:28.970
我们可以去的微服务

00:02:26.270 --> 00:02:30.440
这些这些生产速度更快

00:02:28.970 --> 00:02:32.270
宏源是独立的

00:02:30.440 --> 00:02:34.640
可部署的单位

00:02:32.270 --> 00:02:37.220
生产而不必拥有这个

00:02:34.640 --> 00:02:39.050
您可以回收，但是这给了我们一个

00:02:37.220 --> 00:02:40.310
可以提高速度，因为您可以工作

00:02:39.050 --> 00:02:41.660
平行地你可以有多个

00:02:40.310 --> 00:02:44.300
不同的团队从事多个

00:02:41.660 --> 00:02:46.070
不同的服务，但这不是

00:02:44.300 --> 00:02:48.739
真正为我们的信心而努力

00:02:46.070 --> 00:02:50.300
好吧，因为现在我们不能真正

00:02:48.739 --> 00:02:51.890
拥有所有人的接受环境

00:02:50.300 --> 00:02:54.739
我们的显微镜，你可以做对的

00:02:51.890 --> 00:02:57.290
有可能，但这给你这个

00:02:54.739 --> 00:02:59.510
再次耦合，所以你必须去

00:02:57.290 --> 00:03:01.690
完全像

00:02:59.510 --> 00:03:04.940
你有一个旋转的环境

00:03:01.690 --> 00:03:06.590
接受只是为了测试一切

00:03:04.940 --> 00:03:08.510
与某些版本

00:03:06.590 --> 00:03:09.590
目前正在生产中

00:03:08.510 --> 00:03:11.030
您已经进行了测试

00:03:09.590 --> 00:03:12.320
生产可能已经改变了

00:03:11.030 --> 00:03:14.450
对，因为这就是微观的本质

00:03:12.320 --> 00:03:17.239
服务，所以我们不得不看看其他

00:03:14.450 --> 00:03:18.920
另一种选择是一种选择

00:03:17.239 --> 00:03:21.980
在合同测试中消耗了我

00:03:18.920 --> 00:03:23.930
不知道有人听说过这项权利

00:03:21.980 --> 00:03:25.820
所以有春季技术合同

00:03:23.930 --> 00:03:27.980
我想明天再谈

00:03:25.820 --> 00:03:29.959
早上，所以我们真的要添加很多

00:03:27.980 --> 00:03:31.670
值，它可以让您测试您的

00:03:29.959 --> 00:03:33.350
独立互动，无

00:03:31.670 --> 00:03:35.120
拥有如此巨大的环境

00:03:33.350 --> 00:03:37.310
一切都一起部署

00:03:35.120 --> 00:03:39.920
它并没有真正测试行为

00:03:37.310 --> 00:03:42.739
测试您的语法是否正确

00:03:39.920 --> 00:03:44.030
是否按合同发送

00:03:42.739 --> 00:03:45.739
我收到正确的东西

00:03:44.030 --> 00:03:47.180
对，所以它并没有真正测试是否

00:03:45.739 --> 00:03:49.220
您的服务行为正常

00:03:47.180 --> 00:03:51.320
与其他人一起

00:03:49.220 --> 00:03:54.320
服务，而不是您中的数据

00:03:51.320 --> 00:03:56.600
数据库实际上与

00:03:54.320 --> 00:03:59.450
彼此正确，所以让我们仍然

00:03:56.600 --> 00:04:01.220
我们有信心的一个问题，让您看到

00:03:59.450 --> 00:04:02.420
借助微服务，您将拥有很多

00:04:01.220 --> 00:04:03.980
的速度，但你仍然没有很多

00:04:02.420 --> 00:04:06.260
有信心或至少你有

00:04:03.980 --> 00:04:08.269
信心有限，然后我们得到了

00:04:06.260 --> 00:04:09.290
看看正确的替代方法，其中之一

00:04:08.269 --> 00:04:10.910
这些替代方案，我们将成为

00:04:09.290 --> 00:04:14.900
谈论今天被称为

00:04:10.910 --> 00:04:17.299
自动金丝雀分析，所以我

00:04:14.900 --> 00:04:19.010
会谈论很多，但是知道

00:04:17.299 --> 00:04:20.989
这有点像

00:04:19.010 --> 00:04:22.430
谈论过去或在很多地方

00:04:20.989 --> 00:04:25.070
讨论过最少的金丝雀释放

00:04:22.430 --> 00:04:26.250
关于，但我还没有真正找到一个简单的方法

00:04:25.070 --> 00:04:28.950
方式

00:04:26.250 --> 00:04:31.710
在没有博士学位的情况下应用它

00:04:28.950 --> 00:04:34.140
数学或正确的东西，所以

00:04:31.710 --> 00:04:35.970
我们会带来什么样的大三角帆

00:04:34.140 --> 00:04:38.760
到桌子上，所以我先介绍一下

00:04:35.970 --> 00:04:39.150
大三角帆右大三角帆是多

00:04:38.760 --> 00:04:41.820
乌云

00:04:39.150 --> 00:04:44.940
最初是多区域部署工具

00:04:41.820 --> 00:04:46.260
由Netflix建立，并且支持很多

00:04:44.940 --> 00:04:48.270
不同的云对很多

00:04:46.260 --> 00:04:52.170
不同的抽象，其中之一是

00:04:48.270 --> 00:04:54.320
轻松自在地孵化，就像任何云一样

00:04:52.170 --> 00:04:57.210
主办Kubrat的人也将为您服务

00:04:54.320 --> 00:04:58.830
与大三角帆Cloud Foundry合作

00:04:57.210 --> 00:05:01.260
适用于所有不同的发行版

00:04:58.830 --> 00:05:04.590
包括关键的Cloud Foundry和

00:05:01.260 --> 00:05:07.290
当然也是主要的云

00:05:04.590 --> 00:05:08.730
提供者，如Azure Amazon Web Services 

00:05:07.290 --> 00:05:11.310
甚至是裸机

00:05:08.730 --> 00:05:14.130
 OpenStack也为您提供支持

00:05:11.310 --> 00:05:16.050
如果您使用的是Oracle Oracle cloud和

00:05:14.130 --> 00:05:17.970
在Google上，因为Google 

00:05:16.050 --> 00:05:20.310
他们也投资了这个项目

00:05:17.970 --> 00:05:21.810
支持App Engine，当然还有计算

00:05:20.310 --> 00:05:23.520
好的，所以有很多

00:05:21.810 --> 00:05:25.860
实际插入的云

00:05:23.520 --> 00:05:27.169
进入大三角帆好吧，那是

00:05:25.860 --> 00:05:31.169
那很有趣

00:05:27.169 --> 00:05:33.570
所以你可能想知道我为什么

00:05:31.169 --> 00:05:35.400
我是在说三角帆吗

00:05:33.570 --> 00:05:37.440
在春天我对，因为这是一个

00:05:35.400 --> 00:05:40.169
春季会议，而春季队

00:05:37.440 --> 00:05:41.970
特别是春天的云

00:05:40.169 --> 00:05:44.580
有东西要连续交付

00:05:41.970 --> 00:05:46.410
他们有这个东西叫做春云

00:05:44.580 --> 00:05:48.240
最近的管道

00:05:46.410 --> 00:05:50.820
更名为云管道，因为

00:05:48.240 --> 00:05:52.950
实际上那个项目无关

00:05:50.820 --> 00:05:54.390
春天是拥有的一种方式

00:05:52.950 --> 00:05:57.600
轻松设置连续交付

00:05:54.390 --> 00:06:00.210
一条铺好的路，在那里你可以有一些

00:05:57.600 --> 00:06:02.880
类似于开箱即用的管道

00:06:00.210 --> 00:06:06.390
在詹金斯（Jenkins）或

00:06:02.880 --> 00:06:08.100
在大厅里，所以已经在那里

00:06:06.390 --> 00:06:10.440
已经可以使用它已经被还押

00:06:08.100 --> 00:06:16.050
用植物来塞住云，它有

00:06:10.440 --> 00:06:18.510
被给予社区

00:06:16.050 --> 00:06:20.610
我实际上是在做春天吗

00:06:18.510 --> 00:06:23.400
我们是否将云重新集中到大三角帆上

00:06:20.610 --> 00:06:26.700
原因是这里说明现在在哪里做

00:06:23.400 --> 00:06:28.140
您在存储云状态的同时

00:06:26.700 --> 00:06:30.090
你实际上在做你的连续

00:06:28.140 --> 00:06:32.190
交货你从哪里得到

00:06:30.090 --> 00:06:36.900
有关当前内容的信息

00:06:32.190 --> 00:06:39.270
那里曾经有很好的云管道

00:06:36.900 --> 00:06:41.970
或实际上在

00:06:39.270 --> 00:06:43.560
正确，但是您可以标记是否

00:06:41.970 --> 00:06:44.910
在某些地方部署了某些东西

00:06:43.560 --> 00:06:46.920
您可以标记提交的环境

00:06:44.910 --> 00:06:47.550
对，那就是那漂亮

00:06:46.920 --> 00:06:51.480
直截了当

00:06:47.550 --> 00:06:54.210
但是它也是有限的，所以

00:06:51.480 --> 00:06:56.130
如果您进行手动部署，而您

00:06:54.210 --> 00:06:58.950
不要去管道，然后整个

00:06:56.130 --> 00:07:00.150
标签系统是您所没有的

00:06:58.950 --> 00:07:01.680
对此充满信心

00:07:00.150 --> 00:07:03.480
因为它可能不像什么

00:07:01.680 --> 00:07:05.940
目前也有制作

00:07:03.480 --> 00:07:07.800
跨不同的实时版本

00:07:05.940 --> 00:07:10.260
不同帐户的区域，以及

00:07:07.800 --> 00:07:12.780
不同的云那么很难

00:07:10.260 --> 00:07:14.280
跟踪所有get存储库

00:07:12.780 --> 00:07:16.950
如果你想做精致的

00:07:14.280 --> 00:07:18.900
回滚，如果有的话

00:07:16.950 --> 00:07:20.310
生产中的多个版本

00:07:18.900 --> 00:07:22.140
同时，您想回滚到

00:07:20.310 --> 00:07:25.370
现在是一个特定的

00:07:22.140 --> 00:07:28.800
停滞真的很难

00:07:25.370 --> 00:07:31.200
詹金斯和七叶树，我们是洒水管

00:07:28.800 --> 00:07:33.930
眼睛或复合管道依赖于

00:07:31.200 --> 00:07:36.090
提供一些库存的想法

00:07:33.930 --> 00:07:38.610
一种可以跟踪的存储库

00:07:36.090 --> 00:07:40.860
您的应用程序目前在哪里

00:07:38.610 --> 00:07:43.290
目前正在生活，这是不同的

00:07:40.860 --> 00:07:44.940
大三角帆，所以大三角帆给你

00:07:43.290 --> 00:07:46.830
您所有不同的广告资源

00:07:44.940 --> 00:07:49.110
区域所有您不同的云和

00:07:46.830 --> 00:07:51.960
您所有不同的帐户及其

00:07:49.110 --> 00:07:53.850
将知识与管道相结合

00:07:51.960 --> 00:07:55.950
可以做真正复杂的事情

00:07:53.850 --> 00:07:57.690
比你复杂得多

00:07:55.950 --> 00:07:59.640
詹金斯或您的大厅可以做到

00:07:57.690 --> 00:08:03.750
今天我们要看一个演示

00:07:59.640 --> 00:08:05.850
关于什么可能没事

00:08:03.750 --> 00:08:08.280
所以我们先来看一下

00:08:05.850 --> 00:08:09.450
在引擎盖下，所以大三角帆下

00:08:08.280 --> 00:08:11.340
引擎盖看起来异常熟悉

00:08:09.450 --> 00:08:13.230
对，这只是微软的

00:08:11.340 --> 00:08:16.170
体系结构，如果可以在

00:08:13.230 --> 00:08:18.840
最少可以使用Spring Boot应用程序

00:08:16.170 --> 00:08:20.940
因此，如果您不得不进行故障排除

00:08:18.840 --> 00:08:24.240
任何会变得超级容易的事情

00:08:20.940 --> 00:08:25.770
你，因为这只是你的

00:08:24.240 --> 00:08:27.810
您定期的春季优惠申请

00:08:25.770 --> 00:08:30.000
特别是有一个是

00:08:27.810 --> 00:08:32.280
有趣的是挂绳，就像一张账单

00:08:30.000 --> 00:08:33.750
这些不同宏的材料

00:08:32.280 --> 00:08:36.090
微软提供的服务如此不同

00:08:33.750 --> 00:08:37.770
不同的版本，你他们有点

00:08:36.090 --> 00:08:38.880
与某些人一起工作

00:08:37.770 --> 00:08:41.310
版本可以正常工作

00:08:38.880 --> 00:08:42.900
其他版本的权利和Hollyer可以制作

00:08:41.310 --> 00:08:45.090
确保一切设置正确

00:08:42.900 --> 00:08:46.410
有点像春天的颠簸

00:08:45.090 --> 00:08:49.080
云依赖或春季战利品

00:08:46.410 --> 00:08:51.900
幻想是正确的，所以这样做

00:08:49.080 --> 00:08:52.680
一项服务还可以帮助您旋转

00:08:51.900 --> 00:08:55.829
一切都好

00:08:52.680 --> 00:08:57.869
这就是它的外观

00:08:55.829 --> 00:09:01.879
就像我知道戴维（David）一样， 

00:08:57.869 --> 00:09:04.889
顺便说一句，但足够的UI 

00:09:01.879 --> 00:09:06.420
尽管自Netflix以来我不得不说

00:09:04.889 --> 00:09:08.519
建立这个Netflix最初是

00:09:06.420 --> 00:09:11.129
他们建立的另一个解决方案

00:09:08.519 --> 00:09:13.589
首先，这被称为sk鱼，他们

00:09:11.129 --> 00:09:15.540
用大三角帆代替了

00:09:13.589 --> 00:09:18.360
从阿斯加德学到的所有东西

00:09:15.540 --> 00:09:20.550
并在这里和这里应用

00:09:18.360 --> 00:09:22.980
他们开始使用的大三角帆版本

00:09:20.550 --> 00:09:24.660
 spring boot ，你可能记得没有

00:09:22.980 --> 00:09:27.059
可修复的，因为在春季使用

00:09:24.660 --> 00:09:29.550
使这种云浑圆

00:09:27.059 --> 00:09:31.410
因为现在该修复程序还在使用

00:09:29.550 --> 00:09:33.149
春天建立自己的应用程序

00:09:31.410 --> 00:09:35.100
对，他们一直这样做是为了

00:09:33.149 --> 00:09:37.860
这里已经有咖啡了，所以很漂亮

00:09:35.100 --> 00:09:39.629
除了Netflix之外，还有重大新闻

00:09:37.860 --> 00:09:41.759
显然已经做出了贡献

00:09:39.629 --> 00:09:43.980
对这个应用程序最重要的是这个平台

00:09:41.759 --> 00:09:45.990
 Google已为此投入巨资

00:09:43.980 --> 00:09:48.179
如果我没记错的话

00:09:45.990 --> 00:09:51.689
实际上只是放了14个FTE 

00:09:48.179 --> 00:09:54.929
构建kubernetes支持甚至

00:09:51.689 --> 00:09:58.439
更多功能甚至支持

00:09:54.929 --> 00:09:59.029
例如，对于App Engine来说， 

00:09:58.439 --> 00:10:02.309
在那里

00:09:59.029 --> 00:10:03.720
除了Google之外，Microsoft还有

00:10:02.309 --> 00:10:07.170
贡献天青的支持和

00:10:03.720 --> 00:10:09.629
关键的汽车铸造厂的支持，所以这

00:10:07.170 --> 00:10:12.839
这实际上是整个生态系统

00:10:09.629 --> 00:10:14.399
如果你现在看的话

00:10:12.839 --> 00:10:16.649
支持所有主要云

00:10:14.399 --> 00:10:18.540
实际上有更多的乌云降临， 

00:10:16.649 --> 00:10:20.579
所以我们将使用Azure作为我们的

00:10:18.540 --> 00:10:23.519
演示，但它也可以完美地工作

00:10:20.579 --> 00:10:25.499
 Google CI系统集成实物

00:10:23.519 --> 00:10:27.360
它真的想与CIS集成

00:10:25.499 --> 00:10:29.279
因为它没有一两个构建

00:10:27.360 --> 00:10:30.389
如果您有詹金斯人或

00:10:29.279 --> 00:10:33.839
大厅或您正在使用的任何东西

00:10:30.389 --> 00:10:35.610
 CI然后继续使用它，因为它

00:10:33.839 --> 00:10:36.959
持续专业化

00:10:35.610 --> 00:10:38.879
集成和构建软件

00:10:36.959 --> 00:10:40.860
大三角帆并不那么在乎

00:10:38.879 --> 00:10:42.629
它可以烘烤图像，但不能

00:10:40.860 --> 00:10:44.249
它不是真的专注于它

00:10:42.629 --> 00:10:46.860
专注于使这些战略

00:10:44.249 --> 00:10:48.179
部署管道以获取您的

00:10:46.860 --> 00:10:50.819
构建的应用程序，然后

00:10:48.179 --> 00:10:52.829
把它放到云端，我们要

00:10:50.819 --> 00:10:55.619
在我们的情况下使用Travis和我们的

00:10:52.829 --> 00:10:57.839
在这里进行CI监控

00:10:55.619 --> 00:10:59.399
将使用数据组织进行指标

00:10:57.839 --> 00:11:01.230
因为我们将需要以下指标

00:10:59.399 --> 00:11:03.569
这些自动金丝雀连续

00:11:01.230 --> 00:11:05.040
您可以发送的分析通知

00:11:03.569 --> 00:11:05.459
通知课程，您可以

00:11:05.040 --> 00:11:07.709
艺术

00:11:05.459 --> 00:11:10.769
支持，这只是一个

00:11:07.709 --> 00:11:13.290
您发布的存储库

00:11:10.769 --> 00:11:16.800
从正确的交付，所以这可能是

00:11:13.290 --> 00:11:18.329
码头工人可能只是一个HTTP呼叫或s3 

00:11:16.800 --> 00:11:20.040
在我们的情况下，我们将在s3上使用

00:11:18.329 --> 00:11:21.809
亚马逊，所以我们要使用几个

00:11:20.040 --> 00:11:24.389
不同服务上的不同

00:11:21.809 --> 00:11:27.749
乌云密布，没有问题

00:11:24.389 --> 00:11:31.129
那样做，大三角帆

00:11:27.749 --> 00:11:33.749
平台已为

00:11:31.129 --> 00:11:35.279
持续交付的基础是

00:11:33.749 --> 00:11:37.529
 Linux下的新基础

00:11:35.279 --> 00:11:39.389
基础，所以现在已经完全

00:11:37.529 --> 00:11:43.199
 Linux Foundation的

00:11:39.389 --> 00:11:45.600
非常有趣，让我说一点

00:11:43.199 --> 00:11:47.459
关于微调器可以做什么，因为

00:11:45.600 --> 00:11:49.259
我一直在谈论什么大三角帆

00:11:47.459 --> 00:11:50.939
是但不一定是为什么

00:11:49.259 --> 00:11:54.240
对我们来说有趣的是什么

00:11:50.939 --> 00:11:56.550
这些新的尖端功能就这样

00:11:54.240 --> 00:11:59.879
当我们上云时，我们在乎什么

00:11:56.550 --> 00:12:02.550
大概和我什么时候去团队

00:11:59.879 --> 00:12:04.709
我看他们如何工作

00:12:02.550 --> 00:12:06.179
他们想要横向扩展时遇到问题

00:12:04.709 --> 00:12:09.149
两个不同的云或两个不同

00:12:06.179 --> 00:12:11.759
区域，因此一般来说云部署

00:12:09.149 --> 00:12:14.939
如果您开始的话，会非常复杂

00:12:11.759 --> 00:12:17.129
简单然后就可以了，但是一旦

00:12:14.939 --> 00:12:19.139
你开始推动有多个人

00:12:17.129 --> 00:12:21.329
和多个团队推动多个

00:12:19.139 --> 00:12:23.490
多种不同服务的转换

00:12:21.329 --> 00:12:25.559
通过多个可用区

00:12:23.490 --> 00:12:28.199
跨越不同的多个区域

00:12:25.559 --> 00:12:30.149
提供者，那么这东西变得更多

00:12:28.199 --> 00:12:31.769
复杂，这变得困难，因为

00:12:30.149 --> 00:12:33.240
你必须知道你所有的不同

00:12:31.769 --> 00:12:34.860
抽象和所有不同

00:12:33.240 --> 00:12:37.350
所有不同的云的概念和

00:12:34.860 --> 00:12:39.449
你知道大多数公司都专注于

00:12:37.350 --> 00:12:43.279
我认识的一个提供者喜欢他们

00:12:39.449 --> 00:12:46.410
选择Google或Amazon权利

00:12:43.279 --> 00:12:48.209
但我不认为有很多公司

00:12:46.410 --> 00:12:50.069
完全迁移到云

00:12:48.209 --> 00:12:53.939
对了还有东西在跑

00:12:50.069 --> 00:12:56.160
现在就可以了

00:12:53.939 --> 00:12:57.540
拥有你会很烦

00:12:56.160 --> 00:13:00.059
目前运行的应用程序

00:12:57.540 --> 00:13:01.769
本地和云中，没有

00:13:00.059 --> 00:13:03.809
所有这些的综合视图

00:13:01.769 --> 00:13:06.809
不同的环境，但尤其是如果

00:13:03.809 --> 00:13:08.309
您接受过开发者接受教育或

00:13:06.809 --> 00:13:11.369
不管你叫它和生产

00:13:08.309 --> 00:13:13.309
即使您只是使用亚马逊也可以

00:13:11.369 --> 00:13:16.499
他们有，如果你有生产

00:13:13.309 --> 00:13:18.720
亚马逊及其发展中的亚马逊

00:13:16.499 --> 00:13:19.680
可能是不同的帐户，所以如果

00:13:18.720 --> 00:13:21.089
您想了解一下

00:13:19.680 --> 00:13:22.680
而您的应用程序在哪里

00:13:21.089 --> 00:13:24.839
将不得不登录到生产

00:13:22.680 --> 00:13:27.450
认为正确或至少正确

00:13:24.839 --> 00:13:29.850
据我所知，这相当

00:13:27.450 --> 00:13:31.649
烦人和大三角帆提供了这种多

00:13:29.850 --> 00:13:33.720
基础多云多区域视图

00:13:31.649 --> 00:13:36.240
您的应用程序只是让您

00:13:33.720 --> 00:13:38.310
一页您的应用程序在哪里

00:13:36.240 --> 00:13:40.200
它有多少个实例？ 

00:13:38.310 --> 00:13:42.270
活着与否

00:13:40.200 --> 00:13:43.320
如果这真的很有帮助

00:13:42.270 --> 00:13:46.709
你只是一个开发团队

00:13:43.320 --> 00:13:47.970
想看看旁边发生了什么

00:13:46.709 --> 00:13:49.260
从那里，这是库存

00:13:47.970 --> 00:13:52.170
我们之前谈到过

00:13:49.260 --> 00:13:53.970
除了这个团队想要获得

00:13:52.170 --> 00:13:56.250
轻松解决方案去云

00:13:53.970 --> 00:13:58.170
对，他们想在

00:13:56.250 --> 00:14:02.550
拍手的混乱中的旷野

00:13:58.170 --> 00:14:04.770
对，所以一个简单的管道可能

00:14:02.550 --> 00:14:07.709
甚至作为模板预先构建

00:14:04.770 --> 00:14:09.690
帮助团队轻松前往云端

00:14:07.709 --> 00:14:12.630
这也是大三角帆为我们提供的

00:14:09.690 --> 00:14:14.940
这对于团队来说很容易

00:14:12.630 --> 00:14:16.230
在此上，因为它抽象了所有

00:14:14.940 --> 00:14:18.149
云的复杂性

00:14:16.230 --> 00:14:21.570
自己，它给你这么容易

00:14:18.149 --> 00:14:23.940
路径实际上也是一次

00:14:21.570 --> 00:14:26.580
您想要能够生产的产品

00:14:23.940 --> 00:14:29.100
快速返回正确的位置，因此容易回滚

00:14:26.580 --> 00:14:30.690
很重要，因为你可以来

00:14:29.100 --> 00:14:33.839
您可以根据需要获得尽可能多的速度

00:14:30.690 --> 00:14:35.550
是的，但是即使您可能有一个

00:14:33.839 --> 00:14:37.650
我仍然很自信

00:14:35.550 --> 00:14:39.570
错误，然后您想回去

00:14:37.650 --> 00:14:42.720
简单的方法，所以你想去

00:14:39.570 --> 00:14:46.260
时光倒流而没有混乱

00:14:42.720 --> 00:14:48.060
和大三角帆办公室做到这一点

00:14:46.260 --> 00:14:49.650
只需单击一下按钮即可

00:14:48.060 --> 00:14:51.060
如果有的话，当然可以回滚

00:14:49.650 --> 00:14:53.130
您可能想要进行数据库迁移

00:14:51.060 --> 00:14:55.080
具有回滚数据库脚本或

00:14:53.130 --> 00:14:56.910
这样的权利，但除了

00:14:55.080 --> 00:14:59.010
它告诉你确切的情况

00:14:56.910 --> 00:15:01.770
要做的事，为什么如此重要

00:14:59.010 --> 00:15:04.500
因为当我们做排背不是

00:15:01.770 --> 00:15:06.779
我们非常想做的事情

00:15:04.500 --> 00:15:08.100
这不是我们的那种

00:15:06.779 --> 00:15:10.589
对这个很高兴，这主要是

00:15:08.100 --> 00:15:12.570
压力很大的情况，我们主要是

00:15:10.589 --> 00:15:14.730
在压力下，如果我们回滚的话

00:15:12.570 --> 00:15:17.250
那是我们犯错的时候

00:15:14.730 --> 00:15:19.200
确保我们有一种脚本化的方式

00:15:17.250 --> 00:15:20.670
或像大三角帆提供的方式

00:15:19.200 --> 00:15:23.750
告诉您确切的步骤

00:15:20.670 --> 00:15:25.620
将要做的事确实有很大帮助，所以

00:15:23.750 --> 00:15:26.880
我不会那样做，但是

00:15:25.620 --> 00:15:28.110
只需单击一个按钮，您就可以

00:15:26.880 --> 00:15:29.810
回到您所说的任何版本

00:15:28.110 --> 00:15:32.760
你还有一些

00:15:29.810 --> 00:15:36.630
现在谁知道这张照片的人

00:15:32.760 --> 00:15:40.680
人群如此一对，这是什么

00:15:36.630 --> 00:15:43.320
就像你什么时候看到这个起床落下

00:15:40.680 --> 00:15:44.700
是的，完全正确，通常

00:15:43.320 --> 00:15:46.170
我想这里的人不多

00:15:44.700 --> 00:15:49.740
我最多的人

00:15:46.170 --> 00:15:52.230
实际上曾经参与讨论，所以

00:15:49.740 --> 00:15:53.670
想法是github想要做到这一点

00:15:52.230 --> 00:15:55.080
听起来这是不可能的

00:15:53.670 --> 00:15:57.990
永远不会发生，因为独角兽

00:15:55.080 --> 00:15:59.460
不存在，所以当迦勒倒下时，我们

00:15:57.990 --> 00:16:01.080
想要确保您知道

00:15:59.460 --> 00:16:03.150
爆炸半径尽可能小

00:16:01.080 --> 00:16:05.520
没有那么多的人

00:16:03.150 --> 00:16:07.110
尽可能受到影响，所以当您

00:16:05.520 --> 00:16:09.690
部署您需要确保您部署

00:16:07.110 --> 00:16:11.280
在没有的时候

00:16:09.690 --> 00:16:13.860
很多人在线，你知道这不是一个

00:16:11.280 --> 00:16:16.800
大量的流量，也可以

00:16:13.860 --> 00:16:19.380
容易记住，但补救措施对不起

00:16:16.800 --> 00:16:22.650
当这实际上下降时

00:16:19.380 --> 00:16:24.510
因此拥有部署窗口并拥有

00:16:22.650 --> 00:16:26.160
跟踪您的流量何时

00:16:24.510 --> 00:16:28.350
进场对于确定身份很重要

00:16:26.160 --> 00:16:29.940
这些，甚至可以将其与

00:16:28.350 --> 00:16:32.100
当人们实际上在办公室时

00:16:29.940 --> 00:16:34.140
对，因为您可能在晚上这样做

00:16:32.100 --> 00:16:35.520
但是后来有人在电话上，不是

00:16:34.140 --> 00:16:36.780
真的和当初一样

00:16:35.520 --> 00:16:39.900
你实际上在办公室所以

00:16:36.780 --> 00:16:41.910
 netflix实际上已经整合了

00:16:39.900 --> 00:16:43.020
他们的应用流量

00:16:41.910 --> 00:16:44.810
他们目前正在部署

00:16:43.020 --> 00:16:47.460
每个应用程序都不同，并且

00:16:44.810 --> 00:16:49.410
然后将其链接到部署窗口

00:16:47.460 --> 00:16:51.180
所以想法是你会准备

00:16:49.410 --> 00:16:53.550
预先需要的一切

00:16:51.180 --> 00:16:54.840
进行部署直到

00:16:53.550 --> 00:16:57.990
指出您实际上要去的地方

00:16:54.840 --> 00:17:00.420
切换流量，然后

00:16:57.990 --> 00:17:03.120
点你等到你打

00:17:00.420 --> 00:17:05.430
约会窗口，然后滚动

00:17:03.120 --> 00:17:07.020
转发所有的权利，所以有

00:17:05.430 --> 00:17:10.260
作为自动化的解决方案

00:17:07.020 --> 00:17:12.360
当您部署为

00:17:10.260 --> 00:17:14.820
好吧，你不只是想知道

00:17:12.360 --> 00:17:16.589
像把一切都带下来

00:17:14.820 --> 00:17:18.839
一切都正确，因为你不能

00:17:16.589 --> 00:17:20.730
甚至有停机时间，例如Bluegreen 

00:17:18.839 --> 00:17:22.020
约会可能还不够

00:17:20.730 --> 00:17:24.480
在这里，您可以看到一个蓝绿色的例子

00:17:22.020 --> 00:17:26.940
部署无所谓的黑色

00:17:24.480 --> 00:17:28.260
该徽标使用的是非常有趣的cuz 

00:17:26.940 --> 00:17:31.020
是红色和黑色，但它是红色和

00:17:28.260 --> 00:17:34.980
无论如何都是白色，所以我想对他们开玩笑

00:17:31.020 --> 00:17:37.380
蓝绿色放弃带来了下一个

00:17:34.980 --> 00:17:38.910
第一个版本旁边的版本

00:17:37.380 --> 00:17:41.670
所以你都拥有版本1和版本2 

00:17:38.910 --> 00:17:42.430
均已准备好投放权利和版本1 

00:17:41.670 --> 00:17:44.740
只是

00:17:42.430 --> 00:17:46.210
所有流量，负载均衡器位于顶部

00:17:44.740 --> 00:17:48.370
它可以很容易地切换到这个

00:17:46.210 --> 00:17:50.650
版本，然后拥有所有

00:17:48.370 --> 00:17:52.960
如果有

00:17:50.650 --> 00:17:54.790
任何问题版本1仍在运行

00:17:52.960 --> 00:17:56.080
只需轻按负载中的开关即可

00:17:54.790 --> 00:17:57.910
保镖，您将拥有所有流量

00:17:56.080 --> 00:18:00.070
路由器两个版本一个，所以您不会

00:17:57.910 --> 00:18:01.690
拥有一个简单的回滚

00:18:00.070 --> 00:18:04.360
是的，所以这不是真的

00:18:01.690 --> 00:18:08.650
那将很难去除

00:18:04.360 --> 00:18:11.050
补救，但是您将拥有全部

00:18:08.650 --> 00:18:12.730
您的用户遭受了这种停机或

00:18:11.050 --> 00:18:15.280
您将拥有的这个问题

00:18:12.730 --> 00:18:17.710
在版本2中，您可以通过执行以下操作来解决此问题

00:18:15.280 --> 00:18:20.950
滚动蓝绿色或向右滚动

00:18:17.710 --> 00:18:22.510
在这种情况下，您将没有

00:18:20.950 --> 00:18:24.610
完全切换，但您会拥有

00:18:22.510 --> 00:18:27.850
通过提出一个实例逐渐

00:18:24.610 --> 00:18:29.620
在一个时间和一个实例下来

00:18:27.850 --> 00:18:31.090
一次使用以前的版本，或者您可以

00:18:29.620 --> 00:18:32.980
做一些复杂的负载平衡

00:18:31.090 --> 00:18:36.310
路由一部分流量

00:18:32.980 --> 00:18:37.600
每走一步就正确

00:18:36.310 --> 00:18:39.730
要么进行手动验证

00:18:37.600 --> 00:18:42.160
进行验证是否会

00:18:39.730 --> 00:18:43.300
工作与否，否则你会有某种

00:18:42.160 --> 00:18:46.360
抽烟测试之类的

00:18:43.300 --> 00:18:49.690
通常这不会很深入或

00:18:46.360 --> 00:18:53.440
现在还不是一个复杂的测试

00:18:49.690 --> 00:18:55.570
金丝雀金丝雀测试迈出了第一步

00:18:53.440 --> 00:18:58.270
进一步和滚动的区别

00:18:55.570 --> 00:19:01.570
蓝绿色是它具有这种自动化

00:18:58.270 --> 00:19:03.370
在每个步骤之间进行金丝雀分析

00:19:01.570 --> 00:19:05.140
当您将流量路由到更多

00:19:03.370 --> 00:19:08.350
更多的用户，您要检查是否

00:19:05.140 --> 00:19:09.880
新版本充当行为

00:19:08.350 --> 00:19:11.800
与以前的版本相同甚至

00:19:09.880 --> 00:19:14.560
更好的权利，如果是这样

00:19:11.800 --> 00:19:16.420
如果是的话，您将扩大规模

00:19:14.560 --> 00:19:19.210
表现更糟它将缩小

00:19:16.420 --> 00:19:21.490
正确，它将回滚，所以

00:19:19.210 --> 00:19:23.200
这里的想法及其方式

00:19:21.490 --> 00:19:24.760
这样做是在看指标

00:19:23.200 --> 00:19:27.550
这当然可以是系统指标

00:19:24.760 --> 00:19:30.670
但也可能是业务指标

00:19:27.550 --> 00:19:31.960
例如，如果您有

00:19:30.670 --> 00:19:34.960
您可能是一个电子商务网站

00:19:31.960 --> 00:19:36.910
例如卖鞋，如果有的话

00:19:34.960 --> 00:19:37.330
突然没有出售鞋子

00:19:36.910 --> 00:19:39.130
不再

00:19:37.330 --> 00:19:40.360
对，那么你可能有一个问题

00:19:39.130 --> 00:19:42.250
与您的网站一起进行部署

00:19:40.360 --> 00:19:44.500
对，你实际上可以拥有

00:19:42.250 --> 00:19:46.930
作为您要采用的指标

00:19:44.500 --> 00:19:50.530
考虑到正确的，所以只是看着

00:19:46.930 --> 00:19:52.870
在任何部分的差异

00:19:50.530 --> 00:19:54.370
您的用户群可以访问

00:19:52.870 --> 00:19:56.140
新版本可以给你这个

00:19:54.370 --> 00:19:58.870
要推出或发布的信息

00:19:56.140 --> 00:20:03.510
回去嘿，这就是我们要去的想法

00:19:58.870 --> 00:20:06.460
实际在我们的演示中这样做

00:20:03.510 --> 00:20:10.000
自动化是关键，你不能

00:20:06.460 --> 00:20:11.740
不能手动做到这一点和大三角帆

00:20:10.000 --> 00:20:14.290
尝试使所有这些东西自动化

00:20:11.740 --> 00:20:15.580
当您喜欢自动化时

00:20:14.290 --> 00:20:17.980
持续部署

00:20:15.580 --> 00:20:21.790
有包含每个管道的

00:20:17.980 --> 00:20:24.600
通常你在詹金斯（Jenkins）做

00:20:21.790 --> 00:20:28.180
如果您正在使用詹金斯

00:20:24.600 --> 00:20:31.030
谁不使用詹金斯

00:20:28.180 --> 00:20:32.200
这么多钱，所以大多数人

00:20:31.030 --> 00:20:34.630
使用Jenkins对，您确定

00:20:32.200 --> 00:20:36.280
正确执行这些脚本，正确执行

00:20:34.630 --> 00:20:38.080
 groovy脚本将执行此操作

00:20:36.280 --> 00:20:39.400
这些脚本可能正在使用库

00:20:38.080 --> 00:20:42.970
可以单独测试的权利

00:20:39.400 --> 00:20:44.710
但大多数还是当人

00:20:42.970 --> 00:20:46.060
马上写这些东西

00:20:44.710 --> 00:20:48.250
他们正在测试当他们

00:20:46.060 --> 00:20:49.810
正确运行管道，所以这是

00:20:48.250 --> 00:20:52.900
真的不是超级东西

00:20:49.810 --> 00:20:55.570
健壮的权利，这是一种尝试， 

00:20:52.900 --> 00:20:57.730
很多时候都犯错了，所以我

00:20:55.570 --> 00:21:00.610
有一些内置的东西

00:20:57.730 --> 00:21:02.620
这些块为您提供平台

00:21:00.610 --> 00:21:04.210
您可以撰写经

00:21:02.620 --> 00:21:06.520
社区，并由社区改善

00:21:04.210 --> 00:21:08.650
这是更强大的权利，因为我

00:21:06.520 --> 00:21:10.720
想想所有正在做的人

00:21:08.650 --> 00:21:12.370
这些我们很多人的詹金斯脚本

00:21:10.720 --> 00:21:14.560
只是做同样的工作

00:21:12.370 --> 00:21:16.630
写同样的脚本吧

00:21:14.560 --> 00:21:18.310
只是一遍又一遍地做，所以

00:21:16.630 --> 00:21:21.220
将其作为平台的一部分是

00:21:18.310 --> 00:21:23.890
真正的好处，所以在这里您可以

00:21:21.220 --> 00:21:25.240
示例一个可能的管道

00:21:23.890 --> 00:21:27.820
剪辑一个部署

00:21:25.240 --> 00:21:29.290
生产一有它所以它看起来

00:21:27.820 --> 00:21:30.640
在测试环境中找到

00:21:29.290 --> 00:21:32.140
来自测试的图像

00:21:30.640 --> 00:21:34.690
环境，它使用它来部署

00:21:32.140 --> 00:21:36.100
金丝雀，所以这是新版本

00:21:34.690 --> 00:21:38.350
对，所以穷人是金丝雀

00:21:36.100 --> 00:21:40.960
然后等待30分钟，因为

00:21:38.350 --> 00:21:42.820
想要首先从

00:21:40.960 --> 00:21:44.830
组成金丝雀的人

00:21:42.820 --> 00:21:48.190
然后最终如果金丝雀起作用

00:21:44.830 --> 00:21:50.050
很好，那么您可以手动进行切割

00:21:48.190 --> 00:21:51.850
所以您可以手动批准

00:21:50.050 --> 00:21:53.560
你说好，这对我们来说感觉很好

00:21:51.850 --> 00:21:56.530
这也将在我们的演示中

00:21:53.560 --> 00:21:58.780
然后曾经是金丝雀

00:21:56.530 --> 00:22:00.310
经过验证，您可以拥有Bluegreen 

00:21:58.780 --> 00:22:02.800
部署到生产中，因为您

00:22:00.310 --> 00:22:04.870
不想让任何人停机

00:22:02.800 --> 00:22:06.490
你可能想让这个滚动

00:22:04.870 --> 00:22:08.170
你真的想要，然后最终

00:22:06.490 --> 00:22:09.490
这是您想要拆除的部署

00:22:08.170 --> 00:22:13.030
两点后的金丝雀

00:22:09.490 --> 00:22:14.740
正确的时间，你把

00:22:13.030 --> 00:22:17.020
反正金丝雀两个小时，然后使用特洛伊

00:22:14.740 --> 00:22:18.970
生产权如此金丝雀就可以

00:22:17.020 --> 00:22:21.300
立即摆脱掉，所以这是一个

00:22:18.970 --> 00:22:25.420
您可以建立的可能管道

00:22:21.300 --> 00:22:27.700
现在所有这些步骤都由

00:22:25.420 --> 00:22:28.900
大三角帆，让我们看看

00:22:27.700 --> 00:22:31.360
蓝绿色一右

00:22:28.900 --> 00:22:33.550
这意味着什么，所以大三角帆可以做所有的事情

00:22:31.360 --> 00:22:36.580
这样的东西，所以蓝绿色的部署

00:22:33.550 --> 00:22:39.010
三角帆的一个步骤或一个阶段

00:22:36.580 --> 00:22:41.170
很多步骤，其中有很多

00:22:39.010 --> 00:22:43.450
任务和很多操作，所以在此

00:22:41.170 --> 00:22:44.830
如果它确实像默认部署

00:22:43.450 --> 00:22:46.870
然后缩小集群

00:22:44.830 --> 00:22:48.520
先前的集群禁用了它，并且

00:22:46.870 --> 00:22:51.040
缩小比例并禁用

00:22:48.520 --> 00:22:52.510
集群实际上是否确定

00:22:51.040 --> 00:22:54.910
帮助提供商禁用集群

00:22:52.510 --> 00:22:56.440
本身对其进行监视，从而强制缓存

00:22:54.910 --> 00:22:58.570
刷新等待残疾人和

00:22:56.440 --> 00:23:00.160
再次执行，然后禁用

00:22:58.570 --> 00:23:01.210
集群中有几个

00:23:00.160 --> 00:23:03.190
低级操作

00:23:01.210 --> 00:23:05.140
操作正确，因此它正在改变

00:23:03.190 --> 00:23:07.540
目标池的转发规则是

00:23:05.140 --> 00:23:09.640
删除实际实例，所以这一切

00:23:07.540 --> 00:23:11.200
现在正在为您做的事情

00:23:09.640 --> 00:23:13.690
当然你可以自己做

00:23:11.200 --> 00:23:16.480
在詹金斯脚本中很好，这是

00:23:13.690 --> 00:23:18.820
可能，但我的意思是你为什么会

00:23:16.480 --> 00:23:21.100
想做到这一点，特别是如果所有

00:23:18.820 --> 00:23:23.170
这些东西对于每个人来说都是非常具体的

00:23:21.100 --> 00:23:26.020
云提供商，但大三角帆给了我们一个

00:23:23.170 --> 00:23:27.790
我们在概念的抽象层

00:23:26.020 --> 00:23:30.550
不必担心细节

00:23:27.790 --> 00:23:32.290
这些云使我们能够

00:23:30.550 --> 00:23:34.809
部署到同一云中的多个云

00:23:32.290 --> 00:23:36.670
顺便说一句时尚，这是一个非常

00:23:34.809 --> 00:23:39.090
这是我们持续不断的重要组成部分

00:23:36.670 --> 00:23:41.350
部署或包含交付

00:23:39.090 --> 00:23:45.220
解决方案是自动化应该

00:23:41.350 --> 00:23:48.340
内置正确的，所以我们为什么要做

00:23:45.220 --> 00:23:50.050
实际部署一些我们想要的东西

00:23:48.340 --> 00:23:52.720
确保我们使用信息

00:23:50.050 --> 00:23:55.630
从操作方面看，金丝雀

00:23:52.720 --> 00:23:58.600
部署金丝雀测试采用指标

00:23:55.630 --> 00:24:01.059
从生产和决策

00:23:58.600 --> 00:24:03.460
根据这些指标进行部署时

00:24:01.059 --> 00:24:05.500
对，因此它正在从中获取信息

00:24:03.460 --> 00:24:06.760
部署中的操作方面

00:24:05.500 --> 00:24:09.340
管道，当然一旦

00:24:06.760 --> 00:24:10.990
部署后，我们要确保我们

00:24:09.340 --> 00:24:13.600
希望能够追溯到

00:24:10.990 --> 00:24:15.400
金丝雀释放期间发生的一切

00:24:13.600 --> 00:24:16.870
或类似的东西

00:24:15.400 --> 00:24:18.460
实际上不从事生产和

00:24:16.870 --> 00:24:21.640
能够非常轻松地回滚

00:24:18.460 --> 00:24:22.429
真的有它，我的意思是它有益

00:24:21.640 --> 00:24:26.240
从这个操作

00:24:22.429 --> 00:24:27.679
整合，所以现在我要说的是

00:24:26.240 --> 00:24:29.299
关于我已经有的金丝雀鸟阿拉

00:24:27.679 --> 00:24:30.529
提到了很多，我们要去

00:24:29.299 --> 00:24:33.559
杀死一些我没有的鸟

00:24:30.529 --> 00:24:36.379
任何鸟类鸟类爱好者这里没有鸟类

00:24:33.559 --> 00:24:37.369
恋人可以在那边，所以我有一个

00:24:36.379 --> 00:24:39.379
特别的幻灯片给你

00:24:37.369 --> 00:24:42.409
我有几只金丝雀给你

00:24:39.379 --> 00:24:43.940
知道只是想拥有我的意思

00:24:42.409 --> 00:24:45.559
他们有点你知道，因为他们是

00:24:43.940 --> 00:24:47.990
看起来真的很可爱，但是我们

00:24:45.559 --> 00:24:50.090
将会杀死很多人，所以我希望

00:24:47.990 --> 00:24:53.659
你不在乎，好了，就结束了

00:24:50.090 --> 00:24:56.509
因此，这是金丝雀分析的样子

00:24:53.659 --> 00:25:00.259
像这样的权利，它有一个阶段

00:24:56.509 --> 00:25:02.450
其中有一些不同的分析

00:25:00.259 --> 00:25:04.580
结果，所以您只需分析正在发生的事情

00:25:02.450 --> 00:25:07.190
在你的金丝雀上，然后你得到一个

00:25:04.580 --> 00:25:09.049
得分，该得分基于

00:25:07.190 --> 00:25:11.419
指标，但您是否有所改善或

00:25:09.049 --> 00:25:12.740
无论您是否拥有相同的

00:25:11.419 --> 00:25:16.100
你是否真的有更糟糕的结果

00:25:12.740 --> 00:25:17.539
对并且分数足够高时

00:25:16.100 --> 00:25:18.639
然后你为它滚动

00:25:17.539 --> 00:25:22.340
所以只是给你一个指示

00:25:18.639 --> 00:25:24.950
 Netflix的分数至少为95 

00:25:22.340 --> 00:25:26.659
前进之前的百分比，他们

00:25:24.950 --> 00:25:28.129
运行他们的金丝雀大约四个

00:25:26.659 --> 00:25:29.690
至少几个小时

00:25:28.129 --> 00:25:31.039
有时候是他们跑步的日子

00:25:29.690 --> 00:25:32.539
他们的金丝雀只是为了确保

00:25:31.039 --> 00:25:35.210
爆炸半径总是小到

00:25:32.539 --> 00:25:36.799
在这种情况下可能的权利，我们不是

00:25:35.210 --> 00:25:38.539
要做四个小时

00:25:36.799 --> 00:25:40.879
因为我想你想看一些

00:25:38.539 --> 00:25:42.830
今天还有其他有趣的东西

00:25:40.879 --> 00:25:44.509
我们要做六分钟

00:25:42.830 --> 00:25:48.169
当然结果会有点

00:25:44.509 --> 00:25:50.809
您知道影响较小，但我希望

00:25:48.169 --> 00:25:51.440
传达信息，所以看起来

00:25:50.809 --> 00:25:54.710
像这样

00:25:51.440 --> 00:25:58.249
您有自己的指标

00:25:54.710 --> 00:26:01.340
棕色释放是基线和

00:25:58.249 --> 00:26:03.830
蓝色版本中的指标

00:26:01.340 --> 00:26:05.749
是金丝雀，你可以看到

00:26:03.830 --> 00:26:10.490
在这种情况下是失败的，因为

00:26:05.749 --> 00:26:12.619
只有58％的分数是对的

00:26:10.490 --> 00:26:14.869
真的不是很好，所以我们会成为

00:26:12.619 --> 00:26:16.820
看到类似的东西，我希望是

00:26:14.869 --> 00:26:18.919
除此之外，现在一切都很好

00:26:16.820 --> 00:26:20.119
您还可以整合混乱的猴子

00:26:18.919 --> 00:26:21.830
当然这被确认来自

00:26:20.119 --> 00:26:24.110
 Netflix和Netflix臭名昭著

00:26:21.830 --> 00:26:27.679
他们的混乱猴子对，他们有

00:26:24.110 --> 00:26:30.200
猿人军是谁，我不会

00:26:27.679 --> 00:26:31.789
问，但好像没有多少人

00:26:30.200 --> 00:26:33.970
可能去或实际上做

00:26:31.789 --> 00:26:36.520
我认为目前测试混乱

00:26:33.970 --> 00:26:37.930
但即使它刚打开也有可能

00:26:36.520 --> 00:26:40.810
接受环境等

00:26:37.930 --> 00:26:42.700
你可以整合混乱的猴子

00:26:40.810 --> 00:26:43.990
直接进入您的管道，如果

00:26:42.700 --> 00:26:46.450
某人不熟悉混沌猴子

00:26:43.990 --> 00:26:48.040
就像在生产猴子

00:26:46.450 --> 00:26:49.420
拔插头，看到

00:26:48.040 --> 00:26:51.160
一切都还好我

00:26:49.420 --> 00:26:53.200
表示最后一部分有时

00:26:51.160 --> 00:26:54.730
忽略了我们就是你认识你而已

00:26:53.200 --> 00:26:56.260
实施混乱的猴子，然后不要

00:26:54.730 --> 00:26:59.920
关心他们，我以前见过

00:26:56.260 --> 00:27:03.100
反正有点危险所以你

00:26:59.920 --> 00:27:04.990
可以这样做，如果你想这样做

00:27:03.100 --> 00:27:07.630
关于速度和速度的故事

00:27:04.990 --> 00:27:09.730
信心对，所以大三角帆真的

00:27:07.630 --> 00:27:12.790
试图使其加速

00:27:09.730 --> 00:27:15.100
速度并仍然拥有安全权

00:27:12.790 --> 00:27:16.840
有时矛盾

00:27:15.100 --> 00:27:18.910
正确的方法和方法是

00:27:16.840 --> 00:27:20.530
确保您有自动回滚

00:27:18.910 --> 00:27:22.390
如果出现问题，您可以

00:27:20.530 --> 00:27:24.460
轻松回滚您拥有的

00:27:22.390 --> 00:27:26.380
部署Windows混乱的猴子

00:27:24.460 --> 00:27:27.940
部署策略和自动化

00:27:26.380 --> 00:27:30.550
情景分析，这就是我们要做的

00:27:27.940 --> 00:27:31.990
一直在谈论正确但也

00:27:30.550 --> 00:27:32.680
提供更多功能，而我不是

00:27:31.990 --> 00:27:33.760
我不会显示

00:27:32.680 --> 00:27:35.590
不幸的是，因为我们没有足够的

00:27:33.760 --> 00:27:37.240
时间，但如果您有集群锁定

00:27:35.590 --> 00:27:39.910
有多个作用于

00:27:37.240 --> 00:27:42.730
同一集群或同一服务器组

00:27:39.910 --> 00:27:44.920
我给你一个预期的结果

00:27:42.730 --> 00:27:46.720
对，所以您可以锁定该群集，以便

00:27:44.920 --> 00:27:49.300
所有其他管道都是我们的健康

00:27:46.720 --> 00:27:51.070
直到第一个完成

00:27:49.300 --> 00:27:52.870
你现在可以有交通警卫了

00:27:51.070 --> 00:27:54.400
东西可以快速移动，就可以

00:27:52.870 --> 00:27:56.740
一直在进行部署

00:27:54.400 --> 00:27:58.450
对，然后可能会有一些

00:27:56.740 --> 00:28:01.570
您从未想到的场景

00:27:58.450 --> 00:28:03.990
开始删除最后一个服务器

00:28:01.570 --> 00:28:06.460
在某种奇怪的群体权利

00:28:03.990 --> 00:28:07.900
现在可以结合策略

00:28:06.460 --> 00:28:10.420
有一个交通警卫，以确保

00:28:07.900 --> 00:28:12.190
无论您在管道中做什么， 

00:28:10.420 --> 00:28:13.840
永远不会删除最后一个服务器

00:28:12.190 --> 00:28:14.560
组，因为那么你有明显的

00:28:13.840 --> 00:28:16.900
准时的权利

00:28:14.560 --> 00:28:19.180
这样您就可以轻松实现

00:28:16.900 --> 00:28:20.800
以及手动判断

00:28:19.180 --> 00:28:22.630
对Python也有手动判断

00:28:20.800 --> 00:28:24.160
我们仍然可以说好，我想

00:28:22.630 --> 00:28:26.290
接受这个，或者我想继续，或者我

00:28:24.160 --> 00:28:26.860
不想继续，这是为什么

00:28:26.290 --> 00:28:27.670
重要

00:28:26.860 --> 00:28:29.530
这之间的区别是

00:28:27.670 --> 00:28:31.300
持续交付并继续

00:28:29.530 --> 00:28:33.820
问题是手动交接

00:28:31.300 --> 00:28:36.310
对，那仍然很重要

00:28:33.820 --> 00:28:38.590
因为这是人类的直觉

00:28:36.310 --> 00:28:41.170
电脑没有正确的权限

00:28:38.590 --> 00:28:42.790
电脑永远不会知道

00:28:41.170 --> 00:28:44.980
您的情境中发生的事

00:28:42.790 --> 00:28:46.570
组织，但他们可能知道

00:28:44.980 --> 00:28:47.440
它，但可能不完整

00:28:46.570 --> 00:28:48.519
那你

00:28:47.440 --> 00:28:50.289
您刚刚被您的通知

00:28:48.519 --> 00:28:52.029
同事可能有防火墙

00:28:50.289 --> 00:28:54.279
改变可能会影响您的地方

00:28:52.029 --> 00:28:56.409
就像您可能知道的那样进行部署

00:28:54.279 --> 00:28:58.899
那但是一台电脑可能不正确

00:28:56.409 --> 00:29:00.879
它仍然拥有该手册， 

00:28:58.899 --> 00:29:02.710
干预仍然很重要

00:29:00.879 --> 00:29:04.360
步骤，这只是一个红色按钮

00:29:02.710 --> 00:29:06.100
可以再次按一下是否要

00:29:04.360 --> 00:29:07.809
继续吧，所以很便宜，所以

00:29:06.100 --> 00:29:09.399
当然也在那里

00:29:07.809 --> 00:29:11.110
有条件的管道和分段

00:29:09.399 --> 00:29:12.730
执行可能更动态， 

00:29:11.110 --> 00:29:15.940
当然不只是通知

00:29:12.730 --> 00:29:17.740
同样，安全性也要快速提高

00:29:15.940 --> 00:29:19.480
有点像大三角帆的模型

00:29:17.740 --> 00:29:21.460
那就是当我们想走得最快的时候

00:29:19.480 --> 00:29:24.070
可以生产但仍然有

00:29:21.460 --> 00:29:26.590
信心，这是怎么回事

00:29:24.070 --> 00:29:28.750
我在那里的大三角帆是

00:29:26.590 --> 00:29:32.529
建立管道的CLI就是代码

00:29:28.750 --> 00:29:33.580
您可以轻松地写写您的

00:29:32.529 --> 00:29:35.169
代码的管道

00:29:33.580 --> 00:29:37.139
您目前已经可以这样做，但是

00:29:35.169 --> 00:29:39.730
您也可以通过CLI进行操作

00:29:37.139 --> 00:29:41.679
声明性CD，而不是定义一个

00:29:39.730 --> 00:29:43.960
就像我们看到自动化的管道

00:29:41.679 --> 00:29:45.879
你可以说我有一个例子

00:29:43.960 --> 00:29:48.190
我想将其部署到的应用程序

00:29:45.879 --> 00:29:51.429
死亡我想将其部署到生产中

00:29:48.190 --> 00:29:53.950
之后，我想在一个

00:29:51.429 --> 00:29:56.559
金丝雀时尚权找出来

00:29:53.950 --> 00:29:58.120
我然后旋转你的大三角帆去

00:29:56.559 --> 00:30:00.250
确保与

00:29:58.120 --> 00:30:02.110
定义结束状态的Kubernetes 

00:30:00.250 --> 00:30:03.909
你也将达到最终状态

00:30:02.110 --> 00:30:06.070
你的管道，这将是漂亮的

00:30:03.909 --> 00:30:09.759
很酷的权利，您不必写任何

00:30:06.070 --> 00:30:11.740
代码不再支持工件

00:30:09.759 --> 00:30:13.690
已经有更多的云了

00:30:11.740 --> 00:30:15.850
专业平台让阿里云

00:30:13.690 --> 00:30:17.649
如果有人知道这实际上是

00:30:15.850 --> 00:30:20.649
实际在支持的方式上工作

00:30:17.649 --> 00:30:22.240
并且OpenShift已经开始

00:30:20.649 --> 00:30:25.659
停了一下，但可能会在

00:30:22.240 --> 00:30:27.460
未来又是我

00:30:25.659 --> 00:30:28.809
全面的配置支持优先

00:30:27.460 --> 00:30:30.789
金丝雀阶段，你会看到我们

00:30:28.809 --> 00:30:34.690
将提出我们的基准

00:30:30.789 --> 00:30:36.429
我们和我们的新版本或金丝雀下一步

00:30:34.690 --> 00:30:39.159
除了生产彼此

00:30:36.429 --> 00:30:40.690
版本正确，我们也可以做到

00:30:39.159 --> 00:30:42.070
以更具声明性的方式，以便您

00:30:40.690 --> 00:30:43.240
不必担心，然后

00:30:42.070 --> 00:30:45.759
最终我们将不得不摧毁

00:30:43.240 --> 00:30:47.620
那也可以是自制的，然后

00:30:45.759 --> 00:30:50.679
后面有整个社区

00:30:47.620 --> 00:30:53.470
这个权利，甚至有会议

00:30:50.679 --> 00:30:56.259
是关于大三角帆的，所以绝对是

00:30:53.470 --> 00:30:58.509
越来越多的东西，我的意思是所有

00:30:56.259 --> 00:30:59.650
大型云提供商

00:30:58.509 --> 00:31:00.910
那些现在

00:30:59.650 --> 00:31:04.240
为此，但越来越多

00:31:00.910 --> 00:31:05.920
信息来了，所以我认为

00:31:04.240 --> 00:31:08.080
足够的幻灯片，虽然我

00:31:05.920 --> 00:31:10.420
确实还有一些有趣的幻灯片

00:31:08.080 --> 00:31:13.300
演示正确，所以这里的演示正在进行

00:31:10.420 --> 00:31:15.640
借助其关键云在Azure上

00:31:13.300 --> 00:31:18.400
您想要称呼的铸造厂

00:31:15.640 --> 00:31:19.960
在Azure上运行，我们还有PKS 

00:31:18.400 --> 00:31:21.310
 kubernetes在它旁边运行吗

00:31:19.960 --> 00:31:24.250
大三角帆关于kubernetes的报告

00:31:21.310 --> 00:31:26.440
然后将应用推送到

00:31:24.250 --> 00:31:28.540
 Cloud Foundry就是这种联合

00:31:26.440 --> 00:31:30.340
世界上的权利，我试图得到尽可能多的

00:31:28.540 --> 00:31:32.230
尽可能有不同的云

00:31:30.340 --> 00:31:34.420
只是为了说明这一点

00:31:32.230 --> 00:31:36.040
可能真的失败很严重，所以我们

00:31:34.420 --> 00:31:38.440
会看到的，但演示有一个

00:31:36.040 --> 00:31:42.970
背后的故事有人知道里克

00:31:38.440 --> 00:31:45.070
和莫蒂哦，是的，你知道一些

00:31:42.970 --> 00:31:48.340
像一两个会议一样的会议

00:31:45.070 --> 00:31:50.140
但这是很棒的，所以你可能

00:31:48.340 --> 00:31:54.010
都知道这是对的

00:31:50.140 --> 00:31:55.720
非常有趣的卡通，我们将成为

00:31:54.010 --> 00:31:57.850
使用绿色和蓝色版本

00:31:55.720 --> 00:32:00.370
而我们的绿色版本是我们的主角

00:31:57.850 --> 00:32:02.350
这是泡菜里克，你知道吗

00:32:00.370 --> 00:32:04.450
看到里克把自己变成情节

00:32:02.350 --> 00:32:06.460
泡菜避免去家庭

00:32:04.450 --> 00:32:08.410
疗法，因为他真的很讨厌，但是

00:32:06.460 --> 00:32:09.790
然后你知道事情发生了，他滚了

00:32:08.410 --> 00:32:12.180
进入下水道，必须与

00:32:09.790 --> 00:32:14.770
对抗老鼠和蟑螂

00:32:12.180 --> 00:32:17.380
最终他取得了胜利，所以

00:32:14.770 --> 00:32:19.720
他是一个很强的胶绿色版本

00:32:17.380 --> 00:32:22.030
对，真的可以预测，真的很强大

00:32:19.720 --> 00:32:23.650
真正稳定的版本，没什么可以

00:32:22.030 --> 00:32:25.870
这个版本出了错你知道

00:32:23.650 --> 00:32:28.330
会一直坚持下去，所以这就是我们

00:32:25.870 --> 00:32:30.820
绿色版本，另一方面，我们

00:32:28.330 --> 00:32:33.580
有我们的蓝色或蓝色反对者权利

00:32:30.820 --> 00:32:35.500
这是我们的蓝色版本

00:32:33.580 --> 00:32:37.060
好吧，好吧，我是说开始

00:32:35.500 --> 00:32:39.670
听起来好像是个好主意

00:32:37.060 --> 00:32:42.640
因为它是一个盒子里的精灵

00:32:39.670 --> 00:32:45.700
谁只是为了解决任务而存在

00:32:42.640 --> 00:32:47.920
右手，所以这是伟大的权利，但

00:32:45.700 --> 00:32:50.950
问题是如果他没有成功

00:32:47.920 --> 00:32:52.600
然后他变老了，但他没有

00:32:50.950 --> 00:32:54.040
想变老，他只想消失

00:32:52.600 --> 00:32:55.900
再次正确，所以他变得好斗

00:32:54.040 --> 00:32:57.930
因为他真的很想解决

00:32:55.900 --> 00:33:00.730
他的任务很危险

00:32:57.930 --> 00:33:02.430
混乱和不稳定的Bluford，所以我们

00:33:00.730 --> 00:33:05.110
可能想将其回滚

00:33:02.430 --> 00:33:06.920
对，你得到它像蓝绿色

00:33:05.110 --> 00:33:09.870
部署类的东西

00:33:06.920 --> 00:33:13.680
为了给您更多有关

00:33:09.870 --> 00:33:14.880
你知道我有一个神秘主义者的东西

00:33:13.680 --> 00:33:16.980
整个故事情节我要走了

00:33:14.880 --> 00:33:18.930
通过它真的很快，所以他被创造了

00:33:16.980 --> 00:33:21.600
解决做这个家伙的任务

00:33:18.930 --> 00:33:23.370
打高尔夫球更好，但是他不能打高尔夫球，所以

00:33:21.600 --> 00:33:24.930
真的很难，所以过了一会儿他开始

00:33:23.370 --> 00:33:27.390
产生自己的新新版本

00:33:24.930 --> 00:33:28.980
帮助他的权利，但他们却做不到

00:33:27.390 --> 00:33:30.840
使它起作用，因为这个家伙不会打高尔夫球

00:33:28.980 --> 00:33:32.220
对，所以他们都变老了，他们都

00:33:30.840 --> 00:33:33.360
开始积极进取

00:33:32.220 --> 00:33:34.560
攻击别人是正确的，因为你

00:33:33.360 --> 00:33:36.030
真的很想确保

00:33:34.560 --> 00:33:38.250
这个家伙可以打高尔夫，因为他们都

00:33:36.030 --> 00:33:40.290
可以消失他们，所以最终这是

00:33:38.250 --> 00:33:42.360
超级危险的权利，所以这是我们的

00:33:40.290 --> 00:33:44.130
故事，我希望这个演示会更多

00:33:42.360 --> 00:33:47.220
现在很有趣，我们需要看看

00:33:44.130 --> 00:33:49.230
他们看到了这个故事，所以对于演示您

00:33:47.220 --> 00:33:52.460
可以参加也可以参加

00:33:49.230 --> 00:33:55.470
到这个地址，看看我们当前

00:33:52.460 --> 00:33:57.450
您甚至可以制作的生产版本

00:33:55.470 --> 00:34:00.660
不知道QR码的图片

00:33:57.450 --> 00:34:03.440
这实际上曾经奏效过有人

00:34:00.660 --> 00:34:03.440
任何成功

00:34:07.360 --> 00:34:10.360
作品

00:34:10.419 --> 00:34:17.589
是服务器错误吗？ 

00:34:12.909 --> 00:34:23.619
我，我的天哪，好的，你必须

00:34:17.589 --> 00:34:26.039
刷新哦，是的，好的，这是一个

00:34:23.619 --> 00:34:27.970
现场演示，所以它可能确实不起作用

00:34:26.039 --> 00:34:30.849
我们会看到的

00:34:27.970 --> 00:34:32.769
所以当你都这样做的时候

00:34:30.849 --> 00:34:36.399
试图摆脱服务器的权利

00:34:32.769 --> 00:34:38.409
我要向你介绍醋

00:34:36.399 --> 00:34:42.250
现场演示，所以在这里您可以看到

00:34:38.409 --> 00:34:45.819
在PKS上运行的大三角帆是

00:34:42.250 --> 00:34:47.769
 kubernetes，目前具有Def和

00:34:45.819 --> 00:34:49.929
生产，所以如果你看着他们

00:34:47.769 --> 00:34:51.190
有一个版本13的实例，因为

00:34:49.929 --> 00:34:53.409
我一直在尝试这个

00:34:51.190 --> 00:34:55.389
第13版，然后生产

00:34:53.409 --> 00:34:57.190
当前正在运行版本2 

00:34:55.389 --> 00:34:59.230
有四个实例，四个实例

00:34:57.190 --> 00:35:01.750
因此，如果您查看详细信息，则可以

00:34:59.230 --> 00:35:03.309
实际看到实例ID和

00:35:01.750 --> 00:35:04.569
区域和天气，以及

00:35:03.309 --> 00:35:05.380
他们都说他们已经起来了

00:35:04.569 --> 00:35:08.589
应该不是问题

00:35:05.380 --> 00:35:10.359
希望如此

00:35:08.589 --> 00:35:12.150
我们可以去负载均衡器和负载

00:35:10.359 --> 00:35:15.220
平衡器基本上在云铸造中

00:35:12.150 --> 00:35:17.500
他们就是正确的路线，所以我可以去

00:35:15.220 --> 00:35:20.710
我可以点击的路线

00:35:17.500 --> 00:35:23.710
好吧，这给了我

00:35:20.710 --> 00:35:26.529
集成以及这就是我的绿色

00:35:23.710 --> 00:35:29.019
版本对，是泡菜Ricky，所以

00:35:26.529 --> 00:35:31.450
该屏幕相当明显的权利

00:35:29.019 --> 00:35:33.309
那么在生产上让我们看一下

00:35:31.450 --> 00:35:39.099
生产中发生了什么

00:35:33.309 --> 00:35:40.089
生产我有绿色版本作为

00:35:39.099 --> 00:35:42.490
好吧，一切都很好

00:35:40.089 --> 00:35:44.529
你完全不知道现在我们

00:35:42.490 --> 00:35:46.000
要改变这个权利，所以我要

00:35:44.529 --> 00:35:47.529
现在在我的应用程序中进行更改

00:35:46.000 --> 00:35:49.269
有耐心的超级老兄

00:35:47.529 --> 00:35:50.859
 spring i/o ，所以我决定做一个

00:35:49.269 --> 00:35:52.630
非常精致的春季ayo让我们

00:35:50.859 --> 00:35:54.940
带来靴子演示正确，所以我们有一个

00:35:52.630 --> 00:35:57.299
春暖花开的好应用

00:35:54.940 --> 00:36:01.720
控制器权和该控制器

00:35:57.299 --> 00:36:04.990
它指向一个视图泡菜钻机

00:36:01.720 --> 00:36:07.089
模板是HTML页面

00:36:04.990 --> 00:36:09.069
所以我可以做到

00:36:07.089 --> 00:36:11.829
更改此视图，然后它将转到

00:36:09.069 --> 00:36:12.940
音乐没错，但我们不仅会做

00:36:11.829 --> 00:36:13.390
那是因为那太简单了

00:36:12.940 --> 00:36:14.859
对

00:36:13.390 --> 00:36:17.200
我们将添加一些混乱，因为

00:36:14.859 --> 00:36:18.849
音乐是无法控制的，你知道那里

00:36:17.200 --> 00:36:21.819
有一个非常危险的

00:36:18.849 --> 00:36:23.910
那时的危险应用

00:36:21.819 --> 00:36:26.080
我要改变这个给我看看

00:36:23.910 --> 00:36:28.930
神秘主义者，我要添加一些混乱

00:36:26.080 --> 00:36:30.610
现在你可能会发生什么混乱

00:36:28.930 --> 00:36:33.520
已经看到它正在扫一扫，所以

00:36:30.610 --> 00:36:35.580
随机睡眠400毫秒

00:36:33.520 --> 00:36:37.630
已经对了，所以有一些

00:36:35.580 --> 00:36:40.210
无法控制的数据，因为这是

00:36:37.630 --> 00:36:41.920
不断改变每一个要求

00:36:40.210 --> 00:36:43.780
我做你会有点

00:36:41.920 --> 00:36:46.630
那一百毫秒

00:36:43.780 --> 00:36:48.010
现在我要添加的混乱将会改变

00:36:46.630 --> 00:36:50.560
尽管这是不可预测的

00:36:48.010 --> 00:36:52.600
因为它总是具有

00:36:50.560 --> 00:36:55.090
将随机的东西随机放在它上面

00:36:52.600 --> 00:36:57.340
应该有正确的趋势，那就是

00:36:55.090 --> 00:36:58.870
我们想在矩阵中看到的

00:36:57.340 --> 00:37:01.120
你想看到一个趋势，这是

00:36:58.870 --> 00:37:03.760
实际上增加了，所以增加像

00:37:01.120 --> 00:37:06.130
 50毫秒不太剧烈

00:37:03.760 --> 00:37:09.040
关于这个应该已经给我们了

00:37:06.130 --> 00:37:13.180
清除明显的影响，所以我要

00:37:09.040 --> 00:37:15.310
改变这个，所以加上混乱，所以我

00:37:13.180 --> 00:37:16.960
添加混乱权，我正在这样做

00:37:15.310 --> 00:37:20.680
更复杂的方法应该获得帮助

00:37:16.960 --> 00:37:23.860
对，因为我是说IntelliJ应该

00:37:20.680 --> 00:37:25.930
太过正确了，所以我们必须等待

00:37:23.860 --> 00:37:28.120
有点因为现在我的特拉维斯

00:37:25.930 --> 00:37:30.400
管道应随时启动

00:37:28.120 --> 00:37:32.530
这可能需要一段时间，因为

00:37:30.400 --> 00:37:34.330
拉，但是的，最终它将

00:37:32.530 --> 00:37:36.730
为此，让我们来看看

00:37:34.330 --> 00:37:38.770
在管道本身上，所以我的

00:37:36.730 --> 00:37:41.560
这里的管道有一个部署到开发阶段

00:37:38.770 --> 00:37:43.630
在Poti产品阶段， 

00:37:41.560 --> 00:37:45.910
金丝雀部署并清理

00:37:43.630 --> 00:37:47.920
金丝雀对，所以如果实际上PM 

00:37:45.910 --> 00:37:49.420
字典也会自动执行

00:37:47.920 --> 00:37:51.490
不必担心，但是

00:37:49.420 --> 00:37:53.980
现在却如此，我作为

00:37:51.490 --> 00:37:55.390
分开的管道现在部署管

00:37:53.980 --> 00:37:57.640
开发人员，如果您看看它的

00:37:55.390 --> 00:37:59.800
在这里配置了配置

00:37:57.640 --> 00:38:01.840
基本上看特拉维斯，因为它

00:37:59.800 --> 00:38:04.030
与Travis集成，正在寻找

00:38:01.840 --> 00:38:07.630
在我正在使用的Travis CI master上

00:38:04.030 --> 00:38:10.450
和一个大三角帆演示是你

00:38:07.630 --> 00:38:12.300
尽管我可见所以知道这一点

00:38:10.450 --> 00:38:14.440
这也可能是詹金斯的事

00:38:12.300 --> 00:38:16.710
实际上，你有很多东西

00:38:14.440 --> 00:38:19.960
可以在这里整合，让詹金斯成为一名工人

00:38:16.710 --> 00:38:22.000
另一个管道弹出webhook cron 

00:38:19.960 --> 00:38:24.040
作业docker注册表，因此您也可以

00:38:22.000 --> 00:38:25.810
将较暗的实例发布给博士。 

00:38:24.040 --> 00:38:26.890
注册表，然后拿起

00:38:25.810 --> 00:38:28.780
从那里，这很漂亮

00:38:26.890 --> 00:38:31.510
简单明了，所以我们的构建同时

00:38:28.780 --> 00:38:32.160
构建即将进行，让我们来看看

00:38:31.510 --> 00:38:34.810
下一步

00:38:32.160 --> 00:38:37.750
所以这里的部署

00:38:34.810 --> 00:38:39.790
看一下，这样部署就会部署

00:38:37.750 --> 00:38:41.650
导致瑞克和莫蒂死亡

00:38:39.790 --> 00:38:42.940
在聋哑环境中，它

00:38:41.650 --> 00:38:45.040
将做汉兰达策略

00:38:42.940 --> 00:38:47.560
谁知道我的汉兰达策略

00:38:45.040 --> 00:38:51.190
意味着什么可能意味着任何人

00:38:47.560 --> 00:38:53.200
有任何想法只能有一个权利

00:38:51.190 --> 00:38:54.460
是的，所以它将在开发中

00:38:53.200 --> 00:38:55.870
环境，这需要

00:38:54.460 --> 00:38:58.300
巡回演出将切断所有人的注意力

00:38:55.870 --> 00:38:59.980
在所有其他实例中，所以

00:38:58.300 --> 00:39:02.650
确保您的部署是

00:38:59.980 --> 00:39:04.180
听起来唯一活着的权利

00:39:02.650 --> 00:39:07.750
戏剧性的，但是等到我们到达

00:39:04.180 --> 00:39:09.340
金丝雀阶段，所以这是一种

00:39:07.750 --> 00:39:11.770
将会发生什么，你可以

00:39:09.340 --> 00:39:13.990
轻松地将其指向Jeff，然后

00:39:11.770 --> 00:39:15.610
选择我们也可以的策略

00:39:13.990 --> 00:39:17.620
当然采取像蓝绿这样的策略

00:39:15.610 --> 00:39:20.650
可以做到的策略

00:39:17.620 --> 00:39:22.630
善意的权利或根本没有策略，或者

00:39:20.650 --> 00:39:25.840
你自己的策略哦，是的，我有一件事

00:39:22.630 --> 00:39:27.760
差点忘了还有神器

00:39:25.840 --> 00:39:30.880
我们从s3获得，所以我只是

00:39:27.760 --> 00:39:32.410
要看我的s3储存库或存储桶

00:39:30.880 --> 00:39:35.440
我要去接什么

00:39:32.410 --> 00:39:38.080
被建造在那里，特拉维斯告诉

00:39:35.440 --> 00:39:40.540
我要带哪个，所以特拉维斯现在有

00:39:38.080 --> 00:39:42.730
正确完成，它是绿色的，所以那部分

00:39:40.540 --> 00:39:44.440
至少有效，现在这个

00:39:42.730 --> 00:39:46.870
部署，如果我们现在来看一下

00:39:44.440 --> 00:39:49.750
基础设施，我们摆脱了

00:39:46.870 --> 00:39:52.690
你现在在开发中看到的道具

00:39:49.750 --> 00:39:55.990
在这里，现在您有版本14 

00:39:52.690 --> 00:39:57.340
正在旋转，因此版本14 14现在

00:39:55.990 --> 00:39:59.950
当前被禁用，因为它仍然

00:39:57.340 --> 00:40:03.250
起始部分13仍在运行

00:39:59.950 --> 00:40:08.980
现在，如果我们刷新，您也可以

00:40:03.250 --> 00:40:13.570
首先参加这个聋人

00:40:08.980 --> 00:40:15.580
一个，然后现在您会看到Mike Ploog 

00:40:13.570 --> 00:40:18.310
版本正确，你知道这是音乐

00:40:15.580 --> 00:40:20.800
对，很明显，所以这是蓝色

00:40:18.310 --> 00:40:23.140
版本，可能是我们仍然

00:40:20.800 --> 00:40:24.940
有一点绿色版本

00:40:23.140 --> 00:40:26.830
我不这么认为，因为汉兰达

00:40:24.940 --> 00:40:28.960
踢进你知道这只会摧毁

00:40:26.830 --> 00:40:32.350
您可以在此处看到较旧的版本

00:40:28.960 --> 00:40:35.980
版本13现在停止工作了

00:40:32.350 --> 00:40:38.170
知道现在是残疾人士吧

00:40:35.980 --> 00:40:40.240
那就是工作对你有好处

00:40:38.170 --> 00:40:43.180
知道故事的一部分已经使

00:40:40.240 --> 00:40:45.490
因此，我们正在禁用集群

00:40:43.180 --> 00:40:47.620
让我在那里放大一点

00:40:45.490 --> 00:40:48.460
我们去，然后就像我们正在部署

00:40:47.620 --> 00:40:49.990
首先我们

00:40:48.460 --> 00:40:51.910
稳定旧集群，我们

00:40:49.990 --> 00:40:54.280
最终缩小旧集群

00:40:51.910 --> 00:40:56.410
对，那基本上就是

00:40:54.280 --> 00:40:57.580
进行中接下来会发生什么

00:40:56.410 --> 00:40:59.619
是要部署到

00:40:57.580 --> 00:41:01.810
立即生产，所以我们只是

00:40:59.619 --> 00:41:03.580
在def中验证过就可以了

00:41:01.810 --> 00:41:05.530
提前部署，通常情况下

00:41:03.580 --> 00:41:07.150
还有更多的阶段，所以这

00:41:05.530 --> 00:41:09.190
这里的配置只是看

00:41:07.150 --> 00:41:11.260
以前的管道是否

00:41:09.190 --> 00:41:12.849
成功而成功，所以

00:41:11.260 --> 00:41:14.770
要开始，然后它将

00:41:12.849 --> 00:41:16.990
部署基准并立即部署canary 

00:41:14.770 --> 00:41:19.089
我们为什么要部署基准

00:41:16.990 --> 00:41:20.650
问对了，因为你已经有

00:41:19.089 --> 00:41:22.660
生产环境运行旧

00:41:20.650 --> 00:41:24.130
版本正确是因为我们要

00:41:22.660 --> 00:41:26.369
测量旁边的两件事

00:41:24.130 --> 00:41:29.410
彼此，当我们测量

00:41:26.369 --> 00:41:30.940
像系统指标之类的指标

00:41:29.410 --> 00:41:33.250
可能真的会受到一个开始的影响

00:41:30.940 --> 00:41:35.290
正确的，即使您拥有自己的

00:41:33.250 --> 00:41:36.670
实例在那里长时间运行

00:41:35.290 --> 00:41:38.200
可能是内存泄漏或正确的东西

00:41:36.670 --> 00:41:40.240
所以如果你要看记忆

00:41:38.200 --> 00:41:42.460
消费，那么可能会给

00:41:40.240 --> 00:41:43.960
您的看法完全不同，所以

00:41:42.460 --> 00:41:45.490
启动两个新实例

00:41:43.960 --> 00:41:47.380
其实我们正在旋转四个

00:41:45.490 --> 00:41:48.670
实例总共有两个基准和两个

00:41:47.380 --> 00:41:51.130
金丝雀，所以我们实际上可以有一些

00:41:48.670 --> 00:41:52.869
加载在那里，这给你这个

00:41:51.130 --> 00:41:55.180
分享我的意思是这很普遍

00:41:52.869 --> 00:41:57.250
您可以使用的基准

00:41:55.180 --> 00:41:59.380
基线只是飞来的

00:41:57.250 --> 00:42:00.490
生产权基本上就是

00:41:59.380 --> 00:42:04.119
当前版本的生产工作负载

00:42:00.490 --> 00:42:05.980
然后是金丝雀版本

00:42:04.119 --> 00:42:09.040
实际上来自那个

00:42:05.980 --> 00:42:11.080
汉兰达再次来自同一个

00:42:09.040 --> 00:42:13.180
来源为def，因此绝对是

00:42:11.080 --> 00:42:14.740
正确的最新版本，那就是

00:42:13.180 --> 00:42:16.540
基本上我们想从这里开始

00:42:14.740 --> 00:42:18.010
如果我们看着管道，它正在做

00:42:16.540 --> 00:42:20.230
对，如果你看这就是拉

00:42:18.010 --> 00:42:23.349
基础设施，如果您只看

00:42:20.230 --> 00:42:24.940
仅生产，不刷新所有

00:42:23.349 --> 00:42:26.740
突然之间我们有了基线

00:42:24.940 --> 00:42:28.570
金丝雀向上旋转，所以这是

00:42:26.740 --> 00:42:30.490
这是两个额外的实例

00:42:28.570 --> 00:42:32.230
将在现有的旁边旋转

00:42:30.490 --> 00:42:34.089
集群，我没有任何集群

00:42:32.230 --> 00:42:36.400
当前设置的复杂低反弹

00:42:34.089 --> 00:42:40.300
只是意味着如果我看着负载

00:42:36.400 --> 00:42:42.580
平衡器正确，我刷新并在

00:42:40.300 --> 00:42:45.609
某些点将在这里显示

00:42:42.580 --> 00:42:47.710
我不只是第二版

00:42:45.609 --> 00:42:50.260
显示实例我的四个实例

00:42:47.710 --> 00:42:52.180
生产的第二个版本

00:42:50.260 --> 00:42:55.810
不仅要接收流量， 

00:42:52.180 --> 00:42:57.820
基线以及金丝雀的权利，如果

00:42:55.810 --> 00:42:59.490
你们所有人都去同一个页面

00:42:57.820 --> 00:43:01.380
也开始刷新

00:42:59.490 --> 00:43:03.270
应该看到金丝雀

00:43:01.380 --> 00:43:05.700
喂给你当然不是

00:43:03.270 --> 00:43:07.920
就像你在这里看到的那样

00:43:05.700 --> 00:43:10.050
现在我们总共有八个实例

00:43:07.920 --> 00:43:12.450
只是想确保它可以工作，所以我

00:43:10.050 --> 00:43:14.880
将开始做一些负载

00:43:12.450 --> 00:43:26.490
额外的负载是因为你知道

00:43:14.880 --> 00:43:31.830
有时我没有足够的负担，所以

00:43:26.490 --> 00:43:33.720
好吧，所以我在这里产生一些负载

00:43:31.830 --> 00:43:35.880
只是为了确保我的音乐是我的

00:43:33.720 --> 00:43:37.800
应用程序具有足够的指标来处理

00:43:35.880 --> 00:43:40.200
与，你已经可以在这里看到

00:43:37.800 --> 00:43:42.000
返回了很好的示例装备

00:43:40.200 --> 00:43:44.070
一起吧，所以如果你开始

00:43:42.000 --> 00:43:46.050
刷新页面，您将看到

00:43:44.070 --> 00:43:47.520
在某个时候你会拥有

00:43:46.050 --> 00:43:50.360
音乐，在某个时候你会

00:43:47.520 --> 00:43:53.340
抽搐休息，实际上是

00:43:50.360 --> 00:43:56.610
那实际上是金丝雀在玩

00:43:53.340 --> 00:43:59.640
我的意思是和

00:43:56.610 --> 00:44:03.540
当前生产版本右刷新

00:43:59.640 --> 00:44:05.490
这里有一些要点

00:44:03.540 --> 00:44:07.470
你有金丝雀，所以我们现在在喂

00:44:05.490 --> 00:44:09.480
信息进入金丝雀，如果我

00:44:07.470 --> 00:44:12.119
看我现在收到的数据狗

00:44:09.480 --> 00:44:15.300
我的基准和我的指标

00:44:12.119 --> 00:44:16.650
金丝雀的权利，你可以在这里看到我

00:44:15.300 --> 00:44:19.020
我关心两个指标

00:44:16.650 --> 00:44:21.000
平均渲染时间和渲染

00:44:19.020 --> 00:44:23.609
时间最长，所以我真的很想关心

00:44:21.000 --> 00:44:25.020
关于它对我的回复速度有多快

00:44:23.609 --> 00:44:27.960
对，因为那是我们的混乱

00:44:25.020 --> 00:44:30.570
介绍，您可以在这里看到

00:44:27.960 --> 00:44:33.270
基线实际上更大

00:44:30.570 --> 00:44:34.800
较高的嗯，这有点奇怪，但是

00:44:33.270 --> 00:44:38.490
开始仍然开始我希望这是

00:44:34.800 --> 00:44:41.040
去你知道自己修复

00:44:38.490 --> 00:44:43.560
我们会看到这就是为什么我们做金丝雀

00:44:41.040 --> 00:44:46.350
测试正确，所以如果我看着我的金丝雀

00:44:43.560 --> 00:44:49.830
目前它已经在运行

00:44:46.350 --> 00:44:52.800
对，哦，让我去这里，对不起我的金丝雀

00:44:49.830 --> 00:44:55.080
这里正在运行，您可以看到

00:44:52.800 --> 00:44:58.890
好吧，实际上并没有做得很好

00:44:55.080 --> 00:45:00.780
现在为什么因为我的金丝雀情结说

00:44:58.890 --> 00:45:02.160
我的热身期是1分钟

00:45:00.780 --> 00:45:04.020
只是想摆脱这些开始

00:45:02.160 --> 00:45:05.369
开始峰值，您知道CPU和RAM 

00:45:04.020 --> 00:45:07.350
不想在乎我

00:45:05.369 --> 00:45:10.710
间隔是1分钟，我已经

00:45:07.350 --> 00:45:13.170
失败的边界，这真的很快

00:45:10.710 --> 00:45:16.049
间隔是1分钟

00:45:13.170 --> 00:45:17.339
有一分钟的时间看

00:45:16.049 --> 00:45:20.280
指标，然后它将

00:45:17.339 --> 00:45:22.079
分析正确，然后

00:45:20.280 --> 00:45:23.609
一步要走10步

00:45:22.079 --> 00:45:25.829
这意味着您每10秒钟就要

00:45:23.609 --> 00:45:28.500
有指标，这是什么

00:45:25.829 --> 00:45:30.589
实际测量，让我们看一下

00:45:28.500 --> 00:45:33.000
看渲染时间平均CPU 

00:45:30.589 --> 00:45:35.849
让我们先来看一下系统性

00:45:33.000 --> 00:45:39.450
系统的系统CPU使用率和

00:45:35.849 --> 00:45:42.089
还要使用的进程JVM内存和日志

00:45:39.450 --> 00:45:43.859
返回事件，所以如果有的话

00:45:42.089 --> 00:45:45.450
您知道的原始日志，所有这一切

00:45:43.859 --> 00:45:48.180
收集信息，然后

00:45:45.450 --> 00:45:49.890
里克和莫蒂在这边我们来看

00:45:48.180 --> 00:45:51.210
商业指标，而这些不是

00:45:49.890 --> 00:45:53.369
真正的业务指标，但这可能是

00:45:51.210 --> 00:45:55.410
您的渲染时间平均为

00:45:53.369 --> 00:45:57.109
最长的渲染时间，让我们来

00:45:55.410 --> 00:46:02.220
看这里，我希望一切都好

00:45:57.109 --> 00:46:04.140
工作正常应该很好

00:46:02.220 --> 00:46:06.150
所以在这里你可以看到我们实际上并没有

00:46:04.140 --> 00:46:08.010
做金丝雀分析，我们看着

00:46:06.150 --> 00:46:08.960
我们得到的结果，让我们来

00:46:08.010 --> 00:46:12.299
看这里

00:46:08.960 --> 00:46:15.000
瞧，如果我要缩小

00:46:12.299 --> 00:46:16.440
为后面的人感到难过，所以

00:46:15.000 --> 00:46:19.260
在这里您可以看到内存消耗

00:46:16.440 --> 00:46:21.690
很好，偏差像1.4 

00:46:19.260 --> 00:46:25.260
百分比不多的回滚事件

00:46:21.690 --> 00:46:27.569
两种情况下都没有错误，CPU使用率是

00:46:25.260 --> 00:46:29.309
大约11％，但您知道

00:46:27.569 --> 00:46:31.200
时间多了还是过一会儿

00:46:29.309 --> 00:46:32.280
我们看到平均渲染时间

00:46:31.200 --> 00:46:33.869
增加了一百九十

00:46:32.280 --> 00:46:35.910
如您所见，蓝线是

00:46:33.869 --> 00:46:37.619
金丝雀现在高很多了，所以

00:46:35.910 --> 00:46:39.450
我们测量的趋势是

00:46:37.619 --> 00:46:42.180
金丝雀是危险的，我们应该滚动

00:46:39.450 --> 00:46:43.710
返回，然后渲染时间最大

00:46:42.180 --> 00:46:45.869
您可以在这里看到它的高低

00:46:43.710 --> 00:46:49.260
也感谢您的新鲜

00:46:45.869 --> 00:46:51.000
当然还有我的随机负荷，然后我们

00:46:49.260 --> 00:46:51.420
获得了系统CPU使用率

00:46:51.000 --> 00:46:53.369
精细

00:46:51.420 --> 00:46:55.380
所以在这里您会看到您知道我们有一个

00:46:53.369 --> 00:46:57.809
危险版本，因为这些指标

00:46:55.380 --> 00:47:00.900
并没有向我们展示一个好故事

00:46:57.809 --> 00:47:02.700
对，所以我们必须回去思考

00:47:00.900 --> 00:47:03.780
实际上现在正在发生的事情

00:47:02.700 --> 00:47:07.319
发生了我很抱歉

00:47:03.780 --> 00:47:08.730
实在太快了

00:47:07.319 --> 00:47:10.799
金丝雀，所以它摧毁了

00:47:08.730 --> 00:47:12.329
基线和破坏金丝雀的权利

00:47:10.799 --> 00:47:14.819
这是牧师的，所以如果你看

00:47:12.329 --> 00:47:17.460
基础设施全部消失了

00:47:14.819 --> 00:47:19.440
什么也没发生，如果你去

00:47:17.460 --> 00:47:22.109
生产版本在这里刷新

00:47:19.440 --> 00:47:24.660
回到绿色版本，所以这

00:47:22.109 --> 00:47:27.060
金丝雀分析如何提供帮助

00:47:24.660 --> 00:47:30.420
在自动找出

00:47:27.060 --> 00:47:32.670
您的应用程序无法正常运行

00:47:30.420 --> 00:47:34.080
并结束测试或链式测试

00:47:32.670 --> 00:47:35.670
接受环境

00:47:34.080 --> 00:47:37.260
一切都被阻碍了，你

00:47:35.670 --> 00:47:39.480
失去速度，但实际上会

00:47:37.260 --> 00:47:42.330
生产和生产中的测试

00:47:39.480 --> 00:47:44.280
当然还有真实数据和真实用户

00:47:42.330 --> 00:47:46.170
同时确保你有爆炸

00:47:44.280 --> 00:47:47.970
半径越小越好

00:47:46.170 --> 00:47:50.160
如果一切顺利，可以轻松回滚

00:47:47.970 --> 00:47:52.740
是错误的，这就是

00:47:50.160 --> 00:47:55.110
自动金丝雀分析，如果我们去

00:47:52.740 --> 00:47:56.760
回到幻灯片，所以速度和

00:47:55.110 --> 00:47:58.500
有信心我们一直在谈论这个

00:47:56.760 --> 00:48:01.110
在开始的时候，这就是

00:47:58.500 --> 00:48:03.300
大三角帆是关于它试图让你

00:48:01.110 --> 00:48:05.760
使您的交货速度更快

00:48:03.300 --> 00:48:07.470
同时增强信心

00:48:05.760 --> 00:48:10.020
所以那是一种独特的

00:48:07.470 --> 00:48:11.210
我想如果你想卖点

00:48:10.020 --> 00:48:13.020
了解更多有关大三角帆的信息

00:48:11.210 --> 00:48:14.730
特别是您有一本免费的电子书

00:48:13.020 --> 00:48:16.350
在线，如果你只是去大三角帆点

00:48:14.730 --> 00:48:18.660
 IO，您可以下载这本关于

00:48:16.350 --> 00:48:21.870
 75页，这真的很简单

00:48:18.660 --> 00:48:23.700
读起来真的很快，而且很快

00:48:21.870 --> 00:48:26.970
关于所有这些的更多细节

00:48:23.700 --> 00:48:28.710
我今天谈论的事情，所以

00:48:26.970 --> 00:48:31.200
我绝对会建议

00:48:28.710 --> 00:48:33.270
阅读，所以我认为就是那样

00:48:31.200 --> 00:48:35.280
包裹，我想如果幻灯片将

00:48:33.270 --> 00:48:37.500
在扬声器甲板上，如果您只是去我的

00:48:35.280 --> 00:48:38.610
名称它将在Twitter上出现

00:48:37.500 --> 00:48:40.800
可以随时发送任何消息或

00:48:38.610 --> 00:48:43.380
问题，你可以达到这个

00:48:40.800 --> 00:48:44.790
大三角帆队自己在松弛的权利

00:48:43.380 --> 00:48:47.160
所以你可以去参加大三角帆队

00:48:44.790 --> 00:48:49.500
懈怠的平静和来自Netflix的人们

00:48:47.160 --> 00:48:51.720
 Google提供的所有关键功能

00:48:49.500 --> 00:48:53.370
并帮助人们解决堆栈溢出问题

00:48:51.720 --> 00:48:55.380
你可以问关于

00:48:53.370 --> 00:48:57.210
三角帆标签，当然还有所有这些

00:48:55.380 --> 00:48:59.910
有关大三角帆IO的信息

00:48:57.210 --> 00:49:01.860
同样，如果有任何问题

00:48:59.910 --> 00:49:03.990
请问，但已经感谢您

00:49:01.860 --> 00:49:12.610
注意

00:49:03.990 --> 00:49:12.610
 [掌声] 

00:49:13.289 --> 00:49:16.289
题

00:49:23.180 --> 00:49:29.880
嗨，你能展示一点你如何

00:49:26.340 --> 00:49:33.930
配置大三角帆与数据连接

00:49:29.880 --> 00:49:36.450
 doc这是我的金丝雀分析如何

00:49:33.930 --> 00:49:39.180
你真的做对吗，所以金丝雀

00:49:36.450 --> 00:49:42.750
现在进行分析，基本上我

00:49:39.180 --> 00:49:44.370
要做的是我的春天很棒

00:49:42.750 --> 00:49:46.740
与之集成的良好应用程序

00:49:44.370 --> 00:49:48.450
微米微米或微米我不

00:49:46.740 --> 00:49:51.750
知道那一个然后那个

00:49:48.450 --> 00:49:53.310
正确公开这些指标

00:49:51.750 --> 00:49:55.500
有点不知道该发送到哪里

00:49:53.310 --> 00:49:57.150
现在就可以了，所以我必须

00:49:55.500 --> 00:49:59.960
一些有才能的环境变量

00:49:57.150 --> 00:50:02.760
告诉他们正确发送，所以我认为

00:49:59.960 --> 00:50:05.460
我在这里没有记错

00:50:02.760 --> 00:50:08.430
从千分尺右侧导出的指标

00:50:05.460 --> 00:50:11.760
专门谈论数据日志

00:50:08.430 --> 00:50:15.030
和我的API密钥应用程序密钥是

00:50:11.760 --> 00:50:16.800
基本上暴露在狗身上，所以

00:50:15.030 --> 00:50:20.910
你可以拿到那边，然后我放

00:50:16.800 --> 00:50:23.550
他们在我的部署中很好，让我

00:50:20.910 --> 00:50:26.160
在这里拿这个说我的部署

00:50:23.550 --> 00:50:28.020
金丝雀的权利，如果我看一看

00:50:26.160 --> 00:50:30.240
有一些环境变量， 

00:50:28.020 --> 00:50:34.110
我希望你是的，我会改变这些

00:50:30.240 --> 00:50:36.420
按键当然很明显，所以

00:50:34.110 --> 00:50:39.060
在这里，您知道可以随时使用

00:50:36.420 --> 00:50:40.650
他们，但这就是我正确地公开它的方式

00:50:39.060 --> 00:50:42.540
然后从

00:50:40.650 --> 00:50:43.980
环境注入他们，它只是

00:50:42.540 --> 00:50:47.460
开始发送非常漂亮的指标

00:50:43.980 --> 00:50:48.930
直截了当的权利也可以

00:50:47.460 --> 00:50:53.720
其他所有方法都一样

00:50:48.930 --> 00:50:56.780
微型马达支持任何其他问题

00:50:53.720 --> 00:50:56.780
好吧

00:50:58.570 --> 00:51:01.609
 [音乐] 

00:51:01.640 --> 00:51:03.700
您

