WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.900 --> 00:00:13.099
 [音乐] 

00:00:04.540 --> 00:00:14.870
好吧，这是未洗的页面，所以

00:00:13.099 --> 00:00:18.609
如果你来对地方了

00:00:14.870 --> 00:00:21.619
关于分布式跟踪和

00:00:18.609 --> 00:00:25.669
与我的一些演讲不同

00:00:21.619 --> 00:00:28.519
在此代码较少之前完成

00:00:25.669 --> 00:00:30.169
关于人们的行为的更多信息

00:00:28.519 --> 00:00:31.689
他们是如何推出事物的，以及

00:00:30.169 --> 00:00:36.559
在哪里可以找到有关的信息

00:00:31.689 --> 00:00:39.500
它的目标是要连接到

00:00:36.559 --> 00:00:42.469
现实生活，因为你知道我们生活在

00:00:39.500 --> 00:00:44.570
这个世界有本地人和云

00:00:42.469 --> 00:00:48.219
东西，找到一些东西很好

00:00:44.570 --> 00:00:51.079
有时希望获得具体信息

00:00:48.219 --> 00:00:56.359
告诉我我是否达到了这个目标，或者

00:00:51.079 --> 00:00:59.269
不，我是Adrian，我从事洒水法工作

00:00:56.359 --> 00:01:02.929
与一些同事一起工作的团队

00:00:59.269 --> 00:01:07.009
您可能看过今天的会议

00:01:02.929 --> 00:01:10.939
明天我会专注于分布式

00:01:07.009 --> 00:01:12.380
追踪，因为在关键时刻

00:01:10.939 --> 00:01:16.189
三年半现在但以前

00:01:12.380 --> 00:01:17.479
当我在Twitter上时

00:01:16.189 --> 00:01:22.030
我从事的最后一个项目是

00:01:17.479 --> 00:01:25.790
叫做Zipkin和Zipkin的东西是

00:01:22.030 --> 00:01:29.170
像鱼叉一样的土耳其语单词

00:01:25.790 --> 00:01:34.070
扔鲸鱼，他们做到了

00:01:29.170 --> 00:01:36.710
跟踪系统以找出失败的原因

00:01:34.070 --> 00:01:40.369
鲸鱼会显示在应用程序中

00:01:36.710 --> 00:01:43.609
那时那是我的一个项目

00:01:40.369 --> 00:01:51.829
没有开始，但我帮助将其移入

00:01:43.609 --> 00:01:53.869
更多的开源，首先是多少

00:01:51.829 --> 00:01:59.119
这里的人已经与分布式

00:01:53.869 --> 00:02:04.490
跟踪很多人之前，以及如何

00:01:59.119 --> 00:02:07.880
难道这意味着侦探好吗

00:02:04.490 --> 00:02:09.740
有些人，所以我会尽量不要lab惜

00:02:07.880 --> 00:02:12.200
太多了，但我认为可能有些

00:02:09.740 --> 00:02:13.770
您可能需要非常快的人

00:02:12.200 --> 00:02:16.080
底漆

00:02:13.770 --> 00:02:18.510
我也会尝试在

00:02:16.080 --> 00:02:22.500
最后我知道会有压力

00:02:18.510 --> 00:02:24.180
在我和啤酒之间，但如果你想

00:02:22.500 --> 00:02:29.160
碰上啤酒就可以

00:02:24.180 --> 00:02:31.350
我和你在一起很好，但是首先你知道

00:02:29.160 --> 00:02:35.010
因为我认为四年不是

00:02:31.350 --> 00:02:36.510
长时间的应用程序性能

00:02:35.010 --> 00:02:38.940
很多人一直在做的事情

00:02:36.510 --> 00:02:43.230
大约20年了，但对我来说

00:02:38.940 --> 00:02:46.500
我每年四岁左右

00:02:43.230 --> 00:02:50.340
发现它更容易说出什么是追踪

00:02:46.500 --> 00:02:53.840
但是这总是很困难

00:02:50.340 --> 00:02:56.160
我能拿出的当前最佳幻灯片

00:02:53.840 --> 00:02:57.510
最重要的是什么

00:02:56.160 --> 00:03:01.670
考虑这个与某事

00:02:57.510 --> 00:03:04.080
否则，您可以自己阅读

00:03:01.670 --> 00:03:08.000
但首先是追踪

00:03:04.080 --> 00:03:10.950
自然，它跨越了主机和

00:03:08.000 --> 00:03:14.370
就像相关性一样，您可以进行跟踪

00:03:10.950 --> 00:03:17.900
 ID，但最重要的是

00:03:14.370 --> 00:03:20.400
你可以建立因果关系

00:03:17.900 --> 00:03:23.450
意思是您可以明确地说出

00:03:20.400 --> 00:03:26.520
什么要求导致了另一个

00:03:23.450 --> 00:03:28.680
与时间无关，所以不是

00:03:26.520 --> 00:03:32.520
取决于时钟是否同步

00:03:28.680 --> 00:03:35.520
或任何东西，所以你可以画漂亮

00:03:32.520 --> 00:03:37.380
并查看它们也有帮助

00:03:35.520 --> 00:03:40.830
你责怪别人

00:03:37.380 --> 00:03:43.920
有问题，也许会有

00:03:40.830 --> 00:03:46.730
一些比较容易看清的东西

00:03:43.920 --> 00:03:51.900
显示为图像的方式与

00:03:46.730 --> 00:03:53.820
像日志行，为什么我在乎

00:03:51.900 --> 00:03:56.880
幻灯片是另一个

00:03:53.820 --> 00:03:59.040
多年来because动，因为人们

00:03:56.880 --> 00:04:02.100
关心不同的事情，这

00:03:59.040 --> 00:04:05.070
将跟进一些例子

00:04:02.100 --> 00:04:06.720
根据人们的实际报价，但大多数

00:04:05.070 --> 00:04:10.380
当时我认为人们是最

00:04:06.720 --> 00:04:13.860
对分流感兴趣，我想

00:04:10.380 --> 00:04:16.350
知道什么是最重要的

00:04:13.860 --> 00:04:20.090
问题，所以我可以把时间集中在

00:04:16.350 --> 00:04:22.380
它已经通过实现

00:04:20.090 --> 00:04:25.830
范围内的上下文错误

00:04:22.380 --> 00:04:26.970
先来电话的上下文

00:04:25.830 --> 00:04:29.340
没关系

00:04:26.970 --> 00:04:33.780
时间等多久

00:04:29.340 --> 00:04:37.170
它是否也需要人们的照顾，因为

00:04:33.780 --> 00:04:40.380
可以帮助您可视化服务时间

00:04:37.170 --> 00:04:42.150
因为也许我们有SLA问题， 

00:04:40.380 --> 00:04:44.400
我们想确保我们的服务是

00:04:42.150 --> 00:04:47.880
表演，但我们也想知道是否

00:04:44.400 --> 00:04:50.310
如果其他人受到我们的影响

00:04:47.880 --> 00:04:52.530
正在影响他人，所以

00:04:50.310 --> 00:04:55.680
可视化之间的关系

00:04:52.530 --> 00:04:59.660
您以及您可能提供的服务

00:04:55.680 --> 00:05:03.060
被阻止或阻止

00:04:59.660 --> 00:05:04.740
这第四颗子弹越来越多

00:05:03.060 --> 00:05:06.780
可能会晋升到顶部

00:05:04.740 --> 00:05:09.120
因为应用越来越多

00:05:06.780 --> 00:05:12.540
复杂，你知道他们正在闯入

00:05:09.120 --> 00:05:16.290
短暂的小块，你知道

00:05:12.540 --> 00:05:18.120
暂时作为函数调用，现在不

00:05:16.290 --> 00:05:20.640
只是像lambda这样的架构

00:05:18.120 --> 00:05:22.740
还是什么，但仅仅是

00:05:20.640 --> 00:05:24.720
我们如何编码，我们正在做反应式

00:05:22.740 --> 00:05:26.190
这也很酷，但是很难

00:05:24.720 --> 00:05:28.530
追踪事物在哪里

00:05:26.190 --> 00:05:30.810
如果事情发生在

00:05:28.530 --> 00:05:34.110
功能的组装时间

00:05:30.810 --> 00:05:36.210
合成或运行时和跟踪

00:05:34.110 --> 00:05:42.360
可以帮助您了解实际情况

00:05:36.210 --> 00:05:45.540
至少发生了，所以除了

00:05:42.360 --> 00:05:47.340
个人要求另一个共同点

00:05:45.540 --> 00:05:49.350
人们关心的原因是他们可以看到

00:05:47.340 --> 00:05:51.570
他们的建筑，我不会说

00:05:49.350 --> 00:05:53.610
有人看着他们的图像

00:05:51.570 --> 00:05:55.530
建筑，并拥有这样的辉煌

00:05:53.610 --> 00:05:57.810
五千眼见识

00:05:55.530 --> 00:06:01.200
东西互相连接，但在那里

00:05:57.810 --> 00:06:02.970
这里的一些值主要是如果你

00:06:01.200 --> 00:06:05.550
考虑一下哪些来源

00:06:02.970 --> 00:06:08.070
交通来为您服务和

00:06:05.550 --> 00:06:09.690
你在呼唤什么

00:06:08.070 --> 00:06:12.780
在一个只有一个层次的深度上，这是

00:06:09.690 --> 00:06:14.610
重要的是有更多的细节

00:06:12.780 --> 00:06:16.440
我会去的，但我认为这是

00:06:14.610 --> 00:06:18.450
有点像为什么很多的介绍

00:06:16.440 --> 00:06:20.790
人们关心

00:06:18.450 --> 00:06:23.370
我的意思是，除了你知道你可能

00:06:20.790 --> 00:06:29.669
获得带有分布式跟踪的标签I 

00:06:23.370 --> 00:06:33.690
以为我有一个，对不起，有

00:06:29.669 --> 00:06:35.850
重要的是我做到了这么分散

00:06:33.690 --> 00:06:40.300
像许多事物一样追踪

00:06:35.850 --> 00:06:45.940
术语最糟糕的是垃圾邮件

00:06:40.300 --> 00:06:50.800
所以如果你看到这个词，那不是

00:06:45.940 --> 00:06:53.319
就像垃圾邮件，但它基本上是在描述

00:06:50.800 --> 00:06:57.099
其他操作集中的一个操作

00:06:53.319 --> 00:06:58.810
而且你知道这是最重要的

00:06:57.099 --> 00:07:00.789
事实到了

00:06:58.810 --> 00:07:03.610
但它像指标一样在上下文中

00:07:00.789 --> 00:07:07.810
与之类的标签可以告诉您有关

00:07:03.610 --> 00:07:10.449
 HTTP调用或它是什么

00:07:07.810 --> 00:07:13.139
实际代表的轨迹是

00:07:10.449 --> 00:07:16.300
这些东西连接在一起， 

00:07:13.139 --> 00:07:18.039
他们通常向您显示延迟

00:07:16.300 --> 00:07:21.669
关系，但肯定是电话或

00:07:18.039 --> 00:07:23.500
关系另一个行话是

00:07:21.669 --> 00:07:26.440
文字追踪器，您可能会看到

00:07:23.500 --> 00:07:28.389
完成后就不是那样了

00:07:26.440 --> 00:07:31.300
所有这些药物，您将不再能

00:07:28.389 --> 00:07:33.909
看得直是图书馆

00:07:31.300 --> 00:07:37.960
实际上是像

00:07:33.909 --> 00:07:41.110
日志记录库，其工作是记录

00:07:37.960 --> 00:07:44.110
并传递上下文，以便

00:07:41.110 --> 00:07:46.569
如果您认为电话接通了

00:07:44.110 --> 00:07:50.560
从这里到那里，实际上

00:07:46.569 --> 00:07:54.250
仪器实际上是共享的

00:07:50.560 --> 00:07:56.860
跟踪和指标之间的术语

00:07:54.250 --> 00:07:59.650
他们有完全相同的重点

00:07:56.860 --> 00:08:02.289
是要结合关于如何

00:07:59.650 --> 00:08:04.719
图书馆运作成它的东西

00:08:02.289 --> 00:08:07.000
在跟踪情况下进行报告

00:08:04.719 --> 00:08:09.610
这是跨度，但在像

00:08:07.000 --> 00:08:12.130
千分尺或它会是你

00:08:09.610 --> 00:08:13.930
知道量规或计数器或其他

00:08:12.130 --> 00:08:15.969
但是仪器是

00:08:13.930 --> 00:08:18.150
钩入您的图书馆是为了记录

00:08:15.969 --> 00:08:18.150
东西

00:08:19.340 --> 00:08:25.520
所以跨度就像我们知道我们有如果

00:08:23.270 --> 00:08:27.800
这是一个HTTP调用，就像发布，然后

00:08:25.520 --> 00:08:30.740
终点信息集群

00:08:27.800 --> 00:08:33.530
也许一些IP地址和标签

00:08:30.740 --> 00:08:38.120
可能会查找正在捕获的跟踪

00:08:33.530 --> 00:08:39.890
这些东西，你知道它在

00:08:38.120 --> 00:08:43.220
示踪剂将记录下来

00:08:39.890 --> 00:08:44.870
我在这里显示颜色

00:08:43.220 --> 00:08:47.930
强调我不是很敏感

00:08:44.870 --> 00:08:52.070
对于有色盲的人

00:08:47.930 --> 00:08:55.250
灰色的是一台主机，然后

00:08:52.070 --> 00:08:56.870
灰色的主机是另一台主机，因此

00:08:55.250 --> 00:08:58.850
想法是示踪剂实际上存在于

00:08:56.870 --> 00:09:02.300
一位主人喜欢，如果你在春天

00:08:58.850 --> 00:09:04.540
世界您的春季启动应用程序将有一个

00:09:02.300 --> 00:09:08.120
侦探内部正在控制的示踪剂

00:09:04.540 --> 00:09:10.010
这将发送数据

00:09:08.120 --> 00:09:12.170
它可以看到仅是数据

00:09:10.010 --> 00:09:15.050
从那个过程中，然后

00:09:12.170 --> 00:09:16.820
是另一个过程，你知道你是

00:09:15.050 --> 00:09:18.770
打电话也许然后

00:09:16.820 --> 00:09:20.600
它自己的示踪剂是独立的，因此

00:09:18.770 --> 00:09:23.180
他们没有像集群一样共享

00:09:20.600 --> 00:09:26.090
他们之间或发生的任何事情是

00:09:23.180 --> 00:09:26.810
当您打来电话时，他们

00:09:26.090 --> 00:09:29.780
主持另一个

00:09:26.810 --> 00:09:32.720
它会添加一些类似HTTP的内容

00:09:29.780 --> 00:09:34.550
添加标头，说明我所在的跟踪ID 

00:09:32.720 --> 00:09:37.280
这些将传递给您

00:09:34.550 --> 00:09:44.330
下游，所以如果你在这里看到

00:09:37.280 --> 00:09:50.750
示例没有父母的路线

00:09:44.330 --> 00:09:53.510
在同一过程中使用

00:09:50.750 --> 00:09:55.250
线程本地人或其他东西，但如果有的话

00:09:53.510 --> 00:09:59.510
穿过它会完全一样

00:09:55.250 --> 00:10:01.490
 ID，但可能在ID的标头上方

00:09:59.510 --> 00:10:04.160
这些是重要的事情

00:10:01.490 --> 00:10:06.380
可以链接电话的东西

00:10:04.160 --> 00:10:07.850
关系，以防万一您可能有一个

00:10:06.380 --> 00:10:10.100
千件事同时发生

00:10:07.850 --> 00:10:13.820
时间和时间戳将无济于事

00:10:10.100 --> 00:10:16.040
你是数据的实际

00:10:13.820 --> 00:10:18.380
重要的部分，例如那些

00:10:16.040 --> 00:10:20.560
告诉你那是什么HTTP请求

00:10:18.380 --> 00:10:26.600
同步发出事件

00:10:20.560 --> 00:10:29.240
因此，这可以管理您在

00:10:26.600 --> 00:10:32.210
关键路径

00:10:29.240 --> 00:10:34.190
他们发送的实际大JSON内容

00:10:32.210 --> 00:10:37.040
异步就是这样

00:10:34.190 --> 00:10:39.080
所以如果你打开它

00:10:37.040 --> 00:10:41.660
打开实用程序库的跟踪器

00:10:39.080 --> 00:10:43.970
如果您使用的是弹簧靴， 

00:10:41.660 --> 00:10:45.470
平时有春云探秘

00:10:43.970 --> 00:10:48.680
这对你来说你甚至可能都不知道

00:10:45.470 --> 00:10:50.570
发生了什么事

00:10:48.680 --> 00:10:52.220
特定于框架的检测

00:10:50.570 --> 00:10:54.140
编码您配置它或

00:10:52.220 --> 00:10:58.580
像sue这样的配置

00:10:54.140 --> 00:11:00.350
你，然后在最后

00:10:58.580 --> 00:11:02.660
指着某天扔这个

00:11:00.350 --> 00:11:04.040
东西，有些人会把它扔掉

00:11:02.660 --> 00:11:06.860
在他们的日志中，但是大多数时候

00:11:04.040 --> 00:11:09.050
会将其发送到跟踪系统

00:11:06.860 --> 00:11:13.100
开始成为其中之一，这是一个

00:11:09.050 --> 00:11:16.250
我们可爱的不断发展的新用户界面的屏幕截图

00:11:13.100 --> 00:11:19.790
叫做镜头，这是真实的痕迹

00:11:16.250 --> 00:11:24.830
这里很多人曾经用过一个叫做

00:11:19.790 --> 00:11:27.080
输入表格以完成表格

00:11:24.830 --> 00:11:29.990
应该支持您的本地业务

00:11:27.080 --> 00:11:31.400
这是一家巴塞罗那公司，所以

00:11:29.990 --> 00:11:32.840
这是我们这实际上是一个现场

00:11:31.400 --> 00:11:37.420
我今天从某人那里得到的踪迹

00:11:32.840 --> 00:11:40.100
巴塞罗那，这说明了

00:11:37.420 --> 00:11:43.790
要求他们进入他们的服务平台

00:11:40.100 --> 00:11:47.470
有API代理，您可以看到整个

00:11:43.790 --> 00:11:50.630
请求花费了50毫秒和1/2毫秒

00:11:47.470 --> 00:11:54.140
击中3个服务的宽度称为

00:11:50.630 --> 00:11:57.980
最多10个操作的最大深度为6 

00:11:54.140 --> 00:12:01.040
发生了，你可以看到这是一个迷你

00:11:57.980 --> 00:12:02.570
地图实际上可能不需要，并且

00:12:01.040 --> 00:12:04.190
追踪这个小但是如果你有

00:12:02.570 --> 00:12:06.410
就像70 

00:12:04.190 --> 00:12:09.410
您可能需要一张小地图的服务

00:12:06.410 --> 00:12:12.470
喜欢在这种情况下到达正确的位置

00:12:09.410 --> 00:12:14.150
我问他像你能给我看一个像

00:12:12.470 --> 00:12:16.460
跟踪其中有一个错误

00:12:14.150 --> 00:12:19.010
这样会更容易解释

00:12:16.460 --> 00:12:22.700
如果红色表示底部错误

00:12:19.010 --> 00:12:26.420
所以他们以某种方式打电话来让

00:12:22.700 --> 00:12:29.450
我犯了错，但是如果你知道怎么读

00:12:26.420 --> 00:12:31.760
这个，你知道红色意味着错误，我知道

00:12:29.450 --> 00:12:34.250
我不能怪查询，因为

00:12:31.760 --> 00:12:36.140
他们都成功了，还有别的

00:12:34.250 --> 00:12:38.600
调用失败也许是一些代码

00:12:36.140 --> 00:12:41.630
数据库后无指针异常

00:12:38.600 --> 00:12:43.040
如果您知道如何读取查询，则返回查询

00:12:41.630 --> 00:12:44.930
跟踪您可以轻松地将其上下文化

00:12:43.040 --> 00:12:47.570
事情，我不是，这不像一个

00:12:44.930 --> 00:12:50.450
关于如何使用跟踪的课程，我只是

00:12:47.570 --> 00:12:55.730
试图看一眼现实生活

00:12:50.450 --> 00:12:58.130
显示Zipkin是一个您知道的工具包

00:12:55.730 --> 00:12:59.930
甚至可以像单个文件一样轻松部署

00:12:58.130 --> 00:13:02.300
尽管我们不建议人们

00:12:59.930 --> 00:13:04.010
使用我们的内存选项，我们经常

00:13:02.300 --> 00:13:07.460
人们做我们明确说过的事情

00:13:04.010 --> 00:13:10.100
不要好像碰巧是一个

00:13:07.460 --> 00:13:13.550
春天的butaplication，所以你可以

00:13:10.100 --> 00:13:15.140
非常简单地启动它，但是

00:13:13.550 --> 00:13:17.330
这次演讲的重点不是很像

00:13:15.140 --> 00:13:20.710
我确实需要做一些介绍

00:13:17.330 --> 00:13:24.350
在这里花15分钟来做，但是

00:13:20.710 --> 00:13:26.750
这是典型的肉

00:13:24.350 --> 00:13:28.580
该网站看起来还可以，所以很高兴看到

00:13:26.750 --> 00:13:32.320
图片和事物，但这意味着什么

00:13:28.580 --> 00:13:34.250
给人们，当我谈论一个网站时

00:13:32.320 --> 00:13:39.080
我的意思是像生产

00:13:34.250 --> 00:13:40.550
部署，您知道为什么

00:13:39.080 --> 00:13:42.830
是什么让它成为您知道的zip网站

00:13:40.550 --> 00:13:46.960
这意味着其中有一部分

00:13:42.830 --> 00:13:50.150
他们所依赖的生态系统

00:13:46.960 --> 00:13:54.380
我们作为社区的某些部分

00:13:50.150 --> 00:13:57.650
产生生活是肮脏的，这不像你

00:13:54.380 --> 00:13:59.510
只用一件事

00:13:57.650 --> 00:14:02.030
一个日期库，我什么也不需要

00:13:59.510 --> 00:14:03.590
因为显然你需要把它放

00:14:02.030 --> 00:14:05.000
在您需要部署的服务器内部

00:14:03.590 --> 00:14:07.490
服务器上有很多东西

00:14:05.000 --> 00:14:11.540
用来使我们的东西起作用，所以Zipkin是

00:14:07.490 --> 00:14:13.760
它生活在这些事物之中，并依地点而定

00:14:11.540 --> 00:14:15.740
老板我的意思是尽管

00:14:13.760 --> 00:14:18.860
人们有很多工作，通常

00:14:15.740 --> 00:14:20.810
实际上更感兴趣的人

00:14:18.860 --> 00:14:23.690
在诸如追踪或他们的

00:14:20.810 --> 00:14:25.550
网站所有者要做的任务，我的意思是

00:14:23.690 --> 00:14:28.610
像这样负责的人

00:14:25.550 --> 00:14:31.040
特别是那些倾向于

00:14:28.610 --> 00:14:32.870
将信息发布回

00:14:31.040 --> 00:14:35.030
社区或相当参与

00:14:32.870 --> 00:14:36.980
社区，这意味着他们

00:14:35.030 --> 00:14:38.570
他们实际上在回馈

00:14:36.980 --> 00:14:43.640
以某种方式，即使只是知识

00:14:38.570 --> 00:14:46.370
关于发生了什么，所以如果我们想

00:14:43.640 --> 00:14:48.590
当你知道其中一个

00:14:46.370 --> 00:14:51.890
关于这次演讲的一些事情

00:14:48.590 --> 00:14:53.840
从我们的Wiki获取信息，因此我们

00:14:51.890 --> 00:14:56.180
有一个关于的维基

00:14:53.840 --> 00:14:58.700
叫网站，我可以给你链接

00:14:56.180 --> 00:15:01.610
我认为它在滑盖中，但是我们

00:14:58.700 --> 00:15:03.410
刚刚掷骰子说好吧

00:15:01.610 --> 00:15:06.050
如果我们要求人们给我们信息

00:15:03.410 --> 00:15:07.220
他们会实际这样做吗，所以这里是

00:15:06.050 --> 00:15:10.490
那些做过的人的一些问题

00:15:07.220 --> 00:15:13.760
像他们的公司一样回答

00:15:10.490 --> 00:15:15.980
做，喜欢他们如何建立自己的

00:15:13.760 --> 00:15:17.300
工具包是什么类型的东西

00:15:15.980 --> 00:15:19.250
对他们来说很重要，例如什么类型的数据

00:15:17.300 --> 00:15:20.600
他们真的在用吗，因为

00:15:19.250 --> 00:15:22.460
有时候你会捕获很多

00:15:20.600 --> 00:15:24.140
信息，但您没有阅读任何信息

00:15:22.460 --> 00:15:25.610
那么真正重要的东西是什么

00:15:24.140 --> 00:15:29.240
从刚刚收集的东西中

00:15:25.610 --> 00:15:32.330
和一些统计数据，如你所知

00:15:29.240 --> 00:15:34.190
他们花了多少钱，所以让我们

00:15:32.330 --> 00:15:37.220
想想发生的一些事情

00:15:34.190 --> 00:15:39.080
在系统中，例如您正在收集

00:15:37.220 --> 00:15:40.820
如果您想运行日志系统

00:15:39.080 --> 00:15:42.650
您需要知道多少数据

00:15:40.820 --> 00:15:44.240
能够负担得起并保持

00:15:42.650 --> 00:15:46.910
你要遵守多长时间？ 

00:15:44.240 --> 00:15:49.010
类似的事情发生并追踪

00:15:46.910 --> 00:15:52.850
尽管通常数据保留是

00:15:49.010 --> 00:15:54.440
很短的也许七天的事情

00:15:52.850 --> 00:15:55.790
与网站有很大不同

00:15:54.440 --> 00:15:59.660
定位或喜欢人们如何命名他们的

00:15:55.790 --> 00:16:02.450
服务，如果我们回到喜欢的东西

00:15:59.660 --> 00:16:05.300
像这些名字一样

00:16:02.450 --> 00:16:06.410
他们你可以给任何东西起名字

00:16:05.300 --> 00:16:09.050
当我在Twitter工作时

00:16:06.410 --> 00:16:10.700
鸟类，就像你一样，很清楚

00:16:09.050 --> 00:16:13.010
公司发生的事情就像他们得到

00:16:10.700 --> 00:16:14.900
大，然后最终一些高级副总裁说

00:16:13.010 --> 00:16:16.850
好的，不再需要愚蠢的名字了

00:16:14.900 --> 00:16:19.370
东西，现在您必须重命名

00:16:16.850 --> 00:16:20.900
诸如此类，例如服务命名

00:16:19.370 --> 00:16:22.670
不像追踪中的问题，但它

00:16:20.900 --> 00:16:24.800
如果您不这样做，将成为更大的问题

00:16:22.670 --> 00:16:26.930
有一个很好的服务名称，就像一个

00:16:24.800 --> 00:16:29.330
有趣的是你善良

00:16:26.930 --> 00:16:31.070
继承你正常的问题

00:16:29.330 --> 00:16:35.420
开始绘图时的体系结构

00:16:31.070 --> 00:16:38.720
他们在图上，这样的类型

00:16:35.420 --> 00:16:41.330
网站专用标签，例如

00:16:38.720 --> 00:16:43.130
像麦当劳一样经营麦当劳

00:16:41.330 --> 00:16:45.650
每秒实际上很重要

00:16:43.130 --> 00:16:46.910
对我来说是事实，但也许也是

00:16:45.650 --> 00:16:49.820
如果我现在在工作很重要

00:16:46.910 --> 00:16:52.700
麦当劳，你知道实际上有

00:16:49.820 --> 00:16:54.770
实际上是上下文相关的权利，实际上是

00:16:52.700 --> 00:16:56.720
它可以让您确保

00:16:54.770 --> 00:16:59.870
索引是我们有一个叫做

00:16:56.720 --> 00:17:04.190
自动完成标记，因此您可以将其训练为

00:16:59.870 --> 00:17:06.980
捕捉巨无霸，如果你想要的话

00:17:04.190 --> 00:17:08.660
像那里那样的任何比率

00:17:06.980 --> 00:17:10.430
另一件事很有趣

00:17:08.660 --> 00:17:12.680
网站是每个人都在不同的地方

00:17:10.430 --> 00:17:16.339
像刚开始一样的地方

00:17:12.680 --> 00:17:17.839
您是否处于维护模式并处于

00:17:16.339 --> 00:17:19.640
关于捕获网站的整个观点

00:17:17.839 --> 00:17:22.459
信息是为了让人们喜欢

00:17:19.640 --> 00:17:23.600
自己是不是有人

00:17:22.459 --> 00:17:25.220
听起来实际上很多人

00:17:23.600 --> 00:17:27.020
已经使用跟踪但仍然使用

00:17:25.220 --> 00:17:29.360
无论您在哪里，都有

00:17:27.020 --> 00:17:32.570
可能不在你身旁的人

00:17:29.360 --> 00:17:34.540
现在还是谁更远

00:17:32.570 --> 00:17:36.710
分享知识真的很有帮助

00:17:34.540 --> 00:17:39.710
无论如何为什么要打扰

00:17:36.710 --> 00:17:42.740
所以上升就像金融服务

00:17:39.710 --> 00:17:44.780
他们知道的公司他们说

00:17:42.740 --> 00:17:46.160
他们的用途是什么

00:17:44.780 --> 00:17:48.770
他们说出自己为什么的故事

00:17:46.160 --> 00:17:50.570
做他们在做什么，你知道

00:17:48.770 --> 00:17:54.710
人们说什么很有趣

00:17:50.570 --> 00:17:56.270
选择，在他们的情况下，他们合二为一

00:17:54.710 --> 00:17:58.640
其中包括数字化转型

00:17:56.270 --> 00:18:01.060
人们说数字化之类的事情

00:17:58.640 --> 00:18:05.030
在西班牙的改造我

00:18:01.060 --> 00:18:08.630
认为我到处都能听到，但是像是的

00:18:05.030 --> 00:18:10.490
重构一切，你也可以

00:18:08.630 --> 00:18:12.830
找出您的服务是否

00:18:10.490 --> 00:18:15.290
现在表现不佳，因为它不会

00:18:12.830 --> 00:18:17.480
总是表现更好，所以你可以

00:18:15.290 --> 00:18:20.120
看一个单独的服务电话

00:18:17.480 --> 00:18:22.720
看看是否真的有影响

00:18:20.120 --> 00:18:26.170
是否朝正确的方向冲击

00:18:22.720 --> 00:18:28.220
还有这个想法

00:18:26.170 --> 00:18:29.840
不合格服务通信

00:18:28.220 --> 00:18:31.880
这非常像金融服务

00:18:29.840 --> 00:18:34.160
正确的单词类型，但这意味着什么

00:18:31.880 --> 00:18:35.480
那是你的应用程序吗

00:18:34.160 --> 00:18:40.070
建立不应该的连接

00:18:35.480 --> 00:18:42.110
因此，例如欧洲

00:18:40.070 --> 00:18:44.120
有人走来走去

00:18:42.110 --> 00:18:46.220
用网状锤子之类的

00:18:44.120 --> 00:18:48.020
在物体上打孔并说

00:18:46.220 --> 00:18:49.460
网格正在做所有事情，然后

00:18:48.020 --> 00:18:52.010
你实际上看你的流量

00:18:49.460 --> 00:18:54.680
它不使用网格而只是去

00:18:52.010 --> 00:18:56.420
无论在哪里进行跟踪

00:18:54.680 --> 00:18:57.800
帮助您找到正确的方法，因为您可以

00:18:56.420 --> 00:18:59.450
实际看到的网络连接

00:18:57.800 --> 00:19:01.160
那些使您能够

00:18:59.450 --> 00:19:06.350
告诉您的应用程序是否

00:19:01.160 --> 00:19:08.270
实际上完全使用了网格等等

00:19:06.350 --> 00:19:09.680
基本上有偏差

00:19:08.270 --> 00:19:11.900
从设计是重要的之一

00:19:09.680 --> 00:19:14.450
事情，因为他们正在经历

00:19:11.900 --> 00:19:17.000
 hotels.com就像你知道的

00:19:14.450 --> 00:19:18.890
他们正在寻找你知道的

00:19:17.000 --> 00:19:22.290
低垂的果实

00:19:18.890 --> 00:19:24.450
看起来更像是一项服务

00:19:22.290 --> 00:19:26.490
水平分类，如果您正在寻找

00:19:24.450 --> 00:19:28.500
找出你知道谁的人

00:19:26.490 --> 00:19:30.270
低挂的水果是这样，如果你是

00:19:28.500 --> 00:19:32.820
运行与预订相关的任何内容，以及

00:19:30.270 --> 00:19:34.710
您正在让客户等待所有

00:19:32.820 --> 00:19:35.760
跟踪发生的事情很棒

00:19:34.710 --> 00:19:37.590
为此，因为你很多

00:19:35.760 --> 00:19:39.780
下游可能很慢，所以

00:19:37.590 --> 00:19:41.280
流水线操作可能非常容易

00:19:39.780 --> 00:19:42.960
有时很难

00:19:41.280 --> 00:19:45.750
特别是与异步库

00:19:42.960 --> 00:19:47.280
我们正在使用我们可能不知道是否可能

00:19:45.750 --> 00:19:48.840
看起来真的很被动，除了

00:19:47.280 --> 00:19:51.270
它可能仍在继续

00:19:48.840 --> 00:19:53.250
顺序地，所以这很重要

00:19:51.270 --> 00:19:55.320
实际查看痕迹以查看是否

00:19:53.250 --> 00:19:57.240
实际上您的请求正在做什么

00:19:55.320 --> 00:20:00.530
你以为他们在做或者他们在看

00:19:57.240 --> 00:20:03.810
就像我们谈论的那样

00:20:00.530 --> 00:20:05.910
歇斯底里的歇斯底里模式

00:20:03.810 --> 00:20:07.170
只是从字面上看到请求像

00:20:05.910 --> 00:20:08.820
这，当您看到请求正在进行时

00:20:07.170 --> 00:20:10.350
这样他们就不会并行

00:20:08.820 --> 00:20:14.660
他们实际上是非常连续的

00:20:10.350 --> 00:20:14.660
所以看这些东西变得更容易

00:20:14.750 --> 00:20:21.330
是的，Netflix实际上是他们

00:20:19.110 --> 00:20:24.000
基本上，如果你说的话

00:20:21.330 --> 00:20:25.700
向后运行DevOps 

00:20:24.000 --> 00:20:30.090
知名度和开发人员生产力

00:20:25.700 --> 00:20:31.500
具体来说，你知道

00:20:30.090 --> 00:20:35.070
 Netflix，所以他们使用更多

00:20:31.500 --> 00:20:37.770
春季靴他们有很多老

00:20:35.070 --> 00:20:39.720
如果它们都在

00:20:37.770 --> 00:20:41.760
相同的痕迹对于它来说要容易得多

00:20:39.720 --> 00:20:43.950
人们对实际情况有见识

00:20:41.760 --> 00:20:46.230
建筑而不是分数

00:20:43.950 --> 00:20:48.510
这是新的，只是旧的一部分

00:20:46.230 --> 00:20:51.360
因此深入了解

00:20:48.510 --> 00:20:53.840
整个事情正在发生

00:20:51.360 --> 00:20:56.700
跟踪后端的基础架构

00:20:53.840 --> 00:21:01.380
基本上人们是否会失望

00:20:56.700 --> 00:21:03.180
理想应用中的几件事

00:21:01.380 --> 00:21:05.220
环境，您的技能与您的技能相匹配

00:21:03.180 --> 00:21:06.990
建筑，当它不太理想时

00:21:05.220 --> 00:21:09.360
他们不追踪与

00:21:06.990 --> 00:21:11.460
因此，如果您创建一大堆

00:21:09.360 --> 00:21:13.740
架构，没人知道如何运行

00:21:11.460 --> 00:21:16.320
或针对它发展，那不是

00:21:13.740 --> 00:21:19.050
你知道我绝对快乐的地方

00:21:16.320 --> 00:21:20.310
在您认识团队的地方工作

00:21:19.050 --> 00:21:22.860
可能会离开建筑物

00:21:20.310 --> 00:21:25.260
然后每个人都喜欢这个东西， 

00:21:22.860 --> 00:21:27.600
然后他们将其正确重写，如此

00:21:25.260 --> 00:21:29.550
同样的东西，如果你有

00:21:27.600 --> 00:21:32.160
人们感觉不到的任何东西

00:21:29.550 --> 00:21:34.770
致力于他们称之为遗产

00:21:32.160 --> 00:21:37.559
而你不想像传统

00:21:34.770 --> 00:21:38.549
事情虽然你实际上是因为

00:21:37.559 --> 00:21:43.350
那就是赚钱的东西

00:21:38.549 --> 00:21:45.120
但不管怎么说，网站都有

00:21:43.350 --> 00:21:47.730
您想要的不同要求

00:21:45.120 --> 00:21:50.880
针对您的技能进行优化

00:21:47.730 --> 00:21:52.260
在这种情况下，如果有人有更多

00:21:50.880 --> 00:21:53.429
您在Elasticsearch方面的经验

00:21:52.260 --> 00:21:56.309
可能会使用elasticsearch 

00:21:53.429 --> 00:21:58.320
斯图尔特存储他们的踪迹，如果他们是

00:21:56.309 --> 00:22:01.440
在一个说，他们也许他们将要

00:21:58.320 --> 00:22:04.559
如果他们在Google中，请使用Google Cloud 

00:22:01.440 --> 00:22:06.510
云存储他们的东西，这样

00:22:04.559 --> 00:22:08.360
很好地指出了这一点

00:22:06.510 --> 00:22:11.010
意思是

00:22:08.360 --> 00:22:13.230
 Sipkins服务器实际上正在全部使用

00:22:11.010 --> 00:22:17.000
时间不长，实际上我们有很多

00:22:13.230 --> 00:22:21.000
不使用Zipkin服务器的网站

00:22:17.000 --> 00:22:22.799
因为他们用的是无礼的

00:22:21.000 --> 00:22:25.799
例如，如果您使用的是Spring Cloud 

00:22:22.799 --> 00:22:29.370
今天您可以实际配置

00:22:25.799 --> 00:22:30.480
直接用DCP插件发送

00:22:29.370 --> 00:22:32.370
直接到堆栈驱动器

00:22:30.480 --> 00:22:36.419
在没有服务器基础架构的情况下进行跟踪

00:22:32.370 --> 00:22:39.650
根本可以和一个下午有关

00:22:36.419 --> 00:22:43.200
集成很多APM产品

00:22:39.650 --> 00:22:45.090
是否接受Zipkin格式

00:22:43.200 --> 00:22:46.919
承认与否通常可以找到

00:22:45.090 --> 00:22:49.860
通过与其他客户交谈来解决这个问题

00:22:46.919 --> 00:22:53.940
然后你有混合动力

00:22:49.860 --> 00:22:57.000
例如人们正在存储

00:22:53.940 --> 00:23:01.110
数据进行长期分析，然后您

00:22:57.000 --> 00:23:04.400
知道，例如在Netflix，我认为

00:23:01.110 --> 00:23:07.530
他们和他们存储的Expedia 

00:23:04.400 --> 00:23:11.730
长期跟踪和喜欢s3 

00:23:07.530 --> 00:23:13.230
公园一样的东西，但正常的痕迹

00:23:11.730 --> 00:23:17.010
数据存储时间短得多

00:23:13.230 --> 00:23:19.169
大概三天的时间

00:23:17.010 --> 00:23:20.520
这很混乱，这意味着像是

00:23:19.169 --> 00:23:22.020
将会有一些网站

00:23:20.520 --> 00:23:24.900
使用这些东西的初学者

00:23:22.020 --> 00:23:27.960
正在使用Zipkin的克隆，并且

00:23:24.900 --> 00:23:30.299
有点取决于我认为

00:23:27.960 --> 00:23:31.980
更多有趣的网站Yelp是这个

00:23:30.299 --> 00:23:36.750
像一个消防水枪收藏家的东西

00:23:31.980 --> 00:23:39.720
所以他们想保留100％的数据

00:23:36.750 --> 00:23:42.059
如客户服务要求和

00:23:39.720 --> 00:23:43.770
这样的事情，所以他们有

00:23:42.059 --> 00:23:47.040
建筑在哪里

00:23:43.770 --> 00:23:50.490
他们基本上存储了所有数据，但是

00:23:47.040 --> 00:23:52.290
在Amazon可用区本地

00:23:50.490 --> 00:23:54.870
他们每个人都喜欢Cassandra集群

00:23:52.290 --> 00:23:56.190
可用区，他们剃光了100％ 

00:23:54.870 --> 00:23:59.970
数据同时存在

00:23:56.190 --> 00:24:02.520
正常服务器的拍摄速度是0.01％ 

00:23:59.970 --> 00:24:04.740
如果有人有问题

00:24:02.520 --> 00:24:07.040
在那段时间里也许是

00:24:04.740 --> 00:24:10.980
一个小时，那么他们总能找到踪影

00:24:07.040 --> 00:24:11.670
而通常是分布式的

00:24:10.980 --> 00:24:14.400
追踪我们有这个东西叫做

00:24:11.670 --> 00:24:17.730
采样您并不总是在哪里

00:24:14.400 --> 00:24:18.890
完整的请求跟踪

00:24:17.730 --> 00:24:21.510
有一些有趣的东西

00:24:18.890 --> 00:24:23.190
人们使用我的有趣模式

00:24:21.510 --> 00:24:23.970
会把那个叫做混合动力

00:24:23.190 --> 00:24:29.390
他们要寄给两个不同的人

00:24:23.970 --> 00:24:31.320
位置同时知道

00:24:29.390 --> 00:24:33.780
当您使用跟踪不

00:24:31.320 --> 00:24:35.900
每个人都在使用相同的

00:24:33.780 --> 00:24:41.430
库，例如，如果您正在使用

00:24:35.900 --> 00:24:43.890
这样的事情，你我没看到

00:24:41.430 --> 00:24:47.430
像火花，但你们不是

00:24:43.890 --> 00:24:49.230
无论如何，重要的是envoi是

00:24:47.430 --> 00:24:52.640
用C ++编写的，所以可能

00:24:49.230 --> 00:24:55.560
不会像Soluz那样使用，是的

00:24:52.640 --> 00:24:58.170
不是C ++，所以他们会像

00:24:55.560 --> 00:25:00.300
在某些情况下直接图书馆或

00:24:58.170 --> 00:25:02.700
应用程序框架将

00:25:00.300 --> 00:25:03.840
被写成不同的方式，所以这些

00:25:02.700 --> 00:25:06.300
标头和我们拥有的东西

00:25:03.840 --> 00:25:08.040
规格你知道这些

00:25:06.300 --> 00:25:10.320
写入格式，以便其他

00:25:08.040 --> 00:25:11.640
派对可以参加，我是说你有

00:25:10.320 --> 00:25:14.160
微服务，但每个人都有

00:25:11.640 --> 00:25:17.970
同一个图书馆，我的意思是很酷

00:25:14.160 --> 00:25:19.650
那很方便，但是

00:25:17.970 --> 00:25:22.560
世界并不总是方便您

00:25:19.650 --> 00:25:26.130
有不同的服务使用

00:25:22.560 --> 00:25:29.670
不同的事情，令人惊讶的是

00:25:26.130 --> 00:25:31.850
内部人员经常发生的事

00:25:29.670 --> 00:25:34.470
就像清理代理日志并

00:25:31.850 --> 00:25:36.810
将其转回跟踪并

00:25:34.470 --> 00:25:40.010
这样的事情就这样了

00:25:36.810 --> 00:25:40.010
比您想像的更多

00:25:43.560 --> 00:25:47.790
我不知道这是否称为案件

00:25:45.930 --> 00:25:49.470
学习，但这是一个有趣的

00:25:47.790 --> 00:25:51.000
人们通常不会谈论的

00:25:49.470 --> 00:25:53.190
当他们谈论项目时

00:25:51.000 --> 00:25:54.680
这是一个已停止的项目

00:25:53.190 --> 00:25:58.310
使用邮政编码

00:25:54.680 --> 00:25:59.090
所以酒店平静最初开始

00:25:58.310 --> 00:26:01.250
实际上实际上

00:25:59.090 --> 00:26:06.470
 Expedia最初以

00:26:01.250 --> 00:26:09.080
 Zipkin以及它们实际上是

00:26:06.470 --> 00:26:12.350
 Expedia公司做了一个有趣的事情

00:26:09.080 --> 00:26:15.260
一种叫做haystack的产品

00:26:12.350 --> 00:26:17.060
就像一个非常进化的工具，其中包括

00:26:15.260 --> 00:26:18.350
诸如警告之类的东西很漂亮

00:26:17.060 --> 00:26:21.650
整齐

00:26:18.350 --> 00:26:24.080
所以酒店开始平静

00:26:21.650 --> 00:26:25.790
带有Zipkin后端，因此它们

00:26:24.080 --> 00:26:28.280
使用诸如洒侦探和

00:26:25.790 --> 00:26:31.010
这样的东西，他们想

00:26:28.280 --> 00:26:33.470
实际将数据发送到另一个

00:26:31.010 --> 00:26:36.290
跟踪系统，因为公司拥有

00:26:33.470 --> 00:26:39.530
这就像更大的基础架构

00:26:36.290 --> 00:26:41.780
干草堆，所以他们所做的是

00:26:39.530 --> 00:26:43.730
他们实际上还是他们不是

00:26:41.780 --> 00:26:45.650
不用担心重写他们的应用程序

00:26:43.730 --> 00:26:47.930
喜欢任意发送到

00:26:45.650 --> 00:26:50.390
他们有这个不同的格式

00:26:47.930 --> 00:26:55.550
称为干草叉的工具

00:26:50.390 --> 00:26:57.740
我认为春天的佛陀

00:26:55.550 --> 00:26:59.330
只是将数据代理给其他人

00:26:57.740 --> 00:27:01.610
系统，因为数据格式是

00:26:59.330 --> 00:27:04.250
通常有点类似，所以它不是

00:27:01.610 --> 00:27:06.680
没什么大不了的，但是当他们的开发商

00:27:04.250 --> 00:27:09.200
做工作，因为它更容易

00:27:06.680 --> 00:27:12.730
部署Zipkin胜过干草堆

00:27:09.200 --> 00:27:15.110
干草堆，你知道他们有这样的事情

00:27:12.730 --> 00:27:18.410
地形和东西喜欢旋转

00:27:15.110 --> 00:27:22.070
的东西，但如果你有

00:27:18.410 --> 00:27:23.930
与Java相比-黑暗，你知道

00:27:22.070 --> 00:27:26.000
也许在某些情况下，您只是Java部长

00:27:23.930 --> 00:27:27.470
所以他们的开发人员

00:27:26.000 --> 00:27:29.150
当他们对问题进行故障排除时

00:27:27.470 --> 00:27:30.830
只需在本地旋转邮政编码

00:27:29.150 --> 00:27:33.200
工作站，然后他们可以找出

00:27:30.830 --> 00:27:34.400
他们的应用程序在做什么，而他们没有

00:27:33.200 --> 00:27:35.450
必须考虑以下事实： 

00:27:34.400 --> 00:27:37.400
生产他们使用不同的

00:27:35.450 --> 00:27:43.640
追溯他们，这有点

00:27:37.400 --> 00:27:45.710
帮助，所以有一个你知道一个

00:27:43.640 --> 00:27:47.870
最初未使用的其他网站

00:27:45.710 --> 00:27:49.430
 Zipkin和我谈论的是

00:27:47.870 --> 00:27:54.520
稍后给我链接

00:27:49.430 --> 00:27:58.880
笔记，但Netflix我可以说像

00:27:54.520 --> 00:28:00.710
 2011-2012年很多消费者喜欢说

00:27:58.880 --> 00:28:04.070
公司进行自己的跟踪

00:28:00.710 --> 00:28:05.400
系统Twitter有点独特

00:28:04.070 --> 00:28:09.120
因为他们

00:28:05.400 --> 00:28:10.260
首先是开源眼泪，但这不是

00:28:09.120 --> 00:28:14.550
意味着事情没有发生，你只是

00:28:10.260 --> 00:28:16.200
没看到，所以Netflix有了他们

00:28:14.550 --> 00:28:17.940
自己的跟踪系统完全相同

00:28:16.200 --> 00:28:23.220
很多公司都在做

00:28:17.940 --> 00:28:24.720
所以他们让你知道你看到了这个

00:28:23.220 --> 00:28:29.510
绕过字词修饰符就可以了

00:28:24.720 --> 00:28:31.830
一般的设计，所以很多

00:28:29.510 --> 00:28:35.880
他们使用的Java架构是

00:28:31.830 --> 00:28:37.200
使用不同的库，然后使用

00:28:35.880 --> 00:28:41.490
架构开始向

00:28:37.200 --> 00:28:43.350
 spring boot ，所以他们做了什么

00:28:41.490 --> 00:28:48.360
他们改装时有几件事

00:28:43.350 --> 00:28:49.830
他们的旧图书馆只是迁移

00:28:48.360 --> 00:28:53.340
东西有点用一样

00:28:49.830 --> 00:28:56.700
如Zipkin使用的标头格式是

00:28:53.340 --> 00:28:58.679
被称为B 3和B 3代表Big 

00:28:56.700 --> 00:29:01.350
兄弟鸟哪位好

00:28:58.679 --> 00:29:04.800
如果您不知道的话，那么您是真的，并且

00:29:01.350 --> 00:29:06.570
那是因为Zipkin之前的设计

00:29:04.800 --> 00:29:10.410
实际上是一个叫做“老大哥”的系统

00:29:06.570 --> 00:29:14.760
那只鸟，那是推特的全部作品

00:29:10.410 --> 00:29:18.110
现在用鸟名命名的服务

00:29:14.760 --> 00:29:20.130
在Netflix上看其实是一个骗局

00:29:18.110 --> 00:29:22.860
管道，所以如果链接有点像

00:29:20.130 --> 00:29:25.590
如果链接人可能不会激发

00:29:22.860 --> 00:29:27.179
感谢我这样描述我

00:29:25.590 --> 00:29:30.270
认为这是流媒体架构

00:29:27.179 --> 00:29:32.340
他们的想法是，他们缓冲

00:29:30.270 --> 00:29:34.559
数据到某个特定点

00:29:32.340 --> 00:29:36.090
意识到这是完整的或

00:29:34.559 --> 00:29:39.090
可能我没有所有数据

00:29:36.090 --> 00:29:41.670
从所有主机，然后他们射击

00:29:39.090 --> 00:29:46.170
进行分析，然后他们也出货

00:29:41.670 --> 00:29:48.360
它到各种存储的东西，所以在他们

00:29:46.170 --> 00:29:49.890
他们的管道中有数据

00:29:48.360 --> 00:29:52.260
从旧系统将其转换为

00:29:49.890 --> 00:29:54.780
压缩游戏格式，然后启动应用程序

00:29:52.260 --> 00:29:56.520
已经在发送，然后作为

00:29:54.780 --> 00:29:58.110
它最终出现在elasticsearch和其他

00:29:56.520 --> 00:29:59.460
一切都以相同的格式

00:29:58.110 --> 00:30:05.460
所以他们做起来容易得多

00:29:59.460 --> 00:30:07.710
聚合和花式的东西，我们

00:30:05.460 --> 00:30:09.360
有一个从未使用过的网站

00:30:07.710 --> 00:30:12.860
服务器，但产量很高

00:30:09.360 --> 00:30:15.570
因此，对于恒星的贡献是

00:30:12.860 --> 00:30:18.150
太空通讯基础设施公司

00:30:15.570 --> 00:30:18.650
在东京这样的创业公司

00:30:18.150 --> 00:30:22.990
东西

00:30:18.650 --> 00:30:28.309
租用我认为的卫星和/或天线

00:30:22.990 --> 00:30:30.200
具体来说，所以他们实际上使用了

00:30:28.309 --> 00:30:32.300
各种不同的库取决于

00:30:30.200 --> 00:30:34.520
在最简单的东西上

00:30:32.300 --> 00:30:36.320
刚决定，您会注意到

00:30:34.520 --> 00:30:37.940
不同的语言，例如您使用的是

00:30:36.320 --> 00:30:39.350
某种编程语言的人

00:30:37.940 --> 00:30:40.820
将倾向于某些图书馆和

00:30:39.350 --> 00:30:43.880
世界上有很多营地

00:30:40.820 --> 00:30:45.050
对，所以主要的是，如果他们可以

00:30:43.880 --> 00:30:48.170
将所有内容都放入相同的数据

00:30:45.050 --> 00:30:50.960
格式化一切都很好，他们

00:30:48.170 --> 00:30:54.260
实际上是最有效的

00:30:50.960 --> 00:30:56.540
我们的google strack驱动程序集成和

00:30:54.260 --> 00:30:59.120
所以这意味着他们实际上没有

00:30:56.540 --> 00:31:00.290
甚至没有服务器占用空间

00:30:59.120 --> 00:31:03.309
虽然他们都在那里

00:31:00.290 --> 00:31:10.610
仪器库正在使用

00:31:03.309 --> 00:31:13.220
 Zipkin格式，我们还有另一个网站

00:31:10.610 --> 00:31:14.470
这很有趣，因为它已经完成了

00:31:13.220 --> 00:31:19.160
不多

00:31:14.470 --> 00:31:21.160
值得注意的是，我也觉得很高兴

00:31:19.160 --> 00:31:22.429
关于那些不是

00:31:21.160 --> 00:31:26.270
花式的

00:31:22.429 --> 00:31:29.420
所以元数据完全是亚马逊

00:31:26.270 --> 00:31:33.020
他们使用股票的亚马逊架构

00:31:29.420 --> 00:31:35.780
 zip开始图像，以便他们使用sqs发送

00:31:33.020 --> 00:31:37.670
周围的数据，因为它们不

00:31:35.780 --> 00:31:41.809
流量很大，很好

00:31:37.670 --> 00:31:43.040
实际上收集了100％的痕迹

00:31:41.809 --> 00:31:45.650
有趣的是，如果

00:31:43.040 --> 00:31:47.780
您正在运行类似您知道的东西

00:31:45.650 --> 00:31:49.850
移动应用程序，那么您就无法真正收集

00:31:47.780 --> 00:31:51.590
 100％的数据

00:31:49.850 --> 00:31:53.570
交流，如果您正在做任何事情

00:31:51.590 --> 00:31:56.270
就像IO T一样， 

00:31:53.570 --> 00:31:59.000
也可以，但是如果您在做事

00:31:56.270 --> 00:32:00.620
例如为公司填写的表格或

00:31:59.000 --> 00:32:03.200
像高价值的交易，你可以

00:32:00.620 --> 00:32:05.330
保留其中的百分之一百

00:32:03.200 --> 00:32:06.920
他们的情况下，他们选择收集我

00:32:05.330 --> 00:32:08.600
以为你甚至保留了一个月

00:32:06.920 --> 00:32:12.050
保留，因为没有理由

00:32:08.600 --> 00:32:14.690
他们不这样做，所以没有正确的规则

00:32:12.050 --> 00:32:16.070
关于您保留多少数据

00:32:14.690 --> 00:32:18.830
更多有关您负担得起的费用

00:32:16.070 --> 00:32:22.520
保持以及存储的感觉

00:32:18.830 --> 00:32:24.590
要摔倒了，他们确实做到了

00:32:22.520 --> 00:32:26.900
一些很有趣的东西

00:32:24.590 --> 00:32:29.390
的

00:32:26.900 --> 00:32:30.800
因为他们知道数据在

00:32:29.390 --> 00:32:32.120
他们的案子要去elasticsearch 

00:32:30.800 --> 00:32:37.160
虽然这不是唯一的存储空间

00:32:32.120 --> 00:32:39.590
他们找到了喜欢的方式

00:32:37.160 --> 00:32:40.700
做一些性能分析，然后尝试

00:32:39.590 --> 00:32:41.990
弄清楚有多少人在打电话

00:32:40.700 --> 00:32:44.420
不推荐使用的API 

00:32:41.990 --> 00:32:46.370
所以一旦你得到这些因果因果关系

00:32:44.420 --> 00:32:49.220
信息很酷

00:32:46.370 --> 00:32:51.260
可以找到的东西

00:32:49.220 --> 00:32:55.940
没有什么交流方式

00:32:51.260 --> 00:32:58.300
不好玩，所以我会说他们有货，但是

00:32:55.940 --> 00:33:03.350
他们还添加了一个称为睡眠的东西

00:32:58.300 --> 00:33:06.100
这是服务水平协议政策

00:33:03.350 --> 00:33:09.650
我想他们只是想打巴掌

00:33:06.100 --> 00:33:12.440
但基本上他们做了报告

00:33:09.650 --> 00:33:14.930
会拍人的系统

00:33:12.440 --> 00:33:17.120
他们搞砸了别人的服务

00:33:14.930 --> 00:33:19.820
级别协议或其服务

00:33:17.120 --> 00:33:22.010
正在调用已过时的服务等

00:33:19.820 --> 00:33:24.140
他们收到了拍打报告， 

00:33:22.010 --> 00:33:27.020
确实帮助他们推动了行为

00:33:24.140 --> 00:33:30.950
公司，因为名字和耻辱只是一个

00:33:27.020 --> 00:33:33.170
非常有效的工具，您看不到

00:33:30.950 --> 00:33:37.250
这里有点像模糊，但是

00:33:33.170 --> 00:33:42.880
基本上这不是一个非常漂亮的UI，但是

00:33:37.250 --> 00:33:42.880
它会告诉你这就像日志

00:33:46.690 --> 00:33:52.820
这超出了合规性，所以他们

00:33:50.480 --> 00:33:55.430
有一些非常绿色的服务

00:33:52.820 --> 00:33:58.660
还有一些很红，所以人们

00:33:55.430 --> 00:34:03.290
受到那些事情的激励

00:33:58.660 --> 00:34:05.570
所以除了像什么的建筑

00:34:03.290 --> 00:34:07.250
可能跟我想的不一样

00:34:05.570 --> 00:34:11.030
暗示了这一点，并谈到了

00:34:07.250 --> 00:34:13.250
它，但是数据收集策略非常

00:34:11.030 --> 00:34:15.620
网站之间的差异，我不会

00:34:13.250 --> 00:34:17.720
说总是不同，这意味着

00:34:15.620 --> 00:34:19.940
就像人们开始使用数据一样

00:34:17.720 --> 00:34:23.870
他们开始弄清楚你所知道的

00:34:19.940 --> 00:34:26.660
什么是重要的谈话

00:34:23.870 --> 00:34:30.620
大概是这样，例如

00:34:26.660 --> 00:34:33.520
他们所有在这里的人

00:34:30.620 --> 00:34:35.510
应用程序，它们始终会生成请求ID，因此

00:34:33.520 --> 00:34:37.640
不管您是要追踪还是

00:34:35.510 --> 00:34:38.929
他们使用的不是那种

00:34:37.640 --> 00:34:41.149
的标准模式

00:34:38.929 --> 00:34:42.440
传入的请求ID，因此它们是

00:34:41.149 --> 00:34:44.000
总是与此相关

00:34:42.440 --> 00:34:47.000
对他们来说最重要的是

00:34:44.000 --> 00:34:52.010
是为了让他们的用户看起来

00:34:47.000 --> 00:34:54.440
根据请求ID和时间

00:34:52.010 --> 00:34:56.419
信息恒星像反对一样工作

00:34:54.440 --> 00:34:59.210
对于Mac，他们最关心的是

00:34:56.419 --> 00:35:02.630
与天线，所以他们有自动

00:34:59.210 --> 00:35:05.619
完成，您知道需要

00:35:02.630 --> 00:35:07.790
与两个天线和卫星有关

00:35:05.619 --> 00:35:12.770
因为那些实际上是什么

00:35:07.790 --> 00:35:16.400
对公司很有价值许多公司

00:35:12.770 --> 00:35:18.619
曾经有微服务时代或

00:35:16.400 --> 00:35:20.180
数字化转换以及每个

00:35:18.619 --> 00:35:23.720
像污点一样留下，为您服务

00:35:20.180 --> 00:35:25.819
目录，所以我有趣的事情之一

00:35:23.720 --> 00:35:27.680
就像发生这些事情时一样

00:35:25.819 --> 00:35:29.270
大家都可以看到

00:35:27.680 --> 00:35:31.430
决定调用该服务

00:35:29.270 --> 00:35:33.650
今天，然后像两年

00:35:31.430 --> 00:35:36.859
后来好像没有服务，所以

00:35:33.650 --> 00:35:39.440
现在你们俩都如此

00:35:36.859 --> 00:35:40.970
有一些被索引的东西

00:35:39.440 --> 00:35:44.630
他们训练了所有人寻找

00:35:40.970 --> 00:35:47.510
单词实例代替服务等等

00:35:44.630 --> 00:35:49.130
对于他们，他们想要像你的眼睛

00:35:47.510 --> 00:35:50.809
通常说服务这个词，他们是

00:35:49.130 --> 00:35:52.220
不，请改成单词

00:35:50.809 --> 00:35:54.079
实例，因为它使我们像许多人一样

00:35:52.220 --> 00:35:56.380
未来几年告诉人们使用什么

00:35:54.079 --> 00:36:00.079
这个名字，所以我们必须使用这个名字

00:35:56.380 --> 00:36:02.089
和阶段而不是环境

00:36:00.079 --> 00:36:03.099
只是说唱，听起来很傻

00:36:02.089 --> 00:36:05.210
但这很重要，因为

00:36:03.099 --> 00:36:08.960
基础架构团队花费大量时间

00:36:05.210 --> 00:36:10.819
在这个问题上，如果

00:36:08.960 --> 00:36:12.770
所有这些都发生了，那么你就没有了

00:36:10.819 --> 00:36:17.270
表示将这些单词返回给

00:36:12.770 --> 00:36:19.309
人们使用此系统，然后

00:36:17.270 --> 00:36:21.440
与发生的有趣的事情

00:36:19.309 --> 00:36:24.559
 Expedia或Netflix等公共服务

00:36:21.440 --> 00:36:26.599
是秘密擦洗，所以如果你有

00:36:24.559 --> 00:36:29.690
通常情况下，您可以

00:36:26.599 --> 00:36:31.790
你知道偶然泄漏数据

00:36:29.690 --> 00:36:34.250
你以为你就像在记录一个准备好的

00:36:31.790 --> 00:36:37.490
带有问号的陈述，但在那里

00:36:34.250 --> 00:36:41.210
没有问号，所以如此

00:36:37.490 --> 00:36:43.760
你知道数据收集吗

00:36:41.210 --> 00:36:45.559
政策取决于

00:36:43.760 --> 00:36:48.369
在应用程序内部发生的情况

00:36:45.559 --> 00:36:51.619
您正在添加处理程序以进行清理

00:36:48.369 --> 00:36:52.490
某种数据或您是否

00:36:51.619 --> 00:36:56.080
那样做

00:36:52.490 --> 00:37:00.080
像Rabbitmq监听器或其他

00:36:56.080 --> 00:37:02.869
很多时候有秘密来擦洗我

00:37:00.080 --> 00:37:04.400
记得在Netflix问人们

00:37:02.869 --> 00:37:06.890
你知道现在他们基本上是电影

00:37:04.400 --> 00:37:10.700
生产公司，他们不再是

00:37:06.890 --> 00:37:12.410
流媒体公司，我说你愿意吗

00:37:10.700 --> 00:37:15.890
你擦洗还是有秘密

00:37:12.410 --> 00:37:20.869
洗涤器和奈拉回应我，他

00:37:15.890 --> 00:37:22.430
说不，我们没有三个，你知道

00:37:20.869 --> 00:37:24.950
有一些关于

00:37:22.430 --> 00:37:27.290
电影开始像获得有关的数据

00:37:24.950 --> 00:37:29.599
他们的私人电话号码或任何我

00:37:27.290 --> 00:37:31.369
不记得那样的事情了

00:37:29.599 --> 00:37:36.560
就像突然之间的答案一样

00:37:31.369 --> 00:37:40.910
可以，三个秘密洗涤器，另一个

00:37:36.560 --> 00:37:46.400
事情是，我之前打过这个但是

00:37:40.910 --> 00:37:48.710
数据保留是有条件的，因此Netflix 

00:37:46.400 --> 00:37:51.560
基本上使用所谓的fit 

00:37:48.710 --> 00:37:53.930
他们有一个特征标记类型的东西

00:37:51.560 --> 00:37:55.940
说实验是否正在进行， 

00:37:53.930 --> 00:37:57.730
相信我，你有很多实验

00:37:55.940 --> 00:38:00.650
如果您曾经使用Netflix和

00:37:57.730 --> 00:38:03.290
所以他们会在某些实验中

00:38:00.650 --> 00:38:06.050
他们会收集100％的流量

00:38:03.290 --> 00:38:07.700
那些东西变成痕迹等等

00:38:06.050 --> 00:38:10.670
根据标头，他们决定是

00:38:07.700 --> 00:38:12.980
不要这样做，如果你是，如果你是

00:38:10.670 --> 00:38:15.349
使用像侦探一样的东西，你可以

00:38:12.980 --> 00:38:17.180
看到有改变的方式

00:38:15.349 --> 00:38:18.800
您基于HTTP的采样策略

00:38:17.180 --> 00:38:20.869
请求，原因之一可能是

00:38:18.800 --> 00:38:24.619
您想要获得更多痕迹，因为

00:38:20.869 --> 00:38:28.880
你正在发生重要的事情

00:38:24.619 --> 00:38:32.290
就像有一些网站一样

00:38:28.880 --> 00:38:34.880
无法做到的SoundCloud 

00:38:32.290 --> 00:38:37.720
合理存储大量数据

00:38:34.880 --> 00:38:40.520
因为他们有这么多的流量

00:38:37.720 --> 00:38:45.820
 SoundCloud采样率是引用取消引用

00:38:40.520 --> 00:38:47.810
非常低，最多保留7天

00:38:45.820 --> 00:38:50.540
声音课实际上是一个非常

00:38:47.810 --> 00:38:52.700
有趣的网站文档，因为

00:38:50.540 --> 00:38:54.490
他们有一种有趣的交易方式

00:38:52.700 --> 00:38:59.869
像这样的服务命名问题

00:38:54.490 --> 00:39:03.140
基本上他们去了，他们看着

00:38:59.869 --> 00:39:05.770
在kubernetes窗格中的IPS和

00:39:03.140 --> 00:39:07.240
然后改写服务名称

00:39:05.770 --> 00:39:09.670
开发人员一直在使用垃圾

00:39:07.240 --> 00:39:11.260
所以他们只会忘记它，我们

00:39:09.670 --> 00:39:12.970
不敢相信我们会购物

00:39:11.260 --> 00:39:15.550
 Blanc重写所有服务名称，然后

00:39:12.970 --> 00:39:18.460
所以现在他们的服务手艺很有趣

00:39:15.550 --> 00:39:19.960
现在，如果您的服务名称不是

00:39:18.460 --> 00:39:20.770
像什么问题一样正确

00:39:19.960 --> 00:39:22.690
那会发生什么

00:39:20.770 --> 00:39:24.250
你实际上看起来像你

00:39:22.690 --> 00:39:25.540
何时调用两种不同的服务

00:39:24.250 --> 00:39:28.030
你实际上是在叫同一个

00:39:25.540 --> 00:39:30.310
只是这个网络控制器命名

00:39:28.030 --> 00:39:32.680
这个网络控制器命名为

00:39:30.310 --> 00:39:34.180
所以有人从

00:39:32.680 --> 00:39:36.510
建筑学的观点认为

00:39:34.180 --> 00:39:40.000
实际上是介于两者之间的循环

00:39:36.510 --> 00:39:43.810
不同的服务，但它可以得到

00:39:40.000 --> 00:39:45.550
凌乱，这是最常见的事情之一

00:39:43.810 --> 00:39:46.720
在所有这些网站中，您都可以

00:39:45.550 --> 00:39:47.980
您正在收集的特定点

00:39:46.720 --> 00:39:50.530
数据，而您不会那样

00:39:47.980 --> 00:39:52.120
看起来不错，这就是

00:39:50.530 --> 00:39:56.950
你必须知道你最终会

00:39:52.120 --> 00:39:58.900
数据策略，然后像所有

00:39:56.950 --> 00:40:02.740
技术采用从未如此

00:39:58.900 --> 00:40:06.160
进入一家复杂的公司时100％ 

00:40:02.740 --> 00:40:08.530
这是其中的一件事

00:40:06.160 --> 00:40:11.470
有时候你知道有趣

00:40:08.530 --> 00:40:14.260
一个团队负责90％的

00:40:11.470 --> 00:40:15.670
交通，所以听起来真的很整洁

00:40:14.260 --> 00:40:17.350
你有百分之九十的人

00:40:15.670 --> 00:40:20.380
请求跟踪，但只像一个

00:40:17.350 --> 00:40:22.590
团队人数不超过100，所以数字

00:40:20.380 --> 00:40:25.360
一个人不要讲完整的故事

00:40:22.590 --> 00:40:27.460
所以无论如何我要离开几分钟

00:40:25.360 --> 00:40:32.320
如有疑问，这是最后一张幻灯片

00:40:27.460 --> 00:40:34.720
上面有内容，您可以回来

00:40:32.320 --> 00:40:36.730
为此，我将发布幻灯片，但是有

00:40:34.720 --> 00:40:38.560
人们有一些原型

00:40:36.730 --> 00:40:41.200
开始，基本上这些是

00:40:38.560 --> 00:40:43.270
我注意到的是

00:40:41.200 --> 00:40:45.460
格林菲尔德格林菲尔德总是最简单的

00:40:43.270 --> 00:40:48.160
因为你只是推出东西而你

00:40:45.460 --> 00:40:51.340
做正确的事，这就是为什么人们

00:40:48.160 --> 00:40:53.800
谁在格林菲尔德不工作，如果

00:40:51.340 --> 00:40:56.560
您在现有的Brownfield工作

00:40:53.800 --> 00:40:58.450
大多数人会开始使用的环境

00:40:56.560 --> 00:41:02.350
几乎任何一项服务

00:40:58.450 --> 00:41:03.940
技术等等

00:41:02.350 --> 00:41:05.590
 hotels.com所说的即使是

00:41:03.940 --> 00:41:08.200
其实不是你所散布的

00:41:05.590 --> 00:41:09.760
只喜欢一项服务，并且正在提供一项

00:41:08.200 --> 00:41:12.160
致电同一团队的另一服务

00:41:09.760 --> 00:41:14.500
使用您仍然了解

00:41:12.160 --> 00:41:16.390
这是怎么回事，这可能是暴力的

00:41:14.500 --> 00:41:18.190
关于别人

00:41:16.390 --> 00:41:19.540
对正在发生的事情感兴趣

00:41:18.190 --> 00:41:21.370
这也有帮助

00:41:19.540 --> 00:41:23.050
当您查看服务图时

00:41:21.370 --> 00:41:25.780
因为你实际上可以看到你的

00:41:23.050 --> 00:41:28.180
服务图基于采用情况而增长

00:41:25.780 --> 00:41:31.900
而且可以帮助经理

00:41:28.180 --> 00:41:33.310
尖尖的耳朵和事物代理的类型

00:41:31.900 --> 00:41:35.950
是另一种模式，如果您有任何东西

00:41:33.310 --> 00:41:39.190
在自然界中代理

00:41:35.950 --> 00:41:41.020
可能会有所帮助，例如以键入形式

00:41:39.190 --> 00:41:43.090
他们开始代理中的一切

00:41:41.020 --> 00:41:45.430
因为那是获得一些东西的最简单方法

00:41:43.090 --> 00:41:47.440
数据，然后另一件事就是

00:41:45.430 --> 00:41:49.120
就像将它拍到框架上一样

00:41:47.440 --> 00:41:51.460
推出，因此，如果您像春天一样

00:41:49.120 --> 00:41:52.780
引导项目，而不只是进行跟踪

00:41:51.460 --> 00:41:54.340
内置于其中很容易，因为您

00:41:52.780 --> 00:41:58.210
就像你放侦探一样

00:41:54.340 --> 00:41:59.800
在那里，所以这是一个简单的答案，所以

00:41:58.210 --> 00:42:02.680
无论如何，让我们总结一下

00:41:59.800 --> 00:42:05.370
可以从问题开始的链接

00:42:02.680 --> 00:42:07.600
现在是我和啤酒之间的时间

00:42:05.370 --> 00:42:09.370
我们有一些其他的东西，所以

00:42:07.600 --> 00:42:10.960
您实际上可以在

00:42:09.370 --> 00:42:12.700
历史，看看谁在逐字地编辑

00:42:10.960 --> 00:42:14.950
您可以在此添加评论

00:42:12.700 --> 00:42:16.920
他们会这样回答你的

00:42:14.950 --> 00:42:20.680
这不是静态的吗？ 

00:42:16.920 --> 00:42:22.930
社区，所以要采取这个

00:42:20.680 --> 00:42:25.330
信息，并认为这是

00:42:22.930 --> 00:42:26.830
人们喜欢自己，理想情况下是一些

00:42:25.330 --> 00:42:29.910
您甚至会发布您自己的网站

00:42:26.830 --> 00:42:33.790
鸭子，如果你对此东西感兴趣

00:42:29.910 --> 00:42:37.240
我们有一个鳄鱼频道，你们中的一些人

00:42:33.790 --> 00:42:39.070
可能已经找到了，你

00:42:37.240 --> 00:42:51.520
知道您是否喜欢我们在添加内容时所做的事情

00:42:39.070 --> 00:42:54.970
对我们的明星收藏有疑问

00:42:51.520 --> 00:42:57.610
规范的Zipkin工作Java，因此您

00:42:54.970 --> 00:43:02.080
问规范是Java吗

00:42:57.610 --> 00:43:04.450
图书馆很勇敢，第一个

00:43:02.080 --> 00:43:06.700
春天的布鲁特实际上是一个泥沼

00:43:04.450 --> 00:43:09.760
有很多仪器集成

00:43:06.700 --> 00:43:12.490
我认为Martinez就可以告诉我们

00:43:09.760 --> 00:43:18.310
你他花了大概一半的时间

00:43:12.490 --> 00:43:20.920
每个时间在水槽上，所以

00:43:18.310 --> 00:43:23.320
非常重要的事情，也许不是

00:43:20.920 --> 00:43:25.900
总是很有趣，但是那里有

00:43:23.320 --> 00:43:28.060
肯定在那里工作最重要

00:43:25.900 --> 00:43:29.690
陷入困境的事情有两种

00:43:28.060 --> 00:43:33.440
一个是

00:43:29.690 --> 00:43:36.500
当你拥有一连串的

00:43:33.440 --> 00:43:38.660
事件，如如何跟踪

00:43:36.500 --> 00:43:40.579
当前正在发生的痕迹

00:43:38.660 --> 00:43:42.109
在每个阶段之间移动

00:43:40.579 --> 00:43:43.309
这称为上下文传播， 

00:43:42.109 --> 00:43:45.740
里面有一些模式

00:43:43.309 --> 00:43:47.599
那里的图书馆，然后另一个

00:43:45.740 --> 00:43:49.670
事情就像知道差异

00:43:47.599 --> 00:43:51.980
在创建呼叫和调用之间

00:43:49.670 --> 00:43:54.980
像这样的集会时间

00:43:51.980 --> 00:43:57.589
同步运行时，我不会说

00:43:54.980 --> 00:44:01.369
任何东西都是完美的，它是异步的

00:43:57.589 --> 00:44:04.400
大多数错误都在哪里，但是是的

00:44:01.369 --> 00:44:14.990
很多图书馆都会同步

00:44:04.400 --> 00:44:17.839
此时的支持分布

00:44:14.990 --> 00:44:21.440
根据绩效追踪成本

00:44:17.839 --> 00:44:24.319
因为我们用的就像你看到的弹簧

00:44:21.440 --> 00:44:28.549
引导到春天的云留下一个

00:44:24.319 --> 00:44:35.500
简短的实施，我们已经做了一个

00:44:28.549 --> 00:44:42.890
测试几天前，发现80几乎

00:44:35.500 --> 00:44:46.609
何时失去30％的性能

00:44:42.890 --> 00:44:50.450
大量使用分布式跟踪方式

00:44:46.609 --> 00:44:54.049
的请求，你玩得开心吗

00:44:50.450 --> 00:44:58.250
正常表现的见解

00:44:54.049 --> 00:45:01.490
使用分布式的惩罚

00:44:58.250 --> 00:45:03.500
跟踪好，所以我认为问题是

00:45:01.490 --> 00:45:05.720
当你说我像以前一样花费更多时

00:45:03.500 --> 00:45:07.279
其实我开始看

00:45:05.720 --> 00:45:09.279
这就像我们有一些人

00:45:07.279 --> 00:45:11.990
谁在谈论多少

00:45:09.279 --> 00:45:13.910
货币单位，但在这种情况下，它们

00:45:11.990 --> 00:45:15.589
花费在追踪上，但是你

00:45:13.910 --> 00:45:18.980
就费用而言，我在谈论

00:45:15.589 --> 00:45:21.079
认为是的，所以开销最大

00:45:18.980 --> 00:45:23.750
是异步跟踪

00:45:21.079 --> 00:45:26.960
同步应用程序很多

00:45:23.750 --> 00:45:30.349
跟踪便宜，工作量少

00:45:26.960 --> 00:45:33.049
参与其中，这是一个

00:45:30.349 --> 00:45:37.299
这是一个移动的目标，所以我一直

00:45:33.049 --> 00:45:40.819
说的是，当人们找到特定的

00:45:37.299 --> 00:45:42.619
较高的间接费用来源

00:45:40.819 --> 00:45:43.700
通常会影响到的事物或

00:45:42.619 --> 00:45:46.039
像东西的数量

00:45:43.700 --> 00:45:48.440
传播就像有一种添加方式

00:45:46.039 --> 00:45:51.019
标头然后像

00:45:48.440 --> 00:45:53.529
行李和探秘

00:45:51.019 --> 00:45:56.240
往往会使事情变慢

00:45:53.529 --> 00:45:57.980
同步日志之类的东西

00:45:56.240 --> 00:46:03.769
所有这些功能都可以调用

00:45:57.980 --> 00:46:05.920
所以我总是说

00:46:03.769 --> 00:46:07.819
总是进步在这里发生哦

00:46:05.920 --> 00:46:10.940
其实我不会说总是

00:46:07.819 --> 00:46:12.710
进步就是为什么如果你从一个地方搬走

00:46:10.940 --> 00:46:14.599
一种类型的库到下一个

00:46:12.710 --> 00:46:17.059
有时你认为那会发生

00:46:14.599 --> 00:46:18.920
可以提高性能，但可能

00:46:17.059 --> 00:46:20.779
被改变一些模式，这是

00:46:18.920 --> 00:46:24.259
其实稍微差一点

00:46:20.779 --> 00:46:25.999
而我想每个人都想拥有

00:46:24.259 --> 00:46:28.700
答案是百分之三，但是

00:46:25.999 --> 00:46:30.410
那绝不是你所做的事情的答案

00:46:28.700 --> 00:46:33.259
实际上很重要，那是一个

00:46:30.410 --> 00:46:34.849
反应性出版物是

00:46:33.259 --> 00:46:36.650
没有反应性的应用耶

00:46:34.849 --> 00:46:38.390
埋藏的反应堆撞击是的

00:46:36.650 --> 00:46:40.970
表现最差那是最糟糕的

00:46:38.390 --> 00:46:43.880
现在正在追踪下执行

00:46:40.970 --> 00:46:46.579
好消息是

00:46:43.880 --> 00:46:48.470
意味着它可能会有所改善，但是

00:46:46.579 --> 00:46:50.299
肯定有一些

00:46:48.470 --> 00:46:56.799
内在的场景

00:46:50.299 --> 00:46:59.269
表现不佳，所以当你看着

00:46:56.799 --> 00:47:01.369
追踪您应该先看一下

00:46:59.269 --> 00:47:04.220
之后，这样做可能很棘手

00:47:01.369 --> 00:47:06.220
坦白地说， 

00:47:04.220 --> 00:47:08.809
你可以做的事情很好

00:47:06.220 --> 00:47:10.940
像侦探一样，因为

00:47:08.809 --> 00:47:12.920
这是 spring boot ，你知道吗

00:47:10.940 --> 00:47:15.519
启用点功能并将其设置为

00:47:12.920 --> 00:47:17.809
假，然后做你之前和之后

00:47:15.519 --> 00:47:20.749
因为那可能就是你上来的方式

00:47:17.809 --> 00:47:23.180
无论30％是多少

00:47:20.749 --> 00:47:25.339
当您报告问题时

00:47:23.180 --> 00:47:29.930
诊断到它的来源

00:47:25.339 --> 00:47:33.289
开销，那可以帮助找到它

00:47:29.930 --> 00:47:35.390
但我认为一个简单的事实是

00:47:33.289 --> 00:47:38.380
反应性是最高的

00:47:35.390 --> 00:47:41.380
目前要跟踪的开销的东西

00:47:38.380 --> 00:47:41.380
抱歉

00:47:44.020 --> 00:47:47.220
其他问题

00:47:53.440 --> 00:47:59.020
我会告诉你一些有趣的事情

00:47:55.420 --> 00:48:01.810
关于实际开销很快我们实际上

00:47:59.020 --> 00:48:03.850
正在像我们现在这样工作

00:48:01.810 --> 00:48:06.670
有多少人听说过的事情

00:48:03.850 --> 00:48:07.530
 protobuf协议缓冲了很多

00:48:06.670 --> 00:48:10.900
人们听说过

00:48:07.530 --> 00:48:13.180
因此，当您在创建时被发送

00:48:10.900 --> 00:48:16.600
您正在发送的任何系统的数据

00:48:13.180 --> 00:48:18.790
它像任何东西一样无法处理

00:48:16.600 --> 00:48:20.470
即使它是一个水槽也创建了一些

00:48:18.790 --> 00:48:22.420
额外垃圾等副作用

00:48:20.470 --> 00:48:26.890
收集其他类似的东西

00:48:22.420 --> 00:48:30.720
正在进行中，我们进入了

00:48:26.890 --> 00:48:36.210
 Zipkin中正在发生的发布

00:48:30.720 --> 00:48:41.050
尚未完成投票，但

00:48:36.210 --> 00:48:42.190
 2.14我们有一些很有趣的东西

00:48:41.050 --> 00:48:44.980
我们有这个东西叫做存储吗

00:48:42.190 --> 00:48:46.780
节流，这意味着每个人都

00:48:44.980 --> 00:48:48.940
有时抱怨像一套

00:48:46.780 --> 00:48:50.620
 elasticsearch跌倒了，就像

00:48:48.940 --> 00:48:53.800
像我的提示一样发送太满，并且

00:48:50.620 --> 00:48:56.980
死亡，然后人们都死了

00:48:53.800 --> 00:48:58.840
数据被删除，因此我们正在使用

00:48:56.980 --> 00:49:00.820
真正有趣的库称为netflix 

00:48:58.840 --> 00:49:03.040
并发限制，监视您的

00:49:00.820 --> 00:49:05.590
异常模式，然后它将返回

00:49:03.040 --> 00:49:08.590
对你来说这很整洁

00:49:05.590 --> 00:49:11.110
工具，所以我们在服务器中使用它

00:49:08.590 --> 00:49:13.120
我们有很多很酷的效率

00:49:11.110 --> 00:49:17.710
如果您碰巧使用了

00:49:13.120 --> 00:49:20.980
 protobuf编码，因此

00:49:17.710 --> 00:49:23.410
大概需要一点时间

00:49:20.980 --> 00:49:25.410
释放到侦探点中，因为

00:49:23.410 --> 00:49:28.090
甚至还没有发布，但是

00:49:25.410 --> 00:49:30.790
如果您生成JSON，那么好处是

00:49:28.090 --> 00:49:31.930
您可以阅读这些请求，但是您

00:49:30.790 --> 00:49:35.050
不必总是自己阅读

00:49:31.930 --> 00:49:37.390
所以如果性能很重要，切换

00:49:35.050 --> 00:49:39.940
甚至在今天之前也可以使用protobuf格式

00:49:37.390 --> 00:49:42.400
此版本将减少数量

00:49:39.940 --> 00:49:44.740
产生的垃圾数量以及

00:49:42.400 --> 00:49:46.080
您的进程使用的CPU可能没有

00:49:44.740 --> 00:49:49.570
与您正在做的事情有关

00:49:46.080 --> 00:49:51.730
但基本上是在想什么

00:49:49.570 --> 00:49:57.310
在幕后进行会有所帮助

00:49:51.730 --> 00:50:00.700
减少这种情况我会留给你

00:49:57.310 --> 00:50:03.310
与链接，我将把幻灯片放回去

00:50:00.700 --> 00:50:05.480
起，感谢您抽出宝贵的时间，我会

00:50:03.310 --> 00:50:07.950
我会加入

00:50:05.480 --> 00:50:11.040
你们四个啤酒中的任何一个

00:50:07.950 --> 00:50:17.500
 [掌声] 

00:50:11.040 --> 00:50:17.500
 [音乐] 

