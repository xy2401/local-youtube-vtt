WEBVTT
Kind: captions
Language: en

00:00:00.900 --> 00:00:04.460 align:start position:0%
 
[Music]

00:00:04.460 --> 00:00:04.470 align:start position:0%
[Music]
 

00:00:04.470 --> 00:00:08.490 align:start position:0%
[Music]
thank<00:00:05.470><c> you</c><00:00:05.939><c> good</c><00:00:06.939><c> morning</c><00:00:07.000><c> hi</c><00:00:07.990><c> thank</c><00:00:08.380><c> you</c><00:00:08.410><c> for</c>

00:00:08.490 --> 00:00:08.500 align:start position:0%
thank you good morning hi thank you for
 

00:00:08.500 --> 00:00:10.560 align:start position:0%
thank you good morning hi thank you for
the<00:00:08.650><c> introduction</c><00:00:09.000><c> yes</c><00:00:10.000><c> we're</c><00:00:10.240><c> going</c><00:00:10.330><c> to</c><00:00:10.450><c> talk</c>

00:00:10.560 --> 00:00:10.570 align:start position:0%
the introduction yes we're going to talk
 

00:00:10.570 --> 00:00:14.360 align:start position:0%
the introduction yes we're going to talk
about<00:00:10.690><c> growl</c><00:00:11.020><c> um</c><00:00:11.230><c> and</c><00:00:12.030><c> we're</c><00:00:13.030><c> gonna</c><00:00:13.240><c> have</c><00:00:13.540><c> very</c>

00:00:14.360 --> 00:00:14.370 align:start position:0%
about growl um and we're gonna have very
 

00:00:14.370 --> 00:00:16.919 align:start position:0%
about growl um and we're gonna have very
intense<00:00:15.370><c> 15</c><00:00:15.820><c> minutes</c><00:00:16.029><c> here</c><00:00:16.209><c> we</c><00:00:16.449><c> have</c><00:00:16.570><c> lots</c><00:00:16.839><c> of</c>

00:00:16.919 --> 00:00:16.929 align:start position:0%
intense 15 minutes here we have lots of
 

00:00:16.929 --> 00:00:18.720 align:start position:0%
intense 15 minutes here we have lots of
content<00:00:17.259><c> so</c><00:00:17.560><c> we're</c><00:00:17.710><c> gonna</c><00:00:17.800><c> go</c><00:00:17.980><c> straight</c><00:00:18.460><c> into</c>

00:00:18.720 --> 00:00:18.730 align:start position:0%
content so we're gonna go straight into
 

00:00:18.730 --> 00:00:22.800 align:start position:0%
content so we're gonna go straight into
it<00:00:18.900><c> go</c><00:00:19.900><c> fast</c><00:00:20.789><c> just</c><00:00:21.789><c> like</c><00:00:21.939><c> we</c><00:00:22.089><c> want</c><00:00:22.330><c> our</c><00:00:22.509><c> run</c>

00:00:22.800 --> 00:00:22.810 align:start position:0%
it go fast just like we want our run
 

00:00:22.810 --> 00:00:24.749 align:start position:0%
it go fast just like we want our run
times<00:00:23.019><c> to</c><00:00:23.199><c> be</c><00:00:23.320><c> fast</c><00:00:23.890><c> and</c><00:00:24.189><c> starting</c><00:00:24.579><c> really</c>

00:00:24.749 --> 00:00:24.759 align:start position:0%
times to be fast and starting really
 

00:00:24.759 --> 00:00:26.700 align:start position:0%
times to be fast and starting really
quick<00:00:24.999><c> if</c><00:00:25.779><c> you</c><00:00:25.900><c> have</c><00:00:26.050><c> questions</c><00:00:26.470><c> but</c><00:00:26.589><c> you</c>

00:00:26.700 --> 00:00:26.710 align:start position:0%
quick if you have questions but you
 

00:00:26.710 --> 00:00:28.439 align:start position:0%
quick if you have questions but you
don't<00:00:26.859><c> get</c><00:00:27.039><c> time</c><00:00:27.249><c> to</c><00:00:27.279><c> ask</c><00:00:27.730><c> me</c><00:00:27.909><c> here</c><00:00:28.179><c> and</c><00:00:28.359><c> you</c>

00:00:28.439 --> 00:00:28.449 align:start position:0%
don't get time to ask me here and you
 

00:00:28.449 --> 00:00:30.870 align:start position:0%
don't get time to ask me here and you
won't<00:00:28.570><c> find</c><00:00:28.810><c> me</c><00:00:28.990><c> relator</c><00:00:29.499><c> you</c><00:00:29.980><c> can</c><00:00:30.159><c> find</c><00:00:30.609><c> me</c><00:00:30.699><c> on</c>

00:00:30.870 --> 00:00:30.880 align:start position:0%
won't find me relator you can find me on
 

00:00:30.880 --> 00:00:31.529 align:start position:0%
won't find me relator you can find me on
the<00:00:30.999><c> Internet</c>

00:00:31.529 --> 00:00:31.539 align:start position:0%
the Internet
 

00:00:31.539 --> 00:00:33.240 align:start position:0%
the Internet
I<00:00:31.570><c> almost</c><00:00:31.929><c> universally</c><00:00:32.500><c> go</c><00:00:32.619><c> by</c><00:00:32.770><c> Ash</c><00:00:32.950><c> life</c>

00:00:33.240 --> 00:00:33.250 align:start position:0%
I almost universally go by Ash life
 

00:00:33.250 --> 00:00:38.880 align:start position:0%
I almost universally go by Ash life
tweet<00:00:33.880><c> at</c><00:00:34.000><c> me</c><00:00:34.030><c> email</c><00:00:34.750><c> me</c><00:00:34.780><c> find</c><00:00:35.680><c> me</c><00:00:35.800><c> on</c><00:00:35.890><c> github</c><00:00:37.890><c> I</c>

00:00:38.880 --> 00:00:38.890 align:start position:0%
tweet at me email me find me on github I
 

00:00:38.890 --> 00:00:41.310 align:start position:0%
tweet at me email me find me on github I
can<00:00:39.490><c> answer</c><00:00:39.910><c> questions</c><00:00:40.330><c> about</c><00:00:40.930><c> software</c>

00:00:41.310 --> 00:00:41.320 align:start position:0%
can answer questions about software
 

00:00:41.320 --> 00:00:43.350 align:start position:0%
can answer questions about software
engineering<00:00:41.650><c> maybe</c><00:00:42.130><c> some</c><00:00:42.400><c> gravia</c><00:00:42.940><c> unrelated</c>

00:00:43.350 --> 00:00:43.360 align:start position:0%
engineering maybe some gravia unrelated
 

00:00:43.360 --> 00:00:46.290 align:start position:0%
engineering maybe some gravia unrelated
question<00:00:43.630><c> and</c><00:00:44.070><c> recently</c><00:00:45.070><c> I</c><00:00:45.100><c> turned</c><00:00:45.490><c> 30</c><00:00:45.850><c> so</c><00:00:46.270><c> I</c>

00:00:46.290 --> 00:00:46.300 align:start position:0%
question and recently I turned 30 so I
 

00:00:46.300 --> 00:00:49.230 align:start position:0%
question and recently I turned 30 so I
feel<00:00:46.660><c> like</c><00:00:46.690><c> I'm</c><00:00:47.230><c> old</c><00:00:47.650><c> and</c><00:00:47.920><c> wise</c><00:00:48.100><c> now</c><00:00:48.340><c> so</c><00:00:48.820><c> I</c><00:00:49.030><c> can</c>

00:00:49.230 --> 00:00:49.240 align:start position:0%
feel like I'm old and wise now so I can
 

00:00:49.240 --> 00:00:50.820 align:start position:0%
feel like I'm old and wise now so I can
answer<00:00:49.480><c> questions</c><00:00:49.750><c> about</c><00:00:50.050><c> life</c><00:00:50.470><c> on</c><00:00:50.650><c> the</c><00:00:50.710><c> rise</c>

00:00:50.820 --> 00:00:50.830 align:start position:0%
answer questions about life on the rise
 

00:00:50.830 --> 00:00:54.360 align:start position:0%
answer questions about life on the rise
in<00:00:51.010><c> general</c><00:00:51.280><c> as</c><00:00:51.400><c> well</c><00:00:51.960><c> though</c><00:00:52.960><c> please</c><00:00:53.920><c> do</c><00:00:54.250><c> not</c>

00:00:54.360 --> 00:00:54.370 align:start position:0%
in general as well though please do not
 

00:00:54.370 --> 00:00:55.650 align:start position:0%
in general as well though please do not
make<00:00:54.760><c> any</c><00:00:54.970><c> forward</c><00:00:55.210><c> going</c><00:00:55.420><c> business</c>

00:00:55.650 --> 00:00:55.660 align:start position:0%
make any forward going business
 

00:00:55.660 --> 00:00:57.720 align:start position:0%
make any forward going business
decisions<00:00:56.230><c> based</c><00:00:56.410><c> on</c><00:00:56.740><c> the</c><00:00:56.860><c> contents</c><00:00:57.250><c> of</c><00:00:57.370><c> what</c>

00:00:57.720 --> 00:00:57.730 align:start position:0%
decisions based on the contents of what
 

00:00:57.730 --> 00:01:00.660 align:start position:0%
decisions based on the contents of what
you<00:00:57.850><c> hear</c><00:00:58.090><c> here</c><00:00:58.890><c> people</c><00:00:59.890><c> say</c><00:01:00.100><c> this</c><00:01:00.250><c> is</c><00:01:00.310><c> a</c><00:01:00.460><c> very</c>

00:01:00.660 --> 00:01:00.670 align:start position:0%
you hear here people say this is a very
 

00:01:00.670 --> 00:01:03.060 align:start position:0%
you hear here people say this is a very
important<00:01:01.000><c> message</c><00:01:01.150><c> so</c><00:01:01.600><c> let's</c><00:01:02.470><c> go</c><00:01:02.590><c> past</c><00:01:02.890><c> this</c>

00:01:03.060 --> 00:01:03.070 align:start position:0%
important message so let's go past this
 

00:01:03.070 --> 00:01:06.300 align:start position:0%
important message so let's go past this
and<00:01:03.340><c> talk</c><00:01:04.180><c> about</c><00:01:04.210><c> 12m</c><00:01:04.899><c> it's</c><00:01:05.890><c> very</c><00:01:06.100><c> exciting</c>

00:01:06.300 --> 00:01:06.310 align:start position:0%
and talk about 12m it's very exciting
 

00:01:06.310 --> 00:01:07.139 align:start position:0%
and talk about 12m it's very exciting
technology

00:01:07.139 --> 00:01:07.149 align:start position:0%
technology
 

00:01:07.149 --> 00:01:10.440 align:start position:0%
technology
it's<00:01:07.479><c> a</c><00:01:07.719><c> a</c><00:01:08.380><c> smart</c><00:01:09.009><c> set</c><00:01:09.390><c> high-performance</c>

00:01:10.440 --> 00:01:10.450 align:start position:0%
it's a a smart set high-performance
 

00:01:10.450 --> 00:01:12.599 align:start position:0%
it's a a smart set high-performance
polyglot<00:01:11.320><c> virtual</c><00:01:11.619><c> machine</c><00:01:11.859><c> capable</c><00:01:12.280><c> of</c>

00:01:12.599 --> 00:01:12.609 align:start position:0%
polyglot virtual machine capable of
 

00:01:12.609 --> 00:01:14.489 align:start position:0%
polyglot virtual machine capable of
running<00:01:13.030><c> programs</c><00:01:13.479><c> in</c><00:01:13.719><c> different</c><00:01:13.960><c> languages</c>

00:01:14.489 --> 00:01:14.499 align:start position:0%
running programs in different languages
 

00:01:14.499 --> 00:01:17.029 align:start position:0%
running programs in different languages
we<00:01:15.159><c> aim</c><00:01:15.340><c> to</c><00:01:15.549><c> support</c><00:01:15.700><c> all</c><00:01:16.090><c> the</c><00:01:16.420><c> languages</c>

00:01:17.029 --> 00:01:17.039 align:start position:0%
we aim to support all the languages
 

00:01:17.039 --> 00:01:19.620 align:start position:0%
we aim to support all the languages
eventually<00:01:18.039><c> and</c><00:01:18.219><c> currently</c><00:01:18.969><c> we</c><00:01:19.090><c> have</c><00:01:19.119><c> a</c><00:01:19.329><c> very</c>

00:01:19.620 --> 00:01:19.630 align:start position:0%
eventually and currently we have a very
 

00:01:19.630 --> 00:01:21.929 align:start position:0%
eventually and currently we have a very
good<00:01:19.840><c> set</c><00:01:20.170><c> of</c><00:01:20.200><c> the</c><00:01:20.740><c> most</c><00:01:20.950><c> popular</c><00:01:21.340><c> ones</c><00:01:21.579><c> in</c><00:01:21.819><c> the</c>

00:01:21.929 --> 00:01:21.939 align:start position:0%
good set of the most popular ones in the
 

00:01:21.939 --> 00:01:25.889 align:start position:0%
good set of the most popular ones in the
ecosystems<00:01:23.939><c> how</c><00:01:24.939><c> many</c><00:01:25.090><c> of</c><00:01:25.179><c> you</c><00:01:25.329><c> have</c><00:01:25.569><c> heard</c><00:01:25.719><c> of</c>

00:01:25.889 --> 00:01:25.899 align:start position:0%
ecosystems how many of you have heard of
 

00:01:25.899 --> 00:01:28.800 align:start position:0%
ecosystems how many of you have heard of
bravia<00:01:26.229><c> just</c><00:01:26.829><c> for</c><00:01:27.490><c> it</c><00:01:27.579><c> quick</c><00:01:27.880><c> test</c><00:01:28.119><c> excellent</c>

00:01:28.800 --> 00:01:28.810 align:start position:0%
bravia just for it quick test excellent
 

00:01:28.810 --> 00:01:30.029 align:start position:0%
bravia just for it quick test excellent
how<00:01:28.929><c> many</c><00:01:29.109><c> of</c><00:01:29.229><c> you</c><00:01:29.380><c> feel</c><00:01:29.590><c> that</c><00:01:29.799><c> you</c><00:01:29.889><c> can</c>

00:01:30.029 --> 00:01:30.039 align:start position:0%
how many of you feel that you can
 

00:01:30.039 --> 00:01:32.789 align:start position:0%
how many of you feel that you can
explain<00:01:31.030><c> and</c><00:01:31.299><c> describe</c><00:01:31.659><c> what</c><00:01:31.960><c> it</c><00:01:32.109><c> is</c><00:01:32.229><c> and</c><00:01:32.560><c> like</c>

00:01:32.789 --> 00:01:32.799 align:start position:0%
explain and describe what it is and like
 

00:01:32.799 --> 00:01:37.800 align:start position:0%
explain and describe what it is and like
why<00:01:33.460><c> why</c><00:01:33.969><c> it</c><00:01:34.030><c> exists</c><00:01:35.969><c> two</c><00:01:36.969><c> hands</c><00:01:37.299><c> excellent</c>

00:01:37.800 --> 00:01:37.810 align:start position:0%
why why it exists two hands excellent
 

00:01:37.810 --> 00:01:41.249 align:start position:0%
why why it exists two hands excellent
have<00:01:38.319><c> been</c><00:01:38.499><c> to</c><00:01:38.619><c> my</c><00:01:38.710><c> previous</c><00:01:38.920><c> sessions</c><00:01:40.259><c> we're</c>

00:01:41.249 --> 00:01:41.259 align:start position:0%
have been to my previous sessions we're
 

00:01:41.259 --> 00:01:43.949 align:start position:0%
have been to my previous sessions we're
gonna<00:01:41.350><c> ring</c><00:01:41.829><c> is</c><00:01:42.009><c> that</c><00:01:42.159><c> grown</c><00:01:43.060><c> vm</c><00:01:43.329><c> in</c><00:01:43.509><c> one</c>

00:01:43.949 --> 00:01:43.959 align:start position:0%
gonna ring is that grown vm in one
 

00:01:43.959 --> 00:01:46.349 align:start position:0%
gonna ring is that grown vm in one
picture<00:01:44.229><c> is</c><00:01:44.619><c> something</c><00:01:45.280><c> like</c><00:01:45.549><c> this</c><00:01:45.850><c> it's</c><00:01:46.240><c> a</c>

00:01:46.349 --> 00:01:46.359 align:start position:0%
picture is something like this it's a
 

00:01:46.359 --> 00:01:47.969 align:start position:0%
picture is something like this it's a
runtime<00:01:46.749><c> right</c><00:01:47.170><c> it's</c><00:01:47.350><c> a</c><00:01:47.409><c> virtual</c><00:01:47.709><c> machine</c>

00:01:47.969 --> 00:01:47.979 align:start position:0%
runtime right it's a virtual machine
 

00:01:47.979 --> 00:01:50.940 align:start position:0%
runtime right it's a virtual machine
it's<00:01:48.189><c> a</c><00:01:48.490><c> thing</c><00:01:48.639><c> that</c><00:01:48.850><c> you</c><00:01:49.119><c> can</c><00:01:49.329><c> execute</c><00:01:49.780><c> to</c><00:01:50.319><c> run</c>

00:01:50.940 --> 00:01:50.950 align:start position:0%
it's a thing that you can execute to run
 

00:01:50.950 --> 00:01:53.940 align:start position:0%
it's a thing that you can execute to run
your<00:01:51.130><c> programs</c><00:01:51.490><c> you</c><00:01:52.270><c> can</c><00:01:52.389><c> write</c><00:01:52.630><c> them</c><00:01:52.810><c> in</c><00:01:52.959><c> any</c>

00:01:53.940 --> 00:01:53.950 align:start position:0%
your programs you can write them in any
 

00:01:53.950 --> 00:01:55.709 align:start position:0%
your programs you can write them in any
supported<00:01:54.520><c> language</c><00:01:54.819><c> so</c><00:01:55.119><c> currently</c><00:01:55.450><c> that</c><00:01:55.659><c> is</c>

00:01:55.709 --> 00:01:55.719 align:start position:0%
supported language so currently that is
 

00:01:55.719 --> 00:01:59.239 align:start position:0%
supported language so currently that is
jvm<00:01:56.289><c> languages</c><00:01:56.709><c> Java</c><00:01:57.549><c> Scala</c><00:01:57.909><c> Kotlin</c><00:01:58.389><c> groovy</c>

00:01:59.239 --> 00:01:59.249 align:start position:0%
jvm languages Java Scala Kotlin groovy
 

00:01:59.249 --> 00:02:01.440 align:start position:0%
jvm languages Java Scala Kotlin groovy
anything<00:02:00.249><c> that</c><00:02:00.369><c> compiles</c><00:02:00.819><c> into</c><00:02:00.969><c> the</c><00:02:01.149><c> JVM</c>

00:02:01.440 --> 00:02:01.450 align:start position:0%
anything that compiles into the JVM
 

00:02:01.450 --> 00:02:03.690 align:start position:0%
anything that compiles into the JVM
bytecode<00:02:01.479><c> goes</c><00:02:02.100><c> we</c><00:02:03.100><c> have</c><00:02:03.219><c> support</c><00:02:03.579><c> for</c>

00:02:03.690 --> 00:02:03.700 align:start position:0%
bytecode goes we have support for
 

00:02:03.700 --> 00:02:06.899 align:start position:0%
bytecode goes we have support for
JavaScript<00:02:04.350><c> as</c><00:02:05.350><c> a</c><00:02:05.770><c> very</c><00:02:06.189><c> popular</c><00:02:06.609><c> language</c>

00:02:06.899 --> 00:02:06.909 align:start position:0%
JavaScript as a very popular language
 

00:02:06.909 --> 00:02:09.059 align:start position:0%
JavaScript as a very popular language
including<00:02:07.539><c> actually</c><00:02:07.899><c> running</c><00:02:08.769><c> node.js</c>

00:02:09.059 --> 00:02:09.069 align:start position:0%
including actually running node.js
 

00:02:09.069 --> 00:02:11.100 align:start position:0%
including actually running node.js
applications<00:02:09.939><c> and</c><00:02:10.239><c> we</c><00:02:10.479><c> have</c><00:02:10.599><c> support</c><00:02:10.959><c> for</c>

00:02:11.100 --> 00:02:11.110 align:start position:0%
applications and we have support for
 

00:02:11.110 --> 00:02:14.130 align:start position:0%
applications and we have support for
Ruby<00:02:11.409><c> or</c><00:02:11.590><c> Python</c><00:02:11.860><c> and</c><00:02:12.390><c> anything</c><00:02:13.390><c> that</c><00:02:13.420><c> goes</c>

00:02:14.130 --> 00:02:14.140 align:start position:0%
Ruby or Python and anything that goes
 

00:02:14.140 --> 00:02:16.950 align:start position:0%
Ruby or Python and anything that goes
the<00:02:14.290><c> LLVM</c><00:02:14.590><c> toolchain</c><00:02:15.160><c> right</c><00:02:15.819><c> so</c><00:02:16.270><c> any</c><00:02:16.569><c> native</c>

00:02:16.950 --> 00:02:16.960 align:start position:0%
the LLVM toolchain right so any native
 

00:02:16.960 --> 00:02:19.260 align:start position:0%
the LLVM toolchain right so any native
code<00:02:17.140><c> that</c><00:02:17.350><c> compiles</c><00:02:17.860><c> through</c><00:02:18.069><c> LLVM</c><00:02:18.550><c> we</c><00:02:19.090><c> can</c>

00:02:19.260 --> 00:02:19.270 align:start position:0%
code that compiles through LLVM we can
 

00:02:19.270 --> 00:02:21.120 align:start position:0%
code that compiles through LLVM we can
take<00:02:19.480><c> the</c><00:02:19.630><c> intermediate</c><00:02:20.290><c> representation</c><00:02:20.950><c> the</c>

00:02:21.120 --> 00:02:21.130 align:start position:0%
take the intermediate representation the
 

00:02:21.130 --> 00:02:25.260 align:start position:0%
take the intermediate representation the
LLVM<00:02:21.640><c> bit</c><00:02:21.910><c> code</c><00:02:22.090><c> and</c><00:02:22.270><c> run</c><00:02:22.720><c> it</c><00:02:22.840><c> and</c><00:02:24.030><c> then</c><00:02:25.030><c> at</c>

00:02:25.260 --> 00:02:25.270 align:start position:0%
LLVM bit code and run it and then at
 

00:02:25.270 --> 00:02:28.080 align:start position:0%
LLVM bit code and run it and then at
runtime<00:02:25.630><c> we</c><00:02:26.350><c> try</c><00:02:26.620><c> to</c><00:02:26.680><c> be</c><00:02:26.920><c> a</c><00:02:27.100><c> high-performance</c>

00:02:28.080 --> 00:02:28.090 align:start position:0%
runtime we try to be a high-performance
 

00:02:28.090 --> 00:02:29.790 align:start position:0%
runtime we try to be a high-performance
virtual<00:02:28.450><c> machine</c><00:02:28.690><c> we</c><00:02:28.959><c> want</c><00:02:29.140><c> to</c><00:02:29.319><c> execute</c><00:02:29.590><c> the</c>

00:02:29.790 --> 00:02:29.800 align:start position:0%
virtual machine we want to execute the
 

00:02:29.800 --> 00:02:32.790 align:start position:0%
virtual machine we want to execute the
programs<00:02:30.220><c> with</c><00:02:30.730><c> good</c><00:02:31.150><c> peak</c><00:02:31.540><c> performance</c><00:02:32.050><c> we</c>

00:02:32.790 --> 00:02:32.800 align:start position:0%
programs with good peak performance we
 

00:02:32.800 --> 00:02:34.980 align:start position:0%
programs with good peak performance we
want<00:02:32.980><c> it</c><00:02:33.160><c> to</c><00:02:33.280><c> be</c><00:02:33.370><c> fast</c><00:02:33.610><c> just</c><00:02:34.600><c> like</c><00:02:34.690><c> probably</c>

00:02:34.980 --> 00:02:34.990 align:start position:0%
want it to be fast just like probably
 

00:02:34.990 --> 00:02:37.650 align:start position:0%
want it to be fast just like probably
you<00:02:35.140><c> want</c><00:02:35.410><c> your</c><00:02:35.770><c> runtime</c><00:02:35.950><c> to</c><00:02:36.250><c> be</c><00:02:36.370><c> fast</c><00:02:36.580><c> life</c><00:02:37.480><c> is</c>

00:02:37.650 --> 00:02:37.660 align:start position:0%
you want your runtime to be fast life is
 

00:02:37.660 --> 00:02:39.870 align:start position:0%
you want your runtime to be fast life is
too<00:02:37.810><c> short</c><00:02:37.840><c> to</c><00:02:38.440><c> wait</c><00:02:39.010><c> for</c><00:02:39.220><c> the</c><00:02:39.280><c> programs</c><00:02:39.670><c> to</c>

00:02:39.870 --> 00:02:39.880 align:start position:0%
too short to wait for the programs to
 

00:02:39.880 --> 00:02:43.470 align:start position:0%
too short to wait for the programs to
finish<00:02:40.660><c> and</c><00:02:40.840><c> then</c><00:02:41.590><c> we</c><00:02:42.100><c> can</c><00:02:42.250><c> execute</c><00:02:42.610><c> programs</c>

00:02:43.470 --> 00:02:43.480 align:start position:0%
finish and then we can execute programs
 

00:02:43.480 --> 00:02:45.479 align:start position:0%
finish and then we can execute programs
in<00:02:43.630><c> those</c><00:02:43.780><c> languages</c><00:02:44.260><c> in</c><00:02:44.470><c> different</c><00:02:44.530><c> contexts</c>

00:02:45.479 --> 00:02:45.489 align:start position:0%
in those languages in different contexts
 

00:02:45.489 --> 00:02:49.530 align:start position:0%
in those languages in different contexts
we<00:02:46.390><c> can</c><00:02:46.570><c> run</c><00:02:46.750><c> it</c><00:02:46.900><c> within</c><00:02:47.680><c> the</c><00:02:47.950><c> JVM</c><00:02:48.370><c> and</c><00:02:48.580><c> that</c>

00:02:49.530 --> 00:02:49.540 align:start position:0%
we can run it within the JVM and that
 

00:02:49.540 --> 00:02:51.270 align:start position:0%
we can run it within the JVM and that
would<00:02:49.690><c> be</c><00:02:49.810><c> like</c><00:02:50.020><c> a</c><00:02:50.050><c> proper</c><00:02:50.410><c> normal</c><00:02:50.890><c> Java</c>

00:02:51.270 --> 00:02:51.280 align:start position:0%
would be like a proper normal Java
 

00:02:51.280 --> 00:02:53.990 align:start position:0%
would be like a proper normal Java
process<00:02:51.850><c> it</c><00:02:52.360><c> will</c><00:02:52.570><c> start</c><00:02:52.780><c> the</c><00:02:52.900><c> JVM</c><00:02:53.260><c> it</c><00:02:53.590><c> will</c>

00:02:53.990 --> 00:02:54.000 align:start position:0%
process it will start the JVM it will
 

00:02:54.000 --> 00:02:57.770 align:start position:0%
process it will start the JVM it will
normally<00:02:55.000><c> our</c><00:02:55.300><c> build</c><00:02:55.690><c> use</c><00:02:56.260><c> Java</c><00:02:56.890><c> hotspot</c><00:02:57.070><c> VM</c>

00:02:57.770 --> 00:02:57.780 align:start position:0%
normally our build use Java hotspot VM
 

00:02:57.780 --> 00:03:00.360 align:start position:0%
normally our build use Java hotspot VM
so<00:02:58.780><c> it</c><00:02:59.140><c> will</c><00:02:59.350><c> it</c><00:02:59.590><c> will</c><00:02:59.739><c> do</c><00:02:59.860><c> everything</c><00:03:00.190><c> that</c>

00:03:00.360 --> 00:03:00.370 align:start position:0%
so it will it will do everything that
 

00:03:00.370 --> 00:03:02.310 align:start position:0%
so it will it will do everything that
Java<00:03:00.880><c> normally</c><00:03:01.269><c> does</c><00:03:01.420><c> it</c><00:03:01.720><c> will</c><00:03:01.930><c> have</c><00:03:02.080><c> access</c>

00:03:02.310 --> 00:03:02.320 align:start position:0%
Java normally does it will have access
 

00:03:02.320 --> 00:03:03.990 align:start position:0%
Java normally does it will have access
to<00:03:02.650><c> the</c><00:03:02.769><c> garbage</c><00:03:02.950><c> collection</c><00:03:03.489><c> that</c><00:03:03.670><c> Java</c>

00:03:03.990 --> 00:03:04.000 align:start position:0%
to the garbage collection that Java
 

00:03:04.000 --> 00:03:05.970 align:start position:0%
to the garbage collection that Java
normally<00:03:04.360><c> does</c><00:03:04.540><c> it</c><00:03:05.050><c> will</c><00:03:05.290><c> lower</c><00:03:05.680><c> classes</c>

00:03:05.970 --> 00:03:05.980 align:start position:0%
normally does it will lower classes
 

00:03:05.980 --> 00:03:07.650 align:start position:0%
normally does it will lower classes
dynamically<00:03:06.640><c> it</c><00:03:06.790><c> will</c><00:03:07.000><c> be</c><00:03:07.120><c> your</c><00:03:07.450><c> normal</c>

00:03:07.650 --> 00:03:07.660 align:start position:0%
dynamically it will be your normal
 

00:03:07.660 --> 00:03:11.370 align:start position:0%
dynamically it will be your normal
perfect<00:03:08.230><c> Java</c><00:03:09.180><c> it</c><00:03:10.180><c> can</c><00:03:10.420><c> run</c><00:03:10.600><c> within</c><00:03:10.989><c> the</c>

00:03:11.370 --> 00:03:11.380 align:start position:0%
perfect Java it can run within the
 

00:03:11.380 --> 00:03:13.590 align:start position:0%
perfect Java it can run within the
context<00:03:11.769><c> of</c><00:03:11.860><c> the</c><00:03:11.980><c> node</c><00:03:12.160><c> application</c><00:03:12.340><c> and</c><00:03:12.910><c> that</c>

00:03:13.590 --> 00:03:13.600 align:start position:0%
context of the node application and that
 

00:03:13.600 --> 00:03:15.210 align:start position:0%
context of the node application and that
would<00:03:13.750><c> be</c><00:03:13.870><c> normal</c><00:03:14.290><c> no</c><00:03:14.440><c> the</c><00:03:14.590><c> application</c><00:03:15.070><c> if</c>

00:03:15.210 --> 00:03:15.220 align:start position:0%
would be normal no the application if
 

00:03:15.220 --> 00:03:17.009 align:start position:0%
would be normal no the application if
you<00:03:15.280><c> are</c><00:03:15.459><c> interesting</c><00:03:15.910><c> those</c><00:03:16.209><c> things</c><00:03:16.450><c> so</c><00:03:16.840><c> it</c>

00:03:17.009 --> 00:03:17.019 align:start position:0%
you are interesting those things so it
 

00:03:17.019 --> 00:03:18.479 align:start position:0%
you are interesting those things so it
will<00:03:17.170><c> have</c><00:03:17.350><c> the</c><00:03:17.500><c> event</c><00:03:17.709><c> loop</c><00:03:17.950><c> it</c><00:03:18.160><c> will</c><00:03:18.310><c> have</c>

00:03:18.479 --> 00:03:18.489 align:start position:0%
will have the event loop it will have
 

00:03:18.489 --> 00:03:19.770 align:start position:0%
will have the event loop it will have
the<00:03:18.640><c> signal</c><00:03:19.000><c> handlers</c><00:03:19.390><c> that</c><00:03:19.480><c> note</c>

00:03:19.770 --> 00:03:19.780 align:start position:0%
the signal handlers that note
 

00:03:19.780 --> 00:03:22.590 align:start position:0%
the signal handlers that note
application<00:03:20.260><c> half</c><00:03:20.890><c> it</c><00:03:21.370><c> will</c><00:03:21.610><c> be</c><00:03:21.790><c> just</c><00:03:22.480><c> a</c>

00:03:22.590 --> 00:03:22.600 align:start position:0%
application half it will be just a
 

00:03:22.600 --> 00:03:24.509 align:start position:0%
application half it will be just a
normal<00:03:22.870><c> application</c><00:03:23.260><c> it's</c><00:03:23.799><c> just</c><00:03:24.010><c> the</c><00:03:24.250><c> engine</c>

00:03:24.509 --> 00:03:24.519 align:start position:0%
normal application it's just the engine
 

00:03:24.519 --> 00:03:28.380 align:start position:0%
normal application it's just the engine
that<00:03:25.120><c> runs</c><00:03:25.989><c> the</c><00:03:26.350><c> code</c><00:03:26.670><c> within</c><00:03:27.670><c> that</c><00:03:27.790><c> platform</c>

00:03:28.380 --> 00:03:28.390 align:start position:0%
that runs the code within that platform
 

00:03:28.390 --> 00:03:31.130 align:start position:0%
that runs the code within that platform
is<00:03:28.510><c> replaced</c><00:03:29.290><c> by</c><00:03:29.440><c> by</c><00:03:29.980><c> our</c><00:03:30.190><c> technology</c><00:03:30.610><c> and</c>

00:03:31.130 --> 00:03:31.140 align:start position:0%
is replaced by by our technology and
 

00:03:31.140 --> 00:03:33.180 align:start position:0%
is replaced by by our technology and
from<00:03:32.140><c> the</c><00:03:32.290><c> very</c><00:03:32.470><c> beginning</c>

00:03:33.180 --> 00:03:33.190 align:start position:0%
from the very beginning
 

00:03:33.190 --> 00:03:35.610 align:start position:0%
from the very beginning
I<00:03:33.299><c> think</c><00:03:34.299><c> the</c><00:03:34.420><c> ground</c><00:03:34.690><c> VM</c><00:03:34.870><c> project</c><00:03:35.290><c> started</c>

00:03:35.610 --> 00:03:35.620 align:start position:0%
I think the ground VM project started
 

00:03:35.620 --> 00:03:37.860 align:start position:0%
I think the ground VM project started
something<00:03:36.340><c> like</c><00:03:36.489><c> seven</c><00:03:36.850><c> years</c><00:03:36.910><c> ago</c><00:03:37.209><c> and</c><00:03:37.510><c> it</c>

00:03:37.860 --> 00:03:37.870 align:start position:0%
something like seven years ago and it
 

00:03:37.870 --> 00:03:41.069 align:start position:0%
something like seven years ago and it
started<00:03:38.170><c> with</c><00:03:38.320><c> the</c><00:03:39.329><c> idea</c><00:03:40.329><c> that</c><00:03:40.420><c> maybe</c><00:03:40.720><c> we</c><00:03:40.930><c> can</c>

00:03:41.069 --> 00:03:41.079 align:start position:0%
started with the idea that maybe we can
 

00:03:41.079 --> 00:03:43.250 align:start position:0%
started with the idea that maybe we can
write<00:03:41.290><c> a</c><00:03:41.320><c> just-in-time</c><00:03:41.829><c> compilers</c><00:03:42.459><c> for</c><00:03:42.489><c> Java</c>

00:03:43.250 --> 00:03:43.260 align:start position:0%
write a just-in-time compilers for Java
 

00:03:43.260 --> 00:03:47.699 align:start position:0%
write a just-in-time compilers for Java
using<00:03:44.260><c> Java</c><00:03:44.530><c> itself</c><00:03:44.860><c> right</c><00:03:45.690><c> and</c><00:03:46.690><c> and</c><00:03:47.200><c> from</c>

00:03:47.699 --> 00:03:47.709 align:start position:0%
using Java itself right and and from
 

00:03:47.709 --> 00:03:50.819 align:start position:0%
using Java itself right and and from
that<00:03:47.920><c> compiler</c><00:03:49.200><c> everything</c><00:03:50.200><c> else</c><00:03:50.380><c> kind</c><00:03:50.709><c> of</c>

00:03:50.819 --> 00:03:50.829 align:start position:0%
that compiler everything else kind of
 

00:03:50.829 --> 00:03:53.130 align:start position:0%
that compiler everything else kind of
followed<00:03:51.130><c> to</c><00:03:51.850><c> what</c><00:03:52.060><c> Graham</c><00:03:52.450><c> can</c><00:03:52.630><c> do</c><00:03:52.720><c> now</c><00:03:52.840><c> and</c>

00:03:53.130 --> 00:03:53.140 align:start position:0%
followed to what Graham can do now and
 

00:03:53.140 --> 00:03:55.500 align:start position:0%
followed to what Graham can do now and
from<00:03:54.100><c> the</c><00:03:54.190><c> very</c><00:03:54.340><c> beginning</c><00:03:54.790><c> the</c><00:03:55.000><c> idea</c><00:03:55.209><c> was</c>

00:03:55.500 --> 00:03:55.510 align:start position:0%
from the very beginning the idea was
 

00:03:55.510 --> 00:03:57.150 align:start position:0%
from the very beginning the idea was
that<00:03:55.540><c> we</c><00:03:55.810><c> would</c><00:03:55.840><c> like</c><00:03:56.079><c> a</c><00:03:56.290><c> pluggable</c><00:03:56.709><c> system</c>

00:03:57.150 --> 00:03:57.160 align:start position:0%
that we would like a pluggable system
 

00:03:57.160 --> 00:03:58.949 align:start position:0%
that we would like a pluggable system
that<00:03:57.549><c> you</c><00:03:57.670><c> can</c><00:03:57.790><c> embed</c><00:03:58.180><c> in</c><00:03:58.480><c> in</c><00:03:58.810><c> different</c>

00:03:58.949 --> 00:03:58.959 align:start position:0%
that you can embed in in different
 

00:03:58.959 --> 00:04:01.650 align:start position:0%
that you can embed in in different
scenarios<00:03:59.620><c> so</c><00:03:59.829><c> now</c><00:04:00.430><c> you</c><00:04:00.489><c> can</c><00:04:00.850><c> use</c><00:04:01.120><c> the</c><00:04:01.329><c> graph</c>

00:04:01.650 --> 00:04:01.660 align:start position:0%
scenarios so now you can use the graph
 

00:04:01.660 --> 00:04:04.140 align:start position:0%
scenarios so now you can use the graph
in<00:04:01.840><c> runtime</c><00:04:02.320><c> and</c><00:04:02.530><c> put</c><00:04:03.160><c> it</c><00:04:03.280><c> into</c><00:04:03.579><c> your</c><00:04:03.610><c> native</c>

00:04:04.140 --> 00:04:04.150 align:start position:0%
in runtime and put it into your native
 

00:04:04.150 --> 00:04:06.300 align:start position:0%
in runtime and put it into your native
or<00:04:04.570><c> Java</c><00:04:05.049><c> applications</c><00:04:05.290><c> so</c><00:04:05.890><c> if</c><00:04:06.040><c> you</c><00:04:06.130><c> have</c><00:04:06.280><c> a</c>

00:04:06.300 --> 00:04:06.310 align:start position:0%
or Java applications so if you have a
 

00:04:06.310 --> 00:04:08.729 align:start position:0%
or Java applications so if you have a
large<00:04:06.579><c> platform</c><00:04:07.120><c> and</c><00:04:07.269><c> you</c><00:04:07.660><c> want</c><00:04:07.930><c> to</c><00:04:08.079><c> enhance</c>

00:04:08.729 --> 00:04:08.739 align:start position:0%
large platform and you want to enhance
 

00:04:08.739 --> 00:04:10.770 align:start position:0%
large platform and you want to enhance
it<00:04:08.950><c> with</c><00:04:08.980><c> with</c><00:04:09.760><c> the</c><00:04:09.850><c> ability</c><00:04:10.209><c> to</c><00:04:10.239><c> evaluate</c>

00:04:10.770 --> 00:04:10.780 align:start position:0%
it with with the ability to evaluate
 

00:04:10.780 --> 00:04:14.420 align:start position:0%
it with with the ability to evaluate
code<00:04:11.200><c> in</c><00:04:11.350><c> in</c><00:04:11.709><c> say</c><00:04:12.250><c> Java</c><00:04:12.459><c> Script</c><00:04:12.820><c> or</c><00:04:13.060><c> in</c><00:04:13.390><c> Python</c>

00:04:14.420 --> 00:04:14.430 align:start position:0%
code in in say Java Script or in Python
 

00:04:14.430 --> 00:04:19.199 align:start position:0%
code in in say Java Script or in Python
you<00:04:15.430><c> can</c><00:04:15.609><c> do</c><00:04:15.760><c> that</c><00:04:16.109><c> so</c><00:04:17.579><c> this</c><00:04:18.579><c> way</c><00:04:18.820><c> for</c><00:04:19.150><c> example</c>

00:04:19.199 --> 00:04:19.209 align:start position:0%
you can do that so this way for example
 

00:04:19.209 --> 00:04:21.690 align:start position:0%
you can do that so this way for example
there<00:04:19.780><c> are</c><00:04:19.840><c> exist</c><00:04:20.200><c> some</c><00:04:20.530><c> experimental</c><00:04:21.400><c> builds</c>

00:04:21.690 --> 00:04:21.700 align:start position:0%
there are exist some experimental builds
 

00:04:21.700 --> 00:04:23.930 align:start position:0%
there are exist some experimental builds
of<00:04:21.880><c> Oracle</c><00:04:22.450><c> database</c>

00:04:23.930 --> 00:04:23.940 align:start position:0%
of Oracle database
 

00:04:23.940 --> 00:04:26.420 align:start position:0%
of Oracle database
because<00:04:24.330><c> Oracle</c><00:04:24.690><c> database</c><00:04:25.260><c> is</c><00:04:25.470><c> a</c><00:04:25.500><c> fairly</c>

00:04:26.420 --> 00:04:26.430 align:start position:0%
because Oracle database is a fairly
 

00:04:26.430 --> 00:04:29.240 align:start position:0%
because Oracle database is a fairly
large<00:04:26.690><c> native</c><00:04:27.690><c> application</c><00:04:28.200><c> so</c><00:04:28.650><c> there</c><00:04:29.160><c> are</c>

00:04:29.240 --> 00:04:29.250 align:start position:0%
large native application so there are
 

00:04:29.250 --> 00:04:30.680 align:start position:0%
large native application so there are
experimental<00:04:29.580><c> builds</c><00:04:29.970><c> where</c><00:04:30.180><c> you</c><00:04:30.300><c> can</c><00:04:30.450><c> use</c>

00:04:30.680 --> 00:04:30.690 align:start position:0%
experimental builds where you can use
 

00:04:30.690 --> 00:04:34.370 align:start position:0%
experimental builds where you can use
ground<00:04:31.080><c> VM</c><00:04:31.520><c> run</c><00:04:32.520><c> time</c><00:04:32.730><c> to</c><00:04:33.240><c> run</c><00:04:33.990><c> stored</c>

00:04:34.370 --> 00:04:34.380 align:start position:0%
ground VM run time to run stored
 

00:04:34.380 --> 00:04:36.050 align:start position:0%
ground VM run time to run stored
procedures<00:04:34.830><c> and</c><00:04:34.860><c> usually</c><00:04:35.310><c> defined</c><00:04:35.580><c> functions</c>

00:04:36.050 --> 00:04:36.060 align:start position:0%
procedures and usually defined functions
 

00:04:36.060 --> 00:04:38.630 align:start position:0%
procedures and usually defined functions
using<00:04:36.780><c> javascript</c><00:04:37.140><c> so</c><00:04:38.100><c> normally</c><00:04:38.460><c> you</c><00:04:38.550><c> would</c>

00:04:38.630 --> 00:04:38.640 align:start position:0%
using javascript so normally you would
 

00:04:38.640 --> 00:04:41.420 align:start position:0%
using javascript so normally you would
do<00:04:38.790><c> PL</c><00:04:39.240><c> sequel</c><00:04:39.420><c> but</c><00:04:40.320><c> in</c><00:04:40.620><c> those</c><00:04:40.860><c> bills</c><00:04:41.100><c> you</c><00:04:41.280><c> can</c>

00:04:41.420 --> 00:04:41.430 align:start position:0%
do PL sequel but in those bills you can
 

00:04:41.430 --> 00:04:45.410 align:start position:0%
do PL sequel but in those bills you can
use<00:04:41.610><c> may</c><00:04:42.030><c> be</c><00:04:43.340><c> easier</c><00:04:44.340><c> to</c><00:04:44.670><c> understand</c><00:04:45.240><c> language</c>

00:04:45.410 --> 00:04:45.420 align:start position:0%
use may be easier to understand language
 

00:04:45.420 --> 00:04:46.340 align:start position:0%
use may be easier to understand language
for<00:04:45.780><c> you</c>

00:04:46.340 --> 00:04:46.350 align:start position:0%
for you
 

00:04:46.350 --> 00:04:49.070 align:start position:0%
for you
JavaScript<00:04:47.070><c> right</c><00:04:47.700><c> and</c><00:04:47.850><c> the</c><00:04:48.240><c> final</c><00:04:48.540><c> motor</c><00:04:48.720><c> in</c>

00:04:49.070 --> 00:04:49.080 align:start position:0%
JavaScript right and the final motor in
 

00:04:49.080 --> 00:04:51.470 align:start position:0%
JavaScript right and the final motor in
the<00:04:49.230><c> in</c><00:04:49.920><c> the</c><00:04:50.070><c> corner</c><00:04:50.370><c> is</c><00:04:50.550><c> the</c><00:04:50.610><c> standalone</c>

00:04:51.470 --> 00:04:51.480 align:start position:0%
the in the corner is the standalone
 

00:04:51.480 --> 00:04:55.130 align:start position:0%
the in the corner is the standalone
applications<00:04:52.260><c> those</c><00:04:52.650><c> are</c><00:04:52.680><c> they</c><00:04:53.840><c> grow</c><00:04:54.840><c> VM</c>

00:04:55.130 --> 00:04:55.140 align:start position:0%
applications those are they grow VM
 

00:04:55.140 --> 00:04:56.990 align:start position:0%
applications those are they grow VM
native<00:04:55.470><c> images</c><00:04:55.920><c> which</c><00:04:56.550><c> are</c><00:04:56.730><c> currently</c>

00:04:56.990 --> 00:04:57.000 align:start position:0%
native images which are currently
 

00:04:57.000 --> 00:04:58.430 align:start position:0%
native images which are currently
available<00:04:57.120><c> as</c><00:04:57.510><c> an</c><00:04:57.630><c> early</c><00:04:57.960><c> adopter</c>

00:04:58.430 --> 00:04:58.440 align:start position:0%
available as an early adopter
 

00:04:58.440 --> 00:05:02.180 align:start position:0%
available as an early adopter
technology<00:04:59.430><c> and</c><00:05:00.200><c> this</c><00:05:01.200><c> is</c><00:05:01.350><c> when</c><00:05:01.500><c> we</c><00:05:01.680><c> take</c><00:05:01.950><c> your</c>

00:05:02.180 --> 00:05:02.190 align:start position:0%
technology and this is when we take your
 

00:05:02.190 --> 00:05:05.000 align:start position:0%
technology and this is when we take your
Java<00:05:02.460><c> bytecode</c><00:05:02.730><c> and</c><00:05:03.090><c> we</c><00:05:03.570><c> analyze</c><00:05:04.380><c> that</c><00:05:04.410><c> and</c><00:05:04.800><c> we</c>

00:05:05.000 --> 00:05:05.010 align:start position:0%
Java bytecode and we analyze that and we
 

00:05:05.010 --> 00:05:07.100 align:start position:0%
Java bytecode and we analyze that and we
compile<00:05:05.340><c> it</c><00:05:05.490><c> ahead</c><00:05:05.580><c> of</c><00:05:05.760><c> time</c><00:05:05.880><c> to</c><00:05:06.750><c> the</c><00:05:06.870><c> native</c>

00:05:07.100 --> 00:05:07.110 align:start position:0%
compile it ahead of time to the native
 

00:05:07.110 --> 00:05:10.070 align:start position:0%
compile it ahead of time to the native
executable<00:05:07.350><c> for</c><00:05:08.190><c> your</c><00:05:08.550><c> platform</c><00:05:09.030><c> and</c><00:05:09.450><c> the</c>

00:05:10.070 --> 00:05:10.080 align:start position:0%
executable for your platform and the
 

00:05:10.080 --> 00:05:12.140 align:start position:0%
executable for your platform and the
result<00:05:10.470><c> it</c><00:05:10.650><c> has</c><00:05:10.890><c> several</c><00:05:11.310><c> advantages</c><00:05:11.460><c> it</c>

00:05:12.140 --> 00:05:12.150 align:start position:0%
result it has several advantages it
 

00:05:12.150 --> 00:05:14.990 align:start position:0%
result it has several advantages it
starts<00:05:12.510><c> really</c><00:05:12.630><c> fast</c><00:05:13.070><c> it</c><00:05:14.070><c> takes</c><00:05:14.340><c> less</c><00:05:14.670><c> memory</c>

00:05:14.990 --> 00:05:15.000 align:start position:0%
starts really fast it takes less memory
 

00:05:15.000 --> 00:05:18.380 align:start position:0%
starts really fast it takes less memory
at<00:05:15.210><c> runtime</c><00:05:15.680><c> and</c><00:05:16.680><c> it's</c><00:05:17.340><c> fairly</c><00:05:17.670><c> small</c><00:05:18.030><c> in</c><00:05:18.090><c> size</c>

00:05:18.380 --> 00:05:18.390 align:start position:0%
at runtime and it's fairly small in size
 

00:05:18.390 --> 00:05:21.530 align:start position:0%
at runtime and it's fairly small in size
so<00:05:19.290><c> there</c><00:05:19.890><c> are</c><00:05:20.010><c> very</c><00:05:20.550><c> useful</c><00:05:20.910><c> context</c><00:05:21.390><c> where</c>

00:05:21.530 --> 00:05:21.540 align:start position:0%
so there are very useful context where
 

00:05:21.540 --> 00:05:23.810 align:start position:0%
so there are very useful context where
you<00:05:21.660><c> would</c><00:05:21.780><c> like</c><00:05:21.960><c> to</c><00:05:22.170><c> just</c><00:05:23.010><c> concentrate</c><00:05:23.460><c> in</c>

00:05:23.810 --> 00:05:23.820 align:start position:0%
you would like to just concentrate in
 

00:05:23.820 --> 00:05:26.630 align:start position:0%
you would like to just concentrate in
that<00:05:23.970><c> mode</c><00:05:24.180><c> but</c><00:05:25.080><c> in</c><00:05:25.260><c> general</c><00:05:25.710><c> growl</c><00:05:26.070><c> VM</c><00:05:26.370><c> is</c><00:05:26.580><c> a</c>

00:05:26.630 --> 00:05:26.640 align:start position:0%
that mode but in general growl VM is a
 

00:05:26.640 --> 00:05:29.210 align:start position:0%
that mode but in general growl VM is a
large<00:05:27.090><c> project</c><00:05:27.570><c> it</c><00:05:27.990><c> can</c><00:05:28.200><c> do</c><00:05:28.350><c> many</c><00:05:28.560><c> many</c><00:05:28.710><c> things</c>

00:05:29.210 --> 00:05:29.220 align:start position:0%
large project it can do many many things
 

00:05:29.220 --> 00:05:30.860 align:start position:0%
large project it can do many many things
it<00:05:29.490><c> has</c><00:05:29.670><c> supports</c><00:05:30.060><c> with</c><00:05:30.210><c> different</c><00:05:30.540><c> languages</c>

00:05:30.860 --> 00:05:30.870 align:start position:0%
it has supports with different languages
 

00:05:30.870 --> 00:05:33.290 align:start position:0%
it has supports with different languages
I'm<00:05:31.290><c> sure</c><00:05:31.770><c> you</c><00:05:31.980><c> can</c><00:05:32.100><c> find</c><00:05:32.310><c> use</c><00:05:32.610><c> cases</c><00:05:32.880><c> for</c>

00:05:33.290 --> 00:05:33.300 align:start position:0%
I'm sure you can find use cases for
 

00:05:33.300 --> 00:05:37.970 align:start position:0%
I'm sure you can find use cases for
various<00:05:33.990><c> scenarios</c><00:05:34.560><c> here</c><00:05:35.270><c> and</c><00:05:36.350><c> the</c><00:05:37.350><c> main</c><00:05:37.680><c> ones</c>

00:05:37.970 --> 00:05:37.980 align:start position:0%
various scenarios here and the main ones
 

00:05:37.980 --> 00:05:40.550 align:start position:0%
various scenarios here and the main ones
that<00:05:38.100><c> we</c><00:05:38.370><c> found</c><00:05:39.120><c> by</c><00:05:39.540><c> talking</c><00:05:39.960><c> to</c><00:05:40.080><c> people</c><00:05:40.230><c> and</c>

00:05:40.550 --> 00:05:40.560 align:start position:0%
that we found by talking to people and
 

00:05:40.560 --> 00:05:43.130 align:start position:0%
that we found by talking to people and
by<00:05:40.919><c> evaluating</c><00:05:41.910><c> what</c><00:05:42.060><c> they</c><00:05:42.150><c> say</c><00:05:42.330><c> to</c><00:05:42.390><c> us</c><00:05:42.600><c> and</c><00:05:42.840><c> by</c>

00:05:43.130 --> 00:05:43.140 align:start position:0%
by evaluating what they say to us and by
 

00:05:43.140 --> 00:05:45.260 align:start position:0%
by evaluating what they say to us and by
looking<00:05:43.650><c> at</c><00:05:43.740><c> what</c><00:05:43.980><c> they</c><00:05:44.100><c> would</c><00:05:44.790><c> like</c><00:05:44.970><c> to</c><00:05:45.150><c> use</c>

00:05:45.260 --> 00:05:45.270 align:start position:0%
looking at what they would like to use
 

00:05:45.270 --> 00:05:47.810 align:start position:0%
looking at what they would like to use
gravity<00:05:45.480><c> on</c><00:05:45.690><c> for</c><00:05:45.930><c> are</c><00:05:46.260><c> the</c><00:05:46.530><c> following</c><00:05:46.800><c> so</c><00:05:47.640><c> it's</c>

00:05:47.810 --> 00:05:47.820 align:start position:0%
gravity on for are the following so it's
 

00:05:47.820 --> 00:05:50.020 align:start position:0%
gravity on for are the following so it's
a<00:05:47.880><c> faster</c><00:05:48.300><c> runtime</c><00:05:48.750><c> it's</c><00:05:49.260><c> really</c><00:05:49.650><c> a</c><00:05:49.680><c> good</c>

00:05:50.020 --> 00:05:50.030 align:start position:0%
a faster runtime it's really a good
 

00:05:50.030 --> 00:05:52.670 align:start position:0%
a faster runtime it's really a good
virtual<00:05:51.030><c> machine</c><00:05:51.450><c> right</c><00:05:51.810><c> the</c><00:05:51.930><c> compiler</c><00:05:52.380><c> the</c>

00:05:52.670 --> 00:05:52.680 align:start position:0%
virtual machine right the compiler the
 

00:05:52.680 --> 00:05:54.980 align:start position:0%
virtual machine right the compiler the
just-in-time<00:05:53.040><c> compiler</c><00:05:53.520><c> inside</c><00:05:54.450><c> ground</c><00:05:54.750><c> vm</c>

00:05:54.980 --> 00:05:54.990 align:start position:0%
just-in-time compiler inside ground vm
 

00:05:54.990 --> 00:05:58.670 align:start position:0%
just-in-time compiler inside ground vm
is<00:05:55.169><c> a</c><00:05:55.530><c> state</c><00:05:56.070><c> of</c><00:05:56.100><c> the</c><00:05:56.370><c> art</c><00:05:57.200><c> well</c><00:05:58.200><c> just-in-time</c>

00:05:58.670 --> 00:05:58.680 align:start position:0%
is a state of the art well just-in-time
 

00:05:58.680 --> 00:06:00.740 align:start position:0%
is a state of the art well just-in-time
compiler<00:05:59.160><c> so</c><00:05:59.669><c> there</c><00:06:00.150><c> are</c><00:06:00.240><c> many</c><00:06:00.540><c> many</c>

00:06:00.740 --> 00:06:00.750 align:start position:0%
compiler so there are many many
 

00:06:00.750 --> 00:06:02.870 align:start position:0%
compiler so there are many many
workloads<00:06:01.260><c> where</c><00:06:01.680><c> it</c><00:06:02.010><c> will</c><00:06:02.190><c> give</c><00:06:02.400><c> you</c><00:06:02.550><c> better</c>

00:06:02.870 --> 00:06:02.880 align:start position:0%
workloads where it will give you better
 

00:06:02.880 --> 00:06:05.810 align:start position:0%
workloads where it will give you better
results<00:06:03.480><c> than</c><00:06:03.750><c> other</c><00:06:04.250><c> JVM</c><00:06:05.250><c> implementations</c>

00:06:05.810 --> 00:06:05.820 align:start position:0%
results than other JVM implementations
 

00:06:05.820 --> 00:06:08.480 align:start position:0%
results than other JVM implementations
so<00:06:06.600><c> if</c><00:06:06.690><c> you</c><00:06:06.810><c> want</c><00:06:07.020><c> your</c><00:06:07.410><c> a</c><00:06:07.650><c> faster</c><00:06:07.980><c> runtime</c><00:06:08.310><c> for</c>

00:06:08.480 --> 00:06:08.490 align:start position:0%
so if you want your a faster runtime for
 

00:06:08.490 --> 00:06:11.390 align:start position:0%
so if you want your a faster runtime for
you<00:06:08.640><c> a</c><00:06:08.880><c> JVM</c><00:06:09.740><c> applications</c><00:06:10.740><c> Scala</c>

00:06:11.390 --> 00:06:11.400 align:start position:0%
you a JVM applications Scala
 

00:06:11.400 --> 00:06:14.420 align:start position:0%
you a JVM applications Scala
Java<00:06:12.060><c> coughing</c><00:06:12.750><c> and</c><00:06:12.900><c> so</c><00:06:13.140><c> on</c><00:06:13.260><c> then</c><00:06:13.919><c> you</c><00:06:14.160><c> should</c>

00:06:14.420 --> 00:06:14.430 align:start position:0%
Java coughing and so on then you should
 

00:06:14.430 --> 00:06:17.840 align:start position:0%
Java coughing and so on then you should
look<00:06:14.760><c> at</c><00:06:14.940><c> growth</c><00:06:15.210><c> em</c><00:06:16.010><c> then</c><00:06:17.010><c> they</c><00:06:17.430><c> grow</c><00:06:17.610><c> VM</c>

00:06:17.840 --> 00:06:17.850 align:start position:0%
look at growth em then they grow VM
 

00:06:17.850 --> 00:06:19.970 align:start position:0%
look at growth em then they grow VM
native<00:06:18.090><c> images</c><00:06:18.419><c> they</c><00:06:18.870><c> offer</c><00:06:19.050><c> you</c><00:06:19.380><c> immediate</c>

00:06:19.970 --> 00:06:19.980 align:start position:0%
native images they offer you immediate
 

00:06:19.980 --> 00:06:21.920 align:start position:0%
native images they offer you immediate
startup<00:06:20.310><c> for</c><00:06:20.460><c> the</c><00:06:20.520><c> applications</c><00:06:21.060><c> they</c><00:06:21.720><c> offer</c>

00:06:21.920 --> 00:06:21.930 align:start position:0%
startup for the applications they offer
 

00:06:21.930 --> 00:06:24.110 align:start position:0%
startup for the applications they offer
you<00:06:22.080><c> lower</c><00:06:22.290><c> footprint</c><00:06:22.830><c> if</c><00:06:23.040><c> you</c><00:06:23.490><c> deploy</c><00:06:24.090><c> your</c>

00:06:24.110 --> 00:06:24.120 align:start position:0%
you lower footprint if you deploy your
 

00:06:24.120 --> 00:06:26.540 align:start position:0%
you lower footprint if you deploy your
applications<00:06:24.720><c> to</c><00:06:24.780><c> the</c><00:06:24.930><c> cloud</c><00:06:24.980><c> where</c><00:06:25.980><c> startup</c>

00:06:26.540 --> 00:06:26.550 align:start position:0%
applications to the cloud where startup
 

00:06:26.550 --> 00:06:28.340 align:start position:0%
applications to the cloud where startup
and<00:06:26.700><c> memory</c><00:06:27.000><c> consumption</c><00:06:27.660><c> are</c><00:06:27.930><c> important</c>

00:06:28.340 --> 00:06:28.350 align:start position:0%
and memory consumption are important
 

00:06:28.350 --> 00:06:29.659 align:start position:0%
and memory consumption are important
because<00:06:28.620><c> those</c><00:06:29.040><c> are</c><00:06:29.190><c> the</c><00:06:29.340><c> things</c><00:06:29.460><c> you're</c>

00:06:29.659 --> 00:06:29.669 align:start position:0%
because those are the things you're
 

00:06:29.669 --> 00:06:32.480 align:start position:0%
because those are the things you're
actually<00:06:29.790><c> paying</c><00:06:30.210><c> for</c><00:06:30.380><c> then</c><00:06:31.380><c> growl</c><00:06:31.979><c> VM</c><00:06:32.220><c> native</c>

00:06:32.480 --> 00:06:32.490 align:start position:0%
actually paying for then growl VM native
 

00:06:32.490 --> 00:06:34.820 align:start position:0%
actually paying for then growl VM native
images<00:06:32.820><c> can</c><00:06:33.030><c> probably</c><00:06:33.539><c> be</c><00:06:33.960><c> a</c><00:06:33.990><c> solution</c><00:06:34.500><c> that</c>

00:06:34.820 --> 00:06:34.830 align:start position:0%
images can probably be a solution that
 

00:06:34.830 --> 00:06:35.850 align:start position:0%
images can probably be a solution that
you<00:06:35.010><c> should</c><00:06:35.220><c> at</c><00:06:35.370><c> least</c>

00:06:35.850 --> 00:06:35.860 align:start position:0%
you should at least
 

00:06:35.860 --> 00:06:38.360 align:start position:0%
you should at least
look<00:06:35.979><c> at</c><00:06:36.129><c> to</c><00:06:36.939><c> see</c><00:06:37.150><c> where</c><00:06:37.389><c> it</c><00:06:37.539><c> works</c><00:06:37.750><c> for</c><00:06:37.960><c> you</c>

00:06:38.360 --> 00:06:38.370 align:start position:0%
look at to see where it works for you
 

00:06:38.370 --> 00:06:41.820 align:start position:0%
look at to see where it works for you
it's<00:06:39.370><c> an</c><00:06:39.490><c> embeddable</c><00:06:39.819><c> vm</c><00:06:40.139><c> so</c><00:06:41.139><c> if</c><00:06:41.469><c> you</c><00:06:41.650><c> have</c><00:06:41.800><c> a</c>

00:06:41.820 --> 00:06:41.830 align:start position:0%
it's an embeddable vm so if you have a
 

00:06:41.830 --> 00:06:44.540 align:start position:0%
it's an embeddable vm so if you have a
large<00:06:42.219><c> application</c><00:06:42.909><c> you</c><00:06:43.780><c> might</c><00:06:43.990><c> want</c><00:06:44.349><c> to</c>

00:06:44.540 --> 00:06:44.550 align:start position:0%
large application you might want to
 

00:06:44.550 --> 00:06:47.010 align:start position:0%
large application you might want to
provide<00:06:45.550><c> the</c><00:06:45.610><c> ability</c><00:06:45.969><c> to</c><00:06:46.000><c> leverage</c><00:06:46.509><c> code</c><00:06:46.870><c> in</c>

00:06:47.010 --> 00:06:47.020 align:start position:0%
provide the ability to leverage code in
 

00:06:47.020 --> 00:06:49.649 align:start position:0%
provide the ability to leverage code in
different<00:06:47.169><c> languages</c><00:06:47.710><c> if</c><00:06:48.340><c> you</c><00:06:48.610><c> work</c><00:06:49.449><c> at</c><00:06:49.629><c> a</c>

00:06:49.649 --> 00:06:49.659 align:start position:0%
different languages if you work at a
 

00:06:49.659 --> 00:06:52.290 align:start position:0%
different languages if you work at a
large<00:06:50.020><c> enterprise</c><00:06:50.439><c> by</c><00:06:51.009><c> the</c><00:06:51.129><c> or</c><00:06:51.550><c> even</c><00:06:52.120><c> a</c>

00:06:52.290 --> 00:06:52.300 align:start position:0%
large enterprise by the or even a
 

00:06:52.300 --> 00:06:54.330 align:start position:0%
large enterprise by the or even a
medium-sized<00:06:52.780><c> company</c><00:06:53.169><c> probably</c><00:06:54.009><c> you</c><00:06:54.129><c> have</c>

00:06:54.330 --> 00:06:54.340 align:start position:0%
medium-sized company probably you have
 

00:06:54.340 --> 00:06:56.580 align:start position:0%
medium-sized company probably you have
code<00:06:54.580><c> based</c><00:06:54.849><c> in</c><00:06:54.969><c> different</c><00:06:55.060><c> languages</c><00:06:55.599><c> maybe</c>

00:06:56.580 --> 00:06:56.590 align:start position:0%
code based in different languages maybe
 

00:06:56.590 --> 00:06:58.439 align:start position:0%
code based in different languages maybe
you<00:06:56.860><c> want</c><00:06:57.069><c> to</c><00:06:57.129><c> run</c><00:06:57.430><c> this</c><00:06:57.580><c> code</c><00:06:57.789><c> within</c><00:06:58.240><c> a</c>

00:06:58.439 --> 00:06:58.449 align:start position:0%
you want to run this code within a
 

00:06:58.449 --> 00:07:01.830 align:start position:0%
you want to run this code within a
single<00:06:58.810><c> process</c><00:06:59.199><c> like</c><00:06:59.860><c> spice</c><00:07:00.520><c> up</c><00:07:00.759><c> your</c><00:07:00.840><c> spring</c>

00:07:01.830 --> 00:07:01.840 align:start position:0%
single process like spice up your spring
 

00:07:01.840 --> 00:07:03.809 align:start position:0%
single process like spice up your spring
application<00:07:02.530><c> with</c><00:07:02.680><c> some</c><00:07:02.979><c> machine</c><00:07:03.789><c> learning</c>

00:07:03.809 --> 00:07:03.819 align:start position:0%
application with some machine learning
 

00:07:03.819 --> 00:07:06.659 align:start position:0%
application with some machine learning
bits<00:07:04.360><c> written</c><00:07:04.870><c> in</c><00:07:04.960><c> Python</c><00:07:05.349><c> because</c><00:07:05.889><c> well</c>

00:07:06.659 --> 00:07:06.669 align:start position:0%
bits written in Python because well
 

00:07:06.669 --> 00:07:08.969 align:start position:0%
bits written in Python because well
machine<00:07:07.569><c> learning</c><00:07:07.840><c> specialists</c><00:07:08.409><c> usually</c><00:07:08.800><c> use</c>

00:07:08.969 --> 00:07:08.979 align:start position:0%
machine learning specialists usually use
 

00:07:08.979 --> 00:07:09.390 align:start position:0%
machine learning specialists usually use
peyten

00:07:09.390 --> 00:07:09.400 align:start position:0%
peyten
 

00:07:09.400 --> 00:07:12.330 align:start position:0%
peyten
write<00:07:09.699><c> for</c><00:07:10.120><c> for</c><00:07:10.449><c> everything</c><00:07:10.960><c> maybe</c><00:07:11.949><c> you</c><00:07:12.159><c> want</c>

00:07:12.330 --> 00:07:12.340 align:start position:0%
write for for everything maybe you want
 

00:07:12.340 --> 00:07:14.850 align:start position:0%
write for for everything maybe you want
to<00:07:12.460><c> run</c><00:07:12.610><c> this</c><00:07:12.759><c> in</c><00:07:12.909><c> a</c><00:07:12.969><c> single</c><00:07:13.210><c> process</c><00:07:13.590><c> or</c><00:07:14.590><c> maybe</c>

00:07:14.850 --> 00:07:14.860 align:start position:0%
to run this in a single process or maybe
 

00:07:14.860 --> 00:07:17.070 align:start position:0%
to run this in a single process or maybe
you<00:07:15.039><c> just</c><00:07:15.159><c> want</c><00:07:15.430><c> to</c><00:07:15.490><c> write</c><00:07:15.969><c> your</c><00:07:16.240><c> application</c>

00:07:17.070 --> 00:07:17.080 align:start position:0%
you just want to write your application
 

00:07:17.080 --> 00:07:20.100 align:start position:0%
you just want to write your application
and<00:07:17.349><c> use</c><00:07:17.860><c> the</c><00:07:18.069><c> ecosystem</c><00:07:18.879><c> from</c><00:07:19.300><c> different</c>

00:07:20.100 --> 00:07:20.110 align:start position:0%
and use the ecosystem from different
 

00:07:20.110 --> 00:07:22.640 align:start position:0%
and use the ecosystem from different
languages<00:07:20.439><c> because</c><00:07:21.219><c> you</c><00:07:21.729><c> just</c><00:07:21.909><c> feel</c><00:07:22.090><c> like</c><00:07:22.270><c> it</c>

00:07:22.640 --> 00:07:22.650 align:start position:0%
languages because you just feel like it
 

00:07:22.650 --> 00:07:25.439 align:start position:0%
languages because you just feel like it
so<00:07:23.650><c> those</c><00:07:24.159><c> are</c><00:07:24.490><c> the</c><00:07:24.699><c> main</c><00:07:24.879><c> values</c><00:07:25.300><c> that</c>

00:07:25.439 --> 00:07:25.449 align:start position:0%
so those are the main values that
 

00:07:25.449 --> 00:07:28.140 align:start position:0%
so those are the main values that
grapheme<00:07:25.779><c> can</c><00:07:25.930><c> offer</c><00:07:26.080><c> you</c><00:07:26.349><c> now</c><00:07:26.669><c> at</c><00:07:27.669><c> least</c><00:07:27.909><c> this</c>

00:07:28.140 --> 00:07:28.150 align:start position:0%
grapheme can offer you now at least this
 

00:07:28.150 --> 00:07:32.070 align:start position:0%
grapheme can offer you now at least this
is<00:07:28.210><c> what</c><00:07:28.539><c> we</c><00:07:29.430><c> find</c><00:07:30.430><c> when</c><00:07:31.029><c> talking</c><00:07:31.750><c> to</c><00:07:31.870><c> people</c>

00:07:32.070 --> 00:07:32.080 align:start position:0%
is what we find when talking to people
 

00:07:32.080 --> 00:07:34.290 align:start position:0%
is what we find when talking to people
who<00:07:32.289><c> evaluated</c><00:07:32.740><c> it</c><00:07:32.860><c> and</c><00:07:33.069><c> in</c><00:07:33.699><c> this</c><00:07:33.879><c> session</c><00:07:34.060><c> I'm</c>

00:07:34.290 --> 00:07:34.300 align:start position:0%
who evaluated it and in this session I'm
 

00:07:34.300 --> 00:07:36.119 align:start position:0%
who evaluated it and in this session I'm
gonna<00:07:34.449><c> try</c><00:07:34.689><c> to</c><00:07:34.719><c> go</c><00:07:35.319><c> through</c><00:07:35.529><c> all</c><00:07:35.740><c> of</c><00:07:35.770><c> them</c><00:07:35.979><c> and</c>

00:07:36.119 --> 00:07:36.129 align:start position:0%
gonna try to go through all of them and
 

00:07:36.129 --> 00:07:38.610 align:start position:0%
gonna try to go through all of them and
quickly<00:07:36.909><c> explain</c><00:07:37.330><c> them</c><00:07:37.569><c> and</c><00:07:37.719><c> how</c><00:07:38.139><c> we</c><00:07:38.169><c> achieve</c>

00:07:38.610 --> 00:07:38.620 align:start position:0%
quickly explain them and how we achieve
 

00:07:38.620 --> 00:07:40.469 align:start position:0%
quickly explain them and how we achieve
those<00:07:38.770><c> results</c><00:07:38.830><c> and</c><00:07:39.430><c> give</c><00:07:40.120><c> you</c><00:07:40.240><c> more</c>

00:07:40.469 --> 00:07:40.479 align:start position:0%
those results and give you more
 

00:07:40.479 --> 00:07:42.240 align:start position:0%
those results and give you more
information<00:07:40.750><c> about</c><00:07:41.050><c> what</c><00:07:41.229><c> happens</c><00:07:41.800><c> at</c><00:07:41.979><c> the</c><00:07:42.039><c> PI</c>

00:07:42.240 --> 00:07:42.250 align:start position:0%
information about what happens at the PI
 

00:07:42.250 --> 00:07:45.149 align:start position:0%
information about what happens at the PI
in<00:07:42.430><c> the</c><00:07:42.550><c> background</c><00:07:43.020><c> when</c><00:07:44.020><c> dravyam</c><00:07:44.680><c> tries</c><00:07:45.009><c> to</c>

00:07:45.149 --> 00:07:45.159 align:start position:0%
in the background when dravyam tries to
 

00:07:45.159 --> 00:07:46.920 align:start position:0%
in the background when dravyam tries to
achieve<00:07:45.370><c> those</c><00:07:45.520><c> and</c><00:07:45.819><c> of</c><00:07:46.389><c> course</c><00:07:46.599><c> see</c><00:07:46.750><c> some</c>

00:07:46.920 --> 00:07:46.930 align:start position:0%
achieve those and of course see some
 

00:07:46.930 --> 00:07:50.760 align:start position:0%
achieve those and of course see some
demos<00:07:47.080><c> because</c><00:07:48.930><c> it's</c><00:07:49.930><c> always</c><00:07:50.169><c> better</c><00:07:50.319><c> to</c><00:07:50.440><c> see</c>

00:07:50.760 --> 00:07:50.770 align:start position:0%
demos because it's always better to see
 

00:07:50.770 --> 00:07:52.740 align:start position:0%
demos because it's always better to see
things<00:07:51.009><c> than</c><00:07:51.490><c> to</c><00:07:51.610><c> hear</c><00:07:51.789><c> somebody</c><00:07:52.060><c> talking</c>

00:07:52.740 --> 00:07:52.750 align:start position:0%
things than to hear somebody talking
 

00:07:52.750 --> 00:07:55.249 align:start position:0%
things than to hear somebody talking
about<00:07:52.930><c> things</c><00:07:53.349><c> when</c><00:07:54.190><c> you</c><00:07:54.279><c> download</c><00:07:54.639><c> gravia</c>

00:07:55.249 --> 00:07:55.259 align:start position:0%
about things when you download gravia
 

00:07:55.259 --> 00:07:58.769 align:start position:0%
about things when you download gravia
you<00:07:56.259><c> get</c><00:07:56.440><c> a</c><00:07:56.589><c> following</c><00:07:57.069><c> picture</c><00:07:57.849><c> it's</c><00:07:58.449><c> a</c><00:07:58.599><c> it's</c>

00:07:58.769 --> 00:07:58.779 align:start position:0%
you get a following picture it's a it's
 

00:07:58.779 --> 00:08:01.050 align:start position:0%
you get a following picture it's a it's
a<00:07:58.870><c> zip</c><00:07:59.050><c> archive</c><00:07:59.229><c> we're</c><00:07:59.770><c> at</c><00:07:59.860><c> our</c><00:08:00.069><c> archive</c><00:08:00.819><c> and</c>

00:08:01.050 --> 00:08:01.060 align:start position:0%
a zip archive we're at our archive and
 

00:08:01.060 --> 00:08:04.200 align:start position:0%
a zip archive we're at our archive and
you<00:08:01.210><c> unzip</c><00:08:01.389><c> it</c><00:08:01.750><c> and</c><00:08:01.900><c> you</c><00:08:02.409><c> see</c><00:08:02.680><c> this</c><00:08:03.550><c> and</c><00:08:03.940><c> you</c>

00:08:04.200 --> 00:08:04.210 align:start position:0%
you unzip it and you see this and you
 

00:08:04.210 --> 00:08:06.089 align:start position:0%
you unzip it and you see this and you
can<00:08:04.360><c> see</c><00:08:04.479><c> that</c><00:08:04.659><c> this</c><00:08:04.779><c> is</c><00:08:04.930><c> very</c><00:08:05.139><c> similar</c><00:08:05.439><c> to</c><00:08:05.589><c> the</c>

00:08:06.089 --> 00:08:06.099 align:start position:0%
can see that this is very similar to the
 

00:08:06.099 --> 00:08:08.249 align:start position:0%
can see that this is very similar to the
normal<00:08:06.400><c> jdk</c><00:08:07.210><c> distribution</c><00:08:07.810><c> that</c><00:08:07.960><c> you</c><00:08:08.020><c> have</c>

00:08:08.249 --> 00:08:08.259 align:start position:0%
normal jdk distribution that you have
 

00:08:08.259 --> 00:08:10.610 align:start position:0%
normal jdk distribution that you have
there<00:08:08.740><c> are</c><00:08:08.860><c> all</c><00:08:09.009><c> your</c><00:08:09.250><c> normal</c><00:08:09.849><c> Java</c><00:08:10.060><c> commands</c>

00:08:10.610 --> 00:08:10.620 align:start position:0%
there are all your normal Java commands
 

00:08:10.620 --> 00:08:13.290 align:start position:0%
there are all your normal Java commands
there<00:08:11.620><c> is</c><00:08:11.650><c> Java</c><00:08:12.189><c> right</c><00:08:12.699><c> there</c><00:08:12.879><c> in</c><00:08:12.969><c> the</c><00:08:13.060><c> corner</c>

00:08:13.290 --> 00:08:13.300 align:start position:0%
there is Java right there in the corner
 

00:08:13.300 --> 00:08:17.640 align:start position:0%
there is Java right there in the corner
Java<00:08:13.839><c> C</c><00:08:14.110><c> Java</c><00:08:14.800><c> T</c><00:08:15.099><c> and</c><00:08:15.339><c> so</c><00:08:15.819><c> on</c><00:08:16.080><c> so</c><00:08:17.080><c> you</c><00:08:17.199><c> can</c><00:08:17.379><c> use</c>

00:08:17.640 --> 00:08:17.650 align:start position:0%
Java C Java T and so on so you can use
 

00:08:17.650 --> 00:08:20.700 align:start position:0%
Java C Java T and so on so you can use
it<00:08:17.680><c> as</c><00:08:17.949><c> your</c><00:08:18.550><c> just</c><00:08:19.300><c> Java</c><00:08:19.629><c> Runtime</c><00:08:20.050><c> so</c><00:08:20.319><c> you</c><00:08:20.379><c> can</c>

00:08:20.700 --> 00:08:20.710 align:start position:0%
it as your just Java Runtime so you can
 

00:08:20.710 --> 00:08:23.640 align:start position:0%
it as your just Java Runtime so you can
download<00:08:20.919><c> it</c><00:08:21.219><c> unzip</c><00:08:21.879><c> it</c><00:08:22.020><c> change</c><00:08:23.020><c> your</c><00:08:23.199><c> path</c><00:08:23.349><c> to</c>

00:08:23.640 --> 00:08:23.650 align:start position:0%
download it unzip it change your path to
 

00:08:23.650 --> 00:08:26.550 align:start position:0%
download it unzip it change your path to
this<00:08:23.830><c> and</c><00:08:24.189><c> and</c><00:08:25.060><c> and</c><00:08:25.419><c> see</c><00:08:25.839><c> whether</c><00:08:26.080><c> that</c><00:08:26.319><c> brings</c>

00:08:26.550 --> 00:08:26.560 align:start position:0%
this and and and see whether that brings
 

00:08:26.560 --> 00:08:28.529 align:start position:0%
this and and and see whether that brings
you<00:08:26.710><c> any</c><00:08:26.860><c> performance</c><00:08:27.370><c> benefits</c><00:08:27.759><c> you</c><00:08:28.419><c> can</c>

00:08:28.529 --> 00:08:28.539 align:start position:0%
you any performance benefits you can
 

00:08:28.539 --> 00:08:30.420 align:start position:0%
you any performance benefits you can
also<00:08:28.719><c> notice</c><00:08:29.020><c> that</c><00:08:29.469><c> there</c><00:08:29.680><c> are</c><00:08:29.770><c> more</c><00:08:30.009><c> commands</c>

00:08:30.420 --> 00:08:30.430 align:start position:0%
also notice that there are more commands
 

00:08:30.430 --> 00:08:32.069 align:start position:0%
also notice that there are more commands
that<00:08:30.610><c> you</c><00:08:30.759><c> typically</c><00:08:31.210><c> don't</c><00:08:31.479><c> find</c><00:08:31.779><c> in</c><00:08:31.990><c> the</c>

00:08:32.069 --> 00:08:32.079 align:start position:0%
that you typically don't find in the
 

00:08:32.079 --> 00:08:34.920 align:start position:0%
that you typically don't find in the
Java<00:08:32.289><c> distribution</c><00:08:33.329><c> for</c><00:08:34.329><c> example</c><00:08:34.360><c> the</c><00:08:34.750><c> node</c>

00:08:34.920 --> 00:08:34.930 align:start position:0%
Java distribution for example the node
 

00:08:34.930 --> 00:08:39.019 align:start position:0%
Java distribution for example the node
command<00:08:35.320><c> or</c><00:08:36.219><c> for</c><00:08:36.640><c> example</c><00:08:37.120><c> the</c><00:08:37.269><c> ruby</c><00:08:37.930><c> or</c><00:08:38.140><c> are</c>

00:08:39.019 --> 00:08:39.029 align:start position:0%
command or for example the ruby or are
 

00:08:39.029 --> 00:08:42.839 align:start position:0%
command or for example the ruby or are
those<00:08:40.029><c> who</c><00:08:40.240><c> are</c><00:08:40.300><c> the</c><00:08:40.539><c> launchers</c><00:08:41.199><c> for</c><00:08:41.849><c> the</c>

00:08:42.839 --> 00:08:42.849 align:start position:0%
those who are the launchers for the
 

00:08:42.849 --> 00:08:45.090 align:start position:0%
those who are the launchers for the
ground<00:08:43.089><c> VM</c><00:08:43.240><c> to</c><00:08:43.599><c> run</c><00:08:43.870><c> and</c><00:08:44.140><c> start</c><00:08:44.560><c> executing</c>

00:08:45.090 --> 00:08:45.100 align:start position:0%
ground VM to run and start executing
 

00:08:45.100 --> 00:08:46.680 align:start position:0%
ground VM to run and start executing
your<00:08:45.370><c> programs</c><00:08:45.760><c> in</c><00:08:45.880><c> other</c><00:08:46.000><c> languages</c><00:08:46.420><c> you</c>

00:08:46.680 --> 00:08:46.690 align:start position:0%
your programs in other languages you
 

00:08:46.690 --> 00:08:48.800 align:start position:0%
your programs in other languages you
don't<00:08:47.410><c> necessarily</c><00:08:47.620><c> need</c><00:08:48.310><c> to</c>

00:08:48.800 --> 00:08:48.810 align:start position:0%
don't necessarily need to
 

00:08:48.810 --> 00:08:50.810 align:start position:0%
don't necessarily need to
mix<00:08:48.990><c> all</c><00:08:49.170><c> the</c><00:08:49.260><c> languages</c><00:08:49.800><c> inside</c><00:08:50.250><c> a</c><00:08:50.279><c> single</c>

00:08:50.810 --> 00:08:50.820 align:start position:0%
mix all the languages inside a single
 

00:08:50.820 --> 00:08:53.420 align:start position:0%
mix all the languages inside a single
process<00:08:51.540><c> you</c><00:08:52.380><c> can</c><00:08:52.560><c> just</c><00:08:52.860><c> execute</c><00:08:53.190><c> them</c>

00:08:53.420 --> 00:08:53.430 align:start position:0%
process you can just execute them
 

00:08:53.430 --> 00:08:55.100 align:start position:0%
process you can just execute them
normally<00:08:53.790><c> so</c><00:08:54.000><c> we</c><00:08:54.120><c> if</c><00:08:54.450><c> you</c><00:08:54.600><c> have</c><00:08:54.750><c> some</c><00:08:54.930><c> code</c>

00:08:55.100 --> 00:08:55.110 align:start position:0%
normally so we if you have some code
 

00:08:55.110 --> 00:08:57.440 align:start position:0%
normally so we if you have some code
written<00:08:55.440><c> in</c><00:08:55.710><c> Ruby</c><00:08:55.980><c> you</c><00:08:56.580><c> just</c><00:08:56.790><c> use</c><00:08:56.970><c> that</c><00:08:57.120><c> Ruby</c>

00:08:57.440 --> 00:08:57.450 align:start position:0%
written in Ruby you just use that Ruby
 

00:08:57.450 --> 00:09:02.230 align:start position:0%
written in Ruby you just use that Ruby
and<00:08:57.660><c> it's</c><00:08:58.080><c> gonna</c><00:08:58.260><c> work</c><00:09:00.050><c> hopefully</c><00:09:01.050><c> we'll</c><00:09:01.890><c> see</c>

00:09:02.230 --> 00:09:02.240 align:start position:0%
and it's gonna work hopefully we'll see
 

00:09:02.240 --> 00:09:04.700 align:start position:0%
and it's gonna work hopefully we'll see
right<00:09:03.240><c> so</c><00:09:03.690><c> this</c><00:09:03.990><c> is</c><00:09:04.140><c> what</c><00:09:04.290><c> you</c><00:09:04.380><c> get</c>

00:09:04.700 --> 00:09:04.710 align:start position:0%
right so this is what you get
 

00:09:04.710 --> 00:09:06.730 align:start position:0%
right so this is what you get
how<00:09:04.920><c> do</c><00:09:04.980><c> you</c><00:09:05.160><c> get</c><00:09:05.310><c> that</c><00:09:05.460><c> it's</c><00:09:05.880><c> fairly</c><00:09:06.060><c> simple</c>

00:09:06.730 --> 00:09:06.740 align:start position:0%
how do you get that it's fairly simple
 

00:09:06.740 --> 00:09:09.500 align:start position:0%
how do you get that it's fairly simple
what<00:09:07.740><c> would</c><00:09:07.980><c> first</c><00:09:08.730><c> we</c><00:09:08.970><c> start</c><00:09:09.210><c> with</c><00:09:09.270><c> the</c>

00:09:09.500 --> 00:09:09.510 align:start position:0%
what would first we start with the
 

00:09:09.510 --> 00:09:11.420 align:start position:0%
what would first we start with the
architecture<00:09:10.140><c> what</c><00:09:10.710><c> happens</c><00:09:11.130><c> when</c><00:09:11.339><c> you</c>

00:09:11.420 --> 00:09:11.430 align:start position:0%
architecture what happens when you
 

00:09:11.430 --> 00:09:16.100 align:start position:0%
architecture what happens when you
execute<00:09:11.790><c> our</c><00:09:12.210><c> Java</c><00:09:12.750><c> command</c><00:09:14.779><c> we</c><00:09:15.779><c> start</c><00:09:16.020><c> the</c>

00:09:16.100 --> 00:09:16.110 align:start position:0%
execute our Java command we start the
 

00:09:16.110 --> 00:09:18.380 align:start position:0%
execute our Java command we start the
normal<00:09:16.380><c> Jamie</c><00:09:16.500><c> own</c><00:09:16.650><c> process</c><00:09:17.040><c> and</c><00:09:17.190><c> we</c><00:09:17.730><c> built</c><00:09:18.150><c> on</c>

00:09:18.380 --> 00:09:18.390 align:start position:0%
normal Jamie own process and we built on
 

00:09:18.390 --> 00:09:22.460 align:start position:0%
normal Jamie own process and we built on
the<00:09:18.690><c> Java</c><00:09:19.260><c> hotspot</c><00:09:19.470><c> VM</c><00:09:20.810><c> and</c><00:09:21.810><c> this</c><00:09:22.170><c> is</c><00:09:22.290><c> a</c><00:09:22.320><c> normal</c>

00:09:22.460 --> 00:09:22.470 align:start position:0%
the Java hotspot VM and this is a normal
 

00:09:22.470 --> 00:09:24.890 align:start position:0%
the Java hotspot VM and this is a normal
gene<00:09:22.710><c> ium</c><00:09:22.890><c> and</c><00:09:23.040><c> what</c><00:09:23.550><c> we</c><00:09:23.700><c> did</c><00:09:23.910><c> we</c><00:09:24.120><c> replace</c><00:09:24.570><c> the</c>

00:09:24.890 --> 00:09:24.900 align:start position:0%
gene ium and what we did we replace the
 

00:09:24.900 --> 00:09:28.040 align:start position:0%
gene ium and what we did we replace the
top<00:09:25.620><c> tier</c><00:09:26.010><c> just-in-time</c><00:09:26.670><c> compiler</c><00:09:27.270><c> with</c><00:09:27.900><c> the</c>

00:09:28.040 --> 00:09:28.050 align:start position:0%
top tier just-in-time compiler with the
 

00:09:28.050 --> 00:09:32.060 align:start position:0%
top tier just-in-time compiler with the
ground<00:09:28.260><c> vm</c><00:09:28.500><c> compiler</c><00:09:29.540><c> this</c><00:09:30.540><c> is</c><00:09:30.750><c> a</c><00:09:31.529><c> compiler</c>

00:09:32.060 --> 00:09:32.070 align:start position:0%
ground vm compiler this is a compiler
 

00:09:32.070 --> 00:09:34.250 align:start position:0%
ground vm compiler this is a compiler
written<00:09:32.250><c> in</c><00:09:32.490><c> Java</c><00:09:32.730><c> and</c><00:09:32.940><c> it</c><00:09:33.270><c> uses</c><00:09:33.600><c> the</c><00:09:33.720><c> JVM</c><00:09:34.050><c> shy</c>

00:09:34.250 --> 00:09:34.260 align:start position:0%
written in Java and it uses the JVM shy
 

00:09:34.260 --> 00:09:38.000 align:start position:0%
written in Java and it uses the JVM shy
interface<00:09:34.890><c> to</c><00:09:35.820><c> integrate</c><00:09:36.480><c> with</c><00:09:36.960><c> the</c><00:09:37.200><c> Virtual</c>

00:09:38.000 --> 00:09:38.010 align:start position:0%
interface to integrate with the Virtual
 

00:09:38.010 --> 00:09:40.160 align:start position:0%
interface to integrate with the Virtual
Machine<00:09:38.279><c> JVM</c><00:09:38.510><c> Shina</c><00:09:39.510><c> interface</c><00:09:39.900><c> if</c><00:09:40.050><c> you</c>

00:09:40.160 --> 00:09:40.170 align:start position:0%
Machine JVM Shina interface if you
 

00:09:40.170 --> 00:09:42.050 align:start position:0%
Machine JVM Shina interface if you
didn't<00:09:40.380><c> know</c><00:09:40.470><c> is</c><00:09:40.680><c> the</c><00:09:40.950><c> java</c><00:09:41.670><c> virtual</c><00:09:41.880><c> machine</c>

00:09:42.050 --> 00:09:42.060 align:start position:0%
didn't know is the java virtual machine
 

00:09:42.060 --> 00:09:45.710 align:start position:0%
didn't know is the java virtual machine
compiler<00:09:42.720><c> in</c><00:09:42.960><c> interface</c><00:09:43.560><c> da</c><00:09:44.370><c> and</c><00:09:44.730><c> this</c><00:09:45.480><c> is</c><00:09:45.600><c> the</c>

00:09:45.710 --> 00:09:45.720 align:start position:0%
compiler in interface da and this is the
 

00:09:45.720 --> 00:09:47.240 align:start position:0%
compiler in interface da and this is the
interface<00:09:46.050><c> that</c><00:09:46.110><c> you</c><00:09:46.320><c> implement</c><00:09:46.830><c> when</c><00:09:47.160><c> you</c>

00:09:47.240 --> 00:09:47.250 align:start position:0%
interface that you implement when you
 

00:09:47.250 --> 00:09:49.550 align:start position:0%
interface that you implement when you
want<00:09:47.460><c> to</c><00:09:47.490><c> supply</c><00:09:47.790><c> third-party</c><00:09:48.420><c> compiler</c><00:09:48.779><c> for</c>

00:09:49.550 --> 00:09:49.560 align:start position:0%
want to supply third-party compiler for
 

00:09:49.560 --> 00:09:55.070 align:start position:0%
want to supply third-party compiler for
JVM<00:09:51.020><c> it</c><00:09:52.020><c> means</c><00:09:52.290><c> that</c><00:09:52.730><c> it</c><00:09:53.730><c> was</c><00:09:53.880><c> added</c><00:09:54.150><c> to</c><00:09:54.300><c> Java</c><00:09:54.570><c> 9</c>

00:09:55.070 --> 00:09:55.080 align:start position:0%
JVM it means that it was added to Java 9
 

00:09:55.080 --> 00:09:59.420 align:start position:0%
JVM it means that it was added to Java 9
anything<00:09:55.530><c> through</c><00:09:56.100><c> a</c><00:09:56.130><c> Jap</c><00:09:57.050><c> 243</c><00:09:58.050><c> and</c><00:09:58.650><c> it's</c><00:09:59.160><c> it's</c>

00:09:59.420 --> 00:09:59.430 align:start position:0%
anything through a Jap 243 and it's it's
 

00:09:59.430 --> 00:10:03.410 align:start position:0%
anything through a Jap 243 and it's it's
in<00:09:59.610><c> the</c><00:09:59.790><c> open</c><00:10:00.270><c> JDK</c><00:10:00.980><c> and</c><00:10:01.980><c> and</c><00:10:02.790><c> it's</c><00:10:03.030><c> usable</c>

00:10:03.410 --> 00:10:03.420 align:start position:0%
in the open JDK and and it's usable
 

00:10:03.420 --> 00:10:06.590 align:start position:0%
in the open JDK and and it's usable
there<00:10:03.630><c> so</c><00:10:04.410><c> through</c><00:10:04.710><c> that</c><00:10:04.740><c> we</c><00:10:05.190><c> integrate</c><00:10:05.610><c> draw</c>

00:10:06.590 --> 00:10:06.600 align:start position:0%
there so through that we integrate draw
 

00:10:06.600 --> 00:10:09.650 align:start position:0%
there so through that we integrate draw
the<00:10:06.660><c> EM</c><00:10:06.870><c> compiler</c><00:10:07.290><c> with</c><00:10:08.190><c> the</c><00:10:08.339><c> JVM</c><00:10:08.730><c> with</c><00:10:09.480><c> those</c>

00:10:09.650 --> 00:10:09.660 align:start position:0%
the EM compiler with the JVM with those
 

00:10:09.660 --> 00:10:12.950 align:start position:0%
the EM compiler with the JVM with those
two<00:10:09.900><c> layers</c><00:10:10.080><c> of</c><00:10:10.730><c> of</c><00:10:11.730><c> the</c><00:10:12.000><c> infrastructure</c><00:10:12.570><c> for</c>

00:10:12.950 --> 00:10:12.960 align:start position:0%
two layers of of the infrastructure for
 

00:10:12.960 --> 00:10:15.320 align:start position:0%
two layers of of the infrastructure for
the<00:10:13.050><c> runtime</c><00:10:13.350><c> we</c><00:10:13.680><c> can</c><00:10:13.830><c> run</c><00:10:14.120><c> normal</c><00:10:15.120><c> Java</c>

00:10:15.320 --> 00:10:15.330 align:start position:0%
the runtime we can run normal Java
 

00:10:15.330 --> 00:10:18.320 align:start position:0%
the runtime we can run normal Java
programs<00:10:15.810><c> normally</c><00:10:16.530><c> right</c><00:10:17.220><c> the</c><00:10:17.790><c> JVM</c><00:10:18.150><c> will</c>

00:10:18.320 --> 00:10:18.330 align:start position:0%
programs normally right the JVM will
 

00:10:18.330 --> 00:10:21.079 align:start position:0%
programs normally right the JVM will
find<00:10:18.660><c> your</c><00:10:18.839><c> classes</c><00:10:19.050><c> it</c><00:10:19.530><c> will</c><00:10:19.880><c> look</c><00:10:20.880><c> at</c><00:10:21.000><c> the</c>

00:10:21.079 --> 00:10:21.089 align:start position:0%
find your classes it will look at the
 

00:10:21.089 --> 00:10:23.150 align:start position:0%
find your classes it will look at the
byte<00:10:21.240><c> code</c><00:10:21.270><c> it</c><00:10:21.630><c> will</c><00:10:21.810><c> verify</c><00:10:22.080><c> it</c><00:10:22.350><c> as</c><00:10:22.620><c> the</c><00:10:22.890><c> JVM</c>

00:10:23.150 --> 00:10:23.160 align:start position:0%
byte code it will verify it as the JVM
 

00:10:23.160 --> 00:10:24.980 align:start position:0%
byte code it will verify it as the JVM
normally<00:10:23.490><c> does</c><00:10:23.670><c> it</c><00:10:24.060><c> will</c><00:10:24.300><c> load</c><00:10:24.510><c> started</c>

00:10:24.980 --> 00:10:24.990 align:start position:0%
normally does it will load started
 

00:10:24.990 --> 00:10:26.840 align:start position:0%
normally does it will load started
tempering<00:10:25.380><c> and</c><00:10:25.530><c> at</c><00:10:26.070><c> some</c><00:10:26.250><c> point</c><00:10:26.430><c> of</c><00:10:26.490><c> time</c><00:10:26.610><c> it</c>

00:10:26.840 --> 00:10:26.850 align:start position:0%
tempering and at some point of time it
 

00:10:26.850 --> 00:10:28.970 align:start position:0%
tempering and at some point of time it
will<00:10:27.030><c> give</c><00:10:27.690><c> the</c><00:10:27.839><c> bytecode</c><00:10:28.050><c> of</c><00:10:28.470><c> the</c>

00:10:28.970 --> 00:10:28.980 align:start position:0%
will give the bytecode of the
 

00:10:28.980 --> 00:10:30.980 align:start position:0%
will give the bytecode of the
application<00:10:29.580><c> to</c><00:10:29.700><c> the</c><00:10:29.820><c> compiler</c><00:10:30.510><c> to</c><00:10:30.810><c> the</c>

00:10:30.980 --> 00:10:30.990 align:start position:0%
application to the compiler to the
 

00:10:30.990 --> 00:10:32.810 align:start position:0%
application to the compiler to the
just-in-time<00:10:31.260><c> compiler</c><00:10:31.740><c> and</c><00:10:31.920><c> say</c><00:10:32.520><c> please</c>

00:10:32.810 --> 00:10:32.820 align:start position:0%
just-in-time compiler and say please
 

00:10:32.820 --> 00:10:34.699 align:start position:0%
just-in-time compiler and say please
optimize<00:10:33.360><c> this</c><00:10:33.510><c> for</c><00:10:33.690><c> me</c><00:10:33.750><c> and</c><00:10:33.930><c> then</c><00:10:34.380><c> it</c><00:10:34.589><c> will</c>

00:10:34.699 --> 00:10:34.709 align:start position:0%
optimize this for me and then it will
 

00:10:34.709 --> 00:10:36.290 align:start position:0%
optimize this for me and then it will
receive<00:10:34.980><c> the</c><00:10:35.100><c> machine</c><00:10:35.339><c> code</c><00:10:35.580><c> and</c><00:10:35.760><c> everything</c>

00:10:36.290 --> 00:10:36.300 align:start position:0%
receive the machine code and everything
 

00:10:36.300 --> 00:10:37.820 align:start position:0%
receive the machine code and everything
is<00:10:36.630><c> going</c><00:10:36.839><c> to</c><00:10:36.870><c> be</c><00:10:36.990><c> splendid</c><00:10:37.260><c> and</c><00:10:37.620><c> our</c>

00:10:37.820 --> 00:10:37.830 align:start position:0%
is going to be splendid and our
 

00:10:37.830 --> 00:10:40.280 align:start position:0%
is going to be splendid and our
application<00:10:38.070><c> will</c><00:10:38.550><c> suddenly</c><00:10:38.760><c> run</c><00:10:39.120><c> faster</c><00:10:39.630><c> so</c>

00:10:40.280 --> 00:10:40.290 align:start position:0%
application will suddenly run faster so
 

00:10:40.290 --> 00:10:43.190 align:start position:0%
application will suddenly run faster so
normally<00:10:40.860><c> normally</c><00:10:41.990><c> there</c><00:10:42.990><c> will</c><00:10:43.050><c> be</c>

00:10:43.190 --> 00:10:43.200 align:start position:0%
normally normally there will be
 

00:10:43.200 --> 00:10:43.790 align:start position:0%
normally normally there will be
different

00:10:43.790 --> 00:10:43.800 align:start position:0%
different
 

00:10:43.800 --> 00:10:45.829 align:start position:0%
different
top<00:10:43.950><c> tier</c><00:10:44.070><c> compiler</c><00:10:44.520><c> if</c><00:10:44.760><c> you</c><00:10:45.180><c> just</c><00:10:45.420><c> download</c>

00:10:45.829 --> 00:10:45.839 align:start position:0%
top tier compiler if you just download
 

00:10:45.839 --> 00:10:47.900 align:start position:0%
top tier compiler if you just download
open<00:10:46.080><c> JDK</c><00:10:46.320><c> for</c><00:10:46.650><c> example</c><00:10:46.980><c> and</c><00:10:47.100><c> you</c><00:10:47.279><c> run</c><00:10:47.459><c> you'll</c>

00:10:47.900 --> 00:10:47.910 align:start position:0%
open JDK for example and you run you'll
 

00:10:47.910 --> 00:10:51.500 align:start position:0%
open JDK for example and you run you'll
have<00:10:48.150><c> C</c><00:10:48.360><c> 2</c><00:10:48.600><c> as</c><00:10:48.810><c> the</c><00:10:49.700><c> most</c><00:10:50.700><c> optimizing</c>

00:10:51.500 --> 00:10:51.510 align:start position:0%
have C 2 as the most optimizing
 

00:10:51.510 --> 00:10:55.300 align:start position:0%
have C 2 as the most optimizing
just-in-time<00:10:52.350><c> compiler</c><00:10:53.480><c> integral</c><00:10:54.480><c> VM</c>

00:10:55.300 --> 00:10:55.310 align:start position:0%
just-in-time compiler integral VM
 

00:10:55.310 --> 00:10:58.730 align:start position:0%
just-in-time compiler integral VM
process<00:10:56.310><c> the</c><00:10:57.150><c> top</c><00:10:57.420><c> tier</c><00:10:57.690><c> compiler</c><00:10:58.500><c> is</c>

00:10:58.730 --> 00:10:58.740 align:start position:0%
process the top tier compiler is
 

00:10:58.740 --> 00:11:01.760 align:start position:0%
process the top tier compiler is
replaced<00:10:59.160><c> by</c><00:10:59.220><c> hours</c><00:11:00.230><c> CT</c><00:11:01.230><c> is</c><00:11:01.350><c> still</c><00:11:01.589><c> there</c>

00:11:01.760 --> 00:11:01.770 align:start position:0%
replaced by hours CT is still there
 

00:11:01.770 --> 00:11:02.480 align:start position:0%
replaced by hours CT is still there
because

00:11:02.480 --> 00:11:02.490 align:start position:0%
because
 

00:11:02.490 --> 00:11:05.180 align:start position:0%
because
normal<00:11:02.940><c> JVM</c><00:11:03.330><c> so</c><00:11:03.660><c> you</c><00:11:04.050><c> can</c><00:11:04.230><c> disable</c><00:11:04.560><c> the</c>

00:11:05.180 --> 00:11:05.190 align:start position:0%
normal JVM so you can disable the
 

00:11:05.190 --> 00:11:07.639 align:start position:0%
normal JVM so you can disable the
guavian<00:11:05.520><c> compiler</c><00:11:05.970><c> and</c><00:11:06.209><c> run</c><00:11:06.540><c> it</c><00:11:06.660><c> normally</c><00:11:07.020><c> so</c>

00:11:07.639 --> 00:11:07.649 align:start position:0%
guavian compiler and run it normally so
 

00:11:07.649 --> 00:11:10.370 align:start position:0%
guavian compiler and run it normally so
we<00:11:07.770><c> just</c><00:11:07.950><c> supply</c><00:11:08.399><c> additional</c><00:11:08.820><c> things</c><00:11:09.300><c> to</c><00:11:09.899><c> the</c>

00:11:10.370 --> 00:11:10.380 align:start position:0%
we just supply additional things to the
 

00:11:10.380 --> 00:11:13.370 align:start position:0%
we just supply additional things to the
Java<00:11:11.070><c> distribution</c><00:11:11.700><c> and</c><00:11:11.940><c> that</c><00:11:12.930><c> doesn't</c>

00:11:13.370 --> 00:11:13.380 align:start position:0%
Java distribution and that doesn't
 

00:11:13.380 --> 00:11:15.110 align:start position:0%
Java distribution and that doesn't
enough<00:11:13.560><c> and</c><00:11:13.800><c> that</c><00:11:13.980><c> is</c><00:11:14.100><c> fine</c><00:11:14.370><c> if</c><00:11:14.580><c> you</c><00:11:14.760><c> want</c><00:11:14.970><c> to</c>

00:11:15.110 --> 00:11:15.120 align:start position:0%
enough and that is fine if you want to
 

00:11:15.120 --> 00:11:18.350 align:start position:0%
enough and that is fine if you want to
run<00:11:15.270><c> just</c><00:11:15.779><c> the</c><00:11:16.140><c> jvm</c><00:11:16.500><c> languages</c><00:11:16.890><c> which</c><00:11:17.640><c> most</c>

00:11:18.350 --> 00:11:18.360 align:start position:0%
run just the jvm languages which most
 

00:11:18.360 --> 00:11:20.210 align:start position:0%
run just the jvm languages which most
probably<00:11:18.540><c> is</c><00:11:18.990><c> what</c><00:11:19.410><c> you</c><00:11:19.620><c> are</c><00:11:19.740><c> the</c><00:11:20.070><c> most</c>

00:11:20.210 --> 00:11:20.220 align:start position:0%
probably is what you are the most
 

00:11:20.220 --> 00:11:21.980 align:start position:0%
probably is what you are the most
interesting<00:11:20.730><c> in</c><00:11:20.880><c> how</c><00:11:21.270><c> many</c><00:11:21.420><c> of</c><00:11:21.510><c> you</c><00:11:21.630><c> write</c>

00:11:21.980 --> 00:11:21.990 align:start position:0%
interesting in how many of you write
 

00:11:21.990 --> 00:11:25.960 align:start position:0%
interesting in how many of you write
Java<00:11:22.320><c> like</c><00:11:22.860><c> daily</c><00:11:23.839><c> except</c><00:11:24.839><c> weekends</c>

00:11:25.960 --> 00:11:25.970 align:start position:0%
Java like daily except weekends
 

00:11:25.970 --> 00:11:28.250 align:start position:0%
Java like daily except weekends
how<00:11:26.970><c> many</c><00:11:27.149><c> of</c><00:11:27.209><c> you</c><00:11:27.330><c> use</c><00:11:27.630><c> other</c><00:11:27.870><c> genome</c>

00:11:28.250 --> 00:11:28.260 align:start position:0%
how many of you use other genome
 

00:11:28.260 --> 00:11:28.790 align:start position:0%
how many of you use other genome
languages

00:11:28.790 --> 00:11:28.800 align:start position:0%
languages
 

00:11:28.800 --> 00:11:31.460 align:start position:0%
languages
Scala<00:11:29.250><c> clapping</c><00:11:29.839><c> cotton</c><00:11:30.839><c> on</c><00:11:30.930><c> here</c><00:11:31.170><c> is</c><00:11:31.260><c> pretty</c>

00:11:31.460 --> 00:11:31.470 align:start position:0%
Scala clapping cotton on here is pretty
 

00:11:31.470 --> 00:11:35.690 align:start position:0%
Scala clapping cotton on here is pretty
good<00:11:32.390><c> excellent</c><00:11:33.390><c> quite</c><00:11:33.570><c> quite</c><00:11:33.930><c> a</c><00:11:33.959><c> bit</c><00:11:34.700><c> how</c>

00:11:35.690 --> 00:11:35.700 align:start position:0%
good excellent quite quite a bit how
 

00:11:35.700 --> 00:11:39.340 align:start position:0%
good excellent quite quite a bit how
many<00:11:35.850><c> of</c><00:11:35.940><c> you</c><00:11:36.089><c> run</c><00:11:36.300><c> say</c><00:11:36.990><c> no</c><00:11:37.440><c> js'</c><00:11:37.709><c> applications</c>

00:11:39.340 --> 00:11:39.350 align:start position:0%
many of you run say no js' applications
 

00:11:39.350 --> 00:11:42.710 align:start position:0%
many of you run say no js' applications
surprisingly<00:11:40.350><c> not</c><00:11:40.740><c> very</c><00:11:40.980><c> few</c><00:11:41.160><c> excellent</c><00:11:42.089><c> so</c>

00:11:42.710 --> 00:11:42.720 align:start position:0%
surprisingly not very few excellent so
 

00:11:42.720 --> 00:11:45.889 align:start position:0%
surprisingly not very few excellent so
if<00:11:43.560><c> you</c><00:11:44.070><c> run</c><00:11:44.250><c> just</c><00:11:44.279><c> JD</c><00:11:44.940><c> on</c><00:11:45.060><c> languages</c><00:11:45.420><c> this</c><00:11:45.720><c> is</c>

00:11:45.889 --> 00:11:45.899 align:start position:0%
if you run just JD on languages this is
 

00:11:45.899 --> 00:11:48.260 align:start position:0%
if you run just JD on languages this is
enough<00:11:46.170><c> but</c><00:11:47.160><c> if</c><00:11:47.310><c> you</c><00:11:47.399><c> want</c><00:11:47.580><c> support</c><00:11:47.970><c> for</c><00:11:48.120><c> other</c>

00:11:48.260 --> 00:11:48.270 align:start position:0%
enough but if you want support for other
 

00:11:48.270 --> 00:11:51.650 align:start position:0%
enough but if you want support for other
languages<00:11:48.779><c> this</c><00:11:49.380><c> is</c><00:11:49.440><c> typically</c><00:11:50.399><c> not</c><00:11:51.270><c> enough</c>

00:11:51.650 --> 00:11:51.660 align:start position:0%
languages this is typically not enough
 

00:11:51.660 --> 00:11:53.630 align:start position:0%
languages this is typically not enough
you<00:11:51.899><c> want</c><00:11:52.050><c> additional</c><00:11:52.740><c> support</c><00:11:53.279><c> by</c><00:11:53.580><c> the</c>

00:11:53.630 --> 00:11:53.640 align:start position:0%
you want additional support by the
 

00:11:53.640 --> 00:11:55.910 align:start position:0%
you want additional support by the
runtime<00:11:54.089><c> for</c><00:11:54.480><c> the</c><00:11:54.600><c> languages</c><00:11:55.020><c> one</c><00:11:55.620><c> approach</c>

00:11:55.910 --> 00:11:55.920 align:start position:0%
runtime for the languages one approach
 

00:11:55.920 --> 00:11:58.940 align:start position:0%
runtime for the languages one approach
that<00:11:56.130><c> typically</c><00:11:56.550><c> people</c><00:11:56.700><c> take</c><00:11:57.060><c> is</c><00:11:57.300><c> to</c><00:11:57.770><c> make</c><00:11:58.770><c> an</c>

00:11:58.940 --> 00:11:58.950 align:start position:0%
that typically people take is to make an
 

00:11:58.950 --> 00:12:00.829 align:start position:0%
that typically people take is to make an
optimizing<00:11:59.490><c> compiler</c><00:11:59.640><c> themselves</c><00:12:00.570><c> to</c>

00:12:00.829 --> 00:12:00.839 align:start position:0%
optimizing compiler themselves to
 

00:12:00.839 --> 00:12:03.949 align:start position:0%
optimizing compiler themselves to
translate<00:12:01.520><c> the</c><00:12:02.520><c> structures</c><00:12:03.000><c> and</c><00:12:03.270><c> code</c><00:12:03.600><c> in</c><00:12:03.899><c> a</c>

00:12:03.949 --> 00:12:03.959 align:start position:0%
translate the structures and code in a
 

00:12:03.959 --> 00:12:06.079 align:start position:0%
translate the structures and code in a
high<00:12:04.320><c> level</c><00:12:04.620><c> dynamic</c><00:12:05.130><c> language</c><00:12:05.430><c> say</c><00:12:05.850><c> Java</c>

00:12:06.079 --> 00:12:06.089 align:start position:0%
high level dynamic language say Java
 

00:12:06.089 --> 00:12:08.569 align:start position:0%
high level dynamic language say Java
Script<00:12:06.390><c> to</c><00:12:06.899><c> the</c><00:12:07.020><c> underlying</c><00:12:07.579><c> intermediate</c>

00:12:08.569 --> 00:12:08.579 align:start position:0%
Script to the underlying intermediate
 

00:12:08.579 --> 00:12:11.480 align:start position:0%
Script to the underlying intermediate
language<00:12:08.670><c> say</c><00:12:09.209><c> the</c><00:12:09.779><c> JVM</c><00:12:10.170><c> bytecode</c><00:12:10.490><c> they</c>

00:12:11.480 --> 00:12:11.490 align:start position:0%
language say the JVM bytecode they
 

00:12:11.490 --> 00:12:13.579 align:start position:0%
language say the JVM bytecode they
manually<00:12:12.180><c> create</c><00:12:12.570><c> this</c><00:12:12.750><c> mapping</c><00:12:13.200><c> the</c>

00:12:13.579 --> 00:12:13.589 align:start position:0%
manually create this mapping the
 

00:12:13.589 --> 00:12:15.620 align:start position:0%
manually create this mapping the
compiler<00:12:14.010><c> and</c><00:12:14.279><c> then</c><00:12:14.730><c> they</c><00:12:14.850><c> run</c><00:12:15.120><c> bytecode</c>

00:12:15.620 --> 00:12:15.630 align:start position:0%
compiler and then they run bytecode
 

00:12:15.630 --> 00:12:18.710 align:start position:0%
compiler and then they run bytecode
normally<00:12:16.200><c> through</c><00:12:16.500><c> this</c><00:12:16.709><c> this</c><00:12:17.339><c> is</c><00:12:17.520><c> how</c><00:12:17.720><c> I</c>

00:12:18.710 --> 00:12:18.720 align:start position:0%
normally through this this is how I
 

00:12:18.720 --> 00:12:21.800 align:start position:0%
normally through this this is how I
think<00:12:19.320><c> masteren</c><00:12:19.800><c> worked</c><00:12:20.040><c> this</c><00:12:20.670><c> is</c><00:12:20.850><c> how</c><00:12:21.089><c> Jason</c>

00:12:21.800 --> 00:12:21.810 align:start position:0%
think masteren worked this is how Jason
 

00:12:21.810 --> 00:12:24.500 align:start position:0%
think masteren worked this is how Jason
worked<00:12:22.260><c> the</c><00:12:22.860><c> Python</c><00:12:23.760><c> implementation</c><00:12:23.880><c> for</c><00:12:24.420><c> the</c>

00:12:24.500 --> 00:12:24.510 align:start position:0%
worked the Python implementation for the
 

00:12:24.510 --> 00:12:27.560 align:start position:0%
worked the Python implementation for the
JVM<00:12:24.839><c> and</c><00:12:25.050><c> one</c><00:12:26.040><c> thing</c><00:12:26.640><c> that</c><00:12:26.670><c> those</c>

00:12:27.560 --> 00:12:27.570 align:start position:0%
JVM and one thing that those
 

00:12:27.570 --> 00:12:29.329 align:start position:0%
JVM and one thing that those
implementations<00:12:28.200><c> have</c><00:12:28.350><c> in</c><00:12:28.470><c> common</c><00:12:28.649><c> is</c><00:12:28.920><c> that</c>

00:12:29.329 --> 00:12:29.339 align:start position:0%
implementations have in common is that
 

00:12:29.339 --> 00:12:31.970 align:start position:0%
implementations have in common is that
the<00:12:29.550><c> maintenance</c><00:12:30.089><c> burden</c><00:12:30.300><c> is</c><00:12:30.660><c> quite</c><00:12:31.020><c> high</c><00:12:31.290><c> you</c>

00:12:31.970 --> 00:12:31.980 align:start position:0%
the maintenance burden is quite high you
 

00:12:31.980 --> 00:12:34.940 align:start position:0%
the maintenance burden is quite high you
have<00:12:32.250><c> to</c><00:12:32.370><c> manually</c><00:12:32.820><c> translate</c><00:12:33.950><c> high-level</c>

00:12:34.940 --> 00:12:34.950 align:start position:0%
have to manually translate high-level
 

00:12:34.950 --> 00:12:37.569 align:start position:0%
have to manually translate high-level
language<00:12:35.310><c> into</c><00:12:35.940><c> a</c><00:12:36.240><c> fairly</c><00:12:36.630><c> constrained</c>

00:12:37.569 --> 00:12:37.579 align:start position:0%
language into a fairly constrained
 

00:12:37.579 --> 00:12:39.920 align:start position:0%
language into a fairly constrained
low-level<00:12:38.579><c> vocabulary</c><00:12:39.209><c> of</c><00:12:39.240><c> the</c><00:12:39.420><c> JVM</c><00:12:39.899><c> bytecode</c>

00:12:39.920 --> 00:12:39.930 align:start position:0%
low-level vocabulary of the JVM bytecode
 

00:12:39.930 --> 00:12:43.130 align:start position:0%
low-level vocabulary of the JVM bytecode
it<00:12:40.920><c> is</c><00:12:41.070><c> not</c><00:12:41.220><c> an</c><00:12:41.370><c> easy</c><00:12:41.520><c> job</c><00:12:41.640><c> and</c><00:12:42.149><c> when</c><00:12:43.020><c> the</c>

00:12:43.130 --> 00:12:43.140 align:start position:0%
it is not an easy job and when the
 

00:12:43.140 --> 00:12:45.560 align:start position:0%
it is not an easy job and when the
language<00:12:43.290><c> evolves</c><00:12:43.920><c> it's</c><00:12:44.550><c> even</c><00:12:45.149><c> harder</c><00:12:45.540><c> to</c>

00:12:45.560 --> 00:12:45.570 align:start position:0%
language evolves it's even harder to
 

00:12:45.570 --> 00:12:46.940 align:start position:0%
language evolves it's even harder to
maintain<00:12:45.930><c> this</c><00:12:46.320><c> comfortability</c><00:12:46.740><c> with</c>

00:12:46.940 --> 00:12:46.950 align:start position:0%
maintain this comfortability with
 

00:12:46.950 --> 00:12:49.490 align:start position:0%
maintain this comfortability with
language<00:12:47.399><c> so</c><00:12:48.209><c> since</c><00:12:48.690><c> we</c><00:12:48.810><c> wanted</c><00:12:49.110><c> to</c><00:12:49.230><c> support</c>

00:12:49.490 --> 00:12:49.500 align:start position:0%
language so since we wanted to support
 

00:12:49.500 --> 00:12:53.780 align:start position:0%
language so since we wanted to support
all<00:12:49.800><c> the</c><00:12:50.130><c> languages</c><00:12:50.520><c> it</c><00:12:50.940><c> was</c><00:12:51.450><c> clearly</c><00:12:51.750><c> that</c><00:12:52.790><c> we</c>

00:12:53.780 --> 00:12:53.790 align:start position:0%
all the languages it was clearly that we
 

00:12:53.790 --> 00:12:57.230 align:start position:0%
all the languages it was clearly that we
need<00:12:53.940><c> a</c><00:12:53.970><c> different</c><00:12:54.120><c> approach</c><00:12:54.560><c> so</c><00:12:55.560><c> we</c><00:12:56.240><c> created</c>

00:12:57.230 --> 00:12:57.240 align:start position:0%
need a different approach so we created
 

00:12:57.240 --> 00:12:59.449 align:start position:0%
need a different approach so we created
a<00:12:57.420><c> framework</c><00:12:57.800><c> called</c><00:12:58.800><c> today</c><00:12:59.040><c> truffle</c>

00:12:59.449 --> 00:12:59.459 align:start position:0%
a framework called today truffle
 

00:12:59.459 --> 00:13:01.190 align:start position:0%
a framework called today truffle
framework<00:12:59.820><c> it's</c><00:13:00.390><c> a</c><00:13:00.480><c> framework</c><00:13:00.720><c> to</c><00:13:00.899><c> create</c>

00:13:01.190 --> 00:13:01.200 align:start position:0%
framework it's a framework to create
 

00:13:01.200 --> 00:13:04.519 align:start position:0%
framework it's a framework to create
managed<00:13:02.190><c> languages</c><00:13:03.149><c> it's</c><00:13:03.990><c> a</c><00:13:04.079><c> framework</c><00:13:04.320><c> that</c>

00:13:04.519 --> 00:13:04.529 align:start position:0%
managed languages it's a framework that
 

00:13:04.529 --> 00:13:06.740 align:start position:0%
managed languages it's a framework that
offers<00:13:04.829><c> you</c><00:13:04.920><c> an</c><00:13:05.040><c> API</c><00:13:05.370><c> to</c><00:13:05.730><c> describe</c><00:13:06.480><c> the</c>

00:13:06.740 --> 00:13:06.750 align:start position:0%
offers you an API to describe the
 

00:13:06.750 --> 00:13:09.139 align:start position:0%
offers you an API to describe the
semantics<00:13:07.260><c> of</c><00:13:07.380><c> your</c><00:13:07.560><c> language</c><00:13:07.860><c> so</c><00:13:08.520><c> we</c><00:13:08.610><c> need</c><00:13:08.850><c> to</c>

00:13:09.139 --> 00:13:09.149 align:start position:0%
semantics of your language so we need to
 

00:13:09.149 --> 00:13:12.170 align:start position:0%
semantics of your language so we need to
use<00:13:09.180><c> that</c><00:13:09.360><c> API</c><00:13:09.810><c> to</c><00:13:10.370><c> implement</c><00:13:11.370><c> an</c><00:13:11.490><c> interpreter</c>

00:13:12.170 --> 00:13:12.180 align:start position:0%
use that API to implement an interpreter
 

00:13:12.180 --> 00:13:13.540 align:start position:0%
use that API to implement an interpreter
for<00:13:12.600><c> your</c><00:13:12.779><c> programming</c><00:13:13.230><c> language</c>

00:13:13.540 --> 00:13:13.550 align:start position:0%
for your programming language
 

00:13:13.550 --> 00:13:16.080 align:start position:0%
for your programming language
implementing<00:13:14.550><c> interpreters</c>

00:13:16.080 --> 00:13:16.090 align:start position:0%
implementing interpreters
 

00:13:16.090 --> 00:13:18.270 align:start position:0%
implementing interpreters
it's<00:13:16.570><c> fairly</c><00:13:16.840><c> straightforward</c><00:13:17.560><c> process</c>

00:13:18.270 --> 00:13:18.280 align:start position:0%
it's fairly straightforward process
 

00:13:18.280 --> 00:13:20.550 align:start position:0%
it's fairly straightforward process
imagine<00:13:19.060><c> you</c><00:13:19.150><c> have</c><00:13:19.300><c> a</c><00:13:19.330><c> you</c><00:13:19.990><c> have</c><00:13:20.260><c> a</c><00:13:20.290><c> program</c>

00:13:20.550 --> 00:13:20.560 align:start position:0%
imagine you have a you have a program
 

00:13:20.560 --> 00:13:22.560 align:start position:0%
imagine you have a you have a program
you<00:13:20.950><c> parse</c><00:13:21.250><c> that</c><00:13:21.400><c> program</c><00:13:21.850><c> in</c><00:13:22.030><c> the</c><00:13:22.180><c> abstract</c>

00:13:22.560 --> 00:13:22.570 align:start position:0%
you parse that program in the abstract
 

00:13:22.570 --> 00:13:24.960 align:start position:0%
you parse that program in the abstract
syntax<00:13:22.750><c> tree</c><00:13:23.170><c> there</c><00:13:23.560><c> are</c><00:13:23.680><c> nodes</c><00:13:23.890><c> every</c><00:13:24.250><c> node</c>

00:13:24.960 --> 00:13:24.970 align:start position:0%
syntax tree there are nodes every node
 

00:13:24.970 --> 00:13:27.450 align:start position:0%
syntax tree there are nodes every node
specifies<00:13:25.780><c> one</c><00:13:26.080><c> operation</c><00:13:26.500><c> and</c><00:13:26.860><c> you</c><00:13:27.250><c> just</c>

00:13:27.450 --> 00:13:27.460 align:start position:0%
specifies one operation and you just
 

00:13:27.460 --> 00:13:29.160 align:start position:0%
specifies one operation and you just
describe<00:13:27.880><c> the</c><00:13:27.910><c> semantics</c><00:13:28.540><c> of</c><00:13:28.690><c> that</c><00:13:28.810><c> operation</c>

00:13:29.160 --> 00:13:29.170 align:start position:0%
describe the semantics of that operation
 

00:13:29.170 --> 00:13:31.290 align:start position:0%
describe the semantics of that operation
in<00:13:29.530><c> like</c><00:13:30.070><c> in</c><00:13:30.190><c> the</c><00:13:30.310><c> high-level</c><00:13:30.640><c> language</c><00:13:31.060><c> like</c>

00:13:31.290 --> 00:13:31.300 align:start position:0%
in like in the high-level language like
 

00:13:31.300 --> 00:13:34.290 align:start position:0%
in like in the high-level language like
Java<00:13:31.540><c> so</c><00:13:32.260><c> say</c><00:13:32.860><c> a</c><00:13:32.890><c> JavaScript</c><00:13:33.520><c> plus</c><00:13:33.820><c> operation</c>

00:13:34.290 --> 00:13:34.300 align:start position:0%
Java so say a JavaScript plus operation
 

00:13:34.300 --> 00:13:37.410 align:start position:0%
Java so say a JavaScript plus operation
will<00:13:34.630><c> be</c><00:13:34.780><c> left</c><00:13:35.650><c> operand</c><00:13:36.040><c> plus</c><00:13:36.520><c> right</c><00:13:37.060><c> operand</c>

00:13:37.410 --> 00:13:37.420 align:start position:0%
will be left operand plus right operand
 

00:13:37.420 --> 00:13:39.540 align:start position:0%
will be left operand plus right operand
right<00:13:37.930><c> you</c><00:13:38.080><c> don't</c><00:13:38.320><c> have</c><00:13:38.590><c> to</c><00:13:38.770><c> figure</c><00:13:39.040><c> out</c><00:13:39.250><c> how</c>

00:13:39.540 --> 00:13:39.550 align:start position:0%
right you don't have to figure out how
 

00:13:39.550 --> 00:13:42.480 align:start position:0%
right you don't have to figure out how
exactly<00:13:39.580><c> the</c><00:13:40.240><c> conversion</c><00:13:40.990><c> rules</c><00:13:41.230><c> work</c><00:13:41.500><c> you</c>

00:13:42.480 --> 00:13:42.490 align:start position:0%
exactly the conversion rules work you
 

00:13:42.490 --> 00:13:44.310 align:start position:0%
exactly the conversion rules work you
don't<00:13:42.610><c> have</c><00:13:42.760><c> to</c><00:13:42.940><c> map</c><00:13:43.150><c> that</c><00:13:43.360><c> in</c><00:13:43.600><c> the</c><00:13:43.840><c> low-level</c>

00:13:44.310 --> 00:13:44.320 align:start position:0%
don't have to map that in the low-level
 

00:13:44.320 --> 00:13:46.350 align:start position:0%
don't have to map that in the low-level
byte<00:13:44.650><c> code</c><00:13:44.890><c> language</c><00:13:45.040><c> you</c><00:13:45.730><c> use</c><00:13:45.880><c> a</c><00:13:45.910><c> high-level</c>

00:13:46.350 --> 00:13:46.360 align:start position:0%
byte code language you use a high-level
 

00:13:46.360 --> 00:13:49.110 align:start position:0%
byte code language you use a high-level
language<00:13:46.780><c> you</c><00:13:47.140><c> describe</c><00:13:47.650><c> it</c><00:13:47.800><c> you</c><00:13:48.340><c> specify</c><00:13:49.090><c> a</c>

00:13:49.110 --> 00:13:49.120 align:start position:0%
language you describe it you specify a
 

00:13:49.120 --> 00:13:52.050 align:start position:0%
language you describe it you specify a
couple<00:13:49.600><c> of</c><00:13:49.690><c> annotations</c><00:13:50.260><c> to</c><00:13:50.610><c> hint</c><00:13:51.610><c> the</c>

00:13:52.050 --> 00:13:52.060 align:start position:0%
couple of annotations to hint the
 

00:13:52.060 --> 00:13:54.210 align:start position:0%
couple of annotations to hint the
truffle<00:13:52.510><c> framework</c><00:13:52.930><c> what</c><00:13:53.560><c> to</c><00:13:53.740><c> do</c><00:13:53.860><c> with</c><00:13:54.070><c> this</c>

00:13:54.210 --> 00:13:54.220 align:start position:0%
truffle framework what to do with this
 

00:13:54.220 --> 00:13:56.640 align:start position:0%
truffle framework what to do with this
particular<00:13:54.580><c> node</c><00:13:55.510><c> implementation</c><00:13:56.140><c> and</c><00:13:56.320><c> then</c>

00:13:56.640 --> 00:13:56.650 align:start position:0%
particular node implementation and then
 

00:13:56.650 --> 00:13:59.220 align:start position:0%
particular node implementation and then
you<00:13:56.860><c> are</c><00:13:56.920><c> done</c><00:13:57.480><c> this</c><00:13:58.480><c> is</c><00:13:58.540><c> something</c><00:13:58.990><c> what's</c>

00:13:59.220 --> 00:13:59.230 align:start position:0%
you are done this is something what's
 

00:13:59.230 --> 00:14:01.410 align:start position:0%
you are done this is something what's
what<00:13:59.470><c> people</c><00:13:59.800><c> typically</c><00:14:00.160><c> did</c><00:14:00.430><c> like</c><00:14:00.730><c> on</c><00:14:00.850><c> the</c><00:14:00.970><c> in</c>

00:14:01.410 --> 00:14:01.420 align:start position:0%
what people typically did like on the in
 

00:14:01.420 --> 00:14:02.850 align:start position:0%
what people typically did like on the in
the<00:14:01.540><c> first</c><00:14:01.750><c> compiler</c><00:14:02.230><c> scores</c><00:14:02.650><c> or</c><00:14:02.830><c> something</c>

00:14:02.850 --> 00:14:02.860 align:start position:0%
the first compiler scores or something
 

00:14:02.860 --> 00:14:04.680 align:start position:0%
the first compiler scores or something
building<00:14:03.700><c> an</c><00:14:03.820><c> interpreter</c><00:14:04.330><c> for</c><00:14:04.360><c> the</c><00:14:04.570><c> language</c>

00:14:04.680 --> 00:14:04.690 align:start position:0%
building an interpreter for the language
 

00:14:04.690 --> 00:14:07.740 align:start position:0%
building an interpreter for the language
it's<00:14:05.380><c> much</c><00:14:05.710><c> much</c><00:14:05.980><c> smaller</c><00:14:06.940><c> effort</c><00:14:07.540><c> than</c>

00:14:07.740 --> 00:14:07.750 align:start position:0%
it's much much smaller effort than
 

00:14:07.750 --> 00:14:09.750 align:start position:0%
it's much much smaller effort than
actually<00:14:08.230><c> building</c><00:14:08.530><c> a</c><00:14:08.800><c> runtime</c><00:14:09.250><c> or</c><00:14:09.460><c> an</c>

00:14:09.750 --> 00:14:09.760 align:start position:0%
actually building a runtime or an
 

00:14:09.760 --> 00:14:12.780 align:start position:0%
actually building a runtime or an
optimizing<00:14:10.240><c> compiler</c><00:14:10.980><c> the</c><00:14:11.980><c> downside</c><00:14:12.490><c> of</c><00:14:12.520><c> that</c>

00:14:12.780 --> 00:14:12.790 align:start position:0%
optimizing compiler the downside of that
 

00:14:12.790 --> 00:14:14.490 align:start position:0%
optimizing compiler the downside of that
approach<00:14:13.210><c> is</c><00:14:13.390><c> of</c><00:14:13.540><c> course</c><00:14:13.810><c> that</c><00:14:14.050><c> such</c>

00:14:14.490 --> 00:14:14.500 align:start position:0%
approach is of course that such
 

00:14:14.500 --> 00:14:16.920 align:start position:0%
approach is of course that such
interpreters<00:14:15.040><c> are</c><00:14:15.250><c> inherently</c><00:14:15.730><c> slow</c><00:14:16.120><c> there</c>

00:14:16.920 --> 00:14:16.930 align:start position:0%
interpreters are inherently slow there
 

00:14:16.930 --> 00:14:20.420 align:start position:0%
interpreters are inherently slow there
are<00:14:17.050><c> slow</c><00:14:17.650><c> because</c><00:14:18.390><c> they're</c><00:14:19.390><c> incredibly</c>

00:14:20.420 --> 00:14:20.430 align:start position:0%
are slow because they're incredibly
 

00:14:20.430 --> 00:14:23.100 align:start position:0%
are slow because they're incredibly
dynamic<00:14:21.430><c> because</c><00:14:22.000><c> every</c><00:14:22.660><c> time</c><00:14:22.780><c> for</c><00:14:22.990><c> every</c>

00:14:23.100 --> 00:14:23.110 align:start position:0%
dynamic because every time for every
 

00:14:23.110 --> 00:14:25.170 align:start position:0%
dynamic because every time for every
operation<00:14:23.860><c> they</c><00:14:23.980><c> have</c><00:14:24.130><c> to</c><00:14:24.280><c> do</c><00:14:24.460><c> an</c><00:14:24.670><c> evaluation</c>

00:14:25.170 --> 00:14:25.180 align:start position:0%
operation they have to do an evaluation
 

00:14:25.180 --> 00:14:27.510 align:start position:0%
operation they have to do an evaluation
of<00:14:25.630><c> a</c><00:14:26.110><c> certain</c><00:14:26.380><c> class</c><00:14:26.500><c> they</c><00:14:26.950><c> need</c><00:14:27.190><c> to</c><00:14:27.310><c> call</c><00:14:27.490><c> a</c>

00:14:27.510 --> 00:14:27.520 align:start position:0%
of a certain class they need to call a
 

00:14:27.520 --> 00:14:29.960 align:start position:0%
of a certain class they need to call a
certain<00:14:27.820><c> method</c><00:14:28.290><c> something</c><00:14:29.290><c> like</c><00:14:29.440><c> my</c><00:14:29.710><c> node</c>

00:14:29.960 --> 00:14:29.970 align:start position:0%
certain method something like my node
 

00:14:29.970 --> 00:14:33.150 align:start position:0%
certain method something like my node
evaluate<00:14:30.970><c> just</c><00:14:31.900><c> to</c><00:14:32.020><c> figure</c><00:14:32.170><c> out</c><00:14:32.380><c> every</c><00:14:32.860><c> single</c>

00:14:33.150 --> 00:14:33.160 align:start position:0%
evaluate just to figure out every single
 

00:14:33.160 --> 00:14:34.740 align:start position:0%
evaluate just to figure out every single
operation<00:14:33.400><c> so</c><00:14:33.670><c> if</c><00:14:33.790><c> you</c><00:14:33.880><c> have</c><00:14:34.060><c> liquid</c><00:14:34.240><c> small</c>

00:14:34.740 --> 00:14:34.750 align:start position:0%
operation so if you have liquid small
 

00:14:34.750 --> 00:14:36.990 align:start position:0%
operation so if you have liquid small
note<00:14:34.960><c> that</c><00:14:35.110><c> adds</c><00:14:35.290><c> two</c><00:14:35.560><c> integers</c><00:14:36.040><c> you</c><00:14:36.730><c> need</c><00:14:36.850><c> to</c>

00:14:36.990 --> 00:14:37.000 align:start position:0%
note that adds two integers you need to
 

00:14:37.000 --> 00:14:38.730 align:start position:0%
note that adds two integers you need to
have<00:14:37.180><c> three</c><00:14:37.540><c> virtual</c><00:14:37.930><c> calls</c><00:14:38.200><c> you</c><00:14:38.410><c> need</c><00:14:38.530><c> to</c>

00:14:38.730 --> 00:14:38.740 align:start position:0%
have three virtual calls you need to
 

00:14:38.740 --> 00:14:40.710 align:start position:0%
have three virtual calls you need to
evaluate<00:14:39.310><c> the</c><00:14:39.640><c> left</c><00:14:39.910><c> operand</c><00:14:40.270><c> the</c><00:14:40.570><c> right</c>

00:14:40.710 --> 00:14:40.720 align:start position:0%
evaluate the left operand the right
 

00:14:40.720 --> 00:14:43.290 align:start position:0%
evaluate the left operand the right
operand<00:14:41.140><c> and</c><00:14:41.410><c> then</c><00:14:41.650><c> plus</c><00:14:41.920><c> this</c><00:14:42.820><c> is</c><00:14:42.970><c> gonna</c><00:14:43.090><c> be</c>

00:14:43.290 --> 00:14:43.300 align:start position:0%
operand and then plus this is gonna be
 

00:14:43.300 --> 00:14:45.480 align:start position:0%
operand and then plus this is gonna be
incredibly<00:14:44.050><c> slow</c><00:14:44.260><c> and</c><00:14:44.590><c> we</c><00:14:44.740><c> don't</c><00:14:44.920><c> want</c><00:14:45.130><c> that</c>

00:14:45.480 --> 00:14:45.490 align:start position:0%
incredibly slow and we don't want that
 

00:14:45.490 --> 00:14:48.120 align:start position:0%
incredibly slow and we don't want that
so<00:14:45.910><c> how</c><00:14:46.180><c> truffle</c><00:14:46.840><c> deals</c><00:14:47.590><c> with</c><00:14:47.770><c> that</c><00:14:47.860><c> problem</c>

00:14:48.120 --> 00:14:48.130 align:start position:0%
so how truffle deals with that problem
 

00:14:48.130 --> 00:14:54.180 align:start position:0%
so how truffle deals with that problem
we<00:14:50.190><c> we</c><00:14:51.190><c> run</c><00:14:51.720><c> specialization</c><00:14:52.720><c> there</c><00:14:52.870><c> we</c><00:14:53.500><c> merge</c>

00:14:54.180 --> 00:14:54.190 align:start position:0%
we we run specialization there we merge
 

00:14:54.190 --> 00:14:56.010 align:start position:0%
we we run specialization there we merge
at<00:14:54.490><c> runtime</c><00:14:54.730><c> we</c><00:14:55.000><c> collect</c><00:14:55.270><c> the</c><00:14:55.360><c> profile</c><00:14:55.690><c> and</c><00:14:55.870><c> we</c>

00:14:56.010 --> 00:14:56.020 align:start position:0%
at runtime we collect the profile and we
 

00:14:56.020 --> 00:14:58.830 align:start position:0%
at runtime we collect the profile and we
merge<00:14:56.320><c> the</c><00:14:56.650><c> actual</c><00:14:57.580><c> applicant</c><00:14:58.330><c> application</c>

00:14:58.830 --> 00:14:58.840 align:start position:0%
merge the actual applicant application
 

00:14:58.840 --> 00:15:00.300 align:start position:0%
merge the actual applicant application
the<00:14:58.930><c> program</c><00:14:59.260><c> you're</c><00:14:59.410><c> running</c><00:14:59.440><c> and</c><00:14:59.770><c> the</c><00:15:00.130><c> code</c>

00:15:00.300 --> 00:15:00.310 align:start position:0%
the program you're running and the code
 

00:15:00.310 --> 00:15:02.850 align:start position:0%
the program you're running and the code
of<00:15:00.460><c> the</c><00:15:00.550><c> interpreter</c><00:15:01.000><c> we</c><00:15:01.660><c> inline</c><00:15:02.200><c> everything</c>

00:15:02.850 --> 00:15:02.860 align:start position:0%
of the interpreter we inline everything
 

00:15:02.860 --> 00:15:05.640 align:start position:0%
of the interpreter we inline everything
and<00:15:03.040><c> then</c><00:15:03.340><c> that</c><00:15:03.850><c> code</c><00:15:04.270><c> becomes</c><00:15:05.020><c> much</c><00:15:05.410><c> more</c>

00:15:05.640 --> 00:15:05.650 align:start position:0%
and then that code becomes much more
 

00:15:05.650 --> 00:15:09.330 align:start position:0%
and then that code becomes much more
efficient<00:15:06.840><c> and</c><00:15:07.840><c> then</c><00:15:08.560><c> we</c><00:15:08.710><c> pass</c><00:15:08.920><c> it</c><00:15:09.100><c> to</c><00:15:09.220><c> the</c>

00:15:09.330 --> 00:15:09.340 align:start position:0%
efficient and then we pass it to the
 

00:15:09.340 --> 00:15:11.280 align:start position:0%
efficient and then we pass it to the
ground<00:15:09.520><c> Veeam</c><00:15:09.730><c> compiler</c><00:15:10.120><c> and</c><00:15:10.390><c> it</c><00:15:10.750><c> optimizes</c>

00:15:11.280 --> 00:15:11.290 align:start position:0%
ground Veeam compiler and it optimizes
 

00:15:11.290 --> 00:15:14.880 align:start position:0%
ground Veeam compiler and it optimizes
it<00:15:11.590><c> again</c><00:15:11.860><c> at</c><00:15:12.520><c> a</c><00:15:12.580><c> JIT</c><00:15:13.420><c> compiler</c><00:15:13.870><c> level</c><00:15:14.140><c> so</c>

00:15:14.880 --> 00:15:14.890 align:start position:0%
it again at a JIT compiler level so
 

00:15:14.890 --> 00:15:17.610 align:start position:0%
it again at a JIT compiler level so
machine<00:15:15.580><c> code</c><00:15:15.820><c> becomes</c><00:15:16.630><c> quite</c><00:15:16.960><c> an</c><00:15:17.110><c> optimized</c>

00:15:17.610 --> 00:15:17.620 align:start position:0%
machine code becomes quite an optimized
 

00:15:17.620 --> 00:15:19.860 align:start position:0%
machine code becomes quite an optimized
and<00:15:17.830><c> we</c><00:15:18.430><c> get</c><00:15:18.610><c> good</c><00:15:18.850><c> results</c><00:15:19.240><c> performance</c><00:15:19.720><c> wise</c>

00:15:19.860 --> 00:15:19.870 align:start position:0%
and we get good results performance wise
 

00:15:19.870 --> 00:15:22.590 align:start position:0%
and we get good results performance wise
for<00:15:20.110><c> those</c><00:15:20.290><c> languages</c><00:15:21.240><c> for</c><00:15:22.240><c> the</c><00:15:22.330><c> native</c>

00:15:22.590 --> 00:15:22.600 align:start position:0%
for those languages for the native
 

00:15:22.600 --> 00:15:24.750 align:start position:0%
for those languages for the native
languages<00:15:22.930><c> since</c><00:15:23.830><c> we</c><00:15:23.950><c> cannot</c><00:15:24.130><c> run</c><00:15:24.400><c> just</c>

00:15:24.750 --> 00:15:24.760 align:start position:0%
languages since we cannot run just
 

00:15:24.760 --> 00:15:27.180 align:start position:0%
languages since we cannot run just
native<00:15:25.090><c> code</c><00:15:25.270><c> in</c><00:15:26.170><c> an</c><00:15:26.350><c> interpreted</c><00:15:26.800><c> mode</c><00:15:26.950><c> yet</c>

00:15:27.180 --> 00:15:27.190 align:start position:0%
native code in an interpreted mode yet
 

00:15:27.190 --> 00:15:27.870 align:start position:0%
native code in an interpreted mode yet
what<00:15:27.700><c> we</c>

00:15:27.870 --> 00:15:27.880 align:start position:0%
what we
 

00:15:27.880 --> 00:15:29.940 align:start position:0%
what we
we<00:15:28.210><c> created</c><00:15:28.510><c> an</c><00:15:28.690><c> interpreter</c><00:15:29.260><c> for</c><00:15:29.560><c> the</c><00:15:29.650><c> LLVM</c>

00:15:29.940 --> 00:15:29.950 align:start position:0%
we created an interpreter for the LLVM
 

00:15:29.950 --> 00:15:32.580 align:start position:0%
we created an interpreter for the LLVM
bit<00:15:30.250><c> code</c><00:15:30.460><c> and</c><00:15:31.020><c> through</c><00:15:32.020><c> that</c><00:15:32.170><c> we</c><00:15:32.320><c> can</c><00:15:32.350><c> run</c>

00:15:32.580 --> 00:15:32.590 align:start position:0%
bit code and through that we can run
 

00:15:32.590 --> 00:15:35.490 align:start position:0%
bit code and through that we can run
native<00:15:32.800><c> code</c><00:15:32.980><c> and</c><00:15:33.370><c> that</c><00:15:34.270><c> is</c><00:15:34.540><c> used</c><00:15:34.870><c> to</c><00:15:34.990><c> support</c>

00:15:35.490 --> 00:15:35.500 align:start position:0%
native code and that is used to support
 

00:15:35.500 --> 00:15:39.540 align:start position:0%
native code and that is used to support
the<00:15:35.830><c> native</c><00:15:36.460><c> parts</c><00:15:37.530><c> native</c><00:15:38.530><c> extensions</c><00:15:39.100><c> for</c>

00:15:39.540 --> 00:15:39.550 align:start position:0%
the native parts native extensions for
 

00:15:39.550 --> 00:15:41.850 align:start position:0%
the native parts native extensions for
the<00:15:39.730><c> dynamic</c><00:15:40.150><c> languages</c><00:15:40.600><c> that</c><00:15:40.750><c> uses</c><00:15:41.080><c> them</c><00:15:41.200><c> so</c>

00:15:41.850 --> 00:15:41.860 align:start position:0%
the dynamic languages that uses them so
 

00:15:41.860 --> 00:15:43.770 align:start position:0%
the dynamic languages that uses them so
say<00:15:42.280><c> you</c><00:15:42.340><c> run</c><00:15:42.580><c> Python</c><00:15:42.910><c> for</c><00:15:43.390><c> some</c><00:15:43.540><c> machine</c>

00:15:43.770 --> 00:15:43.780 align:start position:0%
say you run Python for some machine
 

00:15:43.780 --> 00:15:45.720 align:start position:0%
say you run Python for some machine
learning<00:15:43.810><c> and</c><00:15:44.200><c> then</c><00:15:44.800><c> there</c><00:15:45.040><c> is</c><00:15:45.130><c> a</c><00:15:45.160><c> numpy</c>

00:15:45.720 --> 00:15:45.730 align:start position:0%
learning and then there is a numpy
 

00:15:45.730 --> 00:15:49.500 align:start position:0%
learning and then there is a numpy
module<00:15:46.530><c> which</c><00:15:47.530><c> is</c><00:15:47.740><c> how</c><00:15:48.130><c> you</c><00:15:48.190><c> do</c><00:15:48.510><c> calculations</c>

00:15:49.500 --> 00:15:49.510 align:start position:0%
module which is how you do calculations
 

00:15:49.510 --> 00:15:52.770 align:start position:0%
module which is how you do calculations
and<00:15:50.380><c> it</c><00:15:50.500><c> has</c><00:15:50.770><c> some</c><00:15:51.310><c> Python</c><00:15:51.550><c> code</c><00:15:51.700><c> but</c><00:15:52.510><c> it</c><00:15:52.630><c> also</c>

00:15:52.770 --> 00:15:52.780 align:start position:0%
and it has some Python code but it also
 

00:15:52.780 --> 00:15:54.570 align:start position:0%
and it has some Python code but it also
has<00:15:53.050><c> like</c><00:15:53.290><c> quite</c><00:15:53.590><c> a</c><00:15:53.620><c> large</c><00:15:53.830><c> code</c><00:15:54.100><c> base</c><00:15:54.310><c> written</c>

00:15:54.570 --> 00:15:54.580 align:start position:0%
has like quite a large code base written
 

00:15:54.580 --> 00:15:58.800 align:start position:0%
has like quite a large code base written
name<00:15:54.880><c> in</c><00:15:55.090><c> I</c><00:15:55.450><c> think</c><00:15:55.870><c> C</c><00:15:56.080><c> or</c><00:15:56.200><c> C++</c><00:15:57.060><c> right</c><00:15:58.060><c> and</c><00:15:58.240><c> we</c>

00:15:58.800 --> 00:15:58.810 align:start position:0%
name in I think C or C++ right and we
 

00:15:58.810 --> 00:16:02.040 align:start position:0%
name in I think C or C++ right and we
want<00:15:59.110><c> that</c><00:15:59.290><c> through</c><00:15:59.680><c> LLVM</c><00:16:00.840><c> interpreter</c><00:16:01.840><c> in</c>

00:16:02.040 --> 00:16:02.050 align:start position:0%
want that through LLVM interpreter in
 

00:16:02.050 --> 00:16:04.320 align:start position:0%
want that through LLVM interpreter in
the<00:16:02.290><c> same</c><00:16:02.440><c> process</c><00:16:02.860><c> and</c><00:16:03.070><c> since</c><00:16:03.820><c> all</c><00:16:04.060><c> those</c>

00:16:04.320 --> 00:16:04.330 align:start position:0%
the same process and since all those
 

00:16:04.330 --> 00:16:06.840 align:start position:0%
the same process and since all those
languages<00:16:04.780><c> they</c><00:16:05.650><c> from</c><00:16:06.220><c> the</c><00:16:06.340><c> point</c><00:16:06.520><c> of</c><00:16:06.640><c> runtime</c>

00:16:06.840 --> 00:16:06.850 align:start position:0%
languages they from the point of runtime
 

00:16:06.850 --> 00:16:09.090 align:start position:0%
languages they from the point of runtime
they<00:16:07.270><c> look</c><00:16:07.450><c> the</c><00:16:07.570><c> same</c><00:16:07.600><c> right</c><00:16:08.020><c> they</c><00:16:08.770><c> are</c><00:16:08.860><c> all</c>

00:16:09.090 --> 00:16:09.100 align:start position:0%
they look the same right they are all
 

00:16:09.100 --> 00:16:12.390 align:start position:0%
they look the same right they are all
just<00:16:09.550><c> trees</c><00:16:10.470><c> written</c><00:16:11.470><c> using</c><00:16:12.100><c> the</c><00:16:12.220><c> same</c>

00:16:12.390 --> 00:16:12.400 align:start position:0%
just trees written using the same
 

00:16:12.400 --> 00:16:14.190 align:start position:0%
just trees written using the same
framework<00:16:12.670><c> so</c><00:16:13.150><c> from</c><00:16:13.420><c> the</c><00:16:13.510><c> runtime</c><00:16:13.840><c> point</c><00:16:14.080><c> of</c>

00:16:14.190 --> 00:16:14.200 align:start position:0%
framework so from the runtime point of
 

00:16:14.200 --> 00:16:15.540 align:start position:0%
framework so from the runtime point of
view<00:16:14.320><c> there</c><00:16:14.650><c> is</c><00:16:14.740><c> no</c><00:16:14.890><c> difference</c><00:16:15.310><c> whether</c>

00:16:15.540 --> 00:16:15.550 align:start position:0%
view there is no difference whether
 

00:16:15.550 --> 00:16:17.100 align:start position:0%
view there is no difference whether
you're<00:16:15.790><c> running</c><00:16:15.940><c> code</c><00:16:16.300><c> in</c><00:16:16.480><c> Python</c><00:16:16.690><c> or</c>

00:16:17.100 --> 00:16:17.110 align:start position:0%
you're running code in Python or
 

00:16:17.110 --> 00:16:20.610 align:start position:0%
you're running code in Python or
JavaScript<00:16:17.680><c> or</c><00:16:18.160><c> Ruby</c><00:16:18.610><c> and</c><00:16:19.230><c> we</c><00:16:20.230><c> can</c><00:16:20.380><c> optimize</c>

00:16:20.610 --> 00:16:20.620 align:start position:0%
JavaScript or Ruby and we can optimize
 

00:16:20.620 --> 00:16:22.920 align:start position:0%
JavaScript or Ruby and we can optimize
and<00:16:21.130><c> compile</c><00:16:21.490><c> across</c><00:16:22.030><c> the</c><00:16:22.210><c> language</c><00:16:22.570><c> barrier</c>

00:16:22.920 --> 00:16:22.930 align:start position:0%
and compile across the language barrier
 

00:16:22.930 --> 00:16:26.010 align:start position:0%
and compile across the language barrier
right<00:16:23.590><c> so</c><00:16:23.800><c> we</c><00:16:23.950><c> can</c><00:16:24.130><c> inline</c><00:16:24.820><c> your</c><00:16:25.210><c> native</c>

00:16:26.010 --> 00:16:26.020 align:start position:0%
right so we can inline your native
 

00:16:26.020 --> 00:16:27.750 align:start position:0%
right so we can inline your native
extension<00:16:26.440><c> code</c><00:16:26.620><c> into</c><00:16:27.010><c> your</c><00:16:27.040><c> dynamic</c>

00:16:27.750 --> 00:16:27.760 align:start position:0%
extension code into your dynamic
 

00:16:27.760 --> 00:16:29.910 align:start position:0%
extension code into your dynamic
language<00:16:28.090><c> code</c><00:16:28.300><c> so</c><00:16:28.900><c> currently</c><00:16:29.230><c> Java</c><00:16:29.740><c> and</c>

00:16:29.910 --> 00:16:29.920 align:start position:0%
language code so currently Java and
 

00:16:29.920 --> 00:16:31.800 align:start position:0%
language code so currently Java and
Scala<00:16:30.040><c> and</c><00:16:30.310><c> jvm</c><00:16:30.700><c> languages</c><00:16:31.060><c> are</c><00:16:31.270><c> a</c><00:16:31.300><c> little</c><00:16:31.600><c> bit</c>

00:16:31.800 --> 00:16:31.810 align:start position:0%
Scala and jvm languages are a little bit
 

00:16:31.810 --> 00:16:35.370 align:start position:0%
Scala and jvm languages are a little bit
different<00:16:32.170><c> there</c><00:16:32.560><c> is</c><00:16:32.680><c> a</c><00:16:33.180><c> more</c><00:16:34.380><c> intricate</c>

00:16:35.370 --> 00:16:35.380 align:start position:0%
different there is a more intricate
 

00:16:35.380 --> 00:16:40.500 align:start position:0%
different there is a more intricate
Interop<00:16:37.320><c> protocol</c><00:16:38.320><c> needed</c><00:16:38.890><c> between</c><00:16:39.430><c> the</c><00:16:39.820><c> jvm</c>

00:16:40.500 --> 00:16:40.510 align:start position:0%
Interop protocol needed between the jvm
 

00:16:40.510 --> 00:16:43.470 align:start position:0%
Interop protocol needed between the jvm
languages<00:16:40.930><c> and</c><00:16:41.140><c> others</c><00:16:41.590><c> but</c><00:16:42.280><c> eventually</c><00:16:42.730><c> we</c>

00:16:43.470 --> 00:16:43.480 align:start position:0%
languages and others but eventually we
 

00:16:43.480 --> 00:16:46.080 align:start position:0%
languages and others but eventually we
will<00:16:43.660><c> get</c><00:16:43.930><c> them</c><00:16:44.340><c> to</c><00:16:45.340><c> be</c><00:16:45.460><c> implemented</c><00:16:45.940><c> on</c><00:16:46.060><c> the</c>

00:16:46.080 --> 00:16:46.090 align:start position:0%
will get them to be implemented on the
 

00:16:46.090 --> 00:16:48.780 align:start position:0%
will get them to be implemented on the
truffle<00:16:46.510><c> framework</c><00:16:46.840><c> as</c><00:16:46.960><c> well</c><00:16:47.110><c> and</c><00:16:47.490><c> then</c><00:16:48.490><c> they</c>

00:16:48.780 --> 00:16:48.790 align:start position:0%
truffle framework as well and then they
 

00:16:48.790 --> 00:16:51.420 align:start position:0%
truffle framework as well and then they
will<00:16:48.970><c> be</c><00:16:49.120><c> absolutely</c><00:16:49.750><c> equal</c><00:16:50.140><c> in</c><00:16:50.740><c> all</c><00:16:51.190><c> three</c>

00:16:51.420 --> 00:16:51.430 align:start position:0%
will be absolutely equal in all three
 

00:16:51.430 --> 00:16:54.420 align:start position:0%
will be absolutely equal in all three
arts<00:16:52.230><c> right</c><00:16:53.230><c> so</c><00:16:53.500><c> this</c><00:16:53.710><c> is</c><00:16:53.830><c> how</c><00:16:53.950><c> it</c><00:16:54.100><c> looks</c><00:16:54.340><c> when</c>

00:16:54.420 --> 00:16:54.430 align:start position:0%
arts right so this is how it looks when
 

00:16:54.430 --> 00:16:56.670 align:start position:0%
arts right so this is how it looks when
you<00:16:54.670><c> run</c><00:16:54.880><c> these</c><00:16:55.060><c> things</c><00:16:55.330><c> how</c><00:16:56.140><c> you</c><00:16:56.170><c> can</c><00:16:56.320><c> run</c>

00:16:56.670 --> 00:16:56.680 align:start position:0%
you run these things how you can run
 

00:16:56.680 --> 00:16:59.940 align:start position:0%
you run these things how you can run
these<00:16:56.860><c> things</c><00:16:57.100><c> is</c><00:16:58.500><c> it's</c><00:16:59.500><c> an</c><00:16:59.590><c> open</c><00:16:59.830><c> source</c>

00:16:59.940 --> 00:16:59.950 align:start position:0%
these things is it's an open source
 

00:16:59.950 --> 00:17:00.420 align:start position:0%
these things is it's an open source
project

00:17:00.420 --> 00:17:00.430 align:start position:0%
project
 

00:17:00.430 --> 00:17:04.470 align:start position:0%
project
Grahame<00:17:01.030><c> is</c><00:17:01.180><c> an</c><00:17:02.070><c> open</c><00:17:03.070><c> source</c><00:17:03.250><c> it</c><00:17:03.940><c> sits</c><00:17:04.390><c> on</c>

00:17:04.470 --> 00:17:04.480 align:start position:0%
Grahame is an open source it sits on
 

00:17:04.480 --> 00:17:06.270 align:start position:0%
Grahame is an open source it sits on
github<00:17:04.839><c> you</c><00:17:05.020><c> can</c><00:17:05.170><c> go</c><00:17:05.470><c> there</c><00:17:05.680><c> it's</c><00:17:06.010><c> written</c>

00:17:06.270 --> 00:17:06.280 align:start position:0%
github you can go there it's written
 

00:17:06.280 --> 00:17:09.150 align:start position:0%
github you can go there it's written
largely<00:17:06.670><c> in</c><00:17:06.970><c> Java</c><00:17:07.270><c> so</c><00:17:07.959><c> as</c><00:17:08.260><c> Java</c><00:17:08.500><c> developers</c><00:17:08.949><c> I</c>

00:17:09.150 --> 00:17:09.160 align:start position:0%
largely in Java so as Java developers I
 

00:17:09.160 --> 00:17:12.000 align:start position:0%
largely in Java so as Java developers I
feel<00:17:09.610><c> that</c><00:17:09.790><c> we</c><00:17:09.910><c> can</c><00:17:09.939><c> appreciate</c><00:17:10.300><c> this</c><00:17:10.860><c> you</c><00:17:11.860><c> can</c>

00:17:12.000 --> 00:17:12.010 align:start position:0%
feel that we can appreciate this you can
 

00:17:12.010 --> 00:17:13.829 align:start position:0%
feel that we can appreciate this you can
load<00:17:12.160><c> that</c><00:17:12.189><c> into</c><00:17:12.610><c> your</c><00:17:12.699><c> ID</c><00:17:12.850><c> your</c><00:17:13.540><c> normal</c>

00:17:13.829 --> 00:17:13.839 align:start position:0%
load that into your ID your normal
 

00:17:13.839 --> 00:17:16.470 align:start position:0%
load that into your ID your normal
tooling<00:17:14.199><c> will</c><00:17:14.380><c> work</c><00:17:15.000><c> you</c><00:17:16.000><c> don't</c><00:17:16.150><c> need</c><00:17:16.329><c> to</c>

00:17:16.470 --> 00:17:16.480 align:start position:0%
tooling will work you don't need to
 

00:17:16.480 --> 00:17:18.150 align:start position:0%
tooling will work you don't need to
figure<00:17:16.630><c> out</c><00:17:16.750><c> intricate</c><00:17:17.500><c> ways</c><00:17:17.650><c> to</c><00:17:17.800><c> compile</c>

00:17:18.150 --> 00:17:18.160 align:start position:0%
figure out intricate ways to compile
 

00:17:18.160 --> 00:17:20.670 align:start position:0%
figure out intricate ways to compile
that<00:17:18.400><c> it</c><00:17:18.760><c> just</c><00:17:19.240><c> you</c><00:17:19.750><c> understand</c><00:17:20.319><c> how</c><00:17:20.439><c> the</c><00:17:20.500><c> code</c>

00:17:20.670 --> 00:17:20.680 align:start position:0%
that it just you understand how the code
 

00:17:20.680 --> 00:17:22.710 align:start position:0%
that it just you understand how the code
works<00:17:20.740><c> you</c><00:17:21.459><c> can</c><00:17:21.640><c> go</c><00:17:21.819><c> click</c><00:17:22.089><c> through</c><00:17:22.449><c> the</c><00:17:22.540><c> class</c>

00:17:22.710 --> 00:17:22.720 align:start position:0%
works you can go click through the class
 

00:17:22.720 --> 00:17:25.500 align:start position:0%
works you can go click through the class
definitions<00:17:23.350><c> and</c><00:17:23.530><c> feel</c><00:17:23.890><c> like</c><00:17:24.040><c> you</c><00:17:24.510><c> understand</c>

00:17:25.500 --> 00:17:25.510 align:start position:0%
definitions and feel like you understand
 

00:17:25.510 --> 00:17:28.770 align:start position:0%
definitions and feel like you understand
what<00:17:25.720><c> is</c><00:17:25.839><c> happening</c><00:17:27.089><c> it</c><00:17:28.089><c> still</c><00:17:28.420><c> takes</c><00:17:28.630><c> a</c>

00:17:28.770 --> 00:17:28.780 align:start position:0%
what is happening it still takes a
 

00:17:28.780 --> 00:17:30.360 align:start position:0%
what is happening it still takes a
little<00:17:28.900><c> bit</c><00:17:29.110><c> of</c><00:17:29.260><c> experience</c><00:17:29.680><c> and</c><00:17:30.010><c> an</c>

00:17:30.360 --> 00:17:30.370 align:start position:0%
little bit of experience and an
 

00:17:30.370 --> 00:17:33.000 align:start position:0%
little bit of experience and an
understanding<00:17:30.910><c> to</c><00:17:31.270><c> you</c><00:17:31.480><c> I</c><00:17:31.900><c> don't</c><00:17:32.620><c> know</c><00:17:32.770><c> some</c>

00:17:33.000 --> 00:17:33.010 align:start position:0%
understanding to you I don't know some
 

00:17:33.010 --> 00:17:35.460 align:start position:0%
understanding to you I don't know some
bit<00:17:33.130><c> patches</c><00:17:33.580><c> and</c><00:17:33.760><c> contribute</c><00:17:34.360><c> in</c><00:17:34.930><c> that</c><00:17:35.020><c> way</c>

00:17:35.460 --> 00:17:35.470 align:start position:0%
bit patches and contribute in that way
 

00:17:35.470 --> 00:17:38.400 align:start position:0%
bit patches and contribute in that way
because<00:17:35.770><c> it</c><00:17:36.010><c> is</c><00:17:36.220><c> still</c><00:17:36.400><c> a</c><00:17:37.410><c> compiler</c>

00:17:38.400 --> 00:17:38.410 align:start position:0%
because it is still a compiler
 

00:17:38.410 --> 00:17:39.550 align:start position:0%
because it is still a compiler
engineering<00:17:38.980><c> so</c>

00:17:39.550 --> 00:17:39.560 align:start position:0%
engineering so
 

00:17:39.560 --> 00:17:42.800 align:start position:0%
engineering so
at<00:17:40.560><c> least</c><00:17:40.860><c> I</c><00:17:41.100><c> think</c><00:17:41.220><c> I</c><00:17:41.610><c> think</c><00:17:42.540><c> on</c><00:17:42.630><c> average</c>

00:17:42.800 --> 00:17:42.810 align:start position:0%
at least I think I think on average
 

00:17:42.810 --> 00:17:44.540 align:start position:0%
at least I think I think on average
you'd<00:17:43.230><c> need</c><00:17:43.440><c> to</c><00:17:43.650><c> put</c><00:17:43.830><c> in</c><00:17:43.950><c> at</c><00:17:44.100><c> least</c><00:17:44.130><c> one</c>

00:17:44.540 --> 00:17:44.550 align:start position:0%
you'd need to put in at least one
 

00:17:44.550 --> 00:17:46.340 align:start position:0%
you'd need to put in at least one
weekend<00:17:45.030><c> before</c><00:17:45.720><c> you</c><00:17:45.810><c> start</c><00:17:46.080><c> contributing</c>

00:17:46.340 --> 00:17:46.350 align:start position:0%
weekend before you start contributing
 

00:17:46.350 --> 00:17:49.880 align:start position:0%
weekend before you start contributing
probably<00:17:47.340><c> more</c><00:17:48.020><c> but</c><00:17:49.020><c> it's</c><00:17:49.230><c> written</c><00:17:49.410><c> in</c><00:17:49.650><c> Java</c>

00:17:49.880 --> 00:17:49.890 align:start position:0%
probably more but it's written in Java
 

00:17:49.890 --> 00:17:51.680 align:start position:0%
probably more but it's written in Java
and<00:17:50.160><c> you</c><00:17:50.190><c> can</c><00:17:50.550><c> understand</c><00:17:51.000><c> what</c><00:17:51.120><c> is</c><00:17:51.240><c> doing</c><00:17:51.510><c> and</c>

00:17:51.680 --> 00:17:51.690 align:start position:0%
and you can understand what is doing and
 

00:17:51.690 --> 00:17:53.930 align:start position:0%
and you can understand what is doing and
you<00:17:52.200><c> can</c><00:17:52.380><c> see</c><00:17:52.650><c> and</c><00:17:52.890><c> if</c><00:17:53.100><c> there</c><00:17:53.280><c> are</c><00:17:53.310><c> any</c><00:17:53.550><c> errors</c>

00:17:53.930 --> 00:17:53.940 align:start position:0%
you can see and if there are any errors
 

00:17:53.940 --> 00:17:57.290 align:start position:0%
you can see and if there are any errors
you<00:17:54.840><c> get</c><00:17:55.530><c> properly</c><00:17:55.950><c> normal</c><00:17:56.310><c> exceptions</c>

00:17:57.290 --> 00:17:57.300 align:start position:0%
you get properly normal exceptions
 

00:17:57.300 --> 00:17:59.630 align:start position:0%
you get properly normal exceptions
instead<00:17:57.780><c> of</c><00:17:57.900><c> the</c><00:17:57.960><c> seg</c><00:17:58.170><c> faults</c><00:17:58.500><c> and</c><00:17:58.680><c> and</c><00:17:59.400><c> it's</c>

00:17:59.630 --> 00:17:59.640 align:start position:0%
instead of the seg faults and and it's
 

00:17:59.640 --> 00:18:01.880 align:start position:0%
instead of the seg faults and and it's
much<00:17:59.850><c> easier</c><00:18:00.210><c> to</c><00:18:00.360><c> work</c><00:18:00.450><c> with</c><00:18:00.680><c> and</c><00:18:01.680><c> you</c><00:18:01.830><c> can</c>

00:18:01.880 --> 00:18:01.890 align:start position:0%
much easier to work with and you can
 

00:18:01.890 --> 00:18:03.380 align:start position:0%
much easier to work with and you can
build<00:18:02.130><c> it</c><00:18:02.310><c> yourself</c><00:18:02.400><c> you</c><00:18:02.880><c> can</c><00:18:02.910><c> you</c><00:18:03.270><c> can</c>

00:18:03.380 --> 00:18:03.390 align:start position:0%
build it yourself you can you can
 

00:18:03.390 --> 00:18:05.180 align:start position:0%
build it yourself you can you can
package<00:18:03.600><c> it</c><00:18:03.840><c> you</c><00:18:04.320><c> get</c><00:18:04.470><c> a</c><00:18:04.500><c> fully</c><00:18:04.770><c> functional</c>

00:18:05.180 --> 00:18:05.190 align:start position:0%
package it you get a fully functional
 

00:18:05.190 --> 00:18:07.280 align:start position:0%
package it you get a fully functional
random<00:18:05.580><c> distribution</c><00:18:05.840><c> you</c><00:18:06.840><c> also</c><00:18:06.990><c> don't</c><00:18:07.170><c> have</c>

00:18:07.280 --> 00:18:07.290 align:start position:0%
random distribution you also don't have
 

00:18:07.290 --> 00:18:09.980 align:start position:0%
random distribution you also don't have
to<00:18:07.590><c> because</c><00:18:08.490><c> you</c><00:18:08.580><c> can</c><00:18:08.730><c> just</c><00:18:08.940><c> use</c><00:18:09.180><c> our</c><00:18:09.330><c> binaries</c>

00:18:09.980 --> 00:18:09.990 align:start position:0%
to because you can just use our binaries
 

00:18:09.990 --> 00:18:13.640 align:start position:0%
to because you can just use our binaries
so<00:18:10.200><c> the</c><00:18:10.740><c> team</c><00:18:11.010><c> provides</c><00:18:12.110><c> builds</c><00:18:13.110><c> that</c><00:18:13.350><c> he</c><00:18:13.500><c> can</c>

00:18:13.640 --> 00:18:13.650 align:start position:0%
so the team provides builds that he can
 

00:18:13.650 --> 00:18:15.620 align:start position:0%
so the team provides builds that he can
use<00:18:13.860><c> just</c><00:18:14.430><c> those</c><00:18:14.640><c> zip</c><00:18:14.880><c> archives</c><00:18:15.270><c> that</c><00:18:15.330><c> you</c><00:18:15.510><c> can</c>

00:18:15.620 --> 00:18:15.630 align:start position:0%
use just those zip archives that you can
 

00:18:15.630 --> 00:18:17.660 align:start position:0%
use just those zip archives that you can
unpack<00:18:16.010><c> there</c><00:18:17.010><c> was</c><00:18:17.100><c> the</c><00:18:17.190><c> Community</c><00:18:17.550><c> Edition</c>

00:18:17.660 --> 00:18:17.670 align:start position:0%
unpack there was the Community Edition
 

00:18:17.670 --> 00:18:21.620 align:start position:0%
unpack there was the Community Edition
which<00:18:18.240><c> is</c><00:18:18.270><c> the</c><00:18:19.010><c> artifact</c><00:18:20.010><c> that</c><00:18:20.370><c> you</c><00:18:20.730><c> get</c><00:18:21.420><c> when</c>

00:18:21.620 --> 00:18:21.630 align:start position:0%
which is the artifact that you get when
 

00:18:21.630 --> 00:18:25.460 align:start position:0%
which is the artifact that you get when
you<00:18:21.720><c> build</c><00:18:21.990><c> the</c><00:18:22.230><c> open-source</c><00:18:22.830><c> bit</c><00:18:24.290><c> and</c><00:18:25.290><c> it's</c>

00:18:25.460 --> 00:18:25.470 align:start position:0%
you build the open-source bit and it's
 

00:18:25.470 --> 00:18:26.000 align:start position:0%
you build the open-source bit and it's
really<00:18:25.740><c> great</c>

00:18:26.000 --> 00:18:26.010 align:start position:0%
really great
 

00:18:26.010 --> 00:18:28.040 align:start position:0%
really great
it<00:18:26.250><c> has</c><00:18:26.400><c> good</c><00:18:26.610><c> performance</c><00:18:26.790><c> it</c><00:18:27.510><c> is</c><00:18:27.660><c> fully</c>

00:18:28.040 --> 00:18:28.050 align:start position:0%
it has good performance it is fully
 

00:18:28.050 --> 00:18:30.350 align:start position:0%
it has good performance it is fully
functional<00:18:28.590><c> it</c><00:18:29.070><c> will</c><00:18:29.310><c> run</c><00:18:29.460><c> all</c><00:18:29.700><c> programs</c><00:18:30.270><c> that</c>

00:18:30.350 --> 00:18:30.360 align:start position:0%
functional it will run all programs that
 

00:18:30.360 --> 00:18:33.080 align:start position:0%
functional it will run all programs that
grapheme<00:18:30.900><c> can</c><00:18:31.110><c> run</c><00:18:31.320><c> and</c><00:18:32.280><c> also</c><00:18:32.580><c> there</c><00:18:32.850><c> is</c><00:18:32.970><c> an</c>

00:18:33.080 --> 00:18:33.090 align:start position:0%
grapheme can run and also there is an
 

00:18:33.090 --> 00:18:34.700 align:start position:0%
grapheme can run and also there is an
Enterprise<00:18:33.540><c> Edition</c><00:18:33.900><c> which</c><00:18:34.530><c> is</c><00:18:34.680><c> a</c>

00:18:34.700 --> 00:18:34.710 align:start position:0%
Enterprise Edition which is a
 

00:18:34.710 --> 00:18:37.760 align:start position:0%
Enterprise Edition which is a
proprietary<00:18:35.250><c> product</c><00:18:35.610><c> at</c><00:18:35.970><c> Oracle</c><00:18:36.360><c> and</c><00:18:36.770><c> it</c>

00:18:37.760 --> 00:18:37.770 align:start position:0%
proprietary product at Oracle and it
 

00:18:37.770 --> 00:18:39.770 align:start position:0%
proprietary product at Oracle and it
comes<00:18:38.040><c> with</c><00:18:38.310><c> even</c><00:18:38.610><c> better</c><00:18:38.850><c> performance</c><00:18:39.090><c> so</c>

00:18:39.770 --> 00:18:39.780 align:start position:0%
comes with even better performance so
 

00:18:39.780 --> 00:18:42.050 align:start position:0%
comes with even better performance so
the<00:18:39.900><c> compiler</c><00:18:40.200><c> is</c><00:18:40.740><c> optimized</c><00:18:41.310><c> more</c><00:18:41.610><c> there</c><00:18:41.940><c> are</c>

00:18:42.050 --> 00:18:42.060 align:start position:0%
the compiler is optimized more there are
 

00:18:42.060 --> 00:18:45.230 align:start position:0%
the compiler is optimized more there are
more<00:18:42.710><c> compiler</c><00:18:43.710><c> phases</c><00:18:44.220><c> and</c><00:18:44.370><c> passes</c><00:18:44.820><c> that</c><00:18:45.090><c> it</c>

00:18:45.230 --> 00:18:45.240 align:start position:0%
more compiler phases and passes that it
 

00:18:45.240 --> 00:18:46.910 align:start position:0%
more compiler phases and passes that it
will<00:18:45.390><c> do</c><00:18:45.570><c> it</c><00:18:45.930><c> will</c><00:18:46.110><c> spend</c><00:18:46.350><c> a</c><00:18:46.410><c> little</c><00:18:46.500><c> more</c><00:18:46.710><c> time</c>

00:18:46.910 --> 00:18:46.920 align:start position:0%
will do it will spend a little more time
 

00:18:46.920 --> 00:18:48.830 align:start position:0%
will do it will spend a little more time
trying<00:18:47.280><c> to</c><00:18:47.340><c> optimize</c><00:18:47.820><c> code</c><00:18:48.030><c> but</c><00:18:48.330><c> typically</c><00:18:48.750><c> it</c>

00:18:48.830 --> 00:18:48.840 align:start position:0%
trying to optimize code but typically it
 

00:18:48.840 --> 00:18:52.340 align:start position:0%
trying to optimize code but typically it
will<00:18:48.960><c> give</c><00:18:49.200><c> you</c><00:18:49.380><c> even</c><00:18:50.370><c> better</c><00:18:50.700><c> result</c><00:18:51.600><c> at</c>

00:18:52.340 --> 00:18:52.350 align:start position:0%
will give you even better result at
 

00:18:52.350 --> 00:18:55.640 align:start position:0%
will give you even better result at
performance<00:18:53.060><c> so</c><00:18:54.060><c> currently</c><00:18:54.390><c> we</c><00:18:54.510><c> have</c><00:18:54.650><c> Linux</c>

00:18:55.640 --> 00:18:55.650 align:start position:0%
performance so currently we have Linux
 

00:18:55.650 --> 00:18:58.580 align:start position:0%
performance so currently we have Linux
and<00:18:55.890><c> Mac</c><00:18:56.070><c> OS</c><00:18:56.150><c> as</c><00:18:57.150><c> support</c><00:18:57.990><c> the</c><00:18:58.050><c> platforms</c><00:18:58.470><c> for</c>

00:18:58.580 --> 00:18:58.590 align:start position:0%
and Mac OS as support the platforms for
 

00:18:58.590 --> 00:19:00.980 align:start position:0%
and Mac OS as support the platforms for
the<00:18:58.650><c> binaries</c><00:18:59.010><c> we</c><00:18:59.490><c> have</c><00:18:59.730><c> an</c><00:19:00.000><c> experimental</c>

00:19:00.980 --> 00:19:00.990 align:start position:0%
the binaries we have an experimental
 

00:19:00.990 --> 00:19:03.740 align:start position:0%
the binaries we have an experimental
Windows<00:19:01.560><c> built</c><00:19:02.030><c> that</c><00:19:03.030><c> that</c><00:19:03.210><c> can</c><00:19:03.360><c> do</c><00:19:03.480><c> certain</c>

00:19:03.740 --> 00:19:03.750 align:start position:0%
Windows built that that can do certain
 

00:19:03.750 --> 00:19:05.750 align:start position:0%
Windows built that that can do certain
things<00:19:03.860><c> so</c><00:19:04.860><c> we</c><00:19:04.950><c> can</c><00:19:05.100><c> experiment</c><00:19:05.370><c> with</c><00:19:05.550><c> that</c>

00:19:05.750 --> 00:19:05.760 align:start position:0%
things so we can experiment with that
 

00:19:05.760 --> 00:19:09.860 align:start position:0%
things so we can experiment with that
but<00:19:06.740><c> mostly</c><00:19:07.850><c> we</c><00:19:08.850><c> have</c><00:19:09.210><c> the</c><00:19:09.330><c> binaries</c><00:19:09.660><c> for</c>

00:19:09.860 --> 00:19:09.870 align:start position:0%
but mostly we have the binaries for
 

00:19:09.870 --> 00:19:12.880 align:start position:0%
but mostly we have the binaries for
linux's<00:19:10.500><c> and</c><00:19:10.710><c> Mac's</c><00:19:11.610><c> which</c><00:19:12.300><c> is</c><00:19:12.450><c> good</c><00:19:12.630><c> because</c>

00:19:12.880 --> 00:19:12.890 align:start position:0%
linux's and Mac's which is good because
 

00:19:12.890 --> 00:19:17.540 align:start position:0%
linux's and Mac's which is good because
production<00:19:13.890><c> typically</c><00:19:14.250><c> runs</c><00:19:14.550><c> on</c><00:19:15.020><c> Linux</c><00:19:16.460><c> so</c><00:19:17.460><c> we</c>

00:19:17.540 --> 00:19:17.550 align:start position:0%
production typically runs on Linux so we
 

00:19:17.550 --> 00:19:19.880 align:start position:0%
production typically runs on Linux so we
can<00:19:17.670><c> get</c><00:19:17.850><c> those</c><00:19:18.030><c> one</c><00:19:18.990><c> point</c><00:19:19.260><c> which</c><00:19:19.500><c> is</c><00:19:19.650><c> I'm</c>

00:19:19.880 --> 00:19:19.890 align:start position:0%
can get those one point which is I'm
 

00:19:19.890 --> 00:19:22.490 align:start position:0%
can get those one point which is I'm
very<00:19:20.220><c> excited</c><00:19:20.640><c> about</c><00:19:20.910><c> this</c><00:19:21.240><c> that</c><00:19:21.870><c> earlier</c>

00:19:22.490 --> 00:19:22.500 align:start position:0%
very excited about this that earlier
 

00:19:22.500 --> 00:19:26.840 align:start position:0%
very excited about this that earlier
this<00:19:22.710><c> month</c><00:19:23.040><c> we</c><00:19:23.790><c> launched</c><00:19:24.660><c> grow</c><00:19:25.140><c> vm</c><00:19:25.610><c> 19.0</c><00:19:26.610><c> and</c>

00:19:26.840 --> 00:19:26.850 align:start position:0%
this month we launched grow vm 19.0 and
 

00:19:26.850 --> 00:19:28.760 align:start position:0%
this month we launched grow vm 19.0 and
together<00:19:27.210><c> was</c><00:19:27.420><c> at</c><00:19:27.540><c> work</c><00:19:27.780><c> a</c><00:19:27.930><c> launch</c><00:19:28.140><c> dravyam</c>

00:19:28.760 --> 00:19:28.770 align:start position:0%
together was at work a launch dravyam
 

00:19:28.770 --> 00:19:31.790 align:start position:0%
together was at work a launch dravyam
oracle<00:19:29.580><c> grave</c><00:19:29.760><c> IAM</c><00:19:29.940><c> enterprise</c><00:19:30.480><c> as</c><00:19:30.720><c> a</c><00:19:30.800><c> product</c>

00:19:31.790 --> 00:19:31.800 align:start position:0%
oracle grave IAM enterprise as a product
 

00:19:31.800 --> 00:19:34.280 align:start position:0%
oracle grave IAM enterprise as a product
that<00:19:32.340><c> means</c><00:19:32.610><c> that</c><00:19:33.030><c> worker</c><00:19:33.870><c> will</c><00:19:34.080><c> provide</c>

00:19:34.280 --> 00:19:34.290 align:start position:0%
that means that worker will provide
 

00:19:34.290 --> 00:19:36.110 align:start position:0%
that means that worker will provide
support<00:19:34.740><c> for</c><00:19:34.770><c> it</c><00:19:34.980><c> that</c><00:19:35.430><c> means</c><00:19:35.700><c> that</c><00:19:35.880><c> if</c><00:19:36.030><c> you</c>

00:19:36.110 --> 00:19:36.120 align:start position:0%
support for it that means that if you
 

00:19:36.120 --> 00:19:39.260 align:start position:0%
support for it that means that if you
want<00:19:36.390><c> to</c><00:19:36.510><c> use</c><00:19:36.690><c> you</c><00:19:36.930><c> can</c><00:19:36.960><c> you</c><00:19:37.350><c> can</c><00:19:37.790><c> turn</c><00:19:38.790><c> to</c><00:19:39.030><c> an</c>

00:19:39.260 --> 00:19:39.270 align:start position:0%
want to use you can you can turn to an
 

00:19:39.270 --> 00:19:41.300 align:start position:0%
want to use you can you can turn to an
oracle<00:19:39.810><c> representative</c><00:19:40.380><c> and</c><00:19:40.590><c> talk</c><00:19:41.070><c> about</c>

00:19:41.300 --> 00:19:41.310 align:start position:0%
oracle representative and talk about
 

00:19:41.310 --> 00:19:42.860 align:start position:0%
oracle representative and talk about
that<00:19:41.490><c> and</c><00:19:41.670><c> that</c><00:19:42.030><c> also</c><00:19:42.270><c> means</c><00:19:42.540><c> that</c><00:19:42.690><c> the</c>

00:19:42.860 --> 00:19:42.870 align:start position:0%
that and that also means that the
 

00:19:42.870 --> 00:19:46.610 align:start position:0%
that and that also means that the
project<00:19:43.320><c> has</c><00:19:43.770><c> really</c><00:19:44.580><c> good</c><00:19:44.880><c> chances</c><00:19:45.420><c> at</c><00:19:45.630><c> being</c>

00:19:46.610 --> 00:19:46.620 align:start position:0%
project has really good chances at being
 

00:19:46.620 --> 00:19:49.630 align:start position:0%
project has really good chances at being
in<00:19:46.710><c> life</c><00:19:46.950><c> for</c><00:19:47.280><c> a</c><00:19:47.310><c> very</c><00:19:47.610><c> long</c><00:19:47.850><c> period</c><00:19:48.120><c> of</c><00:19:48.300><c> time</c>

00:19:49.630 --> 00:19:49.640 align:start position:0%
in life for a very long period of time
 

00:19:49.640 --> 00:19:52.490 align:start position:0%
in life for a very long period of time
so<00:19:50.640><c> you</c><00:19:50.940><c> can</c><00:19:51.210><c> look</c><00:19:51.330><c> into</c><00:19:51.510><c> that</c><00:19:51.720><c> if</c><00:19:51.900><c> you</c><00:19:52.020><c> will</c><00:19:52.200><c> if</c>

00:19:52.490 --> 00:19:52.500 align:start position:0%
so you can look into that if you will if
 

00:19:52.500 --> 00:19:53.030 align:start position:0%
so you can look into that if you will if
you<00:19:52.710><c> want</c>

00:19:53.030 --> 00:19:53.040 align:start position:0%
you want
 

00:19:53.040 --> 00:19:54.860 align:start position:0%
you want
but<00:19:53.490><c> the</c><00:19:53.910><c> Community</c><00:19:54.300><c> Edition</c><00:19:54.420><c> is</c><00:19:54.660><c> fully</c>

00:19:54.860 --> 00:19:54.870 align:start position:0%
but the Community Edition is fully
 

00:19:54.870 --> 00:19:57.680 align:start position:0%
but the Community Edition is fully
functional<00:19:55.290><c> and</c><00:19:55.440><c> you</c><00:19:55.950><c> can</c><00:19:56.130><c> run</c><00:19:56.310><c> it</c><00:19:56.340><c> and</c><00:19:56.670><c> if</c><00:19:57.480><c> you</c>

00:19:57.680 --> 00:19:57.690 align:start position:0%
functional and you can run it and if you
 

00:19:57.690 --> 00:19:59.240 align:start position:0%
functional and you can run it and if you
just<00:19:57.750><c> want</c><00:19:58.200><c> additional</c><00:19:58.590><c> performance</c><00:19:58.920><c> you</c><00:19:59.130><c> can</c>

00:19:59.240 --> 00:19:59.250 align:start position:0%
just want additional performance you can
 

00:19:59.250 --> 00:20:01.390 align:start position:0%
just want additional performance you can
figure<00:19:59.430><c> it</c><00:19:59.550><c> out</c><00:19:59.640><c> later</c>

00:20:01.390 --> 00:20:01.400 align:start position:0%
figure it out later
 

00:20:01.400 --> 00:20:04.010 align:start position:0%
figure it out later
with<00:20:02.400><c> that</c><00:20:02.550><c> let's</c><00:20:02.850><c> go</c><00:20:02.910><c> and</c><00:20:03.330><c> let's</c><00:20:03.570><c> see</c><00:20:03.780><c> some</c>

00:20:04.010 --> 00:20:04.020 align:start position:0%
with that let's go and let's see some
 

00:20:04.020 --> 00:20:06.230 align:start position:0%
with that let's go and let's see some
demos<00:20:04.290><c> and</c><00:20:04.470><c> let's</c><00:20:04.680><c> see</c><00:20:04.950><c> what</c><00:20:05.580><c> what</c>

00:20:06.230 --> 00:20:06.240 align:start position:0%
demos and let's see what what
 

00:20:06.240 --> 00:20:08.470 align:start position:0%
demos and let's see what what
performance<00:20:06.660><c> impact</c><00:20:07.080><c> I'm</c><00:20:07.680><c> talking</c><00:20:08.100><c> about</c>

00:20:08.470 --> 00:20:08.480 align:start position:0%
performance impact I'm talking about
 

00:20:08.480 --> 00:20:11.840 align:start position:0%
performance impact I'm talking about
let's<00:20:09.480><c> see</c><00:20:09.750><c> I</c><00:20:09.930><c> have</c><00:20:10.530><c> this</c><00:20:11.130><c> very</c><00:20:11.550><c> simple</c>

00:20:11.840 --> 00:20:11.850 align:start position:0%
let's see I have this very simple
 

00:20:11.850 --> 00:20:13.730 align:start position:0%
let's see I have this very simple
benchmark<00:20:12.270><c> and</c><00:20:12.420><c> normally</c><00:20:13.170><c> I</c><00:20:13.200><c> show</c><00:20:13.500><c> a</c><00:20:13.530><c> little</c>

00:20:13.730 --> 00:20:13.740 align:start position:0%
benchmark and normally I show a little
 

00:20:13.740 --> 00:20:16.640 align:start position:0%
benchmark and normally I show a little
bit<00:20:13.920><c> different</c><00:20:14.280><c> one</c><00:20:14.870><c> also</c><00:20:15.870><c> synthetic</c><00:20:16.050><c> but</c>

00:20:16.640 --> 00:20:16.650 align:start position:0%
bit different one also synthetic but
 

00:20:16.650 --> 00:20:18.650 align:start position:0%
bit different one also synthetic but
since<00:20:17.550><c> we</c><00:20:17.790><c> are</c><00:20:17.820><c> at</c><00:20:18.090><c> the</c><00:20:18.210><c> Spring</c><00:20:18.480><c> Conference</c>

00:20:18.650 --> 00:20:18.660 align:start position:0%
since we are at the Spring Conference
 

00:20:18.660 --> 00:20:21.050 align:start position:0%
since we are at the Spring Conference
here<00:20:19.200><c> I</c><00:20:19.230><c> have</c><00:20:19.500><c> felt</c><00:20:19.770><c> that</c><00:20:19.950><c> I</c><00:20:20.250><c> should</c><00:20:20.850><c> I</c><00:20:21.030><c> should</c>

00:20:21.050 --> 00:20:21.060 align:start position:0%
here I have felt that I should I should
 

00:20:21.060 --> 00:20:23.420 align:start position:0%
here I have felt that I should I should
run<00:20:21.390><c> a</c><00:20:21.420><c> small</c><00:20:21.780><c> benchmark</c><00:20:22.260><c> using</c><00:20:22.530><c> the</c><00:20:22.680><c> project</c>

00:20:23.420 --> 00:20:23.430 align:start position:0%
run a small benchmark using the project
 

00:20:23.430 --> 00:20:26.390 align:start position:0%
run a small benchmark using the project
reactor<00:20:23.970><c> API</c><00:20:24.840><c> to</c><00:20:25.470><c> benchmark</c><00:20:25.980><c> it</c><00:20:26.070><c> a</c><00:20:26.100><c> little</c><00:20:26.250><c> bit</c>

00:20:26.390 --> 00:20:26.400 align:start position:0%
reactor API to benchmark it a little bit
 

00:20:26.400 --> 00:20:28.610 align:start position:0%
reactor API to benchmark it a little bit
so<00:20:26.910><c> let</c><00:20:27.450><c> me</c><00:20:27.570><c> show</c><00:20:27.720><c> you</c><00:20:27.750><c> how</c><00:20:27.990><c> to</c><00:20:28.050><c> run</c><00:20:28.320><c> it</c><00:20:28.470><c> and</c>

00:20:28.610 --> 00:20:28.620 align:start position:0%
so let me show you how to run it and
 

00:20:28.620 --> 00:20:30.710 align:start position:0%
so let me show you how to run it and
then<00:20:29.220><c> we'll</c><00:20:29.430><c> stare</c><00:20:30.090><c> at</c><00:20:30.270><c> the</c><00:20:30.390><c> code</c><00:20:30.570><c> a</c><00:20:30.600><c> little</c>

00:20:30.710 --> 00:20:30.720 align:start position:0%
then we'll stare at the code a little
 

00:20:30.720 --> 00:20:34.160 align:start position:0%
then we'll stare at the code a little
bit<00:20:30.900><c> more</c><00:20:31.490><c> right</c><00:20:32.520><c> what</c><00:20:33.060><c> did</c><00:20:33.210><c> I</c><00:20:33.300><c> do</c>

00:20:34.160 --> 00:20:34.170 align:start position:0%
bit more right what did I do
 

00:20:34.170 --> 00:20:39.230 align:start position:0%
bit more right what did I do
I<00:20:34.230><c> download</c><00:20:34.860><c> my</c><00:20:35.040><c> Graham</c><00:20:35.520><c> I</c><00:20:35.730><c> have</c><00:20:36.540><c> my</c><00:20:38.240><c> utilities</c>

00:20:39.230 --> 00:20:39.240 align:start position:0%
I download my Graham I have my utilities
 

00:20:39.240 --> 00:20:41.330 align:start position:0%
I download my Graham I have my utilities
and<00:20:39.360><c> commands</c><00:20:39.690><c> here</c><00:20:39.990><c> which</c><00:20:40.620><c> if</c><00:20:40.770><c> I</c><00:20:40.920><c> call</c><00:20:41.130><c> which</c>

00:20:41.330 --> 00:20:41.340 align:start position:0%
and commands here which if I call which
 

00:20:41.340 --> 00:20:43.640 align:start position:0%
and commands here which if I call which
Java<00:20:41.820><c> you</c><00:20:42.120><c> can</c><00:20:42.270><c> see</c><00:20:42.450><c> that</c><00:20:42.660><c> this</c><00:20:42.780><c> is</c><00:20:42.960><c> my</c><00:20:43.170><c> Java</c>

00:20:43.640 --> 00:20:43.650 align:start position:0%
Java you can see that this is my Java
 

00:20:43.650 --> 00:20:45.770 align:start position:0%
Java you can see that this is my Java
from<00:20:43.980><c> the</c><00:20:44.130><c> ground</c><00:20:44.340><c> vm</c><00:20:44.550><c> distribution</c><00:20:45.120><c> if</c><00:20:45.630><c> I</c>

00:20:45.770 --> 00:20:45.780 align:start position:0%
from the ground vm distribution if I
 

00:20:45.780 --> 00:20:48.320 align:start position:0%
from the ground vm distribution if I
call<00:20:45.990><c> Java</c><00:20:46.260><c> -</c><00:20:46.590><c> version</c><00:20:46.770><c> you</c><00:20:47.760><c> can</c><00:20:47.910><c> see</c><00:20:48.120><c> that</c>

00:20:48.320 --> 00:20:48.330 align:start position:0%
call Java - version you can see that
 

00:20:48.330 --> 00:20:52.340 align:start position:0%
call Java - version you can see that
this<00:20:48.420><c> is</c><00:20:48.600><c> a</c><00:20:48.750><c> built</c><00:20:49.200><c> based</c><00:20:49.740><c> on</c><00:20:49.950><c> Java</c><00:20:50.430><c> 8</c><00:20:51.020><c> right</c><00:20:52.020><c> so</c>

00:20:52.340 --> 00:20:52.350 align:start position:0%
this is a built based on Java 8 right so
 

00:20:52.350 --> 00:20:54.500 align:start position:0%
this is a built based on Java 8 right so
when<00:20:52.530><c> I</c><00:20:52.560><c> when</c><00:20:52.800><c> I</c><00:20:52.830><c> run</c><00:20:53.070><c> my</c><00:20:53.100><c> Java</c><00:20:53.550><c> commands</c><00:20:54.060><c> this</c>

00:20:54.500 --> 00:20:54.510 align:start position:0%
when I when I run my Java commands this
 

00:20:54.510 --> 00:20:57.230 align:start position:0%
when I when I run my Java commands this
is<00:20:54.690><c> this</c><00:20:55.080><c> Java</c><00:20:55.380><c> is</c><00:20:55.530><c> in</c><00:20:55.680><c> my</c><00:20:55.890><c> path</c><00:20:56.160><c> all</c><00:20:56.670><c> the</c><00:20:56.730><c> time</c>

00:20:57.230 --> 00:20:57.240 align:start position:0%
is this Java is in my path all the time
 

00:20:57.240 --> 00:20:59.570 align:start position:0%
is this Java is in my path all the time
right<00:20:57.540><c> when</c><00:20:57.720><c> I</c><00:20:57.750><c> run</c><00:20:58.110><c> anything</c><00:20:58.410><c> Java</c><00:20:58.800><c> this</c><00:20:59.370><c> is</c>

00:20:59.570 --> 00:20:59.580 align:start position:0%
right when I run anything Java this is
 

00:20:59.580 --> 00:21:02.480 align:start position:0%
right when I run anything Java this is
what<00:20:59.760><c> runs</c><00:21:00.170><c> which</c><00:21:01.170><c> should</c><00:21:01.680><c> give</c><00:21:01.830><c> you</c><00:21:02.010><c> enough</c>

00:21:02.480 --> 00:21:02.490 align:start position:0%
what runs which should give you enough
 

00:21:02.490 --> 00:21:04.460 align:start position:0%
what runs which should give you enough
confidence<00:21:03.060><c> to</c><00:21:03.120><c> just</c><00:21:03.450><c> drop</c><00:21:04.140><c> it</c><00:21:04.350><c> into</c>

00:21:04.460 --> 00:21:04.470 align:start position:0%
confidence to just drop it into
 

00:21:04.470 --> 00:21:07.580 align:start position:0%
confidence to just drop it into
production<00:21:04.980><c> without</c><00:21:05.100><c> any</c><00:21:05.880><c> regard</c><00:21:06.510><c> for</c><00:21:06.570><c> do</c><00:21:07.500><c> you</c>

00:21:07.580 --> 00:21:07.590 align:start position:0%
production without any regard for do you
 

00:21:07.590 --> 00:21:10.520 align:start position:0%
production without any regard for do you
process<00:21:08.040><c> because</c><00:21:08.520><c> I</c><00:21:08.730><c> run</c><00:21:09.540><c> it</c><00:21:09.660><c> in</c><00:21:09.780><c> my</c><00:21:09.870><c> laptop</c><00:21:10.050><c> no</c>

00:21:10.520 --> 00:21:10.530 align:start position:0%
process because I run it in my laptop no
 

00:21:10.530 --> 00:21:12.920 align:start position:0%
process because I run it in my laptop no
you<00:21:10.950><c> should</c><00:21:11.130><c> evaluate</c><00:21:11.370><c> but</c><00:21:12.360><c> you</c><00:21:12.480><c> should</c><00:21:12.690><c> know</c>

00:21:12.920 --> 00:21:12.930 align:start position:0%
you should evaluate but you should know
 

00:21:12.930 --> 00:21:15.230 align:start position:0%
you should evaluate but you should know
that<00:21:13.200><c> we</c><00:21:13.530><c> run</c><00:21:13.770><c> our</c><00:21:14.010><c> internal</c><00:21:14.790><c> Java</c>

00:21:15.230 --> 00:21:15.240 align:start position:0%
that we run our internal Java
 

00:21:15.240 --> 00:21:17.720 align:start position:0%
that we run our internal Java
applications<00:21:15.540><c> at</c><00:21:15.930><c> Oracle</c><00:21:16.260><c> apps</c><00:21:16.440><c> on</c><00:21:17.400><c> the</c>

00:21:17.720 --> 00:21:17.730 align:start position:0%
applications at Oracle apps on the
 

00:21:17.730 --> 00:21:21.890 align:start position:0%
applications at Oracle apps on the
ground<00:21:17.910><c> VM</c><00:21:18.120><c> and</c><00:21:18.860><c> we</c><00:21:19.860><c> we</c><00:21:20.160><c> don't</c><00:21:20.400><c> see</c><00:21:20.780><c> we</c><00:21:21.780><c> don't</c>

00:21:21.890 --> 00:21:21.900 align:start position:0%
ground VM and we we don't see we don't
 

00:21:21.900 --> 00:21:23.900 align:start position:0%
ground VM and we we don't see we don't
see<00:21:22.140><c> many</c><00:21:22.320><c> problems</c><00:21:22.710><c> right</c><00:21:23.190><c> what</c><00:21:23.520><c> do</c><00:21:23.610><c> I</c><00:21:23.700><c> want</c>

00:21:23.900 --> 00:21:23.910 align:start position:0%
see many problems right what do I want
 

00:21:23.910 --> 00:21:25.310 align:start position:0%
see many problems right what do I want
to<00:21:23.970><c> do</c><00:21:24.060><c> I</c><00:21:24.210><c> want</c><00:21:24.390><c> you</c><00:21:24.510><c> to</c><00:21:24.630><c> run</c><00:21:24.810><c> the</c><00:21:24.990><c> benchmark</c>

00:21:25.310 --> 00:21:25.320 align:start position:0%
to do I want you to run the benchmark
 

00:21:25.320 --> 00:21:30.080 align:start position:0%
to do I want you to run the benchmark
for<00:21:25.710><c> you</c><00:21:25.860><c> right</c><00:21:26.670><c> so</c><00:21:27.060><c> I</c><00:21:27.360><c> will</c><00:21:27.780><c> I</c><00:21:28.020><c> will</c><00:21:28.970><c> run</c><00:21:29.970><c> the</c>

00:21:30.080 --> 00:21:30.090 align:start position:0%
for you right so I will I will run the
 

00:21:30.090 --> 00:21:32.210 align:start position:0%
for you right so I will I will run the
following<00:21:30.270><c> file</c><00:21:30.660><c> I</c><00:21:30.930><c> will</c><00:21:31.110><c> run</c><00:21:31.470><c> without</c><00:21:31.890><c> the</c>

00:21:32.210 --> 00:21:32.220 align:start position:0%
following file I will run without the
 

00:21:32.220 --> 00:21:34.460 align:start position:0%
following file I will run without the
groundhog<00:21:32.520><c> compiler</c><00:21:32.910><c> first</c><00:21:33.300><c> to</c><00:21:33.900><c> show</c><00:21:34.170><c> you</c><00:21:34.230><c> the</c>

00:21:34.460 --> 00:21:34.470 align:start position:0%
groundhog compiler first to show you the
 

00:21:34.470 --> 00:21:36.500 align:start position:0%
groundhog compiler first to show you the
difference<00:21:34.860><c> right</c><00:21:35.340><c> I</c><00:21:35.520><c> will</c><00:21:35.760><c> run</c><00:21:35.910><c> my</c><00:21:35.940><c> java</c><00:21:36.270><c> from</c>

00:21:36.500 --> 00:21:36.510 align:start position:0%
difference right I will run my java from
 

00:21:36.510 --> 00:21:38.540 align:start position:0%
difference right I will run my java from
the<00:21:36.600><c> ground</c><00:21:36.780><c> vm</c><00:21:36.990><c> but</c><00:21:37.350><c> i</c><00:21:37.380><c> will</c><00:21:37.590><c> disable</c><00:21:37.950><c> the</c><00:21:38.160><c> JVM</c>

00:21:38.540 --> 00:21:38.550 align:start position:0%
the ground vm but i will disable the JVM
 

00:21:38.550 --> 00:21:40.820 align:start position:0%
the ground vm but i will disable the JVM
so<00:21:38.640><c> I</c><00:21:38.700><c> compiler</c><00:21:39.120><c> right</c><00:21:39.870><c> this</c><00:21:40.110><c> is</c><00:21:40.230><c> what</c><00:21:40.380><c> I</c><00:21:40.410><c> meant</c>

00:21:40.820 --> 00:21:40.830 align:start position:0%
so I compiler right this is what I meant
 

00:21:40.830 --> 00:21:42.830 align:start position:0%
so I compiler right this is what I meant
when<00:21:41.010><c> it</c><00:21:41.040><c> said</c><00:21:41.370><c> that</c><00:21:41.670><c> you</c><00:21:42.000><c> can</c><00:21:42.180><c> run</c><00:21:42.390><c> your</c><00:21:42.510><c> drama</c>

00:21:42.830 --> 00:21:42.840 align:start position:0%
when it said that you can run your drama
 

00:21:42.840 --> 00:21:45.200 align:start position:0%
when it said that you can run your drama
absolutely<00:21:43.410><c> normally</c><00:21:43.800><c> I</c><00:21:43.950><c> can</c><00:21:44.520><c> disable</c><00:21:44.940><c> the</c>

00:21:45.200 --> 00:21:45.210 align:start position:0%
absolutely normally I can disable the
 

00:21:45.210 --> 00:21:47.780 align:start position:0%
absolutely normally I can disable the
compiler<00:21:45.540><c> I</c><00:21:45.780><c> can</c><00:21:46.320><c> just</c><00:21:46.680><c> say</c><00:21:46.830><c> do</c><00:21:47.040><c> not</c><00:21:47.070><c> use</c><00:21:47.520><c> the</c>

00:21:47.780 --> 00:21:47.790 align:start position:0%
compiler I can just say do not use the
 

00:21:47.790 --> 00:21:48.730 align:start position:0%
compiler I can just say do not use the
grant<00:21:48.060><c> compiler</c>

00:21:48.730 --> 00:21:48.740 align:start position:0%
grant compiler
 

00:21:48.740 --> 00:21:53.300 align:start position:0%
grant compiler
and<00:21:49.740><c> it</c><00:21:50.130><c> will</c><00:21:50.280><c> run</c><00:21:51.030><c> properly</c><00:21:51.600><c> anyway</c><00:21:52.470><c> right</c><00:21:52.950><c> so</c>

00:21:53.300 --> 00:21:53.310 align:start position:0%
and it will run properly anyway right so
 

00:21:53.310 --> 00:21:55.580 align:start position:0%
and it will run properly anyway right so
I<00:21:53.340><c> will</c><00:21:53.640><c> start</c><00:21:53.940><c> it</c><00:21:54.090><c> we</c><00:21:54.570><c> do</c><00:21:54.690><c> not</c><00:21:54.720><c> use</c><00:21:55.110><c> the</c><00:21:55.260><c> JVM</c>

00:21:55.580 --> 00:21:55.590 align:start position:0%
I will start it we do not use the JVM
 

00:21:55.590 --> 00:21:57.560 align:start position:0%
I will start it we do not use the JVM
state<00:21:55.770><c> compiler</c><00:21:56.130><c> it</c><00:21:56.370><c> will</c><00:21:56.760><c> take</c><00:21:56.910><c> 40</c><00:21:57.180><c> seconds</c>

00:21:57.560 --> 00:21:57.570 align:start position:0%
state compiler it will take 40 seconds
 

00:21:57.570 --> 00:22:00.620 align:start position:0%
state compiler it will take 40 seconds
and<00:21:57.720><c> will</c><00:21:58.260><c> see</c><00:21:58.440><c> the</c><00:21:58.560><c> results</c><00:21:59.120><c> in</c><00:22:00.120><c> 4</c><00:22:00.330><c> seconds</c>

00:22:00.620 --> 00:22:00.630 align:start position:0%
and will see the results in 4 seconds
 

00:22:00.630 --> 00:22:03.050 align:start position:0%
and will see the results in 4 seconds
let's<00:22:00.840><c> look</c><00:22:01.080><c> at</c><00:22:01.200><c> the</c><00:22:01.260><c> code</c><00:22:01.410><c> what</c><00:22:01.860><c> does</c><00:22:02.010><c> it</c><00:22:02.160><c> do</c>

00:22:03.050 --> 00:22:03.060 align:start position:0%
let's look at the code what does it do
 

00:22:03.060 --> 00:22:06.200 align:start position:0%
let's look at the code what does it do
it<00:22:03.210><c> takes</c><00:22:03.510><c> some</c><00:22:04.110><c> array</c><00:22:04.440><c> of</c><00:22:04.590><c> of</c><00:22:05.310><c> objects</c>

00:22:06.200 --> 00:22:06.210 align:start position:0%
it takes some array of of objects
 

00:22:06.210 --> 00:22:08.900 align:start position:0%
it takes some array of of objects
integers<00:22:06.990><c> in</c><00:22:07.140><c> this</c><00:22:07.290><c> case</c><00:22:07.470><c> and</c><00:22:07.740><c> then</c><00:22:08.490><c> it</c><00:22:08.730><c> has</c>

00:22:08.900 --> 00:22:08.910 align:start position:0%
integers in this case and then it has
 

00:22:08.910 --> 00:22:13.580 align:start position:0%
integers in this case and then it has
one<00:22:08.940><c> test</c><00:22:09.690><c> method</c><00:22:10.080><c> for</c><00:22:10.290><c> which</c><00:22:10.320><c> we</c><00:22:10.800><c> we</c><00:22:12.590><c> check</c>

00:22:13.580 --> 00:22:13.590 align:start position:0%
one test method for which we we check
 

00:22:13.590 --> 00:22:16.460 align:start position:0%
one test method for which we we check
the<00:22:13.890><c> latency</c><00:22:14.460><c> so</c><00:22:14.850><c> lower</c><00:22:15.330><c> results</c><00:22:15.900><c> will</c><00:22:16.350><c> be</c>

00:22:16.460 --> 00:22:16.470 align:start position:0%
the latency so lower results will be
 

00:22:16.470 --> 00:22:19.010 align:start position:0%
the latency so lower results will be
better<00:22:17.040><c> the</c><00:22:17.430><c> average</c><00:22:17.820><c> time</c><00:22:18.090><c> to</c><00:22:18.480><c> execute</c><00:22:18.810><c> this</c>

00:22:19.010 --> 00:22:19.020 align:start position:0%
better the average time to execute this
 

00:22:19.020 --> 00:22:21.200 align:start position:0%
better the average time to execute this
method<00:22:19.200><c> and</c><00:22:19.590><c> what</c><00:22:19.920><c> we</c><00:22:20.070><c> just</c><00:22:20.190><c> do</c><00:22:20.400><c> we</c><00:22:20.850><c> stream</c>

00:22:21.200 --> 00:22:21.210 align:start position:0%
method and what we just do we stream
 

00:22:21.210 --> 00:22:23.270 align:start position:0%
method and what we just do we stream
those<00:22:21.450><c> values</c><00:22:21.870><c> we</c><00:22:22.560><c> apply</c><00:22:23.010><c> some</c>

00:22:23.270 --> 00:22:23.280 align:start position:0%
those values we apply some
 

00:22:23.280 --> 00:22:25.130 align:start position:0%
those values we apply some
transformation<00:22:23.400><c> to</c><00:22:24.000><c> them</c><00:22:24.150><c> we</c><00:22:24.510><c> reduce</c><00:22:24.870><c> them</c><00:22:25.080><c> to</c>

00:22:25.130 --> 00:22:25.140 align:start position:0%
transformation to them we reduce them to
 

00:22:25.140 --> 00:22:27.560 align:start position:0%
transformation to them we reduce them to
a<00:22:25.320><c> number</c><00:22:25.550><c> and</c><00:22:26.550><c> we</c><00:22:26.850><c> just</c><00:22:27.060><c> collect</c><00:22:27.420><c> this</c>

00:22:27.560 --> 00:22:27.570 align:start position:0%
a number and we just collect this
 

00:22:27.570 --> 00:22:30.470 align:start position:0%
a number and we just collect this
pipeline<00:22:28.080><c> with</c><00:22:28.710><c> a</c><00:22:28.740><c> block</c><00:22:29.040><c> right</c><00:22:29.760><c> this</c><00:22:30.060><c> may</c><00:22:30.420><c> be</c>

00:22:30.470 --> 00:22:30.480 align:start position:0%
pipeline with a block right this may be
 

00:22:30.480 --> 00:22:32.840 align:start position:0%
pipeline with a block right this may be
not<00:22:30.960><c> the</c><00:22:31.140><c> code</c><00:22:31.350><c> that</c><00:22:31.530><c> you</c><00:22:31.650><c> write</c><00:22:31.830><c> daily</c><00:22:32.100><c> like</c>

00:22:32.840 --> 00:22:32.850 align:start position:0%
not the code that you write daily like
 

00:22:32.850 --> 00:22:35.600 align:start position:0%
not the code that you write daily like
unless<00:22:33.780><c> you're</c><00:22:34.020><c> writing</c><00:22:34.230><c> applications</c><00:22:34.980><c> that</c>

00:22:35.600 --> 00:22:35.610 align:start position:0%
unless you're writing applications that
 

00:22:35.610 --> 00:22:39.500 align:start position:0%
unless you're writing applications that
transform<00:22:36.770><c> like</c><00:22:37.770><c> a</c><00:22:37.800><c> hundred</c><00:22:38.250><c> integers</c><00:22:38.670><c> but</c>

00:22:39.500 --> 00:22:39.510 align:start position:0%
transform like a hundred integers but
 

00:22:39.510 --> 00:22:42.050 align:start position:0%
transform like a hundred integers but
this<00:22:39.690><c> MZ</c><00:22:40.050><c> trains</c><00:22:40.320><c> certain</c><00:22:41.070><c> pad</c><00:22:41.310><c> code</c><00:22:41.550><c> pass</c><00:22:41.790><c> in</c>

00:22:42.050 --> 00:22:42.060 align:start position:0%
this MZ trains certain pad code pass in
 

00:22:42.060 --> 00:22:44.570 align:start position:0%
this MZ trains certain pad code pass in
the<00:22:42.150><c> framework</c><00:22:42.420><c> that</c><00:22:42.960><c> powers</c><00:22:43.440><c> actually</c><00:22:44.280><c> the</c>

00:22:44.570 --> 00:22:44.580 align:start position:0%
the framework that powers actually the
 

00:22:44.580 --> 00:22:47.450 align:start position:0%
the framework that powers actually the
whole<00:22:44.610><c> reactive</c><00:22:45.740><c> reactive</c><00:22:46.740><c> string</c><00:22:47.100><c> story</c>

00:22:47.450 --> 00:22:47.460 align:start position:0%
whole reactive reactive string story
 

00:22:47.460 --> 00:22:49.610 align:start position:0%
whole reactive reactive string story
project<00:22:48.270><c> or</c><00:22:48.420><c> actor</c><00:22:48.660><c> issue</c><00:22:48.840><c> which</c><00:22:49.110><c> is</c><00:22:49.290><c> which</c><00:22:49.590><c> is</c>

00:22:49.610 --> 00:22:49.620 align:start position:0%
project or actor issue which is which is
 

00:22:49.620 --> 00:22:52.490 align:start position:0%
project or actor issue which is which is
yeast<00:22:50.370><c> when</c><00:22:50.640><c> you</c><00:22:50.820><c> run</c><00:22:51.060><c> your</c><00:22:51.500><c> spring</c>

00:22:52.490 --> 00:22:52.500 align:start position:0%
yeast when you run your spring
 

00:22:52.500 --> 00:22:55.100 align:start position:0%
yeast when you run your spring
applications<00:22:53.190><c> and</c><00:22:53.570><c> one</c><00:22:54.570><c> of</c><00:22:54.660><c> this</c><00:22:54.750><c> benchmark</c>

00:22:55.100 --> 00:22:55.110 align:start position:0%
applications and one of this benchmark
 

00:22:55.110 --> 00:22:58.880 align:start position:0%
applications and one of this benchmark
is<00:22:55.380><c> clearly</c><00:22:55.770><c> synthetic</c><00:22:56.840><c> you</c><00:22:57.840><c> at</c><00:22:58.290><c> least</c><00:22:58.650><c> know</c>

00:22:58.880 --> 00:22:58.890 align:start position:0%
is clearly synthetic you at least know
 

00:22:58.890 --> 00:23:01.100 align:start position:0%
is clearly synthetic you at least know
that<00:22:58.920><c> it</c><00:22:59.250><c> actually</c><00:22:59.730><c> uses</c><00:23:00.000><c> the</c><00:23:00.270><c> code</c><00:23:00.450><c> that</c><00:23:00.930><c> you</c>

00:23:01.100 --> 00:23:01.110 align:start position:0%
that it actually uses the code that you
 

00:23:01.110 --> 00:23:04.280 align:start position:0%
that it actually uses the code that you
also<00:23:01.410><c> use</c><00:23:01.590><c> in</c><00:23:01.980><c> production</c><00:23:02.930><c> hopefully</c><00:23:03.930><c> 40</c>

00:23:04.280 --> 00:23:04.290 align:start position:0%
also use in production hopefully 40
 

00:23:04.290 --> 00:23:06.320 align:start position:0%
also use in production hopefully 40
seconds<00:23:04.620><c> has</c><00:23:04.770><c> passed</c><00:23:04.800><c> right</c><00:23:05.670><c> so</c><00:23:05.970><c> we</c><00:23:06.090><c> get</c><00:23:06.240><c> the</c>

00:23:06.320 --> 00:23:06.330 align:start position:0%
seconds has passed right so we get the
 

00:23:06.330 --> 00:23:08.000 align:start position:0%
seconds has passed right so we get the
number<00:23:06.660><c> and</c><00:23:06.840><c> it's</c><00:23:07.080><c> a</c><00:23:07.170><c> fairly</c><00:23:07.470><c> large</c><00:23:07.740><c> number</c>

00:23:08.000 --> 00:23:08.010 align:start position:0%
number and it's a fairly large number
 

00:23:08.010 --> 00:23:10.460 align:start position:0%
number and it's a fairly large number
because<00:23:08.850><c> it</c><00:23:09.270><c> needs</c><00:23:09.540><c> to</c><00:23:09.660><c> go</c><00:23:09.960><c> through</c><00:23:09.990><c> all</c>

00:23:10.460 --> 00:23:10.470 align:start position:0%
because it needs to go through all
 

00:23:10.470 --> 00:23:12.680 align:start position:0%
because it needs to go through all
hundred<00:23:10.890><c> elements</c><00:23:11.250><c> and</c><00:23:11.400><c> it</c><00:23:11.820><c> needs</c><00:23:12.300><c> to</c><00:23:12.420><c> create</c>

00:23:12.680 --> 00:23:12.690 align:start position:0%
hundred elements and it needs to create
 

00:23:12.690 --> 00:23:14.720 align:start position:0%
hundred elements and it needs to create
a<00:23:12.870><c> subscription</c><00:23:13.200><c> subscriber</c><00:23:13.980><c> and</c><00:23:14.340><c> all</c><00:23:14.550><c> those</c>

00:23:14.720 --> 00:23:14.730 align:start position:0%
a subscription subscriber and all those
 

00:23:14.730 --> 00:23:16.730 align:start position:0%
a subscription subscriber and all those
elements<00:23:14.850><c> and</c><00:23:15.240><c> push</c><00:23:15.480><c> the</c><00:23:15.750><c> data</c><00:23:15.960><c> through</c><00:23:16.560><c> this</c>

00:23:16.730 --> 00:23:16.740 align:start position:0%
elements and push the data through this
 

00:23:16.740 --> 00:23:18.910 align:start position:0%
elements and push the data through this
pipeline<00:23:17.040><c> so</c><00:23:17.850><c> we</c><00:23:17.940><c> get</c><00:23:18.060><c> something</c><00:23:18.300><c> like</c>

00:23:18.910 --> 00:23:18.920 align:start position:0%
pipeline so we get something like
 

00:23:18.920 --> 00:23:21.680 align:start position:0%
pipeline so we get something like
twenty-four<00:23:19.920><c> hundred</c><00:23:20.540><c> nanoseconds</c><00:23:21.540><c> per</c>

00:23:21.680 --> 00:23:21.690 align:start position:0%
twenty-four hundred nanoseconds per
 

00:23:21.690 --> 00:23:24.770 align:start position:0%
twenty-four hundred nanoseconds per
operation<00:23:22.340><c> so</c><00:23:23.340><c> now</c><00:23:23.520><c> I</c><00:23:23.550><c> will</c><00:23:23.850><c> do</c><00:23:24.030><c> and</c><00:23:24.270><c> I</c><00:23:24.600><c> will</c>

00:23:24.770 --> 00:23:24.780 align:start position:0%
operation so now I will do and I will
 

00:23:24.780 --> 00:23:28.670 align:start position:0%
operation so now I will do and I will
run<00:23:24.990><c> the</c><00:23:26.270><c> version</c><00:23:27.270><c> without</c><00:23:27.810><c> disabling</c><00:23:28.380><c> the</c>

00:23:28.670 --> 00:23:28.680 align:start position:0%
run the version without disabling the
 

00:23:28.680 --> 00:23:31.190 align:start position:0%
run the version without disabling the
Grove<00:23:28.860><c> am</c><00:23:29.040><c> compiler</c><00:23:29.400><c> right</c><00:23:29.970><c> so</c><00:23:30.210><c> with</c><00:23:30.570><c> our</c><00:23:30.780><c> Java</c>

00:23:31.190 --> 00:23:31.200 align:start position:0%
Grove am compiler right so with our Java
 

00:23:31.200 --> 00:23:32.510 align:start position:0%
Grove am compiler right so with our Java
which<00:23:31.500><c> you</c><00:23:31.680><c> get</c><00:23:31.860><c> from</c><00:23:32.040><c> the</c><00:23:32.190><c> ground</c><00:23:32.400><c> game</c>

00:23:32.510 --> 00:23:32.520 align:start position:0%
which you get from the ground game
 

00:23:32.520 --> 00:23:34.910 align:start position:0%
which you get from the ground game
distribution<00:23:32.900><c> the</c><00:23:33.900><c> ground</c><00:23:34.200><c> VM</c><00:23:34.410><c> compiler</c><00:23:34.710><c> is</c>

00:23:34.910 --> 00:23:34.920 align:start position:0%
distribution the ground VM compiler is
 

00:23:34.920 --> 00:23:36.920 align:start position:0%
distribution the ground VM compiler is
enabled<00:23:35.370><c> by</c><00:23:35.490><c> default</c><00:23:35.550><c> so</c><00:23:36.210><c> now</c><00:23:36.420><c> I</c><00:23:36.450><c> will</c><00:23:36.750><c> not</c>

00:23:36.920 --> 00:23:36.930 align:start position:0%
enabled by default so now I will not
 

00:23:36.930 --> 00:23:38.840 align:start position:0%
enabled by default so now I will not
disable<00:23:37.320><c> this</c><00:23:37.470><c> manually</c><00:23:37.980><c> and</c><00:23:38.160><c> I</c><00:23:38.370><c> will</c><00:23:38.520><c> run</c><00:23:38.730><c> it</c>

00:23:38.840 --> 00:23:38.850 align:start position:0%
disable this manually and I will run it
 

00:23:38.850 --> 00:23:41.150 align:start position:0%
disable this manually and I will run it
and<00:23:39.030><c> we'll</c><00:23:39.600><c> see</c><00:23:39.780><c> the</c><00:23:39.930><c> results</c><00:23:40.050><c> not</c><00:23:40.770><c> to</c><00:23:40.920><c> spoil</c>

00:23:41.150 --> 00:23:41.160 align:start position:0%
and we'll see the results not to spoil
 

00:23:41.160 --> 00:23:42.650 align:start position:0%
and we'll see the results not to spoil
the<00:23:41.250><c> results</c><00:23:41.580><c> we'll</c><00:23:41.700><c> stir</c><00:23:41.910><c> the</c><00:23:42.090><c> benchmark</c><00:23:42.480><c> a</c>

00:23:42.650 --> 00:23:42.660 align:start position:0%
the results we'll stir the benchmark a
 

00:23:42.660 --> 00:23:47.900 align:start position:0%
the results we'll stir the benchmark a
little<00:23:42.930><c> bit</c><00:23:43.020><c> more</c><00:23:44.390><c> right</c><00:23:46.580><c> who</c><00:23:47.580><c> thinks</c><00:23:47.820><c> it</c>

00:23:47.900 --> 00:23:47.910 align:start position:0%
little bit more right who thinks it
 

00:23:47.910 --> 00:23:52.100 align:start position:0%
little bit more right who thinks it
would<00:23:48.000><c> be</c><00:23:48.060><c> faster</c><00:23:50.630><c> show</c><00:23:51.630><c> of</c><00:23:51.690><c> hands</c>

00:23:52.100 --> 00:23:52.110 align:start position:0%
would be faster show of hands
 

00:23:52.110 --> 00:23:55.220 align:start position:0%
would be faster show of hands
I<00:23:52.700><c> understand</c><00:23:53.700><c> your</c><00:23:53.850><c> skepticism</c><00:23:54.080><c> JVM</c><00:23:55.080><c> is</c><00:23:55.170><c> a</c>

00:23:55.220 --> 00:23:55.230 align:start position:0%
I understand your skepticism JVM is a
 

00:23:55.230 --> 00:23:57.170 align:start position:0%
I understand your skepticism JVM is a
state-of-the-art<00:23:55.560><c> virtual</c><00:23:56.430><c> machine</c><00:23:56.730><c> it's</c>

00:23:57.170 --> 00:23:57.180 align:start position:0%
state-of-the-art virtual machine it's
 

00:23:57.180 --> 00:24:00.440 align:start position:0%
state-of-the-art virtual machine it's
not<00:23:57.300><c> easy</c><00:23:57.540><c> to</c><00:23:57.720><c> be</c><00:23:57.810><c> faster</c><00:23:58.170><c> than</c><00:23:58.200><c> the</c><00:23:58.470><c> JDM</c><00:23:59.450><c> but</c>

00:24:00.440 --> 00:24:00.450 align:start position:0%
not easy to be faster than the JDM but
 

00:24:00.450 --> 00:24:03.410 align:start position:0%
not easy to be faster than the JDM but
hopefully<00:24:00.840><c> it</c><00:24:00.900><c> will</c><00:24:00.990><c> be</c><00:24:01.140><c> faster</c><00:24:02.000><c> because</c><00:24:03.000><c> this</c>

00:24:03.410 --> 00:24:03.420 align:start position:0%
hopefully it will be faster because this
 

00:24:03.420 --> 00:24:05.090 align:start position:0%
hopefully it will be faster because this
is<00:24:03.570><c> the</c><00:24:03.660><c> demo</c><00:24:03.840><c> and</c><00:24:04.080><c> it</c><00:24:04.530><c> would</c><00:24:04.650><c> be</c><00:24:04.740><c> silly</c><00:24:05.010><c> to</c>

00:24:05.090 --> 00:24:05.100 align:start position:0%
is the demo and it would be silly to
 

00:24:05.100 --> 00:24:06.410 align:start position:0%
is the demo and it would be silly to
show<00:24:05.370><c> you</c><00:24:05.430><c> the</c><00:24:05.640><c> benchmark</c><00:24:06.000><c> where</c><00:24:06.210><c> we're</c>

00:24:06.410 --> 00:24:06.420 align:start position:0%
show you the benchmark where we're
 

00:24:06.420 --> 00:24:10.880 align:start position:0%
show you the benchmark where we're
slower<00:24:08.540><c> but</c><00:24:09.540><c> honestly</c><00:24:09.960><c> I</c><00:24:10.020><c> normally</c><00:24:10.620><c> on</c><00:24:10.800><c> the</c>

00:24:10.880 --> 00:24:10.890 align:start position:0%
slower but honestly I normally on the
 

00:24:10.890 --> 00:24:12.860 align:start position:0%
slower but honestly I normally on the
stage<00:24:11.070><c> do</c><00:24:11.280><c> a</c><00:24:11.310><c> different</c><00:24:11.700><c> one</c><00:24:11.820><c> so</c><00:24:11.970><c> I</c><00:24:12.330><c> really</c>

00:24:12.860 --> 00:24:12.870 align:start position:0%
stage do a different one so I really
 

00:24:12.870 --> 00:24:15.050 align:start position:0%
stage do a different one so I really
come<00:24:13.230><c> in</c><00:24:13.320><c> a</c><00:24:13.380><c> little</c><00:24:13.590><c> bit</c><00:24:13.710><c> nervous</c><00:24:13.920><c> I'm</c><00:24:14.250><c> fairly</c>

00:24:15.050 --> 00:24:15.060 align:start position:0%
come in a little bit nervous I'm fairly
 

00:24:15.060 --> 00:24:17.240 align:start position:0%
come in a little bit nervous I'm fairly
capable<00:24:15.540><c> sure</c><00:24:15.690><c> that</c><00:24:16.050><c> this</c><00:24:16.200><c> will</c><00:24:16.440><c> be</c>

00:24:17.240 --> 00:24:17.250 align:start position:0%
capable sure that this will be
 

00:24:17.250 --> 00:24:19.340 align:start position:0%
capable sure that this will be
but<00:24:17.880><c> we'll</c><00:24:18.450><c> see</c><00:24:18.600><c> the</c><00:24:18.720><c> results</c><00:24:18.960><c> how</c><00:24:19.200><c> much</c>

00:24:19.340 --> 00:24:19.350 align:start position:0%
but we'll see the results how much
 

00:24:19.350 --> 00:24:20.570 align:start position:0%
but we'll see the results how much
faster<00:24:19.529><c> do</c><00:24:19.769><c> you</c><00:24:19.830><c> think</c><00:24:20.010><c> who</c><00:24:20.220><c> thinks</c><00:24:20.429><c> it</c><00:24:20.519><c> will</c>

00:24:20.570 --> 00:24:20.580 align:start position:0%
faster do you think who thinks it will
 

00:24:20.580 --> 00:24:25.490 align:start position:0%
faster do you think who thinks it will
be<00:24:20.700><c> faster</c><00:24:20.970><c> at</c><00:24:21.059><c> 10%</c><00:24:22.010><c> or</c><00:24:23.010><c> more</c><00:24:24.380><c> okay</c>

00:24:25.490 --> 00:24:25.500 align:start position:0%
be faster at 10% or more okay
 

00:24:25.500 --> 00:24:27.289 align:start position:0%
be faster at 10% or more okay
fairly<00:24:25.890><c> enough</c><00:24:26.070><c> optimistic</c><00:24:26.760><c> people</c><00:24:26.850><c> twenty</c>

00:24:27.289 --> 00:24:27.299 align:start position:0%
fairly enough optimistic people twenty
 

00:24:27.299 --> 00:24:30.830 align:start position:0%
fairly enough optimistic people twenty
percent<00:24:27.570><c> or</c><00:24:27.690><c> more</c><00:24:28.730><c> that's</c><00:24:29.730><c> a</c><00:24:29.850><c> lot</c><00:24:30.000><c> right</c><00:24:30.210><c> ten</c>

00:24:30.830 --> 00:24:30.840 align:start position:0%
percent or more that's a lot right ten
 

00:24:30.840 --> 00:24:32.990 align:start position:0%
percent or more that's a lot right ten
percent<00:24:31.230><c> on</c><00:24:31.380><c> the</c><00:24:31.470><c> JVM</c><00:24:31.769><c> kind</c><00:24:32.340><c> of</c><00:24:32.460><c> can</c><00:24:32.730><c> buy</c><00:24:32.940><c> you</c>

00:24:32.990 --> 00:24:33.000 align:start position:0%
percent on the JVM kind of can buy you
 

00:24:33.000 --> 00:24:34.789 align:start position:0%
percent on the JVM kind of can buy you
like<00:24:33.360><c> a</c><00:24:33.419><c> low</c><00:24:33.659><c> latency</c><00:24:33.840><c> garbage</c><00:24:34.409><c> collector</c>

00:24:34.789 --> 00:24:34.799 align:start position:0%
like a low latency garbage collector
 

00:24:34.799 --> 00:24:36.740 align:start position:0%
like a low latency garbage collector
when<00:24:35.399><c> the</c><00:24:35.490><c> introduced</c><00:24:35.909><c> do</c><00:24:36.059><c> you</c><00:24:36.149><c> want</c><00:24:36.330><c> to</c><00:24:36.480><c> see</c><00:24:36.720><c> I</c>

00:24:36.740 --> 00:24:36.750 align:start position:0%
when the introduced do you want to see I
 

00:24:36.750 --> 00:24:41.409 align:start position:0%
when the introduced do you want to see I
think<00:24:37.019><c> the</c><00:24:37.260><c> the</c><00:24:37.789><c> the</c><00:24:38.789><c> idea</c><00:24:39.269><c> was</c><00:24:39.570><c> that</c><00:24:39.830><c> 10%</c>

00:24:41.409 --> 00:24:41.419 align:start position:0%
think the the the idea was that 10%
 

00:24:41.419 --> 00:24:45.590 align:start position:0%
think the the the idea was that 10%
throughput<00:24:42.419><c> decrease</c><00:24:43.019><c> is</c><00:24:43.399><c> at</c><00:24:44.399><c> most</c><00:24:44.970><c> what</c><00:24:45.570><c> you</c>

00:24:45.590 --> 00:24:45.600 align:start position:0%
throughput decrease is at most what you
 

00:24:45.600 --> 00:24:47.539 align:start position:0%
throughput decrease is at most what you
will<00:24:45.870><c> receive</c><00:24:46.470><c> when</c><00:24:46.710><c> you</c><00:24:46.769><c> run</c><00:24:47.039><c> to</c><00:24:47.190><c> say</c><00:24:47.370><c> which</c>

00:24:47.539 --> 00:24:47.549 align:start position:0%
will receive when you run to say which
 

00:24:47.549 --> 00:24:49.009 align:start position:0%
will receive when you run to say which
do<00:24:47.700><c> you</c><00:24:47.760><c> want</c><00:24:47.820><c> you</c><00:24:48.090><c> see</c><00:24:48.269><c> and</c><00:24:48.510><c> I</c><00:24:48.659><c> think</c><00:24:48.720><c> other</c>

00:24:49.009 --> 00:24:49.019 align:start position:0%
do you want you see and I think other
 

00:24:49.019 --> 00:24:51.259 align:start position:0%
do you want you see and I think other
low<00:24:49.350><c> latency</c><00:24:49.799><c> garbage</c><00:24:50.070><c> collectors</c><00:24:50.429><c> also</c><00:24:50.880><c> try</c>

00:24:51.259 --> 00:24:51.269 align:start position:0%
low latency garbage collectors also try
 

00:24:51.269 --> 00:24:54.860 align:start position:0%
low latency garbage collectors also try
to<00:24:51.299><c> have</c><00:24:51.809><c> this</c><00:24:52.220><c> overhead</c><00:24:53.269><c> no</c><00:24:54.269><c> more</c><00:24:54.510><c> than</c><00:24:54.690><c> 10</c>

00:24:54.860 --> 00:24:54.870 align:start position:0%
to have this overhead no more than 10
 

00:24:54.870 --> 00:24:56.899 align:start position:0%
to have this overhead no more than 10
percent<00:24:54.899><c> so</c><00:24:55.529><c> 10</c><00:24:56.159><c> percent</c><00:24:56.309><c> by</c><00:24:56.580><c> city</c><00:24:56.789><c> low</c>

00:24:56.899 --> 00:24:56.909 align:start position:0%
percent so 10 percent by city low
 

00:24:56.909 --> 00:24:59.570 align:start position:0%
percent so 10 percent by city low
latency<00:24:57.330><c> GC</c><00:24:57.750><c> 20</c><00:24:58.500><c> percent</c><00:24:58.799><c> buys</c><00:24:58.980><c> you</c><00:24:59.279><c> low</c>

00:24:59.570 --> 00:24:59.580 align:start position:0%
latency GC 20 percent buys you low
 

00:24:59.580 --> 00:25:01.960 align:start position:0%
latency GC 20 percent buys you low
latency<00:25:00.000><c> GCS</c><00:25:00.389><c> and</c><00:25:00.539><c> a</c><00:25:00.659><c> little</c><00:25:00.899><c> bit</c><00:25:01.019><c> more</c>

00:25:01.960 --> 00:25:01.970 align:start position:0%
latency GCS and a little bit more
 

00:25:01.970 --> 00:25:04.879 align:start position:0%
latency GCS and a little bit more
anything<00:25:02.970><c> else</c><00:25:03.120><c> is</c><00:25:03.330><c> a</c><00:25:03.360><c> gravy</c><00:25:03.659><c> right</c><00:25:04.139><c> anything</c>

00:25:04.879 --> 00:25:04.889 align:start position:0%
anything else is a gravy right anything
 

00:25:04.889 --> 00:25:09.440 align:start position:0%
anything else is a gravy right anything
else<00:25:05.100><c> you</c><00:25:05.309><c> get</c><00:25:05.519><c> is</c><00:25:05.789><c> what</c><00:25:06.690><c> you</c><00:25:06.960><c> save</c><00:25:07.799><c> in</c><00:25:08.450><c> pure</c>

00:25:09.440 --> 00:25:09.450 align:start position:0%
else you get is what you save in pure
 

00:25:09.450 --> 00:25:12.110 align:start position:0%
else you get is what you save in pure
money<00:25:09.690><c> if</c><00:25:09.960><c> you</c><00:25:10.169><c> run</c><00:25:10.350><c> say</c><00:25:10.860><c> on</c><00:25:11.010><c> some</c><00:25:11.279><c> cloud</c><00:25:11.580><c> where</c>

00:25:12.110 --> 00:25:12.120 align:start position:0%
money if you run say on some cloud where
 

00:25:12.120 --> 00:25:14.269 align:start position:0%
money if you run say on some cloud where
you<00:25:12.240><c> pay</c><00:25:12.480><c> for</c><00:25:12.539><c> compute</c><00:25:13.110><c> instances</c><00:25:13.559><c> so</c><00:25:14.100><c> let's</c>

00:25:14.269 --> 00:25:14.279 align:start position:0%
you pay for compute instances so let's
 

00:25:14.279 --> 00:25:17.210 align:start position:0%
you pay for compute instances so let's
see<00:25:14.429><c> and</c><00:25:14.639><c> let's</c><00:25:15.510><c> see</c><00:25:16.440><c> how</c><00:25:16.590><c> fast</c><00:25:16.740><c> is</c><00:25:16.919><c> this</c><00:25:17.010><c> or</c>

00:25:17.210 --> 00:25:17.220 align:start position:0%
see and let's see how fast is this or
 

00:25:17.220 --> 00:25:19.639 align:start position:0%
see and let's see how fast is this or
how<00:25:17.460><c> slow</c><00:25:17.639><c> this</c><00:25:17.700><c> oh</c><00:25:18.260><c> look</c><00:25:19.260><c> at</c><00:25:19.320><c> that</c>

00:25:19.639 --> 00:25:19.649 align:start position:0%
how slow this oh look at that
 

00:25:19.649 --> 00:25:22.310 align:start position:0%
how slow this oh look at that
the<00:25:20.220><c> score</c><00:25:20.519><c> for</c><00:25:20.730><c> running</c><00:25:21.029><c> one</c><00:25:21.389><c> iteration</c><00:25:22.260><c> of</c>

00:25:22.310 --> 00:25:22.320 align:start position:0%
the score for running one iteration of
 

00:25:22.320 --> 00:25:30.879 align:start position:0%
the score for running one iteration of
this<00:25:22.440><c> test</c><00:25:22.710><c> method</c><00:25:22.889><c> is</c><00:25:23.600><c> 89</c><00:25:24.600><c> seconds</c><00:25:28.309><c> 1824</c>

00:25:30.879 --> 00:25:30.889 align:start position:0%
this test method is 89 seconds 1824
 

00:25:30.889 --> 00:25:32.110 align:start position:0%
this test method is 89 seconds 1824
2,580

00:25:32.110 --> 00:25:32.120 align:start position:0%
2,580
 

00:25:32.120 --> 00:25:35.419 align:start position:0%
2,580
my<00:25:33.120><c> mass</c><00:25:33.299><c> is</c><00:25:33.330><c> not</c><00:25:33.630><c> good</c><00:25:33.840><c> but</c><00:25:34.289><c> if</c><00:25:34.529><c> you</c><00:25:34.740><c> divide</c>

00:25:35.419 --> 00:25:35.429 align:start position:0%
my mass is not good but if you divide
 

00:25:35.429 --> 00:25:40.970 align:start position:0%
my mass is not good but if you divide
that<00:25:35.779><c> that</c><00:25:36.779><c> is</c><00:25:36.899><c> 30</c><00:25:37.649><c> times</c><00:25:39.260><c> so</c><00:25:40.260><c> with</c><00:25:40.830><c> the</c>

00:25:40.970 --> 00:25:40.980 align:start position:0%
that that is 30 times so with the
 

00:25:40.980 --> 00:25:42.830 align:start position:0%
that that is 30 times so with the
growing<00:25:41.190><c> vm</c><00:25:41.519><c> compiler</c><00:25:41.909><c> enabled</c><00:25:42.419><c> this</c>

00:25:42.830 --> 00:25:42.840 align:start position:0%
growing vm compiler enabled this
 

00:25:42.840 --> 00:25:45.320 align:start position:0%
growing vm compiler enabled this
benchmark<00:25:43.380><c> is</c><00:25:43.529><c> 30</c><00:25:43.980><c> times</c><00:25:44.279><c> faster</c><00:25:44.519><c> than</c>

00:25:45.320 --> 00:25:45.330 align:start position:0%
benchmark is 30 times faster than
 

00:25:45.330 --> 00:25:51.110 align:start position:0%
benchmark is 30 times faster than
normally<00:25:47.840><c> that</c><00:25:48.840><c> is</c><00:25:48.870><c> an</c><00:25:49.049><c> amazing</c><00:25:49.409><c> result</c><00:25:50.120><c> that</c>

00:25:51.110 --> 00:25:51.120 align:start position:0%
normally that is an amazing result that
 

00:25:51.120 --> 00:25:54.680 align:start position:0%
normally that is an amazing result that
there's<00:25:51.269><c> also</c><00:25:51.389><c> clearly</c><00:25:52.850><c> not</c><00:25:53.850><c> representative</c>

00:25:54.680 --> 00:25:54.690 align:start position:0%
there's also clearly not representative
 

00:25:54.690 --> 00:25:56.419 align:start position:0%
there's also clearly not representative
of<00:25:54.809><c> were</c><00:25:55.019><c> all</c><00:25:55.230><c> workloads</c><00:25:55.980><c> that</c><00:25:56.100><c> you're</c><00:25:56.340><c> gonna</c>

00:25:56.419 --> 00:25:56.429 align:start position:0%
of were all workloads that you're gonna
 

00:25:56.429 --> 00:25:58.970 align:start position:0%
of were all workloads that you're gonna
run<00:25:56.610><c> so</c><00:25:57.570><c> if</c><00:25:57.899><c> you</c><00:25:58.049><c> run</c><00:25:58.169><c> the</c><00:25:58.289><c> application</c><00:25:58.440><c> I</c>

00:25:58.970 --> 00:25:58.980 align:start position:0%
run so if you run the application I
 

00:25:58.980 --> 00:26:01.720 align:start position:0%
run so if you run the application I
don't<00:25:59.669><c> think</c><00:25:59.850><c> you</c><00:25:59.970><c> will</c><00:26:00.120><c> see</c><00:26:00.179><c> the</c><00:26:00.899><c> 30</c><00:26:01.470><c> percent</c>

00:26:01.720 --> 00:26:01.730 align:start position:0%
don't think you will see the 30 percent
 

00:26:01.730 --> 00:26:04.700 align:start position:0%
don't think you will see the 30 percent
three<00:26:02.730><c> times</c><00:26:03.059><c> performance</c><00:26:04.049><c> boost</c><00:26:04.230><c> this</c><00:26:04.649><c> is</c>

00:26:04.700 --> 00:26:04.710 align:start position:0%
three times performance boost this is
 

00:26:04.710 --> 00:26:07.159 align:start position:0%
three times performance boost this is
just<00:26:05.010><c> ridiculous</c><00:26:05.429><c> to</c><00:26:05.580><c> expect</c><00:26:05.760><c> that</c><00:26:06.090><c> and</c><00:26:06.360><c> it's</c>

00:26:07.159 --> 00:26:07.169 align:start position:0%
just ridiculous to expect that and it's
 

00:26:07.169 --> 00:26:09.259 align:start position:0%
just ridiculous to expect that and it's
a<00:26:07.320><c> it's</c><00:26:07.590><c> a</c><00:26:07.740><c> it's</c><00:26:07.769><c> a</c><00:26:08.039><c> benchmark</c><00:26:08.340><c> shown</c><00:26:08.789><c> on</c><00:26:09.000><c> stage</c>

00:26:09.259 --> 00:26:09.269 align:start position:0%
a it's a it's a benchmark shown on stage
 

00:26:09.269 --> 00:26:11.060 align:start position:0%
a it's a it's a benchmark shown on stage
so<00:26:09.960><c> you</c><00:26:09.990><c> should</c><00:26:10.260><c> take</c><00:26:10.440><c> that</c><00:26:10.559><c> result</c><00:26:10.919><c> with</c><00:26:11.039><c> a</c>

00:26:11.060 --> 00:26:11.070 align:start position:0%
so you should take that result with a
 

00:26:11.070 --> 00:26:12.860 align:start position:0%
so you should take that result with a
grain<00:26:11.279><c> of</c><00:26:11.309><c> salt</c><00:26:11.549><c> because</c><00:26:11.940><c> we</c><00:26:12.149><c> run</c><00:26:12.419><c> this</c><00:26:12.570><c> on</c><00:26:12.750><c> my</c>

00:26:12.860 --> 00:26:12.870 align:start position:0%
grain of salt because we run this on my
 

00:26:12.870 --> 00:26:15.590 align:start position:0%
grain of salt because we run this on my
poor<00:26:13.169><c> macbook</c><00:26:13.950><c> here</c><00:26:14.250><c> which</c><00:26:14.850><c> is</c><00:26:15.000><c> clearly</c><00:26:15.240><c> not</c>

00:26:15.590 --> 00:26:15.600 align:start position:0%
poor macbook here which is clearly not
 

00:26:15.600 --> 00:26:17.779 align:start position:0%
poor macbook here which is clearly not
the<00:26:15.779><c> most</c><00:26:15.899><c> scientific</c><00:26:16.789><c> benchmarking</c>

00:26:17.779 --> 00:26:17.789 align:start position:0%
the most scientific benchmarking
 

00:26:17.789 --> 00:26:20.779 align:start position:0%
the most scientific benchmarking
environment<00:26:18.409><c> so</c><00:26:19.409><c> you</c><00:26:19.980><c> should</c><00:26:20.190><c> you</c><00:26:20.460><c> should</c><00:26:20.549><c> you</c>

00:26:20.779 --> 00:26:20.789 align:start position:0%
environment so you should you should you
 

00:26:20.789 --> 00:26:23.389 align:start position:0%
environment so you should you should you
should<00:26:20.909><c> not</c><00:26:21.210><c> trust</c><00:26:21.809><c> this</c><00:26:22.110><c> number</c><00:26:22.440><c> you</c><00:26:23.279><c> can</c>

00:26:23.389 --> 00:26:23.399 align:start position:0%
should not trust this number you can
 

00:26:23.399 --> 00:26:25.879 align:start position:0%
should not trust this number you can
even<00:26:23.580><c> see</c><00:26:23.820><c> that</c><00:26:24.029><c> the</c><00:26:24.720><c> numbers</c><00:26:25.110><c> below</c><00:26:25.380><c> are</c><00:26:25.590><c> just</c>

00:26:25.879 --> 00:26:25.889 align:start position:0%
even see that the numbers below are just
 

00:26:25.889 --> 00:26:28.340 align:start position:0%
even see that the numbers below are just
data<00:26:26.070><c> you</c><00:26:26.580><c> have</c><00:26:26.789><c> to</c><00:26:26.970><c> interpret</c><00:26:27.510><c> them</c><00:26:27.779><c> in</c><00:26:27.960><c> a</c>

00:26:28.340 --> 00:26:28.350 align:start position:0%
data you have to interpret them in a
 

00:26:28.350 --> 00:26:30.010 align:start position:0%
data you have to interpret them in a
meaningful<00:26:28.980><c> and</c><00:26:29.159><c> reasonable</c><00:26:29.639><c> way</c>

00:26:30.010 --> 00:26:30.020 align:start position:0%
meaningful and reasonable way
 

00:26:30.020 --> 00:26:31.649 align:start position:0%
meaningful and reasonable way
you<00:26:30.230><c> have</c><00:26:30.440><c> to</c><00:26:30.590><c> understand</c><00:26:31.130><c> what's</c><00:26:31.279><c> happening</c>

00:26:31.649 --> 00:26:31.659 align:start position:0%
you have to understand what's happening
 

00:26:31.659 --> 00:26:34.930 align:start position:0%
you have to understand what's happening
so<00:26:32.659><c> this</c><00:26:33.080><c> is</c><00:26:33.260><c> the</c><00:26:33.520><c> pessimistic</c><00:26:34.520><c> view</c><00:26:34.700><c> on</c><00:26:34.820><c> this</c>

00:26:34.930 --> 00:26:34.940 align:start position:0%
so this is the pessimistic view on this
 

00:26:34.940 --> 00:26:36.820 align:start position:0%
so this is the pessimistic view on this
raft<00:26:35.270><c> the</c><00:26:35.659><c> optimistic</c><00:26:36.110><c> view</c><00:26:36.289><c> in</c><00:26:36.440><c> this</c><00:26:36.559><c> result</c>

00:26:36.820 --> 00:26:36.830 align:start position:0%
raft the optimistic view in this result
 

00:26:36.830 --> 00:26:38.889 align:start position:0%
raft the optimistic view in this result
and<00:26:37.070><c> this</c><00:26:37.190><c> is</c><00:26:37.340><c> what</c><00:26:37.460><c> I</c><00:26:37.490><c> want</c><00:26:37.760><c> you</c><00:26:37.880><c> to</c><00:26:37.909><c> you</c><00:26:38.539><c> do</c>

00:26:38.889 --> 00:26:38.899 align:start position:0%
and this is what I want you to you do
 

00:26:38.899 --> 00:26:40.750 align:start position:0%
and this is what I want you to you do
you<00:26:39.020><c> understand</c><00:26:39.500><c> from</c><00:26:39.590><c> this</c><00:26:39.770><c> number</c><00:26:39.919><c> it</c><00:26:40.429><c> that</c>

00:26:40.750 --> 00:26:40.760 align:start position:0%
you understand from this number it that
 

00:26:40.760 --> 00:26:44.860 align:start position:0%
you understand from this number it that
is<00:26:40.909><c> possible</c><00:26:41.480><c> that</c><00:26:42.320><c> programs</c><00:26:43.659><c> written</c><00:26:44.659><c> in</c>

00:26:44.860 --> 00:26:44.870 align:start position:0%
is possible that programs written in
 

00:26:44.870 --> 00:26:47.950 align:start position:0%
is possible that programs written in
Java<00:26:45.520><c> running</c><00:26:46.520><c> on</c><00:26:46.669><c> the</c><00:26:46.789><c> JVM</c><00:26:47.090><c> will</c><00:26:47.779><c> be</c>

00:26:47.950 --> 00:26:47.960 align:start position:0%
Java running on the JVM will be
 

00:26:47.960 --> 00:26:50.710 align:start position:0%
Java running on the JVM will be
significantly<00:26:48.799><c> faster</c><00:26:49.039><c> if</c><00:26:49.610><c> you</c><00:26:50.120><c> run</c><00:26:50.299><c> them</c><00:26:50.539><c> on</c>

00:26:50.710 --> 00:26:50.720 align:start position:0%
significantly faster if you run them on
 

00:26:50.720 --> 00:26:52.149 align:start position:0%
significantly faster if you run them on
the<00:26:51.500><c> ground</c><00:26:51.740><c> VM</c>

00:26:52.149 --> 00:26:52.159 align:start position:0%
the ground VM
 

00:26:52.159 --> 00:26:54.730 align:start position:0%
the ground VM
right<00:26:52.850><c> it</c><00:26:53.270><c> doesn't</c><00:26:53.779><c> have</c><00:26:54.080><c> to</c><00:26:54.200><c> be</c><00:26:54.320><c> like</c><00:26:54.500><c> three</c>

00:26:54.730 --> 00:26:54.740 align:start position:0%
right it doesn't have to be like three
 

00:26:54.740 --> 00:26:57.870 align:start position:0%
right it doesn't have to be like three
times<00:26:54.980><c> faster</c><00:26:55.460><c> but</c><00:26:56.120><c> even</c><00:26:56.510><c> if</c><00:26:56.630><c> you</c><00:26:56.840><c> get</c><00:26:57.260><c> a</c><00:26:57.440><c> 20%</c>

00:26:57.870 --> 00:26:57.880 align:start position:0%
times faster but even if you get a 20%
 

00:26:57.880 --> 00:27:01.990 align:start position:0%
times faster but even if you get a 20%
performance<00:26:58.880><c> boost</c><00:26:59.090><c> that</c><00:26:59.690><c> is</c><00:26:59.809><c> a</c><00:26:59.840><c> lot</c><00:27:00.520><c> right</c><00:27:01.520><c> so</c>

00:27:01.990 --> 00:27:02.000 align:start position:0%
performance boost that is a lot right so
 

00:27:02.000 --> 00:27:06.370 align:start position:0%
performance boost that is a lot right so
if<00:27:02.360><c> this</c><00:27:02.659><c> doesn't</c><00:27:02.899><c> convince</c><00:27:03.200><c> you</c><00:27:03.440><c> to</c><00:27:05.320><c> at</c><00:27:06.320><c> least</c>

00:27:06.370 --> 00:27:06.380 align:start position:0%
if this doesn't convince you to at least
 

00:27:06.380 --> 00:27:09.010 align:start position:0%
if this doesn't convince you to at least
evaluate<00:27:06.980><c> probiem</c><00:27:07.450><c> then</c><00:27:08.450><c> i'm</c><00:27:08.570><c> gonna</c><00:27:08.720><c> show</c><00:27:08.960><c> you</c>

00:27:09.010 --> 00:27:09.020 align:start position:0%
evaluate probiem then i'm gonna show you
 

00:27:09.020 --> 00:27:12.279 align:start position:0%
evaluate probiem then i'm gonna show you
more<00:27:09.260><c> slides</c><00:27:09.590><c> about</c><00:27:09.890><c> this</c><00:27:10.100><c> i</c><00:27:11.110><c> want</c><00:27:12.110><c> to</c><00:27:12.200><c> say</c>

00:27:12.279 --> 00:27:12.289 align:start position:0%
more slides about this i want to say
 

00:27:12.289 --> 00:27:14.620 align:start position:0%
more slides about this i want to say
nothing<00:27:12.740><c> willed</c><00:27:12.950><c> but</c><00:27:13.159><c> actually</c><00:27:14.090><c> maybe</c><00:27:14.360><c> some</c>

00:27:14.620 --> 00:27:14.630 align:start position:0%
nothing willed but actually maybe some
 

00:27:14.630 --> 00:27:16.930 align:start position:0%
nothing willed but actually maybe some
other<00:27:14.750><c> things</c><00:27:15.020><c> well</c><00:27:15.279><c> alright</c><00:27:16.279><c> so</c><00:27:16.429><c> internally</c>

00:27:16.930 --> 00:27:16.940 align:start position:0%
other things well alright so internally
 

00:27:16.940 --> 00:27:20.980 align:start position:0%
other things well alright so internally
we're<00:27:17.270><c> on</c><00:27:17.419><c> tons</c><00:27:17.690><c> of</c><00:27:17.809><c> benchmarks</c><00:27:18.429><c> and</c><00:27:19.429><c> we</c><00:27:19.990><c> get</c>

00:27:20.980 --> 00:27:20.990 align:start position:0%
we're on tons of benchmarks and we get
 

00:27:20.990 --> 00:27:23.919 align:start position:0%
we're on tons of benchmarks and we get
the<00:27:21.110><c> results</c><00:27:21.529><c> one</c><00:27:22.520><c> benchmark</c><00:27:23.360><c> seed</c><00:27:23.570><c> that</c><00:27:23.779><c> we</c>

00:27:23.919 --> 00:27:23.929 align:start position:0%
the results one benchmark seed that we
 

00:27:23.929 --> 00:27:28.330 align:start position:0%
the results one benchmark seed that we
recently<00:27:25.120><c> published</c><00:27:26.120><c> big</c><00:27:27.110><c> by</c><00:27:27.559><c> we</c><00:27:27.740><c> I</c><00:27:27.770><c> mean</c><00:27:27.919><c> the</c>

00:27:28.330 --> 00:27:28.340 align:start position:0%
recently published big by we I mean the
 

00:27:28.340 --> 00:27:30.610 align:start position:0%
recently published big by we I mean the
engineers<00:27:28.970><c> who</c><00:27:29.480><c> actually</c><00:27:29.600><c> do</c><00:27:30.049><c> performance</c>

00:27:30.610 --> 00:27:30.620 align:start position:0%
engineers who actually do performance
 

00:27:30.620 --> 00:27:33.310 align:start position:0%
engineers who actually do performance
was<00:27:31.340><c> the</c><00:27:31.370><c> Renaissance</c><00:27:31.760><c> it</c><00:27:32.210><c> what</c><00:27:32.840><c> we</c><00:27:32.960><c> wanted</c><00:27:33.230><c> to</c>

00:27:33.310 --> 00:27:33.320 align:start position:0%
was the Renaissance it what we wanted to
 

00:27:33.320 --> 00:27:36.610 align:start position:0%
was the Renaissance it what we wanted to
do<00:27:33.470><c> is</c><00:27:33.620><c> that</c><00:27:33.799><c> is</c><00:27:34.010><c> to</c><00:27:34.700><c> gather</c><00:27:35.450><c> the</c><00:27:35.960><c> stern</c><00:27:36.230><c> number</c>

00:27:36.610 --> 00:27:36.620 align:start position:0%
do is that is to gather the stern number
 

00:27:36.620 --> 00:27:39.610 align:start position:0%
do is that is to gather the stern number
of<00:27:36.830><c> use</c><00:27:37.490><c> cases</c><00:27:37.610><c> which</c><00:27:38.149><c> represent</c><00:27:38.750><c> modern</c><00:27:39.169><c> Java</c>

00:27:39.610 --> 00:27:39.620 align:start position:0%
of use cases which represent modern Java
 

00:27:39.620 --> 00:27:42.789 align:start position:0%
of use cases which represent modern Java
right<00:27:40.429><c> so</c><00:27:40.850><c> normal</c><00:27:41.510><c> benchmarks</c><00:27:42.080><c> we</c><00:27:42.440><c> run</c><00:27:42.649><c> the</c>

00:27:42.789 --> 00:27:42.799 align:start position:0%
right so normal benchmarks we run the
 

00:27:42.799 --> 00:27:46.090 align:start position:0%
right so normal benchmarks we run the
coppice<00:27:43.220><c> we</c><00:27:43.490><c> run</c><00:27:43.760><c> the</c><00:27:43.940><c> spec</c><00:27:44.510><c> JVM</c><00:27:45.020><c> spec</c><00:27:45.380><c> jbb</c><00:27:45.830><c> all</c>

00:27:46.090 --> 00:27:46.100 align:start position:0%
coppice we run the spec JVM spec jbb all
 

00:27:46.100 --> 00:27:48.700 align:start position:0%
coppice we run the spec JVM spec jbb all
of<00:27:46.460><c> those</c><00:27:46.669><c> we</c><00:27:47.059><c> see</c><00:27:47.330><c> those</c><00:27:47.539><c> numbers</c><00:27:47.779><c> but</c><00:27:48.529><c> we</c>

00:27:48.700 --> 00:27:48.710 align:start position:0%
of those we see those numbers but we
 

00:27:48.710 --> 00:27:50.500 align:start position:0%
of those we see those numbers but we
often<00:27:49.010><c> feel</c><00:27:49.250><c> that</c><00:27:49.279><c> they're</c><00:27:49.580><c> maybe</c><00:27:49.760><c> not</c><00:27:50.299><c> the</c>

00:27:50.500 --> 00:27:50.510 align:start position:0%
often feel that they're maybe not the
 

00:27:50.510 --> 00:27:52.149 align:start position:0%
often feel that they're maybe not the
most<00:27:50.539><c> representative</c><00:27:51.440><c> of</c><00:27:51.620><c> the</c><00:27:51.830><c> modern</c>

00:27:52.149 --> 00:27:52.159 align:start position:0%
most representative of the modern
 

00:27:52.159 --> 00:27:54.750 align:start position:0%
most representative of the modern
workloads<00:27:52.610><c> how</c><00:27:53.360><c> many</c><00:27:53.539><c> of</c><00:27:53.659><c> you</c><00:27:53.840><c> like</c><00:27:54.380><c> right</c>

00:27:54.750 --> 00:27:54.760 align:start position:0%
workloads how many of you like right
 

00:27:54.760 --> 00:27:58.090 align:start position:0%
workloads how many of you like right
fractals<00:27:55.760><c> for</c><00:27:56.090><c> living</c><00:27:56.440><c> how</c><00:27:57.440><c> many</c><00:27:57.620><c> of</c><00:27:57.740><c> you</c><00:27:57.860><c> deal</c>

00:27:58.090 --> 00:27:58.100 align:start position:0%
fractals for living how many of you deal
 

00:27:58.100 --> 00:28:01.210 align:start position:0%
fractals for living how many of you deal
low<00:27:58.340><c> level</c><00:27:58.730><c> math</c><00:27:59.500><c> clearly</c><00:28:00.500><c> that</c><00:28:00.679><c> code</c><00:28:01.010><c> gets</c>

00:28:01.210 --> 00:28:01.220 align:start position:0%
low level math clearly that code gets
 

00:28:01.220 --> 00:28:03.370 align:start position:0%
low level math clearly that code gets
running<00:28:02.090><c> right</c><00:28:02.480><c> because</c><00:28:02.779><c> that's</c><00:28:02.929><c> what</c><00:28:03.169><c> we</c>

00:28:03.370 --> 00:28:03.380 align:start position:0%
running right because that's what we
 

00:28:03.380 --> 00:28:05.830 align:start position:0%
running right because that's what we
build<00:28:03.649><c> on</c><00:28:03.799><c> as</c><00:28:03.980><c> a</c><00:28:04.010><c> foundation</c><00:28:04.730><c> it's</c><00:28:05.120><c> running</c><00:28:05.659><c> in</c>

00:28:05.830 --> 00:28:05.840 align:start position:0%
build on as a foundation it's running in
 

00:28:05.840 --> 00:28:07.600 align:start position:0%
build on as a foundation it's running in
the<00:28:05.960><c> infrastructure</c><00:28:06.470><c> is</c><00:28:06.799><c> the</c><00:28:07.070><c> code</c><00:28:07.250><c> like</c><00:28:07.580><c> that</c>

00:28:07.600 --> 00:28:07.610 align:start position:0%
the infrastructure is the code like that
 

00:28:07.610 --> 00:28:10.899 align:start position:0%
the infrastructure is the code like that
is<00:28:07.970><c> running</c><00:28:08.270><c> in</c><00:28:08.510><c> the</c><00:28:08.690><c> JVM</c><00:28:09.049><c> itself</c><00:28:09.409><c> in</c><00:28:10.159><c> the</c><00:28:10.399><c> JDK</c>

00:28:10.899 --> 00:28:10.909 align:start position:0%
is running in the JVM itself in the JDK
 

00:28:10.909 --> 00:28:13.299 align:start position:0%
is running in the JVM itself in the JDK
standard<00:28:11.270><c> of</c><00:28:11.330><c> library</c><00:28:11.659><c> but</c><00:28:12.260><c> maybe</c><00:28:12.559><c> maybe</c><00:28:13.070><c> we</c>

00:28:13.299 --> 00:28:13.309 align:start position:0%
standard of library but maybe maybe we
 

00:28:13.309 --> 00:28:15.070 align:start position:0%
standard of library but maybe maybe we
just<00:28:13.490><c> use</c><00:28:13.700><c> the</c><00:28:13.820><c> higher-level</c><00:28:14.210><c> libraries</c>

00:28:15.070 --> 00:28:15.080 align:start position:0%
just use the higher-level libraries
 

00:28:15.080 --> 00:28:18.010 align:start position:0%
just use the higher-level libraries
maybe<00:28:15.529><c> we</c><00:28:15.799><c> use</c><00:28:15.980><c> some</c><00:28:16.220><c> reactive</c><00:28:16.700><c> code</c><00:28:17.360><c> maybe</c><00:28:17.779><c> we</c>

00:28:18.010 --> 00:28:18.020 align:start position:0%
maybe we use some reactive code maybe we
 

00:28:18.020 --> 00:28:20.560 align:start position:0%
maybe we use some reactive code maybe we
use<00:28:18.350><c> some</c><00:28:18.559><c> reactive</c><00:28:18.919><c> extensions</c><00:28:19.330><c> maybe</c><00:28:20.330><c> we</c>

00:28:20.560 --> 00:28:20.570 align:start position:0%
use some reactive extensions maybe we
 

00:28:20.570 --> 00:28:24.970 align:start position:0%
use some reactive extensions maybe we
use<00:28:20.750><c> some</c><00:28:20.960><c> akka</c><00:28:21.250><c> maybe</c><00:28:22.250><c> we</c><00:28:22.610><c> do</c><00:28:23.120><c> some</c><00:28:23.980><c> Bayesian</c>

00:28:24.970 --> 00:28:24.980 align:start position:0%
use some akka maybe we do some Bayesian
 

00:28:24.980 --> 00:28:27.669 align:start position:0%
use some akka maybe we do some Bayesian
reasoning<00:28:25.010><c> sir</c><00:28:25.730><c> right</c><00:28:26.450><c> maybe</c><00:28:27.140><c> we</c><00:28:27.320><c> do</c><00:28:27.470><c> some</c>

00:28:27.669 --> 00:28:27.679 align:start position:0%
reasoning sir right maybe we do some
 

00:28:27.679 --> 00:28:29.620 align:start position:0%
reasoning sir right maybe we do some
newer<00:28:27.860><c> for</c><00:28:28.130><c> J</c><00:28:28.279><c> maybe</c><00:28:28.549><c> we</c><00:28:28.789><c> run</c><00:28:28.970><c> with</c><00:28:29.149><c> workloads</c>

00:28:29.620 --> 00:28:29.630 align:start position:0%
newer for J maybe we run with workloads
 

00:28:29.630 --> 00:28:31.570 align:start position:0%
newer for J maybe we run with workloads
where<00:28:29.870><c> the</c><00:28:30.110><c> tons</c><00:28:30.440><c> of</c><00:28:30.620><c> objects</c><00:28:31.070><c> in</c><00:28:31.159><c> memory</c><00:28:31.429><c> and</c>

00:28:31.570 --> 00:28:31.580 align:start position:0%
where the tons of objects in memory and
 

00:28:31.580 --> 00:28:33.760 align:start position:0%
where the tons of objects in memory and
they<00:28:31.909><c> are</c><00:28:32.029><c> they</c><00:28:32.419><c> are</c><00:28:32.570><c> they</c><00:28:32.840><c> are</c><00:28:32.870><c> just</c><00:28:33.380><c> sitting</c>

00:28:33.760 --> 00:28:33.770 align:start position:0%
they are they are they are just sitting
 

00:28:33.770 --> 00:28:35.769 align:start position:0%
they are they are they are just sitting
there<00:28:33.799><c> and</c><00:28:34.130><c> the</c><00:28:34.669><c> compiler</c><00:28:35.090><c> needs</c><00:28:35.419><c> different</c>

00:28:35.769 --> 00:28:35.779 align:start position:0%
there and the compiler needs different
 

00:28:35.779 --> 00:28:37.419 align:start position:0%
there and the compiler needs different
set<00:28:36.140><c> of</c><00:28:36.260><c> optimizations</c><00:28:36.890><c> to</c><00:28:37.039><c> show</c><00:28:37.190><c> good</c>

00:28:37.419 --> 00:28:37.429 align:start position:0%
set of optimizations to show good
 

00:28:37.429 --> 00:28:40.629 align:start position:0%
set of optimizations to show good
performance<00:28:37.909><c> and</c><00:28:38.029><c> O's</c><00:28:38.179><c> so</c><00:28:38.870><c> we</c><00:28:39.529><c> looked</c><00:28:40.490><c> at</c>

00:28:40.629 --> 00:28:40.639 align:start position:0%
performance and O's so we looked at
 

00:28:40.639 --> 00:28:42.670 align:start position:0%
performance and O's so we looked at
those<00:28:40.820><c> numbers</c><00:28:41.000><c> and</c><00:28:41.440><c> with</c>

00:28:42.670 --> 00:28:42.680 align:start position:0%
those numbers and with
 

00:28:42.680 --> 00:28:44.800 align:start position:0%
those numbers and with
that<00:28:42.830><c> the</c><00:28:42.980><c> the</c><00:28:43.430><c> Renaissance</c><00:28:43.940><c> benchmark</c><00:28:44.540><c> seat</c>

00:28:44.800 --> 00:28:44.810 align:start position:0%
that the the Renaissance benchmark seat
 

00:28:44.810 --> 00:28:47.470 align:start position:0%
that the the Renaissance benchmark seat
represents<00:28:45.620><c> modern</c><00:28:45.920><c> workloads</c><00:28:46.460><c> quite</c><00:28:47.240><c> well</c>

00:28:47.470 --> 00:28:47.480 align:start position:0%
represents modern workloads quite well
 

00:28:47.480 --> 00:28:50.560 align:start position:0%
represents modern workloads quite well
so<00:28:48.080><c> the</c><00:28:48.410><c> important</c><00:28:48.860><c> bit</c><00:28:49.010><c> here</c><00:28:49.280><c> is</c><00:28:49.550><c> to</c><00:28:50.240><c> notice</c>

00:28:50.560 --> 00:28:50.570 align:start position:0%
so the important bit here is to notice
 

00:28:50.570 --> 00:28:52.660 align:start position:0%
so the important bit here is to notice
that<00:28:50.840><c> the</c><00:28:51.470><c> gravity</c><00:28:52.010><c> I'm</c><00:28:52.100><c> Community</c><00:28:52.520><c> Edition</c>

00:28:52.660 --> 00:28:52.670 align:start position:0%
that the gravity I'm Community Edition
 

00:28:52.670 --> 00:28:56.050 align:start position:0%
that the gravity I'm Community Edition
is<00:28:53.090><c> a</c><00:28:53.840><c> little</c><00:28:54.110><c> bit</c><00:28:54.200><c> volatile</c><00:28:54.620><c> quite</c><00:28:55.490><c> often</c><00:28:55.730><c> is</c>

00:28:56.050 --> 00:28:56.060 align:start position:0%
is a little bit volatile quite often is
 

00:28:56.060 --> 00:29:00.280 align:start position:0%
is a little bit volatile quite often is
it<00:28:56.420><c> is</c><00:28:56.630><c> faster</c><00:28:57.200><c> than</c><00:28:57.590><c> openjdk</c><00:28:59.050><c> sometimes</c><00:29:00.050><c> it's</c>

00:29:00.280 --> 00:29:00.290 align:start position:0%
it is faster than openjdk sometimes it's
 

00:29:00.290 --> 00:29:03.910 align:start position:0%
it is faster than openjdk sometimes it's
a<00:29:00.380><c> little</c><00:29:00.470><c> bit</c><00:29:00.680><c> slower</c><00:29:01.570><c> we</c><00:29:02.570><c> run</c><00:29:02.810><c> many</c><00:29:03.650><c> many</c>

00:29:03.910 --> 00:29:03.920 align:start position:0%
a little bit slower we run many many
 

00:29:03.920 --> 00:29:05.950 align:start position:0%
a little bit slower we run many many
benchmarks<00:29:04.400><c> we</c><00:29:04.700><c> if</c><00:29:05.030><c> we</c><00:29:05.270><c> collapse</c><00:29:05.600><c> that</c><00:29:05.810><c> to</c><00:29:05.930><c> a</c>

00:29:05.950 --> 00:29:05.960 align:start position:0%
benchmarks we if we collapse that to a
 

00:29:05.960 --> 00:29:08.100 align:start position:0%
benchmarks we if we collapse that to a
single<00:29:06.110><c> number</c><00:29:06.350><c> Grand</c><00:29:07.280><c> Am</c><00:29:07.400><c> Community</c><00:29:07.820><c> Edition</c>

00:29:08.100 --> 00:29:08.110 align:start position:0%
single number Grand Am Community Edition
 

00:29:08.110 --> 00:29:11.170 align:start position:0%
single number Grand Am Community Edition
comes<00:29:09.460><c> approximately</c><00:29:10.460><c> one</c><00:29:10.670><c> percent</c><00:29:10.820><c> faster</c>

00:29:11.170 --> 00:29:11.180 align:start position:0%
comes approximately one percent faster
 

00:29:11.180 --> 00:29:15.460 align:start position:0%
comes approximately one percent faster
than<00:29:11.420><c> open</c><00:29:12.290><c> JDK</c><00:29:12.440><c> right</c><00:29:13.400><c> so</c><00:29:14.360><c> that's</c><00:29:15.110><c> an</c><00:29:15.290><c> average</c>

00:29:15.460 --> 00:29:15.470 align:start position:0%
than open JDK right so that's an average
 

00:29:15.470 --> 00:29:17.830 align:start position:0%
than open JDK right so that's an average
temperature<00:29:16.100><c> in</c><00:29:16.280><c> the</c><00:29:16.610><c> hospital</c><00:29:17.060><c> that</c><00:29:17.540><c> number</c>

00:29:17.830 --> 00:29:17.840 align:start position:0%
temperature in the hospital that number
 

00:29:17.840 --> 00:29:19.810 align:start position:0%
temperature in the hospital that number
tells<00:29:18.080><c> you</c><00:29:18.200><c> nothing</c><00:29:18.410><c> you</c><00:29:18.770><c> have</c><00:29:19.400><c> to</c><00:29:19.430><c> clearly</c>

00:29:19.810 --> 00:29:19.820 align:start position:0%
tells you nothing you have to clearly
 

00:29:19.820 --> 00:29:22.030 align:start position:0%
tells you nothing you have to clearly
evaluate<00:29:20.420><c> that</c><00:29:20.570><c> on</c><00:29:20.780><c> your</c><00:29:21.080><c> workload</c><00:29:21.560><c> on</c><00:29:21.740><c> your</c>

00:29:22.030 --> 00:29:22.040 align:start position:0%
evaluate that on your workload on your
 

00:29:22.040 --> 00:29:25.180 align:start position:0%
evaluate that on your workload on your
hardware<00:29:22.970><c> on</c><00:29:23.690><c> your</c><00:29:23.980><c> application</c><00:29:24.980><c> code</c>

00:29:25.180 --> 00:29:25.190 align:start position:0%
hardware on your application code
 

00:29:25.190 --> 00:29:27.820 align:start position:0%
hardware on your application code
patterns<00:29:25.670><c> and</c><00:29:25.940><c> what</c><00:29:26.570><c> we</c><00:29:26.720><c> see</c><00:29:26.930><c> there</c><00:29:27.140><c> is</c><00:29:27.290><c> very</c>

00:29:27.820 --> 00:29:27.830 align:start position:0%
patterns and what we see there is very
 

00:29:27.830 --> 00:29:30.610 align:start position:0%
patterns and what we see there is very
often<00:29:28.280><c> it</c><00:29:28.460><c> gives</c><00:29:29.000><c> you</c><00:29:29.210><c> good</c><00:29:30.080><c> performance</c>

00:29:30.610 --> 00:29:30.620 align:start position:0%
often it gives you good performance
 

00:29:30.620 --> 00:29:34.330 align:start position:0%
often it gives you good performance
boost<00:29:30.830><c> over</c><00:29:31.340><c> open</c><00:29:32.030><c> JDK</c><00:29:32.470><c> so</c><00:29:33.470><c> if</c><00:29:33.680><c> you</c><00:29:33.800><c> understand</c>

00:29:34.330 --> 00:29:34.340 align:start position:0%
boost over open JDK so if you understand
 

00:29:34.340 --> 00:29:36.010 align:start position:0%
boost over open JDK so if you understand
what<00:29:34.460><c> you're</c><00:29:34.610><c> doing</c><00:29:34.640><c> if</c><00:29:35.120><c> you</c><00:29:35.390><c> understand</c><00:29:35.900><c> the</c>

00:29:36.010 --> 00:29:36.020 align:start position:0%
what you're doing if you understand the
 

00:29:36.020 --> 00:29:37.570 align:start position:0%
what you're doing if you understand the
performance<00:29:36.200><c> patterns</c><00:29:36.830><c> of</c><00:29:36.950><c> your</c><00:29:37.070><c> application</c>

00:29:37.570 --> 00:29:37.580 align:start position:0%
performance patterns of your application
 

00:29:37.580 --> 00:29:40.390 align:start position:0%
performance patterns of your application
you<00:29:38.540><c> are</c><00:29:38.960><c> welcome</c><00:29:39.440><c> to</c><00:29:39.560><c> use</c><00:29:39.620><c> the</c><00:29:39.860><c> Community</c>

00:29:40.390 --> 00:29:40.400 align:start position:0%
you are welcome to use the Community
 

00:29:40.400 --> 00:29:42.430 align:start position:0%
you are welcome to use the Community
Edition<00:29:40.550><c> and</c><00:29:40.820><c> it</c><00:29:41.450><c> will</c><00:29:41.690><c> probably</c><00:29:42.170><c> give</c><00:29:42.320><c> you</c>

00:29:42.430 --> 00:29:42.440 align:start position:0%
Edition and it will probably give you
 

00:29:42.440 --> 00:29:45.130 align:start position:0%
Edition and it will probably give you
quite<00:29:42.740><c> a</c><00:29:42.800><c> performance</c><00:29:43.220><c> boost</c><00:29:43.780><c> the</c><00:29:44.780><c> Enterprise</c>

00:29:45.130 --> 00:29:45.140 align:start position:0%
quite a performance boost the Enterprise
 

00:29:45.140 --> 00:29:46.950 align:start position:0%
quite a performance boost the Enterprise
Edition<00:29:45.170><c> of</c><00:29:45.740><c> course</c><00:29:46.100><c> being</c><00:29:46.310><c> a</c><00:29:46.430><c> product</c>

00:29:46.950 --> 00:29:46.960 align:start position:0%
Edition of course being a product
 

00:29:46.960 --> 00:29:50.350 align:start position:0%
Edition of course being a product
probably<00:29:47.960><c> gives</c><00:29:48.170><c> you</c><00:29:48.410><c> a</c><00:29:48.620><c> much</c><00:29:49.160><c> more</c><00:29:49.430><c> a</c><00:29:49.760><c> better</c>

00:29:50.350 --> 00:29:50.360 align:start position:0%
probably gives you a much more a better
 

00:29:50.360 --> 00:29:52.120 align:start position:0%
probably gives you a much more a better
performance<00:29:50.810><c> boost</c><00:29:51.020><c> and</c><00:29:51.290><c> it's</c><00:29:51.440><c> universally</c>

00:29:52.120 --> 00:29:52.130 align:start position:0%
performance boost and it's universally
 

00:29:52.130 --> 00:29:55.660 align:start position:0%
performance boost and it's universally
faster<00:29:52.760><c> than</c><00:29:53.210><c> open</c><00:29:53.930><c> JDK</c><00:29:54.130><c> so</c><00:29:55.130><c> if</c><00:29:55.340><c> you</c><00:29:55.460><c> don't</c>

00:29:55.660 --> 00:29:55.670 align:start position:0%
faster than open JDK so if you don't
 

00:29:55.670 --> 00:29:57.610 align:start position:0%
faster than open JDK so if you don't
know<00:29:55.790><c> anything</c><00:29:56.120><c> about</c><00:29:56.210><c> performance</c><00:29:56.780><c> you</c><00:29:57.440><c> can</c>

00:29:57.610 --> 00:29:57.620 align:start position:0%
know anything about performance you can
 

00:29:57.620 --> 00:30:02.260 align:start position:0%
know anything about performance you can
you<00:29:57.980><c> can</c><00:29:58.160><c> look</c><00:29:58.610><c> into</c><00:29:58.910><c> getting</c><00:29:59.030><c> that</c><00:30:01.030><c> we</c><00:30:02.030><c> run</c>

00:30:02.260 --> 00:30:02.270 align:start position:0%
you can look into getting that we run
 

00:30:02.270 --> 00:30:04.450 align:start position:0%
you can look into getting that we run
other<00:30:02.510><c> benchmarks</c><00:30:03.020><c> as</c><00:30:03.140><c> well</c><00:30:03.320><c> and</c><00:30:03.500><c> we</c><00:30:04.250><c> often</c>

00:30:04.450 --> 00:30:04.460 align:start position:0%
other benchmarks as well and we often
 

00:30:04.460 --> 00:30:08.290 align:start position:0%
other benchmarks as well and we often
blog<00:30:04.880><c> about</c><00:30:06.130><c> what</c><00:30:07.130><c> what</c><00:30:07.520><c> happens</c><00:30:07.880><c> beside</c>

00:30:08.290 --> 00:30:08.300 align:start position:0%
blog about what what happens beside
 

00:30:08.300 --> 00:30:10.900 align:start position:0%
blog about what what happens beside
behind<00:30:08.630><c> the</c><00:30:08.780><c> scenes</c><00:30:09.050><c> with</c><00:30:10.010><c> the</c><00:30:10.040><c> ground</c><00:30:10.340><c> VM</c><00:30:10.520><c> so</c>

00:30:10.900 --> 00:30:10.910 align:start position:0%
behind the scenes with the ground VM so
 

00:30:10.910 --> 00:30:13.570 align:start position:0%
behind the scenes with the ground VM so
we<00:30:11.030><c> if</c><00:30:11.330><c> you</c><00:30:11.360><c> use</c><00:30:11.720><c> Java</c><00:30:12.410><c> 8</c><00:30:12.620><c> and</c><00:30:12.830><c> later</c><00:30:12.980><c> how</c><00:30:13.400><c> many</c>

00:30:13.570 --> 00:30:13.580 align:start position:0%
we if you use Java 8 and later how many
 

00:30:13.580 --> 00:30:16.020 align:start position:0%
we if you use Java 8 and later how many
of<00:30:13.640><c> you</c><00:30:13.730><c> use</c><00:30:13.850><c> run</c><00:30:14.300><c> Java</c><00:30:14.510><c> it's</c><00:30:14.690><c> in</c><00:30:14.780><c> production</c>

00:30:16.020 --> 00:30:16.030 align:start position:0%
of you use run Java it's in production
 

00:30:16.030 --> 00:30:19.000 align:start position:0%
of you use run Java it's in production
very<00:30:17.030><c> nice</c><00:30:17.240><c> almost</c><00:30:17.540><c> always</c><00:30:17.840><c> everyone</c><00:30:18.620><c> how</c>

00:30:19.000 --> 00:30:19.010 align:start position:0%
very nice almost always everyone how
 

00:30:19.010 --> 00:30:22.360 align:start position:0%
very nice almost always everyone how
many<00:30:19.160><c> of</c><00:30:19.250><c> you</c><00:30:19.370><c> run</c><00:30:19.520><c> Java</c><00:30:19.760><c> 9</c><00:30:19.970><c> plus</c><00:30:21.190><c> not</c><00:30:22.190><c> bad</c><00:30:22.340><c> I</c>

00:30:22.360 --> 00:30:22.370 align:start position:0%
many of you run Java 9 plus not bad I
 

00:30:22.370 --> 00:30:23.620 align:start position:0%
many of you run Java 9 plus not bad I
think<00:30:22.550><c> this</c><00:30:22.820><c> is</c><00:30:22.970><c> the</c><00:30:23.060><c> largest</c><00:30:23.300><c> percentage</c>

00:30:23.620 --> 00:30:23.630 align:start position:0%
think this is the largest percentage
 

00:30:23.630 --> 00:30:25.780 align:start position:0%
think this is the largest percentage
they've<00:30:24.170><c> seen</c><00:30:24.410><c> from</c><00:30:24.770><c> the</c><00:30:24.890><c> sessions</c><00:30:25.250><c> very</c><00:30:25.550><c> good</c>

00:30:25.780 --> 00:30:25.790 align:start position:0%
they've seen from the sessions very good
 

00:30:25.790 --> 00:30:27.970 align:start position:0%
they've seen from the sessions very good
you<00:30:25.970><c> are</c><00:30:26.000><c> very</c><00:30:26.120><c> up</c><00:30:26.750><c> to</c><00:30:27.020><c> date</c><00:30:27.170><c> with</c><00:30:27.350><c> the</c><00:30:27.500><c> common</c>

00:30:27.970 --> 00:30:27.980 align:start position:0%
you are very up to date with the common
 

00:30:27.980 --> 00:30:31.630 align:start position:0%
you are very up to date with the common
modern<00:30:28.190><c> Java</c><00:30:28.960><c> so</c><00:30:29.960><c> if</c><00:30:30.110><c> you</c><00:30:30.230><c> run</c><00:30:30.350><c> those</c><00:30:30.640><c> modern</c>

00:30:31.630 --> 00:30:31.640 align:start position:0%
modern Java so if you run those modern
 

00:30:31.640 --> 00:30:33.310 align:start position:0%
modern Java so if you run those modern
Chaves<00:30:31.940><c> you</c><00:30:32.090><c> probably</c><00:30:32.390><c> use</c><00:30:32.570><c> lambdas</c>

00:30:33.310 --> 00:30:33.320 align:start position:0%
Chaves you probably use lambdas
 

00:30:33.320 --> 00:30:34.780 align:start position:0%
Chaves you probably use lambdas
everywhere<00:30:33.740><c> you</c><00:30:33.890><c> probably</c><00:30:34.220><c> you</c><00:30:34.310><c> stream</c><00:30:34.640><c> API</c>

00:30:34.780 --> 00:30:34.790 align:start position:0%
everywhere you probably you stream API
 

00:30:34.790 --> 00:30:37.240 align:start position:0%
everywhere you probably you stream API
so<00:30:35.060><c> you</c><00:30:35.240><c> try</c><00:30:35.420><c> to</c><00:30:35.480><c> use</c><00:30:35.810><c> maybe</c><00:30:36.770><c> immutable</c><00:30:37.220><c> data</c>

00:30:37.240 --> 00:30:37.250 align:start position:0%
so you try to use maybe immutable data
 

00:30:37.250 --> 00:30:39.610 align:start position:0%
so you try to use maybe immutable data
structures<00:30:37.730><c> on</c><00:30:38.090><c> those</c><00:30:38.690><c> code</c><00:30:38.960><c> patterns</c><00:30:39.350><c> we</c>

00:30:39.610 --> 00:30:39.620 align:start position:0%
structures on those code patterns we
 

00:30:39.620 --> 00:30:41.100 align:start position:0%
structures on those code patterns we
should<00:30:39.800><c> really</c><00:30:40.130><c> go</c><00:30:40.250><c> to</c><00:30:40.280><c> performance</c><00:30:40.820><c> boost</c>

00:30:41.100 --> 00:30:41.110 align:start position:0%
should really go to performance boost
 

00:30:41.110 --> 00:30:43.840 align:start position:0%
should really go to performance boost
you<00:30:42.110><c> can</c><00:30:42.170><c> read</c><00:30:42.410><c> about</c><00:30:42.530><c> that</c><00:30:42.650><c> in</c><00:30:42.860><c> at</c><00:30:43.190><c> medium.com</c>

00:30:43.840 --> 00:30:43.850 align:start position:0%
you can read about that in at medium.com
 

00:30:43.850 --> 00:30:46.420 align:start position:0%
you can read about that in at medium.com
slash<00:30:44.300><c> ground</c><00:30:44.570><c> um</c><00:30:44.780><c> we</c><00:30:45.650><c> show</c><00:30:45.860><c> really</c><00:30:46.280><c> good</c>

00:30:46.420 --> 00:30:46.430 align:start position:0%
slash ground um we show really good
 

00:30:46.430 --> 00:30:48.610 align:start position:0%
slash ground um we show really good
numbers<00:30:46.820><c> for</c><00:30:46.850><c> scholar</c><00:30:47.330><c> because</c><00:30:48.260><c> Scala</c>

00:30:48.610 --> 00:30:48.620 align:start position:0%
numbers for scholar because Scala
 

00:30:48.620 --> 00:30:50.170 align:start position:0%
numbers for scholar because Scala
bytecode<00:30:49.430><c> patterns</c><00:30:49.700><c> are</c><00:30:49.850><c> a</c><00:30:49.910><c> little</c><00:30:50.030><c> bit</c>

00:30:50.170 --> 00:30:50.180 align:start position:0%
bytecode patterns are a little bit
 

00:30:50.180 --> 00:30:51.670 align:start position:0%
bytecode patterns are a little bit
different<00:30:50.510><c> from</c><00:30:50.630><c> the</c><00:30:50.720><c> normal</c><00:30:51.140><c> bytecode</c>

00:30:51.670 --> 00:30:51.680 align:start position:0%
different from the normal bytecode
 

00:30:51.680 --> 00:30:53.440 align:start position:0%
different from the normal bytecode
patterns<00:30:52.010><c> that</c><00:30:52.160><c> Java</c><00:30:52.790><c> programs</c><00:30:53.210><c> create</c>

00:30:53.440 --> 00:30:53.450 align:start position:0%
patterns that Java programs create
 

00:30:53.450 --> 00:30:55.660 align:start position:0%
patterns that Java programs create
because<00:30:53.690><c> unity</c><00:30:54.110><c> translates</c><00:30:54.740><c> like</c><00:30:55.280><c> a</c><00:30:55.310><c> higher</c>

00:30:55.660 --> 00:30:55.670 align:start position:0%
because unity translates like a higher
 

00:30:55.670 --> 00:30:56.620 align:start position:0%
because unity translates like a higher
level<00:30:56.030><c> at</c>

00:30:56.620 --> 00:30:56.630 align:start position:0%
level at
 

00:30:56.630 --> 00:30:59.800 align:start position:0%
level at
structions<00:30:57.200><c> to</c><00:30:57.890><c> the</c><00:30:58.070><c> bytecode</c><00:30:58.520><c> so</c><00:30:59.330><c> they</c><00:30:59.540><c> they</c>

00:30:59.800 --> 00:30:59.810 align:start position:0%
structions to the bytecode so they they
 

00:30:59.810 --> 00:31:01.480 align:start position:0%
structions to the bytecode so they they
do<00:30:59.870><c> it</c><00:31:00.020><c> a</c><00:31:00.050><c> little</c><00:31:00.230><c> bit</c><00:31:00.410><c> differently</c><00:31:00.770><c> and</c><00:31:00.980><c> we</c>

00:31:01.480 --> 00:31:01.490 align:start position:0%
do it a little bit differently and we
 

00:31:01.490 --> 00:31:05.830 align:start position:0%
do it a little bit differently and we
show<00:31:01.670><c> really</c><00:31:02.000><c> good</c><00:31:02.150><c> results</c><00:31:02.540><c> on</c><00:31:02.690><c> Scala</c><00:31:04.660><c> but</c><00:31:05.660><c> we</c>

00:31:05.830 --> 00:31:05.840 align:start position:0%
show really good results on Scala but we
 

00:31:05.840 --> 00:31:08.560 align:start position:0%
show really good results on Scala but we
also<00:31:06.020><c> we</c><00:31:06.620><c> also</c><00:31:06.860><c> are</c><00:31:07.730><c> trying</c><00:31:08.030><c> to</c><00:31:08.150><c> be</c><00:31:08.240><c> a</c><00:31:08.270><c> good</c>

00:31:08.560 --> 00:31:08.570 align:start position:0%
also we also are trying to be a good
 

00:31:08.570 --> 00:31:11.500 align:start position:0%
also we also are trying to be a good
open<00:31:08.990><c> source</c><00:31:09.170><c> project</c><00:31:09.560><c> so</c><00:31:09.800><c> now</c><00:31:10.670><c> in</c><00:31:11.090><c> the</c><00:31:11.300><c> ground</c>

00:31:11.500 --> 00:31:11.510 align:start position:0%
open source project so now in the ground
 

00:31:11.510 --> 00:31:14.740 align:start position:0%
open source project so now in the ground
VM<00:31:11.720><c> we</c><00:31:12.170><c> have</c><00:31:12.350><c> the</c><00:31:12.500><c> open</c><00:31:13.100><c> JDK</c><00:31:13.250><c> the</c><00:31:13.610><c> Java</c><00:31:13.750><c> hotspot</c>

00:31:14.740 --> 00:31:14.750 align:start position:0%
VM we have the open JDK the Java hotspot
 

00:31:14.750 --> 00:31:18.310 align:start position:0%
VM we have the open JDK the Java hotspot
vm<00:31:15.650><c> implementation</c><00:31:16.310><c> and</c><00:31:16.490><c> open</c><00:31:17.480><c> JDK</c><00:31:17.630><c> projects</c>

00:31:18.310 --> 00:31:18.320 align:start position:0%
vm implementation and open JDK projects
 

00:31:18.320 --> 00:31:21.490 align:start position:0%
vm implementation and open JDK projects
take<00:31:18.920><c> the</c><00:31:19.520><c> gray</c><00:31:19.820><c> vm</c><00:31:20.090><c> compiler</c><00:31:20.480><c> and</c><00:31:20.750><c> they</c><00:31:21.290><c> pull</c>

00:31:21.490 --> 00:31:21.500 align:start position:0%
take the gray vm compiler and they pull
 

00:31:21.500 --> 00:31:23.830 align:start position:0%
take the gray vm compiler and they pull
it<00:31:21.620><c> into</c><00:31:21.770><c> their</c><00:31:21.980><c> sources</c><00:31:22.460><c> because</c><00:31:23.060><c> well</c><00:31:23.360><c> open</c>

00:31:23.830 --> 00:31:23.840 align:start position:0%
it into their sources because well open
 

00:31:23.840 --> 00:31:27.240 align:start position:0%
it into their sources because well open
source<00:31:24.050><c> and</c><00:31:24.320><c> they</c><00:31:25.160><c> package</c><00:31:25.670><c> it</c><00:31:25.820><c> so</c><00:31:26.150><c> if</c><00:31:26.270><c> you</c><00:31:26.420><c> run</c>

00:31:27.240 --> 00:31:27.250 align:start position:0%
source and they package it so if you run
 

00:31:27.250 --> 00:31:30.940 align:start position:0%
source and they package it so if you run
java<00:31:28.250><c> I</c><00:31:28.490><c> think</c><00:31:28.730><c> ten</c><00:31:29.510><c> plus</c><00:31:29.810><c> maybe</c><00:31:30.440><c> nine</c><00:31:30.710><c> as</c><00:31:30.920><c> well</c>

00:31:30.940 --> 00:31:30.950 align:start position:0%
java I think ten plus maybe nine as well
 

00:31:30.950 --> 00:31:34.240 align:start position:0%
java I think ten plus maybe nine as well
what<00:31:31.760><c> you</c><00:31:31.880><c> can</c><00:31:32.060><c> do</c><00:31:32.240><c> you</c><00:31:32.870><c> can</c><00:31:33.080><c> enable</c><00:31:33.830><c> certain</c>

00:31:34.240 --> 00:31:34.250 align:start position:0%
what you can do you can enable certain
 

00:31:34.250 --> 00:31:36.880 align:start position:0%
what you can do you can enable certain
common<00:31:34.580><c> line</c><00:31:34.730><c> parameters</c><00:31:35.330><c> some</c><00:31:36.200><c> options</c><00:31:36.710><c> and</c>

00:31:36.880 --> 00:31:36.890 align:start position:0%
common line parameters some options and
 

00:31:36.890 --> 00:31:39.850 align:start position:0%
common line parameters some options and
you<00:31:37.520><c> can</c><00:31:37.550><c> get</c><00:31:38.030><c> the</c><00:31:38.360><c> version</c><00:31:39.110><c> of</c><00:31:39.440><c> the</c><00:31:39.560><c> grand-am</c>

00:31:39.850 --> 00:31:39.860 align:start position:0%
you can get the version of the grand-am
 

00:31:39.860 --> 00:31:43.600 align:start position:0%
you can get the version of the grand-am
compiler<00:31:40.690><c> inside</c><00:31:41.690><c> the</c><00:31:41.810><c> open</c><00:31:42.140><c> JDK</c><00:31:42.430><c> right</c><00:31:43.430><c> and</c>

00:31:43.600 --> 00:31:43.610 align:start position:0%
compiler inside the open JDK right and
 

00:31:43.610 --> 00:31:45.040 align:start position:0%
compiler inside the open JDK right and
you<00:31:43.730><c> don't</c><00:31:43.940><c> need</c><00:31:44.060><c> to</c><00:31:44.120><c> download</c><00:31:44.450><c> anything</c><00:31:44.810><c> else</c>

00:31:45.040 --> 00:31:45.050 align:start position:0%
you don't need to download anything else
 

00:31:45.050 --> 00:31:46.600 align:start position:0%
you don't need to download anything else
and<00:31:45.230><c> that</c><00:31:45.290><c> would</c><00:31:45.920><c> be</c><00:31:46.040><c> the</c><00:31:46.190><c> open</c><00:31:46.490><c> source</c>

00:31:46.600 --> 00:31:46.610 align:start position:0%
and that would be the open source
 

00:31:46.610 --> 00:31:48.820 align:start position:0%
and that would be the open source
version<00:31:47.000><c> of</c><00:31:47.090><c> the</c><00:31:47.150><c> compiler</c><00:31:47.420><c> it</c><00:31:47.990><c> probably</c><00:31:48.650><c> not</c>

00:31:48.820 --> 00:31:48.830 align:start position:0%
version of the compiler it probably not
 

00:31:48.830 --> 00:31:51.100 align:start position:0%
version of the compiler it probably not
be<00:31:49.010><c> like</c><00:31:49.340><c> latest</c><00:31:50.300><c> and</c><00:31:50.450><c> greatest</c><00:31:50.660><c> for</c><00:31:50.990><c> the</c>

00:31:51.100 --> 00:31:51.110 align:start position:0%
be like latest and greatest for the
 

00:31:51.110 --> 00:31:53.350 align:start position:0%
be like latest and greatest for the
ground<00:31:51.380><c> from</c><00:31:51.620><c> the</c><00:31:51.680><c> gray</c><00:31:51.950><c> layer</c><00:31:52.010><c> master</c><00:31:52.610><c> but</c><00:31:53.240><c> it</c>

00:31:53.350 --> 00:31:53.360 align:start position:0%
ground from the gray layer master but it
 

00:31:53.360 --> 00:31:55.240 align:start position:0%
ground from the gray layer master but it
will<00:31:53.480><c> be</c><00:31:53.660><c> one</c><00:31:54.080><c> when</c><00:31:54.410><c> they</c><00:31:54.530><c> pulled</c><00:31:54.830><c> these</c>

00:31:55.240 --> 00:31:55.250 align:start position:0%
will be one when they pulled these
 

00:31:55.250 --> 00:31:57.610 align:start position:0%
will be one when they pulled these
sources<00:31:55.700><c> into</c><00:31:56.240><c> the</c><00:31:56.360><c> open</c><00:31:56.600><c> JDK</c><00:31:56.720><c> forest</c><00:31:57.230><c> when</c>

00:31:57.610 --> 00:31:57.620 align:start position:0%
sources into the open JDK forest when
 

00:31:57.620 --> 00:32:00.940 align:start position:0%
sources into the open JDK forest when
they<00:31:57.710><c> patched</c><00:31:57.920><c> it</c><00:31:58.600><c> so</c><00:31:59.600><c> to</c><00:31:59.660><c> get</c><00:32:00.230><c> that</c><00:32:00.470><c> you</c><00:32:00.830><c> need</c>

00:32:00.940 --> 00:32:00.950 align:start position:0%
they patched it so to get that you need
 

00:32:00.950 --> 00:32:02.890 align:start position:0%
they patched it so to get that you need
to<00:32:01.130><c> unlock</c><00:32:01.490><c> experimental</c><00:32:02.120><c> vm</c><00:32:02.360><c> options</c><00:32:02.720><c> and</c>

00:32:02.890 --> 00:32:02.900 align:start position:0%
to unlock experimental vm options and
 

00:32:02.900 --> 00:32:07.540 align:start position:0%
to unlock experimental vm options and
use<00:32:03.770><c> JVM</c><00:32:04.160><c> Sai</c><00:32:04.370><c> compiler</c><00:32:04.820><c> and</c><00:32:05.140><c> with</c><00:32:06.140><c> those</c><00:32:06.550><c> you</c>

00:32:07.540 --> 00:32:07.550 align:start position:0%
use JVM Sai compiler and with those you
 

00:32:07.550 --> 00:32:08.800 align:start position:0%
use JVM Sai compiler and with those you
are<00:32:07.580><c> gonna</c><00:32:07.790><c> be</c><00:32:07.970><c> running</c><00:32:08.120><c> the</c><00:32:08.420><c> Grand</c><00:32:08.690><c> Am</c>

00:32:08.800 --> 00:32:08.810 align:start position:0%
are gonna be running the Grand Am
 

00:32:08.810 --> 00:32:12.990 align:start position:0%
are gonna be running the Grand Am
compiler<00:32:09.200><c> and</c><00:32:09.440><c> you're</c><00:32:10.250><c> gonna</c><00:32:10.400><c> be</c>

00:32:12.990 --> 00:32:13.000 align:start position:0%
 
 

00:32:13.000 --> 00:32:15.100 align:start position:0%
 
experiencing<00:32:14.000><c> different</c><00:32:14.480><c> performance</c>

00:32:15.100 --> 00:32:15.110 align:start position:0%
experiencing different performance
 

00:32:15.110 --> 00:32:17.740 align:start position:0%
experiencing different performance
patterns<00:32:15.410><c> in</c><00:32:15.620><c> your</c><00:32:15.890><c> application</c><00:32:16.540><c> if</c><00:32:17.540><c> you're</c>

00:32:17.740 --> 00:32:17.750 align:start position:0%
patterns in your application if you're
 

00:32:17.750 --> 00:32:19.690 align:start position:0%
patterns in your application if you're
asking<00:32:18.020><c> how</c><00:32:18.080><c> good</c><00:32:18.200><c> that</c><00:32:18.500><c> is</c>

00:32:19.690 --> 00:32:19.700 align:start position:0%
asking how good that is
 

00:32:19.700 --> 00:32:23.410 align:start position:0%
asking how good that is
it<00:32:20.360><c> depends</c><00:32:20.720><c> on</c><00:32:20.750><c> the</c><00:32:20.840><c> workload</c><00:32:21.020><c> so</c><00:32:21.950><c> we</c><00:32:22.490><c> the</c>

00:32:23.410 --> 00:32:23.420 align:start position:0%
it depends on the workload so we the
 

00:32:23.420 --> 00:32:25.210 align:start position:0%
it depends on the workload so we the
remember<00:32:23.720><c> of</c><00:32:23.810><c> benchmarks</c><00:32:24.230><c> where</c><00:32:24.830><c> we</c><00:32:25.010><c> should</c>

00:32:25.210 --> 00:32:25.220 align:start position:0%
remember of benchmarks where we should
 

00:32:25.220 --> 00:32:29.490 align:start position:0%
remember of benchmarks where we should
really<00:32:25.430><c> get</c><00:32:25.640><c> results</c><00:32:25.960><c> one</c><00:32:26.960><c> of</c><00:32:27.080><c> them</c><00:32:27.200><c> was</c><00:32:27.590><c> this</c>

00:32:29.490 --> 00:32:29.500 align:start position:0%
really get results one of them was this
 

00:32:29.500 --> 00:32:31.870 align:start position:0%
really get results one of them was this
appropriate<00:32:30.500><c> benchmark</c><00:32:30.920><c> which</c><00:32:31.190><c> which</c><00:32:31.460><c> people</c>

00:32:31.870 --> 00:32:31.880 align:start position:0%
appropriate benchmark which which people
 

00:32:31.880 --> 00:32:37.150 align:start position:0%
appropriate benchmark which which people
show<00:32:32.470><c> when</c><00:32:33.470><c> they</c><00:32:33.560><c> want</c><00:32:33.770><c> to</c><00:32:35.680><c> explain</c><00:32:36.680><c> what</c>

00:32:37.150 --> 00:32:37.160 align:start position:0%
show when they want to explain what
 

00:32:37.160 --> 00:32:40.030 align:start position:0%
show when they want to explain what
values<00:32:37.520><c> the</c><00:32:37.730><c> value</c><00:32:38.210><c> types</c><00:32:38.450><c> will</c><00:32:38.720><c> bring</c><00:32:38.930><c> you</c><00:32:39.080><c> so</c>

00:32:40.030 --> 00:32:40.040 align:start position:0%
values the value types will bring you so
 

00:32:40.040 --> 00:32:41.260 align:start position:0%
values the value types will bring you so
it's<00:32:40.190><c> a</c><00:32:40.220><c> benchmark</c><00:32:40.460><c> where</c><00:32:40.760><c> you</c><00:32:40.940><c> multiply</c>

00:32:41.260 --> 00:32:41.270 align:start position:0%
it's a benchmark where you multiply
 

00:32:41.270 --> 00:32:44.080 align:start position:0%
it's a benchmark where you multiply
matrices<00:32:41.870><c> and</c><00:32:42.230><c> of</c><00:32:42.950><c> complex</c><00:32:43.520><c> numbers</c><00:32:43.850><c> a</c>

00:32:44.080 --> 00:32:44.090 align:start position:0%
matrices and of complex numbers a
 

00:32:44.090 --> 00:32:45.790 align:start position:0%
matrices and of complex numbers a
complex<00:32:44.570><c> number</c><00:32:44.750><c> is</c><00:32:44.990><c> a</c><00:32:45.020><c> number</c><00:32:45.290><c> consisting</c><00:32:45.770><c> of</c>

00:32:45.790 --> 00:32:45.800 align:start position:0%
complex number is a number consisting of
 

00:32:45.800 --> 00:32:47.410 align:start position:0%
complex number is a number consisting of
two<00:32:45.980><c> parts</c><00:32:46.280><c> right</c><00:32:46.580><c> there</c><00:32:46.790><c> are</c><00:32:46.880><c> two</c><00:32:47.060><c> doubles</c>

00:32:47.410 --> 00:32:47.420 align:start position:0%
two parts right there are two doubles
 

00:32:47.420 --> 00:32:49.260 align:start position:0%
two parts right there are two doubles
inside<00:32:47.780><c> it</c><00:32:47.930><c> and</c><00:32:48.140><c> in</c><00:32:48.770><c> this</c><00:32:48.950><c> particular</c>

00:32:49.260 --> 00:32:49.270 align:start position:0%
inside it and in this particular
 

00:32:49.270 --> 00:32:51.460 align:start position:0%
inside it and in this particular
benchmark<00:32:50.270><c> the</c><00:32:50.750><c> complex</c><00:32:51.140><c> number</c><00:32:51.350><c> is</c>

00:32:51.460 --> 00:32:51.470 align:start position:0%
benchmark the complex number is
 

00:32:51.470 --> 00:32:52.660 align:start position:0%
benchmark the complex number is
implemented<00:32:51.920><c> as</c><00:32:52.040><c> an</c><00:32:52.160><c> immutable</c><00:32:52.460><c> data</c>

00:32:52.660 --> 00:32:52.670 align:start position:0%
implemented as an immutable data
 

00:32:52.670 --> 00:32:54.820 align:start position:0%
implemented as an immutable data
structure<00:32:53.270><c> which</c><00:32:53.780><c> is</c><00:32:53.930><c> very</c><00:32:53.990><c> good</c><00:32:54.320><c> because</c><00:32:54.650><c> as</c>

00:32:54.820 --> 00:32:54.830 align:start position:0%
structure which is very good because as
 

00:32:54.830 --> 00:32:56.830 align:start position:0%
structure which is very good because as
developers<00:32:55.400><c> this</c><00:32:55.820><c> is</c><00:32:55.970><c> what</c><00:32:56.120><c> we</c><00:32:56.210><c> want</c><00:32:56.390><c> we</c><00:32:56.630><c> want</c>

00:32:56.830 --> 00:32:56.840 align:start position:0%
developers this is what we want we want
 

00:32:56.840 --> 00:32:58.780 align:start position:0%
developers this is what we want we want
programs<00:32:57.410><c> that</c><00:32:57.650><c> they</c><00:32:57.740><c> are</c><00:32:57.890><c> easy</c><00:32:58.220><c> to</c><00:32:58.460><c> reason</c>

00:32:58.780 --> 00:32:58.790 align:start position:0%
programs that they are easy to reason
 

00:32:58.790 --> 00:33:00.730 align:start position:0%
programs that they are easy to reason
about<00:32:58.880><c> that</c><00:32:59.480><c> are</c><00:32:59.630><c> easy</c><00:32:59.870><c> to</c><00:33:00.140><c> debug</c><00:33:00.500><c> and</c>

00:33:00.730 --> 00:33:00.740 align:start position:0%
about that are easy to debug and
 

00:33:00.740 --> 00:33:02.740 align:start position:0%
about that are easy to debug and
immutable<00:33:01.250><c> data</c><00:33:01.490><c> structures</c><00:33:01.880><c> very</c><00:33:02.360><c> often</c>

00:33:02.740 --> 00:33:02.750 align:start position:0%
immutable data structures very often
 

00:33:02.750 --> 00:33:05.170 align:start position:0%
immutable data structures very often
offer<00:33:02.960><c> us</c><00:33:03.230><c> exactly</c><00:33:04.070><c> that</c><00:33:04.310><c> it's</c><00:33:04.610><c> very</c><00:33:04.820><c> hard</c><00:33:05.090><c> to</c>

00:33:05.170 --> 00:33:05.180 align:start position:0%
offer us exactly that it's very hard to
 

00:33:05.180 --> 00:33:08.200 align:start position:0%
offer us exactly that it's very hard to
figure<00:33:05.510><c> out</c><00:33:05.630><c> what</c><00:33:06.020><c> mutates</c><00:33:06.800><c> global</c><00:33:07.220><c> state</c><00:33:07.430><c> but</c>

00:33:08.200 --> 00:33:08.210 align:start position:0%
figure out what mutates global state but
 

00:33:08.210 --> 00:33:10.120 align:start position:0%
figure out what mutates global state but
immutable<00:33:08.690><c> data</c><00:33:08.720><c> structures</c><00:33:09.170><c> are</c>

00:33:10.120 --> 00:33:10.130 align:start position:0%
immutable data structures are
 

00:33:10.130 --> 00:33:12.220 align:start position:0%
immutable data structures are
good<00:33:10.340><c> for</c><00:33:10.670><c> reasoning</c><00:33:11.450><c> and</c><00:33:11.600><c> understanding</c>

00:33:12.220 --> 00:33:12.230 align:start position:0%
good for reasoning and understanding
 

00:33:12.230 --> 00:33:14.590 align:start position:0%
good for reasoning and understanding
what<00:33:12.740><c> they're</c><00:33:12.860><c> bad</c><00:33:13.100><c> at</c><00:33:13.370><c> is</c><00:33:13.580><c> that</c><00:33:14.300><c> any</c>

00:33:14.590 --> 00:33:14.600 align:start position:0%
what they're bad at is that any
 

00:33:14.600 --> 00:33:16.000 align:start position:0%
what they're bad at is that any
operation<00:33:15.350><c> with</c><00:33:15.560><c> the</c><00:33:15.590><c> immutable</c><00:33:15.950><c> data</c>

00:33:16.000 --> 00:33:16.010 align:start position:0%
operation with the immutable data
 

00:33:16.010 --> 00:33:19.630 align:start position:0%
operation with the immutable data
structures<00:33:16.400><c> which</c><00:33:17.090><c> normally</c><00:33:18.430><c> create</c><00:33:19.430><c> new</c>

00:33:19.630 --> 00:33:19.640 align:start position:0%
structures which normally create new
 

00:33:19.640 --> 00:33:24.340 align:start position:0%
structures which normally create new
objects<00:33:20.120><c> right</c><00:33:20.600><c> when</c><00:33:20.900><c> we</c><00:33:21.080><c> do</c><00:33:21.320><c> any</c><00:33:21.710><c> mobile</c><00:33:23.350><c> when</c>

00:33:24.340 --> 00:33:24.350 align:start position:0%
objects right when we do any mobile when
 

00:33:24.350 --> 00:33:27.250 align:start position:0%
objects right when we do any mobile when
we<00:33:24.500><c> do</c><00:33:24.680><c> any</c><00:33:24.950><c> well</c><00:33:25.490><c> any</c><00:33:26.180><c> math</c><00:33:26.480><c> operations</c><00:33:27.080><c> there</c>

00:33:27.250 --> 00:33:27.260 align:start position:0%
we do any well any math operations there
 

00:33:27.260 --> 00:33:29.530 align:start position:0%
we do any well any math operations there
right<00:33:27.740><c> we</c><00:33:27.920><c> create</c><00:33:28.220><c> new</c><00:33:28.460><c> objects</c><00:33:29.030><c> all</c><00:33:29.180><c> the</c><00:33:29.300><c> time</c>

00:33:29.530 --> 00:33:29.540 align:start position:0%
right we create new objects all the time
 

00:33:29.540 --> 00:33:31.810 align:start position:0%
right we create new objects all the time
so<00:33:30.260><c> grandi</c><00:33:30.830><c> I'm</c><00:33:30.920><c> compiler</c><00:33:31.250><c> comes</c><00:33:31.610><c> with</c><00:33:31.790><c> a</c>

00:33:31.810 --> 00:33:31.820 align:start position:0%
so grandi I'm compiler comes with a
 

00:33:31.820 --> 00:33:34.600 align:start position:0%
so grandi I'm compiler comes with a
really<00:33:32.120><c> good</c><00:33:32.240><c> escape</c><00:33:32.570><c> analysis</c><00:33:33.080><c> and</c><00:33:33.460><c> it</c><00:33:34.460><c> can</c>

00:33:34.600 --> 00:33:34.610 align:start position:0%
really good escape analysis and it can
 

00:33:34.610 --> 00:33:36.040 align:start position:0%
really good escape analysis and it can
eliminate<00:33:34.820><c> almost</c><00:33:35.240><c> all</c><00:33:35.570><c> those</c><00:33:35.720><c> allocations</c>

00:33:36.040 --> 00:33:36.050 align:start position:0%
eliminate almost all those allocations
 

00:33:36.050 --> 00:33:39.790 align:start position:0%
eliminate almost all those allocations
much<00:33:37.040><c> better</c><00:33:37.370><c> than</c><00:33:37.700><c> CT</c><00:33:38.030><c> good</c><00:33:38.450><c> so</c><00:33:39.320><c> when</c><00:33:39.470><c> we</c><00:33:39.590><c> run</c>

00:33:39.790 --> 00:33:39.800 align:start position:0%
much better than CT good so when we run
 

00:33:39.800 --> 00:33:44.290 align:start position:0%
much better than CT good so when we run
this<00:33:40.270><c> on</c><00:33:41.270><c> jdk</c><00:33:41.900><c> 11</c><00:33:42.170><c> again</c><00:33:43.040><c> on</c><00:33:43.220><c> this</c><00:33:43.820><c> poor</c>

00:33:44.290 --> 00:33:44.300 align:start position:0%
this on jdk 11 again on this poor
 

00:33:44.300 --> 00:33:47.770 align:start position:0%
this on jdk 11 again on this poor
macbook<00:33:45.430><c> don't</c><00:33:46.430><c> trust</c><00:33:46.700><c> those</c><00:33:46.910><c> numbers</c><00:33:47.210><c> but</c>

00:33:47.770 --> 00:33:47.780 align:start position:0%
macbook don't trust those numbers but
 

00:33:47.780 --> 00:33:51.130 align:start position:0%
macbook don't trust those numbers but
you<00:33:48.290><c> can</c><00:33:48.440><c> trust</c><00:33:48.620><c> the</c><00:33:48.890><c> difference</c><00:33:49.250><c> in</c><00:33:49.400><c> those</c><00:33:50.140><c> we</c>

00:33:51.130 --> 00:33:51.140 align:start position:0%
you can trust the difference in those we
 

00:33:51.140 --> 00:33:53.170 align:start position:0%
you can trust the difference in those we
get<00:33:51.410><c> with</c><00:33:51.890><c> the</c><00:33:52.070><c> ground</c><00:33:52.280><c> vm</c><00:33:52.460><c> compiler</c><00:33:52.850><c> from</c>

00:33:53.170 --> 00:33:53.180 align:start position:0%
get with the ground vm compiler from
 

00:33:53.180 --> 00:33:55.540 align:start position:0%
get with the ground vm compiler from
open<00:33:53.750><c> JDK</c><00:33:53.900><c> we</c><00:33:54.440><c> get</c><00:33:54.620><c> approximately</c><00:33:54.860><c> 2x</c>

00:33:55.540 --> 00:33:55.550 align:start position:0%
open JDK we get approximately 2x
 

00:33:55.550 --> 00:33:58.480 align:start position:0%
open JDK we get approximately 2x
speed-up<00:33:56.020><c> again</c><00:33:57.050><c> that</c><00:33:57.800><c> won't</c><00:33:58.040><c> be</c><00:33:58.250><c> your</c>

00:33:58.480 --> 00:33:58.490 align:start position:0%
speed-up again that won't be your
 

00:33:58.490 --> 00:34:00.040 align:start position:0%
speed-up again that won't be your
typical<00:33:58.730><c> speed</c><00:33:59.090><c> up</c><00:33:59.210><c> on</c><00:33:59.390><c> any</c><00:33:59.660><c> normal</c>

00:34:00.040 --> 00:34:00.050 align:start position:0%
typical speed up on any normal
 

00:34:00.050 --> 00:34:02.110 align:start position:0%
typical speed up on any normal
application<00:34:00.310><c> but</c><00:34:01.310><c> this</c><00:34:01.460><c> is</c><00:34:01.610><c> something</c><00:34:01.970><c> to</c>

00:34:02.110 --> 00:34:02.120 align:start position:0%
application but this is something to
 

00:34:02.120 --> 00:34:04.780 align:start position:0%
application but this is something to
look<00:34:02.450><c> into</c><00:34:02.780><c> the</c><00:34:03.650><c> Enterprise</c><00:34:04.280><c> Edition</c><00:34:04.310><c> is</c>

00:34:04.780 --> 00:34:04.790 align:start position:0%
look into the Enterprise Edition is
 

00:34:04.790 --> 00:34:07.900 align:start position:0%
look into the Enterprise Edition is
still<00:34:05.090><c> a</c><00:34:05.270><c> little</c><00:34:05.660><c> bit</c><00:34:05.840><c> faster</c><00:34:06.730><c> but</c><00:34:07.730><c> the</c>

00:34:07.900 --> 00:34:07.910 align:start position:0%
still a little bit faster but the
 

00:34:07.910 --> 00:34:10.149 align:start position:0%
still a little bit faster but the
grand-am<00:34:08.330><c> Community</c><00:34:08.780><c> Edition</c><00:34:08.990><c> is</c><00:34:09.560><c> really</c>

00:34:10.149 --> 00:34:10.159 align:start position:0%
grand-am Community Edition is really
 

00:34:10.159 --> 00:34:13.270 align:start position:0%
grand-am Community Edition is really
really<00:34:10.340><c> good</c><00:34:10.550><c> too</c><00:34:11.350><c> so</c><00:34:12.350><c> you</c><00:34:12.409><c> can</c><00:34:12.620><c> you</c><00:34:12.889><c> can</c><00:34:13.040><c> you</c>

00:34:13.270 --> 00:34:13.280 align:start position:0%
really good too so you can you can you
 

00:34:13.280 --> 00:34:15.399 align:start position:0%
really good too so you can you can you
should<00:34:13.310><c> look</c><00:34:13.520><c> into</c><00:34:13.700><c> that</c><00:34:13.790><c> right</c><00:34:14.260><c> Twitter</c><00:34:15.260><c> is</c>

00:34:15.399 --> 00:34:15.409 align:start position:0%
should look into that right Twitter is
 

00:34:15.409 --> 00:34:16.720 align:start position:0%
should look into that right Twitter is
one<00:34:15.560><c> company</c><00:34:15.860><c> that</c><00:34:15.950><c> is</c><00:34:16.129><c> using</c><00:34:16.490><c> the</c><00:34:16.610><c> ground</c>

00:34:16.720 --> 00:34:16.730 align:start position:0%
one company that is using the ground
 

00:34:16.730 --> 00:34:18.159 align:start position:0%
one company that is using the ground
viim<00:34:16.940><c> compiler</c><00:34:17.330><c> the</c><00:34:17.600><c> run</c><00:34:17.750><c> there's</c><00:34:17.929><c> two</c><00:34:18.050><c> common</c>

00:34:18.159 --> 00:34:18.169 align:start position:0%
viim compiler the run there's two common
 

00:34:18.169 --> 00:34:20.860 align:start position:0%
viim compiler the run there's two common
microservices<00:34:18.830><c> they</c><00:34:19.639><c> travel</c><00:34:20.510><c> around</c><00:34:20.600><c> the</c>

00:34:20.860 --> 00:34:20.870 align:start position:0%
microservices they travel around the
 

00:34:20.870 --> 00:34:22.899 align:start position:0%
microservices they travel around the
world<00:34:21.020><c> and</c><00:34:21.290><c> talk</c><00:34:21.560><c> about</c><00:34:21.830><c> that</c><00:34:22.010><c> because</c><00:34:22.639><c> they</c>

00:34:22.899 --> 00:34:22.909 align:start position:0%
world and talk about that because they
 

00:34:22.909 --> 00:34:25.510 align:start position:0%
world and talk about that because they
want<00:34:23.179><c> you</c><00:34:23.750><c> to</c><00:34:24.440><c> run</c><00:34:24.620><c> the</c><00:34:24.770><c> ground</c><00:34:25.010><c> am</c><00:34:25.159><c> compiler</c>

00:34:25.510 --> 00:34:25.520 align:start position:0%
want you to run the ground am compiler
 

00:34:25.520 --> 00:34:27.940 align:start position:0%
want you to run the ground am compiler
as<00:34:25.760><c> well</c><00:34:26.000><c> because</c><00:34:26.810><c> that</c><00:34:26.990><c> means</c><00:34:27.200><c> the</c><00:34:27.590><c> compiler</c>

00:34:27.940 --> 00:34:27.950 align:start position:0%
as well because that means the compiler
 

00:34:27.950 --> 00:34:30.190 align:start position:0%
as well because that means the compiler
will<00:34:28.190><c> make</c><00:34:28.370><c> sure</c><00:34:28.520><c> much</c><00:34:28.790><c> faster</c><00:34:29.240><c> right</c><00:34:29.540><c> if</c><00:34:29.810><c> more</c>

00:34:30.190 --> 00:34:30.200 align:start position:0%
will make sure much faster right if more
 

00:34:30.200 --> 00:34:32.169 align:start position:0%
will make sure much faster right if more
people<00:34:30.350><c> run</c><00:34:30.710><c> their</c><00:34:30.889><c> code</c><00:34:31.129><c> we</c><00:34:31.850><c> using</c><00:34:32.060><c> this</c>

00:34:32.169 --> 00:34:32.179 align:start position:0%
people run their code we using this
 

00:34:32.179 --> 00:34:34.840 align:start position:0%
people run their code we using this
technology<00:34:32.679><c> the</c><00:34:33.679><c> more</c><00:34:33.889><c> stable</c><00:34:34.399><c> and</c><00:34:34.490><c> mature</c><00:34:34.580><c> it</c>

00:34:34.840 --> 00:34:34.850 align:start position:0%
technology the more stable and mature it
 

00:34:34.850 --> 00:34:36.850 align:start position:0%
technology the more stable and mature it
will<00:34:35.030><c> become</c><00:34:35.270><c> so</c><00:34:35.990><c> for</c><00:34:36.200><c> some</c><00:34:36.350><c> time</c><00:34:36.500><c> now</c><00:34:36.679><c> they</c>

00:34:36.850 --> 00:34:36.860 align:start position:0%
will become so for some time now they
 

00:34:36.860 --> 00:34:39.040 align:start position:0%
will become so for some time now they
don't<00:34:37.010><c> have</c><00:34:37.250><c> any</c><00:34:37.370><c> bugs</c><00:34:37.639><c> to</c><00:34:37.820><c> report</c><00:34:38.149><c> to</c><00:34:38.240><c> us</c><00:34:38.270><c> so</c><00:34:39.020><c> i</c>

00:34:39.040 --> 00:34:39.050 align:start position:0%
don't have any bugs to report to us so i
 

00:34:39.050 --> 00:34:41.590 align:start position:0%
don't have any bugs to report to us so i
think<00:34:39.440><c> they're</c><00:34:39.740><c> fairly</c><00:34:40.490><c> happy</c><00:34:40.760><c> and</c><00:34:41.060><c> what</c><00:34:41.510><c> they</c>

00:34:41.590 --> 00:34:41.600 align:start position:0%
think they're fairly happy and what they
 

00:34:41.600 --> 00:34:43.930 align:start position:0%
think they're fairly happy and what they
show<00:34:41.870><c> they</c><00:34:42.320><c> show</c><00:34:42.350><c> reduction</c><00:34:42.980><c> both</c><00:34:43.159><c> in</c><00:34:43.370><c> the</c><00:34:43.460><c> cpu</c>

00:34:43.930 --> 00:34:43.940 align:start position:0%
show they show reduction both in the cpu
 

00:34:43.940 --> 00:34:46.600 align:start position:0%
show they show reduction both in the cpu
user<00:34:44.179><c> time</c><00:34:44.480><c> and</c><00:34:44.720><c> they</c><00:34:45.649><c> show</c><00:34:45.830><c> reduction</c><00:34:46.310><c> in</c><00:34:46.460><c> the</c>

00:34:46.600 --> 00:34:46.610 align:start position:0%
user time and they show reduction in the
 

00:34:46.610 --> 00:34:49.090 align:start position:0%
user time and they show reduction in the
latencies<00:34:47.090><c> because</c><00:34:47.899><c> with</c><00:34:48.230><c> the</c><00:34:48.379><c> better</c><00:34:48.800><c> escape</c>

00:34:49.090 --> 00:34:49.100 align:start position:0%
latencies because with the better escape
 

00:34:49.100 --> 00:34:51.190 align:start position:0%
latencies because with the better escape
analysis<00:34:49.639><c> their</c><00:34:50.060><c> programs</c><00:34:50.450><c> do</c><00:34:50.540><c> not</c><00:34:50.570><c> allocate</c>

00:34:51.190 --> 00:34:51.200 align:start position:0%
analysis their programs do not allocate
 

00:34:51.200 --> 00:34:53.260 align:start position:0%
analysis their programs do not allocate
as<00:34:51.350><c> much</c><00:34:51.620><c> data</c><00:34:51.830><c> so</c><00:34:52.100><c> they</c><00:34:52.429><c> do</c><00:34:52.490><c> not</c><00:34:52.730><c> pressure</c><00:34:53.000><c> the</c>

00:34:53.260 --> 00:34:53.270 align:start position:0%
as much data so they do not pressure the
 

00:34:53.270 --> 00:34:57.340 align:start position:0%
as much data so they do not pressure the
garbage<00:34:53.540><c> collector</c><00:34:55.929><c> there</c><00:34:56.929><c> are</c><00:34:57.050><c> some</c><00:34:57.200><c> new</c>

00:34:57.340 --> 00:34:57.350 align:start position:0%
garbage collector there are some new
 

00:34:57.350 --> 00:34:59.430 align:start position:0%
garbage collector there are some new
developments<00:34:57.860><c> which</c><00:34:58.160><c> we</c><00:34:58.430><c> put</c><00:34:58.940><c> into</c><00:34:59.120><c> the</c>

00:34:59.430 --> 00:34:59.440 align:start position:0%
developments which we put into the
 

00:34:59.440 --> 00:35:02.560 align:start position:0%
developments which we put into the
recently<00:35:00.440><c> announced</c><00:35:00.830><c> the</c><00:35:00.920><c> ground</c><00:35:01.130><c> am</c><00:35:01.280><c> 19</c><00:35:01.700><c> one</c>

00:35:02.560 --> 00:35:02.570 align:start position:0%
recently announced the ground am 19 one
 

00:35:02.570 --> 00:35:04.150 align:start position:0%
recently announced the ground am 19 one
thing<00:35:02.780><c> is</c><00:35:02.930><c> that</c><00:35:03.110><c> we</c><00:35:03.230><c> compiled</c><00:35:03.620><c> the</c><00:35:03.770><c> gravity</c><00:35:04.070><c> M</c>

00:35:04.150 --> 00:35:04.160 align:start position:0%
thing is that we compiled the gravity M
 

00:35:04.160 --> 00:35:07.240 align:start position:0%
thing is that we compiled the gravity M
compiler<00:35:04.490><c> with</c><00:35:05.390><c> the</c><00:35:05.630><c> grand-am</c><00:35:06.200><c> compiler</c><00:35:06.620><c> to</c>

00:35:07.240 --> 00:35:07.250 align:start position:0%
compiler with the grand-am compiler to
 

00:35:07.250 --> 00:35:09.850 align:start position:0%
compiler with the grand-am compiler to
get<00:35:07.460><c> the</c><00:35:07.640><c> shirt</c><00:35:08.180><c> library</c><00:35:08.570><c> code</c><00:35:08.720><c> before</c><00:35:09.620><c> it</c><00:35:09.710><c> was</c>

00:35:09.850 --> 00:35:09.860 align:start position:0%
get the shirt library code before it was
 

00:35:09.860 --> 00:35:12.070 align:start position:0%
get the shirt library code before it was
a<00:35:09.890><c> jar</c><00:35:10.100><c> file</c><00:35:10.340><c> and</c><00:35:10.520><c> it</c><00:35:11.030><c> had</c><00:35:11.150><c> to</c><00:35:11.240><c> be</c><00:35:11.360><c> compiled</c><00:35:11.780><c> at</c>

00:35:12.070 --> 00:35:12.080 align:start position:0%
a jar file and it had to be compiled at
 

00:35:12.080 --> 00:35:14.800 align:start position:0%
a jar file and it had to be compiled at
runtime<00:35:12.590><c> and</c><00:35:13.040><c> it's</c><00:35:13.610><c> pressured</c><00:35:14.120><c> certain</c><00:35:14.450><c> parts</c>

00:35:14.800 --> 00:35:14.810 align:start position:0%
runtime and it's pressured certain parts
 

00:35:14.810 --> 00:35:18.460 align:start position:0%
runtime and it's pressured certain parts
of<00:35:14.900><c> the</c><00:35:15.160><c> JDM</c><00:35:16.160><c> infrastructure</c><00:35:16.850><c> as</c><00:35:17.720><c> like</c><00:35:18.350><c> it</c>

00:35:18.460 --> 00:35:18.470 align:start position:0%
of the JDM infrastructure as like it
 

00:35:18.470 --> 00:35:20.940 align:start position:0%
of the JDM infrastructure as like it
needed<00:35:18.710><c> to</c><00:35:18.890><c> compile</c><00:35:19.250><c> itself</c><00:35:19.730><c> and</c><00:35:20.000><c> that</c><00:35:20.360><c> wasn't</c>

00:35:20.940 --> 00:35:20.950 align:start position:0%
needed to compile itself and that wasn't
 

00:35:20.950 --> 00:35:23.870 align:start position:0%
needed to compile itself and that wasn't
super<00:35:21.950><c> fast</c><00:35:22.160><c> to</c><00:35:22.310><c> warm</c><00:35:22.610><c> up</c><00:35:22.790><c> so</c><00:35:23.150><c> now</c><00:35:23.330><c> it's</c>

00:35:23.870 --> 00:35:23.880 align:start position:0%
super fast to warm up so now it's
 

00:35:23.880 --> 00:35:26.960 align:start position:0%
super fast to warm up so now it's
precompiled<00:35:24.539><c> machine</c><00:35:25.349><c> code</c><00:35:25.589><c> and</c><00:35:25.799><c> it</c><00:35:26.640><c> will</c>

00:35:26.960 --> 00:35:26.970 align:start position:0%
precompiled machine code and it will
 

00:35:26.970 --> 00:35:29.269 align:start position:0%
precompiled machine code and it will
warm<00:35:27.240><c> up</c><00:35:27.450><c> immediately</c><00:35:28.140><c> fast</c><00:35:28.619><c> and</c><00:35:28.890><c> it</c><00:35:29.069><c> should</c>

00:35:29.269 --> 00:35:29.279 align:start position:0%
warm up immediately fast and it should
 

00:35:29.279 --> 00:35:31.819 align:start position:0%
warm up immediately fast and it should
exhibit<00:35:29.670><c> all</c><00:35:29.940><c> the</c><00:35:30.180><c> runtime</c><00:35:30.829><c> characteristics</c>

00:35:31.819 --> 00:35:31.829 align:start position:0%
exhibit all the runtime characteristics
 

00:35:31.829 --> 00:35:36.109 align:start position:0%
exhibit all the runtime characteristics
of<00:35:32.009><c> normal</c><00:35:32.819><c> JDM</c><00:35:33.210><c> with</c><00:35:33.539><c> CT</c><00:35:34.250><c> it</c><00:35:35.250><c> just</c><00:35:35.519><c> probably</c>

00:35:36.109 --> 00:35:36.119 align:start position:0%
of normal JDM with CT it just probably
 

00:35:36.119 --> 00:35:40.430 align:start position:0%
of normal JDM with CT it just probably
the<00:35:36.480><c> resulting</c><00:35:36.900><c> code</c><00:35:37.019><c> could</c><00:35:37.380><c> be</c><00:35:37.440><c> faster</c><00:35:39.440><c> woof</c>

00:35:40.430 --> 00:35:40.440 align:start position:0%
the resulting code could be faster woof
 

00:35:40.440 --> 00:35:42.499 align:start position:0%
the resulting code could be faster woof
let's<00:35:41.190><c> talk</c><00:35:41.339><c> about</c><00:35:41.460><c> polygons</c><00:35:42.029><c> really</c><00:35:42.329><c> really</c>

00:35:42.499 --> 00:35:42.509 align:start position:0%
let's talk about polygons really really
 

00:35:42.509 --> 00:35:44.960 align:start position:0%
let's talk about polygons really really
fast<00:35:42.690><c> because</c><00:35:43.049><c> I</c><00:35:43.349><c> want</c><00:35:43.589><c> to</c><00:35:43.680><c> get</c><00:35:43.799><c> to</c><00:35:43.980><c> the</c><00:35:44.250><c> next</c>

00:35:44.960 --> 00:35:44.970 align:start position:0%
fast because I want to get to the next
 

00:35:44.970 --> 00:35:47.660 align:start position:0%
fast because I want to get to the next
topic<00:35:45.150><c> and</c><00:35:45.480><c> there</c><00:35:45.990><c> are</c><00:35:46.079><c> not</c><00:35:46.500><c> super</c><00:35:47.369><c> minute</c>

00:35:47.660 --> 00:35:47.670 align:start position:0%
topic and there are not super minute
 

00:35:47.670 --> 00:35:49.549 align:start position:0%
topic and there are not super minute
much<00:35:47.849><c> time</c><00:35:48.089><c> right</c><00:35:48.690><c> let</c><00:35:49.079><c> me</c><00:35:49.170><c> show</c><00:35:49.349><c> you</c><00:35:49.410><c> an</c>

00:35:49.549 --> 00:35:49.559 align:start position:0%
much time right let me show you an
 

00:35:49.559 --> 00:35:52.069 align:start position:0%
much time right let me show you an
example<00:35:49.829><c> of</c><00:35:50.009><c> a</c><00:35:50.069><c> spring</c><00:35:50.339><c> application</c><00:35:50.940><c> where</c><00:35:51.750><c> we</c>

00:35:52.069 --> 00:35:52.079 align:start position:0%
example of a spring application where we
 

00:35:52.079 --> 00:35:55.700 align:start position:0%
example of a spring application where we
evaluate<00:35:52.819><c> code</c><00:35:53.819><c> in</c><00:35:54.089><c> our</c><00:35:54.329><c> this</c><00:35:55.200><c> is</c><00:35:55.319><c> the</c><00:35:55.410><c> code</c><00:35:55.559><c> in</c>

00:35:55.700 --> 00:35:55.710 align:start position:0%
evaluate code in our this is the code in
 

00:35:55.710 --> 00:35:58.700 align:start position:0%
evaluate code in our this is the code in
our<00:35:55.829><c> if</c><00:35:56.130><c> you're</c><00:35:56.609><c> not</c><00:35:56.789><c> an</c><00:35:56.940><c> art</c><00:35:57.119><c> developer</c><00:35:57.710><c> you</c>

00:35:58.700 --> 00:35:58.710 align:start position:0%
our if you're not an art developer you
 

00:35:58.710 --> 00:36:01.130 align:start position:0%
our if you're not an art developer you
can<00:35:58.859><c> see</c><00:35:59.099><c> this</c><00:35:59.700><c> is</c><00:35:59.819><c> clearly</c><00:36:00.119><c> foreign</c><00:36:00.720><c> syntax</c>

00:36:01.130 --> 00:36:01.140 align:start position:0%
can see this is clearly foreign syntax
 

00:36:01.140 --> 00:36:03.049 align:start position:0%
can see this is clearly foreign syntax
for<00:36:01.559><c> you</c><00:36:01.710><c> this</c><00:36:02.190><c> is</c><00:36:02.339><c> what</c><00:36:02.490><c> you</c><00:36:02.609><c> get</c><00:36:02.759><c> when</c><00:36:02.970><c> you</c>

00:36:03.049 --> 00:36:03.059 align:start position:0%
for you this is what you get when you
 

00:36:03.059 --> 00:36:05.809 align:start position:0%
for you this is what you get when you
get<00:36:03.240><c> an</c><00:36:03.359><c> average</c><00:36:03.599><c> Java</c><00:36:04.589><c> developer</c><00:36:05.069><c> write</c><00:36:05.490><c> code</c>

00:36:05.809 --> 00:36:05.819 align:start position:0%
get an average Java developer write code
 

00:36:05.819 --> 00:36:08.809 align:start position:0%
get an average Java developer write code
in<00:36:05.849><c> are</c><00:36:06.650><c> probably</c><00:36:07.650><c> the</c><00:36:07.799><c> most</c><00:36:07.920><c> not</c><00:36:08.579><c> the</c><00:36:08.670><c> most</c>

00:36:08.809 --> 00:36:08.819 align:start position:0%
in are probably the most not the most
 

00:36:08.819 --> 00:36:11.029 align:start position:0%
in are probably the most not the most
idiotic<00:36:09.210><c> but</c><00:36:09.960><c> this</c><00:36:10.170><c> is</c><00:36:10.319><c> a</c><00:36:10.349><c> functional</c><00:36:10.859><c> our</c>

00:36:11.029 --> 00:36:11.039 align:start position:0%
idiotic but this is a functional our
 

00:36:11.039 --> 00:36:13.430 align:start position:0%
idiotic but this is a functional our
code<00:36:11.339><c> what</c><00:36:12.119><c> we</c><00:36:12.240><c> have</c><00:36:12.450><c> here</c><00:36:12.779><c> is</c><00:36:12.930><c> a</c><00:36:13.200><c> typical</c>

00:36:13.430 --> 00:36:13.440 align:start position:0%
code what we have here is a typical
 

00:36:13.440 --> 00:36:15.950 align:start position:0%
code what we have here is a typical
string<00:36:13.980><c> boot</c><00:36:14.160><c> application</c><00:36:14.819><c> right</c><00:36:15.240><c> it</c><00:36:15.480><c> starts</c>

00:36:15.950 --> 00:36:15.960 align:start position:0%
string boot application right it starts
 

00:36:15.960 --> 00:36:18.289 align:start position:0%
string boot application right it starts
it<00:36:16.500><c> registers</c><00:36:17.099><c> some</c><00:36:17.309><c> beans</c><00:36:17.519><c> and</c><00:36:17.759><c> I'm</c><00:36:18.089><c> gonna</c>

00:36:18.289 --> 00:36:18.299 align:start position:0%
it registers some beans and I'm gonna
 

00:36:18.299 --> 00:36:21.490 align:start position:0%
it registers some beans and I'm gonna
run<00:36:18.509><c> it</c><00:36:18.769><c> we</c><00:36:19.769><c> really</c><00:36:20.160><c> hope</c><00:36:20.309><c> is</c><00:36:20.490><c> not</c><00:36:20.819><c> gonna</c><00:36:21.000><c> crash</c>

00:36:21.490 --> 00:36:21.500 align:start position:0%
run it we really hope is not gonna crash
 

00:36:21.500 --> 00:36:24.650 align:start position:0%
run it we really hope is not gonna crash
right<00:36:22.500><c> I</c><00:36:22.710><c> run</c><00:36:23.039><c> this</c><00:36:23.190><c> the</c><00:36:23.910><c> important</c><00:36:24.269><c> bits</c><00:36:24.390><c> what</c>

00:36:24.650 --> 00:36:24.660 align:start position:0%
right I run this the important bits what
 

00:36:24.660 --> 00:36:26.630 align:start position:0%
right I run this the important bits what
we<00:36:24.750><c> see</c><00:36:24.930><c> here</c><00:36:25.140><c> is</c><00:36:25.380><c> that</c><00:36:25.589><c> we</c><00:36:25.710><c> create</c><00:36:26.250><c> a</c><00:36:26.339><c> bean</c>

00:36:26.630 --> 00:36:26.640 align:start position:0%
we see here is that we create a bean
 

00:36:26.640 --> 00:36:28.730 align:start position:0%
we see here is that we create a bean
called<00:36:26.910><c> contacts</c><00:36:27.390><c> and</c><00:36:27.630><c> this</c><00:36:28.170><c> comes</c><00:36:28.380><c> from</c><00:36:28.470><c> the</c>

00:36:28.730 --> 00:36:28.740 align:start position:0%
called contacts and this comes from the
 

00:36:28.740 --> 00:36:33.710 align:start position:0%
called contacts and this comes from the
ground<00:36:28.920><c> iam</c><00:36:29.220><c> API</c><00:36:30.470><c> ground</c><00:36:31.470><c> iam</c><00:36:31.680><c> offers</c><00:36:32.180><c> API</c><00:36:33.180><c> for</c>

00:36:33.710 --> 00:36:33.720 align:start position:0%
ground iam API ground iam offers API for
 

00:36:33.720 --> 00:36:36.980 align:start position:0%
ground iam API ground iam offers API for
creating<00:36:34.079><c> polyglot</c><00:36:34.500><c> applications</c><00:36:35.099><c> and</c><00:36:35.990><c> we</c>

00:36:36.980 --> 00:36:36.990 align:start position:0%
creating polyglot applications and we
 

00:36:36.990 --> 00:36:39.099 align:start position:0%
creating polyglot applications and we
need<00:36:37.259><c> to</c><00:36:37.410><c> build</c><00:36:37.500><c> a</c><00:36:37.650><c> context</c><00:36:38.160><c> to</c><00:36:38.309><c> evaluate</c>

00:36:39.099 --> 00:36:39.109 align:start position:0%
need to build a context to evaluate
 

00:36:39.109 --> 00:36:41.589 align:start position:0%
need to build a context to evaluate
scripts<00:36:40.109><c> in</c><00:36:40.259><c> other</c><00:36:40.470><c> languages</c><00:36:40.890><c> within</c><00:36:41.279><c> it</c>

00:36:41.589 --> 00:36:41.599 align:start position:0%
scripts in other languages within it
 

00:36:41.599 --> 00:36:44.690 align:start position:0%
scripts in other languages within it
then<00:36:42.599><c> we</c><00:36:42.750><c> evaluate</c><00:36:43.170><c> the</c><00:36:43.319><c> source</c><00:36:43.559><c> which</c><00:36:44.430><c> comes</c>

00:36:44.690 --> 00:36:44.700 align:start position:0%
then we evaluate the source which comes
 

00:36:44.700 --> 00:36:48.380 align:start position:0%
then we evaluate the source which comes
from<00:36:44.940><c> just</c><00:36:45.180><c> a</c><00:36:45.589><c> file</c><00:36:46.589><c> property</c><00:36:47.119><c> and</c><00:36:48.119><c> we</c><00:36:48.240><c> get</c>

00:36:48.380 --> 00:36:48.390 align:start position:0%
from just a file property and we get
 

00:36:48.390 --> 00:36:50.059 align:start position:0%
from just a file property and we get
that<00:36:48.509><c> source</c><00:36:48.720><c> via</c><00:36:48.960><c> valid</c><00:36:49.289><c> that</c><00:36:49.410><c> and</c><00:36:49.619><c> then</c><00:36:49.950><c> we</c>

00:36:50.059 --> 00:36:50.069 align:start position:0%
that source via valid that and then we
 

00:36:50.069 --> 00:36:53.359 align:start position:0%
that source via valid that and then we
convert<00:36:50.460><c> that</c><00:36:50.490><c> to</c><00:36:51.180><c> Java</c><00:36:51.630><c> function</c><00:36:52.440><c> there</c><00:36:53.250><c> is</c><00:36:53.339><c> a</c>

00:36:53.359 --> 00:36:53.369 align:start position:0%
convert that to Java function there is a
 

00:36:53.369 --> 00:36:54.829 align:start position:0%
convert that to Java function there is a
certain<00:36:53.700><c> API</c><00:36:54.029><c> to</c><00:36:54.210><c> do</c><00:36:54.420><c> normal</c><00:36:54.690><c> things</c>

00:36:54.829 --> 00:36:54.839 align:start position:0%
certain API to do normal things
 

00:36:54.839 --> 00:36:56.980 align:start position:0%
certain API to do normal things
conversions<00:36:55.769><c> like</c><00:36:56.130><c> integers</c><00:36:56.490><c> to</c><00:36:56.759><c> integers</c>

00:36:56.980 --> 00:36:56.990 align:start position:0%
conversions like integers to integers
 

00:36:56.990 --> 00:36:59.359 align:start position:0%
conversions like integers to integers
strings<00:36:57.990><c> to</c><00:36:58.230><c> strings</c><00:36:58.259><c> collections</c><00:36:59.220><c> to</c>

00:36:59.359 --> 00:36:59.369 align:start position:0%
strings to strings collections to
 

00:36:59.369 --> 00:37:00.589 align:start position:0%
strings to strings collections to
collections<00:36:59.789><c> we</c><00:37:00.000><c> try</c><00:37:00.210><c> to</c><00:37:00.269><c> provide</c><00:37:00.539><c> a</c>

00:37:00.589 --> 00:37:00.599 align:start position:0%
collections we try to provide a
 

00:37:00.599 --> 00:37:02.690 align:start position:0%
collections we try to provide a
reasonable<00:37:01.109><c> abstraction</c><00:37:02.099><c> to</c><00:37:02.279><c> make</c>

00:37:02.690 --> 00:37:02.700 align:start position:0%
reasonable abstraction to make
 

00:37:02.700 --> 00:37:04.900 align:start position:0%
reasonable abstraction to make
interoperability<00:37:03.420><c> between</c><00:37:03.690><c> languages</c>

00:37:04.900 --> 00:37:04.910 align:start position:0%
interoperability between languages
 

00:37:04.910 --> 00:37:07.249 align:start position:0%
interoperability between languages
unified<00:37:05.910><c> across</c><00:37:06.359><c> different</c><00:37:06.720><c> languages</c><00:37:06.960><c> and</c>

00:37:07.249 --> 00:37:07.259 align:start position:0%
unified across different languages and
 

00:37:07.259 --> 00:37:10.670 align:start position:0%
unified across different languages and
also<00:37:08.420><c> well</c><00:37:09.420><c> reasonably</c><00:37:10.200><c> enough</c><00:37:10.349><c> to</c><00:37:10.500><c> work</c><00:37:10.650><c> with</c>

00:37:10.670 --> 00:37:10.680 align:start position:0%
also well reasonably enough to work with
 

00:37:10.680 --> 00:37:13.819 align:start position:0%
also well reasonably enough to work with
so<00:37:11.549><c> here</c><00:37:12.329><c> we</c><00:37:12.660><c> know</c><00:37:12.839><c> that</c><00:37:12.869><c> this</c><00:37:13.230><c> script</c><00:37:13.619><c> this</c>

00:37:13.819 --> 00:37:13.829 align:start position:0%
so here we know that this script this
 

00:37:13.829 --> 00:37:16.069 align:start position:0%
so here we know that this script this
file<00:37:14.130><c> gives</c><00:37:14.490><c> us</c><00:37:14.640><c> just</c><00:37:14.849><c> one</c><00:37:15.000><c> function</c><00:37:15.480><c> so</c><00:37:15.960><c> we</c>

00:37:16.069 --> 00:37:16.079 align:start position:0%
file gives us just one function so we
 

00:37:16.079 --> 00:37:19.160 align:start position:0%
file gives us just one function so we
can<00:37:16.109><c> easily</c><00:37:16.589><c> just</c><00:37:17.549><c> convert</c><00:37:18.509><c> that</c><00:37:18.660><c> to</c><00:37:18.930><c> a</c>

00:37:19.160 --> 00:37:19.170 align:start position:0%
can easily just convert that to a
 

00:37:19.170 --> 00:37:21.650 align:start position:0%
can easily just convert that to a
function<00:37:19.890><c> which</c><00:37:20.130><c> is</c><00:37:20.160><c> what</c><00:37:20.700><c> what'swhat's</c><00:37:21.599><c> that</c>

00:37:21.650 --> 00:37:21.660 align:start position:0%
function which is what what'swhat's that
 

00:37:21.660 --> 00:37:23.299 align:start position:0%
function which is what what'swhat's that
function<00:37:22.049><c> this</c><00:37:22.259><c> is</c><00:37:22.319><c> Java</c><00:37:22.589><c> util</c><00:37:22.950><c> function</c>

00:37:23.299 --> 00:37:23.309 align:start position:0%
function this is Java util function
 

00:37:23.309 --> 00:37:23.809 align:start position:0%
function this is Java util function
function

00:37:23.809 --> 00:37:23.819 align:start position:0%
function
 

00:37:23.819 --> 00:37:26.029 align:start position:0%
function
it's<00:37:24.240><c> not</c><00:37:24.359><c> even</c><00:37:24.539><c> our</c><00:37:24.690><c> API</c><00:37:25.109><c> anymore</c><00:37:25.529><c> right</c><00:37:25.769><c> this</c>

00:37:26.029 --> 00:37:26.039 align:start position:0%
it's not even our API anymore right this
 

00:37:26.039 --> 00:37:28.309 align:start position:0%
it's not even our API anymore right this
is<00:37:26.160><c> your</c><00:37:26.309><c> normal</c><00:37:26.490><c> Java</c><00:37:26.819><c> the</c><00:37:27.720><c> best</c><00:37:27.960><c> thing</c><00:37:28.140><c> is</c>

00:37:28.309 --> 00:37:28.319 align:start position:0%
is your normal Java the best thing is
 

00:37:28.319 --> 00:37:30.890 align:start position:0%
is your normal Java the best thing is
after<00:37:28.799><c> that</c><00:37:28.950><c> we</c><00:37:29.160><c> just</c><00:37:29.190><c> use</c><00:37:29.579><c> that</c><00:37:29.730><c> normally</c><00:37:30.210><c> we</c>

00:37:30.890 --> 00:37:30.900 align:start position:0%
after that we just use that normally we
 

00:37:30.900 --> 00:37:34.519 align:start position:0%
after that we just use that normally we
pass<00:37:31.710><c> Java</c><00:37:32.400><c> objects</c><00:37:32.880><c> to</c><00:37:32.970><c> it</c><00:37:33.089><c> right</c><00:37:33.779><c> which</c><00:37:34.049><c> wrap</c>

00:37:34.519 --> 00:37:34.529 align:start position:0%
pass Java objects to it right which wrap
 

00:37:34.529 --> 00:37:37.730 align:start position:0%
pass Java objects to it right which wrap
Java<00:37:35.279><c> primitive</c><00:37:36.000><c> values</c><00:37:36.450><c> we</c><00:37:36.900><c> apply</c><00:37:37.289><c> that</c><00:37:37.529><c> we</c>

00:37:37.730 --> 00:37:37.740 align:start position:0%
Java primitive values we apply that we
 

00:37:37.740 --> 00:37:38.030 align:start position:0%
Java primitive values we apply that we
get

00:37:38.030 --> 00:37:38.040 align:start position:0%
get
 

00:37:38.040 --> 00:37:40.190 align:start position:0%
get
result<00:37:38.460><c> which</c><00:37:38.700><c> is</c><00:37:38.850><c> a</c><00:37:38.880><c> Java</c><00:37:39.180><c> string</c><00:37:39.540><c> and</c><00:37:39.780><c> we</c>

00:37:40.190 --> 00:37:40.200 align:start position:0%
result which is a Java string and we
 

00:37:40.200 --> 00:37:42.610 align:start position:0%
result which is a Java string and we
just<00:37:40.410><c> render</c><00:37:40.740><c> that</c><00:37:40.950><c> string</c><00:37:41.250><c> on</c><00:37:41.370><c> screen</c><00:37:41.700><c> so</c>

00:37:42.610 --> 00:37:42.620 align:start position:0%
just render that string on screen so
 

00:37:42.620 --> 00:37:45.560 align:start position:0%
just render that string on screen so
let's<00:37:43.620><c> see</c><00:37:43.740><c> if</c><00:37:43.800><c> it</c><00:37:43.890><c> started</c><00:37:44.220><c> yeah</c><00:37:45.000><c> I</c><00:37:45.240><c> think</c><00:37:45.360><c> it</c>

00:37:45.560 --> 00:37:45.570 align:start position:0%
let's see if it started yeah I think it
 

00:37:45.570 --> 00:37:51.400 align:start position:0%
let's see if it started yeah I think it
started<00:37:45.900><c> it</c><00:37:46.710><c> started</c><00:37:49.040><c> localhost:8080</c><00:37:50.040><c> load</c>

00:37:51.400 --> 00:37:51.410 align:start position:0%
started it started localhost:8080 load
 

00:37:51.410 --> 00:37:55.220 align:start position:0%
started it started localhost:8080 load
right<00:37:52.410><c> we</c><00:37:52.860><c> see</c><00:37:53.160><c> whether</c><00:37:53.490><c> it</c><00:37:53.700><c> works</c><00:37:53.850><c> not</c><00:37:54.230><c> what</c>

00:37:55.220 --> 00:37:55.230 align:start position:0%
right we see whether it works not what
 

00:37:55.230 --> 00:37:57.230 align:start position:0%
right we see whether it works not what
this<00:37:55.350><c> application</c><00:37:55.530><c> does</c><00:37:55.890><c> it</c><00:37:56.640><c> does</c><00:37:56.820><c> nothing</c><00:37:56.970><c> it</c>

00:37:57.230 --> 00:37:57.240 align:start position:0%
this application does it does nothing it
 

00:37:57.240 --> 00:37:59.390 align:start position:0%
this application does it does nothing it
passed<00:37:57.480><c> random</c><00:37:57.870><c> data</c><00:37:58.050><c> some</c><00:37:58.680><c> system</c><00:37:59.280><c> load</c>

00:37:59.390 --> 00:37:59.400 align:start position:0%
passed random data some system load
 

00:37:59.400 --> 00:38:01.940 align:start position:0%
passed random data some system load
average<00:37:59.610><c> to</c><00:38:00.330><c> the</c><00:38:00.480><c> our</c><00:38:00.660><c> code</c><00:38:00.990><c> and</c><00:38:01.230><c> it</c><00:38:01.650><c> used</c><00:38:01.860><c> the</c>

00:38:01.940 --> 00:38:01.950 align:start position:0%
average to the our code and it used the
 

00:38:01.950 --> 00:38:04.490 align:start position:0%
average to the our code and it used the
our<00:38:02.160><c> facilities</c><00:38:02.820><c> to</c><00:38:03.390><c> plot</c><00:38:03.660><c> that</c><00:38:03.840><c> code</c><00:38:04.110><c> to</c><00:38:04.380><c> an</c>

00:38:04.490 --> 00:38:04.500 align:start position:0%
our facilities to plot that code to an
 

00:38:04.500 --> 00:38:07.880 align:start position:0%
our facilities to plot that code to an
SVG<00:38:04.890><c> image</c><00:38:05.930><c> not</c><00:38:06.930><c> the</c><00:38:07.110><c> most</c><00:38:07.260><c> exciting</c><00:38:07.560><c> may</c><00:38:07.830><c> be</c>

00:38:07.880 --> 00:38:07.890 align:start position:0%
SVG image not the most exciting may be
 

00:38:07.890 --> 00:38:10.370 align:start position:0%
SVG image not the most exciting may be
example<00:38:08.520><c> but</c><00:38:09.480><c> you</c><00:38:09.570><c> can</c><00:38:09.690><c> see</c><00:38:09.870><c> it</c><00:38:09.930><c> clear</c><00:38:10.200><c> the</c>

00:38:10.370 --> 00:38:10.380 align:start position:0%
example but you can see it clear the
 

00:38:10.380 --> 00:38:12.680 align:start position:0%
example but you can see it clear the
words<00:38:10.590><c> and</c><00:38:10.860><c> it</c><00:38:11.490><c> loads</c><00:38:11.730><c> initially</c><00:38:12.330><c> a</c><00:38:12.360><c> little</c>

00:38:12.680 --> 00:38:12.690 align:start position:0%
words and it loads initially a little
 

00:38:12.690 --> 00:38:15.050 align:start position:0%
words and it loads initially a little
bit<00:38:12.780><c> slower</c><00:38:13.160><c> because</c><00:38:14.160><c> it</c><00:38:14.460><c> needs</c><00:38:14.670><c> to</c><00:38:14.790><c> load</c>

00:38:15.050 --> 00:38:15.060 align:start position:0%
bit slower because it needs to load
 

00:38:15.060 --> 00:38:17.150 align:start position:0%
bit slower because it needs to load
their<00:38:15.300><c> standard</c><00:38:15.960><c> of</c><00:38:16.020><c> library</c><00:38:16.380><c> and</c><00:38:16.590><c> it</c><00:38:16.980><c> needs</c>

00:38:17.150 --> 00:38:17.160 align:start position:0%
their standard of library and it needs
 

00:38:17.160 --> 00:38:18.770 align:start position:0%
their standard of library and it needs
to<00:38:17.340><c> compile</c><00:38:17.820><c> the</c><00:38:18.000><c> code</c><00:38:18.030><c> so</c><00:38:18.450><c> it</c><00:38:18.540><c> needs</c><00:38:18.690><c> to</c>

00:38:18.770 --> 00:38:18.780 align:start position:0%
to compile the code so it needs to
 

00:38:18.780 --> 00:38:20.660 align:start position:0%
to compile the code so it needs to
gather<00:38:18.900><c> the</c><00:38:19.170><c> profile</c><00:38:19.590><c> but</c><00:38:20.220><c> then</c><00:38:20.340><c> it</c><00:38:20.490><c> gets</c>

00:38:20.660 --> 00:38:20.670 align:start position:0%
gather the profile but then it gets
 

00:38:20.670 --> 00:38:23.870 align:start position:0%
gather the profile but then it gets
really<00:38:20.790><c> bit</c><00:38:20.970><c> faster</c><00:38:21.360><c> and</c><00:38:21.450><c> faster</c><00:38:21.630><c> so</c><00:38:22.640><c> the</c><00:38:23.640><c> data</c>

00:38:23.870 --> 00:38:23.880 align:start position:0%
really bit faster and faster so the data
 

00:38:23.880 --> 00:38:26.840 align:start position:0%
really bit faster and faster so the data
goes<00:38:24.240><c> from</c><00:38:24.780><c> Java</c><00:38:25.140><c> normal</c><00:38:25.800><c> Java</c><00:38:25.980><c> objects</c><00:38:26.460><c> to</c>

00:38:26.840 --> 00:38:26.850 align:start position:0%
goes from Java normal Java objects to
 

00:38:26.850 --> 00:38:29.330 align:start position:0%
goes from Java normal Java objects to
our<00:38:27.090><c> our</c><00:38:27.480><c> code</c><00:38:27.780><c> there</c><00:38:28.290><c> is</c><00:38:28.320><c> no</c><00:38:28.590><c> conversion</c><00:38:29.190><c> or</c>

00:38:29.330 --> 00:38:29.340 align:start position:0%
our our code there is no conversion or
 

00:38:29.340 --> 00:38:31.610 align:start position:0%
our our code there is no conversion or
serialization<00:38:29.910><c> happening</c><00:38:30.450><c> it's</c><00:38:31.050><c> in</c><00:38:31.290><c> the</c><00:38:31.440><c> same</c>

00:38:31.610 --> 00:38:31.620 align:start position:0%
serialization happening it's in the same
 

00:38:31.620 --> 00:38:34.850 align:start position:0%
serialization happening it's in the same
process<00:38:32.070><c> and</c><00:38:32.340><c> then</c><00:38:33.090><c> inside</c><00:38:33.660><c> our</c><00:38:34.020><c> code</c><00:38:34.230><c> this</c><00:38:34.680><c> is</c>

00:38:34.850 --> 00:38:34.860 align:start position:0%
process and then inside our code this is
 

00:38:34.860 --> 00:38:38.210 align:start position:0%
process and then inside our code this is
fairly<00:38:35.250><c> interesting</c><00:38:35.790><c> we</c><00:38:36.780><c> can</c><00:38:37.020><c> use</c><00:38:37.260><c> that</c><00:38:37.500><c> when</c>

00:38:38.210 --> 00:38:38.220 align:start position:0%
fairly interesting we can use that when
 

00:38:38.220 --> 00:38:39.650 align:start position:0%
fairly interesting we can use that when
I<00:38:38.280><c> say</c><00:38:38.490><c> our</c><00:38:38.700><c> code</c><00:38:38.970><c> this</c><00:38:39.180><c> could</c><00:38:39.390><c> be</c><00:38:39.480><c> any</c>

00:38:39.650 --> 00:38:39.660 align:start position:0%
I say our code this could be any
 

00:38:39.660 --> 00:38:41.000 align:start position:0%
I say our code this could be any
language<00:38:40.050><c> that</c><00:38:40.200><c> we</c><00:38:40.290><c> support</c><00:38:40.620><c> it</c><00:38:40.710><c> could</c><00:38:40.890><c> be</c>

00:38:41.000 --> 00:38:41.010 align:start position:0%
language that we support it could be
 

00:38:41.010 --> 00:38:45.230 align:start position:0%
language that we support it could be
JavaScript<00:38:41.730><c> Python</c><00:38:42.200><c> Ruby</c><00:38:43.200><c> R</c><00:38:43.620><c> or</c><00:38:44.310><c> anything</c>

00:38:45.230 --> 00:38:45.240 align:start position:0%
JavaScript Python Ruby R or anything
 

00:38:45.240 --> 00:38:49.160 align:start position:0%
JavaScript Python Ruby R or anything
native<00:38:45.690><c> right</c><00:38:46.590><c> we</c><00:38:46.950><c> can</c><00:38:47.160><c> use</c><00:38:47.400><c> Java</c><00:38:47.820><c> types</c><00:38:48.170><c> and</c>

00:38:49.160 --> 00:38:49.170 align:start position:0%
native right we can use Java types and
 

00:38:49.170 --> 00:38:51.350 align:start position:0%
native right we can use Java types and
and<00:38:49.440><c> use</c><00:38:49.830><c> them</c><00:38:50.010><c> normally</c><00:38:50.430><c> so</c><00:38:50.670><c> here</c><00:38:51.000><c> we</c><00:38:51.210><c> will</c>

00:38:51.350 --> 00:38:51.360 align:start position:0%
and use them normally so here we will
 

00:38:51.360 --> 00:38:53.750 align:start position:0%
and use them normally so here we will
have<00:38:51.390><c> the</c><00:38:51.750><c> logger</c><00:38:51.990><c> and</c><00:38:52.260><c> we'll</c><00:38:52.980><c> log</c><00:38:53.310><c> some</c><00:38:53.550><c> data</c>

00:38:53.750 --> 00:38:53.760 align:start position:0%
have the logger and we'll log some data
 

00:38:53.760 --> 00:38:58.250 align:start position:0%
have the logger and we'll log some data
both<00:38:54.360><c> the</c><00:38:54.930><c> Jama</c><00:38:55.380><c> values</c><00:38:55.830><c> and</c><00:38:56.150><c> some</c><00:38:57.150><c> data</c><00:38:57.900><c> in</c>

00:38:58.250 --> 00:38:58.260 align:start position:0%
both the Jama values and some data in
 

00:38:58.260 --> 00:39:01.400 align:start position:0%
both the Jama values and some data in
there<00:38:58.800><c> are</c><00:38:58.980><c> internal</c><00:38:59.790><c> type</c><00:39:00.030><c> numeric</c><00:39:00.450><c> right</c>

00:39:01.400 --> 00:39:01.410 align:start position:0%
there are internal type numeric right
 

00:39:01.410 --> 00:39:03.650 align:start position:0%
there are internal type numeric right
and<00:39:01.590><c> you</c><00:39:01.680><c> can</c><00:39:01.830><c> see</c><00:39:02.010><c> they</c><00:39:02.160><c> are</c><00:39:02.490><c> logging</c><00:39:02.880><c> the</c><00:39:03.480><c> and</c>

00:39:03.650 --> 00:39:03.660 align:start position:0%
and you can see they are logging the and
 

00:39:03.660 --> 00:39:05.870 align:start position:0%
and you can see they are logging the and
they're<00:39:03.810><c> logging</c><00:39:04.050><c> normally</c><00:39:04.920><c> without</c><00:39:05.520><c> any</c>

00:39:05.870 --> 00:39:05.880 align:start position:0%
they're logging normally without any
 

00:39:05.880 --> 00:39:07.640 align:start position:0%
they're logging normally without any
conversions<00:39:06.420><c> and</c><00:39:06.600><c> if</c><00:39:06.960><c> you</c><00:39:07.050><c> actually</c><00:39:07.230><c> if</c><00:39:07.560><c> we</c>

00:39:07.640 --> 00:39:07.650 align:start position:0%
conversions and if you actually if we
 

00:39:07.650 --> 00:39:10.190 align:start position:0%
conversions and if you actually if we
look<00:39:07.800><c> here</c><00:39:08.010><c> right</c><00:39:08.880><c> this</c><00:39:09.390><c> method</c><00:39:09.840><c> has</c><00:39:10.140><c> a</c>

00:39:10.190 --> 00:39:10.200 align:start position:0%
look here right this method has a
 

00:39:10.200 --> 00:39:12.980 align:start position:0%
look here right this method has a
signature<00:39:10.650><c> of</c><00:39:10.890><c> double</c><00:39:11.550><c> and</c><00:39:11.730><c> an</c><00:39:12.240><c> array</c><00:39:12.960><c> of</c>

00:39:12.980 --> 00:39:12.990 align:start position:0%
signature of double and an array of
 

00:39:12.990 --> 00:39:16.520 align:start position:0%
signature of double and an array of
doubles<00:39:13.610><c> so</c><00:39:14.610><c> we</c><00:39:15.030><c> don't</c><00:39:15.240><c> even</c><00:39:15.450><c> convert</c><00:39:15.990><c> like</c>

00:39:16.520 --> 00:39:16.530 align:start position:0%
doubles so we don't even convert like
 

00:39:16.530 --> 00:39:18.980 align:start position:0%
doubles so we don't even convert like
two<00:39:16.710><c> objects</c><00:39:17.280><c> and</c><00:39:17.430><c> then</c><00:39:17.580><c> do</c><00:39:17.790><c> casts</c><00:39:18.330><c> right</c><00:39:18.840><c> you</c>

00:39:18.980 --> 00:39:18.990 align:start position:0%
two objects and then do casts right you
 

00:39:18.990 --> 00:39:20.720 align:start position:0%
two objects and then do casts right you
can<00:39:19.170><c> use</c><00:39:19.380><c> your</c><00:39:19.530><c> code</c><00:39:19.680><c> normally</c><00:39:20.070><c> you</c><00:39:20.400><c> can</c><00:39:20.550><c> offer</c>

00:39:20.720 --> 00:39:20.730 align:start position:0%
can use your code normally you can offer
 

00:39:20.730 --> 00:39:23.420 align:start position:0%
can use your code normally you can offer
you<00:39:21.000><c> Java</c><00:39:21.270><c> code</c><00:39:21.570><c> to</c><00:39:22.160><c> programs</c><00:39:23.160><c> in</c><00:39:23.280><c> other</c>

00:39:23.420 --> 00:39:23.430 align:start position:0%
you Java code to programs in other
 

00:39:23.430 --> 00:39:25.400 align:start position:0%
you Java code to programs in other
languages<00:39:23.880><c> and</c><00:39:24.030><c> you</c><00:39:24.210><c> can</c><00:39:24.420><c> use</c><00:39:24.840><c> programs</c><00:39:25.260><c> it</c>

00:39:25.400 --> 00:39:25.410 align:start position:0%
languages and you can use programs it
 

00:39:25.410 --> 00:39:27.320 align:start position:0%
languages and you can use programs it
now<00:39:25.530><c> to</c><00:39:25.590><c> other</c><00:39:25.830><c> languages</c><00:39:26.310><c> inside</c><00:39:26.970><c> your</c><00:39:27.150><c> Java</c>

00:39:27.320 --> 00:39:27.330 align:start position:0%
now to other languages inside your Java
 

00:39:27.330 --> 00:39:30.380 align:start position:0%
now to other languages inside your Java
code<00:39:27.420><c> normally</c><00:39:28.730><c> isn't</c><00:39:29.730><c> this</c><00:39:29.820><c> amazing</c>

00:39:30.380 --> 00:39:30.390 align:start position:0%
code normally isn't this amazing
 

00:39:30.390 --> 00:39:34.190 align:start position:0%
code normally isn't this amazing
I<00:39:31.220><c> will</c><00:39:32.220><c> stop</c><00:39:32.460><c> this</c><00:39:32.640><c> and</c><00:39:33.360><c> then</c><00:39:33.870><c> we'll</c><00:39:33.990><c> quickly</c>

00:39:34.190 --> 00:39:34.200 align:start position:0%
I will stop this and then we'll quickly
 

00:39:34.200 --> 00:39:36.260 align:start position:0%
I will stop this and then we'll quickly
go<00:39:34.440><c> back</c><00:39:34.470><c> and</c><00:39:34.920><c> show</c><00:39:35.460><c> a</c><00:39:35.640><c> couple</c><00:39:35.850><c> of</c><00:39:36.030><c> slides</c>

00:39:36.260 --> 00:39:36.270 align:start position:0%
go back and show a couple of slides
 

00:39:36.270 --> 00:39:38.330 align:start position:0%
go back and show a couple of slides
about<00:39:36.750><c> this</c><00:39:36.900><c> right</c><00:39:37.230><c> our</c><00:39:37.590><c> JavaScript</c>

00:39:38.330 --> 00:39:38.340 align:start position:0%
about this right our JavaScript
 

00:39:38.340 --> 00:39:40.340 align:start position:0%
about this right our JavaScript
compatibilities<00:39:38.940><c> of</c><00:39:39.120><c> the</c><00:39:39.330><c> charts</c><00:39:39.630><c> if</c><00:39:39.810><c> you</c>

00:39:40.340 --> 00:39:40.350 align:start position:0%
compatibilities of the charts if you
 

00:39:40.350 --> 00:39:41.780 align:start position:0%
compatibilities of the charts if you
follow<00:39:40.680><c> modern</c><00:39:41.070><c> JavaScript</c><00:39:41.280><c> development</c>

00:39:41.780 --> 00:39:41.790 align:start position:0%
follow modern JavaScript development
 

00:39:41.790 --> 00:39:43.820 align:start position:0%
follow modern JavaScript development
there<00:39:42.120><c> are</c><00:39:42.180><c> standards</c><00:39:42.600><c> right</c><00:39:42.960><c> the</c><00:39:43.260><c> language</c>

00:39:43.820 --> 00:39:43.830 align:start position:0%
there are standards right the language
 

00:39:43.830 --> 00:39:46.430 align:start position:0%
there are standards right the language
evolves<00:39:44.280><c> so</c><00:39:44.460><c> we</c><00:39:45.120><c> are</c><00:39:45.300><c> at</c><00:39:45.600><c> the</c><00:39:46.050><c> computability</c>

00:39:46.430 --> 00:39:46.440 align:start position:0%
evolves so we are at the computability
 

00:39:46.440 --> 00:39:49.760 align:start position:0%
evolves so we are at the computability
levels<00:39:47.210><c> similar</c><00:39:48.210><c> to</c><00:39:48.510><c> normal</c><00:39:48.720><c> note</c><00:39:49.020><c> similar</c><00:39:49.650><c> to</c>

00:39:49.760 --> 00:39:49.770 align:start position:0%
levels similar to normal note similar to
 

00:39:49.770 --> 00:39:51.010 align:start position:0%
levels similar to normal note similar to
the<00:39:49.890><c> browsers</c>

00:39:51.010 --> 00:39:51.020 align:start position:0%
the browsers
 

00:39:51.020 --> 00:39:54.520 align:start position:0%
the browsers
including<00:39:51.650><c> the</c><00:39:51.830><c> upcoming</c><00:39:52.700><c> equus</c><00:39:53.420><c> trip</c><00:39:53.630><c> 2019</c>

00:39:54.520 --> 00:39:54.530 align:start position:0%
including the upcoming equus trip 2019
 

00:39:54.530 --> 00:39:56.470 align:start position:0%
including the upcoming equus trip 2019
draft<00:39:54.890><c> it's</c><00:39:55.340><c> not</c><00:39:55.460><c> even</c><00:39:55.730><c> started</c><00:39:56.060><c> but</c><00:39:56.270><c> we</c><00:39:56.390><c> are</c>

00:39:56.470 --> 00:39:56.480 align:start position:0%
draft it's not even started but we are
 

00:39:56.480 --> 00:39:58.330 align:start position:0%
draft it's not even started but we are
compatible<00:39:56.750><c> because</c><00:39:57.680><c> we</c><00:39:57.830><c> don't</c><00:39:58.040><c> need</c><00:39:58.220><c> to</c>

00:39:58.330 --> 00:39:58.340 align:start position:0%
compatible because we don't need to
 

00:39:58.340 --> 00:39:59.650 align:start position:0%
compatible because we don't need to
manually<00:39:58.640><c> translate</c><00:39:59.180><c> javascript</c><00:39:59.630><c> to</c>

00:39:59.650 --> 00:39:59.660 align:start position:0%
manually translate javascript to
 

00:39:59.660 --> 00:40:02.730 align:start position:0%
manually translate javascript to
bytecode<00:39:59.900><c> and</c><00:40:00.320><c> we</c><00:40:01.010><c> just</c><00:40:01.190><c> need</c><00:40:01.310><c> an</c><00:40:01.460><c> interpreter</c>

00:40:02.730 --> 00:40:02.740 align:start position:0%
bytecode and we just need an interpreter
 

00:40:02.740 --> 00:40:05.590 align:start position:0%
bytecode and we just need an interpreter
our<00:40:03.740><c> javascript</c><00:40:04.280><c> is</c><00:40:04.400><c> super</c><00:40:04.670><c> fast</c><00:40:04.880><c> it's</c><00:40:05.150><c> much</c>

00:40:05.590 --> 00:40:05.600 align:start position:0%
our javascript is super fast it's much
 

00:40:05.600 --> 00:40:07.780 align:start position:0%
our javascript is super fast it's much
faster<00:40:05.810><c> than</c><00:40:06.170><c> than</c><00:40:06.560><c> previously</c><00:40:07.310><c> being</c>

00:40:07.780 --> 00:40:07.790 align:start position:0%
faster than than previously being
 

00:40:07.790 --> 00:40:09.520 align:start position:0%
faster than than previously being
possible<00:40:08.240><c> to</c><00:40:08.300><c> evaluate</c><00:40:08.720><c> JavaScript</c><00:40:09.320><c> on</c><00:40:09.470><c> the</c>

00:40:09.520 --> 00:40:09.530 align:start position:0%
possible to evaluate JavaScript on the
 

00:40:09.530 --> 00:40:12.730 align:start position:0%
possible to evaluate JavaScript on the
JVM<00:40:10.090><c> if</c><00:40:11.090><c> you</c><00:40:11.330><c> used</c><00:40:11.660><c> an</c><00:40:11.780><c> aspirin</c><00:40:12.140><c> for</c><00:40:12.410><c> example</c>

00:40:12.730 --> 00:40:12.740 align:start position:0%
JVM if you used an aspirin for example
 

00:40:12.740 --> 00:40:15.160 align:start position:0%
JVM if you used an aspirin for example
our<00:40:13.490><c> javascript</c><00:40:14.119><c> is</c><00:40:14.240><c> actually</c><00:40:14.570><c> a</c><00:40:14.690><c> little</c><00:40:14.990><c> bit</c>

00:40:15.160 --> 00:40:15.170 align:start position:0%
our javascript is actually a little bit
 

00:40:15.170 --> 00:40:18.670 align:start position:0%
our javascript is actually a little bit
slower<00:40:15.530><c> than</c><00:40:15.860><c> v8</c><00:40:16.369><c> at</c><00:40:17.270><c> peak</c><00:40:17.869><c> performance</c><00:40:18.020><c> this</c>

00:40:18.670 --> 00:40:18.680 align:start position:0%
slower than v8 at peak performance this
 

00:40:18.680 --> 00:40:20.200 align:start position:0%
slower than v8 at peak performance this
is<00:40:18.830><c> a</c><00:40:18.890><c> shame</c><00:40:19.040><c> but</c><00:40:19.220><c> we'll</c><00:40:19.400><c> get</c><00:40:19.580><c> there</c><00:40:19.790><c> the</c>

00:40:20.200 --> 00:40:20.210 align:start position:0%
is a shame but we'll get there the
 

00:40:20.210 --> 00:40:22.060 align:start position:0%
is a shame but we'll get there the
problem<00:40:20.570><c> team</c><00:40:20.720><c> is</c><00:40:20.869><c> committed</c><00:40:21.140><c> to</c><00:40:21.560><c> make</c><00:40:21.680><c> gravia</c>

00:40:22.060 --> 00:40:22.070 align:start position:0%
problem team is committed to make gravia
 

00:40:22.070 --> 00:40:24.040 align:start position:0%
problem team is committed to make gravia
the<00:40:22.310><c> best</c><00:40:22.520><c> run</c><00:40:22.760><c> time</c><00:40:22.970><c> in</c><00:40:23.090><c> class</c><00:40:23.330><c> for</c><00:40:23.869><c> all</c>

00:40:24.040 --> 00:40:24.050 align:start position:0%
the best run time in class for all
 

00:40:24.050 --> 00:40:26.440 align:start position:0%
the best run time in class for all
supported<00:40:24.230><c> languages</c><00:40:24.800><c> so</c><00:40:25.760><c> we</c><00:40:25.880><c> want</c><00:40:26.090><c> to</c><00:40:26.150><c> be</c><00:40:26.270><c> the</c>

00:40:26.440 --> 00:40:26.450 align:start position:0%
supported languages so we want to be the
 

00:40:26.450 --> 00:40:29.920 align:start position:0%
supported languages so we want to be the
fastest<00:40:26.900><c> ruby</c><00:40:27.530><c> the</c><00:40:27.980><c> fastest</c><00:40:28.460><c> python</c><00:40:28.930><c> the</c>

00:40:29.920 --> 00:40:29.930 align:start position:0%
fastest ruby the fastest python the
 

00:40:29.930 --> 00:40:32.200 align:start position:0%
fastest ruby the fastest python the
fastest<00:40:30.410><c> run</c><00:40:30.830><c> time</c><00:40:31.010><c> for</c><00:40:31.040><c> the</c><00:40:31.550><c> jvm</c><00:40:31.850><c> languages</c>

00:40:32.200 --> 00:40:32.210 align:start position:0%
fastest run time for the jvm languages
 

00:40:32.210 --> 00:40:35.440 align:start position:0%
fastest run time for the jvm languages
and<00:40:32.420><c> so</c><00:40:32.780><c> on</c><00:40:33.040><c> you</c><00:40:34.040><c> can</c><00:40:34.190><c> also</c><00:40:34.400><c> use</c><00:40:34.730><c> that</c><00:40:34.940><c> as</c><00:40:35.150><c> just</c>

00:40:35.440 --> 00:40:35.450 align:start position:0%
and so on you can also use that as just
 

00:40:35.450 --> 00:40:38.859 align:start position:0%
and so on you can also use that as just
a<00:40:35.510><c> collection</c><00:40:35.810><c> of</c><00:40:35.990><c> Java</c><00:40:36.430><c> jar</c><00:40:37.430><c> files</c><00:40:37.670><c> and</c><00:40:37.970><c> plug</c>

00:40:38.859 --> 00:40:38.869 align:start position:0%
a collection of Java jar files and plug
 

00:40:38.869 --> 00:40:44.190 align:start position:0%
a collection of Java jar files and plug
them<00:40:39.050><c> into</c><00:40:39.290><c> your</c><00:40:39.440><c> normal</c><00:40:40.280><c> open</c><00:40:41.000><c> JDK</c><00:40:41.180><c> process</c>

00:40:44.190 --> 00:40:44.200 align:start position:0%
 
 

00:40:44.200 --> 00:40:47.410 align:start position:0%
 
to<00:40:45.200><c> be</c><00:40:45.320><c> honest</c><00:40:45.590><c> the</c><00:40:46.190><c> languages</c><00:40:46.910><c> foreground</c>

00:40:47.410 --> 00:40:47.420 align:start position:0%
to be honest the languages foreground
 

00:40:47.420 --> 00:40:49.090 align:start position:0%
to be honest the languages foreground
Liam<00:40:47.630><c> will</c><00:40:47.869><c> run</c><00:40:48.050><c> the</c><00:40:48.200><c> best</c><00:40:48.410><c> in</c><00:40:48.650><c> the</c><00:40:48.740><c> presence</c>

00:40:49.090 --> 00:40:49.100 align:start position:0%
Liam will run the best in the presence
 

00:40:49.100 --> 00:40:51.250 align:start position:0%
Liam will run the best in the presence
of<00:40:49.190><c> the</c><00:40:49.310><c> ground</c><00:40:49.490><c> vm</c><00:40:49.670><c> compiler</c><00:40:50.030><c> the</c><00:40:50.840><c> truffle</c>

00:40:51.250 --> 00:40:51.260 align:start position:0%
of the ground vm compiler the truffle
 

00:40:51.260 --> 00:40:53.320 align:start position:0%
of the ground vm compiler the truffle
runtime<00:40:51.680><c> needs</c><00:40:52.280><c> certain</c><00:40:52.640><c> things</c><00:40:52.880><c> from</c><00:40:53.180><c> the</c>

00:40:53.320 --> 00:40:53.330 align:start position:0%
runtime needs certain things from the
 

00:40:53.330 --> 00:40:55.750 align:start position:0%
runtime needs certain things from the
from<00:40:53.720><c> the</c><00:40:53.810><c> compiler</c><00:40:54.170><c> certain</c><00:40:54.680><c> intrinsics</c><00:40:55.520><c> and</c>

00:40:55.750 --> 00:40:55.760 align:start position:0%
from the compiler certain intrinsics and
 

00:40:55.760 --> 00:40:57.970 align:start position:0%
from the compiler certain intrinsics and
certain<00:40:56.000><c> optimizations</c><00:40:56.590><c> which</c><00:40:57.590><c> grand-am</c>

00:40:57.970 --> 00:40:57.980 align:start position:0%
certain optimizations which grand-am
 

00:40:57.980 --> 00:41:01.870 align:start position:0%
certain optimizations which grand-am
compiler<00:40:58.869><c> accidentally</c><00:40:59.869><c> offers</c><00:41:00.880><c> surprise</c>

00:41:01.870 --> 00:41:01.880 align:start position:0%
compiler accidentally offers surprise
 

00:41:01.880 --> 00:41:03.970 align:start position:0%
compiler accidentally offers surprise
surprise<00:41:02.300><c> and</c><00:41:02.570><c> other</c><00:41:03.230><c> compilers</c><00:41:03.530><c> do</c><00:41:03.830><c> not</c>

00:41:03.970 --> 00:41:03.980 align:start position:0%
surprise and other compilers do not
 

00:41:03.980 --> 00:41:06.250 align:start position:0%
surprise and other compilers do not
offer<00:41:04.190><c> but</c><00:41:04.640><c> they</c><00:41:04.760><c> can</c><00:41:04.970><c> write</c><00:41:05.450><c> and</c><00:41:05.660><c> and</c><00:41:05.990><c> other</c>

00:41:06.250 --> 00:41:06.260 align:start position:0%
offer but they can write and and other
 

00:41:06.260 --> 00:41:08.530 align:start position:0%
offer but they can write and and other
JVM<00:41:06.680><c> scoot</c><00:41:06.950><c> offer</c><00:41:07.190><c> the</c><00:41:07.460><c> JVM</c><00:41:07.820><c> Sai</c><00:41:08.000><c> interface</c>

00:41:08.530 --> 00:41:08.540 align:start position:0%
JVM scoot offer the JVM Sai interface
 

00:41:08.540 --> 00:41:10.330 align:start position:0%
JVM scoot offer the JVM Sai interface
maybe<00:41:08.810><c> and</c><00:41:09.050><c> they</c><00:41:09.590><c> would</c><00:41:09.740><c> be</c><00:41:09.859><c> able</c><00:41:09.950><c> to</c><00:41:10.100><c> work</c>

00:41:10.330 --> 00:41:10.340 align:start position:0%
maybe and they would be able to work
 

00:41:10.340 --> 00:41:12.970 align:start position:0%
maybe and they would be able to work
with<00:41:10.580><c> the</c><00:41:10.730><c> ground</c><00:41:10.940><c> compiler</c><00:41:11.450><c> so</c><00:41:12.080><c> you</c><00:41:12.590><c> can</c><00:41:12.770><c> run</c>

00:41:12.970 --> 00:41:12.980 align:start position:0%
with the ground compiler so you can run
 

00:41:12.980 --> 00:41:15.880 align:start position:0%
with the ground compiler so you can run
growl<00:41:13.700><c> VMs</c><00:41:14.359><c> JavaScript</c><00:41:14.869><c> engine</c><00:41:15.170><c> on</c><00:41:15.320><c> the</c>

00:41:15.880 --> 00:41:15.890 align:start position:0%
growl VMs JavaScript engine on the
 

00:41:15.890 --> 00:41:18.490 align:start position:0%
growl VMs JavaScript engine on the
normal<00:41:16.160><c> JDK</c><00:41:16.490><c> without</c><00:41:17.030><c> any</c><00:41:17.210><c> problems</c><00:41:17.600><c> other</c>

00:41:18.490 --> 00:41:18.500 align:start position:0%
normal JDK without any problems other
 

00:41:18.500 --> 00:41:20.020 align:start position:0%
normal JDK without any problems other
languages<00:41:18.980><c> I</c><00:41:19.160><c> think</c><00:41:19.220><c> there</c><00:41:19.550><c> are</c><00:41:19.580><c> some</c><00:41:19.760><c> native</c>

00:41:20.020 --> 00:41:20.030 align:start position:0%
languages I think there are some native
 

00:41:20.030 --> 00:41:22.540 align:start position:0%
languages I think there are some native
parts<00:41:20.510><c> which</c><00:41:20.930><c> might</c><00:41:21.170><c> not</c><00:41:21.410><c> run</c><00:41:21.680><c> very</c><00:41:21.920><c> well</c><00:41:22.160><c> in</c>

00:41:22.540 --> 00:41:22.550 align:start position:0%
parts which might not run very well in
 

00:41:22.550 --> 00:41:24.580 align:start position:0%
parts which might not run very well in
this<00:41:22.790><c> setting</c><00:41:23.090><c> yet</c><00:41:23.240><c> but</c><00:41:24.050><c> we</c><00:41:24.200><c> are</c><00:41:24.320><c> in</c><00:41:24.440><c> different</c>

00:41:24.580 --> 00:41:24.590 align:start position:0%
this setting yet but we are in different
 

00:41:24.590 --> 00:41:27.910 align:start position:0%
this setting yet but we are in different
stages<00:41:24.920><c> of</c><00:41:25.100><c> compatibility</c><00:41:26.020><c> anyway</c><00:41:27.020><c> our</c><00:41:27.470><c> Ruby</c>

00:41:27.910 --> 00:41:27.920 align:start position:0%
stages of compatibility anyway our Ruby
 

00:41:27.920 --> 00:41:33.670 align:start position:0%
stages of compatibility anyway our Ruby
is<00:41:27.980><c> fast</c><00:41:28.630><c> and</c><00:41:29.630><c> we</c><00:41:29.900><c> are</c><00:41:30.109><c> as</c><00:41:30.320><c> fast</c><00:41:31.960><c> our</c><00:41:32.960><c> Python</c><00:41:33.530><c> is</c>

00:41:33.670 --> 00:41:33.680 align:start position:0%
is fast and we are as fast our Python is
 

00:41:33.680 --> 00:41:36.070 align:start position:0%
is fast and we are as fast our Python is
the<00:41:33.890><c> youngest</c><00:41:34.280><c> so</c><00:41:35.119><c> probably</c><00:41:35.570><c> it's</c><00:41:35.720><c> not</c><00:41:35.750><c> yet</c>

00:41:36.070 --> 00:41:36.080 align:start position:0%
the youngest so probably it's not yet
 

00:41:36.080 --> 00:41:38.620 align:start position:0%
the youngest so probably it's not yet
very<00:41:36.350><c> fast</c><00:41:36.619><c> yet</c><00:41:36.890><c> and</c><00:41:37.850><c> we're</c><00:41:38.030><c> working</c><00:41:38.180><c> mostly</c>

00:41:38.620 --> 00:41:38.630 align:start position:0%
very fast yet and we're working mostly
 

00:41:38.630 --> 00:41:40.840 align:start position:0%
very fast yet and we're working mostly
on<00:41:38.750><c> the</c><00:41:38.869><c> compatibility</c><00:41:39.440><c> with</c><00:41:39.670><c> the</c><00:41:40.670><c> echo</c>

00:41:40.840 --> 00:41:40.850 align:start position:0%
on the compatibility with the echo
 

00:41:40.850 --> 00:41:43.000 align:start position:0%
on the compatibility with the echo
system<00:41:41.200><c> specifically</c><00:41:42.200><c> to</c><00:41:42.470><c> run</c><00:41:42.590><c> the</c><00:41:42.740><c> machine</c>

00:41:43.000 --> 00:41:43.010 align:start position:0%
system specifically to run the machine
 

00:41:43.010 --> 00:41:45.370 align:start position:0%
system specifically to run the machine
learning<00:41:43.160><c> for</c><00:41:43.310><c> workloads</c><00:41:44.119><c> I</c><00:41:44.390><c> know</c><00:41:44.869><c> that</c><00:41:45.230><c> there</c>

00:41:45.370 --> 00:41:45.380 align:start position:0%
learning for workloads I know that there
 

00:41:45.380 --> 00:41:49.450 align:start position:0%
learning for workloads I know that there
exists<00:41:45.830><c> a</c><00:41:46.540><c> developer's</c><00:41:47.540><c> machine</c><00:41:47.930><c> where</c><00:41:48.920><c> there</c>

00:41:49.450 --> 00:41:49.460 align:start position:0%
exists a developer's machine where there
 

00:41:49.460 --> 00:41:51.340 align:start position:0%
exists a developer's machine where there
are<00:41:49.580><c> certain</c><00:41:49.880><c> patched</c><00:41:50.420><c> versions</c><00:41:50.840><c> of</c><00:41:51.050><c> our</c>

00:41:51.340 --> 00:41:51.350 align:start position:0%
are certain patched versions of our
 

00:41:51.350 --> 00:41:53.770 align:start position:0%
are certain patched versions of our
Python<00:41:51.800><c> implementation</c><00:41:51.920><c> and</c><00:41:52.550><c> numpy</c><00:41:52.880><c> where</c>

00:41:53.770 --> 00:41:53.780 align:start position:0%
Python implementation and numpy where
 

00:41:53.780 --> 00:41:58.210 align:start position:0%
Python implementation and numpy where
certain<00:41:54.290><c> numpy</c><00:41:55.160><c> workloads</c><00:41:55.670><c> actually</c><00:41:56.359><c> work</c><00:41:57.220><c> so</c>

00:41:58.210 --> 00:41:58.220 align:start position:0%
certain numpy workloads actually work so
 

00:41:58.220 --> 00:42:00.609 align:start position:0%
certain numpy workloads actually work so
we<00:41:58.520><c> are</c><00:41:58.609><c> making</c><00:41:58.760><c> progress</c><00:41:59.119><c> there</c><00:41:59.450><c> but</c><00:41:59.720><c> if</c><00:42:00.410><c> you</c>

00:42:00.609 --> 00:42:00.619 align:start position:0%
we are making progress there but if you
 

00:42:00.619 --> 00:42:02.309 align:start position:0%
we are making progress there but if you
want<00:42:00.800><c> to</c><00:42:00.890><c> try</c><00:42:01.070><c> our</c><00:42:01.220><c> Python</c>

00:42:02.309 --> 00:42:02.319 align:start position:0%
want to try our Python
 

00:42:02.319 --> 00:42:04.469 align:start position:0%
want to try our Python
please<00:42:02.829><c> go</c><00:42:03.069><c> with</c><00:42:03.400><c> your</c><00:42:03.549><c> eyes</c><00:42:03.699><c> open</c><00:42:04.179><c> and</c><00:42:04.390><c> keep</c>

00:42:04.469 --> 00:42:04.479 align:start position:0%
please go with your eyes open and keep
 

00:42:04.479 --> 00:42:06.630 align:start position:0%
please go with your eyes open and keep
your<00:42:04.869><c> expectations</c><00:42:05.169><c> to</c><00:42:06.099><c> a</c><00:42:06.130><c> reasonable</c><00:42:06.609><c> level</c>

00:42:06.630 --> 00:42:06.640 align:start position:0%
your expectations to a reasonable level
 

00:42:06.640 --> 00:42:09.239 align:start position:0%
your expectations to a reasonable level
I<00:42:07.029><c> don't</c><00:42:07.630><c> want</c><00:42:07.809><c> to</c><00:42:07.900><c> tell</c><00:42:08.140><c> you</c><00:42:08.289><c> that</c><00:42:08.469><c> our</c><00:42:08.829><c> patent</c>

00:42:09.239 --> 00:42:09.249 align:start position:0%
I don't want to tell you that our patent
 

00:42:09.249 --> 00:42:10.589 align:start position:0%
I don't want to tell you that our patent
is<00:42:09.339><c> amazing</c><00:42:09.699><c> and</c><00:42:09.849><c> then</c><00:42:09.999><c> you</c><00:42:10.089><c> will</c><00:42:10.209><c> try</c><00:42:10.329><c> it</c><00:42:10.419><c> and</c>

00:42:10.589 --> 00:42:10.599 align:start position:0%
is amazing and then you will try it and
 

00:42:10.599 --> 00:42:12.239 align:start position:0%
is amazing and then you will try it and
get<00:42:10.809><c> discouraged</c><00:42:11.289><c> and</c><00:42:11.410><c> will</c><00:42:11.859><c> never</c><00:42:12.039><c> try</c><00:42:12.219><c> it</c>

00:42:12.239 --> 00:42:12.249 align:start position:0%
get discouraged and will never try it
 

00:42:12.249 --> 00:42:15.059 align:start position:0%
get discouraged and will never try it
again<00:42:12.509><c> try</c><00:42:13.509><c> it</c><00:42:13.599><c> but</c><00:42:14.079><c> promise</c><00:42:14.529><c> me</c><00:42:14.589><c> to</c><00:42:14.799><c> try</c><00:42:14.979><c> it</c>

00:42:15.059 --> 00:42:15.069 align:start position:0%
again try it but promise me to try it
 

00:42:15.069 --> 00:42:18.659 align:start position:0%
again try it but promise me to try it
again<00:42:15.160><c> next</c><00:42:15.429><c> year</c><00:42:15.579><c> as</c><00:42:15.789><c> well</c><00:42:15.910><c> oh</c><00:42:17.339><c> the</c><00:42:18.339><c> good</c><00:42:18.459><c> bet</c>

00:42:18.659 --> 00:42:18.669 align:start position:0%
again next year as well oh the good bet
 

00:42:18.669 --> 00:42:21.509 align:start position:0%
again next year as well oh the good bet
you<00:42:19.239><c> get</c><00:42:19.419><c> the</c><00:42:19.539><c> tooling</c><00:42:19.959><c> since</c><00:42:20.829><c> everything</c><00:42:21.339><c> to</c>

00:42:21.509 --> 00:42:21.519 align:start position:0%
you get the tooling since everything to
 

00:42:21.519 --> 00:42:23.699 align:start position:0%
you get the tooling since everything to
us<00:42:21.579><c> is</c><00:42:21.880><c> just</c><00:42:22.119><c> trees</c><00:42:22.419><c> you</c><00:42:22.900><c> get</c><00:42:23.049><c> the</c><00:42:23.169><c> tools</c><00:42:23.410><c> that</c>

00:42:23.699 --> 00:42:23.709 align:start position:0%
us is just trees you get the tools that
 

00:42:23.709 --> 00:42:26.609 align:start position:0%
us is just trees you get the tools that
can<00:42:24.369><c> work</c><00:42:24.579><c> with</c><00:42:24.819><c> old</c><00:42:25.029><c> languages</c><00:42:25.479><c> right</c><00:42:26.109><c> you</c>

00:42:26.609 --> 00:42:26.619 align:start position:0%
can work with old languages right you
 

00:42:26.619 --> 00:42:28.890 align:start position:0%
can work with old languages right you
don't<00:42:26.919><c> need</c><00:42:27.160><c> to</c><00:42:27.429><c> have</c><00:42:27.759><c> special</c><00:42:28.150><c> developer</c>

00:42:28.890 --> 00:42:28.900 align:start position:0%
don't need to have special developer
 

00:42:28.900 --> 00:42:31.049 align:start position:0%
don't need to have special developer
tooling<00:42:29.259><c> for</c><00:42:29.469><c> any</c><00:42:30.219><c> particular</c><00:42:30.939><c> language</c>

00:42:31.049 --> 00:42:31.059 align:start position:0%
tooling for any particular language
 

00:42:31.059 --> 00:42:33.839 align:start position:0%
tooling for any particular language
because<00:42:32.049><c> to</c><00:42:32.380><c> the</c><00:42:32.499><c> runtime</c><00:42:33.009><c> to</c><00:42:33.279><c> the</c><00:42:33.400><c> platform</c>

00:42:33.839 --> 00:42:33.849 align:start position:0%
because to the runtime to the platform
 

00:42:33.849 --> 00:42:35.880 align:start position:0%
because to the runtime to the platform
all<00:42:34.419><c> of</c><00:42:34.719><c> them</c><00:42:34.869><c> are</c><00:42:35.019><c> just</c><00:42:35.079><c> interpreters</c>

00:42:35.880 --> 00:42:35.890 align:start position:0%
all of them are just interpreters
 

00:42:35.890 --> 00:42:38.819 align:start position:0%
all of them are just interpreters
written<00:42:36.759><c> using</c><00:42:36.939><c> the</c><00:42:37.119><c> same</c><00:42:37.329><c> API</c><00:42:37.569><c> so</c><00:42:38.559><c> what</c><00:42:38.709><c> you</c>

00:42:38.819 --> 00:42:38.829 align:start position:0%
written using the same API so what you
 

00:42:38.829 --> 00:42:40.559 align:start position:0%
written using the same API so what you
can<00:42:38.949><c> get</c><00:42:39.130><c> you</c><00:42:39.339><c> can</c><00:42:39.459><c> get</c><00:42:39.640><c> the</c><00:42:39.729><c> debugger</c><00:42:40.179><c> you</c><00:42:40.390><c> can</c>

00:42:40.559 --> 00:42:40.569 align:start position:0%
can get you can get the debugger you can
 

00:42:40.569 --> 00:42:42.150 align:start position:0%
can get you can get the debugger you can
get<00:42:40.689><c> the</c><00:42:40.779><c> profiler</c><00:42:41.199><c> you</c><00:42:41.469><c> can</c><00:42:41.739><c> get</c><00:42:41.890><c> the</c><00:42:41.979><c> heat</c>

00:42:42.150 --> 00:42:42.160 align:start position:0%
get the profiler you can get the heat
 

00:42:42.160 --> 00:42:45.419 align:start position:0%
get the profiler you can get the heat
viewer<00:42:42.779><c> for</c><00:42:43.779><c> free</c><00:42:44.019><c> for</c><00:42:44.439><c> a</c><00:42:44.469><c> language</c><00:42:44.679><c> so</c><00:42:45.369><c> you</c>

00:42:45.419 --> 00:42:45.429 align:start position:0%
viewer for free for a language so you
 

00:42:45.429 --> 00:42:48.150 align:start position:0%
viewer for free for a language so you
can<00:42:45.640><c> use</c><00:42:45.819><c> for</c><00:42:45.969><c> example</c><00:42:45.999><c> chrome</c><00:42:46.839><c> inspector</c><00:42:47.380><c> in</c>

00:42:48.150 --> 00:42:48.160 align:start position:0%
can use for example chrome inspector in
 

00:42:48.160 --> 00:42:51.059 align:start position:0%
can use for example chrome inspector in
the<00:42:48.309><c> browser</c><00:42:48.519><c> to</c><00:42:48.849><c> debug</c><00:42:49.179><c> Ruby</c><00:42:49.479><c> or</c><00:42:49.630><c> Python</c><00:42:50.069><c> you</c>

00:42:51.059 --> 00:42:51.069 align:start position:0%
the browser to debug Ruby or Python you
 

00:42:51.069 --> 00:42:53.400 align:start position:0%
the browser to debug Ruby or Python you
can<00:42:51.219><c> use</c><00:42:51.339><c> je</c><00:42:51.729><c> visual</c><00:42:52.059><c> VM</c><00:42:52.299><c> to</c><00:42:52.839><c> figure</c><00:42:53.079><c> out</c><00:42:53.229><c> what</c>

00:42:53.400 --> 00:42:53.410 align:start position:0%
can use je visual VM to figure out what
 

00:42:53.410 --> 00:42:55.529 align:start position:0%
can use je visual VM to figure out what
happens<00:42:53.769><c> with</c><00:42:54.189><c> your</c><00:42:54.459><c> Python</c><00:42:55.059><c> application</c>

00:42:55.529 --> 00:42:55.539 align:start position:0%
happens with your Python application
 

00:42:55.539 --> 00:42:57.929 align:start position:0%
happens with your Python application
what<00:42:55.719><c> what</c><00:42:56.019><c> allocates</c><00:42:56.499><c> memory</c><00:42:56.650><c> or</c><00:42:57.279><c> JavaScript</c>

00:42:57.929 --> 00:42:57.939 align:start position:0%
what what allocates memory or JavaScript
 

00:42:57.939 --> 00:43:00.839 align:start position:0%
what what allocates memory or JavaScript
application<00:42:58.499><c> you</c><00:42:59.499><c> can</c><00:42:59.650><c> use</c><00:42:59.709><c> a</c><00:43:00.069><c> sampler</c><00:43:00.579><c> to</c>

00:43:00.839 --> 00:43:00.849 align:start position:0%
application you can use a sampler to
 

00:43:00.849 --> 00:43:03.029 align:start position:0%
application you can use a sampler to
figure<00:43:01.089><c> out</c><00:43:01.239><c> what</c><00:43:01.569><c> takes</c><00:43:01.839><c> time</c><00:43:02.140><c> in</c><00:43:02.380><c> your</c><00:43:02.739><c> in</c>

00:43:03.029 --> 00:43:03.039 align:start position:0%
figure out what takes time in your in
 

00:43:03.039 --> 00:43:05.400 align:start position:0%
figure out what takes time in your in
your<00:43:03.189><c> languages</c><00:43:03.789><c> in</c><00:43:03.969><c> your</c><00:43:04.179><c> programs</c><00:43:04.539><c> and</c><00:43:04.779><c> all</c>

00:43:05.400 --> 00:43:05.410 align:start position:0%
your languages in your programs and all
 

00:43:05.410 --> 00:43:08.549 align:start position:0%
your languages in your programs and all
of<00:43:05.589><c> those</c><00:43:05.769><c> get</c><00:43:06.519><c> to</c><00:43:06.699><c> you</c><00:43:06.880><c> just</c><00:43:07.089><c> by</c><00:43:07.659><c> implementing</c>

00:43:08.549 --> 00:43:08.559 align:start position:0%
of those get to you just by implementing
 

00:43:08.559 --> 00:43:09.839 align:start position:0%
of those get to you just by implementing
the<00:43:08.739><c> language</c><00:43:09.069><c> on</c><00:43:09.279><c> top</c><00:43:09.519><c> of</c><00:43:09.640><c> the</c><00:43:09.729><c> ground</c>

00:43:09.839 --> 00:43:09.849 align:start position:0%
the language on top of the ground
 

00:43:09.849 --> 00:43:13.199 align:start position:0%
the language on top of the ground
practice<00:43:10.359><c> system</c><00:43:11.549><c> so</c><00:43:12.549><c> that</c><00:43:12.669><c> was</c><00:43:12.819><c> the</c><00:43:12.909><c> polyglot</c>

00:43:13.199 --> 00:43:13.209 align:start position:0%
practice system so that was the polyglot
 

00:43:13.209 --> 00:43:17.339 align:start position:0%
practice system so that was the polyglot
3<00:43:13.479><c> I</c><00:43:14.459><c> am</c><00:43:15.459><c> looking</c><00:43:15.729><c> forward</c><00:43:15.939><c> to</c><00:43:16.089><c> hearing</c><00:43:16.419><c> people</c>

00:43:17.339 --> 00:43:17.349 align:start position:0%
3 I am looking forward to hearing people
 

00:43:17.349 --> 00:43:19.649 align:start position:0%
3 I am looking forward to hearing people
trying<00:43:17.619><c> that</c><00:43:17.829><c> more</c><00:43:18.159><c> and</c><00:43:18.339><c> coming</c><00:43:18.999><c> to</c><00:43:19.269><c> us</c><00:43:19.390><c> and</c>

00:43:19.649 --> 00:43:19.659 align:start position:0%
trying that more and coming to us and
 

00:43:19.659 --> 00:43:22.019 align:start position:0%
trying that more and coming to us and
telling<00:43:20.079><c> us</c><00:43:20.259><c> what</c><00:43:20.529><c> to</c><00:43:20.859><c> improve</c><00:43:20.919><c> but</c><00:43:21.880><c> let's</c>

00:43:22.019 --> 00:43:22.029 align:start position:0%
telling us what to improve but let's
 

00:43:22.029 --> 00:43:24.329 align:start position:0%
telling us what to improve but let's
talk<00:43:22.179><c> about</c><00:43:22.299><c> the</c><00:43:22.749><c> Gran</c><00:43:23.049><c> vía</c><00:43:23.229><c> native</c><00:43:23.979><c> images</c>

00:43:24.329 --> 00:43:24.339 align:start position:0%
talk about the Gran vía native images
 

00:43:24.339 --> 00:43:28.229 align:start position:0%
talk about the Gran vía native images
the<00:43:25.529><c> elephant</c><00:43:26.529><c> in</c><00:43:26.769><c> the</c><00:43:27.039><c> room</c><00:43:27.069><c> of</c><00:43:27.400><c> the</c><00:43:27.849><c> Java</c>

00:43:28.229 --> 00:43:28.239 align:start position:0%
the elephant in the room of the Java
 

00:43:28.239 --> 00:43:30.089 align:start position:0%
the elephant in the room of the Java
ecosystem<00:43:28.839><c> lately</c><00:43:29.140><c> a</c><00:43:29.319><c> very</c><00:43:29.859><c> hot</c><00:43:30.069><c> topic</c>

00:43:30.089 --> 00:43:30.099 align:start position:0%
ecosystem lately a very hot topic
 

00:43:30.099 --> 00:43:32.519 align:start position:0%
ecosystem lately a very hot topic
growing<00:43:31.059><c> native</c><00:43:31.239><c> images</c><00:43:31.689><c> available</c><00:43:31.900><c> as</c><00:43:32.409><c> an</c>

00:43:32.519 --> 00:43:32.529 align:start position:0%
growing native images available as an
 

00:43:32.529 --> 00:43:36.179 align:start position:0%
growing native images available as an
early<00:43:32.799><c> adopter</c><00:43:33.299><c> technology</c><00:43:34.559><c> what</c><00:43:35.559><c> it</c><00:43:35.709><c> does</c><00:43:35.890><c> it</c>

00:43:36.179 --> 00:43:36.189 align:start position:0%
early adopter technology what it does it
 

00:43:36.189 --> 00:43:37.799 align:start position:0%
early adopter technology what it does it
can<00:43:36.369><c> compile</c><00:43:36.759><c> your</c><00:43:36.939><c> application</c><00:43:37.089><c> ahead</c><00:43:37.689><c> of</c>

00:43:37.799 --> 00:43:37.809 align:start position:0%
can compile your application ahead of
 

00:43:37.809 --> 00:43:41.339 align:start position:0%
can compile your application ahead of
time<00:43:37.989><c> to</c><00:43:38.199><c> the</c><00:43:38.319><c> native</c><00:43:38.650><c> binary</c><00:43:39.929><c> what</c><00:43:40.929><c> you</c><00:43:41.109><c> get</c>

00:43:41.339 --> 00:43:41.349 align:start position:0%
time to the native binary what you get
 

00:43:41.349 --> 00:43:47.249 align:start position:0%
time to the native binary what you get
is<00:43:41.589><c> the</c><00:43:42.549><c> fully</c><00:43:43.529><c> compiled</c><00:43:44.880><c> blob</c><00:43:46.049><c> native</c><00:43:47.049><c> of</c><00:43:47.140><c> my</c>

00:43:47.249 --> 00:43:47.259 align:start position:0%
is the fully compiled blob native of my
 

00:43:47.259 --> 00:43:49.649 align:start position:0%
is the fully compiled blob native of my
native<00:43:47.380><c> code</c><00:43:47.650><c> right</c><00:43:48.009><c> you</c><00:43:48.219><c> get</c><00:43:48.400><c> one</c><00:43:48.699><c> file</c><00:43:48.999><c> that</c>

00:43:49.649 --> 00:43:49.659 align:start position:0%
native code right you get one file that
 

00:43:49.659 --> 00:43:52.589 align:start position:0%
native code right you get one file that
is<00:43:49.839><c> has</c><00:43:50.349><c> no</c><00:43:50.709><c> dependencies</c><00:43:51.159><c> OGG</c><00:43:51.609><c> them</c><00:43:51.819><c> it</c><00:43:52.419><c> will</c>

00:43:52.589 --> 00:43:52.599 align:start position:0%
is has no dependencies OGG them it will
 

00:43:52.599 --> 00:43:54.749 align:start position:0%
is has no dependencies OGG them it will
still<00:43:52.869><c> run</c><00:43:53.109><c> your</c><00:43:53.140><c> application</c><00:43:53.829><c> it</c><00:43:54.279><c> will</c><00:43:54.459><c> still</c>

00:43:54.749 --> 00:43:54.759 align:start position:0%
still run your application it will still
 

00:43:54.759 --> 00:43:57.659 align:start position:0%
still run your application it will still
run<00:43:55.029><c> with</c><00:43:55.449><c> certain</c><00:43:56.189><c> components</c><00:43:57.189><c> of</c><00:43:57.279><c> a</c><00:43:57.369><c> virtual</c>

00:43:57.659 --> 00:43:57.669 align:start position:0%
run with certain components of a virtual
 

00:43:57.669 --> 00:43:59.219 align:start position:0%
run with certain components of a virtual
machine<00:43:57.789><c> that</c><00:43:58.089><c> you</c><00:43:58.179><c> would</c><00:43:58.299><c> expect</c><00:43:58.599><c> right</c><00:43:59.109><c> you</c>

00:43:59.219 --> 00:43:59.229 align:start position:0%
machine that you would expect right you
 

00:43:59.229 --> 00:44:01.439 align:start position:0%
machine that you would expect right you
write<00:43:59.469><c> your</c><00:43:59.619><c> programs</c><00:44:00.009><c> and</c><00:44:00.159><c> you</c><00:44:00.309><c> expect</c><00:44:00.729><c> the</c>

00:44:01.439 --> 00:44:01.449 align:start position:0%
write your programs and you expect the
 

00:44:01.449 --> 00:44:03.209 align:start position:0%
write your programs and you expect the
runtime<00:44:02.079><c> to</c><00:44:02.229><c> provide</c><00:44:02.469><c> you</c><00:44:02.589><c> with</c><00:44:02.859><c> a</c><00:44:02.890><c> garbage</c>

00:44:03.209 --> 00:44:03.219 align:start position:0%
runtime to provide you with a garbage
 

00:44:03.219 --> 00:44:05.370 align:start position:0%
runtime to provide you with a garbage
collector<00:44:03.489><c> you</c><00:44:03.909><c> expect</c><00:44:04.390><c> that</c><00:44:04.959><c> your</c><00:44:05.109><c> program</c>

00:44:05.370 --> 00:44:05.380 align:start position:0%
collector you expect that your program
 

00:44:05.380 --> 00:44:08.729 align:start position:0%
collector you expect that your program
will<00:44:05.499><c> work</c><00:44:05.529><c> as</c><00:44:06.039><c> if</c><00:44:06.909><c> memmer</c><00:44:07.299><c> was</c><00:44:07.390><c> infinite</c><00:44:07.959><c> so</c>

00:44:08.729 --> 00:44:08.739 align:start position:0%
will work as if memmer was infinite so
 

00:44:08.739 --> 00:44:11.099 align:start position:0%
will work as if memmer was infinite so
what<00:44:09.279><c> you</c><00:44:09.400><c> get</c><00:44:09.579><c> you</c><00:44:10.119><c> get</c><00:44:10.269><c> that</c><00:44:10.479><c> even</c><00:44:10.689><c> in</c><00:44:10.989><c> the</c>

00:44:11.099 --> 00:44:11.109 align:start position:0%
what you get you get that even in the
 

00:44:11.109 --> 00:44:13.140 align:start position:0%
what you get you get that even in the
compiled<00:44:11.469><c> version</c><00:44:11.739><c> it's</c><00:44:12.519><c> still</c><00:44:12.729><c> a</c><00:44:12.759><c> secure</c>

00:44:13.140 --> 00:44:13.150 align:start position:0%
compiled version it's still a secure
 

00:44:13.150 --> 00:44:14.759 align:start position:0%
compiled version it's still a secure
execution<00:44:13.749><c> so</c><00:44:13.900><c> we</c><00:44:13.989><c> get</c><00:44:14.199><c> the</c><00:44:14.289><c> bound</c><00:44:14.469><c> checks</c>

00:44:14.759 --> 00:44:14.769 align:start position:0%
execution so we get the bound checks
 

00:44:14.769 --> 00:44:15.420 align:start position:0%
execution so we get the bound checks
there<00:44:15.189><c> will</c><00:44:15.279><c> be</c>

00:44:15.420 --> 00:44:15.430 align:start position:0%
there will be
 

00:44:15.430 --> 00:44:18.270 align:start position:0%
there will be
no<00:44:15.579><c> no</c><00:44:16.000><c> no</c><00:44:16.390><c> random</c><00:44:17.079><c> pointers</c><00:44:17.530><c> pointing</c><00:44:18.010><c> into</c>

00:44:18.270 --> 00:44:18.280 align:start position:0%
no no no random pointers pointing into
 

00:44:18.280 --> 00:44:23.339 align:start position:0%
no no no random pointers pointing into
random<00:44:18.640><c> memory</c><00:44:18.970><c> locations</c><00:44:20.940><c> with</c><00:44:22.349><c> respective</c>

00:44:23.339 --> 00:44:23.349 align:start position:0%
random memory locations with respective
 

00:44:23.349 --> 00:44:25.349 align:start position:0%
random memory locations with respective
without<00:44:23.920><c> like</c><00:44:24.099><c> if</c><00:44:24.250><c> there</c><00:44:24.400><c> are</c><00:44:24.490><c> no</c><00:44:24.609><c> errors</c><00:44:24.940><c> or</c>

00:44:25.349 --> 00:44:25.359 align:start position:0%
without like if there are no errors or
 

00:44:25.359 --> 00:44:27.089 align:start position:0%
without like if there are no errors or
bugs<00:44:25.390><c> so</c><00:44:26.050><c> normally</c><00:44:26.530><c> you</c><00:44:26.829><c> have</c><00:44:26.859><c> the</c>

00:44:27.089 --> 00:44:27.099 align:start position:0%
bugs so normally you have the
 

00:44:27.099 --> 00:44:29.400 align:start position:0%
bugs so normally you have the
precompiled<00:44:27.700><c> JVM</c><00:44:28.240><c> and</c><00:44:28.390><c> then</c><00:44:28.780><c> you</c><00:44:28.930><c> execute</c>

00:44:29.400 --> 00:44:29.410 align:start position:0%
precompiled JVM and then you execute
 

00:44:29.410 --> 00:44:32.250 align:start position:0%
precompiled JVM and then you execute
your<00:44:29.970><c> Java</c><00:44:30.970><c> code</c><00:44:31.059><c> dynamically</c><00:44:31.869><c> on</c><00:44:31.900><c> top</c><00:44:32.140><c> of</c>

00:44:32.250 --> 00:44:32.260 align:start position:0%
your Java code dynamically on top of
 

00:44:32.260 --> 00:44:33.630 align:start position:0%
your Java code dynamically on top of
that<00:44:32.349><c> you</c><00:44:32.500><c> load</c><00:44:32.710><c> those</c><00:44:32.920><c> classes</c><00:44:33.309><c> at</c><00:44:33.430><c> runtime</c>

00:44:33.630 --> 00:44:33.640 align:start position:0%
that you load those classes at runtime
 

00:44:33.640 --> 00:44:35.460 align:start position:0%
that you load those classes at runtime
and<00:44:33.970><c> then</c><00:44:34.210><c> you</c><00:44:34.359><c> compile</c><00:44:34.660><c> them</c><00:44:34.809><c> just</c><00:44:35.200><c> in</c><00:44:35.319><c> time</c>

00:44:35.460 --> 00:44:35.470 align:start position:0%
and then you compile them just in time
 

00:44:35.470 --> 00:44:38.250 align:start position:0%
and then you compile them just in time
so<00:44:36.190><c> with</c><00:44:36.760><c> the</c><00:44:36.910><c> native</c><00:44:37.210><c> images</c><00:44:37.569><c> what</c><00:44:37.990><c> you</c><00:44:38.109><c> can</c>

00:44:38.250 --> 00:44:38.260 align:start position:0%
so with the native images what you can
 

00:44:38.260 --> 00:44:40.829 align:start position:0%
so with the native images what you can
do<00:44:38.410><c> you</c><00:44:38.589><c> can</c><00:44:38.740><c> get</c><00:44:38.980><c> just</c><00:44:39.280><c> one</c><00:44:39.700><c> precompiled</c><00:44:40.599><c> blob</c>

00:44:40.829 --> 00:44:40.839 align:start position:0%
do you can get just one precompiled blob
 

00:44:40.839 --> 00:44:43.950 align:start position:0%
do you can get just one precompiled blob
and<00:44:41.380><c> it</c><00:44:42.130><c> happens</c><00:44:42.550><c> like</c><00:44:42.700><c> this</c><00:44:42.880><c> we</c><00:44:43.420><c> look</c><00:44:43.660><c> at</c><00:44:43.780><c> all</c>

00:44:43.950 --> 00:44:43.960 align:start position:0%
and it happens like this we look at all
 

00:44:43.960 --> 00:44:45.960 align:start position:0%
and it happens like this we look at all
the<00:44:44.109><c> classes</c><00:44:44.500><c> just</c><00:44:44.980><c> literally</c><00:44:45.460><c> all</c><00:44:45.670><c> the</c>

00:44:45.960 --> 00:44:45.970 align:start position:0%
the classes just literally all the
 

00:44:45.970 --> 00:44:47.960 align:start position:0%
the classes just literally all the
bytecode<00:44:46.180><c> that</c><00:44:46.720><c> will</c><00:44:46.869><c> ever</c><00:44:47.050><c> be</c><00:44:47.170><c> executed</c>

00:44:47.960 --> 00:44:47.970 align:start position:0%
bytecode that will ever be executed
 

00:44:47.970 --> 00:44:50.940 align:start position:0%
bytecode that will ever be executed
inside<00:44:48.970><c> your</c><00:44:49.150><c> program</c><00:44:49.480><c> and</c><00:44:49.720><c> we</c><00:44:50.349><c> statically</c>

00:44:50.940 --> 00:44:50.950 align:start position:0%
inside your program and we statically
 

00:44:50.950 --> 00:44:53.609 align:start position:0%
inside your program and we statically
analyze<00:44:51.339><c> that</c><00:44:51.550><c> we</c><00:44:51.940><c> find</c><00:44:52.270><c> which</c><00:44:52.839><c> code</c><00:44:53.109><c> calls</c>

00:44:53.609 --> 00:44:53.619 align:start position:0%
analyze that we find which code calls
 

00:44:53.619 --> 00:44:56.430 align:start position:0%
analyze that we find which code calls
which<00:44:54.040><c> code</c><00:44:54.309><c> and</c><00:44:54.609><c> we</c><00:44:55.089><c> we</c><00:44:55.660><c> look</c><00:44:55.930><c> at</c><00:44:56.079><c> that</c><00:44:56.260><c> and</c>

00:44:56.430 --> 00:44:56.440 align:start position:0%
which code and we we look at that and
 

00:44:56.440 --> 00:44:58.710 align:start position:0%
which code and we we look at that and
then<00:44:56.589><c> we</c><00:44:56.710><c> compile</c><00:44:57.190><c> that</c><00:44:57.220><c> we</c><00:44:57.940><c> pre</c><00:44:58.270><c> initialize</c>

00:44:58.710 --> 00:44:58.720 align:start position:0%
then we compile that we pre initialize
 

00:44:58.720 --> 00:45:00.780 align:start position:0%
then we compile that we pre initialize
some<00:44:59.020><c> data</c><00:44:59.230><c> we</c><00:44:59.710><c> write</c><00:45:00.010><c> it</c><00:45:00.160><c> all</c><00:45:00.339><c> into</c><00:45:00.700><c> the</c>

00:45:00.780 --> 00:45:00.790 align:start position:0%
some data we write it all into the
 

00:45:00.790 --> 00:45:02.670 align:start position:0%
some data we write it all into the
binary<00:45:01.000><c> format</c><00:45:01.510><c> and</c><00:45:01.720><c> then</c><00:45:01.930><c> we</c><00:45:02.079><c> just</c><00:45:02.349><c> provide</c>

00:45:02.670 --> 00:45:02.680 align:start position:0%
binary format and then we just provide
 

00:45:02.680 --> 00:45:05.370 align:start position:0%
binary format and then we just provide
some<00:45:02.710><c> wrapper</c><00:45:03.309><c> for</c><00:45:04.150><c> the</c><00:45:04.300><c> operating</c><00:45:04.900><c> system</c><00:45:05.020><c> to</c>

00:45:05.370 --> 00:45:05.380 align:start position:0%
some wrapper for the operating system to
 

00:45:05.380 --> 00:45:07.650 align:start position:0%
some wrapper for the operating system to
be<00:45:05.410><c> able</c><00:45:05.530><c> to</c><00:45:05.650><c> execute</c><00:45:06.010><c> that</c><00:45:06.390><c> you</c><00:45:07.390><c> can</c><00:45:07.510><c> also</c>

00:45:07.650 --> 00:45:07.660 align:start position:0%
be able to execute that you can also
 

00:45:07.660 --> 00:45:09.420 align:start position:0%
be able to execute that you can also
compile<00:45:08.050><c> to</c><00:45:08.230><c> assured</c><00:45:08.440><c> library</c><00:45:08.800><c> if</c><00:45:08.980><c> you</c><00:45:09.040><c> want</c>

00:45:09.420 --> 00:45:09.430 align:start position:0%
compile to assured library if you want
 

00:45:09.430 --> 00:45:11.730 align:start position:0%
compile to assured library if you want
to<00:45:09.550><c> but</c><00:45:10.300><c> a</c><00:45:10.510><c> native</c><00:45:10.900><c> standalone</c><00:45:11.589><c> executable</c>

00:45:11.730 --> 00:45:11.740 align:start position:0%
to but a native standalone executable
 

00:45:11.740 --> 00:45:14.460 align:start position:0%
to but a native standalone executable
might<00:45:12.550><c> be</c><00:45:12.700><c> more</c><00:45:12.970><c> interesting</c><00:45:13.599><c> so</c><00:45:14.290><c> the</c>

00:45:14.460 --> 00:45:14.470 align:start position:0%
might be more interesting so the
 

00:45:14.470 --> 00:45:16.200 align:start position:0%
might be more interesting so the
important<00:45:14.770><c> part</c><00:45:14.920><c> here</c><00:45:15.160><c> is</c><00:45:15.220><c> the</c><00:45:15.550><c> static</c>

00:45:16.200 --> 00:45:16.210 align:start position:0%
important part here is the static
 

00:45:16.210 --> 00:45:18.180 align:start position:0%
important part here is the static
analysis<00:45:16.720><c> we</c><00:45:17.319><c> look</c><00:45:17.500><c> at</c><00:45:17.619><c> the</c><00:45:17.680><c> code</c><00:45:17.859><c> and</c><00:45:18.010><c> we</c>

00:45:18.180 --> 00:45:18.190 align:start position:0%
analysis we look at the code and we
 

00:45:18.190 --> 00:45:20.640 align:start position:0%
analysis we look at the code and we
analyze<00:45:18.579><c> that</c><00:45:18.609><c> statically</c><00:45:19.359><c> that</c><00:45:19.839><c> means</c><00:45:20.109><c> that</c>

00:45:20.640 --> 00:45:20.650 align:start position:0%
analyze that statically that means that
 

00:45:20.650 --> 00:45:23.010 align:start position:0%
analyze that statically that means that
we<00:45:20.770><c> don't</c><00:45:21.220><c> execute</c><00:45:21.549><c> that</c><00:45:21.880><c> actually</c><00:45:22.420><c> right</c><00:45:22.809><c> we</c>

00:45:23.010 --> 00:45:23.020 align:start position:0%
we don't execute that actually right we
 

00:45:23.020 --> 00:45:25.319 align:start position:0%
we don't execute that actually right we
just<00:45:23.260><c> look</c><00:45:23.500><c> at</c><00:45:23.589><c> it</c><00:45:23.650><c> and</c><00:45:23.950><c> that</c><00:45:24.760><c> poses</c><00:45:25.000><c> certain</c>

00:45:25.319 --> 00:45:25.329 align:start position:0%
just look at it and that poses certain
 

00:45:25.329 --> 00:45:27.599 align:start position:0%
just look at it and that poses certain
challenges<00:45:25.480><c> and</c><00:45:26.079><c> trade-offs</c><00:45:26.609><c> namely</c>

00:45:27.599 --> 00:45:27.609 align:start position:0%
challenges and trade-offs namely
 

00:45:27.609 --> 00:45:29.910 align:start position:0%
challenges and trade-offs namely
something's<00:45:28.299><c> indeed</c><00:45:28.869><c> our</c><00:45:29.049><c> programs</c><00:45:29.740><c> can</c>

00:45:29.910 --> 00:45:29.920 align:start position:0%
something's indeed our programs can
 

00:45:29.920 --> 00:45:32.069 align:start position:0%
something's indeed our programs can
happen<00:45:30.220><c> dynamically</c><00:45:30.760><c> for</c><00:45:31.420><c> example</c><00:45:31.809><c> you</c><00:45:31.930><c> can</c>

00:45:32.069 --> 00:45:32.079 align:start position:0%
happen dynamically for example you can
 

00:45:32.079 --> 00:45:35.370 align:start position:0%
happen dynamically for example you can
use<00:45:32.109><c> reflection</c><00:45:32.770><c> and</c><00:45:33.240><c> we</c><00:45:34.240><c> it's</c><00:45:34.660><c> impossible</c><00:45:35.290><c> to</c>

00:45:35.370 --> 00:45:35.380 align:start position:0%
use reflection and we it's impossible to
 

00:45:35.380 --> 00:45:36.680 align:start position:0%
use reflection and we it's impossible to
figure<00:45:35.559><c> out</c><00:45:35.680><c> the</c><00:45:35.890><c> reflection</c><00:45:36.130><c> calls</c>

00:45:36.680 --> 00:45:36.690 align:start position:0%
figure out the reflection calls
 

00:45:36.690 --> 00:45:39.349 align:start position:0%
figure out the reflection calls
statically<00:45:37.690><c> not</c><00:45:37.990><c> always</c><00:45:38.380><c> possible</c><00:45:38.559><c> it's</c><00:45:38.980><c> not</c>

00:45:39.349 --> 00:45:39.359 align:start position:0%
statically not always possible it's not
 

00:45:39.359 --> 00:45:42.420 align:start position:0%
statically not always possible it's not
generically<00:45:40.380><c> universally</c><00:45:41.380><c> possible</c><00:45:41.890><c> so</c><00:45:42.280><c> what</c>

00:45:42.420 --> 00:45:42.430 align:start position:0%
generically universally possible so what
 

00:45:42.430 --> 00:45:43.620 align:start position:0%
generically universally possible so what
you<00:45:42.520><c> need</c><00:45:42.640><c> to</c><00:45:42.700><c> do</c><00:45:42.880><c> you</c><00:45:43.030><c> need</c><00:45:43.150><c> to</c><00:45:43.210><c> provide</c><00:45:43.450><c> some</c>

00:45:43.620 --> 00:45:43.630 align:start position:0%
you need to do you need to provide some
 

00:45:43.630 --> 00:45:46.410 align:start position:0%
you need to do you need to provide some
hints<00:45:43.930><c> some</c><00:45:44.530><c> configuration</c><00:45:45.220><c> saying</c><00:45:46.030><c> that</c><00:45:46.240><c> oh</c>

00:45:46.410 --> 00:45:46.420 align:start position:0%
hints some configuration saying that oh
 

00:45:46.420 --> 00:45:48.660 align:start position:0%
hints some configuration saying that oh
I've<00:45:46.660><c> I'm</c><00:45:46.869><c> gonna</c><00:45:47.020><c> use</c><00:45:47.230><c> this</c><00:45:47.440><c> feature</c><00:45:47.950><c> through</c>

00:45:48.660 --> 00:45:48.670 align:start position:0%
I've I'm gonna use this feature through
 

00:45:48.670 --> 00:45:50.700 align:start position:0%
I've I'm gonna use this feature through
reflection<00:45:49.030><c> I'm</c><00:45:49.450><c> gonna</c><00:45:49.690><c> patch</c><00:45:49.930><c> those</c><00:45:50.170><c> classes</c>

00:45:50.700 --> 00:45:50.710 align:start position:0%
reflection I'm gonna patch those classes
 

00:45:50.710 --> 00:45:52.950 align:start position:0%
reflection I'm gonna patch those classes
at<00:45:50.890><c> runtime</c><00:45:51.309><c> and</c><00:45:51.640><c> then</c><00:45:52.150><c> we</c><00:45:52.329><c> can</c><00:45:52.510><c> look</c><00:45:52.720><c> at</c><00:45:52.869><c> those</c>

00:45:52.950 --> 00:45:52.960 align:start position:0%
at runtime and then we can look at those
 

00:45:52.960 --> 00:45:54.720 align:start position:0%
at runtime and then we can look at those
classes<00:45:53.380><c> and</c><00:45:53.530><c> we</c><00:45:53.799><c> can</c><00:45:53.950><c> put</c><00:45:54.220><c> them</c><00:45:54.369><c> into</c><00:45:54.549><c> this</c>

00:45:54.720 --> 00:45:54.730 align:start position:0%
classes and we can put them into this
 

00:45:54.730 --> 00:45:57.569 align:start position:0%
classes and we can put them into this
final<00:45:55.200><c> executable</c><00:45:56.220><c> tree</c><00:45:57.220><c> provide</c><00:45:57.490><c> the</c>

00:45:57.569 --> 00:45:57.579 align:start position:0%
final executable tree provide the
 

00:45:57.579 --> 00:45:59.069 align:start position:0%
final executable tree provide the
configuration<00:45:58.059><c> you</c><00:45:58.150><c> need</c><00:45:58.180><c> to</c><00:45:58.329><c> write</c><00:45:58.630><c> a</c><00:45:58.660><c> JSON</c>

00:45:59.069 --> 00:45:59.079 align:start position:0%
configuration you need to write a JSON
 

00:45:59.079 --> 00:46:01.200 align:start position:0%
configuration you need to write a JSON
file<00:45:59.460><c> which</c><00:46:00.460><c> could</c><00:46:00.670><c> be</c><00:46:00.819><c> a</c><00:46:00.849><c> little</c><00:46:01.030><c> bit</c>

00:46:01.200 --> 00:46:01.210 align:start position:0%
file which could be a little bit
 

00:46:01.210 --> 00:46:04.140 align:start position:0%
file which could be a little bit
annoying<00:46:01.480><c> to</c><00:46:01.780><c> write</c><00:46:02.290><c> JSON</c><00:46:02.650><c> files</c><00:46:02.859><c> we</c><00:46:03.430><c> know</c><00:46:03.579><c> we</c>

00:46:04.140 --> 00:46:04.150 align:start position:0%
annoying to write JSON files we know we
 

00:46:04.150 --> 00:46:06.299 align:start position:0%
annoying to write JSON files we know we
know<00:46:04.650><c> but</c><00:46:05.650><c> it</c><00:46:05.770><c> is</c><00:46:05.799><c> possible</c>

00:46:06.299 --> 00:46:06.309 align:start position:0%
know but it is possible
 

00:46:06.309 --> 00:46:07.950 align:start position:0%
know but it is possible
so<00:46:06.609><c> proxy</c><00:46:07.059><c> configuration</c><00:46:07.210><c> j'ni</c>

00:46:07.950 --> 00:46:07.960 align:start position:0%
so proxy configuration j'ni
 

00:46:07.960 --> 00:46:11.510 align:start position:0%
so proxy configuration j'ni
configuration<00:46:09.000><c> reflection</c><00:46:10.000><c> require</c><00:46:10.750><c> some</c>

00:46:11.510 --> 00:46:11.520 align:start position:0%
configuration reflection require some
 

00:46:11.520 --> 00:46:13.260 align:start position:0%
configuration reflection require some
additional<00:46:12.520><c> configuration</c><00:46:13.059><c> from</c><00:46:13.210><c> the</c>

00:46:13.260 --> 00:46:13.270 align:start position:0%
additional configuration from the
 

00:46:13.270 --> 00:46:15.000 align:start position:0%
additional configuration from the
developer<00:46:13.750><c> the</c><00:46:13.990><c> good</c><00:46:14.470><c> thing</c><00:46:14.619><c> is</c><00:46:14.799><c> as</c>

00:46:15.000 --> 00:46:15.010 align:start position:0%
developer the good thing is as
 

00:46:15.010 --> 00:46:19.200 align:start position:0%
developer the good thing is as
developers<00:46:15.910><c> you</c><00:46:16.150><c> are</c><00:46:16.750><c> the</c><00:46:17.380><c> sole</c><00:46:18.309><c> owner</c><00:46:18.700><c> of</c><00:46:19.119><c> the</c>

00:46:19.200 --> 00:46:19.210 align:start position:0%
developers you are the sole owner of the
 

00:46:19.210 --> 00:46:21.599 align:start position:0%
developers you are the sole owner of the
code<00:46:19.750><c> that</c><00:46:19.930><c> you're</c><00:46:20.109><c> running</c><00:46:20.290><c> right</c><00:46:21.099><c> you</c><00:46:21.430><c> can</c>

00:46:21.599 --> 00:46:21.609 align:start position:0%
code that you're running right you can
 

00:46:21.609 --> 00:46:24.180 align:start position:0%
code that you're running right you can
do<00:46:21.790><c> anything</c><00:46:22.359><c> whatever</c><00:46:22.809><c> you</c><00:46:23.170><c> can</c><00:46:23.349><c> imagine</c><00:46:23.470><c> you</c>

00:46:24.180 --> 00:46:24.190 align:start position:0%
do anything whatever you can imagine you
 

00:46:24.190 --> 00:46:25.920 align:start position:0%
do anything whatever you can imagine you
can<00:46:24.400><c> do</c><00:46:24.549><c> with</c><00:46:24.760><c> the</c><00:46:24.880><c> code</c>

00:46:25.920 --> 00:46:25.930 align:start position:0%
can do with the code
 

00:46:25.930 --> 00:46:28.140 align:start position:0%
can do with the code
that's<00:46:26.170><c> the</c><00:46:26.500><c> power</c><00:46:26.920><c> of</c><00:46:27.130><c> and</c><00:46:27.610><c> the</c><00:46:27.730><c> privilege</c><00:46:28.060><c> of</c>

00:46:28.140 --> 00:46:28.150 align:start position:0%
that's the power of and the privilege of
 

00:46:28.150 --> 00:46:30.840 align:start position:0%
that's the power of and the privilege of
being<00:46:28.210><c> a</c><00:46:28.420><c> developer</c><00:46:28.980><c> so</c><00:46:29.980><c> we</c><00:46:30.100><c> can</c><00:46:30.310><c> totally</c><00:46:30.610><c> do</c>

00:46:30.840 --> 00:46:30.850 align:start position:0%
being a developer so we can totally do
 

00:46:30.850 --> 00:46:35.700 align:start position:0%
being a developer so we can totally do
that<00:46:32.130><c> since</c><00:46:33.130><c> the</c><00:46:33.880><c> ground</c><00:46:34.300><c> viim</c><00:46:34.570><c> 19</c><00:46:35.080><c> we</c><00:46:35.680><c> have</c>

00:46:35.700 --> 00:46:35.710 align:start position:0%
that since the ground viim 19 we have
 

00:46:35.710 --> 00:46:39.120 align:start position:0%
that since the ground viim 19 we have
another<00:46:37.110><c> another</c><00:46:38.110><c> way</c><00:46:38.320><c> of</c><00:46:38.380><c> providing</c><00:46:38.920><c> that</c>

00:46:39.120 --> 00:46:39.130 align:start position:0%
another another way of providing that
 

00:46:39.130 --> 00:46:41.280 align:start position:0%
another another way of providing that
configuration<00:46:39.610><c> we</c><00:46:40.180><c> can</c><00:46:40.330><c> run</c><00:46:40.540><c> your</c><00:46:40.750><c> java</c>

00:46:41.280 --> 00:46:41.290 align:start position:0%
configuration we can run your java
 

00:46:41.290 --> 00:46:44.970 align:start position:0%
configuration we can run your java
program<00:46:41.800><c> normally</c><00:46:42.360><c> with</c><00:46:43.360><c> the</c><00:46:43.780><c> Java</c><00:46:44.440><c> agent</c><00:46:44.830><c> and</c>

00:46:44.970 --> 00:46:44.980 align:start position:0%
program normally with the Java agent and
 

00:46:44.980 --> 00:46:46.920 align:start position:0%
program normally with the Java agent and
every<00:46:45.790><c> time</c><00:46:45.970><c> you</c><00:46:46.120><c> use</c><00:46:46.330><c> something</c><00:46:46.570><c> through</c><00:46:46.900><c> a</c>

00:46:46.920 --> 00:46:46.930 align:start position:0%
every time you use something through a
 

00:46:46.930 --> 00:46:48.840 align:start position:0%
every time you use something through a
reflection<00:46:47.500><c> it</c><00:46:48.010><c> will</c><00:46:48.250><c> gather</c><00:46:48.520><c> that</c>

00:46:48.840 --> 00:46:48.850 align:start position:0%
reflection it will gather that
 

00:46:48.850 --> 00:46:52.950 align:start position:0%
reflection it will gather that
information<00:46:49.060><c> and</c><00:46:49.600><c> it</c><00:46:49.990><c> will</c><00:46:51.810><c> build</c><00:46:52.810><c> those</c>

00:46:52.950 --> 00:46:52.960 align:start position:0%
information and it will build those
 

00:46:52.960 --> 00:46:55.530 align:start position:0%
information and it will build those
configuration<00:46:53.500><c> files</c><00:46:53.710><c> for</c><00:46:53.980><c> you</c><00:46:54.270><c> right</c><00:46:55.270><c> so</c><00:46:55.480><c> you</c>

00:46:55.530 --> 00:46:55.540 align:start position:0%
configuration files for you right so you
 

00:46:55.540 --> 00:46:58.380 align:start position:0%
configuration files for you right so you
can<00:46:55.930><c> use</c><00:46:56.650><c> this</c><00:46:56.860><c> assisted</c><00:46:57.340><c> configuration</c><00:46:57.910><c> run</c>

00:46:58.380 --> 00:46:58.390 align:start position:0%
can use this assisted configuration run
 

00:46:58.390 --> 00:47:00.570 align:start position:0%
can use this assisted configuration run
your<00:46:58.570><c> tests</c><00:46:58.990><c> run</c><00:46:59.470><c> your</c><00:46:59.620><c> application</c><00:47:00.160><c> normally</c>

00:47:00.570 --> 00:47:00.580 align:start position:0%
your tests run your application normally
 

00:47:00.580 --> 00:47:03.270 align:start position:0%
your tests run your application normally
and<00:47:00.760><c> then</c><00:47:01.060><c> use</c><00:47:01.360><c> those</c><00:47:01.600><c> output</c><00:47:02.170><c> files</c><00:47:02.410><c> to</c><00:47:03.070><c> give</c>

00:47:03.270 --> 00:47:03.280 align:start position:0%
and then use those output files to give
 

00:47:03.280 --> 00:47:05.910 align:start position:0%
and then use those output files to give
them<00:47:03.520><c> to</c><00:47:03.970><c> the</c><00:47:04.090><c> compiler</c><00:47:04.480><c> for</c><00:47:05.170><c> building</c><00:47:05.830><c> the</c>

00:47:05.910 --> 00:47:05.920 align:start position:0%
them to the compiler for building the
 

00:47:05.920 --> 00:47:09.420 align:start position:0%
them to the compiler for building the
final<00:47:06.250><c> image</c><00:47:06.990><c> so</c><00:47:07.990><c> configuring</c><00:47:08.800><c> applications</c>

00:47:09.420 --> 00:47:09.430 align:start position:0%
final image so configuring applications
 

00:47:09.430 --> 00:47:11.520 align:start position:0%
final image so configuring applications
became<00:47:10.000><c> much</c><00:47:10.180><c> easier</c><00:47:10.630><c> you</c><00:47:11.170><c> still</c><00:47:11.380><c> need</c>

00:47:11.520 --> 00:47:11.530 align:start position:0%
became much easier you still need
 

00:47:11.530 --> 00:47:13.050 align:start position:0%
became much easier you still need
probably<00:47:11.860><c> to</c><00:47:12.040><c> exhaust</c><00:47:12.310><c> all</c><00:47:12.490><c> the</c><00:47:12.550><c> code</c><00:47:12.820><c> paths</c>

00:47:13.050 --> 00:47:13.060 align:start position:0%
probably to exhaust all the code paths
 

00:47:13.060 --> 00:47:16.980 align:start position:0%
probably to exhaust all the code paths
but<00:47:13.870><c> if</c><00:47:14.050><c> you</c><00:47:14.200><c> run</c><00:47:14.440><c> your</c><00:47:14.650><c> tests</c><00:47:15.010><c> yet</c><00:47:15.990><c> probably</c>

00:47:16.980 --> 00:47:16.990 align:start position:0%
but if you run your tests yet probably
 

00:47:16.990 --> 00:47:18.630 align:start position:0%
but if you run your tests yet probably
you<00:47:17.140><c> are</c><00:47:17.170><c> in</c><00:47:17.380><c> a</c><00:47:17.470><c> much</c><00:47:17.560><c> better</c><00:47:17.620><c> shape</c><00:47:18.100><c> than</c><00:47:18.370><c> if</c>

00:47:18.630 --> 00:47:18.640 align:start position:0%
you are in a much better shape than if
 

00:47:18.640 --> 00:47:21.600 align:start position:0%
you are in a much better shape than if
you<00:47:19.030><c> just</c><00:47:19.240><c> try</c><00:47:19.510><c> to</c><00:47:19.570><c> gather</c><00:47:20.320><c> those</c><00:47:20.590><c> JSON</c><00:47:21.400><c> files</c>

00:47:21.600 --> 00:47:21.610 align:start position:0%
you just try to gather those JSON files
 

00:47:21.610 --> 00:47:24.200 align:start position:0%
you just try to gather those JSON files
and<00:47:21.880><c> write</c><00:47:22.030><c> them</c><00:47:22.180><c> by</c><00:47:22.330><c> hand</c>

00:47:24.200 --> 00:47:24.210 align:start position:0%
and write them by hand
 

00:47:24.210 --> 00:47:26.820 align:start position:0%
and write them by hand
the<00:47:25.210><c> results</c><00:47:25.690><c> the</c><00:47:26.320><c> results</c><00:47:26.650><c> are</c><00:47:26.740><c> fairly</c>

00:47:26.820 --> 00:47:26.830 align:start position:0%
the results the results are fairly
 

00:47:26.830 --> 00:47:28.890 align:start position:0%
the results the results are fairly
excellent<00:47:27.460><c> the</c><00:47:28.210><c> startup</c><00:47:28.630><c> of</c><00:47:28.720><c> those</c>

00:47:28.890 --> 00:47:28.900 align:start position:0%
excellent the startup of those
 

00:47:28.900 --> 00:47:31.260 align:start position:0%
excellent the startup of those
applications<00:47:29.500><c> is</c><00:47:29.680><c> in</c><00:47:29.950><c> milliseconds</c><00:47:30.610><c> right</c>

00:47:31.260 --> 00:47:31.270 align:start position:0%
applications is in milliseconds right
 

00:47:31.270 --> 00:47:34.170 align:start position:0%
applications is in milliseconds right
it's<00:47:31.930><c> it</c><00:47:32.200><c> can</c><00:47:32.410><c> start</c><00:47:32.740><c> in</c><00:47:32.920><c> the</c><00:47:33.490><c> typical</c><00:47:34.000><c> web</c>

00:47:34.170 --> 00:47:34.180 align:start position:0%
it's it can start in the typical web
 

00:47:34.180 --> 00:47:36.690 align:start position:0%
it's it can start in the typical web
service<00:47:34.510><c> in</c><00:47:34.720><c> under</c><00:47:35.260><c> 20</c><00:47:35.590><c> milliseconds</c><00:47:36.130><c> those</c>

00:47:36.690 --> 00:47:36.700 align:start position:0%
service in under 20 milliseconds those
 

00:47:36.700 --> 00:47:39.360 align:start position:0%
service in under 20 milliseconds those
are<00:47:36.880><c> the</c><00:47:36.970><c> startup</c><00:47:37.330><c> numbers</c><00:47:37.630><c> for</c><00:47:38.370><c> native</c>

00:47:39.360 --> 00:47:39.370 align:start position:0%
are the startup numbers for native
 

00:47:39.370 --> 00:47:41.490 align:start position:0%
are the startup numbers for native
languages<00:47:39.670><c> for</c><00:47:40.000><c> go</c><00:47:40.180><c> if</c><00:47:40.420><c> you</c><00:47:40.810><c> want</c><00:47:41.020><c> to</c><00:47:41.080><c> rewrite</c>

00:47:41.490 --> 00:47:41.500 align:start position:0%
languages for go if you want to rewrite
 

00:47:41.500 --> 00:47:43.290 align:start position:0%
languages for go if you want to rewrite
your<00:47:41.560><c> systems</c><00:47:42.070><c> and</c><00:47:42.250><c> go</c><00:47:42.370><c> for</c><00:47:42.580><c> better</c><00:47:42.700><c> startup</c>

00:47:43.290 --> 00:47:43.300 align:start position:0%
your systems and go for better startup
 

00:47:43.300 --> 00:47:46.020 align:start position:0%
your systems and go for better startup
maybe<00:47:43.990><c> you</c><00:47:44.170><c> shouldn't</c><00:47:44.470><c> the</c><00:47:45.370><c> runtime</c><00:47:45.760><c> memory</c>

00:47:46.020 --> 00:47:46.030 align:start position:0%
maybe you shouldn't the runtime memory
 

00:47:46.030 --> 00:47:48.690 align:start position:0%
maybe you shouldn't the runtime memory
overhead<00:47:46.420><c> is</c><00:47:46.900><c> also</c><00:47:47.530><c> quite</c><00:47:47.740><c> limited</c><00:47:48.130><c> the</c><00:47:48.580><c> thing</c>

00:47:48.690 --> 00:47:48.700 align:start position:0%
overhead is also quite limited the thing
 

00:47:48.700 --> 00:47:51.210 align:start position:0%
overhead is also quite limited the thing
is<00:47:48.880><c> we</c><00:47:49.570><c> don't</c><00:47:49.600><c> need</c><00:47:49.990><c> the</c><00:47:50.140><c> machinery</c><00:47:50.560><c> to</c><00:47:50.980><c> load</c>

00:47:51.210 --> 00:47:51.220 align:start position:0%
is we don't need the machinery to load
 

00:47:51.220 --> 00:47:52.950 align:start position:0%
is we don't need the machinery to load
dynamically<00:47:52.030><c> additional</c><00:47:52.300><c> classes</c><00:47:52.690><c> there</c><00:47:52.930><c> is</c>

00:47:52.950 --> 00:47:52.960 align:start position:0%
dynamically additional classes there is
 

00:47:52.960 --> 00:47:55.650 align:start position:0%
dynamically additional classes there is
no<00:47:53.320><c> compiler</c><00:47:54.070><c> in</c><00:47:54.430><c> there</c><00:47:54.610><c> so</c><00:47:55.060><c> we</c><00:47:55.180><c> don't</c><00:47:55.420><c> need</c><00:47:55.600><c> to</c>

00:47:55.650 --> 00:47:55.660 align:start position:0%
no compiler in there so we don't need to
 

00:47:55.660 --> 00:47:57.930 align:start position:0%
no compiler in there so we don't need to
initialize<00:47:56.350><c> all</c><00:47:56.380><c> those</c><00:47:56.740><c> data</c><00:47:56.980><c> structures</c><00:47:57.340><c> so</c>

00:47:57.930 --> 00:47:57.940 align:start position:0%
initialize all those data structures so
 

00:47:57.940 --> 00:47:59.940 align:start position:0%
initialize all those data structures so
we<00:47:58.030><c> can</c><00:47:58.210><c> run</c><00:47:58.420><c> with</c><00:47:58.690><c> literally</c><00:47:59.200><c> just</c><00:47:59.590><c> some</c>

00:47:59.940 --> 00:47:59.950 align:start position:0%
we can run with literally just some
 

00:47:59.950 --> 00:48:02.910 align:start position:0%
we can run with literally just some
megabytes<00:48:00.460><c> of</c><00:48:00.640><c> RAM</c><00:48:01.350><c> available</c><00:48:02.350><c> and</c><00:48:02.500><c> this</c><00:48:02.800><c> is</c>

00:48:02.910 --> 00:48:02.920 align:start position:0%
megabytes of RAM available and this is
 

00:48:02.920 --> 00:48:04.560 align:start position:0%
megabytes of RAM available and this is
really<00:48:03.160><c> good</c><00:48:03.340><c> in</c><00:48:03.520><c> certain</c><00:48:04.030><c> environments</c><00:48:04.120><c> if</c>

00:48:04.560 --> 00:48:04.570 align:start position:0%
really good in certain environments if
 

00:48:04.570 --> 00:48:06.660 align:start position:0%
really good in certain environments if
you<00:48:04.750><c> disturb</c><00:48:05.050><c> LS</c><00:48:05.320><c> function</c><00:48:05.890><c> the</c><00:48:06.040><c> service</c><00:48:06.310><c> or</c>

00:48:06.660 --> 00:48:06.670 align:start position:0%
you disturb LS function the service or
 

00:48:06.670 --> 00:48:08.160 align:start position:0%
you disturb LS function the service or
just<00:48:06.730><c> all</c><00:48:07.210><c> the</c><00:48:07.330><c> scale</c><00:48:07.540><c> and</c><00:48:07.660><c> micro</c><00:48:07.870><c> services</c>

00:48:08.160 --> 00:48:08.170 align:start position:0%
just all the scale and micro services
 

00:48:08.170 --> 00:48:12.590 align:start position:0%
just all the scale and micro services
this<00:48:09.070><c> is</c><00:48:09.250><c> the</c><00:48:09.670><c> thing</c><00:48:09.850><c> to</c><00:48:10.030><c> look</c><00:48:10.180><c> into</c><00:48:10.950><c> right</c><00:48:11.950><c> so</c>

00:48:12.590 --> 00:48:12.600 align:start position:0%
this is the thing to look into right so
 

00:48:12.600 --> 00:48:15.540 align:start position:0%
this is the thing to look into right so
spring<00:48:13.600><c> applications</c><00:48:14.200><c> the</c><00:48:14.980><c> most</c><00:48:15.190><c> important</c>

00:48:15.540 --> 00:48:15.550 align:start position:0%
spring applications the most important
 

00:48:15.550 --> 00:48:17.610 align:start position:0%
spring applications the most important
issue<00:48:15.790><c> here</c><00:48:16.150><c> is</c><00:48:16.330><c> that</c><00:48:16.570><c> currently</c><00:48:17.080><c> out</c><00:48:17.290><c> of</c><00:48:17.530><c> the</c>

00:48:17.610 --> 00:48:17.620 align:start position:0%
issue here is that currently out of the
 

00:48:17.620 --> 00:48:19.860 align:start position:0%
issue here is that currently out of the
box<00:48:17.800><c> not</c><00:48:18.730><c> all</c><00:48:18.910><c> spring</c><00:48:19.180><c> applications</c><00:48:19.720><c> will</c>

00:48:19.860 --> 00:48:19.870 align:start position:0%
box not all spring applications will
 

00:48:19.870 --> 00:48:24.240 align:start position:0%
box not all spring applications will
work<00:48:20.610><c> allegedly</c><00:48:21.610><c> there</c><00:48:22.180><c> is</c><00:48:22.270><c> some</c><00:48:22.950><c> support</c><00:48:23.950><c> in</c>

00:48:24.240 --> 00:48:24.250 align:start position:0%
work allegedly there is some support in
 

00:48:24.250 --> 00:48:26.940 align:start position:0%
work allegedly there is some support in
the<00:48:24.760><c> spring</c><00:48:25.330><c> so</c><00:48:25.510><c> currently</c><00:48:26.080><c> for</c><00:48:26.290><c> a</c><00:48:26.320><c> year</c><00:48:26.770><c> now</c>

00:48:26.940 --> 00:48:26.950 align:start position:0%
the spring so currently for a year now
 

00:48:26.950 --> 00:48:28.530 align:start position:0%
the spring so currently for a year now
since<00:48:27.310><c> we</c><00:48:27.460><c> announced</c><00:48:27.700><c> that</c><00:48:27.880><c> we</c><00:48:28.090><c> want</c><00:48:28.270><c> to</c><00:48:28.330><c> get</c>

00:48:28.530 --> 00:48:28.540 align:start position:0%
since we announced that we want to get
 

00:48:28.540 --> 00:48:31.140 align:start position:0%
since we announced that we want to get
live<00:48:28.900><c> with</c><00:48:29.260><c> this</c><00:48:29.440><c> we've</c><00:48:30.070><c> been</c><00:48:30.220><c> working</c><00:48:30.670><c> fixing</c>

00:48:31.140 --> 00:48:31.150 align:start position:0%
live with this we've been working fixing
 

00:48:31.150 --> 00:48:33.120 align:start position:0%
live with this we've been working fixing
issues<00:48:31.270><c> and</c><00:48:31.750><c> we're</c><00:48:32.380><c> working</c><00:48:32.500><c> and</c><00:48:32.770><c> talking</c><00:48:32.860><c> to</c>

00:48:33.120 --> 00:48:33.130 align:start position:0%
issues and we're working and talking to
 

00:48:33.130 --> 00:48:35.880 align:start position:0%
issues and we're working and talking to
people<00:48:33.250><c> engineers</c><00:48:33.850><c> and</c><00:48:34.030><c> and</c><00:48:34.570><c> they</c><00:48:34.750><c> made</c><00:48:35.590><c> a</c><00:48:35.620><c> lot</c>

00:48:35.880 --> 00:48:35.890 align:start position:0%
people engineers and and they made a lot
 

00:48:35.890 --> 00:48:37.770 align:start position:0%
people engineers and and they made a lot
of<00:48:35.920><c> effort</c><00:48:36.310><c> to</c><00:48:36.340><c> make</c><00:48:37.180><c> the</c><00:48:37.330><c> framework</c><00:48:37.540><c> code</c>

00:48:37.770 --> 00:48:37.780 align:start position:0%
of effort to make the framework code
 

00:48:37.780 --> 00:48:38.480 align:start position:0%
of effort to make the framework code
more

00:48:38.480 --> 00:48:38.490 align:start position:0%
more
 

00:48:38.490 --> 00:48:40.820 align:start position:0%
more
towards<00:48:38.940><c> the</c><00:48:39.000><c> native</c><00:48:39.270><c> image</c><00:48:39.450><c> generation</c><00:48:39.930><c> and</c>

00:48:40.820 --> 00:48:40.830 align:start position:0%
towards the native image generation and
 

00:48:40.830 --> 00:48:43.430 align:start position:0%
towards the native image generation and
the<00:48:41.369><c> support</c><00:48:41.400><c> the</c><00:48:41.970><c> full</c><00:48:42.210><c> support</c><00:48:42.570><c> and</c><00:48:43.020><c> the</c>

00:48:43.430 --> 00:48:43.440 align:start position:0%
the support the full support and the
 

00:48:43.440 --> 00:48:46.010 align:start position:0%
the support the full support and the
better<00:48:43.619><c> support</c><00:48:44.040><c> is</c><00:48:44.280><c> coming</c><00:48:44.910><c> in</c><00:48:45.060><c> the</c><00:48:45.390><c> upcoming</c>

00:48:46.010 --> 00:48:46.020 align:start position:0%
better support is coming in the upcoming
 

00:48:46.020 --> 00:48:48.109 align:start position:0%
better support is coming in the upcoming
versions<00:48:46.500><c> and</c><00:48:46.710><c> we</c><00:48:47.339><c> are</c><00:48:47.460><c> looking</c><00:48:47.640><c> forward</c><00:48:48.000><c> to</c>

00:48:48.109 --> 00:48:48.119 align:start position:0%
versions and we are looking forward to
 

00:48:48.119 --> 00:48:48.470 align:start position:0%
versions and we are looking forward to
that

00:48:48.470 --> 00:48:48.480 align:start position:0%
that
 

00:48:48.480 --> 00:48:49.730 align:start position:0%
that
and<00:48:48.570><c> I</c><00:48:48.930><c> know</c><00:48:49.050><c> the</c><00:48:49.200><c> community</c><00:48:49.290><c> is</c><00:48:49.589><c> looking</c>

00:48:49.730 --> 00:48:49.740 align:start position:0%
and I know the community is looking
 

00:48:49.740 --> 00:48:52.490 align:start position:0%
and I know the community is looking
forward<00:48:50.160><c> to</c><00:48:50.250><c> that</c><00:48:50.540><c> but</c><00:48:51.540><c> currently</c><00:48:51.960><c> if</c><00:48:52.109><c> you</c><00:48:52.230><c> try</c>

00:48:52.490 --> 00:48:52.500 align:start position:0%
forward to that but currently if you try
 

00:48:52.500 --> 00:48:55.400 align:start position:0%
forward to that but currently if you try
just<00:48:53.070><c> know</c><00:48:53.700><c> that</c><00:48:53.970><c> it's</c><00:48:54.300><c> not</c><00:48:54.540><c> fully</c><00:48:54.810><c> there</c><00:48:55.050><c> yet</c>

00:48:55.400 --> 00:48:55.410 align:start position:0%
just know that it's not fully there yet
 

00:48:55.410 --> 00:48:57.109 align:start position:0%
just know that it's not fully there yet
you<00:48:55.619><c> need</c><00:48:55.800><c> to</c><00:48:55.980><c> fiddle</c><00:48:56.220><c> with</c><00:48:56.339><c> configuration</c>

00:48:57.109 --> 00:48:57.119 align:start position:0%
you need to fiddle with configuration
 

00:48:57.119 --> 00:48:58.579 align:start position:0%
you need to fiddle with configuration
you<00:48:57.480><c> need</c><00:48:57.510><c> to</c><00:48:57.750><c> maybe</c><00:48:57.900><c> use</c><00:48:58.230><c> the</c><00:48:58.410><c> certain</c>

00:48:58.579 --> 00:48:58.589 align:start position:0%
you need to maybe use the certain
 

00:48:58.589 --> 00:49:01.280 align:start position:0%
you need to maybe use the certain
versions<00:48:59.070><c> of</c><00:48:59.280><c> the</c><00:48:59.580><c> dravyam</c><00:49:00.330><c> and</c><00:49:00.510><c> string</c><00:49:00.990><c> or</c>

00:49:01.280 --> 00:49:01.290 align:start position:0%
versions of the dravyam and string or
 

00:49:01.290 --> 00:49:04.670 align:start position:0%
versions of the dravyam and string or
the<00:49:01.890><c> starter</c><00:49:02.670><c> files</c><00:49:02.970><c> right</c><00:49:03.660><c> so</c><00:49:04.170><c> there</c><00:49:04.560><c> are</c>

00:49:04.670 --> 00:49:04.680 align:start position:0%
the starter files right so there are
 

00:49:04.680 --> 00:49:08.270 align:start position:0%
the starter files right so there are
issues<00:49:04.849><c> but</c><00:49:05.849><c> the</c><00:49:06.720><c> work</c><00:49:06.930><c> is</c><00:49:07.170><c> ongoing</c><00:49:07.410><c> and</c><00:49:07.890><c> the</c>

00:49:08.270 --> 00:49:08.280 align:start position:0%
issues but the work is ongoing and the
 

00:49:08.280 --> 00:49:10.520 align:start position:0%
issues but the work is ongoing and the
progress<00:49:08.609><c> has</c><00:49:08.880><c> has</c><00:49:09.270><c> been</c><00:49:09.450><c> made</c><00:49:09.630><c> so</c><00:49:10.109><c> far</c><00:49:10.140><c> and</c>

00:49:10.520 --> 00:49:10.530 align:start position:0%
progress has has been made so far and
 

00:49:10.530 --> 00:49:13.339 align:start position:0%
progress has has been made so far and
the<00:49:10.710><c> progress</c><00:49:10.950><c> will</c><00:49:11.220><c> be</c><00:49:11.250><c> made</c><00:49:11.490><c> further</c><00:49:12.349><c> you</c>

00:49:13.339 --> 00:49:13.349 align:start position:0%
the progress will be made further you
 

00:49:13.349 --> 00:49:16.400 align:start position:0%
the progress will be made further you
can<00:49:13.500><c> check</c><00:49:13.710><c> into</c><00:49:13.950><c> that</c><00:49:13.980><c> and</c><00:49:14.900><c> you</c><00:49:15.900><c> can</c><00:49:16.109><c> you</c><00:49:16.290><c> can</c>

00:49:16.400 --> 00:49:16.410 align:start position:0%
can check into that and you can you can
 

00:49:16.410 --> 00:49:18.140 align:start position:0%
can check into that and you can you can
try<00:49:16.530><c> it</c><00:49:16.650><c> you</c><00:49:17.369><c> can</c><00:49:17.490><c> also</c><00:49:17.640><c> build</c><00:49:17.849><c> other</c>

00:49:18.140 --> 00:49:18.150 align:start position:0%
try it you can also build other
 

00:49:18.150 --> 00:49:21.380 align:start position:0%
try it you can also build other
applications<00:49:19.339><c> maybe</c><00:49:20.339><c> be</c><00:49:21.089><c> a</c><00:49:21.119><c> little</c><00:49:21.300><c> bit</c>

00:49:21.380 --> 00:49:21.390 align:start position:0%
applications maybe be a little bit
 

00:49:21.390 --> 00:49:25.339 align:start position:0%
applications maybe be a little bit
easier<00:49:21.570><c> but</c><00:49:22.200><c> spring</c><00:49:23.099><c> ones</c><00:49:23.869><c> we</c><00:49:24.869><c> are</c><00:49:24.900><c> working</c><00:49:25.109><c> on</c>

00:49:25.339 --> 00:49:25.349 align:start position:0%
easier but spring ones we are working on
 

00:49:25.349 --> 00:49:29.270 align:start position:0%
easier but spring ones we are working on
that<00:49:25.500><c> right</c><00:49:26.359><c> windows</c><00:49:27.359><c> bits</c><00:49:27.599><c> working</c><00:49:28.440><c> java</c><00:49:28.890><c> 11</c>

00:49:29.270 --> 00:49:29.280 align:start position:0%
that right windows bits working java 11
 

00:49:29.280 --> 00:49:31.630 align:start position:0%
that right windows bits working java 11
based<00:49:29.490><c> versions</c><00:49:30.060><c> are</c><00:49:30.210><c> working</c><00:49:30.630><c> in</c><00:49:31.080><c> the</c><00:49:31.290><c> works</c>

00:49:31.630 --> 00:49:31.640 align:start position:0%
based versions are working in the works
 

00:49:31.640 --> 00:49:34.930 align:start position:0%
based versions are working in the works
when<00:49:32.640><c> we</c><00:49:32.730><c> have</c><00:49:32.880><c> them</c><00:49:33.060><c> we</c><00:49:33.359><c> will</c><00:49:33.510><c> announce</c><00:49:33.720><c> them</c>

00:49:34.930 --> 00:49:34.940 align:start position:0%
when we have them we will announce them
 

00:49:34.940 --> 00:49:37.970 align:start position:0%
when we have them we will announce them
valium<00:49:35.940><c> can</c><00:49:36.119><c> do</c><00:49:36.240><c> more</c><00:49:36.480><c> things</c><00:49:36.720><c> maybe</c><00:49:37.680><c> a</c><00:49:37.800><c> little</c>

00:49:37.970 --> 00:49:37.980 align:start position:0%
valium can do more things maybe a little
 

00:49:37.980 --> 00:49:39.380 align:start position:0%
valium can do more things maybe a little
bit<00:49:38.130><c> less</c><00:49:38.280><c> interesting</c><00:49:38.730><c> for</c><00:49:38.760><c> Java</c><00:49:39.060><c> developers</c>

00:49:39.380 --> 00:49:39.390 align:start position:0%
bit less interesting for Java developers
 

00:49:39.390 --> 00:49:42.890 align:start position:0%
bit less interesting for Java developers
but<00:49:39.750><c> certainly</c><00:49:40.200><c> can</c><00:49:40.410><c> deal</c><00:49:40.619><c> them</c><00:49:40.950><c> and</c><00:49:41.900><c> just</c>

00:49:42.890 --> 00:49:42.900 align:start position:0%
but certainly can deal them and just
 

00:49:42.900 --> 00:49:44.690 align:start position:0%
but certainly can deal them and just
amount<00:49:43.530><c> of</c><00:49:43.650><c> time</c><00:49:43.800><c> and</c><00:49:44.010><c> don't</c><00:49:44.190><c> want</c><00:49:44.369><c> you</c><00:49:44.520><c> to</c>

00:49:44.690 --> 00:49:44.700 align:start position:0%
amount of time and don't want you to
 

00:49:44.700 --> 00:49:46.130 align:start position:0%
amount of time and don't want you to
remember<00:49:45.089><c> the</c><00:49:45.510><c> ground</c><00:49:45.780><c> iam</c><00:49:45.960><c> is</c><00:49:46.080><c> a</c>

00:49:46.130 --> 00:49:46.140 align:start position:0%
remember the ground iam is a
 

00:49:46.140 --> 00:49:47.930 align:start position:0%
remember the ground iam is a
high-performance<00:49:46.800><c> Paul</c><00:49:47.099><c> blood</c><00:49:47.310><c> virtual</c>

00:49:47.930 --> 00:49:47.940 align:start position:0%
high-performance Paul blood virtual
 

00:49:47.940 --> 00:49:50.150 align:start position:0%
high-performance Paul blood virtual
machine<00:49:48.240><c> embeddable</c><00:49:49.230><c> in</c><00:49:49.500><c> different</c>

00:49:50.150 --> 00:49:50.160 align:start position:0%
machine embeddable in different
 

00:49:50.160 --> 00:49:52.520 align:start position:0%
machine embeddable in different
applications<00:49:50.730><c> and</c><00:49:50.880><c> you</c><00:49:51.510><c> should</c><00:49:51.690><c> try</c><00:49:52.080><c> this</c><00:49:52.140><c> and</c>

00:49:52.520 --> 00:49:52.530 align:start position:0%
applications and you should try this and
 

00:49:52.530 --> 00:49:54.800 align:start position:0%
applications and you should try this and
if<00:49:52.920><c> you</c><00:49:53.070><c> do</c><00:49:53.310><c> anything</c><00:49:53.700><c> of</c><00:49:53.970><c> that</c><00:49:54.000><c> if</c><00:49:54.359><c> you're</c>

00:49:54.800 --> 00:49:54.810 align:start position:0%
if you do anything of that if you're
 

00:49:54.810 --> 00:49:55.609 align:start position:0%
if you do anything of that if you're
interested<00:49:55.020><c> in</c><00:49:55.290><c> that</c>

00:49:55.609 --> 00:49:55.619 align:start position:0%
interested in that
 

00:49:55.619 --> 00:49:57.890 align:start position:0%
interested in that
it's<00:49:56.160><c> a</c><00:49:56.339><c> project</c><00:49:56.550><c> to</c><00:49:56.849><c> look</c><00:49:57.000><c> at</c><00:49:57.150><c> thank</c><00:49:57.630><c> you</c><00:49:57.720><c> very</c>

00:49:57.890 --> 00:49:57.900 align:start position:0%
it's a project to look at thank you very
 

00:49:57.900 --> 00:50:01.900 align:start position:0%
it's a project to look at thank you very
much

00:50:01.900 --> 00:50:01.910 align:start position:0%
 
 

00:50:01.910 --> 00:50:02.640 align:start position:0%
 
you

00:50:02.640 --> 00:50:02.650 align:start position:0%
you
 

00:50:02.650 --> 00:50:08.180 align:start position:0%
you
[Music]

