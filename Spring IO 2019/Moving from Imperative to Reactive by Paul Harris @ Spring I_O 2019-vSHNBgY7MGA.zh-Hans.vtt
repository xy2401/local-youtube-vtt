WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.900 --> 00:00:05.499
 [音乐] 

00:00:05.529 --> 00:00:10.250
好的，如上所述，我叫Paul Harris 

00:00:07.880 --> 00:00:12.260
我是Cloud Foundry的首席开发人员

00:00:10.250 --> 00:00:13.850
 Java客户端不像以前那样发推文

00:00:12.260 --> 00:00:18.410
整个Cloud Foundry将会是

00:00:13.850 --> 00:00:20.030
有点大方，这是什么话题

00:00:18.410 --> 00:00:22.430
反应式编程简介

00:00:20.030 --> 00:00:24.380
现在我想从一开始就强调

00:00:22.430 --> 00:00:26.630
这是一个介绍，所以如果你是

00:00:24.380 --> 00:00:28.369
已经相当活跃了，你

00:00:26.630 --> 00:00:31.189
知道它是如何工作的以及蝙蝠拖鞋和

00:00:28.369 --> 00:00:33.489
单声道和所有其余的然后你

00:00:31.189 --> 00:00:35.780
不必停留，可以步行

00:00:33.489 --> 00:00:37.729
我们将有一些背景

00:00:35.780 --> 00:00:39.469
关于反应是从哪里来的

00:00:37.729 --> 00:00:40.729
会很短，之后

00:00:39.469 --> 00:00:42.979
早上的主题演讲将会变得平淡

00:00:40.729 --> 00:00:46.010
简短一点，我们来看一下

00:00:42.979 --> 00:00:47.719
实际示例编码现场，我已经

00:00:46.010 --> 00:00:50.359
只是意识到我从未编码过

00:00:47.719 --> 00:00:52.339
之前，这样会很有趣， 

00:00:50.359 --> 00:00:55.370
再次强调这是给你的

00:00:52.339 --> 00:00:57.739
受益，所以如果这对您来说太简单

00:00:55.370 --> 00:00:59.959
如果太复杂，请离开

00:00:57.739 --> 00:01:02.170
你我想请你离开

00:00:59.959 --> 00:01:05.270
待会见

00:01:02.170 --> 00:01:07.160
所以我为什么要介绍这个我一直

00:01:05.270 --> 00:01:08.990
使用项目反应器重新启动

00:01:07.160 --> 00:01:11.380
之前提到的版本

00:01:08.990 --> 00:01:14.510
三年大概三年

00:01:11.380 --> 00:01:17.480
我们从Cloud Foundry Java开始

00:01:14.510 --> 00:01:20.540
客户几乎同时

00:01:17.480 --> 00:01:23.090
 Spring Boot与Spring对不起项目

00:01:20.540 --> 00:01:26.660
反应堆正在重新启动，这意味着

00:01:23.090 --> 00:01:30.110
我们是它的第一个客户，我们有很多

00:01:26.660 --> 00:01:32.540
我认为它是如何工作的

00:01:30.110 --> 00:01:35.720
各种现实世界的决定

00:01:32.540 --> 00:01:37.040
我认为更好的

00:01:35.720 --> 00:01:40.520
当然使Java客户

00:01:37.040 --> 00:01:42.470
更好，因为我三年前开始

00:01:40.520 --> 00:01:44.240
我没有任何反应式背景

00:01:42.470 --> 00:01:46.940
你不是很了解

00:01:44.240 --> 00:01:48.500
那时我想我已经做了

00:01:46.940 --> 00:01:51.500
所有的错误都有可能

00:01:48.500 --> 00:01:53.740
反应性地进行编程，我可能

00:01:51.500 --> 00:01:56.840
今天向您展示其中的一些

00:01:53.740 --> 00:01:58.190
最后要说的是我很正常

00:01:56.840 --> 00:02:01.220
开发人员，您已经听说过很多有关

00:01:58.190 --> 00:02:02.750
摇滚明星我就像你们我一样

00:02:01.220 --> 00:02:05.150
拿起这个东西，因为我需要

00:02:02.750 --> 00:02:07.820
拿起它来工作，这里有一些

00:02:05.150 --> 00:02:12.139
我学到的东西，以澄清我不是

00:02:07.820 --> 00:02:14.360
 Java忍者而不是Java向导

00:02:12.139 --> 00:02:16.580
不要开车绝地或

00:02:14.360 --> 00:02:18.380
 Java Blue为此我承担了责任

00:02:16.580 --> 00:02:23.240
这些东西都不是其中之一

00:02:18.380 --> 00:02:26.180
你好，所以这一切始于2013年

00:02:23.240 --> 00:02:28.640
与反应性宣言，这是一个

00:02:26.180 --> 00:02:31.790
试图整理一些思想

00:02:28.640 --> 00:02:34.840
当时的情况如何

00:02:31.790 --> 00:02:37.730
现代应用程序应表现

00:02:34.840 --> 00:02:42.050
宣言提出了四个主要建议

00:02:37.730 --> 00:02:44.150
想法四个概念的应用应该

00:02:42.050 --> 00:02:45.650
反应灵敏，这并不意味着

00:02:44.150 --> 00:02:47.390
他们应该尽可能快

00:02:45.650 --> 00:02:49.310
可以，但是他们应该总是觉得

00:02:47.390 --> 00:02:52.010
他们正在进步，所以如果你有

00:02:49.310 --> 00:02:54.140
牺牲一点速度

00:02:52.010 --> 00:02:56.630
一些反馈，或者您知道一些

00:02:54.140 --> 00:02:59.630
那样的话就可以了

00:02:56.630 --> 00:03:01.520
应该有弹性，所以如果你有一个

00:02:59.630 --> 00:03:04.280
您特定部分的错误

00:03:01.520 --> 00:03:06.530
应用程序或具有

00:03:04.280 --> 00:03:07.790
较大的系统，不应采用

00:03:06.530 --> 00:03:09.670
整个事情你应该能够

00:03:07.790 --> 00:03:12.709
尽力而为

00:03:09.670 --> 00:03:13.970
它应该是弹性的

00:03:12.709 --> 00:03:15.590
总是认为这是一种

00:03:13.970 --> 00:03:17.180
确实具有可扩展性，但如果还有更多

00:03:15.590 --> 00:03:18.560
而不是关于

00:03:17.180 --> 00:03:21.620
充分利用您拥有的资源

00:03:18.560 --> 00:03:24.280
可用，因此主题演讲之一

00:03:21.620 --> 00:03:27.400
今天早上，本在谈论

00:03:24.280 --> 00:03:30.530
运行多个线程并

00:03:27.400 --> 00:03:32.630
能够使用现有模型

00:03:30.530 --> 00:03:34.070
往往受CPU限制，因为

00:03:32.630 --> 00:03:36.380
所有这些线程所有这些内存或

00:03:34.070 --> 00:03:38.000
这种争论还在继续，而你不是

00:03:36.380 --> 00:03:39.980
实际使用您拥有的CPU 

00:03:38.000 --> 00:03:41.390
可以让您有弹性

00:03:39.980 --> 00:03:45.680
更好地利用诸如此类的东西

00:03:41.390 --> 00:03:47.600
愚弄各种联系

00:03:45.680 --> 00:03:50.980
东西，最后应该是

00:03:47.600 --> 00:03:53.500
消息驱动而不是事件驱动

00:03:50.980 --> 00:03:58.190
所以宣言很棒，但他们却没有

00:03:53.500 --> 00:03:59.720
编译我这里有一条消息告诉

00:03:58.190 --> 00:04:01.280
我我有11分钟的发言时间

00:03:59.720 --> 00:04:03.769
离开这有点令人担忧，但

00:04:01.280 --> 00:04:05.840
我会努力做到的更快

00:04:03.769 --> 00:04:10.640
这次冒险的下一步是

00:04:05.840 --> 00:04:13.220
反应性流定义了一组

00:04:10.640 --> 00:04:18.530
我们可能如何处理的接口

00:04:13.220 --> 00:04:23.210
他们在反应式流媒体情况下

00:04:18.530 --> 00:04:26.200
定义了四个主要界面

00:04:23.210 --> 00:04:27.949
发布者发出的东西

00:04:26.200 --> 00:04:30.439
东西

00:04:27.949 --> 00:04:32.930
通常可以是数据，因此可以是

00:04:30.439 --> 00:04:35.719
字符串或其他内容

00:04:32.930 --> 00:04:37.639
你可能会发出信号说这个

00:04:35.719 --> 00:04:39.830
这个信号是完整的

00:04:37.639 --> 00:04:41.210
可能是您有一个订阅者

00:04:39.830 --> 00:04:43.159
听信号的东西

00:04:41.210 --> 00:04:46.249
如果你把那两个放进去

00:04:43.159 --> 00:04:48.590
在一起，那么您有一个订阅，所以

00:04:46.249 --> 00:04:51.650
发布者与

00:04:48.590 --> 00:04:54.650
订阅者是订阅的关键

00:04:51.650 --> 00:04:56.840
指向有一个发布者

00:04:54.650 --> 00:04:58.789
正在建立发布的潜力

00:04:56.840 --> 00:05:01.069
信息，但是直到您获得

00:04:58.789 --> 00:05:02.870
订户附加到它不是

00:05:01.069 --> 00:05:05.569
必须发布该信息

00:05:02.870 --> 00:05:07.520
我们通常的合作方式

00:05:05.569 --> 00:05:10.300
命令性代码是您编写程序

00:05:07.520 --> 00:05:12.080
您运行它，它开始做事， 

00:05:10.300 --> 00:05:14.150
一般而言，反应性

00:05:12.080 --> 00:05:16.189
程序就可以开始做事了

00:05:14.150 --> 00:05:20.150
并等待该信号，它应该

00:05:16.189 --> 00:05:21.500
实际消耗结果， 

00:05:20.150 --> 00:05:23.990
他们定义的最终类型是

00:05:21.500 --> 00:05:26.210
处理器是一个

00:05:23.990 --> 00:05:32.750
发布者和允许

00:05:26.210 --> 00:05:36.620
您可以处理数据了

00:05:32.750 --> 00:05:38.569
基本的接口定义，但

00:05:36.620 --> 00:05:43.009
意图来自反应性流

00:05:38.569 --> 00:05:45.409
那会变成一个更有用的真实

00:05:43.009 --> 00:05:47.750
基本的世界实现

00:05:45.409 --> 00:05:50.479
规范，其中之一是

00:05:47.750 --> 00:05:51.500
项目反应堆，所以它变成了反应堆

00:05:50.479 --> 00:05:53.569
流入一个框架，您可以

00:05:51.500 --> 00:05:55.099
实际使用，并且有各种各样的

00:05:53.569 --> 00:05:57.770
那里的便利方法

00:05:55.099 --> 00:05:59.479
对你有帮助，我回头看看

00:05:57.770 --> 00:06:02.089
第一次提交是在11月10日

00:05:59.479 --> 00:06:04.270
 2015年我提到那是为了说明

00:06:02.089 --> 00:06:07.159
这是一个重大的项目

00:06:04.270 --> 00:06:11.539
持续了三年半

00:06:07.159 --> 00:06:13.339
显然是马特，所以这不是

00:06:11.539 --> 00:06:15.349
随便的事情就是这样

00:06:13.339 --> 00:06:17.629
带来非常重视，我认为

00:06:15.349 --> 00:06:19.819
这反映在

00:06:17.629 --> 00:06:22.189
现在的反应性框架

00:06:19.819 --> 00:06:23.960
在春天到你那里

00:06:22.189 --> 00:06:26.029
有很多新元素

00:06:23.960 --> 00:06:28.539
我之前从未听说过的一个

00:06:26.029 --> 00:06:31.310
今天上午在主题演讲中提到

00:06:28.539 --> 00:06:33.469
但可能是三大

00:06:31.310 --> 00:06:37.339
主要兴趣是反应堆堆芯，所以

00:06:33.469 --> 00:06:39.780
基本供应反应堆网络

00:06:37.339 --> 00:06:43.230
这是执行

00:06:39.780 --> 00:06:44.700
纳图适合于项目反应堆，如果

00:06:43.230 --> 00:06:46.710
您来自网络MVC世界

00:06:44.700 --> 00:06:51.180
将Tomcat替换为服务器

00:06:46.710 --> 00:06:53.490
容器，最后一个是反应

00:06:51.180 --> 00:06:55.530
测试这是一堆真的很好

00:06:53.490 --> 00:06:57.360
用于测试反应的有用方法

00:06:55.530 --> 00:07:03.389
流是一件棘手的事情

00:06:57.360 --> 00:07:05.370
有时是这样，在我们进入代码之前

00:07:03.389 --> 00:07:08.150
有几个关键概念

00:07:05.370 --> 00:07:10.889
了解我们之前提到的内容

00:07:08.150 --> 00:07:16.410
出版商对此有何反应

00:07:10.889 --> 00:07:18.570
流的想法，并在项目反应堆中

00:07:16.410 --> 00:07:20.460
决定有两个专业

00:07:18.570 --> 00:07:22.770
发布商，所以您有一种

00:07:20.460 --> 00:07:24.000
一般的，这是一种变化，我们已经

00:07:22.770 --> 00:07:26.610
看到今天已经提到的那些

00:07:24.000 --> 00:07:28.560
好，通量本质上是

00:07:26.610 --> 00:07:31.620
与发布者一样，有很多方法

00:07:28.560 --> 00:07:33.690
加等等，它将发出0到

00:07:31.620 --> 00:07:36.720
 n个元素是无界的，所以它将

00:07:33.690 --> 00:07:39.389
可能一直散发直到发热量

00:07:36.720 --> 00:07:42.229
我猜是直到宇宙的死亡

00:07:39.389 --> 00:07:44.430
它用于需要发出的活动数据

00:07:42.229 --> 00:07:47.190
有这种更专业的类型

00:07:44.430 --> 00:07:50.490
是单声道，它是0或1的发布者

00:07:47.190 --> 00:07:52.050
元素，所以这样做的原因是

00:07:50.490 --> 00:07:56.310
主要是作为一种现实世界

00:07:52.050 --> 00:07:57.960
决定不是一切都是通量

00:07:56.310 --> 00:08:00.060
你知道有时候你在做一个

00:07:57.960 --> 00:08:02.100
打电话给您，您期望得到一个

00:08:00.060 --> 00:08:06.030
单值或可能无值

00:08:02.100 --> 00:08:08.400
所有这些对于代码优化和

00:08:06.030 --> 00:08:10.560
能够在现实世界中工作

00:08:08.400 --> 00:08:12.090
使用此工具可以很容易地缩小

00:08:10.560 --> 00:08:13.770
事情下来，说这是一个单声道

00:08:12.090 --> 00:08:17.039
这是特定的方法

00:08:13.770 --> 00:08:18.840
对这件事，我发现

00:08:17.039 --> 00:08:21.450
使用它也可以帮助我获得

00:08:18.840 --> 00:08:23.460
进入我正确的心态，如果我知道

00:08:21.450 --> 00:08:25.020
我要和马诺斯打交道，然后我

00:08:23.460 --> 00:08:26.970
以这种方式思考，我需要

00:08:25.020 --> 00:08:28.710
考虑一个价值回来，我

00:08:26.970 --> 00:08:31.200
如果什么都没有需要处理这个事实

00:08:28.710 --> 00:08:33.469
返回，这是一个单独的案例，所以

00:08:31.200 --> 00:08:35.969
房间代码和

00:08:33.469 --> 00:08:38.520
哲学的角度，我想这是一个

00:08:35.969 --> 00:08:39.539
很有用的区别，所以我们

00:08:38.520 --> 00:08:41.659
要看一看这两个

00:08:39.539 --> 00:08:41.659
时刻

00:08:43.270 --> 00:08:51.550
所以这是我们的简单应用程序

00:08:49.060 --> 00:08:56.500
将用于演示尝试

00:08:51.550 --> 00:08:58.029
更大，所以是弹簧靴

00:08:56.500 --> 00:08:59.440
您可以看到它没有

00:08:58.029 --> 00:09:00.940
特别是它只是一个

00:08:59.440 --> 00:09:02.680
方便，我确定我不需要

00:09:00.940 --> 00:09:07.290
卖给你们所有关于

00:09:02.680 --> 00:09:11.290
使用弹簧靴的好处我有一个

00:09:07.290 --> 00:09:12.790
我正在使用JPA的员工资源库

00:09:11.290 --> 00:09:13.839
我可以查看是否需要做的存储库

00:09:12.790 --> 00:09:20.920
再次，我已经必须

00:09:13.839 --> 00:09:26.140
将其转换为spring数据或DBC 

00:09:20.920 --> 00:09:28.570
有一个很简单的员工对象

00:09:26.140 --> 00:09:30.010
只需命名退休金ID和角色即可

00:09:28.570 --> 00:09:31.930
看到我已经使用了应用程序数据注释

00:09:30.010 --> 00:09:34.540
那只是为了保存龙目岛的东西

00:09:31.930 --> 00:09:36.700
我必须产生吸气剂和

00:09:34.540 --> 00:09:42.130
二传手等等，对于

00:09:36.700 --> 00:09:48.640
这就是周围的所有细节

00:09:42.130 --> 00:09:54.910
现在是实际的代码，所以我们有一个

00:09:48.640 --> 00:09:57.040
像这样的休息控制器，我们

00:09:54.910 --> 00:09:58.870
我现在在这里有很多功能

00:09:57.040 --> 00:10:00.430
应该指出，这是一个演示应用程序

00:09:58.870 --> 00:10:01.839
我的结构不是很好

00:10:00.430 --> 00:10:05.290
想把所有的东西都归为一类

00:10:01.839 --> 00:10:07.240
所以如果这让你感到难过

00:10:05.290 --> 00:10:10.959
只是将其视为旧版代码， 

00:10:07.240 --> 00:10:13.540
我们稍后再修复

00:10:10.959 --> 00:10:16.779
在这里我们可以做一些功能

00:10:13.540 --> 00:10:18.670
映射到我们所说的员工

00:10:16.779 --> 00:10:21.850
给我所有的员工，它只是

00:10:18.670 --> 00:10:25.959
吐出一个列表，我们可以搜索

00:10:21.850 --> 00:10:27.550
个人雇员，并给我们一个ID，我们

00:10:25.959 --> 00:10:31.180
找回员工或留言说

00:10:27.550 --> 00:10:33.310
找不到那个员工，我们

00:10:31.180 --> 00:10:34.810
可以在我们那里查找问题记录

00:10:33.310 --> 00:10:37.390
经历一下所有的

00:10:34.810 --> 00:10:38.920
员工和数据库，并决定是否

00:10:37.390 --> 00:10:41.380
他们的日子有些问题

00:10:38.920 --> 00:10:43.360
说他们缺少数据输入

00:10:41.380 --> 00:10:48.520
或拼写错误或类似的内容

00:10:43.360 --> 00:10:50.050
我们可以创建一个新员工

00:10:48.520 --> 00:10:52.990
很有趣，因为我们有这个

00:10:50.050 --> 00:10:55.100
退休金查询

00:10:52.990 --> 00:10:58.130
服务并给我们退休金ID 

00:10:55.100 --> 00:11:01.430
根据那个人的名字，所以我们

00:10:58.130 --> 00:11:04.490
那里有一点交流

00:11:01.430 --> 00:11:06.770
终于我们骂我了

00:11:04.490 --> 00:11:08.750
更新退休金记录，而不是更新

00:11:06.770 --> 00:11:10.810
我们与新员工一起去哪里

00:11:08.750 --> 00:11:13.850
获得该员工的特定记录

00:11:10.810 --> 00:11:16.040
我们可以更新所有员工

00:11:13.850 --> 00:11:17.660
退休金记录，所以我们调出多个

00:11:16.040 --> 00:11:19.850
该服务获取IDS的时间

00:11:17.660 --> 00:11:20.870
我们需要的，然后在底部

00:11:19.850 --> 00:11:27.110
我们有一些方便

00:11:20.870 --> 00:11:28.430
方法，所以我们需要采取这个

00:11:27.110 --> 00:11:33.080
命令性代码并使其有所作为

00:11:28.430 --> 00:11:35.960
这是反应性的，是第一步，因为

00:11:33.080 --> 00:11:39.970
我们正在春季会议上

00:11:35.960 --> 00:11:42.920
我们的泵，现在我们正在使用

00:11:39.970 --> 00:11:44.860
 Web MVC都可以发挥所有作用

00:11:42.920 --> 00:11:47.780
映射和善良，其余所有

00:11:44.860 --> 00:11:52.880
我们将摆脱它，我们

00:11:47.780 --> 00:11:55.250
将为Spring Boot添加依赖项

00:11:52.880 --> 00:11:57.080
开始上网，所以在您之前

00:11:55.250 --> 00:11:58.460
都习惯了使用Web MVC 

00:11:57.080 --> 00:12:00.740
现在使用的Web块

00:11:58.460 --> 00:12:02.090
那里基本上是同一件事

00:12:00.740 --> 00:12:04.640
将有所不同，因为它正在处理

00:12:02.090 --> 00:12:07.060
用不同的术语来说， 

00:12:04.640 --> 00:12:10.310
编程，如果你喜欢，但这是

00:12:07.060 --> 00:12:12.620
非阻塞异步

00:12:10.310 --> 00:12:17.660
反应性的方法来做任何事情

00:12:12.620 --> 00:12:18.920
 Web MVC做一些我所见过的事情

00:12:17.660 --> 00:12:21.080
强调了几次是为了

00:12:18.920 --> 00:12:23.450
指出网络挂钩不会取代

00:12:21.080 --> 00:12:23.890
他们看到的BAM不在的Web MVC 

00:12:23.450 --> 00:12:26.450
任何地方

00:12:23.890 --> 00:12:27.530
这就像你在做反应式

00:12:26.450 --> 00:12:34.130
风格然后这就是你的事

00:12:27.530 --> 00:12:37.690
应该使用，所以我们已经改变了一些

00:12:34.130 --> 00:12:37.690
依赖关系，我们将开始运行

00:12:39.920 --> 00:12:49.249
如果我们看一下控制台， 

00:12:46.549 --> 00:12:52.999
可以在这里看到我们已经开始

00:12:49.249 --> 00:12:58.249
 nettie端口8081 BV上会

00:12:52.999 --> 00:13:04.249
已经在Tomcat上运行，如果我们去

00:12:58.249 --> 00:13:06.109
转到我可以运行的小测试套件

00:13:04.249 --> 00:13:08.600
我们所获得的各种查询

00:13:06.109 --> 00:13:10.220
我们有空，我们可以

00:13:08.600 --> 00:13:14.059
看到数据从他们那里回来

00:13:10.220 --> 00:13:17.749
所有这些都可以吸引我可以创建的用户

00:13:14.059 --> 00:13:20.569
自己作为用户，我回来了

00:13:17.749 --> 00:13:23.209
我可以搜索的退休金ID非常好

00:13:20.569 --> 00:13:24.679
问题，我会得到所有

00:13:23.209 --> 00:13:28.040
遇到问题的用户就像

00:13:24.679 --> 00:13:30.439
缺少角色，例如我可以做一个

00:13:28.040 --> 00:13:33.049
搜索我知道存在的用户，然后

00:13:30.439 --> 00:13:35.749
我回想起我可以提供的用户详细信息

00:13:33.049 --> 00:13:37.879
搜索不存在的用户，我

00:13:35.749 --> 00:13:43.339
找回404，因为该用户不是

00:13:37.879 --> 00:13:49.189
找到了，最后我可以养老

00:13:43.339 --> 00:13:51.619
清洁连接慢

00:13:49.189 --> 00:13:56.660
连接我知道它很慢，因为我

00:13:51.619 --> 00:13:59.059
把线程睡在那里，我得到

00:13:56.660 --> 00:14:01.610
还可以

00:13:59.059 --> 00:14:04.759
我得到的结果显示给我

00:14:01.610 --> 00:14:08.660
更新了养老金信息，如果我

00:14:04.759 --> 00:14:10.639
看一下这里，华硕出来了

00:14:08.660 --> 00:14:13.639
在那里告诉我我当时是哪个线程

00:14:10.639 --> 00:14:15.290
使用，所以我正在使用一个品格和一个

00:14:13.639 --> 00:14:19.579
我做过的所有通话的线程

00:14:15.290 --> 00:14:21.739
如此低的服务我现在

00:14:19.579 --> 00:14:23.299
在Nettie上运行我已启用网络流量

00:14:21.739 --> 00:14:27.279
所以我想这意味着我们现在

00:14:23.299 --> 00:14:29.410
反应性的，我们都不能完全完成

00:14:27.279 --> 00:14:31.639
尽管那对我印象深刻

00:14:29.410 --> 00:14:35.299
虽然这很简单

00:14:31.639 --> 00:14:38.569
我们不需要更改的应用程序

00:14:35.299 --> 00:14:40.999
所有这一切仍然运行，因为

00:14:38.569 --> 00:14:42.939
我们所拥有的所有功能

00:14:40.999 --> 00:14:44.899
已经在使用，我会找到课程

00:14:42.939 --> 00:14:48.230
我们正在使用的所有功能

00:14:44.899 --> 00:14:50.360
仍然存在，所以不一定

00:14:48.230 --> 00:14:52.189
如果您决定移动，将会发生巨大的爆炸

00:14:50.360 --> 00:14:53.160
结束，你可以开始做一点

00:14:52.189 --> 00:14:54.570
是时候了

00:14:53.160 --> 00:14:57.180
取决于您是否一直在使用

00:14:54.570 --> 00:15:01.680
 Tomcat特定或特定的servlet 

00:14:57.180 --> 00:15:03.420
功能明显，但总的来说

00:15:01.680 --> 00:15:06.480
试图使转换尽可能容易

00:15:03.420 --> 00:15:08.280
可能说我们实际上在做

00:15:06.480 --> 00:15:10.110
需要开始使用助焊剂和

00:15:08.280 --> 00:15:13.140
单声道，以找出下一步要做的事情

00:15:10.110 --> 00:15:14.790
我们将从最简单的查询开始

00:15:13.140 --> 00:15:17.340
我们所拥有的只是列出所有

00:15:14.790 --> 00:15:19.050
员工和当下的时刻

00:15:17.340 --> 00:15:21.060
员工列表，我们刚刚将其称为

00:15:19.050 --> 00:15:23.190
仓库，它只是转储一切

00:15:21.060 --> 00:15:25.680
以列表的形式返回给我们， 

00:15:23.190 --> 00:15:27.330
然后，Web MVC会将其转换为

00:15:25.680 --> 00:15:32.040
我们可以在网络上显示的内容

00:15:27.330 --> 00:15:34.110
页面或我的其他客户端中的第一个

00:15:32.040 --> 00:15:35.700
我们需要做的就是说我们

00:15:34.110 --> 00:15:38.310
不再处理列表了

00:15:35.700 --> 00:15:40.440
处理通量，立即

00:15:38.310 --> 00:15:42.450
给我们一个错误，因为这个回报

00:15:40.440 --> 00:15:46.080
仓库findall还在做事

00:15:42.450 --> 00:15:51.200
有一个清单，所以我们需要制定一些

00:15:46.080 --> 00:15:53.820
将其转换为通量的方式

00:15:51.200 --> 00:15:55.410
方便地不是

00:15:53.820 --> 00:15:57.840
特别是在反应流中

00:15:55.410 --> 00:15:59.820
尊重，因为那是非常高的

00:15:57.840 --> 00:16:01.080
级别文档，但已添加到项目中

00:15:59.820 --> 00:16:05.520
反应堆的一个例子之一

00:16:01.080 --> 00:16:08.820
它将免费为您提供，我们有一个

00:16:05.520 --> 00:16:11.790
我们可以调用以执行此操作的方法

00:16:08.820 --> 00:16:14.640
从助焊剂开始，我们从中选择

00:16:11.790 --> 00:16:16.920
迭代且因为存储库是最终的

00:16:14.640 --> 00:16:19.500
找出所有返回值少于一个间隔

00:16:16.920 --> 00:16:21.710
很好很容易，所以我们可以把它放在

00:16:19.500 --> 00:16:21.710
那里

00:16:24.620 --> 00:16:35.840
摆脱这一点，确保我们

00:16:27.140 --> 00:16:38.000
现在，当我重启时返回它应该

00:16:35.840 --> 00:16:39.980
解释我一直在为

00:16:38.000 --> 00:16:42.730
最近几个月，所以如果我错过了一些

00:16:39.980 --> 00:16:44.870
分号不要对我太苛刻

00:16:42.730 --> 00:16:52.430
显然在里面应该有一个分号

00:16:44.870 --> 00:16:58.250
如果可以的话，就为我做

00:16:52.430 --> 00:17:01.550
再次得到回忆，然后被抓住

00:16:58.250 --> 00:17:02.810
与我之前的清单相同

00:17:01.550 --> 00:17:04.310
你们在回想我

00:17:02.810 --> 00:17:06.650
之前说过会注意到

00:17:04.310 --> 00:17:08.570
我们有一个出版商，但是

00:17:06.650 --> 00:17:11.330
不会根据我们的代码出现

00:17:08.570 --> 00:17:13.280
拥有订阅者的方式大致相同

00:17:11.330 --> 00:17:15.260
 Web MVC弥补了这一基本差距

00:17:13.280 --> 00:17:18.110
映射并将其转换为

00:17:15.260 --> 00:17:22.070
我们可以提供给网页或

00:17:18.110 --> 00:17:24.290
可可客户网络福禄考正在

00:17:22.070 --> 00:17:26.240
同样是订户，所以

00:17:24.290 --> 00:17:28.070
每当收到呼叫时，它都会启动

00:17:26.240 --> 00:17:31.120
该订阅并说给我

00:17:28.070 --> 00:17:35.210
您为此端点获得的数据

00:17:31.120 --> 00:17:36.890
太好了，因为保持控制

00:17:35.210 --> 00:17:38.120
的订户可以得到一点

00:17:36.890 --> 00:17:39.260
复杂，这就是其中之一

00:17:38.120 --> 00:17:42.020
你可以期待你的未来

00:17:39.260 --> 00:17:43.490
如果您使用反应式项目做出反应

00:17:42.020 --> 00:17:46.130
使它尽可能容易，但是有

00:17:43.490 --> 00:17:47.300
关于知道什么仍然有些技巧

00:17:46.130 --> 00:17:50.660
线程你在我确保

00:17:47.300 --> 00:17:53.060
你已经关闭了一切，所以我们

00:17:50.660 --> 00:17:53.990
做到了，我也有笔记

00:17:53.060 --> 00:18:02.450
我只是确保我没有忘记

00:17:53.990 --> 00:18:05.810
那里的任何东西，所以我们开始

00:18:02.450 --> 00:18:09.080
尽可能短地开始我们的整个流程

00:18:05.810 --> 00:18:10.610
有了助焊剂，现在我们要看

00:18:09.080 --> 00:18:13.430
在类似的情况下，但我们要开始

00:18:10.610 --> 00:18:16.460
用单声道代替，所以我们要看

00:18:13.430 --> 00:18:18.620
在查找和员工中按ID 

00:18:16.460 --> 00:18:20.180
您看到ID的查找信息的那一刻就会抛出一个

00:18:18.620 --> 00:18:27.070
如果有问题，我会例外

00:18:20.180 --> 00:18:30.260
 404，所以我们可能想做点什么

00:18:27.070 --> 00:18:33.250
和以前一样

00:18:30.260 --> 00:18:35.900
可以尝试这样的事情，我们说

00:18:33.250 --> 00:18:37.290
单声道，所以我只想让你给我

00:18:35.900 --> 00:18:43.320
一个单声道，我想要你

00:18:37.290 --> 00:18:45.890
我从posit REE创建那个单声道

00:18:43.320 --> 00:18:45.890
要给它一个ID 

00:18:54.139 --> 00:19:00.450
但这是一个问题

00:18:57.090 --> 00:19:02.879
问题是找到BIID指的是

00:19:00.450 --> 00:19:04.229
返回一个可选的，因为它不

00:19:02.879 --> 00:19:08.099
知道是否会找到任何东西或

00:19:04.229 --> 00:19:13.919
不方便地我们有一种方法

00:19:08.099 --> 00:19:19.470
将处理那种情况

00:19:13.919 --> 00:19:22.229
或为空，表示返回

00:19:19.470 --> 00:19:24.659
你从任何东西回来的单声道

00:19:22.229 --> 00:19:27.499
叫这是，但是如果你不明白

00:19:24.659 --> 00:19:30.269
什么都回来然后就返回一个空

00:19:27.499 --> 00:19:31.979
所以这里的关键是

00:19:30.269 --> 00:19:36.989
总是和马诺斯打交道，所以我们需要

00:19:31.979 --> 00:19:38.429
 Manos将被传递，但是如果我们

00:19:36.989 --> 00:19:40.229
不要拿回我们不想要的东西

00:19:38.429 --> 00:19:42.299
从中有一个错误，特别是我们

00:19:40.229 --> 00:19:44.909
只想说这是我回来的

00:19:42.299 --> 00:19:47.419
那不是单声道形式的，而你

00:19:44.909 --> 00:19:47.419
可以继续

00:19:50.989 --> 00:19:56.940
我们还需要这个

00:19:53.340 --> 00:19:59.129
例外，我们可以在

00:19:56.940 --> 00:20:01.649
强制命令的方式略有不同

00:19:59.129 --> 00:20:03.509
说好就知道我们可能会

00:20:01.649 --> 00:20:05.369
找回价值，我们可以

00:20:03.509 --> 00:20:08.960
只是继续下去，但如果我们不明白

00:20:05.369 --> 00:20:12.690
回到我们想切换的地方

00:20:08.960 --> 00:20:20.309
我们通过提供一个新的

00:20:12.690 --> 00:20:22.580
我们可以使用的单声道，我们将

00:20:20.309 --> 00:20:22.580
做

00:20:34.110 --> 00:20:39.330
我做错了什么

00:20:37.279 --> 00:20:44.360
所以我应该看看我的笔记

00:20:39.330 --> 00:20:44.360
我肯定可以解决这个问题

00:20:55.390 --> 00:21:00.230
当我说我已经充分利用了

00:20:58.100 --> 00:21:02.270
你可以让他使用的错误

00:21:00.230 --> 00:21:06.559
反应堆我的第一个错误之一

00:21:02.270 --> 00:21:09.080
以为我所做的就是忘记我们

00:21:06.559 --> 00:21:17.270
再也不回员工了

00:21:09.080 --> 00:21:21.080
返回一个员工的单声道，所以我们

00:21:17.270 --> 00:21:23.240
现在具有与我们相同的功能

00:21:21.080 --> 00:21:26.720
曾经有过，但没有扔一个

00:21:23.240 --> 00:21:29.450
例外，我们返回了

00:21:26.720 --> 00:21:32.210
我们获得或正在传递的价值

00:21:29.450 --> 00:21:33.679
单声道的例外，这是一个

00:21:32.210 --> 00:21:36.700
关于项目反应堆的重要事情

00:21:33.679 --> 00:21:39.770
和反应式编程，错误是

00:21:36.700 --> 00:21:42.020
值与字符串或

00:21:39.770 --> 00:21:44.900
员工或其他任何一部分

00:21:42.020 --> 00:21:46.490
我们之前提到的韧性

00:21:44.900 --> 00:21:48.530
不一定要惊慌

00:21:46.490 --> 00:21:51.470
因为您发现了想要的错误

00:21:48.530 --> 00:21:53.540
传递给某人

00:21:51.470 --> 00:21:55.970
几个连锁店

00:21:53.540 --> 00:21:59.090
处理一个错误的能力

00:21:55.970 --> 00:22:02.330
明智的方式，所以对于我们来说，我们只是

00:21:59.090 --> 00:22:04.040
会说我有这个错误，你

00:22:02.330 --> 00:22:06.429
应该用它来做你想要的，如果我

00:22:04.040 --> 00:22:06.429
运行那个

00:22:13.970 --> 00:22:18.680
这是在搜索用户，所以

00:22:16.850 --> 00:22:22.490
这是一个存在的用户，那就是

00:22:18.680 --> 00:22:25.220
罚款不存在的用户，所以我

00:22:22.490 --> 00:22:27.830
创建这个错误的mano并通过

00:22:25.220 --> 00:22:29.150
它已经传递到Webb助焊剂上

00:22:27.830 --> 00:22:31.220
这是在做的事情

00:22:29.150 --> 00:22:33.140
订阅，并决定何时

00:22:31.220 --> 00:22:36.830
看到这样的错误，它将通过它们

00:22:33.140 --> 00:22:40.580
以404和员工的身份向用户展示

00:22:36.830 --> 00:22:44.510
找不到所以只是为了强调他们

00:22:40.580 --> 00:22:46.640
错误或不只是它们的价值

00:22:44.510 --> 00:22:49.190
与其他任何东西一样，您需要

00:22:46.640 --> 00:22:54.020
像将字符串或字符串那样传递给它们

00:22:49.190 --> 00:22:57.170
员工或其他

00:22:54.020 --> 00:23:01.340
我们可以看的下一个是发现问题

00:22:57.170 --> 00:23:03.020
记录，我们将再次制作

00:23:01.340 --> 00:23:07.850
我们将避免第一个错误

00:23:03.020 --> 00:23:12.170
我之前做的，所以我们想回来

00:23:07.850 --> 00:23:13.580
员工流动，显然

00:23:12.170 --> 00:23:24.530
引起问题，因为那不是

00:23:13.580 --> 00:23:28.160
我们正在做，所以我们需要一个通量

00:23:24.530 --> 00:23:31.300
而且我们已经知道一种方法

00:23:28.160 --> 00:23:31.300
会为我们带来通量

00:23:34.950 --> 00:23:43.559
然后我们想做些事情

00:23:40.169 --> 00:23:46.139
这个清单将摆脱所有

00:23:43.559 --> 00:23:47.519
优秀的员工你就是好人

00:23:46.139 --> 00:23:49.950
我们将只留下那些

00:23:47.519 --> 00:23:51.269
现在必须解决他们的问题

00:23:49.950 --> 00:23:54.600
我之前使用的代码可以

00:23:51.269 --> 00:23:57.149
看到我创建了几个列表

00:23:54.600 --> 00:23:59.399
我最初回来的结果之一

00:23:57.149 --> 00:24:01.049
从我的存储库中，然后是第二个

00:23:59.399 --> 00:24:04.379
我可以把所有用户

00:24:01.049 --> 00:24:05.850
回传有问题

00:24:04.379 --> 00:24:09.659
各种方式做到这一点的原因

00:24:05.850 --> 00:24:11.220
我选择这是因为其他一些

00:24:09.659 --> 00:24:12.809
其他方式可能导致

00:24:11.220 --> 00:24:15.749
并发问题

00:24:12.809 --> 00:24:18.269
尝试更新您也是的列表

00:24:15.749 --> 00:24:21.570
从那时开始，事情就可以开始了

00:24:18.269 --> 00:24:23.869
剥离，所以我们想要一种不

00:24:21.570 --> 00:24:28.769
会引起那种问题

00:24:23.869 --> 00:24:30.929
使用反应流，最终

00:24:28.769 --> 00:24:32.639
我们要做的是过滤

00:24:30.929 --> 00:24:34.980
我们从这个初始得到的结果

00:24:32.639 --> 00:24:37.559
通量，以便我们可以丢弃任何东西

00:24:34.980 --> 00:24:40.739
不符合我们的标准

00:24:37.559 --> 00:24:46.259
有一个问题，很方便

00:24:40.739 --> 00:24:52.259
筛选器，以便筛选器无法

00:24:46.259 --> 00:24:58.200
给员工打拼，我们会做些事情

00:24:52.259 --> 00:25:01.859
用它来对其进行测试

00:24:58.200 --> 00:25:06.989
检查该员工是否有

00:25:01.859 --> 00:25:09.779
一些问题要注意的重要事项

00:25:06.989 --> 00:25:13.080
这是一旦我们进入过滤器

00:25:09.779 --> 00:25:16.619
我们有这个员工，这让我

00:25:13.080 --> 00:25:19.799
同时把我的头完全缠住

00:25:16.619 --> 00:25:22.850
尽管有一个原因使之单数

00:25:19.799 --> 00:25:26.039
我们所有员工都有变动

00:25:22.850 --> 00:25:28.019
一旦进入过滤器，那就是

00:25:26.039 --> 00:25:32.609
只是与一个员工打交道， 

00:25:28.019 --> 00:25:34.470
如果您能想象有那么多的过滤器，我们将有

00:25:32.609 --> 00:25:36.210
实例不是真正的实例

00:25:34.470 --> 00:25:40.799
但这就是想法

00:25:36.210 --> 00:25:42.960
处理此通量，每个处理一个

00:25:40.799 --> 00:25:45.389
需要的特定员工

00:25:42.960 --> 00:25:48.900
处理所有数据以及会发生什么

00:25:45.389 --> 00:25:51.870
是每个过滤器实例

00:25:48.900 --> 00:25:53.880
如果有的话，我们会丢掉一名员工

00:25:51.870 --> 00:25:57.120
说是的，这很好，它通过了我的测试

00:25:53.880 --> 00:25:59.730
该或它我们没有问题

00:25:57.120 --> 00:26:02.669
与这个特定的用户，还剩下什么

00:25:59.730 --> 00:26:05.820
完成之后，这只是一个

00:26:02.669 --> 00:26:07.500
包含用户的流量

00:26:05.820 --> 00:26:12.419
有一个问题，我们已经丢弃了所有

00:26:07.500 --> 00:26:14.370
其他，这意味着该代码现在

00:26:12.419 --> 00:26:15.870
完成，实际上让我感到惊讶

00:26:14.370 --> 00:26:18.059
我首先这样做，我以为我会

00:26:15.870 --> 00:26:20.429
有另一条线，但我们已经摆脱了

00:26:18.059 --> 00:26:22.140
所有不符合的

00:26:20.429 --> 00:26:26.340
我们想要的标准，所以我们剩下的是

00:26:22.140 --> 00:26:28.049
是员工的问题，现在仍然

00:26:26.340 --> 00:26:29.880
通量，因为我们刚刚过滤了

00:26:28.049 --> 00:26:32.730
通量，我们没有以某种方式改变它

00:26:29.880 --> 00:26:34.760
它被传递到网络流量，并再次

00:26:32.730 --> 00:26:36.720
呈现给任何人

00:26:34.760 --> 00:26:39.830
一件事可能是

00:26:36.720 --> 00:26:42.450
使某些人感到沮丧

00:26:39.830 --> 00:26:45.210
因为我要把员工传给

00:26:42.450 --> 00:26:48.120
只需要一名员工的方法

00:26:45.210 --> 00:26:50.270
可以简化代码，例如

00:26:48.120 --> 00:26:50.270
那

00:26:55.140 --> 00:27:02.280
好的，接下来我们可以做的是

00:26:57.840 --> 00:27:03.840
新员工，这有点

00:27:02.280 --> 00:27:07.080
比较棘手，因为我们正在打电话

00:27:03.840 --> 00:27:11.880
我们可能想到的第一件事

00:27:07.080 --> 00:27:18.090
就是说我需要一个名字

00:27:11.880 --> 00:27:21.980
很好，我有个名字，我需要

00:27:18.090 --> 00:27:35.669
该雇员的退休金编号

00:27:21.980 --> 00:27:37.540
好吧，我会做新员工的

00:27:35.669 --> 00:27:42.520
我再试一次

00:27:37.540 --> 00:27:47.250
我需要退休金ID，我可以做一个

00:27:42.520 --> 00:27:47.250
退休金用这个名字看

00:27:47.550 --> 00:28:00.130
那么我需要那个价值，那我该怎么办

00:27:52.120 --> 00:28:03.370
得到那个价值，这就是它的所在

00:28:00.130 --> 00:28:05.560
有点开始出错，因为我不是

00:28:03.370 --> 00:28:09.520
我已经以反应式编程

00:28:05.560 --> 00:28:11.080
从命令式开始

00:28:09.520 --> 00:28:13.180
我真正想做的就是开始

00:28:11.080 --> 00:28:15.160
具有单声道或通量的地方

00:28:13.180 --> 00:28:17.980
说这就是我们的流程

00:28:15.160 --> 00:28:19.990
这样做我想要的是这里的东西

00:28:17.980 --> 00:28:21.490
那会给我一个单声道

00:28:19.990 --> 00:28:23.950
就像用一个单声道创建一个一样

00:28:21.490 --> 00:28:26.320
我们已经看过了，但实际上

00:28:23.950 --> 00:28:28.210
这里将是一些代码

00:28:26.320 --> 00:28:32.230
如果我开始制作，请给我一个单声道

00:28:28.210 --> 00:28:34.300
有些变化，但是我们正在使用的那一刻

00:28:32.230 --> 00:28:37.480
一个休息模板，非常好

00:28:34.300 --> 00:28:40.420
合理的Web MVC选择，但正如我们所见

00:28:37.480 --> 00:28:43.720
在主题演讲中实际上是一个障碍

00:28:40.420 --> 00:28:46.150
通话，这意味着我们要对一个人采取行动

00:28:43.720 --> 00:28:49.210
线程不是真正的反应性，所以我们

00:28:46.150 --> 00:28:53.800
需要改变这一点以及我们的方式

00:28:49.210 --> 00:28:59.680
改变就是我们将拥有网络

00:28:53.800 --> 00:29:03.420
前面提到的客户，我们

00:28:59.680 --> 00:29:03.420
想如果不是很好

00:29:04.410 --> 00:29:08.880
 spring boot 可以为我们提供

00:29:06.670 --> 00:29:08.880
那些

00:29:12.910 --> 00:29:16.360
加咒

00:29:18.920 --> 00:29:30.920
然后我们要webclient是

00:29:28.570 --> 00:29:42.350
除了编码站起来是一个非常

00:29:30.920 --> 00:29:44.450
怪异的艺术建造者好吧，所以我们有一个

00:29:42.350 --> 00:29:45.830
基本的有各种各样的

00:29:44.450 --> 00:29:51.910
我们可以对其进行配置

00:29:45.830 --> 00:29:51.910
想要基于URL，我知道那是

00:29:53.380 --> 00:30:02.420
本地主机8080也是我所需要的

00:29:59.750 --> 00:30:04.100
在创建我的Web客户端 spring boot 

00:30:02.420 --> 00:30:07.760
背景正在发挥所有魔力

00:30:04.100 --> 00:30:09.500
如果我愿意给我明智的选择

00:30:07.760 --> 00:30:10.790
归结到我的养老金锁得很清楚

00:30:09.500 --> 00:30:16.340
现在已经过时了，因为

00:30:10.790 --> 00:30:20.050
使用其余的模板，所以我

00:30:16.340 --> 00:30:22.580
需要我要做的网络客户端

00:30:20.050 --> 00:30:27.620
我要呼叫的URI， 

00:30:22.580 --> 00:30:33.320
基本URL的扩展名是我的名字

00:30:27.620 --> 00:30:34.910
要参数化然后我

00:30:33.320 --> 00:30:36.380
要检索结果，我

00:30:34.910 --> 00:30:38.060
碰巧知道结果

00:30:36.380 --> 00:30:42.530
回来只是一个字符串而已

00:30:38.060 --> 00:30:45.310
看中了，所以我要去身体tamaño， 

00:30:42.530 --> 00:30:45.310
这很紧张

00:30:48.860 --> 00:30:53.360
再一次，我们得到了错误，因为

00:30:51.500 --> 00:30:57.669
我是说这提供了一个

00:30:53.360 --> 00:30:57.669
字符串，不再在我们的证明中

00:30:58.269 --> 00:31:06.799
现在，它提供了单声道/字符串和

00:31:02.649 --> 00:31:10.640
再次去编程

00:31:06.799 --> 00:31:13.039
分号，所以现在我们有了

00:31:10.640 --> 00:31:17.330
基础设施设置我们可以回到

00:31:13.039 --> 00:31:19.279
我们的代码在这里，以为我只是

00:31:17.330 --> 00:31:21.559
创建了一些可以提供

00:31:19.279 --> 00:31:24.110
单声道对我来说，为什么我不开始

00:31:21.559 --> 00:31:27.950
退休金锁定只是要回来

00:31:24.110 --> 00:31:33.200
一个单声道，我可以得到一个简单的名字

00:31:27.950 --> 00:31:36.230
足够在新员工中，然后

00:31:33.200 --> 00:31:38.840
我想为此做些什么

00:31:36.230 --> 00:31:41.600
我们经常会做的事情

00:31:38.840 --> 00:31:43.399
那就是使用平面图，说我

00:31:41.600 --> 00:31:44.929
有效地，我将要做反应式

00:31:43.399 --> 00:31:47.929
处理您正在处理的这些数据

00:31:44.929 --> 00:31:49.519
以单声道传递它有点奇怪

00:31:47.929 --> 00:31:53.029
因为其中的含义之一

00:31:49.519 --> 00:31:55.220
平面图是我要创建一个数字

00:31:53.029 --> 00:31:57.200
的过程将处理一个

00:31:55.220 --> 00:31:58.880
您传递的每个项目

00:31:57.200 --> 00:32:01.309
对我或单声道来说，我们知道

00:31:58.880 --> 00:32:02.600
还是一个人

00:32:01.309 --> 00:32:06.320
我们想要跨使用的相同模式

00:32:02.600 --> 00:32:13.630
他们两个，所以我要去

00:32:06.320 --> 00:32:15.529
附带的养老金ID 

00:32:13.630 --> 00:32:17.539
我花了一些时间去工作的东西

00:32:15.529 --> 00:32:19.730
出来，我会打电话给你的退休金ID 

00:32:17.539 --> 00:32:21.470
如果您不希望它叫做P 

00:32:19.730 --> 00:32:23.080
特殊的价值，只是一个名字

00:32:21.470 --> 00:32:25.279
您正在分配是否一直在使用

00:32:23.080 --> 00:32:27.279
例如，Java速率流

00:32:25.279 --> 00:32:29.899
应该对这个想法很熟悉

00:32:27.279 --> 00:32:34.940
所以我想做点什么

00:32:29.899 --> 00:32:37.690
养老金ID，我想确保得到它

00:32:34.940 --> 00:32:37.690
也是对的

00:32:48.290 --> 00:32:57.780
好吧，我想做两件事

00:32:55.140 --> 00:33:03.000
我要设置的新员工

00:32:57.780 --> 00:33:07.130
退休金ID是该退休金ID，现在

00:33:03.000 --> 00:33:07.130
我想回来的一件重要的事情

00:33:08.570 --> 00:33:15.900
我的流可以继续的东西

00:33:11.550 --> 00:33:19.230
在这种情况下， 

00:33:15.900 --> 00:33:25.970
简单的我可以使用新的

00:33:19.230 --> 00:33:28.260
我拥有的员工，最后我

00:33:25.970 --> 00:33:35.010
需要和那个员工做些事情

00:33:28.260 --> 00:33:40.580
我想保存到

00:33:35.010 --> 00:33:40.580
实际上我可以更轻松地做到这一点

00:33:55.100 --> 00:34:07.009
再一次我想返回单声道F 

00:34:00.919 --> 00:34:10.329
员工哦亲爱的

00:34:07.009 --> 00:34:10.329
那是错误的，不是吗？ 

00:34:11.379 --> 00:34:17.649
是的，正如我所说的，普通开发商

00:34:15.349 --> 00:34:21.169
正常错误

00:34:17.649 --> 00:34:23.149
所以现在的代码应该可以了

00:34:21.169 --> 00:34:25.129
我们那里有一张平面图，上面写着

00:34:23.149 --> 00:34:27.649
会拿走您的每一项

00:34:25.129 --> 00:34:29.810
在这种情况下让我成为一个

00:34:27.649 --> 00:34:32.119
可能很多，我会做任何事情

00:34:29.810 --> 00:34:33.579
你告诉我要做的过程，然后

00:34:32.119 --> 00:34:36.940
最后我们有一张地图

00:34:33.579 --> 00:34:39.200
本质上是同步调用

00:34:36.940 --> 00:34:40.970
琐碎的行为，如果你只是喜欢

00:34:39.200 --> 00:34:45.440
说将其保存到我们的存储库中

00:34:40.970 --> 00:34:48.079
完成，所以我们有一个非常相似的方法

00:34:45.440 --> 00:34:50.329
我们想打电话给我们，而不只是

00:34:48.079 --> 00:34:51.950
进行一项养老金更新会致电一位

00:34:50.329 --> 00:34:57.079
我们要做的养老金服务

00:34:51.950 --> 00:35:01.450
多次通话，所以我们需要做一个

00:34:57.079 --> 00:35:08.180
类似的转换，如果我们

00:35:01.450 --> 00:35:10.490
首先更改，使我正确

00:35:08.180 --> 00:35:12.260
你们都觉得我把9月10日放进去

00:35:10.490 --> 00:35:19.280
我可以感觉到一定的错误的地方

00:35:12.260 --> 00:35:21.109
再次关注，我们知道如何创建一个

00:35:19.280 --> 00:35:26.030
会有一些信息的助焊剂

00:35:21.109 --> 00:35:28.369
对我们来说很有趣，您可以开始

00:35:26.030 --> 00:35:30.530
找到全部，然后就像我们刚刚

00:35:28.369 --> 00:35:32.060
看到我们要再次做平面图

00:35:30.530 --> 00:35:34.430
因为我们想对

00:35:32.060 --> 00:35:36.819
由此产生的价值

00:35:34.430 --> 00:35:38.930
我们变成了不断变化的

00:35:36.819 --> 00:35:39.920
这次更有趣了

00:35:38.930 --> 00:35:43.180
因为我们实际上会得到

00:35:39.920 --> 00:35:45.980
其中有多个值，如果我们采取

00:35:43.180 --> 00:35:49.250
否则我们将使一名雇员离开

00:35:45.980 --> 00:35:52.510
那，我们将要做

00:35:49.250 --> 00:35:52.510
那位员工的事

00:35:53.010 --> 00:35:56.059
 [音乐] 

00:35:58.660 --> 00:36:07.429
再次，我想确保我得到

00:36:00.529 --> 00:36:11.989
这是正确的，所以让我们做到这一点

00:36:07.429 --> 00:36:13.669
进入您的养老金锁定，我们

00:36:11.989 --> 00:36:21.499
需要名称，以便它可以

00:36:13.669 --> 00:36:25.429
养老金查询，然后我们要

00:36:21.499 --> 00:36:27.289
结果，然后做一个平面图

00:36:25.429 --> 00:36:28.729
这次是单声道，因为我们只是

00:36:27.289 --> 00:36:31.189
将获得一个价值，但它是

00:36:28.729 --> 00:36:34.609
埋在这张平面图中

00:36:31.189 --> 00:36:36.099
继续，所以我们会拿到退休金ID 

00:36:34.609 --> 00:36:38.869
从那回来

00:36:36.099 --> 00:36:41.809
我很喜欢我们刚才的代码

00:36:38.869 --> 00:36:45.849
写我们不想做两件事

00:36:41.809 --> 00:36:53.239
我们要更新退休金ID 

00:36:45.849 --> 00:36:58.910
有了这个价值，我们再次想

00:36:53.239 --> 00:37:03.979
返回一名员工，以便下一步

00:36:58.910 --> 00:37:06.799
有一些工作要做，然后再次

00:37:03.979 --> 00:37:09.339
我们要做的最后一步是

00:37:06.799 --> 00:37:09.339
实际保存

00:37:16.540 --> 00:37:21.870
我需要另一个

00:37:24.930 --> 00:37:28.730
那里的东西

00:37:31.760 --> 00:37:47.490
十六六十六六谢谢

00:37:45.200 --> 00:37:51.390
你有退货吗？ 

00:37:47.490 --> 00:37:55.310
记住好吧，这是更多

00:37:51.390 --> 00:37:57.930
有趣的一个，因为我仍然需要我的

00:37:55.310 --> 00:37:59.880
知道这是一个更有趣的

00:37:57.930 --> 00:38:02.280
因为我们将平面图更多地用于

00:37:59.880 --> 00:38:04.800
为了它令人印象深刻的目的

00:38:02.280 --> 00:38:06.090
从一开始我们就有员工

00:38:04.800 --> 00:38:08.580
我们将采取其中每一个

00:38:06.090 --> 00:38:10.200
个人员工，我们将

00:38:08.580 --> 00:38:12.330
养老金查询吗养老金查询吗

00:38:10.200 --> 00:38:14.780
用于更新记录并保存到

00:38:12.330 --> 00:38:17.520
如果我们有一百个

00:38:14.780 --> 00:38:19.910
我们需要检查的员工

00:38:17.520 --> 00:38:22.460
更新的详细信息，然后它将

00:38:19.910 --> 00:38:24.720
可能旋转一百

00:38:22.460 --> 00:38:27.840
我们能够做到的流程

00:38:24.720 --> 00:38:30.540
平行或接近平行

00:38:27.840 --> 00:38:33.270
它决定适当的很多

00:38:30.540 --> 00:38:34.920
反应堆正在做的工作

00:38:33.270 --> 00:38:36.359
确保它具有良好的默认值

00:38:34.920 --> 00:38:38.100
线程数之类的东西

00:38:36.359 --> 00:38:40.710
认为之前提到过

00:38:38.100 --> 00:38:43.859
通常情况下，物理CPU的数量

00:38:40.710 --> 00:38:46.740
您的机器，所有这些都是

00:38:43.859 --> 00:38:48.240
你可以调整，但你应该

00:38:46.740 --> 00:38:49.380
大概考虑一下，首先

00:38:48.240 --> 00:38:54.470
习惯于

00:38:49.380 --> 00:38:54.470
一般，如果我现在尝试运行

00:39:03.010 --> 00:39:13.900
然后幸运的是我们做了

00:39:06.390 --> 00:39:17.130
创建者用户我应该重新启动

00:39:13.900 --> 00:39:17.130
也会有帮助

00:39:21.970 --> 00:39:27.760
没有明显的别名，我必须拥有正确的权限

00:39:23.829 --> 00:39:29.650
分号的数量，所以当我

00:39:27.760 --> 00:39:32.260
再次打电话给我，它很有名

00:39:29.650 --> 00:39:36.819
在我查询退休金编号之前，如果我

00:39:32.260 --> 00:39:40.329
做我的清洁，所以我打了多个电话

00:39:36.819 --> 00:39:42.640
您可能会注意到养老金提供者

00:39:40.329 --> 00:39:45.430
那是更快，那是因为

00:39:42.640 --> 00:39:51.220
如果我们看过我忘记的轮廓

00:39:45.430 --> 00:39:54.119
放东西不是，我只是

00:39:51.220 --> 00:39:54.119
窃取这段代码

00:40:01.950 --> 00:40:04.760
你懂

00:40:08.860 --> 00:40:11.880
石头又是

00:40:19.180 --> 00:40:25.390
所以我打了电话，如果我往下看

00:40:21.190 --> 00:40:28.660
在我的控制台中，您可以

00:40:25.390 --> 00:40:30.190
看到你可以看到而无需我

00:40:28.660 --> 00:40:32.560
考虑协调不同

00:40:30.190 --> 00:40:35.080
反应堆正在发生的事情

00:40:32.560 --> 00:40:36.970
照顾我的线程是

00:40:35.080 --> 00:40:38.980
用于线程，因为这是一个分支

00:40:36.970 --> 00:40:42.520
我猜是机器还是CPU机器

00:40:38.980 --> 00:40:44.710
并加快了流程，而无需

00:40:42.520 --> 00:40:46.780
我不得不考虑任何事情

00:40:44.710 --> 00:40:54.490
只是因为魔术或几乎是偶然发生的

00:40:46.780 --> 00:40:58.510
魔术好吧，让我们快速总结一下

00:40:54.490 --> 00:41:00.450
我们在那里所做的一切

00:40:58.510 --> 00:41:03.700
快速了解一下通量和单声道是什么

00:41:00.450 --> 00:41:06.370
重要的是通量是零

00:41:03.700 --> 00:41:07.590
太多的Manos零到一，这是一个

00:41:06.370 --> 00:41:09.820
不同的思考方式

00:41:07.590 --> 00:41:12.370
无限多于您拥有的选择

00:41:09.820 --> 00:41:14.620
得到帮助您考虑处理

00:41:12.370 --> 00:41:17.320
个别物品，我们看起来有点

00:41:14.620 --> 00:41:19.300
在这样做的地图上

00:41:17.320 --> 00:41:21.760
同步呼叫和平面图

00:41:19.300 --> 00:41:23.200
是真正聪明的一部分

00:41:21.760 --> 00:41:24.700
分享这个的项目反应堆

00:41:23.200 --> 00:41:26.170
工作量，然后将其全部带回

00:41:24.700 --> 00:41:28.300
在一起，所以你只得到一个

00:41:26.170 --> 00:41:32.500
最后的通量会认为

00:41:28.300 --> 00:41:35.200
然后被处理的错误只是

00:41:32.500 --> 00:41:37.630
我当时强调的价值观

00:41:35.200 --> 00:41:38.830
希望能够有韧性，我们

00:41:37.630 --> 00:41:40.660
如果我们过去的话可以做到这一点

00:41:38.830 --> 00:41:44.170
错误而不仅仅是爆炸

00:41:40.660 --> 00:41:46.840
当我们碰到钥匙的时候

00:41:44.170 --> 00:41:49.690
需要强调的事情

00:41:46.840 --> 00:41:51.900
你应该保持被动，所以我们开始

00:41:49.690 --> 00:41:55.030
通过提出某种

00:41:51.900 --> 00:41:56.980
通量或单声道，然后我们尝试停留在

00:41:55.030 --> 00:41:59.740
这是最常见的错误之一

00:41:56.980 --> 00:42:03.220
人们做的有一种方法

00:41:59.740 --> 00:42:06.220
通量或称为点块的单声道

00:42:03.220 --> 00:42:08.410
让您在那时检索值

00:42:06.220 --> 00:42:10.180
特别是很少进入

00:42:08.410 --> 00:42:11.380
更复杂的流程

00:42:10.180 --> 00:42:14.080
我们在这里看到的东西很简单

00:42:11.380 --> 00:42:16.570
你走到一半，你以为我

00:42:14.080 --> 00:42:18.490
如果可以的话，只需要那个雇员的名字

00:42:16.570 --> 00:42:21.100
知道了，那么我可以做剩下的事情

00:42:18.490 --> 00:42:22.600
然后将一个点块放回

00:42:21.100 --> 00:42:25.300
我开始的那一天被称为

00:42:22.600 --> 00:42:27.010
得到太诱人了现在阻止

00:42:25.300 --> 00:42:29.200
我们开始意识到阻止是一个坏习惯

00:42:27.010 --> 00:42:31.870
事情，所以您尝试避免该命令

00:42:29.200 --> 00:42:33.010
并且会有一种方法可以遵循

00:42:31.870 --> 00:42:34.630
通过停留的逻辑

00:42:33.010 --> 00:42:37.390
反应性，使您的整个流程

00:42:34.630 --> 00:42:39.310
反应性一件事我们也没有去

00:42:37.390 --> 00:42:42.460
这是多少并不能取代你所知道的

00:42:39.310 --> 00:42:45.400
您仍然可以使用Java速率流和

00:42:42.460 --> 00:42:46.870
如果你想调用一个方法

00:42:45.400 --> 00:42:49.030
只要该方法就可以进行一些处理

00:42:46.870 --> 00:42:50.760
返回单声道或通量，具体取决于

00:42:49.030 --> 00:42:53.920
你在做什么，你可以拥有

00:42:50.760 --> 00:42:55.600
如果，然后在里面，你可以做其他

00:42:53.920 --> 00:42:58.630
流来操纵字符串或

00:42:55.600 --> 00:43:01.930
不管你怎么做，这

00:42:58.630 --> 00:43:03.310
建立在您真正知道的基础上

00:43:01.930 --> 00:43:05.230
吓到我的第一个

00:43:03.310 --> 00:43:08.110
同事形容为您

00:43:05.230 --> 00:43:10.300
学习Java相当浅

00:43:08.110 --> 00:43:12.280
学习曲线然后真正地

00:43:10.300 --> 00:43:14.290
擅长它，随着你变得非常陡峭

00:43:12.280 --> 00:43:17.200
进入所有复杂的选择

00:43:14.290 --> 00:43:19.240
 Java提供的反应堆

00:43:17.200 --> 00:43:20.770
相反，它真的开始了

00:43:19.240 --> 00:43:23.740
复杂，因为这是一种全新的方式

00:43:20.770 --> 00:43:26.350
关于如何创建现状的​​思考， 

00:43:23.740 --> 00:43:28.690
可用的相对较少的命令

00:43:26.350 --> 00:43:31.210
你我认为介于通量和

00:43:28.690 --> 00:43:33.430
英里大概是200英里

00:43:31.210 --> 00:43:36.280
他们中很多人都分享了，所以实际上

00:43:33.430 --> 00:43:41.350
可能几乎掌握

00:43:36.280 --> 00:43:44.620
反应堆提供的一切

00:43:41.350 --> 00:43:46.000
为您准备的资源有反应堆

00:43:44.620 --> 00:43:48.550
宣言和反应流或

00:43:46.000 --> 00:43:50.380
我们之前提到的项目

00:43:48.550 --> 00:43:52.600
反应堆家本身真的很好

00:43:50.380 --> 00:43:54.190
那里的文件不只是

00:43:52.600 --> 00:43:56.170
 Javadoc之类的东西，但是它

00:43:54.190 --> 00:43:57.850
真的带您通过这里

00:43:56.170 --> 00:43:59.170
通量实际上就是我们的意思

00:43:57.850 --> 00:44:02.530
当我们绘制平面图时，我们在做什么

00:43:59.170 --> 00:44:04.120
在掩护下，我

00:44:02.530 --> 00:44:08.050
特别像里面有

00:44:04.120 --> 00:44:09.640
选择一个可以在其中操作的页面

00:44:08.050 --> 00:44:11.650
坐在那里，好吧，我想要什么

00:44:09.640 --> 00:44:13.240
要做的是过滤我的输出

00:44:11.650 --> 00:44:15.310
到这里说好吧你

00:44:13.240 --> 00:44:16.660
需要使用过滤器，那么它真的

00:44:15.310 --> 00:44:17.800
当您第一次开始时很有用

00:44:16.660 --> 00:44:22.570
而你只是不知道

00:44:17.800 --> 00:44:25.480
这些事情可能意味着参考

00:44:22.570 --> 00:44:28.780
 Spring Web对此的代码

00:44:25.480 --> 00:44:31.540
演示文稿将位于该URL 

00:44:28.780 --> 00:44:33.100
还没到，但我会到那里， 

00:44:31.540 --> 00:44:34.990
我想提的最后一件事

00:44:33.100 --> 00:44:36.730
说一开始我是从

00:44:34.990 --> 00:44:39.310
在CF Java客户端上反应

00:44:36.730 --> 00:44:42.010
因为它随着项目反应堆一起成长

00:44:39.310 --> 00:44:43.600
这是一个很好的资源，我不是

00:44:42.010 --> 00:44:45.740
吹牛还有更多的人

00:44:43.600 --> 00:44:47.330
比我参与其中

00:44:45.740 --> 00:44:49.700
优秀的例子资源

00:44:47.330 --> 00:44:52.160
你实际上有反应时

00:44:49.700 --> 00:44:53.330
当你有复杂的代码

00:44:52.160 --> 00:44:56.480
我什至没有的那种分支

00:44:53.330 --> 00:44:57.890
敢进入今天徘徊

00:44:56.480 --> 00:45:00.350
那里特别是如果你看看

00:44:57.890 --> 00:45:02.150
通过集成测试

00:45:00.350 --> 00:45:04.660
相当广泛，您将会有个主意

00:45:02.150 --> 00:45:08.330
在内部可以实现的目标

00:45:04.660 --> 00:45:09.980
项目反应堆，所以这里的时钟我

00:45:08.330 --> 00:45:12.560
认为已经纠正，现在可以告诉

00:45:09.980 --> 00:45:14.270
我还有十秒钟

00:45:12.560 --> 00:45:16.760
所以剩下的就是我要感谢的

00:45:14.270 --> 00:45:18.470
你们中的很多人

00:45:16.760 --> 00:45:20.300
这是我第一次现场编码

00:45:18.470 --> 00:45:22.220
会议我要闲逛

00:45:20.300 --> 00:45:23.420
后面，如果你需要我，这两个

00:45:22.220 --> 00:45:24.910
我的同事们也将能够

00:45:23.420 --> 00:45:26.320
帮助您解决任何问题

00:45:24.910 --> 00:45:29.060
非常感谢

00:45:26.320 --> 00:45:35.820
 [掌声] 

00:45:29.060 --> 00:45:35.820
 [音乐] 

