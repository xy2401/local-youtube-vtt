WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.900 --> 00:00:08.000
 [音乐] 

00:00:03.910 --> 00:00:10.669
好的开始就是谢谢你

00:00:08.000 --> 00:00:12.290
在这里，这是一个完整的房间，是一个真正的

00:00:10.669 --> 00:00:16.430
今天在这里介绍的项目

00:00:12.290 --> 00:00:18.410
所以我们真的希望您喜欢它

00:00:16.430 --> 00:00:20.840
真正的东西，我们为此感到自豪

00:00:18.410 --> 00:00:23.000
向您展示我们在

00:00:20.840 --> 00:00:25.130
在卡夫卡工作了近三年

00:00:23.000 --> 00:00:27.470
投资部分是股票

00:00:25.130 --> 00:00:31.609
市场交易，我们将

00:00:27.470 --> 00:00:33.860
给你看一点我

00:00:31.609 --> 00:00:36.800
 Marcos我来自巴西，但我一直

00:00:33.860 --> 00:00:40.070
在阿姆斯特丹住了大约四四个

00:00:36.800 --> 00:00:45.320
或多或少是一个很棒的地方

00:00:40.070 --> 00:00:47.570
拥有非常创新的银行

00:00:45.320 --> 00:00:49.130
背景是分布式计算

00:00:47.570 --> 00:00:52.370
从那时起就与应用程序合作

00:00:49.130 --> 00:00:55.070
在mm之前很多面向消息的

00:00:52.370 --> 00:00:57.860
我职业中的中间件很大

00:00:55.070 --> 00:01:01.760
我现在工作的客户不存在

00:00:57.860 --> 00:01:03.740
像ba和Borland这样的公司

00:01:01.760 --> 00:01:06.619
你知道他们在你之前的jbuilder 

00:01:03.740 --> 00:01:09.619
在WebLogic中使用IntelliJ也很棒

00:01:06.619 --> 00:01:13.280
被Oracle收购的服务器

00:01:09.619 --> 00:01:15.530
后来我也在世界各地的田鼠工作

00:01:13.280 --> 00:01:17.390
与IBM for WebSphere合作多年

00:01:15.530 --> 00:01:19.820
我真的和巨大的人一起工作

00:01:17.390 --> 00:01:26.840
金融行业的客户

00:01:19.820 --> 00:01:29.659
很久了，是的，我正在努力

00:01:26.840 --> 00:01:32.810
我感兴趣的陶氏公司

00:01:29.659 --> 00:01:35.539
使用Spring的事件驱动架构

00:01:32.810 --> 00:01:38.179
自从早期偶尔说话

00:01:35.539 --> 00:01:39.979
会议和聚会，是的，我们做了

00:01:38.179 --> 00:01:41.810
关于Kafka的一个非常有趣的项目， 

00:01:39.979 --> 00:01:45.259
很高兴分享

00:01:41.810 --> 00:01:47.929
今天与你们一起了解

00:01:45.259 --> 00:01:49.999
继续生活一下ing是

00:01:47.929 --> 00:01:51.499
最创新的银行可能是

00:01:49.999 --> 00:01:52.880
世界上最创新的银行

00:01:51.499 --> 00:01:55.310
与您的任何一家银行都有一点不同

00:01:52.880 --> 00:01:57.289
可能早已奏效或知道

00:01:55.310 --> 00:01:59.499
真正推动成为一家IT公司

00:01:57.289 --> 00:02:01.490
很多年了，所以它真的在做

00:01:59.499 --> 00:02:03.319
尖端技术试图

00:02:01.490 --> 00:02:04.850
展平结构并建造一个

00:02:03.319 --> 00:02:06.289
职业生涯的技术职业道路

00:02:04.850 --> 00:02:10.130
开发人员真的在推动

00:02:06.289 --> 00:02:13.610
方向超过40 

00:02:10.130 --> 00:02:15.770
有超过15个国家

00:02:13.610 --> 00:02:17.510
空缺职位，所以如果您有兴趣

00:02:15.770 --> 00:02:19.970
你可以看看它超过20 

00:02:17.510 --> 00:02:24.140
不同的国家，这是相当

00:02:19.970 --> 00:02:25.730
有趣，是的，让我们开始

00:02:24.140 --> 00:02:28.220
那么今天我们的议程

00:02:25.730 --> 00:02:30.200
所以我们要解释一下

00:02:28.220 --> 00:02:32.210
关于我们的用例，为什么我们开始这个

00:02:30.200 --> 00:02:35.180
在第一个案例中第一个案例

00:02:32.210 --> 00:02:37.880
关于米菲的地方基本上是

00:02:35.180 --> 00:02:40.190
为我们揭开序幕，我们将向您展示

00:02:37.880 --> 00:02:43.550
关于我们的移动投资

00:02:40.190 --> 00:02:45.110
在我们架构上的应用

00:02:43.550 --> 00:02:46.550
就像我们在这里展示的一切一样

00:02:45.110 --> 00:02:48.830
提到它是真实的东西

00:02:46.550 --> 00:02:51.230
生产，这是一些工作

00:02:48.830 --> 00:02:54.020
它的代码，但我们将得到

00:02:51.230 --> 00:02:55.880
在那里我们要做一个演示

00:02:54.020 --> 00:02:57.910
谈谈监控矩阵

00:02:55.880 --> 00:03:01.250
这对我们来说非常重要

00:02:57.910 --> 00:03:04.550
卡夫卡促进了当地发展

00:03:01.250 --> 00:03:06.140
吸取教训，我们将

00:03:04.550 --> 00:03:10.420
希望开放一些问题，如果

00:03:06.140 --> 00:03:13.070
你有时间

00:03:10.420 --> 00:03:14.990
是的，所以之前只是一个快速免责声明

00:03:13.070 --> 00:03:16.490
我们开始，因为有了e9g，我们有很多

00:03:14.990 --> 00:03:18.709
有安全性的法规

00:03:16.490 --> 00:03:21.700
测量，所以我们实际上无法

00:03:18.709 --> 00:03:24.890
向您展示真实的生产代码

00:03:21.700 --> 00:03:26.570
但是是的，我们不会在这里

00:03:24.890 --> 00:03:28.850
舞台只显示幻灯片

00:03:26.570 --> 00:03:31.040
我们真的想向您展示真实

00:03:28.850 --> 00:03:32.930
代码，因此我们基本上将其创建为

00:03:31.040 --> 00:03:36.050
宠物项目，但后来发展为某种

00:03:32.930 --> 00:03:37.970
是的，非常好的实验室项目

00:03:36.050 --> 00:03:39.170
对我们来说，这实际上就是我们

00:03:37.970 --> 00:03:41.870
今天要告诉你，但是

00:03:39.170 --> 00:03:43.700
启发了我们所做的工作

00:03:41.870 --> 00:03:45.590
然后，是的，我们将向您保证

00:03:43.700 --> 00:03:47.270
至少和真实的一样有趣

00:03:45.590 --> 00:03:48.830
项目，也许你会更好，因为

00:03:47.270 --> 00:03:50.630
如果你第二次做事

00:03:48.830 --> 00:03:52.040
你总是做出更好的决定，所以

00:03:50.630 --> 00:03:54.500
我们很高兴分享

00:03:52.040 --> 00:03:57.140
今天和你在一起

00:03:54.500 --> 00:04:00.980
是的，在我们继续投资之前

00:03:57.140 --> 00:04:04.520
域是一个非常复杂的域，所以我们

00:04:00.980 --> 00:04:07.640
希望保持我们的业务术语

00:04:04.520 --> 00:04:10.190
尽可能限制，但如果您听到

00:04:07.640 --> 00:04:12.680
名称或术语打勾请记住

00:04:10.190 --> 00:04:14.570
这张幻灯片，然后我们讨论价格

00:04:12.680 --> 00:04:18.489
更新股票，所以我们在

00:04:14.570 --> 00:04:18.489
能源投资部

00:04:20.049 --> 00:04:25.520
是的，一切从哪里开始

00:04:22.580 --> 00:04:28.550
与法规，这听起来

00:04:25.520 --> 00:04:30.650
可能真的很无聊，但对我们来说

00:04:28.550 --> 00:04:34.190
真的是一个不错的入门旅程

00:04:30.650 --> 00:04:35.960
与卡夫卡在一起，所以欧洲

00:04:34.190 --> 00:04:39.200
国会提出了这项规定

00:04:35.960 --> 00:04:41.540
金融危机之后-是的

00:04:39.200 --> 00:04:44.090
真正保护客户

00:04:41.540 --> 00:04:47.720
是的，避免损失很多钱

00:04:44.090 --> 00:04:49.760
关于投资，只是不强调

00:04:47.720 --> 00:04:53.240
只有ING必须实施

00:04:49.760 --> 00:04:56.300
所有欧洲银行必须做的监管

00:04:53.240 --> 00:04:59.270
这是的，实际的规定是

00:04:56.300 --> 00:05:03.080
相当大的书吧，我们只告诉你

00:04:59.270 --> 00:05:04.640
今天死亡的一小部分

00:05:03.080 --> 00:05:06.770
其实最有趣的部分

00:05:04.640 --> 00:05:08.600
为我们工作，所以基本上

00:05:06.770 --> 00:05:11.120
要求实际上是

00:05:08.600 --> 00:05:12.890
这张幻灯片的标题告知我们

00:05:11.120 --> 00:05:15.650
存货时投资客户

00:05:12.890 --> 00:05:20.150
价格在年底下降百分之十

00:05:15.650 --> 00:05:24.590
那天，所以我们给他们发了短信或

00:05:20.150 --> 00:05:26.990
在应用程序中推送通知，但在

00:05:24.590 --> 00:05:29.120
一天结束时，您可能会失去

00:05:26.990 --> 00:05:31.760
集会已经有很多钱了

00:05:29.120 --> 00:05:33.230
所以我们和产品负责人坐下来

00:05:31.760 --> 00:05:35.690
与基础的人一起，我们说

00:05:33.230 --> 00:05:37.880
好吧，这是来自

00:05:35.690 --> 00:05:40.850
监管，但我们可以做得更好

00:05:37.880 --> 00:05:42.950
应该实时执行此操作，因为

00:05:40.850 --> 00:05:46.970
我们的客户可以进行相应的连接

00:05:42.950 --> 00:05:51.650
并希望节省一些钱，所以

00:05:46.970 --> 00:05:53.450
我们从哪里开始给您一个

00:05:51.650 --> 00:05:55.280
我想告诉你一些背景

00:05:53.450 --> 00:05:57.620
我们手机的一些屏幕

00:05:55.280 --> 00:06:00.470
客户使用的投资应用程序

00:05:57.620 --> 00:06:02.990
当然，我们也有一个网站

00:06:00.470 --> 00:06:05.030
面向界面，但我们看到了更多

00:06:02.990 --> 00:06:08.230
越来越多的人在使用手机

00:06:05.030 --> 00:06:11.750
应用程序，所以让我们考虑一下你的fa 

00:06:08.230 --> 00:06:14.990
 ING内的投资账户很多

00:06:11.750 --> 00:06:16.310
您投资组合中的股票数量，您可以

00:06:14.990 --> 00:06:19.850
你可以看到你的股票，你会

00:06:16.310 --> 00:06:23.240
想对您的其中一个设置警报

00:06:19.850 --> 00:06:25.850
投资组合中的股票，以便您可以

00:06:23.240 --> 00:06:28.640
可以看到您要去的那些警报

00:06:25.850 --> 00:06:29.900
创建您可以创建警报，您可以

00:06:28.640 --> 00:06:31.100
删除它们，永远不知道

00:06:29.900 --> 00:06:38.289
他们中的你很漂亮

00:06:31.100 --> 00:06:41.870
简单明了，所以旁边是必需的

00:06:38.289 --> 00:06:45.470
价格下降10％是的

00:06:41.870 --> 00:06:47.600
想出了好主意，所以我们采取了

00:06:45.470 --> 00:06:52.610
这是非常积极的方法

00:06:47.600 --> 00:06:54.590
头规也基本上

00:06:52.610 --> 00:06:56.750
为客户提供的功能，因为

00:06:54.590 --> 00:06:58.610
如果价格上涨，您可能想要

00:06:56.750 --> 00:07:01.729
出售它，因为您实际上可以

00:06:58.610 --> 00:07:03.500
一些钱，然后他们问我们哦可以

00:07:01.729 --> 00:07:05.780
您也可以按特定价格执行此操作，或者

00:07:03.500 --> 00:07:07.760
不仅有一定百分比，而且没有

00:07:05.780 --> 00:07:09.830
以特定的价格，例如

00:07:07.760 --> 00:07:11.870
存货达到了我们的价格

00:07:09.830 --> 00:07:14.389
说12欧元，我想得到

00:07:11.870 --> 00:07:16.729
通知，以便我可以做一些事情

00:07:14.389 --> 00:07:18.860
在客户中不仅可以创造

00:07:16.729 --> 00:07:22.220
一个通知，但基本上可以设置

00:07:18.860 --> 00:07:26.150
多个通知，所以他们得到了

00:07:22.220 --> 00:07:27.500
通知，这有点烦人了

00:07:26.150 --> 00:07:29.810
如果创建警报，则必须

00:07:27.500 --> 00:07:32.240
匹配时再次登录，如此

00:07:29.810 --> 00:07:35.300
他们还问我们好吗，您创建

00:07:32.240 --> 00:07:37.669
定期提醒，使客户没有

00:07:35.300 --> 00:07:39.470
登录并手动创建

00:07:37.669 --> 00:07:41.900
一路走来，有很多要求

00:07:39.470 --> 00:07:46.070
在逐步的项目成为

00:07:41.900 --> 00:07:49.070
有点复杂，然后最

00:07:46.070 --> 00:07:50.479
当时棘手的事情来了

00:07:49.070 --> 00:07:52.130
开始实施，因为他们说是的

00:07:50.479 --> 00:07:55.240
意识到如果你想这样做

00:07:52.130 --> 00:07:58.580
实时我们正在处理一个常数

00:07:55.240 --> 00:08:01.669
价格更新流从

00:07:58.580 --> 00:08:03.220
市场，并且可以在2000年之间上升

00:08:01.669 --> 00:08:05.780
每秒高达12,000 

00:08:03.220 --> 00:08:08.690
特别是在特朗普发推文时

00:08:05.780 --> 00:08:10.909
我们看到它说嘿，它不会发疯

00:08:08.690 --> 00:08:17.539
对，所以我们必须为此做好准备

00:08:10.909 --> 00:08:19.580
所以是的，我们从哪里开始的，是的，我们

00:08:17.539 --> 00:08:21.650
最初并没有想到过卡夫卡

00:08:19.580 --> 00:08:24.409
一开始我们大惊小怪

00:08:21.650 --> 00:08:27.139
它正在发生和趋势，但我们

00:08:24.409 --> 00:08:29.419
首先，我们尝试了很多pocs 

00:08:27.139 --> 00:08:32.180
将数据存储在我们玩过的elasticsearch中

00:08:29.419 --> 00:08:34.640
到春季批处理，但最后

00:08:32.180 --> 00:08:36.349
我们很快意识到我们需要

00:08:34.640 --> 00:08:39.349
某种流媒体平台来处理

00:08:36.349 --> 00:08:41.209
大量的数据进入

00:08:39.349 --> 00:08:43.440
并在订单上与之匹配

00:08:41.209 --> 00:08:45.720
针对成千上万的警报

00:08:43.440 --> 00:08:48.089
受客户欢迎，我们无法停止

00:08:45.720 --> 00:08:50.730
是的，我们要这样做

00:08:48.089 --> 00:08:54.839
实时，这就是我们的旅程

00:08:50.730 --> 00:08:57.930
开始我们的团队，我们有一个非常

00:08:54.839 --> 00:09:00.689
有经验的弹簧知识弹簧

00:08:57.930 --> 00:09:02.550
摊位，我们发现

00:09:00.689 --> 00:09:04.110
有一个团队管理刀具

00:09:02.550 --> 00:09:06.870
已经集群好几年了

00:09:04.110 --> 00:09:08.629
在管理这个Khafre方面真的很成熟

00:09:06.870 --> 00:09:10.800
克里斯托弗对我们来说真的

00:09:08.629 --> 00:09:13.410
方便，因为我们不必

00:09:10.800 --> 00:09:15.269
担心磁盘非洲列表，我们没有

00:09:13.410 --> 00:09:19.610
必须管理自己，所以

00:09:15.269 --> 00:09:22.319
实际上是我们旅程的起点

00:09:19.610 --> 00:09:24.660
在我们向您展示一些代码之前

00:09:22.319 --> 00:09:28.019
我想快速进行一些现场演示

00:09:24.660 --> 00:09:30.329
告诉你我们是怎么过的

00:09:28.019 --> 00:09:32.160
建筑看起来像一些

00:09:30.329 --> 00:09:35.040
图片，因为您会看到一些

00:09:32.160 --> 00:09:37.500
应用程序正在运行，所以让我们也许

00:09:35.040 --> 00:09:39.180
从我们的最终结果开始，我们将

00:09:37.500 --> 00:09:43.199
喜欢发送通知为

00:09:39.180 --> 00:09:45.360
尽快给我们的客户和

00:09:43.199 --> 00:09:46.889
客户首先需要这样做

00:09:45.360 --> 00:09:51.000
创建警报，当然我们创建

00:09:46.889 --> 00:09:53.459
当他们购买股票时发出警报

00:09:51.000 --> 00:09:56.130
应用Web应用程序和

00:09:53.459 --> 00:09:58.500
他们也是可以代表的顾问

00:09:56.130 --> 00:10:00.959
客户的重大警报，因为我们

00:09:58.500 --> 00:10:04.170
还有人在打电话

00:10:00.959 --> 00:10:05.730
中心获得建议，顾问也获得建议

00:10:04.170 --> 00:10:08.130
应该能够在

00:10:05.730 --> 00:10:10.680
办公室客户，所以基本上

00:10:08.130 --> 00:10:13.230
它从哪里开始，所以我们有一个弹簧靴

00:10:10.680 --> 00:10:17.910
基本上是两个应用

00:10:13.230 --> 00:10:20.310
主要提供休息界面和

00:10:17.910 --> 00:10:21.480
最后存储警报

00:10:20.310 --> 00:10:24.029
漂亮的数据库中的客户

00:10:21.480 --> 00:10:26.459
简单，然后我们有另一个

00:10:24.029 --> 00:10:30.059
组件，该组件是

00:10:26.459 --> 00:10:33.209
基本上负责接收

00:10:30.059 --> 00:10:35.490
这些来自市场的价格更新， 

00:10:33.209 --> 00:10:39.809
这将推动不断

00:10:35.490 --> 00:10:42.600
到目前为止，Kafka的滴答声非常好

00:10:39.809 --> 00:10:46.170
我的意思是将其减少到Kafka相当容易

00:10:42.600 --> 00:10:49.319
所以这就是运行

00:10:46.170 --> 00:10:51.000
卡夫卡，你需要动物园管理员，我们也

00:10:49.319 --> 00:10:53.970
使用架构注册表，我们将进入

00:10:51.000 --> 00:10:56.009
后来，但现在这是

00:10:53.970 --> 00:10:56.420
为我们管理，所以这很漂亮

00:10:56.009 --> 00:10:59.460
许多

00:10:56.420 --> 00:11:01.770
然后重担来了，因为

00:10:59.460 --> 00:11:04.470
现在我们必须不匹配此传入

00:11:01.770 --> 00:11:06.480
 tix流对数量的影响

00:11:04.470 --> 00:11:08.850
刻度线和警报数量

00:11:06.480 --> 00:11:10.290
数据库，但我们不能去12000 

00:11:08.850 --> 00:11:16.320
每秒访问数据库一次，因为

00:11:10.290 --> 00:11:18.180
那不会扩展，但是这个组件

00:11:16.320 --> 00:11:20.730
基本上负责匹配它

00:11:18.180 --> 00:11:22.860
匹配警报，如果有

00:11:20.730 --> 00:11:26.250
匹配一个或多个

00:11:22.860 --> 00:11:30.330
客户，它将推动另一种违法行为

00:11:26.250 --> 00:11:32.430
基本上是在Kafka上，所以没有API 

00:11:30.330 --> 00:11:35.220
这些应用程序之间的调用，所以如果

00:11:32.430 --> 00:11:37.650
和riffin以及通知面板

00:11:35.220 --> 00:11:39.870
可以联系任何一条短信

00:11:37.650 --> 00:11:42.870
网关斜线平台或推送

00:11:39.870 --> 00:11:45.180
平台最终交付

00:11:42.870 --> 00:11:48.150
通知提醒客户，因此

00:11:45.180 --> 00:11:49.980
这实际上是在高层次上

00:11:48.150 --> 00:11:52.290
我们建造了什么，我们将要运行

00:11:49.980 --> 00:11:55.160
这整个事情都是本地的，让我们祈祷

00:11:52.290 --> 00:11:58.860
演示神一切正常

00:11:55.160 --> 00:12:01.200
所以我们在团队中切换到IntelliJ 

00:11:58.860 --> 00:12:03.810
正在准备运行它的一切

00:12:01.200 --> 00:12:05.250
重要的是要知道12,000 

00:12:03.810 --> 00:12:07.200
卡夫卡每秒

00:12:05.250 --> 00:12:08.940
如果您认为基本上很轻巧

00:12:07.200 --> 00:12:11.400
 Kafka被开发来真正处理

00:12:08.940 --> 00:12:13.710
大量的数据，但我们最大的

00:12:11.400 --> 00:12:16.410
挑战不只是那些12,000 

00:12:13.710 --> 00:12:19.050
滴答声大约匹配12,000个滴答声

00:12:16.410 --> 00:12:21.600
一直保持每秒，因为您看到了

00:12:19.050 --> 00:12:23.460
我们从所有人的证券交易所进行交易

00:12:21.600 --> 00:12:25.710
遍及整个世界

00:12:23.460 --> 00:12:28.050
运行时间，我们有成千上万

00:12:25.710 --> 00:12:29.880
警报会根据客户和您创建

00:12:28.050 --> 00:12:32.550
不能落后，因为如果你开始

00:12:29.880 --> 00:12:34.350
很快落后几秒钟

00:12:32.550 --> 00:12:35.760
非常落后，因为我们正在处理

00:12:34.350 --> 00:12:37.080
很多，所以同时我们

00:12:35.760 --> 00:12:39.839
处理那些您必须

00:12:37.080 --> 00:12:41.370
与现有的警报匹配

00:12:39.839 --> 00:12:43.410
继续前进，你无法停止

00:12:41.370 --> 00:12:45.510
因为所有这些都是实时的

00:12:43.410 --> 00:12:47.790
实例是下午3:00 

00:12:45.510 --> 00:12:49.830
阿姆斯特丹纽约证券交易所

00:12:47.790 --> 00:12:52.620
美国的纽约证券交易所

00:12:49.830 --> 00:12:54.420
我的意思是这是一个正在进行的事情

00:12:52.620 --> 00:12:57.480
这是最大的挑战之一

00:12:54.420 --> 00:12:59.010
我们有，还有所有重要的

00:12:57.480 --> 00:13:01.350
一切都开始的时候

00:12:59.010 --> 00:13:04.110
蒂姆要解释一个很好的

00:13:01.350 --> 00:13:06.750
关于这个的主题是

00:13:04.110 --> 00:13:08.339
 Kafka非常适合 spring boot 

00:13:06.750 --> 00:13:09.930
模型，因为您有控制权

00:13:08.339 --> 00:13:11.699
您的应用程序实例

00:13:09.930 --> 00:13:13.860
就像你可以扩展多个

00:13:11.699 --> 00:13:15.569
 Kafka中的应用程序将其委托

00:13:13.860 --> 00:13:17.939
基本上，如果您具有

00:13:15.569 --> 00:13:19.889
适当数量的分区等

00:13:17.939 --> 00:13:22.399
客户端，以便您可以控制

00:13:19.889 --> 00:13:25.379
关于缩小的外部尺度有多低

00:13:22.399 --> 00:13:27.360
您的应用程序真的非常

00:13:25.379 --> 00:13:30.209
很好的匹配，因为如果您比较杯

00:13:27.360 --> 00:13:33.300
使用JMS及其旧方法

00:13:30.209 --> 00:13:36.300
真的给你它真的给你

00:13:33.300 --> 00:13:39.480
您可以管理的完美模型

00:13:36.300 --> 00:13:41.939
并准备您的申请

00:13:39.480 --> 00:13:45.689
全天不同的有效载荷

00:13:41.939 --> 00:13:51.959
所以真的很适合

00:13:45.689 --> 00:13:54.899
关于它，让我们看看有一个特定的

00:13:51.959 --> 00:13:57.930
这个演示的事情，我们不参加

00:13:54.899 --> 00:14:00.629
我希望对手工艺本身有更深入的了解

00:13:57.930 --> 00:14:04.860
我相信你们所有人都有

00:14:00.629 --> 00:14:06.720
对卡夫卡的了解，但它将

00:14:04.860 --> 00:14:08.579
像一个演示一样，我们要

00:14:06.720 --> 00:14:11.040
谈论溪流以及我们如何

00:14:08.579 --> 00:14:13.350
参加以及我们如何管理所有这些

00:14:11.040 --> 00:14:16.649
记录更多详细信息并显示大量代码

00:14:13.350 --> 00:14:19.670
是的，所以我实际上开始

00:14:16.649 --> 00:14:23.749
我们开始谈论的豪华文件

00:14:19.670 --> 00:14:26.279
 Kafka开始tsuki /开始

00:14:23.749 --> 00:14:29.670
普罗米修斯为我们的指标标记

00:14:26.279 --> 00:14:31.429
稍后再说明

00:14:29.670 --> 00:14:34.110
在这种情况下当然是Postgres的数据库

00:14:31.429 --> 00:14:36.029
并授权我们所有的春季好

00:14:34.110 --> 00:14:38.670
应用程序从根本上开始

00:14:36.029 --> 00:14:41.790
没关系，到目前为止一切都很健康

00:14:38.670 --> 00:14:45.449
很好，所以在下一个演示中，我们将

00:14:41.790 --> 00:14:47.189
创建大量的价格变动

00:14:45.449 --> 00:14:48.809
在股票上模仿市场

00:14:47.189 --> 00:14:51.809
因为我们没有连接到真实的

00:14:48.809 --> 00:14:54.540
股票市场是这里的聚会提供者

00:14:51.809 --> 00:14:58.290
所以我们基本上是模仿

00:14:54.540 --> 00:14:59.819
这个演示我不想这样做

00:14:58.290 --> 00:15:01.769
因为我想告诉你

00:14:59.819 --> 00:15:03.629
流经此应用程序并执行

00:15:01.769 --> 00:15:05.910
这些主题，所以我们实际上是

00:15:03.629 --> 00:15:10.980
现在要做的是模仿客户

00:15:05.910 --> 00:15:12.839
只是免费让您知道向您展示

00:15:10.980 --> 00:15:15.449
手机有点奇怪，所以

00:15:12.839 --> 00:15:17.549
对于今天的通知警报

00:15:15.449 --> 00:15:19.170
将通过邮件发送，所以您不能

00:15:17.549 --> 00:15:21.029
看到它只是为了展示

00:15:19.170 --> 00:15:25.950
我们没有欺骗您，收件箱是

00:15:21.029 --> 00:15:29.130
空，让我们看看它是否有效

00:15:25.950 --> 00:15:31.800
很好，我们真的很懒

00:15:29.130 --> 00:15:33.990
变成屁屁，所以今天我们的用户界面是

00:15:31.800 --> 00:15:35.790
大摇大摆我希望你们都熟悉

00:15:33.990 --> 00:15:39.120
用它，所以我们要创建一个

00:15:35.790 --> 00:15:42.600
警报，所以今天我自定义一二三

00:15:39.120 --> 00:15:45.750
四五是我们最爱的人之一

00:15:42.600 --> 00:15:48.000
客户，让我们继续吧iPhone 

00:15:45.750 --> 00:15:50.300
我的投资组合中有苹果股票，我们只是

00:15:48.000 --> 00:15:55.430
查找了苹果股票的价格

00:15:50.300 --> 00:15:59.760
是的，它实际上下降了一点

00:15:55.430 --> 00:16:03.630
让我们看一下，这是实际价格，所以

00:15:59.760 --> 00:16:08.160
让我们复制这个价格，我们将

00:16:03.630 --> 00:16:09.990
在系统中创建一个警报，所以这是

00:16:08.160 --> 00:16:13.320
基本价格应以此方式替换

00:16:09.990 --> 00:16:15.570
点，所以差不多有200年了

00:16:13.320 --> 00:16:20.160
是的，我们都想致富

00:16:15.570 --> 00:16:23.220
因此，如果价格达到$ 3,000， 

00:16:20.160 --> 00:16:26.490
我想收到通知，让我们

00:16:23.220 --> 00:16:29.430
看看是否会发生这种情况，每只股票都有一个

00:16:26.490 --> 00:16:34.680
独特的符号来识别一套

00:16:29.430 --> 00:16:36.750
库存，所以这里的符号是AAPL 

00:16:34.680 --> 00:16:41.430
没错，那是苹果股票，所以让我们

00:16:36.750 --> 00:16:44.910
在系统中创建此警报，让我们

00:16:41.430 --> 00:16:47.160
只是为了向您展示我们将要加载

00:16:44.910 --> 00:16:51.510
该客户的所有警报一二

00:16:47.160 --> 00:16:53.699
三四五，我们在这里

00:16:51.510 --> 00:16:55.730
创建了我不知道它是否在

00:16:53.699 --> 00:16:59.519
背面，使其更大一点

00:16:55.730 --> 00:17:03.060
我们创建了此警报，如果库存

00:16:59.519 --> 00:17:05.970
价格达到3000或更高

00:17:03.060 --> 00:17:07.679
比2000年我们将有一场比赛，但现在

00:17:05.970 --> 00:17:11.370
我们没有滴答声进入

00:17:07.679 --> 00:17:13.169
系统，实际上我们在本地做什么

00:17:11.370 --> 00:17:14.939
我们也不想连接到这个

00:17:13.169 --> 00:17:17.429
第三方提供商，因为我们将

00:17:14.939 --> 00:17:19.650
充满了很多数据，所以最

00:17:17.429 --> 00:17:21.510
当我们发展的时候

00:17:19.650 --> 00:17:25.890
我们希望控制的功能

00:17:21.510 --> 00:17:28.610
我们发送的滴答声中创建的

00:17:25.890 --> 00:17:31.980
我们自己的卡夫卡-生产者

00:17:28.610 --> 00:17:33.060
确实针对我们的情况，所以我们可以

00:17:31.980 --> 00:17:35.280
控制

00:17:33.060 --> 00:17:37.050
当时的股票价格

00:17:35.280 --> 00:17:40.760
模仿股市，但这仅仅是

00:17:37.050 --> 00:17:42.330
仅此演示就一个家伙

00:17:40.760 --> 00:17:45.510
多田多田

00:17:42.330 --> 00:17:49.340
今天它达到了一点价格

00:17:45.510 --> 00:17:51.840
超过两千美元，是的

00:17:49.340 --> 00:17:55.320
在巢和巢蛋上交易

00:17:51.840 --> 00:17:59.970
交换，这是符号，所以让我们

00:17:55.320 --> 00:18:01.590
让我们来经营这个政变的唯一制片人

00:17:59.970 --> 00:18:02.970
实际上是Spring Boot应用程序

00:18:01.590 --> 00:18:05.760
不是网络应用程序，它只是一个

00:18:02.970 --> 00:18:08.580
我们可以执行的命令行运行程序

00:18:05.760 --> 00:18:12.300
在这里，我们基本上说产生一个

00:18:08.580 --> 00:18:14.430
坚持苹果的卡夫卡主题

00:18:12.300 --> 00:18:17.670
库存，基本上为此发送

00:18:14.430 --> 00:18:21.620
 jesu文件将被转换为

00:18:17.670 --> 00:18:24.620
以后再来，但是我们很快就会去

00:18:21.620 --> 00:18:24.620
所以

00:18:29.039 --> 00:18:35.019
让我们执行此注释行

00:18:32.230 --> 00:18:37.720
更新开始发布以采用Kafka 

00:18:35.019 --> 00:18:43.649
现在我们应该有一场比赛

00:18:37.720 --> 00:18:43.649
让我们来看看我们

00:18:44.340 --> 00:18:49.210
客户现在收到通知

00:18:47.200 --> 00:18:52.000
在这种情况下，当然是在他的电话上

00:18:49.210 --> 00:18:55.240
 tml只是为了向您展示示例

00:18:52.000 --> 00:18:58.389
对，所以一切都很好

00:18:55.240 --> 00:19:02.620
发生其中之一的引擎盖很快

00:18:58.389 --> 00:19:06.549
向您展示我们将参加的卡夫卡主题

00:19:02.620 --> 00:19:08.289
稍后再深入，只是快速添加

00:19:06.549 --> 00:19:09.850
集群上的一些也许

00:19:08.289 --> 00:19:12.370
同时解释什么是-是的

00:19:09.850 --> 00:19:15.190
这是-最初是由

00:19:12.370 --> 00:19:17.200
雅虎重要的是不存在

00:19:15.190 --> 00:19:18.820
了，但是它很简单

00:19:17.200 --> 00:19:20.620
配置，因为我们开始了一些

00:19:18.820 --> 00:19:23.379
多年前可能你可以

00:19:20.620 --> 00:19:25.179
实际上是非常好的新工具，但是因为

00:19:23.379 --> 00:19:27.370
我们是从很多年前开始的

00:19:25.179 --> 00:19:29.679
我们运行它的最佳工具

00:19:27.370 --> 00:19:31.809
在本地，基本上可以保持

00:19:29.679 --> 00:19:33.669
和卡夫卡一起发展，然后我们就

00:19:31.809 --> 00:19:35.409
使用它，它表明您是经纪人

00:19:33.669 --> 00:19:37.659
消息是每个主题

00:19:35.409 --> 00:19:39.700
在主题上划分很

00:19:37.659 --> 00:19:41.529
有趣-仍然可用

00:19:39.700 --> 00:19:42.879
码头工人的眼睛，所以你可以去码头工人中心

00:19:41.529 --> 00:19:45.100
在下载图像并开始

00:19:42.879 --> 00:19:47.470
使用它，这对我们来说是惊人的

00:19:45.100 --> 00:19:49.769
真正的好处是

00:19:47.470 --> 00:19:51.909
基本上是您的Kafka上的一些

00:19:49.769 --> 00:19:54.580
经纪人可以是多个经纪人，但

00:19:51.909 --> 00:19:56.409
您会看到Kafka主题

00:19:54.580 --> 00:19:59.559
事件和所有数据基本上是

00:19:56.409 --> 00:20:02.799
流动需要一点点

00:19:59.559 --> 00:20:04.419
是时候开始几秒钟了

00:20:02.799 --> 00:20:06.820
给经纪人并更新自己

00:20:04.419 --> 00:20:13.090
当然，它应该显示一点

00:20:06.820 --> 00:20:14.590
在某个时候，我对

00:20:13.090 --> 00:20:17.440
您可以在这里的最后一列中看到

00:20:14.590 --> 00:20:19.840
所以我们首先创建此警报

00:20:17.440 --> 00:20:22.690
因此，进攻将会在

00:20:19.840 --> 00:20:24.460
卡夫卡主题，然后匹配者将其选中

00:20:22.690 --> 00:20:27.669
上面有一场比赛也发送了

00:20:24.460 --> 00:20:31.750
在另一个Kafka主题上冒犯

00:20:27.669 --> 00:20:34.240
最后，我们的通知组件已发送

00:20:31.750 --> 00:20:37.529
在这种情况下，警报，所以有

00:20:34.240 --> 00:20:37.529
已发送事件

00:20:37.820 --> 00:20:44.850
在国防方面，我们所做的就是

00:20:41.370 --> 00:20:48.660
基本上对其中一个

00:20:44.850 --> 00:20:50.760
 kafka主题到基本

00:20:48.660 --> 00:20:52.860
启动整个流程，所以这是

00:20:50.760 --> 00:20:54.090
最终，整个系统流程

00:20:52.860 --> 00:20:56.670
所有主题和整个春季

00:20:54.090 --> 00:20:59.160
好的应用程序，然后我们继续

00:20:56.670 --> 00:21:01.590
我不会关闭它，我们

00:20:59.160 --> 00:21:03.570
将开始生产约五到

00:21:01.590 --> 00:21:05.580
八千个自动

00:21:03.570 --> 00:21:07.260
我们还将模仿客户

00:21:05.580 --> 00:21:09.500
在系统中交易警报，因此我们

00:21:07.260 --> 00:21:13.160
这里会消耗一些CPU周期

00:21:09.500 --> 00:21:21.660
通过模仿，因为这是一个

00:21:13.160 --> 00:21:23.400
简单的例子，让我们关闭它

00:21:21.660 --> 00:21:24.930
将进入最上面的撰写文件

00:21:23.400 --> 00:21:29.310
整个设置都在玩，但这是

00:21:24.930 --> 00:21:31.170
只是一个快速演示，关键是

00:21:29.310 --> 00:21:34.260
卡夫卡的高性能对我们来说是正确的

00:21:31.170 --> 00:21:37.110
我们需要很高的品格

00:21:34.260 --> 00:21:39.210
很好的想法就是为了这个

00:21:37.110 --> 00:21:42.240
对于此类用例，最新的是

00:21:39.210 --> 00:21:44.070
非常低，因为它被用作零

00:21:42.240 --> 00:21:45.810
复制方法，因此基本上可以复制

00:21:44.070 --> 00:21:48.510
东西直接从缓冲区到

00:21:45.810 --> 00:21:51.270
网络缓冲区，并通过

00:21:48.510 --> 00:21:53.010
电线，因此在这种情况下非常快

00:21:51.270 --> 00:21:55.320
我们正在运行整个设置

00:21:53.010 --> 00:21:57.810
我们也有多个docker实例

00:21:55.320 --> 00:21:59.910
在docker上有很多经验

00:21:57.810 --> 00:22:02.310
冲刺启动，所以基本上是一个非常

00:21:59.910 --> 00:22:03.060
非常适合我们，这就是我们使用的

00:22:02.310 --> 00:22:05.430
为了发展

00:22:03.060 --> 00:22:06.930
这确实有帮助，因为在本地您可以

00:22:05.430 --> 00:22:08.730
基本模拟整个系统

00:22:06.930 --> 00:22:11.280
我想有时候这可能很复杂

00:22:08.730 --> 00:22:13.680
你们大多数人可能正在使用docker 

00:22:11.280 --> 00:22:16.200
当你谈论这个但我们走吧

00:22:13.680 --> 00:22:18.120
回到演示文稿还可以

00:22:16.200 --> 00:22:19.710
所以对我们来说关键的事情之一

00:22:18.120 --> 00:22:21.480
当然这是关于矩阵

00:22:19.710 --> 00:22:23.610
进行监控，以便我们启动该项目时

00:22:21.480 --> 00:22:27.180
没关系，我们必须写这个

00:22:23.610 --> 00:22:28.500
但是我们需要洞察力，我们开始

00:22:27.180 --> 00:22:32.330
环顾四周或我们要去

00:22:28.500 --> 00:22:34.770
使用，我们看到了千分尺，这是一个

00:22:32.330 --> 00:22:36.420
不是美丽的图书馆是

00:22:34.770 --> 00:22:38.370
专为春天而设

00:22:36.420 --> 00:22:40.080
关键项目，但专为

00:22:38.370 --> 00:22:43.620
不可知论者，你应该能够在

00:22:40.080 --> 00:22:45.360
任何类型的工作申请，但都适合

00:22:43.620 --> 00:22:47.640
春季靴真的很好，基本上

00:22:45.360 --> 00:22:49.200
很好的集成，它使它

00:22:47.640 --> 00:22:50.580
如果您使用Spring Boot，会容易一些

00:22:49.200 --> 00:22:53.570
像许多其他人一样

00:22:50.580 --> 00:22:58.290
就像J的单元格是矩阵

00:22:53.570 --> 00:23:00.210
经理基本上一切都是这样

00:22:58.290 --> 00:23:04.290
对我们来说关键的不是

00:23:00.210 --> 00:23:05.700
与我们一起，我们不仅想要

00:23:04.290 --> 00:23:07.470
正常矩阵你有我们想要的吗

00:23:05.700 --> 00:23:09.870
业务矩阵，因为我们需要

00:23:07.470 --> 00:23:12.900
当我们发送另一个时要注意

00:23:09.870 --> 00:23:14.640
实际花了我们多长时间

00:23:12.900 --> 00:23:16.860
通知客户，您也想

00:23:14.640 --> 00:23:18.540
密切关注节点之间的关系

00:23:16.860 --> 00:23:20.520
如果有的话，这是几天之间的最新时间

00:23:18.540 --> 00:23:23.010
我们要立即解决的一些瓶颈

00:23:20.520 --> 00:23:25.320
知道瓶颈在哪里，所以我们可以

00:23:23.010 --> 00:23:26.790
当然可以专门缩放该层

00:23:25.320 --> 00:23:28.350
我们也可以自动化它，但是你

00:23:26.790 --> 00:23:30.180
也想知道能见度，所以你可以证明

00:23:28.350 --> 00:23:32.040
您在流程和流程之间的算法

00:23:30.180 --> 00:23:38.010
这样的事情，所以这真的很关键

00:23:32.040 --> 00:23:40.650
让我们和您了解

00:23:38.010 --> 00:23:42.360
一点这部分，让我们想象

00:23:40.650 --> 00:23:45.150
这个股票交易所有关

00:23:42.360 --> 00:23:47.430
矩阵，这样就可以交易股票了

00:23:45.150 --> 00:23:50.010
您买股票的交易，这个阁楼是

00:23:47.430 --> 00:23:52.200
发出了我们摄取此滴答声

00:23:50.010 --> 00:23:56.040
这就是我们所说的带有

00:23:52.200 --> 00:24:00.150
滴答作响，我们生产坚持

00:23:56.040 --> 00:24:02.640
第一个卡夫卡主题，所以当你想到

00:24:00.150 --> 00:24:04.830
关于这一点，来自市场的原始数据

00:24:02.640 --> 00:24:06.240
不适合您的内部系统，因此

00:24:04.830 --> 00:24:08.430
我们要做的第一件事是

00:24:06.240 --> 00:24:10.650
通过一些丰富的数据

00:24:08.430 --> 00:24:12.390
增加了我们可以使用的含义

00:24:10.650 --> 00:24:13.980
内部系统，所以我们有

00:24:12.390 --> 00:24:16.350
在其之上的商业智能和

00:24:13.980 --> 00:24:20.550
这是第一步，所以我们

00:24:16.350 --> 00:24:22.860
要做的是我们有大量的业务

00:24:20.550 --> 00:24:25.230
专家，他们保留所有这些库存

00:24:22.860 --> 00:24:27.180
我们目前的交易量超过40,000 

00:24:25.230 --> 00:24:29.490
各种不同的乐器

00:24:27.180 --> 00:24:31.770
您基本上有一个想法，如果我们想要

00:24:29.490 --> 00:24:33.690
买股票，我们有超过40,000 

00:24:31.770 --> 00:24:37.080
购买您想要的东西的不同选择

00:24:33.690 --> 00:24:40.470
我们必须匹配这个，因为如果我们

00:24:37.080 --> 00:24:42.270
开始将这些数据吸收到我们的系统中

00:24:40.470 --> 00:24:44.370
内部没有这些情报

00:24:42.270 --> 00:24:46.140
他们对我们没有意义，所以这

00:24:44.370 --> 00:24:48.150
是第一步，我们在这里做什么

00:24:46.140 --> 00:24:50.070
这基本上是卡夫卡流

00:24:48.150 --> 00:24:51.990
在K表中，我将详细介绍

00:24:50.070 --> 00:24:54.570
关于这个，我们加入了，我们

00:24:51.990 --> 00:24:56.790
生产到第二个到

00:24:54.570 --> 00:24:58.950
这里的第三个话题现在所有数据

00:24:56.790 --> 00:25:02.450
有商业意义，我们可以做到

00:24:58.950 --> 00:25:04.700
由我们的内部系统使用

00:25:02.450 --> 00:25:06.860
为此，我们当然有一个

00:25:04.700 --> 00:25:08.840
匹配引擎，如果有匹配项

00:25:06.860 --> 00:25:10.700
我们发布了另一个比赛

00:25:08.840 --> 00:25:12.860
主题，当然还有一个

00:25:10.700 --> 00:25:17.110
我们实际上的通知服务

00:25:12.860 --> 00:25:17.110
发送信息给我们的客户

00:25:17.380 --> 00:25:23.510
我将展示一些关于

00:25:19.850 --> 00:25:25.520
首先可以监视，让我展示一个

00:25:23.510 --> 00:25:27.830
一点点，我们如何做到这一点我

00:25:25.520 --> 00:25:30.290
希望一切都开始顺利，因为

00:25:27.830 --> 00:25:33.650
团队所做的这一步是我们

00:25:30.290 --> 00:25:36.140
整个引擎开始运转

00:25:33.650 --> 00:25:38.810
我们期望至少有5000 

00:25:36.140 --> 00:25:41.600
每秒滴答声-向您展示

00:25:38.810 --> 00:25:44.030
好的铜可以加工

00:25:41.600 --> 00:25:49.630
是的，系统再次完全健康

00:25:44.030 --> 00:25:51.800
所以我要把矩阵同步到- 

00:25:49.630 --> 00:25:53.450
我们使用图荣誉和同步

00:25:51.800 --> 00:25:55.700
本例中的Romantics参数

00:25:53.450 --> 00:25:59.300
因为这很容易，那就是

00:25:55.700 --> 00:26:02.750
我们将展示，所以我们有一个图

00:25:59.300 --> 00:26:04.370
在董事会上，重要的是您

00:26:02.750 --> 00:26:06.860
请记住我刚刚显示的图片

00:26:04.370 --> 00:26:08.660
完成所有步骤，因为

00:26:06.860 --> 00:26:12.560
基本上我们应该在这里看到

00:26:08.660 --> 00:26:14.150
所以我们有一块带有矩阵的板子

00:26:12.560 --> 00:26:15.950
将需要一些时间，因为

00:26:14.150 --> 00:26:18.050
在这里初始化最新的有点

00:26:15.950 --> 00:26:19.490
出来，但它会上升，但在这里我们

00:26:18.050 --> 00:26:21.230
现在基本上生产五个

00:26:19.490 --> 00:26:23.960
每千四百s 

00:26:21.230 --> 00:26:26.120
第二，我们正在处理测试，我们也

00:26:23.960 --> 00:26:28.430
这里有一个指标，您可以看到

00:26:26.120 --> 00:26:31.520
每个刻度的平均大小，所以这也

00:26:28.430 --> 00:26:33.140
帮助我们，实际上这是

00:26:31.520 --> 00:26:35.570
当前的平均大小

00:26:33.140 --> 00:26:37.670
带宽的使用也对我们有帮助

00:26:35.570 --> 00:26:39.260
如果我们需要更多的带宽准备

00:26:37.670 --> 00:26:41.540
带宽可能是重要的

00:26:39.260 --> 00:26:43.580
股市，因为当有

00:26:41.540 --> 00:26:45.050
蓬勃发展的股票需要您的网络

00:26:43.580 --> 00:26:47.750
要做好准备，所以我们需要知道

00:26:45.050 --> 00:26:49.760
基本上所有的时间，所以我们可以改善

00:26:47.750 --> 00:26:51.500
在那里做一些工作，所以这

00:26:49.760 --> 00:26:53.570
应该很快就会消失，然后你看到

00:26:51.500 --> 00:26:55.340
更加真实的图形

00:26:53.570 --> 00:26:57.320
在这里打勾花了一些时间，因为

00:26:55.340 --> 00:26:59.600
基本上重新启动我们正在生成

00:26:57.320 --> 00:27:01.880
一些警报，当然这是一个较小的

00:26:59.600 --> 00:27:04.730
数字，因为负载太大了

00:27:01.880 --> 00:27:06.260
高，但基本上有比赛

00:27:04.730 --> 00:27:08.390
发生并且警报正在匹配

00:27:06.260 --> 00:27:11.240
并基本上立即发送， 

00:27:08.390 --> 00:27:13.910
最新是非常低的，所以如果我们看

00:27:11.240 --> 00:27:15.520
当然在这里周围

00:27:13.910 --> 00:27:17.800
我们或多或少的环境

00:27:15.520 --> 00:27:20.110
雷顿之间的十毫秒

00:27:17.800 --> 00:27:21.640
应用程序在哪里服务器在哪里

00:27:20.110 --> 00:27:23.530
该应用程序正在运行，并且

00:27:21.640 --> 00:27:25.570
经纪人，所以你可以只加十

00:27:23.530 --> 00:27:27.250
每个音符的平均毫秒数，但

00:27:25.570 --> 00:27:29.380
就是这样，基本上是晚了

00:27:27.250 --> 00:27:32.440
我们有现实生活，在这里您可以

00:27:29.380 --> 00:27:34.390
或多或少地看到所有这些步骤

00:27:32.440 --> 00:27:36.280
发生，所以基本上第一步是

00:27:34.390 --> 00:27:38.020
花一毫秒是因为我们

00:27:36.280 --> 00:27:40.270
在此处生成刻度，我们对其进行处理

00:27:38.020 --> 00:27:42.340
在这里，但是我们要做的第一步是

00:27:40.270 --> 00:27:44.410
是我们到达数据的那个流

00:27:42.340 --> 00:27:46.750
我跟你们讲了

00:27:44.410 --> 00:27:48.700
花费50毫秒的时间

00:27:46.750 --> 00:27:50.980
第二个话题，这是联合

00:27:48.700 --> 00:27:53.770
发生了，然后我们进行一场比赛，这是

00:27:50.980 --> 00:27:56.530
现在花了105毫秒，然后我们

00:27:53.770 --> 00:27:58.780
我们实际上发送警报吗

00:27:56.530 --> 00:28:01.780
所以在这个当地环境下

00:27:58.780 --> 00:28:03.610
实际匹配发电机之间

00:28:01.780 --> 00:28:06.700
和T进行比赛并发送

00:28:03.610 --> 00:28:09.400
提醒大约180 80毫秒

00:28:06.700 --> 00:28:10.900
这是非常高效的，另一个

00:28:09.400 --> 00:28:13.630
对我们来说很重要的事情

00:28:10.900 --> 00:28:16.390
关于可扩展性

00:28:13.630 --> 00:28:18.160
成为全球平台的旅程

00:28:16.390 --> 00:28:21.160
现在正在发生什么或正在建造

00:28:18.160 --> 00:28:24.309
您的系统现在不是

00:28:21.160 --> 00:28:26.170
更多不再本地化，所以我们

00:28:24.309 --> 00:28:28.059
难道我们不想拥有像

00:28:26.170 --> 00:28:29.950
荷兰的另一个系统

00:28:28.059 --> 00:28:32.170
系统为比利时做交易

00:28:29.950 --> 00:28:34.270
想要一个系统和最终目标

00:28:32.170 --> 00:28:37.120
是要让整个40个国家/地区使用

00:28:34.270 --> 00:28:38.950
一个单一的全球平台可以做到这一点

00:28:37.120 --> 00:28:41.230
我们的想法是， 

00:28:38.950 --> 00:28:44.410
您所在的IT公司的发展方向

00:28:41.230 --> 00:28:46.270
有一个中心来管理每个单位

00:28:44.410 --> 00:28:48.730
基本上可以处理全部工作量

00:28:46.270 --> 00:28:52.480
在全球范围内，这就是我们加入我们的过程

00:28:48.730 --> 00:28:54.130
现在是的，所以让我显示一些代码

00:28:52.480 --> 00:28:56.170
这是怎么工作的

00:28:54.130 --> 00:29:03.340
有趣，因为卡夫卡有一些

00:28:56.170 --> 00:29:06.520
真正帮助我们做的功能

00:29:03.340 --> 00:29:08.410
这个监控，我会告诉你如何

00:29:06.520 --> 00:29:11.559
第一件事

00:29:08.410 --> 00:29:13.510
卡夫卡天主教线他们暴露出一种

00:29:11.559 --> 00:29:16.170
家伙致电指标报告这是一个

00:29:13.510 --> 00:29:19.330
小牛内部和矩阵报告

00:29:16.170 --> 00:29:21.940
使您基本上可以插入任何

00:29:19.330 --> 00:29:24.370
您想要的监控系统类型

00:29:21.940 --> 00:29:25.840
基本上每次都收集

00:29:24.370 --> 00:29:28.150
有一些指标的更新

00:29:25.840 --> 00:29:29.440
了解有那些指标

00:29:28.150 --> 00:29:31.000
现在正在被带走

00:29:29.440 --> 00:29:32.200
客户端的权利，我们不是在说

00:29:31.000 --> 00:29:35.230
关于我们正在谈论的经纪人

00:29:32.200 --> 00:29:37.750
应用程序以及您的客户每次

00:29:35.230 --> 00:29:39.879
他们更新了指标

00:29:37.750 --> 00:29:41.529
基本上这个方法被触发

00:29:39.879 --> 00:29:43.539
这是一个回调，您收到了

00:29:41.529 --> 00:29:45.340
实际上没有数据的卡夫卡指标

00:29:43.539 --> 00:29:48.250
您需要，基本上我们得到了

00:29:45.340 --> 00:29:50.139
该值，我们发布以显示在

00:29:48.250 --> 00:29:52.179
我刚刚向您显示的那个端口，但是

00:29:50.139 --> 00:29:53.710
监控不仅仅是一个

00:29:52.179 --> 00:29:56.740
您不想要的跨领域关注点

00:29:53.710 --> 00:29:59.049
这种逻辑会污染你的

00:29:56.740 --> 00:30:01.000
商业代码商业代码真的是

00:29:59.049 --> 00:30:02.590
在银行业务中很重要，我们不能赚很多

00:30:01.000 --> 00:30:04.779
那里的错误，所以我们想要真正的干净

00:30:02.590 --> 00:30:07.480
该区域的代码，硬汉也

00:30:04.779 --> 00:30:09.370
有助于卡夫卡有一个

00:30:07.480 --> 00:30:12.159
您很熟悉的概念

00:30:09.370 --> 00:30:15.309
一切肯定，但我看不到人

00:30:12.159 --> 00:30:20.909
谈论很多关于它，但是你

00:30:15.309 --> 00:30:29.259
可以使用，我想我失去了我的一个

00:30:20.909 --> 00:30:32.110
书签哦，是的，这是一个

00:30:29.259 --> 00:30:35.049
拦截器，所以卡夫卡还允许

00:30:32.110 --> 00:30:37.389
您可以挂接有关该主题的拦截器

00:30:35.049 --> 00:30:39.220
所以你可以说每个制作人都会

00:30:37.389 --> 00:30:42.460
成为拦截者，您基本上可以

00:30:39.220 --> 00:30:44.889
使用该拦截器获取数据

00:30:42.460 --> 00:30:47.230
您需要并从中获取指标，因此

00:30:44.889 --> 00:30:49.240
您真的可以完全参与其中

00:30:47.230 --> 00:30:51.190
您的业​​务代码，因此无论何时何地

00:30:49.240 --> 00:30:52.960
有一个新消息发送到

00:30:51.190 --> 00:30:55.360
主题将是一个拦截器，你

00:30:52.960 --> 00:30:57.970
也可以为消费者做到这一点

00:30:55.360 --> 00:30:59.830
生产者和流，当我

00:30:57.970 --> 00:31:02.049
谈论对概念重要的流

00:30:59.830 --> 00:31:03.970
在卡夫卡，您需要

00:31:02.049 --> 00:31:05.919
了解您谈论流时

00:31:03.970 --> 00:31:07.809
流是高级抽象

00:31:05.919 --> 00:31:10.360
在消费者和生产者周围

00:31:07.809 --> 00:31:14.259
因此，您可以为消费者或

00:31:10.360 --> 00:31:16.870
对于生产者，您基本上可以使用

00:31:14.259 --> 00:31:18.669
流以及基本上什么卡夫卡

00:31:16.870 --> 00:31:21.070
当您创建一个

00:31:18.669 --> 00:31:22.629
流产生消费者赤道

00:31:21.070 --> 00:31:24.490
为你生产，所以它也是

00:31:22.629 --> 00:31:26.649
重要的是要记住，就像你

00:31:24.490 --> 00:31:29.110
为小牛设置一个线程

00:31:26.649 --> 00:31:30.970
基本上在幕后

00:31:29.110 --> 00:31:32.679
通常至少创建推文单词

00:31:30.970 --> 00:31:34.330
因为它为

00:31:32.679 --> 00:31:36.429
消费者一个处理器线程

00:31:34.330 --> 00:31:37.960
不会等到制片人推到

00:31:36.429 --> 00:31:40.050
缓冲区和另一个要添加到实际

00:31:37.960 --> 00:31:43.680
发送该信息

00:31:40.050 --> 00:31:46.020
工作，所以这是矩阵部分

00:31:43.680 --> 00:31:50.480
真的让一切变得非常简单

00:31:46.020 --> 00:31:53.760
我们可以从卡夫卡那里得到，我要证明

00:31:50.480 --> 00:31:56.520
告诉你一些关于我们如何

00:31:53.760 --> 00:31:59.700
做第一场比赛只是为了

00:31:56.520 --> 00:32:02.960
使它更明确，我们想看看

00:31:59.700 --> 00:32:02.960
也有一些代码

00:32:36.730 --> 00:32:42.710
是的，但我想现在又回来了

00:32:40.970 --> 00:32:44.090
不知道这是怎么发生的

00:32:42.710 --> 00:32:46.340
好吧

00:32:44.090 --> 00:32:48.410
让我们告诉您一些有关Kafka流的信息

00:32:46.340 --> 00:32:51.140
并加入这里的第一个概念

00:32:48.410 --> 00:32:53.260
有趣的是，我们有一个

00:32:51.140 --> 00:32:54.860
经纪人，这里的第一件事

00:32:53.260 --> 00:32:56.930
分解

00:32:54.860 --> 00:32:59.840
卡夫卡流与之相比

00:32:56.930 --> 00:33:01.550
火花或闪烁是卡夫卡流

00:32:59.840 --> 00:33:03.170
运行自己的应用程序

00:33:01.550 --> 00:33:05.240
我提到了一点

00:33:03.170 --> 00:33:08.600
开始它不在外部运行

00:33:05.240 --> 00:33:10.430
管理经纪人并使用外部工人

00:33:08.600 --> 00:33:11.930
它实际上在你的春天里运行

00:33:10.430 --> 00:33:13.010
引导应用程序就是为什么

00:33:11.930 --> 00:33:15.650
对其有很多控制

00:33:13.010 --> 00:33:17.420
缩小比例等，所以考虑

00:33:15.650 --> 00:33:20.150
这就像冲刺启动应用程序， 

00:33:17.420 --> 00:33:22.220
现在我们有一个最初的话题

00:33:20.150 --> 00:33:23.960
第一步要记住的话题

00:33:22.220 --> 00:33:26.000
市场上的主题我们推向

00:33:23.960 --> 00:33:27.470
最初的话题，还有第二个

00:33:26.000 --> 00:33:30.620
这里的概念非常

00:33:27.470 --> 00:33:32.750
重要的是日志之间的对偶

00:33:30.620 --> 00:33:35.290
当卡夫卡，因为在每个条目

00:33:32.750 --> 00:33:37.970
登录卡夫卡有一个钥匙，那个钥匙

00:33:35.290 --> 00:33:39.950
带给您喜欢的感觉

00:33:37.970 --> 00:33:42.230
就像数据库中的主键一样

00:33:39.950 --> 00:33:44.210
可以使用该键进行联接，因此当您

00:33:42.230 --> 00:33:47.200
考虑一下进入

00:33:44.210 --> 00:33:50.030
登录卡夫卡，它有一个钥匙，你可以

00:33:47.200 --> 00:33:51.500
认为它只是主键

00:33:50.030 --> 00:33:53.510
让每个人都容易理解

00:33:51.500 --> 00:33:55.730
主键权利的概念，然后

00:33:53.510 --> 00:33:57.410
我们有原始的刻度线，然后我们有

00:33:55.730 --> 00:34:00.430
第二个话题，这是我们的业务

00:33:57.410 --> 00:34:04.000
情报就是我们需要的数据

00:34:00.430 --> 00:34:06.350
使这些信息我们到达这里

00:34:04.000 --> 00:34:08.929
对我们的内部应用有用

00:34:06.350 --> 00:34:11.210
它在一个单独的主题中，我们使用

00:34:08.929 --> 00:34:12.710
我将称为地球仪好的表的概念

00:34:11.210 --> 00:34:14.750
使用地球仪还可以表地球仪还可以

00:34:12.710 --> 00:34:17.300
桌子免费提供许多东西

00:34:14.750 --> 00:34:20.240
首先，它会自动保存为

00:34:17.300 --> 00:34:22.639
您在任何键中的最新更新

00:34:20.240 --> 00:34:24.740
推送到该主题，因此如果有任何问题

00:34:22.639 --> 00:34:26.840
从外部系统到此日期

00:34:24.740 --> 00:34:29.360
可以说话题还是业务分析师

00:34:26.840 --> 00:34:31.760
他们现在删除特定的刻度

00:34:29.360 --> 00:34:33.710
我们不再交易了，所以我们不能

00:34:31.760 --> 00:34:36.320
交易或有一种新的

00:34:33.710 --> 00:34:38.690
我们想要交易的工具

00:34:36.320 --> 00:34:40.940
这将自动转到该主题

00:34:38.690 --> 00:34:43.220
为您省钱，让它想到了

00:34:40.940 --> 00:34:45.500
看，这在您本地运行

00:34:43.220 --> 00:34:47.810
这里的应用很棒

00:34:45.500 --> 00:34:50.510
基本上你可以像这样使用

00:34:47.810 --> 00:34:52.340
缓存，但是比缓存简单得多

00:34:50.510 --> 00:34:54.410
现在缓存，您无需管理任何

00:34:52.340 --> 00:34:56.240
更像是您必须放置或删除时

00:34:54.410 --> 00:34:59.090
从缓存中获取所有这些信息

00:34:56.240 --> 00:35:01.250
免费，卡夫卡实现了什么

00:34:59.090 --> 00:35:03.020
在笨蛋的岩石数据库实例中

00:35:01.250 --> 00:35:04.370
您还可以使用其他键值

00:35:03.020 --> 00:35:06.680
如果您想在这里存储，那就是

00:35:04.370 --> 00:35:09.770
默认一名表现出色的

00:35:06.680 --> 00:35:12.860
 SSD，因此要记住的另一点

00:35:09.770 --> 00:35:15.020
在SSD环境中运行，现在您可以

00:35:12.860 --> 00:35:16.880
基本上在这里加入，所以流程

00:35:15.020 --> 00:35:18.920
这是恒定的，这是一个案例流

00:35:16.880 --> 00:35:20.960
所以这永远不会停止

00:35:18.920 --> 00:35:25.390
交流开放永无止境

00:35:20.960 --> 00:35:27.860
这个数据只有24/7，还有更多

00:35:25.390 --> 00:35:29.570
静态的，但也可以在您更新时更新

00:35:27.860 --> 00:35:31.100
这里的表演会很棒吗

00:35:29.570 --> 00:35:33.020
即使您有很多更新

00:35:31.100 --> 00:35:35.300
里面，但在我们的情况下，它不

00:35:33.020 --> 00:35:38.900
您要做的就是像我们这样的简单加入

00:35:35.300 --> 00:35:40.850
大家看到了，最后当我们加入时

00:35:38.900 --> 00:35:43.430
在这些值之间，我们推动一个主题

00:35:40.850 --> 00:35:46.100
现在这些信息有意义

00:35:43.430 --> 00:35:48.500
从内部系统开始

00:35:46.100 --> 00:35:51.350
我们继续并记住这是怎么回事

00:35:48.500 --> 00:35:53.360
每秒流向这里数千

00:35:51.350 --> 00:35:55.700
加入，现在需要100 

00:35:53.360 --> 00:35:57.980
毫秒，所以一直如此

00:35:55.700 --> 00:35:59.900
那是它的好处之一，但是

00:35:57.980 --> 00:36:01.970
请记住这一点，这

00:35:59.900 --> 00:36:03.350
一边，因为我要告诉你

00:36:01.970 --> 00:36:04.730
做到这一点的代码，那是另一个

00:36:03.350 --> 00:36:09.400
这部分很有趣，因为

00:36:04.730 --> 00:36:09.400
这是Khafre相当简化的

00:36:10.450 --> 00:36:17.890
是的，你能不知道是不是

00:36:18.220 --> 00:36:22.900
是的，表演很好，谢谢

00:36:27.360 --> 00:36:35.560
我们快到了，是的，所以我

00:36:34.210 --> 00:36:37.530
会告诉你有一些

00:36:35.560 --> 00:36:40.240
我大概看到的配置

00:36:37.530 --> 00:36:41.710
昨天关于卡夫卡的谈话你可以

00:36:40.240 --> 00:36:42.910
围绕它进行配置，然后

00:36:41.710 --> 00:36:45.160
基本上我要展示什么

00:36:42.910 --> 00:36:47.020
非常重要，这是重点

00:36:45.160 --> 00:36:49.900
我们首先要做的是

00:36:47.020 --> 00:36:51.640
因为您最糟糕的是反序列化

00:36:49.900 --> 00:36:53.680
来自一个主题的信息，以及

00:36:51.640 --> 00:36:55.450
基本上序列化到另一个主题

00:36:53.680 --> 00:36:57.490
反序列化就是实现

00:36:55.450 --> 00:37:00.280
反序列化服务的实现者

00:36:57.490 --> 00:37:02.170
那是沙特的名字，然后你有

00:37:00.280 --> 00:37:04.630
 Avro类型，这是一种新颖的模式

00:37:02.170 --> 00:37:06.340
平均模式给您很多

00:37:04.630 --> 00:37:07.990
我们将要评论的优势

00:37:06.340 --> 00:37:10.420
稍后再讲一点

00:37:07.990 --> 00:37:12.130
那这是你的百利威克桌子吗

00:37:10.420 --> 00:37:15.040
这是它的阅读

00:37:12.130 --> 00:37:16.990
具体主题，基本上是

00:37:15.040 --> 00:37:20.410
在您的本地实现它

00:37:16.990 --> 00:37:23.560
带有特定电子图像的应用程序

00:37:20.410 --> 00:37:25.030
特定的Avro类型，这就是您的全部

00:37:23.560 --> 00:37:27.520
需要做的是拥有现金，如果您

00:37:25.030 --> 00:37:29.440
您可以在该主题上进行更新

00:37:27.520 --> 00:37:31.810
只需发送一个新的密钥， 

00:37:29.440 --> 00:37:34.330
如果有新值，则为您删除

00:37:31.810 --> 00:37:36.370
它会自动自动添加到

00:37:34.330 --> 00:37:38.530
您到那个当地现金和这个

00:37:36.370 --> 00:37:39.790
在本地运行，当我的意思是

00:37:38.530 --> 00:37:42.010
在本地运行，因为这是

00:37:39.790 --> 00:37:43.800
对我们来说也非常重要

00:37:42.010 --> 00:37:46.990
在此键值存储上

00:37:43.800 --> 00:37:48.670
小于0的服务器中的纳秒

00:37:46.990 --> 00:37:50.830
经历的毫秒数

00:37:48.670 --> 00:37:53.260
它在本地非常快

00:37:50.830 --> 00:37:54.730
岩石数据库也有本地缓存​​，因此

00:37:53.260 --> 00:37:56.260
最终一切都在您的体内运行

00:37:54.730 --> 00:37:59.890
本地应用程序非常

00:37:56.260 --> 00:38:01.540
有效率，然后我们做一个帽徽

00:37:59.890 --> 00:38:04.450
从自动主题流

00:38:01.540 --> 00:38:05.980
持续不断的流动，那就是

00:38:04.450 --> 00:38:08.170
您需要执行这两行操作以及

00:38:05.980 --> 00:38:10.870
然后您进行加入，现在您进行加入

00:38:08.170 --> 00:38:13.270
然后用符号说，然后

00:38:10.870 --> 00:38:16.000
联合，一旦完成，如果存在

00:38:13.270 --> 00:38:18.190
它基本上会同步到

00:38:16.000 --> 00:38:20.950
下一个主题，然后您做两个，然后

00:38:18.190 --> 00:38:23.260
这将发送到新主题并在顶部

00:38:20.950 --> 00:38:26.110
其中非常有趣的是

00:38:23.260 --> 00:38:28.420
他们还需要我们的应用程序

00:38:26.110 --> 00:38:30.730
由我们生成的元数据

00:38:28.420 --> 00:38:32.920
我们的业务人员

00:38:30.730 --> 00:38:37.100
前端的不同部分等

00:38:32.920 --> 00:38:40.580
实际上，您可以基本上添加

00:38:37.100 --> 00:38:43.970
我基本上需要擦洗你

00:38:40.580 --> 00:38:47.270
可以在那个地球仪上面吗

00:38:43.970 --> 00:38:49.490
可以将这些值作为键公开

00:38:47.270 --> 00:38:52.280
值存储在两行代码中，所以现在

00:38:49.490 --> 00:38:54.200
你在这里有如何元数据

00:38:52.280 --> 00:38:57.620
需要加入的丰富

00:38:54.200 --> 00:38:59.540
消息，您实际上可以暴露出来

00:38:57.620 --> 00:39:00.680
我们对价格所做的数据相同

00:38:59.540 --> 00:39:02.030
这样的方式，当你去

00:39:00.680 --> 00:39:03.980
应用程序，您会看到股票价格

00:39:02.030 --> 00:39:06.830
我们在做基本相同或暴露

00:39:03.980 --> 00:39:10.300
我们从K表中公开价格

00:39:06.830 --> 00:39:10.300
这也是非常出色的

00:39:10.930 --> 00:39:24.110
从那里我们回到

00:39:18.920 --> 00:39:26.030
演示文稿和团队将让我们

00:39:24.110 --> 00:39:27.740
越过这个团队要谈论

00:39:26.030 --> 00:39:30.560
关于我们当地人的一点

00:39:27.740 --> 00:39:33.050
开发设置是的，所以你看到了

00:39:30.560 --> 00:39:35.150
已经有一些相当高级的话题

00:39:33.050 --> 00:39:37.850
马库斯向我们展示了也许您受到启发

00:39:35.150 --> 00:39:40.940
直到昨天和维克多

00:39:37.850 --> 00:39:42.650
从汇合来看，他们真的很棒

00:39:40.940 --> 00:39:44.450
创建可扩展的Hello World 

00:39:42.650 --> 00:39:47.270
我非常尊重所有应用程序

00:39:44.450 --> 00:39:50.690
像那些谈话，但你可能去

00:39:47.270 --> 00:39:52.910
回到星期一工作，也许

00:39:50.690 --> 00:39:54.590
你已经过期了，所以我们是

00:39:52.910 --> 00:39:56.480
喜欢在哪里使用这个东西

00:39:54.590 --> 00:39:58.460
从正确开始，因为我们也是

00:39:56.480 --> 00:40:02.810
有点挣扎，如果我们回去

00:39:58.460 --> 00:40:06.470
三年前，所以我们开始了

00:40:02.810 --> 00:40:08.690
与with夫二运行一切

00:40:06.470 --> 00:40:10.850
在本地，因为我们当然有一个

00:40:08.690 --> 00:40:12.920
 Kafka集群在测试环境上

00:40:10.850 --> 00:40:15.470
不同的消防员，但如果是马库斯， 

00:40:12.920 --> 00:40:18.080
将要创建或发布很多

00:40:15.470 --> 00:40:20.720
数据或我可能还会使用的主题

00:40:18.080 --> 00:40:22.280
数据，是的，我们继续

00:40:20.720 --> 00:40:24.100
彼此的想法很快

00:40:22.280 --> 00:40:26.870
我们决定隔离我们

00:40:24.100 --> 00:40:28.640
环境在本地运行一切

00:40:26.870 --> 00:40:32.140
最初是从创建我们的

00:40:28.640 --> 00:40:35.090
自己的博士卡夫卡图片和一路走来

00:40:32.140 --> 00:40:37.880
融合卡夫卡背后的公司

00:40:35.090 --> 00:40:40.400
如今为您提供了刀码头工

00:40:37.880 --> 00:40:41.110
每位Kafka经理也对图片进行拍摄

00:40:40.400 --> 00:40:43.930
和

00:40:41.110 --> 00:40:47.770
我们崇拜基督我们自己的申请

00:40:43.930 --> 00:40:49.360
我提到这个定制制作人是

00:40:47.770 --> 00:40:52.030
对我们来说非常重要

00:40:49.360 --> 00:40:53.950
整个项目成长为实验室项目

00:40:52.030 --> 00:40:56.530
我们基本上每天都在使用

00:40:53.950 --> 00:40:59.170
尝试新的东西，我们可以打破

00:40:56.530 --> 00:41:01.090
一切，而且是的

00:40:59.170 --> 00:41:03.730
我们在那里学习，将其带回

00:41:01.090 --> 00:41:06.480
到9 G以内的真实项目， 

00:41:03.730 --> 00:41:09.220
对我们来说也是一个非常好的经历

00:41:06.480 --> 00:41:13.720
以了解更多有关最新和

00:41:09.220 --> 00:41:21.730
春天最伟大的不丹卡夫卡去吧

00:41:13.720 --> 00:41:23.440
到IntelliJ的一些代码

00:41:21.730 --> 00:41:25.180
希望你们都在使用弹簧靴

00:41:23.440 --> 00:41:28.030
那真的很容易上手

00:41:25.180 --> 00:41:33.070
随着春天的卡夫卡，你只是在

00:41:28.030 --> 00:41:36.280
春天的卡夫卡依赖性让我展示

00:41:33.070 --> 00:41:39.090
你仍然在跑对的家伙

00:41:36.280 --> 00:41:49.000
所以这里有点热

00:41:39.090 --> 00:41:52.750
好吧，好吧，所以让它成为

00:41:49.000 --> 00:41:57.180
稍大一点，所以这是一个例子

00:41:52.750 --> 00:41:59.770
我们的dopost文件如此融合

00:41:57.180 --> 00:42:01.690
为我们提供了一个不错的码头工人

00:41:59.770 --> 00:42:04.360
图像有很多

00:42:01.690 --> 00:42:06.610
周围的配置，但对，你

00:42:04.360 --> 00:42:10.450
将沿途学习如何做到这一点

00:42:06.610 --> 00:42:11.950
我们使用撇渣器NSC，fr撇渣器是

00:42:10.450 --> 00:42:14.020
基本上与

00:42:11.950 --> 00:42:17.530
消费者和生产者，他们是

00:42:14.020 --> 00:42:20.260
存储在此注册表中，我们运行

00:42:17.530 --> 00:42:22.570
 kafka管理器，这是它之上的UI 

00:42:20.260 --> 00:42:25.630
看看发生了什么，我们使用Postgres 

00:42:22.570 --> 00:42:27.190
对于数据库，我们必须博士。 ast 

00:42:25.630 --> 00:42:29.710
这里的应用程序，这就是我们

00:42:27.190 --> 00:42:31.780
基本上是开始在当地工作

00:42:29.710 --> 00:42:34.120
大多数时候我们专注于

00:42:31.780 --> 00:42:36.100
在IntelliJ中运行的应用程序

00:42:34.120 --> 00:42:37.660
我们正在工作，其余的是

00:42:36.100 --> 00:42:43.050
基本上在后台运行

00:42:37.660 --> 00:42:43.050
我们工作正常，很好

00:42:44.250 --> 00:42:51.130
是的，这可能是快速入门

00:42:47.140 --> 00:42:54.849
在F Rho中，您需要那些依赖项

00:42:51.130 --> 00:42:57.759
基本上是创建Java对象

00:42:54.849 --> 00:43:01.380
在非洲模式之外，您还可以使用

00:42:57.759 --> 00:43:05.259
纯JSON或我们从

00:43:01.380 --> 00:43:06.999
问题protobuf确实是更好的方法

00:43:05.259 --> 00:43:09.729
在那里努力真的很棒

00:43:06.999 --> 00:43:14.140
因为它强制执行

00:43:09.729 --> 00:43:21.130
消费者和生产者，所以让我们

00:43:14.140 --> 00:43:23.619
显示一个实际的非洲模式

00:43:21.130 --> 00:43:26.259
这是我们的活动之一

00:43:23.619 --> 00:43:28.390
当客户删除他的一个

00:43:26.259 --> 00:43:30.940
用户界面发出警报，然后我们发送此警报

00:43:28.390 --> 00:43:33.009
从工具中警惕Kafka主题

00:43:30.940 --> 00:43:37.809
这基本上是定义

00:43:33.009 --> 00:43:39.579
这可能是有史以来最简单的

00:43:37.809 --> 00:43:41.739
我们在这里有架构，所以我们有

00:43:39.579 --> 00:43:43.930
警报的唯一标识符

00:43:41.739 --> 00:43:45.819
客户的标识符和

00:43:43.930 --> 00:43:50.680
唯一标识

00:43:45.819 --> 00:43:52.809
该Kafka箭头插件的库存

00:43:50.680 --> 00:43:54.910
基本上是为了形成，它将

00:43:52.809 --> 00:43:57.009
自动创建一个Java对象

00:43:54.910 --> 00:43:59.019
也许你昨天看了演讲

00:43:57.009 --> 00:44:01.390
所以不要看那个代码，不是

00:43:59.019 --> 00:44:06.190
真的很不错，但是效果很好

00:44:01.390 --> 00:44:15.700
很好，我们只是用它来推动

00:44:06.190 --> 00:44:19.989
关于Kafka的数据，那么您当然可以

00:44:15.700 --> 00:44:21.579
想产生一些数据

00:44:19.989 --> 00:44:24.849
正确的话题，让我们来

00:44:21.579 --> 00:44:30.130
看看我们实际上将如何生产

00:44:24.849 --> 00:44:32.829
数据肯定到Kafka 

00:44:30.130 --> 00:44:35.769
熟悉各种模板

00:44:32.829 --> 00:44:38.859
正确的JDBC模板其余模板和

00:44:35.769 --> 00:44:40.960
当然在春季模型中我们也有

00:44:38.859 --> 00:44:46.089
一个Kafka模板，可以生成

00:44:40.960 --> 00:44:48.519
话题，基本上就是你

00:44:46.089 --> 00:44:52.180
需要发送数据到一个主题，所以

00:44:48.519 --> 00:44:55.839
在这种情况下，让我们专注于

00:44:52.180 --> 00:44:57.810
领导者警惕的警戒是

00:44:55.839 --> 00:45:03.460
的

00:44:57.810 --> 00:45:07.510
我们为非洲产生了代码权利，我们

00:45:03.460 --> 00:45:10.380
基本上说模板发送了此事件

00:45:07.510 --> 00:45:14.859
某个主题，这是数据

00:45:10.380 --> 00:45:16.660
那可能就是您所需要的全部

00:45:14.859 --> 00:45:18.490
昨天的谈话他说了很久

00:45:16.660 --> 00:45:21.040
用Java创建了很多东西

00:45:18.490 --> 00:45:23.859
如今，您还可以配置

00:45:21.040 --> 00:45:26.140
真的很好地配置了所有内容

00:45:23.859 --> 00:45:28.630
您的应用程序具有很多特性或

00:45:26.140 --> 00:45:30.730
你的将军取决于你什么

00:45:28.630 --> 00:45:33.760
你喜欢，但这基本上是

00:45:30.730 --> 00:45:35.920
国会，你说这是我的卡夫卡·布罗科

00:45:33.760 --> 00:45:37.800
跑步者可以拥有一个或

00:45:35.920 --> 00:45:40.990
倍数取决于您的情况

00:45:37.800 --> 00:45:44.400
这是密钥的序列化器， 

00:45:40.990 --> 00:45:47.920
这是ephraim的序列化器

00:45:44.400 --> 00:45:50.440
然后我们指向架构注册表

00:45:47.920 --> 00:45:52.450
这是我们需要他们的东西

00:45:50.440 --> 00:45:54.190
 Marcus刚刚显示的指标

00:45:52.450 --> 00:45:56.920
这是事物的生产者方面， 

00:45:54.190 --> 00:46:00.580
是的，洒水曲线会在

00:45:56.920 --> 00:46:03.160
罩卡夫卡制片人，因为那是

00:46:00.580 --> 00:46:05.920
您基本上需要产生什么

00:46:03.160 --> 00:46:07.510
数据到另一端的主题

00:46:05.920 --> 00:46:09.730
您想使用其中的数据

00:46:07.510 --> 00:46:12.850
这个例子我们也直接消耗

00:46:09.730 --> 00:46:15.760
消费者中的数据，所以这是

00:46:12.850 --> 00:46:19.840
相反，它很漂亮

00:46:15.760 --> 00:46:26.650
是的，所以让我们来看一个

00:46:19.840 --> 00:46:29.020
真的很简单的消费者，这是一个

00:46:26.650 --> 00:46:32.190
删除警报的示例

00:46:29.020 --> 00:46:35.050
进攻你有一个卡夫卡听众， 

00:46:32.190 --> 00:46:38.410
是的，基本上可以做到这一点

00:46:35.050 --> 00:46:41.470
您甚至可以对此方法进行操作

00:46:38.410 --> 00:46:43.150
对传入数据进行验证，这样

00:46:41.470 --> 00:46:46.750
那不是春天特有的

00:46:43.150 --> 00:46:48.520
卡夫卡，但它只是利用了

00:46:46.750 --> 00:46:50.380
那春天很漂亮的好东西

00:46:48.520 --> 00:46:53.350
很好的对抗，在这种情况下，我们只是

00:46:50.380 --> 00:46:55.240
从微米调用元注册表

00:46:53.350 --> 00:46:58.660
但这是一个非常简单的例子

00:46:55.240 --> 00:47:00.310
当然可以叫耶和下游

00:46:58.660 --> 00:47:02.130
表面或您想做的任何事情

00:47:00.310 --> 00:47:05.670
但这基本上很简单

00:47:02.130 --> 00:47:05.670
生产者/消费者示例

00:47:06.240 --> 00:47:10.830
是的，我认为那就是那样

00:47:08.670 --> 00:47:12.240
我们用最后三分钟来

00:47:10.830 --> 00:47:14.760
谈论一些经验教训

00:47:12.240 --> 00:47:16.860
并分享一些缺点

00:47:14.760 --> 00:47:29.750
我们学到的是，我认为这很

00:47:16.860 --> 00:47:32.280
重要的是首先

00:47:29.750 --> 00:47:34.470
在使用春季卡夫卡之前，我们建议

00:47:32.280 --> 00:47:36.450
你基本上了解卡夫卡

00:47:34.470 --> 00:47:37.950
它背后有很多东西

00:47:36.450 --> 00:47:39.300
分布式计算有

00:47:37.950 --> 00:47:41.490
那里的复杂性你需要知道如何

00:47:39.300 --> 00:47:43.380
配置如何缩放不仅

00:47:41.490 --> 00:47:45.360
关于添加节点，您需要

00:47:43.380 --> 00:47:47.520
适当的分区，所以这是相当

00:47:45.360 --> 00:47:50.100
有趣的很重要

00:47:47.520 --> 00:47:52.740
 Avro基本上可以拯救生命

00:47:50.100 --> 00:47:54.660
 Avro在

00:47:52.740 --> 00:47:56.550
消费者中的生产者，基本上

00:47:54.660 --> 00:47:59.850
您不能推送无效的消息

00:47:56.550 --> 00:48:01.470
到该主题确实有帮助

00:47:59.850 --> 00:48:03.450
业务角度仍然可以

00:48:01.470 --> 00:48:06.630
当然无效，可以是

00:48:03.450 --> 00:48:08.970
一个错误的值，但是序列化在

00:48:06.630 --> 00:48:10.920
这个实现过程被强制执行， 

00:48:08.970 --> 00:48:12.390
这是有保证的，因为这样消息

00:48:10.920 --> 00:48:15.030
将永远不可能

00:48:12.390 --> 00:48:16.170
序列化，这很简单

00:48:15.030 --> 00:48:18.480
考虑一点很重要

00:48:16.170 --> 00:48:19.830
开始之前先分区

00:48:18.480 --> 00:48:22.500
因为如果您必须考虑是否

00:48:19.830 --> 00:48:24.000
加入您正在做的主题

00:48:22.500 --> 00:48:27.660
他们应该有相同数量的

00:48:24.000 --> 00:48:29.550
分区，如果有一些例外

00:48:27.660 --> 00:48:31.320
基本上，如果您使用全局K表

00:48:29.550 --> 00:48:33.240
之所以如此，是因为一切

00:48:31.320 --> 00:48:35.010
在客户端上运行

00:48:33.240 --> 00:48:36.840
客户端这可能会有所不同

00:48:35.010 --> 00:48:38.580
但是如果我们正在做一个正常的

00:48:36.840 --> 00:48:40.950
蛋糕桌，你想

00:48:38.580 --> 00:48:42.600
高档，那么您真的需要相同的

00:48:40.950 --> 00:48:44.880
主题之间的分区数

00:48:42.600 --> 00:48:47.130
这是重要的关键之一， 

00:48:44.880 --> 00:48:50.220
如果您想扩展我们的堡垒卡夫卡

00:48:47.130 --> 00:48:52.350
没有它可能很难做到

00:48:50.220 --> 00:48:54.630
停机时间，在我们的情况下，我们没有

00:48:52.350 --> 00:48:56.390
有这种停机时间的特权

00:48:54.630 --> 00:48:59.280
这对我们很重要

00:48:56.390 --> 00:49:00.930
监控非常重要，我们使用

00:48:59.280 --> 00:49:04.500
千分尺我们真的很满意

00:49:00.930 --> 00:49:06.990
简单易用非常非常容易

00:49:04.500 --> 00:49:09.630
将数据同步到弹性搜索，如果

00:49:06.990 --> 00:49:12.000
您拥有或将适应的原语

00:49:09.630 --> 00:49:15.990
您可以使用许多不同类型的系统

00:49:12.000 --> 00:49:18.120
需要一点关于我们真的很喜欢

00:49:15.990 --> 00:49:19.830
 Khafre客户如何落后

00:49:18.120 --> 00:49:21.770
兼容，因此无论何时何地

00:49:19.830 --> 00:49:23.970
他们提供了新版本的客户端

00:49:21.770 --> 00:49:25.920
通常你可以升级客户端

00:49:23.970 --> 00:49:27.630
不用等待经纪人和这个

00:49:25.920 --> 00:49:28.920
作为一名开发人员是一件很棒的事

00:49:27.630 --> 00:49:31.170
谁真的喜欢它，因为我们总是

00:49:28.920 --> 00:49:33.120
想要利用

00:49:31.170 --> 00:49:34.820
最新功能和手工艺一般是

00:49:33.120 --> 00:49:37.590
客户端之间向后兼容

00:49:34.820 --> 00:49:39.300
卡夫卡流滑板桌地球仪确定表

00:49:37.590 --> 00:49:41.550
我谈到的综合查询

00:49:39.300 --> 00:49:42.990
这一点与你是

00:49:41.550 --> 00:49:45.510
了解差异很重要

00:49:42.990 --> 00:49:47.280
他们之间的地球仪确定表，如果你

00:49:45.510 --> 00:49:49.230
需要很多规模可能会很棘手

00:49:47.280 --> 00:49:51.330
因为基本上是一张桌子

00:49:49.230 --> 00:49:53.160
从所有可用主题中消费

00:49:51.330 --> 00:49:56.130
对于其他的

00:49:53.160 --> 00:49:57.360
分区抱歉，并描述是真的

00:49:56.130 --> 00:50:00.290
进行流媒体播放时与您的朋友

00:49:57.360 --> 00:50:03.140
我有几秒钟让我们完成这个

00:50:00.290 --> 00:50:07.140
流卡夫卡流给你

00:50:03.140 --> 00:50:08.700
完全由配置保证

00:50:07.140 --> 00:50:09.780
如果您知道分布式的，那就太了不起了

00:50:08.700 --> 00:50:11.550
计算，你知道这是其中之一

00:50:09.780 --> 00:50:13.200
在卡夫卡最难的事情

00:50:11.550 --> 00:50:16.530
流基本上是理所当然的

00:50:13.200 --> 00:50:18.390
只是我有一个配置计划

00:50:16.530 --> 00:50:20.490
拓扑尝试使其变小

00:50:18.390 --> 00:50:22.680
一组关节的拓扑结构

00:50:20.490 --> 00:50:25.230
在主题之间做，因为我们有

00:50:22.680 --> 00:50:27.210
一个可部署单元，因此如果您愿意

00:50:25.230 --> 00:50:29.570
独立扩展很重要

00:50:27.210 --> 00:50:31.410
您预先计划此拓扑，并且

00:50:29.570 --> 00:50:33.470
是的就是这样

00:50:31.410 --> 00:50:35.710
非常感谢你在这里

00:50:33.470 --> 00:50:42.100
 [掌声] 

00:50:35.710 --> 00:50:42.100
 [音乐] 

