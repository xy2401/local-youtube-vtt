WEBVTT
Kind: captions
Language: zh-Hans

00:00:09.930 --> 00:00:16.110
大家好，谢谢您的加入

00:00:13.799 --> 00:00:18.630
在我们开始之前，我想问一个

00:00:16.110 --> 00:00:24.710
首先是几个问题，谁不在

00:00:18.630 --> 00:00:28.939
周二的主题演讲不是

00:00:24.710 --> 00:00:30.980
不好，所以很好

00:00:28.939 --> 00:00:34.370
我问的原因是这个

00:00:30.980 --> 00:00:37.090
演示文稿是关于，所以您已经看到了

00:00:34.370 --> 00:00:39.440
星期二的现场编码会议

00:00:37.090 --> 00:00:41.210
真的，我们想给你看什么

00:00:39.440 --> 00:00:44.690
春天将如何改善

00:00:41.210 --> 00:00:46.760
开发人员的经验，所以我们做什么

00:00:44.690 --> 00:00:49.870
我们尝试在每个引导版本中进行改进

00:00:46.760 --> 00:00:52.610
帮助人们提高生产力， 

00:00:49.870 --> 00:00:55.970
本次会议实际上是对

00:00:52.610 --> 00:00:58.670
因此，在本次会议中，请不要担心我们

00:00:55.970 --> 00:01:00.379
我们不会做主题演讲吗

00:00:58.670 --> 00:01:03.140
实际上是一个完整的不同应用

00:01:00.379 --> 00:01:06.830
不同的相关性也好

00:01:03.140 --> 00:01:09.380
不同的演示，但我们现在有机会

00:01:06.830 --> 00:01:11.750
有60分钟的时间可以深入了解

00:01:09.380 --> 00:01:14.960
详细解释我们无法做到的

00:01:11.750 --> 00:01:16.729
在主题演讲期间也是如此

00:01:14.960 --> 00:01:19.940
不用担心我们做的一切正确

00:01:16.729 --> 00:01:22.310
现在它是github中的存储库

00:01:19.940 --> 00:01:25.850
成立一个平台组织并获得

00:01:22.310 --> 00:01:28.700
起来，所有提交都是精心制作的

00:01:25.850 --> 00:01:31.700
爱，这一切都说明你会看到

00:01:28.700 --> 00:01:34.040
我们正在做的所有事情，您都会看到它

00:01:31.700 --> 00:01:36.710
别担心，只是坐下来享受

00:01:34.040 --> 00:01:38.720
而且不在那里问问题

00:01:36.710 --> 00:01:41.149
在演示过程中，我们有

00:01:38.720 --> 00:01:45.310
时间如此，请不要犹豫，打扰我们

00:01:41.149 --> 00:01:51.170
所以我已经在使用Spring Boot 

00:01:45.310 --> 00:01:53.119
 50％可以，所以在我们开始之前

00:01:51.170 --> 00:01:58.869
现场编码演示，我们将有很多

00:01:53.119 --> 00:01:58.869
首先滑动很无聊，就是这样

00:01:59.320 --> 00:02:06.740
好的，所以我有一个应用程序，有一个应用程序

00:02:03.649 --> 00:02:08.420
胡椒样本应用程序的代码，因此

00:02:06.740 --> 00:02:10.310
我们要做的第一件事是

00:02:08.420 --> 00:02:14.150
告诉你那个基本的应用程序

00:02:10.310 --> 00:02:16.790
这样做有一个自己的页面，您可以

00:02:14.150 --> 00:02:21.410
看到一些起床整合

00:02:16.790 --> 00:02:25.190
可以实际向CFP提交演讲

00:02:21.410 --> 00:02:27.680
所以你输入一些数据，是的

00:02:25.190 --> 00:02:32.540
然后你提交你得到的一些

00:02:27.680 --> 00:02:35.930
验证错误，然后确定摘要提交

00:02:32.540 --> 00:02:37.490
那么你已经说过了，已经提交了

00:02:35.930 --> 00:02:41.140
到系统

00:02:37.490 --> 00:02:43.520
我也可以在管理部分看到

00:02:41.140 --> 00:02:46.010
记住，因为我们会回去

00:02:43.520 --> 00:02:47.960
几次有一个管理员

00:02:46.010 --> 00:02:51.140
部分，您可以查看我是否正在尝试

00:02:47.960 --> 00:02:54.020
我需要登录才能访问，因此我

00:02:51.140 --> 00:02:55.660
现在为您提供用户密码admin 

00:02:54.020 --> 00:02:59.420
管理1 2 3 

00:02:55.660 --> 00:03:04.540
非常聪明，我将显示此页面

00:02:59.420 --> 00:03:06.950
在这里我可以看到提交的提案

00:03:04.540 --> 00:03:08.180
因为我正在使用开发工具，我们会去

00:03:06.950 --> 00:03:12.910
再过一分钟

00:03:08.180 --> 00:03:14.960
或几乎我会自动对不起

00:03:12.910 --> 00:03:17.630
抱歉，那是我的另一个

00:03:14.960 --> 00:03:20.150
自动获得这个漂亮的H2控制台

00:03:17.630 --> 00:03:23.120
功能，所以我正在使用当前表

00:03:20.150 --> 00:03:25.430
 h2，所以它是一个内存数据库

00:03:23.120 --> 00:03:28.040
每次改变

00:03:25.430 --> 00:03:30.080
应用程序启动，我们创建架构

00:03:28.040 --> 00:03:32.060
休眠自动退出方案

00:03:30.080 --> 00:03:35.120
为我们，然后我们就可以访问

00:03:32.060 --> 00:03:37.670
今天这样的数据，这是

00:03:35.120 --> 00:03:41.000
确实我们的开发环境

00:03:37.670 --> 00:03:44.360
看起来现在可能还有其他代码是的，我认为

00:03:41.000 --> 00:03:46.450
我们还需要向您展示我们

00:03:44.360 --> 00:03:49.100
从github获取一些数据， 

00:03:46.450 --> 00:03:51.350
因为github API受速率限制

00:03:49.100 --> 00:03:53.420
因此，如果您向我提出要求，而您

00:03:51.350 --> 00:03:55.520
没有任何认证，我们会得到

00:03:53.420 --> 00:03:57.830
在某个时候起床会说

00:03:55.520 --> 00:04:01.070
停止，我们将停止响应，因此

00:03:57.830 --> 00:04:03.320
我们现在有一个起床令牌

00:04:01.070 --> 00:04:05.000
一个环境变量，所以我们不是

00:04:03.320 --> 00:04:07.430
对此我们感到非常高兴，我们不会

00:04:05.000 --> 00:04:10.400
真的在我们谈话期间

00:04:07.430 --> 00:04:12.170
但只是让您知道我们没有被卡住

00:04:10.400 --> 00:04:14.930
起床，因为我们有令牌

00:04:12.170 --> 00:04:17.989
现在确保我们的要求

00:04:14.930 --> 00:04:21.020
 API，所以如果您不指定令牌

00:04:17.989 --> 00:04:24.590
当您调用github API时， 

00:04:21.020 --> 00:04:27.590
每分钟每小时60 60次调用

00:04:24.590 --> 00:04:29.990
抱歉，您无法进行费率限制

00:04:27.590 --> 00:04:32.900
每小时60次对github API的调用

00:04:29.990 --> 00:04:35.810
真的不是很多，所以我做了

00:04:32.900 --> 00:04:38.390
我所做的是我注册了

00:04:35.810 --> 00:04:40.370
应用程序令牌，然后注入

00:04:38.390 --> 00:04:42.560
作为环境变量，所以

00:04:40.370 --> 00:04:45.470
现在使用增值是不好的

00:04:42.560 --> 00:04:46.790
做到这一点，我们将修复另一件事

00:04:45.470 --> 00:04:48.530
我们在此应用程序中拥有的是

00:04:46.790 --> 00:04:49.280
基本安全配置

00:04:48.530 --> 00:04:53.180
可以看到

00:04:49.280 --> 00:04:54.910
各式各样的洋葱段你

00:04:53.180 --> 00:04:57.919
需要有洋葱卷和

00:04:54.910 --> 00:04:59.630
我们正在使用较旧的静态资源

00:04:57.919 --> 00:05:01.850
或应用程序公开，因此您不需要

00:04:59.630 --> 00:05:03.590
见识那些

00:05:01.850 --> 00:05:06.050
然后新闻页面也一样

00:05:03.590 --> 00:05:07.730
您会在春天看到最新的提交

00:05:06.050 --> 00:05:10.669
姜黄和弹簧靴，我们也

00:05:07.730 --> 00:05:12.889
公开提交页面，但我们可能

00:05:10.669 --> 00:05:15.169
现在就改变您的未来

00:05:12.889 --> 00:05:19.160
有我们的登录页面就是这样

00:05:15.169 --> 00:05:20.780
你已经看到了，是的，那是

00:05:19.160 --> 00:05:21.860
差不多，所以如果你看这个

00:05:20.780 --> 00:05:23.110
应用春季短靴

00:05:21.860 --> 00:05:26.090
应用

00:05:23.110 --> 00:05:27.560
除了安全配置真的

00:05:26.090 --> 00:05:30.080
真的不多

00:05:27.560 --> 00:05:31.790
如果您还看静态资产下降

00:05:30.080 --> 00:05:34.160
在那里，所以您拥有所有模板

00:05:31.790 --> 00:05:34.580
那是使用先生的胡子。弗莱一世

00:05:34.160 --> 00:05:36.380
知道

00:05:34.580 --> 00:05:38.180
及时的休假正在使用时间媒体

00:05:36.380 --> 00:05:40.250
这是针对模板的

00:05:38.180 --> 00:05:42.770
目录在那里，静态

00:05:40.250 --> 00:05:45.680
目录是一个常见的位置

00:05:42.770 --> 00:05:48.979
静态资产，因此每当您丢掉一个

00:05:45.680 --> 00:05:52.250
在那里归档，我们将为您服务

00:05:48.979 --> 00:05:56.210
可以非常轻松地提供CSS图像等

00:05:52.250 --> 00:05:58.010
和跳板还支持网络作业， 

00:05:56.210 --> 00:06:00.020
现在自动为我们做

00:05:58.010 --> 00:06:01.820
我们将尝试使

00:06:00.020 --> 00:06:05.840
应用好一点

00:06:01.820 --> 00:06:08.570
由于我们拥有开发工具

00:06:05.840 --> 00:06:11.510
整个体验要容易得多

00:06:08.570 --> 00:06:13.460
然后您会看到我们第一件事

00:06:11.510 --> 00:06:15.110
需要做的是启用实时重载

00:06:13.460 --> 00:06:17.000
那是我在

00:06:15.110 --> 00:06:19.190
主题演讲，所以也许有一些关于

00:06:17.000 --> 00:06:21.590
这样一来，实时重新加载实时根服务器

00:06:19.190 --> 00:06:26.510
和客户，我们实际上并没有这样做

00:06:21.590 --> 00:06:28.250
这是一家第三方公司

00:06:26.510 --> 00:06:29.960
产品，但是关于它的好处是

00:06:28.250 --> 00:06:32.800
服务器与

00:06:29.960 --> 00:06:36.440
客户端是开源的，客户端

00:06:32.800 --> 00:06:40.310
他们提供的浏览器插件

00:06:36.440 --> 00:06:42.530
因此适用于Firefox 5的Chrome 5 

00:06:40.310 --> 00:06:44.479
资源管理器等什么都可以安装

00:06:42.530 --> 00:06:47.930
您在浏览器中免费获得的

00:06:44.479 --> 00:06:50.770
使用我们已经完成的工作

00:06:47.930 --> 00:06:53.360
一个非常非常基本的革命服务器

00:06:50.770 --> 00:06:56.539
因此，当您使用开发工具启动应用程序时

00:06:53.360 --> 00:06:58.250
它也会触发实时重载

00:06:56.539 --> 00:07:00.840
服务器，这就是为什么我是

00:06:58.250 --> 00:07:04.889
能够承诺对不起

00:07:00.840 --> 00:07:07.020
到应用程序以便库

00:07:04.889 --> 00:07:09.630
警报服务器实际上距离四个

00:07:07.020 --> 00:07:11.280
开发工具是开发的第一步

00:07:09.630 --> 00:07:14.160
工具，这实际上是开发工具的一种方式

00:07:11.280 --> 00:07:16.830
向您的浏览器或您的设备发送信号

00:07:14.160 --> 00:07:18.720
每当有变化时在这里插件

00:07:16.830 --> 00:07:19.979
在您的应用程序中，这样您就不会

00:07:18.720 --> 00:07:21.780
必须在您的应用程序中进行更改

00:07:19.979 --> 00:07:23.760
然后回到浏览器，然后

00:07:21.780 --> 00:07:26.310
用实时重载信号刷新

00:07:23.760 --> 00:07:28.530
每当改变浏览器

00:07:26.310 --> 00:07:31.560
意识到这一点，并且正在重新加载

00:07:28.530 --> 00:07:33.570
该页面一旦发生，那就是

00:07:31.560 --> 00:07:35.700
一件事，你不必做

00:07:33.570 --> 00:07:37.800
在开发过程中

00:07:35.700 --> 00:07:41.729
时刻刷新，让您明白

00:07:37.800 --> 00:07:43.500
信号，但弹簧靴如何猜测

00:07:41.729 --> 00:07:45.690
何时同步该信号，我们将看到

00:07:43.500 --> 00:07:48.270
关于说，当我们做

00:07:45.690 --> 00:07:51.389
更改进入应用程序，以便

00:07:48.270 --> 00:07:53.430
这个应用程式的第一件事是我们缺乏

00:07:51.389 --> 00:07:56.160
灵感有些质感

00:07:53.430 --> 00:07:58.729
可能应该改变，所以让我们有

00:07:56.160 --> 00:08:01.530
某种非常好的口号你知道

00:07:58.729 --> 00:08:03.479
分享你的病人非常好，所以

00:08:01.530 --> 00:08:04.770
重新编译应用程序正在执行

00:08:03.479 --> 00:08:06.419
 spring boot 上的东西，然后

00:08:04.770 --> 00:08:08.789
发送信号并刷新您的

00:08:06.419 --> 00:08:11.160
浏览器，因此首先

00:08:08.789 --> 00:08:14.070
对于Pradesh Tools开发人员而言，这一步很好

00:08:11.160 --> 00:08:15.720
工具正在自动配置

00:08:14.070 --> 00:08:17.490
您的应用程序的默认值

00:08:15.720 --> 00:08:20.820
开发模式，例如这里

00:08:17.490 --> 00:08:22.650
这是一个配置时间，不是

00:08:20.820 --> 00:08:24.570
在开发中缓存模板

00:08:22.650 --> 00:08:26.430
否则，您将不得不重新启动

00:08:24.570 --> 00:08:28.590
应用程序，因为

00:08:26.430 --> 00:08:31.740
模板是在缓存中编译的，因此这里

00:08:28.590 --> 00:08:34.529
他们不是，所以你可以刷新

00:08:31.740 --> 00:08:35.969
应用程序，您会看到更改

00:08:34.529 --> 00:08:38.880
在您的页面上，对于

00:08:35.969 --> 00:08:42.120
静态资源默认为开发工具

00:08:38.880 --> 00:08:43.890
会告诉您的浏览器

00:08:42.120 --> 00:08:45.839
不应该缓存那些资源，因为

00:08:43.890 --> 00:08:48.540
你可能会改变很多

00:08:45.839 --> 00:08:51.150
在开发过程中，所以不是

00:08:48.540 --> 00:08:53.910
本身很小，因为我的意思是如果你

00:08:51.150 --> 00:08:56.010
更改静态资产，然后禁用

00:08:53.910 --> 00:08:57.870
缓存，你可以自己做

00:08:56.010 --> 00:09:00.240
意思是你有一些代码，你有一些

00:08:57.870 --> 00:09:02.880
配置写，但不是

00:09:00.240 --> 00:09:04.680
真的超级聪明吧，因为你

00:09:02.880 --> 00:09:06.630
更改了一些文件，您禁用了缓存

00:09:04.680 --> 00:09:08.910
因此，如果您再次点击该页面，因为

00:09:06.630 --> 00:09:10.050
像模板一样缓存

00:09:08.910 --> 00:09:12.119
再读一次

00:09:10.050 --> 00:09:14.550
你会得到反映

00:09:12.119 --> 00:09:16.769
自动但devtool做更多

00:09:14.550 --> 00:09:19.889
我们可以在这里看到一条轨道

00:09:16.769 --> 00:09:21.569
我们的CFP缺少，有一个代码

00:09:19.889 --> 00:09:24.119
在这里代表曲目，所以我

00:09:21.569 --> 00:09:26.970
要添加一个，我们要添加

00:09:24.119 --> 00:09:31.799
网络跟踪，所以我要更改Java代码

00:09:26.970 --> 00:09:35.009
基本上，如果我这样做，我有

00:09:31.799 --> 00:09:38.579
网络跟踪没有那里发生了什么

00:09:35.009 --> 00:09:41.160
这是开发工具还添加了一个

00:09:38.579 --> 00:09:43.290
您应用程序上的文件监视程序

00:09:41.160 --> 00:09:45.720
每当有文件

00:09:43.290 --> 00:09:48.989
由您在您的应用程序中修改，因此

00:09:45.720 --> 00:09:51.509
看到的静态资源或类

00:09:48.989 --> 00:09:53.970
做任何必要的事情

00:09:51.509 --> 00:09:55.799
一个正在重新编译的类，我的意思是你

00:09:53.970 --> 00:10:00.149
重新编译项目，以便重新启动

00:09:55.799 --> 00:10:02.339
引导应用程序只是春天

00:10:00.149 --> 00:10:04.290
实际情况并刷新您的

00:10:02.339 --> 00:10:07.139
浏览器有信号，所以这里的窍门

00:10:04.290 --> 00:10:09.600
那是 spring boot 在开发中吗

00:10:07.139 --> 00:10:12.029
开发人员工具的春天模式正在使用

00:10:09.600 --> 00:10:14.369
两个开发工具正在使用两个不同的

00:10:12.029 --> 00:10:16.829
一流的装载机

00:10:14.369 --> 00:10:19.170
依赖项，因此您添加的所有内容

00:10:16.829 --> 00:10:22.110
在您的池塘XML或您构建的Gradle中

00:10:19.170 --> 00:10:24.389
那些变化不大

00:10:22.110 --> 00:10:27.119
你所学的其他一切

00:10:24.389 --> 00:10:28.470
资源和您的代码

00:10:27.119 --> 00:10:30.629
不同的类加载器，因此无论何时

00:10:28.470 --> 00:10:33.629
当你和你在一起时，会发生一些事情

00:10:30.629 --> 00:10:36.990
例如代码引导检测到

00:10:33.629 --> 00:10:39.119
扔掉那个类加载器创建一个

00:10:36.990 --> 00:10:41.660
新的并重新启动spring上下文

00:10:39.119 --> 00:10:44.429
这实际上非常快，因为

00:10:41.660 --> 00:10:47.819
当您启动应用程序时

00:10:44.429 --> 00:10:49.470
 JVM预热并加载所有

00:10:47.819 --> 00:10:52.049
来自您的依赖项的类

00:10:49.470 --> 00:10:53.429
需要很多时间然后重新启动

00:10:52.049 --> 00:10:55.740
春天的背景实际上很漂亮

00:10:53.429 --> 00:10:56.970
快速，所以在那个例子中

00:10:55.740 --> 00:11:01.019
正是我们在做什么的时候

00:10:56.970 --> 00:11:02.970
如此更改代码，您已经看到了

00:11:01.019 --> 00:11:06.269
两个dev工具的两个主要用例

00:11:02.970 --> 00:11:07.769
真的是第一个，我们已经

00:11:06.269 --> 00:11:10.079
改变了不需要的东西

00:11:07.769 --> 00:11:11.610
上下文重新启动，您不需要

00:11:10.079 --> 00:11:14.610
如果您更改了上下文，则还原上下文

00:11:11.610 --> 00:11:16.199
模板权利以及您的情况

00:11:14.610 --> 00:11:18.990
更改一些代码，所以显然我们不会

00:11:16.199 --> 00:11:20.339
知道更改代码的影响，因此

00:11:18.990 --> 00:11:22.769
我们

00:11:20.339 --> 00:11:24.240
删除班级顺序，我们创建一个新的

00:11:22.769 --> 00:11:26.850
并重新启动应用程序，您可以

00:11:24.240 --> 00:11:30.839
教带来东西的引导

00:11:26.850 --> 00:11:32.250
如果您的位置不是Java 

00:11:30.839 --> 00:11:34.290
代码显然可以，但是

00:11:32.250 --> 00:11:36.750
可能很讨厌，但如果您有

00:11:34.290 --> 00:11:38.790
在您的应用资源中

00:11:36.750 --> 00:11:41.069
要求重新启动应用程序

00:11:38.790 --> 00:11:45.000
或者另一方面，你有一些

00:11:41.069 --> 00:11:47.100
当您更改一些特定区域

00:11:45.000 --> 00:11:48.750
例如配置文件，它需要

00:11:47.100 --> 00:11:51.209
重新启动应用程序，您可以教

00:11:48.750 --> 00:11:53.819
开发工具来真正改变那些

00:11:51.209 --> 00:11:57.089
您还可以教开发人员工具

00:11:53.819 --> 00:11:59.040
监视项目外部的文件，以便

00:11:57.089 --> 00:12:01.319
例如，如果您有客户端

00:11:59.040 --> 00:12:03.930
使用角度或其他方式的应用程序

00:12:01.319 --> 00:12:05.850
而您的服务静态

00:12:03.930 --> 00:12:07.769
来自外部模块的资源

00:12:05.850 --> 00:12:10.170
可以告诉开发人员去观看

00:12:07.769 --> 00:12:12.449
这些文件，以及每当您更改代码时

00:12:10.170 --> 00:12:14.370
您的客户端的浏览器将刷新

00:12:12.449 --> 00:12:16.980
如果以下所有应用程序可能会重新启动

00:12:14.370 --> 00:12:19.670
这就是您想要的，但是开发工具具有

00:12:16.980 --> 00:12:22.620
自从三分之一以来一直在那里

00:12:19.670 --> 00:12:25.550
现在我们将向您展示新的

00:12:22.620 --> 00:12:29.160
开发工具的功能及其工作方式

00:12:25.550 --> 00:12:31.290
对，所以我们有一个小问题

00:12:29.160 --> 00:12:33.060
再次是同一件事，所以我要去

00:12:31.290 --> 00:12:34.740
快速地做到这一点，您已经看到了

00:12:33.060 --> 00:12:37.380
在主题演讲中我没有错误

00:12:34.740 --> 00:12:40.350
的页面，所以我将只

00:12:37.380 --> 00:12:43.139
创建一个，这是另一个用例

00:12:40.350 --> 00:12:46.769
开发工具是您向其中添加新内容

00:12:43.139 --> 00:12:48.839
您的应用程序，因为您确实会检测到

00:12:46.769 --> 00:12:51.480
但是这次您要创建一个

00:12:48.839 --> 00:12:53.579
进入模板模板文件夹

00:12:51.480 --> 00:12:55.740
在主题演讲中，这是一个静态文件

00:12:53.579 --> 00:12:58.560
在静态中，这实际上是一个

00:12:55.740 --> 00:13:00.569
真正的最终模板，所以我们将看到

00:12:58.560 --> 00:13:04.380
以后我们如何从事实中受益

00:13:00.569 --> 00:13:07.230
这是一个模板，所以这个应用程序有一个

00:13:04.380 --> 00:13:11.819
主要问题及其主要问题

00:13:07.230 --> 00:13:14.009
任何人都可以实际提交一两个

00:13:11.819 --> 00:13:17.220
你可以说你可以提供任何

00:13:14.009 --> 00:13:19.380
您想要在那里的信息，如果您

00:13:17.220 --> 00:13:21.350
提交一些您必须重复的演讲

00:13:19.380 --> 00:13:24.420
您的信息一遍又一遍

00:13:21.350 --> 00:13:27.180
这是正确的，所以我们认为也许

00:13:24.420 --> 00:13:29.200
我们应该找到一种方法来添加某种

00:13:27.180 --> 00:13:31.060
验证此应用

00:13:29.200 --> 00:13:33.310
如果你想这样做，通常

00:13:31.060 --> 00:13:35.079
需要创建我的意思是，你必须

00:13:33.310 --> 00:13:37.360
您必须创建一个计算机安全

00:13:35.079 --> 00:13:40.959
我必须注册的数据库

00:13:37.360 --> 00:13:42.790
您的用户，就像我忘记了密码

00:13:40.959 --> 00:13:45.360
表格等你必须做的所有

00:13:42.790 --> 00:13:48.220
你可以依靠第三方

00:13:45.360 --> 00:13:50.980
申请或服务到非洲

00:13:48.220 --> 00:13:54.519
应用程序实际上是

00:13:50.980 --> 00:13:56.889
真的很好是这样

00:13:54.519 --> 00:13:58.690
授权，但如果您在

00:13:56.889 --> 00:14:00.880
您也可以将其用作另一种方式

00:13:58.690 --> 00:14:03.670
单一登录服务，就是这样

00:14:00.880 --> 00:14:06.339
我们实际上现在正在做，所以

00:14:03.670 --> 00:14:09.370
下一个演示即将启用单

00:14:06.339 --> 00:14:12.160
使用OAuth登录，我们需要找到一个

00:14:09.370 --> 00:14:14.730
提供者，而且因为它是一个

00:14:12.160 --> 00:14:17.230
会议可能与代码有关

00:14:14.730 --> 00:14:18.940
 github可能是个不错的选择

00:14:17.230 --> 00:14:21.519
您可能已经有一个github 

00:14:18.940 --> 00:14:24.910
帐户，因此这是一项新功能

00:14:21.519 --> 00:14:28.540
为您服务，您将看到如何

00:14:24.910 --> 00:14:32.050
电脑向供应商致敬

00:14:28.540 --> 00:14:34.060
在您的构建应用程序中登录，以便

00:14:32.050 --> 00:14:37.630
实际上，您实际上需要一个新的

00:14:34.060 --> 00:14:44.800
依赖，您将需要在这里安全或

00:14:37.630 --> 00:14:49.360
然后两个作为我要启用操作系统

00:14:44.800 --> 00:14:52.350
如果我这样做，那么两者都可以单点登录

00:14:49.360 --> 00:14:54.820
基本上告诉弹簧靴

00:14:52.350 --> 00:14:57.839
而不是代替

00:14:54.820 --> 00:15:02.260
传统的登录表单只需创建一个

00:14:57.839 --> 00:15:04.630
为我登录注销拦截器

00:15:02.260 --> 00:15:07.060
因为我这样做我实际上不

00:15:04.630 --> 00:15:10.930
需要配方帮派了

00:15:07.060 --> 00:15:12.970
走开，非常重要，现在我们要

00:15:10.930 --> 00:15:16.630
确保您每次访问

00:15:12.970 --> 00:15:18.970
提交您必须登录正确，所以

00:15:16.630 --> 00:15:20.800
目前提交的是允许所有，如果我

00:15:18.970 --> 00:15:22.720
删除，我将转到下一条规则

00:15:20.800 --> 00:15:24.430
这意味着好吧，您需要

00:15:22.720 --> 00:15:29.410
参加巡回演出，所以现在我们需要

00:15:24.430 --> 00:15:31.360
更改我们的应用程序，以便我们

00:15:29.410 --> 00:15:33.850
实际要求起床

00:15:31.360 --> 00:15:34.780
您的权利和凭证

00:15:33.850 --> 00:15:36.040
信息

00:15:34.780 --> 00:15:37.630
但是，如果您曾经使用过oauth2 

00:15:36.040 --> 00:15:40.690
你知道你需要某种

00:15:37.630 --> 00:15:43.810
关于其他信息

00:15:40.690 --> 00:15:46.570
向供应商那样的Elan宣传

00:15:43.810 --> 00:15:49.150
应该穿你的认证客户应该谁

00:15:46.570 --> 00:15:51.130
您应该与服务器对话

00:15:49.150 --> 00:15:52.960
这就是我们的配置

00:15:51.130 --> 00:15:55.930
在此处添加访问令牌

00:15:52.960 --> 00:15:59.530
端点等，所以这是读

00:15:55.930 --> 00:16:01.990
您需要教的完整属性

00:15:59.530 --> 00:16:04.750
你要去的 spring boot 

00:16:01.990 --> 00:16:07.390
正确需要联系才能做到这一点

00:16:04.750 --> 00:16:09.580
识别过程中，您会发现这些

00:16:07.390 --> 00:16:13.030
四个属性，无论O是什么

00:16:09.580 --> 00:16:14.680
您要使用的提供程序

00:16:13.030 --> 00:16:16.840
例如Twitter或Google或

00:16:14.680 --> 00:16:18.280
任何宣誓资源提供者

00:16:16.840 --> 00:16:22.030
唯一会发生的事情

00:16:18.280 --> 00:16:24.310
要更改的是那些URI，如果继续

00:16:22.030 --> 00:16:26.200
开发人员区域，例如

00:16:24.310 --> 00:16:28.420
 Twitter开发人员网络

00:16:26.200 --> 00:16:31.090
轻松找到您必须使用的UI 

00:16:28.420 --> 00:16:36.190
实际上我们几乎就在那里

00:16:31.090 --> 00:16:39.310
现在需要我们的客户ID并秘密

00:16:36.190 --> 00:16:41.290
客户秘密，所以我真的是怎么回事

00:16:39.310 --> 00:16:44.560
发生的是你将要

00:16:41.290 --> 00:16:46.630
重定向到github并起床会说

00:16:44.560 --> 00:16:49.839
有这个程序想知道

00:16:46.630 --> 00:16:52.570
关于你，你同意吗，如果你说

00:16:49.839 --> 00:16:55.870
是的，那么你给我们权利

00:16:52.570 --> 00:16:57.370
看到你的一切，我们保证

00:16:55.870 --> 00:16:59.760
基本上有一个确定的

00:16:57.370 --> 00:17:02.740
变化，因此数据基本上可以将我们带回

00:16:59.760 --> 00:17:04.839
有关您的一些信息并获得

00:17:02.740 --> 00:17:06.610
我们需要的客户ID和客户机密

00:17:04.839 --> 00:17:09.970
用github注册我们的应用程序

00:17:06.610 --> 00:17:13.480
这就是我们要做的

00:17:09.970 --> 00:17:15.130
抵制春季俄勒冈州的一个平台

00:17:13.480 --> 00:17:17.530
站起来就是实际的代码

00:17:15.130 --> 00:17:19.959
实际上住在CFP中-示例

00:17:17.530 --> 00:17:21.730
应用程序是您正确的存储库

00:17:19.959 --> 00:17:23.890
需要成为该组织的管理员才能

00:17:21.730 --> 00:17:26.170
看到这个，如果你有一个github帐号

00:17:23.890 --> 00:17:28.000
只需转到您自己的存储库

00:17:26.170 --> 00:17:30.280
与您一起使用的存储库用户名

00:17:28.000 --> 00:17:33.460
您会在其iOS的此设置页面中找到

00:17:30.280 --> 00:17:36.020
应用程序，然后您只需注册一个

00:17:33.460 --> 00:17:38.900
如果您将PA称为C 

00:17:36.020 --> 00:17:41.450
例如页面上的东西

00:17:38.900 --> 00:17:43.340
基本上DTaP会打电话给您

00:17:41.450 --> 00:17:45.560
当您登录Spring Boot时

00:17:43.340 --> 00:17:47.270
具有四个属性的应用程序

00:17:45.560 --> 00:17:48.860
它将使用第一个URI进行联系

00:17:47.270 --> 00:17:49.760
数据，但可以，我需要交换

00:17:48.860 --> 00:17:52.820
和那个家伙

00:17:49.760 --> 00:17:54.530
那个人，一旦认证

00:17:52.820 --> 00:17:57.230
过程已经完成，我们基本上

00:17:54.530 --> 00:17:58.850
直接指向欧元区

00:17:57.230 --> 00:18:00.350
在那里有人说，因为我

00:17:58.850 --> 00:18:02.740
将向您显示客户ID和

00:18:00.350 --> 00:18:05.120
我不应该的客户机密

00:18:02.740 --> 00:18:08.690
我要说的是它被重定向到

00:18:05.120 --> 00:18:12.620
这个虽然没有多少你可以

00:18:08.690 --> 00:18:14.270
做到这一点，所以你需要

00:18:12.620 --> 00:18:16.330
提供有关

00:18:14.270 --> 00:18:20.630
应用程序，使人们真正知道

00:18:16.330 --> 00:18:22.310
为什么他们应该说好的，一旦我

00:18:20.630 --> 00:18:25.460
完成我的客户端ID发生在

00:18:22.310 --> 00:18:28.370
秘密，所以我可以回到这里

00:18:25.460 --> 00:18:34.160
我的安全用户现在实际上已经没用了

00:18:28.370 --> 00:18:38.330
并使用客户端ID代替

00:18:34.160 --> 00:18:40.130
最后一步真的和客户的秘密如此

00:18:38.330 --> 00:18:43.010
我们添加了一个依赖项

00:18:40.130 --> 00:18:43.460
注释我们的一些配置

00:18:43.010 --> 00:18:46.190
档案

00:18:43.460 --> 00:18:51.320
我们已经发布了安全配置，现在

00:18:46.190 --> 00:18:53.930
我们现在看看是否一切正常

00:18:51.320 --> 00:18:58.520
当我们访问受保护的页面时，我们

00:18:53.930 --> 00:19:01.100
应该看到OAuth身份验证页面

00:18:58.520 --> 00:19:02.930
从github上，所以我仍然可以访问

00:19:01.100 --> 00:19:04.340
自己的页面，因为没有什么

00:19:02.930 --> 00:19:08.360
阻止我现在这样做

00:19:04.340 --> 00:19:11.120
但是如果单击立即提交，我会继续

00:19:08.360 --> 00:19:13.820
 github起来告诉我有

00:19:11.120 --> 00:19:15.620
想要访问您的CFG示例

00:19:13.820 --> 00:19:17.720
他想读取公共数据的帐户

00:19:15.620 --> 00:19:20.090
只是这样你也可以

00:19:17.720 --> 00:19:22.850
更改您还可以指定范围

00:19:20.090 --> 00:19:26.060
可以说我希望能够访问

00:19:22.850 --> 00:19:27.530
用户个人资料的一部分，以及

00:19:26.060 --> 00:19:29.660
将显示那将是

00:19:27.530 --> 00:19:31.520
显示锁定在那里，但右边

00:19:29.660 --> 00:19:34.520
现在我需要的是你的名字

00:19:31.520 --> 00:19:36.560
这就是我为我所需要的

00:19:34.520 --> 00:19:40.130
我本可以说我想访问您的

00:19:36.560 --> 00:19:41.730
即使您没有也可以发送电子邮件

00:19:40.130 --> 00:19:43.050
您拥有的公开电子邮件

00:19:41.730 --> 00:19:44.970
主要是新会计师，它不可见

00:19:43.050 --> 00:19:46.800
给用户，那么有一个特殊的

00:19:44.970 --> 00:19:49.190
 github中的范围实际上可以访问

00:19:46.800 --> 00:19:49.190
那个

00:19:58.970 --> 00:20:04.980
所以问题是你要做什么

00:20:01.890 --> 00:20:09.480
添加为实际依赖项

00:20:04.980 --> 00:20:11.580
东西起作用，他回答了这一部分

00:20:09.480 --> 00:20:16.560
支持的是弹簧安全性

00:20:11.580 --> 00:20:20.100
或关闭，部分启用之后

00:20:16.560 --> 00:20:21.540
 SSO本身在弹簧靴中，因此

00:20:20.100 --> 00:20:23.520
您配置的标准协议

00:20:21.540 --> 00:20:25.650
对，所以没有弹簧安全性或

00:20:23.520 --> 00:20:27.930
 Boogle春季安全性或其他

00:20:25.650 --> 00:20:30.690
 Twitter没有这样的事情，因为

00:20:27.930 --> 00:20:32.190
这只是OAuth协议， 

00:20:30.690 --> 00:20:35.970
您只是在配置哪个服务

00:20:32.190 --> 00:20:38.970
需要正确联系，所以我要去

00:20:35.970 --> 00:20:40.860
说好吧，我会自动

00:20:38.970 --> 00:20:45.470
重定向到那个，你可以看到正确的

00:20:40.860 --> 00:20:45.470
那里实际上我现在已经登录好了

00:20:46.610 --> 00:20:53.700
有一个问题，尽管我仍然

00:20:49.230 --> 00:20:58.770
在名称字段中有电子邮件

00:20:53.700 --> 00:21:03.690
我们将很快删除它，但是

00:20:58.770 --> 00:21:05.370
我们现在遇到的一个问题是

00:21:03.690 --> 00:21:09.090
不允许进入管理页面

00:21:05.370 --> 00:21:11.940
因为在我们之前

00:21:09.090 --> 00:21:13.500
当我们有以前的安全性时的管理员

00:21:11.940 --> 00:21:18.180
配置，现在我们需要做

00:21:13.500 --> 00:21:20.490
真正决定谁可以的东西

00:21:18.180 --> 00:21:23.010
成为可以拥有该管理员的管理员用户

00:21:20.490 --> 00:21:25.260
在我们的应用程序中扮演的角色

00:21:23.010 --> 00:21:27.540
之前是在打春季安全赛，所以

00:21:25.260 --> 00:21:30.720
引导提供的默认设置，以及

00:21:27.540 --> 00:21:32.840
您在安全用户名admin中看到

00:21:30.720 --> 00:21:37.350
安全密码管理员一二三

00:21:32.840 --> 00:21:41.220
默认情况下，它位于扩展坞中

00:21:37.350 --> 00:21:42.720
我们将创建一个角色为admin的用户，以便

00:21:41.220 --> 00:21:46.650
这就是我们最初得到的

00:21:42.720 --> 00:21:49.440
现在开始，我们没有规则， 

00:21:46.650 --> 00:21:52.440
只是普通我只是普通用户

00:21:49.440 --> 00:21:54.090
像谢谢你，所以没有什么

00:21:52.440 --> 00:21:55.710
告诉我我实际上是管理员

00:21:54.090 --> 00:21:57.180
系统，因此我们将对其进行更改

00:21:55.710 --> 00:21:59.160
每当有人有趣的时候

00:21:57.180 --> 00:22:02.390
针对我们的应用程序，我们需要挂钩

00:21:59.160 --> 00:22:04.900
进入这一点并提取权威

00:22:02.390 --> 00:22:07.120
从那些人知道

00:22:04.900 --> 00:22:09.370
他们被允许担任那个角色，或者

00:22:07.120 --> 00:22:12.280
这个角色，这就是我们需要做的

00:22:09.370 --> 00:22:14.550
现在，所以首先我们可以决定谁可以

00:22:12.280 --> 00:22:18.520
成为管理员，现在我们将做

00:22:14.550 --> 00:22:21.730
仅与我们获取的列表静态关联

00:22:18.520 --> 00:22:24.900
手柄，我们可以添加一些东西

00:22:21.730 --> 00:22:29.320
我们的安全配置说

00:22:24.900 --> 00:22:32.020
获取用户的登录部分

00:22:29.320 --> 00:22:35.890
我们从起床检查中获取的信息

00:22:32.020 --> 00:22:39.190
如果该用户名在我们的特殊列表中

00:22:35.890 --> 00:22:41.650
如果是，那么我们要添加

00:22:39.190 --> 00:22:43.750
该人的管理员角色，这是

00:22:41.650 --> 00:22:45.910
我们实际上所做的是

00:22:43.750 --> 00:22:48.790
回调基本上是OAuth 

00:22:45.910 --> 00:22:52.000
您选择的提供者将

00:22:48.790 --> 00:22:55.120
给我们发一些信息

00:22:52.000 --> 00:23:00.340
在以下情况下的非结构化信息

00:22:55.120 --> 00:23:02.860
 github上有一个登录键

00:23:00.340 --> 00:23:07.030
实际上，您将获得github帐户

00:23:02.860 --> 00:23:10.300
 ID，因此我们将使用它来查看

00:23:07.030 --> 00:23:14.850
包含在该列表中，如果

00:23:10.300 --> 00:23:19.680
在这种情况下，我们更改用户权限

00:23:14.850 --> 00:23:19.680
如果我这样做，我将再次成为管理员

00:23:21.330 --> 00:23:28.389
好的，但这是我的意思

00:23:24.970 --> 00:23:29.980
在静态列表中，有点像不是

00:23:28.389 --> 00:23:33.009
我们的应用程序很棒

00:23:29.980 --> 00:23:34.899
肯定会改善，所以我们没有

00:23:33.009 --> 00:23:38.769
我们现在想告诉你的是你如何

00:23:34.899 --> 00:23:41.470
可以使用印刷棚来曝光

00:23:38.769 --> 00:23:43.749
应用的配置属性

00:23:41.470 --> 00:23:45.610
您已经在主题演讲中看到了

00:23:43.749 --> 00:23:48.610
已经是某种基础设施

00:23:45.610 --> 00:23:50.169
设置和这个不错的内容帮助

00:23:48.610 --> 00:23:53.259
等等等等，所以你可能

00:23:50.169 --> 00:23:55.509
现在想知道包括什么

00:23:53.259 --> 00:23:58.179
从头开始在您的应用中

00:23:55.509 --> 00:23:59.499
我们将向您展示的内容

00:23:58.179 --> 00:24:02.110
您真正要做的第一件事

00:23:59.499 --> 00:24:05.289
是要代表那些

00:24:02.110 --> 00:24:06.970
键作为对象结构，所以我

00:24:05.289 --> 00:24:12.730
现在就为您创建

00:24:06.970 --> 00:24:15.399
只要看起来像

00:24:12.730 --> 00:24:17.499
 Java bin，并且已正确记录

00:24:15.399 --> 00:24:20.320
就像这样，你很好

00:24:17.499 --> 00:24:22.659
你甚至可以嵌套几个内部

00:24:20.320 --> 00:24:26.350
类来构造您的名称空间

00:24:22.659 --> 00:24:28.509
那很好，所以关键

00:24:26.350 --> 00:24:30.279
这是如果您想嵌套

00:24:28.509 --> 00:24:32.200
命名空间，所以你可以有单独的

00:24:30.279 --> 00:24:35.169
课程，当然，但如果您想

00:24:32.200 --> 00:24:38.590
收集某个概念并有一些

00:24:35.169 --> 00:24:43.779
一种嵌套的键，所以食物点了点东西

00:24:38.590 --> 00:24:46.330
点一些键来创建一个POJO 

00:24:43.779 --> 00:24:48.220
现在在POJO URL中，您可以看到

00:24:46.330 --> 00:24:50.860
这是这个定义器静态

00:24:48.220 --> 00:24:53.350
您的课程完成的原因

00:24:50.860 --> 00:24:55.149
那是因为元数据将是

00:24:53.350 --> 00:24:57.039
自动接我给你看

00:24:55.149 --> 00:24:59.830
一分钟内，那件事

00:24:57.039 --> 00:25:02.110
重要的是财产的名称，所以

00:24:59.830 --> 00:25:04.470
如果您有债务获取者财产

00:25:02.110 --> 00:25:07.090
意味着您将获得一个get应用程序名称空间

00:25:04.470 --> 00:25:09.389
安全命名空间在这种情况下是的， 

00:25:07.090 --> 00:25:12.009
我们需要一种对实际名称空间进行命名的方法

00:25:09.389 --> 00:25:13.629
这些键，为此，我们

00:25:12.009 --> 00:25:16.960
需要添加配置属性

00:25:13.629 --> 00:25:19.480
注解，我们说我们

00:25:16.960 --> 00:25:23.259
想要命名整个类的名称

00:25:19.480 --> 00:25:25.659
 CFP，所以我们将获得CF p点github等

00:25:23.259 --> 00:25:26.669
基本上是这样

00:25:25.659 --> 00:25:30.869
适当地

00:25:26.669 --> 00:25:35.220
 geez现在cfp获取令牌和CF p 

00:25:30.869 --> 00:25:38.909
点安全管理员可以，所以我想要

00:25:35.220 --> 00:25:40.859
使用这个，这是唯一的

00:25:38.909 --> 00:25:44.009
此类的目的是为了

00:25:40.859 --> 00:25:45.960
绑定环境，绑定一些

00:25:44.009 --> 00:25:50.399
来自环境的配置密钥

00:25:45.960 --> 00:25:51.929
上课，所以你实际上可以注入

00:25:50.399 --> 00:25:54.929
春天几乎没有

00:25:51.929 --> 00:25:57.720
所以我要告诉你，让我们看看

00:25:54.929 --> 00:26:01.200
我可以去那里说我想要

00:25:57.720 --> 00:26:03.499
注入安全性能，我可以

00:26:01.200 --> 00:26:06.869
说财产还没有

00:26:03.499 --> 00:26:12.269
安全获取管理员并将其删除

00:26:06.869 --> 00:26:14.129
事情，但IntelliJ抱怨这里告诉

00:26:12.269 --> 00:26:17.269
我不是我不知道的豆子

00:26:14.129 --> 00:26:21.869
这些东西，实际上是非常正确的

00:26:17.269 --> 00:26:23.609
如果你看这里不是金属的

00:26:21.869 --> 00:26:25.609
亚洲这不是一个组成部分，不是

00:26:23.609 --> 00:26:28.470
将由组件扫描

00:26:25.609 --> 00:26:32.639
我们这样做是有目的的，因为我们

00:26:28.470 --> 00:26:34.769
希望您确保该对象

00:26:32.639 --> 00:26:36.989
不像一个复杂的对象

00:26:34.769 --> 00:26:39.299
与豆依赖与复杂

00:26:36.989 --> 00:26:41.820
业务逻辑的唯一目的

00:26:39.299 --> 00:26:44.070
事情是要绑定到环境， 

00:26:41.820 --> 00:26:47.970
提供附加价值

00:26:44.070 --> 00:26:52.019
这样才能真正做到

00:26:47.970 --> 00:26:53.850
很清楚，我要去找你

00:26:52.019 --> 00:26:55.649
如果需要，显然添加添加组件

00:26:53.850 --> 00:26:57.720
如果那是您想要的，您可以这样做

00:26:55.649 --> 00:27:00.570
它会工作，但我只是要

00:26:57.720 --> 00:27:04.080
向您展示另一种方法，我要去

00:27:00.570 --> 00:27:07.470
说请处理该课，如果

00:27:04.080 --> 00:27:11.340
我这样做，回去我有一个豆

00:27:07.470 --> 00:27:12.900
现在我们要做的另一件事

00:27:11.340 --> 00:27:16.350
我们想要

00:27:12.900 --> 00:27:20.520
删除该废话，并使用我们的CSV 

00:27:16.350 --> 00:27:22.440
属性，所以让我们这样做

00:27:20.520 --> 00:27:25.470
您可以看到当前的值

00:27:22.440 --> 00:27:29.340
我们绑定到CFP上就突出了这一点

00:27:25.470 --> 00:27:30.930
和ESCO令牌为大写字母，但它

00:27:29.340 --> 00:27:33.480
没关系，因为有了一个好

00:27:30.930 --> 00:27:35.310
放松约束力有实际

00:27:33.480 --> 00:27:38.760
处理它的惯例

00:27:35.310 --> 00:27:41.250
下划线和大写字母

00:27:38.760 --> 00:27:44.510
他们很容易地映射到我们实际

00:27:41.250 --> 00:27:47.150
做到了， spring boot 真的绑定到

00:27:44.510 --> 00:27:49.980
系统属性环境变量

00:27:47.150 --> 00:27:51.840
您输入的命令行切换步骤

00:27:49.980 --> 00:27:53.570
也门的应用程序属性

00:27:51.840 --> 00:27:58.680
有很多方法可以自定义

00:27:53.570 --> 00:28:01.170
您的配置和如brandriss所说

00:27:58.680 --> 00:28:03.080
我们有某种轻松的方式

00:28:01.170 --> 00:28:05.850
绑定这些值，因为通常

00:28:03.080 --> 00:28:08.070
操作系统环境变量要求您

00:28:05.850 --> 00:28:10.500
和某些操作系统，该属性需要

00:28:08.070 --> 00:28:12.720
大写，你可以使用点

00:28:10.500 --> 00:28:16.410
在某些操作系统上使用点，它将看起来

00:28:12.720 --> 00:28:17.880
工作，所以我们照顾好我的意思是

00:28:16.410 --> 00:28:21.120
在您的其他文件中，我看到您已经

00:28:17.880 --> 00:28:24.420
在右上方有红色横幅是

00:28:21.120 --> 00:28:26.910
一个错误，所以下一步是

00:28:24.420 --> 00:28:28.560
实际上我们如何拥有

00:28:26.910 --> 00:28:30.750
对该内容的内容帮助

00:28:28.560 --> 00:28:32.570
你如何你如何得到

00:28:30.750 --> 00:28:35.670
键列表

00:28:32.570 --> 00:28:38.130
 IntelliJ希望我们

00:28:35.670 --> 00:28:40.560
注释处理器未启用，因此

00:28:38.130 --> 00:28:42.000
让我们添加一下并解释一下

00:28:40.560 --> 00:28:45.270
快速向您解释它的作用，因为

00:28:42.000 --> 00:28:47.190
如果您尝试，如果我们现在尝试写

00:28:45.270 --> 00:28:48.960
这些按键在我们的配置中

00:28:47.190 --> 00:28:53.220
将不具有自动完成功能支持，并且

00:28:48.960 --> 00:28:55.200
我们实际上需要得到它，所以如果

00:28:53.220 --> 00:28:57.480
我要添加这个，我基本上要添加一个

00:28:55.200 --> 00:29:00.060
这就是为什么它在那里是可选的

00:28:57.480 --> 00:29:02.220
我要添加一个新组件

00:29:00.060 --> 00:29:03.389
编译器将检测到该注释

00:29:02.220 --> 00:29:07.649
处理器是一个

00:29:03.389 --> 00:29:09.389
完成标准和本

00:29:07.649 --> 00:29:11.009
实施基本上将

00:29:09.389 --> 00:29:13.019
检查您的代码中的代码

00:29:11.009 --> 00:29:16.009
项目精细配置属性

00:29:13.019 --> 00:29:18.749
对象并为其生成一些元数据

00:29:16.009 --> 00:29:20.690
所以这对于

00:29:18.749 --> 00:29:26.099
基本上，一旦完成， 

00:29:20.690 --> 00:29:28.469
如果可以正常工作，我检查定义

00:29:26.099 --> 00:29:31.529
好的，它是为课程生成的

00:29:28.469 --> 00:29:33.599
问题，那么你正确了

00:29:31.529 --> 00:29:35.339
你也可以看到你得到了

00:29:33.599 --> 00:29:40.889
文档，所以文档是

00:29:35.339 --> 00:29:42.809
实际上是从这里提取的

00:29:40.889 --> 00:29:44.759
还提供默认值，您可以

00:29:42.809 --> 00:29:47.070
提供价值的元数据，所以大量

00:29:44.759 --> 00:29:49.289
您可以做的事情实际上是

00:29:47.070 --> 00:29:50.940
如果您想提供良好的机制

00:29:49.289 --> 00:29:54.379
为您自己的配置增加价值

00:29:50.940 --> 00:29:56.700
键，让我们一起玩

00:29:54.379 --> 00:30:02.489
假设我不再是修女

00:29:56.700 --> 00:30:04.919
只是为了向您展示它的工作原理， 

00:30:02.489 --> 00:30:06.629
是的，当您尝试

00:30:04.919 --> 00:30:08.700
访问您不允许的管理页面

00:30:06.629 --> 00:30:11.969
不再访问该页面，因为我

00:30:08.700 --> 00:30:14.129
再也没有了，所以一件事

00:30:11.969 --> 00:30:16.589
我们现在想做的也许是

00:30:14.129 --> 00:30:19.169
秋季3的页面很窄

00:30:16.589 --> 00:30:22.559
所以我们可能需要复制

00:30:19.169 --> 00:30:24.659
另一个用3点HTML命名

00:30:22.559 --> 00:30:26.549
否则我们可能会更聪明

00:30:24.659 --> 00:30:29.339
所以可能是我们可以成为大多数人

00:30:26.549 --> 00:30:33.539
关于它，我们有一个想要的404页面

00:30:29.339 --> 00:30:35.789
 403页，供我们使用

00:30:33.539 --> 00:30:38.459
单页将工作，所以你可以

00:30:35.789 --> 00:30:43.139
现在要做的就是启动，您可以

00:30:38.459 --> 00:30:45.029
需要用于xx，如果您这样做，我们

00:30:43.139 --> 00:30:48.359
会认出一个模式，我们会

00:30:45.029 --> 00:30:50.339
服务它，所以如果你跌倒

00:30:48.359 --> 00:30:53.070
跌倒在顶部会跌倒在顶部

00:30:50.339 --> 00:30:55.709
但是如果没有客户端错误

00:30:53.070 --> 00:30:57.539
定义的页面，然后我们将

00:30:55.709 --> 00:31:00.119
如果有一个则默认，但仍然

00:30:57.539 --> 00:31:03.959
找不到，所以我们还有一个

00:31:00.119 --> 00:31:07.019
问题，是的，仍然是

00:31:03.959 --> 00:31:08.669
错误的，让我们向您展示为什么它是

00:31:07.019 --> 00:31:11.700
模板及其实际原因

00:31:08.669 --> 00:31:13.130
对您的用例很有趣，所以我

00:31:11.700 --> 00:31:20.630
将要使用

00:31:13.130 --> 00:31:21.980
在这里我要说oops + error 

00:31:20.630 --> 00:31:24.170
是引号和

00:31:21.980 --> 00:31:27.080
单向一个好点，并且

00:31:24.170 --> 00:31:29.930
错误，我们实际上得到了一个错误

00:31:27.080 --> 00:31:32.090
通过引导时对象

00:31:29.930 --> 00:31:33.860
发生，所以您可以使用该对象

00:31:32.090 --> 00:31:36.830
您的模板可以做您所需的任何事情n 

00:31:33.860 --> 00:31:40.280
在我们的情况下，我们正在使用- 

00:31:36.830 --> 00:31:41.720
 title-自定义页面，因此，如果您

00:31:40.280 --> 00:31:44.720
看点，您会看到

00:31:41.720 --> 00:31:47.960
春天，但是-将有一个错误

00:31:44.720 --> 00:31:49.910
赋予它的Bojo属性

00:31:47.960 --> 00:31:52.280
开箱即用，您可以自定义

00:31:49.910 --> 00:31:54.050
这样你会得到错误，你会得到

00:31:52.280 --> 00:31:55.790
您将获得堆栈的状态码

00:31:54.050 --> 00:31:58.730
追踪是否有一个你会得到

00:31:55.790 --> 00:32:01.070
时间戳，我认为还有更多

00:31:58.730 --> 00:32:02.720
帐户记住，但是在点中

00:32:01.070 --> 00:32:06.530
所以这些当然你可以用

00:32:02.720 --> 00:32:08.750
在您自己的模板中，现在我们有了

00:32:06.530 --> 00:32:11.660
身份验证，但我们仍然想要

00:32:08.750 --> 00:32:14.180
用它来提交页面

00:32:11.660 --> 00:32:17.060
重视您的身份验证，但您

00:32:14.180 --> 00:32:19.190
还是需要填写表格

00:32:17.060 --> 00:32:20.980
与您的电子邮件和您的姓名等一起

00:32:19.190 --> 00:32:23.480
我们可以很容易地从您那里得出

00:32:20.980 --> 00:32:26.750
从您的用户信息中我们得到了

00:32:23.480 --> 00:32:29.240
已经如此，下一步真的是

00:32:26.750 --> 00:32:32.500
实际使用我们从中获得的信息

00:32:29.240 --> 00:32:36.440
 github gos提供者真正和什么

00:32:32.500 --> 00:32:38.090
链接到您的提交，所以有

00:32:36.440 --> 00:32:40.670
很多代码，例如Br​​ian 

00:32:38.090 --> 00:32:43.190
解释说我们有一个不错的承诺

00:32:40.670 --> 00:32:46.220
不会为此做现场编码

00:32:43.190 --> 00:32:51.800
抱歉，我们已经完成了该提交

00:32:46.220 --> 00:32:54.710
我们向其中添加了一个用户域对象

00:32:51.800 --> 00:32:56.690
保留在用户拥有的数据库中

00:32:54.710 --> 00:32:59.240
有关用户的所有信息，何时

00:32:56.690 --> 00:33:02.240
您已登录，我们还对

00:32:59.240 --> 00:33:04.220
用于删除电子邮件的模板

00:33:02.240 --> 00:33:06.320
表格的一部分，我们还更改了

00:33:04.220 --> 00:33:07.480
咬一下标题，这样您就可以得到您的

00:33:06.320 --> 00:33:10.780
从起床图片

00:33:07.480 --> 00:33:12.940
您已登录，因此拥有所有

00:33:10.780 --> 00:33:14.800
有更好的经验时

00:33:12.940 --> 00:33:16.960
您已经登录，无需填写

00:33:14.800 --> 00:33:20.620
在旧信息中，您得到了

00:33:16.960 --> 00:33:23.530
图片放在顶部，如果您提交

00:33:20.620 --> 00:33:26.890
他们都关联了几件事

00:33:23.530 --> 00:33:29.800
同一个人的视图，您可以看到

00:33:26.890 --> 00:33:34.090
到实际的数据库中，我们有一个

00:33:29.800 --> 00:33:36.550
新的新表用户，您应该知道

00:33:34.090 --> 00:33:38.800
我们也做了一些事情

00:33:36.550 --> 00:33:40.360
有人登录时的安全性配置

00:33:38.800 --> 00:33:43.600
第一次进入

00:33:40.360 --> 00:33:45.520
在数据库中创建用户

00:33:43.600 --> 00:33:48.790
这样我们可以确定用户是

00:33:45.520 --> 00:33:50.950
坚持不懈的人可以

00:33:48.790 --> 00:33:53.590
创建一个新的，并使用任务，所以

00:33:50.950 --> 00:33:55.630
让我们快速展示一下

00:33:53.590 --> 00:33:59.050
我们添加的全部就是这个

00:33:55.630 --> 00:34:01.000
是主要提取者，所以基本上

00:33:59.050 --> 00:34:03.700
我们想做的是我们不会教

00:34:01.000 --> 00:34:05.560
春季安全的对象是什么

00:34:03.700 --> 00:34:09.100
代表认证者

00:34:05.560 --> 00:34:11.590
经过身份验证的用户对我们来说

00:34:09.100 --> 00:34:13.830
再次实现该接口，我们得到

00:34:11.590 --> 00:34:17.590
宣誓提供者的一些信息

00:34:13.830 --> 00:34:19.770
我们使用我们的服务来询问它

00:34:17.590 --> 00:34:23.530
给我有关该用户的更多信息

00:34:19.770 --> 00:34:25.870
因为那东西实际上是

00:34:23.530 --> 00:34:28.030
知道宣誓的背景，如果有

00:34:25.870 --> 00:34:30.520
是否有范围

00:34:28.030 --> 00:34:32.530
附加到身份验证过程

00:34:30.520 --> 00:34:34.750
您将能够访问那些

00:34:32.530 --> 00:34:37.480
信息，所以您的电话

00:34:34.750 --> 00:34:40.420
要起床会匹配

00:34:37.480 --> 00:34:42.400
您所要求的范围

00:34:40.420 --> 00:34:44.080
看到我只是要求公开范围

00:34:42.400 --> 00:34:46.000
所以真的没有改变不会使

00:34:44.080 --> 00:34:47.710
没什么区别，但是这个东西是

00:34:46.000 --> 00:34:49.150
实际上对你来说是透明的

00:34:47.710 --> 00:34:52.300
现在，如果您这样做，而不是

00:34:49.150 --> 00:34:53.770
全部获得认证原则

00:34:52.300 --> 00:34:56.410
在您的应用程序中

00:34:53.770 --> 00:34:58.780
您只有用户名信息

00:34:56.410 --> 00:35:01.480
从那里你实际上可以自定义

00:34:58.780 --> 00:35:03.310
注入时将得到的类型

00:35:01.480 --> 00:35:05.260
当您注入该Oliver装置时

00:35:03.310 --> 00:35:06.150
应用程序，然后您可以添加更多

00:35:05.260 --> 00:35:08.220
信息

00:35:06.150 --> 00:35:12.869
在我们的案例中，我们添加了许多信息

00:35:08.220 --> 00:35:14.630
该用户对象的网址和

00:35:12.869 --> 00:35:17.130
图片任何你想要的

00:35:14.630 --> 00:35:20.390
那就是你可以做的真实的事情

00:35:17.130 --> 00:35:23.549
在这里注入控制器

00:35:20.390 --> 00:35:25.859
注释了我们的控制器参数

00:35:23.549 --> 00:35:27.930
认证原则，我们已经

00:35:25.859 --> 00:35:30.660
添加了我们想要的类型指令

00:35:27.930 --> 00:35:33.690
这就是我们将在其中配置的类型

00:35:30.660 --> 00:35:36.480
我们的沟通指导老师

00:35:33.690 --> 00:35:38.430
获取用户您的自定义用户对象

00:35:36.480 --> 00:35:40.529
您想在哪里进入应用程序

00:35:38.430 --> 00:35:44.099
意味着控制器，但即使在

00:35:40.529 --> 00:35:46.859
模板，这也是时候

00:35:44.099 --> 00:35:48.960
如果您查看布局中的模板

00:35:46.859 --> 00:35:52.589
您在其中拥有名称的布局

00:35:48.960 --> 00:35:54.740
上面的小图片然后放在这里

00:35:52.589 --> 00:35:57.329
我们正在使用扩展时间

00:35:54.740 --> 00:35:59.970
春季安全扩展，因此您可以

00:35:57.329 --> 00:36:02.579
直接使用身份验证

00:35:59.970 --> 00:36:05.520
原理进入模板以获取

00:36:02.579 --> 00:36:08.240
起床的用户名或网址

00:36:05.520 --> 00:36:08.240
个人资料等

00:36:19.000 --> 00:36:27.580
好的，所以你想好的

00:36:25.600 --> 00:36:30.250
所以你想再次看到那部分

00:36:27.580 --> 00:36:32.200
我们从哪里获得信息

00:36:30.250 --> 00:36:35.080
客户，所以我们从中获得的信息

00:36:32.200 --> 00:36:37.720
当我们请求一个github API时

00:36:35.080 --> 00:36:39.520
请求起床的用户端点

00:36:37.720 --> 00:36:41.770
发送回所有信息

00:36:39.520 --> 00:36:44.170
关于我们的用户的登录名和其他

00:36:41.770 --> 00:36:46.030
事物，我们从那里开始创造

00:36:44.170 --> 00:36:47.950
提取提取登录并

00:36:46.030 --> 00:36:53.320
然后我们从那里创建我们自己的

00:36:47.950 --> 00:36:55.240
用户对象，我们正在添加

00:36:53.320 --> 00:36:58.450
给该用户的信息并持续存在

00:36:55.240 --> 00:37:00.490
它进入数据库，所以如果你

00:36:58.450 --> 00:37:02.500
第一次登录什么什么什么

00:37:00.490 --> 00:37:04.090
即将发生的事情是我们

00:37:02.500 --> 00:37:08.140
将实际在中创建用户

00:37:04.090 --> 00:37:09.580
数据库中要关联的系统

00:37:08.140 --> 00:37:13.240
基本上，您向该用户提交的内容

00:37:09.580 --> 00:37:15.310
如果您大概十小时后登录

00:37:13.240 --> 00:37:17.290
您的用户仍将在系统中，因此

00:37:15.310 --> 00:37:21.010
我们将使用它并返回为

00:37:17.290 --> 00:37:23.290
你可以改变的原则是

00:37:21.010 --> 00:37:26.170
您将Twitter或Google用作

00:37:23.290 --> 00:37:28.630
北方供应商，您可以调整钥匙

00:37:26.170 --> 00:37:31.090
提取更多信息，使用自己的

00:37:28.630 --> 00:37:34.660
用户对象，随心所欲

00:37:31.090 --> 00:37:36.520
所以在我们的应用程序中，我可以打开一个

00:37:34.660 --> 00:37:38.380
我们可以完善的奉献机制

00:37:36.520 --> 00:37:40.930
他们有两个按钮，一个起床

00:37:38.380 --> 00:37:42.730
对于Twitter，并取决于哪个

00:37:40.930 --> 00:37:44.530
已经参与基本上有一个

00:37:42.730 --> 00:37:51.040
不同的回叫，做不同的事情

00:37:44.530 --> 00:37:52.540
没事吧，我们的应用程序是

00:37:51.040 --> 00:37:54.730
相当完整，但我认为我们仍然

00:37:52.540 --> 00:37:56.500
速率限制有问题

00:37:54.730 --> 00:37:58.420
因为我们实际上做了很多

00:37:56.500 --> 00:37:59.920
要求起床，我们正在提出要求

00:37:58.420 --> 00:38:02.050
当人们想要登机时

00:37:59.920 --> 00:38:04.090
请求，当我们得到

00:38:02.050 --> 00:38:07.210
 《美国之春》的最新承诺

00:38:04.090 --> 00:38:08.860
 spring boot ，这往往使

00:38:07.210 --> 00:38:11.860
现在我们告诉你很多要求

00:38:08.860 --> 00:38:14.770
我们有一个令牌进行身份验证

00:38:11.860 --> 00:38:15.540
向github发出请求的令牌

00:38:14.770 --> 00:38:18.390
 API 

00:38:15.540 --> 00:38:21.930
当我们什么时候不被禁止这样做

00:38:18.390 --> 00:38:22.800
限速是一个我们爆炸

00:38:21.930 --> 00:38:25.430
那个限速

00:38:22.800 --> 00:38:28.740
所以现在Stefan正在展示一种方法

00:38:25.430 --> 00:38:30.840
他正在请求github API和

00:38:28.740 --> 00:38:35.580
提取限速信息

00:38:30.840 --> 00:38:37.710
所以我们知道我们有四个四个

00:38:35.580 --> 00:38:40.770
剩余的一千九百个请求

00:38:37.710 --> 00:38:42.900
只要我们让我们羽毛

00:38:40.770 --> 00:38:45.630
我们刷新页面，您可以看到

00:38:42.900 --> 00:38:50.730
请求数缓慢缓慢，但

00:38:45.630 --> 00:38:53.190
当然，线条不太好，所以您还记得

00:38:50.730 --> 00:38:54.870
我们在

00:38:53.190 --> 00:38:56.760
主题演讲，向您展示如何启用

00:38:54.870 --> 00:39:00.030
缓存我不打算去的东西

00:38:56.760 --> 00:39:01.740
立即进行编码以节省一些时间

00:39:00.030 --> 00:39:05.130
对于其余的演示，我将继续

00:39:01.740 --> 00:39:09.720
检查一下，然后给你看一个

00:39:05.130 --> 00:39:12.630
这样做的不同方式

00:39:09.720 --> 00:39:14.220
我决定使用的应用程序不是

00:39:12.630 --> 00:39:17.520
使用咖啡因只是为了向您展示

00:39:14.220 --> 00:39:20.010
不同的，所以我要缓存

00:39:17.520 --> 00:39:22.440
每个缓存三个，而我正在使用J缓存

00:39:20.010 --> 00:39:26.030
 J缓存API，所以七人制的JSON 

00:39:22.440 --> 00:39:29.520
回来只是为了向您展示

00:39:26.030 --> 00:39:32.520
经历你得到的是那种

00:39:29.520 --> 00:39:34.740
你可以做的事情是一种模式

00:39:32.520 --> 00:39:36.450
您会在启动中找到很多

00:39:34.740 --> 00:39:39.270
每当你想定制东西

00:39:36.450 --> 00:39:42.960
我们将提供定制程序回调API 

00:39:39.270 --> 00:39:44.730
为此，如果您与

00:39:42.960 --> 00:39:46.350
真正的主要提取者

00:39:44.730 --> 00:39:48.740
实现原理提取器箱

00:39:46.350 --> 00:39:52.320
会打电话给您，您将有机会

00:39:48.740 --> 00:39:54.600
在这种情况下，返回其他用户

00:39:52.320 --> 00:39:56.910
实现J型缓存的存在

00:39:54.600 --> 00:39:59.460
经理定制器以及

00:39:56.910 --> 00:40:01.080
应用程序开始服务请求，我们

00:39:59.460 --> 00:40:03.540
将为您提供缓存管理器和

00:40:01.080 --> 00:40:04.170
您将有机会以任何方式对其进行调整

00:40:03.540 --> 00:40:06.140
你喜欢

00:40:04.170 --> 00:40:10.080
所以在这种情况下，我要创建三个

00:40:06.140 --> 00:40:12.570
缓存，我正在使用GSI API 

00:40:10.080 --> 00:40:15.900
基本上说我想启用

00:40:12.570 --> 00:40:17.850
我希望这个统计数据过期

00:40:15.900 --> 00:40:21.000
条目将在10分钟后过期

00:40:17.850 --> 00:40:22.790
这样的东西，所以我们创建了三个

00:40:21.000 --> 00:40:25.430
缓存名称以保持冷静

00:40:22.790 --> 00:40:27.619
今天的比赛是最新的

00:40:25.430 --> 00:40:30.050
波兰承诺，因为我们有那个迹象

00:40:27.619 --> 00:40:31.850
说什么时候睫毛持续

00:40:30.050 --> 00:40:34.160
波兰人的承诺将在我们身上发生

00:40:31.850 --> 00:40:35.750
项目以及另一个现金名称

00:40:34.160 --> 00:40:38.750
对于用户信息，我们是

00:40:35.750 --> 00:40:41.600
吸引，所以我们基本上是在使用

00:40:38.750 --> 00:40:44.350
您打算选通时使用的数据方法

00:40:41.600 --> 00:40:47.869
检索有关您的更多信息

00:40:44.350 --> 00:40:54.380
对，所以如果我做得很好， 

00:40:47.869 --> 00:40:56.690
期待它下一个问题是我们

00:40:54.380 --> 00:40:58.700
想要我们想要我们一直在发展

00:40:56.690 --> 00:41:00.740
这个应用程序我们一直在改变很多事情

00:40:58.700 --> 00:41:02.869
但我认为也许是时候了

00:41:00.740 --> 00:41:07.880
我们有更好的管理

00:41:02.869 --> 00:41:10.100
模式的，所以我们没有看到太多

00:41:07.880 --> 00:41:12.619
关于我们的数据库是h2 

00:41:10.100 --> 00:41:14.450
我们不在乎的内存中的数据库

00:41:12.619 --> 00:41:16.600
由它自动创建的模式

00:41:14.450 --> 00:41:21.530
冬眠，我们不知道是什么样的

00:41:16.600 --> 00:41:23.390
休眠使用哪种DDL，但是

00:41:21.530 --> 00:41:26.200
我们希望对

00:41:23.390 --> 00:41:28.850
模式，更好的是，如果我们想

00:41:26.200 --> 00:41:31.190
有一个持久数据库而不是

00:41:28.850 --> 00:41:32.510
一些数据并想要更改架构

00:41:31.190 --> 00:41:35.359
因为我们想添加更多功能

00:41:32.510 --> 00:41:39.380
存储更多数据，我们想要一种简单的方法

00:41:35.359 --> 00:41:41.810
实际升级该架构好吗

00:41:39.380 --> 00:41:44.210
我们想要的基本上是每当我们部署

00:41:41.810 --> 00:41:47.600
我们想要的应用程序的新版本

00:41:44.210 --> 00:41:49.070
模式会自动更新，因此

00:41:47.600 --> 00:41:51.560
我们真正要做的第一件事是

00:41:49.070 --> 00:41:53.480
使用模式管理器，有

00:41:51.560 --> 00:41:57.020
实际上可以使用几个

00:41:53.480 --> 00:42:00.350
有液体基料和飞重物，所以

00:41:57.020 --> 00:42:03.140
我们将为此使用飞重

00:42:00.350 --> 00:42:05.990
一个，所以我将依赖项添加为

00:42:03.140 --> 00:42:09.950
您会发现启动时几乎没有

00:42:05.990 --> 00:42:12.050
每当你保持一致的东西

00:42:09.950 --> 00:42:15.640
添加更多依赖项引导将检测

00:42:12.050 --> 00:42:15.640
他们，并默认为您做点什么

00:42:15.670 --> 00:42:22.070
所以它与flyweight一起工作的方式是

00:42:18.800 --> 00:42:24.770
您需要创建一个目录为

00:42:22.070 --> 00:42:26.540
目录结构对不起叫DB 

00:42:24.770 --> 00:42:29.450
因此迁移

00:42:26.540 --> 00:42:32.690
是的，那个文件夹应该容纳所有

00:42:29.450 --> 00:42:35.950
应该是的续集脚本

00:42:32.690 --> 00:42:39.110
用于创建数据库并

00:42:35.950 --> 00:42:40.670
对其进行修改并对其进行最新修改

00:42:39.110 --> 00:42:42.500
决定何时需要版本

00:42:40.670 --> 00:42:43.880
更改数据库中的内容，以便

00:42:42.500 --> 00:42:46.340
只要您尊重

00:42:43.880 --> 00:42:49.220
版本下划线的约定

00:42:46.340 --> 00:42:51.860
强调模式名称

00:42:49.220 --> 00:42:54.200
您正在尝试将该续集应用为

00:42:51.860 --> 00:42:54.860
只要您采用该约定

00:42:54.200 --> 00:42:56.360
你很好走

00:42:54.860 --> 00:42:58.130
所以这里是我们的第一个版本

00:42:56.360 --> 00:42:59.960
我们正在决定创建数据库

00:42:58.130 --> 00:43:02.600
提交内容和我们的表格

00:42:59.960 --> 00:43:05.090
用户，但仍然是因为我们正在这样做

00:43:02.600 --> 00:43:07.070
我们不需要休眠

00:43:05.090 --> 00:43:09.740
再为我们做到这一点，所以我们

00:43:07.070 --> 00:43:11.420
需要禁用它，所以我们

00:43:09.740 --> 00:43:23.300
会告诉你有

00:43:11.420 --> 00:43:25.780
别Milo-是的，好的，那是在

00:43:23.300 --> 00:43:28.310
这是一个很好的例子

00:43:25.780 --> 00:43:30.410
自动完成您可以看到的值

00:43:28.310 --> 00:43:32.180
你想知道的右边的东西

00:43:30.410 --> 00:43:34.850
现在我可以用自己的钥匙来做吗

00:43:32.180 --> 00:43:38.000
是的，你可以做到，实际上

00:43:34.850 --> 00:43:41.150
非常简单，如果您有菜单，那么如果

00:43:38.000 --> 00:43:42.560
你暴露出一种新的类型，你会得到

00:43:41.150 --> 00:43:45.440
开箱即用的总完成时间， 

00:43:42.560 --> 00:43:47.030
我们会获取不好的东西，我们不好的IDE 

00:43:45.440 --> 00:43:47.960
开发人员为我们做到这一点，他们将

00:43:47.030 --> 00:43:50.840
取得Javadoc 

00:43:47.960 --> 00:43:54.500
对敌人，并显示该权利

00:43:50.840 --> 00:43:57.080
在那里，我不会说什么，让我们

00:43:54.500 --> 00:43:58.610
看看如果我重新启动是怎么回事

00:43:57.080 --> 00:44:00.380
在这一点上还不是很有趣，因为

00:43:58.610 --> 00:44:03.590
我们仍在使用内存数据库

00:44:00.380 --> 00:44:06.140
对，所以真的不在乎只是证明

00:44:03.590 --> 00:44:07.820
我们的应用程序仍然有效

00:44:06.140 --> 00:44:11.390
但是仍然因为我们使用的是飞重

00:44:07.820 --> 00:44:13.370
要确保一个

00:44:11.390 --> 00:44:16.370
在我们的表中正确创建表

00:44:13.370 --> 00:44:18.290
数据库并且那个或数据库仍然

00:44:16.370 --> 00:44:19.220
在创建提交时工作正常

00:44:18.290 --> 00:44:22.070
它仍然有效

00:44:19.220 --> 00:44:24.470
当我们看一下实际的h2 

00:44:22.070 --> 00:44:26.720
控制台和我们的内存数据库

00:44:24.470 --> 00:44:28.730
我们可以看到，不仅我们拥有

00:44:26.720 --> 00:44:29.960
提交用户表，我们还有一个

00:44:28.730 --> 00:44:33.770
新

00:44:29.960 --> 00:44:35.900
架构版本表，其中列出了所有

00:44:33.770 --> 00:44:37.849
实际应用的脚本

00:44:35.900 --> 00:44:40.609
每当迁移时都对数据库

00:44:37.849 --> 00:44:42.890
发生，我们也可以得到

00:44:40.609 --> 00:44:44.450
来自单独端点的信息

00:44:42.890 --> 00:44:47.150
春天提供的

00:44:44.450 --> 00:44:49.040
可以在漂亮的JSON中看到的靴子

00:44:47.150 --> 00:44:50.869
格式化唯一的迁移

00:44:49.040 --> 00:44:53.089
通过数据库应用，因此而不是

00:44:50.869 --> 00:44:54.380
去桌旁看看

00:44:53.089 --> 00:44:56.660
迁移已应用，您可以

00:44:54.380 --> 00:44:59.330
直接与

00:44:56.660 --> 00:45:01.849
与那个终点，如果你碰巧

00:44:59.330 --> 00:45:03.680
更喜欢液体基料，您将得到

00:45:01.849 --> 00:45:05.720
相同的功能，所以您有一个广告

00:45:03.680 --> 00:45:07.580
我的意思是因为我们批评家

00:45:05.720 --> 00:45:09.740
我们重定向它，但是你有液体

00:45:07.580 --> 00:45:12.920
基础端点，提供液体

00:45:09.740 --> 00:45:14.660
有关您的架构的信息，因此

00:45:12.920 --> 00:45:17.450
非常方便，但让我们切换一下

00:45:14.660 --> 00:45:21.050
到一个真实的数据库，所以我们想要

00:45:17.450 --> 00:45:23.930
告诉你如何轻松改变

00:45:21.050 --> 00:45:28.220
本地环境并使用ID 

00:45:23.930 --> 00:45:29.630
设置ID功能就可以做到这一点

00:45:28.220 --> 00:45:31.700
我现在想做的是

00:45:29.630 --> 00:45:34.339
连接到本地我的续集数据库

00:45:31.700 --> 00:45:38.270
所以我在这里，如果你看我

00:45:34.339 --> 00:45:41.930
有一个CFP，我有一个CFP数据库， 

00:45:38.270 --> 00:45:42.710
那里实际上没有桌子

00:45:41.930 --> 00:45:45.530
好的

00:45:42.710 --> 00:45:48.170
所以让我们切换到我的秘密

00:45:45.530 --> 00:45:51.740
从h2切换到我的

00:45:48.170 --> 00:45:53.720
亮片并使其可配置

00:45:51.740 --> 00:45:58.430
首先是我们要创建一个文件

00:45:53.720 --> 00:46:01.880
个人资料，它很小，可以致电

00:45:58.430 --> 00:46:04.700
该本地还可以，所以应用程序-本地

00:46:01.880 --> 00:46:06.320
如果本地将要加载

00:46:04.700 --> 00:46:11.000
个人资料已启用，这是某种

00:46:06.320 --> 00:46:13.130
约定输入，我要说的是

00:46:11.000 --> 00:46:14.660
你们现在都知道我的密码，但只有

00:46:13.130 --> 00:46:17.240
适用于localhost呵呵

00:46:14.660 --> 00:46:19.160
所以这是你必须要做的设置

00:46:17.240 --> 00:46:22.720
你可能会注意到你不是

00:46:19.160 --> 00:46:25.190
指定不需要的驱动程序

00:46:22.720 --> 00:46:27.500
上面有很多样本

00:46:25.190 --> 00:46:31.220
互联网解释如何连接

00:46:27.500 --> 00:46:32.760
 spring boot 到数据库和99％的

00:46:31.220 --> 00:46:34.590
他们有司机没有

00:46:32.760 --> 00:46:36.660
那是因为我们实际上提取了

00:46:34.590 --> 00:46:37.140
真正的驱动力

00:46:36.660 --> 00:46:38.850
对

00:46:37.140 --> 00:46:40.590
所以这是您不需要的信息

00:46:38.850 --> 00:46:42.780
提供，但您仍然需要提供

00:46:40.590 --> 00:46:44.820
像我们这样的地方的真正司机

00:46:42.780 --> 00:46:46.650
成为为你做的，所以你

00:46:44.820 --> 00:46:49.650
需要回到你的池塘并添加

00:46:46.650 --> 00:46:52.530
作为依赖关系很好

00:46:49.650 --> 00:46:55.050
水族馆吧，现在我们有了

00:46:52.530 --> 00:46:57.300
驱动程序，我们有本地配置

00:46:55.050 --> 00:46:59.850
我们仍然需要触发实际

00:46:57.300 --> 00:47:01.500
应用程序中的本地配置文件，因此

00:46:59.850 --> 00:47:03.960
如果要同时保留两个

00:47:01.500 --> 00:47:05.730
环境，所以您要保持h2 

00:47:03.960 --> 00:47:07.170
在内存数据库中以及您想要的任何内容

00:47:05.730 --> 00:47:09.150
并在每次收听时进行数据处理

00:47:07.170 --> 00:47:12.600
您停止应用程序或要连接

00:47:09.150 --> 00:47:14.310
到物理数据库的好方法

00:47:12.600 --> 00:47:15.990
在IDS服务中做到这一点

00:47:14.310 --> 00:47:17.550
实际上，您必须运行配置

00:47:15.990 --> 00:47:20.730
为此，它具有相同的功能

00:47:17.550 --> 00:47:23.190
 SES，所以我要克隆运行配置

00:47:20.730 --> 00:47:24.660
我不管你怎么称呼

00:47:23.190 --> 00:47:26.730
可以去我的续集或任何你

00:47:24.660 --> 00:47:30.360
想要，就在这里我要说我

00:47:26.730 --> 00:47:32.250
想启用本地配置文件

00:47:30.360 --> 00:47:35.460
唯一的区别是

00:47:32.250 --> 00:47:37.110
二是一个使本地

00:47:35.460 --> 00:47:41.730
将读取该内容的配置文件，以及

00:47:37.110 --> 00:47:47.790
另一个不会，如果我要开始

00:47:41.730 --> 00:47:53.100
该应用程序现在是本地配置文件，而我

00:47:47.790 --> 00:47:55.860
在这里刷新我要整理桌子

00:47:53.100 --> 00:47:57.540
为我创建好了，就这些

00:47:55.860 --> 00:47:58.920
已经需要连接到

00:47:57.540 --> 00:48:02.160
您刚刚提供的其他数据库

00:47:58.920 --> 00:48:04.260
这三个属性，因为您这样做

00:48:02.160 --> 00:48:06.690
你实际上是在告诉 spring boot 好吗

00:48:04.260 --> 00:48:09.570
那里有一个ch2，所以您可以创建

00:48:06.690 --> 00:48:11.190
在内存中的H2数据库上，但我告诉

00:48:09.570 --> 00:48:13.290
您这是数据库所在的位置

00:48:11.190 --> 00:48:14.730
为我的应用程序定位，因此您拥有

00:48:13.290 --> 00:48:16.890
基本上有意见

00:48:14.730 --> 00:48:18.510
配置，我们将检测到并

00:48:16.890 --> 00:48:20.910
您将使用该信息来创建

00:48:18.510 --> 00:48:23.160
是您的数据源，所以我们可以

00:48:20.910 --> 00:48:24.990
甚至尝试创建一些提交

00:48:23.160 --> 00:48:26.020
在我们的应用程序中

00:48:24.990 --> 00:48:29.670
证明它有效

00:48:26.020 --> 00:48:29.670
好的，很重要

00:48:35.700 --> 00:48:41.190
所以我们花了很短的时间

00:48:38.480 --> 00:48:45.059
改变认证机制依赖

00:48:41.190 --> 00:48:47.250
在Olaf句柄或数据库上更改一些

00:48:45.059 --> 00:48:50.130
在我们的应用程序中

00:48:47.250 --> 00:48:52.109
在少数几个中已经有很多功能

00:48:50.130 --> 00:48:55.619
分钟，现在我们要看看

00:48:52.109 --> 00:48:58.140
我们可以通过改变来获得更多的乐趣

00:48:55.619 --> 00:48:59.970
应用程序在其中时我们的数据库

00:48:58.140 --> 00:49:02.250
生产持有或持有数据

00:48:59.970 --> 00:49:03.270
这就是您想要的实际内容

00:49:02.250 --> 00:49:06.390
当您使用类似的东西时

00:49:03.270 --> 00:49:08.910
飞路，让我们说您已经完成了

00:49:06.390 --> 00:49:10.680
该应用的第一个版本，您已经

00:49:08.910 --> 00:49:14.270
生产结果中的一些数据全部

00:49:10.680 --> 00:49:18.150
各种纸张，您的客户是

00:49:14.270 --> 00:49:20.160
告诉你这个表格很好但是

00:49:18.150 --> 00:49:23.520
我们真的需要一个单独的部分

00:49:20.160 --> 00:49:27.420
演讲者可以在其中添加注释

00:49:23.520 --> 00:49:29.730
 CFP，所以一些关于为什么要

00:49:27.420 --> 00:49:31.980
我把那个演讲提交给我

00:49:29.730 --> 00:49:33.930
做一些基本的信息

00:49:31.980 --> 00:49:36.930
在此之间CFP之间进行交换

00:49:33.930 --> 00:49:39.930
功能，所以它现在非常方便

00:49:36.930 --> 00:49:42.990
我们有Flyway是我们要

00:49:39.930 --> 00:49:46.980
为我们的提交添加一个注释属性

00:49:42.990 --> 00:49:50.089
桌子，为此，我要再次做

00:49:46.980 --> 00:49:53.520
是的，所以在那个承诺中，我们是

00:49:50.089 --> 00:49:55.290
添加新的续集脚本

00:49:53.520 --> 00:49:58.260
迁移脚本，我们要添加一个新的

00:49:55.290 --> 00:50:00.599
在我们的提交表格中

00:49:58.260 --> 00:50:03.059
在条目中也添加一个新字段

00:50:00.599 --> 00:50:06.930
域条目本身，如您所见

00:50:03.059 --> 00:50:10.579
我们在表单中有一个新条目，我们

00:50:06.930 --> 00:50:13.849
可以使用这些注释创建一个新条目

00:50:10.579 --> 00:50:13.849
像这样

00:50:14.540 --> 00:50:19.400
所以现在我们已经有了

00:50:17.510 --> 00:50:20.960
对我们的东西有所不同

00:50:19.400 --> 00:50:23.180
数据库是

00:50:20.960 --> 00:50:27.040
所以你可能也有

00:50:23.180 --> 00:50:30.560
注意到应用程序正在运行

00:50:27.040 --> 00:50:32.240
正确，因此应用程序正在运行

00:50:30.560 --> 00:50:34.040
结帐了这个新评论

00:50:32.240 --> 00:50:35.780
增加更多功能就像我会

00:50:34.040 --> 00:50:37.730
像可能那样编码自己

00:50:35.780 --> 00:50:40.070
大概花了一个小时30分钟

00:50:37.730 --> 00:50:42.620
这样做只是为了添加所有葬礼

00:50:40.070 --> 00:50:45.140
我和我不需要做的一切

00:50:42.620 --> 00:50:46.880
正确重新启动，这是我的应用程序

00:50:45.140 --> 00:50:56.300
为我更新了数据库

00:50:46.880 --> 00:50:58.340
对我来说，所以问题是你应该

00:50:56.300 --> 00:51:00.920
写它，如果你写那个脚本

00:50:58.340 --> 00:51:08.240
自己还是有一些工具可以

00:51:00.920 --> 00:51:10.430
用于为您生成它，我可能

00:51:08.240 --> 00:51:11.870
我想我不知道是否没有

00:51:10.430 --> 00:51:14.750
可能有一个应用程序可以做到这一点

00:51:11.870 --> 00:51:16.310
但如果你是

00:51:14.750 --> 00:51:19.220
使用您可能想要的东西

00:51:16.310 --> 00:51:21.500
做维护脚本，你想要

00:51:19.220 --> 00:51:24.680
确保会发生什么，您可能

00:51:21.500 --> 00:51:27.170
也想选择数据库

00:51:24.680 --> 00:51:28.940
根据您在那里使用的

00:51:27.170 --> 00:51:30.260
可能是我续集中的某些内容

00:51:28.940 --> 00:51:32.900
显然这里没有很多数据

00:51:30.260 --> 00:51:34.550
但是在实际的生产应用程序中

00:51:32.900 --> 00:51:35.990
可能想使用一些技巧

00:51:34.550 --> 00:51:38.240
数据库不标准的东西

00:51:35.990 --> 00:51:40.520
这就是生成工具的地方

00:51:38.240 --> 00:51:42.680
通常不会为您提供那种

00:51:40.520 --> 00:51:45.140
功能，在这里我们只是添加一个新

00:51:42.680 --> 00:51:47.900
数据库中的列，但使用时

00:51:45.140 --> 00:51:50.330
您通常在其中重命名的那些工具

00:51:47.900 --> 00:51:52.370
柯林，您需要调整一些内容

00:51:50.330 --> 00:51:54.470
现有的值，例如设置一个

00:51:52.370 --> 00:51:56.900
许多条目的默认值

00:51:54.470 --> 00:51:59.390
等等，所以你不只是改变这个

00:51:56.900 --> 00:52:01.840
模式通常也会做一些非常重要的事情

00:51:59.390 --> 00:52:05.810
特定于您自己的域进行更改

00:52:01.840 --> 00:52:07.850
所有现有数据的数据

00:52:05.810 --> 00:52:09.590
那也许是一个工具可以做的

00:52:07.850 --> 00:52:10.040
东西给你，但肯定不是

00:52:09.590 --> 00:52:12.590
一切

00:52:10.040 --> 00:52:13.670
所以如果你有的话，也许只是提取

00:52:12.590 --> 00:52:14.980
数据库中已有的东西

00:52:13.670 --> 00:52:16.720
与某处

00:52:14.980 --> 00:52:19.390
实际的类型也许你可以

00:52:16.720 --> 00:52:21.760
提取创建表语句，但是

00:52:19.390 --> 00:52:23.050
对于其他事情，可能更多

00:52:21.760 --> 00:52:25.900
复杂，您可能想这样做

00:52:23.050 --> 00:52:26.260
你自己，这是怎么回事

00:52:25.900 --> 00:52:36.670
通过

00:52:26.260 --> 00:52:38.020
是的，你明白了吗？ 

00:52:36.670 --> 00:52:47.680
没有得到问题，所以我们可以做一个

00:52:38.020 --> 00:52:49.930
 Wiki不是它，现在是GPA 

00:52:47.680 --> 00:52:51.460
运行正常，所以如果你看的话

00:52:49.930 --> 00:52:53.829
在我不是真的回答你

00:52:51.460 --> 00:52:56.890
问题，但我们正在使用GPA 

00:52:53.829 --> 00:52:58.720
有八个，所以我们要做的是

00:52:56.890 --> 00:53:01.780
我们告诉了一个八，请不要

00:52:58.720 --> 00:53:04.510
生成模式权限，但是您可以

00:53:01.780 --> 00:53:06.400
说请这样做，然后将其博客

00:53:04.510 --> 00:53:08.710
您可以在日志中看到值得拥有的

00:53:06.400 --> 00:53:10.630
它产生并以此为基础

00:53:08.710 --> 00:53:12.970
那实际上是我所做的，因为我

00:53:10.630 --> 00:53:14.260
提高，所以我只是做了我复制/粘贴

00:53:12.970 --> 00:53:15.760
对于第一个版本，一旦

00:53:14.260 --> 00:53:19.680
模式运行就可以了

00:53:15.760 --> 00:53:19.680
谢谢耶

00:53:22.770 --> 00:53:26.900
你能大声说话吗，因为

00:54:03.530 --> 00:54:10.260
不，所以问题是我拥有所有这些

00:54:08.310 --> 00:54:12.570
所有这些不同的数据库

00:54:10.260 --> 00:54:14.579
他们可能有一些特定的东西

00:54:12.570 --> 00:54:16.380
他们支持还是不支持

00:54:14.579 --> 00:54:17.930
一种具有某种通用方式的方式

00:54:16.380 --> 00:54:20.160
结束那就是问题对了

00:54:17.930 --> 00:54:23.849
我不这么认为

00:54:20.160 --> 00:54:26.910
但是你拥有的是Flyway是你

00:54:23.849 --> 00:54:28.920
可以有特定于数据库的脚本，所以我们

00:54:26.910 --> 00:54:31.530
有这个平台的东西，你可以

00:54:28.920 --> 00:54:34.190
用于根据实际情况进行微调

00:54:31.530 --> 00:54:34.190
数据库类型

00:54:46.859 --> 00:54:51.209
那就是我们所做的正确的

00:54:49.229 --> 00:54:58.199
正是我们在这个应用程序中所做的

00:54:51.209 --> 00:55:00.059
让权利吧，但另一方面，如果

00:54:58.199 --> 00:55:03.929
您支持多个数据库

00:55:00.059 --> 00:55:06.089
高级风湿病的结构是

00:55:03.929 --> 00:55:08.130
要付出的代价，我认为是的

00:55:06.089 --> 00:55:11.999
实际上我们对 spring data 做了什么

00:55:08.130 --> 00:55:14.759
网站上我们创建了带有

00:55:11.999 --> 00:55:16.559
 JPA等，当我们开始构建

00:55:14.759 --> 00:55:18.449
应用程序，现在它正在运行

00:55:16.559 --> 00:55:21.900
我们使用飞重的生产

00:55:18.449 --> 00:55:24.569
更新架构并更新数据

00:55:21.900 --> 00:55:26.069
在生产中

00:55:24.569 --> 00:55:28.709
更新应用程序是

00:55:26.069 --> 00:55:30.900
经常这样，一旦你有很多

00:55:28.709 --> 00:55:33.630
您数据库中的数据，并且

00:55:30.900 --> 00:55:36.630
不考虑更改数据库

00:55:33.630 --> 00:55:39.529
对不起，在那些情况下

00:55:36.630 --> 00:55:39.529
在那些情况下

00:55:54.830 --> 00:56:04.460
好，所以我们还有两分钟

00:55:59.840 --> 00:56:06.320
回顾一下我们正确做的事情，所以我们有了

00:56:04.460 --> 00:56:09.020
我们有一个应用程序，使用开发工具进行修改

00:56:06.320 --> 00:56:12.320
这个程序，我们将它集成和单个

00:56:09.020 --> 00:56:14.210
使用添加的缓存登录

00:56:12.320 --> 00:56:18.140
您现在可以看到数据库管理

00:56:14.210 --> 00:56:19.940
我们的架构是1.1版

00:56:18.140 --> 00:56:22.510
你现在需要改变

00:56:19.940 --> 00:56:25.820
有所有的基础设施

00:56:22.510 --> 00:56:27.380
我们还在这种情况下配置了安全性

00:56:25.820 --> 00:56:30.890
我们从中获取信息的方式

00:56:27.380 --> 00:56:37.550
 getup链接到我们的用户表

00:56:30.890 --> 00:56:39.710
在我们的系统中，所以我认为就是这样

00:56:37.550 --> 00:56:41.380
我们还有一分钟，所以大概

00:56:39.710 --> 00:56:44.870
我担心的问题有点太晚了

00:56:41.380 --> 00:56:48.220
但是我们就在这里，如果你想谢谢

00:56:44.870 --> 00:56:48.220
你非常感谢

