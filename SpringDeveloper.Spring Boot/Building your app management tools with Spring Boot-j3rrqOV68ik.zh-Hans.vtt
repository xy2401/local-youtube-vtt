WEBVTT
Kind: captions
Language: zh-Hans

00:00:09.520 --> 00:00:14.290
我要几张幻灯片

00:00:12.520 --> 00:00:16.710
与您分享，然后我们要

00:00:14.290 --> 00:00:19.420
深入研究一些真实的代码， 

00:00:16.710 --> 00:00:23.770
这是关于构建应用程序管理工具

00:00:19.420 --> 00:00:24.610
现在很好地使用蓝色屏幕平台

00:00:23.770 --> 00:00:25.930
你已经做到了

00:00:24.610 --> 00:00:30.550
你不会建立完美的

00:00:25.930 --> 00:00:31.960
应用程序现在每个人都喜欢它

00:00:30.550 --> 00:00:34.000
你的团队是因为你会

00:00:31.960 --> 00:00:35.559
很好的架构，你知道用的很好

00:00:34.000 --> 00:00:37.630
练习好的工具，而不是很多

00:00:35.559 --> 00:00:40.899
这样的客户真的很喜欢

00:00:37.630 --> 00:00:42.100
副作用就是你

00:00:40.899 --> 00:00:43.989
经理喜欢它，因为您带来了

00:00:42.100 --> 00:00:48.219
很多新业务和很多

00:00:43.989 --> 00:00:50.559
的收入，那么您能期望什么

00:00:48.219 --> 00:00:52.350
结果就是你要

00:00:50.559 --> 00:00:54.249
获得晋升并登上阶梯

00:00:52.350 --> 00:00:57.460
也许你会得到高薪

00:00:54.249 --> 00:01:00.820
提高，我认为我们知道答案

00:00:57.460 --> 00:01:04.420
一个不，你不是，而是你去

00:01:00.820 --> 00:01:06.310
在顶部支持应用程序，因此时间

00:01:04.420 --> 00:01:08.010
您可能需要知道您的

00:01:06.310 --> 00:01:12.220
经理会请你出去

00:01:08.010 --> 00:01:13.740
 sysadmin对DevOps团队和支持

00:01:12.220 --> 00:01:17.470
它在部署中并添加一些新的

00:01:13.740 --> 00:01:19.450
支持工具之类的东西

00:01:17.470 --> 00:01:21.490
让我们来看看让我们比较两个

00:01:19.450 --> 00:01:23.229
他们使用的不同工具集

00:01:21.490 --> 00:01:26.020
用什么样的方式构建应用

00:01:23.229 --> 00:01:27.759
你用得很好的东西

00:01:26.020 --> 00:01:30.960
 Java或groovy假定观众

00:01:27.759 --> 00:01:30.960
它可能已调入此网络研讨会

00:01:31.290 --> 00:01:36.369
我假设你已经用了一些 Spring 

00:01:33.969 --> 00:01:39.729
希望新的 spring boot 是

00:01:36.369 --> 00:01:40.770
真的很热，阿帕奇

00:01:39.729 --> 00:01:43.930
雄猫

00:01:40.770 --> 00:01:47.020
 Spring 雄猫的其他各个部位

00:01:43.930 --> 00:01:48.610
如果您构建一些就可以堆叠

00:01:47.020 --> 00:01:51.820
基于网络的前端，您肯定

00:01:48.610 --> 00:01:56.170
我将使用HTML Javascript CSS 3 

00:01:51.820 --> 00:01:58.780
这种善良，也许通常是行家

00:01:56.170 --> 00:02:01.719
或Gradle是猫，就像Java的85％ 

00:01:58.780 --> 00:02:03.280
项目使用Maven和Grails进来

00:02:01.719 --> 00:02:06.280
第二，越来越多

00:02:03.280 --> 00:02:07.570
受欢迎但是当你过去

00:02:06.280 --> 00:02:09.700
开始构建一些工具来支持

00:02:07.570 --> 00:02:11.560
您的应用程序并对其进行管理和收集

00:02:09.700 --> 00:02:13.450
指标并做各种各样的事情

00:02:11.560 --> 00:02:16.210
您听到什么样的工具

00:02:13.450 --> 00:02:18.310
人们经常听到他们的声音

00:02:16.210 --> 00:02:19.450
关于不同的shell脚本工具

00:02:18.310 --> 00:02:21.940
我在这里开个玩笑

00:02:19.450 --> 00:02:25.170
每个字母几乎都有一个外壳

00:02:21.940 --> 00:02:25.170
可用的字母

00:02:25.370 --> 00:02:29.150
如果您适合测试和脚本迷

00:02:27.560 --> 00:02:31.970
像我一样，您可以使用类似的工具

00:02:29.150 --> 00:02:35.390
 Python或挠痒痒的皮毛，期待一些

00:02:31.970 --> 00:02:37.850
您可能会使用Ruby之类的东西

00:02:35.390 --> 00:02:40.490
一些较旧的工具，例如假释或T续集

00:02:37.850 --> 00:02:42.410
用于编写工具和非常支持

00:02:40.490 --> 00:02:43.640
脚本，你基本上知道

00:02:42.410 --> 00:02:45.620
关于任何一种脚本语言

00:02:43.640 --> 00:02:47.420
你可以想象我已经看到

00:02:45.620 --> 00:02:49.700
某些工具随附的专有工具

00:02:47.420 --> 00:02:55.010
我可以利用的堆栈

00:02:49.700 --> 00:02:57.470
事业，这意味着什么

00:02:55.010 --> 00:02:59.480
您需要执行诸如连接到

00:02:57.470 --> 00:03:02.240
 Facebook，您知道您需要使用工具

00:02:59.480 --> 00:03:05.480
访问Facebook并做某事或外观

00:03:02.240 --> 00:03:06.500
在Twitter或github上的演示

00:03:05.480 --> 00:03:11.300
我们将看一个支持工具

00:03:06.500 --> 00:03:13.130
实际上是进入github的，如果

00:03:11.300 --> 00:03:15.590
您需要您的工具集才能连接到

00:03:13.130 --> 00:03:17.360
 RabbitMQ，您可能知道您的主要

00:03:15.590 --> 00:03:20.420
生产应用程序正在使用

00:03:17.360 --> 00:03:22.520
 RabbitMQ经纪人，最近

00:03:20.420 --> 00:03:24.890
研究显示一百万条信息

00:03:22.520 --> 00:03:26.270
稳定处理的秒数，您要

00:03:24.890 --> 00:03:28.840
编写支持脚本以利用

00:03:26.270 --> 00:03:30.890
其中一些并收集对称数据

00:03:28.840 --> 00:03:32.930
如果您想连接到

00:03:30.890 --> 00:03:35.810
主应用程序正在运行的数据库

00:03:32.930 --> 00:03:37.130
反对，或者如果您需要知道该怎么办

00:03:35.810 --> 00:03:39.500
如果您不使用RabbitMQ压力

00:03:37.130 --> 00:03:42.320
使用JMS消息传递，并且您想挂钩

00:03:39.500 --> 00:03:46.400
进入其中一些并测量流量或

00:03:42.320 --> 00:03:48.380
您知道或潜在的事情

00:03:46.400 --> 00:03:50.480
您想重用部分应用程序吗

00:03:48.380 --> 00:03:52.670
如果您使用的东西模块很好

00:03:50.480 --> 00:03:54.680
像Python，您必须去学习

00:03:52.670 --> 00:03:56.360
不同的图书馆，你知道的不同

00:03:54.680 --> 00:03:57.560
组件访问所有这些功能

00:03:56.360 --> 00:03:59.630
甚至可能无法访问某些内容

00:03:57.560 --> 00:04:01.460
通过这些工具，像JMS 

00:03:59.630 --> 00:04:04.730
您将使用J Python或

00:04:01.460 --> 00:04:06.770
家伙电话，我是说，所以你知道这是一个

00:04:04.730 --> 00:04:07.910
与之斗争，所以你知道我的

00:04:06.770 --> 00:04:09.980
我问的问题，我们将要

00:04:07.910 --> 00:04:15.290
在此网络研讨会中探讨的是为什么不使用

00:04:09.980 --> 00:04:17.060
与我和我相同的工具集

00:04:15.290 --> 00:04:20.420
我对此的反应是

00:04:17.060 --> 00:04:21.950
能够真的很棒

00:04:20.420 --> 00:04:23.660
使用我的工具或Java 

00:04:21.950 --> 00:04:26.330
 groovy的def编程语言

00:04:23.660 --> 00:04:29.840
如果我能够使用的话，这非常吸引人

00:04:26.330 --> 00:04:31.550
 Spring和Tomcat结合使用

00:04:29.840 --> 00:04:33.800
简单明了的方式

00:04:31.550 --> 00:04:36.490
太棒了，然后我们还要

00:04:33.800 --> 00:04:38.979
深入了解一下 spring boot CLI 

00:04:36.490 --> 00:04:43.870
工具，最后一些您知道的HTML 

00:04:38.979 --> 00:04:47.020
及其所有受支持的功能，以便

00:04:43.870 --> 00:04:49.300
这样做，我们将去拜访一些

00:04:47.020 --> 00:04:51.250
一些应用程序我们有几个应用程序

00:04:49.300 --> 00:04:54.250
我一起帮助支持我们

00:04:51.250 --> 00:04:55.479
去年夏天的东西大约

00:04:54.250 --> 00:04:58.090
三四个月

00:04:55.479 --> 00:05:01.000
罗伊·克拉克森·克雷格（Roy Clarkson Craig）墙壁和我自己

00:04:58.090 --> 00:05:03.460
写了大约五十点左右

00:05:01.000 --> 00:05:07.569
现在开始的指南

00:05:03.460 --> 00:05:09.250
斯普林斯网站每个人

00:05:07.569 --> 00:05:11.199
入门指南分别托管

00:05:09.250 --> 00:05:12.880
 github存储库，我们鼓励

00:05:11.199 --> 00:05:15.729
人们，如果您发现代码中的错误，如果

00:05:12.880 --> 00:05:17.530
您发现错字了，请打开

00:05:15.729 --> 00:05:20.110
在那个github仓库发布

00:05:17.530 --> 00:05:22.960
直到我们能够很好地找到想法

00:05:20.110 --> 00:05:25.630
导航50个不同的github的过程

00:05:22.960 --> 00:05:28.180
存储库设置问题是一场噩梦

00:05:25.630 --> 00:05:30.069
正如您所知，我们很快就遇到了

00:05:28.180 --> 00:05:34.210
我们没有什么是完美的，我们不得不

00:05:30.069 --> 00:05:37.419
开始跟踪它，所以我要打开

00:05:34.210 --> 00:05:43.750
我的浏览器在这里，并向您显示一个工具

00:05:37.419 --> 00:05:46.479
我们建立了所谓的问题汇总器

00:05:43.750 --> 00:05:48.430
这是我们有的一点

00:05:46.479 --> 00:05:50.620
我编写的应用或支持脚本（如果有） 

00:05:48.430 --> 00:05:53.199
你会的，它的工作是去拜访所有人

00:05:50.620 --> 00:05:56.169
我们在github和

00:05:53.199 --> 00:05:58.000
查找他们所有未解决的问题， 

00:05:56.169 --> 00:05:59.500
实际上，现在我们有60多个指南

00:05:58.000 --> 00:06:02.020
这对于数量来说还不错吗

00:05:59.500 --> 00:06:03.759
根据指南公开问题，所以，但是

00:06:02.020 --> 00:06:05.440
定期大约每两周一次

00:06:03.759 --> 00:06:07.000
我想进去尝试清理

00:06:05.440 --> 00:06:08.789
一些悬而未决的问题

00:06:07.000 --> 00:06:12.210
事情要变得更好，所以这是

00:06:08.789 --> 00:06:18.310
比尝试去要快得多

00:06:12.210 --> 00:06:20.469
这样的事情我要去

00:06:18.310 --> 00:06:21.909
导航到每个指南，然后转到

00:06:20.469 --> 00:06:28.810
每个问题并检查是否存在

00:06:21.909 --> 00:06:30.639
这里有任何问题，为什么我们不开放

00:06:28.810 --> 00:06:37.330
我建立的这个应用程式叫问题

00:06:30.639 --> 00:06:38.620
聚合器，看看它，我是

00:06:37.330 --> 00:06:42.880
要在这里放大它，所以更多

00:06:38.620 --> 00:06:45.850
可读性如此

00:06:42.880 --> 00:06:49.810
这是我只是快速滚动

00:06:45.850 --> 00:06:51.520
通过它，实际上我们并没有很多代码

00:06:49.810 --> 00:06:54.700
穿过它的位，这是

00:06:51.520 --> 00:06:56.700
 groovy，这是您知道的groovy文件

00:06:54.700 --> 00:06:59.830
在我们的顶部，我把它放在一个包装里

00:06:56.700 --> 00:07:02.080
我们正在使用普通葡萄

00:06:59.830 --> 00:07:03.490
让我们引入依赖关系以及什么

00:07:02.080 --> 00:07:04.780
这就是说我不需要

00:07:03.490 --> 00:07:06.580
构建文件，我不需要项目

00:07:04.780 --> 00:07:09.010
我可以只写一个文件的结构

00:07:06.580 --> 00:07:12.310
我有一个应用，在这种情况下， 

00:07:09.010 --> 00:07:14.290
将使用spring social github和J 

00:07:12.310 --> 00:07:18.610
汤，你会明白为什么我有点失望

00:07:14.290 --> 00:07:20.560
此外，我有一些进口声明

00:07:18.610 --> 00:07:23.350
我正在使用Spring Boot CLI的事实

00:07:20.560 --> 00:07:25.000
使我免于大量进口

00:07:23.350 --> 00:07:29.230
我可能需要的陈述，例如

00:07:25.000 --> 00:07:31.660
 Spring MVC或Jackson，我不需要

00:07:29.230 --> 00:07:33.270
使用这些导入语句，因为启动

00:07:31.660 --> 00:07:36.100
会自动为我提供

00:07:33.270 --> 00:07:37.360
那就是在城市低谷发生的事情

00:07:36.100 --> 00:07:39.340
在这里你可以看到我在拉一些

00:07:37.360 --> 00:07:41.350
使用速记的其他依赖项

00:07:39.340 --> 00:07:42.880
蓝色表示我们要去的符号

00:07:41.350 --> 00:07:44.680
有一段时间百里香离开

00:07:42.880 --> 00:07:48.160
模板和Spring Web组件以及

00:07:44.680 --> 00:07:50.110
 Jackson用于数据绑定的此类

00:07:48.160 --> 00:07:51.940
我几乎可以挤成一个

00:07:50.110 --> 00:07:55.120
此处称为问题汇总器的页面

00:07:51.940 --> 00:07:58.180
实际上，这是一个Spring MVC控制器， 

00:07:55.120 --> 00:08:00.160
我也有在日志中使用groovy 

00:07:58.180 --> 00:08:02.410
注释，这样我就可以拥有一个记录器

00:08:00.160 --> 00:08:05.830
自动嵌入到此代码中

00:08:02.410 --> 00:08:07.240
现在不必设置两个

00:08:05.830 --> 00:08:09.220
您必须具备的东西

00:08:07.240 --> 00:08:11.440
连接到github并查找打开

00:08:09.220 --> 00:08:15.190
问题是您实际上需要拥有一个

00:08:11.440 --> 00:08:18.610
访问令牌，这是一个密码

00:08:15.190 --> 00:08:20.050
在以后的配置中

00:08:18.610 --> 00:08:22.450
网络研讨会（如果您要访问该项目） 

00:08:20.050 --> 00:08:25.420
我会告诉你它具有所有步骤

00:08:22.450 --> 00:08:27.360
以及如何创建自己的令牌

00:08:25.420 --> 00:08:29.380
需要告诉哪个特别

00:08:27.360 --> 00:08:31.030
我们想要研究的组织

00:08:29.380 --> 00:08:35.500
默认情况下，它会看 Spring 

00:08:31.030 --> 00:08:37.390
指南在这里我们已经配置了一个存在

00:08:35.500 --> 00:08:39.690
我们正在创建一个新的github模板

00:08:37.390 --> 00:08:42.729
我们正在插入github令牌值

00:08:39.690 --> 00:08:44.320
换句话说我们的密码，因为我

00:08:42.729 --> 00:08:45.940
实际想使用模板的权利

00:08:44.320 --> 00:08:50.140
在这段代码中，我需要自动接线

00:08:45.940 --> 00:08:53.290
并抓住它的一个实例

00:08:50.140 --> 00:08:56.600
这里的方法有点像

00:08:53.290 --> 00:08:59.850
它所做的全部事情

00:08:56.600 --> 00:09:02.670
就是说仓库清单

00:08:59.850 --> 00:09:04.110
名称基本上是字符串，所以它做什么

00:09:02.670 --> 00:09:06.720
是要遍历他们， 

00:09:04.110 --> 00:09:08.400
生成并收集它们在一起

00:09:06.720 --> 00:09:10.650
每个存储库都需要

00:09:08.400 --> 00:09:12.900
 github模板获取获取回购

00:09:10.650 --> 00:09:15.810
操作并为此查找问题

00:09:12.900 --> 00:09:16.740
组织和存储库以及什么

00:09:15.810 --> 00:09:18.300
将要执行的操作

00:09:16.740 --> 00:09:21.050
过滤器在这里它将要过滤

00:09:18.300 --> 00:09:24.630
出去，只抓住那些开放的

00:09:21.050 --> 00:09:26.640
在那之后我放了一点抛光剂

00:09:24.630 --> 00:09:30.480
按项目编号排序

00:09:26.640 --> 00:09:33.300
然后最终将其转化为拥有

00:09:30.480 --> 00:09:35.910
词条变成了一个小小的字典

00:09:33.300 --> 00:09:38.850
带有存储库名称和

00:09:35.910 --> 00:09:41.550
 github问题本身，问题是

00:09:38.850 --> 00:09:44.160
是gif是 Spring 社交github问题

00:09:41.550 --> 00:09:45.930
以及问题本身的事实

00:09:44.160 --> 00:09:48.680
不保存存储库名称的原因

00:09:45.930 --> 00:09:50.580
我需要把它放到这里

00:09:48.680 --> 00:09:53.040
现在我要做的所有事情

00:09:50.580 --> 00:09:55.140
快速检查并说是否超过

00:09:53.040 --> 00:09:57.570
你知道它是否不为空然后展平

00:09:55.140 --> 00:10:00.810
列出一个简单的清单给我

00:09:57.570 --> 00:10:02.610
现在处理

00:10:00.810 --> 00:10:05.010
在这里，我实际上有一个

00:10:02.610 --> 00:10:10.020
 Spring MVC路线映射，我要映射

00:10:05.010 --> 00:10:11.220
它到这里的根页面以及什么

00:10:10.020 --> 00:10:14.400
它会去做它会去做

00:10:11.220 --> 00:10:16.200
与j-su交流以了解iOS 

00:10:14.400 --> 00:10:22.170
闪光指南让我们将其拉起

00:10:16.200 --> 00:10:23.880
看看那是什么，那是这个页面

00:10:22.170 --> 00:10:26.450
在这里您可以找到清单

00:10:23.880 --> 00:10:28.500
我们构建的所有指南以及

00:10:26.450 --> 00:10:32.670
从本质上讲，将要扫描每个

00:10:28.500 --> 00:10:38.130
他们，如果我去看这个

00:10:32.670 --> 00:10:41.370
背面在这里我碰巧是

00:10:38.130 --> 00:10:43.160
看着班级的班级ID标题

00:10:41.370 --> 00:10:46.550
这里的href是通往

00:10:43.160 --> 00:10:50.640
我感兴趣的指南的路径

00:10:46.550 --> 00:10:52.320
所以如果我回到代码，但是

00:10:50.640 --> 00:10:54.540
这样就完成了整个页面

00:10:52.320 --> 00:10:56.580
我想去的想法和想法

00:10:54.540 --> 00:10:57.960
这些，以便我可以动态地接起来

00:10:56.580 --> 00:11:01.140
目前所有的指南

00:10:57.960 --> 00:11:03.420
在那里，J汤的作用是

00:11:01.140 --> 00:11:06.260
库Java库提供

00:11:03.420 --> 00:11:09.120
 jQuery就像我可以做的选择器语法

00:11:06.260 --> 00:11:10.140
选择，我正在寻找一个点

00:11:09.120 --> 00:11:14.340
指导标题

00:11:10.140 --> 00:11:17.010
现在里面的刀剑我有一个过滤器

00:11:14.340 --> 00:11:20.430
不想任何事件鲁伊斯那里

00:11:17.010 --> 00:11:22.260
实际上是教程，而不是这个应用程序

00:11:20.430 --> 00:11:24.210
专注于此刻管理

00:11:22.260 --> 00:11:25.290
指导，然后一旦我有那个

00:11:24.210 --> 00:11:29.400
筛选清单，我要

00:11:25.290 --> 00:11:37.350
基本上我需要采取的转变

00:11:29.400 --> 00:11:40.260
我们在这里拥有的HR F值

00:11:37.350 --> 00:11:45.510
斜杠指南/ gs最后的调度任务

00:11:40.260 --> 00:11:49.500
 TAS我想接受href我

00:11:45.510 --> 00:11:50.610
减去最后一个GX的斜杠

00:11:49.500 --> 00:11:52.110
在弦的前面，我是

00:11:50.610 --> 00:11:53.580
最后要减去闪光

00:11:52.110 --> 00:11:56.100
的字符串，然后我要加前缀

00:11:53.580 --> 00:11:58.470
 GS，所以这是您得到的地方

00:11:56.100 --> 00:12:00.030
点击您的常规魔术，并使用您知道的

00:11:58.470 --> 00:12:01.470
如果要使用什么脚本工具

00:12:00.030 --> 00:12:03.390
用Java写这个我感觉像这样

00:12:01.470 --> 00:12:05.070
试图去脖子上会很痛苦

00:12:03.390 --> 00:12:07.500
把这种弦放在一起

00:12:05.070 --> 00:12:09.900
操作，但具有常规性

00:12:07.500 --> 00:12:12.740
蛋糕，然后我要去的东西

00:12:09.900 --> 00:12:14.730
我要做的是建立这个数组

00:12:12.740 --> 00:12:16.860
我要放的仓库问题

00:12:14.730 --> 00:12:19.170
进入我的 Spring MVC模型并返回

00:12:16.860 --> 00:12:29.220
直到告诉它渲染房屋

00:12:19.170 --> 00:12:32.130
看我去看看我们尝试

00:12:29.220 --> 00:12:34.500
现在我们去这里是网页

00:12:32.130 --> 00:12:36.240
我建立的，我们不会去的

00:12:34.500 --> 00:12:37.800
遍历每一行，但如果您已经

00:12:36.240 --> 00:12:39.510
完成了您可能进行的任何Web开发

00:12:37.800 --> 00:12:41.520
认识到这通常是

00:12:39.510 --> 00:12:44.940
引导Twitter或对Twitter感到抱歉

00:12:41.520 --> 00:12:47.400
引导CSS布局以及我所拥有的

00:12:44.940 --> 00:12:49.680
实际要做的是样式，我不会

00:12:47.400 --> 00:12:51.870
立即获取样式表

00:12:49.680 --> 00:12:58.010
 Spring 的生物，所以它有一个熟悉的

00:12:51.870 --> 00:13:00.570
外观和感觉来管理我的东西

00:12:58.010 --> 00:13:02.460
向下滚动到内容所在的位置

00:13:00.570 --> 00:13:04.860
它基本上是一个巨大的表结构

00:13:02.460 --> 00:13:06.290
我拥有的就在中心

00:13:04.860 --> 00:13:09.990
这是我要去的地方

00:13:06.290 --> 00:13:12.000
现在遍历所有这些问题

00:13:09.990 --> 00:13:14.760
这是时间模板

00:13:12.000 --> 00:13:16.710
不是JSP，因为我发现JSP是

00:13:14.760 --> 00:13:18.390
笨拙这很难管理，我已经

00:13:16.710 --> 00:13:20.910
能够更有效地获取

00:13:18.390 --> 00:13:22.470
及时使用书面模板和材料

00:13:20.910 --> 00:13:24.000
所以在这里我要遍历每个

00:13:22.470 --> 00:13:25.980
问题，然后我将基本上

00:13:24.000 --> 00:13:28.800
提取存储库的名称，然后

00:13:25.980 --> 00:13:31.710
然后我还要抓住这个问题， 

00:13:28.800 --> 00:13:33.890
然后查找此HTML URL地址，以便

00:13:31.710 --> 00:13:36.270
您可以超链接跳转到它

00:13:33.890 --> 00:13:37.920
最后我要打印你

00:13:36.270 --> 00:13:40.020
知道分配给谁以及是否

00:13:37.920 --> 00:13:43.350
如果没有分配任何人，则不会

00:13:40.020 --> 00:13:44.790
只是将其留空或保留为

00:13:43.350 --> 00:13:50.580
未分配，然后最后是什么

00:13:44.790 --> 00:13:52.050
大家都知道的问题的标题

00:13:50.580 --> 00:13:55.920
基本上它可以让我渲染这个

00:13:52.050 --> 00:13:57.360
在这里，所以从这个应用程序，我可以快速查看

00:13:55.920 --> 00:13:59.130
并很好地看到三个未解决的问题

00:13:57.360 --> 00:14:02.720
反对的入门指南

00:13:59.130 --> 00:14:06.180
如果我单击此处，则发送消息的rhetta 

00:14:02.720 --> 00:14:07.530
那是github令人毛骨悚然的记录

00:14:06.180 --> 00:14:09.390
我可以快速找到问题所在

00:14:07.530 --> 00:14:16.170
并开始阅读并消化

00:14:09.390 --> 00:14:17.700
弄清楚我解决了，所以你对我知道

00:14:16.170 --> 00:14:23.700
放在一起

00:14:17.700 --> 00:14:25.530
放大的代码就像

00:14:23.700 --> 00:14:28.080
几乎不适合您，它的页面和

00:14:25.530 --> 00:14:29.910
一半的代码可以让我基本完成我的任务

00:14:28.080 --> 00:14:34.320
工作容易得多，进来就知道

00:14:29.910 --> 00:14:36.360
清理清理问题，这就是我们的

00:14:34.320 --> 00:14:37.950
第一个例子，这就像所有问题

00:14:36.360 --> 00:14:41.250
聚合器，您实际上可以看到

00:14:37.950 --> 00:14:46.680
如果您想结束我的工作，请自行编码

00:14:41.250 --> 00:14:49.590
 github建立存储库，所以如果你去

00:14:46.680 --> 00:14:51.360
访问这里，您可以看到并获得所有

00:14:49.590 --> 00:14:52.560
有关如何设置的信息

00:14:51.360 --> 00:14:54.750
它展示了如何设置github 

00:14:52.560 --> 00:14:57.900
令牌如何从

00:14:54.750 --> 00:14:59.310
命令行，甚至如何上传

00:14:57.900 --> 00:15:00.570
即使我认为云铸造厂

00:14:59.310 --> 00:15:08.460
这些文件，我们有一点

00:15:00.570 --> 00:15:10.640
现在已经过时了

00:15:08.460 --> 00:15:18.150
我建立的另一个工具

00:15:10.640 --> 00:15:19.890
当我继续关注的时候，就在这里

00:15:18.150 --> 00:15:21.660
我要去参观其中之一

00:15:19.890 --> 00:15:22.890
指导这里，这是一些如果

00:15:21.660 --> 00:15:24.810
从此您就可以看到该指南

00:15:22.890 --> 00:15:27.300
去年我们发布了它们

00:15:24.810 --> 00:15:28.830
对您来说确实很方便，但是您

00:15:27.300 --> 00:15:30.420
知道告诉你如何解决

00:15:28.830 --> 00:15:31.589
问题，但您可能没有注意到

00:15:30.420 --> 00:15:34.010
我们有一个右角

00:15:31.589 --> 00:15:38.960
显示账单通过的图标

00:15:34.010 --> 00:15:41.000
我点击它实际上需要的图标

00:15:38.960 --> 00:15:43.700
我要干哦，这是CI服务器

00:15:41.000 --> 00:15:46.130
实验室中的解决方案原子，我们实际上

00:15:43.700 --> 00:15:48.410
每个向导都有一份CI工作， 

00:15:46.130 --> 00:15:50.360
那就是如果我们做某事的话

00:15:48.410 --> 00:15:53.390
到代码，它破坏了它想要

00:15:50.360 --> 00:15:56.300
知道这一点，所以我在这里看着

00:15:53.390 --> 00:15:58.550
特别的指导我可以去看看

00:15:56.300 --> 00:16:00.080
在他们的界面上，看到所有的家伙

00:15:58.550 --> 00:16:03.320
我们拥有的，看到他们都是

00:16:00.080 --> 00:16:06.710
它们的状态是什么，如果我滚动并

00:16:03.320 --> 00:16:08.210
滚动并滚动并继续滚动我

00:16:06.710 --> 00:16:09.800
终于可以看到所有状态

00:16:08.210 --> 00:16:13.490
其中一个是红色的

00:16:09.800 --> 00:16:15.440
因此需要解决，但这是一个

00:16:13.490 --> 00:16:18.230
真实使用效率极低

00:16:15.440 --> 00:16:22.130
屏幕上的房地产为许多

00:16:18.230 --> 00:16:25.010
这么大的容量，所以我有一个想法

00:16:22.130 --> 00:16:26.000
为什么不做和我一样的战术

00:16:25.010 --> 00:16:28.640
创建一个叫做无人机的东西

00:16:26.000 --> 00:16:30.470
聚合器并获得更高的效率

00:16:28.640 --> 00:16:33.770
有那红色的那边我还有更多

00:16:30.470 --> 00:16:35.120
一目了然地看到它

00:16:33.770 --> 00:16:37.790
如果一切都什么状态

00:16:35.120 --> 00:16:39.260
您知道每一个指南

00:16:37.790 --> 00:16:42.140
这些在这里有一个超链接

00:16:39.260 --> 00:16:46.340
可以轻松导航到指南

00:16:42.140 --> 00:16:48.350
本身我想看一下或者我可以看到

00:16:46.340 --> 00:16:52.370
如果可以，我可以单击图标

00:16:48.350 --> 00:16:54.650
在那并导航到无人机工作，这样

00:16:52.370 --> 00:16:57.560
这两件事都帮助我解决了这个问题

00:16:54.650 --> 00:16:58.850
东西，实际上我甚至可以跳

00:16:57.560 --> 00:17:05.180
超链接，以便我可以在

00:16:58.850 --> 00:17:07.160
我现在拥有的这两个应用程序

00:17:05.180 --> 00:17:19.579
去看看无人机聚合器的代码

00:17:07.160 --> 00:17:23.420
看看你的样子

00:17:19.579 --> 00:17:25.850
再次放大到这里，我们将使用

00:17:23.420 --> 00:17:27.770
追汤，这是我们要有时间

00:17:25.850 --> 00:17:31.700
叶，实际上就是这样

00:17:27.770 --> 00:17:33.050
那就是整个应用程序

00:17:31.700 --> 00:17:34.790
要做同样的技巧

00:17:33.050 --> 00:17:36.410
连接新闻周杰伦汤和连接

00:17:34.790 --> 00:17:38.180
并查找所有指南名称

00:17:36.410 --> 00:17:40.220
这样动态地更新

00:17:38.180 --> 00:17:41.360
我们发布新指南时的页面

00:17:40.220 --> 00:17:44.270
不必去更新此应用程序

00:17:41.360 --> 00:17:46.850
只需添加任何指南，它将

00:17:44.270 --> 00:17:47.660
做几乎相同的查询来获取

00:17:46.850 --> 00:17:50.480
家伙名单

00:17:47.660 --> 00:17:52.040
过滤掉所有的教程

00:17:50.480 --> 00:17:55.550
时间的转变是轻微的

00:17:52.040 --> 00:17:58.160
不同，我们在做相同的字符串

00:17:55.550 --> 00:18:01.580
欺骗去提取实际

00:17:58.160 --> 00:18:02.990
出现的指南名称，但在

00:18:01.580 --> 00:18:04.490
感觉我们不是，我们不会

00:18:02.990 --> 00:18:05.750
获得中心，我们不需要 Spring 社交

00:18:04.490 --> 00:18:07.880
 github，因为我们不在看

00:18:05.750 --> 00:18:10.130
 github上的问题，相反，我们基本上

00:18:07.880 --> 00:18:11.720
为每个项目建立两个链接

00:18:10.130 --> 00:18:14.570
去指南，想去它

00:18:11.720 --> 00:18:16.640
无人机看到我要慢跑下一个案例

00:18:14.570 --> 00:18:19.100
抓住href，我也要抓住

00:18:16.640 --> 00:18:21.320
标题文字，但在标题下方

00:18:19.100 --> 00:18:22.910
最后我要接受

00:18:21.320 --> 00:18:29.270
信息，我将其放入

00:18:22.910 --> 00:18:31.070
我的 Spring MVC模型对象现在在此

00:18:29.270 --> 00:18:33.320
案例我做了我想做的是我

00:18:31.070 --> 00:18:36.080
想要使用更多Groovy的超赞

00:18:33.320 --> 00:18:39.350
收集支持并基本接受

00:18:36.080 --> 00:18:41.330
拿完整的指南和清单

00:18:39.350 --> 00:18:44.360
它一直到四个块的末尾

00:18:41.330 --> 00:18:48.650
每行的指南，这是-它的整理

00:18:44.360 --> 00:18:52.370
操作并返回主视图

00:18:48.650 --> 00:19:00.500
所以所有这些都映射到我们的闪光灯上

00:18:52.370 --> 00:19:02.210
我去的路线

00:19:00.500 --> 00:19:03.830
看起来像

00:19:02.210 --> 00:19:05.870
另一个你又知道我正在使用

00:19:03.830 --> 00:19:08.630
 Spring 大同的相同样式表

00:19:05.870 --> 00:19:11.720
本身只是为了给它一个类似的外观

00:19:08.630 --> 00:19:13.430
感觉你知道你看到我在航行

00:19:11.720 --> 00:19:15.200
在顶部的导航栏上

00:19:13.430 --> 00:19:16.700
让您跳过以发布聚合器

00:19:15.200 --> 00:19:20.570
发出很棒的声音，让我跳回去

00:19:16.700 --> 00:19:23.660
在这里建立无人机聚合器

00:19:20.570 --> 00:19:25.730
在这种情况下，每个

00:19:23.660 --> 00:19:27.590
对于我建立的每一行，我将

00:19:25.730 --> 00:19:30.080
把那块切成薄片

00:19:27.590 --> 00:19:32.510
成一个块，然后我需要

00:19:30.080 --> 00:19:34.430
做一个分开的划分元素

00:19:32.510 --> 00:19:38.030
我要遍历大块

00:19:34.430 --> 00:19:40.430
现在再次获得每个单独的指南

00:19:38.030 --> 00:19:43.880
是我使用时间片作为我的地方

00:19:40.430 --> 00:19:45.770
模板引擎而不是JSP 

00:19:43.880 --> 00:19:47.150
需要一点时间增加

00:19:45.770 --> 00:19:49.820
掌握组装的窍门

00:19:47.150 --> 00:19:54.110
字符串，但是我基本上要在这里

00:19:49.820 --> 00:19:58.250
 Spring 与href融合在一起

00:19:54.110 --> 00:20:00.200
这将是指南的名称

00:19:58.250 --> 00:20:01.190
去，这是，我要插入

00:20:00.200 --> 00:20:06.200
它带有标题

00:20:01.190 --> 00:20:07.490
爱它，你知道下面我需要一个

00:20:06.200 --> 00:20:10.130
我要去的备用字符串

00:20:07.490 --> 00:20:11.630
在无人机上架设无人机

00:20:10.130 --> 00:20:13.010
 Spring 指南，并把名字

00:20:11.630 --> 00:20:15.860
指导，然后带您到最新

00:20:13.010 --> 00:20:18.110
工作或给我看最新的链接

00:20:15.860 --> 00:20:21.830
到最新的工作，我在里面

00:20:18.110 --> 00:20:24.140
将有一个图像对象，并在

00:20:21.830 --> 00:20:26.120
在这种情况下，我将链接到

00:20:24.140 --> 00:20:28.880
我们在指南本身上显示的图像

00:20:26.120 --> 00:20:33.320
在与状态点PNG相同的图像上

00:20:28.880 --> 00:20:34.820
文件，这是我用尽了所有选项

00:20:33.320 --> 00:20:36.440
希望能够喜欢

00:20:34.820 --> 00:20:37.640
让我加起来并把它放进去

00:20:36.440 --> 00:20:39.860
在页面顶部提醒

00:20:37.640 --> 00:20:42.170
说嘿，有个向导去检查一下

00:20:39.860 --> 00:20:45.620
不幸的是，他们使用相同的

00:20:42.170 --> 00:20:48.440
图像图标状态宝洁是否为红色

00:20:45.620 --> 00:20:50.390
或绿色，或者您知道上下，所以我可以

00:20:48.440 --> 00:20:55.700
在屏幕上显示它，但我看不懂

00:20:50.390 --> 00:20:59.470
这是视觉线索，但在

00:20:55.700 --> 00:21:01.610
简而言之，您可以去看看这段代码

00:20:59.470 --> 00:21:05.840
回到这里，告诉你它在哪里

00:21:01.610 --> 00:21:07.730
 github在我的github下面我死了的中心

00:21:05.840 --> 00:21:12.050
无人机聚集器的存储库

00:21:07.730 --> 00:21:14.570
而且你知道这就是如何

00:21:12.050 --> 00:21:16.070
拍拍快速工具克服

00:21:14.570 --> 00:21:17.420
你知道我现在的情况

00:21:16.070 --> 00:21:18.860
与发展中的人互动

00:21:17.420 --> 00:21:21.530
无人机，并要求他们改变他们的

00:21:18.860 --> 00:21:22.940
界面，但他们可能您知道我不知道

00:21:21.530 --> 00:21:24.410
有时间这样做，我可能他们有

00:21:22.940 --> 00:21:26.390
他们为什么要保留的不同原因

00:21:24.410 --> 00:21:30.230
这样我就可以混搭他们的

00:21:26.390 --> 00:21:32.450
数据并包括我自己的链接到您

00:21:30.230 --> 00:21:34.100
知道，在这里你可以弄清楚你可以

00:21:32.450 --> 00:21:39.500
签出代码并将其重新用于

00:21:34.100 --> 00:21:40.940
你自己的意思，现在我想展示一个

00:21:39.500 --> 00:21:46.850
我们做之前的更快速的例子

00:21:40.940 --> 00:21:48.980
我实际上一直在进行编码练习

00:21:46.850 --> 00:21:53.780
写一本书，最近叫做学习

00:21:48.980 --> 00:21:55.850
 spring boot ，那是我

00:21:53.780 --> 00:21:59.420
这些控制台输出很多

00:21:55.850 --> 00:22:01.190
您基本上会看到

00:21:59.420 --> 00:22:03.020
代码，我想要这本书的两部分

00:22:01.190 --> 00:22:04.760
把这个输出告诉你这是什么

00:22:03.020 --> 00:22:07.760
输出太宽，无法放入

00:22:04.760 --> 00:22:09.530
书，所以我想你知道我想

00:22:07.760 --> 00:22:12.220
基本上把所有这些东西拿走，但是让我

00:22:09.530 --> 00:22:15.200
剥去让我去掉这块

00:22:12.220 --> 00:22:17.450
从输出逐行输出

00:22:15.200 --> 00:22:23.210
此行超过80个字符的行将其修剪

00:22:17.450 --> 00:22:25.429
放下省略号，这样我

00:22:23.210 --> 00:22:27.110
是不是我而不是Python 

00:22:25.429 --> 00:22:29.809
直到我已经使用多年， 

00:22:27.110 --> 00:22:32.389
达到了 spring boot 和常规

00:22:29.809 --> 00:22:36.200
写这个，我基本上称之为

00:22:32.389 --> 00:22:38.269
清理启动控制台输出什么

00:22:36.200 --> 00:22:40.010
脚本正在执行的是实现 Spring 

00:22:38.269 --> 00:22:41.480
引导命令行运行程序，所以这是一个

00:22:40.010 --> 00:22:44.360
你知道这是一个命令行

00:22:41.480 --> 00:22:46.490
没有网络层的界面

00:22:44.360 --> 00:22:49.610
为此，这需要实施

00:22:46.490 --> 00:22:51.919
这将要运行的运行方法

00:22:49.610 --> 00:22:55.250
解析属性中的Java系统点

00:22:51.919 --> 00:22:56.899
然后逐行遍历

00:22:55.250 --> 00:22:58.730
这条线，以便我可以提取

00:22:56.899 --> 00:23:00.139
时间戳记是一个正则表达式

00:22:58.730 --> 00:23:04.580
解析时间戳记的开始

00:23:00.139 --> 00:23:06.200
如果是时间戳记，则为该行

00:23:04.580 --> 00:23:08.510
根据其大小知道是否

00:23:06.200 --> 00:23:10.730
如果超过80个字符，那么我就是

00:23:08.510 --> 00:23:12.230
将其修剪回77个字符， 

00:23:10.730 --> 00:23:17.179
最后的三个点，否则我会

00:23:12.230 --> 00:23:18.799
只需将整行换行，如果不是

00:23:17.179 --> 00:23:21.230
时间状态（如果不是时间戳记） 

00:23:18.799 --> 00:23:25.059
然后我要把它修剪下来

00:23:21.230 --> 00:23:25.059
看一下80个字符来修剪

00:23:25.360 --> 00:23:35.350
我，我要去测试，所以我已经

00:23:35.380 --> 00:23:40.580
让我挑一个更大的碎片

00:23:38.440 --> 00:23:42.409
好吧，这就像我的输出

00:23:40.580 --> 00:23:44.990
捕获了，这不适合

00:23:42.409 --> 00:23:48.350
屏幕，但我写了一点

00:23:44.990 --> 00:23:51.919
脚本，所以当我在这里运行它时

00:23:48.350 --> 00:23:54.169
这将启动Springwood CLI 

00:23:51.919 --> 00:23:56.029
在这里，它将是

00:23:54.169 --> 00:23:57.169
将接受该文件的输入，然后

00:23:56.029 --> 00:23:59.299
通过我的终端运行它

00:23:57.169 --> 00:24:00.919
要减少它，它将是没有

00:23:59.299 --> 00:24:02.269
超过80个字符，然后我

00:24:00.919 --> 00:24:05.659
可以将文本粘贴到我的

00:24:02.269 --> 00:24:07.490
现在手稿，他们只是最近

00:24:05.659 --> 00:24:09.710
今早发布的 spring boot 一

00:24:07.490 --> 00:24:12.799
点一个点四，他们增加了一个

00:24:09.710 --> 00:24:14.360
 II要求的功能可能不是

00:24:12.799 --> 00:24:16.760
在每个人的盘子上都非常大，但是

00:24:14.360 --> 00:24:19.669
对我来说重要的是他们增加了安静

00:24:16.760 --> 00:24:22.100
标记，以便在运行脚本时可以

00:24:19.669 --> 00:24:24.350
现在打开安静标志，它将

00:24:22.100 --> 00:24:27.530
没有打印出所有这些额外的日志

00:24:24.350 --> 00:24:30.049
 spring boot 本身的输出

00:24:27.530 --> 00:24:32.150
看到我所知道的关于传播的一切

00:24:30.049 --> 00:24:33.919
我想要的脚本就是脚本

00:24:32.150 --> 00:24:39.020
本身就是输出

00:24:33.919 --> 00:24:41.299
东西在这里，所以我渴望升级

00:24:39.020 --> 00:24:42.590
你知道，所以这是我去过的地方

00:24:41.299 --> 00:24:46.190
能够去写一些小工具

00:24:42.590 --> 00:24:49.130
现在支持自己的最后一个工具

00:24:46.190 --> 00:24:53.870
我们今天要看的是

00:24:49.130 --> 00:24:56.000
给我想要的Spring 监控器打电话

00:24:53.870 --> 00:24:58.130
描述实际可行的方案

00:24:56.000 --> 00:25:00.980
过去我们有一个系统

00:24:58.130 --> 00:25:02.690
会收集天气数据，我们会收集

00:25:00.980 --> 00:25:05.120
它像闪电一样周期性地循环

00:25:02.690 --> 00:25:07.130
数据将每30秒收集一次，并且

00:25:05.120 --> 00:25:10.039
多普勒雷达数据每2个收集一次

00:25:07.130 --> 00:25:11.360
分钟，我的工作是获取数据

00:25:10.039 --> 00:25:14.480
文件并将其移至其他天气

00:25:11.360 --> 00:25:16.700
自动站，但我会一直

00:25:14.480 --> 00:25:18.169
每次处理数据文件时记录日志

00:25:16.700 --> 00:25:20.030
我后来发现在路上

00:25:18.169 --> 00:25:23.600
我可以写一个脚本来拉

00:25:20.030 --> 00:25:24.890
记录文件并很好地检测我的队友是

00:25:23.600 --> 00:25:26.299
应该是每30秒一次，但我

00:25:24.890 --> 00:25:28.039
两分钟没见过

00:25:26.299 --> 00:25:29.750
所以我会建立一个屏幕

00:25:28.039 --> 00:25:31.039
当发生这种情况时变成红色，它将

00:25:29.750 --> 00:25:35.030
给我小费，我需要去修理

00:25:31.039 --> 00:25:37.900
过程，所以我要拉起

00:25:35.030 --> 00:25:40.549
这是一个要模拟的

00:25:37.900 --> 00:25:42.549
生产应用程序想象这个想象这个

00:25:40.549 --> 00:25:44.570
是您刚刚构建的完美应用

00:25:42.549 --> 00:25:48.020
你知道工作是收集东西

00:25:44.570 --> 00:25:49.760
就像闪电的数据，现在是 Spring 

00:25:48.020 --> 00:25:52.610
引导EOI应用程序，但不一定要

00:25:49.760 --> 00:25:55.150
可能是你知道可能会成为一个巨人

00:25:52.610 --> 00:25:58.070
您构建的整体生产应用程序

00:25:55.150 --> 00:26:01.400
出于演示目的，它正在使用

00:25:58.070 --> 00:26:04.070
 Springs调度支持， 

00:26:01.400 --> 00:26:05.840
计划每五秒钟执行一次

00:26:04.070 --> 00:26:07.190
基本上它将要做的一切

00:26:05.840 --> 00:26:09.169
这将注销一条消息并说

00:26:07.190 --> 00:26:11.750
模拟活动模拟活动

00:26:09.169 --> 00:26:15.020
在这里，我还有另一项工作

00:26:11.750 --> 00:26:16.190
每三秒钟发生一次

00:26:15.020 --> 00:26:17.960
将要生成天气预报

00:26:16.190 --> 00:26:19.580
现在每两秒钟你就知道这些

00:26:17.960 --> 00:26:26.120
数字是出于演示目的

00:26:19.580 --> 00:26:31.039
但让我去运行它给你一个想法

00:26:26.120 --> 00:26:32.240
如果我跑步我现在看起来像什么

00:26:31.039 --> 00:26:34.280
我的应用程序将要开始

00:26:32.240 --> 00:26:36.590
在右手边做

00:26:34.280 --> 00:26:39.409
屏幕正在打印出来，我们看到

00:26:36.590 --> 00:26:41.299
闪电数据天气预报

00:26:39.409 --> 00:26:44.360
登录它的流量，它也有一个

00:26:41.299 --> 00:26:45.649
左边印有我的名字

00:26:44.360 --> 00:26:47.179
感兴趣的是能够抓住

00:26:45.649 --> 00:26:49.309
时间戳并将其与现在比较以查看

00:26:47.179 --> 00:26:53.299
如果它是一个日期已经过了

00:26:49.309 --> 00:26:54.799
日期一号车我需要做一辆

00:26:53.299 --> 00:26:58.279
额外的步骤，这实际上是我想要的

00:26:54.799 --> 00:26:59.480
将其放入日志文件中，因此在这种情况下

00:26:58.279 --> 00:27:00.769
它将打印到控制台

00:26:59.480 --> 00:27:04.279
它将生成一个日志文件

00:27:00.769 --> 00:27:06.830
给我处理，所以我要让

00:27:04.279 --> 00:27:11.119
在后台运行，现在让我们

00:27:06.830 --> 00:27:15.799
看一下显示器应用程序的支持

00:27:11.119 --> 00:27:18.049
我想要构建的应用程序

00:27:15.799 --> 00:27:18.710
这个程序的我想去监视

00:27:18.049 --> 00:27:21.049
日志文件

00:27:18.710 --> 00:27:22.940
我想检测是否

00:27:21.049 --> 00:27:24.649
当前生成数据和含义

00:27:22.940 --> 00:27:26.809
系统处于良好状态，或者

00:27:24.649 --> 00:27:28.609
停止生成击败它的数据

00:27:26.809 --> 00:27:33.710
切换到不良状态并提示某人

00:27:28.609 --> 00:27:36.679
关闭，为此，我有这个应用程序

00:27:33.710 --> 00:27:38.419
其中的四个部分我不会

00:27:36.679 --> 00:27:39.409
详细了解导入

00:27:38.419 --> 00:27:40.879
这些基本上是

00:27:39.409 --> 00:27:43.609
我需要使用这些东西的进口

00:27:40.879 --> 00:27:47.029
在这里，我想谈的第一部分

00:27:43.609 --> 00:27:48.859
基本上我是显示器

00:27:47.029 --> 00:27:51.950
试图找出一种方法来拉日志

00:27:48.859 --> 00:27:53.749
文件，并且需要添加新行

00:27:51.950 --> 00:27:55.879
发生在我身上，也许

00:27:53.749 --> 00:27:57.769
 Spring Integration ，并具有这种能力

00:27:55.879 --> 00:27:59.419
所以我打电话给加里·罗素（Gary Russell） 

00:27:57.769 --> 00:28:00.769
 Spring 是 Spring 的先导

00:27:59.419 --> 00:28:03.080
整合，我们聊了一下

00:28:00.769 --> 00:28:04.820
五分钟，他告诉我

00:28:03.080 --> 00:28:07.100
哦，你需要的是这个小家伙

00:28:04.820 --> 00:28:12.320
操作系统委派文件尾消息

00:28:07.100 --> 00:28:14.179
生产者，您创建实例

00:28:12.320 --> 00:28:16.700
配置将要观看的文件

00:28:14.179 --> 00:28:18.590
这里我将其指向发送日志

00:28:16.700 --> 00:28:20.869
当我们说话的时候

00:28:18.590 --> 00:28:24.350
并且您还配置了它的输出

00:28:20.869 --> 00:28:26.570
通道，所以在这里我将其指向尾巴

00:28:24.350 --> 00:28:30.320
Spring 整合通道

00:28:26.570 --> 00:28:33.649
直接渠道，然后我返回

00:28:30.320 --> 00:28:38.509
光束被应用拾取

00:28:33.649 --> 00:28:41.989
上下文，所以所有这些类工作

00:28:38.509 --> 00:28:43.669
监视要添加的新行

00:28:41.989 --> 00:28:45.980
到日志文件以及发生的情况

00:28:43.669 --> 00:28:50.720
发布到 Spring 集成

00:28:45.980 --> 00:28:54.440
现在下游通道我有另一个

00:28:50.720 --> 00:28:54.830
我要去的东西和监控服务

00:28:54.440 --> 00:28:56.330
的种类

00:28:54.830 --> 00:28:58.970
大概不做

00:28:56.330 --> 00:29:01.039
在这里太混乱了，无法跟随我们的流程

00:28:58.970 --> 00:29:03.649
在这里行动，他们以前是

00:29:01.039 --> 00:29:05.809
在以下位置发布日志文件的新行

00:29:03.649 --> 00:29:08.120
另一端的尾部通道

00:29:05.809 --> 00:29:10.070
我这里有一个标记的方法

00:29:08.120 --> 00:29:12.169
作为 Spring Integration 服务

00:29:10.070 --> 00:29:14.720
激活剂，它正在听尾巴

00:29:12.169 --> 00:29:16.370
渠道，它将基本上处理

00:29:14.720 --> 00:29:18.250
它得到的是

00:29:16.370 --> 00:29:21.200
信息就是那一行数据

00:29:18.250 --> 00:29:22.640
并使用一些常规的常规字符串

00:29:21.200 --> 00:29:24.320
魔术，我要测试，说有

00:29:22.640 --> 00:29:27.350
闪电般的收容物

00:29:24.320 --> 00:29:29.450
数据，如果这样我想计算

00:29:27.350 --> 00:29:33.169
时间戳记在左侧

00:29:29.450 --> 00:29:35.059
在这种情况下，我这个程序的字符串

00:29:33.169 --> 00:29:37.039
我正在使用去时间而不是Java 

00:29:35.059 --> 00:29:40.250
标准时间API是因为它们

00:29:37.039 --> 00:29:41.899
这么容易使用

00:29:40.250 --> 00:29:43.460
我将继续解析每个

00:29:41.899 --> 00:29:46.639
我最近一次收到新消息的时间

00:29:43.460 --> 00:29:50.840
值将更新并不断更新

00:29:46.639 --> 00:29:52.760
现在有任何单独威胁的时间戳

00:29:50.840 --> 00:29:55.220
动作我再次使用Spring 

00:29:52.760 --> 00:29:57.169
安排支持，我有一个

00:29:55.220 --> 00:30:00.620
在这里运行的预定任务

00:29:57.169 --> 00:30:01.760
 5秒钟要检查一下

00:30:00.620 --> 00:30:03.679
它会去做它会去计算

00:30:01.760 --> 00:30:05.779
当前时间戳是多少，然后

00:30:03.679 --> 00:30:08.269
它会计算出差异

00:30:05.779 --> 00:30:10.429
从现在到最新的

00:30:08.269 --> 00:30:13.580
从日志中读取了闪电数据

00:30:10.429 --> 00:30:16.909
归档说如果已经超过

00:30:13.580 --> 00:30:20.120
我们需要10秒钟来生成警报

00:30:16.909 --> 00:30:22.880
你知道这很不好，我们

00:30:20.120 --> 00:30:24.649
要发布它，我们要

00:30:22.880 --> 00:30:28.580
转换并发送给主题

00:30:24.649 --> 00:30:30.260
状态持续时间少于

00:30:28.580 --> 00:30:34.639
现在要说10秒

00:30:30.260 --> 00:30:37.070
好，然后将其发送给同一主题，我可能会

00:30:34.639 --> 00:30:38.299
想知道主题是什么

00:30:37.070 --> 00:30:40.909
状态这是什么样的

00:30:38.299 --> 00:30:42.799
如果我向后滚动，模板就是这个

00:30:40.909 --> 00:30:45.559
看到我们有一个发送的消息传递模板

00:30:42.799 --> 00:30:48.380
并且发送的消息传递模板来自

00:30:45.559 --> 00:30:51.529
 Springs Spring Framework WebSockets 

00:30:48.380 --> 00:30:55.039
支持层说

00:30:51.529 --> 00:30:58.010
基本上我们有一类

00:30:55.039 --> 00:30:59.269
集成我们有一些WebSocket 

00:30:58.010 --> 00:31:01.669
支持，所以我们要做的是

00:30:59.269 --> 00:31:04.669
将这些消息发布到WebSocket 

00:31:01.669 --> 00:31:07.669
稍后我们将有一个网络层

00:31:04.669 --> 00:31:08.750
钩住并可以获取消息

00:31:07.669 --> 00:31:11.570
推出动态

00:31:08.750 --> 00:31:14.210
请我其他一些东西

00:31:11.570 --> 00:31:16.730
在这里像任务计划程序一样

00:31:14.210 --> 00:31:18.620
配置与此事实有关的任务

00:31:16.730 --> 00:31:20.630
当你有一个以上

00:31:18.620 --> 00:31:23.120
应用上下文中的组件

00:31:20.630 --> 00:31:25.190
参与任务调度Spring 

00:31:23.120 --> 00:31:27.590
框架无法为您解决问题

00:31:25.190 --> 00:31:29.440
你必须弄清楚如何

00:31:27.590 --> 00:31:33.020
配置它，这实际上告诉

00:31:29.440 --> 00:31:37.910
 WebSocket和计划注释

00:31:33.020 --> 00:31:39.530
现在都使用相同的任务计划程序

00:31:37.910 --> 00:31:41.120
我要做的就是跳到

00:31:39.530 --> 00:31:42.680
在这里的底部，然后继续前进

00:31:41.120 --> 00:31:46.850
因为我们正在谈论推动

00:31:42.680 --> 00:31:49.760
最后通过WebSocket发出消息

00:31:46.850 --> 00:31:53.860
类是我的WebSocket配置，如果您

00:31:49.760 --> 00:31:53.860
实际去spring dot io /指南

00:31:56.590 --> 00:32:03.220
当您以及如果您搜索WebSocket 

00:32:05.980 --> 00:32:10.730
您会发现实际上可以行走的指南

00:32:08.240 --> 00:32:12.170
您将了解如何设置WebSocket和

00:32:10.730 --> 00:32:13.850
它甚至谈论停止消息传递

00:32:12.170 --> 00:32:17.780
协议，我将在这里进一步提及

00:32:13.850 --> 00:32:20.020
在本质上，我使用该指南来

00:32:17.780 --> 00:32:22.160
帮助您在此处编写这段代码

00:32:20.020 --> 00:32:24.110
我们将再次使用，我们将使用

00:32:22.160 --> 00:32:25.880
时髦的葡萄，我们需要一些

00:32:24.110 --> 00:32:30.020
在浏览器中实现WebSocket支持

00:32:25.880 --> 00:32:32.900
我们需要一些袜子来吸KS 

00:32:30.020 --> 00:32:34.910
提供一个优美的后备，以防

00:32:32.900 --> 00:32:36.440
浏览器没有WebSocket存储

00:32:34.910 --> 00:32:42.920
可以退回并仍然提供相同的

00:32:36.440 --> 00:32:44.540
效果，在这种情况下，我基本上

00:32:42.920 --> 00:32:46.670
配置事物并谈论

00:32:44.540 --> 00:32:48.620
经纪人准备与任何事情谈

00:32:46.670 --> 00:32:50.510
 Flash主题，因此您可以拥有一个频道

00:32:48.620 --> 00:32:52.090
您可以有50个不同的频道

00:32:50.510 --> 00:32:56.750
本质上，这只是其一部分

00:32:52.090 --> 00:32:58.970
协议现在适用于您，您知道

00:32:56.750 --> 00:33:00.380
斜杠应用程序是

00:32:58.970 --> 00:33:01.820
网络希望将某些东西推送到

00:33:00.380 --> 00:33:05.510
服务器端服务器正在查看

00:33:01.820 --> 00:33:07.400
斜杠应用程序，在这里我可以找到它

00:33:05.510 --> 00:33:10.310
材料，然后在这里有一些

00:33:07.400 --> 00:33:12.740
配置和Teletoon不仅

00:33:10.310 --> 00:33:15.440
注册一个WebSocket但还包括

00:33:12.740 --> 00:33:18.470
袜子乔斯的后备支持，它不应该

00:33:15.440 --> 00:33:20.179
情况需要它，你可以找到

00:33:18.470 --> 00:33:21.860
关于所有内容的详细说明

00:33:20.179 --> 00:33:22.720
这些设置意味着

00:33:21.860 --> 00:33:27.549
开始指导

00:33:22.720 --> 00:33:29.950
拉起我要回到这里

00:33:27.549 --> 00:33:31.240
显示最后两位在这里

00:33:29.950 --> 00:33:34.450
基本上是一个简单的spring MVC控制器

00:33:31.240 --> 00:33:35.950
然后我将返回

00:33:34.450 --> 00:33:37.710
闪到闪光灯，我要去

00:33:35.950 --> 00:33:39.880
看一下索引模板，然后

00:33:37.710 --> 00:33:41.710
应该有我的连接代码和

00:33:39.880 --> 00:33:43.809
然后终于有了一个小的POJO 

00:33:41.710 --> 00:33:49.120
这里只是在定义

00:33:43.809 --> 00:33:51.340
现在有13个说明的警报

00:33:49.120 --> 00:33:54.250
那是对他们的感谢

00:33:51.340 --> 00:33:55.809
其他样品是，但它包含一个

00:33:54.250 --> 00:33:56.950
电源包中的一堆功能

00:33:55.809 --> 00:33:58.570
现在整个我都拥有了

00:33:56.950 --> 00:34:00.600
运行它正在生成的模拟器

00:33:58.570 --> 00:34:06.179
东西，但现在我认为是时候运行了

00:34:00.600 --> 00:34:12.940
我们刚刚介绍的监控工具

00:34:06.179 --> 00:34:21.790
我们要把它火起来，让我们去

00:34:12.940 --> 00:34:24.450
浏览器在这里本地主机刷新它，所以

00:34:21.790 --> 00:34:28.629
在这里，我们显示了一条消息， 

00:34:24.450 --> 00:34:30.580
默认为零，更多流量

00:34:28.629 --> 00:34:36.129
碰巧我们可以期待此页面

00:34:30.580 --> 00:34:40.260
到目前为止，动态更新

00:34:36.129 --> 00:34:40.260
没有零秒的时间

00:34:56.310 --> 00:35:05.940
看到在后台运行

00:34:59.339 --> 00:35:05.940
我们没有看到我们在这里重新启动

00:35:13.590 --> 00:35:26.790
确保我没有缠绵

00:35:15.860 --> 00:35:28.020
在这里打开页面，好吧，让我们

00:35:26.790 --> 00:35:33.870
看到你需要刷新

00:35:28.020 --> 00:35:38.550
现在一切都很好地证明了

00:35:33.870 --> 00:35:40.050
这是现场演示，所以请快速演示

00:35:38.550 --> 00:35:43.110
没有失败

00:35:40.050 --> 00:35:45.090
好吧，确切地说，你知道

00:35:43.110 --> 00:35:46.920
失败吧，走吧，杀了吧，走吧

00:35:45.090 --> 00:35:50.240
杀死模拟器让我们想象一下

00:35:46.920 --> 00:35:53.220
生产系统死于悲惨的死亡， 

00:35:50.240 --> 00:35:55.770
但没人在那里看到它，因为

00:35:53.220 --> 00:35:59.550
我们正在看控制台，所以在这里

00:35:55.770 --> 00:36:01.680
从4秒增加到9秒， 

00:35:59.550 --> 00:36:03.780
现在到了14秒，这很糟糕

00:36:01.680 --> 00:36:06.060
所以这可能是屏幕

00:36:03.780 --> 00:36:07.770
在操作中的投影仪上

00:36:06.060 --> 00:36:10.110
中心和正确的是客户

00:36:07.770 --> 00:36:12.150
拜访您就知道它变成红色了， 

00:36:10.110 --> 00:36:14.490
整个事情是你可以说嘿我们

00:36:12.150 --> 00:36:15.930
最重要的是，你知道你得到了你的

00:36:14.490 --> 00:36:18.060
地板小组能够奔波

00:36:15.930 --> 00:36:19.860
找出他们出了什么问题

00:36:18.060 --> 00:36:27.540
修补了他们换出的系统

00:36:19.860 --> 00:36:29.220
服务器并触发备份你知道

00:36:27.540 --> 00:36:30.810
不知道你用我的双手

00:36:29.220 --> 00:36:32.310
远离键盘，它会掉下去

00:36:30.810 --> 00:36:37.350
回到绿色状态

00:36:32.310 --> 00:36:40.080
一切都很好，所以你知道这个权利

00:36:37.350 --> 00:36:41.670
在这里你知道我基本上抓住了很多

00:36:40.080 --> 00:36:43.830
不同的组件，并把它们

00:36:41.670 --> 00:36:45.510
在一起，我喜欢的是

00:36:43.830 --> 00:36:47.310
好吧，我知道spring整合有什么用

00:36:45.510 --> 00:36:49.980
我知道你知道我会如何创造

00:36:47.310 --> 00:36:52.410
一些简单的pojos包含我的数据， 

00:36:49.980 --> 00:36:55.680
我喜欢警报记录，我知道

00:36:52.410 --> 00:36:57.720
如何构建一些Spring MVC页面以及

00:36:55.680 --> 00:36:58.830
现在我们有了WebSocket支持

00:36:57.720 --> 00:36:59.910
一些你知道的，我能够弄清楚

00:36:58.830 --> 00:37:02.010
找出如何使用，有指南

00:36:59.910 --> 00:37:03.660
我可以将所有内容一起滚动

00:37:02.010 --> 00:37:05.370
使用工具集构建支持工具

00:37:03.660 --> 00:37:07.920
我已经知道但我不是

00:37:05.370 --> 00:37:09.810
用我的角度思考，我需要一个

00:37:07.920 --> 00:37:11.220
构建文件是我要使用Gradle吗？ 

00:37:09.810 --> 00:37:14.760
将要使用的Maven我不需要使用

00:37:11.220 --> 00:37:16.740
要么就是这个，我就能

00:37:14.760 --> 00:37:19.650
你知道做一些弦乐吗

00:37:16.740 --> 00:37:21.570
使用Groovy操纵客厅魔术

00:37:19.650 --> 00:37:24.170
如果我试图用Java编写

00:37:21.570 --> 00:37:24.170
拉我的头发

00:37:24.180 --> 00:37:40.020
所以当这里有滑倒时

00:37:34.279 --> 00:37:41.730
其中一些事情，你知道什么

00:37:40.020 --> 00:37:44.099
这强调了您的选择

00:37:41.730 --> 00:37:46.260
也许你没有，也许你开始

00:37:44.099 --> 00:37:48.869
意识到这是最重要的支持工具

00:37:46.260 --> 00:37:51.359
但这是一个获得足够爱的支持工具

00:37:48.869 --> 00:37:53.430
和关注，您可以建立它

00:37:51.359 --> 00:37:55.589
实际上可能会成为微服务

00:37:53.430 --> 00:37:57.150
加入生产工具套件，并

00:37:55.589 --> 00:37:58.829
基本上被拉到伞下

00:37:57.150 --> 00:38:01.559
人们基本上可以将其视为

00:37:58.829 --> 00:38:04.049
前几天我看到的应用程序的幻灯片

00:38:01.559 --> 00:38:05.579
显示了单片应用程序和微型

00:38:04.049 --> 00:38:07.109
服务，而且奇怪的是

00:38:05.579 --> 00:38:08.760
说我的车轮都一样

00:38:07.109 --> 00:38:11.460
中心只是是否有一个

00:38:08.760 --> 00:38:14.520
周围是否有一个大盒子，或者是否

00:38:11.460 --> 00:38:16.710
都是分开的过程，但都是一样的

00:38:14.520 --> 00:38:19.619
基本概念是一堆

00:38:16.710 --> 00:38:25.260
共同支持的服务

00:38:19.619 --> 00:38:28.950
您知道的系统来审查收益

00:38:25.260 --> 00:38:31.319
在这里使用 spring boot 是你

00:38:28.950 --> 00:38:33.150
我知道如果我

00:38:31.319 --> 00:38:34.559
坐在OP中心我不工作

00:38:33.150 --> 00:38:35.789
在完美的应用程序上，所以我想要一些东西

00:38:34.559 --> 00:38:38.579
那会帮助我加快我的速度

00:38:35.789 --> 00:38:40.829
开发时间我肯定知道

00:38:38.579 --> 00:38:42.599
当您查看时，我使用的是经过验证的堆栈

00:38:40.829 --> 00:38:45.869
 Spring Framework 的数学采用

00:38:42.599 --> 00:38:49.710
然后看看人气和

00:38:45.869 --> 00:38:51.329
 Apache Tomcat的兴起和下载

00:38:49.710 --> 00:38:55.559
像 Spring 佛陀的利率

00:38:51.329 --> 00:38:56.579
惊人的超越它

00:38:55.559 --> 00:39:00.270
这些是这些产品

00:38:56.579 --> 00:39:02.099
现在得到了坚实团队的支持

00:39:00.270 --> 00:39:04.619
 Tomcat已经出很多年了，但是你

00:39:02.099 --> 00:39:06.150
知道那就是我们的全部发展

00:39:04.619 --> 00:39:08.910
你知道 Spring 队在那里

00:39:06.150 --> 00:39:12.059
总是发动新的坚如磐石

00:39:08.910 --> 00:39:13.410
代码，这里最大的消息是我得到了

00:39:12.059 --> 00:39:16.410
完成编写这些支持工具

00:39:13.410 --> 00:39:18.450
更快，所以当我这样做时，我就可以走了

00:39:16.410 --> 00:39:21.539
回到我的日常工作，并建立更多

00:39:18.450 --> 00:39:33.140
那些完美的应用程序，或者希望我能看到

00:39:21.539 --> 00:39:35.090
如果闪电会击中两次

00:39:33.140 --> 00:39:42.710
好吧，我们有很多很好的问题

00:39:35.090 --> 00:39:45.830
做好准备，好，让我们来看看第一个

00:39:42.710 --> 00:39:47.300
 um Jonathan问他好奇的时候

00:39:45.830 --> 00:39:49.850
在那个学习 Spring 发布日期

00:39:47.300 --> 00:39:51.410
您正在研究的入门书

00:39:49.850 --> 00:39:52.430
想知道什么时候会好奇

00:39:51.410 --> 00:39:55.130
您正在考虑的框架

00:39:52.430 --> 00:39:58.540
释放，他们告诉我了

00:39:55.130 --> 00:40:01.940
日期大约是十一月

00:39:58.540 --> 00:40:03.860
好吧，这是一个便宜的镜头，但是你可以

00:40:01.940 --> 00:40:05.840
你可以监视我尝试写博客

00:40:03.860 --> 00:40:07.070
经常，如果你去我的

00:40:05.840 --> 00:40:09.620
个人博客网站

00:40:07.070 --> 00:40:11.150
我不是那么有可读性

00:40:09.620 --> 00:40:14.990
类别并跟踪我的足迹

00:40:11.150 --> 00:40:16.220
进度，但紧迫

00:40:14.990 --> 00:40:21.430
周转，你不会等待两个

00:40:16.220 --> 00:40:21.430
年这本书出来什么

00:40:21.490 --> 00:40:26.840
花费了一些山峰和类似的东西

00:40:24.380 --> 00:40:28.250
那个，但如此希望我希望

00:40:26.840 --> 00:40:29.720
他们一旦我 Spring 就会完成

00:40:28.250 --> 00:40:32.650
可能足以预复印，但

00:40:29.720 --> 00:40:35.450
不幸的是不是这样啊

00:40:32.650 --> 00:40:40.210
好吧，我们只需要分发

00:40:35.450 --> 00:40:43.280
 spring data 手册的免费副本um 

00:40:40.210 --> 00:40:46.910
让我们看看好吧，还有一个问题

00:40:43.280 --> 00:40:49.880
丹尼尔，他问是否有可能

00:40:46.910 --> 00:40:52.760
参数化计划的注释

00:40:49.880 --> 00:40:55.340
无需声明使用XML 

00:40:52.760 --> 00:40:56.840
为此，它需要一个cron表达式，但是

00:40:55.340 --> 00:40:58.340
必须在编译时确定

00:40:56.840 --> 00:41:03.350
想知道我是否可以使用表达

00:40:58.340 --> 00:41:04.910
定义一个我不确定的配置文件

00:41:03.350 --> 00:41:12.770
关于那是一个非常好的

00:41:04.910 --> 00:41:14.470
问题我有和

00:41:12.770 --> 00:41:17.630
你有一个非常快速的问题

00:41:14.470 --> 00:41:19.340
有人说嘿怎么办

00:41:17.630 --> 00:41:21.920
我们正在使用这些应用程序文档Ruby 

00:41:19.340 --> 00:41:23.690
提交Spring Shell，我回应

00:41:21.920 --> 00:41:25.280
通过说它是引导命令行

00:41:23.690 --> 00:41:26.480
我相信的界面是

00:41:25.280 --> 00:41:30.890
对

00:41:26.480 --> 00:41:31.520
嗯，这是嗯，我正在开会

00:41:30.890 --> 00:41:35.390
这个呃地球

00:41:31.520 --> 00:41:39.370
是的，是的，我实际上还没有

00:41:35.390 --> 00:41:42.320
使用GD M，我们有那些嗯

00:41:39.370 --> 00:41:45.130
我正在使用G VM进行安装

00:41:42.320 --> 00:41:46.339
所谓的Spring 启动工具和

00:41:45.130 --> 00:41:47.989
的

00:41:46.339 --> 00:41:51.170
实际命令的名称称为

00:41:47.989 --> 00:41:53.420
 Spring ，但也有自制酒

00:41:51.170 --> 00:41:57.349
食谱，如果你想要的话，你可以冲泡

00:41:53.420 --> 00:42:02.900
装书 Spring 食品应该说

00:41:57.349 --> 00:42:07.849
这是自来水我想这是一种

00:42:02.900 --> 00:42:09.829
是的，你会拍拍一下

00:42:07.849 --> 00:42:14.920
然后在Mac上酿造

00:42:09.829 --> 00:42:17.449
安装 spring boot ，酿造是

00:42:14.920 --> 00:42:19.969
受欢迎的包装经理，但

00:42:17.449 --> 00:42:30.640
 GBM在很多平台上都可以使用

00:42:19.969 --> 00:42:39.319
安装gbms单击长边

00:42:30.640 --> 00:42:43.309
反正JDM工具网好吧，我错了

00:42:39.319 --> 00:42:45.259
有错别字，这是这个

00:42:43.309 --> 00:42:48.380
是groovy社区的流行工具

00:42:45.259 --> 00:42:49.969
因为你可以管理很多事情

00:42:48.380 --> 00:42:51.319
是您的产品清单

00:42:49.969 --> 00:42:53.630
可以通过它，它是新版本

00:42:51.319 --> 00:42:55.640
有了这些工具，您的gvm将会

00:42:53.630 --> 00:42:58.089
您可以下载安装的更新

00:42:55.640 --> 00:43:00.709
像Grails groovy Gradle和

00:42:58.089 --> 00:43:02.900
通常在新 Spring 的24小时内

00:43:00.709 --> 00:43:04.880
引导释放，他们在这里获取CLI 

00:43:02.900 --> 00:43:07.249
现在这不是去的地方

00:43:04.880 --> 00:43:08.449
像char文件（如果您使用的是

00:43:07.249 --> 00:43:10.789
您知道是否要建立产品

00:43:08.449 --> 00:43:13.579
 Spring Boot应用程序和使用Maven 

00:43:10.789 --> 00:43:17.329
或Gradle获取启动库

00:43:13.579 --> 00:43:19.849
是要获得 spring boot CLI应用程序和一个

00:43:17.329 --> 00:43:24.650
列出支持的位置

00:43:19.849 --> 00:43:26.689
平台，但有陷阱，所以你

00:43:24.650 --> 00:43:30.499
所以你实际上是在使用 spring boot 

00:43:26.689 --> 00:43:33.140
 CLI启动这些你知道的点

00:43:30.499 --> 00:43:38.269
应用程序文件完全可以涉及

00:43:33.140 --> 00:43:40.429
对不起，你知道的是什么

00:43:38.269 --> 00:43:41.989
充满了很多功能，我

00:43:40.429 --> 00:43:43.640
使用跑步，因为它让我

00:43:41.989 --> 00:43:46.249
原型和运行的东西，但实际上

00:43:43.640 --> 00:43:48.799
有能力拿走你的工具

00:43:46.249 --> 00:43:51.259
把它变成可执行的jar文件

00:43:48.799 --> 00:43:53.119
敲定支持应用程序后， 

00:43:51.259 --> 00:43:54.799
可以将其转换为可执行的jar文件

00:43:53.119 --> 00:43:56.329
将其粘贴在拇指驱动器上并执行

00:43:54.799 --> 00:43:57.940
您的运营中心，并将其部署到任何地方

00:43:56.329 --> 00:44:03.950
你找到一个JVM 

00:43:57.940 --> 00:44:06.830
很好，很好，回到丹尼尔斯

00:44:03.950 --> 00:44:12.020
关于参数化的问题

00:44:06.830 --> 00:44:13.310
日程注释Joanne您重复

00:44:12.020 --> 00:44:15.020
这个问题真的很抱歉，如果你

00:44:13.310 --> 00:44:16.580
接受，我想你的问题是

00:44:15.020 --> 00:44:20.980
有可能

00:44:16.580 --> 00:44:24.020
参数化这个，我不知道如何

00:44:20.980 --> 00:44:26.860
使用他想使用的表达

00:44:24.020 --> 00:44:30.110
表达式以在配置文件中找到它

00:44:26.860 --> 00:44:31.970
是的，我不知道那个我

00:44:30.110 --> 00:44:33.830
不要以为他们在谈论

00:44:31.970 --> 00:44:38.210
该指南，我们有一个讲

00:44:33.830 --> 00:44:39.770
关于安排我不记得的任务

00:44:38.210 --> 00:44:43.160
被提及为一种选择，我们可能

00:44:39.770 --> 00:44:46.850
有两个打算采取行动尝试

00:44:43.160 --> 00:44:50.540
回答我在这里想的

00:44:46.850 --> 00:44:52.010
他们在这里谈论的超链接

00:44:50.540 --> 00:44:54.140
讨论日程安排的三个选项

00:44:52.010 --> 00:44:57.440
固定利率固定时延或cron 

00:44:54.140 --> 00:45:00.770
表达它带你去的权利

00:44:57.440 --> 00:45:02.840
 Spring Java Docs谈论它，但是

00:45:00.770 --> 00:45:04.880
旨在对Jurgen或ping通

00:45:02.840 --> 00:45:07.160
戴夫苹果酒问他们是否

00:45:04.880 --> 00:45:08.060
可从属性文件中注入，因为

00:45:07.160 --> 00:45:13.000
我的意思是说

00:45:08.060 --> 00:45:16.940
我的书很方便，但我不这样做

00:45:13.000 --> 00:45:20.530
丹尼尔也许丹尼尔也许只是跟随

00:45:16.940 --> 00:45:23.600
格雷格在一个Twitter上，你们可以

00:45:20.530 --> 00:45:23.990
一旦确定了链接一次

00:45:23.600 --> 00:45:29.800
回答

00:45:23.990 --> 00:45:35.090
我是说那个细节，让我们来看看

00:45:29.800 --> 00:45:36.650
是的，我想是克里斯托弗·史密斯

00:45:35.090 --> 00:45:37.970
您非常喜欢弹出gbm 

00:45:36.650 --> 00:45:38.390
好吧，我只是没有没看到

00:45:37.970 --> 00:45:45.650
之前

00:45:38.390 --> 00:45:47.360
嗯，好的，让我们来看看克里斯托弗

00:45:45.650 --> 00:45:49.250
方式还评论说，嘿

00:45:47.360 --> 00:45:50.930
处理程序的源直接解析

00:45:49.250 --> 00:45:56.450
批注值量化表达式

00:45:50.930 --> 00:46:01.550
没有 Spring Expression Language ，仅供参考

00:45:56.450 --> 00:46:04.670
嗯，但是很酷，有一些讨论在进行

00:46:01.550 --> 00:46:06.920
在这里，另一张照片，另一张

00:46:04.670 --> 00:46:09.500
家伙本说你可以参数

00:46:06.920 --> 00:46:11.170
与其他任何东西一样的con值

00:46:09.500 --> 00:46:13.270
从属性中拼写表达，以便

00:46:11.170 --> 00:46:15.700
听起来好像是这个

00:46:13.270 --> 00:46:19.390
一个人在泡沫上，你知道，让我们

00:46:15.700 --> 00:46:24.369
从

00:46:19.390 --> 00:46:27.099
大卫，当然还有你，你

00:46:24.369 --> 00:46:29.530
知道先生们只要关注Twitter 

00:46:27.099 --> 00:46:32.490
在Twitter上关注Greg，他将发布

00:46:29.530 --> 00:46:34.720
答案就可以了

00:46:32.490 --> 00:46:36.490
否则，您可以与Greg联系

00:46:34.720 --> 00:46:37.809
通过您在这里看到的各种方法

00:46:36.490 --> 00:46:40.720
在这张幻灯片上

00:46:37.809 --> 00:46:43.960
嗯，我只想吃这个

00:46:40.720 --> 00:46:45.579
机会让您知道这是

00:46:43.960 --> 00:46:48.760
如果您要分享，将被录制

00:46:45.579 --> 00:46:50.349
与你的同事一起知道过去

00:46:48.760 --> 00:46:54.130
在办公室周围，我们将发布它

00:46:50.349 --> 00:46:57.000
一如既往地在YouTube上发布，如果您愿意

00:46:54.130 --> 00:47:02.079
通知何时可用

00:46:57.000 --> 00:47:05.730
抓住你知道的东西

00:47:02.079 --> 00:47:08.710
 IO / blog订阅原子供稿

00:47:05.730 --> 00:47:10.540
或者您可以转到 Spring 音频/视频，如果

00:47:08.710 --> 00:47:12.069
你只想要视频，因为那是

00:47:10.540 --> 00:47:14.260
您可以订阅的YouTube频道

00:47:12.069 --> 00:47:15.430
那里的YouTube频道

00:47:14.260 --> 00:47:17.290
订阅博客，尽管您会得到

00:47:15.430 --> 00:47:19.900
一堆其他很棒的内容

00:47:17.290 --> 00:47:21.640
所有工程博客春一

00:47:19.900 --> 00:47:24.700
会话重播和etcetra etcetra 

00:47:21.640 --> 00:47:26.890
至少不了解这类新闻

00:47:24.700 --> 00:47:29.710
如果您有很多价值

00:47:26.890 --> 00:47:34.349
如果您有兴趣检查一下

00:47:29.710 --> 00:47:36.819
很好，只想邀请您参加

00:47:34.349 --> 00:47:39.460
加入我们即将举行的一些在线研讨会

00:47:36.819 --> 00:47:42.490
这个月有一些很棒的东西

00:47:39.460 --> 00:47:46.599
以及，我们将休息一下

00:47:42.490 --> 00:47:48.640
夏季的八月

00:47:46.599 --> 00:47:52.180
放假，这样他们就不会参加任何网络研讨会了

00:47:48.640 --> 00:47:58.540
 8月，但请务必回来， 

00:47:52.180 --> 00:48:00.640
加入我们，我们将拥有一个

00:47:58.540 --> 00:48:05.020
接下来的几场网络研讨会的数量

00:48:00.640 --> 00:48:07.540
接下来的几周，这里是

00:48:05.020 --> 00:48:09.760
他们，如果你从未听说过这个家伙

00:48:07.540 --> 00:48:12.309
他真的很好他叫迈克尔

00:48:09.760 --> 00:48:14.799
布卢斯（Bluth）他将谈论

00:48:12.309 --> 00:48:16.930
你好，他如何为 Spring 辩护

00:48:14.799 --> 00:48:19.240
对他的客户来说，他是独立的

00:48:16.930 --> 00:48:21.280
顾问，他在外面

00:48:19.240 --> 00:48:24.190
扬声器电路很多，并且一直在

00:48:21.280 --> 00:48:24.850
 7月22日，所以我不会走那么远

00:48:24.190 --> 00:48:27.700
就像是

00:48:24.850 --> 00:48:29.710
 Spring 的商业案例，但它

00:48:27.700 --> 00:48:31.210
确实使您知道一项伟大的技术

00:48:29.710 --> 00:48:34.270
给你带来好处给你带来好处

00:48:31.210 --> 00:48:35.950
关于如何提出理由的弹药

00:48:34.270 --> 00:48:37.540
 Spring 有几个业务要点

00:48:35.950 --> 00:48:42.550
有点撒在里面，所以在

00:48:37.540 --> 00:48:45.970
从7月22日至7月15日

00:48:42.550 --> 00:48:48.850
绝对疯狂的项目文件这些

00:48:45.970 --> 00:48:52.380
可怜的人凯西和菲尔受命与

00:48:48.850 --> 00:48:54.760
在24小时内建立购物车

00:48:52.380 --> 00:48:58.150
用Spring ，他们实际上拉了它

00:48:54.760 --> 00:49:01.480
如果您喜欢阅读这些内容，请依此类推

00:48:58.150 --> 00:49:03.340
核心人物的虐待狂故事

00:49:01.480 --> 00:49:06.160
那些荒谬的任务

00:49:03.340 --> 00:49:08.460
要求然后实际拉

00:49:06.160 --> 00:49:10.750
一点点地把它洒出来

00:49:08.460 --> 00:49:13.600
这是一个关于战争的故事

00:49:10.750 --> 00:49:17.920
这里的字段可能是您感兴趣的

00:49:13.600 --> 00:49:19.990
同样在7月29日向您发送

00:49:17.920 --> 00:49:23.530
用手工艺软件制作晚餐

00:49:19.990 --> 00:49:25.930
谈论网络上的内容管理

00:49:23.530 --> 00:49:29.260
并使用spring和Ruby进行移动

00:49:25.930 --> 00:49:33.670
就像我说过我们要参加八月

00:49:29.260 --> 00:49:34.930
嗯，所以那个那个只是想

00:49:33.670 --> 00:49:37.030
格雷格把它踢回你

00:49:34.930 --> 00:49:38.200
在我们之前结束评论

00:49:37.030 --> 00:49:41.560
签收它看起来不像

00:49:38.200 --> 00:49:43.930
来自我们与会者的其他问题

00:49:41.560 --> 00:49:46.690
那一刻我只想鼓励

00:49:43.930 --> 00:49:49.630
我发现的这个人

00:49:46.690 --> 00:49:52.140
铂金真的是真的发展

00:49:49.630 --> 00:49:54.580
我一直在寻找

00:49:52.140 --> 00:49:56.830
经理来找我说你能

00:49:54.580 --> 00:49:59.110
制作一些原型然后回到我身边

00:49:56.830 --> 00:50:01.240
在24小时内给我报告

00:49:59.110 --> 00:50:02.440
我可以去尝试一些我可以修补的东西

00:50:01.240 --> 00:50:04.720
用它，我不必处理

00:50:02.440 --> 00:50:06.280
很多开销，我可以找到一些东西

00:50:04.720 --> 00:50:07.810
讨厌我认为你知道这可能

00:50:06.280 --> 00:50:10.350
就是您要寻找的答案或这个

00:50:07.810 --> 00:50:12.700
可能是您正在寻找的工具， 

00:50:10.350 --> 00:50:14.200
在路上我可以擦亮， 

00:50:12.700 --> 00:50:16.810
实际上可能会成为我所使用的应用程序的一部分

00:50:14.200 --> 00:50:17.890
不，我没有这种二分法

00:50:16.810 --> 00:50:19.630
我建立了你知道我建立了快速

00:50:17.890 --> 00:50:21.610
原型和Python，但现在我需要

00:50:19.630 --> 00:50:24.460
将其迁移到Java中以将其添加到

00:50:21.610 --> 00:50:27.120
应用程序，或者我需要告诉DevOps团队

00:50:24.460 --> 00:50:30.340
他们现在需要对付thon和Java 

00:50:27.120 --> 00:50:33.370
而是这里有一个凝聚力的生态系统

00:50:30.340 --> 00:50:34.670
我可以提供一些狡猾的支持

00:50:33.370 --> 00:50:37.710
特征

00:50:34.670 --> 00:50:39.660
通过将其置于 spring boot 上，您知道

00:50:37.710 --> 00:50:42.150
即使 spring boot 相对

00:50:39.660 --> 00:50:44.430
由于你知道它的遗产是

00:50:42.150 --> 00:50:46.410
很成熟，你知道我们正在跑步

00:50:44.430 --> 00:50:48.090
它实际上在生产中与

00:50:46.410 --> 00:50:52.140
我们在 Spring 认识的DevOps团队

00:50:48.090 --> 00:50:54.300
 I / O网站，希望您知道

00:50:52.140 --> 00:50:57.450
数以百万计的您知道的流量

00:50:54.300 --> 00:51:00.300
每月的音乐访问者数量，所以不是

00:50:57.450 --> 00:51:03.420
少量的流量或

00:51:00.300 --> 00:51:06.240
以任何方式使用皱纹粉红色的应用

00:51:03.420 --> 00:51:08.760
呃，我们的客户是

00:51:06.240 --> 00:51:11.700
实际使用已经在生产

00:51:08.760 --> 00:51:15.090
大公司，所以靴子很好

00:51:11.700 --> 00:51:17.580
为此目的的基础武器Greg 

00:51:15.090 --> 00:51:19.920
非常感谢大家的精彩演讲，是的，我认为

00:51:17.580 --> 00:51:21.870
这是非常酷的

00:51:19.920 --> 00:51:23.820
弯曲的麦克风，你知道的人

00:51:21.870 --> 00:51:25.920
正在寻找微服务，以了解如何

00:51:23.820 --> 00:51:28.830
建立这些轻量级的

00:51:25.920 --> 00:51:31.560
监控和管理工具um super 

00:51:28.830 --> 00:51:33.780
快速，您知道的很多

00:51:31.560 --> 00:51:40.050
代码非常令人印象深刻，非常感谢

00:51:33.780 --> 00:51:41.580
好吧，大家嗯，下次见

00:51:40.050 --> 00:51:43.320
有时间我会见你参加网络研讨会之一

00:51:41.580 --> 00:51:44.460
未来的今天很棒

00:51:43.320 --> 00:51:46.730
感谢您的时间和关注，再见

00:51:44.460 --> 00:51:46.730
大家

00:51:53.170 --> 00:51:55.230
您

