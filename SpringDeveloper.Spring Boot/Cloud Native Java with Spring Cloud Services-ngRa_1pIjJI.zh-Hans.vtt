WEBVTT
Kind: captions
Language: zh-Hans

00:00:09.210 --> 00:00:12.690
好吧，我们在这里谈论

00:00:11.309 --> 00:00:14.460
Spring CloudJava 

00:00:12.690 --> 00:00:17.250
对不起，云原生Java spring cloud 

00:00:14.460 --> 00:00:20.880
我是克雷格墙的服务

00:00:17.250 --> 00:00:22.890
关于我，我在哪里，我要叶或

00:00:20.880 --> 00:00:24.840
春季社交，但我也更喜欢

00:00:22.890 --> 00:00:27.840
最近在春季工作很多

00:00:24.840 --> 00:00:29.460
我也相信云服务团队

00:00:27.840 --> 00:00:30.899
春季最后穿这件衬衫

00:00:29.460 --> 00:00:32.009
我为您准备的那一年

00:00:30.899 --> 00:00:33.570
各位，如果你明天来我的演讲

00:00:32.009 --> 00:00:35.300
我会再穿一次

00:00:33.570 --> 00:00:37.890
好的

00:00:35.300 --> 00:00:41.010
我要交了，斯科特

00:00:37.890 --> 00:00:42.600
弗雷德里克（Frederick）他是同一个同事

00:00:41.010 --> 00:00:44.039
团队在做一些和我们一样的事情

00:00:42.600 --> 00:00:45.300
今天要谈论，所以斯科特

00:00:44.039 --> 00:00:47.550
我一直在研究Cloud Foundry 

00:00:45.300 --> 00:00:49.019
大约三年了，并且是

00:00:47.550 --> 00:00:50.820
春天很长一段时间，现在

00:00:49.019 --> 00:00:52.649
春季工程团队大约一年

00:00:50.820 --> 00:00:57.510
所以在布的边界和

00:00:52.649 --> 00:00:58.800
春天，所以这是第二天，我们

00:00:57.510 --> 00:01:00.390
在第二天结束时

00:00:58.800 --> 00:01:02.460
这次会议，所以我们希望大家

00:01:00.390 --> 00:01:05.190
听说过有关云原生的一些信息

00:01:02.460 --> 00:01:06.710
体系结构Spring Cloud网flix OSS 

00:01:05.190 --> 00:01:09.659
和Cloud Foundry 

00:01:06.710 --> 00:01:12.510
如果你认为扬耶是几件事

00:01:09.659 --> 00:01:15.329
你们中的许多人去过戴夫和

00:01:12.510 --> 00:01:18.180
 Josh的Spring Cloud简介演讲或John 

00:01:15.329 --> 00:01:21.360
还有泰勒的春天云和Netflix 

00:01:18.180 --> 00:01:24.540
你们大多数人说话很好

00:01:21.360 --> 00:01:25.950
质疑你们中有几个没有

00:01:24.540 --> 00:01:27.899
我们可以弥补的东西，你们会

00:01:25.950 --> 00:01:30.210
不知道很好，因为我们很排序

00:01:27.899 --> 00:01:31.320
在一些演讲的基础上

00:01:30.210 --> 00:01:33.360
您可能从中听到的东西

00:01:31.320 --> 00:01:35.310
他们已经，所以我们不会审查

00:01:33.360 --> 00:01:36.509
简介中介绍了很多春季云内容

00:01:35.310 --> 00:01:38.610
到春天的云，我们希望你已经听到

00:01:36.509 --> 00:01:40.439
一些已经可以了，但是我们要

00:01:38.610 --> 00:01:41.969
谈论的是我们一直以来的一些价值

00:01:40.439 --> 00:01:43.200
在春天的云之上添加，所以我们已经

00:01:41.969 --> 00:01:46.590
一直在制造这个叫做

00:01:43.200 --> 00:01:48.659
春天的云服务，这是春天

00:01:46.590 --> 00:01:51.450
云，但有点像策展

00:01:48.659 --> 00:01:54.869
自以为是的春季实施

00:01:51.450 --> 00:01:56.939
为Cloud Foundry开发的云

00:01:54.869 --> 00:01:58.500
想法是你不必去打开

00:01:56.939 --> 00:02:00.990
采购并获得所有的春季云

00:01:58.500 --> 00:02:04.380
源位，然后站起来

00:02:00.990 --> 00:02:06.539
您自己，我们可以帮助您，并且

00:02:04.380 --> 00:02:08.039
我们有三个主要目标

00:02:06.539 --> 00:02:11.070
通过构建此产品，他们

00:02:08.039 --> 00:02:12.240
易于使用的安全性和可靠性以及

00:02:11.070 --> 00:02:14.970
我们将详细介绍

00:02:12.240 --> 00:02:17.850
我们每个人的意思是什么，但是

00:02:14.970 --> 00:02:20.520
我们已经实现了三个方面

00:02:17.850 --> 00:02:22.990
春季云配置服务器服务

00:02:20.520 --> 00:02:24.370
注册表和断路器

00:02:22.990 --> 00:02:26.050
再一次，我们将进入很多

00:02:24.370 --> 00:02:28.840
关于这三件事的细节

00:02:26.050 --> 00:02:30.130
所以这不会成为产品推销

00:02:28.840 --> 00:02:33.940
我们不是想告诉你一切

00:02:30.130 --> 00:02:35.380
关于这个产品有多棒

00:02:33.940 --> 00:02:37.300
我们认为我们正在做的很棒

00:02:35.380 --> 00:02:38.500
真的很酷，是的，我们很酷

00:02:37.300 --> 00:02:40.150
要去了解你的细节

00:02:38.500 --> 00:02:41.890
使用它，代码看起来像

00:02:40.150 --> 00:02:44.590
消耗掉它，我们要下去说话

00:02:41.890 --> 00:02:46.120
关于Java代码和Spring的东西，以及

00:02:44.590 --> 00:02:49.360
经历这样的事情

00:02:46.120 --> 00:02:52.630
谈谈，让我们从这些开始

00:02:49.360 --> 00:02:54.700
你们还好，所以对于那些已经

00:02:52.630 --> 00:02:56.680
看到已经在春季云上谈论

00:02:54.700 --> 00:02:57.790
也许您已经用过Spring Cloud了

00:02:56.680 --> 00:03:00.070
知道你有几件事

00:02:57.790 --> 00:03:01.900
为了使用弹簧云必须要做的事情

00:03:00.070 --> 00:03:03.880
我的意思是肯定你必须写你的

00:03:01.900 --> 00:03:06.670
将要绑定的服务

00:03:03.880 --> 00:03:08.260
自己到服务注册表

00:03:06.670 --> 00:03:10.540
向服务注册

00:03:08.260 --> 00:03:11.800
注册或发现其他服务

00:03:10.540 --> 00:03:15.880
您知道的服务注册表

00:03:11.800 --> 00:03:17.890
必须要做像你知道的事情

00:03:15.880 --> 00:03:19.330
从集中式获取您的资产

00:03:17.890 --> 00:03:21.490
您知道的配置服务器

00:03:19.330 --> 00:03:23.500
您将要注释一些

00:03:21.490 --> 00:03:25.840
您的服务中的电路方法

00:03:23.500 --> 00:03:28.510
断路器，以便他们进行故障转移

00:03:25.840 --> 00:03:30.040
他们会报告指标，然后您

00:03:28.510 --> 00:03:31.420
可以转到历史记录仪表板或

00:03:30.040 --> 00:03:33.239
断路器仪表板稍后

00:03:31.420 --> 00:03:35.730
查看发生了什么的细节

00:03:33.239 --> 00:03:40.360
但是你还必须做点别的

00:03:35.730 --> 00:03:42.459
你也必须站起来

00:03:40.360 --> 00:03:45.940
为这些单独的服务器提供服务

00:03:42.459 --> 00:03:47.590
你自己，你必须去创建一个项目

00:03:45.940 --> 00:03:49.600
基本上创建自己的微

00:03:47.590 --> 00:03:52.000
 sorrel微服务应用程序

00:03:49.600 --> 00:03:55.330
只不过是沿着

00:03:52.000 --> 00:03:59.890
启用配置服务器或启用行

00:03:55.330 --> 00:04:01.959
历史记录仪表板或启用它

00:03:59.890 --> 00:04:03.910
发现服务器Eureka服务器

00:04:01.959 --> 00:04:05.799
一个是你必须做那些

00:04:03.910 --> 00:04:07.000
那些在并记住注释的人- 

00:04:05.799 --> 00:04:08.530
是的，你必须记住

00:04:07.000 --> 00:04:09.730
注释我麻烦的原因

00:04:08.530 --> 00:04:11.140
挣扎的是他们改变了他们

00:04:09.730 --> 00:04:13.840
一次，我的大脑仍然停留在

00:04:11.140 --> 00:04:16.450
旧版本，但您必须记住

00:04:13.840 --> 00:04:18.700
站起来，将它们部署为

00:04:16.450 --> 00:04:21.820
以及您的应用程序

00:04:18.700 --> 00:04:23.650
您不仅在编写服务

00:04:21.820 --> 00:04:24.970
组成您的应用程序

00:04:23.650 --> 00:04:27.630
也写这些东西

00:04:24.970 --> 00:04:30.100
基本的基础设施

00:04:27.630 --> 00:04:32.530
仪表板中的服务注册表和

00:04:30.100 --> 00:04:34.419
所有这些事情，如果我在做

00:04:32.530 --> 00:04:34.870
斯科特（Scott）正在从事一个项目，他

00:04:34.419 --> 00:04:36.430
必须做

00:04:34.870 --> 00:04:37.720
你们在做同样的事情

00:04:36.430 --> 00:04:38.860
你要我们都要做

00:04:37.720 --> 00:04:40.900
同样的事情，最大的问题是

00:04:38.860 --> 00:04:43.419
为什么如果每个人都必须这样做，为什么

00:04:40.900 --> 00:04:46.000
每个人都必须这样做，为什么不能

00:04:43.419 --> 00:04:49.180
只是自己发生的，所以如果

00:04:46.000 --> 00:04:51.430
您正在使用Spring Cloud 

00:04:49.180 --> 00:04:52.900
正是可能发生的服务

00:04:51.430 --> 00:04:55.419
而不是站起来

00:04:52.900 --> 00:04:57.340
自己可以使用Cloud Foundry使用

00:04:55.419 --> 00:04:58.870
 CF命令行或按照我的意愿

00:04:57.340 --> 00:05:01.930
也要使用，因为我稍后会显示给您

00:04:58.870 --> 00:05:03.310
可以使用仪表板，您可以查看

00:05:01.930 --> 00:05:05.710
你可以去那里，你可以创建一个

00:05:03.310 --> 00:05:07.150
服务创建服务注册表

00:05:05.710 --> 00:05:09.220
服务创建断路器

00:05:07.150 --> 00:05:11.590
仪表板服务创建配置服务器

00:05:09.220 --> 00:05:14.620
服务，然后将这些服务绑定到

00:05:11.590 --> 00:05:17.110
个别的微服务

00:05:14.620 --> 00:05:18.790
您的应用程序的一部分又像

00:05:17.110 --> 00:05:20.979
你知道 spring boot 帮你做什么

00:05:18.790 --> 00:05:23.080
就像春天的云本身一样

00:05:20.979 --> 00:05:25.000
可以为您带来很多好处

00:05:23.080 --> 00:05:26.680
服务也迈出了一步

00:05:25.000 --> 00:05:28.690
再往后走，让您专注于

00:05:26.680 --> 00:05:30.010
为什么建立服务

00:05:28.690 --> 00:05:31.479
您的应用程序并没有真正担心，但是

00:05:30.010 --> 00:05:35.860
支撑所有这些基础设施

00:05:31.479 --> 00:05:37.690
它会让他们工作的，但是当它

00:05:35.860 --> 00:05:39.910
是时候实际创建了

00:05:37.690 --> 00:05:41.500
客户端应用程序您实际上只是

00:05:39.910 --> 00:05:43.450
做你通常会做的事情

00:05:41.500 --> 00:05:45.070
创建那些客户端应用程序

00:05:43.450 --> 00:05:47.650
创建一个您拥有的Spring Boot应用

00:05:45.070 --> 00:05:49.270
您将拥有的Spring Cloud Starters 

00:05:47.650 --> 00:05:52.060
决定你是否要

00:05:49.270 --> 00:05:54.729
首先使用eureka进行配置或配置

00:05:52.060 --> 00:05:56.169
第一次启动，但是当您使用

00:05:54.729 --> 00:05:57.970
 Spring Cloud Services代替您

00:05:56.169 --> 00:06:00.100
基本上创建您的Spring Boot应用程序

00:05:57.970 --> 00:06:02.289
有先手，然后你绑定你的

00:06:00.100 --> 00:06:03.970
为那些个人微服务

00:06:02.289 --> 00:06:06.520
您绑定eureka服务器的服务或

00:06:03.970 --> 00:06:09.220
服务注册表服务

00:06:06.520 --> 00:06:11.260
应用中的服务，现在这些是

00:06:09.220 --> 00:06:13.479
配置服务器，现在你的微型

00:06:11.260 --> 00:06:15.280
服务可以消耗其他

00:06:13.479 --> 00:06:16.690
就像其他服务一样

00:06:15.280 --> 00:06:20.639
就像他们可能会消耗Postgres 

00:06:16.690 --> 00:06:22.810
数据库或或Redis数据库或或

00:06:20.639 --> 00:06:24.910
 AMQP或其他

00:06:22.810 --> 00:06:26.470
他们可以消耗尤里卡的服务，他们可以

00:06:24.910 --> 00:06:28.419
使用配置服务器可以

00:06:26.470 --> 00:06:33.700
使用历史记录仪表板

00:06:28.419 --> 00:06:35.830
同样的方式之一是

00:06:33.700 --> 00:06:37.600
除了省去你的麻烦

00:06:35.830 --> 00:06:38.080
必须站起来这些服务

00:06:37.600 --> 00:06:39.910
你自己

00:06:38.080 --> 00:06:44.650
是我们还为您省去了

00:06:39.910 --> 00:06:46.330
必须保护它们，因为我不是

00:06:44.650 --> 00:06:46.990
谈论您的微服务

00:06:46.330 --> 00:06:48.550
我再说这些

00:06:46.990 --> 00:06:50.620
基础服务

00:06:48.550 --> 00:06:53.110
如果你想在尤里卡服务器站起来

00:06:50.620 --> 00:06:54.490
太好了，您可以做到，现在您

00:06:53.110 --> 00:06:55.840
不必担心还有谁

00:06:54.490 --> 00:06:57.009
在那里消费那些服务的人

00:06:55.840 --> 00:06:58.629
要进去找你

00:06:57.009 --> 00:07:00.250
服务，然后能够使用它

00:06:58.629 --> 00:07:02.500
还有谁能进来

00:07:00.250 --> 00:07:03.819
并查看您的配置服务器并询问

00:07:02.500 --> 00:07:05.710
它用于配置以及它们如何

00:07:03.819 --> 00:07:07.389
如果你站着就可以食用

00:07:05.710 --> 00:07:07.900
这个，你已经把它放到云端了

00:07:07.389 --> 00:07:09.729
铸造厂

00:07:07.900 --> 00:07:12.520
是什么阻止了别人

00:07:09.729 --> 00:07:15.009
击中相同的服务并询问

00:07:12.520 --> 00:07:17.009
用于配置或服务

00:07:15.009 --> 00:07:19.300
它提供的，所以在那里

00:07:17.009 --> 00:07:21.039
春天的云服务已经到了

00:07:19.300 --> 00:07:24.099
确保这些为单位的麻烦

00:07:21.039 --> 00:07:26.349
它与OAuth本质上是这些

00:07:24.099 --> 00:07:28.900
 OAuth凭证通过公开

00:07:26.349 --> 00:07:32.020
服务绑定，因此当您绑定自己的

00:07:28.900 --> 00:07:33.909
为您的应用程序提供服务或

00:07:32.020 --> 00:07:35.169
作为您的微服务的一部分

00:07:33.909 --> 00:07:38.380
绑定它将包含一个数字

00:07:35.169 --> 00:07:40.449
其中之一就是通过

00:07:38.380 --> 00:07:42.759
你可以做一个客户凭证

00:07:40.449 --> 00:07:44.680
绑定它将为客户提供

00:07:42.759 --> 00:07:46.569
凭证自己，你要去

00:07:44.680 --> 00:07:48.580
才能获得OAuth访问权限

00:07:46.569 --> 00:07:51.280
从那里的令牌，然后能够

00:07:48.580 --> 00:07:55.210
从那里消耗那些服务，但是如果

00:07:51.280 --> 00:07:56.380
别人还有其他服务

00:07:55.210 --> 00:07:58.000
知道有人来尝试

00:07:56.380 --> 00:08:00.009
点击您的配置服务器服务或尝试

00:07:58.000 --> 00:08:01.240
打服务注册表服务

00:08:00.009 --> 00:08:02.169
他们不会知道那些

00:08:01.240 --> 00:08:04.060
他们不会去的凭证

00:08:02.169 --> 00:08:05.949
一定知道URL将会是

00:08:04.060 --> 00:08:08.259
事实上，希望这样做会更加困难

00:08:05.949 --> 00:08:10.960
他们不可能真正消费

00:08:08.259 --> 00:08:13.509
除非他们被授权这样做

00:08:10.960 --> 00:08:15.669
因为他们被那些

00:08:13.509 --> 00:08:16.870
服务，这真的很重要

00:08:15.669 --> 00:08:19.240
特别适合企业客户

00:08:16.870 --> 00:08:22.389
因为有些公司有这种奢侈

00:08:19.240 --> 00:08:24.759
能够说出我们所有的微观

00:08:22.389 --> 00:08:26.590
服务和我们的服务注册中心是

00:08:24.759 --> 00:08:28.270
全部运行在我们的控制之内

00:08:26.590 --> 00:08:29.620
网络，所以我们只是信任

00:08:28.270 --> 00:08:31.870
一切，如果你住

00:08:29.620 --> 00:08:33.940
这个世界真的很棒，但是

00:08:31.870 --> 00:08:35.529
他们真的不能说很多企业

00:08:33.940 --> 00:08:36.880
安全人员到处走走

00:08:35.529 --> 00:08:38.320
之所以说是因为它正在我们的计算机中运行

00:08:36.880 --> 00:08:40.180
我们无法信任的内部网络

00:08:38.320 --> 00:08:42.849
发生的一切我们都需要很多

00:08:40.180 --> 00:08:46.240
围绕什么建立更多的安全性

00:08:42.849 --> 00:08:47.680
例如Netflix Yurika可以在

00:08:46.240 --> 00:08:50.079
它本身就是我们的一些东西

00:08:47.680 --> 00:08:51.880
建立在最上面，是

00:08:50.079 --> 00:08:53.140
安全显然是即使

00:08:51.880 --> 00:08:55.570
你在墙后面并不意味着

00:08:53.140 --> 00:08:57.040
您很安全，所以您了解很多

00:08:55.570 --> 00:08:59.020
发生安全漏洞是因为有人

00:08:57.040 --> 00:08:59.790
墙上的东西能够塞满东西

00:08:59.020 --> 00:09:00.960
所以

00:08:59.790 --> 00:09:02.310
这是你自己注意的序数

00:09:00.960 --> 00:09:04.380
有意或无意地

00:09:02.310 --> 00:09:05.790
重要的是能够仍然锁定那些

00:09:04.380 --> 00:09:08.220
即使你不在公开场合

00:09:05.790 --> 00:09:09.690
我们本来要提到的云

00:09:08.220 --> 00:09:11.430
其实我们很想成为

00:09:09.690 --> 00:09:14.100
互动式的，如果您有任何疑问

00:09:11.430 --> 00:09:15.780
举起你的手或大喊，我们将很高兴

00:09:14.100 --> 00:09:17.520
在问题来临时，我们

00:09:15.780 --> 00:09:18.750
在此末尾有一个问答部分

00:09:17.520 --> 00:09:20.550
说话，但这并不意味着您必须

00:09:18.750 --> 00:09:22.290
等到那再继续吧

00:09:20.550 --> 00:09:23.730
我只会问一件事

00:09:22.290 --> 00:09:26.010
是如果您有问题要提出

00:09:23.730 --> 00:09:27.240
手真的很高，说话声音很大

00:09:26.010 --> 00:09:29.580
因为这是一个更大的房间，我们可以听到

00:09:27.240 --> 00:09:31.230
是的，我们随时可以

00:09:29.580 --> 00:09:33.720
回答任何问题

00:09:31.230 --> 00:09:35.220
我们可能会提一个问题并回答

00:09:33.720 --> 00:09:35.790
回答您不喜欢的问题，但我们会尽力而为

00:09:35.220 --> 00:09:38.570
最好

00:09:35.790 --> 00:09:38.570
这是一个

00:09:59.360 --> 00:10:04.579
是的，这都是利用云

00:10:03.079 --> 00:10:05.989
代工权让我重复这个问题

00:10:04.579 --> 00:10:07.879
他想知道是你要去

00:10:05.989 --> 00:10:10.749
从不同的你知道发展到

00:10:07.879 --> 00:10:12.649
生产或任何级别的质量检查

00:10:10.749 --> 00:10:14.749
您的移民

00:10:12.649 --> 00:10:18.559
他想要知道的应用程序是如何

00:10:14.749 --> 00:10:22.220
顺其自然吗

00:10:18.559 --> 00:10:23.629
从一个到另一个你知道并且是

00:10:22.220 --> 00:10:25.730
你打不同的尤里卡

00:10:23.629 --> 00:10:28.369
您正在击中其他配置文件

00:10:25.730 --> 00:10:30.290
从一个方向上走对你来说很漂亮

00:10:28.369 --> 00:10:31.759
环境到另一个，我想我

00:10:30.290 --> 00:10:33.259
知道答案，我会让斯科特回答

00:10:31.759 --> 00:10:35.420
我要给你一个简短的答案

00:10:33.259 --> 00:10:37.489
认为这真的很容易，是的

00:10:35.420 --> 00:10:39.559
是，这是及时的问题，因为

00:10:37.489 --> 00:10:41.209
我们在此Cloud Foundry幻灯片上，所以所有

00:10:39.559 --> 00:10:43.790
这是基于运行这些东西

00:10:41.209 --> 00:10:45.139
在Cloud Foundry上，部分收益

00:10:43.790 --> 00:10:47.149
我们从中得到的是这种可靠性

00:10:45.139 --> 00:10:49.999
 Cloud Foundry自动制造的地方

00:10:47.149 --> 00:10:51.649
确保我们正在部署这些服务或

00:10:49.999 --> 00:10:53.089
一直保持运转

00:10:51.649 --> 00:10:54.799
您正在使用它们的应用程序，或者

00:10:53.089 --> 00:10:55.970
一直保持运转

00:10:54.799 --> 00:10:57.230
另一个方面来回答你的

00:10:55.970 --> 00:10:59.809
问题是Cloud Foundry有这个

00:10:57.230 --> 00:11:01.959
组织和空间的概念如此

00:10:59.809 --> 00:11:04.519
您可以创建一个组织

00:11:01.959 --> 00:11:06.230
建立质量检查组织，并

00:11:04.519 --> 00:11:08.419
生产组织，也许

00:11:06.230 --> 00:11:10.100
一个进行分期，然后就可以部署

00:11:08.419 --> 00:11:12.860
您对这些奖项的申请，以及

00:11:10.100 --> 00:11:14.119
在进行进度时逐个空格

00:11:12.860 --> 00:11:15.649
通过这样您可能会有开发人员

00:11:14.119 --> 00:11:17.179
推动发展组织

00:11:15.649 --> 00:11:18.949
然后持续整合

00:11:17.179 --> 00:11:21.019
管道推向其他所有管道

00:11:18.949 --> 00:11:22.639
所以你要创建这些的实例

00:11:21.019 --> 00:11:24.199
我们正在讨论和推动的服务

00:11:22.639 --> 00:11:26.350
将您的应用发送给其他组织

00:11:24.199 --> 00:11:29.600
通过它们前进的空间

00:11:26.350 --> 00:11:31.309
发展到生产，所以我们可以给

00:11:29.600 --> 00:11:32.600
您更多有关Cloud Foundry的演示以及如何

00:11:31.309 --> 00:11:33.980
它可以工作，空间可以工作

00:11:32.600 --> 00:11:35.779
实际在休息室看到一些

00:11:33.980 --> 00:11:37.309
我想如果你愿意的话

00:11:35.779 --> 00:11:39.259
能够绑定到一个美丽

00:11:37.309 --> 00:11:41.179
服务而不是指服务

00:11:39.259 --> 00:11:43.549
但您通过URL明确知道的是

00:11:41.179 --> 00:11:45.169
消费服务的人没有

00:11:43.549 --> 00:11:47.929
知道该服务在哪里

00:11:45.169 --> 00:11:49.269
告诉绑定，所以如果有

00:11:47.929 --> 00:11:51.470
之间的这种间接级别

00:11:49.269 --> 00:11:52.850
他们之间，所以它不需要知道

00:11:51.470 --> 00:11:54.199
直到它需要知道

00:11:52.850 --> 00:11:58.100
从一种环境转移到另一种环境

00:11:54.199 --> 00:11:59.809
因为绑定需要保持

00:11:58.100 --> 00:12:01.069
这样便知道尤里卡在哪里

00:11:59.809 --> 00:12:02.689
这样便知道配置在哪里

00:12:01.069 --> 00:12:04.579
服务器是您将能够看到一个

00:12:02.689 --> 00:12:07.059
我们将在这里进行一些演示

00:12:04.579 --> 00:12:07.059
分钟

00:12:13.100 --> 00:12:17.779
当您进行服务时

00:12:15.260 --> 00:12:19.490
供应您只需执行CF创建

00:12:17.779 --> 00:12:21.290
服务，我们正在

00:12:19.490 --> 00:12:23.990
你不说我要缩放的背景

00:12:21.290 --> 00:12:27.170
该服务，我们正在管理其

00:12:23.990 --> 00:12:32.810
运行以及它在后台如何缩放

00:12:27.170 --> 00:12:35.750
在幕后，所以在我们的GA版本中

00:12:32.810 --> 00:12:38.570
我们将为每个提供一个实例

00:12:35.750 --> 00:12:40.190
我们提供的服务中，然后

00:12:38.570 --> 00:12:41.930
在后续版本中，我们将开始

00:12:40.190 --> 00:12:43.850
介绍一些ha功能

00:12:41.930 --> 00:12:46.360
并有多个正在运行的实例

00:12:43.850 --> 00:12:46.360
诸如此类的事情

00:12:47.600 --> 00:12:56.360
我不会谈论时间表

00:12:49.370 --> 00:12:58.430
现在我们知道它比那更近

00:12:56.360 --> 00:12:59.899
那是我们准备做的事

00:12:58.430 --> 00:13:01.880
值得的100版本

00:12:59.899 --> 00:13:04.010
说它现在处于公开测试阶段

00:13:01.880 --> 00:13:06.320
我们将在100个发行版本中

00:13:04.010 --> 00:13:08.750
大概几个星期，我们正在谈论

00:13:06.320 --> 00:13:11.029
这种东西为1.1或也许

00:13:08.750 --> 00:13:13.250
远远超过1.2，但不超过

00:13:11.029 --> 00:13:14.660
这是我们最需要的功能之一

00:13:13.250 --> 00:13:16.399
我们现在没有Beta版

00:13:14.660 --> 00:13:18.290
高一点

00:13:16.399 --> 00:13:20.750
可用性比我们在

00:13:18.290 --> 00:13:22.100
 beta和1l就足够了

00:13:20.750 --> 00:13:26.510
今天不是第一次

00:13:22.100 --> 00:13:26.870
关于它，是的，好的，所以你要

00:13:26.510 --> 00:13:29.480
听我们说

00:13:26.870 --> 00:13:30.589
经常使用这个术语服务经纪人，所以我们

00:13:29.480 --> 00:13:32.209
只想给你一点

00:13:30.589 --> 00:13:33.620
概述什么是服务代理，以及

00:13:32.209 --> 00:13:36.050
为什么我们要这么多使用这个术语

00:13:33.620 --> 00:13:37.940
现在，Service Worker是一种扩展方式

00:13:36.050 --> 00:13:40.160
云代工厂的基本功能

00:13:37.940 --> 00:13:42.709
为您的应用程序提供资源

00:13:40.160 --> 00:13:44.079
所以最典型的服务

00:13:42.709 --> 00:13:46.930
由经纪人提供的是

00:13:44.079 --> 00:13:49.910
关系数据库MongoDB Redis 

00:13:46.930 --> 00:13:51.440
所有这些东西

00:13:49.910 --> 00:13:54.350
你可以想象一个应用程序可能

00:13:51.440 --> 00:13:55.970
想消费，所以我们所有的服务

00:13:54.350 --> 00:13:59.270
由我们提供的服务经纪人提供

00:13:55.970 --> 00:14:00.649
撰写Cloud Foundry知道如何与之交谈

00:13:59.270 --> 00:14:02.180
通过休息的服务经纪人

00:14:00.649 --> 00:14:05.209
界面这是一个非常简单的界面

00:14:02.180 --> 00:14:07.220
实际上有第六个REST API 

00:14:05.209 --> 00:14:09.199
现在打电话，有一个相当新的

00:14:07.220 --> 00:14:11.510
我们没有放幻灯片，如何

00:14:09.199 --> 00:14:13.250
我们的Cloud Foundry将致电您的服务

00:14:11.510 --> 00:14:15.680
经纪人，并要求所有的目录

00:14:13.250 --> 00:14:18.260
您提供的服务以及来自

00:14:15.680 --> 00:14:20.390
然后有人说我想

00:14:18.260 --> 00:14:22.490
创建类型的服务

00:14:20.390 --> 00:14:24.050
如果Cloud Foundry知道该服务

00:14:22.490 --> 00:14:27.350
是您要提供的那个

00:14:24.050 --> 00:14:29.270
将此提供服务端点称为

00:14:27.350 --> 00:14:31.280
那时您应该创建

00:14:29.270 --> 00:14:33.650
您需要的任何资源作为服务

00:14:31.280 --> 00:14:35.330
经纪人，然后当一个应用程序

00:14:33.650 --> 00:14:37.040
想要使用该服务

00:14:35.330 --> 00:14:39.680
这个创建的绑定调用

00:14:37.040 --> 00:14:41.000
真正要做的就是返回

00:14:39.680 --> 00:14:42.680
应用所有的连接细节

00:14:41.000 --> 00:14:44.540
及其所需的凭据

00:14:42.680 --> 00:14:46.250
与该服务实例交谈，以便您可以

00:14:44.540 --> 00:14:48.830
创建给定服务的一个实例

00:14:46.250 --> 00:14:49.520
绑定了多个应用程序，因此

00:14:48.830 --> 00:14:51.560
那是之间的区别

00:14:49.520 --> 00:14:53.330
供应和绑定，然后

00:14:51.560 --> 00:14:55.160
您当然可以取消服务与应用程序的绑定

00:14:53.330 --> 00:14:57.830
您可以删除服务实例和

00:14:55.160 --> 00:14:59.600
新电话是更新的，所以你可以说我

00:14:57.830 --> 00:15:01.480
想改变服务的某些方面

00:14:59.600 --> 00:15:03.950
 Cloud Foundry中的实例可以做到这一点

00:15:01.480 --> 00:15:06.170
现在，如果Cloud Foundry不在乎

00:15:03.950 --> 00:15:07.670
您只是部署了一个服务代理

00:15:06.170 --> 00:15:09.560
部署服务代理代码

00:15:07.670 --> 00:15:11.450
某个地方，然后您向其注册

00:15:09.560 --> 00:15:13.070
用URL和一些捕获的铸造

00:15:11.450 --> 00:15:15.170
凭据，然后就开始了

00:15:13.070 --> 00:15:16.520
称它也不在乎什么

00:15:15.170 --> 00:15:19.670
您的服务经纪人都写在里面

00:15:16.520 --> 00:15:23.330
可以用Java或NGO或Python编写

00:15:19.670 --> 00:15:24.430
或PHP，我不知道为什么要这么做，但是

00:15:23.330 --> 00:15:26.600
你可以随便写

00:15:24.430 --> 00:15:28.190
部署到您想要的任何地方，然后您

00:15:26.600 --> 00:15:30.230
只需将其注册到Cloud Foundry，以便

00:15:28.190 --> 00:15:31.970
即使您可以用PHP做到这一点，我也会

00:15:30.230 --> 00:15:33.260
是的，不推荐，但是

00:15:31.970 --> 00:15:34.880
我的意思是什么真的很酷

00:15:33.260 --> 00:15:35.750
从来没有你知道超出这个范围

00:15:34.880 --> 00:15:38.090
谈论我们，我们谈论春天

00:15:35.750 --> 00:15:39.800
云服务只是您

00:15:38.090 --> 00:15:41.690
可以有点创建自己的

00:15:39.800 --> 00:15:42.950
仅通过创建服务即可获得服务

00:15:41.690 --> 00:15:46.640
经纪人是Cloud的一个不错的功能

00:15:42.950 --> 00:15:48.350
铸造厂本身，所以只是好的

00:15:46.640 --> 00:15:52.580
您扩展您的能力

00:15:48.350 --> 00:15:54.260
拥有Cloud Foundry的经验，所以如果您

00:15:52.580 --> 00:15:56.480
在关键的Web服务上运行或

00:15:54.260 --> 00:15:58.820
关键的布料铸造厂或其他

00:15:56.480 --> 00:16:00.260
其他Cloud Foundry发行版

00:15:58.820 --> 00:16:02.150
您可以看到服务的方式

00:16:00.260 --> 00:16:03.260
市场，这是一个例子

00:16:02.150 --> 00:16:04.910
这些屏幕可能看起来是什么

00:16:03.260 --> 00:16:07.130
像这样来自关键爪铸造厂

00:16:04.910 --> 00:16:08.960
这样您就可以列出所有这些服务

00:16:07.130 --> 00:16:10.820
这里每个盒子都是

00:16:08.960 --> 00:16:13.100
从某些服务中暴露出来的

00:16:10.820 --> 00:16:13.940
经纪人，所以你可以在这里看到我们的

00:16:13.100 --> 00:16:16.070
有断路器

00:16:13.940 --> 00:16:18.050
我们有配置服务器和服务

00:16:16.070 --> 00:16:20.720
注册表中所有这三个服务都是

00:16:18.050 --> 00:16:21.950
由我们的经纪人提供的所有其他

00:16:20.720 --> 00:16:23.960
他们由其他人提供

00:16:21.950 --> 00:16:25.730
个人经纪人，这是一个非常好的

00:16:23.960 --> 00:16:27.410
扩展功能的方式

00:16:25.730 --> 00:16:30.440
通过服务代理进行Cloud Foundry 

00:16:27.410 --> 00:16:32.450
机制，让我们谈谈我们的

00:16:30.440 --> 00:16:33.240
我们写的服务经纪人我们写的

00:16:32.450 --> 00:16:35.959
我们的服务

00:16:33.240 --> 00:16:38.850
 Java中的brogre，因为Java很棒

00:16:35.959 --> 00:16:41.190
我们广泛使用spring是因为spring 

00:16:38.850 --> 00:16:43.170
更棒，所以我们做了那些

00:16:41.190 --> 00:16:45.120
实施选择和我们的服务

00:16:43.170 --> 00:16:46.709
经纪人，这对

00:16:45.120 --> 00:16:49.050
在这个话题中谈论，因为我们

00:16:46.709 --> 00:16:50.760
为您提供许多很酷的东西

00:16:49.050 --> 00:16:52.680
在您建立工作时可以使用

00:16:50.760 --> 00:16:54.420
春天的应用程序，我们完全使用了

00:16:52.680 --> 00:16:57.060
同样的事情来建立这个经纪人

00:16:54.420 --> 00:16:59.910
为您提供这些服务

00:16:57.060 --> 00:17:02.880
因此我们实现了服务代理API- 

00:16:59.910 --> 00:17:04.740
 Cloud Foundry，我们必须这样做

00:17:02.880 --> 00:17:06.600
有趣的是，何时云

00:17:04.740 --> 00:17:08.130
铸造厂致电服务经纪人

00:17:06.600 --> 00:17:10.980
提供一个新的服务实例

00:17:08.130 --> 00:17:13.350
给那个服务经纪人60秒

00:17:10.980 --> 00:17:15.569
设置该服务实例，如果

00:17:13.350 --> 00:17:17.100
经纪人在60秒内没有回应

00:17:15.569 --> 00:17:18.800
说创建的应用很不错

00:17:17.100 --> 00:17:21.449
那么就假设出了点问题

00:17:18.800 --> 00:17:23.189
我们正在提供的一些服务

00:17:21.449 --> 00:17:25.380
需要超过60秒，所以我们

00:17:23.189 --> 00:17:27.540
实现了这个小的异步机制

00:17:25.380 --> 00:17:28.890
 Cloud Foundry打电话给我们的地方

00:17:27.540 --> 00:17:30.870
经纪人并说提供服务

00:17:28.890 --> 00:17:32.550
实例，我们几乎立即返回

00:17:30.870 --> 00:17:35.460
并说是的，我们确实做到了一切

00:17:32.550 --> 00:17:37.559
好，与此同时我们要做的是

00:17:35.460 --> 00:17:38.850
将消息放在兔子队列上，然后

00:17:37.559 --> 00:17:40.230
我们回到Cloud Foundry说

00:17:38.850 --> 00:17:42.179
一切都很好

00:17:40.230 --> 00:17:43.559
然后我们有第二个应用程序

00:17:42.179 --> 00:17:44.760
在兔子队列上听

00:17:43.559 --> 00:17:47.429
完成了所有的真正工作

00:17:44.760 --> 00:17:48.990
设置该服务实例，以便

00:17:47.429 --> 00:17:52.230
然后稍后当一个应用程序进入

00:17:48.990 --> 00:17:54.179
绑定到该服务实例（如果有） 

00:17:52.230 --> 00:17:55.500
试图绑定，那个工人仍然

00:17:54.179 --> 00:17:57.330
做它的事，那只会

00:17:55.500 --> 00:17:59.520
收到错误消息，指出实例尚未准备就绪

00:17:57.330 --> 00:18:00.870
被束缚，或者如果发生了什么

00:17:59.520 --> 00:18:02.370
实例中的严重错误不可能是

00:18:00.870 --> 00:18:03.870
创建的话会得到一个错误，但是

00:18:02.370 --> 00:18:06.240
否则，当服务准备好

00:18:03.870 --> 00:18:08.520
走，我们回覆讯息

00:18:06.240 --> 00:18:09.960
当经纪人收到确定消息时排队

00:18:08.520 --> 00:18:12.390
所以它知道它可以开始被

00:18:09.960 --> 00:18:14.220
必然会出现这种异步机制

00:18:12.390 --> 00:18:17.700
是我们准备的一件好事- 

00:18:14.220 --> 00:18:20.640
分开这两个职责

00:18:17.700 --> 00:18:23.640
他们之间使用RabbitMQ 

00:18:20.640 --> 00:18:25.620
微服务设计模式

00:18:23.640 --> 00:18:27.360
一切对我们来说都很好

00:18:25.620 --> 00:18:29.730
版本的Cloud Foundry实际上有

00:18:27.360 --> 00:18:32.130
制定了这种异步配置机制

00:18:29.730 --> 00:18:33.690
官方，所以当我们运行更新

00:18:32.130 --> 00:18:36.030
版本的Cloud Foundry我们有办法

00:18:33.690 --> 00:18:37.800
告诉我们我们还没有创建一个

00:18:36.030 --> 00:18:39.480
我们正在努力，您可以继续

00:18:37.800 --> 00:18:40.080
打电话给我们，问我们是否

00:18:39.480 --> 00:18:41.970
做完了

00:18:40.080 --> 00:18:42.690
这样就形成了异步机制

00:18:41.970 --> 00:18:45.630
官方

00:18:42.690 --> 00:18:47.670
代工和较新版本，这是什么

00:18:45.630 --> 00:18:49.650
工作人员应用程序在被要求执行时

00:18:47.670 --> 00:18:53.040
提供服务实例

00:18:49.650 --> 00:18:55.500
将应用程序推送到Cloud Foundry，因此

00:18:53.040 --> 00:18:57.780
这些应用程序在这里这个经纪人应用程序和这个

00:18:55.500 --> 00:18:59.730
辅助应用程序是部署到的应用程序

00:18:57.780 --> 00:19:02.040
 Cloud Foundry及其工作是部署

00:18:59.730 --> 00:19:03.570
 Cloud Foundry有更多应用程序，因此

00:19:02.040 --> 00:19:05.730
现在我们进入了Java的春天

00:19:03.570 --> 00:19:08.400
 Cloud Foundry成立之初

00:19:05.730 --> 00:19:10.830
在这里，所以当你说我要供应

00:19:08.400 --> 00:19:12.360
一个新的服务注册服务什么

00:19:10.830 --> 00:19:15.000
我们在后台做的推

00:19:12.360 --> 00:19:17.370
 Spring Cloud Netflix的实例

00:19:15.000 --> 00:19:19.260
尤里卡到Cloud Foundry，然后

00:19:17.370 --> 00:19:21.530
返回您去那儿的路线

00:19:19.260 --> 00:19:24.030
服务是当您绑定到它时

00:19:21.530 --> 00:19:25.560
这关系到我们的可靠性

00:19:24.030 --> 00:19:27.450
在谈论这些经纪人是

00:19:25.560 --> 00:19:29.040
在Cloud Foundry上运行的所有服务

00:19:27.450 --> 00:19:31.650
我们创建的实例只是应用程序

00:19:29.040 --> 00:19:33.090
在Cloud Foundry上运行，因此一切

00:19:31.650 --> 00:19:34.410
将通过云保持熬夜

00:19:33.090 --> 00:19:36.120
铸造作为健康管理和

00:19:34.410 --> 00:19:37.680
一切都很好，是的

00:19:36.120 --> 00:19:39.450
好像所有这些东西

00:19:37.680 --> 00:19:41.610
没有弹簧就不得不手动做

00:19:39.450 --> 00:19:43.050
云服务，就像我们编写它们一样

00:19:41.610 --> 00:19:44.370
为您，并为您和我部署它们

00:19:43.050 --> 00:19:46.560
看到我用这个词好像是松散地

00:19:44.370 --> 00:19:49.470
不像是我们实际上发生了什么

00:19:46.560 --> 00:19:52.730
写那些，现在是我们的服务经纪人

00:19:49.470 --> 00:19:54.900
工作人员应用会为您部署这些

00:19:52.730 --> 00:19:56.340
我提到我们是用Java编写的

00:19:54.900 --> 00:19:58.110
使用弹簧，所以这有点

00:19:56.340 --> 00:19:59.910
弹簧片的库存

00:19:58.110 --> 00:20:02.250
我们使用所有我们的应用程序或 spring boot 

00:19:59.910 --> 00:20:03.660
经纪人应用程式，工作人员应用程式

00:20:02.250 --> 00:20:05.850
服务实例支持的应用都是

00:20:03.660 --> 00:20:07.380
 spring boot ，他们使用不同的

00:20:05.850 --> 00:20:08.700
Spring Cloud的碎片

00:20:07.380 --> 00:20:10.620
取决于功能和

00:20:08.700 --> 00:20:12.540
提供他们的功能

00:20:10.620 --> 00:20:15.300
使用弹簧云连接器与之交谈

00:20:12.540 --> 00:20:16.890
 Rabbitmq和服务经纪人实际上

00:20:15.300 --> 00:20:19.140
有一点我的续集数据库

00:20:16.890 --> 00:20:21.480
存储其对哪些服务的看法

00:20:19.140 --> 00:20:22.830
已配置，因此我们使用

00:20:21.480 --> 00:20:25.350
弹簧云连接器与之交谈

00:20:22.830 --> 00:20:27.240
数据库我们使用Spring Security和

00:20:25.350 --> 00:20:29.130
春季安全OAuth 2广泛和

00:20:27.240 --> 00:20:30.930
克雷格（Craig）将展示一点， 

00:20:29.130 --> 00:20:33.660
外观的演示

00:20:30.930 --> 00:20:35.640
从功能上讲，但我们所有的OAuth内容

00:20:33.660 --> 00:20:38.430
做的就是使用spring store的spring security 

00:20:35.640 --> 00:20:39.870
 OAuth 2我们使用Spring数据JPA进行交谈

00:20:38.430 --> 00:20:42.840
到我的那个小续集数据库

00:20:39.870 --> 00:20:45.240
提到我们使用弹簧AMQP弹簧

00:20:42.840 --> 00:20:47.370
对于我们所有的RabbitMQ互动

00:20:45.240 --> 00:20:49.020
在我们的应用程序之间，因此我们使用了尽可能多的

00:20:47.370 --> 00:20:51.030
尽我们所能

00:20:49.020 --> 00:20:52.890
现在我们也使用这个不错的小项目

00:20:51.030 --> 00:20:55.140
叫 spring boot EF服务经纪人

00:20:52.890 --> 00:20:56.490
基本上只是春天的MVC 

00:20:55.140 --> 00:20:59.190
申请

00:20:56.490 --> 00:21:00.660
该服务经纪人逮捕了API，因此，如果

00:20:59.190 --> 00:21:04.140
你想写自己的服务

00:21:00.660 --> 00:21:06.090
使用Spring的Java中的中间人

00:21:04.140 --> 00:21:07.890
小小的入门项目，您就可以

00:21:06.090 --> 00:21:09.120
实施您的真实业务逻辑

00:21:07.890 --> 00:21:10.950
您的经纪人，不必担心

00:21:09.120 --> 00:21:12.900
关于其余的一切

00:21:10.950 --> 00:21:14.460
我应该实现什么HTTP 

00:21:12.900 --> 00:21:16.230
返回码我要在这返回吗

00:21:14.460 --> 00:21:17.880
情况或基于

00:21:16.230 --> 00:21:19.110
规格说明所有这些内容是

00:21:17.880 --> 00:21:21.179
为您实现了它真的很好

00:21:19.110 --> 00:21:23.730
小图书馆是开源的

00:21:21.179 --> 00:21:26.220
然后我们使用Cloud Foundry Java客户端

00:21:23.730 --> 00:21:28.650
与Cloud Foundry交谈的方式

00:21:26.220 --> 00:21:30.720
推送应用程序并管理Cloud中的事物

00:21:28.650 --> 00:21:32.610
代工，而是命令行

00:21:30.720 --> 00:21:34.679
工具或应用程序管理器或其他任何东西

00:21:32.610 --> 00:21:37.140
通过Cloud Foundry REST API和

00:21:34.679 --> 00:21:39.120
最后一个库只是一个不错的Java 

00:21:37.140 --> 00:21:41.490
绑定到该REST API，因此，如果您是

00:21:39.120 --> 00:21:43.110
您可以推送应用程序的Java应用程序删除应用程序

00:21:41.490 --> 00:21:47.040
在里面做各种各样的事情

00:21:43.110 --> 00:21:48.510
 Cloud Foundry好吧，现在我们要

00:21:47.040 --> 00:21:51.270
开始谈论这三个

00:21:48.510 --> 00:21:52.770
单独提供服务，我们会给您

00:21:51.270 --> 00:21:56.220
他们所做的事的简要概述

00:21:52.770 --> 00:21:59.100
然后我们将对它们进行一些演示，以便当

00:21:56.220 --> 00:22:01.050
你说我想提供一个

00:21:59.100 --> 00:22:02.400
这是配置服务器的容器吗

00:22:01.050 --> 00:22:05.160
当您说要提供一个

00:22:02.400 --> 00:22:07.440
配置服务器实例，您得到的是

00:22:05.160 --> 00:22:09.240
 Spring Cloud配置服务器的实例

00:22:07.440 --> 00:22:13.230
我们将Cloud Foundry推到了

00:22:09.240 --> 00:22:15.390
为您准备的场景，春天的云配置

00:22:13.230 --> 00:22:17.370
服务器可以由git支持

00:22:15.390 --> 00:22:19.920
仓库或Subversion仓库

00:22:17.370 --> 00:22:21.870
还有Spring Cloud里的东西

00:22:19.920 --> 00:22:23.940
可以修复我们支持我们的服务器

00:22:21.870 --> 00:22:25.350
搜索配置库中的路径，因此如果

00:22:23.940 --> 00:22:27.690
您有一个包含所有代码的存储库

00:22:25.350 --> 00:22:29.400
它和该存储库中的一个子目录

00:22:27.690 --> 00:22:31.110
是您可以指出的配置信息

00:22:29.400 --> 00:22:32.940
我们只是一个子目录， 

00:22:31.110 --> 00:22:35.790
我们将获取配置信息

00:22:32.940 --> 00:22:38.400
从那里开始，我们支持基本

00:22:35.790 --> 00:22:40.050
后端回购时，额外

00:22:38.400 --> 00:22:43.200
我们已经在此处实施的安全性

00:22:40.050 --> 00:22:44.610
只是想与配置对话的应用

00:22:43.200 --> 00:22:46.470
服务器必须具有OAuth令牌

00:22:44.610 --> 00:22:48.960
凭证中提供的

00:22:46.470 --> 00:22:51.360
绑定，我们只确保仅

00:22:48.960 --> 00:22:53.460
使用我们的绑定的应用程序

00:22:51.360 --> 00:22:55.080
可以和那个配置服务器通话，所以如果我们

00:22:53.460 --> 00:22:56.490
提供一英寸实例

00:22:55.080 --> 00:22:59.490
配置服务器，你想要一些其他

00:22:56.490 --> 00:23:01.260
没有使用我们的库的应用程序

00:22:59.490 --> 00:23:02.490
跟它说那行不通，因为你

00:23:01.260 --> 00:23:04.830
不知道如何做所有的OAuth 

00:23:02.490 --> 00:23:06.480
握手，因此您必须使用我们的

00:23:04.830 --> 00:23:08.940
绑定到它，这是一个额外的

00:23:06.480 --> 00:23:09.820
安全级别，然后我们还没有

00:23:08.940 --> 00:23:12.940
谈论了很多

00:23:09.820 --> 00:23:15.429
入门者，但让我讲到最后一个

00:23:12.940 --> 00:23:16.749
然后我们会回答您的问题

00:23:15.429 --> 00:23:18.549
你可能已经看过春天的云

00:23:16.749 --> 00:23:20.139
起动器和起动器的概念

00:23:18.549 --> 00:23:22.359
春天只是一种吸引人的方式

00:23:20.139 --> 00:23:23.590
依赖关系并获取依赖关系图

00:23:22.359 --> 00:23:25.210
拉入您的应用程序而无需

00:23:23.590 --> 00:23:27.909
必须拥有全部清单

00:23:25.210 --> 00:23:29.440
你需要拉进去，所以我们有

00:23:27.909 --> 00:23:31.779
我们为每项服务提供的服务

00:23:29.440 --> 00:23:34.779
提供和此启动器的配置

00:23:31.779 --> 00:23:36.729
服务器自动查看

00:23:34.779 --> 00:23:39.100
您从配置服务器获得的绑定

00:23:36.729 --> 00:23:40.450
出去和那个配置服务器对话

00:23:39.100 --> 00:23:42.580
并创建一个

00:23:40.450 --> 00:23:44.049
由所有配置设置支持

00:23:42.580 --> 00:23:46.509
在那个河里，所以你有一个

00:23:44.049 --> 00:23:48.549
依赖于您的构建文件，您

00:23:46.509 --> 00:23:50.799
将配置服务器实例绑定到您的

00:23:48.549 --> 00:23:52.330
应用程序以及所有这些东西

00:23:50.799 --> 00:23:54.639
后面的配置只是

00:23:52.330 --> 00:23:56.849
在您的应用程序中自动可用

00:23:54.639 --> 00:23:56.849
题

00:24:07.790 --> 00:24:12.410
是的，所以问题是我们支持这一点

00:24:11.030 --> 00:24:14.210
得到您的支持以进行颠覆

00:24:12.410 --> 00:24:15.410
今天有计划支持其他

00:24:14.210 --> 00:24:17.540
东西

00:24:15.410 --> 00:24:18.710
所以春天云里的一切都是关于

00:24:17.540 --> 00:24:19.940
具有的抽象层

00:24:18.710 --> 00:24:21.350
在下面的实现

00:24:19.940 --> 00:24:23.510
所以春天云抽象层

00:24:21.350 --> 00:24:26.030
提供此配置服务器抽象

00:24:23.510 --> 00:24:28.310
提供git和subversion的层

00:24:26.030 --> 00:24:29.810
那就是所有的实现

00:24:28.310 --> 00:24:31.700
中提供的实现

00:24:29.810 --> 00:24:33.290
到目前为止的开源项目

00:24:31.700 --> 00:24:35.150
我们正在利用的更多

00:24:33.290 --> 00:24:37.490
添加到开源项目

00:24:35.150 --> 00:24:38.870
我们会将它们拉入产品

00:24:37.490 --> 00:24:41.000
好吧，这就是

00:24:38.870 --> 00:24:42.650
释放的雨水实际上

00:24:41.000 --> 00:24:45.410
颠覆实现未编写

00:24:42.650 --> 00:24:46.820
通过维护者zuv spring cloud， 

00:24:45.410 --> 00:24:49.370
是别人写的，然后

00:24:46.820 --> 00:24:51.050
承诺或作为贡献提交

00:24:49.370 --> 00:24:52.700
因为他们想要颠覆支持

00:24:51.050 --> 00:24:55.190
所以只是一点点开源插件

00:24:52.700 --> 00:24:56.540
贡献绝对是甜甜圈

00:24:55.190 --> 00:24:58.100
所有由枢轴写所有其他

00:24:56.540 --> 00:24:59.750
第一部分不是

00:24:58.100 --> 00:25:01.640
由关键编写，所以如果有人有一个

00:24:59.750 --> 00:25:03.200
需要其中之一写

00:25:01.640 --> 00:25:04.760
贡献了开源，并尽快

00:25:03.200 --> 00:25:06.230
就像开源中提供的那样

00:25:04.760 --> 00:25:07.580
将其拉入产品听起来不错

00:25:06.230 --> 00:25:10.940
真的很酷，斯科特如何运作

00:25:07.580 --> 00:25:16.430
都是神奇的创意，让我们来看看

00:25:10.940 --> 00:25:17.900
让我们看看你有什么样的魔力

00:25:16.430 --> 00:25:19.310
可能看到这基本上是相同的

00:25:17.900 --> 00:25:21.350
那种图，你会看到你是否

00:25:19.310 --> 00:25:23.840
使用春季云服务还是

00:25:21.350 --> 00:25:25.820
常规的Spring Cloud Configs配置

00:25:23.840 --> 00:25:27.470
服务器，但实际上您是

00:25:25.820 --> 00:25:29.960
你把你的申请

00:25:27.470 --> 00:25:31.940
配置到诸如

00:25:29.960 --> 00:25:33.500
 git或subversion注意不是

00:25:31.940 --> 00:25:36.500
八哥猫在那里，所以不必

00:25:33.500 --> 00:25:37.850
是github它可以是任何git仓库

00:25:36.500 --> 00:25:40.190
包括你里面的一个

00:25:37.850 --> 00:25:42.770
您配置的防火墙

00:25:40.190 --> 00:25:44.800
属性在那里，这使您能够

00:25:42.770 --> 00:25:48.200
主要做一些事情

00:25:44.800 --> 00:25:50.990
使您能够对其进行版本控制和发展

00:25:48.200 --> 00:25:53.720
独立于您的财产

00:25:50.990 --> 00:25:54.890
应用程序，这是一种

00:25:53.720 --> 00:25:56.690
当你在的时候很好的功能

00:25:54.890 --> 00:25:58.070
做配置，我的意思是如果你把

00:25:56.690 --> 00:25:59.420
您将配置放入

00:25:58.070 --> 00:26:02.090
环境变量有点

00:25:59.420 --> 00:26:03.800
如果您很难将这些东西版本化

00:26:02.090 --> 00:26:06.770
将您的配置设置为硬编码

00:26:03.800 --> 00:26:08.540
在您的应用程序中，现在他们必须

00:26:06.770 --> 00:26:09.980
以与

00:26:08.540 --> 00:26:11.930
应用程序，可能必须在

00:26:09.980 --> 00:26:14.030
基于微服务的应用将不得不

00:26:11.930 --> 00:26:15.230
可以跨多个应用程序复制，因此

00:26:14.030 --> 00:26:17.990
相反，您将它们放入git或

00:26:15.230 --> 00:26:20.510
颠覆，这是怎么回事

00:26:17.990 --> 00:26:21.110
告诉Spring Cloud配置服务器

00:26:20.510 --> 00:26:23.210
在哪里

00:26:21.110 --> 00:26:25.220
仓库是什么以及在哪里找到这些

00:26:23.210 --> 00:26:27.769
并将采用这些属性

00:26:25.220 --> 00:26:29.299
它会吸那些，然后

00:26:27.769 --> 00:26:32.570
只是将它们提供给

00:26:29.299 --> 00:26:35.090
任何应用程序或微服务需要

00:26:32.570 --> 00:26:38.239
那些与之相关的

00:26:35.090 --> 00:26:39.739
配置服务器，然后就像他们

00:26:38.239 --> 00:26:41.330
是属性文件的一部分，或

00:26:39.739 --> 00:26:42.799
环境变量或你有什么

00:26:41.330 --> 00:26:44.179
这只是另一组

00:26:42.799 --> 00:26:48.999
可用的属性

00:26:44.179 --> 00:26:51.230
他们认为合适的应用

00:26:48.999 --> 00:26:52.340
让我给你看一个演示

00:26:51.230 --> 00:26:54.200
现在，我要继续

00:26:52.340 --> 00:26:56.779
告诉你一些注意事项

00:26:54.200 --> 00:27:00.409
首先演示我们正在运行

00:26:56.779 --> 00:27:03.259
这不在公共枢纽网上

00:27:00.409 --> 00:27:05.690
我们正在运行的服务云代工厂

00:27:03.259 --> 00:27:07.340
这在内部环境中

00:27:05.690 --> 00:27:11.330
我们致力于建立关键的Cloud Foundry 

00:27:07.340 --> 00:27:13.460
我们运营的PCF Cloud Foundry 

00:27:11.330 --> 00:27:15.559
内部，因此我已登录

00:27:13.460 --> 00:27:18.109
 VPN，现在谁知道

00:27:15.559 --> 00:27:20.779
在这种情况下发生会议Wi-Fi 

00:27:18.109 --> 00:27:21.950
 VPN会议可能会发生什么

00:27:20.779 --> 00:27:24.320
错误

00:27:21.950 --> 00:27:26.299
所以我也知道的一件事是

00:27:24.320 --> 00:27:28.129
有时浏览器喜欢

00:27:26.299 --> 00:27:30.379
向我投诉有关的证书

00:27:28.129 --> 00:27:32.149
这些服务器希望忽略它们

00:27:30.379 --> 00:27:34.609
我进来之前已经过去了

00:27:32.149 --> 00:27:36.289
但是如果你看到的不是

00:27:34.609 --> 00:27:37.549
配置服务器没有问题

00:27:36.289 --> 00:27:41.570
这是一个问题，事实是

00:27:37.549 --> 00:27:42.529
我们正在测试环境中运行，请参见

00:27:41.570 --> 00:27:44.299
我要做的另一件事是什么

00:27:42.529 --> 00:27:46.669
告诉你哦，我不想经历

00:27:44.299 --> 00:27:48.619
练习

00:27:46.669 --> 00:27:49.999
站在你面前的东西

00:27:48.619 --> 00:27:52.039
因为在某个时候

00:27:49.999 --> 00:27:54.320
无聊的我会通过

00:27:52.039 --> 00:27:55.700
首先模拟场景，然后我将

00:27:54.320 --> 00:27:58.429
告诉你我们真正发生了什么

00:27:55.700 --> 00:28:04.039
在这里，让我切换寻找另一个

00:27:58.429 --> 00:28:06.039
在其中工作的窗口，我们终于走了

00:28:04.039 --> 00:28:10.100
终于看到好了，也许看到了一些东西

00:28:06.039 --> 00:28:12.169
让我们一起去吧

00:28:10.100 --> 00:28:15.529
给你看这个东西

00:28:12.169 --> 00:28:17.899
首先，我登录到这台机器

00:28:15.529 --> 00:28:21.649
称为阅读，我们称我们为它们命名

00:28:17.899 --> 00:28:23.690
在颜色之后，所以这是红色，我在

00:28:21.649 --> 00:28:25.190
我的海堤组织，让我们说我

00:28:23.690 --> 00:28:26.989
有这个应用程序，我不会充分

00:28:25.190 --> 00:28:29.419
绑定二有一个简单的应用程序称为

00:28:26.989 --> 00:28:30.440
嗨，我们只是说我想看什么

00:28:29.419 --> 00:28:31.759
就像我已经添加了配置

00:28:30.440 --> 00:28:33.980
服务器让我删除它只是为了你

00:28:31.759 --> 00:28:39.870
可以看到完整的经验

00:28:33.980 --> 00:28:41.970
然后我们去确定是什么

00:28:39.870 --> 00:28:43.259
遗憾的是，警告只是

00:28:41.970 --> 00:28:44.879
说您有一个与此相关的应用

00:28:43.259 --> 00:28:46.769
你刚刚删除了它，所以你可能

00:28:44.879 --> 00:28:48.929
必须重新启动该应用程序，以便它意识到

00:28:46.769 --> 00:28:50.909
另一件事消失了，所以在这里我们

00:28:48.929 --> 00:28:52.320
尽我所能提供所有不同的服务

00:28:50.909 --> 00:28:54.210
我可以选择，所以你在这里看到

00:28:52.320 --> 00:28:55.919
配置服务器服务注册表电路

00:28:54.210 --> 00:28:56.999
断路器，我们正在使用配置

00:28:55.919 --> 00:28:59.789
服务器现在，所以我要选择

00:28:56.999 --> 00:29:00.929
这个家伙，所以我们在这里，我会

00:28:59.789 --> 00:29:02.519
选择这个计划，因为价格是

00:29:00.929 --> 00:29:05.009
无法获得，所以我的钱是

00:29:02.519 --> 00:29:07.049
无法使用，所以我会选择

00:29:05.009 --> 00:29:08.940
选择这个计划，它会想要一个

00:29:07.049 --> 00:29:11.690
该实例的名称，请确保我会打电话给

00:29:08.940 --> 00:29:15.210
它像配置服务器一样聪明的名字

00:29:11.690 --> 00:29:19.080
似乎我已经做到了

00:29:15.210 --> 00:29:21.330
添加它很棒，所以我现在可以真正做到

00:29:19.080 --> 00:29:25.559
很酷的东西，就像我可以来这里

00:29:21.330 --> 00:29:28.529
也许把它绑定到我的高处

00:29:25.559 --> 00:29:30.119
应用程序，所以让我们尝试一下， 

00:29:28.529 --> 00:29:32.820
要从中选择配置服务器

00:29:30.119 --> 00:29:34.019
市场并绑定它哦废话

00:29:32.820 --> 00:29:36.059
一切顺利，我会告诉你

00:29:34.019 --> 00:29:37.320
发生了我什至要走的原因

00:29:36.059 --> 00:29:38.490
通过展示什么的练习

00:29:37.320 --> 00:29:40.499
可能会出错是因为我这样做

00:29:38.490 --> 00:29:41.820
每次这可能是唯一的

00:29:40.499 --> 00:29:43.320
时间我已经做到了，意识到

00:29:41.820 --> 00:29:45.539
会发生

00:29:43.320 --> 00:29:47.129
我总是忘记这样做

00:29:45.539 --> 00:29:49.440
告诉它在哪里获取我的配置

00:29:47.129 --> 00:29:51.119
是我什么都没告诉过，所以

00:29:49.440 --> 00:29:53.039
该服务需要获得其

00:29:51.119 --> 00:29:55.529
从git仓库或

00:29:53.039 --> 00:29:56.730
颠覆存储库不知道在哪里

00:29:55.529 --> 00:29:59.190
去拿东西，因为我

00:29:56.730 --> 00:30:00.330
没有完成配置的设置

00:29:59.190 --> 00:30:02.070
服务器好吧，我不是要去

00:30:00.330 --> 00:30:03.749
市场对此感到抱歉，所以我不得不

00:30:02.070 --> 00:30:07.049
在这里关闭配置服务器

00:30:03.749 --> 00:30:09.269
点击管理，我当然有一个

00:30:07.049 --> 00:30:14.610
登录，让我花点时间处理

00:30:09.269 --> 00:30:16.470
然后，我很方便

00:30:14.610 --> 00:30:18.169
将密码放在这里，这样我就不会

00:30:16.470 --> 00:30:21.509
每次都要去找他们

00:30:18.169 --> 00:30:24.059
好吧，课友决定对我隐瞒我

00:30:21.509 --> 00:30:28.980
说方便，完全是旧的

00:30:24.059 --> 00:30:30.419
说谎或这太棒了

00:30:28.980 --> 00:30:33.379
任何人都知道如何获得一个

00:30:30.419 --> 00:30:37.009
不在屏幕上，而是在屏幕上

00:30:33.379 --> 00:30:37.009
在这里我会做

00:30:37.010 --> 00:30:46.620
复制密码时请多多包涵

00:30:43.049 --> 00:30:47.700
为了蓝色，我说我要去做

00:30:46.620 --> 00:30:48.870
方便，所以我不必看

00:30:47.700 --> 00:30:57.120
事实证明，我不得不

00:30:48.870 --> 00:30:58.830
无论如何都可以，是的，所以让我们

00:30:57.120 --> 00:31:00.059
在某个时间点不处理

00:30:58.830 --> 00:31:02.940
他们将实际上可用

00:31:00.059 --> 00:31:04.289
在PWS的演示休息室中运行的人

00:31:02.940 --> 00:31:06.570
在本次会议上演示

00:31:04.289 --> 00:31:08.549
我们将其快速设置为

00:31:06.570 --> 00:31:10.200
能够演示它，但还没准备好

00:31:08.549 --> 00:31:12.150
支持生产，因为我们

00:31:10.200 --> 00:31:13.919
甚至不在GA中，因此我们将继续

00:31:12.150 --> 00:31:15.809
 PWS几个星期，你可以去

00:31:13.919 --> 00:31:17.280
在演示休息室看到，然后

00:31:15.809 --> 00:31:20.460
我们将其拿走，然后在

00:31:17.280 --> 00:31:23.640
一年，我们将其部署到PWS 

00:31:20.460 --> 00:31:25.320
真的很好，所以我设法得到了

00:31:23.640 --> 00:31:27.330
斯科特当时是正确的密码

00:31:25.320 --> 00:31:28.770
说话我抄错了，所以我

00:31:27.330 --> 00:31:30.780
找到了我登录的正确帐户，现在

00:31:28.770 --> 00:31:32.640
要求我选择git或

00:31:30.780 --> 00:31:35.130
颠覆和一些URL，所以我可以

00:31:32.640 --> 00:31:37.470
选择一个或另一个，我碰巧

00:31:35.130 --> 00:31:40.650
我有一个git存储库

00:31:37.470 --> 00:31:44.400
继续并在github中填写

00:31:40.650 --> 00:31:47.360
冷静斜线kaboom斜线我的应用程序配置

00:31:44.400 --> 00:31:50.610
注意，如果我想，我可以选择

00:31:47.360 --> 00:31:52.110
选择一个特定的分支默认是

00:31:50.610 --> 00:31:55.289
当然会成为大师

00:31:52.110 --> 00:31:56.940
如果有路径，这是最自然的选择

00:31:55.289 --> 00:31:58.830
在我想要的存储库中

00:31:56.940 --> 00:32:02.510
深入研究，然后我可以通过设置一个

00:31:58.830 --> 00:32:04.650
如果我的存储库在那里搜索路径

00:32:02.510 --> 00:32:06.750
需要身份验证，我可以给我

00:32:04.650 --> 00:32:08.280
用户名和密码在这种情况下是

00:32:06.750 --> 00:32:09.900
只是一个公共的github存储库

00:32:08.280 --> 00:32:11.309
可以在浏览器中随意点击该URL 

00:32:09.900 --> 00:32:13.980
现在，您会看到我们在做什么

00:32:11.309 --> 00:32:16.289
看着我不是在树枝上

00:32:13.980 --> 00:32:19.830
而且没有路，所以我只是去

00:32:16.289 --> 00:32:22.530
单击提交，此时

00:32:19.830 --> 00:32:24.299
现在已经设置好配置服务器，我可以

00:32:22.530 --> 00:32:26.789
关闭此窗口，我可以回来

00:32:24.299 --> 00:32:31.620
在这里，我可以回到我的应用程序

00:32:26.789 --> 00:32:36.169
并祝你好运

00:32:31.620 --> 00:32:36.169
我可以过来绑定服务

00:32:38.639 --> 00:32:42.609
你知道我要我做

00:32:41.080 --> 00:32:44.019
我不会打扰的休息

00:32:42.609 --> 00:32:45.759
因为这不是真正的演示

00:32:44.019 --> 00:32:48.159
我想告诉你的主要是

00:32:45.759 --> 00:32:49.720
我会踢，我会做

00:32:48.159 --> 00:32:51.429
重新启动它以重新启动它

00:32:49.720 --> 00:32:53.200
然后该应用现在可以访问它

00:32:51.429 --> 00:32:55.570
相反，我要做的是

00:32:53.200 --> 00:33:03.070
我们面前已经有非常相似的事情

00:32:55.570 --> 00:33:04.989
进来这里去蓝色希望它不会

00:33:03.070 --> 00:33:06.850
请我再次登录

00:33:04.989 --> 00:33:08.049
太糟糕了，我已经有一个应用了

00:33:06.850 --> 00:33:11.249
这是我不知道你是否已经

00:33:08.049 --> 00:33:13.749
看到与否这是算命先生

00:33:11.249 --> 00:33:14.230
我相信马特·斯坦的例子

00:33:13.749 --> 00:33:15.700
写了

00:33:14.230 --> 00:33:17.429
您可能已经看过他的演讲之一

00:33:15.700 --> 00:33:19.509
您可能也已经在

00:33:17.429 --> 00:33:20.590
我们刚刚决定的关键休息室

00:33:19.509 --> 00:33:22.659
利用它，因为它是

00:33:20.590 --> 00:33:24.700
很多人都熟悉，又如何

00:33:22.659 --> 00:33:26.769
我已经部署了，这里有两项服务

00:33:24.700 --> 00:33:29.259
我拥有财富UI的是两个应用程序， 

00:33:26.769 --> 00:33:30.519
我们要谈论的财富服务

00:33:29.259 --> 00:33:32.710
稍后，当我们谈论

00:33:30.519 --> 00:33:33.909
发现服务器这些家伙如何交谈

00:33:32.710 --> 00:33:35.950
彼此如何发现彼此

00:33:33.909 --> 00:33:37.960
其他和我一起努力的主要事情

00:33:35.950 --> 00:33:41.169
现在想专注于事实

00:33:37.960 --> 00:33:43.440
财富服务已绑定到

00:33:41.169 --> 00:33:45.850
配置服务器和配置服务器为

00:33:43.440 --> 00:33:47.529
当我点击“管理”时

00:33:45.850 --> 00:33:49.090
要我自然登录

00:33:47.529 --> 00:33:55.269
人们会这样做吗？ 

00:33:49.090 --> 00:33:58.899
在看着我，它会告诉我

00:33:55.269 --> 00:34:00.960
事实上，我在git上设置了

00:33:58.899 --> 00:34:04.269
实际击中Matt的回购

00:34:00.960 --> 00:34:05.409
 github空间，这就是事实

00:34:04.269 --> 00:34:09.010
绑定到那个，所以我已经做到了

00:34:05.409 --> 00:34:12.280
以前，如果我要去让我们

00:34:09.010 --> 00:34:13.659
看到这里是算命应用程序

00:34:12.280 --> 00:34:15.429
稍后再详细讨论

00:34:13.659 --> 00:34:18.010
环境的环境

00:34:15.429 --> 00:34:20.079
你可以在这里的顶部看到

00:34:18.010 --> 00:34:21.849
在所有其他属性中

00:34:20.079 --> 00:34:24.040
可用于此应用程序

00:34:21.849 --> 00:34:27.099
包括属性文件中的内容

00:34:24.040 --> 00:34:28.990
以及来自vcap和环境变量

00:34:27.099 --> 00:34:31.299
和系统属性，什么不对

00:34:28.990 --> 00:34:33.490
在顶部，您可以看到它是

00:34:31.299 --> 00:34:35.589
实际从中吸取东西

00:34:33.490 --> 00:34:38.079
 github repo，所以你看到了春天

00:34:35.589 --> 00:34:40.149
您看到更有趣的个人资料

00:34:38.079 --> 00:34:42.010
对我来说，你看到一些有关

00:34:40.149 --> 00:34:43.100
尤里卡和其他人你知道租约

00:34:42.010 --> 00:34:44.990
更新间隔

00:34:43.100 --> 00:34:46.640
像这样的东西

00:34:44.990 --> 00:34:48.410
没有硬编码在

00:34:46.640 --> 00:34:52.130
算命先生出来，而不是

00:34:48.410 --> 00:34:53.600
在github中，因为这

00:34:52.130 --> 00:34:55.820
应用程序绑定到配置

00:34:53.600 --> 00:34:59.570
正在拉其配置的服务器

00:34:55.820 --> 00:35:01.700
那个git仓库中的数据就好像

00:34:59.570 --> 00:35:02.930
我们将它们放入属性文件或设置

00:35:01.700 --> 00:35:04.790
作为环境变量的一部分

00:35:02.930 --> 00:35:06.190
这个应用程式，但它们在应用程式外部

00:35:04.790 --> 00:35:11.600
因此可以对其进行版本控制

00:35:06.190 --> 00:35:13.280
与这个应用程式无关，所以就是

00:35:11.600 --> 00:35:15.260
本质上是我们要去的例子

00:35:13.280 --> 00:35:16.550
停下来，我们停下来，停下来

00:35:15.260 --> 00:35:19.580
这个例子现在我们要谈

00:35:16.550 --> 00:35:21.500
关于尤里卡的一点现在我们

00:35:19.580 --> 00:35:23.660
发现服务器服务注册表，因此

00:35:21.500 --> 00:35:26.750
那是斯科特接好的地方，所以

00:35:23.660 --> 00:35:29.090
与服务注册表，您得到的是

00:35:26.750 --> 00:35:31.340
spring-cloud-netflix尤里卡实例

00:35:29.090 --> 00:35:34.010
作为应用程序推送到Cloud Foundry 

00:35:31.340 --> 00:35:36.680
你，还有一个非常重要的地方

00:35:34.010 --> 00:35:38.780
出于安全考虑，我们在这里这样做，如果您知道

00:35:36.680 --> 00:35:40.310
百合子的工作原理基本上是

00:35:38.780 --> 00:35:42.400
应用程序可以出现，它可以

00:35:40.310 --> 00:35:44.360
向尤里卡注册并说我是一个

00:35:42.400 --> 00:35:48.140
某人可用的服务

00:35:44.360 --> 00:35:50.990
其他发现和使用另一个应用程序

00:35:48.140 --> 00:35:53.570
可以提出并再次向

00:35:50.990 --> 00:35:55.940
完全相同的名字，说我在这里

00:35:53.570 --> 00:35:57.740
我的名字，我准备好被两个

00:35:55.940 --> 00:35:59.240
应用程序出现并自行注册

00:35:57.740 --> 00:36:01.790
同名第二个就是

00:35:59.240 --> 00:36:03.740
要覆盖第一个，这样可以

00:36:01.790 --> 00:36:05.360
偶然发生是因为两个

00:36:03.740 --> 00:36:07.250
应用碰巧选择了相同的名称

00:36:05.360 --> 00:36:09.350
注册或可能发生

00:36:07.250 --> 00:36:10.610
恶意地是因为另一个应用

00:36:09.350 --> 00:36:13.040
来跟我说我要

00:36:10.610 --> 00:36:14.990
假面舞会是第一个应用程序， 

00:36:13.040 --> 00:36:16.730
通过偷走所有中间人攻击

00:36:14.990 --> 00:36:19.460
这意味着要去的流量

00:36:16.730 --> 00:36:20.960
服务发送给我，而不是做

00:36:19.460 --> 00:36:23.390
像东西一样存放起来

00:36:20.960 --> 00:36:25.940
然后你知道返回其他

00:36:23.390 --> 00:36:27.500
服务将返回，所以有一个

00:36:25.940 --> 00:36:30.470
做中间人的能力

00:36:27.500 --> 00:36:31.850
攻击尤里卡只是因为它

00:36:30.470 --> 00:36:33.110
没有建立这种安全性

00:36:31.850 --> 00:36:34.780
因为很多人没有

00:36:33.110 --> 00:36:36.500
需要你可以相信

00:36:34.780 --> 00:36:37.970
申请或保留名称

00:36:36.500 --> 00:36:40.190
直截了当，没有恶意

00:36:37.970 --> 00:36:42.020
在企业环境中进行

00:36:40.190 --> 00:36:43.790
很多人在乎你不能

00:36:42.020 --> 00:36:46.310
进行中间人攻击

00:36:43.790 --> 00:36:48.650
否则您将无意中注册

00:36:46.310 --> 00:36:51.500
具有相同名称的两件事，所以

00:36:48.650 --> 00:36:53.600
我们在这里设置的安全性是

00:36:51.500 --> 00:36:56.120
申请在尤里卡和

00:36:53.600 --> 00:36:58.190
说这是我的名字

00:36:56.120 --> 00:37:00.080
我们记录一些元数据

00:36:58.190 --> 00:37:02.270
注册包括一些信息

00:37:00.080 --> 00:37:04.700
在此OAuth 2中一起旅行

00:37:02.270 --> 00:37:06.710
标记任何其他想要来的东西

00:37:04.700 --> 00:37:08.780
并更新该注册记录

00:37:06.710 --> 00:37:10.520
同名更好地拥有相同的

00:37:08.780 --> 00:37:11.720
的令牌或它不起作用

00:37:10.520 --> 00:37:14.960
他们会出错并说你

00:37:11.720 --> 00:37:16.580
无法更新此注册记录，因此

00:37:14.960 --> 00:37:18.050
附带的第一个应用程序

00:37:16.580 --> 00:37:19.940
一个名称，并从中使用该名称进行注册

00:37:18.050 --> 00:37:21.650
然后是唯一可以

00:37:19.940 --> 00:37:23.420
曾经更新有关的任何信息

00:37:21.650 --> 00:37:24.830
再次注册，这是一个真正的

00:37:23.420 --> 00:37:26.630
我们拥有的重要安全性

00:37:24.830 --> 00:37:30.440
在开源弹簧的顶部添加

00:37:26.630 --> 00:37:33.290
云和Netflix，然后我们还有

00:37:30.440 --> 00:37:35.240
 Spring Cloud服务的入门者

00:37:33.290 --> 00:37:37.400
注册表，并自动

00:37:35.240 --> 00:37:39.830
配置尤里卡的客户端

00:37:37.400 --> 00:37:41.660
与其中的信息

00:37:39.830 --> 00:37:43.220
服务凭证与

00:37:41.660 --> 00:37:44.990
尤里卡服务器是什么和oauth2 

00:37:43.220 --> 00:37:47.990
令牌是您需要与之对话还是

00:37:44.990 --> 00:37:49.670
客户端ID，并将所有内容连接起来

00:37:47.990 --> 00:37:53.900
自动启动，这如何工作

00:37:49.670 --> 00:37:54.980
这只是魔术克雷格神奇的哇

00:37:53.900 --> 00:37:56.630
大概应该有迈克尔

00:37:54.980 --> 00:38:00.920
 Carducci与我们一起进行本次演讲

00:37:56.630 --> 00:38:03.290
情况，但无论如何我们在这里，这是

00:38:00.920 --> 00:38:05.690
这又是一张非常熟悉的照片

00:38:03.290 --> 00:38:07.280
您，它将通过示例

00:38:05.690 --> 00:38:09.770
一分钟后，您就会看到

00:38:07.280 --> 00:38:11.300
当我在Cloud Foundry上拉起

00:38:09.770 --> 00:38:13.520
蓝色，您看到我们有一个算命UI 

00:38:11.300 --> 00:38:15.050
和算命服务

00:38:13.520 --> 00:38:17.510
是已部署的单个应用程序

00:38:15.050 --> 00:38:21.470
进入Cloud Foundry等行业

00:38:17.510 --> 00:38:24.440
柜员服务伴随着财富

00:38:21.470 --> 00:38:27.350
柜员服务绑定到该服务

00:38:24.440 --> 00:38:29.840
注册表，它说嘿你好我的名字

00:38:27.350 --> 00:38:31.790
是算命服务，这是

00:38:29.840 --> 00:38:36.620
我住的地方人们可以

00:38:31.790 --> 00:38:38.840
如果他们需要我，请与我联系

00:38:36.620 --> 00:38:40.730
知道让他们知道我在哪里等等

00:38:38.840 --> 00:38:42.230
算命UI以后需要使用

00:38:40.730 --> 00:38:45.170
该服务以及算命UI 

00:38:42.230 --> 00:38:47.870
也绑定到服务注册表说

00:38:45.170 --> 00:38:49.580
嘿，告诉我一些关于

00:38:47.870 --> 00:38:51.770
算命先生您可以在哪里服务

00:38:49.580 --> 00:38:54.200
我找到其中之一，所以它问

00:38:51.770 --> 00:38:57.980
服务中的问题将其注册

00:38:54.200 --> 00:38:59.090
只需说出这一权利即可做出回应

00:38:57.980 --> 00:39:01.010
在这里，我相信每个人都能读懂

00:38:59.090 --> 00:39:02.810
很好，实际上那是一个

00:39:01.010 --> 00:39:04.790
它的删节版只是XML 

00:39:02.810 --> 00:39:07.190
一组返回的信息

00:39:04.790 --> 00:39:08.930
告诉你比你想要的更多

00:39:07.190 --> 00:39:10.760
了解该服务，包括是否

00:39:08.930 --> 00:39:13.040
该服务的多个实例，其中

00:39:10.760 --> 00:39:16.790
它可以在以下位置找到每个这些实例

00:39:13.040 --> 00:39:18.020
所以算命先生注视着你

00:39:16.790 --> 00:39:21.140
眼睛基本上会获取该信息

00:39:18.020 --> 00:39:22.460
用它来发财

00:39:21.140 --> 00:39:24.290
柜员服务，说嘿给我

00:39:22.460 --> 00:39:26.000
随机的运气有点像电话

00:39:24.290 --> 00:39:29.329
这样，真正有趣的是

00:39:26.000 --> 00:39:30.680
这尤其是如果您使用弹簧

00:39:29.329 --> 00:39:32.059
如果您曾经使用过云， 

00:39:30.680 --> 00:39:33.410
春天的云是否这样做，但如果

00:39:32.059 --> 00:39:35.569
你有看到，当你

00:39:33.410 --> 00:39:37.130
您已经提供了一个休息模板，并带有

00:39:35.569 --> 00:39:39.109
休息模板，您实际上可以制作一个

00:39:37.130 --> 00:39:40.160
获取请求或发布请求，或

00:39:39.109 --> 00:39:45.650
无论您需要哪种类型的请求

00:39:40.160 --> 00:39:47.180
而不是实际的实际网址

00:39:45.650 --> 00:39:49.160
您真的不喜欢的Cloud Foundry 

00:39:47.180 --> 00:39:51.470
甚至需要知道相反，你做一个

00:39:49.160 --> 00:39:53.660
调用服务名称斜杠

00:39:51.470 --> 00:39:55.550
路径就这样在这里打电话

00:39:53.660 --> 00:39:58.700
为了掩盖财富服务

00:39:55.550 --> 00:40:00.470
魔术正在发生，这是你知道的

00:39:58.700 --> 00:40:03.829
发现它正在查找此信息

00:40:00.470 --> 00:40:06.020
从独木舟的云层中升起

00:40:03.829 --> 00:40:07.880
服务注册表，然后它能够

00:40:06.020 --> 00:40:08.930
将其映射到实际的物理URL，但是

00:40:07.880 --> 00:40:10.910
在您的代码中，您不需要知道

00:40:08.930 --> 00:40:13.280
在身体上绑定到你的地方

00:40:10.910 --> 00:40:16.549
只是说嘿打个电话就可以了

00:40:13.280 --> 00:40:20.089
请求财富服务给我一些

00:40:16.549 --> 00:40:20.990
从那给我随机的财富

00:40:20.089 --> 00:40:22.430
让我向您展示更多有关

00:40:20.990 --> 00:40:23.599
那也让我想起了斯科特

00:40:22.430 --> 00:40:26.059
在说我失败了

00:40:23.599 --> 00:40:29.420
告诉你我的意思，但我完全

00:40:26.059 --> 00:40:30.410
在配置服务器中忘记了它， 

00:40:29.420 --> 00:40:32.170
这也是我要去的事情

00:40:30.410 --> 00:40:34.670
在这里显示，但适用于其他

00:40:32.170 --> 00:40:36.500
服务，例如服务

00:40:34.670 --> 00:40:38.059
注册表，所以我不想看红色

00:40:36.500 --> 00:40:44.420
再来看看蓝色我们有

00:40:38.059 --> 00:40:46.430
配置服务器在这里，让我们看看配置

00:40:44.420 --> 00:40:50.059
我所说的服务器必然会循环

00:40:46.430 --> 00:40:52.430
当我点击错误的按钮时，我会爱上它

00:40:50.059 --> 00:40:57.260
错误的事情是你可以看到

00:40:52.430 --> 00:40:59.510
它绑定到了幸运的服务

00:40:57.260 --> 00:41:01.280
所以这是现在绑定的一部分

00:40:59.510 --> 00:41:03.410
通常不需要

00:41:01.280 --> 00:41:05.450
这个，但是你可以看一下

00:41:03.410 --> 00:41:06.829
作为绑定的一部分，我可以进入

00:41:05.450 --> 00:41:10.040
显示凭证，在那里您可以看到

00:41:06.829 --> 00:41:14.150
请参阅访问令牌URL或

00:41:10.040 --> 00:41:15.829
访问令牌URI，从中获取this 

00:41:14.150 --> 00:41:19.210
这个特殊的应用这个财富

00:41:15.829 --> 00:41:21.790
服务可以获取令牌

00:41:19.210 --> 00:41:24.220
能够使用它，对不起

00:41:21.790 --> 00:41:25.770
这样客户可以获取此应用程序

00:41:24.220 --> 00:41:27.670
带我一个客户端到配置服务器

00:41:25.770 --> 00:41:29.920
请求此令牌，现在它可以

00:41:27.670 --> 00:41:32.050
使用配置服务器中的数据

00:41:29.920 --> 00:41:34.089
没有这个，没有客户ID 

00:41:32.050 --> 00:41:36.730
没有客户的秘密就没有

00:41:34.089 --> 00:41:38.020
这样您将能够

00:41:36.730 --> 00:41:40.150
实际上从配置中消耗了这个

00:41:38.020 --> 00:41:41.890
服务器，因为这种安全性，如果我们去

00:41:40.150 --> 00:41:46.000
看看那是一样的

00:41:41.890 --> 00:41:47.530
服务注册表的事情

00:41:46.000 --> 00:41:49.960
会看到类似的交易

00:41:47.530 --> 00:41:52.510
继续，尽管它有点隐藏在

00:41:49.960 --> 00:41:54.960
当下可能有些奇怪的事情

00:41:52.510 --> 00:41:57.130
继续那里，我们去

00:41:54.960 --> 00:41:59.920
你会发现实际上

00:41:57.130 --> 00:42:02.830
具有访问令牌URI和客户端ID，并且

00:41:59.920 --> 00:42:04.359
客户秘密是不可能的

00:42:02.830 --> 00:42:05.890
其他任何人都会成为

00:42:04.359 --> 00:42:08.260
能够进入该服务注册表并

00:42:05.890 --> 00:42:10.000
以他们的名字请求服务而无需

00:42:08.260 --> 00:42:12.820
实际上有一个好的代币

00:42:10.000 --> 00:42:15.130
因此在这种情况下，幸运的服务

00:42:12.820 --> 00:42:17.440
想要消耗将要使用的

00:42:15.130 --> 00:42:19.359
这个网址给它这个客户ID和

00:42:17.440 --> 00:42:22.060
秘密要做一个OAuth客户端

00:42:19.359 --> 00:42:23.770
凭证授予它可以取回

00:42:22.060 --> 00:42:25.270
令牌，然后它将能够

00:42:23.770 --> 00:42:27.430
在每一个上使用该令牌

00:42:25.270 --> 00:42:31.240
要求服务注册中心询问

00:42:27.430 --> 00:42:32.980
为了服务或约束自己，我们

00:42:31.240 --> 00:42:35.200
在服务中注册自己

00:42:32.980 --> 00:42:36.760
注册表以及当我们说客户端应用程序时

00:42:35.200 --> 00:42:38.320
需要采取这三件事， 

00:42:36.760 --> 00:42:40.270
创建您不需要的令牌

00:42:38.320 --> 00:42:42.460
编写其中的代码

00:42:40.270 --> 00:42:44.589
那个春天的云服务可以使您兴奋

00:42:42.460 --> 00:42:46.119
像依赖中那样拉

00:42:44.589 --> 00:42:47.410
已经有了所有知道如何做的代码

00:42:46.119 --> 00:42:50.440
吸收这三点信息

00:42:47.410 --> 00:42:52.420
去与WOT服务器交谈得到正确的

00:42:50.440 --> 00:42:54.160
令牌将令牌拉回

00:42:52.420 --> 00:42:56.080
客户端应用程序，然后使用

00:42:54.160 --> 00:42:57.700
这些服务器中的每一个的每次呼叫

00:42:56.080 --> 00:42:59.230
所以这不是代码，你没有，这是

00:42:57.700 --> 00:43:00.490
完全掩盖了我刚才所说的东西

00:42:59.230 --> 00:43:02.170
想进去看看

00:43:00.490 --> 00:43:03.580
那种你可以看到的地方

00:43:02.170 --> 00:43:05.050
幕后发生了什么事， 

00:43:03.580 --> 00:43:07.210
你知道它在哪里

00:43:05.050 --> 00:43:09.190
会要求该令牌

00:43:07.210 --> 00:43:13.599
但一般来说您不需要

00:43:09.190 --> 00:43:18.339
担心一切都好，如你所见

00:43:13.599 --> 00:43:23.250
我有运势必定

00:43:18.339 --> 00:43:23.250
服务注册表同样

00:43:26.130 --> 00:43:33.940
财富UI显然也很有趣

00:43:32.380 --> 00:43:36.450
我不在的时候发生了

00:43:33.940 --> 00:43:38.830
看到应用程序崩溃的限制

00:43:36.450 --> 00:43:40.060
注册或绑定到服务

00:43:38.830 --> 00:43:42.010
注册表，它有自己的一套

00:43:40.060 --> 00:43:44.890
凭证的唯一性

00:43:42.010 --> 00:43:46.750
其他的财富服务

00:43:44.890 --> 00:43:48.580
所以它可以消耗那些

00:43:46.750 --> 00:43:51.100
现在也一样，那里有什么不同

00:43:48.580 --> 00:43:53.710
与服务的绑定与

00:43:51.100 --> 00:43:56.020
与用户界面的绑定本质上是

00:43:53.710 --> 00:43:57.340
 URI将相同，但客户端

00:43:56.020 --> 00:43:59.140
 ID和机密不同，因为这

00:43:57.340 --> 00:44:01.270
是一个不同的客户，所以那些事情

00:43:59.140 --> 00:44:02.800
每个绑定的应用程序都是唯一的

00:44:01.270 --> 00:44:04.930
这项服务，使它

00:44:02.800 --> 00:44:06.670
一个应用程序不可能只是

00:44:04.930 --> 00:44:10.210
闻一闻，发现别人的

00:44:06.670 --> 00:44:12.340
客户ID权利以及由于

00:44:10.210 --> 00:44:14.230
我在那展示给你的一切

00:44:12.340 --> 00:44:15.940
滑动所有箭头将是

00:44:14.230 --> 00:44:19.360
能够发生，所以当我们走

00:44:15.940 --> 00:44:21.250
进入算命用户界面

00:44:19.360 --> 00:44:22.450
算命用户界面是，我将展示

00:44:21.250 --> 00:44:23.350
一会儿给你一些代码

00:44:22.450 --> 00:44:25.570
柜员你的眼睛将能够

00:44:23.350 --> 00:44:28.450
致电服务获得

00:44:25.570 --> 00:44:29.830
返回并显示在页面上

00:44:28.450 --> 00:44:31.240
你知道你确实从中学到了很多

00:44:29.830 --> 00:44:32.860
错误之一是我应该有

00:44:31.240 --> 00:44:34.240
确保密码是

00:44:32.860 --> 00:44:36.370
容易抓住，这是一个很好的

00:44:34.240 --> 00:44:38.080
事情，我可以点击刷新，它说

00:44:36.370 --> 00:44:39.970
如果您觉得自己是坚定的立场

00:44:38.080 --> 00:44:41.290
你的信念我很确定我是

00:44:39.970 --> 00:44:44.290
错了，所以我不会搞砸了

00:44:41.290 --> 00:44:45.040
一个你有主意，我会告诉你一个

00:44:44.290 --> 00:44:49.020
实际上的一点点代码

00:44:45.040 --> 00:44:51.610
使这种事情发生得如此震惊

00:44:49.020 --> 00:44:54.130
如果您查看构建文件

00:44:51.610 --> 00:44:57.060
这是您的财富服务

00:44:54.130 --> 00:45:01.060
会在那里看到

00:44:57.060 --> 00:45:03.280
你会看到春天的开端

00:45:01.060 --> 00:45:05.770
云服务配置客户端和春季

00:45:03.280 --> 00:45:07.300
它具有的云服务服务注册表

00:45:05.770 --> 00:45:09.430
一些其他必要的东西

00:45:07.300 --> 00:45:10.750
使应用程序正常工作，但这是

00:45:09.430 --> 00:45:12.010
将会带来的东西

00:45:10.750 --> 00:45:15.460
斯科特谈到的东西

00:45:12.010 --> 00:45:16.780
自动知道所有

00:45:15.460 --> 00:45:20.770
进行这项工作所需的依赖项

00:45:16.780 --> 00:45:22.870
引入财产来源，以便它知道

00:45:20.770 --> 00:45:24.610
从哪里获得这些东西表示

00:45:22.870 --> 00:45:27.970
配置可以使客户端能够

00:45:24.610 --> 00:45:31.390
知道从配置中获取东西

00:45:27.970 --> 00:45:34.780
服务器等等等等，当你走的时候

00:45:31.390 --> 00:45:37.380
看看代码，看看我在哪里

00:45:34.780 --> 00:45:37.380
这里

00:45:37.950 --> 00:45:40.900
是的，我和斯科特经历了这个

00:45:39.730 --> 00:45:42.040
昨天运动，我不能

00:45:40.900 --> 00:45:43.690
记得自己看着这个想法

00:45:42.040 --> 00:45:45.550
平静我的天哪，就像没有代码

00:45:43.690 --> 00:45:47.470
谈论事实上你会记得斯科特

00:45:45.550 --> 00:45:48.820
我一直在看，是的，哦，是的

00:45:47.470 --> 00:45:49.960
只是域，这里没有东西

00:45:48.820 --> 00:45:51.910
这些只是控制器， 

00:45:49.960 --> 00:45:53.800
这里没有什么，只是先生，有

00:45:51.910 --> 00:45:55.390
这里没有什么，这只是应用程序

00:45:53.800 --> 00:45:58.600
没人关心的代码无聊的东西

00:45:55.390 --> 00:45:59.800
权利当然无关

00:45:58.600 --> 00:46:02.500
这是你最重要的事情

00:45:59.800 --> 00:46:04.870
应用程序，它与我们无关

00:46:02.500 --> 00:46:06.850
在云服务中，我们最关心的是

00:46:04.870 --> 00:46:09.790
关于的事实是我们已经启用

00:46:06.850 --> 00:46:11.830
发现客户那一行正确

00:46:09.790 --> 00:46:13.570
这这这是你知道的

00:46:11.830 --> 00:46:16.060
放下最重要的事情

00:46:13.570 --> 00:46:18.280
这个Java提交的应用程序

00:46:16.060 --> 00:46:22.380
这个配置类是什么

00:46:18.280 --> 00:46:24.640
使应用程序知道去

00:46:22.380 --> 00:46:26.980
发现服务器以查找其

00:46:24.640 --> 00:46:29.320
服务，在这种情况下

00:46:26.980 --> 00:46:31.570
因为这是

00:46:29.320 --> 00:46:34.450
向我们注册

00:46:31.570 --> 00:46:37.330
发现服务如何注册

00:46:34.450 --> 00:46:39.160
本身会落在这里吗

00:46:37.330 --> 00:46:42.910
永远忘记把它放在哪里

00:46:39.160 --> 00:46:44.590
引导你要有春天

00:46:42.910 --> 00:46:46.780
应用程序名称就是

00:46:44.590 --> 00:46:48.640
将成为服务的名称，所以当

00:46:46.780 --> 00:46:50.710
我们去看看客户我什么时候

00:46:48.640 --> 00:46:52.330
用户界面开始查找该东西

00:46:50.710 --> 00:46:54.730
会用财富这个名字来查找它

00:46:52.330 --> 00:46:56.320
和我的幻灯片财富管理服务

00:46:54.730 --> 00:46:58.120
我可能应该有的心理测绘

00:46:56.320 --> 00:46:59.800
修复了幻灯片以使其与此匹配，但是

00:46:58.120 --> 00:47:04.180
会用财富这个名字来查找它

00:46:59.800 --> 00:47:05.140
就云配置而言

00:47:04.180 --> 00:47:06.460
会有一点额外的

00:47:05.140 --> 00:47:08.710
我认为这里的信息已经

00:47:06.460 --> 00:47:10.300
最近让耶更容易了

00:47:08.710 --> 00:47:11.740
入门者会为您做到的，是的

00:47:10.300 --> 00:47:15.730
是的，入门者会照顾好

00:47:11.740 --> 00:47:17.440
这部分是给你的，仅此而已

00:47:15.730 --> 00:47:18.990
算命先生服务

00:47:17.440 --> 00:47:22.180
配置通知没有

00:47:18.990 --> 00:47:23.380
有一个供人发现的网站

00:47:22.180 --> 00:47:25.210
客户那里什么都没有

00:47:23.380 --> 00:47:27.580
启用配置客户端是因为

00:47:25.210 --> 00:47:28.840
那样不是真的没有必要

00:47:27.580 --> 00:47:30.130
入门者正在照顾那个生意

00:47:28.840 --> 00:47:35.580
为您确保

00:47:30.130 --> 00:47:35.580
东西都可以了

00:47:38.760 --> 00:47:42.330
好的断路器，最后的服务

00:47:40.920 --> 00:47:43.710
是断路器仪表板

00:47:42.330 --> 00:47:46.560
希望大家都熟悉

00:47:43.710 --> 00:47:49.590
您需要维修的断路器模式

00:47:46.560 --> 00:47:51.210
需要与服务B对话的a，如果

00:47:49.590 --> 00:47:53.220
由于某种原因，服务B离开了您

00:47:51.210 --> 00:47:56.340
希望服务援助在某些方面发挥作用

00:47:53.220 --> 00:47:58.040
可预测的优美方式

00:47:56.340 --> 00:48:00.570
它不能再与服务B通信了

00:47:58.040 --> 00:48:02.400
所以通常你喜欢做的是

00:48:00.570 --> 00:48:05.520
服务的一些后备机制

00:48:02.400 --> 00:48:07.710
可以用一些有用的数据来响应

00:48:05.520 --> 00:48:08.910
可能没有的人

00:48:07.710 --> 00:48:10.020
因为它不能做的一切

00:48:08.910 --> 00:48:12.300
与服务B通话

00:48:10.020 --> 00:48:14.790
因此，如果这种断路器

00:48:12.300 --> 00:48:16.410
模式正在使用中并且正在发生

00:48:14.790 --> 00:48:18.780
错误的，您希望能够看到

00:48:16.410 --> 00:48:20.130
那首先发生在你身上

00:48:18.780 --> 00:48:21.600
希望该断路器跳闸

00:48:20.130 --> 00:48:22.560
自动，第二想成为

00:48:21.600 --> 00:48:24.180
能够看到有东西

00:48:22.560 --> 00:48:25.770
发生这不是平常的事情

00:48:24.180 --> 00:48:28.650
这正在发生，这就是这个

00:48:25.770 --> 00:48:30.590
启用，因此当您提供服务时

00:48:28.650 --> 00:48:32.910
断路器或仪表板实例

00:48:30.590 --> 00:48:34.790
这是我们三个中最复杂的

00:48:32.910 --> 00:48:37.170
服务，这就是我们将其留在最后的原因

00:48:34.790 --> 00:48:38.580
你实际上得到了三件事

00:48:37.170 --> 00:48:39.840
告诉你这些是真正的快速和

00:48:38.580 --> 00:48:42.270
然后我们将有一张图片显示

00:48:39.840 --> 00:48:43.830
它更清楚，所以你得到

00:48:42.270 --> 00:48:45.930
春天云Netflix的实例

00:48:43.830 --> 00:48:47.670
历史信息中心，这是

00:48:45.930 --> 00:48:48.660
让你对事物的看法

00:48:47.670 --> 00:48:50.609
现在正在运行

00:48:48.660 --> 00:48:53.310
然后你得到一个Spring Cloud的实例

00:48:50.609 --> 00:48:56.490
 Netflix涡轮服务器和什么涡轮

00:48:53.310 --> 00:48:57.960
难道所有指标都会进来吗

00:48:56.490 --> 00:49:00.300
从所有连接的东西

00:48:57.960 --> 00:49:02.010
到断路器，并带来

00:49:00.300 --> 00:49:03.960
他们都集中在一起

00:49:02.010 --> 00:49:06.240
点，以便此仪表板可以读取

00:49:03.960 --> 00:49:07.980
从中获取信息，然后您

00:49:06.240 --> 00:49:10.530
获取一个关键兔子的实例＆ 

00:49:07.980 --> 00:49:12.210
 hué服务，这些指标如何

00:49:10.530 --> 00:49:14.460
被发送到涡轮，所以图片会

00:49:12.210 --> 00:49:16.890
解释得更好，当然我们

00:49:14.460 --> 00:49:18.480
有一个自动接线的起动器

00:49:16.890 --> 00:49:19.830
所有这些东西，使您的客户可以

00:49:18.480 --> 00:49:22.470
与Rabbit服务器交谈，然后

00:49:19.830 --> 00:49:25.380
兔子苏黎世和涡轮服务器和

00:49:22.470 --> 00:49:27.570
卡彭（Kape）兔子的话，怎么办

00:49:25.380 --> 00:49:29.460
这项工作斯科特，这甚至更神奇

00:49:27.570 --> 00:49:31.560
没有人能告诉我这种魔力

00:49:29.460 --> 00:49:32.400
因为我认为你可能会处理

00:49:31.560 --> 00:49:34.710
一个比我更好的

00:49:32.400 --> 00:49:36.720
好的，所以这是三个组成部分

00:49:34.710 --> 00:49:39.480
我刚才在谈论

00:49:36.720 --> 00:49:41.520
在远处有您的客户端应用程序

00:49:39.480 --> 00:49:43.740
左边然后你有这个

00:49:41.520 --> 00:49:46.809
提示将要采用指标

00:49:43.740 --> 00:49:50.170
到然后你有

00:49:46.809 --> 00:49:51.849
涡轮服务器在中间这只是

00:49:50.170 --> 00:49:53.410
动画事物开始流动

00:49:51.849 --> 00:49:55.900
对，然后我们有了历史

00:49:53.410 --> 00:49:58.180
最后的仪表板，这样您的客户

00:49:55.900 --> 00:49:59.920
应用程序只是发送指标

00:49:58.180 --> 00:50:02.440
关于事情如何发展

00:49:59.920 --> 00:50:03.430
提示涡轮采用所有即将来临的指标

00:50:02.440 --> 00:50:05.380
来自所有不同的客户

00:50:03.430 --> 00:50:07.390
应用程序将它们放在一个提示上， 

00:50:05.380 --> 00:50:09.400
给历史性的木板一个地方

00:50:07.390 --> 00:50:10.839
从那里得到所有这些，然后你得到

00:50:09.400 --> 00:50:12.809
这个不错的用户界面，告诉您什么

00:50:10.839 --> 00:50:16.630
服务上升什么服务下降

00:50:12.809 --> 00:50:18.400
如果服务a试图呼叫服务B 

00:50:16.630 --> 00:50:20.319
它不能告诉你

00:50:18.400 --> 00:50:21.940
这些就是所有这些成分

00:50:20.319 --> 00:50:23.920
一起努力，因为你在做什么

00:50:21.940 --> 00:50:25.299
如果你不去的话就必须正常做

00:50:23.920 --> 00:50:27.970
使用Spring Cloud Services，您将

00:50:25.299 --> 00:50:30.849
必须原谅我，你将不得不

00:50:27.970 --> 00:50:33.220
站起来你的历史状态板

00:50:30.849 --> 00:50:34.390
将不得不在历史中

00:50:33.220 --> 00:50:38.559
您将必须进入的仪表板

00:50:34.390 --> 00:50:41.289
您想要的指标流的URL 

00:50:38.559 --> 00:50:43.180
看你是否想知道

00:50:41.289 --> 00:50:44.559
现在以多种服务的指标

00:50:43.180 --> 00:50:46.599
你有多个流，你要

00:50:44.559 --> 00:50:49.930
必须站起来涡轮才能做到这一点

00:50:46.599 --> 00:50:51.880
然后用spring输入该涡轮URL 

00:50:49.930 --> 00:50:54.609
云服务，您不必这样做

00:50:51.880 --> 00:50:58.240
向涡轮机投标提供服务

00:50:54.609 --> 00:50:59.920
通过这个队列为您处理

00:50:58.240 --> 00:51:01.599
基本上甚至不需要去那里

00:50:59.920 --> 00:51:02.019
它的内部URL就是

00:51:01.599 --> 00:51:04.119
界

00:51:02.019 --> 00:51:05.470
一切都捆绑在一起，所以

00:51:04.119 --> 00:51:07.509
当您进入此技巧仪表板时

00:51:05.470 --> 00:51:12.490
您直接看到指标，而没有

00:51:07.509 --> 00:51:14.740
必须输入网址或其他任何内容

00:51:12.490 --> 00:51:17.039
我忘了这张幻灯片

00:51:14.740 --> 00:51:21.430
服务确实有额外的皱纹

00:51:17.039 --> 00:51:24.220
就像我们说的那样，当您绑定到

00:51:21.430 --> 00:51:26.019
断路器仪表板服务什么

00:51:24.220 --> 00:51:27.460
您的应用程序实际上是一只兔子

00:51:26.019 --> 00:51:29.289
提示它可能开始放置指标

00:51:27.460 --> 00:51:30.700
并当然不采用指标

00:51:29.289 --> 00:51:32.440
队列不是您的应用程序

00:51:30.700 --> 00:51:35.500
明确地做你包括一个

00:51:32.440 --> 00:51:38.079
说明这是历史性的注释

00:51:35.500 --> 00:51:39.700
 skom，然后每次使用该方法

00:51:38.079 --> 00:51:41.349
被击中的指标是

00:51:39.700 --> 00:51:45.190
自动进入队列

00:51:41.349 --> 00:51:46.869
为了你，所以如果你不使用兔子

00:51:45.190 --> 00:51:49.089
您的应用程序进行任何消息传递

00:51:46.869 --> 00:51:52.000
实际上，您要做的只是包括

00:51:49.089 --> 00:51:53.680
入门者，您获得了兔子连接

00:51:52.000 --> 00:51:55.269
在幕后你甚至都不知道

00:51:53.680 --> 00:51:56.470
在那儿，但是历史上的罪过

00:51:55.269 --> 00:51:58.599
卡车肯定知道它在那里并开始

00:51:56.470 --> 00:51:59.540
常设的东西，但如果你是

00:51:58.599 --> 00:52:01.100
用兔子和你

00:51:59.540 --> 00:52:02.600
应用程序，您现在必须

00:52:01.100 --> 00:52:05.630
连接将我们分解为一个

00:52:02.600 --> 00:52:07.610
在幕后创造

00:52:05.630 --> 00:52:09.710
要使用的历史数据和另一个

00:52:07.610 --> 00:52:11.360
您的客户端应用程序正在使用的

00:52:09.710 --> 00:52:13.610
这种情况下，您需要做一点

00:52:11.360 --> 00:52:15.080
一点编码，因为我们必须

00:52:13.610 --> 00:52:17.030
连接工厂bean，我们需要

00:52:15.080 --> 00:52:18.470
知道那个是为了那个

00:52:17.030 --> 00:52:21.230
场景中，您需要添加

00:52:18.470 --> 00:52:23.510
上面的代码只是注释了

00:52:21.230 --> 00:52:26.210
我们正在寻求的联系

00:52:23.510 --> 00:52:28.430
哈里斯hystrix的历史

00:52:26.210 --> 00:52:29.840
连接工厂注释和那个

00:52:28.430 --> 00:52:31.430
只是告诉历史悠久的syn fruss卡车

00:52:29.840 --> 00:52:33.550
确定这是兔子的连接

00:52:31.430 --> 00:52:35.810
希望您使用，然后自己使用

00:52:33.550 --> 00:52:38.120
客户代码，您可以使用类似

00:52:35.810 --> 00:52:39.560
应用主要注释，然后

00:52:38.120 --> 00:52:42.260
连接工厂将自动

00:52:39.560 --> 00:52:44.000
接线到您的所有春季AMQP中

00:52:42.260 --> 00:52:47.020
基础设施或它是什么

00:52:44.000 --> 00:52:49.610
如果您使用的是三种不同的

00:52:47.020 --> 00:52:50.990
内部弹簧a和PP连接

00:52:49.610 --> 00:52:52.520
那么你可能还有其他资格赛

00:52:50.990 --> 00:52:54.170
底部的注释

00:52:52.520 --> 00:52:55.910
您如何设计它的重要部分是

00:52:54.170 --> 00:52:57.710
您可以使用此历史连接

00:52:55.910 --> 00:52:59.720
工厂注释告诉命中的ryx 

00:52:57.710 --> 00:53:01.820
基础设施，这就是你想要的

00:52:59.720 --> 00:53:03.650
使用和背后的呼吁

00:53:01.820 --> 00:53:07.100
连接工厂hystrix连接

00:53:03.650 --> 00:53:08.780
工厂我们的代码正在寻找

00:53:07.100 --> 00:53:11.090
外面有一个断路器

00:53:08.780 --> 00:53:12.530
服务绑定到您的应用程序

00:53:11.090 --> 00:53:13.760
从所有兔子凭证

00:53:12.530 --> 00:53:15.080
并创建该连接

00:53:13.760 --> 00:53:16.370
工厂好，我要问一个哑巴

00:53:15.080 --> 00:53:18.440
问题，不，我不会问你

00:53:16.370 --> 00:53:21.080
我是如何运作的，但不是

00:53:18.440 --> 00:53:22.460
期待一个神奇的答案，这是一个

00:53:21.080 --> 00:53:23.360
严重的问题，这是我的问题

00:53:22.460 --> 00:53:24.260
大概应该在我们问到之前

00:53:23.360 --> 00:53:25.640
在这里，但我敢肯定其他人

00:53:24.260 --> 00:53:27.170
可能其中之一可能想知道这一点

00:53:25.640 --> 00:53:29.990
我会回答的，是的，你可能会

00:53:27.170 --> 00:53:32.030
知道这个历史联系工厂

00:53:29.990 --> 00:53:33.770
是我会被误认为

00:53:32.030 --> 00:53:35.600
那只是一个限定词注解

00:53:33.770 --> 00:53:36.800
只是一个限定词注解

00:53:35.600 --> 00:53:39.800
我想是这样，基本上

00:53:36.800 --> 00:53:42.140
本身已注释的注释

00:53:39.800 --> 00:53:44.390
与预选赛，然后在内部

00:53:42.140 --> 00:53:46.790
在春季云服务中，我们

00:53:44.390 --> 00:53:48.890
寻找那个特定的资格

00:53:46.790 --> 00:53:51.230
那个特定的限定词

00:53:48.890 --> 00:53:52.580
是时候选择这个了，所以我们

00:53:51.230 --> 00:53:55.630
基本上做你会做的同样的事情

00:53:52.580 --> 00:53:57.550
如果你有多只兔子，在春季做

00:53:55.630 --> 00:53:59.690
兔子豆一起工作

00:53:57.550 --> 00:54:01.640
限定一个是历史联系

00:53:59.690 --> 00:54:03.080
工厂很高兴我知道答案

00:54:01.640 --> 00:54:04.660
我以为那个问题我很紧张

00:54:03.080 --> 00:54:08.330
那是答案，但我不确定

00:54:04.660 --> 00:54:10.610
好吧，我看到断路器

00:54:08.330 --> 00:54:12.290
断路器很好，所以我们有一个

00:54:10.610 --> 00:54:14.140
打破东西，我的意思是它的名字

00:54:12.290 --> 00:54:17.840
电路

00:54:14.140 --> 00:54:19.550
让我们看看如何看到这将如何工作

00:54:17.840 --> 00:54:22.220
对，所以我先给你看代码

00:54:19.550 --> 00:54:25.130
因为我们在这里去看看我是否知道

00:54:22.220 --> 00:54:29.120
在哪里找到它相信它会在

00:54:25.130 --> 00:54:33.380
哦，实际上我相信它不在

00:54:29.120 --> 00:54:35.540
在这里我把它放在哪里或在哪里

00:54:33.380 --> 00:54:38.060
马特（Matt）在界面中更准确地说明了这一点

00:54:35.540 --> 00:54:39.710
对，它在用户界面中，难怪我迷路了

00:54:38.060 --> 00:54:41.720
好的断路器总是从

00:54:39.710 --> 00:54:42.890
呼叫者的视角，所以呼叫者

00:54:41.720 --> 00:54:45.980
是有的

00:54:42.890 --> 00:54:48.140
仪器说我在这种情况下

00:54:45.980 --> 00:54:50.120
我试图调用服务器的用户界面是

00:54:48.140 --> 00:54:52.250
那些电话工作与否，如果那些

00:54:50.120 --> 00:54:54.380
从呼叫者的呼叫开始失败

00:54:52.250 --> 00:54:56.540
角度来看，那真的是我们

00:54:54.380 --> 00:54:58.010
想知道是的，所以我们有

00:54:56.540 --> 00:54:59.480
这是我们有一种称为

00:54:58.010 --> 00:55:01.370
随机的财富将被称为

00:54:59.480 --> 00:55:03.380
从控制器，以便它可以服务

00:55:01.370 --> 00:55:05.090
财富，它会简单地利用休息

00:55:03.380 --> 00:55:06.530
模板来获取对象和

00:55:05.090 --> 00:55:07.880
注意那里的URL，我的意思是说

00:55:06.530 --> 00:55:11.000
没什么-断路器，但是

00:55:07.880 --> 00:55:12.290
值得一提的是它正在

00:55:11.000 --> 00:55:15.500
服务注册表并查找

00:55:12.290 --> 00:55:16.880
以财富为名的服务，所以您

00:55:15.500 --> 00:55:18.770
知道是否放入浏览器

00:55:16.880 --> 00:55:21.020
现在HTTP冒号斜杠

00:55:18.770 --> 00:55:23.120
运气不会那么好

00:55:21.020 --> 00:55:24.860
好吧，你可以尝试卷曲相同

00:55:23.120 --> 00:55:26.900
实际上，即使您已登录

00:55:24.860 --> 00:55:28.070
进入VPN并做同样的事情

00:55:26.900 --> 00:55:29.120
我们在这里做，你还是不会

00:55:28.070 --> 00:55:31.280
找到财富，因为没有

00:55:29.120 --> 00:55:33.260
机器的名字就是运气

00:55:31.280 --> 00:55:36.620
在封面下使用此名称

00:55:33.260 --> 00:55:39.080
用一些诡计去说嘿

00:55:36.620 --> 00:55:40.610
找到我的服务名称财富

00:55:39.080 --> 00:55:44.030
然后本质上它将重写此URL 

00:55:40.610 --> 00:55:45.020
在实际发送请求之前，但是

00:55:44.030 --> 00:55:46.280
如果效果很好

00:55:45.020 --> 00:55:48.320
我们将重新获得财富

00:55:46.280 --> 00:55:50.270
为了一些随机的财富

00:55:48.320 --> 00:55:53.210
从该服务，如果它不起作用

00:55:50.270 --> 00:55:54.830
但是，如果情况不佳，就让我们

00:55:53.210 --> 00:55:57.770
说服务刚刚消失了

00:55:54.830 --> 00:55:59.510
一个完全可能的情况是

00:55:57.770 --> 00:56:00.800
电池来了，写得更好，是的，你

00:55:59.510 --> 00:56:03.590
马上回到里面

00:56:00.800 --> 00:56:05.300
同时或如果您真的很喜欢

00:56:03.590 --> 00:56:07.100
删除某人我是说你知道他们

00:56:05.300 --> 00:56:09.050
杀死它，将其删除，将其炸开

00:56:07.100 --> 00:56:11.450
离开或由于某种原因

00:56:09.050 --> 00:56:12.440
否则可能不健康

00:56:11.450 --> 00:56:13.820
开始引发异常

00:56:12.440 --> 00:56:16.130
我不知道这不是什么原因

00:56:13.820 --> 00:56:18.020
如果那不是我们的工作

00:56:16.130 --> 00:56:19.520
希望应用程序崩溃

00:56:18.020 --> 00:56:21.200
因为这里的一些服务是

00:56:19.520 --> 00:56:22.430
失败了，我们不想级联

00:56:21.200 --> 00:56:26.750
未能使整个事情失败

00:56:22.430 --> 00:56:27.320
我们希望有一些不错的简便方法

00:56:26.750 --> 00:56:29.240
告诉别人

00:56:27.320 --> 00:56:31.670
坚持下去，也许事情不会这样

00:56:29.240 --> 00:56:33.800
好吧，现在回来再问一下好吗

00:56:31.670 --> 00:56:34.910
的东西，所以在

00:56:33.800 --> 00:56:36.950
算命服务是什么

00:56:34.910 --> 00:56:38.510
继续，我们在这里注释了它

00:56:36.950 --> 00:56:41.330
与历史命令和历史命令

00:56:38.510 --> 00:56:43.790
基本上是说这可能

00:56:41.330 --> 00:56:45.590
错了，什么时候错了我想要

00:56:43.790 --> 00:56:47.480
你转身回叫

00:56:45.590 --> 00:56:48.020
运气是这种方法

00:56:47.480 --> 00:56:50.540
在这里

00:56:48.020 --> 00:56:52.070
历史回退之间的主要规则

00:56:50.540 --> 00:56:53.900
方法是必须具有相同的

00:56:52.070 --> 00:56:56.240
签名作为它的方法

00:56:53.900 --> 00:56:58.900
退回这很容易

00:56:56.240 --> 00:57:01.520
当你不带任何参数但是

00:56:58.900 --> 00:57:03.410
如果由于任何原因失败

00:57:01.520 --> 00:57:06.260
成为后立即被调用

00:57:03.410 --> 00:57:10.430
再次恢复健康

00:57:06.260 --> 00:57:12.080
之前是这样做的，这也是

00:57:10.430 --> 00:57:13.520
指标来自何处

00:57:12.080 --> 00:57:15.800
属于迟滞的命令

00:57:13.520 --> 00:57:17.780
屏幕云对更糟的事实是

00:57:15.800 --> 00:57:19.220
你在那里那里也意味着每个

00:57:17.780 --> 00:57:20.480
这个方法被称为

00:57:19.220 --> 00:57:23.420
指标将被捕获， 

00:57:20.480 --> 00:57:25.600
发送到该RabbitMQ， 

00:57:23.420 --> 00:57:28.430
涡轮，然后转到仪表板

00:57:25.600 --> 00:57:29.780
的确如此，我们回到了

00:57:28.430 --> 00:57:33.370
应用程序，我只是向您展示它的工作原理

00:57:29.780 --> 00:57:36.770
希望再过几次

00:57:33.370 --> 00:57:38.960
是的，我认为恐惧伤害了我，但我们会

00:57:36.770 --> 00:57:41.120
看，你的鞋子我的鞋子不是

00:57:38.960 --> 00:57:42.980
今天让我开心，我不是

00:57:41.120 --> 00:57:44.570
舒服一点，告诉你什么

00:57:42.980 --> 00:57:47.000
我们要去，我们要来

00:57:44.570 --> 00:57:51.790
在这里，我们曾经在

00:57:47.000 --> 00:57:55.430
我要转到的用户界面我要转到的用户界面

00:57:51.790 --> 00:57:56.630
房子，如果我在正确的位置，我想

00:57:55.430 --> 00:57:58.370
去服务，我会

00:57:56.630 --> 00:58:00.220
故意终止服务

00:57:58.370 --> 00:58:03.080
拿下来

00:58:00.220 --> 00:58:07.100
当然，让我们停止吧，所以没有

00:58:03.080 --> 00:58:09.200
在服务中走了，我回来了

00:58:07.100 --> 00:58:11.570
在这里点击我要刷新的应用

00:58:09.200 --> 00:58:12.890
未来尚不清楚，因为会发生什么

00:58:11.570 --> 00:58:15.200
我们试图在那里提出要求

00:58:12.890 --> 00:58:16.910
没有被发现的服务

00:58:15.200 --> 00:58:20.240
试图使呼叫者找不到

00:58:16.910 --> 00:58:22.970
服务失败，出了点问题

00:58:20.240 --> 00:58:24.980
历史命令抓住了它

00:58:22.970 --> 00:58:27.320
并将其发送给后备

00:58:24.980 --> 00:58:28.610
方法，所以我可以继续做这一切

00:58:27.320 --> 00:58:30.920
整天，直到该服务到来

00:58:28.610 --> 00:58:33.650
回到我的未来会变得模糊我会

00:58:30.920 --> 00:58:35.600
把服务带回来，但是在我做之前

00:58:33.650 --> 00:58:37.760
让我让我过去在这里我必须证明

00:58:35.600 --> 00:58:39.500
您的历史记录仪表板和

00:58:37.760 --> 00:58:47.270
最简单的方法

00:58:39.500 --> 00:58:50.290
是要过来找耶

00:58:47.270 --> 00:58:54.050
断路器共同管理

00:58:50.290 --> 00:58:55.340
等待它，这里我们有电路

00:58:54.050 --> 00:58:57.080
断路器仪表板现在我们只有

00:58:55.340 --> 00:58:59.630
一个断路器，所以不是很困难

00:58:57.080 --> 00:59:03.800
目前很有趣，但我会看到

00:58:59.630 --> 00:59:06.640
如果我能给它增加一些生命的话

00:59:03.800 --> 00:59:08.960
错误的窗口，这是我想要的窗口

00:59:06.640 --> 00:59:10.540
好吧，看看我是否有生命

00:59:08.960 --> 00:59:12.620
只是几次刷新

00:59:10.540 --> 00:59:14.660
你可以看到它实际上在做

00:59:12.620 --> 00:59:16.790
现在那个小球

00:59:14.660 --> 00:59:18.560
变红是因为它不健康

00:59:16.790 --> 00:59:20.090
此刻，看看百分之二

00:59:18.560 --> 00:59:21.950
右边那边的故障率

00:59:20.090 --> 00:59:24.170
是的，失败的百分比非常漂亮

00:59:21.950 --> 00:59:25.340
此刻我会高谈阔论

00:59:24.170 --> 00:59:26.930
不擅长于

00:59:25.340 --> 00:59:28.310
百分百哦耶

00:59:26.930 --> 00:59:30.310
是的，如果你有一百零一

00:59:28.310 --> 00:59:32.510
失败百分比，您确实遇到了麻烦

00:59:30.310 --> 00:59:35.660
让我们看看是否可以找到我的窗口

00:59:32.510 --> 00:59:39.590
药物消失在我忧郁的地方，那很好

00:59:35.660 --> 00:59:41.360
回去看看我是否可以带

00:59:39.590 --> 00:59:42.830
那个财富服务备份了， 

00:59:41.360 --> 00:59:45.770
现在就让事情恢复正常

00:59:42.830 --> 00:59:48.410
一两分钟的事情就是

00:59:45.770 --> 00:59:50.600
只是开始但也要告诉

00:59:48.410 --> 00:59:51.860
尤里卡（Eureka），它重新营业了，所以

00:59:50.600 --> 00:59:54.380
这不会通过那工作

00:59:51.860 --> 00:59:55.730
 Alegria仪表板正确，我们很抱歉

00:59:54.380 --> 00:59:57.110
可以看到，我们可以看到

00:59:55.730 --> 00:59:59.120
尤里卡仪表板，但我们没有

00:59:57.110 --> 01:00:01.280
前一天的主题演讲，是的，所以我

00:59:59.120 --> 01:00:02.840
会在这里刷新一下

01:00:01.280 --> 01:00:03.170
而当我们等待事情得到

01:00:02.840 --> 01:00:06.770
更好

01:00:03.170 --> 01:00:08.720
就像我说的那样，我们可能要去那里

01:00:06.770 --> 01:00:11.660
看起来又回来了，注意到我

01:00:08.720 --> 01:00:13.700
开始让我的失败率上升

01:00:11.660 --> 01:00:16.070
下来我开始看到更多的绿色

01:00:13.700 --> 01:00:18.290
历史上这里的数字

01:00:16.070 --> 01:00:20.390
仪表板，所以现在情况很健康，但是

01:00:18.290 --> 01:00:22.190
我不必像往常一样

01:00:20.390 --> 01:00:24.230
与我没有的历史有关

01:00:22.190 --> 01:00:26.300
必须进去告诉它在哪里

01:00:24.230 --> 01:00:29.030
指标流在哪里

01:00:26.300 --> 01:00:30.710
只是因为它的绑定，因为

01:00:29.030 --> 01:00:32.000
历史记录仪表板已绑定到我们

01:00:30.710 --> 01:00:33.620
应用程序，它只是要知道

01:00:32.000 --> 01:00:35.210
从哪里获得这些指标

01:00:33.620 --> 01:00:43.300
并在斯科特提到的掩护下

01:00:35.210 --> 01:00:43.300
是通过那个消息代理的

01:00:45.580 --> 01:00:50.390
像这样的错人不是吗

01:00:47.810 --> 01:00:53.420
这些我们已经讨论过的服务

01:00:50.390 --> 01:00:55.790
他们三个人，所以我们来了

01:00:53.420 --> 01:00:58.220
告诉你今天是

01:00:55.790 --> 01:01:00.410
在以下关键性Cloud Foundry中可用

01:00:58.220 --> 01:01:04.370
 Beta版今天将可用

01:01:00.410 --> 01:01:06.050
很快就知道一个点ODG 

01:01:04.370 --> 01:01:10.510
在今年晚些时候在关键网络上指向

01:01:06.050 --> 01:01:13.300
服务，所以我们有什么问题

01:01:10.510 --> 01:01:18.400
现在是一些问题的好时机

01:01:13.300 --> 01:01:18.400
或一些答案（如果有） 

01:01:22.400 --> 01:01:28.010
配置服务器中的属性

01:01:24.850 --> 01:01:30.980
在应用程序本身中实际上我不

01:01:28.010 --> 01:01:33.350
知道Matt有应用程式本身吗

01:01:30.980 --> 01:01:35.150
显示来自配置的任何属性

01:01:33.350 --> 01:01:39.470
我不认为的配置服务器

01:01:35.150 --> 01:01:42.050
完全像尤里卡一样

01:01:39.470 --> 01:01:43.280
我不是说可以，你可以

01:01:42.050 --> 01:01:45.800
像配置属性一样使用

01:01:43.280 --> 01:01:47.570
从Spring Boot注解以注入它

01:01:45.800 --> 01:01:50.120
就像您一样

01:01:47.570 --> 01:01:54.080
其他财产，但现在写的

01:01:50.120 --> 01:01:56.200
那里没有其他问题了

01:01:54.080 --> 01:01:56.200
走

01:02:10.370 --> 01:02:14.240
所以问题是本质上如何

01:02:12.770 --> 01:02:16.640
问题是尤里卡怎么知道

01:02:14.240 --> 01:02:18.980
该服务已恢复，因此

01:02:16.640 --> 01:02:21.860
当我打电话或我

01:02:18.980 --> 01:02:24.410
猜猜我的客户迈克怎么样

01:02:21.860 --> 01:02:27.410
服务注册表客户端知道

01:02:24.410 --> 01:02:28.730
服务现在又健康了， 

01:02:27.410 --> 01:02:30.050
因此，我可以开始，我可以继续

01:02:28.730 --> 01:02:32.810
拨打电话而不是去

01:02:30.050 --> 01:02:34.010
后备方法，你知道我有什么

01:02:32.810 --> 01:02:35.570
关于它如何工作的理论，但是我

01:02:34.010 --> 01:02:36.710
老实说我从来没有真正给过它

01:02:35.570 --> 01:02:38.360
你好想知道

01:02:36.710 --> 01:02:40.430
像这样的断路器

01:02:38.360 --> 01:02:42.520
 hystrix命令没有任何种类的

01:02:40.430 --> 01:02:45.500
对此人为地打电话

01:02:42.520 --> 01:02:47.990
被称为所有历史的服务是

01:02:45.500 --> 01:02:50.300
就是测量所有的呼叫

01:02:47.990 --> 01:02:52.030
从来电者方取得了多少

01:02:50.300 --> 01:02:54.590
成功，有多少失败

01:02:52.030 --> 01:02:56.630
所以没有任何心跳

01:02:54.590 --> 01:02:58.490
它或任何它只是捕获

01:02:56.630 --> 01:03:02.240
来自的实际调用的指标

01:02:58.490 --> 01:03:08.000
这种情况下服务的用户界面是的，但是

01:03:02.240 --> 01:03:10.010
它怎么知道是的

01:03:08.000 --> 01:03:11.510
关于我认为是这样的情况

01:03:10.010 --> 01:03:12.920
尝试一次又一次，但我不是

01:03:11.510 --> 01:03:16.690
会不知不觉地回答

01:03:12.920 --> 01:03:18.920
可以，对不起，我误会了

01:03:16.690 --> 01:03:20.690
是的，里面有一个算法

01:03:18.920 --> 01:03:23.120
历史可以弄清楚，如果你

01:03:20.690 --> 01:03:24.920
走出netflix的历史

01:03:23.120 --> 01:03:26.810
记录它会记录什么

01:03:24.920 --> 01:03:29.060
算法是找出是否下降

01:03:26.810 --> 01:03:30.770
它实际尝试了多少次尝试

01:03:29.060 --> 01:03:33.800
再次发送与发送多少

01:03:30.770 --> 01:03:36.470
自动短路或开路

01:03:33.800 --> 01:03:38.060
是的，所以您可以获得详细信息

01:03:36.470 --> 01:03:39.680
关于那个算法是什么以及如何

01:03:38.060 --> 01:03:41.120
您可以调整该算法

01:03:39.680 --> 01:03:42.770
是的，有很多属性可以

01:03:41.120 --> 01:03:44.930
配置Eureka可能不止

01:03:42.770 --> 01:03:47.150
你曾经想知道，但是那是

01:03:44.930 --> 01:03:48.490
那个历史悠久的炖菜之一，是的，是的

01:03:47.150 --> 01:03:53.530
对历史说同样的话， 

01:03:48.490 --> 01:03:53.530
配置埃克塞特学位是

01:04:05.839 --> 01:04:14.520
怎么知道这些呢

01:04:12.780 --> 01:04:17.549
问题是，如果您是

01:04:14.520 --> 01:04:19.470
不编写Java应用程序以

01:04:17.549 --> 01:04:21.750
服务器，但它是iOS或Android或移动设备

01:04:19.470 --> 01:04:23.190
是的，你要做的是

01:04:21.750 --> 01:04:25.109
你不会碰到这些

01:04:23.190 --> 01:04:26.730
直接从移动客户端提供服务

01:04:25.109 --> 01:04:28.410
无论是JavaScript还是Android，还是

01:04:26.730 --> 01:04:29.520
 iOS或类似的东西

01:04:28.410 --> 01:04:30.930
会直接打那些服务

01:04:29.520 --> 01:04:32.220
因为你懂了安全

01:04:30.930 --> 01:04:33.119
你之前还有另一个问题

01:04:32.220 --> 01:04:35.549
你要弄清楚他们在哪里

01:04:33.119 --> 01:04:38.910
你甚至不知道URL在哪里

01:04:35.549 --> 01:04:40.500
对他们来说，所以这不是春天的一部分

01:04:38.910 --> 01:04:44.670
我们拥有的云服务就是

01:04:40.500 --> 01:04:48.150
祖尔进来，所以祖尔可以捕获一个

01:04:44.670 --> 01:04:53.190
或更多其他服务并代理给他们

01:04:48.150 --> 01:04:55.470
通过单个API URL等等

01:04:53.190 --> 01:04:58.079
通过相同的API URL 

01:04:55.470 --> 01:04:59.849
您还可以进行安全保护， 

01:04:58.079 --> 01:05:01.410
可以哦哦可以关闭它可以基本关闭

01:04:59.849 --> 01:05:04.020
任何您认为适合您的

01:05:01.410 --> 01:05:05.369
应用程序，客户端可以处理它

01:05:04.020 --> 01:05:08.490
就像其他任何东西一样

01:05:05.369 --> 01:05:09.839
单个API，我相信它只是一种

01:05:08.490 --> 01:05:12.150
插入我没有写的文章

01:05:09.839 --> 01:05:14.039
文章，但博士。戴维斯我写了

01:05:12.150 --> 01:05:16.740
优秀的系列文章

01:05:14.039 --> 01:05:19.020
最近几个月的The Spring Blog

01:05:16.740 --> 01:05:20.670
他进入那就是

01:05:19.020 --> 01:05:22.410
场景如何编写客户匹配

01:05:20.670 --> 01:05:24.270
在他的情况下，它不像是Android或

01:05:22.410 --> 01:05:27.960
如果我没记错的话，iOS是有角度的

01:05:24.270 --> 01:05:30.059
但是有角度的客户会使用服务

01:05:27.960 --> 01:05:36.020
是安全的，他做对了

01:05:30.059 --> 01:05:36.020
通过祖尔

01:05:46.700 --> 01:05:51.310
我没听到我不确定

01:05:48.170 --> 01:05:51.310
我抓住了这个问题

01:05:59.020 --> 01:06:02.940
有没有使用特定的模型

01:06:01.060 --> 01:06:07.630
配置服务器，这不是问题

01:06:02.940 --> 01:06:11.160
安全模型，我们将揭露

01:06:07.630 --> 01:06:11.160
外部的安全模型

01:06:33.100 --> 01:06:37.990
好吧，我的意思是我不知道的整个想法

01:06:36.130 --> 01:06:39.790
我不能说肯定的答案S或

01:06:37.990 --> 01:06:42.310
不，但是我的下意识反应是

01:06:39.790 --> 01:06:44.380
并不是说我们的全部意思是

01:06:42.310 --> 01:06:47.710
不想让任何人使用该配置

01:06:44.380 --> 01:06:49.330
服务器，除非他们绑定到它

01:06:47.710 --> 01:06:50.800
我想我们不是在理论上讲的意思吗

01:06:49.330 --> 01:06:52.060
那可以做的很好

01:06:50.800 --> 01:06:53.560
你能说嘿吗

01:06:52.060 --> 01:06:56.200
配置大家来你知道

01:06:53.560 --> 01:06:58.270
并得到它，但我们正在考虑更多

01:06:56.200 --> 01:06:59.680
云原生企业类型

01:06:58.270 --> 01:07:01.960
您真正不想要的应用程序

01:06:59.680 --> 01:07:04.630
您想要私有的配置

01:07:01.960 --> 01:07:06.490
并且仅适用于那些

01:07:04.630 --> 01:07:08.680
实际绑定到

01:07:06.490 --> 01:07:10.360
配置服务器，所以它没有

01:07:08.680 --> 01:07:13.150
揭露那个很有意义

01:07:10.360 --> 01:07:14.830
在外面，但一旦他们被绑定

01:07:13.150 --> 01:07:17.470
这是小菜一碟

01:07:14.830 --> 01:07:19.420
我的意思是我们就像您看到的那样自动

01:07:17.470 --> 01:07:21.700
表示我们在中没有编写任何代码

01:07:19.420 --> 01:07:23.920
算命应用程序没有代码

01:07:21.700 --> 01:07:25.600
书面去实际谈判

01:07:23.920 --> 01:07:28.570
获得这些属性的安全性

01:07:25.600 --> 01:07:30.100
只是它可以工作，你当然可以

01:07:28.570 --> 01:07:31.900
去你知道挖财产的

01:07:30.100 --> 01:07:35.470
自己做，如果你自己做

01:07:31.900 --> 01:07:37.090
想，但我能想到没有

01:07:35.470 --> 01:07:40.480
为什么我们会想要

01:07:37.090 --> 01:07:42.490
必然暴露给

01:07:40.480 --> 01:07:45.330
任何未绑定到配置的内容

01:07:42.490 --> 01:07:45.330
直接服务器

01:07:55.790 --> 01:08:01.040
您如何将其固定在

01:07:57.680 --> 01:08:02.570
云绑定你会好你自己

01:08:01.040 --> 01:08:03.050
会做我们刚才做的事

01:08:02.570 --> 01:08:05.210
你自己

01:08:03.050 --> 01:08:06.860
编写与我们相同的代码，但使用

01:08:05.210 --> 01:08:09.230
对自己，你会用弹簧

01:08:06.860 --> 01:08:12.080
安全春季安全很多

01:08:09.230 --> 01:08:15.260
这是插入一个的好时机

01:08:12.080 --> 01:08:17.330
我们要塞的话题是

01:08:15.260 --> 01:08:21.350
我们完成所有这些安全措施的方式是

01:08:17.330 --> 01:08:23.180
春季安全OAuth这是一些

01:08:21.350 --> 01:08:25.339
相当复杂的东西让你头脑清醒

01:08:23.180 --> 01:08:27.290
周围和使用还有另一个话题

01:08:25.339 --> 01:08:28.910
明天下午就是这个安全

01:08:27.290 --> 01:08:30.920
带有Spring Cloud的微服务

01:08:28.910 --> 01:08:31.520
谈话的安全是由Tran谁

01:08:30.920 --> 01:08:33.410
在我们的团队中

01:08:31.520 --> 01:08:35.359
并帮助我们实现了很多

01:08:33.410 --> 01:08:36.830
他不会谈论的安全性

01:08:35.359 --> 01:08:38.420
我们的代码，但他将要谈论

01:08:36.830 --> 01:08:40.970
所有完全相同的工具， 

01:08:38.420 --> 01:08:42.620
我们在某些代码中使用的技术

01:08:40.970 --> 01:08:44.000
他拥有的其他示例应用程序，如果

01:08:42.620 --> 01:08:45.859
您对那个oauth2感兴趣

01:08:44.000 --> 01:08:47.330
东西有效，以及如何编写Spring应用程序

01:08:45.859 --> 01:08:49.009
做和我们一样的事情

01:08:47.330 --> 01:08:50.450
应该去参加那个演讲， 

01:08:49.009 --> 01:08:54.880
他会更好地回答所有这些问题

01:08:50.450 --> 01:08:54.880
比我们可以出现的

01:09:16.329 --> 01:09:22.670
是的，所有历史性指标

01:09:19.670 --> 01:09:26.150
会说这个电话是工作还是做

01:09:22.670 --> 01:09:27.979
从那里不能工作希望你在

01:09:26.150 --> 01:09:29.599
从一侧或其他获取一些日志

01:09:27.979 --> 01:09:31.189
其他的你可以去检查日志

01:09:29.599 --> 01:09:33.889
这些应用程序并尝试找出

01:09:31.189 --> 01:09:35.689
好吧，它正在工作，我得到一些

01:09:33.889 --> 01:09:37.909
失败没有足够的失败

01:09:35.689 --> 01:09:40.009
电路开了，但我越来越

01:09:37.909 --> 01:09:41.599
一些失败，我看到了什么

01:09:40.009 --> 01:09:43.549
仅在我通过时记录

01:09:41.599 --> 01:09:56.389
我失败的参数或

01:09:43.549 --> 01:09:58.729
像那样的状况很好

01:09:56.389 --> 01:10:00.920
这是断路器已打开

01:09:58.729 --> 01:10:02.659
给定的指标是

01:10:00.920 --> 01:10:03.979
看到不在给定的断路器上

01:10:02.659 --> 01:10:05.090
在给定的服务上，所以可能会有

01:10:03.979 --> 01:10:06.590
里面的多个断路器

01:10:05.090 --> 01:10:08.179
服务，但如果您有多个

01:10:06.590 --> 01:10:10.969
服务实例哪个电路

01:10:08.179 --> 01:10:12.079
断路器正在报告，您必须

01:10:10.969 --> 01:10:13.639
记住断路器总是

01:10:12.079 --> 01:10:15.110
从来电者的角度来看

01:10:13.639 --> 01:10:16.789
断路器正在录音

01:10:15.110 --> 01:10:18.530
能跟这个东西说话

01:10:16.789 --> 01:10:20.900
它没有报告正在发生的事情

01:10:18.530 --> 01:10:22.579
后面否认所有它知道的是

01:10:20.900 --> 01:10:24.349
没用，是的，仅此而已

01:10:22.579 --> 01:10:26.479
知道，到那时，如果您开始

01:10:24.349 --> 01:10:28.789
看到你知道失败，就像你

01:10:26.479 --> 01:10:31.249
有五个服务五个实例，并且

01:10:28.789 --> 01:10:33.320
好像有20％的人认为

01:10:31.249 --> 01:10:35.030
意味着其中一个可能已经死了

01:10:33.320 --> 01:10:37.189
现在，您需要更深入一点

01:10:35.030 --> 01:10:38.630
在仪表板上不会帮助您

01:10:37.189 --> 01:10:39.889
弄清楚，但你可以走一点

01:10:38.630 --> 01:10:43.130
更深入地查看一些日志

01:10:39.889 --> 01:10:44.329
这些服务，也许做一些

01:10:43.130 --> 01:10:45.889
这个你知道我们聊了一点

01:10:44.329 --> 01:10:47.659
关于昨晚主题演讲中的追踪

01:10:45.889 --> 01:10:48.889
某些跟踪可能会给您一些

01:10:47.659 --> 01:10:49.969
这些信息也不是

01:10:48.889 --> 01:10:51.889
我们在春季提供的东西

01:10:49.969 --> 01:10:53.389
云服务，但电路

01:10:51.889 --> 01:10:55.179
断路器可以帮助您看到一些

01:10:53.389 --> 01:10:57.590
这些呼叫的百分比失败

01:10:55.179 --> 01:10:58.789
那个后端发生了什么

01:10:57.590 --> 01:11:02.590
必须开始深入研究

01:10:58.789 --> 01:11:02.590
服务以及它发生了什么

01:11:18.040 --> 01:11:30.560
是的，我们在这里有一个问题

01:11:21.710 --> 01:11:34.850
他急切地要求举手

01:11:30.560 --> 01:11:36.970
这可以在关键的私有云上​​完成

01:11:34.850 --> 01:11:38.660
 Cloud Foundry基本上是至关重要的

01:11:36.970 --> 01:11:40.610
在Cloud Foundry中实施

01:11:38.660 --> 01:11:42.320
在私有云上运行，因此您可以

01:11:40.610 --> 01:11:45.470
在vSphere上安装关键的Cloud Foundry 

01:11:42.320 --> 01:11:47.900
在OpenStack上，您可以在AWS上安装它

01:11:45.470 --> 01:11:49.640
如果您通过该私有云， 

01:11:47.900 --> 01:11:51.860
您拥有自己的AWS，因此可以安装

01:11:49.640 --> 01:11:54.860
任何这些方面的关键Cloud Foundry 

01:11:51.860 --> 01:11:57.190
然后您可以安装spring CLOB 

01:11:54.860 --> 01:11:59.120
在此之上的服务以及

01:11:57.190 --> 01:12:00.890
有一个男人回到这里，我们会很高兴

01:11:59.120 --> 01:12:02.180
卖给你，我的意思是本质上是红色

01:12:00.890 --> 01:12:04.900
和蓝色，我向你展示了那些

01:12:02.180 --> 01:12:04.900
是私有云

01:12:11.630 --> 01:12:15.620
是的，但是从概念上讲是你

01:12:13.880 --> 01:12:17.090
了解网络拓扑

01:12:15.620 --> 01:12:18.290
担心会很少

01:12:17.090 --> 01:12:22.100
与您所拥有的不同的是

01:12:18.290 --> 01:12:23.480
内部私有云与公正

01:12:22.100 --> 01:12:29.920
我有一些测试环境

01:12:23.480 --> 01:12:29.920
也在防火墙后面

01:12:34.000 --> 01:12:38.280
对不起，我不能说清楚

01:12:40.560 --> 01:12:45.310
基本上是什么条件

01:12:43.960 --> 01:12:47.590
断路器将被认为是

01:12:45.310 --> 01:12:49.540
失败最明显的是婴儿

01:12:47.590 --> 01:12:52.000
整个例外，但还有其他

01:12:49.540 --> 01:12:53.680
场景，如它正在缓慢

01:12:52.000 --> 01:12:55.060
回应，你有配置

01:12:53.680 --> 01:12:57.400
可以放那里说嘿，如果没有

01:12:55.060 --> 01:13:00.640
如果你知道自己有点迟钝

01:12:57.400 --> 01:13:03.040
也许还没有达到你所知道的

01:13:00.640 --> 01:13:05.770
某个响应时间阈值

01:13:03.040 --> 01:13:07.390
这也被认为是失败的，但是

01:13:05.770 --> 01:13:10.000
容易容易谈论的是

01:13:07.390 --> 01:13:11.770
抛出异常抛出异常

01:13:10.000 --> 01:13:14.490
坏了，因此退后并做

01:13:11.770 --> 01:13:14.490
还可以

01:13:21.580 --> 01:13:28.660
我不相信该服务是否返回

01:13:24.430 --> 01:13:31.330
具体的价值我不相信你可以

01:13:28.660 --> 01:13:32.710
虽然好，您可以只需要

01:13:31.330 --> 01:13:34.300
在它周围写一些代码

01:13:32.710 --> 01:13:36.880
你自己在说这是否发生

01:13:34.300 --> 01:13:38.140
抛出异常（如果不是），但是

01:13:36.880 --> 01:13:40.770
这不是真的不是因为

01:13:38.140 --> 01:13:43.600
断路器更多的是关于

01:13:40.770 --> 01:13:47.260
服务的健康状况不一定

01:13:43.600 --> 01:13:49.240
服务正在服务什么，我的意思是

01:13:47.260 --> 01:13:50.740
当然你可以说你知道你

01:13:49.240 --> 01:13:52.180
打电话，如果他们回来

01:13:50.740 --> 01:13:53.740
你不喜欢的东西

01:13:52.180 --> 01:13:55.810
例外，然后将

01:13:53.740 --> 01:13:59.010
发生后备情况，您可以那样做

01:13:55.810 --> 01:13:59.010
只是不是真正的目的

01:13:59.280 --> 01:14:02.280
是

01:14:51.010 --> 01:14:56.870
是的，所以您想知道

01:14:54.130 --> 01:14:58.760
失败不一定是失败

01:14:56.870 --> 01:15:01.190
您希望他们不一定

01:14:58.760 --> 01:15:02.540
在某些情况下重试，例如网络

01:15:01.190 --> 01:15:03.950
我们很沮丧，你不想保留

01:15:02.540 --> 01:15:05.720
重试了解现在的网络

01:15:03.950 --> 01:15:07.160
其实我不确定为什么你不会

01:15:05.720 --> 01:15:08.570
想在网络中断的情况下这样做

01:15:07.160 --> 01:15:11.380
仍然会退后，最终

01:15:08.570 --> 01:15:11.380
网络将会回来

01:15:17.239 --> 01:15:23.480
哦，您可以定义一个独特的名称吗

01:15:21.889 --> 01:15:26.570
后备行为取决于

01:15:23.480 --> 01:15:28.429
失败是个好问题，你知道我

01:15:26.570 --> 01:15:30.860
老实说不知道是的

01:15:28.429 --> 01:15:32.090
再次成为学区的开源项目

01:15:30.860 --> 01:15:34.010
我们必须研究它的

01:15:32.090 --> 01:15:36.440
在这方面的能力是的

01:15:34.010 --> 01:15:37.309
我有点像你问的那样

01:15:36.440 --> 01:15:38.570
我以为你在问另外一个

01:15:37.309 --> 01:15:39.619
问题，所以我要回答

01:15:38.570 --> 01:15:42.260
我以为你在问的问题

01:15:39.619 --> 01:15:44.119
虽然，那是一个算命先生

01:15:42.260 --> 01:15:45.380
您一个应用程序真的很棒

01:15:44.119 --> 01:15:46.730
简单的应用程序是

01:15:45.380 --> 01:15:47.480
它的美是它很简单

01:15:46.730 --> 01:15:48.590
够你可以让你的头

01:15:47.480 --> 01:15:52.219
轻松地围绕所有碎片

01:15:48.590 --> 01:15:54.380
因为只有两个

01:15:52.219 --> 01:15:56.059
典型的微服务架构

01:15:54.380 --> 01:15:57.469
不一定会添加该用户界面

01:15:56.059 --> 01:16:00.079
是您唯一拥有的地方

01:15:57.469 --> 01:16:01.249
您知道的断路器可能

01:16:00.079 --> 01:16:02.570
呼叫另一个服务

01:16:01.249 --> 01:16:03.739
调用另一个服务的服务

01:16:02.570 --> 01:16:04.940
哪个叫你不叫的服务

01:16:03.739 --> 01:16:06.710
知道这有多深

01:16:04.940 --> 01:16:09.889
但在所有级别上您都可以拥有电路

01:16:06.710 --> 01:16:12.289
破坏者等失败和后退

01:16:09.889 --> 01:16:14.480
可能在应用程序中的任何地方发生

01:16:12.289 --> 01:16:16.219
和一般的规则

01:16:14.480 --> 01:16:17.329
拇指我听过两个不同的人

01:16:16.219 --> 01:16:19.369
说这个，所以我不知道该向谁

01:16:17.329 --> 01:16:20.719
引述一般原则

01:16:19.369 --> 01:16:22.880
拇指是我在哪里玩

01:16:20.719 --> 01:16:24.860
断路器，您将其放置在

01:16:22.880 --> 01:16:26.449
事情可能会出错，是的，所以

01:16:24.860 --> 01:16:27.650
可以在应用程序中的任何位置，并且在大多数情况下

01:16:26.449 --> 01:16:29.329
这些示例应用程序中，通常会用到什么

01:16:27.650 --> 01:16:32.119
另请参阅您是否尝试拨打一些电话

01:16:29.329 --> 01:16:33.650
通过rest模板进行外部服务

01:16:32.119 --> 01:16:35.480
如果不起作用，您有一些

01:16:33.650 --> 01:16:37.249
最简单的硬编码值

01:16:35.480 --> 01:16:38.749
例子，但是你可能有一个真实的

01:16:37.249 --> 01:16:40.550
尝试呼叫一个世界案例

01:16:38.749 --> 01:16:42.739
服务，如果您开始看到故障

01:16:40.550 --> 01:16:44.179
您可能会致电一些备份服务

01:16:42.739 --> 01:16:46.039
可能是旧版本，而更少

01:16:44.179 --> 01:16:48.230
功能，但您想给它一个

01:16:46.039 --> 01:16:50.300
射击，如果那不起作用，那么

01:16:48.230 --> 01:16:52.550
第三步，你返回一些空

01:16:50.300 --> 01:16:54.199
值或一些硬编码的值

01:16:52.550 --> 01:16:58.670
东西会消耗掉，所以你可以堆叠它们

01:16:54.199 --> 01:17:01.269
这样更深，还有其他

01:16:58.670 --> 01:17:01.269
这是一个

01:17:13.080 --> 01:17:16.290
每次配置

01:17:14.490 --> 01:17:18.000
我听不到你的声音

01:17:16.290 --> 01:17:20.040
很好，但是配置库

01:17:18.000 --> 01:17:21.750
您将如何处理死经质量检查

01:17:20.040 --> 01:17:22.920
与生产相比，您有

01:17:21.750 --> 01:17:26.340
您有不同的存储库

01:17:22.920 --> 01:17:29.580
同一存储库是那个问题

01:17:26.340 --> 01:17:31.890
这取决于你想做什么

01:17:29.580 --> 01:17:33.020
理论上它们可能是相同的

01:17:31.890 --> 01:17:34.950
仓库，但可能不是

01:17:33.020 --> 01:17:38.760
因为你可能不想

01:17:34.950 --> 01:17:40.980
存储库中的生产属性

01:17:38.760 --> 01:17:43.440
您的开发人员和质量检查团队也

01:17:40.980 --> 01:17:44.880
击球取决于性质

01:17:43.440 --> 01:17:46.020
在某些情况下可能会

01:17:44.880 --> 01:17:48.810
没关系，可能会有所不同

01:17:46.020 --> 01:17:50.220
我在同一仓库中分支

01:17:48.810 --> 01:17:51.660
当时在想你

01:17:50.220 --> 01:17:53.430
可能想和树枝一起去

01:17:51.660 --> 01:17:55.380
在某个地方你知道那些东西

01:17:53.430 --> 01:17:56.670
行，也许你知道所有的一切

01:17:55.380 --> 01:17:58.260
各种不同的情况就像

01:17:56.670 --> 01:18:00.150
就像有不同的方式

01:17:58.260 --> 01:18:01.920
通过一个迁移您的代码

01:18:00.150 --> 01:18:04.200
仓库和不同和分支

01:18:01.920 --> 01:18:06.210
和和什么不一样的东西会

01:18:04.200 --> 01:18:07.740
在这里申请，这样一种情况，我

01:18:06.210 --> 01:18:10.620
想到站在这里接听

01:18:07.740 --> 01:18:14.070
这是你可以在你的分支

01:18:10.620 --> 01:18:15.810
开发人员构思了配置，但在您的主服务器中

01:18:14.070 --> 01:18:17.400
它的生产，如果你在任何时候

01:18:15.810 --> 01:18:18.630
需要将其合并到您体内

01:18:17.400 --> 01:18:22.170
当然，您需要注意不要

01:18:18.630 --> 01:18:24.660
合并敏感的东西

01:18:22.170 --> 01:18:26.190
开发人员或可能会中断生产，但

01:18:24.660 --> 01:18:28.160
仍然你可以做同样的事情

01:18:26.190 --> 01:18:30.540
你可能有多个路径

01:18:28.160 --> 01:18:33.510
所以你可以说斜线生产是

01:18:30.540 --> 01:18:34.800
生产罪犯和斜杠dava 

01:18:33.510 --> 01:18:36.300
开发配置，我的意思是有很多

01:18:34.800 --> 01:18:38.280
情况只是取决于什么

01:18:36.300 --> 01:18:40.980
似乎最适合您

01:18:38.280 --> 01:18:43.230
可以用老式的方式做到

01:18:40.980 --> 01:18:46.250
只是有不同的存储库

01:18:43.230 --> 01:18:46.250
每一个人

01:18:51.030 --> 01:18:55.080
不，绝对不会是一件坏事

01:18:53.640 --> 01:18:56.850
练习拥有一个称为的宏服务

01:18:55.080 --> 01:18:58.770
另一个宏服务非常好的做法

01:18:56.850 --> 01:19:01.230
事实上，你看到了这种情况，他

01:18:58.770 --> 01:19:05.460
并不明显，但实际上

01:19:01.230 --> 01:19:07.590
之所以发生，是因为两者

01:19:05.460 --> 01:19:09.540
算命服务和

01:19:07.590 --> 01:19:11.700
算命先生你的眼睛都喊出来了

01:19:09.540 --> 01:19:13.460
到另一个宏服务的服务

01:19:11.700 --> 01:19:16.940
正在配置服务器，服务正在

01:19:13.460 --> 01:19:16.940
服务注册表

01:19:22.840 --> 01:19:29.570
所以你担心自己

01:19:27.290 --> 01:19:31.490
担心测试，所以当你

01:19:29.570 --> 01:19:33.260
测试微服务，您也是

01:19:31.490 --> 01:19:35.270
间接测试两个肯定是否

01:19:33.260 --> 01:19:38.210
将它们部署到云中

01:19:35.270 --> 01:19:40.880
描述是的那是一面

01:19:38.210 --> 01:19:43.790
这样的效果，所以您的方案是

01:19:40.880 --> 01:19:45.770
好吧，你只是接受那个，或者你接受

01:19:43.790 --> 01:19:47.270
测试的目的将其绑定到假冒产品

01:19:45.770 --> 01:19:49.340
版本或类似的东西，但

01:19:47.270 --> 01:19:51.620
事实是，我的意思是

01:19:49.340 --> 01:19:52.640
更接近生产测试

01:19:51.620 --> 01:19:54.230
那就是你要做更多的事情

01:19:52.640 --> 01:19:56.180
集成样式测试，这是一个

01:19:54.230 --> 01:19:58.280
良好的测试风格，在这种情况下

01:19:56.180 --> 01:20:00.110
是的，您仍然想这样做，但是

01:19:58.280 --> 01:20:01.940
当你在发展的时候

01:20:00.110 --> 01:20:04.370
在您的计算机上本地

01:20:01.940 --> 01:20:07.630
运行相同的服务，只是一个网络

01:20:04.370 --> 01:20:10.880
应用程序，它正在呼唤一些人

01:20:07.630 --> 01:20:12.200
东西，所以没有

01:20:10.880 --> 01:20:13.730
为什么它必须真正击中一个真正的

01:20:12.200 --> 01:20:15.620
服务可能会打假服务

01:20:13.730 --> 01:20:19.760
可以做一些简单的事情

01:20:15.620 --> 01:20:22.010
可以做的就是使用Spring MVC的测试弹簧

01:20:19.760 --> 01:20:24.920
您的Spring MVC客户端测试

01:20:22.010 --> 01:20:27.020
在春天3点东西介绍

01:20:24.920 --> 01:20:28.310
我想我忘记了什么时候来的

01:20:27.020 --> 01:20:30.350
周围，​​然后你基本上可以嘲笑

01:20:28.310 --> 01:20:31.820
出来的答案就像是

01:20:30.350 --> 01:20:33.140
去另一个服务，但它

01:20:31.820 --> 01:20:36.460
从来没有碰过网络

01:20:33.140 --> 01:20:36.460
立即回应

01:20:44.900 --> 01:20:53.349
这不是一个旧模式，这是一个好习惯

01:20:46.610 --> 01:20:53.349
模式正确

01:20:56.020 --> 01:20:59.020
嗯

01:21:01.659 --> 01:21:07.179
当然可以，所以你说的是你

01:21:05.860 --> 01:21:08.590
有一个呼叫服务员的控制器

01:21:07.179 --> 01:21:11.260
服务-服务不知道

01:21:08.590 --> 01:21:12.670
关于服务-这很干净

01:21:11.260 --> 01:21:14.290
微型可能会发生相同的情况

01:21:12.670 --> 01:21:15.969
服务我的意思是保留它会很好

01:21:14.290 --> 01:21:17.620
那些彼此独立的

01:21:15.969 --> 01:21:18.940
当我说ace micro Service打电话时

01:21:17.620 --> 01:21:21.760
我可能不喜欢的另一个微服务

01:21:18.940 --> 01:21:24.760
意味着必要，尽管是的，你可以

01:21:21.760 --> 01:21:26.380
这样做，但您不一定要

01:21:24.760 --> 01:21:28.000
这个叫这个这个叫这个

01:21:26.380 --> 01:21:29.679
然后这个也叫我

01:21:28.000 --> 01:21:31.630
不一定意味着它可以

01:21:29.679 --> 01:21:33.310
意味着您知道您的应用调用了

01:21:31.630 --> 01:21:35.080
宏服务，然后该宏

01:21:33.310 --> 01:21:37.239
服务呼叫另一个微服务

01:21:35.080 --> 01:21:39.219
它本身就是另一个的客户

01:21:37.239 --> 01:21:42.940
服务，因为在一天结束时

01:21:39.219 --> 01:21:44.260
您的UI在概念上本身就是一个宏

01:21:42.940 --> 01:21:46.239
服务它只是不会像

01:21:44.260 --> 01:21:48.580
 REST API，它公开了面向人类的API 

01:21:46.239 --> 01:21:50.679
在精心设计的整体中，您知道是否

01:21:48.580 --> 01:21:52.179
您正在绘制一个依赖图

01:21:50.679 --> 01:21:54.190
您通常需要的代码

01:21:52.179 --> 01:21:55.480
依赖图就像一棵树

01:21:54.190 --> 01:21:58.179
掉下来没有一堆意大利面

01:21:55.480 --> 01:21:59.650
线在微型向右走

01:21:58.179 --> 01:22:01.630
服务，如果您有同样的事情

01:21:59.650 --> 01:22:03.370
您仍然需要一些服务

01:22:01.630 --> 01:22:04.780
不错的干净依赖图，没有

01:22:03.370 --> 01:22:06.670
意大利面条和行的路线很多

01:22:04.780 --> 01:22:08.409
侧身，这样的事情不会

01:22:06.670 --> 01:22:09.790
真正改变这一点，以便回到您的

01:22:08.409 --> 01:22:12.880
您问的原始问题是

01:22:09.790 --> 01:22:14.139
被认为是不好的做法，或者我认为

01:22:12.880 --> 01:22:15.639
这就是您所说的话

01:22:14.139 --> 01:22:16.860
一种微服务的不良做法

01:22:15.639 --> 01:22:21.580
给另一个微服务打电话答案

01:22:16.860 --> 01:22:23.409
通常不是，不是，而是取决于

01:22:21.580 --> 01:22:28.110
他们如何生活在那

01:22:23.409 --> 01:22:28.110
依赖树

01:22:31.080 --> 01:22:35.530
好吧，先生，我要说

01:22:34.480 --> 01:22:38.800
东西，然后我要拿它

01:22:35.530 --> 01:22:40.900
返回，但只需回答您的问题， 

01:22:38.800 --> 01:22:43.360
是的，从某种意义上说，微服务正在暴露

01:22:40.900 --> 01:22:52.449
 REST API，因此它确实有一个

01:22:43.360 --> 01:22:54.850
控制器很好，但微服务可以

01:22:52.449 --> 01:22:56.560
确实包含业务逻辑

01:22:54.850 --> 01:22:57.909
不要以为微服务是

01:22:56.560 --> 01:22:59.619
只有这个会说话的东西

01:22:57.909 --> 01:23:02.530
到数据库并从中返回数据

01:22:59.619 --> 01:23:04.960
你可能有那种微服务

01:23:02.530 --> 01:23:06.670
那个道的刻板印象

01:23:04.960 --> 01:23:08.710
我们曾经在整体中谈论

01:23:06.670 --> 01:23:09.820
世界，您可能还有其他微服务

01:23:08.710 --> 01:23:12.070
实现一些业务

01:23:09.820 --> 01:23:14.290
逻辑，必须与daos交谈

01:23:12.070 --> 01:23:15.639
获取信息并对其进行处理

01:23:14.290 --> 01:23:17.530
有价格的微服务

01:23:15.639 --> 01:23:19.630
引擎，您可能有一个微服务， 

01:23:17.530 --> 01:23:21.219
正在外出并获取客户数据

01:23:19.630 --> 01:23:23.590
以及他们的发票和那些

01:23:21.219 --> 01:23:25.150
一起和他们一起做东西

01:23:23.590 --> 01:23:27.040
在这种情况下，您可能会有客户作为

01:23:25.150 --> 01:23:28.540
微服务开具微服务发票

01:23:27.040 --> 01:23:30.610
然后是一个商业服务

01:23:28.540 --> 01:23:32.550
称这两个生意

01:23:30.610 --> 01:23:34.929
服务仍然是微服务

01:23:32.550 --> 01:23:37.330
所以这只是...的术语

01:23:34.929 --> 01:23:39.489
我们如何努力，我想如果你

01:23:37.330 --> 01:23:42.250
然后考虑所有这些服务

01:23:39.489 --> 01:23:43.960
是的，他们可以提供所有不同的服务

01:23:42.250 --> 01:23:45.909
呼叫服务以及如何中断它们

01:23:43.960 --> 01:23:47.889
下来，我的意思是有很多

01:23:45.909 --> 01:23:50.469
您如何划分这些策略

01:23:47.889 --> 01:23:51.880
这些真的取决于你

01:23:50.469 --> 01:23:53.860
您业务中的特殊问题，但是

01:23:51.880 --> 01:23:55.989
对于我的一些一般指导

01:23:53.860 --> 01:23:57.310
建议您接机，这很容易

01:23:55.989 --> 01:23:59.199
读过你可能以前读过

01:23:57.310 --> 01:24:01.330
你今晚上床去接马特

01:23:59.199 --> 01:24:03.159
斯坦因迁移到原生云或

01:24:01.330 --> 01:24:04.630
金伯所谓的迁移到

01:24:03.159 --> 01:24:07.630
大约那么厚的东西

01:24:04.630 --> 01:24:09.070
微书是的，这很容易

01:24:07.630 --> 01:24:10.330
阅读，它有一些一般

01:24:09.070 --> 01:24:11.830
在那里的指导，您知道并且

01:24:10.330 --> 01:24:16.989
一些想法

01:24:11.830 --> 01:24:21.550
构建这些类型的应用程序或

01:24:16.989 --> 01:24:26.219
你可以问他他就在那里哦他

01:24:21.550 --> 01:24:26.219
要去签名簿，所以去看看

01:24:33.700 --> 01:24:37.430
那不一定是你会的方式

01:24:35.750 --> 01:24:41.240
分解那是我的意思

01:24:37.430 --> 01:24:44.180
即使在整体中，您也知道UI 

01:24:41.240 --> 01:24:46.610
或控制器和服务以及Dowell 

01:24:44.180 --> 01:24:49.280
那只是一个方便的范例

01:24:46.610 --> 01:24:50.930
有点开始，但甚至没有

01:24:49.280 --> 01:24:52.160
必然是如何结束应用程序的

01:24:50.930 --> 01:24:54.380
被分解只是一个

01:24:52.160 --> 01:24:56.480
方便的开始方式

01:24:54.380 --> 01:24:58.600
有很多次服务

01:24:56.480 --> 01:25:00.320
他们自己可能反过来呼唤其他人

01:24:58.600 --> 01:25:04.280
服务，如果您想给他们打电话

01:25:00.320 --> 01:25:06.320
即使在整体中，因为

01:25:04.280 --> 01:25:07.820
服务太忙了

01:25:06.320 --> 01:25:09.590
它里面发生了很多事情

01:25:07.820 --> 01:25:13.640
闯入其中是有意义的

01:25:09.590 --> 01:25:15.710
甚至在一个

01:25:13.640 --> 01:25:17.240
巨石不一定在哪里

01:25:15.710 --> 01:25:19.490
你最终可能只是个好选择

01:25:17.240 --> 01:25:21.530
谈到的起点

01:25:19.490 --> 01:25:23.330
处理微服务，您可能会

01:25:21.530 --> 01:25:24.860
你可能会想

01:25:23.330 --> 01:25:26.720
继续，你可能会这样开始，但是

01:25:24.860 --> 01:25:29.810
现实是你会分裂

01:25:26.720 --> 01:25:31.010
您的服务首先要两个

01:25:29.810 --> 01:25:34.060
对您的应用程序有意义，但

01:25:31.010 --> 01:25:36.680
通常您会从以下方面考虑

01:25:34.060 --> 01:25:37.880
我的方式有些不同

01:25:36.680 --> 01:25:38.990
考虑不同的看法

01:25:37.880 --> 01:25:40.850
应用程序，因此，如果您要构建一个

01:25:38.990 --> 01:25:42.980
您拥有的电子商务应用程序

01:25:40.850 --> 01:25:45.080
客户是一回事

01:25:42.980 --> 01:25:47.180
您有订单甚至有产品

01:25:45.080 --> 01:25:48.800
使用您可能有评论的产品

01:25:47.180 --> 01:25:50.420
有关产品的产品详细信息

01:25:48.800 --> 01:25:51.620
产品的库存水平和

01:25:50.420 --> 01:25:54.680
那是三种不同的方式

01:25:51.620 --> 01:25:56.150
看一个会

01:25:54.680 --> 01:25:57.760
多种服务，因为您的库存

01:25:56.150 --> 01:25:59.780
系统完全独立于

01:25:57.760 --> 01:26:02.600
碰巧写的评论

01:25:59.780 --> 01:26:03.950
该产品，因此他们不需要进入

01:26:02.600 --> 01:26:05.210
他们不属于的相同服务

01:26:03.950 --> 01:26:10.370
同样的服务，所以你会打破

01:26:05.210 --> 01:26:13.910
那些分开，好吧，我认为那是我认为

01:26:10.370 --> 01:26:15.560
就是这样，我们会在这里待一会儿

01:26:13.910 --> 01:26:16.970
否则非常感谢你有一个

01:26:15.560 --> 01:26:19.510
如果我们不参加会议的其余时间

01:26:16.970 --> 01:26:19.510
再见

01:26:26.840 --> 01:26:28.900
您

