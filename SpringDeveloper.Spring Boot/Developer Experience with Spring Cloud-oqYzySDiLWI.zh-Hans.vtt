WEBVTT
Kind: captions
Language: zh-Hans

00:00:09.170 --> 00:00:14.710
我们都已经使用这些微服务

00:00:15.120 --> 00:00:23.070
不轻描淡写是一个错误

00:00:18.750 --> 00:00:24.480
介意我作为开发人员的法语

00:00:23.070 --> 00:00:26.820
就像你知道一切都在移动

00:00:24.480 --> 00:00:29.099
在你周围，你只想

00:00:26.820 --> 00:00:31.470
专心于一项服务

00:00:29.099 --> 00:00:33.360
您正在尝试如何发展

00:00:31.470 --> 00:00:38.070
你有什么期望

00:00:33.360 --> 00:00:41.460
不会完全发疯，所以这

00:00:38.070 --> 00:00:43.140
演示文稿是它的集合

00:00:41.460 --> 00:00:45.800
我们在

00:00:43.140 --> 00:00:49.370
最近12个月左右的疗程

00:00:45.800 --> 00:00:52.949
一些不同的方式

00:00:49.370 --> 00:00:57.260
减轻痛苦好吧，这样会

00:00:52.949 --> 00:00:59.760
有一些痛苦，但我们可以，我们可以

00:00:57.260 --> 00:01:01.379
使它感觉好一点

00:00:59.760 --> 00:01:04.230
我们可以做一些姑息治疗

00:01:01.379 --> 00:01:06.630
至少无论如何你们都知道我们是谁

00:01:04.230 --> 00:01:11.820
对，这是我，戴夫，我是斯潘塞，我

00:01:06.630 --> 00:01:14.010
我住在伦敦我住在犹他州

00:01:11.820 --> 00:01:15.960
关键哦是的为什么要去图

00:01:14.010 --> 00:01:18.900
第一步是承认你有一个

00:01:15.960 --> 00:01:21.330
问题是，现在这不是问题

00:01:18.900 --> 00:01:24.690
如果有人要来认真地

00:01:21.330 --> 00:01:29.280
和我们一起伸出你的手

00:01:24.690 --> 00:01:30.540
之后会灼伤，所以我们有一些

00:01:29.280 --> 00:01:35.130
正确滑动，是的，我们应该看看

00:01:30.540 --> 00:01:38.790
是什么，我们很好，我喜欢这个

00:01:35.130 --> 00:01:41.820
图片这是从他的名字的

00:01:38.790 --> 00:01:44.880
小想法和猎犬实际上

00:01:41.820 --> 00:01:46.620
 Schaeffer，我想是的，实际上

00:01:44.880 --> 00:01:49.950
你知道这是春天的足迹

00:01:46.620 --> 00:01:51.570
 10个呼叫云原生路径和

00:01:49.950 --> 00:01:52.980
您已经了解了云原生

00:01:51.570 --> 00:01:57.390
到处都涂灰泥

00:01:52.980 --> 00:02:00.020
没有人不知道我们的意思是什么

00:01:57.390 --> 00:02:02.700
我确定

00:02:00.020 --> 00:02:05.820
现在每个人都听说过

00:02:02.700 --> 00:02:09.780
谢谢，是的，谢谢你，你不知道

00:02:05.820 --> 00:02:12.269
我不只是嗡嗡声

00:02:09.780 --> 00:02:14.430
发明它，我知道我们选了一个模因

00:02:12.269 --> 00:02:18.660
认为我们已经在运行它了

00:02:14.430 --> 00:02:21.209
特别是安德鲁，所以他做了很长一段路

00:02:18.660 --> 00:02:25.650
这张照片，它显示了你

00:02:21.209 --> 00:02:28.480
所有的关键堆栈如何

00:02:25.650 --> 00:02:31.269
我们每天都健身

00:02:28.480 --> 00:02:33.069
使用云原生哲学

00:02:31.269 --> 00:02:38.620
就像是因为它是一种运动或

00:02:33.069 --> 00:02:42.299
心境比实际更多

00:02:38.620 --> 00:02:44.920
知道可以使用的工具

00:02:42.299 --> 00:02:47.230
我想我不知道我能做到

00:02:44.920 --> 00:02:50.830
解释我认为重要的

00:02:47.230 --> 00:02:52.510
关于云原生这是我的

00:02:50.830 --> 00:02:57.370
经验就像我在工作时

00:02:52.510 --> 00:02:59.680
在大型分布式系统中

00:02:57.370 --> 00:03:01.239
你把规则弄对了我没做

00:02:59.680 --> 00:03:03.790
这个，但是一旦你有了这个

00:03:01.239 --> 00:03:07.239
规则，如果您编写自己的代码

00:03:03.790 --> 00:03:13.329
您很快就会了解云原生

00:03:07.239 --> 00:03:15.250
表示同意，是的，我会尽快这样做

00:03:13.329 --> 00:03:16.780
你拥有它我说你也许你运行它或

00:03:15.250 --> 00:03:18.609
也许您只是拥有它的程度

00:03:16.780 --> 00:03:22.450
有人跑去吧

00:03:18.609 --> 00:03:24.910
是他打错电话了吗？ 

00:03:22.450 --> 00:03:26.829
上课的权利，每个人

00:03:24.910 --> 00:03:28.690
当他们在

00:03:26.829 --> 00:03:32.260
凌晨两点电话结束

00:03:28.690 --> 00:03:34.720
或从未发生过的任何事情

00:03:32.260 --> 00:03:36.250
对我来说，实际上是因为我们开始

00:03:34.720 --> 00:03:39.040
我们一开始就建立东西

00:03:36.250 --> 00:03:40.599
建立任何适合的东西

00:03:39.040 --> 00:03:42.160
进入分布式系统，我们开始

00:03:40.599 --> 00:03:43.810
遵循这些规则，我们是否知道

00:03:42.160 --> 00:03:45.489
还是没有，但他们不是我不认为

00:03:43.810 --> 00:03:47.340
他们那时已经被编纂了，但是

00:03:45.489 --> 00:03:51.160
这个东西叫做12因子

00:03:47.340 --> 00:03:53.680
有人听说过12个因素的应用程序吗

00:03:51.160 --> 00:03:56.130
相当多的网站是12 pac-12 

00:03:53.680 --> 00:03:59.530
演员net young young yeah so r 0项目

00:03:56.130 --> 00:04:02.819
体现他们所看到的最佳实践

00:03:59.530 --> 00:04:06.910
当他们建立自己的系统时

00:04:02.819 --> 00:04:12.359
是的，这归根到底是什么

00:04:06.910 --> 00:04:12.359
你知道让它变得容易吗

00:04:14.819 --> 00:04:21.789
好吧，有两件事是不是

00:04:16.780 --> 00:04:23.830
这是自省的，但它使您

00:04:21.789 --> 00:04:26.650
可以告诉跑步中发生了什么

00:04:23.830 --> 00:04:28.240
应用，但也来自开发者的

00:04:26.650 --> 00:04:29.889
观点是你知道你建立了

00:04:28.240 --> 00:04:31.930
代码一次，然后就可以发货了

00:04:29.889 --> 00:04:34.599
在任何地方，都是一样的

00:04:31.930 --> 00:04:37.930
表基本上是一种包装方式

00:04:34.599 --> 00:04:39.610
并设计您的应用程序，例如

00:04:37.930 --> 00:04:41.270
该配置可以来自

00:04:39.610 --> 00:04:43.730
外在的地方

00:04:41.270 --> 00:04:46.550
这是一个单一的过程，很简单

00:04:43.730 --> 00:04:48.980
你知道它在听你出口

00:04:46.550 --> 00:04:51.890
聆听一堆不同的声音

00:04:48.980 --> 00:04:53.750
允许应用程序执行的操作

00:04:51.890 --> 00:04:55.250
从一个环境移到另一个环境

00:04:53.750 --> 00:04:57.680
并能够在其中推理

00:04:55.250 --> 00:04:59.240
简单的方法而不必上来

00:04:57.680 --> 00:05:01.670
所有规则都由您自己决定

00:04:59.240 --> 00:05:05.000
对，实际上你知道那是一个

00:05:01.670 --> 00:05:07.250
纪律，但这是一个好习惯，因为

00:05:05.000 --> 00:05:11.360
它使您保持诚实对吧，继续看下去

00:05:07.250 --> 00:05:13.070
让您一直走在树路上

00:05:11.360 --> 00:05:16.070
我们如何做好第一件事

00:05:13.070 --> 00:05:18.080
做弹簧靴就对了

00:05:16.070 --> 00:05:20.870
听说过春季靴子使它真的

00:05:18.080 --> 00:05:22.850
易于编写的12个因子应用程序

00:05:20.870 --> 00:05:24.920
它的主要目标，我的意思是我们从不说

00:05:22.850 --> 00:05:27.170
当我们坐下时以这种方式表达

00:05:24.920 --> 00:05:30.920
并写下来，但本质上就是这样

00:05:27.170 --> 00:05:32.660
我们这样做是为了让您拥有春天

00:05:30.920 --> 00:05:34.610
春季靴子坐在春天的云

00:05:32.660 --> 00:05:39.050
该堆栈的顶部使其易于

00:05:34.610 --> 00:05:40.850
编写代码，然后部署

00:05:39.050 --> 00:05:42.680
到某种原生云中

00:05:40.850 --> 00:05:45.500
运行时那是什么

00:05:42.680 --> 00:05:48.320
把你认识的人带到哪里很容易

00:05:45.500 --> 00:05:50.060
二进制位，您只需将其吊起并

00:05:48.320 --> 00:05:52.190
它知道该怎么做

00:05:50.060 --> 00:05:54.260
平台再见，所以我们有一个

00:05:52.190 --> 00:05:56.300
那些是由铸造厂建造的

00:05:54.260 --> 00:05:58.220
其他你可能会来的人

00:05:56.300 --> 00:06:00.260
横跨我们也有一个叫做格子

00:05:58.220 --> 00:06:01.670
我们可能在其中某处提到过

00:06:00.260 --> 00:06:03.740
在此演示文稿中，我不确定

00:06:01.670 --> 00:06:05.900
如果没有的话，进行演示

00:06:03.740 --> 00:06:08.480
早些时候去马特斯坦斯演讲

00:06:05.900 --> 00:06:11.360
今天早上赶上视频

00:06:08.480 --> 00:06:14.990
是的，假设这真的是个好主意

00:06:11.360 --> 00:06:16.520
工作是你不能花花公子好吧， 

00:06:14.990 --> 00:06:19.120
那么这里也有底层

00:06:16.520 --> 00:06:21.470
这是更多的基础设施

00:06:19.120 --> 00:06:22.940
定向，所以我不喜欢开发人员

00:06:21.470 --> 00:06:25.340
真的不在乎那个底部

00:06:22.940 --> 00:06:27.560
层，但是如果

00:06:25.340 --> 00:06:29.630
你将要实现这个东西

00:06:27.560 --> 00:06:32.960
三层都有，所以我只是想

00:06:29.630 --> 00:06:35.120
我会提出来只是为了给

00:06:32.960 --> 00:06:36.860
我们基本上是关于为什么的话题

00:06:35.120 --> 00:06:38.470
弹簧靴有帮助，基本上

00:06:36.860 --> 00:06:40.850
因为它可以帮助您构建这些

00:06:38.470 --> 00:06:42.800
您可以运送的东西的二进制文件

00:06:40.850 --> 00:06:44.300
到处跑，每个人都知道如何

00:06:42.800 --> 00:06:49.670
运行它们，因为它们非常简单

00:06:44.300 --> 00:06:53.300
而且我喜欢创建的图层

00:06:49.670 --> 00:06:55.020
这些不错的抽象是我们的另一件事

00:06:53.300 --> 00:06:58.259
我喜欢这张幻灯片是

00:06:55.020 --> 00:07:00.750
没有把它称为我喜欢的微服务

00:06:58.259 --> 00:07:03.620
云原生术语比

00:07:00.750 --> 00:07:08.310
部分原因是微观暗示

00:07:03.620 --> 00:07:11.340
闻到与大小有关的东西

00:07:08.310 --> 00:07:15.449
与客户交谈时，他们

00:07:11.340 --> 00:07:18.030
有时为此过度劳累

00:07:15.449 --> 00:07:21.090
那个微型，真的是关于

00:07:18.030 --> 00:07:25.460
您所处的环境是什么，但是云

00:07:21.090 --> 00:07:28.650
本机描述得更好， 

00:07:25.460 --> 00:07:31.470
我们尝试并采取一些东西

00:07:28.650 --> 00:07:32.759
与春天的云，并消除一些

00:07:31.470 --> 00:07:35.880
这些附带的样板

00:07:32.759 --> 00:07:37.699
分布式系统好吧，那是什么

00:07:35.880 --> 00:07:39.720
我们实际上将谈论

00:07:37.699 --> 00:07:42.680
开发人员体验是什么

00:07:39.720 --> 00:07:47.400
就像在战es中的开发商一样

00:07:42.680 --> 00:07:49.889
对，所以那边的整个侧面是

00:07:47.400 --> 00:07:52.110
真的，是的，我没有使用这个词

00:07:49.889 --> 00:07:53.969
微服务直到现在，但这就是事实

00:07:52.110 --> 00:07:57.650
是对的，是开放的

00:07:53.969 --> 00:08:01.800
具有优势的灵活架构

00:07:57.650 --> 00:08:06.030
就上市时间而言

00:08:01.800 --> 00:08:07.500
那里巨大的商业价值，但像我一样

00:08:06.030 --> 00:08:09.300
一开始就说开发商差

00:08:07.500 --> 00:08:10.740
他需要的小开发人员

00:08:09.300 --> 00:08:12.120
一次只做一件事情

00:08:10.740 --> 00:08:14.340
这是没有意义的，没有意义

00:08:12.120 --> 00:08:15.779
每次都要建立整个宇宙

00:08:14.340 --> 00:08:18.690
我更改代码行的时间

00:08:15.779 --> 00:08:21.630
我有我以前的同事

00:08:18.690 --> 00:08:23.969
在这里我们必须做的同事

00:08:21.630 --> 00:08:27.180
我们必须重建宇宙

00:08:23.969 --> 00:08:30.509
您知道数十种服务

00:08:27.180 --> 00:08:32.279
看到我们的改变成功了，是的，我

00:08:30.509 --> 00:08:34.140
想要工具和技术在身​​边

00:08:32.279 --> 00:08:37.020
我们该怎么做才能做到这一点

00:08:34.140 --> 00:08:38.610
一点，当然你怎么能

00:08:37.020 --> 00:08:40.829
知道可以做到这一点的代码

00:08:38.610 --> 00:08:43.800
在去年春天写并发布

00:08:40.829 --> 00:08:45.959
一个和春天的云有助于如何反弹

00:08:43.800 --> 00:08:50.880
云铸造厂如何帮助我们获得

00:08:45.959 --> 00:08:53.310
克服了所有的小问题

00:08:50.880 --> 00:08:54.779
细微差别可能会驱使您

00:08:53.310 --> 00:08:57.980
当您尝试构建这些时会疯狂

00:08:54.779 --> 00:08:57.980
是的，是的

00:08:59.320 --> 00:09:06.380
好吧，所以这真的是

00:09:03.350 --> 00:09:09.770
如果您编写

00:09:06.380 --> 00:09:13.400
代码行，然后我这是最后一个

00:09:09.770 --> 00:09:15.140
某种社会学滑坡

00:09:13.400 --> 00:09:19.570
这都是技术性的，希望有些

00:09:15.140 --> 00:09:21.590
演示，但这是一种

00:09:19.570 --> 00:09:24.050
组织结构之一

00:09:21.590 --> 00:09:26.900
如果可以的话，康威定律基本上是幻灯片

00:09:24.050 --> 00:09:29.930
在您的组织中保持这种心态

00:09:26.900 --> 00:09:31.910
如果你能做到的话

00:09:29.930 --> 00:09:34.340
如果编写一些代码，则可以构建一些代码

00:09:31.910 --> 00:09:36.520
代码构建它，然后运行它或拥有它

00:09:34.340 --> 00:09:39.350
和组织的其他成员

00:09:36.520 --> 00:09:41.360
意识到这一点并接受它

00:09:39.350 --> 00:09:43.250
你基本上在那里，你会知道

00:09:41.360 --> 00:09:44.770
当您需要到达那里时，您知道您

00:09:43.250 --> 00:09:48.590
不一定要这样做

00:09:44.770 --> 00:09:53.000
为了一切，但是你

00:09:48.590 --> 00:09:56.000
可能想去那里

00:09:53.000 --> 00:09:57.800
能行吗12原则

00:09:56.000 --> 00:10:02.390
 12条断裂原理中的一些

00:09:57.800 --> 00:10:05.420
包括日志之类的东西

00:10:02.390 --> 00:10:07.190
重要日志一切收集数据

00:10:05.420 --> 00:10:09.590
即使您不认为自己要去

00:10:07.190 --> 00:10:13.250
需要它，因为您最终

00:10:09.590 --> 00:10:15.680
好的，所以在这里

00:10:13.250 --> 00:10:17.420
弹簧靴有助于正确，所以实际上我们

00:10:15.680 --> 00:10:20.230
到秋天没用过

00:10:17.420 --> 00:10:22.700
现在我认为默认为1.2春季

00:10:20.230 --> 00:10:25.220
标准输出是您唯一的选择

00:10:22.700 --> 00:10:27.500
获取日志，除非您执行类似的操作

00:10:25.220 --> 00:10:30.020
你必须选择其他方式

00:10:27.500 --> 00:10:31.280
这样做，标准输出只是一个

00:10:30.020 --> 00:10:34.960
明智的做法是因为

00:10:31.280 --> 00:10:37.820
操作系统知道如何知道

00:10:34.960 --> 00:10:39.860
帮助您，以及平台

00:10:37.820 --> 00:10:41.930
像

00:10:39.860 --> 00:10:44.150
云代工厂做了一些特别的事情

00:10:41.930 --> 00:10:46.850
如果是文件，则带有标准输出

00:10:44.150 --> 00:10:49.490
在某个随机的位置，所以没人知道

00:10:46.850 --> 00:10:50.990
关于，除了你，那是一片雪花

00:10:49.490 --> 00:10:52.430
对，没人会知道在哪里

00:10:50.990 --> 00:10:53.750
您的日志是如果您将它们放在文件中

00:10:52.430 --> 00:10:55.820
如果你把它们脱颖而出

00:10:53.750 --> 00:10:59.060
每个人都知道在哪里可以找到它

00:10:55.820 --> 00:11:00.530
原理，所以弹簧布布使

00:10:59.060 --> 00:11:03.470
真的很容易，因为它是

00:11:00.530 --> 00:11:04.670
以这种方式违约

00:11:03.470 --> 00:11:09.410
它也有一个叫做

00:11:04.670 --> 00:11:12.200
执行器是一组更好的41个

00:11:09.410 --> 00:11:13.010
文字非功能性功能，我们

00:11:12.200 --> 00:11:15.770
要谈一点

00:11:13.010 --> 00:11:21.410
一分钟的工具，但是在那里

00:11:15.770 --> 00:11:24.050
这些端点是否像跟踪一样

00:11:21.410 --> 00:11:26.570
请求好，所以如果我想看看我发现了

00:11:24.050 --> 00:11:28.850
这在我当时真的非常非常有帮助

00:11:26.570 --> 00:11:30.800
如果在生产中使用系统， 

00:11:28.850 --> 00:11:32.150
出事了第一件事你

00:11:30.800 --> 00:11:34.130
想做的就是找出你知道的是什么

00:11:32.150 --> 00:11:36.530
您要获取的系统状态

00:11:34.130 --> 00:11:38.450
一个线程转储，你想让你

00:11:36.530 --> 00:11:39.950
知道最近的一百个请求或

00:11:38.450 --> 00:11:42.830
看看实际发生了什么

00:11:39.950 --> 00:11:44.720
就像他们以前想做什么

00:11:42.830 --> 00:11:46.910
它出了错，那总是非常

00:11:44.720 --> 00:11:48.920
有价值，然后当您看到

00:11:46.910 --> 00:11:50.900
你说哦，那没用，为什么没用

00:11:48.920 --> 00:11:52.640
它运作良好，显然不是

00:11:50.900 --> 00:11:54.680
非常正确，所以配置了什么

00:11:52.640 --> 00:11:56.780
错误的，让我们来看一下

00:11:54.680 --> 00:11:58.340
环境端点/ em让我们开始吧

00:11:56.780 --> 00:11:59.570
并查看映射，看看是否

00:11:58.340 --> 00:12:01.850
实际上我们正在尝试的端点

00:11:59.570 --> 00:12:03.470
打到那里，所以这是

00:12:01.850 --> 00:12:06.290
我们提供这些端点的原因

00:12:03.470 --> 00:12:08.660
这样你就可以

00:12:06.290 --> 00:12:10.760
生产找出东西是

00:12:08.660 --> 00:12:14.890
如果发生以下情况将非常重要

00:12:10.760 --> 00:12:14.890
一切都出错了，但同时

00:12:15.010 --> 00:12:19.070
你知道但是因为他们是你所以

00:12:17.120 --> 00:12:20.390
那里有用，他们也转向

00:12:19.070 --> 00:12:23.480
有用的开发时间表

00:12:20.390 --> 00:12:26.780
我发现了，我确定你是否

00:12:23.480 --> 00:12:28.670
在github或堆栈上与我互动

00:12:26.780 --> 00:12:30.500
我问过你你知道吗

00:12:28.670 --> 00:12:32.810
那/结尾看起来像什么

00:12:30.500 --> 00:12:34.820
自动配置报告看起来像正确的

00:12:32.810 --> 00:12:37.300
也许你在想什么

00:12:34.820 --> 00:12:39.800
你的课堂路径也许你知道

00:12:37.300 --> 00:12:41.720
它在类路径上，但还有其他

00:12:39.800 --> 00:12:43.490
丢失了，所以自动配置也没有了

00:12:41.720 --> 00:12:46.460
就像我们认为的那样，所以我们可以

00:12:43.490 --> 00:12:49.070
看看为什么有些东西不起作用了

00:12:46.460 --> 00:12:50.630
通常我问的是的，是的， 

00:12:49.070 --> 00:12:53.060
很多时候都在做支持

00:12:50.630 --> 00:12:54.560
是的，艾米丽（Emily）面临着支持

00:12:53.060 --> 00:12:55.790
如果对开发时间有利， 

00:12:54.560 --> 00:12:57.740
出事了找你

00:12:55.790 --> 00:12:59.690
知道如何解决它，这很好

00:12:57.740 --> 00:13:03.440
你知道什么时候降落

00:12:59.690 --> 00:13:05.540
产量如果最差

00:13:03.440 --> 00:13:07.060
发生了，你必须找出是什么

00:13:05.540 --> 00:13:11.270
实际上是系统的状态

00:13:07.060 --> 00:13:13.250
数据可以存在一个人

00:13:11.270 --> 00:13:19.529
服务基础，因此我们将讨论

00:13:13.250 --> 00:13:23.220
以后再看大图

00:13:19.529 --> 00:13:27.240
并非总是晴天

00:13:23.220 --> 00:13:28.529
是您编写此代码吗？ 

00:13:27.240 --> 00:13:33.480
在本地工作可能会写一些

00:13:28.529 --> 00:13:37.290
测试将其正确发送给它发送给

00:13:33.480 --> 00:13:40.230
系统会正常工作吗

00:13:37.290 --> 00:13:42.629
如果不知道，请交叉手指

00:13:40.230 --> 00:13:44.939
你要如何找到答案，所以这是

00:13:42.629 --> 00:13:47.790
一些想法，以便您可以查看日志

00:13:44.939 --> 00:13:49.230
在平台CF中查看日志

00:13:47.790 --> 00:13:54.240
例如日志将获得云

00:13:49.230 --> 00:13:55.499
铸造日志，实际上认为这

00:13:54.240 --> 00:13:56.959
我觉得这很有用

00:13:55.499 --> 00:14:00.059
在运行时更改日志级别

00:13:56.959 --> 00:14:01.709
像Year dot这样的每个人都有

00:14:00.059 --> 00:14:04.889
问我们有关您知道我该怎么做

00:14:01.709 --> 00:14:06.240
与我的春天春天的应用程序，只有

00:14:04.889 --> 00:14:07.559
其实最近这一次最近

00:14:06.240 --> 00:14:10.920
一年，我们证明了它是正确的

00:14:07.559 --> 00:14:12.149
在春天的轨道上寻找你，所以我们

00:14:10.920 --> 00:14:13.769
你知道一个简单的

00:14:12.149 --> 00:14:15.329
环境变量同时变化

00:14:13.769 --> 00:14:17.160
环境变量不是运行

00:14:15.329 --> 00:14:19.410
系统，但您所处的春季环境

00:14:17.160 --> 00:14:22.680
记录级别，这实际上是一个很好的选择

00:14:19.410 --> 00:14:25.290
学习技巧，这实际上是

00:14:22.680 --> 00:14:29.759
通过/ n端点，我们发布到该端点

00:14:25.290 --> 00:14:32.189
测井级点带点框架

00:14:29.759 --> 00:14:35.459
安全等于调试，这是我的最爱

00:14:32.189 --> 00:14:39.269
因为我一直想知道为什么

00:14:35.459 --> 00:14:42.180
无法登录其他有用的端点

00:14:39.269 --> 00:14:45.149
我们选择只是谈论另一件事

00:14:42.180 --> 00:14:48.089
人们所做的就是他们加入功能

00:14:45.149 --> 00:14:51.809
切换正确，所以您放入东西

00:14:48.089 --> 00:14:54.600
您的应用通常不是活跃的soco 

00:14:51.809 --> 00:14:56.339
您可以再次激活的路径

00:14:54.600 --> 00:14:59.990
更改环境变量

00:14:56.339 --> 00:15:02.730
是的，这是很常见的事情

00:14:59.990 --> 00:15:05.129
特别是当你

00:15:02.730 --> 00:15:08.610
向您介绍新知识

00:15:05.129 --> 00:15:10.470
你想说嘿，一些用户

00:15:08.610 --> 00:15:13.920
为此功能进行a / b测试，或

00:15:10.470 --> 00:15:18.240
这样的事情很常见

00:15:13.920 --> 00:15:20.910
发生远程调试的事情是

00:15:18.240 --> 00:15:23.189
重要的是我不知道多少次

00:15:20.910 --> 00:15:24.629
我已经连接好了，让他们打开遥控器

00:15:23.189 --> 00:15:26.910
调试，以便我可以连接到一些

00:15:24.629 --> 00:15:29.490
服务器检查它也会很好看

00:15:26.910 --> 00:15:32.970
也许谈论

00:15:29.490 --> 00:15:34.140
这么多的工具，我们已经成为

00:15:32.970 --> 00:15:36.300
春季团队的人一直

00:15:34.140 --> 00:15:38.490
是的，我们稍后会看到

00:15:36.300 --> 00:15:41.160
对我来说，远程调试是最后一步

00:15:38.490 --> 00:15:43.399
如果我真的真的去度假

00:15:41.160 --> 00:15:46.529
找不到其他方法，因为

00:15:43.399 --> 00:15:48.420
痛苦的缓慢通常是对非常

00:15:46.529 --> 00:15:50.520
慢慢来，但是如果有一个应用程序

00:15:48.420 --> 00:15:52.110
只是不会表现那么你知道

00:15:50.520 --> 00:15:57.839
有时在其中放置一个断点

00:15:52.110 --> 00:16:01.890
我希望成为的唯一方式

00:15:57.839 --> 00:16:02.820
能告诉你也许也许

00:16:01.890 --> 00:16:04.649
必须在这个演讲之后

00:16:02.820 --> 00:16:08.029
因为我们遇到了海军问题，而我

00:16:04.649 --> 00:16:10.470
实际上无法连接我的笔记本电脑

00:16:08.029 --> 00:16:13.200
稍后会得到幻灯片，我

00:16:10.470 --> 00:16:15.320
解释了这是怎么回事

00:16:13.200 --> 00:16:18.540
您也可以在本地部署的想法

00:16:15.320 --> 00:16:20.339
所以在本地部署就近了

00:16:18.540 --> 00:16:22.290
瓦尔纳对，这就是您真正想要的

00:16:20.339 --> 00:16:23.660
做诊断问题的唯一方法

00:16:22.290 --> 00:16:26.730
本地部署的问题是

00:16:23.660 --> 00:16:28.380
本地是尼诺我的笔记本电脑不是

00:16:26.730 --> 00:16:31.260
必然与其他任何事物有关

00:16:28.380 --> 00:16:33.270
所以诀窍将是你如何

00:16:31.260 --> 00:16:36.180
得到我在本地部署的服务

00:16:33.270 --> 00:16:38.670
与他人交谈和互动

00:16:36.180 --> 00:16:40.350
在更大的系统中，我们知道

00:16:38.670 --> 00:16:42.000
有人部署在集成中

00:16:40.350 --> 00:16:46.040
环境可能，我们会

00:16:42.000 --> 00:16:46.040
告诉你一些东西以后再做

00:16:46.579 --> 00:16:55.770
所以这只是一个简单的图

00:16:51.149 --> 00:17:01.620
我们去年使用了一些解释

00:16:55.770 --> 00:17:06.449
春云的关键组成部分

00:17:01.620 --> 00:17:09.089
允许每个实例的配置服务器

00:17:06.449 --> 00:17:11.630
从集中获取配置

00:17:09.089 --> 00:17:16.709
允许您进行版本控制的位置

00:17:11.630 --> 00:17:18.030
配置并提供此

00:17:16.709 --> 00:17:19.620
每个实例的配置

00:17:18.030 --> 00:17:23.100
单独而不是必须

00:17:19.620 --> 00:17:24.870
与应用程序打包在一起

00:17:23.100 --> 00:17:28.230
您看到的负载均衡器是客户端

00:17:24.870 --> 00:17:31.050
与负载交互的负载均衡器

00:17:28.230 --> 00:17:33.390
服务发现机制来获取

00:17:31.050 --> 00:17:35.600
他们可以使用的可用服务器列表

00:17:33.390 --> 00:17:35.600
与...交谈

00:17:37.480 --> 00:17:46.720
关于这个我们还有什么要说的

00:17:38.950 --> 00:17:47.980
一个很好的，所以想要

00:17:46.720 --> 00:17:51.910
谈一些这些

00:17:47.980 --> 00:17:56.530
春天的常见抽象

00:17:51.910 --> 00:17:59.799
云，我们将用来做一些

00:17:56.530 --> 00:18:06.490
这些这些技术有一个

00:17:59.799 --> 00:18:10.120
 API允许的发现客户端

00:18:06.490 --> 00:18:12.820
服务注册，然后它也

00:18:10.120 --> 00:18:16.299
允许服务说嘿我需要我需要

00:18:12.820 --> 00:18:21.610
服务X或Y及其实例

00:18:16.299 --> 00:18:24.340
将带回主机和端口

00:18:21.610 --> 00:18:27.090
基本上将URL组合到服务

00:18:24.340 --> 00:18:29.919
可以让您与之互动

00:18:27.090 --> 00:18:35.110
我们是服务和负载平衡器的列表

00:18:29.919 --> 00:18:38.650
 allow是Netflix的抽象

00:18:35.110 --> 00:18:42.309
功能区，可让您插入和

00:18:38.650 --> 00:18:45.490
确定这些X中的哪一个的算法

00:18:42.309 --> 00:18:47.410
我应该使用它的实例可以是圆形的

00:18:45.490 --> 00:18:51.100
知更鸟可以是随机的

00:18:47.410 --> 00:18:53.559
加权响应时间可以是您的

00:18:51.100 --> 00:18:57.460
自己的实现，当然

00:18:53.559 --> 00:19:01.120
批注实际上将其打开

00:18:57.460 --> 00:19:03.220
那不是正确的注释

00:19:01.120 --> 00:19:10.210
这很有趣，应该启用

00:19:03.220 --> 00:19:13.470
发现客户，所以我们有了春天

00:19:10.210 --> 00:19:16.450
使用Eureka的云Netflix 

00:19:13.470 --> 00:19:18.309
服务发现和注册以及

00:19:16.450 --> 00:19:21.730
功能区当然是客户端的负担

00:19:18.309 --> 00:19:25.150
平衡器我实际上要过去

00:19:21.730 --> 00:19:27.880
我想星期四下午有个演讲

00:19:25.150 --> 00:19:31.419
同时我们将讨论一些

00:19:27.880 --> 00:19:34.390
服务的其他这些实现

00:19:31.419 --> 00:19:36.549
发现和配置，如控制台

00:19:34.390 --> 00:19:38.530
来自hachey Corp的那些家伙

00:19:36.549 --> 00:19:40.450
如果您熟悉流浪汉

00:19:38.530 --> 00:19:44.549
几乎每个人都是零散的

00:19:40.450 --> 00:19:48.100
动物园管理员很常见

00:19:44.549 --> 00:19:48.960
人们的基础设施组件

00:19:48.100 --> 00:19:51.770
从

00:19:48.960 --> 00:19:55.289
从netflix一直知道

00:19:51.770 --> 00:19:57.510
他们用于协调和

00:19:55.289 --> 00:20:01.559
我们也有分布式系统

00:19:57.510 --> 00:20:05.010
发现客户端的实现

00:20:01.559 --> 00:20:10.710
用于使用的云铸造和晶格

00:20:05.010 --> 00:20:12.980
他们的api用于服务发现

00:20:10.710 --> 00:20:19.980
而不是其他一些中央

00:20:12.980 --> 00:20:21.480
服务正在运行，是的，所以我认为

00:20:19.980 --> 00:20:24.000
下一张幻灯片可能很重要

00:20:21.480 --> 00:20:25.380
因为实际上是哦，实际上我们是

00:20:24.000 --> 00:20:27.690
首先要谈每个

00:20:25.380 --> 00:20:29.520
在我们这样做之前，让我们

00:20:27.690 --> 00:20:30.960
快速区分上一个

00:20:29.520 --> 00:20:33.630
小心地滑只是英语

00:20:30.960 --> 00:20:35.010
发现与负载平衡之间

00:20:33.630 --> 00:20:36.240
因为实际上是负载平衡

00:20:35.010 --> 00:20:39.750
我们将要使用一点

00:20:36.240 --> 00:20:41.640
剥离一下发生了什么

00:20:39.750 --> 00:20:43.710
内部远程服务，并尝试

00:20:41.640 --> 00:20:45.840
操纵它，以帮助我们

00:20:43.710 --> 00:20:47.669
在本地诊断问题，但我们

00:20:45.840 --> 00:20:49.590
做一些本地发展好吧

00:20:47.669 --> 00:20:52.020
那么我们要谈谈不同

00:20:49.590 --> 00:20:53.490
各种发现等等，云

00:20:52.020 --> 00:20:57.539
铸造厂很有趣

00:20:53.490 --> 00:21:00.510
因为它是只读的，所以你可以

00:20:57.539 --> 00:21:02.580
发现所有其他服务，但

00:21:00.510 --> 00:21:05.399
注册为您完成，您不需要

00:21:02.580 --> 00:21:06.510
实际上有一个可写的注册表

00:21:05.399 --> 00:21:08.610
当学习者有一些有趣的东西时

00:21:06.510 --> 00:21:11.429
 UCF推送时的功能

00:21:08.610 --> 00:21:15.750
注册发生，然后

00:21:11.429 --> 00:21:18.570
发现客户端将使用云

00:21:15.750 --> 00:21:20.279
控制器API查找实例

00:21:18.570 --> 00:21:22.500
已向进行注册

00:21:20.279 --> 00:21:24.480
云铸造厂那当然可以

00:21:22.500 --> 00:21:27.779
只告诉您一个地址

00:21:24.480 --> 00:21:30.450
扩大规模的应用程序，这就是局限性

00:21:27.779 --> 00:21:32.010
但这不是唯一的方法

00:21:30.450 --> 00:21:33.809
这些天在Cloud Foundry中做事

00:21:32.010 --> 00:21:36.390
是的，有一个选择可以做

00:21:33.809 --> 00:21:38.549
直接，然后您需要发布

00:21:36.390 --> 00:21:43.950
那种情况下在尤里卡（Eureka）捕鳟鱼

00:21:38.549 --> 00:21:46.500
斯科特所展示的动物园管理员或是

00:21:43.950 --> 00:21:52.649
我们昨晚在主题演讲中是的

00:21:46.500 --> 00:21:55.799
当晶格出现时，它在晶格中

00:21:52.649 --> 00:21:58.380
到我们正在谈论的现场

00:21:55.799 --> 00:22:00.600
与另一个弹簧之一

00:21:58.380 --> 00:22:02.210
开发人员昨晚的经历

00:22:00.600 --> 00:22:07.490
惊讶我们走了多快

00:22:02.210 --> 00:22:09.320
随着晶格的发现而已

00:22:07.490 --> 00:22:14.140
因为该API实际上非常非常

00:22:09.320 --> 00:22:19.160
易于使用，但它也是只读的

00:22:14.140 --> 00:22:21.410
当您进行点阵LTC创建时

00:22:19.160 --> 00:22:25.010
那就是注册发生的时候，我们

00:22:21.410 --> 00:22:28.300
使用其中之一的api 

00:22:25.010 --> 00:22:30.830
名为Diego的云代工厂组件

00:22:28.300 --> 00:22:32.420
关于一些有趣的事情

00:22:30.830 --> 00:22:35.780
格子和云铸造厂，他们增加了一些

00:22:32.420 --> 00:22:37.700
默认情况下为您的弹簧配置文件

00:22:35.780 --> 00:22:39.320
应用程序，以便某些自动

00:22:37.700 --> 00:22:43.700
为此可以进行配置

00:22:39.320 --> 00:22:47.480
特定的发现客户，我们有

00:22:43.700 --> 00:22:50.500
一些连接器，使您可以

00:22:47.480 --> 00:22:52.550
连接到一些基本服务数据库

00:22:50.500 --> 00:22:56.420
消息，是的，我只想回到

00:22:52.550 --> 00:22:58.100
该个人资料的事情，以为思考

00:22:56.420 --> 00:22:59.990
这对啤酒意味着什么，所以请记住

00:22:58.100 --> 00:23:01.130
我们得到了这个二进制的tarball， 

00:22:59.990 --> 00:23:03.770
只是想四处走动

00:23:01.130 --> 00:23:05.060
环境很好，这告诉我

00:23:03.770 --> 00:23:06.680
一些非常有趣的事情，所以我

00:23:05.060 --> 00:23:08.780
可以一样，因为我写过

00:23:06.680 --> 00:23:10.460
它以这种方式的应用程序，我可以

00:23:08.780 --> 00:23:13.040
我可以运行相同的二进制分发

00:23:10.460 --> 00:23:15.020
 Cloud Foundry中的应用程序可能就是

00:23:13.040 --> 00:23:16.910
生产目标，但我可以有一个

00:23:15.020 --> 00:23:19.340
很少使用集成环境

00:23:16.910 --> 00:23:21.140
设置起来要简单得多

00:23:19.340 --> 00:23:24.200
也许更容易管理， 

00:23:21.140 --> 00:23:25.700
与同一个tarball进行交互

00:23:24.200 --> 00:23:28.130
在那儿跑，但表现会有些微

00:23:25.700 --> 00:23:31.820
不同和细微的差异

00:23:28.130 --> 00:23:36.200
都受这个春天的影响

00:23:31.820 --> 00:23:38.690
功能正确，这样您就可以漂亮

00:23:36.200 --> 00:23:41.810
在启用时安全地编写相同的代码

00:23:38.690 --> 00:23:45.110
每个客户都对，这就是为什么我们

00:23:41.810 --> 00:23:47.930
在你的春天有这种抽象

00:23:45.110 --> 00:23:50.030
云应用程序将其交付并运行

00:23:47.930 --> 00:23:51.380
它在许多不同的环境中

00:23:50.030 --> 00:23:52.850
它应该适用于所有人

00:23:51.380 --> 00:23:56.570
实际上是非常有价值的

00:23:52.850 --> 00:24:00.100
能够控制和证明

00:23:56.570 --> 00:24:00.100
开发时间和整合时间

00:24:02.410 --> 00:24:10.309
所以我们在看到尤里卡之前就提到了

00:24:06.410 --> 00:24:13.820
在云铸造厂上运行

00:24:10.309 --> 00:24:18.080
我相信马特会证明他有

00:24:13.820 --> 00:24:20.630
他称之为的一个很酷的演示

00:24:18.080 --> 00:24:22.789
催化剂是一种晶格应用

00:24:20.630 --> 00:24:25.100
您可以下载，然后单击

00:24:22.789 --> 00:24:27.230
可以部署配置服务器的按钮

00:24:25.100 --> 00:24:30.049
您可以将Eureka部署到晶格上，如果

00:24:27.230 --> 00:24:31.970
您想要功能更全的服务

00:24:30.049 --> 00:24:35.780
在那个特定的发现

00:24:31.970 --> 00:24:38.539
平台，我们看到了托管版本

00:24:35.780 --> 00:24:39.860
演示中的春季云服务

00:24:38.539 --> 00:24:44.590
昨晚我们还会看到更多

00:24:39.860 --> 00:24:44.590
是的，今晚有商业广告

00:24:45.130 --> 00:24:49.789
像分钟一样的尤里卡实例是什么

00:24:47.450 --> 00:24:53.120
它是如何使用它实现的

00:24:49.789 --> 00:24:54.620
使用春天的云尤里卡，所以

00:24:53.120 --> 00:24:56.419
昨晚在演示中

00:24:54.620 --> 00:24:58.130
现在是本机服务和云代工厂

00:24:56.419 --> 00:25:01.700
因此对于开发人员而言，您不必

00:24:58.130 --> 00:25:08.600
编写任何应用程序以使Eureka正常运行

00:25:01.700 --> 00:25:12.380
很好，但是有点有趣

00:25:08.600 --> 00:25:14.659
也有不同的方式

00:25:12.380 --> 00:25:17.830
因为就像我刚才说的

00:25:14.659 --> 00:25:20.090
 Cloud Foundry Service Recovery只读

00:25:17.830 --> 00:25:23.090
所以这是一个小问题

00:25:20.090 --> 00:25:24.320
一些正确的方法，所以实际上我会

00:25:23.090 --> 00:25:26.600
喜欢，因为有时是

00:25:24.320 --> 00:25:28.760
我不介意喝茶

00:25:26.600 --> 00:25:30.110
使用本机Cloud Foundry发现

00:25:28.760 --> 00:25:31.820
如果合适的话可能在

00:25:30.110 --> 00:25:34.789
我只需要生产

00:25:31.820 --> 00:25:36.770
开发时间有你

00:25:34.789 --> 00:25:39.740
同时知道一个可写的注册表

00:25:36.770 --> 00:25:41.720
时间，以便我可以动态地知道

00:25:39.740 --> 00:25:43.549
注册我正在构建的东西

00:25:41.720 --> 00:25:45.169
我自己和我想测试

00:25:43.549 --> 00:25:46.880
你获得的好处是

00:25:45.169 --> 00:25:50.299
您可以在其他地方注册

00:25:46.880 --> 00:25:52.970
晶格或云铸造厂

00:25:50.299 --> 00:25:55.159
特定服务的实例，因为

00:25:52.970 --> 00:25:58.970
您可以写它，然后

00:25:55.159 --> 00:26:01.190
该集群中的服务知道

00:25:58.970 --> 00:26:02.990
他们自己环境之外的东西

00:26:01.190 --> 00:26:05.690
那就是我的优势

00:26:02.990 --> 00:26:06.830
玛丽卡给你在那里，所以

00:26:05.690 --> 00:26:10.040
另一层是

00:26:06.830 --> 00:26:13.429
 Eureka的商业PCF版本是

00:26:10.040 --> 00:26:14.330
非常安全，因为我们想要企业

00:26:13.429 --> 00:26:16.070
使用它

00:26:14.330 --> 00:26:20.090
但这意味着这并不容易

00:26:16.070 --> 00:26:23.450
注册任意随机本地

00:26:20.090 --> 00:26:24.769
本地运行的应用程序不是

00:26:23.450 --> 00:26:27.830
将具有安全凭证

00:26:24.769 --> 00:26:31.039
向远程尤里卡注册，为什么

00:26:27.830 --> 00:26:34.429
有趣的是因为实际上我

00:26:31.039 --> 00:26:40.970
如果我可以的话，可以作为开发人员来桥接

00:26:34.429 --> 00:26:43.580
推送Eureka服务器应用程序将其绑定到

00:26:40.970 --> 00:26:46.460
我们昨晚使用的PCF Eureka 

00:26:43.580 --> 00:26:48.200
然后他们成为同伴，所以他们

00:26:46.460 --> 00:26:50.990
实际共享一个服务注册表，我

00:26:48.200 --> 00:26:54.289
可以与内在的阅读互动

00:26:50.990 --> 00:26:57.200
安全的尤里卡的唯一途径

00:26:54.289 --> 00:26:59.360
通过一个边车，基本上我

00:26:57.200 --> 00:27:00.860
当我添加为同伴时， 

00:26:59.360 --> 00:27:02.299
我一直在玩的小把戏

00:27:00.860 --> 00:27:03.500
和我在一起，我希望演示

00:27:02.299 --> 00:27:07.159
今天，但我将无法

00:27:03.500 --> 00:27:09.740
由于AV问题，这

00:27:07.159 --> 00:27:12.289
在sts中也有一些工具

00:27:09.740 --> 00:27:16.130
可以帮助您很多，然后我们

00:27:12.289 --> 00:27:17.419
你我给你看一些照片

00:27:16.130 --> 00:27:18.860
以后会有一个图

00:27:17.419 --> 00:27:22.490
展示了所有这些如何融合在一起

00:27:18.860 --> 00:27:28.279
它将大开眼界

00:27:22.490 --> 00:27:29.360
当你看到它发生的时候，那就是

00:27:28.279 --> 00:27:35.500
其实我在说的不是

00:27:29.360 --> 00:27:35.500
它或多或少，所以我们说你想

00:27:36.850 --> 00:27:41.630
您拥有此集成系统的权利

00:27:39.649 --> 00:27:43.909
那是

00:27:41.630 --> 00:27:45.260
在右侧，我已经部署了所有

00:27:43.909 --> 00:27:46.880
服务整个系统

00:27:45.260 --> 00:27:50.570
在那儿跑我不在乎它如何

00:27:46.880 --> 00:27:52.070
在那里我们稍后再谈

00:27:50.570 --> 00:27:54.980
有一个服务注册表部分

00:27:52.070 --> 00:27:56.450
平台，也许它的本机，也许是

00:27:54.980 --> 00:28:01.519
我刚刚部署的应用程序就像

00:27:56.450 --> 00:28:03.529
谈论，然后有一个遥控器

00:28:01.519 --> 00:28:04.940
我特别是根据远程客户端

00:28:03.529 --> 00:28:09.200
小睡片刻，有一项服务

00:28:04.940 --> 00:28:11.090
想要联系，我们称之为红色， 

00:28:09.200 --> 00:28:13.159
绿色对，所以绿色服务就

00:28:11.090 --> 00:28:15.860
右想联系红色服务

00:28:13.159 --> 00:28:17.870
现在左边是红色的那个

00:28:15.860 --> 00:28:20.659
我正在从事开发工作，所以我

00:28:17.870 --> 00:28:22.309
只是剪了一些代码，我写了一些单元

00:28:20.659 --> 00:28:24.559
测试，所以我现在想一切都很好

00:28:22.309 --> 00:28:27.380
整合后我该怎么办

00:28:24.559 --> 00:28:28.269
没有你就知道放慢一切

00:28:27.380 --> 00:28:30.580
下

00:28:28.269 --> 00:28:32.229
你知道发送所有的叮咬

00:28:30.580 --> 00:28:34.749
上网等待他们

00:28:32.229 --> 00:28:36.909
启动，我该怎么做，所以

00:28:34.749 --> 00:28:39.309
这个想法，因为它是一个本地的

00:28:36.909 --> 00:28:40.749
变化可能会打破

00:28:39.309 --> 00:28:42.719
其他尝试使用

00:28:40.749 --> 00:28:46.479
相同的集成环境，对

00:28:42.719 --> 00:28:48.389
所以关键是绿色的东西

00:28:46.479 --> 00:28:51.190
右侧绿色客户

00:28:48.389 --> 00:28:53.200
因为它正在使用这项服务

00:28:51.190 --> 00:28:56.320
发现客户端负载平衡

00:28:53.200 --> 00:28:58.779
他实际上并不在乎的模式

00:28:56.320 --> 00:29:00.669
他在那里发送请求的权利

00:28:58.779 --> 00:29:03.669
只是问服务注册表

00:29:00.669 --> 00:29:06.879
对于红色实例和红色实例

00:29:03.669 --> 00:29:08.379
可能是他的本地人之一，或者可能

00:29:06.879 --> 00:29:09.759
在其他地方可能在

00:29:08.379 --> 00:29:11.169
不同的数据中心，或者它可能在

00:29:09.759 --> 00:29:13.599
我的笔记本电脑，实际上是

00:29:11.169 --> 00:29:16.809
我们在这里画的图片

00:29:13.599 --> 00:29:20.529
这项工作需要双向

00:29:16.809 --> 00:29:25.209
通信可能是HTTP或隧道

00:29:20.529 --> 00:29:27.039
和其他类型的协议HTTP很容易

00:29:25.209 --> 00:29:29.950
因为隧道很容易通过

00:29:27.039 --> 00:29:33.009
实际上，SDS使弹簧工具靠拢

00:29:29.950 --> 00:29:34.509
我们刚刚构建的套件功能

00:29:33.009 --> 00:29:39.429
刚出来我是最后一次给你看

00:29:34.509 --> 00:29:41.649
主题演讲中的夜晚有一种

00:29:39.429 --> 00:29:44.019
单击服务为此，我可以

00:29:41.649 --> 00:29:47.109
单击本地应用程序，我可以

00:29:44.019 --> 00:29:49.629
说让我在本地用尽

00:29:47.109 --> 00:29:52.209
远程注册并为我建立一个

00:29:49.629 --> 00:29:54.279
隧道返回，以便远程服务

00:29:52.209 --> 00:29:56.019
可以联系我，真的很好

00:29:54.279 --> 00:29:58.209
开发人员的经验，因为现在我可以

00:29:56.019 --> 00:30:01.779
设置我正在运行的实际断点

00:29:58.209 --> 00:30:04.539
本地编码非常快，我可以设置您

00:30:01.779 --> 00:30:06.549
知道真正的快速断点，如果

00:30:04.539 --> 00:30:08.649
正确的手，如果绿色服务

00:30:06.549 --> 00:30:10.479
然后向我的红色服务发送请求

00:30:08.649 --> 00:30:12.940
我要去看CC停下来

00:30:10.479 --> 00:30:15.399
这实际上非常有趣， 

00:30:12.940 --> 00:30:18.579
强大的开发方法

00:30:15.399 --> 00:30:21.579
本地应用程序，但关键是

00:30:18.579 --> 00:30:22.570
依靠客户端负载均衡

00:30:21.579 --> 00:30:26.200
这就是我们要谈的

00:30:22.570 --> 00:30:29.700
关于下一个我想，所以有一些

00:30:26.200 --> 00:30:35.859
我们可以实现的不同方式

00:30:29.700 --> 00:30:39.089
所以在我们回来的情况下

00:30:35.859 --> 00:30:41.500
这里可能还有其他红色

00:30:39.089 --> 00:30:43.870
部署在其他地方

00:30:41.500 --> 00:30:46.000
对其他一些红色服务以及如何

00:30:43.870 --> 00:30:49.960
当您使远程客户端

00:30:46.000 --> 00:30:51.790
要求不回到你的那个

00:30:49.960 --> 00:30:53.740
希望它回到另一个

00:30:51.790 --> 00:30:57.190
在另一台机器上的那个

00:30:53.740 --> 00:31:01.180
你没有权利，所以在那里

00:30:57.190 --> 00:31:04.660
我们可以做到的方式很多

00:31:01.180 --> 00:31:06.610
为此，我们可以在中设置一个标志

00:31:04.660 --> 00:31:10.450
说嘿的远程系统

00:31:06.610 --> 00:31:13.330
本地路线，我们可以确定外观

00:31:10.450 --> 00:31:17.770
本地权限，可能URL有一些

00:31:13.330 --> 00:31:20.800
我们可以用来的模式

00:31:17.770 --> 00:31:23.230
关掉他们的另一头

00:31:20.800 --> 00:31:25.030
也许讨厌那个箭头吧，是的，是的

00:31:23.230 --> 00:31:27.400
该请求来自哪里以及是否

00:31:25.030 --> 00:31:29.080
它来自你知道我的笔记本电脑，然后我们

00:31:27.400 --> 00:31:33.430
可以把它寄回给我，我可以付钱

00:31:29.080 --> 00:31:35.140
是的，正是带有标题的

00:31:33.430 --> 00:31:38.010
请求参数类似我们

00:31:35.140 --> 00:31:41.920
可以使用一些数据

00:31:38.010 --> 00:31:43.840
这样智能路由器

00:31:41.920 --> 00:31:45.760
智能负载均衡器可以说我

00:31:43.840 --> 00:31:48.430
其实想回到这个

00:31:45.760 --> 00:31:49.870
家伙零子弹点实际上

00:31:48.430 --> 00:31:52.630
默认只是等待他们

00:31:49.870 --> 00:31:54.100
负载均衡器来找我吧

00:31:52.630 --> 00:31:59.980
反正经常发生足够正确

00:31:54.100 --> 00:32:01.900
如果我知道你在发展，你就会知道

00:31:59.980 --> 00:32:03.640
相对孤立的系统，我不是

00:32:01.900 --> 00:32:07.060
踩到太多的人，我会

00:32:03.640 --> 00:32:08.770
只是这样做，是的，最终

00:32:07.060 --> 00:32:10.840
循环或随机负载平衡

00:32:08.770 --> 00:32:12.940
会击中你的，是的，我猜我

00:32:10.840 --> 00:32:14.350
可能就是DFAS atif哦

00:32:12.940 --> 00:32:18.760
和阿什利工作得很好

00:32:14.350 --> 00:32:21.210
时间我的经验，所以能够

00:32:18.760 --> 00:32:25.690
功能区是这个负载均衡器

00:32:21.210 --> 00:32:27.250
客户可以用来获取其中的一些

00:32:25.690 --> 00:32:30.310
我们讨论过的这些功能

00:32:27.250 --> 00:32:32.470
不同的负载均衡算法之一

00:32:30.310 --> 00:32:36.100
功能区中的其他抽象是

00:32:32.470 --> 00:32:42.120
服务器列表这说我从哪里得到我的

00:32:36.100 --> 00:32:45.220
要选择的服务器列表

00:32:42.120 --> 00:32:48.310
功能区中的默认值只是一个

00:32:45.220 --> 00:32:51.520
产权逗号中的静态列表

00:32:48.310 --> 00:32:54.570
 URL的分隔列表，他可以

00:32:51.520 --> 00:32:57.100
更改运行时

00:32:54.570 --> 00:32:58.450
是的，春天的云，你可以戳

00:32:57.100 --> 00:33:02.350
环境，你可以改变它

00:32:58.450 --> 00:33:05.460
列出是否这些其他服务器之一

00:33:02.350 --> 00:33:09.370
列表不在上，未启用

00:33:05.460 --> 00:33:10.809
尤里卡有一个神话般的名字，我想

00:33:09.370 --> 00:33:13.419
春天是唯一拥有的

00:33:10.809 --> 00:33:15.399
启用了类名发现功能

00:33:13.419 --> 00:33:18.100
我什至不知道我和我

00:33:15.399 --> 00:33:22.049
是的，它将具有的新服务器列表

00:33:18.100 --> 00:33:22.049
即使他们没有previa 

00:33:22.379 --> 00:33:28.000
控制台服务器列表Zookeeper服务器

00:33:24.940 --> 00:33:33.370
列表等也有一个概念

00:33:28.000 --> 00:33:35.110
过滤这是允许的也是基于

00:33:33.370 --> 00:33:37.899
从中获得的一些信息

00:33:35.110 --> 00:33:41.830
环境仅返回

00:33:37.899 --> 00:33:45.720
从中收集的服务器

00:33:41.830 --> 00:33:48.129
例如Netflix喜欢的列表

00:33:45.720 --> 00:33:50.950
尝试从同一服务器中选择一台服务器

00:33:48.129 --> 00:33:52.990
他们尝试缩小区域范围，缩小范围

00:33:50.950 --> 00:34:00.269
到实际上距离更近的服务器

00:33:52.990 --> 00:34:03.070
尽可能接近客户

00:34:00.269 --> 00:34:06.129
所以我们感兴趣的基本上是

00:34:03.070 --> 00:34:07.809
进一步操纵发送

00:34:06.129 --> 00:34:13.020
前往右侧红色服务的交通

00:34:07.809 --> 00:34:16.810
有点左右是是的所以

00:34:13.020 --> 00:34:20.050
默认情况下，我们引入了功能区

00:34:16.810 --> 00:34:23.649
它使用属性来更改这些

00:34:20.050 --> 00:34:27.520
实现在以下方面有一些限制

00:34:23.649 --> 00:34:29.139
你知道的创造那些

00:34:27.520 --> 00:34:31.450
实例给您，但我们需要一点

00:34:29.139 --> 00:34:35.770
更多的控制权，所以戴夫实际上出现了

00:34:31.450 --> 00:34:39.190
使用注释的方法

00:34:35.770 --> 00:34:42.760
让我们容纳丝带

00:34:39.190 --> 00:34:44.889
配置/功能区客户端，当我

00:34:42.760 --> 00:34:46.839
说客户，我的意思是功能区客户

00:34:44.889 --> 00:34:49.020
红色服务例如问题

00:34:46.839 --> 00:34:49.020
在这里

00:35:03.719 --> 00:35:08.979
好的，这是两个

00:35:07.329 --> 00:35:11.589
关于我们在现场看到的问题

00:35:08.979 --> 00:35:13.539
基本上你问什么

00:35:11.589 --> 00:35:14.859
我们已经看到一些人使用这种方式

00:35:13.539 --> 00:35:16.930
我们看到的人们看到人们使用这些

00:35:14.859 --> 00:35:20.109
是的，所以我们看到人们使用了

00:35:16.930 --> 00:35:21.400
你的脸看来我们绝对有

00:35:20.109 --> 00:35:24.809
意味着这实际上就是它的构建方式

00:35:21.400 --> 00:35:27.640
被使用，另一个问题是

00:35:24.809 --> 00:35:30.729
必须适合前端负载平衡

00:35:27.640 --> 00:35:33.489
现在人们会用耶

00:35:30.729 --> 00:35:36.160
示例Cloud Foundry有自己的负载

00:35:33.489 --> 00:35:38.259
平衡或右前方，你知道

00:35:36.160 --> 00:35:39.880
对于其中的外部请求

00:35:38.259 --> 00:35:41.279
经过那个负载均衡器，然后

00:35:39.880 --> 00:35:43.749
取决于您与

00:35:41.279 --> 00:35:46.539
请问我配置了Cloud Foundry吗

00:35:43.749 --> 00:35:48.609
可以通过该路由器返回

00:35:46.539 --> 00:35:50.739
去其他服务或直接去

00:35:48.609 --> 00:35:52.450
到各个服务代理中

00:35:50.739 --> 00:35:54.160
前端和负载平衡不会被替换

00:35:52.450 --> 00:35:57.239
在客户端的只是

00:35:54.160 --> 00:35:59.170
客户端的给你一些你知道的

00:35:57.239 --> 00:36:01.599
实际上可以玩的算法

00:35:59.170 --> 00:36:04.869
控制过程更多

00:36:01.599 --> 00:36:08.319
合理的方法不是你不是

00:36:04.869 --> 00:36:09.910
仅一种尺寸就可以满足您的实际需求

00:36:08.319 --> 00:36:11.999
根据您的需要进行调整/ 

00:36:09.910 --> 00:36:14.019
客户就是这就是为什么

00:36:11.999 --> 00:36:15.640
斯宾塞只是在谈论一个

00:36:14.019 --> 00:36:17.319
在这种情况下，客户实际上是我认为

00:36:15.640 --> 00:36:19.239
如果这是一种颠倒的权利

00:36:17.319 --> 00:36:20.769
我真的想提供哪项服务

00:36:19.239 --> 00:36:23.019
说对了，所以如果我想和

00:36:20.769 --> 00:36:27.430
红色服务我需要功能区客户端

00:36:23.019 --> 00:36:32.069
被称为是红色的地方

00:36:27.430 --> 00:36:34.049
我们已经使用了这种定制

00:36:32.069 --> 00:36:37.150
春季靴子有些神奇

00:36:34.049 --> 00:36:39.910
集成测试功能吧

00:36:37.150 --> 00:36:42.670
启动实际的Spring Boot服务

00:36:39.910 --> 00:36:44.979
您可以编写自己知道的测试

00:36:42.670 --> 00:36:48.339
与您的真实HTTP通信

00:36:44.979 --> 00:36:51.640
服务，这是非常有用的我们

00:36:48.339 --> 00:36:54.489
在Spring Cloud中使用它来测试各种

00:36:51.640 --> 00:36:57.579
功能和我们要做的事情之一

00:36:54.489 --> 00:37:00.099
如果可以的话，可以在这里看到

00:36:57.579 --> 00:37:03.359
我在说一些事情

00:37:00.099 --> 00:37:07.049
大约这是一个功能区客户端

00:37:03.359 --> 00:37:09.430
我希望它用于

00:37:07.049 --> 00:37:12.219
联系称为本地应用程序的服务

00:37:09.430 --> 00:37:15.180
该客户端的配置为

00:37:12.219 --> 00:37:15.180
来自这个阶层

00:37:15.550 --> 00:37:21.900
所以在这里，您可以看到它只是一个

00:37:18.460 --> 00:37:27.970
基本的Spring Java配置类

00:37:21.900 --> 00:37:30.610
这个值来自这里

00:37:27.970 --> 00:37:33.490
 Spring Boot集成测试设施

00:37:30.610 --> 00:37:35.500
它说你可以在这里看到我开始我的

00:37:33.490 --> 00:37:37.390
在随机端口上进行集成测试，因此

00:37:35.500 --> 00:37:40.150
你知道你不会与之冲突

00:37:37.390 --> 00:37:42.940
任何东西，所以我在启动时不知道

00:37:40.150 --> 00:37:44.650
时间，但端口HTTP将

00:37:42.940 --> 00:37:47.440
服务器将要运行，所以我

00:37:44.650 --> 00:37:49.150
在运行时得到它，然后在这里你

00:37:47.440 --> 00:37:52.120
可以看到这是一个简单的服务器列表

00:37:49.150 --> 00:37:53.530
实施我不知道你是否

00:37:52.120 --> 00:37:57.160
实际上看到1i创建了一个新的

00:37:53.530 --> 00:37:59.710
称为静态服务器列表的类

00:37:57.160 --> 00:38:02.110
给他们这个服务器对象的列表

00:37:59.710 --> 00:38:04.930
从比作为netflix对象，但说

00:38:02.110 --> 00:38:06.250
嘿，仅此而已的服务器

00:38:04.930 --> 00:38:08.380
从服务器列表中返回

00:38:06.250 --> 00:38:11.020
是具有此动态端口的本地主机，并且

00:38:08.380 --> 00:38:13.180
它允许您测试使用

00:38:11.020 --> 00:38:15.550
集成测试中的功能非常出色

00:38:13.180 --> 00:38:17.170
没有时间对我们有用

00:38:15.550 --> 00:38:19.000
没有完整的分发

00:38:17.170 --> 00:38:20.500
系统权限，这完全是本地的

00:38:19.000 --> 00:38:23.470
我要运行此集成测试

00:38:20.500 --> 00:38:26.950
在同一个JVM中，我要运行一个

00:38:23.470 --> 00:38:29.110
 HTTP m点的服务，我可以

00:38:26.950 --> 00:38:31.990
内在需要的客户

00:38:29.110 --> 00:38:33.160
与远程端点交谈总是

00:38:31.990 --> 00:38:35.170
去同一个地方

00:38:33.160 --> 00:38:37.870
实际上只是本地的，但是你可以

00:38:35.170 --> 00:38:39.520
想象你可以去

00:38:37.870 --> 00:38:41.410
远程端点也是如此

00:38:39.520 --> 00:38:42.880
这样配置，我们

00:38:41.410 --> 00:38:45.340
处理客户端负载

00:38:42.880 --> 00:38:47.440
娱乐和利润的平衡器，但使

00:38:45.340 --> 00:38:52.870
在开发时我们的生活更轻松

00:38:47.440 --> 00:38:54.610
基本上你有它，我有一个演示

00:38:52.870 --> 00:38:57.850
这就是为什么你不做那个车夫

00:38:54.610 --> 00:39:01.560
确实让您的笔记本电脑工作了

00:38:57.850 --> 00:39:01.560
我们想见这个家伙

00:39:03.700 --> 00:39:11.170
让它变得有趣，我现在可以公平地做到这一点

00:39:07.540 --> 00:39:20.099
轻松地让我看看，所以这是一个相当

00:39:11.170 --> 00:39:23.500
简单的春季启动应用程序，你可以看到我

00:39:20.099 --> 00:39:25.390
用开始点创建了这个

00:39:23.500 --> 00:39:28.660
春天死了，春天吧

00:39:25.390 --> 00:39:33.400
初始化程序，所以我有尤里卡客户端

00:39:28.660 --> 00:39:37.210
我也有功能区入门网站

00:39:33.400 --> 00:39:40.510
显然是执行器和其他一些

00:39:37.210 --> 00:39:49.420
我会告诉你他们为什么

00:39:40.510 --> 00:39:50.859
在此基础上重要

00:39:49.420 --> 00:39:52.480
端点，因为我只是要

00:39:50.859 --> 00:39:55.690
我自己的客户，我不想写

00:39:52.480 --> 00:39:57.940
我很懒的两个应用程序，写了一个，所以我

00:39:55.690 --> 00:40:01.030
将成为我同一个应用程序的客户

00:39:57.940 --> 00:40:04.420
会这样称呼自己/家

00:40:01.030 --> 00:40:06.490
这里只是要打电话给我，所以这个

00:40:04.420 --> 00:40:09.700
让您了解我们的工作方式

00:40:06.490 --> 00:40:11.859
与您的负载均衡器集成

00:40:09.700 --> 00:40:14.500
注意我做得不好，但是

00:40:11.859 --> 00:40:16.300
我没有在这里使用它

00:40:14.500 --> 00:40:18.670
特殊情况下，我只是使用普通

00:40:16.300 --> 00:40:23.260
其余模板，春云有这个

00:40:18.670 --> 00:40:28.089
为我创建，而不是使用

00:40:23.260 --> 00:40:32.200
标准网址而不是主机

00:40:28.089 --> 00:40:36.640
和端口我有服务名称

00:40:32.200 --> 00:40:38.589
如果我向您显示配置Dave 

00:40:36.640 --> 00:40:41.140
昨晚在演示中向您展示了

00:40:38.589 --> 00:40:43.510
对，这就是这个名字

00:40:41.140 --> 00:40:47.339
在服务发现中注册

00:40:43.510 --> 00:40:51.270
和尤里卡一起被称为补救措施

00:40:47.339 --> 00:40:54.490
所以，我打个简单的电话22 /我

00:40:51.270 --> 00:41:01.089
实际上我正在使用我们的发现

00:40:54.490 --> 00:41:02.560
客户抽象让我自己

00:41:01.089 --> 00:41:05.829
知道自己和如何

00:41:02.560 --> 00:41:11.140
注册，关键是当你看到

00:41:05.829 --> 00:41:14.870
在我这里，让我开始其中的一些

00:41:11.140 --> 00:41:17.780
不同的端口，所以我有

00:41:14.870 --> 00:41:21.010
这些都只在本地运行

00:41:17.780 --> 00:41:25.610
有一个独特的活动尤里卡已经

00:41:21.010 --> 00:41:30.410
在后台运行在这里

00:41:25.610 --> 00:41:35.030
在这里，所以我有这三个不同

00:41:30.410 --> 00:41:37.490
现在正在运行的服务是否正在运行

00:41:35.030 --> 00:41:39.500
我刚刚设定的随机子弹发热

00:41:37.490 --> 00:41:43.340
他们用不同的静态端口

00:41:39.500 --> 00:41:49.700
在运行时运行它，以便您可以在此处看到

00:41:43.340 --> 00:41:51.920
是我本地的Eureka仪表板

00:41:49.700 --> 00:41:54.620
笔记本电脑，你可以看到我有三个

00:41:51.920 --> 00:42:02.000
在三个上运行的功能区演示

00:41:54.620 --> 00:42:05.470
不同的端口还可以，所以现在如果我命中

00:42:02.000 --> 00:42:08.120
 1991年第一个端点

00:42:05.470 --> 00:42:11.350
您会发现它正在循环

00:42:08.120 --> 00:42:16.880
通过三种不同的服务

00:42:11.350 --> 00:42:18.380
只是随机排列，就是这样

00:42:16.880 --> 00:42:20.990
只是那种标准的用例

00:42:18.380 --> 00:42:22.550
最终是零点

00:42:20.990 --> 00:42:24.530
会击中我感兴趣的那个

00:42:22.550 --> 00:42:26.510
我们是否已向

00:42:24.530 --> 00:42:29.210
隧道，例如我

00:42:26.510 --> 00:42:32.180
对好事感兴趣我想好了

00:42:29.210 --> 00:42:34.550
我可以做这个吗

00:42:32.180 --> 00:42:39.020
有趣，所以让我们回到

00:42:34.550 --> 00:42:46.730
代码在这里，所以我告诉你有关

00:42:39.020 --> 00:42:52.900
过滤器，所以我创建了一个过滤器

00:42:46.730 --> 00:42:56.390
扩展我使用的Netflix类之一

00:42:52.900 --> 00:43:00.940
春季靴子配置属性i 

00:42:56.390 --> 00:43:03.590
具有此类的演示属性

00:43:00.940 --> 00:43:08.810
简单的演示名称空间和过滤器

00:43:03.590 --> 00:43:11.570
模式是基于弹簧的

00:43:08.810 --> 00:43:16.520
它们是模式匹配实用程序吗

00:43:11.570 --> 00:43:18.380
像图案一样带阿姨

00:43:16.520 --> 00:43:25.150
那里的数据将获得一个插件

00:43:18.380 --> 00:43:25.150
对于Baumbach，所以此过滤器会说

00:43:25.809 --> 00:43:32.289
因此，鉴于此服务器列表

00:43:29.709 --> 00:43:34.959
是一种方法，如果我

00:43:32.289 --> 00:43:38.439
财产有我要去的模式

00:43:34.959 --> 00:43:42.579
前进并遍历每个服务器

00:43:38.439 --> 00:43:45.969
并将该模式​​应用于服务器ID 

00:43:42.579 --> 00:43:51.189
 ID，如果匹配，我将返回

00:43:45.969 --> 00:43:54.910
好的，那如何运作，所以我

00:43:51.189 --> 00:43:57.819
要利用春天

00:43:54.910 --> 00:44:02.289
可以戳春天的云

00:43:57.819 --> 00:44:05.349
环境等等，他们甚至仍然是

00:44:02.289 --> 00:44:10.529
这是已经是的时候，这是肯定的

00:44:05.349 --> 00:44:10.529
准备好直到是，谢谢你，是的，所以

00:44:11.160 --> 00:44:17.650
这是在应用程序本身中

00:44:15.039 --> 00:44:20.349
就像我之前展示的那样

00:44:17.650 --> 00:44:23.859
这是我的缎带客户，我已经

00:44:20.349 --> 00:44:28.839
如果我们去看看这个丝带安装

00:44:23.859 --> 00:44:32.289
演示配置这是我的演示

00:44:28.839 --> 00:44:35.410
服务器列表过滤器和一个有趣的

00:44:32.289 --> 00:44:38.170
请注意，这是我在幻灯片上

00:44:35.410 --> 00:44:41.400
在我特别需要之前显示

00:44:38.170 --> 00:44:43.299
从此处删除应用程序配置

00:44:41.400 --> 00:44:45.369
因为他们正在整理扫描

00:44:43.299 --> 00:44:47.729
是的啊，但是你把它放在一个

00:44:45.369 --> 00:44:50.739
不同的包装，我知道是对的

00:44:47.729 --> 00:44:53.439
扫描我的朋友这很邪恶

00:44:50.739 --> 00:44:57.160
这很危险，我保险，然后

00:44:53.439 --> 00:44:58.630
那为什么我们发明我花了我

00:44:57.160 --> 00:45:01.539
花了一个半小时试图

00:44:58.630 --> 00:45:03.519
弄清楚为什么豆子这样

00:45:01.539 --> 00:45:06.549
特定的一个此客户端配置bean 

00:45:03.519 --> 00:45:08.949
在启动时不可用

00:45:06.549 --> 00:45:11.439
我意识到我本可以搬走

00:45:08.949 --> 00:45:12.670
包装或刚刚关闭组件

00:45:11.439 --> 00:45:15.489
扫描，但我很懒，只是

00:45:12.670 --> 00:45:18.670
评论了这个，所以我已经安装了

00:45:15.489 --> 00:45:22.660
这是服务器列表过滤器

00:45:18.670 --> 00:45:28.499
我曾经的每个演示应用程序

00:45:22.660 --> 00:45:28.499
已经开始，所以现在我

00:45:29.529 --> 00:45:34.549
使这一面更大一点，我们可以

00:45:32.059 --> 00:45:36.679
得到它，任何人都无法看到

00:45:34.549 --> 00:45:43.899
那只是大喊，我们显然可以

00:45:36.679 --> 00:45:43.899
调整没人喊他们都睡着了

00:45:44.529 --> 00:45:54.199
所以我现在就让我们来吧

00:45:50.630 --> 00:45:57.409
看到所以我正在使用一个叫做

00:45:54.199 --> 00:46:00.769
 HTTP我发现它的名称有点HTTP 

00:45:57.409 --> 00:46:06.079
比卷曲更友好的工具

00:46:00.769 --> 00:46:11.929
但要点是我要做出一个

00:46:06.079 --> 00:46:15.919
发布到9999 t1 / m，我要

00:46:11.929 --> 00:46:18.499
戳此属性演示过滤器

00:46:15.919 --> 00:46:22.309
模式我将通过这个

00:46:18.499 --> 00:46:24.619
小希瑟的名字和诗人是的

00:46:22.309 --> 00:46:29.630
我只是匹配任何以

00:46:24.619 --> 00:46:32.630
一分为二，我们将看到这里发生的情况

00:46:29.630 --> 00:46:35.089
您可以看到响应说明

00:46:32.630 --> 00:46:37.339
模式此属性已更改，因此现在

00:46:35.089 --> 00:46:39.469
如果我回到这里我的小客户

00:46:37.339 --> 00:46:43.749
通过这三个过滤是

00:46:39.469 --> 00:46:52.039
现在停留在九点到二点，所以我们只是说

00:46:43.749 --> 00:46:56.809
如果我们去回到那个

00:46:52.039 --> 00:47:01.099
我刚才说绿色客户去

00:46:56.809 --> 00:47:03.349
您知道与匹配相匹配的红色服务

00:47:01.099 --> 00:47:06.559
这种模式，这很有趣，但是

00:47:03.349 --> 00:47:08.449
会影响到每个人，因为

00:47:06.559 --> 00:47:13.130
功能区的工作方式以及服务器的方式

00:47:08.449 --> 00:47:16.749
列表过滤器可以缓存和

00:47:13.130 --> 00:47:19.609
所以它在后台线程中运行

00:47:16.749 --> 00:47:21.829
因此您无权访问任何

00:47:19.609 --> 00:47:23.839
您想要的用户属性

00:47:21.829 --> 00:47:25.639
这影响到每个人的整体服务

00:47:23.839 --> 00:47:27.889
会得到的，所以现在就好像

00:47:25.639 --> 00:47:29.239
好吧，我的意思是取决于您的设置

00:47:27.889 --> 00:47:30.949
你的灵感环境就对了

00:47:29.239 --> 00:47:33.069
我的意思是我认为有两所学校

00:47:30.949 --> 00:47:35.269
以为我你有一个

00:47:33.069 --> 00:47:37.039
开发人员有自己的集成

00:47:35.269 --> 00:47:38.659
理想但不理想的环境

00:47:37.039 --> 00:47:39.610
每个人都有资源，如果你

00:47:38.659 --> 00:47:41.230
有你自己的这个会

00:47:39.610 --> 00:47:43.660
是的，那就没关系了

00:47:41.230 --> 00:47:44.920
哦，你正在和其他人分享

00:47:43.660 --> 00:47:46.600
我认为很好的人Spencer men 

00:47:44.920 --> 00:47:48.250
他说这会影响其他

00:47:46.600 --> 00:47:49.630
人，所以其他人可能是

00:47:48.250 --> 00:47:52.210
发展自己的服务，他们

00:47:49.630 --> 00:47:55.390
不想看到整个

00:47:52.210 --> 00:47:57.220
那个身体是的，所以我要去

00:47:55.390 --> 00:48:02.280
向前并将该模式​​重置为空

00:47:57.220 --> 00:48:02.280
并显示一个不同的，所以我的朋友

00:48:03.450 --> 00:48:10.060
抢劫的姓是什么

00:48:07.510 --> 00:48:12.610
 Rob spring session嘿，Rob winch绞盘

00:48:10.060 --> 00:48:16.990
是的，谢谢你，对不起，罗伯·蒂米（Rob Timmy）在

00:48:12.610 --> 00:48:19.200
是的，他做的很棒

00:48:16.990 --> 00:48:24.540
春天的事情，所以我

00:48:19.200 --> 00:48:24.540
也想在这里得到它

00:48:26.310 --> 00:48:32.200
您可以访问的地方

00:48:29.680 --> 00:48:34.300
将用户数据基本上

00:48:32.200 --> 00:48:40.360
请求线程在实际负载中

00:48:34.300 --> 00:48:43.060
平衡器，所以我创建了我自己的实例

00:48:40.360 --> 00:48:44.800
这里的负载均衡器的负载

00:48:43.060 --> 00:48:46.810
平衡器是功能区是的

00:48:44.800 --> 00:48:49.090
这是功能区的抽象

00:48:46.810 --> 00:48:51.460
我们只是在说那种话

00:48:49.090 --> 00:48:53.980
在这种情况下会习惯

00:48:51.460 --> 00:48:59.230
如果我们看看我的负载

00:48:53.980 --> 00:49:03.390
平衡器，而不是使用

00:48:59.230 --> 00:49:05.680
我要去的环境属性

00:49:03.390 --> 00:49:12.100
实际上要做两件事

00:49:05.680 --> 00:49:14.470
为了时间而显示一个，但是我

00:49:12.100 --> 00:49:17.470
将使用春季会议这是一个

00:49:14.470 --> 00:49:20.350
通过HTTP会话进行漂亮的抽象

00:49:17.470 --> 00:49:23.110
允许您将数据放入其他

00:49:20.350 --> 00:49:27.280
数据存储以在其中分发会话

00:49:23.110 --> 00:49:31.930
在这种情况下，我将使用Redis， 

00:49:27.280 --> 00:49:35.230
会说如果这个属性有一个

00:49:31.930 --> 00:49:36.910
模式类似于我所做的

00:49:35.230 --> 00:49:39.160
该物业，除了现在我只是

00:49:36.910 --> 00:49:44.290
它是从其他地方

00:49:39.160 --> 00:49:46.210
不同的背景，因此结局

00:49:44.290 --> 00:49:47.560
如果您正在做一个会议，那么

00:49:46.210 --> 00:49:48.460
您基本上是说每种轻松

00:49:47.560 --> 00:49:54.190
它可以在那里

00:49:48.460 --> 00:49:56.770
专利权宾果游戏，如果我这样来

00:49:54.190 --> 00:49:58.599
我再次创建了一个托管我的客户端

00:49:56.770 --> 00:50:00.940
应用程序，但这是其中之一

00:49:58.599 --> 00:50:03.820
罗伯刚刚实施的是能够

00:50:00.940 --> 00:50:05.710
通过用户ID查找会话，因此您

00:50:03.820 --> 00:50:08.109
可能有一些用户

00:50:05.710 --> 00:50:10.750
嘿的接口或API给我

00:50:08.109 --> 00:50:13.270
用户x记录的会话

00:50:10.750 --> 00:50:16.359
进入您的系统，您对我和

00:50:13.270 --> 00:50:18.280
然后我们可以找到它，所以这次

00:50:16.359 --> 00:50:22.780
我要说的基本上就是全部

00:50:18.280 --> 00:50:24.730
这个小API是用来设置

00:50:22.780 --> 00:50:28.740
我已经拥有的会话属性

00:50:24.730 --> 00:50:31.420
登录，所以我将其设置为两个

00:50:28.740 --> 00:50:36.010
三个代替，所以现在我们回来

00:50:31.420 --> 00:50:38.109
在这里，而不是去两个

00:50:36.010 --> 00:50:42.420
要三点，但是如果我们想

00:50:38.109 --> 00:50:47.080
证明一点正确，我们会过来对不起

00:50:42.420 --> 00:50:51.430
您可以将其复制到新的浏览器

00:50:47.080 --> 00:50:52.980
没有会话权限的Logan是一个

00:50:51.430 --> 00:50:55.330
蒂芙尼或者是再次登录

00:50:52.980 --> 00:50:57.099
基本上是同一用户，但不同

00:50:55.330 --> 00:51:00.070
会议，所以我只是去参加一个会议

00:50:57.099 --> 00:51:01.570
 ID不一定是用户ID，而是类似

00:51:00.070 --> 00:51:04.510
我说过，新的

00:51:01.570 --> 00:51:07.180
 API是抢劫犯创建的，所以现在您

00:51:04.510 --> 00:51:09.670
可以看到在本次会议中我要去

00:51:07.180 --> 00:51:11.410
通过所有三个经历

00:51:09.670 --> 00:51:13.540
在我后面的正常循环中

00:51:11.410 --> 00:51:16.660
会议上我只有一个正确的，所以这个

00:51:13.540 --> 00:51:18.700
可能就是我们如何回到

00:51:16.660 --> 00:51:21.540
我在完全共享的环境中

00:51:18.700 --> 00:51:24.280
不同的用户我没有那个

00:51:21.540 --> 00:51:27.099
较早使用的静态专利

00:51:24.280 --> 00:51:31.119
你清除了吗我清除了

00:51:27.099 --> 00:51:32.440
是的，所以有一些乐趣

00:51:31.119 --> 00:51:34.570
我真的很喜欢这样做

00:51:32.440 --> 00:51:36.550
因为我已经说了一年了

00:51:34.570 --> 00:51:39.190
你可以用这种东西

00:51:36.550 --> 00:51:41.109
色带，它超级灵活，而且

00:51:39.190 --> 00:51:42.490
有趣的是，我想你知道哪里

00:51:41.109 --> 00:51:44.890
我们要前进的是要清楚的是

00:51:42.490 --> 00:51:48.400
我们可能会现成的

00:51:44.890 --> 00:51:51.369
您知道服务器列表和过滤器，因此您

00:51:48.400 --> 00:51:53.560
可以使用，可能

00:51:51.369 --> 00:51:56.859
工具实际上知道，所以我们可以

00:51:53.560 --> 00:51:59.560
可能会帮助工具指导

00:51:56.859 --> 00:52:01.869
开发人员的经验，以便

00:51:59.560 --> 00:52:02.410
 Spring Boot仪表板，您将能够

00:52:01.869 --> 00:52:05.049
至

00:52:02.410 --> 00:52:07.059
是的，请在本地运行您的应用

00:52:05.049 --> 00:52:09.940
与远程服务器并注册

00:52:07.059 --> 00:52:12.670
而你却为

00:52:09.940 --> 00:52:16.150
丝带只是为了完整性我

00:52:12.670 --> 00:52:18.910
其实我不是在随机运行

00:52:16.150 --> 00:52:21.130
或循环规则，它正在运行

00:52:18.910 --> 00:52:22.780
加权响应时间规则正确

00:52:21.130 --> 00:52:25.240
这是您可以插入

00:52:22.780 --> 00:52:28.000
不同的负载均衡算法

00:52:25.240 --> 00:52:29.710
功能区，因为这很常见

00:52:28.000 --> 00:52:31.119
问你如何改变呢

00:52:29.710 --> 00:52:33.280
那个来的粉丝

00:52:31.119 --> 00:52:37.539
这不是这个加权的响应时间

00:52:33.280 --> 00:52:46.869
冷静下来让Netflix冷静下来

00:52:37.539 --> 00:52:48.490
是的，所以功能区我们在这里

00:52:46.869 --> 00:52:51.670
好的，这样就把我们带到了一个新的话题

00:52:48.490 --> 00:52:55.950
在我们出发之前准备好任何问题

00:52:51.670 --> 00:52:55.950
在一张账单上

00:53:03.250 --> 00:53:10.430
是的，所以问题是

00:53:08.240 --> 00:53:13.430
该规则执行我们刚刚设置的规则

00:53:10.430 --> 00:53:15.349
应用于我们提供的所有服务

00:53:13.430 --> 00:53:18.380
联系或只是一个和

00:53:15.349 --> 00:53:20.660
答案是因为这取决于

00:53:18.380 --> 00:53:23.150
特定规则的特殊情况

00:53:20.660 --> 00:53:25.880
到我的功能区演示客户端功能区客户端

00:53:23.150 --> 00:53:28.339
但是如果您可以设置默认值

00:53:25.880 --> 00:53:31.880
每个功能区客户端的配置

00:53:28.339 --> 00:53:34.369
并且可以使用一个，这样您就可以

00:53:31.880 --> 00:53:35.839
为您所有的人设置默认规则

00:53:34.369 --> 00:53:39.740
客户，但来自客户

00:53:35.839 --> 00:53:41.780
正确的观点不是来自当你

00:53:39.740 --> 00:53:43.280
说对我来说我感到困惑

00:53:41.780 --> 00:53:45.109
你说的是丝带客户

00:53:43.280 --> 00:53:46.970
您要联系的服务

00:53:45.109 --> 00:53:49.240
正确的，如果有一个全球

00:53:46.970 --> 00:53:51.950
适用于所有服务的默认值

00:53:49.240 --> 00:53:53.960
下游服务，然后每个

00:53:51.950 --> 00:53:56.030
一个你可以做的建议

00:53:53.960 --> 00:53:58.190
好吧写一个覆盖它吧，但是

00:53:56.030 --> 00:54:00.650
从客户角度来说，您

00:53:58.190 --> 00:54:03.020
不要在

00:54:00.650 --> 00:54:04.520
实例，您可以在

00:54:03.020 --> 00:54:08.059
想要联系那些客户

00:54:04.520 --> 00:54:10.069
是有意义的实例

00:54:08.059 --> 00:54:11.660
功能区是功能区是客户端负载

00:54:10.069 --> 00:54:15.380
平衡或正确的地方

00:54:11.660 --> 00:54:17.119
它不存在于

00:54:15.380 --> 00:54:21.250
实例存在于客户

00:54:17.119 --> 00:54:21.250
试图联系那些实例

00:54:47.110 --> 00:54:52.040
好吧，所以问题是

00:54:50.960 --> 00:54:53.630
它实际上与

00:54:52.040 --> 00:54:55.670
尤里卡是否安全，但是

00:54:53.630 --> 00:54:57.920
你能完全绕过尤里卡吗

00:54:55.670 --> 00:54:59.120
并转到固定服务器（如果需要） 

00:54:57.920 --> 00:55:00.800
是的，因为这只是一个

00:54:59.120 --> 00:55:02.330
是的，我可以列出一个

00:55:00.800 --> 00:55:03.860
您从中获得服务器列表的一部分

00:55:02.330 --> 00:55:06.620
尤里卡（Eureka），您可以从修复中受益

00:55:03.860 --> 00:55:08.090
而不是模式匹配服务器

00:55:06.620 --> 00:55:12.050
从尤里卡那里得到的可能只是

00:55:08.090 --> 00:55:14.090
服务器权限，如果该属性是

00:55:12.050 --> 00:55:16.550
只要去任何属性

00:55:14.090 --> 00:55:17.840
价值是正确的，当然这只是一个

00:55:16.550 --> 00:55:20.960
服务器列表，它不一定来自

00:55:17.840 --> 00:55:23.530
我认为确实是一个服务注册表

00:55:20.960 --> 00:55:23.530
回答问题

00:55:30.319 --> 00:55:38.029
还没有，所以问题是

00:55:35.479 --> 00:55:39.949
关于IDE的可用内容

00:55:38.029 --> 00:55:43.729
为此有不同的ID，因此SDS 

00:55:39.949 --> 00:55:45.619
一些类似的方法

00:55:43.729 --> 00:55:48.049
说我们正在指导工具团队

00:55:45.619 --> 00:55:51.920
对这样的图片

00:55:48.049 --> 00:55:54.430
他们在STS中是基本的绿色红色

00:55:51.920 --> 00:55:56.479
中间有黄色代理

00:55:54.430 --> 00:55:57.739
 intellij尚未就此开展工作

00:55:56.479 --> 00:55:59.989
但我知道他们像白人

00:55:57.739 --> 00:56:03.309
一旦他们看到了什么是性传播感染

00:55:59.989 --> 00:56:05.329
可能在几天之内

00:56:03.309 --> 00:56:09.739
所以他们还没那么做

00:56:05.329 --> 00:56:15.019
知道所以下一个话题

00:56:09.739 --> 00:56:17.719
它总是在改变外观

00:56:15.019 --> 00:56:18.709
我的意思是我们真的很喜欢

00:56:17.719 --> 00:56:21.739
我们一直在谈论的方法

00:56:18.709 --> 00:56:24.140
关于我在哪里开发东西

00:56:21.739 --> 00:56:25.849
但实际上它在一个

00:56:24.140 --> 00:56:28.249
集成设置或多或少

00:56:25.849 --> 00:56:31.549
我喜欢那种活着的真实系统

00:56:28.249 --> 00:56:33.920
工作一些人喜欢做事

00:56:31.549 --> 00:56:37.579
有点不同，所以他们也

00:56:33.920 --> 00:56:40.279
想思考正确的g字

00:56:37.579 --> 00:56:43.660
治理，那就是您开始

00:56:40.279 --> 00:56:46.759
想好合同，你

00:56:43.660 --> 00:56:48.619
消费者驱动的术语是什么，我可以

00:56:46.759 --> 00:56:52.009
永远不记得看不到我开车

00:56:48.619 --> 00:56:56.539
合同是的，是的，这样的想法在哪里

00:56:52.009 --> 00:57:00.890
那就是从根本上你可以避免

00:56:56.539 --> 00:57:02.329
很多你知道我们一团糟

00:57:00.890 --> 00:57:04.519
只是在谈论那是一团糟

00:57:02.329 --> 00:57:06.349
我同意我会承认，但是好东西

00:57:04.519 --> 00:57:09.170
最终是与我互动

00:57:06.349 --> 00:57:11.630
在本地使用真实系统，您可以避免

00:57:09.170 --> 00:57:13.279
人们在很大程度上

00:57:11.630 --> 00:57:14.989
对，我们的朋友是为了

00:57:13.279 --> 00:57:17.479
在这方面非常重要，我们将向您展示

00:57:14.989 --> 00:57:20.269
他们的工具在一分钟内完成

00:57:17.479 --> 00:57:22.369
 Spencer的演示很不错

00:57:20.269 --> 00:57:27.259
另一种方法是考虑一下

00:57:22.369 --> 00:57:29.239
对于生产者和

00:57:27.259 --> 00:57:30.829
我们的消费者就叫他们

00:57:29.239 --> 00:57:33.140
消息现在甚至都不需要

00:57:30.829 --> 00:57:35.449
是HTTP，可以是任何一种

00:57:33.140 --> 00:57:37.130
交流，但通常我们在谈论

00:57:35.449 --> 00:57:39.440
关于HTTP的示例

00:57:37.130 --> 00:57:41.059
在这里展示拥有一个

00:57:39.440 --> 00:57:43.519
这两件事之间的契约

00:57:41.059 --> 00:57:44.030
您可以改变什么而又不中断

00:57:43.519 --> 00:57:45.650
你的

00:57:44.030 --> 00:57:47.300
 Seema就是这样

00:57:45.650 --> 00:57:49.940
是不是，这就是为什么它是g4 

00:57:47.300 --> 00:57:51.730
治理，所以在那里你知道高

00:57:49.940 --> 00:57:54.740
级别有一些相当不同

00:57:51.730 --> 00:57:56.930
方法，所以也许我

00:57:54.740 --> 00:57:59.570
不知道这些DC或幻灯片，也许

00:57:56.930 --> 00:58:03.440
你可以很好地谈论这些

00:57:59.570 --> 00:58:05.500
例如，在

00:58:03.440 --> 00:58:07.700
掩饰了一点，但在

00:58:05.500 --> 00:58:10.070
他们谈论它不在

00:58:07.700 --> 00:58:12.470
 UI昨晚的主题演讲

00:58:10.070 --> 00:58:14.600
与存根一起开发

00:58:12.470 --> 00:58:17.270
服务，我相信你曾经

00:58:14.600 --> 00:58:19.520
春天MVC这样动画和

00:58:17.270 --> 00:58:22.400
基本上，您创建了spring MVC应用程序

00:58:19.520 --> 00:58:25.040
但它所做的只是返回内容

00:58:22.400 --> 00:58:26.870
一个字符串作为一个简单的相邻文件

00:58:25.040 --> 00:58:29.360
存根对，所以这是实际运行

00:58:26.870 --> 00:58:31.550
服务它是真正的Java代码，但它

00:58:29.360 --> 00:58:33.200
真的不只是返回静态

00:58:31.550 --> 00:58:35.210
数据权限列表，这是一种简单的方法

00:58:33.200 --> 00:58:39.080
那是做存根的一种特殊方法

00:58:35.210 --> 00:58:41.240
当那是什么时候

00:58:39.080 --> 00:58:43.850
您要联系的服务没有

00:58:41.240 --> 00:58:45.770
存在于未开发的环境中

00:58:43.850 --> 00:58:47.200
就像他们拥有的哦，它不存在

00:58:45.770 --> 00:58:49.610
形式，一旦你是一个是一个

00:58:47.200 --> 00:58:51.770
启蒙我碰到同伴权利

00:58:49.610 --> 00:58:53.570
您有想要的旧系统

00:58:51.770 --> 00:58:54.920
与之互动，因此您想定义一个

00:58:53.570 --> 00:58:57.140
与它签约，但你实际上并没有

00:58:54.920 --> 00:58:59.540
有了端点，所以您

00:58:57.140 --> 00:59:01.130
建立一个存根，以便您可以得到一些

00:58:59.540 --> 00:59:02.570
速度向右走就是那个

00:59:01.130 --> 00:59:05.030
这是我们主题演讲的场景

00:59:02.570 --> 00:59:06.680
实际上你在实践中知道

00:59:05.030 --> 00:59:10.370
相当平静，我发现人们

00:59:06.680 --> 00:59:12.080
开发相当大的系统部分

00:59:10.370 --> 00:59:13.730
而实际上没有实时数据

00:59:12.080 --> 00:59:16.010
它的背面，是的，是的， 

00:59:13.730 --> 00:59:20.810
你想到的另一种情况是

00:59:16.010 --> 00:59:22.010
您拥有所有服务，合而为一

00:59:20.810 --> 00:59:24.050
案例会告诉你他们实际上已经

00:59:22.010 --> 00:59:28.250
您可以在某个地方发布的存根

00:59:24.050 --> 00:59:29.840
用于验证与那些人的互动

00:59:28.250 --> 00:59:32.600
其他服务实际上没有

00:59:29.840 --> 00:59:36.190
站起来像戴夫一样的所有服务

00:59:32.600 --> 00:59:39.260
在描述是的，你基本上有一个

00:59:36.190 --> 00:59:41.690
客户周围的存根系统

00:59:39.260 --> 00:59:44.300
与上的存根进行交互

00:59:41.690 --> 00:59:47.420
另一面，所以没有生活

00:59:44.300 --> 00:59:49.100
集成系统，您只是有一个

00:59:47.420 --> 00:59:53.120
系统，这是您想要参加的聚会

00:59:49.100 --> 00:59:55.730
加入，但您可以加入一种

00:59:53.120 --> 00:59:57.060
嘲弄我不是真正的方式

00:59:55.730 --> 01:00:00.600
所以啊

00:59:57.060 --> 01:00:02.550
比使用您知道的更高的水平

01:00:00.600 --> 01:00:05.640
模拟或简单模拟或类似的东西

01:00:02.550 --> 01:00:08.540
你还是你知道要过去

01:00:05.640 --> 01:00:11.790
电线是的，但水平低于

01:00:08.540 --> 01:00:13.350
拥有完整的系统并运行

01:00:11.790 --> 01:00:15.600
我们已经看到了许多不同的工具

01:00:13.350 --> 01:00:16.890
以及用于此的方法，所以我

01:00:15.600 --> 01:00:19.170
其实只是在跟客户说话

01:00:16.890 --> 01:00:21.630
上周我们在争论

01:00:19.170 --> 01:00:23.670
关于第一个要点的辩论，所以

01:00:21.630 --> 01:00:25.290
你应该怎么做，我没想到

01:00:23.670 --> 01:00:27.900
有一个正确的答案，所以我就

01:00:25.290 --> 01:00:32.550
解释这两种方法之一是

01:00:27.900 --> 01:00:35.160
是为了您的制作人有权

01:00:32.550 --> 01:00:38.040
发表合同，说对了

01:00:35.160 --> 01:00:40.440
我正在服务的服务这就是我的服务

01:00:38.040 --> 01:00:43.140
看起来像并发布了一些

01:00:40.440 --> 01:00:44.490
别人讨厌的东西

01:00:43.140 --> 01:00:46.020
可以使用的方法就是

01:00:44.490 --> 01:00:48.030
 Spencer马上要演示

01:00:46.020 --> 01:00:49.470
用另一种方式思考另一只脚

01:00:48.030 --> 01:00:51.360
他们正在看的时候有点

01:00:49.470 --> 01:00:52.950
完全颠倒过来

01:00:51.360 --> 01:00:54.780
不，我不喜欢，但是我已经看过

01:00:52.950 --> 01:00:55.850
我见过的人正在这样做

01:00:54.780 --> 01:00:59.880
为什么我们上周在谈论它

01:00:55.850 --> 01:01:02.130
我服务的消费者

01:00:59.880 --> 01:01:03.930
发布了他们的集成测试

01:01:02.130 --> 01:01:06.240
违反我的服务，我必须逃跑

01:01:03.930 --> 01:01:08.730
他们就是为什么我不喜欢它，因为

01:01:06.240 --> 01:01:10.980
它把目光投向我，我认为那是

01:01:08.730 --> 01:01:12.570
摩擦太大，但这有点

01:01:10.980 --> 01:01:15.090
如果您愿意，可以提高治理水平

01:01:12.570 --> 01:01:17.130
更有力的保证，当我

01:01:15.090 --> 01:01:19.590
发布我的服务肯定是

01:01:17.130 --> 01:01:21.090
去上班，因为如果你知道

01:01:19.590 --> 01:01:22.680
他们，如果他们不写他们的测试

01:01:21.090 --> 01:01:24.270
正确的方式是他们的错，但他们

01:01:22.680 --> 01:01:26.340
他们只是告诉我他们是什么

01:01:24.270 --> 01:01:27.540
通过发布他们的测试来完成

01:01:26.340 --> 01:01:29.810
所以这是另一种方式

01:01:27.540 --> 01:01:31.860
是的，我们来看一个特别的

01:01:29.810 --> 01:01:34.110
实际上我有几种不同的方式

01:01:31.860 --> 01:01:36.480
有点调整了

01:01:34.110 --> 01:01:40.110
财务人员产生他们的

01:01:36.480 --> 01:01:44.610
生产者存根使用队列休息和

01:01:40.110 --> 01:01:47.100
电线模拟，然后谢谢你添加了

01:01:44.610 --> 01:01:49.980
周杰伦的能力是我的另一项能力

01:01:47.100 --> 01:01:51.390
碰到这个，这有点像为什么

01:01:49.980 --> 01:01:53.400
我离开了，我的意思是你知道

01:01:51.390 --> 01:01:55.920
都是山药，全部是声明性的

01:01:53.400 --> 01:01:57.480
你只是声明更多的东西

01:01:55.920 --> 01:01:59.310
存根看起来应该很像

01:01:57.480 --> 01:02:00.600
来自不同文件的数据，我

01:01:59.310 --> 01:02:02.790
认为有某种基本状态

01:02:00.600 --> 01:02:04.370
那里的机器功能以及

01:02:02.790 --> 01:02:06.960
我也想提一下

01:02:04.370 --> 01:02:08.280
斯宾塞昨晚在我们的主题演讲中

01:02:06.960 --> 01:02:10.410
使用Spring MVC，那是

01:02:08.280 --> 01:02:14.490
实际上是一种完美的生产方式

01:02:10.410 --> 01:02:16.770
简单的存根和

01:02:14.490 --> 01:02:19.079
这些其他东西的简单用法

01:02:16.770 --> 01:02:21.329
只是你做不到的事情

01:02:19.079 --> 01:02:27.780
这很容易，实际上是

01:02:21.329 --> 01:02:30.030
是真正的有状态的我，所以如果你是

01:02:27.780 --> 01:02:32.160
向服务发送消息，您

01:02:30.030 --> 01:02:33.780
希望它能改变您的状态

01:02:32.160 --> 01:02:35.819
结果是响应，然后您想要

01:02:33.780 --> 01:02:38.039
与另一个国家测试该状态

01:02:35.819 --> 01:02:39.839
通话将具有挑战性

01:02:38.039 --> 01:02:41.819
一个存根，所以实际上经常穿

01:02:39.839 --> 01:02:43.069
跌倒了，我想无论如何我们要走了

01:02:41.819 --> 01:02:45.119
给你看一堆这些东西

01:02:43.069 --> 01:02:46.980
还有整个事情

01:02:45.119 --> 01:02:49.079
存根是否正在运行

01:02:46.980 --> 01:02:51.500
与测试相同的过程，或者是否

01:02:49.079 --> 01:02:53.970
您可以远程运行它们

01:02:51.500 --> 01:02:55.940
个别服务，或者作为一个服务

01:02:53.970 --> 01:02:59.190
标记一切的服务

01:02:55.940 --> 01:03:03.089
财务工具允许

01:02:59.190 --> 01:03:06.240
我实际上将展示嵌入式存根

01:03:03.089 --> 01:03:08.160
所以那种一般的模式

01:03:06.240 --> 01:03:12.359
我将用来做这些

01:03:08.160 --> 01:03:14.130
使用电线模拟的布朗菲尔德存根

01:03:12.359 --> 01:03:19.829
我将展示两种不同的方式

01:03:14.130 --> 01:03:23.849
为什么生成JSON文件

01:03:19.829 --> 01:03:26.390
用于电线模拟，他们展示了春天

01:03:23.849 --> 01:03:31.079
昨天休息，所以我实际上

01:03:26.390 --> 01:03:33.720
将展示如何使用休息码头

01:03:31.079 --> 01:03:38.099
生成存根，以便与您一起

01:03:33.720 --> 01:03:41.819
测试来了存根或您的指控者有

01:03:38.099 --> 01:03:46.470
他们使用的常规dsl 

01:03:41.819 --> 01:03:48.029
财务人员参与度很高

01:03:46.470 --> 01:03:49.950
在Accurist中，我不知道他们是否运行它

01:03:48.029 --> 01:03:53.579
但他们认为没有看到他这样做

01:03:49.950 --> 01:03:56.520
是他的项目好吧好吧，所以他们

01:03:53.579 --> 01:03:58.200
让他们喜欢这个，这是一个普通的dsl 

01:03:56.520 --> 01:04:01.740
我会告诉你一点

01:03:58.200 --> 01:04:04.910
但是一旦这些存根生成了

01:04:01.740 --> 01:04:09.510
模拟加载那些存根并运行

01:04:04.910 --> 01:04:12.270
服务我真正的存根

01:04:09.510 --> 01:04:14.690
有寄存器，所以在这里我们要

01:04:12.270 --> 01:04:18.270
实际上从尤里卡过渡为

01:04:14.690 --> 01:04:21.359
服务注册表及其发现

01:04:18.270 --> 01:04:23.140
给动物园管理员，所以你会得到一点

01:04:21.359 --> 01:04:24.640
你们那天晚上展示的那个

01:04:23.140 --> 01:04:27.160
今天我要和你在一起

01:04:24.640 --> 01:04:32.890
再次很棒，您将在星期四得到更多

01:04:27.160 --> 01:04:36.250
在动物园管理员上，但实际上是存根

01:04:32.890 --> 01:04:41.050
在Zookeeper中注册并

01:04:36.250 --> 01:04:42.870
客户端，当它正常运行时

01:04:41.050 --> 01:04:47.050
只是说嘿，动物园管理员给我一个

01:04:42.870 --> 01:04:48.940
服务X和Zookeeper返回主机

01:04:47.050 --> 01:04:51.250
和存根的端口，然后它使

01:04:48.940 --> 01:04:52.690
它的正常通话，因此非常漂亮

01:04:51.250 --> 01:04:55.180
存根很少整合

01:04:52.690 --> 01:04:58.420
实际在服务中注册

01:04:55.180 --> 01:05:01.360
发现是的，你可以，但是

01:04:58.420 --> 01:05:05.170
动物园cuso4财政捐赠了很多

01:05:01.360 --> 01:05:07.560
我们的动物园管理员代码，所以他们有一些

01:05:05.170 --> 01:05:09.640
已经为动物园管理员建造的东西

01:05:07.560 --> 01:05:12.190
泛化了一点，这可能是

01:05:09.640 --> 01:05:14.740
提供，我认为是的，是的

01:05:12.190 --> 01:05:16.090
他可以使用其他服务

01:05:14.740 --> 01:05:18.340
大概有时间做这个装备

01:05:16.090 --> 01:05:20.770
但是我们得到粉丝，让我们来看看

01:05:18.340 --> 01:05:24.430
五英尺满的肯定如此

01:05:20.770 --> 01:05:25.750
这是acuras DSL I的示例

01:05:24.430 --> 01:05:29.430
不知道我们需要参与其中

01:05:25.750 --> 01:05:32.470
太多，但这在URL foo上说

01:05:29.430 --> 01:05:34.300
与HTTP方法得到这是什么

01:05:32.470 --> 01:05:36.250
响应应该看起来像我

01:05:34.300 --> 01:05:39.040
将要返回的简单值

01:05:36.250 --> 01:05:45.130
这是肉汁，我是不是

01:05:39.040 --> 01:05:49.930
是的，所以春天休息Doc的权利

01:05:45.130 --> 01:05:53.100
他们昨天展示的非常公正

01:05:49.930 --> 01:05:57.610
通用的方式，除了我创建了一个新的

01:05:53.100 --> 01:05:59.770
片段在这里说片段是休息

01:05:57.610 --> 01:06:01.810
是的，所以不仅是他们

01:05:59.770 --> 01:06:03.670
他们是在您运行测试时吗

01:06:01.810 --> 01:06:06.070
生成示例请求和响应

01:06:03.670 --> 01:06:07.990
在这里，您将

01:06:06.070 --> 01:06:09.940
文档，他们会嗅探它， 

01:06:07.990 --> 01:06:11.410
有一种特定的格式

01:06:09.940 --> 01:06:14.140
它必须有权利，所以这很简单

01:06:11.410 --> 01:06:16.660
文字或在这种情况下知道

01:06:14.140 --> 01:06:18.400
一些包裹它是的，所以我创建了

01:06:16.660 --> 01:06:19.870
在这个演示中，称为线的东西

01:06:18.400 --> 01:06:22.750
模仿配音片段，最终可能

01:06:19.870 --> 01:06:25.750
使它更普遍

01:06:22.750 --> 01:06:29.350
可用，然后代替使用

01:06:25.750 --> 01:06:33.190
 DSL您描述这应该看起来

01:06:29.350 --> 01:06:34.930
像这样/ foo是她回来的杰森

01:06:33.190 --> 01:06:35.240
好的，我们将继续

01:06:34.930 --> 01:06:41.570
码头

01:06:35.240 --> 01:06:43.790
是指foo队，哦，是的，这就是

01:06:41.570 --> 01:06:45.950
最终使用任一生成

01:06:43.790 --> 01:06:49.280
这些方法只是为了向您展示

01:06:45.950 --> 01:06:51.830
是模拟模拟期望的格式

01:06:49.280 --> 01:06:54.619
当然你可以写这个

01:06:51.830 --> 01:06:57.040
正确是做到这一点的一种方法

01:06:54.619 --> 01:07:00.500
 JSON右侧的模拟电线浴缸

01:06:57.040 --> 01:07:03.890
每个人都喜欢编辑Jason对吧

01:07:00.500 --> 01:07:06.020
我个人有我这样做的时候我

01:07:03.890 --> 01:07:08.360
我真的很想让其余的码头

01:07:06.020 --> 01:07:11.290
工作，因为我通常喜欢这样

01:07:08.360 --> 01:07:13.910
是的，因为随着您的应用程序的更改

01:07:11.290 --> 01:07:15.830
它会破坏你的测试，你会

01:07:13.910 --> 01:07:17.750
必须去修复它，存根得到

01:07:15.830 --> 01:07:23.300
更新的事情发生在更多

01:07:17.750 --> 01:07:26.660
自动化的时尚，所以这将是

01:07:23.300 --> 01:07:28.610
对Spring MVC来说是正确的，所以/ 

01:07:26.660 --> 01:07:30.650
位置实际上这是一个相当

01:07:28.610 --> 01:07:32.930
使用这个正是您所知道的

01:07:30.650 --> 01:07:36.290
好的，但这只是一个简单的Spring MVC 

01:07:32.930 --> 01:07:38.300
是非常静态的

01:07:36.290 --> 01:07:42.369
很简单，您可以获得一些帖子

01:07:38.300 --> 01:07:44.210
做任何事情都有更多挑战

01:07:42.369 --> 01:07:46.700
是的，更多一些

01:07:44.210 --> 01:07:48.800
像任何事物一样复杂的交互

01:07:46.700 --> 01:07:51.050
保持填充它工作很好

01:07:48.800 --> 01:07:52.970
对于简单的情况还可以，所以您可以

01:07:51.050 --> 01:07:55.940
可能你的航空箱是这样的

01:07:52.970 --> 01:07:57.830
是的，是的，所以这个存根

01:07:55.940 --> 01:08:00.770
来自金融的方向舵会发生什么

01:07:57.830 --> 01:08:04.160
在构建期间，电线模拟盆

01:08:00.770 --> 01:08:06.740
生成后，打包成一个

01:08:04.160 --> 01:08:10.460
我不记得的zip文件或jar文件

01:08:06.740 --> 01:08:12.650
然后发布到连结

01:08:10.460 --> 01:08:15.590
财务内部使用它们

01:08:12.650 --> 01:08:17.569
发布所有存根，以便每个

01:08:15.590 --> 01:08:20.060
所有这些应用程序的使用者

01:08:17.569 --> 01:08:23.950
知道从哪里得到他们的

01:08:20.060 --> 01:08:27.230
存根，以便存根运行器出现， 

01:08:23.950 --> 01:08:29.810
有一个AI将显示给您列表

01:08:27.230 --> 01:08:36.500
通常依赖每个服务

01:08:29.810 --> 01:08:39.589
我们为客户提供服务的方式

01:08:36.500 --> 01:08:42.770
不必事先知道我是什么

01:08:39.589 --> 01:08:45.410
您在运行时才是权利的使用者

01:08:42.770 --> 01:08:46.720
你说我需要联系你知道

01:08:45.410 --> 01:08:49.370
红色服务

01:08:46.720 --> 01:08:52.880
但是要工作，您必须列出

01:08:49.370 --> 01:08:55.700
您对应用程序点的依赖

01:08:52.880 --> 01:08:58.790
属性或伽玛文件说我是

01:08:55.700 --> 01:09:01.760
红色的消费者，使存根

01:08:58.790 --> 01:09:04.880
知道哪些可以将依赖关系切换到

01:09:01.760 --> 01:09:06.590
从关系中得到，然后像我一样

01:09:04.880 --> 01:09:09.110
说它将启动一个有线模拟服务器

01:09:06.590 --> 01:09:12.650
对于每个依赖项，然后注册

01:09:09.110 --> 01:09:20.090
这些服务器在服务发现中

01:09:12.650 --> 01:09:22.070
让我们去看看这确实是

01:09:20.090 --> 01:09:24.620
好，如果我们要使用戴夫笔记本电脑，我们

01:09:22.070 --> 01:09:27.350
不可能做这个演示

01:09:24.620 --> 01:09:34.640
所以一个演示今天将无法正常工作

01:09:27.350 --> 01:09:39.970
我们不能是那是他，所以我

01:09:34.640 --> 01:09:43.070
才有真正的高水平

01:09:39.970 --> 01:09:47.060
简单的应用程序有两个提供程序

01:09:43.070 --> 01:09:50.360
食物提供者和酒吧提供者

01:09:47.060 --> 01:09:51.170
我知道我实际上不能站在那一边

01:09:50.360 --> 01:09:53.740
我只想告诉你

01:09:51.170 --> 01:09:58.640
一个消费者中有两个提供商

01:09:53.740 --> 01:10:02.210
让我向您展示应用程序yamo 

01:09:58.640 --> 01:10:06.950
所以这是foo消费者

01:10:02.210 --> 01:10:10.040
配置哦，抱歉，这是

01:10:06.950 --> 01:10:12.380
这个依赖列表，所以foo消费者

01:10:10.040 --> 01:10:15.290
取决于食物供应商和酒吧

01:10:12.380 --> 01:10:18.800
好的，这是拓扑使用者

01:10:15.290 --> 01:10:22.820
有两个提供商和一些

01:10:18.800 --> 01:10:26.800
存根运行器的配置，如果

01:10:22.820 --> 01:10:30.320
我经营这个人，他实际上已经

01:10:26.800 --> 01:10:34.730
跑步，所以他实际上会跑步

01:10:30.320 --> 01:10:36.440
正在处理的东西，将存根

01:10:34.730 --> 01:10:38.750
以那些foo和bar提供者为基础

01:10:36.440 --> 01:10:41.840
是的，那实际上是什么

01:10:38.750 --> 01:10:44.480
当它开始时正在发生，因为

01:10:41.840 --> 01:10:48.880
基于Java的zookeepers实际上

01:10:44.480 --> 01:10:54.830
启动服务发现提供程序

01:10:48.880 --> 01:10:57.820
开始每个存根，然后开始

01:10:54.830 --> 01:11:00.170
消费者实际的消费者应用

01:10:57.820 --> 01:11:02.600
所以我实际上

01:11:00.170 --> 01:11:07.120
写了嘿，让我们看看波特为什么我

01:11:02.600 --> 01:11:07.120
这里80 81好

01:11:15.239 --> 01:11:21.059
所以我实际上以为会是我

01:11:17.960 --> 01:11:23.880
自己写我写了一个执行器

01:11:21.059 --> 01:11:26.760
表示结果的存根运行器的端点

01:11:23.880 --> 01:11:28.679
嘿，你开始了什么存根，所以我们

01:11:26.760 --> 01:11:32.190
可以看到食物提供者在

01:11:28.679 --> 01:11:33.960
本地主机14等等等等等等

01:11:32.190 --> 01:11:35.519
其他随机端口上的提供程序

01:11:33.960 --> 01:11:38.280
对，所以这给了我一点

01:11:35.519 --> 01:11:47.159
存根的可见性，所以现在我

01:11:38.280 --> 01:11:54.360
可以打我本地的消费者，这些

01:11:47.159 --> 01:11:59.789
值来自其是的存根

01:11:54.360 --> 01:12:05.309
环境触手是的，是的，五遍又一遍

01:11:59.789 --> 01:12:08.849
与其他依赖性消费者

01:12:05.309 --> 01:12:12.690
如果我们想看一下应用程序

01:12:08.849 --> 01:12:16.650
我有单独的消费者服务

01:12:12.690 --> 01:12:20.309
当我打电话给foos时，它就走了

01:12:16.650 --> 01:12:22.110
给食品提供者/酒，所以这是一个

01:12:20.309 --> 01:12:26.070
真正的休息模板调用只

01:12:22.110 --> 01:12:28.949
步骤正确，因此此应用程序是

01:12:26.070 --> 01:12:30.780
完全隔离地运行，包括

01:12:28.949 --> 01:12:33.119
服务提供商和存根

01:12:30.780 --> 01:12:35.610
动态运行，所以这是东西

01:12:33.119 --> 01:12:39.389
如果如果这里的财务人员

01:12:35.610 --> 01:12:46.019
他们愿意与他们合作吗

01:12:39.389 --> 01:12:48.449
这种样式的存根就坐

01:12:46.019 --> 01:12:50.550
通过一些好吧，然后我们

01:12:48.449 --> 01:12:52.320
在最近10分钟内

01:12:50.550 --> 01:12:57.119
基本上其他全部主题

01:12:52.320 --> 01:12:58.920
关于你周围的话题，你知道你是否

01:12:57.119 --> 01:13:02.010
在本地进行更改，您有多快

01:12:58.920 --> 01:13:05.400
它已经部署并付诸行动，以便

01:13:02.010 --> 01:13:07.739
广泛的子子主题很热门

01:13:05.400 --> 01:13:08.820
重新加载和代码交换，然后

01:13:07.739 --> 01:13:12.480
多种不同的方式

01:13:08.820 --> 01:13:15.150
对，所以大多数已经有

01:13:12.480 --> 01:13:18.480
 IDEs，尽管他似乎是IntelliJ 

01:13:15.150 --> 01:13:21.869
找到这个非常困难的jvm热插拔

01:13:18.480 --> 01:13:22.930
自从像Java 1.6 i以来一直是一个功能

01:13:21.869 --> 01:13:25.240
想或者也许正在

01:13:22.930 --> 01:13:26.740
在第六点，我认为这意味着

01:13:25.240 --> 01:13:30.430
改变班级并没有改变

01:13:26.740 --> 01:13:32.860
方法的签名，然后是JVM 

01:13:30.430 --> 01:13:34.180
可以更换它，而IDS将

01:13:32.860 --> 01:13:36.070
开心地为您做，这样您就可以

01:13:34.180 --> 01:13:38.800
继续工作，我全部使用该功能

01:13:36.070 --> 01:13:41.410
时间也是我的意思，这也意味着

01:13:38.800 --> 01:13:43.510
您通常可以重装静态

01:13:41.410 --> 01:13:45.910
您熟悉的HTML样式表资源

01:13:43.510 --> 01:13:47.380
东西我那就是那个

01:13:45.910 --> 01:13:48.730
 IntelliJ用户在使用时遇到麻烦

01:13:47.380 --> 01:13:54.400
剪辑似乎确实有某些原因

01:13:48.730 --> 01:13:56.050
然后确定下一个级别，所以我

01:13:54.400 --> 01:13:59.610
认为我认为菲尔可能在说话

01:13:56.050 --> 01:14:02.050
关于开发工具的更多细节，但我

01:13:59.610 --> 01:14:03.040
昨晚我很简短地提到了

01:14:02.050 --> 01:14:06.460
不确定我们是否有时间

01:14:03.040 --> 01:14:10.900
详细查看一下spring boot 1.3 

01:14:06.460 --> 01:14:13.630
附带了一个新的名为dev的新库

01:14:10.900 --> 01:14:16.300
工具，如果您将其包含在自己的工具中

01:14:13.630 --> 01:14:19.350
它基本上给你一个classpath 

01:14:16.300 --> 01:14:23.410
几个新功能之一是

01:14:19.350 --> 01:14:26.560
它监视类路径，如果

01:14:23.410 --> 01:14:29.080
您现在可以更改班级了

01:14:26.560 --> 01:14:30.730
做正确的事情，所以现在您可以创建

01:14:29.080 --> 01:14:32.020
新课，也可以创建一个新课

01:14:30.730 --> 01:14:34.900
方法，或者您可以更改方法

01:14:32.020 --> 01:14:37.660
签名，然后做任何事情，它将

01:14:34.900 --> 01:14:39.700
一般而言，IDE只是在运行

01:14:37.660 --> 01:14:42.940
重新编译，然后挑战

01:14:39.700 --> 01:14:45.940
是将其投入实时部署

01:14:42.940 --> 01:14:48.190
因此，开发人员工具使用的是

01:14:45.940 --> 01:14:51.100
上课以后的技巧基本上是扔

01:14:48.190 --> 01:14:53.440
离开旧班级，加载新班级， 

01:14:51.100 --> 01:14:55.150
然后实际上重新启动整个春天

01:14:53.440 --> 01:14:58.240
应用程序上下文，这可能听起来

01:14:55.150 --> 01:14:59.950
像做一件大事一样有点

01:14:58.240 --> 01:15:01.480
但事实证明它要快得多

01:14:59.950 --> 01:15:03.400
比您想象的要大

01:15:01.480 --> 01:15:05.740
实例，你知道我是否在跑步

01:15:03.400 --> 01:15:07.780
休眠是休眠，不必

01:15:05.740 --> 01:15:10.150
重新加载它只是应用程序

01:15:07.780 --> 01:15:12.730
上课让冬眠可以保持温暖

01:15:10.150 --> 01:15:14.170
并不需要很长时间重新加载

01:15:12.730 --> 01:15:16.390
那个春天的应用程序上下文

01:15:14.170 --> 01:15:18.610
本身不是很不是资源

01:15:16.390 --> 01:15:21.400
密集的另一件事

01:15:18.610 --> 01:15:23.800
是单次实时重载

01:15:21.400 --> 01:15:26.530
互联网上的东西只是用谷歌搜索

01:15:23.800 --> 01:15:28.420
为此，您获得了一个浏览器插件

01:15:26.530 --> 01:15:30.610
你知道跟这无关

01:15:28.420 --> 01:15:34.720
我们，但您安装了它，然后使用了浏览器

01:15:30.610 --> 01:15:36.400
它所做的是像重新加载一样

01:15:34.720 --> 01:15:38.350
浏览器，所以如果您是

01:15:36.400 --> 01:15:40.870
禁止访问您所访问的网站

01:15:38.350 --> 01:15:43.120
在本地发展基本上

01:15:40.870 --> 01:15:45.100
检测IDE正在检测的更改

01:15:43.120 --> 01:15:46.810
变化，然后广播

01:15:45.100 --> 01:15:48.280
那些到您的浏览器插件，等等

01:15:46.810 --> 01:15:50.469
有一个协议是

01:15:48.280 --> 01:15:53.710
称为实时重新加载，这确实有效

01:15:50.469 --> 01:15:56.500
 SDS支持所有这些东西

01:15:53.710 --> 01:15:58.449
现在相当本地化

01:15:56.500 --> 01:16:00.640
实时重新加载有点麻烦

01:15:58.449 --> 01:16:04.060
要进行设置，您必须单独运行

01:16:00.640 --> 01:16:05.590
边车过程告诉您如何做

01:16:04.060 --> 01:16:08.020
那带来了启动文档

01:16:05.590 --> 01:16:11.590
但是SDS只是做对了，所以您可以

01:16:08.020 --> 01:16:13.000
你的classpath sts上有devtools 

01:16:11.590 --> 01:16:16.989
检测到并完成所有操作

01:16:13.000 --> 01:16:19.690
对您来说下一个层次是弹簧式的

01:16:16.989 --> 01:16:22.060
这是我们构建的Java代理，但是

01:16:19.690 --> 01:16:24.730
不要使用太多的grails使用它

01:16:22.060 --> 01:16:28.480
赶时髦的人使用它，我们向他们展示了

01:16:24.730 --> 01:16:31.780
做瑜伽，他有点翻转

01:16:28.480 --> 01:16:35.080
盖，所以我们还没有全部推开

01:16:31.780 --> 01:16:38.710
难，这是Java代理技术， 

01:16:35.080 --> 01:16:41.440
适用于春季限量课程

01:16:38.710 --> 01:16:42.489
基本上重新加载问题，然后

01:16:41.440 --> 01:16:44.500
你基本上有

01:16:42.489 --> 01:16:45.730
专业标准是j rebel 

01:16:44.500 --> 01:16:47.770
如果你买得起的话

01:16:45.730 --> 01:16:49.810
绝对值得，因为它确实可以节省

01:16:47.770 --> 01:16:51.489
很多时间，如果您正在做很多事情

01:16:49.810 --> 01:16:54.659
关于春天的那些不同的事情

01:16:51.489 --> 01:16:56.560
它知道如何重新加载东西而无需

01:16:54.659 --> 01:16:58.870
开始夫妻开始

01:16:56.560 --> 01:17:00.940
应用上下文再次基本还可以

01:16:58.870 --> 01:17:02.350
所以我们有一些图

01:17:00.940 --> 01:17:04.690
展示其中一些东西如何运作

01:17:02.350 --> 01:17:09.159
在本地工作热装

01:17:04.690 --> 01:17:11.050
进行更改，然后重新启动

01:17:09.159 --> 01:17:13.870
作为开发人员的应用程序上下文

01:17:11.050 --> 01:17:15.520
下一个工具是带有

01:17:13.870 --> 01:17:17.679
浏览器插件，因此浏览器插件

01:17:15.520 --> 01:17:19.750
现在正在听边车， 

01:17:17.679 --> 01:17:22.420
边车推动变革， 

01:17:19.750 --> 01:17:24.250
浏览器通过插件重新加载， 

01:17:22.420 --> 01:17:26.830
那么最后一件事真的很酷

01:17:24.250 --> 01:17:28.480
我真的做了一个演示我们

01:17:26.830 --> 01:17:29.949
没有时间做我的笔记本电脑

01:17:28.480 --> 01:17:31.750
已连接，但我将演示给

01:17:29.949 --> 01:17:33.040
后来有人可能

01:17:31.750 --> 01:17:34.920
明天会更好，因为我

01:17:33.040 --> 01:17:37.390
今天有另外两个演讲

01:17:34.920 --> 01:17:42.310
然后去为他们做准备

01:17:37.390 --> 01:17:48.550
但特别是STS可以让您做到这一点

01:17:42.310 --> 01:17:49.420
与远程调试，所以这直播

01:17:48.550 --> 01:17:52.150
这个

01:17:49.420 --> 01:17:56.260
辅助应用程序的客户端应用程序

01:17:52.150 --> 01:17:58.540
实时重新加载也可以充当隧道

01:17:56.260 --> 01:18:01.239
远程调试器，因此您可以拥有一个

01:17:58.540 --> 01:18:03.070
您设置的Cloud Foundry中运行的流程

01:18:01.239 --> 01:18:06.190
其中的断点和您的本地代码

01:18:03.070 --> 01:18:08.230
您远程击中了无服务

01:18:06.190 --> 01:18:10.060
实际上打破了这很慢

01:18:08.230 --> 01:18:12.310
远程调试，所以这是最后的手段

01:18:10.060 --> 01:18:17.350
但实际上很容易设置

01:18:12.310 --> 01:18:18.640
 SCS的下一项权利实际上是

01:18:17.350 --> 01:18:20.500
这个话题结束了，然后我们就

01:18:18.640 --> 01:18:24.850
想要在末尾说几句话

01:18:20.500 --> 01:18:28.510
我们如何作为开发人员

01:18:24.850 --> 01:18:31.000
与应用程序进行某种交互

01:18:28.510 --> 01:18:33.820
生命周期，这就是AL所在的位置

01:18:31.000 --> 01:18:37.770
高层管理，有些你知道一些

01:18:33.820 --> 01:18:40.360
基本上为此而生的本机消息

01:18:37.770 --> 01:18:41.590
所以这个临时部署和混合

01:18:40.360 --> 01:18:43.420
我一直在谈论的本地遥控器

01:18:41.590 --> 01:18:46.320
关于我喜欢它作为开发时间

01:18:43.420 --> 01:18:50.170
东西，但它也总是会

01:18:46.320 --> 01:18:52.000
钩总是更好

01:18:50.170 --> 01:18:54.429
进入某种自动化管道

01:18:52.000 --> 01:18:58.239
你向下游走得更远

01:18:54.429 --> 01:18:59.770
生产系统的工具

01:18:58.239 --> 01:19:02.290
总是警告几句话

01:18:59.770 --> 01:19:03.910
使它们始终处于下游

01:19:02.290 --> 01:19:06.520
使它成为我处理过程的一部分

01:19:03.910 --> 01:19:08.710
会说下一个被我烧死

01:19:06.520 --> 01:19:10.270
待在你可以看到的附近

01:19:08.710 --> 01:19:11.920
生产平台不要尝试

01:19:10.270 --> 01:19:15.190
与集成测试和

01:19:11.920 --> 01:19:16.750
您认为的所有内容

01:19:15.190 --> 01:19:18.910
生产系统，不是不值得

01:19:16.750 --> 01:19:21.190
因为你特别知道

01:19:18.910 --> 01:19:22.480
例如电池便宜

01:19:21.190 --> 01:19:24.489
创建一个新的环境，为什么你会

01:19:22.480 --> 01:19:27.640
做其他事情，你知道

01:19:24.489 --> 01:19:29.230
根本不重新部署所有内容

01:19:27.640 --> 01:19:31.350
进行每一次更改，因为您将

01:19:29.230 --> 01:19:34.060
我不可能的那一点

01:19:31.350 --> 01:19:36.160
认为我们将不得不不得不

01:19:34.060 --> 01:19:38.050
所以你会如何处理我的请求

01:19:36.160 --> 01:19:40.270
将与做一些演示

01:19:38.050 --> 01:19:42.130
跟踪端点，我可以显示跟踪

01:19:40.270 --> 01:19:46.929
我有的端点可能也一样

01:19:42.130 --> 01:19:48.550
表明你很快就去了，所以这些

01:19:46.929 --> 01:19:52.960
那不是很好吗，但是

01:19:48.550 --> 01:19:55.230
这是我的最后一个请求22 / 

01:19:52.960 --> 01:19:58.000
请求头响应头

01:19:55.230 --> 01:20:00.610
状态等等，是的，我发现

01:19:58.000 --> 01:20:02.500
与Zulu代理一起对他们有用

01:20:00.610 --> 01:20:07.000
好吧，如果你在做

01:20:02.500 --> 01:20:08.860
 api网关专利，您可以看到

01:20:07.000 --> 01:20:10.330
首先请求，然后您可以看到

01:20:08.860 --> 01:20:14.500
代理请求以及这是非常

01:20:10.330 --> 01:20:17.560
坚强还可以，终于终于有了

01:20:14.500 --> 01:20:19.150
下一个你如何获得我们中间

01:20:17.560 --> 01:20:24.670
准备好要测试什么

01:20:19.150 --> 01:20:26.800
在当地很痛苦，所以我不得不

01:20:24.670 --> 01:20:29.290
知道每次都想重置状态

01:20:26.800 --> 01:20:31.410
进行一系列测试，以便

01:20:29.290 --> 01:20:34.840
这些天我经常使用的东西是dhaka 

01:20:31.410 --> 01:20:36.250
博士de Campos绝对完美

01:20:34.840 --> 01:20:39.040
因为你可以吹走留下

01:20:36.250 --> 01:20:45.130
然后从头开始好

01:20:39.040 --> 01:20:47.620
很好，那你怎么发现和做

01:20:45.130 --> 01:20:49.960
 di在中间件上，那是另一个

01:20:47.620 --> 01:20:52.420
关于12要素的事情使之成为

01:20:49.960 --> 01:20:54.160
无论您走到哪里都一样，一种方法

01:20:52.420 --> 01:20:56.500
如果您弹起云连接器

01:20:54.160 --> 01:20:58.300
有点我实际上不是使用的忠实粉丝

01:20:56.500 --> 01:21:00.010
他们的一切，但我可​​以谈论

01:20:58.300 --> 01:21:01.750
如果有人的话，更多细节

01:21:00.010 --> 01:21:03.210
感兴趣，然后我认为那是

01:21:01.750 --> 01:21:06.250
最终结局不是最后一面

01:21:03.210 --> 01:21:07.810
是的，好吧，不同的方式

01:21:06.250 --> 01:21:10.510
供应，所以每个人都有

01:21:07.810 --> 01:21:12.700
最喜欢的博士我认为很棒

01:21:10.510 --> 01:21:14.530
对于中间件来说很棒，因为您

01:21:12.700 --> 01:21:15.880
可以吹走其他所有东西

01:21:14.530 --> 01:21:18.550
人们在其他地方使用

01:21:15.880 --> 01:21:23.170
 VirtualBox每个人，是的，是的，我的

01:21:18.550 --> 01:21:26.680
这里的同事还有我的温柔

01:21:23.170 --> 01:21:28.930
 VirtualBox配置如此运行

01:21:26.680 --> 01:21:31.360
他们与阿格隆，你可以做基于

01:21:28.930 --> 01:21:32.770
 VirtualBox在本地，很多

01:21:31.360 --> 01:21:34.090
现在也可以使用不同的远程系统

01:21:32.770 --> 01:21:36.040
计数，所以流浪者也很好

01:21:34.090 --> 01:21:38.830
实际上可以开始做很多工作

01:21:36.040 --> 01:21:41.290
是的，现在是AWS，因为这些

01:21:38.830 --> 01:21:42.670
文件不好，如此不同

01:21:41.290 --> 01:21:43.990
有不同的方法， 

01:21:42.670 --> 01:21:45.400
然后最后只是觉得刚刚得到

01:21:43.990 --> 01:21:48.640
最后一些链接，因为我们确实有

01:21:45.400 --> 01:21:50.380
完成，所以如果有人想跟随

01:21:48.640 --> 01:21:51.400
来问问我要去

01:21:50.380 --> 01:21:53.290
消失，因为我真的要

01:21:51.400 --> 01:21:55.570
现在为另一个做准备

01:21:53.290 --> 01:21:57.460
演示文稿斯宾塞将在这里我们

01:21:55.570 --> 01:21:59.050
整个星期都在这里，所以进来吧

01:21:57.460 --> 01:22:00.970
在塞子上谈论这些

01:21:59.050 --> 01:22:02.910
事情很多，你可以告诉他的工作

01:22:00.970 --> 01:22:05.080
在进行中，我们正在努力思考

01:22:02.910 --> 01:22:06.610
我们正在努力发展，我们将

01:22:05.080 --> 01:22:10.470
开始推动工具

01:22:06.610 --> 01:22:13.210
从现在开始的方向基本上是这样

01:22:10.470 --> 01:22:14.830
如果您有意见，如果您知道

01:22:13.210 --> 01:22:15.810
有一些战斗故事，而且肯定

01:22:14.830 --> 01:22:17.910
我们绝对喜欢听到

01:22:15.810 --> 01:22:21.410
也非常感谢

01:22:17.910 --> 01:22:21.410
每个人都必须很快见到你

01:22:29.020 --> 01:22:31.080
您

