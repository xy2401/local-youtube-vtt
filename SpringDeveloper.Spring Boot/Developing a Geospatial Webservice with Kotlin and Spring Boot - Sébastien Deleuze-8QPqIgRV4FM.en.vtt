WEBVTT
Kind: captions
Language: en

00:00:10.050 --> 00:00:13.380 align:start position:0%
 
welcome<00:00:11.050><c> everybody</c><00:00:11.500><c> today</c><00:00:12.490><c> we</c><00:00:12.910><c> are</c><00:00:13.000><c> going</c><00:00:13.240><c> to</c>

00:00:13.380 --> 00:00:13.390 align:start position:0%
welcome everybody today we are going to
 

00:00:13.390 --> 00:00:15.780 align:start position:0%
welcome everybody today we are going to
see<00:00:13.600><c> how</c><00:00:13.780><c> to</c><00:00:13.810><c> develop</c><00:00:14.350><c> your</c><00:00:14.770><c> special</c><00:00:15.250><c> web</c>

00:00:15.780 --> 00:00:15.790 align:start position:0%
see how to develop your special web
 

00:00:15.790 --> 00:00:19.410 align:start position:0%
see how to develop your special web
service<00:00:16.150><c> with</c><00:00:16.360><c> Kalinin</c><00:00:16.780><c> Springwood</c><00:00:18.420><c> first</c>

00:00:19.410 --> 00:00:19.420 align:start position:0%
service with Kalinin Springwood first
 

00:00:19.420 --> 00:00:20.910 align:start position:0%
service with Kalinin Springwood first
let<00:00:19.660><c> me</c><00:00:19.690><c> to</c><00:00:19.960><c> quickly</c><00:00:20.140><c> introduce</c><00:00:20.560><c> myself</c>

00:00:20.910 --> 00:00:20.920 align:start position:0%
let me to quickly introduce myself
 

00:00:20.920 --> 00:00:23.760 align:start position:0%
let me to quickly introduce myself
myself<00:00:21.250><c> so</c><00:00:21.700><c> i'm</c><00:00:21.850><c> sebastian</c><00:00:22.119><c> de</c><00:00:22.390><c> ros</c><00:00:22.540><c> i</c><00:00:22.840><c> live</c><00:00:23.650><c> in</c>

00:00:23.760 --> 00:00:23.770 align:start position:0%
myself so i'm sebastian de ros i live in
 

00:00:23.770 --> 00:00:26.370 align:start position:0%
myself so i'm sebastian de ros i live in
new<00:00:23.920><c> in</c><00:00:24.070><c> france</c><00:00:24.369><c> like</c><00:00:24.730><c> you</c><00:00:24.970><c> can</c><00:00:25.180><c> hear</c><00:00:25.600><c> with</c><00:00:26.350><c> my</c>

00:00:26.370 --> 00:00:26.380 align:start position:0%
new in france like you can hear with my
 

00:00:26.380 --> 00:00:29.550 align:start position:0%
new in france like you can hear with my
accent<00:00:26.860><c> i</c><00:00:27.130><c> work</c><00:00:27.970><c> at</c><00:00:28.090><c> pivot</c><00:00:28.390><c> era</c><00:00:28.600><c> many</c><00:00:29.350><c> on</c>

00:00:29.550 --> 00:00:29.560 align:start position:0%
accent i work at pivot era many on
 

00:00:29.560 --> 00:00:32.460 align:start position:0%
accent i work at pivot era many on
spring<00:00:29.860><c> farm</c><00:00:30.100><c> work</c><00:00:30.250><c> and</c><00:00:30.520><c> on</c><00:00:30.850><c> rector</c><00:00:31.330><c> my</c><00:00:32.020><c> actual</c>

00:00:32.460 --> 00:00:32.470 align:start position:0%
spring farm work and on rector my actual
 

00:00:32.470 --> 00:00:35.490 align:start position:0%
spring farm work and on rector my actual
focusing<00:00:33.040><c> is</c><00:00:33.250><c> on</c><00:00:33.520><c> the</c><00:00:33.730><c> reactive</c><00:00:34.540><c> supports</c><00:00:35.140><c> in</c>

00:00:35.490 --> 00:00:35.500 align:start position:0%
focusing is on the reactive supports in
 

00:00:35.500 --> 00:00:38.880 align:start position:0%
focusing is on the reactive supports in
Spring<00:00:36.129><c> Framework</c><00:00:36.250><c> 5</c><00:00:36.670><c> I'm</c><00:00:37.330><c> a</c><00:00:37.840><c> co-worker</c><00:00:38.320><c> at</c><00:00:38.830><c> a</c>

00:00:38.880 --> 00:00:38.890 align:start position:0%
Spring Framework 5 I'm a co-worker at a
 

00:00:38.890 --> 00:00:40.950 align:start position:0%
Spring Framework 5 I'm a co-worker at a
co-working<00:00:39.430><c> space</c><00:00:39.790><c> called</c><00:00:40.090><c> La</c><00:00:40.180><c> Cote</c><00:00:40.420><c> and</c><00:00:40.720><c> I'm</c>

00:00:40.950 --> 00:00:40.960 align:start position:0%
co-working space called La Cote and I'm
 

00:00:40.960 --> 00:00:43.079 align:start position:0%
co-working space called La Cote and I'm
also<00:00:41.170><c> a</c><00:00:41.620><c> staff</c><00:00:42.010><c> member</c><00:00:42.190><c> of</c><00:00:42.370><c> MIT's</c><00:00:42.970><c> it</c>

00:00:43.079 --> 00:00:43.089 align:start position:0%
also a staff member of MIT's it
 

00:00:43.089 --> 00:00:45.479 align:start position:0%
also a staff member of MIT's it
conference<00:00:43.449><c> which</c><00:00:44.290><c> is</c><00:00:44.320><c> a</c><00:00:44.589><c> conference</c><00:00:45.070><c> that's</c>

00:00:45.479 --> 00:00:45.489 align:start position:0%
conference which is a conference that's
 

00:00:45.489 --> 00:00:50.460 align:start position:0%
conference which is a conference that's
open<00:00:45.879><c> in</c><00:00:46.000><c> France</c><00:00:48.150><c> so</c><00:00:49.150><c> we</c><00:00:50.110><c> are</c><00:00:50.199><c> going</c><00:00:50.350><c> to</c>

00:00:50.460 --> 00:00:50.470 align:start position:0%
open in France so we are going to
 

00:00:50.470 --> 00:00:54.149 align:start position:0%
open in France so we are going to
introduce<00:00:50.830><c> :</c><00:00:51.430><c> before</c><00:00:51.879><c> to</c><00:00:52.269><c> go</c><00:00:53.199><c> deeper</c><00:00:53.589><c> into</c><00:00:53.949><c> the</c>

00:00:54.149 --> 00:00:54.159 align:start position:0%
introduce : before to go deeper into the
 

00:00:54.159 --> 00:00:57.000 align:start position:0%
introduce : before to go deeper into the
details<00:00:54.309><c> of</c><00:00:54.640><c> the</c><00:00:54.790><c> application</c><00:00:54.879><c> that</c><00:00:55.860><c> that</c><00:00:56.860><c> we</c>

00:00:57.000 --> 00:00:57.010 align:start position:0%
details of the application that that we
 

00:00:57.010 --> 00:01:00.119 align:start position:0%
details of the application that that we
are<00:00:57.100><c> going</c><00:00:57.280><c> to</c><00:00:57.489><c> see</c><00:00:57.900><c> so</c><00:00:58.900><c> the</c><00:00:59.199><c> first</c><00:00:59.650><c> question</c><00:00:59.769><c> I</c>

00:01:00.119 --> 00:01:00.129 align:start position:0%
are going to see so the first question I
 

00:01:00.129 --> 00:01:02.729 align:start position:0%
are going to see so the first question I
would<00:01:00.280><c> like</c><00:01:00.370><c> to</c><00:01:00.580><c> ask</c><00:01:00.760><c> is</c><00:01:01.000><c> why</c><00:01:01.299><c> why</c><00:01:01.900><c> choosing</c><00:01:02.170><c> :</c>

00:01:02.729 --> 00:01:02.739 align:start position:0%
would like to ask is why why choosing :
 

00:01:02.739 --> 00:01:06.480 align:start position:0%
would like to ask is why why choosing :
there<00:01:03.010><c> is</c><00:01:03.129><c> other</c><00:01:03.970><c> languages</c><00:01:04.510><c> Serizawa</c><00:01:05.229><c> so</c><00:01:05.710><c> why</c>

00:01:06.480 --> 00:01:06.490 align:start position:0%
there is other languages Serizawa so why
 

00:01:06.490 --> 00:01:10.170 align:start position:0%
there is other languages Serizawa so why
should<00:01:06.729><c> we</c><00:01:06.880><c> use</c><00:01:06.909><c> cutting</c><00:01:07.450><c> I</c><00:01:08.820><c> think</c><00:01:09.820><c> the</c><00:01:09.940><c> main</c>

00:01:10.170 --> 00:01:10.180 align:start position:0%
should we use cutting I think the main
 

00:01:10.180 --> 00:01:13.590 align:start position:0%
should we use cutting I think the main
driver<00:01:10.510><c> is</c><00:01:11.190><c> to</c><00:01:12.190><c> overcome</c><00:01:12.490><c> the</c><00:01:12.850><c> limits</c><00:01:13.120><c> of</c><00:01:13.240><c> Java</c>

00:01:13.590 --> 00:01:13.600 align:start position:0%
driver is to overcome the limits of Java
 

00:01:13.600 --> 00:01:17.130 align:start position:0%
driver is to overcome the limits of Java
I<00:01:13.780><c> mean</c><00:01:14.770><c> srevice</c><00:01:15.159><c> great</c><00:01:15.490><c> we</c><00:01:15.850><c> all</c><00:01:16.090><c> know</c><00:01:16.420><c> it</c><00:01:16.570><c> very</c>

00:01:17.130 --> 00:01:17.140 align:start position:0%
I mean srevice great we all know it very
 

00:01:17.140 --> 00:01:17.609 align:start position:0%
I mean srevice great we all know it very
well

00:01:17.609 --> 00:01:17.619 align:start position:0%
well
 

00:01:17.619 --> 00:01:20.010 align:start position:0%
well
I<00:01:17.649><c> use</c><00:01:18.340><c> it</c><00:01:18.549><c> every</c><00:01:18.700><c> day</c><00:01:19.000><c> to</c><00:01:19.060><c> develop</c><00:01:19.479><c> spinning</c>

00:01:20.010 --> 00:01:20.020 align:start position:0%
I use it every day to develop spinning
 

00:01:20.020 --> 00:01:21.990 align:start position:0%
I use it every day to develop spinning
reactor<00:01:20.380><c> and</c><00:01:20.619><c> a</c><00:01:20.710><c> lot</c><00:01:20.829><c> of</c><00:01:20.860><c> projects</c><00:01:21.610><c> in</c><00:01:21.789><c> in</c>

00:01:21.990 --> 00:01:22.000 align:start position:0%
reactor and a lot of projects in in
 

00:01:22.000 --> 00:01:25.279 align:start position:0%
reactor and a lot of projects in in
pivotal<00:01:22.390><c> but</c><00:01:23.200><c> to</c><00:01:24.070><c> develop</c><00:01:24.250><c> application</c>

00:01:25.279 --> 00:01:25.289 align:start position:0%
pivotal but to develop application
 

00:01:25.289 --> 00:01:28.649 align:start position:0%
pivotal but to develop application
service<00:01:26.289><c> some</c><00:01:26.469><c> limits</c><00:01:26.740><c> its</c><00:01:27.520><c> verbose</c><00:01:27.939><c> it</c><00:01:28.390><c> has</c>

00:01:28.649 --> 00:01:28.659 align:start position:0%
service some limits its verbose it has
 

00:01:28.659 --> 00:01:31.319 align:start position:0%
service some limits its verbose it has
limited<00:01:29.280><c> typing</c><00:01:30.280><c> friends</c><00:01:30.640><c> no</c><00:01:30.820><c> properties</c>

00:01:31.319 --> 00:01:31.329 align:start position:0%
limited typing friends no properties
 

00:01:31.329 --> 00:01:34.679 align:start position:0%
limited typing friends no properties
checked<00:01:32.079><c> exceptions</c><00:01:33.119><c> issues</c><00:01:34.119><c> with</c><00:01:34.359><c> null</c>

00:01:34.679 --> 00:01:34.689 align:start position:0%
checked exceptions issues with null
 

00:01:34.689 --> 00:01:37.260 align:start position:0%
checked exceptions issues with null
pointer<00:01:34.960><c> exception</c><00:01:35.409><c> the</c><00:01:36.340><c> extensibility</c><00:01:36.820><c> is</c>

00:01:37.260 --> 00:01:37.270 align:start position:0%
pointer exception the extensibility is
 

00:01:37.270 --> 00:01:42.149 align:start position:0%
pointer exception the extensibility is
quite<00:01:38.460><c> quite</c><00:01:39.460><c> limited</c><00:01:40.060><c> if</c><00:01:40.450><c> we</c><00:01:40.600><c> compare</c><00:01:41.159><c> Java</c>

00:01:42.149 --> 00:01:42.159 align:start position:0%
quite quite limited if we compare Java
 

00:01:42.159 --> 00:01:44.580 align:start position:0%
quite quite limited if we compare Java
to<00:01:42.429><c> the</c><00:01:42.490><c> language</c><00:01:43.390><c> like</c><00:01:43.630><c> Ruby</c><00:01:43.810><c> for</c><00:01:44.140><c> example</c>

00:01:44.580 --> 00:01:44.590 align:start position:0%
to the language like Ruby for example
 

00:01:44.590 --> 00:01:46.889 align:start position:0%
to the language like Ruby for example
where<00:01:44.829><c> we</c><00:01:45.340><c> have</c><00:01:45.460><c> a</c><00:01:45.490><c> pure</c><00:01:46.000><c> full</c><00:01:46.329><c> extension</c>

00:01:46.889 --> 00:01:46.899 align:start position:0%
where we have a pure full extension
 

00:01:46.899 --> 00:01:50.660 align:start position:0%
where we have a pure full extension
model<00:01:47.399><c> there</c><00:01:48.399><c> is</c><00:01:48.429><c> some</c><00:01:49.420><c> issue</c><00:01:49.600><c> there</c>

00:01:50.660 --> 00:01:50.670 align:start position:0%
model there is some issue there
 

00:01:50.670 --> 00:01:53.249 align:start position:0%
model there is some issue there
semicolon<00:01:51.670><c> and</c><00:01:51.820><c> the</c><00:01:52.060><c> end</c><00:01:52.570><c> of</c><00:01:52.659><c> the</c><00:01:52.810><c> lines</c><00:01:52.960><c> are</c>

00:01:53.249 --> 00:01:53.259 align:start position:0%
semicolon and the end of the lines are
 

00:01:53.259 --> 00:01:55.289 align:start position:0%
semicolon and the end of the lines are
just<00:01:53.350><c> too</c><00:01:53.499><c> detailed</c><00:01:53.770><c> but</c><00:01:54.009><c> that</c><00:01:54.850><c> that</c><00:01:55.090><c> good</c>

00:01:55.289 --> 00:01:55.299 align:start position:0%
just too detailed but that that good
 

00:01:55.299 --> 00:01:59.310 align:start position:0%
just too detailed but that that good
matters<00:01:56.189><c> Java</c><00:01:57.189><c> is</c><00:01:57.369><c> quite</c><00:01:57.640><c> simple</c><00:01:58.179><c> but</c><00:01:58.359><c> there</c>

00:01:59.310 --> 00:01:59.320 align:start position:0%
matters Java is quite simple but there
 

00:01:59.320 --> 00:02:03.029 align:start position:0%
matters Java is quite simple but there
is<00:01:59.439><c> also</c><00:01:59.590><c> multiple</c><00:02:00.189><c> Java</c><00:02:00.369><c> Paseos</c><00:02:01.920><c> Java</c><00:02:02.920><c> has</c><00:02:02.979><c> a</c>

00:02:03.029 --> 00:02:03.039 align:start position:0%
is also multiple Java Paseos Java has a
 

00:02:03.039 --> 00:02:06.660 align:start position:0%
is also multiple Java Paseos Java has a
long<00:02:03.249><c> history</c><00:02:03.280><c> and</c><00:02:04.049><c> there</c><00:02:05.049><c> is</c><00:02:05.200><c> a</c><00:02:05.369><c> some</c><00:02:06.369><c> trap</c>

00:02:06.660 --> 00:02:06.670 align:start position:0%
long history and there is a some trap
 

00:02:06.670 --> 00:02:10.290 align:start position:0%
long history and there is a some trap
that<00:02:07.060><c> come</c><00:02:07.329><c> from</c><00:02:07.869><c> this</c><00:02:08.140><c> long</c><00:02:08.440><c> history</c><00:02:08.740><c> and</c><00:02:09.700><c> I</c>

00:02:10.290 --> 00:02:10.300 align:start position:0%
that come from this long history and I
 

00:02:10.300 --> 00:02:12.180 align:start position:0%
that come from this long history and I
really<00:02:10.810><c> think</c><00:02:11.050><c> that</c><00:02:11.200><c> we</c><00:02:11.350><c> deserve</c><00:02:11.530><c> a</c><00:02:11.980><c> better</c>

00:02:12.180 --> 00:02:12.190 align:start position:0%
really think that we deserve a better
 

00:02:12.190 --> 00:02:14.430 align:start position:0%
really think that we deserve a better
solution<00:02:12.610><c> that</c><00:02:13.000><c> Lombok</c><00:02:13.390><c> I</c><00:02:13.720><c> don't</c><00:02:14.170><c> know</c><00:02:14.260><c> if</c><00:02:14.350><c> you</c>

00:02:14.430 --> 00:02:14.440 align:start position:0%
solution that Lombok I don't know if you
 

00:02:14.440 --> 00:02:16.500 align:start position:0%
solution that Lombok I don't know if you
Nuremberg<00:02:14.920><c> but</c><00:02:14.950><c> that's</c><00:02:15.310><c> that's</c><00:02:16.270><c> some</c>

00:02:16.500 --> 00:02:16.510 align:start position:0%
Nuremberg but that's that's some
 

00:02:16.510 --> 00:02:19.350 align:start position:0%
Nuremberg but that's that's some
annotations<00:02:17.170><c> and</c><00:02:17.440><c> some</c><00:02:17.890><c> Alpers</c><00:02:18.280><c> to</c><00:02:18.610><c> be</c><00:02:19.240><c> able</c>

00:02:19.350 --> 00:02:19.360 align:start position:0%
annotations and some Alpers to be able
 

00:02:19.360 --> 00:02:21.780 align:start position:0%
annotations and some Alpers to be able
to<00:02:19.660><c> write</c><00:02:19.840><c> shorter</c><00:02:20.350><c> Java</c><00:02:20.650><c> code</c><00:02:20.860><c> and</c><00:02:21.040><c> that's</c>

00:02:21.780 --> 00:02:21.790 align:start position:0%
to write shorter Java code and that's
 

00:02:21.790 --> 00:02:23.100 align:start position:0%
to write shorter Java code and that's
nice<00:02:22.120><c> but</c>

00:02:23.100 --> 00:02:23.110 align:start position:0%
nice but
 

00:02:23.110 --> 00:02:25.260 align:start position:0%
nice but
that's<00:02:23.410><c> still</c><00:02:23.770><c> a</c><00:02:23.800><c> trick</c><00:02:24.100><c> and</c><00:02:24.430><c> I</c><00:02:24.460><c> think</c><00:02:25.060><c> we</c><00:02:25.240><c> just</c>

00:02:25.260 --> 00:02:25.270 align:start position:0%
that's still a trick and I think we just
 

00:02:25.270 --> 00:02:29.280 align:start position:0%
that's still a trick and I think we just
have<00:02:25.630><c> a</c><00:02:25.660><c> better</c><00:02:25.870><c> a</c><00:02:26.260><c> better</c><00:02:26.560><c> solution</c><00:02:28.050><c> at</c><00:02:29.050><c> the</c>

00:02:29.280 --> 00:02:29.290 align:start position:0%
have a better a better solution at the
 

00:02:29.290 --> 00:02:32.220 align:start position:0%
have a better a better solution at the
same<00:02:29.500><c> time</c><00:02:29.790><c> we</c><00:02:30.790><c> want</c><00:02:31.240><c> to</c><00:02:31.360><c> keep</c><00:02:31.540><c> what</c><00:02:31.870><c> makes</c><00:02:32.110><c> a</c>

00:02:32.220 --> 00:02:32.230 align:start position:0%
same time we want to keep what makes a
 

00:02:32.230 --> 00:02:35.730 align:start position:0%
same time we want to keep what makes a
great<00:02:32.730><c> service</c><00:02:33.730><c> fast</c><00:02:34.000><c> it</c><00:02:34.420><c> produced</c><00:02:34.960><c> optimized</c>

00:02:35.730 --> 00:02:35.740 align:start position:0%
great service fast it produced optimized
 

00:02:35.740 --> 00:02:38.580 align:start position:0%
great service fast it produced optimized
bed<00:02:35.920><c> code</c><00:02:36.160><c> it</c><00:02:36.940><c> has</c><00:02:37.210><c> a</c><00:02:37.240><c> static</c><00:02:37.840><c> typing</c><00:02:38.170><c> that</c>

00:02:38.580 --> 00:02:38.590 align:start position:0%
bed code it has a static typing that
 

00:02:38.590 --> 00:02:40.590 align:start position:0%
bed code it has a static typing that
allow<00:02:38.860><c> us</c><00:02:39.070><c> to</c><00:02:39.310><c> have</c><00:02:39.460><c> a</c><00:02:39.490><c> nice</c><00:02:39.820><c> autocomplete</c><00:02:40.450><c> in</c>

00:02:40.590 --> 00:02:40.600 align:start position:0%
allow us to have a nice autocomplete in
 

00:02:40.600 --> 00:02:44.670 align:start position:0%
allow us to have a nice autocomplete in
the<00:02:40.750><c> IDE</c><00:02:40.990><c> to</c><00:02:42.390><c> be</c><00:02:43.390><c> able</c><00:02:43.540><c> to</c><00:02:43.900><c> do</c><00:02:44.050><c> a</c><00:02:44.080><c> lot</c><00:02:44.260><c> of</c><00:02:44.410><c> checks</c>

00:02:44.670 --> 00:02:44.680 align:start position:0%
the IDE to be able to do a lot of checks
 

00:02:44.680 --> 00:02:47.190 align:start position:0%
the IDE to be able to do a lot of checks
during<00:02:45.340><c> the</c><00:02:45.460><c> compilation</c><00:02:46.050><c> especially</c><00:02:47.050><c> for</c>

00:02:47.190 --> 00:02:47.200 align:start position:0%
during the compilation especially for
 

00:02:47.200 --> 00:02:49.680 align:start position:0%
during the compilation especially for
big<00:02:47.410><c> projects</c><00:02:47.800><c> that</c><00:02:48.010><c> very</c><00:02:48.250><c> important</c><00:02:48.700><c> it's</c>

00:02:49.680 --> 00:02:49.690 align:start position:0%
big projects that very important it's
 

00:02:49.690 --> 00:02:51.780 align:start position:0%
big projects that very important it's
quite<00:02:49.960><c> simple</c><00:02:50.290><c> to</c><00:02:50.350><c> learn</c><00:02:50.590><c> and</c><00:02:50.740><c> it</c><00:02:51.400><c> has</c><00:02:51.610><c> an</c>

00:02:51.780 --> 00:02:51.790 align:start position:0%
quite simple to learn and it has an
 

00:02:51.790 --> 00:02:54.870 align:start position:0%
quite simple to learn and it has an
amazing<00:02:52.090><c> ecosystem</c><00:02:52.390><c> and</c><00:02:53.050><c> in</c><00:02:53.620><c> spring</c><00:02:53.920><c> we</c><00:02:54.730><c> are</c>

00:02:54.870 --> 00:02:54.880 align:start position:0%
amazing ecosystem and in spring we are
 

00:02:54.880 --> 00:02:57.060 align:start position:0%
amazing ecosystem and in spring we are
in<00:02:55.150><c> the</c><00:02:55.300><c> second</c><00:02:55.570><c> system</c><00:02:55.840><c> so</c><00:02:56.140><c> we</c><00:02:56.320><c> want</c><00:02:56.770><c> to</c><00:02:56.890><c> keep</c>

00:02:57.060 --> 00:02:57.070 align:start position:0%
in the second system so we want to keep
 

00:02:57.070 --> 00:03:02.130 align:start position:0%
in the second system so we want to keep
that<00:02:59.550><c> so</c><00:03:00.550><c> I</c><00:03:00.580><c> have</c><00:03:00.940><c> tried</c><00:03:01.120><c> to</c><00:03:01.180><c> summarize</c><00:03:01.780><c> there</c>

00:03:02.130 --> 00:03:02.140 align:start position:0%
that so I have tried to summarize there
 

00:03:02.140 --> 00:03:07.410 align:start position:0%
that so I have tried to summarize there
what<00:03:02.890><c> I</c><00:03:03.459><c> think</c><00:03:04.180><c> has</c><00:03:04.360><c> a</c><00:03:04.390><c> key</c><00:03:04.660><c> point</c><00:03:04.900><c> of</c><00:03:05.080><c> of</c><00:03:05.650><c> :</c><00:03:06.459><c> so</c>

00:03:07.410 --> 00:03:07.420 align:start position:0%
what I think has a key point of of : so
 

00:03:07.420 --> 00:03:09.300 align:start position:0%
what I think has a key point of of : so
to<00:03:07.959><c> me</c><00:03:08.080><c> Kathleen</c><00:03:08.500><c> is</c><00:03:08.650><c> an</c><00:03:08.770><c> elegant</c><00:03:09.190><c> and</c>

00:03:09.300 --> 00:03:09.310 align:start position:0%
to me Kathleen is an elegant and
 

00:03:09.310 --> 00:03:11.880 align:start position:0%
to me Kathleen is an elegant and
pragmatic<00:03:09.850><c> language</c><00:03:10.140><c> that</c><00:03:11.140><c> allowed</c><00:03:11.500><c> to</c><00:03:11.709><c> write</c>

00:03:11.880 --> 00:03:11.890 align:start position:0%
pragmatic language that allowed to write
 

00:03:11.890 --> 00:03:15.870 align:start position:0%
pragmatic language that allowed to write
concise<00:03:12.310><c> code</c><00:03:12.550><c> and</c><00:03:12.820><c> to</c><00:03:13.300><c> to</c><00:03:14.110><c> write</c><00:03:14.320><c> faster</c><00:03:14.880><c> your</c>

00:03:15.870 --> 00:03:15.880 align:start position:0%
concise code and to to write faster your
 

00:03:15.880 --> 00:03:18.930 align:start position:0%
concise code and to to write faster your
application<00:03:16.470><c> there</c><00:03:17.470><c> is</c><00:03:17.500><c> a</c><00:03:17.590><c> big</c><00:03:17.770><c> focus</c><00:03:17.950><c> on</c>

00:03:18.930 --> 00:03:18.940 align:start position:0%
application there is a big focus on
 

00:03:18.940 --> 00:03:22.080 align:start position:0%
application there is a big focus on
making<00:03:19.209><c> content</c><00:03:19.930><c> easy</c><00:03:20.200><c> to</c><00:03:20.440><c> read</c><00:03:20.700><c> we</c><00:03:21.700><c> will</c><00:03:21.850><c> see</c>

00:03:22.080 --> 00:03:22.090 align:start position:0%
making content easy to read we will see
 

00:03:22.090 --> 00:03:25.040 align:start position:0%
making content easy to read we will see
that<00:03:22.240><c> later</c><00:03:22.300><c> with</c><00:03:22.959><c> the</c><00:03:23.530><c> code</c><00:03:23.680><c> examples</c>

00:03:25.040 --> 00:03:25.050 align:start position:0%
that later with the code examples
 

00:03:25.050 --> 00:03:27.180 align:start position:0%
that later with the code examples
reading<00:03:26.050><c> the</c><00:03:26.230><c> code</c><00:03:26.410><c> easily</c><00:03:26.680><c> is</c><00:03:27.010><c> very</c>

00:03:27.180 --> 00:03:27.190 align:start position:0%
reading the code easily is very
 

00:03:27.190 --> 00:03:29.400 align:start position:0%
reading the code easily is very
important<00:03:27.550><c> because</c><00:03:27.700><c> you</c><00:03:28.090><c> you</c><00:03:28.450><c> write</c><00:03:29.050><c> the</c><00:03:29.230><c> code</c>

00:03:29.400 --> 00:03:29.410 align:start position:0%
important because you you write the code
 

00:03:29.410 --> 00:03:31.979 align:start position:0%
important because you you write the code
one<00:03:29.650><c> time</c><00:03:29.890><c> but</c><00:03:30.160><c> after</c><00:03:30.370><c> that</c><00:03:30.700><c> you</c><00:03:31.540><c> and</c><00:03:31.840><c> other</c>

00:03:31.979 --> 00:03:31.989 align:start position:0%
one time but after that you and other
 

00:03:31.989 --> 00:03:35.520 align:start position:0%
one time but after that you and other
people<00:03:32.550><c> will</c><00:03:33.550><c> have</c><00:03:33.730><c> to</c><00:03:33.910><c> debug</c><00:03:34.209><c> that</c><00:03:34.450><c> code</c><00:03:34.690><c> and</c>

00:03:35.520 --> 00:03:35.530 align:start position:0%
people will have to debug that code and
 

00:03:35.530 --> 00:03:38.370 align:start position:0%
people will have to debug that code and
that's<00:03:36.310><c> really</c><00:03:36.610><c> important</c><00:03:37.030><c> to</c><00:03:37.180><c> be</c><00:03:37.330><c> able</c><00:03:37.570><c> to</c><00:03:37.810><c> to</c>

00:03:38.370 --> 00:03:38.380 align:start position:0%
that's really important to be able to to
 

00:03:38.380 --> 00:03:45.060 align:start position:0%
that's really important to be able to to
read<00:03:38.560><c> the</c><00:03:38.739><c> code</c><00:03:38.890><c> easily</c><00:03:42.690><c> good</c><00:03:43.690><c> clean</c><00:03:43.930><c> as</c><00:03:44.739><c> an</c>

00:03:45.060 --> 00:03:45.070 align:start position:0%
read the code easily good clean as an
 

00:03:45.070 --> 00:03:46.890 align:start position:0%
read the code easily good clean as an
awesome<00:03:45.550><c> type</c><00:03:45.850><c> inference</c><00:03:46.269><c> with</c><00:03:46.570><c> static</c>

00:03:46.890 --> 00:03:46.900 align:start position:0%
awesome type inference with static
 

00:03:46.900 --> 00:03:50.580 align:start position:0%
awesome type inference with static
typing<00:03:47.110><c> so</c><00:03:47.560><c> really</c><00:03:48.010><c> clean</c><00:03:48.459><c> as</c><00:03:48.880><c> the</c><00:03:49.120><c> same</c><00:03:49.590><c> level</c>

00:03:50.580 --> 00:03:50.590 align:start position:0%
typing so really clean as the same level
 

00:03:50.590 --> 00:03:52.979 align:start position:0%
typing so really clean as the same level
of<00:03:50.739><c> static</c><00:03:51.340><c> typing</c><00:03:51.550><c> than</c><00:03:51.880><c> Java</c><00:03:52.180><c> everything</c><00:03:52.810><c> is</c>

00:03:52.979 --> 00:03:52.989 align:start position:0%
of static typing than Java everything is
 

00:03:52.989 --> 00:03:54.930 align:start position:0%
of static typing than Java everything is
statically<00:03:53.380><c> typed</c><00:03:53.620><c> you</c><00:03:54.220><c> don't</c><00:03:54.489><c> have</c><00:03:54.670><c> some</c>

00:03:54.930 --> 00:03:54.940 align:start position:0%
statically typed you don't have some
 

00:03:54.940 --> 00:03:57.420 align:start position:0%
statically typed you don't have some
magic<00:03:55.600><c> thing</c><00:03:55.810><c> like</c><00:03:56.110><c> in</c><00:03:56.380><c> in</c><00:03:56.830><c> Ruby</c><00:03:57.280><c> or</c>

00:03:57.420 --> 00:03:57.430 align:start position:0%
magic thing like in in Ruby or
 

00:03:57.430 --> 00:04:02.430 align:start position:0%
magic thing like in in Ruby or
JavaScript<00:03:58.980><c> but</c><00:03:59.980><c> thanks</c><00:04:00.940><c> to</c><00:04:01.030><c> it</c><00:04:01.120><c> it's</c><00:04:01.780><c> clever</c>

00:04:02.430 --> 00:04:02.440 align:start position:0%
JavaScript but thanks to it it's clever
 

00:04:02.440 --> 00:04:05.640 align:start position:0%
JavaScript but thanks to it it's clever
type<00:04:02.620><c> in</c><00:04:02.800><c> France</c><00:04:03.209><c> basically</c><00:04:04.209><c> you</c><00:04:04.390><c> you</c><00:04:04.720><c> you</c><00:04:05.110><c> can</c>

00:04:05.640 --> 00:04:05.650 align:start position:0%
type in France basically you you you can
 

00:04:05.650 --> 00:04:10.370 align:start position:0%
type in France basically you you you can
write<00:04:06.360><c> very</c><00:04:07.360><c> short</c><00:04:07.690><c> code</c><00:04:07.900><c> I</c><00:04:08.110><c> mean</c><00:04:08.910><c> code</c><00:04:09.910><c> key</c>

00:04:10.370 --> 00:04:10.380 align:start position:0%
write very short code I mean code key
 

00:04:10.380 --> 00:04:14.610 align:start position:0%
write very short code I mean code key
could<00:04:11.380><c> be</c><00:04:11.440><c> as</c><00:04:12.370><c> short</c><00:04:12.730><c> as</c><00:04:12.910><c> in</c><00:04:13.090><c> groovy</c><00:04:13.390><c> but</c><00:04:14.050><c> with</c>

00:04:14.610 --> 00:04:14.620 align:start position:0%
could be as short as in groovy but with
 

00:04:14.620 --> 00:04:17.070 align:start position:0%
could be as short as in groovy but with
fully<00:04:15.400><c> a</c><00:04:15.489><c> statically</c><00:04:16.030><c> typed</c><00:04:16.150><c> API</c><00:04:16.720><c> and</c><00:04:16.989><c> that's</c>

00:04:17.070 --> 00:04:17.080 align:start position:0%
fully a statically typed API and that's
 

00:04:17.080 --> 00:04:20.219 align:start position:0%
fully a statically typed API and that's
that's<00:04:17.919><c> very</c><00:04:17.979><c> potent</c><00:04:18.989><c> containers</c><00:04:19.989><c> a</c><00:04:20.080><c> very</c>

00:04:20.219 --> 00:04:20.229 align:start position:0%
that's very potent containers a very
 

00:04:20.229 --> 00:04:22.050 align:start position:0%
that's very potent containers a very
good<00:04:20.440><c> Java</c><00:04:20.709><c> interoperability</c><00:04:21.190><c> in</c><00:04:21.609><c> both</c><00:04:21.820><c> ways</c>

00:04:22.050 --> 00:04:22.060 align:start position:0%
good Java interoperability in both ways
 

00:04:22.060 --> 00:04:25.650 align:start position:0%
good Java interoperability in both ways
that's<00:04:23.130><c> that's</c><00:04:24.130><c> a</c><00:04:24.250><c> key</c><00:04:24.400><c> point</c><00:04:24.660><c> especially</c>

00:04:25.650 --> 00:04:25.660 align:start position:0%
that's that's a key point especially
 

00:04:25.660 --> 00:04:27.750 align:start position:0%
that's that's a key point especially
when<00:04:25.870><c> you</c><00:04:26.080><c> want</c><00:04:26.440><c> to</c><00:04:26.590><c> use</c><00:04:26.950><c> cocaine</c><00:04:27.400><c> with</c><00:04:27.610><c> the</c>

00:04:27.750 --> 00:04:27.760 align:start position:0%
when you want to use cocaine with the
 

00:04:27.760 --> 00:04:31.680 align:start position:0%
when you want to use cocaine with the
spring<00:04:28.000><c> ecosystem</c><00:04:29.669><c> there</c><00:04:30.669><c> is</c><00:04:30.850><c> no</c><00:04:31.419><c> safety</c>

00:04:31.680 --> 00:04:31.690 align:start position:0%
spring ecosystem there is no safety
 

00:04:31.690 --> 00:04:33.840 align:start position:0%
spring ecosystem there is no safety
extensions<00:04:32.440><c> DSL</c><00:04:32.979><c> all</c><00:04:33.160><c> these</c><00:04:33.400><c> things</c><00:04:33.669><c> we</c><00:04:33.789><c> are</c>

00:04:33.840 --> 00:04:33.850 align:start position:0%
extensions DSL all these things we are
 

00:04:33.850 --> 00:04:34.839 align:start position:0%
extensions DSL all these things we are
going<00:04:33.970><c> to</c>

00:04:34.839 --> 00:04:34.849 align:start position:0%
going to
 

00:04:34.849 --> 00:04:37.149 align:start position:0%
going to
see<00:04:34.969><c> more</c><00:04:35.179><c> in</c><00:04:35.270><c> details</c><00:04:35.599><c> later</c><00:04:35.689><c> and</c><00:04:36.199><c> there</c><00:04:37.039><c> is</c>

00:04:37.149 --> 00:04:37.159 align:start position:0%
see more in details later and there is
 

00:04:37.159 --> 00:04:39.609 align:start position:0%
see more in details later and there is
no<00:04:37.369><c> no</c><00:04:37.669><c> more</c><00:04:37.939><c> mandatory</c><00:04:38.449><c> semicolon</c><00:04:39.439><c> at</c><00:04:39.589><c> the</c>

00:04:39.609 --> 00:04:39.619 align:start position:0%
no no more mandatory semicolon at the
 

00:04:39.619 --> 00:04:44.169 align:start position:0%
no no more mandatory semicolon at the
end<00:04:39.770><c> of</c><00:04:39.979><c> the</c><00:04:40.129><c> lines</c><00:04:42.069><c> good</c><00:04:43.069><c> Kirkland</c><00:04:43.459><c> I</c><00:04:43.610><c> started</c>

00:04:44.169 --> 00:04:44.179 align:start position:0%
end of the lines good Kirkland I started
 

00:04:44.179 --> 00:04:48.339 align:start position:0%
end of the lines good Kirkland I started
a<00:04:44.449><c> few</c><00:04:45.020><c> years</c><00:04:45.080><c> ago</c><00:04:45.439><c> but</c><00:04:45.860><c> only</c><00:04:46.479><c> came</c><00:04:47.479><c> to</c><00:04:47.539><c> GA</c><00:04:47.929><c> this</c>

00:04:48.339 --> 00:04:48.349 align:start position:0%
a few years ago but only came to GA this
 

00:04:48.349 --> 00:04:51.459 align:start position:0%
a few years ago but only came to GA this
year<00:04:48.649><c> so</c><00:04:49.009><c> cut</c><00:04:49.699><c> clean</c><00:04:49.879><c> one</c><00:04:50.089><c> dot</c><00:04:50.330><c> o</c><00:04:50.449><c> has</c><00:04:50.899><c> been</c>

00:04:51.459 --> 00:04:51.469 align:start position:0%
year so cut clean one dot o has been
 

00:04:51.469 --> 00:04:53.529 align:start position:0%
year so cut clean one dot o has been
released<00:04:51.800><c> at</c><00:04:52.490><c> the</c><00:04:52.639><c> beginning</c><00:04:52.999><c> of</c><00:04:53.089><c> this</c><00:04:53.270><c> year</c>

00:04:53.529 --> 00:04:53.539 align:start position:0%
released at the beginning of this year
 

00:04:53.539 --> 00:04:58.499 align:start position:0%
released at the beginning of this year
so<00:04:54.199><c> that's</c><00:04:54.499><c> maybe</c><00:04:54.889><c> why</c><00:04:55.249><c> it's</c><00:04:56.059><c> not</c><00:04:56.449><c> as</c><00:04:56.749><c> widely</c>

00:04:58.499 --> 00:04:58.509 align:start position:0%
so that's maybe why it's not as widely
 

00:04:58.509 --> 00:05:01.419 align:start position:0%
so that's maybe why it's not as widely
spreaded<00:04:59.509><c> than</c><00:04:59.749><c> other</c><00:05:00.080><c> other</c><00:05:00.469><c> languages</c><00:05:01.129><c> but</c>

00:05:01.419 --> 00:05:01.429 align:start position:0%
spreaded than other other languages but
 

00:05:01.429 --> 00:05:04.659 align:start position:0%
spreaded than other other languages but
I<00:05:02.209><c> don't</c><00:05:02.689><c> have</c><00:05:02.929><c> exact</c><00:05:03.469><c> figures</c><00:05:03.529><c> in</c><00:05:04.099><c> Tamil</c>

00:05:04.659 --> 00:05:04.669 align:start position:0%
I don't have exact figures in Tamil
 

00:05:04.669 --> 00:05:07.149 align:start position:0%
I don't have exact figures in Tamil
for<00:05:04.819><c> example</c><00:05:05.119><c> github</c><00:05:05.419><c> repositories</c><00:05:05.990><c> but</c><00:05:06.289><c> when</c>

00:05:07.149 --> 00:05:07.159 align:start position:0%
for example github repositories but when
 

00:05:07.159 --> 00:05:09.369 align:start position:0%
for example github repositories but when
I<00:05:07.189><c> was</c><00:05:07.879><c> talking</c><00:05:08.209><c> with</c><00:05:08.240><c> the</c><00:05:08.479><c> dead</c><00:05:08.629><c> brain</c><00:05:08.839><c> guys</c><00:05:09.080><c> I</c>

00:05:09.369 --> 00:05:09.379 align:start position:0%
I was talking with the dead brain guys I
 

00:05:09.379 --> 00:05:11.169 align:start position:0%
I was talking with the dead brain guys I
think<00:05:09.919><c> the</c><00:05:10.039><c> figures</c><00:05:10.339><c> are</c><00:05:10.580><c> really</c><00:05:10.819><c> really</c>

00:05:11.169 --> 00:05:11.179 align:start position:0%
think the figures are really really
 

00:05:11.179 --> 00:05:16.179 align:start position:0%
think the figures are really really
great<00:05:11.599><c> and</c><00:05:11.949><c> I</c><00:05:12.949><c> think</c><00:05:13.990><c> yeah</c><00:05:14.990><c> I</c><00:05:15.139><c> think</c><00:05:15.289><c> that's</c><00:05:16.039><c> on</c>

00:05:16.179 --> 00:05:16.189 align:start position:0%
great and I think yeah I think that's on
 

00:05:16.189 --> 00:05:19.239 align:start position:0%
great and I think yeah I think that's on
a<00:05:16.219><c> good</c><00:05:16.429><c> trend</c><00:05:16.839><c> so</c><00:05:17.839><c> current</c><00:05:18.139><c> latest</c><00:05:19.039><c> stable</c>

00:05:19.239 --> 00:05:19.249 align:start position:0%
a good trend so current latest stable
 

00:05:19.249 --> 00:05:24.570 align:start position:0%
a good trend so current latest stable
version<00:05:19.429><c> is</c><00:05:19.849><c> the</c><00:05:19.969><c> one</c><00:05:20.149><c> that</c><00:05:20.360><c> ordered</c><00:05:21.169><c> free</c><00:05:21.740><c> and</c>

00:05:24.570 --> 00:05:24.580 align:start position:0%
 
 

00:05:24.580 --> 00:05:28.029 align:start position:0%
 
the<00:05:25.580><c> first</c><00:05:26.300><c> cut</c><00:05:26.659><c> clean</c><00:05:26.869><c> 1.1</c><00:05:27.409><c> preview</c><00:05:27.830><c> is</c>

00:05:28.029 --> 00:05:28.039 align:start position:0%
the first cut clean 1.1 preview is
 

00:05:28.039 --> 00:05:30.879 align:start position:0%
the first cut clean 1.1 preview is
available<00:05:28.669><c> and</c><00:05:28.879><c> will</c><00:05:29.179><c> continue</c><00:05:29.479><c> to</c><00:05:29.629><c> ever</c><00:05:29.899><c> to</c>

00:05:30.879 --> 00:05:30.889 align:start position:0%
available and will continue to ever to
 

00:05:30.889 --> 00:05:34.899 align:start position:0%
available and will continue to ever to
be<00:05:31.039><c> released</c><00:05:31.369><c> later</c><00:05:33.399><c> that's</c><00:05:34.399><c> important</c><00:05:34.819><c> to</c>

00:05:34.899 --> 00:05:34.909 align:start position:0%
be released later that's important to
 

00:05:34.909 --> 00:05:38.980 align:start position:0%
be released later that's important to
understand<00:05:35.330><c> that</c><00:05:35.479><c> the</c><00:05:37.419><c> must</c><00:05:38.419><c> have</c><00:05:38.629><c> the</c><00:05:38.809><c> cut</c>

00:05:38.980 --> 00:05:38.990 align:start position:0%
understand that the must have the cut
 

00:05:38.990 --> 00:05:41.290 align:start position:0%
understand that the must have the cut
clean<00:05:39.199><c> application</c><00:05:39.769><c> developers</c><00:05:40.639><c> come</c><00:05:40.999><c> from</c>

00:05:41.290 --> 00:05:41.300 align:start position:0%
clean application developers come from
 

00:05:41.300 --> 00:05:43.869 align:start position:0%
clean application developers come from
Android<00:05:41.659><c> world</c><00:05:41.839><c> because</c><00:05:42.379><c> cut</c><00:05:43.339><c> hello</c><00:05:43.819><c> to</c>

00:05:43.869 --> 00:05:43.879 align:start position:0%
Android world because cut hello to
 

00:05:43.879 --> 00:05:48.489 align:start position:0%
Android world because cut hello to
generate<00:05:44.479><c> Java</c><00:05:45.469><c> 6</c><00:05:45.769><c> byte</c><00:05:46.249><c> code</c><00:05:46.509><c> with</c><00:05:47.509><c> very</c><00:05:48.199><c> nice</c>

00:05:48.489 --> 00:05:48.499 align:start position:0%
generate Java 6 byte code with very nice
 

00:05:48.499 --> 00:05:50.109 align:start position:0%
generate Java 6 byte code with very nice
languages<00:05:49.069><c> that</c><00:05:49.219><c> we</c><00:05:49.369><c> are</c><00:05:49.490><c> going</c><00:05:49.610><c> to</c><00:05:49.729><c> detail</c>

00:05:50.109 --> 00:05:50.119 align:start position:0%
languages that we are going to detail
 

00:05:50.119 --> 00:05:50.469 align:start position:0%
languages that we are going to detail
later

00:05:50.469 --> 00:05:50.479 align:start position:0%
later
 

00:05:50.479 --> 00:05:54.249 align:start position:0%
later
and<00:05:51.069><c> basically</c><00:05:52.069><c> that</c><00:05:52.789><c> allow</c><00:05:53.119><c> developers</c><00:05:53.779><c> to</c>

00:05:54.249 --> 00:05:54.259 align:start position:0%
and basically that allow developers to
 

00:05:54.259 --> 00:05:56.019 align:start position:0%
and basically that allow developers to
welcome<00:05:54.740><c> to</c><00:05:54.889><c> the</c><00:05:55.039><c> limitation</c><00:05:55.550><c> of</c><00:05:55.669><c> the</c><00:05:55.789><c> on</c><00:05:55.879><c> read</c>

00:05:56.019 --> 00:05:56.029 align:start position:0%
welcome to the limitation of the on read
 

00:05:56.029 --> 00:05:59.139 align:start position:0%
welcome to the limitation of the on read
platform<00:05:56.479><c> which</c><00:05:56.899><c> was</c><00:05:57.139><c> stick</c><00:05:57.680><c> to</c><00:05:57.919><c> Java</c><00:05:58.909><c> 6</c>

00:05:59.139 --> 00:05:59.149 align:start position:0%
platform which was stick to Java 6
 

00:05:59.149 --> 00:06:01.779 align:start position:0%
platform which was stick to Java 6
syntax<00:05:59.659><c> until</c><00:06:00.289><c> on</c><00:06:00.769><c> the</c><00:06:00.829><c> window</c><00:06:01.129><c> gap</c><00:06:01.339><c> that</c><00:06:01.579><c> is</c>

00:06:01.779 --> 00:06:01.789 align:start position:0%
syntax until on the window gap that is
 

00:06:01.789 --> 00:06:04.359 align:start position:0%
syntax until on the window gap that is
about<00:06:02.029><c> to</c><00:06:02.209><c> be</c><00:06:02.300><c> released</c><00:06:02.449><c> and</c><00:06:03.189><c> even</c><00:06:04.189><c> with</c>

00:06:04.359 --> 00:06:04.369 align:start position:0%
about to be released and even with
 

00:06:04.369 --> 00:06:06.939 align:start position:0%
about to be released and even with
Android<00:06:04.729><c> nougats</c><00:06:05.300><c> reporter</c><00:06:05.779><c> AIDS</c><00:06:06.110><c> some</c><00:06:06.709><c> Java</c>

00:06:06.939 --> 00:06:06.949 align:start position:0%
Android nougats reporter AIDS some Java
 

00:06:06.949 --> 00:06:10.509 align:start position:0%
Android nougats reporter AIDS some Java
8<00:06:07.099><c> ApS</c><00:06:07.909><c> are</c><00:06:08.089><c> not</c><00:06:08.209><c> available</c><00:06:08.419><c> and</c><00:06:08.929><c> you</c><00:06:09.889><c> can</c>

00:06:10.509 --> 00:06:10.519 align:start position:0%
8 ApS are not available and you can
 

00:06:10.519 --> 00:06:14.139 align:start position:0%
8 ApS are not available and you can
generate<00:06:11.089><c> bytecode</c><00:06:11.539><c> for</c><00:06:12.339><c> some</c><00:06:13.339><c> older</c><00:06:13.729><c> version</c>

00:06:14.139 --> 00:06:14.149 align:start position:0%
generate bytecode for some older version
 

00:06:14.149 --> 00:06:17.559 align:start position:0%
generate bytecode for some older version
of<00:06:14.240><c> Android</c><00:06:14.389><c> so</c><00:06:14.929><c> I</c><00:06:15.199><c> really</c><00:06:15.979><c> think</c><00:06:16.249><c> that</c><00:06:16.569><c> code</c>

00:06:17.559 --> 00:06:17.569 align:start position:0%
of Android so I really think that code
 

00:06:17.569 --> 00:06:19.929 align:start position:0%
of Android so I really think that code
clean<00:06:17.839><c> will</c><00:06:18.139><c> continue</c><00:06:18.499><c> to</c><00:06:18.619><c> be</c><00:06:18.740><c> popular</c><00:06:19.189><c> in</c><00:06:19.369><c> in</c>

00:06:19.929 --> 00:06:19.939 align:start position:0%
clean will continue to be popular in in
 

00:06:19.939 --> 00:06:21.489 align:start position:0%
clean will continue to be popular in in
the<00:06:20.119><c> Android</c><00:06:20.389><c> world</c><00:06:20.419><c> and</c><00:06:20.869><c> really</c><00:06:21.139><c> in</c><00:06:21.319><c> the</c>

00:06:21.489 --> 00:06:21.499 align:start position:0%
the Android world and really in the
 

00:06:21.499 --> 00:06:24.359 align:start position:0%
the Android world and really in the
Android<00:06:21.829><c> community</c><00:06:22.039><c> cooking</c><00:06:22.999><c> is</c><00:06:23.360><c> very</c><00:06:23.749><c> very</c>

00:06:24.359 --> 00:06:24.369 align:start position:0%
Android community cooking is very very
 

00:06:24.369 --> 00:06:28.929 align:start position:0%
Android community cooking is very very
widely<00:06:25.369><c> used</c><00:06:26.769><c> the</c><00:06:27.769><c> second</c><00:06:28.039><c> use</c><00:06:28.189><c> case</c><00:06:28.279><c> is</c><00:06:28.699><c> the</c>

00:06:28.929 --> 00:06:28.939 align:start position:0%
widely used the second use case is the
 

00:06:28.939 --> 00:06:30.339 align:start position:0%
widely used the second use case is the
use<00:06:29.059><c> case</c><00:06:29.269><c> that</c><00:06:29.449><c> we</c><00:06:29.569><c> are</c><00:06:29.599><c> going</c><00:06:29.899><c> to</c><00:06:30.050><c> detail</c>

00:06:30.339 --> 00:06:30.349 align:start position:0%
use case that we are going to detail
 

00:06:30.349 --> 00:06:30.969 align:start position:0%
use case that we are going to detail
today

00:06:30.969 --> 00:06:30.979 align:start position:0%
today
 

00:06:30.979 --> 00:06:33.309 align:start position:0%
today
that's<00:06:31.519><c> the</c><00:06:31.639><c> server</c><00:06:31.879><c> use</c><00:06:32.059><c> case</c><00:06:32.300><c> using</c><00:06:32.929><c> content</c>

00:06:33.309 --> 00:06:33.319 align:start position:0%
that's the server use case using content
 

00:06:33.319 --> 00:06:34.959 align:start position:0%
that's the server use case using content
to<00:06:33.469><c> develop</c><00:06:33.800><c> server</c><00:06:34.009><c> application</c><00:06:34.550><c> instead</c><00:06:34.819><c> of</c>

00:06:34.959 --> 00:06:34.969 align:start position:0%
to develop server application instead of
 

00:06:34.969 --> 00:06:37.419 align:start position:0%
to develop server application instead of
shut<00:06:35.119><c> up</c><00:06:35.349><c> you</c><00:06:36.349><c> can</c><00:06:36.529><c> also</c><00:06:36.649><c> develop</c><00:06:36.919><c> desktop</c>

00:06:37.419 --> 00:06:37.429 align:start position:0%
shut up you can also develop desktop
 

00:06:37.429 --> 00:06:39.100 align:start position:0%
shut up you can also develop desktop
application<00:06:37.969><c> and</c><00:06:38.179><c> others</c><00:06:38.509><c> like</c><00:06:38.869><c> web</c>

00:06:39.100 --> 00:06:39.110 align:start position:0%
application and others like web
 

00:06:39.110 --> 00:06:40.779 align:start position:0%
application and others like web
application<00:06:39.619><c> we</c><00:06:39.829><c> are</c><00:06:39.949><c> going</c><00:06:40.189><c> or</c><00:06:40.339><c> so</c><00:06:40.490><c> to</c><00:06:40.550><c> see</c>

00:06:40.779 --> 00:06:40.789 align:start position:0%
application we are going or so to see
 

00:06:40.789 --> 00:06:47.110 align:start position:0%
application we are going or so to see
that<00:06:40.909><c> later</c><00:06:44.349><c> this</c><00:06:45.349><c> this</c><00:06:45.860><c> diagram</c><00:06:46.669><c> shows</c><00:06:46.699><c> the</c>

00:06:47.110 --> 00:06:47.120 align:start position:0%
that later this this diagram shows the
 

00:06:47.120 --> 00:06:48.370 align:start position:0%
that later this this diagram shows the
method

00:06:48.370 --> 00:06:48.380 align:start position:0%
method
 

00:06:48.380 --> 00:06:50.380 align:start position:0%
method
number<00:06:48.650><c> eight</c><00:06:48.770><c> application</c><00:06:49.340><c> I</c><00:06:49.550><c> don't</c><00:06:50.150><c> know</c><00:06:50.270><c> if</c>

00:06:50.380 --> 00:06:50.390 align:start position:0%
number eight application I don't know if
 

00:06:50.390 --> 00:06:51.550 align:start position:0%
number eight application I don't know if
you<00:06:50.480><c> are</c><00:06:50.600><c> familiar</c><00:06:50.750><c> with</c><00:06:50.960><c> some</c><00:06:51.260><c> redevelopment</c>

00:06:51.550 --> 00:06:51.560 align:start position:0%
you are familiar with some redevelopment
 

00:06:51.560 --> 00:06:54.640 align:start position:0%
you are familiar with some redevelopment
but<00:06:52.040><c> basically</c><00:06:52.490><c> on</c><00:06:53.120><c> mobile</c><00:06:53.540><c> we</c><00:06:53.780><c> are</c><00:06:53.930><c> we</c><00:06:54.500><c> have</c>

00:06:54.640 --> 00:06:54.650 align:start position:0%
but basically on mobile we are we have
 

00:06:54.650 --> 00:06:57.490 align:start position:0%
but basically on mobile we are we have
limited<00:06:55.130><c> resources</c><00:06:55.400><c> and</c><00:06:56.110><c> there</c><00:06:57.110><c> is</c><00:06:57.260><c> some</c>

00:06:57.490 --> 00:06:57.500 align:start position:0%
limited resources and there is some
 

00:06:57.500 --> 00:07:00.460 align:start position:0%
limited resources and there is some
limitation<00:06:57.860><c> in</c><00:06:58.220><c> on</c><00:06:58.340><c> read</c><00:06:58.600><c> about</c><00:06:59.600><c> a</c><00:06:59.900><c> number</c><00:07:00.290><c> of</c>

00:07:00.460 --> 00:07:00.470 align:start position:0%
limitation in on read about a number of
 

00:07:00.470 --> 00:07:03.760 align:start position:0%
limitation in on read about a number of
methods<00:07:01.190><c> and</c><00:07:01.580><c> with</c><00:07:02.510><c> very</c><00:07:02.780><c> dynamic</c><00:07:03.290><c> languages</c>

00:07:03.760 --> 00:07:03.770 align:start position:0%
methods and with very dynamic languages
 

00:07:03.770 --> 00:07:06.570 align:start position:0%
methods and with very dynamic languages
like<00:07:04.010><c> Ruby</c><00:07:04.190><c> the</c><00:07:05.000><c> bytecode</c><00:07:05.210><c> generated</c>

00:07:06.570 --> 00:07:06.580 align:start position:0%
like Ruby the bytecode generated
 

00:07:06.580 --> 00:07:09.130 align:start position:0%
like Ruby the bytecode generated
contains<00:07:07.580><c> a</c><00:07:07.730><c> lot</c><00:07:07.880><c> of</c><00:07:07.910><c> cases</c><00:07:08.270><c> a</c><00:07:08.450><c> lot</c><00:07:08.600><c> of</c><00:07:08.780><c> mythos</c>

00:07:09.130 --> 00:07:09.140 align:start position:0%
contains a lot of cases a lot of mythos
 

00:07:09.140 --> 00:07:13.210 align:start position:0%
contains a lot of cases a lot of mythos
and<00:07:09.170><c> you</c><00:07:09.440><c> can</c><00:07:09.620><c> see</c><00:07:09.860><c> in</c><00:07:10.010><c> this</c><00:07:10.600><c> diagram</c><00:07:11.600><c> that</c><00:07:12.220><c> the</c>

00:07:13.210 --> 00:07:13.220 align:start position:0%
and you can see in this diagram that the
 

00:07:13.220 --> 00:07:15.760 align:start position:0%
and you can see in this diagram that the
number<00:07:13.880><c> of</c><00:07:14.030><c> methods</c><00:07:14.240><c> in</c><00:07:14.570><c> groovy</c><00:07:14.870><c> is</c><00:07:15.050><c> very</c><00:07:15.260><c> high</c>

00:07:15.760 --> 00:07:15.770 align:start position:0%
number of methods in groovy is very high
 

00:07:15.770 --> 00:07:17.980 align:start position:0%
number of methods in groovy is very high
after<00:07:16.700><c> that</c><00:07:16.880><c> color</c><00:07:17.180><c> is</c><00:07:17.300><c> a</c><00:07:17.420><c> little</c><00:07:17.720><c> bit</c><00:07:17.810><c> better</c>

00:07:17.980 --> 00:07:17.990 align:start position:0%
after that color is a little bit better
 

00:07:17.990 --> 00:07:22.240 align:start position:0%
after that color is a little bit better
and<00:07:19.510><c> code</c><00:07:20.510><c> clean</c><00:07:20.720><c> is</c><00:07:20.960><c> almost</c><00:07:21.710><c> at</c><00:07:21.950><c> the</c><00:07:21.980><c> same</c>

00:07:22.240 --> 00:07:22.250 align:start position:0%
and code clean is almost at the same
 

00:07:22.250 --> 00:07:25.810 align:start position:0%
and code clean is almost at the same
level<00:07:22.550><c> than</c><00:07:22.730><c> danjela</c><00:07:24.190><c> this</c><00:07:25.190><c> number</c><00:07:25.610><c> of</c>

00:07:25.810 --> 00:07:25.820 align:start position:0%
level than danjela this number of
 

00:07:25.820 --> 00:07:29.110 align:start position:0%
level than danjela this number of
methods<00:07:26.060><c> is</c><00:07:26.390><c> after</c><00:07:26.870><c> using</c><00:07:27.350><c> ProGuard</c><00:07:27.890><c> so</c><00:07:28.120><c> after</c>

00:07:29.110 --> 00:07:29.120 align:start position:0%
methods is after using ProGuard so after
 

00:07:29.120 --> 00:07:31.780 align:start position:0%
methods is after using ProGuard so after
removing<00:07:29.600><c> a</c><00:07:29.870><c> news</c><00:07:30.080><c> code</c><00:07:30.350><c> and</c><00:07:30.620><c> basically</c><00:07:31.280><c> what</c>

00:07:31.780 --> 00:07:31.790 align:start position:0%
removing a news code and basically what
 

00:07:31.790 --> 00:07:35.280 align:start position:0%
removing a news code and basically what
you<00:07:32.030><c> you</c><00:07:32.390><c> you</c><00:07:32.660><c> should</c><00:07:32.690><c> get</c><00:07:33.110><c> in</c><00:07:33.350><c> production</c><00:07:33.890><c> so</c>

00:07:35.280 --> 00:07:35.290 align:start position:0%
you you you should get in production so
 

00:07:35.290 --> 00:07:38.260 align:start position:0%
you you you should get in production so
that's<00:07:36.290><c> also</c><00:07:36.500><c> why</c><00:07:36.920><c> Kathleen</c><00:07:37.370><c> is</c><00:07:37.580><c> successful</c>

00:07:38.260 --> 00:07:38.270 align:start position:0%
that's also why Kathleen is successful
 

00:07:38.270 --> 00:07:40.390 align:start position:0%
that's also why Kathleen is successful
in<00:07:38.420><c> in</c><00:07:38.750><c> on</c><00:07:38.870><c> the</c><00:07:38.960><c> red</c><00:07:39.080><c> world</c><00:07:39.320><c> that's</c><00:07:40.040><c> a</c><00:07:40.190><c> low</c><00:07:40.340><c> to</c>

00:07:40.390 --> 00:07:40.400 align:start position:0%
in in on the red world that's a low to
 

00:07:40.400 --> 00:07:44.230 align:start position:0%
in in on the red world that's a low to
generate<00:07:41.240><c> optimized</c><00:07:41.870><c> bad</c><00:07:42.080><c> code</c><00:07:42.320><c> as</c><00:07:43.240><c> optimized</c>

00:07:44.230 --> 00:07:44.240 align:start position:0%
generate optimized bad code as optimized
 

00:07:44.240 --> 00:07:47.760 align:start position:0%
generate optimized bad code as optimized
as<00:07:44.390><c> injera</c><00:07:44.810><c> almost</c><00:07:45.380><c> with</c><00:07:46.370><c> a</c><00:07:46.760><c> much</c><00:07:47.210><c> more</c>

00:07:47.760 --> 00:07:47.770 align:start position:0%
as injera almost with a much more
 

00:07:47.770 --> 00:07:52.920 align:start position:0%
as injera almost with a much more
powerful<00:07:48.770><c> language</c><00:07:51.460><c> to</c><00:07:52.460><c> continue</c><00:07:52.820><c> the</c>

00:07:52.920 --> 00:07:52.930 align:start position:0%
powerful language to continue the
 

00:07:52.930 --> 00:07:58.000 align:start position:0%
powerful language to continue the
compression<00:07:53.930><c> I</c><00:07:54.200><c> have</c><00:07:54.860><c> tried</c><00:07:55.130><c> to</c><00:07:56.500><c> to</c><00:07:57.500><c> put</c><00:07:57.710><c> a</c><00:07:57.740><c> few</c>

00:07:58.000 --> 00:07:58.010 align:start position:0%
compression I have tried to to put a few
 

00:07:58.010 --> 00:08:00.300 align:start position:0%
compression I have tried to to put a few
sentences<00:07:58.310><c> about</c><00:07:58.970><c> how</c><00:07:59.270><c> does</c><00:07:59.690><c> it</c><00:07:59.780><c> compare</c><00:07:59.960><c> with</c>

00:08:00.300 --> 00:08:00.310 align:start position:0%
sentences about how does it compare with
 

00:08:00.310 --> 00:08:02.950 align:start position:0%
sentences about how does it compare with
values<00:08:01.310><c> languages</c><00:08:01.880><c> so</c><00:08:02.150><c> how</c><00:08:02.600><c> does</c><00:08:02.660><c> it</c><00:08:02.870><c> compare</c>

00:08:02.950 --> 00:08:02.960 align:start position:0%
values languages so how does it compare
 

00:08:02.960 --> 00:08:04.840 align:start position:0%
values languages so how does it compare
with<00:08:03.140><c> groovy</c>

00:08:04.840 --> 00:08:04.850 align:start position:0%
with groovy
 

00:08:04.850 --> 00:08:08.350 align:start position:0%
with groovy
I<00:08:04.910><c> think</c><00:08:05.480><c> Kathleen</c><00:08:06.520><c> took</c><00:08:07.520><c> a</c><00:08:07.670><c> lot</c><00:08:07.790><c> of</c><00:08:07.970><c> things</c>

00:08:08.350 --> 00:08:08.360 align:start position:0%
I think Kathleen took a lot of things
 

00:08:08.360 --> 00:08:11.710 align:start position:0%
I think Kathleen took a lot of things
from<00:08:08.600><c> groovy</c><00:08:09.020><c> a</c><00:08:09.200><c> lot</c><00:08:10.010><c> of</c><00:08:10.160><c> IDs</c><00:08:10.550><c> they</c><00:08:11.330><c> share</c><00:08:11.570><c> the</c>

00:08:11.710 --> 00:08:11.720 align:start position:0%
from groovy a lot of IDs they share the
 

00:08:11.720 --> 00:08:14.050 align:start position:0%
from groovy a lot of IDs they share the
same<00:08:11.750><c> consistent</c><00:08:12.680><c> expressive</c><00:08:13.130><c> code</c><00:08:13.340><c> but</c><00:08:13.580><c> the</c>

00:08:14.050 --> 00:08:14.060 align:start position:0%
same consistent expressive code but the
 

00:08:14.060 --> 00:08:16.720 align:start position:0%
same consistent expressive code but the
main<00:08:14.210><c> differences</c><00:08:14.750><c> even</c><00:08:15.320><c> is</c><00:08:15.710><c> groovy</c><00:08:16.520><c> as</c><00:08:16.700><c> a</c>

00:08:16.720 --> 00:08:16.730 align:start position:0%
main differences even is groovy as a
 

00:08:16.730 --> 00:08:20.440 align:start position:0%
main differences even is groovy as a
compiled<00:08:17.590><c> static</c><00:08:18.590><c> mode</c><00:08:18.850><c> they</c><00:08:19.850><c> were</c><00:08:19.970><c> developed</c>

00:08:20.440 --> 00:08:20.450 align:start position:0%
compiled static mode they were developed
 

00:08:20.450 --> 00:08:24.250 align:start position:0%
compiled static mode they were developed
by<00:08:20.570><c> selection</c><00:08:20.930><c> Pope</c><00:08:21.820><c> but</c><00:08:22.960><c> Kathleen</c><00:08:23.960><c> has</c>

00:08:24.250 --> 00:08:24.260 align:start position:0%
by selection Pope but Kathleen has
 

00:08:24.260 --> 00:08:28.120 align:start position:0%
by selection Pope but Kathleen has
released<00:08:24.800><c> static</c><00:08:25.310><c> typing</c><00:08:25.750><c> at</c><00:08:26.750><c> the</c><00:08:26.810><c> core</c><00:08:27.200><c> of</c><00:08:27.410><c> of</c>

00:08:28.120 --> 00:08:28.130 align:start position:0%
released static typing at the core of of
 

00:08:28.130 --> 00:08:30.760 align:start position:0%
released static typing at the core of of
the<00:08:28.280><c> languages</c><00:08:28.760><c> and</c><00:08:28.910><c> that</c><00:08:29.390><c> that</c><00:08:30.260><c> makes</c><00:08:30.500><c> a</c><00:08:30.680><c> lot</c>

00:08:30.760 --> 00:08:30.770 align:start position:0%
the languages and that that makes a lot
 

00:08:30.770 --> 00:08:33.250 align:start position:0%
the languages and that that makes a lot
of<00:08:30.830><c> differences</c><00:08:31.550><c> in</c><00:08:31.580><c> term</c><00:08:32.120><c> of</c><00:08:32.260><c> autocomplete</c>

00:08:33.250 --> 00:08:33.260 align:start position:0%
of differences in term of autocomplete
 

00:08:33.260 --> 00:08:36.279 align:start position:0%
of differences in term of autocomplete
in<00:08:33.500><c> term</c><00:08:33.830><c> of</c><00:08:33.860><c> a</c><00:08:34.669><c> lot</c><00:08:35.210><c> of</c><00:08:35.360><c> things</c><00:08:35.630><c> that's</c><00:08:35.870><c> not</c><00:08:36.110><c> an</c>

00:08:36.279 --> 00:08:36.289 align:start position:0%
in term of a lot of things that's not an
 

00:08:36.289 --> 00:08:38.560 align:start position:0%
in term of a lot of things that's not an
optional<00:08:36.710><c> thing</c><00:08:36.950><c> that</c><00:08:37.190><c> you</c><00:08:37.310><c> add</c><00:08:37.460><c> later</c><00:08:37.700><c> or</c><00:08:38.030><c> the</c>

00:08:38.560 --> 00:08:38.570 align:start position:0%
optional thing that you add later or the
 

00:08:38.570 --> 00:08:41.920 align:start position:0%
optional thing that you add later or the
content<00:08:38.870><c> API</c><00:08:38.990><c> is</c><00:08:39.440><c> designed</c><00:08:39.979><c> to</c><00:08:40.750><c> for</c><00:08:41.750><c> for</c>

00:08:41.920 --> 00:08:41.930 align:start position:0%
content API is designed to for for
 

00:08:41.930 --> 00:08:44.950 align:start position:0%
content API is designed to for for
static<00:08:42.260><c> typing</c><00:08:42.469><c> where</c><00:08:43.340><c> in</c><00:08:44.000><c> Ruby</c><00:08:44.390><c> world</c><00:08:44.600><c> you</c>

00:08:44.950 --> 00:08:44.960 align:start position:0%
static typing where in Ruby world you
 

00:08:44.960 --> 00:08:47.830 align:start position:0%
static typing where in Ruby world you
have<00:08:45.140><c> a</c><00:08:45.260><c> lot</c><00:08:45.410><c> of</c><00:08:45.760><c> dynamic</c><00:08:46.760><c> thing</c><00:08:47.030><c> like</c><00:08:47.330><c> Jesus</c>

00:08:47.830 --> 00:08:47.840 align:start position:0%
have a lot of dynamic thing like Jesus
 

00:08:47.840 --> 00:08:49.780 align:start position:0%
have a lot of dynamic thing like Jesus
reporting<00:08:48.500><c> like</c><00:08:48.650><c> that</c><00:08:48.770><c> that</c><00:08:48.950><c> only</c><00:08:49.160><c> work</c><00:08:49.520><c> in</c>

00:08:49.780 --> 00:08:49.790 align:start position:0%
reporting like that that only work in
 

00:08:49.790 --> 00:08:53.620 align:start position:0%
reporting like that that only work in
dynamic<00:08:50.720><c> mode</c><00:08:50.780><c> and</c><00:08:51.220><c> really</c><00:08:52.220><c> in</c><00:08:52.580><c> Ruby</c><00:08:52.970><c> dynamic</c>

00:08:53.620 --> 00:08:53.630 align:start position:0%
dynamic mode and really in Ruby dynamic
 

00:08:53.630 --> 00:08:55.180 align:start position:0%
dynamic mode and really in Ruby dynamic
and<00:08:53.870><c> static</c><00:08:54.260><c> mode</c><00:08:54.470><c> are</c><00:08:54.680><c> really</c><00:08:54.890><c> two</c><00:08:55.070><c> different</c>

00:08:55.180 --> 00:08:55.190 align:start position:0%
and static mode are really two different
 

00:08:55.190 --> 00:08:55.840 align:start position:0%
and static mode are really two different
things

00:08:55.840 --> 00:08:55.850 align:start position:0%
things
 

00:08:55.850 --> 00:09:00.280 align:start position:0%
things
we're<00:08:56.420><c> in</c><00:08:56.900><c> contain</c><00:08:57.290><c> shift</c><00:08:58.100><c> to</c><00:08:58.310><c> to</c><00:08:58.670><c> to</c><00:08:59.030><c> to</c><00:08:59.330><c> allow</c>

00:09:00.280 --> 00:09:00.290 align:start position:0%
we're in contain shift to to to to allow
 

00:09:00.290 --> 00:09:02.470 align:start position:0%
we're in contain shift to to to to allow
concise<00:09:00.800><c> code</c><00:09:01.040><c> with</c><00:09:01.790><c> static</c>

00:09:02.470 --> 00:09:02.480 align:start position:0%
concise code with static
 

00:09:02.480 --> 00:09:04.389 align:start position:0%
concise code with static
being<00:09:02.600><c> everywhere</c><00:09:03.019><c> and</c><00:09:03.260><c> that's</c><00:09:03.470><c> that's</c><00:09:04.100><c> a</c><00:09:04.220><c> key</c>

00:09:04.389 --> 00:09:04.399 align:start position:0%
being everywhere and that's that's a key
 

00:09:04.399 --> 00:09:09.430 align:start position:0%
being everywhere and that's that's a key
point<00:09:04.610><c> I</c><00:09:04.730><c> think</c><00:09:06.160><c> about</c><00:09:07.160><c> Kara</c><00:09:07.519><c> I</c><00:09:08.510><c> have</c><00:09:09.199><c> taken</c>

00:09:09.430 --> 00:09:09.440 align:start position:0%
point I think about Kara I have taken
 

00:09:09.440 --> 00:09:11.860 align:start position:0%
point I think about Kara I have taken
some<00:09:09.769><c> quotes</c><00:09:10.070><c> from</c><00:09:10.220><c> a</c><00:09:10.850><c> nice</c><00:09:11.089><c> blog</c><00:09:11.329><c> post</c><00:09:11.600><c> from</c>

00:09:11.860 --> 00:09:11.870 align:start position:0%
some quotes from a nice blog post from
 

00:09:11.870 --> 00:09:14.410 align:start position:0%
some quotes from a nice blog post from
from<00:09:12.350><c> scar</c><00:09:12.589><c> a</c><00:09:12.620><c> developer</c><00:09:13.040><c> and</c><00:09:13.240><c> someone</c><00:09:14.240><c> that</c>

00:09:14.410 --> 00:09:14.420 align:start position:0%
from scar a developer and someone that
 

00:09:14.420 --> 00:09:18.220 align:start position:0%
from scar a developer and someone that
really<00:09:14.720><c> loves</c><00:09:15.139><c> Keller</c><00:09:16.449><c> that's</c><00:09:17.449><c> somebody</c>

00:09:18.220 --> 00:09:18.230 align:start position:0%
really loves Keller that's somebody
 

00:09:18.230 --> 00:09:20.290 align:start position:0%
really loves Keller that's somebody
working<00:09:18.560><c> at</c><00:09:18.889><c> electronic</c><00:09:19.430><c> art</c><00:09:19.639><c> I</c><00:09:19.790><c> think</c><00:09:19.850><c> and</c>

00:09:20.290 --> 00:09:20.300 align:start position:0%
working at electronic art I think and
 

00:09:20.300 --> 00:09:22.060 align:start position:0%
working at electronic art I think and
the<00:09:20.779><c> blog</c><00:09:20.930><c> post</c><00:09:21.139><c> is</c><00:09:21.290><c> called</c><00:09:21.529><c> the</c><00:09:21.709><c> yin</c><00:09:21.889><c> and</c><00:09:22.040><c> the</c>

00:09:22.060 --> 00:09:22.070 align:start position:0%
the blog post is called the yin and the
 

00:09:22.070 --> 00:09:25.720 align:start position:0%
the blog post is called the yin and the
yang<00:09:22.310><c> of</c><00:09:22.459><c> programming</c><00:09:23.089><c> languages</c><00:09:24.459><c> this</c><00:09:25.459><c> guy</c>

00:09:25.720 --> 00:09:25.730 align:start position:0%
yang of programming languages this guy
 

00:09:25.730 --> 00:09:29.050 align:start position:0%
yang of programming languages this guy
called<00:09:26.209><c> some</c><00:09:26.810><c> people</c><00:09:26.839><c> say</c><00:09:27.320><c> contain</c><00:09:27.709><c> as</c><00:09:27.889><c> 80%</c><00:09:28.579><c> of</c>

00:09:29.050 --> 00:09:29.060 align:start position:0%
called some people say contain as 80% of
 

00:09:29.060 --> 00:09:32.230 align:start position:0%
called some people say contain as 80% of
the<00:09:29.209><c> power</c><00:09:29.360><c> of</c><00:09:29.630><c> Skara</c><00:09:29.899><c> with</c><00:09:30.380><c> 20%</c><00:09:31.190><c> of</c><00:09:31.339><c> the</c>

00:09:32.230 --> 00:09:32.240 align:start position:0%
the power of Skara with 20% of the
 

00:09:32.240 --> 00:09:37.090 align:start position:0%
the power of Skara with 20% of the
features<00:09:32.949><c> and</c><00:09:34.300><c> you</c><00:09:35.300><c> also</c><00:09:35.449><c> say</c><00:09:35.980><c> consists</c><00:09:36.980><c> of</c>

00:09:37.090 --> 00:09:37.100 align:start position:0%
features and you also say consists of
 

00:09:37.100 --> 00:09:38.949 align:start position:0%
features and you also say consists of
two<00:09:37.279><c> engineering</c><00:09:37.610><c> language</c><00:09:38.149><c> in</c><00:09:38.480><c> contrast</c><00:09:38.899><c> to</c>

00:09:38.949 --> 00:09:38.959 align:start position:0%
two engineering language in contrast to
 

00:09:38.959 --> 00:09:40.990 align:start position:0%
two engineering language in contrast to
Skara<00:09:39.290><c> which</c><00:09:39.920><c> is</c><00:09:40.100><c> a</c><00:09:40.130><c> computing</c><00:09:40.639><c> science</c>

00:09:40.990 --> 00:09:41.000 align:start position:0%
Skara which is a computing science
 

00:09:41.000 --> 00:09:42.910 align:start position:0%
Skara which is a computing science
language<00:09:41.360><c> and</c><00:09:41.630><c> I</c><00:09:41.779><c> think</c><00:09:42.170><c> that's</c><00:09:42.350><c> a</c><00:09:42.470><c> good</c><00:09:42.620><c> a</c>

00:09:42.910 --> 00:09:42.920 align:start position:0%
language and I think that's a good a
 

00:09:42.920 --> 00:09:47.019 align:start position:0%
language and I think that's a good a
good<00:09:43.279><c> difference</c><00:09:44.019><c> contain</c><00:09:45.019><c> is</c><00:09:45.220><c> simpler</c><00:09:46.220><c> a</c>

00:09:47.019 --> 00:09:47.029 align:start position:0%
good difference contain is simpler a
 

00:09:47.029 --> 00:09:50.040 align:start position:0%
good difference contain is simpler a
little<00:09:47.570><c> bit</c><00:09:47.690><c> less</c><00:09:47.870><c> powerful</c><00:09:48.199><c> more</c><00:09:49.040><c> pragmatic</c>

00:09:50.040 --> 00:09:50.050 align:start position:0%
little bit less powerful more pragmatic
 

00:09:50.050 --> 00:09:53.620 align:start position:0%
little bit less powerful more pragmatic
perhaps<00:09:51.050><c> more</c><00:09:51.470><c> carefully</c><00:09:51.980><c> design</c><00:09:52.370><c> with</c><00:09:52.820><c> JVM</c>

00:09:53.620 --> 00:09:53.630 align:start position:0%
perhaps more carefully design with JVM
 

00:09:53.630 --> 00:09:56.199 align:start position:0%
perhaps more carefully design with JVM
constraints<00:09:54.139><c> in</c><00:09:54.230><c> mind</c><00:09:54.260><c> and</c><00:09:54.730><c> so</c><00:09:55.730><c> both</c>

00:09:56.199 --> 00:09:56.209 align:start position:0%
constraints in mind and so both
 

00:09:56.209 --> 00:09:58.060 align:start position:0%
constraints in mind and so both
languages<00:09:56.839><c> are</c><00:09:56.899><c> interesting</c><00:09:57.589><c> but</c><00:09:57.740><c> as</c><00:09:58.010><c> a</c>

00:09:58.060 --> 00:09:58.070 align:start position:0%
languages are interesting but as a
 

00:09:58.070 --> 00:10:00.879 align:start position:0%
languages are interesting but as a
software<00:09:58.579><c> engineer</c><00:09:59.079><c> as</c><00:10:00.079><c> somebody</c><00:10:00.649><c> who</c>

00:10:00.879 --> 00:10:00.889 align:start position:0%
software engineer as somebody who
 

00:10:00.889 --> 00:10:03.970 align:start position:0%
software engineer as somebody who
develops<00:10:01.310><c> in</c><00:10:01.519><c> good</c><00:10:01.699><c> application</c><00:10:02.529><c> to</c><00:10:03.529><c> me</c>

00:10:03.970 --> 00:10:03.980 align:start position:0%
develops in good application to me
 

00:10:03.980 --> 00:10:09.370 align:start position:0%
develops in good application to me
cotton<00:10:04.639><c> is</c><00:10:04.670><c> a</c><00:10:04.790><c> much</c><00:10:05.149><c> more</c><00:10:05.480><c> better</c><00:10:05.839><c> fit</c><00:10:06.790><c> and</c><00:10:08.380><c> if</c>

00:10:09.370 --> 00:10:09.380 align:start position:0%
cotton is a much more better fit and if
 

00:10:09.380 --> 00:10:13.240 align:start position:0%
cotton is a much more better fit and if
we<00:10:09.500><c> compare</c><00:10:09.800><c> 14</c><00:10:10.190><c> with</c><00:10:10.399><c> swift</c><00:10:10.760><c> the</c><00:10:12.250><c> languages</c>

00:10:13.240 --> 00:10:13.250 align:start position:0%
we compare 14 with swift the languages
 

00:10:13.250 --> 00:10:16.629 align:start position:0%
we compare 14 with swift the languages
the<00:10:14.000><c> language</c><00:10:14.269><c> created</c><00:10:14.660><c> by</c><00:10:14.810><c> Apple</c><00:10:15.319><c> to</c><00:10:15.639><c> develop</c>

00:10:16.629 --> 00:10:16.639 align:start position:0%
the language created by Apple to develop
 

00:10:16.639 --> 00:10:19.269 align:start position:0%
the language created by Apple to develop
iOS<00:10:17.029><c> application</c><00:10:17.600><c> and</c><00:10:17.839><c> that</c><00:10:18.139><c> is</c><00:10:18.529><c> now</c><00:10:19.010><c> coming</c>

00:10:19.269 --> 00:10:19.279 align:start position:0%
iOS application and that is now coming
 

00:10:19.279 --> 00:10:21.220 align:start position:0%
iOS application and that is now coming
for<00:10:19.790><c> developing</c><00:10:20.240><c> server-side</c><00:10:20.720><c> application</c>

00:10:21.220 --> 00:10:21.230 align:start position:0%
for developing server-side application
 

00:10:21.230 --> 00:10:25.329 align:start position:0%
for developing server-side application
with<00:10:21.500><c> IBM</c><00:10:21.949><c> and</c><00:10:22.160><c> companies</c><00:10:23.149><c> like</c><00:10:23.300><c> that</c><00:10:23.449><c> I</c><00:10:24.350><c> felt</c>

00:10:25.329 --> 00:10:25.339 align:start position:0%
with IBM and companies like that I felt
 

00:10:25.339 --> 00:10:28.059 align:start position:0%
with IBM and companies like that I felt
that<00:10:25.490><c> in</c><00:10:26.329><c> terms</c><00:10:26.510><c> of</c><00:10:26.569><c> syntax</c><00:10:27.019><c> Swift</c><00:10:27.800><c> and</c>

00:10:28.059 --> 00:10:28.069 align:start position:0%
that in terms of syntax Swift and
 

00:10:28.069 --> 00:10:31.329 align:start position:0%
that in terms of syntax Swift and
cocaine<00:10:28.430><c> are</c><00:10:28.639><c> very</c><00:10:29.000><c> very</c><00:10:29.569><c> very</c><00:10:30.170><c> similar</c><00:10:30.589><c> you</c>

00:10:31.329 --> 00:10:31.339 align:start position:0%
cocaine are very very very similar you
 

00:10:31.339 --> 00:10:33.610 align:start position:0%
cocaine are very very very similar you
will<00:10:31.519><c> see</c><00:10:31.790><c> that</c><00:10:31.970><c> there</c><00:10:32.540><c> is</c><00:10:32.660><c> a</c><00:10:32.690><c> lot</c><00:10:32.959><c> of</c><00:10:33.170><c> syntax</c>

00:10:33.610 --> 00:10:33.620 align:start position:0%
will see that there is a lot of syntax
 

00:10:33.620 --> 00:10:37.420 align:start position:0%
will see that there is a lot of syntax
in<00:10:34.310><c> command</c><00:10:35.079><c> so</c><00:10:36.079><c> one</c><00:10:36.410><c> of</c><00:10:36.440><c> the</c><00:10:36.649><c> mains</c><00:10:36.860><c> are</c><00:10:37.160><c> there</c>

00:10:37.420 --> 00:10:37.430 align:start position:0%
in command so one of the mains are there
 

00:10:37.430 --> 00:10:39.370 align:start position:0%
in command so one of the mains are there
is<00:10:37.519><c> a</c><00:10:37.550><c> lot</c><00:10:37.699><c> of</c><00:10:37.730><c> differences</c><00:10:38.269><c> but</c><00:10:38.480><c> one</c><00:10:39.110><c> of</c><00:10:39.139><c> the</c>

00:10:39.370 --> 00:10:39.380 align:start position:0%
is a lot of differences but one of the
 

00:10:39.380 --> 00:10:43.269 align:start position:0%
is a lot of differences but one of the
main<00:10:39.589><c> is</c><00:10:39.889><c> that</c><00:10:40.459><c> Swift</c><00:10:41.389><c> is</c><00:10:41.630><c> 11</c><00:10:42.199><c> based</c><00:10:42.440><c> so</c><00:10:42.769><c> LLVM</c>

00:10:43.269 --> 00:10:43.279 align:start position:0%
main is that Swift is 11 based so LLVM
 

00:10:43.279 --> 00:10:45.490 align:start position:0%
main is that Swift is 11 based so LLVM
is<00:10:43.399><c> byte</c><00:10:43.670><c> code</c><00:10:43.940><c> where</c><00:10:44.630><c> we</c><00:10:44.660><c> Lola</c><00:10:44.959><c> well</c><00:10:45.230><c> coming</c>

00:10:45.490 --> 00:10:45.500 align:start position:0%
is byte code where we Lola well coming
 

00:10:45.500 --> 00:10:49.030 align:start position:0%
is byte code where we Lola well coming
from<00:10:45.649><c> cc</c><00:10:46.339><c> precipice</c><00:10:46.730><c> world</c><00:10:46.940><c> that</c><00:10:47.870><c> is</c><00:10:48.170><c> data</c>

00:10:49.030 --> 00:10:49.040 align:start position:0%
from cc precipice world that is data
 

00:10:49.040 --> 00:10:51.490 align:start position:0%
from cc precipice world that is data
load<00:10:49.310><c> to</c><00:10:49.550><c> generate</c><00:10:50.120><c> some</c><00:10:50.449><c> native</c><00:10:50.959><c> code</c><00:10:51.199><c> for</c>

00:10:51.490 --> 00:10:51.500 align:start position:0%
load to generate some native code for
 

00:10:51.500 --> 00:10:55.449 align:start position:0%
load to generate some native code for
BIOS<00:10:51.829><c> platforms</c><00:10:52.339><c> so</c><00:10:53.300><c> that's</c><00:10:53.660><c> a</c><00:10:53.839><c> kind</c><00:10:54.139><c> of</c><00:10:54.459><c> byte</c>

00:10:55.449 --> 00:10:55.459 align:start position:0%
BIOS platforms so that's a kind of byte
 

00:10:55.459 --> 00:10:57.790 align:start position:0%
BIOS platforms so that's a kind of byte
code<00:10:55.730><c> but</c><00:10:55.970><c> more</c><00:10:56.329><c> for</c><00:10:56.600><c> the</c><00:10:56.810><c> compile</c><00:10:57.260><c> time</c><00:10:57.290><c> not</c>

00:10:57.790 --> 00:10:57.800 align:start position:0%
code but more for the compile time not
 

00:10:57.800 --> 00:10:59.889 align:start position:0%
code but more for the compile time not
for<00:10:58.040><c> the</c><00:10:58.220><c> execution</c><00:10:58.940><c> time</c><00:10:59.180><c> so</c><00:10:59.420><c> not</c><00:10:59.660><c> for</c><00:10:59.779><c> the</c>

00:10:59.889 --> 00:10:59.899 align:start position:0%
for the execution time so not for the
 

00:10:59.899 --> 00:11:04.030 align:start position:0%
for the execution time so not for the
run<00:11:00.050><c> time</c><00:11:00.260><c> and</c><00:11:00.850><c> so</c><00:11:01.850><c> switched</c><00:11:02.420><c> as</c><00:11:02.600><c> C</c><00:11:03.470><c> and</c><00:11:03.800><c> C++</c>

00:11:04.030 --> 00:11:04.040 align:start position:0%
run time and so switched as C and C++
 

00:11:04.040 --> 00:11:05.920 align:start position:0%
run time and so switched as C and C++
interoperability<00:11:05.029><c> where</c>

00:11:05.920 --> 00:11:05.930 align:start position:0%
interoperability where
 

00:11:05.930 --> 00:11:09.730 align:start position:0%
interoperability where
code<00:11:06.110><c> clean</c><00:11:06.350><c> is</c><00:11:06.589><c> more</c><00:11:07.420><c> gvm</c><00:11:08.420><c> based</c><00:11:08.660><c> and</c><00:11:08.990><c> as</c><00:11:09.170><c> very</c>

00:11:09.730 --> 00:11:09.740 align:start position:0%
code clean is more gvm based and as very
 

00:11:09.740 --> 00:11:12.160 align:start position:0%
code clean is more gvm based and as very
good<00:11:09.980><c> Java</c><00:11:10.220><c> interoperability</c><00:11:10.760><c> but</c><00:11:11.689><c> really</c>

00:11:12.160 --> 00:11:12.170 align:start position:0%
good Java interoperability but really
 

00:11:12.170 --> 00:11:14.530 align:start position:0%
good Java interoperability but really
this<00:11:12.709><c> these</c><00:11:13.220><c> two</c><00:11:13.399><c> languages</c><00:11:13.850><c> are</c><00:11:14.029><c> very</c><00:11:14.240><c> close</c>

00:11:14.530 --> 00:11:14.540 align:start position:0%
this these two languages are very close
 

00:11:14.540 --> 00:11:15.350 align:start position:0%
this these two languages are very close
and<00:11:14.839><c> I</c><00:11:15.019><c> think</c>

00:11:15.350 --> 00:11:15.360 align:start position:0%
and I think
 

00:11:15.360 --> 00:11:18.829 align:start position:0%
and I think
these<00:11:15.480><c> two</c><00:11:15.600><c> languages</c><00:11:15.930><c> are</c><00:11:16.230><c> very</c><00:11:16.529><c> great</c><00:11:17.839><c> very</c>

00:11:18.829 --> 00:11:18.839 align:start position:0%
these two languages are very great very
 

00:11:18.839 --> 00:11:24.290 align:start position:0%
these two languages are very great very
great<00:11:20.600><c> so</c><00:11:21.600><c> this</c><00:11:21.720><c> is</c><00:11:21.839><c> some</c><00:11:21.990><c> code</c><00:11:22.200><c> here</c><00:11:23.149><c> we</c><00:11:24.149><c> have</c>

00:11:24.290 --> 00:11:24.300 align:start position:0%
great so this is some code here we have
 

00:11:24.300 --> 00:11:28.460 align:start position:0%
great so this is some code here we have
a<00:11:24.329><c> user</c><00:11:24.959><c> class</c><00:11:26.450><c> which</c><00:11:27.450><c> defines</c><00:11:27.959><c> four</c>

00:11:28.460 --> 00:11:28.470 align:start position:0%
a user class which defines four
 

00:11:28.470 --> 00:11:30.470 align:start position:0%
a user class which defines four
properties<00:11:28.800><c> user</c><00:11:29.370><c> name</c><00:11:29.640><c> first</c><00:11:29.940><c> name</c><00:11:30.060><c> last</c>

00:11:30.470 --> 00:11:30.480 align:start position:0%
properties user name first name last
 

00:11:30.480 --> 00:11:34.759 align:start position:0%
properties user name first name last
name<00:11:30.660><c> and</c><00:11:30.959><c> location</c><00:11:31.610><c> so</c><00:11:32.610><c> you</c><00:11:33.570><c> can</c><00:11:34.260><c> see</c><00:11:34.500><c> that</c>

00:11:34.759 --> 00:11:34.769 align:start position:0%
name and location so you can see that
 

00:11:34.769 --> 00:11:37.310 align:start position:0%
name and location so you can see that
with<00:11:35.010><c> this</c><00:11:35.250><c> short</c><00:11:35.760><c> syntax</c><00:11:36.149><c> that</c><00:11:36.240><c> you</c><00:11:36.480><c> can</c><00:11:37.050><c> find</c>

00:11:37.310 --> 00:11:37.320 align:start position:0%
with this short syntax that you can find
 

00:11:37.320 --> 00:11:41.420 align:start position:0%
with this short syntax that you can find
something<00:11:38.250><c> close</c><00:11:38.490><c> in</c><00:11:38.700><c> scala</c><00:11:39.170><c> i</c><00:11:40.170><c> at</c><00:11:41.040><c> the</c><00:11:41.220><c> same</c>

00:11:41.420 --> 00:11:41.430 align:start position:0%
something close in scala i at the same
 

00:11:41.430 --> 00:11:43.550 align:start position:0%
something close in scala i at the same
time<00:11:41.670><c> additions</c><00:11:42.329><c> of</c><00:11:42.450><c> a</c><00:11:42.630><c> defined</c><00:11:43.230><c> to</c><00:11:43.350><c> four</c>

00:11:43.550 --> 00:11:43.560 align:start position:0%
time additions of a defined to four
 

00:11:43.560 --> 00:11:46.579 align:start position:0%
time additions of a defined to four
properties<00:11:43.890><c> and</c><00:11:44.339><c> I</c><00:11:45.300><c> also</c><00:11:45.810><c> defined</c><00:11:46.500><c> the</c>

00:11:46.579 --> 00:11:46.589 align:start position:0%
properties and I also defined the
 

00:11:46.589 --> 00:11:50.569 align:start position:0%
properties and I also defined the
constructor<00:11:47.130><c> of</c><00:11:47.339><c> this</c><00:11:47.820><c> class</c><00:11:49.310><c> there</c><00:11:50.310><c> is</c><00:11:50.339><c> the</c>

00:11:50.569 --> 00:11:50.579 align:start position:0%
constructor of this class there is the
 

00:11:50.579 --> 00:11:52.550 align:start position:0%
constructor of this class there is the
VAR<00:11:50.820><c> keyword</c><00:11:51.029><c> before</c><00:11:51.510><c> user</c><00:11:51.990><c> name</c><00:11:52.260><c> first</c><00:11:52.470><c> name</c>

00:11:52.550 --> 00:11:52.560 align:start position:0%
VAR keyword before user name first name
 

00:11:52.560 --> 00:11:55.069 align:start position:0%
VAR keyword before user name first name
last<00:11:52.769><c> name</c><00:11:52.890><c> and</c><00:11:53.040><c> location</c><00:11:53.250><c> vast</c><00:11:54.180><c> significant</c>

00:11:55.069 --> 00:11:55.079 align:start position:0%
last name and location vast significant
 

00:11:55.079 --> 00:11:57.920 align:start position:0%
last name and location vast significant
that<00:11:55.200><c> via</c><00:11:55.769><c> the</c><00:11:56.130><c> properties</c><00:11:56.610><c> me</c><00:11:56.850><c> table</c><00:11:57.209><c> I</c><00:11:57.390><c> could</c>

00:11:57.920 --> 00:11:57.930 align:start position:0%
that via the properties me table I could
 

00:11:57.930 --> 00:12:00.769 align:start position:0%
that via the properties me table I could
have<00:11:58.320><c> used</c><00:11:58.500><c> Val</c><00:11:58.800><c> to</c><00:11:59.250><c> say</c><00:11:59.490><c> that</c><00:11:59.730><c> property</c><00:12:00.570><c> will</c>

00:12:00.769 --> 00:12:00.779 align:start position:0%
have used Val to say that property will
 

00:12:00.779 --> 00:12:06.380 align:start position:0%
have used Val to say that property will
not<00:12:01.880><c> we're</c><00:12:02.880><c> not</c><00:12:03.029><c> very</c><00:12:04.430><c> unlike</c><00:12:05.430><c> in</c><00:12:06.000><c> Java</c><00:12:06.329><c> the</c>

00:12:06.380 --> 00:12:06.390 align:start position:0%
not we're not very unlike in Java the
 

00:12:06.390 --> 00:12:09.670 align:start position:0%
not we're not very unlike in Java the
type<00:12:06.870><c> is</c><00:12:07.140><c> after</c><00:12:07.589><c> the</c><00:12:08.010><c> name</c><00:12:08.220><c> of</c><00:12:08.490><c> the</c><00:12:08.579><c> property</c>

00:12:09.670 --> 00:12:09.680 align:start position:0%
type is after the name of the property
 

00:12:09.680 --> 00:12:12.440 align:start position:0%
type is after the name of the property
so<00:12:10.680><c> this</c><00:12:11.010><c> will</c><00:12:11.279><c> generate</c><00:12:11.790><c> the</c><00:12:11.850><c> getters</c><00:12:12.420><c> and</c>

00:12:12.440 --> 00:12:12.450 align:start position:0%
so this will generate the getters and
 

00:12:12.450 --> 00:12:14.300 align:start position:0%
so this will generate the getters and
setters<00:12:12.720><c> you</c><00:12:13.230><c> don't</c><00:12:13.440><c> have</c><00:12:13.589><c> to</c><00:12:13.769><c> define</c><00:12:14.160><c> the</c>

00:12:14.300 --> 00:12:14.310 align:start position:0%
setters you don't have to define the
 

00:12:14.310 --> 00:12:16.040 align:start position:0%
setters you don't have to define the
field<00:12:14.579><c> and</c><00:12:14.820><c> get</c><00:12:15.209><c> all</c><00:12:15.329><c> the</c><00:12:15.480><c> setters</c><00:12:15.779><c> that's</c>

00:12:16.040 --> 00:12:16.050 align:start position:0%
field and get all the setters that's
 

00:12:16.050 --> 00:12:18.050 align:start position:0%
field and get all the setters that's
that's<00:12:16.740><c> all</c><00:12:16.890><c> done</c><00:12:17.070><c> you</c><00:12:17.220><c> can</c><00:12:17.430><c> also</c><00:12:17.700><c> customize</c>

00:12:18.050 --> 00:12:18.060 align:start position:0%
that's all done you can also customize
 

00:12:18.060 --> 00:12:22.400 align:start position:0%
that's all done you can also customize
the<00:12:18.750><c> ketosis</c><00:12:19.350><c> and</c><00:12:19.769><c> the</c><00:12:19.920><c> setter</c><00:12:20.100><c> and</c><00:12:21.260><c> if</c><00:12:22.260><c> you</c>

00:12:22.400 --> 00:12:22.410 align:start position:0%
the ketosis and the setter and if you
 

00:12:22.410 --> 00:12:24.290 align:start position:0%
the ketosis and the setter and if you
have<00:12:22.529><c> a</c><00:12:22.560><c> look</c><00:12:22.740><c> to</c><00:12:22.890><c> the</c><00:12:23.010><c> last</c><00:12:23.300><c> property</c>

00:12:24.290 --> 00:12:24.300 align:start position:0%
have a look to the last property
 

00:12:24.300 --> 00:12:25.910 align:start position:0%
have a look to the last property
location<00:12:24.600><c> you</c><00:12:24.959><c> will</c><00:12:25.079><c> see</c><00:12:25.350><c> a</c><00:12:25.380><c> question</c><00:12:25.769><c> mark</c>

00:12:25.910 --> 00:12:25.920 align:start position:0%
location you will see a question mark
 

00:12:25.920 --> 00:12:31.189 align:start position:0%
location you will see a question mark
after<00:12:26.160><c> so</c><00:12:26.730><c> point</c><00:12:27.000><c> is</c><00:12:27.240><c> a</c><00:12:27.300><c> is</c><00:12:27.779><c> a</c><00:12:27.839><c> type</c><00:12:28.550><c> with</c><00:12:30.199><c> yeah</c>

00:12:31.189 --> 00:12:31.199 align:start position:0%
after so point is a is a type with yeah
 

00:12:31.199 --> 00:12:33.829 align:start position:0%
after so point is a is a type with yeah
that's<00:12:31.500><c> that</c><00:12:31.829><c> just</c><00:12:32.070><c> a</c><00:12:32.160><c> geometry</c><00:12:32.640><c> type</c><00:12:33.120><c> but</c>

00:12:33.829 --> 00:12:33.839 align:start position:0%
that's that just a geometry type but
 

00:12:33.839 --> 00:12:36.019 align:start position:0%
that's that just a geometry type but
there<00:12:33.930><c> is</c><00:12:34.079><c> a</c><00:12:34.110><c> question</c><00:12:34.800><c> mark</c><00:12:34.949><c> at</c><00:12:35.250><c> the</c><00:12:35.310><c> end</c><00:12:35.550><c> of</c>

00:12:36.019 --> 00:12:36.029 align:start position:0%
there is a question mark at the end of
 

00:12:36.029 --> 00:12:38.630 align:start position:0%
there is a question mark at the end of
the<00:12:36.269><c> on</c><00:12:37.019><c> the</c><00:12:37.199><c> type</c><00:12:37.410><c> that</c><00:12:37.800><c> means</c><00:12:38.100><c> that</c><00:12:38.430><c> this</c>

00:12:38.630 --> 00:12:38.640 align:start position:0%
the on the type that means that this
 

00:12:38.640 --> 00:12:44.990 align:start position:0%
the on the type that means that this
type<00:12:38.880><c> is</c><00:12:39.029><c> new</c><00:12:39.240><c> label</c><00:12:39.510><c> because</c><00:12:39.810><c> in</c><00:12:40.079><c> Catalan</c><00:12:44.000><c> by</c>

00:12:44.990 --> 00:12:45.000 align:start position:0%
type is new label because in Catalan by
 

00:12:45.000 --> 00:12:48.350 align:start position:0%
type is new label because in Catalan by
default<00:12:46.399><c> variables</c><00:12:47.399><c> or</c><00:12:47.640><c> property</c><00:12:48.060><c> that</c><00:12:48.209><c> you</c>

00:12:48.350 --> 00:12:48.360 align:start position:0%
default variables or property that you
 

00:12:48.360 --> 00:12:51.079 align:start position:0%
default variables or property that you
define<00:12:48.720><c> are</c><00:12:49.079><c> not</c><00:12:49.500><c> available</c><00:12:49.980><c> and</c><00:12:50.190><c> that</c><00:12:50.250><c> check</c>

00:12:51.079 --> 00:12:51.089 align:start position:0%
define are not available and that check
 

00:12:51.089 --> 00:12:53.449 align:start position:0%
define are not available and that check
during<00:12:51.329><c> the</c><00:12:51.570><c> compilation</c><00:12:51.839><c> so</c><00:12:52.459><c> everywhere</c>

00:12:53.449 --> 00:12:53.459 align:start position:0%
during the compilation so everywhere
 

00:12:53.459 --> 00:12:55.069 align:start position:0%
during the compilation so everywhere
where<00:12:53.940><c> you</c><00:12:53.970><c> could</c><00:12:54.360><c> just</c><00:12:54.540><c> a</c><00:12:54.630><c> new</c><00:12:54.779><c> pointer</c>

00:12:55.069 --> 00:12:55.079 align:start position:0%
where you could just a new pointer
 

00:12:55.079 --> 00:12:56.540 align:start position:0%
where you could just a new pointer
exception<00:12:55.529><c> you</c><00:12:55.649><c> will</c><00:12:55.800><c> have</c><00:12:55.920><c> to</c><00:12:56.040><c> under</c><00:12:56.370><c> that</c>

00:12:56.540 --> 00:12:56.550 align:start position:0%
exception you will have to under that
 

00:12:56.550 --> 00:12:59.680 align:start position:0%
exception you will have to under that
and<00:12:56.850><c> by</c><00:12:57.600><c> default</c><00:12:57.779><c> encoding</c><00:12:58.380><c> you</c><00:12:58.890><c> can't</c><00:12:59.190><c> set</c>

00:12:59.680 --> 00:12:59.690 align:start position:0%
and by default encoding you can't set
 

00:12:59.690 --> 00:13:04.160 align:start position:0%
and by default encoding you can't set
something<00:13:00.690><c> to</c><00:13:00.870><c> know</c><00:13:01.970><c> if</c><00:13:02.970><c> I</c><00:13:03.209><c> add</c><00:13:03.390><c> a</c><00:13:03.750><c> question</c>

00:13:04.160 --> 00:13:04.170 align:start position:0%
something to know if I add a question
 

00:13:04.170 --> 00:13:06.290 align:start position:0%
something to know if I add a question
mark<00:13:04.380><c> after</c><00:13:04.829><c> the</c><00:13:05.040><c> type</c><00:13:05.310><c> that</c><00:13:05.670><c> means</c><00:13:05.850><c> that</c><00:13:06.149><c> this</c>

00:13:06.290 --> 00:13:06.300 align:start position:0%
mark after the type that means that this
 

00:13:06.300 --> 00:13:09.910 align:start position:0%
mark after the type that means that this
type<00:13:06.540><c> is</c><00:13:06.839><c> is</c><00:13:07.470><c> is</c><00:13:08.130><c> new</c><00:13:08.370><c> label</c><00:13:08.640><c> basically</c><00:13:09.089><c> and</c>

00:13:09.910 --> 00:13:09.920 align:start position:0%
type is is is new label basically and
 

00:13:09.920 --> 00:13:13.340 align:start position:0%
type is is is new label basically and
you<00:13:10.920><c> see</c><00:13:11.220><c> that</c><00:13:11.459><c> there</c><00:13:11.670><c> is</c><00:13:11.820><c> equal</c><00:13:12.269><c> new</c><00:13:12.570><c> at</c><00:13:13.170><c> the</c>

00:13:13.340 --> 00:13:13.350 align:start position:0%
you see that there is equal new at the
 

00:13:13.350 --> 00:13:17.240 align:start position:0%
you see that there is equal new at the
end<00:13:13.589><c> of</c><00:13:14.130><c> the</c><00:13:14.370><c> line</c><00:13:14.839><c> that</c><00:13:15.839><c> that</c><00:13:16.709><c> means</c><00:13:16.949><c> that</c><00:13:17.220><c> I</c>

00:13:17.240 --> 00:13:17.250 align:start position:0%
end of the line that that means that I
 

00:13:17.250 --> 00:13:19.850 align:start position:0%
end of the line that that means that I
am<00:13:17.399><c> giving</c><00:13:18.329><c> a</c><00:13:18.360><c> default</c><00:13:18.959><c> value</c><00:13:19.230><c> for</c><00:13:19.440><c> the</c><00:13:19.680><c> last</c>

00:13:19.850 --> 00:13:19.860 align:start position:0%
am giving a default value for the last
 

00:13:19.860 --> 00:13:22.670 align:start position:0%
am giving a default value for the last
parameter<00:13:20.100><c> so</c><00:13:20.699><c> in</c><00:13:21.600><c> practice</c><00:13:22.050><c> that</c><00:13:22.260><c> allow</c><00:13:22.500><c> me</c>

00:13:22.670 --> 00:13:22.680 align:start position:0%
parameter so in practice that allow me
 

00:13:22.680 --> 00:13:27.439 align:start position:0%
parameter so in practice that allow me
to<00:13:22.980><c> to</c><00:13:23.610><c> create</c><00:13:24.000><c> a</c><00:13:24.860><c> user</c><00:13:25.860><c> just</c><00:13:26.610><c> using</c><00:13:26.940><c> user</c><00:13:27.180><c> name</c>

00:13:27.439 --> 00:13:27.449 align:start position:0%
to to create a user just using user name
 

00:13:27.449 --> 00:13:27.900 align:start position:0%
to to create a user just using user name
first<00:13:27.660><c> name</c>

00:13:27.900 --> 00:13:27.910 align:start position:0%
first name
 

00:13:27.910 --> 00:13:32.540 align:start position:0%
first name
last<00:13:28.120><c> name</c><00:13:28.300><c> or</c><00:13:30.000><c> by</c><00:13:31.000><c> using</c><00:13:31.240><c> a</c><00:13:31.540><c> fourth</c><00:13:32.080><c> parameter</c>

00:13:32.540 --> 00:13:32.550 align:start position:0%
last name or by using a fourth parameter
 

00:13:32.550 --> 00:13:35.640 align:start position:0%
last name or by using a fourth parameter
which<00:13:33.550><c> is</c><00:13:33.580><c> the</c><00:13:33.880><c> location</c><00:13:34.180><c> and</c><00:13:34.510><c> I</c><00:13:35.080><c> can</c><00:13:35.320><c> do</c><00:13:35.470><c> that</c>

00:13:35.640 --> 00:13:35.650 align:start position:0%
which is the location and I can do that
 

00:13:35.650 --> 00:13:37.860 align:start position:0%
which is the location and I can do that
without<00:13:35.950><c> redefining</c><00:13:36.670><c> an</c><00:13:37.300><c> overloaded</c>

00:13:37.860 --> 00:13:37.870 align:start position:0%
without redefining an overloaded
 

00:13:37.870 --> 00:13:39.780 align:start position:0%
without redefining an overloaded
constructor<00:13:38.020><c> that</c><00:13:39.010><c> allow</c><00:13:39.310><c> us</c><00:13:39.430><c> to</c><00:13:39.610><c> produce</c>

00:13:39.780 --> 00:13:39.790 align:start position:0%
constructor that allow us to produce
 

00:13:39.790 --> 00:13:42.960 align:start position:0%
constructor that allow us to produce
more<00:13:40.000><c> concise</c><00:13:40.780><c> code</c><00:13:41.100><c> that</c><00:13:42.100><c> allows</c><00:13:42.340><c> to</c><00:13:42.670><c> make</c>

00:13:42.960 --> 00:13:42.970 align:start position:0%
more concise code that allows to make
 

00:13:42.970 --> 00:13:44.880 align:start position:0%
more concise code that allows to make
that<00:13:43.330><c> code</c><00:13:43.540><c> more</c><00:13:43.810><c> readable</c><00:13:43.840><c> and</c><00:13:44.410><c> that's</c><00:13:44.650><c> quite</c>

00:13:44.880 --> 00:13:44.890 align:start position:0%
that code more readable and that's quite
 

00:13:44.890 --> 00:13:47.790 align:start position:0%
that code more readable and that's quite
important<00:13:45.370><c> at</c><00:13:45.550><c> the</c><00:13:45.820><c> right</c><00:13:46.060><c> I</c><00:13:46.390><c> think</c><00:13:47.260><c> you</c><00:13:47.440><c> won't</c>

00:13:47.790 --> 00:13:47.800 align:start position:0%
important at the right I think you won't
 

00:13:47.800 --> 00:13:51.990 align:start position:0%
important at the right I think you won't
be<00:13:47.950><c> able</c><00:13:48.040><c> to</c><00:13:48.190><c> read</c><00:13:48.490><c> but</c><00:13:48.850><c> just</c><00:13:49.720><c> to</c><00:13:49.840><c> show</c><00:13:50.020><c> you</c><00:13:51.000><c> the</c>

00:13:51.990 --> 00:13:52.000 align:start position:0%
be able to read but just to show you the
 

00:13:52.000 --> 00:13:54.900 align:start position:0%
be able to read but just to show you the
same<00:13:52.330><c> code</c><00:13:52.750><c> in</c><00:13:53.140><c> Java</c><00:13:53.470><c> it's</c><00:13:54.130><c> much</c><00:13:54.460><c> more</c><00:13:54.730><c> longer</c>

00:13:54.900 --> 00:13:54.910 align:start position:0%
same code in Java it's much more longer
 

00:13:54.910 --> 00:13:57.990 align:start position:0%
same code in Java it's much more longer
we<00:13:55.630><c> all</c><00:13:55.840><c> have</c><00:13:56.080><c> ideas</c><00:13:56.620><c> that</c><00:13:56.980><c> allow</c><00:13:57.520><c> us</c><00:13:57.760><c> to</c>

00:13:57.990 --> 00:13:58.000 align:start position:0%
we all have ideas that allow us to
 

00:13:58.000 --> 00:14:00.840 align:start position:0%
we all have ideas that allow us to
generate<00:13:58.150><c> the</c><00:13:58.600><c> Gator</c><00:13:58.810><c> setters</c><00:13:59.590><c> easily</c><00:14:00.010><c> even</c>

00:14:00.840 --> 00:14:00.850 align:start position:0%
generate the Gator setters easily even
 

00:14:00.850 --> 00:14:02.610 align:start position:0%
generate the Gator setters easily even
the<00:14:01.000><c> equals</c><00:14:01.360><c> and</c><00:14:01.510><c> hashcode</c><00:14:01.630><c> methods</c><00:14:02.170><c> but</c><00:14:02.350><c> my</c>

00:14:02.610 --> 00:14:02.620 align:start position:0%
the equals and hashcode methods but my
 

00:14:02.620 --> 00:14:04.950 align:start position:0%
the equals and hashcode methods but my
point<00:14:02.800><c> is</c><00:14:02.950><c> not</c><00:14:03.130><c> here</c><00:14:03.400><c> my</c><00:14:03.580><c> point</c><00:14:03.790><c> is</c><00:14:03.910><c> that</c><00:14:03.960><c> when</c>

00:14:04.950 --> 00:14:04.960 align:start position:0%
point is not here my point is that when
 

00:14:04.960 --> 00:14:07.350 align:start position:0%
point is not here my point is that when
the<00:14:05.380><c> time</c><00:14:05.560><c> comes</c><00:14:05.890><c> to</c><00:14:05.980><c> read</c><00:14:06.460><c> your</c><00:14:06.910><c> code</c><00:14:07.120><c> I</c>

00:14:07.350 --> 00:14:07.360 align:start position:0%
the time comes to read your code I
 

00:14:07.360 --> 00:14:09.750 align:start position:0%
the time comes to read your code I
really<00:14:08.200><c> prefer</c><00:14:08.350><c> to</c><00:14:08.590><c> read</c><00:14:09.010><c> a</c><00:14:09.250><c> cartoon</c><00:14:09.610><c> version</c>

00:14:09.750 --> 00:14:09.760 align:start position:0%
really prefer to read a cartoon version
 

00:14:09.760 --> 00:14:13.890 align:start position:0%
really prefer to read a cartoon version
than<00:14:10.750><c> the</c><00:14:11.680><c> Java</c><00:14:12.460><c> version</c><00:14:12.850><c> where</c><00:14:13.060><c> as</c><00:14:13.510><c> a</c><00:14:13.570><c> clear</c>

00:14:13.890 --> 00:14:13.900 align:start position:0%
than the Java version where as a clear
 

00:14:13.900 --> 00:14:15.540 align:start position:0%
than the Java version where as a clear
book<00:14:14.080><c> could</c><00:14:14.350><c> be</c><00:14:14.500><c> anywhere</c><00:14:15.070><c> and</c><00:14:15.130><c> there</c><00:14:15.430><c> is</c><00:14:15.520><c> a</c>

00:14:15.540 --> 00:14:15.550 align:start position:0%
book could be anywhere and there is a
 

00:14:15.550 --> 00:14:23.220 align:start position:0%
book could be anywhere and there is a
lot<00:14:15.700><c> of</c><00:14:15.850><c> code</c><00:14:16.060><c> and</c><00:14:16.300><c> a</c><00:14:16.360><c> lot</c><00:14:16.480><c> of</c><00:14:16.600><c> noise</c><00:14:16.810><c> so</c><00:14:21.750><c> so</c><00:14:22.750><c> I</c>

00:14:23.220 --> 00:14:23.230 align:start position:0%
lot of code and a lot of noise so so I
 

00:14:23.230 --> 00:14:25.950 align:start position:0%
lot of code and a lot of noise so so I
can<00:14:23.920><c> add</c><00:14:24.130><c> a</c><00:14:24.160><c> data</c><00:14:24.550><c> keyword</c><00:14:25.210><c> before</c><00:14:25.450><c> the</c><00:14:25.750><c> class</c>

00:14:25.950 --> 00:14:25.960 align:start position:0%
can add a data keyword before the class
 

00:14:25.960 --> 00:14:28.500 align:start position:0%
can add a data keyword before the class
in<00:14:26.380><c> order</c><00:14:26.560><c> to</c><00:14:26.740><c> say</c><00:14:27.430><c> that</c><00:14:27.790><c> I</c><00:14:27.820><c> want</c><00:14:28.150><c> also</c><00:14:28.330><c> to</c>

00:14:28.500 --> 00:14:28.510 align:start position:0%
in order to say that I want also to
 

00:14:28.510 --> 00:14:30.900 align:start position:0%
in order to say that I want also to
automatically<00:14:29.380><c> generates</c><00:14:29.830><c> equals</c><00:14:30.670><c> and</c>

00:14:30.900 --> 00:14:30.910 align:start position:0%
automatically generates equals and
 

00:14:30.910 --> 00:14:32.420 align:start position:0%
automatically generates equals and
hashcode<00:14:31.000><c> methods</c>

00:14:32.420 --> 00:14:32.430 align:start position:0%
hashcode methods
 

00:14:32.430 --> 00:14:36.360 align:start position:0%
hashcode methods
so<00:14:33.430><c> that's</c><00:14:33.990><c> syntactic</c><00:14:34.990><c> sugar</c><00:14:35.020><c> that</c><00:14:35.530><c> still</c>

00:14:36.360 --> 00:14:36.370 align:start position:0%
so that's syntactic sugar that still
 

00:14:36.370 --> 00:14:41.060 align:start position:0%
so that's syntactic sugar that still
allow<00:14:36.580><c> us</c><00:14:36.790><c> to</c><00:14:37.090><c> to</c><00:14:37.390><c> write</c><00:14:37.600><c> more</c><00:14:38.230><c> concise</c><00:14:38.860><c> code</c>

00:14:41.060 --> 00:14:41.070 align:start position:0%
allow us to to write more concise code
 

00:14:41.070 --> 00:14:43.410 align:start position:0%
allow us to to write more concise code
coding<00:14:42.070><c> as</c><00:14:42.280><c> optional</c><00:14:42.700><c> and</c><00:14:42.970><c> named</c><00:14:43.150><c> parameters</c>

00:14:43.410 --> 00:14:43.420 align:start position:0%
coding as optional and named parameters
 

00:14:43.420 --> 00:14:46.050 align:start position:0%
coding as optional and named parameters
so<00:14:44.050><c> if</c><00:14:44.740><c> we</c><00:14:44.890><c> have</c><00:14:44.980><c> a</c><00:14:45.010><c> look</c><00:14:45.190><c> to</c><00:14:45.370><c> this</c><00:14:45.520><c> reformat</c>

00:14:46.050 --> 00:14:46.060 align:start position:0%
so if we have a look to this reformat
 

00:14:46.060 --> 00:14:49.770 align:start position:0%
so if we have a look to this reformat
function<00:14:46.770><c> you</c><00:14:47.770><c> see</c><00:14:48.070><c> that</c><00:14:48.250><c> I</c><00:14:48.580><c> have</c><00:14:48.970><c> a</c><00:14:49.000><c> string</c>

00:14:49.770 --> 00:14:49.780 align:start position:0%
function you see that I have a string
 

00:14:49.780 --> 00:14:53.430 align:start position:0%
function you see that I have a string
mandatory<00:14:50.410><c> parameter</c><00:14:51.450><c> and</c><00:14:52.450><c> after</c><00:14:52.960><c> that</c><00:14:53.110><c> I</c>

00:14:53.430 --> 00:14:53.440 align:start position:0%
mandatory parameter and after that I
 

00:14:53.440 --> 00:14:56.160 align:start position:0%
mandatory parameter and after that I
have<00:14:54.010><c> four</c><00:14:54.360><c> optional</c><00:14:55.360><c> parameters</c><00:14:55.840><c> they</c><00:14:56.140><c> are</c>

00:14:56.160 --> 00:14:56.170 align:start position:0%
have four optional parameters they are
 

00:14:56.170 --> 00:14:59.040 align:start position:0%
have four optional parameters they are
optional<00:14:56.650><c> because</c><00:14:57.070><c> I</c><00:14:57.780><c> define</c><00:14:58.780><c> a</c><00:14:58.810><c> default</c>

00:14:59.040 --> 00:14:59.050 align:start position:0%
optional because I define a default
 

00:14:59.050 --> 00:15:00.960 align:start position:0%
optional because I define a default
value<00:14:59.260><c> so</c><00:14:59.650><c> if</c><00:15:00.190><c> you</c><00:15:00.340><c> don't</c><00:15:00.580><c> provide</c><00:15:00.820><c> these</c>

00:15:00.960 --> 00:15:00.970 align:start position:0%
value so if you don't provide these
 

00:15:00.970 --> 00:15:02.580 align:start position:0%
value so if you don't provide these
parameters<00:15:01.600><c> the</c><00:15:01.720><c> default</c><00:15:02.110><c> value</c><00:15:02.320><c> will</c><00:15:02.500><c> be</c>

00:15:02.580 --> 00:15:02.590 align:start position:0%
parameters the default value will be
 

00:15:02.590 --> 00:15:05.400 align:start position:0%
parameters the default value will be
used<00:15:02.850><c> in</c><00:15:03.850><c> Java</c><00:15:04.090><c> has</c><00:15:04.240><c> done</c><00:15:04.630><c> with</c><00:15:04.840><c> overloaded</c>

00:15:05.400 --> 00:15:05.410 align:start position:0%
used in Java has done with overloaded
 

00:15:05.410 --> 00:15:07.950 align:start position:0%
used in Java has done with overloaded
methods<00:15:05.740><c> and</c><00:15:05.980><c> I</c><00:15:06.100><c> will</c><00:15:06.340><c> have</c><00:15:06.490><c> to</c><00:15:06.700><c> put</c><00:15:07.480><c> a</c><00:15:07.510><c> lot</c><00:15:07.780><c> of</c>

00:15:07.950 --> 00:15:07.960 align:start position:0%
methods and I will have to put a lot of
 

00:15:07.960 --> 00:15:09.420 align:start position:0%
methods and I will have to put a lot of
a<00:15:08.080><c> valid</c><00:15:08.320><c> method</c><00:15:08.470><c> to</c><00:15:08.860><c> do</c><00:15:09.220><c> that</c>

00:15:09.420 --> 00:15:09.430 align:start position:0%
a valid method to do that
 

00:15:09.430 --> 00:15:12.360 align:start position:0%
a valid method to do that
here<00:15:10.000><c> I</c><00:15:10.030><c> can</c><00:15:10.540><c> do</c><00:15:10.660><c> that</c><00:15:10.780><c> with</c><00:15:10.990><c> just</c><00:15:11.170><c> a</c><00:15:11.320><c> single</c><00:15:11.530><c> a</c>

00:15:12.360 --> 00:15:12.370 align:start position:0%
here I can do that with just a single a
 

00:15:12.370 --> 00:15:18.060 align:start position:0%
here I can do that with just a single a
single<00:15:13.410><c> function</c><00:15:14.410><c> definition</c><00:15:15.120><c> and</c><00:15:16.530><c> so</c><00:15:17.530><c> I</c><00:15:17.560><c> can</c>

00:15:18.060 --> 00:15:18.070 align:start position:0%
single function definition and so I can
 

00:15:18.070 --> 00:15:22.230 align:start position:0%
single function definition and so I can
just<00:15:18.310><c> go</c><00:15:18.760><c> reformat</c><00:15:19.660><c> foobar</c><00:15:20.080><c> and</c><00:15:21.240><c> normalize</c>

00:15:22.230 --> 00:15:22.240 align:start position:0%
just go reformat foobar and normalize
 

00:15:22.240 --> 00:15:23.940 align:start position:0%
just go reformat foobar and normalize
case<00:15:22.480><c> parameter</c><00:15:22.960><c> will</c><00:15:23.230><c> be</c><00:15:23.380><c> set</c><00:15:23.560><c> to</c><00:15:23.680><c> truth</c>

00:15:23.940 --> 00:15:23.950 align:start position:0%
case parameter will be set to truth
 

00:15:23.950 --> 00:15:26.070 align:start position:0%
case parameter will be set to truth
upper<00:15:24.580><c> case</c><00:15:24.820><c> first</c><00:15:25.120><c> letter</c><00:15:25.390><c> parameter</c><00:15:25.840><c> will</c>

00:15:26.070 --> 00:15:26.080 align:start position:0%
upper case first letter parameter will
 

00:15:26.080 --> 00:15:30.300 align:start position:0%
upper case first letter parameter will
be<00:15:26.170><c> set</c><00:15:26.350><c> to</c><00:15:26.380><c> true</c><00:15:26.500><c> etc</c><00:15:27.250><c> etc</c><00:15:28.470><c> the</c><00:15:29.470><c> same</c><00:15:29.710><c> method</c><00:15:30.130><c> I</c>

00:15:30.300 --> 00:15:30.310 align:start position:0%
be set to true etc etc the same method I
 

00:15:30.310 --> 00:15:35.130 align:start position:0%
be set to true etc etc the same method I
can<00:15:30.610><c> call</c><00:15:31.350><c> reformat</c><00:15:32.350><c> foobar</c><00:15:32.770><c> and</c><00:15:33.040><c> specify</c><00:15:34.140><c> the</c>

00:15:35.130 --> 00:15:35.140 align:start position:0%
can call reformat foobar and specify the
 

00:15:35.140 --> 00:15:37.410 align:start position:0%
can call reformat foobar and specify the
values<00:15:35.410><c> parameters</c><00:15:35.950><c> so</c><00:15:36.400><c> that's</c><00:15:36.820><c> defined</c><00:15:37.330><c> by</c>

00:15:37.410 --> 00:15:37.420 align:start position:0%
values parameters so that's defined by
 

00:15:37.420 --> 00:15:40.220 align:start position:0%
values parameters so that's defined by
the<00:15:37.540><c> opposition</c>

00:15:40.220 --> 00:15:40.230 align:start position:0%
 
 

00:15:40.230 --> 00:15:42.470 align:start position:0%
 
so<00:15:40.440><c> in</c><00:15:40.710><c> that</c><00:15:40.830><c> case</c><00:15:41.100><c> you</c><00:15:41.310><c> see</c><00:15:41.520><c> that</c><00:15:41.550><c> to</c><00:15:41.880><c> redefine</c>

00:15:42.470 --> 00:15:42.480 align:start position:0%
so in that case you see that to redefine
 

00:15:42.480 --> 00:15:44.540 align:start position:0%
so in that case you see that to redefine
to<00:15:42.870><c> define</c><00:15:43.260><c> the</c><00:15:43.410><c> value</c><00:15:43.680><c> of</c><00:15:43.830><c> what</c><00:15:44.070><c> separator</c>

00:15:44.540 --> 00:15:44.550 align:start position:0%
to define the value of what separator
 

00:15:44.550 --> 00:15:49.580 align:start position:0%
to define the value of what separator
I'm<00:15:44.940><c> forced</c><00:15:45.810><c> to</c><00:15:46.250><c> define</c><00:15:47.510><c> the</c><00:15:48.510><c> other</c><00:15:48.720><c> previous</c>

00:15:49.580 --> 00:15:49.590 align:start position:0%
I'm forced to define the other previous
 

00:15:49.590 --> 00:15:51.970 align:start position:0%
I'm forced to define the other previous
parameters<00:15:50.280><c> even</c><00:15:50.700><c> if</c><00:15:50.880><c> they</c><00:15:51.060><c> don't</c><00:15:51.240><c> change</c>

00:15:51.970 --> 00:15:51.980 align:start position:0%
parameters even if they don't change
 

00:15:51.980 --> 00:15:54.770 align:start position:0%
parameters even if they don't change
even<00:15:52.980><c> if</c><00:15:53.130><c> they</c><00:15:53.280><c> keep</c><00:15:53.820><c> the</c><00:15:54.000><c> default</c><00:15:54.390><c> values</c><00:15:54.630><c> so</c>

00:15:54.770 --> 00:15:54.780 align:start position:0%
even if they keep the default values so
 

00:15:54.780 --> 00:15:58.040 align:start position:0%
even if they keep the default values so
that's<00:15:54.960><c> that's</c><00:15:55.410><c> not</c><00:15:55.880><c> what</c><00:15:56.880><c> I</c><00:15:57.390><c> do</c><00:15:57.510><c> at</c><00:15:57.630><c> percent</c>

00:15:58.040 --> 00:15:58.050 align:start position:0%
that's that's not what I do at percent
 

00:15:58.050 --> 00:16:00.830 align:start position:0%
that's that's not what I do at percent
efficient<00:15:58.470><c> so</c><00:15:59.090><c> container</c><00:16:00.090><c> allow</c><00:16:00.510><c> you</c><00:16:00.660><c> to</c>

00:16:00.830 --> 00:16:00.840 align:start position:0%
efficient so container allow you to
 

00:16:00.840 --> 00:16:04.400 align:start position:0%
efficient so container allow you to
specify<00:16:01.050><c> a</c><00:16:01.380><c> parameter</c><00:16:01.710><c> by</c><00:16:02.220><c> its</c><00:16:02.400><c> name</c><00:16:03.260><c> when</c><00:16:04.260><c> you</c>

00:16:04.400 --> 00:16:04.410 align:start position:0%
specify a parameter by its name when you
 

00:16:04.410 --> 00:16:07.520 align:start position:0%
specify a parameter by its name when you
have<00:16:04.590><c> a</c><00:16:05.130><c> few</c><00:16:05.850><c> parameters</c><00:16:06.180><c> like</c><00:16:06.750><c> here</c><00:16:07.320><c> that</c>

00:16:07.520 --> 00:16:07.530 align:start position:0%
have a few parameters like here that
 

00:16:07.530 --> 00:16:11.060 align:start position:0%
have a few parameters like here that
allow<00:16:08.370><c> you</c><00:16:08.430><c> to</c><00:16:08.990><c> to</c><00:16:09.990><c> specify</c><00:16:10.590><c> the</c><00:16:10.650><c> rod</c>

00:16:11.060 --> 00:16:11.070 align:start position:0%
allow you to to specify the rod
 

00:16:11.070 --> 00:16:14.210 align:start position:0%
allow you to to specify the rod
separator<00:16:12.140><c> parameter</c><00:16:13.140><c> to</c><00:16:14.100><c> be</c><00:16:14.130><c> estimated</c>

00:16:14.210 --> 00:16:14.220 align:start position:0%
separator parameter to be estimated
 

00:16:14.220 --> 00:16:17.750 align:start position:0%
separator parameter to be estimated
value<00:16:14.880><c> without</c><00:16:15.270><c> defining</c><00:16:16.140><c> the</c><00:16:16.470><c> other</c><00:16:16.760><c> the</c>

00:16:17.750 --> 00:16:17.760 align:start position:0%
value without defining the other the
 

00:16:17.760 --> 00:16:20.480 align:start position:0%
value without defining the other the
other<00:16:17.850><c> one</c><00:16:18.150><c> so</c><00:16:18.450><c> again</c><00:16:18.870><c> that's</c><00:16:19.770><c> designed</c><00:16:20.280><c> to</c>

00:16:20.480 --> 00:16:20.490 align:start position:0%
other one so again that's designed to
 

00:16:20.490 --> 00:16:22.370 align:start position:0%
other one so again that's designed to
allow<00:16:20.610><c> you</c><00:16:20.670><c> to</c><00:16:20.820><c> write</c><00:16:21.270><c> concise</c><00:16:21.870><c> code</c><00:16:22.110><c> and</c>

00:16:22.370 --> 00:16:22.380 align:start position:0%
allow you to write concise code and
 

00:16:22.380 --> 00:16:26.270 align:start position:0%
allow you to write concise code and
readable<00:16:22.860><c> code</c><00:16:24.170><c> you</c><00:16:25.170><c> can</c><00:16:25.350><c> also</c><00:16:25.500><c> customize</c><00:16:25.950><c> the</c>

00:16:26.270 --> 00:16:26.280 align:start position:0%
readable code you can also customize the
 

00:16:26.280 --> 00:16:33.200 align:start position:0%
readable code you can also customize the
other<00:16:26.490><c> ones</c><00:16:26.730><c> that's</c><00:16:27.090><c> not</c><00:16:27.930><c> the</c><00:16:28.050><c> same</c><00:16:30.050><c> so</c><00:16:32.210><c> new</c>

00:16:33.200 --> 00:16:33.210 align:start position:0%
other ones that's not the same so new
 

00:16:33.210 --> 00:16:36.230 align:start position:0%
other ones that's not the same so new
safety<00:16:33.660><c> is</c><00:16:33.900><c> very</c><00:16:34.200><c> important</c><00:16:34.770><c> in</c><00:16:34.920><c> cotton</c><00:16:35.310><c> in</c>

00:16:36.230 --> 00:16:36.240 align:start position:0%
safety is very important in cotton in
 

00:16:36.240 --> 00:16:38.450 align:start position:0%
safety is very important in cotton in
fact<00:16:36.480><c> before</c><00:16:36.750><c> working</c><00:16:37.170><c> with</c><00:16:37.320><c> cotton</c><00:16:37.860><c> I</c><00:16:38.040><c> was</c>

00:16:38.450 --> 00:16:38.460 align:start position:0%
fact before working with cotton I was
 

00:16:38.460 --> 00:16:42.770 align:start position:0%
fact before working with cotton I was
not<00:16:38.730><c> sure</c><00:16:39.060><c> about</c><00:16:40.340><c> the</c><00:16:41.340><c> usefulness</c><00:16:42.180><c> of</c><00:16:42.570><c> this</c>

00:16:42.770 --> 00:16:42.780 align:start position:0%
not sure about the usefulness of this
 

00:16:42.780 --> 00:16:45.590 align:start position:0%
not sure about the usefulness of this
feature<00:16:43.020><c> I</c><00:16:43.290><c> mean</c><00:16:43.470><c> we</c><00:16:43.920><c> all</c><00:16:44.130><c> have</c><00:16:44.160><c> issues</c><00:16:44.880><c> with</c>

00:16:45.590 --> 00:16:45.600 align:start position:0%
feature I mean we all have issues with
 

00:16:45.600 --> 00:16:51.590 align:start position:0%
feature I mean we all have issues with
new<00:16:45.810><c> pointer</c><00:16:46.140><c> exceptions</c><00:16:47.010><c> but</c><00:16:49.280><c> yeah</c><00:16:50.600><c> while</c>

00:16:51.590 --> 00:16:51.600 align:start position:0%
new pointer exceptions but yeah while
 

00:16:51.600 --> 00:16:54.110 align:start position:0%
new pointer exceptions but yeah while
using<00:16:51.840><c> cotton</c><00:16:52.200><c> while</c><00:16:52.590><c> developing</c><00:16:53.120><c> contain</c>

00:16:54.110 --> 00:16:54.120 align:start position:0%
using cotton while developing contain
 

00:16:54.120 --> 00:16:56.660 align:start position:0%
using cotton while developing contain
applications<00:16:54.660><c> I</c><00:16:54.870><c> really</c><00:16:55.380><c> feel</c><00:16:55.650><c> that</c><00:16:55.680><c> that's</c>

00:16:56.660 --> 00:16:56.670 align:start position:0%
applications I really feel that that's
 

00:16:56.670 --> 00:16:58.880 align:start position:0%
applications I really feel that that's
one<00:16:57.240><c> of</c><00:16:57.420><c> the</c><00:16:57.600><c> most</c><00:16:57.840><c> important</c><00:16:58.320><c> feature</c><00:16:58.530><c> of</c><00:16:58.680><c> the</c>

00:16:58.880 --> 00:16:58.890 align:start position:0%
one of the most important feature of the
 

00:16:58.890 --> 00:17:02.930 align:start position:0%
one of the most important feature of the
languages<00:16:59.190><c> so</c><00:17:00.260><c> as</c><00:17:01.260><c> I</c><00:17:01.440><c> said</c><00:17:01.650><c> previously</c><00:17:01.830><c> if</c><00:17:02.550><c> you</c>

00:17:02.930 --> 00:17:02.940 align:start position:0%
languages so as I said previously if you
 

00:17:02.940 --> 00:17:04.910 align:start position:0%
languages so as I said previously if you
don't<00:17:03.210><c> put</c><00:17:03.540><c> a</c><00:17:03.570><c> question</c><00:17:03.870><c> mark</c><00:17:04.079><c> after</c><00:17:04.410><c> the</c><00:17:04.620><c> type</c>

00:17:04.910 --> 00:17:04.920 align:start position:0%
don't put a question mark after the type
 

00:17:04.920 --> 00:17:08.030 align:start position:0%
don't put a question mark after the type
that<00:17:05.850><c> means</c><00:17:06.089><c> the</c><00:17:06.510><c> type</c><00:17:06.959><c> is</c><00:17:07.170><c> not</c><00:17:07.350><c> variable</c><00:17:07.770><c> so</c>

00:17:08.030 --> 00:17:08.040 align:start position:0%
that means the type is not variable so
 

00:17:08.040 --> 00:17:10.460 align:start position:0%
that means the type is not variable so
you<00:17:08.070><c> won't</c><00:17:08.400><c> be</c><00:17:08.550><c> able</c><00:17:08.640><c> to</c><00:17:08.820><c> to</c><00:17:09.810><c> put</c><00:17:10.020><c> a</c><00:17:10.050><c> new</c><00:17:10.260><c> value</c>

00:17:10.460 --> 00:17:10.470 align:start position:0%
you won't be able to to put a new value
 

00:17:10.470 --> 00:17:13.430 align:start position:0%
you won't be able to to put a new value
there<00:17:10.890><c> and</c><00:17:11.089><c> if</c><00:17:12.089><c> you</c><00:17:12.390><c> had</c><00:17:12.540><c> a</c><00:17:12.570><c> question</c><00:17:12.750><c> mark</c><00:17:13.170><c> you</c>

00:17:13.430 --> 00:17:13.440 align:start position:0%
there and if you had a question mark you
 

00:17:13.440 --> 00:17:16.840 align:start position:0%
there and if you had a question mark you
you<00:17:13.680><c> are</c><00:17:13.860><c> able</c><00:17:14.160><c> to</c><00:17:14.220><c> to</c><00:17:15.150><c> put</c><00:17:15.690><c> this</c><00:17:16.079><c> value</c><00:17:16.380><c> to</c>

00:17:16.840 --> 00:17:16.850 align:start position:0%
you are able to to put this value to
 

00:17:16.850 --> 00:17:19.510 align:start position:0%
you are able to to put this value to
this<00:17:17.850><c> property</c><00:17:18.180><c> of</c><00:17:18.390><c> this</c><00:17:18.510><c> variable</c><00:17:18.900><c> to</c><00:17:19.020><c> nil</c>

00:17:19.510 --> 00:17:19.520 align:start position:0%
this property of this variable to nil
 

00:17:19.520 --> 00:17:22.819 align:start position:0%
this property of this variable to nil
the<00:17:20.520><c> IDE</c><00:17:20.880><c> gives</c><00:17:21.810><c> you</c><00:17:21.870><c> some</c><00:17:22.079><c> hints</c><00:17:22.410><c> to</c><00:17:22.560><c> say</c><00:17:22.770><c> you</c>

00:17:22.819 --> 00:17:22.829 align:start position:0%
the IDE gives you some hints to say you
 

00:17:22.829 --> 00:17:23.630 align:start position:0%
the IDE gives you some hints to say you
okay

00:17:23.630 --> 00:17:23.640 align:start position:0%
okay
 

00:17:23.640 --> 00:17:26.480 align:start position:0%
okay
here<00:17:24.209><c> there</c><00:17:25.199><c> is</c><00:17:25.230><c> a</c><00:17:25.380><c> risk</c><00:17:25.620><c> to</c><00:17:25.920><c> have</c><00:17:26.040><c> a</c><00:17:26.070><c> new</c><00:17:26.250><c> value</c>

00:17:26.480 --> 00:17:26.490 align:start position:0%
here there is a risk to have a new value
 

00:17:26.490 --> 00:17:31.640 align:start position:0%
here there is a risk to have a new value
so<00:17:27.740><c> there</c><00:17:28.740><c> is</c><00:17:28.860><c> various</c><00:17:29.220><c> operator</c><00:17:29.640><c> to</c><00:17:30.150><c> to</c><00:17:31.020><c> to</c>

00:17:31.640 --> 00:17:31.650 align:start position:0%
so there is various operator to to to
 

00:17:31.650 --> 00:17:33.830 align:start position:0%
so there is various operator to to to
provide<00:17:31.920><c> a</c><00:17:31.980><c> default</c><00:17:32.340><c> value</c><00:17:32.400><c> if</c><00:17:32.910><c> if</c><00:17:33.450><c> this</c><00:17:33.660><c> is</c>

00:17:33.830 --> 00:17:33.840 align:start position:0%
provide a default value if if this is
 

00:17:33.840 --> 00:17:35.480 align:start position:0%
provide a default value if if this is
noodle<00:17:34.140><c> or</c><00:17:34.230><c> thing</c><00:17:34.500><c> like</c><00:17:34.620><c> that</c><00:17:34.650><c> so</c><00:17:35.010><c> you</c><00:17:35.070><c> have</c><00:17:35.370><c> to</c>

00:17:35.480 --> 00:17:35.490 align:start position:0%
noodle or thing like that so you have to
 

00:17:35.490 --> 00:17:38.210 align:start position:0%
noodle or thing like that so you have to
under<00:17:35.970><c> your</c><00:17:36.150><c> self</c><00:17:36.420><c> so</c><00:17:37.110><c> the</c><00:17:37.230><c> fact</c><00:17:37.470><c> what</c><00:17:37.950><c> should</c>

00:17:38.210 --> 00:17:38.220 align:start position:0%
under your self so the fact what should
 

00:17:38.220 --> 00:17:41.990 align:start position:0%
under your self so the fact what should
I<00:17:38.310><c> do</c><00:17:38.370><c> if</c><00:17:38.730><c> this</c><00:17:38.910><c> value</c><00:17:39.120><c> is</c><00:17:39.240><c> new</c><00:17:40.370><c> so</c><00:17:41.370><c> if</c><00:17:41.550><c> we</c><00:17:41.760><c> see</c>

00:17:41.990 --> 00:17:42.000 align:start position:0%
I do if this value is new so if we see
 

00:17:42.000 --> 00:17:45.230 align:start position:0%
I do if this value is new so if we see
that<00:17:42.030><c> example</c><00:17:42.600><c> where</c><00:17:42.990><c> I</c><00:17:43.050><c> create</c><00:17:43.620><c> a</c><00:17:44.240><c> water</c>

00:17:45.230 --> 00:17:45.240 align:start position:0%
that example where I create a water
 

00:17:45.240 --> 00:17:50.060 align:start position:0%
that example where I create a water
available<00:17:46.850><c> in</c><00:17:47.850><c> the</c><00:17:48.270><c> in</c><00:17:49.050><c> the</c><00:17:49.230><c> second</c><00:17:49.530><c> line</c><00:17:49.710><c> of</c>

00:17:50.060 --> 00:17:50.070 align:start position:0%
available in the in the second line of
 

00:17:50.070 --> 00:17:53.930 align:start position:0%
available in the in the second line of
allocation<00:17:51.530><c> with</c><00:17:52.530><c> the</c><00:17:52.740><c> points</c><00:17:53.280><c> and</c>

00:17:53.930 --> 00:17:53.940 align:start position:0%
allocation with the points and
 

00:17:53.940 --> 00:17:57.620 align:start position:0%
allocation with the points and
question<00:17:54.480><c> mark</c><00:17:54.750><c> so</c><00:17:55.140><c> I'm</c><00:17:55.650><c> allowed</c><00:17:56.190><c> to</c><00:17:56.220><c> do</c><00:17:56.669><c> that</c>

00:17:57.620 --> 00:17:57.630 align:start position:0%
question mark so I'm allowed to do that
 

00:17:57.630 --> 00:18:01.279 align:start position:0%
question mark so I'm allowed to do that
because<00:17:58.850><c> the</c><00:17:59.850><c> birth</c><00:18:00.059><c> birth</c><00:18:00.450><c> type</c><00:18:00.750><c> our</c><00:18:01.080><c> new</c>

00:18:01.279 --> 00:18:01.289 align:start position:0%
because the birth birth type our new
 

00:18:01.289 --> 00:18:04.520 align:start position:0%
because the birth birth type our new
liberal<00:18:01.559><c> point</c><00:18:01.710><c> basically</c><00:18:02.510><c> in</c><00:18:03.510><c> the</c><00:18:03.870><c> second</c>

00:18:04.520 --> 00:18:04.530 align:start position:0%
liberal point basically in the second
 

00:18:04.530 --> 00:18:07.460 align:start position:0%
liberal point basically in the second
example<00:18:05.070><c> so</c><00:18:05.640><c> location</c><00:18:06.059><c> 2</c><00:18:06.330><c> we</c><00:18:07.049><c> have</c><00:18:07.169><c> the</c><00:18:07.289><c> type</c>

00:18:07.460 --> 00:18:07.470 align:start position:0%
example so location 2 we have the type
 

00:18:07.470 --> 00:18:09.760 align:start position:0%
example so location 2 we have the type
inference<00:18:07.890><c> that</c><00:18:08.309><c> automatically</c><00:18:09.030><c> give</c>

00:18:09.760 --> 00:18:09.770 align:start position:0%
inference that automatically give
 

00:18:09.770 --> 00:18:12.080 align:start position:0%
inference that automatically give
location<00:18:10.770><c> to</c><00:18:11.010><c> the</c><00:18:11.160><c> type</c><00:18:11.370><c> a</c><00:18:11.669><c> new</c><00:18:11.910><c> liberal</c>

00:18:12.080 --> 00:18:12.090 align:start position:0%
location to the type a new liberal
 

00:18:12.090 --> 00:18:14.029 align:start position:0%
location to the type a new liberal
points<00:18:12.539><c> because</c><00:18:12.900><c> well</c><00:18:13.140><c> tell</c><00:18:13.320><c> the</c><00:18:13.410><c> location</c><00:18:13.679><c> is</c>

00:18:14.029 --> 00:18:14.039 align:start position:0%
points because well tell the location is
 

00:18:14.039 --> 00:18:17.000 align:start position:0%
points because well tell the location is
a<00:18:14.070><c> new</c><00:18:14.280><c> label</c><00:18:14.429><c> points</c><00:18:14.880><c> here</c><00:18:15.809><c> location</c><00:18:16.620><c> 2</c><00:18:16.799><c> is</c>

00:18:17.000 --> 00:18:17.010 align:start position:0%
a new label points here location 2 is
 

00:18:17.010 --> 00:18:19.850 align:start position:0%
a new label points here location 2 is
really<00:18:17.309><c> statically</c><00:18:17.730><c> typed</c><00:18:18.000><c> it</c><00:18:18.419><c> just</c><00:18:18.750><c> gets</c><00:18:19.020><c> the</c>

00:18:19.850 --> 00:18:19.860 align:start position:0%
really statically typed it just gets the
 

00:18:19.860 --> 00:18:22.430 align:start position:0%
really statically typed it just gets the
same<00:18:20.070><c> type</c><00:18:20.370><c> than</c><00:18:20.910><c> word</c><00:18:21.660><c> to</c><00:18:21.809><c> other</c><00:18:21.929><c> location</c>

00:18:22.430 --> 00:18:22.440 align:start position:0%
same type than word to other location
 

00:18:22.440 --> 00:18:24.380 align:start position:0%
same type than word to other location
that's<00:18:22.650><c> one</c><00:18:22.980><c> example</c><00:18:23.309><c> of</c><00:18:23.460><c> the</c><00:18:23.700><c> cutting</c><00:18:24.210><c> type</c>

00:18:24.380 --> 00:18:24.390 align:start position:0%
that's one example of the cutting type
 

00:18:24.390 --> 00:18:29.630 align:start position:0%
that's one example of the cutting type
inference<00:18:24.780><c> and</c><00:18:26.390><c> in</c><00:18:27.390><c> the</c><00:18:28.370><c> location</c><00:18:29.370><c> free</c>

00:18:29.630 --> 00:18:29.640 align:start position:0%
inference and in the location free
 

00:18:29.640 --> 00:18:33.560 align:start position:0%
inference and in the location free
example<00:18:30.120><c> here</c><00:18:31.610><c> location</c><00:18:32.610><c> free</c><00:18:32.850><c> is</c><00:18:33.030><c> a</c><00:18:33.059><c> non</c><00:18:33.390><c> new</c>

00:18:33.560 --> 00:18:33.570 align:start position:0%
example here location free is a non new
 

00:18:33.570 --> 00:18:39.289 align:start position:0%
example here location free is a non new
label<00:18:33.950><c> point</c><00:18:35.150><c> so</c><00:18:37.039><c> with</c><00:18:38.039><c> Elvis</c><00:18:38.490><c> operator</c><00:18:38.880><c> we</c>

00:18:39.289 --> 00:18:39.299 align:start position:0%
label point so with Elvis operator we
 

00:18:39.299 --> 00:18:43.520 align:start position:0%
label point so with Elvis operator we
have<00:18:39.330><c> we</c><00:18:40.110><c> are</c><00:18:40.140><c> providing</c><00:18:40.740><c> a</c><00:18:40.950><c> default</c><00:18:41.460><c> value</c><00:18:42.530><c> so</c>

00:18:43.520 --> 00:18:43.530 align:start position:0%
have we are providing a default value so
 

00:18:43.530 --> 00:18:46.279 align:start position:0%
have we are providing a default value so
that<00:18:43.830><c> means</c><00:18:44.340><c> that</c><00:18:44.610><c> location</c><00:18:45.480><c> free</c><00:18:45.840><c> will</c><00:18:46.140><c> be</c>

00:18:46.279 --> 00:18:46.289 align:start position:0%
that means that location free will be
 

00:18:46.289 --> 00:18:48.649 align:start position:0%
that means that location free will be
equals<00:18:46.590><c> to</c><00:18:46.650><c> what</c><00:18:46.950><c> other</c><00:18:47.159><c> location</c><00:18:47.760><c> but</c><00:18:48.030><c> if</c>

00:18:48.649 --> 00:18:48.659 align:start position:0%
equals to what other location but if
 

00:18:48.659 --> 00:18:50.899 align:start position:0%
equals to what other location but if
work<00:18:48.900><c> load</c><00:18:49.080><c> application</c><00:18:49.620><c> is</c><00:18:49.740><c> known</c><00:18:49.980><c> the</c><00:18:50.760><c> value</c>

00:18:50.899 --> 00:18:50.909 align:start position:0%
work load application is known the value
 

00:18:50.909 --> 00:18:54.399 align:start position:0%
work load application is known the value
will<00:18:51.210><c> will</c><00:18:51.539><c> be</c><00:18:51.570><c> a</c><00:18:51.900><c> point</c><00:18:52.200><c> of</c><00:18:52.409><c> zero</c><00:18:52.440><c> zero</c><00:18:53.070><c> zero</c>

00:18:54.399 --> 00:18:54.409 align:start position:0%
will will be a point of zero zero zero
 

00:18:54.409 --> 00:18:57.350 align:start position:0%
will will be a point of zero zero zero
so<00:18:55.409><c> no</c><00:18:55.590><c> magic</c><00:18:55.950><c> you</c><00:18:55.980><c> have</c><00:18:56.220><c> to</c><00:18:56.429><c> under</c><00:18:56.789><c> what</c><00:18:57.090><c> to</c><00:18:57.240><c> do</c>

00:18:57.350 --> 00:18:57.360 align:start position:0%
so no magic you have to under what to do
 

00:18:57.360 --> 00:19:01.039 align:start position:0%
so no magic you have to under what to do
if<00:18:57.600><c> the</c><00:18:57.809><c> value</c><00:18:58.020><c> is</c><00:18:58.169><c> new</c><00:18:59.390><c> there</c><00:19:00.390><c> is</c><00:19:00.419><c> also</c><00:19:00.690><c> some</c>

00:19:01.039 --> 00:19:01.049 align:start position:0%
if the value is new there is also some
 

00:19:01.049 --> 00:19:04.310 align:start position:0%
if the value is new there is also some
helpers<00:19:01.530><c> that</c><00:19:02.150><c> allowed</c><00:19:03.150><c> to</c><00:19:03.390><c> avoid</c><00:19:03.929><c> new</c>

00:19:04.310 --> 00:19:04.320 align:start position:0%
helpers that allowed to avoid new
 

00:19:04.320 --> 00:19:08.120 align:start position:0%
helpers that allowed to avoid new
pointer<00:19:04.740><c> exception</c><00:19:05.190><c> so</c><00:19:05.400><c> here</c><00:19:05.669><c> if</c><00:19:06.559><c> it</c><00:19:07.559><c> is</c><00:19:07.950><c> new</c>

00:19:08.120 --> 00:19:08.130 align:start position:0%
pointer exception so here if it is new
 

00:19:08.130 --> 00:19:12.740 align:start position:0%
pointer exception so here if it is new
label<00:19:08.429><c> and</c><00:19:08.929><c> if</c><00:19:10.370><c> in</c><00:19:11.370><c> this</c><00:19:11.549><c> code</c><00:19:11.789><c> is</c><00:19:11.970><c> location</c><00:19:12.570><c> is</c>

00:19:12.740 --> 00:19:12.750 align:start position:0%
label and if in this code is location is
 

00:19:12.750 --> 00:19:13.760 align:start position:0%
label and if in this code is location is
nil

00:19:13.760 --> 00:19:13.770 align:start position:0%
nil
 

00:19:13.770 --> 00:19:17.690 align:start position:0%
nil
there<00:19:14.370><c> won't</c><00:19:14.580><c> be</c><00:19:14.760><c> any</c><00:19:15.210><c> exception</c><00:19:15.630><c> troll</c><00:19:16.250><c> if</c><00:19:17.250><c> if</c>

00:19:17.690 --> 00:19:17.700 align:start position:0%
there won't be any exception troll if if
 

00:19:17.700 --> 00:19:23.330 align:start position:0%
there won't be any exception troll if if
location<00:19:18.299><c> is</c><00:19:18.710><c> is</c><00:19:19.710><c> a</c><00:19:19.770><c> value</c><00:19:20.600><c> X</c><00:19:21.600><c> will</c><00:19:21.960><c> be</c><00:19:22.110><c> the</c><00:19:22.380><c> x</c>

00:19:23.330 --> 00:19:23.340 align:start position:0%
location is is a value X will be the x
 

00:19:23.340 --> 00:19:25.730 align:start position:0%
location is is a value X will be the x
value<00:19:23.669><c> that</c><00:19:24.090><c> is</c><00:19:24.270><c> in</c><00:19:24.390><c> location</c><00:19:24.840><c> and</c><00:19:25.080><c> if</c>

00:19:25.730 --> 00:19:25.740 align:start position:0%
value that is in location and if
 

00:19:25.740 --> 00:19:28.279 align:start position:0%
value that is in location and if
vocation<00:19:26.370><c> is</c><00:19:26.520><c> null</c><00:19:26.700><c> it</c><00:19:27.240><c> will</c><00:19:27.659><c> be</c><00:19:27.809><c> will</c><00:19:28.080><c> be</c><00:19:28.230><c> no</c>

00:19:28.279 --> 00:19:28.289 align:start position:0%
vocation is null it will be will be no
 

00:19:28.289 --> 00:19:31.250 align:start position:0%
vocation is null it will be will be no
you<00:19:28.950><c> have</c><00:19:29.100><c> similar</c><00:19:29.570><c> functionality</c><00:19:30.570><c> in</c><00:19:30.929><c> groovy</c>

00:19:31.250 --> 00:19:31.260 align:start position:0%
you have similar functionality in groovy
 

00:19:31.260 --> 00:19:37.940 align:start position:0%
you have similar functionality in groovy
and<00:19:31.500><c> act</c><00:19:32.250><c> like</c><00:19:32.429><c> that</c><00:19:32.610><c> I</c><00:19:36.559><c> saw</c><00:19:37.559><c> an</c><00:19:37.710><c> interesting</c>

00:19:37.940 --> 00:19:37.950 align:start position:0%
and act like that I saw an interesting
 

00:19:37.950 --> 00:19:40.940 align:start position:0%
and act like that I saw an interesting
example<00:19:38.419><c> an</c><00:19:39.419><c> interesting</c><00:19:40.289><c> blog</c><00:19:40.440><c> post</c><00:19:40.710><c> from</c>

00:19:40.940 --> 00:19:40.950 align:start position:0%
example an interesting blog post from
 

00:19:40.950 --> 00:19:43.340 align:start position:0%
example an interesting blog post from
Dan<00:19:41.280><c> Kim</c><00:19:41.520><c> from</c><00:19:41.760><c> base</c><00:19:42.030><c> count</c><00:19:42.330><c> that</c><00:19:42.720><c> was</c><00:19:42.960><c> talking</c>

00:19:43.340 --> 00:19:43.350 align:start position:0%
Dan Kim from base count that was talking
 

00:19:43.350 --> 00:19:46.220 align:start position:0%
Dan Kim from base count that was talking
about<00:19:43.850><c> how</c><00:19:44.850><c> we</c><00:19:44.909><c> love</c><00:19:45.360><c> the</c><00:19:45.570><c> language</c><00:19:45.840><c> that</c><00:19:46.049><c> we</c>

00:19:46.220 --> 00:19:46.230 align:start position:0%
about how we love the language that we
 

00:19:46.230 --> 00:19:49.669 align:start position:0%
about how we love the language that we
use<00:19:46.260><c> and</c><00:19:47.299><c> so</c><00:19:48.299><c> base</c><00:19:48.510><c> camp</c><00:19:48.780><c> is</c><00:19:48.990><c> many</c><00:19:49.230><c> ruby</c>

00:19:49.669 --> 00:19:49.679 align:start position:0%
use and so base camp is many ruby
 

00:19:49.679 --> 00:19:53.480 align:start position:0%
use and so base camp is many ruby
company<00:19:50.039><c> and</c><00:19:51.049><c> it</c><00:19:52.049><c> was</c><00:19:52.110><c> a</c><00:19:52.260><c> Java</c><00:19:52.590><c> developer</c><00:19:53.280><c> and</c>

00:19:53.480 --> 00:19:53.490 align:start position:0%
company and it was a Java developer and
 

00:19:53.490 --> 00:19:56.360 align:start position:0%
company and it was a Java developer and
he<00:19:53.700><c> always</c><00:19:54.000><c> wondered</c><00:19:54.539><c> why</c><00:19:54.870><c> why</c><00:19:55.440><c> is</c><00:19:55.500><c> this</c><00:19:55.679><c> ruby</c>

00:19:56.360 --> 00:19:56.370 align:start position:0%
he always wondered why why is this ruby
 

00:19:56.370 --> 00:19:57.930 align:start position:0%
he always wondered why why is this ruby
guys<00:19:56.549><c> really</c><00:19:56.880><c> loves</c><00:19:57.150><c> the</c><00:19:57.330><c> language</c>

00:19:57.930 --> 00:19:57.940 align:start position:0%
guys really loves the language
 

00:19:57.940 --> 00:19:59.279 align:start position:0%
guys really loves the language
and<00:19:58.059><c> they</c><00:19:58.299><c> are</c><00:19:58.389><c> really</c><00:19:58.509><c> keen</c><00:19:58.960><c> on</c><00:19:58.990><c> the</c>

00:19:59.279 --> 00:19:59.289 align:start position:0%
and they are really keen on the
 

00:19:59.289 --> 00:20:02.519 align:start position:0%
and they are really keen on the
languages<00:19:59.830><c> and</c><00:20:00.570><c> it</c><00:20:01.570><c> didn't</c><00:20:01.960><c> felt</c><00:20:02.169><c> the</c><00:20:02.289><c> same</c>

00:20:02.519 --> 00:20:02.529 align:start position:0%
languages and it didn't felt the same
 

00:20:02.529 --> 00:20:04.680 align:start position:0%
languages and it didn't felt the same
with<00:20:02.740><c> Java</c><00:20:02.980><c> which</c><00:20:03.789><c> which</c><00:20:04.179><c> was</c><00:20:04.389><c> a</c><00:20:04.419><c> language</c>

00:20:04.680 --> 00:20:04.690 align:start position:0%
with Java which which was a language
 

00:20:04.690 --> 00:20:07.879 align:start position:0%
with Java which which was a language
that<00:20:05.230><c> he</c><00:20:05.440><c> used</c><00:20:05.710><c> in</c><00:20:06.009><c> his</c><00:20:06.279><c> day-to-day</c><00:20:06.549><c> job</c><00:20:07.090><c> but</c>

00:20:07.879 --> 00:20:07.889 align:start position:0%
that he used in his day-to-day job but
 

00:20:07.889 --> 00:20:10.230 align:start position:0%
that he used in his day-to-day job but
it<00:20:08.889><c> was</c><00:20:09.070><c> not</c><00:20:09.220><c> able</c><00:20:09.460><c> to</c><00:20:09.519><c> say</c><00:20:09.759><c> that</c><00:20:09.909><c> she</c><00:20:09.940><c> loved</c>

00:20:10.230 --> 00:20:10.240 align:start position:0%
it was not able to say that she loved
 

00:20:10.240 --> 00:20:12.779 align:start position:0%
it was not able to say that she loved
Java<00:20:10.450><c> and</c><00:20:10.720><c> and</c><00:20:11.049><c> while</c><00:20:11.409><c> working</c><00:20:11.620><c> with</c><00:20:12.519><c> code</c>

00:20:12.779 --> 00:20:12.789 align:start position:0%
Java and and while working with code
 

00:20:12.789 --> 00:20:13.230 align:start position:0%
Java and and while working with code
clean

00:20:13.230 --> 00:20:13.240 align:start position:0%
clean
 

00:20:13.240 --> 00:20:15.840 align:start position:0%
clean
he<00:20:13.299><c> wrote</c><00:20:13.870><c> this</c><00:20:14.110><c> blog</c><00:20:14.320><c> post</c><00:20:14.409><c> and</c><00:20:14.769><c> he</c><00:20:14.919><c> wrote</c><00:20:15.279><c> for</c>

00:20:15.840 --> 00:20:15.850 align:start position:0%
he wrote this blog post and he wrote for
 

00:20:15.850 --> 00:20:17.820 align:start position:0%
he wrote this blog post and he wrote for
many<00:20:16.029><c> for</c><00:20:16.539><c> many</c><00:20:16.629><c> years</c><00:20:16.929><c> my</c><00:20:17.139><c> perspective</c><00:20:17.679><c> was</c>

00:20:17.820 --> 00:20:17.830 align:start position:0%
many for many years my perspective was
 

00:20:17.830 --> 00:20:20.129 align:start position:0%
many for many years my perspective was
simple<00:20:18.190><c> I</c><00:20:18.399><c> didn't</c><00:20:19.210><c> have</c><00:20:19.360><c> to</c><00:20:19.509><c> love</c><00:20:19.690><c> Java</c><00:20:19.990><c> or</c>

00:20:20.129 --> 00:20:20.139 align:start position:0%
simple I didn't have to love Java or
 

00:20:20.139 --> 00:20:21.690 align:start position:0%
simple I didn't have to love Java or
whatever<00:20:20.259><c> programming</c><00:20:20.860><c> languages</c><00:20:21.340><c> to</c><00:20:21.370><c> do</c><00:20:21.580><c> my</c>

00:20:21.690 --> 00:20:21.700 align:start position:0%
whatever programming languages to do my
 

00:20:21.700 --> 00:20:23.940 align:start position:0%
whatever programming languages to do my
work<00:20:21.879><c> well</c><00:20:21.929><c> that</c><00:20:22.929><c> all</c><00:20:23.169><c> changed</c><00:20:23.500><c> a</c><00:20:23.559><c> few</c><00:20:23.710><c> months</c>

00:20:23.940 --> 00:20:23.950 align:start position:0%
work well that all changed a few months
 

00:20:23.950 --> 00:20:26.009 align:start position:0%
work well that all changed a few months
ago<00:20:24.190><c> when</c><00:20:24.610><c> when</c><00:20:24.940><c> you</c><00:20:25.059><c> use</c><00:20:25.090><c> code</c><00:20:25.389><c> clean</c><00:20:25.600><c> because</c>

00:20:26.009 --> 00:20:26.019 align:start position:0%
ago when when you use code clean because
 

00:20:26.019 --> 00:20:29.909 align:start position:0%
ago when when you use code clean because
basically<00:20:26.740><c> the</c><00:20:27.100><c> language</c><00:20:27.580><c> helped</c><00:20:28.269><c> him</c><00:20:28.570><c> and</c><00:20:28.919><c> he</c>

00:20:29.909 --> 00:20:29.919 align:start position:0%
basically the language helped him and he
 

00:20:29.919 --> 00:20:32.639 align:start position:0%
basically the language helped him and he
really<00:20:30.100><c> understood</c><00:20:31.090><c> finally</c><00:20:31.539><c> what</c><00:20:31.840><c> the</c><00:20:32.379><c> Ruby</c>

00:20:32.639 --> 00:20:32.649 align:start position:0%
really understood finally what the Ruby
 

00:20:32.649 --> 00:20:35.490 align:start position:0%
really understood finally what the Ruby
guys<00:20:32.830><c> are</c><00:20:33.389><c> that</c><00:20:34.389><c> kind</c><00:20:34.629><c> of</c><00:20:34.720><c> community</c><00:20:35.200><c> really</c>

00:20:35.490 --> 00:20:35.500 align:start position:0%
guys are that kind of community really
 

00:20:35.500 --> 00:20:38.549 align:start position:0%
guys are that kind of community really
feel<00:20:36.450><c> so</c><00:20:37.450><c> that's</c><00:20:37.629><c> hard</c><00:20:37.809><c> to</c><00:20:38.019><c> explain</c><00:20:38.230><c> with</c>

00:20:38.549 --> 00:20:38.559 align:start position:0%
feel so that's hard to explain with
 

00:20:38.559 --> 00:20:42.299 align:start position:0%
feel so that's hard to explain with
slides<00:20:38.830><c> but</c><00:20:39.159><c> you</c><00:20:39.429><c> I</c><00:20:40.149><c> guess</c><00:20:40.600><c> you</c><00:20:40.840><c> will</c><00:20:41.049><c> not</c><00:20:41.710><c> feel</c>

00:20:42.299 --> 00:20:42.309 align:start position:0%
slides but you I guess you will not feel
 

00:20:42.309 --> 00:20:44.190 align:start position:0%
slides but you I guess you will not feel
that<00:20:42.490><c> when</c><00:20:42.759><c> developing</c><00:20:43.240><c> some</c><00:20:43.539><c> cartoon</c>

00:20:44.190 --> 00:20:44.200 align:start position:0%
that when developing some cartoon
 

00:20:44.200 --> 00:20:48.570 align:start position:0%
that when developing some cartoon
application<00:20:45.330><c> so</c><00:20:46.769><c> now</c><00:20:47.769><c> that</c><00:20:47.830><c> we</c><00:20:48.190><c> have</c><00:20:48.220><c> seen</c><00:20:48.519><c> a</c>

00:20:48.570 --> 00:20:48.580 align:start position:0%
application so now that we have seen a
 

00:20:48.580 --> 00:20:51.090 align:start position:0%
application so now that we have seen a
quick<00:20:48.789><c> overview</c><00:20:49.090><c> of</c><00:20:49.299><c> code</c><00:20:49.960><c> clean</c><00:20:50.169><c> let's</c><00:20:50.889><c> talk</c>

00:20:51.090 --> 00:20:51.100 align:start position:0%
quick overview of code clean let's talk
 

00:20:51.100 --> 00:20:53.999 align:start position:0%
quick overview of code clean let's talk
about<00:20:51.279><c> using</c><00:20:51.820><c> code</c><00:20:52.450><c> clean</c><00:20:52.690><c> for</c><00:20:53.679><c> developing</c>

00:20:53.999 --> 00:20:54.009 align:start position:0%
about using code clean for developing
 

00:20:54.009 --> 00:20:58.200 align:start position:0%
about using code clean for developing
spring<00:20:54.340><c> application</c><00:20:56.009><c> so</c><00:20:57.009><c> a</c><00:20:57.039><c> few</c><00:20:57.399><c> months</c><00:20:57.610><c> ago</c><00:20:57.730><c> I</c>

00:20:58.200 --> 00:20:58.210 align:start position:0%
spring application so a few months ago I
 

00:20:58.210 --> 00:21:01.350 align:start position:0%
spring application so a few months ago I
added<00:20:58.570><c> support</c><00:20:59.139><c> for</c><00:20:59.529><c> cooking</c><00:21:00.399><c> in</c><00:21:00.610><c> start</c><00:21:00.970><c> just</c>

00:21:01.350 --> 00:21:01.360 align:start position:0%
added support for cooking in start just
 

00:21:01.360 --> 00:21:04.740 align:start position:0%
added support for cooking in start just
playing<00:21:01.629><c> the</c><00:21:01.779><c> tayo</c><00:21:01.960><c> so</c><00:21:02.409><c> I</c><00:21:03.190><c> guess</c><00:21:03.820><c> some</c><00:21:04.480><c> of</c><00:21:04.600><c> you</c>

00:21:04.740 --> 00:21:04.750 align:start position:0%
playing the tayo so I guess some of you
 

00:21:04.750 --> 00:21:06.779 align:start position:0%
playing the tayo so I guess some of you
already<00:21:04.809><c> know</c><00:21:05.110><c> that's</c><00:21:06.070><c> a</c><00:21:06.190><c> website</c><00:21:06.370><c> that</c>

00:21:06.779 --> 00:21:06.789 align:start position:0%
already know that's a website that
 

00:21:06.789 --> 00:21:10.560 align:start position:0%
already know that's a website that
generates<00:21:08.340><c> project</c><00:21:09.340><c> skeleton</c><00:21:09.789><c> to</c><00:21:09.970><c> start</c><00:21:10.299><c> to</c>

00:21:10.560 --> 00:21:10.570 align:start position:0%
generates project skeleton to start to
 

00:21:10.570 --> 00:21:13.619 align:start position:0%
generates project skeleton to start to
bootstrap<00:21:10.990><c> your</c><00:21:11.110><c> project</c><00:21:11.879><c> so</c><00:21:12.879><c> if</c><00:21:13.210><c> you</c><00:21:13.389><c> go</c><00:21:13.600><c> to</c>

00:21:13.619 --> 00:21:13.629 align:start position:0%
bootstrap your project so if you go to
 

00:21:13.629 --> 00:21:16.710 align:start position:0%
bootstrap your project so if you go to
the<00:21:14.200><c> URL</c><00:21:14.679><c> that</c><00:21:15.070><c> is</c><00:21:15.340><c> at</c><00:21:15.580><c> the</c><00:21:15.759><c> top</c><00:21:15.970><c> of</c><00:21:16.210><c> the</c><00:21:16.419><c> slide</c>

00:21:16.710 --> 00:21:16.720 align:start position:0%
the URL that is at the top of the slide
 

00:21:16.720 --> 00:21:19.680 align:start position:0%
the URL that is at the top of the slide
you<00:21:17.710><c> will</c><00:21:17.860><c> have</c><00:21:18.070><c> a</c><00:21:18.100><c> crystal</c><00:21:18.610><c> form</c><00:21:18.940><c> with</c><00:21:19.330><c> code</c>

00:21:19.680 --> 00:21:19.690 align:start position:0%
you will have a crystal form with code
 

00:21:19.690 --> 00:21:21.180 align:start position:0%
you will have a crystal form with code
cleaner<00:21:19.929><c> already</c><00:21:20.049><c> selected</c><00:21:20.500><c> and</c><00:21:20.889><c> you</c><00:21:21.009><c> will</c>

00:21:21.180 --> 00:21:21.190 align:start position:0%
cleaner already selected and you will
 

00:21:21.190 --> 00:21:22.940 align:start position:0%
cleaner already selected and you will
just<00:21:21.429><c> have</c><00:21:21.610><c> to</c><00:21:21.669><c> add</c><00:21:21.970><c> your</c><00:21:22.120><c> dependencies</c>

00:21:22.940 --> 00:21:22.950 align:start position:0%
just have to add your dependencies
 

00:21:22.950 --> 00:21:26.399 align:start position:0%
just have to add your dependencies
choose<00:21:23.970><c> maven</c><00:21:24.970><c> grader</c><00:21:25.299><c> specifies</c><00:21:26.049><c> the</c><00:21:26.230><c> booze</c>

00:21:26.399 --> 00:21:26.409 align:start position:0%
choose maven grader specifies the booze
 

00:21:26.409 --> 00:21:28.350 align:start position:0%
choose maven grader specifies the booze
version<00:21:26.799><c> and</c><00:21:27.009><c> that</c><00:21:27.700><c> will</c><00:21:27.909><c> automatically</c>

00:21:28.350 --> 00:21:28.360 align:start position:0%
version and that will automatically
 

00:21:28.360 --> 00:21:30.869 align:start position:0%
version and that will automatically
generates<00:21:28.980><c> spring</c><00:21:29.980><c> boots</c><00:21:30.220><c> and</c><00:21:30.490><c> cut</c><00:21:30.700><c> cane</c>

00:21:30.869 --> 00:21:30.879 align:start position:0%
generates spring boots and cut cane
 

00:21:30.879 --> 00:21:33.899 align:start position:0%
generates spring boots and cut cane
project<00:21:31.299><c> if</c><00:21:32.259><c> you</c><00:21:32.500><c> go</c><00:21:32.710><c> to</c><00:21:32.769><c> the</c><00:21:33.009><c> regular</c><00:21:33.370><c> at</c><00:21:33.730><c> the</c>

00:21:33.899 --> 00:21:33.909 align:start position:0%
project if you go to the regular at the
 

00:21:33.909 --> 00:21:36.509 align:start position:0%
project if you go to the regular at the
spring<00:21:34.210><c> start</c><00:21:34.990><c> that</c><00:21:35.169><c> spring</c><00:21:35.440><c> data</c><00:21:35.590><c> you</c><00:21:35.860><c> you</c>

00:21:36.509 --> 00:21:36.519 align:start position:0%
spring start that spring data you you
 

00:21:36.519 --> 00:21:38.850 align:start position:0%
spring start that spring data you you
will<00:21:36.700><c> have</c><00:21:36.820><c> to</c><00:21:37.059><c> switch</c><00:21:37.269><c> to</c><00:21:37.299><c> full</c><00:21:37.720><c> the</c><00:21:38.649><c> full</c>

00:21:38.850 --> 00:21:38.860 align:start position:0%
will have to switch to full the full
 

00:21:38.860 --> 00:21:41.340 align:start position:0%
will have to switch to full the full
version<00:21:39.190><c> of</c><00:21:39.340><c> the</c><00:21:39.460><c> form</c><00:21:39.730><c> and</c><00:21:39.909><c> select</c><00:21:40.840><c> go</c><00:21:41.139><c> clean</c>

00:21:41.340 --> 00:21:41.350 align:start position:0%
version of the form and select go clean
 

00:21:41.350 --> 00:21:46.049 align:start position:0%
version of the form and select go clean
as<00:21:41.529><c> at</c><00:21:42.009><c> the</c><00:21:42.250><c> end</c><00:21:42.549><c> instead</c><00:21:43.120><c> of</c><00:21:43.360><c> Java</c><00:21:43.659><c> I</c><00:21:44.909><c> have</c><00:21:45.909><c> put</c>

00:21:46.049 --> 00:21:46.059 align:start position:0%
as at the end instead of Java I have put
 

00:21:46.059 --> 00:21:48.180 align:start position:0%
as at the end instead of Java I have put
some<00:21:46.210><c> bar</c><00:21:46.450><c> codes</c><00:21:46.690><c> if</c><00:21:46.899><c> you</c><00:21:47.019><c> want</c><00:21:47.200><c> to</c><00:21:47.379><c> do</c><00:21:48.159><c> a</c>

00:21:48.180 --> 00:21:48.190 align:start position:0%
some bar codes if you want to do a
 

00:21:48.190 --> 00:21:53.029 align:start position:0%
some bar codes if you want to do a
three-way<00:21:49.000><c> with</c><00:21:49.389><c> your</c><00:21:49.600><c> with</c><00:21:50.289><c> your</c><00:21:50.320><c> mobile</c><00:21:50.620><c> I</c>

00:21:53.029 --> 00:21:53.039 align:start position:0%
three-way with your with your mobile I
 

00:21:53.039 --> 00:21:55.499 align:start position:0%
three-way with your with your mobile I
think<00:21:54.039><c> using</c><00:21:54.279><c> spring</c><00:21:54.730><c> boot</c><00:21:54.940><c> and</c><00:21:55.149><c> cutting</c>

00:21:55.499 --> 00:21:55.509 align:start position:0%
think using spring boot and cutting
 

00:21:55.509 --> 00:21:57.659 align:start position:0%
think using spring boot and cutting
together<00:21:55.720><c> make</c><00:21:56.110><c> sense</c><00:21:56.350><c> because</c><00:21:56.679><c> they</c><00:21:57.309><c> share</c>

00:21:57.659 --> 00:21:57.669 align:start position:0%
together make sense because they share
 

00:21:57.669 --> 00:21:59.549 align:start position:0%
together make sense because they share
they<00:21:58.389><c> share</c><00:21:58.600><c> the</c><00:21:58.720><c> same</c><00:21:58.899><c> pragmatic</c><00:21:59.409><c> and</c>

00:21:59.549 --> 00:21:59.559 align:start position:0%
they share the same pragmatic and
 

00:21:59.559 --> 00:22:03.119 align:start position:0%
they share the same pragmatic and
innovative<00:21:59.980><c> mindset</c><00:22:00.309><c> I</c><00:22:00.970><c> mean</c><00:22:01.710><c> they</c><00:22:02.710><c> are</c><00:22:02.830><c> both</c>

00:22:03.119 --> 00:22:03.129 align:start position:0%
innovative mindset I mean they are both
 

00:22:03.129 --> 00:22:05.850 align:start position:0%
innovative mindset I mean they are both
both<00:22:03.970><c> innovative</c><00:22:04.570><c> for</c><00:22:04.750><c> example</c><00:22:05.169><c> a</c><00:22:05.379><c> spring</c>

00:22:05.850 --> 00:22:05.860 align:start position:0%
both innovative for example a spring
 

00:22:05.860 --> 00:22:08.340 align:start position:0%
both innovative for example a spring
boots<00:22:06.100><c> bring</c><00:22:06.730><c> a</c><00:22:06.759><c> lot</c><00:22:07.000><c> of</c><00:22:07.029><c> new</c><00:22:08.019><c> stuff</c>

00:22:08.340 --> 00:22:08.350 align:start position:0%
boots bring a lot of new stuff
 

00:22:08.350 --> 00:22:09.890 align:start position:0%
boots bring a lot of new stuff
innovation<00:22:09.159><c> ready</c>

00:22:09.890 --> 00:22:09.900 align:start position:0%
innovation ready
 

00:22:09.900 --> 00:22:14.330 align:start position:0%
innovation ready
but<00:22:10.230><c> also</c><00:22:10.910><c> we</c><00:22:11.910><c> use</c><00:22:12.120><c> the</c><00:22:12.600><c> eco</c><00:22:12.810><c> system</c><00:22:13.130><c> we</c><00:22:14.130><c> use</c>

00:22:14.330 --> 00:22:14.340 align:start position:0%
but also we use the eco system we use
 

00:22:14.340 --> 00:22:16.640 align:start position:0%
but also we use the eco system we use
Java<00:22:15.030><c> eco</c><00:22:15.210><c> system</c><00:22:15.540><c> very</c><00:22:15.720><c> well</c><00:22:15.840><c> and</c><00:22:16.230><c> don't</c><00:22:16.500><c> try</c>

00:22:16.640 --> 00:22:16.650 align:start position:0%
Java eco system very well and don't try
 

00:22:16.650 --> 00:22:19.160 align:start position:0%
Java eco system very well and don't try
to<00:22:16.710><c> reinvent</c><00:22:16.950><c> the</c><00:22:17.280><c> wheel</c><00:22:17.310><c> so</c><00:22:18.150><c> that's</c><00:22:18.960><c> why</c><00:22:19.140><c> I</c>

00:22:19.160 --> 00:22:19.170 align:start position:0%
to reinvent the wheel so that's why I
 

00:22:19.170 --> 00:22:21.710 align:start position:0%
to reinvent the wheel so that's why I
think<00:22:19.830><c> that</c><00:22:20.070><c> innovative</c><00:22:20.730><c> and</c><00:22:20.910><c> pragmatic</c><00:22:21.450><c> and</c>

00:22:21.710 --> 00:22:21.720 align:start position:0%
think that innovative and pragmatic and
 

00:22:21.720 --> 00:22:24.020 align:start position:0%
think that innovative and pragmatic and
and<00:22:21.960><c> Kelleen</c><00:22:22.710><c> is</c><00:22:22.860><c> very</c><00:22:23.100><c> much</c><00:22:23.430><c> about</c><00:22:23.700><c> the</c><00:22:23.850><c> same</c>

00:22:24.020 --> 00:22:24.030 align:start position:0%
and Kelleen is very much about the same
 

00:22:24.030 --> 00:22:26.860 align:start position:0%
and Kelleen is very much about the same
thing<00:22:24.300><c> it's</c><00:22:24.630><c> about</c><00:22:24.900><c> allowing</c><00:22:25.890><c> you</c><00:22:26.160><c> to</c><00:22:26.310><c> write</c>

00:22:26.860 --> 00:22:26.870 align:start position:0%
thing it's about allowing you to write
 

00:22:26.870 --> 00:22:29.600 align:start position:0%
thing it's about allowing you to write
efficiently<00:22:27.870><c> your</c><00:22:28.020><c> applications</c><00:22:28.610><c> but</c>

00:22:29.600 --> 00:22:29.610 align:start position:0%
efficiently your applications but
 

00:22:29.610 --> 00:22:32.180 align:start position:0%
efficiently your applications but
without<00:22:30.030><c> creating</c><00:22:31.020><c> a</c><00:22:31.230><c> wall</c><00:22:31.440><c> new</c><00:22:31.590><c> eco</c><00:22:31.830><c> system</c>

00:22:32.180 --> 00:22:32.190 align:start position:0%
without creating a wall new eco system
 

00:22:32.190 --> 00:22:34.690 align:start position:0%
without creating a wall new eco system
where<00:22:32.490><c> everybody</c><00:22:32.940><c> is</c><00:22:33.300><c> developing</c><00:22:33.690><c> clean</c><00:22:34.050><c> and</c>

00:22:34.690 --> 00:22:34.700 align:start position:0%
where everybody is developing clean and
 

00:22:34.700 --> 00:22:37.070 align:start position:0%
where everybody is developing clean and
we<00:22:35.700><c> have</c><00:22:35.790><c> seen</c><00:22:35.970><c> that</c><00:22:36.120><c> in</c><00:22:36.360><c> some</c><00:22:36.570><c> languages</c><00:22:37.020><c> like</c>

00:22:37.070 --> 00:22:37.080 align:start position:0%
we have seen that in some languages like
 

00:22:37.080 --> 00:22:40.670 align:start position:0%
we have seen that in some languages like
in<00:22:37.590><c> Scala</c><00:22:37.890><c> of</c><00:22:38.840><c> something</c><00:22:39.840><c> as</c><00:22:39.990><c> to</c><00:22:40.110><c> be</c><00:22:40.230><c> scary</c><00:22:40.470><c> ish</c>

00:22:40.670 --> 00:22:40.680 align:start position:0%
in Scala of something as to be scary ish
 

00:22:40.680 --> 00:22:43.160 align:start position:0%
in Scala of something as to be scary ish
to<00:22:40.890><c> be</c><00:22:41.040><c> used</c><00:22:41.250><c> if</c><00:22:41.760><c> not</c><00:22:42.030><c> that</c><00:22:42.300><c> does</c><00:22:42.750><c> not</c><00:22:42.960><c> feel</c>

00:22:43.160 --> 00:22:43.170 align:start position:0%
to be used if not that does not feel
 

00:22:43.170 --> 00:22:46.040 align:start position:0%
to be used if not that does not feel
good<00:22:43.350><c> and</c><00:22:43.560><c> I</c><00:22:44.370><c> think</c><00:22:44.880><c> cotton</c><00:22:45.600><c> is</c><00:22:45.840><c> less</c>

00:22:46.040 --> 00:22:46.050 align:start position:0%
good and I think cotton is less
 

00:22:46.050 --> 00:22:49.490 align:start position:0%
good and I think cotton is less
opinionated<00:22:46.640><c> about</c><00:22:47.640><c> that</c><00:22:47.850><c> and</c><00:22:48.120><c> hello</c><00:22:48.660><c> much</c>

00:22:49.490 --> 00:22:49.500 align:start position:0%
opinionated about that and hello much
 

00:22:49.500 --> 00:22:51.500 align:start position:0%
opinionated about that and hello much
mod<00:22:49.860><c> who</c><00:22:50.190><c> to</c><00:22:50.430><c> reuse</c><00:22:50.790><c> the</c><00:22:50.970><c> existing</c><00:22:51.120><c> ecosystem</c>

00:22:51.500 --> 00:22:51.510 align:start position:0%
mod who to reuse the existing ecosystem
 

00:22:51.510 --> 00:22:53.540 align:start position:0%
mod who to reuse the existing ecosystem
and<00:22:52.080><c> that's</c><00:22:52.200><c> why</c><00:22:52.410><c> that's</c><00:22:53.010><c> a</c><00:22:53.160><c> good</c><00:22:53.310><c> fit</c><00:22:53.520><c> with</c>

00:22:53.540 --> 00:22:53.550 align:start position:0%
and that's why that's a good fit with
 

00:22:53.550 --> 00:22:57.290 align:start position:0%
and that's why that's a good fit with
spring<00:22:54.000><c> which</c><00:22:54.240><c> is</c><00:22:54.320><c> writen</c><00:22:55.320><c> in</c><00:22:55.440><c> in</c><00:22:55.860><c> Java</c><00:22:56.070><c> and</c><00:22:56.310><c> we</c>

00:22:57.290 --> 00:22:57.300 align:start position:0%
spring which is writen in in Java and we
 

00:22:57.300 --> 00:23:00.200 align:start position:0%
spring which is writen in in Java and we
are<00:22:57.450><c> we</c><00:22:57.810><c> are</c><00:22:57.930><c> going</c><00:22:58.140><c> to</c><00:22:58.910><c> make</c><00:22:59.910><c> some</c>

00:23:00.200 --> 00:23:00.210 align:start position:0%
are we are going to make some
 

00:23:00.210 --> 00:23:02.510 align:start position:0%
are we are going to make some
improvement<00:23:00.750><c> to</c><00:23:01.020><c> make</c><00:23:01.290><c> using</c><00:23:02.070><c> spring</c><00:23:02.340><c> and</c>

00:23:02.510 --> 00:23:02.520 align:start position:0%
improvement to make using spring and
 

00:23:02.520 --> 00:23:04.610 align:start position:0%
improvement to make using spring and
cotton<00:23:02.820><c> together</c><00:23:03.000><c> the</c><00:23:03.690><c> best</c><00:23:03.900><c> as</c><00:23:04.050><c> we</c><00:23:04.200><c> can</c><00:23:04.350><c> and</c>

00:23:04.610 --> 00:23:04.620 align:start position:0%
cotton together the best as we can and
 

00:23:04.620 --> 00:23:07.460 align:start position:0%
cotton together the best as we can and
that's<00:23:05.250><c> what</c><00:23:05.400><c> pretty</c><00:23:05.700><c> well</c><00:23:05.940><c> in</c><00:23:06.060><c> fact</c><00:23:06.240><c> we</c><00:23:06.510><c> when</c>

00:23:07.460 --> 00:23:07.470 align:start position:0%
that's what pretty well in fact we when
 

00:23:07.470 --> 00:23:09.350 align:start position:0%
that's what pretty well in fact we when
developing<00:23:07.980><c> some</c><00:23:08.280><c> application</c><00:23:08.850><c> something</c>

00:23:09.350 --> 00:23:09.360 align:start position:0%
developing some application something
 

00:23:09.360 --> 00:23:11.240 align:start position:0%
developing some application something
with<00:23:09.690><c> application</c><00:23:10.080><c> with</c><00:23:10.230><c> code</c><00:23:10.410><c> clean</c><00:23:10.590><c> we</c><00:23:10.800><c> that</c>

00:23:11.240 --> 00:23:11.250 align:start position:0%
with application with code clean we that
 

00:23:11.250 --> 00:23:14.930 align:start position:0%
with application with code clean we that
don't<00:23:11.610><c> feel</c><00:23:12.770><c> not</c><00:23:13.770><c> designed</c><00:23:14.160><c> for</c><00:23:14.280><c> that</c><00:23:14.490><c> that's</c>

00:23:14.930 --> 00:23:14.940 align:start position:0%
don't feel not designed for that that's
 

00:23:14.940 --> 00:23:17.450 align:start position:0%
don't feel not designed for that that's
that's<00:23:15.270><c> pretty</c><00:23:15.420><c> nice</c><00:23:15.660><c> so</c><00:23:15.960><c> I</c><00:23:16.200><c> think</c><00:23:17.100><c> that</c><00:23:17.250><c> one</c>

00:23:17.450 --> 00:23:17.460 align:start position:0%
that's pretty nice so I think that one
 

00:23:17.460 --> 00:23:19.250 align:start position:0%
that's pretty nice so I think that one
of<00:23:17.490><c> the</c><00:23:17.610><c> key</c><00:23:17.850><c> point</c><00:23:18.060><c> who</c><00:23:18.270><c> are</c><00:23:18.360><c> why</c><00:23:18.930><c> these</c><00:23:18.990><c> two</c>

00:23:19.250 --> 00:23:19.260 align:start position:0%
of the key point who are why these two
 

00:23:19.260 --> 00:23:24.130 align:start position:0%
of the key point who are why these two
technologies<00:23:19.500><c> used</c><00:23:19.950><c> together</c><00:23:20.130><c> is</c><00:23:20.940><c> is</c><00:23:21.540><c> great</c>

00:23:24.130 --> 00:23:24.140 align:start position:0%
 
 

00:23:24.140 --> 00:23:27.020 align:start position:0%
 
I'm<00:23:25.140><c> not</c><00:23:25.200><c> here</c><00:23:25.680><c> to</c><00:23:25.830><c> say</c><00:23:26.040><c> that</c><00:23:26.280><c> everything</c><00:23:26.820><c> is</c>

00:23:27.020 --> 00:23:27.030 align:start position:0%
I'm not here to say that everything is
 

00:23:27.030 --> 00:23:27.830 align:start position:0%
I'm not here to say that everything is
perfect

00:23:27.830 --> 00:23:27.840 align:start position:0%
perfect
 

00:23:27.840 --> 00:23:30.350 align:start position:0%
perfect
as<00:23:28.380><c> a</c><00:23:28.530><c> result</c><00:23:28.830><c> friction</c><00:23:29.250><c> points</c><00:23:29.610><c> some</c><00:23:29.970><c> some</c>

00:23:30.350 --> 00:23:30.360 align:start position:0%
as a result friction points some some
 

00:23:30.360 --> 00:23:36.710 align:start position:0%
as a result friction points some some
have<00:23:30.540><c> been</c><00:23:30.750><c> already</c><00:23:31.700><c> fixed</c><00:23:35.030><c> some</c><00:23:36.030><c> some</c><00:23:36.420><c> of</c>

00:23:36.710 --> 00:23:36.720 align:start position:0%
have been already fixed some some of
 

00:23:36.720 --> 00:23:40.190 align:start position:0%
have been already fixed some some of
them<00:23:37.080><c> remains</c><00:23:37.470><c> so</c><00:23:37.950><c> the</c><00:23:38.460><c> one</c><00:23:39.180><c> of</c><00:23:39.330><c> the</c><00:23:39.510><c> friction</c>

00:23:40.190 --> 00:23:40.200 align:start position:0%
them remains so the one of the friction
 

00:23:40.200 --> 00:23:44.650 align:start position:0%
them remains so the one of the friction
points<00:23:40.560><c> that</c><00:23:40.710><c> remains</c><00:23:41.300><c> is</c><00:23:42.300><c> a</c><00:23:43.170><c> little</c><00:23:43.680><c> issue</c><00:23:43.800><c> is</c>

00:23:44.650 --> 00:23:44.660 align:start position:0%
points that remains is a little issue is
 

00:23:44.660 --> 00:23:50.540 align:start position:0%
points that remains is a little issue is
with<00:23:45.660><c> annotations</c><00:23:46.140><c> I</c><00:23:47.060><c> mean</c><00:23:48.410><c> in</c><00:23:49.410><c> code</c><00:23:49.980><c> in</c><00:23:50.250><c> Java</c>

00:23:50.540 --> 00:23:50.550 align:start position:0%
with annotations I mean in code in Java
 

00:23:50.550 --> 00:23:54.320 align:start position:0%
with annotations I mean in code in Java
when<00:23:50.940><c> you</c><00:23:51.060><c> have</c><00:23:52.280><c> an</c><00:23:53.280><c> annotation</c><00:23:53.580><c> a</c><00:23:54.090><c> real</c>

00:23:54.320 --> 00:23:54.330 align:start position:0%
when you have an annotation a real
 

00:23:54.330 --> 00:23:57.850 align:start position:0%
when you have an annotation a real
tribute<00:23:54.570><c> and</c><00:23:55.040><c> you</c><00:23:56.040><c> want</c><00:23:56.220><c> to</c><00:23:56.310><c> specify</c><00:23:56.520><c> only</c><00:23:56.850><c> one</c>

00:23:57.850 --> 00:23:57.860 align:start position:0%
tribute and you want to specify only one
 

00:23:57.860 --> 00:24:00.860 align:start position:0%
tribute and you want to specify only one
one<00:23:58.860><c> value</c><00:23:59.190><c> for</c><00:23:59.730><c> example</c><00:23:59.790><c> if</c><00:24:00.330><c> you</c><00:24:00.450><c> want</c><00:24:00.660><c> to</c>

00:24:00.860 --> 00:24:00.870 align:start position:0%
one value for example if you want to
 

00:24:00.870 --> 00:24:02.990 align:start position:0%
one value for example if you want to
write<00:24:01.200><c> request</c><00:24:01.650><c> mapping</c><00:24:01.980><c> method</c><00:24:02.340><c> equals</c>

00:24:02.990 --> 00:24:03.000 align:start position:0%
write request mapping method equals
 

00:24:03.000 --> 00:24:05.630 align:start position:0%
write request mapping method equals
request<00:24:03.630><c> method</c><00:24:03.990><c> that</c><00:24:04.170><c> gets</c><00:24:04.370><c> that</c><00:24:05.370><c> works</c>

00:24:05.630 --> 00:24:05.640 align:start position:0%
request method that gets that works
 

00:24:05.640 --> 00:24:08.780 align:start position:0%
request method that gets that works
automatically<00:24:06.150><c> in</c><00:24:06.360><c> Java</c><00:24:06.600><c> because</c><00:24:07.050><c> in</c><00:24:07.640><c> if</c><00:24:08.640><c> you</c>

00:24:08.780 --> 00:24:08.790 align:start position:0%
automatically in Java because in if you
 

00:24:08.790 --> 00:24:10.460 align:start position:0%
automatically in Java because in if you
have<00:24:08.910><c> a</c><00:24:09.000><c> loop</c><00:24:09.120><c> to</c><00:24:09.270><c> request</c><00:24:09.600><c> mapping</c><00:24:09.900><c> method</c>

00:24:10.460 --> 00:24:10.470 align:start position:0%
have a loop to request mapping method
 

00:24:10.470 --> 00:24:13.790 align:start position:0%
have a loop to request mapping method
annotation<00:24:10.710><c> that's</c><00:24:12.170><c> that's</c><00:24:13.170><c> an</c><00:24:13.290><c> array</c><00:24:13.500><c> an</c>

00:24:13.790 --> 00:24:13.800 align:start position:0%
annotation that's that's an array an
 

00:24:13.800 --> 00:24:16.040 align:start position:0%
annotation that's that's an array an
array<00:24:14.040><c> of</c><00:24:14.190><c> request</c><00:24:14.640><c> method</c><00:24:14.940><c> and</c><00:24:15.300><c> if</c><00:24:15.870><c> you</c>

00:24:16.040 --> 00:24:16.050 align:start position:0%
array of request method and if you
 

00:24:16.050 --> 00:24:17.900 align:start position:0%
array of request method and if you
specify<00:24:16.260><c> a</c><00:24:16.500><c> single</c><00:24:16.740><c> value</c><00:24:17.130><c> that's</c><00:24:17.400><c> fine</c><00:24:17.610><c> that</c>

00:24:17.900 --> 00:24:17.910 align:start position:0%
specify a single value that's fine that
 

00:24:17.910 --> 00:24:20.300 align:start position:0%
specify a single value that's fine that
works<00:24:18.060><c> in</c><00:24:18.240><c> Java</c><00:24:18.510><c> in</c><00:24:19.050><c> cotton</c><00:24:19.560><c> and</c><00:24:19.860><c> I</c><00:24:19.980><c> think</c>

00:24:20.300 --> 00:24:20.310 align:start position:0%
works in Java in cotton and I think
 

00:24:20.310 --> 00:24:22.880 align:start position:0%
works in Java in cotton and I think
the<00:24:20.430><c> same</c><00:24:20.640><c> in</c><00:24:20.790><c> scatter</c><00:24:21.080><c> you</c><00:24:22.080><c> you</c><00:24:22.530><c> have</c><00:24:22.710><c> to</c>

00:24:22.880 --> 00:24:22.890 align:start position:0%
the same in scatter you you have to
 

00:24:22.890 --> 00:24:25.070 align:start position:0%
the same in scatter you you have to
specify<00:24:23.130><c> that's</c><00:24:23.640><c> an</c><00:24:23.760><c> array</c><00:24:24.000><c> of</c><00:24:24.240><c> something</c><00:24:24.780><c> so</c>

00:24:25.070 --> 00:24:25.080 align:start position:0%
specify that's an array of something so
 

00:24:25.080 --> 00:24:27.470 align:start position:0%
specify that's an array of something so
the<00:24:25.710><c> syntax</c><00:24:25.920><c> is</c><00:24:26.250><c> a</c><00:24:26.280><c> little</c><00:24:26.700><c> bit</c><00:24:26.820><c> longer</c><00:24:27.120><c> in</c>

00:24:27.470 --> 00:24:27.480 align:start position:0%
the syntax is a little bit longer in
 

00:24:27.480 --> 00:24:28.940 align:start position:0%
the syntax is a little bit longer in
Kirkland<00:24:27.840><c> and</c><00:24:27.990><c> that's</c><00:24:28.170><c> not</c><00:24:28.470><c> very</c><00:24:28.620><c> nice</c>

00:24:28.940 --> 00:24:28.950 align:start position:0%
Kirkland and that's not very nice
 

00:24:28.950 --> 00:24:32.390 align:start position:0%
Kirkland and that's not very nice
nothing<00:24:29.580><c> blocking</c><00:24:29.760><c> but</c><00:24:30.180><c> that's</c><00:24:30.450><c> not</c><00:24:30.690><c> very</c>

00:24:32.390 --> 00:24:32.400 align:start position:0%
nothing blocking but that's not very
 

00:24:32.400 --> 00:24:35.570 align:start position:0%
nothing blocking but that's not very
that's<00:24:33.210><c> not</c><00:24:33.390><c> very</c><00:24:33.420><c> great</c><00:24:33.810><c> to</c><00:24:33.990><c> use</c><00:24:34.170><c> so</c><00:24:34.500><c> there</c><00:24:35.460><c> is</c>

00:24:35.570 --> 00:24:35.580 align:start position:0%
that's not very great to use so there is
 

00:24:35.580 --> 00:24:38.810 align:start position:0%
that's not very great to use so there is
two<00:24:35.880><c> to</c><00:24:36.210><c> one</c><00:24:36.540><c> workaround</c><00:24:37.410><c> and</c><00:24:37.560><c> one</c><00:24:37.740><c> refix</c><00:24:38.430><c> so</c>

00:24:38.810 --> 00:24:38.820 align:start position:0%
two to one workaround and one refix so
 

00:24:38.820 --> 00:24:41.540 align:start position:0%
two to one workaround and one refix so
when<00:24:39.360><c> workaround</c><00:24:39.870><c> for</c><00:24:40.080><c> this</c><00:24:40.950><c> specific</c><00:24:41.520><c> case</c>

00:24:41.540 --> 00:24:41.550 align:start position:0%
when workaround for this specific case
 

00:24:41.550 --> 00:24:45.080 align:start position:0%
when workaround for this specific case
which<00:24:42.060><c> is</c><00:24:42.240><c> much</c><00:24:43.040><c> more</c><00:24:44.040><c> common</c><00:24:44.220><c> is</c><00:24:44.610><c> to</c><00:24:44.880><c> use</c><00:24:45.060><c> a</c>

00:24:45.080 --> 00:24:45.090 align:start position:0%
which is much more common is to use a
 

00:24:45.090 --> 00:24:47.330 align:start position:0%
which is much more common is to use a
new<00:24:45.480><c> annotation</c><00:24:45.780><c> atlases</c><00:24:46.710><c> that</c><00:24:46.890><c> we</c><00:24:47.040><c> have</c><00:24:47.130><c> put</c>

00:24:47.330 --> 00:24:47.340 align:start position:0%
new annotation atlases that we have put
 

00:24:47.340 --> 00:24:51.440 align:start position:0%
new annotation atlases that we have put
in<00:24:47.490><c> spring</c><00:24:48.050><c> framework</c><00:24:49.050><c> for</c><00:24:49.440><c> that</c><00:24:49.530><c> free</c><00:24:50.150><c> so</c><00:24:51.150><c> in</c>

00:24:51.440 --> 00:24:51.450 align:start position:0%
in spring framework for that free so in
 

00:24:51.450 --> 00:24:53.720 align:start position:0%
in spring framework for that free so in
spring<00:24:51.960><c> form</c><00:24:52.200><c> of</c><00:24:52.320><c> order</c><00:24:52.560><c> 3</c><00:24:52.830><c> and</c><00:24:53.100><c> 5</c><00:24:53.340><c> and</c><00:24:53.370><c> later</c>

00:24:53.720 --> 00:24:53.730 align:start position:0%
spring form of order 3 and 5 and later
 

00:24:53.730 --> 00:24:56.300 align:start position:0%
spring form of order 3 and 5 and later
version<00:24:54.210><c> you</c><00:24:55.110><c> have</c><00:24:55.260><c> get</c><00:24:55.530><c> mapping</c><00:24:55.860><c> past</c>

00:24:56.300 --> 00:24:56.310 align:start position:0%
version you have get mapping past
 

00:24:56.310 --> 00:24:57.530 align:start position:0%
version you have get mapping past
mapping<00:24:56.670><c> but</c><00:24:57.030><c> mapping</c>

00:24:57.530 --> 00:24:57.540 align:start position:0%
mapping but mapping
 

00:24:57.540 --> 00:25:00.110 align:start position:0%
mapping but mapping
delete<00:24:57.870><c> mapping</c><00:24:58.230><c> some</c><00:24:58.590><c> shortcuts</c><00:24:59.070><c> a</c><00:24:59.610><c> little</c>

00:25:00.110 --> 00:25:00.120 align:start position:0%
delete mapping some shortcuts a little
 

00:25:00.120 --> 00:25:02.510 align:start position:0%
delete mapping some shortcuts a little
bit<00:25:00.240><c> like</c><00:25:00.420><c> what</c><00:25:00.750><c> we</c><00:25:00.930><c> you</c><00:25:01.260><c> have</c><00:25:01.440><c> in</c><00:25:01.680><c> the</c><00:25:01.950><c> jax-rs</c>

00:25:02.510 --> 00:25:02.520 align:start position:0%
bit like what we you have in the jax-rs
 

00:25:02.520 --> 00:25:05.000 align:start position:0%
bit like what we you have in the jax-rs
world<00:25:02.940><c> that</c><00:25:03.690><c> allow</c><00:25:04.020><c> you</c><00:25:04.080><c> to</c><00:25:04.440><c> specify</c><00:25:04.680><c> that</c>

00:25:05.000 --> 00:25:05.010 align:start position:0%
world that allow you to specify that
 

00:25:05.010 --> 00:25:06.680 align:start position:0%
world that allow you to specify that
that's<00:25:05.250><c> a</c><00:25:05.460><c> regular</c><00:25:05.850><c> request</c><00:25:06.210><c> mapping</c><00:25:06.510><c> with</c>

00:25:06.680 --> 00:25:06.690 align:start position:0%
that's a regular request mapping with
 

00:25:06.690 --> 00:25:08.840 align:start position:0%
that's a regular request mapping with
the<00:25:06.840><c> same</c><00:25:07.050><c> options</c><00:25:07.230><c> but</c><00:25:07.740><c> the</c><00:25:08.400><c> method</c><00:25:08.670><c> it's</c>

00:25:08.840 --> 00:25:08.850 align:start position:0%
the same options but the method it's
 

00:25:08.850 --> 00:25:11.480 align:start position:0%
the same options but the method it's
fixed<00:25:09.180><c> to</c><00:25:09.240><c> a</c><00:25:09.570><c> single</c><00:25:10.260><c> get</c><00:25:10.440><c> or</c><00:25:10.770><c> a</c><00:25:10.800><c> single</c><00:25:11.250><c> post</c>

00:25:11.480 --> 00:25:11.490 align:start position:0%
fixed to a single get or a single post
 

00:25:11.490 --> 00:25:14.930 align:start position:0%
fixed to a single get or a single post
or<00:25:11.730><c> single</c><00:25:12.210><c> delete</c><00:25:12.450><c> and</c><00:25:13.440><c> and</c><00:25:13.920><c> that's</c><00:25:14.310><c> that's</c>

00:25:14.930 --> 00:25:14.940 align:start position:0%
or single delete and and that's that's
 

00:25:14.940 --> 00:25:18.020 align:start position:0%
or single delete and and that's that's
nice<00:25:15.120><c> because</c><00:25:15.390><c> that</c><00:25:15.750><c> that's</c><00:25:16.590><c> a</c><00:25:16.710><c> way</c><00:25:16.860><c> to</c><00:25:16.950><c> put</c><00:25:17.490><c> a</c>

00:25:18.020 --> 00:25:18.030 align:start position:0%
nice because that that's a way to put a
 

00:25:18.030 --> 00:25:19.580 align:start position:0%
nice because that that's a way to put a
few<00:25:18.270><c> specific</c><00:25:18.720><c> requests</c><00:25:18.990><c> mapping</c><00:25:19.260><c> with</c><00:25:19.440><c> no</c>

00:25:19.580 --> 00:25:19.590 align:start position:0%
few specific requests mapping with no
 

00:25:19.590 --> 00:25:21.920 align:start position:0%
few specific requests mapping with no
method<00:25:19.890><c> basically</c><00:25:20.270><c> every</c><00:25:21.270><c> method</c><00:25:21.570><c> is</c><00:25:21.720><c> mapped</c>

00:25:21.920 --> 00:25:21.930 align:start position:0%
method basically every method is mapped
 

00:25:21.930 --> 00:25:25.210 align:start position:0%
method basically every method is mapped
and<00:25:22.170><c> that</c><00:25:22.590><c> could</c><00:25:22.860><c> also</c><00:25:23.480><c> cause</c><00:25:24.480><c> some</c>

00:25:25.210 --> 00:25:25.220 align:start position:0%
and that could also cause some
 

00:25:25.220 --> 00:25:27.680 align:start position:0%
and that could also cause some
unexpected<00:25:26.220><c> behavior</c><00:25:26.610><c> so</c><00:25:26.910><c> that's</c><00:25:27.420><c> that</c>

00:25:27.680 --> 00:25:27.690 align:start position:0%
unexpected behavior so that's that
 

00:25:27.690 --> 00:25:29.150 align:start position:0%
unexpected behavior so that's that
pretty<00:25:27.900><c> nice</c><00:25:28.110><c> to</c><00:25:28.290><c> have</c><00:25:28.410><c> this</c><00:25:28.530><c> shortcut</c><00:25:28.920><c> and</c>

00:25:29.150 --> 00:25:29.160 align:start position:0%
pretty nice to have this shortcut and
 

00:25:29.160 --> 00:25:31.670 align:start position:0%
pretty nice to have this shortcut and
with<00:25:29.850><c> this</c><00:25:30.000><c> shortcut</c><00:25:30.390><c> we</c><00:25:30.540><c> don't</c><00:25:30.750><c> have</c><00:25:30.900><c> the</c>

00:25:31.670 --> 00:25:31.680 align:start position:0%
with this shortcut we don't have the
 

00:25:31.680 --> 00:25:36.820 align:start position:0%
with this shortcut we don't have the
array<00:25:32.010><c> of</c><00:25:32.220><c> issue</c><00:25:33.080><c> in</c><00:25:34.080><c> sprin</c><00:25:34.620><c> Kirkland</c><00:25:35.490><c> 1.1</c>

00:25:36.820 --> 00:25:36.830 align:start position:0%
array of issue in sprin Kirkland 1.1
 

00:25:36.830 --> 00:25:41.120 align:start position:0%
array of issue in sprin Kirkland 1.1
this<00:25:37.830><c> issue</c><00:25:38.070><c> is</c><00:25:38.580><c> likely</c><00:25:39.000><c> to</c><00:25:39.270><c> be</c><00:25:39.390><c> fixed</c><00:25:39.750><c> so</c><00:25:40.200><c> like</c>

00:25:41.120 --> 00:25:41.130 align:start position:0%
this issue is likely to be fixed so like
 

00:25:41.130 --> 00:25:43.370 align:start position:0%
this issue is likely to be fixed so like
in<00:25:41.310><c> July</c><00:25:41.610><c> you</c><00:25:41.670><c> will</c><00:25:41.880><c> be</c><00:25:42.000><c> able</c><00:25:42.120><c> to</c><00:25:42.540><c> specify</c><00:25:43.110><c> a</c>

00:25:43.370 --> 00:25:43.380 align:start position:0%
in July you will be able to specify a
 

00:25:43.380 --> 00:25:51.190 align:start position:0%
in July you will be able to specify a
single<00:25:43.650><c> value</c><00:25:44.100><c> for</c><00:25:45.860><c> array</c><00:25:47.210><c> annotation</c><00:25:49.070><c> values</c>

00:25:51.190 --> 00:25:51.200 align:start position:0%
single value for array annotation values
 

00:25:51.200 --> 00:25:55.070 align:start position:0%
single value for array annotation values
the<00:25:52.200><c> second</c><00:25:52.530><c> issue</c><00:25:52.650><c> is</c><00:25:53.450><c> come</c><00:25:54.450><c> from</c><00:25:54.600><c> a</c><00:25:54.750><c> design</c>

00:25:55.070 --> 00:25:55.080 align:start position:0%
the second issue is come from a design
 

00:25:55.080 --> 00:25:58.370 align:start position:0%
the second issue is come from a design
decision<00:25:55.260><c> from</c><00:25:56.010><c> Colleen</c><00:25:56.400><c> so</c><00:25:56.990><c> there</c><00:25:57.990><c> there</c><00:25:58.290><c> has</c>

00:25:58.370 --> 00:25:58.380 align:start position:0%
decision from Colleen so there there has
 

00:25:58.380 --> 00:26:00.110 align:start position:0%
decision from Colleen so there there has
been<00:25:58.530><c> a</c><00:25:58.590><c> lot</c><00:25:58.830><c> of</c><00:25:58.860><c> discussion</c><00:25:59.550><c> about</c><00:25:59.700><c> this</c>

00:26:00.110 --> 00:26:00.120 align:start position:0%
been a lot of discussion about this
 

00:26:00.120 --> 00:26:03.800 align:start position:0%
been a lot of discussion about this
particular<00:26:00.780><c> design</c><00:26:01.140><c> point</c><00:26:01.850><c> some</c><00:26:02.850><c> some</c><00:26:03.510><c> people</c>

00:26:03.800 --> 00:26:03.810 align:start position:0%
particular design point some some people
 

00:26:03.810 --> 00:26:06.140 align:start position:0%
particular design point some some people
are<00:26:04.020><c> happy</c><00:26:04.680><c> with</c><00:26:04.980><c> that</c><00:26:05.010><c> choice</c><00:26:05.190><c> and</c><00:26:05.820><c> bhajiya</c>

00:26:06.140 --> 00:26:06.150 align:start position:0%
are happy with that choice and bhajiya
 

00:26:06.150 --> 00:26:08.360 align:start position:0%
are happy with that choice and bhajiya
some<00:26:06.480><c> are</c><00:26:06.630><c> not</c><00:26:06.810><c> but</c><00:26:07.110><c> in</c><00:26:07.680><c> Kirkland</c>

00:26:08.360 --> 00:26:08.370 align:start position:0%
some are not but in Kirkland
 

00:26:08.370 --> 00:26:11.660 align:start position:0%
some are not but in Kirkland
the<00:26:08.640><c> classes</c><00:26:09.180><c> are</c><00:26:09.480><c> final</c><00:26:10.170><c> by</c><00:26:10.380><c> default</c><00:26:10.800><c> you</c>

00:26:11.660 --> 00:26:11.670 align:start position:0%
the classes are final by default you
 

00:26:11.670 --> 00:26:13.340 align:start position:0%
the classes are final by default you
will<00:26:11.820><c> see</c><00:26:11.970><c> later</c><00:26:12.090><c> that</c><00:26:12.300><c> canelo</c><00:26:12.990><c> some</c>

00:26:13.340 --> 00:26:13.350 align:start position:0%
will see later that canelo some
 

00:26:13.350 --> 00:26:15.800 align:start position:0%
will see later that canelo some
additional<00:26:13.740><c> extensibility</c><00:26:14.220><c> so</c><00:26:14.760><c> but</c><00:26:15.390><c> by</c>

00:26:15.800 --> 00:26:15.810 align:start position:0%
additional extensibility so but by
 

00:26:15.810 --> 00:26:20.630 align:start position:0%
additional extensibility so but by
default<00:26:17.390><c> plus</c><00:26:18.390><c> classes</c><00:26:18.930><c> are</c><00:26:19.200><c> finer</c><00:26:19.470><c> in</c><00:26:20.280><c> Java</c>

00:26:20.630 --> 00:26:20.640 align:start position:0%
default plus classes are finer in Java
 

00:26:20.640 --> 00:26:22.610 align:start position:0%
default plus classes are finer in Java
by<00:26:21.060><c> default</c><00:26:21.450><c> the</c><00:26:21.570><c> classes</c><00:26:21.900><c> are</c><00:26:22.020><c> open</c><00:26:22.170><c> and</c><00:26:22.560><c> you</c>

00:26:22.610 --> 00:26:22.620 align:start position:0%
by default the classes are open and you
 

00:26:22.620 --> 00:26:26.060 align:start position:0%
by default the classes are open and you
you<00:26:23.250><c> have</c><00:26:23.670><c> to</c><00:26:23.880><c> put</c><00:26:24.180><c> final</c><00:26:24.630><c> to</c><00:26:24.840><c> say</c><00:26:25.050><c> ok</c><00:26:25.380><c> don't</c>

00:26:26.060 --> 00:26:26.070 align:start position:0%
you have to put final to say ok don't
 

00:26:26.070 --> 00:26:27.860 align:start position:0%
you have to put final to say ok don't
extend<00:26:26.430><c> this</c><00:26:26.610><c> class</c><00:26:26.910><c> don't</c><00:26:27.210><c> allow</c><00:26:27.450><c> to</c><00:26:27.480><c> extend</c>

00:26:27.860 --> 00:26:27.870 align:start position:0%
extend this class don't allow to extend
 

00:26:27.870 --> 00:26:29.900 align:start position:0%
extend this class don't allow to extend
this<00:26:27.990><c> class</c><00:26:28.200><c> or</c><00:26:28.440><c> don't</c><00:26:28.830><c> allow</c><00:26:28.950><c> to</c><00:26:29.130><c> override</c>

00:26:29.900 --> 00:26:29.910 align:start position:0%
this class or don't allow to override
 

00:26:29.910 --> 00:26:33.469 align:start position:0%
this class or don't allow to override
this<00:26:30.150><c> method</c><00:26:30.210><c> in</c><00:26:31.020><c> contain</c><00:26:31.500><c> that's</c><00:26:32.160><c> the</c><00:26:32.430><c> other</c>

00:26:33.469 --> 00:26:33.479 align:start position:0%
this method in contain that's the other
 

00:26:33.479 --> 00:26:35.749 align:start position:0%
this method in contain that's the other
by<00:26:33.809><c> default</c><00:26:33.989><c> pleasant</c><00:26:34.649><c> methods</c><00:26:34.950><c> are</c><00:26:35.369><c> final</c>

00:26:35.749 --> 00:26:35.759 align:start position:0%
by default pleasant methods are final
 

00:26:35.759 --> 00:26:37.849 align:start position:0%
by default pleasant methods are final
and<00:26:35.909><c> you</c><00:26:36.210><c> have</c><00:26:36.359><c> to</c><00:26:36.479><c> use</c><00:26:36.659><c> open</c><00:26:36.960><c> keyword</c><00:26:37.499><c> to</c>

00:26:37.849 --> 00:26:37.859 align:start position:0%
and you have to use open keyword to
 

00:26:37.859 --> 00:26:40.999 align:start position:0%
and you have to use open keyword to
specify<00:26:38.479><c> that</c><00:26:39.479><c> it</c><00:26:39.779><c> should</c><00:26:39.960><c> be</c><00:26:40.109><c> extended</c><00:26:40.799><c> or</c>

00:26:40.999 --> 00:26:41.009 align:start position:0%
specify that it should be extended or
 

00:26:41.009 --> 00:26:44.830 align:start position:0%
specify that it should be extended or
overloaded

00:26:44.830 --> 00:26:44.840 align:start position:0%
 
 

00:26:44.840 --> 00:26:49.119 align:start position:0%
 
why<00:26:45.840><c> nots</c><00:26:46.049><c> but</c><00:26:46.700><c> that's</c><00:26:47.700><c> not</c><00:26:47.849><c> a</c><00:26:47.879><c> good</c><00:26:48.090><c> fit</c><00:26:48.299><c> with</c>

00:26:49.119 --> 00:26:49.129 align:start position:0%
why nots but that's not a good fit with
 

00:26:49.129 --> 00:26:52.279 align:start position:0%
why nots but that's not a good fit with
some<00:26:50.129><c> mocking</c><00:26:50.669><c> libraries</c><00:26:51.119><c> or</c><00:26:51.509><c> some</c><00:26:51.840><c> saturated</c>

00:26:52.279 --> 00:26:52.289 align:start position:0%
some mocking libraries or some saturated
 

00:26:52.289 --> 00:26:54.589 align:start position:0%
some mocking libraries or some saturated
proxies<00:26:52.679><c> and</c><00:26:52.889><c> in</c><00:26:53.009><c> spring</c><00:26:53.309><c> we</c><00:26:54.210><c> use</c><00:26:54.389><c> digital</c>

00:26:54.589 --> 00:26:54.599 align:start position:0%
proxies and in spring we use digital
 

00:26:54.599 --> 00:26:56.930 align:start position:0%
proxies and in spring we use digital
proxies<00:26:54.960><c> we</c><00:26:55.499><c> also</c><00:26:55.739><c> used</c><00:26:56.070><c> other</c><00:26:56.429><c> kind</c><00:26:56.789><c> of</c>

00:26:56.930 --> 00:26:56.940 align:start position:0%
proxies we also used other kind of
 

00:26:56.940 --> 00:26:59.930 align:start position:0%
proxies we also used other kind of
Jenica<00:26:57.599><c> demmick</c><00:26:57.869><c> proxies</c><00:26:58.259><c> but</c><00:26:58.369><c> we</c><00:26:59.369><c> use</c><00:26:59.580><c> some</c>

00:26:59.930 --> 00:26:59.940 align:start position:0%
Jenica demmick proxies but we use some
 

00:26:59.940 --> 00:27:04.399 align:start position:0%
Jenica demmick proxies but we use some
jelly<00:27:00.840><c> proxies</c><00:27:01.489><c> so</c><00:27:02.489><c> with</c><00:27:03.389><c> the</c><00:27:03.690><c> current</c><00:27:04.049><c> cut</c><00:27:04.229><c> in</c>

00:27:04.399 --> 00:27:04.409 align:start position:0%
jelly proxies so with the current cut in
 

00:27:04.409 --> 00:27:04.999 align:start position:0%
jelly proxies so with the current cut in
one<00:27:04.559><c> dot</c><00:27:04.769><c> Oh</c>

00:27:04.999 --> 00:27:05.009 align:start position:0%
one dot Oh
 

00:27:05.009 --> 00:27:10.369 align:start position:0%
one dot Oh
how<00:27:05.369><c> to</c><00:27:05.429><c> handle</c><00:27:05.789><c> that</c><00:27:07.070><c> well</c><00:27:09.080><c> first</c><00:27:10.080><c> there</c><00:27:10.259><c> is</c>

00:27:10.369 --> 00:27:10.379 align:start position:0%
how to handle that well first there is
 

00:27:10.379 --> 00:27:13.849 align:start position:0%
how to handle that well first there is
no<00:27:10.529><c> breaking</c><00:27:10.830><c> point</c><00:27:11.039><c> you</c><00:27:11.789><c> only</c><00:27:12.149><c> have</c><00:27:12.720><c> to</c><00:27:13.139><c> put</c>

00:27:13.849 --> 00:27:13.859 align:start position:0%
no breaking point you only have to put
 

00:27:13.859 --> 00:27:16.339 align:start position:0%
no breaking point you only have to put
open<00:27:14.249><c> keywords</c><00:27:14.639><c> and</c><00:27:15.299><c> classes</c><00:27:15.929><c> and</c><00:27:16.049><c> method</c>

00:27:16.339 --> 00:27:16.349 align:start position:0%
open keywords and classes and method
 

00:27:16.349 --> 00:27:19.219 align:start position:0%
open keywords and classes and method
level<00:27:16.649><c> but</c><00:27:17.210><c> again</c><00:27:18.210><c> that's</c><00:27:18.419><c> against</c><00:27:18.869><c> the</c>

00:27:19.219 --> 00:27:19.229 align:start position:0%
level but again that's against the
 

00:27:19.229 --> 00:27:21.320 align:start position:0%
level but again that's against the
spirit<00:27:19.590><c> of</c><00:27:19.739><c> katene</c><00:27:20.070><c> that</c><00:27:20.309><c> is</c><00:27:20.580><c> to</c><00:27:20.849><c> allow</c><00:27:20.970><c> you</c><00:27:21.179><c> to</c>

00:27:21.320 --> 00:27:21.330 align:start position:0%
spirit of katene that is to allow you to
 

00:27:21.330 --> 00:27:23.479 align:start position:0%
spirit of katene that is to allow you to
write<00:27:21.509><c> shorter</c><00:27:21.899><c> code</c><00:27:22.109><c> and</c><00:27:22.349><c> that's</c><00:27:23.129><c> a</c><00:27:23.340><c> little</c>

00:27:23.479 --> 00:27:23.489 align:start position:0%
write shorter code and that's a little
 

00:27:23.489 --> 00:27:26.509 align:start position:0%
write shorter code and that's a little
bit<00:27:23.759><c> annoying</c><00:27:24.179><c> to</c><00:27:24.539><c> be</c><00:27:24.629><c> able</c><00:27:24.809><c> to</c><00:27:24.960><c> specify</c><00:27:25.289><c> to</c><00:27:25.950><c> be</c>

00:27:26.509 --> 00:27:26.519 align:start position:0%
bit annoying to be able to specify to be
 

00:27:26.519 --> 00:27:28.669 align:start position:0%
bit annoying to be able to specify to be
forced<00:27:27.029><c> to</c><00:27:27.090><c> specify</c><00:27:27.599><c> open</c><00:27:28.019><c> for</c><00:27:28.289><c> each</c><00:27:28.440><c> method</c>

00:27:28.669 --> 00:27:28.679 align:start position:0%
forced to specify open for each method
 

00:27:28.679 --> 00:27:30.919 align:start position:0%
forced to specify open for each method
or<00:27:29.399><c> show</c><00:27:29.580><c> configuration</c><00:27:30.149><c> passes</c><00:27:30.450><c> for</c><00:27:30.539><c> example</c>

00:27:30.919 --> 00:27:30.929 align:start position:0%
or show configuration passes for example
 

00:27:30.929 --> 00:27:33.799 align:start position:0%
or show configuration passes for example
so<00:27:31.649><c> when</c><00:27:32.580><c> you</c><00:27:32.700><c> can</c><00:27:32.940><c> for</c><00:27:33.210><c> service</c><00:27:33.570><c> and</c>

00:27:33.799 --> 00:27:33.809 align:start position:0%
so when you can for service and
 

00:27:33.809 --> 00:27:37.190 align:start position:0%
so when you can for service and
repositories<00:27:35.149><c> unique</c><00:27:36.149><c> and</c><00:27:36.269><c> dynamic</c><00:27:36.599><c> proxies</c>

00:27:37.190 --> 00:27:37.200 align:start position:0%
repositories unique and dynamic proxies
 

00:27:37.200 --> 00:27:39.700 align:start position:0%
repositories unique and dynamic proxies
so<00:27:37.679><c> that's</c><00:27:37.889><c> the</c><00:27:38.009><c> default</c><00:27:38.190><c> where</c><00:27:38.669><c> when</c><00:27:39.239><c> you</c><00:27:39.359><c> use</c>

00:27:39.700 --> 00:27:39.710 align:start position:0%
so that's the default where when you use
 

00:27:39.710 --> 00:27:42.200 align:start position:0%
so that's the default where when you use
classes<00:27:40.710><c> with</c><00:27:40.889><c> interfaces</c><00:27:41.429><c> because</c><00:27:41.759><c> in</c><00:27:42.090><c> that</c>

00:27:42.200 --> 00:27:42.210 align:start position:0%
classes with interfaces because in that
 

00:27:42.210 --> 00:27:44.509 align:start position:0%
classes with interfaces because in that
case<00:27:42.450><c> we</c><00:27:42.749><c> are</c><00:27:43.049><c> able</c><00:27:43.259><c> to</c><00:27:43.440><c> use</c><00:27:43.739><c> Jade</c><00:27:44.070><c> Academy</c>

00:27:44.509 --> 00:27:44.519 align:start position:0%
case we are able to use Jade Academy
 

00:27:44.519 --> 00:27:46.070 align:start position:0%
case we are able to use Jade Academy
proxies<00:27:44.909><c> and</c><00:27:45.090><c> that</c><00:27:45.299><c> works</c><00:27:45.509><c> perfectly</c><00:27:45.899><c> well</c>

00:27:46.070 --> 00:27:46.080 align:start position:0%
proxies and that works perfectly well
 

00:27:46.080 --> 00:27:47.779 align:start position:0%
proxies and that works perfectly well
because<00:27:46.409><c> that</c><00:27:47.039><c> doesn't</c><00:27:47.399><c> require</c><00:27:47.609><c> you</c>

00:27:47.779 --> 00:27:47.789 align:start position:0%
because that doesn't require you
 

00:27:47.789 --> 00:27:51.799 align:start position:0%
because that doesn't require you
internally<00:27:48.119><c> to</c><00:27:48.330><c> extend</c><00:27:48.659><c> the</c><00:27:49.200><c> class</c><00:27:50.809><c> when</c>

00:27:51.799 --> 00:27:51.809 align:start position:0%
internally to extend the class when
 

00:27:51.809 --> 00:27:52.729 align:start position:0%
internally to extend the class when
that's<00:27:52.019><c> not</c><00:27:52.229><c> possible</c>

00:27:52.729 --> 00:27:52.739 align:start position:0%
that's not possible
 

00:27:52.739 --> 00:27:55.489 align:start position:0%
that's not possible
for<00:27:52.979><c> example</c><00:27:53.429><c> for</c><00:27:53.759><c> add</c><00:27:53.940><c> configuration</c><00:27:54.599><c> or</c><00:27:54.779><c> for</c>

00:27:55.489 --> 00:27:55.499 align:start position:0%
for example for add configuration or for
 

00:27:55.499 --> 00:27:59.330 align:start position:0%
for example for add configuration or for
in<00:27:56.309><c> some</c><00:27:57.080><c> if</c><00:27:58.080><c> your</c><00:27:58.259><c> service</c><00:27:58.619><c> of</c><00:27:58.769><c> repository</c>

00:27:59.330 --> 00:27:59.340 align:start position:0%
in some if your service of repository
 

00:27:59.340 --> 00:28:01.999 align:start position:0%
in some if your service of repository
has<00:27:59.580><c> no</c><00:27:59.789><c> interface</c><00:28:00.299><c> or</c><00:28:00.599><c> thing</c><00:28:00.779><c> like</c><00:28:00.809><c> that</c><00:28:01.009><c> you</c>

00:28:01.999 --> 00:28:02.009 align:start position:0%
has no interface or thing like that you
 

00:28:02.009 --> 00:28:04.669 align:start position:0%
has no interface or thing like that you
will<00:28:02.129><c> have</c><00:28:02.249><c> to</c><00:28:02.429><c> put</c><00:28:02.639><c> the</c><00:28:02.789><c> open</c><00:28:02.909><c> keyword</c><00:28:03.679><c> at</c>

00:28:04.669 --> 00:28:04.679 align:start position:0%
will have to put the open keyword at
 

00:28:04.679 --> 00:28:08.719 align:start position:0%
will have to put the open keyword at
class<00:28:05.039><c> and</c><00:28:05.340><c> method</c><00:28:05.700><c> level</c><00:28:06.169><c> hopefully</c><00:28:07.729><c> because</c>

00:28:08.719 --> 00:28:08.729 align:start position:0%
class and method level hopefully because
 

00:28:08.729 --> 00:28:10.759 align:start position:0%
class and method level hopefully because
we<00:28:08.849><c> have</c><00:28:08.940><c> raised</c><00:28:09.179><c> that</c><00:28:09.599><c> point</c><00:28:09.749><c> to</c><00:28:10.169><c> jetbrains</c>

00:28:10.759 --> 00:28:10.769 align:start position:0%
we have raised that point to jetbrains
 

00:28:10.769 --> 00:28:13.940 align:start position:0%
we have raised that point to jetbrains
which<00:28:11.009><c> developed</c><00:28:11.519><c> katene</c><00:28:12.320><c> that</c><00:28:13.320><c> should</c><00:28:13.769><c> be</c>

00:28:13.940 --> 00:28:13.950 align:start position:0%
which developed katene that should be
 

00:28:13.950 --> 00:28:19.519 align:start position:0%
which developed katene that should be
fixed<00:28:14.309><c> in</c><00:28:14.460><c> :</c><00:28:15.090><c> 1.1</c><00:28:15.769><c> we</c><00:28:16.769><c> are</c><00:28:17.450><c> we</c><00:28:18.450><c> are</c><00:28:18.529><c> thinking</c>

00:28:19.519 --> 00:28:19.529 align:start position:0%
fixed in : 1.1 we are we are thinking
 

00:28:19.529 --> 00:28:23.269 align:start position:0%
fixed in : 1.1 we are we are thinking
about<00:28:19.679><c> values</c><00:28:20.279><c> ways</c><00:28:21.090><c> to</c><00:28:21.389><c> under</c><00:28:21.659><c> that</c><00:28:22.070><c> one</c><00:28:23.070><c> of</c>

00:28:23.269 --> 00:28:23.279 align:start position:0%
about values ways to under that one of
 

00:28:23.279 --> 00:28:28.070 align:start position:0%
about values ways to under that one of
the<00:28:23.549><c> most</c><00:28:25.580><c> most</c><00:28:26.580><c> interesting</c><00:28:27.119><c> one</c><00:28:27.299><c> is</c><00:28:27.509><c> to</c><00:28:27.869><c> be</c>

00:28:28.070 --> 00:28:28.080 align:start position:0%
the most most interesting one is to be
 

00:28:28.080 --> 00:28:32.419 align:start position:0%
the most most interesting one is to be
able<00:28:28.229><c> to</c><00:28:28.440><c> provide</c><00:28:29.039><c> a</c><00:28:30.080><c> meta</c><00:28:31.080><c> F</c><00:28:31.349><c> file</c><00:28:31.799><c> that</c><00:28:32.249><c> will</c>

00:28:32.419 --> 00:28:32.429 align:start position:0%
able to provide a meta F file that will
 

00:28:32.429 --> 00:28:34.639 align:start position:0%
able to provide a meta F file that will
be<00:28:32.580><c> in</c><00:28:32.700><c> the</c><00:28:32.909><c> jars</c><00:28:33.269><c> of</c><00:28:33.479><c> example</c><00:28:33.899><c> in</c><00:28:33.989><c> spring</c><00:28:34.289><c> Asia</c>

00:28:34.639 --> 00:28:34.649 align:start position:0%
be in the jars of example in spring Asia
 

00:28:34.649 --> 00:28:36.799 align:start position:0%
be in the jars of example in spring Asia
that<00:28:35.429><c> could</c><00:28:35.669><c> allow</c><00:28:35.879><c> us</c><00:28:36.059><c> to</c><00:28:36.210><c> specify</c><00:28:36.450><c> to</c>

00:28:36.799 --> 00:28:36.809 align:start position:0%
that could allow us to specify to
 

00:28:36.809 --> 00:28:40.099 align:start position:0%
that could allow us to specify to
Kathleen<00:28:37.289><c> compiler</c><00:28:37.649><c> that</c><00:28:38.269><c> every</c><00:28:39.269><c> class</c>

00:28:40.099 --> 00:28:40.109 align:start position:0%
Kathleen compiler that every class
 

00:28:40.109 --> 00:28:43.249 align:start position:0%
Kathleen compiler that every class
annotated<00:28:40.830><c> with</c><00:28:40.859><c> add</c><00:28:41.399><c> components</c><00:28:42.259><c> directly</c>

00:28:43.249 --> 00:28:43.259 align:start position:0%
annotated with add components directly
 

00:28:43.259 --> 00:28:45.049 align:start position:0%
annotated with add components directly
or<00:28:43.440><c> indirectly</c><00:28:43.679><c> because</c><00:28:44.099><c> I</c><00:28:44.460><c> don't</c><00:28:44.849><c> know</c><00:28:44.970><c> if</c>

00:28:45.049 --> 00:28:45.059 align:start position:0%
or indirectly because I don't know if
 

00:28:45.059 --> 00:28:46.820 align:start position:0%
or indirectly because I don't know if
you<00:28:45.179><c> know</c><00:28:45.509><c> but</c><00:28:45.539><c> every</c>

00:28:46.820 --> 00:28:46.830 align:start position:0%
you know but every
 

00:28:46.830 --> 00:28:48.950 align:start position:0%
you know but every
at<00:28:46.890><c> configuration</c><00:28:47.549><c> ad</c><00:28:47.730><c> series</c><00:28:48.000><c> at</c><00:28:48.360><c> repository</c>

00:28:48.950 --> 00:28:48.960 align:start position:0%
at configuration ad series at repository
 

00:28:48.960 --> 00:28:52.460 align:start position:0%
at configuration ad series at repository
is<00:28:49.549><c> itself</c><00:28:50.549><c> annotated</c><00:28:51.419><c> that's</c><00:28:51.809><c> all</c><00:28:52.110><c> add</c>

00:28:52.460 --> 00:28:52.470 align:start position:0%
is itself annotated that's all add
 

00:28:52.470 --> 00:28:54.950 align:start position:0%
is itself annotated that's all add
components<00:28:53.010><c> basically</c><00:28:53.820><c> because</c><00:28:54.779><c> this</c>

00:28:54.950 --> 00:28:54.960 align:start position:0%
components basically because this
 

00:28:54.960 --> 00:28:56.750 align:start position:0%
components basically because this
annotation<00:28:55.320><c> are</c><00:28:55.649><c> not</c><00:28:55.890><c> I</c><00:28:56.010><c> did</c><00:28:56.190><c> buy</c><00:28:56.340><c> at</c>

00:28:56.750 --> 00:28:56.760 align:start position:0%
annotation are not I did buy at
 

00:28:56.760 --> 00:28:59.750 align:start position:0%
annotation are not I did buy at
component<00:28:57.240><c> so</c><00:28:58.019><c> if</c><00:28:58.350><c> cotton</c><00:28:58.919><c> is</c><00:28:59.070><c> able</c><00:28:59.429><c> to</c>

00:28:59.750 --> 00:28:59.760 align:start position:0%
component so if cotton is able to
 

00:28:59.760 --> 00:29:02.230 align:start position:0%
component so if cotton is able to
recognize<00:29:00.120><c> that</c><00:29:00.779><c> add</c><00:29:01.049><c> component</c><00:29:01.590><c> classes</c>

00:29:02.230 --> 00:29:02.240 align:start position:0%
recognize that add component classes
 

00:29:02.240 --> 00:29:05.720 align:start position:0%
recognize that add component classes
should<00:29:03.240><c> be</c><00:29:03.419><c> opened</c><00:29:03.840><c> by</c><00:29:03.960><c> default</c><00:29:04.350><c> we</c><00:29:04.769><c> you</c><00:29:05.490><c> won't</c>

00:29:05.720 --> 00:29:05.730 align:start position:0%
should be opened by default we you won't
 

00:29:05.730 --> 00:29:09.019 align:start position:0%
should be opened by default we you won't
have<00:29:05.960><c> to</c><00:29:06.960><c> do</c><00:29:07.140><c> all</c><00:29:07.470><c> this</c><00:29:07.649><c> kind</c><00:29:07.890><c> of</c><00:29:07.980><c> stuff</c><00:29:08.039><c> so</c><00:29:08.460><c> we</c>

00:29:09.019 --> 00:29:09.029 align:start position:0%
have to do all this kind of stuff so we
 

00:29:09.029 --> 00:29:14.620 align:start position:0%
have to do all this kind of stuff so we
are<00:29:09.179><c> trying</c><00:29:09.659><c> to</c><00:29:09.899><c> find</c><00:29:10.169><c> a</c><00:29:10.260><c> way</c><00:29:10.440><c> to</c><00:29:12.049><c> make</c><00:29:13.049><c> some</c>

00:29:14.620 --> 00:29:14.630 align:start position:0%
are trying to find a way to make some
 

00:29:14.630 --> 00:29:17.480 align:start position:0%
are trying to find a way to make some
classes<00:29:15.630><c> annotated</c><00:29:16.230><c> by</c><00:29:16.380><c> a</c><00:29:16.490><c> particular</c>

00:29:17.480 --> 00:29:17.490 align:start position:0%
classes annotated by a particular
 

00:29:17.490 --> 00:29:21.350 align:start position:0%
classes annotated by a particular
annotation<00:29:18.299><c> open</c><00:29:19.049><c> by</c><00:29:19.200><c> default</c><00:29:19.940><c> for</c><00:29:20.940><c> the</c>

00:29:21.350 --> 00:29:21.360 align:start position:0%
annotation open by default for the
 

00:29:21.360 --> 00:29:23.389 align:start position:0%
annotation open by default for the
compiler<00:29:21.659><c> I</c><00:29:21.809><c> mean</c><00:29:22.139><c> in</c><00:29:22.500><c> terms</c><00:29:22.769><c> of</c><00:29:22.860><c> user</c><00:29:23.130><c> you</c>

00:29:23.389 --> 00:29:23.399 align:start position:0%
compiler I mean in terms of user you
 

00:29:23.399 --> 00:29:24.649 align:start position:0%
compiler I mean in terms of user you
won't<00:29:23.580><c> be</c><00:29:23.700><c> able</c><00:29:23.820><c> to</c><00:29:23.940><c> extend</c><00:29:24.179><c> it</c><00:29:24.360><c> but</c><00:29:24.510><c> the</c>

00:29:24.649 --> 00:29:24.659 align:start position:0%
won't be able to extend it but the
 

00:29:24.659 --> 00:29:27.409 align:start position:0%
won't be able to extend it but the
compiler<00:29:25.010><c> or</c><00:29:26.010><c> during</c><00:29:26.580><c> the</c><00:29:26.700><c> runtime</c><00:29:26.880><c> that</c><00:29:27.269><c> will</c>

00:29:27.409 --> 00:29:27.419 align:start position:0%
compiler or during the runtime that will
 

00:29:27.419 --> 00:29:30.950 align:start position:0%
compiler or during the runtime that will
be<00:29:27.510><c> possible</c><00:29:27.870><c> to</c><00:29:27.990><c> extend</c><00:29:28.260><c> it</c><00:29:29.630><c> there</c><00:29:30.630><c> is</c><00:29:30.750><c> also</c>

00:29:30.950 --> 00:29:30.960 align:start position:0%
be possible to extend it there is also
 

00:29:30.960 --> 00:29:33.500 align:start position:0%
be possible to extend it there is also
other<00:29:31.380><c> ways</c><00:29:32.130><c> to</c><00:29:32.399><c> do</c><00:29:32.549><c> that</c><00:29:32.700><c> may</c><00:29:33.090><c> be</c><00:29:33.149><c> some</c>

00:29:33.500 --> 00:29:33.510 align:start position:0%
other ways to do that may be some
 

00:29:33.510 --> 00:29:35.299 align:start position:0%
other ways to do that may be some
compiler<00:29:33.899><c> plug-in</c><00:29:34.380><c> may</c><00:29:34.620><c> be</c><00:29:34.769><c> some</c><00:29:34.950><c> build</c><00:29:35.159><c> tool</c>

00:29:35.299 --> 00:29:35.309 align:start position:0%
compiler plug-in may be some build tool
 

00:29:35.309 --> 00:29:38.120 align:start position:0%
compiler plug-in may be some build tool
but<00:29:35.549><c> my</c><00:29:35.730><c> my</c><00:29:35.970><c> preferred</c><00:29:36.299><c> one</c><00:29:36.480><c> currently</c><00:29:36.929><c> is</c><00:29:37.169><c> the</c>

00:29:38.120 --> 00:29:38.130 align:start position:0%
but my my preferred one currently is the
 

00:29:38.130 --> 00:29:42.769 align:start position:0%
but my my preferred one currently is the
meta<00:29:38.309><c> f1</c><00:29:38.909><c> because</c><00:29:39.380><c> we</c><00:29:40.380><c> just</c><00:29:40.860><c> if</c><00:29:41.789><c> cutting</c><00:29:42.570><c> guys</c>

00:29:42.769 --> 00:29:42.779 align:start position:0%
meta f1 because we just if cutting guys
 

00:29:42.779 --> 00:29:44.690 align:start position:0%
meta f1 because we just if cutting guys
choose<00:29:43.139><c> to</c><00:29:43.169><c> implement</c><00:29:43.470><c> that</c><00:29:43.799><c> we</c><00:29:44.220><c> will</c><00:29:44.399><c> just</c>

00:29:44.690 --> 00:29:44.700 align:start position:0%
choose to implement that we will just
 

00:29:44.700 --> 00:29:50.990 align:start position:0%
choose to implement that we will just
have<00:29:44.880><c> to</c><00:29:45.149><c> add</c><00:29:45.870><c> a</c><00:29:46.769><c> specific</c><00:29:47.250><c> small</c><00:29:49.610><c> file</c><00:29:50.610><c> in</c>

00:29:50.990 --> 00:29:51.000 align:start position:0%
have to add a specific small file in
 

00:29:51.000 --> 00:29:54.560 align:start position:0%
have to add a specific small file in
spring<00:29:51.779><c> in</c><00:29:52.500><c> spring</c><00:29:52.830><c> job</c><00:29:53.039><c> to</c><00:29:53.610><c> say</c><00:29:53.820><c> to</c><00:29:54.210><c> Cochin</c>

00:29:54.560 --> 00:29:54.570 align:start position:0%
spring in spring job to say to Cochin
 

00:29:54.570 --> 00:29:55.100 align:start position:0%
spring in spring job to say to Cochin
okay

00:29:55.100 --> 00:29:55.110 align:start position:0%
okay
 

00:29:55.110 --> 00:29:56.840 align:start position:0%
okay
everything<00:29:55.860><c> annotated</c><00:29:56.399><c> directly</c><00:29:56.760><c> or</c>

00:29:56.840 --> 00:29:56.850 align:start position:0%
everything annotated directly or
 

00:29:56.850 --> 00:29:58.789 align:start position:0%
everything annotated directly or
indirectly<00:29:57.000><c> by</c><00:29:57.299><c> add</c><00:29:57.630><c> components</c><00:29:58.139><c> should</c><00:29:58.620><c> be</c>

00:29:58.789 --> 00:29:58.799 align:start position:0%
indirectly by add components should be
 

00:29:58.799 --> 00:30:05.060 align:start position:0%
indirectly by add components should be
open<00:29:59.100><c> at</c><00:29:59.789><c> runtime</c><00:30:03.289><c> and</c><00:30:04.289><c> that</c><00:30:04.620><c> really</c><00:30:04.860><c> is</c><00:30:04.950><c> the</c>

00:30:05.060 --> 00:30:05.070 align:start position:0%
open at runtime and that really is the
 

00:30:05.070 --> 00:30:06.980 align:start position:0%
open at runtime and that really is the
main<00:30:05.250><c> friction</c><00:30:05.700><c> point</c><00:30:05.940><c> if</c><00:30:06.149><c> if</c><00:30:06.510><c> these</c><00:30:06.779><c> two</c>

00:30:06.980 --> 00:30:06.990 align:start position:0%
main friction point if if these two
 

00:30:06.990 --> 00:30:08.539 align:start position:0%
main friction point if if these two
friction<00:30:07.169><c> points</c><00:30:07.620><c> are</c><00:30:07.740><c> fixed</c><00:30:07.950><c> in</c><00:30:08.190><c> coaching</c>

00:30:08.539 --> 00:30:08.549 align:start position:0%
friction points are fixed in coaching
 

00:30:08.549 --> 00:30:12.080 align:start position:0%
friction points are fixed in coaching
1.1<00:30:09.059><c> I</c><00:30:09.240><c> mean</c><00:30:09.450><c> yeah</c><00:30:10.519><c> that</c><00:30:11.519><c> that</c><00:30:11.850><c> will</c><00:30:12.059><c> work</c>

00:30:12.080 --> 00:30:12.090 align:start position:0%
1.1 I mean yeah that that will work
 

00:30:12.090 --> 00:30:12.740 align:start position:0%
1.1 I mean yeah that that will work
pretty<00:30:12.450><c> well</c>

00:30:12.740 --> 00:30:12.750 align:start position:0%
pretty well
 

00:30:12.750 --> 00:30:14.600 align:start position:0%
pretty well
that's<00:30:13.110><c> already</c><00:30:13.679><c> what</c><00:30:13.980><c> pretty</c><00:30:14.250><c> well</c><00:30:14.399><c> but</c>

00:30:14.600 --> 00:30:14.610 align:start position:0%
that's already what pretty well but
 

00:30:14.610 --> 00:30:17.200 align:start position:0%
that's already what pretty well but
that's<00:30:15.480><c> really</c><00:30:15.690><c> my</c><00:30:15.929><c> my</c><00:30:16.169><c> two</c><00:30:16.230><c> main</c><00:30:16.500><c> concern</c><00:30:16.889><c> I</c>

00:30:17.200 --> 00:30:17.210 align:start position:0%
that's really my my two main concern I
 

00:30:17.210 --> 00:30:19.759 align:start position:0%
that's really my my two main concern I
have<00:30:18.210><c> created</c><00:30:18.389><c> a</c><00:30:18.659><c> spring</c><00:30:18.929><c> clean</c><00:30:19.320><c> project</c>

00:30:19.759 --> 00:30:19.769 align:start position:0%
have created a spring clean project
 

00:30:19.769 --> 00:30:24.710 align:start position:0%
have created a spring clean project
which<00:30:19.980><c> is</c><00:30:20.220><c> really</c><00:30:21.710><c> currently</c><00:30:22.710><c> mainly</c><00:30:23.100><c> faq</c><00:30:23.880><c> so</c>

00:30:24.710 --> 00:30:24.720 align:start position:0%
which is really currently mainly faq so
 

00:30:24.720 --> 00:30:27.740 align:start position:0%
which is really currently mainly faq so
I<00:30:25.159><c> have</c><00:30:26.159><c> tried</c><00:30:26.370><c> to</c><00:30:26.429><c> put</c><00:30:26.580><c> some</c><00:30:27.000><c> documentation</c>

00:30:27.740 --> 00:30:27.750 align:start position:0%
I have tried to put some documentation
 

00:30:27.750 --> 00:30:31.220 align:start position:0%
I have tried to put some documentation
about<00:30:27.899><c> this</c><00:30:28.860><c> kind</c><00:30:29.130><c> of</c><00:30:29.309><c> thing</c><00:30:30.120><c> friction</c><00:30:30.809><c> points</c>

00:30:31.220 --> 00:30:31.230 align:start position:0%
about this kind of thing friction points
 

00:30:31.230 --> 00:30:35.899 align:start position:0%
about this kind of thing friction points
or<00:30:31.409><c> some</c><00:30:32.130><c> advices</c><00:30:32.940><c> about</c><00:30:33.480><c> how</c><00:30:34.080><c> to</c><00:30:34.519><c> how</c><00:30:35.519><c> to</c><00:30:35.549><c> wait</c>

00:30:35.899 --> 00:30:35.909 align:start position:0%
or some advices about how to how to wait
 

00:30:35.909 --> 00:30:39.769 align:start position:0%
or some advices about how to how to wait
spring<00:30:36.600><c> and</c><00:30:36.840><c> curtain</c><00:30:37.289><c> application</c><00:30:38.480><c> so</c><00:30:39.480><c> if</c><00:30:39.539><c> you</c>

00:30:39.769 --> 00:30:39.779 align:start position:0%
spring and curtain application so if you
 

00:30:39.779 --> 00:30:41.450 align:start position:0%
spring and curtain application so if you
have<00:30:39.960><c> a</c><00:30:40.049><c> look</c><00:30:40.169><c> if</c><00:30:40.470><c> you</c><00:30:40.590><c> want</c><00:30:40.740><c> to</c><00:30:40.860><c> have</c><00:30:41.010><c> mod</c>

00:30:41.450 --> 00:30:41.460 align:start position:0%
have a look if you want to have mod
 

00:30:41.460 --> 00:30:48.610 align:start position:0%
have a look if you want to have mod
tears<00:30:41.789><c> about</c><00:30:42.120><c> this</c><00:30:42.919><c> this</c><00:30:44.840><c> these</c><00:30:45.840><c> behaviors</c><00:30:47.120><c> so</c>

00:30:48.610 --> 00:30:48.620 align:start position:0%
tears about this this these behaviors so
 

00:30:48.620 --> 00:30:51.830 align:start position:0%
tears about this this these behaviors so
let's<00:30:49.620><c> talk</c><00:30:49.799><c> about</c><00:30:50.149><c> Joe</c><00:30:51.149><c> special</c><00:30:51.539><c> messenger</c>

00:30:51.830 --> 00:30:51.840 align:start position:0%
let's talk about Joe special messenger
 

00:30:51.840 --> 00:30:57.889 align:start position:0%
let's talk about Joe special messenger
case<00:30:52.260><c> 2d</c><00:30:54.350><c> so</c><00:30:55.880><c> just</c><00:30:56.880><c> special</c><00:30:57.149><c> messenger</c><00:30:57.419><c> that's</c>

00:30:57.889 --> 00:30:57.899 align:start position:0%
case 2d so just special messenger that's
 

00:30:57.899 --> 00:30:59.869 align:start position:0%
case 2d so just special messenger that's
just<00:30:58.409><c> a</c><00:30:58.529><c> small</c><00:30:58.649><c> application</c>

00:30:59.869 --> 00:30:59.879 align:start position:0%
just a small application
 

00:30:59.879 --> 00:31:04.489 align:start position:0%
just a small application
a<00:30:59.969><c> small</c><00:31:00.539><c> toy</c><00:31:00.719><c> application</c><00:31:01.349><c> but</c><00:31:01.979><c> I</c><00:31:02.549><c> think</c><00:31:03.499><c> you</c>

00:31:04.489 --> 00:31:04.499 align:start position:0%
a small toy application but I think you
 

00:31:04.499 --> 00:31:06.499 align:start position:0%
a small toy application but I think you
will<00:31:04.679><c> see</c><00:31:04.709><c> the</c><00:31:05.159><c> source</c><00:31:05.579><c> code</c><00:31:05.669><c> that's</c><00:31:06.119><c> enough</c>

00:31:06.499 --> 00:31:06.509 align:start position:0%
will see the source code that's enough
 

00:31:06.509 --> 00:31:11.989 align:start position:0%
will see the source code that's enough
to<00:31:06.719><c> show</c><00:31:06.749><c> you</c><00:31:07.049><c> how</c><00:31:07.679><c> to</c><00:31:07.739><c> write</c><00:31:10.639><c> code</c><00:31:11.639><c> clean</c><00:31:11.849><c> and</c>

00:31:11.989 --> 00:31:11.999 align:start position:0%
to show you how to write code clean and
 

00:31:11.999 --> 00:31:14.509 align:start position:0%
to show you how to write code clean and
spring<00:31:12.209><c> boot</c><00:31:12.359><c> applications</c><00:31:12.899><c> so</c><00:31:13.339><c> how</c><00:31:14.339><c> is</c>

00:31:14.509 --> 00:31:14.519 align:start position:0%
spring boot applications so how is
 

00:31:14.519 --> 00:31:16.909 align:start position:0%
spring boot applications so how is
design<00:31:14.819><c> this</c><00:31:14.969><c> application</c><00:31:15.509><c> so</c><00:31:15.809><c> it's</c><00:31:16.619><c> using</c>

00:31:16.909 --> 00:31:16.919 align:start position:0%
design this application so it's using
 

00:31:16.919 --> 00:31:20.689 align:start position:0%
design this application so it's using
code<00:31:17.759><c> clean</c><00:31:17.969><c> as</c><00:31:18.149><c> a</c><00:31:18.659><c> as</c><00:31:19.319><c> a</c><00:31:19.379><c> language</c><00:31:19.699><c> spring</c>

00:31:20.689 --> 00:31:20.699 align:start position:0%
code clean as a as a language spring
 

00:31:20.699 --> 00:31:24.559 align:start position:0%
code clean as a as a language spring
boot<00:31:21.229><c> plus</c><00:31:22.229><c> t2</c><00:31:22.379><c> SQL</c><00:31:22.859><c> as</c><00:31:23.249><c> a</c><00:31:23.309><c> database</c><00:31:23.669><c> open</c>

00:31:24.559 --> 00:31:24.569 align:start position:0%
boot plus t2 SQL as a database open
 

00:31:24.569 --> 00:31:28.549 align:start position:0%
boot plus t2 SQL as a database open
layers<00:31:25.079><c> as</c><00:31:26.629><c> opening</c><00:31:27.629><c> years</c><00:31:27.809><c> is</c><00:31:28.019><c> a</c><00:31:28.079><c> kind</c><00:31:28.440><c> of</c>

00:31:28.549 --> 00:31:28.559 align:start position:0%
layers as opening years is a kind of
 

00:31:28.559 --> 00:31:31.189 align:start position:0%
layers as opening years is a kind of
Google<00:31:28.949><c> Maps</c><00:31:29.190><c> but</c><00:31:29.429><c> open</c><00:31:29.849><c> source</c><00:31:30.119><c> and</c><00:31:30.359><c> it</c>

00:31:31.189 --> 00:31:31.199 align:start position:0%
Google Maps but open source and it
 

00:31:31.199 --> 00:31:33.919 align:start position:0%
Google Maps but open source and it
allows<00:31:31.529><c> to</c><00:31:31.889><c> you</c><00:31:32.279><c> to</c><00:31:32.489><c> choose</c><00:31:32.759><c> values</c><00:31:33.029><c> sources</c>

00:31:33.919 --> 00:31:33.929 align:start position:0%
allows to you to choose values sources
 

00:31:33.929 --> 00:31:34.430 align:start position:0%
allows to you to choose values sources
of<00:31:34.079><c> data</c>

00:31:34.430 --> 00:31:34.440 align:start position:0%
of data
 

00:31:34.440 --> 00:31:37.759 align:start position:0%
of data
OpenStreetMap<00:31:35.190><c> Google</c><00:31:35.819><c> Maps</c><00:31:36.079><c> Bing</c><00:31:37.079><c> Maps</c><00:31:37.379><c> any</c>

00:31:37.759 --> 00:31:37.769 align:start position:0%
OpenStreetMap Google Maps Bing Maps any
 

00:31:37.769 --> 00:31:40.699 align:start position:0%
OpenStreetMap Google Maps Bing Maps any
kind<00:31:38.129><c> of</c><00:31:38.219><c> stuff</c><00:31:38.459><c> so</c><00:31:39.179><c> you</c><00:31:39.569><c> can</c><00:31:39.839><c> see</c><00:31:40.169><c> that</c><00:31:40.319><c> as</c><00:31:40.529><c> an</c>

00:31:40.699 --> 00:31:40.709 align:start position:0%
kind of stuff so you can see that as an
 

00:31:40.709 --> 00:31:44.409 align:start position:0%
kind of stuff so you can see that as an
goggle<00:31:41.190><c> maps</c><00:31:41.219><c> open</c><00:31:41.639><c> source</c><00:31:42.259><c> so</c><00:31:43.259><c> we</c><00:31:43.769><c> will</c><00:31:43.949><c> have</c>

00:31:44.409 --> 00:31:44.419 align:start position:0%
goggle maps open source so we will have
 

00:31:44.419 --> 00:31:46.759 align:start position:0%
goggle maps open source so we will have
so<00:31:45.419><c> we'll</c><00:31:45.659><c> have</c><00:31:45.749><c> this</c><00:31:46.019><c> JavaScript</c>

00:31:46.759 --> 00:31:46.769 align:start position:0%
so we'll have this JavaScript
 

00:31:46.769 --> 00:31:49.399 align:start position:0%
so we'll have this JavaScript
application<00:31:47.309><c> that</c><00:31:47.459><c> we</c><00:31:47.579><c> request</c><00:31:48.229><c> on</c><00:31:49.229><c> the</c>

00:31:49.399 --> 00:31:49.409 align:start position:0%
application that we request on the
 

00:31:49.409 --> 00:31:51.499 align:start position:0%
application that we request on the
server<00:31:49.619><c> side</c><00:31:49.919><c> our</c><00:31:50.179><c> convenience</c><00:31:51.179><c> reboot</c>

00:31:51.499 --> 00:31:51.509 align:start position:0%
server side our convenience reboot
 

00:31:51.509 --> 00:31:53.239 align:start position:0%
server side our convenience reboot
application<00:31:52.019><c> that</c><00:31:52.199><c> exposed</c><00:31:52.589><c> some</c><00:31:52.769><c> rest</c>

00:31:53.239 --> 00:31:53.249 align:start position:0%
application that exposed some rest
 

00:31:53.249 --> 00:31:56.749 align:start position:0%
application that exposed some rest
geez<00:31:53.940><c> on</c><00:31:54.059><c> API</c><00:31:54.409><c> that</c><00:31:55.409><c> allow</c><00:31:55.829><c> us</c><00:31:56.009><c> to</c><00:31:56.069><c> read</c><00:31:56.519><c> free</c>

00:31:56.749 --> 00:31:56.759 align:start position:0%
geez on API that allow us to read free
 

00:31:56.759 --> 00:32:02.089 align:start position:0%
geez on API that allow us to read free
for<00:31:57.119><c> example</c><00:31:57.599><c> the</c><00:31:57.839><c> messages</c><00:31:58.819><c> and</c><00:32:00.919><c> the</c><00:32:01.919><c> new</c>

00:32:02.089 --> 00:32:02.099 align:start position:0%
for example the messages and the new
 

00:32:02.099 --> 00:32:03.979 align:start position:0%
for example the messages and the new
messages<00:32:02.609><c> that</c><00:32:02.789><c> are</c><00:32:02.909><c> coming</c><00:32:02.940><c> are</c><00:32:03.359><c> pushed</c><00:32:03.659><c> with</c>

00:32:03.979 --> 00:32:03.989 align:start position:0%
messages that are coming are pushed with
 

00:32:03.989 --> 00:32:07.849 align:start position:0%
messages that are coming are pushed with
server<00:32:04.259><c> sent</c><00:32:04.529><c> events</c><00:32:06.019><c> the</c><00:32:07.019><c> user</c><00:32:07.199><c> location</c><00:32:07.440><c> is</c>

00:32:07.849 --> 00:32:07.859 align:start position:0%
server sent events the user location is
 

00:32:07.859 --> 00:32:11.359 align:start position:0%
server sent events the user location is
retrieved<00:32:08.309><c> with</c><00:32:08.519><c> html5</c><00:32:09.419><c> geolocation</c><00:32:09.599><c> API</c><00:32:10.369><c> we</c>

00:32:11.359 --> 00:32:11.369 align:start position:0%
retrieved with html5 geolocation API we
 

00:32:11.369 --> 00:32:14.359 align:start position:0%
retrieved with html5 geolocation API we
have<00:32:11.399><c> some</c><00:32:11.729><c> pop-ups</c><00:32:12.149><c> done</c><00:32:12.989><c> with</c><00:32:13.169><c> bootstrap</c><00:32:13.559><c> so</c>

00:32:14.359 --> 00:32:14.369 align:start position:0%
have some pop-ups done with bootstrap so
 

00:32:14.369 --> 00:32:17.629 align:start position:0%
have some pop-ups done with bootstrap so
that's<00:32:15.119><c> a</c><00:32:15.239><c> kind</c><00:32:15.389><c> of</c><00:32:15.599><c> rich</c><00:32:16.309><c> rich</c><00:32:17.309><c> Internet</c>

00:32:17.629 --> 00:32:17.639 align:start position:0%
that's a kind of rich rich Internet
 

00:32:17.639 --> 00:32:20.180 align:start position:0%
that's a kind of rich rich Internet
application<00:32:18.259><c> rich</c><00:32:19.259><c> interface</c><00:32:19.499><c> application</c>

00:32:20.180 --> 00:32:20.190 align:start position:0%
application rich interface application
 

00:32:20.190 --> 00:32:23.569 align:start position:0%
application rich interface application
with<00:32:20.729><c> with</c><00:32:21.629><c> a</c><00:32:21.659><c> regular</c><00:32:22.169><c> spring</c><00:32:22.799><c> boot</c><00:32:23.039><c> jeez</c><00:32:23.399><c> and</c>

00:32:23.569 --> 00:32:23.579 align:start position:0%
with with a regular spring boot jeez and
 

00:32:23.579 --> 00:32:30.939 align:start position:0%
with with a regular spring boot jeez and
again<00:32:27.019><c> the</c><00:32:28.019><c> code</c><00:32:28.379><c> is</c><00:32:28.499><c> available</c><00:32:28.619><c> on</c><00:32:28.979><c> github</c><00:32:29.159><c> so</c>

00:32:30.939 --> 00:32:30.949 align:start position:0%
again the code is available on github so
 

00:32:30.949 --> 00:32:34.459 align:start position:0%
again the code is available on github so
that<00:32:31.949><c> github.com</c><00:32:32.599><c> slashes</c><00:32:33.599><c> dollar</c><00:32:33.839><c> slashes</c>

00:32:34.459 --> 00:32:34.469 align:start position:0%
that github.com slashes dollar slashes
 

00:32:34.469 --> 00:32:38.419 align:start position:0%
that github.com slashes dollar slashes
real<00:32:34.829><c> special</c><00:32:35.339><c> -</c><00:32:35.779><c> messenger</c><00:32:36.779><c> so</c><00:32:37.709><c> you</c><00:32:37.769><c> will</c><00:32:38.309><c> be</c>

00:32:38.419 --> 00:32:38.429 align:start position:0%
real special - messenger so you will be
 

00:32:38.429 --> 00:32:40.789 align:start position:0%
real special - messenger so you will be
able<00:32:38.489><c> to</c><00:32:38.759><c> have</c><00:32:38.909><c> a</c><00:32:38.940><c> look</c><00:32:39.209><c> clone</c><00:32:40.019><c> it</c><00:32:40.199><c> run</c><00:32:40.529><c> it</c><00:32:40.649><c> on</c>

00:32:40.789 --> 00:32:40.799 align:start position:0%
able to have a look clone it run it on
 

00:32:40.799 --> 00:32:43.209 align:start position:0%
able to have a look clone it run it on
your<00:32:41.009><c> laptop</c><00:32:41.190><c> if</c><00:32:41.489><c> you</c><00:32:41.549><c> want</c><00:32:41.759><c> to</c><00:32:41.940><c> to</c><00:32:42.749><c> try</c><00:32:42.989><c> it</c>

00:32:43.209 --> 00:32:43.219 align:start position:0%
your laptop if you want to to try it
 

00:32:43.219 --> 00:32:46.189 align:start position:0%
your laptop if you want to to try it
everything<00:32:44.219><c> is</c><00:32:44.369><c> available</c><00:32:44.789><c> and</c><00:32:45.389><c> I</c><00:32:45.809><c> will</c><00:32:45.869><c> try</c>

00:32:46.189 --> 00:32:46.199 align:start position:0%
everything is available and I will try
 

00:32:46.199 --> 00:32:49.549 align:start position:0%
everything is available and I will try
to<00:32:46.399><c> keep</c><00:32:47.399><c> that</c><00:32:47.579><c> up</c><00:32:48.179><c> to</c><00:32:48.239><c> date</c><00:32:48.419><c> with</c><00:32:48.959><c> latest</c>

00:32:49.549 --> 00:32:49.559 align:start position:0%
to keep that up to date with latest
 

00:32:49.559 --> 00:32:52.519 align:start position:0%
to keep that up to date with latest
spring<00:32:49.859><c> and</c><00:32:50.069><c> continuation</c><00:32:50.519><c> and</c><00:32:51.139><c> for</c><00:32:52.139><c> example</c>

00:32:52.519 --> 00:32:52.529 align:start position:0%
spring and continuation and for example
 

00:32:52.529 --> 00:32:57.019 align:start position:0%
spring and continuation and for example
when<00:32:54.139><c> when</c><00:32:55.139><c> it</c><00:32:55.229><c> will</c><00:32:55.409><c> be</c><00:32:55.529><c> available</c><00:32:55.559><c> -</c><00:32:56.399><c> when</c><00:32:56.909><c> it</c>

00:32:57.019 --> 00:32:57.029 align:start position:0%
when when it will be available - when it
 

00:32:57.029 --> 00:32:58.879 align:start position:0%
when when it will be available - when it
will<00:32:57.179><c> be</c><00:32:57.299><c> possible</c><00:32:57.419><c> to</c><00:32:57.839><c> write</c><00:32:58.289><c> some</c><00:32:58.529><c> classes</c>

00:32:58.879 --> 00:32:58.889 align:start position:0%
will be possible to write some classes
 

00:32:58.889 --> 00:33:00.469 align:start position:0%
will be possible to write some classes
and<00:32:59.039><c> methods</c><00:32:59.159><c> without</c><00:32:59.729><c> using</c><00:33:00.089><c> the</c><00:33:00.209><c> open</c>

00:33:00.469 --> 00:33:00.479 align:start position:0%
and methods without using the open
 

00:33:00.479 --> 00:33:03.680 align:start position:0%
and methods without using the open
keyword<00:33:00.779><c> I</c><00:33:01.079><c> will</c><00:33:01.949><c> update</c><00:33:02.069><c> that</c><00:33:02.429><c> I</c><00:33:02.879><c> will</c><00:33:03.509><c> try</c><00:33:03.629><c> to</c>

00:33:03.680 --> 00:33:03.690 align:start position:0%
keyword I will update that I will try to
 

00:33:03.690 --> 00:33:07.999 align:start position:0%
keyword I will update that I will try to
follow<00:33:03.989><c> the</c><00:33:04.139><c> evolution</c><00:33:06.079><c> so</c><00:33:07.079><c> let's</c><00:33:07.829><c> have</c><00:33:07.919><c> a</c>

00:33:07.999 --> 00:33:08.009 align:start position:0%
follow the evolution so let's have a
 

00:33:08.009 --> 00:33:10.130 align:start position:0%
follow the evolution so let's have a
look<00:33:08.099><c> -</c><00:33:08.279><c> this</c><00:33:08.459><c> spring</c><00:33:08.849><c> MVC</c>

00:33:10.130 --> 00:33:10.140 align:start position:0%
look - this spring MVC
 

00:33:10.140 --> 00:33:13.850 align:start position:0%
look - this spring MVC
cocaine<00:33:10.860><c> controller</c><00:33:11.250><c> so</c><00:33:12.530><c> most</c><00:33:13.530><c> of</c><00:33:13.679><c> the</c><00:33:13.830><c> things</c>

00:33:13.850 --> 00:33:13.860 align:start position:0%
cocaine controller so most of the things
 

00:33:13.860 --> 00:33:17.690 align:start position:0%
cocaine controller so most of the things
are<00:33:14.309><c> very</c><00:33:14.340><c> closed</c><00:33:14.880><c> to</c><00:33:15.799><c> vehicular</c><00:33:16.799><c> spring</c>

00:33:17.690 --> 00:33:17.700 align:start position:0%
are very closed to vehicular spring
 

00:33:17.700 --> 00:33:20.150 align:start position:0%
are very closed to vehicular spring
emission<00:33:18.120><c> controls</c><00:33:18.540><c> I</c><00:33:18.920><c> have</c><00:33:19.920><c> tried</c><00:33:20.130><c> to</c>

00:33:20.150 --> 00:33:20.160 align:start position:0%
emission controls I have tried to
 

00:33:20.160 --> 00:33:22.370 align:start position:0%
emission controls I have tried to
highlight<00:33:20.610><c> the</c><00:33:20.970><c> main</c><00:33:21.179><c> differences</c><00:33:21.780><c> so</c><00:33:22.110><c> in</c>

00:33:22.370 --> 00:33:22.380 align:start position:0%
highlight the main differences so in
 

00:33:22.380 --> 00:33:24.650 align:start position:0%
highlight the main differences so in
Kirtland<00:33:22.830><c> classes</c><00:33:23.670><c> are</c><00:33:23.880><c> public</c><00:33:24.150><c> by</c><00:33:24.270><c> default</c>

00:33:24.650 --> 00:33:24.660 align:start position:0%
Kirtland classes are public by default
 

00:33:24.660 --> 00:33:26.870 align:start position:0%
Kirtland classes are public by default
so<00:33:24.900><c> you</c><00:33:24.960><c> don't</c><00:33:25.350><c> have</c><00:33:25.590><c> to</c><00:33:25.980><c> specify</c><00:33:26.190><c> the</c><00:33:26.490><c> public</c>

00:33:26.870 --> 00:33:26.880 align:start position:0%
so you don't have to specify the public
 

00:33:26.880 --> 00:33:29.720 align:start position:0%
so you don't have to specify the public
key<00:33:27.000><c> words</c><00:33:27.530><c> the</c><00:33:28.530><c> methods</c><00:33:28.860><c> are</c><00:33:29.070><c> also</c><00:33:29.250><c> public</c><00:33:29.640><c> by</c>

00:33:29.720 --> 00:33:29.730 align:start position:0%
key words the methods are also public by
 

00:33:29.730 --> 00:33:31.610 align:start position:0%
key words the methods are also public by
default<00:33:29.880><c> you</c><00:33:30.270><c> don't</c><00:33:30.690><c> have</c><00:33:30.870><c> to</c><00:33:31.049><c> specify</c><00:33:31.350><c> the</c>

00:33:31.610 --> 00:33:31.620 align:start position:0%
default you don't have to specify the
 

00:33:31.620 --> 00:33:35.810 align:start position:0%
default you don't have to specify the
public<00:33:32.010><c> key</c><00:33:32.220><c> word</c><00:33:32.370><c> -</c><00:33:33.170><c> as</c><00:33:34.170><c> of</c><00:33:35.160><c> spring</c><00:33:35.340><c> from</c><00:33:35.640><c> lock</c>

00:33:35.810 --> 00:33:35.820 align:start position:0%
public key word - as of spring from lock
 

00:33:35.820 --> 00:33:38.150 align:start position:0%
public key word - as of spring from lock
for<00:33:36.000><c> that</c><00:33:36.030><c> free</c><00:33:36.390><c> and</c><00:33:36.570><c> that's</c><00:33:37.500><c> not</c><00:33:37.710><c> specific</c><00:33:38.130><c> to</c>

00:33:38.150 --> 00:33:38.160 align:start position:0%
for that free and that's not specific to
 

00:33:38.160 --> 00:33:42.230 align:start position:0%
for that free and that's not specific to
Kathleen<00:33:38.640><c> but</c><00:33:38.820><c> I</c><00:33:39.410><c> would</c><00:33:40.410><c> like</c><00:33:40.530><c> to</c><00:33:40.970><c> to</c><00:33:41.970><c> talk</c>

00:33:42.230 --> 00:33:42.240 align:start position:0%
Kathleen but I would like to to talk
 

00:33:42.240 --> 00:33:43.760 align:start position:0%
Kathleen but I would like to to talk
about<00:33:42.390><c> that</c><00:33:42.720><c> the</c><00:33:43.140><c> constructor</c><00:33:43.590><c> injection</c>

00:33:43.760 --> 00:33:43.770 align:start position:0%
about that the constructor injection
 

00:33:43.770 --> 00:33:47.419 align:start position:0%
about that the constructor injection
without<00:33:44.429><c> at</c><00:33:45.330><c> Ottawa</c><00:33:45.630><c> Yard</c><00:33:45.960><c> is</c><00:33:46.530><c> possible</c><00:33:47.160><c> if</c><00:33:47.370><c> we</c>

00:33:47.419 --> 00:33:47.429 align:start position:0%
without at Ottawa Yard is possible if we
 

00:33:47.429 --> 00:33:49.310 align:start position:0%
without at Ottawa Yard is possible if we
have<00:33:47.820><c> a</c><00:33:47.850><c> single</c><00:33:48.120><c> constructor</c><00:33:48.660><c> so</c><00:33:48.900><c> that's</c><00:33:49.080><c> why</c>

00:33:49.310 --> 00:33:49.320 align:start position:0%
have a single constructor so that's why
 

00:33:49.320 --> 00:33:54.560 align:start position:0%
have a single constructor so that's why
there<00:33:49.620><c> is</c><00:33:49.650><c> not</c><00:33:50.010><c> a</c><00:33:50.220><c> total</c><00:33:50.640><c> wired</c><00:33:51.230><c> in</c><00:33:53.299><c> in</c><00:33:54.299><c> the</c>

00:33:54.560 --> 00:33:54.570 align:start position:0%
there is not a total wired in in the
 

00:33:54.570 --> 00:33:57.200 align:start position:0%
there is not a total wired in in the
controller<00:33:55.260><c> constructor</c><00:33:56.220><c> because</c><00:33:56.820><c> that's</c>

00:33:57.200 --> 00:33:57.210 align:start position:0%
controller constructor because that's
 

00:33:57.210 --> 00:33:59.289 align:start position:0%
controller constructor because that's
like<00:33:57.960><c> the</c><00:33:58.169><c> first</c><00:33:58.410><c> example</c><00:33:58.530><c> that</c><00:33:58.860><c> we</c><00:33:59.010><c> have</c><00:33:59.220><c> seen</c>

00:33:59.289 --> 00:33:59.299 align:start position:0%
like the first example that we have seen
 

00:33:59.299 --> 00:34:02.810 align:start position:0%
like the first example that we have seen
we<00:34:00.299><c> are</c><00:34:00.330><c> defining</c><00:34:01.290><c> at</c><00:34:01.530><c> the</c><00:34:01.650><c> same</c><00:34:01.860><c> time</c><00:34:02.190><c> the</c>

00:34:02.810 --> 00:34:02.820 align:start position:0%
we are defining at the same time the
 

00:34:02.820 --> 00:34:09.800 align:start position:0%
we are defining at the same time the
constructor<00:34:03.330><c> and</c><00:34:03.860><c> and</c><00:34:04.860><c> the</c><00:34:05.730><c> properties</c><00:34:08.810><c> we</c>

00:34:09.800 --> 00:34:09.810 align:start position:0%
constructor and and the properties we
 

00:34:09.810 --> 00:34:12.649 align:start position:0%
constructor and and the properties we
are<00:34:09.929><c> using</c><00:34:10.109><c> the</c><00:34:10.590><c> method</c><00:34:11.040><c> that</c><00:34:11.490><c> uses</c><00:34:11.669><c> for</c>

00:34:12.649 --> 00:34:12.659 align:start position:0%
are using the method that uses for
 

00:34:12.659 --> 00:34:13.849 align:start position:0%
are using the method that uses for
request<00:34:12.990><c> mapping</c><00:34:13.290><c> that</c><00:34:13.409><c> we</c><00:34:13.560><c> have</c><00:34:13.649><c> seen</c><00:34:13.830><c> before</c>

00:34:13.849 --> 00:34:13.859 align:start position:0%
request mapping that we have seen before
 

00:34:13.859 --> 00:34:16.639 align:start position:0%
request mapping that we have seen before
to<00:34:14.550><c> avoid</c><00:34:15.000><c> to</c><00:34:15.210><c> write</c><00:34:15.419><c> array</c><00:34:15.810><c> off</c><00:34:16.020><c> so</c><00:34:16.379><c> we</c><00:34:16.619><c> are</c>

00:34:16.639 --> 00:34:16.649 align:start position:0%
to avoid to write array off so we are
 

00:34:16.649 --> 00:34:19.300 align:start position:0%
to avoid to write array off so we are
using<00:34:16.919><c> add</c><00:34:17.369><c> pass</c><00:34:17.669><c> mapping</c><00:34:18.060><c> and</c><00:34:18.450><c> get</c><00:34:18.899><c> mapping</c>

00:34:19.300 --> 00:34:19.310 align:start position:0%
using add pass mapping and get mapping
 

00:34:19.310 --> 00:34:21.500 align:start position:0%
using add pass mapping and get mapping
advert<00:34:20.310><c> mapping</c><00:34:20.639><c> and</c><00:34:20.820><c> that</c><00:34:21.119><c> would</c><00:34:21.300><c> be</c><00:34:21.389><c> the</c>

00:34:21.500 --> 00:34:21.510 align:start position:0%
advert mapping and that would be the
 

00:34:21.510 --> 00:34:23.540 align:start position:0%
advert mapping and that would be the
same<00:34:21.720><c> in</c><00:34:21.869><c> Java</c><00:34:22.109><c> again</c><00:34:22.590><c> that's</c><00:34:22.859><c> not</c><00:34:23.040><c> specific</c>

00:34:23.540 --> 00:34:23.550 align:start position:0%
same in Java again that's not specific
 

00:34:23.550 --> 00:34:25.760 align:start position:0%
same in Java again that's not specific
to<00:34:23.580><c> to</c><00:34:24.450><c> Kathleen</c><00:34:24.840><c> that</c><00:34:25.050><c> just</c><00:34:25.290><c> allows</c><00:34:25.500><c> you</c><00:34:25.619><c> to</c>

00:34:25.760 --> 00:34:25.770 align:start position:0%
to to Kathleen that just allows you to
 

00:34:25.770 --> 00:34:28.159 align:start position:0%
to to Kathleen that just allows you to
write<00:34:25.950><c> shorter</c><00:34:26.369><c> code</c><00:34:26.570><c> and</c><00:34:27.570><c> if</c><00:34:27.960><c> you</c><00:34:28.050><c> have</c><00:34:28.139><c> a</c>

00:34:28.159 --> 00:34:28.169 align:start position:0%
write shorter code and if you have a
 

00:34:28.169 --> 00:34:30.770 align:start position:0%
write shorter code and if you have a
look<00:34:28.290><c> to</c><00:34:28.470><c> the</c><00:34:28.500><c> lists</c><00:34:29.270><c> function</c><00:34:30.270><c> you</c><00:34:30.419><c> will</c><00:34:30.510><c> see</c>

00:34:30.770 --> 00:34:30.780 align:start position:0%
look to the lists function you will see
 

00:34:30.780 --> 00:34:34.399 align:start position:0%
look to the lists function you will see
that<00:34:30.929><c> thanks</c><00:34:31.470><c> to</c><00:34:31.560><c> the</c><00:34:31.710><c> type</c><00:34:31.889><c> in</c><00:34:32.040><c> France</c><00:34:33.230><c> we</c><00:34:34.230><c> are</c>

00:34:34.399 --> 00:34:34.409 align:start position:0%
that thanks to the type in France we are
 

00:34:34.409 --> 00:34:37.220 align:start position:0%
that thanks to the type in France we are
usually<00:34:34.740><c> able</c><00:34:35.190><c> to</c><00:34:35.550><c> write</c><00:34:35.760><c> a</c><00:34:35.790><c> single</c><00:34:36.230><c> meters</c>

00:34:37.220 --> 00:34:37.230 align:start position:0%
usually able to write a single meters
 

00:34:37.230 --> 00:34:39.500 align:start position:0%
usually able to write a single meters
with<00:34:37.440><c> a</c><00:34:37.470><c> single</c><00:34:37.830><c> line</c><00:34:38.010><c> like</c><00:34:38.310><c> that</c><00:34:38.340><c> and</c><00:34:38.760><c> we</c>

00:34:39.500 --> 00:34:39.510 align:start position:0%
with a single line like that and we
 

00:34:39.510 --> 00:34:41.149 align:start position:0%
with a single line like that and we
don't<00:34:39.629><c> have</c><00:34:39.810><c> to</c><00:34:39.929><c> specify</c><00:34:40.109><c> the</c><00:34:40.409><c> type</c><00:34:40.800><c> of</c><00:34:40.830><c> the</c>

00:34:41.149 --> 00:34:41.159 align:start position:0%
don't have to specify the type of the
 

00:34:41.159 --> 00:34:45.260 align:start position:0%
don't have to specify the type of the
rate<00:34:41.760><c> of</c><00:34:41.790><c> the</c><00:34:41.970><c> list</c><00:34:42.690><c> return</c><00:34:43.109><c> value</c><00:34:44.060><c> that</c><00:34:45.060><c> will</c>

00:34:45.260 --> 00:34:45.270 align:start position:0%
rate of the list return value that will
 

00:34:45.270 --> 00:34:48.200 align:start position:0%
rate of the list return value that will
be<00:34:45.419><c> automatically</c><00:34:46.020><c> guests</c><00:34:46.470><c> and</c><00:34:46.850><c> that</c><00:34:47.850><c> will</c><00:34:48.060><c> be</c>

00:34:48.200 --> 00:34:48.210 align:start position:0%
be automatically guests and that will be
 

00:34:48.210 --> 00:34:52.720 align:start position:0%
be automatically guests and that will be
used<00:34:48.450><c> that</c><00:34:49.200><c> will</c><00:34:49.379><c> use</c><00:34:49.560><c> the</c><00:34:49.740><c> same</c><00:34:50.119><c> type</c><00:34:51.440><c> than</c>

00:34:52.720 --> 00:34:52.730 align:start position:0%
used that will use the same type than
 

00:34:52.730 --> 00:34:56.119 align:start position:0%
used that will use the same type than
repository<00:34:53.730><c> that</c><00:34:53.760><c> find</c><00:34:54.240><c> all</c><00:34:54.480><c> return</c><00:34:54.960><c> value</c><00:34:55.200><c> so</c>

00:34:56.119 --> 00:34:56.129 align:start position:0%
repository that find all return value so
 

00:34:56.129 --> 00:34:58.160 align:start position:0%
repository that find all return value so
really<00:34:56.429><c> again</c><00:34:56.850><c> everything</c><00:34:57.750><c> is</c><00:34:57.780><c> statically</c>

00:34:58.160 --> 00:34:58.170 align:start position:0%
really again everything is statically
 

00:34:58.170 --> 00:35:00.859 align:start position:0%
really again everything is statically
typed<00:34:58.500><c> exactly</c><00:34:59.280><c> like</c><00:34:59.460><c> in</c><00:34:59.640><c> Java</c><00:34:59.940><c> when</c><00:35:00.630><c> you</c><00:35:00.750><c> are</c>

00:35:00.859 --> 00:35:00.869 align:start position:0%
typed exactly like in Java when you are
 

00:35:00.869 --> 00:35:02.510 align:start position:0%
typed exactly like in Java when you are
using<00:35:01.050><c> a</c><00:35:01.320><c> class</c><00:35:01.530><c> that</c><00:35:01.710><c> you</c><00:35:01.800><c> create</c><00:35:02.070><c> in</c><00:35:02.190><c> Cochin</c>

00:35:02.510 --> 00:35:02.520 align:start position:0%
using a class that you create in Cochin
 

00:35:02.520 --> 00:35:03.710 align:start position:0%
using a class that you create in Cochin
you<00:35:02.640><c> have</c><00:35:02.760><c> the</c><00:35:02.880><c> same</c><00:35:03.119><c> novella</c><00:35:03.450><c> photo</c>

00:35:03.710 --> 00:35:03.720 align:start position:0%
you have the same novella photo
 

00:35:03.720 --> 00:35:04.280 align:start position:0%
you have the same novella photo
completes

00:35:04.280 --> 00:35:04.290 align:start position:0%
completes
 

00:35:04.290 --> 00:35:07.070 align:start position:0%
completes
but<00:35:04.770><c> the</c><00:35:04.950><c> type</c><00:35:05.160><c> in</c><00:35:05.340><c> France</c><00:35:05.609><c> allow</c><00:35:05.910><c> you</c><00:35:06.119><c> to</c><00:35:06.390><c> just</c>

00:35:07.070 --> 00:35:07.080 align:start position:0%
but the type in France allow you to just
 

00:35:07.080 --> 00:35:09.560 align:start position:0%
but the type in France allow you to just
not<00:35:07.320><c> specify</c><00:35:07.859><c> the</c><00:35:07.920><c> type</c><00:35:08.430><c> of</c><00:35:08.460><c> the</c><00:35:09.000><c> return</c><00:35:09.150><c> value</c>

00:35:09.560 --> 00:35:09.570 align:start position:0%
not specify the type of the return value
 

00:35:09.570 --> 00:35:12.830 align:start position:0%
not specify the type of the return value
of<00:35:09.840><c> the</c><00:35:10.050><c> parameters</c><00:35:10.590><c> of</c><00:35:10.830><c> a</c><00:35:11.160><c> variable</c><00:35:11.609><c> if</c><00:35:11.940><c> if</c>

00:35:12.830 --> 00:35:12.840 align:start position:0%
of the parameters of a variable if if
 

00:35:12.840 --> 00:35:18.120 align:start position:0%
of the parameters of a variable if if
the<00:35:13.140><c> compiler</c><00:35:13.440><c> is</c><00:35:13.830><c> able</c><00:35:14.550><c> to</c><00:35:14.790><c> guess</c><00:35:15.300><c> it</c>

00:35:18.120 --> 00:35:18.130 align:start position:0%
 
 

00:35:18.130 --> 00:35:21.630 align:start position:0%
 
so<00:35:18.910><c> let's</c><00:35:19.119><c> talk</c><00:35:19.269><c> about</c><00:35:19.329><c> how</c><00:35:20.079><c> to</c><00:35:20.489><c> persist</c><00:35:21.489><c> the</c>

00:35:21.630 --> 00:35:21.640 align:start position:0%
so let's talk about how to persist the
 

00:35:21.640 --> 00:35:25.920 align:start position:0%
so let's talk about how to persist the
data<00:35:22.140><c> so</c><00:35:23.309><c> choosing</c><00:35:24.309><c> spring</c><00:35:24.640><c> data</c><00:35:24.789><c> GPA</c><00:35:25.210><c> is</c>

00:35:25.920 --> 00:35:25.930 align:start position:0%
data so choosing spring data GPA is
 

00:35:25.930 --> 00:35:27.420 align:start position:0%
data so choosing spring data GPA is
perfectly<00:35:26.380><c> fine</c><00:35:26.619><c> with</c><00:35:26.829><c> code</c><00:35:27.009><c> clean</c><00:35:27.190><c> that</c>

00:35:27.420 --> 00:35:27.430 align:start position:0%
perfectly fine with code clean that
 

00:35:27.430 --> 00:35:30.660 align:start position:0%
perfectly fine with code clean that
works<00:35:27.789><c> I</c><00:35:28.029><c> have</c><00:35:28.569><c> created</c><00:35:28.809><c> a</c><00:35:29.190><c> sample</c><00:35:30.190><c> that</c><00:35:30.549><c> you</c>

00:35:30.660 --> 00:35:30.670 align:start position:0%
works I have created a sample that you
 

00:35:30.670 --> 00:35:33.150 align:start position:0%
works I have created a sample that you
can<00:35:30.849><c> see</c><00:35:31.029><c> in</c><00:35:31.239><c> github.com</c><00:35:31.690><c> slashes</c><00:35:32.619><c> the</c><00:35:32.650><c> slash</c>

00:35:33.150 --> 00:35:33.160 align:start position:0%
can see in github.com slashes the slash
 

00:35:33.160 --> 00:35:35.880 align:start position:0%
can see in github.com slashes the slash
spring<00:35:33.460><c> would</c><00:35:33.880><c> cut</c><00:35:34.269><c> in</c><00:35:34.450><c> the</c><00:35:34.539><c> demo</c><00:35:34.809><c> and</c><00:35:34.989><c> that</c>

00:35:35.880 --> 00:35:35.890 align:start position:0%
spring would cut in the demo and that
 

00:35:35.890 --> 00:35:37.859 align:start position:0%
spring would cut in the demo and that
works<00:35:36.130><c> perfectly</c><00:35:36.549><c> well</c><00:35:36.789><c> so</c><00:35:37.059><c> nothing</c><00:35:37.390><c> wrong</c>

00:35:37.859 --> 00:35:37.869 align:start position:0%
works perfectly well so nothing wrong
 

00:35:37.869 --> 00:35:40.319 align:start position:0%
works perfectly well so nothing wrong
using<00:35:38.349><c> GPA</c><00:35:38.710><c> and</c><00:35:39.039><c> cut</c><00:35:39.190><c> clean</c><00:35:39.369><c> together</c><00:35:39.579><c> I</c><00:35:40.029><c> want</c>

00:35:40.319 --> 00:35:40.329 align:start position:0%
using GPA and cut clean together I want
 

00:35:40.329 --> 00:35:44.700 align:start position:0%
using GPA and cut clean together I want
to<00:35:40.359><c> be</c><00:35:40.509><c> clear</c><00:35:40.749><c> about</c><00:35:40.839><c> that</c><00:35:40.989><c> but</c><00:35:42.930><c> I</c><00:35:43.930><c> would</c><00:35:44.680><c> like</c>

00:35:44.700 --> 00:35:44.710 align:start position:0%
to be clear about that but I would like
 

00:35:44.710 --> 00:35:48.469 align:start position:0%
to be clear about that but I would like
to<00:35:44.920><c> show</c><00:35:45.819><c> you</c><00:35:45.989><c> another</c><00:35:46.989><c> way</c><00:35:47.380><c> to</c><00:35:47.650><c> write</c>

00:35:48.469 --> 00:35:48.479 align:start position:0%
to show you another way to write
 

00:35:48.479 --> 00:35:51.900 align:start position:0%
to show you another way to write
you-you-you<00:35:49.479><c> persistence</c><00:35:50.049><c> they</c><00:35:50.170><c> are</c><00:35:50.910><c> more</c>

00:35:51.900 --> 00:35:51.910 align:start position:0%
you-you-you persistence they are more
 

00:35:51.910 --> 00:35:54.329 align:start position:0%
you-you-you persistence they are more
lightweight<00:35:52.289><c> way</c><00:35:53.289><c> to</c><00:35:53.349><c> do</c><00:35:53.619><c> that</c><00:35:53.799><c> more</c>

00:35:54.329 --> 00:35:54.339 align:start position:0%
lightweight way to do that more
 

00:35:54.339 --> 00:35:58.440 align:start position:0%
lightweight way to do that more
idiomatic<00:35:54.700><c> clean</c><00:35:55.450><c> way</c><00:35:55.690><c> to</c><00:35:55.720><c> write</c><00:35:56.319><c> that</c><00:35:56.529><c> and</c><00:35:57.450><c> in</c>

00:35:58.440 --> 00:35:58.450 align:start position:0%
idiomatic clean way to write that and in
 

00:35:58.450 --> 00:36:00.120 align:start position:0%
idiomatic clean way to write that and in
order<00:35:58.690><c> to</c><00:35:58.839><c> achieve</c><00:35:58.960><c> that</c><00:35:59.170><c> we</c><00:35:59.380><c> are</c><00:35:59.769><c> going</c><00:35:59.950><c> to</c>

00:36:00.120 --> 00:36:00.130 align:start position:0%
order to achieve that we are going to
 

00:36:00.130 --> 00:36:03.960 align:start position:0%
order to achieve that we are going to
use<00:36:00.309><c> exposed</c><00:36:00.910><c> which</c><00:36:01.690><c> is</c><00:36:01.960><c> a</c><00:36:01.989><c> type</c><00:36:02.289><c> safe</c><00:36:02.700><c> cut</c><00:36:03.700><c> in</c>

00:36:03.960 --> 00:36:03.970 align:start position:0%
use exposed which is a type safe cut in
 

00:36:03.970 --> 00:36:09.539 align:start position:0%
use exposed which is a type safe cut in
SQL<00:36:04.779><c> DSL</c><00:36:05.970><c> that</c><00:36:06.970><c> will</c><00:36:07.210><c> allow</c><00:36:07.900><c> us</c><00:36:08.200><c> to</c><00:36:08.229><c> write</c><00:36:08.650><c> SQL</c>

00:36:09.539 --> 00:36:09.549 align:start position:0%
SQL DSL that will allow us to write SQL
 

00:36:09.549 --> 00:36:14.789 align:start position:0%
SQL DSL that will allow us to write SQL
queries<00:36:10.239><c> in</c><00:36:11.170><c> coding</c><00:36:11.559><c> and</c><00:36:13.349><c> I</c><00:36:14.349><c> think</c><00:36:14.619><c> that</c>

00:36:14.789 --> 00:36:14.799 align:start position:0%
queries in coding and I think that
 

00:36:14.799 --> 00:36:17.729 align:start position:0%
queries in coding and I think that
generally<00:36:15.279><c> a</c><00:36:15.309><c> good</c><00:36:15.609><c> example</c><00:36:15.940><c> of</c><00:36:16.380><c> DSL</c><00:36:17.380><c> that</c><00:36:17.589><c> we</c>

00:36:17.729 --> 00:36:17.739 align:start position:0%
generally a good example of DSL that we
 

00:36:17.739 --> 00:36:19.769 align:start position:0%
generally a good example of DSL that we
can<00:36:17.920><c> write</c><00:36:18.160><c> with</c><00:36:18.460><c> Kotlin</c><00:36:18.849><c> that's</c><00:36:19.450><c> less</c>

00:36:19.769 --> 00:36:19.779 align:start position:0%
can write with Kotlin that's less
 

00:36:19.779 --> 00:36:21.900 align:start position:0%
can write with Kotlin that's less
powerful<00:36:20.410><c> than</c><00:36:20.440><c> in</c><00:36:20.680><c> scala</c><00:36:20.950><c> in</c><00:36:21.190><c> scale</c><00:36:21.489><c> you</c><00:36:21.729><c> can</c>

00:36:21.900 --> 00:36:21.910 align:start position:0%
powerful than in scala in scale you can
 

00:36:21.910 --> 00:36:25.559 align:start position:0%
powerful than in scala in scale you can
write<00:36:23.339><c> GSL</c><00:36:24.339><c> that</c><00:36:24.549><c> you</c><00:36:24.789><c> don't</c><00:36:25.119><c> understand</c>

00:36:25.559 --> 00:36:25.569 align:start position:0%
write GSL that you don't understand
 

00:36:25.569 --> 00:36:27.329 align:start position:0%
write GSL that you don't understand
yourself<00:36:25.930><c> even</c><00:36:26.170><c> if</c><00:36:26.499><c> you</c><00:36:26.619><c> are</c><00:36:26.769><c> writing</c><00:36:27.009><c> it's</c>

00:36:27.329 --> 00:36:27.339 align:start position:0%
yourself even if you are writing it's
 

00:36:27.339 --> 00:36:31.140 align:start position:0%
yourself even if you are writing it's
better<00:36:28.829><c> even</c><00:36:29.829><c> with</c><00:36:30.130><c> the</c><00:36:30.309><c> limitation</c><00:36:30.819><c> of</c><00:36:30.910><c> code</c>

00:36:31.140 --> 00:36:31.150 align:start position:0%
better even with the limitation of code
 

00:36:31.150 --> 00:36:33.599 align:start position:0%
better even with the limitation of code
clean<00:36:31.380><c> you</c><00:36:32.380><c> can</c><00:36:32.799><c> really</c><00:36:33.099><c> write</c><00:36:33.279><c> some</c><00:36:33.579><c> very</c>

00:36:33.599 --> 00:36:33.609 align:start position:0%
clean you can really write some very
 

00:36:33.609 --> 00:36:36.870 align:start position:0%
clean you can really write some very
poor<00:36:34.029><c> fool</c><00:36:34.329><c> DSL</c><00:36:34.749><c> and</c><00:36:34.869><c> I</c><00:36:35.559><c> think</c><00:36:36.160><c> the</c><00:36:36.279><c> finder</c>

00:36:36.870 --> 00:36:36.880 align:start position:0%
poor fool DSL and I think the finder
 

00:36:36.880 --> 00:36:40.319 align:start position:0%
poor fool DSL and I think the finder
writes<00:36:37.119><c> the</c><00:36:37.630><c> right</c><00:36:37.809><c> balance</c><00:36:37.989><c> about</c><00:36:38.710><c> that</c><00:36:39.329><c> so</c>

00:36:40.319 --> 00:36:40.329 align:start position:0%
writes the right balance about that so
 

00:36:40.329 --> 00:36:43.499 align:start position:0%
writes the right balance about that so
why<00:36:40.869><c> using</c><00:36:41.229><c> a</c><00:36:41.319><c> square</c><00:36:41.559><c> without</c><00:36:41.829><c> GPA</c>

00:36:43.499 --> 00:36:43.509 align:start position:0%
why using a square without GPA
 

00:36:43.509 --> 00:36:46.229 align:start position:0%
why using a square without GPA
I<00:36:44.069><c> think</c><00:36:45.069><c> that's</c><00:36:45.309><c> allow</c><00:36:45.460><c> you</c><00:36:45.640><c> to</c><00:36:45.789><c> get</c><00:36:45.969><c> more</c>

00:36:46.229 --> 00:36:46.239 align:start position:0%
I think that's allow you to get more
 

00:36:46.239 --> 00:36:49.410 align:start position:0%
I think that's allow you to get more
control<00:36:46.539><c> on</c><00:36:46.749><c> the</c><00:36:46.869><c> SQL</c><00:36:47.229><c> queries</c><00:36:47.559><c> and</c><00:36:48.210><c> about</c><00:36:49.210><c> the</c>

00:36:49.410 --> 00:36:49.420 align:start position:0%
control on the SQL queries and about the
 

00:36:49.420 --> 00:36:51.959 align:start position:0%
control on the SQL queries and about the
joints<00:36:49.809><c> that</c><00:36:50.039><c> allow</c><00:36:51.039><c> you</c><00:36:51.249><c> to</c><00:36:51.430><c> have</c><00:36:51.579><c> a</c><00:36:51.609><c> lighter</c>

00:36:51.959 --> 00:36:51.969 align:start position:0%
joints that allow you to have a lighter
 

00:36:51.969 --> 00:36:54.690 align:start position:0%
joints that allow you to have a lighter
technology<00:36:52.690><c> stack</c><00:36:52.930><c> to</c><00:36:53.799><c> take</c><00:36:54.009><c> advantage</c><00:36:54.460><c> of</c>

00:36:54.690 --> 00:36:54.700 align:start position:0%
technology stack to take advantage of
 

00:36:54.700 --> 00:36:57.180 align:start position:0%
technology stack to take advantage of
the<00:36:54.969><c> native</c><00:36:55.630><c> database</c><00:36:56.229><c> functionalities</c><00:36:56.920><c> and</c>

00:36:57.180 --> 00:36:57.190 align:start position:0%
the native database functionalities and
 

00:36:57.190 --> 00:37:00.120 align:start position:0%
the native database functionalities and
also<00:36:58.150><c> we</c><00:36:58.359><c> we</c><00:36:58.660><c> rarely</c><00:36:58.930><c> need</c><00:36:59.619><c> to</c><00:36:59.650><c> change</c><00:36:59.979><c> the</c>

00:37:00.120 --> 00:37:00.130 align:start position:0%
also we we rarely need to change the
 

00:37:00.130 --> 00:37:02.789 align:start position:0%
also we we rarely need to change the
basis<00:37:00.519><c> so</c><00:37:00.849><c> why</c><00:37:01.599><c> not</c><00:37:01.779><c> just</c><00:37:02.079><c> taking</c><00:37:02.680><c> advantage</c>

00:37:02.789 --> 00:37:02.799 align:start position:0%
basis so why not just taking advantage
 

00:37:02.799 --> 00:37:06.569 align:start position:0%
basis so why not just taking advantage
about<00:37:03.339><c> the</c><00:37:03.549><c> one</c><00:37:03.700><c> that</c><00:37:03.880><c> you</c><00:37:04.029><c> are</c><00:37:04.119><c> using</c><00:37:05.579><c> an</c>

00:37:06.569 --> 00:37:06.579 align:start position:0%
about the one that you are using an
 

00:37:06.579 --> 00:37:08.130 align:start position:0%
about the one that you are using an
example<00:37:07.089><c> of</c><00:37:07.210><c> interesting</c><00:37:07.779><c> native</c>

00:37:08.130 --> 00:37:08.140 align:start position:0%
example of interesting native
 

00:37:08.140 --> 00:37:10.229 align:start position:0%
example of interesting native
functionalities<00:37:08.739><c> for</c><00:37:08.769><c> example</c><00:37:09.339><c> PostgreSQL</c>

00:37:10.229 --> 00:37:10.239 align:start position:0%
functionalities for example PostgreSQL
 

00:37:10.239 --> 00:37:13.289 align:start position:0%
functionalities for example PostgreSQL
native<00:37:10.599><c> JSON</c><00:37:10.869><c> support</c><00:37:11.309><c> in</c><00:37:12.309><c> this</c><00:37:12.549><c> example</c><00:37:12.940><c> we</c>

00:37:13.289 --> 00:37:13.299 align:start position:0%
native JSON support in this example we
 

00:37:13.299 --> 00:37:16.799 align:start position:0%
native JSON support in this example we
are<00:37:13.329><c> creating</c><00:37:13.630><c> a</c><00:37:14.019><c> user's</c><00:37:14.859><c> table</c><00:37:15.819><c> that</c>

00:37:16.799 --> 00:37:16.809 align:start position:0%
are creating a user's table that
 

00:37:16.809 --> 00:37:19.620 align:start position:0%
are creating a user's table that
contains<00:37:16.989><c> values</c><00:37:17.759><c> columns</c><00:37:18.759><c> and</c><00:37:19.089><c> one</c><00:37:19.390><c> of</c><00:37:19.509><c> the</c>

00:37:19.620 --> 00:37:19.630 align:start position:0%
contains values columns and one of the
 

00:37:19.630 --> 00:37:22.940 align:start position:0%
contains values columns and one of the
columns<00:37:20.009><c> metadata</c><00:37:21.009><c> as</c><00:37:21.489><c> a</c><00:37:21.549><c> JSON</c><00:37:21.940><c> the</c><00:37:22.239><c> type</c>

00:37:22.940 --> 00:37:22.950 align:start position:0%
columns metadata as a JSON the type
 

00:37:22.950 --> 00:37:25.890 align:start position:0%
columns metadata as a JSON the type
that'll<00:37:23.950><c> you</c><00:37:24.339><c> to</c><00:37:24.519><c> insert</c><00:37:24.880><c> some</c><00:37:25.269><c> G's</c><00:37:25.569><c> endure</c>

00:37:25.890 --> 00:37:25.900 align:start position:0%
that'll you to insert some G's endure
 

00:37:25.900 --> 00:37:28.620 align:start position:0%
that'll you to insert some G's endure
units<00:37:26.380><c> so</c><00:37:26.680><c> you</c><00:37:27.460><c> see</c><00:37:27.700><c> that</c><00:37:27.849><c> we</c><00:37:28.150><c> are</c><00:37:28.329><c> inserting</c>

00:37:28.620 --> 00:37:28.630 align:start position:0%
units so you see that we are inserting
 

00:37:28.630 --> 00:37:31.740 align:start position:0%
units so you see that we are inserting
address<00:37:29.380><c> with</c><00:37:30.369><c> line</c><00:37:30.609><c> 1</c><00:37:30.849><c> postcodes</c>

00:37:31.740 --> 00:37:31.750 align:start position:0%
address with line 1 postcodes
 

00:37:31.750 --> 00:37:37.860 align:start position:0%
address with line 1 postcodes
two<00:37:31.900><c> states</c><00:37:32.320><c> fubar</c><00:37:33.690><c> and</c><00:37:36.660><c> the</c><00:37:37.660><c> nice</c><00:37:37.840><c> thing</c>

00:37:37.860 --> 00:37:37.870 align:start position:0%
two states fubar and the nice thing
 

00:37:37.870 --> 00:37:40.860 align:start position:0%
two states fubar and the nice thing
about<00:37:38.250><c> the</c><00:37:39.250><c> Jesus</c><00:37:39.430><c> invited</c><00:37:39.700><c> because</c><00:37:39.970><c> that</c><00:37:40.690><c> we</c>

00:37:40.860 --> 00:37:40.870 align:start position:0%
about the Jesus invited because that we
 

00:37:40.870 --> 00:37:43.670 align:start position:0%
about the Jesus invited because that we
could<00:37:41.200><c> do</c><00:37:41.320><c> that</c><00:37:41.500><c> with</c><00:37:41.680><c> a</c><00:37:41.710><c> regular</c><00:37:42.010><c> texts</c><00:37:42.880><c> Quran</c>

00:37:43.670 --> 00:37:43.680 align:start position:0%
could do that with a regular texts Quran
 

00:37:43.680 --> 00:37:47.520 align:start position:0%
could do that with a regular texts Quran
so<00:37:44.680><c> Jesus</c><00:37:44.920><c> and</c><00:37:45.010><c> B</c><00:37:45.100><c> type</c><00:37:45.370><c> allow</c><00:37:45.820><c> us</c><00:37:46.090><c> to</c><00:37:46.420><c> index</c><00:37:46.990><c> to</c>

00:37:47.520 --> 00:37:47.530 align:start position:0%
so Jesus and B type allow us to index to
 

00:37:47.530 --> 00:37:53.670 align:start position:0%
so Jesus and B type allow us to index to
have<00:37:47.650><c> an</c><00:37:47.770><c> index</c><00:37:48.100><c> on</c><00:37:49.470><c> on</c><00:37:51.720><c> on</c><00:37:52.720><c> the</c><00:37:52.960><c> G</c><00:37:53.620><c> zone</c>

00:37:53.670 --> 00:37:53.680 align:start position:0%
have an index on on on the G zone
 

00:37:53.680 --> 00:37:57.270 align:start position:0%
have an index on on on the G zone
provided<00:37:54.570><c> directly</c><00:37:55.570><c> in</c><00:37:55.690><c> this</c><00:37:55.810><c> column</c><00:37:56.140><c> so</c><00:37:56.410><c> what</c>

00:37:57.270 --> 00:37:57.280 align:start position:0%
provided directly in this column so what
 

00:37:57.280 --> 00:37:59.220 align:start position:0%
provided directly in this column so what
that<00:37:57.430><c> means</c><00:37:57.670><c> that</c><00:37:57.820><c> means</c><00:37:58.090><c> that</c><00:37:58.540><c> I</c><00:37:58.720><c> will</c><00:37:59.110><c> be</c>

00:37:59.220 --> 00:37:59.230 align:start position:0%
that means that means that I will be
 

00:37:59.230 --> 00:38:00.990 align:start position:0%
that means that means that I will be
able<00:37:59.290><c> to</c><00:37:59.470><c> write</c><00:37:59.740><c> some</c><00:37:59.920><c> statement</c><00:38:00.430><c> like</c><00:38:00.670><c> cell</c>

00:38:00.990 --> 00:38:01.000 align:start position:0%
able to write some statement like cell
 

00:38:01.000 --> 00:38:05.520 align:start position:0%
able to write some statement like cell
select<00:38:01.450><c> from</c><00:38:01.750><c> users</c><00:38:02.170><c> when</c><00:38:02.980><c> doc</c><00:38:03.340><c> and</c><00:38:04.030><c> opens</c><00:38:04.840><c> and</c>

00:38:05.520 --> 00:38:05.530 align:start position:0%
select from users when doc and opens and
 

00:38:05.530 --> 00:38:08.730 align:start position:0%
select from users when doc and opens and
to<00:38:06.490><c> put</c><00:38:06.670><c> a</c><00:38:06.700><c> where</c><00:38:07.030><c> closest</c><00:38:07.960><c> about</c><00:38:08.470><c> the</c><00:38:08.590><c> address</c>

00:38:08.730 --> 00:38:08.740 align:start position:0%
to put a where closest about the address
 

00:38:08.740 --> 00:38:11.910 align:start position:0%
to put a where closest about the address
and<00:38:09.220><c> the</c><00:38:09.310><c> postcode</c><00:38:09.700><c> with</c><00:38:10.660><c> the</c><00:38:10.900><c> same</c><00:38:11.200><c> speed</c>

00:38:11.910 --> 00:38:11.920 align:start position:0%
and the postcode with the same speed
 

00:38:11.920 --> 00:38:15.660 align:start position:0%
and the postcode with the same speed
than<00:38:12.220><c> if</c><00:38:12.430><c> it</c><00:38:12.610><c> was</c><00:38:12.820><c> a</c><00:38:13.060><c> native</c><00:38:13.540><c> column</c><00:38:13.900><c> so</c><00:38:14.670><c> that</c>

00:38:15.660 --> 00:38:15.670 align:start position:0%
than if it was a native column so that
 

00:38:15.670 --> 00:38:17.520 align:start position:0%
than if it was a native column so that
data<00:38:15.880><c> law</c><00:38:16.120><c> has</c><00:38:16.300><c> to</c><00:38:16.480><c> do</c><00:38:16.600><c> very</c><00:38:16.630><c> powerful</c><00:38:17.320><c> things</c>

00:38:17.520 --> 00:38:17.530 align:start position:0%
data law has to do very powerful things
 

00:38:17.530 --> 00:38:20.250 align:start position:0%
data law has to do very powerful things
like<00:38:17.710><c> that</c><00:38:17.860><c> because</c><00:38:18.220><c> in</c><00:38:18.990><c> Java</c><00:38:19.990><c> and</c><00:38:20.110><c> in</c>

00:38:20.250 --> 00:38:20.260 align:start position:0%
like that because in Java and in
 

00:38:20.260 --> 00:38:23.460 align:start position:0%
like that because in Java and in
Kathleen<00:38:20.710><c> we</c><00:38:21.250><c> are</c><00:38:21.400><c> statically</c><00:38:22.060><c> typed</c><00:38:22.600><c> so</c><00:38:23.230><c> we</c>

00:38:23.460 --> 00:38:23.470 align:start position:0%
Kathleen we are statically typed so we
 

00:38:23.470 --> 00:38:26.160 align:start position:0%
Kathleen we are statically typed so we
are<00:38:23.590><c> less</c><00:38:23.770><c> dynamic</c><00:38:23.920><c> light</c><00:38:24.340><c> like</c><00:38:24.640><c> in</c><00:38:24.670><c> PHP</c><00:38:25.000><c> or</c><00:38:25.630><c> in</c>

00:38:26.160 --> 00:38:26.170 align:start position:0%
are less dynamic light like in PHP or in
 

00:38:26.170 --> 00:38:28.890 align:start position:0%
are less dynamic light like in PHP or in
JavaScript<00:38:26.770><c> and</c><00:38:27.580><c> where</c><00:38:27.910><c> you</c><00:38:28.270><c> are</c><00:38:28.420><c> writing</c><00:38:28.630><c> for</c>

00:38:28.890 --> 00:38:28.900 align:start position:0%
JavaScript and where you are writing for
 

00:38:28.900 --> 00:38:31.860 align:start position:0%
JavaScript and where you are writing for
example<00:38:29.020><c> a</c><00:38:29.380><c> back</c><00:38:29.620><c> end</c><00:38:29.970><c> a</c><00:38:30.970><c> back</c><00:38:31.480><c> office</c><00:38:31.660><c> that</c>

00:38:31.860 --> 00:38:31.870 align:start position:0%
example a back end a back office that
 

00:38:31.870 --> 00:38:34.290 align:start position:0%
example a back end a back office that
allow<00:38:32.410><c> you</c><00:38:32.470><c> to</c><00:38:32.650><c> allow</c><00:38:33.520><c> you</c><00:38:33.580><c> to</c><00:38:33.820><c> use</c><00:38:34.000><c> the</c><00:38:34.120><c> user</c>

00:38:34.290 --> 00:38:34.300 align:start position:0%
allow you to allow you to use the user
 

00:38:34.300 --> 00:38:36.930 align:start position:0%
allow you to allow you to use the user
to<00:38:34.630><c> create</c><00:38:34.930><c> some</c><00:38:35.230><c> structure</c><00:38:35.530><c> at</c><00:38:36.190><c> runtime</c><00:38:36.490><c> that</c>

00:38:36.930 --> 00:38:36.940 align:start position:0%
to create some structure at runtime that
 

00:38:36.940 --> 00:38:40.560 align:start position:0%
to create some structure at runtime that
you<00:38:37.270><c> don't</c><00:38:37.660><c> have</c><00:38:38.430><c> you</c><00:38:39.430><c> don't</c><00:38:39.880><c> know</c><00:38:40.210><c> when</c><00:38:40.450><c> you</c>

00:38:40.560 --> 00:38:40.570 align:start position:0%
you don't have you don't know when you
 

00:38:40.570 --> 00:38:42.510 align:start position:0%
you don't have you don't know when you
develop<00:38:40.900><c> the</c><00:38:41.020><c> application</c><00:38:41.500><c> that</c><00:38:42.130><c> kind</c><00:38:42.400><c> of</c>

00:38:42.510 --> 00:38:42.520 align:start position:0%
develop the application that kind of
 

00:38:42.520 --> 00:38:47.870 align:start position:0%
develop the application that kind of
dynamic<00:38:43.260><c> capabilities</c><00:38:44.260><c> is</c><00:38:44.920><c> is</c><00:38:45.460><c> pretty</c><00:38:45.790><c> useful</c>

00:38:47.870 --> 00:38:47.880 align:start position:0%
dynamic capabilities is is pretty useful
 

00:38:47.880 --> 00:38:51.570 align:start position:0%
dynamic capabilities is is pretty useful
so<00:38:48.880><c> if</c><00:38:49.360><c> if</c><00:38:49.750><c> we</c><00:38:49.960><c> have</c><00:38:50.110><c> writen</c><00:38:50.620><c> if</c><00:38:51.160><c> we</c><00:38:51.400><c> add</c>

00:38:51.570 --> 00:38:51.580 align:start position:0%
so if if we have writen if we add
 

00:38:51.580 --> 00:38:55.350 align:start position:0%
so if if we have writen if we add
write-ins<00:38:52.390><c> application</c><00:38:53.290><c> with</c><00:38:54.060><c> spring</c><00:38:55.060><c> gdb</c>

00:38:55.350 --> 00:38:55.360 align:start position:0%
write-ins application with spring gdb
 

00:38:55.360 --> 00:38:57.570 align:start position:0%
write-ins application with spring gdb
see<00:38:55.420><c> a</c><00:38:55.510><c> rigorous</c><00:38:55.870><c> report</c><00:38:56.260><c> we</c><00:38:57.100><c> should</c><00:38:57.370><c> have</c>

00:38:57.570 --> 00:38:57.580 align:start position:0%
see a rigorous report we should have
 

00:38:57.580 --> 00:39:01.320 align:start position:0%
see a rigorous report we should have
created<00:38:57.850><c> a</c><00:38:58.180><c> schema</c><00:38:58.780><c> that</c><00:38:58.810><c> SQL</c><00:38:59.230><c> with</c><00:39:00.090><c> that</c><00:39:01.090><c> kind</c>

00:39:01.320 --> 00:39:01.330 align:start position:0%
created a schema that SQL with that kind
 

00:39:01.330 --> 00:39:04.260 align:start position:0%
created a schema that SQL with that kind
of<00:39:01.420><c> stuff</c><00:39:01.690><c> that</c><00:39:01.990><c> creates</c><00:39:02.340><c> the</c><00:39:03.340><c> tables</c><00:39:03.820><c> if</c><00:39:04.090><c> they</c>

00:39:04.260 --> 00:39:04.270 align:start position:0%
of stuff that creates the tables if they
 

00:39:04.270 --> 00:39:06.960 align:start position:0%
of stuff that creates the tables if they
don't<00:39:04.480><c> exist</c><00:39:04.720><c> and</c><00:39:05.110><c> they</c><00:39:05.980><c> create</c><00:39:06.280><c> the</c><00:39:06.490><c> index</c><00:39:06.730><c> as</c>

00:39:06.960 --> 00:39:06.970 align:start position:0%
don't exist and they create the index as
 

00:39:06.970 --> 00:39:10.530 align:start position:0%
don't exist and they create the index as
if<00:39:07.300><c> they</c><00:39:07.450><c> don't</c><00:39:07.570><c> exist</c><00:39:07.720><c> so</c><00:39:08.880><c> how</c><00:39:09.880><c> we</c><00:39:09.940><c> are</c><00:39:10.300><c> going</c>

00:39:10.530 --> 00:39:10.540 align:start position:0%
if they don't exist so how we are going
 

00:39:10.540 --> 00:39:12.900 align:start position:0%
if they don't exist so how we are going
to<00:39:10.720><c> write</c><00:39:10.900><c> that</c><00:39:11.050><c> in</c><00:39:11.110><c> Kirkland</c><00:39:11.590><c> with</c><00:39:12.460><c> exposed</c>

00:39:12.900 --> 00:39:12.910 align:start position:0%
to write that in Kirkland with exposed
 

00:39:12.910 --> 00:39:17.300 align:start position:0%
to write that in Kirkland with exposed
in<00:39:13.510><c> fact</c><00:39:13.870><c> we</c><00:39:14.080><c> are</c><00:39:14.110><c> going</c><00:39:14.650><c> to</c><00:39:14.890><c> write</c><00:39:15.420><c> SQL</c><00:39:16.420><c> schema</c>

00:39:17.300 --> 00:39:17.310 align:start position:0%
in fact we are going to write SQL schema
 

00:39:17.310 --> 00:39:21.870 align:start position:0%
in fact we are going to write SQL schema
with<00:39:18.310><c> code</c><00:39:18.550><c> in</c><00:39:18.760><c> code</c><00:39:19.000><c> so</c><00:39:19.440><c> this</c><00:39:20.440><c> this</c><00:39:21.160><c> is</c><00:39:21.370><c> the</c>

00:39:21.870 --> 00:39:21.880 align:start position:0%
with code in code so this this is the
 

00:39:21.880 --> 00:39:25.140 align:start position:0%
with code in code so this this is the
equivalent<00:39:22.510><c> of</c><00:39:22.690><c> the</c><00:39:22.960><c> previous</c><00:39:23.350><c> SQL</c><00:39:23.710><c> code</c><00:39:24.150><c> you</c>

00:39:25.140 --> 00:39:25.150 align:start position:0%
equivalent of the previous SQL code you
 

00:39:25.150 --> 00:39:30.030 align:start position:0%
equivalent of the previous SQL code you
see<00:39:25.450><c> that's</c><00:39:26.520><c> that's</c><00:39:27.780><c> SQL</c><00:39:28.780><c> attraction</c><00:39:29.560><c> but</c>

00:39:30.030 --> 00:39:30.040 align:start position:0%
see that's that's SQL attraction but
 

00:39:30.040 --> 00:39:33.200 align:start position:0%
see that's that's SQL attraction but
when<00:39:30.280><c> we</c><00:39:30.400><c> lightweight</c><00:39:30.820><c> we</c><00:39:31.180><c> directly</c><00:39:31.690><c> use</c><00:39:31.780><c> a</c>

00:39:33.200 --> 00:39:33.210 align:start position:0%
when we lightweight we directly use a
 

00:39:33.210 --> 00:39:37.230 align:start position:0%
when we lightweight we directly use a
skill<00:39:34.210><c> types</c><00:39:35.160><c> we</c><00:39:36.160><c> are</c><00:39:36.250><c> defining</c><00:39:36.550><c> that</c><00:39:36.670><c> ideas</c>

00:39:37.230 --> 00:39:37.240 align:start position:0%
skill types we are defining that ideas
 

00:39:37.240 --> 00:39:39.450 align:start position:0%
skill types we are defining that ideas
in<00:39:37.450><c> the</c><00:39:37.660><c> girl</c><00:39:37.870><c> auto</c><00:39:38.200><c> implemented</c><00:39:38.560><c> a</c><00:39:39.070><c> new</c>

00:39:39.450 --> 00:39:39.460 align:start position:0%
in the girl auto implemented a new
 

00:39:39.460 --> 00:39:41.640 align:start position:0%
in the girl auto implemented a new
primary<00:39:39.700><c> key</c><00:39:40.060><c> we</c><00:39:40.900><c> defined</c><00:39:41.260><c> the</c><00:39:41.380><c> various</c>

00:39:41.640 --> 00:39:41.650 align:start position:0%
primary key we defined the various
 

00:39:41.650 --> 00:39:43.089 align:start position:0%
primary key we defined the various
columns<00:39:42.010><c> and</c>

00:39:43.089 --> 00:39:43.099 align:start position:0%
columns and
 

00:39:43.099 --> 00:39:46.250 align:start position:0%
columns and
the<00:39:44.099><c> interesting</c><00:39:44.339><c> thing</c><00:39:44.579><c> is</c><00:39:45.059><c> that</c><00:39:45.260><c> these</c>

00:39:46.250 --> 00:39:46.260 align:start position:0%
the interesting thing is that these
 

00:39:46.260 --> 00:39:49.160 align:start position:0%
the interesting thing is that these
messages<00:39:46.920><c> and</c><00:39:47.160><c> users</c><00:39:47.550><c> objects</c><00:39:48.270><c> will</c><00:39:48.990><c> be</c>

00:39:49.160 --> 00:39:49.170 align:start position:0%
messages and users objects will be
 

00:39:49.170 --> 00:39:51.680 align:start position:0%
messages and users objects will be
reused<00:39:49.589><c> after</c><00:39:49.829><c> I'm</c><00:39:50.790><c> going</c><00:39:51.000><c> to</c><00:39:51.180><c> show</c><00:39:51.359><c> you</c><00:39:51.390><c> that</c>

00:39:51.680 --> 00:39:51.690 align:start position:0%
reused after I'm going to show you that
 

00:39:51.690 --> 00:39:56.329 align:start position:0%
reused after I'm going to show you that
to<00:39:52.290><c> write</c><00:39:52.500><c> directly</c><00:39:53.130><c> the</c><00:39:54.410><c> queries</c><00:39:55.410><c> with</c><00:39:56.309><c> a</c>

00:39:56.329 --> 00:39:56.339 align:start position:0%
to write directly the queries with a
 

00:39:56.339 --> 00:40:04.190 align:start position:0%
to write directly the queries with a
static<00:39:56.780><c> statically</c><00:39:57.780><c> typed</c><00:39:57.960><c> API</c><00:40:02.119><c> so</c><00:40:03.119><c> we</c><00:40:04.050><c> are</c>

00:40:04.190 --> 00:40:04.200 align:start position:0%
static statically typed API so we are
 

00:40:04.200 --> 00:40:05.960 align:start position:0%
static statically typed API so we are
not<00:40:04.319><c> using</c><00:40:04.559><c> spring</c><00:40:05.160><c> data</c><00:40:05.339><c> in</c><00:40:05.760><c> that</c>

00:40:05.960 --> 00:40:05.970 align:start position:0%
not using spring data in that
 

00:40:05.970 --> 00:40:08.359 align:start position:0%
not using spring data in that
application<00:40:06.119><c> so</c><00:40:06.540><c> I'm</c><00:40:06.990><c> writing</c><00:40:07.260><c> quickly</c><00:40:07.710><c> a</c>

00:40:08.359 --> 00:40:08.369 align:start position:0%
application so I'm writing quickly a
 

00:40:08.369 --> 00:40:10.910 align:start position:0%
application so I'm writing quickly a
repository<00:40:09.210><c> interface</c><00:40:10.170><c> which</c><00:40:10.500><c> contain</c><00:40:10.890><c> a</c>

00:40:10.910 --> 00:40:10.920 align:start position:0%
repository interface which contain a
 

00:40:10.920 --> 00:40:13.309 align:start position:0%
repository interface which contain a
great<00:40:11.220><c> table</c><00:40:11.400><c> create</c><00:40:11.880><c> final</c><00:40:12.329><c> digital</c><00:40:12.839><c> fine</c>

00:40:13.309 --> 00:40:13.319 align:start position:0%
great table create final digital fine
 

00:40:13.319 --> 00:40:14.990 align:start position:0%
great table create final digital fine
Bank<00:40:13.559><c> boutique</c><00:40:13.829><c> box</c><00:40:14.040><c> so</c><00:40:14.280><c> that</c><00:40:14.550><c> one</c><00:40:14.790><c> will</c>

00:40:14.990 --> 00:40:15.000 align:start position:0%
Bank boutique box so that one will
 

00:40:15.000 --> 00:40:19.520 align:start position:0%
Bank boutique box so that one will
allowed<00:40:15.270><c> to</c><00:40:15.559><c> find</c><00:40:16.559><c> some</c><00:40:17.809><c> messages</c><00:40:18.809><c> or</c><00:40:19.290><c> user</c>

00:40:19.520 --> 00:40:19.530 align:start position:0%
allowed to find some messages or user
 

00:40:19.530 --> 00:40:23.359 align:start position:0%
allowed to find some messages or user
based<00:40:20.040><c> on</c><00:40:20.250><c> specific</c><00:40:21.210><c> bounding</c><00:40:21.780><c> box</c><00:40:21.960><c> and</c><00:40:22.369><c> it</c>

00:40:23.359 --> 00:40:23.369 align:start position:0%
based on specific bounding box and it
 

00:40:23.369 --> 00:40:25.809 align:start position:0%
based on specific bounding box and it
will<00:40:23.520><c> allow</c><00:40:23.790><c> us</c><00:40:24.000><c> to</c><00:40:24.119><c> update</c><00:40:24.569><c> the</c><00:40:24.869><c> location</c><00:40:25.140><c> and</c>

00:40:25.809 --> 00:40:25.819 align:start position:0%
will allow us to update the location and
 

00:40:25.819 --> 00:40:29.089 align:start position:0%
will allow us to update the location and
so<00:40:26.819><c> Method</c><00:40:27.270><c> repository</c><00:40:27.930><c> and</c><00:40:28.230><c> news</c><00:40:28.410><c> repository</c>

00:40:29.089 --> 00:40:29.099 align:start position:0%
so Method repository and news repository
 

00:40:29.099 --> 00:40:32.770 align:start position:0%
so Method repository and news repository
extend<00:40:29.550><c> this</c><00:40:30.300><c> produces</c><00:40:30.780><c> a</c><00:40:30.839><c> tree</c>

00:40:32.770 --> 00:40:32.780 align:start position:0%
extend this produces a tree
 

00:40:32.780 --> 00:40:34.940 align:start position:0%
extend this produces a tree
so<00:40:33.780><c> if</c><00:40:34.050><c> we</c><00:40:34.200><c> have</c><00:40:34.290><c> a</c><00:40:34.349><c> look</c><00:40:34.410><c> to</c><00:40:34.589><c> the</c><00:40:34.710><c> repository</c>

00:40:34.940 --> 00:40:34.950 align:start position:0%
so if we have a look to the repository
 

00:40:34.950 --> 00:40:37.790 align:start position:0%
so if we have a look to the repository
implementation<00:40:35.910><c> its</c><00:40:36.720><c> annotated</c><00:40:37.410><c> with</c><00:40:37.440><c> at</c>

00:40:37.790 --> 00:40:37.800 align:start position:0%
implementation its annotated with at
 

00:40:37.800 --> 00:40:40.819 align:start position:0%
implementation its annotated with at
repository<00:40:38.400><c> like</c><00:40:38.550><c> a</c><00:40:38.609><c> regular</c><00:40:39.260><c> regular</c><00:40:40.260><c> spring</c>

00:40:40.819 --> 00:40:40.829 align:start position:0%
repository like a regular regular spring
 

00:40:40.829 --> 00:40:44.120 align:start position:0%
repository like a regular regular spring
that<00:40:41.270><c> repository</c><00:40:42.619><c> we</c><00:40:43.619><c> are</c><00:40:43.740><c> using</c><00:40:43.890><c> a</c>

00:40:44.120 --> 00:40:44.130 align:start position:0%
that repository we are using a
 

00:40:44.130 --> 00:40:46.309 align:start position:0%
that repository we are using a
transactional<00:40:44.790><c> because</c><00:40:45.150><c> exposed</c><00:40:45.690><c> support</c>

00:40:46.309 --> 00:40:46.319 align:start position:0%
transactional because exposed support
 

00:40:46.319 --> 00:40:48.950 align:start position:0%
transactional because exposed support
spring<00:40:46.650><c> transactional</c><00:40:47.420><c> in</c><00:40:48.420><c> your</c><00:40:48.750><c> real</c>

00:40:48.950 --> 00:40:48.960 align:start position:0%
spring transactional in your real
 

00:40:48.960 --> 00:40:50.510 align:start position:0%
spring transactional in your real
application<00:40:49.470><c> that</c><00:40:49.710><c> should</c><00:40:49.920><c> be</c><00:40:50.130><c> on</c><00:40:50.280><c> the</c>

00:40:50.510 --> 00:40:50.520 align:start position:0%
application that should be on the
 

00:40:50.520 --> 00:40:55.280 align:start position:0%
application that should be on the
service<00:40:51.270><c> layer</c><00:40:51.450><c> I</c><00:40:51.569><c> guess</c><00:40:51.839><c> and</c><00:40:53.930><c> if</c><00:40:54.930><c> you</c><00:40:55.109><c> have</c><00:40:55.200><c> a</c>

00:40:55.280 --> 00:40:55.290 align:start position:0%
service layer I guess and if you have a
 

00:40:55.290 --> 00:40:57.020 align:start position:0%
service layer I guess and if you have a
look<00:40:55.380><c> to</c><00:40:55.530><c> the</c><00:40:55.650><c> update</c><00:40:55.950><c> location</c><00:40:56.400><c> function</c><00:40:56.849><c> for</c>

00:40:57.020 --> 00:40:57.030 align:start position:0%
look to the update location function for
 

00:40:57.030 --> 00:40:58.849 align:start position:0%
look to the update location function for
example<00:40:57.089><c> you</c><00:40:57.540><c> will</c><00:40:57.660><c> see</c><00:40:57.720><c> that's</c><00:40:58.109><c> exposed</c>

00:40:58.849 --> 00:40:58.859 align:start position:0%
example you will see that's exposed
 

00:40:58.859 --> 00:41:01.819 align:start position:0%
example you will see that's exposed
allow<00:40:59.339><c> us</c><00:40:59.520><c> to</c><00:40:59.700><c> write</c><00:40:59.849><c> our</c><00:40:59.910><c> SQL</c><00:41:00.480><c> queries</c><00:41:00.960><c> with</c>

00:41:01.819 --> 00:41:01.829 align:start position:0%
allow us to write our SQL queries with
 

00:41:01.829 --> 00:41:05.599 align:start position:0%
allow us to write our SQL queries with
the<00:41:02.069><c> cut</c><00:41:02.250><c> clean</c><00:41:02.430><c> type</c><00:41:02.700><c> safe</c><00:41:02.970><c> API</c><00:41:03.780><c> that</c><00:41:04.770><c> allow</c>

00:41:05.599 --> 00:41:05.609 align:start position:0%
the cut clean type safe API that allow
 

00:41:05.609 --> 00:41:07.069 align:start position:0%
the cut clean type safe API that allow
us<00:41:05.790><c> to</c><00:41:05.849><c> about</c><00:41:06.180><c> to</c><00:41:06.299><c> complete</c><00:41:06.630><c> anything</c><00:41:06.839><c> like</c>

00:41:07.069 --> 00:41:07.079 align:start position:0%
us to about to complete anything like
 

00:41:07.079 --> 00:41:09.470 align:start position:0%
us to about to complete anything like
that<00:41:07.109><c> so</c><00:41:07.410><c> instead</c><00:41:08.250><c> of</c><00:41:08.309><c> that's</c><00:41:09.059><c> a</c><00:41:09.150><c> little</c><00:41:09.359><c> bit</c>

00:41:09.470 --> 00:41:09.480 align:start position:0%
that so instead of that's a little bit
 

00:41:09.480 --> 00:41:09.920 align:start position:0%
that so instead of that's a little bit
different

00:41:09.920 --> 00:41:09.930 align:start position:0%
different
 

00:41:09.930 --> 00:41:11.720 align:start position:0%
different
usually<00:41:10.349><c> we</c><00:41:10.440><c> spring</c><00:41:10.680><c> data</c><00:41:10.980><c> you</c><00:41:11.190><c> have</c><00:41:11.339><c> a</c><00:41:11.460><c> cred</c>

00:41:11.720 --> 00:41:11.730 align:start position:0%
usually we spring data you have a cred
 

00:41:11.730 --> 00:41:14.089 align:start position:0%
usually we spring data you have a cred
credit<00:41:12.569><c> opposite</c><00:41:13.020><c> URI</c><00:41:13.230><c> that</c><00:41:13.410><c> you</c><00:41:13.500><c> extend</c><00:41:13.890><c> to</c>

00:41:14.089 --> 00:41:14.099 align:start position:0%
credit opposite URI that you extend to
 

00:41:14.099 --> 00:41:17.750 align:start position:0%
credit opposite URI that you extend to
add<00:41:14.220><c> you</c><00:41:14.490><c> your</c><00:41:15.240><c> custom</c><00:41:15.569><c> ones</c><00:41:16.369><c> spring</c><00:41:17.369><c> that</c><00:41:17.520><c> is</c>

00:41:17.750 --> 00:41:17.760 align:start position:0%
add you your custom ones spring that is
 

00:41:17.760 --> 00:41:20.240 align:start position:0%
add you your custom ones spring that is
able<00:41:18.089><c> to</c><00:41:18.299><c> create</c><00:41:18.720><c> some</c><00:41:19.049><c> queries</c><00:41:19.500><c> based</c><00:41:19.890><c> on</c><00:41:20.130><c> the</c>

00:41:20.240 --> 00:41:20.250 align:start position:0%
able to create some queries based on the
 

00:41:20.250 --> 00:41:22.430 align:start position:0%
able to create some queries based on the
name<00:41:20.460><c> of</c><00:41:20.640><c> the</c><00:41:20.730><c> method</c><00:41:20.880><c> here</c><00:41:21.720><c> it's</c><00:41:22.020><c> a</c><00:41:22.200><c> little</c>

00:41:22.430 --> 00:41:22.440 align:start position:0%
name of the method here it's a little
 

00:41:22.440 --> 00:41:25.789 align:start position:0%
name of the method here it's a little
bit<00:41:22.559><c> different</c><00:41:23.750><c> here</c><00:41:24.750><c> we</c><00:41:24.990><c> are</c><00:41:25.020><c> using</c><00:41:25.319><c> the</c>

00:41:25.789 --> 00:41:25.799 align:start position:0%
bit different here we are using the
 

00:41:25.799 --> 00:41:28.819 align:start position:0%
bit different here we are using the
power<00:41:26.160><c> of</c><00:41:26.339><c> code</c><00:41:27.270><c> clean</c><00:41:27.480><c> and</c><00:41:27.720><c> the</c><00:41:28.470><c> library</c>

00:41:28.819 --> 00:41:28.829 align:start position:0%
power of code clean and the library
 

00:41:28.829 --> 00:41:30.440 align:start position:0%
power of code clean and the library
exposed<00:41:29.160><c> but</c><00:41:29.369><c> I</c><00:41:29.400><c> guess</c><00:41:29.730><c> there</c><00:41:30.000><c> will</c><00:41:30.089><c> be</c><00:41:30.150><c> a</c><00:41:30.299><c> lot</c>

00:41:30.440 --> 00:41:30.450 align:start position:0%
exposed but I guess there will be a lot
 

00:41:30.450 --> 00:41:33.650 align:start position:0%
exposed but I guess there will be a lot
of<00:41:30.599><c> other</c><00:41:30.809><c> ones</c><00:41:31.130><c> too</c><00:41:32.160><c> at</c><00:41:32.910><c> the</c><00:41:33.299><c> beginning</c>

00:41:33.650 --> 00:41:33.660 align:start position:0%
of other ones too at the beginning
 

00:41:33.660 --> 00:41:36.400 align:start position:0%
of other ones too at the beginning
defines<00:41:34.200><c> the</c><00:41:34.500><c> structure</c><00:41:35.250><c> of</c><00:41:35.369><c> the</c><00:41:35.549><c> tables</c><00:41:36.059><c> and</c>

00:41:36.400 --> 00:41:36.410 align:start position:0%
defines the structure of the tables and
 

00:41:36.410 --> 00:41:40.609 align:start position:0%
defines the structure of the tables and
reusing<00:41:37.410><c> these</c><00:41:37.710><c> users</c><00:41:38.329><c> or</c><00:41:39.329><c> messages</c><00:41:40.020><c> object</c>

00:41:40.609 --> 00:41:40.619 align:start position:0%
reusing these users or messages object
 

00:41:40.619 --> 00:41:43.760 align:start position:0%
reusing these users or messages object
to<00:41:41.280><c> directly</c><00:41:41.640><c> write</c><00:41:41.910><c> the</c><00:41:41.940><c> queries</c><00:41:42.540><c> with</c><00:41:43.380><c> a</c>

00:41:43.760 --> 00:41:43.770 align:start position:0%
to directly write the queries with a
 

00:41:43.770 --> 00:41:47.030 align:start position:0%
to directly write the queries with a
statically<00:41:44.220><c> typed</c><00:41:44.520><c> API</c><00:41:44.819><c> so</c><00:41:45.270><c> here</c><00:41:45.720><c> the</c><00:41:46.319><c> queries</c>

00:41:47.030 --> 00:41:47.040 align:start position:0%
statically typed API so here the queries
 

00:41:47.040 --> 00:41:50.870 align:start position:0%
statically typed API so here the queries
are<00:41:47.579><c> quite</c><00:41:48.240><c> simple</c><00:41:48.690><c> but</c><00:41:49.349><c> in</c><00:41:50.190><c> real</c><00:41:50.460><c> life</c><00:41:50.670><c> you</c>

00:41:50.870 --> 00:41:50.880 align:start position:0%
are quite simple but in real life you
 

00:41:50.880 --> 00:41:53.000 align:start position:0%
are quite simple but in real life you
can<00:41:51.270><c> write</c><00:41:51.480><c> quite</c><00:41:51.780><c> complicated</c><00:41:52.140><c> statements</c>

00:41:53.000 --> 00:41:53.010 align:start position:0%
can write quite complicated statements
 

00:41:53.010 --> 00:41:55.370 align:start position:0%
can write quite complicated statements
with<00:41:53.609><c> that</c><00:41:53.819><c> kind</c><00:41:54.030><c> of</c><00:41:54.150><c> API</c><00:41:54.450><c> and</c>

00:41:55.370 --> 00:41:55.380 align:start position:0%
with that kind of API and
 

00:41:55.380 --> 00:41:57.799 align:start position:0%
with that kind of API and
here<00:41:55.980><c> that's</c><00:41:56.160><c> an</c><00:41:56.339><c> example</c><00:41:56.579><c> that</c><00:41:56.910><c> is</c><00:41:57.180><c> about</c><00:41:57.450><c> SQL</c>

00:41:57.799 --> 00:41:57.809 align:start position:0%
here that's an example that is about SQL
 

00:41:57.809 --> 00:42:00.099 align:start position:0%
here that's an example that is about SQL
but<00:41:58.170><c> you</c><00:41:58.289><c> can</c><00:41:58.470><c> find</c><00:41:58.710><c> the</c><00:41:58.920><c> same</c><00:41:59.099><c> about</c><00:41:59.490><c> no</c><00:41:59.759><c> SQL</c>

00:42:00.099 --> 00:42:00.109 align:start position:0%
but you can find the same about no SQL
 

00:42:00.109 --> 00:42:04.730 align:start position:0%
but you can find the same about no SQL
HTML<00:42:01.109><c> you</c><00:42:01.950><c> can</c><00:42:02.160><c> write</c><00:42:02.490><c> values</c><00:42:03.470><c> DSL</c><00:42:04.470><c> with</c><00:42:04.710><c> a</c>

00:42:04.730 --> 00:42:04.740 align:start position:0%
HTML you can write values DSL with a
 

00:42:04.740 --> 00:42:07.519 align:start position:0%
HTML you can write values DSL with a
Kaplan<00:42:05.390><c> and</c><00:42:06.390><c> that's</c><00:42:06.809><c> that's</c><00:42:07.230><c> a</c><00:42:07.380><c> pretty</c>

00:42:07.519 --> 00:42:07.529 align:start position:0%
Kaplan and that's that's a pretty
 

00:42:07.529 --> 00:42:10.249 align:start position:0%
Kaplan and that's that's a pretty
interesting<00:42:07.799><c> use</c><00:42:08.190><c> case</c><00:42:08.400><c> I</c><00:42:08.430><c> think</c><00:42:08.990><c> if</c><00:42:09.990><c> you</c><00:42:10.170><c> have</c>

00:42:10.249 --> 00:42:10.259 align:start position:0%
interesting use case I think if you have
 

00:42:10.259 --> 00:42:14.809 align:start position:0%
interesting use case I think if you have
a<00:42:10.349><c> look</c><00:42:10.470><c> to</c><00:42:10.680><c> the</c><00:42:10.710><c> ech</c><00:42:11.750><c> function</c><00:42:13.190><c> that</c><00:42:14.190><c> is</c><00:42:14.430><c> not</c>

00:42:14.809 --> 00:42:14.819 align:start position:0%
a look to the ech function that is not
 

00:42:14.819 --> 00:42:17.329 align:start position:0%
a look to the ech function that is not
using<00:42:15.119><c> parenthesis</c><00:42:15.750><c> that's</c><00:42:16.109><c> because</c><00:42:16.589><c> this</c>

00:42:17.329 --> 00:42:17.339 align:start position:0%
using parenthesis that's because this
 

00:42:17.339 --> 00:42:20.720 align:start position:0%
using parenthesis that's because this
this<00:42:17.730><c> function</c><00:42:18.569><c> has</c><00:42:18.690><c> been</c><00:42:18.990><c> specified</c><00:42:19.799><c> as</c><00:42:20.400><c> in</c>

00:42:20.720 --> 00:42:20.730 align:start position:0%
this function has been specified as in
 

00:42:20.730 --> 00:42:22.999 align:start position:0%
this function has been specified as in
fix<00:42:20.970><c> and</c><00:42:21.240><c> in</c><00:42:21.569><c> fix</c><00:42:21.839><c> just</c><00:42:22.319><c> say</c><00:42:22.529><c> that</c><00:42:22.710><c> you</c><00:42:22.859><c> can</c>

00:42:22.999 --> 00:42:23.009 align:start position:0%
fix and in fix just say that you can
 

00:42:23.009 --> 00:42:25.190 align:start position:0%
fix and in fix just say that you can
omit<00:42:23.369><c> the</c><00:42:23.910><c> parentheses</c><00:42:23.940><c> that</c><00:42:24.720><c> just</c><00:42:25.019><c> would</c><00:42:25.170><c> be</c>

00:42:25.190 --> 00:42:25.200 align:start position:0%
omit the parentheses that just would be
 

00:42:25.200 --> 00:42:28.190 align:start position:0%
omit the parentheses that just would be
that<00:42:25.859><c> just</c><00:42:26.039><c> syntactic</c><00:42:26.400><c> sugar</c><00:42:26.579><c> to</c><00:42:27.480><c> be</c><00:42:27.900><c> able</c><00:42:28.019><c> to</c>

00:42:28.190 --> 00:42:28.200 align:start position:0%
that just syntactic sugar to be able to
 

00:42:28.200 --> 00:42:30.079 align:start position:0%
that just syntactic sugar to be able to
write<00:42:28.470><c> more</c><00:42:28.710><c> functional</c><00:42:29.279><c> code</c><00:42:29.430><c> basically</c><00:42:29.970><c> but</c>

00:42:30.079 --> 00:42:30.089 align:start position:0%
write more functional code basically but
 

00:42:30.089 --> 00:42:31.849 align:start position:0%
write more functional code basically but
that's<00:42:30.359><c> that's</c><00:42:30.779><c> a</c><00:42:30.960><c> regular</c><00:42:31.319><c> function</c><00:42:31.680><c> there</c>

00:42:31.849 --> 00:42:31.859 align:start position:0%
that's that's a regular function there
 

00:42:31.859 --> 00:42:38.029 align:start position:0%
that's that's a regular function there
is<00:42:31.890><c> no</c><00:42:32.160><c> no</c><00:42:32.430><c> magic</c><00:42:32.759><c> here</c><00:42:34.519><c> and</c><00:42:36.109><c> so</c><00:42:37.109><c> we</c><00:42:37.829><c> are</c><00:42:37.859><c> using</c>

00:42:38.029 --> 00:42:38.039 align:start position:0%
is no no magic here and so we are using
 

00:42:38.039 --> 00:42:40.579 align:start position:0%
is no no magic here and so we are using
SQL<00:42:39.000><c> so</c><00:42:39.210><c> that's</c><00:42:39.390><c> fine</c><00:42:39.630><c> but</c><00:42:39.839><c> how</c><00:42:40.140><c> does</c><00:42:40.200><c> that</c>

00:42:40.579 --> 00:42:40.589 align:start position:0%
SQL so that's fine but how does that
 

00:42:40.589 --> 00:42:44.329 align:start position:0%
SQL so that's fine but how does that
works<00:42:40.829><c> when</c><00:42:41.730><c> I</c><00:42:41.759><c> have</c><00:42:42.180><c> to</c><00:42:42.329><c> use</c><00:42:42.920><c> a</c><00:42:43.920><c> native</c>

00:42:44.329 --> 00:42:44.339 align:start position:0%
works when I have to use a native
 

00:42:44.339 --> 00:42:47.809 align:start position:0%
works when I have to use a native
functionality<00:42:44.849><c> of</c><00:42:45.240><c> my</c><00:42:45.420><c> database</c><00:42:46.410><c> because</c><00:42:46.890><c> as</c>

00:42:47.809 --> 00:42:47.819 align:start position:0%
functionality of my database because as
 

00:42:47.819 --> 00:42:50.029 align:start position:0%
functionality of my database because as
I<00:42:48.029><c> said</c><00:42:48.210><c> previously</c><00:42:48.329><c> exposed</c><00:42:49.200><c> is</c><00:42:49.470><c> a</c><00:42:49.529><c> regular</c>

00:42:50.029 --> 00:42:50.039 align:start position:0%
I said previously exposed is a regular
 

00:42:50.039 --> 00:42:52.910 align:start position:0%
I said previously exposed is a regular
SQL<00:42:50.279><c> library</c><00:42:50.640><c> I</c><00:42:51.089><c> have</c><00:42:51.569><c> talked</c><00:42:51.960><c> about</c><00:42:52.140><c> native</c>

00:42:52.910 --> 00:42:52.920 align:start position:0%
SQL library I have talked about native
 

00:42:52.920 --> 00:42:54.650 align:start position:0%
SQL library I have talked about native
functionalities<00:42:53.490><c> like</c><00:42:53.519><c> JSON</c><00:42:53.970><c> support</c><00:42:54.240><c> or</c>

00:42:54.650 --> 00:42:54.660 align:start position:0%
functionalities like JSON support or
 

00:42:54.660 --> 00:42:57.559 align:start position:0%
functionalities like JSON support or
like<00:42:54.930><c> geospatial</c><00:42:55.559><c> support</c><00:42:55.890><c> so</c><00:42:56.039><c> how</c><00:42:56.640><c> how</c><00:42:57.299><c> could</c>

00:42:57.559 --> 00:42:57.569 align:start position:0%
like geospatial support so how how could
 

00:42:57.569 --> 00:43:03.190 align:start position:0%
like geospatial support so how how could
I<00:42:57.720><c> write</c><00:42:58.069><c> this</c><00:42:59.069><c> within</c><00:42:59.789><c> method</c><00:43:00.650><c> where</c><00:43:01.650><c> we're</c>

00:43:03.190 --> 00:43:03.200 align:start position:0%
I write this within method where we're
 

00:43:03.200 --> 00:43:07.640 align:start position:0%
I write this within method where we're
exposed<00:43:04.200><c> just</c><00:43:04.710><c> support</c><00:43:05.250><c> regular</c><00:43:05.599><c> SQL</c><00:43:06.650><c> so</c>

00:43:07.640 --> 00:43:07.650 align:start position:0%
exposed just support regular SQL so
 

00:43:07.650 --> 00:43:10.339 align:start position:0%
exposed just support regular SQL so
that's<00:43:08.130><c> that's</c><00:43:08.609><c> another</c><00:43:08.819><c> example</c><00:43:09.119><c> of</c><00:43:09.660><c> code</c>

00:43:10.339 --> 00:43:10.349 align:start position:0%
that's that's another example of code
 

00:43:10.349 --> 00:43:13.759 align:start position:0%
that's that's another example of code
clean<00:43:10.619><c> power</c><00:43:11.569><c> that's</c><00:43:12.569><c> cut</c><00:43:12.809><c> in</c><00:43:12.960><c> extensions</c><00:43:13.470><c> so</c>

00:43:13.759 --> 00:43:13.769 align:start position:0%
clean power that's cut in extensions so
 

00:43:13.769 --> 00:43:16.400 align:start position:0%
clean power that's cut in extensions so
curtain<00:43:14.519><c> extensions</c><00:43:15.059><c> allow</c><00:43:15.720><c> you</c><00:43:15.779><c> to</c><00:43:16.109><c> extend</c>

00:43:16.400 --> 00:43:16.410 align:start position:0%
curtain extensions allow you to extend
 

00:43:16.410 --> 00:43:20.240 align:start position:0%
curtain extensions allow you to extend
existing<00:43:16.589><c> classes</c><00:43:17.269><c> to</c><00:43:18.269><c> add</c><00:43:18.920><c> new</c><00:43:19.920><c> methods</c>

00:43:20.240 --> 00:43:20.250 align:start position:0%
existing classes to add new methods
 

00:43:20.250 --> 00:43:23.779 align:start position:0%
existing classes to add new methods
directly<00:43:21.119><c> in</c><00:43:21.569><c> place</c><00:43:21.829><c> so</c><00:43:22.829><c> that</c><00:43:22.859><c> sounds</c><00:43:23.730><c> a</c>

00:43:23.779 --> 00:43:23.789 align:start position:0%
directly in place so that sounds a
 

00:43:23.789 --> 00:43:25.730 align:start position:0%
directly in place so that sounds a
little<00:43:23.880><c> bit</c><00:43:24.119><c> magic</c><00:43:24.509><c> but</c><00:43:24.779><c> that's</c><00:43:25.079><c> that's</c><00:43:25.470><c> not</c>

00:43:25.730 --> 00:43:25.740 align:start position:0%
little bit magic but that's that's not
 

00:43:25.740 --> 00:43:29.720 align:start position:0%
little bit magic but that's that's not
so<00:43:25.950><c> magic</c><00:43:26.390><c> basically</c><00:43:27.390><c> you</c><00:43:27.539><c> see</c><00:43:27.750><c> here</c><00:43:28.049><c> I</c><00:43:28.799><c> define</c>

00:43:29.720 --> 00:43:29.730 align:start position:0%
so magic basically you see here I define
 

00:43:29.730 --> 00:43:32.749 align:start position:0%
so magic basically you see here I define
a<00:43:29.970><c> function</c><00:43:30.240><c> tabled</c><00:43:31.079><c> and</c><00:43:31.259><c> put</c><00:43:31.500><c> in</c><00:43:32.220><c> extension</c>

00:43:32.749 --> 00:43:32.759 align:start position:0%
a function tabled and put in extension
 

00:43:32.759 --> 00:43:35.359 align:start position:0%
a function tabled and put in extension
table<00:43:33.359><c> dot</c><00:43:33.750><c> point</c><00:43:34.019><c> that</c><00:43:34.619><c> means</c><00:43:34.799><c> that</c><00:43:35.069><c> I'm</c>

00:43:35.359 --> 00:43:35.369 align:start position:0%
table dot point that means that I'm
 

00:43:35.369 --> 00:43:38.410 align:start position:0%
table dot point that means that I'm
going<00:43:35.640><c> to</c><00:43:35.819><c> add</c><00:43:35.970><c> a</c><00:43:36.329><c> point</c><00:43:36.630><c> to</c><00:43:36.960><c> the</c><00:43:37.109><c> existing</c>

00:43:38.410 --> 00:43:38.420 align:start position:0%
going to add a point to the existing
 

00:43:38.420 --> 00:43:41.420 align:start position:0%
going to add a point to the existing
table<00:43:39.420><c> type</c><00:43:40.319><c> that</c><00:43:40.500><c> is</c><00:43:40.650><c> coming</c><00:43:40.829><c> from</c><00:43:41.009><c> exposed</c>

00:43:41.420 --> 00:43:41.430 align:start position:0%
table type that is coming from exposed
 

00:43:41.430 --> 00:43:43.789 align:start position:0%
table type that is coming from exposed
so<00:43:41.609><c> that's</c><00:43:41.789><c> coming</c><00:43:42.089><c> from</c><00:43:42.240><c> a</c><00:43:42.390><c> jar</c><00:43:42.630><c> I</c><00:43:42.869><c> don't</c><00:43:43.619><c> own</c>

00:43:43.789 --> 00:43:43.799 align:start position:0%
so that's coming from a jar I don't own
 

00:43:43.799 --> 00:43:46.480 align:start position:0%
so that's coming from a jar I don't own
that<00:43:43.859><c> I</c><00:43:44.369><c> just</c><00:43:44.700><c> adding</c><00:43:45.089><c> a</c><00:43:45.210><c> method</c><00:43:45.480><c> into</c><00:43:45.809><c> that</c>

00:43:46.480 --> 00:43:46.490 align:start position:0%
that I just adding a method into that
 

00:43:46.490 --> 00:43:52.549 align:start position:0%
that I just adding a method into that
and<00:43:49.279><c> and</c><00:43:50.359><c> this</c><00:43:51.359><c> this</c><00:43:51.750><c> function</c><00:43:51.930><c> will</c><00:43:52.380><c> be</c>

00:43:52.549 --> 00:43:52.559 align:start position:0%
and and this this function will be
 

00:43:52.559 --> 00:43:55.789 align:start position:0%
and and this this function will be
available<00:43:53.130><c> when</c><00:43:54.029><c> I</c><00:43:54.059><c> write</c><00:43:54.329><c> my</c><00:43:54.539><c> code</c><00:43:54.779><c> only</c><00:43:55.200><c> if</c><00:43:55.650><c> I</c>

00:43:55.789 --> 00:43:55.799 align:start position:0%
available when I write my code only if I
 

00:43:55.799 --> 00:43:58.039 align:start position:0%
available when I write my code only if I
import<00:43:56.279><c> this</c><00:43:56.849><c> extension</c><00:43:57.420><c> that's</c><00:43:57.660><c> a</c><00:43:57.809><c> little</c>

00:43:58.039 --> 00:43:58.049 align:start position:0%
import this extension that's a little
 

00:43:58.049 --> 00:44:01.599 align:start position:0%
import this extension that's a little
bit<00:43:58.170><c> like</c><00:43:58.380><c> static</c><00:43:58.950><c> import</c>

00:44:01.599 --> 00:44:01.609 align:start position:0%
 
 

00:44:01.609 --> 00:44:03.280 align:start position:0%
 
I<00:44:01.640><c> don't</c><00:44:02.450><c> know</c><00:44:02.510><c> if</c><00:44:02.630><c> you</c><00:44:02.750><c> have</c><00:44:02.869><c> used</c><00:44:03.140><c> the</c>

00:44:03.280 --> 00:44:03.290 align:start position:0%
I don't know if you have used the
 

00:44:03.290 --> 00:44:04.930 align:start position:0%
I don't know if you have used the
chicken<00:44:03.589><c> pot</c><00:44:03.770><c> but</c><00:44:03.920><c> it's</c><00:44:04.280><c> a</c><00:44:04.430><c> little</c><00:44:04.640><c> bit</c><00:44:04.760><c> like</c>

00:44:04.930 --> 00:44:04.940 align:start position:0%
chicken pot but it's a little bit like
 

00:44:04.940 --> 00:44:08.770 align:start position:0%
chicken pot but it's a little bit like
that<00:44:05.230><c> if</c><00:44:06.230><c> I</c><00:44:06.589><c> just</c><00:44:06.920><c> using</c><00:44:07.369><c> regular</c><00:44:07.400><c> code</c><00:44:08.119><c> with</c>

00:44:08.770 --> 00:44:08.780 align:start position:0%
that if I just using regular code with
 

00:44:08.780 --> 00:44:10.930 align:start position:0%
that if I just using regular code with
no<00:44:08.990><c> specific</c><00:44:09.170><c> import</c><00:44:09.740><c> table</c><00:44:10.190><c> we'll</c><00:44:10.430><c> just</c><00:44:10.730><c> add</c>

00:44:10.930 --> 00:44:10.940 align:start position:0%
no specific import table we'll just add
 

00:44:10.940 --> 00:44:14.740 align:start position:0%
no specific import table we'll just add
the<00:44:11.240><c> methods</c><00:44:11.450><c> the</c><00:44:12.319><c> functions</c><00:44:12.770><c> defined</c><00:44:13.280><c> by</c><00:44:13.750><c> by</c>

00:44:14.740 --> 00:44:14.750 align:start position:0%
the methods the functions defined by by
 

00:44:14.750 --> 00:44:18.220 align:start position:0%
the methods the functions defined by by
default<00:44:15.200><c> in</c><00:44:15.680><c> in</c><00:44:15.950><c> this</c><00:44:16.160><c> class</c><00:44:16.369><c> but</c><00:44:17.150><c> if</c><00:44:17.390><c> I</c><00:44:17.660><c> import</c>

00:44:18.220 --> 00:44:18.230 align:start position:0%
default in in this class but if I import
 

00:44:18.230 --> 00:44:20.770 align:start position:0%
default in in this class but if I import
the<00:44:18.740><c> phylum</c><00:44:19.309><c> where</c><00:44:19.910><c> I</c><00:44:19.940><c> have</c><00:44:20.300><c> defined</c><00:44:20.599><c> this</c>

00:44:20.770 --> 00:44:20.780 align:start position:0%
the phylum where I have defined this
 

00:44:20.780 --> 00:44:23.770 align:start position:0%
the phylum where I have defined this
expansion<00:44:21.170><c> type</c><00:44:21.559><c> table</c><00:44:21.829><c> gunpoint</c><00:44:22.390><c> then</c><00:44:23.390><c> the</c>

00:44:23.770 --> 00:44:23.780 align:start position:0%
expansion type table gunpoint then the
 

00:44:23.780 --> 00:44:26.650 align:start position:0%
expansion type table gunpoint then the
compiler<00:44:24.079><c> of</c><00:44:24.290><c> the</c><00:44:24.559><c> IDE</c><00:44:24.920><c> will</c><00:44:25.700><c> propose</c><00:44:26.119><c> me</c><00:44:26.359><c> in</c>

00:44:26.650 --> 00:44:26.660 align:start position:0%
compiler of the IDE will propose me in
 

00:44:26.660 --> 00:44:30.150 align:start position:0%
compiler of the IDE will propose me in
the<00:44:26.839><c> autocomplete</c><00:44:27.550><c> the</c><00:44:28.550><c> point</c><00:44:29.210><c> method</c><00:44:29.630><c> and</c>

00:44:30.150 --> 00:44:30.160 align:start position:0%
the autocomplete the point method and
 

00:44:30.160 --> 00:44:32.950 align:start position:0%
the autocomplete the point method and
that's<00:44:31.160><c> nice</c><00:44:31.490><c> balance</c><00:44:31.880><c> between</c><00:44:32.000><c> the</c><00:44:32.359><c> dynamic</c>

00:44:32.950 --> 00:44:32.960 align:start position:0%
that's nice balance between the dynamic
 

00:44:32.960 --> 00:44:34.480 align:start position:0%
that's nice balance between the dynamic
thing<00:44:33.200><c> because</c><00:44:33.500><c> extension</c><00:44:34.010><c> is</c><00:44:34.130><c> quite</c><00:44:34.309><c> dynamic</c>

00:44:34.480 --> 00:44:34.490 align:start position:0%
thing because extension is quite dynamic
 

00:44:34.490 --> 00:44:38.140 align:start position:0%
thing because extension is quite dynamic
but<00:44:35.420><c> the</c><00:44:35.869><c> fact</c><00:44:36.260><c> that</c><00:44:36.349><c> extension</c><00:44:36.950><c> are</c><00:44:37.520><c> resolved</c>

00:44:38.140 --> 00:44:38.150 align:start position:0%
but the fact that extension are resolved
 

00:44:38.150 --> 00:44:42.540 align:start position:0%
but the fact that extension are resolved
statically<00:44:39.010><c> make</c><00:44:40.010><c> that</c><00:44:40.250><c> less</c><00:44:41.059><c> less</c><00:44:41.540><c> magic</c><00:44:41.900><c> and</c>

00:44:42.540 --> 00:44:42.550 align:start position:0%
statically make that less less magic and
 

00:44:42.550 --> 00:44:46.270 align:start position:0%
statically make that less less magic and
keep<00:44:43.550><c> a</c><00:44:44.420><c> load</c><00:44:45.319><c> to</c><00:44:45.440><c> keep</c><00:44:45.589><c> the</c><00:44:45.740><c> control</c><00:44:46.010><c> about</c>

00:44:46.270 --> 00:44:46.280 align:start position:0%
keep a load to keep the control about
 

00:44:46.280 --> 00:44:50.530 align:start position:0%
keep a load to keep the control about
what<00:44:46.960><c> what</c><00:44:48.040><c> what</c><00:44:49.040><c> extension</c><00:44:49.400><c> is</c><00:44:49.670><c> because</c><00:44:50.119><c> if</c>

00:44:50.530 --> 00:44:50.540 align:start position:0%
what what what extension is because if
 

00:44:50.540 --> 00:44:53.970 align:start position:0%
what what what extension is because if
we<00:44:50.809><c> we</c><00:44:51.079><c> don't</c><00:44:51.290><c> add</c><00:44:51.440><c> this</c><00:44:51.619><c> static</c><00:44:52.010><c> resolution</c>

00:44:53.970 --> 00:44:53.980 align:start position:0%
we we don't add this static resolution
 

00:44:53.980 --> 00:44:58.599 align:start position:0%
we we don't add this static resolution
if<00:44:54.980><c> I</c><00:44:55.250><c> wrote</c><00:44:55.569><c> 1</c><00:44:56.569><c> unread</c><00:44:56.869><c> extensions</c><00:44:57.470><c> that</c><00:44:58.280><c> that</c>

00:44:58.599 --> 00:44:58.609 align:start position:0%
if I wrote 1 unread extensions that that
 

00:44:58.609 --> 00:45:04.809 align:start position:0%
if I wrote 1 unread extensions that that
would<00:44:58.790><c> be</c><00:44:58.910><c> not</c><00:44:59.349><c> manageable</c><00:45:00.349><c> so</c><00:45:03.490><c> here</c><00:45:04.490><c> we</c><00:45:04.700><c> have</c>

00:45:04.809 --> 00:45:04.819 align:start position:0%
would be not manageable so here we have
 

00:45:04.819 --> 00:45:06.490 align:start position:0%
would be not manageable so here we have
a<00:45:04.849><c> look</c><00:45:05.059><c> to</c><00:45:05.240><c> the</c><00:45:05.270><c> configuration</c><00:45:05.900><c> class</c><00:45:06.290><c> so</c>

00:45:06.490 --> 00:45:06.500 align:start position:0%
a look to the configuration class so
 

00:45:06.500 --> 00:45:07.930 align:start position:0%
a look to the configuration class so
that's<00:45:06.619><c> a</c><00:45:06.799><c> regular</c><00:45:07.220><c> spring</c><00:45:07.700><c> boot</c>

00:45:07.930 --> 00:45:07.940 align:start position:0%
that's a regular spring boot
 

00:45:07.940 --> 00:45:10.299 align:start position:0%
that's a regular spring boot
configuration<00:45:08.089><c> class</c><00:45:09.099><c> annotated</c><00:45:10.099><c> with</c>

00:45:10.299 --> 00:45:10.309 align:start position:0%
configuration class annotated with
 

00:45:10.309 --> 00:45:13.450 align:start position:0%
configuration class annotated with
spring<00:45:10.579><c> good</c><00:45:10.730><c> application</c><00:45:11.589><c> so</c><00:45:12.589><c> open</c><00:45:13.099><c> keyword</c>

00:45:13.450 --> 00:45:13.460 align:start position:0%
spring good application so open keyword
 

00:45:13.460 --> 00:45:16.150 align:start position:0%
spring good application so open keyword
is<00:45:13.790><c> needed</c><00:45:14.299><c> at</c><00:45:14.540><c> class</c><00:45:15.079><c> and</c><00:45:15.440><c> method</c><00:45:16.010><c> level</c>

00:45:16.150 --> 00:45:16.160 align:start position:0%
is needed at class and method level
 

00:45:16.160 --> 00:45:19.299 align:start position:0%
is needed at class and method level
because<00:45:16.670><c> we</c><00:45:16.880><c> don't</c><00:45:17.530><c> because</c><00:45:18.530><c> we</c><00:45:18.559><c> are</c><00:45:19.130><c> using</c>

00:45:19.299 --> 00:45:19.309 align:start position:0%
because we don't because we are using
 

00:45:19.309 --> 00:45:23.440 align:start position:0%
because we don't because we are using
silly<00:45:19.730><c> to</c><00:45:20.119><c> extend</c><00:45:20.540><c> that</c><00:45:20.599><c> class</c><00:45:20.930><c> internally</c><00:45:22.450><c> in</c>

00:45:23.440 --> 00:45:23.450 align:start position:0%
silly to extend that class internally in
 

00:45:23.450 --> 00:45:26.559 align:start position:0%
silly to extend that class internally in
as<00:45:24.380><c> of</c><00:45:24.740><c> spring</c><00:45:25.160><c> farm</c><00:45:25.520><c> up</c><00:45:25.609><c> for</c><00:45:25.790><c> that</c><00:45:25.910><c> free</c><00:45:26.089><c> cut</c>

00:45:26.559 --> 00:45:26.569 align:start position:0%
as of spring farm up for that free cut
 

00:45:26.569 --> 00:45:28.059 align:start position:0%
as of spring farm up for that free cut
injects<00:45:26.960><c> and</c><00:45:27.109><c> module</c><00:45:27.290><c> is</c><00:45:27.380><c> automatically</c><00:45:27.859><c> draw</c>

00:45:28.059 --> 00:45:28.069 align:start position:0%
injects and module is automatically draw
 

00:45:28.069 --> 00:45:29.530 align:start position:0%
injects and module is automatically draw
registrated<00:45:28.640><c> so</c><00:45:28.940><c> you</c><00:45:29.000><c> don't</c><00:45:29.270><c> have</c><00:45:29.390><c> to</c>

00:45:29.530 --> 00:45:29.540 align:start position:0%
registrated so you don't have to
 

00:45:29.540 --> 00:45:32.140 align:start position:0%
registrated so you don't have to
register<00:45:29.690><c> it</c><00:45:30.170><c> in</c><00:45:30.710><c> that</c><00:45:31.099><c> case</c><00:45:31.339><c> and</c><00:45:31.640><c> using</c><00:45:32.000><c> that</c>

00:45:32.140 --> 00:45:32.150 align:start position:0%
register it in that case and using that
 

00:45:32.150 --> 00:45:33.910 align:start position:0%
register it in that case and using that
to<00:45:32.210><c> register</c><00:45:32.809><c> the</c><00:45:32.869><c> page</c><00:45:33.200><c> this</c><00:45:33.349><c> module</c><00:45:33.740><c> that</c>

00:45:33.910 --> 00:45:33.920 align:start position:0%
to register the page this module that
 

00:45:33.920 --> 00:45:36.190 align:start position:0%
to register the page this module that
allowed<00:45:34.160><c> to</c><00:45:34.339><c> Jackson</c><00:45:34.940><c> to</c><00:45:35.059><c> deal</c><00:45:35.240><c> with</c><00:45:35.390><c> your</c>

00:45:36.190 --> 00:45:36.200 align:start position:0%
allowed to Jackson to deal with your
 

00:45:36.200 --> 00:45:40.349 align:start position:0%
allowed to Jackson to deal with your
graphic<00:45:36.530><c> types</c><00:45:36.880><c> and</c><00:45:38.410><c> the</c><00:45:39.410><c> main</c><00:45:39.619><c> function</c>

00:45:40.349 --> 00:45:40.359 align:start position:0%
graphic types and the main function
 

00:45:40.359 --> 00:45:42.670 align:start position:0%
graphic types and the main function
don't<00:45:41.359><c> have</c><00:45:41.540><c> to</c><00:45:41.690><c> be</c><00:45:41.809><c> wrapped</c><00:45:42.079><c> into</c><00:45:42.290><c> a</c><00:45:42.410><c> class</c>

00:45:42.670 --> 00:45:42.680 align:start position:0%
don't have to be wrapped into a class
 

00:45:42.680 --> 00:45:44.289 align:start position:0%
don't have to be wrapped into a class
you<00:45:42.980><c> you</c><00:45:43.190><c> can</c><00:45:43.369><c> put</c><00:45:43.579><c> that</c><00:45:43.730><c> as</c><00:45:43.970><c> a</c><00:45:44.000><c> top-level</c>

00:45:44.289 --> 00:45:44.299 align:start position:0%
you you can put that as a top-level
 

00:45:44.299 --> 00:45:50.470 align:start position:0%
you you can put that as a top-level
function<00:45:44.839><c> that</c><00:45:45.079><c> works</c><00:45:47.589><c> the</c><00:45:48.589><c> grader</c><00:45:49.030><c> file</c><00:45:50.030><c> is</c><00:45:50.420><c> a</c>

00:45:50.470 --> 00:45:50.480 align:start position:0%
function that works the grader file is a
 

00:45:50.480 --> 00:45:52.610 align:start position:0%
function that works the grader file is a
regular<00:45:51.380><c> one</c>

00:45:52.610 --> 00:45:52.620 align:start position:0%
regular one
 

00:45:52.620 --> 00:45:55.640 align:start position:0%
regular one
the<00:45:53.070><c> point</c><00:45:53.340><c> specific</c><00:45:53.760><c> to</c><00:45:53.880><c> cut</c><00:45:54.060><c> clean</c><00:45:54.270><c> as</c><00:45:54.650><c> cut</c>

00:45:55.640 --> 00:45:55.650 align:start position:0%
the point specific to cut clean as cut
 

00:45:55.650 --> 00:45:57.380 align:start position:0%
the point specific to cut clean as cut
clean<00:45:55.860><c> cattle</c><00:45:56.160><c> plug-in</c><00:45:56.490><c> that</c><00:45:56.670><c> you</c><00:45:56.730><c> specify</c>

00:45:57.380 --> 00:45:57.390 align:start position:0%
clean cattle plug-in that you specify
 

00:45:57.390 --> 00:46:00.310 align:start position:0%
clean cattle plug-in that you specify
and<00:45:57.660><c> the</c><00:45:58.560><c> cleanest</c><00:45:59.160><c> at</c><00:45:59.310><c> the</c><00:45:59.370><c> ribbon</c><00:45:59.730><c> cutting</c>

00:46:00.310 --> 00:46:00.320 align:start position:0%
and the cleanest at the ribbon cutting
 

00:46:00.320 --> 00:46:04.370 align:start position:0%
and the cleanest at the ribbon cutting
reflects<00:46:01.320><c> libraries</c><00:46:02.900><c> the</c><00:46:03.900><c> rest</c><00:46:04.110><c> is</c><00:46:04.350><c> just</c>

00:46:04.370 --> 00:46:04.380 align:start position:0%
reflects libraries the rest is just
 

00:46:04.380 --> 00:46:07.970 align:start position:0%
reflects libraries the rest is just
regular<00:46:04.980><c> Java</c><00:46:05.700><c> dependencies</c><00:46:06.390><c> I</c><00:46:06.930><c> don't</c><00:46:07.800><c> have</c>

00:46:07.970 --> 00:46:07.980 align:start position:0%
regular Java dependencies I don't have
 

00:46:07.980 --> 00:46:10.430 align:start position:0%
regular Java dependencies I don't have
specified<00:46:08.430><c> that</c><00:46:08.640><c> previously</c><00:46:09.360><c> but</c><00:46:09.510><c> you</c><00:46:10.260><c> can</c>

00:46:10.430 --> 00:46:10.440 align:start position:0%
specified that previously but you can
 

00:46:10.440 --> 00:46:13.010 align:start position:0%
specified that previously but you can
totally<00:46:10.590><c> mix</c><00:46:11.100><c> Java</c><00:46:11.850><c> enter</c><00:46:12.150><c> clean</c><00:46:12.360><c> code</c><00:46:12.600><c> into</c>

00:46:13.010 --> 00:46:13.020 align:start position:0%
totally mix Java enter clean code into
 

00:46:13.020 --> 00:46:15.530 align:start position:0%
totally mix Java enter clean code into
the<00:46:13.140><c> same</c><00:46:13.320><c> code</c><00:46:13.530><c> base</c><00:46:13.820><c> that</c><00:46:14.820><c> works</c><00:46:15.090><c> perfectly</c>

00:46:15.530 --> 00:46:15.540 align:start position:0%
the same code base that works perfectly
 

00:46:15.540 --> 00:46:19.670 align:start position:0%
the same code base that works perfectly
well<00:46:15.750><c> and</c><00:46:16.010><c> that's</c><00:46:17.330><c> that's</c><00:46:18.330><c> yeah</c><00:46:19.020><c> there</c><00:46:19.530><c> is</c><00:46:19.650><c> a</c>

00:46:19.670 --> 00:46:19.680 align:start position:0%
well and that's that's yeah there is a
 

00:46:19.680 --> 00:46:22.070 align:start position:0%
well and that's that's yeah there is a
very<00:46:19.920><c> good</c><00:46:20.220><c> inter</c><00:46:20.730><c> a</c><00:46:20.760><c> bit</c><00:46:21.030><c> between</c><00:46:21.360><c> these</c><00:46:21.630><c> both</c>

00:46:22.070 --> 00:46:22.080 align:start position:0%
very good inter a bit between these both
 

00:46:22.080 --> 00:46:26.570 align:start position:0%
very good inter a bit between these both
technologies<00:46:24.740><c> recently</c><00:46:25.770><c> rather</c><00:46:26.190><c> we're</c>

00:46:26.570 --> 00:46:26.580 align:start position:0%
technologies recently rather we're
 

00:46:26.580 --> 00:46:30.260 align:start position:0%
technologies recently rather we're
announced<00:46:27.180><c> that</c><00:46:27.710><c> cut</c><00:46:28.710><c> in</c><00:46:29.010><c> Gradle</c><00:46:29.640><c> go</c><00:46:29.850><c> Scotland</c>

00:46:30.260 --> 00:46:30.270 align:start position:0%
announced that cut in Gradle go Scotland
 

00:46:30.270 --> 00:46:33.740 align:start position:0%
announced that cut in Gradle go Scotland
so<00:46:30.990><c> what</c><00:46:31.620><c> that</c><00:46:31.740><c> means</c><00:46:32.010><c> as</c><00:46:32.850><c> you</c><00:46:33.240><c> may</c><00:46:33.480><c> know</c>

00:46:33.740 --> 00:46:33.750 align:start position:0%
so what that means as you may know
 

00:46:33.750 --> 00:46:38.320 align:start position:0%
so what that means as you may know
Gradle<00:46:34.740><c> is</c><00:46:34.980><c> using</c><00:46:35.610><c> groovy</c><00:46:35.940><c> to</c><00:46:36.330><c> describe</c>

00:46:38.320 --> 00:46:38.330 align:start position:0%
Gradle is using groovy to describe
 

00:46:38.330 --> 00:46:41.450 align:start position:0%
Gradle is using groovy to describe
build.gradle<00:46:39.330><c> file</c><00:46:40.110><c> where</c><00:46:40.620><c> you</c><00:46:40.770><c> specify</c><00:46:40.980><c> and</c>

00:46:41.450 --> 00:46:41.460 align:start position:0%
build.gradle file where you specify and
 

00:46:41.460 --> 00:46:44.000 align:start position:0%
build.gradle file where you specify and
you<00:46:41.520><c> configure</c><00:46:41.940><c> your</c><00:46:41.970><c> build</c><00:46:42.470><c> and</c><00:46:43.470><c> it</c><00:46:43.770><c> allowed</c>

00:46:44.000 --> 00:46:44.010 align:start position:0%
you configure your build and it allowed
 

00:46:44.010 --> 00:46:46.190 align:start position:0%
you configure your build and it allowed
to<00:46:44.160><c> use</c><00:46:44.310><c> groovy</c><00:46:44.730><c> to</c><00:46:44.970><c> to</c><00:46:45.270><c> develop</c><00:46:45.660><c> the</c><00:46:45.840><c> plugins</c>

00:46:46.190 --> 00:46:46.200 align:start position:0%
to use groovy to to develop the plugins
 

00:46:46.200 --> 00:46:49.430 align:start position:0%
to use groovy to to develop the plugins
for<00:46:46.380><c> example</c><00:46:47.120><c> that</c><00:46:48.120><c> will</c><00:46:48.360><c> be</c><00:46:48.570><c> still</c><00:46:48.960><c> supported</c>

00:46:49.430 --> 00:46:49.440 align:start position:0%
for example that will be still supported
 

00:46:49.440 --> 00:46:52.430 align:start position:0%
for example that will be still supported
of<00:46:49.560><c> course</c><00:46:49.860><c> but</c><00:46:50.480><c> grader</c><00:46:51.480><c> is</c><00:46:51.690><c> really</c><00:46:51.900><c> switching</c>

00:46:52.430 --> 00:46:52.440 align:start position:0%
of course but grader is really switching
 

00:46:52.440 --> 00:46:56.360 align:start position:0%
of course but grader is really switching
to<00:46:53.070><c> Kathleen</c><00:46:53.460><c> for</c><00:46:53.790><c> the</c><00:46:53.940><c> main</c><00:46:54.590><c> languages</c><00:46:55.590><c> used</c>

00:46:56.360 --> 00:46:56.370 align:start position:0%
to Kathleen for the main languages used
 

00:46:56.370 --> 00:47:01.010 align:start position:0%
to Kathleen for the main languages used
to<00:46:56.640><c> describe</c><00:46:57.060><c> you</c><00:46:57.270><c> all</c><00:46:57.420><c> your</c><00:46:57.570><c> bins</c><00:46:57.780><c> so</c><00:46:59.870><c> they</c><00:47:00.870><c> do</c>

00:47:01.010 --> 00:47:01.020 align:start position:0%
to describe you all your bins so they do
 

00:47:01.020 --> 00:47:04.030 align:start position:0%
to describe you all your bins so they do
this<00:47:01.230><c> switch</c><00:47:01.560><c> because</c><00:47:02.040><c> as</c><00:47:02.820><c> I</c><00:47:03.030><c> said</c><00:47:03.090><c> previously</c>

00:47:04.030 --> 00:47:04.040 align:start position:0%
this switch because as I said previously
 

00:47:04.040 --> 00:47:06.590 align:start position:0%
this switch because as I said previously
cooking<00:47:05.040><c> allowed</c><00:47:05.340><c> to</c><00:47:05.490><c> write</c><00:47:05.700><c> short</c><00:47:06.360><c> code</c>

00:47:06.590 --> 00:47:06.600 align:start position:0%
cooking allowed to write short code
 

00:47:06.600 --> 00:47:11.500 align:start position:0%
cooking allowed to write short code
Layton<00:47:06.840><c> groovy</c><00:47:07.290><c> but</c><00:47:07.890><c> with</c><00:47:08.100><c> static</c><00:47:08.550><c> typing</c><00:47:08.910><c> and</c>

00:47:11.500 --> 00:47:11.510 align:start position:0%
Layton groovy but with static typing and
 

00:47:11.510 --> 00:47:14.900 align:start position:0%
Layton groovy but with static typing and
in<00:47:12.510><c> terms</c><00:47:12.840><c> of</c><00:47:12.930><c> autocomplete</c><00:47:13.470><c> for</c><00:47:13.590><c> example</c><00:47:14.070><c> in</c>

00:47:14.900 --> 00:47:14.910 align:start position:0%
in terms of autocomplete for example in
 

00:47:14.910 --> 00:47:18.230 align:start position:0%
in terms of autocomplete for example in
the<00:47:15.480><c> values</c><00:47:15.720><c> I</c><00:47:15.900><c> Dec</c><00:47:16.230><c> autocomplete</c><00:47:17.010><c> is</c><00:47:17.240><c> in</c>

00:47:18.230 --> 00:47:18.240 align:start position:0%
the values I Dec autocomplete is in
 

00:47:18.240 --> 00:47:22.750 align:start position:0%
the values I Dec autocomplete is in
Gradle<00:47:18.720><c> is</c><00:47:18.840><c> just</c><00:47:19.910><c> does</c><00:47:20.910><c> not</c><00:47:21.060><c> work</c><00:47:21.270><c> basically</c>

00:47:22.750 --> 00:47:22.760 align:start position:0%
Gradle is just does not work basically
 

00:47:22.760 --> 00:47:25.910 align:start position:0%
Gradle is just does not work basically
with<00:47:23.760><c> Kathleen</c><00:47:24.210><c> by</c><00:47:24.840><c> default</c><00:47:25.260><c> you</c><00:47:25.560><c> have</c><00:47:25.710><c> full</c>

00:47:25.910 --> 00:47:25.920 align:start position:0%
with Kathleen by default you have full
 

00:47:25.920 --> 00:47:27.980 align:start position:0%
with Kathleen by default you have full
auto<00:47:26.100><c> complete</c><00:47:26.430><c> everything</c><00:47:26.850><c> works</c><00:47:27.210><c> and</c><00:47:27.450><c> that</c>

00:47:27.980 --> 00:47:27.990 align:start position:0%
auto complete everything works and that
 

00:47:27.990 --> 00:47:29.690 align:start position:0%
auto complete everything works and that
give<00:47:28.200><c> more</c><00:47:28.440><c> control</c><00:47:28.830><c> about</c><00:47:28.980><c> the</c><00:47:29.310><c> plug-in</c>

00:47:29.690 --> 00:47:29.700 align:start position:0%
give more control about the plug-in
 

00:47:29.700 --> 00:47:31.700 align:start position:0%
give more control about the plug-in
ecosystem<00:47:29.730><c> and</c><00:47:30.390><c> thing</c><00:47:30.540><c> like</c><00:47:30.690><c> that</c><00:47:30.840><c> so</c><00:47:31.050><c> that's</c>

00:47:31.700 --> 00:47:31.710 align:start position:0%
ecosystem and thing like that so that's
 

00:47:31.710 --> 00:47:34.790 align:start position:0%
ecosystem and thing like that so that's
not<00:47:31.950><c> a</c><00:47:32.010><c> small</c><00:47:32.310><c> or</c><00:47:32.610><c> small</c><00:47:32.910><c> move</c><00:47:33.090><c> and</c><00:47:33.800><c> with</c>

00:47:34.790 --> 00:47:34.800 align:start position:0%
not a small or small move and with
 

00:47:34.800 --> 00:47:38.050 align:start position:0%
not a small or small move and with
Gradle<00:47:35.130><c> free</c><00:47:35.400><c> you</c><00:47:36.000><c> will</c><00:47:36.390><c> see</c><00:47:36.600><c> that</c><00:47:36.980><c> by</c><00:47:37.980><c> default</c>

00:47:38.050 --> 00:47:38.060 align:start position:0%
Gradle free you will see that by default
 

00:47:38.060 --> 00:47:40.940 align:start position:0%
Gradle free you will see that by default
rather<00:47:39.060><c> way</c><00:47:39.330><c> is</c><00:47:39.480><c> going</c><00:47:39.720><c> to</c><00:47:39.990><c> push</c><00:47:40.320><c> for</c><00:47:40.650><c> using</c>

00:47:40.940 --> 00:47:40.950 align:start position:0%
rather way is going to push for using
 

00:47:40.950 --> 00:47:43.730 align:start position:0%
rather way is going to push for using
Kathleen<00:47:41.630><c> by</c><00:47:42.630><c> default</c><00:47:43.020><c> and</c><00:47:43.230><c> they</c><00:47:43.470><c> still</c>

00:47:43.730 --> 00:47:43.740 align:start position:0%
Kathleen by default and they still
 

00:47:43.740 --> 00:47:45.170 align:start position:0%
Kathleen by default and they still
support<00:47:44.100><c> groovy</c><00:47:44.340><c> and</c><00:47:44.430><c> that's</c><00:47:44.610><c> perfectly</c><00:47:45.000><c> fine</c>

00:47:45.170 --> 00:47:45.180 align:start position:0%
support groovy and that's perfectly fine
 

00:47:45.180 --> 00:47:47.360 align:start position:0%
support groovy and that's perfectly fine
to<00:47:45.360><c> use</c><00:47:45.780><c> groovy</c><00:47:46.080><c> but</c><00:47:46.260><c> when</c><00:47:46.950><c> you</c><00:47:47.070><c> see</c><00:47:47.250><c> the</c>

00:47:47.360 --> 00:47:47.370 align:start position:0%
to use groovy but when you see the
 

00:47:47.370 --> 00:47:49.610 align:start position:0%
to use groovy but when you see the
advantages<00:47:47.940><c> in</c><00:47:48.180><c> terms</c><00:47:48.210><c> of</c><00:47:48.450><c> autocompletes</c><00:47:49.140><c> in</c>

00:47:49.610 --> 00:47:49.620 align:start position:0%
advantages in terms of autocompletes in
 

00:47:49.620 --> 00:47:52.970 align:start position:0%
advantages in terms of autocompletes in
terms<00:47:49.860><c> of</c><00:47:49.980><c> spin</c><00:47:50.220><c> or</c><00:47:50.370><c> so</c><00:47:51.230><c> yeah</c><00:47:52.230><c> that</c><00:47:52.860><c> really</c>

00:47:52.970 --> 00:47:52.980 align:start position:0%
terms of spin or so yeah that really
 

00:47:52.980 --> 00:47:54.920 align:start position:0%
terms of spin or so yeah that really
makes<00:47:53.250><c> a</c><00:47:53.340><c> difference</c><00:47:53.370><c> so</c><00:47:53.940><c> I</c><00:47:54.240><c> think</c><00:47:54.570><c> that's</c><00:47:54.750><c> why</c>

00:47:54.920 --> 00:47:54.930 align:start position:0%
makes a difference so I think that's why
 

00:47:54.930 --> 00:47:59.030 align:start position:0%
makes a difference so I think that's why
they<00:47:55.200><c> they</c><00:47:56.010><c> did</c><00:47:56.160><c> the</c><00:47:56.310><c> switch</c>

00:47:59.030 --> 00:47:59.040 align:start position:0%
 
 

00:47:59.040 --> 00:48:03.170 align:start position:0%
 
in<00:47:59.610><c> term</c><00:47:59.880><c> of</c><00:47:59.910><c> deployments</c><00:48:02.030><c> replication</c><00:48:03.030><c> is</c><00:48:03.150><c> a</c>

00:48:03.170 --> 00:48:03.180 align:start position:0%
in term of deployments replication is a
 

00:48:03.180 --> 00:48:05.600 align:start position:0%
in term of deployments replication is a
regular<00:48:03.630><c> Springwood</c><00:48:04.050><c> whenever</c><00:48:04.380><c> jaw</c>

00:48:05.600 --> 00:48:05.610 align:start position:0%
regular Springwood whenever jaw
 

00:48:05.610 --> 00:48:11.570 align:start position:0%
regular Springwood whenever jaw
it's<00:48:07.730><c> it's</c><00:48:08.730><c> 18</c><00:48:09.450><c> 18</c><00:48:10.410><c> megabyte</c><00:48:10.770><c> so</c><00:48:11.040><c> quite</c><00:48:11.310><c> small</c>

00:48:11.570 --> 00:48:11.580 align:start position:0%
it's it's 18 18 megabyte so quite small
 

00:48:11.580 --> 00:48:14.830 align:start position:0%
it's it's 18 18 megabyte so quite small
it's<00:48:12.540><c> done</c><00:48:12.840><c> in</c><00:48:13.020><c> less</c><00:48:13.440><c> than</c><00:48:13.650><c> three</c><00:48:13.980><c> seconds</c><00:48:14.310><c> and</c>

00:48:14.830 --> 00:48:14.840 align:start position:0%
it's done in less than three seconds and
 

00:48:14.840 --> 00:48:17.750 align:start position:0%
it's done in less than three seconds and
in<00:48:15.840><c> terms</c><00:48:16.050><c> of</c><00:48:16.080><c> memory</c><00:48:16.350><c> consumption</c><00:48:16.770><c> it</c><00:48:17.460><c> run</c>

00:48:17.750 --> 00:48:17.760 align:start position:0%
in terms of memory consumption it run
 

00:48:17.760 --> 00:48:22.040 align:start position:0%
in terms of memory consumption it run
with<00:48:17.970><c> less</c><00:48:18.240><c> than</c><00:48:18.770><c> 32</c><00:48:19.770><c> megabytes</c><00:48:20.280><c> of</c><00:48:20.730><c> RAM</c><00:48:21.210><c> so</c>

00:48:22.040 --> 00:48:22.050 align:start position:0%
with less than 32 megabytes of RAM so
 

00:48:22.050 --> 00:48:26.470 align:start position:0%
with less than 32 megabytes of RAM so
you<00:48:22.110><c> see</c><00:48:22.560><c> that</c><00:48:23.540><c> Kathleen</c><00:48:24.540><c> don't</c><00:48:25.440><c> consume</c><00:48:25.830><c> more</c>

00:48:26.470 --> 00:48:26.480 align:start position:0%
you see that Kathleen don't consume more
 

00:48:26.480 --> 00:48:30.350 align:start position:0%
you see that Kathleen don't consume more
memory<00:48:27.480><c> than</c><00:48:27.600><c> D'Angela</c><00:48:28.380><c> and</c><00:48:28.880><c> when</c><00:48:29.880><c> you</c><00:48:30.090><c> use</c>

00:48:30.350 --> 00:48:30.360 align:start position:0%
memory than D'Angela and when you use
 

00:48:30.360 --> 00:48:33.440 align:start position:0%
memory than D'Angela and when you use
some<00:48:31.110><c> dependencies</c><00:48:31.800><c> for</c><00:48:32.520><c> example</c><00:48:32.850><c> without</c>

00:48:33.440 --> 00:48:33.450 align:start position:0%
some dependencies for example without
 

00:48:33.450 --> 00:48:36.110 align:start position:0%
some dependencies for example without
idea<00:48:33.870><c> net</c><00:48:34.050><c> and</c><00:48:34.230><c> GPA</c><00:48:34.500><c> like</c><00:48:35.460><c> I</c><00:48:35.610><c> have</c><00:48:35.730><c> done</c><00:48:35.910><c> with</c>

00:48:36.110 --> 00:48:36.120 align:start position:0%
idea net and GPA like I have done with
 

00:48:36.120 --> 00:48:39.380 align:start position:0%
idea net and GPA like I have done with
expose<00:48:36.570><c> that</c><00:48:36.950><c> is</c><00:48:37.950><c> the</c><00:48:38.250><c> thin</c><00:48:38.520><c> layer</c><00:48:38.700><c> on</c><00:48:39.000><c> top</c><00:48:39.210><c> of</c>

00:48:39.380 --> 00:48:39.390 align:start position:0%
expose that is the thin layer on top of
 

00:48:39.390 --> 00:48:43.850 align:start position:0%
expose that is the thin layer on top of
gdb<00:48:39.720><c> see</c><00:48:40.460><c> you</c><00:48:41.460><c> can</c><00:48:41.700><c> run</c><00:48:42.650><c> perfectly</c><00:48:43.650><c> fine</c>

00:48:43.850 --> 00:48:43.860 align:start position:0%
gdb see you can run perfectly fine
 

00:48:43.860 --> 00:48:45.740 align:start position:0%
gdb see you can run perfectly fine
spring<00:48:44.220><c> boots</c><00:48:44.520><c> and</c><00:48:44.820><c> computing</c><00:48:45.180><c> application</c>

00:48:45.740 --> 00:48:45.750 align:start position:0%
spring boots and computing application
 

00:48:45.750 --> 00:48:49.970 align:start position:0%
spring boots and computing application
with<00:48:46.410><c> less</c><00:48:46.680><c> than</c><00:48:46.950><c> 30</c><00:48:47.580><c> 32</c><00:48:48.570><c> megabytes</c><00:48:48.900><c> of</c><00:48:49.170><c> RAM</c><00:48:49.440><c> so</c>

00:48:49.970 --> 00:48:49.980 align:start position:0%
with less than 30 32 megabytes of RAM so
 

00:48:49.980 --> 00:48:52.280 align:start position:0%
with less than 30 32 megabytes of RAM so
I<00:48:50.010><c> won't</c><00:48:50.490><c> use</c><00:48:50.790><c> that</c><00:48:50.820><c> in</c><00:48:51.210><c> production</c><00:48:51.360><c> but</c><00:48:51.870><c> I</c>

00:48:52.280 --> 00:48:52.290 align:start position:0%
I won't use that in production but I
 

00:48:52.290 --> 00:48:54.650 align:start position:0%
I won't use that in production but I
think<00:48:52.860><c> in</c><00:48:52.950><c> production</c><00:48:53.430><c> with</c><00:48:53.640><c> with</c><00:48:54.120><c> 64</c>

00:48:54.650 --> 00:48:54.660 align:start position:0%
think in production with with 64
 

00:48:54.660 --> 00:48:57.820 align:start position:0%
think in production with with 64
that--some<00:48:55.520><c> that's</c><00:48:56.520><c> perfectly</c><00:48:56.850><c> fine</c><00:48:57.060><c> and</c>

00:48:57.820 --> 00:48:57.830 align:start position:0%
that--some that's perfectly fine and
 

00:48:57.830 --> 00:49:00.350 align:start position:0%
that--some that's perfectly fine and
Catrin<00:48:58.830><c> has</c><00:48:58.950><c> been</c><00:48:59.160><c> designed</c><00:48:59.700><c> also</c><00:48:59.910><c> for</c><00:49:00.270><c> the</c>

00:49:00.350 --> 00:49:00.360 align:start position:0%
Catrin has been designed also for the
 

00:49:00.360 --> 00:49:02.090 align:start position:0%
Catrin has been designed also for the
mobile<00:49:00.660><c> world</c><00:49:00.870><c> where</c><00:49:01.230><c> whether</c><00:49:01.530><c> the</c>

00:49:02.090 --> 00:49:02.100 align:start position:0%
mobile world where whether the
 

00:49:02.100 --> 00:49:04.520 align:start position:0%
mobile world where whether the
constraints<00:49:02.580><c> are</c><00:49:02.730><c> quite</c><00:49:03.360><c> where</c><00:49:03.930><c> the</c><00:49:04.110><c> rules</c>

00:49:04.520 --> 00:49:04.530 align:start position:0%
constraints are quite where the rules
 

00:49:04.530 --> 00:49:06.680 align:start position:0%
constraints are quite where the rules
are<00:49:04.740><c> quite</c><00:49:04.950><c> imitated</c><00:49:05.520><c> so</c><00:49:05.700><c> that's</c><00:49:05.910><c> also</c><00:49:06.090><c> a</c><00:49:06.210><c> good</c>

00:49:06.680 --> 00:49:06.690 align:start position:0%
are quite imitated so that's also a good
 

00:49:06.690 --> 00:49:12.230 align:start position:0%
are quite imitated so that's also a good
fit<00:49:06.900><c> for</c><00:49:06.930><c> for</c><00:49:07.710><c> cloud</c><00:49:07.920><c> application</c><00:49:10.640><c> so</c><00:49:11.640><c> we</c><00:49:12.120><c> have</c>

00:49:12.230 --> 00:49:12.240 align:start position:0%
fit for for cloud application so we have
 

00:49:12.240 --> 00:49:14.210 align:start position:0%
fit for for cloud application so we have
talked<00:49:12.450><c> a</c><00:49:12.480><c> lot</c><00:49:12.690><c> about</c><00:49:12.900><c> Kathleen</c><00:49:13.860><c> for</c>

00:49:14.210 --> 00:49:14.220 align:start position:0%
talked a lot about Kathleen for
 

00:49:14.220 --> 00:49:16.670 align:start position:0%
talked a lot about Kathleen for
server-side<00:49:14.520><c> developments</c><00:49:15.300><c> I</c><00:49:15.510><c> have</c><00:49:16.200><c> said</c><00:49:16.500><c> I</c>

00:49:16.670 --> 00:49:16.680 align:start position:0%
server-side developments I have said I
 

00:49:16.680 --> 00:49:18.860 align:start position:0%
server-side developments I have said I
have<00:49:16.740><c> not</c><00:49:16.980><c> deterred</c><00:49:17.340><c> that</c><00:49:17.550><c> but</c><00:49:17.730><c> cooking</c><00:49:18.150><c> is</c><00:49:18.360><c> I</c>

00:49:18.860 --> 00:49:18.870 align:start position:0%
have not deterred that but cooking is I
 

00:49:18.870 --> 00:49:21.470 align:start position:0%
have not deterred that but cooking is I
think<00:49:19.440><c> the</c><00:49:20.160><c> first</c><00:49:20.190><c> choice</c><00:49:20.670><c> or</c><00:49:20.850><c> so</c><00:49:21.030><c> for</c><00:49:21.240><c> Android</c>

00:49:21.470 --> 00:49:21.480 align:start position:0%
think the first choice or so for Android
 

00:49:21.480 --> 00:49:25.850 align:start position:0%
think the first choice or so for Android
development<00:49:22.160><c> but</c><00:49:24.080><c> it</c><00:49:25.080><c> could</c><00:49:25.320><c> also</c><00:49:25.440><c> be</c><00:49:25.560><c> used</c>

00:49:25.850 --> 00:49:25.860 align:start position:0%
development but it could also be used
 

00:49:25.860 --> 00:49:31.910 align:start position:0%
development but it could also be used
for<00:49:25.980><c> client-side</c><00:49:26.460><c> developments</c><00:49:28.610><c> so</c><00:49:30.800><c> there</c><00:49:31.800><c> is</c>

00:49:31.910 --> 00:49:31.920 align:start position:0%
for client-side developments so there is
 

00:49:31.920 --> 00:49:35.300 align:start position:0%
for client-side developments so there is
a<00:49:31.950><c> transpiler</c><00:49:32.640><c> called</c><00:49:33.420><c> cutting</c><00:49:34.200><c> to</c><00:49:34.500><c> GS</c><00:49:34.770><c> that</c><00:49:35.040><c> a</c>

00:49:35.300 --> 00:49:35.310 align:start position:0%
a transpiler called cutting to GS that a
 

00:49:35.310 --> 00:49:38.330 align:start position:0%
a transpiler called cutting to GS that a
row<00:49:35.460><c> to</c><00:49:35.940><c> compile</c><00:49:36.540><c> code</c><00:49:37.200><c> clean</c><00:49:37.440><c> source</c><00:49:37.950><c> code</c><00:49:38.160><c> to</c>

00:49:38.330 --> 00:49:38.340 align:start position:0%
row to compile code clean source code to
 

00:49:38.340 --> 00:49:41.510 align:start position:0%
row to compile code clean source code to
JavaScript<00:49:38.970><c> source</c><00:49:39.450><c> code</c><00:49:39.690><c> I</c><00:49:39.900><c> think</c><00:49:40.860><c> every</c>

00:49:41.510 --> 00:49:41.520 align:start position:0%
JavaScript source code I think every
 

00:49:41.520 --> 00:49:44.450 align:start position:0%
JavaScript source code I think every
every<00:49:41.760><c> language</c><00:49:42.240><c> to</c><00:49:42.510><c> that</c><00:49:42.680><c> so</c><00:49:43.680><c> differences</c><00:49:44.250><c> in</c>

00:49:44.450 --> 00:49:44.460 align:start position:0%
every language to that so differences in
 

00:49:44.460 --> 00:49:47.210 align:start position:0%
every language to that so differences in
terms<00:49:44.670><c> of</c><00:49:44.790><c> maturity</c><00:49:45.180><c> and</c><00:49:45.630><c> if</c><00:49:46.110><c> it's</c><00:49:46.560><c> usable</c><00:49:47.040><c> in</c>

00:49:47.210 --> 00:49:47.220 align:start position:0%
terms of maturity and if it's usable in
 

00:49:47.220 --> 00:49:49.010 align:start position:0%
terms of maturity and if it's usable in
the<00:49:47.730><c> real</c><00:49:48.000><c> life</c>

00:49:49.010 --> 00:49:49.020 align:start position:0%
the real life
 

00:49:49.020 --> 00:49:54.770 align:start position:0%
the real life
so<00:49:49.890><c> that's</c><00:49:50.370><c> currently</c><00:49:51.650><c> not</c><00:49:52.650><c> released</c>

00:49:54.770 --> 00:49:54.780 align:start position:0%
so that's currently not released
 

00:49:54.780 --> 00:49:58.220 align:start position:0%
so that's currently not released
in<00:49:54.930><c> a</c><00:49:55.410><c> spot</c><00:49:56.100><c> as</c><00:49:56.520><c> cooking</c><00:49:57.000><c> one</c><00:49:57.210><c> dot</c><00:49:57.420><c> Oh</c><00:49:57.660><c> I</c><00:49:57.930><c> mean</c>

00:49:58.220 --> 00:49:58.230 align:start position:0%
in a spot as cooking one dot Oh I mean
 

00:49:58.230 --> 00:50:00.200 align:start position:0%
in a spot as cooking one dot Oh I mean
it's<00:49:58.440><c> available</c><00:49:58.680><c> but</c><00:49:59.160><c> that's</c><00:49:59.430><c> not</c><00:49:59.700><c> tagged</c><00:50:00.000><c> as</c>

00:50:00.200 --> 00:50:00.210 align:start position:0%
it's available but that's not tagged as
 

00:50:00.210 --> 00:50:02.810 align:start position:0%
it's available but that's not tagged as
a<00:50:00.240><c> projection</c><00:50:00.840><c> ready</c><00:50:01.170><c> that</c><00:50:01.890><c> that's</c><00:50:02.340><c> a</c><00:50:02.610><c> target</c>

00:50:02.810 --> 00:50:02.820 align:start position:0%
a projection ready that that's a target
 

00:50:02.820 --> 00:50:05.180 align:start position:0%
a projection ready that that's a target
for<00:50:03.150><c> cutting</c><00:50:03.540><c> one</c><00:50:03.720><c> that</c><00:50:03.900><c> one</c><00:50:04.110><c> but</c><00:50:04.830><c> there</c><00:50:05.070><c> is</c>

00:50:05.180 --> 00:50:05.190 align:start position:0%
for cutting one that one but there is
 

00:50:05.190 --> 00:50:10.070 align:start position:0%
for cutting one that one but there is
already<00:50:05.520><c> produce</c><00:50:06.210><c> usable</c><00:50:07.250><c> and</c><00:50:08.480><c> so</c><00:50:09.480><c> that</c><00:50:09.930><c> we</c>

00:50:10.070 --> 00:50:10.080 align:start position:0%
already produce usable and so that we
 

00:50:10.080 --> 00:50:12.620 align:start position:0%
already produce usable and so that we
generate<00:50:10.500><c> some</c><00:50:10.530><c> in</c><00:50:10.950><c> JavaScript</c><00:50:11.430><c> with</c><00:50:12.360><c> the</c>

00:50:12.620 --> 00:50:12.630 align:start position:0%
generate some in JavaScript with the
 

00:50:12.630 --> 00:50:15.200 align:start position:0%
generate some in JavaScript with the
libraries<00:50:13.050><c> that</c><00:50:13.260><c> you</c><00:50:13.380><c> are</c><00:50:13.500><c> using</c><00:50:13.820><c> some</c><00:50:14.820><c> parts</c>

00:50:15.200 --> 00:50:15.210 align:start position:0%
libraries that you are using some parts
 

00:50:15.210 --> 00:50:17.060 align:start position:0%
libraries that you are using some parts
of<00:50:15.300><c> the</c><00:50:15.540><c> code</c><00:50:15.750><c> clean</c><00:50:15.960><c> standard</c><00:50:16.650><c> library</c><00:50:17.040><c> and</c>

00:50:17.060 --> 00:50:17.070 align:start position:0%
of the code clean standard library and
 

00:50:17.070 --> 00:50:23.690 align:start position:0%
of the code clean standard library and
and<00:50:17.580><c> your</c><00:50:17.820><c> application</c><00:50:20.360><c> so</c><00:50:21.740><c> as</c><00:50:22.740><c> I</c><00:50:22.950><c> said</c><00:50:23.280><c> Kalina</c>

00:50:23.690 --> 00:50:23.700 align:start position:0%
and your application so as I said Kalina
 

00:50:23.700 --> 00:50:25.940 align:start position:0%
and your application so as I said Kalina
statically<00:50:24.180><c> type</c><00:50:24.450><c> so</c><00:50:24.870><c> you</c><00:50:25.470><c> will</c><00:50:25.680><c> have</c><00:50:25.800><c> to</c>

00:50:25.940 --> 00:50:25.950 align:start position:0%
statically type so you will have to
 

00:50:25.950 --> 00:50:28.100 align:start position:0%
statically type so you will have to
write<00:50:26.190><c> some</c><00:50:26.610><c> or</c><00:50:26.880><c> you</c><00:50:26.940><c> will</c><00:50:27.390><c> have</c><00:50:27.480><c> to</c><00:50:27.600><c> use</c><00:50:27.630><c> some</c>

00:50:28.100 --> 00:50:28.110 align:start position:0%
write some or you will have to use some
 

00:50:28.110 --> 00:50:31.040 align:start position:0%
write some or you will have to use some
existing<00:50:28.850><c> definition</c><00:50:29.850><c> a</c><00:50:30.420><c> little</c><00:50:30.450><c> bit</c><00:50:30.750><c> like</c><00:50:30.900><c> in</c>

00:50:31.040 --> 00:50:31.050 align:start position:0%
existing definition a little bit like in
 

00:50:31.050 --> 00:50:34.940 align:start position:0%
existing definition a little bit like in
typescript<00:50:31.670><c> that</c><00:50:32.670><c> allow</c><00:50:33.000><c> you</c><00:50:33.210><c> to</c><00:50:33.710><c> to</c><00:50:34.710><c> use</c><00:50:34.920><c> a</c>

00:50:34.940 --> 00:50:34.950 align:start position:0%
typescript that allow you to to use a
 

00:50:34.950 --> 00:50:37.910 align:start position:0%
typescript that allow you to to use a
JavaScript<00:50:35.840><c> libraries</c><00:50:36.840><c> so</c><00:50:37.110><c> in</c><00:50:37.230><c> that</c><00:50:37.380><c> case</c><00:50:37.650><c> I'm</c>

00:50:37.910 --> 00:50:37.920 align:start position:0%
JavaScript libraries so in that case I'm
 

00:50:37.920 --> 00:50:41.900 align:start position:0%
JavaScript libraries so in that case I'm
defining<00:50:38.400><c> some</c><00:50:38.840><c> quick</c><00:50:40.250><c> quick</c><00:50:41.250><c> declaration</c>

00:50:41.900 --> 00:50:41.910 align:start position:0%
defining some quick quick declaration
 

00:50:41.910 --> 00:50:47.660 align:start position:0%
defining some quick quick declaration
for<00:50:42.180><c> jQuery</c><00:50:45.500><c> the</c><00:50:46.500><c> Catalan</c><00:50:46.860><c> guys</c><00:50:47.040><c> are</c><00:50:47.280><c> walking</c>

00:50:47.660 --> 00:50:47.670 align:start position:0%
for jQuery the Catalan guys are walking
 

00:50:47.670 --> 00:50:49.970 align:start position:0%
for jQuery the Catalan guys are walking
and<00:50:47.820><c> some</c><00:50:48.270><c> converters</c><00:50:48.810><c> that</c><00:50:49.140><c> allow</c><00:50:49.620><c> to</c>

00:50:49.970 --> 00:50:49.980 align:start position:0%
and some converters that allow to
 

00:50:49.980 --> 00:50:52.730 align:start position:0%
and some converters that allow to
convert<00:50:50.310><c> typescript</c><00:50:50.850><c> definition</c><00:50:51.390><c> to</c><00:50:52.320><c> contain</c>

00:50:52.730 --> 00:50:52.740 align:start position:0%
convert typescript definition to contain
 

00:50:52.740 --> 00:50:55.760 align:start position:0%
convert typescript definition to contain
definition<00:50:53.630><c> automatically</c><00:50:54.630><c> that</c><00:50:55.050><c> will</c><00:50:55.260><c> allow</c>

00:50:55.760 --> 00:50:55.770 align:start position:0%
definition automatically that will allow
 

00:50:55.770 --> 00:50:58.970 align:start position:0%
definition automatically that will allow
you<00:50:55.920><c> to</c><00:50:55.950><c> reuse</c><00:50:56.250><c> a</c><00:50:56.460><c> huge</c><00:50:56.850><c> number</c><00:50:57.060><c> of</c><00:50:57.980><c> API</c>

00:50:58.970 --> 00:50:58.980 align:start position:0%
you to reuse a huge number of API
 

00:50:58.980 --> 00:51:00.560 align:start position:0%
you to reuse a huge number of API
definition<00:50:59.250><c> coming</c><00:50:59.910><c> from</c><00:51:00.030><c> the</c><00:51:00.210><c> typescript</c>

00:51:00.560 --> 00:51:00.570 align:start position:0%
definition coming from the typescript
 

00:51:00.570 --> 00:51:04.550 align:start position:0%
definition coming from the typescript
world<00:51:02.360><c> and</c><00:51:03.360><c> that'll</c><00:51:04.110><c> you</c><00:51:04.290><c> to</c><00:51:04.440><c> have</c>

00:51:04.550 --> 00:51:04.560 align:start position:0%
world and that'll you to have
 

00:51:04.560 --> 00:51:07.640 align:start position:0%
world and that'll you to have
autocomplete<00:51:05.490><c> compile</c><00:51:06.300><c> time</c><00:51:06.480><c> check</c><00:51:06.780><c> sharing</c>

00:51:07.640 --> 00:51:07.650 align:start position:0%
autocomplete compile time check sharing
 

00:51:07.650 --> 00:51:09.110 align:start position:0%
autocomplete compile time check sharing
code<00:51:07.890><c> between</c><00:51:08.250><c> client</c><00:51:08.550><c> side</c><00:51:08.700><c> and</c><00:51:08.820><c> server</c><00:51:08.910><c> side</c>

00:51:09.110 --> 00:51:09.120 align:start position:0%
code between client side and server side
 

00:51:09.120 --> 00:51:12.100 align:start position:0%
code between client side and server side
and<00:51:09.720><c> also</c><00:51:10.470><c> Susan</c><00:51:10.950><c> opera</c><00:51:11.220><c> you</c><00:51:11.430><c> to</c><00:51:11.640><c> have</c>

00:51:12.100 --> 00:51:12.110 align:start position:0%
and also Susan opera you to have
 

00:51:12.110 --> 00:51:15.640 align:start position:0%
and also Susan opera you to have
matching<00:51:13.110><c> between</c><00:51:13.290><c> both</c><00:51:13.710><c> the</c><00:51:14.550><c> source</c><00:51:14.880><c> code</c>

00:51:15.640 --> 00:51:15.650 align:start position:0%
matching between both the source code
 

00:51:15.650 --> 00:51:22.610 align:start position:0%
matching between both the source code
boxes<00:51:16.650><c> basis</c><00:51:20.090><c> so</c><00:51:21.090><c> that's</c><00:51:21.630><c> expected</c><00:51:22.050><c> to</c><00:51:22.290><c> be</c>

00:51:22.610 --> 00:51:22.620 align:start position:0%
boxes basis so that's expected to be
 

00:51:22.620 --> 00:51:25.610 align:start position:0%
boxes basis so that's expected to be
released<00:51:22.950><c> really</c><00:51:23.550><c> for</c><00:51:23.820><c> wide</c><00:51:24.780><c> usage</c><00:51:25.050><c> in</c>

00:51:25.610 --> 00:51:25.620 align:start position:0%
released really for wide usage in
 

00:51:25.620 --> 00:51:29.210 align:start position:0%
released really for wide usage in
thirteen<00:51:26.190><c> 1.1</c><00:51:26.840><c> with</c><00:51:27.840><c> module</c><00:51:28.500><c> JavaScript</c>

00:51:29.210 --> 00:51:29.220 align:start position:0%
thirteen 1.1 with module JavaScript
 

00:51:29.220 --> 00:51:30.650 align:start position:0%
thirteen 1.1 with module JavaScript
module<00:51:29.310><c> support</c><00:51:29.850><c> better</c><00:51:30.060><c> documentation</c>

00:51:30.650 --> 00:51:30.660 align:start position:0%
module support better documentation
 

00:51:30.660 --> 00:51:33.710 align:start position:0%
module support better documentation
between<00:51:31.260><c> IDE</c><00:51:31.800><c> integration</c><00:51:32.430><c> and</c><00:51:32.640><c> some</c><00:51:33.060><c> Xmas</c>

00:51:33.710 --> 00:51:33.720 align:start position:0%
between IDE integration and some Xmas
 

00:51:33.720 --> 00:51:39.370 align:start position:0%
between IDE integration and some Xmas
scripts<00:51:34.020><c> e6</c><00:51:34.710><c> report</c><00:51:36.740><c> that</c><00:51:37.740><c> works</c><00:51:38.040><c> pretty</c><00:51:38.250><c> well</c>

00:51:39.370 --> 00:51:39.380 align:start position:0%
scripts e6 report that works pretty well
 

00:51:39.380 --> 00:51:43.540 align:start position:0%
scripts e6 report that works pretty well
that<00:51:40.380><c> generates</c><00:51:41.360><c> big</c><00:51:42.360><c> javascript</c><00:51:42.930><c> files</c><00:51:43.170><c> so</c>

00:51:43.540 --> 00:51:43.550 align:start position:0%
that generates big javascript files so
 

00:51:43.550 --> 00:51:48.080 align:start position:0%
that generates big javascript files so
that's<00:51:44.550><c> not</c><00:51:44.760><c> perfect</c><00:51:45.030><c> and</c><00:51:45.450><c> that</c><00:51:45.870><c> still</c><00:51:47.090><c> can</c>

00:51:48.080 --> 00:51:48.090 align:start position:0%
that's not perfect and that still can
 

00:51:48.090 --> 00:51:50.180 align:start position:0%
that's not perfect and that still can
progress<00:51:48.330><c> in</c><00:51:48.810><c> term</c><00:51:49.050><c> of</c><00:51:49.080><c> the</c><00:51:49.710><c> size</c><00:51:49.740><c> of</c>

00:51:50.180 --> 00:51:50.190 align:start position:0%
progress in term of the size of
 

00:51:50.190 --> 00:51:55.820 align:start position:0%
progress in term of the size of
javascript<00:51:50.790><c> generated</c><00:51:51.300><c> and</c><00:51:53.720><c> but</c><00:51:54.720><c> that</c><00:51:55.110><c> that</c>

00:51:55.820 --> 00:51:55.830 align:start position:0%
javascript generated and but that that
 

00:51:55.830 --> 00:51:58.370 align:start position:0%
javascript generated and but that that
definitely<00:51:56.580><c> doable</c><00:51:56.820><c> to</c><00:51:57.090><c> write</c><00:51:57.380><c> an</c>

00:51:58.370 --> 00:51:58.380 align:start position:0%
definitely doable to write an
 

00:51:58.380 --> 00:52:00.050 align:start position:0%
definitely doable to write an
application<00:51:58.980><c> with</c><00:51:59.220><c> coupling</c><00:51:59.580><c> for</c><00:51:59.820><c> both</c>

00:52:00.050 --> 00:52:00.060 align:start position:0%
application with coupling for both
 

00:52:00.060 --> 00:52:03.170 align:start position:0%
application with coupling for both
client<00:52:00.600><c> side</c><00:52:00.810><c> and</c><00:52:00.990><c> server</c><00:52:01.080><c> side</c><00:52:01.430><c> but</c><00:52:02.430><c> for</c>

00:52:03.170 --> 00:52:03.180 align:start position:0%
client side and server side but for
 

00:52:03.180 --> 00:52:05.570 align:start position:0%
client side and server side but for
really<00:52:03.570><c> for</c><00:52:03.870><c> the</c><00:52:03.960><c> long</c><00:52:04.110><c> term</c><00:52:04.290><c> I'm</c><00:52:04.680><c> much</c><00:52:05.400><c> more</c>

00:52:05.570 --> 00:52:05.580 align:start position:0%
really for the long term I'm much more
 

00:52:05.580 --> 00:52:06.700 align:start position:0%
really for the long term I'm much more
interested<00:52:05.700><c> in</c>

00:52:06.700 --> 00:52:06.710 align:start position:0%
interested in
 

00:52:06.710 --> 00:52:10.150 align:start position:0%
interested in
saying<00:52:07.660><c> how</c><00:52:08.660><c> many</c><00:52:08.900><c> of</c><00:52:09.050><c> you</c><00:52:09.260><c> have</c><00:52:09.589><c> heard</c><00:52:09.800><c> about</c>

00:52:10.150 --> 00:52:10.160 align:start position:0%
saying how many of you have heard about
 

00:52:10.160 --> 00:52:14.589 align:start position:0%
saying how many of you have heard about
webassembly<00:52:11.830><c> yeah</c><00:52:12.830><c> so</c><00:52:13.550><c> whether</c><00:52:13.910><c> some</c><00:52:14.150><c> lie</c><00:52:14.330><c> is</c>

00:52:14.589 --> 00:52:14.599 align:start position:0%
webassembly yeah so whether some lie is
 

00:52:14.599 --> 00:52:17.410 align:start position:0%
webassembly yeah so whether some lie is
a<00:52:14.630><c> really</c><00:52:15.260><c> new</c><00:52:15.440><c> technology</c><00:52:15.950><c> so</c><00:52:16.190><c> that's</c><00:52:16.420><c> not</c>

00:52:17.410 --> 00:52:17.420 align:start position:0%
a really new technology so that's not
 

00:52:17.420 --> 00:52:19.210 align:start position:0%
a really new technology so that's not
surprising<00:52:17.930><c> that</c><00:52:17.960><c> not</c><00:52:18.290><c> everybody</c><00:52:18.710><c> I've</c><00:52:18.920><c> heard</c>

00:52:19.210 --> 00:52:19.220 align:start position:0%
surprising that not everybody I've heard
 

00:52:19.220 --> 00:52:21.490 align:start position:0%
surprising that not everybody I've heard
about<00:52:19.310><c> that</c><00:52:19.460><c> well</c><00:52:20.420><c> as</c><00:52:20.540><c> some</c><00:52:20.690><c> lies</c><00:52:20.869><c> basically</c>

00:52:21.490 --> 00:52:21.500 align:start position:0%
about that well as some lies basically
 

00:52:21.500 --> 00:52:24.579 align:start position:0%
about that well as some lies basically
the<00:52:22.240><c> technology</c><00:52:23.240><c> for</c><00:52:23.660><c> the</c><00:52:23.750><c> web</c><00:52:23.930><c> by</c><00:52:24.080><c> code</c><00:52:24.349><c> I</c>

00:52:24.579 --> 00:52:24.589 align:start position:0%
the technology for the web by code I
 

00:52:24.589 --> 00:52:27.790 align:start position:0%
the technology for the web by code I
mean<00:52:25.280><c> until</c><00:52:25.670><c> now</c><00:52:25.910><c> we</c><00:52:26.750><c> have</c><00:52:26.900><c> used</c><00:52:27.140><c> JavaScript</c>

00:52:27.790 --> 00:52:27.800 align:start position:0%
mean until now we have used JavaScript
 

00:52:27.800 --> 00:52:29.829 align:start position:0%
mean until now we have used JavaScript
as<00:52:28.010><c> the</c><00:52:28.430><c> web</c><00:52:28.580><c> by</c><00:52:28.730><c> code</c><00:52:28.970><c> basically</c><00:52:29.300><c> every</c>

00:52:29.829 --> 00:52:29.839 align:start position:0%
as the web by code basically every
 

00:52:29.839 --> 00:52:32.099 align:start position:0%
as the web by code basically every
everybody<00:52:30.260><c> is</c><00:52:30.560><c> transferring</c><00:52:31.099><c> to</c><00:52:31.190><c> JavaScript</c>

00:52:32.099 --> 00:52:32.109 align:start position:0%
everybody is transferring to JavaScript
 

00:52:32.109 --> 00:52:35.890 align:start position:0%
everybody is transferring to JavaScript
I<00:52:33.700><c> think</c><00:52:34.700><c> the</c><00:52:34.880><c> approach</c><00:52:35.180><c> of</c><00:52:35.210><c> transferring</c><00:52:35.720><c> to</c>

00:52:35.890 --> 00:52:35.900 align:start position:0%
I think the approach of transferring to
 

00:52:35.900 --> 00:52:38.620 align:start position:0%
I think the approach of transferring to
JavaScript<00:52:36.400><c> on</c><00:52:37.400><c> the</c><00:52:37.609><c> long-term</c><00:52:37.970><c> is</c><00:52:38.240><c> perfectly</c>

00:52:38.620 --> 00:52:38.630 align:start position:0%
JavaScript on the long-term is perfectly
 

00:52:38.630 --> 00:52:41.320 align:start position:0%
JavaScript on the long-term is perfectly
fine<00:52:38.869><c> for</c><00:52:38.930><c> languages</c><00:52:39.830><c> that</c><00:52:40.040><c> are</c><00:52:40.300><c> superset</c><00:52:41.300><c> of</c>

00:52:41.320 --> 00:52:41.330 align:start position:0%
fine for languages that are superset of
 

00:52:41.330 --> 00:52:43.180 align:start position:0%
fine for languages that are superset of
JavaScript<00:52:41.450><c> I</c><00:52:42.080><c> mean</c><00:52:42.290><c> for</c><00:52:42.560><c> typescript</c><00:52:42.980><c> that's</c>

00:52:43.180 --> 00:52:43.190 align:start position:0%
JavaScript I mean for typescript that's
 

00:52:43.190 --> 00:52:45.640 align:start position:0%
JavaScript I mean for typescript that's
perfectly<00:52:43.640><c> fine</c><00:52:43.910><c> for</c><00:52:44.470><c> CoffeeScript</c><00:52:45.470><c> that's</c>

00:52:45.640 --> 00:52:45.650 align:start position:0%
perfectly fine for CoffeeScript that's
 

00:52:45.650 --> 00:52:47.620 align:start position:0%
perfectly fine for CoffeeScript that's
perfectly<00:52:45.980><c> fine</c><00:52:46.250><c> transpiring</c><00:52:46.970><c> some</c><00:52:47.330><c> X</c><00:52:47.480><c> my</c>

00:52:47.620 --> 00:52:47.630 align:start position:0%
perfectly fine transpiring some X my
 

00:52:47.630 --> 00:52:51.970 align:start position:0%
perfectly fine transpiring some X my
script<00:52:47.900><c> six</c><00:52:48.290><c> or</c><00:52:48.560><c> seven</c><00:52:49.250><c> to</c><00:52:50.680><c> previous</c><00:52:51.680><c> version</c>

00:52:51.970 --> 00:52:51.980 align:start position:0%
script six or seven to previous version
 

00:52:51.980 --> 00:52:53.950 align:start position:0%
script six or seven to previous version
of<00:52:52.040><c> JavaScript</c><00:52:52.580><c> is</c><00:52:52.760><c> also</c><00:52:53.119><c> perfectly</c><00:52:53.480><c> fine</c><00:52:53.690><c> and</c>

00:52:53.950 --> 00:52:53.960 align:start position:0%
of JavaScript is also perfectly fine and
 

00:52:53.960 --> 00:52:58.120 align:start position:0%
of JavaScript is also perfectly fine and
that<00:52:53.990><c> will</c><00:52:54.290><c> stay</c><00:52:54.560><c> that</c><00:52:56.380><c> ultimately</c><00:52:57.380><c> compiling</c>

00:52:58.120 --> 00:52:58.130 align:start position:0%
that will stay that ultimately compiling
 

00:52:58.130 --> 00:53:01.050 align:start position:0%
that will stay that ultimately compiling
some<00:52:58.609><c> JavaScript</c><00:52:59.450><c> with</c><00:52:59.690><c> very</c><00:52:59.990><c> different</c>

00:53:01.050 --> 00:53:01.060 align:start position:0%
some JavaScript with very different
 

00:53:01.060 --> 00:53:03.880 align:start position:0%
some JavaScript with very different
compiling<00:53:02.060><c> some</c><00:53:02.330><c> some</c><00:53:02.810><c> languages</c><00:53:03.290><c> with</c><00:53:03.619><c> very</c>

00:53:03.880 --> 00:53:03.890 align:start position:0%
compiling some some languages with very
 

00:53:03.890 --> 00:53:05.950 align:start position:0%
compiling some some languages with very
different<00:53:04.150><c> semantics</c><00:53:05.150><c> than</c><00:53:05.330><c> JavaScript</c><00:53:05.599><c> to</c>

00:53:05.950 --> 00:53:05.960 align:start position:0%
different semantics than JavaScript to
 

00:53:05.960 --> 00:53:10.450 align:start position:0%
different semantics than JavaScript to
javascript<00:53:06.380><c> is</c><00:53:06.530><c> a</c><00:53:06.560><c> hack</c><00:53:06.800><c> and</c><00:53:08.440><c> yeah</c><00:53:09.440><c> you</c><00:53:10.310><c> have</c>

00:53:10.450 --> 00:53:10.460 align:start position:0%
javascript is a hack and yeah you have
 

00:53:10.460 --> 00:53:13.540 align:start position:0%
javascript is a hack and yeah you have
some<00:53:10.490><c> issues</c><00:53:11.030><c> like</c><00:53:11.770><c> for</c><00:53:12.770><c> example</c><00:53:12.830><c> the</c><00:53:13.220><c> numeric</c>

00:53:13.540 --> 00:53:13.550 align:start position:0%
some issues like for example the numeric
 

00:53:13.550 --> 00:53:15.400 align:start position:0%
some issues like for example the numeric
types<00:53:13.760><c> are</c><00:53:13.970><c> not</c><00:53:14.119><c> the</c><00:53:14.240><c> same</c><00:53:14.450><c> so</c><00:53:14.780><c> even</c><00:53:15.140><c> if</c><00:53:15.290><c> you</c>

00:53:15.400 --> 00:53:15.410 align:start position:0%
types are not the same so even if you
 

00:53:15.410 --> 00:53:18.130 align:start position:0%
types are not the same so even if you
can<00:53:15.680><c> come</c><00:53:16.670><c> close</c><00:53:17.000><c> to</c><00:53:17.359><c> something</c><00:53:17.630><c> that</c><00:53:17.780><c> works</c>

00:53:18.130 --> 00:53:18.140 align:start position:0%
can come close to something that works
 

00:53:18.140 --> 00:53:21.160 align:start position:0%
can come close to something that works
you<00:53:18.890><c> have</c><00:53:19.040><c> some</c><00:53:19.310><c> small</c><00:53:20.119><c> differences</c><00:53:20.660><c> you</c><00:53:21.020><c> have</c>

00:53:21.160 --> 00:53:21.170 align:start position:0%
you have some small differences you have
 

00:53:21.170 --> 00:53:23.380 align:start position:0%
you have some small differences you have
some<00:53:21.320><c> performance</c><00:53:21.800><c> issue</c><00:53:21.980><c> and</c><00:53:22.339><c> that's</c><00:53:23.150><c> not</c>

00:53:23.380 --> 00:53:23.390 align:start position:0%
some performance issue and that's not
 

00:53:23.390 --> 00:53:30.040 align:start position:0%
some performance issue and that's not
very<00:53:23.510><c> native</c><00:53:23.990><c> so</c><00:53:26.800><c> the</c><00:53:27.800><c> Biggers</c><00:53:28.369><c> before</c><00:53:29.060><c> so</c>

00:53:30.040 --> 00:53:30.050 align:start position:0%
very native so the Biggers before so
 

00:53:30.050 --> 00:53:33.460 align:start position:0%
very native so the Biggers before so
Google<00:53:30.500><c> Apple</c><00:53:30.950><c> Microsoft</c><00:53:31.150><c> Mozilla</c><00:53:32.150><c> has</c><00:53:32.470><c> has</c>

00:53:33.460 --> 00:53:33.470 align:start position:0%
Google Apple Microsoft Mozilla has has
 

00:53:33.470 --> 00:53:37.120 align:start position:0%
Google Apple Microsoft Mozilla has has
worked<00:53:33.920><c> for</c><00:53:34.280><c> some</c><00:53:35.119><c> years</c><00:53:35.390><c> now</c><00:53:35.540><c> about</c><00:53:36.200><c> how</c><00:53:37.070><c> to</c>

00:53:37.120 --> 00:53:37.130 align:start position:0%
worked for some years now about how to
 

00:53:37.130 --> 00:53:39.760 align:start position:0%
worked for some years now about how to
improve<00:53:37.430><c> the</c><00:53:37.760><c> level</c><00:53:37.970><c> of</c><00:53:38.000><c> performance</c><00:53:38.660><c> in</c><00:53:39.560><c> the</c>

00:53:39.760 --> 00:53:39.770 align:start position:0%
improve the level of performance in the
 

00:53:39.770 --> 00:53:43.060 align:start position:0%
improve the level of performance in the
browser<00:53:39.980><c> so</c><00:53:40.160><c> you</c><00:53:40.849><c> may</c><00:53:41.420><c> have</c><00:53:41.599><c> heard</c><00:53:41.839><c> about</c><00:53:42.070><c> SMGs</c>

00:53:43.060 --> 00:53:43.070 align:start position:0%
browser so you may have heard about SMGs
 

00:53:43.070 --> 00:53:46.420 align:start position:0%
browser so you may have heard about SMGs
which<00:53:43.910><c> is</c><00:53:44.119><c> a</c><00:53:44.680><c> small</c><00:53:45.680><c> subset</c><00:53:46.099><c> of</c><00:53:46.130><c> JavaScript</c>

00:53:46.420 --> 00:53:46.430 align:start position:0%
which is a small subset of JavaScript
 

00:53:46.430 --> 00:53:51.339 align:start position:0%
which is a small subset of JavaScript
that<00:53:47.440><c> allowed</c><00:53:48.440><c> to</c><00:53:48.770><c> basically</c><00:53:49.760><c> compile</c><00:53:50.720><c> C</c><00:53:51.080><c> C++</c>

00:53:51.339 --> 00:53:51.349 align:start position:0%
that allowed to basically compile C C++
 

00:53:51.349 --> 00:53:53.980 align:start position:0%
that allowed to basically compile C C++
program<00:53:52.070><c> to</c><00:53:52.310><c> this</c><00:53:52.820><c> subset</c><00:53:53.240><c> of</c><00:53:53.270><c> JavaScript</c><00:53:53.510><c> and</c>

00:53:53.980 --> 00:53:53.990 align:start position:0%
program to this subset of JavaScript and
 

00:53:53.990 --> 00:53:58.089 align:start position:0%
program to this subset of JavaScript and
run<00:53:54.349><c> very</c><00:53:54.650><c> very</c><00:53:54.980><c> very</c><00:53:55.220><c> fast</c><00:53:55.609><c> so</c><00:53:56.710><c> in</c><00:53:57.710><c> that</c><00:53:57.859><c> case</c>

00:53:58.089 --> 00:53:58.099 align:start position:0%
run very very very fast so in that case
 

00:53:58.099 --> 00:54:00.130 align:start position:0%
run very very very fast so in that case
they<00:53:58.369><c> are</c><00:53:58.460><c> using</c><00:53:58.880><c> this</c><00:53:59.510><c> subset</c><00:53:59.869><c> of</c><00:53:59.900><c> JavaScript</c>

00:54:00.130 --> 00:54:00.140 align:start position:0%
they are using this subset of JavaScript
 

00:54:00.140 --> 00:54:03.550 align:start position:0%
they are using this subset of JavaScript
as<00:54:00.680><c> a</c><00:54:00.980><c> way</c><00:54:01.400><c> to</c><00:54:01.460><c> describe</c><00:54:02.359><c> the</c><00:54:02.660><c> assembly</c><00:54:03.349><c> code</c>

00:54:03.550 --> 00:54:03.560 align:start position:0%
as a way to describe the assembly code
 

00:54:03.560 --> 00:54:08.290 align:start position:0%
as a way to describe the assembly code
of<00:54:03.740><c> the</c><00:54:03.859><c> program</c><00:54:06.339><c> there</c><00:54:07.339><c> is</c><00:54:07.369><c> Native</c><00:54:08.119><c> Client</c>

00:54:08.290 --> 00:54:08.300 align:start position:0%
of the program there is Native Client
 

00:54:08.300 --> 00:54:11.140 align:start position:0%
of the program there is Native Client
technology<00:54:09.140><c> from</c><00:54:09.410><c> Google</c><00:54:09.770><c> for</c><00:54:10.010><c> example</c><00:54:10.150><c> there</c>

00:54:11.140 --> 00:54:11.150 align:start position:0%
technology from Google for example there
 

00:54:11.150 --> 00:54:14.200 align:start position:0%
technology from Google for example there
has<00:54:11.300><c> been</c><00:54:11.450><c> that</c><00:54:11.690><c> I</c><00:54:12.310><c> have</c><00:54:13.310><c> worked</c><00:54:13.550><c> a</c><00:54:13.820><c> lot</c><00:54:14.150><c> of</c>

00:54:14.200 --> 00:54:14.210 align:start position:0%
has been that I have worked a lot of
 

00:54:14.210 --> 00:54:17.180 align:start position:0%
has been that I have worked a lot of
with<00:54:15.020><c> with</c><00:54:15.349><c> that</c><00:54:15.380><c> at</c><00:54:15.920><c> some</c><00:54:16.130><c> point</c><00:54:16.160><c> so</c>

00:54:17.180 --> 00:54:17.190 align:start position:0%
with with that at some point so
 

00:54:17.190 --> 00:54:21.049 align:start position:0%
with with that at some point so
yeah<00:54:17.940><c> hold</c><00:54:18.509><c> this</c><00:54:18.839><c> are</c><00:54:19.289><c> these</c><00:54:20.059><c> technologies</c>

00:54:21.049 --> 00:54:21.059 align:start position:0%
yeah hold this are these technologies
 

00:54:21.059 --> 00:54:25.789 align:start position:0%
yeah hold this are these technologies
are<00:54:22.400><c> nice</c><00:54:23.400><c> but</c><00:54:23.990><c> they</c><00:54:24.990><c> are</c><00:54:25.079><c> not</c><00:54:25.230><c> standardized</c>

00:54:25.789 --> 00:54:25.799 align:start position:0%
are nice but they are not standardized
 

00:54:25.799 --> 00:54:28.910 align:start position:0%
are nice but they are not standardized
and<00:54:26.900><c> there</c><00:54:27.900><c> should</c><00:54:28.079><c> be</c><00:54:28.200><c> a</c><00:54:28.230><c> better</c><00:54:28.410><c> way</c>

00:54:28.910 --> 00:54:28.920 align:start position:0%
and there should be a better way
 

00:54:28.920 --> 00:54:32.599 align:start position:0%
and there should be a better way
so<00:54:29.490><c> this</c><00:54:30.390><c> for</c><00:54:30.720><c> the</c><00:54:31.079><c> four</c><00:54:31.380><c> major</c><00:54:32.069><c> browser</c>

00:54:32.599 --> 00:54:32.609 align:start position:0%
so this for the four major browser
 

00:54:32.609 --> 00:54:35.120 align:start position:0%
so this for the four major browser
vendors<00:54:32.970><c> are</c><00:54:33.240><c> working</c><00:54:33.720><c> for</c><00:54:34.079><c> a</c><00:54:34.410><c> few</c><00:54:34.710><c> months</c><00:54:34.980><c> and</c>

00:54:35.120 --> 00:54:35.130 align:start position:0%
vendors are working for a few months and
 

00:54:35.130 --> 00:54:35.839 align:start position:0%
vendors are working for a few months and
webassembly

00:54:35.839 --> 00:54:35.849 align:start position:0%
webassembly
 

00:54:35.849 --> 00:54:40.759 align:start position:0%
webassembly
which<00:54:36.630><c> is</c><00:54:36.839><c> a</c><00:54:36.869><c> binary</c><00:54:37.170><c> format</c><00:54:37.650><c> to</c><00:54:38.430><c> describe</c><00:54:39.769><c> in</c>

00:54:40.759 --> 00:54:40.769 align:start position:0%
which is a binary format to describe in
 

00:54:40.769 --> 00:54:47.440 align:start position:0%
which is a binary format to describe in
a<00:54:40.829><c> neutral</c><00:54:41.250><c> way</c><00:54:45.410><c> there's</c><00:54:46.410><c> a</c><00:54:46.500><c> code</c><00:54:46.710><c> basically</c>

00:54:47.440 --> 00:54:47.450 align:start position:0%
a neutral way there's a code basically
 

00:54:47.450 --> 00:54:52.700 align:start position:0%
a neutral way there's a code basically
and<00:54:49.400><c> the</c><00:54:50.400><c> idea</c><00:54:50.759><c> is</c><00:54:51.000><c> to</c><00:54:51.269><c> be</c><00:54:51.450><c> able</c><00:54:51.630><c> to</c><00:54:52.289><c> make</c><00:54:52.559><c> it</c>

00:54:52.700 --> 00:54:52.710 align:start position:0%
and the idea is to be able to make it
 

00:54:52.710 --> 00:54:54.440 align:start position:0%
and the idea is to be able to make it
possible<00:54:52.859><c> for</c><00:54:53.130><c> the</c><00:54:53.400><c> browser</c><00:54:53.700><c> to</c><00:54:53.880><c> execute</c><00:54:54.299><c> that</c>

00:54:54.440 --> 00:54:54.450 align:start position:0%
possible for the browser to execute that
 

00:54:54.450 --> 00:54:57.380 align:start position:0%
possible for the browser to execute that
code<00:54:54.660><c> very</c><00:54:55.559><c> efficiently</c><00:54:56.210><c> initially</c><00:54:57.210><c> that's</c>

00:54:57.380 --> 00:54:57.390 align:start position:0%
code very efficiently initially that's
 

00:54:57.390 --> 00:55:02.720 align:start position:0%
code very efficiently initially that's
more<00:54:57.930><c> focused</c><00:54:58.140><c> for</c><00:54:59.509><c> very</c><00:55:01.190><c> for</c><00:55:02.190><c> application</c>

00:55:02.720 --> 00:55:02.730 align:start position:0%
more focused for very for application
 

00:55:02.730 --> 00:55:05.089 align:start position:0%
more focused for very for application
like<00:55:02.880><c> games</c><00:55:03.150><c> like</c><00:55:03.509><c> compute</c><00:55:04.140><c> computing</c>

00:55:05.089 --> 00:55:05.099 align:start position:0%
like games like compute computing
 

00:55:05.099 --> 00:55:08.480 align:start position:0%
like games like compute computing
intensive<00:55:05.609><c> application</c><00:55:06.150><c> but</c><00:55:06.920><c> so</c><00:55:07.920><c> that</c><00:55:08.250><c> made</c>

00:55:08.480 --> 00:55:08.490 align:start position:0%
intensive application but so that made
 

00:55:08.490 --> 00:55:11.180 align:start position:0%
intensive application but so that made
me<00:55:08.670><c> for</c><00:55:09.029><c> being</c><00:55:09.839><c> a</c><00:55:10.049><c> target</c><00:55:10.289><c> computation</c><00:55:10.980><c> for</c>

00:55:11.180 --> 00:55:11.190 align:start position:0%
me for being a target computation for
 

00:55:11.190 --> 00:55:14.210 align:start position:0%
me for being a target computation for
CCP<00:55:11.759><c> space</c><00:55:11.970><c> program</c><00:55:12.329><c> but</c><00:55:13.069><c> web-based</c><00:55:14.069><c> online</c>

00:55:14.210 --> 00:55:14.220 align:start position:0%
CCP space program but web-based online
 

00:55:14.220 --> 00:55:16.819 align:start position:0%
CCP space program but web-based online
is<00:55:14.670><c> also</c><00:55:14.910><c> something</c><00:55:15.750><c> that</c><00:55:16.079><c> could</c><00:55:16.259><c> be</c><00:55:16.380><c> used</c><00:55:16.589><c> to</c>

00:55:16.819 --> 00:55:16.829 align:start position:0%
is also something that could be used to
 

00:55:16.829 --> 00:55:19.160 align:start position:0%
is also something that could be used to
as<00:55:17.309><c> a</c><00:55:17.700><c> computation</c><00:55:18.509><c> target</c><00:55:18.839><c> for</c><00:55:19.019><c> other</c>

00:55:19.160 --> 00:55:19.170 align:start position:0%
as a computation target for other
 

00:55:19.170 --> 00:55:21.880 align:start position:0%
as a computation target for other
languages<00:55:19.559><c> so</c><00:55:20.130><c> we</c><00:55:20.309><c> could</c><00:55:20.519><c> see</c><00:55:20.730><c> rest</c>

00:55:21.880 --> 00:55:21.890 align:start position:0%
languages so we could see rest
 

00:55:21.890 --> 00:55:23.990 align:start position:0%
languages so we could see rest
complaining<00:55:22.890><c> to</c><00:55:23.069><c> whether</c><00:55:23.220><c> some</c><00:55:23.460><c> rival</c><00:55:23.849><c> could</c>

00:55:23.990 --> 00:55:24.000 align:start position:0%
complaining to whether some rival could
 

00:55:24.000 --> 00:55:27.109 align:start position:0%
complaining to whether some rival could
see<00:55:24.529><c> Kirkland</c><00:55:25.529><c> may</c><00:55:25.859><c> be</c><00:55:25.920><c> opening</c><00:55:26.549><c> to</c><00:55:26.730><c> a</c><00:55:26.789><c> decimal</c>

00:55:27.109 --> 00:55:27.119 align:start position:0%
see Kirkland may be opening to a decimal
 

00:55:27.119 --> 00:55:31.180 align:start position:0%
see Kirkland may be opening to a decimal
I<00:55:27.269><c> switched</c><00:55:27.660><c> etc</c><00:55:28.170><c> etc</c><00:55:28.259><c> and</c><00:55:28.950><c> that</c><00:55:29.579><c> would</c><00:55:29.789><c> make</c>

00:55:31.180 --> 00:55:31.190 align:start position:0%
I switched etc etc and that would make
 

00:55:31.190 --> 00:55:34.519 align:start position:0%
I switched etc etc and that would make
so<00:55:32.190><c> jealous</c><00:55:32.490><c> Caprice</c><00:55:32.880><c> dead</c><00:55:33.119><c> we</c><00:55:33.599><c> stay</c><00:55:33.869><c> but</c><00:55:34.200><c> that</c>

00:55:34.519 --> 00:55:34.529 align:start position:0%
so jealous Caprice dead we stay but that
 

00:55:34.529 --> 00:55:36.859 align:start position:0%
so jealous Caprice dead we stay but that
will<00:55:34.680><c> be</c><00:55:34.799><c> not</c><00:55:35.009><c> an</c><00:55:35.160><c> achieve</c><00:55:35.490><c> very</c><00:55:36.269><c> efficient</c>

00:55:36.859 --> 00:55:36.869 align:start position:0%
will be not an achieve very efficient
 

00:55:36.869 --> 00:55:39.200 align:start position:0%
will be not an achieve very efficient
quite<00:55:37.410><c> low</c><00:55:37.680><c> level</c><00:55:38.009><c> to</c><00:55:38.309><c> be</c><00:55:38.430><c> able</c><00:55:38.640><c> to</c><00:55:38.789><c> run</c><00:55:38.910><c> some</c>

00:55:39.200 --> 00:55:39.210 align:start position:0%
quite low level to be able to run some
 

00:55:39.210 --> 00:55:42.829 align:start position:0%
quite low level to be able to run some
application<00:55:39.779><c> and</c><00:55:39.960><c> I</c><00:55:40.349><c> have</c><00:55:41.309><c> tried</c><00:55:41.519><c> to</c><00:55:41.839><c> discuss</c>

00:55:42.829 --> 00:55:42.839 align:start position:0%
application and I have tried to discuss
 

00:55:42.839 --> 00:55:44.809 align:start position:0%
application and I have tried to discuss
with<00:55:43.049><c> Kirkland</c><00:55:43.650><c> guys</c><00:55:43.890><c> so</c><00:55:44.250><c> there</c><00:55:44.490><c> is</c><00:55:44.609><c> no</c>

00:55:44.809 --> 00:55:44.819 align:start position:0%
with Kirkland guys so there is no
 

00:55:44.819 --> 00:55:47.749 align:start position:0%
with Kirkland guys so there is no
official<00:55:45.299><c> plan</c><00:55:45.539><c> about</c><00:55:45.779><c> webOS</c><00:55:46.109><c> online</c><00:55:46.410><c> yet</c><00:55:46.759><c> but</c>

00:55:47.749 --> 00:55:47.759 align:start position:0%
official plan about webOS online yet but
 

00:55:47.759 --> 00:55:51.170 align:start position:0%
official plan about webOS online yet but
I<00:55:48.089><c> think</c><00:55:48.630><c> that's</c><00:55:48.900><c> that's</c><00:55:49.319><c> an</c><00:55:49.500><c> interesting</c><00:55:50.180><c> way</c>

00:55:51.170 --> 00:55:51.180 align:start position:0%
I think that's that's an interesting way
 

00:55:51.180 --> 00:55:53.720 align:start position:0%
I think that's that's an interesting way
of<00:55:51.480><c> thinking</c><00:55:51.599><c> about</c><00:55:52.309><c> Kirkland</c><00:55:53.309><c> for</c><00:55:53.579><c> the</c>

00:55:53.720 --> 00:55:53.730 align:start position:0%
of thinking about Kirkland for the
 

00:55:53.730 --> 00:55:56.990 align:start position:0%
of thinking about Kirkland for the
client<00:55:54.029><c> side</c><00:55:54.210><c> for</c><00:55:54.390><c> the</c><00:55:54.480><c> future</c><00:55:55.819><c> compiling</c><00:55:56.819><c> a</c>

00:55:56.990 --> 00:55:57.000 align:start position:0%
client side for the future compiling a
 

00:55:57.000 --> 00:56:00.400 align:start position:0%
client side for the future compiling a
language<00:55:58.250><c> that</c><00:55:59.250><c> does</c><00:55:59.700><c> not</c><00:55:59.880><c> share</c><00:56:00.119><c> the</c>

00:56:00.400 --> 00:56:00.410 align:start position:0%
language that does not share the
 

00:56:00.410 --> 00:56:02.599 align:start position:0%
language that does not share the
JavaScript<00:56:01.410><c> semantics</c><00:56:01.799><c> to</c><00:56:01.980><c> JavaScript</c><00:56:02.400><c> is</c><00:56:02.579><c> a</c>

00:56:02.599 --> 00:56:02.609 align:start position:0%
JavaScript semantics to JavaScript is a
 

00:56:02.609 --> 00:56:05.299 align:start position:0%
JavaScript semantics to JavaScript is a
hack<00:56:02.849><c> and</c><00:56:03.089><c> for</c><00:56:03.720><c> the</c><00:56:03.839><c> long</c><00:56:03.990><c> term</c><00:56:04.200><c> I</c><00:56:04.470><c> think</c><00:56:04.799><c> that</c>

00:56:05.299 --> 00:56:05.309 align:start position:0%
hack and for the long term I think that
 

00:56:05.309 --> 00:56:08.029 align:start position:0%
hack and for the long term I think that
would<00:56:05.579><c> be</c><00:56:05.609><c> interesting</c><00:56:06.240><c> I</c><00:56:06.420><c> guess</c><00:56:07.380><c> we</c><00:56:07.859><c> will</c><00:56:07.980><c> see</c>

00:56:08.029 --> 00:56:08.039 align:start position:0%
would be interesting I guess we will see
 

00:56:08.039 --> 00:56:11.349 align:start position:0%
would be interesting I guess we will see
quickly<00:56:08.490><c> rest</c><00:56:08.910><c> combined</c><00:56:09.269><c> into</c><00:56:09.509><c> webOS</c><00:56:09.750><c> online</c>

00:56:11.349 --> 00:56:11.359 align:start position:0%
quickly rest combined into webOS online
 

00:56:11.359 --> 00:56:16.490 align:start position:0%
quickly rest combined into webOS online
webassembly<00:56:12.950><c> is</c><00:56:14.089><c> already</c><00:56:15.089><c> available</c><00:56:15.480><c> in</c><00:56:15.990><c> in</c>

00:56:16.490 --> 00:56:16.500 align:start position:0%
webassembly is already available in in
 

00:56:16.500 --> 00:56:18.440 align:start position:0%
webassembly is already available in in
Chrome<00:56:16.740><c> Canary</c><00:56:16.769><c> if</c><00:56:17.369><c> you</c><00:56:17.519><c> enable</c><00:56:17.730><c> to</c><00:56:17.910><c> flag</c><00:56:18.180><c> and</c>

00:56:18.440 --> 00:56:18.450 align:start position:0%
Chrome Canary if you enable to flag and
 

00:56:18.450 --> 00:56:22.490 align:start position:0%
Chrome Canary if you enable to flag and
you<00:56:18.599><c> can</c><00:56:18.809><c> run</c><00:56:18.990><c> a</c><00:56:19.970><c> video</c><00:56:20.970><c> game</c><00:56:21.329><c> with</c><00:56:21.990><c> full</c><00:56:22.410><c> speed</c>

00:56:22.490 --> 00:56:22.500 align:start position:0%
you can run a video game with full speed
 

00:56:22.500 --> 00:56:24.259 align:start position:0%
you can run a video game with full speed
and<00:56:22.890><c> that's</c><00:56:23.009><c> that's</c><00:56:23.339><c> what's</c><00:56:23.609><c> pretty</c><00:56:23.730><c> well</c><00:56:24.029><c> so</c>

00:56:24.259 --> 00:56:24.269 align:start position:0%
and that's that's what's pretty well so
 

00:56:24.269 --> 00:56:27.470 align:start position:0%
and that's that's what's pretty well so
they<00:56:24.990><c> are</c><00:56:25.019><c> really</c><00:56:26.000><c> progressing</c><00:56:27.000><c> fast</c><00:56:27.299><c> on</c><00:56:27.450><c> that</c>

00:56:27.470 --> 00:56:27.480 align:start position:0%
they are really progressing fast on that
 

00:56:27.480 --> 00:56:29.660 align:start position:0%
they are really progressing fast on that
and<00:56:27.930><c> next</c><00:56:28.289><c> year</c><00:56:28.470><c> I</c><00:56:28.680><c> think</c><00:56:29.099><c> we</c><00:56:29.190><c> could</c><00:56:29.400><c> see</c><00:56:29.549><c> well</c>

00:56:29.660 --> 00:56:29.670 align:start position:0%
and next year I think we could see well
 

00:56:29.670 --> 00:56:32.019 align:start position:0%
and next year I think we could see well
as<00:56:29.789><c> some</c><00:56:29.910><c> -</c><00:56:30.059><c> approach</c><00:56:30.359><c> it</c><00:56:30.539><c> by</c><00:56:30.720><c> visor</c><00:56:31.440><c> browser</c>

00:56:32.019 --> 00:56:32.029 align:start position:0%
as some - approach it by visor browser
 

00:56:32.029 --> 00:56:34.970 align:start position:0%
as some - approach it by visor browser
without<00:56:33.029><c> flags</c><00:56:33.420><c> so</c><00:56:33.630><c> that</c><00:56:34.140><c> that's</c><00:56:34.410><c> an</c>

00:56:34.970 --> 00:56:34.980 align:start position:0%
without flags so that that's an
 

00:56:34.980 --> 00:56:39.490 align:start position:0%
without flags so that that's an
interesting<00:56:35.490><c> technology</c><00:56:35.940><c> to</c><00:56:36.059><c> follow</c><00:56:36.210><c> and</c><00:56:37.910><c> if</c>

00:56:39.490 --> 00:56:39.500 align:start position:0%
interesting technology to follow and if
 

00:56:39.500 --> 00:56:42.230 align:start position:0%
interesting technology to follow and if
got<00:56:40.500><c> clean</c><00:56:40.710><c> compiled</c><00:56:41.099><c> -</c><00:56:41.309><c> to</c><00:56:41.670><c> obey</c><00:56:41.880><c> sunlight</c>

00:56:42.230 --> 00:56:42.240 align:start position:0%
got clean compiled - to obey sunlight
 

00:56:42.240 --> 00:56:45.559 align:start position:0%
got clean compiled - to obey sunlight
that<00:56:43.079><c> could</c><00:56:43.380><c> allow</c><00:56:43.650><c> people</c><00:56:44.039><c> to</c><00:56:44.730><c> create</c><00:56:45.180><c> a</c><00:56:45.390><c> war</c>

00:56:45.559 --> 00:56:45.569 align:start position:0%
that could allow people to create a war
 

00:56:45.569 --> 00:56:49.339 align:start position:0%
that could allow people to create a war
ecosystem<00:56:46.170><c> of</c><00:56:47.269><c> complain</c><00:56:48.269><c> cut</c><00:56:48.930><c> clean</c>

00:56:49.339 --> 00:56:49.349 align:start position:0%
ecosystem of complain cut clean
 

00:56:49.349 --> 00:56:52.309 align:start position:0%
ecosystem of complain cut clean
client-side<00:56:49.859><c> libraries</c><00:56:50.960><c> that</c><00:56:51.960><c> would</c><00:56:52.170><c> be</c>

00:56:52.309 --> 00:56:52.319 align:start position:0%
client-side libraries that would be
 

00:56:52.319 --> 00:56:55.039 align:start position:0%
client-side libraries that would be
different<00:56:53.009><c> than</c><00:56:53.519><c> the</c><00:56:54.359><c> JavaScript</c><00:56:54.630><c> ecosystem</c>

00:56:55.039 --> 00:56:55.049 align:start position:0%
different than the JavaScript ecosystem
 

00:56:55.049 --> 00:56:58.099 align:start position:0%
different than the JavaScript ecosystem
that<00:56:55.559><c> we</c><00:56:55.710><c> see</c><00:56:55.920><c> and</c><00:56:56.250><c> yeah</c><00:56:57.180><c> that</c><00:56:57.809><c> would</c><00:56:57.990><c> be</c>

00:56:58.099 --> 00:56:58.109 align:start position:0%
that we see and yeah that would be
 

00:56:58.109 --> 00:57:04.819 align:start position:0%
that we see and yeah that would be
interesting<00:57:00.380><c> how</c><00:57:01.380><c> to</c><00:57:01.440><c> learn</c><00:57:01.619><c> Catalan</c><00:57:03.170><c> so</c><00:57:04.170><c> you</c>

00:57:04.819 --> 00:57:04.829 align:start position:0%
interesting how to learn Catalan so you
 

00:57:04.829 --> 00:57:07.700 align:start position:0%
interesting how to learn Catalan so you
can<00:57:05.069><c> go</c><00:57:05.250><c> to</c><00:57:05.309><c> try</c><00:57:05.640><c> that</c><00:57:05.880><c> cutscene</c><00:57:06.180><c> long</c><00:57:06.390><c> dog</c><00:57:06.809><c> you</c>

00:57:07.700 --> 00:57:07.710 align:start position:0%
can go to try that cutscene long dog you
 

00:57:07.710 --> 00:57:10.880 align:start position:0%
can go to try that cutscene long dog you
will<00:57:07.859><c> see</c><00:57:08.039><c> Catalan</c><00:57:08.400><c> cones</c><00:57:08.670><c> which</c><00:57:08.970><c> is</c><00:57:09.890><c> an</c>

00:57:10.880 --> 00:57:10.890 align:start position:0%
will see Catalan cones which is an
 

00:57:10.890 --> 00:57:12.890 align:start position:0%
will see Catalan cones which is an
application<00:57:11.640><c> that</c><00:57:11.849><c> allows</c><00:57:12.240><c> you</c><00:57:12.390><c> to</c><00:57:12.750><c> learn</c>

00:57:12.890 --> 00:57:12.900 align:start position:0%
application that allows you to learn
 

00:57:12.900 --> 00:57:17.599 align:start position:0%
application that allows you to learn
step<00:57:13.289><c> by</c><00:57:13.319><c> step</c><00:57:13.799><c> language</c><00:57:16.430><c> this</c><00:57:17.430><c> application</c>

00:57:17.599 --> 00:57:17.609 align:start position:0%
step by step language this application
 

00:57:17.609 --> 00:57:19.670 align:start position:0%
step by step language this application
is<00:57:18.000><c> developed</c><00:57:18.390><c> with</c><00:57:18.539><c> code</c><00:57:18.720><c> clean</c><00:57:18.930><c> -</c><00:57:19.140><c> yes</c><00:57:19.380><c> for</c>

00:57:19.670 --> 00:57:19.680 align:start position:0%
is developed with code clean - yes for
 

00:57:19.680 --> 00:57:22.759 align:start position:0%
is developed with code clean - yes for
example<00:57:20.039><c> that's</c><00:57:20.309><c> that's</c><00:57:20.670><c> an</c><00:57:20.759><c> example</c><00:57:21.769><c> the</c>

00:57:22.759 --> 00:57:22.769 align:start position:0%
example that's that's an example the
 

00:57:22.769 --> 00:57:25.579 align:start position:0%
example that's that's an example the
community<00:57:23.220><c> is</c><00:57:23.339><c> very</c><00:57:23.549><c> interesting</c><00:57:24.319><c> the</c><00:57:25.319><c> slack</c>

00:57:25.579 --> 00:57:25.589 align:start position:0%
community is very interesting the slack
 

00:57:25.589 --> 00:57:28.819 align:start position:0%
community is very interesting the slack
there<00:57:26.369><c> is</c><00:57:26.490><c> a</c><00:57:26.519><c> slack</c><00:57:27.259><c> instance</c><00:57:28.259><c> for</c><00:57:28.529><c> cocaine</c>

00:57:28.819 --> 00:57:28.829 align:start position:0%
there is a slack instance for cocaine
 

00:57:28.829 --> 00:57:31.519 align:start position:0%
there is a slack instance for cocaine
which<00:57:29.009><c> is</c><00:57:29.250><c> very</c><00:57:29.519><c> nice</c><00:57:30.059><c> where</c><00:57:30.839><c> you</c><00:57:30.960><c> can</c><00:57:31.140><c> discuss</c>

00:57:31.519 --> 00:57:31.529 align:start position:0%
which is very nice where you can discuss
 

00:57:31.529 --> 00:57:36.259 align:start position:0%
which is very nice where you can discuss
directly<00:57:31.950><c> with</c><00:57:32.130><c> cut-in</c><00:57:32.490><c> developers</c><00:57:33.589><c> so</c><00:57:35.269><c> it</c>

00:57:36.259 --> 00:57:36.269 align:start position:0%
directly with cut-in developers so it
 

00:57:36.269 --> 00:57:39.009 align:start position:0%
directly with cut-in developers so it
should<00:57:36.450><c> be</c><00:57:36.480><c> an</c><00:57:36.599><c> interesting</c><00:57:36.779><c> place</c><00:57:37.200><c> to</c><00:57:37.380><c> go</c><00:57:37.640><c> and</c>

00:57:39.009 --> 00:57:39.019 align:start position:0%
should be an interesting place to go and
 

00:57:39.019 --> 00:57:43.809 align:start position:0%
should be an interesting place to go and
I<00:57:40.019><c> will</c><00:57:40.170><c> finish</c><00:57:40.349><c> by</c><00:57:40.500><c> I</c><00:57:41.930><c> can</c><00:57:42.930><c> show</c><00:57:43.230><c> just</c><00:57:43.259><c> quickly</c>

00:57:43.809 --> 00:57:43.819 align:start position:0%
I will finish by I can show just quickly
 

00:57:43.819 --> 00:57:47.180 align:start position:0%
I will finish by I can show just quickly
a<00:57:44.819><c> quick</c><00:57:45.299><c> example</c><00:57:45.829><c> demo</c><00:57:46.829><c> of</c><00:57:46.920><c> the</c><00:57:47.069><c> application</c>

00:57:47.180 --> 00:57:47.190 align:start position:0%
a quick example demo of the application
 

00:57:47.190 --> 00:57:50.420 align:start position:0%
a quick example demo of the application
so<00:57:48.140><c> so</c><00:57:49.140><c> if</c><00:57:49.319><c> you</c><00:57:49.470><c> clones</c><00:57:49.769><c> are</c><00:57:49.980><c> just</c><00:57:50.009><c> Bastion</c>

00:57:50.420 --> 00:57:50.430 align:start position:0%
so so if you clones are just Bastion
 

00:57:50.430 --> 00:57:52.700 align:start position:0%
so so if you clones are just Bastion
messenger<00:57:50.940><c> you</c><00:57:51.390><c> will</c><00:57:51.569><c> get</c><00:57:51.839><c> this</c><00:57:52.019><c> application</c>

00:57:52.700 --> 00:57:52.710 align:start position:0%
messenger you will get this application
 

00:57:52.710 --> 00:57:56.349 align:start position:0%
messenger you will get this application
we<00:57:53.700><c> have</c><00:57:53.849><c> the</c><00:57:54.029><c> message</c><00:57:54.390><c> user</c><00:57:54.900><c> classes</c>

00:57:56.349 --> 00:57:56.359 align:start position:0%
we have the message user classes
 

00:57:56.359 --> 00:58:00.559 align:start position:0%
we have the message user classes
propitiatory<00:57:57.359><c> just</c><00:57:58.019><c> what</c><00:57:58.289><c> I</c><00:57:58.319><c> showed</c><00:57:58.680><c> you</c><00:57:59.569><c> so</c>

00:58:00.559 --> 00:58:00.569 align:start position:0%
propitiatory just what I showed you so
 

00:58:00.569 --> 00:58:05.960 align:start position:0%
propitiatory just what I showed you so
to<00:58:01.319><c> run</c><00:58:01.440><c> it</c><00:58:01.619><c> I</c><00:58:01.829><c> just</c><00:58:01.950><c> I</c><00:58:04.519><c> just</c><00:58:05.519><c> ran</c><00:58:05.940><c> the</c>

00:58:05.960 --> 00:58:05.970 align:start position:0%
to run it I just I just ran the
 

00:58:05.970 --> 00:58:15.190 align:start position:0%
to run it I just I just ran the
application<00:58:07.490><c> class</c>

00:58:15.190 --> 00:58:15.200 align:start position:0%
 
 

00:58:15.200 --> 00:58:19.599 align:start position:0%
 
okay<00:58:16.040><c> so</c><00:58:17.890><c> so</c><00:58:18.890><c> that</c><00:58:19.099><c> just</c><00:58:19.339><c> an</c><00:58:19.430><c> application</c>

00:58:19.599 --> 00:58:19.609 align:start position:0%
okay so so that just an application
 

00:58:19.609 --> 00:58:23.319 align:start position:0%
okay so so that just an application
where<00:58:20.240><c> I</c><00:58:20.950><c> can</c><00:58:21.950><c> write</c><00:58:22.250><c> some</c><00:58:22.579><c> messages</c><00:58:23.180><c> like</c>

00:58:23.319 --> 00:58:23.329 align:start position:0%
where I can write some messages like
 

00:58:23.329 --> 00:58:34.359 align:start position:0%
where I can write some messages like
that<00:58:26.920><c> okay</c><00:58:27.920><c> and</c><00:58:28.160><c> if</c><00:58:28.490><c> I</c><00:58:32.680><c> if</c><00:58:33.680><c> I</c><00:58:33.829><c> open</c><00:58:34.130><c> another</c>

00:58:34.359 --> 00:58:34.369 align:start position:0%
that okay and if I if I open another
 

00:58:34.369 --> 00:58:42.280 align:start position:0%
that okay and if I if I open another
browser<00:58:36.460><c> and</c><00:58:37.460><c> go</c><00:58:37.730><c> to</c><00:58:37.790><c> the</c><00:58:39.160><c> van</c><00:58:40.160><c> and</c><00:58:40.400><c> I</c><00:58:41.290><c> creates</c>

00:58:42.280 --> 00:58:42.290 align:start position:0%
browser and go to the van and I creates
 

00:58:42.290 --> 00:58:44.770 align:start position:0%
browser and go to the van and I creates
a<00:58:42.470><c> message</c><00:58:42.799><c> here</c><00:58:43.160><c> the</c><00:58:44.150><c> message</c><00:58:44.480><c> will</c><00:58:44.660><c> be</c>

00:58:44.770 --> 00:58:44.780 align:start position:0%
a message here the message will be
 

00:58:44.780 --> 00:58:46.839 align:start position:0%
a message here the message will be
pushed<00:58:45.079><c> by</c><00:58:45.380><c> server</c><00:58:45.799><c> sent</c><00:58:46.069><c> events</c><00:58:46.160><c> in</c><00:58:46.609><c> two</c>

00:58:46.839 --> 00:58:46.849 align:start position:0%
pushed by server sent events in two
 

00:58:46.849 --> 00:58:49.180 align:start position:0%
pushed by server sent events in two
holes<00:58:47.089><c> various</c><00:58:47.510><c> instances</c><00:58:47.869><c> to</c><00:58:48.290><c> show</c><00:58:48.740><c> that</c><00:58:48.890><c> so</c>

00:58:49.180 --> 00:58:49.190 align:start position:0%
holes various instances to show that so
 

00:58:49.190 --> 00:58:51.220 align:start position:0%
holes various instances to show that so
that's<00:58:49.760><c> a</c><00:58:49.880><c> really</c><00:58:50.089><c> simple</c><00:58:50.270><c> application</c><00:58:50.990><c> but</c>

00:58:51.220 --> 00:58:51.230 align:start position:0%
that's a really simple application but
 

00:58:51.230 --> 00:58:54.039 align:start position:0%
that's a really simple application but
that's<00:58:51.470><c> just</c><00:58:51.619><c> to</c><00:58:51.859><c> to</c><00:58:52.640><c> show</c><00:58:52.849><c> you</c><00:58:52.910><c> a</c><00:58:53.569><c> real</c>

00:58:54.039 --> 00:58:54.049 align:start position:0%
that's just to to show you a real
 

00:58:54.049 --> 00:58:58.539 align:start position:0%
that's just to to show you a real
example<00:58:54.319><c> of</c><00:58:56.380><c> of</c><00:58:57.380><c> convenience</c><00:58:58.250><c> being</c><00:58:58.430><c> good</c>

00:58:58.539 --> 00:58:58.549 align:start position:0%
example of of convenience being good
 

00:58:58.549 --> 00:59:06.030 align:start position:0%
example of of convenience being good
application<00:59:00.940><c> Duke</c><00:59:01.940><c> back</c><00:59:02.390><c> there</c><00:59:03.130><c> so</c><00:59:04.130><c> what</c><00:59:04.309><c> next</c>

00:59:06.030 --> 00:59:06.040 align:start position:0%
application Duke back there so what next
 

00:59:06.040 --> 00:59:09.390 align:start position:0%
application Duke back there so what next
in<00:59:07.040><c> terms</c><00:59:07.309><c> of</c><00:59:07.400><c> confidence</c><00:59:08.000><c> reports</c><00:59:08.569><c> in</c><00:59:08.809><c> spring</c>

00:59:09.390 --> 00:59:09.400 align:start position:0%
in terms of confidence reports in spring
 

00:59:09.400 --> 00:59:14.260 align:start position:0%
in terms of confidence reports in spring
we<00:59:10.400><c> are</c><00:59:10.430><c> going</c><00:59:10.849><c> to</c><00:59:11.180><c> develop</c><00:59:12.760><c> to</c><00:59:13.760><c> improve</c><00:59:14.119><c> the</c>

00:59:14.260 --> 00:59:14.270 align:start position:0%
we are going to develop to improve the
 

00:59:14.270 --> 00:59:15.910 align:start position:0%
we are going to develop to improve the
spring<00:59:14.540><c> Kathleen</c><00:59:15.049><c> which</c><00:59:15.530><c> is</c><00:59:15.710><c> cutting</c>

00:59:15.910 --> 00:59:15.920 align:start position:0%
spring Kathleen which is cutting
 

00:59:15.920 --> 00:59:18.849 align:start position:0%
spring Kathleen which is cutting
extensions<00:59:16.490><c> for</c><00:59:16.670><c> spring</c><00:59:17.290><c> we</c><00:59:18.290><c> are</c><00:59:18.440><c> going</c><00:59:18.710><c> also</c>

00:59:18.849 --> 00:59:18.859 align:start position:0%
extensions for spring we are going also
 

00:59:18.859 --> 00:59:21.370 align:start position:0%
extensions for spring we are going also
to<00:59:19.010><c> add</c><00:59:19.339><c> some</c><00:59:19.809><c> curtain</c><00:59:20.809><c> extension</c><00:59:21.200><c> for</c>

00:59:21.370 --> 00:59:21.380 align:start position:0%
to add some curtain extension for
 

00:59:21.380 --> 00:59:23.890 align:start position:0%
to add some curtain extension for
reactor<00:59:21.770><c> that's</c><00:59:22.369><c> not</c><00:59:22.720><c> official</c><00:59:23.720><c> project</c>

00:59:23.890 --> 00:59:23.900 align:start position:0%
reactor that's not official project
 

00:59:23.900 --> 00:59:25.930 align:start position:0%
reactor that's not official project
that's<00:59:24.380><c> a</c><00:59:24.589><c> project</c><00:59:24.799><c> that</c><00:59:25.069><c> will</c><00:59:25.460><c> be</c><00:59:25.579><c> developed</c>

00:59:25.930 --> 00:59:25.940 align:start position:0%
that's a project that will be developed
 

00:59:25.940 --> 00:59:28.240 align:start position:0%
that's a project that will be developed
mainly<00:59:26.030><c> by</c><00:59:26.299><c> me</c><00:59:26.540><c> for</c><00:59:27.440><c> the</c><00:59:27.470><c> beginning</c><00:59:27.799><c> and</c><00:59:27.980><c> the</c>

00:59:28.240 --> 00:59:28.250 align:start position:0%
mainly by me for the beginning and the
 

00:59:28.250 --> 00:59:30.849 align:start position:0%
mainly by me for the beginning and the
community<00:59:28.900><c> the</c><00:59:29.900><c> reactor</c><00:59:30.230><c> example</c><00:59:30.680><c> is</c><00:59:30.829><c> very</c>

00:59:30.849 --> 00:59:30.859 align:start position:0%
community the reactor example is very
 

00:59:30.859 --> 00:59:34.329 align:start position:0%
community the reactor example is very
interesting<00:59:31.520><c> because</c><00:59:32.020><c> the</c><00:59:33.020><c> reactive</c><00:59:33.890><c> API</c><00:59:34.190><c> is</c>

00:59:34.329 --> 00:59:34.339 align:start position:0%
interesting because the reactive API is
 

00:59:34.339 --> 00:59:37.870 align:start position:0%
interesting because the reactive API is
like<00:59:34.730><c> a</c><00:59:34.760><c> raghava</c><00:59:35.359><c> reactor</c><00:59:35.839><c> front</c><00:59:36.619><c> api's</c><00:59:37.069><c> that</c>

00:59:37.870 --> 00:59:37.880 align:start position:0%
like a raghava reactor front api's that
 

00:59:37.880 --> 00:59:41.500 align:start position:0%
like a raghava reactor front api's that
you<00:59:38.059><c> can't</c><00:59:38.299><c> extend</c><00:59:39.130><c> as</c><00:59:40.130><c> a</c><00:59:40.190><c> user</c><00:59:40.520><c> you</c><00:59:40.819><c> can't</c><00:59:41.299><c> add</c>

00:59:41.500 --> 00:59:41.510 align:start position:0%
you can't extend as a user you can't add
 

00:59:41.510 --> 00:59:43.809 align:start position:0%
you can't extend as a user you can't add
a<00:59:41.569><c> method</c><00:59:42.049><c> to</c><00:59:42.319><c> observe</c><00:59:42.920><c> a</c><00:59:42.950><c> berlin</c><00:59:43.339><c> eric</c><00:59:43.579><c> java</c>

00:59:43.809 --> 00:59:43.819 align:start position:0%
a method to observe a berlin eric java
 

00:59:43.819 --> 00:59:46.140 align:start position:0%
a method to observe a berlin eric java
you<00:59:43.970><c> can't</c><00:59:44.210><c> admit</c><00:59:44.599><c> an</c><00:59:44.720><c> influx</c><00:59:45.049><c> in</c><00:59:45.260><c> reactor</c><00:59:45.619><c> and</c>

00:59:46.140 --> 00:59:46.150 align:start position:0%
you can't admit an influx in reactor and
 

00:59:46.150 --> 00:59:49.930 align:start position:0%
you can't admit an influx in reactor and
here<00:59:47.150><c> again</c><00:59:47.890><c> curtain</c><00:59:48.890><c> extensions</c><00:59:49.430><c> really</c>

00:59:49.930 --> 00:59:49.940 align:start position:0%
here again curtain extensions really
 

00:59:49.940 --> 00:59:52.690 align:start position:0%
here again curtain extensions really
works<00:59:50.270><c> pretty</c><00:59:50.480><c> well</c><00:59:50.630><c> because</c><00:59:51.530><c> they</c><00:59:51.890><c> allow</c><00:59:52.130><c> you</c>

00:59:52.690 --> 00:59:52.700 align:start position:0%
works pretty well because they allow you
 

00:59:52.700 --> 00:59:55.180 align:start position:0%
works pretty well because they allow you
to<00:59:52.940><c> add</c><00:59:53.119><c> some</c><00:59:53.540><c> extensions</c><00:59:54.109><c> to</c><00:59:54.410><c> flex</c><00:59:54.710><c> or</c><00:59:54.980><c> to</c>

00:59:55.180 --> 00:59:55.190 align:start position:0%
to add some extensions to flex or to
 

00:59:55.190 --> 00:59:58.690 align:start position:0%
to add some extensions to flex or to
observable<00:59:55.760><c> without</c><00:59:57.040><c> modifying</c><00:59:58.040><c> george</c><00:59:58.430><c> in</c><00:59:58.609><c> a</c>

00:59:58.690 --> 00:59:58.700 align:start position:0%
observable without modifying george in a
 

00:59:58.700 --> 01:00:01.470 align:start position:0%
observable without modifying george in a
class<00:59:58.910><c> for</c><00:59:59.510><c> example</c><00:59:59.599><c> we</c><00:59:59.990><c> could</c><01:00:00.170><c> imagine</c><01:00:00.349><c> a</c><01:00:00.740><c> max</c>

01:00:01.470 --> 01:00:01.480 align:start position:0%
class for example we could imagine a max
 

01:00:01.480 --> 01:00:06.390 align:start position:0%
class for example we could imagine a max
dot<01:00:02.480><c> max</c><01:00:02.930><c> method</c><01:00:04.359><c> that</c><01:00:05.359><c> will</c><01:00:05.569><c> be</c><01:00:05.599><c> only</c>

01:00:06.390 --> 01:00:06.400 align:start position:0%
dot max method that will be only
 

01:00:06.400 --> 01:00:10.690 align:start position:0%
dot max method that will be only
available<01:00:07.400><c> when</c><01:00:08.180><c> we</c><01:00:08.240><c> have</c><01:00:09.069><c> some</c><01:00:10.069><c> flux</c><01:00:10.490><c> or</c>

01:00:10.690 --> 01:00:10.700 align:start position:0%
available when we have some flux or
 

01:00:10.700 --> 01:00:12.910 align:start position:0%
available when we have some flux or
observer<01:00:11.089><c> of</c><01:00:11.240><c> integral</c><01:00:11.990><c> of</c><01:00:12.109><c> long</c><01:00:12.349><c> for</c><01:00:12.559><c> example</c>

01:00:12.910 --> 01:00:12.920 align:start position:0%
observer of integral of long for example
 

01:00:12.920 --> 01:00:16.210 align:start position:0%
observer of integral of long for example
and<01:00:13.569><c> that's</c><01:00:14.569><c> that's</c><01:00:15.079><c> an</c><01:00:15.319><c> example</c><01:00:15.619><c> where</c><01:00:15.859><c> we</c>

01:00:16.210 --> 01:00:16.220 align:start position:0%
and that's that's an example where we
 

01:00:16.220 --> 01:00:21.359 align:start position:0%
and that's that's an example where we
can<01:00:16.490><c> we</c><01:00:17.299><c> can</c><01:00:17.540><c> use</c><01:00:18.160><c> some</c><01:00:19.160><c> some</c><01:00:19.579><c> methods</c><01:00:20.030><c> on</c><01:00:20.720><c> exit</c>

01:00:21.359 --> 01:00:21.369 align:start position:0%
can we can use some some methods on exit
 

01:00:21.369 --> 01:00:23.650 align:start position:0%
can we can use some some methods on exit
existing<01:00:22.369><c> class</c><01:00:22.579><c> and</c><01:00:22.880><c> that's</c><01:00:23.089><c> that's</c><01:00:23.420><c> a</c><01:00:23.540><c> good</c>

01:00:23.650 --> 01:00:23.660 align:start position:0%
existing class and that's that's a good
 

01:00:23.660 --> 01:00:26.079 align:start position:0%
existing class and that's that's a good
fit<01:00:23.869><c> with</c><01:00:23.900><c> reactive</c><01:00:24.410><c> api</c><01:00:24.710><c> stats</c><01:00:25.130><c> in</c><01:00:25.430><c> java</c><01:00:25.819><c> are</c>

01:00:26.079 --> 01:00:26.089 align:start position:0%
fit with reactive api stats in java are
 

01:00:26.089 --> 01:00:28.690 align:start position:0%
fit with reactive api stats in java are
not<01:00:26.420><c> extensible</c><01:00:26.990><c> at</c><01:00:27.109><c> all</c>

01:00:28.690 --> 01:00:28.700 align:start position:0%
not extensible at all
 

01:00:28.700 --> 01:00:30.850 align:start position:0%
not extensible at all
we<01:00:29.150><c> are</c><01:00:29.270><c> going</c><01:00:29.450><c> to</c><01:00:29.510><c> add</c><01:00:29.780><c> some</c><01:00:30.170><c> continually</c>

01:00:30.850 --> 01:00:30.860 align:start position:0%
we are going to add some continually
 

01:00:30.860 --> 01:00:33.000 align:start position:0%
we are going to add some continually
before<01:00:31.220><c> class</c><01:00:31.400><c> report</c><01:00:31.730><c> in</c><01:00:31.850><c> spring</c><01:00:32.090><c> framework</c>

01:00:33.000 --> 01:00:33.010 align:start position:0%
before class report in spring framework
 

01:00:33.010 --> 01:00:36.160 align:start position:0%
before class report in spring framework
for<01:00:34.010><c> that</c><01:00:34.160><c> we</c><01:00:34.400><c> are</c><01:00:34.550><c> going</c><01:00:34.850><c> to</c><01:00:35.030><c> use</c><01:00:35.240><c> information</c>

01:00:36.160 --> 01:00:36.170 align:start position:0%
for that we are going to use information
 

01:00:36.170 --> 01:00:38.440 align:start position:0%
for that we are going to use information
from<01:00:36.620><c> the</c><01:00:36.770><c> cut-in</c><01:00:36.950><c> type</c><01:00:37.280><c> system</c><01:00:37.670><c> where</c><01:00:37.970><c> we</c><01:00:38.150><c> can</c>

01:00:38.440 --> 01:00:38.450 align:start position:0%
from the cut-in type system where we can
 

01:00:38.450 --> 01:00:41.290 align:start position:0%
from the cut-in type system where we can
know<01:00:38.690><c> if</c><01:00:38.900><c> variable</c><01:00:39.620><c> is</c><01:00:39.770><c> can</c><01:00:40.370><c> could</c><01:00:40.700><c> be</c><01:00:40.820><c> null</c><01:00:41.090><c> or</c>

01:00:41.290 --> 01:00:41.300 align:start position:0%
know if variable is can could be null or
 

01:00:41.300 --> 01:00:45.280 align:start position:0%
know if variable is can could be null or
not<01:00:41.360><c> and</c><01:00:41.810><c> with</c><01:00:42.560><c> that</c><01:00:42.800><c> we</c><01:00:43.070><c> will</c><01:00:43.450><c> we</c><01:00:44.450><c> will</c><01:00:44.480><c> know</c>

01:00:45.280 --> 01:00:45.290 align:start position:0%
not and with that we will we will know
 

01:00:45.290 --> 01:00:48.520 align:start position:0%
not and with that we will we will know
if<01:00:45.530><c> the</c><01:00:45.650><c> parameter</c><01:00:46.070><c> should</c><01:00:46.310><c> be</c><01:00:47.500><c> should</c><01:00:48.500><c> be</c>

01:00:48.520 --> 01:00:48.530 align:start position:0%
if the parameter should be should be
 

01:00:48.530 --> 01:00:50.440 align:start position:0%
if the parameter should be should be
required<01:00:49.070><c> or</c><01:00:49.220><c> not</c><01:00:49.370><c> in</c><01:00:49.700><c> spring</c><01:00:49.940><c> MVC</c><01:00:50.090><c> for</c>

01:00:50.440 --> 01:00:50.450 align:start position:0%
required or not in spring MVC for
 

01:00:50.450 --> 01:00:53.530 align:start position:0%
required or not in spring MVC for
example<01:00:50.860><c> and</c><01:00:51.860><c> we</c><01:00:52.700><c> continue</c><01:00:53.030><c> to</c><01:00:53.090><c> improve</c><01:00:53.240><c> the</c>

01:00:53.530 --> 01:00:53.540 align:start position:0%
example and we continue to improve the
 

01:00:53.540 --> 01:00:55.150 align:start position:0%
example and we continue to improve the
curtain<01:00:53.840><c> integration</c><01:00:54.320><c> in</c><01:00:54.440><c> Springwood</c><01:00:54.680><c> there</c>

01:00:55.150 --> 01:00:55.160 align:start position:0%
curtain integration in Springwood there
 

01:00:55.160 --> 01:00:57.760 align:start position:0%
curtain integration in Springwood there
is<01:00:55.310><c> no</c><01:00:55.580><c> really</c><01:00:55.910><c> breaking</c><01:00:56.330><c> point</c><01:00:56.690><c> just</c><01:00:57.440><c> have</c><01:00:57.620><c> to</c>

01:00:57.760 --> 01:00:57.770 align:start position:0%
is no really breaking point just have to
 

01:00:57.770 --> 01:01:00.040 align:start position:0%
is no really breaking point just have to
wait<01:00:57.980><c> cut</c><01:00:58.520><c> in</c><01:00:58.700><c> one</c><01:00:58.850><c> that</c><01:00:59.000><c> one</c><01:00:59.210><c> as</c><01:00:59.480><c> I</c><01:00:59.780><c> said</c>

01:01:00.040 --> 01:01:00.050 align:start position:0%
wait cut in one that one as I said
 

01:01:00.050 --> 01:01:02.680 align:start position:0%
wait cut in one that one as I said
previously<01:01:00.400><c> so</c><01:01:01.400><c> there</c><01:01:01.670><c> is</c><01:01:01.790><c> a</c><01:01:01.820><c> cut</c><01:01:02.240><c> in</c><01:01:02.390><c> one</c><01:01:02.540><c> that</c>

01:01:02.680 --> 01:01:02.690 align:start position:0%
previously so there is a cut in one that
 

01:01:02.690 --> 01:01:05.010 align:start position:0%
previously so there is a cut in one that
one<01:01:02.870><c> preview</c><01:01:03.260><c> which</c><01:01:04.160><c> bring</c><01:01:04.430><c> co-routines</c>

01:01:05.010 --> 01:01:05.020 align:start position:0%
one preview which bring co-routines
 

01:01:05.020 --> 01:01:08.170 align:start position:0%
one preview which bring co-routines
coroutines<01:01:06.020><c> allow</c><01:01:06.230><c> you</c><01:01:06.410><c> to</c><01:01:06.620><c> write</c><01:01:07.180><c> a</c>

01:01:08.170 --> 01:01:08.180 align:start position:0%
coroutines allow you to write a
 

01:01:08.180 --> 01:01:10.600 align:start position:0%
coroutines allow you to write a
synchronous<01:01:09.170><c> code</c><01:01:09.380><c> without</c><01:01:09.920><c> using</c><01:01:10.220><c> callbacks</c>

01:01:10.600 --> 01:01:10.610 align:start position:0%
synchronous code without using callbacks
 

01:01:10.610 --> 01:01:14.950 align:start position:0%
synchronous code without using callbacks
for<01:01:10.760><c> example</c><01:01:11.180><c> for</c><01:01:11.750><c> simple</c><01:01:12.080><c> use</c><01:01:12.230><c> cases</c><01:01:13.960><c> now</c>

01:01:14.950 --> 01:01:14.960 align:start position:0%
for example for simple use cases now
 

01:01:14.960 --> 01:01:17.470 align:start position:0%
for example for simple use cases now
personally<01:01:15.950><c> I</c><01:01:16.250><c> prefer</c><01:01:16.310><c> using</c><01:01:16.760><c> reactive</c><01:01:17.210><c> API</c>

01:01:17.470 --> 01:01:17.480 align:start position:0%
personally I prefer using reactive API
 

01:01:17.480 --> 01:01:20.470 align:start position:0%
personally I prefer using reactive API
like<01:01:17.810><c> reactor</c><01:01:18.800><c> to</c><01:01:19.370><c> write</c><01:01:19.790><c> that</c><01:01:20.000><c> that's</c><01:01:20.300><c> much</c>

01:01:20.470 --> 01:01:20.480 align:start position:0%
like reactor to write that that's much
 

01:01:20.480 --> 01:01:23.650 align:start position:0%
like reactor to write that that's much
more<01:01:20.660><c> powerful</c><01:01:20.800><c> but</c><01:01:21.800><c> yeah</c><01:01:22.240><c> seems</c><01:01:23.240><c> to</c><01:01:23.480><c> think</c>

01:01:23.650 --> 01:01:23.660 align:start position:0%
more powerful but yeah seems to think
 

01:01:23.660 --> 01:01:25.540 align:start position:0%
more powerful but yeah seems to think
that<01:01:23.810><c> corrosion</c><01:01:24.200><c> is</c><01:01:24.440><c> nice</c><01:01:24.650><c> there</c><01:01:25.010><c> is</c><01:01:25.130><c> that</c><01:01:25.310><c> is</c>

01:01:25.540 --> 01:01:25.550 align:start position:0%
that corrosion is nice there is that is
 

01:01:25.550 --> 01:01:29.890 align:start position:0%
that corrosion is nice there is that is
in.net<01:01:26.030><c> word</c><01:01:26.380><c> so</c><01:01:27.380><c> as</c><01:01:28.060><c> soon</c><01:01:29.060><c> as</c><01:01:29.180><c> that</c><01:01:29.240><c> that's</c>

01:01:29.890 --> 01:01:29.900 align:start position:0%
in.net word so as soon as that that's
 

01:01:29.900 --> 01:01:32.380 align:start position:0%
in.net word so as soon as that that's
optional<01:01:30.530><c> so</c><01:01:30.830><c> that's</c><01:01:31.370><c> not</c><01:01:31.490><c> an</c><01:01:31.640><c> issue</c><01:01:31.700><c> type</c>

01:01:32.380 --> 01:01:32.390 align:start position:0%
optional so that's not an issue type
 

01:01:32.390 --> 01:01:34.930 align:start position:0%
optional so that's not an issue type
aliases<01:01:33.080><c> are</c><01:01:33.230><c> more</c><01:01:33.650><c> interesting</c><01:01:34.190><c> that</c><01:01:34.610><c> allow</c>

01:01:34.930 --> 01:01:34.940 align:start position:0%
aliases are more interesting that allow
 

01:01:34.940 --> 01:01:39.100 align:start position:0%
aliases are more interesting that allow
you<01:01:35.000><c> to</c><01:01:35.330><c> write</c><01:01:36.970><c> aliases</c><01:01:37.970><c> for</c><01:01:38.000><c> values</c><01:01:38.780><c> types</c>

01:01:39.100 --> 01:01:39.110 align:start position:0%
you to write aliases for values types
 

01:01:39.110 --> 01:01:42.880 align:start position:0%
you to write aliases for values types
and<01:01:39.460><c> this</c><01:01:40.460><c> type</c><01:01:41.360><c> eyelashes</c><01:01:41.840><c> are</c><01:01:42.080><c> replaced</c><01:01:42.620><c> at</c>

01:01:42.880 --> 01:01:42.890 align:start position:0%
and this type eyelashes are replaced at
 

01:01:42.890 --> 01:01:45.340 align:start position:0%
and this type eyelashes are replaced at
compile<01:01:43.250><c> time</c><01:01:43.280><c> so</c><01:01:43.700><c> that</c><01:01:43.910><c> this</c><01:01:44.450><c> as</c><01:01:44.690><c> zero</c><01:01:45.110><c> cost</c>

01:01:45.340 --> 01:01:45.350 align:start position:0%
compile time so that this as zero cost
 

01:01:45.350 --> 01:01:49.500 align:start position:0%
compile time so that this as zero cost
in<01:01:45.620><c> term</c><01:01:45.920><c> of</c><01:01:46.060><c> runtime</c><01:01:47.200><c> so</c><01:01:48.200><c> that's</c><01:01:49.040><c> also</c><01:01:49.220><c> to</c>

01:01:49.500 --> 01:01:49.510 align:start position:0%
in term of runtime so that's also to
 

01:01:49.510 --> 01:01:52.090 align:start position:0%
in term of runtime so that's also to
continue<01:01:50.510><c> to</c><01:01:50.720><c> improve</c><01:01:50.960><c> the</c><01:01:51.170><c> readability</c><01:01:51.410><c> when</c>

01:01:52.090 --> 01:01:52.100 align:start position:0%
continue to improve the readability when
 

01:01:52.100 --> 01:01:53.860 align:start position:0%
continue to improve the readability when
you<01:01:52.190><c> are</c><01:01:52.370><c> very</c><01:01:52.580><c> long</c><01:01:52.820><c> generics</c><01:01:53.270><c> for</c><01:01:53.420><c> example</c>

01:01:53.860 --> 01:01:53.870 align:start position:0%
you are very long generics for example
 

01:01:53.870 --> 01:01:56.470 align:start position:0%
you are very long generics for example
you<01:01:54.020><c> can</c><01:01:54.200><c> use</c><01:01:54.230><c> that</c><01:01:54.590><c> to</c><01:01:55.400><c> write</c><01:01:55.850><c> shorter</c><01:01:56.270><c> code</c>

01:01:56.470 --> 01:01:56.480 align:start position:0%
you can use that to write shorter code
 

01:01:56.480 --> 01:01:59.560 align:start position:0%
you can use that to write shorter code
and<01:01:56.780><c> yeah</c><01:01:57.290><c> that's</c><01:01:57.740><c> I</c><01:01:58.100><c> like</c><01:01:58.760><c> that</c><01:01:58.970><c> kind</c><01:01:59.150><c> of</c><01:01:59.330><c> zero</c>

01:01:59.560 --> 01:01:59.570 align:start position:0%
and yeah that's I like that kind of zero
 

01:01:59.570 --> 01:02:01.510 align:start position:0%
and yeah that's I like that kind of zero
cost<01:01:59.810><c> abstractions</c><01:02:00.530><c> that</c><01:02:00.770><c> allow</c><01:02:01.250><c> you</c><01:02:01.310><c> to</c>

01:02:01.510 --> 01:02:01.520 align:start position:0%
cost abstractions that allow you to
 

01:02:01.520 --> 01:02:04.390 align:start position:0%
cost abstractions that allow you to
write<01:02:01.700><c> better</c><01:02:02.090><c> code</c><01:02:02.590><c> there</c><01:02:03.590><c> will</c><01:02:03.740><c> be</c><01:02:03.770><c> Java</c>

01:02:04.390 --> 01:02:04.400 align:start position:0%
write better code there will be Java
 

01:02:04.400 --> 01:02:06.640 align:start position:0%
write better code there will be Java
Java<01:02:05.210><c> 8</c><01:02:05.480><c> byte</c><01:02:05.720><c> code</c><01:02:05.900><c> generation</c><01:02:06.230><c> because</c>

01:02:06.640 --> 01:02:06.650 align:start position:0%
Java 8 byte code generation because
 

01:02:06.650 --> 01:02:09.160 align:start position:0%
Java 8 byte code generation because
currently<01:02:07.160><c> contain</c><01:02:07.970><c> generator</c><01:02:08.450><c> a</c><01:02:08.570><c> six</c><01:02:08.930><c> byte</c>

01:02:09.160 --> 01:02:09.170 align:start position:0%
currently contain generator a six byte
 

01:02:09.170 --> 01:02:12.490 align:start position:0%
currently contain generator a six byte
code<01:02:09.970><c> even</c><01:02:10.970><c> if</c><01:02:11.090><c> the</c><01:02:11.300><c> language</c><01:02:11.810><c> is</c><01:02:11.990><c> much</c><01:02:12.320><c> more</c>

01:02:12.490 --> 01:02:12.500 align:start position:0%
code even if the language is much more
 

01:02:12.500 --> 01:02:17.890 align:start position:0%
code even if the language is much more
powerful<01:02:12.920><c> than</c><01:02:13.040><c> Java</c><01:02:13.400><c> 8</c><01:02:15.160><c> so</c><01:02:16.160><c> that</c><01:02:16.630><c> means</c><01:02:17.630><c> that</c>

01:02:17.890 --> 01:02:17.900 align:start position:0%
powerful than Java 8 so that means that
 

01:02:17.900 --> 01:02:22.060 align:start position:0%
powerful than Java 8 so that means that
with<01:02:18.230><c> Curtin</c><01:02:18.680><c> 1.1</c><01:02:20.080><c> they</c><01:02:21.080><c> will</c><01:02:21.230><c> be</c><01:02:21.350><c> able</c><01:02:21.500><c> to</c><01:02:21.860><c> use</c>

01:02:22.060 --> 01:02:22.070 align:start position:0%
with Curtin 1.1 they will be able to use
 

01:02:22.070 --> 01:02:24.850 align:start position:0%
with Curtin 1.1 they will be able to use
a<01:02:22.100><c> lambda</c><01:02:22.610><c> bad</c><01:02:23.510><c> collaborator</c><01:02:23.990><c> for</c><01:02:24.110><c> example</c><01:02:24.650><c> to</c>

01:02:24.850 --> 01:02:24.860 align:start position:0%
a lambda bad collaborator for example to
 

01:02:24.860 --> 01:02:27.520 align:start position:0%
a lambda bad collaborator for example to
to<01:02:25.130><c> implement</c><01:02:25.790><c> to</c><01:02:26.180><c> in</c><01:02:26.810><c> the</c><01:02:26.990><c> bytecode</c>

01:02:27.520 --> 01:02:27.530 align:start position:0%
to implement to in the bytecode
 

01:02:27.530 --> 01:02:29.800 align:start position:0%
to implement to in the bytecode
instead<01:02:28.130><c> of</c><01:02:28.280><c> generating</c><01:02:28.580><c> some</c><01:02:29.090><c> anonymous</c>

01:02:29.800 --> 01:02:29.810 align:start position:0%
instead of generating some anonymous
 

01:02:29.810 --> 01:02:35.170 align:start position:0%
instead of generating some anonymous
classes<01:02:33.040><c> salad</c><01:02:34.040><c> style</c><01:02:34.370><c> proxies</c><01:02:34.790><c> should</c><01:02:35.030><c> be</c>

01:02:35.170 --> 01:02:35.180 align:start position:0%
classes salad style proxies should be
 

01:02:35.180 --> 01:02:37.110 align:start position:0%
classes salad style proxies should be
possible<01:02:35.360><c> without</c><01:02:35.840><c> open</c><01:02:36.170><c> we</c><01:02:36.530><c> will</c><01:02:36.680><c> see</c><01:02:36.890><c> but</c>

01:02:37.110 --> 01:02:37.120 align:start position:0%
possible without open we will see but
 

01:02:37.120 --> 01:02:41.940 align:start position:0%
possible without open we will see but
that<01:02:38.140><c> that's</c><01:02:39.140><c> the</c><01:02:39.320><c> plan</c><01:02:39.560><c> and</c><01:02:39.910><c> we</c><01:02:40.910><c> will</c><01:02:41.090><c> have</c>

01:02:41.940 --> 01:02:41.950 align:start position:0%
that that's the plan and we will have
 

01:02:41.950 --> 01:02:44.490 align:start position:0%
that that's the plan and we will have
much<01:02:42.760><c> more</c><01:02:43.090><c> useable</c><01:02:43.630><c> cut</c><01:02:43.840><c> into</c><01:02:44.110><c> JavaScript</c>

01:02:44.490 --> 01:02:44.500 align:start position:0%
much more useable cut into JavaScript
 

01:02:44.500 --> 01:02:51.060 align:start position:0%
much more useable cut into JavaScript
compiler<01:02:47.700><c> and</c><01:02:48.700><c> the</c><01:02:48.760><c> last</c><01:02:49.720><c> point</c><01:02:49.960><c> so</c><01:02:50.350><c> that's</c><01:02:50.590><c> I</c>

01:02:51.060 --> 01:02:51.070 align:start position:0%
compiler and the last point so that's I
 

01:02:51.070 --> 01:02:55.550 align:start position:0%
compiler and the last point so that's I
have<01:02:51.880><c> seen</c><01:02:52.120><c> a</c><01:02:52.780><c> few</c><01:02:53.560><c> slide</c><01:02:53.830><c> about</c><01:02:54.070><c> that</c><01:02:54.310><c> so</c>

01:02:55.550 --> 01:02:55.560 align:start position:0%
have seen a few slide about that so
 

01:02:55.560 --> 01:02:58.440 align:start position:0%
have seen a few slide about that so
Kirkland<01:02:56.560><c> guys</c><01:02:56.890><c> seems</c><01:02:57.340><c> to</c><01:02:57.490><c> work</c><01:02:57.700><c> on</c><01:02:57.940><c> a</c><01:02:58.090><c> cut</c><01:02:58.270><c> in</c>

01:02:58.440 --> 01:02:58.450 align:start position:0%
Kirkland guys seems to work on a cut in
 

01:02:58.450 --> 01:03:01.440 align:start position:0%
Kirkland guys seems to work on a cut in
native<01:02:58.960><c> initiative</c><01:02:59.740><c> that</c><01:03:00.580><c> hold</c><01:03:00.910><c> the</c><01:03:01.060><c> load</c><01:03:01.240><c> to</c>

01:03:01.440 --> 01:03:01.450 align:start position:0%
native initiative that hold the load to
 

01:03:01.450 --> 01:03:04.850 align:start position:0%
native initiative that hold the load to
compile<01:03:01.840><c> code</c><01:03:02.290><c> clean</c><01:03:02.610><c> -</c><01:03:03.610><c> Nate</c><01:03:04.030><c> native</c><01:03:04.570><c> code</c>

01:03:04.850 --> 01:03:04.860 align:start position:0%
compile code clean - Nate native code
 

01:03:04.860 --> 01:03:09.000 align:start position:0%
compile code clean - Nate native code
thanks<01:03:05.860><c> to</c><01:03:05.980><c> an</c><01:03:06.340><c> LLVM</c><01:03:07.120><c> back</c><01:03:07.300><c> end</c><01:03:07.830><c> so</c><01:03:08.830><c> that's</c>

01:03:09.000 --> 01:03:09.010 align:start position:0%
thanks to an LLVM back end so that's
 

01:03:09.010 --> 01:03:11.220 align:start position:0%
thanks to an LLVM back end so that's
Vedas<01:03:09.460><c> time</c><01:03:09.640><c> compilation</c><01:03:09.970><c> that's</c><01:03:10.720><c> designed</c>

01:03:11.220 --> 01:03:11.230 align:start position:0%
Vedas time compilation that's designed
 

01:03:11.230 --> 01:03:14.340 align:start position:0%
Vedas time compilation that's designed
for<01:03:11.560><c> lightweight</c><01:03:12.430><c> runtime</c><01:03:12.970><c> to</c><01:03:13.930><c> target</c>

01:03:14.340 --> 01:03:14.350 align:start position:0%
for lightweight runtime to target
 

01:03:14.350 --> 01:03:17.250 align:start position:0%
for lightweight runtime to target
embedded<01:03:15.070><c> IOT</c><01:03:15.700><c> I</c><01:03:15.910><c> us</c><01:03:16.360><c> sing</c><01:03:16.630><c> like</c><01:03:16.780><c> that</c><01:03:16.810><c> and</c>

01:03:17.250 --> 01:03:17.260 align:start position:0%
embedded IOT I us sing like that and
 

01:03:17.260 --> 01:03:19.500 align:start position:0%
embedded IOT I us sing like that and
that<01:03:18.190><c> could</c><01:03:18.340><c> be</c><01:03:18.490><c> maybe</c><01:03:18.790><c> a</c><01:03:18.910><c> bridge</c><01:03:19.120><c> to</c><01:03:19.330><c> weather</c>

01:03:19.500 --> 01:03:19.510 align:start position:0%
that could be maybe a bridge to weather
 

01:03:19.510 --> 01:03:23.190 align:start position:0%
that could be maybe a bridge to weather
some<01:03:19.690><c> light</c><01:03:19.900><c> since</c><01:03:21.390><c> the</c><01:03:22.390><c> web</c><01:03:22.540><c> Assam</c><01:03:22.810><c> like</c><01:03:22.990><c> guy</c>

01:03:23.190 --> 01:03:23.200 align:start position:0%
some light since the web Assam like guy
 

01:03:23.200 --> 01:03:25.650 align:start position:0%
some light since the web Assam like guy
are<01:03:23.530><c> walking</c><01:03:24.010><c> on</c><01:03:24.040><c> LLVM</c><01:03:24.850><c> to</c><01:03:25.090><c> a</c><01:03:25.120><c> Bassam</c><01:03:25.510><c> lie</c>

01:03:25.650 --> 01:03:25.660 align:start position:0%
are walking on LLVM to a Bassam lie
 

01:03:25.660 --> 01:03:28.470 align:start position:0%
are walking on LLVM to a Bassam lie
compulsion<01:03:26.530><c> so</c><01:03:26.980><c> as</c><01:03:27.520><c> soon</c><01:03:27.670><c> as</c><01:03:27.820><c> you</c><01:03:28.000><c> are</c><01:03:28.150><c> able</c><01:03:28.330><c> to</c>

01:03:28.470 --> 01:03:28.480 align:start position:0%
compulsion so as soon as you are able to
 

01:03:28.480 --> 01:03:31.020 align:start position:0%
compulsion so as soon as you are able to
generate<01:03:29.160><c> weather</c><01:03:30.160><c> some</c><01:03:30.400><c> light</c><01:03:30.580><c> code</c>

01:03:31.020 --> 01:03:31.030 align:start position:0%
generate weather some light code
 

01:03:31.030 --> 01:03:32.910 align:start position:0%
generate weather some light code
intermediate<01:03:31.960><c> code</c><01:03:32.170><c> you</c><01:03:32.440><c> are</c><01:03:32.620><c> able</c><01:03:32.860><c> to</c>

01:03:32.910 --> 01:03:32.920 align:start position:0%
intermediate code you are able to
 

01:03:32.920 --> 01:03:36.390 align:start position:0%
intermediate code you are able to
generate<01:03:33.340><c> some</c><01:03:34.080><c> web</c><01:03:35.080><c> assembly</c><01:03:35.440><c> code</c><01:03:35.830><c> so</c><01:03:36.100><c> why</c>

01:03:36.390 --> 01:03:36.400 align:start position:0%
generate some web assembly code so why
 

01:03:36.400 --> 01:03:37.920 align:start position:0%
generate some web assembly code so why
not<01:03:36.640><c> using</c><01:03:36.850><c> that</c><01:03:37.120><c> to</c><01:03:37.360><c> generate</c><01:03:37.630><c> reverse</c>

01:03:37.920 --> 01:03:37.930 align:start position:0%
not using that to generate reverse
 

01:03:37.930 --> 01:03:43.230 align:start position:0%
not using that to generate reverse
online<01:03:38.260><c> we'd</c><01:03:39.040><c> say</c><01:03:41.370><c> that's</c><01:03:42.370><c> the</c><01:03:42.640><c> end</c><01:03:42.760><c> of</c><01:03:43.030><c> the</c>

01:03:43.230 --> 01:03:43.240 align:start position:0%
online we'd say that's the end of the
 

01:03:43.240 --> 01:03:45.990 align:start position:0%
online we'd say that's the end of the
presentation<01:03:43.990><c> if</c><01:03:44.770><c> you</c><01:03:44.980><c> have</c><01:03:45.130><c> some</c><01:03:45.400><c> question</c>

01:03:45.990 --> 01:03:46.000 align:start position:0%
presentation if you have some question
 

01:03:46.000 --> 01:03:59.529 align:start position:0%
presentation if you have some question
I'm<01:03:46.240><c> I'm</c><01:03:47.020><c> available</c><01:03:47.680><c> to</c><01:03:48.070><c> answer</c><01:03:49.140><c> Thanks</c>

01:03:59.529 --> 01:03:59.539 align:start position:0%
 
 

01:03:59.539 --> 01:04:06.469 align:start position:0%
 
excuse<01:04:00.539><c> me</c><01:04:02.630><c> into</c><01:04:03.630><c> the</c><01:04:03.749><c> G</c><01:04:03.900><c> IDE</c><01:04:05.150><c> yeah</c><01:04:06.150><c> as</c><01:04:06.420><c> a</c>

01:04:06.469 --> 01:04:06.479 align:start position:0%
excuse me into the G IDE yeah as a
 

01:04:06.479 --> 01:04:11.959 align:start position:0%
excuse me into the G IDE yeah as a
result<01:04:06.900><c> so</c><01:04:07.049><c> an</c><01:04:07.109><c> eclipse</c><01:04:07.410><c> plug-in</c><01:04:09.499><c> say</c><01:04:10.969><c> Vince</c>

01:04:11.959 --> 01:04:11.969 align:start position:0%
result so an eclipse plug-in say Vince
 

01:04:11.969 --> 01:04:13.429 align:start position:0%
result so an eclipse plug-in say Vince
I'm<01:04:12.179><c> not</c><01:04:12.390><c> sure</c><01:04:12.630><c> I</c><01:04:12.660><c> don't</c><01:04:12.809><c> think</c><01:04:13.019><c> there</c><01:04:13.319><c> is</c>

01:04:13.429 --> 01:04:13.439 align:start position:0%
I'm not sure I don't think there is
 

01:04:13.439 --> 01:04:16.009 align:start position:0%
I'm not sure I don't think there is
something<01:04:13.650><c> really</c><01:04:13.890><c> usable</c><01:04:14.489><c> but</c><01:04:14.640><c> in</c><01:04:15.479><c> GDG</c><01:04:15.869><c> ID</c>

01:04:16.009 --> 01:04:16.019 align:start position:0%
something really usable but in GDG ID
 

01:04:16.019 --> 01:04:18.979 align:start position:0%
something really usable but in GDG ID
and<01:04:16.439><c> Eclipse</c><01:04:16.799><c> are</c><01:04:17.069><c> both</c><01:04:17.429><c> use</c><01:04:18.179><c> able</c><01:04:18.509><c> to</c><01:04:18.749><c> to</c>

01:04:18.979 --> 01:04:18.989 align:start position:0%
and Eclipse are both use able to to
 

01:04:18.989 --> 01:04:22.279 align:start position:0%
and Eclipse are both use able to to
write<01:04:19.140><c> code</c><01:04:19.650><c> in</c><01:04:19.679><c> code</c><01:04:20.150><c> and</c><01:04:21.150><c> obviously</c><01:04:22.079><c> the</c>

01:04:22.279 --> 01:04:22.289 align:start position:0%
write code in code and obviously the
 

01:04:22.289 --> 01:04:23.989 align:start position:0%
write code in code and obviously the
better<01:04:22.499><c> the</c><01:04:22.589><c> better</c><01:04:22.739><c> support</c><01:04:23.160><c> is</c><01:04:23.339><c> in</c><01:04:23.519><c> IntelliJ</c>

01:04:23.989 --> 01:04:23.999 align:start position:0%
better the better support is in IntelliJ
 

01:04:23.999 --> 01:04:34.150 align:start position:0%
better the better support is in IntelliJ
IDE<01:04:24.269><c> but</c><01:04:24.479><c> that's</c><01:04:24.689><c> not</c><01:04:24.900><c> a</c><01:04:24.929><c> surprise</c>

01:04:34.150 --> 01:04:34.160 align:start position:0%
 
 

01:04:34.160 --> 01:04:35.790 align:start position:0%
 
yeah

01:04:35.790 --> 01:04:35.800 align:start position:0%
yeah
 

01:04:35.800 --> 01:04:39.300 align:start position:0%
yeah
yeah<01:04:36.460><c> it</c><01:04:36.640><c> will</c><01:04:36.820><c> work</c><01:04:37.090><c> so</c><01:04:37.650><c> it</c><01:04:38.650><c> will</c><01:04:38.860><c> work</c><01:04:39.100><c> in</c>

01:04:39.300 --> 01:04:39.310 align:start position:0%
yeah it will work so it will work in
 

01:04:39.310 --> 01:04:41.310 align:start position:0%
yeah it will work so it will work in
spring<01:04:39.640><c> tour</c><01:04:39.820><c> Suites</c><01:04:40.090><c> because</c><01:04:40.810><c> it's</c><01:04:40.990><c> based</c><01:04:41.200><c> on</c>

01:04:41.310 --> 01:04:41.320 align:start position:0%
spring tour Suites because it's based on
 

01:04:41.320 --> 01:04:43.560 align:start position:0%
spring tour Suites because it's based on
a<01:04:41.440><c> clip</c><01:04:41.620><c> so</c><01:04:41.920><c> yeah</c><01:04:42.610><c> yeah</c><01:04:42.730><c> that's</c><01:04:43.150><c> what</c><01:04:43.390><c> that</c>

01:04:43.560 --> 01:04:43.570 align:start position:0%
a clip so yeah yeah that's what that
 

01:04:43.570 --> 01:05:00.090 align:start position:0%
a clip so yeah yeah that's what that
will<01:04:43.750><c> work</c><01:04:43.900><c> pretty</c><01:04:44.050><c> well</c><01:04:50.490><c> okay</c><01:04:51.490><c> thanks</c>

01:05:00.090 --> 01:05:00.100 align:start position:0%
 
 

01:05:00.100 --> 01:05:02.160 align:start position:0%
 
you

