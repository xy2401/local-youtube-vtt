WEBVTT
Kind: captions
Language: zh-Hans

00:00:00.230 --> 00:00:05.879
欢迎观看此使用视频

00:00:02.340 --> 00:00:07.680
在Spring XD中与批处理作业一起流动，因此

00:00:05.879 --> 00:00:09.719
流的旧版本在视觉上起作用

00:00:07.680 --> 00:00:12.599
组成您的流此新版本

00:00:09.719 --> 00:00:15.240
您可以在xt-1 3中运行

00:00:12.599 --> 00:00:18.210
精心编排

00:00:15.240 --> 00:00:19.710
您的工作，所以在这里运行了XD 1 3 

00:00:18.210 --> 00:00:20.910
大多数标准模块是

00:00:19.710 --> 00:00:23.430
注册了几个额外的

00:00:20.910 --> 00:00:27.090
这些都很简单

00:00:23.430 --> 00:00:30.029
批处理简单示例的变体

00:00:27.090 --> 00:00:31.500
可以下车github，但什么也没做

00:00:30.029 --> 00:00:33.930
我在这里是在向你展示

00:00:31.500 --> 00:00:36.180
编排不是那么复杂

00:00:33.930 --> 00:00:38.309
做一个批处理工作，这很简单，我们将

00:00:36.180 --> 00:00:40.850
刚完成通常很简单

00:00:38.309 --> 00:00:44.010
很容易实际上通过退出

00:00:40.850 --> 00:00:45.870
失败状态，以便我们可以看到

00:00:44.010 --> 00:00:48.989
当工作失败时发生

00:00:45.870 --> 00:00:53.420
基于那些非常简单的业务流程

00:00:48.989 --> 00:00:57.030
我创建了一些基本模块

00:00:53.420 --> 00:00:58.500
定义，所以我们数据库很低

00:00:57.030 --> 00:01:00.750
创建报告可能需要

00:00:58.500 --> 00:01:02.609
数据库日期并转换成报告

00:01:00.750 --> 00:01:05.040
电子邮件报告整齐发送

00:01:02.609 --> 00:01:06.240
工作，所以这些应该是稍微

00:01:05.040 --> 00:01:07.470
更具现实意义

00:01:06.240 --> 00:01:09.000
但显然他们是基于这些

00:01:07.470 --> 00:01:12.570
实际上什么都不做的模块

00:01:09.000 --> 00:01:17.250
在幕后，我们将使用

00:01:12.570 --> 00:01:18.360
这些组成工作，因此用户界面看起来像

00:01:17.250 --> 00:01:19.680
有点类似于我们所拥有的

00:01:18.360 --> 00:01:22.950
流仅用户获得更多

00:01:19.680 --> 00:01:24.479
这次填充深度调色板电源

00:01:22.950 --> 00:01:25.650
与一些控制节点，我不会

00:01:24.479 --> 00:01:28.380
涵盖本视频中的

00:01:25.650 --> 00:01:29.880
未来更高级的视频，但您会

00:01:28.380 --> 00:01:31.380
看到定义就是我的一切

00:01:29.880 --> 00:01:33.920
在定义页面上向您展示了

00:01:31.380 --> 00:01:37.950
在您要建立的工作中使用

00:01:33.920 --> 00:01:39.420
所以每项工作都必须从头开始， 

00:01:37.950 --> 00:01:42.770
如果有任何标记，您会得到这些红色标记

00:01:39.420 --> 00:01:45.630
你的工作有问题，所以说

00:01:42.770 --> 00:01:48.329
没有什么没有导致最终状态

00:01:45.630 --> 00:01:50.970
所以这里没有真正的工作，所以让我们

00:01:48.329 --> 00:01:54.149
创建一些东西，所以我要拖

00:01:50.970 --> 00:01:54.720
卸下底座，我将其拖曳

00:01:54.149 --> 00:02:00.570
出

00:01:54.720 --> 00:02:01.740
创建报告就可以完成简单的工作

00:02:00.570 --> 00:02:03.090
看到我通过拖出

00:02:01.740 --> 00:02:07.429
模块，然后绘制链接

00:02:03.090 --> 00:02:09.629
如果您有一个更快的方法

00:02:07.429 --> 00:02:11.160
如果已有链接，则将其拖出

00:02:09.629 --> 00:02:11.770
你说插入模块

00:02:11.160 --> 00:02:13.870
流

00:02:11.770 --> 00:02:15.040
你不能只是把它们放在你会看到

00:02:13.870 --> 00:02:18.700
突出显示我要放弃

00:02:15.040 --> 00:02:22.840
带着一点婴儿床端口进入打击

00:02:18.700 --> 00:02:25.900
放到这里，所以看看我们已经

00:02:22.840 --> 00:02:27.250
现在要做的是我们不必做任何事情

00:02:25.900 --> 00:02:30.040
填写链接，我们建立了相同的

00:02:27.250 --> 00:02:32.560
您打开DSL视图所看到的

00:02:30.040 --> 00:02:35.860
 SLI的工作略有不同

00:02:32.560 --> 00:02:37.840
 SL中的这些流，这就是您的方式

00:02:35.860 --> 00:02:40.150
表示工作流程，因此

00:02:37.840 --> 00:02:41.650
事情要按顺序运行并使用

00:02:40.150 --> 00:02:48.670
这种双管道符号加入他们

00:02:41.650 --> 00:02:51.370
一起定义一下组成

00:02:48.670 --> 00:02:54.160
工作，我希望你跳入定义

00:02:51.370 --> 00:02:55.960
页面，我们将看到它，并且我们可以扩展

00:02:54.160 --> 00:02:59.500
在这里撰写工作，以了解

00:02:55.960 --> 00:03:02.470
他们的照片可以帮助您

00:02:59.500 --> 00:03:05.910
 DSO有点复杂，应该

00:03:02.470 --> 00:03:05.910
准备好进入“部署”页面

00:03:07.320 --> 00:03:16.060
演示一，让我们启动它将使

00:03:13.360 --> 00:03:18.310
它运行，然后我们应该看到

00:03:16.060 --> 00:03:20.440
执行结果

00:03:18.310 --> 00:03:24.340
页面完全可以记住

00:03:20.440 --> 00:03:25.870
这些简单的事情什么也没做，所以我们看到

00:03:24.340 --> 00:03:31.450
它在

00:03:25.870 --> 00:03:37.510
创建报告这很棒，现在还不是全部

00:03:31.450 --> 00:03:39.400
每次工作都会成功，所以我们做吧

00:03:37.510 --> 00:03:42.520
一些更详细的东西，所以我

00:03:39.400 --> 00:03:45.580
要开始一样，所以我们

00:03:42.520 --> 00:03:48.610
要加载数据库，我们要

00:03:45.580 --> 00:03:54.210
通常创建一个称为X的谈话

00:03:48.610 --> 00:03:54.210
请稍等，然后发送电子邮件

00:03:56.900 --> 00:04:01.640
所以这跟以前渴望的一样

00:03:59.690 --> 00:04:05.209
 x是韩国报告的变体，使用

00:04:01.640 --> 00:04:06.739
该作业模块被硬编码为失败，因此

00:04:05.209 --> 00:04:11.540
这个家伙要与一个混合

00:04:06.739 --> 00:04:13.190
失败的退出状态和批处理条款现在

00:04:11.540 --> 00:04:15.140
这些实线往往代表什么

00:04:13.190 --> 00:04:17.870
发生在每条工作的快乐之路

00:04:15.140 --> 00:04:19.070
如果您的工作成功完成

00:04:17.870 --> 00:04:22.400
将会有不同的出口

00:04:19.070 --> 00:04:26.780
您可以实际定义的状态

00:04:22.400 --> 00:04:30.530
替代发光，所以我在这里添加

00:04:26.780 --> 00:04:33.830
整理工作，但我只想跑步

00:04:30.530 --> 00:04:35.060
如果这项工作X是为什么只有失败

00:04:33.830 --> 00:04:37.520
正常完成，我想阅读电子邮件

00:04:35.060 --> 00:04:39.490
报告，以便当我将鼠标悬停在链接上时

00:04:37.520 --> 00:04:41.510
你会看到我得到一个齿轮

00:04:39.490 --> 00:04:42.800
点击它，它告诉我我

00:04:41.510 --> 00:04:45.740
设置此链接的属性

00:04:42.800 --> 00:04:50.570
在这两个工作之间，我可以设置

00:04:45.740 --> 00:04:52.550
工作退出的事情，所以现在你可以看到

00:04:50.570 --> 00:04:54.470
如果创建报告X失败

00:04:52.550 --> 00:04:56.930
如果成功，我们会拖延时间

00:04:54.470 --> 00:05:02.930
运行电子邮件报告此作业格式正确

00:04:56.930 --> 00:05:06.370
让我们来衡量一下

00:05:02.930 --> 00:05:06.370
部署，她会准备出发

00:05:09.789 --> 00:05:13.599
然后启动

00:05:19.949 --> 00:05:28.000
两次处决，你会看到

00:05:26.169 --> 00:05:31.030
是怎么回事你好数据库

00:05:28.000 --> 00:05:33.099
回合成功了，那真的

00:05:31.030 --> 00:05:35.590
完成了很棒的报告斧四舍五入

00:05:33.099 --> 00:05:37.569
不能通过该课程的顾问

00:05:35.590 --> 00:05:39.550
到整齐的过渡环节

00:05:37.569 --> 00:05:41.710
然后完全忽略我的工作

00:05:39.550 --> 00:05:48.009
因此没有电子邮件报告的迹象

00:05:41.710 --> 00:05:50.169
运行正常，这就是您可以做的

00:05:48.009 --> 00:05:52.569
简单流程然后介绍

00:05:50.169 --> 00:05:54.690
有条件的流动取决于工作

00:05:52.569 --> 00:05:58.419
工作退出状态

00:05:54.690 --> 00:06:01.719
现在您可以并行运行

00:05:58.419 --> 00:06:03.370
分批拆分，所以假设我

00:06:01.719 --> 00:06:14.469
实际上有多个可以加载的作业

00:06:03.370 --> 00:06:16.150
在三天内建立一个数据库

00:06:14.469 --> 00:06:19.650
这些链接被调节

00:06:16.150 --> 00:06:19.650
是说我想跑这三件事

00:06:23.039 --> 00:06:30.520
同时好吧，这说

00:06:28.599 --> 00:06:33.340
创建报告只能运行一次

00:06:30.520 --> 00:06:35.529
三个家伙已经看完了

00:06:33.340 --> 00:06:38.050
 DSL表示这是您的方式

00:06:35.529 --> 00:06:39.789
表达我的分裂，所以尖括号

00:06:38.050 --> 00:06:43.389
划定起点和终点， 

00:06:39.789 --> 00:06:44.740
然后“＆”号指示您

00:06:43.389 --> 00:06:46.599
想并行运行，所以我们在这里

00:06:44.740 --> 00:06:48.909
低数据库与低并行运行

00:06:46.599 --> 00:06:54.849
数据库-与低并行

00:06:48.909 --> 00:06:59.229
数据库的东西，没有什么可做的

00:06:54.849 --> 00:07:05.560
停止您混合这些拆分并

00:06:59.229 --> 00:07:11.680
关闭，假设我让我们抓住

00:07:05.560 --> 00:07:13.210
随机工作，所以现在我说这些

00:07:11.680 --> 00:07:14.440
单个作业与

00:07:13.210 --> 00:07:17.469
这两个主要工作

00:07:14.440 --> 00:07:19.569
顺序，我正在向您展示这一努力

00:07:17.469 --> 00:07:22.060
创造更好的草可以分解

00:07:19.569 --> 00:07:22.780
这些链接只需点击中间的

00:07:22.060 --> 00:07:27.310
他们

00:07:22.780 --> 00:07:29.470
你可以做到的一点很好

00:07:27.310 --> 00:07:40.450
工匠拍了一些截图没

00:07:29.470 --> 00:07:41.980
需要定向，所以他能够做

00:07:40.450 --> 00:07:44.320
这样的东西，你可以看到它

00:07:41.980 --> 00:07:45.910
混合了概念，所以没有数据库

00:07:44.320 --> 00:07:48.280
付款并行是数据库不足

00:07:45.910 --> 00:07:52.660
与这两个流程平行

00:07:48.280 --> 00:07:55.680
现在，您可以将这些东西混合在一起

00:07:52.660 --> 00:08:02.010
过渡的东西也是如此

00:07:55.680 --> 00:08:08.550
数据库低十六进制错误退出

00:08:02.010 --> 00:08:08.550
因此我们可以在此处创建其他链接

00:08:18.720 --> 00:08:22.660
所以如果他们执行数据库

00:08:21.130 --> 00:08:24.010
正常运行，否则运行演示

00:08:22.660 --> 00:08:25.570
我们要整理一下然后运行

00:08:24.010 --> 00:08:28.979
创建报告，因为这些人可能

00:08:25.570 --> 00:08:32.080
无论如何已经在数据库中添加了一些有用的东西

00:08:28.979 --> 00:08:35.979
这就是建立基本流程的方式

00:08:32.080 --> 00:08:38.080
使用流程和使用方式进行拆分

00:08:35.979 --> 00:08:39.580
过渡链接还有更多的东西

00:08:38.080 --> 00:08:41.140
您可以包括为什么需要这些

00:08:39.580 --> 00:08:44.640
控制笔记，但这是为了未来

00:08:41.140 --> 00:08:44.640
视频感谢您的观看

