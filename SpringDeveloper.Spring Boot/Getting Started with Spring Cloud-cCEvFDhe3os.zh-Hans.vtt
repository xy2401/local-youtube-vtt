WEBVTT
Kind: captions
Language: zh-Hans

00:00:08.910 --> 00:00:14.910
谢谢大家来我需要

00:00:12.660 --> 00:00:17.279
一张照片，你们就是我所需要的

00:00:14.910 --> 00:00:21.350
你说开源现在可以

00:00:17.279 --> 00:00:24.900
说，在我们拍照之前- 

00:00:21.350 --> 00:00:29.789
安娜哦，太好了，这么多钱

00:00:24.900 --> 00:00:34.620
谢谢你，现在太好了，这就是

00:00:29.789 --> 00:00:38.280
惊人的无与伦比的

00:00:34.620 --> 00:00:39.870
令人难以置信的博士父亲，他是有偿的

00:00:38.280 --> 00:00:44.159
注意代码而不是我们

00:00:39.870 --> 00:00:49.500
为什么我们喜欢他，我叫乔希，我叫我

00:00:44.159 --> 00:00:51.570
是乔希吗，我要父亲

00:00:49.500 --> 00:00:53.720
叫他博士。云原生他是你

00:00:51.570 --> 00:00:56.879
想告诉我们有关你自己的话题吧

00:00:53.720 --> 00:00:59.220
你可以读写吧

00:00:56.879 --> 00:01:01.409
他是贡献者之一

00:00:59.220 --> 00:01:03.600
 Spring Spring联合创始人

00:01:01.409 --> 00:01:06.840
 Spring Security的联合创始人哦

00:01:03.600 --> 00:01:08.549
 spring boot 和Spring 云基本上

00:01:06.840 --> 00:01:10.560
他得到了我们在这里想要做的事情， 

00:01:08.549 --> 00:01:15.180
然后他告诉我们我们要做什么

00:01:10.560 --> 00:01:17.159
嗯，我是个 Spring 的家伙，哦，是的，有些

00:01:15.180 --> 00:01:19.320
 Spring ，谢谢你今天加入我

00:01:17.159 --> 00:01:21.630
博士来他要确保我不

00:01:19.320 --> 00:01:25.409
搞砸了我的角色是要慢

00:01:21.630 --> 00:01:27.210
如果一切都对，他就倒下，所以我

00:01:25.409 --> 00:01:28.380
如果有人有可能需要一些帮助

00:01:27.210 --> 00:01:32.640
是的

00:01:28.380 --> 00:01:35.250
不要犹豫，拜托我，我很好

00:01:32.640 --> 00:01:38.600
这是一张不相关的旧幻灯片，现在

00:01:35.250 --> 00:01:41.609
幻灯片已过期，这是一个谎言，我是

00:01:38.600 --> 00:01:43.670
不是防御不是决定性的

00:01:41.609 --> 00:01:45.890
文章不定冠词a 

00:01:43.670 --> 00:01:48.240
关键开发人员的 Spring 开发者倡导者

00:01:45.890 --> 00:01:50.490
那是我的电子邮件，我的Twitter有多少

00:01:48.240 --> 00:01:52.590
你们中的2015年在Twitter上的表现如何

00:01:50.490 --> 00:01:57.689
在Twitter的Ted Twitter上的许多人

00:01:52.590 --> 00:02:00.030
没有人没人没人尴尬好吧好吧

00:01:57.689 --> 00:02:00.479
没关系，这是我的东西

00:02:00.030 --> 00:02:03.179
朋友们

00:02:00.479 --> 00:02:04.770
 Twitter的，如果你在那里，那就随身携带

00:02:03.179 --> 00:02:06.509
毫无疑问，你在讨论

00:02:04.770 --> 00:02:08.520
也要离开这个房间

00:02:06.509 --> 00:02:10.130
困扰，你想发泄

00:02:08.520 --> 00:02:14.010
在Twitter上找到我，我们会谈

00:02:10.130 --> 00:02:15.870
我们会说出来，好好拥抱，嗯，我是

00:02:14.010 --> 00:02:17.940
要丢下冠军，我打开金牛座

00:02:15.870 --> 00:02:19.670
我是bug的主要贡献者

00:02:17.940 --> 00:02:22.670
许多美好的 Spring 项目没有

00:02:19.670 --> 00:02:28.430
最少的是 spring boot 

00:02:22.670 --> 00:02:31.099
云翻新等等，我有

00:02:28.430 --> 00:02:32.470
一个特别的客人，因为你看到我们有

00:02:31.099 --> 00:02:35.440
一个特别的客人，但是你看到

00:02:32.470 --> 00:02:37.310
当今建筑应用的经济学

00:02:35.440 --> 00:02:40.069
他们和他们有很大的不同

00:02:37.310 --> 00:02:41.330
在15年前或13年前

00:02:40.069 --> 00:02:44.569
当 Spring 开始冒险时

00:02:41.330 --> 00:02:46.489
但仍然有些事情仍然存在

00:02:44.569 --> 00:02:49.280
永远真实，所以我希望邀请

00:02:46.489 --> 00:02:50.930
博士罗布·约翰逊（Rob Johnson）登台演讲

00:02:49.280 --> 00:02:54.310
大约一分钟

00:02:50.930 --> 00:02:54.310
或五个或您真正想要的任何东西

00:02:56.799 --> 00:03:07.549
欢迎明星哦，谢谢乔希

00:03:02.090 --> 00:03:11.540
谢谢您，先生，好的

00:03:07.549 --> 00:03:13.730
它继续，所以这实际上是第一个

00:03:11.540 --> 00:03:15.709
我讲过的 Spring 

00:03:13.730 --> 00:03:19.190
五年，这很有趣

00:03:15.709 --> 00:03:21.890
经验，很高兴看到我的想法

00:03:19.190 --> 00:03:25.430
参加人数最多

00:03:21.890 --> 00:03:29.269
正如我所说的在 Spring 看老朋友

00:03:25.430 --> 00:03:31.070
就像乔希所说的 Spring 

00:03:29.269 --> 00:03:32.989
后退很长一段路

00:03:31.070 --> 00:03:35.750
昨天我走来走去

00:03:32.989 --> 00:03:38.660
华盛顿和我的老友尤尔根（Jurgen） 

00:03:35.750 --> 00:03:41.750
你好，当然，我希望大家都知道

00:03:38.660 --> 00:03:44.750
是一个传奇的编码器，我不使用

00:03:41.750 --> 00:03:46.670
这个词轻轻地变成了传奇的编码器， 

00:03:44.750 --> 00:03:48.410
你知道 Spring 的心灵

00:03:46.670 --> 00:03:51.440
框架和已经有所作为

00:03:48.410 --> 00:03:54.019
像12到13年，所以我和瑜伽

00:03:51.440 --> 00:03:56.090
在华盛顿和一对夫妇周围散步

00:03:54.019 --> 00:03:58.549
发生的事情是我得到了

00:03:56.090 --> 00:04:00.680
桑达·尤尔根（Jurgen）颇为乐观

00:03:58.549 --> 00:04:03.950
被晒伤了，但我在那里比

00:04:00.680 --> 00:04:08.299
其他人，但我们也有点

00:04:03.950 --> 00:04:12.799
回顾过去的13年，以及如何

00:04:08.299 --> 00:04:15.200
事情发生了变化，所以当 Spring 

00:04:12.799 --> 00:04:17.329
 Spring 婚礼的第一个代码是

00:04:15.200 --> 00:04:19.440
发表它当然是发表我的

00:04:17.329 --> 00:04:21.620
第一本书

00:04:19.440 --> 00:04:24.120
 30:21它甚至是预先的

00:04:21.620 --> 00:04:27.420
开源的，所以考虑一下

00:04:24.120 --> 00:04:29.250
片刻的2002年世界

00:04:27.420 --> 00:04:32.460
华盛顿，你无法避免的思考

00:04:29.250 --> 00:04:35.040
关于政治布什总统很早

00:04:32.460 --> 00:04:37.380
如果他不认为这是他的第一学期

00:04:35.040 --> 00:04:39.000
真的有人想到

00:04:37.380 --> 00:04:44.630
共和党总统可能是

00:04:39.000 --> 00:04:49.080
唐纳德·特朗普（Donald Trump）和科技界

00:04:44.630 --> 00:04:52.110
事情非常不同，所以在

00:04:49.080 --> 00:04:55.610
我最初可以看到的一点是

00:04:52.110 --> 00:05:00.270
应对真正的可怕

00:04:55.610 --> 00:05:03.210
 EJB之类的复杂性给您

00:05:00.270 --> 00:05:06.120
了解这些早期的WebLogic Websphere 

00:05:03.210 --> 00:05:08.340
 Healy整体应用服务器

00:05:06.120 --> 00:05:10.200
真正的设计没有

00:05:08.340 --> 00:05:12.350
关于是否

00:05:10.200 --> 00:05:14.640
开发人员实际上会享受生活

00:05:12.350 --> 00:05:17.910
开发人员实际上可以得到的地方

00:05:14.640 --> 00:05:21.150
做任何事情，我已经是一个

00:05:17.910 --> 00:05:24.810
厌倦了EJB，他比

00:05:21.150 --> 00:05:27.810
我不记得了，但是AJ Gator的

00:05:24.810 --> 00:05:31.230
太糟糕了，那是那个世界

00:05:27.810 --> 00:05:34.110
 Spring 的愿景是使

00:05:31.230 --> 00:05:36.300
对您了解的开发人员而言简单的事情

00:05:34.110 --> 00:05:38.550
获得那种复杂性获得样板

00:05:36.300 --> 00:05:40.620
让开发人员可以

00:05:38.550 --> 00:05:43.830
实际实施业务逻辑

00:05:40.620 --> 00:05:48.300
提供业务价值，因此

00:05:43.830 --> 00:05:51.870
 Spring 真的是三个核心思想

00:05:48.300 --> 00:05:54.240
放在这张幻灯片上，我

00:05:51.870 --> 00:05:56.220
实际上从我所拥有的甲板上退出

00:05:54.240 --> 00:06:00.900
我的笔记本电脑，我相信这是从谈话中

00:05:56.220 --> 00:06:03.870
我给AT＆T st。 2007年的路易斯

00:06:00.900 --> 00:06:08.160
这张幻灯片在我们的培训中

00:06:03.870 --> 00:06:10.140
我和我在很多谈话中

00:06:08.160 --> 00:06:12.000
论文如何给我，我年轻而公正

00:06:10.140 --> 00:06:13.980
提到他有时会带你

00:06:12.000 --> 00:06:16.620
滑上去，你可以说不是

00:06:13.980 --> 00:06:18.940
即使是 Spring ，所以它的品牌是e 

00:06:16.620 --> 00:06:20.560
面对21个品牌

00:06:18.940 --> 00:06:23.890
 SpringSource实体的原始名称

00:06:20.560 --> 00:06:25.650
所以基本上有三个核心

00:06:23.890 --> 00:06:28.660
之前的想法

00:06:25.650 --> 00:06:32.470
外部依赖注入

00:06:28.660 --> 00:06:34.570
配置离子化一些

00:06:32.470 --> 00:06:37.420
交易管理之类的行为

00:06:34.570 --> 00:06:39.160
一堆其他的事情，这样做

00:06:37.420 --> 00:06:42.430
它不会使它复杂化或令人垂涎

00:06:39.160 --> 00:06:44.230
最后是可移植服务抽象

00:06:42.430 --> 00:06:46.960
因此，例如，如果您要

00:06:44.230 --> 00:06:49.720
交易管理很棒

00:06:46.960 --> 00:06:50.680
有一个透明的使用AOP，但如何

00:06:49.720 --> 00:06:53.020
它会工作

00:06:50.680 --> 00:06:56.650
如何保证能正常工作

00:06:53.020 --> 00:06:58.210
在每个环境中都非常强大

00:06:56.650 --> 00:07:00.130
最后一个问题的答案

00:06:58.210 --> 00:07:03.760
如何保证它真正起作用

00:07:00.130 --> 00:07:07.240
可靠的是，您好吗？ 

00:07:03.760 --> 00:07:12.100
背面和另一侧的蓝色衬衫

00:07:07.240 --> 00:07:15.010
你知道我用的这三个关键

00:07:12.100 --> 00:07:16.870
今天同样如此，所以当我们看

00:07:15.010 --> 00:07:18.550
在当今世界上，我们显然不是

00:07:16.870 --> 00:07:23.640
我们不是在考虑布什总统

00:07:18.550 --> 00:07:27.100
想着总统Truong和

00:07:23.640 --> 00:07:30.280
我们生活在一个古老的世界

00:07:27.100 --> 00:07:32.650
我正确的问题在哪里逻辑

00:07:30.280 --> 00:07:34.960
您知道的WebSphere II甚至认为

00:07:32.650 --> 00:07:36.700
没有您了解IBM和Oracle 

00:07:34.960 --> 00:07:39.490
知道布雷特的那些产品

00:07:36.700 --> 00:07:42.070
单片应用服务器甚至是历史

00:07:39.490 --> 00:07:44.350
 Tomcat之类的主要角色

00:07:42.070 --> 00:07:46.810
你知道真的很热的东西吗

00:07:44.350 --> 00:07:48.580
这也在减少，因为

00:07:46.810 --> 00:07:50.980
一切都将与微服务有关

00:07:48.580 --> 00:07:54.460
这实际上是整个概念

00:07:50.980 --> 00:07:56.410
单片服务器变得无关紧要

00:07:54.460 --> 00:08:00.040
但有趣的是，尽管

00:07:56.410 --> 00:08:02.500
这改变了这三个核心思想

00:08:00.040 --> 00:08:06.220
在 Spring 之后，当然还有很多

00:08:02.500 --> 00:08:09.610
实现它们的非常好的代码是

00:08:06.220 --> 00:08:12.190
同样重要，例如当我们

00:08:09.610 --> 00:08:13.840
想想云的世界

00:08:12.190 --> 00:08:16.390
激动人心的世界，但这真是太好了

00:08:13.840 --> 00:08:18.190
所有闪亮，你就去尝试使用

00:08:16.390 --> 00:08:21.190
例如Netflix和

00:08:18.190 --> 00:08:23.650
其他项目不使用spring但是

00:08:21.190 --> 00:08:25.810
这很有趣，您会发现

00:08:23.650 --> 00:08:28.450
你正在写大量的血液

00:08:25.810 --> 00:08:31.120
它不会在那里

00:08:28.450 --> 00:08:35.470
您知道诸如JDI查找之类的事情

00:08:31.120 --> 00:08:37.690
在 Spring 存在之前必须手工做

00:08:35.470 --> 00:08:41.320
所以本质上那些核心思想是

00:08:37.690 --> 00:08:43.870
今天仍然结出果实，显然

00:08:41.320 --> 00:08:47.950
非常棒的 Spring 团队

00:08:43.870 --> 00:08:52.780
很棒的 Spring 社区是关键

00:08:47.950 --> 00:08:57.370
背后的人，这令人兴奋

00:08:52.780 --> 00:08:59.740
我，我认为斯普林斯的新弦乐

00:08:57.370 --> 00:09:01.990
已添加，例如当您

00:08:59.740 --> 00:09:04.300
看春书有这本

00:09:01.990 --> 00:09:05.530
简化的区域主题是

00:09:04.300 --> 00:09:08.650
仍然黑桃

00:09:05.530 --> 00:09:11.790
但实际上你里面有你

00:09:08.650 --> 00:09:14.500
接近您知道的默认值

00:09:11.790 --> 00:09:16.300
从根本上简化配置，因此

00:09:14.500 --> 00:09:19.450
你知道我认为它保留了所有这些

00:09:16.300 --> 00:09:21.940
键值并添加其他内容

00:09:19.450 --> 00:09:23.740
继续那个 Spring 任务，所以你

00:09:21.940 --> 00:09:27.970
知道当我看着 Spring 伯格 Spring 

00:09:23.740 --> 00:09:29.620
今天对我来说尤其是乌云

00:09:27.970 --> 00:09:34.180
似乎在继续执行任务

00:09:29.620 --> 00:09:36.970
任务，我想去追求

00:09:34.180 --> 00:09:39.430
政治类比，因为它是

00:09:36.970 --> 00:09:43.270
 Spring 在这里不可避免

00:09:39.430 --> 00:09:45.880
工会正在举行，以至于我不会

00:09:43.270 --> 00:09:49.810
花更多的时间我会交给

00:09:45.880 --> 00:09:53.290
我的朋友戴夫和乔希

00:09:49.810 --> 00:09:57.010
戴夫，我想我可能先在

00:09:53.290 --> 00:09:59.230
 2005年，您加入了Interface 21 

00:09:57.010 --> 00:10:01.630
在2006年7月7日发生的事情

00:09:59.230 --> 00:10:05.170
别人的积蓄，有人厌倦了

00:10:01.630 --> 00:10:08.080
炸弹清除没有205没有得到某人的

00:10:05.170 --> 00:10:13.180
朝着MFM前进，哦，好，那是

00:10:08.080 --> 00:10:14.500
是的，伦敦，是的，我们实际上是第一个

00:10:13.180 --> 00:10:15.880
花了大量时间

00:10:14.500 --> 00:10:17.030
一起在会议室里

00:10:15.880 --> 00:10:19.880
李不能

00:10:17.030 --> 00:10:21.920
自四月伦敦关闭以来，我

00:10:19.880 --> 00:10:24.230
还不太了解乔希

00:10:21.920 --> 00:10:25.970
很久了，但您知道给您留下深刻的印象

00:10:24.230 --> 00:10:28.160
他对成就的热情

00:10:25.970 --> 00:10:31.210
在sprint社区中，谢谢大家

00:10:28.160 --> 00:10:31.210
感谢棒

00:10:32.830 --> 00:10:38.870
谢谢你，真的很高兴听到

00:10:36.470 --> 00:10:40.310
竿说那是因为

00:10:38.870 --> 00:10:42.590
那就是我当时的感受

00:10:40.310 --> 00:10:45.140
编写 spring boot 和Spring 的位

00:10:42.590 --> 00:10:47.510
云，我当时想这一定是

00:10:45.140 --> 00:10:49.040
感觉就像你在

00:10:47.510 --> 00:10:51.080
开始一定是这样的

00:10:49.040 --> 00:10:53.450
基本上这就是他的意思

00:10:51.080 --> 00:10:59.720
我们做对了

00:10:53.450 --> 00:11:07.900
所以谢谢杆谢谢杆好的

00:10:59.720 --> 00:11:07.900
对，所以嗯，继续前进吧

00:11:08.380 --> 00:11:13.670
博士syenite我们在关键的地方工作， 

00:11:11.690 --> 00:11:15.320
我们花很多时间与用户交谈

00:11:13.670 --> 00:11:16.790
对开发人员，对

00:11:15.320 --> 00:11:19.760
尝试构建应用程序，我们已经

00:11:16.790 --> 00:11:24.170
看到他们认识到价值

00:11:19.760 --> 00:11:26.210
迁移到自动化平台的过程

00:11:24.170 --> 00:11:29.780
减少您发现的浪费

00:11:26.210 --> 00:11:31.400
所谓的水乱落筒仓是

00:11:29.780 --> 00:11:32.660
你在哪里敏捷开发

00:11:31.400 --> 00:11:34.790
由软件人员完成，但随后您

00:11:32.660 --> 00:11:36.620
浪费在边缘上

00:11:34.790 --> 00:11:39.020
之前和之后，这需要时间

00:11:36.620 --> 00:11:40.450
减少了我们的遗憾，它增加了时钟

00:11:39.020 --> 00:11:42.290
部署时间，我们看到客户

00:11:40.450 --> 00:11:45.230
努力使他们的代码在那里

00:11:42.290 --> 00:11:46.520
和更快的权利，所以我们知道

00:11:45.230 --> 00:11:48.320
为了让他们得到他们的代码

00:11:46.520 --> 00:11:49.910
那里更快并且能够处理

00:11:48.320 --> 00:11:52.910
更多的开发人员在处理他们的代码

00:11:49.910 --> 00:11:54.650
有一个门槛，你

00:11:52.910 --> 00:11:56.480
必须要找到它的位置

00:11:54.650 --> 00:11:58.670
方便地编写软件然后

00:11:56.480 --> 00:12:01.880
部署它并让它参与其中

00:11:58.670 --> 00:12:03.770
由同步变更控制

00:12:01.880 --> 00:12:05.780
其他人也有规模

00:12:03.770 --> 00:12:07.700
人们要求的容量需求

00:12:05.780 --> 00:12:09.670
构建应用程序以满足更大的需求

00:12:07.700 --> 00:12:12.260
观众比以前多了

00:12:09.670 --> 00:12:14.390
社交和移动等司机

00:12:12.260 --> 00:12:16.160
对，这些事情意味着

00:12:14.390 --> 00:12:18.380
互联网不仅仅是桌面浏览器

00:12:16.160 --> 00:12:21.290
这意味着任何人走进来

00:12:18.380 --> 00:12:24.320
他们的口袋可能是一个设备

00:12:21.290 --> 00:12:26.900
一直有很多要求

00:12:24.320 --> 00:12:27.830
看到域和应用程序得到

00:12:26.900 --> 00:12:31.370
更复杂

00:12:27.830 --> 00:12:32.750
更复杂的一致性

00:12:31.370 --> 00:12:34.640
域的脆度

00:12:32.750 --> 00:12:36.320
开始时域开始模糊

00:12:34.640 --> 00:12:37.670
添加更多的边缘，所以所有这些

00:12:36.320 --> 00:12:39.800
原因以及更多是人们的原因

00:12:37.670 --> 00:12:41.660
正在转向这种微服务模型

00:12:39.800 --> 00:12:43.370
他们有一个自动平台，但是

00:12:41.660 --> 00:12:45.650
他们正在尝试编写软件来

00:12:43.370 --> 00:12:47.240
充分利用该平台，那就是

00:12:45.650 --> 00:12:48.500
微服务能给您带来什么

00:12:47.240 --> 00:12:51.800
小写能力

00:12:48.500 --> 00:12:53.680
重点突出的服务，效果很好

00:12:51.800 --> 00:12:58.820
解释点这个云平台

00:12:53.680 --> 00:13:00.980
但是分布式计算不是

00:12:58.820 --> 00:13:02.840
容易的权利

00:13:00.980 --> 00:13:04.850
当你移动时会有痛苦

00:13:02.840 --> 00:13:06.740
这个世界，自然而然地

00:13:04.850 --> 00:13:09.200
我们希望 Spring 有云的地方

00:13:06.740 --> 00:13:11.780
建立在 spring boot 上可以帮助

00:13:09.200 --> 00:13:13.820
 Spring Cloud整合了最好的

00:13:11.780 --> 00:13:16.010
的巨人的阅读模式

00:13:13.820 --> 00:13:17.420
网络已经为我们发现了

00:13:16.010 --> 00:13:21.110
他们庞大的研发预算及其

00:13:17.420 --> 00:13:23.420
现在我们进行了大量的工程投资

00:13:21.110 --> 00:13:25.640
你知道我们可以接受的凡人

00:13:23.420 --> 00:13:28.040
来自Netflix和

00:13:25.640 --> 00:13:29.690
 Twitter等并构建软件

00:13:28.040 --> 00:13:31.550
他们做得一样快， 

00:13:29.690 --> 00:13:32.510
敏捷E，因为他们这样做，这就是我们要去的地方

00:13:31.550 --> 00:13:33.590
谈论今天，我们将要谈论

00:13:32.510 --> 00:13:34.580
关于你要走的这些模式

00:13:33.590 --> 00:13:38.870
当您建立一个

00:13:34.580 --> 00:13:43.580
我将成为分布式系统

00:13:38.870 --> 00:13:46.190
编码，因为博士。先生，您知道他他

00:13:43.580 --> 00:13:47.720
写下了 Spring 的所有代码

00:13:46.190 --> 00:13:49.670
靴子和Spring 云以及其他

00:13:47.720 --> 00:13:51.860
非常有才华的人，然后他

00:13:49.670 --> 00:13:52.970
记录下来，并使其惊人，但我

00:13:51.860 --> 00:13:56.110
觉得我真的在做所有工作

00:13:52.970 --> 00:13:56.110
这里让我们清楚一点

00:13:56.930 --> 00:14:01.790
所以我们要去建立一个新的

00:13:59.540 --> 00:14:04.340
应用程序，我们要去我的

00:14:01.790 --> 00:14:06.110
网上其他我最喜欢的地方

00:14:04.340 --> 00:14:08.210
网络上最喜欢的地方开始了

00:14:06.110 --> 00:14:10.700
带来真正的味道是什么

00:14:08.210 --> 00:14:12.560
最喜欢的制作哦喜欢

00:14:10.700 --> 00:14:16.130
是的，迪士尼乐园比

00:14:12.560 --> 00:14:20.660
这个土地好多了，您需要Wi-Fi 

00:14:16.130 --> 00:14:27.860
为了这个工作我的朋友，所以我们可能是

00:14:20.660 --> 00:14:31.220
是的，在这里工作对，是什么

00:14:27.860 --> 00:14:32.600
密码STG X知道，但是

00:14:31.220 --> 00:14:33.790
没有人告诉我我只是在工作

00:14:32.600 --> 00:14:37.920
这里

00:14:33.790 --> 00:14:41.550
好吧，我可能会连接到fied 

00:14:37.920 --> 00:14:43.500
邓开始那个斯普林代尔，所以如果你有

00:14:41.550 --> 00:14:45.240
一个机会，这是我去的地方很棒

00:14:43.500 --> 00:14:46.620
如果有的话，一直在这里

00:14:45.240 --> 00:14:48.570
难过，你想读一些东西

00:14:46.620 --> 00:14:50.730
振奋人心的我们

00:14:48.570 --> 00:14:51.839
如果你的孩子，那年 Spring 开始里约

00:14:50.730 --> 00:14:55.649
躁动不安，你不能让他们去

00:14:51.839 --> 00:14:57.899
如果你在

00:14:55.649 --> 00:15:00.209
梦bad以求的不舒服

00:14:57.899 --> 00:15:02.279
在枕头下极致舒适

00:15:00.209 --> 00:15:04.589
现在你们中有些是程序员，我是

00:15:02.279 --> 00:15:07.500
程序员排序我在理论上是正确的

00:15:04.589 --> 00:15:10.380
当然我们中间的精英们

00:15:07.500 --> 00:15:12.870
试穿一个网络界面，以便我们

00:15:10.380 --> 00:15:14.250
要使用我们也可以使用curl start 

00:15:12.870 --> 00:15:15.209
今天 Spring 结束了，因为到目前为止

00:15:14.250 --> 00:15:17.670
更命令行友好

00:15:15.209 --> 00:15:19.170
我认为应该没有那么神奇

00:15:17.670 --> 00:15:20.940
成为telnet界面，但没人听

00:15:19.170 --> 00:15:23.639
对我来说，在 The Spring Team 中

00:15:20.940 --> 00:15:25.079
好吧，这也是我的一种选择

00:15:23.639 --> 00:15:26.579
懒，所以我们要用这个

00:15:25.079 --> 00:15:28.290
要建立一个简单的域，这是一个

00:15:26.579 --> 00:15:31.139
微服务称为预订服务

00:15:28.290 --> 00:15:34.529
像这样，你能看到吗，我们是一个

00:15:31.139 --> 00:15:35.850
预订-服务，它将

00:15:34.529 --> 00:15:37.800
成为网络应用程序，所以我将建立一个网络

00:15:35.850 --> 00:15:38.970
应用程序，我将使用JPA，因为

00:15:37.800 --> 00:15:42.060
我做出糟糕的生活决定

00:15:38.970 --> 00:15:45.449
好的，所以JPA嗯，我要用spring 

00:15:42.060 --> 00:15:47.279
数据其余存储库以映射我的我的

00:15:45.449 --> 00:15:49.589
应用程序，所以平衡就是生命

00:15:47.279 --> 00:15:52.680
正确的决定至少我能做到

00:15:49.589 --> 00:15:54.290
其他人则将IVs h2嵌入数据

00:15:52.680 --> 00:15:57.209
用于内存的嵌入式数据库

00:15:54.290 --> 00:15:58.709
 Hannukah不，她是执行器， 

00:15:57.209 --> 00:16:01.079
远程，我将不使用远程乔

00:15:58.709 --> 00:16:03.420
我要吃的实际上是

00:16:01.079 --> 00:16:05.490
来吧，我也有选择

00:16:03.420 --> 00:16:08.370
自然，这是一个你知道的 Spring 

00:16:05.490 --> 00:16:11.010
有选择就可以选择

00:16:08.370 --> 00:16:12.720
被困在

00:16:11.010 --> 00:16:14.370
遥不可及的过去无法前进

00:16:12.720 --> 00:16:18.300
让我们面对的未来就是

00:16:14.370 --> 00:16:20.819
今天，那么你可以选择var now me and 

00:16:18.300 --> 00:16:24.300
你我们今天都在同一地点

00:16:20.819 --> 00:16:27.779
房间在2015年，所以我们要选择

00:16:24.300 --> 00:16:29.970
罐子，即使你有一位朋友医生

00:16:27.779 --> 00:16:30.959
在这里谁能及时写旅行

00:16:29.970 --> 00:16:34.380
确实如此

00:16:30.959 --> 00:16:36.449
哎呀，这是爵士的不适

00:16:34.380 --> 00:16:39.959
当然，这不符合我的

00:16:36.449 --> 00:16:43.620
做罐子不是战争的个人哲学

00:16:39.959 --> 00:16:45.540
现在再说一次，无论您知道什么

00:16:43.620 --> 00:16:47.730
如果可以选择我想要的就可以

00:16:45.540 --> 00:16:50.069
现在我也要整合这个

00:16:47.730 --> 00:16:51.110
我们将选择配置客户端

00:16:50.069 --> 00:16:53.420
我们会选择

00:16:51.110 --> 00:16:56.450
我们将提供的尤里卡发现支持

00:16:53.420 --> 00:16:58.459
选择我在这里还需要什么doc 

00:16:56.450 --> 00:17:01.250
是服务

00:16:58.459 --> 00:17:03.440
哦，Redis，是的，我需要选择Spring 

00:17:01.250 --> 00:17:04.730
启动1.3 o m5，以便我可以看到新的

00:17:03.440 --> 00:17:06.079
 Spring 的云点很重要

00:17:04.730 --> 00:17:09.260
没错

00:17:06.079 --> 00:17:14.089
我要选择 Spring 的云流

00:17:09.260 --> 00:17:16.640
 Redis和我将选择Zipkin和

00:17:14.089 --> 00:17:18.170
我想这会做到的，我们会

00:17:16.640 --> 00:17:20.000
回到它还好，所以这是

00:17:18.170 --> 00:17:22.400
我们的第一项服务，我们将立于不败之地

00:17:20.000 --> 00:17:23.689
它，我将要建立一个

00:17:22.400 --> 00:17:25.370
简单的REST API，这就是目标

00:17:23.689 --> 00:17:27.230
这只是建立一个东西

00:17:25.370 --> 00:17:30.650
我们可以一起玩，所以我会摆脱一切

00:17:27.230 --> 00:17:31.910
命中产生打开这个

00:17:30.650 --> 00:17:33.559
这只是 spring boot 

00:17:31.910 --> 00:17:34.760
我在刀架上有一些Spring 切块

00:17:33.559 --> 00:17:36.650
类路径，但是我们要做的是

00:17:34.760 --> 00:17:38.410
展示这里只是一个基本的 Spring 

00:17:36.650 --> 00:17:42.440
启动应用程序，有很多

00:17:38.410 --> 00:17:44.419
关于 spring boot 的精彩演讲，所以您

00:17:42.440 --> 00:17:46.429
知道我已经尽力了

00:17:44.419 --> 00:17:49.130
得到它，如果您需要更大，让我

00:17:46.429 --> 00:17:51.440
知道好了，我们走了

00:17:49.130 --> 00:17:53.030
所以我已经有了一个XML专家。 

00:17:51.440 --> 00:17:54.500
我将继续进行评论

00:17:53.030 --> 00:17:58.400
我现在不想的几件事

00:17:54.500 --> 00:17:59.929
尤里卡和配置的东西，所以我们

00:17:58.400 --> 00:18:02.840
刚要离开 Spring 的云流

00:17:59.929 --> 00:18:05.919
好的，我要建立一个简单的

00:18:02.840 --> 00:18:09.770
 REST API，所以我打个招呼

00:18:05.919 --> 00:18:11.840
同步到那里，我们去缓存了

00:18:09.770 --> 00:18:17.630
我要放的是那是什么

00:18:11.840 --> 00:18:18.770
您正在使用的Eclipse我将要

00:18:17.630 --> 00:18:20.990
建立一个简单的域，我将使用

00:18:18.770 --> 00:18:22.700
保留实体，这是一个JP实体

00:18:20.990 --> 00:18:23.929
这是一个毫无意义的简单

00:18:22.700 --> 00:18:24.830
我真的不想关注的领域

00:18:23.929 --> 00:18:26.720
我们只需要拥有的域名

00:18:24.830 --> 00:18:30.260
自然要说话的东西

00:18:26.720 --> 00:18:32.179
私人字串保留名称，我将

00:18:30.260 --> 00:18:34.130
说吸气剂，我会说我想要一个

00:18:32.179 --> 00:18:36.710
构造函数，它将有一个ID 

00:18:34.130 --> 00:18:42.169
所以我在这里给它一个主键

00:18:36.710 --> 00:18:43.910
 ID为生成值，我给它两个

00:18:42.169 --> 00:18:46.940
字符串方法自然可以，我会给

00:18:43.910 --> 00:18:47.750
它是面向对象的构造函数

00:18:46.940 --> 00:18:51.770
目的我再给它

00:18:47.750 --> 00:18:55.940
 JPA的构造函数正确，为什么选择JP为什么

00:18:51.770 --> 00:18:57.290
对，现在就要做，我需要一个

00:18:55.940 --> 00:18:59.440
将其存储在数据库中的方式，我将

00:18:57.290 --> 00:19:03.679
使用存储库，我会说接口

00:18:59.440 --> 00:19:04.920
预订存储库还可以扩展JP a 

00:19:03.679 --> 00:19:07.560
现在这只是仓库

00:19:04.920 --> 00:19:09.540
将管理以下实体的存储库

00:19:07.560 --> 00:19:12.090
类型保留，其主键是

00:19:09.540 --> 00:19:13.980
长的类型将有一个自定义

00:19:12.090 --> 00:19:17.100
 Finder方法，所以我会说find by 

00:19:13.980 --> 00:19:19.440
保留名称字符串RN和一个

00:19:17.100 --> 00:19:21.450
我自然要暴露

00:19:19.440 --> 00:19:23.550
网络，所以我将使用spring数据休息

00:19:21.450 --> 00:19:25.440
我会说休息报告仓库休息

00:19:23.550 --> 00:19:27.390
我将要映射此查找器的资源

00:19:25.440 --> 00:19:30.330
方法也适用于Web服务，所以我会说

00:19:27.390 --> 00:19:33.390
其余资源路径按名称等于

00:19:30.330 --> 00:19:37.530
我将参数映射到HTTP 

00:19:33.390 --> 00:19:39.510
参数RN好的，这样就可以了

00:19:37.530 --> 00:19:41.910
那应该是我们需要的第一个切入点

00:19:39.510 --> 00:19:45.390
一些数据，所以我将创建一个简单的

00:19:41.910 --> 00:19:46.980
命令行运行程序和命令行

00:19:45.390 --> 00:19:48.330
优胜者将要做的事情非常

00:19:46.980 --> 00:19:49.920
非常简单，它将在

00:19:48.330 --> 00:19:53.640
应用程序启动，我会，我会

00:19:49.920 --> 00:19:54.270
使用并将其注入到

00:19:53.640 --> 00:19:58.200
创建一些数据

00:19:54.270 --> 00:19:58.380
好的，所以这里的预订库

00:19:58.200 --> 00:20:02.910
是

00:19:58.380 --> 00:20:08.490
我会说数组，但要列出医生

00:20:02.910 --> 00:20:17.310
棒医生再次在这里ire下

00:20:08.490 --> 00:20:20.210
社区，然后乔希好吧，你好

00:20:17.310 --> 00:20:22.380
计算机将数据分割成一个

00:20:20.210 --> 00:20:24.330
记录，我将其写入

00:20:22.380 --> 00:20:27.500
我会说数据库中的每个记录

00:20:24.330 --> 00:20:31.830
那和那个重新列出我要说的X 

00:20:27.500 --> 00:20:32.640
 RR点保存新的保留，然后

00:20:31.830 --> 00:20:34.380
我将打印出信息

00:20:32.640 --> 00:20:36.210
我从客户那里回来，所以我会

00:20:34.380 --> 00:20:37.920
说出来的每个系统，我

00:20:36.210 --> 00:20:39.960
顺便说一下使用Java 8 lambda 

00:20:37.920 --> 00:20:45.030
你们中的人正在使用Java 8 lambdas或Java 

00:20:39.960 --> 00:20:47.030
 8哦，好吧，杰森，那是一个数字

00:20:45.030 --> 00:20:50.340
你应该高一点

00:20:47.030 --> 00:20:51.960
我的朋友，Java 8非常漂亮

00:20:50.340 --> 00:20:54.480
你你必须去做，其他的是

00:20:51.960 --> 00:20:58.800
使用寿命也更长，以确保安全

00:20:54.480 --> 00:21:01.440
更新，所以你知道给自己一个拥抱

00:20:58.800 --> 00:21:04.050
那八个好东西好吗

00:21:01.440 --> 00:21:05.190
无论如何，让我们运行这个，让我们看看我们

00:21:04.050 --> 00:21:07.320
得到我们应该有一个简单的REST API 

00:21:05.190 --> 00:21:09.380
使用超媒体使用Spring Data Rest 

00:21:07.320 --> 00:21:11.820
好的医生当然会雇用哪个

00:21:09.380 --> 00:21:15.720
熟练而有用地展示

00:21:11.820 --> 00:21:17.530
昨天失败了，失败了，因为

00:21:15.720 --> 00:21:19.570
它正在运行

00:21:17.530 --> 00:21:22.000
与另一个应用程序相同的端口，因此

00:21:19.570 --> 00:21:24.360
我要去这里，我会诅咒

00:21:22.000 --> 00:21:28.960
是故意的，是的，是的

00:21:24.360 --> 00:21:31.210
一些我不知道80 27我不在乎谁

00:21:28.960 --> 00:21:32.710
随便去吧，我们有一个叫做

00:21:31.210 --> 00:21:36.190
 Zipkin很棒，但它正在引起

00:21:32.710 --> 00:21:39.840
我痛苦和胃灼热19只是不是

00:21:36.190 --> 00:21:44.940
是的，不，我们稍后再取

00:21:39.840 --> 00:21:48.550
所以预订让我们看看我们得到了什么

00:21:44.940 --> 00:21:51.640
是在1880年25年代

00:21:48.550 --> 00:21:53.470
抱歉，好的，我们去了，现在我们有了

00:21:51.640 --> 00:21:55.390
一些基本数据，现在的目标是

00:21:53.470 --> 00:21:56.170
建立利用以下优势的服务

00:21:55.390 --> 00:21:57.430
其中一些你要去的东西

00:21:56.170 --> 00:21:58.570
迁移到分布式系统时需要

00:21:57.430 --> 00:21:59.920
系统架构第一件事

00:21:58.570 --> 00:22:01.810
您要集中的

00:21:59.920 --> 00:22:03.580
我们谈论云的配置

00:22:01.810 --> 00:22:05.470
谈到12的本机应用程序

00:22:03.580 --> 00:22:07.240
应用程式样式设定的构想

00:22:05.470 --> 00:22:09.160
每个应用程序都应该有

00:22:07.240 --> 00:22:10.570
在二进制本身之外

00:22:09.160 --> 00:22:11.920
移动它所需的配置

00:22:10.570 --> 00:22:14.260
从一个环境成功地

00:22:11.920 --> 00:22:16.330
另一个密码主机名将这些端口

00:22:14.260 --> 00:22:18.160
各种定位器和凭证

00:22:16.330 --> 00:22:19.510
东西不属于构建和

00:22:18.160 --> 00:22:21.070
当然你可以使用环境变量

00:22:19.510 --> 00:22:23.890
或-参数或您有什么

00:22:21.070 --> 00:22:25.870
 spring boot 使它变得非常简单，但

00:22:23.890 --> 00:22:27.220
当您开始扩展时，您将

00:22:25.870 --> 00:22:28.990
需要更多需要集中化

00:22:27.220 --> 00:22:30.640
首先要配置

00:22:28.990 --> 00:22:33.340
更改我想要的配置

00:22:30.640 --> 00:22:34.600
如果我想在一个地方这样做

00:22:33.340 --> 00:22:37.150
有我想做的密码

00:22:34.600 --> 00:22:39.580
来自的对称加密和解密

00:22:37.150 --> 00:22:41.440
我的密码文件毕竟是

00:22:39.580 --> 00:22:43.360
应用程序的文件系统

00:22:41.440 --> 00:22:45.490
再次使用该密码，您需要一些密码

00:22:43.360 --> 00:22:47.410
如果我想能够

00:22:45.490 --> 00:22:49.660
改变生活而系统

00:22:47.410 --> 00:22:51.040
例如金丝雀正在运行

00:22:49.660 --> 00:22:53.230
对不起，功能标记之类的

00:22:51.040 --> 00:22:54.730
再有一件事情很高兴

00:22:53.230 --> 00:22:56.620
您之间的额外设施

00:22:54.730 --> 00:22:58.420
属性以及使用它们的应用程序

00:22:56.620 --> 00:23:02.470
我们将转向 Spring 的云

00:22:58.420 --> 00:23:06.820
一个配置服务器，所以从那个 Spring 开始

00:23:02.470 --> 00:23:10.870
 IO和我要选择Spring 

00:23:06.820 --> 00:23:12.640
启动1/3 om5，我会在这里下去

00:23:10.870 --> 00:23:15.370
要说一个配置服务器，我会

00:23:12.640 --> 00:23:17.800
告诉我，我想他们会做的

00:23:15.370 --> 00:23:19.540
由于平民援助还可以，这里的目标

00:23:17.800 --> 00:23:23.610
我要让配置服务器

00:23:19.540 --> 00:23:25.110
是基于git的REST API 

00:23:23.610 --> 00:23:27.390
资料库

00:23:25.110 --> 00:23:29.010
权利或文件系统存放处或

00:23:27.390 --> 00:23:30.690
颠覆素和

00:23:29.010 --> 00:23:33.180
颠覆思想是这些东西

00:23:30.690 --> 00:23:34.650
除了文件系统非常好

00:23:33.180 --> 00:23:36.720
在审核和回滚时

00:23:34.650 --> 00:23:39.090
配置更改，所以如果有的话

00:23:36.720 --> 00:23:41.250
应该发生说博士。父亲和我

00:23:39.090 --> 00:23:42.450
下台，然后滑向

00:23:41.250 --> 00:23:44.420
庆祝最大的交付

00:23:42.450 --> 00:23:47.130
有史以来令人惊讶的谈话

00:23:44.420 --> 00:23:48.690
您不希望我们登录生产

00:23:47.130 --> 00:23:50.610
没有能力进行更改

00:23:48.690 --> 00:23:52.680
记录发生了什么事，在哪里，然后

00:23:50.610 --> 00:23:55.310
向右回滚，所以这给你

00:23:52.680 --> 00:23:57.390
工具，所以我们要配置

00:23:55.310 --> 00:24:00.240
我要说的是贴花moah叠

00:23:57.390 --> 00:24:01.440
你是一个像这样的配置服务器，我

00:24:00.240 --> 00:24:03.270
将其指向git存储库

00:24:01.440 --> 00:24:05.460
我碰巧很方便

00:24:03.270 --> 00:24:07.140
在这里放置我的文件系统

00:24:05.460 --> 00:24:10.020
我要说的是Spring Cloud Config 

00:24:07.140 --> 00:24:13.050
腾飞忘记您的AI等于回家

00:24:10.020 --> 00:24:15.390
斜杠桌面正斜杠配置仓库

00:24:13.050 --> 00:24:17.760
好，所以我有一个基于git的存储库

00:24:15.390 --> 00:24:19.280
在我的文件系统上，我还将

00:24:17.760 --> 00:24:24.600
告诉此应用程序在端口上运行

00:24:19.280 --> 00:24:26.070
 8888好，我们现在应该开始

00:24:24.600 --> 00:24:27.510
现在我们要做的第一件事

00:24:26.070 --> 00:24:29.730
要做的就是回去教我们的预订

00:24:27.510 --> 00:24:32.280
服务如何获取其配置

00:24:29.730 --> 00:24:34.650
来自配置服务器权限的信息

00:24:32.280 --> 00:24:36.120
再次，我们想作为一个客户

00:24:34.650 --> 00:24:38.850
配置服务器，所以我会去这里， 

00:24:36.120 --> 00:24:41.280
只是取消注释，而不是我们添加

00:24:38.850 --> 00:24:43.860
 Spring Cloud Starter配置依赖项

00:24:41.280 --> 00:24:45.090
这将需要一些信息

00:24:43.860 --> 00:24:47.010
为了正常工作，所以我要

00:24:45.090 --> 00:24:50.220
首先告诉它它的名字

00:24:47.010 --> 00:24:53.550
毕竟必须是应用程序

00:24:50.220 --> 00:24:58.950
称为预订-服务， 

00:24:53.550 --> 00:25:01.560
配置服务器位于端口80 8 8 8 

00:24:58.950 --> 00:25:03.270
在 localhost 上，我可以离开

00:25:01.560 --> 00:25:04.590
默认为此处，但很高兴知道这一点

00:25:03.270 --> 00:25:06.660
您可以想象的这些信息

00:25:04.590 --> 00:25:08.370
需要发生在其余的

00:25:06.660 --> 00:25:10.620
评估应用程序配置

00:25:08.370 --> 00:25:11.940
它需要发生在

00:25:10.620 --> 00:25:13.650
引导程序，所以我要做的就是

00:25:11.940 --> 00:25:14.940
将重命名此属性为

00:25:13.650 --> 00:25:17.700
该文件属性的应用程序

00:25:14.940 --> 00:25:22.800
我将其重命名为引导程序类型

00:25:17.700 --> 00:25:24.720
属性还可以，所以你好，计算机重构

00:25:22.800 --> 00:25:28.920
那本来可以用，但是无论如何

00:25:24.720 --> 00:25:30.240
引导带点属性，这就是

00:25:28.920 --> 00:25:31.410
我们将拥有的唯一配置

00:25:30.240 --> 00:25:33.090
一种服务，另一种服务的目标

00:25:31.410 --> 00:25:35.490
这是写得越少越好

00:25:33.090 --> 00:25:38.200
并获得我们必须配置的好处

00:25:35.490 --> 00:25:39.550
在 localhost 8上运行的服务器

00:25:38.200 --> 00:25:40.870
我将向您展示

00:25:39.550 --> 00:25:42.550
例如配置

00:25:40.870 --> 00:25:44.170
标识为

00:25:42.550 --> 00:25:46.000
预订服务好像我要去

00:25:44.170 --> 00:25:49.300
去预订服务主管和

00:25:46.000 --> 00:25:50.860
我可以在这个JSON字符串中看到

00:25:49.300 --> 00:25:52.330
结果是我有两个

00:25:50.860 --> 00:25:54.520
物业档案一叫保留

00:25:52.330 --> 00:25:56.680
服务类型属性具有三个

00:25:54.520 --> 00:25:57.670
属性，包括一条消息，然后

00:25:56.680 --> 00:25:59.770
有另一个属性文件

00:25:57.670 --> 00:26:01.720
那个llamo文件的应用程序

00:25:59.770 --> 00:26:03.430
通用的，所以每个微服务都会得到

00:26:01.720 --> 00:26:05.470
是的，在应用程序中的配置

00:26:03.430 --> 00:26:07.330
 Mueller只拥有

00:26:05.470 --> 00:26:09.040
将自己标识为预订服务

00:26:07.330 --> 00:26:10.660
将获得这一属性

00:26:09.040 --> 00:26:12.610
应该有冲突吗

00:26:10.660 --> 00:26:14.890
在这种情况下，服务器类型端口在

00:26:12.610 --> 00:26:16.900
预订服务和服务器类型

00:26:14.890 --> 00:26:19.180
应用程序网络属性中的端口

00:26:16.900 --> 00:26:20.680
更具体一点的人会赢的，所以让我们

00:26:19.180 --> 00:26:23.110
利用这一点，我将要使用

00:26:20.680 --> 00:26:25.150
这里的消息是我的钥匙

00:26:23.110 --> 00:26:26.620
配置服务器，它是一个REST API 

00:26:25.150 --> 00:26:30.100
我现在要进行一个单独的过程

00:26:26.620 --> 00:26:32.260
配置基于Spring Cloud的Micro 

00:26:30.100 --> 00:26:33.580
服务预订服务使用

00:26:32.260 --> 00:26:35.920
消息，我们将演示一些

00:26:33.580 --> 00:26:37.270
他不会停止的功能，除非

00:26:35.920 --> 00:26:39.790
你问一个问题，但你应该问

00:26:37.270 --> 00:26:43.210
问题，如果你上课说你

00:26:39.790 --> 00:26:44.560
知道控制权他可能最终会失败

00:26:43.210 --> 00:26:48.280
他需要一点帮助

00:26:44.560 --> 00:26:51.190
最后通过以下方式学习

00:26:48.280 --> 00:26:53.530
任何人都是云原生的学生

00:26:51.190 --> 00:26:55.660
事情，你不是很珍贵

00:26:53.530 --> 00:26:57.490
这真的是我认为的

00:26:55.660 --> 00:27:00.040
环境变量的概括

00:26:57.490 --> 00:27:01.090
这样你就可以轻松知道

00:27:00.040 --> 00:27:02.770
翻译那个

00:27:01.090 --> 00:27:05.470
所以环境变量很棒

00:27:02.770 --> 00:27:07.090
您知道在UNIX进程中这是

00:27:05.470 --> 00:27:08.500
只是把它延长了一个 Spring 

00:27:07.090 --> 00:27:10.390
已经有一个叫做

00:27:08.500 --> 00:27:13.800
环境抽象，所以我们只是

00:27:10.390 --> 00:27:13.800
插入有一个问题

00:27:15.360 --> 00:27:19.890
我们是否打算建立一个坐式UI 

00:27:17.920 --> 00:27:21.760
在配置服务器之上

00:27:19.890 --> 00:27:25.600
已经有人建造了

00:27:21.760 --> 00:27:27.610
这叫github，是真的，不

00:27:25.600 --> 00:27:29.830
严重的是，有太多的UI忘记了

00:27:27.610 --> 00:27:33.160
我不觉得自己的好答案

00:27:29.830 --> 00:27:34.600
应该写另一个我知道我知道的

00:27:33.160 --> 00:27:36.910
他的意思是他意味着要编辑，但

00:27:34.600 --> 00:27:38.260
你知道github会做到这一点

00:27:36.910 --> 00:27:40.090
不想使用github可以安装

00:27:38.260 --> 00:27:42.510
你知道我要去实验室吗

00:27:40.090 --> 00:27:45.510
客户这样做是一个很好的工具

00:27:42.510 --> 00:27:45.510
乔治

00:27:51.690 --> 00:27:56.289
我们将谈论你如何改变

00:27:54.340 --> 00:27:58.090
使用不同的环境

00:27:56.289 --> 00:27:59.559
您可以快速显示的冲突服务器

00:27:58.090 --> 00:28:01.600
他实际上在那里犯了一个错误

00:27:59.559 --> 00:28:03.970
因为他做师父，你看到了吗

00:28:01.600 --> 00:28:06.580
掌握实际上是

00:28:03.970 --> 00:28:09.630
Spring 轮廓的名称，以便他可以

00:28:06.580 --> 00:28:17.740
把你放了，你知道你是一个

00:28:09.630 --> 00:28:18.490
配置文件名称测试作为配置文件名称

00:28:17.740 --> 00:28:20.980
另一个

00:28:18.490 --> 00:28:22.299
是的，那就是你

00:28:20.980 --> 00:28:23.289
需要一个环境变量，所以

00:28:22.299 --> 00:28:25.450
你需要一些东西

00:28:23.289 --> 00:28:27.190
改变每个人，所以我会

00:28:25.450 --> 00:28:32.500
我要做的就是推Cloud Foundry 

00:28:27.190 --> 00:28:35.169
你知道M Spring Cloud 资料活跃

00:28:32.500 --> 00:28:36.730
在UA等于您，然后

00:28:35.169 --> 00:28:40.260
从右边拿起配置

00:28:36.730 --> 00:28:42.220
个人资料让我们走吧，我们得走了，对不起

00:28:40.260 --> 00:28:44.049
持有人问题，我们要的问题

00:28:42.220 --> 00:28:47.080
但让我们在最后做，因为我们

00:28:44.049 --> 00:28:49.330
后来开始，我只是想要但是

00:28:47.080 --> 00:28:51.940
这里的目标是让您随身携带

00:28:49.330 --> 00:28:54.100
眼睛在撕扯你的头发，着火了

00:28:51.940 --> 00:28:55.419
这不是一个温和的介绍

00:28:54.100 --> 00:28:56.799
我想让你知道的厨房水槽

00:28:55.419 --> 00:28:58.059
你一旦到达目的地

00:28:56.799 --> 00:28:59.710
了解，那么你可以去

00:28:58.059 --> 00:29:01.330
之后，您可以进行惊人的深潜

00:28:59.710 --> 00:29:02.110
好医生父亲和马克·费舍尔哦，是的

00:29:01.330 --> 00:29:05.110
值得一提

00:29:02.110 --> 00:29:07.330
所以，是的，G，但我们没有，我们没有

00:29:05.110 --> 00:29:09.309
打任何东西，但不，我打开

00:29:07.330 --> 00:29:10.870
深潜是后来这是

00:29:09.309 --> 00:29:12.039
这是101的地方

00:29:10.870 --> 00:29:14.679
目的地是，而你想要

00:29:12.039 --> 00:29:16.210
去那里很好，所以我有这个

00:29:14.679 --> 00:29:17.500
消息值，我有这个小值

00:29:16.210 --> 00:29:19.150
我站起来作为休息服务

00:29:17.500 --> 00:29:21.010
我像这样创建了这项休息服务

00:29:19.150 --> 00:29:22.929
说我注入的消息 rest controller 

00:29:21.010 --> 00:29:25.690
来自属性文件的消息在

00:29:22.929 --> 00:29:27.460
配置服务，我只是站着

00:29:25.690 --> 00:29:29.950
端点将响应

00:29:27.460 --> 00:29:31.809
我要更改的正斜杠消息

00:29:29.950 --> 00:29:33.250
这是一条无用的消息

00:29:31.809 --> 00:29:35.020
你不是这里的世界，你更好

00:29:33.250 --> 00:29:37.450
你是一个 Spring ，所以我们要去

00:29:35.020 --> 00:29:41.260
到这里的文件系统，我们将

00:29:37.450 --> 00:29:45.220
转到我的桌面桌面CD配置

00:29:41.260 --> 00:29:46.179
服务或配置库，我有文件

00:29:45.220 --> 00:29:47.950
在那儿，我要说乔

00:29:46.179 --> 00:29:50.500
预订服务类型属性和

00:29:47.950 --> 00:29:53.860
我要更改此文件打个招呼

00:29:50.500 --> 00:29:57.359
发出一个命令X好，我要去

00:29:53.860 --> 00:30:01.690
说git commit减减号

00:29:57.359 --> 00:30:03.220
 Yolo的状态还可以

00:30:01.690 --> 00:30:06.729
所以我改变了，我几乎没有

00:30:03.220 --> 00:30:08.739
从我的身份证那里掉下来，但这就是

00:30:06.729 --> 00:30:10.599
不是实际的文件，所以我们就在这里

00:30:08.739 --> 00:30:12.879
如果我转到配置进行了更改

00:30:10.599 --> 00:30:15.220
服务器本身的新价值是

00:30:12.879 --> 00:30:16.889
马上可见，但我的老

00:30:15.220 --> 00:30:19.509
注入价值的服务不是

00:30:16.889 --> 00:30:21.460
尚未更新以反映这一点

00:30:19.509 --> 00:30:22.960
更新它是触发刷新

00:30:21.460 --> 00:30:25.330
这就是注释所在

00:30:22.960 --> 00:30:28.470
刷新我可以做很多不同的事情

00:30:25.330 --> 00:30:31.539
一种方法是只使用本地

00:30:28.470 --> 00:30:34.649
执行器端点称为刷新

00:30:31.539 --> 00:30:38.440
节点本身的另一种方法是使用

00:30:34.649 --> 00:30:40.119
Spring CloudMPP总线连接

00:30:38.440 --> 00:30:41.649
狂热的em多维数据集可实现不同的节点

00:30:40.119 --> 00:30:44.109
无论哪种方式，效果是

00:30:41.649 --> 00:30:47.320
告诉应用实例查找所有

00:30:44.109 --> 00:30:49.929
具有此批注的bean刷新

00:30:47.320 --> 00:30:51.820
范围和原位重新创建bean 

00:30:49.929 --> 00:30:54.609
因此，从

00:30:51.820 --> 00:30:57.989
配置服务器，让我们这样做吧

00:30:54.609 --> 00:31:02.739
 curl-D基本上是空的帖子

00:30:57.989 --> 00:31:04.509
 localhost 8004斜杠刷新和

00:31:02.739 --> 00:31:09.429
然后我很难过，那是什么

00:31:04.509 --> 00:31:11.379
重申主耶稣说过

00:31:09.429 --> 00:31:12.909
不是吗，但我把那个扔掉了

00:31:11.379 --> 00:31:15.099
它消失了，因为您现在在配置中

00:31:12.909 --> 00:31:18.009
服务器是的，我只是忘记添加了

00:31:15.099 --> 00:31:23.289
执行器是的，那是你

00:31:18.009 --> 00:31:26.200
 Spring 好不好意思，他当时

00:31:23.289 --> 00:31:27.940
像往常一样，我认为那是对的

00:31:26.200 --> 00:31:32.200
那个时候他给这个演示像

00:31:27.940 --> 00:31:34.749
在 Spring Cloud 1.0.0中

00:31:32.200 --> 00:31:36.099
曾经但是有人说白人借口

00:31:34.749 --> 00:31:38.679
我为什么我们需要激活它

00:31:36.099 --> 00:31:41.590
每个内容客户，所以我们将其淘汰

00:31:38.679 --> 00:31:45.309
那会解释它好尴尬，所以

00:31:41.590 --> 00:31:54.549
让我们再做一次，花两个

00:31:45.309 --> 00:31:56.210
好的，更新了，不，哈哈，嗯，很好

00:31:54.549 --> 00:31:58.880
它具有执行器端点

00:31:56.210 --> 00:32:02.990
有映射，是的，您应该订购

00:31:58.880 --> 00:32:05.600
说它映射不对，所以有

00:32:02.990 --> 00:32:07.550
还有其他事情，这是

00:32:05.600 --> 00:32:15.230
可能开始吃饭的预订

00:32:07.550 --> 00:32:20.420
是的，现在是时候重新导入

00:32:15.230 --> 00:32:22.880
拧紧先生。在那里申请

00:32:20.420 --> 00:32:28.310
现在是这样，可以刷新吗

00:32:22.880 --> 00:32:29.150
让我们再去这里三分之三

00:32:28.310 --> 00:32:35.540
时间就是魅力

00:32:29.150 --> 00:32:36.650
我们希望很好，所以你立刻说了

00:32:35.540 --> 00:32:41.540
告诉你他改变了消息

00:32:36.650 --> 00:32:42.980
是的消息是眨眼，如果

00:32:41.540 --> 00:32:44.390
你在注意你没事

00:32:42.980 --> 00:32:48.440
你可以鼓掌，我应该得到的

00:32:44.390 --> 00:32:49.850
我确实做到了，就像我说他

00:32:48.440 --> 00:32:51.500
写了我在舞台上跳舞的代码

00:32:49.850 --> 00:32:53.290
所以我继续

00:32:51.500 --> 00:32:56.660
这是集中式的一种模式

00:32:53.290 --> 00:32:58.100
当您配置第二种模式

00:32:56.660 --> 00:32:59.900
移至我们将移至的Spring应用程序

00:32:58.100 --> 00:33:02.900
您将拥有的云应用程序

00:32:59.900 --> 00:33:04.910
大量存在的实例

00:33:02.900 --> 00:33:07.460
因能力要求而短暂逝世

00:33:04.910 --> 00:33:08.960
根据容量需求而定

00:33:07.460 --> 00:33:10.880
与主机分离的能力

00:33:08.960 --> 00:33:14.300
我们讨论过的名称和端口，以及

00:33:10.880 --> 00:33:17.390
昨天的史诗般的主题演讲

00:33:14.300 --> 00:33:19.880
暗示我不能依靠我需要的DNS 

00:33:17.390 --> 00:33:21.710
有些东西给我一点

00:33:19.880 --> 00:33:23.270
去耦你的方式就是使用

00:33:21.710 --> 00:33:25.220
服务注册表有点

00:33:23.270 --> 00:33:27.380
电话簿是我想说的一种方式

00:33:25.220 --> 00:33:28.730
与那边的服务部门交谈，我

00:33:27.380 --> 00:33:30.770
知道名字，但我不知道主持人

00:33:28.730 --> 00:33:32.300
重要的另一个好处是

00:33:30.770 --> 00:33:34.610
我也可以做客户端负载

00:33:32.300 --> 00:33:36.830
平衡我不再需要依靠

00:33:34.610 --> 00:33:39.380
 DNS知道什么样的负载跳舞

00:33:36.830 --> 00:33:40.910
我应该跨服务来做

00:33:39.380 --> 00:33:44.600
我要回到 Spring 开始

00:33:40.910 --> 00:33:49.250
我拥有的，我将要建立或

00:33:44.600 --> 00:33:50.660
使用Eureka站起Eureka注册表

00:33:49.250 --> 00:33:52.190
服务器在这里它将是一个配置

00:33:50.660 --> 00:33:53.450
客户也是如此，我们在做什么

00:33:52.190 --> 00:33:55.520
是我们要站起来服务吗

00:33:53.450 --> 00:33:58.370
我不应该正常做吗

00:33:55.520 --> 00:33:59.510
您可以轻松地站起尤里卡

00:33:58.370 --> 00:34:00.710
这样，但您必须在

00:33:59.510 --> 00:34:01.970
一种高度可用的方式

00:34:00.710 --> 00:34:04.490
通常在没有地方运行

00:34:01.970 --> 00:34:08.210
要从这里做很多次

00:34:04.490 --> 00:34:09.010
我是，或者您可能会后悔，您可能会

00:34:08.210 --> 00:34:10.510
采用

00:34:09.010 --> 00:34:12.280
 Cloud Foundry做到这一点，云

00:34:10.510 --> 00:34:15.730
铸造厂有很好的服务红

00:34:12.280 --> 00:34:17.919
您可能还会使用的床单，但我不

00:34:15.730 --> 00:34:20.590
认识 Zookeeper 哦，其中一个

00:34:17.919 --> 00:34:22.210
没错，是Spencer的付出

00:34:20.590 --> 00:34:24.909
我想是今天下午的一次演讲

00:34:22.210 --> 00:34:27.399
明天明天关于所有新

00:34:24.909 --> 00:34:29.020
 Spring 的云中的东西，所以如果你是

00:34:27.399 --> 00:34:30.370
您使用过1.0，并且想知道

00:34:29.020 --> 00:34:31.720
那么1.1中有什么

00:34:30.370 --> 00:34:33.370
斯宾塞明天要谈

00:34:31.720 --> 00:34:35.610
我也会在那里

00:34:33.370 --> 00:34:39.360
包括新服务发现

00:34:35.610 --> 00:34:46.000
实现控制台Cloud Foundry 

00:34:39.360 --> 00:34:49.200
点阵生成Eureka服务器打开一个否

00:34:46.000 --> 00:34:51.460
电脑在这里，我们可以服务器打开它

00:34:49.200 --> 00:34:52.899
我需要连接之前的相同触发器

00:34:51.460 --> 00:34:55.210
它到配置服务器和

00:34:52.899 --> 00:34:56.350
尤里卡，这将是一个必须

00:34:55.210 --> 00:34:58.180
标识自己，所以我将其复制

00:34:56.350 --> 00:35:00.310
引导属性在这里

00:34:58.180 --> 00:35:01.660
我要去的应用程序点属性

00:35:00.310 --> 00:35:04.750
贴在这里

00:35:01.660 --> 00:35:06.280
引导顶级属性，我们要

00:35:04.750 --> 00:35:08.560
说这将被命名为尤里卡

00:35:06.280 --> 00:35:10.060
服务是尤里卡服务，所以我

00:35:08.560 --> 00:35:12.580
必须配置为这样，我会在

00:35:10.060 --> 00:35:14.050
使您每周拥有一台服务器，应该

00:35:12.580 --> 00:35:19.180
这样做，我将启动它，它将

00:35:14.050 --> 00:35:20.260
到达端口87-61，因为那是

00:35:19.180 --> 00:35:23.590
我们在配置服务器中拥有的

00:35:20.260 --> 00:35:25.900
指定这样做，有这个

00:35:23.590 --> 00:35:28.470
这是 Spring 的尤里卡，你知道这个

00:35:25.900 --> 00:35:31.360
在此基于Netflix是Eureka 

00:35:28.470 --> 00:35:33.460
说我是上次看到的相同的基本用户界面

00:35:31.360 --> 00:35:36.550
演示中的一个晚上，但这就是云

00:35:33.460 --> 00:35:37.780
铸造蒙皮，所以这是

00:35:36.550 --> 00:35:39.520
在本地运行，并且正在运行

00:35:37.780 --> 00:35:42.430
进入我们的铸造厂，那是很多

00:35:39.520 --> 00:35:46.300
对于UI更有用，是的

00:35:42.430 --> 00:35:48.970
漂亮的小区域，它是ajaxy这样的

00:35:46.300 --> 00:35:50.650
当事情改变时做出回应，因此目标

00:35:48.970 --> 00:35:51.880
这是让服务显示在这里

00:35:50.650 --> 00:35:53.020
对，这是电话本，什么都不是

00:35:51.880 --> 00:35:54.460
如果他们能够找到对方

00:35:53.020 --> 00:35:56.800
他们不能不在这里注册吗

00:35:54.460 --> 00:35:59.380
让我们回到可以恢复的状态

00:35:56.800 --> 00:36:01.030
服务的方式哦，记住我们

00:35:59.380 --> 00:36:03.970
谈谈你知道的高度

00:36:01.030 --> 00:36:05.710
可用的模式，这是尤里卡的推手

00:36:03.970 --> 00:36:07.660
整个控制台都说我在哪里

00:36:05.710 --> 00:36:09.850
同伴在哪里，我的另一个节点在哪里

00:36:07.660 --> 00:36:11.170
复制，它找不到一个

00:36:09.850 --> 00:36:14.200
是它举起了手， 

00:36:11.170 --> 00:36:15.610
令人反感，它会起作用，但

00:36:14.200 --> 00:36:16.810
这提醒您，您应该

00:36:15.610 --> 00:36:19.480
始终在高度配置中

00:36:16.810 --> 00:36:20.490
可用的时尚，所以一个实例

00:36:19.480 --> 00:36:23.430
不是高度可用

00:36:20.490 --> 00:36:24.780
我们保持不变或部署温顺，好吧，我们

00:36:23.430 --> 00:36:25.950
试图将其关闭，但这是

00:36:24.780 --> 00:36:27.869
是不可能的

00:36:25.950 --> 00:36:31.260
真的不是麦加雷特，我真的不会

00:36:27.869 --> 00:36:32.100
需要看到是的，所以我们有

00:36:31.260 --> 00:36:34.710
现在让我们回到预订

00:36:32.100 --> 00:36:37.830
服务并带来对

00:36:34.710 --> 00:36:39.030
现在与注册表进行对话，请记住我们

00:36:37.830 --> 00:36:41.690
在这里有一个抽象称为

00:36:39.030 --> 00:36:43.830
发现客户端抽象很常见

00:36:41.690 --> 00:36:45.660
所有这些不同的服务

00:36:43.830 --> 00:36:47.940
注册表实现，但事情

00:36:45.660 --> 00:36:49.230
您将与发现相关

00:36:47.940 --> 00:36:51.210
客户与服务

00:36:49.230 --> 00:36:53.190
至少您是

00:36:51.210 --> 00:36:54.690
要问的问题你可以问

00:36:53.190 --> 00:36:56.820
该服务住在哪里？ 

00:36:54.690 --> 00:36:58.380
有时我该如何交谈

00:36:56.820 --> 00:37:00.300
您可能还必须写信给您

00:36:58.380 --> 00:37:02.490
必须说如果您需要我，我在这里

00:37:00.300 --> 00:37:04.590
对，这是可选的，例如

00:37:02.490 --> 00:37:06.450
这些是Cloud Foundry还是latus这些

00:37:04.590 --> 00:37:08.340
是他们已经知道的两个平台

00:37:06.450 --> 00:37:09.990
服务站在那里

00:37:08.340 --> 00:37:11.310
直到我们讲完才告诉

00:37:09.990 --> 00:37:13.740
发现客户端实现是

00:37:11.310 --> 00:37:15.869
在这种情况下为只读，但自然

00:37:13.740 --> 00:37:17.910
尤里卡控制台 Zookeeper ，他们需要一个

00:37:15.869 --> 00:37:20.030
多一点点的手持

00:37:17.910 --> 00:37:22.260
他们都注册并从中读取的情况

00:37:20.030 --> 00:37:25.050
好的，所以我已经启动并运行了

00:37:22.260 --> 00:37:27.540
我去这里，你看到那里是我们的

00:37:25.050 --> 00:37:29.010
在生态注册表中注册的服务

00:37:27.540 --> 00:37:31.560
它正在运行一个实例

00:37:29.010 --> 00:37:33.180
已经启动，依此类推，我现在在此主机名上

00:37:31.560 --> 00:37:35.369
需要写一个我想建立的客户

00:37:33.180 --> 00:37:38.760
我们的第一个客户有话要说

00:37:35.369 --> 00:37:41.880
所以预订服务预订

00:37:38.760 --> 00:37:44.880
客户确定文档我们需要什么我们

00:37:41.880 --> 00:37:46.590
很好的发现Eureka一个配置客户端

00:37:44.880 --> 00:37:47.820
你要做的看不到

00:37:46.590 --> 00:37:50.130
安全，因为我不认为这是

00:37:47.820 --> 00:37:53.340
要工作对不起不要做安全

00:37:50.130 --> 00:37:55.080
不，我们不会打扰这些

00:37:53.340 --> 00:37:56.520
你们发生的里程碑朋友

00:37:55.080 --> 00:37:58.830
你会做的是最终可以哦

00:37:56.520 --> 00:38:01.320
是的，谢谢您发现Redis流

00:37:58.830 --> 00:38:02.340
是的，马克，我正在谈

00:38:01.320 --> 00:38:04.770
 Spring 的云今天下午下雨

00:38:02.340 --> 00:38:09.210
寻找杀死Emily的数据，所以我们将看到

00:38:04.770 --> 00:38:10.560
它真的很快使我失去了其他任何东西

00:38:09.210 --> 00:38:11.910
去购物总是很高兴

00:38:10.560 --> 00:38:17.810
您想要的所有东西都放在一个篮子里

00:38:11.910 --> 00:38:19.590
好吧，我们去预订客户。 

00:38:17.810 --> 00:38:21.359
现在我们要建立的目标

00:38:19.590 --> 00:38:23.130
与我们对话的应用程序

00:38:21.359 --> 00:38:24.930
微服务，它将发现

00:38:23.130 --> 00:38:28.020
通过注册表进行微服务

00:38:24.930 --> 00:38:29.250
这将是第一个客户

00:38:28.020 --> 00:38:31.140
所有，但也将处于边缘

00:38:29.250 --> 00:38:33.300
服务的东西会坐在

00:38:31.140 --> 00:38:34.050
数据中心的边缘并暴露在外

00:38:33.300 --> 00:38:37.620
到其他

00:38:34.050 --> 00:38:39.900
服务很好，所以当我另一件事

00:38:37.620 --> 00:38:44.940
像iPad和iPhone，你知道

00:38:39.900 --> 00:38:47.820
 html5浏览器等等，所以我们要

00:38:44.940 --> 00:38:49.800
建立一个API，你知道我们不知道

00:38:47.820 --> 00:38:51.030
我们想要做的是首先连接这个

00:38:49.800 --> 00:38:52.490
到我们想要获得的注册表

00:38:51.030 --> 00:38:55.140
配置，所以我说启用

00:38:52.490 --> 00:38:58.980
像以前一样发现客户

00:38:55.140 --> 00:39:00.080
然后我将更改资源内容或

00:38:58.980 --> 00:39:03.990
将属性应用到

00:39:00.080 --> 00:39:05.510
引导属性重命名，以便

00:39:03.990 --> 00:39:08.580
我现在叫预约客户

00:39:05.510 --> 00:39:09.960
想要建立一个与之交谈的客户

00:39:08.580 --> 00:39:12.450
这些其他服务的原因

00:39:09.960 --> 00:39:14.520
这是因为你有不同的种类

00:39:12.450 --> 00:39:17.100
与之交谈的实际客户

00:39:14.520 --> 00:39:19.230
这些中端服务很高兴

00:39:17.100 --> 00:39:21.360
有中介和边缘服务

00:39:19.230 --> 00:39:23.100
像这样位于您的iPhone之间

00:39:21.360 --> 00:39:24.540
或iPad等以及中端产品

00:39:23.100 --> 00:39:27.360
像我们的预订服务这样的服务

00:39:24.540 --> 00:39:29.100
 Netflix做到这一点Netflix有600 

00:39:27.360 --> 00:39:31.110
他们不想要的不同的微服务

00:39:29.100 --> 00:39:33.210
必须更新每个微服务

00:39:31.110 --> 00:39:35.220
不管有协议的新客户

00:39:33.210 --> 00:39:37.740
特定要求或安全性

00:39:35.220 --> 00:39:39.720
要求或API粒度

00:39:37.740 --> 00:39:40.890
引入需求就像

00:39:39.720 --> 00:39:43.020
他们不想拥有新的iPad 

00:39:40.890 --> 00:39:45.060
更新这600个微

00:39:43.020 --> 00:39:46.620
服务，所以他们建立了一些东西

00:39:45.060 --> 00:39:47.820
在中间，这称为边缘

00:39:46.620 --> 00:39:50.190
服务有几个不同的地方

00:39:47.820 --> 00:39:52.550
各种边缘服务之一是微服务

00:39:50.190 --> 00:39:55.410
代理想象例如一个html5 

00:39:52.550 --> 00:39:58.410
应用程序html5具有跨域

00:39:55.410 --> 00:40:00.540
要求您不能伪造的限制

00:39:58.410 --> 00:40:02.400
提出与此违背的要求

00:40:00.540 --> 00:40:04.290
安全模型，因此必须相同

00:40:02.400 --> 00:40:06.300
托管同一域，请确定您可以访问

00:40:04.290 --> 00:40:08.550
这600项微服务中的每一项和

00:40:06.300 --> 00:40:10.860
添加允许跨域的策略

00:40:08.550 --> 00:40:12.930
对这些服务的要求，但那

00:40:10.860 --> 00:40:14.670
会很乏味并且需要疯狂

00:40:12.930 --> 00:40:17.160
正确的工作量

00:40:14.670 --> 00:40:19.140
认为这只是一个实际的客户

00:40:17.160 --> 00:40:20.820
所以最好有一个代理

00:40:19.140 --> 00:40:24.120
位于我们要使用的中间

00:40:20.820 --> 00:40:26.550
如果您正在忙着，现在双打

00:40:24.120 --> 00:40:29.520
捉鬼敢死队神话你知道动物园

00:40:26.550 --> 00:40:32.880
看门人好吗，不是吗

00:40:29.520 --> 00:40:34.770
很可爱，很可爱

00:40:32.880 --> 00:40:41.990
守护黑社会好吧，把你的

00:40:34.770 --> 00:40:45.030
在冰箱里放几天冰箱

00:40:41.990 --> 00:40:48.180
因此，我们将使用表Zul 

00:40:45.030 --> 00:40:49.260
代理，这可能就足够了

00:40:48.180 --> 00:40:51.210
要做的是站起来

00:40:49.260 --> 00:40:53.930
连接到服务的代理

00:40:51.210 --> 00:40:57.120
注册表并将请求转发给

00:40:53.930 --> 00:40:58.590
该注册表中可用的服务，因此

00:40:57.120 --> 00:41:02.640
在我们的情况下，让我们看看如果我

00:40:58.590 --> 00:41:04.350
去演示应用程序，我只是运行它

00:41:02.640 --> 00:41:06.390
我们应该看到一些可能是

00:41:04.350 --> 00:41:07.710
如果您使用的是html5和

00:41:06.390 --> 00:41:09.720
你有一个你有这个要求

00:41:07.710 --> 00:41:14.450
添加此注释找出原因

00:41:09.720 --> 00:41:14.450
炸毁了我做了什么我做了什么

00:41:15.080 --> 00:41:22.200
有条件的哦，我没有看到我们吗

00:41:19.920 --> 00:41:25.650
没有做我们没有的祖尔首发

00:41:22.200 --> 00:41:29.130
写尴尬我在这里吗我以为你

00:41:25.650 --> 00:41:31.470
没有，我想也许他没有

00:41:29.130 --> 00:41:34.920
知道你不是我不是说你点击

00:41:31.470 --> 00:41:38.340
它在完成vizor尴尬的所有权利

00:41:34.920 --> 00:41:39.900
好的，如果您有html5应用程序

00:41:38.340 --> 00:41:41.610
也许你需要做的就是前进

00:41:39.900 --> 00:41:45.090
客户到中间层的请求

00:41:41.610 --> 00:41:47.550
您添加ssl的服务您添加了一些

00:41:45.090 --> 00:41:49.650
某种安全性，例如HTTP基本或

00:41:47.550 --> 00:41:51.600
 OAuth之类的，然后就完成了

00:41:49.650 --> 00:41:53.790
也许就足够了，也许你不介意

00:41:51.600 --> 00:41:56.070
从

00:41:53.790 --> 00:41:58.260
客户端html5浏览器

00:41:56.070 --> 00:41:59.490
中层服务，而您并不是真的

00:41:58.260 --> 00:42:01.230
尝试优化带宽，因为

00:41:59.490 --> 00:42:03.630
目前是台式机5浏览器或

00:42:01.230 --> 00:42:08.610
随便你，我就可以继续

00:42:03.630 --> 00:42:14.160
说80 50预订服务转发

00:42:08.610 --> 00:42:17.090
大刀阔斧的保留，它不会

00:42:14.160 --> 00:42:20.130
工作现在发生了什么事哦Zipkin 

00:42:17.090 --> 00:42:22.380
阿德里安，所以我们要重新介绍

00:42:20.130 --> 00:42:25.770
在此期间的稍后，我要

00:42:22.380 --> 00:42:27.789
在我的呼吸下诅咒你听不到

00:42:25.770 --> 00:42:29.539
那个权利

00:42:27.789 --> 00:42:31.700
它要做的是

00:42:29.539 --> 00:42:34.519
站起来将转发所有的代理

00:42:31.700 --> 00:42:37.099
对指定服务的请求

00:42:34.519 --> 00:42:39.079
这里在上下文路径中，所以8050 

00:42:37.099 --> 00:42:41.569
的斜线预订服务

00:42:39.079 --> 00:42:43.640
大刀阔斧的保留，我们去了

00:42:41.569 --> 00:42:45.680
奶酪，所以数据来自

00:42:43.640 --> 00:42:47.119
预订服务在另一个

00:42:45.680 --> 00:42:48.740
另一个节点正确，所以我插入一个链接

00:42:47.119 --> 00:42:50.869
所以我看链接看HSN 

00:42:48.740 --> 00:42:55.009
对不起

00:42:50.869 --> 00:42:57.140
 8050对8050对8,000和

00:42:55.009 --> 00:42:58.430
注意上下文路径不存在

00:42:57.140 --> 00:43:00.349
所以这是实际的表面

00:42:58.430 --> 00:43:01.579
原始的，但已在

00:43:00.349 --> 00:43:04.490
名称下的服务注册表

00:43:01.579 --> 00:43:06.230
预订服务，因此任何要求

00:43:04.490 --> 00:43:08.539
去四个斜线预订服务

00:43:06.230 --> 00:43:10.880
斜线自然地转发给

00:43:08.539 --> 00:43:12.019
注册表中的服务可能就是

00:43:10.880 --> 00:43:13.579
足够你知道，但这将是一个

00:43:12.019 --> 00:43:16.279
糟糕的演示，我们可以在这里停下来

00:43:13.579 --> 00:43:18.170
显然这还不够用

00:43:16.279 --> 00:43:20.839
边缘服务的情况是一个api 

00:43:18.170 --> 00:43:22.400
网关，这是一个微型代理，但是

00:43:20.839 --> 00:43:24.200
也许我想做API翻译

00:43:22.400 --> 00:43:25.759
想要获取正在被

00:43:24.200 --> 00:43:28.099
从客户端返回的响应和

00:43:25.759 --> 00:43:29.660
转变他们也许给客户

00:43:28.099 --> 00:43:31.460
特定的有效载荷

00:43:29.660 --> 00:43:33.319
合适的，或者你知道你的任何事情

00:43:31.460 --> 00:43:36.769
用例是，所以我将构建为

00:43:33.319 --> 00:43:38.109
房间里的比尔·戈达

00:43:36.769 --> 00:43:42.500
昨晚海浪问我

00:43:38.109 --> 00:43:45.319
你会遇到什么问题，所以我们

00:43:42.500 --> 00:43:48.099
将要建立一个服务或其他

00:43:45.319 --> 00:43:53.180
会说话的休息控制控制器

00:43:48.099 --> 00:43:54.740
到我们的预订服务，但这是

00:43:53.180 --> 00:43:56.390
要做一些基本的翻译

00:43:54.740 --> 00:43:58.759
现在就向客户提供建议吧

00:43:56.390 --> 00:44:04.240
预订客户端，它将

00:43:58.759 --> 00:44:07.519
称为保留api网关的网关

00:44:04.240 --> 00:44:09.619
 rest controller 我什么都不是

00:44:07.519 --> 00:44:13.700
简而言之，我们需要工厂或其他东西

00:44:09.619 --> 00:44:14.750
是的，所以我会说预订知道

00:44:13.700 --> 00:44:16.339
我要说的是我想

00:44:14.750 --> 00:44:22.190
注入一个休息模板，因为我想

00:44:16.339 --> 00:44:24.230
创建一个休息服务，返回

00:44:22.190 --> 00:44:26.559
保留名称我不会全部退还

00:44:24.230 --> 00:44:28.700
预订数据本身只是名称

00:44:26.559 --> 00:44:30.049
从那个预订集合中

00:44:28.700 --> 00:44:32.049
我要从中映射的对象

00:44:30.049 --> 00:44:34.299
保留到保留名称中

00:44:32.049 --> 00:44:36.429
只是一个简单的，毫无意义的琐碎

00:44:34.299 --> 00:44:39.929
映射，但这是一个有用的练习

00:44:36.429 --> 00:44:43.959
好的，所以当我这样做时，我将使用

00:44:39.929 --> 00:44:48.009
注入的休息模板就在

00:44:43.959 --> 00:44:49.089
需要减负，是的，所以

00:44:48.009 --> 00:44:50.769
这是我要看的负载

00:44:49.089 --> 00:44:53.019
让它开始跳舞，这是怎么回事

00:44:50.769 --> 00:44:55.329
要做的就是让我打电话

00:44:53.019 --> 00:44:56.529
并让它们自动加载

00:44:55.329 --> 00:44:58.689
一个称为功能区的组件，我们将讨论

00:44:56.529 --> 00:45:02.099
关于这一点，所以我要

00:44:58.689 --> 00:45:05.199
说这个压力模板

00:45:02.099 --> 00:45:08.380
 HTTP冒号正斜杠保留- 

00:45:05.199 --> 00:45:10.209
服务正斜杠保留，所以

00:45:08.380 --> 00:45:12.429
再次，这不是DNS，这是

00:45:10.209 --> 00:45:14.979
注册的服务ID 

00:45:12.429 --> 00:45:16.359
尤里卡喜欢被告知是否仅仅是

00:45:14.979 --> 00:45:17.589
强调我的意思是我会

00:45:16.359 --> 00:45:19.920
在这一点上是否感到惊讶

00:45:17.589 --> 00:45:22.719
上下文中的其他休息模板，但

00:45:19.920 --> 00:45:24.609
他刚才所做的就是增加负载平衡

00:45:22.719 --> 00:45:27.249
这是@的合格者

00:45:24.609 --> 00:45:30.069
 Spring 2.5功能不是两点五

00:45:27.249 --> 00:45:31.569
现在我们要说要休息

00:45:30.069 --> 00:45:33.390
模板，但没有任何我迟到的旧休息

00:45:31.569 --> 00:45:36.009
我们想要一个负载均衡的

00:45:33.390 --> 00:45:38.259
这是文件，如果没有别的

00:45:36.009 --> 00:45:40.359
我认为永远不会受伤，所以我们要

00:45:38.259 --> 00:45:42.400
我们将告诉其余模板

00:45:40.359 --> 00:45:45.189
提出此要求并从所有人中挑选

00:45:42.400 --> 00:45:46.809
一个节点的注册实例

00:45:45.189 --> 00:45:48.069
发出请求-这将是

00:45:46.809 --> 00:45:49.959
由所谓的功能区完成

00:45:48.069 --> 00:45:53.019
一个软件定义的负载均衡器

00:45:49.959 --> 00:45:54.339
在客户端选择软件

00:45:53.019 --> 00:45:56.170
实例，然后路由请求

00:45:54.339 --> 00:45:58.089
默认情况下，您将获得循环加载

00:45:56.170 --> 00:46:00.609
平衡，但我可能想要一些东西

00:45:58.089 --> 00:46:03.880
就像你知道我可能想要多租户

00:46:00.609 --> 00:46:05.979
你知道我对可用区的认识

00:46:03.880 --> 00:46:07.719
可能无论我想要什么用例

00:46:05.979 --> 00:46:09.429
做出决定的能力

00:46:07.719 --> 00:46:11.259
在客户中，这样做更容易

00:46:09.429 --> 00:46:13.660
然后以您的五大路由器名称

00:46:11.259 --> 00:46:15.839
例如打网球到大海报

00:46:13.660 --> 00:46:18.309
是的，孩子要花最少的时间阅读

00:46:15.839 --> 00:46:21.009
是的，如果您有六项服务

00:46:18.309 --> 00:46:22.299
在负载弹跳器后面和

00:46:21.009 --> 00:46:23.829
你知道你不能说对不对

00:46:22.299 --> 00:46:25.479
现在问这个问题的方式

00:46:23.829 --> 00:46:28.209
客户端中的逻辑是非常非常

00:46:25.479 --> 00:46:31.299
强大的东西，所以我需要告诉

00:46:28.209 --> 00:46:33.219
我想要列表的其余模板

00:46:31.299 --> 00:46:34.869
来自

00:46:33.219 --> 00:46:37.689
我将要创建的预订服务

00:46:34.869 --> 00:46:40.170
客户端DTO仅用于存储数据

00:46:37.689 --> 00:46:42.369
所以私人长ID私人字符串

00:46:40.170 --> 00:46:45.160
预订名称现在看起来令人惊讶

00:46:42.369 --> 00:46:48.099
像服务器端

00:46:45.160 --> 00:46:49.270
一种权利是非常非常真实还有什么

00:46:48.099 --> 00:46:51.220
只是因为你有一个非常简单的

00:46:49.270 --> 00:46:53.079
域权，是的，通常是

00:46:51.220 --> 00:46:54.940
可能有点不合情理

00:46:53.079 --> 00:46:56.799
琐碎我要客户端的原因

00:46:54.940 --> 00:46:58.089
细节是因为从理论上讲

00:46:56.799 --> 00:46:59.530
这只是一个没人能说的理论

00:46:58.089 --> 00:47:01.359
令我满意的是

00:46:59.530 --> 00:47:04.809
实际发生或将要发生

00:47:01.359 --> 00:47:07.420
对理智的人，但理论上

00:47:04.809 --> 00:47:08.289
客户和服务可以提供服务

00:47:07.420 --> 00:47:09.880
可以用其他方式写

00:47:08.289 --> 00:47:11.799
 Java之外的新技术

00:47:09.880 --> 00:47:14.980
这是理论，实际上并没有

00:47:11.799 --> 00:47:17.200
发生，但如果发生，那么您想要

00:47:14.980 --> 00:47:19.180
与类型分离

00:47:17.200 --> 00:47:20.619
服务中的类图正确

00:47:19.180 --> 00:47:24.369
客户端代理是我们可以用来

00:47:20.619 --> 00:47:25.750
地图好了，现在我要吐了

00:47:24.369 --> 00:47:27.099
告诉我想要的其余模板

00:47:25.750 --> 00:47:30.520
我要说的正是这个结果

00:47:27.099 --> 00:47:33.430
资源的参数化类型引用

00:47:30.520 --> 00:47:37.150
这是你知道的 Spring 超媒体

00:47:33.430 --> 00:47:39.450
 REST API中的信封类型，它是

00:47:37.150 --> 00:47:42.640
普通类型，所以我们没有任何类型

00:47:39.450 --> 00:47:49.260
犹豫添加它，好吧，我要去

00:47:42.640 --> 00:47:54.309
使用这种资源与否

00:47:49.260 --> 00:47:55.089
再试一次，我们只是采取了

00:47:54.309 --> 00:47:57.839
第二个不是吗

00:47:55.089 --> 00:48:00.700
你是行家，现在还行

00:47:57.839 --> 00:48:02.799
重要的是现在适合

00:48:00.700 --> 00:48:04.390
花一分钟时间思考

00:48:02.799 --> 00:48:07.779
 Java并非真的如此

00:48:04.390 --> 00:48:10.480
并不是真正的打字，所以它有它

00:48:07.779 --> 00:48:12.670
慈善地称为类型系统，但

00:48:10.480 --> 00:48:14.589
类型系统与

00:48:12.670 --> 00:48:16.480
关于泛型泛型不是

00:48:14.589 --> 00:48:18.190
重申那是一次没有

00:48:16.480 --> 00:48:20.020
用一个问实例变量的方法

00:48:18.190 --> 00:48:23.319
通用参数是什么实例

00:48:20.020 --> 00:48:25.000
 type是T的集合T是什么

00:48:23.319 --> 00:48:27.520
由于运行时信息丢失

00:48:25.000 --> 00:48:29.170
键入擦除可以捕获

00:48:27.520 --> 00:48:32.049
有一个子类，你可以说X类

00:48:29.170 --> 00:48:34.720
扩展ArrayList例如字符串

00:48:32.049 --> 00:48:38.049
这样，然后您说出

00:48:34.720 --> 00:48:40.029
字符串x等于新X，然后一次

00:48:38.049 --> 00:48:41.859
如果我问使用反射它是什么类型

00:48:40.029 --> 00:48:44.109
它会告诉我它的字符串，因为我已经

00:48:41.859 --> 00:48:45.549
在这里把它烤成这个层次

00:48:44.109 --> 00:48:46.990
我只有一个常规的ArrayList 

00:48:45.549 --> 00:48:49.299
将无法正常工作，所以我们要

00:48:46.990 --> 00:48:50.950
使用是一种类型标记模式来创建

00:48:49.299 --> 00:48:52.630
捕获该内容的匿名子类

00:48:50.950 --> 00:48:54.339
这就是一般信息

00:48:52.630 --> 00:48:57.380
如果我承认，这不会编译

00:48:54.339 --> 00:48:59.569
好吧已有多少人使用过

00:48:57.380 --> 00:49:00.470
这只是一个 Spring 网络功能

00:48:59.569 --> 00:49:02.749
没有

00:49:00.470 --> 00:49:04.249
我是粉丝，没什么新鲜事

00:49:02.749 --> 00:49:05.839
我们一拥有就可以了

00:49:04.249 --> 00:49:09.619
处理仿制药的逮捕模板

00:49:05.839 --> 00:49:11.479
我们必须拥有那个，所以我们去了

00:49:09.619 --> 00:49:13.279
所以我要通过那个小PT 

00:49:11.479 --> 00:49:15.680
到这，然后告诉其余的吉姆

00:49:13.279 --> 00:49:18.979
但是给我一个我可以的有效载荷

00:49:15.680 --> 00:49:20.329
使用这里我们去，现在我可以

00:49:18.979 --> 00:49:23.869
迭代，否则我可以返回我的数据

00:49:20.329 --> 00:49:26.809
要说返回响应实体点

00:49:23.869 --> 00:49:35.089
保持呼吸屏息

00:49:26.809 --> 00:49:40.420
流图预订获取嘿文档

00:49:35.089 --> 00:49:44.650
收集收集旅行团不要列出

00:49:40.420 --> 00:49:44.650
我们在那里，所以我现在有了这个

00:49:44.710 --> 00:49:51.829
我们通常什么时候总结一下

00:49:48.349 --> 00:49:53.509
半打是十二点哦，太好了

00:49:51.829 --> 00:49:54.470
看看那组时间好吧，现在

00:49:53.509 --> 00:49:57.019
我有休息服务

00:49:54.470 --> 00:49:58.970
返回一个名字集合，我

00:49:57.019 --> 00:50:02.299
要将其映射到此处的端点

00:49:58.970 --> 00:50:03.289
像这样的正斜杠名称，这是

00:50:02.299 --> 00:50:07.099
将成为一个 rest controller 

00:50:03.289 --> 00:50:08.479
映射到两个四个斜杠保留，所以

00:50:07.099 --> 00:50:11.779
这是客户端这是优势

00:50:08.479 --> 00:50:13.549
与中间层对话的服务

00:50:11.779 --> 00:50:14.960
在注册表中的服务

00:50:13.549 --> 00:50:17.329
将仅转存一部分数据

00:50:14.960 --> 00:50:23.539
在那里，所以我们开始，我们应该

00:50:17.329 --> 00:50:27.890
能够验证是否可以正常运行

00:50:23.539 --> 00:50:30.319
这里我们去，这是现在的微型代理

00:50:27.890 --> 00:50:33.619
我要说预订

00:50:30.319 --> 00:50:35.630
斜杠名称有数据就可以了，所以我们

00:50:33.619 --> 00:50:38.180
将数据作为

00:50:35.630 --> 00:50:40.249
 JSON字符串不是实际的JSON对象，因此

00:50:38.180 --> 00:50:42.440
可以的，我们可以

00:50:40.249 --> 00:50:43.940
读取数据，但是如果我想做

00:50:42.440 --> 00:50:45.890
我要写入数据的更改

00:50:43.940 --> 00:50:47.660
知道我们有分配系统的权利

00:50:45.890 --> 00:50:50.359
你想做状态同步和

00:50:47.660 --> 00:50:52.400
有些人说得太快了

00:50:50.359 --> 00:50:54.229
让我们在这里清楚一点，我们可以

00:50:52.400 --> 00:50:56.539
使用分布式交易，我们可以

00:50:54.229 --> 00:50:58.670
使用无法运行铁路的JTA 

00:50:56.539 --> 00:51:00.859
朋友，这是一个可怕的主意

00:50:58.670 --> 00:51:02.089
可怕的想法现在 Spring 了，你也是

00:51:00.859 --> 00:51:03.529
你会怎么做

00:51:02.089 --> 00:51:05.359
会做得更好，我们将使用

00:51:03.529 --> 00:51:05.599
我想花一秒钟的消息

00:51:05.359 --> 00:51:09.259
那

00:51:05.599 --> 00:51:10.460
 JT什么都可以，因为看到我们这是一个

00:51:09.259 --> 00:51:11.810
复选框，我真的很想

00:51:10.460 --> 00:51:13.099
鼓励人们从转移到

00:51:11.810 --> 00:51:14.690
分散的世界，然后带来

00:51:13.099 --> 00:51:19.070
分散交易

00:51:14.690 --> 00:51:20.930
 spring boot 很容易支持JT和

00:51:19.070 --> 00:51:22.970
支持分布式交易

00:51:20.930 --> 00:51:24.920
没有那个文库代码是由

00:51:22.970 --> 00:51:26.540
亚当有一些白痴一些白痴

00:51:24.920 --> 00:51:31.760
写下了这段代码，我不同意

00:51:26.540 --> 00:51:33.740
他现在做了什么，为什么我知道

00:51:31.760 --> 00:51:36.500
我在说什么不要只是使用它

00:51:33.740 --> 00:51:37.970
你不想JT一个，一旦你知道

00:51:36.500 --> 00:51:40.910
知道如何香肠和分配

00:51:37.970 --> 00:51:46.369
交易做得很好，我可能还会

00:51:40.910 --> 00:51:48.740
反正还是有香肠所以让我们

00:51:46.369 --> 00:51:52.099
正确使用消息，哦，我知道，是的

00:51:48.740 --> 00:51:54.290
像CQRS之类的东西

00:51:52.099 --> 00:51:55.940
针对我想要的一致权利进行了优化

00:51:54.290 --> 00:51:57.680
加快我的权利，但我想

00:51:55.940 --> 00:52:00.310
确保他们最终被写成这样

00:51:57.680 --> 00:52:03.470
我想要最终的一致性，所以我们阅读

00:52:00.310 --> 00:52:04.880
正确使用HTTP 

00:52:03.470 --> 00:52:08.000
做到了，然后我们要写

00:52:04.880 --> 00:52:10.790
使用转发到邮件的帖子

00:52:08.000 --> 00:52:12.830
正确，以便应用消息传递和

00:52:10.790 --> 00:52:15.380
 Spring Card 1.1的新功能或

00:52:12.830 --> 00:52:17.930
布里克斯顿或什么是正确的

00:52:15.380 --> 00:52:19.550
名称X必然会释放

00:52:17.930 --> 00:52:21.230
在新版本中训练新功能

00:52:19.550 --> 00:52:23.359
 Spring 的云是我们有

00:52:21.230 --> 00:52:27.020
发布火车的概念另一个新

00:52:23.359 --> 00:52:29.150
流云流1.0中的功能

00:52:27.020 --> 00:52:31.130
是的，你可以学到一些东西

00:52:29.150 --> 00:52:32.210
和我一起去细节，并标记这个

00:52:31.130 --> 00:52:34.070
下午，但我们正要去

00:52:32.210 --> 00:52:34.490
快速展示它是如何工作的

00:52:34.070 --> 00:52:38.000
很棒

00:52:34.490 --> 00:52:39.349
所以让我们做另一个终点

00:52:38.000 --> 00:52:41.330
创建另一个响应的端点

00:52:39.349 --> 00:52:45.490
发表好

00:52:41.330 --> 00:52:51.970
像这样发帖，我会说公共无效

00:52:45.490 --> 00:52:56.420
是的，我会说请求正文

00:52:51.970 --> 00:52:59.960
预订是，我需要做一个

00:52:56.420 --> 00:53:03.500
呼吁这一点，一旦我们做到这一点，我们

00:52:59.960 --> 00:53:06.109
需要确保我们做的历史，所以我

00:53:03.500 --> 00:53:08.510
会打电话给我的

00:53:06.109 --> 00:53:09.980
在这种情况下向我的消息传递总线发送消息

00:53:08.510 --> 00:53:13.010
我将使用Redis，但我们可以

00:53:09.980 --> 00:53:13.280
轻松使用Kafka和Rabbim队列

00:53:13.010 --> 00:53:16.430
对

00:53:13.280 --> 00:53:17.570
这是Redis，因为您包括写

00:53:16.430 --> 00:53:18.440
一开始就具有依赖性

00:53:17.570 --> 00:53:20.780
对

00:53:18.440 --> 00:53:23.480
今天 Spring 还会来吗

00:53:20.780 --> 00:53:25.430
云启动器流Redis，因此

00:53:23.480 --> 00:53:27.170
将自动接线

00:53:25.430 --> 00:53:28.910
这些不同的服务之间，所以我

00:53:27.170 --> 00:53:31.609
可以包括它们，我将它们绑定

00:53:28.910 --> 00:53:33.290
使用at enable绑定注释，以便

00:53:31.609 --> 00:53:35.869
我要上去我的

00:53:33.290 --> 00:53:41.920
应用程序，我会说这将会

00:53:35.869 --> 00:53:46.310
向启用绑定源打招呼

00:53:41.920 --> 00:53:47.900
源类还可以，源类来了

00:53:46.310 --> 00:53:50.990
从org spring从McLeod流

00:53:47.900 --> 00:53:53.210
消息源是一个接口

00:53:50.990 --> 00:53:56.440
按照惯例定义了一个

00:53:53.210 --> 00:53:58.550
有一个名字叫做output，所以输出

00:53:56.440 --> 00:54:01.160
我们正在做的是我的配置

00:53:58.550 --> 00:54:04.790
我们正在映射输入和输出出口

00:54:01.160 --> 00:54:06.950
目的地的入口通道

00:54:04.790 --> 00:54:09.170
您的不同服务并给予他们

00:54:06.950 --> 00:54:11.329
管道中的命名公寓，以便

00:54:09.170 --> 00:54:16.150
配置位于配置服务器中

00:54:11.329 --> 00:54:16.150
在这里，所以配置服务器在哪里

00:54:16.480 --> 00:54:23.540
在这里，我们是预订客户，您

00:54:21.170 --> 00:54:25.880
可以看到我们说过Spring Cloud

00:54:23.540 --> 00:54:27.619
流绑定输出等于

00:54:25.880 --> 00:54:29.420
我要去的另一边

00:54:27.619 --> 00:54:30.619
等等等等输入等于

00:54:29.420 --> 00:54:32.510
保留，以便他们同意

00:54:30.619 --> 00:54:34.190
见面我有一个约会

00:54:32.510 --> 00:54:37.069
保留这种服务

00:54:34.190 --> 00:54:38.510
通过中间件发现对

00:54:37.069 --> 00:54:40.760
消息传递中间件，所以有一个

00:54:38.510 --> 00:54:42.829
里面会有一个消息队列

00:54:40.760 --> 00:54:45.980
视兔子或小腿而定

00:54:42.829 --> 00:54:49.220
您想要使用的东西叫做

00:54:45.980 --> 00:54:50.060
一些保留你的东西

00:54:49.220 --> 00:54:51.319
不在乎有什么

00:54:50.060 --> 00:54:53.420
有些东西就是美丽

00:54:51.319 --> 00:54:55.010
没错，所以我们要做的是添加一个

00:54:53.420 --> 00:54:57.950
注释，它将设置所有

00:54:55.010 --> 00:55:01.010
的队列和基础架构

00:54:57.950 --> 00:55:03.190
背景，所以我们要注入

00:55:01.010 --> 00:55:06.829
消息通道那里是 Spring 

00:55:03.190 --> 00:55:08.089
传递来自 Spring 的一种类型

00:55:06.829 --> 00:55:09.829
否定现在是 Spring 的一部分

00:55:08.089 --> 00:55:11.630
框架，当您

00:55:09.829 --> 00:55:13.430
与处理WebSockets一起使用

00:55:11.630 --> 00:55:15.770
例子，的确是最大的

00:55:13.430 --> 00:55:18.140
通讯技术和我们

00:55:15.770 --> 00:55:19.790
说的是我想要这个命名管道吗

00:55:18.140 --> 00:55:21.650
或多或少地归结为一个Java点

00:55:19.790 --> 00:55:23.510
 util点提示由幕后

00:55:21.650 --> 00:55:26.000
默认，但我们将其连接到

00:55:23.510 --> 00:55:27.220
中间件集成适配器，我将

00:55:26.000 --> 00:55:29.680
例如说话

00:55:27.220 --> 00:55:30.640
或卡夫卡，无论发生什么情况

00:55:29.680 --> 00:55:32.170
自动，因此您不必

00:55:30.640 --> 00:55:35.020
真的把这些东西连在一起

00:55:32.170 --> 00:55:37.000
注入客户或管道

00:55:35.020 --> 00:55:38.230
在这里，你放一些东西，所以我

00:55:37.000 --> 00:55:42.609
要说这种消息通道

00:55:38.230 --> 00:55:44.200
发送消息生成器点

00:55:42.609 --> 00:55:48.040
有效载荷，我要说的是艺术

00:55:44.200 --> 00:55:50.349
保留名称点构建好，并且

00:55:48.040 --> 00:55:51.880
那是我给某人发送信息

00:55:50.349 --> 00:55:53.619
否则我会用它来消耗

00:55:51.880 --> 00:55:55.450
他们收到的同步异步

00:55:53.619 --> 00:55:58.540
预订名称，然后写上

00:55:55.450 --> 00:56:00.400
好吧，你也好吗doc yeah 

00:55:58.540 --> 00:56:03.130
享受这是他们准备出售我所以我们

00:56:00.400 --> 00:56:03.369
可以说可以，我应该做

00:56:03.130 --> 00:56:06.849
那

00:56:03.369 --> 00:56:08.470
我也要去服务

00:56:06.849 --> 00:56:10.859
本身，做相反的事情，我要去

00:56:08.470 --> 00:56:13.119
接受服务上的新消息，以便

00:56:10.859 --> 00:56:16.300
在这里我做了同样的事情

00:56:13.119 --> 00:56:18.160
 Spring Cloud 启动流Redis我会

00:56:16.300 --> 00:56:23.440
把它带回来玩，我们在这里

00:56:18.160 --> 00:56:25.060
是，我将在启用

00:56:23.440 --> 00:56:26.290
在反向绑定，我会说我会

00:56:25.060 --> 00:56:28.780
同步

00:56:26.290 --> 00:56:30.430
不，是的，你是另一个

00:56:28.780 --> 00:56:32.920
一边，所以您在这边同步

00:56:30.430 --> 00:56:34.480
如果您不喜欢的话，源开始

00:56:32.920 --> 00:56:36.640
这些名称，如果他们使您感到困惑， 

00:56:34.480 --> 00:56:38.109
他们会的，你可以自己做

00:56:36.640 --> 00:56:40.240
接口随便你叫什么

00:56:38.109 --> 00:56:43.420
你知道进出例如

00:56:40.240 --> 00:56:47.319
输出，有了它，我可以

00:56:43.420 --> 00:56:48.869
在以下位置创建消息传递终结点消息

00:56:47.319 --> 00:56:55.119
这是 Spring 创新型

00:56:48.869 --> 00:56:57.130
给我留言预订收据

00:56:55.119 --> 00:56:59.319
在您轻松英语之前，我

00:56:57.130 --> 00:57:02.170
在E之前，除了看到

00:56:59.319 --> 00:57:10.470
与我见面的II IV e艺术家

00:57:02.170 --> 00:57:15.700
诵读困难好吗，公众无效，除了

00:57:10.470 --> 00:57:17.470
保留字符串RN哎呀，我是

00:57:15.700 --> 00:57:18.430
将其作为服务激活器

00:57:17.470 --> 00:57:19.839
那就是说它将是

00:57:18.430 --> 00:57:22.060
每当有消息进入时调用

00:57:19.839 --> 00:57:23.650
消息传递的控制反转不

00:57:22.060 --> 00:57:26.470
好莱坞校长不要打给我

00:57:23.650 --> 00:57:30.880
我会打给你，所以输入频道

00:57:26.470 --> 00:57:32.530
等于同步点输入，我要

00:57:30.880 --> 00:57:33.460
注入我们在这里拥有的存储库

00:57:32.530 --> 00:57:35.800
在服务上预订

00:57:33.460 --> 00:57:37.570
Spring 数据JPA的存储库，我将

00:57:35.800 --> 00:57:39.850
只是用它来写出数据

00:57:37.570 --> 00:57:44.650
好的，所以这个恐怖资料库

00:57:39.850 --> 00:57:48.820
可以保存新的预订RN，如果我

00:57:44.650 --> 00:57:50.980
去另一边我需要确保

00:57:48.820 --> 00:57:52.690
我是的，我做得很好，所以

00:57:50.980 --> 00:57:56.200
看起来合法，让我们尝试一下， 

00:57:52.690 --> 00:57:57.430
回到预订服务

00:57:56.200 --> 00:58:00.550
重新开始回到预定

00:57:57.430 --> 00:58:05.320
客户端也重新启动

00:58:00.550 --> 00:58:07.330
请问大卫的行吗，那我会做

00:58:05.320 --> 00:58:12.390
以为我们要走了

00:58:07.330 --> 00:58:14.070
去控制台这里打开

00:58:12.390 --> 00:58:18.400
高级restclient 

00:58:14.070 --> 00:58:20.670
我要寄一个H到

00:58:18.400 --> 00:58:22.780
这个端点，它将有

00:58:20.670 --> 00:58:29.650
我们已经有了他，我们需要一个人

00:58:22.780 --> 00:58:31.590
其他想打个招呼的人好吗

00:58:29.650 --> 00:58:36.550
你拼那个哥们

00:58:31.590 --> 00:58:38.680
 KS T FF是的，我认为那会

00:58:36.550 --> 00:58:41.230
工作，您将成为我们的第一受害者

00:58:38.680 --> 00:58:42.870
所以我们要发布到API 

00:58:41.230 --> 00:58:45.310
斜杠保留处的网关

00:58:42.870 --> 00:58:48.340
类型为的相邻文档

00:58:45.310 --> 00:58:49.660
应用程序Jason，如果我们

00:58:48.340 --> 00:58:50.770
可以的话，我们应该能够看到

00:58:49.660 --> 00:58:58.440
只是在这里反映出来，所以我会做

00:58:50.770 --> 00:59:04.090
让我们在这里好好把它拿出来

00:58:58.440 --> 00:59:05.860
准备在那里，我们是好东西，所以

00:59:04.090 --> 00:59:08.230
消息传递工作正常，我们能够

00:59:05.860 --> 00:59:10.510
休息阅读但保证权利

00:59:08.230 --> 00:59:12.130
消息传递CQRS正在针对

00:59:10.510 --> 00:59:13.750
正确的读写方式，我们

00:59:12.130 --> 00:59:16.390
分开他们，所以我们不使用相同的

00:59:13.750 --> 00:59:18.010
因为两者自然是不一样的

00:59:16.390 --> 00:59:19.600
因为它是分布式事务，但是您

00:59:18.010 --> 00:59:20.920
确实获得状态同步，这是

00:59:19.600 --> 00:59:24.040
保证最终可以正常工作

00:59:20.920 --> 00:59:25.240
最终一致性好吧，我想

00:59:24.040 --> 00:59:27.790
我想确保

00:59:25.240 --> 00:59:29.200
确实发生在我的预订之一上

00:59:27.790 --> 00:59:31.240
服务，例如，如果实例

00:59:29.200 --> 00:59:33.010
应该下降，以便我们恢复

00:59:31.240 --> 00:59:34.450
优雅地记住

00:59:33.010 --> 00:59:37.540
分布式系统没有这样的

00:59:34.450 --> 00:59:39.310
事情是100％高可用性的

00:59:37.540 --> 00:59:41.800
您想优化的软件

00:59:39.310 --> 00:59:43.900
需要时间进行补救

00:59:41.800 --> 00:59:45.019
我会康复，何时能保持优雅

00:59:43.900 --> 00:59:46.609
事情就这样了

00:59:45.019 --> 00:59:49.119
当事情变得优雅时

00:59:46.609 --> 00:59:52.969
发生，所以我要回到我的

00:59:49.119 --> 00:59:54.409
预订客户在这里，我在这里看到

00:59:52.969 --> 00:59:55.369
当我使用

00:59:54.409 --> 00:59:57.049
休息小费，但它会做负载

00:59:55.369 --> 00:59:58.789
弹跳，这将一劳永逸

00:59:57.049 --> 01:00:00.229
实例正确，但不适用于

00:59:58.789 --> 01:00:02.059
如果没有实例，则为零

01:00:00.229 --> 01:00:04.189
注册这将打击大块

01:00:02.059 --> 01:00:05.689
事情要往南走， 

01:00:04.189 --> 01:00:07.880
 iPhone将获得回传的堆栈跟踪

01:00:05.689 --> 01:00:09.199
给他，或者一个屁股凸轮或中间

01:00:07.880 --> 01:00:11.269
手指或让您不舒服的东西

01:00:09.199 --> 01:00:14.359
知道所以我们需要有一个

01:00:11.269 --> 01:00:15.559
我们想要隔离某种

01:00:14.359 --> 01:00:17.929
失败，我们要防止它

01:00:15.559 --> 01:00:19.429
级联超出了这点

01:00:17.929 --> 01:00:21.079
有限的地方，我们将使用

01:00:19.429 --> 01:00:24.529
如您所知，断路器

01:00:21.079 --> 01:00:27.669
建筑是为了保护

01:00:24.529 --> 01:00:29.929
故障或电涌过多

01:00:27.669 --> 01:00:31.640
不会引起火灾爆炸

01:00:29.929 --> 01:00:33.140
然后把房子拆了

01:00:31.640 --> 01:00:35.329
而是断路器断开并且

01:00:33.140 --> 01:00:37.219
灯熄灭然后失去房子

01:00:35.329 --> 01:00:38.449
火权，这就是我们要去的地方

01:00:37.219 --> 01:00:41.539
要做的就是介绍电路

01:00:38.449 --> 01:00:43.489
此处使用组件的断路器模式

01:00:41.539 --> 01:00:46.759
来自Netflix的hystrix，我会在

01:00:43.489 --> 01:00:49.219
启用断路器，然后我将

01:00:46.759 --> 01:00:51.979
在这里注释我的方法，我会说添加

01:00:49.219 --> 01:00:55.519
 hystrix命令后备方法等于

01:00:51.979 --> 01:00:57.109
我将在秋天传递一个方法名称

01:00:55.519 --> 01:00:58.880
回来，我要做的就是

01:00:57.109 --> 01:01:02.299
我会返回一些简单的东西

01:00:58.880 --> 01:01:04.059
只想有一个有用的后备

01:01:02.299 --> 01:01:06.380
情景优美降级权

01:01:04.059 --> 01:01:07.279
 Netflix及其所做的其他大型服务

01:01:06.380 --> 01:01:09.619
他们一直在说哦

01:01:07.279 --> 01:01:11.839
此服务不可用，但您

01:01:09.619 --> 01:01:13.130
知道这里还有别的东西

01:01:11.839 --> 01:01:15.819
如果它只是返回一个空列表

01:01:13.130 --> 01:01:19.399
好的，这是我的预订客户

01:01:15.819 --> 01:01:27.589
我有我应该在一个

01:01:19.399 --> 01:01:30.259
上课的路径可能还不错，所以如果我去

01:01:27.589 --> 01:01:31.880
到名称端点再次是

01:01:30.259 --> 01:01:33.829
只要预订服务就开心

01:01:31.880 --> 01:01:36.019
在那儿，但是如果我现在去

01:01:33.829 --> 01:01:38.649
预订服务，你知道

01:01:36.019 --> 01:01:41.389
像这样将其从游戏中删除

01:01:38.649 --> 01:01:44.619
立刻掉回空虚

01:01:41.389 --> 01:01:44.619
 ArrayList右

01:01:46.590 --> 01:01:50.500
弹性是我朋友的功能

01:01:48.820 --> 01:01:52.030
所以好吧，我要带回

01:01:50.500 --> 01:01:53.680
预订服务是我的一大特色

01:01:52.030 --> 01:01:55.660
想要弹性，我也想要何时

01:01:53.680 --> 01:01:57.160
出问题了才能看到

01:01:55.660 --> 01:01:58.390
发生了什么事，所以你们有一个

01:01:57.160 --> 01:02:01.240
对仪表板进行操作时的教科书

01:01:58.390 --> 01:02:04.390
而且我们也想疯狂地做，让我们

01:02:01.240 --> 01:02:06.670
做到那好吧，好吧好吧

01:02:04.390 --> 01:02:08.200
服务我们有足够的时间吗

01:02:06.670 --> 01:02:09.610
我们有时间我在想

01:02:08.200 --> 01:02:11.020
甚至可以在最后加入SSO 

01:02:09.610 --> 01:02:12.340
因为我认为有些东西

01:02:11.020 --> 01:02:13.860
关于不是的github帐户

01:02:12.340 --> 01:02:16.420
工作是因为我在这里尝试过

01:02:13.860 --> 01:02:19.150
你不应该知道吗让我们看看

01:02:16.420 --> 01:02:20.650
我们能做到多远，我们能做什么

01:02:19.150 --> 01:02:22.360
让我们看看我们走了多远，我们爱

01:02:20.650 --> 01:02:24.580
好的，请编辑视频（如果有） 

01:02:22.360 --> 01:02:25.720
不起作用是的，这是从

01:02:24.580 --> 01:02:27.280
 YouTube还可以

01:02:25.720 --> 01:02:29.080
服务备份的东西应该健康

01:02:27.280 --> 01:02:30.850
这最终将恢复需要

01:02:29.080 --> 01:02:33.550
像这样32 

01:02:30.850 --> 01:02:35.500
我想想像发生了什么

01:02:33.550 --> 01:02:37.540
如果您正在构建云原生

01:02:35.500 --> 01:02:39.370
这里的软件，我们有

01:02:37.540 --> 01:02:40.750
如果您有能力抗拒失败

01:02:39.370 --> 01:02:43.060
在你下面的平台是

01:02:40.750 --> 01:02:45.580
保姆实例

01:02:43.060 --> 01:02:47.170
修复应用程序后，它将看到

01:02:45.580 --> 01:02:48.490
您的实例失败了，它将

01:02:47.170 --> 01:02:50.890
恢复它或恢复状态，以便

01:02:48.490 --> 01:02:53.170
如果您要求五个实例或四个

01:02:50.890 --> 01:02:55.540
就像昨天签订的合同

01:02:53.170 --> 01:02:57.970
主题演讲，您将得到四个

01:02:55.540 --> 01:02:58.990
还是高水吧，我没有那个

01:02:57.970 --> 01:03:01.270
在我的本地计算机上运行的平台

01:02:58.990 --> 01:03:02.050
在这里，但我只是手动重新启动，所以

01:03:01.270 --> 01:03:03.610
它会恢复

01:03:02.050 --> 01:03:05.350
很好，很重要，你想要

01:03:03.610 --> 01:03:07.000
付款平台

01:03:05.350 --> 01:03:09.670
您和您想要您的软件玩

01:03:07.000 --> 01:03:10.720
很好，那时候我确实希望

01:03:09.670 --> 01:03:13.360
可视化正在发生的事情的能力

01:03:10.720 --> 01:03:16.240
虽然我想去看看你知道

01:03:13.360 --> 01:03:17.650
这些电路在哪里

01:03:16.240 --> 01:03:19.740
麻烦哪里有麻烦，所以

01:03:17.650 --> 01:03:22.480
我要去Spring Rio创业

01:03:19.740 --> 01:03:25.120
我将创建历史记录仪表板

01:03:22.480 --> 01:03:27.490
在这里，我们在严格的仪表板上

01:03:25.120 --> 01:03:29.680
只是作为仪表板而已

01:03:27.490 --> 01:03:31.330
您可以用来可视化流程

01:03:29.680 --> 01:03:33.490
通过系统中电路的流量

01:03:31.330 --> 01:03:35.730
我将使用配置客户端

01:03:33.490 --> 01:03:40.690
自然而然，尤里卡的发现和

01:03:35.730 --> 01:03:47.970
 hystrix仪表板或瞧，那会

01:03:40.690 --> 01:03:51.100
在这里我们去生成Sean finder打开

01:03:47.970 --> 01:03:56.500
这实际上是一个非常简单的应用

01:03:51.100 --> 01:03:57.460
几乎是巧妙地将其粘贴

01:03:56.500 --> 01:03:59.320
那里

01:03:57.460 --> 01:04:03.010
我们将其命名为hystrix仪表板

01:03:59.320 --> 01:04:06.280
因为我可以并且我将删除

01:04:03.010 --> 01:04:07.750
应用程序属性，我要去

01:04:06.280 --> 01:04:11.320
去演示应用程序，我会在

01:04:07.750 --> 01:04:14.290
在历史记录仪表板上启用

01:04:11.320 --> 01:04:15.490
我们现在走了

01:04:14.290 --> 01:04:19.540
港口我不知道

01:04:15.490 --> 01:04:24.000
根本不知道我们现在在哪里

01:04:19.540 --> 01:04:30.130
有人8010我要买那个 localhost 

01:04:24.000 --> 01:04:32.230
 8010正斜杠hystrix点HTML可以

01:04:30.130 --> 01:04:34.930
现在历史记录开始HTML这是一个

01:04:32.230 --> 01:04:36.280
期望流的仪表板

01:04:34.930 --> 01:04:37.750
这些断路器的信息

01:04:36.280 --> 01:04:39.430
你会有断路器

01:04:37.750 --> 01:04:41.380
遍及您的系统，他们将

01:04:39.430 --> 01:04:44.290
发出心跳服务事件

01:04:41.380 --> 01:04:45.790
您可以从中获取的流

01:04:44.290 --> 01:04:50.260
节点 localhost 

01:04:45.790 --> 01:04:52.900
 8050正斜杠hystrix点流

01:04:50.260 --> 01:04:54.340
好的，这是服务器发送的事件哦，不要

01:04:52.900 --> 01:04:56.890
尝试卷曲它，你会在那里

01:04:54.340 --> 01:04:59.980
很长时间您想将其粘贴到

01:04:56.890 --> 01:05:01.690
在这里，你可以监控，你可以

01:04:59.980 --> 01:05:03.400
看到您的漂亮可视化

01:05:01.690 --> 01:05:05.250
记住我的电路是其余的

01:05:03.400 --> 01:05:07.780
名为获取保留名称的控制器

01:05:05.250 --> 01:05:10.720
我现在要把它移到这里

01:05:07.780 --> 01:05:12.160
把它移到那边，让我们创建

01:05:10.720 --> 01:05:15.040
一些交通，我们会看到会发生什么

01:05:12.160 --> 01:05:16.530
当我创建一些活动时，如果我

01:05:15.040 --> 01:05:19.240
可以在这里找到一个实例

01:05:16.530 --> 01:05:20.800
预订名称很好，所以我要

01:05:19.240 --> 01:05:22.450
在我指挥的左边开车

01:05:20.800 --> 01:05:24.400
它的速度就像我的小手指将让

01:05:22.450 --> 01:05:26.110
我，你会看到可视化

01:05:24.400 --> 01:05:28.600
在右边或多或少是实时的

01:05:26.110 --> 01:05:29.980
我现在要放手，它仍然

01:05:28.600 --> 01:05:33.040
令人耳目一新，这就是我捕鲸的辛苦

01:05:29.980 --> 01:05:34.780
那，你看到它破裂了

01:05:33.040 --> 01:05:37.090
实时，但作为移动均线

01:05:34.780 --> 01:05:38.800
交通流失了数字趋势

01:05:37.090 --> 01:05:39.730
再次向下很棒，所以东西很绿色

01:05:38.800 --> 01:05:41.950
事情很好

01:05:39.730 --> 01:05:45.790
绿色是美好的 Spring 是绿色 Spring 是

01:05:41.950 --> 01:05:49.510
好，让我们看看如果发生了什么

01:05:45.790 --> 01:05:51.700
往南走，可以回去预约

01:05:49.510 --> 01:05:54.730
服务再次将其带出游戏

01:05:51.700 --> 01:05:56.280
悲伤，但现在瞬间，它在红色

01:05:54.730 --> 01:05:57.850
正确率是百分之一百

01:05:56.280 --> 01:05:59.950
最终，该电路将

01:05:57.850 --> 01:06:01.450
正式开放，您可以看到

01:05:59.950 --> 01:06:04.310
那是正确的，你明白了

01:06:01.450 --> 01:06:07.300
获得可视化流程的能力

01:06:04.310 --> 01:06:09.680
系统中的数据只是一个

01:06:07.300 --> 01:06:10.760
服务正确，所以我要重新启动我的

01:06:09.680 --> 01:06:11.570
预订服务，我们会来

01:06:10.760 --> 01:06:14.180
一起

01:06:11.570 --> 01:06:16.160
对不起，当电路断开时，它走了

01:06:14.180 --> 01:06:16.580
蓝色，他们已经看到，所以红色是

01:06:16.160 --> 01:06:19.730
失败

01:06:16.580 --> 01:06:22.010
蓝色是我什至不去尝试，是的，我

01:06:19.730 --> 01:06:23.900
知道它已经失败了，我什至不去尝试

01:06:22.010 --> 01:06:25.220
是的，这是有用的

01:06:23.900 --> 01:06:26.960
对，这就是为什么它是一个电路

01:06:25.220 --> 01:06:29.000
现在当然要订购东西了

01:06:26.960 --> 01:06:30.770
又好，所以我们切断了

01:06:29.000 --> 01:06:32.480
完全下游的交通

01:06:30.770 --> 01:06:35.930
我们不会让任何人不知所措

01:06:32.480 --> 01:06:37.040
再往下游精确一点

01:06:35.930 --> 01:06:38.510
是的，你想防止

01:06:37.040 --> 01:06:41.119
变得不止于雅

01:06:38.510 --> 01:06:42.680
处理多于帮助您，我做到了

01:06:41.119 --> 01:06:44.420
如果我有更多的话，自然是一个节点

01:06:42.680 --> 01:06:46.010
比使用电路的一项服务

01:06:44.420 --> 01:06:49.450
我想形象化一个倡导者

01:06:46.010 --> 01:06:52.340
为此，我们拥有涡轮AMQP 

01:06:49.450 --> 01:06:54.590
复选框，它连接到Rab和Q 

01:06:52.340 --> 01:06:55.820
然后可以汇总这些流

01:06:54.590 --> 01:06:57.920
来自不同的电路和

01:06:55.820 --> 01:06:59.000
他们将不同的系统整合成一个流

01:06:57.920 --> 01:07:02.720
不要在Netflix和Netflix上这样做

01:06:59.000 --> 01:07:04.580
他们只是问尤里卡所​​有

01:07:02.720 --> 01:07:08.150
服务实例是，然后它们

01:07:04.580 --> 01:07:10.010
去拉流从他们，所以我们

01:07:08.150 --> 01:07:12.020
我们是否以相反的方式做到了

01:07:10.010 --> 01:07:14.330
推他们到AMQP，所以只有一个

01:07:12.020 --> 01:07:16.220
您只听消息的地方

01:07:14.330 --> 01:07:18.380
在队列中并获取所有流

01:07:16.220 --> 01:07:21.349
一个地方，那就是那个涡轮

01:07:18.380 --> 01:07:22.970
目标QP现在可以正确追踪

01:07:21.349 --> 01:07:25.310
这是另一个非常令人兴奋的功能

01:07:22.970 --> 01:07:26.480
 Spring Cloud 布里克斯顿里面是

01:07:25.310 --> 01:07:29.540
你在哪里住哪座城市

01:07:26.480 --> 01:07:32.390
我住在布里克斯顿，哦，不，发生了什么事

01:07:29.540 --> 01:07:34.339
想知道为什么我是史云顿的科瓦奇人

01:07:32.390 --> 01:07:37.849
中的字母排列

01:07:34.339 --> 01:07:39.440
无论如何，这个认识的世界

01:07:37.849 --> 01:07:42.710
否则有一个最喜欢的廉价车站

01:07:39.440 --> 01:07:43.690
以C开头来和

01:07:42.710 --> 01:07:46.490
我待会儿

01:07:43.690 --> 01:07:49.940
嗯，什么是令人兴奋的新功能

01:07:46.490 --> 01:07:52.490
在 Spring 的云彩Brixton中，我做得很好

01:07:49.940 --> 01:07:54.410
那好吧然后谢谢你我习惯了

01:07:52.490 --> 01:07:56.869
这里令人兴奋的新功能是

01:07:54.410 --> 01:08:00.950
整合了所谓的 Spring 

01:07:56.869 --> 01:08:04.790
知道怎么回事的云侦探索利斯

01:08:00.950 --> 01:08:08.390
确实像夏洛克·福尔摩斯一样

01:08:04.790 --> 01:08:09.230
侦探发现我们已经选择了

01:08:08.390 --> 01:08:11.089
这个名字

01:08:09.230 --> 01:08:13.160
正如我们所说有些争议，但

01:08:11.089 --> 01:08:14.560
这么多人说是的，我喜欢我

01:08:13.160 --> 01:08:16.510
真的很喜欢

01:08:14.560 --> 01:08:18.760
我们做不到哪做的菜

01:08:16.510 --> 01:08:21.100
改变它的父母是很难的

01:08:18.760 --> 01:08:23.740
中国人很抱歉，我们要

01:08:21.100 --> 01:08:25.690
必须找到一个不错的汉字来

01:08:23.740 --> 01:08:28.000
放在网站上意味着同样的事情

01:08:25.690 --> 01:08:30.250
我们不是说有些话只是

01:08:28.000 --> 01:08:31.720
不可发音，适合所有人

01:08:30.250 --> 01:08:33.700
我们都有一些我们无法理解的话

01:08:31.720 --> 01:08:37.390
是的，我五岁了

01:08:33.700 --> 01:08:39.670
还是这些-是的，尴尬，所以无论如何

01:08:37.390 --> 01:08:40.720
我们想要这个蓝色并将其整合

01:08:39.670 --> 01:08:42.580
它所做的是为我们提供了

01:08:40.720 --> 01:08:44.710
分布式跟踪为什么要

01:08:42.580 --> 01:08:46.510
如果我有一项以上的服务

01:08:44.710 --> 01:08:46.960
在分布式系统中

01:08:46.510 --> 01:08:49.150
将

01:08:46.960 --> 01:08:51.580
我希望能够关联哪个

01:08:49.150 --> 01:08:54.010
请求触发了某种输出

01:08:51.580 --> 01:08:55.300
在另一个服务中，如果我拨打电话

01:08:54.010 --> 01:08:57.190
从一项服务到另一项服务

01:08:55.300 --> 01:08:58.810
在中间，我想死

01:08:57.190 --> 01:09:00.819
第一个请求

01:08:58.810 --> 01:09:03.100
触发了第二个错误

01:09:00.819 --> 01:09:05.080
关于关系，并且

01:09:03.100 --> 01:09:07.380
这也与延迟有关

01:09:05.080 --> 01:09:10.510
人们用它来寻找延迟错误

01:09:07.380 --> 01:09:12.330
非常好非常有用，所以我们有一个

01:09:10.510 --> 01:09:15.700
通用抽象Spring 云侦探

01:09:12.330 --> 01:09:18.370
有一个第一个实现是

01:09:15.700 --> 01:09:19.990
基于来自ashley的Zipkin 

01:09:18.370 --> 01:09:23.140
第二实施，但无论如何

01:09:19.990 --> 01:09:25.540
第一个实现只是记录

01:09:23.140 --> 01:09:27.310
一切都会脱颖而出，然后

01:09:25.540 --> 01:09:28.810
您可以以任何方式将其聚合

01:09:27.310 --> 01:09:31.089
想要实际上非常强大的

01:09:28.810 --> 01:09:33.040
是的，我们已经有客户在使用

01:09:31.089 --> 01:09:34.720
那是因为那是一个

01:09:33.040 --> 01:09:37.000
来自

01:09:34.720 --> 01:09:38.800
对于财务人员，您好，Marty，谢谢

01:09:37.000 --> 01:09:40.930
你们在这里的人

01:09:38.800 --> 01:09:44.410
然后我们加了一个抽象

01:09:40.930 --> 01:09:46.450
并为此实现了抽象

01:09:44.410 --> 01:09:47.020
是Zipkin的东西，这是Adrian Cole的

01:09:46.450 --> 01:09:49.780
宝宝

01:09:47.020 --> 01:09:51.220
 Adrian最近加入了我们，我们可能会看到

01:09:49.780 --> 01:09:52.630
现在在Twitter上，他稍后会在这里

01:09:51.220 --> 01:09:56.650
今天，所以如果你想与任何人交谈

01:09:52.630 --> 01:09:58.240
关于追踪那个基本上是

01:09:56.650 --> 01:09:59.800
在那本书上写了这本书

01:09:58.240 --> 01:10:00.940
今天晚些时候，所以他只是从

01:09:59.800 --> 01:10:02.380
是的

01:10:00.940 --> 01:10:04.480
它会在之前使用差异

01:10:02.380 --> 01:10:06.430
然后看到Netflix的事情

01:10:04.480 --> 01:10:08.710
他几乎可以得到任何东西

01:10:06.430 --> 01:10:12.910
是的，那个家伙可以云

01:10:08.710 --> 01:10:18.010
针对那个公司，所以现在我们有了

01:10:12.910 --> 01:10:19.510
这项服务，我希望它可以被追踪

01:10:18.010 --> 01:10:21.610
我想要消息去做，我可以

01:10:19.510 --> 01:10:23.469
已经在记录中看到CH对哦对

01:10:21.610 --> 01:10:25.690
我有一个日志，这些是

01:10:23.469 --> 01:10:27.700
此刻空着，但我想我想

01:10:25.690 --> 01:10:29.440
将它们转化为实际的相关

01:10:27.700 --> 01:10:30.670
你知道他们是空的，因为

01:10:29.440 --> 01:10:34.330
什么都没发生对不对你

01:10:30.670 --> 01:10:35.260
只是记录测试的启动

01:10:34.330 --> 01:10:36.790
非常正确

01:10:35.260 --> 01:10:38.170
所以我要做的第一件事就是

01:10:36.790 --> 01:10:40.650
要回到我在这里的建筑，我们

01:10:38.170 --> 01:10:43.810
介绍Spring Cloud Starter Zipkin 

01:10:40.650 --> 01:10:45.820
而且我哦我必须做哦我需要

01:10:43.810 --> 01:10:48.760
向取样器介绍一种类型的光束

01:10:45.820 --> 01:10:52.600
现在为什么要采样

01:10:48.760 --> 01:10:54.940
取样器医生的类型，因为它在

01:10:52.600 --> 01:10:58.300
这些分布式跟踪的性质

01:10:54.940 --> 01:11:00.070
系统人们惊讶地发现

01:10:58.300 --> 01:11:01.660
你有很多数据

01:11:00.070 --> 01:11:04.239
可以用这种东西产生

01:11:01.660 --> 01:11:06.820
所以实际上完全是强制性的

01:11:04.239 --> 01:11:08.140
有某种统计样本

01:11:06.820 --> 01:11:10.780
不想收集所有流量

01:11:08.140 --> 01:11:12.219
这是不可能的，只是杀死

01:11:10.780 --> 01:11:13.870
您将要使用的任何后端

01:11:12.219 --> 01:11:15.700
放在里面，所以有一个叫做

01:11:13.870 --> 01:11:18.850
采样器中我们引入了一个抽象

01:11:15.700 --> 01:11:21.219
 Spring 的云基本上只是在

01:11:18.850 --> 01:11:22.719
一分钟只有一个实现- 

01:11:21.219 --> 01:11:24.640
有一个说总是”和一个

01:11:22.719 --> 01:11:26.200
这表示从不，而且从来没有是默认值

01:11:24.640 --> 01:11:28.000
因此，我们始终将其放入

01:11:26.200 --> 01:11:29.590
我们将获得所有流量，但

01:11:28.000 --> 01:11:32.050
你可以，你可以加一个，我们将

01:11:29.590 --> 01:11:34.630
添加更多，所以我们将添加那些

01:11:32.050 --> 01:11:37.510
您可以在运行时进行正确的调整，这样您就可以

01:11:34.630 --> 01:11:39.550
说正确，我想取样所有

01:11:37.510 --> 01:11:40.660
来自星巴克男人的要求，因为他

01:11:39.550 --> 01:11:41.080
一个白痴，我想看看他是什么

01:11:40.660 --> 01:11:44.710
在做

01:11:41.080 --> 01:11:46.150
缺少那种东西而受伤，但是

01:11:44.710 --> 01:11:47.770
在一分钟内，我们只是要去

01:11:46.150 --> 01:11:49.300
只是要获取所有的所有痕迹

01:11:47.770 --> 01:11:55.719
数据，以便我们可以看一下

01:11:49.300 --> 01:11:57.219
某些东西停止运行并重新运行

01:11:55.719 --> 01:12:00.310
今晚也将在主题演讲中

01:11:57.219 --> 01:12:03.370
顺便说一句

01:12:00.310 --> 01:12:04.660
您是否在谈论类似谈话

01:12:03.370 --> 01:12:11.200
你坐在旁边的人

01:12:04.660 --> 01:12:13.530
该观众的第一个演示，它是

01:12:11.200 --> 01:12:15.630
有目标植物长度的一种疾病

01:12:13.530 --> 01:12:16.710
我认为Spencer会参与其中

01:12:15.630 --> 01:12:19.800
和他明天的演讲

01:12:16.710 --> 01:12:22.110
好，非常完美，所以我做了什么

01:12:19.800 --> 01:12:23.640
我已经将始终采样器添加到两者中

01:12:22.110 --> 01:12:25.980
预订服务和客户我

01:12:23.640 --> 01:12:27.780
添加了 Spring Cloud 启动器Zipkin 

01:12:25.980 --> 01:12:32.250
实际上和今天下午的主要斯宾塞

01:12:27.780 --> 01:12:34.200
以及活着的维甘筋疲力尽

01:12:32.250 --> 01:12:35.910
你去那里，所以现在两边

01:12:34.200 --> 01:12:37.470
我可以通过转到

01:12:35.910 --> 01:12:39.840
预订客户端获取数据

01:12:37.470 --> 01:12:43.020
那里的要求也死了

01:12:39.840 --> 01:12:45.420
得到了休息请求，他去了

01:12:43.020 --> 01:12:47.250
另一个休息请求的服务

01:12:45.420 --> 01:12:51.660
对对对，所以我们期待看到

01:12:47.250 --> 01:12:52.320
两个跨越那两条腿的两个元素

01:12:51.660 --> 01:12:54.450
在旅途中

01:12:52.320 --> 01:12:56.640
我在这里的外壳上运行了Zipkin 

01:12:54.450 --> 01:12:58.440
再有三个注意

01:12:56.640 --> 01:13:00.120
那里有网络

01:12:58.440 --> 01:13:01.320
收集器和查询引擎，所以这些

01:13:00.120 --> 01:13:03.300
侧面有三件事

01:13:01.320 --> 01:13:04.650
运行起来很容易，获得很好

01:13:03.300 --> 01:13:05.010
克隆代码，然后进入垃圾箱

01:13:04.650 --> 01:13:06.510
目录

01:13:05.010 --> 01:13:09.060
这是一个Gradle版本，所以你可以做

01:13:06.510 --> 01:13:10.710
 bin或斜杠收集器销（用于斜杠） 

01:13:09.060 --> 01:13:13.050
在码头上的图像实际上

01:13:10.710 --> 01:13:16.520
这样，火花就更容易了

01:13:13.050 --> 01:13:19.320
让我们看看我是否要进入 localhost 8080 

01:13:16.520 --> 01:13:23.370
 Zipkin正在运行

01:13:19.320 --> 01:13:26.490
网络用户界面，我认为可以，您可以看到

01:13:23.370 --> 01:13:27.780
为我俩提供实例服务

01:13:26.490 --> 01:13:30.180
客户和我的服务他们都在这里

01:13:27.780 --> 01:13:31.560
具体的电路类型是

01:13:30.180 --> 01:13:33.180
具体的痕迹类型

01:13:31.560 --> 01:13:35.070
入口和出口点

01:13:33.180 --> 01:13:37.620
应用程序或在这里表示如此

01:13:35.070 --> 01:13:39.750
我想看的预订名称

01:13:37.620 --> 01:13:42.150
从那里到那里的一切

01:13:39.750 --> 01:13:46.050
大约一分钟前，您可以看到

01:13:42.150 --> 01:13:48.810
我的预订服务很好

01:13:46.050 --> 01:13:49.290
在这里医生您解释是的，我们是什么

01:13:48.810 --> 01:13:51.990
看着

01:13:49.290 --> 01:13:54.350
是的，打来的电话就像

01:13:51.990 --> 01:13:57.210
瀑布对您来说这是一个带有

01:13:54.350 --> 01:14:01.140
时间线上的电话是在

01:13:57.210 --> 01:14:03.990
顶部-我可以看到闪光的路径

01:14:01.140 --> 01:14:06.240
命名某事发生了一点

01:14:03.990 --> 01:14:09.750
那里的等待时间接近60 

01:14:06.240 --> 01:14:11.310
服务器上的毫秒数

01:14:09.750 --> 01:14:13.500
对方没事，所以你可以

01:14:11.310 --> 01:14:15.030
看到西班牙语，我想如果您单击

01:14:13.500 --> 01:14:17.430
那是一位先生

01:14:15.030 --> 01:14:18.350
然后你会看到它有些重复

01:14:17.430 --> 01:14:19.940
继续

01:14:18.350 --> 01:14:21.350
为什么那是我们需要解决的问题，但是

01:14:19.940 --> 01:14:25.070
看那里的顶部

01:14:21.350 --> 01:14:27.560
客户和收到方括号的客户

01:14:25.070 --> 01:14:29.900
服务器周围接收服务发送并

01:14:27.560 --> 01:14:33.050
说服务器已经发回一些数据

01:14:29.900 --> 01:14:34.520
在这个范围内说它得到了数据

01:14:33.050 --> 01:14:37.310
它处理了它并发回了

01:14:34.520 --> 01:14:39.350
再次，这样您就可以看到时间表

01:14:37.310 --> 01:14:42.500
这里的术语实际上来自数据

01:14:39.350 --> 01:14:44.690
这是谷歌谷歌跟踪

01:14:42.500 --> 01:14:46.160
引擎不是开源的，但是他们

01:14:44.690 --> 01:14:49.990
发表了一篇我要去的论文

01:14:46.160 --> 01:14:52.820
做到谷歌的权利，不是谷歌

01:14:49.990 --> 01:14:54.980
每个人都使用类似

01:14:52.820 --> 01:14:57.200
这样就可以像def一样

01:14:54.980 --> 01:15:00.410
还有另一条h迹线是

01:14:57.200 --> 01:15:02.390
比平视生态系统

01:15:00.410 --> 01:15:05.990
数据模型略有不同，但

01:15:02.390 --> 01:15:07.370
基本上它是基于def的唯一

01:15:05.990 --> 01:15:10.820
的问题是，这是非常

01:15:07.370 --> 01:15:12.230
 RPC专注于客户

01:15:10.820 --> 01:15:14.630
收发服务

01:15:12.230 --> 01:15:16.430
告诉你他们完成了

01:15:14.630 --> 01:15:17.330
说到发送，我们还要看看

01:15:16.430 --> 01:15:19.250
发生如果我你是的，让我们做一个

01:15:17.330 --> 01:15:21.230
消息传递一个正确的一个，所以是的

01:15:19.250 --> 01:15:24.320
发生了什么事，我们已经在急诊室了

01:15:21.230 --> 01:15:25.370
自然需要另一个名字

01:15:24.320 --> 01:15:30.280
这里的社区和医生父亲

01:15:25.370 --> 01:15:36.560
医生与我会骑佩塔佩塔

01:15:30.280 --> 01:15:36.950
加里，我的男孩，加里，好吧，加里，我们

01:15:36.560 --> 01:15:41.120
走

01:15:36.950 --> 01:15:46.730
点击“发送”，加里（Gary）对，这样

01:15:41.120 --> 01:15:51.430
现在工作，我们去Zipkin这个错误

01:15:46.730 --> 01:15:53.960
不支持退出键

01:15:51.430 --> 01:15:56.240
现在我们看到了什么

01:15:53.960 --> 01:15:58.490
你就是我用它的智慧哦

01:15:56.240 --> 01:16:03.950
抱歉，UI是他们使用它的原因

01:15:58.490 --> 01:16:06.440
和最新的第一预订客户

01:16:03.950 --> 01:16:09.440
不，你想要一个你只是好的

01:16:06.440 --> 01:16:11.840
晚上好，好吧，两排老

01:16:09.440 --> 01:16:14.680
保留的痕迹少于一个

01:16:11.840 --> 01:16:15.890
分钟前，我认为有人

01:16:14.680 --> 01:16:17.660
是的

01:16:15.890 --> 01:16:18.800
 HTTP保留，所以这是我们的地方

01:16:17.660 --> 01:16:22.100
发布消息，您可以看到

01:16:18.800 --> 01:16:23.360
标题在这里，但你知道

01:16:22.100 --> 01:16:25.580
数据何时进入系统

01:16:23.360 --> 01:16:26.220
然后你下去这里你会看到

01:16:25.580 --> 01:16:28.680
信息

01:16:26.220 --> 01:16:30.510
输入是另一面或

01:16:28.680 --> 01:16:32.760
来自Redis的邮件会看到

01:16:30.510 --> 01:16:35.130
来自Reb MQ的相同类型的消息或

01:16:32.760 --> 01:16:36.360
 Kafka标头信息元数据有关

01:16:35.130 --> 01:16:38.430
过境有一点

01:16:36.360 --> 01:16:41.250
那里的等待时间可以看到你走了吗

01:16:38.430 --> 01:16:42.300
回到是值得的一步

01:16:41.250 --> 01:16:43.800
注意我们正在做所有这一切

01:16:42.300 --> 01:16:44.850
自动为您拦截

01:16:43.800 --> 01:16:46.410
在兔子的其余模板上

01:16:44.850 --> 01:16:47.670
模板所有这些东西是的

01:16:46.410 --> 01:16:49.590
重要的事情，我不需要

01:16:47.670 --> 01:16:52.830
做所有我需要更改的代码

01:16:49.590 --> 01:16:54.990
我所做的就是添加采样器，然后看

01:16:52.830 --> 01:16:57.630
在等待时间您可以看到帖子

01:16:54.990 --> 01:17:00.480
结束了一点点白点

01:16:57.630 --> 01:17:03.330
然后差距像

01:17:00.480 --> 01:17:05.520
 Redis接受的毫秒数

01:17:03.330 --> 01:17:07.470
消息，然后将其推开

01:17:05.520 --> 01:17:08.730
所以这是消息代理时间

01:17:07.470 --> 01:17:10.380
消息，但是如果您的延迟在那里

01:17:08.730 --> 01:17:12.030
我们至少还无法捕获

01:17:10.380 --> 01:17:13.380
无论如何，我们会在乎您能推断出什么

01:17:12.030 --> 01:17:16.920
有趣的是有人问为什么

01:17:13.380 --> 01:17:19.070
是的，哦，你想念吗，你得到了

01:17:16.920 --> 01:17:19.070
这个

01:17:28.639 --> 01:17:32.600
在日志部分，那么什么是

01:17:30.739 --> 01:17:33.949
相关ID是问题

01:17:32.600 --> 01:17:35.810
我可以处理衣服的第一个问题

01:17:33.949 --> 01:17:38.389
是的，所以如果你看看你是否看着

01:17:35.810 --> 01:17:40.310
日志中，您会看到一些uu ID 

01:17:38.389 --> 01:17:43.070
在日志中，所以有一个

01:17:40.310 --> 01:17:45.800
上面有条痕迹

01:17:43.070 --> 01:17:49.040
整个瀑布然后

01:17:45.800 --> 01:17:52.159
这些条中的每一个都是一个跨度和一个跨度

01:17:49.040 --> 01:17:54.219
还有另一个UUID，第二个是

01:17:52.159 --> 01:17:54.219
题

01:17:57.560 --> 01:18:05.960
是的，是的，问题是

01:18:02.570 --> 01:18:07.730
在此不止一跳

01:18:05.960 --> 01:18:09.590
谈话我会发生什么

01:18:07.730 --> 01:18:11.750
主题演讲是的，我们要这样做吗

01:18:09.590 --> 01:18:14.180
今晚哦，是的，我的意思是显然我们有

01:18:11.750 --> 01:18:16.190
只是通过所有你要做的

01:18:14.180 --> 01:18:18.440
实际上，让我们继续追踪

01:18:16.190 --> 01:18:20.600
 ID，并在下一个标题中发送

01:18:18.440 --> 01:18:22.520
家伙，如果他在听正确的话

01:18:20.600 --> 01:18:27.050
然后他会捡起来把它打开

01:18:22.520 --> 01:18:28.880
了解更多信息，我知道

01:18:27.050 --> 01:18:30.470
我们听到您问我是否以斯帖

01:18:28.880 --> 01:18:32.600
好吧，我们都是时间，而不是时间

01:18:30.470 --> 01:18:34.250
是的，所以让我们先出发再出发

01:18:32.600 --> 01:18:38.050
首先要回答更多的问题

01:18:34.250 --> 01:18:43.310
你们认为你们是加尔斯，是的，也许

01:18:38.050 --> 01:18:45.800
疯了，你能用吗

01:18:43.310 --> 01:18:48.320
如此美丽的东西你能看到吗

01:18:45.800 --> 01:18:49.760
用例一词绝对正确，因此请务必

01:18:48.320 --> 01:18:51.410
查看当天的余额和

01:18:49.760 --> 01:18:53.990
演出的平衡很多精彩的演讲

01:18:51.410 --> 01:18:55.370
当然可以，我正在尝试

01:18:53.990 --> 01:18:57.320
列举他们所有的业务Spencer和

01:18:55.370 --> 01:18:59.560
我今天下午在谈论开发商

01:18:57.320 --> 01:19:01.460
专门体验这种东西

01:18:59.560 --> 01:19:03.350
马克，我今天下午在说话

01:19:01.460 --> 01:19:06.290
关于 Spring Cloud Stream 或

01:19:03.350 --> 01:19:07.370
消息传递中将包含Zipkin 

01:19:06.290 --> 01:19:11.540
今晚第一个主题演讲

01:19:07.370 --> 01:19:14.080
我想迈克尔有一个演示

01:19:11.540 --> 01:19:17.450
 Mennella在谈论 Spring 的云

01:19:14.080 --> 01:19:20.450
数据资料

01:19:17.450 --> 01:19:23.510
马吕斯在谈论 Spring 的云

01:19:20.450 --> 01:19:25.910
流数据流Spring Cup Spring- 

01:19:23.510 --> 01:19:27.080
 Spring AX de-evolution的根，还有

01:19:25.910 --> 01:19:28.910
发生的各种事情要当心

01:19:27.080 --> 01:19:30.890
对于那些在这方面以及在

01:19:28.910 --> 01:19:32.270
大数据跟踪主要是我想说的

01:19:30.890 --> 01:19:33.590
谢谢，我们提出了另一个问题

01:19:32.270 --> 01:19:37.270
他们正在寻找它，非常感谢

01:19:33.590 --> 01:19:37.270
好吧，就在您出发之前

01:19:44.810 --> 01:19:46.870
您

