WEBVTT
Kind: captions
Language: zh-Hans

00:00:09.980 --> 00:00:17.789
大家都很高兴来到这里

00:00:13.940 --> 00:00:20.610
我的名字叫爱德华多·索利斯（Eduardo Solis） 

00:00:17.789 --> 00:00:22.230
值卡瓦洛你可以开个玩笑

00:00:20.610 --> 00:00:24.800
来自墨西哥的东西进入酒吧

00:00:22.230 --> 00:00:27.630
找到一个巴西人

00:00:24.800 --> 00:00:29.310
我们以PayPal为标题

00:00:27.630 --> 00:00:31.560
演讲我会给你一个提示

00:00:29.310 --> 00:00:35.489
而我们实际上是基于美丽

00:00:31.560 --> 00:00:38.790
索尼真的很难得克萨斯州的奥斯汀

00:00:35.489 --> 00:00:41.670
我们演讲的目的是

00:00:38.790 --> 00:00:43.589
你和我们一起通过我们的梦幻

00:00:41.670 --> 00:00:48.989
 Java开发现代化的旅程

00:00:43.589 --> 00:00:50.549
在PayPal，要经历一段漫长的旅程

00:00:48.989 --> 00:00:53.129
到达我们现在所在的位置， 

00:00:50.549 --> 00:00:54.420
特别是根据这次会议

00:00:53.129 --> 00:00:57.540
我们想告诉你我们做了什么

00:00:54.420 --> 00:00:59.460
针对微服务，以及具体如何

00:00:57.540 --> 00:01:03.390
最后采用 spring boot 

00:00:59.460 --> 00:01:06.750
发布我们的框架，以便我们为

00:01:03.390 --> 00:01:07.950
贝宝通话中的一个小组，我认为是

00:01:06.750 --> 00:01:10.439
称为云平台， 

00:01:07.950 --> 00:01:13.470
基础设施基本上是

00:01:10.439 --> 00:01:17.250
我们团队的框架团队

00:01:13.470 --> 00:01:20.340
负责将Java引入

00:01:17.250 --> 00:01:23.610
新时代，我们拥有最

00:01:20.340 --> 00:01:27.090
所有人的成功内部框架

00:01:23.610 --> 00:01:29.250
我用Java来介绍一下

00:01:27.090 --> 00:01:32.400
一个想法，这里是几个数字，这

00:01:29.250 --> 00:01:34.380
这不是整个Java 

00:01:32.400 --> 00:01:37.140
贝宝这只是我们的条子

00:01:34.380 --> 00:01:39.180
是现代的新平台，所以

00:01:37.140 --> 00:01:40.409
大约有300多一点

00:01:39.180 --> 00:01:44.970
应用程序现已投入生产

00:01:40.409 --> 00:01:49.560
收取流量或处理以下款项

00:01:44.970 --> 00:01:52.170
那些247我们的服务，当我说

00:01:49.560 --> 00:01:55.830
服务，这基本上意味着宁静

00:01:52.170 --> 00:01:57.750
外部和内部服务有一个

00:01:55.830 --> 00:01:59.640
贝宝（PayPal）中的政策，即该服务

00:01:57.750 --> 00:02:01.890
放出一个API即可使用

00:01:59.640 --> 00:02:05.729
外面还是里面，他们不得不走

00:02:01.890 --> 00:02:10.769
到非常严格的API规范

00:02:05.729 --> 00:02:13.860
 50批处理吨的应用程序

00:02:10.769 --> 00:02:15.989
和大量的工作机会，还有

00:02:13.860 --> 00:02:18.389
大约32我们称之为消息D 

00:02:15.989 --> 00:02:20.430
怪物实际上确实在服务，但是

00:02:18.389 --> 00:02:23.550
而不是暴露宁静的api 

00:02:20.430 --> 00:02:27.150
只是暴露消息

00:02:23.550 --> 00:02:29.450
他们只是消耗来自

00:02:27.150 --> 00:02:33.930
我们拥有自己的不同服务

00:02:29.450 --> 00:02:36.570
这些基础设施基本上

00:02:33.930 --> 00:02:38.460
今天的应用程序，实际上我有一个

00:02:36.570 --> 00:02:43.110
昨天的号码不同，但是新的

00:02:38.460 --> 00:02:46.050
号码是昨晚来的

00:02:43.110 --> 00:02:48.210
这个小小的栈花了51亿

00:02:46.050 --> 00:02:50.310
每天有很多点击

00:02:48.210 --> 00:02:52.320
我们如何知道我们的框架

00:02:50.310 --> 00:02:54.330
仪器齐全，有很多

00:02:52.320 --> 00:02:55.530
您可以使用的指标包括

00:02:54.330 --> 00:03:00.060
的开发人员数量

00:02:55.530 --> 00:03:02.100
正在努力，所以我们有大约1100个

00:03:00.060 --> 00:03:04.980
或选择有经验的工程师

00:03:02.100 --> 00:03:07.200
及时处理这些

00:03:04.980 --> 00:03:11.090
支持的框架

00:03:07.200 --> 00:03:13.380
您，如果我们越专有，就越

00:03:11.090 --> 00:03:15.960
晦涩的API是我们放入了

00:03:13.380 --> 00:03:19.320
框架，我们将变得更加困难

00:03:15.960 --> 00:03:21.690
使用它对我们不利，因为我们

00:03:19.320 --> 00:03:23.460
大约有1100个人

00:03:21.690 --> 00:03:26.730
一个问题并说嘿我该怎么办

00:03:23.460 --> 00:03:28.770
解决它，我们注意到坚持

00:03:26.730 --> 00:03:30.870
像春天和开源之类的东西

00:03:28.770 --> 00:03:32.580
我们可以说的项目让我用谷歌搜索

00:03:30.870 --> 00:03:36.959
为您，我们给他们发送链接，他们

00:03:32.580 --> 00:03:40.290
如此迅速找到解决方案

00:03:36.959 --> 00:03:42.900
谢谢你我们将如何给予

00:03:40.290 --> 00:03:44.940
我们想做的介绍

00:03:42.900 --> 00:03:46.940
现场编码，但后来我们决定嘿

00:03:44.940 --> 00:03:50.100
我们将其粘贴到PowerPoint上

00:03:46.940 --> 00:03:51.480
培养没有编码的人

00:03:50.100 --> 00:03:53.790
为此，我们将要去

00:03:51.480 --> 00:03:56.959
使用PowerPoint我会给你一个

00:03:53.790 --> 00:03:59.160
架构和PayPal的历史

00:03:56.959 --> 00:04:00.870
有很多关于

00:03:59.160 --> 00:04:03.270
整体式或如何将其分解成微型

00:04:00.870 --> 00:04:05.040
服务我实际上很愉快

00:04:03.270 --> 00:04:08.310
在这次会议上感到惊讶，看看

00:04:05.040 --> 00:04:10.650
到目前为止，我们已经进入Pay​​Pal， 

00:04:08.310 --> 00:04:13.320
他开始了微服务之旅

00:04:10.650 --> 00:04:14.700
一会儿回来，我会尽快给你

00:04:13.320 --> 00:04:16.950
概述只是为了提供上下文

00:04:14.700 --> 00:04:18.630
关于当前的开发者是什么

00:04:16.950 --> 00:04:22.380
需要一个贝宝

00:04:18.630 --> 00:04:23.940
人们现在是多语言的堆栈，但是

00:04:22.380 --> 00:04:26.340
挑战之一是

00:04:23.940 --> 00:04:28.770
整个社区和

00:04:26.340 --> 00:04:31.530
特别是介绍我的Java专家

00:04:28.770 --> 00:04:33.900
对我们的框架来说，它有一个内部

00:04:31.530 --> 00:04:36.330
被称为战斗机的猛禽

00:04:33.900 --> 00:04:39.000
恐龙

00:04:36.330 --> 00:04:42.090
我们如何成为我们带来它的方式

00:04:39.000 --> 00:04:45.240
内部，然后我们要谈谈

00:04:42.090 --> 00:04:46.560
关于我们最新的路由器版本以及

00:04:45.240 --> 00:04:49.680
父亲将概述

00:04:46.560 --> 00:04:51.750
我们如何搜索它以使用 spring boot 作为

00:04:49.680 --> 00:04:55.439
应该是容器中的Tomcat 

00:04:51.750 --> 00:04:56.960
基于框架和所有其他

00:04:55.439 --> 00:04:59.189
从中学到的所有东西

00:04:56.960 --> 00:05:02.610
我们必须面对的问题以及我们如何解决

00:04:59.189 --> 00:05:03.659
他们，我们将很快得出结论

00:05:02.610 --> 00:05:05.400
带着我们要去的地方

00:05:03.659 --> 00:05:06.539
从这里开始，我们现在在

00:05:05.400 --> 00:05:11.940
春天的食物，我们实际上正在寻找

00:05:06.539 --> 00:05:14.370
在春天这个崭新的生态系统中

00:05:11.940 --> 00:05:18.659
云和控制台，其中一些

00:05:14.370 --> 00:05:20.250
其他令人兴奋的令人兴奋的技术

00:05:18.659 --> 00:05:25.080
来，然后我们要离开

00:05:20.250 --> 00:05:28.349
进行问答的时间，让我们快速进行

00:05:25.080 --> 00:05:31.319
看看PayPal，好吗，PayPal是

00:05:28.349 --> 00:05:34.469
出生于1999年

00:05:31.319 --> 00:05:38.909
没有关于C ++和CGI的紧急信息

00:05:34.469 --> 00:05:40.080
直到2004年，PayPal还是一块巨石

00:05:38.909 --> 00:05:44.580
有几个应用程序

00:05:40.080 --> 00:05:48.090
围绕这个整体，但基本上是

00:05:44.580 --> 00:05:53.180
这个巨大的C ++应用程序正在运行

00:05:48.090 --> 00:05:53.180
 CGI全部用C ++编写

00:05:53.389 --> 00:05:57.509
那里有个故事

00:05:55.860 --> 00:05:59.580
有人打印了该源代码， 

00:05:57.509 --> 00:06:01.229
他们把它放在一个

00:05:59.580 --> 00:06:02.789
我们最高的最高建筑物

00:06:01.229 --> 00:06:05.190
贝宝，实际上就像去

00:06:02.789 --> 00:06:06.300
到x的来回纸很多

00:06:05.190 --> 00:06:09.029
在可能杀死很多树木的地方

00:06:06.300 --> 00:06:10.680
他们，当然他不是

00:06:09.029 --> 00:06:14.190
允许企业在

00:06:10.680 --> 00:06:18.629
速度，因此它需要2007 

00:06:14.190 --> 00:06:20.120
到达整体

00:06:18.629 --> 00:06:25.440
不可持续的，然后有这些新

00:06:20.120 --> 00:06:27.560
有两到两件事发生

00:06:25.440 --> 00:06:29.580
有一种叫做

00:06:27.560 --> 00:06:32.069
有人创造了一种叫做

00:06:29.580 --> 00:06:34.339
 Atlas框架基本上就是géza 

00:06:32.069 --> 00:06:36.360
所以斧头纸上的发展方法

00:06:34.339 --> 00:06:38.009
除了他们不想用肥皂

00:06:36.360 --> 00:06:41.159
他们评估了肥皂，他们不喜欢

00:06:38.009 --> 00:06:43.289
他们决定使用，我认为

00:06:41.159 --> 00:06:45.330
被吸引使用二进制的时间

00:06:43.289 --> 00:06:49.710
协议，但是什么样的肥皂

00:06:45.330 --> 00:06:52.650
帖子和RPC样式的语义

00:06:49.710 --> 00:06:54.150
但这是同时所有的C ++ 

00:06:52.650 --> 00:06:56.069
另一个项目开始好吧，让我们休息

00:06:54.150 --> 00:06:57.419
将此模型建模到服务中，让我们

00:06:56.069 --> 00:07:00.749
现在把它分解成碎片

00:06:57.419 --> 00:07:04.469
 Atlas框架，因此我们开始了

00:07:00.749 --> 00:07:06.300
进入分布式计算

00:07:04.469 --> 00:07:08.550
你想称它带来了很多

00:07:06.300 --> 00:07:09.620
我们谈到的新挑战

00:07:08.550 --> 00:07:12.509
关于这次会议的权利

00:07:09.620 --> 00:07:14.969
分布式跟踪我们如何

00:07:12.509 --> 00:07:16.889
知道并跟踪呼叫的去向

00:07:14.969 --> 00:07:19.379
 A点到B点C点到D点

00:07:16.889 --> 00:07:21.180
再次

00:07:19.379 --> 00:07:23.370
我如何测量延迟

00:07:21.180 --> 00:07:26.759
那我怎么能看到所有

00:07:23.370 --> 00:07:32.129
进入系统，然后回到我们

00:07:26.759 --> 00:07:33.900
开始了2008年的旅程

00:07:32.129 --> 00:07:39.389
碰巧前两个框架

00:07:33.900 --> 00:07:41.039
 Java的介绍很多

00:07:39.389 --> 00:07:43.650
在开始的抵抗

00:07:41.039 --> 00:07:46.740
采用Java是因为当时

00:07:43.650 --> 00:07:48.930
口号很好，C ++很快

00:07:46.740 --> 00:07:53.550
 Java真的不会这么做的快

00:07:48.930 --> 00:07:56.520
削减它不仅是低，所以有

00:07:53.550 --> 00:07:58.289
面临许多挑战， 

00:07:56.520 --> 00:08:00.150
将Java带到堆栈中

00:07:58.289 --> 00:08:02.849
它实际上是由两个人带来的原因

00:08:00.150 --> 00:08:05.189
那里有不同的人群

00:08:02.849 --> 00:08:06.870
有一群人试图

00:08:05.189 --> 00:08:11.399
把它带到前端并说嘿

00:08:06.870 --> 00:08:12.719
 Web应用程序，然后是Java 

00:08:11.399 --> 00:08:14.909
是当今行业的选择

00:08:12.719 --> 00:08:18.469
外面让我们尝试让我们尝试做到这一点

00:08:14.909 --> 00:08:21.360
他们从新鲜的春季MVC开始

00:08:18.469 --> 00:08:25.050
建立在我们所拥有的东西之上

00:08:21.360 --> 00:08:27.330
对我来说，他们称之为英国盒

00:08:25.050 --> 00:08:30.360
盒子里是eBay的环境

00:08:27.330 --> 00:08:30.960
是一种非常古老但又非常

00:08:30.360 --> 00:08:33.510
老式

00:08:30.960 --> 00:08:36.810
 Java编程模型

00:08:33.510 --> 00:08:38.490
去他们春天MVC是一个

00:08:36.810 --> 00:08:42.630
头等公民，但当时是

00:08:38.490 --> 00:08:44.820
所有XML都开始增长， 

00:08:42.630 --> 00:08:47.250
它变成了一个沉重的框架

00:08:44.820 --> 00:08:49.740
有很多专有组件

00:08:47.250 --> 00:08:52.740
同时并行有

00:08:49.740 --> 00:08:54.779
实际上有一个服务栈D 

00:08:52.740 --> 00:08:56.610
支持该专有技术

00:08:54.779 --> 00:09:01.829
来自Atlas框架的协议

00:08:56.610 --> 00:09:03.300
我们称它为SF，看起来像

00:09:01.829 --> 00:09:06.960
像轴

00:09:03.300 --> 00:09:08.820
在顶部，但实际上

00:09:06.960 --> 00:09:11.940
有点奇怪，因为他正在这样做

00:09:08.820 --> 00:09:13.560
这个专有协议和那个

00:09:11.940 --> 00:09:15.870
一开始没有春天

00:09:13.560 --> 00:09:17.400
春天是后来添加的，但更多

00:09:15.870 --> 00:09:21.180
就像第二次巡回演出一样，我们会

00:09:17.400 --> 00:09:23.490
到目前为止，他们保持纸张

00:09:21.180 --> 00:09:25.620
成长，他们允许开发人员开始

00:09:23.490 --> 00:09:28.110
采用Java人使其成为

00:09:25.620 --> 00:09:34.170
 Java的主流语言是Orion 

00:09:28.110 --> 00:09:36.360
纸张很棒，但2014年在那里

00:09:34.170 --> 00:09:37.740
决定说嘿

00:09:36.360 --> 00:09:39.780
开发人员必须学习才有意义

00:09:37.740 --> 00:09:41.400
他们没有共享核心的两个框架

00:09:39.780 --> 00:09:44.010
或者他们有点分享核心

00:09:41.400 --> 00:09:45.510
但你基本上不能离开一个

00:09:44.010 --> 00:09:47.930
无缝地学习

00:09:45.510 --> 00:09:50.550
一个然后必须学习另一个

00:09:47.930 --> 00:09:52.740
有很多专有的api 

00:09:50.550 --> 00:09:54.900
它和许多专有技巧

00:09:52.740 --> 00:09:57.570
你必须去看文档

00:09:54.900 --> 00:09:59.640
在贝宝（PayPal）内部，就像您是否通过Google搜索

00:09:57.570 --> 00:10:02.130
它不会因为点击而获得成功

00:09:59.640 --> 00:10:06.870
他们不，他们不做那些

00:10:02.130 --> 00:10:10.770
本文知道所以有一个主意

00:10:06.870 --> 00:10:14.010
用来创建一个统一的堆栈

00:10:10.770 --> 00:10:17.310
一种更现代的Java方法

00:10:14.010 --> 00:10:18.900
同时PayPal和eBay合并

00:10:17.310 --> 00:10:22.800
技术

00:10:18.900 --> 00:10:24.780
这个想法是嘿，为什么我们有一个拜

00:10:22.800 --> 00:10:27.000
实验室和纸质实验室为什么我们不只是

00:10:24.780 --> 00:10:30.750
大家都合并到这个

00:10:27.000 --> 00:10:32.880
大单位，我们只生产

00:10:30.750 --> 00:10:35.820
两者的技术，这真是太好了

00:10:32.880 --> 00:10:37.770
是我们抓住核心的机会

00:10:35.820 --> 00:10:41.640
 eBay已经创建了，那已经

00:10:37.770 --> 00:10:43.230
叫做Raptor，我们投入了很多

00:10:41.640 --> 00:10:46.910
我们将其中的几项更改为

00:10:43.230 --> 00:10:50.690
适应更现代的Java堆栈并

00:10:46.910 --> 00:10:54.390
今天是今天我们在谈论

00:10:50.690 --> 00:10:57.780
微服务我们有一条路是

00:10:54.390 --> 00:10:59.580
专有，我们正在为我们锦上添花

00:10:57.780 --> 00:11:02.550
我们可以构建docker的环境

00:10:59.580 --> 00:11:03.990
具有我们实际应用的容器

00:11:02.550 --> 00:11:06.060
具有远程配置的概念

00:11:03.990 --> 00:11:07.860
而对于那些拥有

00:11:06.060 --> 00:11:09.830
一直去春季云研讨会

00:11:07.860 --> 00:11:12.180
您会看到如何做到这一点

00:11:09.830 --> 00:11:14.370
远程配置和应用程序拉

00:11:12.180 --> 00:11:16.190
我将有一段时间了

00:11:14.370 --> 00:11:19.529
相当复杂

00:11:16.190 --> 00:11:21.029
我们是否正在尝试采用更强大的功能

00:11:19.529 --> 00:11:23.690
我们有服务发现功能，但是

00:11:21.029 --> 00:11:26.790
基本的，我们要去

00:11:23.690 --> 00:11:28.200
通过更复杂的解决方案，我们

00:11:26.790 --> 00:11:29.730
一直在谈论弹性

00:11:28.200 --> 00:11:32.970
我们采用hystrix的模式

00:11:29.730 --> 00:11:36.899
现在我们自己，所以这是我们的地方

00:11:32.970 --> 00:11:38.970
让我谈谈

00:11:36.899 --> 00:11:40.380
贝宝对开发人员的挑战

00:11:38.970 --> 00:11:44.640
会发现可能是一样的

00:11:40.380 --> 00:11:48.899
内在的挑战

00:11:44.640 --> 00:11:51.680
公司不是唯一的PayPal 

00:11:48.899 --> 00:11:54.300
开发人员必须非常敏捷

00:11:51.680 --> 00:11:55.709
支付空间非常有竞争力

00:11:54.300 --> 00:11:59.399
现在有一个激烈的竞争

00:11:55.709 --> 00:12:02.100
 PayPal正在尝试的许多公司

00:11:59.399 --> 00:12:03.570
在很多不同领域进行创新

00:12:02.100 --> 00:12:06.000
他们需要启动应用程序

00:12:03.570 --> 00:12:07.980
那些应用程序需要的很快

00:12:06.000 --> 00:12:11.850
支持服务有很多

00:12:07.980 --> 00:12:14.640
的业务从

00:12:11.850 --> 00:12:19.190
想要非常快的结果

00:12:14.640 --> 00:12:21.360
你这种类型的时间很紧

00:12:19.190 --> 00:12:23.730
交付这些新产品的截止日期

00:12:21.360 --> 00:12:26.880
应用这些新功能，但

00:12:23.730 --> 00:12:29.750
我必须有高质量，因为你

00:12:26.880 --> 00:12:33.240
不想第一印象不好

00:12:29.750 --> 00:12:35.459
这里有很多问题

00:12:33.240 --> 00:12:38.550
当贝宝进入

00:12:35.459 --> 00:12:41.070
麻烦你很多钱

00:12:38.550 --> 00:12:43.970
输了，所以我们有很多

00:12:41.070 --> 00:12:47.130
复杂的连续交付

00:12:43.970 --> 00:12:49.019
围绕存在的自动化测试工具

00:12:47.130 --> 00:12:53.100
能够弄清楚我们是否有船

00:12:49.019 --> 00:12:55.769
还是我们是支付公司的证券

00:12:53.100 --> 00:12:57.510
对我们来说是第一位的关注点

00:12:55.769 --> 00:13:00.540
自

00:12:57.510 --> 00:13:02.070
一开始都已经完成SSL 

00:13:00.540 --> 00:13:05.430
先生到后面的方式

00:13:02.070 --> 00:13:07.769
大多数公司倾向于终止

00:13:05.430 --> 00:13:09.600
我们前面的一个单元格

00:13:07.769 --> 00:13:12.510
但这只是一而已

00:13:09.600 --> 00:13:13.790
正确的方面，我们必须处理很多事情

00:13:12.510 --> 00:13:17.910
安全认证授权

00:13:13.790 --> 00:13:20.339
在很多事情上制定政策

00:13:17.910 --> 00:13:22.529
我们必须遵守

00:13:20.339 --> 00:13:25.020
符合PCI DSS的很多

00:13:22.529 --> 00:13:27.449
纸很多的支付空间

00:13:25.020 --> 00:13:29.220
要求，这非常非常糟糕

00:13:27.449 --> 00:13:29.990
如果我们摆脱了这一点，我们将可以去

00:13:29.220 --> 00:13:33.170
停业

00:13:29.990 --> 00:13:34.610
因此拥有日志非常非常严格

00:13:33.170 --> 00:13:36.860
洗涤器，我们有很多东西

00:13:34.610 --> 00:13:38.510
防止暴露PII数据，以及

00:13:36.860 --> 00:13:40.640
你知道这些是这些东西

00:13:38.510 --> 00:13:44.510
我们的开发人员必须每天处理

00:13:40.640 --> 00:13:48.170
每天的可维护性

00:13:44.510 --> 00:13:50.090
应用程序，但大规模修补

00:13:48.170 --> 00:13:54.170
应用程序或发布新版本

00:13:50.090 --> 00:13:55.670
具有以下新功能的新服务

00:13:54.170 --> 00:13:58.040
我们谈到的规模

00:13:55.670 --> 00:14:00.980
真正的核心

00:13:58.040 --> 00:14:06.200
他们拥有约500个服务池

00:14:00.980 --> 00:14:08.390
盒子，所以会有一个策略

00:14:06.200 --> 00:14:10.040
过去必须能够修补我

00:14:08.390 --> 00:14:12.470
一次刷卡时不斑驳，但有

00:14:10.040 --> 00:14:14.990
聪明，就像我要掷10％我

00:14:12.470 --> 00:14:17.180
在监视器上，好吧，让我走

00:14:14.990 --> 00:14:19.520
到接下来的20％，而开发商则没有

00:14:17.180 --> 00:14:20.750
将要单击一个您知道可以的按钮

00:14:19.520 --> 00:14:23.330
你想象有500盒， 

00:14:20.750 --> 00:14:25.630
点击底部的500次

00:14:23.330 --> 00:14:29.210
要有这些非常复杂的

00:14:25.630 --> 00:14:30.680
工具，我们必须确保每个

00:14:29.210 --> 00:14:31.280
新版本或您放置的每个补丁

00:14:30.680 --> 00:14:33.950
你在那里保持

00:14:31.280 --> 00:14:35.960
向后兼容的api有

00:14:33.950 --> 00:14:38.690
有很多API标准化

00:14:35.960 --> 00:14:41.870
贝宝非常非常严格

00:14:38.690 --> 00:14:44.540
我们如何严格执行版本控制

00:14:41.870 --> 00:14:46.280
吸引流量这是相当复杂的

00:14:44.540 --> 00:14:47.510
业务，你不能倒退

00:14:46.280 --> 00:14:49.310
兼容性，因为我需要减少

00:14:47.510 --> 00:14:51.620
故障进入系统其余部分

00:14:49.310 --> 00:14:55.070
微服务的问题

00:14:51.620 --> 00:14:55.880
和分布式计算

00:14:55.070 --> 00:14:58.430
应用程序必须很棒

00:14:55.880 --> 00:14:59.660
我们不想拥有5,000的性能

00:14:58.430 --> 00:15:04.040
我们可以实际完成工作的盒子

00:14:59.660 --> 00:15:05.960
有200个，我们很昂贵

00:15:04.040 --> 00:15:10.490
为了能够扩展，我们必须能够

00:15:05.960 --> 00:15:14.330
屈曲屈曲，我们知道

00:15:10.490 --> 00:15:16.280
关于弹性模式会发生什么

00:15:14.330 --> 00:15:18.110
如果下游服务或我该怎么办

00:15:16.280 --> 00:15:19.940
我可以去另一家服务店吗

00:15:18.110 --> 00:15:21.800
嘿，站在这笔交易，然后

00:15:19.940 --> 00:15:23.690
稍后恢复它有很多

00:15:21.800 --> 00:15:25.640
可以做到的事情，甚至在

00:15:23.690 --> 00:15:29.930
服务何时付款空间

00:15:25.640 --> 00:15:31.780
最后回到生意

00:15:29.930 --> 00:15:34.640
真的想了解

00:15:31.780 --> 00:15:36.860
这些新应用程序

00:15:34.640 --> 00:15:37.630
很多人打他们

00:15:36.860 --> 00:15:41.510
他们

00:15:37.630 --> 00:15:43.370
该产品是否吸引了该领域

00:15:41.510 --> 00:15:46.400
人口

00:15:43.370 --> 00:15:48.560
他们赚多少钱

00:15:46.400 --> 00:15:50.720
有一些关键的绩效指标

00:15:48.560 --> 00:15:53.000
他们一直在跟踪

00:15:50.720 --> 00:15:54.410
您的应用程序必须经过检测

00:15:53.000 --> 00:15:55.990
具有创造这些的能力

00:15:54.410 --> 00:15:58.779
仪表板为您提供所有这些

00:15:55.990 --> 00:16:02.089
商业洞察力正在发生的事情

00:15:58.779 --> 00:16:03.230
最终他们需要知道如何操作

00:16:02.089 --> 00:16:07.310
每秒有很多交易

00:16:03.230 --> 00:16:10.550
将每个节点或池PayPal作为一个

00:16:07.310 --> 00:16:11.960
整体，我们看到了偏差

00:16:10.550 --> 00:16:14.360
这么晚受伤，你的表现也是如此

00:16:11.960 --> 00:16:16.610
表现不佳好吗

00:16:14.360 --> 00:16:19.040
你的记忆你怎么样你的CPU怎么样

00:16:16.610 --> 00:16:22.550
利用所有这些东西和

00:16:19.040 --> 00:16:26.089
再次框架开发人员必须

00:16:22.550 --> 00:16:27.500
提供这个，所以我们有很多东西

00:16:26.089 --> 00:16:30.580
不想每个开发人员都必须

00:16:27.500 --> 00:16:32.650
担心所有这些，顺便说一下

00:16:30.580 --> 00:16:34.910
这里没有错误的余地

00:16:32.650 --> 00:16:37.279
你不记得研究是什么， 

00:16:34.910 --> 00:16:40.370
我想每一秒钟就像

00:16:37.279 --> 00:16:42.470
损失了60,000美元或更多的订单

00:16:40.370 --> 00:16:45.830
不知道确切的数字是多少

00:16:42.470 --> 00:16:48.800
我们不能下去我们不能失去

00:16:45.830 --> 00:16:53.560
交易我们非常激进

00:16:48.800 --> 00:16:56.779
 99喜欢四个九

00:16:53.560 --> 00:17:01.339
这里每隔几秒钟

00:16:56.779 --> 00:17:05.600
还有我们的可用性

00:17:01.339 --> 00:17:06.709
是影响我们奖金的目标

00:17:05.600 --> 00:17:12.079
那是我们相信的一篇论文

00:17:06.709 --> 00:17:14.209
他们提供内置支持的框架

00:17:12.079 --> 00:17:15.920
对于很多这些问题，您不会

00:17:14.209 --> 00:17:17.959
不得不担心安全性的方式

00:17:15.920 --> 00:17:20.240
贝宝需要这样做，您需要担心

00:17:17.959 --> 00:17:25.250
关于证书管理密钥

00:17:20.240 --> 00:17:26.780
管理他们给这个基础

00:17:25.250 --> 00:17:28.510
开发人员实际上可以集中精力

00:17:26.780 --> 00:17:34.760
在撰写产品并撰写

00:17:28.510 --> 00:17:38.710
商业我们的框架是高度

00:17:34.760 --> 00:17:40.790
我们一直在做的

00:17:38.710 --> 00:17:43.640
分布式跟踪，我们喝了一口金

00:17:40.790 --> 00:17:46.429
实际上，这恰好向我们展示了

00:17:43.640 --> 00:17:48.620
给定的交易，如果可以

00:17:46.429 --> 00:17:50.450
去说嘿，我记得那一年

00:17:48.620 --> 00:17:52.010
以前我有这个交易，我有这个

00:17:50.450 --> 00:17:55.310
您可以转到该系统的相关ID 

00:17:52.010 --> 00:17:56.500
而且您仍然可以看到如何

00:17:55.310 --> 00:17:58.750
系统中的流量为

00:17:56.500 --> 00:18:02.290
您可以看到延迟时间

00:17:58.750 --> 00:18:03.550
服务开发人员的每一步

00:18:02.290 --> 00:18:04.900
不必做他们仅有的任何事情

00:18:03.550 --> 00:18:08.860
写他们的业务逻辑，我们做到了

00:18:04.900 --> 00:18:10.600
对他们来说，我们注意到的另一件事

00:18:08.860 --> 00:18:12.550
与框架是他们给共同点

00:18:10.600 --> 00:18:14.440
供开发人员使用的模式

00:18:12.550 --> 00:18:16.300
我们来谈谈基于弹簧的例子

00:18:14.440 --> 00:18:19.570
框架，如果你知道春天，你可以

00:18:16.300 --> 00:18:21.670
您可以移动我们框架中的代码

00:18:19.570 --> 00:18:23.110
在PayPal内部，如果您想知道

00:18:21.670 --> 00:18:24.880
风险小组，您实际上可以去

00:18:23.110 --> 00:18:26.800
付款团队，您基本上是在使用

00:18:24.880 --> 00:18:28.660
与您完全一样的构造

00:18:26.800 --> 00:18:34.360
熟悉的技术

00:18:28.660 --> 00:18:35.710
你正在使用它不像是地图我的

00:18:34.360 --> 00:18:37.890
玩弄你必须学习的东西

00:18:35.710 --> 00:18:40.410
每次都重新学习所有内容

00:18:37.890 --> 00:18:46.480
框架使生活更轻松

00:18:40.410 --> 00:18:49.690
大多数时候，猛禽是什么

00:18:46.480 --> 00:18:53.410
 Raptor是我们现代的Java框架

00:18:49.690 --> 00:18:56.770
 2014年我们再次成立

00:18:53.410 --> 00:19:00.220
那里有一个猛禽

00:18:56.770 --> 00:19:02.230
已经在eBay端共享了一个

00:19:00.220 --> 00:19:06.430
与我们的贝宝猛禽共同的代码，但

00:19:02.230 --> 00:19:10.990
我们决定采用现代设计

00:19:06.430 --> 00:19:15.430
我们知道的原理

00:19:10.990 --> 00:19:18.190
准备好云准备通过

00:19:15.430 --> 00:19:20.590
应该具有允许DevOps模型的功能

00:19:18.190 --> 00:19:22.840
开发人员实际上可以部署自己的

00:19:20.590 --> 00:19:25.380
他们自己的应用程序，他们决定何时

00:19:22.840 --> 00:19:28.600
他们推送代码，控制池

00:19:25.380 --> 00:19:30.420
操作在那里或一直

00:19:28.600 --> 00:19:32.620
他们正在一起监视事物

00:19:30.420 --> 00:19:34.960
每个人都有很多细胞服务

00:19:32.620 --> 00:19:37.500
很多运作与发展

00:19:34.960 --> 00:19:40.270
共存

00:19:37.500 --> 00:19:41.980
那么我们开始的设计原则是

00:19:40.270 --> 00:19:46.000
这是如何

00:19:41.980 --> 00:19:48.820
我们首先以 spring boot 结束

00:19:46.000 --> 00:19:50.350
我们做了两个问题， 

00:19:48.820 --> 00:19:51.550
对不起问题之一大问题

00:19:50.350 --> 00:19:53.530
是其他两个框架

00:19:51.550 --> 00:19:55.120
以前的帧是他们

00:19:53.530 --> 00:19:58.720
用这个，他们最终使用了很多

00:19:55.120 --> 00:20:02.170
专有技术

00:19:58.720 --> 00:20:04.660
带来必须解决的支持问题

00:20:02.170 --> 00:20:06.670
学习您带给行业的东西

00:20:04.660 --> 00:20:08.470
某人从

00:20:06.670 --> 00:20:10.480
在外面，他们有这么大

00:20:08.470 --> 00:20:13.169
这些框架的学习曲线

00:20:10.480 --> 00:20:16.450
所以我们决定嘿想成为

00:20:13.169 --> 00:20:18.700
我们尽可能地并基于标准

00:20:16.450 --> 00:20:20.590
基于标准的肯定J SRS和所有

00:20:18.700 --> 00:20:25.240
那也是标准的事实

00:20:20.590 --> 00:20:28.330
春天之类的东西

00:20:25.240 --> 00:20:30.850
我们挑选了一些

00:20:28.330 --> 00:20:33.429
最大的技术之一

00:20:30.850 --> 00:20:35.710
我们拥有的承诺就是保持这一承诺

00:20:33.429 --> 00:20:38.410
到目前为止，我们尝试去

00:20:35.710 --> 00:20:44.140
我们很多开放的最新版本

00:20:38.410 --> 00:20:45.970
我们内部使用的原始产品

00:20:44.140 --> 00:20:47.559
当然我们必须有一些共同点

00:20:45.970 --> 00:20:51.190
组件一些专有组件

00:20:47.559 --> 00:20:52.570
有纸质的吗

00:20:51.190 --> 00:20:55.210
后端的某些技术

00:20:52.570 --> 00:20:58.870
他们不是行业标准， 

00:20:55.210 --> 00:21:02.110
我们必须适应他们以前的

00:20:58.870 --> 00:21:04.600
框架有很多静态单例

00:21:02.110 --> 00:21:07.720
像获得单身人士的工厂被出售

00:21:04.600 --> 00:21:09.700
我们决定使用的实例方法

00:21:07.720 --> 00:21:13.179
组件的更现代方法

00:21:09.700 --> 00:21:15.429
内部，我们受到了OSGi方式的启发

00:21:13.179 --> 00:21:17.950
做的事情也很好地凝结

00:21:15.429 --> 00:21:20.440
从春天依赖注入

00:21:17.950 --> 00:21:22.750
一个对每个组成部分都说好的

00:21:20.440 --> 00:21:24.429
我们要做到这是每一个规则

00:21:22.750 --> 00:21:26.860
组件必须公开其

00:21:24.429 --> 00:21:29.610
通过API实现的功能

00:21:26.860 --> 00:21:32.890
与实现分开包装

00:21:29.610 --> 00:21:35.650
组件的使用者仅知道

00:21:32.890 --> 00:21:37.900
关于允许我们切换的API 

00:21:35.650 --> 00:21:40.000
打包它们的实现

00:21:37.900 --> 00:21:42.100
只要我们坚持不同的步伐

00:21:40.000 --> 00:21:46.929
该API，它已经被证明是非常

00:21:42.100 --> 00:21:50.230
非常干净的一种非常干净的方式

00:21:46.929 --> 00:21:51.820
即使在

00:21:50.230 --> 00:21:53.980
他们不了解的组件

00:21:51.820 --> 00:21:55.870
其他他们只知道自己的API， 

00:21:53.980 --> 00:21:59.169
春天是美妙的春天

00:21:55.870 --> 00:22:02.400
核心一直是一个神话般的策划者

00:21:59.169 --> 00:22:02.400
能够将所有这些东西连接在一起

00:22:04.450 --> 00:22:09.160
当我们开始进入这个

00:22:07.540 --> 00:22:12.220
旅程，我们开始成为一个真正的

00:22:09.160 --> 00:22:13.990
在我们的一种倾向下擅长春季

00:22:12.220 --> 00:22:15.460
我们不会有工厂

00:22:13.990 --> 00:22:18.000
现在我们不是，我们要移动

00:22:15.460 --> 00:22:20.740
一点点远离

00:22:18.000 --> 00:22:24.280
来自该组的设计模式

00:22:20.740 --> 00:22:26.560
四本不出名的书

00:22:24.280 --> 00:22:28.690
要通过依赖来做一切

00:22:26.560 --> 00:22:31.890
注塑生产

00:22:28.690 --> 00:22:36.340
功能取决于

00:22:31.890 --> 00:22:39.190
依赖注入之神，例如

00:22:36.340 --> 00:22:40.540
在这里，我们为

00:22:39.190 --> 00:22:45.700
你们那些可能不熟悉的人

00:22:40.540 --> 00:22:48.550
 Web目标是用于以下方面的标准API客户端

00:22:45.700 --> 00:22:51.510
 jax-rs这是标准API 

00:22:48.550 --> 00:22:54.820
消耗Webster宁静的服务

00:22:51.510 --> 00:22:56.800
 jax-rs为您提供的那些

00:22:54.820 --> 00:22:58.260
已经处理了这个，你知道

00:22:56.800 --> 00:23:00.610
您必须创建客户的封面

00:22:58.260 --> 00:23:03.940
这是一个非常重的物体

00:23:00.610 --> 00:23:05.470
与您通过的客户保持距离

00:23:03.940 --> 00:23:08.080
一条路线，您就可以找到网络目标

00:23:05.470 --> 00:23:10.420
你说建立目标，然后你就可以

00:23:08.080 --> 00:23:12.400
您传递基本URL，然后得到

00:23:10.420 --> 00:23:15.460
出来，所以我们想提取所有

00:23:12.400 --> 00:23:16.840
来自我们消费者的原因

00:23:15.460 --> 00:23:19.150
跟踪我们可以保持的客户

00:23:16.840 --> 00:23:20.620
跟踪他们实际上为什么我们必须

00:23:19.150 --> 00:23:22.960
跟踪它们，让我们发春

00:23:20.620 --> 00:23:28.980
跟踪它，所以我们只创建

00:23:22.960 --> 00:23:31.960
客户作为我们的组成部分

00:23:28.980 --> 00:23:35.110
端点的有趣功能

00:23:31.960 --> 00:23:37.660
这是一个专有注释

00:23:35.110 --> 00:23:39.220
实际上恰好是一个预选赛

00:23:37.660 --> 00:23:40.750
允许我们有多个工作目标

00:23:39.220 --> 00:23:43.570
因为应用程序不与

00:23:40.750 --> 00:23:46.720
它与多个对话，您可以看到

00:23:43.570 --> 00:23:48.280
该服务名称在那里

00:23:46.720 --> 00:23:50.230
它真的给我们一个定位器吗

00:23:48.280 --> 00:23:52.390
里面的配置，所以你可以去

00:23:50.230 --> 00:23:57.370
到您的远程配置，您可以

00:23:52.390 --> 00:23:59.980
说自己服务点HTTP点请求

00:23:57.370 --> 00:24:02.530
超时，刚好是200 

00:23:59.980 --> 00:24:04.930
毫秒，你可以去

00:24:02.530 --> 00:24:08.170
远程系统，你可以说我想要它

00:24:04.930 --> 00:24:10.810
现在要500毫秒

00:24:08.170 --> 00:24:13.360
配置出产并做

00:24:10.810 --> 00:24:14.920
不必重启应用程序

00:24:13.360 --> 00:24:18.160
在非常复杂的范围内执行此操作

00:24:14.920 --> 00:24:20.650
装箱在工厂后处理器中

00:24:18.160 --> 00:24:21.970
找到这个注射点，我们

00:24:20.650 --> 00:24:28.330
处理所有被掩盖的事情

00:24:21.970 --> 00:24:30.850
春天的力量也使我们能够

00:24:28.330 --> 00:24:33.310
为我们的消费者提供插件功能

00:24:30.850 --> 00:24:35.020
例如，我们有一个等待

00:24:33.310 --> 00:24:38.320
喜欢我们喜欢登录我们的

00:24:35.020 --> 00:24:40.210
交易进入但组件

00:24:38.320 --> 00:24:44.470
具有暴露的日志

00:24:40.210 --> 00:24:46.840
通过我们称为SPI的接口

00:24:44.470 --> 00:24:49.630
如果客户想写自己的

00:24:46.840 --> 00:24:51.400
他们可以将自己的东西标记为

00:24:49.630 --> 00:24:53.740
可以说是梁的组件

00:24:51.400 --> 00:24:55.240
组件，他们说我主要和

00:24:53.740 --> 00:24:57.400
突然间，我们取而代之

00:24:55.240 --> 00:25:02.020
另一个或默认之一

00:24:57.400 --> 00:25:03.610
瞧，您可以插入更多自己的记录器

00:25:02.020 --> 00:25:07.810
更有趣的是我们可以做同样的事情

00:25:03.610 --> 00:25:09.130
与基础HTTP客户端

00:25:07.810 --> 00:25:10.930
网络目标没有人这样做，因为

00:25:09.130 --> 00:25:13.600
谁想要写一个全新的HTTP 

00:25:10.930 --> 00:25:15.460
客户和大脑的工具，但我们

00:25:13.600 --> 00:25:17.680
有能力交换客户

00:25:15.460 --> 00:25:20.020
快速运行，因此您仍在使用网络

00:25:17.680 --> 00:25:23.800
目标API，但您可以使用Apache或

00:25:20.020 --> 00:25:26.200
可以使用异步HTTP客户端或Finagle或

00:25:23.800 --> 00:25:27.760
只要您愿意，rx就可以使您本地化

00:25:26.200 --> 00:25:29.650
只要您提供几个api和

00:25:27.760 --> 00:25:31.630
您可以使用主变量覆盖这些bean 

00:25:29.650 --> 00:25:34.420
我们把它们捡起来，你不必做

00:25:31.630 --> 00:25:38.470
现在，我们有了所有这些

00:25:34.420 --> 00:25:42.880
威力我们开始关注哦对不起

00:25:38.470 --> 00:25:45.760
可以追溯到90年代

00:25:42.880 --> 00:25:46.780
人们喜欢XML，但我们不喜欢它

00:25:45.760 --> 00:25:48.880
讨厌它

00:25:46.780 --> 00:25:51.700
我们从一个非常现代的春天开始

00:25:48.880 --> 00:25:54.090
版本，所以我们说零XML没什么

00:25:51.700 --> 00:25:56.020
来自框架需要XML 

00:25:54.090 --> 00:25:58.600
当然，对于那些

00:25:56.020 --> 00:26:05.100
怀着对XML的厚爱并喜欢它

00:25:58.600 --> 00:26:08.920
我们要让他们使用它，所以我们有

00:26:05.100 --> 00:26:11.220
基于组件的设计很多

00:26:08.920 --> 00:26:15.100
通过实现可以实现的智慧

00:26:11.220 --> 00:26:17.940
豆与春天，现在我们发现

00:26:15.100 --> 00:26:22.660
我们可以组成非常强大的工具

00:26:17.940 --> 00:26:25.000
进入功能配置文件，我们决定

00:26:22.660 --> 00:26:27.250
使用术语配置文件，该配置文件是

00:26:25.000 --> 00:26:28.570
只不过带了所有东西的手掌

00:26:27.250 --> 00:26:31.890
组件在一起，为您提供

00:26:28.570 --> 00:26:36.940
功能切片，例如

00:26:31.890 --> 00:26:40.780
这个说我想休息

00:26:36.940 --> 00:26:43.060
服务，但我想拥有所有

00:26:40.780 --> 00:26:44.530
钟声和口哨声使他们成为贝宝

00:26:43.060 --> 00:26:47.560
作为人们所接受的服务

00:26:44.530 --> 00:26:49.450
为了紧凑兼容，也许你

00:26:47.560 --> 00:26:51.250
不想将PayPal做为服务

00:26:49.450 --> 00:26:52.830
可能只是想定期休息

00:26:51.250 --> 00:26:55.600
因为它是内部的，您不在乎

00:26:52.830 --> 00:26:57.670
有一个叫做提高的个人资料

00:26:55.600 --> 00:27:00.100
配置文件贝宝它给你所有的

00:26:57.670 --> 00:27:01.780
 PayPal工具，但您没有

00:27:00.100 --> 00:27:04.300
具有额外的安全性和所有

00:27:01.780 --> 00:27:06.040
其他所需的东西

00:27:04.300 --> 00:27:08.260
为了在偷窥者那边生存

00:27:06.040 --> 00:27:10.090
房子，也许你不想

00:27:08.260 --> 00:27:12.760
仪器，我们有一个配置文件称为

00:27:10.090 --> 00:27:17.040
休息服务，所有的DOS是

00:27:12.760 --> 00:27:19.300
基本上使用集成Rustica 

00:27:17.040 --> 00:27:20.440
与框架和所有

00:27:19.300 --> 00:27:23.530
钟声和口哨声，但没有任何

00:27:20.440 --> 00:27:25.540
贝宝的本质，我们发现这是

00:27:23.530 --> 00:27:27.130
对于那些

00:27:25.540 --> 00:27:28.240
你是 spring boot ，听起来

00:27:27.130 --> 00:27:29.860
非常熟悉的权利

00:27:28.240 --> 00:27:31.510
但这是在我们春暖花开之前

00:27:29.860 --> 00:27:36.940
所以我们已经在前进

00:27:31.510 --> 00:27:40.900
您可以带来方向夫妇规则

00:27:36.940 --> 00:27:43.150
您可以随时访问个人资料，但需要

00:27:40.900 --> 00:27:46.180
我们自己从零到零

00:27:43.150 --> 00:27:48.010
配置只真正配置什么

00:27:46.180 --> 00:27:49.510
让我让客户配置他们所需要的

00:27:48.010 --> 00:27:52.240
确实需要像

00:27:49.510 --> 00:27:57.310
像我们找不到东西的路线

00:27:52.240 --> 00:27:58.690
对他们来说却使它变得超级灵活

00:27:57.310 --> 00:28:00.220
他们实际上可以有坚果和

00:27:58.690 --> 00:28:04.090
如果他们想的话，到处都是螺栓

00:28:00.220 --> 00:28:07.920
改变事情，这实际上证明了

00:28:04.090 --> 00:28:09.250
为了取得成功，我们在

00:28:07.920 --> 00:28:13.330
 2014年

00:28:09.250 --> 00:28:16.810
我认为2015年之前的第一个版本

00:28:13.330 --> 00:28:20.410
我们在

00:28:16.810 --> 00:28:24.190
复制旧框架，所以我们

00:28:20.410 --> 00:28:26.830
非常成功，但有几个问题

00:28:24.190 --> 00:28:30.100
开始出现我们有想要的人

00:28:26.830 --> 00:28:32.680
在春季良好地创建批处理作业

00:28:30.100 --> 00:28:34.780
批另一个团队进行了类似的工作

00:28:32.680 --> 00:28:36.070
在它上面，现在我们注意到

00:28:34.780 --> 00:28:37.660
框架略有不同，所以

00:28:36.070 --> 00:28:40.810
现在我们要回到这个地方

00:28:37.660 --> 00:28:43.060
我们有多种做事方式

00:28:40.810 --> 00:28:44.560
框架名称相同

00:28:43.060 --> 00:28:45.660
这很奇怪

00:28:44.560 --> 00:28:47.520
我们有人

00:28:45.660 --> 00:28:51.120
只是不在乎他们想休息

00:28:47.520 --> 00:28:53.040
用他们正在做的方式进行消息传递

00:28:51.120 --> 00:28:56.670
消息为什么他们必须有

00:28:53.040 --> 00:28:59.640
 Tomcat为什么我们要为

00:28:56.670 --> 00:29:02.430
他们他们不希望他们只是一个

00:28:59.640 --> 00:29:04.650
浪费我们有一个团队，我们有一个

00:29:02.430 --> 00:29:06.720
团队内部的支付空间

00:29:04.650 --> 00:29:09.150
想要与其他人一起创新

00:29:06.720 --> 00:29:09.890
丘比特和Lmax等技术

00:29:09.150 --> 00:29:11.910
破坏者

00:29:09.890 --> 00:29:14.070
他们不想要额外的威胁

00:29:11.910 --> 00:29:18.000
不想他们不想Tomcat 

00:29:14.070 --> 00:29:20.460
不想参加战争，所以我们总是友善

00:29:18.000 --> 00:29:22.500
对春天情有独钟

00:29:20.460 --> 00:29:24.780
食物，我们想看看和

00:29:22.500 --> 00:29:26.670
更我们成功的

00:29:24.780 --> 00:29:30.930
我们开始注意到这些

00:29:26.670 --> 00:29:33.210
问题我们的个人资料工作很棒

00:29:30.930 --> 00:29:36.000
那是成功的，但是我们开始了

00:29:33.210 --> 00:29:38.070
警告某些问题是你

00:29:36.000 --> 00:29:39.720
知道maven可以带您达到一定的目标

00:29:38.070 --> 00:29:42.210
点，并为您提供了很多工具，但

00:29:39.720 --> 00:29:43.980
然后像嘿的东西

00:29:42.210 --> 00:29:45.750
我真的没有这个班级的存在

00:29:43.980 --> 00:29:47.220
想走这边我想走这边

00:29:45.750 --> 00:29:49.680
否则，您将无法做到这一点

00:29:47.220 --> 00:29:54.530
有配置文件或无配置

00:29:49.680 --> 00:29:54.530
豆真的很难，所以我

00:29:56.420 --> 00:30:04.500
真的很谢谢你

00:30:00.480 --> 00:30:07.230
据他解释我们去的历史

00:30:04.500 --> 00:30:10.140
自从我们开始以来

00:30:07.230 --> 00:30:13.290
最初的框架

00:30:10.140 --> 00:30:17.070
当我们有工作申请的那一刻

00:30:13.290 --> 00:30:19.890
在云环境中，您看到我们

00:30:17.070 --> 00:30:24.090
已经能够拥有一个非常非常

00:30:19.890 --> 00:30:26.280
功能强大且功能强大的解决方案

00:30:24.090 --> 00:30:28.830
那一刻我们仍然没有春天

00:30:26.280 --> 00:30:30.180
很好，例如我们使用弹簧

00:30:28.830 --> 00:30:32.700
但是我们没有春天的美好

00:30:30.180 --> 00:30:37.250
在云中，我们拥有自己的专有

00:30:32.700 --> 00:30:39.390
我们能够提供的路径解决方案

00:30:37.250 --> 00:30:42.420
我们拥有的大多数要求

00:30:39.390 --> 00:30:44.940
非常感谢，特别是我们的安全

00:30:42.420 --> 00:30:50.820
能够监控我们的应用程序

00:30:44.940 --> 00:30:54.720
生产等等等，所以有

00:30:50.820 --> 00:30:57.600
说，你为什么要去一个

00:30:54.720 --> 00:31:01.919
一步进一步介绍大

00:30:57.600 --> 00:31:04.410
如果一切似乎都冒险

00:31:01.919 --> 00:31:05.760
现在就可以了，就像你说的那样

00:31:04.410 --> 00:31:08.280
一开始我来自巴西

00:31:05.760 --> 00:31:11.460
那里有这个巨大的足球

00:31:08.280 --> 00:31:15.000
文化和葡萄牙语，我们说

00:31:11.460 --> 00:31:17.940
姐姐吉米·图加达·波克瓦斯·穆

00:31:15.000 --> 00:31:20.960
达里亚（Daria），这意味着如果你的事情是

00:31:17.940 --> 00:31:22.650
赢了，为什么你会改变它正确

00:31:20.960 --> 00:31:28.350
好吧，我们不知道是不是全部

00:31:22.650 --> 00:31:31.890
上届世界杯​​发生了，所以我们不得不

00:31:28.350 --> 00:31:34.590
超越，我们必须真正

00:31:31.890 --> 00:31:37.559
预测我们必须要解决的问题

00:31:34.590 --> 00:31:40.440
有远见的人，我们也必须聪明

00:31:37.559 --> 00:31:42.419
足以看别人

00:31:40.440 --> 00:31:45.059
在做和学习，而不仅仅是

00:31:42.419 --> 00:31:47.490
犯错但成功

00:31:45.059 --> 00:31:49.230
来自其他组织的权利

00:31:47.490 --> 00:31:51.450
这就是我们决定要做的

00:31:49.230 --> 00:31:53.840
即使我们是一个特殊的时刻

00:31:51.450 --> 00:31:57.090
老鼠进化，我们想超越

00:31:53.840 --> 00:31:58.909
斯普林伍德不只是一个鸟板

00:31:57.090 --> 00:32:02.870
人，但像一个警卫解释

00:31:58.909 --> 00:32:06.090
自然是老鼠的东西

00:32:02.870 --> 00:32:08.400
融合在我们的道路上，我们想

00:32:06.090 --> 00:32:11.940
探索我们想看看那是什么

00:32:08.400 --> 00:32:13.830
关于但我的第一件事

00:32:11.940 --> 00:32:15.809
意识到我们所拥有的解决方案

00:32:13.830 --> 00:32:18.929
放置我们的框架有点麻烦

00:32:15.809 --> 00:32:21.419
类似于Springwood，这是我们的

00:32:18.929 --> 00:32:27.840
触摸这些要点，以便

00:32:21.419 --> 00:32:29.700
例举常规的方式

00:32:27.840 --> 00:32:32.789
申请成纸包装

00:32:29.700 --> 00:32:36.659
最初的申请是

00:32:32.789 --> 00:32:39.059
这是你的父母

00:32:36.659 --> 00:32:44.010
分析您的Maven个人资料，然后

00:32:39.059 --> 00:32:46.470
不仅会给你带来一些

00:32:44.010 --> 00:32:49.530
依赖管理例如

00:32:46.470 --> 00:32:54.539
不仅如此，我们已经有了这个

00:32:49.530 --> 00:32:57.510
试图预见所有

00:32:54.539 --> 00:33:00.330
您将带来并避免的依赖

00:32:57.510 --> 00:33:01.350
冲突等，但不仅如此

00:33:00.330 --> 00:33:02.909
个人资料

00:33:01.350 --> 00:33:05.159
爱德华多解释说，他们非常

00:33:02.909 --> 00:33:07.679
类似于带有启动器的弹簧，但不

00:33:05.159 --> 00:33:09.780
像初学者一样强大

00:33:07.679 --> 00:33:11.399
他们更强大的Springs启动

00:33:09.780 --> 00:33:14.700
使所有这些声音发声

00:33:11.399 --> 00:33:17.489
有思想的框架

00:33:14.700 --> 00:33:19.349
要知道您的应用程序

00:33:17.489 --> 00:33:22.229
收取您拥有的财产

00:33:19.349 --> 00:33:24.389
他们所有这些标准是谁

00:33:22.229 --> 00:33:26.580
然后自动配置您的

00:33:24.389 --> 00:33:28.529
应用程序，我们没有那个，我们

00:33:26.580 --> 00:33:30.149
当然，我们很惊讶地看到

00:33:28.529 --> 00:33:33.929
发生了，我们想采取

00:33:30.149 --> 00:33:37.830
当谈到

00:33:33.929 --> 00:33:40.859
行动并消除我们与

00:33:37.830 --> 00:33:44.039
那么我们已经有很多

00:33:40.859 --> 00:33:45.869
指标和监控解决方案，但

00:33:44.039 --> 00:33:47.729
真的很高兴看到

00:33:45.869 --> 00:33:51.119
斯普林伍德和整个春天的壁虎

00:33:47.729 --> 00:33:53.070
系统还具有其他选择

00:33:51.119 --> 00:33:56.669
就在那里，其中许多甚至更好

00:33:53.070 --> 00:33:58.969
比我们的免费，我的意思是免费

00:33:56.669 --> 00:34:02.969
就维护而言，我们没有

00:33:58.969 --> 00:34:05.580
自春季以来，成本太高了

00:34:02.969 --> 00:34:07.320
木头已经提供了，所以我们

00:34:05.580 --> 00:34:10.679
想要利用所有这些优势

00:34:07.320 --> 00:34:14.190
而且我什至不谈论所有

00:34:10.679 --> 00:34:17.429
这些其他伟大的功能

00:34:14.190 --> 00:34:20.730
你们都听说过

00:34:17.429 --> 00:34:22.980
可能使用像我们这样的读物吧

00:34:20.730 --> 00:34:24.779
我们想用我们所有的纸

00:34:22.980 --> 00:34:28.109
应用程序使用所有这些，所以我们

00:34:24.779 --> 00:34:31.339
决定在

00:34:28.109 --> 00:34:34.770
贝宝，旅程就此开始

00:34:31.339 --> 00:34:42.440
作为去年十月的证明

00:34:34.770 --> 00:34:45.480
概念，现在我们在这里

00:34:42.440 --> 00:34:47.010
还有更多关于您的理由

00:34:45.480 --> 00:34:53.849
我想分享的 spring boot 

00:34:47.010 --> 00:34:56.099
你，所以我们首先要打火机

00:34:53.849 --> 00:34:58.500
容器整个嵌入式概念

00:34:56.099 --> 00:35:01.710
对我们来说很有意义的容器

00:34:58.500 --> 00:35:05.940
因为我们已经在云端

00:35:01.710 --> 00:35:09.359
我们希望越来越团结

00:35:05.940 --> 00:35:11.490
这个打火机的想法

00:35:09.359 --> 00:35:12.839
在微球上的应用，我们也

00:35:11.490 --> 00:35:17.130
想尝试不同的

00:35:12.839 --> 00:35:20.240
我们不想拥有的容器

00:35:17.130 --> 00:35:23.220
作为另一个障碍或另一个

00:35:20.240 --> 00:35:25.990
维护的障碍

00:35:23.220 --> 00:35:28.640
甚至

00:35:25.990 --> 00:35:30.380
快速的解决方案，所以我们想要

00:35:28.640 --> 00:35:35.109
容器在那里为我们做些什么

00:35:30.380 --> 00:35:41.809
应该做，但不是很高

00:35:35.109 --> 00:35:43.549
价格一样的情况

00:35:41.809 --> 00:35:45.230
适用于开发经验

00:35:43.549 --> 00:35:47.210
你坐在笔记本电脑上

00:35:45.230 --> 00:35:50.980
开发您也不需要的应用程序

00:35:47.210 --> 00:35:53.569
想让我独自站立

00:35:50.980 --> 00:35:55.520
任何应用程序服务器服务器

00:35:53.569 --> 00:35:58.130
连续的集线器，然后您必须绑

00:35:55.520 --> 00:36:00.740
到你的IDE，然后你有

00:35:58.130 --> 00:36:07.579
同步代码等问题

00:36:00.740 --> 00:36:11.289
 etcetera等我们想要简单吧

00:36:07.579 --> 00:36:13.400
想减少维护和成本，所以

00:36:11.289 --> 00:36:15.980
所有这些都很重要

00:36:13.400 --> 00:36:17.480
与春天对齐将开始于

00:36:15.980 --> 00:36:19.809
我们已经存在的 Spring Framework 

00:36:17.480 --> 00:36:23.359
使用我们使用例如春天

00:36:19.809 --> 00:36:25.220
的集成弹簧批处理

00:36:23.359 --> 00:36:31.190
取决于应用程序的使用类型

00:36:25.220 --> 00:36:33.319
还有许多其他的Spring框架

00:36:31.190 --> 00:36:36.529
使用泊坞窗，我们正朝着

00:36:33.319 --> 00:36:39.380
混合云解决方案-所有这些

00:36:36.529 --> 00:36:42.529
有道理，我们当时我们还好我

00:36:39.380 --> 00:36:49.069
认为这样做是正确的决定

00:36:42.529 --> 00:36:50.980
方式，但不是那么简单

00:36:49.069 --> 00:36:53.930
不是那么容易，也许这是最

00:36:50.980 --> 00:36:54.950
我们想分享的重要信息

00:36:53.930 --> 00:36:56.690
今天和你在一起我不知道你是否

00:36:54.950 --> 00:37:00.650
会抛出类似或不相似的东西

00:36:56.690 --> 00:37:04.309
在贵公司，但是我们遇到了一些

00:37:00.650 --> 00:37:08.450
挑战和第一个挑战

00:37:04.309 --> 00:37:10.700
意识到没有轻松的休息

00:37:08.450 --> 00:37:16.270
 spring boot 启动器可用

00:37:10.700 --> 00:37:18.770
时间，为什么那很重要？ 

00:37:16.270 --> 00:37:21.980
假设春天很普通

00:37:18.770 --> 00:37:26.410
使用spring MVC或spring的应用程序

00:37:21.980 --> 00:37:26.410
数据复活，但我们没有这样做

00:37:27.279 --> 00:37:33.589
大概两年前

00:37:29.660 --> 00:37:36.799
我们决定评估什么

00:37:33.589 --> 00:37:39.079
是更好的休息方式

00:37:36.799 --> 00:37:42.619
基础设施，我们也

00:37:39.079 --> 00:37:45.559
想一次坚持下去

00:37:42.619 --> 00:37:50.959
这是jax-rs，所以我们评估了一些

00:37:45.559 --> 00:37:54.729
 jax-rs实现，除了尝试

00:37:50.959 --> 00:37:58.130
决定我们也想做的最好的

00:37:54.729 --> 00:38:01.759
与之保持一致，并确保我们

00:37:58.130 --> 00:38:03.289
框架将适合

00:38:01.759 --> 00:38:06.140
太正确了，选择的一个就休息了

00:38:03.289 --> 00:38:07.609
由于许多原因而容易许多原因

00:38:06.140 --> 00:38:09.170
我们已经很了解性

00:38:07.609 --> 00:38:11.989
时间，因为那是那个

00:38:09.170 --> 00:38:15.200
由我们的旧框架使用，我们

00:38:11.989 --> 00:38:17.059
比较球衣和休息容易吗

00:38:15.200 --> 00:38:20.059
谈论的词例如

00:38:17.059 --> 00:38:22.489
能够插入HTTP客户端设计

00:38:20.059 --> 00:38:25.339
使用魔杖，我们非常喜欢

00:38:22.489 --> 00:38:29.239
提供的API gracias我们也进行了评估

00:38:25.339 --> 00:38:31.339
绩效文件的活跃程度

00:38:29.239 --> 00:38:33.769
开源项目背后的社区

00:38:31.339 --> 00:38:36.709
就是所有这些，而食谱是

00:38:33.769 --> 00:38:40.549
我们更喜欢的解决方案

00:38:36.709 --> 00:38:42.559
基于jax-rs的两年过去了

00:38:40.549 --> 00:38:45.799
要去春季林地， 

00:38:42.559 --> 00:38:48.289
没有弹簧启动器，所以

00:38:45.799 --> 00:38:50.140
您做什么我们决定然后发展

00:38:48.289 --> 00:38:52.609
其余的简单入门，我们做到了

00:38:50.140 --> 00:38:55.940
我们先打开您再说一点

00:38:52.609 --> 00:38:58.699
稍后再说一点

00:38:55.940 --> 00:39:01.059
挑战servlet容器

00:38:58.699 --> 00:39:04.299
我们正在使用Tomcat进行定制

00:39:01.059 --> 00:39:06.140
爱德华多（Eduardo）非常非常提到担保权

00:39:04.299 --> 00:39:08.709
纸张的重要要求

00:39:06.140 --> 00:39:11.059
应用程序，所以我们有一些特定的

00:39:08.709 --> 00:39:13.849
我们必须在

00:39:11.059 --> 00:39:18.229
容器级容器的连接器

00:39:13.849 --> 00:39:22.130
举例来说，幸运的是当时

00:39:18.229 --> 00:39:24.890
 Tomcat有一个非常好的文档化API 

00:39:22.130 --> 00:39:26.749
我们可以使用的当然不是

00:39:24.890 --> 00:39:29.779
标准与

00:39:26.749 --> 00:39:32.440
 servlet规范或任何适用于Puteri I的规范

00:39:29.779 --> 00:39:36.619
表示无关紧要

00:39:32.440 --> 00:39:38.660
以及当我们转到 spring boot 时

00:39:36.619 --> 00:39:40.309
不存在了，因为

00:39:38.660 --> 00:39:42.410
现在Tomcat只是您的一个罐子

00:39:40.309 --> 00:39:45.979
申请还有其他

00:39:42.410 --> 00:39:47.779
所以整个API也都消失了

00:39:45.979 --> 00:39:50.180
并不意味着我们无法解决我们的问题

00:39:47.779 --> 00:39:52.079
需要我们仍然很好，谢谢

00:39:50.180 --> 00:39:55.529
春天木因为

00:39:52.079 --> 00:39:58.619
在低水平它也提供了一个非常

00:39:55.529 --> 00:40:00.689
不错的程序化API，因此您可以

00:39:58.619 --> 00:40:01.829
自定义您的容器，我不知道

00:40:00.689 --> 00:40:03.599
您已经使用过或者如果您熟悉

00:40:01.829 --> 00:40:05.099
是的，是的，这是真的

00:40:03.599 --> 00:40:07.499
神奇的是我们可以做所有我们使用过的

00:40:05.099 --> 00:40:10.140
现在要做，我们仍然可以

00:40:07.499 --> 00:40:11.309
生命周期和面对的一切

00:40:10.140 --> 00:40:13.920
我们将要讨论的不同

00:40:11.309 --> 00:40:16.670
一秒钟，但我们仍然可以

00:40:13.920 --> 00:40:16.670
满足我们的需求

00:40:16.939 --> 00:40:24.209
好吧，我忘了按下

00:40:20.939 --> 00:40:25.739
 Tomcat API或UML棒棒糖

00:40:24.209 --> 00:40:30.089
符号，你知道你是否适合我

00:40:25.739 --> 00:40:33.599
看着是的，所以现在谈论

00:40:30.089 --> 00:40:36.449
初始化在这里，我们有一个非常

00:40:33.599 --> 00:40:38.900
您在左侧看到的漂亮图表

00:40:36.449 --> 00:40:41.429
之前在右侧，您看到之后

00:40:38.900 --> 00:40:45.539
在春季引导之前在春季引导之后

00:40:41.429 --> 00:40:48.479
贝宝框架，请注意

00:40:45.539 --> 00:40:51.029
有四层就在那里

00:40:48.479 --> 00:40:54.259
让我们从左侧开始

00:40:51.029 --> 00:40:56.670
另一个曾经是我们的Tomcat 

00:40:54.259 --> 00:40:59.009
容器-是的，但不是

00:40:56.670 --> 00:41:02.249
嵌入它是一个独立的常规

00:40:59.009 --> 00:41:06.059
里面有雄猫，我们有猛禽

00:41:02.249 --> 00:41:08.459
框架，贝宝框架，春季

00:41:06.059 --> 00:41:11.759
然后应用程序就像

00:41:08.459 --> 00:41:14.749
俄罗斯娃娃现在让我们看一下

00:41:11.759 --> 00:41:18.299
在右边有个矮小的个子

00:41:14.749 --> 00:41:23.269
不会在所有内部打开自己

00:41:18.299 --> 00:41:28.499
其他人他的申请太正确了

00:41:23.269 --> 00:41:33.989
但是现在Tomcat是第二小的

00:41:28.499 --> 00:41:36.269
一个你看到它倒立，春天是

00:41:33.989 --> 00:41:39.900
现在第一个最大的

00:41:36.269 --> 00:41:42.179
外面和猛禽是这个-第二

00:41:39.900 --> 00:41:44.880
黄色层就在那里这个问题

00:41:42.179 --> 00:41:46.979
第二次，所以我不知道你是否

00:41:44.880 --> 00:41:48.599
经历了一些类似的事情

00:41:46.979 --> 00:41:54.660
在您的组织中，但是

00:41:48.599 --> 00:41:56.339
是非常非常重要的认识

00:41:54.660 --> 00:41:59.039
这是你看不到的东西

00:41:56.339 --> 00:42:00.539
我不知道我不认为你会看到

00:41:59.039 --> 00:42:03.539
当你正在开发一个

00:42:00.539 --> 00:42:04.290
应用程序，特别是应用程序

00:42:03.539 --> 00:42:05.490
从头开始

00:42:04.290 --> 00:42:08.160
我们正在处理整个框架

00:42:05.490 --> 00:42:11.100
您想提供的东西

00:42:08.160 --> 00:42:15.840
单位可以美容应用，这是

00:42:11.100 --> 00:42:18.090
非常关键，所以初始化顺序和

00:42:15.840 --> 00:42:20.250
谁管理的完全是

00:42:18.090 --> 00:42:25.110
 Tomcat出现之前，现在有所不同

00:42:20.250 --> 00:42:26.880
现在是在Tomcat中的春天

00:42:25.110 --> 00:42:30.210
遵守servlet可以支持您

00:42:26.880 --> 00:42:32.880
具有servlet容器的概念

00:42:30.210 --> 00:42:34.860
初始化应用程序类型和

00:42:32.880 --> 00:42:36.900
恰好具有的接口权限

00:42:34.860 --> 00:42:39.750
这就是句柄类型和

00:42:36.900 --> 00:42:42.030
这是很早触发的

00:42:39.750 --> 00:42:44.070
在您的应用程序引导期间

00:42:42.030 --> 00:42:47.010
这非常强大，为您提供了

00:42:44.070 --> 00:42:50.520
有机会尽早做很多事情， 

00:42:47.010 --> 00:42:53.280
管理您的申请权

00:42:50.520 --> 00:42:56.190
走了，我们正在用它

00:42:53.280 --> 00:42:58.250
很多我们必须有很多组件

00:42:56.190 --> 00:43:02.430
想配置和初始化

00:42:58.250 --> 00:43:06.120
较早的配置安全性等

00:43:02.430 --> 00:43:09.780
记录了所有的

00:43:06.120 --> 00:43:12.240
完全错位好

00:43:09.780 --> 00:43:14.760
新闻是春天是其中的一个

00:43:12.240 --> 00:43:16.820
现在的位置，我们真的

00:43:14.760 --> 00:43:19.800
相信这只是时间问题

00:43:16.820 --> 00:43:22.290
调整这些构件以获得

00:43:19.800 --> 00:43:24.840
达到您想要的结果，并且

00:43:22.290 --> 00:43:28.310
就是这样，所以我们做了所有这些

00:43:24.840 --> 00:43:31.310
修改，一切正常

00:43:28.310 --> 00:43:31.310
后来

00:43:33.700 --> 00:43:39.749
我们谈论的服务器容器配置

00:43:36.099 --> 00:43:42.489
关于立即定制配置

00:43:39.749 --> 00:43:48.730
好吧，您应该拥有此XML文件

00:43:42.489 --> 00:43:51.249
 Tomcat之前已经消失了好消息

00:43:48.730 --> 00:43:53.799
这是祈祷的美好，也提供

00:43:51.249 --> 00:43:56.380
从这个意义上讲，您需要的一切

00:43:53.799 --> 00:43:58.420
通过您的财产文件

00:43:56.380 --> 00:44:05.009
应用属性或其他

00:43:58.420 --> 00:44:08.680
还是以编程方式命名

00:44:05.009 --> 00:44:11.529
这是我们必须要做的事， 

00:44:08.680 --> 00:44:14.769
那里没有空隙，斯普林伍德提供了所有

00:44:11.529 --> 00:44:17.140
集成的钩子指向

00:44:14.769 --> 00:44:19.930
我们需要使事物移动的API 

00:44:17.140 --> 00:44:21.700
特别是当你想到倒退

00:44:19.930 --> 00:44:24.489
提到爱德华多的兼容权

00:44:21.700 --> 00:44:26.470
那非常重要

00:44:24.489 --> 00:44:28.630
重要的是你不能介绍一些东西

00:44:26.470 --> 00:44:31.839
那是惊人的美丽和新颖， 

00:44:28.630 --> 00:44:34.660
如果到达那里的诅咒也太现代了

00:44:31.839 --> 00:44:40.809
很多，或者如果你打破了，那就打破了

00:44:34.660 --> 00:44:44.079
不可能切成薄片

00:44:40.809 --> 00:44:47.950
考虑时使用jar方法

00:44:44.079 --> 00:44:50.289
您可能认为很好的交付方式

00:44:47.950 --> 00:44:53.499
一罐取来的罐子里

00:44:50.289 --> 00:44:54.819
订单，这是推荐的方式

00:44:53.499 --> 00:44:57.160
外出时交付您的申请

00:44:54.819 --> 00:45:00.880
在文档右边的Springwood 

00:44:57.160 --> 00:45:04.089
我们决定做一些文档

00:45:00.880 --> 00:45:05.859
这里不同，为什么，因为我们决定

00:45:04.089 --> 00:45:08.519
看一下事情如何发生

00:45:05.859 --> 00:45:14.279
场景，我们意识到我们春天

00:45:08.519 --> 00:45:18.009
介绍了这个定制的封闭式装载机，并

00:45:14.279 --> 00:45:22.029
当然哪个很棒并且可以用，等等

00:45:18.009 --> 00:45:25.029
但是带来一些额外的复杂性

00:45:22.029 --> 00:45:28.839
取回我们有什么好处

00:45:25.029 --> 00:45:30.819
还是Qdoba罐子，如果在我们的情况下

00:45:28.839 --> 00:45:33.130
至少在一天结束时

00:45:30.819 --> 00:45:35.049
开发人员不会真正感动我们

00:45:33.130 --> 00:45:38.799
有了过去的解决方案，我们有了这个

00:45:35.049 --> 00:45:43.539
部署引擎，一切都过去了

00:45:38.799 --> 00:45:46.150
自动化，所以在这里感觉还可以

00:45:43.539 --> 00:45:47.350
您的功能不错，但很复杂

00:45:46.150 --> 00:45:50.350
伴随着这种风险，但

00:45:47.350 --> 00:45:52.630
并没有真正利用

00:45:50.350 --> 00:45:53.530
好处，所以我们决定不这样做，我们

00:45:52.630 --> 00:45:56.020
决定这样做

00:45:53.530 --> 00:45:58.600
为了简化起见，我们是一样的

00:45:56.020 --> 00:46:01.980
靠我们自己，我们有办法

00:45:58.600 --> 00:46:05.770
放置我们的文件和文件夹以及所有内容

00:46:01.980 --> 00:46:08.350
但是我们把班级持有人留在

00:46:05.770 --> 00:46:11.290
我们想要的方式并最终

00:46:08.350 --> 00:46:13.360
解决方案相同的日期

00:46:11.290 --> 00:46:14.710
 Maven插件必须运行Springwood 

00:46:13.360 --> 00:46:15.910
应用程序仍然可用

00:46:14.710 --> 00:46:18.310
在开发环境中很好

00:46:15.910 --> 00:46:21.160
一切都很棒，您拥有的IDE是

00:46:18.310 --> 00:46:24.910
做任何您想做的事也很棒

00:46:21.160 --> 00:46:26.500
顺便说一句，这个想法不可知

00:46:24.910 --> 00:46:29.230
只是我们想提的一点

00:46:26.500 --> 00:46:31.210
我们还评估了为什么我们选择了

00:46:29.230 --> 00:46:33.820
解决方案，我们选择的决定是

00:46:31.210 --> 00:46:35.650
我们有几个最大冲突

00:46:33.820 --> 00:46:38.710
 JMX发生冲突时，我们

00:46:35.650 --> 00:46:42.100
使用我们在任何春季都使用大量的J max 

00:46:38.710 --> 00:46:47.620
也想MX并尝试去

00:46:42.100 --> 00:46:50.050
领先一步，有一些J max 

00:46:47.620 --> 00:46:52.750
注册和Bean等为您完成

00:46:50.050 --> 00:46:55.720
自动，那很棒，但是

00:46:52.750 --> 00:46:56.920
与我们所拥有的相抵触

00:46:55.720 --> 00:47:00.010
我们还与一些

00:46:56.920 --> 00:47:03.490
修改，但再次没什么低

00:47:00.010 --> 00:47:04.540
级别没有什么吓人的，现在只是搜索

00:47:03.490 --> 00:47:06.880
通勤春季书

00:47:04.540 --> 00:47:08.710
文档以及我们需要的一切

00:47:06.880 --> 00:47:14.980
让一切都开心就在那里

00:47:08.710 --> 00:47:17.740
所以这里没什么不好的纳尼过程

00:47:14.980 --> 00:47:23.440
是的，我们在任何过程中都使用以确保

00:47:17.740 --> 00:47:24.370
我们的应用正常启动

00:47:23.440 --> 00:47:27.850
必要时

00:47:24.370 --> 00:47:30.280
等等等等，直到我们有一个常规

00:47:27.850 --> 00:47:33.310
现在我们没有独立的tomcat容器

00:47:30.280 --> 00:47:35.110
有了，我们有了工作

00:47:33.310 --> 00:47:37.300
应用程序是一个真正的问题

00:47:35.110 --> 00:47:40.770
不，那只是我们必须要做的

00:47:37.300 --> 00:47:44.320
做但不是没有什么特别的不

00:47:40.770 --> 00:47:47.050
日志记录器有阻塞

00:47:44.320 --> 00:47:49.320
类似情况下需要更多调整

00:47:47.050 --> 00:47:52.050
使您不再拥有Tomcat 

00:47:49.320 --> 00:47:54.370
在低层照顾

00:47:52.050 --> 00:47:55.870
针对那里的Java应用程序

00:47:54.370 --> 00:47:57.700
日志更改了一点日志

00:47:55.870 --> 00:48:00.660
位置必须更改日志位置

00:47:57.700 --> 00:48:05.070
必须更改，我们为J使用固体

00:48:00.660 --> 00:48:08.640
所以那太好了，就是现在

00:48:05.070 --> 00:48:11.730
升级是最后一个

00:48:08.640 --> 00:48:13.710
租赁权非常重要非常非常

00:48:11.730 --> 00:48:14.940
重要的部分，我不知道我是否再次

00:48:13.710 --> 00:48:16.380
不知道你是否正在经历

00:48:14.940 --> 00:48:18.810
我们做过或她已经做过的事情

00:48:16.380 --> 00:48:20.340
或如果您打算但

00:48:18.810 --> 00:48:22.860
右边的东西是

00:48:20.340 --> 00:48:24.930
一开始很难预测

00:48:22.860 --> 00:48:28.290
你不面对他们的东西

00:48:24.930 --> 00:48:30.960
真的很痛苦

00:48:28.290 --> 00:48:33.540
通过这个过渡， 

00:48:30.960 --> 00:48:36.090
您以后会从中学到的东西

00:48:33.540 --> 00:48:38.610
后来的阶段，当你最终

00:48:36.090 --> 00:48:43.130
让您的第一个应用程序采用

00:48:38.610 --> 00:48:46.230
您的新框架，我们仍然

00:48:43.130 --> 00:48:48.660
学习我们正在不断进步，我们

00:48:46.230 --> 00:48:50.790
正在自动化我们的升级，好吗

00:48:48.660 --> 00:48:53.940
我们认为自动化是最好的

00:48:50.790 --> 00:48:56.180
手动升级的方法不是

00:48:53.940 --> 00:48:59.070
会吓到你

00:48:56.180 --> 00:49:02.280
我们正在写一个这样做，我们是

00:48:59.070 --> 00:49:04.650
希望砍的答案-我不

00:49:02.280 --> 00:49:07.620
知道，但也许将来我们可以谈谈

00:49:04.650 --> 00:49:10.800
关于那个希望，这是一个非

00:49:07.620 --> 00:49:12.990
 spring boot 到跳板的过渡

00:49:10.800 --> 00:49:15.120
对，所以希望更多的人可以

00:49:12.990 --> 00:49:17.010
使用它并做出贡献并使其变得更好

00:49:15.120 --> 00:49:22.620
因为我认为那是非常

00:49:17.010 --> 00:49:28.700
很重要，所以我们的向导看到了一些

00:49:22.620 --> 00:49:32.610
数字，所以我们的第一个版本是

00:49:28.700 --> 00:49:38.550
提供给我们的应用程序

00:49:32.610 --> 00:49:42.150
大约4个月前的300年四月

00:49:38.550 --> 00:49:44.670
猛禽应用程序已超过100 

00:49:42.150 --> 00:49:49.530
使用它的 spring boot 版本

00:49:44.670 --> 00:49:52.170
最新版本，我们已经拥有

00:49:49.530 --> 00:49:55.200
每天约有2亿头奶牛

00:49:52.170 --> 00:49:57.990
斯普林伍德的猛禽中有50亿

00:49:55.200 --> 00:49:59.970
您会看到4.2那里有更新它是5 

00:49:57.990 --> 00:50:06.630
看起来像是从上周到现在的数字

00:49:59.970 --> 00:50:08.790
一周，我们得到了很好的反馈

00:50:06.630 --> 00:50:10.350
来自开发人员真的真的很好我

00:50:08.790 --> 00:50:12.300
我不认为这是因为嗡嗡声

00:50:10.350 --> 00:50:14.040
一定是因为春天

00:50:12.300 --> 00:50:18.240
好，只是因为

00:50:14.040 --> 00:50:22.560
带来的更好的体验

00:50:18.240 --> 00:50:25.980
表给开发者，我们要做

00:50:22.560 --> 00:50:29.550
以后的操作也一样

00:50:25.980 --> 00:50:31.560
使用我们的专有指标

00:50:29.550 --> 00:50:34.080
监控解决方案，这是工作，这是

00:50:31.560 --> 00:50:39.890
就像我们整个阶段的第一阶段

00:50:34.080 --> 00:50:39.890
过渡到下一阶段将添加

00:50:40.550 --> 00:50:48.630
所以现在谈论我们必须要做的

00:50:45.870 --> 00:50:50.700
就设计而言，正如我们所说

00:50:48.630 --> 00:50:52.920
意识到那不是很

00:50:50.700 --> 00:50:56.550
进行演示或显示代码的可行性，或者

00:50:52.920 --> 00:51:01.260
除了这个图，你可以

00:50:56.550 --> 00:51:03.540
看到这里显示了几眼

00:51:01.260 --> 00:51:06.840
他们是 spring boot 起动器

00:51:03.540 --> 00:51:09.810
好吧，我们意识到这确实是

00:51:06.840 --> 00:51:14.730
真的最好的办法就是采用

00:51:09.810 --> 00:51:17.940
这项技术，我们首先

00:51:14.730 --> 00:51:21.000
在这四个方面将我们的组件分层

00:51:17.940 --> 00:51:23.250
让我们从不同的层次开始

00:51:21.000 --> 00:51:25.680
实际上在PayPal的第二个

00:51:23.250 --> 00:51:30.120
三种类型的应用程序

00:51:25.680 --> 00:51:33.900
其余应用程序消息恶魔或

00:51:30.120 --> 00:51:36.510
批处理应用程序Eduardo red告诉你

00:51:33.900 --> 00:51:39.860
关于那场雨，所以我们有了一个春天

00:51:36.510 --> 00:51:43.380
靴子开始每个人，然后加

00:51:39.860 --> 00:51:44.670
两个额外的四种不同类型的

00:51:43.380 --> 00:51:46.890
有多种应用

00:51:44.670 --> 00:51:49.050
可以说其他辅助启动器

00:51:46.890 --> 00:51:52.950
这样，然后回到

00:51:49.050 --> 00:51:55.820
第一层是核心入门程序，可以

00:51:52.950 --> 00:51:58.700
在每个猛禽之间共享

00:51:55.820 --> 00:52:01.350
此课程入门的应用程序

00:51:58.700 --> 00:52:03.380
对整个事情负责

00:52:01.350 --> 00:52:05.850
框架初始化和

00:52:03.380 --> 00:52:10.380
配置并初始化

00:52:05.850 --> 00:52:12.620
安全性以及您所拥有的所有组件

00:52:10.380 --> 00:52:15.390
必须将您定义为

00:52:12.620 --> 00:52:17.460
应用程序，然后是第二个

00:52:15.390 --> 00:52:19.500
键入第三和第四

00:52:17.460 --> 00:52:22.230
他们几乎是客户或司机

00:52:19.500 --> 00:52:25.220
对于外部系统，第三个

00:52:22.230 --> 00:52:27.480
特别是他们是

00:52:25.220 --> 00:52:31.290
您想要的下游服务

00:52:27.480 --> 00:52:32.940
例如，或者我们如此合适

00:52:31.290 --> 00:52:36.150
是因为我们仍然有这些遗产

00:52:32.940 --> 00:52:39.330
应用程序或最新的

00:52:36.150 --> 00:52:43.460
最新的框架，然后是第四个

00:52:39.330 --> 00:52:49.740
层，如果您想与

00:52:43.460 --> 00:52:51.200
缓存或消息传递等或全部数据库

00:52:49.740 --> 00:52:53.640
晚餐开始的意思

00:52:51.200 --> 00:52:56.190
现在的配置是自动化的

00:52:53.640 --> 00:52:57.630
他们也很自以为是

00:52:56.190 --> 00:53:00.859
我们的应用有一些自由

00:52:57.630 --> 00:53:03.330
实际上要选择一些第三方

00:53:00.859 --> 00:53:07.530
他们想要使用的组件，我们制造

00:53:03.330 --> 00:53:09.890
确保所有内容都对齐，因此我们使用

00:53:07.530 --> 00:53:13.609
许多这些条件注释和

00:53:09.890 --> 00:53:16.470
我们作为杜阿多（Duardo）说，我们也使用

00:53:13.609 --> 00:53:22.020
注册Dean的程序化方式

00:53:16.470 --> 00:53:24.420
等等等，这是最大的努力

00:53:22.020 --> 00:53:27.000
我们在此期间的编码方面

00:53:24.420 --> 00:53:29.400
过渡，如果你想计算

00:53:27.000 --> 00:53:36.480
关于这个，如果你想知道

00:53:29.400 --> 00:53:39.030
现在更多细节谈论我们的需求

00:53:36.480 --> 00:53:40.470
使生锈的斯普林斯靴子更黑

00:53:39.030 --> 00:53:42.950
还发展了它不在

00:53:40.470 --> 00:53:46.050
上图是开源的

00:53:42.950 --> 00:53:49.020
现在进行项目，并为您带来什么

00:53:46.050 --> 00:53:50.970
首先，它使休息变得轻松

00:53:49.020 --> 00:53:52.830
对于春季战利品应用程序

00:53:50.970 --> 00:53:57.020
在不可能之前不可能

00:53:52.830 --> 00:53:59.940
现在有可能

00:53:57.020 --> 00:54:03.390
您的jax-rs资源的每一个

00:53:59.940 --> 00:54:05.640
以及提供者甚至子资源

00:54:03.390 --> 00:54:07.950
可以是四季豆，好吧，仅此而已

00:54:05.640 --> 00:54:10.530
生锈之前可能有红色

00:54:07.950 --> 00:54:13.920
 spring boot 集成，这是一个rad 

00:54:10.530 --> 00:54:16.230
可能，但我们使它对齐

00:54:13.920 --> 00:54:21.320
搭配 spring boot 也很不错

00:54:16.230 --> 00:54:25.080
这是新的，现在您的jax-rs应用程序

00:54:21.320 --> 00:54:27.750
可以找到并很好地注册为我

00:54:25.080 --> 00:54:29.609
春天还可以，这是

00:54:27.750 --> 00:54:35.130
他们不存在的新事物

00:54:29.609 --> 00:54:39.050
在我们还提供其他选项之前

00:54:35.130 --> 00:54:41.060
更符合的注册

00:54:39.050 --> 00:54:43.880
过去，我们可以这样说， 

00:54:41.060 --> 00:54:45.860
 jax-rs又回来了，例如，您可以

00:54:43.880 --> 00:54:49.040
以编程方式或依靠扣

00:54:45.860 --> 00:54:51.260
作为扫描或只是有一个

00:54:49.040 --> 00:54:56.990
指向类的配置文件

00:54:51.260 --> 00:54:59.630
所以我们有选择权，最后

00:54:56.990 --> 00:55:01.190
如果您有一个

00:54:59.630 --> 00:55:04.220
以前使用的应用程序

00:55:01.190 --> 00:55:07.250
直肠具有所有这些配置

00:55:04.220 --> 00:55:09.290
为您定义的很好，他们将

00:55:07.250 --> 00:55:13.280
有-好的，他们仍然会

00:55:09.290 --> 00:55:14.630
适用于您，如果您去过

00:55:13.280 --> 00:55:17.630
已经使用濑鱼了，你知道他们

00:55:14.630 --> 00:55:20.420
作为servlet上下文完成

00:55:17.630 --> 00:55:21.800
初始化参数很好

00:55:20.420 --> 00:55:23.300
是-可供您使用

00:55:21.800 --> 00:55:25.940
在斯普林伍德，即使我们没有

00:55:23.300 --> 00:55:27.950
 Springwood中的一个Web XML文件

00:55:25.940 --> 00:55:29.480
斯普林伍德有一种方法来定义那些

00:55:27.950 --> 00:55:32.119
应用程序中的属性

00:55:29.480 --> 00:55:36.560
属性文件，我们只是在使用

00:55:32.119 --> 00:55:38.150
所以你都是一样的东西

00:55:36.560 --> 00:55:42.490
在常规春季做好应用

00:55:38.150 --> 00:55:46.070
您也可以在这里为这些物业

00:55:42.490 --> 00:55:47.750
在这里您可以看到一个例子

00:55:46.070 --> 00:55:49.820
您的应用程序类看起来像

00:55:47.750 --> 00:55:51.680
所以你所做的一切就是你

00:55:49.820 --> 00:55:53.930
只需在组件上添加一个符号即可

00:55:51.680 --> 00:55:56.450
春天的东西，它将可用

00:55:53.930 --> 00:55:57.890
对你来说，你的映射可以正常工作

00:55:56.450 --> 00:56:01.940
您在同一台服务器后面

00:55:57.890 --> 00:56:03.590
满足您的要求，这是一个开放的

00:56:01.940 --> 00:56:03.950
源项目是否要检查

00:56:03.590 --> 00:56:06.230
出

00:56:03.950 --> 00:56:09.440
这就是URL，您可以直接转到

00:56:06.230 --> 00:56:11.450
 github PayPal，您将看到我们所有的

00:56:09.440 --> 00:56:13.820
开源项目，我们有很多

00:56:11.450 --> 00:56:19.940
其中之一就是这个，如果你喜欢

00:56:13.820 --> 00:56:22.550
它请开始我们的项目

00:56:19.940 --> 00:56:24.290
我们现在想去的地方是

00:56:22.550 --> 00:56:26.900
仅仅是开始，有这么多

00:56:24.290 --> 00:56:29.300
要做很多事情以被采纳

00:56:26.900 --> 00:56:31.820
斯普林伍德和这么多的课程

00:56:29.300 --> 00:56:36.050
以及我个人的爱德华多

00:56:31.820 --> 00:56:39.140
在这里，看看春天

00:56:36.050 --> 00:56:41.630
云，甚至是Cloud Foundry等

00:56:39.140 --> 00:56:43.790
这些东西和其他青蛙说话

00:56:41.630 --> 00:56:45.680
我们要做的第一件事就是

00:56:43.790 --> 00:56:51.080
想介绍一下猛禽的概念

00:56:45.680 --> 00:56:53.130
如果您是贝宝，请立即点亮

00:56:51.080 --> 00:56:55.710
开发者取决于类型

00:56:53.130 --> 00:56:59.400
你有这个应用程序

00:56:55.710 --> 00:57:01.220
 Raptor风格的框架为您和

00:56:59.400 --> 00:57:03.900
你去那里你想做什么

00:57:01.220 --> 00:57:06.680
但是我们意识到那不是

00:57:03.900 --> 00:57:09.539
在某些情况下真的非常理想

00:57:06.680 --> 00:57:11.819
例如，我们有许多业务部门

00:57:09.539 --> 00:57:13.259
他们是如此之大，以至于他们拥有自己的

00:57:11.819 --> 00:57:16.380
自己的基础设施之王

00:57:13.259 --> 00:57:18.359
内部，例如风险管理

00:57:16.380 --> 00:57:20.700
让我们只说这一项或付款

00:57:18.359 --> 00:57:24.660
有很多权利，所以他们就像

00:57:20.700 --> 00:57:26.730
好吧，我们想使用猛禽，但是

00:57:24.660 --> 00:57:28.160
您想要我们增加的一层

00:57:26.730 --> 00:57:31.589
在此处添加要提供给我们的权利

00:57:28.160 --> 00:57:33.900
开发人员，如果

00:57:31.589 --> 00:57:36.619
说唱歌手很灵活，因为我

00:57:33.900 --> 00:57:38.700
希望能够变得更好

00:57:36.619 --> 00:57:42.599
定制，这就是猛禽喜欢的

00:57:38.700 --> 00:57:44.369
这是最小的斯普林伍德纸吗

00:57:42.599 --> 00:57:47.069
应用程序添加一些命令和

00:57:44.369 --> 00:57:48.509
我们基本上不允许Java 

00:57:47.069 --> 00:57:50.250
容器就是这样，我们现在

00:57:48.509 --> 00:57:52.109
谈到哦，你可以创建一个服务

00:57:50.250 --> 00:57:53.579
或消息恶魔，如果你想

00:57:52.109 --> 00:57:54.480
清除我们使用的命令行界面

00:57:53.579 --> 00:57:56.549
想要使用所有的贝宝

00:57:54.480 --> 00:57:56.970
基础设施哦， spring boot 完美

00:57:56.549 --> 00:57:58.559
为了那个原因

00:57:56.970 --> 00:58:00.509
没有理由为什么我们不能那样做

00:57:58.559 --> 00:58:02.730
所以我们要创建一个最小的

00:58:00.509 --> 00:58:04.799
只给您所有支付宝的核心

00:58:02.730 --> 00:58:07.019
核心服务，然后您实际上可以

00:58:04.799 --> 00:58:09.089
在那边开始创作

00:58:07.019 --> 00:58:11.579
那你还会给你安全吗

00:58:09.089 --> 00:58:15.930
例如这是非常

00:58:11.579 --> 00:58:19.529
同样重要的是，我们将开始

00:58:15.930 --> 00:58:22.170
要去利用新面孔

00:58:19.529 --> 00:58:23.940
春天的好东西，这里只是一个

00:58:22.170 --> 00:58:26.640
我们几个简单的例子

00:58:23.940 --> 00:58:28.880
尚未真正使用，但您确实喜欢

00:58:26.640 --> 00:58:28.880
至

00:58:30.950 --> 00:58:39.480
还有这下一个小项目

00:58:36.119 --> 00:58:42.109
他们带来的技术

00:58:39.480 --> 00:58:45.210
已经在使用中了

00:58:42.109 --> 00:58:48.000
模拟技术，但我们希望

00:58:45.210 --> 00:58:52.400
正确评估其他选项

00:58:48.000 --> 00:58:55.140
例如undertow而不是Tomcat 

00:58:52.400 --> 00:58:58.380
特别是出于性能原因，但是

00:58:55.140 --> 00:59:00.660
如果您必须评估，看看有什么

00:58:58.380 --> 00:59:01.920
我去那里需要什么

00:59:00.660 --> 00:59:04.109
当他们对王国感到非常兴奋

00:59:01.920 --> 00:59:06.059
花了5号弹簧和反应堆一起

00:59:04.109 --> 00:59:06.900
像哦，因为我不必工作

00:59:06.059 --> 00:59:09.150
这个太多了

00:59:06.900 --> 00:59:10.680
好吧，也许只是工作，但我们

00:59:09.150 --> 00:59:12.380
实际上在我们的作家中有我们想要的

00:59:10.680 --> 00:59:14.490
尝试进入on servlet模型

00:59:12.380 --> 00:59:17.460
出于完全相同的原因

00:59:14.490 --> 00:59:18.840
在我们想要的主题演讲中提出

00:59:17.460 --> 00:59:20.970
我们想爱人们创造一个

00:59:18.840 --> 00:59:24.510
同步非阻塞服务和

00:59:20.970 --> 00:59:26.790
现在我们有了servlet模型

00:59:24.510 --> 00:59:27.420
有点让我们回到那里

00:59:26.790 --> 00:59:29.970
是的

00:59:27.420 --> 00:59:32.040
太好了，你一定要看看

00:59:29.970 --> 00:59:35.430
那是春天的云配置

00:59:32.040 --> 00:59:36.990
就像我们刚才在谈话中所说的

00:59:35.430 --> 00:59:39.210
我是不是已经有一个遥控器了

00:59:36.990 --> 00:59:42.510
配置系统到位，但这就是

00:59:39.210 --> 00:59:43.830
专有的，所以您有两件事

00:59:42.510 --> 00:59:48.860
可以做，我们可以去拿

00:59:43.830 --> 00:59:51.510
 khonsu或github的优势

00:59:48.860 --> 00:59:54.270
 iSpring启动应用程序的方法

00:59:51.510 --> 00:59:56.670
现在或者我们可以做半个步骤

00:59:54.270 --> 00:59:58.500
没关系，让我们重新使用api 

00:59:56.670 --> 00:59:59.850
正确的配置API 

00:59:58.500 --> 01:00:02.270
因为我们不是，我们甚至都没有使用

00:59:59.850 --> 01:00:04.710
刷新范围的概念和

01:00:02.270 --> 01:00:07.110
配置属性注释和

01:00:04.710 --> 01:00:08.760
捆绑了12小时的解决方案

01:00:07.110 --> 01:00:10.020
通过专有API的概念

01:00:08.760 --> 01:00:12.390
它实际上是使用Apache Commons 

01:00:10.020 --> 01:00:14.160
配置API，所以不是那样

01:00:12.390 --> 01:00:16.620
可怜的普特里是的，如果我们

01:00:14.160 --> 01:00:18.570
实际上可以挂接并切换， 

01:00:16.620 --> 01:00:19.920
通过这些功能使用我们的系统

01:00:18.570 --> 01:00:21.600
在后端仍然会使用

01:00:19.920 --> 01:00:23.580
春天注释，例如添加刷新

01:00:21.600 --> 01:00:24.270
配置以及所有这些东西

01:00:23.580 --> 01:00:27.420
那是非常

01:00:24.270 --> 01:00:29.730
有趣的我想探索

01:00:27.420 --> 01:00:32.580
服务发现我们都拥有同样的东西

01:00:29.730 --> 01:00:34.920
一个合适的解决方案，但我们就像哇

01:00:32.580 --> 01:00:37.230
还有很多其他不错的选择

01:00:34.920 --> 01:00:41.010
在那里，我们不得不采取一个

01:00:37.230 --> 01:00:43.860
看看那两个，你谈论

01:00:41.010 --> 01:00:47.250
最后，我认为是的，我们有一些需求

01:00:43.860 --> 01:00:50.730
高性能，我认为有一个

01:00:47.250 --> 01:00:52.530
昨天聊到说什么时候

01:00:50.730 --> 01:00:54.840
你有微服务，你去

01:00:52.530 --> 01:00:57.920
与您最亲近的是

01:00:54.840 --> 01:00:59.730
 HTTP不一定最适合

01:00:57.920 --> 01:01:04.170
多跳多服务

01:00:59.730 --> 01:01:06.750
沟通很慢，所以我们想

01:01:04.170 --> 01:01:09.720
进行探索非常有趣

01:01:06.750 --> 01:01:10.710
昨天谈到Google RPC 

01:01:09.720 --> 01:01:13.590
看起来很有趣，我们已经

01:01:10.710 --> 01:01:16.050
在某些领域中使用Protobuf 

01:01:13.590 --> 01:01:17.700
所以这将是一种连接阶段

01:01:16.050 --> 01:01:19.410
还有亚伦这是另一个协议

01:01:17.700 --> 01:01:21.590
看起来很有趣

01:01:19.410 --> 01:01:24.560
当然还有AMQP 

01:01:21.590 --> 01:01:29.120
狂人丘比特将一直为

01:01:24.560 --> 01:01:29.950
有了这个，我们愿意

01:01:29.120 --> 01:01:32.950
问题

01:01:29.950 --> 01:01:32.950
是

01:01:39.040 --> 01:01:42.880
你介意重复这个问题吗

01:01:53.880 --> 01:02:01.590
哦，问题是2014年

01:01:59.160 --> 01:02:05.010
从后端即服务开始

01:02:01.590 --> 01:02:08.880
 2014年对Java进行了现代化

01:02:05.010 --> 01:02:11.940
发展，所以我们可以有一个微观

01:02:08.880 --> 01:02:15.350
服务风格架构标题

01:02:11.940 --> 01:02:17.040
为此，我们没有很多

01:02:15.350 --> 01:02:19.170
后端服务，我们已经

01:02:17.040 --> 01:02:20.550
跟随我们的模型，所以他们

01:02:19.170 --> 01:02:23.400
已经服务有服务

01:02:20.550 --> 01:02:25.230
注册表我们有企业接口

01:02:23.400 --> 01:02:27.000
你必须要做的很多事

01:02:25.230 --> 01:02:39.570
这个专有协议，所以您不能

01:02:27.000 --> 01:02:42.210
只是去抓住jax-ws并使用它

01:02:39.570 --> 01:02:47.300
我很快，所以问题是我们如何

01:02:42.210 --> 01:02:51.750
你看到那个盒子了吗

01:02:47.300 --> 01:02:53.490
那是允许我们交谈的人

01:02:51.750 --> 01:02:55.940
那些后端服务，所以它仍然

01:02:53.490 --> 01:02:59.280
表现为常规的RPC之类的

01:02:55.940 --> 01:03:00.600
你注入你注入我们的行为

01:02:59.280 --> 01:03:04.410
使它实际上做了几个技巧

01:03:00.600 --> 01:03:06.540
在那里，我们实际上仍然在滑动

01:03:04.410 --> 01:03:08.160
该协议在jax-rs之上的

01:03:06.540 --> 01:03:09.450
因为在一天结束时杰克

01:03:08.160 --> 01:03:11.850
服务只是一个职位，我们得到

01:03:09.450 --> 01:03:14.040
数据，所以我们使用了大量的钩子和

01:03:11.850 --> 01:03:16.200
然后我们可以注入企业

01:03:14.040 --> 01:03:21.230
生成的接口是

01:03:16.200 --> 01:03:21.230
带注释的jax-rs接口

01:03:26.040 --> 01:03:30.720
我们没有很多肥皂

01:03:29.070 --> 01:03:33.210
内部服务就是关于这个

01:03:30.720 --> 01:03:35.160
专有协议，我们有

01:03:33.210 --> 01:03:37.680
我们实际上也有采用的目的

01:03:35.160 --> 01:03:39.030
完成了服务方面的工作

01:03:37.680 --> 01:03:41.400
阻止它，但是你实际上可以

01:03:39.030 --> 01:03:43.170
在内部实施此类服务

01:03:41.400 --> 01:03:45.119
没有幻灯片的新堆栈

01:03:43.170 --> 01:03:46.980
但是，是的，我的意思是过渡更容易

01:03:45.119 --> 01:03:49.140
但这就像什么神话般的好吧

01:03:46.980 --> 01:03:51.810
这不只是带来新的

01:03:49.140 --> 01:03:55.369
是的，我们必须适应那里的情况

01:03:51.810 --> 01:03:55.369
是的，这是一个很好的问题

01:04:09.709 --> 01:04:15.509
不要重复这个问题

01:04:13.169 --> 01:04:19.249
就是我们如何处理

01:04:15.509 --> 01:04:19.249
微服务

01:04:37.420 --> 01:04:44.240
是的，所以问题是，如果有

01:04:42.320 --> 01:04:47.090
有一个方案，或者我们如何应对

01:04:44.240 --> 01:04:48.890
微服务的工作

01:04:47.090 --> 01:04:50.210
免责声明我们不是数据专家

01:04:48.890 --> 01:04:52.250
因为我们是框架

01:04:50.210 --> 01:04:53.660
开发人员，我们实际上有一个PayPal 

01:04:52.250 --> 01:04:55.910
可能有点了解的人

01:04:53.660 --> 01:04:57.230
他的域名还有更多，取决于哪个

01:04:55.910 --> 01:05:00.260
域你在说我知道

01:04:57.230 --> 01:05:05.330
关于能够适应这一点的重大举措

01:05:00.260 --> 01:05:08.090
肯定没有科尔的模样

01:05:05.330 --> 01:05:09.560
像区域方法，或者您有一个

01:05:08.090 --> 01:05:11.990
模式，但实际上是夏洛特和

01:05:09.560 --> 01:05:14.180
然后我们有如此的亲和力

01:05:11.990 --> 01:05:16.960
进出，以便数据是

01:05:14.180 --> 01:05:16.960
实际上合而为一

01:05:34.829 --> 01:05:42.119
哦，因为我们没有分配

01:05:40.650 --> 01:05:44.369
我们从未有过的纸质交易

01:05:42.119 --> 01:05:46.920
一直是服务到服务，所以

01:05:44.369 --> 01:05:48.119
是的，机器人可以在这里

01:05:46.920 --> 01:05:52.739
挑战某事失败然后

01:05:48.119 --> 01:05:55.049
您必须撤消，我们会遵循更多

01:05:52.739 --> 01:05:57.809
数据架构被隐藏

01:05:55.049 --> 01:06:09.329
服务背后的JSON模式

01:05:57.809 --> 01:06:15.449
改变为我不是的新元素

01:06:09.329 --> 01:06:23.699
说实话的专家，但是你

01:06:15.449 --> 01:06:25.859
还有第二个问题可以交易

01:06:23.699 --> 01:06:27.660
是的，我知道的一件事是

01:06:25.859 --> 01:06:31.589
贝宝反对分布式

01:06:27.660 --> 01:06:33.869
我们不做的交易我们往往不会

01:06:31.589 --> 01:06:36.359
我认为这是分布式交易

01:06:33.869 --> 01:06:38.880
团队一定看起来像是因为我们

01:06:36.359 --> 01:06:42.029
有这个筒仓域的数据库

01:06:38.880 --> 01:06:43.619
实际解决方案是

01:06:42.029 --> 01:06:45.449
固定到域，然后

01:06:43.619 --> 01:06:47.339
数据交换发生在他的服务上

01:06:45.449 --> 01:06:48.959
有挑战吗

01:06:47.339 --> 01:06:50.459
当您谈论性能和SLA时

01:06:48.959 --> 01:06:53.640
是因为你必须去多个

01:06:50.459 --> 01:06:55.969
取数据的地方有一些想法

01:06:53.640 --> 01:07:03.890
关于我们如何解决一些问题， 

01:06:55.969 --> 01:07:03.890
我们不是权威人士，所以是的

01:07:20.360 --> 01:07:25.320
很好的问题，问题是如何

01:07:22.860 --> 01:07:27.750
我们如何处理JDBC连接

01:07:25.320 --> 01:07:29.760
规模，因为我们有很多

01:07:27.750 --> 01:07:30.690
实例，如果它们每个都连接

01:07:29.760 --> 01:07:31.800
与数据库，我们可以将其带到

01:07:30.690 --> 01:07:36.570
实例是

01:07:31.800 --> 01:07:40.650
本文主要是Oracle RAC我们有什么

01:07:36.570 --> 01:07:42.900
我们称它为JDBC 

01:07:40.650 --> 01:07:52.080
作为一种服务，就像一种

01:07:42.900 --> 01:07:54.330
 JDBC驱动程序是的，像这样

01:07:52.080 --> 01:07:56.880
我们有服务器

01:07:54.330 --> 01:07:57.930
连接的集中器是

01:07:56.880 --> 01:07:59.880
连接数据库的人

01:07:57.930 --> 01:08:02.190
并建立连接池，然后我们

01:07:59.880 --> 01:08:04.650
将这些驱动程序安装到应用程序中

01:08:02.190 --> 01:08:06.270
表现为JDBC驱动程序，但在

01:08:04.650 --> 01:08:07.290
现实正在使用未连接到

01:08:06.270 --> 01:08:09.120
数据库连接到这些

01:08:07.290 --> 01:08:10.440
服务，并且多路复用

01:08:09.120 --> 01:08:12.630
连接真的是服务

01:08:10.440 --> 01:08:14.520
具有连接和会话

01:08:12.630 --> 01:08:20.160
对于数据库，就像一个中间人

01:08:14.520 --> 01:08:28.319
就像第4级一样，抱歉

01:08:20.160 --> 01:08:32.279
您重复瓶颈，因为我们有

01:08:28.319 --> 01:08:34.859
拥有额外的爱好，是的， 

01:08:32.279 --> 01:08:36.330
在调整这个可能还有其他

01:08:34.859 --> 01:08:39.150
贝宝在哪里可以说我认为

01:08:36.330 --> 01:08:40.589
内部在某些地方被称为OCC是的

01:08:39.150 --> 01:08:42.960
我认为这将会有一些

01:08:40.589 --> 01:08:46.140
与Oracle合作以促进它

01:08:42.960 --> 01:08:48.359
进入行业，您如何看待

01:08:46.140 --> 01:08:49.980
基本上是一个选矿厂

01:08:48.359 --> 01:08:51.569
整个想法实际上首先

01:08:49.980 --> 01:08:54.750
它不仅是分布式的

01:08:51.569 --> 01:08:57.089
一秒钟，我们还有，我们还有

01:08:54.750 --> 01:09:00.750
许多C ++应用程序正确存在

01:08:57.089 --> 01:09:03.540
很多很多的联系

01:09:00.750 --> 01:09:04.920
池化和缓存等

01:09:03.540 --> 01:09:07.080
已经存在，而不仅仅是Java 

01:09:04.920 --> 01:09:09.630
应用程序，但适用于C ++应用程序

01:09:07.080 --> 01:09:11.940
我们添加的这一额外层需要

01:09:09.630 --> 01:09:14.009
照顾所有不同的应用

01:09:11.940 --> 01:09:15.450
我们将要谈论的类型

01:09:14.009 --> 01:09:17.960
如果您当然想要，我们有时间

01:09:15.450 --> 01:09:17.960
还有一个问题

01:09:25.380 --> 01:09:32.319
丘比特或霍加api的问题是什么

01:09:30.609 --> 01:09:35.099
我们对丘比特的经验，因为

01:09:32.319 --> 01:09:37.779
因为它已经过时了

01:09:35.099 --> 01:09:41.009
这是一个实验项目，真正的

01:09:37.779 --> 01:09:43.329
目标是使用AMQP一通通话

01:09:41.009 --> 01:09:46.539
丘比特就像司机，他们有

01:09:43.329 --> 01:09:48.579
那个反应堆实际上是丘比特反应堆

01:09:46.539 --> 01:09:50.109
看起来很有趣的是

01:09:48.579 --> 01:09:52.900
支付空间再次我们不在那

01:09:50.109 --> 01:09:55.119
部门，我们只是与他们合作， 

01:09:52.900 --> 01:09:57.369
与他们的互动与

01:09:55.119 --> 01:09:59.019
你不想在那儿举猫，因为他们

01:09:57.369 --> 01:10:00.820
有道理，所以他们是主要的人之一

01:09:59.019 --> 01:10:04.030
驱动程序来验证这项工作可以

01:10:00.820 --> 01:10:05.079
如果您愿意，可以完成讨论

01:10:04.030 --> 01:10:07.119
之后，我可以给你一些名字

01:10:05.079 --> 01:10:10.150
您可以联系他们的人

01:10:07.119 --> 01:10:11.920
说话很好，谢谢大家

01:10:10.150 --> 01:10:13.539
在这里，如果你，我要出去玩

01:10:11.920 --> 01:10:16.499
大家请再问一个问题

01:10:13.539 --> 01:10:16.499
给我的问题谢谢

01:10:23.180 --> 01:10:25.240
您

