WEBVTT
Kind: captions
Language: zh-Hans

00:00:03.899 --> 00:00:12.000
首先我叫法蒂玛城堡

00:00:08.360 --> 00:00:16.049
想告诉你我是西班牙人

00:00:12.000 --> 00:00:18.330
英语不是很好，但是我为什么会

00:00:16.049 --> 00:00:19.500
好吧，我会尽量说英语

00:00:18.330 --> 00:00:24.660
尽我所能

00:00:19.500 --> 00:00:27.150
所以我为此道歉

00:00:24.660 --> 00:00:31.050
从事软件开发工作

00:00:27.150 --> 00:00:33.090
八年了，目前我从事Java工作

00:00:31.050 --> 00:00:35.579
架构师和Scrum主管

00:00:33.090 --> 00:00:39.360
范式无逻辑的软件公司

00:00:35.579 --> 00:00:41.070
我以前看过七年前

00:00:39.360 --> 00:00:44.309
专长于groovy和grails 

00:00:41.070 --> 00:00:48.690
技术，最近我很感兴趣

00:00:44.309 --> 00:00:51.629
最后我要推广项目

00:00:48.690 --> 00:00:56.149
找到两个组织者给我

00:00:51.629 --> 00:01:00.329
今天在这里住的机会很好

00:00:56.149 --> 00:01:04.320
插入我们将在此看到的内容

00:01:00.329 --> 00:01:06.329
先说说我要告诉你

00:01:04.320 --> 00:01:09.060
是关于流的介绍

00:01:06.329 --> 00:01:12.840
我正在开槽，所以如果您知道所有有关

00:01:09.060 --> 00:01:19.200
我都认为你可以看到任何新东西

00:01:12.840 --> 00:01:20.939
就像我已经说过的那样

00:01:19.200 --> 00:01:23.219
我要谈谈春天的心情

00:01:20.939 --> 00:01:25.740
和开槽以及可以在哪里使用

00:01:23.219 --> 00:01:29.909
证明您的流启动项目

00:01:25.740 --> 00:01:32.539
因为我认为通常什么时候

00:01:29.909 --> 00:01:35.899
有人谈论春天会

00:01:32.539 --> 00:01:38.450
考虑将Java作为开发语言

00:01:35.899 --> 00:01:42.659
因为他们不了解Ruby或他们

00:01:38.450 --> 00:01:46.439
不知道那可以在

00:01:42.659 --> 00:01:48.239
汽船项目，但是可以使用

00:01:46.439 --> 00:01:52.079
时髦作为春天心情中的语言

00:01:48.239 --> 00:01:54.179
甚至投影一些组件

00:01:52.079 --> 00:01:58.649
弹簧船的实现与

00:01:54.179 --> 00:02:01.439
粘合，所以我们去看一小段

00:01:58.649 --> 00:02:04.529
弹簧板的介绍很短

00:02:01.439 --> 00:02:08.039
介绍如何或在何处移动

00:02:04.529 --> 00:02:10.590
一起使用，例如使用

00:02:08.039 --> 00:02:14.640
 Gradle Gradle开发测试

00:02:10.590 --> 00:02:18.480
关于辐条框架的常规

00:02:14.640 --> 00:02:22.230
模板，或者为什么不在您的任何位置

00:02:18.480 --> 00:02:25.200
一个项目，我也会告诉你

00:02:22.230 --> 00:02:29.580
在流中使用多年

00:02:25.200 --> 00:02:32.280
会把它扔到坟墓外面，我会

00:02:29.580 --> 00:02:38.670
给你看很多感冒给你的例子

00:02:32.280 --> 00:02:44.250
我想在本次演讲中展示的所有内容

00:02:38.670 --> 00:02:46.770
放置什么促进它的原始

00:02:44.250 --> 00:02:49.880
春季拒登不允许您

00:02:46.770 --> 00:02:53.670
开发独立的春季MVC 

00:02:49.880 --> 00:02:55.860
应用很容易使用

00:02:53.670 --> 00:02:58.170
有许多配置

00:02:55.860 --> 00:03:00.989
极端项目，但随后有Streamwood 

00:02:58.170 --> 00:03:03.630
约定优于配置

00:03:00.989 --> 00:03:08.310
自动配置或使用

00:03:03.630 --> 00:03:12.300
注释消除了

00:03:08.310 --> 00:03:15.900
按顺序使用XML配置文件

00:03:12.300 --> 00:03:18.049
家庭流可以让您开始

00:03:15.900 --> 00:03:21.570
快速建立生产应用程序

00:03:18.049 --> 00:03:23.820
因为提供嵌入式容器

00:03:21.570 --> 00:03:26.760
和数据库根据

00:03:23.820 --> 00:03:29.400
依赖关系在构建中指定

00:03:26.760 --> 00:03:34.890
系统，因此您无需进行配置

00:03:29.400 --> 00:03:39.030
本来可以开始使用的工作

00:03:34.890 --> 00:03:41.790
当然所有这些期货的酝酿

00:03:39.030 --> 00:03:45.170
仅包括依赖或其他

00:03:41.790 --> 00:03:47.730
与之相关的依赖

00:03:45.170 --> 00:03:52.769
最终我们可以在

00:03:47.730 --> 00:03:55.220
快速转向提升CLI-当然

00:03:52.769 --> 00:03:58.380
您可以在文档中找到样本

00:03:55.220 --> 00:04:05.400
关于Streamwood的所有这些

00:03:58.380 --> 00:04:12.840
现在是网站的另一个主要演员

00:04:05.400 --> 00:04:15.930
谈话在增长，你知道增长是一个

00:04:12.840 --> 00:04:18.959
动态语言可选地与

00:04:15.930 --> 00:04:21.900
静态类型化和静态编译

00:04:18.959 --> 00:04:24.140
 Java的功能

00:04:21.900 --> 00:04:24.140
平台

00:04:24.310 --> 00:04:30.300
感谢NEC，表达语法是

00:04:27.220 --> 00:04:33.970
 Java开发人员易于学习

00:04:30.300 --> 00:04:37.210
此外，它易于集成

00:04:33.970 --> 00:04:40.630
任何提供强大功能的Java程序

00:04:37.210 --> 00:04:43.270
过滤器，包括关闭运行时和

00:04:40.630 --> 00:04:47.110
编译时元编程功能

00:04:43.270 --> 00:04:50.770
编程正在创建强大的测试，因此

00:04:47.110 --> 00:04:53.770
因此，如果我们结合了

00:04:50.770 --> 00:04:56.350
用Rubik的未来打造的流

00:04:53.770 --> 00:04:59.590
获得一些强大的工具

00:04:56.350 --> 00:05:02.410
允许开发人员轻松进行

00:04:59.590 --> 00:05:10.450
更有趣，更有趣

00:05:02.410 --> 00:05:13.210
让我让我解决的方式

00:05:10.450 --> 00:05:18.010
首先采样，我们将看到

00:05:13.210 --> 00:05:19.870
我们可以做的小而有力的例子

00:05:18.010 --> 00:05:22.990
开发一个可以

00:05:19.870 --> 00:05:27.460
将其包含在一条推文中并执行

00:05:22.990 --> 00:05:30.970
很快我们正在测试良好的CLI，但是

00:05:27.460 --> 00:05:36.610
在此之前，我想谈一谈

00:05:30.970 --> 00:05:40.780
有用的有用工具可能是您已经

00:05:36.610 --> 00:05:45.070
知道这个工具是Vivian吗？ 

00:05:40.780 --> 00:05:49.479
 Vivian是的，这是团体环境

00:05:45.070 --> 00:05:52.479
经理工具用于经理管理

00:05:49.479 --> 00:05:54.870
多个软件版本

00:05:52.479 --> 00:06:00.760
开发套件，例如Ruby Graves 

00:05:54.870 --> 00:06:05.830
径流，但我会用它

00:06:00.760 --> 00:06:09.460
在示例中使用它们，您可以

00:06:05.830 --> 00:06:13.419
 Dolan在其网站上下载是

00:06:09.460 --> 00:06:16.960
进入插座，它运行得最独特

00:06:13.419 --> 00:06:20.710
系统作为Linux Mac Solaris或

00:06:16.960 --> 00:06:25.979
我们说胜利的窗户是用公共汽车和

00:06:20.710 --> 00:06:25.979
当然只取决于并解压缩

00:06:28.990 --> 00:06:37.060
这些是我们的实际候选人

00:06:32.870 --> 00:06:41.840
成长，我们并不是真正的候选人

00:06:37.060 --> 00:06:43.729
快速向您展示如何在TVN上安装TVN 

00:06:41.840 --> 00:06:47.120
如何安装安装最新

00:06:43.729 --> 00:06:50.509
您可以在其中看到的弹簧模式版本

00:06:47.120 --> 00:06:55.879
该线首先安装，并在

00:06:50.509 --> 00:06:58.189
 TVN工具以及您之后的一些行

00:06:55.879 --> 00:07:04.520
必须在公共汽车上写

00:06:58.189 --> 00:07:07.400
 Persie与独特的系统作战，这是

00:07:04.520 --> 00:07:10.490
给定工具的有用命令列表

00:07:07.400 --> 00:07:14.029
例如帮助说明如何使用EVM 

00:07:10.490 --> 00:07:16.159
租赁可用版本安装

00:07:14.029 --> 00:07:21.889
版本是古巴版本

00:07:16.159 --> 00:07:25.939
使用安装指定将看到

00:07:21.889 --> 00:07:27.740
框架vm的所有者，用于指定

00:07:25.939 --> 00:07:32.839
您想要的框架版本

00:07:27.740 --> 00:07:34.580
在此终端中使用UBN默认为

00:07:32.839 --> 00:07:38.479
指定框架的合作

00:07:34.580 --> 00:07:40.969
您想一直使用或给予的

00:07:38.479 --> 00:07:44.089
孩子列出所有当前版本

00:07:40.969 --> 00:07:47.120
您已安装的所有Springvale或

00:07:44.089 --> 00:07:50.860
分别在框架上卸载

00:07:47.120 --> 00:07:55.729
也要安装框架

00:07:50.860 --> 00:08:01.789
这是最时髦的代码

00:07:55.729 --> 00:08:05.860
剪辑，你可以布朗这些可以

00:08:01.789 --> 00:08:05.860
包含在零食中

00:08:06.069 --> 00:08:16.759
在这里，我们有一些行

00:08:10.810 --> 00:08:19.069
诺丁汉，我在休息时有注解

00:08:16.759 --> 00:08:21.710
控制器，这意味着这是一个

00:08:19.069 --> 00:08:25.069
北部控制器组件

00:08:21.710 --> 00:08:30.289
注释，例如请求地图

00:08:25.069 --> 00:08:31.789
到后来我的URI终于一个简单的

00:08:30.289 --> 00:08:35.990
返回消息的方法

00:08:31.789 --> 00:08:37.140
 helloworld要执行此操作，我们打开我们的

00:08:35.990 --> 00:08:40.650
终端和

00:08:37.140 --> 00:08:44.430
 -包含常规的部分

00:08:40.650 --> 00:08:53.510
脚本键入来自Hello World的Spring 

00:08:44.430 --> 00:08:53.510
那花开的执行，我们去看看

00:09:02.190 --> 00:09:05.090
好的

00:09:07.310 --> 00:09:20.620
好的，这是我的逃生

00:09:12.920 --> 00:09:20.620
好，我有

00:09:23.170 --> 00:09:35.100
安装一些版本的弹簧船

00:09:27.089 --> 00:09:35.100
所以如果我在字符串hello world中运行

00:09:47.160 --> 00:09:55.800
请启动应用程序启动其

00:09:53.640 --> 00:10:09.860
应用介绍

00:09:55.800 --> 00:10:09.860
所以如果我们去本地主机8080对不起

00:10:11.510 --> 00:10:16.120
你可以看到这很容易

00:10:29.220 --> 00:10:38.340
但是背后发生了什么

00:10:34.550 --> 00:10:42.170
这些Nissa水草，如果您想跑步

00:10:38.340 --> 00:10:45.300
我们看到有点像这样，但是

00:10:42.170 --> 00:10:48.510
真的，如果我们要执行此常规

00:10:45.300 --> 00:10:51.000
开槽排泄它必须有这些

00:10:48.510 --> 00:10:55.670
您知道的线会损害使用

00:10:51.000 --> 00:11:00.720
葡萄是我们的依赖性经理

00:10:55.670 --> 00:11:02.970
嵌入groovy让您快速添加

00:11:00.720 --> 00:11:05.760
 Maven存储库对您的依赖

00:11:02.970 --> 00:11:09.870
类路径，甚至可以编写脚本

00:11:05.760 --> 00:11:13.560
简单的保险丝就像

00:11:09.870 --> 00:11:15.620
为您的脚本添加一个符号

00:11:13.560 --> 00:11:19.170
好

00:11:15.620 --> 00:11:26.040
我还必须包括一些输入和一个

00:11:19.170 --> 00:11:30.740
您可以在这里看到的主要方法

00:11:26.040 --> 00:11:30.740
我们去执行

00:11:36.019 --> 00:11:47.730
这是与伟大的脚本

00:11:41.819 --> 00:11:49.910
如果我要求您撤回，请使用等级

00:11:47.730 --> 00:11:49.910
它

00:11:54.920 --> 00:12:06.980
这些都一样，我们

00:11:57.950 --> 00:12:09.910
就像好吧，我们去了

00:12:06.980 --> 00:12:09.910
一样好

00:12:18.450 --> 00:12:25.560
现在你能在什么中使用bruit 

00:12:23.820 --> 00:12:29.880
你能介绍各种胶水吗

00:12:25.560 --> 00:12:33.149
简而言之，远程应用程序

00:12:29.880 --> 00:12:35.459
好的，但是我们去看看不同的地方

00:12:33.149 --> 00:12:41.010
专业人士尚未使用的网站

00:12:35.459 --> 00:12:44.670
 groovy点点滴滴的第一个选择是

00:12:41.010 --> 00:12:50.100
在构建过程中您的常规

00:12:44.670 --> 00:12:52.230
使用带有旋转启动的Gradle的项目

00:12:50.100 --> 00:12:56.850
可以用Maven建立我们的项目，但是

00:12:52.230 --> 00:12:59.279
我们也可以使用信用

00:12:56.850 --> 00:13:04.920
与我们必须管理的Maven集成

00:12:59.279 --> 00:13:07.529
静态是ml 5电话点XML文件

00:13:04.920 --> 00:13:11.300
但是有了Gradle，我们可以灵活地

00:13:07.529 --> 00:13:13.769
模块化的groovy文件，更易于

00:13:11.300 --> 00:13:18.720
阅读感谢友好的烧结基地

00:13:13.769 --> 00:13:21.180
在Groovy DSL上并读取模型

00:13:18.720 --> 00:13:25.410
有了Gradle，我们拥有了一座强大的建筑

00:13:21.180 --> 00:13:27.600
具有未来许多功能的工具

00:13:25.410 --> 00:13:30.839
作为超级正式部署，但具有依赖性

00:13:27.600 --> 00:13:34.260
基于Apache Ivy的管理

00:13:30.839 --> 00:13:37.170
在Ivy上与Maven超级集成

00:13:34.260 --> 00:13:40.170
仓库也有很多

00:13:37.170 --> 00:13:47.300
蚂蚁管理我们的任务

00:13:40.170 --> 00:13:50.850
应用程序，我们去看一些代码

00:13:47.300 --> 00:13:54.060
安装Gradle并创建Spring Boot 

00:13:50.850 --> 00:13:58.980
我们可以下载一个管理我们的版本

00:13:54.060 --> 00:14:02.640
天气，后来我们

00:13:58.980 --> 00:14:06.660
只需要在Gradle上创建一个build 

00:14:02.640 --> 00:14:10.680
具有某些依赖性的文件执行

00:14:06.660 --> 00:14:13.829
通用无线电法案，用于汇编测试

00:14:10.680 --> 00:14:17.490
将这些代码汇编成敏捷文件

00:14:13.829 --> 00:14:22.860
这些是要执行的几行吗

00:14:17.490 --> 00:14:25.380
例如，如果我们执行Gradle测试， 

00:14:22.860 --> 00:14:27.920
可以看到可供我们使用的列表

00:14:25.380 --> 00:14:27.920
项目

00:14:28.800 --> 00:14:36.360
这是制作预告片的示例

00:14:32.370 --> 00:14:40.019
开始与汽船合作，我们

00:14:36.360 --> 00:14:45.990
可以看到一些插件，例如groovy idea 

00:14:40.019 --> 00:14:49.440
还是极限船，我们也有

00:14:45.990 --> 00:14:52.110
关于5年级的配置

00:14:49.440 --> 00:14:54.839
在下面的项目版本中命名

00:14:52.110 --> 00:14:57.570
存储库是配置， 

00:14:54.839 --> 00:15:00.600
依赖性，如果您包括一些

00:14:57.570 --> 00:15:03.930
插入更多并执行测试

00:15:00.600 --> 00:15:06.990
常见，您将继续执行任务

00:15:03.930 --> 00:15:08.910
大头钉与

00:15:06.990 --> 00:15:16.850
那里可用的依赖项

00:15:08.910 --> 00:15:23.250
项目这是主要的应用

00:15:16.850 --> 00:15:26.100
类从旋转启动开始

00:15:23.250 --> 00:15:29.130
仅示例，我们主要

00:15:26.100 --> 00:15:33.329
方法和符号被打印

00:15:29.130 --> 00:15:35.930
申请开始我们去了安全

00:15:33.329 --> 00:15:35.930
样品

00:15:42.310 --> 00:15:48.250
我们去停下来

00:16:00.140 --> 00:16:11.230
我创建一个

00:16:32.019 --> 00:16:50.350
我们创建他们的剃刀文件，然后创建

00:16:42.529 --> 00:16:50.350
一个新的应用程序类

00:16:58.339 --> 00:17:14.429
现在，如果我们运行，如果我们运行得很好，这

00:17:11.819 --> 00:17:23.699
显示了此标签的术语列表

00:17:14.429 --> 00:17:33.590
这是现在，但是如果我编辑已评分

00:17:23.699 --> 00:17:33.590
并复制

00:17:50.200 --> 00:17:55.769
我执行游戏

00:17:58.970 --> 00:18:04.660
我有一个儿子

00:18:06.670 --> 00:18:18.390
有时更多例如与

00:18:09.610 --> 00:18:24.040
 ID插件好了，现在我编辑

00:18:18.390 --> 00:18:28.080
 groovy文件并将其放入的应用程序

00:18:24.040 --> 00:18:28.080
示例行

00:18:46.080 --> 00:18:48.920
我不是

00:18:50.920 --> 00:18:55.150
来咬我

00:19:00.169 --> 00:19:02.830
哎呀

00:19:02.909 --> 00:19:09.019
所以我很好没有孩子

00:19:15.910 --> 00:19:24.460
这是一个立方体，圣诞老人终于

00:19:19.030 --> 00:19:27.030
成功，现在剃刀运行

00:19:24.460 --> 00:19:27.030
应用

00:19:30.200 --> 00:19:34.190
昨天申请

00:19:35.950 --> 00:19:41.460
而且那个应用程序是错误的好吗

00:19:44.440 --> 00:19:57.460
好吧，我继续举例

00:19:52.750 --> 00:19:59.710
下一个方面是使用Spock进行测试

00:19:57.460 --> 00:20:04.140
你知道Spock的答案框架吗

00:19:59.710 --> 00:20:09.790
测试应用程序，是的，这是

00:20:04.140 --> 00:20:11.980
另一个网站，你搞砸了他

00:20:09.790 --> 00:20:15.550
使用框架实施测试

00:20:11.980 --> 00:20:19.390
 Spock对我来说是我最喜欢的部分

00:20:15.550 --> 00:20:22.090
我喜欢用Ruby实现， 

00:20:19.390 --> 00:20:29.860
发言框架，我认为这非常

00:20:22.090 --> 00:20:33.990
轻松地上是有趣的，好吧，我说的不是

00:20:29.860 --> 00:20:36.670
只是一个测试框架而Spock是一个

00:20:33.990 --> 00:20:40.540
 groovy和Java规范

00:20:36.670 --> 00:20:44.620
表达语言的项目

00:20:40.540 --> 00:20:47.550
它也是基于ruby dsls的

00:20:44.620 --> 00:20:51.400
使我们的测试变得易于阅读和

00:20:47.550 --> 00:20:54.820
此外，当

00:20:51.400 --> 00:20:57.630
断言失败并且轴非常

00:20:54.820 --> 00:21:03.930
非常直观，也易于阅读

00:20:57.630 --> 00:21:08.410
我们去看一些例子

00:21:03.930 --> 00:21:15.940
这是Spock的测试

00:21:08.410 --> 00:21:18.550
在此示例中，我们可以使用Google Maps API 

00:21:15.940 --> 00:21:22.000
看到我们说的可以定义测试

00:21:18.550 --> 00:21:24.100
带有描述性签名，我们可以

00:21:22.000 --> 00:21:26.860
以直观的方式组织代码

00:21:24.100 --> 00:21:31.780
例如给定或设置

00:21:26.860 --> 00:21:34.990
初始变量例如

00:21:31.780 --> 00:21:38.200
执行一个动作然后测试

00:21:34.990 --> 00:21:42.310
结果在这个块中，我们需要一个我们需要

00:21:38.200 --> 00:21:46.890
仅在我们的句子为真的情况下进行测试

00:21:42.310 --> 00:21:46.890
是否通过使用Ruby true 

00:21:47.040 --> 00:21:55.500
这是另一个例子

00:21:51.040 --> 00:21:59.400
这种情况下，我们必须阻止小是

00:21:55.500 --> 00:22:04.200
我们可以通过这些块进行测试

00:21:59.400 --> 00:22:08.580
仅在不同的数据组合

00:22:04.200 --> 00:22:11.250
一个测试以后，我们将看到

00:22:08.580 --> 00:22:24.840
迭代失败了，没有

00:22:11.250 --> 00:22:28.860
在这里我们可以轻松建立权重

00:22:24.840 --> 00:22:29.580
员工也很容易

00:22:28.860 --> 00:22:32.280
失败

00:22:29.580 --> 00:22:34.549
除此之外，我们还有更多

00:22:32.280 --> 00:22:38.250
具有不同税种的功能和

00:22:34.549 --> 00:22:41.390
您可以访问的实用程序

00:22:38.250 --> 00:22:44.820
这些样品的味道文档以及

00:22:41.390 --> 00:22:48.510
我认为这是对

00:22:44.820 --> 00:22:53.220
从开槽开始，了解期货， 

00:22:48.510 --> 00:22:58.169
语言的简单性是

00:22:53.220 --> 00:23:00.720
言语融洽的例子

00:22:58.169 --> 00:23:04.309
这种情况下我们可以看到不同

00:23:00.720 --> 00:23:12.030
空中测试的迭代和

00:23:04.309 --> 00:23:17.880
什么失败什么失败什么不好

00:23:12.030 --> 00:23:18.659
如果您必须将辐条用于

00:23:17.880 --> 00:23:20.669
 spring boot 

00:23:18.659 --> 00:23:29.760
您必须在其中包含这些依赖项

00:23:20.669 --> 00:23:32.429
游行l5好一点，你想

00:23:29.760 --> 00:23:36.659
查看更多信息，例如

00:23:32.429 --> 00:23:41.130
这些在这边还有更多

00:23:36.659 --> 00:23:43.890
这些边狗的例子

00:23:41.130 --> 00:23:45.870
 Spring Framework ，所有的一切

00:23:43.890 --> 00:23:49.890
今年春天的文件

00:23:45.870 --> 00:23:52.520
框架，现在转到AC多维数据集是

00:23:49.890 --> 00:23:52.520
样本

00:23:53.110 --> 00:23:59.280
我有这个项目

00:24:11.779 --> 00:24:20.419
这是一个简单的解释汽船

00:24:16.519 --> 00:24:25.450
项目，我们有应用程序主体

00:24:20.419 --> 00:24:28.450
他们已经被分级的课程，没有

00:24:25.450 --> 00:24:28.450
依存关系

00:24:39.300 --> 00:24:53.660
我用facebook实现这方面

00:24:47.750 --> 00:24:53.660
这是我以前看到的例子

00:24:54.110 --> 00:25:03.950
好吧，现在我去执行

00:25:07.640 --> 00:25:16.550
教育测试，这是标签列表

00:25:12.900 --> 00:25:16.550
的等级

00:25:32.310 --> 00:25:37.730
好的

00:25:34.470 --> 00:25:37.730
我们有他们的结果

00:25:41.280 --> 00:25:54.230
执行执行的输出好了

00:25:47.820 --> 00:25:54.230
我们去看看生成的报告

00:26:12.860 --> 00:26:24.940
这是报告，这是

00:26:16.370 --> 00:26:30.460
在这种情况下，在这种情况下可以执行

00:26:24.940 --> 00:26:30.460
我们无法打印

00:26:30.550 --> 00:26:40.740
地址的不同值

00:26:33.490 --> 00:26:40.740
多变的摇滚

00:26:41.040 --> 00:26:48.570
好吧，我们继续

00:26:56.320 --> 00:27:08.470
我说过在任何地方都可以使用groovy 

00:27:03.400 --> 00:27:11.260
在我们的流中，我们可以

00:27:08.470 --> 00:27:16.120
在控制器中使用常规

00:27:11.260 --> 00:27:20.080
以任何方式对存储库服务进行分类

00:27:16.120 --> 00:27:24.250
如果需要，可以将Java和

00:27:20.080 --> 00:27:28.240
 Ruby很容易，那就是如果我们需要

00:27:24.250 --> 00:27:30.790
 Java中的类的一个原因，你知道

00:27:28.240 --> 00:27:33.670
 groovy中的类是可能的

00:27:30.790 --> 00:27:36.910
好，你必须知道最

00:27:33.670 --> 00:27:39.970
明显的槽纹的重要特征

00:27:36.910 --> 00:27:43.480
在Java上，我们的应用程序将

00:27:39.970 --> 00:27:46.900
表现力非常简单和灵活

00:27:43.480 --> 00:27:51.580
并会减少代码，如果有的话

00:27:46.900 --> 00:27:55.570
更少的代码，更少的错误

00:27:51.580 --> 00:27:57.910
而且生产力更高

00:27:55.570 --> 00:28:01.120
 groobie我们有很多功能

00:27:57.910 --> 00:28:05.800
比Jara可用，因为我们

00:28:01.120 --> 00:28:09.100
将GDK作为jdk的站提供

00:28:05.800 --> 00:28:12.490
关于使用的许多功能

00:28:09.100 --> 00:28:15.150
字符串集合控制结构

00:28:12.490 --> 00:28:19.020
封闭等

00:28:15.150 --> 00:28:22.030
最后，您可以考虑一下

00:28:19.020 --> 00:28:24.340
在运行时计算我们的动态

00:28:22.030 --> 00:28:27.010
打字，但是如果你担心这个

00:28:24.340 --> 00:28:30.910
您必须知道可以使用静态

00:28:27.010 --> 00:28:33.550
编译或静态键入

00:28:30.910 --> 00:28:38.050
注释在编译静态和边

00:28:33.550 --> 00:28:40.320
简而言之，请全部上课

00:28:38.050 --> 00:28:43.600
你在想

00:28:40.320 --> 00:28:48.240
您认为可以使用Java进行的所有操作

00:28:43.600 --> 00:28:51.940
您可以使用groovy等等

00:28:48.240 --> 00:28:55.050
现在我将向您展示如何计算

00:28:51.940 --> 00:28:59.770
插入数组IPI与我们的主要班级

00:28:55.050 --> 00:29:04.230
 JP我控制的存储库

00:28:59.770 --> 00:29:06.899
字符串数据竞赛和JPA的春天

00:29:04.230 --> 00:29:08.669
好吧，这是一个非常简单的例子，但是

00:29:06.899 --> 00:29:14.760
你可以完成我们很多

00:29:08.669 --> 00:29:19.230
您想要的功能是

00:29:14.760 --> 00:29:23.330
我们解释了其他主要类别的例子

00:29:19.230 --> 00:29:30.149
在Jaypee进行简单的客户培训

00:29:23.330 --> 00:29:35.429
每个发出三个三个属性

00:29:30.149 --> 00:29:39.960
字符串，这里有一个存储库

00:29:35.429 --> 00:29:46.889
字符串上旋转数据速率的类别

00:29:39.960 --> 00:29:52.279
数据GPA我使用数据注释

00:29:46.889 --> 00:29:55.649
仓库着装研究，我定义

00:29:52.279 --> 00:30:00.840
访问路径上的关系

00:29:55.649 --> 00:30:05.820
今天的客户，只有这里

00:30:00.840 --> 00:30:08.480
二实施方法找我的姓

00:30:05.820 --> 00:30:08.480
好的

00:30:08.600 --> 00:30:19.830
后来这是我们的例子

00:30:12.149 --> 00:30:24.899
客户控制器我们唯一的方法

00:30:19.830 --> 00:30:29.850
通过ID有趣，但其他方法

00:30:24.899 --> 00:30:32.490
在以下位置提供存储库

00:30:29.850 --> 00:30:35.580
 groovy在应用中的应用

00:30:32.490 --> 00:30:41.429
课上我加了几行

00:30:35.580 --> 00:30:44.580
标题专家的客户然后附加NC 

00:30:41.429 --> 00:30:50.940
是你需要开始与

00:30:44.580 --> 00:30:53.460
例如我们的房车极值开始

00:30:50.940 --> 00:31:00.809
由

00:30:53.460 --> 00:31:04.950
 GPA例如a8到数据库

00:31:00.809 --> 00:31:08.480
您可以在该网站上找到更多示例， 

00:31:04.950 --> 00:31:08.480
有关此示例的文档

00:31:09.680 --> 00:31:14.320
我去执行例子

00:31:44.370 --> 00:31:55.980
我们可以看到客户域类

00:31:50.340 --> 00:32:04.820
客户控制者客户

00:31:55.980 --> 00:32:10.190
存储库，我也添加了一些

00:32:04.820 --> 00:32:18.720
测试我怀疑的客户

00:32:10.190 --> 00:32:21.510
今天的IP我穿好了，创建一个

00:32:18.720 --> 00:32:29.640
通过种族和最终客户吸引新客户

00:32:21.510 --> 00:32:33.470
通过休息以及客户的尊重

00:32:29.640 --> 00:32:33.470
到这个仓库

00:32:34.910 --> 00:32:48.190
现在可以期待和工作了

00:32:42.800 --> 00:32:48.190
去执行一些最好的肉汁

00:33:25.560 --> 00:33:27.620
哦

00:33:39.530 --> 00:33:42.280
好的

00:33:48.910 --> 00:33:51.960
如果我走

00:34:08.179 --> 00:34:11.290
发生了什么

00:34:17.620 --> 00:34:20.620
一

00:34:28.290 --> 00:34:33.179
抱歉，不会看到发生了什么

00:34:43.920 --> 00:34:46.920
顾客

00:35:22.600 --> 00:35:24.630
哦

00:35:38.119 --> 00:35:43.640
对不起，我不知道为什么这些都不起作用

00:35:45.710 --> 00:36:00.509
是的，但是在客户存储库中

00:35:52.249 --> 00:36:02.930
至少我有不好的顾客

00:36:00.509 --> 00:36:02.930
不知道

00:37:04.850 --> 00:37:10.390
你知道我尝试再次清洁和工作

00:37:07.520 --> 00:37:10.390
抱歉

00:37:13.800 --> 00:37:17.090
是你认为

00:37:29.590 --> 00:37:32.590
好的

00:38:17.290 --> 00:38:20.220
好的

00:38:21.380 --> 00:38:24.160
请

00:38:53.380 --> 00:38:55.979
跑

00:39:50.040 --> 00:39:52.820
好的

00:39:59.310 --> 00:40:09.650
谢谢，没有申请的名字

00:40:02.240 --> 00:40:09.650
双方是

00:40:12.820 --> 00:40:14.880
一世

00:40:17.150 --> 00:40:26.930
不，我不是，不是，我看不到

00:40:36.920 --> 00:40:39.580
抱歉

00:40:45.609 --> 00:41:00.390
我尝试用打火机注意什么

00:40:50.170 --> 00:41:09.809
碰巧这是Jason与

00:41:00.390 --> 00:41:16.470
客户，我也可以说119或

00:41:09.809 --> 00:41:16.470
找到我的姓

00:41:32.260 --> 00:41:40.380
好的

00:41:35.220 --> 00:41:52.440
好吧，这是我穿着的IP的样本

00:41:40.380 --> 00:41:54.770
使用Ruby我继续使用Ruby 10 

00:41:52.440 --> 00:41:54.770
盘子

00:41:55.520 --> 00:42:02.369
另一种可能性是使用groovy 

00:41:58.890 --> 00:42:05.910
模板胶是一个模板框架

00:42:02.369 --> 00:42:09.450
基于允许的标记公会构建

00:42:05.910 --> 00:42:13.020
一种漂亮而简单的书写方式

00:42:09.450 --> 00:42:16.140
使用Ruby DSL进行价值评估

00:42:13.020 --> 00:42:20.130
提供替换变量的简便方法

00:42:16.140 --> 00:42:23.640
在视图中，您可以使用滑出

00:42:20.130 --> 00:42:29.400
我们接下来要去的Ruby 10个地方

00:42:23.640 --> 00:42:31.890
我去告诉你如何使用的例子

00:42:29.400 --> 00:42:34.530
常规模板，然后是一种新方法

00:42:31.890 --> 00:42:39.660
在我们的控制器中，有一个新控制器

00:42:34.530 --> 00:42:44.190
渲染主页，这是一个模板

00:42:39.660 --> 00:42:48.930
出租客户，我们很开心

00:42:44.190 --> 00:42:53.069
将阻止我们的客户列表在哪里

00:42:48.930 --> 00:42:59.369
重复，每个名字都叫

00:42:53.069 --> 00:43:02.490
如您所见，以Li元素印制

00:42:59.369 --> 00:43:06.780
我们可以通过租赁契约

00:43:02.490 --> 00:43:11.250
如果我们逐个迭代

00:43:06.780 --> 00:43:13.530
在模型中返回此v1，我们将其发送给

00:43:11.250 --> 00:43:19.470
客户叶我们得到结果

00:43:13.530 --> 00:43:23.550
我们去看看正在运行的应用程序可以

00:43:19.470 --> 00:43:27.869
使用这个你需要添加这个依赖

00:43:23.550 --> 00:43:31.650
他们将积分，将战斗确定

00:43:27.869 --> 00:43:34.440
刺激将是模板

00:43:31.650 --> 00:43:39.000
这些网站，您可以看到更多

00:43:34.440 --> 00:43:41.810
我去使用模板的例子

00:43:39.000 --> 00:43:41.810
执行

00:43:55.400 --> 00:43:59.769
我喜欢这个顶级应用

00:44:11.200 --> 00:44:21.230
我们有一个新的家庭控制器

00:44:14.840 --> 00:44:25.720
你和我的课堂模型

00:44:21.230 --> 00:44:31.400
然后在视图的路径中通过

00:44:25.720 --> 00:44:38.980
一些变量好吗

00:44:31.400 --> 00:44:43.420
视图在这里资源然后板

00:44:38.980 --> 00:44:50.390
来自模板的视图，这是模板

00:44:43.420 --> 00:44:53.599
我们也应用布局这是

00:44:50.390 --> 00:44:56.810
布局还可以，因为您可以看到它非常

00:44:53.599 --> 00:45:07.420
简单定义一些组件

00:44:56.810 --> 00:45:10.420
在此示例中，html5的元素

00:45:07.420 --> 00:45:10.420
通过

00:45:13.720 --> 00:45:20.260
有人可以用这种方式赚钱好吗

00:45:18.190 --> 00:45:23.530
这条路

00:45:20.260 --> 00:45:34.109
客户控制中的另一种方法

00:45:23.530 --> 00:45:37.930
是我写给这些客户的

00:45:34.109 --> 00:45:41.680
你我的榜样，我走过了

00:45:37.930 --> 00:45:48.670
模板的视图，我通过列表

00:45:41.680 --> 00:45:53.880
在所有客户中，这是模板

00:45:48.670 --> 00:45:53.880
你可以看到我一些有趣的东西

00:47:07.210 --> 00:47:10.200
你可以投票

00:47:10.579 --> 00:47:13.579
顾客

00:47:25.089 --> 00:47:33.489
这是模板好吧，我打印列表

00:47:29.739 --> 00:47:38.799
客户，这是一个简单的链接

00:47:33.489 --> 00:47:44.079
回家的家庭控制器好吧，这是

00:47:38.799 --> 00:48:00.519
很简单，所以使用groovy 

00:47:44.079 --> 00:48:03.609
模板好，下一个方面是

00:48:00.519 --> 00:48:07.449
戈尔的使用会错过

00:48:03.609 --> 00:48:10.839
我们的年级和

00:48:07.449 --> 00:48:13.659
因为它耗尽了它的

00:48:10.839 --> 00:48:17.409
可以使用种族以外的东西

00:48:13.659 --> 00:48:22.509
这些允许访问关系数据库

00:48:17.409 --> 00:48:24.159
或带有Gore的MongoDB，例如

00:48:22.509 --> 00:48:27.400
春天的应用程序，包括代码

00:48:24.159 --> 00:48:30.209
与上帝对项目的依赖性

00:48:27.400 --> 00:48:33.999
将自动出现实体

00:48:30.209 --> 00:48:36.759
我们有动态的发现者条件

00:48:33.999 --> 00:48:39.459
专家和方法验证是

00:48:36.759 --> 00:48:42.779
不需要，我们不需要实现获取器

00:48:39.459 --> 00:48:48.299
和二传手，我们有一个隐含的

00:48:42.779 --> 00:48:52.229
构造函数隐式主键和

00:48:48.299 --> 00:48:57.789
使用此过滤器，我们的代码是均匀的

00:48:52.229 --> 00:49:00.999
甚至简单，唯一的问题是我没有

00:48:57.789 --> 00:49:07.299
知道这是否受到支持，还可以

00:49:00.999 --> 00:49:14.859
但是我去给你看一个例子，因为

00:49:07.299 --> 00:49:21.869
我认为有兴趣这是客户

00:49:14.859 --> 00:49:26.679
域类与神二世改变了

00:49:21.869 --> 00:49:27.429
 Java持久性的依赖关系

00:49:26.679 --> 00:49:33.909
 ils子

00:49:27.429 --> 00:49:37.460
坚持这很抱歉这是今天

00:49:33.909 --> 00:49:46.609
带有时髦和缺少金的类

00:49:37.460 --> 00:49:49.670
好，现在看看如何使用Alamein类

00:49:46.609 --> 00:49:51.890
以宿舍为例，我们可以实例化一个

00:49:49.670 --> 00:49:54.829
带有地图的类的新对象

00:49:51.890 --> 00:49:57.800
构造函数，我们现在定义了

00:49:54.829 --> 00:50:01.670
这个构造函数和诺丁汉，我们有

00:49:57.800 --> 00:50:06.109
没有实现的动态查找器

00:50:01.670 --> 00:50:13.099
某些属性的示例最终决赛

00:50:06.109 --> 00:50:15.950
得到更多的标准等等

00:50:13.099 --> 00:50:19.640
这些是这些

00:50:15.950 --> 00:50:23.300
您可以将其包含在

00:50:19.640 --> 00:50:27.619
您的Gradle会用来战斗

00:50:23.300 --> 00:50:30.849
与内特一起使用世界，我去

00:50:27.619 --> 00:50:30.849
给你看例子

00:50:55.750 --> 00:50:59.400
在中间

00:51:04.620 --> 00:51:08.570
我们从未去过那里

00:51:10.420 --> 00:51:13.770
我们跳舞晚了

00:51:21.479 --> 00:51:28.019
伟大的女孩，甚至内特·斯普林伍德都可以

00:51:28.259 --> 00:51:42.069
也只有我认为

00:51:39.880 --> 00:51:47.259
在这种情况下，员工对

00:51:42.069 --> 00:51:53.410
在应用程序中的持久性

00:51:47.259 --> 00:51:56.969
全班学习了创造新事物的方法

00:51:53.410 --> 00:52:02.709
客户找到与

00:51:56.969 --> 00:52:10.559
金属让我得到了我的最后一刻

00:52:02.709 --> 00:52:10.559
好的，现在我们开始运行

00:52:46.130 --> 00:52:51.920
用小镜子很难做到

00:52:49.410 --> 00:52:51.920
这个地方

00:53:52.690 --> 00:54:00.640
您现在可以看到我们还没有

00:53:56.760 --> 00:54:04.539
客户资源库，因为我们

00:54:00.640 --> 00:54:09.599
使用一个女孩，我们需要使用

00:54:04.539 --> 00:54:19.349
像春天一样

00:54:09.599 --> 00:54:19.349
 JPA我们去看看例子

00:54:21.280 --> 00:54:27.720
嗯，这是一样的，好的，没有变化

00:54:33.880 --> 00:54:43.040
最后是可以使用的东西

00:54:38.210 --> 00:54:47.870
 groovy，在这种情况下是

00:54:43.040 --> 00:54:50.210
 Graves是从Grails到

00:54:47.870 --> 00:54:54.080
那年秋天，我们可以使用这些作品吗

00:54:50.210 --> 00:54:55.730
在很棒的网站之外提供网页

00:54:54.080 --> 00:54:59.870
同样的情况，我不是真的

00:54:55.730 --> 00:55:06.950
确定当前是否支持，但是我

00:54:59.870 --> 00:55:10.070
去给你展示最弱的例子

00:55:06.950 --> 00:55:12.650
件，我们有很多包装

00:55:10.070 --> 00:55:16.100
现在可以用来制作图书馆

00:55:12.650 --> 00:55:19.330
我们的观点更简单，我们也可以创建

00:55:16.100 --> 00:55:22.280
轻松地我们自己的标签，或者我们可以定义

00:55:19.330 --> 00:55:30.260
注销模板并重用代码

00:55:22.280 --> 00:55:35.990
容易地，这是一些东西

00:55:30.260 --> 00:55:39.280
的一些标签中如何使用的代码集

00:55:35.990 --> 00:55:51.020
年件，例如条件标签

00:55:39.280 --> 00:55:55.880
如果并且仍然将其全部写入或使用

00:55:51.020 --> 00:56:00.560
一个迭代器与

00:55:55.880 --> 00:56:05.200
条件例如在这里也使用

00:56:00.560 --> 00:56:09.440
日期格式的渲染模板

00:56:05.200 --> 00:56:14.870
发送模型更多

00:56:09.440 --> 00:56:17.570
会谈我也提醒您可以

00:56:14.870 --> 00:56:23.270
轻松实现您的联系人

00:56:17.570 --> 00:56:27.880
他们依赖的视频空间

00:56:23.270 --> 00:56:27.880
这些需要包括

00:56:29.849 --> 00:56:43.739
我将完成两个任务

00:56:38.190 --> 00:56:50.519
谈话我想告诉我所有结论

00:56:43.739 --> 00:56:53.819
这就是为什么在使用开槽时要使用胶水的原因

00:56:50.519 --> 00:56:59.880
正如我之前所说的

00:56:53.819 --> 00:57:02.819
更少的代码行，因此更少的错误，如果

00:56:59.880 --> 00:57:07.459
您可以找到的错误更少

00:57:02.819 --> 00:57:11.069
轻松地进行，因此您将更有生产力

00:57:07.459 --> 00:57:15.119
记住groovy可以获得更多

00:57:11.069 --> 00:57:20.789
您项目的更多功能以及您

00:57:15.119 --> 00:57:24.859
可以执行很酷的测试，您可以使用

00:57:20.789 --> 00:57:26.579
很酷的实用程序，所以这是您拥有的

00:57:24.859 --> 00:57:30.059
为了我

00:57:26.579 --> 00:57:34.019
超级Beta版意味着我可以通过它

00:57:30.059 --> 00:57:38.009
那为什么不使用胶水

00:57:34.019 --> 00:57:40.739
两个应用程序都使用groovy尝试

00:57:38.009 --> 00:57:44.039
在应用程序中引入推特

00:57:40.739 --> 00:57:46.949
例如以口语测试开始

00:57:44.039 --> 00:57:53.630
后来在代码中介绍了凹槽

00:57:46.949 --> 00:57:57.930
例如您的服务等等

00:57:53.630 --> 00:58:01.190
在他们之前我已经完成了

00:57:57.930 --> 00:58:05.329
他们在凌晨4点钟前计时，但

00:58:01.190 --> 00:58:05.329
那就谢谢你了

